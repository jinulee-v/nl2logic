{"id": "prontoqa_train_0", "nl": "Each wumpus is a sterpus.", "fol": "all x. (wumpus(x) -> sterpus(x))", "prediction": ["all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "(all x.(Wumpus(x) -> Sterpus(x))", "all x y.((Wumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x y.((Wumpus(x) & Sterpus(y)) -> Has(x,y))", "all x.(Wumpus(x) -> Sterpus(x))", "all x y.((Wumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterepus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "exists x.(Wumpus(x) & Sterus(x))", "all x.(Wumpus(x) -> Sterepus(x))", "exists x.(Wumpus(x) & Sterpus(x))", "exists x.(Wumpus(x) & Sterpus(x))"]}
{"id": "prontoqa_train_1", "nl": "Polly is a jompus and Polly is not a sterpus and Polly is a dumpus.", "fol": "(jompus(Polly) & -sterpus(Polly) & dumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterpus(x)) & (Polly(x) -> Dumpus(x)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterpus(x)) & (Polly(x) -> Dumpus(x)))", "all x y z.((Polly(x) & Jompus(x) & Polly(y) & Sterpus(z)) -> (-Sterpus(y) & Dumpus(z)))", "all x y.((Polly(x) & Jompus(x) & Polly(y)) -> (-Sterpus(y) & Dumpus(y)))", "(all x y.((Polly(x) & Jompus(x)) -> Polly(y)) & ((Polly(x) & -Sterpus(y)) -> Dumpus(y)))", "(all x y.(Jompus(x) -> Polly(x)) & (-Sterpus(y) -> Polly(y))) & (-Sterpus(y) -> Polly(y)) & (-Sterpus(y) -> Polly(y)))", "all x y z.((Polly(x) & Jompus(x) & Polly(y) & Sterpus(z)) -> (-Sterpus(y) & Dumpus(z)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterepus(x)) & (Polly(x) -> Dumpus(x)))", "(all x y z.((Polly(x) & Jompus(x)) -> Polly(y)) & ((Polly(z) & -Sterpus(z)) -> Dumpus(z)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterepus(x)) & (Polly(x) -> Dumpus(x)))", "all x.(Polly(x) -> (Jompus(x) & -Sterpus(x) & Dumpus(x)))", "all x y.((Polly(x) & Jompus(x) & Polly(y)) -> (-Sterepus(y) & Dumpus(y)))", "all x y z.((Polly(x) & Jompus(x) & Polly(y) & Sterpus(z) & Dumpus(x)) -> (Jompus(x) & -Sterpus(y) & Dumpus(z)))", "exists x.(Polly(x) & Jompus(x) & -Sterpus(x) & Dumpus(x))", "all x.(Polly(x) -> (Jompus(x) & -Sterpus(x) & Dumpus(x)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterpus(x)) & (Polly(x) -> Dumpus(x)))"]}
{"id": "prontoqa_train_2", "nl": "Polly is not a wumpus.", "fol": "-wumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Wumpus(x))", "(-Wumpus(Polly))", "Polly is not a wumpus.", "all x.(Polly(x) -> -Wumpus(x))", "(-Wumpus(Polly))", "Polly is not a wumpus.", "(Wumpus(Polly) & -Wumpus(Polly))", "all x.(Wumpus(x) -> -Wumpus(x))", "Polly -Wumpus(Polly)", "all x.(Polly(x) -> -Wumpus(x))", "(-Wumpus(Polly))", "-Wumpus(Polly)", "all x.(Polly(x) -> -Wumpus(x))", "(-Wumpus(Polly))", "-Wumpus(Poly)", "-Wumpus(poly)"]}
{"id": "prontoqa_train_3", "nl": "Rompuses are lempuses.", "fol": "all x. (rompus(x) -> lempus(x))", "prediction": ["all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x y.((Rompus(x) & Lempuse(y)) -> Lempuse(x))", "(Lempuse(rompus) & Lempuse(rompus))", "all x.(Rompus(x) -> Lempuse(x))", "(all x.(Rompus(x) -> Lempuse(x))", "all x y.((Rompus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempus(x))", "All x.(Romes(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "All x.(Rompuse(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Romese(x) -> Lempuse(x))"]}
{"id": "prontoqa_train_4", "nl": "Rex is a lorpus and Rex is not a lempus and Rex is a numpus.", "fol": "(lorpus(Rex) & -lempus(Rex) & numpus(Rex))", "prediction": ["(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Numpus(x)))", "all x y z.((Rex(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) & -Lempus(x) & Numpus(x)))", "(all x y z.((Rex(x) & Lorpus(y)) -> (Lorpus(x) & -Lempus(y)) & ((Rex(z) & Numpus(z))) -> (Numpus(z))))", "(all x y.(Lorpus(x) -> Rex)) & (Lempus(y) -> Rex)) & (Numpus(y) -> Rex)))", "all x y.((Rex(x) & Lorpus(x)) -> (-Lempus(x) & Numpus(y)))", "(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Numpus(x)))", "all x y z.((Rex(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) & -Lempus(y) & Numpus(z)))", "(all x.(Rex(x) -> Llorpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Numpus(x)))", "(all x.(Rex(x) -> Lorpus(x)) & (-Lempus(x) & -Numpus(x)))", "all x y z.((Rex(x) & Lorpus(x) & Lempus(y) & Numpus(z)) -> (Lorpus(x) & -Lempus(y) & Numpus(z)))", "(all x.(Lorpus(x) -> Rex)) & (-Lempus(x) -> Rex)) & (Numpus(x) -> Rex)))", "all x.(Rex(x) -> (Lorpus(x) & -Lempus(x) & Numpus(x)))", "(all x y.(Lorpus(x) -> Rex(x)) & (-Lempus(y) -> Rex(y)) & (Numpus(y) -> Rex(y)))", "all x y.((Rex(x) & Lorpus(x)) -> (-Lempus(x) & Numpus(y)))", "(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Numpus(x)))", "all x.(Rex(x) -> (Lorpus(x) & -Lempus(x) & Numpus(x)))"]}
{"id": "prontoqa_train_5", "nl": "Rex is not a rompus.", "fol": "-rompus(Rex)", "prediction": ["(-Rompus(Rex))", "all x.(Rex(x) -> -Rompus(x))", "Rex is not a Rompus.", "(Rompus(Rex) & -Rompus(Rex))", "Rex is not a rompus.", "-Rompus(Rex)", "(-rompus(Rex))", "all x.(Rex(x) -> -Rompus(x))", "Rex -Rompus(x)", "Rex is not a Rompus.", "(-Rompus(Rex))", "Rex is not a rompus.", "Rex, a rompus, n.", "all x.(Rex(x) -> -Rompus(x))", "-Rompus(Rex)", "-Rompus(Rex)"]}
{"id": "prontoqa_train_6", "nl": "Numpuses are impuses.", "fol": "all x. (numpus(x) -> impus(x))", "prediction": ["all x.(Numpus(x) -> Issue(x))", "all x y.((Numpus(x) & Issue(y)) -> Issue(x,y))", "all x.(Numpuse(x) -> Issue(x))", "all x.(Numpus(x) -> Issue(x))", "all x y.((Numpuse(x) & Issue(y)) -> Issue(x,y))", "(Impacts(Numpuses,y) & -Impacts(y))", "(Issue(Numpus) | Issue(Numpus))", "all x.(Numptus(x) -> Issue(x))", "all x.(Numpuse(x) -> Impects(x))", "all x y.((Numpus(x) & Issue(y)) -> Issue(x,y))", "all x.(Numpuse(x) -> Impenet(x))", "all x.(Numpus(x) -> Issue(x))", "All x.(Numptus(x) -> Issue(x))", "all x.(Numpus(x) -> Issues(x))", "all x.(Numpuse(x) -> Impermissible(x))", "all x.(Numpus(x) -> Impose(x))"]}
{"id": "prontoqa_train_7", "nl": "Wren is not an impus and Wren is a tumpus and Wren is a wumpus.", "fol": "(-impus(Wren) & tumpus(Wren) & wumpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Impossible(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> Wumpus(z)))", "all x y z.((Wren(x) & Tumpus(y) & Wren(z)) -> (-Impossible(x) & Tumpus(y) & Wumpus(z)))", "(all x.(Wren(x) -> -Impossible(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> Wumpus(x)))", "(all x y.(Wren(x) -> -Impossible(x)) & ((Wren(y) & Tumpus(y)) | (Wren(y) & Tumpus(y)))))", "all x y.((Wren(x) & Wren(y)) -> (-Impossible(x) & Tumpus(y) & Wumpus(y)))", "all x.(Wren(x) -> (-Impossible(x) & Tumpus(x) & Wren(x)))", "(all x y z.((Wren(x) & Impossible(y) & Tumpus(z)) -> (-Impossible(x) & Tumpus(z) & Wren(x)))", "(-Impossible(Wren) & Tumpus(Wren) & Wumpus(Wren))", "all x y z.((Wren(x) & Tumpus(y) & Wren(z)) -> (-Impossible(x) & Tumpus(y) & Wumpus(z)))", "(all x.(Wren(x) -> -Impossible(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> Wumpus(z)))", "exists x.(Wren(x) & -Impossible(x) & Tumpus(x) & Wumpus(x))", "all x y z.((Wren(x) & Tumpus(y) & Wren(z)) -> (-IsImpossible(x) & Tumpus(y) & Wumpus(z)))", "all x y.((Wren(x) & Wren(y)) -> (-Impossible(x) & Tumpus(y) & Wumpus(y)))", "(all x y.(Wren(x) -> -Impossible(x)) & ((Wren(y) & Tumpus(y)) | (Wren(y) & Tumpus(y))))", "(all x.(Wren(x) -> -Impossible(x)) & (Tumpus(x) | Wumpus(x)))", "all x y z.((Wren(x) & Tumpus(y) & Wren(z)) -> (-IsImpossible(x) & IsWumpus(y)))"]}
{"id": "prontoqa_train_8", "nl": "Wren is not a numpus.", "fol": "-numpus(Wren)", "prediction": ["all x.(Wren(x) -> -Numpus(x))", "(-numpus(Wren))", "all x.(Wren(x) -> -Numpus(x))", "-Numpus(Wren)", "Wren is not Numpus.", "Wren is not a Numpus.", "(-Numpus(Wren))", "all x.(Wren(x) -> -Numpus(x))", "(-numpus(Wren))", "-Numpus(Wren)", "(Numpus(wren) & -Numpus(wren))", "all x.(Wren(x) -> -Numpus(x))", "-Numpus(Wren)", "all x.(Wren(x) -> -Numpus(x))", "(-numpus(Wren))", "all x.(Wren(x) -> -Numpus(x))"]}
{"id": "prontoqa_train_9", "nl": "Each tumpus is a shumpus.", "fol": "all x. (tumpus(x) -> shumpus(x))", "prediction": ["all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x y.((Tumpus(x) & Humpus(y)) -> Shumpus(x))", "(all x.(Tumpus(x) -> Humpus(x)))", "all x.(Tumpus(x) -> Humpus(x))", "all x y.((Tumpus(x) & Humpus(y)) -> Is(x,y))", "all x.(Tumpus(x) -> Shumpus(x))", "all x y.((Tumpus(x) & Shumpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Shumpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Shumpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "exists x.(Tumpus(x) & Humpus(x))", "exists x.(Tumpus(x) & Shumpus(x))", "exists x.(Tumpus(x) & Humpus(x))"]}
{"id": "prontoqa_train_10", "nl": "Max is not a shumpus, Max is a zumpus, and Max is a jompus.", "fol": "(-shumpus(Max) & zumpus(Max) & jompus(Max))", "prediction": ["(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> Jompus(x)))", "all x y z.((Max(x) & Humpus(y) & Zumpus(z)) -> (-Shumpus(x) & -Jumpus(x) & -Shumpus(y) & -Shumpus(z) & -Shumpus(z) & -Shumpus(z) & -Shumpus(z) & -Shumpus(z) & -Shumpus(z)))", "(all x.(Max(x) -> -Shumpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> Jompus(z))))", "(all x y z.((Max(x) & Humpus(y)) -> -Shumpus(x)) & ((Max(z) & Zumpus(z)) -> Jompus(z)))", "all x.(Max(x) -> (-Shumpus(x) & Zumpus(x) & Jompus(x)))", "all x y z.((Max(x) & Zumpus(y) & Jompus(z)) -> (-Shumpus(x) & -Zumpus(y) & -Shumpus(z) & -Shumpus(y) & -Shumpus(z) & -Shumpus(y) & -Shumpus(z) & -Shumpus(z) & -Shumpus(z)))", "(all x y z.((Max(x) & Humpus(y) & Zumpus(z)) -> -Shumpus(x)) & ((Max(x) & Zumpus(x)) -> Jompus(x)))", "all x y z.((Max(x) & Humpus(y) & Zumpus(z)) -> (-Shumpus(x) & -Jumpus(x) & -Shumpus(y) & -Shumpus(z) & -Shumpus(y) & -Shumpus(z) & -Jumpus(z)))", "(-Shumpus(Max) & Zumpus(Max) & Jompus(Max))", "(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> Jompus(x)))", "all x.(Max(x) -> (-Shumpus(x) & Zumpus(x) & Jompus(x)))", "all x y z.((Max(x) & Humpus(y) & Zumpus(z)) -> (-Shumpus(x) & Zumpus(y) & Jompus(z)))", "all x y z.((Max(x) & Shumpus(y) & Zumpus(z)) -> (-Shumpus(x) & Zumpus(x) & Jompus(x)))", "(all x.(Max(x) -> -Shumpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> Jompus(z))))", "(all x.(Max(x) -> -Shumpus(x)) | (Max(x) -> Zumpus(x))) | (Max(x) -> Jompus(x)))", "(all x y z.((Max(x) & Humpus(y)) -> -Shumpus(x)) & ((Max(z) & Zumpus(z)) -> Jompus(z)))"]}
{"id": "prontoqa_train_11", "nl": "Max is not a tumpus.", "fol": "-tumpus(Max)", "prediction": ["(-Tumpus(Max))", "all x.(Max(x) -> -Tumpus(x))", "(Max(Max) & -Tumpus(Max))", "-Tumpus(Max)", "all x.(Max(x) -> -Tumpus(x))", "Max is notTumpus(Max)", "(-Tumpus(Max))", "all x.(Max(x) -> -Tumpus(x))", "Max is notTumpus(Max)", "-Tumpus(Max)", "all x.(Max(x) -> -Tumpus(x))", "(-Tumpus(Max))", "-Tumpus(Max)", "(-Tumpus(Max)", "-Tompus(max)", "-Tumpus(Max)"]}
{"id": "prontoqa_train_12", "nl": "Each tumpus is a brimpus.", "fol": "all x. (tumpus(x) -> brimpus(x))", "prediction": ["all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x y.((Tumpus(x) & Brimpus(y)) -> Has(x,y))", "(all x.(Tumpus(x) -> Brimpus(x)))", "all x.(Tumpus(x) -> Brimpus(x))", "all x y.((Tumpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Brimpus(x))", "all x y.((Tumpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "exists x.(Tumpus(x) & -Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "exists x.(Tumpus(x) & Brumpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "exists x.(Tumpus(x) & Brumpus(x))"]}
{"id": "prontoqa_train_13", "nl": "Max is a lorpus and Max is an impus and Max is not a brimpus.", "fol": "(lorpus(Max) & impus(Max) & -brimpus(Max))", "prediction": ["(all x.(Max(x) -> Lorpus(x)) & (Max(x) -> Imperator(x)) & (Max(x) -> -Brimpus(x)))", "all x y z.((Max(x) & Lorpus(y) & Impossible(z)) -> (Lorpus(x) & Impossible(x) & -Brimpus(x)))", "(all x.(Max(x) -> Lorpus(x)) & all y.(Max(y) -> Issue(y))) & all z.(Max(z) -> -Brimpus(z))))", "all x y z.((Max(x) & Lorpus(x) & Impossible(y) & Brimpus(z)) -> (Lorpus(x) & Impossible(y) & -Brimpus(z)))", "all x y.((Max(x) & Lorpus(x) & Impossible(y)) -> (Lorpus(x) & -Brimpus(y)))", "(all x y.((Max(x) & Lorpus(x)) -> -Brimpus(y)) & ((Max(x) & Issue(x)) -> -Brimpus(x)))", "(all x y z.((Max(x) & Lorpus(y) & Is(z)) -> (Lorpus(x) & Is(z)) & ((Max(x) & Brimpus(x)) -> -Brimpus(x))))", "(all x.(Max(x) -> Lorpus(x)) & (Max(x) -> Issue(x)) & (Max(x) -> -Brimpus(x)))", "all x.(Max(x) -> (Lorpus(x) & Impossible(x) & -Brimpus(x)))", "(all x.(Max(x) -> Llorpus(x)) & (Max(x) -> Issue(x)) & (Max(x) -> -Brimpus(x)))", "(all x.(Max(x) -> Lorpus(x)) & all y.(Max(y) -> Imperator(y))) & all z.(Max(z) -> -Brimpus(z)))", "all x y z.((Max(x) & Lorpus(y) & Imperator(z)) -> (Lorpus(x) & Imperator(x) & -Brimpus(x)))", "all x.(Max(x) -> (Lorpus(x) & Issue(x) & -Brimpus(x)))", "all x y.((Max(x) & Lorpus(x) & Impossible(y)) -> (Lorpus(x) & Impossible(y) & -Brimpus(y)))", "(all x y.(Lorpus(x) -> Max(x)) & (Impossible(y) -> Max(y)))", "(all x.(Max(x) -> Lorpus(x)) & (Max(x) -> Imperator(x)) & (Max(x) -> -Brimpus(x)))"]}
{"id": "prontoqa_train_14", "nl": "Zumpuses are vumpuses.", "fol": "all x. (zumpus(x) -> vumpus(x))", "prediction": ["all x.(Zumpus(x) -> Vampuse(x))", "all x.(Zumpus(x) -> Vampuse(x))", "all x y.((Zumpus(x) & Vampus(y)) -> Vampus(x))", "(Vumpus(z) & Vampus(z))", "(Vampus(z) & Vampus(z))", "all x.(Zumpus(x) -> Vampus(x))", "all x y.((Zumpus(x) & Vampus(y)) -> Vampus(x))", "(Vampus(z) & KnownFor(z) & Vampus(z))", "all x.(Zombie(x) -> Vampuse(x))", "all x.(Zumpus(x) -> Vampuse(x))", "all x.(Zumpus(x) -> Vulpuse(x))", "all x y.((Zumpus(x) & Vampuse(y)) -> Vampuse(x))", "all x.(Zumpus(x) -> Vumpus(x))", "all x.(Zombie(x) -> Vampuse(x))", "all x.(Zumpus(x) -> Vampus(x))", "All x.(Zumpus(x) -> Vampus(x))"]}
{"id": "prontoqa_train_15", "nl": "Polly is a lorpus, Polly is a lempus, and Polly is not a vumpus.", "fol": "(lorpus(Polly) & lempus(Polly) & -vumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> -Vumpus(z))))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> -Vumpus(x)))", "(all x y z.(Polly(x) -> Lorpus(x)) & (Polly(y) -> Lempus(y)) & (Polly(z) -> -Vumpus(z))))", "all x y z.((Polly(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) | Lempus(z) | -Vumpus(z)))", "(all x y z.((Polly(x) & Lorpus(y)) -> (Lorpus(x) & Lempus(y))) & ((Polly(z) & Vumpus(z)) -> -Vumpus(z)))", "all x y z.((Polly(x) & Lorpus(y) & Lempus(z) & -Vumpus(z)) -> (Lorpus(x) | Lempus(z) | Polly(x)))", "exists x.(Polly(x) & (Lorpus(x) | Lempus(x) | -Vumpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) & Lempus(x) & -Vumpus(x)))", "(all x.(Polly(x) -> Llorpus(x)) & (Polly(x) -> Lempus(x)) & -Vumpus(x)))", "(all x y z.((Polly(x) & Lorpus(y)) -> (Lorpus(x) | Lempus(y))) & ((Polly(z) & -Vumpus(z)) -> (Vumpus(z))))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> -Vumpus(z))))", "all x y.((Polly(x) & Lorpus(x)) -> (Lempus(x) & -Vumpus(y)))", "all x y z.((Polly(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) | Lempus(z) | -Vumpus(z)))", "(all x y z.(Lorpus(x) -> Polly(x)) & (Lempus(y) -> Polly(z)) & -Vumpus(z)))", "all x y z.((Polly(x) & Lorpus(y) & Lempus(z) & -Vumpus(z)) -> (Lorpus(x) & Lempus(x) & -Vumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Lempus(x)) & -Vumpus(x)))"]}
{"id": "prontoqa_train_16", "nl": "Polly is not a zumpus.", "fol": "-zumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Zumpus(x))", "(-Zumpus(Polly))", "Polly is not a zumpus.", "all x.(Polly(x) -> -Zumpus(x))", "Polly is not zumpus.", "(-Zumpus(Polly))", "(-Zombie(Polly))", "Polly is not a zumpus.", "All x.(Polly(x) -> -Zumpus(x))", "all x.(Polly(x) -> -Zumpus(x))", "(-Zumpus(Polly) & Polly(Poly))", "Polly - Zumpus(poly).", "all x.(Polly(x) -> -Zombipus(x))", "(-Zumpus(Polly))", "-Zombipus(Polly)", "-Tompus(Polly)"]}
{"id": "prontoqa_train_17", "nl": "Brimpuses are grimpuses.", "fol": "all x. (brimpus(x) -> grimpus(x))", "prediction": ["all x.(Brimpus(x) -> Grimpuse(x))", "all x.(Brompus(x) -> Grimpuse(x))", "all x y.((Brompus(x) & Grimpus(y)) -> (Smoothpuse(x) & Grimpuse(y)))", "all x.(Brimpus(x) -> Grimpuse(x))", "(Grimpuse(brimpus) & Grimpuse(brimpus))", "all x.(Brimpus(x) -> Grimpuse(x))", "all x y.((Brimpus(x) & Grimpus(y)) -> Scarpa(x))", "(SmokeyPumpe(brimpus)", "(Grimpuse(brimpus) & Grappus(brimpus))", "all x.(Brompus(x) -> Grimpuse(x))", "all x.(Brimpus(x) -> Grimpuse(x))", "all x.(Brimpus(x) -> Grimpuse(x))", "all x.(Brompus(x) -> Grappus(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Grimpuse(x))", "all x.(Brompus(x) -> Gruppuse(x))"]}
{"id": "prontoqa_train_18", "nl": "Max is a numpus, Max is a zumpus, and Max is not a grimpus.", "fol": "(numpus(Max) & zumpus(Max) & -grimpus(Max))", "prediction": ["(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> -Grimpus(x)))", "all x y z.((Max(x) & Numpus(y) & Zumpus(z)) -> (Numpus(x) & Zumpus(x) & -Grimpus(x)))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> -Grimpus(z))))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & -Max(x)))", "all x.(Max(x) -> (Numpus(x) & Zumpus(x) & -Grimpus(x)))", "all x y z.((Max(x) & Numpus(y) & Zumpus(z)) -> (Numpus(x) & Toxic(y) & -Grimpus(z)))", "(all x y z.(Max(x) -> Numpus(x)) & (Max(y) -> Zumpus(y)) & (Max(z) -> -Grimpus(z)))", "(all x y z.((Max(x) & Numpus(y)) -> (Max(z) & Zumpus(z))) & ((Max(x) & Grimpus(x)) -> -Murppus(x)))", "all x y z.((Max(x) & Numpus(y) & Zumpus(z) & -Grimpus(z)) -> (Numpus(x) & Zumpus(x) & -Grimpus(x)))", "all x.(Max(x) -> (numpus(x) & zumpus(x) & -grimpus(x)))", "all x.(Max(x) -> (Numpus(x) & Zumpus(x) & -Grimpus(x)))", "all x y z.((Max(x) & Number(y) & Zumpus(z)) -> (Numpus(x,y) | Grimpus(x,z)))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> -Grimpus(x)))", "(All x y z.((Max(x) & Numpus(y) & Zumpus(z)) -> (Numpus(x) | Zumpus(z)) | -Grimpus(z)))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> -Grimpus(z))))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & -Max(x)))"]}
{"id": "prontoqa_train_19", "nl": "Max is not a brimpus.", "fol": "-brimpus(Max)", "prediction": ["all x.(Max(x) -> -Brimpus(x))", "-Brimpus(Max)", "Max is not a Brimpus.", "(-Brimpus(Max))", "all x.(Max(x) -> -Brimpus(x))", "-(Max(Max) & Brimpus(Max))", "(Brimpus(Max) & -Brimpus(Max))", "Max is not a Brimpus.", "Max is not brimpus.", "-Brimpus(Max)", "all x.(Max(x) -> -Brimpus(x))", "(-Brimpus(Max))", "all x.(Max(x) -> -Brumpus(x))", "-Brimpus(Max)", "(-brimpus(Max))", "-Brumpus(Max)"]}
{"id": "prontoqa_train_20", "nl": "Every sterpus is a vumpus.", "fol": "all x. (sterpus(x) -> vumpus(x))", "prediction": ["all x.(Sterpus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vumpus(x))", "all x y.((Sterpus(x) & Vumpus(y)) -> Is(x,y))", "all x.(Sterpus(x) -> Vumpus(x))", "(all x.(Sterpus(x) -> Vumpus(x))", "all x y.((Steerpus(x) & Vumpus(y)) -> Is(x,y))", "all x.(Sterpus(x) -> Vumpus(x))", "all x.(Steerpus(x) -> Vumpus(x))", "exists x.(Stereospheric(x) & Vumpus(x))", "all x.(Strohpus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vumpus(x))", "exists x.(Sterpus(x) & Sterpus(x) & Vumpus(x))", "all x.(Sterpus(x) -> Vumpus(x))", "all x.(Steerpus(x) -> Vumpus(x))", "exists x.(Steerpus(x) & -Vumpus(x))", "all x.(Stereo(x) -> Vampus(x))"]}
{"id": "prontoqa_train_21", "nl": "Rex is a zumpus and Rex is an impus and Rex is not a vumpus.", "fol": "(zumpus(Rex) & impus(Rex) & -vumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Issue(y))) & all z.(Rex(z) -> -Vumpus(z))))", "all x y z.((Rex(x) & Zumpus(x) & Rex(y) & Imperator(z)) -> (Impossible(x) & -Vumpus(y)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Imperator(x)) & (Rex(x) -> -Vumpus(x)))", "all x y.((Rex(x) & Zumpus(x) & Is(y)) -> (Impossible(x) & -Vumpus(y)))", "(all x y z.((Rex(x) & Zumpus(x)) -> IsImpossible(x)) & ((Rex(y) & IsNotVumpus(y)) -> -Impossible(y)))", "(all x y.(Rex(x) -> Zumpus(x)) & (Rex(y) -> Issue(y)) & (Rex(y) -> -Vumpus(y)))", "all x y z.((Rex(x) & Zumpus(x) & Rex(y) & Imperator(z)) -> (Tompus(x) & Imperator(y) & -Vumpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Imperator(y))) & all z.(Rex(z) -> -Vumpus(z)))", "all x.(Rex(x) -> (Tompus(x) & IsImpossible(x) & -Vumpus(x)))", "all x y z.((Rex(x) & Tompus(x) & Is(y) & Imperator(z)) -> (Tompus(x) & Imperator(y) & -Vumpus(z)))", "all x.(Rex(x) -> (Tompus(x) | Imperator(x) | -Vumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Issue(x)) & (Rex(x) -> -Vumpus(x)))", "all x y.((Rex(x) & Zumpus(x) & Imperator(y)) -> (-Vumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Issue(y)) & all z.(Rex(z) -> -Vumpus(z))))", "(all x y.(Rex(x) -> Zumpus(x)) & (Rex(y) -> Issuel(y)) & (Rex(y) -> -Vumpus(y)))", "all x y z.((Rex(x) & Zumpus(x) & Is(y) & Rex(z)) -> (Impossible(x) & -Vumpus(z)))"]}
{"id": "prontoqa_train_22", "nl": "Rex is not a sterpus.", "fol": "-sterpus(Rex)", "prediction": ["all x.(Rex(x) -> -Sterpus(x))", "(-Sterpus(Rex))", "Rex is not sterpus.", "all x.(Rex(x) -> -Sterpus(x))", "Rex is not sterpus.", "(-Stereo(Rex))", "-Sterpus(Rex)", "all x.(Rex(x) -> -Sterepus(x))", "Rex is not sterpus.", "Rex -Sterpus(Rex)", "Rex is notsterpus.", "(-Stereo(Rex) & -Sterpus(Rex))", "(-Stereo(Rex))", "-Sterpus(Rex)", "all x.(Rex(x) -> -Sterpus(x))", "-Sterpus(rex)"]}
{"id": "prontoqa_train_23", "nl": "Every jompus is a dumpus.", "fol": "all x. (jompus(x) -> dumpus(x))", "prediction": ["all x.(Jompus(x) -> Dumpus(x))", "(all x.(Jompus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x y.((Jompus(x) & Dumpus(y)) -> Has(x,y))", "all x.(Jimpus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x y.((Jompus(x) & Dumpus(y)) -> Has(x,y))", "all x.(Jimpus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jumpus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "exists x.(Jimpus(x) & Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "exists x.(Jimpus(x) & Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "exists x.(Mjompus(x) & Dumpus(x))"]}
{"id": "prontoqa_train_24", "nl": "Polly is a lempus, Polly is not a dumpus, and Polly is a wumpus.", "fol": "(lempus(Polly) & -dumpus(Polly) & wumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))", "(all x y z.((Polly(x) & Lempus(x)) -> Polly(y)) & ((Polly(z) & -Dumpus(z)) -> Polly(z)))", "all x y z.((Polly(x) & Lempus(x) & Dumpus(y) & Wumpus(z)) -> (Lempus(x) & -Dumpus(y) & Wumpus(z)))", "all x y z.((Polly(x) & Lempus(x) & Polly(y) & Dumpus(z)) -> (-Dumpus(y) & Wumpus(z)))", "(all x y z.((Polly(x) & Lempus(y)) -> (Lempus(x) & -Dumpus(y)) & ((Polly(z) & Wumpus(z)) -> Wumpus(z))))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))", "all x y z.((Polly(x) & Lempus(y) & Dumpus(z)) -> (Lempus(x) & -Dumpus(y) & Wumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & all y.(Polly(y) -> -Dumpus(y))) & all z.(Polly(z) -> Wumpus(z)))", "all x.(Polly(x) -> (Lempus(x) & -Dumpus(x) & Wumpus(x)))", "all x y z.((Polly(x) & Lempus(x) & Dumpus(y) & Wumpus(z)) -> (Lempus(x) & -Dumpus(y) & Wumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))", "(all x y z.((Polly(x) & Lempus(x)) -> Polly(x)) & ((Polly(y) & Dumpus(y)) -> Polly(z)))", "all x y z.((Polly(x) & Lempus(x) & Polly(y) & Dumpus(z)) -> (-Dumpus(y) & Wumpus(z)))", "all x.(Polly(x) -> (Lempus(x) & -Dumpus(x) & Wumpus(x)))", "(all x.(Polly(x) -> Lempus(x)) & all y.(Polly(y) -> -Dumpus(y))) & all z.(Polly(z) -> Wumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))"]}
{"id": "prontoqa_train_25", "nl": "Polly is not a jompus.", "fol": "-jompus(Polly)", "prediction": ["all x.(Polly(x) -> -Jompus(x))", "(-Jompus(Polly))", "Polly is not a Jompus.", "all x.(Polly(x) -> -Jompus(x))", "Polly is not a jompus.", "all x.(Polly(x) -> -Jompus(x))", "Polly -Jompus(Polly)", "(-Jompus(Polly))", "-Jimpus(Polly)", "all x.(Polly(x) -> -Jimpus(x))", "all x.(Polly(x) -> -Jompus(x))", "(-jompus(Polly))", "(-Jompus(Polly))", "-Jumpus(Polly)", "All x.(Polly(x) -> -Jompus(x))", "(-jompus(Polly))"]}
{"id": "prontoqa_train_26", "nl": "Every impus is a numpus.", "fol": "all x. (impus(x) -> numpus(x))", "prediction": ["all x.(Impossible(x) -> Numpus(x))", "all x.(Impact(x) -> Numpus(x))", "all x.(Issue(x) -> Numpus(x))", "(all x.(Impossible(x) -> Numpus(x))", "all x y.((Issue(x) & Numpus(y)) -> IsNote(x,y))", "all x.(Impossible(x) -> Numpus(x))", "all x y.((Issue(x) & Numpus(y)) -> Is(x,y))", "all x.(Impact(x) -> Numpus(x))", "all x.(Issue(x) -> Numpus(x))", "all x.(Improve(x) -> Numpus(x))", "exists x.(Defimer(x) & Numpus(x))", "all x.(Impossible(x) -> Numpus(x))", "exists x.(Implementation(x) & Numpus(x))", "all x.(Issue(x) -> Numpus(x))", "exists x.(Defimer(x) & Numpus(x))", "all x.(Impossible(x) -> Numpus(x))"]}
{"id": "prontoqa_train_27", "nl": "Polly is a lorpus and Polly is not a numpus and Polly is a yumpus.", "fol": "(lorpus(Polly) & -numpus(Polly) & yumpus(Polly))", "prediction": ["(all x.(Lorpus(x) -> Polly)) & (Nompus(x) -> Polly)) & (Yumpus(x) -> Polly)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Yampus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x y.(Lorpus(x) -> Polly(x)) & (Nompus(y) -> Polly(y)))", "all x y z.((Polly(x) & Lorpus(y) & Yumpus(z)) -> (Lorpus(x) & -Numpus(y) & -Yumpus(z)))", "(all x y z.((Polly(x) & Lorpus(y)) -> (Lorpus(x) & -Numpus(y))) & ((Polly(z) & Yumpus(z)) -> (Yumpus(z))))", "(all x.(Lorpus(x) -> Polly(x)) & (-Numpus(x) -> Polly(x))) & (Yumpus(x) -> Polly(x)))", "all x y.((Polly(x) & Lorpus(x) & Polly(y)) -> (-Numpus(y) & Yampus(y)))", "all x y.((Polly(x) & Lorpus(x)) -> (-Lumpus(x) & -Yumpus(y)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Yampus(z)))", "all x.(Polly(x) -> (Lorpus(x) & -Numpus(x) & Yumpus(x)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Yumpus(z)) -> (Lorpus(x) & -Numpus(y) & -Yumpus(z)))", "exists x.(Lorpus(x) & -Numpus(x) & Yumpus(x))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Lorph(x) -> Polly(x)) & (-Numpus(x) -> Polly(x))) & (Yumpus(x) -> Polly(x)))", "(all x y.(Lorpus(x) -> Polly(x)) & (Nompus(y) | Yumpus(y))))"]}
{"id": "prontoqa_train_28", "nl": "Polly is not an impus.", "fol": "-impus(Polly)", "prediction": ["(-Impossible(Polly))", "all x.(Polly(x) -> -Impossible(x))", "Polly -IsImpossible(Polly)", "Polly -Impossible(Polly)", "-IsPolly(Polly)", "(-Impossible(Polly))", "all x.(Polly(x) -> -Impossible(x))", "Polly is not impus.", "Polly is not impus(Polly)", "-(Impossible(Polly))", "All x.(Polly(x) -> -Issue(x))", "-IsPolly(poly)", "(-Impossible(Polly))", "(-IssuedOn(Polly))", "all x.(Polly(x) -> -Impossible(x))", "(-Impossible(Polly))"]}
{"id": "prontoqa_train_29", "nl": "Alex is a lempus and Alex is a gorpus and Alex is not an impus.", "fol": "(lempus(Alex) & gorpus(Alex) & -impus(Alex))", "prediction": ["all x y z.((Alex(x) & Lempus(x) & Gorpus(y) & Imperator(z)) -> (Lempus(x) & Gorpus(y) & -Impossible(z)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Impossible(z))))", "all x y.((Alex(x) & Lempus(x) & Gorpus(y)) -> -Impossible(x))", "(all x.(Alex(x) -> Lempus(x)) & (Alex(x) -> Gorpus(x)) & (Alex(x) -> -Impossible(x)))", "all x.(Alex(x) -> (Lempus(x) & Gorpus(x) & -Impossible(x)))", "(all x y.(Alex(x) -> Lempus(x)) & (Alex(y) -> Gorpus(y)) & (Alex(y) -> -Impossible(y)))", "(all x.(Alexa(x) -> Lempus(x)) & all y.(Alexa(y) -> Gorpus(y)) & all z.(Alexa(z) -> -Impossible(z))))", "all x y z.((Alex(x) & Lempus(x) & Gorpus(y)) -> (Lempus(x) & Gorpus(y) & -Impossible(z)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Impossible(z))))", "all x y z.((Alex(x) & Lempus(x) & Gorpus(y) & Is(z)) -> (Lempus(x) & Gorpus(y) & -Impossible(z)))", "(all x.(Alex(x) -> Lempus(x)) & (Alex(x) -> Gorpus(x)) & -Impossible(x)))", "(all x y.(Lempus(x) -> Alex(x)) & (Gorpus(y) -> Alex(y)) & (Impossible(y) | Impossible(y))))", "all x.(Alex(x) -> (Lempus(x) & Gorpus(x) & -Impossible(x)))", "all x y.((Alex(x) & Lempus(x) & Gorpus(y)) -> (-Impossible(x)))", "exists x.(Alex(x) & Lempus(x) & Gorpus(x) & -Ilimination(x))", "all x.(Alex(x) -> (Lempus(x) & Gorpus(x) & -Impossible(x)))"]}
{"id": "prontoqa_train_30", "nl": "Alex is not a numpus.", "fol": "-numpus(Alex)", "prediction": ["all x.(Alex(x) -> -Numpus(x))", "Alex is not a Numpus.", "all x.(Alex(x) -> -Numpus(x))", "-Numpus(Alex)", "Alex is not a Numpus.", "(-numpus(Alex))", "Alex is not a Numpus(Alex)", "all x.(Alex(x) -> -Numpus(x))", "Alex is not Numpus.", "-Numpus(Alex)", "(-numpus(Alex))", "all x.(Alex(x) -> -Numpus(x))", "Alex is not a Numpus.", "All x.(Alex(x) -> -Numpus(x))", "(-numpus(Alex))", "all x.(Alex(x) -> -Numpus(x))"]}
{"id": "prontoqa_train_31", "nl": "Every brimpus is a yumpus.", "fol": "all x. (brimpus(x) -> yumpus(x))", "prediction": ["all x.(Brumpus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yumpus(x))", "all x y.((Brumpus(x) & Yumpus(y)) -> Has(x,y))", "all x.(Brimpus(x) -> Yumpus(x))", "all x y.((Brimpus(x) & Yumpus(y)) -> Is(x,y))", "all x.(Brumpus(x) -> Yumpa(x))", "(all x.(Brimpus(x) -> Yumpus(x)))", "all x.(Brimpus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yampus(x))", "all x.(Brimpus(x) -> Yumpus(x))", "all x.(Brimpus(x) -> Yampus(x))", "exists x.(Brimpus(x) & Yumpus(x))", "all x.(Brumpus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yampus(x))", "exists x.(Brimpus(x) & Yampus(x))", "exists x.(Brampus(x) & Yumpa(x))"]}
{"id": "prontoqa_train_32", "nl": "Sam is not a yumpus, Sam is a shumpus, and Sam is a sterpus.", "fol": "(-yumpus(Sam) & shumpus(Sam) & sterpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Yumpus(x)) & (Sam(x) -> Humpus(x)) & (Sam(x) -> Sterpus(x)))", "all x y z.((Sam(x) & Yumpus(y) & Humpus(z)) -> (-Yumpus(x) & Shumpus(x) & Sterpus(x)))", "(all x.(Sam(x) -> -Yumpus(x)) & all y.(Shumpus(y) -> Sterpus(y)))", "(all x y z.((Sam(x) & Yumpus(y)) -> -Yumpus(x)) & ((Sam(z) & Humpus(z))) -> Sterpus(z)))", "all x y z.((Sam(x) & Yumpus(y) & Humpus(z)) -> (-Yumpus(x) & -Shumpus(y) & -Sterpus(z)))", "exists x.(Sam(x) & -Yumpus(x) & Shumpus(x) & Sterpus(x))", "all x.(Sam(x) -> (-Yumpus(x) & -Shumpus(x) & -Sterpus(x)))", "all x y z.((Sam(x) & Yumpus(y) & Shumpus(z)) -> (-Yumpus(x) & -Sterpus(x)))", "(all x.(Sam(x) -> -Yumpus(x)) & all y.(Shumpus(y) -> -Sampus(y))) & all z.(Sterpus(z) -> -Yumpus(z)))", "(all x.(Sam(x) -> -Yumpus(x)) & (Sam(x) -> Humpus(x)) & (Sam(x) -> Sterpus(x)))", "(all x y z.((Sam(x) & Yumpus(y)) -> -Yumpus(x)) & ((Sam(z) & Humpus(z))) -> Sterpus(z)))", "all x y.((Sam(x) & Sam(y)) -> (-Yumpus(x) | (Shumpus(y) & Sterpus(y))))", "all x y z.((Sam(x) & Yumpus(y) & Shumpus(z)) -> (-Yumpus(x) & -Sterpus(x) & -Yumpus(y) & -Sterpus(z)))", "(all x.(Yumpus(x) -> -Yumpus(x)) & (Shumpus(x) -> -Yumpus(x)) & (Sterpus(x) -> -Yumpus(x)))", "all x y z.((Sam(x) & Yampus(y) & Humpus(z)) -> (-Yumpus(x) & -Shumpus(x) & -Sterpus(x)))", "(all x.(Sam(x) -> -Yumpus(x)) & (Sam(x) -> Humpus(x)) & (Sam(x) -> Sterpus(x)))"]}
{"id": "prontoqa_train_33", "nl": "Sam is not a brimpus.", "fol": "-brimpus(Sam)", "prediction": ["all x.(Sam(x) -> -Brimpus(x))", "(-Brimpus(Sam))", "Sam is not a Brimpus.", "all x.(Sam(x) -> -Brimpus(x))", "Sam is not a brimpus.", "(-Brimpus(Sam))", "(Brimpus(Sam) & -Brimpus(Sam))", "all x.(Sam(x) -> -Brumpus(x))", "-Brumpus(Sam)", "-(Brimpus(Sam))", "(Brimpus(sam) & -Brimpus(sam))", "all x.(Sam(x) -> -Brimpus(x))", "(-Brimpus(Sam))", "-Brumpus(Sam)", "all x.(Sam(x) -> -Brumpus(x))", "all x.(Sam(x) -> -Brimpus(x))"]}
{"id": "prontoqa_train_34", "nl": "Each shumpus is a sterpus.", "fol": "all x. (shumpus(x) -> sterpus(x))", "prediction": ["all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "(all x.(Shumpus(x) -> Sterpus(x))", "all x y.((Shumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x y.((Shumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x y.((Shumpus(x) & Sterus(y)) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterepus(x))", "all x.(Shumpus(x) -> Sterus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Steroid(x))", "all x.(Shumpus(x) -> Sterpus(x))", "exists x.(Shumpus(x) & Sterpus(x))", "exists x.(Shumpus(x) & Sterpus(x))", "exists x.(Shumpus(x) & sterpus(x))"]}
{"id": "prontoqa_train_35", "nl": "Polly is a dumpus and Polly is a vumpus and Polly is not a sterpus.", "fol": "(dumpus(Polly) & vumpus(Polly) & -sterpus(Polly))", "prediction": ["(all x.(Polly(x) -> Dumpus(x)) & (Polly(x) -> Vumpus(x)) & -Sterpus(x)))", "all x y z.((Polly(x) & Dumpus(x) & Vumpus(y) & Sterpus(z)) -> (Dumpus(x) & Vumpus(y) & -Sterpus(z)))", "(all x.(Polly(x) -> Dumpus(x)) & all y.(Polly(y) -> Vumpus(y)) & all z.(Polly(z) -> -Sterpus(z))))", "(all x y.(Polly(x) -> Dumpus(x)) & (Polly(y) -> Vumpus(y)) & (Polly(y) -> -Sterpus(y)))", "all x y z.((Polly(x) & Dumpus(x) & Polly(y) & Vumpus(y)) -> (Dumpus(x) & -Sterpus(z)))", "all x y z.((Polly(x) & Dumpus(x) & Vumpus(y) & Sterpus(z)) -> (Dumpus(x) & Vumpus(y) & -Sterpus(z)))", "(all x.(Polly(x) -> Dumpus(x)) & all y.(Polly(y) -> Vumpus(y)) & all z.(Polly(z) -> -Sterpus(z))))", "(all x.(Polly(x) -> Dumpus(x)) & (Polly(x) -> Vumpus(x)) & (Polly(x) -> -Sterpus(x)))", "all x y.((Polly(x) & Dumpus(x) & Polly(y)) -> (Vumpus(y) & -Sterpus(y)))", "(all x.(Polly(x) -> Dumpus(x)) & (Polly(x) -> Vumpus(x)) & -Sterpus(x)))", "all x y z.((Polly(x) & Dumpus(x) & Vumpus(y) & -Sterpus(z)) -> (Dumpus(x) & Vumpus(y) & -Sterpus(z)))", "all x.(Polly(x) -> (Dupus(x) & Vumpus(x) & -Sterpus(x)))", "all x y.((Polly(x) & Dumpus(x) & Polly(y)) -> (Vumpus(y) & -Sterpus(y)))", "(all x y z.(Polly(x) -> Dumpus(x)) & (Polly(y) -> Vumpus(y)) & (Polly(z) -> -Sterpus(z)))", "(all x y.(Polly(x) -> Dumpus(x)) & (Polly(y) -> Vumpus(y)) & (Polly(y) -> -Sterpus(y)))", "exists x.(Polly(x) & Dumpus(x) & Vumpus(x) & -Sterpus(x))"]}
{"id": "prontoqa_train_36", "nl": "Polly is not a shumpus.", "fol": "-shumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Shumpus(x))", "(-Shumpus(Polly))", "Polly is not a shumpus.", "all x.(Polly(x) -> -Shumpus(x))", "Polly is notShumpus(Polly)", "(-Shumpus(Polly))", "exists x.(Shumpus(x) & Polly(x))", "all x.(Polly(x) -> -Shumpus(x))", "(-Shumpus(Polly))", "Polly -Shumpus(poly)", "-Shumpus(Polly)", "all x.(Polly(x) -> -Shumpus(x))", "(-Shumpus(Polly,Shumpus))", "(-Shumpus(Polly))", "all x.(Polly(x) -> -Shumpus(x))", "-Shumpus(Poly)"]}
{"id": "prontoqa_train_37", "nl": "Grimpuses are vumpuses.", "fol": "all x. (grimpus(x) -> vumpus(x))", "prediction": ["all x.(Grimpus(x) -> Vampuse(x))", "all x.(Grimpus(x) -> Vampus(x))", "all x y.((Grimpus(x) & Vampus(y)) -> Vampus(x))", "all x.(Grimpus(x) -> Vampuse(x))", "all x y.((Grimpus(x) & Vampus(y)) -> Vampus(x))", "(Vumpus(Grimpus) & Vampus(Grimpus))", "(Vampus(GRuppe) & Vampire(GRuppus))", "(all x.(Grimpus(x) -> Vampuse(x)))", "all x.(Gruppus(x) -> Vampuse(x))", "all x.(Grimpus(x) -> Vampus(x))", "all x.(Grimpus(x) -> Vulpuse(x))", "(Vampus(GRumpus) & Vampus(GRumpus))", "all x.(Rambuse(x) -> Vampus(x))", "all x.(Grimpus(x) -> Vumpus(x))", "all x.(Grimpus(x) -> Vampuse(x))", "all x.(Grimpus(x) -> Vulpe(x))"]}
{"id": "prontoqa_train_38", "nl": "Wren is not a vumpus, Wren is a jompus, and Wren is a lorpus.", "fol": "(-vumpus(Wren) & jompus(Wren) & lorpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Vumpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> Lorpus(z))))", "all x y z.((Wren(x) & Vumpus(y) & Jompus(z)) -> (-Vumpus(x) & -Jompus(x) & -Lorpus(x)))", "(all x.(Wren(x) -> -Vumpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> Lorpus(z))))", "(-Vumpus(Wren) & Jompus(Wren) & Lorpus(Wren))", "(all x y z.((Wren(x) & Vumpus(y)) -> -Vumpus(x)) & ((Wren(z) & Jompus(z))) -> Lorpus(z)))", "all x y z.((Wren(x) & -Vumpus(x) & Jompus(y) & Lorpus(z)) -> (-Vumpus(x) & -Jompus(y) & -Lorpus(z)))", "(all x.(Wren(x) -> -Vumpus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> Lorpus(x)))", "all x y z.((Wren(x) & Vumpus(y) & Jompus(z)) -> (-Vumpus(x) & Jompus(x) & Lorpus(x)))", "all x.(Wren(x) -> (-Vumpus(x) & Jompus(x) & Lorpus(x)))", "exists x.(Wren(x) & -Vumpus(x) & Jompus(x) & Lorpus(x))", "(all x.(Wren(x) -> -Vumpus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> Lorpus(x)))", "all x y z.((Wren(x) & Jompus(y) & Lorpus(z)) -> (-Vumpus(x) & Jompus(y) & -Lorpus(z)))", "all x y z.((Wren(x) & -Vumpus(x) & Jompus(y) & Lorpus(z)) -> (-Vumpus(x) & Jompus(y) & -Lorpus(z)))", "all x y z.((Wren(x) & Vumpus(y) & Jompus(z)) -> (-Vumpus(x) | (-Vumpus(x) & Jompus(z) & Lorpus(z))))", "(all x y z.((Wren(x) & Vumpus(y)) -> -Vumpus(x)) & ((Wren(z) & Jompus(z))) -> Lorpus(z)))", "(all x.(Wren(x) -> -Vumpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> Lorpus(z)))"]}
{"id": "prontoqa_train_39", "nl": "Wren is not a grimpus.", "fol": "-grimpus(Wren)", "prediction": ["all x.(Wren(x) -> -Grimpus(x))", "(-Grimpus(Wren))", "Wren is notGrimpus.", "all x.(Wren(x) -> -Grimpus(x))", "(-Grimpus(Wren))", "Wren is notGrimpus.", "-Grimpus(Wren)", "all x.(Wren(x) -> -Grimpus(x))", "-Gruppus(Wren)", "all x.(Wren(x) -> -Grimpus(x))", "(-Grimpus(Wren))", "-Scrappus(Wren,y)", "-Grimpus(wren)", "all x.(Wren(x) -> -Grimpus(x))", "(-Grimpus(Wren))", "(-Grimpus(Wren))."]}
{"id": "prontoqa_train_40", "nl": "Each grimpus is a tumpus.", "fol": "all x. (grimpus(x) -> tumpus(x))", "prediction": ["all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Gruppus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "exists x y.(Grimpus(x) & Tumpus(y))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Sgrimpus(x) -> Tumpus(x))", "exists x y.(Grimpus(x) & Tumpus(y))", "(all x.(Grimpus(x) -> Tumpus(x)))", "all x.(Grimpus(x) -> Tumulus(x))", "all x.(Gruppus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "exists x.(Grampus(x) & Tumpus(x))", "all x.(Sgrimpus(x) -> Tumpus(x))", "exists x.(Grimpus(x) & Tumpus(x))", "all x.(Gravity(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_41", "nl": "Stella is not a tumpus and Stella is a dumpus and Stella is a sterpus.", "fol": "(-tumpus(Stella) & dumpus(Stella) & sterpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Tumpus(x)) & (Stella(x) -> Dumpus(x)) & (Stella(x) -> Sterpus(x)))", "all x y z.((Stella(x) & Tumpus(y) & Dumpus(z)) -> (-Tumpus(x) & Dumpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Dumpus(y))) & all z.(Stella(z) -> Sterpus(z)))", "all x.(Stella(x) -> (-Tumpus(x) & Dumpus(x) & Sterpus(x)))", "(all x y z.((Stella(x) & Tumpus(y)) -> -Tumpus(x)) & ((Stella(z) & Dumpus(z))) -> Sterpus(z)))", "(all x y.(Tumpus(x) -> -Tumpus(x)) & (Dumpus(y) -> Sterpus(y)))", "all x y.((Stella(x) & Tumpus(y)) -> (-Tumpus(x) & Dumpus(x) & Sterpus(x)))", "all x y z.((Stella(x) & Tumpus(y) & Dumpus(z)) -> (-Tumpus(x) & Dumpus(x) & Sterpus(x)))", "(all x.(Tumpus(x) -> -Tumpus(x)) & (Dumpus(x) -> Sterpus(x)))", "all x.(Stella(x) -> (-Tumpus(x) & Dumpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Dumpus(y))) & all z.(Stella(z) -> Sterpus(z)))", "exists x.(Stella(x) & -Tumpus(x) & Dumpus(x) & Sterpus(x))", "all x y z.((Stella(x) & Dumpus(y) & Sterpus(z)) -> (-Tumpus(x) & Dumpus(y) & Sterpus(z)))", "(all x y.(Tumpus(x) -> -Tumpus(x)) & (Dumpus(y) -> Sterpus(y)))", "all x y.((Stella(x) & Dumpus(y)) -> (-Tumpus(x) & -Sterpus(y)))", "(all x.(Tumpus(x) -> -Tumpus(x)) & all y.(Dumpus(y) -> Sterpus(y)))"]}
{"id": "prontoqa_train_42", "nl": "Stella is not a grimpus.", "fol": "-grimpus(Stella)", "prediction": ["all x.(Stella(x) -> -Grimpus(x))", "(-Grimpus(Stella))", "Stella is not a Grimpus.", "Stella is notGrimpus(Stella)", "all x.(Stella(x) -> -Grimpus(x))", "(-Grimpus(Stella))", "Stella is not a Grimpus.", "Stella is notGrimpus(Stella)", "all x.(Stella(x) -> -Grimpus(x))", "-Gruppus(Stella)", "(-Grimpus(Stella))", "Stella -Grimpus(Stella)", "-Grimpus(Stella)", "Stella is not a Grimpus.", "Stella -Grimpus(Stella)", "(-Grimpus(Stella))"]}
{"id": "prontoqa_train_43", "nl": "Lempuses are numpuses.", "fol": "all x. (lempus(x) -> numpus(x))", "prediction": ["all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "(all x.(Lempuse(x) -> Numpuse(x)))", "all x y.((Lempuse(x) & Numpus(y)) -> Numpuse(x))", "all x.(Lemme(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x y.((Lempuse(x) & Numpuse(y)) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x y.((Lempuse(x) & Numpus(y)) -> Numpus(x))", "all x.(Lemme(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpus(x))", "(Numpus)", "all x.(Lampuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpus(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lampus(x) -> Numpus(x))"]}
{"id": "prontoqa_train_44", "nl": "Rex is a shumpus, Rex is not a numpus, and Rex is a tumpus.", "fol": "(shumpus(Rex) & -numpus(Rex) & tumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> -Numpus(x)) & (Rex(x) -> Tumpus(x)))", "all x y z.((Rex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Tumpus(z)))", "(all x y z.((Rex(x) & Humpus(y)) -> Shumpus(x)) & ((Rex(z) & -Numpus(z))) -> Tumpus(z)))", "(all x.(Rex(x) -> Humpus(x)) & (-Rex(x) -> Numpus(x)) & (-Rex(x) -> Tumpus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (-Rex(x) -> Numpus(x)) & (-Rex(x) -> Tumpus(x)))", "all x y z.((Rex(x) & Shumpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Tumpus(z)))", "all x y z.((Rex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Tumpus(z)))", "(all x y z.((Rex) & Humpus(y) & Numpus(z)) -> Shumpus(x,y)) & ((Rex) & Numpus(z) & Tumpus(z))) -> Tumpus(z)))", "all x.(Rex(x) -> (Shumpus(x) & -Numpus(x) & Tumpus(x)))", "(all x.(Rex) -> Humpus(x)) & (Rex(x) -> -Numpus(x)) & (Rex(x) -> Tumpus(x)))", "(all x y z.((Rex(x) & Humpus(y)) -> Shumpus(x)) & ((Rex(z) & -Numpus(z))) -> Tumpus(z)))", "(all x.(Rex(x) -> Shumpus(x)) & (Rex(x) -> -Numpus(x)) & (Rex(x) -> Tumpus(x)))", "all x.(Rex(x) -> (Shumpus(x) | -Numpus(x) | Tumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> -Numpus(x)) & (Rex(x) -> Tumpus(x)))", "all x y z.((Rex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Tumpus(z)))", "all x y z.((Rex(x) & Shumpus(y) & Numpus(z)) -> (Shumpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_45", "nl": "Rex is not a lempus.", "fol": "-lempus(Rex)", "prediction": ["all x.(Rex(x) -> -Lempus(x))", "(-Lempus(Rex))", "Rex is not a Lempus.", "Rex is notLempus(x)", "-Lempus(Rex)", "all x.(Rex(x) -> -Lempus(x))", "Rex is not Lempus.", "Rex is not a lempus.", "(-Lempus(Rex))", "Rex -Lempus(Rex)", "all x.(Rex(x) -> -Lempus(x))", "-Lempus(Rex)", "Rex is not Lempus.", "(-lempus(Rex))", "-Limpus(Rex)", "(-lempus(Rex))"]}
{"id": "prontoqa_train_46", "nl": "Each brimpus is a grimpus.", "fol": "all x. (brimpus(x) -> grimpus(x))", "prediction": ["all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x y.((Brimpus(x) & Grimpus(y)) -> Is(x,y))", "all x.(Brumpus(x) -> Grimpus(x))", "all x y.((Brimpus(x) & Grimpus(y)) -> Has(x,y))", "all x.((Brimpus(x) & Grimpus(x)) -> HasBrimpus(x))", "(all x.(Brimpus(x) -> Grimpus(x)))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brumpus(x) -> Grimpus(x))", "exists x.(Brimpus(x) & Grimpus(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Gruppus(x))", "all x.(Brumpus(x) -> Grimpus(x))", "exists x.(Brimpus(x) & Grimpus(x))", "exists x.(Brampus(x) & Grumpus(x))", "exists x.(Brimpus(x) & Grimpus(x))"]}
{"id": "prontoqa_train_47", "nl": "Max is a jompus and Max is a lempus and Max is not a grimpus.", "fol": "(jompus(Max) & lempus(Max) & -grimpus(Max))", "prediction": ["(all x.(Max(x) -> Jompus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> -Grimpus(x)))", "all x y z.((Max(x) & Jompus(x) & Lempus(y) & -Grimpus(z)) -> (Jompus(x) & Lempus(y) & -Grimpus(z)))", "(all x.(Max(x) -> Jompus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> -Grimpus(z))))", "(all x y.((Max(x) & Jompus(x)) -> Max(x)) & ((Max(y) & Lempus(y)) -> -Grimpus(y)))", "all x y.((Max(x) & Jompus(x) & Lempus(y)) -> (Jompus(x) & Lempus(y) & -Grimpus(y)))", "all x y z.((Max(x) & Jompus(y) & Lempus(z)) -> (Jompus(x) & Lempus(z) & -Grimpus(z)))", "all x.(Max(x) -> (Jompus(x) | Lempus(x) | -Grimpus(x)))", "(all x y z.((Max(x) & Jompus(y) & Lempus(z)) -> (Jompus(x) | Lempus(z))) & ((Max(x) & Grimpus(x)) -> -Grimpus(x)))", "(all x.(Max(x) -> Jompus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> -Grimpus(x)))", "(Jompus(Max) & Lempus(Max) & -Grimpus(Max))", "all x y z.((Max(x) & Jompus(x) & Lempus(y) & Gruppus(z)) -> (Jompus(x) & Lempus(y) & -Grimpus(z)))", "(all x y.(Jompus(x) -> Max(x)) & (Lempus(y) -> Max(y)) & (Grimpus(y) -> Max(y)))", "all x.(Max(x) -> (Jompus(x) | Lempus(x) | -Grimpus(x)))", "(all x.(Max(x) -> Jompus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> -Grimpus(z))))", "all x y.((Max(x) & Jompus(x) & Lempus(y)) -> (Jompus(x) | Grimpus(y)))", "(all x.(Max(x) -> Jompus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> -Grimpus(x)))"]}
{"id": "prontoqa_train_48", "nl": "Every tumpus is a gorpus.", "fol": "all x. (tumpus(x) -> gorpus(x))", "prediction": ["all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x y.((Tumpus(x) & Gorpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x y.((Tumpus(x) & Gorpus(y)) -> Has(x,y))", "all x y.((Tumpus(x) & Gorpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "exists x.(Tumpus(x) & Gorpus(x))", "exists x.(Tompus(x) & Gorpus(x))", "exists x.(Tumpus(x) & Gorpus(x))"]}
{"id": "prontoqa_train_49", "nl": "Sam is a zumpus, Sam is not a gorpus, and Sam is a wumpus.", "fol": "(zumpus(Sam) & -gorpus(Sam) & wumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Gorpus(z)) -> (-Gorpus(y) & Wumpus(z)))", "(all x y z.((Sam(x) & Zumpus(y)) -> (Tompus(z) & -Gorpus(z))) & ((Sam(x) & Wumpus(x)) -> (Wumpus(x))))", "all x y z.((Sam(x) & Zumpus(y) & Gorpus(z)) -> (-Sam(x) & Wumpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "(all x y z.((Sam(x) & Zumpus(x)) -> (Sam(y) & -Gorpus(y)) & ((Sam(z) & Wumpus(z)) -> (Wumpus(z))))", "all x.(Sam(x) -> (Tompus(x) | -Gorpus(x) | Wumpus(x)))", "(all x.(SameDay(x) -> Zumpus(x)) & (SameDay(x) -> -Gorpus(x)) & (SameDay(x) -> Wumpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (-Sam(x) -> Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Gorpus(z)) -> (-Gorpus(y) & Wumpus(z)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "all x y z.((Sam(x) & Zumpus(y) & Gorpus(z)) -> (-Sam(x) & Wumpus(x)))", "exists x.(Sam(x) & Zumpus(x) & -Gorpus(x) & Wumpus(x))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Gorpus(z) & Wumpus(x)) -> (Sam(y) & -Sam(y) & Sam(z)))", "all x.(Sam(x) -> (Tompus(x) | -Gorpus(x) | Wumpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))"]}
{"id": "prontoqa_train_50", "nl": "Sam is not a tumpus.", "fol": "-tumpus(Sam)", "prediction": ["all x.(Sam(x) -> -Tumpus(x))", "(-Tumpus(Sam))", "all x.(Sam(x) -> -Tumpus(x))", "Sam is notTumpus(Sam).", "(-Tumpus(Sam))", "Sam is notTumpus(sam).", "all x.(Sam(x) -> -Tumpus(x))", "(-Tumpus(Sam))", "-Tumpus(Sam)", "all x.(Sam(x) -> -Tumpus(x))", "all x.(Sam(x) -> -Tumpus(x))", "(-Tumpus(Sam)", "-Tumpus(sam)", "all x.(Sam(x) -> -Tumpus(x))", "(-Tumpus(Sam)", "-Tumpus(sam)"]}
{"id": "prontoqa_train_51", "nl": "Each vumpus is a tumpus.", "fol": "all x. (vumpus(x) -> tumpus(x))", "prediction": ["all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "(all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x y.((Vumpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x y.((Vumpus(x) & Tumpus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Tumpus(x))", "all x y.((Vumpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "exists x.(Vumpus(x) & Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "exists x.(Vumpus(x) & Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "exists x.(Vumpus(x) & Tumpus(x))", "exists x.(Vumpus(x) & Tumpus(x))"]}
{"id": "prontoqa_train_52", "nl": "Rex is a wumpus, Rex is a yumpus, and Rex is not a tumpus.", "fol": "(wumpus(Rex) & yumpus(Rex) & -tumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Wumpus(x)) & (Yumpus(x) -> Yumpus(x)) & (Rex(x) -> -Tumpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & all y.(Rex(y) -> Yumpus(y)) & all z.(Rex(z) -> -Tumpus(z))))", "(all x y z.((Rex(x) & Wumpus(y)) -> Wumpus(x)) & ((Rex(z) & Yumpus(z)) -> Yumpus(z)) & ((Rex(x) & -Tumpus(x)) -> -Wumpus(x)))", "all x y z.((Rex(x) & Wumpus(y) & Yumpus(z)) -> (Wumpus(x) | Yumpus(z) | -Tumpus(z)))", "(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> Yumpus(x)) & (Rex(x) -> -Tumpus(x)))", "all x y z.((Rex(x) & Wumpus(y) & Yumpus(z)) -> (Wumpus(x) & Yumpus(z) & -Tumpus(x)))", "all x.(Rex(x) -> (Wumpus(x) & Yumpus(x) & -Tumpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & all y.(Rex(y) -> Yumpus(y)) & all z.(Rex(z) -> -Tumpus(z))))", "(all x.(Rex) -> Wumpus(x)) & (Rex(x) -> Yumpus(x)) & (Rex(x) -> -Tumpus(x)))", "(all x y z.((Rex(x) & Wumpus(y)) -> Wumpus(x)) & ((Rex(z) & Yumpus(z))) -> -Tumpus(z)))", "all x.(Rex(x) -> (Wumpus(x) | Yumpus(x) | -Tumpus(x)))", "all x y z.((Rex(x) & Wumpus(y) & Yumpus(z)) -> (Wumpus(x) | Yumpus(z) & -Tumpus(x)))", "(all x y z.((Rex(x) & Wumpus(y) & Yumpus(z)) -> Wumpus(x,y)) & ((Rex(x) & Yumpus(x,z)) -> -Tumpus(x)))", "all x y z.((Rex(x) & Wumpus(x) & Yumps(y) & -Tumpus(z)) -> (Wumpus(x) | Yumps(y) & -Tumpus(z)))", "all x y z.((Rex(x) & Yumpus(y) & Tumpus(z)) -> (Wumpus(x) & Yumpus(y) & -Tumpus(z)))", "(all x.(Rex(x) -> Wumpus(x)) & (Yumpus(x) & -Tumpus(x)))"]}
{"id": "prontoqa_train_53", "nl": "Rex is not a vumpus.", "fol": "-vumpus(Rex)", "prediction": ["all x.(Rex(x) -> -Vumpus(x))", "(-Vumpus(Rex))", "Rex is not a Vumpus.", "-Vumpus(Rex)", "Rex is not a Vumpus.", "all x.(Rex(x) -> -Vumpus(x))", "Rex is not a vumpus.", "Rex -Vumpus(x)", "-Vumpus(Rex)", "(Vumpus(Rex) & -Vumpus(Rex))", "(-Vimpus(Rex))", "Rex is not a Vumpus(x)", "all x.(Rex(x) -> -Vumpus(x))", "Rex -Vumpus(Rex)", "-Vumpus(Rex)", "(-Vumpus(Rex))"]}
{"id": "prontoqa_train_54", "nl": "Every gorpus is a rompus.", "fol": "all x. (gorpus(x) -> rompus(x))", "prediction": ["all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x y.((Gorpus(x) & Rompus(y)) -> Is(x,y))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x y.((Gorpus(x) & Rompus(y)) -> Has(x,y))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "exists x.(Gorpus(x) & Rompus(x))", "exists x.(Gorpus(x) & Roman(x))", "exists x.(Gorpus(x) & Rrompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "exists x.(Gorpus(x) & Rompus(x))"]}
{"id": "prontoqa_train_55", "nl": "Wren is not a rompus, Wren is a dumpus, and Wren is a grimpus.", "fol": "(-rompus(Wren) & dumpus(Wren) & grimpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Rompus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "all x y z.((Wren(x) & Dumpus(y) & Grimpus(z)) -> (-Rompus(x) & Dumpus(y) & Grimpus(z)))", "(all x.(Wren(x) -> -Rompus(x)) & ((Wren(x) & Dumpus(x)) | (Wren(x) & Grimpus(x)))))", "(all x y z.((Wren(x) & Rompus(y)) -> -Rompus(x)) & ((Wren(z) & Dumpus(z))) -> Grimpus(z)))", "all x.(Wren(x) -> (-Rompus(x) & Dumpus(x) & Grimpus(x)))", "all x y z.((Wren(x) & Dumpus(y) & Grimpus(z)) -> (-Rompus(x) & Dumpus(y) & Grimpus(z)))", "(all x.(Wren(x) -> -Rompus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "(all x y z.((Wren(x) & Rompus(y)) -> -Rompus(x)) & ((Wren(z) & Dumpus(z)) -> Grimpus(z)))", "(all x.(Wren(x) -> -Rompus(x)) | (-Rompus(x) & Dumpus(x))) | (-Rompus(x) & Dumpus(x) & Grimpus(x))))", "(all x.(Wren(x) -> -Rompus(x)) & ((Wren(x) & Dumpus(x)) | (-Rompus(x) & Grimpus(x)))))", "all x y z.((Wren(x) & Dumpus(y) & Gruppus(z)) -> (-Rompus(x) & Dumpus(y) & Grimpus(z)))", "all x y z.((Wren(x) & Dumpus(y) & Grimpus(z)) -> (-Rompus(x) & Dumpus(y) & Grimpus(z)))", "(all x y z.((Wren(x) & Rompus(y)) -> -Rompus(x)) & ((Wren(z) & Dumpus(z)) -> Grimpus(z)))", "(all x.(Wren(x) -> -Rompus(x)) | (Wren(x) -> Dumpus(x))) | (Wren(x) -> Grimpus(x)))", "all x y z.((Wren(x) & Dumpus(y) & Grimpus(z)) -> (-Rompus(x) | Dumpus(y) | Grimpus(z)))", "all x y z.((Wren(x) & Dumpus(y) & Gruppus(z)) -> (-Rompus(x) & Dumpus(y) & Gruppus(z)))"]}
{"id": "prontoqa_train_56", "nl": "Wren is not a gorpus.", "fol": "-gorpus(Wren)", "prediction": ["all x.(Wren(x) -> -Gorpus(x))", "(-Gorpus(Wren))", "all x.(Wren(x) -> -Gorpus(x))", "Wren is not a Gorpus.", "(-Gorpus(Wren))", "all x.(Wren(x) -> -Gorpus(x))", "-Gorpus(Wren)", "all x.(Wren(x) -> -Gorpus(x))", "(-Gorpus(Wren))", "-Gorpus(Wren)", "all x.(Wren(x) -> -Gorpus(x))", "(-Gorpus(Wren)).", "all x.(Wren(x) -> -Gorpus(x))", "-Gorpus(wren)", "all x.(Wren(x) -> -Gorpus(x))", "(-Gorpus(Wren)"]}
{"id": "prontoqa_train_57", "nl": "Jompuses are wumpuses.", "fol": "all x. (jompus(x) -> wumpus(x))", "prediction": ["all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "all x y.((Jompuse(x) & Wumpus(y)) -> Wumpus(x))", "all x.(Jumpus(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "(Wumpuse(jompus) & Wumpus(jompus))", "all x y.((Jompuse(x) & Wumpus(y)) -> Wumpus(x))", "(Wumpuse(jompuse) & Wumpus(jompuse,w))", "all x.(Jimpus(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "(Wumpuse(jompus) & HasWumpus(jompus))", "all x.(Jumpus(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jimpus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wampus(x))", "all x.(Jomess(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_58", "nl": "Fae is a zumpus, Fae is not a wumpus, and Fae is a rompus.", "fol": "(zumpus(Fae) & -wumpus(Fae) & rompus(Fae))", "prediction": ["(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))", "all x y z.((Fae(x) & Tompus(y) & Wumpus(z)) -> (-Tompus(x) & -Wumpus(y) & Rompus(z)))", "(all x y z.((Fae(x) & Zumpus(x)) -> (Fae(y) & -Wumpus(y))) & ((Fae(z) & Rompus(z)) -> (Fae(z) & -Wumpus(z))))", "all x y z.((Fae(x) & Zumpus(x) & Fae(y) & Rumpus(z)) -> (-Wumpus(y) & Rompus(z)))", "(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))", "all x.(Fae(x) -> (Tompus(x) | -Wumpus(x) | Rompus(x)))", "(all x y z.((Fae(x) & Zumpus(x)) -> (Tompus(x) & -Wumpus(y)) & ((Fae(z) & Rompus(z)) -> (Rompus(z)))))", "all x y z.((Fae(x) & Tompus(y) & Wumpus(z)) -> (-Wumpus(x) & Rompus(x)))", "(all x.(Fae(x) -> Zumpus(x)) & all y.(Fae(y) -> -Wumpus(y)) & all z.(Fae(z) -> Rompus(z))))", "all x y z.((Fae(x) & Zumpus(x) & Fae(y) & Rumpus(z)) -> (-Wumpus(y) & Rompus(z)))", "(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))", "all x y z.(Fae(x) & Zumpus(x) & Fae(y) & -Wumpus(y) & Rompus(z))", "(all x y z.((Fae(x) & Zumpus(y)) -> Toss(x,y)) & ((Fae(z) & -Wumpus(z)) -> Rompus(z)))", "all x.(Fae(x) -> (Tompus(x) | -Wumpus(x) | Rompus(x)))", "(all x.(Fae(x) -> Zumpus(x)) & all y.(Fae(y) -> -Wumpus(y)) & all z.(Fae(z) -> Rompus(z)))", "(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))"]}
{"id": "prontoqa_train_59", "nl": "Fae is not a jompus.", "fol": "-jompus(Fae)", "prediction": ["all x.(Fae(x) -> -Jompus(x))", "-Jompus(Fae)", "(Jompus(Fae) & -Jompus(Fae))", "(-Jompus(Fae))", "all x.(Fae(x) -> -Jompus(x))", "(-Jimpus(Fae))", "-Jompus(Fae)", "all x.(Fae(x) -> -Jimpus(x))", "(Jompus(Fae) & -Jompus(Fae))", "(Jompus(fae) | Jompus(fae))", "-Jumpus(Fae)", "all x.(Fae(x) -> -Jompus(x))", "-Jompus(Fae)", "all x.(Fae(x) -> -Jimpus(x))", "is notjompus.", "-Jimpus(Fae)"]}
{"id": "prontoqa_train_60", "nl": "Each grimpus is a sterpus.", "fol": "all x. (grimpus(x) -> sterpus(x))", "prediction": ["all x.(Grimpus(x) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "all x y.((Grimpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "(all x.(Grimpus(x) -> Sterpus(x))", "all x y.((Grimpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Gruppus(x) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "all x.(Strictus(x) -> Grimpus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "all x.(Grampus(x) -> Sterpus(x))", "exists x.(Grimpus(x) & Steropos(x))", "exists x.(Gruppus(x) & Sterpus(x))", "all x.(Grampus(x) -> Sterpus(x))", "exists x.(Grimpus(x) & Sterpus(x))", "exists x.(Gravity(x) & Sterpus(x))"]}
{"id": "prontoqa_train_61", "nl": "Sally is a rompus and Sally is not a sterpus and Sally is a brimpus.", "fol": "(rompus(Sally) & -sterpus(Sally) & brimpus(Sally))", "prediction": ["(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Sterpus(x)) & (Sally(x) -> Brimpus(x)))", "all x y z.((Sally(x) & Rrompus(x) & -Sterpus(y) & Brimpus(z)) -> (Rompus(x) & Brimpus(y)))", "all x.(Sally(x) -> (Rompus(x) & -Sterpus(x) & Brimpus(x)))", "(all x.(Rompus(x) -> Sally(x)) & (-Sterpus(x) -> Sally(x)) & (Brimpus(x) -> Sally(x)))", "all x y.((Sally(x) & Rrompus(x) & -Sterpus(y)) -> (Brimpus(x) & Brimpus(y)))", "(all x y.(Rompus(x) -> Sally(x)) & (-Sterpus(y) -> Sally(y))) & (Brimpus(y) -> Sally(y)))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Sterpus(x)) & (Sally(x) -> Brimpus(x)))", "(all x.(Sally(x) -> Rompus(x)) & (-Sterpus(x) & -Brimpus(x)))", "all x y z.((Sally(x) & Rimpus(y) & Sterpus(z)) -> (Rompus(x) & -Sterpus(y) & Brimpus(z)))", "all x.(Sally(x) -> (Rompus(x) & -Sterpus(x) & Brimpus(x)))", "(all x y.(Rompus(x) -> Sally(x)) & (Sterpus(y) -> -Sterpus(y)) & (Brimpus(y) -> Sally(y)))", "exists x.(Rompus(x) & -Sterpus(x) & Brimpus(x))", "all x y.((Sally(x) & Rimpus(x)) -> (Rompus(x) & -Sterepus(y) & Brimpus(x)))", "(all x.(Rompus(x) -> Sally(x)) & (-Sterpus(x) -> Sally(x)) & (Brimpus(x) -> Sally(x)))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Sterepus(x)) & (Sally(x) -> Brimpus(x)))", "all x.(Sally(x) -> (Rompus(x) & -Sterepus(x) & Brimpus(x)))"]}
{"id": "prontoqa_train_62", "nl": "Sally is not a grimpus.", "fol": "-grimpus(Sally)", "prediction": ["all x.(Sally(x) -> -Grimpus(x))", "Sally is not a Grimpus.", "(-Grimpus(Sally))", "Sally n'est pas Grimpus.", "Sally is not a Grimpus.", "all x.(Sally(x) -> -Grimpus(x))", "Sally -Grimpus(Sally)", "(-Grimpus(Sally))", "all x.(Sally(x) -> -Grimpus(x))", "-Grimpus(Sally)", "Sally is not a Grimpus.", "Sally n'est pas Grimpus.", "(-Grimpus(Sally))", "Sally is not a Grimpus.", "Sally is notGrimpus.", "-Grimpus(Sally)"]}
{"id": "prontoqa_train_63", "nl": "Vumpuses are tumpuses.", "fol": "all x. (vumpus(x) -> tumpus(x))", "prediction": ["all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x y.((Vumpus(x) & Tumpus(y)) -> Tumpus(x))", "(Tumpuse(v) & -Tumpus(v) & HasTumpus(v))", "(all x.(Vumpus(x) -> Tumpus(x)))", "all x.(Vumpus(x) -> Tumpus(x))", "(Tumpuse(v) & Tumpus(v))", "all x y.((Vumpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumulus(x))", "all x.(Vumpuse(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Voluptus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumulus(x))"]}
{"id": "prontoqa_train_64", "nl": "Sam is not a tumpus, Sam is a jompus, and Sam is a zumpus.", "fol": "(-tumpus(Sam) & jompus(Sam) & zumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Tumpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Zumpus(x)))", "all x y z.((Sam(x) & Tompus(y) & Jompus(z)) -> (-Tumpus(x) & -Jumpus(y) & -Tompus(z)))", "(all x.(Sam(x) -> -Tumpus(x)) & all y.(Jompus(y) & All z.(Zumpus(z)) -> -Tumpus(x)))", "all x.(Sam(x) -> (-Tumpus(x) & Jompus(x) & Zumpus(x)))", "all x y z.((Sam(x) & Tumpus(y) & Jompus(z)) -> (-Tumpus(x) & -Jumpus(y) & -Zumpus(z)))", "(all x y z.((Sam(x) & Tumpus(y)) -> -Tumpus(x)) & ((Sam(z) & Jompus(z)) -> Zumpus(z)))", "(all x y z.((Sam(x) & Tumpus(y) & Jompus(z)) -> -Tumpus(x)) & ((Sam(x) & Zumpus(x)) -> Jompus(x)))", "(all x.(Sam(x) -> -Tumpus(x)) & (Jompus(x) & Zumpus(x)))", "(all x.(Sam(x) -> -Tumpus(x)) & all y.(Sam(y) -> Jompus(y)) & all z.(Sam(z) -> Zumpus(z))))", "all x.(Sam(x) -> (-Tumpus(x) & Jompus(x) & Zumpus(x)))", "all x y z.((Sam(x) & Tompus(y) & Jompus(z)) -> (-Tumpus(x) & -Jimpus(y) & -Zumpus(z)))", "all x y z.((Sam(x) & Tumpus(y) & Jompus(z)) -> (-Tumpus(x) & -Jumpus(y) & -Zumpus(z)))", "exists x.(Sam(x) & -Tumpus(x) & Jompus(x) & Zumpus(x))", "(all x.(Sam(x) -> -Tumpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Zumpus(x)))", "all x y z.((Sam(x) & Tumpus(y) & Jompus(z)) -> (-Tumpus(x) & Zumpus(x)))", "(all x.(Sam(x) -> -Tumpus(x)) & all y.(Jompus(y) -> Zumpus(y)))"]}
{"id": "prontoqa_train_65", "nl": "Sam is not a vumpus.", "fol": "-vumpus(Sam)", "prediction": ["all x.(Sam(x) -> -Vumpus(x))", "(-Vumpus(Sam))", "Sam is not a Vumpus.", "all x.(Sam(x) -> -Vumpus(x))", "Sam is not a vumpus.", "(-Vumpus(Sam))", "(Vumpus(Sam) & -Vumpus(Sam))", "-Vumpus(Sam)", "all x.(Sam(x) -> -Vumpus(x))", "-Vumpus(Sam)", "Sam is not a Vumpus.", "(-Vimpus(Sam))", "all x.(Sam(x) -> -Vimpus(x))", "all x.(Sam(x) -> -Vumpus(x))", "(-Vumpus(Sam)).", "-Vimpus(sam)"]}
{"id": "prontoqa_train_66", "nl": "Grimpuses are zumpuses.", "fol": "all x. (grimpus(x) -> zumpus(x))", "prediction": ["all x.(Grimpus(x) -> Zumpus(x))", "all x.(Grimpus(x) -> Zumpus(x))", "all x y.((Grimpuse(x) & Zumpuse(y)) -> Has(x,y))", "all x.(Gruppuse(x) -> Zumpuse(x))", "all x.(Grimpuse(x) -> Zumpuse(x))", "(All x.(Grimpuse(x) -> Zumpuse(x))", "all x.(Grimpus(x) -> Zumpus(x))", "(all x.(Grimpuse(x) -> Zumpuse(x))", "all x y.((Grimpus(x) & Zumpus(y)) -> Tosspus(x))", "all x.(Gruppus(x) -> Zumpus(x))", "all x.(Rambuse(x) -> Zumpuse(x))", "(All x.(Grimpus(x) -> Zumpus(x))", "all x.(Grimpus(x) -> Zumpus(x))", "All x.(Gruppuse(x) -> Zumpuse(x))", "all x.(Grimpus(x) -> Zumpuse(x))", "All x.(Grimpuse(x) -> Zumpuse(x))"]}
{"id": "prontoqa_train_67", "nl": "Polly is a yumpus and Polly is not a zumpus and Polly is a numpus.", "fol": "(yumpus(Polly) & -zumpus(Polly) & numpus(Polly))", "prediction": ["(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Yampus(y) & Polly(z)) -> (Yumpus(x) & -Zumpus(z) & Numpus(z)))", "all x y.((Polly(x) & Yampus(x)) -> (-Tompus(x) & Numpus(y)))", "(all x y.(Yumpus(x) -> Polly(x)) & (-Zumpus(y) -> Polly(y))) & (-Zumpus(y) -> Polly(y)))", "all x y z.((Polly(x) & Yumpus(y) & Polly(z)) -> (-Tompus(z) & Numpus(z)))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Numpus(x)))", "all x.(Polly(x) -> (Yumpus(x) & -Zumpus(x) & Numpus(x)))", "all x y.((Polly(x) & Polly(y)) -> (Yumpus(x) & -Zumpus(y) & Numpus(y)))", "(yumpus(poly) & -zumpus(poly) & -numpus(poly))", "exists x.(Polly(x) & Yampus(x) & -Zumpus(x) & Numpus(x))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Numpus(x)))", "(all x.(Polly(x) -> Yumpus(x)) & (Polly(x) -> -Tompus(x)) & (Polly(x) -> Numpus(x)))", "(all x y.(Yumpus(x) -> Polly(x)) & (-Zumpus(y) -> Polly(y))) & (-Zumpus(y) -> Polly(y)))", "all x y z.((Polly(x) & Yampus(y) & Polly(z)) -> (Yumpus(x) & -Zumpus(z) & -Numpus(z)))", "all x y.((Polly(x) & Yampus(x)) -> (-Tompus(x) & Numpus(y)))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Numpus(x)))"]}
{"id": "prontoqa_train_68", "nl": "Polly is not a grimpus.", "fol": "-grimpus(Polly)", "prediction": ["all x.(Polly(x) -> -Grimpus(x))", "(-Grimpus(Polly))", "Polly is notGrimpus(Polly)", "all x.(Polly(x) -> -Grimpus(x))", "(-Grimpus(Polly))", "Polly is notGrimpus(poly)", "(-Grimpus(Polly))", "all x.(Polly(x) -> -Grimpus(x))", "Polly -Grimpus(Polly)", "-Gruppus(Polly)", "Polly is notGrimpus.", "-Grimpus(Polly)", "Polly -Grimpus(polly)", "all x.(Polly(x) -> -Grimpus(x))", "(-Grimpus(Polly))", "(-Grimpus(Polly))"]}
{"id": "prontoqa_train_69", "nl": "Each shumpus is a grimpus.", "fol": "all x. (shumpus(x) -> grimpus(x))", "prediction": ["all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x y.((Shumpus(x) & Grimpus(y)) -> Is(x,y))", "(all x.(Shumpus(x) -> Grimpus(x)))", "all x.(Shumpus(x) -> Grimpus(x))", "all x y.((Shumpus(x) & Grimpus(y)) -> Is(x,y))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Gruppus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grumpus(x))", "exists x.(Shumpus(x) & Grimpus(x))", "exists x.(Shumpus(x) & Gruppus(x))", "exists x.(Shumpus(x) & Grimpus(x))", "exists x.(shumpus(x) & Grumpus(x))"]}
{"id": "prontoqa_train_70", "nl": "Polly is a lorpus and Polly is a gorpus and Polly is not a grimpus.", "fol": "(lorpus(Polly) & gorpus(Polly) & -grimpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) & Gorpus(x) & -Grimpus(x)))", "(all x.(Lorpus(x) -> Polly(x)) & all y.(Gorpus(y) -> Polly(y))) & all z.(Grimpus(z) -> -Lorpus(z)))", "all x y.((Polly(x) & Lorpus(x) & Gorpus(y)) -> (Lorpus(x) & -Grimpus(y)))", "all x y z.((Polly(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) & Gorpus(x) & -Grimpus(x)))", "(all x y.(Lorpus(x) & Lorpus(y)) & (Gorpus(y) & -Grimpus(y)))", "(all x y z.((Polly(x) & Lorpus(y)) -> (Lorpus(x) & Gorpus(y))) & ((Polly(z) & Grimpus(z)) -> -Lorpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Gorpus(y)) & all z.(Polly(z) -> -Grimpus(z))))", "all x.(Polly(x) -> (Lorpus(x) & Gorpus(x) & -Grimpus(x)))", "exists x.(Polly(x) & Lorpus(x) & Gorpus(x) & -Grimpus(x))", "(all x.(Lorpus(x) -> Polly)) & (Gorpus(x) -> Polly)) & (Grimpus(x) -> -Lorpus(x)))", "all x y.((Polly(x) & Lorpus(x) & Gorpus(y)) -> (Lorpus(x) & Gorpus(y) & -Grimpus(y)))", "all x y z.((Polly(x) & Lorpus(x) & Gorpus(y) & Polly(z)) -> (Lorpus(x) & Gorpus(y) & -Grimpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)))", "all x y z.((Polly(x) & Lorpus(x) & Gorpus(y) & Polly(z)) -> (Lorpus(x) & Gorpus(y) & -Grimpus(z)))", "(all x y.(Lorpus(x) -> Polly(x)) & (Gorpus(y) -> Polly(y)) & (Grimpus(y) -> -Grimpus(y)))"]}
{"id": "prontoqa_train_71", "nl": "Each impus is a tumpus.", "fol": "all x. (impus(x) -> tumpus(x))", "prediction": ["all x.(Issue(x) -> Tumpus(x))", "all x.(Impossible(x) -> Tumpus(x))", "all x y.((Issue(x) & IsTumpus(y)) -> IsTumpus(x))", "(all x.(Impossible(x) -> Tumpus(x)))", "all x.(Impact(x) -> Tumpus(x))", "all x.(Issue(x) -> Tumpus(x))", "all x y.((Issue(x) & Tompus(y)) -> IsTumpus(x))", "all x.(Impossible(x) -> Tumulus(x))", "all x.(Impact(x) -> Tumpus(x))", "all x.(Issue(x) -> Tumpus(x))", "exists x.(Impact(x) & Tumpus(x))", "all x.(Impossible(x) -> Tumulus(x))", "exists x.(Impossible(x) & Tumpus(x))", "exists x.(Impedus(x) & Tumulus(x))", "all x.(Issue(x) -> Tumpus(x))", "exists x.(Impossible(x) & Tumpus(x))"]}
{"id": "prontoqa_train_72", "nl": "Rex is a numpus and Rex is not a tumpus and Rex is a gorpus.", "fol": "(numpus(Rex) & -tumpus(Rex) & gorpus(Rex))", "prediction": ["(all x.(Rex(x) -> Numpus(x)) & (-Tumpus(x) & Gorpus(x)))", "all x y z.((Rex(x) & Numpus(x) & Tumpus(y) & Gorpus(z)) -> (Numpus(x) & -Tumpus(y) & Gorpus(z)))", "(all x.(Rex(x) -> Numpus(x)) & (Rex(x) -> -Tumpus(x)) & (Rex(x) -> Gorpus(x)))", "(all x y z.((Rex(x) & Numpus(x)) -> Numpus(x)) & ((Rex(y) & -Tumpus(y)) -> Gorpus(z)))", "(all x y.(Rex(x) -> Numpus(x)) & (Rex(y) -> -Tumpus(y)) & (Rex(y) -> Gorpus(y)))", "all x.(Rex(x) -> (Numpus(x) & -Tumpus(x) & Gorpus(x)))", "all x y z.((Rex(x) & Numpus(x) & Rex(y) & Tumpus(z)) -> (-Tumpus(y) & Gorpus(z)))", "all x y.((Rex(x) & Numpus(x) & -Tumpus(y)) -> Gorpus(x))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Rex(y) -> -Tumpus(y))) & all z.(Rex(z) -> Gorpus(z)))", "(all x.(Rex(x) -> Numpus(x)) & (-Tumpus(x) & Gorpus(x)))", "all x y z.((Rex(x) & Numpus(y) & Tumpus(z)) -> (-Tumpus(x) & Gorpus(x)))", "all x.(Rex(x) -> (Numpus(x) & -Tumpus(x) & Gorpus(x)))", "(all x y.(Numpus(x) -> Rex)) & (Tumpus(y) -> -Tumpus(y)) & (Gorpus(y) -> Rex)))", "all x y.((Rex(x) & Numpus(x) & Rex(y)) -> (-Tumpus(y) & Gorpus(y)))", "(all x.(Rex(x) -> Numpus(x)) & (Rex(x) -> -Tumpus(x)) & (Rex(x) -> Gorpus(x)))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Rex(y) -> -Tumpus(y))) & all z.(Rex(z) -> Gorpus(z)))"]}
{"id": "prontoqa_train_73", "nl": "Rex is not an impus.", "fol": "-impus(Rex)", "prediction": ["-Impossible(Rex)", "Rex -Impossible(Rex)", "all x.(Rex(x) -> -Impossible(x))", "Rex is not impused.", "-IllegalRex(x)", "(-Impossible(Rex))", "-(Rex(x) & IsNot(x))", "(-IsRex(Rex))", "all x.(Rex(x) -> -Impossible(x))", "Rex -Impossible(re)", "-Illegal(Rex)", "All x.(Rex(x) -> -Is(x,Is(x,Is(x)))", "Rex is not impus.", "all x.(Rex(x) -> -Impossible(x))", "(-Impossible(Rex))", "(-IsRex(Rex))"]}
{"id": "prontoqa_train_74", "nl": "Lorpuses are zumpuses.", "fol": "all x. (lorpus(x) -> zumpus(x))", "prediction": ["all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x y.((Lorpuse(x) & Zumpuse(y)) -> Has(x,y))", "all x.(Lorpus(x) -> Zumpuse(x))", "all x.(Lorpuse(x) -> Zumpuse(x))", "All x y.((Lorpus(x) & Zumpus(y)) -> Toss(x,y))", "(Zombie(lorpus) & Lorpus(lorpus))", "All x y.((Lorpuse(x) & Zumpus(y)) -> Toss(x,y))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpuse(x) -> Zumpuse(x))", "(Zumpuse(lorpus) & Tossain(lorpus))", "all x.(Lorpus(x) -> Zumpuse(x))", "all x.(Lurpise(x) -> Zumpuse(x))", "all x.(Lorpuse(x) -> Zumpuse(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorph(x) -> Zumpuse(x))"]}
{"id": "prontoqa_train_75", "nl": "Sam is a lempus, Sam is not a zumpus, and Sam is a yumpus.", "fol": "(lempus(Sam) & -zumpus(Sam) & yumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpus(x)))", "all x y z.((Sam(x) & Lempus(x) & Sam(y) & Zumpus(z)) -> (-Sam(x) & Yampus(y)))", "(all x y z.((Sam(x) & Lempus(x)) -> (Lempus(x) & -Zumpus(y)) & ((Sam(z) & Yumpus(z))) -> (Yumpus(z))))", "(all x.(SameDay(x) -> Lempus(x)) & (SameDay(x) -> -Zumpus(x)) & (SameDay(x) -> Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpus(x)))", "all x y z.((Sam(x) & Lempus(x) & Sam(y) & Zumpus(z)) -> (-Sam(x) & Yumpus(y)))", "(all x y z.((Sam(x) & Lempus(x)) -> (Lempus(x) | -Zumpus(x)) | (Yumpus(y) & Sam(z))))", "all x y.((Sam(x) & Lempus(x)) -> (-Zumpus(x) & Yumpus(y)))", "all x.(Sam(x) -> (Lempus(x) & -Zumpus(x) & Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpus(x)))", "exists x.(Sam(x) & Lempus(x) & -Zumpus(x) & Yumpus(x))", "(all x.(Sam) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpus(x)))", "all x y z.((Sam(x) & Lempus(y) & Zumpus(z)) -> (Lempus(x) & -Zumpus(y) & Yumpus(z)))", "all x y z.((Sam(x) & Lempus(x) & Sam(y) & Zumpus(z)) -> (-Sam(y) & Yumpus(z)))", "all x y z.((Sam(x) & Lempus(x) & Sam(y) & Zumpus(z)) -> (-Sam(x,y) & Yumpus(y)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpus(x)))"]}
{"id": "prontoqa_train_76", "nl": "Sam is not a lorpus.", "fol": "-lorpus(Sam)", "prediction": ["all x.(Sam(x) -> -Lorpus(x))", "(-Lorpus(Sam))", "Sam is not a lorpus.", "all x.(Sam(x) -> -Lorpus(x))", "(-Lorpus(Sam))", "(-Lorpus(Sam) & -Lorpus(Sam))", "Sam is notLorpus(Sam).", "(Lorpus(Sam) & -Lorpus(Sam))", "all x.(Sam(x) -> -Lorpus(x))", "-Lorpus(Sam)", "(-Lorpus(Sam) & -Lorpus(Sam))", "all x.(Sam(x) -> -Lorpus(x))", "all x.(Sam(x) -> -Lorpus(x))", "-Lorpus(sam)", "all x.(Sam(x) -> -Lorpus(x))", "-Lorpus(Sam)"]}
{"id": "prontoqa_train_77", "nl": "Every impus is a grimpus.", "fol": "all x. (impus(x) -> grimpus(x))", "prediction": ["all x.(Issue(x) -> Grimpus(x))", "all x.(Impact(x) -> Grimpus(x))", "all x.(Issue(x) -> Grimpus(x))", "all x y.((Issue(x) & Grimpus(y)) -> IsSurprise(x))", "all x.(Implementation(x) -> Grimpus(x))", "all x.(Impossible(x) -> Grimpus(x))", "(all x.(Impact(x) -> Grimpus(x))", "all x y.((Issue(x) & Grimpus(y)) -> IsStorm(x))", "all x.((Impossible(x) & Grimpus(x)) -> Is(x))", "all x.(Impact(x) -> Grimpus(x))", "all x.(Issue(x) -> Grimpus(x))", "all x.(Is(x) -> Grimpus(x))", "all x.(Impossible(x) -> Gruppus(x))", "exists x.(Defimer(x) & Grimpus(x))", "exists x.(Defimer(x) & Grimpus(x))", "exists x.(Defimer(x) & Grimpus(x))"]}
{"id": "prontoqa_train_78", "nl": "Polly is a gorpus and Polly is not a grimpus and Polly is a lorpus.", "fol": "(gorpus(Polly) & -grimpus(Polly) & lorpus(Polly))", "prediction": ["(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lorpus(x)))", "all x y z.((Polly(x) & Gorpus(x) & Polly(y) & Grimpus(z)) -> (-Grimpus(y) & Lorpus(z)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lorpus(x)))", "all x y.((Polly(x) & Gorpus(x) & Polly(y)) -> (-Grimpus(y) & -Lorpus(y)))", "(all x y.(Gorpus(x) -> Polly(x)) & (-Grimpus(y) -> Polly(y))) & (Lorpus(y) -> Polly(y)))", "(all x y z.((Polly(x) & Gorpus(x)) -> Polly(y)) & ((Polly(z) & -Grimpus(z)) -> Lorpus(z)))", "all x y z.((Polly(x) & Gorpus(x) & Polly(y) & Grimpus(z)) -> (-Grimpus(y) & -Lorpus(y)))", "all x.(Polly(x) -> (Gorpus(x) & -Grimpus(x) & Lorpus(x)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lorpus(x)))", "all x y z.((Polly(x) & Gorpus(x) & Polly(y) & Gruppa(z)) -> (-Grimpus(y) & Lorpus(z)))", "exists x.(Polly(x) & Gorpus(x) & -Grimpus(x) & Lorpus(x))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lorpus(x)))", "all x y.((Polly(x) & Gorpus(x) & Polly(y)) -> (-Grimpus(y) & Lorpus(y)))", "(all x y.(Gorpus(x) -> Polly(x)) & (-Grimpus(y) -> Polly(y))) & (Lorpus(y) -> Polly(y)))", "all x.(Polly(x) -> (Gorpus(x) & -Grimpus(x) & -Lorpus(x)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lorpus(x)))"]}
{"id": "prontoqa_train_79", "nl": "Every vumpus is a dumpus.", "fol": "all x. (vumpus(x) -> dumpus(x))", "prediction": ["all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "(all x.(Vumpus(x) -> Dumpus(x))", "exists x y.(Vumpus(x) & Dumpus(y))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.((Vumpus(x) & Dumpus(x)) -> Has(x,y))", "all x.(Vumpus(x) -> Dumpus(x))", "exists x y.(Vumpus(x) & Dumpus(y))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "exists x.(Vumpus(x) & Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_80", "nl": "Polly is a rompus, Polly is a brimpus, and Polly is not a dumpus.", "fol": "(rompus(Polly) & brimpus(Polly) & -dumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Rompus(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> -Dumpus(x)))", "all x y z.((Polly(x) & Rimpus(y) & Brimpus(z)) -> (Rompus(x) & Brimpus(y) & -Dumpus(z)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> -Dumpus(z))))", "(all x.(Polly(x) -> Rompus(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> -Dumpus(x)))", "(all x y z.((Polly(x) & Rompus(x)) -> Polly(y)) & ((Polly(z) & Brimpus(z)) -> Polly(z)) & -Dumpus(z)))", "all x.(Polly(x) -> (Rompus(x) & Brimpus(x) & -Dumpus(x)))", "all x y z.((Polly(x) & Rompus(x) & Brimpus(y) & Dumpus(z)) -> (Rompus(x) & Brimpus(y) & -Dumpus(z)))", "all x y z.((Polly(x) & Rimpus(y) & Brimpus(z)) -> (Rompus(x) | Polly(x) & -Dumpus(x)))", "all x y z.((Polly(x) & Rimpus(y) & Brimpus(z)) -> (Rompus(x) | Polly(x) & -Dumpus(x)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> -Dumpus(z))))", "all x.(Polly(x) -> (Rompus(x) | Brimpus(x) | -Dumpus(x)))", "(all x y z.((Polly(x) & Rompus(x)) -> Polly(y)) & ((Polly(z) & Brimpus(z)) -> Polly(z)) & ((Polly(z) & Dumpus(z)) -> -Dumpus(z))))", "(all x.(Polly(x) -> Rompus(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> -Dumpus(x)))", "all x y z.((Polly(x) & Rimpus(y) & Brimpus(z)) -> (Rompus(x) & Brimpus(y) & -Dumpus(z)))", "(all x y z.((Polly(x) & Rompus(y)) -> Polly(x,y)) & ((Polly(z) & Brimpus(z)) -> Polly(z)) & -Dumpus(z)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> -Dumpus(z))))"]}
{"id": "prontoqa_train_81", "nl": "Polly is not a vumpus.", "fol": "-vumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Vumpus(x))", "(-Vumpus(Polly))", "Polly is not a Vumpus.", "all x.(Polly(x) -> -Vumpus(x))", "Polly -Vumpus(Polly)", "(-Vumpus(Polly))", "Polly is not a vumpus.", "(Vumpus(Polly) & -Vumpus(Polly))", "-Vumpus(Polly)", "all x.(Polly(x) -> -Vumpus(x))", "all x.(Polly(x) -> -Vumpus(x))", "(-Vumpus(Polly))", "Polly -Vumpus(Polly)", "all x.(Polly(x) -> -Vumpus(x))", "-Vumpus(Polly,y)", "(-Vimpus(Polly))"]}
{"id": "prontoqa_train_82", "nl": "Every rompus is a yumpus.", "fol": "all x. (rompus(x) -> yumpus(x))", "prediction": ["all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yumpus(x))", "(all x.(Rompus(x) -> Yumpus(x))", "all x y.((Rompus(x) & Yampus(y)) -> Has(x,y))", "all x.(Rompus(x) -> Yumpa(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(rompus(x) -> Yumpa(x))", "all x y.((Rompus(x) & Yumpus(y)) -> Has(x,y))", "all x.(Rompus(x) -> Yampus(x))", "exists x.(rompus(x) & Yampus(x))", "all x.(Rompus(x) -> Yumpus(x))", "exists x.(rompus(x) & Yampus(x))", "all x.(Rompus(x) -> Yumpus(x))", "exists x.(rompus(x) & Yumpus(x))", "all x.(Rompus(x) -> Yampus(x))", "all x.(Rompus(x) -> Yumpa(x))"]}
{"id": "prontoqa_train_83", "nl": "Stella is not a yumpus, Stella is a shumpus, and Stella is a vumpus.", "fol": "(-yumpus(Stella) & shumpus(Stella) & vumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Humpus(x)) & (Stella(x) -> Vumpus(x)))", "all x y z.((Stella(x) & Yumpus(y) & Shumpus(z)) -> (-Yumpus(x) & -Shumpus(x) & -Vumpus(x)))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Shumpus(y)) & all z.(Stella(z) -> Vumpus(z))))", "(all x y z.((Stella(x) & Yumpus(y)) -> -Yumpus(x)) & ((Stella(z) & Humpus(z))) -> Vumpus(z)))", "all x y z.((Stella(x) & Yumpus(y) & Humpus(z)) -> (-Yumpus(x) & Shumpus(y) & Vumpus(z)))", "all x.(Stella(x) -> (-Yumpus(x) & -Shumpus(x) & -Vumpus(x)))", "exists x.(Stella(x) & -Yumpus(x) & Shumpus(x) & Vumpus(x))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Humpus(x)) & (Stella(x) -> Vumpus(x)))", "all x y z.((Stella(x) & Yumpus(y) & Shumpus(z)) -> (-Yumpus(x) & Shumpus(x) & Vumpus(x)))", "(all x y z.((Stella(x) & Yumpus(y)) -> -Yumpus(x)) & ((Stella(z) & Humpus(z))) -> Vumpus(z)))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Humpus(y)) & all z.(Stella(z) -> Vumpus(z))))", "all x y.((Stella(x) & Stella(y)) -> (-Yumpus(x) | (Shumpus(y) | Vumpus(y))))", "all x y z.((Stella(x) & Yumpus(y) & Humpus(z)) -> (-Yumpus(x) & Shumpus(x) & Vumpus(x)))", "all x y z.((Stella(x) & Yampus(y) & Humpus(z) & Vumpus(x)) -> (-Yumpus(x) & Shumpus(y) & Vumpus(z)))", "(all x y z.((Stella(x) & Yumpus(y)) -> -Yumpus(x)) & ((Stella(z) & Humpus(z))) -> Vumpus(z)))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Humpus(x)) & (Vumpus(x) -> Yumpus(x)))"]}
{"id": "prontoqa_train_84", "nl": "Stella is not a rompus.", "fol": "-rompus(Stella)", "prediction": ["Stella is not a rompus.", "all x.(Stella(x) -> -Rompus(x))", "(-Rompus(Stella))", "Stella -Rompus(Stella))", "Stella is not a Rompus.", "all x.(Stella(x) -> -Rompus(x))", "(-Rompus(Stella))", "Stella is not a rompus.", "all x.(Stella(x) -> -Rompus(x))", "(-Rompus(Stella))", "Stella -Rompus(Stella)", "(-rompus(Stella))", "Stella is not a Rompus.", "-Rompus(Stella)", "Stella is not a rompus.", "-Rompus(Stella)"]}
{"id": "prontoqa_train_85", "nl": "Each wumpus is a brimpus.", "fol": "all x. (wumpus(x) -> brimpus(x))", "prediction": ["all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "(all x.(Wumpus(x) -> Brimpus(x)))", "all x y.((Wumpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Wumpus(x) -> Brimpus(x))", "all x y.((Wumpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Wumpus(x) -> Brimpus(x))", "all x y.((Wumpus(x) & Brimpus(y)) -> Is(x,y))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "exists x.(Wumpus(x) & -Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "exists x.(Wumpus(x) & Brumpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "exists x.(Wumpus(x) & Brumpus(x))"]}
{"id": "prontoqa_train_86", "nl": "Max is a yumpus, Max is not a brimpus, and Max is a lorpus.", "fol": "(yumpus(Max) & -brimpus(Max) & lorpus(Max))", "prediction": ["(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))", "all x y z.((Max(x) & Yumpus(y) & Brimpus(z)) -> (Yumpus(x) & -Brimpus(y) & Lorpus(z)))", "(all x y z.((Max(x) & Yumpus(y)) -> (Yumpus(x) & -Brimpus(y))) & ((Max(z) & Lorpus(z)) -> (Lorpus(z))))", "all x y z.((Max(x) & Yumpus(y) & Brimpus(z)) -> (-Yumpus(x) & -Brimpus(y) & -Lorpus(z)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))", "(all x y z.((Max(x) & Yumpus(y) & -Brimpus(z)) -> (Yumpus(x) & -Brimpus(y)) & ((Max(x) & Lorpus(x)) -> Lorpus(x)))", "all x.(Max(x) -> (Yumpus(x) & -Brimpus(x) & Lorpus(x)))", "(yumpus(x) | -brimpus(x) | -lorpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> -Brimpus(y))) & all z.(Max(z) -> Lorpus(z)))", "all x y z.((Max(x) & Yumpus(y) & Brimpus(z)) -> (Yumpus(x) & -Brimpus(x) & Lorpus(x)))", "all x.(Max(x) -> (Yumpus(x) & -Brimpus(x) & -Lorpus(x)))", "(all x.(Max(x) -> Yampus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))", "(all x y z.((Max(x) & Yumpus(y)) -> (Yumpus(x) | -Brimpus(y)) | (-Yumpus(z) & Brimpus(z)) & -Lorpus(z))))", "all x y z.((Max(x) & Yampus(x) & Brimpus(y) & Lorpus(z)) -> (Yumpus(x) & -Brimpus(y) & -Lorpus(z)))", "all x y z.((Max(x) & Yumpus(y) & -Brimpus(z)) -> (Yumpus(x) | -Brimpus(z) | -Lorpus(x)))", "(all x.(Max(x) -> Yampus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))"]}
{"id": "prontoqa_train_87", "nl": "Max is not a wumpus.", "fol": "-wumpus(Max)", "prediction": ["(-Wumpus(Max))", "all x.(Max(x) -> -Wumpus(x))", "Max is not a wumpus.", "(Wumpus(Max) & -Wumpus(Max))", "-Wumpus(Max)", "all x.(Max(x) -> -Wumpus(x))", "Max is not a wumpus.", "(-Wumpus(Max))", "(Wumpus(Max) & -Wumpus(Max))", "all x.(Max(x) -> -Wumpus(x))", "Max is not a wumpus.", "-Wumpus(Max)", "-(Wumpus(Max))", "(-Wumpus(Max))", "-Wumpus(Max)", "-Wumpus(Max)"]}
{"id": "prontoqa_train_88", "nl": "Zumpuses are impuses.", "fol": "all x. (zumpus(x) -> impus(x))", "prediction": ["all x.(Zumpus(x) -> Issue(x))", "all x y.((Zumpuse(x) & Issue(y)) -> Issue(x,y))", "all x.(Zumpuse(x) -> Issue(x))", "all x.(Zumpus(x) -> Issue(x))", "(Issue(z) & Impossible(z))", "all x y.((Zumpuse(x) & Impossible(y)) -> Issue(x,y))", "(Issues(z) & Impose(z))", "all x y.((Zumpus(x) & Issue(y)) -> Issue(x,y))", "all x.(Zumpuse(x) -> Issue(x))", "all x.(Zumpus(x) -> Issue(x))", "all x.(Zombie(x) -> Isolated(x))", "all x.(Zumpus(x) -> Issues(x))", "all x.(Zombie(x) -> Impects(x))", "all x.(Zumpus(x) -> Impects(x))", "All x.(Zupes(x) -> Isolates(x))", "All x.(Zumpus(x) -> Ispose(x))"]}
{"id": "prontoqa_train_89", "nl": "Alex is a tumpus and Alex is not an impus and Alex is a rompus.", "fol": "(tumpus(Alex) & -impus(Alex) & rompus(Alex))", "prediction": ["(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> -Impossible(x))) & (Alex(x) -> Rompus(x)))", "all x y.((Alex(x) & Tompus(x)) -> (-Impossible(x) & Rompus(y)))", "all x.(Alex(x) -> (Tumpus(x) & -Impossible(x) & Rompus(x)))", "all x y z.((Alex(x) & Tompus(y) & Is(z)) -> (Tumpus(x) & -Is(z)) & Rompus(x)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> -Impossible(x)) & (Alex(x) -> Rompus(x)))", "(all x.(Alexa(x) -> Tumpus(x)) & (Alexa(x) -> -Impossible(x)) & (Alexa(x) -> Rompus(x)))", "all x y z.((Alex(x) & Tumpus(y) & IsNotImpossible(z)) -> (Tumpus(x) & Rompus(x)))", "(all x.(Alexa(x) -> Tumpus(x)) & all y.(Alexa(y) -> -Impossible(y))) & all z.(Alexa(z) -> Rompus(z))))", "all x y.((Alex(x) & Tompus(x) & -Impossible(y)) -> (Tumpus(x) & Rompus(y)))", "exists x.(Alex(x) & Tumpus(x) & -Impossible(x) & Rompus(x))", "(all x y.(Tumpus(x) -> Tumpus(x)) & (Impossible(y) -> Rompus(y)))", "all x.(Alex(x) -> (Tumpus(x) & -Impossible(x) & Rompus(x)))", "(all x y.(Tumpus(x) -> Alex(x)) & (Impossible(y) | Rompus(y))))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> -Impossible(x))) & (Alex(x) -> Rompus(x)))", "(all x.(Alexa(x) -> Tumpus(x)) & (Alexa(x) -> -Impossible(x))) & (Alexa(x) -> Rompus(x)))", "all x.(Alex(x) -> (Tumpus(x) & -Issue(x) & Rompus(x)))"]}
{"id": "prontoqa_train_90", "nl": "Alex is not a zumpus.", "fol": "-zumpus(Alex)", "prediction": ["all x.(Alex(x) -> -Zumpus(x))", "Alex is not a zumpus.", "(-Zumpus(Alex))", "all x.(Alex(x) -> -Zumpus(x))", "Alex is not zumpus.", "Alex is not a zumpus.", "all x.(Alex(x) -> -Zumpus(x))", "(-Zumpus(Alex))", "-Zombipus(Alex)", "Alex is not zumpus.", "all x.(Alex(x) -> -Zombipus(x))", "Alex is not a zumpus.", "-Tompus(Alex)", "(-Zumpus(Alex)).", "All x.(Alex(x) -> -Zumpus(x))", "all x.(Alex(x) -> -Tompus(x))"]}
{"id": "prontoqa_train_91", "nl": "Tumpuses are wumpuses.", "fol": "all x. (tumpus(x) -> wumpus(x))", "prediction": ["all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x y.((Tumpus(x) & Wumpus(y)) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "(Wumpuse(tumpus) & Wumpus(tumpus))", "all x y.((Tumpus(x) & Wumpus(y)) -> Wumpus(x))", "all x.(Tumpuse(x) -> Wumpus(x))", "all x.((Tumpus(x) & Wumpus(x)) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "(Wumpuse(tump) & Wumpus(tump))", "all x.(Tumpus(x) -> Wampus(x))", "all x.(Tumpuse(x) -> Wumpus(x))", "(Wumpus)", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wampus(x))", "all x.(Tumpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_92", "nl": "Rex is a zumpus, Rex is a gorpus, and Rex is not a wumpus.", "fol": "(zumpus(Rex) & gorpus(Rex) & -wumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Gorpus(x)) & (Rex(x) -> -Wumpus(x)))", "all x y z.((Rex(x) & Zumpus(y) & Gorpus(z)) -> (Tompus(x) & Gorpus(x) & -Wumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & all z.(Rex(z) -> -Wumpus(z))))", "(all x y z.((Rex(x) & Zumpus(y)) -> Rex(x)) & ((Rex(z) & Gorpus(z)) -> Rex(x)) & ((Rex(x) & -Wumpus(x)) -> Rex(x)))", "all x y z.((Rex(x) & Zumpus(x) & Gorpus(y) & -Wumpus(z)) -> (Tompus(x) | Gorpus(y) & -Wumpus(z)))", "all x.(Rex(x) -> (Tompus(x) | Gorpus(x) | -Wumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Gorpus(x)) & (Rex(x) -> -Wumpus(x)))", "all x y z.((Rex(x) & Zumpus(y) & Gorpus(z)) -> (Tompus(x) | Gorpus(z) | -Wumpus(x)))", "(all x y z.((Rex(x) & Zumpus(y)) -> Toad(x)) & ((Rex(z) & Gorpus(z)) -> -Wumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & all z.(Rex(z) -> -Wumpus(z))))", "all x.(Rex(x) -> (Tompus(x) | Gorpus(x) | -Wumpus(x)))", "(All x.(Rex,Zumpus) -> Gorpus(x)) & (Rex,Wumpus) -> -Wumpus(x)))", "all x y z.((Rex(x) & Zumpus(x) & Gorpus(y) & -Wumpus(z)) -> (Tompus(x) | Gorpus(y) | Rex(z)))", "(all x y z.((Rex(x) & Zumpus(x)) -> Gorpus(x)) & ((Rex(y) & Wumpus(z)) -> -Wumpus(y)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Gorpus(x)) & -Wumpus(x)))", "all x y z.((Rex(x) & Zumpus(y) & Gorpus(z)) -> (Tompus(x) & Gorpus(x) & -Wumpus(x)))"]}
{"id": "prontoqa_train_93", "nl": "Rex is not a tumpus.", "fol": "-tumpus(Rex)", "prediction": ["Rex is notTumpus(x)", "(-Tumpus(Rex))", "all x.(Rex(x) -> -Tumpus(x))", "Rex is notTumpus(x)", "(-Tumpus(Rex))", "all x.(Rex(x) -> -Tumpus(x))", "Rex is not a Tumpus.", "Rex is notTumpus(Rex)", "-Tumpus(Rex)", "all x.(Rex(x) -> -Tumpus(x))", "(-Tumpus(Rex))", "Rex -Tumpus(rex)", "all x.(Rex(x) -> -Tumpus(x))", "-Tumpus(Rex)", "(-Tumpus(Rex))", "-Tumpus(rex)"]}
{"id": "prontoqa_train_94", "nl": "Tumpuses are lorpuses.", "fol": "all x. (tumpus(x) -> lorpus(x))", "prediction": ["all x.(Tumulus(x) -> Lorpus(x))", "all x.(Tumpuse(x) -> Lorpuse(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x y.((Tumpuse(x) & Lorpus(y)) -> IsLumpus(x,y))", "(Lumpuse(tump) & Loomise(tump))", "(Lumpuse(tumpus) & LivesIn(tumpus,tumpus))", "(Lorpuse(tump) -> Thrombosis(tump))", "all x.(Tumulus(x) -> Lorpus(x))", "all x y.((Tumpuse(x) & Lorpus(y)) -> Loomis(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpuse(x) -> Loomis(x))", "all x.(Tumulus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpuse(x) -> Loomis(x))", "all x.(Tumulus(x) -> Lorpuse(x))", "all x.(Tumpuse(x) -> Loomise(x))"]}
{"id": "prontoqa_train_95", "nl": "Sam is not a lorpus, Sam is an impus, and Sam is a grimpus.", "fol": "(-lorpus(Sam) & impus(Sam) & grimpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Lorpus(x)) & (Sam(x) -> Issue(x)) & (Sam(x) -> Grimpus(x)))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Issue(y)) & all z.(Sam(z) -> Grimpus(z))))", "all x y z.((Sam(x) & Lorpus(y) & Imperator(z)) -> (-Lorpus(x) & Imperator(x) & Grimpus(x)))", "(all x y z.((Sam(x) & Lorpus(y)) -> -Lorpus(x)) & ((Sam(z) & Impossible(z))) -> Grimpus(z)))", "all x y z.((Sam(x) & Lorpus(y) & Impossible(z)) -> (-Lorpus(x) & Grimpus(x)))", "all x.(Sam(x) -> (-Lorpus(x) & Issue(x) & Grimpus(x)))", "(all x.(Sam(x) -> -Lorpus(x)) & (Sam(x) -> Imperator(x)) & (Sam(x) -> Grimpus(x)))", "all x y z.((Sam(x) & Loper(y) & Is(z) & Grimpus(z)) -> (-Lorpus(x) & Is(x,y) & Is(x,z)))", "(all x y z.((Sam(x) & Lorpus(y)) -> -Lorpus(x)) & ((Sam(z) & Imperator(z)) -> Grimpus(z)))", "exists x.(Sam(x) & -Lorpus(x) & Is(x) & Grimpus(x))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Issue(y)) & all z.(Sam(z) -> Grimpus(z))))", "all x y z.((Sam(x) & Lopa(y) & Impossible(z)) -> (-Lorpus(x) & Grimpus(x)))", "all x y z.((Sam(x) & Lorpus(y) & Imperator(z)) -> (-Lorpus(x) & Imperator(x) & Gruppus(x)))", "(all x.(Sam(x) -> -Lorpus(x)) | (Sam(x) -> Issue(x))) | (Sam(x) -> Grimpus(x)))", "(all x.(Sam(x) -> -Lorpus(x)) & (Sam(x) -> Issue(x)) & (Sam(x) -> Grimpus(x)))", "all x y z.((Sam(x) & Lorpus(y) & Impossible(z)) -> (-Lorpus(x) & Grimpus(x)))"]}
{"id": "prontoqa_train_96", "nl": "Every vumpus is a jompus.", "fol": "all x. (vumpus(x) -> jompus(x))", "prediction": ["all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "(all x.(Vumpus(x) -> Jompus(x))", "exists x y.(Vumpus(x) & Jompus(y))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.((Vumpus(x) & Jompus(x)) -> HasVumpus(x))", "all x.(Vumpus(x) -> Jompus(x))", "exists x y.(Vumpus(x) & Jompus(y))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "exists x.(Vumpus(x) & Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))"]}
{"id": "prontoqa_train_97", "nl": "Fae is a brimpus and Fae is a numpus and Fae is not a jompus.", "fol": "(brimpus(Fae) & numpus(Fae) & -jompus(Fae))", "prediction": ["(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Jompus(x)))", "all x y z.((Fae(x) & Brimpus(x) & Numpus(y) & -Jompus(z)) -> (Brimpus(x) & Numpus(y) & -Jimpus(z)))", "(all x y z.((Fae(x) & Brimpus(x)) -> (Brimpus(x) & Numpus(y))) & ((Fae(z) & -Jompus(z)) -> (Fae(z) & Numpus(z))))", "(all x.(Fae(x) -> Brimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Jompus(z))))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Numpus(x)) & -Jompus(x)))", "all x y.((Fae(x) & Brimpus(x) & Numpus(y)) -> (Brimpus(x) & Numpus(y) & -Jompus(y)))", "all x y z.((Fae(x) & Brimpus(x) & Numpus(y) & -Jompus(z)) -> (Brimpus(x) & Numpus(y) & -Jompus(z)))", "all x.(Fae(x) -> (Brimpus(x) & Numpus(x) & -Jompus(x)))", "all x y z.((Fae(x) & Brimpus(x) & Numpus(y) & Jompus(z)) -> (Brimpus(x) & Numpus(y) & -Jompus(z)))", "(all x y.(Brimpus(x) -> Brimpus(x)) & (Numpus(y) -> Numpus(y)) & (Jompus(y) -> -Jimpus(y)))", "all x y z.(Fae(x) & Brimpus(x) & Numpus(y) & -Jompus(z))", "exists x.(Fae(x) & Brimpus(x) & Numpus(x) & -Jompus(x))", "(all x y z.((Fae(x) & Brimpus(x)) -> (Brimpus(x) & Numpus(y))) & ((Fae(z) & -Jompus(z)) -> (Nompus(z) & -Brimpus(z))))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Jompus(x)))", "all x.(Fae(x) -> (Brimpus(x) & Numpus(x) & -Jompus(x)))", "(all x.(Fae(x) -> Brimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Jompus(z))))"]}
{"id": "prontoqa_train_98", "nl": "Fae is not a vumpus.", "fol": "-vumpus(Fae)", "prediction": ["all x.(Fae(x) -> -Vumpus(x))", "-Vumpus(Fae)", "(Vumpus(Fae) & -Vumpus(Fae))", "(-Vumpus(Fae))", "all x.(Fae(x) -> -Vumpus(x))", "-Vumpus(Fae)", "(Vumpus(Fae) & -Vumpus(Fae))", "-Vumpus(Fae)", "(Vumpus(Fae) & -Vumpus(Fae))", "(Vumpus(fe) & -Vumpus(fe))", "all x.(Fae(x) -> -Vumpus(x))", "-Vimpus(fae)", "all x.(Fae(x) -> -Vimpus(x))", "-Vumpus(fae)", "all x.(Fae(x) -> -Vumpus(x))", "exists x.(Fae(x) & -Vimpus(x))"]}
{"id": "prontoqa_train_99", "nl": "Lempuses are gorpuses.", "fol": "all x. (lempus(x) -> gorpus(x))", "prediction": ["all x.(Lempuse(x) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpus(x))", "all x y.((Lempuse(x) & Gorpus(y)) -> Gorpus(x))", "(Gorpuse(lempuse) & -Gorpuse(lempuse))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lemme(x) -> Gorpus(x))", "all x y.((Lempuse(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x y.((Lempuse(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lemme(x) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "All x.(Lemmes(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "All x.(Lempus(x) -> Gorpuse(x))"]}
{"id": "prontoqa_train_100", "nl": "Sally is an impus and Sally is a tumpus and Sally is not a gorpus.", "fol": "(impus(Sally) & tumpus(Sally) & -gorpus(Sally))", "prediction": ["(all x.(Sally(x) -> Is(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x)))", "all x y z.((Sally(x) & IsImpossible(x) & Sally(y) & Tumpus(y)) -> (Impossible(x) & Tumpus(y) & -Gorpus(z)))", "(all x.(Sally(x) -> Impossible(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x)))", "all x.(Sally(x) -> (Impossible(x) & Tumpus(x) & -Gorpus(x)))", "all x y.((Sally(x) & IsImpossible(x) & Sally(y)) -> (Tumpus(y) & -Gorpus(y)))", "(all x y.(Sally(x) -> Impossible(x)) & (Sally(y) -> Tumpus(y)) & (Sally(y) -> -Gorpus(y)))", "all x y z.((Sally(x) & Impossible(x) & Sally(y) & Tumpus(z) & -Gorpus(x)) -> (Impossible(y) & Tumpus(z)))", "Sally is an impus (symbol) & Sally is tumpus(symbol) & Sally is not gorpus(symbol))", "(all x y.(Sally(x) -> Is(x,Impossible)) & (Sally(y) -> Tumpus(y)) & (Sally(y) -> -Gorpus(y)))", "(all x.(Sally(x) -> Is(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x)))", "exists x.(Sally(x) & IsImpossible(x) & exists y.(Tumpus(y) & -Gorpus(y)))", "all x.(Sally(x) -> (Imposer(x) & Tumpus(x) & -Gorpus(x)))", "(all x.(Sally(x) -> Impossible(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x)))", "all x.(Sally(x) -> (Impossible(x) & Tumpus(x) & -Gorpus(x)))", "(all x.(Sally(x) -> Is(x)) & all y.(Sally(y) -> (Tumpus(y) & -Gorpus(y))))", "(all x.(Sally(x) -> Impossible(x)) & all y.(Sally(y) -> Tumpus(y)) & all z.(Sally(z) -> -Gorpus(z))))"]}
{"id": "prontoqa_train_101", "nl": "Sally is not a lempus.", "fol": "-lempus(Sally)", "prediction": ["Sally is not a lempus.", "all x.(Sally(x) -> -Lempus(x))", "Sally -Lempus(Sally)", "(-Lempus(Sally))", "Sally n'est pas lempus.", "all x.(Sally(x) -> -Lempus(x))", "Sally is not a lempus.", "(-Lempus(Sally))", "Sally neems(Sally,Limpus)", "Sally -Lempus(Sally)", "all x.(Sally(x) -> -Lempus(x))", "-Lempus(Sally)", "Sally is not a Lempus.", "(-lempus(Sally))", "Sally is not a lempus.", "-Lempus(Sally)"]}
{"id": "prontoqa_train_102", "nl": "Wumpuses are grimpuses.", "fol": "all x. (wumpus(x) -> grimpus(x))", "prediction": ["all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpuse(x) -> Grimpuse(x))", "all x y.((Wumpus(x) & Grimpus(y)) -> (Grimpus(x) & Grimpus(y)))", "(Grimpuse(w) & -Grimpus(w))", "(Scrappuse(w) & Grimpuse(w))", "(Grimpuse(w) & Grapple(w))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpuse(x) -> Grimpuse(x))", "(Grimpuse(w) & -Grimpus(w))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grappase(x))", "all x.(Wumpuse(x) -> Grimpuse(x))", "all x.(Wumpuse(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "All x.(Wumpus(x) -> Grimpuse(x))"]}
{"id": "prontoqa_train_103", "nl": "Rex is a jompus, Rex is a vumpus, and Rex is not a grimpus.", "fol": "(jompus(Rex) & vumpus(Rex) & -grimpus(Rex))", "prediction": ["(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Vumpus(x)) & (Rex(x) -> -Grimpus(x)))", "all x y z.((Rex(x) & Jompus(y) & Vumpus(z)) -> (Jompus(x) & Vumpus(x) & -Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Vumpus(y)) & all z.(Rex(z) -> -Grimpus(z))))", "(all x y z.((Rex(x) & Jompus(y)) -> (Jompus(x) | Vumpus(y))) & ((Rex(z) & Grimpus(z)) -> -Smoothpus(z)))", "(all x y z.((Rex(x) & Jompus(y)) -> Rex)) & ((Rex(z) & Vumpus(z)) -> Rex)) & ((Rex(x) & -Grimpus(x)) -> Rex)))", "all x.(Rex(x) -> (Jompus(x) | Vumpus(x) | -Grimpus(x)))", "all x y z.((Rex(x) & Jompus(y) & Vumpus(z)) -> (Jompus(x) | Vumpus(z) | -Grimpus(x)))", "(all x.(Rex) -> Jompus(x)) & (Rex(x) -> Vumpus(x)) & (Rex(x) -> -Grimpus(x)))", "all x y z.((Rex(x) & Jompus(x) & Vumpus(y) & Gruppus(z)) -> (Jompus(x) & Vumpus(y) & -Grimpus(z)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Vumpus(x)) & (Rex(x) -> -Grimpus(x)))", "(all x.(Rex,jompus) -> Rex(x)) & all y.(Vumpus(y) -> Rex(y)) & all z.(Grimpus(z) -> -Rex(z))))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Vumpus(y)) & all z.(Rex(z) -> -Grimpus(z))))", "all x.(Rex(x) -> (Jompus(x) | Vumpus(x) | -Grimpus(x)))", "(all x y z.(Jompus(x) -> Rex)) & (Vumpus(y) -> Rex)) & (Smoothpus(z) -> -Rex)))", "all x y z.((Rex(x) & Jompus(x) & Vumpus(y) & -Grimpus(z)) -> (Jompus(x) & Vumpus(y) & -Grimpus(z)))", "all x y z.((Rex(x) & Jompus(y) & Vumpus(z)) -> (Jompus(x) & Vumpus(y) & -Grimpus(z)))"]}
{"id": "prontoqa_train_104", "nl": "Rex is not a wumpus.", "fol": "-wumpus(Rex)", "prediction": ["Rex is not a wumpus.", "all x.(Rex(x) -> -Wumpus(x))", "(-Wumpus(Rex))", "Rex is notWumpus(x)", "(Wumpus(Rex) & -Wumpus(Rex))", "(-Wumpus(Rex))", "all x.(Rex(x) -> -Wumpus(x))", "Rex is not a wumpus.", "-Wumpus(Rex)", "Rex is notWumpus(x)", "all x.(Rex(x) -> -Wumpus(x))", "Rex -Wumpus(Rex)", "Rex is not a wumpus.", "(-Wumpus(Rex))", "-Wumpus(Rex)", "-Wumpus(rex)"]}
{"id": "prontoqa_train_105", "nl": "Every vumpus is a zumpus.", "fol": "all x. (vumpus(x) -> zumpus(x))", "prediction": ["all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "(all x.(Vumpus(x) -> Zumpus(x))", "all x y.((Vumpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x y.((Vumpus(x) & Zumpus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "exists x.(Vumpus(x) & Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "exists x.(Vumpus(x) & Tompus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "exists x.(Vumpus(x) & Zumpus(x))"]}
{"id": "prontoqa_train_106", "nl": "Fae is a lempus and Fae is not a zumpus and Fae is a dumpus.", "fol": "(lempus(Fae) & -zumpus(Fae) & dumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Dumpus(x)))", "all x y z.((Fae(x) & Lempus(x) & Fae(y) & Zumpus(z)) -> (-Tompus(y) & Dumpus(z)))", "(all x y.(Fae(x) -> Lempus(x)) & (Fae(y) -> -Zumpus(y)) & (Fae(y) -> Dumpus(y)))", "(all x y z.((Fae(x) & Lempus(x)) -> (Lempus(x) & -Zumpus(y))) & ((Fae(z) & Dumpus(z)) -> Dumpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Dumpus(x)))", "all x y.((Fae(x) & Lempus(x) & Fae(y)) -> (-Tompus(y) & Dumpus(y)))", "all x y z.((Fae(x) & Lempus(x) & Fae(y) & Zumpus(z)) -> (-Tompus(y) & Dumpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> -Zumpus(y))) & all z.(Fae(z) -> Dumpus(z)))", "exists x.(Fae(x) & Lempus(x) & -Zumpus(x) & Dumpus(x))", "all x.(Fae(x) -> (Lempus(x) & -Zumpus(x) & Dumpus(x)))", "(all x y.(Fae(x) -> Lempus(x)) & (Fae(y) -> -Zumpus(y)) & (Fae(y) -> Dumpus(y)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Dumpus(x)))", "all x y.((Fae(x) & Fae(y)) -> (Lempus(x) & -Zumpus(y) & Dumpus(y)))", "all x y z.((Fae(x) & Lempus(x) & Fae(y) & Dumpus(z)) -> (-Zumpus(y) & Dumpus(z)))", "all x.(Fae(x) -> (Lempus(x) & -Zumpus(x) & Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Dumpus(x)))"]}
{"id": "prontoqa_train_107", "nl": "Each grimpus is an impus.", "fol": "all x. (grimpus(x) -> impus(x))", "prediction": ["all x.(Grimpus(x) -> IsImpossible(x))", "-all x.(Grimpus(x) -> IsImpossible(x))", "all x.(Grimpus(x) -> IsImpossible(x))", "all x.(Grimpus(x) -> Impossible(x))", "all x y.((Grimpus(x) & Grimpus(y)) -> IsImpossible(x))", "(all x.(Grimpus(x) -> Impossible(x))", "all x.(Grimpus(x) -> Imperator(x))", "all x y.((Grimpus(x) & Grimpus(y)) -> Is(x,y))", "exists x.(Gruppus(x) & IsImpossible(x))", "all x.(Grimpus(x) -> Is(x,y))", "exists x.(Grip(x) & Impossible(x))", "all x.(Grimpus(x) -> Impossible(x))", "all x.(Grampus(x) -> Impeccable(x))", "exists x.(Grimps(x) & Impossible(x))", "exists x.(Sgrimpus(x) & Impermissible(x))", "all x.(Grampus(x) -> IsImprovement(x))"]}
{"id": "prontoqa_train_108", "nl": "Stella is not an impus and Stella is a zumpus and Stella is a rompus.", "fol": "(-impus(Stella) & zumpus(Stella) & rompus(Stella))", "prediction": ["(all x.(Stella(x) -> -Impossible(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Rompus(x)))", "all x y z.((Stella(x) & Stella(y) & Zumpus(z)) -> (-Impossible(x) & Tossup(y) & Rompus(z)))", "(all x.(Stella(x) -> -Impossible(x)) & all y.(Stella(y) -> Zumpus(y)) & all z.(Stella(z) -> Rompus(z))))", "(all x y z.((Stella(x) & Impossible(x)) -> -Stella(x)) & ((Stella(y) & Zumpus(y)) -> Rompus(z)))", "all x y z.((Stella(x) & Stella(y) & Zumpus(z)) -> (-IsImpossible(x) & -Impossible(y) & -Impossible(y) & -Impossible(y)))", "all x y.((Stella(x) & Stella(y)) -> (-Impossible(x) & Zumpus(y) & Rompus(y)))", "(all x y.((Stella(x) & IsNotImpossible(x)) -> Tossus(x)) & ((Stella(y) & Rompus(y)) -> Rompus(y)))", "all x.(Stella(x) -> (-Impossible(x) & Stella(x) & Zumpus(x) & Rompus(x)))", "(-Impossible(Stella) | Zumpus(Stella) | Rompus(Stella)))", "(all x.(Stella(x) -> -Impossible(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Rompus(x)))", "exists x.(Stella(x) & -Impossible(x) & Stella(x) & Zumpus(x) & Rompus(x))", "(all x.(Stella(x) -> -Impossible(x)) & all y.(Stella(y) -> Zumpus(y)) & all z.(Stella(z) -> Rompus(z))))", "all x y z.((Stella(x) & Stella(y) & Zumpus(z)) -> (-Impossible(x) & Tosso(y) & Rompus(y)))", "all x y.((Stella(x) & Stella(y)) -> (-Impossible(x) & Zumpus(y) & Rompus(y)))", "all x y z.((Stella(x) & Zumpus(y) & Rompus(z)) -> (-IsImpossible(x) & -Impossible(y) & -Impossible(z) & -Impossible(z)))", "(all x.(Stella(x) -> -Issue(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Rompus(x)))"]}
{"id": "prontoqa_train_109", "nl": "Grimpuses are impuses.", "fol": "all x. (grimpus(x) -> impus(x))", "prediction": ["all x.(Grimpus(x) -> Issue(x))", "all x y.((Grimpus(x) & Issue(y)) -> Issue(x,y))", "all x.(Grimpus(x) -> Issue(x))", "(Issue(Grimpuses) & Issue(Grimpuses))", "all x.(Gruppuse(x) -> Issue(x))", "all x.(Grimpus(x) -> Issue(x))", "all x y.((Grimpuse(x) & Issue(y)) -> Issue(x,y))", "all x y.((Grimpus(x) & Issue(y)) -> Issue(x,y))", "(Issues(Grimpus) & Issues(Grimpus))", "all x.(Grimpuse(x) -> Issue(x))", "all x.(Grimpus(x) -> Imperium(x))", "all x.(Grimpse(x) -> Isolates(x))", "(Issues(Grimps) & Impisite(Grimps))", "all x.(Grimpus(x) -> Issue(x))", "All x.(Gruppuse(x) -> Issue(x))", "all x.(Grimpus(x) -> Impermissible(x))"]}
{"id": "prontoqa_train_110", "nl": "Polly is not an impus, Polly is a brimpus, and Polly is a numpus.", "fol": "(-impus(Polly) & brimpus(Polly) & numpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Impossible(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Brimpus(y) & Numpus(z)) -> (-Impossible(x) & Brimpus(y) & Numpus(z)))", "(all x.(Polly(x) -> -Impossible(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> Numpus(z))))", "(all x y z.((Polly(x) & Impossible(y)) -> Polly(x)) & ((Polly(z) & Brimpus(z)) -> Polly(z)))", "(all x y z.((Polly(x) & IsNotImpossible(x)) -> Polly(y)) & ((Polly(z) & Brimpus(z)) -> Polly(z)))", "all x y z.((Polly(x) & Brimpus(y) & Numpus(z)) -> (-Impossible(x) & Brimpus(y) & Numpus(z)))", "exists x.(Polly(x) & -Is(x) & Polly(x) & Brimpus(x) & Numpus(x))", "all x y z.((Polly(x) & Brimpus(y) & Numpus(z)) -> (-Issue(x) & Brimpus(y) & Numpus(z)))", "all x y.((Polly(x) & Polly(y)) -> (-Issue(x) & Brimpus(y) & Numpus(y)))", "(all x.(Polly(x) -> -Impossible(x)) & (Brimpus(x) | Numpus(x)))", "(all x.(Polly(x) -> -Issue(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Brimpus(y) & Numpus(z)) -> (-Impossible(x) | (-Impossible(y) & Brimpus(y) & Numpus(z))))", "all x y z.((Polly(x) & Polly(y) & Brimpus(z)) -> (-Impossible(x) & Brimpus(y) & Numpus(z)))", "(all x y z.((Polly(x) & Impossible(y)) -> -Polly(x)) & ((Polly(z) & Brimpus(z)) -> Numpus(z)))", "(all x.(Polly(x) -> -Impossible(x)) & all y.(Polly(y) -> Brimpus(y))) & all z.(Polly(z) -> Numpus(z)))", "all x y z.((Polly(x) & Brimpus(y) & Numpus(z)) -> (-Impossible(x) | (Brimpus(y) | Numpus(z)))))"]}
{"id": "prontoqa_train_111", "nl": "Every jompus is a zumpus.", "fol": "all x. (jompus(x) -> zumpus(x))", "prediction": ["all x.(Jompus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "(all x.(Jompus(x) -> Zumpus(x))", "all x y.((Jompus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jimpus(x) -> Zumpus(x))", "all x y.((Jompus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jimpus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jumpus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "exists x.(Jimpus(x) & Zumpus(x))", "exists x.(jompus(x) & Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "exists x.(Mjompus(x) & Zumpus(x))"]}
{"id": "prontoqa_train_112", "nl": "Fae is not a zumpus, Fae is a shumpus, and Fae is a numpus.", "fol": "(-zumpus(Fae) & shumpus(Fae) & numpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Zumpus(x)) & (Fae(x) -> Shumpus(x)) & (Fae(x) -> Numpus(x)))", "all x y z.((Fae(x) & Shumpus(y) & Numpus(z)) -> (-Zumpus(x) & Shumpus(y) & Numpus(z)))", "(all x.(Fae(x) -> -Zumpus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> Numpus(z))))", "(all x y z.((Fae(x) & Zumpus(y)) -> -Tompus(x)) & ((Fae(z) & Humpus(z))) -> Numpus(z)))", "all x.(Fae(x) -> (-Zumpus(x) & Shumpus(x) & Numpus(x)))", "all x y z.((Fae(x) & Shumpus(y) & Numpus(z)) -> (-Zumpus(x) & -Shumpus(y) & -Numpus(z)))", "(all x.(Fae(x) -> -Zumpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> Numpus(x)))", "all x y z.((Fae(x) & Zumpus(y) & Humpus(z)) -> (-Zumpus(x) & Shumpus(x) & Numpus(x)))", "exists x.(Fae(x) & -Zumpus(x) & Shumpus(x) & Numpus(x))", "all x y z.(Fae(x) & Zumpus(y) & Shumpus(z) & Numpus(x))", "(all x y z.((Fae(x) & Zumpus(y)) -> -Tompus(x)) & ((Fae(z) & Humpus(z))) -> Numpus(z)))", "all x y z.(Fae(x) -> (-Zumpus(x) & Shumpus(y) & Numpus(z)))", "(all x.(Fae(x) -> -Zumpus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> Numpus(z)))", "all x y z.((Fae(x) & Shumpus(y) & Numpus(z)) -> (-Zumpus(x) & Shumpus(y) & Numpus(z)))", "(all x y z.((Fae(x) & Zumpus(y)) -> -Zumpus(x)) & ((Fae(z) & Humpus(z))) -> Numpus(z)))", "(all x.(Fae(x) -> -Zumpus(x)) & (Fae(x) -> Shumpus(x)) & (Fae(x) -> Numpus(x)))"]}
{"id": "prontoqa_train_113", "nl": "Brimpuses are lempuses.", "fol": "all x. (brimpus(x) -> lempus(x))", "prediction": ["all x.(Brimpus(x) -> Lempuse(x))", "all x.(Brompus(x) -> Lempuse(x))", "all x y.((Brompus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Brimpuse(x) -> Lempuse(x))", "(all x.(Brompus(x) -> Lempuse(x)))", "all x.(Brimpus(x) -> Lempuse(x))", "all x y.((Brimpus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Brimuse(x) -> Lempuse(x))", "(all x.(Brimpus(x) -> Lempuse(x))", "all x.(Brompus(x) -> Lempuse(x))", "all x y.((Brompus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Brimpus(x) -> Lempuse(x))", "all x.(Brimpuse(x) -> Lempuse(x))", "all x.(Brombus(x) -> Lempuse(x))", "all x.(Brimpus(x) -> Lempuse(x))", "all x.(Brombus(x) -> Lempus(x))"]}
{"id": "prontoqa_train_114", "nl": "Wren is a yumpus, Wren is a shumpus, and Wren is not a lempus.", "fol": "(yumpus(Wren) & shumpus(Wren) & -lempus(Wren))", "prediction": ["(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> Humpus(x)) & (Wren(x) -> -Lempus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) & Shumpus(x) & -Lempus(x)))", "(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> Humpus(y))) & all z.(Wren(z) -> -Lempus(z))))", "(all x y z.((Wren(x) & Yumpus(y)) -> (Yumpus(x) | Shumpus(y))) & ((Wren(z) & -Lempus(z))) -> (Yumpus(z) & -Shumpus(z))))", "(yumpus(Wren) & shumpus(Wren) & -lempus(Wren))", "all x y z.((Wren(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) | Shumpus(z) | -Lempus(z)))", "(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> Shumpus(x)) & (Wren(x) -> -Lempus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Shumpus(x) & -Lempus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Humpus(z)) -> (Yumpus(x) & Shumpus(x) & -Lempus(x)))", "(all x y z.((Wren(x) & Yumpus(y)) -> (Yumpus(z) | Humpus(z))) & ((Wren(x) & Lempus(z)) -> -Yumpus(x)))", "all x y.((Wren(x) & Yumpus(x)) -> (Shumpus(x) & -Lempus(y)))", "(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> Humpus(y)) & all z.(Wren(z) -> -Lempus(z))))", "all x y z.((Wren(x) & Yampus(y) & Humpus(z) & -Lempus(z)) -> (Yumpus(x) | Shumpus(x) | -Yumpus(x)))", "(all x y z.((Wren(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) | Humpus(z)) | -Lempus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) & Shumpus(y) & -Lempus(z)))", "(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> Humpus(x)) & (Wren(x) -> -Lempus(x)))"]}
{"id": "prontoqa_train_115", "nl": "Wren is not a brimpus.", "fol": "-brimpus(Wren)", "prediction": ["all x.(Wren(x) -> -Brimpus(x))", "(-Brimpus(Wren))", "Wren is not a Brimpus.", "all x.(Wren(x) -> -Brimpus(x))", "-(Wren(w) & Brimpus(w))", "(-Brimpus(Wren))", "(Brimpus(Wren) & -Brimpus(Wren))", "all x.(Wren(x) -> -Brumpus(x))", "-Brumpus(Wren)", "all x.(Wren(x) -> -Brimpus(x))", "(Brimpus(wren) & -Brimpus(wren))", "(-Brimpus(Wren))", "-Brumpus(Wren)", "all x.(Wren(x) -> -Brumpus(x))", "all x.(Wren(x) -> -Brimpus(x))", "all x.(Wren(x) -> -Brumpus(x))"]}
{"id": "prontoqa_train_116", "nl": "Shumpuses are sterpuses.", "fol": "all x. (shumpus(x) -> sterpus(x))", "prediction": ["all x.(Shumpus(x) -> Sterpuse(x))", "all x y.((Shupuse(x) & Sterpuse(y)) -> Sterpuse(x))", "all x.(Shampus(x) -> Sterpuse(x))", "all x.(Shampoos(x) -> Sterpuse(x))", "all x.(Shumpsue(x) -> Sterpuse(x))", "(Shampoos(shm) & Sterpuse(shm))", "(Shampoos(s) & Sterpuse(s))", "all x.(Shupuse(x) -> Sterpuse(x))", "all x y.((Shupuse(x) & Sterus(y)) -> Sterpuse(x))", "all x.(Shumpus(x) -> Steroid(x))", "all x y.((Shampus(x) & Sterpus(y)) -> Sterpuse(x))", "all x.(Shumpuse(x) -> Sterpuse(x))", "all x.(Shupuse(x) -> Sterpuse(x))", "(Shumpus)", "all x.(Shumpus(x) -> Sterus(x))", "All x.(Shupuse(x) -> Sterpuse(x))"]}
{"id": "prontoqa_train_117", "nl": "Wren is not a sterpus, Wren is a yumpus, and Wren is a numpus.", "fol": "(-sterpus(Wren) & yumpus(Wren) & numpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Numpus(z))))", "all x y z.((Wren(x) & Sterpus(y) & Yumpus(z)) -> (-Sterpus(x) & -Yumpus(x) & -Numpus(x)))", "(all x y z.((Wren(x) & Sterpus(y)) -> -Sterpus(x)) & ((Wren(z) & Yumpus(z)) -> Numpus(z)))", "(all x.(Wren(x) -> -Sterpus(x)) & (Yumpus(x) & Numpus(x)))", "all x.(Wren(x) -> (-Sterpus(x) & Yampus(x) & Numpus(x)))", "all x y z.((Wren(x) & Sterus(y) & Yumpus(z)) -> (-Sterus(x) & -Yumpus(y) & -Numpus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Numpus(z)) -> (-Sterpus(x) & -Yumpus(y) & -Yumpus(z) & -Yumpus(z)))", "all x y z.((Wren(x) & Sterpus(y) & Yumpus(z)) -> (-Sterpus(x) & Yumpus(x) & Numpus(x)))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Numpus(z))))", "(-Sterpus(Wren) & -Yumpus(Wren) & Numpus(Wren))", "(all x y z.((Wren(x) & Sterepus(y) & Yumpus(z)) -> -Sterepus(x)) & ((Wren(x) & Yumpus(x) & Numpus(x)) -> Numpus(x)))", "(all x y z.((Wren(x) & Sterpus(y)) -> -Sterpus(x)) & ((Wren(z) & Yumpus(z))) -> Numpus(z)))", "all x y z.((Wren(x) & Sterepus(y) & Yumpus(z)) -> (-Sterpus(x) & -Yumpus(y) & -Numpus(z)))", "(all x.(Wren(x) -> -Sterepus(x)) & (Yumpus(x) | Numpus(x))))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpsum(y))) & all z.(Wren(z) -> Numpus(z)))", "all x y z.((Wren(x) & Sterpus(y) & Yumpus(z)) -> (-Stereos(x) | (Yumpus(z) | Numpus(z)))))"]}
{"id": "prontoqa_train_118", "nl": "Wren is not a shumpus.", "fol": "-shumpus(Wren)", "prediction": ["all x.(Wren(x) -> -Shumpus(x))", "(-Shumpus(Wren))", "all x.(Wren(x) -> -Shumpus(x))", "(-Shumpus(Wren))", "Wren is notShumpus.", "-(Wren(w) & Humpus(w))", "all x.(Wren(x) -> -Shumpus(x))", "(-Shumpus(Wren))", "(-Shumpus(Wren) & -Shumpus(Wren))", "-Shumpus(Wren)", "all x.(Wren(x) -> -Shumpus(x))", "all x.(Wren(x) -> -Shumpus(x))", "-Shumpus(wren)", "all x.(Wren(x) -> -Shumpus(x))", "all x.(Wren(x) -> -Shumpus(x))", "(-Shumpus(Wren)"]}
{"id": "prontoqa_train_119", "nl": "Gorpuses are rompuses.", "fol": "all x. (gorpus(x) -> rompus(x))", "prediction": ["all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpuse(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x y.((Gorpuse(x) & Rompus(y)) -> Rompus(x))", "(all x.(Gorpuse(x) -> Rompuse(x))", "(Rompus(gorpus) & Rompus(gorpus))", "all x y.((Gorpuse(x) & Rompus(y)) -> Is(x,y))", "(Rompus(gorpus) -> rompus(gorpus))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpuse(x) -> Rompus(x))", "all x.(Rompus(x) -> Gorpuse(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpuse(x) -> Rompus(x))", "all x.(Rompus(x) -> Gorpuse(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpuse(x) -> Rompus(x))"]}
{"id": "prontoqa_train_120", "nl": "Sam is a shumpus and Sam is a numpus and Sam is not a rompus.", "fol": "(shumpus(Sam) & numpus(Sam) & -rompus(Sam))", "prediction": ["all x y z.((Sam(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & Numpus(z) & -Rompus(z)))", "(all x.(Shumpus(x) -> Sam(x)) & (Numpus(x) -> Sam(x)) & -Rompus(x)))", "all x y z.((Sam(x) & Sam(y) & Sam(z)) -> (Shumpus(x) & Numpus(y) & -Rompus(z)))", "all x y.((Sam(x) & Sam(y)) -> (Shumpus(x) & Numpus(y) & -Rompus(y)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Numpus(y) -> Sam(y))) & all z.(Rompus(z) -> Sam(z))))", "(all x y.(Shumpus(x) -> Sam(x)) & (Numpus(y) -> Sam(y)) & (Rompus(y) -> Sam(y)))", "all x.(Sam(x) -> (Shumpus(x) & Numpus(x) & -Rompus(x)))", "(all x y z.((Shumpus(x) & Sam(y) & Numpus(z)) -> (Shumpus(x) & Numpus(y) & -Rompus(z)))", "(all x.(Shumpus(x) -> Sam(x)) & (Numpus(x) -> Sam(x)) & (Rompus(x) -> Sam(x)))", "(all x.(Sam(x) -> Humpus(x)) & (Sam(x) -> Numpus(x)) & (Sam(x) -> -Rompus(x)))", "all x.(Sam(x) -> (Shumpus(x) | Numpus(x) | -Rompus(x)))", "all x y z.((Sam(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) | Numpus(z) | -Rompus(z)))", "(all x.(Shumpus(x) & All y.(Numpus(y) & All z.(Rompus(z) & -Shumpus(z))) -> (Shumpus(x) & Numpus(y))))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Numpus(y) -> Sam(y))) & all z.(Rompus(z) -> Sam(z)))", "exists x.(Sam(x) & Shumpus(x) & Numpus(x) & -Rompus(x))", "all x y.((Sam(x) & Sam(y)) -> (Shumpus(x) & Numpus(y) & -Rompus(y)))"]}
{"id": "prontoqa_train_121", "nl": "Sam is not a gorpus.", "fol": "-gorpus(Sam)", "prediction": ["all x.(Sam(x) -> -Gorpus(x))", "(-Gorpus(Sam))", "all x.(Sam(x) -> -Gorpus(x))", "Sam is not a Gorpus.", "(-Gorpus(Sam))", "(-Gorpus(Sam) & -Gorpus(Sam))", "Sam is notGorpus(Sam).", "all x.(Sam(x) -> -Gorpus(x))", "-Gorpus(Sam)", "all x.(Sam(x) -> -Gorpus(x))", "all x.(Sam(x) -> -Gorpus(x))", "(-Gorpus(Sam)).", "-Gorpus(sam)", "all x.(Sam(x) -> -Gorpus(x))", "-Gorpus(sam)", "(-Gorpus(Sam)"]}
{"id": "prontoqa_train_122", "nl": "Vumpuses are sterpuses.", "fol": "all x. (vumpus(x) -> sterpus(x))", "prediction": ["all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "(Sterpuse(v) & Sterpuse(v))", "all x y.((Vumpus(x) & Sterpus(y)) -> Sterpuse(x))", "(Sterpuse(Vumpus) & Sterpuse(Vumpus))", "all x.(Vumpus(x) -> Sterpuse(x))", "(Sterpuse(v) & Sterpuse(v))", "all x y.((Vumpus(x) & Sterpus(y)) -> Sterpuse(x))", "all x.(Vumpus(x) -> Steroid(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpuse(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Steroid(x))", "all x.(Vumpuse(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterosene(x))"]}
{"id": "prontoqa_train_123", "nl": "Sally is not a sterpus and Sally is a lorpus and Sally is a zumpus.", "fol": "(-sterpus(Sally) & lorpus(Sally) & zumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Sterpus(x)) & (Lorpus(x) & Zumpus(x)))", "all x y z.((Sally(x) & Sterpus(y) & Lorpus(z)) -> (-Sterpus(x) & -Lorpus(x) & -Zumpus(x)))", "(all x.(Sally(x) -> -Sterpus(x)) & all y.(Lorpus(y) & All z.(Zumpus(z))) -> -Sterpus(x)))", "(-Sterpus(Sally) & -Lorpus(Sally) & Zumpus(Sally))", "all x.(Sally(x) -> (-Sterpus(x) & -Lorpus(x) & -Zumpus(x)))", "all x y z.((Sally(x) & Sterpus(y) & Lorpus(z)) -> (-Sterpus(x) & Lorpus(x) & Zumpus(x)))", "all x y.((Sally(x) & -Sterpus(x)) -> (Lorpus(x) & Zumpus(y)))", "(all x.(Sally(x) -> -Sterepus(x)) & (Lorpus(x) | Zumpus(x))))", "(-Sterpus(Sally) & Lorpus(Sally) & Zumpus(Sally))", "all x.(Sally(x) -> (-Sterpus(x) & (Lorpus(x) | Zumpus(x))))", "exists x.(Sally(x) & -Sterpus(x) & exists y.(Lorpus(y) & exists z.(Zumpus(z) & -Sterpus(z))))", "(-Storpus(Sally) & -Lorpus(Sally) & Zumpus(Sally))", "(all x y.(Sally(x) -> -Sterpus(x)) & (Lorpus(y) | Zumpus(y)))", "(all x.(Sally(x) -> -Sterpus(x)) & all y.(Lorpus(y) & All z.(Zumpus(z))) -> -Sterpus(x)))", "all x y z.((Sally(x) & Sterpus(y) & Lorpus(z)) -> (-Sterpus(x) & -Lorpus(y) & -Zumpus(z)))", "all x y.((Sally(x) & Sterpus(y)) -> (-Sterpus(x) & Lorpus(y) & Zumpus(x)))"]}
{"id": "prontoqa_train_124", "nl": "Sally is not a vumpus.", "fol": "-vumpus(Sally)", "prediction": ["Sally is not a vumpus.", "all x.(Sally(x) -> -Vumpus(x))", "(-Vumpus(Sally))", "Sally n'est pas vumpus.", "Sally -Vumpus(Sally)", "all x.(Sally(x) -> -Vumpus(x))", "Sally is not a Vumpus.", "-Vumpus(Sally)", "Sally is not a vumpus.", "all x.(Sally(x) -> -Vumpus(x))", "(-Vumpus(Sally))", "Sally n'est pas vumpus.", "Sally is not a Vumpus(Sally)", "Sally -Vumpus(Sally)", "-Vimpus(Sally)", "(-Vumpus(Sally))"]}
{"id": "prontoqa_train_125", "nl": "Every wumpus is a brimpus.", "fol": "all x. (wumpus(x) -> brimpus(x))", "prediction": ["all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x y.((Wumpus(x) & Brimpus(y)) -> Has(x,y))", "(all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x y.((Wumpus(x) & Brimpus(y)) -> Is(x,y))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "exists x.(Wumpus(x) & -Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "exists x.(Wumpus(x) & Brumpus(x))", "exists x.(Wumpus(x) & Brumpus(x))"]}
{"id": "prontoqa_train_126", "nl": "Rex is not a brimpus and Rex is a numpus and Rex is a sterpus.", "fol": "(-brimpus(Rex) & numpus(Rex) & sterpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Brimpus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> Sterpus(x)))", "all x y z.((Rex(x) & Brimpus(y) & Numpus(z)) -> (-Brimpus(x) & Numpus(x) & Sterpus(x)))", "(all x y.(Brimpus(x) -> -Brimpus(x)) & (Numpus(y) -> -Brimpus(y)) & (Sterpus(y) -> -Brimpus(y)))", "(all x.(Rex(x) -> -Brimpus(x)) & all y.(Nompus(y) & Sterpus(y))))", "all x.(Rex(x) -> (-Brimpus(x) & Numpus(x) & Sterpus(x)))", "(all x y z.((Rex(x) & Brimpus(y) & Numpus(z)) -> -Brimpus(x)) & ((Rex(x) & Sterpus(x)) -> Sterpus(x)))", "(-Brimpus(rex) & Numpus(rex) & Sterpus(rex))", "all x y z.((Rex(x) & Brimpus(y) & Numpus(z)) -> (-Brimpus(x) & Numpus(x) & Sterpus(x)))", "all x y.((Rex(x) & Brimpus(y) & Numpus(y)) -> (-Brimpus(x) & Sterpus(x)))", "(all x.(Rex(x) -> -Brimpus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> Sterpus(x)))", "all x y z.((Rex(x) & Brimpus(y) & Numpus(z)) -> (-Brimpus(x) & -Numpus(x) & -Sterpus(x)))", "all x.(Rex(x) -> (-Brimpus(x) & Numpus(x) & Sterpus(x)))", "(-Brimpus(rex) & Numpus(rex) & Sterpus(rex))", "all x y z.((Rex(x) & Brimpus(y) & Numpus(z) & Sterpus(x)) -> (-Brimpus(x) & Numpus(y) & Sterpus(z)))", "(all x.(Rex(x) -> -Brimpus(x)) & all y.(Nompus(y) & Sterpus(y)))", "(all x.(Rex(x) -> -Brumpus(x)) & all y.(Rex(y) -> Numpus(y)) & all z.(Rex(z) -> Sterpus(z))))"]}
{"id": "prontoqa_train_127", "nl": "Numpuses are yumpuses.", "fol": "all x. (numpus(x) -> yumpus(x))", "prediction": ["all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yampus(x))", "all x y.((Numpus(x) & Yumpus(y)) -> Is(x,y))", "all x.(Numpus(x) -> Yumpus(x))", "(Yumpuse(Numpus)", "all x y.((Numpus(x) & Yumpus(y)) -> Yampus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x y.((Numpus(x) & Yampus(y)) -> Yumpus(x))", "all x.(Numpuse(x) -> Yampus(x))", "(Yumpus)", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yampus(x))", "all x.(Numpuse(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yampus(x))", "All x.(Numpus(x) -> Yampus(x))", "all x.(Numpus(x) -> Yumpus(x))"]}
{"id": "prontoqa_train_128", "nl": "Fae is not a yumpus, Fae is an impus, and Fae is a shumpus.", "fol": "(-yumpus(Fae) & impus(Fae) & shumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Issue(x)) & (Fae(x) -> Humpus(x)))", "all x y z.((Fae(x) & Yampus(y) & Is(z) & Is(x,y)) -> (-Yumpus(x) & Is(x,z) & Is(x,y) & Is(x,z)))", "(all x.(Fae(x) -> -Yumpus(x)) & all y.(Fae(y) -> Issue(y)) & all z.(Fae(z) -> Shumpus(z))))", "(all x y z.((Fae(x) & Yumpus(y)) -> -Yumpus(x)) & ((Fae(z) & Impossible(z)) -> Humpus(z)))", "all x y z.((Fae(x) & Yumpus(y) & Impossible(z)) -> (-Yumpus(x) & Shumpus(x)))", "all x.(Fae(x) -> (-Yumpus(x) & Issue(x) & Shumpus(x)))", "(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Issue(x)) & (Fae(x) -> Shumpus(x)))", "all x y z.((Fae(x) & Yampus(y) & Imperator(z)) -> (-Yumpus(x) & Imperator(x) & Humpus(y)))", "exists x.(Fae(x) & -Yumpus(x) & Is(x) & Is(x) & Shumpus(x))", "(all x y z.((Fae(x) & Yumpus(y)) -> -Yumpus(x)) & ((Fae(z) & Issue(z)) -> Shumpus(z)))", "all x y z.(Fae(x) & (-Yumpus(x) & Fae(y) & Imperator(y) & Shumpus(z)))", "(all x.(Fae(x) -> -Yumpus(x)) & all y.(Fae(y) -> Issue(y)) & all z.(Fae(z) -> Shumpus(z))))", "all x y z.((Fae(x) & Yumpus(y) & Impossible(z)) -> (-Yumpus(x) & Shumpus(x)))", "all x y z.(Fae(x) -> (-Yumpus(x) & Issue(y) & IsShumpus(z)))", "(all x y z.((Fae(x) & Yumpus(y)) -> -Yumpus(x)) & ((Fae(z) & Impossible(z)) -> Humpus(z)))", "(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Issue(x)) & (Fae(x) -> Humpus(x)))"]}
{"id": "prontoqa_train_129", "nl": "Fae is not a numpus.", "fol": "-numpus(Fae)", "prediction": ["all x.(Fae(x) -> -Numpus(x))", "(-numpus(Fae))", "-Numpus(Fae)", "(Fae isn'tNumpus(Fae))", "all x.(Fae(x) -> -Numpus(x))", "-Numpus(Fae)", "(-numpus(Fae))", "(-numpus(fae) & -numpus(fae))", "(Numpus(Fae) & -Numpus(Fae))", "-Numpus(Fae)", "all x.(Fae(x) -> -Numpus(x))", "-Numpus(Fae)", "(Numpus(fae) & -Numpus(fae))", "all x.(Fae(x) -> -Numpus(x))", "-Numpus(fae)", "all x.(Fae(x) -> -Numpus(x))"]}
{"id": "prontoqa_train_130", "nl": "Every sterpus is a wumpus.", "fol": "all x. (sterpus(x) -> wumpus(x))", "prediction": ["all x.(Sterpus(x) -> Wumpus(x))", "all x.(Steerpus(x) -> Wumpus(x))", "all x y.((Sterpus(x) & Wumpus(y)) -> Is(x,y))", "all x.(Sterpus(x) -> Wumpus(x))", "(all x.(Sterpus(x) -> Wumpus(x)))", "all x y.((Steerpus(x) & Wumpus(y)) -> Has(x,y))", "all x.(Steerpus(x) -> Wumpus(x))", "all x.(Strohpus(x) -> Wumpus(x))", "all x.(Sterpus(x) -> Wumpus(x))", "exists x.(Sterpus(x) & Wumpus(x))", "all x.(Stereo(x) -> Wumpus(x))", "all x.(Sterpus(x) -> Wampus(x))", "exists x.(Sterpus(x) & Hush(x))", "all x.(Steerpus(x) -> Wompus(x))", "all x.(Sterpus(x) -> Wumpus(x))", "exists x.(Steerpus(x) & Wumpus(x))"]}
{"id": "prontoqa_train_131", "nl": "Sam is a vumpus and Sam is not a wumpus and Sam is a lorpus.", "fol": "(vumpus(Sam) & -wumpus(Sam) & lorpus(Sam))", "prediction": ["(all x.(Sam(x) -> Vumpus(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Lorpus(x)))", "all x y z.((Sam(x) & Vumpus(x) & Sam(y) & Wumpus(z)) -> (-Wumpus(y) & Lorpus(z)))", "all x y.((Sam(x) & Vumpus(x) & Sam(y)) -> (-Wumpus(y) & Lorpus(y)))", "(all x.(Sam(x) -> Vumpus(x)) & (-Wumpus(x)) & (Lorpus(x) -> Vumpus(x)))", "all x.(Sam(x) -> (Vumpus(x) & -Wumpus(x) & Lorpus(x)))", "all x y z.((Sam(x) & Vumpus(x) & Sam(y) & Wumpus(z)) -> (-Wumpus(y) & -Lorpus(y)))", "(all x.(Vumpus(x) -> Sam(x)) & (-Wumpus(x) -> Sam(x)) & (Lorpus(x) -> Sam(x)))", "(all x y.(Vumpus(x) -> Sam(x)) & (-Wumpus(y) -> Sam(y))) & (Lorpus(y) -> Sam(y)))", "(all x.(Sam(x) -> Vumpus(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Lorpus(x)))", "(all x.(Sam(x) -> Vumpus(x)) & (-Wumpus(x)) | (-Wumpus(x) & -Lorpus(x))))", "all x y z.((Sam(x) & Vampire(x) & Wumpus(y) & Lorpus(z)) -> (Vampire(x) & -Wumpus(y) & Lorpus(z)))", "all x y.((Sam(x) & Vumpus(x) & Sam(y)) -> (-Wumpus(y) & Loompus(y)))", "all x.(Sam(x) -> (Vimpus(x) & -Wumpus(x) & Lorpus(x)))", "(all x y.(Vumpus(x) -> Sam(x)) & (-Wumpus(y) -> Sam(x)) & (Lorpus(y) -> Sam(y)))", "exists x.(Sam(x) & Vumpus(x) & -Wumpus(x) & Loompus(x))", "(all x.(Sam(x) -> Vampire(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Lorpus(x)))"]}
{"id": "prontoqa_train_132", "nl": "Sam is not a sterpus.", "fol": "-sterpus(Sam)", "prediction": ["all x.(Sam(x) -> -Sterpus(x))", "(-Sterpus(Sam))", "Sam is not sterpus.", "all x.(Sam(x) -> -Sterpus(x))", "(-Sterpus(Sam))", "(-Sterepus(Sam) & -Sterpus(Sam))", "-(Sam(s) & Sterpus(s))", "Sam is not sterpus.", "all x.(Sam(x) -> -Sterepus(x))", "-Sam(sam)", "-SamSterpus(Sam)", "(-Sterepus(Sam) & -Sterpus(Sam))", "all x.(Sam(x) -> -Sterpus(x))", "all x.(Sam(x) -> -Sterepus(x))", "(-Steerpus(Sam))", "all x.(Sam(x) -> -Sterpus(x))"]}
{"id": "prontoqa_train_133", "nl": "Tumpuses are zumpuses.", "fol": "all x. (tumpus(x) -> zumpus(x))", "prediction": ["all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x y.((Tumpus(x) & Zumpus(y)) -> Tompus(x))", "all x.(Tumpuse(x) -> Zumpuse(x))", "all x.(Tumpus(x) -> Zumpus(x))", "(Zombie(tump) & Tompus(tump))", "all x y.((Tumpus(x) & Tompus(y)) -> Zumpus(x))", "(Tompuse(tumpus) & Tompuse(tumpus))", "all x.(Tumpus(x) -> Zumpuse(x))", "all x.(Tompus(x) -> (Tumpus(x) & Zumpus(x)))", "all x.(Tumpuse(x) -> Zumpuse(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpuse(x))", "all x.(Tumpuse(x) -> Zumpuse(x))", "All x.(Mumpsue(x) -> Zumpuse(x))", "All x.(Tompus(x) -> Tompus(x))"]}
{"id": "prontoqa_train_134", "nl": "Sam is a rompus, Sam is not a zumpus, and Sam is a dumpus.", "fol": "(rompus(Sam) & -zumpus(Sam) & dumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Dumpus(x)))", "all x y z.((Sam(x) & Rompus(x) & Sam(y) & Zumpus(z)) -> (Rompus(x) & -Tompus(y) & Dumpus(z)))", "(all x.(Rompus(x) -> Sam(x)) & (-Zumpus(x) -> Sam(x)) & (-Rompus(x) -> Sam(x)) & (-Rompus(x) -> Sam(x)) & (-Rompus(x) -> Sam(x)) & (-Rompus(x) -> Sam(x)))", "all x y z.((Sam(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & -Tompus(y) & Dumpus(z)))", "(all x y z.((Sam(x) & Rompus(y)) -> (Rompus(z) & -Zumpus(z)) & ((Sam(x) & Dumpus(x)) -> Dumpus(x)))", "all x.(Sam(x) -> (Rompus(x) & -Zumpus(x) & Dumpus(x)))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Dumpus(x)))", "(all x y z.(Rompus(x) -> Sam(x)) & (Zumpus(y) -> Sam(z))) & (Dumpus(z) -> Sam(z)))", "(all x.(SameDay(x) -> Rompus(x)) & (SameDay(x) -> -Zumpus(x)) & (SameDay(x) -> Dumpus(x)))", "all x.(Sam(x) -> (Rompus(x) | -Zumpus(x) | Dumpus(x)))", "all x y z.((Sam(x) & Rompus(x) & Sam(y) & Zumpus(z)) -> (Rompus(x) | Dumpus(y)))", "all x y z.((Sam(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & -Zumpus(y) & Dumpus(z)))", "exists x.(Rompus(x) & -Zumpus(x) & Dumpus(x))", "(all x.(Rompus(x) -> Sam(x)) & (-Tompus(x) -> Sam(x)) & (Dumpus(x) -> Sam(x)))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Dumpus(x)))", "all x y z.((Sam(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_135", "nl": "Tumpuses are jompuses.", "fol": "all x. (tumpus(x) -> jompus(x))", "prediction": ["all x.(Tumpuse(x) -> Jompuse(x))", "all x.(Tumpuse(x) -> Jompuse(x))", "all x y.((Tumpuse(x) & Jompus(y)) -> Is(x,y))", "all x.(Tumpus(x) -> Jompuse(x))", "(Jompuse(tump) & Jompuse(tump))", "all x.(Tumpuse(x) -> Jompuse(x))", "all x y.((Tumpuse(x) & Jombus(y)) -> Has(x,y))", "(Jompuse(tump) & Jompuse(tump))", "all x.(Tumulus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompuse(x))", "all x.(Tumpuse(x) -> Jompuse(x))", "(Jumpus)", "all x.(Tumulus(x) -> Jombus(x))", "all x.(Mumpsue(x) -> Jompuse(x))", "all x.(Mumpsue(x) -> Jombus(x))", "all x.(Tumpuse(x) -> Jompuse(x))"]}
{"id": "prontoqa_train_136", "nl": "Polly is a lorpus, Polly is not a jompus, and Polly is a dumpus.", "fol": "(lorpus(Polly) & -jompus(Polly) & dumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Jompus(x)) & (Polly(x) -> Dumpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Jompus(z)) -> (Lorpus(x) & -Jompus(y) & Dumpus(z)))", "(all x y z.((Polly(x) & Lorpus(y)) -> (Lorpus(x) & -Jompus(y)) & ((Polly(z) & Dumpus(z)) -> (Dumpus(z)))))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Jompus(x)) & (Polly(x) -> Dumpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Jompus(z)) -> (Lorpus(x) & -Jompus(x) & Dumpus(x)))", "all x.(Polly(x) -> (Lorpus(x) | -Jompus(x) | Dumpus(x)))", "exists x.(Polly(x) & Lorpus(x) & -Jompus(x) & Dumpus(x))", "(all x y z.((Polly(x) & Lorpus(y)) -> (Lorpus(x) & -Jompus(y)) & ((Polly(z) & Dumpus(z)) -> Dumpus(z))))", "all x y z.((Polly(x) & Lorpus(y) & Polly(z)) -> (Lorpus(x) | -Jompus(z) | Dumpus(z)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Jompus(z) & Dumpus(x)) -> (Lorpus(x) & -Jompus(y) & Dumpus(z)))", "(all x.(Lorpus(x) -> Polly(x)) & (-Jompus(x) -> Polly(x)) & (Dumpus(x) -> Polly(x)))", "(all x y.(Lorpus(x) -> Polly(x)) & (Jompus(y) -> Polly(y))) & (Dumpus(y) -> Polly(y)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Jompus(z) & Dumpus(x)) -> (Lorpus(y) & -Jompus(y) & Dumpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> -Jompus(y)) & all z.(Polly(z) -> Dumpus(z))))", "(all x y z.((Polly(x) & Lorpus(y)) -> (Lorpus(x) | -Jompus(y)) | (Dumpus(z) & Polly(z))))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Jompus(x)) & (Polly(x) -> Dumpus(x)))"]}
{"id": "prontoqa_train_137", "nl": "Polly is not a tumpus.", "fol": "-tumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Tumpus(x))", "(-Tumpus(Polly))", "Polly is notTumpus(Polly)", "all x.(Polly(x) -> -Tumpus(x))", "(-Tumpus(Polly))", "all x.(Polly(x) -> -Tumpus(x))", "Polly is notTumpus(poly)", "all x.(Polly(x) -> -Tumpus(x))", "(-Tumpus(Polly))", "Polly -Tumpus(Polly)", "-Tumpus(Polly)", "all x.(Polly(x) -> -Tumpus(x))", "(-Tumpus(Polly,Polly))", "(-Tumpus(Polly))", "All x.(Polly(x) -> -Tumpus(x))", "-Tumpus(Poly)"]}
{"id": "prontoqa_train_138", "nl": "Every vumpus is a rompus.", "fol": "all x. (vumpus(x) -> rompus(x))", "prediction": ["all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "(all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "exists x y.(Vumpus(x) & Rompus(y))", "all x.((Vumpus(x) & Rompus(x)) -> HasVumpus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "exists x y.(Vumpus(x) & Rompus(y))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "exists x.(Vumpus(x) & Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_139", "nl": "Alex is a jompus, Alex is a sterpus, and Alex is not a rompus.", "fol": "(jompus(Alex) & sterpus(Alex) & -rompus(Alex))", "prediction": ["(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Sterpus(y)) & -Rompus(y)))", "all x y z.((Alex(x) & Jompus(x) & Sterpus(y) & -Rompus(z)) -> (Jompus(x) & Sterpus(y) & -Rompus(z)))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Sterpus(x)) & -Alex(x)))", "(all x y z.((Alex(x) & Jompus(y)) -> (Jompus(z) | Sterepus(z))) & ((Alex(x) & -Rompus(x)) -> (Sterpus(x) & -Jompus(x))))", "all x.(Alex(x) -> (Jompus(x) | Sterpus(x) | -Rompus(x)))", "all x y z.((Alex(x) & Jompus(y) & Sterepus(z)) -> (Jompus(x) | Sterpus(x) | -Rompus(x)))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Sterpus(y)) & all z.(Alex(z) -> -Rompus(z))))", "(all x.(Alexa(x) -> Jompus(x)) & all y.(Alexa(y) -> Sterpus(y)) & all z.(Alexa(z) -> -Rompus(z))))", "all x y z.((Alex(x) & Jompus(x) & Sterpus(y) & -Rompus(z)) -> (Jompus(x) | Sterpus(y) & -Rompus(z)))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Sterpus(x)) & (Alex(x) -> -Rompus(x)))", "(all x y z.((Alex(x) & Jompus(y)) -> (Jompus(z) | Sterpus(z))) & ((Alex(x) & -Rompus(x)) -> (Sterpus(x) & -Jompus(x))))", "all x.(Alex(x) -> (Jompus(x) | Sterpus(x) | -Rompus(x)))", "all x y z.((Alex(x) & Jompus(y) & Sterepus(z)) -> (Jompus(x) | Sterpus(z) | -Rompus(z)))", "all x.(Alex(x) -> (Jompus(x) | Sterepus(x) | -Rompus(x)))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Sterpus(y)) & -Rompus(y)))", "all x y z.((Alex(x) & Jompus(x) & Sterpus(y) & -Rompus(z)) -> (Jompus(x) | Sterpus(y) & -Rompus(z)))"]}
{"id": "prontoqa_train_140", "nl": "Alex is not a vumpus.", "fol": "-vumpus(Alex)", "prediction": ["all x.(Alex(x) -> -Vumpus(x))", "Alex is not a vumpus.", "(-Vumpus(Alex))", "all x.(Alex(x) -> -Vumpus(x))", "Alex is not a vumpus.", "-Vumpus(Alex)", "all x.(Alex(x) -> -Vumpus(x))", "Alex is not a Vumpus.", "(-Vumpus(Alex))", "-Vumpus(Alex)", "Alex is not vumpus.", "Alex is not a vumpus.", "all x.(Alex(x) -> -Vumpus(x))", "all x.(Alex(x) -> -Vumpus(x))", "(-Vumpus(Alex))", "All x.(Alex(x) -> -Vimpus(x))"]}
{"id": "prontoqa_train_141", "nl": "Every dumpus is a wumpus.", "fol": "all x. (dumpus(x) -> wumpus(x))", "prediction": ["all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x y.((Dumpus(x) & Wumpus(y)) -> Is(x,y))", "(all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x y.((Dumpus(x) & Wumpus(y)) -> Has(x,y))", "all x.(Dumps(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wampus(x))", "exists x.(Dumpus(x) & Humpus(x))", "exists x.(Dumpus(x) & Wumpus(x))", "exists x.(Dupus(x) & Wumpus(x))"]}
{"id": "prontoqa_train_142", "nl": "Alex is not a wumpus, Alex is a yumpus, and Alex is a zumpus.", "fol": "(-wumpus(Alex) & yumpus(Alex) & zumpus(Alex))", "prediction": ["(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpus(y))) & all z.(Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Wumpus(y) & Yumpus(z)) -> (-Wumpus(x) & Yampus(y) & Zumpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Yumpus(x)) & (Alex(x) -> Zumpus(x)))", "(all x y z.((Alex(x) & Wumpus(y)) -> -Wumpus(x)) & ((Alex(z) & Yumpus(z)) -> Zumpus(z)))", "all x.(Alex(x) -> (-Wumpus(x) & -Yumpus(x) & -Zumpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Yumpus(z)) -> (-Wumpus(x) & Yumpus(y) & Zumpus(z)))", "all x.(Alex(x) -> (-Wumpus(x) & Yampus(x) & Zumpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Yumpus(z)) -> (-Wumpus(x) & Yampus(y) & Zumpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpus(y)) & all z.(Alex(z) -> Zumpus(z))))", "(all x y z.((Alex(x) & Wumpus(y)) -> -Wumpus(x)) & ((Alex(z) & Yumpus(z)) -> Zumpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Yumpus(x)) & (Alex(x) -> Zumpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Yumpus(z)) -> (-Wumpus(x) & Yampus(y) & Zumpus(z)))", "all x.(Alex(x) -> (-Wumpus(x) & Yampus(x) & Zumpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Yampus(z)) -> (-Wumpus(x) | Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpus(y)))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Yampus(x)) & (Alex(x) -> Zumpus(x)))"]}
{"id": "prontoqa_train_143", "nl": "Alex is not a dumpus.", "fol": "-dumpus(Alex)", "prediction": ["all x.(Alex(x) -> -Dumpus(x))", "Alex is not a Dumpus.", "(-Dumpus(Alex))", "all x.(Alex(x) -> -Dumpus(x))", "Alex is not a Dumpus.", "(-Dumpus(Alex))", "all x.(Alex(x) -> -Dumpus(x))", "-Dumpus(Alex)", "Alex is notDumpus.", "Alex is not a Dumpus.", "Alex is not Dumpus.", "all x.(Alex(x) -> -Dumpus(x))", "-Dumpus(Alex)", "(-Dumpus(Alex))", "All x.(Alex(x) -> -Dumpus(x))", "all x.(Alex(x) -> -Dumpus(x))"]}
{"id": "prontoqa_train_144", "nl": "Every lempus is a jompus.", "fol": "all x. (lempus(x) -> jompus(x))", "prediction": ["all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x y.((Lempus(x) & Jompus(y)) -> Has(x,y))", "(all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x y.((Lempus(x) & Jompus(y)) -> Has(x,y))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Limpus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Limpus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "exists x.(Lempus(x) & Joompa(x))", "exists x.(Lempus(x) & Jompus(x))", "exists x.(Lempus(x) & Jompus(x))"]}
{"id": "prontoqa_train_145", "nl": "Max is a sterpus and Max is not a jompus and Max is a yumpus.", "fol": "(sterpus(Max) & -jompus(Max) & yumpus(Max))", "prediction": ["(all x.(Max(x) -> Sterpus(x)) & (-Jompus(x) & -Yumpus(x)))", "all x y z.((Max(x) & Sterpus(x) & -Jompus(y) & Yumpus(z)) -> (Sterpus(x) & -Jompus(y) & Yumpus(z)))", "(all x y.((Max(x) & Sterpus(x)) -> (Max(x) & -Jompus(y)) & ((Max(x) & Yumpus(x)) -> (Max(x) & -Jompus(y))))", "all x y.((Max(x) & Sterpus(x) & -Jompus(y)) -> Yumpus(x))", "(all x y z.((Max(x) & Sterpus(x)) -> (Sterpus(x) & -Jompus(y)) & ((Max(z) & Yumpus(z))) -> (Yumpus(z))))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Jompus(x)) & (Max(x) -> Yumpus(x)))", "all x.(Max(x) -> (Sterpus(x) & -Jompus(x) & Yumpus(x)))", "((Max(Max) & Sterpus(Max)) | (-Jompus(Max) & Yumpus(Max))))", "(all x.(Max(x) -> Sterepus(x)) & (-Jompus(x) & -Yumpus(x)))", "all x y z.((Max(x) & Sterpus(y) & Jompus(z)) -> (-Jompus(x) & Yumpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & ((Max(x) & -Jompus(x)) | (-Max(x) & Yumpus(x)))))", "(all x y.((Max(x) & Sterpus(x)) -> (Sterpus(x) & -Jompus(y)) & ((Max(x) & Yumpus(x)) -> (Yumpus(x))))", "all x y.((Max(x) & Sterpus(x)) -> (-Jompus(x) & Yumpus(y)))", "all x.(Max(x) -> (Sterpus(x) & -Jompus(x) & Yumpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> -Jompus(y))) & all z.(Max(z) -> Yumpus(z)))", "all x.(Max(x) -> (Stereos(x) & -Jompus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_146", "nl": "Max is not a lempus.", "fol": "-lempus(Max)", "prediction": ["all x.(Max(x) -> -Lempus(x))", "-Lempus(Max)", "Max is not a lempus.", "all x.(Max(x) -> -Lempus(x))", "(-Lempus(Max))", "(Max is notLempus(Max))", "Max is not a Lempus.", "Max is not lempus.", "-Limpus(Max)", "all x.(Max(x) -> -Lempus(x))", "(-lempus(Max))", "all x.(Max(x) -> -Lempus(x))", "-Lempus(Max)", "(-lempus(Max))", "-Limpus(Max)", "-Lempus(Max)"]}
{"id": "prontoqa_train_147", "nl": "Each yumpus is a zumpus.", "fol": "all x. (yumpus(x) -> zumpus(x))", "prediction": ["all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x y.((Yumpus(x) & Zumpus(y)) -> Has(x,y))", "(all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x y.((Yumpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Yumpus(x) -> Zumpus(x))", "all x y.((Yumpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "exists x.(yumpus(x) & Tompus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "exists x.(yumpus(x) & Tosspus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "exists x.(Yumpus(x) & Zurpus(x))"]}
{"id": "prontoqa_train_148", "nl": "Rex is a rompus, Rex is a dumpus, and Rex is not a zumpus.", "fol": "(rompus(Rex) & dumpus(Rex) & -zumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Rompus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> -Zumpus(x)))", "all x y z.((Rex(x) & Dumpus(y) & Zumpus(z)) -> (Rompus(x) & Dumpus(y) & -Rompus(z)))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Rex(y) -> Dumpus(y)) & all z.(Rex(z) -> -Zumpus(z))))", "(all x y z.(Rompus(x) -> Rompus(x)) & (Dumpus(y) -> Dumpus(y)) & (Zumpus(z) -> -Rompus(z)))", "(all x.(Rompus(x) -> Rex)) & (Dumpus(x) -> Rex)) & (Zumpus(x) -> -Rompus(x)))", "all x.(Rex(x) -> (Rompus(x) & Dumpus(x) & -Zumpus(x)))", "all x y z.((Rex(x) & Dumpus(y) & Zumpus(z)) -> (Rompus(x) | Dumpus(y) | -Rompus(z)))", "all x y z.((Rompus(x) & Dumpus(y) & Rex(z)) -> (Rompus(x) | Dumpus(y) & -Zumpus(z)))", "(all x y z.((Rex(x) & Rompus(y)) -> (Rompus(x) | Dumpus(y)) & -Zumpus(z)))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Dumpus(y) -> -Zumpus(y)))", "all x y z.((Rex(x) & Rompus(y) & Dumpus(z)) -> (Rompus(x) & Dumpus(x) & -Zumpus(x)))", "all x.(Rompus(x) & Dumpus(x) & -Zumpus(x))", "(all x.(Rompus(x) -> Rex)) & (Dumpus(x) -> Rex)) & -Zumpus(x)))", "(all x y z.(Rompus(x) -> Rompus(x)) & (Dumpus(y) -> Dumpus(y)) & (Rompus(z) -> Zumpus(z)))", "(all x.(Rex) -> Rompus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> -Zumpus(x)))", "all x y z.((Rex(x) & Dumpus(y) & Zumpus(z)) -> (Rompus(x) | Dumpus(y) | -Tompus(z)))"]}
{"id": "prontoqa_train_149", "nl": "Rex is not a yumpus.", "fol": "-yumpus(Rex)", "prediction": ["Rex is notYumpus(x)", "(-Yumpus(Rex))", "all x.(Rex(x) -> -Yumpus(x))", "-Yumpus(Rex)", "(Yumpus(Rex) & -Yumpus(Rex))", "Rex is notYumpus(x)", "all x.(Rex(x) -> -Yumpus(x))", "Rex is notyumpus.", "(-Yumpus(Rex))", "-Yumpus(Rex)", "all x.(Rex(x) -> -Yumpus(x))", "Rex is notYumpus(x)", "Rex is notyumpus.", "All x.(Rex(x) -> -Yumpus(x))", "(-Yumpus(Rex))", "-yumpus."]}
{"id": "prontoqa_train_150", "nl": "Tumpuses are impuses.", "fol": "all x. (tumpus(x) -> impus(x))", "prediction": ["all x.(Tumulus(x) -> Issue(x))", "all x y.((Tumpuse(x) & Issue(y)) -> Issue(x,y))", "all x.(Tumpuse(x) -> Issue(x))", "(Issues(tumpuse) & Issues(tumpuse))", "all x.(Tumult(x) -> Issue(x))", "all x y.((Tumult(x) & Issue(y)) -> Issue(x,y))", "all x.(Tumpus(x) -> Issue(x))", "(Issue(tump) & Isofix(tump))", "all x.(Tumpuse(x) -> Issues(x))", "all x y.((Tumpuse(x) & Issue(y)) -> Issue(x,y))", "all x.(Tumulus(x) -> Impects(x))", "all x.(Tumpuse(x) -> Isolated(x))", "all x.(Tumpus(x) -> Issue(x))", "all x.(Tumult(x) -> Impermissible(x))", "all x.(Mumpsue(x) -> Issue(x))", "all x.(Tumpuse(x) -> Isolated(x))"]}
{"id": "prontoqa_train_151", "nl": "Sally is a jompus and Sally is a dumpus and Sally is not an impus.", "fol": "(jompus(Sally) & dumpus(Sally) & -impus(Sally))", "prediction": ["(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & (Sally(x) -> -Impossible(x))))", "all x y z.((Sally(x) & Jompus(x) & Dumpus(y) & -Impossible(z)) -> (Jompus(x) & Dumpus(y) & -Impossible(z)))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y)) & all z.(Sally(z) -> -Impossible(z))))", "all x y.((Sally(x) & Jompus(x) & Dumpus(y)) -> (Jompus(x) & -Impossible(y)))", "all x.(Sally(x) -> (Jompus(x) & Dumpus(x) & -Impossible(x)))", "(all x y.(Jompus(x) & Dumpus(y)) -> (Jompus(x) & Dumpus(y) & -Impossible(y)))", "Sally is a Jompus (Jompus) & Sally is Dumpus(Sally) & Sally is -Impossible(Sally))", "all x y z.((Sally(x) & Jompus(x) & Dumpus(y) & -Ilimination(z)) -> (Jompus(x) & Dumpus(y) & -Ilimination(z)))", "(Jompus(Sally) & Dumpus(Sally) & -Impossible(Sally))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & (Sally(x) -> -Impossible(x)))", "exists x.(Sally(x) & Jompus(x) & Dumpus(x) & -Ilios(x))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y)) & all z.(Sally(z) -> -Impossible(z))))", "all x.(Sally(x) -> (Jompus(x) & Dumpus(x) & -Ilimination(x)))", "(all x y.(Jompus(x) -> Sally(x)) & (Dumpus(y) -> Sally(y)))", "all x.(Sally(x) -> (Jompus(x) | Dumpus(x) | Imperator(x)))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & -Ilios(x)))"]}
{"id": "prontoqa_train_152", "nl": "Sally is not a tumpus.", "fol": "-tumpus(Sally)", "prediction": ["all x.(Sally(x) -> -Tumpus(x))", "Sally is not a Tumpus.", "(-Tumpus(Sally))", "Sally -Tumpus(Sally)", "Sally is not a tumpus.", "all x.(Sally(x) -> -Tumpus(x))", "Sally n'est pasTumpus(Sally)", "(-Tumpus(Sally))", "Sally is not a Tumpus.", "-Tumpus(Sally)", "all x.(Sally(x) -> -Tumpus(x))", "Sally -Tumpus(Sally)", "Sally is not a tumpus.", "Sally is not tumpus.", "(-Tumpus(Sally))", "-Tumpus(Sally)"]}
{"id": "prontoqa_train_153", "nl": "Each zumpus is a vumpus.", "fol": "all x. (zumpus(x) -> vumpus(x))", "prediction": ["all x.(Tompus(x) -> Vumpus(x))", "all x.(Zumpus(x) -> Vumpus(x))", "(all x.(Zumpus(x) -> Vumpus(x))", "all x y.((Tompus(x) & Vumpus(y)) -> Has(x,y))", "all x.(Tompus(x) -> Vumpus(x))", "all x y.((Zumpus(x) & Vumpus(y)) -> -Vumpus(x))", "all x.(Zumpus(x) -> Vumpus(x))", "all x.(Tompus(x) -> Vampus(x))", "all x.(Zumpus(x) -> Vumpus(x))", "exists x.(Zumpus(x) & -Vumpus(x))", "all x.(Tompus(x) -> Vumpus(x))", "all x.(Zumpus(x) -> Voompus(x))", "exists x.(Zumpus(x) & -Vumpus(x))", "all x.(Tompus(x) -> Vampus(x))", "exists x.(Zumpus(x) & Vampus(x))", "exists x.(Tommus(x) & -Vimpus(x))"]}
{"id": "prontoqa_train_154", "nl": "Sally is not a vumpus and Sally is a yumpus and Sally is a dumpus.", "fol": "(-vumpus(Sally) & yumpus(Sally) & dumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Vumpus(x)) & all y.(Sally(y) -> Yumpus(y))) & all z.(Sally(z) -> Dumpus(z)))", "all x y z.((Sally(x) & Vumpus(y) & Yumpus(z)) -> (-Vumpus(x) & Yumpus(x) & Dumpus(x)))", "(-Vumpus(Sally) & Yumpus(Sally) & Dumpus(Sally))", "(all x.(Sally(x) -> -Vumpus(x)) & (Yumpus(x) & Dumpus(x)))", "(-Vumpus(Sally) & Yumpus(Sally) & Dumpus(Sally))", "all x y z.((Sally(x) & Vumpus(y) & Yumpus(z)) -> (-Vumpus(x) & -Yumpus(x) & -Dumpus(x)))", "all x y.((Sally(x) & -Vumpus(x) & Yumpus(y)) -> Dumpus(x))", "(all x y.(Vumpus(x) -> -Vumpus(x)) & (Yumpus(y) -> Dumpus(y)))", "all x.(Sally(x) -> (-Vumpus(x) & -Yumpus(x) & -Dumpus(x)))", "(all x.(Sally(x) -> -Vumpus(x)) & (Yumpus(x) & Dumpus(x)))", "(all x.(Sally(x) -> -Vumpus(x)) & all y.(Sally(y) -> Yumpus(y))) & all z.(Sally(z) -> Dumpus(z)))", "all x.(Sally(x) -> (-Vumpus(x) & -Yumpus(x) & -Dumpus(x)))", "exists x.(Sally(x) & -Vumpus(x) & Yumpus(x) & Dumpus(x))", "(-Vumpus(Sally) & Yumpus(Sally) & Dumpus(Sally))", "all x y.((Sally(x) & Sally(y)) -> (-Vumpus(x) & Yumpus(y) & Dumpus(x)))", "all x y z.((Sally(x) & Vumpus(y) & Yumpus(z)) -> (-Vumpus(x) & Yumpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_155", "nl": "Sally is not a zumpus.", "fol": "-zumpus(Sally)", "prediction": ["Sally is not a zumpus.", "all x.(Sally(x) -> -Zumpus(x))", "(-Zumpus(Sally))", "Sally -Zumpus(Sally)", "Sally is not a zumpus.", "all x.(Sally(x) -> -Zumpus(x))", "Sally n'est pas zumpus.", "(-Zumpus(Sally))", "Sally is not a zumpus.", "all x.(Sally(x) -> -Zumpus(x))", "-Zumpus(Sally)", "Sally -Zumpus(Sally)", "Sally is not zumpus.", "Sally n'est pas zumpus.", "(-Zumpus(Sally))", "Sally is not a zumpus."]}
{"id": "prontoqa_train_156", "nl": "Every jompus is a rompus.", "fol": "all x. (jompus(x) -> rompus(x))", "prediction": ["all x.(Jompus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "(all x.(Jompus(x) -> Rompus(x))", "all x y.((Jompus(x) & Rompus(y)) -> Has(x,y))", "all x.(Jimpus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x y.((Jompus(x) & Rompus(y)) -> Is(x,y))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jimpus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jimpus(x) -> Rompus(x))", "exists x.(Jumpus(x) & Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "exists x.(Jompus(x) & Rompus(x))", "exists x.(Mjompus(x) & Rompus(x))"]}
{"id": "prontoqa_train_157", "nl": "Alex is not a rompus and Alex is a zumpus and Alex is a shumpus.", "fol": "(-rompus(Alex) & zumpus(Alex) & shumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (-Rompus(x) & Zumpus(y) & Humpus(z)))", "(all x.(Alex(x) -> -Rompus(x)) & all y.(Alex(y) -> Zumpus(y)) & all z.(Alex(z) -> Humpus(z))))", "all x y.((Alex(x) & Rompus(y)) -> (-Rompus(x) & Zumpus(y) & Humpus(x)))", "all x.(Alex(x) -> (-Rompus(x) & -Zumpus(x) & -Shumpus(x)))", "(all x.(Alex(x) -> -Rompus(x)) & all y.(Alex(y) -> Zumpus(y))) & all z.(Alex(z) -> Humpus(z)))", "all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (-Rompus(x) & Zumpus(x) & Humpus(x)))", "(all x y.((Alex(x) & -Rompus(x)) -> Zumpus(x)) & ((Alex(y) & -Rompus(y)) -> Humpus(y)))", "(all x y z.((Alex(x) & Rompus(y)) -> -Rompus(x)) & ((Alex(z) & Zumpus(z)) -> Humpus(z)))", "all x.(Alex(x) -> (-Rompus(x) & Zumpus(x) & Humpus(x)))", "(all x.(Alex(x) -> -Rompus(x)) & (Alex(x) -> Zumpus(x)) & (Alex(x) -> Humpus(x)))", "all x y.((Alex(x) & Rompus(y) & Zumpus(y)) -> (-Rompus(x) & Zumpus(y) & Humpus(y)))", "all x.(Alex(x) -> (-Rompus(x) & Tompus(x) & Humpus(x)))", "(all x.(Alex(x) -> -Rompus(x)) & all y.(Alex(y) -> Zumpus(y)) & all z.(Alex(z) -> Humpus(z))))", "all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (-Rompus(x) & Zumpus(y) & Humpus(z)))", "exists x.(Alex(x) & -Rompus(x) & Zumpus(x) & Humpus(x))", "(all x.(Alex(x) -> -Rompus(x)) & (Alex(x) -> Zumpus(x)) & (Alex(x) -> Humpus(x)))"]}
{"id": "prontoqa_train_158", "nl": "Alex is not a jompus.", "fol": "-jompus(Alex)", "prediction": ["all x.(Alex(x) -> -Jompus(x))", "Alex is not a jompus.", "all x.(Alex(x) -> -Jompus(x))", "Alex is not a Jompus.", "(-Jompus(Alex))", "all x.(Alex(x) -> -Jimpus(x))", "Alex is not a jompus.", "(-Jimpus(Alex))", "-Jompus(Alex)", "Alex is not a Jompus.", "(-jompus(Alex)).", "all x.(Alex(x) -> -Jompus(x))", "all x.(Alex(x) -> -Jimpus(x))", "-Jompus(Alex)", "All x.(Alex(x) -> -Jompus(x))", "all x.(Alex(x) -> -Jumpus(x))"]}
{"id": "prontoqa_train_159", "nl": "Alex is a lorpus and Alex is a grimpus and Alex is not a tumpus.", "fol": "(lorpus(Alex) & grimpus(Alex) & -tumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) & Grimpus(z) & -Tumpus(x)))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> Grimpus(y)) & all z.(Alex(z) -> -Tumpus(z))))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> Grimpus(x)) & (Alex(x) -> -Tumpus(x)))", "all x y.((Alex(x) & Lorpus(x) & Grimpus(y)) -> (Lorpus(x) & -Tumpus(x)))", "all x.(Alex(x) -> (Lorpus(x) & Grimpus(x) & -Tumpus(x)))", "(all x y z.((Alex(x) & Lorpus(y)) -> (Lorpus(x) & Grimpus(y))) & ((Alex(z) & Tumpus(z)) -> -Tumpus(z)))", "all x y z.((Alex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) & Grimpus(x) & -Tumpus(x)))", "(all x.(Alexa(x) -> Lorpus(x)) & all y.(Alexa(y) -> Grimpus(y)) & all z.(Alexa(z) -> -Tumpus(z))))", "all x y z.((Alex(x) & Lorpus(x) & Grimpus(y) & -Tumpus(z)) -> (Lorpus(x) & Grimpus(y) & -Tumpus(z)))", "all x.(Alex(x) -> (Lorpus(x) | Grimpus(x) | -Tumpus(x)))", "exists x.(Alex(x) & Lorpus(x) & Grimpus(x) & -Tumpus(x))", "(all x y.(Lorpus(x) -> Alex(x)) & (Grimpus(y) -> Alex(y)) & (Tumpus(y) -> Alex(y)))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> Grimpus(y)) & all z.(Alex(z) -> -Tumpus(z))))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> Grimpus(x)) & -Alex(x)))", "all x y.((Alex(x) & Lorpus(x) & Grimpus(y)) -> (Lorpus(x) & -Tumpus(x)))", "all x y z.((Alex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) | Grimpus(z) | -Tumpus(x)))"]}
{"id": "prontoqa_train_160", "nl": "Alex is not an impus.", "fol": "-impus(Alex)", "prediction": ["all x.(Alex(x) -> -Impossible(x))", "-Impossible(Alex)", "Alex -IsImpossible(Alex)", "Alex -Impossible(Alex)", "Alex is not impus.", "(-Is(Alex) & Is(Alex)))", "Alex is not a impus.", "all x.(Alex(x) -> -Impossible(x))", "-Impossible(Alex)", "(-IsExercise(Alex))", "All x.(Alex(x) -> -Impossible(x))", "Alex is not a impus.", "Alex is not impus.", "-Impossible(Alex)", "all x.(Alex(x) -> -Issue(x))", "All x.(Alex(x) -> -Impossible(x))"]}
{"id": "prontoqa_train_161", "nl": "Yumpuses are brimpuses.", "fol": "all x. (yumpus(x) -> brimpus(x))", "prediction": ["all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x y.((Yumpus(x) & Brimpus(y)) -> Brimpus(x))", "(Brimpuse(y) & -Brimpus(y))", "all x.(Yumpus(x) -> Brimpus(x))", "(Brimpuse(y) & Brimpuse(y))", "All x y.((Yumpus(x) & Brimpuse(y)) -> Is(x,y))", "all x.(Umpuse(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "All x y.((Yumpus(x) & Brimpus(y)) -> Brimpus(x))", "all x.(Yumpus(x) -> Brimpus(x))", "all x.(Umbuse(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpus(x))", "all x.(Yumpus(x) -> Brimpus(x))", "all x.(Yumpus(x) -> Brimpuse(x))"]}
{"id": "prontoqa_train_162", "nl": "Wren is not a brimpus and Wren is a zumpus and Wren is a grimpus.", "fol": "(-brimpus(Wren) & zumpus(Wren) & grimpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Brimpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Grimpus(x)))", "all x y z.((Wren(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Grimpus(x)))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "(all x y.(Brimpus(x) -> -Brimpus(x)) & (Tompus(y) -> Tompus(y)) & (Grimpus(y) -> Grimpus(y)))", "all x y.((Wren(x) & Wren(y)) -> (-Brimpus(x) & Zumpus(y) & Grimpus(y)))", "(all x y z.((Wren(x) & Brimpus(y) & Zumpus(z)) -> -Brimpus(x)) & ((Wren(x) & Grimpus(x)) -> Grimpus(x)))", "all x.(Wren(x) -> (-Brimpus(x) & Zumpus(x) & Grimpus(x)))", "all x y z.((Wren(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Grimpus(x)))", "all x y.((Wren(x) & Brimpus(y) & Zumpus(y)) -> (-Brimpus(x) & Grimpus(x)))", "(-Brimpus(Wren) & Zumpus(Wren) & Grimpus(Wren))", "(all x.(Wren(x) -> -Brimpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Grimpus(x)))", "all x y z.((Wren(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Zumpus(y) & Grimpus(z)))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "(all x y.(Brimpus(x) -> -Brimpus(x)) & (Zumpus(y) -> Grimpus(y)))", "(all x.(Wren(x) -> -Brumpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Grimpus(x)))", "all x y z.((Wren(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Grimpus(x)))"]}
{"id": "prontoqa_train_163", "nl": "Wren is not a yumpus.", "fol": "-yumpus(Wren)", "prediction": ["all x.(Wren(x) -> -Yumpus(x))", "(-Yumpus(Wren))", "all x.(Wren(x) -> -Yumpus(x))", "Wren is notYumpus.", "(-Yumpus(Wren))", "all x.(Wren(x) -> -Yumpus(x))", "(Yumpus(wren) & -Yumpus(wren))", "-Yumpus(Wren)", "(yumpus)", "all x.(Wren(x) -> -Yumpus(x))", "(-Yumpus(Wren))", "-Yumpus(Wren)", "all x.(Wren(x) -> -Yumpus(x))", "-yumpus.", "all x.(Wren(x) -> -Yumpus(x))", "-Yumpus(wren)"]}
{"id": "prontoqa_train_164", "nl": "Numpuses are dumpuses.", "fol": "all x. (numpus(x) -> dumpus(x))", "prediction": ["all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x y.((Numpuse(x) & Dumpuse(y)) -> (Dumpsuse(x) & -Dumpsuse(y)))", "(all x.(Numpuse(x) -> Dumpuse(x)))", "(Dumpsuse(n) & -Dumpsuse(n))", "all x.(Numpus(x) -> Dumpuse(x))", "all x y.((Numpuse(x) & Dumpuse(y)) -> Is(x,y))", "all x.(Numptus(x) -> Dumpuse(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "(Dumpsus(nupus) & Dumpuse(nupus))", "all x.(Numpus(x) -> Dumpuse(x))", "all x.(Numptus(x) -> Dumpuse(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpus(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_165", "nl": "Wren is not a dumpus, Wren is a sterpus, and Wren is a lorpus.", "fol": "(-dumpus(Wren) & sterpus(Wren) & lorpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Dumpus(x)) & ((Wren(x) -> Sterpus(x))) & ((Wren(x) -> Lorpus(x))))", "all x y z.((Wren(x) & Sterpus(y) & Lorpus(z)) -> (-Dumpus(x) & Sterpus(y) & Lorpus(z)))", "(all x.(Wren(x) -> -Dumpus(x)) & all y.(Wren(y) -> Sterpus(y)) & all z.(Wren(z) -> Lorpus(z))))", "(all x y z.((Wren(x) & Dumpus(y)) -> -Dumpus(x)) & ((Wren(z) & Sterpus(z)) -> Lorpus(z)))", "all x y z.((Wren(x) & Dumpus(y) & Sterpus(z)) -> (-Dumpus(x) & Sterpus(x) & Lorpus(x)))", "all x.(Wren(x) -> (-Dumpus(x) & Sterpus(x) & Lorpus(x)))", "(-Dumpus(Wren) & Sterpus(Wren) & Lorpus(Wren))", "(all x.(Wren(x) -> -Dumpus(x)) & ((Wren(x) & Sterpus(x)) | (Wren(x) & Lorpus(x)))))", "(all x y z.((Wren(x) & Dumpus(y)) -> -Dumpus(x)) & ((Wren(z) & Sterpus(z)) -> Lorpus(z)))", "all x y z.((Wren(x) & Sterpus(y) & Lorpus(z)) -> (-Dumpus(x) & Sterpus(y) & Lorpus(z)))", "(all x.(Wren(x) -> -Dumpus(x)) & all y.(Wren(y) -> Sterpus(y)) & all z.(Wren(z) -> Lorpus(z))))", "all x y z.((Wren(x) & Dumpus(y) & Sterpus(z)) -> (-Dumpus(x) & Sterpus(y) & Lorpus(z)))", "(all x y z.((Wren(x) & Dumpus(y)) -> -Dumpus(x)) & ((Wren(z) & Sterpus(z)) -> Lorpus(z)))", "all x y z.((Wren(x) & Sterpus(y) & Lorpus(z)) -> (-Dumpus(x) | Sterpus(y) & Lorpus(z)))", "(all x.(Wren(x) -> -Dumpus(x)) & ((Wren(x) & Sterpus(x)) | (Wren(x) & Lorpus(x))))", "all x y z.((Wren(x) & Dumpus(y) & Sterpus(z)) -> (-Dumpus(x) & Sterpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_train_166", "nl": "Each brimpus is an impus.", "fol": "all x. (brimpus(x) -> impus(x))", "prediction": ["all x.(Brimpus(x) -> IsImpossible(x))", "all x.(Brimpus(x) -> IsImpossed(x))", "all x y.((Brimpus(x) & Brimpus(y)) -> IsImpossible(x))", "all x.(Brimpus(x) -> Imperator(x))", "all x.(Brumpus(x) -> Impossible(x))", "(all x.(Brimpus(x) -> Isolated(x))", "all x y.((Brimpus(x) & Brimpus(y)) -> IsImpossible(x))", "all x.(Brimpus(x) -> IsImpossible(x))", "all x y.((Brimpus(x) & Brimpus(y)) -> Is(x,y))", "all x.(Brumpus(x) -> Imperative(x))", "all x.(Brimpus(x) -> Is(x,Impossible))", "exists x.(Brimpus(x) & IsImpossed(x))", "exists x.(Brimpus(x) & Impossible(x))", "all x.(Brumpus(x) -> Impeccable(x))", "exists x.(Brimpus(x) & Impossible(x))", "exists x.(Brimpus(x) & IsBrimpus(x))"]}
{"id": "prontoqa_train_167", "nl": "Max is a sterpus and Max is not an impus and Max is a gorpus.", "fol": "(sterpus(Max) & -impus(Max) & gorpus(Max))", "prediction": ["(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Gorpus(x)))", "all x y z.((Max(x) & Sterpus(y) & Is(z)) -> (-Impossible(x) & Gorpus(x)))", "all x y.((Max(x) & Sterpus(x) & -Impossible(y)) -> (Max(x) & Gorpus(x)))", "(all x y.((Max(x) & Sterpus(x)) -> -Impossible(x)) & ((Max(y) & Gorpus(y)) -> -Impossible(y)))", "(all x.(Max(x) -> Sterpus(x)) & ((Max(x) & -Impossible(x))) | (-Max(x) & Gorpus(x))))", "all x.(Max(x) -> (Sterpus(x) & -Impossible(x) & Gorpus(x)))", "((Max(Max) & Sterpus(Max)) & -Impossible(Max)) & (Max(Max) -> Gorpus(Max)))", "(all x y.((Max(x) & Sterpus(x)) -> (Sterpus(x) & -Impossible(x))) & ((Max(y) & Gorpus(y)) -> (Gorpus(y))))", "all x y z.((Max(x) & Sterpus(x) & -Impossible(y) & Gorpus(z)) -> (Sterpus(x) & Gorpus(z)))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Gorpus(x)))", "(all x y.((Max(x) & Sterpus(x)) -> (-Impossible(x) & -Impossible(y))) & ((Max(x) & Gorpus(x)) -> (-Impossible(y))))", "(all x.(Max(x) -> Sterpus(x)) & ((Max(x) -> -Impossible(x))) & ((Max(x) -> Gorpus(x))))", "all x y.((Max(x) & Sterpus(x) & Max(y)) -> (-Impossible(y) & Gorpus(y)))", "all x.(Max(x) -> (Sterpus(x) & -Impossible(x) & Gorpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> -Impossible(y))) & all z.(Max(z) -> Gorpus(z)))", "all x.(Max(x) -> (Sterpus(x) & -Impossible(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_168", "nl": "Shumpuses are grimpuses.", "fol": "all x. (shumpus(x) -> grimpus(x))", "prediction": ["all x.(Shampus(x) -> Grimpuse(x))", "all x.(Shuppus(x) -> Grimpuse(x))", "all x y.((Shuppus(x) & Grimpuse(y)) -> (Shampoos(x) & Grimpuse(x)))", "all x.(Shampoos(x) -> Grimpuse(x))", "(Gruffus(sh) & Grimpuse(sh))", "(Shampoos(shm) & Grimpuse(shm))", "all x.(Shimpus(x) -> Grimpuse(x))", "(Shutus) -> Grimpuse(s))", "all x y.((Shuppus(x) & Grimpus(y)) -> Grimpuse(x))", "all x.(Smoothpuse(x) -> Grimpuse(x))", "(Grimpuse(s) & -Shampoose(s))", "all x.(Shumpus(x) -> Grimpuse(x))", "all x.(Shupuse(x) -> Grappase(x))", "all x.(Shutus(x) -> Grimpuse(x))", "all x.(Shumpus(x) -> Grappus(x))", "all x.(Shuppe(x) -> Grimpuse(x))"]}
{"id": "prontoqa_train_169", "nl": "Max is not a grimpus and Max is a lempus and Max is a gorpus.", "fol": "(-grimpus(Max) & lempus(Max) & gorpus(Max))", "prediction": ["(all x.(Max(x) -> -Grimpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z))))", "all x y z.((Max(x) & Grimpus(y) & Lempus(z)) -> (-Grimpus(x) & Lempus(x) & Gorpus(x)))", "(all x.(Max(x) -> -Grimpus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> Gorpus(x)))", "(all x y z.((Max(x) & Grimpus(y)) -> -Grimpus(x)) & ((Max(z) & Lempus(z)) -> Gorpus(z)))", "all x.(Max(x) -> (-Grimpus(x) & Lempus(x) & Gorpus(x)))", "(-Grimpus(Max) & Lempus(Max) & Gorpus(Max))", "all x y z.((Max(x) & Gruppus(y) & Lempus(z)) -> (-Grimpus(x) & Lempus(y) & Gorpus(z)))", "all x y.((Max(x) & Grimpus(y)) -> (-Grimpus(x) & Lempus(y) & Gorpus(x)))", "all x y z.((Max(x) & Grimpus(y) & Lempus(z)) -> (-Grimpus(x) & Lempus(y) & Gorpus(z)))", "(all x.(Max(x) -> -Grimpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z))))", "all x.(Max(x) -> (-Grimpus(x) & Lempus(x) & Gorpus(x)))", "(all x y.((Max(x) & Grimpus(y)) -> -Grimpus(x)) & ((Max(x) & Lempus(y)) -> Gorpus(x)))", "(all x.(Max(x) -> -Grimpus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> Gorpus(x)))", "all x y z.((Max(x) & Grimpus(y) & Lempus(z) & Gorpus(x)) -> (-Grimpus(x) & Lempus(y) & Gorpus(z)))", "exists x.(Max(x) & -Grimpus(x) & Lempus(x) & Gorpus(x))", "(all x.(Max(x) -> -Grimpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z)))"]}
{"id": "prontoqa_train_170", "nl": "Max is not a shumpus.", "fol": "-shumpus(Max)", "prediction": ["(-Shumpus(Max))", "all x.(Max(x) -> -Shumpus(x))", "-Shumpus(Max)", "Max is not a shumpus.", "all x.(Max(x) -> -Shumpus(x))", "Max is notShumpus(Max)", "-(Max(Max) & Humpus(Max))", "(Max is notShumpus(Max))", "(-Shumpus(Max))", "all x.(Max(x) -> -Shumpus(x))", "-Shumpus(Max)", "all x.(Max(x) -> -Shumpus(x))", "(-Shumpus(Max))", "-(Shumpus(Max))", "-Shumpus(Max)", "(-Shumpus(Max))"]}
{"id": "prontoqa_train_171", "nl": "Zumpuses are jompuses.", "fol": "all x. (zumpus(x) -> jompus(x))", "prediction": ["all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "(Jumpuses(z) & Jompuse(z))", "all x y.((Zumpus(x) & Jompuse(y)) -> (Jumpus(x) & Jompuse(y)))", "all x.(Zumpus(x) -> Jompuse(x))", "(Jumpuses(z) & Jompuse(w))", "all x y.((Zumpus(x) & Jompus(y)) -> Jompus(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x y.((Zumpus(x) & Jompuse(y)) -> Has(x,y))", "all x.(Zimpuse(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompus(x))", "all x.(Zombus(x) -> Jompuse(x))", "all x.(Zombus(x) -> Jompuse(x))", "All x.(Zimpuse(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompus(x))", "All x.(Zumpus(x) -> Jompuse(x))"]}
{"id": "prontoqa_train_172", "nl": "Wren is a grimpus and Wren is not a jompus and Wren is a yumpus.", "fol": "(grimpus(Wren) & -jompus(Wren) & yumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Grimpus(x)) & (-Jompus(x) & -Yumpus(x)))", "all x y z.((Wren(x) & Grimpus(x) & Wren(y) & Yumpus(z)) -> (-Jompus(y) & -Jompus(z)))", "(all x y.(Wren(x) -> Grimpus(x)) & (-Jompus(y) & -Yumpus(y)))", "(all x y z.((Wren(x) & Grimpus(x)) -> (Smooth(x) & -Jompus(y)) & ((Wren(z) & Yumpus(z))) -> (Yumpus(z))))", "all x y.((Wren(x) & Grimpus(x) & Wren(y)) -> (-Jompus(y) & Yumpus(y)))", "all x y z.((Wren(x) & Grumpus(y) & Wren(z)) -> (Grimpus(x) & -Jompus(z) & Yumpus(z)))", "(all x.(Wren(x) -> Grimpus(x)) & (-Jompus(x) & -Yumpus(x)))", "all x y z.((Wren(x) & Grimpus(x) & Wren(y) & Yompus(z)) -> (-Jompus(y) & Yumpus(z)))", "(all x.(Wren(x) -> Grimpus(x)) & (-Jompus(x) & (Yumpus(x) | Wren(x))))", "(all x.(Wren(x) -> Grumpus(x)) & (-Jompus(x) & -Yumpus(x)))", "all x y.((Wren(x) & Grimpus(x)) -> (-Jompus(x) & Yumpus(y)))", "(all x y.(Wren(x) -> Grumpus(x)) & (-Jompus(y) & -Yumpus(y)))", "(all x.(Wren(x) -> Grimpus(x)) & (Wren(x) -> -Jompus(x)) & (Wren(x) -> Yumpus(x)))", "all x.(Wren(x) -> (Grimpus(x) & -Jompus(x) & Yumpus(x)))", "all x y z.((Wren(x) & Grapple(x) & Wren(y) & Jompus(z)) -> (-Jompus(y) & Yumpus(z)))", "(all x y z.(Wren(x) -> Grimpus(x)) & (Wren(y) -> -Jompus(y)) & (Wren(z) -> Yumpus(z)))"]}
{"id": "prontoqa_train_173", "nl": "Wren is not a zumpus.", "fol": "-zumpus(Wren)", "prediction": ["all x.(Wren(x) -> -Zumpus(x))", "(-Zumpus(Wren))", "Wren is not a zumpus.", "all x.(Wren(x) -> -Zumpus(x))", "(-Zumpus(Wren))", "-Zombipus(Wren)", "all x.(Wren(x) -> -Zombipus(x))", "(-Zumpus(Wren) & -Zombie(Wren))", "all x.(Wren(x) -> -Tompus(x))", "(-Zombipus(Wren,x))", "-Tompus(Wren)", "-Tompus(Wren)", "all x.(Wren(x) -> -Zumpus(x))", "all x.(Wren(x) -> -Tompus(x))", "All x.(Wren(x) -> -Zombipus(x))", "(-Zumpus(Wren))."]}
{"id": "prontoqa_train_174", "nl": "Every jompus is a wumpus.", "fol": "all x. (jompus(x) -> wumpus(x))", "prediction": ["all x.(Jompus(x) -> Wumpus(x))", "(all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x y.((Jompus(x) & Wumpus(y)) -> Has(x,y))", "all x.(Jimpus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x y.((Jompus(x) & Wumpus(y)) -> Is(x,y))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jimpus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jumpus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wampus(x))", "exists x.(Jimpus(x) & Wumpus(x))", "exists x.(jompus(x) & Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "exists x.(Jompus(x) & Wompus(x))"]}
{"id": "prontoqa_train_175", "nl": "Alex is not a wumpus and Alex is a lempus and Alex is a sterpus.", "fol": "(-wumpus(Alex) & lempus(Alex) & sterpus(Alex))", "prediction": ["all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(x) & Sterpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Sterpus(z))))", "all x.(Alex(x) -> (-Wumpus(x) & Lempus(x) & Sterpus(x)))", "all x y.((Alex(x) & Wumpus(y)) -> (-Wumpus(x) & Lempus(y) & Sterpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y))) & all z.(Alex(z) -> Sterpus(z)))", "(all x y.(Wumpus(x) -> -Wumpus(x)) & (Lempus(y) -> Sterepus(y)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Sterepus(x)))", "(all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> -Wumpus(x)) & ((Alex(x) & Lempus(x)) -> Sterpus(x)))", "all x.(Alex(x) -> (-Wumpus(x) & Lempus(x) & Sterpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Lempus(x)) & (Alex(x) -> Sterpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Sterpus(z))))", "all x y.((Alex(x) & Wumpus(y) & Lempus(y)) -> (-Wumpus(x) & Sterepus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(y) & Sterpus(z)))", "all x.(Alex(x) -> (-Wumpus(x) & Lempus(x) & Sterpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y))) & all z.(Alex(z) -> Sterpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Lempus(x)) & (Alex(x) -> Sterpus(x)))"]}
{"id": "prontoqa_train_176", "nl": "Zumpuses are brimpuses.", "fol": "all x. (zumpus(x) -> brimpus(x))", "prediction": ["all x.(Zumpus(x) -> Brimpuse(x))", "all x.(Zumpus(x) -> Brimpus(x))", "(Brimpuse(z) & Brimpuse(z))", "all x y.((Zumpus(x) & Brimpus(y)) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpuse(x))", "(Brimpuse(z) & -Brimpus(z) & -Brimpus(z))", "(Brimpuse(z) & Brimpus(w))", "all x y.((Zumpus(x) & Brimpus(y)) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpuse(x))", "all x.(Zimpuse(x) -> Brimpuse(x))", "all x.(Zombus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpuse(x) -> Brimpuse(x))", "all x.(Zumpus(x) -> Brimpuse(x))", "All x.(Zombus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_177", "nl": "Fae is a grimpus and Fae is a numpus and Fae is not a brimpus.", "fol": "(grimpus(Fae) & numpus(Fae) & -brimpus(Fae))", "prediction": ["(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Brimpus(x)))", "all x y z.((Fae(x) & Grimpus(x) & Fae(y) & Numpus(y)) -> (Fae(x) & -Brimpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Brimpus(z))))", "(all x y z.((Fae(x) & Grimpus(x)) -> (Fae(y) & Numpus(y))) & ((Fae(z) & Brimpus(z)) -> (-Fae(z))))", "(all x y z.(Fae(x) -> Grimpus(x)) & (Fae(y) -> Numpus(y)) & (Fae(z) -> -Brimpus(z)))", "(all x y.(Fae(x) -> Grimpus(x)) & (Fae(y) -> Numpus(y)) & (Fae(y) -> -Brimpus(y)))", "all x y.((Fae(x) & Grimpus(x) & Fae(y)) -> (Numpus(y) & -Brimpus(y)))", "all x.(Fae(x) -> (Grimpus(x) & Numpus(x) & -Brimpus(x)))", "all x y z.((Fae(x) & Grimpus(x) & Fae(y) & Numpus(y)) -> (Fae(z) & -Brimpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Numpus(x)) & -Brimpus(x)))", "exists x.(Fae(x) & Grimpus(x) & Numpus(x) & -Brimpus(x))", "all x y z.((Fae(x) & Grimpus(y) & Numpus(z)) -> (Smooth(x) & Numpus(z) & -Brimpus(x)))", "all x y z.(Fae(x) & Grimpus(x) & Numpus(y) & -Brimpus(z))", "all x.(Fae(x) -> (Grimpus(x) | Numpus(x) | -Brimpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Brimpus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Brimpus(x)))"]}
{"id": "prontoqa_train_178", "nl": "Fae is not a zumpus.", "fol": "-zumpus(Fae)", "prediction": ["(-Zumpus(Fae))", "all x.(Fae(x) -> -Zumpus(x))", "Fae is not zumpus.", "-Zumpus(Fae)", "all x.(Fae(x) -> -Zumpus(x))", ".(Fae(x) & -Zumpus(x))", "(-Zumpus(Fae))", "all x.(Fae(x) -> -Zumpus(x))", "(-zusp(Fae,Simulator))", "-Zumpus(Fae)", "all x.(Fae(x) -> -Zumpus(x))", "(-Zombipus(Fae))", "(-Zumpus(Fae))", "(-Zumpus(Fae,Fae))", "-Tompus(fae)", "-Tompus(fae)"]}
{"id": "prontoqa_train_179", "nl": "Impuses are rompuses.", "fol": "all x. (impus(x) -> rompus(x))", "prediction": ["all x.(Impuse(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompus(x))", "all x y.((Impuse(x) & Rompus(y)) -> Is(x,y))", "all x.(Impuse(x) -> Rompus(x))", "(Rompus(impus) & HasRecognition(impus,impus))", "all x y.((Impuse(x) & Rompus(y)) -> Is(x,y))", "(all x.(Impuse(x) -> Rompuse(x)))", "all x.(Impus(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompus(x))", "(all x.(Impuse(x) -> Rompuse(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impus(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompuse(x))", "all x.(Impuse(x) -> Rompus(x))"]}
{"id": "prontoqa_train_180", "nl": "Max is not a rompus, Max is a dumpus, and Max is a wumpus.", "fol": "(-rompus(Max) & dumpus(Max) & wumpus(Max))", "prediction": ["(all x.(Max(x) -> -Rompus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> Wumpus(x)))", "all x y z.((Max(x) & Dumpus(y) & Wumpus(z)) -> (-Rompus(x) & Dumpus(y) & Wumpus(z)))", "(all x.(Max(x) -> -Rompus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> Wumpus(z))))", "(all x y z.((Max(x) & Rompus(y)) -> -Rompus(x)) & ((Max(z) & Dumpus(z)) -> Wumpus(z)))", "(-Rompus(Max) & Dumpus(Max) & Wumpus(Max))", "all x y z.((Max(x) & Rompus(y) & Dumpus(z)) -> (-Rompus(x) & Dumpus(x) & Wumpus(x)))", "all x.(Max(x) -> (-Rompus(x) & Dumpus(x) & Wumpus(x)))", "(all x.(Max(x) -> -Rompus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> Wumpus(x)))", "all x y z.((Max(x) & Dumpus(y) & Wumpus(z)) -> (-Rompus(x) | Dumpus(y) | Wumpus(z)))", "(all x y z.((Max(x) & Rompus(y)) -> -Rompus(x)) & ((Max(z) & Dumpus(z)) -> Wumpus(z)))", "all x.(Max(x) -> (-Rompus(x) & Dumpus(x) & Wumpus(x)))", "(all x.(Max(x) -> -Rompus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> Wumpus(z))))", "all x y z.((Max(x) & Rompus(y) & Dumpus(z)) -> (-Rompus(x) & Dumpus(x) & Wumpus(x)))", "all x y z.((Max(x) & Dumpus(y) & Wumpus(z)) -> (-Rompus(x) & Dumpus(y) & Wumpus(z)))", "(all x y z.((Max(x) & Rompus(y)) -> -Rompus(x)) & ((Max(z) & Dumpus(z)) -> Wumpus(z)))", "(all x.(Max(x) -> -Rompus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> Wumpus(x)))"]}
{"id": "prontoqa_train_181", "nl": "Max is not an impus.", "fol": "-impus(Max)", "prediction": ["-Impossible(Max)", "all x.(Max(x) -> -Impossible(x))", "(Max(Max) & -Impossible(Max))", "Max -Impossible(Max)", "-Impossible(Max)", "Max is not impus.", "all x.(Max(x) -> -Impossible(x))", "(-Is(Max) & Is(Max))", "(Max(Max) & -Impossible(Max))", "(Exists(Max) & -Impossible(Max))", "(-Impossible(Max))", "Max is not impus.", "-IsExercise(Max)", "-Imposer(Max)", "-Impossible(Max)", "-Exercise(Max)"]}
{"id": "prontoqa_train_182", "nl": "Every numpus is a vumpus.", "fol": "all x. (numpus(x) -> vumpus(x))", "prediction": ["all x.(Nompus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x y.((Numpus(x) & Vumpus(y)) -> Is(x,y))", "all x.(Numerus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x y.((Numpus(x) & Vumpus(y)) -> Is(x,y))", "all x.(Nompus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Numerus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "exists x.(Numpus(x) & -Vumpus(x))", "exists x.(numpus(x) & Vumpus(x))", "all x.(Nompus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vampus(x))", "exists x.(Nompus(x) & -Vumpus(x))", "exists x.(Numpus(x) & Vampus(x))"]}
{"id": "prontoqa_train_183", "nl": "Alex is a sterpus and Alex is a lorpus and Alex is not a vumpus.", "fol": "(sterpus(Alex) & lorpus(Alex) & -vumpus(Alex))", "prediction": ["(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> -Vumpus(z))))", "all x y z.((Alex(x) & Sterpus(x) & Lorpus(y) & -Vumpus(z)) -> (Stereo(x) & Lorpus(y) & -Vumpus(z)))", "all x y.((Alex(x) & Sterpus(x) & Lorpus(y)) -> (-Vumpus(x)))", "all x.(Alex(x) -> (Sterpus(x) & Lorpus(x) & -Vumpus(x)))", "(all x.(Alex(x) -> Sterpus(x)) & (Alex(x) -> Lorpus(x)) & (Alex(x) -> -Vumpus(x)))", "all x y z.((Alex(x) & Sterpus(y) & Lorpus(z)) -> (Stereo(x) & Lorpus(x) & -Vumpus(x)))", "(all x y.((Alex(x) & Sterpus(x)) -> Sterpus(x)) & ((Alex(y) & Lorpus(y)) -> -Vumpus(y)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> -Vumpus(z))))", "(all x y z.((Alex(x) & Sterpus(y) & Lorpus(z)) -> (Sterepus(x) & Lorpus(y)) & -Vumpus(z)))", "exists x.(Alex(x) & Sterpus(x) & Lorpus(x) & -Vumpus(x))", "all x y.((Alex(x) & Sterpus(x) & Lorpus(y)) -> (-Vumpus(x)))", "(all x.(Alex(x) -> Sterepus(x)) & (Alex(x) -> Lorpus(x)) & -Alex(x)))", "all x.(Alex(x) -> (Sterepus(x) & Lorpus(x) & -Vumpus(x)))", "all x y z.((Alex(x) & Sterpus(x) & Lorpus(y) & -Vumpus(z)) -> (Sterpus(x) & Lorpus(y) & -Vumpus(z)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Lorpus(y) -> -Vumpus(y)))", "all x.(Alex(x) -> (Sterpus(x) & Lorpus(x) & -Vumpus(x)))"]}
{"id": "prontoqa_train_184", "nl": "Each yumpus is a sterpus.", "fol": "all x. (yumpus(x) -> sterpus(x))", "prediction": ["all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x y.((Yumpus(x) & Sterpus(y)) -> HasSterpus(x,y))", "all x.(Yumpus(x) -> Sterpus(x))", "all x y.((Yumpus(x) & Sterepus(y)) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x y.((Yumpus(x) & Sterpus(y)) -> Is(x,y))", "all x.(Yumpus(x) -> Sterepus(x))", "exists x.(yumpus(x) & Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterepus(x))", "exists x.(yumpus(x) & Y.Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "exists x.(Yumpus(x) & Sterpus(x))", "exists x.(Yumpus(x) & Sterus(x))", "all x.(Yumpus(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_185", "nl": "Rex is a jompus and Rex is not a sterpus and Rex is a grimpus.", "fol": "(jompus(Rex) & -sterpus(Rex) & grimpus(Rex))", "prediction": ["all x y z.((Rex(x) & Jompus(x) & -Sterpus(y) & Grimpus(z)) -> (Jompus(x) & -Sterpus(y) & Grimpus(z)))", "(all x.(Rex(x) -> Jompus(x)) & (-Sterepus(x) & -Sterpus(x)))", "all x y.((Rex(x) & Jompus(x) & -Sterepus(y)) -> Grimpus(x))", "(all x.(Jompus(x) -> Rex)) & (-Sterepus(x) -> Rex)) & (-Sterepus(x) -> Rex)))", "(all x y.(Jompus(x) -> Rex)) & (-Sterpus(y) -> Rex)) & (Smoothpus(y) -> Rex)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> -Sterepus(x)) & (Rex(x) -> Grimpus(x)))", "all x y z.((Rex(x) & Jompus(x) & Rex(y) & Sterpus(z)) -> (Jompus(x) & -Sterpus(y) & Grimpus(z)))", "(all x.(Rex(x) -> Jompus(x)) & (-Sterepus(x) & -Strictus(x)))", "all x.(Rex(x) -> (Jompus(x) & -Sterpus(x) & Grimpus(x)))", "(all x y.(Jompus(x) -> Rex)) & (-Sterepus(y) -> Rex)) & (-Sterepus(y) -> Rex)) & (-Sterepus(y) -> Grimpus(y)))", "(all x y z.(Jompus(x) -> Rex)) & (-Sterepus(y) -> Rex)) & (Smoothpus(z) -> Rex)))", "all x.(Rex(x) -> (Jompus(x) | -Sterpus(x) | Grimpus(x)))", "all x y.((Rex(x) & Jompus(x)) -> (-Sterepus(y) & Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> -Sterpus(y))) & all z.(Rex(z) -> Grimpus(z)))", "all x y z.((Rex(x) & Jompus(x) & -Sterpus(y) & Grimpus(z)) -> (Jompus(x) & -Sterpus(y) & Grimpus(z)))", "(all x.(Jompus(x) -> Rex)) & (-Sterepus(x) -> Rex)) & (-Sterepus(x) -> Grimpus(x)))"]}
{"id": "prontoqa_train_186", "nl": "Every numpus is a zumpus.", "fol": "all x. (numpus(x) -> zumpus(x))", "prediction": ["all x.(Numpus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "(all x.(Numpus(x) -> Zumpus(x))", "all x y.((Numpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Numpus(x) -> Zumpus(x))", "all x y.((Numpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Numerus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Nompus(x) -> Zumpus(x))", "exists x.(numpus(x) & Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "exists x.(numpus(x) & Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Nompus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "exists x.(Nompus(x) & Zurpus(x))"]}
{"id": "prontoqa_train_187", "nl": "Stella is a rompus and Stella is not a zumpus and Stella is a grimpus.", "fol": "(rompus(Stella) & -zumpus(Stella) & grimpus(Stella))", "prediction": ["(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Grimpus(x)))", "all x y z.((Stella(x) & Rompus(x) & Stella(y) & Grimpus(z)) -> (-Tompus(y) & Grimpus(z)))", "(all x.(Rompus(x) -> -Tompus(x)) & (Stella(x) -> Grimpus(x)))", "all x y.((Stella(x) & Rompus(x) & Stella(y)) -> (-Tompus(y) & Grimpus(y)))", "(all x y.((Stella(x) & Rompus(x)) -> Toshpus(y)) & ((Stella(x) & Grimpus(x)) -> Toshpus(y)))", "all x.(Stella(x) -> (Rompus(x) & -Zumpus(x) & Grimpus(x)))", "all x y z.((Stella(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & -Tompus(y) & Grimpus(z)))", "(all x y z.((Stella(x) & Rompus(x)) -> (Rompus(x) & -Zumpus(y)) & ((Stella(z) & Grimpus(z))) -> (Stella(z))))", "(all x y.(Rompus(x) -> -Tompus(y)) & (Stella(x) -> Grimpus(x)))", "(all x.(Rompus(x) -> Stella)) & (-Tompus(x) -> Stella)) & (-Tompus(x) -> Stella)))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Grimpus(x)))", "all x y.((Stella(x) & Rompus(x)) -> (-Tompus(x) & Grimpus(y)))", "all x y z.((Stella(x) & Rompus(x) & Stella(y) & Zumpus(z)) -> (Rompus(x) & -Tompus(y) & Grimpus(y)))", "all x.(Stella(x) -> (Rompus(x) & -Zumpus(x) & Grimpus(x)))", "exists x.(Rompus(x) & Zumpus(x) & Grimpus(x))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Gruppus(x)))"]}
{"id": "prontoqa_train_188", "nl": "Stella is not a numpus.", "fol": "-numpus(Stella)", "prediction": ["Stella is not a Numpus(Stella)", "(-numpus(Stella))", "all x.(Stella(x) -> -Numpus(x))", "Stella is not Numpus(Stella)", "Stella is not a Numpus.", "(-Numpus(Stella))", "(-numpus(Stella))", "all x.(Stella(x) -> -Numpus(x))", "Stella -Numpus(Stella))", "-Numpus(Stella)", "Stella is not a Numpus(Stella)", "all x.(Stella(x) -> -Numpus(x))", "Stella is not Numpus(Stella)", "-Numpus(Stella)", "Stella -Numpus(s)", "(-numpus(Stella))"]}
{"id": "prontoqa_train_189", "nl": "Vumpuses are impuses.", "fol": "all x. (vumpus(x) -> impus(x))", "prediction": ["all x.(Vumpus(x) -> Issue(x))", "all x y.((Vumpus(x) & Issue(y)) -> Issue(x,y))", "all x.(Vumpus(x) -> Issue(x))", "all x.(Vumpus(x) -> Issues(x))", "all x y.((Vumpus(x) & Issue(y)) -> Issue(x,y))", "(Issues(vumpus) & Imperative(v))", "(Issues(v) & Impects(v))", "all x.(Vumpus(x) -> Issue(x))", "all x y.((Vumpus(x) & Issue(y)) -> Issue(x,y))", "all x.(Vumpus(x) -> Impects(x))", "all x.(Vumpus(x) -> Issues(x))", "all x.(Vumpuse(x) -> Isolated(x))", "all x.(Vumpus(x) -> Impermissible(x))", "all x.(Vumpus(x) -> Isolated(x))", "all x.(Vumpus(x) -> Issue(x))", "All x.(Vumpus(x) -> Impose(x))"]}
{"id": "prontoqa_train_190", "nl": "Rex is a dumpus and Rex is a rompus and Rex is not an impus.", "fol": "(dumpus(Rex) & rompus(Rex) & -impus(Rex))", "prediction": ["(all x.(Rex(x) -> Dumpus(x)) & all y.(Rompus(y) -> -Impossible(y)))", "all x y z.((Rex(x) & Dumpus(x) & Rompus(y) & Rex(z)) -> (Impossible(z) | Impossible(z)))", "(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Rompus(x)) & (Rex(x) -> -Impossible(x)))", "all x y.((Rex(x) & Dumpus(x) & Rompus(y)) -> -Impossible(x))", "(all x y z.((Rex(x) & Dumpus(x)) -> Dumpus(x)) & ((Rex(y) & Rompus(y)) -> -Impossible(z)))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rompus(y) -> Rompus(y)) & all z.(Issue(z) -> -Issue(z))))", "all x y z.((Rex(x) & Dumpus(x) & Rompus(y) & -Impossible(z)) -> (Dumps(x) & Rompus(y) & -Impossible(z)))", "(all x y.(Dumpus(x) -> Rex)) & (Rompus(y) -> Rex)) & (IsNotImpossible(y)))", "all x.(Rex(x) -> (Dumpus(x) & Rompus(x) & -Impossible(x)))", "all x.(Rex(x) -> (Dumps(x) & Rompus(x) & -Impossible(x)))", "(exists x.(Dumpus(x) & Rex(x)) & exists y.(Rompus(y) & Rex(y))))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rompus(y) -> Rompus(y)) & all z.(Rex(z) -> -Impossible(z))))", "all x y.((Rex(x) & Dumpus(x) & Rompus(y)) -> -Impossible(x))", "(all x y.(Dumpus(x) -> Rex)) & (Rompus(y) -> Rex)) & (Impossible(y) -> Rex)))", "all x.(Rex(x) -> (Dumpus(x) & Rompus(x) & -Impossible(x)))", "(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Rompus(x)) & (Rex(x) -> -Impossible(x)))"]}
{"id": "prontoqa_train_191", "nl": "Numpuses are gorpuses.", "fol": "all x. (numpus(x) -> gorpus(x))", "prediction": ["all x.(Numpus(x) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpus(x))", "all x y.((Numpus(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpuse(x))", "(Gorpuse(Numpus) & -Gorpuse(Numpus))", "(Gorpuse(Numpus) & Gorpus(Numpus))", "all x y.((Numpus(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpuse(x))", "all x.(Numpuse(x) -> Gorpuse(x))", "All x y.((Numpus(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Numptus(x) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpuse(x))", "all x.(Numpuse(x) -> Gorpuse(x))", "all x.(Numpuse(x) -> Gorpuse(x))", "all x.(Numpus(x) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpuse(x))"]}
{"id": "prontoqa_train_192", "nl": "Fae is a grimpus and Fae is a jompus and Fae is not a gorpus.", "fol": "(grimpus(Fae) & jompus(Fae) & -gorpus(Fae))", "prediction": ["(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & -Fae(x)))", "all x y z.((Fae(x) & Grimpus(x) & Jompus(y) & -Gorpus(z)) -> (Fae(x) & Grimpus(x) & Jompus(y) & -Gorpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> -Gorpus(x)))", "all x y.((Fae(x) & Grimpus(x) & Fae(y)) -> (Jompus(y) & -Gorpus(y)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Jompus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "(all x y z.(Fae(x) -> (Grimpus(x) & Jompus(y))) & (Fae(z) -> -Gorpus(z)))", "(all x y z.((Fae(x) & Grimpus(x)) -> (Fae(y) & Jompus(y))) & ((Fae(z) & Gorpus(z)) -> -Fae(z)))", "all x.(Fae(x) -> (Grimpus(x) & Jompus(x) & -Gorpus(x)))", "all x y z.((Fae(x) & Grimpus(x) & Jompus(y) & -Gorpus(z)) -> (Fae(x) & Grimpus(x) & Jompus(y) & -Gorpus(z)))", "(all x y.(Fae(x) -> Grimpus(x)) & (Fae(y) -> Jompus(y)) & (Fae(y) -> -Gorpus(y)))", "all x y z.(Fae(x) & Grimpus(x) & Jompus(y) & -Gorpus(z))", "exists x.(Fae(x) & Grimpus(x) & Jompus(x) & -Gorpus(x))", "all x y z.((Fae(x) & Grimpus(x) & Jompus(y) & Gorpus(z)) -> (Fae(x) & -Fae(x)))", "all x.(Fae(x) -> (Grimpus(x) | Jompus(x) | -Gorpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> -Gorpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Jompus(y)) & all z.(Fae(z) -> -Gorpus(z))))"]}
{"id": "prontoqa_train_193", "nl": "Shumpuses are tumpuses.", "fol": "all x. (shumpus(x) -> tumpus(x))", "prediction": ["all x.(Shumpus(x) -> Tumpus(x))", "all x.(Shupuse(x) -> Tumulus(x))", "all x y.((Shupuse(x) & Tumpus(y)) -> Tumpus(x))", "(Tumpuse(shupuse,s) & -Tumpus(shupuse))", "all x.(Shampoos(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tumpus(x))", "(Tumpuse(shm) & Tumpus(shm))", "all x y.((Shumpus(x) & Tumpus(y)) -> Tumpus(x))", "(all x.(Shupuse(x) -> Tumpus(x)))", "all x.(Shumpus(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tumpus(x))", "all x.(Shupuse(x) -> Tumpus(x))", "all x.(Shutus(x) -> Tumulus(x))", "all x.(Shumpus(x) -> Tumpus(x))", "All x.(Shumpus(x) -> Tumpus(x))", "all x.(Shupuse(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_194", "nl": "Sam is a wumpus and Sam is a dumpus and Sam is not a tumpus.", "fol": "(wumpus(Sam) & dumpus(Sam) & -tumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Tumpus(x)))", "all x y z.((Sam(x) & Wumpus(x) & Dumpus(y) & -Tumpus(z)) -> (Wumpus(x) & Dumpus(y) & -Tumpus(z)))", "all x y.((Sam(x) & Wumpus(x) & Dumpus(y)) -> (Wumpus(x) & Dumpus(y) & -Tumpus(x)))", "all x y z.((Sam(x) & Wumpus(x) & Dumpus(y) & Sam(z)) -> (Wumpus(x) & Dumpus(y) & -Tumpus(z)))", "(all x y z.((Sam(x) & Wumpus(x)) -> (Wumpus(x) & Dumpus(y))) & ((Sam(z) & -Tumpus(z))) -> (Dumpus(z) & -Wumpus(z))))", "(all x.(Wumpus(x) -> Sam(x)) & (Dumpus(x) -> Sam(x))) & (Tumpus(x) -> Sam(x)))", "(all x.(Sam(x) -> Wumpus(x)) & all y.(Sam(y) -> Dumpus(y)) & all z.(Sam(z) -> -Tumpus(z))))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Tumpus(x)))", "all x.(Sam(x) -> (Wumpus(x) & Dumpus(x) & -Tumpus(x)))", "(all x y.(Wumpus(x) -> Sam(x)) & (Dumpus(y) -> Sam(y)))", "(all x.(Wumpus(x) -> Sam(x)) & all y.(Dumpus(y) -> Sam(y))) & all z.(Tumpus(z) -> Sam(z)))", "all x y z.((Sam(x) & Wumpus(y) & Dumpus(z)) -> (Wumpus(x) & Dumpus(z) & -Tumpus(x)))", "all x y.((Sam(x) & Wumpus(x)) -> (Dumps(x) & -Tumpus(y)))", "all x.(Sam(x) -> (Wumpus(x) & Dumpus(x) & -Tumpus(x)))", "exists x.(Wumpus(x) & Dumpus(x) & -Tumpus(x))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Tumpus(x)))"]}
{"id": "prontoqa_train_195", "nl": "Sam is not a shumpus.", "fol": "-shumpus(Sam)", "prediction": ["all x.(Sam(x) -> -Shumpus(x))", "(-Shumpus(Sam))", "all x.(Sam(x) -> -Shumpus(x))", "Sam is notShumpus(Sam).", "(-Shumpus(Sam))", "Sam is not a shumpus.", "(Sam, notShumpus(Sam))", "-(Sam(s) & Humpus(s))", "all x.(Sam(x) -> -Shumpus(x))", "(-Shumpus(Sam))", "-Shumpus(Sam)", "all x.(Sam(x) -> -Shumpus(x))", "all x.(Sam(x) -> -Shumpus(x))", "(-Shumpus(Sam))", "-Shumpus(sam)", "all x.(Sam(x) -> -Shumpus(x))"]}
{"id": "prontoqa_train_196", "nl": "Every vumpus is a numpus.", "fol": "all x. (vumpus(x) -> numpus(x))", "prediction": ["all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x y.((Vumpus(x) & Numpus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Numpus(x))", "(all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.((Vumpus(x) & Numpus(x)) -> Has(x,y))", "all x y.((Vumpus(x) & Numpus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "exists x.(Vumpus(x) & Number(x))", "all x.(Vumpus(x) -> Numpus(x))", "exists x.(Vumpus(x) & Numpus(x))", "exists x.(Vumpus(x) & Numpus(x))"]}
{"id": "prontoqa_train_197", "nl": "Polly is a lorpus and Polly is not a numpus and Polly is a tumpus.", "fol": "(lorpus(Polly) & -numpus(Polly) & tumpus(Polly))", "prediction": ["all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Tumpus(z)))", "(all x.(Lorpus(x) -> Polly)) & (-Numpus(x) -> Polly)) & (Tumpus(x) -> Polly)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Tumpus(x)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Tumpus(z)))", "(all x y.(Lorpus(x) -> Polly(x)) & (Nompus(y) | Tumpus(y))))", "all x y.((Polly(x) & Lorpus(x) & Polly(y)) -> (-Numpus(y) & Tumpus(y)))", "(all x y z.((Lorph(x) & Polly(y) & Numpus(z)) -> (Lorph(y) & -Numpus(y) & Tumpus(z))))", "(all x.(Lorpus(x) -> Polly(x)) & (-Numpus(x) -> Polly(x))) & (Tumpus(x) -> Polly(x)))", "all x.(Polly(x) -> (Lorpus(x) & -Numpus(x) & Tumpus(x)))", "all x y.((Polly(x) & Lorpus(x)) -> (-Lumpus(x) & -Numpus(y) & Tumpus(x)))", "(all x y.(Lorph(x) -> Polly(x)) & (-Lumpus(y) & -Numpus(y))) & (Tumpus(y) -> Polly(y)))", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Tumpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Tumpus(x)))", "exists x.(Lorpus(x) & -Numpus(x) & Tumpus(x))", "(all x.(Lorph(x) -> Polly(x)) & (-Numpus(x) -> Polly(x)) & (Tumpus(x) -> Polly(x)))", "all x.(Polly(x) -> (Lorpus(x) & -Numpus(x) & Tumpus(x)))"]}
{"id": "prontoqa_train_198", "nl": "Wren is a tumpus, Wren is a rompus, and Wren is not a sterpus.", "fol": "(tumpus(Wren) & rompus(Wren) & -sterpus(Wren))", "prediction": ["(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Sterpus(x)))", "all x y z.((Wren(x) & Tumpus(y) & Rompus(z)) -> (Tumpus(x) | Roompus(z) | -Sterpus(z)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Sterepus(z))))", "(all x y z.((Wren(x) & Tumpus(y)) -> Tumpus(x)) & ((Wren(z) & Rompus(z)) -> -Sterepus(z)))", "all x y z.((Wren(x) & Rumpus(y) & Sterpus(z)) -> (Tumpus(x) & Rompus(y) & -Sterpus(z)))", "all x y z.((Wren(x) & Tompus(y) & Rompus(z)) -> (Tumpus(x) & Rompus(x) & -Sterpus(x)))", "all x.(Wren(x) -> (Tumpus(x) & Rompus(x) & -Sterpus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Sterepus(x)))", "all x y z.((Wren(x) & Tumpus(x) & Rompus(y) & -Sterpus(z)) -> (Tumpus(x) & Rompus(y) & -Sterpus(z)))", "(all x y z.((Wren(x) & Tumpus(y)) -> Tumpus(x)) & ((Wren(z) & Rompus(z)) -> -Sterepus(z)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Sterpus(z))))", "all x y z.((Wren(x) & Rumpus(y) & -Sterpus(z)) -> (Tumpus(x) | Rompus(y) | -Tumpus(z)))", "all x y z.((Wren(x) & Tompus(y) & Rompus(z) & -Sterpus(z)) -> (Tumpus(x) | Rompus(x) | -Sterpus(x)))", "(all x y z.((Wren(x) & Tumpus(y)) -> Tumpus(x)) & ((Wren(z) & Rompus(z)) -> -Sterpus(z)))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Rompus(x)) & -Sterpus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Sterepus(z))))"]}
{"id": "prontoqa_train_199", "nl": "Wren is not a vumpus.", "fol": "-vumpus(Wren)", "prediction": ["all x.(Wren(x) -> -Vumpus(x))", "(-Vumpus(Wren))", "Wren is not a Vumpus.", "all x.(Wren(x) -> -Vumpus(x))", "(-Vumpus(Wren))", "(Vumpus(Wren) & -Vumpus(Wren))", "Wren is not a Vumpus.", "-Vumpus(Wren)", "-Vumpus(Wren)", "all x.(Wren(x) -> -Vumpus(x))", "(Vumpus(Wren) & -Vumpus(Wren))", "(-Vimpus(Wren))", "all x.(Wren(x) -> -Vimpus(x))", "-Vumpus(Wren)", "all x.(Wren(x) -> -Vumpus(x))", "-Vimpus(Wren)"]}
{"id": "prontoqa_train_200", "nl": "Wren is a sterpus and Wren is a jompus and Wren is not a numpus.", "fol": "(sterpus(Wren) & jompus(Wren) & -numpus(Wren))", "prediction": ["(all x.(Wren(x) -> Sterpus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> -Numpus(x)))", "all x y z.((Wren(x) & Sterpus(y) & Jompus(z)) -> (Stereo(x) & Jompus(x) & -Numpus(x)))", "(all x.(Wren(x) -> Sterpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> -Numpus(z))))", "(all x y z.((Wren(x) & Sterpus(y)) -> (Stereo(x) & Jompus(y)) & ((Wren(z) & Numpus(z))) -> (Numpus(z))))", "all x y.((Wren(x) & Sterpus(x) & Jompus(y)) -> (-Numpus(x) & -Sterpus(y)))", "(all x y.(Wren(x) -> Sterpus(x)) & (Wren(y) -> Jompus(y)) & (Wren(y) -> -Numpus(y)))", "all x y z.((Wren(x) & Sterepus(y) & Jompus(z)) -> (Sterpus(x) & Jompus(z) & -Numpus(z)))", "all x.(Wren(x) -> (Sterpus(x) & Jompus(x) & -Numpus(x)))", "all x y z.((Wren(x) & Sterpus(x) & Jompus(y) & Numpus(z)) -> (Stereo(x) & Jompus(y) & -Numpus(z)))", "(all x.(Wren(x) -> Sterpus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> -Numpus(x)))", "(all x y z.(Wren(x) -> Sterpus(x)) & ((Wren(y) & Jompus(y)) -> -Numpus(z)))", "all x y.((Wren(x) & Sterepus(x) & Jompus(y)) -> (Sterpus(x) & -Numpus(y)))", "(all x.(Wren(x) -> Sterepus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> -Numpus(z))))", "all x.(Wren(x) -> (Stereos(x) & Jompus(x) & -Numpus(x)))", "all x y z.((Wren(x) & Sterepus(y) & Jompus(z)) -> (Stereo(x) | Jompus(z) | Numpus(z)))", "(all x.(Wren(x) -> Sterpus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> -Numpus(x)))"]}
{"id": "prontoqa_train_201", "nl": "Wren is not a lempus.", "fol": "-lempus(Wren)", "prediction": ["all x.(Wren(x) -> -Lempus(x))", "(-Lempus(Wren))", "Wren is not a lempus.", "all x.(Wren(x) -> -Lempus(x))", "(-Lempus(Wren))", "Wren is not a lempus.", "all x.(Wren(x) -> -Lempus(x))", "-Lempus(Wren)", "all x.(Wren(x) -> -Lempus(x))", "(-lempus(Wren))", "-Lempus(Wren)", "all x.(Wren(x) -> -Lempus(x))", "(-Lampus(Wren))", "all x.(Wren(x) -> -Limpus(x))", "(-lempus(Wren,2019))", "-Lempus(wren)"]}
{"id": "prontoqa_train_202", "nl": "Each rompus is a grimpus.", "fol": "all x. (rompus(x) -> grimpus(x))", "prediction": ["all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x y.((Rompus(x) & Grimpus(y)) -> Is(x,y))", "(all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "exists x.(rompus(x) & Grimpus(x))", "all x y.((Rompus(x) & Grimpus(y)) -> Has(x,y))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Romesue(x) -> Grimpus(x))", "exists x.(rompus(x) & Grimpus(x))", "all x y.((Rompus(x) & Grimpus(y)) -> Is(x,y))", "all x.(Rompus(x) -> Gruppus(x))", "all x.(Rompus(x) -> Grimpus(x))", "exists x.(rompus(x) & Grimpus(x))", "exists x.(rompus(x) & Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_203", "nl": "Polly is a wumpus and Polly is a gorpus and Polly is not a grimpus.", "fol": "(wumpus(Polly) & gorpus(Polly) & -grimpus(Polly))", "prediction": ["(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)))", "all x y z.((Polly(x) & Wumpus(x) & Gorpus(y) & Polly(z)) -> (Wumpus(x) & Gorpus(y) & -Grimpus(z)))", "all x y.((Polly(x) & Wumpus(x) & Polly(y)) -> (Gorpus(y) & -Grimpus(y)))", "all x y z.((Polly(x) & Wumpus(x) & Gorpus(y) & -Grimpus(z)) -> (Wumpus(x) & Gorpus(y) & -Grimpus(z)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)))", "(all x y z.((Polly(x) & Wumpus(x)) -> (Wumpus(x) & Gorpus(y)) & ((Polly(z) & Grimpus(z))) -> -Wumpus(z)))", "(all x.(Wumpus(x) -> Polly)) & (Gorpus(x) -> Polly)) & -Grimpus(x)))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> Gorpus(y)) & all z.(Polly(z) -> -Grimpus(z))))", "(all x y.(Wumpus(x) -> Polly(y)) & (Gorpus(y) -> Polly(y)))", "all x.(Polly(x) -> (Wumpus(x) & Gorpus(x) & -Grimpus(x)))", "all x y z.((Polly(x) & Wumpus(x) & Gorpus(y) & Polly(z)) -> (Wumpus(x) & Gorpus(y) & -Grimpus(z)))", "all x y z.((Polly(x) & Wumpus(y) & Gorpus(z)) -> (Wumpus(x) & Gorpus(x) & -Grimpus(x)))", "exists x.(Polly(x) & Wumpus(x) & Gorpus(x) & -Grimpus(x))", "all x y.((Polly(x) & Wumpus(x) & Polly(y)) -> (Gorpus(y) & -Grimpus(y)))", "(all x y.(Wumpus(x) & Polly(y)) & (Gorpus(y) | -Grimpus(y)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)))"]}
{"id": "prontoqa_train_204", "nl": "Polly is not a rompus.", "fol": "-rompus(Polly)", "prediction": ["all x.(Polly(x) -> -Rompus(x))", "(-Rompus(Polly))", "Polly is not a rompus.", "all x.(Polly(x) -> -Rompus(x))", "all x.(Polly(x) -> -Rompus(x))", "(-Rompus(Polly))", "Polly is not a Rompus.", "all x.((Polly(x) & -Rompus(x)) -> -Rompus(x))", "(-rompus(Polly))", "all x.(Polly(x) -> -Rompus(x))", "Polly is not a rompus.", "(-Rompus(Polly))", "(-rompus(Polly))", "-Rompus(Polly)", "All x.(Polly(x) -> -Rompus(x))", "-Rompus(Polly)"]}
{"id": "prontoqa_train_205", "nl": "Each gorpus is a lorpus.", "fol": "all x. (gorpus(x) -> lorpus(x))", "prediction": ["all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x y.((Gorpus(x) & Lorpus(y)) -> Is(x,y))", "all x.(Gorpus(x) -> Lorpus(x))", "all x y.((Gorpus(x) & Lorpus(y)) -> Contains(x,y))", "all x.(Gorpus(x) -> Lorpus(x))", "all x y.((Gorpus(x) & Lorpus(y)) -> Has(x,y))", "all x.(Gorpus(x) -> Loomis(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lord(x))", "all x.(Gorpus(x) -> Lorpus(x))", "exists x.(Gorpus(x) & Thrombosis(x))", "exists x.(Gorpus(x) & Lord(x))", "all x.(Gorpus(x) -> Loompus(x))", "exists x.(Gorpus(x) & Lord(x))", "exists x.(Gorpus(x) & Lord(x))"]}
{"id": "prontoqa_train_206", "nl": "Sally is a brimpus, Sally is not a lorpus, and Sally is a yumpus.", "fol": "(brimpus(Sally) & -lorpus(Sally) & yumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Yumpus(x)))", "all x y z.((Sally(x) & Brimpus(x) & -Lorpus(y) & Yumpus(z)) -> (Brimpus(x) & Yumpus(z)))", "(all x y z.((Sally(x) & Brimpus(x)) -> (Brimpus(y) & -Lorpus(z))) & ((Sally(x) & Yumpus(x)) -> (Yumpus(x))))", "(all x.(Sally(x) -> Brimpus(x)) & (-Lorpus(x) & (Yumpus(x) | -Lorpus(x))))", "all x y z.((Sally(x) & Brimpus(y) & Yumpus(z)) -> (-Lorpus(x) & -Brimpus(y) & Yumpus(z)))", "all x.(Sally(x) -> (Brimpus(x) & -Lorpus(x) & Yumpus(x)))", "(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Yumpus(x)))", "all x y z.((Sally(x) & Brimpus(x) & -Lorpus(y) & Yumpus(z)) -> (Brimpus(x) & Yampus(z)))", "(all x y z.((Sally(x) & Brimpus(y)) -> Brimpus(x)) & ((Sally(z) & -Lorpus(z)) -> Yumps(z)))", "(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Lorpus(y))) & all z.(Sally(z) -> Yumpus(z)))", "all x y z.((Sally(x) & Brimpus(y) & Lorpus(z)) -> (Brimpus(x) | -Lorpus(x) | Yumpus(x)))", "(all x.(Sally(x) -> Brimpus(x)) & (-Lorpus(x) & (Yumpus(x) | -Lorpus(x))))", "(all x y z.((Sally(x) & Brimpus(x)) -> (Brimpus(x) | -Lorpus(y)) | (Yumpus(z) & Sally(z))))", "all x.(Sally(x) -> (Brimpus(x) & -Lorpus(x) & Yumpus(x)))", "all x y z.((Sally(x) & Brimpus(x) & -Lorpus(y) & Yumpus(z)) -> (Brimpus(x) & Yampus(x) & Yampus(y)))", "(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Yumpus(x)))"]}
{"id": "prontoqa_train_207", "nl": "Sally is not a gorpus.", "fol": "-gorpus(Sally)", "prediction": ["all x.(Sally(x) -> -Gorpus(x))", "Sally is not a Gorpus.", "(-Gorpus(Sally))", "Sally -Gorpus(Sally)", "Sally is not a Gorpus.", "all x.(Sally(x) -> -Gorpus(x))", "Sally n'est pas Gorpus(Sally)", "(-Gorpus(Sally))", "Sally is not a Gorpus.", "all x.(Sally(x) -> -Gorpus(x))", "-Gorpus(Sally)", "Sally is not gorpus.", "Sally -Gorpus(Sally)", "all x.(Sally(x) -> -Gorpus(x))", "(-Gorpus(Sally))", "Sally is not a Gorpus."]}
{"id": "prontoqa_train_208", "nl": "Each dumpus is a wumpus.", "fol": "all x. (dumpus(x) -> wumpus(x))", "prediction": ["all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "(all x.(Dumpus(x) -> Wumpus(x)))", "all x y.((Dumpus(x) & Wumpus(y)) -> Has(x,y))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumps(x) -> Wumpus(x))", "all x y.((Dumpus(x) & Wumpus(y)) -> Is(x,y))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "exists x.(Dumps(x) & Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wampus(x))", "exists x.(Dumpus(x) & Wumpus(x))", "exists x.(Dumpus(x) & Humpus(x))", "all x.(Dumpus(x) -> Wampus(x))", "exists x.(Dupus(x) & Humpus(x))"]}
{"id": "prontoqa_train_209", "nl": "Alex is not a wumpus and Alex is a lempus and Alex is a zumpus.", "fol": "(-wumpus(Alex) & lempus(Alex) & zumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(x) & Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Zumpus(z))))", "all x.(Alex(x) -> (-Wumpus(x) & Lempus(x) & Zumpus(x)))", "all x y.((Alex(x) & Wumpus(y)) -> (-Wumpus(x) & Lempus(y) & Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y))) & all z.(Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(y) & Zumpus(z)))", "(all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> -Wumpus(x)) & ((Alex(x) & Lempus(x)) -> Zumpus(x)))", "(all x y.(Wumpus(x) -> -Wumpus(x)) & (Lempus(y) -> Zumpus(y)))", "all x.(Alex(x) -> (-Wumpus(x) & Lempus(x) & Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Lempus(x)) & (Alex(x) -> Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(x) & Zumpus(x)))", "exists x.(Alex(x) & -Wumpus(x) & Lempus(x) & Zumpus(x))", "all x y.((Alex(x) & Wumpus(y) & Lempus(y)) -> Zumpus(x))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y))) & all z.(Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(y) & Zumpus(z)))"]}
{"id": "prontoqa_train_210", "nl": "Each lempus is a grimpus.", "fol": "all x. (lempus(x) -> grimpus(x))", "prediction": ["all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x y.((Lempus(x) & Grimpus(y)) -> Is(x,y))", "(all x.(Lempus(x) -> Grimpus(x)))", "all x.(Lempus(x) -> Grimpus(x))", "all x y.((Lempus(x) & Grimpus(y)) -> Is(x,y))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Limpus(x) -> Gruppus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Limpus(x) -> Gruppus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Limpus(x) -> Gruppus(x))", "exists x.(Lempus(x) & Grimpus(x))", "exists x.(Lempus(x) & Grimpus(x))", "exists x.(Lempus(x) & Grimpus(x))", "exists x.(Lempus(x) & Grimpus(x))"]}
{"id": "prontoqa_train_211", "nl": "Max is a brimpus and Max is not a grimpus and Max is a zumpus.", "fol": "(brimpus(Max) & -grimpus(Max) & zumpus(Max))", "prediction": ["(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Grimpus(x)) & (Max(x) -> Zumpus(x)))", "all x y z.((Max(x) & Brimpus(x) & Max(y) & Grimpus(z)) -> (-Grimpus(y) & Zumpus(z)))", "all x y.((Max(x) & Brimpus(x) & Max(y)) -> (-Grimpus(y) & Zumpus(y)))", "(all x y.((Max(x) & Brimpus(x)) -> (Brimpus(x) & -Grimpus(y))) & ((Max(x) & Zumpus(x)) -> (Tompus(x))))", "(all x.(Max(x) -> Brimpus(x)) & (-Max(x) -> Grimpus(x)) & (Max(x) -> Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Grimpus(x)) & (Max(x) -> Zumpus(x)))", "all x y z.((Max(x) & Brimpus(x) & Max(y) & Grimpus(z)) -> (Brimpus(x) & -Grimpus(y) & Zumpus(z)))", "(all x y z.((Max(x) & Brimpus(x)) -> (Brimpus(x) & -Grimpus(y)) & ((Max(z) & Zumpus(z)) -> Zumpus(z))))", "all x.(Max(x) -> (Brimpus(x) & -Grimpus(x) & Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & all y.(Max(y) -> -Grimpus(y))) & all z.(Max(z) -> Zumpus(z)))", "(all x y.(Brimpus(x) -> Brimpus(x)) & (-Grimpus(y) & Zumpus(y)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Grimpus(x))) & (Max(x) -> Zumpus(x)))", "all x y.((Max(x) & Brimpus(x) & Max(y)) -> (-Grimpus(y) & Zumpus(y)))", "all x.(Max(x) -> (Brimpus(x) & -Grimpus(x) & Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (-Max(x) -> Grimpus(x)) & (-Max(x) -> Zumpus(x)))", "all x.(Max(x) -> (Brimpus(x) & -Grimpus(x) & Zumpus(x)))"]}
{"id": "prontoqa_train_212", "nl": "Sterpuses are shumpuses.", "fol": "all x. (sterpus(x) -> shumpus(x))", "prediction": ["all x.(Sterpus(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpus(x))", "(all x.(Sterpuse(x) -> Shumpus(x)))", "all x y.((Sterpuse(x) & Shumpus(y)) -> Shumpus(x))", "all x y.((Sterpuse(x) & Shumpus(y)) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpus(x))", "(Sterpuses(s) & Shumpuses(s))", "(all x.(Sterpuse(x) -> Humpuse(x)))", "all x.(Sterpus(x) -> Shumpus(x))", "all x.(Stump(x) -> Shumpus(x))", "all x.(Sterpus(x) -> Shumpus(x))", "all x.(Stupid(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpus(x))", "all x.(Strerpus(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpuse(x))"]}
{"id": "prontoqa_train_213", "nl": "Polly is a brimpus, Polly is not a shumpus, and Polly is a yumpus.", "fol": "(brimpus(Polly) & -shumpus(Polly) & yumpus(Polly))", "prediction": ["(all x.(Brimpus(x) -> Polly)) & (-Shumpus(x) -> Polly)) & (Yumpus(x) -> Polly)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x)))", "all x y z.((Polly(x) & Brimpus(x) & Polly(y) & Humpus(z)) -> (-Shumpus(y) & Yampus(z)))", "(all x y z.((Polly(x) & Brimpus(x)) -> Polly(y)) & ((Polly(z) & -Shumpus(z)) -> Polly(z)))", "all x y z.((Polly(x) & Brimpus(y) & Yumpus(z)) -> (-Shumpus(y) & -Brimpus(z) & -Shumpus(y) & -Yumpus(z)))", "all x y z.((Polly(x) & Brimpus(x) & Polly(y) & Humpus(z)) -> (-Shumpus(y) & Yumpus(z)))", "all x.(Polly(x) -> (Brimpus(x) & -Shumpus(x) & Yumpus(x)))", "(all x.(Brimpus(x) -> Polly)) & (-Shumpus(x) -> Polly)) & (Yumpus(x) -> Polly)))", "all x y.((Polly(x) & Brimpus(x)) -> (-Shumpus(x) & Yampus(y)))", "(all x y z.((Polly(x) & Brimpus(y)) -> (Brimpus(x) | -Shumpus(y)) | (Polly(z) & Yumpus(z))))", "(all x.(Brimpus(x) -> Polly)) & all y.(Shumpus(y) -> Polly)) & all z.(Yumpus(z) -> Polly)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x y z.(Brimpus(x) -> Polly)) & (Brimpus(y) | -Shumpus(y))) & (Yumpus(z) -> Polly))", "all x y z.((Polly(x) & Brimpus(x) & Polly(y) & Humpus(z)) -> (-Shumpus(y) & Yampus(z)))", "all x y z.((Polly(x) & Brimpus(x) & Polly(y) & Humpus(z)) -> (-Shumpus(y) & Yumpus(z)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x)))"]}
{"id": "prontoqa_train_214", "nl": "Polly is not a sterpus.", "fol": "-sterpus(Polly)", "prediction": ["all x.(Polly(x) -> -Sterpus(x))", "(-Sterpus(Polly))", "Polly is not sterpus.", "all x.(Polly(x) -> -Sterpus(x))", "(-Sterpus(Polly))", "Polly is not sterpus.", "Polly -Sterpus(Polly)", "All x.(Polly(x) -> -Sterpus(x))", "all x.(Polly(x) -> -Sterepus(x))", "(-Stereos(Polly,Sterpus))", "(-Sterepus(Polly))", "-Sterpus(Polly)", "all x.(Polly(x) -> -Sterpus(x))", "-Sterpus(Poly)", "all x.(Polly(x) -> -Sterepus(x))", "(-Steerpus(Poly))"]}
{"id": "prontoqa_train_215", "nl": "Each dumpus is a brimpus.", "fol": "all x. (dumpus(x) -> brimpus(x))", "prediction": ["all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "(all x.(Dumpus(x) -> Brimpus(x)))", "all x y.((Dumpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Dumpus(x) -> Brimpus(x))", "(all x.(Dumpus(x) -> Brimpus(x)))", "all x.(Dumps(x) -> Brimpus(x))", "all x y.((Dumpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Dumpus(x) -> Brimpus(x))", "exists x.(Dumps(x) & Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "exists x.(Dumpus(x) & Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "exists x.(Dupus(x) & Brumpus(x))"]}
{"id": "prontoqa_train_216", "nl": "Rex is a gorpus and Rex is not a brimpus and Rex is a lorpus.", "fol": "(gorpus(Rex) & -brimpus(Rex) & lorpus(Rex))", "prediction": ["(all x.(Rex(x) -> Gorpus(x)) & (-Brimpus(x) & -Lorpus(x)))", "all x y z.((Rex(x) & Gorpus(x) & Brimpus(y) & Lorpus(z)) -> (Gorpus(x) & -Brimpus(y) & Lorpus(z)))", "(all x y.(Gorpus(x) -> Rex)) & (-Brimpus(y) -> Rex)) & (Lorpus(y) -> Rex)))", "(all x y z.((Rex(x) & Gorpus(x)) -> Gorpus(x)) & ((Rex(y) & -Brimpus(y)) -> Lorpus(z)))", "all x y.((Rex(x) & Gorpus(x) & Brimpus(y)) -> (Rose(x) & -Brimpus(y) & Lorpus(x)))", "(all x.(Rex(x) -> Gorpus(x)) & (-Brimpus(x) & -Lorpus(x)))", "all x y z.((Rex(x) & Gorpus(x) & Brimpus(y) & Lorpus(z)) -> (Gorpus(x) & -Brimpus(y) & Lorpus(z)))", "all x y z.((Rex(x) & Gorpus(x) & Brimpus(y) & Lorpus(z)) -> (Gorpus(x) & -Brimpus(y) & Lorpus(z)))", "(all x y.(Gorpus(x) -> Gorpus(x)) & (Brimpus(y) -> -Brimpus(y)) & (Lorpus(y) -> Gorpus(y)))", "all x y.((Rex(x) & Gorpus(x) & -Brimpus(y)) -> (Lorpus(x) & Lorpus(y)))", "all x.(Rex(x) -> (Gorpus(x) & -Brumpus(x) & Lorpus(x)))", "(all x.(Rex(x) -> Gorpus(x)) & (-Brimpus(x) & -Lorpus(x)))", "(all x.(Rex(x) -> Gorpus(x)) & (-Brimpus(x) & -Lorpus(x)))", "(all x.(Rex(x) -> Gorpus(x)) & (Rex(x) -> -Brimpus(x)) & (Rex(x) -> Lorpus(x)))", "(all x.(Rex,Gorpus) -> Rex(x)) & (-Brimpus(x) -> Rex(x)) & (Lorpus(x) -> Rex(x)))", "all x.(Rex(x) -> (Gorpus(x) & -Brimpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_train_217", "nl": "Rex is not a dumpus.", "fol": "-dumpus(Rex)", "prediction": ["Rex is not a Dumpus.", "all x.(Rex(x) -> -Dumpus(x))", "(-Dumpus(Rex))", "Rex is not a Dumpus.", "Rex is notDumpus(x)", "(-Dumpus(Rex))", "all x.(Rex(x) -> -Dumpus(x))", "Rex -Dumpus(Rex)", "-Dumpus(Rex)", "Rex is not Dumpus.", "all x.(Rex(x) -> -Dumpus(x))", "(-Dumpus(Rex))", "(-Dumps(Rex))", "Rex is not a Dumpus.", "-Dumpus(Rex)", "-Dumpus(rex)"]}
{"id": "prontoqa_train_218", "nl": "Each tumpus is a lorpus.", "fol": "all x. (tumpus(x) -> lorpus(x))", "prediction": ["all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x y.((Tumpus(x) & Lorpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Lorpus(x))", "all x y.((Tumpus(x) & Lorpus(y)) -> Is(x,y))", "all x.(Tumpus(x) -> Lorpus(x))", "all x y.((Tumpus(x) & Lorpus(y)) -> HasTumpus(x,y))", "all x.(Tumpus(x) -> Loomis(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> lorpus(x))", "exists x.(Tumpus(x) & Thrombos(x))", "all x.(Tumpus(x) -> Lordus(x))", "exists x.(Tumpus(x) & Lord(x))", "all x.(Tumpus(x) -> Lorpus(x))", "exists x.(Tumpus(x) & Lord(x))", "exists x.(Tumpus(x) & Lamb(x))"]}
{"id": "prontoqa_train_219", "nl": "Stella is not a lorpus, Stella is a yumpus, and Stella is a wumpus.", "fol": "(-lorpus(Stella) & yumpus(Stella) & wumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Lorpus(x)) & (Stella(x) -> Yumpus(x)) & (Stella(x) -> Wumpus(x)))", "all x y z.((Stella(x) & Yompus(y) & Wumpus(z)) -> (-Lorpus(x) & -Yumpus(y) & -Wumpus(z)))", "(all x.(Stella(x) -> -Lorpus(x)) & all y.(Stella(y) -> Yumpus(y)) & all z.(Stella(z) -> Wumpus(z))))", "(all x y z.((Stella(x) & Lorpus(y)) -> -Lorpus(x)) & ((Stella(z) & Yumpus(z))) -> Wumpus(z)))", "all x.(Stella(x) -> (-Lorpus(x) & Yampus(x) & Wumpus(x)))", "(all x.(Lorpus(x) -> -Lorpus(x)) & all y.(Yumpus(y) -> -Lorpus(y))) & all z.(Wumpus(z) -> (Lorpus(z) & Yumpus(z))))", "all x y z.((Stella(x) & Lorpus(y) & Yumpus(z)) -> (-Lorpus(x) & Yumpus(x) & Wumpus(x)))", "(all x.(Stella(x) -> -Lorpus(x)) & (Yumpus(x) | Wumpus(x))))", "all x y z.((Stella(x) & Yompus(y) & Wumpus(z)) -> (-Lorpus(x) & -Yumpus(y) & -Wumpus(z)))", "exists x.(Stella(x) & -Lorpus(x) & Yampus(x) & Wumpus(x))", "(all x y z.((Stella(x) & Lorpus(y)) -> -Lorpus(x)) & ((Stella(z) & Yumpa(z))) -> Wumpus(z)))", "(all x.(Lorpus(x) | Yampus(x)) & all y.(Wumpus(y))) -> -Lorpus(x))", "(all x y z.((Lorpus(x) & Stella(y) & Yumpus(z)) -> -Lorpus(x)) & ((Yumpus(y) & Stella(z)) -> Wumpus(z)))", "all x y z.((Stella(x) & Yompus(y) & Wumpus(z)) -> (-Lorpus(x) & Yampus(y) & Wumpus(z)))", "(all x.(Stella(x) -> -Lorpus(x)) & (Stella(x) -> Yumpus(x)) & (Stella(x) -> Wumpus(x)))", "all x y z.((Lorpus(x) & Yampus(y) & Wumpus(z)) -> (-Lorpus(x) & Yampus(y) & Wumpus(z)))"]}
{"id": "prontoqa_train_220", "nl": "Stella is not a tumpus.", "fol": "-tumpus(Stella)", "prediction": ["all x.(Stella(x) -> -Tumpus(x))", "(-Tumpus(Stella))", "Stella is not a Tumpus.", "Stella is notTumpus(Stella)", "all x.(Stella(x) -> -Tumpus(x))", "Stella is not a Tumpus(Stella)", "(-Tumpus(Stella))", "Stella is notTumpus(Stella)", "Stella -Tumpus(s)", "all x.(Stella(x) -> -Tumpus(x))", "(-Tumpus(Stella))", "-Tumpus(Stella)", "Stella is not a Tumpus.", "Stella -Tumpus(Stella)", "(-Tumpus(Stella))", "-Tumpus(Stella)"]}
{"id": "prontoqa_train_221", "nl": "Brimpuses are numpuses.", "fol": "all x. (brimpus(x) -> numpus(x))", "prediction": ["all x.(Brimpus(x) -> Numpus(x))", "all x.(Brompus(x) -> Numpus(x))", "all x y.((Brimpus(x) & Numpus(y)) -> (Brompus(x) & Numpus(x)))", "(all x.(Brimpus(x) -> Numpuse(x)))", "all x.(Brimbus(x) -> Numpus(x))", "all x.(Brimpus(x) -> Numpuse(x))", "all x y.((Brompus(x) & Numpus(y)) -> Is(x,y))", "all x.(Brimpuse(x) -> Numpuse(x))", "(all x.(Brompus(x) -> Numpus(x)))", "all x.(Brompus(x) -> Numpus(x))", "all x.(Brimpus(x) -> Numpuse(x))", "(Numpus)", "all x.(Brompus(x) -> Numpus(x))", "all x.(Brimbus(x) -> Numpuse(x))", "all x.(Brompus(x) -> Numpus(x))", "all x.( Brimpuse(x) -> Numpus(x))"]}
{"id": "prontoqa_train_222", "nl": "Stella is a lempus and Stella is not a numpus and Stella is a dumpus.", "fol": "(lempus(Stella) & -numpus(Stella) & dumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Numpus(x)) & (Stella(x) -> Dumpus(x)))", "all x y z.((Stella(x) & Lempus(x) & Stella(y) & Numpus(z)) -> (-Numpus(y) & Dumpus(y)))", "(all x y.((Stella(x) & Lempus(x)) -> Numpus(y)) & ((Stella(x) & Dumpus(x)) -> Dumpus(x)))", "all x y.((Stella(x) & Lempus(x) & Stella(y)) -> (-Numpus(y) & Dumpus(y)))", "(all x.(Lempus(x) -> Stella(x)) & (-Numpus(x) -> Stella(x)) & (Dumpus(x) -> Stella(x)))", "(all x y z.((Stella(x) & Lempus(x)) -> (Lempus(x) & -Numpus(y)) & ((Stella(z) & Dumpus(z)) -> Dumpus(z))))", "all x y z.((Stella(x) & Lempus(x) & Stella(y) & Numpus(z) & Dumpus(z)) -> (Lempus(x) & -Numpus(y) & Dumpus(y)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Numpus(x)) & (Stella(x) -> Dumpus(x)))", "all x.(Stella(x) -> (Lempus(x) & -Numpus(x) & Dumpus(x)))", "(all x y.(Lempus(x) -> Stella(x)) & (Numpus(y) -> Stella(y)) & (Dumpus(y) -> Stella(y)))", "(all x.(Lempus(x) & -Numpus(x)) & all y.(Dumpus(y)) -> Lempus(x)))", "all x y.((Stella(x) & Lempus(x)) -> (-Numpus(y) & Dumpus(x)))", "exists x.(Lempus(x) & -Numpus(x) & Dumpus(x))", "all x y z.((Stella(x) & Lempus(x) & Stella(y) & Numpus(z) & Dumpus(y)) -> (Lempus(x) & -Numpus(y) & Dumpus(z)))", "all x.(Stella(x) -> (Lempus(x) & -Numpus(x) & Dumpus(x)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Numpus(x)) & (Stella(x) -> Dumpus(x)))"]}
{"id": "prontoqa_train_223", "nl": "Stella is not a brimpus.", "fol": "-brimpus(Stella)", "prediction": ["all x.(Stella(x) -> -Brimpus(x))", "Stella is not a Brimpus.", "(-Brimpus(Stella))", "all x.(Stella(x) -> -Brimpus(x))", "Stella is not a Brimpus.", "Stella -Brimpus(Stella))", "Stella is not a brimpus.", "(-Brimpus(Stella))", "all x.(Stella(x) -> -Brumpus(x))", "-(Brimpus(Stella))", "-Brimpus(Stella)", "Stella -Brimpus(Stella)", "Stella is not a Brimpus.", "Stella is not a brimpus.", "(-Brumpus(Stella))", "all x.(Stella(x) -> -Brimpus(x))"]}
{"id": "prontoqa_train_224", "nl": "Max is a yumpus, Max is a shumpus, and Max is not an impus.", "fol": "(yumpus(Max) & shumpus(Max) & -impus(Max))", "prediction": ["(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Humpus(x)) & (Max(x) -> -Impossible(x))))", "all x y z.((Max(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) & Shumpus(x) & -Impossible(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Humpus(y)) & all z.(Max(z) -> -Impossible(z))))", "all x y z.((Max(x) & Yumpus(y) & Humpus(z)) -> (Yumpus(x) & Shumpus(x) & -Impossible(x)))", "all x.(Max(x) -> (Yumpus(x) & Humpus(x) & -Impossible(x)))", "(all x y z.((Max(x) & Yumpus(y)) -> (Yumpus(z) | Humpus(z))) & ((Max(x) & Issue(x)) -> -Impossible(x)))", "(yumpus(x) | shumpus(x)) & -Impossible(x))", "(all x y z.((Max(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) | Shumpus(z))) & ((Max(x) & Issue(x)) -> -Impossible(x)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Humpus(x)) & (Max(x) -> -Impossible(x))))", "all x y z.((Max(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) & Shumpus(x) & -Impossible(x)))", "(yumpus(x) & shumpus(x) & -isolator(x))", "(all x.(Max(x) -> Yampus(x)) & (Max(x) -> Humpus(x)) & -Impossible(x)))", "all x y z.((Max(x) & Yumpus(y) & Humpus(z) & Is(x,y)) -> (Yumpus(x) | Shumpus(z) | -Impossible(x)))", "all x.(Max(x) -> (Yumpus(x) & Humpus(x) & -Impossible(x)))", "all x.(Max(x) -> (Yumpus(x) | Humpus(x) | Imperator(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Humpus(y)) & all z.(Max(z) -> -Impossible(z))))"]}
{"id": "prontoqa_train_225", "nl": "Max is not a numpus.", "fol": "-numpus(Max)", "prediction": ["(-numpus(Max))", "all x.(Max(x) -> -Numpus(x))", "Max is not a Numpus.", "(Max(Max) & -Numpus(Max))", "-numpus(Max)", "Max is not a Numpus(Max)", "-Numpus(Max)", "all x.(Max(x) -> -Numpus(x))", "(-numpus(Max))", "Max is not Numpus.", "-Numpus(Max)", "(Max is notnumpus(Max))", "all x.(Max(x) -> -Numpus(x))", "-Numpus(Max)", "(-numpus(Max))", "all x.(Max(x) -> -Numpus(x))"]}
{"id": "prontoqa_train_226", "nl": "Each vumpus is a brimpus.", "fol": "all x. (vumpus(x) -> brimpus(x))", "prediction": ["all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "(all x.(Vumpus(x) -> Brimpus(x)))", "all x y.((Vumpus(x) & Brimpus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x y.((Vumpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "exists x.(Vumpus(x) & Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "exists x.(Vumpus(x) & Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "exists x.(Vumpus(x) & Brimpus(x))", "exists x.(Vumpus(x) & Brimpus(x))"]}
{"id": "prontoqa_train_227", "nl": "Wren is a jompus, Wren is a tumpus, and Wren is not a brimpus.", "fol": "(jompus(Wren) & tumpus(Wren) & -brimpus(Wren))", "prediction": ["(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Brimpus(x)))", "all x y z.((Wren(x) & Jompus(y) & Tumpus(z)) -> (Jompus(x) | Tumpus(z) | -Brimpus(x)))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "all x y z.((Wren(x) & Jompus(x) & Tumpus(y) & -Brimpus(z)) -> (Jompus(x) & Tumpus(y) & -Brimpus(z)))", "(all x y z.((Wren(x) & Jompus(y)) -> (Jompus(z) | Tumpus(z))) & ((Wren(x) & -Brimpus(x)) -> (Tumpus(x) & -Brimpus(x))))", "all x.(Wren(x) -> (Jompus(x) | Tumpus(x) | -Brimpus(x)))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Brimpus(x)))", "(all x y z.((Wren(x) & Jompus(x)) -> (Wren(y) & Tumpus(y))) & ((Wren(z) & -Brimpus(z)) -> (-Jompus(z) & Tumpus(z))))", "all x y z.((Wren(x) & Jompus(y) & Tumpus(z)) -> (Jompus(x) | Tumpus(z) | -Brimpus(z)))", "all x y z.((Wren(x) & Jompus(x) & Tumpus(y) & -Brimpus(z)) -> (Jompus(x) | Tumpus(y) | -Brimpus(z)))", "(all x y z.((Wren(x) & Jompus(y)) -> (Jompus(z) | Tumpus(z))) & ((Wren(x) & -Brimpus(x)) -> (Brimpus(x))))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Brimpus(x)))", "all x y z.((Wren(x) & Jompus(x) & Tumpus(y) & -Brimpus(z)) -> (Jompus(x) | Tumpus(y) & -Brimpus(z)))", "all x y z.((Wren(x) & Jompus(y) & Tumpus(z)) -> (Jompus(x) | Tumpus(z) | -Brimpus(x)))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brumpus(z))))"]}
{"id": "prontoqa_train_228", "nl": "Each sterpus is a jompus.", "fol": "all x. (sterpus(x) -> jompus(x))", "prediction": ["all x.(Sterpus(x) -> Jompus(x))", "all x.(Steerpus(x) -> Jompus(x))", "all x y.((Sterpus(x) & Jompus(y)) -> Has(x,y))", "(all x.(Sterpus(x) -> Jompus(x)))", "all x.(Sterpus(x) -> Jompus(x))", "all x y.((Steerpus(x) & Jompus(y)) -> Has(x,y))", "all x.(Sterepus(x) -> Jompus(x))", "all x y.((Sterpus(x) & Jompus(y)) -> Has(x,y))", "all x.(Sterpus(x) -> Jompus(x))", "all x.(Steerpus(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "exists x.(Steerpus(x) & JOMPUS(x))", "all x.(Stereo(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "exists x.(Sterpus(x) & Jompus(x))", "exists x.(Sterpus(x) & Jompus(x))"]}
{"id": "prontoqa_train_229", "nl": "Polly is not a jompus, Polly is a lempus, and Polly is a rompus.", "fol": "(-jompus(Polly) & lempus(Polly) & rompus(Polly))", "prediction": ["(all x.(Polly(x) -> -Jompus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Rompus(z))))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Jompus(x) & Lempus(x) & Rompus(x)))", "(all x y z.((Polly(x) & Jompus(y)) -> -Jompus(x)) & ((Polly(z) & Lempus(z))) -> Rompus(z)))", "(all x.(Polly(x) -> -Jompus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Rompus(x)))", "(all x.(Polly(x) -> -Jompus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Rompus(z))))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Jompus(x) & Lempus(x) & Rompus(x)))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Jompus(x) & Lempus(y) & Rompus(z)))", "all x y.((Polly(x) & Jompus(y)) -> (-Jompus(x) | Lempus(y) | Rompus(y)))", "(all x y z.((Polly(x) & Jompus(y)) -> -Jompus(x)) & ((Polly(z) & Lempus(z)) -> Rompus(z)))", "exists x.(Polly(x) & -Jompus(x) & Lempus(x) & Rompus(x))", "(all x.(Polly(x) -> -Jompus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Rompus(z))))", "(all x.(Polly(x) -> -Jompus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Rompus(x)))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Jompus(x) | (Lempus(x) & Rompus(x))))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Jompus(x) | (Lempus(z) | Rompus(z)))))", "(all x y z.((Polly(x) & Jompus(y)) -> -Jompus(x)) & ((Polly(z) & Lempus(z)) -> Rompus(z)))", "all x y z.((Polly(x) & Lempus(y) & Rompus(z)) -> (-Jompus(x) & Lempus(y) & Rompus(z)))"]}
{"id": "prontoqa_train_230", "nl": "Vumpuses are numpuses.", "fol": "all x. (vumpus(x) -> numpus(x))", "prediction": ["all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x y.((Vumpus(x) & Numpus(y)) -> Numpus(x))", "(Numpuses(v) & Numpus(v))", "(Numpus(v) & Numpus(v))", "all x.(Vumpus(x) -> Numpus(x))", "all x y.((Vumpus(x) & Numpus(y)) -> Numpus(x))", "all x.(Vumpus(x) -> Numpuse(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpuse(x))", "(Numpus)", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Volpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpuse(x))", "all x.(Vumpus(x) -> Numpus(x))"]}
{"id": "prontoqa_train_231", "nl": "Stella is not a numpus, Stella is a shumpus, and Stella is a sterpus.", "fol": "(-numpus(Stella) & shumpus(Stella) & sterpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Numpus(x)) & (Shumpus(x) | Sterpus(x))))", "all x y z.((Stella(x) & Numpus(y) & Shumpus(z)) -> (-Numpus(x) & Shumpus(x) & Sterpus(x)))", "(all x y z.((Stella(x) & Numpus(y)) -> -Numpus(x)) & ((Stella(z) & Humpus(z))) -> Sterpus(z)))", "(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) -> Sterpus(y)))", "all x.(Stella(x) -> (-Numpus(x) & -Shumpus(x) & -Sterpus(x)))", "exists x.(Stella(x) & -Numpus(x) & Shumpus(x) & Sterpus(x))", "all x y z.((Stella(x) & Numpus(y) & Humpus(z)) -> (-Numpus(x) & Shumpus(x) & Sterpus(x)))", "all x y z.((Stella(x) & Numpus(y) & Shumpus(z)) -> (-Numpus(x) & Shumpus(y) & Sterpus(z)))", "(all x y z.((Stella(x) & Numpus(y) & Shumpus(z)) -> -Numpus(x)) & ((Stella(x) & Sterpus(x)) -> Sterpus(x)))", "(all x y z.((Stella(x) & Numpus(y)) -> -Numpus(x)) & ((Shumpus(z) & -Sterpus(z)) -> Sterpus(z)))", "(all x.(Stella(x) -> -Numpus(x)) & (Shumpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) & Sterpus(y)))", "all x y z.((Stella(x) & Numpus(y) & Shumpus(z)) -> (-Numpus(x) & -Sterpus(x)))", "all x y z.((Stella(x) & Shumpus(y) & Sterpus(z)) -> (-Numpus(x) | (Shumpus(y) | Sterpus(z)))))", "(all x.(Stella(x) -> -Numpus(x)) & (Shumpus(x) | Sterpus(x)))", "(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) -> -Sterpus(y)))"]}
{"id": "prontoqa_train_232", "nl": "Stella is not a vumpus.", "fol": "-vumpus(Stella)", "prediction": ["all x.(Stella(x) -> -Vumpus(x))", "Stella is not a Vumpus.", "(-Vumpus(Stella))", "Stella is not a vumpus.", "Stella -Vumpus(Stella))", "all x.(Stella(x) -> -Vumpus(x))", "Stella is not a Vumpus(Stella)", "-Vumpus(Stella)", "(-Vumpus(Stella))", "(Vumpus(Stella) & -Vumpus(Stella))", "Stella -Vumpus(Stella)", "all x.(Stella(x) -> -Vumpus(x))", "Stella is not a vumpus.", "(-Vumpus(Stella))", "Stella is not a Vumpus(Stella)", "-Vimpus(Stella)"]}
{"id": "prontoqa_train_233", "nl": "Each wumpus is a grimpus.", "fol": "all x. (wumpus(x) -> grimpus(x))", "prediction": ["all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "exists x y.(Wumpus(x) & Grimpus(y))", "(all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Gruppus(x))", "all x.((Wumpus(x) & Grimpus(x)) -> HasWumpus(x))", "exists x y.(Wumpus(x) & Grimpus(y))", "exists x y.(Wumpus(x) & Grimpus(y))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grumpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "exists x.(Wumpus(x) & Grimpus(x))", "all x.(Wumpus(x) -> Gruppus(x))", "all x.(Wumpus(x) -> Grumpus(x))"]}
{"id": "prontoqa_train_234", "nl": "Polly is a lorpus and Polly is a numpus and Polly is not a grimpus.", "fol": "(lorpus(Polly) & numpus(Polly) & -grimpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Numpus(x)) & (Polly(x) -> -Grimpus(x))))", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & Numpus(z) & -Grimpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Numpus(y)) & all z.(Polly(z) -> -Grimpus(z))))", "(all x y z.((Polly(x) & Lorpus(y)) -> (Lorpus(x) & Numpus(y))) & ((Polly(z) & Grimpus(z)) -> -Lorpus(z)))", "all x y z.((Polly(x) & Lorpus(x) & Numpus(y) & -Grimpus(z)) -> (Lorpus(x) & Numpus(y) & -Grimpus(z)))", "(all x.(Lorpus(x) -> Polly(x)) & (Numpus(x) -> Polly(x)) & -Grimpus(x)))", "all x y.((Polly(x) & Lorpus(x) & Numpus(y)) -> (Lorpus(x) & Numpus(y) & -Grimpus(y)))", "all x.(Polly(x) -> (Lorpus(x) & Numpus(x) & -Grimpus(x)))", "exists x.(Polly(x) & Lorpus(x) & Numpus(x) & -Grimpus(x))", "all x y z.((Polly(x) & Lorpus(x) & Numpus(y) & Grimpus(z)) -> (Lorpus(x) & Numpus(y) & -Grimpus(z)))", "(all x y.(Lorpus(x) & Lorpus(y)) & (Numpus(y) | -Grimpus(y)))", "(all x y z.(Lorpus(x) -> Polly(y)) & (Numpus(z) -> Polly(z))) & (Lorpus(y) -> Polly(z)) & -Grimpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Numpus(x)) & (Polly(x) -> -Grimpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & Numpus(x) & -Grimpus(x)))", "(all x.(Lorpus(x) -> Polly)) & (Numpus(x) -> Polly)) & -Grimpus(x)))", "all x y.((Polly(x) & Lorpus(x) & Numpus(y)) -> (Lorpus(x) & Nompus(y) & -Grimpus(x)))"]}
{"id": "prontoqa_train_235", "nl": "Rex is not a grimpus and Rex is a rompus and Rex is a lorpus.", "fol": "(-grimpus(Rex) & rompus(Rex) & lorpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Grimpus(x)) & (Rompus(x) & Lorpus(x)))", "all x y z.((Rex(x) & Grimpus(y) & Rompus(z)) -> (-Grimpus(x) & Rompus(y) & Lorpus(z)))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Rompus(y) & -Lorpus(y))))", "all x.(Rex(x) -> (-Grimpus(x) & Rompus(x) & Lorpus(x)))", "(all x y.(Rex(x) -> -Grimpus(x)) & (Rompus(y) & Lorpus(y)))", "(all x y z.((Rex(x) & Grimpus(y) & Rompus(z)) -> -Grimpus(x)) & ((Rex(x) & Lorpus(x)) -> Loppus(x)))", "(-Grimpus(rex) & Rompus(rex) & Lorpus(rex))", "all x y.((Rex(x) & Grimpus(y)) -> (-Grimpus(x) & Rompus(y) & Lorpus(x)))", "all x y z.((Rex(x) & Grimpus(y) & Rompus(z)) -> (-Grimpus(x) & Rompus(x) & Lorpus(x)))", "(all x.(Rex(x) -> -Grimpus(x)) & (Rompus(x) | Lorpus(x))))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Rompus(y) -> -Rompus(y)) & all z.(Lorpus(z) -> -Grimpus(z))))", "all x.(Rex(x) -> (-Grimpus(x) & Rompus(x) & Lorpus(x)))", "(all x y.(Rex(x) -> (-Grimpus(x) & Rompus(y))) & (Lorpus(x) -> (Rompus(y) & Lorpus(y))))", "all x y z.((Rex(x) & Grimpus(y) & Rompus(z)) -> (-Grimpus(x) & Rompus(y) & Lorpus(z)))", "all x y z.((Rex(x) & Grimpus(y) & Rompus(z)) -> (-Grimpus(x) & Rompus(x) & Lorpus(x)))", "(all x.(Rex(x) -> -Grimpus(x)) & (Rompus(x) & Lorpus(x)))"]}
{"id": "prontoqa_train_236", "nl": "Every vumpus is a lorpus.", "fol": "all x. (vumpus(x) -> lorpus(x))", "prediction": ["all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "(all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "exists x y.(Vumpus(x) & Lorpus(y))", "all x.((Vumpus(x) & Lorpus(x)) -> -Vumpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "exists x y.(Vumpus(x) & Lorpus(y))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "exists x.(Vumpus(x) & Lord(x))", "all x.(Vumpus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_237", "nl": "Polly is not a lorpus and Polly is a wumpus and Polly is a grimpus.", "fol": "(-lorpus(Polly) & wumpus(Polly) & grimpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Lorpus(x)) & (Polly(x) -> Wumpus(x)) & (Polly(x) -> Grimpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Wumpus(z)) -> (-Lorpus(x) & Wumpus(x) & Grimpus(x)))", "(all x.(Polly(x) -> -Lorpus(x)) & all y.(Polly(y) -> Wumpus(y))) & all z.(Polly(z) -> Grimpus(z)))", "(all x y.(Lorpus(x) -> -Lorpus(x)) & (Wumpus(y) -> Grimpus(y)))", "(all x y z.((Polly(x) & Lorpus(y)) -> -Lorpus(x)) & ((Polly(z) & Wumpus(z))) -> Grimpus(z)))", "all x y.((Polly(x) & -Lorpus(x) & Polly(y)) -> (Wumpus(y) & Grimpus(y)))", "all x.(Polly(x) -> (-Lorpus(x) & Wumpus(x) & Gruppus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Wumpus(z)) -> (-Lorpus(x) & Wumpus(x) & Gruppus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Wumpus(z)) -> (-Lorpus(x) & Wumpus(y) & Gruppus(z)))", "(all x.(Lorpus(x) -> -Lorpus(x)) & (Wumpus(x) -> Grimpus(x)))", "(all x y.(Lorpus(x) -> Polly)) & (Wumpus(y) -> Polly)))", "(all x.(Polly(x) -> -Lorpus(x)) & (Polly(x) -> Wumpus(x)) & (Polly(x) -> Grimpus(x)))", "all x y.((Polly(x) & -Lorpus(x) & Polly(y)) -> (Wumpus(y) & Gruppus(y)))", "exists x.(Polly(x) & (-Lorpus(x) | (Wumpus(x) | Grimpus(x)))))", "(all x.(Polly(x) -> -Lorpus(x)) & all y.(Polly(y) -> Wumpus(y)) & all z.(Polly(z) -> Grimpus(z))))", "all x y z.((Polly(x) & Lorpus(y) & Wumpus(z)) -> (-Lorpus(x) & Wumpus(x) & Grimpus(x)))"]}
{"id": "prontoqa_train_238", "nl": "Sally is a tumpus, Sally is not a rompus, and Sally is an impus.", "fol": "(tumpus(Sally) & -rompus(Sally) & impus(Sally))", "prediction": ["(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x)) & (Sally(x) -> Imperator(x)))", "all x y z.((Sally(x) & Tompus(y) & Rompus(z)) -> (Tumpus(x) & -Rompus(x) & Imperator(x)))", "(all x y z.((Sally(x) & Tumpus(y)) -> Tumpus(x)) & ((Sally(z) & -Rompus(z))) -> Imperator(z)))", "all x.(Sally(x) -> (Tumpus(x) & -Rompus(x) & Is(x)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x)) & (Sally(x) -> Imperator(x)))", "(all x.(Sally(x) -> Tumpus(x)) & (-Rompus(x) & -Impossible(x)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> -Rompus(y)) & all z.(Sally(z) -> Imperator(z))))", "all x y z.((Sally(x) & Tumpus(y) & Rompus(z)) -> (Tumpus(x) | -Rompus(x) | Imperator(x)))", "(all x.(Tumpus(x) -> Sally)) & (-rompus(x) -> Sally(x)) & (-rompus(x) -> Sally(x)))", "all x y z.((Sally(x) & Rumpus(y) & Imperator(z)) -> (Tumpus(x) & -Rompus(y) & Imperator(z)))", "exists x.(Sally(x) & Tumpus(x) & -Rompus(x) & Imperator(x))", "(all x y.(Tumpus(x) -> Sally(x)) & (Rompus(y) -> Sally(y))) & (Illegal(y) -> Sally(y)))", "all x.(Sally(x) -> (Tumpus(x) & -Rompus(x) & Imperator(x)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> -Rompus(y)) & all z.(Sally(z) -> Issue(z))))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x)) & (Sally(x) -> Impossible(x)))", "all x.(Sally(x) -> (Tumpus(x) & -Rompus(x) & Impossible(x)))"]}
{"id": "prontoqa_train_239", "nl": "Each yumpus is a vumpus.", "fol": "all x. (yumpus(x) -> vumpus(x))", "prediction": ["all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "exists x y.(Yumpus(x) & Vumpus(y))", "all x.(Yumpus(x) -> Vumpus(x))", "(all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "exists x y.(Yumpus(x) & Vumpus(y))", "all x.(Yumpus(x) -> Vumpus(x))", "exists x y.(Yumpus(x) & Vumpus(y))", "exists x.(Yumpus(x) & Yumpus(y) & Vumpus(x))", "all x.(yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vampus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))"]}
{"id": "prontoqa_train_240", "nl": "Stella is not a vumpus, Stella is a sterpus, and Stella is a shumpus.", "fol": "(-vumpus(Stella) & sterpus(Stella) & shumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Vumpus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> Humpus(x)))", "all x y z.((Stella(x) & Sterpus(y) & Humpus(z)) -> (-Vumpus(x) & -Sterpus(y) & -Shumpus(z)))", "(all x.(Stella(x) -> -Vumpus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> Humpus(x)))", "(all x y z.((Stella(x) & Vumpus(y)) -> -Vumpus(x)) & ((Stella(z) & Sterpus(z)) -> Humpus(z)))", "all x y z.((Stella(x) & Vumpus(y) & Sterpus(z)) -> (-Vumpus(x) & Sterpus(x) & Humpus(x)))", "(all x.(Stella(x) -> -Vumpus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Shumpus(z) -> -Vumpus(y)))", "all x.(Stella(x) -> (-Vumpus(x) & Sterpus(x) & Humpus(x)))", "(all x.(Stella(x) -> -Vumpus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Shumpus(z) -> -Vumpus(y)))", "exists x.(Stella(x) & -Vumpus(x) & Sterpus(x) & Humpus(x))", "all x y z.((Stella(x) & -Vumpus(x) & Sterpus(y) & Humpus(z)) -> (-Vumpus(x) & Sterpus(y) & Shumpus(z)))", "all x y z.((Stella(x) & Sterpus(y) & Humpus(z)) -> (-Vumpus(x) & Sterpus(y) & Shumpus(z)))", "(all x y z.((Stella(x) & Vumpus(y)) -> -Vumpus(x)) & ((Stella(z) & Sterpus(z)) -> Shumpus(z)))", "all x y z.(Stella(x) -> (-Vumpus(x) & Sterpus(y) & Humpus(z)))", "all x y z.(Stella(x) & (Vumpus(y) | Sterpus(y) | Humpus(z))) -> (-Vumpus(x) | Sterpus(y) | Shumpus(z)))", "(all x.(Stella(x) -> -Vumpus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> Humpus(x)))", "(all x.(Stella(x) -> -Vimpus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> Humpus(x)))"]}
{"id": "prontoqa_train_241", "nl": "Stella is not a yumpus.", "fol": "-yumpus(Stella)", "prediction": ["all x.(Stella(x) -> -Yumpus(x))", "(-Yumpus(Stella))", "Stella is not yumpus.", "Stella is notYumpus(Stella)", "all x.(Stella(x) -> -Yumpus(x))", "(-Yumpus(Stella))", "Stella is not yumpus.", "Stella is notYumpus(Stella)", "Stella is not a yumpus.", "all x.(Stella(x) -> -Yumpus(x))", "(-Yumpus(Stella))", "Stella -Yumpus(Stella)", "-Yumpus(Stella)", "Stella -Yumpus(Stella)", "(-Yumpus(Stella))", "-yumpus."]}
{"id": "prontoqa_train_242", "nl": "Lempuses are tumpuses.", "fol": "all x. (lempus(x) -> tumpus(x))", "prediction": ["all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumulus(x))", "all x y.((Lempuse(x) & Tumpus(y)) -> Tumpus(x))", "(Tumpuse(lempuse) & -Tumpus(lempuse))", "all x.(Lempuse(x) -> Tumpus(x))", "(Tumpuse(lempuse) & Tumpus(lempuse,lempus))", "all x.(Lemme(x) -> Tumpus(x))", "all x y.((Lempuse(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumulus(x))", "all x.(Lumpus(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumpuse(x))", "All x.(Lempus(x) -> Tumpus(x))", "all x.(Lemmes(x) -> Tumulus(x))"]}
{"id": "prontoqa_train_243", "nl": "Alex is a lorpus and Alex is not a tumpus and Alex is an impus.", "fol": "(lorpus(Alex) & -tumpus(Alex) & impus(Alex))", "prediction": ["(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Imperator(x)))", "all x y z.((Alex(x) & Lorpus(x) & Tumpus(y) & Imperator(z)) -> (Lorpus(x) & -Tumpus(y) & Imperator(z)))", "all x.(Alex(x) -> (Lorpus(x) & -Tumpus(x) & Imperator(x)))", "all x y.((Alex(x) & Lorpus(x) & -Tumpus(y)) -> Imperator(x))", "(all x y.(Lorpus(x) -> Alex(x)) & (Tumpus(y) -> -Tumpus(y)) & (Impossible(y) -> Alex(y)))", "all x y z.((Alex(x) & Lorpus(y) & Tompus(z)) -> (Lorpus(x) & -Tumpus(x) & Imperator(x)))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Imperator(x)))", "(all x.(Alex(x) -> Llorpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Imperator(x)))", "(all x.(Alexa(x) -> Lorpus(x)) & (Alexa(x) -> -Tumpus(x)) & (Alexa(x) -> Imperator(x)))", "all x.(Alex(x) -> (Lorpus(x) & -Tumpus(x) & Imperator(x)))", "(all x y.(Lorpus(x) -> -Tumpus(y)) & (Illegal(x) -> -Lorpus(x)))", "all x.(Alex(x) -> (Lorph(x) & -Tumpus(x) & Issue(x)))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Imperator(x)))", "all x y.((Alex(x) & Lorpus(x)) -> (-Tumpus(x) & IsPlate(y)))", "exists x.(Lorpus(x) & -Tumpus(x) & Imperator(x))", "all x.(Alex(x) -> (Lorph(x) & -Tumpus(x) & Ilira(x)))"]}
{"id": "prontoqa_train_244", "nl": "Alex is not a lempus.", "fol": "-lempus(Alex)", "prediction": ["all x.(Alex(x) -> -Lempus(x))", "Alex is not a lempus.", "all x.(Alex(x) -> -Lempus(x))", "(-Lempus(Alex))", "Alex is not a lempus.", "-Lempus(Alex)", "Alex is not lempus.", "all x.(Alex(x) -> -Lempus(x))", "Alex is not a lempus.", "(-lempus(Alex))", "Alex is not lempus.", "all x.(Alex(x) -> -Lempus(x))", "-Lempus(Alex)", "all x.(Alex(x) -> -Lempus(x))", "All x.(Alex(x) -> -Limpus(x))", "all x.(Alex(x) -> -Lempus(x))"]}
{"id": "prontoqa_train_245", "nl": "Every jompus is a grimpus.", "fol": "all x. (jompus(x) -> grimpus(x))", "prediction": ["all x.(Jompus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "(all x.(Jompus(x) -> Grimpus(x))", "all x y.((Jompus(x) & Grimpus(y)) -> Is(x,y))", "all x.(Jimpus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Gruppus(x))", "all x y.((Jompus(x) & Grimpus(y)) -> Has(x,y))", "all x.(Jimpus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jimpus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Gruppus(x))", "all x.(Jumpus(x) -> Grupus(x))", "exists x.(Jimpus(x) & Grimpus(x))", "exists x.(Jompus(x) & Grimpus(x))", "exists x.(Mjompus(x) & Grimpus(x))"]}
{"id": "prontoqa_train_246", "nl": "Wren is a vumpus, Wren is not a grimpus, and Wren is a yumpus.", "fol": "(vumpus(Wren) & -grimpus(Wren) & yumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Vumpus(x)) & (-Grimpus(x) & (Yumpus(x) | -Vumpus(x))))", "all x y z.((Wren(x) & Vumpus(y) & Grimpus(z)) -> (Vumpus(x) & -Grimpus(y) & Yumpus(z)))", "(all x.(Wren(x) -> Vumpus(x)) & (Wren(x) -> -Grimpus(x)) & (Wren(x) -> Yumpus(x)))", "(all x y z.((Wren(x) & Vumpus(y)) -> (Vumpus(z) | -Grimpus(z)) | (Yumpus(z) & Wren(x))))", "all x y z.((Wren(x) & Vumpus(x) & Wren(y) & Grimpus(z)) -> (-Vumpus(x) & -Grimpus(y) & -Yumpus(z)))", "(all x y z.((Wren(x) & Vumpus(y) & -Grimpus(z)) -> (Vumpus(x) & -Grimpus(y) & -Yumpus(z)))", "(all x.(Wren(x) -> Vumpus(x)) & (-Wren(x) -> Grimpus(x)) & (-Wren(x) -> Yumpus(x)))", "all x.(Wren(x) -> (Vumpus(x) & -Grimpus(x) & Yumpus(x)))", "(all x.(Wren(x) -> Vumpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> Yumpus(z)))", "(all x y z.((Wren(x) & Vumpus(x)) -> (Vumpus(x) & -Grimpus(y)) & ((Wren(z) & Yumpus(z)) -> (Yumpus(z))))", "all x y z.((Wren(x) & Vumpus(y) & Grimpus(z)) -> (Vumpus(x) & -Grimpus(y) & Yumpus(z)))", "all x y z.((Wren(x) & Vumpus(x) & Wren(y) & Grimpus(z)) -> (-Vumpus(x) & -Smoothpus(y) & -Yumpus(z)))", "all x y z.((Wren(x) & Vampire(y) & Grimpus(z)) -> (Vampire(x) & -Grimpus(y) & Yumpus(z)))", "all x y z.((Wren(x) & Vampus(y) & Gruppus(z)) -> (Vumpus(x) & -Grimpus(y) & Yumpus(z)))", "(all x.(Wren(x) -> Vumpus(x)) & (Wren(x) -> -Grimpus(x)) & (Wren(x) -> Yumpus(x)))", "(all x.(Wren(x) -> Vumpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> Yumpus(z)))"]}
{"id": "prontoqa_train_247", "nl": "Wren is not a jompus.", "fol": "-jompus(Wren)", "prediction": ["all x.(Wren(x) -> -Jompus(x))", "(-Jompus(Wren))", "Wren is not a Jompus.", "all x.(Wren(x) -> -Jompus(x))", "(-Jompus(Wren))", "(-jompus(Wren) & -Jompus(Wren))", "all x.(Wren(x) -> -Jompus(x))", "-Jompus(Wren)", "(Jompus(Wren) & -Jompus(Wren))", "-Jimpus(Wren)", "(-Jompus(Wren,x))", "all x.(Wren(x) -> -Jompus(x))", "all x.(Wren(x) -> -Jimpus(x))", "-jompus(Wren)", "-Jompus(Wren)", "all x.(Wren(x) -> -Jompus(x))"]}
{"id": "prontoqa_train_248", "nl": "Yumpuses are dumpuses.", "fol": "all x. (yumpus(x) -> dumpus(x))", "prediction": ["all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x y.((Yumpus(x) & Dumpuse(y)) -> (Dumpus(x) & Dumpuse(y)))", "(Dumpuses(y) & Dumpuse(z))", "(Dumpuse(y) & Dumpuse(z))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x y.((Yumpus(x) & Dumpuse(y)) -> (Dumpus(x) & Dumpuse(y)))", "(Dumpuse(y) & Yumpus(z))", "all x.(Umbuse(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x y.((Yumpus(x) & Dumpus(y)) -> Dumpuse(x))", "all x.(Umbuse(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpus(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "All x.(Yumpus(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_249", "nl": "Sam is not a dumpus and Sam is a rompus and Sam is a zumpus.", "fol": "(-dumpus(Sam) & rompus(Sam) & zumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Dumpus(x)) & (Sam(x) -> Rompus(x)) & (Sam(x) -> Zumpus(x)))", "all x y z.((Sam(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & Rompus(y) & Zumpus(z)))", "(all x.(Sam(x) -> -Dumpus(x)) & all y.(Rompus(y) & All z.(Zumpus(z))) -> -Dumpus(x)))", "(all x y.((Sam(x) & Dumpus(x)) -> -Dumpus(x)) & ((Sam(y) & Rompus(y)) -> Zumpus(y)))", "all x.(Sam(x) -> (-Dumpus(x) & Rompus(x) & Zumpus(x)))", "(all x y z.((Sam(x) & Dumpus(y)) -> -Dumpus(x)) & ((Sam(z) & Rompus(z))) -> Zumpus(z)))", "all x y.((Sam(x) & Dumpus(y)) -> (-Dumpus(x) & Rompus(y) & Zumpus(y)))", "all x y z.((Sam(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & Rompus(x) & Zumpus(x)))", "(-Dumpus(sam) & Rompus(sam) & Zumpus(sam))", "(all x.(Sam(x) -> -Dumpus(x)) & (Rompus(x) | Zumpus(x)))", "(all x.(Sam(x) -> -Dumpus(x)) & all y.(Sam(y) -> Rompus(y)) & all z.(Sam(z) -> Zumpus(z))))", "exists x.(Sam(x) & -Dumpus(x) & Rompus(x) & Zumpus(x))", "all x y z.((Sam(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & Rompus(y) & Zumpus(z)))", "all x y.((Sam(x) & Dumpus(y)) -> (-Dumpus(x) & Rompus(y) & Zumpus(y)))", "(all x.(Sam(x) -> -Dumps(x)) & (Rompus(x) | Zumpus(x)))", "all x y z.((Sam(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & Rompus(x) & Zumpus(x)))"]}
{"id": "prontoqa_train_250", "nl": "Sam is not a yumpus.", "fol": "-yumpus(Sam)", "prediction": ["all x.(Sam(x) -> -Yumpus(x))", "(-Yumpus(Sam))", "all x.(Sam(x) -> -Yumpus(x))", "(-Yumpus(Sam))", "Sam is notYumpus(Sam).", "all x.(Yumpus(x) -> -Yumpus(x))", "Sam is notyumpus.", "all x.(Sam(x) -> -Yumpus(x))", "(-Yumpus(Sam))", "(yumpus)", "-Yumpus(Sam)", "all x.(Sam(x) -> -Yumpus(x))", "(-Yumpus(Sam)).", "-yumpus.", "all x.(Sam(x) -> -Yumpus(x))", "-yumpus(sam)"]}
{"id": "prontoqa_train_251", "nl": "Grimpuses are tumpuses.", "fol": "all x. (grimpus(x) -> tumpus(x))", "prediction": ["all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x y.((Grimpus(x) & Tumpus(y)) -> Tumpus(x))", "(all x.(Grimpuse(x) -> Tumpus(x)))", "all x.(Gruppus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumulus(x))", "(all x.(Grimpus(x) -> Tumulus(x)))", "(Tumpuse(Grimpus) & Tumpus(Grimpus))", "all x y.((Grimpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Gruppus(x) -> Tumpus(x))", "(Tumpuse(Grimpus) & Tumpus(Grimpus))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumulus(x))", "all x.(Gruppus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_252", "nl": "Max is not a tumpus, Max is a brimpus, and Max is a rompus.", "fol": "(-tumpus(Max) & brimpus(Max) & rompus(Max))", "prediction": ["(all x.(Max(x) -> -Tumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Rompus(x)))", "all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> (-Tumpus(x) & -Brimpus(y) & -Rompus(z)))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Rompus(z))))", "(all x y z.((Max(x) & Tumpus(y)) -> -Tumpus(x)) & ((Max(z) & Brimpus(z))) -> Rompus(z)))", "all x.(Max(x) -> (-Tumpus(x) & Brimpus(x) & Rompus(x)))", "all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> (-Tumpus(x) & Brimpus(x) & Rompus(x)))", "(all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> -Tumpus(x)) & ((Max(x) & Brimpus(x)) -> Rompus(x)))", "(-Tumpus(Max) & Brimpus(Max) & Rompus(Max))", "all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> (-Tumpus(x) | (-Tumpus(x) & Brimpus(y) & Rompus(z))))", "(all x.(Max(x) -> -Tumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Rompus(x)))", "all x y z.((Max(x) & Humpus(y) & Brimpus(z)) -> (-Tumpus(x) & -Brimpus(y) & -Rompus(z)))", "all x.(Max(x) -> (-Tumpus(x) & Brimpus(x) & Rompus(x)))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Rompus(z))))", "(all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> -Tumpus(x)) & ((Max(x) & Brimpus(x) & Rompus(x)) -> Rompus(x)))", "all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> (-Tumpus(x) | (Brimpus(x) & Rompus(x))))", "(all x.(Max(x) -> -Tumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Rompus(x)))"]}
{"id": "prontoqa_train_253", "nl": "Max is not a grimpus.", "fol": "-grimpus(Max)", "prediction": ["-Grimpus(Max)", "all x.(Max(x) -> -Grimpus(x))", "Max is notGrimpus(Max)", "(-Grimpus(Max))", "all x.(Max(x) -> -Grimpus(x))", "(Matthew(Max) & -Grimpus(Max))", "Max is notGrimpus.", "Max is not a Grimpus.", "-Grimpus(Max)", "-Gruppus(Max)", "all x.(Max(x) -> -Grimpus(x))", "(-Grimpus(Max))", "Max is notGrimpus.", "-Gruppus(Max)", "(-Grimpus(Max))", "-Grimpus(Max)"]}
{"id": "prontoqa_train_254", "nl": "Fae is a grimpus, Fae is not a rompus, and Fae is a jompus.", "fol": "(grimpus(Fae) & -rompus(Fae) & jompus(Fae))", "prediction": ["(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))", "all x y z.((Fae(x) & Grimpus(x) & Fae(y) & Rompus(z)) -> (-Rompus(y) & Jompus(z)))", "(all x y z.(Fae(x) -> Grimpus(x)) & (Fae(y) -> -Rompus(y)) & (Fae(z) -> Jompus(z)))", "(all x y z.((Fae(x) & Grimpus(y)) -> (Grimpus(x) & -Rompus(y)) & ((Fae(z) & Jompus(z)) -> (Jompus(z)))))", "all x.(Fae(x) -> (Grimpus(x) | -Rompus(x) | Jompus(x)))", "all x y z.((Fae(x) & Grimpus(y) & -Rompus(z)) -> (Fae(x) & Jompus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))", "(all x y z.((Fae(x) & Grimpus(y)) -> Grimpus(x)) & ((Fae(z) & -Rompus(z))) -> Jompus(z)))", "all x y z.(Fae(x) & Grimpus(x) & Fae(y) & -Rompus(y) & Jompus(z))", "exists x.(Fae(x) & Grimpus(x) & -Rompus(x) & Jompus(x))", "all x y z.(Fae(x) -> (Grimpus(x) & -Rompus(y) & Jompus(z)))", "all x y z.((Fae(x) & Grimpus(y) & -Rompus(z)) -> (Fae(x) & Jompus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))", "(all x.(Fae(x) -> Grumpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> -Rompus(y)) & all z.(Fae(z) -> Jompus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))"]}
{"id": "prontoqa_train_255", "nl": "Fae is not a gorpus.", "fol": "-gorpus(Fae)", "prediction": ["all x.(Fae(x) -> -Gorpus(x))", "(-Gorpus(Fae))", "all x.(Fae(x) -> -Gorpus(x))", "-Gorpus(Fae)", "(Gorpus(Fae) & -Gorpus(Fae))", "(-Gorpus(Fae))", "all x.(Fae(x) -> -Gorpus(x))", "-Gorpus(Fae)", "(Gorpus(fae) & -Gorpus(fae))", "all x.(Fae(x) -> -Gorpus(x))", "(-Gorpus(Fae))", "-Gorpus(fae)", "all x.(Fae(x) -> -Gorpus(x))", "-Gorpus(fae,female)", "(-Gorpus(Fae))", "-Gorpus(Fae)"]}
{"id": "prontoqa_train_256", "nl": "Gorpuses are tumpuses.", "fol": "all x. (gorpus(x) -> tumpus(x))", "prediction": ["all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumpus(x))", "(all x.(Gorpuse(x) -> Tumpus(x)))", "all x.(Gorpus(x) -> Tumpus(x))", "all x y.((Gorpuse(x) & Tumpus(y)) -> Tumpus(x))", "(Tumpuse(gorpus) & Tumpus(gorpus))", "all x.(Gorpus(x) -> Tumulus(x))", "all x y.((Gorpuse(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumpus(x))", "(Tumpuse(gorpus) & Tumpus(gorpus))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumulus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_257", "nl": "Fae is a vumpus and Fae is not a tumpus and Fae is a sterpus.", "fol": "(vumpus(Fae) & -tumpus(Fae) & sterpus(Fae))", "prediction": ["(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Sterpus(x)))", "all x y z.((Fae(x) & Vumpus(x) & Fae(y) & Sterpus(z)) -> (-Tumpus(y) & Sterpus(z)))", "(all x y.((Fae(x) & Vumpus(x)) -> (Vumpus(x) & -Tumpus(y))) & ((Fae(x) & Sterpus(x)) -> Sterpus(x)))", "all x.(Fae(x) -> (Vumpus(x) & -Tumpus(x) & Sterpus(x)))", "(all x y z.((Fae(x) & Vumpus(x) & -Tumpus(y)) -> (Vumpus(x) & -Tumpus(y)) & ((Fae(z) & Sterpus(z)) -> Sterpus(z)))", "all x y.((Fae(x) & Fae(y)) -> (Vumpus(x) & -Tumpus(y) & Sterpus(y)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Sterpus(x)))", "(all x y.(Fae(x) -> Vumpus(x)) & (Fae(y) -> -Tumpus(y)) & (Fae(y) -> Sterpus(y)))", "all x y z.((Fae(x) & Vumpus(x) & Fae(y) & Tumpus(z)) -> (-Tumpus(y) & Sterepus(y)))", "all x y z.((Fae(x) & Fae(y) & Tumpus(z)) -> (Vumpus(x) & -Tumpus(y) & Sterpus(z)))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> -Tumpus(y)) & all z.(Fae(z) -> Sterpus(z))))", "all x.(Fae(x) -> (Vimpus(x) & -Tumpus(x) & Sterpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Sterpus(x)))", "exists x.(Fae(x) & Vumpus(x) & -Tumpus(x) & Sterpus(x))", "all x y.((Fae(x) & Fae(y)) -> (Vumpus(x) & -Tumpus(y) & Sterpus(y)))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> -Tumpus(y)) & all z.(Fae(z) -> Sterpus(z))))"]}
{"id": "prontoqa_train_258", "nl": "Every yumpus is a shumpus.", "fol": "all x. (yumpus(x) -> shumpus(x))", "prediction": ["all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x y.((Yumpus(x) & Humpus(y)) -> Shumpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x y.((Yumpus(x) & Shumpus(y)) -> Has(x,y))", "(all x.(Yumpus(x) -> Humpus(x)))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "exists x.(Yumpus(x) & Humpus(x) & HasShumpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "exists x.(Yumpus(x) & Shumpus(x))", "exists x.(yumpus(x) & Shumpus(y))"]}
{"id": "prontoqa_train_259", "nl": "Wren is not a shumpus and Wren is a lorpus and Wren is a grimpus.", "fol": "(-shumpus(Wren) & lorpus(Wren) & grimpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Shumpus(x)) & all y.(Wren(y) -> Lorpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "all x y z.((Wren(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(x) & -Smokey(x)))", "(all x.(Wren(x) -> -Shumpus(x)) & ((Wren(x) & Lorpus(x))) & ((Wren(x) & Grimpus(x))))", "(all x y.(Wren(x) -> -Shumpus(x)) & ((Wren(y) & Lorpus(y))) & ((Wren(y) & Grimpus(y))))", "(all x y z.((Wren(x) & Humpus(y) & Lorpus(z)) -> -Shumpus(x)) & ((Wren(x) & Lorpus(x)) -> Grimpus(x)))", "all x y.((Wren(x) & Shumpus(y) & Lorpus(y)) -> (-Shumpus(x) & -Lorpus(x) & -Smokey(x)))", "all x y z.((Wren(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) & Lorpus(x) & Grimpus(x)))", "all x.(Wren(x) -> (-Shumpus(x) & (Lorpus(x) | Grimpus(x))))", "(-Shumpus(Wren) & Lorpus(Wren) & Grimpus(Wren))", "exists x.(Wren(x) & -Shumpus(x) & exists y.(Lorpus(y) & exists z.(Grimpus(z) & -Shumpus(z) & -Shumpus(z))))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.(Wren(y) -> Lorpus(y))) & all z.(Wren(z) -> Grimpus(z)))", "all x y z.((Wren(x) & Shumpus(y) & Lorpus(z)) -> (-Shumpus(x) & Lorpus(x) & Grimpus(x)))", "all x y.((Wren(x) & Shumpus(y) & Lorpus(x) & Grimpus(x)) -> -Shumpus(x) & Lorpus(y))", "(all x y.(Shumpus(x) -> -Shumpus(x)) & (Lorpus(y) -> Grimpus(y)))", "(all x.(Wren(x) -> -Shumpus(x)) & (Lorpus(x) | Grimpus(x))))", "all x y z.((Wren(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) & Lorpus(x) & Grimpus(x)))"]}
{"id": "prontoqa_train_260", "nl": "Each dumpus is an impus.", "fol": "all x. (dumpus(x) -> impus(x))", "prediction": ["all x.(Dumpus(x) -> IsImpossible(x))", "(exists x.(Dumpus(x) & IsImpossible(x)))", "-exists x.(Dumpus(x) & IsImpossible(x))", "all x.(Dumpus(x) -> IsImpossible(x))", "all x y.((Dumpus(x) & Dumpus(y)) -> Is(x,y))", "all x.(Dumpus(x) -> Imperempt(x))", "all x.(Dumpus(x) -> Is(x))", "all x.(Dumpus(x) -> Impossible(x))", "all x.(Dumpus(x) -> Impeccable(x))", "exists x.(Dumps(x) & Is(x))", "all x.(Dumpus(x) -> IsImprovement(x))", "exists x.(Dumpus(x) & Impossible(x))", "all x.(Dumpus(x) -> Impermissible(x))", "exists x.(Dumpus(x) & Impossible(x))", "all x.(Dumpus(x) -> Isolated(x))", "exists x.(Dupus(x) & Implicator(x))"]}
{"id": "prontoqa_train_261", "nl": "Rex is not an impus and Rex is a sterpus and Rex is a yumpus.", "fol": "(-impus(Rex) & sterpus(Rex) & yumpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Impossible(x)) & ((Rex(x) & Sterpus(x)) -> Yumpus(x)))", "(all x y z.((Rex(x) & IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIIsIsIsIsIisIisIisiasIasIasIasIasIasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasias", "all x y z.((Rex(x) & Sterpus(y) & Yumpus(z)) -> (-Impossible(x) & Sterpus(y) & Yumpus(z)))", "(all x.(Rex(x) -> -Impossible(x)) & all y.(Rex(y) -> Sterpus(y))) & all z.(Rex(z) -> Yumpus(z)))", "(all x y.(Rex(x) -> -Impossible(x)) & ((Rex(y) & Sterpus(y)) | (Yumpus(y)))))", "all x.(Rex(x) -> (-Impossible(x) & Sterpus(x) & Yumpus(x)))", "all x y z.((Rex(x) & -Impossible(x) & Sterpus(y) & Yumpus(z)) -> (-Impossible(x) & Sterpus(y) & Yumpus(z)))", "(-Impossible(Rex) & Sterpus(Rex) & Yumpus(Rex))", "all x y.((Rex(x) & -Impossible(x) & Sterpus(y)) -> (Yumpus(x) & -Impossible(y)))", "(all x.(Rex(x) -> -Impossible(x)) & ((Rex(x) & Sterpus(x)) | (Rex(x) & Yumpus(x)))))", "all x y z.((Rex(x) & Impossible(x) & Sterpus(y) & Yumpus(z)) -> (-Impossible(x) & Sterpus(y) & Yumpus(z)))", "all x y.((Rex(x) & Rex(y)) -> (-Impossible(x) & Sterpus(y) & Yumpus(y)))", "all x.(Rex(x) -> (-Impossible(x) & Sterpus(x) & Yumpus(x)))", "(-Impossible(rex) & Sterpus(rex) & Yumpus(rex))", "(-Issue(Rex) | (Sterepus(Rex) & Yumpus(Rex))))", "(all x.(Rex(x) -> -Issue(x)) & ((Rex(x) & Sterpus(x)) | (Rex(x) & Yumpus(x)))))"]}
{"id": "prontoqa_train_262", "nl": "Zumpuses are shumpuses.", "fol": "all x. (zumpus(x) -> shumpus(x))", "prediction": ["all x.(Zumpus(x) -> Shumpus(x))", "all x.(Zumpus(x) -> Shumpus(x))", "(Shumpuse(z) & Shumpus(z))", "all x y.((Zumpus(x) & Shumpus(y)) -> Shumpus(x))", "(Shumpuse(z) & HasShumpus(z))", "all x.(Zumpus(x) -> Shumpus(x))", "all x y.((Zumpus(x) & Shumpus(y)) -> Shumpus(x))", "(Shumpuse(z) & -Shumpus(z))", "all x.(Zumpuse(x) -> Shumpus(x))", "all x.(Zumpus(x) -> Shumpus(x))", "all x.(Zombia(x) -> Shumpus(x))", "all x.(Zumpus(x) -> Shumpus(x))", "all x.(Zumpus(x) -> Shumpus(x))", "all x.(Zimpuse(x) -> Shumpus(x))", "All x.(Shumpus(x) -> Zumpuse(x))", "all x.(Zumpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_263", "nl": "Sally is a brimpus and Sally is not a shumpus and Sally is a tumpus.", "fol": "(brimpus(Sally) & -shumpus(Sally) & tumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Shumpus(x)) & (Sally(x) -> Tumpus(x)))", "all x y.((Sally(x) & Brimpus(x) & -Shumpus(y)) -> Tumpus(x))", "all x.(Sally(x) -> (Brimpus(x) & -Shumpus(x) & Tumpus(x)))", "(all x y.(Brimpus(x) -> Brimpus(x)) & (Shumpus(y) -> -Shumpus(y)) & (Tumpus(y) -> Tumpus(y)))", "all x y z.((Sally(x) & Brimpus(x) & Sally(y) & Humpus(z)) -> (-Shumpus(y) & Tumpus(z)))", "(all x.(Brimpus(x) -> Brimpus(x)) & (-Shumpus(x) & -Tumpus(x)))", "(all x.(Sally(x) -> Brimpus(x)) & (-Shumpus(x) & Tumpus(x))))", "all x y z.((Sally(x) & Brimpus(x) & Sally(y) & Humpus(z) & Tumpus(z)) -> (Brimpus(x) & -Shumpus(y) & Tumpus(z)))", "all x y.((Sally(x) & Brimpus(x)) -> (-Shumpus(x) & Tumpus(y)))", "all x.(Sally(x) -> (Brimpus(x) & -Shumpus(x) & Tumpus(x)))", "(all x.(Sally(x) -> Brimpus(x)) & (-Shumpus(x) & Tumpus(x)))", "(all x.(Brimpus(x) -> Brimpus(x)) & (-Shumpus(x) & Tumpus(x)))", "(all x y.(Brimpus(x) -> Brimpus(x)) & (Shumpus(y) | Tumpus(y)))", "exists x.(Brimpus(x) & -Shumpus(x) & Tumpus(x))", "all x.(Sally(x) -> (Brumpus(x) & -Shumpus(x) & Tumpus(x)))", "(all x.(Sally(x) -> Brimpus(x)) & (-Shumpus(x) & Tumpus(x)))"]}
{"id": "prontoqa_train_264", "nl": "Sterpuses are vumpuses.", "fol": "all x. (sterpus(x) -> vumpus(x))", "prediction": ["all x.(Sterpus(x) -> Vampuse(x))", "all x.(Sterpus(x) -> Vampus(x))", "all x y.((Sterpuse(x) & Vampus(y)) -> Vampus(x))", "(Vumpus(sterpuses)", "all x.(Sterpus(x) -> Vampuse(x))", "all x.(Sterpus(x) -> Vampuse(x))", "all x y.((Sterpuse(x) & Vampus(y)) -> Vampus(x))", "all x.(Stupid(x) -> Vampuse(x))", "all x.(Sterpus(x) -> Vulpuse(x))", "all x.(Sterpuse(x) -> Vampuse(x))", "(all x.(Sterpus(x) -> Vampus(x)))", "(Vampus(sterpuses)", "all x.(Sterpuse(x) -> Vampuse(x))", "all x.(Stumpus(x) -> Vulpus(x))", "All x.(Strerpuse(x) -> Vulpus(x))", "all x.(Stumpus(x) -> Vampus(x))"]}
{"id": "prontoqa_train_265", "nl": "Alex is a brimpus, Alex is not a vumpus, and Alex is a zumpus.", "fol": "(brimpus(Alex) & -vumpus(Alex) & zumpus(Alex))", "prediction": ["(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Vumpus(x)) & (Alex(x) -> Zumpus(x)))", "all x y z.((Alex(x) & Brimpus(x) & -Vumpus(y) & Zumpus(z)) -> (Brimpus(x) & Zumpus(x)))", "all x y z.((Alex(x) & Brimpus(x) & Alex(y) & Vumpus(z)) -> (-Vumpus(y) & Zumpus(z)))", "(all x y z.((Alex(x) & Brimpus(x)) -> (Brimpus(x) & -Vumpus(y))) & ((Alex(z) & Zumpus(z)) -> Zumpus(z)))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Vimpus(x)) & (Alex(x) -> Zumpus(x)))", "all x.(Alex(x) -> (Brimpus(x) & -Vumpus(x) & Zumpus(x)))", "(all x.(Alexa(x) -> Brimpus(x)) & (Alexa(x) -> -Vumpus(x)) & (Alexa(x) -> Zumpus(x)))", "all x y z.((Alex(x) & Brimpus(x) & -Vumpus(y) & Zumpus(z)) -> (Brimpus(x) & -Vumpus(y) & Zumpus(z)))", "(all x.(Alex(x) -> Brimpus(x)) & all y.(Alex(y) -> -Vumpus(y))) & all z.(Alex(z) -> Zumpus(z)))", "all x y.((Alex(x) & Brimpus(x)) -> (-Vumpus(x) & Zumpus(y)))", "all x y z.((Alex(x) & Brimpus(y) & Vumpus(z)) -> (Brimpus(x) & -Vumpus(y) & Zumpus(z)))", "(all x y z.((Alex(x) & Brimpus(x)) -> (Brimpus(y) & -Vumpus(z))) & ((Alex(x) & Zumpus(x)) -> Zumpus(x)))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Vumpus(x)) & (Alex(x) -> Zumpus(x)))", "all x.(Alex(x) -> (Brimpus(x) & -Vumpus(x) & Zumpus(x)))", "all x.(Alex(x) -> (Brimpus(x) & -Vimpus(x) & Zumpus(x)))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Vimpus(x)) & (Alex(x) -> Zumpus(x)))"]}
{"id": "prontoqa_train_266", "nl": "Alex is not a sterpus.", "fol": "-sterpus(Alex)", "prediction": ["all x.(Alex(x) -> -Sterpus(x))", "Alex is not sterpus.", "(-Sterepus(Alex))", "all x.(Alex(x) -> -Sterepus(x))", "Alex is not sterpus.", "-Sterpus(Alex)", "(-Stereospheric(Alex))", "all x.(Alex(x) -> -Sterpus(x))", "Alex is not sterpus.", "Alex is not a Sterpus.", "-Sterpus(Alex)", "Alex is notsterpus.", "(-Stereosis(Alex))", "all x.(Alex(x) -> -Sterepus(x))", "All x.(Alex(x) -> -Sterpus(x))", "all x.(Alex(x) -> -Sterepus(x))"]}
{"id": "prontoqa_train_267", "nl": "Wren is a lempus and Wren is a yumpus and Wren is not a shumpus.", "fol": "(lempus(Wren) & yumpus(Wren) & -shumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Lempus(x)) & (Wren(x) -> Yumpus(x)) & (Wren(x) -> -Shumpus(x)))", "all x y z.((Wren(x) & Lempus(x) & Yumpus(y) & -Shumpus(z)) -> (Lempus(x) & Yumpus(y) & -Shumpus(z)))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> -Shumpus(z))))", "(all x y z.((Wren(x) & Lempus(x)) -> (Lempus(x) & Yampus(y))) & ((Wren(z) & -Shumpus(z))) -> (Yumpus(z) & -Lempus(z))))", "all x y.((Wren(x) & Lempus(x) & Yumpus(y)) -> (-Shumpus(x)))", "(all x y.(Wren(x) -> Lempus(x)) & (Wren(y) -> Yumpus(y)) & (Wren(z) -> -Shumpus(z)))", "all x y z.((Wren(x) & Lempus(x) & Yumpus(y) & -Shumpus(z)) -> (Lempus(x) & Yumpus(y) & -Shumpus(z)))", "all x.(Wren(x) -> (Lempus(x) & Yumpus(x) & -Shumpus(x)))", "(all x.(Wren(x) -> Lempus(x)) & (Yumpus(x) & -Shumpus(x)))", "all x y.((Wren(x) & Lempus(x) & Yumpus(y)) -> (-Shumpus(x) & -Lempus(y) & -Yumpus(y)))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> -Shumpus(z))))", "(all x y z.(Wren(x) -> (Lempus(x) & Yompus(y))) & (Wren(z) -> -Shumpus(z)))", "all x y z.((Wren(x) & Lempus(x) & Yampus(y) & -Shumpus(z)) -> (Lempus(x) & Yampus(y) & -Yumpus(z)))", "(all x.(Wren(x) -> Lempus(x)) & (Wren(x) -> Yumpus(x)) & (Wren(x) -> -Shumpus(x)))", "all x.(Wren(x) -> (Lempus(x) & Yampus(x) & -Shumpus(x)))", "all x y z.((Wren(x) & Lempus(x) & Yompus(y) & -Shumpus(z)) -> (Lempus(x) & Yampus(y) & -Shumpus(z)))"]}
{"id": "prontoqa_train_268", "nl": "Each gorpus is a zumpus.", "fol": "all x. (gorpus(x) -> zumpus(x))", "prediction": ["all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x y.((Gorpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Gorpus(x) -> Zumpus(x))", "all x y.((Gorpus(x) & Zumpus(y)) -> HasGorpus(x,y))", "all x.(Gorpus(x) -> Zumpus(x))", "all x y.((Gorpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "exists x.(Gorpus(x) & Tosspus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "exists x.(Gorpus(x) & Zurpus(x))", "exists x.(Gorpus(x) & Zurpus(x))", "exists x.(Gorpus(x) & Zurpus(x))"]}
{"id": "prontoqa_train_269", "nl": "Alex is a dumpus, Alex is a lempus, and Alex is not a zumpus.", "fol": "(dumpus(Alex) & lempus(Alex) & -zumpus(Alex))", "prediction": ["(all x.(Alex(x) -> Dumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> -Zumpus(z))))", "all x y z.((Alex(x) & Dumpus(x) & Lempus(y) & -Zumpus(z)) -> (Dumps(x) & Lempus(y) & -Dumpus(z)))", "all x y z.((Alex(x) & Dumpus(y) & Lempus(z)) -> (Dumps(x) & Lempus(x) & -Zumpus(x)))", "(all x.(Alex(x) -> Dumpus(x)) & (Alex(x) -> Lempus(x)) & -Alex(x)))", "all x.(Alex(x) -> (Dumpus(x) & Lempus(x) & -Zumpus(x)))", "exists x.(Alex(x) & Dumpus(x) & Lempus(x) & -Zumpus(x))", "(all x.(Alex(x) -> Dumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> -Zumpus(z))))", "all x y z.((Alex(x) & Dumpus(x) & Lempus(y) & -Zumpus(z)) -> (Dumpus(x) & Lempus(y) & -Dumpus(z)))", "(all x y z.(Alex(x) -> Dumpus(x)) & (Alex(y) -> Lempus(y)) & (Alex(z) -> -Zumpus(z))))", "(all x.(Alex(x) -> Dumpus(x)) & (Alex(x) -> Lempus(x)) & (Alex(x) -> -Zumpus(x)))", "all x.(Alex(x) -> (Dumpus(x) & Lempus(x) & -Zumpus(x)))", "all x y z.((Alex(x) & Dumpus(y) & Lempus(z)) -> (Dumpus(x) & Lempus(x) & -Zumpus(x)))", "(all x y z.(Alex(x) -> Dumpus(x)) & ((Alex(y) & Lempus(y)) -> -Zumpus(z)))", "(all x.(Alex(x) -> Dumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> -Zumpus(z))))", "all x y z.((Alex(x) & Dumpus(y) & Lempus(z)) -> (Dumps(x,y) & Lempus(x,z) & -Zumpus(x,y)))", "(all x.(Alex(x) -> Dumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> -Zumpus(z))))"]}
{"id": "prontoqa_train_270", "nl": "Alex is not a gorpus.", "fol": "-gorpus(Alex)", "prediction": ["all x.(Alex(x) -> -Gorpus(x))", "Alex is not a Gorpus.", "(-Gorpus(Alex))", "all x.(Alex(x) -> -Gorpus(x))", "Alex is not a Gorpus.", "Alex is notGorpus.", "all x.(Alex(x) -> -Gorpus(x))", "(-Gorpus(Alex))", "-Gorpus(Alex)", "Alex is not a Gorpus.", "Alex is not gorpus.", "all x.(Alex(x) -> -Gorpus(x))", "(-Gorpus(Alex)).", "all x.(Alex(x) -> -Gorpus(x))", "all x.(Alex(x) -> -Gorpus(x))", "All x.(Alex(x) -> -Gorpus(x))"]}
{"id": "prontoqa_train_271", "nl": "Every impus is a shumpus.", "fol": "all x. (impus(x) -> shumpus(x))", "prediction": ["all x.(Issue(x) -> Humpus(x))", "all x.(Impossible(x) -> Humpus(x))", "all x.(Impact(x) -> Humpus(x))", "(all x.(Impossible(x) -> Humpus(x)))", "all x y.((Issue(x) & Hush(y)) -> Shumpus(x))", "all x.(Issue(x) -> Humpus(x))", "all x y.((Issue(x) & Shumpus(y)) -> Issue(x,y))", "all x.(Impact(x) -> Humpus(x))", "all x.(Implementation(x) -> Humpus(x))", "all x.(Impossible(x) -> Humpus(x))", "all x.(Issue(x) -> Shumpus(x))", "all x.(Ilises(x) -> Humpus(x))", "exists x.(Defimer(x) & Humpus(x))", "all x.(Impossible(x) -> Humpus(x))", "exists x.(Defimer(x) & Humpus(x))", "exists x.(Shumpus(x) & Imperative(x))"]}
{"id": "prontoqa_train_272", "nl": "Rex is not a shumpus and Rex is a wumpus and Rex is a tumpus.", "fol": "(-shumpus(Rex) & wumpus(Rex) & tumpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Shumpus(x)) & all y.(Wumpus(y) & Tumpus(y))))", "all x y z.((Rex(x) & Humpus(y) & Wumpus(z)) -> (-Shumpus(x) & Wumpus(y) & Tumpus(z)))", "all x.(Rex(x) -> (-Shumpus(x) & Wumpus(x) & Tumpus(x)))", "(all x.(Rex(x) -> -Shumpus(x)) & (Wumpus(x) & Tumpus(x)))", "(-Shumpus(rex) & Wumpus(rex) & Tumpus(rex))", "(all x y.(Rex(x) -> -Shumpus(x)) & (Wumpus(y) | Tumpus(y))))", "(all x y z.((Rex(x) & Humpus(y) & Wumpus(z)) -> -Shumpus(x)) & ((Rex(x) & Humpus(x)) -> Tumpus(x)))", "all x y.((Rex(x) & Shumpus(y) & Wumpus(y)) -> (-Shumpus(x) & Wumpus(x) & Tumpus(y)))", "all x y z.((Rex(x) & Humpus(y) & Wumpus(z)) -> (-Shumpus(x) & Wumpus(x) & Tumpus(x)))", "all x.(Rex(x) -> (-Shumpus(x) & Wumpus(x) & Tumpus(x)))", "(all x.(Rex(x) -> -Shumpus(x)) & all y.(Wumpus(y) & Tumpus(y))))", "(-Shumpus(rex) & Wumpus(rex) & Tumpus(rex))", "all x y z.((Rex(x) & Shumpus(y) & Wumpus(z)) -> (-Shumpus(x) & Wumpus(y) & Tumpus(z)))", "all x y z.((Rex(x) & Humpus(y) & Wumpus(z)) -> (-Shumpus(x) & Wumpus(y) & Tumpus(z)))", "(all x.(Rex(x) -> -Shumpus(x)) & (Wumpus(x) | Tumpus(x)))", "(all x.(Rex(x) -> -Shumpus(x)) & all y.(Wumpus(y) & -Tumpus(y)))"]}
{"id": "prontoqa_train_273", "nl": "Each gorpus is a rompus.", "fol": "all x. (gorpus(x) -> rompus(x))", "prediction": ["all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x y.((Gorpus(x) & Rompus(y)) -> Is(x,y))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x y.((Gorpus(x) & Rompus(y)) -> Has(x,y))", "all x.(Gorpus(x) -> Rompus(x))", "all x y.((Gorpus(x) & Rompus(y)) -> Is(x,y))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "exists x.(Gorpus(x) & Rompus(x))", "exists x.(Gorpus(x) & Rrompus(x))", "exists x.(Gorpus(x) & Rompus(x))", "exists x.(Gorpus(x) & Roman(x))"]}
{"id": "prontoqa_train_274", "nl": "Stella is a dumpus and Stella is a sterpus and Stella is not a rompus.", "fol": "(dumpus(Stella) & sterpus(Stella) & -rompus(Stella))", "prediction": ["(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> -Rompus(x)))", "all x y z.((Stella(x) & Dumpus(x) & Sterpus(y) & -Rompus(z)) -> (Dumps(x) & Sterpus(y) & -Rompus(z)))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Stella(z) -> -Rompus(z))))", "all x y.((Stella(x) & Dumpus(x) & Sterpus(y)) -> (Dumpus(x) & -Rompus(y)))", "(all x y.((Stella(x) & Dumpus(x)) -> Sterepus(x)) & ((Stella(y) & -Rompus(y)) -> Dumpus(y)))", "all x y z.((Stella(x) & Dumpus(x) & Sterpus(y) & -Rompus(z)) -> (Dumpus(x) & Sterpus(y) & -Rompus(z)))", "all x.(Stella(x) -> (Dumps(x) & Sterpus(x) & -Rompus(x)))", "(all x y z.((Stella(x) & Dumpus(x)) -> (Dumps(x) | Sterpus(y)) & ((Stella(z) & -Rompus(z))) -> (Sterpus(z))))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> Sterpus(x)) & -Rompus(x)))", "exists x.(Stella(x) & Dumpus(x) & Sterpus(x) & -Rompus(x))", "all x y.((Stella(x) & Dumpus(x) & Sterpus(y)) -> (-Rompus(x) & -Dumpus(y)))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Stella(z) -> -Rompus(z))))", "all x y z.((Stella(x) & Dumpus(x) & Sterpus(y) & -Rompus(z)) -> (Dumpus(x) & Sterpus(y) & -Rompus(z)))", "(all x y.(Dumus(x) -> Stella(y)) & (Sterpus(y) -> Stella(y)) & -Rompus(y)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> -Rompus(x)))", "all x y z.((Stella(x) & Dumpus(x) & Sterpus(y) & -Rompus(z)) -> (Dumpus(x) & Sterpus(y) & -Rompus(z)))"]}
{"id": "prontoqa_train_275", "nl": "Stella is not a gorpus.", "fol": "-gorpus(Stella)", "prediction": ["all x.(Stella(x) -> -Gorpus(x))", "(-Gorpus(Stella))", "Stella is not a Gorpus.", "Stella -Gorpus(Stella))", "Stella is not a Gorpus.", "all x.(Stella(x) -> -Gorpus(x))", "(-Gorpus(Stella))", "Stella is not a Gorpus.", "Stella is not Gorpus(Stella)", "all x.(Stella(x) -> -Gorpus(x))", "(-Gorpus(Stella))", "Stella -Gorpus(Stella)", "-Gorpus(Stella)", "Stella is not a Gorpus.", "all x.(Stella(x) -> -Gorpus(x))", "(-Gorpus(Stella))"]}
{"id": "prontoqa_train_276", "nl": "Yumpuses are zumpuses.", "fol": "all x. (yumpus(x) -> zumpus(x))", "prediction": ["all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x y.((Yumpuse(x) & Zumpuse(y)) -> Has(x,y))", "all x y.((Yumpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Yumpus(x) -> Zumpus(x))", "all x y.((Yumpuse(x) & Zumpuse(y)) -> (Tompus(x) & -Tompus(y)))", "all x.(Umptus(x) -> Zumpuse(x))", "(Tompuse(y) & -Tompuse(y))", "(All x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpuse(x))", "all x.(Yumpuse(x) -> Zumpuse(x))", "All x.(Umahawk(x) -> Zumpuse(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpuse(x))", "All x.(Umbuse(x) -> Zumpuse(x))", "All x.(Yumpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_277", "nl": "Alex is not a zumpus, Alex is a tumpus, and Alex is an impus.", "fol": "(-zumpus(Alex) & tumpus(Alex) & impus(Alex))", "prediction": ["(all x.(Alex(x) -> -Zumpus(x)) & all y.(Alex(y) -> Tumpus(y))) & all z.(Alex(z) -> Issue(z)))", "all x y z.((Alex(x) & Zumpus(y) & Tumpus(z)) -> (-Tompus(x) & Issue(x)))", "all x.(Alex(x) -> (-Zumpus(x) & Tumpus(x) & Imperator(x)))", "(all x.(Alex(x) -> -Zumpus(x)) & all y.(Alex(y) -> Tumpus(y)) & all z.(Alex(z) -> Issue(z))))", "(all x.(Alexa(x) -> -Zumpus(x)) & all y.(Alexa(y) -> Tumpus(y)) & all z.(Alexa(z) -> Issue(z))))", "all x y z.((Alex(x) & Zumpus(y) & Tompus(z)) -> (-Tompus(x) & Issue(x)))", "all x y z.((Alex(x) & Zumpus(y) & Tumpus(z)) -> (-Tompus(x) & Issue(x)))", "(all x y z.((Alex(x) & Zumpus(y)) -> -Tompus(x)) & ((Alex(z) & Tumpus(z)) -> Issue(z)))", "all x.(Alex(x) -> (-Zumpus(x) & Tumpus(x) & Issue(x)))", "all x y z.((Alex(x) & Tompus(y) & Imperator(z)) -> (-Tompus(x) & Tompus(y) & Imperator(z)))", "(all x y z.(Alex(x) -> -Zumpus(x)) & (Alex(y) -> Tumpus(y)) & (Alex(z) -> Imperator(z)))", "(all x.(Alex(x) -> -Zumpus(x)) & (Alex(x) -> Tumpus(x)) & (Alex(x) -> Imperator(x)))", "(all x.(Alex(x) -> -Zumpus(x)) & all y.(Alex(y) -> Tumpus(y))) & all z.(Alex(z) -> Imperator(z)))", "all x.(Alex(x) -> (-Zumpus(x) & Tumpus(x) & Impermissible(x)))", "(all x.(Alex(x) -> -Tompus(x)) & (Alex(x) -> Tumpus(x)) & (Alex(x) -> Issue(x)))", "all x y z.((Alex(x) & Zumpus(y) & Tumpus(z)) -> (-Zumpus(x) & Tumpus(x) & Issue(x)))"]}
{"id": "prontoqa_train_278", "nl": "Alex is not a yumpus.", "fol": "-yumpus(Alex)", "prediction": ["all x.(Alex(x) -> -Yumpus(x))", "Alex is notyumpus.", "(-Yumpus(Alex))", "all x.(Alex(x) -> -Yumpus(x))", "-Yumpus(Alex)", "Alex is notYumpus(Alex)", "Alex is not yumpus.", "all x.(Alex(x) -> -Yumpus(x))", "Alex is notyumpus.", "(-Yumpus(Alex))", "-Yumpus(Alex)", "all x.(Alex(x) -> -Yumpus(x))", "Alex is notYumpus.", "all x.(Alex(x) -> -Yumpus(x))", "(-Yumpus(Alex)", "All x.(Alex(x) -> -Yumpus(x))"]}
{"id": "prontoqa_train_279", "nl": "Sally is a yumpus, Sally is a shumpus, and Sally is not a gorpus.", "fol": "(yumpus(Sally) & shumpus(Sally) & -gorpus(Sally))", "prediction": ["(all x.(Sally(x) -> Yumpus(x)) & (Sally(x) -> Humpus(x)) & (Sally(x) -> -Gorpus(x)))", "all x y z.((Sally(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) & Shumpus(x) & -Gorpus(x)))", "(all x.(Sally(x) -> Yumpus(x)) & all y.(Sally(y) -> Humpus(y)) & all z.(Sally(z) -> -Gorpus(z))))", "(all x y z.((Sally(x) & Yumpus(y)) -> (Yumpus(x) | Humpus(y))) & ((Sally(z) & Gorpus(z)) -> -Yumpus(z)))", "all x.(Sally(x) -> (Yumpus(x) & Shumpus(x) & -Gorpus(x)))", "(yumpus(Sally) & shumpus(Sally) & -gorpus(Sally))", "all x y z.((Sally(x) & Yumpus(y) & Humpus(z)) -> (Yumpus(x) | Shumpus(x) | -Gorpus(x)))", "(all x.(Yumpus(x) -> Sally)) & (Shumpus(x) -> Sally)) & (Gorpus(x) -> -Sally)))", "(yumpus(s) & shumpus(s) & -gorpus(s))", "(all x.(Sally(x) -> Yampus(x)) & (Sally(x) -> Humpus(x)) & (Sally(x) -> -Gorpus(x)))", "all x.(Sally(x) -> (Yumpus(x) & Humpus(x) & -Gorpus(x)))", "(all x y z.(Yumpus(x) -> Sally)) & (Shumpus(y) -> Sally)) & (Gorpus(z) -> -Sally))", "all x y z.((Sally(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) | Shumpus(z) | -Gorpus(z)))", "all x y z.((Sally(x) & Yumpus(x) & Shumpus(y) & -Gorpus(z)) -> (Yumpus(x) | Shumpus(y) & -Gorpus(z)))", "(all x.(Sally(x) -> Yumpus(x)) & all y.(Sally(y) -> Humpus(y)) & all z.(Sally(z) -> -Gorpus(z))))", "exists x.(Yumpus(x) | Shumpus(x) | -Gorpus(x))"]}
{"id": "prontoqa_train_280", "nl": "Sally is not a numpus.", "fol": "-numpus(Sally)", "prediction": ["Sally is not a Numpus.", "all x.(Sally(x) -> -Numpus(x))", "(-numpus(Sally))", "Sally -Numpus(Sally)", "Sally nm.((Sally(n) & Numpus(n))", "Sally is not a Numpus.", "-Numpus(Sally)", "all x.(Sally(x) -> -Numpus(x))", "(-numpus(Sally))", "Sally is not Numpus.", "(-Numpus(Sally))", "Sally is not a Numpus(Sally)", "all x.(Sally(x) -> -Numpus(x))", "-Numpus(Sally)", "Sally -Numpus(Sally)", "Sally is not Numpus."]}
{"id": "prontoqa_train_281", "nl": "Every shumpus is a gorpus.", "fol": "all x. (shumpus(x) -> gorpus(x))", "prediction": ["all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "exists x y.(Shumpus(x) & Gorpus(y))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.((Shumpus(x) & Gorpus(x)) -> HasShumpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "exists x y.(Shumpus(x) & Gorpus(y))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "exists x.(Shumpus(x) & Gorpus(x))", "all x.(Humpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_282", "nl": "Wren is a brimpus and Wren is a yumpus and Wren is not a gorpus.", "fol": "(brimpus(Wren) & yumpus(Wren) & -gorpus(Wren))", "prediction": ["(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> Yumpus(x)) & (Wren(x) -> -Gorpus(x)))", "all x y z.((Wren(x) & Brimpus(x) & Yumpus(y) & -Gorpus(z)) -> (Brimpus(x) & Yumpus(y) & -Gorpus(z)))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> -Gorpus(z))))", "(all x y z.((Wren(x) & Brimpus(x)) -> (Brimpus(x) & Yumpus(y))) & ((Wren(z) & Gorpus(z)) -> -Brompus(z)))", "all x y.((Wren(x) & Brimpus(x) & Yumpus(y)) -> (Brimpus(x) & -Gorpus(y)))", "all x y z.((Wren(x) & Brimpus(x) & Yumpus(y) & -Gorpus(z)) -> (Brimpus(x) & Yumpus(y) & -Brompus(z)))", "(all x y.(Wren(x) -> Brimpus(x)) & (Wren(y) -> Yumpus(y)) & (Wren(y) -> -Gorpus(y)))", "all x.(Wren(x) -> (Brimpus(x) & Yumpus(x) & -Gorpus(x)))", "(all x y z.((Wren(x) & Brimpus(y)) -> (Brimpus(z) | Yampus(z))) & ((Wren(x) & Gorpus(z)) -> -Gorpus(x)))", "all x y z.((Wren(x) & Brimpus(x) & Yumpus(y) & -Gorpus(z)) -> (Brimpus(x) & Yumpus(y) & -Gorpus(z)))", "(all x.(Wren(x) -> Brimpus(x)) & (Yumpus(x) & -Gorpus(x)))", "all x y.((Wren(x) & Brimpus(x) & Yumpus(y)) -> (Brimpus(x) & -Gorpus(y)))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> -Gorpus(z))))", "all x y z.((Wren(x) & Brimpus(y) & Yumpus(z)) -> (Brimpus(x) | Yampus(z) | -Gorpus(z)))", "all x.(Wren(x) -> (Brimpus(x) & Yumpus(x) & -Gorpus(x)))", "(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> Yumpus(x)) & (Wren(x) -> -Gorpus(x)))"]}
{"id": "prontoqa_train_283", "nl": "Each numpus is an impus.", "fol": "all x. (numpus(x) -> impus(x))", "prediction": ["all x.(Numpus(x) -> IsImpossible(x))", "all x.(Numpus(x) -> Imperative(x))", "all x.(Nompus(x) -> IsImpossible(x))", "all x y.((Numpus(x) & Numpus(y)) -> IsImpossible(x))", "all x.(Numpus(x) -> Impeccable(x))", "all x.(Numerus(x) -> IsImpossible(x))", "(Impossible(numpus) -> Numpus(numpus))", "all x.(Numpus(x) -> Impossible(x))", "all x y.((Numpus(x) & Numpus(y)) -> IsImpossible(x))", "exists x.(numpus(x) & Imperempt(x))", "all x.(Nompus(x) -> IsImpossed(x))", "all x.(Numpus(x) -> Imperator(x))", "exists x.(Numpus(x) & Impossible(x))", "exists x.(Numerus(x) & IsImpossible(x))", "all x.(Nompus(x) -> IsImprovement(x))", "exists x.(Numpus(x) & Impeccable(x))"]}
{"id": "prontoqa_train_284", "nl": "Fae is not an impus, Fae is a tumpus, and Fae is a grimpus.", "fol": "(-impus(Fae) & tumpus(Fae) & grimpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Impossible(x)) & (Fae(x) -> Tumpus(x)) & (Fae(x) -> Grimpus(x)))", "all x y z.((Fae(x) & Tumpus(y) & Grimpus(z)) -> (-Issue(x) & Tumpus(y) & Grimpus(z)))", "(all x.(Fae(x) -> -Impossible(x)) & all y.(Fae(y) -> Tumpus(y)) & all z.(Fae(z) -> Grimpus(z))))", "(all x y z.((Fae(x) & IsNotImpossible(x)) -> (Fae(y) & Tumpus(z))) & ((Fae(y) & Grimpus(y)) -> (Fae(y) & -Impossible(y))))", "(all x y z.((Fae(x) & Imperium(y)) -> -Impossible(x)) & ((Fae(z) & Tumpus(z)) -> Grimpus(z)))", "all x y z.((Fae(x) & Tumpus(y) & Grimpus(z)) -> (-Is(x,Is(x) & Is(y,z)))", "all x y z.((Fae(x) & Fae(y) & Grimpus(z)) -> (-Impossible(x) & Tumpus(y) & Grimpus(z)))", "exists x.(Fae(x) & -Is(x) & Is(x) & IsTumpus(x) & IsGrimpus(x))", "all x.(Fae(x) -> (-Impossible(x) & Tumpus(x) & Grimpus(x)))", "(all x y z.((Fae(x) & Impossible(y)) -> -Fae(x)) & ((Fae(z) & Tumpus(z)) -> Grimpus(z)))", "(all x.(Fae(x) -> -Issue(x)) & (Fae(x) -> Tumpus(x)) & (Fae(x) -> Grimpus(x)))", "all x y z.(Fae(x) & ((Fae(y) & Imperium(z)) | (Tumpus(y) & Grimpus(z)))))", "(all x.(Fae(x) -> -Impossible(x)) & all y.(Fae(y) -> Tumpus(y)) & all z.(Fae(z) -> Gruppus(z))))", "all x y z.(Fae(x) -> (-Impossible(x) & Fae(y) & Tumpus(y) & Grimpus(z)))", "all x y z.((Fae(x) & Tumpus(y) & Grimpus(z)) -> (-Impossible(x) & Tumpus(y) & Grimpus(z)))", "(all x.(Fae(x) -> -Issue(x)) & (Fae(x) -> Tumpus(x)) & (Fae(x) -> Gruppus(x)))"]}
{"id": "prontoqa_train_285", "nl": "Sterpuses are gorpuses.", "fol": "all x. (sterpus(x) -> gorpus(x))", "prediction": ["all x.(Sterpus(x) -> Gorpus(x))", "all x.(Sterpuse(x) -> Gorpus(x))", "all x y.((Sterpuse(x) & Gorpus(y)) -> Gorpus(x))", "(all x.(Sterpuse(x) -> Gorpuse(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Sterpuse(x) -> Gorpuse(x))", "all x.(Sterpuse(x) -> Gorpuse(x))", "all x y.((Sterpuse(x) & Gorpus(y)) -> Gorpus(x))", "(all x.(Sterpuse(x) -> Gorpus(x))", "(Gorpuse(sterpuse) -> Gorpuse(s))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Sterpuse(x) -> Gorpus(x))", "all x y.((Sterpuse(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Stupid(x) -> Gorpus(x))", "all x.(Strerpus(x) -> Gorpuse(x))", "all x.(Sterpuse(x) -> Gorpuse(x))"]}
{"id": "prontoqa_train_286", "nl": "Fae is not a gorpus, Fae is a shumpus, and Fae is a tumpus.", "fol": "(-gorpus(Fae) & shumpus(Fae) & tumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Gorpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> Tumpus(x)))", "all x y z.((Fae(x) & Shumpus(y) & Tumpus(z)) -> (-Gorpus(x) & Shumpus(y) & Tumpus(z)))", "(all x.(Fae(x) -> -Gorpus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> Tumpus(z))))", "(all x y z.((Fae(x) & Gorpus(y)) -> -Gorpus(x)) & ((Fae(z) & Humpus(z))) -> Tumpus(z)))", "all x.(Fae(x) -> (-Gorpus(x) & Shumpus(x) & Tumpus(x)))", "all x y z.((Fae(x) & Gorpus(y) & Humpus(z)) -> (-Gorpus(x) & Shumpus(x) & Tumpus(x)))", "(all x y z.((Fae(x) & Gorpus(y) & Shumpus(z)) -> -Gorpus(x)) & ((Fae(x) & Humpus(x)) -> Tumpus(x)))", "(-Gorpus(Fae) & Shumpus(Fae) & Tumpus(Fae))", "exists x.(Fae(x) & -Gorpus(x) & Shumpus(x) & Tumpus(x))", "(all x.(Fae(x) -> -Gorpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> Tumpus(x)))", "all x y z.((Fae(x) & Shumpus(y) & Tumpus(z)) -> (-Gorpus(x) & Shumpus(y) & Tumpus(z)))", "(all x.(Fae(x) -> -Gorpus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> Tumpus(z))))", "all x y z.(Fae(x) & Gorpus(y) & Shumpus(z) & Tumpus(x))", "all x y z.(Fae(x) -> (-Gorpus(x) & Shumpus(y) & Tumpus(z)))", "all x y z.((Fae(x) & Gorpus(y) & Humpus(z)) -> (-Gorpus(x) & Shumpus(x) & Tumpus(x)))", "(all x.(Fae(x) -> -Gorpus(x)) & (Shumpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_287", "nl": "Fae is not a sterpus.", "fol": "-sterpus(Fae)", "prediction": ["all x.(Fae(x) -> -Sterpus(x))", "(-Sterpus(Fae))", "(-Stereospheric(Fae))", "(Fae isn'tSterpus(Fae))", "all x.(Fae(x) -> -Sterpus(x))", "-Sterpus(Fae)", "(Fae, -Sterpus(Fae))", "(-Stereopus(Fae))", "all x.(Fae(x) -> -Sterepus(x))", "-Sterpus(Fae)", "-Stereosen(Fae)", "all x.(Fae(x) -> -Sterpus(x))", "-Sterpus(Fae)", "(-Steerpus(Fae))", "all x.(Fae(x) -> -Sterepus(x))", "-Sterpus(fae)"]}
{"id": "prontoqa_train_288", "nl": "Lempuses are shumpuses.", "fol": "all x. (lempus(x) -> shumpus(x))", "prediction": ["all x.(Lempuse(x) -> Shumpus(x))", "all x.(Lempuse(x) -> Shumpus(x))", "(Shumpuse(lempuse) & -Shumpuse(lempuse))", "all x y.((Lempuse(x) & Shumpus(y)) -> Shumpus(x))", "all x.(Lempuse(x) -> Shumpus(x))", "all x.(Lempuse(x) -> Humpus(x))", "(Shumpuse(lempuse) & Shumpuse(lempuse))", "all x y.((Lempuse(x) & Shumpus(y)) -> Shumpus(x))", "all x.(Lempuse(x) -> Shumpuse(x))", "all x.(Lemmes(x) -> Humpus(x))", "all x.(Lemme(x) -> Shumpus(x))", "all x.(Lemmes(x) -> Shumpus(x))", "all x.(Lempuse(x) -> Shumpus(x))", "all x.(Lempuse(x) -> Humpus(x))", "All x.(Lampus(x) -> Shumpus(x))", "All x.(Lempuse(x) -> Humpuse(x))"]}
{"id": "prontoqa_train_289", "nl": "Max is not a shumpus, Max is a lorpus, and Max is a numpus.", "fol": "(-shumpus(Max) & lorpus(Max) & numpus(Max))", "prediction": ["(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Lorpus(x)) & (Max(x) -> Numpus(x)))", "all x y z.((Max(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(x) & -Numpus(x)))", "(all x.(Max(x) -> -Shumpus(x)) & all y.(Max(y) -> Lorpus(y)) & all z.(Max(z) -> Numpus(z))))", "(all x y z.((Max(x) & Humpus(y)) -> -Shumpus(x)) & ((Max(z) & Lorpus(z)) -> Numpus(z)))", "all x.(Max(x) -> (-Shumpus(x) & Lopus(x) & Numpus(x)))", "all x y z.((Max(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(x) & -Numpus(x)))", "all x y z.((Max(x) & Shumpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(x) & -Numpus(x)))", "(-Shumpus(Max) & Lopus(Max) & Numpus(Max))", "(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Lorpus(x)) & (Max(x) -> Numpus(x)))", "(all x y z.((Max(x) & Humpus(y)) -> -Shumpus(x)) & ((Max(z) & Lorpus(z)) -> Numpus(z)))", "all x.(Max(x) -> (-Shumpus(x) & Lopus(x) & Numpus(x)))", "all x y z.((Max(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(x) & -Numpus(y)))", "(-Shumpus(Max) & Lopus(Max) & Numpus(Max))", "(all x.(Max(x) -> -Shumpus(x)) & all y.(Max(y) -> Lorpus(y)) & all z.(Max(z) -> Numpus(z)))", "(all x.(Max(x) -> -Shumpus(x)) | (Max(x) -> Lorpus(x)) | (Max(x) -> Numpus(x))))", "all x y z.((Max(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) | (Lorpus(x) & Numpus(x))))"]}
{"id": "prontoqa_train_290", "nl": "Sterpuses are zumpuses.", "fol": "all x. (sterpus(x) -> zumpus(x))", "prediction": ["all x.(Sterpuse(x) -> Zumpuse(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Sterpuse(x) -> Zumpuse(x))", "all x y.((Sterpuse(x) & Zumpus(y)) -> Sterpuse(x))", "(all x.(Sterpuse(x) -> Zumpuse(x))", "all x.(Sterpuse(x) -> Zumpuse(x))", "all x y.((Sterpuse(x) & Zumpuse(y)) -> Sterpuse(x))", "all x.(Sterpuse(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Stupid(x) -> Zumpus(x))", "(All x.(Sterpuse(x) -> Zumpuse(x))", "all x.(Sterpuse(x) -> Zumpuse(x))", "(all x.(Sterpuse(x) -> Zumpuse(x))", "All x.(Sterpuse(x) -> Zumpuse(x))", "all x.(Strerpus(x) -> Zumpus(x))", "All x.(Stump(x) -> Zumpuse(x))"]}
{"id": "prontoqa_train_291", "nl": "Max is not a zumpus, Max is a rompus, and Max is a numpus.", "fol": "(-zumpus(Max) & rompus(Max) & numpus(Max))", "prediction": ["(all x.(Max(x) -> -Zumpus(x)) & (Max(x) -> Rompus(x)) & (Max(x) -> Numpus(x)))", "all x y z.((Max(x) & Rompus(y) & Numpus(z)) -> (-Zumpus(x) & -Rompus(y) & -Zumpus(z)))", "(all x.(Max(x) -> -Zumpus(x)) & all y.(Max(y) -> Rompus(y)) & all z.(Max(z) -> Numpus(z))))", "(all x y z.((Max(x) & Zumpus(y)) -> -Zumpus(x)) & ((Max(z) & Rompus(z)) -> Numpus(z)))", "all x.(Max(x) -> (-Zumpus(x) & Rompus(x) & Numpus(x)))", "(-Zumpus(Max) & Rompus(Max) & Numpus(Max))", "all x y z.((Max(x) & Rompus(y) & Numpus(z)) -> (-Zumpus(x) & -Rompus(y) & -Zumpus(z)))", "all x y z.((Max(x) & Rompus(y) & Numpus(z)) -> (-Zumpus(x) | (-Zumpus(y) & Rompus(y) & Numpus(z))))", "(all x.(Max(x) -> -Zumpus(x)) & (Max(x) -> Rompus(x)) & (Max(x) -> Numpus(x)))", "(all x y z.((Max(x) & Zumpus(y)) -> -Tompus(x)) & ((Max(z) & Rompus(z)) -> Numpus(z)))", "all x.(Max(x) -> (-Zumpus(x) & Rompus(x) & Numpus(x)))", "(all x.(Max(x) -> -Zumpus(x)) & all y.(Max(y) -> Rompus(y)) & all z.(Max(z) -> Numpus(z)))", "(all x.(Max(x) -> -Tompus(x)) | (Max(x) -> Rompus(x))) | (Max(x) -> Numpus(x))))", "all x y z.((Max(x) & Rompus(y) & Numpus(z)) -> (-Zumpus(x) | (Rompus(y) & Numpus(z))))", "(-Zumpus(Max) | Rompus(Max) | Numpus(Max)))", "all x y z.((Max(x) & Rompus(y) & Numpus(z)) -> (-Tompus(x) & Rompus(y) & Numpus(z)))"]}
{"id": "prontoqa_train_292", "nl": "Max is not a sterpus.", "fol": "-sterpus(Max)", "prediction": ["all x.(Max(x) -> -Sterpus(x))", "(-Sterpus(Max))", "Max is not sterpus.", "-(Max(Max) & Sterpus(Max))", "-Sterpus(Max)", "all x.(Max(x) -> -Sterpus(x))", "Max is not sterpus.", "(Max is notSterpus(Max))", "(-Sterepus(Max))", "-(Max(Max) & Sterpus(Max))", "all x.(Max(x) -> -Sterepus(x))", "-Sterpus(Max)", "(-Stereos(Max))", "Max is notsterpus.", "all x.(Max(x) -> -Sterpus(x))", "(-Sterpus(Max))"]}
{"id": "prontoqa_train_293", "nl": "Alex is a brimpus and Alex is not a tumpus and Alex is a vumpus.", "fol": "(brimpus(Alex) & -tumpus(Alex) & vumpus(Alex))", "prediction": ["(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Vumpus(x)))", "all x y z.((Alex(x) & Brimpus(x) & -Tumpus(y) & Vumpus(z)) -> (Brimpus(x) & -Tumpus(y) & -Vumpus(z)))", "all x y.((Alex(x) & Brimpus(x) & -Tumpus(y)) -> Vumpus(x))", "all x.(Alex(x) -> (Brimpus(x) & -Tumpus(x) & Vumpus(x)))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Vumpus(x)))", "(all x.(Alexa(x) -> Brimpus(x)) & (Alexa(x) -> -Tumpus(x)) & (Alexa(x) -> Vumpus(x)))", "all x y z.((Alex(x) & Brimpus(x) & -Tumpus(y) & Vumpus(z)) -> (Brimpus(x) & -Tumpus(y) & Vumpus(z)))", "(all x y.(Brimpus(x) -> Brimpus(x)) & (-Tumpus(y) & -Vumpus(y)))", "(all x.(Alex(x) -> Brimpus(x)) & all y.(Alex(y) -> -Tumpus(y)) & all z.(Alex(z) -> Vumpus(z))))", "all x y z.((Alex(x) & Brimpus(x) & Tumpus(y) & Vumpus(z)) -> (Brimpus(x) & -Tumpus(y) & Vumpus(z)))", "(all x y.(Brimpus(x) -> -Tumpus(y)) & (Vumpus(x) -> -Brimpus(x)))", "all x y.((Alex(x) & Brimpus(x)) -> (-Tumpus(x) & Vumpus(y)))", "all x.(Alex(x) -> (Brimpus(x) & -Tumpus(x) & Vumpus(x)))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Vumpus(x)))", "(all x.(Alexa(x) -> Brimpus(x)) & (Alexa(x) -> -Tumpus(x)) & (Alexa(x) -> Vumpus(x)))", "all x.(Alex(x) -> (Brumpus(x) & -Tumpus(x) & Vumpus(x)))"]}
{"id": "prontoqa_train_294", "nl": "Each vumpus is a dumpus.", "fol": "all x. (vumpus(x) -> dumpus(x))", "prediction": ["all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "(all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x y.((Vumpus(x) & Dumpus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Dumpus(x))", "all x y.((Vumpus(x) & Dumpus(y)) -> -Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x y.((Vumpus(x) & Dumpus(y)) -> Has(x,y))", "all x.(Vumpus(x) -> Dumpus(x))", "exists x.(Vumpus(x) & Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "exists x.(Vumpus(x) & Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "exists x.(Vumpus(x) & Dumpus(x))", "exists x.(Vumpus(x) & Dumpus(x))"]}
{"id": "prontoqa_train_295", "nl": "Wren is a lorpus and Wren is a sterpus and Wren is not a dumpus.", "fol": "(lorpus(Wren) & sterpus(Wren) & -dumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Lorpus(x)) & (Wren(x) -> Sterpus(x)) & (Wren(x) -> -Dumpus(x)))", "all x y z.((Wren(x) & Lorpus(y) & Sterpus(z)) -> (Lorpus(x) & Sterpus(x) & -Dumpus(x)))", "(all x y.(Wren(x) -> Lorpus(x)) & (Wren(y) -> Sterpus(y)) & (Wren(y) -> -Dumpus(y)))", "(all x.(Wren(x) -> Lorpus(x)) & all y.(Wren(y) -> Sterpus(y)) & all z.(Wren(z) -> -Dumpus(z))))", "all x y z.((Wren(x) & Lorpus(x) & Sterpus(y) & -Dumpus(z)) -> (Lorpus(x) & Sterpus(y) & -Dumpus(z)))", "(all x y z.((Wren(x) & Lorpus(y)) -> (Lorpus(x) & Sterpus(y))) & ((Wren(z) & Dumpus(z)) -> -Dumpus(z)))", "all x y.((Wren(x) & Lorpus(x) & Sterpus(y)) -> (Lorpus(x) & Sterpus(y) & -Dumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Sterpus(x) & -Dumpus(x)))", "(all x.(Wren(x) -> Lorpus(x)) & (Wren(x) -> Sterpus(x)) & (Wren(x) -> -Dumpus(x)))", "(all x.(Wren(x) -> Llorpus(x)) & all y.(Wren(y) -> Sterpus(y)) & all z.(Wren(z) -> -Dumpus(z))))", "(all x y.(Lorpus(x) -> Wren(y)) & (Sterpus(y) -> Wren(y)) & (Dumpus(y) -> Wren(y)))", "all x y z.((Wren(x) & Lorpus(y) & Sterpus(z)) -> (Lorpus(x) & Sterpus(z) & -Dumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Sterpus(x) | -Dumpus(x)))", "all x y.((Wren(x) & Lorpus(x) & Sterpus(y)) -> (Lorpus(x) & Sterpus(y) & -Dumpus(x)))", "(all x.(Wren(x) -> Lorpus(x)) & all y.(Wren(y) -> Sterpus(y)) & all z.(Wren(z) -> -Dumpus(z))))", "all x y z.((Wren(x) & Lorpus(x) & Sterepus(y) & -Dumpus(z)) -> (Lorpus(x) & Sterpus(y) & -Dumpus(z)))"]}
{"id": "prontoqa_train_296", "nl": "Each jompus is a shumpus.", "fol": "all x. (jompus(x) -> shumpus(x))", "prediction": ["all x.(Jompus(x) -> Humpus(x))", "all x.(Jompus(x) -> Shumpus(x))", "all x y.((Jompus(x) & Shumpus(y)) -> HasShumpus(x,y))", "(all x.(Jompus(x) -> Humpus(x)))", "all x.(Jimpus(x) -> Humpus(x))", "all x.(Jompus(x) -> Humpus(x))", "all x y.((Jompus(x) & Shumpus(y)) -> Has(x,y))", "all x.(Jompus(x) -> Shumpus(x))", "all x y.((Jompus(x) & Shumpus(y)) -> Is(x,y))", "all x.(Jumpus(x) -> Shumpus(x))", "all x.(Jimpus(x) -> Humpus(x))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jompus(x) -> Shumpus(x))", "exists x.(Jimpus(x) & Humpus(x))", "exists x.(Jompus(x) & Humpus(x))", "exists x.(Jumpus(x) & Shumpus(x))"]}
{"id": "prontoqa_train_297", "nl": "Sam is a zumpus and Sam is not a shumpus and Sam is a sterpus.", "fol": "(zumpus(Sam) & -shumpus(Sam) & sterpus(Sam))", "prediction": ["(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Shumpus(x)) & (Sam(x) -> Sterpus(x)))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & -Shumpus(y)) -> (Sterpus(z)))", "all x y.((Sam(x) & Zumpus(x) & Sam(y)) -> (-Shumpus(y) & Sterpus(y)))", "(all x.(Sam(x) -> Zumpus(x)) & (-Shumpus(x) & (Sam(x) -> Sterpus(x))))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Sterpus(z)) -> (-Shumpus(y) & -Shumpus(y) & Sterpus(z)))", "(all x y.(Sam(x) -> Zumpus(x)) & (Sam(y) -> -Shumpus(y)) & (Sam(y) -> Sterpus(y)))", "all x.(Sam(x) -> (Tompus(x) & -Shumpus(x) & Sterpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Shumpus(x)) & (Sam(x) -> Sterpus(x)))", "all x.(Sam(x) -> (Tompus(x) | -Shumpus(x) | Sterpus(x)))", "exists x.(Sam(x) & Zumpus(x) & -Shumpus(x) & Sterpus(x))", "(all x.(Sam(x) -> Zumpus(x)) & (-Shumpus(x)) & (Sam(x) -> Sterpus(x)))", "(all x y.(Sam(x) -> Zumpus(x)) & (Sam(y) -> -Shumpus(y)) & (Sam(y) -> Sterpus(y)))", "all x y.((Sam(x) & Zumpus(x) & Sam(y)) -> (-Shumpus(y) & Sterpus(y)))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Sterpus(z)) -> (-Shumpus(y) & Sterpus(z)))", "(all x.(SameDay(x) -> Zumpus(x)) & (-Shumpus(x) & -Sterpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Shumpus(x)) & (Sam(x) -> Sterpus(x)))"]}
{"id": "prontoqa_train_298", "nl": "Sam is not a jompus.", "fol": "-jompus(Sam)", "prediction": ["all x.(Sam(x) -> -Jompus(x))", "(-Jompus(Sam))", "Sam is not a Jompus.", "all x.(Sam(x) -> -Jompus(x))", "(-Jimpus(Sam) & -Jimpus(Sam))", "Sam is not a jompus.", "(-Jompus(Sam))", "(Jompus(Sam) | Jompus(Sam)))", "all x.(Sam(x) -> -Jompus(x))", "all x.(Jompus(x) -> -Jimpus(x))", "-Jumpus(Sam)", "-Jompus(Sam)", "all x.(Sam(x) -> -Jimpus(x))", "(-jompus(Sam)).", "all x.(Sam(x) -> -Jumpus(x))", "-Jompus(Sam)"]}
{"id": "prontoqa_train_299", "nl": "Numpuses are lempuses.", "fol": "all x. (numpus(x) -> lempus(x))", "prediction": ["all x.(Numpus(x) -> Lempuse(x))", "all x.(Numpuse(x) -> Lempuse(x))", "all x y.((Numpus(x) & Lempuse(y)) -> Lempuse(x))", "(all x.(Numpuse(x) -> Lempuse(x)))", "all x.(Numpus(x) -> Lempuse(x))", "all x y.((Numpuse(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Numptus(x) -> Lempuse(x))", "(Lempuses(nupuse) & Lempuse(nupuse))", "all x.(Numpuse(x) -> Lempuse(x))", "All x y.((Numpus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Numpus(x) -> Lempuse(x))", "all x.(Numptus(x) -> Lempuse(x))", "all x.(Numpuse(x) -> Lempuse(x))", "all x.(Numpus(x) -> Lempus(x))", "all x.(Numpuse(x) -> Lempuse(x))", "all x.(Numpus(x) -> Lempus(x))"]}
{"id": "prontoqa_train_300", "nl": "Alex is a zumpus, Alex is not a lempus, and Alex is a rompus.", "fol": "(zumpus(Alex) & -lempus(Alex) & rompus(Alex))", "prediction": ["(all x.(Alexa(x) -> Zumpus(x)) & (Alexa(x) -> -Lempus(x)) & (Alexa(x) -> Rompus(x)))", "all x y z.((Alex(x) & Zumpus(x) & Alex(y) & Lempus(z)) -> (-Lempus(y) & Rompus(y)))", "(all x.(Alex(x) -> Zumpus(x)) & (Alex(x) -> -Lempus(x)) & (Alex(x) -> Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) & -Lempus(x) & Rompus(x)))", "(all x y z.(Alex(x) -> Zumpus(x)) & (Alex(y) -> -Lempus(y)) & (Alex(z) -> Rompus(z)))", "(all x y z.((Alex(x) & Zumpus(x)) -> (Alex(y) & -Lempus(y))) & ((Alex(z) & Rompus(z)) -> (Alex(z) & -Lempus(z))))", "all x y z.((Alex(x) & Zumpus(y) & Lempus(z)) -> (-Alex(x) & Rompus(x)))", "all x y z.((Alex(x) & Tompus(y) & Lempus(z)) -> (-Tompus(x) & -Lempus(y) & Rompus(z)))", "all x y z.((Alex(x) & Zumpus(x) & Alex(y) & Lempus(z)) -> (-Lempus(y) & Rompus(z)))", "(all x.(Alexa(x) -> Zumpus(x)) & (Alexa(x) -> -Lempus(x)) & (Alexa(x) -> Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | -Lempus(x) | Rompus(x)))", "(all x.(Alex(x) -> Zumpus(x)) & (Alex(x) -> -Lempus(x)) & (Alex(x) -> Rompus(x)))", "(all x y z.(Alex(x) -> Zumpus(x)) & (Alex(y) -> -Lempus(y)) & (Alex(z) -> Rompus(z)))", "all x y z.((Alex(x) & Tompus(y) & Lempus(z)) -> (Tompus(x) | -Lempus(y) | Rompus(z)))", "all x.(Alex(x) -> (Zumpus(x) & -Lempus(x) & Rompus(x)))", "(all x.(Alexa(x) -> Zumpus(x)) & (Alexa(x) -> -Lempus(x)) & (Alexa(x) -> Rompus(x)))"]}
{"id": "prontoqa_train_301", "nl": "Lempuses are sterpuses.", "fol": "all x. (lempus(x) -> sterpus(x))", "prediction": ["all x.(Lempuse(x) -> Sterpuse(x))", "all x.(Lempuse(x) -> Sterpuse(x))", "all x y.((Lempuse(x) & Sterpuse(y)) -> Sterpuse(x))", "(Sterpuse(lempuse) & Sterpuse(lempuse))", "all x.(Lempuse(x) -> Sterpuse(x))", "all x.(Lemme(x) -> Sterpuse(x))", "all x y.((Lempuse(x) & Sterus(y)) -> Sterpuse(x))", "all x y.((Lempuse(x) & Sterpus(y)) -> Sterpuse(x))", "all x.(Lempuse(x) -> Sterpuse(x))", "all x.(Lempuse(x) -> Sterus(x))", "all x.(Lemme(x) -> Sterpuse(x))", "all x.(Lempuse(x) -> Sterpuse(x))", "all x.(Lempuse(x) -> Steroid(x))", "All x.(Lempus(x) -> Sterpuse(x))", "all x.(Lempus(x) -> Sterosene(x))", "All x.(Lampuse(x) -> Sterpuse(x))"]}
{"id": "prontoqa_train_302", "nl": "Max is a rompus, Max is a yumpus, and Max is not a sterpus.", "fol": "(rompus(Max) & yumpus(Max) & -sterpus(Max))", "prediction": ["(all x.(Max(x) -> Rompus(x)) & (Max(x) -> Yumpus(x)) & (Max(x) -> -Sterepus(x)))", "all x y z.((Max(x) & Rompus(y) & Yumpus(z)) -> (Rompus(x) | Yumpus(z) & -Sterpus(z)))", "all x.(Max(x) -> (Rompus(x) & Yumpus(x) & -Sterpus(x)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> Yumpus(x)) & (Max(x) -> -Sterepus(x)))", "(all x y z.((Max(x) & Rompus(y)) -> (Rompus(x) | Yampus(y))) & ((Max(z) & -Sterpus(z))) -> (Yumpus(z) & -Rompus(z))))", "(all x.(Max(x) -> Rompus(x)) & all y.(Max(y) -> Yumpus(y)) & all z.(Max(z) -> -Sterepus(z))))", "all x.(Max(x) -> (Rompus(x) | Yumpus(x) | -Sterepus(x)))", "all x y z.((Max(x) & Rrompus(x) & Yumpus(y) & -Sterepus(z)) -> (Rompus(x) | Yampus(y) & -Rompus(z)))", "all x y z.((Max(x) & Rompus(y) & Yumpus(z)) -> (Rompus(x) & Yampus(z) & -Sterepus(x)))", "(all x y z.((Max(x) & Rrompus(y)) -> (Rompus(x) | Yampus(y))) & ((Max(z) & -Sterepus(z))) -> (Yumpus(z) & -Rompus(z))))", "(all x y z.((Max(x) & Rompus(y)) -> (Rompus(z) | Yampus(z))) & ((Max(x) & Yumpus(x) & -Sterepus(x)) -> (Rompus(x) & Yumpus(x))))", "all x y z.((Max(x) & Rimpus(y) & Yumpus(z)) -> (Rompus(x) | (Yumpus(z) | -Sterepus(z))))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> Yumpus(x)) & (Max(x) -> -Sterpus(x)))", "(all x.(Max(x) -> Rompus(x)) & all y.(Max(y) -> Yumpus(y)) & all z.(Max(z) -> -Sterpus(z)))", "all x y z.((Max(x) & Rhopus(y) & Yumpus(z)) -> (Rompus(x) | Yumpus(z) | -Sterpus(x)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> Yumpus(x)) & (Max(x) -> -Sterpus(x)))"]}
{"id": "prontoqa_train_303", "nl": "Each gorpus is a jompus.", "fol": "all x. (gorpus(x) -> jompus(x))", "prediction": ["all x.(Gorpus(x) -> Jompus(x))", "all x.(Gorpus(x) -> Jompus(x))", "all x y.((Gorpus(x) & Jompus(y)) -> Has(x,y))", "all x.(Gorpus(x) -> Jompus(x))", "all x y.((Gorpus(x) & Gorpus(y)) -> Jompus(x))", "all x.(Gorpus(x) -> Jompus(x))", "all x y.((Gorpus(x) & Jompus(y)) -> Has(x,y))", "all x.(Gorpus(x) -> Jompus(x))", "all x.(Gorpus(x) -> Jompus(x))", "all x.(Gorpus(x) -> Jompus(x))", "exists x.(Gorpus(x) & JOMP (jompus(x)))", "exists x.(Gorpus(x) & Joompa(x))", "all x.(Gorpus(x) -> Jompus(x))", "exists x.(Gorpus(x) & Jompus(x))", "all x.(Gorpus(x) -> Jompus(x))", "exists x.(Gorpus(x) & Jompus(x))"]}
{"id": "prontoqa_train_304", "nl": "Max is not a jompus and Max is a vumpus and Max is a brimpus.", "fol": "(-jompus(Max) & vumpus(Max) & brimpus(Max))", "prediction": ["(all x.(Max(x) -> -Jompus(x)) & (Max(x) -> Vumpus(x)) & (Max(x) -> Brimpus(x)))", "all x y z.((Max(x) & Jompus(y) & Vumpus(z)) -> (-Jompus(x) & -Vumpus(x) & -Brimpus(x)))", "(all x.(Max(x) -> -Jompus(x)) & all y.(Max(y) -> Vumpus(y)) & all z.(Max(z) -> Brimpus(z))))", "(all x y z.((Max(x) & Jompus(y) & Vumpus(z)) -> -Jompus(x)) & ((Max(x) & Vumpus(x)) -> Brimpus(x)))", "((Max(Max) & -Jompus(Max)) | (Max(Max) & Vumpus(Max))) | (Max(Max) & Brimpus(Max)))", "all x.(Max(x) -> (-Jompus(x) & Vumpus(x) & Brimpus(x)))", "(-Jompus(Max) & -Vumpus(Max) & -Brimpus(Max))", "all x y.((Max(x) & Jompus(y) & Vumpus(y)) -> (-Jompus(x) & Vumpus(x) & Brimpus(x)))", "(all x y.((Max(x) & Jompus(y)) -> -Jompus(x)) & ((Max(x) & Vumpus(x)) -> Brimpus(x)))", "all x y z.((Max(x) & Jompus(y) & Vumpus(z)) -> (-Jompus(x) & -Vumpus(y) & -Brimpus(z)))", "(all x.(Max(x) -> -Jompus(x)) & (Max(x) -> Vumpus(x)) & (Max(x) -> Brimpus(x)))", "all x y z.((Max(x) & Jompus(y) & Vumpus(z)) -> (-Jompus(x) & Vumpus(x) & Brimpus(x)))", "(all x.(Max(x) -> -Jompus(x)) & all y.(Max(y) -> Vumpus(y))) & all z.(Max(z) -> Brimpus(z)))", "all x.(Max(x) -> (-Jompus(x) & Vumpus(x) & Brimpus(x)))", "(all x.(Max(x) -> -Jompus(x)) | (Max(x) -> Vumpus(x)) | (Max(x) -> Brimpus(x))))", "all x y z.((Max(x) & Jompus(y) & Vumpus(z)) -> (-Jompus(x) & -Vumpus(y) & -Brimpus(z)))"]}
{"id": "prontoqa_train_305", "nl": "Max is not a gorpus.", "fol": "-gorpus(Max)", "prediction": ["all x.(Max(x) -> -Gorpus(x))", "(-Gorpus(Max))", "Max is not a Gorpus.", "-Gorpus(Max)", "all x.(Max(x) -> -Gorpus(x))", "Max is notGorpus.", "Max is not a Gorpus.", "(-Gorpus(Max))", "all x.(Max(x) -> -Gorpus(x))", "-Gorpus(Max)", "all x.(Max(x) -> -Gorpus(x))", "(-Gorpus(Max))", "-Gorpus(Max)", "(-Gorpus(Max))", "-Gorpus(Max)", "(-gorpus)"]}
{"id": "prontoqa_train_306", "nl": "Yumpuses are grimpuses.", "fol": "all x. (yumpus(x) -> grimpus(x))", "prediction": ["all x.(Yumpus(x) -> Grimpuse(x))", "all x.(Yumpus(x) -> Grimpuse(x))", "all x y.((Yumpus(x) & Grimpus(y)) -> (Smoothpuse(x) & Grimpuse(y)))", "(Smoothpuse(y) & Yumpus(z))", "all x y.((Yumpuse(x) & Grimpuse(y)) -> (Smoothpuse(x) & Grimpuse(y)))", "(Grimpuse(y) & -Smoothpuse(y))", "all x.(Yumpus(x) -> Grimpus(x))", "all x y.((Yumpus(x) & Grimpuse(y)) -> (Smoothpuse(x) & Grimpuse(y)))", "all x.(Umptus(x) -> Grimpuse(x))", "(Grimpuse(y) & Contains(y,x))", "all x.(Yumpus(x) -> Grimpuse(x))", "all x.(Yumpus(x) -> Grappa(x))", "All x.(Umahpus(x) -> Grimpuse(x))", "all x.(Yumpuse(x) -> Grimpuse(x))", "all x.(Yumpus(x) -> Grimpus(x))", "all x.(Yumpus(x) -> Gruppus(x))"]}
{"id": "prontoqa_train_307", "nl": "Wren is a gorpus, Wren is a rompus, and Wren is not a grimpus.", "fol": "(gorpus(Wren) & rompus(Wren) & -grimpus(Wren))", "prediction": ["(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Grimpus(x)))", "all x y z.((Wren(x) & Gorpus(x) & Rompus(y) & -Grimpus(z)) -> (Gorpus(x) & Rompus(y) & -Grimpus(z)))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Grimpus(x)))", "(all x.(Wren(x) -> Gorpus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Grimpus(z))))", "(all x y z.((Wren(x) & Gorpus(x)) -> Gorpus(x)) & ((Wren(y) & Rompus(y)) -> -Grimpus(z)))", "all x y z.((Wren(x) & Gorpus(x) & Rompus(y) & -Grimpus(z)) -> (Gorpus(x) & Rompus(y) & -Grimpus(z)))", "(all x.(Wren(x) -> Gorpus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Grimpus(z))))", "(all x y z.((Wren(x) & Gorpus(y)) -> (Gorpus(z) | Rompus(z))) & ((Wren(x) & Grimpus(z)) -> -Grimpus(x)))", "all x.(Wren(x) -> (Gorpus(x) | Rompus(x) | -Grimpus(x)))", "all x y z.((Wren(x) & Gorpus(x) & Rompus(y) & -Grimpus(z)) -> (Gorpus(x) | Rompus(y) & -Grimpus(z)))", "(all x y z.((Wren(x) & Gorpus(y)) -> Gorpus(x)) & ((Wren(z) & Rompus(z)) -> -Grimpus(z)))", "all x y z.((Wren(x) & Gorpus(y) & Rompus(z)) -> (Gorpus(x) | Rompus(x) | -Grimpus(x)))", "all x y z.((Wren(x) & Gorpus(y) & Rompus(z)) -> (Gorpus(x) & Rompus(x) & -Grimpus(x)))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Grimpus(x)))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Grimpus(x)))", "all x y z.((Wren(x) & Gorpus(x) & Rompus(y) & -Grimpus(z)) -> (Gorpus(x) | Rompus(y) & -Grimpus(z)))"]}
{"id": "prontoqa_train_308", "nl": "Every grimpus is a tumpus.", "fol": "all x. (grimpus(x) -> tumpus(x))", "prediction": ["all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Gruppus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "exists x y.(Grimpus(x) & Tumpus(y))", "all x.(Sgrimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "exists x y.(Grimpus(x) & Tumpus(y))", "all x.(Gruppus(x) -> Tumpus(x))", "(all x.(Grimpus(x) -> Tumpus(x))", "all x.(Sgrimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "exists x.(Grimpus(x) & Tumpus(x))", "all x.(Grumpsis(x) -> Tumpus(x))", "all x.(Grampus(x) -> Tumulus(x))", "all x.(Sgrimpus(x) -> Tumulus(x))"]}
{"id": "prontoqa_train_309", "nl": "Sam is a yumpus and Sam is not a tumpus and Sam is a numpus.", "fol": "(yumpus(Sam) & -tumpus(Sam) & numpus(Sam))", "prediction": ["(all x.(Yumpus(x) -> Sam(x)) & (-Tumpus(x) -> Sam(x)))", "all x y z.((Sam(x) & Yumpus(y) & Sam(z)) -> (Yumpus(x) & -Tumpus(z) & Numpus(z)))", "all x y.((Sam(x) & Yampus(x)) -> (-Tumpus(x) & Numpus(y)))", "(all x.(Sam(x) -> Yumpus(x)) & (-Sam(x) -> Tumpus(x)) & (-Sam(x) -> Numpus(x)))", "(yumpus(x) | Sam-Tumpus(x) | Sam-Numpus(x)))", "(all x y.(Yumpus(x) -> Sam(x)) & (-Tumpus(y) -> Sam(y))) & (Numpus(y) -> Sam(y)))", "(all x.(Sam(x) -> Yampus(x)) & (Sam(x) -> -Tumpus(x)) & (Sam(x) -> Numpus(x)))", "all x y z.((Sam(x) & Yumpus(y) & Sam(z)) -> (Yumpus(x) & -Tumpus(z) & Numpus(z)))", "all x y.((Sam(x) & Yumpus(x)) -> (-Tumpus(x) & Numpus(y)))", "(all x.(Yumpus(x) -> Sam(x)) & (-Tumpus(x) -> Sam(x)))", "all x.(Sam(x) -> (Yumpus(x) & -Tumpus(x) & Numpus(x)))", "(all x y.(Yumpus(x) -> Sam(x)) & (-Tumpus(y) -> Sam(y)) & (Numpus(y) -> Sam(y)))", "all x.(Yumpus(x) & -Tumpus(x) & Numpus(x))", "all x y z.((Sam(x) & Yumpus(x) & Sam(y) & -Tumpus(y)) -> (Yumpus(x) & Numpus(z)))", "exists x.(Yumpus(x) & -Tumpus(x) & Numpus(x))", "(all x.(Yumpus(x) -> Sam(x)) & (-Tumpus(x) -> Sam(x)))"]}
{"id": "prontoqa_train_310", "nl": "Sam is not a grimpus.", "fol": "-grimpus(Sam)", "prediction": ["all x.(Sam(x) -> -Grimpus(x))", "(-Grimpus(Sam))", "Sam is notGrimpus(Sam)", "(Sam isn'tGrimpus(Sam))", "all x.(Sam(x) -> -Grimpus(x))", "(-Grimpus(Sam))", "(-Grimpus(Sam) & -Grimpus(Sam))", "Sam is notGrimpus(sam).", "all x.(Sam(x) -> -Grimpus(x))", "Sam is notGrimpus.", "-Gruppus(Sam)", "-Grimpus(Sam)", "all x.(Sam(x) -> -Grimpus(x))", "(-Grimpus(Sam))", "all x.(Sam(x) -> -Grimpus(x))", "-Grimpus(sam)"]}
{"id": "prontoqa_train_311", "nl": "Rompuses are wumpuses.", "fol": "all x. (rompus(x) -> wumpus(x))", "prediction": ["all x.(Rompus(x) -> Wumpus(x))", "all x.(Rompus(x) -> Wumpus(x))", "all x y.((Rompus(x) & Wumpus(y)) -> Wumpus(x))", "(Wumpuse(rompus) & -Wumpus(rompus))", "(all x.(Rompus(x) -> Wumpus(x)))", "all x.(Rompus(x) -> Wumpus(x))", "(Wumpuse(rompus) & -Wumpus(rompus) & -Wumpus(rompus))", "all x.(Rompes(x) -> Wumpus(x))", "all x y.((Rompus(x) & Wumpus(y)) -> Wumpus(x))", "all x.(Rompe(x) -> Wumpus(x))", "all x.(Rompes(x) -> Wumpus(x))", "all x.(Rompus(x) -> Wumpus(x))", "All x.(Romes(x) -> Wumpus(x))", "all x.(Rompus(x) -> Wampus(x))", "all x.(Rompus(x) -> Wumpus(x))", "all x.(Rompus(x) -> Wampus(x))"]}
{"id": "prontoqa_train_312", "nl": "Wren is not a wumpus and Wren is a zumpus and Wren is an impus.", "fol": "(-wumpus(Wren) & zumpus(Wren) & impus(Wren))", "prediction": ["(all x.(Wren(x) -> -Wumpus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> Imperator(z))))", "all x y z.((Wren(x) & Wren(y) & Zumpus(z)) -> (-Wumpus(x) & Zumpus(y) & Imperator(z)))", "(all x y z.((Wren(x) & Wumpus(y)) -> -Wumpus(x)) & ((Wren(z) & Zumpus(z))) -> Issue(z)))", "all x y.((Wren(x) & Wren(y)) -> (-Wumpus(x) & Zumpus(y) & Imperator(y)))", "(all x.(Wren(x) -> -Wumpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Imperator(x)))", "(all x y.(Wren(x) -> -Wumpus(x)) & ((Wren(y) & Zumpus(y))) & ((Wren(y) & Imperator(y))))", "all x.(Wren(x) -> (-Wumpus(x) & Zumpus(x) & Imperator(x)))", "all x y z.((Wren(x) & Wren(y) & Zumpus(z)) -> (-Wumpus(x) & Zumpus(y) & Imperator(z)))", "(all x.(Wren(x) -> -Wumpus(x)) & all y.(Wren(y) -> Zumpus(y))) & all z.(Wren(z) -> Imperator(z)))", "exists x.(Wren(x) & -Wumpus(x) & Zumpus(x) & Imperator(x))", "all x y.((Wren(x) & Wren(y)) -> (-Wumpus(x) & Zumpus(y) & Imperator(x)))", "(all x y z.(Wren(x) -> (-Wumpus(x) & Tossus(y) & Impossible(z)))", "(all x.(Wren(x) -> -Wumpus(x)) & ((Wren(x) -> Zumpus(x)) & ((Wren(x) -> Imperator(x))))", "all x y z.((Wren(x) & Wren(y) & Zumpus(z)) -> (-Wumpus(x) & Zumpus(y) & Imperator(z)))", "all x y z.((Wren(x) & Wren(y) & Tompus(z)) -> (-Wumpus(x) & Zumpus(y) & Imperator(z)))", "(all x.(Wren(x) -> (-Wumpus(x) & Zumpus(x) & Imperator(x)))"]}
{"id": "prontoqa_train_313", "nl": "Wren is not a rompus.", "fol": "-rompus(Wren)", "prediction": ["all x.(Wren(x) -> -Rompus(x))", "(-Rompus(Wren))", "Wren is not a rompus.", "(Rompus(Wren) & -Rompus(Wren))", "all x.(Wren(x) -> -Rompus(x))", "(-Rompus(Wren))", "Wren is not a Rompus.", "(Rompus(Wren) & -Rompus(Wren))", "all x.(Wren(x) -> -Rompus(x))", "-Rompus(Wren)", "all x.(Wren(x) -> -Rompus(x))", "(-Rompus(Wren))", "-rompus.", "-Rompus(Wren)", "all x.(Wren(x) -> -Rompus(x))", "all x.(Wren(x) -> -Rompus(x))"]}
{"id": "prontoqa_train_314", "nl": "Each lorpus is a vumpus.", "fol": "all x. (lorpus(x) -> vumpus(x))", "prediction": ["all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "(all x.(Lorpus(x) -> Vumpus(x))", "exists x y.(Lorpus(x) & Vumpus(y))", "all x.(Lorpus(x) -> Vumpus(x))", "exists x y.(Lorpus(x) & Vumpus(y))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Larps(x) -> Vumpus(x))", "exists x y.(Lorpus(x) & Vumpus(y))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Voompus(x))", "exists x.(Lorpus(x) & -Vumpus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Larp(x) -> Vampus(x))", "all x.(Lorpus(x) -> Vulpis(x))"]}
{"id": "prontoqa_train_315", "nl": "Wren is a grimpus, Wren is a zumpus, and Wren is not a vumpus.", "fol": "(grimpus(Wren) & zumpus(Wren) & -vumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Grimpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> -Vumpus(x)))", "all x y z.((Wren(x) & Grimpus(x) & Zumpus(y) & -Vumpus(z)) -> (Grimpus(x) & Zumpus(y) & -Vumpus(z)))", "(all x.(Wren(x) -> Grimpus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> -Vumpus(z))))", "(all x y z.(Wren(x) -> Grimpus(x)) & ((Wren(y) & Zumpus(y)) -> -Vumpus(z)))", "(all x y z.((Wren(x) & Grimpus(y)) -> (Grimpus(z) | Zumpus(z))) & ((Wren(x) & -Vumpus(x)) -> (Vumpus(x) & -Grimpus(x))))", "all x.(Wren(x) -> (Grimpus(x) | Zumpus(x) | -Vumpus(x)))", "all x y z.((Wren(x) & Grimpus(y) & Zumpus(z)) -> (Grimpus(x) | Zumpus(x) | -Vumpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> -Vumpus(x)))", "(all x y z.((Wren(x) & Grimpus(x)) -> Tompus(y)) & ((Wren(z) & -Vumpus(z)) -> Grimpus(z)))", "all x y z.((Wren(x) & Grimpus(x) & Wren(y) & Zumpus(y)) -> (Frostpus(x) & -Vumpus(z)))", "all x y z.((Wren(x) & Grimpus(y) & Zumpus(z)) -> (Grimpus(x) & -Vumpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> -Vumpus(z))))", "all x y z.((Wren(x) & Grumpus(y) & Zumpus(z)) -> (Grimpus(x) | Zumpus(z) | -Vumpus(z)))", "(all x y z.((Wren(x) & Grimpus(y)) -> (Smooth(x) & Zumpus(y))) & ((Wren(z) & -Vumpus(z)) -> (-Smooth(z))))", "all x y z.((Wren(x) & Grumpy(x) & Zumpus(y) & -Vumpus(z)) -> (Grimpus(x) | Zumpus(y) | -Grimpus(z)))", "(all x.(Wren(x) -> Grimpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> -Vumpus(x)))"]}
{"id": "prontoqa_train_316", "nl": "Wren is not a lorpus.", "fol": "-lorpus(Wren)", "prediction": ["all x.(Wren(x) -> -Lorpus(x))", "(-Lorpus(Wren))", "Wren is not a lorpus.", "all x.(Wren(x) -> -Lorpus(x))", "(-Lorpus(Wren))", "all x.(Wren(x) -> -Lorpus(x))", "(Lorpus(wren) & -Lorpus(wren))", "-Lorpus(Wren)", "all x.(Wren(x) -> -Lorpus(x))", "(-Lorpus(Wren))", "-Lorpus(Wren)", "all x.(Wren(x) -> -Lorpus(x))", "(-Lorpus(Wren))", "all x.(Wren(x) -> -Lorpus(x))", "-Lorpus(wren)", "all x.(Wren(x) -> -Lorpus(x))"]}
{"id": "prontoqa_train_317", "nl": "Brimpuses are lorpuses.", "fol": "all x. (brimpus(x) -> lorpus(x))", "prediction": ["all x.(Brimpus(x) -> Lorpus(x))", "all x.(Brompus(x) -> Lorpus(x))", "(Lorpuse(brimpus) & -Lorpuse(brimpus))", "all x y.((Brimpus(x) & Lorpus(y)) -> Is(x,y))", "all x.(Brimpus(x) -> Loomis(x))", "all x y.((Brompus(x) & Lorpus(y)) -> (Lorpus(x) & -Lorpus(x)))", "all x.(Brimpus(x) -> Lorpus(x))", "(Lorpuse(brimpus) & -Lorpus(brimpus))", "all x.(Brompus(x) -> Lorpus(x))", "all x y.((Brimpus(x) & Lorpus(y)) -> Is(x,y))", "all x.(Brimpus(x) -> Lorpuse(x))", "all x.(Brimpus(x) -> Loomis(x))", "all x.(Brumpus(x) -> Lorpus(x))", "all x.(Brompus(x) -> Lorpuse(x))", "all x.(Brimuse(x) -> Loomis(x))", "All x.(Brompus(x) -> Lompus(x))"]}
{"id": "prontoqa_train_318", "nl": "Rex is a shumpus, Rex is not a lorpus, and Rex is a jompus.", "fol": "(shumpus(Rex) & -lorpus(Rex) & jompus(Rex))", "prediction": ["all x y z.((Rex(x) & Shumpus(y) & -Lorpus(z)) -> (Shumpus(x) & Jompus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (-Lorpus(x) & (Jompus(x))))", "(all x y z.((Rex(x) & Humpus(y)) -> Shumpus(x)) & ((Rex(z) & -Lorpus(z))) -> Jompus(z)))", "(all x.(Rex(x) -> Humpus(x)) & (-Lorpus(x) & (Jompus(x) | Shumpus(x))))", "(all x.(Rex(x) -> Shumpus(x)) & (Rex(x) -> -Lorpus(x)) & (Rex(x) -> Jompus(x)))", "all x y z.((Rex(x) & Shumpus(y) & Lorpus(z)) -> (Shumpus(x) & -Lorpus(y) & Jompus(z)))", "(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> -Lorpus(x)) & (Rex(x) -> Jompus(x)))", "(all x y z.((Rex(x) & Humpback(y)) -> Shumpus(x)) & ((Rex(z) & -Lorpus(z))) -> Jompus(z)))", "all x.(Rex(x) -> (Shumpus(x) & -Lorpus(x) & Jompus(x)))", "(all x y z.((Rex(x) & Humpback(y) & -Lorpus(z)) -> Shumpus(x)) & ((Rex(x) & -Lorpus(x)) -> Jompus(x)))", "(all x.(Rex) -> Shumpus(x)) & (Rex(x) -> -Lorpus(x)) & (Rex(x) -> Jompus(x)))", "all x y z.((Rex(x) & Shumpus(y) & -Lorpus(z)) -> (Shumpus(x) & Jompus(x)))", "all x y z.((Rex(x) & Humpus(y) & Lorpus(z)) -> (Shumpus(x) & -Lorpus(y) & Jompus(z)))", "all x y z.((Rex(x) & Shumpus(y) & Lorpus(z)) -> (Shumpus(x) & -Lorpus(y) & Jompus(z)))", "all x.(Rex(x) -> (Shumpus(x) & -Lorpus(x) & Jompus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (-Lorpus(x) & -Jompus(x)))"]}
{"id": "prontoqa_train_319", "nl": "Rex is not a brimpus.", "fol": "-brimpus(Rex)", "prediction": ["all x.(Rex(x) -> -Brimpus(x))", "(-Brimpus(Rex))", "Rex is not a Brimpus.", "all x.(Rex(x) -> -Brimpus(x))", "-Brimpus(Rex)", "Rex is not a Brimpus.", "(Brimpus(Rex) & -Brimpus(Rex))", "Rex is not a brimpus.", "Rex -Brimpus(Rex)", "(-Brimpus(Rex))", "all x.(Rex(x) -> -Brimpus(x))", "Rex is not a Brimpus.", "-Brumpus(Rex)", "all x.(Rex(x) -> -Brumpus(x))", "(-Brimpus(Rex))", "-Brumpus(rex)"]}
{"id": "prontoqa_train_320", "nl": "Yumpuses are impuses.", "fol": "all x. (yumpus(x) -> impus(x))", "prediction": ["all x.(Yumpus(x) -> Issue(x))", "(Issue(y) & Yumpus(z))", "all x.(Yumpus(x) -> Issue(x))", "all x y.((Yumpus(x) & Issue(y)) -> Issue(x,y))", "all x.(Yumpus(x) -> Impects(x))", "All x y.((Yumpuse(x) & Issue(y)) -> Issue(x,y))", "All x y.((Yumpus(x) & Issue(y)) -> Issue(x,y))", "(Issues(yumpus) & Issues(y))", "all x.(Umpresses(x) -> Issues(x))", "all x.(Yumpus(x) -> Issue(x))", "all x.(Yumpus(x) -> Impermissible(x))", "all x.(Umpteen(x) -> Issue(x))", "all x.(Umpus(x) -> Issues(x))", "all x.(Yumpus(x) -> Imperium(x))", "all x.(Yumpus(x) -> Impose(x))", "all x.(Yumpuse(x) -> Impermissible(x))"]}
{"id": "prontoqa_train_321", "nl": "Max is a rompus, Max is not an impus, and Max is a lorpus.", "fol": "(rompus(Max) & -impus(Max) & lorpus(Max))", "prediction": ["(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Lorpus(x)))", "all x y z.((Max(x) & Rompus(y) & Impossible(z)) -> (Rompus(x) & -Impossible(x) & Lorpus(x)))", "(all x y z.((Max(x) & Rompus(y)) -> (Rompus(x) & -Impossible(y)) & ((Max(z) & Lorpus(z)) -> (Lorpus(z)))))", "all x y z.((Max(x) & Rompus(y) & Is(z)) -> (Rompus(x) & -Impossible(z) & Lorpus(x)))", "all x.(Max(x) -> (Rompus(x) & -Impossible(x) & Lorpus(x)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Lorpus(x)))", "all x y z.((Max(x) & Rompus(x) & Max(y) & IsNotImpossible(y) & Max(z)) -> (Lorpus(z)))", "(all x.(Max(x) -> Rompus(x)) & all y.(Max(y) -> -Impossible(y))) & all z.(Max(z) -> Lorpus(z)))", "(all x y z.((Max(x) & Rompus(y) & -Impossible(z)) -> (Rompus(x) | Impossible(z)) | Lorpus(z)))", "(all x y z.((Max(x) & Rompus(x)) -> (Rompus(x) & -Impossible(y))) & ((Max(z) & Lorpus(z)) -> (Lorpus(z))))", "all x.(Max(x) -> (Rompus(x) & -Impossible(x) & Lorpus(x)))", "all x y z.((Max(x) & Rompus(x) & Max(y) & Impossible(y) & Lorpus(z)) -> (Rompus(x) & -Impossible(y) & -Lorpus(z)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Lorpus(x)))", "all x y z.((Max(x) & Rompus(y) & Impossible(z)) -> (Rompus(x) & -Impossible(x) & -Lorpus(x)))", "(all x.(Max(x) -> Rompus(x)) & all y.(Max(y) -> -Impossible(y))) & all z.(Max(z) -> Lorpus(z)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Lorpus(x)))"]}
{"id": "prontoqa_train_322", "nl": "Max is not a yumpus.", "fol": "-yumpus(Max)", "prediction": ["(-Yumpus(Max))", "all x.(Max(x) -> -Yumpus(x))", "-Yumpus(Max)", "all x.(Max(x) -> -Yumpus(x))", "(yumpus(Max) & -Yumpus(Max))", "Max is notYumpus(Max)", "Max is notyumpus.", "(-Yumpus(Max))", "all x.(Max(x) -> -Yumpus(x))", "-yumpus(Max)", "all x.(Max(x) -> -Yumpus(x))", "(-Yumpus(Max))", "-yumpus.", "-yumpus.", "(-Yumpus(Max)", "-Yumpus(Max)"]}
{"id": "prontoqa_train_323", "nl": "Each rompus is a vumpus.", "fol": "all x. (rompus(x) -> vumpus(x))", "prediction": ["all x.(Rompus(x) -> Vumpus(x))", "all x.(Rompus(x) -> Vumpus(x))", "all x y.((Rompus(x) & Vumpus(y)) -> Is(x,y))", "(all x.(Rompus(x) -> Vumpus(x))", "all x.(rompus(x) -> Vumpus(x))", "all x.(Rompus(x) -> Vumpus(x))", "all x y.((Rompus(x) & Vumpus(y)) -> Has(x,y))", "exists x.(rompus(x) & Vumpus(x))", "all x.(Rompus(x) -> Vumpus(x))", "all x y.((Rompus(x) & Vumpus(y)) -> -Vumpus(x))", "exists x.(Romesue(x) & Vumpus(x))", "exists x.(rompus(x) & Vumpus(x))", "all x.(Rompus(x) -> Vumpus(x))", "all x.(Rompus(x) -> Voompus(x))", "exists x.(rompus(x) & Vumpus(x))", "all x.(Rompus(x) -> Vumpus(x))"]}
{"id": "prontoqa_train_324", "nl": "Fae is a wumpus, Fae is not a vumpus, and Fae is an impus.", "fol": "(wumpus(Fae) & -vumpus(Fae) & impus(Fae))", "prediction": ["(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Vumpus(x)) & (Fae(x) -> Imperator(x)))", "all x y z.((Fae(x) & Wumpus(y) & Vumpus(z)) -> (Wumpus(x) & -Vumpus(x) & Imperator(x)))", "(all x y z.((Fae(x) & Wumpus(y)) -> Wumpus(x)) & ((Fae(z) & -Vumpus(z))) -> Imperator(z)))", "all x y z.((Fae(x) & Fae(y) & Imperator(z)) -> (Wumpus(x) & -Vumpus(y) & Imperator(z)))", "(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Vumpus(x)) & (Fae(x) -> Imperator(x)))", "(all x.(Fae(x) -> Wumpus(x)) & all y.(Fae(y) -> -Vumpus(y))) & all z.(Fae(z) -> Imperator(z)))", "(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Vumpus(x)) & (Fae(x) -> Imperator(x)))", "(all x y.(Fae(x) -> Wumpus(x)) & (Fae(y) -> -Vumpus(y)) & (Fae(y) -> Imperator(y)))", "all x.(Fae(x) -> (Wumpus(x) & -Vumpus(x) & Imperator(x)))", "all x y z.((Fae(x) & Wumpus(y) & Vumpus(z)) -> (Wumpus(x) & -Vumpus(y) & Imperator(z)))", "all x y z.(Fae(x) & Wumpus(x) & Fae(y) & Vumpus(z) & Imperator(x))", "(all x y z.((Fae(x) & Wumpus(y)) -> Wumpus(x)) & ((Fae(z) & -Vumpus(z))) -> Imperative(z)))", "all x y z.(Wumpus(x) & Fae(y) & Imperator(z)) -> (Wumpus(y) & -Vumpus(y) & Imperator(z)))", "(all x.(Fae(x) -> Wumpus(x)) & all y.(Fae(y) -> -Vumpus(y))) & all z.(Fae(z) -> Issue(z)))", "all x.(Fae(x) -> (Wumpus(x) & -Vumpus(x) & IsFae(x)))", "(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Vumpus(x)) & (Fae(x) -> Impossible(x)))"]}
{"id": "prontoqa_train_325", "nl": "Fae is not a rompus.", "fol": "-rompus(Fae)", "prediction": ["(-Rompus(Fae))", "all x.(Fae(x) -> -Rompus(x))", "(Rompus(Fae) & -Rompus(Fae))", "Fae is not a rompus.", "-Rompus(Fae)", "all x.(Fae(x) -> -Rompus(x))", "(Rompus(Fae) & -Rompus(Fae))", "(-Rompus(Fae))", "-rompus(Fae)", "(Rompus(Fae) & -Rompus(Fae))", "all x.(Fae(x) -> -Rompus(x))", "-Rompus(Fae)", "(Rompus(Fae) & -Rompus(Fae))", "all x.(Fae(x) -> -Rompus(x))", "-Rompus(Fae)", "-Rompus(fae,f)"]}
{"id": "prontoqa_train_326", "nl": "Each rompus is a yumpus.", "fol": "all x. (rompus(x) -> yumpus(x))", "prediction": ["all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yumpus(x))", "(all x.(Rompus(x) -> Yumpus(x))", "all x y.((Rompus(x) & Yampus(y)) -> Has(x,y))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yampus(x))", "all x y.((Rompus(x) & Yampus(y)) -> Has(x,y))", "exists x.(rompus(x) & Yampus(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yumpus(x))", "exists x.(rompus(x) & Yampus(x))", "all x.(Rompus(x) -> Yampus(x))", "exists x.(rompus(x) & Yumpus(x))", "exists x.(rompus(x) & Yampus(x))", "all x.(Rompus(x) -> Yumpa(x))"]}
{"id": "prontoqa_train_327", "nl": "Stella is a brimpus and Stella is an impus and Stella is not a yumpus.", "fol": "(brimpus(Stella) & impus(Stella) & -yumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Brimpus(x)) & all y.(Stella(y) -> Issue(y))) & all z.(Stella(z) -> -Yumpus(z))))", "all x y z.((Stella(x) & Brimpus(x) & Stella(y) & Imperator(y)) -> (Brimpus(x) & Imperator(y) & -Yumpus(z)))", "all x y.((Stella(x) & Brimpus(x) & Stella(y)) -> (Impossible(y) & -Yumpus(y)))", "(all x.(Stella(x) -> Brimpus(x)) & (Stella(x) -> Issue(x)) & (Stella(x) -> -Yumpus(x)))", "(all x y.((Stella(x) & Brimpus(x)) -> Issue(x)) & ((Stella(y) & -Yumpus(y)) -> Issue(y)))", "all x y z.((Stella(x) & Brimpus(x) & Stella(y) & Issue(y)) -> (Brimpus(x) & Issue(y) & -Yumpus(z)))", "(all x y z.((Stella(x) & Brimpus(x)) -> (Brimpus(x) & Issue(y))) & ((Stella(z) & Yumpus(z)) -> -Yumpus(z)))", "all x.(Stella(x) -> (Brimpus(x) & Issue(x) & -Yumpus(x)))", "exists x.(Stella(x) & Brimpus(x) & Is(x) & -Yumpus(x))", "(all x.(Stella(x) -> Brimpus(x)) & all y.(Stella(y) -> Issue(y))) & all z.(Stella(z) -> -Yumpus(z))))", "(all x y.(Brimpus(x) -> Stella(x)) & (Impossible(y) -> Stella(y)))", "(all x.(Stella(x) -> Brimpus(x)) & (Stella(x) -> Imperator(x)) & (Stella(x) -> -Yumpus(x)))", "all x y z.((Stella(x) & Brimpus(x) & Stella(y) & Impossible(y) & -Yumpus(z)) -> (Brimpus(x) & Impossible(y) & -Yumpus(z)))", "all x y.((Stella(x) & Brimpus(x) & Stella(y)) -> (Impossible(y) & -Yumpus(y)))", "all x.(Stella(x) -> (Brimpus(x) & Issuel(x) & -Yumpus(x)))", "(all x.(Stella(x) -> Brimpus(x)) & all y.(Stella(y) -> Imperator(y))) & all z.(Stella(z) -> -Yumpus(z)))"]}
{"id": "prontoqa_train_328", "nl": "Each brimpus is a zumpus.", "fol": "all x. (brimpus(x) -> zumpus(x))", "prediction": ["all x.(Brimpus(x) -> Zumpus(x))", "all x.(Brimpus(x) -> Zumpus(x))", "all x y.((Brimpus(x) & Zumpus(y)) -> HasBrompus(x,y))", "(all x.(Brimpus(x) -> Zumpus(x))", "all x.(Brumpus(x) -> Zumpus(x))", "all x y.((Brimpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Brimpus(x) -> Zumpus(x))", "all x y.((Brumpus(x) & Zumpus(y)) -> HasBrompus(x,y))", "all x.(Brumpus(x) -> Zumpus(x))", "all x.(Brimpus(x) -> Zumpus(x))", "all x.(Brumpus(x) -> Zumpus(x))", "all x.(Brimpus(x) -> Zumpus(x))", "all x.(Brumpus(x) -> Zumpus(x))", "exists x.(Brimpus(x) & Zurpus(x))", "exists x.(Brimpus(x) & Zumpus(x))", "exists x.(Brampus(x) & Zurpus(x))"]}
{"id": "prontoqa_train_329", "nl": "Max is a rompus, Max is not a zumpus, and Max is a wumpus.", "fol": "(rompus(Max) & -zumpus(Max) & wumpus(Max))", "prediction": ["(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Zumpus(x)) & (Max(x) -> Wumpus(x)))", "all x y z.((Max(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & -Zumpus(x) & Wumpus(x)))", "(all x y z.((Max(x) & Rompus(y)) -> (Rompus(x) & -Zumpus(y)) & ((Max(z) & Zumpus(z)) -> Wumpus(z))))", "all x.(Max(x) -> (Rompus(x) & -Zumpus(x) & Wumpus(x)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Zumpus(x)) & (Max(x) -> Wumpus(x)))", "all x y z.((Max(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & -Tompus(y) & Wumpus(z)))", "(all x y z.((Max(x) & Rompus(y) & -Zumpus(z)) -> Rompus(x)) & ((Max(x) & -Zumpus(x)) -> Wumpus(x)))", "all x y z.((Max(x) & Rompus(x) & Max(y) & Zumpus(z)) -> (Rompus(x) & -Zumpus(y) & Wumpus(z)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Tompus(x))) & (Max(x) -> Wumpus(x)))", "all x y z.((Max(x) & Tompus(y) & Wumpus(z)) -> (Rompus(x) | -Tompus(y) | (Tompus(z) & Tompus(z)))))", "all x y z.((Max(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) | Wumpus(x)))", "(all x y z.((Max(x) & Rompus(y)) -> (Rompus(z) | -Zumpus(z))) & ((Max(x) & Wumpus(x)) -> (Wumpus(x))))", "all x.(Max(x) -> (Rompus(x) & -Zumpus(x) & Wumpus(x)))", "(all x.(Max(x) -> Rompus(x)) & all y.(Max(y) -> -Zumpus(y))) & all z.(Max(z) -> Wumpus(z)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Zumpus(x)) & (Max(x) -> Wumpus(x)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Tompus(x)) & (Max(x) -> Wumpus(x)))"]}
{"id": "prontoqa_train_330", "nl": "Each lorpus is a brimpus.", "fol": "all x. (lorpus(x) -> brimpus(x))", "prediction": ["all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x y.((Lorpus(x) & Brimpus(y)) -> Has(x,y))", "(all x.(Lorpus(x) -> Brimpus(x)))", "all x.(Lorpus(x) -> Brimpus(x))", "all x y.((Lorpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Lorpus(x) -> Brimpus(x))", "exists x.(lorpus(x) & Brimpus(x))", "all x y.((Lorpus(x) & Brimpus(y)) -> Contains(x,y))", "all x.(Lorpus(x) -> Brimpus(x))", "exists x.(Lorph(x) & Brimpus(x))", "exists x.(lorpus(x) & Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_331", "nl": "Wren is a lempus and Wren is a tumpus and Wren is not a brimpus.", "fol": "(lempus(Wren) & tumpus(Wren) & -brimpus(Wren))", "prediction": ["(all x.(Wren(x) -> Lempus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Brimpus(x)))", "all x y z.((Wren(x) & Lempus(x) & Tumpus(y) & -Brimpus(z)) -> (Lempus(x) & Tumpus(y) & -Brimpus(z)))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "all x y.((Wren(x) & Lempus(x) & Tumpus(y)) -> (Lempus(x) & Tumpus(y) & -Brimpus(x)))", "(all x y z.((Wren(x) & Lempus(x)) -> (Lempus(x) & Tumpus(y))) & ((Wren(z) & -Brimpus(z)) -> (Tumpus(z) & -Lempus(z))))", "all x y z.((Wren(x) & Lempus(x) & Tumpus(y) & -Brimpus(z)) -> (Lempus(x) & Tumpus(y) & -Brimpus(z)))", "all x.(Wren(x) -> (Lempus(x) & Tumpus(x) & -Brimpus(x)))", "(all x y.(Wren(x) -> Lempus(x)) & (Wren(y) -> Tumpus(y)) & (Wren(y) -> -Brimpus(y)))", "(all x.(Wren(x) -> Lempus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Brimpus(x)))", "all x y z.((Wren(x) & Lempus(x) & Tumpus(y) & Brimpus(z)) -> (Lempus(x) & Tumpus(y) & -Brimpus(z)))", "(all x y z.(Wren(x) -> (Lempus(x) & Tumpus(y))) & (Wren(z) -> -Brimpus(z)))", "all x y z.((Wren(x) & Lempus(x) & Tumpus(y) & -Brimpus(z)) -> (Lempus(x) & Tumpus(y) & -Brimpus(z)))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "all x y.((Wren(x) & Lempus(x) & Tumpus(y)) -> (Lempus(x) & Tumpus(y) & -Brimpus(x)))", "all x.(Wren(x) -> (Lempus(x) & Tumpus(x) & -Brimpus(x)))", "(all x.(Wren(x) -> Lempus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Brimpus(x)))"]}
{"id": "prontoqa_train_332", "nl": "Alex is a shumpus, Alex is not a numpus, and Alex is a wumpus.", "fol": "(shumpus(Alex) & -numpus(Alex) & wumpus(Alex))", "prediction": ["(all x.(Alex(x) -> Humpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Wumpus(x)))", "all x y z.((Alex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Wumpus(z)))", "(all x.(Alex(x) -> Shumpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Wumpus(x)))", "all x y z.((Alex(x) & Shumpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Wumpus(z)))", "all x y z.((Alex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Wumpus(z)))", "all x.(Alex(x) -> (Shumpus(x) & -Numpus(x) & Wumpus(x)))", "(all x y z.(Alex(x) -> Shumpus(x)) & ((Alex(y) & -Numpus(y)) & ((Alex(z) & Wumpus(z)))))", "(all x.(Alex(x) -> Humpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Wumpus(x)))", "(all x y z.((Alex(x) & Humpus(y)) -> Shumpus(x)) & ((Alex(z) & -Numpus(z)) -> Wumpus(z)))", "(all x.(Alex(x) -> Shumpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Wumpus(x)))", "all x.(Alex(x) -> (Shumpus(x) | -Numpus(x) | Wumpus(x)))", "all x y z.((Alex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) | Wumpus(x)))", "(all x.(Alex(x) -> Humpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Wumpus(x)))", "all x.(Alex(x) -> (Shumpus(x) & -Numpus(x) & Wumpus(x)))", "all x y z.((Alex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Wumpus(z)))", "(all x.(Alex(x) -> Shumpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Wumpus(x)))"]}
{"id": "prontoqa_train_333", "nl": "Yumpuses are lempuses.", "fol": "all x. (yumpus(x) -> lempus(x))", "prediction": ["all x.(Yumpus(x) -> Lempuse(x))", "all x.(Yumpus(x) -> Lempuse(x))", "all x y.((Yumpus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Yumpus(x) -> Lempuse(x))", "(all x.(Yumpus(x) -> Lempuse(x)))", "all x y.((Yumpus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Umpuse(x) -> Lempuse(x))", "all x.(Yumpus(x) -> Lempuse(x))", "all x y.((Yumpus(x) & Lempuse(y)) -> Lempuse(x))", "All x.(Umpouse(x) -> Lempuse(x))", "all x.(Umpuse(x) -> Lempuse(x))", "all x.(Yumpus(x) -> Lempuse(x))", "all x.(Yumpus(x) -> Lempuse(x))", "all x.(Yumpus(x) -> Lempus(x))", "All x.(Yumpus(x) -> Lempuse(x))", "ALL X.(Yumpus(x) -> Lempus(x))"]}
{"id": "prontoqa_train_334", "nl": "Alex is a zumpus and Alex is not a lempus and Alex is a wumpus.", "fol": "(zumpus(Alex) & -lempus(Alex) & wumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Zumpus(x) & Alex(y) & Lempus(z)) -> (-Lempus(y) & Wumpus(y)))", "all x.(Alex(x) -> (Tompus(x) & -Lempus(x) & Wumpus(x)))", "(all x.(Alexa(x) -> Zumpus(x)) & (Alexa(x) -> -Lempus(x)) & (Alexa(x) -> Wumpus(x)))", "all x y.((Alex(x) & Zumpus(x)) -> (-Lempus(y) & Wumpus(x)))", "all x y z.((Alex(x) & Zumpus(x) & Alex(y) & Lempus(z)) -> (-Lempus(y) & Wumpus(z)))", "(all x.(Alexa(x) -> Zumpus(x)) & all y.(Alexa(y) -> -Lempus(y)) & all z.(Alexa(z) -> Wumpus(z))))", "exists x.(Alex(x) & Zumpus(x) & -Lempus(x) & Wumpus(x))", "(all x.(Alexa(x) -> Zumpus(x)) & (Alexa(x) -> -Lempus(x)) & (Alexa(x) -> Wumpus(x)))", "(all x y z.(Alex(x) -> Zumpus(x)) & (Alex(y) -> -Lempus(y)) & (Alex(z) -> Wumpus(z)))", "all x.(Alex(x) -> (Tompus(x) & -Lempus(x) & Wumpus(x)))", "(all x y.(Alex(x) -> Zumpus(x)) & (Alex(y) -> -Lempus(y)) & (Alex(y) -> Wumpus(y)))", "(all x.(Alexa(x) -> Zumpus(x)) & (Alexa(x) -> -Lempus(x)) & (Alexa(x) -> Wumpus(x)))", "all x y.((Alex(x) & Zumpus(x)) -> (-Lempus(x) & Wumpus(y)))", "all x y z.((Alex(x) & Zumpus(x) & Alex(y) & Lempus(z)) -> (-Lempus(y) & Wumpus(y)))", "all x.(Alex(x) -> (Tompus(x) & -Lempus(x) & Wumpus(x)))", "(all x.(Alexa(x) -> Zumpus(x)) & (Alexa(x) -> -Lempus(x)) & (Alexa(x) -> Wumpus(x)))"]}
{"id": "prontoqa_train_335", "nl": "Shumpuses are lempuses.", "fol": "all x. (shumpus(x) -> lempus(x))", "prediction": ["all x.(Shumpuse(x) -> Lempuse(x))", "all x.(Shupuse(x) -> Lempuse(x))", "all x y.((Shupuse(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Shampoo(x) -> Lempuse(x))", "(all x.(Shuppuse(x) -> Lempuse(x)))", "(Lempuse(shm) & Lempuse(shm) & Lempuse(shm))", "all x.(Shumpuse(x) -> Lempuse(x))", "all x y.((Shumpuse(x) & Lempuse(y)) -> Lempuse(x))", "all x y.((Shupuse(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Shampoos(x) -> Lempuse(x))", "all x.(Shumpsue(x) -> Lempuse(x))", "all x.(Shupuse(x) -> Lempuse(x))", "all x.(Shampoos(x) -> Lempuse(x))", "(all x.(Shupuse(x) -> Lempuse(x))", "all x.(Shumpus(x) -> Lempuse(x))", "all x.(Shuppe(x) -> Lempuse(x))"]}
{"id": "prontoqa_train_336", "nl": "Stella is a sterpus and Stella is not a lempus and Stella is a zumpus.", "fol": "(sterpus(Stella) & -lempus(Stella) & zumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Sterpus(x)) & (Stella(x) -> -Lempus(x)) & (Stella(x) -> Zumpus(x)))", "all x y z.((Stella(x) & Sterpus(x) & Stella(y) & Zumpus(z)) -> (-Lempus(y) & -Stella(z)))", "(all x y.((Stella(x) & Sterpus(x)) -> Sterpus(x)) & ((Stella(y) & -Lempus(y))) -> Zumpus(y)))", "all x y.((Stella(x) & Sterpus(x)) -> (-Lempus(y) & Zumpus(y)))", "(all x y z.((Stella(x) & Sterpus(y)) -> (Sterpus(x) & -Lempus(y)) & ((Stella(z) & Zumpus(z)) -> Zumpus(z))))", "(all x.(Stella(x) -> Sterpus(x)) & (Stella(x) -> -Lempus(x)) & (Stella(x) -> Zumpus(x)))", "(all x y.(Stella(x) -> Sterpus(x)) & ((Stella(y) & -Lempus(y))) | (Stella(y) & Zumpus(y))))", "all x.(Stella(x) -> (Sterpus(x) & -Lempus(x) & Zumpus(x)))", "all x y z.((Stella(x) & Sterpus(x) & Stella(y) & Lempus(z)) -> (-Lempus(y) & Zumpus(y)))", "(all x.(Stella(x) -> Sterepus(x)) & (-Lempus(x) & -Zumpus(x)))", "exists x.(Stella(x) & Sterpus(x) & -Lempus(x) & Zumpus(x))", "(all x.(Stella(x) -> Sterepus(x)) & all y.(Stella(y) -> -Lempus(y))) & all z.(Stella(z) -> Zumpus(z)))", "all x y.((Stella(x) & Sterepus(x) & Stella(y)) -> (-Lempus(y) & Zumpus(y)))", "all x y z.((Stella(x) & Sterepus(y) & Lempus(z)) -> (Sterpus(x) & -Lempus(y) & Zumpus(z)))", "all x.(Stella(x) -> (Sterpus(x) & -Lempus(x) & Zumpus(x)))", "(all x.(Stella(x) -> Sterpus(x)) & (Stella(x) -> -Lempus(x)) & (Stella(x) -> Zumpus(x)))"]}
{"id": "prontoqa_train_337", "nl": "Stella is not a shumpus.", "fol": "-shumpus(Stella)", "prediction": ["Stella is not a shumpus.", "all x.(Stella(x) -> -Shumpus(x))", "(-Shumpus(Stella))", "Stella is not a shumpus.", "all x.(Stella(x) -> -Shumpus(x))", "(-Shumpus(Stella))", "Stella is notShumpus(Stella)", "Stella -Shumpus(Stella)", "Stella is not a shumpus.", "all x.(Stella(x) -> -Shumpus(x))", "(-Shumpus(Stella))", "-Shumpus(Stella)", "Stella -Shumpus(s)", "Stella is not a shumpus.", "(-Shumpus(Stella))", "-Shumpus(Stella)"]}
{"id": "prontoqa_train_338", "nl": "Every yumpus is a rompus.", "fol": "all x. (yumpus(x) -> rompus(x))", "prediction": ["all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x y.((Yumpus(x) & Rompus(y)) -> Has(x,y))", "(all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x y.((Yumpus(x) & Rompus(y)) -> Is(x,y))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "exists x.(yumpus(x) & Yumpus(y) & Rompus(x))", "exists x.(yumpus(x) & Rumpus(y) & HasYumpus(x,y))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "exists x.(Yumpus(x) & Roman(x))"]}
{"id": "prontoqa_train_339", "nl": "Fae is a sterpus, Fae is not a rompus, and Fae is a numpus.", "fol": "(sterpus(Fae) & -rompus(Fae) & numpus(Fae))", "prediction": ["(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Numpus(x)))", "(all x y z.((Fae(x) & Sterpus(y)) -> (Sterpus(z) & -Rompus(z)) & ((Fae(x) & Numpus(x)) -> Numpus(x)))", "all x y z.((Fae(x) & Sterpus(y) & Rompus(z)) -> (-Rompus(x) & Numpus(x)))", "(all x y z.((Fae(x) & Sterpus(y) & -Rompus(z)) -> Sterpus(x)) & ((Fae(x) & -Rompus(x)) -> Numpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Numpus(x)))", "all x y z.((Fae(x) & Sterpus(y) & Rompus(z)) -> (Sterpus(x) & -Rompus(y) & Numpus(z)))", "all x.(Fae(x) -> (Sterpus(x) & -Rompus(x) & Numpus(x)))", "all x y z.((Fae(x) & Sterpus(x) & Fae(y) & Rompus(z)) -> (-Rompus(y) & Numpus(z)))", "all x y z.(Fae(x) & Sterpus(x) & -Rompus(y) & Numpus(z))", "(all x y z.((Fae(x) & Sterepus(y)) -> Sterpus(x)) & ((Fae(z) & -Rompus(z))) -> Numpus(z)))", "(all x.(Fae(x) -> Sterepus(x)) & all y.(Fae(y) -> -Rompus(y)) & all z.(Fae(z) -> Numpus(z))))", "(all x.(Fae(x) -> Sterepus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Numpus(x)))", "all x y z.(Fae(x) -> (Sterpus(x) & -Rompus(y) & Numpus(z)))", "all x.(Fae(x) -> (Sterpus(x) & -Rompus(x) & Numpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Numpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Numpus(x)))"]}
{"id": "prontoqa_train_340", "nl": "Fae is not a yumpus.", "fol": "-yumpus(Fae)", "prediction": ["all x.(Fae(x) -> -Yumpus(x))", "(-Yumpus(Fae))", "(Yumpus(Fae) & -Yumpus(Fae))", "-Yumpus(Fae)", "all x.(Fae(x) -> -Yumpus(x))", "(-Yumpus(Fae))", "(Yumpus(Fae) & -Yumpus(Fae))", "all x.(Fae(x) -> -Yumpus(x))", "(yumpus)", "-Yumpus(Fae)", "-Yumpus(Fae)", "all x.(Fae(x) -> -Yumpus(x))", "(yumpus)", "-Yumpus(fae)", "-yumpus.", "-Yumpus(Fae)"]}
{"id": "prontoqa_train_341", "nl": "Fae is a wumpus, Fae is not a gorpus, and Fae is a vumpus.", "fol": "(wumpus(Fae) & -gorpus(Fae) & vumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Gorpus(x)) & (Fae(x) -> Vumpus(x)))", "all x y z.((Fae(x) & Wumpus(y) & Gorpus(z)) -> (Wumpus(x) & -Gorpus(y) & Vumpus(z)))", "(all x y z.((Fae(x) & Wumpus(y)) -> Wumpus(x)) & ((Fae(z) & -Gorpus(z))) -> Vumpus(z)))", "(all x y z.((Fae(x) & Wumpus(y)) -> (Wumpus(x) & -Gorpus(y)) & ((Fae(z) & Vumpus(z)) -> (Vumpus(z))))", "(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Gorpus(x)) & (Fae(x) -> Vumpus(x)))", "all x y z.((Fae(x) & Wumpus(x) & Fae(y) & Gorpus(z)) -> (Wumpus(x) & -Gorpus(y) & Vumpus(y)))", "all x y z.((Fae(x) & Wumpus(y) & Gorpus(z)) -> (Wumpus(x) & -Gorpus(y) & Vumpus(z)))", "(all x.(Fae(x) -> Wumpus(x)) & all y.(Fae(y) -> -Gorpus(y)) & all z.(Fae(z) -> Vumpus(z))))", "all x y z.(Wumpus(x) & Wumpus(y) & Gorpus(z) & Vumpus(z))", "(all x y.(Wumpus(x) -> Fae(x)) & (-Gorpus(y) -> Fae(x)) & (Vumpus(y) -> Fae(y)))", "all x.(Fae(x) -> (Wumpus(x) & -Gorpus(x) & Vumpus(x)))", "(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Gorpus(x)) & (Fae(x) -> Vumpus(x)))", "(all x.(Fae(x) -> Wumpus(x)) & (-Fae(x) -> Gorpus(x)) & (Fae(x) -> Vumpus(x)))", "(all x.(Wumpus(x) & -Gorpus(x)) & all y.(Vumpus(y)) -> Fae(x)))", "all x y z.(Wumpus(x) & Gorpus(y) & Vumpus(z))", "all x.(Fae(x) -> (Wumpus(x) & -Gorpus(x) & Vumpus(x)))"]}
{"id": "prontoqa_train_342", "nl": "Fae is not a tumpus.", "fol": "-tumpus(Fae)", "prediction": ["all x.(Fae(x) -> -Tumpus(x))", "(-Tumpus(Fae))", "-Tumpus(Fae)", "all x.(Fae(x) -> -Tumpus(x))", "(Tumpus(Fae) & -Tumpus(Fae))", "(-Tumpus(Fae))", "all x.(Fae(x) -> -Tumpus(x))", "(Fae,Tumpus)", "(Tumpus(fae) & -Tumpus(fae))", "-Tumpus(Fae)", "all x.(Fae(x) -> -Tumpus(x))", "(-Tumpus(Fae))", "-Tumpus(fae)", "all x.(Fae(x) -> -Tumpus(x))", "-Tumpus(fae,fae)", "-Tumpus(Fae)"]}
{"id": "prontoqa_train_343", "nl": "Brimpuses are yumpuses.", "fol": "all x. (brimpus(x) -> yumpus(x))", "prediction": ["all x.(Brompus(x) -> Yampus(x))", "all x.(Brimpus(x) -> Yampus(x))", "all x y.((Brompus(x) & Yumpus(y)) -> Is(x,y))", "all x.(Brompus(x) -> Yumpus(x))", "(Yumpuse(brimpus) & HasYumpuse(brimpus))", "all x.(Brimpus(x) -> Yampus(x))", "all x.(Brimpus(x) -> Yumpus(x))", "all x y.((Brompus(x) & Yampus(y)) -> Is(x,y))", "all x.(Brumpus(x) -> Yumpus(x))", "(Yumpus)", "all x.(Brompus(x) -> Yampus(x))", "all x.(Brimpus(x) -> Yumpus(x))", "all x.(Brimpus(x) -> Yampus(x))", "all x.(Brumpus(x) -> Yumpus(x))", "All x.(Brompus(x) -> Yumpus(x))", "All x.(Brimpus(x) -> Yampus(x))"]}
{"id": "prontoqa_train_344", "nl": "Sam is a lempus, Sam is a gorpus, and Sam is not a yumpus.", "fol": "(lempus(Sam) & gorpus(Sam) & -yumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> Gorpus(x)) & (Sam(x) -> -Yumpus(x)))", "all x y z.((Sam(x) & Lempus(x) & Gorpus(y) & -Yumpus(z)) -> (Lempus(x) & Gorpus(y) & -Yumpus(z)))", "(all x y z.((Sam(x) & Lempus(x)) -> (Lempus(x) & Gorpus(y)) & ((Sam(z) & -Yumpus(z))) -> (Gorpus(z) & -Yumpus(z))))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> Gorpus(x)) & (Sam(x) -> -Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Sam(y) -> Gorpus(y)) & all z.(Sam(z) -> -Yumpus(z))))", "(all x.(SameDay(x) -> Lempus(x)) & (SameDay(x) -> Gorpus(x)) & (SameDay(x) -> -Yumpus(x)))", "all x.(Sam(x) -> (Lempus(x) & Gorpus(x) & -Yumpus(x)))", "all x y z.((Sam(x) & Lempus(x) & Gorpus(y) & -Yumpus(z)) -> (Lempus(x) & Gorpus(y) & -Yumpus(z)))", "(all x y z.((Sam(x) & Lempus(x)) -> Gorpus(x)) & ((Sam(y) & -Yumpus(z)) -> Lempus(y)))", "all x y z.((Sam(x) & Lempus(x) & Gorpus(y) & -Yumpus(z)) -> (Lempus(x) & Gorpus(y) & -Yumpus(z)))", "exists x.(Sam(x) & (Lempus(x) | Gorpus(x) | -Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> Gorpus(x)) & -Yumpus(x)))", "all x y.((Sam(x) & Lempus(x) & Gorpus(y)) -> (-Yumpus(x)))", "(all x.(SameDay(x) -> Lempus(x)) & (SameDay(x) -> Gorpus(x)) & (SameDay(x) -> -Yumpus(x)))", "all x y z.((Sam(x) & Lempus(y) & Gorpus(z)) -> (Lempus(x) & Gorpus(x) & -Yumpus(x)))", "all x y z.((Sam(x) & Lempus(x) & Gorpus(y) & -Yumpus(z)) -> (Lempus(x) | Gorpus(y) & -Yumpus(z)))"]}
{"id": "prontoqa_train_345", "nl": "Every yumpus is a wumpus.", "fol": "all x. (yumpus(x) -> wumpus(x))", "prediction": ["all x.(Yumpus(x) -> Wumpus(x))", "all x.(Yumpus(x) -> Wumpus(x))", "all x y.((Yumpus(x) & Wumpus(y)) -> Has(x,y))", "(all x.(Yumpus(x) -> Wumpus(x))", "all x.(Yumpus(x) -> Wumpus(x))", "all x y.((Yumpus(x) & Wumpus(y)) -> Is(x,y))", "all x.(Yumpus(x) -> Wumpus(x))", "all x.(Yumpus(x) -> Wumpus(x))", "all x.(Yumpus(x) -> Wampus(x))", "exists x.(yumpus(x) & Yumpus(y) & Wumpus(x))", "all x.(Yumpus(x) -> Wumpus(x))", "all x.(Yumpus(x) -> Wumpus(x))", "all x.(Yumpus(x) -> Wumpus(x))", "all x.(Yumpus(x) -> Wampus(x))", "exists x.(Yumpus(x) & Wumpus(x))", "exists x.(Yumpus(x) & Wumpus(x))"]}
{"id": "prontoqa_train_346", "nl": "Max is a lempus and Max is an impus and Max is not a wumpus.", "fol": "(lempus(Max) & impus(Max) & -wumpus(Max))", "prediction": ["(all x.(Max(x) -> Lempus(x)) & (Max(x) -> Imperator(x)) & (Max(x) -> -Wumpus(x)))", "all x y z.((Max(x) & Lempus(x) & Max(y) & Imperator(z)) -> (Lempus(x) & Imperator(y) & -Wumpus(z)))", "(all x.(Max(x) -> Lempus(x)) & all y.(Max(y) -> Imperator(y))) & all z.(Max(z) -> -Wumpus(z)))", "all x y.((Max(x) & Lempus(x) & Max(y)) -> (Impossible(y) & -Wumpus(y)))", "(all x y.((Max(x) & Lempus(x)) -> Impossible(x)) & ((Max(y) & -Wumpus(y)) -> Impossible(y)))", "all x y z.((Max(x) & Lempus(x) & Max(y) & Imperator(z)) -> (Impossible(x) & -Wumpus(y)))", "all x.(Max(x) -> (Lempus(x) & Impossible(x) & -Wumpus(x)))", "(all x y z.((Max(x) & Lempus(x) & -Wumpus(y)) -> (Max(z) & Issue(z))))", "all x y z.((Max(x) & Lempus(x) & Max(y) & Impossible(y)) -> (Lempus(x) & Impossible(y) & -Wumpus(z)))", "(all x.(Max(x) -> Lempus(x)) & (Max(x) -> Imperator(x)) & (Max(x) -> -Wumpus(x)))", "(all x.(Max(x) -> Lempus(x)) & all y.(Max(y) -> Issue(y)) & all z.(Max(z) -> -Wumpus(z))))", "all x.(Max(x) -> (Lempus(x) & Impossible(x) & -Wumpus(x)))", "all x y.((Max(x) & Lempus(x) & Max(y)) -> (Impossible(y) & -Wumpus(y)))", "(all x y.((Max(x) & Lempus(x)) | (Max(y) & Issue(y)))) & ((Max(y) & -Wumpus(y)))", "(all x.(Max(x) -> Lempus(x)) & (Max(x) -> Issue(x)) & (Max(x) -> -Wumpus(x)))", "all x.(Max(x) -> (Lempus(x) & Issue(x) & -Wumpus(x)))"]}
{"id": "prontoqa_train_347", "nl": "Rompuses are jompuses.", "fol": "all x. (rompus(x) -> jompus(x))", "prediction": ["all x.(Rompus(x) -> Jompuse(x))", "all x.(Rompus(x) -> Jompuse(x))", "all x y.((Rompus(x) & Jompus(y)) -> Jompus(x))", "(Jumpuses(rompus) & Jompuse(rompus))", "all x.(Rompus(x) -> Jompuse(x))", "all x y.((Rompus(x) & Jompuse(y)) -> Has(x,y))", "(Jompuse(rompus) & -Jompus(rompus))", "all x.(Rompus(x) -> Jompuse(x))", "(Jumpuses(rompus) & Jompuse(rompus))", "all x.(Romes(x) -> Jompuse(x))", "all x.(Rompus(x) -> Jompus(x))", "all x.(Rompus(x) -> Jompuse(x))", "all x.(Rompus(x) -> Jompus(x))", "all x.(Rompuse(x) -> Jompuse(x))", "all x.(Rompus(x) -> Jompus(x))", "All x.(Romese(x) -> Jompus(x))"]}
{"id": "prontoqa_train_348", "nl": "Fae is a lorpus and Fae is not a jompus and Fae is a yumpus.", "fol": "(lorpus(Fae) & -jompus(Fae) & yumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> -Jompus(x)) & (Fae(x) -> Yumpus(x)))", "all x y z.((Fae(x) & Lorpus(x) & Fae(y) & Yumpus(z)) -> (-Jompus(y) & -Lorpus(y) & Yumpus(z)))", "(all x y z.((Fae(x) & Lorpus(y)) -> (Lorpus(x) & -Jompus(y)) & ((Fae(z) & Yumpus(z))) -> (Yumpus(z))))", "(all x y.(Fae(x) -> Lorpus(x)) & (Fae(y) -> -Jompus(y)) & (Fae(y) -> Yumpus(y)))", "all x y z.((Fae(x) & Lorpus(x) & Fae(y) & Yompus(z)) -> (Lorpus(x) & -Jompus(y) & Yumpus(z)))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> -Jompus(x)) & (Fae(x) -> Yumpus(x)))", "(all x y.((Fae(x) & Lorpus(x)) -> (Lorpus(x) & -Jompus(y)) & ((Fae(x) & Yumpus(y)) -> (Yumpus(y))))", "all x y.((Fae(x) & Lorpus(x) & Fae(y)) -> (-Jompus(y) & Yumpus(y)))", "all x.(Fae(x) -> (Lorpus(x) & -Jompus(x) & Yumpus(x)))", "(all x.(Fae(x) -> Lopa(x)) & (Fae(x) -> -Jompus(x)) & (Fae(x) -> Yumpus(x)))", "all x y z.((Fae(x) & Lorpus(y) & Jompus(z)) -> (Lorpus(x) & -Jompus(x) & Yumpus(x)))", "exists x.(Fae(x) & Lorpus(x) & -Jompus(x) & Yumpus(x))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> -Jompus(x)) & (Fae(x) -> Yumpus(x)))", "all x y.((Fae(x) & Loper(x) & Fae(y)) -> (-jompus(y) & Yumpus(y)))", "all x.(Fae(x) -> (Lorpus(x) & -Jompus(x) & Yumpus(x)))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> -Jompus(x)) & (Fae(x) -> Yumpus(x)))"]}
{"id": "prontoqa_train_349", "nl": "Every jompus is a lempus.", "fol": "all x. (jompus(x) -> lempus(x))", "prediction": ["all x.(Jompus(x) -> Lempus(x))", "all x.(Jompus(x) -> Lempus(x))", "(all x.(Jompus(x) -> Lempus(x))", "all x y.((Jompus(x) & Lempus(y)) -> Has(x,y))", "all x.(Jompus(x) -> Lempus(x))", "all x y.((Jompus(x) & Lempus(y)) -> Is(x,y))", "all x.(Jimpus(x) -> Lempus(x))", "all x.(Jompus(x) -> Lempus(x))", "all x.(Jimpus(x) -> Lempus(x))", "all x.(Jompus(x) -> Lempus(x))", "exists x.(Jimpus(x) & Lempus(x))", "all x.(Jompus(x) -> Lempus(x))", "all x.(Jompus(x) -> Lempus(x))", "all x.(Jompus(x) -> Lempus(x))", "exists x.(Jompus(x) & Lempus(x))", "exists x.(Mjompus(x) & Lempus(x))"]}
{"id": "prontoqa_train_350", "nl": "Sally is a vumpus and Sally is not a lempus and Sally is a grimpus.", "fol": "(vumpus(Sally) & -lempus(Sally) & grimpus(Sally))", "prediction": ["(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> -Lempus(x)) & (Sally(x) -> Grimpus(x)))", "all x y z.((Sally(x) & Vumpus(x) & Sally(y) & Grimpus(z)) -> (-Lempus(y) & -Vumpus(y) & Grimpus(z)))", "all x.(Sally(x) -> (Vumpus(x) & -Lempus(x) & Grimpus(x)))", "all x y.((Sally(x) & Vumpus(x) & Sally(y)) -> (-Lempus(y) & Grimpus(y)))", "(all x y.(Vumpus(x) -> Sally(x)) & (-Lempus(y) -> Sally(y))) & (-Lempus(y) -> Sally(y)))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> -Lempus(x)) & (Sally(x) -> Grimpus(x)))", "all x.(Sally(x) -> (Vumpus(x) & -Lempus(x) & Grimpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & (-Lempus(x) & -Grimpus(x)))", "(all x y.(Sally(x) -> Vumpus(x)) & (Sally(y) -> -Lempus(y)) & (Sally(y) -> Grimpus(y)))", "all x y z.((Sally(x) & Vumpus(x) & Sally(y) & Grimpus(z)) -> (-Lempus(y) & -Vumpus(y) & Grimpus(z)))", "(all x.(Sally(x) -> Vumpus(x)) & all y.(Sally(y) -> -Lempus(y))) & all z.(Sally(z) -> Grimpus(z)))", "all x.(Sally(x) -> (Vumpus(x) & -Lempus(x) & Grimpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> -Lempus(x)) & (Sally(x) -> Grimpus(x)))", "all x y.((Sally(x) & Sally(y)) -> (Vumpus(x) | -Lempus(y) | Grimpus(y)))", "exists x.(Sally(x) & Vumpus(x) & -Lempus(x) & Grimpus(x))", "(all x.(Sally(x) -> Vumpus(x)) & (-Lempus(x)) | (-Sally(x) & Grimpus(x))))"]}
{"id": "prontoqa_train_351", "nl": "Sally is not a jompus.", "fol": "-jompus(Sally)", "prediction": ["all x.(Sally(x) -> -Jompus(x))", "Sally is not a Jompus.", "(-Jompus(Sally))", "Sally -Jompus(Sally)", "Sally is not a jompus.", "all x.(Sally(x) -> -Jompus(x))", "Sally n'est pas Jompus.", "(-Jompus(Sally))", "Sally is not a Jompus.", "(-Jumpus(Sally))", "all x.(Sally(x) -> -Jompus(x))", "Sally -Jompus(Sally)", "-Jompus(Sally)", "Sally is not a jompus.", "Sally is not a Jompus.", "-Jompus(Sally)"]}
{"id": "prontoqa_train_352", "nl": "Dumpuses are shumpuses.", "fol": "all x. (dumpus(x) -> shumpus(x))", "prediction": ["all x.(Dumpuse(x) -> Shumpus(x))", "all x.(Dumpuse(x) -> Shumpus(x))", "all x y.((Dumpuse(x) & Shumpus(y)) -> Shumpus(x))", "(Shumpuse(dumpuse) & Shumpuse(dumpuse))", "(Shumpuse(dumpuse) & -Shumpuse(dumpuse))", "all x.(Dumpuse(x) -> Shumpus(x))", "all x y.((Dumpuse(x) & Shumpus(y)) -> Shumpus(x))", "(Shumpuse(dumpuse) -> shumpuse(dumpuse))", "all x.(Dumpuse(x) -> Shumpus(x))", "all x.(Dumpuse(x) -> Humpus(x))", "all x.(Dumpus(x) -> Humpus(x))", "all x.(Dumpuse(x) -> Shumpus(x))", "all x.(Dumpus(x) -> Humpus(x))", "all x.(Dumpus(x) -> Shumpus(x))", "All x.(Dumpus(x) -> Shumpus(x))", "all x.(Dumpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_353", "nl": "Wren is not a shumpus and Wren is a lorpus and Wren is a wumpus.", "fol": "(-shumpus(Wren) & lorpus(Wren) & wumpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Shumpus(x)) & all y.(Lorpus(y) & all z.(Wren(z) -> Wumpus(z))))", "all x y z.((Wren(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(x) & -Wumpus(x)))", "all x y z.((Wren(x) & Shumpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(x) & -Wumpus(x)))", "(all x y z.((Wren(x) & Humpus(y)) -> -Shumpus(x)) & ((Wren(z) & Lorpus(z))) -> Wumpus(z)))", "(all x.(Wren(x) -> -Shumpus(x)) & ((Wren(x) & Lorpus(x))) -> Wumpus(x)))", "all x y.((Wren(x) & Shumpus(y) & Lorpus(y)) -> (-Shumpus(x) & -Lorpus(x) & -Wumpus(x)))", "all x.(Wren(x) -> (-Shumpus(x) & (Lorpus(x) | Wumpus(x))))", "(all x y.(Wren(x) -> -Shumpus(x)) & ((Wren(y) & Lorpus(y))) | (Wren(y) & Wumpus(y))))", "(all x y z.((Wren(x) & Humpback(y)) -> -Shumpus(x)) & ((Wren(z) & Lorpus(z))) -> Wumpus(z)))", "exists x.(Wren(x) & -Shumpus(x) & exists y.(Lorpus(y) & exists z.(Wumpus(z) & -Shumpus(z))))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.(Wren(y) -> Lorpus(y))) & all z.(Wren(z) -> Wumpus(z)))", "all x y z.((Wren(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(x) & -Wumpus(x)))", "(-Shumpus(Wren) & Lorpus(Wren))", "all x y.((Wren(x) & Shumpus(y) & Lorpus(x) & Wren(x)) -> -Shumpus(x) & Wumpus(y))", "all x y z.((Wren(x) & Shumpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(x) & -Wumpus(x)))", "(all x.(Wren(x) -> -Shumpus(x)) & (Lorpus(x) | Wren(x))))"]}
{"id": "prontoqa_train_354", "nl": "Wren is not a dumpus.", "fol": "-dumpus(Wren)", "prediction": ["all x.(Wren(x) -> -Dumpus(x))", "(-Dumpus(Wren))", "Wren is not a Dumpus.", "all x.(Wren(x) -> -Dumpus(x))", "(-Dumpus(Wren))", "Wren is not a Dumpus.", "-Dumpus(Wren)", "all x.(Wren(x) -> -Dumpus(x))", "(Dumpsus(Wren) & -Dumpus(Wren))", "Wren is not a Dumpus.", "(-Dumpsus(Wren))", "all x.(Wren(x) -> -Dumpus(x))", "-Dumpus(Wren)", "(-Dumps(Wren))", "all x.(Wren(x) -> -Dumpus(x))", "-Dumpus(Wren)"]}
{"id": "prontoqa_train_355", "nl": "Gorpuses are impuses.", "fol": "all x. (gorpus(x) -> impus(x))", "prediction": ["all x.(Gorpuse(x) -> Issue(x))", "all x y.((Gorpuse(x) & Issue(y)) -> Issue(x,y))", "(Issue(gorpuses) -> Issue(gorpuses))", "all x.(Gorpuse(x) -> Issue(x))", "(Issues(gorpuses) & Issues(gorpuses))", "all x.(Gorpus(x) -> Issue(x))", "all x.(Gorpuse(x) -> Issue(x))", "all x y.((Gorpuse(x) & Issue(y)) -> Issue(x,y))", "all x.(Gorpuse(x) -> Impects(x))", "all x.(Gorpus(x) -> Issue(x))", "all x y.((Gorpuse(x) & Issue(y)) -> Issue(x,y))", "all x.(Gorpuse(x) -> Issues(x))", "all x.(Gorpuse(x) -> Impermissible(x))", "all x.(Gorpus(x) -> Issue(x))", "All x.(Gorpus(x) -> Ispose(x))", "all x.(Gorpuse(x) -> Isolated(x))"]}
{"id": "prontoqa_train_356", "nl": "Sally is a lorpus and Sally is a zumpus and Sally is not an impus.", "fol": "(lorpus(Sally) & zumpus(Sally) & -impus(Sally))", "prediction": ["(all x.(Sally(x) -> Lorpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> -Impossible(x)))", "all x y z.((Sally(x) & Lorpus(x) & Zumpus(y) & -Ilimination(z)) -> (Lorpus(x) & Zumpus(y) & -Ilimination(z)))", "(all x.(Sally(x) -> Lorpus(x)) & all y.(Sally(y) -> Zumpus(y)) & all z.(Sally(z) -> -Impossible(z))))", "all x y.((Sally(x) & Lorpus(x) & Zumpus(y)) -> (Lorpus(x) & -Impossible(x)))", "all x.(Sally(x) -> (Lorpus(x) & Zumpus(x) & -Ilimination(x)))", "Sally is a lorpus & Sally is a zumpus & Sally is not an impus.", "all x y z.((Sally(x) & Lorpus(y) & Zumpus(z)) -> (Lorpus(x) & Zumpus(x) & -Ilimination(x)))", "(all x y.(Lorpus(x) & Lorpus(y)) & (Zumpus(y) | -Impossible(y)))", "exists x.(Sally(x) & Lorpus(x) & Zumpus(x) & -Ilimination(x))", "(all x.(Sally(x) -> Lorpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> -Impossible(x)))", "(all x.(Sally(x) -> Lorpus(x)) & all y.(Sally(y) -> Zumpus(y)) & all z.(Sally(z) -> -Impossible(z))))", "all x y.((Sally(x) & Lorpus(x) & Zumpus(y)) -> (Lorpus(x) & -Ilimination(x)))", "all x.(Sally(x) -> (Lorpus(x) & Zumpus(x) & -Impossible(x)))", "(all x y.(Lorpus(x) & Lorpus(y)) & (Tompus(y) & -Ilimination(y)))", "(all x.(Sally(x) -> Llorpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> -Impossible(x)))", "(all x.(Sally(x) -> Lorpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> -Ilimination(x)))"]}
{"id": "prontoqa_train_357", "nl": "Each tumpus is a numpus.", "fol": "all x. (tumpus(x) -> numpus(x))", "prediction": ["all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "(all x.(Tumpus(x) -> Numpus(x)))", "all x y.((Tumpus(x) & Numpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Numpus(x))", "all x y.((Tumpus(x) & Numpus(y)) -> Is(x,y))", "all x.(Tumpus(x) -> Numpus(x))", "all x y.((Tumpus(x) & Numpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "exists x.(Tumpus(x) & Tumulus(x) & Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Number(x))", "all x.(Tumpus(x) -> Numpus(x))", "exists x.(Tumpus(x) & Number(x))", "exists x.(Tumpus(x) & Numpus(x))"]}
{"id": "prontoqa_train_358", "nl": "Sally is a rompus, Sally is a shumpus, and Sally is not a numpus.", "fol": "(rompus(Sally) & shumpus(Sally) & -numpus(Sally))", "prediction": ["(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> Humpus(x)) & (Sally(x) -> -Numpus(x))))", "all x y z.((Sally(x) & Rompus(y) & Humpus(z)) -> (Rompus(x) & Shumpus(x) & -Numpus(x)))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> Humpus(y)) & all z.(Sally(z) -> -Numpus(z))))", "(all x y z.((Sally(x) & Rompus(y)) -> (Rompus(z) | Shumpus(z))) & ((Sally(x) & Numpus(x)) -> -Numpus(x)))", "all x.(Sally(x) -> (Rompus(x) & Shumpus(x) & -Numpus(x)))", "all x y z.((Sally(x) & Rompus(y) & Humpus(z)) -> (Rompus(x) | Shumpus(x) | -Numpus(x)))", "all x y z.((Sally(x) & Rompus(x) & Shumpus(y) & Numpus(z)) -> (Rompus(x) & Shumpus(y) & -Numpus(z)))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> Humpus(x)) & -Numpus(x)))", "(all x y z.((Sally(x) & Rompus(y) & Shumpus(z)) -> (Rompus(x) | Shumpus(z)) | -Numpus(z)))", "all x.(Sally(x) -> (Rompus(x) & Humpus(x) & -Numpus(x)))", "exists x.(Sally(x) & Rompus(x) & Humpus(x) & -Numpus(x))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> Humpus(y)) & all z.(Sally(z) -> -Numpus(z))))", "all x y z.((Sally(x) & Rrompus(x) & Shumpus(y) & -Numpus(z)) -> (Rompus(x) & Shumpus(y) & -Numpus(z)))", "(all x y z.((Sally(x) & Rompus(y)) -> (Rompus(z) | Shumpus(z))) & ((Sally(x) & Numpus(z)) -> -Rompus(x)))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> Humpus(x)) & (Sally(x) -> -Numpus(x)))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> Humpus(y)) & all z.(Sally(z) -> -Numpus(z))))"]}
{"id": "prontoqa_train_359", "nl": "Dumpuses are grimpuses.", "fol": "all x. (dumpus(x) -> grimpus(x))", "prediction": ["all x.(Dumpuse(x) -> Grimpuse(x))", "all x.(Dumpuse(x) -> Grimpuse(x))", "(SmokeyPeasant(dumpuse) & Grimpuse(dumpuse))", "(Grimpuse(dumpuse) & Grimpuse(dumpuse))", "all x y.((Dumpuse(x) & Grimpuse(y)) -> (Smoothpuse(x) & Grimpuse(y)))", "all x.(Dumpuse(x) -> Grimpuse(x))", "(Gruffus(dumpus) -> Grimpuse(dumpus))", "all x.(Dumpuse(x) -> Grappase(x))", "(Grampuse(dumpuse) & Greasy(dumpuse))", "all x.(Dumpuse(x) -> Grimpuse(x))", "all x.(Dumpus(x) -> Grimpuse(x))", "all x.(Dumpus(x) -> Grimpuse(x))", "all x.(Dumpus(x) -> Grimpuse(x))", "all x.(Dumpuse(x) -> Grapple(x))", "all x.(Dumpus(x) -> GreasyPet(x))", "All x.(Dumpus(x) -> Grimpuse(x))"]}
{"id": "prontoqa_train_360", "nl": "Sally is not a grimpus and Sally is a rompus and Sally is a brimpus.", "fol": "(-grimpus(Sally) & rompus(Sally) & brimpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Grimpus(x)) & (Rompus(x) & Brimpus(x)))", "all x y z.((Sally(x) & Grimpus(y) & Rompus(z)) -> (-Grimpus(x) & Brimpus(x)))", "all x.(Sally(x) -> (-Grimpus(x) & Rompus(x) & Brimpus(x)))", "(all x.(Sally(x) -> -Grimpus(x)) & all y.(Rompus(y) & -Brimpus(y))))", "all x y.((Sally(x) & Grimpus(y)) -> (-Surprise(x) & Rompus(y) & Brimpus(x)))", "(-Grimpus(Sally) & Rompus(Sally) & Brimpus(Sally))", "(all x y z.((Sally(x) & Grimpus(y) & Rompus(z)) -> -Grimpus(x)) & ((Sally(x) & Brimpus(x)) -> Brimpus(x)))", "all x y z.((Sally(x) & Grimpus(y) & Rompus(z)) -> (-Salma(x) & Rompus(y) & Brimpus(z)))", "(all x y.(Sally(x) -> -Grimpus(x)) & (Rompus(y) | Brimpus(y))))", "(all x.(Sally(x) -> -Grimpus(x)) & all y.(Sally(y) -> Rompus(y)) & all z.(Sally(z) -> Brimpus(z))))", "(all x.(Sally(x) -> -Grimpus(x)) & (Rompus(x) | Brimpus(x))))", "all x.(Sally(x) -> (-Grimpus(x) & Rompus(x) & Brimpus(x)))", "all x y.((Sally(x) & Grimpus(y)) -> (-Grimpus(x) & Rompus(y) & Brimpus(x)))", "all x y z.((Sally(x) & Grimpus(y) & Rompus(z)) -> (-Grimpus(x) & Rompus(y) & Brimpus(z)))", "exists x.(Sally(x) & -Grimpus(x) & Rompus(x) & Brimpus(x))", "(all x.(Sally(x) -> -Grimpus(x)) & (Rompus(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_361", "nl": "Sally is not a dumpus.", "fol": "-dumpus(Sally)", "prediction": ["Sally is not a Dumpus.", "all x.(Sally(x) -> -Dumpus(x))", "(-Dumpus(Sally))", "Sally -Dumpus(Sally)", "Sally n'est pas dumus.", "Sally is not a dumpus.", "all x.(Sally(x) -> -Dumpus(x))", "(-Dumpus(Sally))", "Sally is not a Dumpus.", "Sally n'est pas Dumpus.", "-Dumpus(Sally)", "Sally -Dumpus(Sally)", "Sally is not a dumpus.", "(-Dumpus(Sally))", "-Dumpus(Sally)", "Sally is not a Dumpus."]}
{"id": "prontoqa_train_362", "nl": "Brimpuses are dumpuses.", "fol": "all x. (brimpus(x) -> dumpus(x))", "prediction": ["all x.(Brimpus(x) -> Dumpuse(x))", "all x.(Brimpus(x) -> Dumpuse(x))", "all x y.((Brimpus(x) & Dumpuse(y)) -> (Dumuse(x) & -Dumpuse(y)))", "all x.(Brimbus(x) -> Dumpuse(x))", "all x.(Brompus(x) -> Dumpuse(x))", "(all x.(Brimpus(x) -> Dumpuse(x)))", "all x y.((Brompus(x) & Dumpuse(y)) -> Is(x,y))", "(Dumpsus(brimpus) & Dumpuse(brimpus))", "all x.(Brimpus(x) -> Dumpuse(x))", "all x.(Brimuse(x) -> Dumpuse(x))", "(all x.(Brimpus(x) -> Dumpuse(x)))", "all x.(Brimpuse(x) -> Dumpuse(x))", "all x.(Brombus(x) -> Dumpuse(x))", "all x.(Brimpus(x) -> Dumpus(x))", "all x.(Brimpuse(x) -> Dumpuse(x))", "all x.(Brombus(x) -> Dumpuse(x))"]}
{"id": "prontoqa_train_363", "nl": "Rex is not a dumpus, Rex is a grimpus, and Rex is a rompus.", "fol": "(-dumpus(Rex) & grimpus(Rex) & rompus(Rex))", "prediction": ["(all x.(Rex(x) -> -Dumpus(x)) & (Grimpus(x) | Rompus(x))))", "all x y z.((Rex(x) & Dumpus(y) & Grimpus(z)) -> (-Dumpus(x) & Grimpus(x) & Rompus(x)))", "(all x.(Rex(x) -> -Dumpus(x)) & all y.(Rex(y) -> Grimpus(y)) & all z.(Rex(z) -> Rompus(z))))", "(all x y z.((Rex(x) & Dumpus(y)) -> -Dumpus(x)) & ((Rex(z) & Grimpus(z))) -> Rompus(z)))", "all x.(Rex(x) -> (-Dumpus(x) & Grimpus(x) & Rompus(x)))", "(all x.(Rex(x) -> -Dumpus(x)) & (Rex(x) -> Grimpus(x)) & (Rex(x) -> Rompus(x)))", "all x y z.((Rex(x) & Dumpus(y) & Grimpus(z)) -> (-Dumpus(x) & Grimpus(x) & Rompus(x)))", "all x y z.((Rex(x) & Grimpus(y) & Rompus(z)) -> (-Dumpus(x) & Grimpus(y) & Rompus(z)))", "(all x.(Rex(x) -> -Dumpus(x)) & all y.(Grimpus(y) -> Grimpus(y)) & all z.(Rompus(z) -> -Dumpus(z))))", "(all x y z.((Rex(x) & Dumpus(y)) -> -Dumpus(x)) & ((Rex(z) & Grimpus(z)) -> Rompus(z)))", "(-Dumpus(rex) & Grimpus(rex) & Rompus(rex))", "(all x.(Rex) -> -Dumpus(x)) & (Grimpus(x) | Rompus(x)))", "all x.(Rex(x) -> (-Dumpus(x) & Grimpus(x) & Rompus(x)))", "(all x y z.((Rex(x) & Dumpus(y)) -> -Dumpus(x)) & ((Rex(x) & Grimpus(y)) -> Rompus(z)))", "all x y z.((Rex(x) & Dumpus(y) & Grimpus(z)) -> (-Dumpus(x) & Grimpus(y) & Rompus(z)))", "all x y z.((Rex(x) & Grimpus(y) & Rompus(z)) -> (-Dumpus(x) & Grimpus(y) & Rompus(z)))"]}
{"id": "prontoqa_train_364", "nl": "Sam is a zumpus and Sam is a dumpus and Sam is not an impus.", "fol": "(zumpus(Sam) & dumpus(Sam) & -impus(Sam))", "prediction": ["(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Impossible(x)))", "all x y z.((Sam(x) & Zumpus(x) & Dumpus(y) & -Impossible(z)) -> (Tompus(x) & Dumpus(y)))", "all x y.((Sam(x) & Zumpus(x) & Dumpus(y)) -> -Impossible(x))", "(all x.(Sam(x) -> Zumpus(x)) & all y.(Sam(y) -> Dumpus(y)) & all z.(Sam(z) -> -Impossible(z))))", "(all x y.(Sam(x) -> Zumpus(x)) & (Sam(y) -> Dumpus(y)) & (Sam(y) -> -Impossible(y)))", "all x.(Sam(x) -> (Tompus(x) & Dumpus(x) & -Impossible(x)))", "all x y z.((Sam(x) & Zumpus(x) & Dumpus(y) & -Ilimination(z)) -> (Tompus(x) & Dumpus(y) & -Ilimination(z)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Impossible(x)))", "all x.(Sam(x) -> (Tompus(x) | Dumpus(x) | -Impossible(x)))", "exists x.(Sam(x) & Zumpus(x) & Dumpus(x) & -Ilimination(x))", "all x y.((Sam(x) & Zumpus(x) & Dumpus(y)) -> (-Impossible(x) & -Impossible(y)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> Dumpus(x)) & -Impossible(x)))", "(all x y.(Sam(x) -> Zumpus(x)) & (Sam(y) -> Dumpus(y)) & (Sam(y) -> -Impossible(y)))", "(all x.(Sam(x) -> Zumpus(x)) & all y.(Sam(y) -> Dumpus(y)) & all z.(Sam(z) -> -Impossible(z))))", "all x y z.((Sam(x) & Zumpus(x) & Dumpus(y) & -Impossible(z)) -> (Sam(x) & Dumpus(z)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Impossible(x)))"]}
{"id": "prontoqa_train_365", "nl": "Vumpuses are shumpuses.", "fol": "all x. (vumpus(x) -> shumpus(x))", "prediction": ["all x.(Vumpus(x) -> Shumpus(x))", "all x.(Vumpus(x) -> Shumpus(x))", "all x y.((Vumpus(x) & Shumpus(y)) -> Shumpus(x))", "(Shumpuse(Vumpus) & Shumpus(Vumpus))", "(Shumpuse(v) & Shumpus(v))", "(all x.(Vumpus(x) -> Shumpus(x)))", "all x.(Vumpus(x) -> Shumpus(x))", "all x y.((Vumpus(x) & Shumpus(y)) -> Shumpus(x))", "all x.(Vumpus(x) -> Shumpus(x))", "all x.(Vumpuse(x) -> Shumpus(x))", "all x.(Vumpus(x) -> Humpus(x))", "all x.(Vumpus(x) -> Shumpus(x))", "all x.(Volmpuse(x) -> Shumpuse(x))", "all x.(Vumpus(x) -> Humpus(x))", "all x.(Vumpus(x) -> Shumpus(x))", "all x.(Vumpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_366", "nl": "Max is a wumpus and Max is a lorpus and Max is not a shumpus.", "fol": "(wumpus(Max) & lorpus(Max) & -shumpus(Max))", "prediction": ["(all x.(Max(x) -> Wumpus(x)) & (Max(x) -> Lorpus(x)) & (Max(x) -> -Shumpus(x)))", "all x y z.((Max(x) & Wumpus(x) & Lorpus(y) & -Shumpus(z)) -> (Wumpus(x) & -Lorpus(y)))", "all x y.((Max(x) & Wumpus(x) & Lorpus(y)) -> (Wumpus(x) & -Shumpus(y)))", "(all x y z.((Max(x) & Wumpus(y)) -> (Wumpus(z) & -Shumpus(z))) & ((Max(x) & Lorpus(x)) -> (Lorpus(x) & -Shumpus(x))))", "(all x y.((Max(x) & Wumpus(x)) -> Wumpus(x)) & ((Max(y) & Lorpus(y)) -> -Shumpus(y)))", "all x.(Max(x) -> (Wumpus(x) & Lorpus(x) & -Shumpus(x)))", "all x y z.((Max(x) & Wumpus(y) & Lorpus(z)) -> (Wumpus(x) & -Shumpus(x)))", "(all x.(Max(x) -> Wumpus(x)) & (Max(x) -> Lorpus(x)) & (Max(x) -> -Shumpus(x)))", "(all x.(Max(x) -> Wumpus(x)) & all y.(Max(y) -> Lorpus(y)) & all z.(Max(z) -> -Shumpus(z))))", "all x y z.((Max(x) & Wumpus(x) & Lorpus(y) & -Shumpus(z)) -> (Wumpus(x) & Lorpus(y) & -Shumpus(z)))", "all x y.((Max(x) & Wumpus(x) & Lorpus(y)) -> (-Shumpus(x)))", "(all x y.(Wumpus(x) -> Max(x)) & (Lorpus(y) -> Max(y)) & (Shumpus(y) -> Max(y)))", "all x.(Max(x) -> (Wumpus(x) & Lorpus(x) & -Shumpus(x)))", "(all x.(Max(x) -> Wumpus(x)) & (Max(x) -> Lorpus(x)) & -Max(x)))", "(all x.(Max(x) -> Wumpus(x)) & all y.(Max(y) -> Lorpus(y)) & all z.(Max(z) -> -Shumpus(z))))", "all x.(Max(x) -> (Wumpus(x) & Lorpus(x) & -Shumpus(x)))"]}
{"id": "prontoqa_train_367", "nl": "Max is not a vumpus.", "fol": "-vumpus(Max)", "prediction": ["all x.(Max(x) -> -Vumpus(x))", "-Vumpus(Max)", "Max is not a vumpus.", "(Max(Max) & -Vumpus(Max))", "(-Vumpus(Max))", "-(Max(Max) & Vumpus(Max))", "all x.(Max(x) -> -Vumpus(x))", "Max is not a Vumpus.", "(Max is notVumpus(Max))", "-Vimpus(Max)", "-Vumpus(Max)", "all x.(Max(x) -> -Vumpus(x))", "(-Vumpus(Max))", "all x.(Max(x) -> -Vumpus(x))", "(-Vumpus(Max))", "-Vimpus(Max)"]}
{"id": "prontoqa_train_368", "nl": "Every yumpus is a zumpus.", "fol": "all x. (yumpus(x) -> zumpus(x))", "prediction": ["all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x y.((Yumpus(x) & Zumpus(y)) -> Has(x,y))", "(all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x y.((Yumpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "exists x.(yumpus(x) & Zurpus(y) & HasTompus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "exists x.(yumpus(x) & Zurpus(y) & HasYumpus(x,y))", "exists x.(Yumpus(x) & Tompus(x))", "all x.(Yumpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_369", "nl": "Stella is an impus, Stella is not a zumpus, and Stella is a vumpus.", "fol": "(impus(Stella) & -zumpus(Stella) & vumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Is(x)) & (Stella(x) -> -Tompus(x)) & (Stella(x) -> Vumpus(x)))", "all x y z.((Stella(x) & Stella(y) & Zumpus(z)) -> (Impossible(x) & -Tompus(y) & Vumpus(z)))", "(all x.(Stella(x) -> IsImpossible(x)) & (Stella(x) -> -Tompus(x)) & (Stella(x) -> Vumpus(x)))", "(all x y z.((Stella(x) & IsImpos(x)) -> IsTompus(x)) & ((Stella(y) & -Impossible(y)) -> Vumpus(y)))", "(all x y z.((Stella(x) & Impossible(x)) -> Stella(y)) & ((Stella(z) & -Zumpus(z)) -> Stella(z)))", "all x.(Stella(x) -> (Impossible(x) & -Zumpus(x) & Vumpus(x)))", "exists x.(Stella(x) & IsImpossible(x)) & exists y.(Stella(y) & -Impossible(y)) & exists z.(Vumpus(z) & IsImpossible(z))))", "all x y z.((Stella(x) & Stella(y) & Zumpus(z)) -> (Impossible(x) & -Tompus(y) & Vumpus(z)))", "(all x.(Stella(x) -> Is(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Vumpus(x)))", "(all x y z.((Stella(x) & Is(x,y)) -> Is(x,z)) & ((Stella(y) & -Tompus(z))) -> Vumpus(y)))", "(all x.(Stella(x) -> Impeccable(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Vumpus(x)))", "all x y z.((Stella(x) & Stella(y) & Zumpus(z)) -> (Impossible(x) | -Impossible(y) | -Impossible(y)))", "(all x.(Stella(x) -> Impossible(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Vumpus(x)))", "all x y z.((Stella(x) & Stella(y) & Zumpus(z)) -> (Issue(x) & -Issue(y) & Vumpus(y)))", "(all x.(Stella(x) -> IsImpossible(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Vumpus(x)))", "all x y z.((Stella(x) & Stella(y) & Stella(z)) -> (Impossible(x) | -Zumpus(y) | Vumpus(z)))"]}
{"id": "prontoqa_train_370", "nl": "Each gorpus is an impus.", "fol": "all x. (gorpus(x) -> impus(x))", "prediction": ["all x.(Gorpus(x) -> IsImpossible(x))", "all x.(Gorpus(x) -> IsImpossible(x))", "all x y.((Gorpus(x) & Gorpus(y)) -> IsImpossible(x))", "all x.(Gorpus(x) -> Is(x,y))", "all x.(Gorpus(x) -> Imperator(x))", "all x y.((Gorpus(x) & Gorpus(y)) -> Is(x,y))", "all x.(Gorpus(x) -> Impossible(x))", "all x y.((Gorpus(x) & Is(y,x)) -> Is(x,y))", "all x.(Gorpus(x) -> IsImpossed(x))", "exists x.(Gorpus(x) & Impossible(x))", "all x.(Gorpus(x) -> Implicated(x))", "exists x.(Gorpus(x) & Impermissable(x))", "all x.(Gorpus(x) -> Isolated(x))", "exists x.(Gorpus(x) & Impossible(x))", "exists x.(Gorpus(x) & Is(x))", "exists x.(Gorpus(x) & Impeccable(x))"]}
{"id": "prontoqa_train_371", "nl": "Stella is a sterpus and Stella is a vumpus and Stella is not an impus.", "fol": "(sterpus(Stella) & vumpus(Stella) & -impus(Stella))", "prediction": ["(all x.(Stella(x) -> Sterpus(x)) & all y.(Vumpus(y) -> -Impossible(y)))", "all x y z.((Stella(x) & Sterpus(x) & Stella(y) & Vumpus(y)) -> (Stella(z) & -Impossible(z)))", "all x y.((Stella(x) & Sterpus(x) & Stella(y)) -> (Vumpus(y) & -Impossible(y)))", "(all x.(Stella(x) -> Sterpus(x)) & (Stella(x) -> Vumpus(x)) & (Stella(x) -> -Impossible(x)))", "(all x y.((Stella(x) & Sterpus(x)) -> Vumpus(x)) & ((Stella(y) & -Impossible(y)) -> Sterpus(y)))", "all x.(Stella(x) -> (Sterpus(x) & Vumpus(x) & -Impossible(x)))", "(all x.(Stella(x) -> Sterpus(x)) & all y.(Stella(y) -> Vumpus(y)) & all z.(Stella(z) -> -Impossible(z))))", "(all x y z.((Stella(x) & Sterpus(y)) -> (Sterpus(z) & Vumpus(z))) & ((Stella(x) & Imperator(x)) -> -Impossible(x)))", "exists x.(Stella(x) & Sterpus(x) & Vumpus(x) & -Impossible(x))", "(all x y.(Stella(x) -> Sterpus(x)) & (Stella(y) -> Vumpus(y)) & (Stella(y) -> -Impossible(y)))", "all x y z.((Stella(x) & Sterpus(x) & Stella(y) & Vumpus(y)) -> (Stella(x) & -Impossible(z)))", "all x y.((Stella(x) & Sterpus(x) & Stella(y)) -> (Vumpus(y) & -Impossible(y)))", "all x y z.((Stella(x) & Sterpus(y) & Vumpus(z)) -> (Sterpus(x) & Vumpus(x) & -Impossible(x)))", "all x.(Stella(x) -> (Sterpus(x) & Vumpus(x) & -Ilimination(x)))", "(all x.(Stella(x) -> Sterpus(x)) & (Stella(x) -> Vumpus(x)) & -Impossible(x)))", "(all x.(Stella(x) -> Sterep(x)) & (Vumpus(x) | Imperator(x))))"]}
{"id": "prontoqa_train_372", "nl": "Sterpuses are rompuses.", "fol": "all x. (sterpus(x) -> rompus(x))", "prediction": ["all x.(Sterpus(x) -> Rompus(x))", "all x.(Sterpuse(x) -> Rompus(x))", "all x.(Sterpus(x) -> Rompus(x))", "(Rompus(sterpuses) & -Rompus(s))", "all x y.((Sterpuse(x) & Rompus(y)) -> Is(x,y))", "all x y.((Sterpuse(x) & Rompus(y)) -> (Rompus(x) & -Rompus(y)))", "all x.(Sterpuse(x) -> Rompus(x))", "(all x.(Sterpuse(x) -> Rompus(x))", "all x.(Sterpuse(x) -> Rompus(x))", "all x.(Sterpus(x) -> Rompus(x))", "all x.(Stupid(x) -> Rompus(x))", "(Rompus(sterpus) & Sterpus(s))", "all x.(Sterpuse(x) -> Rompus(x))", "all x.(Strerpuse(x) -> Rompus(x))", "all x.(Sterpus(x) -> Rompus(x))", "All x.(Stumpes(x) -> Rompus(x))"]}
{"id": "prontoqa_train_373", "nl": "Sam is not a rompus, Sam is a wumpus, and Sam is a dumpus.", "fol": "(-rompus(Sam) & wumpus(Sam) & dumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Rompus(x)) & all y.(Wumpus(y) -> Dumpus(y)))", "all x y z.((Sam(x) & Rompus(y) & Wumpus(z)) -> (-Rompus(x) & Wumpus(y) & Dumpus(z)))", "(all x.(Rompus(x) -> -Rompus(x)) & all y.(Wumpus(y) -> Dumpus(y)))", "all x.(Sam(x) -> (-Rompus(x) & Wumpus(x) & Dumpus(x)))", "(all x y z.((Sam(x) & Rompus(y)) -> -Rompus(x)) & ((Sam(z) & Wumpus(z))) -> Dumpus(z)))", "(all x.(Sam(x) -> -Rompus(x)) & (Sam(x) -> Wumpus(x)) & (Sam(x) -> Dumpus(x)))", "all x y z.((Rompus(x) & Wumpus(y) & Dumpus(z)) -> (-Rompus(x) & -Wumpus(y) & -Dumpus(z)))", "all x y z.((Sam(x) & Rrompus(y) & Wumpus(z)) -> (-Rompus(x) & Wumpus(y) & Dumpus(z)))", "(all x y z.((Sam(x) & Rrompus(y) & Wumpus(z)) -> -Rompus(x)) & ((Sam(x) & Wumpus(x)) -> Dumpus(x)))", "(all x.(Rompus(x) -> -Rompus(x)) & (Wumpus(x) -> Dumpus(x)))", "all x y z.((Sam(x) & Rompus(y) & Wumpus(z)) -> (-Rompus(x) & Wumpus(x) & Dumpus(x)))", "exists x.(Sam(x) & -Rompus(x) & Wumpus(x) & Dumpus(x))", "all x y z.((Rompus(x) & Wumpus(y) & Dumpus(z)) -> (-Rompus(x) & Wumpus(y) & Dumpus(z)))", "(all x.(Sam(x) -> -Rompus(x)) & all y.(Wumpus(y) -> Dumpus(y)))", "(all x.(Rompus(x) -> -Rompus(x)) & all y.(Wumpus(y) -> Dumpus(y)))", "all x y z.((Sam(x) & Rompus(y) & Wumpus(z)) -> (-Rompus(x) & Wumpus(y) & Dumpus(z)))"]}
{"id": "prontoqa_train_374", "nl": "Every gorpus is a vumpus.", "fol": "all x. (gorpus(x) -> vumpus(x))", "prediction": ["all x.(Gorpus(x) -> Vumpus(x))", "all x.(Gorpus(x) -> Vumpus(x))", "all x.(Gorpus(x) -> Vumpus(x))", "exists x y.(Gorpus(x) & Vumpus(y))", "all x.(Gorpus(x) -> Vumpus(x))", "exists x y.(Gorpus(x) & Vumpus(y))", "all x.(Gorpus(x) -> Vumpus(x))", "exists x y.(Gorpus(x) & Vumpus(y))", "all x.(Gorpus(x) -> Vulpis(x))", "all x.(Gorpus(x) -> Vampus(x))", "all x.(Gorps(x) -> Vumpus(x))", "exists x.(Gorpus(x) & -Vumpus(x))", "all x.(Gorpus(x) -> Vampus(x))", "all x.(Gorpus(x) -> Vumpus(x))", "all x.(Gorpus(x) -> Vumpus(x))", "all x.(Gorpus(x) -> Vulpu(x))"]}
{"id": "prontoqa_train_375", "nl": "Polly is a shumpus, Polly is a zumpus, and Polly is not a vumpus.", "fol": "(shumpus(Polly) & zumpus(Polly) & -vumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Shumpus(x)) & (Polly(x) -> Zumpus(x)) & -Vumpus(x)))", "all x y z.((Polly(x) & Shumpus(y) & Zumpus(z)) -> (Shumpus(x) & Zumpus(y) & -Vumpus(z)))", "(all x.(Polly(x) -> Humpus(x)) & (Polly(x) -> Zumpus(x)) & -Vumpus(x)))", "(all x y z.((Polly(x) & Humpus(y)) -> Shumpus(x)) & ((Polly(z) & Zumpus(z)) -> -Vumpus(z)))", "all x y z.((Polly(x) & Shumpus(x) & Zumpus(y) & -Vumpus(z)) -> (Shumpus(x) & Zumpus(y) & -Vumpus(z)))", "(all x.(Polly(x) -> Shumpus(x)) & (Polly(x) -> Zumpus(x)) & (Polly(x) -> -Vumpus(x)))", "all x.(Polly(x) -> (Shumpus(x) & Zumpus(x) & -Vumpus(x)))", "(all x.(Polly(x) -> Humpus(x)) & all y.(Polly(y) -> Zumpus(y)) & all z.(Polly(z) -> -Vumpus(z))))", "all x y z.((Polly(x) & Shumpus(y) & Zumpus(z)) -> (Shumpus(x) & Zumpus(y) & -Vumpus(z)))", "(all x.(Polly(x) -> Humpus(x)) & (Polly(x) -> Zumpus(x)) & (Polly(x) -> -Vumpus(x)))", "(all x y z.((Polly(x) & Humpus(y)) -> Shumpus(x)) & ((Polly(z) & Zumpus(z))) -> -Vumpus(z)))", "exists x.(Polly(x) & Shumpus(x) & Zumpus(x) & -Vumpus(x))", "all x y z.((Polly(x) & Shumpus(y) & Zumpus(z)) -> (Shumpus(x) & Toshpus(x) & -Vumpus(x)))", "(all x y z.(Shumpus(x) -> Polly)) & (Tompus(y) -> Polly)) & (Vumpus(z) -> Polly)))", "all x y z.((Polly(x) & Shumpus(x) & Zumpus(y) & -Vumpus(z)) -> (Shumpus(x) | Zumpus(y) | Polly(z)))", "(all x.(Polly(x) -> Shumpus(x)) & (Polly(x) -> Zumpus(x)) & -Vumpus(x)))"]}
{"id": "prontoqa_train_376", "nl": "Polly is not a gorpus.", "fol": "-gorpus(Polly)", "prediction": ["all x.(Polly(x) -> -Gorpus(x))", "(-Gorpus(Polly))", "Polly is not a Gorpus.", "all x.(Polly(x) -> -Gorpus(x))", "(-Gorpus(Polly))", "Polly is notGorpus(Polly)", "Polly is not a Gorpus.", "all x.(Polly(x) -> -Gorpus(x))", "Polly -Gorpus(Polly)", "(-Gorpus(Polly))", "-Gorpus(Polly)", "all x.(Polly(x) -> -Gorpus(x))", "(-Gorpus(Poly))", "all x.(Polly(x) -> -Gorpus(x))", "-Gorpus(Polly)", "(-Gorpus(Poly))"]}
{"id": "prontoqa_train_377", "nl": "Every zumpus is a yumpus.", "fol": "all x. (zumpus(x) -> yumpus(x))", "prediction": ["all x.(Zumpus(x) -> Yumpus(x))", "all x.(Zumpus(x) -> Yumpa(x))", "all x y.((Zumpus(x) & Yumpus(y)) -> Has(x,y))", "all x.(Zumpus(x) -> Yampus(x))", "(all x.(Zumpus(x) -> Yumpa(x))", "all x.(Tompus(x) -> Yumpus(x))", "all x y.((Zumpus(x) & Yampus(y)) -> Has(x,y))", "all x.(Zumpus(x) -> Yumpus(x))", "all x.(Tompus(x) -> Yumpus(x))", "exists x.(Shinpo(x) & Yumpus(x))", "all x.(Zumpus(x) -> Yampus(x))", "all x.(Zumpus(x) -> Yampus(x))", "all x.(Tompus(x) -> Yumpus(x))", "all x.(Tompus(x) -> Yumpa(x))", "exists x.(Zumpus(x) & Yampus(x))", "exists x.(Zumpus(x) & Yups(x))"]}
{"id": "prontoqa_train_378", "nl": "Max is a grimpus and Max is not a yumpus and Max is a lorpus.", "fol": "(grimpus(Max) & -yumpus(Max) & lorpus(Max))", "prediction": ["all x y z.((Max(x) & Grimpus(x) & Max(y) & -Yumpus(y)) -> (Lorpus(z)))", "(all x.(Max(x) -> Grimpus(x)) & (-Yumpus(x) & (Lorpus(x)))))", "(all x.(Max(x) -> Grimpus(x)) & (Max(x) -> -Yumpus(x)) & (Max(x) -> Lorpus(x)))", "all x y.((Max(x) & Grimpus(x)) -> (-Yumpus(x) & -Lorpus(y)))", "(all x y z.((Max(x) & Grimpus(x)) -> (Matt(y) & -Yumpus(y))) & ((Max(z) & Lorpus(z)) -> (Matt(z) & -Yumpus(z))))", "(all x y.((Max(x) & Grimpus(x)) -> (Smooth(x) & -Yumpus(x))) & ((Max(y) & Lorpus(y)) -> (Lorpus(y))))", "all x y z.((Max(x) & Grimpus(x) & Max(y) & -Yumpus(y)) -> (Lorpus(z)))", "(all x.(Max(x) -> Grimpus(x)) & (-Yumpus(x)) | (-Yumpus(x) & -Lorpus(x))))", "all x.(Max(x) -> (Grimpus(x) & -Yumpus(x) & Lorpus(x)))", "exists x.(Max(x) & Grimpus(x) & -Yumpus(x) & Lorpus(x))", "all x y z.((Max(x) & Gruppus(x) & Max(y) & -Yumpus(y)) -> (Lorpus(z)))", "(all x y.(Max(x) -> Grimpus(x)) & ((Max(y) & -Yumpus(y)) & ((Max(y) & -Yumpus(y))) -> Lorpus(y)))", "(all x.(Max(x) -> Grumpus(x)) & (-Yumpus(x) & -Lorpus(x)))", "(all x.(Max(x) -> Grimpus(x)) & (Max(x) -> -Yumpus(x)) & (Max(x) -> Lorpus(x)))", "all x y.((Max(x) & Grimpus(x)) -> (-Yumpus(x) & Lorpus(y)))", "all x.(Max(x) -> (Grimpus(x) & -Yumpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_train_379", "nl": "Max is not a zumpus.", "fol": "-zumpus(Max)", "prediction": ["all x.(Max(x) -> -Zumpus(x))", "(-Zumpus(Max))", "Max is not a zumpus.", "all x.(Max(x) -> -Zumpus(x))", "-Zumpus(Max)", "(-Zumpus(Max))", "all x.(Max(x) -> -Zumpus(x))", "Max is not zumpus.", "-Zumpus(Max)", "all x.(Max(x) -> -Zumpus(x))", "(Max is not zumpus(Max))", "(-Zombie(Max))", "-zumpus(Max)", "(-Zumpus(Max))", "All x.(Max(x) -> -Zombipus(x))", "-Tompus(Max)"]}
{"id": "prontoqa_train_380", "nl": "Wumpuses are numpuses.", "fol": "all x. (wumpus(x) -> numpus(x))", "prediction": ["all x.(Wumpus(x) -> Numpus(x))", "all x.(Wumpuse(x) -> Numpuse(x))", "all x.(Wumpus(x) -> Numpus(x))", "(all x.(Wumpuse(x) -> Numpuse(x)))", "all x y.((Wumpuse(x) & Numpus(y)) -> Numpuse(x))", "(Numpus(w) & -Numpus(w))", "all x y.((Wumpus(x) & Numpus(y)) -> Numpus(x))", "all x.(Wumpuse(x) -> Numpuse(x))", "all x.(Wumpus(x) -> Numpuse(x))", "(Numpuse(w) & -Numpuse(w))", "all x.((Wumpus(x) & Numpus(x)) -> Has(x,y))", "all x.(Wumpuse(x) -> Numpuse(x))", "all x.(Wumpus(x) -> Numpus(x))", "(Numpus)", "all x.(Wumpus(x) -> Numpuse(x))", "all x.(Wumpuse(x) -> Numpuse(x))"]}
{"id": "prontoqa_train_381", "nl": "Max is not a numpus, Max is a grimpus, and Max is a vumpus.", "fol": "(-numpus(Max) & grimpus(Max) & vumpus(Max))", "prediction": ["(all x.(Max(x) -> -Numpus(x)) & (Max(x) -> Grimpus(x)) & (Max(x) -> Vumpus(x)))", "all x y z.((Max(x) & Numpus(y) & Grimpus(z)) -> (-Numpus(x) & -Smoothpus(x) & -Vumpus(x)))", "(all x.(Max(x) -> -Numpus(x)) & all y.(Max(y) -> Grimpus(y)) & all z.(Max(z) -> Vumpus(z))))", "all x y z.((Max(x) & Grimpus(y) & Vumpus(z)) -> (-Numpus(x) & Grimpus(y) & Vumpus(z)))", "(all x y z.((Max(x) & Numpus(y)) -> -Numpus(x)) & ((Max(z) & Grimpus(z))) -> Vumpus(z)))", "all x.(Max(x) -> (-Numpus(x) & Grimpus(x) & Vumpus(x)))", "(all x y z.((Max(x) & Numpus(y) & Grimpus(z)) -> -Numpus(x)) & ((Max(x) & Grouchpus(x)) -> Vumpus(x)))", "all x y z.((Max(x) & Numpus(y) & Grimpus(z)) -> (-Numpus(x) | (-Numpus(x) & Grimpus(z) & Vumpus(z))))", "(all x.(Max(x) -> -Numpus(x)) & (Max(x) -> Grimpus(x)) & (Max(x) -> Vumpus(x)))", "(-numpus(Max) & Grimpus(Max) & Vumpus(Max))", "all x.(Max(x) -> (-Numpus(x) & Grimpus(x) & Vumpus(x)))", "(all x.(Max(x) -> -Numpus(x)) & all y.(Max(y) -> Grimpus(y)) & all z.(Max(z) -> Vumpus(z)))", "all x y z.((Max(x) & Numpus(y) & Grimpus(z) & Vumpus(x)) -> -Numpus(x) & Grimpus(x) & Vumpus(x))", "all x y z.((Max(x) & Grimpus(y) & Vumpus(z)) -> (-Numpus(x) & Grimpus(y) & Vumpus(z)))", "(all x y z.((Max(x) & Numpus(y) & Grimpus(z)) -> -Numpus(x)) & ((Max(x) & Grimpus(x)) -> Vumpus(x)))", "(all x.(Max(x) -> -Numpus(x)) & (Max(x) -> Grimpus(x)) & (Max(x) -> Vumpus(x)))"]}
{"id": "prontoqa_train_382", "nl": "Shumpuses are dumpuses.", "fol": "all x. (shumpus(x) -> dumpus(x))", "prediction": ["all x.(Shupuse(x) -> Dumpuse(x))", "all x.(Shumpuse(x) -> Dumpuse(x))", "all x.(Shupuse(x) -> Dumpuse(x))", "all x y.((Shupuse(x) & Dumpuse(y)) -> (Dumpsuse(x) & -Dumpsuse(y)))", "(Dumpsuse(sh) & -Dumpsuse(sh) & -Dumpsuse(sh))", "all x y.((Shupuse(x) & Dumpuse(y)) -> Is(x,y))", "all x.(Shutus(x) -> Dumpuse(x))", "all x.(Shampoos(x) -> Dumpuse(x))", "(all x.(Shupuse(x) -> Dumpuse(x)))", "all x.(Shupuse(x) -> Dumpuse(x))", "all x.(Shumpuse(x) -> Dumpuse(x))", "all x.(Shampoose(x) -> Dumpuse(x))", "(all x.(Shupuse(x) -> Dumpuse(x))", "all x.(Shutup(x) -> Dumpuse(x))", "(Dumpsus)", "all x.(Shupuse(x) -> Dumpuse(x))"]}
{"id": "prontoqa_train_383", "nl": "Max is a yumpus, Max is a lempus, and Max is not a dumpus.", "fol": "(yumpus(Max) & lempus(Max) & -dumpus(Max))", "prediction": ["(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> -Dumpus(x)))", "all x y z.((Max(x) & Yumpus(y) & Lempus(z)) -> (Yumpus(x) & Lempus(z) & -Dumpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> -Dumpus(z))))", "(all x y z.((Max(x) & Yumpus(y)) -> (Yumpus(x) & Lempus(y))) & ((Max(z) & Dumpus(z)) -> -Dumpus(z)))", "all x.(Max(x) -> (Yumpus(x) & Lempus(x) & -Dumpus(x)))", "all x y z.((Max(x) & Yumpus(y) & Lempus(z)) -> (Yumpus(x) & Lempus(z) & -Dumpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Lempus(x)) & -Dumpus(x)))", "(all x y z.((Max(x) & Yumpus(y) & Lempus(z)) -> (Yumpus(x) & Lempus(z) & -Dumpus(x)))", "(yumpus(x) | Lempus(x) | Dumpus(x)))", "(all x.(Max(x) -> Yampus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> -Dumpus(z))))", "all x.(Max(x) -> (Yumpus(x) & Lempus(x) & -Dumpus(x)))", "all x y z.((Max(x) & Yumpus(y) & Lempus(z)) -> (Yumpus(x) & Lempus(z) & -Dumpus(x)))", "all x y z.((Max(x) & Yumpus(y) & Lempus(z)) -> (Yumpus(x) | Lempus(z) | -Dumpus(z)))", "all x y z.((Max(x) & Yumpus(y) & Lempus(z) & -Dumpus(z)) -> (Yumpus(x) | Lempus(z) | -Dumpus(z)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> -Dumpus(x)))", "(all x.(Max(x) -> Yampus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> -Dumpus(z))))"]}
{"id": "prontoqa_train_384", "nl": "Each yumpus is a shumpus.", "fol": "all x. (yumpus(x) -> shumpus(x))", "prediction": ["all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x y.((Yumpus(x) & Humpus(y)) -> Shumpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x y.((Yumpus(x) & Shumpus(y)) -> Has(x,y))", "(all x.(Yumpus(x) -> Humpus(x)))", "all x.(Yumpus(x) -> Humpus(x))", "all x y.((Yumpus(x) & Humpus(y)) -> Is(x,y))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "exists x.(Yumpus(x) & Humpus(x))", "exists x.(yumpus(x) & Shumpus(y))", "exists x.(Yumpus(x) & Humpus(x))"]}
{"id": "prontoqa_train_385", "nl": "Wren is a lempus, Wren is a grimpus, and Wren is not a shumpus.", "fol": "(lempus(Wren) & grimpus(Wren) & -shumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Lempus(x)) & (Wren(x) -> Grimpus(x)) & (Wren(x) -> -Shumpus(x)))", "all x y z.((Wren(x) & Lempus(x) & Grimpus(y) & -Shumpus(z)) -> (Lempus(x) & Grimpus(y) & -Shumpus(z)))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Grimpus(y)) & all z.(Wren(z) -> -Shumpus(z))))", "(all x y z.((Wren(x) & Lempus(x)) -> (Lempus(x) & Grimpus(y)) & ((Wren(z) & -Shumpus(z))) -> (Shumpus(z))))", "(all x y z.(Wren(x) -> Lempus(x)) & (Wren(y) -> Grimpus(y)) & (Wren(z) -> -Shumpus(z))))", "all x y z.((Wren(x) & Lempus(x) & Grimpus(y) & -Shumpus(z)) -> (Lempus(x) & Grimpus(y) & -Shumpus(z)))", "all x.(Wren(x) -> (Lempus(x) & Grimpus(x) & -Shumpus(x)))", "(all x.(Wren(x) -> Lempus(x)) & (Wren(x) -> Grimpus(x)) & (Wren(x) -> -Shumpus(x)))", "all x y z.((Wren(x) & Lempus(y) & Grimpus(z)) -> (Lempus(x) | Grimpus(z) | -Shumpus(z)))", "(all x y z.((Wren(x) & Lempus(y)) -> (Lempus(z) | Grimpus(z))) & ((Wren(x) & -Shumpus(x)) -> (Shumpus(x))))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Grimpus(y)) & all z.(Wren(z) -> -Shumpus(z))))", "all x y z.((Wren(x) & Grimpus(y) & Shumpus(z)) -> (Lempus(x) | Grimpus(y) | -Shumpus(z)))", "(all x.(Wren(x) -> Lempus(x)) & (Wren(x) -> Grimpus(x)) & -Shumpus(x)))", "all x y z.((Wren(x) & Lempus(y) & Grimpus(z)) -> (Lempus(x) & Grimpus(x) & -Shumpus(x)))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Grimpus(y)) & all z.(Wren(z) -> -Shumpus(z))))", "all x y z.((Wren(x) & Grimpus(y) & Shumpus(z)) -> (Lempus(x) | Grimpus(y) | -Shumpus(z)))"]}
{"id": "prontoqa_train_386", "nl": "Lorpuses are brimpuses.", "fol": "all x. (lorpus(x) -> brimpus(x))", "prediction": ["all x.(Lorpus(x) -> Brimpuse(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x y.((Lorpus(x) & Brimpus(y)) -> Brimpus(x))", "all x y.((Lorpuse(x) & Brimpus(y)) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpuse(x))", "(Brimpuse(lorpus) & Brimpus(lorpus))", "all x.(Lorpus(x) -> Brimpus(x))", "(Brimpus(lorpus) & Brimpus(lorpus))", "all x.(Lorpuse(x) -> Brimpuse(x))", "all x.(Lorpus(x) -> Brimpuse(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lurpuse(x) -> Brimpus(x))", "all x.(Lorpes(x) -> Brimpuse(x))", "all x.(Lorpus(x) -> Brimpuse(x))", "All x.(Lurpuse(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_387", "nl": "Alex is a sterpus, Alex is not a brimpus, and Alex is a grimpus.", "fol": "(sterpus(Alex) & -brimpus(Alex) & grimpus(Alex))", "prediction": ["(all x.(Alex(x) -> Sterpus(x)) & (Alex(x) -> -Brimpus(x)) & (Alex(x) -> Grimpus(x)))", "all x y z.((Alex(x) & Sterepus(y) & Brimpus(z)) -> (Sterepus(x) & -Brimpus(y) & Grimpus(z)))", "(all x.(Alex(x) -> Sterpus(x)) & ((Alex(x) & -Brimpus(x))) | (Alex(x) & Grimpus(x))))", "all x.(Alex(x) -> (Sterpus(x) & -Brimpus(x) & Grimpus(x)))", "all x y z.((Alex(x) & Sterpus(x) & -Brimpus(y) & Grimpus(z)) -> (Stereo(x) & -Brimpus(y) & Grimpus(z)))", "(all x y z.((Alex(x) & Sterpus(y)) -> Sterepus(x)) & ((Alex(z) & -Brimpus(z)) -> Grimpus(z)))", "all x y z.((Alex(x) & Sterpus(y) & Brimpus(z)) -> (Sterpus(x) & -Brimpus(y) & Grimpus(z)))", "(all x.(Alex(x) -> Sterepus(x)) & (Alex(x) -> -Brimpus(x)) & (Alex(x) -> Grimpus(x)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> -Brimpus(y))) & all z.(Alex(z) -> Grimpus(z)))", "(all x y z.((Alex(x) & Sterepus(y)) -> Sterpus(x)) & ((Alex(z) & -Brimpus(z))) -> Grimpus(z)))", "all x.(Alex(x) -> (Sterepus(x) & -Brimpus(x) & Grimpus(x)))", "(all x.(Alex(x) -> Sterpus(x)) & (-Brimpus(x) & (-Storpus(x) | Grimpus(x))))", "all x y z.((Alex(x) & Sterepus(y) & Brimpus(z)) -> (Sterepus(x) & -Brimpus(y) & Grimpus(z)))", "all x y z.((Alex(x) & Sterpus(x) & -Brimpus(y) & Grimpus(z)) -> (Sterepus(x) & Grimpus(z)))", "all x.(Alex(x) -> (Sterpus(x) & -Brimpus(x) & Grimpus(x)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> -Brimpus(y))) & all z.(Alex(z) -> Grimpus(z)))"]}
{"id": "prontoqa_train_388", "nl": "Alex is not a lorpus.", "fol": "-lorpus(Alex)", "prediction": ["all x.(Alex(x) -> -Lorpus(x))", "Alex is not a lorpus.", "(-Lorpus(Alex))", "all x.(Alex(x) -> -Lorpus(x))", "Alex is notLorpus(Alex)", "(-Lorpus(Alex) & -Lorpus(Alex))", "Alex is not a lorpus.", "all x.(Alex(x) -> -Lorpus(x))", "-Lorpus(Alex)", "Alex is not a lorpus.", "Alex is notLorpus(Alex)", "all x.(Alex(x) -> -Lorpus(x))", "(-Lorpus(Alex)).", "-Lorpus(Alex)", "all x.(Alex(x) -> -Lorpus(x))", "All x.(Alex(x) -> -Lorpus(x))"]}
{"id": "prontoqa_train_389", "nl": "Dumpuses are numpuses.", "fol": "all x. (dumpus(x) -> numpus(x))", "prediction": ["all x.(Dumpuse(x) -> Numpuse(x))", "(all x.(Dumpuse(x) -> Numpuse(x)))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x y.((Dumpuse(x) & Numpus(y)) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "(all x.(Dumpuse(x) -> Numpuse(x)))", "all x y.((Dumpuse(x) & Numpus(y)) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpus(x))", "all x.(Dumpus(x) -> Numpus(x))", "(all x.(Dumpuse(x) -> Numpus(x))", "(Numpus)", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpus(x) -> Numpus(x))"]}
{"id": "prontoqa_train_390", "nl": "Rex is not a numpus and Rex is a yumpus and Rex is a rompus.", "fol": "(-numpus(Rex) & yumpus(Rex) & rompus(Rex))", "prediction": ["(all x.(Rex(x) -> -Numpus(x)) & all y.(Yumpus(y) & all z.(Rompus(z)) -> -Yumpus(y)))", "all x y z.((Rex(x) & Numpus(y) & Yampus(z)) -> (-Numpus(x) & Yampus(y) & Rompus(z)))", "(all x y z.((Rex(x) & Numpus(y) & Yampus(z)) -> -Numpus(x)) & ((Rex(x) & Yampus(x)) -> Rompus(x)))", "(-numpus(Rex) & -yumpus(Rex) & -rompus(Rex))", "(all x.(Rex(x) -> -Numpus(x)) & (Yumpus(x) | Rompus(x))))", "all x.(Rex(x) -> (-Numpus(x) & Yumpus(x) & Rompus(x)))", "all x y z.((Rex(x) & Numpus(y) & Yumpus(z)) -> (-Numpus(x) & Yumpus(x) & Rompus(x)))", "(-Numpus(Rex) & Yumpus(Rex) & Rompus(Rex))", "all x y.((Rex(x) & Numpus(y) & Yampus(y)) -> (-Numpus(x) & Yumpus(y) & Rompus(x)))", "(all x.(Rex(x) -> -Numpus(x)) & all y.(Yumpus(y) & all z.(Rompus(z))) -> -Yumpus(y)))", "(all x y.(Rex(x) -> -Numpus(x)) & (Yumpus(y) & Rompus(y)))", "all x y z.((Rex(x) & Numpus(y) & Yampus(z)) -> (-Numpus(x) & Yampus(x) & Rompus(x)))", "all x.(Rex(x) -> (-Numpus(x) & Yumpus(x) & Rompus(x)))", "(all x.(Rex(x) -> -Numpus(x)) & (Yumpus(x) & Rompus(x)))", "all x y z.((Rex(x) & Numpus(y) & Yumpus(z)) -> (-Numpus(x) & Yumpus(y) & Rompus(z)))", "(all x.(Rex(x) -> -Numpus(x)) & all y.(Yumpus(y) -> Rompus(y)))"]}
{"id": "prontoqa_train_391", "nl": "Every dumpus is a jompus.", "fol": "all x. (dumpus(x) -> jompus(x))", "prediction": ["all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "all x y.((Dumpus(x) & Dumpus(y)) -> Jompus(x))", "(all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "all x y.((Dumpus(x) & Jompus(y)) -> Has(x,y))", "all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "exists x.(Dumps(x) & Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "exists x.(Dumpus(x) & Jompus(x))", "exists x.(Dumpus(x) & Joompa(x))", "all x.(Dumpus(x) -> Jompus(x))"]}
{"id": "prontoqa_train_392", "nl": "Stella is a vumpus and Stella is not a jompus and Stella is an impus.", "fol": "(vumpus(Stella) & -jompus(Stella) & impus(Stella))", "prediction": ["(all x.(Stella(x) -> Vumpus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Imperator(x)))", "all x y z.((Stella(x) & Vumpus(x) & Stella(y) & Jompus(z)) -> (Vumpus(x) & -Jompus(y) & Imperator(y)))", "(all x y.((Stella(x) & Vumpus(x)) -> (Vumpus(x) & -Jompus(y))) & ((Stella(x) & Imperator(x)) -> Imperator(x)))", "(all x.(Vumpus(x) -> Stella)) & (-Jompus(x) -> Stella)) & (Impossible(x) -> Stella)))", "all x y.((Stella(x) & Vumpus(x) & Stella(y)) -> (-Jompus(y) & IsImpossible(y)))", "all x.(Stella(x) -> (Vumpus(x) & -Jompus(x) & Imperator(x)))", "(all x y z.((Stella(x) & Vumpus(x) & -Jompus(y)) -> (Vumpus(x) & -Jompus(y) & Imperator(z)))", "(all x.(Stella(x) -> Vumpus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Imperator(x)))", "(all x y.(Vumpus(x) -> Stella(x)) & (Jompus(y) -> Stella(y))) & (Impossible(y) -> Stella(y)))", "(all x.(Stella(x) -> Vumpus(x)) & all y.(Stella(y) -> -Jompus(y))) & all z.(Stella(z) -> Imperator(z)))", "all x.(Stella(x) -> (Vumpus(x) & -Jompus(x) & Imperator(x)))", "all x y z.((Stella(x) & Vumpus(x) & Stella(y) & Jompus(z)) -> (-Jompus(y) & Issue(y)))", "all x y z.((Stella(x) & Vumpus(x) & Stella(y) & IsJompus(y)) -> (Vumpus(x) & -Jompus(y) & IsImpossible(y)))", "(all x.(Vumpus(x) -> Stella)) & (-Jompus(x) -> Stella(x)))", "all x y.((Stella(x) & Vumpus(x) & Stella(y)) -> (-Jompus(y) & Imperator(y)))", "exists x.(Vumpus(x) & -Jompus(x) & Imperator(x))"]}
{"id": "prontoqa_train_393", "nl": "Stella is not a dumpus.", "fol": "-dumpus(Stella)", "prediction": ["Stella is not a Dumpus.", "all x.(Stella(x) -> -Dumpus(x))", "(-Dumpus(Stella))", "Stella is not a Dumpus.", "all x.(Stella(x) -> -Dumpus(x))", "(-Dumpus(Stella))", "Stella is not Dumpus(Stella)", "Stella is not a dumpus.", "Stella -Dumpus(Stella)", "all x.(Stella(x) -> -Dumpus(x))", "Stella is not a Dumpus(Stella)", "(-Dumpus(Stella))", "-Dumpus(Stella)", "Stella -Dumpus(Stella)", "(-Dumpus(Stella))", "Stella is not Dumpus."]}
{"id": "prontoqa_train_394", "nl": "Each vumpus is a sterpus.", "fol": "all x. (vumpus(x) -> sterpus(x))", "prediction": ["all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "(all x.(Vumpus(x) -> Sterpus(x))", "all x y.((Vumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x y.((Vumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "exists x.(Vumpus(x) & Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "exists x.(Vumpus(x) & Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "exists x.(Vumpus(x) & Sterpus(x))", "exists x.(Vumpus(x) & Sterpus(x))"]}
{"id": "prontoqa_train_395", "nl": "Wren is a zumpus and Wren is a tumpus and Wren is not a sterpus.", "fol": "(zumpus(Wren) & tumpus(Wren) & -sterpus(Wren))", "prediction": ["(all x.(Wren(x) -> Zumpus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Sterpus(z))))", "all x y z.((Wren(x) & Zumpus(x) & Wren(y) & Tumpus(y)) -> (Tompus(x) & -Sterpus(z)))", "(all x y z.((Wren(x) & Zumpus(x)) -> Tompus(x)) & ((Wren(y) & Tumpus(y)) -> -Sterepus(z)))", "(all x.(Wren(x) -> Zumpus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Sterepus(x)))", "all x y.((Wren(x) & Zumpus(x) & Wren(y)) -> (Tumpus(y) & -Sterepus(y)))", "all x y z.((Wren(x) & Zumpus(x) & Wren(y) & Tumpus(y)) -> (Tompus(x) & -Sterepus(z)))", "all x y z.((Wren(x) & Tompus(y) & Tumpus(z)) -> (Tompus(x) & Tumpus(x) & -Sterpus(x)))", "(all x y.(Wren(x) -> Zumpus(x)) & (Wren(y) -> Tumpus(y)) & (Wren(y) -> -Sterepus(y)))", "all x.(Wren(x) -> (Tompus(x) | Tumpus(x) | -Sterpus(x)))", "(all x.(Wren(x) -> Zumpus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Sterepus(z))))", "all x y.((Wren(x) & Tompus(x) & Tumpus(y)) -> (Tompus(x) & -Sterpus(y)))", "(all x.(Wren(x) -> Zumpus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Sterpus(x)))", "(all x y z.(Wren(x) -> Zumpus(x)) & (Wren(y) -> Tumpus(y)) & (Wren(z) -> -Sterepus(z)))", "all x y.((Wren(x) & Tompus(x) & Tumpus(y)) -> (Tompus(x) & -Sterepus(y)))", "all x y z.((Wren(x) & Zumpus(x) & Wren(y) & Tumpus(z)) -> (Tumpus(y) & -Sterpus(z)))", "(all x.(Wren(x) -> Zumpus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Sterpus(z))))"]}
{"id": "prontoqa_train_396", "nl": "Lorpuses are rompuses.", "fol": "all x. (lorpus(x) -> rompus(x))", "prediction": ["all x.(Lorpus(x) -> Rompus(x))", "all x.(Lorpus(x) -> Rompus(x))", "all x y.((Lorpuse(x) & Rompus(y)) -> Rompus(x))", "all x y.((Lorpus(x) & Rompus(y)) -> Is(x,y))", "all x.(Lorpus(x) -> Rompus(x))", "(Rompus(lorpus) & Worm(lorpus))", "all x.(Lorpuse(x) -> Rompus(x))", "all x.(Lorpus(x) -> Rompus(x))", "(Rompus(lorpus) & Lopus(lorpus))", "(Rompus(lorpus) -> Lorpus(lorpus))", "all x.(Lorpuse(x) -> Rompus(x))", "all x.(Lorpus(x) -> Rompus(x))", "all x.(Lorpheus(x) -> Rompus(x))", "all x.(Lorpus(x) -> Rompus(x))", "All x.(Lorpuse(x) -> Rompus(x))", "all x.(Lorpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_397", "nl": "Stella is a numpus, Stella is a gorpus, and Stella is not a rompus.", "fol": "(numpus(Stella) & gorpus(Stella) & -rompus(Stella))", "prediction": ["(all x.(Stella(x) -> Numpus(x)) & (Stella(x) -> Gorpus(x)) & -Rompus(x)))", "all x y z.((Stella(x) & Numpus(x) & Gorpus(y) & -Rompus(z)) -> (Numpus(x) & Gorpus(y) & -Rompus(z)))", "(all x.(Stella(x) -> Numpus(x)) & all y.(Stella(y) -> Gorpus(y)) & all z.(Stella(z) -> -Rompus(z))))", "(all x y z.((Stella(x) & Numpus(y)) -> (Numpus(x) & Gorpus(y))) & ((Stella(z) & Rompus(z)) -> -Rompus(z)))", "(all x.(Stella(x) -> Numpus(x)) & (Stella(x) -> Gorpus(x)) & (Stella(x) -> -Rompus(x)))", "exists x.(Stella(x) & Numpus(x) & Gorpus(x) & -Rompus(x))", "all x y z.((Stella(x) & Numpus(x) & Gorpus(y) & -Rompus(z)) -> (Numpus(x) & Gorpus(y) & -Rompus(z)))", "all x y z.((Stella(x) & Numpus(y) & Gorpus(z)) -> (Numpus(x) & Gorpus(x) & -Rompus(x)))", "all x.(Stella(x) -> (Numpus(x) & Gorpus(x) & -Rompus(x)))", "(all x.(Stella(x) -> Numpus(x)) & all y.(Stella(y) -> Gorpus(y)) & all z.(Stella(z) -> -Rompus(z))))", "(all x y z.((Stella(x) & Numpus(x)) -> (Numpus(x) & Gorpus(y))) & ((Stella(z) & -Rompus(z)) -> -Rompus(z)))", "all x y z.((Stella(x) & Numpus(x) & Gorpus(y) & Rompus(z)) -> (Numpus(x) & Gorpus(y) & -Rompus(z)))", "(all x y z.((Stella(x) & Numpus(y) & Gorpus(z)) -> Numpus(x)) & ((Stella(x) & Gorpus(x)) -> -Rompus(x)))", "(all x.(Stella(x) -> Numpus(x)) & (Stella(x) -> Gorpus(x)) & (Stella(x) -> -Rompus(x)))", "(all x.(Numpus(x) | Gorpus(x)) & -Rompus(x))", "all x y z.((Stella(x) & Numpus(y) & Gorpus(z)) -> (Numpus(x) & Gorpus(y) & -Rompus(z)))"]}
{"id": "prontoqa_train_398", "nl": "Stella is not a lorpus.", "fol": "-lorpus(Stella)", "prediction": ["Stella is not a lorpus.", "all x.(Stella(x) -> -Lorpus(x))", "(-Lorpus(Stella))", "Stella -Lorpus(Stella))", "Stella is not a lorpus.", "(-Lorpus(Stella))", "all x.(Stella(x) -> -Lorpus(x))", "Stella is not a lorpus.", "Stella is -Lorpus(Stella)", "(-Lorpus(Stella))", "Stella -Lorpus(Stella)", "all x.(Stella(x) -> -Lorpus(x))", "Stella is not a lorpus.", "-Lorpus(Stella)", "Stella is not a lorpus.", "(-Lorpus(Stella))"]}
{"id": "prontoqa_train_399", "nl": "Each numpus is a yumpus.", "fol": "all x. (numpus(x) -> yumpus(x))", "prediction": ["all x.(Nompus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x y.((Numpus(x) & Yumpus(y)) -> Has(x,y))", "all x.(Numpus(x) -> Yumpus(x))", "all x y.((Numpus(x) & Yumpus(y)) -> Has(x,y))", "all x.(Numerus(x) -> Yumpus(x))", "all x.(Nompus(x) -> Yampus(x))", "all x y.((Nompus(x) & Yumpus(y)) -> Is(x,y))", "exists x.(numpus(x) & Yumpus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yampus(x))", "all x.(Nompus(x) -> Yumpus(x))", "exists x.(numpus(x) & Yampus(x))", "all x.(Numpus(x) -> Yumpa(x))", "exists x.(Numpus(x) & Yampus(x))", "exists x.(Nompus(x) & Yampus(x))"]}
{"id": "prontoqa_train_400", "nl": "Stella is a sterpus, Stella is not a yumpus, and Stella is a jompus.", "fol": "(sterpus(Stella) & -yumpus(Stella) & jompus(Stella))", "prediction": ["(all x.(Stella(x) -> Sterpus(x)) & (Stella(x) -> -Yumpus(x)) & (Stella(x) -> Jompus(x)))", "all x y z.((Stella(x) & Sterpus(y) & -Yumpus(z)) -> (Stella(x) & Jompus(x)))", "(all x y z.((Stella(x) & Sterpus(y)) -> (Sterpus(z) | -Yumpus(z)) | (Jompus(z) & -Storps(z))))", "all x y z.((Stella(x) & Sterpus(y) & Yumpus(z)) -> (Stella(x) & Jompus(x)))", "(all x.(Stella(x) -> Sterpus(x)) & (Stella(x) -> -Yumpus(x)) & (Stella(x) -> Jompus(x)))", "(all x y z.((Stella(x) & Sterpus(y)) -> (Stereo(x) & -Yumpus(y)) & ((Stella(z) & Jompus(z)) -> (Jompus(z))))", "all x y z.((Stella(x) & Sterepus(y) & Yompus(z)) -> (Sterpus(x) & -Yumpus(y) & Jompus(z)))", "(all x y z.((Stella(x) & Sterepus(y) & -Yumpus(z)) -> Sterpus(x)) & ((Stella(x) & Jompus(x)) -> Jompus(x)))", "all x.(Stella(x) -> (Sterpus(x) & -Yumpus(x) & Jompus(x)))", "(all x.(Stella(x) -> Sterepus(x)) & (Stella(x) -> -Yumpus(x)) & (Stella(x) -> Jompus(x)))", "(all x.(Stella(x) -> Sterepus(x)) & all y.(Stella(y) -> -Yumpus(y)) & all z.(Stella(z) -> Jompus(z))))", "all x y z.((Stella(x) & Sterpus(x) & Stella(y) & Yompus(z)) -> (-Yumpus(y) & Jompus(z)))", "all x.(Stella(x) -> (Stereos(x) | -Yumpus(x) | Jompus(x)))", "all x y z.(Stella(x) -> (Sterpus(x) | Stella(y) & -Yumpus(y) | Stella(z)))", "(all x.(Stella(x) -> Sterpus(x)) & (Stella(x) -> -Yumpus(x)) & (Stella(x) -> Jompus(x)))", "(all x.(Stella(x) -> Sterpus(x)) & (Stella(x) -> -Yumpus(x)) & (Stella(x) -> Jompus(x)))"]}
{"id": "prontoqa_train_401", "nl": "Each yumpus is a jompus.", "fol": "all x. (yumpus(x) -> jompus(x))", "prediction": ["all x.(Yumpus(x) -> Jompus(x))", "all x.(Yumpus(x) -> Jompus(x))", "(all x.(Yumpus(x) -> Jompus(x)))", "all x y.((Yumpus(x) & Jompus(y)) -> Has(x,y))", "all x.(Yumpus(x) -> Jompus(x))", "all x y.((Yumpus(x) & Jompus(y)) -> Has(x,y))", "all x.(Yumpus(x) -> Jompus(x))", "all x y.((Yumpus(x) & Jompus(y)) -> Has(x,y))", "all x.(Yumpus(x) -> Jompus(x))", "all x.(Yumpus(x) -> Jompus(x))", "all x.(Yumpus(x) -> Jompus(x))", "exists x.(yumpus(x) & Yompus(y) & HasJimpus(x))", "all x.(Yumpus(x) -> Jompus(x))", "all x.(Yumpus(x) -> Jompus(x))", "exists x.(Yumpus(x) & Jompus(x))", "exists x.(Yumpus(x) & Joompus(x))"]}
{"id": "prontoqa_train_402", "nl": "Alex is a shumpus, Alex is a gorpus, and Alex is not a jompus.", "fol": "(shumpus(Alex) & gorpus(Alex) & -jompus(Alex))", "prediction": ["(all x.(Alex(x) -> Humpus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Jompus(z))))", "all x y z.((Alex(x) & Shumpus(y) & Gorpus(z)) -> (Shumpus(x) & Gorpus(x) & -Jompus(x)))", "(all x.(Alex(x) -> Humpus(x)) & (Alex(x) -> Gorpus(x)) & -Jompus(x)))", "(all x.(Alex(x) -> Shumpus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Jompus(z))))", "all x.(Alex(x) -> (Shumpus(x) | Gorpus(x) | -Jompus(x)))", "all x y z.((Alex(x) & Humpus(y) & Gorpus(z)) -> (Shumpus(x) & Gorpus(x) & -Jompus(x)))", "all x y z.((Alex(x) & Shumpus(y) & Gorpus(z)) -> (Shumpus(x) & Gorpus(x) & -Jumpus(x)))", "(all x y z.(Alex(x) -> Shumpus(x)) & (Alex(y) -> Gorpus(y)) & (Alex(z) -> -Jompus(z)))", "all x.(Alex(x) -> (Shumpus(x) | Gorpus(x) | -Jompus(x)))", "(all x.(Alex(x) -> Humpus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Jompus(z))))", "(all x.(Alex(x) -> Shumpus(x)) & (Alex(x) -> Gorpus(x)) & -Jompus(x)))", "all x y z.((Alex(x) & Humpus(y) & Gorpus(z)) -> (Shumpus(x) | Gorpus(z) | -Jumpus(z)))", "(all x.(Alex(x) -> Humpus(x)) & (Alex(x) -> Gorpus(x)) & (Alex(x) -> -Jompus(x)))", "all x y z.((Alex(x) & Humpus(y) & Gorpus(z)) -> (Shumpus(x) | Gorpus(x) | -Jompus(x)))", "(all x y z.(Alex(x) -> Shumpus(x)) & (Alex(y) -> Gorpus(y)) & (Alex(z) -> -Jompus(z)))", "all x.(Alex(x) -> (Shumpus(x) | Gorpus(x) | -Jompus(x)))"]}
{"id": "prontoqa_train_403", "nl": "Every brimpus is a tumpus.", "fol": "all x. (brimpus(x) -> tumpus(x))", "prediction": ["all x.(Brumpus(x) -> Tumpus(x))", "all x.(Brimpus(x) -> Tumpus(x))", "all x y.((Brumpus(x) & Tumpus(y)) -> Is(x,y))", "all x.(Brumpus(x) -> Tumpus(x))", "(all x.(Brimpus(x) -> Tumpus(x))", "all x y.((Brimpus(x) & Tumpus(y)) -> Has(x,y))", "all x.(Brimpus(x) -> Tumpus(x))", "all x.(Brumpus(x) -> Tumpus(x))", "exists x.(Brimpus(x) & Tumpus(x))", "all x.(Brimpus(x) -> Tumpus(x))", "all x.(Brumpus(x) -> Tumulus(x))", "all x.(Brimpus(x) -> Tumpus(x))", "all x.(Brimpus(x) -> Tumpus(x))", "all x.(Brumpus(x) -> Tumpus(x))", "exists x.(Brimpus(x) & Tumulus(x))", "exists x.(Brampus(x) & Tumpus(x))"]}
{"id": "prontoqa_train_404", "nl": "Sally is a shumpus, Sally is not a tumpus, and Sally is a grimpus.", "fol": "(shumpus(Sally) & -tumpus(Sally) & grimpus(Sally))", "prediction": ["(all x.(Sally(x) -> Humpus(x)) & (-Tumpus(x) & (Sally(x) -> Grimpus(x))))", "all x y z.((Sally(x) & Humpus(y) & Tumpus(z)) -> (Shumpus(x) & -Tumpus(y) & Grimpus(z)))", "(all x y z.((Sally(x) & Humpus(y)) -> Shumpus(x)) & ((Sally(z) & -Tumpus(z))) -> Grimpus(z)))", "(all x.(Sally(x) -> Humpus(x)) & (-Tumpus(x) & (Grimpus(x) -> Grimpus(x))))", "(all x.(Sally(x) -> Shumpus(x)) & (-Tumpus(x) & (Grimpus(x) -> Grimpus(x))))", "all x y z.((Sally(x) & Shumpus(y) & Tumpus(z)) -> (Shumpus(x) & -Tumpus(y) & Grimpus(z)))", "all x y z.((Sally(x) & Humpus(y) & Tumpus(z)) -> (Shumpus(x) & -Tumpus(y) & Grimpus(z)))", "all x.(Sally(x) -> (Shumpus(x) & -Tumpus(x) & Grimpus(x)))", "(all x.(Sally(x) -> Humpus(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Grimpus(x)))", "all x.(Sally(x) -> (Shumpus(x) | -Tumpus(x) | Grimpus(x)))", "exists x.(Sally(x) & Humpus(x) & -Tumpus(x) & Grimpus(x))", "(all x y.(Sally(x) -> Humpus(x)) & (Sally(y) -> -Tumpus(y)) & (Sally(y) -> Grimpus(y)))", "(all x y z.((Sally(x) & Humpus(y)) -> Shumpus(x)) & ((Sally(z) & -Tumpus(z))) -> Grimpus(z)))", "(all x.(Sally(x) -> Humpus(x)) & all y.(Sally(y) -> -Tumpus(y))) & all z.(Sally(z) -> Grimpus(z)))", "all x y z.((Sally(x) & Humpus(y) & Tumpus(z)) -> (Shumpus(x) | -Tumpus(x) | Grimpus(x)))", "(all x.(Sally(x) -> Shumpus(x)) & (-Tumpus(x) & (Sally(x) -> Grimpus(x))))"]}
{"id": "prontoqa_train_405", "nl": "Sally is not a brimpus.", "fol": "-brimpus(Sally)", "prediction": ["Sally is not a Brimpus.", "all x.(Sally(x) -> -Brimpus(x))", "(-Brimpus(Sally))", "Sally -Brimpus(Sally)", "Sally is not a Brimpus.", "all x.(Sally(x) -> -Brimpus(x))", "Sally n'est pas brimpus.", "Sally is not a brimpus.", "(-Brimpus(Sally))", "all x.(Sally(x) -> -Brumpus(x))", "-Brumpus(Sally)", "Sally -Brimpus(Sally)", "Sally is not a Brimpus.", "all x.(Sally(x) -> -Brimpus(x))", "Sally is not a brimpus.", "(-Brimpus(Sally))"]}
{"id": "prontoqa_train_406", "nl": "Every sterpus is a zumpus.", "fol": "all x. (sterpus(x) -> zumpus(x))", "prediction": ["all x.(Sterpus(x) -> Zumpus(x))", "all x.(Steerpus(x) -> Zumpus(x))", "all x y.((Sterpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Sterpus(x) -> Zumpus(x))", "(all x.(Sterpus(x) -> Zumpus(x))", "all x y.((Steerpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Steerpus(x) -> Zumpus(x))", "all x.(Stereopus(x) -> Zumpus(x))", "exists x.(Stereospheric(x) & Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Steerpus(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Steerpus(x) -> Zumpus(x))", "exists x.(Sterpus(x) & Zurpus(x))", "exists x.(Sternus(x) & Zurpus(x))"]}
{"id": "prontoqa_train_407", "nl": "Sam is a vumpus and Sam is a gorpus and Sam is not a zumpus.", "fol": "(vumpus(Sam) & gorpus(Sam) & -zumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Vumpus(x)) & (Sam(x) -> Gorpus(x)) & (Sam(x) -> -Zumpus(x)))", "all x y z.((Sam(x) & Vumpus(x) & Gorpus(y) & Sam(z)) -> (Vumpus(x) & Gorpus(y) & -Zumpus(z)))", "all x y.((Sam(x) & Vumpus(x) & Gorpus(y)) -> (Vumpus(x) & Gorpus(y) & -Zumpus(y)))", "all x y z.((Sam(x) & Vumpus(x) & Gorpus(y) & Zumpus(z)) -> (Vumpus(x) & Gorpus(y) & -Zumpus(z)))", "(all x.(Sam(x) -> Vumpus(x)) & all y.(Sam(y) -> Gorpus(y)) & all z.(Sam(z) -> -Zumpus(z))))", "all x.(Sam(x) -> (Vimpus(x) & Gorpus(x) & -Zumpus(x)))", "(all x y z.((Sam(x) & Vumpus(x) & Gorpus(y)) -> (Vumpus(x) & Gorpus(y) & -Zumpus(z))))", "(all x.(Sam(x) -> Vumpus(x)) & (Sam(x) -> Gorpus(x)) & (Sam(x) -> -Zumpus(x)))", "(all x y.(Vumpus(x) -> Sam(x)) & (Gorpus(y) -> Sam(y)) & (Zumpus(y) -> Sam(y)))", "all x y z.((Sam(x) & Vumpus(x) & Gorpus(y) & -Zumpus(z)) -> (Vumpus(x) & Gorpus(y) & -Zumpus(z)))", "all x.(Sam(x) -> (Vumpus(x) & Gorpus(x) & -Zumpus(x)))", "all x y.((Sam(x) & Sam(y)) -> (Vumpus(x) & Gorpus(y) & -Zumpus(y)))", "exists x.(Sam(x) & Vumpus(x) & Gorpus(x) & -Zumpus(x))", "(all x.(Sam(x) -> Vumpus(x)) & all y.(Sam(y) -> Gorpus(y)) & all z.(Sam(z) -> -Zumpus(z))))", "(all x.(Sam(x) -> Vumpus(x)) & (Sam(x) -> Gorpus(x)) & (Sam(x) -> -Zumpus(x)))", "exists x.(Sam(x) & (Vumpus(x) | Gorpus(x)) & -Zumpus(x))"]}
{"id": "prontoqa_train_408", "nl": "Every rompus is a brimpus.", "fol": "all x. (rompus(x) -> brimpus(x))", "prediction": ["all x.(Rompus(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "all x y.((Rompus(x) & Brimpus(y)) -> Has(x,y))", "(all x.(Rompus(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "all x.(rompus(x) -> Brimpus(x))", "all x y.((Rompus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Romesue(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "exists x.(rompus(x) & Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "exists x.(rompus(x) & Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "exists x.(rompus(x) & Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_409", "nl": "Wren is an impus, Wren is not a brimpus, and Wren is a wumpus.", "fol": "(impus(Wren) & -brimpus(Wren) & wumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Issuel(x)) & (-Isbrimpus(x) & -IsBrimpus(x)) & (-IsWumpus(x))))", "all x y z.((Wren(x) & Impossible(x) & Wren(y) & Brimpus(z)) -> (-Brimpus(y) & Wren(z)))", "(all x y z.((Wren(x) & Impossible(x)) -> Wren(y)) & ((Wren(z) & -Brimpus(z)) -> Wumpus(z)))", "(all x.(Wren(x) -> Issue(x)) & (-Isbrimpus(x) & -IsBrimpus(x)) & (-IsWumpus(x))))", "all x y z.((Wren(x) & Impossible(x) & Wren(y) & -Brimpus(y)) -> (Wumpus(z)))", "all x y z.((Wren(x) & Is(x,y) & Brimpus(y)) -> (Impossible(x) & -Impossible(y) & Wren(z) & Wumpus(z)))", "(all x y z.((Wren(x) & Is(x,y)) -> Is(x,z)) & ((Wren(y) & -IsBrimpus(y)) -> Wumpus(z)))", "(all x.(Wren(x) -> Imperative(x)) & (-Brimpus(x) & -Wumpus(x)))", "all x.(Wren(x) -> (Impossible(x) & -Brimpus(x) & Wren(x) & Wumpus(x)))", "all x y z.((Wren(x) & Imperator(y) & Brimpus(z)) -> (Impossible(x) & -Impossible(y) & Wumpus(z)))", "(all x y.(Wren(x) -> Issuel(x)) & (-IsBrimpus(y)) | (-IsBrimpus(y) & -IsWumpus(y))))", "(all x y z.((Wren(x) & Imperium(y)) -> Is(x,y)) & ((Wren(z) & -Brimpus(z))) -> Wumpus(z)))", "(all x.(Wren(x) -> Impossible(x)) & (-Brimpus(x) & -Wumpus(x)))", "(all x.(Wren(x) -> Issuel(x)) & (-IsBrimpus(x)) | (-IsBrimpus(x) & -IsWumpus(x))))", "all x y z.((Wren(x) & Impossible(x) & Wren(y) & Brimpus(z)) -> (-Brimpus(y) & Wren(z)))", "all x y z.((Wren(x) & Is(x,y) & Brimpus(y)) -> (-Impossible(x) & Wren(z) & Wumpus(z)))"]}
{"id": "prontoqa_train_410", "nl": "Each sterpus is a grimpus.", "fol": "all x. (sterpus(x) -> grimpus(x))", "prediction": ["all x.(Sterpus(x) -> Grimpus(x))", "all x.(Steerpus(x) -> Grimpus(x))", "all x y.((Sterpus(x) & Gruppus(y)) -> Sterpus(x))", "all x.(Sterpus(x) -> Grimpus(x))", "all x y.((Steerpus(x) & Grimpus(y)) -> Sterpus(x))", "all x.(Sterepus(x) -> Gruppus(x))", "(all x.(Sterpus(x) -> Grimpus(x)))", "all x.(Stereopus(x) -> Grimpus(x))", "all x.(Sterpus(x) -> Grimpus(x))", "all x.(Steerpus(x) -> Gruppus(x))", "exists x.(Sterpus(x) & Grimpus(x))", "all x.(Sterpus(x) -> Grimpus(x))", "exists x.(Sterpus(x) & Grumpus(x))", "all x.(Steerpus(x) -> Grimpus(x))", "exists x.(Sterpus(x) & Gruppus(x))", "exists x.(Steerpus(x) & Grimpus(x))"]}
{"id": "prontoqa_train_411", "nl": "Sam is a shumpus and Sam is not a grimpus and Sam is a rompus.", "fol": "(shumpus(Sam) & -grimpus(Sam) & rompus(Sam))", "prediction": ["all x y z.((Sam(x) & Sam(y) & Grimpus(z)) -> (Shumpus(x) & -Smoothpus(y) & Rompus(z)))", "(all x.(Shumpus(x) -> Sam(x)) & (-Smoothpus(x) -> Sam(x)) & (Rompus(x) -> Sam(x)))", "all x y.((Sam(x) & Sam(y)) -> (Shumpus(x) & -Smoothpus(y) & Rompus(y)))", "(all x.(Shumpus(x) -> -Grimpus(x)) & all y.(Rompus(y) -> -Shumpus(y)))", "all x y z.((Sam(x) & Humpus(y) & Grimpus(z)) -> (Shumpus(x) & -Smoothpus(y) & Rompus(z)))", "all x.(Sam(x) -> (Shumpus(x) & -Grimpus(x) & Rompus(x)))", "(all x.(Shumpus(x) -> Sam(x)) & (-Smooch(x) -> Sam(x)) & (Rompus(x) -> Sam(x)))", "(all x y.(Shumpus(x) -> Sam(x)) & (-Smooch(y) & Grimpus(y))) & (Rompus(y)) -> Sam(x)))", "(all x.(Shumpus(x) -> Shumpus(x)) & (-Smoothpus(x) -> Rompus(x)))", "(all x y.((Shumpus(x) & Sam(y)) -> Shumpus(x)) & ((Shumpus(y) & -Smoothpus(y)) -> Rompus(y)))", "all x.(Shumpus(x) & -Smoothpus(x) & Rompus(x))", "all x y.((Sam(x) & Sam(y)) -> (Shumpus(x) & -Grimpus(y) & Rompus(y)))", "all x y z.((Sam(x) & Shumpus(y) & Grimpus(z)) -> (Sam(x) & -Sam(x,z) & Rompus(x)))", "(all x.(Sam(x) -> Humpus(x)) & (Sam(x) -> -Grimpus(x)) & (Sam(x) -> Rompus(x)))", "(all x.(Shumpus(x) -> Sam(x)) & (-Smoothpus(x) -> Sam(x))) & (Rompus(x) -> Sam(x)))", "exists x.(Sam(x) & Shumpus(x) & -Smoothpus(x) & Rompus(x))"]}
{"id": "prontoqa_train_412", "nl": "Sam is a grimpus, Sam is not a rompus, and Sam is a dumpus.", "fol": "(grimpus(Sam) & -rompus(Sam) & dumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Rompus(x)) & (Sam(x) -> Dumpus(x)))", "all x y z.((Sam(x) & Grimpus(x) & Sam(y) & Dumpus(z)) -> (-Rompus(y) & Dumpus(z)))", "(all x y z.((Sam(x) & Grimpus(y)) -> (Sam(z) & -Rompus(z)) & ((Sam(x) & Dumpus(x)) -> (Sam(x) & Dumpus(x))))", "all x.(Sam(x) -> (Grimpus(x) | -Rompus(x) | Dumpus(x)))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Rompus(x)) & (Sam(x) -> Dumpus(x)))", "all x y z.((Sam(x) & Grimpus(y) & -Rompus(z)) -> (Sam(x) & Dumpus(x)))", "all x y z.((Sam(x) & Grimpus(x) & Sam(y) & Dumpus(z)) -> (-Rompus(y) & Dumpus(z)))", "(all x y z.((Sam(x) & Grimpus(y)) -> Grimpus(x)) & ((Sam(z) & -Rompus(z))) -> Dumpus(z)))", "(all x.(SameDay(x) -> Grimpus(x)) & (SameDay(x) -> -Rompus(x)) & (SameDay(x) -> Dumpus(x)))", "(all x.(Sam(x) -> Grimpus(x)) & all y.(Sam(y) -> -Rompus(y)) & all z.(Sam(z) -> Dumpus(z))))", "all x y z.((Sam(x) & Grumpus(x) & Sam(y) & Dumpus(z)) -> (-Rompus(y) & Dumpus(z)))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Rompus(x)) & (Sam(x) -> Dumpus(x)))", "exists x.(Sam(x) & Grimpus(x) & -Rompus(x) & Dumpus(x))", "all x.(Sam(x) -> (Grimpus(x) | -Rompus(x) | Dumpus(x)))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Rompus(x)) & (Sam(x) -> Dumpus(x)))", "all x y z.((Sam(x) & Grimpus(x) & Sam(y) & Dumpus(z)) -> (-Rompus(y) & Dumpus(z)))"]}
{"id": "prontoqa_train_413", "nl": "Max is not a vumpus, Max is a gorpus, and Max is a tumpus.", "fol": "(-vumpus(Max) & gorpus(Max) & tumpus(Max))", "prediction": ["(all x.(Max(x) -> -Vumpus(x)) & (Max(x) -> Gorpus(x)) & (Max(x) -> Tumpus(x)))", "all x y z.((Max(x) & Gorpus(y) & Tumpus(z)) -> (-Vumpus(x) & Gorpus(y) & Tumpus(z)))", "(all x.(Max(x) -> -Vumpus(x)) & all y.(Max(y) -> Gorpus(y)) & all z.(Max(z) -> Tumpus(z))))", "(all x y z.((Max(x) & Vumpus(y)) -> -Vumpus(x)) & ((Max(z) & Gorpus(z)) -> Tumpus(z)))", "all x.(Max(x) -> (-Vumpus(x) & Gorpus(x) & Tumpus(x)))", "all x y z.((Max(x) & Vumpus(y) & Gorpus(z)) -> (-Vumpus(x) & Gorpus(x) & Tumpus(x)))", "(all x.(Max(x) -> -Vumpus(x)) & all y.(Max(y) -> Gorpus(y)) & all z.(Max(z) -> Tumpus(z))))", "(-Vumpus(Max) & Gorpus(Max) & Tumpus(Max))", "(all x y z.((Max(x) & Vumpus(y) & Gorpus(z)) -> -Vumpus(x)) & ((Max(x) & Gorpus(x) & Tumpus(x)) -> Tumpus(x)))", "all x y z.((Max(x) & Gorpus(y) & Tumpus(z)) -> (-Vumpus(x) & Gorpus(y) & Tumpus(z)))", "(all x.(Max(x) -> -Vumpus(x)) & (Max(x) -> Gorpus(x)) & (Max(x) -> Tumpus(x)))", "all x.(Max(x) -> (-Vumpus(x) & Gorpus(x) & Tumpus(x)))", "(-Vumpus(Max) & Gorpus(Max) & Tumpus(Max))", "all x y z.((Max(x) & Vumpus(y) & Gorpus(z)) -> (-Vumpus(x) & Gorpus(x) & Tumpus(x)))", "all x y z.((Max(x) & Gorpus(y) & Tumpus(z)) -> (-Vumpus(x) & Gorpus(y) & Tumpus(z)))", "(all x.(Max(x) -> -Vimpus(x)) & (Max(x) -> Gorpus(x)) & (Max(x) -> Tumpus(x)))"]}
{"id": "prontoqa_train_414", "nl": "Sterpuses are numpuses.", "fol": "all x. (sterpus(x) -> numpus(x))", "prediction": ["all x.(Sterpus(x) -> Numpus(x))", "(all x.(Sterpuse(x) -> Numpus(x)))", "all x.(Sterpus(x) -> Numpus(x))", "all x y.((Sterpuse(x) & Numpus(y)) -> Numpus(x))", "all x.(Sterpus(x) -> Numpus(x))", "(Numptus(sterpuses) & Numpus(s))", "all x y.((Sterpus(x) & Numpus(y)) -> Numpus(x))", "all x.(Sterpus(x) -> Numpus(x))", "all x.(Stupid(x) -> Numpus(x))", "all x.(Sterpus(x) -> Numpus(x))", "all x.(Sterpus(x) -> Numpus(x))", "(Numpus(sterpuses)", "all x.(Stupid(x) -> Numpus(x))", "all x.(Sterpus(x) -> Numpuse(x))", "all x.(Strerpuse(x) -> Numpus(x))", "all x.(Sterpus(x) -> Numpus(x))"]}
{"id": "prontoqa_train_415", "nl": "Fae is a gorpus and Fae is not a numpus and Fae is a rompus.", "fol": "(gorpus(Fae) & -numpus(Fae) & rompus(Fae))", "prediction": ["(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Numpus(x)) & (Fae(x) -> Rompus(x)))", "all x y z.((Fae(x) & Gorpus(x) & Fae(y) & Numpus(z)) -> (-Numpus(y) & Rompus(z)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Numpus(x)) & (Fae(x) -> Rompus(x)))", "(all x y z.((Fae(x) & Gorpus(x)) -> Gorpus(x)) & ((Fae(y) & -Numpus(y)) -> Rompus(y)))", "all x y.((Fae(x) & Gorpus(x) & Fae(y)) -> (-Numpus(y) & Rompus(y)))", "(all x y.(Fae(x) -> Gorpus(x)) & (Fae(y) -> -Numpus(y)) & (Fae(y) -> Rompus(y)))", "all x.(Fae(x) -> (Gorpus(x) & -Numpus(x) & Rompus(x)))", "all x y z.((Fae(x) & Gorpus(x) & Fae(y) & Numpus(z)) -> (-Numpus(y) & Rompus(z)))", "all x y z.((Fae(x) & Gorpus(x) & Fae(y) & Rompus(z)) -> (-Numpus(y) & -Numpus(y) & -Rompus(z)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Numpus(x)) & (Fae(x) -> Rompus(x)))", "all x y.((Fae(x) & Gorpus(x)) -> (-Numpus(y) & Rompus(x)))", "exists x.(Fae(x) & Gorpus(x) & -Numpus(x) & Rompus(x))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Numpus(x)) & (Fae(x) -> Rompus(x)))", "all x.(Fae(x) -> (Gorpus(x) & -Numpus(x) & Rompus(x)))", "(all x y.(Fae(x) -> Gorpus(x)) & (Fae(y) -> -Numpus(y)) & (Fae(y) -> Rompus(y)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Numpus(x)) & (Fae(x) -> Rompus(x)))"]}
{"id": "prontoqa_train_416", "nl": "Wumpuses are zumpuses.", "fol": "all x. (wumpus(x) -> zumpus(x))", "prediction": ["all x.(Wumpus(x) -> Zumpus(x))", "all x.(Wumpuse(x) -> Zumpuse(x))", "all x.(Wumpus(x) -> Zumpus(x))", "all x y.((Wumpuse(x) & Zumpus(y)) -> Has(x,y))", "(Tompuse(wumpuse) -> Tompuse(wumpuse))", "(Zumpuse(x) & Wumpuse(x))", "(Zombie(w) & -Zombie(w))", "all x y.((Wumpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Wumpuse(x) -> Zumpuse(x))", "all x.(Wumpus(x) -> Zumpus(x))", "all x y.((Wumpuse(x) & Zumpus(y)) -> Is(x,y))", "all x.(Wumpus(x) -> Zumpuse(x))", "all x.(Wumpuse(x) -> Zumpuse(x))", "All x.(Wumpuse(x) -> Zumpuse(x))", "all x.(Wumpus(x) -> Zumpus(x))", "All x.(Wumpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_417", "nl": "Rex is not a zumpus, Rex is a yumpus, and Rex is a sterpus.", "fol": "(-zumpus(Rex) & yumpus(Rex) & sterpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Zumpus(x)) & all y.(Yumpus(y) & all z.(Sterepus(z)) -> -Zumpus(x)))", "all x y z.((Rex(x) & Zumpus(y) & Yumpus(z)) -> (-Zumpus(x) & -Sterpus(x)))", "(all x y z.((Rex(x) & Zumpus(y)) -> -Tompus(x)) & ((Rex(z) & Yumpus(z)) -> Sterepus(z)))", "(all x.(Rex(x) -> -Zumpus(x)) & (Yumpus(x) & Sterpus(x)))", "(all x.(Rex(x) -> -Zumpus(x)) & all y.(Rex(y) -> Yumpus(y)) & all z.(Rex(z) -> Sterpus(z))))", "all x y z.((Rex(x) & Zumpus(y) & Yumpus(z)) -> (-Tompus(x) & Yumpus(x) & Sterpus(x)))", "(-Zumpus(rex) & Yumpus(rex) & Sterpus(rex))", "all x.(Rex(x) -> (-Zumpus(x) & -Yumpus(x) & -Sterpus(x)))", "(all x y z.((Rex(x) & Zumpus(y)) -> -Zumpus(x)) & ((Rex(z) & Yumpus(z))) -> Sterepus(z)))", "all x y z.((Rex(x) & Zumpus(y) & Yampus(z) & Sterpus(x)) -> (-Zumpus(x) & Yumpus(y) & Sterpus(z)))", "all x y z.((Rex(x) & Tompus(y) & Yumpus(z)) -> (-Tompus(x) & -Yumpus(y) & -Sterepus(z)))", "all x y z.((Rex(x) & Zumpus(y) & Yumpus(z)) -> (-Zumpus(x) & -Sterpus(x)))", "(all x y z.((Rex(x) & Zumpus(y)) -> -Tompus(x)) & ((Rex(z) & Yumpus(z)) -> Sterepus(z)))", "(all x.(Rex(x) -> -Zumpus(x)) & (Yumpus(x) & Sterpus(x)))", "all x y z.((Rex(x) & Yampus(y) & Sterpus(z)) -> (-Zumpus(x) & -Yumpus(y) & -Sterpus(z)))", "(all x.(Rex(x) -> -Zumpus(x)) | (Yumpus(x) & Sterpus(x))))"]}
{"id": "prontoqa_train_418", "nl": "Every lorpus is a zumpus.", "fol": "all x. (lorpus(x) -> zumpus(x))", "prediction": ["all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x y.((Lorpus(x) & Zumpus(y)) -> Has(x,y))", "(all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x y.((Lorpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Lorph(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "exists x.(lorpus(x) & Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "exists x.(Lorpus(x) & Tosspus(x))", "all x.(Larp(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Larp(x) -> Zumpus(x))", "exists x.(Lorpus(x) & Zurpus(x))"]}
{"id": "prontoqa_train_419", "nl": "Alex is a rompus, Alex is not a zumpus, and Alex is a brimpus.", "fol": "(rompus(Alex) & -zumpus(Alex) & brimpus(Alex))", "prediction": ["(all x.(Alex(x) -> Rompus(x)) & (Alex(x) -> -Zumpus(x)) & (Alex(x) -> Brimpus(x)))", "all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & -Zumpus(y) & Brimpus(z)))", "(all x y z.((Alex(x) & Rompus(y)) -> (Rompus(z) | -Zumpus(z))) & ((Alex(x) & Brimpus(x)) -> (Brompus(x) & Brimpus(x))))", "all x.(Alex(x) -> (Rompus(x) & -Zumpus(x) & Brimpus(x)))", "all x y z.((Alex(x) & Rrompus(y) & Zumpus(z)) -> (Rompus(x) & -Zumpus(y) & Brimpus(z)))", "(all x.(Alex(x) -> Rompus(x)) & (Alex(x) -> -Zumpus(x)) & (Alex(x) -> Brimpus(x)))", "all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & -Tompus(y) & Brimpus(z)))", "(all x.(Alex(x) -> Rompus(x)) & all y.(Alex(y) -> -Zumpus(y))) & all z.(Alex(z) -> Brimpus(z)))", "(all x.(Alexa(x) -> Rompus(x)) & (Alexa(x) -> -Zumpus(x)) & (Alexa(x) -> Brimpus(x)))", "all x y z.((Alex(x) & Rompus(x) & Alex(y) & Zumpus(z)) -> (Rompus(x) & -Zumpus(y) & Brimpus(z)))", "(all x y z.((Alex(x) & Rompus(x)) -> (Rompus(x) & -Zumpus(y)) & ((Alex(z) & Brimpus(z)) -> (Brompus(z))))", "all x.(Alex(x) -> (Rompus(x) & -Zumpus(x) & Brimpus(x)))", "(all x.(Alex(x) -> Rompus(x)) & (Alex(x) -> -Zumpus(x)) & (Alex(x) -> Brimpus(x)))", "all x y z.((Alex(x) & Rimpus(y) & Zumpus(z)) -> (Rompus(x) & -Tompus(y) & Brimpus(z)))", "all x.(Alex(x) -> (Rompus(x) | -Zumpus(x) | Brimpus(x)))", "(all x.(Alex(x) -> Rompus(x)) & (Alex(x) -> -Zumpus(x)) & (Alex(x) -> Brimpus(x)))"]}
{"id": "prontoqa_train_420", "nl": "Every zumpus is a lempus.", "fol": "all x. (zumpus(x) -> lempus(x))", "prediction": ["all x.(Zumpus(x) -> Lempus(x))", "all x.(Zumpus(x) -> Lempus(x))", "all x y.((Zumpus(x) & Lempus(y)) -> Has(x,y))", "(all x.(Zumpus(x) -> Lempus(x))", "all x.(Zumpus(x) -> Lempus(x))", "all x y.((Zumpus(x) & Lempus(y)) -> Has(x,y))", "all x.(Tompus(x) -> Lempus(x))", "all x.(Zumpus(x) -> Lempus(x))", "all x.(Tompus(x) -> Lempus(x))", "all x.(Zumpus(x) -> Lempus(x))", "all x.(Zumpus(x) -> Lempus(x))", "all x.(Tompus(x) -> Lampus(x))", "all x.(Zumpus(x) -> Lempus(x))", "all x.(Tompus(x) -> Lempus(x))", "exists x.(Zupus(x) & Lempus(x))", "exists x.(Tompus(x) & Lempus(x))"]}
{"id": "prontoqa_train_421", "nl": "Alex is a numpus and Alex is a tumpus and Alex is not a lempus.", "fol": "(numpus(Alex) & tumpus(Alex) & -lempus(Alex))", "prediction": ["all x y z.((Alex(x) & Numpus(x) & Tumpus(y) & Lempus(z)) -> (Numpus(x) & Tumpus(y) & -Lempus(z)))", "(all x.(Alex(x) -> Numpus(x)) & all y.(Alex(y) -> Tumpus(y))) & all z.(Alex(z) -> -Lempus(z))))", "all x.(Alex(x) -> (Numpus(x) & Tumpus(x) & -Lempus(x)))", "all x y z.((Alex(x) & Numpus(y) & Tumpus(z)) -> (Numpus(x) & Tumpus(z) & -Lempus(x)))", "all x y.((Alex(x) & Numpus(x) & Tumpus(y)) -> (Tumpus(x) & -Lempus(x)))", "(all x.(Alex(x) -> Numpus(x)) & all y.(Alex(y) -> Tumpus(y)) & all z.(Alex(z) -> -Lempus(z))))", "(all x.(Alex(x) -> Numpus(x)) & (Alex(x) -> Tumpus(x)) & (Alex(x) -> -Lempus(x)))", "(all x.(Alexa(x) -> Numpus(x)) & all y.(Alexa(y) -> Tumpus(y))) & all z.(Alexa(z) -> -Lempus(z))))", "(all x y.((Alex(x) & Numpus(x)) | (Alex(y) & Tumpus(y))) | (Alex(y) & -Lempus(y))))", "exists x.(Alex(x) & Numpus(x) & Tumpus(x) & -Lempus(x))", "all x y z.((Alex(x) & Numpus(x) & Tumpus(y) & -Lempus(z)) -> (Numpus(x) & Tumpus(y) & -Lempus(z)))", "all x.(Alex(x) -> (Numpus(x) & Tumpus(x) & -Lempus(x)))", "all x y.((Alex(x) & Numpus(x) & Tumpus(y)) -> (Numpus(x) & Tumpus(y) & -Lempus(x)))", "all x.(Alex(x) -> (numpus(x) & tumpus(x) & -lempus(x)))", "(all x.(Alex(x) -> Numpus(x)) & all y.(Alex(y) -> Tumpus(y))) & all z.(Alex(z) -> -Lempus(z)))", "(all x y z.(Alex(x) -> Numpus(x)) & (Alex(y) -> Tumpus(y)) & (Alex(z) -> -Lempus(z)))"]}
{"id": "prontoqa_train_422", "nl": "Grimpuses are shumpuses.", "fol": "all x. (grimpus(x) -> shumpus(x))", "prediction": ["all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x y.((Grimpus(x) & Shumpus(y)) -> Shumpus(x))", "(Shumpuse(Grimpus) & Shumpus(Grimpus))", "all x.(Grimpus(x) -> Shumpus(x))", "(all x.(Grimpus(x) -> Humpback(x)))", "(Shumpuse(Grimpus) & Shumpuse(Grimpus))", "all x y.((Grimpus(x) & Shumpus(y)) -> Shumpus(x))", "all x.(Grimpuse(x) -> Shumpus(x))", "all x.(Gruppus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "(all x.(Grimpus(x) -> Humptus(x)))", "all x.(Gruppuse(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_423", "nl": "Stella is a sterpus, Stella is a brimpus, and Stella is not a shumpus.", "fol": "(sterpus(Stella) & brimpus(Stella) & -shumpus(Stella))", "prediction": ["(all x.(Storpus(x) -> Sterpus(x)) & (Brimpus(x) -> Brimpus(x)) & -Shumpus(x)))", "(all x.(Stella(x) -> Sterpus(x)) & (Stella(x) -> Brimpus(x)) & (Stella(x) -> -Shumpus(x)))", "all x y z.((Stella(x) & Sterepus(y) & Brimpus(z)) -> (Sterpus(x) | Brimpus(z) | -Shumpus(z)))", "(all x.(Storpus(x) -> Sterepus(x)) & all y.(Brimpus(y) -> Brimpus(y)) & all z.(Shumpus(z) -> -Shumpus(z))))", "all x y z.((Stella(x) & Sterpus(x) & Brimpus(y) & -Shumpus(z)) -> (Storpus(x) & Brimpus(y) & -Shumpus(z)))", "(all x y z.(Storpus(x) -> Sterpus(x)) & (Brimpus(y) -> Brimpus(y)) & (Shumpus(z) -> -Shumpus(z)))", "all x.(Stella(x) -> (Sterpus(x) & Brimpus(x) & -Shumpus(x)))", "(all x.(Sterpus(x) -> Sterepus(x)) & all y.(Brimpus(y) -> Brimpus(y)) & all z.(Shumpus(z) -> -Shumpus(z))))", "(all x y z.((Storpus(x) & Sterepus(y)) -> Sterpus(x)) & ((Storpus(z) & Brimpus(z))) -> -Shumpus(z)))", "(all x y z.((Stella(x) & Sterepus(y)) -> Sterpus(x)) & ((Stella(z) & Brimpus(z)) -> -Shumpus(z)))", "all x y z.((Stella(x) & Sterpus(y) & Brimpus(z)) -> (Stereo(x) & Brimpus(y) & -Shumpus(z)))", "all x y z.(Stella(x) -> (Sterpus(x) | Brimpus(x) | -Shumpus(y)))", "(all x.(Stella(x) -> Sterpus(x)) & (Stella(x) -> Brimpus(x)) & -Shumpus(x)))", "all x.(Stella(x) -> (Sterepus(x) & Brimpus(x) & -Shumpus(x)))", "(all x.(Sterpus(x) -> Sterpus(x)) & (Brimpus(x) -> Brimpus(x)) & (Shumpus(x) -> -Shumpus(x)))", "all x y z.((Stella(x) & Sterpus(x) & Brimpus(y) & -Shumpus(z)) -> (Storpus(x) | Brimpus(y) | -Shumpus(z)))"]}
{"id": "prontoqa_train_424", "nl": "Every dumpus is a lempus.", "fol": "all x. (dumpus(x) -> lempus(x))", "prediction": ["all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "(all x.(Dumpus(x) -> Lempus(x))", "all x y.((Dumpus(x) & Lempus(y)) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumps(x) -> Lempus(x))", "all x y.((Dumpus(x) & Lempus(y)) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "exists x.(Dumps(x) & Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "exists x.(Dupus(x) & Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "exists x.(Dumpus(x) & Lempus(x))"]}
{"id": "prontoqa_train_425", "nl": "Alex is a tumpus, Alex is a vumpus, and Alex is not a lempus.", "fol": "(tumpus(Alex) & vumpus(Alex) & -lempus(Alex))", "prediction": ["(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> Vumpus(y)) & all z.(Alex(z) -> -Lempus(z))))", "all x y z.((Alex(x) & Tumpus(y) & Vumpus(z)) -> (Tumpus(x) & Vumpus(x) & -Lempus(x)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> Vumpus(x)) & (Alex(x) -> -Lempus(x)))", "all x.(Alex(x) -> (Tumpus(x) & Vumpus(x) & -Lempus(x)))", "all x y z.((Alex(x) & Tumpus(y) & Vumpus(z)) -> (Tumpus(x) | Vumpus(z) | -Lempus(x)))", "(all x.(Alexa(x) -> Tumpus(x)) & all y.(Alexa(y) -> Vumpus(y)) & all z.(Alexa(z) -> -Lempus(z))))", "exists x.(Alex(x) & Tumpus(x) & Vumpus(x) & -Lempus(x))", "(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> Vumpus(y)) & all z.(Alex(z) -> -Lempus(z))))", "(all x y z.(Alex(x) -> Tumpus(x)) & (Alex(y) -> Vumpus(y)) & (Alex(z) -> -Lempus(z)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> Vumpus(x)) & -Alex(x)))", "all x y z.((Alex(x) & Tumpus(y) & Vumpus(z)) -> (Tumpus(x) & Vumpus(y) & -Lempus(z)))", "all x.(Alex(x) -> (Tumpus(x) & Vumpus(x) & -Lempus(x)))", "all x y z.((Alex(x) & Tumpus(y) & Vampire(z)) -> (Tumpus(x) | Vampire(x) & -Lempus(x)))", "all x y z.((Alex(x) & Tompus(y) & Vumpus(z)) -> (Tumpus(x) | Vumpus(z) | -Lempus(x)))", "(all x y z.(Alex(x) -> Tumpus(x)) & (Alex(y) -> Vumpus(y)) & (Alex(z) -> -Lempus(z)))", "(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> Voompus(y)) & all z.(Alex(z) -> -Lempus(z))))"]}
{"id": "prontoqa_train_426", "nl": "Every brimpus is a gorpus.", "fol": "all x. (brimpus(x) -> gorpus(x))", "prediction": ["all x.(Brumpus(x) -> Gorpus(x))", "all x.(Brimpus(x) -> Gorpus(x))", "all x y.((Brimpus(x) & Gorpus(y)) -> Has(x,y))", "all x.(Brumpus(x) -> Gorpus(x))", "all x y.((Brumpus(x) & Gorpus(y)) -> Has(x,y))", "all x.(Brimpus(x) -> Gorpus(x))", "all x.(Brumpus(x) -> Gorpus(x))", "all x y.((Brimpus(x) & Gorpus(y)) -> Is(x,y))", "all x.(Brumpus(x) -> Gorpus(x))", "all x.(Brimpus(x) -> Gorpus(x))", "exists x.(Brimpus(x) & Gorpus(x))", "all x.(Brumpus(x) -> Gorpus(x))", "all x.(Brimpus(x) -> Gorpus(x))", "all x.(Brimpus(x) -> Gorpus(x))", "exists x.(Brimpus(x) & Gorpus(x))", "exists x.(Brampus(x) & Gorpus(x))"]}
{"id": "prontoqa_train_427", "nl": "Stella is a lorpus, Stella is a rompus, and Stella is not a gorpus.", "fol": "(lorpus(Stella) & rompus(Stella) & -gorpus(Stella))", "prediction": ["(all x.(Lorpus(x) -> Stella(x)) & all y.(Rompus(y) -> Stella(y))) & all z.(Gorpus(z) -> Stella(z)))", "all x y z.((Stella(x) & Lorpus(y) & Rompus(z)) -> (Lorpus(x) & Rompus(x) & -Gorpus(x)))", "(all x.(Stella(x) -> Lorpus(x)) & (Stella(x) -> Rompus(x)) & (Stella(x) -> -Gorpus(x)))", "(all x y z.((Lorpus(x) & Stella(y) & Rompus(z)) -> (Lorpus(x) & Rompus(y) & -Gorpus(z))))", "all x y z.((Stella(x) & Lorpus(y) & Rompus(z)) -> (Lorpus(x) | Rompus(z) | -Gorpus(z)))", "all x.(Stella(x) -> (Lorpus(x) | Rompus(x) | -Gorpus(x)))", "exists x.(Lorpus(x) & Rompus(x) & -Gorpus(x))", "(all x.(Lorpus(x) -> Stella(x)) & all y.(Rompus(y) -> Stella(y))) & all z.(Gorpus(z) -> -Lorpus(z)))", "(all x y z.((Stella(x) & Lorpus(y)) -> (Lorpus(x) | Rompus(y)) | -Gorpus(z)))", "(all x.(Lorpus(x) & All y.(Rompus(y)) -> Stella(x)) & (Rompus(y) -> Stella(x)))", "(all x.(Stella(x) -> Lorpus(x)) & (Stella(x) -> Rompus(x)) & -Stella(x)))", "all x y z.((Lorpus(x) & Rompus(y) & Stella(z)) -> (Lorpus(x) & Rompus(y) & -Gorpus(z)))", "all x y z.((Stella(x) & Lorpus(x) & Rompus(y) & -Gorpus(z)) -> (Lorpus(x) & Rompus(y) & -Stella(z)))", "all x y z.((Lorpus(x) & Rompus(y) & Gorpus(z)) -> (Lorpus(x) & Rompus(y) & -Gorpus(z)))", "(all x y z.((Lorpus(x) & Stella(y) & Rompus(z)) -> (Lorpus(x) | Rompus(y)) | -Gorpus(y)))", "(all x.(Stella(x) -> Lorpus(x)) & (Stella(x) -> Rompus(x)) & (Stella(x) -> -Gorpus(x)))"]}
{"id": "prontoqa_train_428", "nl": "Each sterpus is a yumpus.", "fol": "all x. (sterpus(x) -> yumpus(x))", "prediction": ["all x.(Sterpus(x) -> Yumpus(x))", "all x.(Sterpus(x) -> Yumpus(x))", "all x y.((Sterpus(x) & Yumpus(y)) -> Has(x,y))", "all x.(Steerpus(x) -> Yampus(x))", "all x y.((Sterpus(x) & Yampus(y)) -> Has(x,y))", "all x.(Sterpus(x) -> Yumpa(x))", "all x y.((Steerpus(x) & Yumpus(y)) -> Sterpus(x))", "all x.(Steerpus(x) -> Yampus(x))", "exists x.(Stereosis(x) & Yumpus(x))", "exists x.(Sterpus(x) & Yumpus(x))", "all x.(Sterpus(x) -> Yumpus(x))", "all x.(Sterpus(x) -> Yumpus(x))", "all x.(Stereo(x) -> Yampus(x))", "exists x.(Sterpus(x) & Yampus(x))", "all x.(Steerpus(x) -> Yumpa(x))", "exists x.(Sterpus(x) & Yampus(x))"]}
{"id": "prontoqa_train_429", "nl": "Wren is a rompus, Wren is not a yumpus, and Wren is a dumpus.", "fol": "(rompus(Wren) & -yumpus(Wren) & dumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Rompus(x)) & (-Yumpus(x) & (-Yumpus(x) & -Dumpus(x))))", "all x y z.((Wren(x) & Rrompus(x) & Wren(y) & Yumpus(z)) -> (Rompus(x) & -Yumpus(y) & Dumpus(z)))", "(all x y z.((Wren(x) & Rompus(y)) -> (Rompus(z) | -Yumpus(z))) & ((Wren(x) & Dumpus(x)) -> (Dumpus(x))))", "all x y z.((Wren(x) & Rimpus(y) & Yumpus(z)) -> (Rompus(x) & -Yumpus(y) & Dumpus(z)))", "(all x.(Wren(x) -> Rompus(x)) & (Wren(x) -> -Yumpus(x)) & (Wren(x) -> Dumpus(x)))", "(all x.(Wren(x) -> Rompus(x)) & (-Yumpus(x) & (-Yumpus(x) | Dumpus(x))))", "all x y z.((Wren(x) & Rompus(y) & Yumpus(z)) -> (Rompus(x) & -Yumpus(y) & Dumpus(z)))", "all x.(Wren(x) -> (Rompus(x) & -Yumpus(x) & Dumpus(x)))", "(all x y z.((Wren(x) & Rompus(y)) -> (Rompus(x) & -Yumpus(y)) & ((Wren(z) & Dumpus(z)) -> Dumpus(z)))", "(all x.(Rompus(x) -> Wren(x)) & (-Yumpus(x) -> Wren(x)) & (Dumpus(x) -> Wren(x)))", "(all x.(Wren(x) -> Rompus(x)) & all y.(Wren(y) -> -Yumpus(y))) & all z.(Wren(z) -> Dumpus(z)))", "(all x.(Wren(x) -> Rompus(x)) & (-Yumpus(x)) & (-Yumpus(x) & -Dumpus(x))))", "all x y z.((Rompus(x) & Wren(y) & Yumpus(z)) -> (Rompus(x) | Dumpus(y)))", "(all x y z.((Wren(x) & Rompus(x)) -> Rompus(x)) & ((Wren(y) & -Yumpus(y)) -> Dumpus(z)))", "all x y z.((Wren(x) & Raccoon(y) & Yumpus(z)) -> (Rompus(x) | Dumpus(x)))", "all x y z.((Wren(x) & Rumpus(y) & Yumpus(z)) -> (Rompus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_430", "nl": "Wren is not a sterpus.", "fol": "-sterpus(Wren)", "prediction": ["all x.(Wren(x) -> -Sterpus(x))", "(-Sterpus(Wren))", "Wren is not sterpus.", "all x.(Wren(x) -> -Sterpus(x))", "(-Stereo(Wren) & -Sterpus(Wren))", "-(Wren(w) & Sterpus(w))", "Wren is not sterpus.", "-Sterpus(Wren)", "all x.(Wren(x) -> -Sterepus(x))", "(-Stereopus(Wren))", "-Sterpus(Wren)", "all x.(Wren(x) -> -Sterpus(x))", "all x.(Wren(x) -> -Sterepus(x))", "(-Steerpus(Wren))", "all x.(Wren(x) -> -Sterpus(x))", "(-Sterpus(Wren)"]}
{"id": "prontoqa_train_431", "nl": "Sam is a brimpus and Sam is an impus and Sam is not a zumpus.", "fol": "(brimpus(Sam) & impus(Sam) & -zumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Brimpus(x)) & (Sam(x) -> Imperator(x)) & (Sam(x) -> -Zumpus(x)))", "all x y z.((Sam(x) & Brimpus(x) & Impossible(y)) -> (Brimpus(x) & Impossible(y) & -Zumpus(z)))", "all x y.((Sam(x) & Brimpus(x) & Impossible(y)) -> (Brimpus(x) & Impossible(y) & -Zumpus(z)))", "(all x.(Sam(x) -> Brimpus(x)) & all y.(Sam(y) -> Imperator(y))) & all z.(Sam(z) -> -Zumpus(z))))", "(all x y.(Brimpus(x) -> Brimpus(x)) & (Impossible(y) -> Impossible(y)) & (Zumpus(y) -> -Brimpus(y)))", "all x.(Sam(x) -> (Brimpus(x) & Impossible(x) & -Zumpus(x)))", "(all x.(Sam(x) -> Brimpus(x)) & all y.(Sam(y) -> Issuel(y))) & all z.(Sam(z) -> -Zumpus(z))))", "(all x.(Sam(x) -> Brimpus(x)) & (Sam(x) -> Imperator(x)) & (Sam(x) -> -Zumpus(x)))", "all x y z.((Sam(x) & Brimpus(x) & Impossible(y)) -> (Brimpus(x) & Impossible(y) & -Zumpus(z)))", "all x y.((Sam(x) & Brimpus(x) & Impossible(y)) -> (Brimpus(x) & Impossible(y) & -Zumpus(y)))", "(all x y.(Brimpus(x) -> (Sam(y) & Brimpus(y))) & (Impossible(y) -> (Sam(y) & -Zumpus(y))))", "all x.(Sam(x) -> (Brimpus(x) & Is(x) & -Zumpus(x)))", "exists x.(Sam(x) & Brimpus(x) & Impermiss(x) & -Zumpus(x))", "(all x.(Sam(x) -> Brimpus(x)) & (Sam(x) -> Issue(x)) & (Sam(x) -> -Zumpus(x)))", "(all x.(Sam(x) -> Brimpus(x)) & all y.(Sam(y) -> Impossible(y))) & all z.(Sam(z) -> -Zumpus(z)))", "all x.(Sam(x) -> (Brimpus(x) & Impossible(x) & -Zumpus(x)))"]}
{"id": "prontoqa_train_432", "nl": "Wren is not a dumpus, Wren is a yumpus, and Wren is a jompus.", "fol": "(-dumpus(Wren) & yumpus(Wren) & jompus(Wren))", "prediction": ["(all x.(Wren(x) -> -Dumpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Jompus(z))))", "all x y z.((Wren(x) & Yumpus(y) & Jompus(z)) -> (-Dumpus(x) & -Yumpus(y) & -Jumpus(z)))", "(all x.(Wren(x) -> -Dumpus(x)) & (Yumpus(x) | Jompus(x))))", "(all x y z.((Wren(x) & Dumpus(y)) -> -Dumpus(x)) & ((Wren(z) & Yumpus(z)) -> Jompus(z)))", "all x.(Wren(x) -> (-Dumpus(x) & Yumpus(x) & Jompus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Jompus(z)) -> (-Dumpus(x) & -Yumpus(y) & -Jimpus(z)))", "(all x.(Wren(x) -> -Dumpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Jompus(z))))", "(all x y z.((Wren(x) & Dumpus(y)) -> -Dumpus(x)) & ((Wren(z) & Yumpus(z))) -> Jompus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Jompus(z)) -> (-Dumps(x) & -Yumpus(y) & -Jumpus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Jompus(z)) -> (-Dumpus(x) & -Yumpus(y) & -Jumpus(z)))", "all x y z.((Wren(x) & Dumpus(y) & Yumpus(z) & Jompus(z)) -> (-Dumpus(x) & Yompus(x) & Jompus(x)))", "(all x.(Wren(x) -> -Dumpus(x)) & (Yumpus(x) | Jompus(x))))", "(all x y z.((Wren(x) & Dumpus(y)) -> -Dumpus(x)) & ((Wren(z) & Yumpus(z)) -> Jompus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Jompus(z)) -> (-Dumpus(x) | (Yumpus(y) & Jompus(z))))", "(all x.(Wren(x) -> -Dumpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Jompus(z)))", "(all x.(Wren(x) -> -Dumpus(x)) & (Yumpus(x) | Jompus(x)))"]}
{"id": "prontoqa_train_433", "nl": "Jompuses are sterpuses.", "fol": "all x. (jompus(x) -> sterpus(x))", "prediction": ["all x.(Jompuse(x) -> Sterpuse(x))", "all x.(Jompuse(x) -> Sterpuse(x))", "all x y.((Jompuse(x) & Sterpuse(y)) -> Sterpuse(x))", "(Sterpuse(jompus) & Sterpuse(jompus))", "all x.(Jompuse(x) -> Sterpuse(x))", "all x y.((Jompuse(x) & Sterus(y)) -> Sterpuse(x))", "all x.(Jompuse(x) -> Steroid(x))", "all x.(Jimpus(x) -> Sterpuse(x))", "all x y.((Jompuse(x) & Sterpus(y)) -> Sterpuse(x))", "(Sterpuse(jompus) & Sterpuse(jompus))", "all x.(Jompuse(x) -> Sterpuse(x))", "all x.(Jompus(x) -> Sterus(x))", "All x.(Jombuse(x) -> Sterpuse(x))", "all x.(Jompuse(x) -> Sterpuse(x))", "all x.(Jomess(x) -> Sterosene(x))", "all x.(Jompus(x) -> Sterpuse(x))"]}
{"id": "prontoqa_train_434", "nl": "Fae is an impus and Fae is a gorpus and Fae is not a sterpus.", "fol": "(impus(Fae) & gorpus(Fae) & -sterpus(Fae))", "prediction": ["all x y z.((Fae(x) & Fae(y) & Sterpus(z)) -> (Impossible(x) & Gorpus(y) & -Sterpus(y)))", "(all x.(Fae(x) -> IsImpossible(x)) & (Fae(x) -> Gorpus(x)) & -Sterpus(x)))", "(all x.(Fae(x) -> Impossible(x)) & (Fae(x) -> Gorpus(x)) & (Fae(x) -> -Sterepus(x)))", "(all x y.(Fae(x) -> IsImpossible(x)) & (Fae(y) -> Gorpus(y)) & (Fae(y) -> -Sterpus(y)))", "all x y.((Fae(x) & Fae(y)) -> (Impossible(x) & Gorpus(y) & -Sterpus(y)))", "(all x.(Fae(x) -> Is(x)) & (Fae(x) -> Gorpus(x)) & (Fae(x) -> -Sterpus(x)))", "exists x.(Fae(x) & IsImpossible(x) & exists y.(Fae(y) & Gorpus(y)) & exists z.(Fae(z) & -Sterpus(z))))", "all x.(Fae(x) -> (Impossible(x) & Gorpus(x) & -Sterpus(x)))", "(all x y z.((Fae(x) & IsImpossible(x)) -> Gorpus(x)) & ((Fae(y) & -Sterepus(z)) -> -Impossible(y)))", "all x y z.((Fae(x) & Fae(y) & Sterpus(z)) -> (Impossible(x) & Gorpus(y) & -Sterepus(z)))", "(all x.(Fae(x) -> Impossible(x)) & all y.(Fae(y) -> Gorpus(y)) & all z.(Fae(z) -> -Sterpus(z))))", "(all x.(Fae(x) -> IsImpossible(x)) & all y.(Fae(y) -> Gorpus(y)) & all z.(Fae(z) -> -Sterpus(z))))", "all x y z.((Fae(x) & Fae(y) & Sterpus(z)) -> (Impossible(x) & Gorpus(y) & -Sterepus(y)))", "all x y.((Fae(x) & Fae(y)) -> (Impossible(x) & Gorpus(y) & -Sterpus(y)))", "(all x y.(Fae(x) -> IsImpossible(x)) & (Fae(y) -> Gorpus(y)) & (Fae(y) -> -Sterepus(y)))", "all x y z.((Fae(x) & Fae(y) & Sterpus(z)) -> (Is(x,z) & Is(y,z)) & Is(y,z) & -Is(y,z)))"]}
{"id": "prontoqa_train_435", "nl": "Each impus is a wumpus.", "fol": "all x. (impus(x) -> wumpus(x))", "prediction": ["all x.(Issue(x) -> Wumpus(x))", "all x.(Impossible(x) -> Wumpus(x))", "(all x.(Impossible(x) -> Wumpus(x))", "all x y.((Issue(x) & Wumpus(y)) -> Issue(x,y))", "all x.(Improve(x) -> Wumpus(x))", "all x.(Issue(x) -> Wumpus(x))", "all x y.((Issue(x) & Hush(y)) -> Is(x,y))", "all x.(Impact(x) -> Wumpus(x))", "all x.(Impossible(x) -> Wumpus(x))", "exists x.(Defimer(x) & Wumpus(x))", "all x.(Issue(x) -> Wumpus(x))", "exists x.(Defimer(x) & Wumpus(x))", "all x.(Impossible(x) -> Wumpus(x))", "exists x.(Defimer(x) & Wumpus(x))", "exists x.(Impossible(x) & Hush(x))", "all x.(Issue(x) -> Wampus(x))"]}
{"id": "prontoqa_train_436", "nl": "Sally is a jompus, Sally is not a wumpus, and Sally is a shumpus.", "fol": "(jompus(Sally) & -wumpus(Sally) & shumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Jompus(x)) & (-Wumpus(x) & Shumpus(x)))", "all x y z.((Sally(x) & Jompus(x) & -Wumpus(y) & Humpus(z)) -> (Jompus(x) & Shumpus(x)))", "(all x y z.((Sally(x) & Jompus(y)) -> (Jompus(z) | -Wumpus(z))) & ((Sally(x) & Humpus(x)) -> (Shumpus(x))))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> -Wumpus(x)) & (Sally(x) -> Humpus(x)))", "all x y z.((Sally(x) & Jompus(y) & Wumpus(z)) -> (Jompus(x) & -Wumpus(y) & Humpus(z)))", "all x.(Sally(x) -> (Jompus(x) | -Wumpus(x) | Humpus(x)))", "(all x y z.(Jompus(x) -> Sally(x)) & (Wumpus(y) -> -Sally(z))) & (Shumpus(z) -> Sally(z)))", "all x y z.((Sally(x) & Jompus(x) & Wumpus(y) & Humpus(z)) -> (Jompus(x) & -Wumpus(y) & Humpus(z)))", "(all x.(Sally(x) -> Jompus(x)) & (-Wumpus(x)) & (Shumpus(x))))", "(all x.(Jompus(x) -> Sally(x)) & (-Wumpus(x) -> Sally(x)))", "all x.(Sally(x) -> (Jompus(x) | -Wumpus(x) | Humpus(x)))", "(all x y.(Jompus(x) -> Sally(x)) & (Wumpus(y) -> -Sally(y)) & (Shumpus(y) -> Sally(y)))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> -Wumpus(x)) & (Sally(x) -> Humpus(x)))", "all x y z.((Sally(x) & Jompus(y) & Wumpus(z)) -> (Jompus(x) & -Wumpus(y) & Humpus(z)))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> -Wumpus(y)) & all z.(Sally(z) -> Humpus(z))))", "all x y z.((Sally(x) & Jompus(x) & -Wumpus(y) & Humpus(z)) -> (Jompus(x) | Sally(x) & Shumpus(x)))"]}
{"id": "prontoqa_train_437", "nl": "Sally is not an impus.", "fol": "-impus(Sally)", "prediction": ["Sally -Impossible(Sally)", "all x.(Sally(x) -> -Impossible(x))", "-Impossible(Sally)", "Sally n'est pas impus.", "Sally is not a impus.", "-Impossible(Sally)", "Sally -Is(Sally)", "(-Issue(Sally))", "-Illegal(Sally)", "Sally n'est pas impuse.", "Sally is not impus.", "Sally -Impossible(Sally)", "Sally is not a impus.", "-Impossible(Sally)", "(-Issue(Sally))", "Sally is not impused."]}
{"id": "prontoqa_train_438", "nl": "Each gorpus is a numpus.", "fol": "all x. (gorpus(x) -> numpus(x))", "prediction": ["all x.(Gorpus(x) -> Numpus(x))", "all x.(Gorpus(x) -> Numpus(x))", "all x y.((Gorpus(x) & Numpus(y)) -> Is(x,y))", "all x.(Gorpus(x) -> Numpus(x))", "all x y.((Gorpus(x) & Numpus(y)) -> Has(x,y))", "all x.(Gorpus(x) -> Numpus(x))", "all x y.((Gorpus(x) & Numpus(y)) -> Is(x,y))", "all x.(Gorpus(x) -> Numpus(x))", "all x.(Gorpus(x) -> Numpus(x))", "exists x.(Gorpus(x) & Number(x))", "all x.(Gorpus(x) -> Number(x))", "all x.(Gorpus(x) -> Numpus(x))", "exists x.(Gorpus(x) & Number(x))", "exists x.(Gorpus(x) & Number(x))", "all x.(Gorpus(x) -> Numpus(x))", "exists x.(Gorpus(x) & Nomus(x))"]}
{"id": "prontoqa_train_439", "nl": "Sally is a vumpus, Sally is not a numpus, and Sally is a sterpus.", "fol": "(vumpus(Sally) & -numpus(Sally) & sterpus(Sally))", "prediction": ["(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> -Numpus(x)) & (Sally(x) -> Sterpus(x)))", "all x y z.((Sally(x) & Vumpus(x) & -Numpus(y) & Sterpus(z)) -> (Vumpus(x) & Sterpus(z)))", "(all x y z.((Sally(x) & Vumpus(y) & -Numpus(z)) -> Vumpus(x)) & ((Sally(x) & -Numpus(x)) -> Sterpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & (-Sally(x) -> Numpus(x)) & (-Sally(x) -> Sterpus(x)))", "all x y z.((Sally(x) & Vumpus(y) & -Numpus(z)) -> (Vumpus(x) & Sterpus(x)))", "all x.(Sally(x) -> (Vumpus(x) & -Numpus(x) & Sterpus(x)))", "(all x y z.((Sally(x) & Vumpus(x)) -> (Vumpus(x) & -Numpus(y)) & ((Sally(z) & Sterpus(z)) -> Sterpus(z))))", "(all x y.(Sally(x) -> Vumpus(x)) & (Sally(y) -> -Numpus(y)) & (Sally(y) -> Sterpus(y)))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> -Numpus(x)) & (Sally(x) -> Sterpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & all y.(Sally(y) -> -Numpus(y)) & all z.(Sterpus(z) -> Sterpus(z))))", "all x y z.((Sally(x) & Vumpus(x) & -Numpus(y) & Sterpus(z)) -> (Vumpus(x) & Sterpus(z)))", "all x.(Sally(x) -> (Vumpus(x) & -Numpus(x) & Sterpus(x)))", "all x y z.((Sally(x) & Vumpus(y) & Numpus(z)) -> (Vumpus(x) & -Numpus(y) & Sterpus(z)))", "(all x.(Sally(x) -> Vumpus(x)) & (-Sally(x) -> Numpus(x)) & (-Sally(x) -> Sterpus(x)))", "exists x.(Sally(x) & Vumpus(x) & -Numpus(x) & Sterpus(x))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> -Numpus(x)) & (Sally(x) -> Sterepus(x)))"]}
{"id": "prontoqa_train_440", "nl": "Shumpuses are zumpuses.", "fol": "all x. (shumpus(x) -> zumpus(x))", "prediction": ["all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shupuse(x) -> Zumpuse(x))", "all x y.((Shupuse(x) & Zumpus(y)) -> Tompus(x))", "(Tompuse(shm) & -Tompus(shm))", "all x.(Shampus(x) -> Zumpus(x))", "all x y.((Shupuse(x) & Zumpuse(y)) -> Has(x,y))", "all x y.((Shumpsue(x) & Zumpuse(y)) -> Has(x,y))", "(Zumpuse(sh) & Tompuse(sh))", "all x.(Shumpus(x) -> Zumpuse(x))", "All x.(Shumpsue(x) -> Zumpuse(x))", "all x.(Shimpus(x) -> Zumpus(x))", "all x.(Shupuse(x) -> Zumpuse(x))", "all x.(Shutus(x) -> Zumpuse(x))", "all x.(Shumpus(x) -> Zumpus(x))", "All x.(Shampus(x) -> Zumpuse(x))", "All x.(Shupuse(x) -> Zurpuse(x))"]}
{"id": "prontoqa_train_441", "nl": "Sam is a numpus and Sam is not a zumpus and Sam is a brimpus.", "fol": "(numpus(Sam) & -zumpus(Sam) & brimpus(Sam))", "prediction": ["(all x.(Sam(x) -> Numpus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Brimpus(x)))", "all x y z.((Sam(x) & Numpus(x) & Sam(y) & Zumpus(z)) -> (-Sam(y) & Brimpus(z)))", "(all x.(Sam(x) -> Numpus(x)) & (-Sam(x) -> Zumpus(x)) & (Sam(x) -> Brimpus(x)))", "all x y z.((Sam(x) & Numpus(x) & Sam(y) & Brimpus(z)) -> (-Zumpus(y) & -Numpus(y)))", "all x y.((Sam(x) & Numpus(x) & Sam(y)) -> (-Zumpus(y) & Brimpus(y)))", "(all x y.(Sam(x) -> Numpus(x)) & (Sam(y) -> -Zumpus(y)) & (Sam(y) -> Brimpus(y)))", "all x y z.((Sam(x) & Numpus(y) & Zumpus(z)) -> (Numpus(x) & -Zumpus(y) & Brimpus(z)))", "(all x.(Sam(x) -> Numpus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Brimpus(x)))", "all x.(Sam(x) -> (Numpus(x) & -Zumpus(x) & Brimpus(x)))", "(all x.(Sam(x) -> Numpus(x)) & all y.(Sam(y) -> -Zumpus(y))) & all z.(Sam(z) -> Brimpus(z))))", "(all x y.(Numpus(x) -> Sam(x)) & (-Zumpus(y) -> Sam(y)) & (Brimpus(y) -> Sam(y)))", "exists x.(Sam(x) & Numpus(x) & -Zumpus(x) & Brimpus(x))", "(all x.(SameDay(x) -> Numpus(x)) & (-SameDay(x) -> Zumpus(x)) & (-SameDay(x) -> Brimpus(x)))", "all x y.((Sam(x) & Numpus(x)) -> (-Zumpus(x) & Brimpus(y)))", "(all x.(Sam(x) -> Numpus(x)) & (-Sam(x) -> Zumpus(x)) & (-Sam(x) -> Brimpus(x)))", "all x.(Sam(x) -> (Numpus(x) & -Zumpus(x) & Brimpus(x)))"]}
{"id": "prontoqa_train_442", "nl": "Alex is not an impus and Alex is a rompus and Alex is a zumpus.", "fol": "(-impus(Alex) & rompus(Alex) & zumpus(Alex))", "prediction": ["(all x.(Alex(x) -> -Impossible(x)) & all y.(Alex(y) -> Rompus(y)) & all z.(Alex(z) -> Zumpus(z))))", "all x y z.((Alex(x) & Impossible(x) & Rompus(y) & Zumpus(z)) -> -Impossible(x))", "all x y z.((Alex(x) & -Impossible(x) & Rompus(y) & Zumpus(z)) -> (-Impossible(x) & -Impossible(y) & -Impossible(z)))", "all x.(Alex(x) -> (-Impossible(x) & Rompus(x) & Zumpus(x)))", "(all x.(Alex(x) -> -Impossible(x)) & ((Alex(x) & Rompus(x)) | (Alex(x) & Zumpus(x)))))", "all x y.((Alex(x) & Rompus(y)) -> (-Impossible(x) & Zumpus(y)))", "(all x y.((Alex(x) & -Impossible(x)) -> Rompus(x)) & ((Alex(y) & Zumpus(y)) -> -Impossible(y)))", "(all x y z.((Alex(x) & IsImpossible(x)) -> -Impossible(x)) & ((Alex(y) & Rompus(y)) -> Zumpus(y)))", "all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (-Impossible(x) & -Rompus(y) & -Impossible(z)))", "(all x.(Alex(x) -> -Impossible(x)) & all y.(Alex(y) -> Rompus(y)) & all z.(Alex(z) -> Zumpus(z))))", "all x.(Alex(x) -> (-Impossible(x) & Rompus(x) & Zumpus(x)))", "exists x.(Alex(x) & -IsImpossible(x)) & exists y.(Rompus(y) & exists z.(Zumpus(z) & -Impossible(z))))", "(all x y.((Alex(x) & IsNotImpossible(x)) -> Rompus(x)) & ((Alex(y) & Zumpus(y)) -> IsNotImpossible(y)))", "(all x.(Alex(x) -> -Impossible(x)) & ((Alex(x) & Rompus(x)) | (Alex(x) & Zumpus(x)))))", "(all x.(Alex(x) -> -Issue(x)) & all y.(Rompus(y) & All z.(Zumpus(z)) -> -Issue(y)))", "all x y.((Alex(x) & Rompus(y)) -> (-Impossible(x) & Zumpus(y)))"]}
{"id": "prontoqa_train_443", "nl": "Every yumpus is a lorpus.", "fol": "all x. (yumpus(x) -> lorpus(x))", "prediction": ["all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Lorpus(x))", "all x y.((Yumpus(x) & Lorpus(y)) -> Has(x,y))", "all x.(Yumpus(x) -> Lorpus(x))", "all x y.((Yumpus(x) & Lorpus(y)) -> Is(x,y))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Lord(x))", "all x y.((Yumpus(x) & Lorpus(y)) -> Has(x,y))", "exists x.(yumpus(x) & Yumpus(y) & Lorpus(x))", "all x.(Yumpus(x) -> Lorpus(x))", "exists x.(yumpus(x) & Lorpus(x))", "all x.(Yumpus(x) -> Lord(x))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Lord(x))", "exists x.(Yumpus(x) & Lord(x))"]}
{"id": "prontoqa_train_444", "nl": "Fae is a vumpus and Fae is not a lorpus and Fae is a wumpus.", "fol": "(vumpus(Fae) & -lorpus(Fae) & wumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Lorpus(x)) & (Fae(x) -> Wumpus(x)))", "all x y z.((Fae(x) & Vumpus(x) & Fae(y) & Lorpus(z)) -> (-Lorpus(y) & Wumpus(y)))", "(all x y.(Fae(x) -> Vumpus(x)) & (Fae(y) -> -Lorpus(y)) & (Fae(y) -> Wumpus(y)))", "(all x y z.((Fae(x) & Vumpus(x) & -Lorpus(y)) -> (Vumpus(x) & -Lorpus(y) & Wumpus(z)))", "all x.(Fae(x) -> (Vimpus(x) & -Lorpus(x) & Wumpus(x)))", "all x y z.((Fae(x) & Vumpus(x) & Fae(y) & -Lorpus(y)) -> (Vumpus(x) & Wumpus(y)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Lorpus(x)) & (Fae(x) -> Wumpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> -Lorpus(y)) & all z.(Fae(z) -> Wumpus(z))))", "all x y.((Fae(x) & Fae(y)) -> (Vumpus(x) & -Lorpus(y) & Wumpus(y)))", "exists x.(Fae(x) & Vumpus(x) & -Lorpus(x) & Wumpus(x))", "all x y z.((Fae(x) & Vumpus(x) & Fae(y) & Lorpus(z)) -> (-Lorpus(y) & Wumpus(z)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Lorpus(x)) & (Fae(x) -> Wumpus(x)))", "all x y z.((Fae(x) & Fae(y) & Lorpus(z)) -> (Vumpus(x) & -Lorpus(y) & Wumpus(z)))", "(all x y.(Vumpus(x) -> Fae(x)) & (Lorpus(y) | Wumpus(y)))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> -Lorpus(y)) & all z.(Fae(z) -> Wumpus(z))))", "all x y.((Fae(x) & Fae(y)) -> (Vumpus(x) & -Lorpus(y) & Wumpus(y)))"]}
{"id": "prontoqa_train_445", "nl": "Lempuses are vumpuses.", "fol": "all x. (lempus(x) -> vumpus(x))", "prediction": ["all x.(Lempuse(x) -> Vampuse(x))", "all x.(Lemme(x) -> Vampuse(x))", "all x.(Lempuse(x) -> Vampuse(x))", "all x y.((Lempuse(x) & Vampuse(y)) -> Vampuse(x))", "all x y.((Lempuse(x) & Vampuse(y)) -> Is(x,y))", "all x.(Lempuse(x) -> Vampuse(x))", "(Vampuse(lempus) & Vampuse(lempus))", "all x.(Lemme(x) -> Vampuse(x))", "all x.(Lampuse(x) -> Vampuse(x))", "(Vampuse(lempus) & Vampuse(lempus))", "all x.(Lempuse(x) -> Vampuse(x))", "all x.(Lempuse(x) -> Vulpuse(x))", "all x.(Lemme(x) -> Vampuse(x))", "all x.(Lempuse(x) -> Vumpuse(x))", "all x.(Lampuse(x) -> Vampuse(x))", "All x.(Lempuse(x) -> Vampuse(x))"]}
{"id": "prontoqa_train_446", "nl": "Alex is not a vumpus and Alex is a grimpus and Alex is a jompus.", "fol": "(-vumpus(Alex) & grimpus(Alex) & jompus(Alex))", "prediction": ["(all x.(Alex(x) -> -Vumpus(x)) & all y.(Alex(y) -> Grimpus(y)) & all z.(Alex(z) -> Jompus(z))))", "all x y z.((Alex(x) & Vumpus(y) & Grimpus(z)) -> (-Vumpus(x) & Grimpus(x) & Jompus(x)))", "(all x.(Alex(x) -> -Vumpus(x)) & ((Alex(x) & Grimpus(x))) & ((Alex(x) & Jompus(x))))", "(all x y z.((Alex(x) & Vumpus(y) & Grimpus(z)) -> -Vumpus(x)) & ((Alex(x) & Grimpus(x) & Jompus(x)) -> -Vumpus(x)))", "(all x.(Alex(x) -> -Vumpus(x)) & all y.(Alex(y) -> Grimpus(y)) & all z.(Alex(z) -> Jompus(z))))", "all x.(Alex(x) -> (-Vumpus(x) & Grimpus(x) & Jompus(x)))", "all x.(Alex(x) -> (-Vumpus(x) & -Grimpus(x) & -Jompus(x)))", "all x y z.((Alex(x) & Vumpus(y) & Grimpus(z)) -> (-Vumpus(x) & Grimpus(x) & Jompus(x)))", "(all x y.(Vumpus(x) -> -Vumpus(x)) & (Smoothpus(y) -> -Vumpus(y))) & (Jompus(y) -> -Jompus(y)))", "all x y.((Alex(x) & Vumpus(y) & Grimpus(y)) -> (-Vumpus(x) & -Smoothpus(y) & -Jompus(y)))", "exists x.(Alex(x) & -Vumpus(x) & Grimpus(x) & Jompus(x))", "all x y z.((Alex(x) & Vumpus(y) & Grimpus(z)) -> (-Vumpus(x) & Grumpus(x) & Jompus(x)))", "(all x.(Alex(x) -> -Vumpus(x)) & ((Alex(x) & Grimpus(x))) & ((Alex(x) & Jompus(x))))", "(all x.(Alex(x) -> -Vumpus(x)) & all y.(Alex(y) -> Grimpus(y)) & all z.(Alex(z) -> Jompus(z))))", "all x y z.((Alex(x) & Vampus(y) & Grimpus(z)) -> (-Vumpus(x) & Grimpus(x) & Jompus(x)))", "all x y.((Alex(x) & Vumpus(y) & Grimpus(y)) -> (-Vumpus(x) & -Smoothpus(y) & -Jimpus(y)))"]}
{"id": "prontoqa_train_447", "nl": "Jompuses are dumpuses.", "fol": "all x. (jompus(x) -> dumpus(x))", "prediction": ["all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x y.((Jompuse(x) & Dumpuse(y)) -> (Dumpsuse(x) & -Dumpsuse(y)))", "(Dumpsus(jompuse) & -Dumpsus(jompuse))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x y.((Jompuse(x) & Dumpuse(y)) -> Is(x,y))", "(Dumpuses(jompus) & Dumpuse(jompus))", "all x.(Jimpus(x) -> Dumpuse(x))", "(Dumpsuse(jompuse) & -Dumpsuse(jompuse))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jomess(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jimpus(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompus(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_448", "nl": "Max is a vumpus and Max is a brimpus and Max is not a dumpus.", "fol": "(vumpus(Max) & brimpus(Max) & -dumpus(Max))", "prediction": ["(all x.(Max(x) -> Vumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> -Dumpus(x)))", "all x y z.((Max(x) & Vumpus(x) & Brimpus(y) & -Dumpus(z)) -> (Vumpus(x) & Brimpus(y) & -Dumpus(z)))", "all x.(Max(x) -> (Vumpus(x) & Brimpus(x) & -Dumpus(x)))", "all x y z.((Max(x) & Vumpus(x) & Max(y) & Brimpus(y)) -> (Vumpus(x) & -Dumpus(z)))", "all x y.((Max(x) & Vumpus(x) & Max(y)) -> (Brimpus(y) & -Dumpus(y)))", "(all x y.((Max(x) & Vumpus(x)) -> (Max(y) & Brimpus(y))) & ((Max(x) & Dumpus(x)) -> -Dumpus(x)))", "(all x.(Max(x) -> Vumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> -Dumpus(z))))", "((Max(Max) & Vumpus(Max)) | (Max(Max) & Brimpus(Max))) | (Max(Max) & -Dumpus(Max)))", "(all x.(Max(x) -> Vumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> -Dumpus(x)))", "(all x y z.((Max(x) & Vumpus(x) & Brimpus(y)) -> (Vumpus(x) | Brimpus(y)) | -Dumpus(z)))", "all x.(Max(x) -> (Vimpus(x) & Brimpus(x) & -Dumpus(x)))", "all x y z.((Max(x) & Vumpus(x) & Brimpus(y) & -Dumpus(z)) -> (Vumpus(x) & Brimpus(y) & -Dumpus(z)))", "all x y.((Max(x) & Vumpus(x) & Max(y)) -> (Brimpus(y) & -Dumpus(y)))", "(all x.(Max(x) -> Vumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> -Dumpus(z))))", "(all x.(Max(x) -> Vumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> -Dumpus(x)))", "all x.(Max(x) -> (Vumpus(x) & Brimpus(x) & -Dumpus(x)))"]}
{"id": "prontoqa_train_449", "nl": "Max is not a jompus.", "fol": "-jompus(Max)", "prediction": ["all x.(Max(x) -> -Jompus(x))", "(-Jompus(Max))", "Max is not a Jompus.", "-Jompus(Max)", "all x.(Max(x) -> -Jompus(x))", "(Jompus(Max) & -Jompus(Max))", "-Jumpus(Max)", "Max is not a Jompus.", "(-jompus(Max))", "(-Jompus(Max))", "(Jompus(Max) | Jompus(Max))", "all x.(Max(x) -> -Jompus(x))", "all x.(Max(x) -> -Jimpus(x))", "-Jimpus(Max)", "-Jompus(Max)", "-Jumpus(Max)"]}
{"id": "prontoqa_train_450", "nl": "Each lempus is a brimpus.", "fol": "all x. (lempus(x) -> brimpus(x))", "prediction": ["all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "(all x.(Lempus(x) -> Brimpus(x)))", "exists x y.(Lempus(x) & Brimpus(y))", "all x.(Lempus(x) -> Brimpus(x))", "exists x y.(Lempus(x) & Brimpus(y))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Limpus(x) -> Brimpus(x))", "exists x.(Lempus(x) & -Brimpus(x))", "all x.(Limpus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Limpus(x) -> Brimpus(x))", "all x.(Limpus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_451", "nl": "Stella is not a brimpus, Stella is an impus, and Stella is a shumpus.", "fol": "(-brimpus(Stella) & impus(Stella) & shumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Brimpus(x)) & (Stella(x) -> Issue(x)) & (Stella(x) -> Humpus(x)))", "(all x.(Stella(x) -> -Brimpus(x)) & all y.(Stella(y) -> Issue(y))) & all z.(Stella(z) -> Shumpus(z)))", "all x y z.((Stella(x) & Brimpus(y) & Imperator(z)) -> (-Brimpus(x) & Imperator(x) & Humpus(x)))", "(all x y z.((Stella(x) & Brimpus(y)) -> -Brimpus(x)) & ((Stella(z) & Impossible(z)) -> Shumpus(z)))", "all x.(Stella(x) -> (-Brimpus(x) & Issue(x) & Shumpus(x)))", "all x y z.((Stella(x) & Brimpus(y) & Is(z) & Is(x,z)) -> (-Brimpus(x) | Is(x,z) | Is(x,z))))", "exists x.(Stella(x) & -Brimpus(x) & Impermiss(x) & Shumpus(x))", "(all x.(Stella(x) -> -Brimpus(x)) & (Stella(x) -> Issue(x)) & (Stella(x) -> Humpus(x)))", "all x y z.((Stella(x) & Brimpus(y) & Imperator(z)) -> (-Brimpus(x) & Imperator(x) & Humpus(y)))", "(all x y z.((Stella(x) & Brimpus(y)) -> -Brimpus(x)) & ((Stella(z) & Imperator(z)) -> Shumpus(z)))", "all x y z.(Stella(x) -> (-Brimpus(x) & Stella(y) & Imperator(y) & Shumpus(z)))", "(all x.(Stella(x) -> -Brimpus(x)) & all y.(Stella(y) -> Issue(y))) & all z.(Stella(z) -> Humpus(z)))", "all x y z.((Stella(x) & Brimpus(y) & Impossible(z)) -> (-Brimpus(x) & Shumpus(x)))", "(all x y z.((Stella(x) & Brimpus(y)) -> -Brimpus(x)) & ((Stella(z) & Issuel(z)) -> Shumpus(z)))", "(all x.(Stella(x) -> -Brumpus(x)) & all y.(Stella(y) -> Issue(y))) & all z.(Stella(z) -> Shumpus(z)))", "(all x.(Stella(x) -> -Brimpus(x)) & (Stella(x) -> Issue(x)) & (Stella(x) -> Humpus(x)))"]}
{"id": "prontoqa_train_452", "nl": "Stella is not a lempus.", "fol": "-lempus(Stella)", "prediction": ["all x.(Stella(x) -> -Lempus(x))", "Stella is not a lempus.", "(-Lempus(Stella))", "Stella -Lempus(Stella))", "Stella is not a lempus.", "all x.(Stella(x) -> -Lempus(x))", "(-Lempus(Stella))", "Stella is not a Lempus(Stella)", "-Lempus(Stella)", "Stella -Lempus(Stella))", "all x.(Stella(x) -> -Lempus(x))", "Stella is not Lempus.", "(-lempus(Stella))", "Stella is not a lempus.", "-Lempus(Stella)", "(-lempus(Stella))"]}
{"id": "prontoqa_train_453", "nl": "Jompuses are shumpuses.", "fol": "all x. (jompus(x) -> shumpus(x))", "prediction": ["all x.(Jompuse(x) -> Shumpus(x))", "all x.(Jompuse(x) -> Shumpus(x))", "all x y.((Jompuse(x) & Shumpus(y)) -> Shumpus(x))", "all x.(Jumpus(x) -> Shumpus(x))", "(Shumpuse(jompus) & Shumpus(jompus))", "all x.(Jompuse(x) -> Shumpus(x))", "all x y.((Jompuse(x) & Shumpus(y)) -> Shumpus(x))", "(Shumpuse(jompus)", "all x.(Jompuse(x) -> Shumpus(x))", "all x.(Jumpus(x) -> Shumpus(x))", "all x.(Jompus(x) -> Humpus(x))", "(Shumpuse(jompus)", "all x.(Jimpus(x) -> Shumpus(x))", "all x.(Jompuse(x) -> Shumpuse(x))", "all x.(Jomess(x) -> Humptus(x))", "All x.(Jompus(x) -> Humpus(x))"]}
{"id": "prontoqa_train_454", "nl": "Sally is a dumpus, Sally is not a shumpus, and Sally is a gorpus.", "fol": "(dumpus(Sally) & -shumpus(Sally) & gorpus(Sally))", "prediction": ["(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Shumpus(x)) & (Sally(x) -> Gorpus(x)))", "all x y z.((Sally(x) & Dumpus(x) & Sally(y) & Gorpus(z)) -> (-Shumpus(y) & Gorpus(z)))", "(all x y z.((Sally(x) & Dumpus(x)) -> (Dumpus(y) & -Shumpus(z)) & ((Sally(x) & Gorpus(x)) -> Gorpus(x)))", "all x y z.((Sally(x) & Dumpus(x) & -Shumpus(y) & Gorpus(z)) -> (Dumpus(x) & Gorpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Shumpus(x)) & (Sally(x) -> Gorpus(x)))", "(all x y z.((Sally(x) & Dumpus(y)) -> Dumpus(x)) & ((Sally(z) & -Shumpus(z)) -> Gorpus(z)))", "all x.(Sally(x) -> (Dumpus(x) & -Shumpus(x) & Gorpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & (-Shumpus(x) & Gorpus(x)))", "all x.(Sally(x) -> (Dumps(x) & -Shumpus(x) & Gorpus(x)))", "all x y z.((Sally(x) & Dumpus(y) & Sally(z)) -> (-Shumpus(z) & Gorpus(z)))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Sally(y) -> -Shumpus(y)) & all z.(Sally(z) -> Gorpus(z))))", "(all x y z.((Sally(x) & Dumpus(x)) -> (Dumps(x) & -Shumpus(y)) & ((Sally(z) & Gorpus(z)) -> Gorpus(z))))", "exists x.(Sally(x) & Dumpus(x) & -Shumpus(x) & Gorpus(x))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Shumpus(x)) & (Sally(x) -> Gorpus(x)))", "all x y z.((Sally(x) & Dumpus(x) & Sally(y) & Gorpus(z)) -> (-Shumpus(y) & Gorpus(z)))", "(all x.(Sally(x) -> Dumpus(x)) & (-Shumpus(x)) | (-Shumpus(x) & Gorpus(x))))"]}
{"id": "prontoqa_train_455", "nl": "Rompuses are tumpuses.", "fol": "all x. (rompus(x) -> tumpus(x))", "prediction": ["all x.(Rompus(x) -> Tumpus(x))", "all x.(Rompus(x) -> Tumpus(x))", "all x y.((Rompus(x) & Tumpus(y)) -> Tumpus(x))", "(Tumpuse(rompus) & -Tumpus(rompus))", "all x.(Rompes(x) -> Tumpus(x))", "all x.(Rompe(x) -> Tumulus(x))", "(all x.(Rompus(x) -> Tumulus(x)))", "(Tumpuse(rompus) & Tumpus(rompus))", "all x y.((Rompus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Rompus(x) -> Tumpus(x))", "all x.(Rompes(x) -> Tumpus(x))", "all x.(Rompus(x) -> Tumpus(x))", "all x.(Rompus(x) -> Tumpus(x))", "all x.(Rompuse(x) -> Tumpus(x))", "all x.(Rompus(x) -> Tumulus(x))", "All x.(Rompuse(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_456", "nl": "Sally is a yumpus and Sally is not a tumpus and Sally is a wumpus.", "fol": "(yumpus(Sally) & -tumpus(Sally) & wumpus(Sally))", "prediction": ["(all x.(Yumpus(x) -> Sally(x)) & (-Tumpus(x) -> Sally(x))) & (Wumpus(x) -> Sally(x)))", "all x y z.((Sally(x) & Yumpus(y) & Sally(z)) -> (Yumpus(x) & -Tumpus(z) & Wumpus(z)))", "all x y.((Sally(x) & Yumpus(x)) -> (-Tumpus(x) & Wumpus(y)))", "(all x.(Sally(x) -> Yumpus(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Wumpus(x)))", "(all x.(Yumpus(x) -> Sally)) & (-Tumpus(x) -> Sally)) & (Wumpus(x) -> Sally)))", "all x.(Sally(x) -> (Yumpus(x) & -Tumpus(x) & Wumpus(x)))", "(yumpus(Sally) & -Tumpus(Sally) & Wumpus(Sally))", "all x y z.((Sally(x) & Yumpus(x) & Sally(y) & Tumpus(z) & Wumpus(x)) -> (Yumpus(x) & -Tumpus(y) & Wumpus(z)))", "(all x y.(Yumpus(x) -> Sally(x)) & (-Tumpus(y) -> Sally(y))) & (Wumpus(y) -> Sally(y)))", "all x.(Yumpus(x) & -Tumpus(x) & Wumpus(x))", "(all x.(Yumpus(x) -> Sally)) & (-Tumpus(x) -> Sally(x)) & (Wumpus(x) -> Sally)))", "(all x.(Sally(x) -> Yumpa(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Wumpus(x)))", "all x y z.((Sally(x) & Yumpus(y) & -Tumpus(z)) -> (Yumpus(x) & Wumpus(x)))", "(yumpus(Sally) & -tumpus(Sally) & -wumpus(Sally))", "all x y.((Sally(x) & Yumpus(x)) -> (-Tumpus(x) & Wumpus(y)))", "exists x.(Yumpus(x) & -Tumpus(x) & Wumpus(x))"]}
{"id": "prontoqa_train_457", "nl": "Sally is not a rompus.", "fol": "-rompus(Sally)", "prediction": ["Sally is not a rompus.", "all x.(Sally(x) -> -Rompus(x))", "(-Rompus(Sally))", "Sally -Rompus(Sally)", "Sally n'est pas rompus.", "all x.(Sally(x) -> -Rompus(x))", "Sally is not a Rompus.", "(-Rompus(Sally))", "Sally is not a rompus.", "Sally -Rompus(Sally)", "all x.(Sally(x) -> -Rompus(x))", "-Rompus(Sally)", "Sally n'est pas rompus.", "Sally is not a Rompus.", "(-Rompus(Sally))", "-Rompus(Sally)"]}
{"id": "prontoqa_train_458", "nl": "Jompuses are yumpuses.", "fol": "all x. (jompus(x) -> yumpus(x))", "prediction": ["all x.(Jompuse(x) -> Yumpus(x))", "all x.(Jompuse(x) -> Yampus(x))", "all x y.((Jompuse(x) & Yumpus(y)) -> Is(x,y))", "all x.(Jumpus(x) -> Yampus(x))", "(Yumpuse(jompus) & HasYumpus(jompus))", "all x.(Jompuse(x) -> Yumpus(x))", "all x y.((Jompuse(x) & Yumpus(y)) -> Is(x,y))", "(Yumpuse(jompuse) & HasYumptials(jompuse))", "all x.(Jumpus(x) -> Yumpus(x))", "all x.(Jompuse(x) -> Yampus(x))", "all x y.((Jompuse(x) & Yumpus(y)) -> Yampus(x))", "all x.(Jumpus(x) -> Yampus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jimpus(x) -> Yumpus(x))", "all x.(Jompuse(x) -> Yumpus(x))", "All x.(Jomess(x) -> Yumpus(x))"]}
{"id": "prontoqa_train_459", "nl": "Wren is a brimpus and Wren is a numpus and Wren is not a yumpus.", "fol": "(brimpus(Wren) & numpus(Wren) & -yumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> Numpus(x)) & (Wren(x) -> -Yumpus(x)))", "all x y z.((Wren(x) & Brimpus(x) & Wren(y) & Numpus(y)) -> (Brimpus(x) & Numpus(y) & -Yumpus(z)))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wren(y) -> Numpus(y))) & all z.(Wren(z) -> -Yumpus(z)))", "(all x y z.((Wren(x) & Brimpus(x)) -> (Brimpus(x) & Numpus(y))) & ((Wren(z) & Yumpus(z)) -> -Yumpus(z)))", "all x y.((Wren(x) & Brimpus(x) & Wren(y)) -> (Numpus(y) & -Yumpus(y)))", "all x y z.((Wren(x) & Brimpus(x) & Wren(y) & Numpus(y)) -> (Brimpus(x) & Numpus(y) & -Yumpus(z)))", "(all x y.(Wren(x) -> Brimpus(x)) & (Wren(y) -> Numpus(y)) & (Wren(y) -> -Yumpus(y)))", "all x.(Wren(x) -> (Brimpus(x) & Numpus(x) & -Yumpus(x)))", "(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> Numpus(x)) & (Wren(x) -> -Yumpus(x)))", "all x y z.((Wren(x) & Brimpus(x) & Numpus(y) & -Yumpus(z)) -> (Brimpus(x) & Numpus(y) & -Yumpus(z)))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wren(y) -> Numpus(y))) & all z.(Wren(z) -> -Yumpus(z)))", "(all x y.(Brimpus(x) -> Wren(y)) & (Nompus(y) -> Wren(y)))", "all x y.((Wren(x) & Brimpus(x) & Wren(y)) -> (Numpus(y) & -Yumpus(y)))", "all x y z.((Wren(x) & Brimpus(x) & Wren(y) & Numpus(z)) -> (Brimpus(x) & Numpus(y) & -Yumpus(z)))", "all x.(Wren(x) -> (Brimpus(x) & Numpus(x) & -Yumpus(x)))", "(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> Numpus(x)) & (Wren(x) -> -Yumpus(x)))"]}
{"id": "prontoqa_train_460", "nl": "Wren is a numpus and Wren is a tumpus and Wren is not a vumpus.", "fol": "(numpus(Wren) & tumpus(Wren) & -vumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Numpus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Vumpus(x)))", "all x y z.((Wren(x) & Numpus(x) & Tumpus(y) & -Vumpus(z)) -> (Numpus(x) & Tumpus(y) & -Vumpus(z)))", "(all x.(Wren(x) -> Numpus(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> -Vumpus(z))))", "all x y z.((Wren(x) & Numpus(x) & Wren(y) & Tumpus(z)) -> (Numpus(x) & Tumpus(y) & -Vumpus(z)))", "(all x y.(Wren(x) -> Numpus(x)) & (Wren(y) -> Tumpus(y)) & (Wren(y) -> -Vumpus(y)))", "(all x y z.((Wren(x) & Numpus(x)) -> Numpus(x)) & ((Wren(y) & Tumpus(y)) -> -Vumpus(z)))", "(numpus(Wren) & Tumpus(Wren) & -Vumpus(Wren))", "all x y.((Wren(x) & Numpus(x) & Tumpus(y)) -> (Numpus(x) & -Vumpus(y)))", "(all x.(Wren(x) -> Numpus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Vumpus(x)))", "all x y z.((Wren(x) & Numpus(y) & Tumpus(z)) -> (Numpus(x) & Tumpus(z) & -Vumpus(x)))", "all x.(Wren(x) -> (Numpus(x) & Tumpus(x) & -Vumpus(x)))", "all x y.((Wren(x) & Numpus(x) & Tumpus(y)) -> (Numpus(x) & Tumpus(y) & -Vumpus(x)))", "(all x.(Wren(x) -> Numpus(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> -Vumpus(z))))", "all x y z.((Wren(x) & Numpus(x) & Tumpus(y) & -Vumpus(z)) -> (Numpus(x) & Tumpus(y) & -Vumpus(z)))", "(all x y.(Wren(x) -> Numpus(x)) & (Wren(y) -> Tumpus(y)) & (Wren(y) -> -Vumpus(y)))", "(all x.(Wren(x) -> Numpus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Vumpus(x)))"]}
{"id": "prontoqa_train_461", "nl": "Every impus is a vumpus.", "fol": "all x. (impus(x) -> vumpus(x))", "prediction": ["all x.(Impossible(x) -> Vumpus(x))", "all x.(IsVumpus(x) -> Imperium(x))", "all x.(Improve(x) -> Vumpus(x))", "-all x.(Impossible(x) -> Vumpus(x))", "all x y.((Issue(x) & Imperium(y)) -> Vumpus(x))", "all x.(Impossible(x) -> Vumpus(x))", "all x.(Implementation(x) -> Vumpus(x))", "all x.(Impact(x) -> Vumpus(x))", "all x.((Issue(x) & Vumpus(x)) -> Imperium(x))", "all x y.((Issue(x) & Imperium(y)) -> Vumpus(x))", "all x.(IsVumpus(x) -> Imperium(x))", "exists x.(Defimer(x) & Vumpus(x))", "all x.(Implementation(x) -> Vumpus(x))", "all x.(Impossible(x) -> Vumpus(x))", "exists x.(Defibris(x) & Vumpus(x))", "exists x.(Impact(x) & Vumpus(x))"]}
{"id": "prontoqa_train_462", "nl": "Polly is not a vumpus and Polly is a rompus and Polly is a brimpus.", "fol": "(-vumpus(Polly) & rompus(Polly) & brimpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Vumpus(x)) & (Polly(x) -> Rompus(x)) & (Polly(x) -> Brimpus(x)))", "all x y z.((Polly(x) & Vumpus(y) & Rompus(z)) -> (-Vumpus(x) & -Rompus(y) & -Brimpus(z)))", "(all x.(Polly(x) -> -Vumpus(x)) & (Polly(x) -> Rompus(x)) & (Polly(x) -> Brimpus(x)))", "(all x.(Polly(x) -> -Vumpus(x)) & (Polly(x) -> Rompus(x)) & (Polly(x) -> Brimpus(x)))", "(all x y z.((Polly(x) & Vumpus(y) & Rompus(z)) -> -Vumpus(x)) & ((Polly(x) & Brimpus(x)) -> Brimpus(x)))", "(-Vumpus(Polly) & Rompus(Polly) & Brimpus(Polly))", "all x y.((Polly(x) & Polly(y)) -> (-Vumpus(x) & Rompus(y) & Brimpus(y)))", "(all x y.(Vumpus(x) -> -Vumpus(x)) & (Rompus(y) -> Brimpus(y)))", "all x.(Polly(x) -> (-Vumpus(x) & Rompus(x) & Brimpus(x)))", "all x y z.((Polly(x) & Vumpus(y) & Rompus(z)) -> (-Vumpus(x) & -Rompus(x) & -Brimpus(x)))", "all x y z.((Polly(x) & Vumpus(y) & Rompus(z)) -> (-Vumpus(x) & -Rompus(x) & -Brimpus(x)))", "(all x.(Polly(x) -> -Vumpus(x)) & all y.(Polly(y) -> Rompus(y)) & all z.(Polly(z) -> Brimpus(z))))", "(all x.(Polly(x) -> -Vumpus(x)) & (Polly(x) -> Rompus(x)) & (Polly(x) -> Brimpus(x)))", "all x y z.((Polly(x) & Vampus(y) & Rompus(z)) -> (-Vumpus(x) & Rompus(x) & Brimpus(x)))", "all x y.((Polly(x) & Polly(y)) -> (-Vumpus(x) & Rompus(y) & Brimpus(y)))", "exists x.(Polly(x) & (-Vumpus(x) | (Rompus(x) | Brimpus(x)))))"]}
{"id": "prontoqa_train_463", "nl": "Each tumpus is a dumpus.", "fol": "all x. (tumpus(x) -> dumpus(x))", "prediction": ["all x.(Tumpus(x) -> Dumpus(x))", "all x.(Tumpus(x) -> Dumpus(x))", "(all x.(Tumpus(x) -> Dumpus(x))", "all x y.((Tumpus(x) & Dumpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Dumpus(x))", "all x y.((Tumpus(x) & Dumpus(y)) -> Is(x,y))", "all x.(Tumpus(x) -> Dumpus(x))", "all x.(Tumpus(x) -> Dumpus(x))", "all x.(Tumpus(x) -> Dumpus(x))", "all x.(Tumpus(x) -> Dumpus(x))", "exists x.(Tompus(x) & Puss(y) & Dumpus(z))", "all x.(Tumpus(x) -> Dumpus(x))", "exists x.(Tumpus(x) & Dumpus(x))", "exists x.(Tumpus(x) & Puss(x))", "all x.(Tumpus(x) -> Dumpus(x))", "exists x.(Tumpus(x) & Dumpus(x))"]}
{"id": "prontoqa_train_464", "nl": "Stella is a yumpus, Stella is a wumpus, and Stella is not a dumpus.", "fol": "(yumpus(Stella) & wumpus(Stella) & -dumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Yumpus(x)) & (Stella(x) -> Wumpus(x)) & (Stella(x) -> -Dumpus(x)))", "all x y z.((Stella(x) & Yumpus(y) & Wumpus(z)) -> (Yumpus(x) & Wumpus(z) & -Dumpus(x)))", "(all x.(Stella(x) -> Yampus(x)) & all y.(Stella(y) -> Wumpus(y)) & all z.(Stella(z) -> -Dumpus(z))))", "(all x y z.((Stella(x) & Yumpus(y)) -> (Yumpus(x) & Wumpus(y))) & ((Stella(z) & Dumpus(z)) -> -Dumpus(z)))", "all x.(Stella(x) -> (Yumpus(x) & Wumpus(x) & -Dumpus(x)))", "all x y z.((Stella(x) & Yumpus(y) & Wumpus(z)) -> (Yumpus(x) & Wumpus(y) & -Dumpus(z)))", "(all x.(Stella(x) -> Yumpus(x)) & (Stella(x) -> Wumpus(x)) & -Dumpus(x)))", "exists x.(Yumpus(x) & Wumpus(x) & -Dumpus(x))", "(all x.(Yumpus(x) & All y.(Wumpus(y)) -> Stella(x))) & (Wumpus(y) -> Stella(y)))", "all x y z.(Yumpus(x) & Wumpus(y) & Dumpus(z)) -> (Yumpus(x) & Wumpus(y) & -Dumpus(z)))", "(all x.(Stella(x) -> Yampus(x)) & all y.(Stella(y) -> Wumpus(y)) & all z.(Stella(z) -> -Dumpus(z))))", "all x y z.((Stella(x) & Yumpus(y) & Wumpus(z)) -> (Yumpus(x) | Wumpus(z) & -Dumpus(x)))", "(yumpus(z) | wumpus(w) | -dumpus(z)))", "all x.(Stella(x) -> (Yumpus(x) & Wumpus(x) & -Dumpus(x)))", "(all x y z.((Stella(x) & Yumpus(y) & Wumpus(z)) -> (Yumpus(x) | Wumpus(z)) | -Dumpus(z)))", "all x y z.((Stella(x) & Yumpus(y) & Wumpus(z) & -Dumpus(z)) -> (Yumpus(x) | Wumpus(z) | -Dumpus(z)))"]}
{"id": "prontoqa_train_465", "nl": "Grimpuses are rompuses.", "fol": "all x. (grimpus(x) -> rompus(x))", "prediction": ["all x.(Grimpus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x y.((Grimpus(x) & Rompus(y)) -> Rompus(x))", "(all x.(Grimpuse(x) -> Rompus(x)))", "all x.(Grimpus(x) -> Rompus(x))", "(Rampuse(r) & Rompus(r))", "(Rampuse(Grimpus) & Rompus(rompus))", "(all x.(Grimpus(x) -> Rompus(x)))", "all x y.((Grimpus(x) & Rompus(y)) -> Rompus(x))", "all x.(Grimpuse(x) -> Rompus(x))", "all x.(Rampus(x) -> Rompus(x))", "all x.(Gruppus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Rampus(x) -> Rompus(x))", "all x.(Grimpuse(x) -> Rompus(x))", "all x.(Rampus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_466", "nl": "Sally is a lempus and Sally is a vumpus and Sally is not a rompus.", "fol": "(lempus(Sally) & vumpus(Sally) & -rompus(Sally))", "prediction": ["(all x.(Sally(x) -> Lempus(x)) & (Sally(x) -> Vumpus(x)) & (Sally(x) -> -Rompus(x)))", "all x y z.((Sally(x) & Lempus(x) & Vumpus(y) & -Rompus(z)) -> (Lempus(x) & Vumpus(y) & -Rompus(z)))", "(all x.(Sally(x) -> Lempus(x)) & all y.(Sally(y) -> Vumpus(y)) & all z.(Sally(z) -> -Rompus(z))))", "all x y.((Sally(x) & Lempus(x) & Vumpus(y)) -> (Lempus(x) & Vumpus(y) & -Rompus(y)))", "(all x y z.((Sally(x) & Lempus(x) & Vumpus(y)) -> (Lempus(x) & Vumpus(y) & -Rompus(z))))", "all x.(Sally(x) -> (Lempus(x) & Vumpus(x) & -Rompus(x)))", "exists x.(Sally(x) & Lempus(x) & Vumpus(x) & -Rompus(x))", "all x y z.((Sally(x) & Lempus(x) & Vumpus(y) & -Rompus(z)) -> (Lempus(x) & Vumpus(y) & -Rompus(z)))", "(all x y.(Lempus(x) & Lempus(y)) & (Vumpus(y) | -Rompus(y)))", "(all x.(Sally(x) -> Lempus(x)) & (Sally(x) -> Vumpus(x)) & (Sally(x) -> -Rompus(x)))", "(all x.(Sally(x) -> Lempus(x)) & all y.(Sally(y) -> Vumpus(y)) & all z.(Sally(z) -> -Rompus(z))))", "all x y.((Sally(x) & Lempus(x) & Vumpus(y)) -> (-Rompus(x)))", "all x.(Sally(x) -> (Lempus(x) & Vumpus(x) & -Rompus(x)))", "all x y z.((Sally(x) & Lempus(x) & Vumpus(y) & -Rompus(z)) -> (Lempus(x) & Vumpus(y) & -Rompus(z)))", "(all x.(Sally(x) -> Lempus(x)) & (Sally(x) -> Vumpus(x)) & (Sally(x) -> -Rompus(x)))", "(all x.(Sally(x) -> Lempus(x)) & all y.(Sally(y) -> Vumpus(y)) & all z.(Sally(z) -> -Rompus(z))))"]}
{"id": "prontoqa_train_467", "nl": "Grimpuses are wumpuses.", "fol": "all x. (grimpus(x) -> wumpus(x))", "prediction": ["all x.(Grimpus(x) -> Wumpus(x))", "all x.(Grimpus(x) -> Wumpus(x))", "all x y.((Grimpus(x) & Wumpus(y)) -> Wumpus(x))", "(Wumpuse(Grimpus) & Wumpus(Grimpus))", "(all x.(Grimpus(x) -> Wumpus(x)))", "all x.(Grimpus(x) -> Wumpus(x))", "all x y.((Grimpus(x) & Wumpus(y)) -> Wumpus(x))", "all x.(Gruppus(x) -> Wumpus(x))", "(Wumpuse(Grimpus) & Wumpus(Grimpus))", "all x.(Grimpus(x) -> Wumpus(x))", "(all x.(Grimpus(x) -> Wumpus(x)))", "all x.(Grimpus(x) -> Wumpus(x))", "all x.(Grimpus(x) -> Wampus(x))", "all x.(Grimpus(x) -> Wumpus(x))", "all x.(Grimpus(x) -> Wampus(x))", "all x.(Grumpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_468", "nl": "Sam is a zumpus, Sam is not a wumpus, and Sam is a gorpus.", "fol": "(zumpus(Sam) & -wumpus(Sam) & gorpus(Sam))", "prediction": ["(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Gorpus(x)))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Wumpus(z)) -> (-Wumpus(y) & Gorpus(z)))", "(all x y z.((Sam(x) & Zumpus(y)) -> (Tompus(z) & -Wumpus(z))) & ((Sam(x) & Gorpus(x)) -> (Gorpus(x))))", "all x y z.((Sam(x) & Zumpus(y) & Wumpus(z)) -> (-Sam(x) & Gorpus(x)))", "(all x y z.((Sam(x) & Zumpus(x)) -> (Sam(y) & -Wumpus(y)) & ((Sam(z) & Gorpus(z)) -> (Sam(z) & Gorpus(z))))", "all x.(Sam(x) -> (Tompus(x) | -Wumpus(x) | Gorpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Gorpus(x)))", "(all x.(SameDay(x) -> Zumpus(x)) & (SameDay(x) -> -Wumpus(x)) & (SameDay(x) -> Gorpus(x)))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Wormpus(z)) -> (-Wumpus(y) & Gorpus(z)))", "exists x.(Sam(x) & Zumpus(x) & -Wumpus(x) & Gorpus(x))", "all x y z.((Sam(x) & Zumpus(y) & Wumpus(z)) -> (-Wumpus(x) & Gorpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Gorpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & all y.(Sam(y) -> -Wumpus(y)) & all z.(Sam(z) -> Gorpus(z))))", "all x.(Sam(x) -> (Tompus(x) | -Wumpus(x) | Gorpus(x)))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Wumpus(z) & Gorpus(x)) -> (Sam(y) & -Wumpus(y) & Gorpus(z)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Gorpus(x)))"]}
{"id": "prontoqa_train_469", "nl": "Polly is not a sterpus, Polly is a tumpus, and Polly is a numpus.", "fol": "(-sterpus(Polly) & tumpus(Polly) & numpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Sterpus(x)) & (Polly(x) -> Tumpus(x)) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Sterpus(y) & Tumpus(z)) -> (-Sterpus(x) & Tumpus(y) & Numpus(z)))", "(all x y z.((Polly(x) & Sterpus(y)) -> -Sterpus(x)) & ((Polly(z) & Tumpus(z))) -> Numpus(z)))", "(all x.(Polly(x) -> -Sterpus(x)) & all y.(Polly(y) -> Tumpus(y))) & all z.(Polly(z) -> Numpus(z)))", "all x.(Polly(x) -> (-Sterpus(x) & Tumpus(x) & Numpus(x)))", "all x y z.((Polly(x) & Sterpus(y) & Tumpus(z)) -> (-Sterpus(x) & Tumpus(y) & Numpus(z)))", "all x y z.((Polly(x) & Sterpus(y) & Tumpus(z)) -> (-Sterpus(x) & Tumpus(y) & Numpus(z)))", "exists x.(Polly(x) & -Sterpus(x) & Polly(x) & Tumpus(x) & Numpus(x))", "(all x.(Polly(x) -> -Sterpus(x)) & (Polly(x) -> Tumpus(x)) & (Polly(x) -> Numpus(x)))", "(all x y z.((Polly(x) & Sterpus(y)) -> -Sterpus(x)) & ((Polly(z) & Tumpus(z))) -> Numpus(z)))", "(all x y z.((Polly(x) & Sterus(y)) -> -Sterpus(x)) & ((Polly(z) & Tumpus(z)) -> Numpus(z)))", "(all x.(Polly(x) -> -Sterpus(x)) & (Polly(x) -> Tumpus(x)) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Sterpus(y) & Tumpus(z)) -> (-Sterpus(x) & Tumpus(x) & Numpus(x)))", "(all x.(Polly(x) -> -Sterepus(x)) & all y.(Polly(y) -> Tumpus(y))) & all z.(Polly(z) -> Numpus(z)))", "all x y z.((Polly(x) & Sterpus(y) & Tumpus(z)) -> (-Sterpus(x) & Tumpus(x) & Numpus(x)))", "all x y z.((Polly(x) & Sterpus(y) & Tumpus(z)) -> (-Sterpus(x) | (Tumpus(x) | Numpus(x))))"]}
{"id": "prontoqa_train_470", "nl": "Each rompus is a numpus.", "fol": "all x. (rompus(x) -> numpus(x))", "prediction": ["all x.(Rompus(x) -> Numpus(x))", "all x.(Rompus(x) -> Numpus(x))", "(all x.(Rompus(x) -> Numpus(x))", "all x y.((Rompus(x) & Numpus(y)) -> Has(x,y))", "all x.(rompus(x) -> Numpus(x))", "all x.(Rompus(x) -> Numpus(x))", "all x y.((Rompus(x) & Numpus(y)) -> Is(x,y))", "all x.(Rompus(x) -> Numpus(x))", "all x.(rompus(x) -> Numpus(x))", "all x y.((Rompus(x) & Numpus(y)) -> Has(x,y))", "exists x.(rompus(x) & Numpus(x))", "all x.(Rompus(x) -> Numpus(x))", "exists x.(rompus(x) & Numpus(x))", "all x.(Rompus(x) -> Numpus(x))", "exists x.(rompus(x) & Numpus(x))", "all x.(Rompus(x) -> Numpus(x))"]}
{"id": "prontoqa_train_471", "nl": "Rex is a lorpus and Rex is a tumpus and Rex is not a numpus.", "fol": "(lorpus(Rex) & tumpus(Rex) & -numpus(Rex))", "prediction": ["(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> Tumpus(x)) & (Rex(x) -> -Numpus(x)))", "all x y z.((Rex(x) & Lorpus(y) & Tumpus(z)) -> (Lorpus(x) & Tumpus(z) & -Numpus(x)))", "(all x.(Rex(x) -> Lorpus(x)) & all y.(Rex(y) -> Tumpus(y)) & all z.(Rex(z) -> -Numpus(z))))", "(all x y.(Lorpus(x) -> Rex)) & (Tumpus(y) -> Rex)) & (Numpus(y) -> Rex)))", "all x y.((Rex(x) & Lorpus(x) & Tumpus(y)) -> (Lorpus(x) & Tumpus(y) & -Numpus(x)))", "(all x y z.((Rex(x) & Lorpus(y) & Tumpus(z)) -> (Lorpus(x) & Tumpus(z) & -Numpus(z))))", "all x.(Rex(x) -> (Lorpus(x) & Tumpus(x) & -Numpus(x)))", "all x y z.((Rex(x) & Lorpus(y) & Tumpus(z)) -> (Lorpus(x) & Tumpus(x) & -Numpus(x)))", "(Lorpus(Rex) & Tumpus(Rex) & -Numpus(Rex))", "(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> Tumpus(x)) & (Rex(x) -> -Numpus(x)))", "(all x.(Rex(x) -> Lorpus(x)) & all y.(Rex(y) -> Tumpus(y))) & all z.(Rex(z) -> -Numpus(z))))", "all x.(Rex(x) -> (Lorpus(x) | Tumpus(x) | Numpus(x)))", "(all x.(Rex(x) -> Llorpus(x)) & all y.(Rex(y) -> Tumpus(y))) & all z.(Rex(z) -> -Numpus(z))))", "all x y z.((Rex(x) & Lorpus(y) & Tumpus(z)) -> (Lorpus(x) | Tumpus(z) | Numpus(z)))", "all x y.((Rex(x) & Lorpus(x)) -> (Tumpus(x) & -Numpus(y)))", "(all x y.(Lorpus(x) -> Rex(x)) & (Tumpus(y) -> Rex(y)) & (Numpus(y) -> Rex(y)))"]}
{"id": "prontoqa_train_472", "nl": "Fae is not an impus and Fae is a grimpus and Fae is a rompus.", "fol": "(-impus(Fae) & grimpus(Fae) & rompus(Fae))", "prediction": ["(all x.(Fae(x) -> -Impossible(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> Rompus(x)))", "all x y z.((Fae(x) & Fae(y) & Grimpus(z)) -> (-Impossible(x) & Grimpus(y) & Rompus(z)))", "(all x y z.((Fae(x) & IsNotImpossible(x)) -> Grimpus(x)) & ((Fae(y) & Grimpus(z)) -> Rompus(y)))", "(all x.(Fae(x) -> -Issue(x)) & all y.(Fae(y) -> Grimpus(y)) & all z.(Fae(z) -> Rompus(z))))", "(all x y.(Fae(x) -> -Impossible(x)) & (Fae(y) -> Grimpus(y)) & (Fae(y) -> Rompus(y)))", "(all x.(Fae(x) -> -Impossible(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> Rompus(x)))", "all x y z.((Fae(x) & Fae(y) & Grimpus(z)) -> (-Is(x,Is(x) & Grimpus(y) & Rompus(z)))", "all x y.((Fae(x) & Fae(y)) -> (-Impossible(x) & Grimpus(y) & Rompus(y)))", "(-Impossible(Fae,Fae) & Grimpus(Fae,Fae) & Rompus(Fae,Fae))", "all x y z.(Fae(x) & ((Issue(x) & Grimpus(y)) | (Issue(z) & Rompus(z)))) -> -Issue(x) & IsSmoothpus(y)))", "all x.(Fae(x) -> (-Impossible(x) & Grimpus(x) & Rompus(x)))", "exists x.(Fae(x) & -Is(x) & Grimpus(x) & Rompus(x))", "all x y z.((Fae(x) & Fae(y) & Grimpus(z)) -> (-Impossible(x) & Grimpus(y) & Rompus(z)))", "(all x.(Fae(x) -> -Issue(x)) & all y.(Fae(y) -> (Grimpus(y) & Rompus(y))))", "all x y.((Fae(x) & Fae(y)) -> (-Impossible(x) & Grimpus(y) & Rompus(y)))", "(all x.(Fae(x) -> -Impossible(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> Rompus(x)))"]}
{"id": "prontoqa_train_473", "nl": "Every vumpus is a gorpus.", "fol": "all x. (vumpus(x) -> gorpus(x))", "prediction": ["all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "all x y.((Vumpus(x) & Gorpus(y)) -> Is(x,y))", "(all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "all x y.((Vumpus(x) & Gorpus(y)) -> Is(x,y))", "all x y.((Vumpus(x) & Gorpus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "exists x.(Vumpus(x) & Gorpus(x))", "exists x.(Vumpus(x) & Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "exists x.(Vumpus(x) & Gorpus(x))"]}
{"id": "prontoqa_train_474", "nl": "Sam is not a gorpus and Sam is a numpus and Sam is a jompus.", "fol": "(-gorpus(Sam) & numpus(Sam) & jompus(Sam))", "prediction": ["(all x.(Sam(x) -> -Gorpus(x)) & (Sam(x) -> Numpus(x)) & (Sam(x) -> Jompus(x)))", "all x y z.((Sam(x) & Gorpus(y) & Numpus(z)) -> (-Gorpus(x) & Numpus(y) & Jompus(z)))", "(all x y z.((Sam(x) & Gorpus(y) & Numpus(z)) -> -Gorpus(x)) & ((Sam(x) & Numpus(x)) -> Jompus(x)))", "(all x.(Sam(x) -> -Gorpus(x)) & all y.(Sam(y) -> Numpus(y)) & all z.(Sam(z) -> Jompus(z))))", "all x.(Sam(x) -> (-Gorpus(x) & Numpus(x) & Jompus(x)))", "(-Gorpus(Sam) & Numpus(Sam) & Jompus(Sam))", "all x y z.((Sam(x) & Gorpus(y) & Numpus(z)) -> (-Gorpus(x) & Numpus(x) & Jompus(x)))", "all x y.((Sam(x) & Gorpus(y)) -> (-Gorpus(x) & Numpus(y) & Jompus(x)))", "(all x.(Sam(x) -> -Gorpus(x)) & (Sam(x) -> Numpus(x)) & (Sam(x) -> Jompus(x)))", "all x.(Sam(x) -> (-Gorpus(x) & Numpus(x) & Jompus(x)))", "(all x y.(Sam(x) -> -Gorpus(x)) & (Sam(y) -> Numpus(y)) & (Sam(y) -> Jompus(y)))", "(-Gorpus(sam) & Numpus(sam) & Jompus(sam))", "all x y z.((Sam(x) & Gorpus(y) & Numpus(z)) -> (-Gorpus(x) & Numpus(y) & Jompus(z)))", "(all x.(Sam(x) -> -Gorpus(x)) & all y.(Sam(y) -> Numpus(y)) & all z.(Sam(z) -> Jompus(z))))", "exists x.(Sam(x) & -Gorpus(x) & Numpus(x) & Jompus(x))", "all x y z.((Sam(x) & Gorpus(y) & Numpus(z) & Jompus(x)) -> (-Gorpus(x) & Numpus(y) & Jompus(z)))"]}
{"id": "prontoqa_train_475", "nl": "Gorpuses are lorpuses.", "fol": "all x. (gorpus(x) -> lorpus(x))", "prediction": ["all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpuse(x) -> Lorpus(x))", "all x y.((Gorpuse(x) & Lorpus(y)) -> (Lorpus(x) & -Lorpus(y)))", "all x.(Gorpus(x) -> Lorpus(x))", "(Lorpuse(gorpus) & Loomis(gorpus))", "all x.(Gorpuse(x) -> Lorpuse(x))", "all x y.((Gorpuse(x) & Lorpus(y)) -> Is(x,y))", "(Lorpuse(gorpus) -> Thrombosis(gorpus))", "(Lorpuse(gorpus) & Loomise(gorpus))", "all x y.((Gorpuse(x) & Lorpus(y)) -> (Lorpus(x) & -Lorpus(x)))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpuse(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Loomis(x))", "all x.(Gorpuse(x) -> Loomis(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpuse(x) -> Lorpuse(x))"]}
{"id": "prontoqa_train_476", "nl": "Rex is a wumpus and Rex is not a lorpus and Rex is a numpus.", "fol": "(wumpus(Rex) & -lorpus(Rex) & numpus(Rex))", "prediction": ["(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> -Lorpus(x)) & (Rex(x) -> Numpus(x)))", "all x y z.((Rex(x) & Wumpus(y) & Lorpus(z)) -> (Wumpus(x) & -Lorpus(y) & Numpus(z)))", "all x y z.((Rex(x) & Wumpus(x) & -Lorpus(y) & Numpus(z)) -> (Wumpus(x) & Numpus(z)))", "(all x y.(Wumpus(x) -> Rex)) & (Lorpus(y) -> Rex)) & (Numpus(y) -> Rex)))", "all x y.((Rex(x) & Wumpus(x) & -Lorpus(y)) -> Numpus(x))", "(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> -Lorpus(x)) & (Rex(x) -> Numpus(x)))", "(all x y z.((Rex(x) & Wumpus(y)) -> Wumpus(x)) & ((Rex(z) & -Lorpus(z))) -> Numpus(z)))", "(all x.(Wumpus(x) -> Rex)) & (-Lorpus(x) -> Rex)) & (Numpus(x) -> Rex)))", "all x.(Rex(x) -> (Wumpus(x) & -Lorpus(x) & Numpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & (-Lorpus(x) & -Numpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & all y.(Rex(y) -> -Lorpus(y))) & all z.(Rex(z) -> Numpus(z)))", "all x y z.((Rex(x) & Wumpus(y) & Lorpus(z)) -> (Wumpus(x) & -Lorpus(y) & Numpus(z)))", "all x y.((Rex(x) & Wumpus(x)) -> (-Lorpus(x) & Numpus(y)))", "(all x y.(Wumpus(x) -> Rex)) & (Lorpus(y) -> Rex)) & (Numpus(y)) -> Rex))", "all x.(Rex(x) -> (Wumpus(x) & -Lorpus(x) & Numpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & all y.(Rex(y) -> -Lorpus(y))) & all z.(Rex(z) -> Numpus(z)))"]}
{"id": "prontoqa_train_477", "nl": "Rex is not a gorpus.", "fol": "-gorpus(Rex)", "prediction": ["all x.(Rex(x) -> -Gorpus(x))", "(-Gorpus(Rex))", "Rex is notGorpus(x)", "Rex is not a Gorpus.", "all x.(Rex(x) -> -Gorpus(x))", "(-Gorpus(Rex))", "Rex is not Gorpus.", "Rex -Gorpus(Rex)", "-Gorpus(Rex)", "all x.(Rex(x) -> -Gorpus(x))", "Rex is not a Gorpus.", "(-Gorpus(Rex))", "all x.(Rex(x) -> -Gorpus(x))", "Rex -Gorpus(Rex)", "-Gorpus(Rex)", "(-Gorpus(Rex))."]}
{"id": "prontoqa_train_478", "nl": "Sally is a rompus, Sally is not a lempus, and Sally is an impus.", "fol": "(rompus(Sally) & -lempus(Sally) & impus(Sally))", "prediction": ["(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Lempus(x)) & (Sally(x) -> Imperator(x)))", "all x y z.((Sally(x) & Rompus(y) & Lempus(z)) -> (Rompus(x) & -Lempus(x) & Imperator(x)))", "all x.(Sally(x) -> (Rompus(x) & -Lempus(x) & IsImpossible(x)))", "all x y z.((Sally(x) & Rompus(x) & Lempus(y) & Imperator(z)) -> (Rompus(x) & -Lempus(y) & Imperator(z)))", "(all x y z.((Sally(x) & Rompus(y)) -> Rompus(x)) & ((Sally(z) & -Lempus(z))) -> Imperator(z)))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Lempus(x)) & (Sally(x) -> Imperator(x)))", "all x y z.((Sally(x) & Rrompus(x) & Lempus(y) & Imperator(z)) -> (Rompus(x) & -Lempus(y) & Imperator(z)))", "(all x.(Sally(x) -> Rompus(x)) & (-Lempus(x) & -Ilios(x)))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> -Lempus(y)) & all z.(Sally(z) -> Imperator(z))))", "all x.(Sally(x) -> (Rompus(x) & -Lempus(x) & Impossible(x)))", "(all x y.(Rompus(x) -> Sally(x)) & (Lempus(y) -> -Sally(y)) & (Illegal(y) -> Sally(y)))", "(all x.(Sally(x) -> Rrompus(x)) & (Sally(x) -> -Lempus(x)) & (Sally(x) -> Imperator(x)))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Lempus(x)) & (Sally(x) -> Issue(x)))", "all x.(Sally(x) -> (Rompus(x) & -Lempus(x) & Ilira(x)))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> -Lempus(y)) & all z.(Sally(z) -> Imperator(z)))", "all x y z.((Sally(x) & Rompus(y) & Lempus(z)) -> (Rompus(x) & -Lempus(x) & Issue(x)))"]}
{"id": "prontoqa_train_479", "nl": "Sally is not a yumpus.", "fol": "-yumpus(Sally)", "prediction": ["Sally is not yumpus.", "all x.(Sally(x) -> -Yumpus(x))", "(-Yumpus(Sally))", "Sally -Yumpus(Sally)", "Sally n'est pas yumpus.", "all x.(Sally(x) -> -Yumpus(x))", "Sally is not yumpus.", "(-Yumpus(Sally))", "Sally is not a yumpus.", "Sally & -Yumpus(Sally)", "Sally -Yumpus(Sally)", "-Yumpus(Sally)", "all x.(Sally(x) -> -Yumpus(x))", "Sally is notyumpus.", "(-Yumpus(Sally))", "-Yumpus(Sally)"]}
{"id": "prontoqa_train_480", "nl": "Every shumpus is a jompus.", "fol": "all x. (shumpus(x) -> jompus(x))", "prediction": ["all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x y.((Shumpus(x) & Jompus(y)) -> Has(x,y))", "(all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x y.((Shumpus(x) & Jompus(y)) -> Has(x,y))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "exists x.(Shumpus(x) & Jhumpus(x))", "exists x.(Shumpus(x) & Jompus(x))"]}
{"id": "prontoqa_train_481", "nl": "Stella is a grimpus, Stella is a numpus, and Stella is not a jompus.", "fol": "(grimpus(Stella) & numpus(Stella) & -jompus(Stella))", "prediction": ["(all x.(Stella(x) -> Grimpus(x)) & (Stella(x) -> Numpus(x)) & (Stella(x) -> -Jompus(x)))", "all x y z.((Stella(x) & Grimpus(x) & Stella(y) & Numpus(y)) -> (Stella(z) & -Jompus(z)))", "(all x.(Stella(x) -> Grimpus(x)) & all y.(Stella(y) -> Numpus(y)) & all z.(Stella(z) -> -Jompus(z))))", "(all x y z.((Stella(x) & Grimpus(x)) -> (Stella(y) & Numpus(y))) & ((Stella(z) & -Jompus(z)) -> (Stella(z) & -Stella(z))))", "all x y z.((Stella(x) & Grimpus(x) & Numpus(y) & -Jompus(z)) -> (Stella(x) & Numpus(x) & -Stella(x)))", "(all x.(Stella(x) -> Grimpus(x)) & (Stella(x) -> Numpus(x)) & -Jompus(x)))", "all x.(Stella(x) -> (Grimpus(x) | Numpus(x) | -Jompus(x)))", "all x y z.((Stella(x) & Grimpus(x) & Stella(y) & Numpus(y)) -> (Stella(x) & -Jompus(z)))", "(all x y z.((Stella(x) & Grimpus(y)) -> (Grimpus(z) | Numpus(z))) & ((Stella(x) & Jompus(z)) -> -Jompus(x)))", "exists x.(Stella(x) & Grimpus(x) & Numpus(x) & -Jompus(x))", "all x y z.(Stella(x) -> (Grimpus(x) & Numpus(y) & -Jompus(z)))", "(all x y z.((Stella(x) & Grimpus(x)) -> Nompus(x)) & ((Stella(y) & -Jompus(y)) -> Nompus(y)))", "(all x.(Stella(x) -> Grimpus(x)) & all y.(Stella(y) -> Numpus(y)) & all z.(Stella(z) -> -Jompus(z))))", "all x y z.((Stella(x) & Grimpus(y) & Numpus(z)) -> (Grimpus(x) & Numpus(z) & -Jompus(x)))", "(all x.(Stella(x) -> Grumpus(x)) & (Stella(x) -> Numpus(x)) & -Jompus(x)))", "(all x.(Stella(x) -> Grimpus(x)) & (Stella(x) -> Numpus(x)) & (Stella(x) -> -Jompus(x)))"]}
{"id": "prontoqa_train_482", "nl": "Numpuses are grimpuses.", "fol": "all x. (numpus(x) -> grimpus(x))", "prediction": ["all x.(Numpus(x) -> Grimpuse(x))", "all x.(Numpus(x) -> Grimpuse(x))", "all x y.((Numpus(x) & Grimpuse(y)) -> (Smoothpuse(x) & Grapple(y)))", "(Grimpuse(Numpus) & Grappus(Numpus))", "all x.(Numpus(x) -> Grimpuse(x))", "(SmokeyPeasant(Numpus)", "all x y.((Numpus(x) & Grapple(y)) -> Grimpuse(x))", "(Grampuse(nupuse) & Grimpuse(nupuse))", "all x.(Numpuse(x) -> Grappa(x))", "all x.(Numpuse(x) -> Grappase(x))", "all x.(Numpus(x) -> Grimpuse(x))", "all x.(Numpus(x) -> Gruppuse(x))", "all x.(Numpus(x) -> Grimpuse(x))", "all x.(Nimbus(x) -> Grimpuse(x))", "all x.(Numpuse(x) -> Grimpuse(x))", "All x.(Numpus(x) -> Grappus(x))"]}
{"id": "prontoqa_train_483", "nl": "Fae is a jompus, Fae is a shumpus, and Fae is not a grimpus.", "fol": "(jompus(Fae) & shumpus(Fae) & -grimpus(Fae))", "prediction": ["(all x.(Fae(x) -> Jompus(x)) & (Fae(x) -> Humpus(x)) & -Fae(x)))", "all x y z.((Fae(x) & Jompus(x) & Shumpus(y) & -Grimpus(z)) -> (Jompus(x) & Shumpus(y) & -Grimpus(z)))", "(all x.(Fae(x) -> Jompus(x)) & all y.(Fae(y) -> Humpus(y)) & all z.(Fae(z) -> -Grimpus(z))))", "(all x y z.((Fae(x) & Jompus(y)) -> (Jompus(z) | Shumpus(z))) & ((Fae(x) & Grimpus(x)) -> -Smoothpus(x)))", "all x y z.((Fae(x) & Jompus(y) & Humpus(z)) -> (Jompus(x) | Shumpus(z) | -Grimpus(x)))", "all x.(Fae(x) -> (Jompus(x) | Shumpus(x) | -Grimpus(x)))", "(all x y z.((Fae(x) & Jompus(x)) -> (Fae(y) & Humpus(z))) & ((Fae(x) & Grimpus(x)) -> (Fae(x) & -Fae(x))))", "all x y z.((Fae(x) & Jompus(x) & Shumpus(y) & Grimpus(z)) -> (Jompus(x) | Shumpus(y) & -Grimpus(z)))", "all x y z.(Fae(x) & Jompus(x) & Shumpus(y) & -Grimpus(z))", "(all x.(Fae(x) -> Jompus(x)) & (Fae(x) -> Humpus(x)) & -Fae(x)))", "all x.(Fae(x) -> (Jompus(x) | Humpus(x) | -Grimpus(x)))", "all x y z.(Fae(x) -> (Jompus(x) & Shumpus(y) & -Grimpus(z)))", "(all x.(Fae(x) -> Jompus(x)) & all y.(Fae(y) -> Humpus(y)) & all z.(Fae(z) -> -Grimpus(z))))", "(all x y z.(Fae(x) -> Jompus(x)) & (Fae(y) -> Humpus(y)) & (Fae(z) -> -Grimpus(z)))", "(all x.(Fae(x) -> Jompus(x)) & (Fae(x) -> Shumpus(x)) & -Fae(x) -> Grimpus(x)))", "(all x.(Fae(x) -> Jompus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> -Grimpus(z))))"]}
{"id": "prontoqa_train_484", "nl": "Wren is not a yumpus, Wren is a tumpus, and Wren is a lempus.", "fol": "(-yumpus(Wren) & tumpus(Wren) & lempus(Wren))", "prediction": ["(all x.(Wren(x) -> -Yumpus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> Lempus(z))))", "all x y z.((Wren(x) & Yumpus(y) & Tumpus(z)) -> (-Yumpus(x) & Tumpus(x) & Lempus(x)))", "(all x.(Wren(x) -> -Yumpus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> Lempus(x)))", "(all x y z.((Wren(x) & Yumpus(y)) -> -Yumpus(x)) & ((Wren(z) & Tumpus(z))) -> Lempus(z)))", "all x.(Wren(x) -> (-Yumpus(x) & Tumpus(x) & Lempus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Tumpus(z)) -> (-Yumpus(x) & Tumpus(x) & Lempus(x)))", "(all x y z.((Wren(x) & Yumpus(y) & Tumpus(z)) -> -Yumpus(x)) & ((Wren(x) & Tumpus(z)) -> Lempus(x)))", "(all x.(Wren(x) -> -Yumpus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> Lempus(z))))", "exists x.(Wren(x) & -Yumpus(x) & Tumpus(x) & Lempus(x))", "(all x y z.((Wren(x) & Yumpus(y)) -> -Yumpus(x)) & ((Wren(z) & Tumpus(z))) -> Lempus(z)))", "(all x.(Wren(x) -> -Yumpus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> Lempus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Tumpus(z)) -> (-Yumpus(x) | (-Yumpus(x) & Tumpus(z) & Lempus(z))))", "all x y z.((Wren(x) & Yumpus(y) & Tumpus(z)) -> (-Yumpus(x) & Tumpus(y) & Lempus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Tumpus(z) & Lempus(x)) -> (-Yumpus(x) | (-Yumpus(x) & Tumpus(y) & Lempus(z))))", "(all x.(Wren(x) -> -Yumpus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> Lempus(z))))", "all x y z.((Wren(x) & Yampus(y) & Tumpus(z)) -> (-Yumpus(x) & Tumpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_485", "nl": "Sally is a lorpus, Sally is not a tumpus, and Sally is a dumpus.", "fol": "(lorpus(Sally) & -tumpus(Sally) & dumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Lorpus(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Dumpus(x)))", "all x y z.((Sally(x) & Lorpus(y) & Tumpus(z)) -> (Lorpus(x) & -Tumpus(x) & Dumpus(x)))", "(all x y z.((Sally(x) & Lorpus(y)) -> (Lorpus(x) & -Tumpus(y)) & ((Sally(z) & Dumpus(z)) -> Dumpus(z)))", "(all x.(Sally(x) -> Lorpus(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Dumpus(x)))", "all x y z.((Sally(x) & Lorpus(y) & Tumpus(z)) -> (Lorpus(x) & -Tumpus(x) & Dumpus(x)))", "all x.(Sally(x) -> (Lorpus(x) & -Tumpus(x) & Dumpus(x)))", "all x y z.((Sally(x) & Lorpus(x) & -Tumpus(y) & Dumpus(z)) -> (Lorpus(x) & -Tumpus(y) & Dumpus(z)))", "all x.(Sally(x) -> (Lorpus(x) | -Tumpus(x) | Dumpus(x)))", "(all x.(Sally(x) -> Lorpus(x)) & (-Tumpus(x) & (Dumpus(x))))", "(all x y z.((Sally(x) & Lorpus(y)) -> (Lorpus(x) | -Tumpus(y)) | (Dumpus(z) & -Lorpus(z))))", "exists x.(Sally(x) & Lorpus(x) & -Tumpus(x) & Dumpus(x))", "(all x.(Sally(x) -> Lorpus(x)) & all y.(Sally(y) -> -Tumpus(y)) & all z.(Sally(z) -> Dumpus(z))))", "(all x.(Lorpus(x) -> Sally(x)) & (-Tumpus(x) -> Sally(x)) & (Dumpsus(x) -> Sally(x)))", "(all x y.(Lorpus(x) -> Sally(x)) & (Tumpus(y) | Dumpus(y)))", "(all x.(Sally(x) -> Lorpus(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Dumpus(x)))", "all x y z.((Sally(x) & Lorpus(y) & Tumpus(z)) -> (Lorpus(x) & -Tumpus(y) & Dumpus(z)))"]}
{"id": "prontoqa_train_486", "nl": "Every rompus is a sterpus.", "fol": "all x. (rompus(x) -> sterpus(x))", "prediction": ["all x.(Rompus(x) -> Sterpus(x))", "all x.(Rompus(x) -> Sterpus(x))", "(all x.(Rompus(x) -> Sterpus(x))", "all x y.((Rompus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Rompus(x) -> Sterpus(x))", "all x.(rompus(x) -> Sterpus(x))", "all x y.((Rompus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Rompus(x) -> Sterpus(x))", "exists x.(rompus(x) & Sterpus(x))", "all x.(Rompus(x) -> Sterpus(x))", "exists x.(rompus(x) & Sterpus(x))", "all x.(Rompus(x) -> Sterepus(x))", "exists x.(rompus(x) & Sterpus(x))", "all x.(Rompus(x) -> Sterpus(x))", "all x.(Rompus(x) -> Sterpus(x))", "all x.(Rompus(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_487", "nl": "Wren is a yumpus and Wren is a tumpus and Wren is not a sterpus.", "fol": "(yumpus(Wren) & tumpus(Wren) & -sterpus(Wren))", "prediction": ["(all x.(Wren(x) -> Yampus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Sterpus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Wren(z)) -> (Yumpus(x) & Tumpus(z) & -Sterpus(z)))", "(all x y.(Wren(x) -> Yampus(x)) & (Wren(y) -> Tumpus(y)) & (Wren(y) -> -Sterepus(y)))", "(all x.(Wren(x) -> Yumpus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Sterpus(z))))", "all x y z.((Wren(x) & Yumpus(y) & Tumpus(z)) -> (Yumpus(x) & Tumpus(z) & -Sterpus(z)))", "all x y.((Wren(x) & Yumpus(x) & Tumpus(y)) -> (Yumpus(x) & -Sterpus(y)))", "(all x y z.((Wren(x) & Yumpus(y) & Tumpus(z)) -> (Yumpus(x) & Tumpus(z)) & -Sterpus(z)))", "(yumpus(Wren) & Tumpus(Wren) & -Sterpus(Wren))", "all x.(Wren(x) -> (Yumpus(x) & Tumpus(x) & -Sterpus(x)))", "all x y z.((Wren(x) & Yumpus(x) & Wren(y) & Tumpus(y) & -Sterpus(z)) -> (Yumpus(x) & Tumpus(y) & -Sterpus(z)))", "all x y.((Wren(x) & Yumpus(x) & Tumpus(y) & -Sterpus(z)) -> (Yumpus(x) | Tumpus(y) & -Sterpus(z)))", "(all x.(Wren(x) -> Yampus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Sterepus(x)))", "all x y z.((Wren(x) & Yampus(x) & Tumpus(y) & -Sterpus(z)) -> (Yumpus(x) & Tumpus(y) & -Sterpus(z)))", "(all x y.(Yumpus(x) -> Wren(y)) & (Tumpus(y) -> Wren(y)) & (Sterpus(y) -> -Wren(y)))", "(all x.(Wren(x) -> Yumpus(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> -Sterpus(z)))", "all x.(Wren(x) -> (Yumpus(x) & Tumpus(x) & -Sterepus(x)))"]}
{"id": "prontoqa_train_488", "nl": "Shumpuses are vumpuses.", "fol": "all x. (shumpus(x) -> vumpus(x))", "prediction": ["all x.(Shumpuse(x) -> Vampuse(x))", "all x.(Shampoo(x) -> Vampuse(x))", "all x.(Shumpuse(x) -> Vampuse(x))", "(Vumpuse(shm) & -Vumpuse(shm))", "all x y.((Shupuse(x) & Vampuse(y)) -> Vampuse(x))", "all x.(Shumpsue(x) -> Vampuse(x))", "all x y.((Shumpuse(x) & Vampuse(y)) -> Vampuse(x))", "all x.(Shupuse(x) -> Vampuse(x))", "(Vampuse(shm) & Vampuse(shm))", "(Vampuse(shm) & Vampuse(shm) & -Vampuse(shm))", "(Vumpuse(shm) -> Shumpuse(shm))", "all x.(Shumpus(x) -> Vampuse(x))", "all x.(Shumpsue(x) -> Vampuse(x))", "all x.(Shampoo(x) -> Vampuse(x))", "all x.(Shupuse(x) -> Vampuse(x))", "all x.(Shumpuse(x) -> Vampuse(x))"]}
{"id": "prontoqa_train_489", "nl": "Stella is a numpus and Stella is a yumpus and Stella is not a vumpus.", "fol": "(numpus(Stella) & yumpus(Stella) & -vumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Numpus(x)) & (Stella(x) -> Yumpus(x)) & (Stella(x) -> -Vumpus(x)))", "all x y z.((Stella(x) & Numpus(x) & Yampus(y) & -Vumpus(z)) -> (Numpus(x) & Yampus(y) & -Vumpus(z)))", "(all x.(Stella(x) -> Numpus(x)) & all y.(Stella(y) -> Yumpus(y))) & all z.(Stella(z) -> -Vumpus(z))))", "(all x y.((Stella(x) & Numpus(x)) -> Nompus(x)) & ((Stella(y) & Yumpus(y)) -> -Vumpus(y)))", "all x y.((Stella(x) & Numpus(x) & Yumpus(y)) -> (-Vumpus(x)))", "all x y z.((Stella(x) & Numpus(x) & Yumpus(y) & Stella(z)) -> (Numpus(x) & Yumpus(y) & -Vumpus(z)))", "(all x y z.((Stella(x) & Numpus(x)) -> (Yumpus(y) & Numpus(z))) & ((Stella(x) & Yumpus(z)) -> -Vumpus(x)))", "exists x.(Stella(x) & Numpus(x) & Yumpus(x) & -Vumpus(x))", "(all x.(Stella(x) -> Numpus(x)) & (Stella(x) -> Yumpus(x)) & (Stella(x) -> -Vumpus(x)))", "all x.(Stella(x) -> (Numpus(x) & Yumpus(x) & -Vumpus(x)))", "(all x.(Stella(x) -> Numpus(x)) & all y.(Stella(y) -> Yumpus(y)) & all z.(Stella(z) -> -Vumpus(z))))", "all x y.((Stella(x) & Numpus(x) & Yampus(y)) -> (Nompus(x) & Yumpus(y) & -Vumpus(y)))", "all x y z.((Stella(x) & Numpus(x) & Yampus(y) & Stella(z)) -> (Numpus(x) & Yampus(y) & -Vumpus(z)))", "(all x y.(Numpus(x) -> Stella(x)) & (Yumpus(y) -> Stella(y)))", "(all x.(Stella(x) -> Numpus(x)) & (Stella(x) -> Yumpus(x)) & (Stella(x) -> -Vumpus(x)))", "all x y z.((Stella(x) & Numpus(x) & Yumpus(y) & Stella(z)) -> (Numpus(x) | Yumpus(y) & -Vumpus(z)))"]}
{"id": "prontoqa_train_490", "nl": "Lorpuses are grimpuses.", "fol": "all x. (lorpus(x) -> grimpus(x))", "prediction": ["all x.(Lorpus(x) -> Grimpuse(x))", "all x.(Lorpus(x) -> Grimpuse(x))", "all x y.((Lorpus(x) & Grimpus(y)) -> (Surface(x) & Grapple(x)))", "all x y.((Lorpuse(x) & Grimpuse(y)) -> (Smoothpuse(x) & Grapple(y)))", "all x.(Lorpus(x) -> Grimpuse(x))", "(Gruppuse(lorpus) & Grimpuse(lorpus))", "(Grimpuse(lorpus) & Grappa(lorpus))", "(all x.(Lorpus(x) -> Grimpuse(x)))", "all x.(Lorpus(x) -> Grimpus(x))", "all x.(Lorpuse(x) -> Grimpuse(x))", "all x y.((Lorpus(x) & Grimpus(y)) -> Scarp(x))", "all x.(Lorpus(x) -> Grimpuse(x))", "all x.(Lorpuse(x) -> Grimpuse(x))", "all x.(Lorpus(x) -> Grappa(x))", "all x.(Lorpus(x) -> Grimpus(x))", "all x.(Lorpus(x) -> Grapple(x))"]}
{"id": "prontoqa_train_491", "nl": "Sam is a wumpus and Sam is a lempus and Sam is not a grimpus.", "fol": "(wumpus(Sam) & lempus(Sam) & -grimpus(Sam))", "prediction": ["(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Lempus(x)) & (Sam(x) -> -Grimpus(x)))", "all x y z.((Sam(x) & Wumpus(x) & Lempus(y) & Gruppus(z)) -> (Wumpus(x) & Lempus(y) & -Grimpus(z)))", "all x y.((Sam(x) & Wumpus(x) & Lempus(y)) -> (Wumpus(x) & Lempus(y) & -Grimpus(x)))", "all x y z.((Sam(x) & Wumpus(x) & Lempus(y) & Grimpus(z)) -> (Wumpus(x) & Lempus(y) & -Grimpus(z)))", "(all x.(Sam(x) -> Wumpus(x)) & all y.(Sam(y) -> Lempus(y)) & all z.(Sam(z) -> -Grimpus(z))))", "(all x y z.((Sam(x) & Wumpus(x)) -> (Wumpus(x) & Lempus(y))) & ((Sam(z) & -Grimpus(z))) -> (Lempus(z) & -Wumpus(z))))", "(all x.(Wumpus(x) -> Sam(x)) & all y.(Lempus(y) -> Sam(y))) & all z.(Grimpus(z) -> Sam(z)))", "(all x y.(Wumpus(x) -> Sam(x)) & (Lempus(y) -> Sam(y)) & (Grimpus(y) -> Sam(y)))", "all x.(Sam(x) -> (Wumpus(x) & Lempus(x) & -Grimpus(x)))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Lempus(x)) & (Sam(x) -> -Grimpus(x)))", "all x y z.((Sam(x) & Wumpus(y) & Lempus(z)) -> (Wumpus(x) & Lempus(z) & -Grimpus(x)))", "exists x.(Sam(x) & Wumpus(x) & Lempus(x) & -Grimpus(x))", "all x y.((Sam(x) & Wumpus(x)) -> (Lempus(x) & -Grimpus(y)))", "(all x.(Wumpus(x) -> Sam(x)) & (Lempus(x) -> Sam(x)) & (Grimpus(x) -> Sam(x)))", "all x.(Sam(x) -> (Wumpus(x) & Lempus(x) & -Grimpus(x)))", "(all x.(Sam(x) -> Wumpus(x)) & (Lempus(x) & -Grimpus(x)))"]}
{"id": "prontoqa_train_492", "nl": "Each impus is a jompus.", "fol": "all x. (impus(x) -> jompus(x))", "prediction": ["all x.(Impossible(x) -> Jompus(x))", "all x.(Impact(x) -> Jompus(x))", "all x.(Impossible(x) -> Jompus(x))", "(Jompus(x) & IsJimpus(x))", "all x y.((Impossible(x) & Jompus(y)) -> Is(x,y))", "all x y.((Impossible(x) & IsJompus(y)) -> IsJompus(x))", "all x.(Impact(x) -> Jompus(x))", "all x.(Immersion(x) -> Jompus(x))", "all x.(Impossible(x) -> Jompus(x))", "all x.(Improve(x) -> Jompus(x))", "exists x.(Jompus(x) & IsJimpus(x))", "all x.(Impossible(x) -> Jompus(x))", "exists x.(Jimpus(x) & IsJimpus(x))", "exists x.(Impact(x) & Jompus(x))", "all x.(Impossible(x) -> Jompus(x))", "exists x.(Jimpus(x) & IsJimpus(x))"]}
{"id": "prontoqa_train_493", "nl": "Polly is a grimpus, Polly is a wumpus, and Polly is not a jompus.", "fol": "(grimpus(Polly) & wumpus(Polly) & -jompus(Polly))", "prediction": ["(all x.(Polly(x) -> Grimpus(x)) & (Polly(x) -> Wumpus(x)) & (Polly(x) -> -Jompus(x)))", "all x y z.((Polly(x) & Grimpus(x) & Wumpus(y) & -Jompus(z)) -> (Grimpus(x) & Wumpus(y) & -Jimpus(z)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Polly(y) -> Wumpus(y)) & all z.(Polly(z) -> -Jompus(z))))", "(all x y z.((Polly(x) & Grimpus(y)) -> (Grimpus(z) | Wumpus(z))) & ((Polly(x) & -Jompus(x)) -> (Wumpus(x) & -Grimpus(x))))", "all x y z.((Polly(x) & Grimpus(x) & Polly(y) & Wumpus(y)) -> (Surprise(x) & -Jumpus(z)))", "all x.(Polly(x) -> (Grimpus(x) | Wumpus(x) | -Jompus(x)))", "(all x.(Polly(x) -> Grimpus(x)) & (Polly(x) -> Wumpus(x)) & -Jompus(x)))", "all x y z.((Polly(x) & Grimpus(x) & Wumpus(y) & -Jompus(z)) -> (Grimpus(x) | Wumpus(y) & -Jumpus(z)))", "exists x.(Polly(x) & Grimpus(x) & Wumpus(x) & -Jompus(x))", "all x y z.((Polly(x) & Grimpus(y) & Wumpus(z)) -> (Grimpus(x) | Wumpus(z) | -Jompus(z)))", "(all x y z.((Polly(x) & Grumpus(y)) -> (Grimpus(x) | Wumpus(y))) & ((Poly(z) & -Jimpus(z)) -> (NoJimpus(z))))", "(all x y z.((Polly(x) & Grimpus(x)) -> Polly(y)) & ((Polly(z) & Wumpus(z)) -> Polly(z)) & ((Polly(z) & -Jompus(z)) -> Polly(z))))", "(all x.(Polly(x) -> Grumpus(x)) & (Polly(x) -> Wumpus(x)) & -Jompus(x)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Polly(y) -> Wumpus(y)) & all z.(Polly(z) -> -Jompus(z))))", "all x y z.((Polly(x) & Grumpus(y) & Wumpus(z)) -> (Grimpus(x) | Wumpus(z) | -Jumpus(z)))", "all x y z.((Polly(x) & Grimpus(x) & Wumpus(y) & -Jompus(z)) -> (Smooth(x) | Wumpus(y) | -Smooth(z)))"]}
{"id": "prontoqa_train_494", "nl": "Sally is not a lempus, Sally is a sterpus, and Sally is a vumpus.", "fol": "(-lempus(Sally) & sterpus(Sally) & vumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Lempus(x)) & (Sterpus(x) & Vumpus(x)))", "all x y z.((Sally(x) & Sterpus(y) & Vumpus(z)) -> (-Lempus(x) & Sterpus(y) & Vumpus(z)))", "all x.(Sally(x) -> (-Lempus(x) & Sterpus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Lempus(x)) & all y.(Sterpus(y) -> Sterpus(y)) & all z.(Vumpus(z) -> Sally(z))))", "(all x y z.((Sally(x) & Lempus(y)) -> -Lempus(x)) & ((Sally(z) & Sterpus(z)) -> Vumpus(z)))", "all x y z.((Sally(x) & Lempus(y) & Sterpus(z)) -> (-Lempus(x) & Sterpus(x) & Vumpus(x)))", "(-Lempus(Sally) & Sterpus(Sally) & Vumpus(Sally))", "(all x.(Sally(x) -> -Lempus(x)) & (Sterpus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Lempus(x)) & all y.(Sterpus(y) -> Sterpus(y)) & all z.(Vumpus(z) -> Sally(z)))", "all x.(Sally(x) -> (-Lempus(x) & Sterpus(x) & Vumpus(x)))", "(all x y z.((Sally(x) & Lempus(y)) -> -Lempus(x)) & ((Sally(z) & Sterpus(z))) -> Vumpus(z)))", "(-Lempus(Sally) | Sterpus(Sally) | Vumpus(Sally)))", "all x y z.((Sally(x) & Sterpus(y) & Vumpus(z)) -> (-Lempus(x) & Sterpus(y) & Vumpus(z)))", "exists x.(Sally(x) & -Lempus(x) & Sterpus(x) & Vumpus(x))", "all x y z.((Sally(x) & Lempus(y) & Sterpus(z)) -> (-Lempus(x) & Sterpus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Lempus(x)) & (Sterpus(x) & Vumpus(x)))"]}
{"id": "prontoqa_train_495", "nl": "Sally is not a shumpus.", "fol": "-shumpus(Sally)", "prediction": ["Sally is not a shumpus.", "all x.(Sally(x) -> -Shumpus(x))", "(-Shumpus(Sally))", "Sally -Shumpus(Sally)", "Sally n'est pas shumpus.", "Sally is not a shumpus.", "all x.(Sally(x) -> -Shumpus(x))", "(-Shumpus(Sally))", "Sally -Shumpus(Sally)", "all x.(Sally(x) -> -Shumpus(x))", "Sally & -Shumpus(Sally)", "-Shumpus(Sally)", "Sally is not a shumpus.", "(-Shumpus(Sally))", "Sally is not a shumpus.", "-Shumpus(s)"]}
{"id": "prontoqa_train_496", "nl": "Wren is a gorpus, Wren is a sterpus, and Wren is not a brimpus.", "fol": "(gorpus(Wren) & sterpus(Wren) & -brimpus(Wren))", "prediction": ["(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> Sterpus(x)) & (Wren(x) -> -Brimpus(x)))", "all x y z.((Wren(x) & Gorpus(x) & Sterpus(y) & -Brimpus(z)) -> (Gorpus(x) & Sterpus(y) & -Brimpus(z)))", "(all x.(Wren(x) -> Gorpus(x)) & all y.(Wren(y) -> Sterpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> Sterpus(x)) & (Wren(x) -> -Brimpus(x)))", "(all x y z.(Wren(x) -> Gorpus(x)) & ((Wren(y) & Sterpus(y)) -> -Brimpus(z)))", "all x y z.((Wren(x) & Gorpus(x) & Sterpus(y) & -Brimpus(z)) -> (Gorpus(x) & Sterpus(y) & -Brimpus(z)))", "(all x y z.((Wren(x) & Gorpus(x)) -> (Wren(y) & Sterpus(y))) & ((Wren(z) & Brimpus(z)) -> -Brimpus(z)))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | -Brimpus(x)))", "(all x y z.((Wren(x) & Gorpus(x)) -> (Gorpus(x) & Sterpus(y))) & ((Wren(z) & -Brimpus(z)) -> (-Brimpus(z))))", "all x y z.((Wren(x) & Gorpus(y) & Sterpus(z) & -Brimpus(x)) -> (Gorpus(x) & Sterpus(x) & -Brimpus(x)))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> Sterpus(x)) & (Wren(x) -> -Brimpus(x)))", "(all x.(Wren(x) -> Gorpus(x)) & all y.(Wren(y) -> Sterpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "all x y z.((Wren(x) & Gorpus(y) & Sterepus(z)) -> (Gorpus(x) & Sterpus(x) & -Brimpus(x)))", "all x y z.((Wren(x) & Gorpus(x) & Sterpus(y) & -Brimpus(z)) -> (Gorpus(x) & Sterpus(y) & -Brimpus(z)))", "all x y z.((Wren(x) & Gorpus(x) & Sterpus(y) & Brimpus(z)) -> (Gorpus(x) & Sterpus(y) & -Brimpus(z)))", "(all x.(Wren(x) -> Gorpus(x)) & all y.(Wren(y) -> Sterpus(y)) & all z.(Wren(z) -> -Brimpus(z))))"]}
{"id": "prontoqa_train_497", "nl": "Each numpus is a wumpus.", "fol": "all x. (numpus(x) -> wumpus(x))", "prediction": ["all x.(Nompus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wumpus(x))", "(all x.(Numpus(x) -> Wumpus(x)))", "all x y.((Numpus(x) & Wumpus(y)) -> Has(x,y))", "all x.(Numpus(x) -> Wumpus(x))", "all x y.((Numpus(x) & Wumpus(y)) -> Is(x,y))", "all x.(Nompus(x) -> Wumpus(x))", "exists x.(numpus(x) & Wumpus(x))", "all x.(Numpus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wampus(x))", "exists x.(Numerus(x) & Wumpus(x))", "exists x.(Numpus(x) & Humpus(x))", "all x.(Nompus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wampus(x))", "all x.(Nompus(x) -> Wumpus(x))", "exists x.(Numpus(x) & Wumpus(x))"]}
{"id": "prontoqa_train_498", "nl": "Fae is a sterpus, Fae is a lorpus, and Fae is not a wumpus.", "fol": "(sterpus(Fae) & lorpus(Fae) & -wumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Lorpus(x)) & -Wumpus(x)))", "all x y z.((Fae(x) & Sterpus(y) & Lorpus(z)) -> (Sterpus(x) & -Wumpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & all y.(Fae(y) -> Lorpus(y)) & all z.(Fae(z) -> -Wumpus(z))))", "(all x y z.((Fae(x) & Sterpus(y)) -> (Sterpus(z) | Lorpus(z))) & ((Fae(x) & Wumpus(x)) -> -Wumpus(x)))", "(all x.(Fae(x) -> Sterepus(x)) & (Fae(x) -> Lorpus(x)) & (Fae(x) -> -Wumpus(x)))", "all x.(Fae(x) -> (Sterpus(x) & Lorpus(x) & -Wumpus(x)))", "(all x y z.((Fae(x) & Sterpus(y)) -> Sterpus(x)) & ((Fae(z) & Lorpus(z)) -> -Wumpus(z)))", "all x y z.((Fae(x) & Sterpus(y) & Lorpus(z)) -> (Sterpus(x) & -Wumpus(x)))", "all x y z.((Fae(x) & Sterpus(x) & Lorpus(y) & -Wumpus(z)) -> (Sterpus(x) & Lorpus(y) & -Wumpus(z)))", "all x y z.(Fae(x) & Sterpus(x) & Lorpus(y) & -Wumpus(z))", "(all x.(Fae(x) -> Sterpus(x)) & all y.(Fae(y) -> Lorpus(y)) & all z.(Fae(z) -> -Wumpus(z))))", "all x.(Fae(x) -> (Sterpus(x) & Lorpus(x) & -Wumpus(x)))", "(all x y z.(Fae(x) -> Sterepus(x)) & (Fae(y) -> Lorpus(y)) & (Fae(z) -> -Wumpus(z)))", "all x y z.(Fae(x) -> (Sterpus(x) | Lorpus(y) | -Wumpus(z)))", "(all x.(Fae(x) -> Sterepus(x)) & (Fae(x) -> Lorpus(x)) & -Wumpus(x)))", "(All x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Lorpus(x)) & -Wumpus(x)))"]}
{"id": "prontoqa_train_499", "nl": "Sam is not a vumpus, Sam is a yumpus, and Sam is a gorpus.", "fol": "(-vumpus(Sam) & yumpus(Sam) & gorpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Vumpus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> Gorpus(x)))", "all x y z.((Sam(x) & Vumpus(y) & Yumpus(z)) -> (-Vumpus(x) & -Yumpus(y) & -Gorpus(z)))", "(all x.(Sam(x) -> -Vumpus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> Gorpus(x)))", "all x y z.((Sam(x) & Vumpus(y) & Yumpus(z)) -> (-Vumpus(x) & -Yumpus(y) & -Gorpus(z)))", "(all x y z.((Sam(x) & Vumpus(y)) -> -Vumpus(x)) & ((Sam(z) & Yumpus(z))) -> Gorpus(z)))", "(all x.(Sam(x) -> -Vimpus(x)) & all y.(Sam(y) -> Yumpus(y)) & all z.(Sam(z) -> Gorpus(z))))", "all x.(Sam(x) -> (-Vumpus(x) & -Yumpus(x) & -Gorpus(x)))", "all x y z.((Sam(x) & -Vumpus(x) & Yampus(y) & Gorpus(z)) -> (-Vumpus(x) & -Yumpus(y) & -Gorpus(z)))", "(-Vumpus(sam) & -Yumpus(sam) & Gorpus(sam))", "exists x.(Sam(x) & -Vumpus(x) & Yampus(x) & Gorpus(x))", "all x y z.((Sam(x) & Vumpus(y) & Yumpus(z)) -> (-Vumpus(x) & -Yumpus(y) & -Gorpus(z)))", "(all x.(Sam(x) -> -Vumpus(x)) & all y.(Sam(y) -> Yumpus(y)) & all z.(Sam(z) -> Gorpus(z)))", "(all x.(Sam(x) -> -Vumpus(x)) & (Yumpus(x) & Gorpus(x)))", "(all x y z.((Sam(x) & Vumpus(y)) -> -Vumpus(x)) & ((Sam(z) & Yumpus(z))) -> Gorpus(z)))", "all x y z.((Sam(x) & (Vumpus(y) | Yumpus(y) | Gorpus(z))) -> -Vumpus(x) & Yampus(z))", "all x y z.((Sam(x) & Vampire(y) & Yumpus(z)) -> (-Vampire(x) & Yampus(y) & Gorpus(z)))"]}
{"id": "prontoqa_train_500", "nl": "Sam is not a zumpus.", "fol": "-zumpus(Sam)", "prediction": ["all x.(Sam(x) -> -Zumpus(x))", "(-Zumpus(Sam))", "Sam is not a zumpus.", "all x.(Sam(x) -> -Zumpus(x))", "Sam is not zumpus.", "(-Zumpus(Sam))", "(-Zombipus(Sam))", "all x.(Sam(x) -> -Zombipus(x))", "(-Zumpus(Sam) & -Zombias(Sam))", "-Zombipus(Sam)", "Sam is not zumpus.", "all x.(Sam(x) -> -Zumpus(x))", "-zusmo.", "all x.(Sam(x) -> -Zombipus(x))", "(-Zumpus(Sam)).", "-Tompus(Sam)"]}
{"id": "prontoqa_train_501", "nl": "Every impus is a lempus.", "fol": "all x. (impus(x) -> lempus(x))", "prediction": ["all x.(IsLimpus(x) -> IsLimpus(x))", "all x.(Impossible(x) -> Lempus(x))", "all x.(Impact(x) -> Lempus(x))", "all x y.((Issue(x) & Lempus(y)) -> IsLempus(x))", "all x.(Improve(x) -> Lempus(x))", "all x.(IsLimpus(x) -> Imperium(x))", "all x y.((Issue(x) & Lempus(y)) -> Lempus(x))", "all x.(Impossible(x) -> Lempus(x))", "all x.(Implementation(x) -> Lempus(x))", "(all x.(Island(x) -> Lempus(x))", "exists x.(Defimer(x) & Lempus(x))", "all x.(IsLimpus(x) -> IsLimpus(x))", "all x.(Ilises(x) -> Lempus(x))", "exists x.(Defimer(x) & Lempus(x))", "all x.(Impossible(x) -> Lempus(x))", "exists x.(Deficit(x) & Lempus(x))"]}
{"id": "prontoqa_train_502", "nl": "Wren is not a lempus, Wren is a zumpus, and Wren is a tumpus.", "fol": "(-lempus(Wren) & zumpus(Wren) & tumpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Lempus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Tumpus(x)))", "all x y z.((Wren(x) & Zumpus(y) & Tumpus(z)) -> (-Lempus(x) & Tompus(y) & Tumpus(z)))", "(all x.(Wren(x) -> -Lempus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> Tumpus(z))))", "(all x y z.((Wren(x) & Lempus(y)) -> -Lempus(x)) & ((Wren(z) & Zumpus(z)) -> Tumpus(z)))", "all x.(Wren(x) -> (-Lempus(x) & Zumpus(x) & Tumpus(x)))", "all x y z.((Wren(x) & Zumpus(y) & Tumpus(z)) -> (-Lempus(x) & -Tompus(y) & -Tompus(z)))", "(all x.(Wren(x) -> -Lempus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Tumpus(x)))", "(all x y z.((Wren(x) & Lempus(y)) -> -Lempus(x)) & ((Wren(z) & Zumpus(z)) -> Tumpus(z)))", "all x y z.((Wren(x) & Lempus(y) & Zumpus(z)) -> (-Lempus(x) & Tompus(x) & Tompus(y)))", "(all x.(Wren(x) -> -Lempus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> Tumpus(z))))", "(all x y z.((Wren(x) & Lempus(y)) -> -Lempus(x)) & ((Wren(z) & Zumpus(z)) -> Tumpus(x)))", "all x y z.((Wren(x) & Zumpus(y) & Tumpus(z)) -> (-Lempus(x) | Zumpus(y) | Tumpus(z)))", "all x y z.((Wren(x) & Lempus(y) & Zumpus(z)) -> (-Lempus(x) & Toumpus(x) & Toumpus(x)))", "(all x.(Wren(x) -> -Lempus(x)) | (Wren(x) -> Zumpus(x))) | (Wren(x) -> Tumpus(x)))", "(all x.(Wren(x) -> -Lempus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Tumpus(x)))", "all x y z.((Wren(x) & Zumpus(y) & Tumpus(z)) -> (-Lempus(x) | Zumpus(y) | Tumpus(z)))"]}
{"id": "prontoqa_train_503", "nl": "Wren is not an impus.", "fol": "-impus(Wren)", "prediction": ["all x.(Wren(x) -> -Impossible(x))", "(-Impossible(Wren))", "Wren is not impus.", "Wren -Impossible(w)", "-Impossible(Wren)", "-(Wren(w) & IsNot(w))", "all x.(Wren(x) -> -Impossible(x))", "Wren is not impused.", "(-Issue(Wren))", "Wren is not a impus.", "(-IssuedOn(Wren))", "Wren -Impossible(w)", "(-Illegal(Wren))", "All x.(Wren(x) -> -Impossible(x))", "-Impossible(Wren)", "-Impossible(Wren)"]}
{"id": "prontoqa_train_504", "nl": "Every grimpus is a yumpus.", "fol": "all x. (grimpus(x) -> yumpus(x))", "prediction": ["all x.(Grimpus(x) -> Yumpus(x))", "all x.(Grimpus(x) -> Yumpus(x))", "all x y.((Grimpus(x) & Grimpus(y)) -> Yumpus(x))", "all x.(Grimpus(x) -> Yumpus(x))", "all x.(Sgrimpus(x) -> Yumpus(x))", "all x.(Gruppus(x) -> Yumpus(x))", "all x y.((Grimpus(x) & Grubbus(y)) -> Yumpus(x))", "all x.(Grimpus(x) -> Yumpus(x))", "all x.(Grimpus(x) -> Yumps(x))", "(all x.(Grimpus(x) -> Yumpus(x))", "all x.(Sgrimpus(x) -> Yumpus(x))", "all x.(Gruppus(x) -> Yumpus(x))", "all x.(Grampus(x) -> Yumpus(x))", "exists x.(Grimpus(x) & Yampus(x))", "exists x.(Grimpus(x) & Yampus(x))", "exists x.(Grimpus(x) & Yampus(x))"]}
{"id": "prontoqa_train_505", "nl": "Wren is a gorpus, Wren is not a yumpus, and Wren is a zumpus.", "fol": "(gorpus(Wren) & -yumpus(Wren) & zumpus(Wren))", "prediction": ["all x y z.((Wren(x) & Gorpus(x) & Wren(y) & Yumpus(z)) -> (-Yumpus(y) & Zumpus(z)))", "(all x.(Wren(x) -> Gorpus(x)) & (-Yumpus(x) & -Zumpus(x)))", "(all x y z.(Wren(x) -> Gorpus(x)) & ((Wren(y) & -Yumpus(y)) -> Zumpus(z)))", "(all x.(Wren(x) -> Gorpus(x)) & (-Yumpus(x) & -Zumpus(x)))", "(all x y z.((Wren(x) & Gorpus(x)) -> Gorpus(x)) & ((Wren(y) & -Yumpus(y)) -> Zumpus(z)))", "all x y z.((Wren(x) & Gorpus(x) & -Yumpus(y) & Zumpus(z)) -> (Gorpus(x) & -Yumpus(y) & Zumpus(z)))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> -Yumpus(x)) & (Wren(x) -> Zumpus(x)))", "all x.(Wren(x) -> (Gorpus(x) | -Yumpus(x) | Zumpus(x)))", "(all x y z.((Wren(x) & Gorpus(x)) -> Gorpus(x)) & ((Wren(y) & -Yumpus(y)) -> Zumpus(z)))", "all x y z.((Wren(x) & Gorpus(x) & Wren(y) & Yumpus(z)) -> (-Yumpus(y) & Zumpus(z)))", "(all x.(Wren(x) -> Gorpus(x)) & (-Yumpus(x)) | (-Yumpus(x) & Zumpus(x))))", "(all x y z.((Wren(x) & Gorpus(x)) -> (Gorpus(x) | -Yumpus(x)) | (Tompus(y) -> Zumpus(z))))", "(all x.(Wren(x) -> Gorpus(x)) & (-Yumpus(x) & (Zumpus(x) | Wren(x))))", "all x y z.((Wren(x) & Gorpus(x) & -Yumpus(y) & Zumpus(z)) -> (Gorpus(x) & -Yumpus(y) & Zumpus(z)))", "all x y z.((Wren(x) & Gorpus(x) & Wren(y) & Yumpus(z)) -> (-Yumpus(y) & Zumpus(z)))", "all x y z.((Wren(x) & Gorpus(y) & Yampus(z)) -> (-Yumpus(x) & Zumpus(x)))"]}
{"id": "prontoqa_train_506", "nl": "Sam is a numpus and Sam is a zumpus and Sam is not an impus.", "fol": "(numpus(Sam) & zumpus(Sam) & -impus(Sam))", "prediction": ["(all x.(Sam(x) -> Numpus(x)) & (Sam(x) -> Zumpus(x)) & (Sam(x) -> -Impossible(x)))", "all x y z.((Sam(x) & Numpus(x) & Zumpus(y) & -Ilimination(z)) -> (Numpus(x) & Zumpus(y) & -Ilimination(z)))", "all x y.((Sam(x) & Numpus(x) & Zumpus(y)) -> -Impossible(x))", "(all x.(Sam(x) -> Numpus(x)) & all y.(Sam(y) -> Zumpus(y)) & all z.(Sam(z) -> -Impossible(z))))", "all x.(Sam(x) -> (Numpus(x) & Zumpus(x) & -Ilimination(x)))", "(all x y.(Sam(x) -> Numpus(x)) & (Sam(y) -> Zumpus(y)) & (Sam(y) -> -Impossible(y)))", "all x y z.((Sam(x) & Numpus(x) & Zumpus(y) & -Impossible(z)) -> (Numpus(x) & Zumpus(y) & -Impossible(z)))", "(numpus(Sam) & zumpus(Sam) & -Ilimination(Sam))", "(all x.(Sam(x) -> Numpus(x)) & (Sam(x) -> Zumpus(x)) & (Sam(x) -> -Impossible(x)))", "exists x.(Sam(x) & Numpus(x) & Zumpus(x) & -Ilimination(x))", "(all x y.(Numpus(x) -> Sam(x)) & (Zumpus(y) -> Sam(x)) & (Impossible(y) -> Sam(y)))", "all x.(Sam(x) -> (Numpus(x) & Zumpus(x) & -Impossible(x)))", "(all x.(Sam(x) -> Numpus(x)) & all y.(Sam(y) -> Zumpus(y)) & all z.(Sam(z) -> -Impossible(z))))", "all x y.((Sam(x) & Numpus(x) & Zumpus(y)) -> -Impossible(x))", "(all x.(Sam(x) -> Numpus(x)) & (Sam(x) -> Zumpus(x)) & (Sam(x) -> -Illegal(x)))", "all x.(Sam(x) -> (Numpus(x) & Zumpus(x) & -Ilimination(x)))"]}
{"id": "prontoqa_train_507", "nl": "Sterpuses are brimpuses.", "fol": "all x. (sterpus(x) -> brimpus(x))", "prediction": ["all x.(Sterpus(x) -> Brimpuse(x))", "all x.(Sterpus(x) -> Brimpus(x))", "(all x.(Sterpuse(x) -> Brimpuse(x)))", "all x y.((Sterpuse(x) & Brimpus(y)) -> Brimpus(x))", "(Brimpuse(s) & Embryonal(s))", "all x.(Sterpus(x) -> Brimpuse(x))", "all x y.((Sterpus(x) & Brimpus(y)) -> (Brombuse(x) & Brimpus(y)))", "(Brimpus(sterpuses) & Brimpus(st))", "all x.(Sterpus(x) -> Brimpuse(x))", "all x.(Strerpuse(x) -> Brimpus(x))", "all x.(Sterpus(x) -> Brimpus(x))", "all x.(Sterpus(x) -> Brimpuse(x))", "all x.(Sterpus(x) -> Brimpuse(x))", "all x.(Strerpuse(x) -> Brimpus(x))", "all x.(Stumpus(x) -> Brimpus(x))", "All x.(Sterpus(x) -> Brimpuse(x))"]}
{"id": "prontoqa_train_508", "nl": "Alex is an impus, Alex is a lempus, and Alex is not a brimpus.", "fol": "(impus(Alex) & lempus(Alex) & -brimpus(Alex))", "prediction": ["(all x.(Alex(x) -> Issue(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> -Brimpus(z))))", "all x y z.((Alex(x) & IsImpossible(x) & Alex(y) & Lempus(y) & -Brimpus(z)) -> (Impossible(x) & Lempus(y) & -Brimpus(z)))", "(all x.(Alex(x) -> Impossible(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> -Brimpus(z))))", "(all x.(Alex(x) -> Is(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> -Brimpus(z))))", "all x.(Alex(x) -> (Impossible(x) & Lempus(x) & -Brimpus(x)))", "all x y z.((Alex(x) & Is(x,y) & Lempus(y) & -Brimpus(z)) -> (Is(x,y) & Is(x,z)))", "all x y z.((Alex(x) & Impossible(x) & Lempus(y) & -Brimpus(z)) -> (Impossible(x) & Lempus(y) & -Brimpus(z)))", "(all x.(Alex(x) -> Imperium(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> -Brimpus(z))))", "all x.(Alex(x) -> (Impossible(x) | Lempus(x) | -Brimpus(x)))", "(all x y z.(Alex(x) -> Is(x,Impos)) & ((Alex(y) & Lempus(y)) | (Alex(z) & -Brimpus(z)))))", "all x y z.((Alex(x) & Impossible(x) & Lempus(y) & Brimpus(z)) -> (-Impossible(x) | Lempus(y) & -Impossible(y)))", "(all x y z.((Alex(x) & Impossible(x)) -> Lempus(x)) & ((Alex(y) & Brimpus(y)) -> -Brimpus(y)))", "(all x.(Alex(x) -> Is(x)) & (Alex(x) -> Lempus(x)) & (Alex(x) -> -Brimpus(x)))", "all x.(Alex(x) -> (Impossible(x) | Lempus(x) | -Brimpus(x)))", "all x y z.((Alex(x) & IsImpossible(x) & Alex(y) & Lempus(y) & -Brimpus(z)) -> (Impossible(x,y) & Lempus(y) & -Brimpus(z)))", "(all x.(Alex(x) -> Impossible(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> -Brimpus(z))))"]}
{"id": "prontoqa_train_509", "nl": "Every zumpus is a dumpus.", "fol": "all x. (zumpus(x) -> dumpus(x))", "prediction": ["all x.(Zumpus(x) -> Dumpus(x))", "all x.(Tompus(x) -> Dumpus(x))", "all x y.((Zumpus(x) & Dumpus(y)) -> Has(x,y))", "(all x.(Zumpus(x) -> Dumpus(x))", "all x.(Zumpus(x) -> Dumpus(x))", "all x y.((Tompus(x) & Dumpus(y)) -> Has(x,y))", "all x.(Tompus(x) -> Dumpus(x))", "all x.(Zumpus(x) -> Dumpus(x))", "all x.(Tompus(x) -> Dumpus(x))", "all x.(Zumpus(x) -> Dumpus(x))", "exists x.(Stompus(x) & Dumpus(x))", "all x.(Zumpus(x) -> Dumpus(x))", "all x.(Tompus(x) -> Dumpus(x))", "all x.(Tompus(x) -> Dumpus(x))", "exists x.(Zumpus(x) & Dumpus(x))", "exists x.(Zupus(x) & Dumpus(x))"]}
{"id": "prontoqa_train_510", "nl": "Fae is a brimpus and Fae is a shumpus and Fae is not a dumpus.", "fol": "(brimpus(Fae) & shumpus(Fae) & -dumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Humpus(x)) & -Dumpus(x)))", "all x y z.((Fae(x) & Brimpus(x) & Shumpus(y) & Dumpus(z)) -> (Brimpus(x) & Shumpus(y) & -Dumpus(z)))", "(all x.(Fae(x) -> Brimpus(x)) & all y.(Fae(y) -> Humpus(y)) & all z.(Fae(z) -> -Dumpus(z))))", "(all x y z.((Fae(x) & Brimpus(x)) -> (Brimpus(x) & Shumpus(y)) & ((Fae(z) & Dumpus(z)) -> -Dumpus(z))))", "all x y z.((Fae(x) & Brimpus(x) & Shumpus(y) & -Dumpus(z)) -> (Brimpus(x) & Shumpus(y) & -Dumpus(z)))", "(all x y.(Brimpus(x) -> Brimpus(x)) & (Shumpus(y) -> Humpus(y)) & (Dumpus(y) -> -Dumpus(y)))", "all x y.((Fae(x) & Brimpus(x) & Fae(y)) -> (Shumpus(y) & -Dumpus(y)))", "all x.(Fae(x) -> (Brimpus(x) & Shumpus(x) & -Dumpus(x)))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> -Dumpus(x)))", "(Brimpus(Fae) & Humpus(Fae) & -Dumpus(Fae))", "(all x y.(Brimpus(x) -> Fae(x)) & (Shumpus(y) -> Fae(y)) & (Dumpus(y) -> Fae(y)))", "(all x.(Fae(x) -> Brimpus(x)) & all y.(Fae(y) -> Humpus(y)) & all z.(Fae(z) -> -Dumpus(z))))", "all x.(Fae(x) -> (Brimpus(x) & Humpus(x) & -Dumpus(x)))", "all x y.((Fae(x) & Brimpus(x) & Shumpus(y)) -> (Brimpus(x) & -Dumpus(y)))", "all x y z.((Fae(x) & Brimpus(x) & Shumpus(y) & Dumpus(z)) -> (Brimpus(x) & Shumpus(y) & -Dumpus(z)))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> -Dumpus(x)))"]}
{"id": "prontoqa_train_511", "nl": "Brimpuses are gorpuses.", "fol": "all x. (brimpus(x) -> gorpus(x))", "prediction": ["all x.(Brompus(x) -> Gorpus(x))", "all x.(Brimpus(x) -> Gorpuse(x))", "all x y.((Brompus(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Brimpus(x) -> Gorpus(x))", "all x.(Brompus(x) -> Gorpus(x))", "(Gorpuse(brimpus) & Gorpus(brimpus))", "all x y.((Brimpus(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Brimpus(x) -> Gorpuse(x))", "All x y.((Brompus(x) & Gorpus(y)) -> Is(x,y))", "all x.(Brimpus(x) -> Gorpuse(x))", "all x.(Brimpuse(x) -> Gorpus(x))", "all x.(Brompus(x) -> Gorpus(x))", "all x.(Brimpus(x) -> Gorpus(x))", "all x.( Brimpuse(x) -> Gorpus(x))", "all x.(Brumpus(x) -> Gorpus(x))", "all x.(Brompus(x) -> Gorpuse(x))"]}
{"id": "prontoqa_train_512", "nl": "Max is an impus and Max is not a gorpus and Max is a zumpus.", "fol": "(impus(Max) & -gorpus(Max) & zumpus(Max))", "prediction": ["(all x.(Max(x) -> IsImpossible(x)) & (Max(x) -> -Gorpus(x)) & (Max(x) -> Zumpus(x)))", "all x y z.((Max(x) & Impossible(x) & Max(y) & -Gorpus(y) & Zumpus(z)) -> (Impossible(y) & -Gorpus(y) & Zumpus(z)))", "(all x.(Max(x) -> Impossible(x)) & (Max(x) -> -Gorpus(x)) & (Max(x) -> Zumpus(x)))", "all x y.((Max(x) & Impossible(x) & Max(y)) -> (-Gorpus(y) & Zumpus(y)))", "all x.(Max(x) -> (Impossible(x) & -Gorpus(x) & Zumpus(x)))", "(all x y.((Max(x) & IsImpossible(x)) -> -Gorpus(x)) & ((Max(y) & Zumpus(y)) -> -Impossible(y)))", "(all x.(Max(x) -> Is(x)) & (-Is(x) & Gorpus(x)) & (-Is(x) & Zumpus(x))))", "(all x y.((Max(x) & Impossible(x)) -> -Gorpus(x)) & ((Max(y) & Zumpus(y)) -> Zumpus(y)))", "(all x y z.((Max(x) & IsImpossible(x)) -> (Max(y) & -Impossible(y))) & ((Max(z) & -Impossible(z)) -> Zumpus(z)))", "all x y z.((Max(x) & IsImpossible(x) & Max(y) & -Impossible(y) & Tossup(z)) -> (Impossible(x) & -Impossible(y) & Tossup(y)))", "all x y z.((Max(x) & Impossible(x) & Max(y) & -Gorpus(y) & Zumpus(z)) -> (Impossible(y) & -Gorpus(y) & Zumpus(z)))", "(all x.(Max(x) -> Impossible(x)) & ((Max(x) & -Gorpus(x)) | (-Max(x) & Zumpus(x)))))", "all x.(Max(x) -> (Impossible(x) & -Gorpus(x) & Zumpus(x)))", "all x y.((Max(x) & Imposer(x)) -> (-Gorpus(x) & Zumpus(y)))", "all x.(Max(x) -> (Imposer(x) & -Gorpus(x) & Zumpus(x)))", "(all x.(Max(x) -> Impeccable(x)) & (-Gorpus(x) & -Zumpus(x)))"]}
{"id": "prontoqa_train_513", "nl": "Grimpuses are brimpuses.", "fol": "all x. (grimpus(x) -> brimpus(x))", "prediction": ["all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Brimpuse(x))", "all x y.((Grimpus(x) & Brimpus(y)) -> Brimpus(x))", "(Brimpuse(Grimpus) & Brimpus(Grimpus))", "all x y.((Grimpus(x) & Brimpuse(y)) -> (Brompus(x) & Brimpuse(y)))", "all x.(Grimpus(x) -> Brimpus(x))", "(all x.(Grimpus(x) -> Brimpuse(x)))", "all x.(Grimpus(x) -> Brimpuse(x))", "(Brimpus(grimpus) & Brimpuse(grimpus))", "all x.(Grimpuse(x) -> Brimpuse(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Gruppus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Brimpuse(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grimpuse(x) -> Brimpuse(x))", "all x.(Grimpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_514", "nl": "Rex is a gorpus and Rex is a lempus and Rex is not a brimpus.", "fol": "(gorpus(Rex) & lempus(Rex) & -brimpus(Rex))", "prediction": ["(all x.(Rex(x) -> Gorpus(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Brimpus(z))))", "all x y z.((Rex(x) & Gorpus(x) & Lempus(y) & Brimpus(z)) -> (Gorpus(x) & Lempus(y) & -Brimpus(z)))", "(all x.(Rex(x) -> Gorpus(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Brimpus(x)))", "(all x y z.((Rex(x) & Gorpus(x) & Lempus(y)) -> (Gorpus(x) & Lempus(y) & -Brimpus(z))))", "(all x.(Rex(x) -> Gorpus(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Brimpus(z))))", "all x y.((Rex(x) & Gorpus(x) & Lempus(y)) -> (Gorpus(x) & Lempus(y) & -Brimpus(x)))", "all x.(Rex(x) -> (Gorpus(x) & Lempus(x) & -Brimpus(x)))", "(all x y.(Rex(x) -> Gorpus(x)) & (Rex(y) -> Lempus(y)) & (Rex(y) -> -Brimpus(y)))", "all x y z.((Rex(x) & Gorpus(x) & Lempus(y) & Brimpus(z)) -> (Gorpus(x) & Lempus(y) & -Brimpus(z)))", "(all x.(Rex,Gorpus) -> Rex(x)) & all y.(Lempus(y) -> Rex(y))) & all z.(Brimpus(z) -> -Rex(z)))", "(all x y z.((Rex(x) & Gorpus(x)) -> Gorpus(x)) & ((Rex(y) & Lempus(y)) -> Brimpus(z)))", "all x y z.((Rex(x) & Gorpus(x) & Lempus(y) & Brimpus(z)) -> (Gorpus(x) & Lempus(y) & -Brimpus(z)))", "all x.(Rex(x) -> (Gorpus(x) & Lempus(x) & -Brimpus(x)))", "(all x.(Rex(x) -> Gorpus(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Brimpus(z))))", "all x y z.((Rex(x) & Gorpus(x) & Lempus(y) & Brimpus(z)) -> (IsGorpus(x) & IsLempus(y) & IsBrimpus(z)))", "all x y.((Rex(x) & Gorpus(x) & Lempus(y)) -> (Gorpus(x) & Lempus(y) & -Brimpus(x)))"]}
{"id": "prontoqa_train_515", "nl": "Rex is not a grimpus.", "fol": "-grimpus(Rex)", "prediction": ["Rex is notGrimpus(x)", "(-Grimpus(Rex))", "all x.(Rex(x) -> -Grimpus(x))", "Rex is notGrimpus(x)", "-Grimpus(Rex)", "all x.(Rex(x) -> -Grimpus(x))", "Rex is notGrimpus(x)", "(-Grimpus(Rex))", "Rex is not a Grimpus.", "Rex is notGrimpus(Rex)", "all x.(Rex(x) -> -Grimpus(x))", "-Grimpus(Rex)", "Rex -Grimpus(rex)", "(-Grimpus(Rex))", "-Grimpus(rex)", "(-Grimpus(Rex))"]}
{"id": "prontoqa_train_516", "nl": "Every grimpus is a lorpus.", "fol": "all x. (grimpus(x) -> lorpus(x))", "prediction": ["all x.(Grimpus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "exists x y.(Grimpus(x) & Lorpus(y))", "all x.(Sgrimpus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "(all x.(Grimpus(x) -> Lorpus(x))", "exists x y.(Grimpus(x) & Lorpus(y))", "all x.(Grimpus(x) -> Lorpus(x))", "all x.(Sgrimpus(x) -> Lorpus(x))", "all x.(Gruppus(x) -> Lorpus(x))", "all x.(Grampus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lord(x))", "exists x.(Grimpus(x) & Lord(x))", "all x.(Grampus(x) -> Lorpus(x))", "all x.(Grampus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_517", "nl": "Sally is a vumpus, Sally is a yumpus, and Sally is not a lorpus.", "fol": "(vumpus(Sally) & yumpus(Sally) & -lorpus(Sally))", "prediction": ["(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> Yumpus(x)) & (Sally(x) -> -Lorpus(x)))", "all x y z.((Sally(x) & Vumpus(x) & Yumpus(y) & -Lorpus(z)) -> (Vumpus(x) & Yumpus(y) & -Lorpus(z)))", "(all x.(Sally(x) -> Vumpus(x)) & all y.(Sally(y) -> Yumpus(y)) & all z.(Sally(z) -> -Lorpus(z))))", "all x.(Sally(x) -> (Vumpus(x) & Yumpus(x) & -Lorpus(x)))", "(all x y z.((Sally(x) & Vumpus(y) & Yumpus(z)) -> (Vumpus(x) & Yumpus(z) & -Lorpus(x)))", "(all x y z.((Sally(x) & Vumpus(x)) -> (Vumpus(x) & Yumpus(y))) & ((Sally(z) & -Lorpus(z)) -> (Yumpus(z) & -Lorpus(z))))", "all x y z.((Sally(x) & Vumpus(x) & Yumpus(y) & -Lorpus(z)) -> (Vumpus(x) | Yumpus(y) & -Lorpus(z)))", "(all x.(Sally(x) -> Vumpus(x)) & all y.(Sally(y) -> Yumpus(y)) & all z.(Sally(z) -> -Lorpus(z))))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> Yumpus(x)) & (Sally(x) -> -Lorpus(x)))", "all x y z.((Sally(x) & Vumpus(y) & Yumpus(z)) -> (Vumpus(x) | Yumpus(z) | -Lorpus(x)))", "all x.(Sally(x) -> (Vumpus(x) & Yumpus(x) & -Lorpus(x)))", "exists x.(Sally(x) & Vumpus(x) & Yampus(x) & -Lorpus(x))", "all x y z.((Sally(x) & Vumpus(x) & Yampus(y) & -Lorpus(z)) -> (Vumpus(x) & Yampus(y) & -Lorpus(z)))", "(all x.(Sally(x) -> Vumpus(x)) & (Yumpus(x) & -Lorpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & all y.(Sally(y) -> Yumpus(y)) & all z.(Sally(z) -> -Lorpus(z))))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> Yumpus(x)) & (Sally(x) -> -Lorpus(x)))"]}
{"id": "prontoqa_train_518", "nl": "Jompuses are brimpuses.", "fol": "all x. (jompus(x) -> brimpus(x))", "prediction": ["all x.(Jompuse(x) -> Brimpuse(x))", "all x.(Jompuse(x) -> Brimpus(x))", "all x y.((Jompuse(x) & Brimpus(y)) -> Is(x,y))", "all x.(Jompuse(x) -> Brimpuse(x))", "(Brimpus(jompuse) & Brimpus(jompuse))", "(all x.(Jompuse(x) -> Brimbus(x)))", "all x y.((Jompuse(x) & Brimpuse(y)) -> Has(x,y))", "all x.(Jimpus(x) -> Brimpuse(x))", "all x.((Jompuse(x) & Brimpuse(x)) -> Has(x,y))", "all x.(Jompuse(x) -> Brimbus(x))", "all x.(Jimpus(x) -> Brimpus(x))", "all x.(Jompuse(x) -> Brimpuse(x))", "(Brimpus)", "all x.(Jompuse(x) -> Brimpus(x))", "all x.(Jomess(x) -> Brimpus(x))", "all x.(Jompuse(x) -> Brimpuse(x))"]}
{"id": "prontoqa_train_519", "nl": "Wren is an impus and Wren is not a brimpus and Wren is a dumpus.", "fol": "(impus(Wren) & -brimpus(Wren) & dumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Is(x)) & (-Is(x) & Brimpus(x)) & (-Is(x) & Dumpus(x))))", "all x y z.((Wren(x) & Impossible(x) & Wren(y) & Brimpus(y) & Dumpus(z)) -> (Impossible(x) & -Brimpus(y) & Dumpus(z)))", "all x y.((Wren(x) & Wren(y)) -> (Impossible(x) & -Brimpus(y) & Dumpus(y)))", "all x y z.((Wren(x) & Imperator(x) & Wren(y) & Brimpus(z)) -> (-Brimpus(y) & Dumpus(y)))", "(all x y.(Wren(x) -> Is(x,y)) & ((Wren(y) & -IsBrimpus(y)) | (-Is(y,x) & Is(y,x)))))", "(all x.(Wren(x) -> Is(x)) & (-IsBrimpus(x) & -IsDumpus(x)))", "(all x y z.(Wren(x) -> Is(x,y)) & (Wren(z) -> -Impossible(z))) & (Wren(x) -> -Brimpus(z)) & (Wren(x) -> Dumpus(x)))", "(all x.(Wren(x) -> Impossible(x)) & (-Brimpus(x) & -Dumpus(x)))", "(all x y.(Wren(x) -> IsImpossible(x)) & (Wren(y) -> -Brimpus(y)) & (Wren(y) -> Dumpus(y)))", "exists x.(Wren(x) & IsImpossible(x) & -Imbrishable(x) & -Imbussable(x))", "all x.(Wren(x) -> (Impossible(x) & -Brimpus(x) & Dumpus(x)))", "all x y.((Wren(x) & Wren(y)) -> (Impossible(x) & -Brimpus(y) & Dumpus(y)))", "(all x.(Wren(x) -> Imperative(x)) & (-Brimpus(x) & Dumpus(x)))", "all x y z.((Wren(x) & Impossible(x) & Wren(y) & Brimpus(z)) -> (-Brimpus(y) & Dumpus(y)))", "(all x.(Wren(x) -> Is(x)) & (-Is(x) & Brimpus(x)) | (-Is(x) & Dumpus(x))))", "all x.(Wren(x) -> (Impossible(x) & -Brimpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_520", "nl": "Max is a shumpus, Max is not a yumpus, and Max is a brimpus.", "fol": "(shumpus(Max) & -yumpus(Max) & brimpus(Max))", "prediction": ["(all x.(Max(x) -> Humpus(x)) & (Max(x) -> -Yumpus(x)) & (Max(x) -> Brimpus(x)))", "all x y z.((Max(x) & Humpus(y) & Yumpus(z)) -> (Shumpus(x) & -Yumpus(y) & Brimpus(z)))", "all x y z.((Max(x) & Humpus(y) & Yampus(z)) -> (Shumpus(x) & -Yumpus(y) & Brimpus(z)))", "(all x y z.((Max(x) & Humpus(y)) -> Shumpus(x)) & ((Max(z) & -Yumpus(z)) -> Brimpus(z)))", "(all x.(Max(x) -> Humpus(x)) & (-Max(x) -> Yumpus(x)) & (-Max(x) -> Brimpus(x)))", "(all x.(Max(x) -> Humpus(x)) & (Max(x) -> -Yumpus(x)) & (Max(x) -> Brimpus(x)))", "all x.(Max(x) -> (Shumpus(x) | -Yumpus(x) | Brimpus(x)))", "(all x.(Max(x) -> Shumpus(x)) & (Max(x) -> -Yumpus(x)) & (Max(x) -> Brimpus(x)))", "(all x y z.((Max(x) & Humpus(y) & Yumpus(z)) -> Shumpus(x)) & ((Max(x) & -Yumpus(x)) -> Brimpus(x)))", "all x y z.((Max(x) & Humpus(y) & Yumpus(z)) -> (Shumpus(x) & -Yumpus(y) & Brimpus(z)))", "all x.(Max(x) -> (Shumpus(x) & -Yumpus(x) & Brimpus(x)))", "all x y z.((Max(x) & Shumpus(y) & Yumpus(z)) -> (-Shumpus(x) & -Yumpus(y) & -Brimpus(z)))", "(all x y z.((Max(x) & Humpus(y)) -> Shumpus(x)) & ((Max(z) & -Yumpus(z)) -> Brimpus(z)))", "(all x.(Max(x) -> Shumpus(x)) & (Max(x) -> -Yumpus(x)) & (Max(x) -> Brimpus(x)))", "all x y z.((Max(x) & Humpus(y) & Yampus(z)) -> (Shumpus(x) & -Yumpus(y) & Brimpus(z)))", "(all x.(Max(x) -> Humpus(x)) & (Max(x) -> -Yumpus(x)) & (Max(x) -> Brimpus(x)))"]}
{"id": "prontoqa_train_521", "nl": "Every sterpus is a lorpus.", "fol": "all x. (sterpus(x) -> lorpus(x))", "prediction": ["all x.(Sterpus(x) -> Lorpus(x))", "all x.(Sterpus(x) -> Lorpus(x))", "all x y.((Sterpus(x) & Lorpus(y)) -> Is(x,y))", "all x.(Steerpus(x) -> Lorpus(x))", "(all x.(Sterpus(x) -> Lorpus(x))", "all x y.((Steerpus(x) & Lorpus(y)) -> Has(x,y))", "all x.(Stereospheric(x) -> Lorpus(x))", "all x.(Sterpus(x) -> Lorpus(x))", "all x.(Sterepus(x) -> Lorpus(x))", "exists x.(Sterpus(x) & Lorpus(x))", "all x.(Sterpus(x) -> Lorpus(x))", "all x.(Steerpus(x) -> Lordus(x))", "exists x.(Sterpus(x) & Lord(x))", "all x.(Steerpus(x) -> Loomis(x))", "all x.(Sterpus(x) -> Lorpus(x))", "exists x.(Steerpus(x) & Lord(x))"]}
{"id": "prontoqa_train_522", "nl": "Alex is not a lorpus and Alex is a zumpus and Alex is a brimpus.", "fol": "(-lorpus(Alex) & zumpus(Alex) & brimpus(Alex))", "prediction": ["all x y z.((Alex(x) & Lorpus(y) & Zumpus(z)) -> (-Lorpus(x) & Zumpus(x) & Brimpus(x)))", "(all x.(Alex(x) -> -Lorpus(x)) & all y.(Alex(y) -> Zumpus(y)) & all z.(Alex(z) -> Brimpus(z))))", "all x.(Alex(x) -> (-Lorpus(x) & Zumpus(x) & Brimpus(x)))", "(all x y z.((Alex(x) & Lorpus(y) & Zumpus(z)) -> -Lorpus(x)) & ((Alex(x) & Zumpus(x)) -> Brimpus(x)))", "all x y z.((Alex(x) & Lorpus(y) & Zumpus(z)) -> (-Lorpus(x) & -Brimpus(x)))", "all x y.((Alex(x) & Lorpus(y) & Zumpus(y)) -> (-Lorpus(x) & Brimpus(x)))", "(all x.(Alex(x) -> -Lorpus(x)) & all y.(Alex(y) -> Zumpus(y)) & all z.(Alex(z) -> Brimpus(z))))", "(all x.(Alex(x) -> -Lorpus(x)) & (Alex(x) -> Zumpus(x)) & (Alex(x) -> Brimpus(x)))", "(all x y.(Lorpus(x) -> -Lorpus(x)) & (Zumpus(y) -> Zumpus(y)) & (Brimpus(y) -> -Lorpus(y)))", "all x.(Alex(x) -> (-Lorpus(x) & Zumpus(x) & Brimpus(x)))", "all x y z.((Alex(x) & Lorpus(y) & Zumpus(z)) -> (-Lorpus(x) & Zumpus(x) & Brimpus(x)))", "(all x.(Alex(x) -> -Lorpus(x)) & all y.(Alex(y) -> Zumpus(y))) & all z.(Alex(z) -> Brimpus(z)))", "(all x.(Alex(x) -> -Lorpus(x)) & (Alex(x) -> Zumpus(x)) & (Alex(x) -> Brimpus(x)))", "all x.(Alex(x) -> (-Lorpus(x) & Zumpus(x) & Brimpus(x)))", "all x y z.((Alex(x) & Lorpus(y) & Zumpus(z)) -> (-Lorpus(x) & Zumpus(y) & Brimpus(z)))", "exists x.(Alex(x) & -Lorpus(x) & Zumpus(x) & Brimpus(x))"]}
{"id": "prontoqa_train_523", "nl": "Each jompus is an impus.", "fol": "all x. (jompus(x) -> impus(x))", "prediction": ["all x.(Jompus(x) -> IsImpossed(x))", "all x.(Jompus(x) -> IsImpossible(x))", "all x y.((Jompus(x) & IsImpossible(y)) -> IsImpossible(x))", "(Jompus(jo) & IsImpossed(jo))", "all x.(Jimpus(x) -> IsImpossed(x))", "all x.(Jompus(x) -> IsImprovement(x))", "all x y.((Jompus(x) & Jompus(y)) -> IsImpossed(x))", "all x.(Jompus(x) -> Impossible(x))", "all x.(Jompus(x) -> IsImpossed(x))", "all x.(Jimpus(x) -> IsImpossible(x))", "all x.(Jumpus(x) -> IsImprovement(x))", "all x.(Jompus(x) -> Imperator(x))", "exists x.(Jomess(x) & Impossible(x))", "exists x.(Jompus(x) & Is(x))", "exists x.(Jimpus(x) & Is(x))", "exists x.(jompus(x) & Impossible(x))"]}
{"id": "prontoqa_train_524", "nl": "Alex is a gorpus and Alex is a dumpus and Alex is not an impus.", "fol": "(gorpus(Alex) & dumpus(Alex) & -impus(Alex))", "prediction": ["(all x.(Alex(x) -> Gorpus(x)) & all y.(Alex(y) -> Dumpus(y))) & all z.(Alex(z) -> -Impossible(z))))", "all x y z.((Alex(x) & Gorpus(x) & Dumpus(y) & -Impossible(z)) -> (Gorpus(x) & Dumpus(y)))", "all x y.((Alex(x) & Gorpus(x) & Dumpus(y)) -> -Impossible(x))", "all x.(Alex(x) -> (Gorpus(x) & Dumpus(x) & -Impossible(x)))", "(all x.(Alexa(x) -> Gorpus(x)) & all y.(Alexa(y) -> Dumpus(y)) & all z.(Alexa(z) -> -Impossible(z))))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Alex(y) -> Dumpus(y)) & all z.(Alex(z) -> -Impossible(z))))", "(all x y.(Alex(x) -> Gorpus(x)) & (Alex(y) -> Dumpus(y)) & (Alex(y) -> -Impossible(y)))", "all x y z.((Alex(x) & Gorpus(x) & Dumpus(y)) -> (Gorpus(x) & Dumpus(y) & -Impossible(z)))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Alex(y) -> Dumpus(y))) & all z.(Alex(z) -> -Impossible(z)))", "(all x.(Alexa(x) -> Gorpus(x)) & (Alexa(x) -> Dumpus(x)) & (Alexa(x) -> -Impossible(x)))", "all x y z.((Alex(x) & Gorpus(x) & Dumpus(y)) -> (Gorpus(x) & Dumpus(y) & -Impossible(z)))", "(all x y z.(Alex(x) -> Gorpus(x)) & (Alex(y) -> Dumpus(y)) & (Alex(z) -> -Impossible(z)))", "exists x.(Alex(x) & Gorpus(x) & Dumpus(x) & -Impossible(x))", "all x.(Alex(x) -> (Gorpus(x) & Dumpus(x) & -Impossible(x)))", "all x y.((Alex(x) & Gorpus(x) & Dumpus(y)) -> (-Impossible(x)))", "all x.(Alex(x) -> (Gorpus(x) & Dumpus(x) & -Ilimination(x)))"]}
{"id": "prontoqa_train_525", "nl": "Each zumpus is a gorpus.", "fol": "all x. (zumpus(x) -> gorpus(x))", "prediction": ["all x.(Zumpus(x) -> Gorpus(x))", "all x.(Tompus(x) -> Gorpus(x))", "all x y.((Zumpus(x) & Gorpus(y)) -> Has(x,y))", "all x.(Zumpus(x) -> Gorpus(x))", "all x y.((Tompus(x) & Gorpus(y)) -> HasTompus(x,y))", "(all x.(Zumpus(x) -> Gorpus(x))", "all x.(Tompus(x) -> Gorpus(x))", "all x.(Zimmer(x) -> Gorpus(x))", "all x y.((Zumpus(x) & Gorpus(y)) -> Has(x,y))", "all x.(Zumpus(x) -> Gorpus(x))", "all x.(Tompus(x) -> Gorpus(x))", "exists x.(Zimmer(x) & Gorpus(x))", "all x.(Tompus(x) -> Gorpus(x))", "all x.(Zumpus(x) -> Gorpus(x))", "exists x.(Tommus(x) & Gorpus(x))", "exists x.(Zumpus(x) & Gorpus(x))"]}
{"id": "prontoqa_train_526", "nl": "Fae is a shumpus and Fae is a brimpus and Fae is not a gorpus.", "fol": "(shumpus(Fae) & brimpus(Fae) & -gorpus(Fae))", "prediction": ["(all x.(Fae(x) -> Humpus(x)) & (Fae(x) -> Brimpus(x)) & -Gorpus(x)))", "all x y z.((Fae(x) & Shumpus(x) & Brimpus(y) & -Gorpus(z)) -> (Shumpus(x) & Brimpus(y) & -Gorpus(z)))", "(all x y z.((Fae(x) & Humpus(y)) -> Shumpus(x)) & ((Fae(z) & Brimpus(z))) -> -Gorpus(z)))", "(all x y.(Fae(x) -> Humpus(x)) & (Fae(y) -> Brimpus(y)) & (Fae(y) -> -Gorpus(y)))", "(all x.(Fae(x) -> Humpus(x)) & (Fae(x) -> Brimpus(x)) & (Fae(x) -> -Gorpus(x)))", "(all x.(Fae(x) -> Shumpus(x)) & (Fae(x) -> Brimpus(x)) & -Gorpus(x)))", "all x.(Fae(x) -> (Shumpus(x) & Brimpus(x) & -Gorpus(x)))", "all x y z.((Fae(x) & Shumpus(x) & Brimpus(y) & -Gorpus(z)) -> (Shumpus(x) & Brimpus(y) & -Gorpus(z)))", "all x y.((Fae(x) & Shumpus(x) & Brimpus(y)) -> (Shumpus(x) & -Gorpus(y)))", "(all x.(Fae(x) -> Humpus(x)) & all y.(Fae(y) -> Brimpus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "all x y z.((Fae(x) & Shumpus(x) & Brimpus(y) & Gorpus(z)) -> (Shumpus(x) & Brimpus(y) & -Gorpus(z)))", "exists x.(Fae(x) & Humpus(x) & Brimpus(x) & -Gorpus(x))", "(all x y z.((Fae(x) & Humpus(y)) -> (Shumpus(x) | Brimpus(y))) & ((Fae(z) & Gorpus(z))) -> -Shumpus(z)))", "all x y z.(Fae(x) & Shumpus(x) & Brimpus(y) & -Gorpus(z))", "(all x.(Fae(x) -> Shumpus(x)) & (Fae(x) -> Brimpus(x)) & (Fae(x) -> -Gorpus(x)))", "all x.(Fae(x) -> (Shumpus(x) & Brimpus(x) & -Gorpus(x)))"]}
{"id": "prontoqa_train_527", "nl": "Vumpuses are jompuses.", "fol": "all x. (vumpus(x) -> jompus(x))", "prediction": ["all x.(Vumpus(x) -> Jompuse(x))", "all x.(Vumpus(x) -> Jompuse(x))", "all x y.((Vumpus(x) & Jompuse(y)) -> (Jumpus(x) & Jompuse(y)))", "(Jumpuses(v) & Jompuse(v))", "all x.(Vumpus(x) -> Jompuse(x))", "all x y.((Vumpus(x) & Jompus(y)) -> Is(x,y))", "(Jumpuses(v) -> Jompuse(v))", "all x.(Vumpus(x) -> Jompuse(x))", "all x y.((Vumpus(x) & Jompuse(y)) -> Has(x,y))", "all x.(Vumpus(x) -> Jompuse(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompuse(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "All x.(Vumpus(x) -> Jompuse(x))", "all x.(Volmpus(x) -> Jombus(x))"]}
{"id": "prontoqa_train_528", "nl": "Stella is not a jompus, Stella is a lorpus, and Stella is a tumpus.", "fol": "(-jompus(Stella) & lorpus(Stella) & tumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Jompus(x)) & (Lorpus(x) | Tumpus(x))))", "all x y z.((Stella(x) & Jompus(y) & Lorpus(z)) -> (-Jompus(x) & -Lorpus(x) & -Tumpus(x)))", "(all x y z.((Stella(x) & Jompus(y)) -> -Jompus(x)) & ((Stella(z) & Lorpus(z))) -> Tumpus(z)))", "(all x.(Stella(x) -> -Jompus(x)) & all y.(Lorpus(y) & -Tumpus(y)))", "all x.(Stella(x) -> (-Jompus(x) & Lops(x) & Tumpus(x)))", "all x y z.((Stella(x) & Jompus(y) & Lorpus(z)) -> (-Jompus(x) | (Lorpus(x) & Tumpus(x))))", "(all x.(Stella(x) -> -Jompus(x)) & all y.(Lorpus(y) -> -Stella(x)) & all z.(Tumpus(z) -> (Stella(z) & -Jompus(z)))))", "(all x.(Stella(x) -> -Jompus(x)) & (Lorpus(x) & Tumpus(x)))", "(all x y z.((Stella(x) & Jompus(y) & Lorpus(z)) -> -Jompus(x)) & ((Stella(x) & Lorpus(x)) -> Tumpus(x)))", "(all x y z.((Stella(x) & Jompus(y)) -> -Jompus(x)) & ((Stella(z) & Lorpus(z))) -> Tumpus(z)))", "exists x.(Stella(x) & -Jompus(x) & Lorpus(x) & Tumpus(x))", "all x y z.((Stella(x) & Jompus(y) & Lorpus(z)) -> (-Jompus(x) & -Lorpus(x) & -Tumpus(x)))", "(all x.(Stella(x) -> -Jompus(x)) | (Stella(x) -> Lorpus(x))) | (Stella(x) -> Tumpus(x)))", "all x y z.((Stella(x) & Jompus(y) & Lorpus(z) & Tumpus(z)) -> (-Jompus(x) | (Lorpus(x) & Tumpus(x))))", "all x y z.((Stella(x) & Jompus(y) & Lorpus(z)) -> (-Jompus(x) | (Lorpus(x) & Tumpus(x))))", "(all x.(Stella(x) -> -Jompus(x)) | (Lorpus(x) & Tumpus(x))))"]}
{"id": "prontoqa_train_529", "nl": "Tumpuses are gorpuses.", "fol": "all x. (tumpus(x) -> gorpus(x))", "prediction": ["all x.(Tumpuse(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpuse(x) -> Gorpuse(x))", "all x y.((Tumpuse(x) & Gorpus(y)) -> Gorpus(x))", "(Gorpuse(tump) & Gorpus(tump))", "all x.(Tumulus(x) -> Gorpus(x))", "all x y.((Tumpuse(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpuse(x))", "(Gorpuse(tump) & Gorpus(tump))", "all x.(Tumpuse(x) -> Gorpuse(x))", "all x y.((Tumulus(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Tumulus(x) -> Gorpuse(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpuse(x) -> Gorpuse(x))", "all x.(Tumulus(x) -> Gorpuse(x))", "all x.(Mumpsue(x) -> Gorpuse(x))"]}
{"id": "prontoqa_train_530", "nl": "Sally is not a gorpus, Sally is a zumpus, and Sally is a rompus.", "fol": "(-gorpus(Sally) & zumpus(Sally) & rompus(Sally))", "prediction": ["(all x.(Sally(x) -> -Gorpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> Rompus(x)))", "all x y z.((Sally(x) & Gorpus(y) & Zumpus(z)) -> (-Gorpus(x) & Torompus(x)))", "(all x.(Sally(x) -> -Gorpus(x)) & all y.(Sally(y) -> Zumpus(y)) & all z.(Sally(z) -> Rompus(z))))", "(all x y z.((Sally(x) & Gorpus(y) & Zumpus(z)) -> -Gorpus(x)) & ((Sally(x) & Rompus(x)) -> Rompus(x)))", "all x.(Sally(x) -> (-Gorpus(x) & Zumpus(x) & Rompus(x)))", "(-Gorpus(Sally) & Zumpus(Sally) & Rompus(Sally))", "all x y z.((Sally(x) & Gorpus(y) & Zumpus(z)) -> (-Gorpus(x) & Zumpus(x) & Rompus(x)))", "all x y z.((Sally(x) & Zumpus(y) & Rompus(z)) -> (-Gorpus(x) & Zumpus(y) & Rompus(z)))", "(all x.(Sally(x) -> -Gorpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> Rompus(x)))", "all x.(Sally(x) -> (-Gorpus(x) & Zumpus(x) & Rompus(x)))", "(all x.(Sally(x) -> -Gorpus(x)) & all y.(Sally(y) -> Zumpus(y)) & all z.(Sally(z) -> Rompus(z))))", "(-Gorpus(Sally) & Zumpus(Sally) & Rompus(Sally))", "(-Gorpus(Sally) | Zumpus(Sally) | Rompus(Sally)))", "exists x.(Sally(x) & -Gorpus(x) & Zumpus(x) & Rompus(x))", "all x y z.((Sally(x) & Gorpus(y) & Zumpus(z)) -> (-Gorpus(x) & Rompus(x)))", "(all x.(Sally(x) -> -Gorpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> Rompus(x)))"]}
{"id": "prontoqa_train_531", "nl": "Dumpuses are wumpuses.", "fol": "all x. (dumpus(x) -> wumpus(x))", "prediction": ["all x.(Dumpuse(x) -> Wumpus(x))", "all x.(Dumpuse(x) -> Wumpus(x))", "(Wumpuse(dumpuse) & -Wumpus(dumpuse))", "all x y.((Dumpuse(x) & Wumpus(y)) -> Wumpus(x))", "all x.(Dumpuse(x) -> Wumpus(x))", "(Wumpuse(dumpuse) & -Wumpus(dumpuse))", "all x.(Dumpuse(x) -> Wumpus(x))", "all x.(Dumpuse(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wampus(x))", "(Wumpus)", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpuse(x) -> Wampus(x))", "All x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_532", "nl": "Alex is a vumpus and Alex is not a wumpus and Alex is a grimpus.", "fol": "(vumpus(Alex) & -wumpus(Alex) & grimpus(Alex))", "prediction": ["(all x.(Alex(x) -> Vumpus(x)) & (Alex(x) -> -Wumpus(x)) & (Alex(x) -> Grimpus(x)))", "all x y.((Alex(x) & Vumpus(x) & -Wumpus(y)) -> Grimpus(x))", "all x y z.((Alex(x) & Vumpus(x) & Alex(y) & Grimpus(z)) -> (-Wumpus(y) & -Vumpus(y) & Grimpus(z)))", "(all x y.((Alex(x) & Vumpus(x)) -> (Vumpus(x) & -Wumpus(y)) & ((Alex(x) & Grimpus(x)) -> (Wumpus(y) & Grimpus(x))))", "all x y z.((Alex(x) & Vumpus(x) & -Wumpus(y) & Grimpus(z)) -> (Vumpus(x) & -Wumpus(y) & Grimpus(z)))", "all x.(Alex(x) -> (Vumpus(x) & -Wumpus(x) & Grimpus(x)))", "(all x.(Alex(x) -> Vumpus(x)) & all y.(Alex(y) -> -Wumpus(y))) & all z.(Alex(z) -> Grimpus(z))))", "(all x.(Alex(x) -> Vumpus(x)) & (Alex(x) -> -Wumpus(x)) & (Alex(x) -> Grimpus(x)))", "all x.(Alex(x) -> (Vumpus(x) & -Wumpus(x) & Grimpus(x)))", "all x y.((Alex(x) & Vumpus(x) & Alex(y)) -> (-Wumpus(y) & Grimpus(y)))", "(all x.(Alexa(x) -> Vumpus(x)) & (Alexa(x) -> -Wumpus(x)) & (Alexa(x) -> Grimpus(x)))", "(all x y.(Vumpus(x) & -Wumpus(y)) & (Smoothpus(x) & -Vumpus(y)))", "all x.(Alex(x) -> (Vimpus(x) & -Wumpus(x) & Grimpus(x)))", "all x y.((Alex(x) & Vumpus(x)) -> (-Wumpus(y) & Grimpus(x)))", "exists x.(Alex(x) & Vumpus(x) & -Wumpus(x) & Grimpus(x))", "(all x.(Alex(x) -> Vumpus(x)) & (Alex(x) -> -Wumpus(x)) & (Alex(x) -> Grimpus(x)))"]}
{"id": "prontoqa_train_533", "nl": "Each impus is a numpus.", "fol": "all x. (impus(x) -> numpus(x))", "prediction": ["all x.(Impossible(x) -> Numpus(x))", "all x.(Impossible(x) -> Numpus(x))", "all x.(Impact(x) -> Numpus(x))", "(all x.(Impossible(x) -> Numpus(x)))", "all x y.((Issue(x) & Numpus(y)) -> IsNote(x,y))", "all x.(Impossible(x) -> Numpus(x))", "all x y.((Impossible(x) & Numpus(y)) -> Is(x,y))", "all x.(Impact(x) -> Numpus(x))", "all x.(Issue(x) -> Numpus(x))", "all x.(Impossible(x) -> Numpus(x))", "all x.(Impact(x) -> Numpus(x))", "all x.(Issue(x) -> Numpus(x))", "exists x.(Impossible(x) & Number(x))", "exists x.(Impact(x) & Numpus(x))", "exists x.(Impedus(x) & Numpus(x))", "exists x.(Impossible(x) & Numpus(x))"]}
{"id": "prontoqa_train_534", "nl": "Alex is a tumpus, Alex is a lorpus, and Alex is not a numpus.", "fol": "(tumpus(Alex) & lorpus(Alex) & -numpus(Alex))", "prediction": ["(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> -Numpus(z))))", "all x y z.((Alex(x) & Tumpus(y) & Lorpus(z)) -> (Tumpus(x) & Lopus(x) & -Numpus(x)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> Lorpus(x)) & -Alex(x)))", "all x y z.((Alex(x) & Tumpus(x) & Lorpus(y) & -Numpus(z)) -> (Tumpus(x) | Lorpus(y) & -Tumpus(z)))", "all x.(Alex(x) -> (Tumpus(x) & Lorpus(x) & -Numpus(x)))", "(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> -Numpus(z))))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> Lorpus(x)) & (Alex(x) -> -Numpus(x)))", "all x y z.((Alex(x) & Tompus(y) & Lorpus(z)) -> (Tumpus(x) | Lorpus(x) | -Numpus(x)))", "all x y z.((Alex(x) & Tumpus(y) & Lorpus(z)) -> (Tumpus(x) | Lopus(x) | -Numpus(x)))", "exists x.(Alex(x) & Tumpus(x) & Lorpus(x) & -Numpus(x))", "(all x y z.(Alex(x) -> Tumpus(x)) & (Alex(y) -> Lorpus(y)) & (Alex(z) -> -Numpus(z)))", "all x.(Alex(x) -> (Tumpus(x) & Lorpus(x) & -Numpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Lorpus(x) | -Numpus(x)))", "(all x y z.(Alex(x) -> Tumpus(x)) & (Alex(y) -> Lorpus(y)) & (Alex(z) -> -Numpus(z)))", "(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> Lorpus(y)) & -Numpus(y)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> Lorpus(x)) & -Alex(x)))"]}
{"id": "prontoqa_train_535", "nl": "Every zumpus is an impus.", "fol": "all x. (zumpus(x) -> impus(x))", "prediction": ["all x.(Zumpus(x) -> IsImpossed(x))", "-all x.(Zumpus(x) -> IsImpossed(x))", "all x.(Tompus(x) -> IsImpossed(x))", "-exists x.(Zumpus(x) & IsImpossed(x))", "all x.(Zumpus(x) -> IsImpossible(x))", "all x.(Tompus(x) -> Imperative(x))", "All x y.((Zumpus(x) & Impossible(y)) -> Is(x,y))", "all x.(Zumpus(x) -> Isolated(x))", "all x.(Tompus(x) -> Impossible(x))", "exists x.(Zupe(x) & IsImpossed(x))", "all x.(Zumpus(x) -> Is(x,y))", "all x.(Zumpus(x) -> IsImpossed(x))", "all x.(Tompus(x) -> Illegal(x))", "exists x.(Zumpus(x) & Impossible(x))", "all x.(Tompus(x) -> Implicator(x))", "all x.(Tommus(x) -> Impeccable(x))"]}
{"id": "prontoqa_train_536", "nl": "Sam is not an impus and Sam is a jompus and Sam is a brimpus.", "fol": "(-impus(Sam) & jompus(Sam) & brimpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Impossible(x)) & (Jompus(x) | Brimpus(x))))", "all x y z.((Sam(x) & IsNotImpossible(x) & Sam(y) & Jompus(y) & Brimpus(z)) -> (-Impossible(x) & Jompus(y) & Brimpus(z)))", "(all x.(Sam(x) -> -Impossible(x)) & all y.(Sam(y) -> Jompus(y)) & all z.(Sam(z) -> Brimpus(z))))", "all x y.((Sam(x) & -Impossible(x)) -> (Jompus(x) & Brimpus(y)))", "all x.(Sam(x) -> (-Impossible(x) & Jompus(x) & Brimpus(x)))", "(all x y z.((Sam(x) & IsNot(x,Is(x)) -> Is(x,Is(x)) & ((Sam(y) & Jompus(y)) -> Is(y,Z))) & ((Sam(z) & Is(z))) -> Is(z,Is(z,Is(z))))", "all x y z.((Sam(x) & Is(x,y) & Jompus(y) & Brimpus(z)) -> (-Is(x,z) & Is(x,y)))", "(all x.(Sam(x) -> -Impossible(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Brimpus(x)))", "(all x y.((Sam(x) & IsNotImpossible(x)) -> (Jompus(x) & Brimpus(y)))", "(-Impossible(Sam) & Jompus(Sam) & Brimpus(Sam))", "(all x.(Sam(x) -> -Issue(x)) & all y.(Jompus(y) & All z.(Brimpus(z))) -> -Issue(x)))", "exists x.(Sam(x) & -Is(x) & Jompus(x) & Brimpus(x))", "all x y.((Sam(x) & IsNotImpossible(x) & Sam(y)) -> (Jompus(y) & Brimpus(y)))", "all x y z.((Sam(x) & IsNotIssue(x) & Sam(y) & Jompus(z)) -> (Jompus(y) & Brimpus(z)))", "all x.(Sam(x) -> (-Impossible(x) & Jompus(x) & Brimpus(x)))", "(all x.(Sam(x) -> -Impossible(x)) & (Jompus(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_537", "nl": "Every dumpus is a numpus.", "fol": "all x. (dumpus(x) -> numpus(x))", "prediction": ["all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumpus(x) -> Numpus(x))", "(all x.(Dumpus(x) -> Numpus(x))", "all x y.((Dumpus(x) & Numpus(y)) -> Numpus(x))", "all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumps(x) -> Numpus(x))", "all x y.((Dumpus(x) & Numpus(y)) -> Has(x,y))", "all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumpus(x) -> Numpus(x))", "exists x.(Dumps(x) & Numpus(x))", "all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumpus(x) -> Numpus(x))", "exists x.(Dumpus(x) & Number(x))", "all x.(Dumpus(x) -> Numpus(x))", "all x.(Dupus(x) -> Numpus(x))", "exists x.(Dumpus(x) & Numpus(x))"]}
{"id": "prontoqa_train_538", "nl": "Sally is not a numpus, Sally is a gorpus, and Sally is a lorpus.", "fol": "(-numpus(Sally) & gorpus(Sally) & lorpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Numpus(x)) & all y.(Sally(y) -> Gorpus(y)) & all z.(Sally(z) -> Lorpus(z))))", "all x y z.((Sally(x) & Numpus(y) & Gorpus(z)) -> (-Numpus(x) & Gorpus(x) & Lorpus(x)))", "(all x y z.((Sally(x) & Numpus(y) & Gorpus(z)) -> -Numpus(x)) & ((Sally(x) & Gorpus(x)) -> Lorpus(x)))", "all x.(Sally(x) -> (-Numpus(x) & Gorpus(x) & Lorpus(x)))", "(all x.(Sally(x) -> -Numpus(x)) & (Gorpus(x) & Lorpus(x)))", "all x y z.((Sally(x) & Numpus(y) & Gorpus(z)) -> (-Numpus(x) & Gorpus(x) & Lorpus(x)))", "(-numpus(Sally) & Gorpus(Sally) & Lorpus(Sally))", "(-Numpus(Sally) & Gorpus(Sally) & Lorpus(Sally))", "(all x.(Sally(x) -> -Numpus(x)) & all y.(Sally(y) -> Gorpus(y)) & all z.(Sally(z) -> Lorpus(z))))", "(all x.(Sally(x) -> -Numpus(x)) & (Sally(x) -> Gorpus(x)) & (Sally(x) -> Lorpus(x)))", "all x.(Sally(x) -> (-Numpus(x) & Gorpus(x) & Lorpus(x)))", "(all x y z.((Sally(x) & Numpus(y) & Gorpus(z)) -> -Numpus(x)) & ((Sally(x) & Gorpus(x)) -> Lorpus(x)))", "all x y z.((Sally(x) & Numpus(y) & Gorpus(z)) -> (-Numpus(x) & Gorpus(x) & Lorpus(x)))", "exists x.(Sally(x) & -Numpus(x) & Gorpus(x) & Lorpus(x))", "all x y z.((Sally(x) & Numpus(y) & Gorpus(z)) -> (-Numpus(x) & Gorpus(x) & Lorpus(x)))", "(all x.(Sally(x) -> -Numpus(x)) & all y.(Sally(y) -> Gorpus(y)) & all z.(Sally(z) -> Lorpus(z))))"]}
{"id": "prontoqa_train_539", "nl": "Impuses are brimpuses.", "fol": "all x. (impus(x) -> brimpus(x))", "prediction": ["all x.(Impus(x) -> Brimpuse(x))", "all x.(Impuse(x) -> Brimpuse(x))", "(all x.(Impuse(x) -> Brimpuse(x)))", "all x.(Impus(x) -> Brimbus(x))", "all x y.((Impus(x) & Brimpuse(y)) -> Is(x,y))", "all x y.((Impus(x) & Brimpus(y)) -> (Brimpus(x) & Brimpus(y)))", "all x.(Impuse(x) -> Brimbus(x))", "all x.(Impuss(x) -> Brimpuse(x))", "all x.(Impus(x) -> Brimpuse(x))", "(all x.(Impus(x) -> Brimpuse(x)))", "(all x.(Impuse(x) -> Brimpuse(x)))", "all x.(Impuse(x) -> Brimpuse(x))", "all x.(Impect(x) -> Brimbus(x))", "all x.(Imbus(x) -> Brimbus(x))", "all x.(Impuse(x) -> Brimpuse(x))", "all x.(Impuse(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_540", "nl": "Rex is a numpus, Rex is a dumpus, and Rex is not a brimpus.", "fol": "(numpus(Rex) & dumpus(Rex) & -brimpus(Rex))", "prediction": ["(all x.(Rex(x) -> Numpus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> -Brimpus(x)))", "all x y z.((Rex(x) & Numpus(y) & Dumpus(z)) -> (Numpus(x) & Dumpus(x) & -Brimpus(x)))", "(all x y z.((Rex(x) & Numpus(y)) -> Numpus(x)) & ((Rex(z) & Dumpus(z)) -> -Brimpus(z)))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Dumpus(y) -> -Brimpus(y)))", "all x y z.((Rex(x) & Numpus(y) & Dumpus(z)) -> (Numpus(x) | Dumpus(z) | -Brimpus(x)))", "all x.(Rex(x) -> (Numpus(x) & Dumpus(x) & -Brimpus(x)))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Rex(y) -> Dumpus(y)) & all z.(Rex(z) -> -Brimpus(z))))", "(all x.(Rex(x) -> Numpus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> -Brimpus(x)))", "(all x.(Rex) -> Numpus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> -Brimpus(x)))", "(all x y z.((Rex(x) & Numpus(y)) -> Numpus(x)) & ((Rex(z) & Dumpus(z)) -> -Brimpus(z)))", "(all x y z.((Rex(x) & Numpus(y) & Dumpus(z)) -> Numpus(x)) & ((Rex(x) & Dumpus(x)) -> -Brimpus(x)))", "all x y z.((Rex(x) & Numpus(x) & Dumpus(y) & Brimpus(z)) -> (Numpus(x) | Dumpus(y) & -Brimpus(z)))", "all x y z.((Rex(x) & Numpus(y) & Dumpus(z)) -> (Numpus(x) & Dumpus(x) & -Brimpus(x)))", "all x.(Rex(x) -> (Numpus(x) & Dumpus(x) & -Brimpus(x)))", "(all x.(Rex(x) -> Numpus(x)) & (Rex(x) -> Dumpus(x)) & -Brimpus(x)))", "all x y z.((Rex(x) & Numpus(y) & Dumpus(z)) -> (Numpus(x) | Dumpus(z) & -Brimpus(x)))"]}
{"id": "prontoqa_train_541", "nl": "Yumpuses are gorpuses.", "fol": "all x. (yumpus(x) -> gorpus(x))", "prediction": ["all x.(Yumpus(x) -> Gorpus(x))", "all x.(Yumpus(x) -> Gorpus(x))", "(Gorpuse(y) & Yumpus(z))", "all x y.((Yumpus(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Yumpus(x) -> Gorpus(x))", "all x y.((Yumpus(x) & Gorpus(y)) -> Gorpus(x))", "all x y.((Yumpuse(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Umahawk(x) -> Gorpuse(x))", "all x.(Yumpus(x) -> Gorpuse(x))", "(all x.(Yumpus(x) -> Gorpus(x))", "all x.(Yumpus(x) -> Gorpuse(x))", "all x.(Umahawk(x) -> Gorpuse(x))", "all x.(Yumpus(x) -> Gorpuse(x))", "all x.(Yumpus(x) -> Gorpuse(x))", "All x.(Yumpuse(x) -> Gorpuse(x))", "all x.(Yumpus(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_542", "nl": "Alex is a lempus and Alex is a jompus and Alex is not a gorpus.", "fol": "(lempus(Alex) & jompus(Alex) & -gorpus(Alex))", "prediction": ["all x y z.((Alex(x) & Lempus(x) & Jompus(y) & Gorpus(z)) -> (Lempus(x) & Jompus(y) & -Gorpus(z)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Jompus(y)) & all z.(Alex(z) -> -Gorpus(z))))", "(all x.(Alex(x) -> Lempus(x)) & (Alex(x) -> Jompus(x)) & (Alex(x) -> -Gorpus(x)))", "all x y.((Alex(x) & Lempus(x) & Jompus(y)) -> (-Gorpus(x)))", "all x y z.((Alex(x) & Lempus(x) & Jompus(y) & -Gorpus(z)) -> (Lempus(x) & Jompus(y) & -Gorpus(z)))", "(all x.(Alexa(x) -> Lempus(x)) & all y.(Alexa(y) -> Jompus(y)) & all z.(Alexa(z) -> -Gorpus(z))))", "all x.(Alex(x) -> (Lempus(x) & Jompus(x) & -Gorpus(x)))", "(all x y.(Lempus(x) -> Alex(x)) & (Jompus(y) -> Alex(y)) & (Gorpus(y) -> Alex(y)))", "exists x.(Alex(x) & Lempus(x) & Jompus(x) & -Gorpus(x))", "(all x.(Alexa(x) -> Lempus(x)) & (Alexa(x) -> Jompus(x)) & (Alexa(x) -> -Gorpus(x)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Jompus(y)) & all z.(Alex(z) -> -Gorpus(z))))", "all x.(Alex(x) -> (Lempus(x) & Jompus(x) & -Gorpus(x)))", "all x y z.((Alex(x) & Lempus(x) & Jompus(y) & Gorpus(z)) -> (Lempus(x) & Jompus(y) & -Gorpus(z)))", "all x y.((Alex(x) & Lempus(x) & Jompus(y)) -> (-Gorpus(x)))", "(all x y z.(Alex(x) -> Lempus(x)) & (Alex(y) -> Jompus(y)) & (Alex(z) -> -Gorpus(z))))", "all x.(Alex(x) -> (Lempus(x) & Jompus(x) & -Gorpus(x)))"]}
{"id": "prontoqa_train_543", "nl": "Wren is not a yumpus and Wren is a gorpus and Wren is a wumpus.", "fol": "(-yumpus(Wren) & gorpus(Wren) & wumpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Yumpus(x)) & ((Wren(x) & Gorpus(x))) & ((Wren(x) & Wumpus(x))))", "all x y z.((Wren(x) & Yumpus(y) & Gorpus(z)) -> (-Yumpus(x) & Gorpus(x) & Wumpus(x)))", "(all x.(Wren(x) -> -Yumpus(x)) & all y.(Wren(y) -> Gorpus(y)) & all z.(Wren(z) -> Wumpus(z))))", "(all x y z.((Wren(x) & Yumpus(y)) -> -Yumpus(x)) & ((Wren(z) & Gorpus(z)) -> Wumpus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Gorpus(z)) -> (-Yumpus(x) & Gorpus(x) & Wumpus(x)))", "(all x y.(Wren(x) -> -Yumpus(x)) & ((Wren(y) & Gorpus(y)) | (Wren(y) & Wumpus(y))))", "all x.(Wren(x) -> (-Yumpus(x) & Gorpus(x) & Wren(x)))", "(all x.(Wren(x) -> -Yumpus(x)) & (Wren(x) -> Gorpus(x)) & (Wren(x) -> Wumpus(x)))", "exists x.(Wren(x) & -Yumpus(x) & Gorpus(x) & Wumpus(x))", "all x y.((Wren(x) & Gorpus(y)) -> (-Yumpus(x) & -Wumpus(y)))", "all x y.((Wren(x) & Wren(y)) -> (-Yumpus(x) & Gorpus(y) & Wumpus(y)))", "(all x y.(Yumpus(x) -> -Yumpus(x)) & (Gorpus(y) -> Wumpus(y)))", "all x y z.((Wren(x) & Yampus(y) & Gorpus(z)) -> (-Yumpus(x) & Gorpus(x) & Wumpus(x)))", "(all x.(Wren(x) -> -Yumpus(x)) & all y.(Wren(y) -> Gorpus(y)) & all z.(Wren(z) -> Wumpus(z))))", "all x y z.((Wren(x) & Yumpus(y) & Gorpus(z)) -> (-Yumpus(x) & Gorpus(x) & Wumpus(x)))", "(all x.(Wren(x) -> -Yumpus(x)) & all y.(Wren(y) -> Gorpus(y)) & all z.(Wren(z) -> Wumpus(z))))"]}
{"id": "prontoqa_train_544", "nl": "Polly is a grimpus, Polly is a shumpus, and Polly is not a yumpus.", "fol": "(grimpus(Polly) & shumpus(Polly) & -yumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Grimpus(x)) & (Polly(x) -> Humpus(x)) & -Yumpus(x)))", "all x y z.((Polly(x) & Grimpus(x) & Polly(y) & Humpus(z)) -> (Shumpus(y) & -Yumpus(z)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Polly(y) -> Shumpus(y)) & all z.(Polly(z) -> -Yumpus(z))))", "(all x y z.(Polly(x) -> Grimpus(x)) & (Polly(y) -> Humpus(y)) & (Polly(z) -> -Yumpus(z))))", "(all x y z.((Polly(x) & Grimpus(x)) -> Polly(y)) & ((Polly(z) & Humpus(z))) -> (Shumpus(z) & -Yumpus(z))))", "(all x.(Polly(x) -> Grimpus(x)) & (Polly(x) -> Shumpus(x)) & -Yumpus(x)))", "all x.(Polly(x) -> (Grimpus(x) | Shumpus(x) | -Yumpus(x)))", "all x y z.((Polly(x) & Grumpus(y) & Shumpus(z)) -> (Grimpus(x) | Shumpus(y) | -Yumpus(z)))", "exists x.(Polly(x) & Grimpus(x) & Shumpus(x) & -Yumpus(x))", "(all x y z.((Polly(x) & Grimpus(y)) -> (Smooth(x) & Shumpus(y))) & ((Polly(z) & -Yumpus(z)) -> (Smooth(z) & -Yumpus(z))))", "all x y z.((Polly(x) & Grimpus(x) & Polly(y) & Humpus(z)) -> (Shumpus(y) & -Yumpus(z)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Polly(y) -> Humpus(y))) & all z.(Polly(z) -> -Yumpus(z))))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Polly(y) -> Shumpus(y))) & all z.(Polly(z) -> -Yumpus(z)))", "(all x.(Polly(x) -> Grumpus(x)) & (Polly(x) -> Humpus(x)) & (Polly(x) -> -Yumpus(x)))", "all x y z.((Polly(x) & Grimpus(x) & Shumpus(y) & -Yumpus(z)) -> (Smooth(x) & Shumpus(y) & -Yumpus(z)))", "all x y z.((Polly(x) & Grimpus(y) & Shumpus(z) & -Yumpus(z)) -> (Grimpus(x) | Shumpus(x) | Polly(x)))"]}
{"id": "prontoqa_train_545", "nl": "Polly is not a numpus.", "fol": "-numpus(Polly)", "prediction": ["all x.(Polly(x) -> -Numpus(x))", "Polly is not a Numpus(Polly)", "(-numpus(Polly))", "all x.(Polly(x) -> -Numpus(x))", "(-Numpus(Polly))", "all x.(Polly(x) -> -Numpus(x))", "Polly is not Numpus.", "-Numpus(Polly)", "Polly is not a Numpus.", "(-numpus(Polly))", "all x.(Polly(x) -> -Numpus(x))", "all x.(Polly(x) -> -Numpus(x))", "-Numpus(Polly)", "All x.(Polly(x) -> -Numpus(x))", "(-numpus(Poly))", "(-Numpus(Polly))"]}
{"id": "prontoqa_train_546", "nl": "Rex is a rompus and Rex is not a lempus and Rex is a tumpus.", "fol": "(rompus(Rex) & -lempus(Rex) & tumpus(Rex))", "prediction": ["all x y z.((Rex(x) & Rompus(x) & Lempus(y) & Tumpus(z)) -> (Rompus(x) & -Lempus(y) & Tumpus(z)))", "(all x.(Rex(x) -> Rompus(x)) & (-Lempus(x) & Tumpus(x)))", "all x y z.((Rompus(x) & Lempus(y) & Tumpus(z)) -> (Rompus(x) & -Lempus(y) & Tumpus(z)))", "(all x.(Rex(x) -> Rompus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Tumpus(x)))", "(all x y.(Rompus(x) -> Rex)) & (Lempus(y) -> Rex)) & (Tumpus(y) -> Rex)))", "(all x.(Rompus(x) -> Rex)) & all y.(Lempus(y) -> Rex)) & all z.(Tumpus(z) -> Rex)))", "(all x y z.((Rex(x) & Rompus(y)) -> (Rompus(x) & -Lempus(y)) & ((Rex(z) & Tumpus(z))) -> (Tumpus(z))))", "all x y.((Rex(x) & Rompus(x) & Rex(y)) -> (-Lempus(y) & Tumpus(y)))", "all x.(Rex(x) -> (Rompus(x) & -Lempus(x) & Tumpus(x)))", "all x y z.((Rex(x) & Rompus(y) & Lempus(z)) -> (Rompus(x) & -Lempus(y) & Tumpus(z)))", "all x.(Rompus(x) & -Lempus(x) & Tumpus(x))", "(all x y.(Rompus(x) -> Rex)) & (-Lempus(y) & Tumpus(y)))", "all x y.((Rex(x) & Rompus(x) & Lempus(y)) -> (Tumpus(x) | Tumpus(y)))", "(all x.(Rompus(x) -> Rex)) & all y.(Lempus(y) -> Rex)) & all z.(Tumpus(z) -> Rex)))", "(all x.(Rex(x) -> Rompus(x)) & (-Lempus(x) & Tumpus(x)))", "(all x.(Rex(x) -> Rompus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Tumpus(x)))"]}
{"id": "prontoqa_train_547", "nl": "Rex is not a numpus.", "fol": "-numpus(Rex)", "prediction": ["Rex is not Numpus(x)", "(-numpus(Rex))", "all x.(Rex(x) -> -Numpus(x))", "-Numpus(Rex)", "Rex is not a Numpus.", "Rex is not Numpus(x)", "(-numpus(Rex))", "all x.(Rex(x) -> -Numpus(x))", "(-Numpus(Rex))", "Rex -Numpus(Rex)", "-Numpus(Rex)", "all x.(Rex(x) -> -Numpus(x))", "Rex is not Numpus.", "-Numpus(Rex)", "all x.(Rex(x) -> -Numpus(x))", "(-numpus(Rex))"]}
{"id": "prontoqa_train_548", "nl": "Polly is a shumpus and Polly is not a zumpus and Polly is a dumpus.", "fol": "(shumpus(Polly) & -zumpus(Polly) & dumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Humpus(x)) & (Polly(x) -> -Tompus(x)) & (Polly(x) -> Dumpus(x)))", "(all x.(Shumpus(x) -> Polly)) & (-Zumpus(x) -> Polly)) & (-Shumpus(x) -> Polly)) & (-Shumpus(x) -> Polly)) & (-Shumpus(x) -> Polly)) & (-Shumpus(x) -> Polly)) & (-Shumpus(x) -> Polly))", "all x y z.((Polly(x) & Shumpus(x) & Polly(y) & Zumpus(z)) -> (-Shumpus(y) & Dumpus(y)))", "all x y.((Polly(x) & Shumpus(x)) -> (-Zumpus(y) & Dumpus(x)))", "(all x.(Polly(x) -> Shumpus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Dumpus(x)))", "(all x y.(Shumpus(x) -> Polly(x)) & (-Shumpus(y) -> Polly(y)) & (Dumpus(y) -> Polly(y)))", "all x.(Polly(x) -> (Shumpus(x) & -Zumpus(x) & Dumpus(x)))", "(all x y z.(Shumpus(x) -> Polly(y)) & (Shumpus(z) | -Sumpus(z))) & (Dumpus(y) -> Polly(y)))", "all x y z.((Polly(x) & Shumpus(x) & Polly(y) & Zumpus(z)) -> (Shumpus(x) & -Tompus(y) & Dumpus(z)))", "all x y.((Polly(x) & Shumpus(x) & Polly(y)) -> (-Zumpus(y) & Dumpus(y)))", "(all x y.(Shumpus(x) -> Polly(x)) & (NoTompus(y) -> Polly(y))) & (Dumpus(y) -> Polly(y)))", "(all x.(Shumpus(x) -> Polly)) & (-Shumpus(x) & Dumpus(x)))", "all x y z.((Polly(x) & Shumpus(x) & Polly(y) & Dumpus(z)) -> (-Shumpus(y) & -Tompus(y) & Dumpus(z)))", "(all x.(Polly(x) -> Humpus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Dumpus(x)))", "exists x.(Shumpus(x) & Polly(x) & -Zumpus(x) & Dumpus(x))", "all x.(Polly(x) -> (Shumpus(x) & -Zumpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_549", "nl": "Polly is not a yumpus.", "fol": "-yumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Yumpus(x))", "(-Yumpus(Polly))", "all x.(Polly(x) -> -Yumpus(x))", "Polly is notYumpus(Polly)", "(-Yumpus(Polly))", "Polly is notyumpus.", "all x.(Polly(x) -> -Yumpus(x))", "(Yumpus(Polly) & -Yumpus(Polly))", "all x.(Polly(x) -> -Yumpus(x))", "(-Yumpus(Polly))", "exists x.(Polly(x) & -Yumpus(x))", "Polly is notYumpus.", "-Yumpus(Polly)", "all x.(Polly(x) -> -Yumpus(x))", "-yumpus(polly)", "(-Yumpus(Polly))"]}
{"id": "prontoqa_train_550", "nl": "Impuses are shumpuses.", "fol": "all x. (impus(x) -> shumpus(x))", "prediction": ["all x.(Impuse(x) -> Shumpus(x))", "all x.(Impuse(x) -> Shumpus(x))", "(all x.(Impuse(x) -> Humpback(x)))", "all x.(Impuse(x) -> Shumpus(x))", "all x y.((Impuse(x) & Shumpus(y)) -> Shumpus(x))", "all x.(Impus(x) -> Shumpus(x))", "all x.(Impuse(x) -> Shumpus(x))", "(Shumpuse(impus) & HasShump(impus))", "all x y.((Impuse(x) & Shumpus(y)) -> Shumpus(x))", "(all x.(Impuse(x) -> Humpus(x)))", "all x.(Impuse(x) -> Humpus(x))", "all x.(Impuse(x) -> Shumpus(x))", "all x.(Impus(x) -> Shumpus(x))", "all x.(Impuse(x) -> Humpus(x))", "all x.(Impuse(x) -> Shumpuse(x))", "all x.(Shumpus(x) -> Impuse(x))"]}
{"id": "prontoqa_train_551", "nl": "Fae is a yumpus, Fae is not a shumpus, and Fae is a zumpus.", "fol": "(yumpus(Fae) & -shumpus(Fae) & zumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Yampus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Zumpus(x)))", "all x y z.((Fae(x) & Yampus(y) & Fae(z)) -> (-Shumpus(z) & Zumpus(x)))", "(all x y z.((Fae(x) & Yumpus(y)) -> (Yumpus(x) & -Shumpus(y)) & ((Fae(z) & Zumpus(z)) -> Zumpus(z)))", "(all x.(Fae(x) -> Yumpus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Zumpus(x)))", "(all x y z.((Fae(x) & Yumpus(y) & -Shumpus(z)) -> Yampus(x)) & ((Fae(x) & Zumpus(x)) -> Zumpus(x)))", "(all x.(Fae(x) -> Yumpus(x)) & all y.(Fae(y) -> -Shumpus(y)) & all z.(Fae(z) -> Zumpus(z))))", "all x y z.((Fae(x) & Yumpus(y) & Fae(z)) -> (-Shumpus(z) & Zumpus(x)))", "all x.(Fae(x) -> (Yumpus(x) & -Shumpus(x) & Zumpus(x)))", "(yumpus(f) | -shumpus(f) | Zumpus(f)))", "all x y z.(Fae(x) -> (Yumpus(x) & -Shumpus(y) & Zumpus(z)))", "all x y z.((Fae(x) & Yampus(y) & Fae(z)) -> (Yumpus(x) & -Shumpus(z) & Zumpus(x)))", "(all x.(Fae(x) -> Yampus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Zumpus(x)))", "(all x y z.((Fae(x) & Yumpus(y)) -> (Yumpus(x) & -Shumpus(y)) & ((Fae(z) & Zumpus(z)) -> Zumpus(z)))", "exists x.(Fae(x) & (Yumpus(x) | -Shumpus(x) | Zumpus(x)))", "(all x.(Fae(x) -> Yampus(x)) & (-Fae(x) -> Humpus(x)) & (Fae(x) -> Zumpus(x)))", "all x y z.(Fae(x) & Yampus(y) & Fae(z) & -Shumpus(z) & Zumpus(x))"]}
{"id": "prontoqa_train_552", "nl": "Fae is not an impus.", "fol": "-impus(Fae)", "prediction": ["-IsFae(f)", "all x.(Fae(x) -> -Impossible(x))", "-Impossible(Fae)", "(IsFae(f) & -IsIsIsIs(f))", "(Fae is notImpossible(fae))", "all x.(Fae(x) -> -Impossible(x))", "Fae is not impus.", "is not(Fae) & IsNot(Fae))", "-IllegalFae(f)", "-(Fae(f) & IsNot(f))", "-IsFae(f)", "(-Impossible(Fae))", "(IsFae(f) & -IsFae(f))", "all x.(Fae(x) -> -Impossible(x))", "-IsFae(f)", "-Impossible(Fae)"]}
{"id": "prontoqa_train_553", "nl": "Each vumpus is a lempus.", "fol": "all x. (vumpus(x) -> lempus(x))", "prediction": ["all x.(Vumpus(x) -> Lempus(x))", "all x.(Vumpus(x) -> Lempus(x))", "(all x.(Vumpus(x) -> Lempus(x))", "all x y.((Vumpus(x) & Lempus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Lempus(x))", "all x.(Vumpus(x) -> Lempus(x))", "all x y.((Vumpus(x) & Lempus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Lempus(x))", "all x.(Vumpus(x) -> Lempus(x))", "all x.(Vumpus(x) -> Lempus(x))", "all x.(Vumpus(x) -> Lempus(x))", "all x.(Vumpus(x) -> Lempus(x))", "exists x.(Vumpus(x) & Lempus(x))", "exists x.(Vumpus(x) & Lempus(x))", "exists x.(Vumpus(x) & Lempus(x))", "exists x.(Vumpus(x) & Lempus(x))"]}
{"id": "prontoqa_train_554", "nl": "Stella is not a lempus, Stella is a tumpus, and Stella is a gorpus.", "fol": "(-lempus(Stella) & tumpus(Stella) & gorpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Gorpus(x)))", "all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) & Tumpus(x) & Gorpus(x)))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y)) & all z.(Stella(z) -> Gorpus(z))))", "(all x y z.((Stella(x) & Lempus(y)) -> -Lempus(x)) & ((Stella(z) & Tumpus(z))) -> Gorpus(z)))", "all x.(Stella(x) -> (-Lempus(x) & Tumpus(x) & Gorpus(x)))", "all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) & Tumpus(x) & Gorpus(x)))", "(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Gorpus(x)))", "(all x y z.((Stella(x) & Lempus(y)) -> -Lempus(x)) & ((Stella(z) & Tumpus(z))) -> Gorpus(z)))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y))) & all z.(Stella(z) -> Gorpus(z)))", "all x y z.((Stella(x) & Tumpus(y) & Gorpus(z)) -> (-Lempus(x) & Tumpus(y) & Gorpus(z)))", "exists x.(Stella(x) & -Lempus(x) & Tumpus(x) & Gorpus(x))", "all x y z.(Stella(x) -> (-Lempus(x) & Stella(y) & Tumpus(y) & Gorpus(z)))", "(all x y z.((Stella(x) & Lempus(y)) -> -Lempus(x)) & ((Stella(z) & Tumpus(z)) -> Gorpus(z)))", "all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) | (Tumpus(x) | Gorpus(x))))", "(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Gorpus(x)))", "all x y z.((Stella(x) & Tumpus(y) & Gorpus(z)) -> (-Lempus(x) & Tumpus(y) & Gorpus(z)))"]}
{"id": "prontoqa_train_555", "nl": "Every yumpus is an impus.", "fol": "all x. (yumpus(x) -> impus(x))", "prediction": ["all x.(Yumpus(x) -> IsImpossible(x))", "all x.(Yumpus(x) -> IsIs(x))", "all x y.((Yumpus(x) & IsImpossible(x)) -> IsImpossible(y))", "(all x.(Yumpus(x) -> IsImpossible(x))", "all x.(Yumpus(x) -> Imperator(x))", "all x y.((Yumpus(x) & Yukon(y)) -> IsImpossible(x))", "all x.(Yumpus(x) -> IsImpossible(x))", "all x.(Yumpus(x) -> Impossible(x))", "all x.(Yumpus(x) -> Impeccable(x))", "all x.(Yumpus(x) -> Is(x,y))", "all x.(Yumpus(x) -> IsImpossible(x))", "all x.(Yumpus(x) -> Impossible(x))", "all x.(Yumpus(x) -> Implicator(x))", "exists x.(Yumpus(x) & Is(x,y))", "exists x.(Yumpus(x) & IsImpossible(x))", "exists x.(yumpus(x) & Impossible(x))"]}
{"id": "prontoqa_train_556", "nl": "Polly is a wumpus and Polly is a jompus and Polly is not an impus.", "fol": "(wumpus(Polly) & jompus(Polly) & -impus(Polly))", "prediction": ["(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> -Impossible(x))))", "all x y z.((Polly(x) & Wumpus(x) & Jompus(y) & Is(z)) -> (Wumpus(x) & Jompus(y) & -Issue(z)))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> Jompus(y)) & all z.(Polly(z) -> -Impossible(z))))", "all x y.((Polly(x) & Wumpus(x) & Polly(y)) -> (Jompus(y) & -Impossible(y)))", "(all x y.(Wumpus(x) & Polly(y)) & (Jompus(y) & -Impossible(y)))", "(all x y z.((Polly(x) & Wumpus(y)) -> (Wumpus(x) & Jompus(y))) & ((Polly(z) & Issue(z)) -> -Issue(z)))", "all x y z.((Polly(x) & Wumpus(x) & Jompus(y) & Is(z)) -> (Wumpus(x) & Jompus(y) & -Issue(z)))", "all x.(Polly(x) -> (Wumpus(x) & Jompus(x) & -Impossible(x)))", "all x y z.((Polly(x) & Wumpus(y) & Jompus(z)) -> (Wumpus(x) & Jompus(z) & -Impossible(x)))", "all x y.((Polly(x) & Wumpus(x) & Jompus(y)) -> (Wumpus(x) & Jompus(y) & -Impossible(x)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> -Impossible(x))))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> Jompus(y))) & all z.(Polly(z) -> -Impossible(z)))", "(all x y.(Wumpus(x) -> Polly(y)) & (Jimpus(y) -> Polly(y)) & -Iliot(y)))", "exists x.(Polly(x) & (Wumpus(x) | Jompus(x) | Imperator(x)))", "all x.(Polly(x) -> (Wumpus(x) & Jompus(x) & -Ilimination(x)))", "(all x.(Poly(x) -> Wumpus(x)) & (Poly(x) -> Jompus(x)) & (Poly(x) -> -Illegal(x)))"]}
{"id": "prontoqa_train_557", "nl": "Rex is a lorpus, Rex is not a grimpus, and Rex is a brimpus.", "fol": "(lorpus(Rex) & -grimpus(Rex) & brimpus(Rex))", "prediction": ["(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> -Grimpus(x)) & (Rex(x) -> Brimpus(x)))", "all x y z.((Rex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) & -Grimpus(x) & Brimpus(x)))", "(all x y z.((Rex(x) & Lorpus(y)) -> (Lorpus(x) & -Grimpus(y)) & ((Rex(z) & Brimpus(z)) -> (Brimpus(z)))))", "all x.(Rex(x) -> (Lorpus(x) | -Grimpus(x) | Brimpus(x)))", "(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> -Grimpus(x)) & (Rex(x) -> Brimpus(x)))", "all x y z.((Rex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) & -Grimpus(x) & Brimpus(x)))", "(all x y z.((Rex(x) & Lorpus(y)) -> (Lorpus(x) | -Grimpus(y)) | (Brimpus(z) & -Lorpus(z))))", "(all x.(Rex(x) -> Lorpus(x)) & all y.(Rex(y) -> -Grimpus(y))) & all z.(Rex(z) -> Brimpus(z)))", "(all x.(Rex(x) -> Lorpus(x)) & (-Grimpus(x) & (Brimpus(x)))))", "(all x y z.((Rex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) & -Grimpus(z)) & (Brimpus(x) -> (Brimpus(x))))", "(all x.(Rex) -> Lorpus(x)) & (Rex(x) -> -Grimpus(x)) & (Rex(x) -> Brimpus(x)))", "all x y z.((Lorpus(x) & Grimpus(y) & Brimpus(z)) -> (Lorpus(x) | -Grimpus(y) & Brimpus(z)))", "all x.(Rex(x) -> (Lorpus(x) | -Grimpus(x) | Brimpus(x)))", "all x y z.((Rex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) & -Grimpus(x) & Brimpus(x)))", "all x y z.((Rex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) | Brimpus(x)))", "(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> -Grimpus(x)) & (Rex(x) -> Brimpus(x)))"]}
{"id": "prontoqa_train_558", "nl": "Rompuses are shumpuses.", "fol": "all x. (rompus(x) -> shumpus(x))", "prediction": ["all x.(Rompus(x) -> Shumpus(x))", "all x.(Rompus(x) -> Shumpus(x))", "all x y.((Rompus(x) & Shumpus(y)) -> Shumpus(x))", "(all x.(Rompus(x) -> Humptus(x)))", "(Shumpuse(rompus) & -Shumpuse(rompus))", "all x.(Rompus(x) -> Shumpus(x))", "(Shumpuse(rompus) & Shumpus(rompus))", "all x.(Rompuse(x) -> Shumpus(x))", "all x y.((Rompus(x) & Shumpus(y)) -> Shumpus(x))", "all x.(Rompus(x) -> Shumpus(x))", "all x.(Rompes(x) -> Shumpus(x))", "all x.(Rompus(x) -> Shumpus(x))", "all x.(Rompus(x) -> Humpus(x))", "all x.(Rompuse(x) -> Shumpuse(x))", "All x.(Rompes(x) -> Shumpus(x))", "all x.(Rompus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_559", "nl": "Rex is not a shumpus and Rex is a yumpus and Rex is a zumpus.", "fol": "(-shumpus(Rex) & yumpus(Rex) & zumpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Shumpus(x)) & (Yumpus(x) & Zumpus(x)))", "all x y z.((Rex(x) & Humpus(y) & Yumpus(z)) -> (-Shumpus(x) & Yumpus(y) & Zumpus(z)))", "(all x.(Rex(x) -> -Shumpus(x)) & all y.(Yumpus(y) & all z.(Zumpus(z))) -> -Shumpus(x)))", "(all x y z.((Rex(x) & Humpus(y) & Yumpus(z)) -> -Shumpus(x)) & ((Rex(x) & Yumpus(x)) -> Zumpus(x)))", "all x.(Rex(x) -> (-Shumpus(x) & Yumpus(x) & Zumpus(x)))", "all x y.((Rex(x) & Humpus(y)) -> (-Shumpus(x) & Yumpus(y) & Zumpus(x)))", "all x y z.((Rex(x) & Humpus(y) & Yumpus(z)) -> (-Shumpus(x) & Yumpus(y) & Zumpus(z)))", "(-Shumpus(rex) & Yumpus(rex) & Zumpus(rex))", "(all x y z.((Rex(x) & Humpus(y) & Yumpus(z)) -> -Shumpus(x)) & ((Rex(x) & Yumpus(x)) -> Zumpus(x)))", "(all x y.(Rex(x) -> -Shumpus(x)) & (Yumpus(y) & Zumpus(y)))", "(all x.(Rex(x) -> -Shumpus(x)) & (Yumpus(x) | Zumpus(x)))", "all x y.((Rex(x) & Humpus(y) & Zumpus(x)) -> (-Shumpus(x) & Yumpus(y) & Zumpus(x)))", "all x.(Rex(x) -> (-Shumpus(x) & Yumpus(x) & Zumpus(x)))", "(all x.(Rex(x) -> -Shumpus(x)) & all y.(Yumpus(y) & all z.(Zumpus(z))) -> -Shumpus(x)))", "all x y z.((Rex(x) & Humpus(y) & Yumpus(z)) -> (-Shumpus(x) & Yumpus(y) & Zumpus(z)))", "(all x.(Rex(x) -> -Shumpus(x)) & (Yumpus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_560", "nl": "Wren is a wumpus, Wren is a grimpus, and Wren is not a zumpus.", "fol": "(wumpus(Wren) & grimpus(Wren) & -zumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Wumpus(x)) & (Wren(x) -> Grimpus(x)) & (Wren(x) -> -Zumpus(x)))", "all x y z.((Wren(x) & Grimpus(y) & Zumpus(z)) -> (Wumpus(x) & Grimpus(y) & -Wren(z)))", "(all x.(Wren(x) -> Wumpus(x)) & all y.(Wren(y) -> Grimpus(y)) & all z.(Wren(z) -> -Zumpus(z))))", "(all x y z.((Wren(x) & Wren(y) & Grimpus(z)) -> Wumpus(x)) & ((Wren(y) & Grimpus(y)) -> -Tompus(y)))", "all x y z.((Wren(x) & Grimpus(y) & Zumpus(z)) -> (Wumpus(x) | Grimpus(y) | -Wren(z)))", "(all x y z.((Wren(x) & Wren(y)) -> Wumpus(x)) & ((Wren(z) & Grimpus(z))) -> -Zumpus(z)))", "(all x.(Wren(x) -> Wumpus(x)) & (Wren(x) -> Grimpus(x)) & (Wren(x) -> -Zumpus(x)))", "all x.(Wren(x) -> (Wumpus(x) & Grimpus(x) & -Zumpus(x)))", "(all x y z.((Wren(x) & Wumpus(y)) -> Wumpus(x)) & ((Wren(z) & Grimpus(z)) -> Wren(z)))", "(all x.(Wren(x) -> Wumpus(x)) & all y.(Wren(y) -> Grimpus(y)) & all z.(Wren(z) -> -Tompus(z))))", "all x y z.((Wren(x) & Grimpus(y) & Zumpus(z)) -> (Wumpus(x) & Grimpus(y) & -Wren(z)))", "(all x.(Wren(x) -> Wumpus(x)) & ((Wren(x) -> Grimpus(x))) & ((Wren(x) -> -Zumpus(x))))", "all x y z.((Wren(x) & Wren(y) & Grimpus(z)) -> (Wumpus(x) & Grimpus(y) & -Zumpus(z)))", "all x y z.((Wren(x) & Grimpus(y) & Zumpus(z)) -> (Wumpus(x) | Grimpus(y) | Wren(z)))", "(all x.(Wren(x) -> Wumpus(x)) & all y.(Wren(y) -> Grimpus(y)) & all z.(Wren(z) -> -Zumpus(z))))", "all x y z.((Wren(x) & Wren(y) & Grimpus(z)) -> (Wumpus(x) & Grimpus(y) & -Zumpus(z)))"]}
{"id": "prontoqa_train_561", "nl": "Wren is not a tumpus.", "fol": "-tumpus(Wren)", "prediction": ["all x.(Wren(x) -> -Tumpus(x))", "(-Tumpus(Wren))", "all x.(Wren(x) -> -Tumpus(x))", "Wren is notTumpus.", "(-Tumpus(Wren))", "all x.(Wren(x) -> -Tumpus(x))", "-Tumpus(Wren)", "(Tumpus(wren) & -Tumpus(wren))", "Wren is notTumpus.", "all x.(Wren(x) -> -Tumpus(x))", "(-Tumpus(Wren))", "-Tumpus(Wren)", "all x.(Wren(x) -> -Tumpus(x))", "all x.(Wren(x) -> -Tumpus(x))", "(-Tumpus(Wren)", "-Tumpus(wren)"]}
{"id": "prontoqa_train_562", "nl": "Rex is a dumpus, Rex is a lempus, and Rex is not a numpus.", "fol": "(dumpus(Rex) & lempus(Rex) & -numpus(Rex))", "prediction": ["(all x.(Rex(x) -> Dumpus(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Numpus(z))))", "all x y z.((Rex(x) & Dumpus(y) & Lempus(z)) -> (Dumps(x) & Lempus(x) & -Numpus(x)))", "(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Numpus(x)))", "(all x y z.((Rex(x) & Dumpus(y)) -> (Dumpus(z) | Lempus(z))) & ((Rex(x) & Numpus(x)) -> -Numpus(x)))", "all x y z.((Rex(x) & Dumpus(y) & Lempus(z)) -> (IsDumpus(x) & IsLempus(x) & IsNumpus(x)))", "all x.(Rex(x) -> (Dumpus(x) & Lempus(x) & -Numpus(x)))", "(all x y z.((Rex(x) & Dumpus(y)) -> Dumpus(x)) & ((Rex(z) & Lempus(z)) -> Numpus(z)))", "all x y z.((Rex(x) & Dumpus(x) & Lempus(y) & Numpus(z)) -> (Dumps(x) & Lempus(y) & -Numpus(z)))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Numpus(z))))", "all x.(Rex(x) -> (Dumps(x) & Lempus(x) & -Numpus(x)))", "(all x.(Rex) -> Dumpus(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Numpus(z)))", "(all x y z.((Rex(x) & Dumpus(x)) -> Rex)) & ((Rex(y) & Lempus(y)) -> Rex)) & ((Rex(z) & Numpus(z)) -> -Numpus(z))))", "(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Numpus(x)))", "all x y z.((Rex(x) & Dumpus(y) & Lempus(z)) -> (Dumpus(x) & Lempus(x) & -Numpus(x)))", "all x y z.((Rex(x) & Dumpus(x) & Lempus(y) & Numpus(z)) -> (Dumpus(x) & Lempus(y) & -Numpus(z)))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Numpus(z))))"]}
{"id": "prontoqa_train_563", "nl": "Every tumpus is a numpus.", "fol": "all x. (tumpus(x) -> numpus(x))", "prediction": ["all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x y.((Tumpus(x) & Numpus(y)) -> Is(x,y))", "(all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x y.((Tumpus(x) & Numpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Number(x))", "exists x.(Tompus(x) & Tumulus(y) & Numpus(z))", "all x.(Tumpus(x) -> Numpus(x))", "exists x.(Tumpus(x) & Number(x))", "exists x.(Tumpus(x) & Numpus(x))"]}
{"id": "prontoqa_train_564", "nl": "Stella is a dumpus and Stella is a brimpus and Stella is not a numpus.", "fol": "(dumpus(Stella) & brimpus(Stella) & -numpus(Stella))", "prediction": ["(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> Brimpus(x)) & (Stella(x) -> -Numpus(x)))", "all x y z.((Stella(x) & Dumpus(x) & Brimpus(y) & Numpus(z)) -> (Dumpus(x) & Brimpus(y) & -Numpus(z)))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> Brimpus(y)) & all z.(Stella(z) -> -Numpus(z))))", "(all x y z.((Stella(x) & Dumpus(x)) -> (Dumpus(x) & Brimpus(y))) & ((Stella(z) & Numpus(z))) -> -Numpus(z)))", "all x.(Stella(x) -> (Dumps(x) & Brimpus(x) & -Numpus(x)))", "(all x y.((Stella(x) & Dumpus(x)) -> (Dumpus(x) & Brimpus(y)) & -Numpus(y)))", "all x y.((Stella(x) & Dumpus(x) & Brimpus(y)) -> (-Numpus(x) & -Dumpus(y)))", "all x y z.((Stella(x) & Dumpus(x) & Brimpus(y) & -Numpus(z)) -> (Dumpus(x) & Brimpus(y) & -Numpus(z)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> Brimpus(x)) & (Stella(x) -> -Numpus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> Brimpus(y))) & all z.(Stella(z) -> -Numpus(z)))", "(all x y.(Stella(x) -> Dumpus(x)) & (Stella(y) -> Brimpus(y)) & (Stella(y) -> -Numpus(y)))", "exists x.(Stella(x) & Dumpus(x) & Brimpus(x) & -Numpus(x))", "all x y z.((Stella(x) & Dumpus(x) & Brimpus(y) & Numpus(z)) -> (Dumpus(x) & Brimpus(y) & -Numpus(z)))", "all x.(Stella(x) -> (Dumpus(x) & Brimpus(x) & -Numpus(x)))", "all x y.((Stella(x) & Dumpus(x) & Brimpus(y)) -> (-Numpus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> Brimpus(x)) & (Stella(x) -> -Numpus(x)))"]}
{"id": "prontoqa_train_565", "nl": "Gorpuses are shumpuses.", "fol": "all x. (gorpus(x) -> shumpus(x))", "prediction": ["all x.(Gorpus(x) -> Shumpus(x))", "all x.(Gorpuse(x) -> Shumpus(x))", "(all x.(Gorpuse(x) -> Humptus(x)))", "all x.(Gorpus(x) -> Shumpus(x))", "all x y.((Gorpuse(x) & Shumpus(y)) -> Shumpus(x))", "(Shumpuse(gorpus) & Shumpus(gorpus))", "(all x.(Gorpuse(x) -> Shumpus(x)))", "all x.(Gorpuse(x) -> Shumpus(x))", "all x y.((Gorpuse(x) & Shumpus(y)) -> Shumpus(x))", "all x.(Gorpus(x) -> Shumpus(x))", "all x.(Gorpuse(x) -> Shumpus(x))", "all x.(Gorpus(x) -> Shumpus(x))", "all x.(Gorpuse(x) -> Shumpuse(x))", "all x.(Gorpus(x) -> Shumpus(x))", "All x.(Gorpuse(x) -> Shumpus(x))", "all x.(Gorpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_566", "nl": "Rex is a zumpus and Rex is a sterpus and Rex is not a shumpus.", "fol": "(zumpus(Rex) & sterpus(Rex) & -shumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Sterpus(x)) & (Rex(x) -> -Shumpus(x)))", "all x y z.((Rex(x) & Zumpus(x) & Sterepus(y) & -Shumpus(z)) -> (Tompus(x) & Sterpus(y) & -Shumpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Sterpus(y)) & all z.(Rex(z) -> -Shumpus(z))))", "all x y.((Rex(x) & Zumpus(x) & Sterpus(y)) -> (-Shumpus(x)))", "(all x y.(Rex(x) -> Zumpus(x)) & (Rex(y) -> Sterpus(y)) & (Rex(y) -> -Shumpus(y)))", "(all x y z.((Rex(x) & Zumpus(x)) -> (Tompus(x) & Sterepus(y))) & ((Rex(z) & -Shumpus(z))) -> (Sterpus(z) & -Shumpus(z))))", "all x y z.((Rex(x) & Zumpus(x) & Sterpus(y) & -Shumpus(z)) -> (Tompus(x) & Sterpus(y) & -Shumpus(z)))", "all x.(Rex(x) -> (Tompus(x) & Sterpus(x) & -Shumpus(x)))", "all x y z.((Rex(x) & Zumpus(x) & Sterus(y) & -Shumpus(z)) -> (Tompus(x) & Sterpus(y) & -Shumpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Sterpus(x)) & (Rex(x) -> -Shumpus(x)))", "all x y.((Rex(x) & Zumpus(x) & Sterepus(y)) -> (Shumpus(x) | -Shumpus(y)))", "all x.(Rex(x) -> (Tompus(x) | Sterpus(x) | -Shumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Sterpus(y)) & all z.(Rex(z) -> -Shumpus(z))))", "(all x y.(Rex(x) -> Zumpus(x)) & (Rex(y) -> Sterpus(y)) & (Rex(y) -> -Shumpus(y)))", "all x y z.((Rex(x) & Zumpus(x) & Sterpus(y) & -Shumpus(z)) -> (Tompus(x) & Sterpus(y) & -Shumpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Sterepus(x)) & (Rex(x) -> -Shumpus(x)))"]}
{"id": "prontoqa_train_567", "nl": "Stella is a rompus, Stella is a sterpus, and Stella is not a wumpus.", "fol": "(rompus(Stella) & sterpus(Stella) & -wumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> -Wumpus(x)))", "all x y z.((Stella(x) & Rompus(x) & Sterpus(y) & -Wumpus(z)) -> (Rompus(x) & Sterpus(y) & -Wumpus(z)))", "(all x.(Stella(x) -> Rompus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Stella(z) -> -Wumpus(z))))", "(all x.(Rompus(x) -> Stella(x)) & (Sterpus(x) -> Stella(x)) & -Wumpus(x)))", "(all x y z.((Stella(x) & Rompus(y)) -> (Rompus(x) | Sterpus(y))) & ((Stella(z) & -Wumpus(z)) -> (Stella(z))))", "all x.(Stella(x) -> (Rompus(x) & Sterpus(x) & -Wumpus(x)))", "all x y z.((Stella(x) & Rompus(x) & Sterpus(y) & -Wumpus(z)) -> (Rompus(x) & Sterpus(y) & -Wumpus(z)))", "(all x.(Rompus(x) -> Stella(x)) & all y.(Sterepus(y) -> Stella(y))) & all z.(Wumpus(z) -> -Wumpus(z)))", "all x y z.((Stella(x) & Rrompus(x) & Stella(y) & Sterpus(y) & -Wumpus(z)) -> (Rompus(x) & Sterpus(y) & -Wumpus(z)))", "(all x y z.((Stella(x) & Rompus(y)) -> (Rompus(x) & Sterpus(y))) & ((Stella(z) & -Wumpus(z)) -> (Stella(z))))", "all x y z.((Stella(x) & Rompus(y) & Sterpus(z)) -> (Rompus(x) | Sterpus(z) | -Wumpus(x)))", "all x.(Stella(x) -> (Rompus(x) | Sterpus(x) | -Wumpus(x)))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> -Wumpus(x)))", "(all x y z.(Rompus(x) -> Stella(x)) & (Sterpus(y) -> Stella(z)) & -Wumpus(z)))", "(all x.(Stella(x) -> Rompus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Stella(z) -> -Wumpus(z))))", "all x y z.((Stella(x) & Rompus(y) & Sterpus(z)) -> (Rompus(x) | Sterpus(z) | -Wumpus(z)))"]}
{"id": "prontoqa_train_568", "nl": "Lorpuses are sterpuses.", "fol": "all x. (lorpus(x) -> sterpus(x))", "prediction": ["all x.(Lorpus(x) -> Sterpuse(x))", "all x y.((Lorpuse(x) & Sterpuse(y)) -> Sterpuse(x))", "all x.(Lorpus(x) -> Sterpuse(x))", "all x.(Lorpuse(x) -> Sterpuse(x))", "(Sterpuse(lorpus) & Sterpuse(lorpus))", "all x.(Lorpus(x) -> Sterpuse(x))", "all x y.((Lorpuse(x) & Sterpuse(y)) -> Sterpuse(x))", "(Sterpuse(lorpes) & Sterpuse(lorpes))", "(Sterpuse(lorpus) & Sterpuse(lorpus))", "all x.(Lorpuse(x) -> Sterpuse(x))", "all x.(Lorpus(x) -> Sterpuse(x))", "all x.(Lorpus(x) -> Steroid(x))", "all x.(Lorpuse(x) -> Sterpuse(x))", "all x.(Lorpuse(x) -> Sterpuse(x))", "all x.(Lorpus(x) -> Sterpuse(x))", "All x.(Lurpuse(x) -> Steroid(x))"]}
{"id": "prontoqa_train_569", "nl": "Sally is a jompus and Sally is a gorpus and Sally is not a sterpus.", "fol": "(jompus(Sally) & gorpus(Sally) & -sterpus(Sally))", "prediction": ["(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Gorpus(x)) & (Sally(x) -> -Sterpus(x)))", "all x y z.((Sally(x) & Jompus(x) & Gorpus(y) & -Sterpus(z)) -> (Jompus(x) & Gorpus(y) & -Sterpus(z)))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Gorpus(y)) & all z.(Sally(z) -> -Sterpus(z))))", "all x y.((Sally(x) & Jompus(x) & Gorpus(y)) -> (Jompus(x) & -Sterpus(y)))", "all x.(Sally(x) -> (Jompus(x) & Gorpus(x) & -Sterpus(x)))", "all x y z.((Sally(x) & Jompus(x) & Gorpus(y) & -Sterpus(z)) -> (Jompus(x) & Gorpus(y) & -Sterpus(z)))", "(all x y.(Jompus(x) -> Sally(x)) & (Gorpus(y) -> Sally(y)) & (Sterpus(y) -> -Sterpus(y)))", "all x y.((Sally(x) & Jompus(x) & Gorpus(y)) -> (Jompus(x) & Gorpus(y) & -Sterpus(y)))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Gorpus(x)) & (Sally(x) -> -Sterepus(x)))", "all x.(Sally(x) -> (Jompus(x) | Gorpus(x) | -Sterpus(x)))", "(all x.(Jompus(x) -> Sally)) & (Gorpus(x) -> Sally)) & (Sterpus(x) -> -Sterpus(x)))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Gorpus(y)) & all z.(Sally(z) -> -Sterepus(z))))", "exists x.(Sally(x) & Jompus(x) & Gorpus(x) & -Sterpus(x))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Gorpus(x)) & (Sally(x) -> -Sterpus(x)))", "(all x y.(Jompus(x) -> Sally(x)) & (Gorpus(y) -> Sally(y)) & (Sterpus(y) -> -Sterpus(y)))", "all x.(Sally(x) -> (Jompus(x) | Gorpus(x) | -Sterpus(x)))"]}
{"id": "prontoqa_train_570", "nl": "Sally is not a lorpus.", "fol": "-lorpus(Sally)", "prediction": ["Sally is not a lorpus.", "all x.(Sally(x) -> -Lorpus(x))", "(-Lorpus(Sally))", "Sally -Lorpus(Sally)", "Sally is not a lorpus.", "all x.(Sally(x) -> -Lorpus(x))", "Sally n'est pas lorpus.", "(-Lorpus(Sally))", "Sally is not a lorpus.", "-Lorpus(Sally)", "all x.(Sally(x) -> -Lorpus(x))", "Sally -Lorpus(Sally)", "Sally is not a lorpus.", "(-Lorpus(Sally))", "-Lorpus(Sally)", "Sally is not a lorpus."]}
{"id": "prontoqa_train_571", "nl": "Every lempus is a gorpus.", "fol": "all x. (lempus(x) -> gorpus(x))", "prediction": ["all x.(Lempus(x) -> Gorpus(x))", "all x.(Lempus(x) -> Gorpus(x))", "all x y.((Lempus(x) & Gorpus(y)) -> HasLempus(x,y))", "all x.(Lempus(x) -> Gorpus(x))", "all x y.((Lempus(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Lempus(x) -> Gorpus(x))", "all x y.((Lempus(x) & Gorpus(y)) -> Is(x,y))", "all x.(Lempus(x) -> Gorpus(x))", "all x.(Lempus(x) -> Gorpus(x))", "all x.(Lempus(x) -> Gorpus(x))", "all x.(Limpus(x) -> Gorpus(x))", "all x.(Lempus(x) -> Gorpus(x))", "all x.(Limpus(x) -> Gorpus(x))", "exists x.(Lempus(x) & Gorpus(x))", "exists x.(Lempus(x) & Gorpus(x))", "exists x.(Lempus(x) & Gorpus(x))"]}
{"id": "prontoqa_train_572", "nl": "Wren is a tumpus and Wren is a wumpus and Wren is not a gorpus.", "fol": "(tumpus(Wren) & wumpus(Wren) & -gorpus(Wren))", "prediction": ["(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Wumpus(x)) & (Wren(x) -> -Gorpus(x)))", "all x y z.((Wren(x) & Tumpus(x) & Wren(y) & Wormpus(z)) -> (Tumpus(x) & Wren(y) & -Gorpus(y)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Wumpus(y)) & all z.(Wren(z) -> -Gorpus(z))))", "(all x y.(Wren(x) -> Tumpus(x)) & (Wren(y) -> Wumpus(y)) & (Wren(y) -> -Gorpus(y)))", "(all x y z.((Wren(x) & Tumpus(y)) -> Tumpus(x)) & ((Wren(z) & Wormpus(z))) -> Wren(x)) & ((Wren(x) & Gorpus(x)) -> -Gorpus(x)))", "all x y z.((Wren(x) & Tumpus(y) & Wren(z)) -> (Tumpus(x) & Wumpus(z) & -Gorpus(z)))", "all x y.((Wren(x) & Tumpus(x) & Wren(y)) -> (Wumpus(y) & -Gorpus(y)))", "exists x.(Wren(x) & Tumpus(x) & Wren(x) & Wren(x) & -Gorpus(x))", "all x.(Wren(x) -> (Tumpus(x) & Wren(x) & -Gorpus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Wumpus(x)) & (Wren(x) -> -Gorpus(x)))", "all x y z.((Wren(x) & Tumpus(y) & Wren(z)) -> (Tumpus(x) & Wumpus(z) & -Gorpus(z)))", "(all x y.(Tumpus(x) -> Wren(y)) & (Wumpus(y) -> Wren(y)) & (Gorpus(y) -> -Wren(y)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Wumpus(y)) & all z.(Wren(z) -> -Gorpus(z))))", "all x y.((Wren(x) & Tumpus(x) & Wren(y)) -> (Wumpus(y) & -Gorpus(y)))", "all x y z.((Wren(x) & Tumpus(x) & Wren(y) & Gorpus(z)) -> (Tumpus(x) | Wumpus(y) | -Gorpus(z)))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Wumpus(x)) & (Wren(x) -> -Gorpus(x)))"]}
{"id": "prontoqa_train_573", "nl": "Sterpuses are lorpuses.", "fol": "all x. (sterpus(x) -> lorpus(x))", "prediction": ["all x.(Sterpus(x) -> Lorpus(x))", "all x.(Sterpuse(x) -> Lorpus(x))", "all x y.((Sterpuse(x) & Lorpus(y)) -> (Lorpus(x) & -Lorpus(y)))", "(Lorpuse(sterpuses) & -Lorpuse(s))", "all x.(Sterpus(x) -> Lorpus(x))", "all x.(Sterpuse(x) -> Lorpus(x))", "all x.(Sterpuse(x) -> Lorpus(x))", "all x y.((Sterpuse(x) & Lorpus(y)) -> Is(x,y))", "(Lorpuse(sterpuse) -> Llorpuse(s))", "all x.(Stump(x) -> Lorpus(x))", "(Lorpuse(sterpus) & LivesIn(st,x))", "all x y.((Sterpuse(x) & Lorpus(y)) -> (Lorpus(x) & -Lorpus(x)))", "all x.(Sterpus(x) -> Lorpus(x))", "all x.(Sterpuse(x) -> Lorpus(x))", "all x.(Strerpus(x) -> Llorpuse(x))", "all x.(Sterpuse(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_574", "nl": "Sam is a brimpus, Sam is not a lorpus, and Sam is a dumpus.", "fol": "(brimpus(Sam) & -lorpus(Sam) & dumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Brimpus(x)) & (Sam(x) -> -Lorpus(x)) & (Sam(x) -> Dumpus(x)))", "all x y z.((Sam(x) & Brimpus(x) & -Lorpus(y) & Dumpus(z)) -> (Brimpus(x) & Dumpus(z)))", "(all x y z.((Sam(x) & Brimpus(x)) -> (Brimpus(x) & -Lorpus(y)) & ((Sam(z) & Dumpus(z)) -> Dumpus(z)))", "all x y z.((Sam(x) & Brimpus(x) & -Lorpus(y) & Dumpus(z)) -> (Brimpus(x) & -Lorpus(y) & Dumpus(z)))", "(all x.(Sam(x) -> Brimpus(x)) & (Sam(x) -> -Lorpus(x)) & (Sam(x) -> Dumpus(x)))", "all x.(Sam(x) -> (Brimpus(x) & -Lorpus(x) & Dumpus(x)))", "(all x y z.((Sam(x) & Brimpus(x)) -> (Brimpus(x) | -Lorpus(y)) & ((Sam(z) & Dumpus(z)))))", "(all x.(SameDay(x) -> Brimpus(x)) & (SameDay(x) -> -Lorpus(x)) & (SameDay(x) -> Dumpus(x)))", "all x y z.((Sam(x) & Brimpus(x) & Sam(y) & Lorpus(z)) -> (-Lorpus(y) & Dumpus(z)))", "all x y.((Sam(x) & Brimpus(x)) -> (-Lorpus(y) & Dumpus(x)))", "(all x.(Sam(x) -> Brimpus(x)) & all y.(Sam(y) -> -Lorpus(y)) & all z.(Sam(z) -> Dumpus(z))))", "all x y z.((Sam(x) & Brimpus(y) & Lorpus(z)) -> (-Lorpus(x) & Dumpus(x)))", "(all x.(Sam(x) -> Brimpus(x)) & (Sam(x) -> -Lorpus(x)) & (Sam(x) -> Dumpus(x)))", "(all x y.(Brimpus(x) -> Brimpus(x)) & (Lorpus(y) -> -Lorpus(y)) & (Dumpus(y) -> Dumpus(y)))", "(all x.(Sam(x) -> Brimpus(x)) & (-Lorpus(x) & (Dumpus(x))))", "all x.(Sam(x) -> (Brimpus(x) & -Lorpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_575", "nl": "Every lempus is a brimpus.", "fol": "all x. (lempus(x) -> brimpus(x))", "prediction": ["all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x y.((Lempus(x) & Brimpus(y)) -> Has(x,y))", "(all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x y.((Lempus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Limpus(x) -> Brimpus(x))", "all x.(Limpus(x) -> Brimpus(x))", "exists x.(Lempus(x) & -Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "exists x.(Limpus(x) & Brumpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "exists x.(Lempus(x) & Brumpus(x))"]}
{"id": "prontoqa_train_576", "nl": "Rex is a tumpus and Rex is not a brimpus and Rex is a vumpus.", "fol": "(tumpus(Rex) & -brimpus(Rex) & vumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Tumpus(x)) & (-Brimpus(x) & -Vumpus(x)))", "all x y z.((Rex(x) & Tumpus(y) & Brimpus(z)) -> (Tumpus(x) & -Brimpus(y) & Vumpus(z)))", "(all x y.(Tumpus(x) -> Rex)) & (Brimpus(y) -> -Rex)) & (Vumpus(y) -> Rex)))", "(all x.(Tumpus(x) -> Rex)) & (-Brimpus(x) -> Rex)) & (Vumpus(x) -> Rex)))", "(all x.(Rex(x) -> Tumpus(x)) & (Rex(x) -> -Brimpus(x)) & (Rex(x) -> Vumpus(x)))", "(all x.(Rex(x) -> Tumpus(x)) & (-Brimpus(x) & -Vumpus(x)))", "all x.(Rex(x) -> (Tumpus(x) & -Brimpus(x) & Vumpus(x)))", "all x y z.((Rex(x) & Tumpus(x) & -Brimpus(y) & Vumpus(z)) -> (Tumpus(x) & -Brimpus(y) & -Vumpus(z)))", "all x y.((Rex(x) & Tumpus(x)) -> (-Brimpus(x) & Vumpus(y)))", "all x y z.((Rex(x) & Tumpus(y) & Brimpus(z)) -> (Tumpus(x) & -Brimpus(y) & Vumpus(z)))", "(all x y z.((Rex(x) & Tumpus(y)) -> Tumpus(x)) & ((Rex(z) & -Brimpus(z))) -> Vumpus(z)))", "(all x y.(Tumpus(x) -> Rex)) & (Brimpus(y) -> -Rex)) & (Vumpus(y) -> Rex)))", "(all x.(Tumpus(x) -> Rex)) & (Brimpus(x) -> Rex)) & (Vumpus(x) -> Rex)))", "(all x.(Rex(x) -> Tumpus(x)) & all y.(Rex(y) -> -Brimpus(y))) & all z.(Rex(z) -> Vumpus(z)))", "all x.(Rex(x) -> (Tumpus(x) & -Brimpus(x) & Vumpus(x)))", "all x y.((Rex(x) & Tumpus(x)) -> (-Brimpus(x) & Vumpus(y)))"]}
{"id": "prontoqa_train_577", "nl": "Max is not an impus and Max is a vumpus and Max is a numpus.", "fol": "(-impus(Max) & vumpus(Max) & numpus(Max))", "prediction": ["(all x.(Max(x) -> -Impossible(x)) & (Max(x) -> Vumpus(x)) & (Max(x) -> Numpus(x)))", "all x y z.((Max(x) & Imperium(y) & Vumpus(z)) -> (-Impossible(x) & -Impossible(y) & -Impossible(z)))", "(all x.(Max(x) -> -Impossible(x)) & all y.(Max(y) -> Vumpus(y)) & all z.(Max(z) -> Numpus(z))))", "all x y z.((Max(x) & Max(y) & Vumpus(z)) -> (-Impossible(x) & Vumpus(y) & Numpus(z)))", "all x y.((Max(x) & Max(y)) -> (-Impossible(x) & Vumpus(y) & Numpus(y)))", "(all x y.((Max(x) & IsNot(x)) -> IsVumpus(x)) & ((Max(y) & Is(y)) -> IsNumpus(y)))", "((Max(Max) & -Impossible(Max)) | (Max(Max) & Vumpus(Max)) | Max(Max)))", "all x.(Max(x) -> (-Impossible(x) & Vumpus(x) & Numpus(x)))", "(-Impossible(Max) & Vumpus(Max) & Numpus(Max))", "all x y z.((Max(x) & Impossible(x) & Max(y) & Vumpus(z)) -> (-Impossible(x) & -Impossible(y) & -Impossible(z)))", "(all x y.((Max(x) & IsNotImpossible(x)) -> Vumpus(x)) & ((Max(y) & IsNumpus(y)) -> IsNumpus(y)))", "(all x.(Max(x) -> -Impossible(x)) & (Max(x) -> Vumpus(x)) & (Max(x) -> Numpus(x)))", "all x.(Max(x) -> (-Issue(x) & (Vumpus(x) | Numpus(x))))", "(all x.(Max(x) -> -Issue(x)) & all y.(Max(y) -> (Vumpus(y) & Numpus(y))))", "all x y.((Max(x) & Max(y)) -> (-Impossible(x) & Vumpus(y) & Numpus(y)))", "(-Impossible(Max) & Vumpus(Max) & Numpus(Max))"]}
{"id": "prontoqa_train_578", "nl": "Each numpus is a vumpus.", "fol": "all x. (numpus(x) -> vumpus(x))", "prediction": ["all x.(Nompus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "(all x.(Nompus(x) -> Vumpus(x))", "all x y.((Numpus(x) & Vumpus(y)) -> Is(x,y))", "all x.(Numerus(x) -> Vumpus(x))", "all x.(Nompus(x) -> Vumpus(x))", "all x y.((Nompus(x) & Vumpus(y)) -> Is(x,y))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Numerus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Nompus(x) -> Vumpus(x))", "exists x.(Numpus(x) & -Vumpus(x))", "exists x.(numpus(x) & Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "exists x.(Nompus(x) & -Vumpus(x))", "exists x.(Numpus(x) & Vampus(x))"]}
{"id": "prontoqa_train_579", "nl": "Polly is an impus and Polly is a rompus and Polly is not a vumpus.", "fol": "(impus(Polly) & rompus(Polly) & -vumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Is(x)) & (Polly(x) -> Rompus(x)) & (Polly(x) -> -Vumpus(x))))", "all x y z.((Polly(x) & Polly(y) & Rompus(z)) -> (Impossible(x) & Rompus(y) & -Vumpus(z)))", "(all x y.(Polly(x) -> Is(x,Is(x)) & (Polly(y) -> Rompus(y)) & (Polly(y) -> -Vumpus(y)))", "all x y z.((Polly(x) & Is(x,Is) & Polly(y) & Rompus(z)) -> (Is(y,Is) & -Is(y,Vumpus)))", "all x y.((Polly(x) & Polly(y)) -> (Impossible(x) & Rompus(y) & -Vumpus(y)))", "(all x.(Polly(x) -> Impossible(x)) & all y.(Polly(y) -> Rompus(y)) & all z.(Polly(z) -> -Vumpus(z))))", "all x y z.((Polly(x) & Is(x,Is(x) & Polly(y) & Rompus(y)) -> (Is(y,Is(y,x) & -Is(z,y)))", "(all x.(Polly(x) -> Is(x)) & (Polly(x) -> Rompus(x)) & -Vumpus(x)))", "(all x.(Polly(x) -> Is(x)) & (Polly(x) -> Rompus(x)) & (Polly(x) -> -Vumpus(x)))", "(all x y z.(Polly(x) -> IsImpossible(x)) & (Polly(y) -> Rompus(y)) & (Polly(z) -> -Vumpus(z)))", "all x.(Polly(x) -> (Impossible(x) & Rompus(x) & -Vumpus(x)))", "all x y.((Polly(x) & Is(x,y)) -> (Impossible(x) & Rompus(y) & -Vumpus(y)))", "all x y z.((Polly(x) & Impossible(x) & Polly(y) & Rompus(y) & -Vumpus(z)) -> (Impossible(x) & Rompus(y) & -Vumpus(z)))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> Rompus(x)) & (Polly(x) -> -Vumpus(x)))", "(all x y.(Polly(x) -> IsImpossible(x)) & (Polly(y) -> Rompus(y)) & (Polly(y) -> -Vumpus(y)))", "exists x.(Polly(x) & Is(x,Impos) & Rompus(x) & -Vumpus(x))"]}
{"id": "prontoqa_train_580", "nl": "Each rompus is a lempus.", "fol": "all x. (rompus(x) -> lempus(x))", "prediction": ["all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) -> Lempus(x))", "(all x.(Rompus(x) -> Lempus(x))", "all x y.((Rompus(x) & Lempus(y)) -> Has(x,y))", "all x.(Rompus(x) -> Lempus(x))", "all x.(rompus(x) -> Lempus(x))", "all x y.((Rompus(x) & Lempus(y)) -> Is(x,y))", "exists x.(rompus(x) & Lempus(x))", "all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) -> Lempus(x))", "exists x.(rompus(x) & Lempus(x))", "all x.(Rompus(x) -> Lempus(x))", "exists x.(rompus(x) & Lempus(x))", "all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) -> Lempus(x))", "exists x.(Rompus(x) & Lempus(x))"]}
{"id": "prontoqa_train_581", "nl": "Fae is a wumpus and Fae is not a lempus and Fae is a numpus.", "fol": "(wumpus(Fae) & -lempus(Fae) & numpus(Fae))", "prediction": ["(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Numpus(x)))", "all x y z.((Fae(x) & Wumpus(x) & Fae(y) & Numpus(z)) -> (Wumpus(x) & -Lempus(y) & Numpus(z)))", "(all x y.((Fae(x) & Wumpus(x)) -> Wumpus(x)) & ((Fae(y) & -Lempus(y)) -> Numpus(y)))", "(all x y z.((Fae(x) & Wumpus(x)) -> (Wumpus(x) & -Lempus(y)) & ((Fae(z) & Numpus(z))) -> (Numpus(z))))", "(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Numpus(x)))", "all x y.((Fae(x) & Wumpus(x) & Fae(y)) -> (-Lempus(y) & Numpus(y)))", "all x y z.((Fae(x) & Wumpus(x) & Fae(y) & Numpus(z)) -> (Wumpus(x) & -Lempus(y) & Numpus(z)))", "exists x.(Fae(x) & Wumpus(x) & -Lempus(x) & Numpus(x))", "all x y z.((Fae(x) & Wumpus(y) & Lempus(z)) -> (Wumpus(x) & -Lempus(y) & Numpus(z)))", "all x.(Fae(x) -> (Wumpus(x) & -Lempus(x) & Numpus(x)))", "all x y.((Fae(x) & Wumpus(x)) -> (-Lempus(x) & Numpus(y)))", "(all x y.(Wumpus(x) -> Fae(x)) & (-Lempus(y) -> Fae(x)) & (Numpus(y) -> Fae(y)))", "(all x.(Fae(x) -> Wumpus(x)) & all y.(Fae(y) -> -Lempus(y)) & all z.(Fae(z) -> Numpus(z))))", "(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Numpus(x)))", "all x.(Fae(x) -> (Wumpus(x) & -Lempus(x) & Numpus(x)))", "(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Numpus(x)))"]}
{"id": "prontoqa_train_582", "nl": "Rompuses are gorpuses.", "fol": "all x. (rompus(x) -> gorpus(x))", "prediction": ["all x.(Rompus(x) -> Gorpus(x))", "all x.(Rompus(x) -> Gorpus(x))", "all x y.((Rompus(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Rompes(x) -> Gorpus(x))", "all x.(Rompus(x) -> Gorpus(x))", "all x y.((Rompus(x) & Gorpus(y)) -> Gorpus(x))", "(all x.(Rompus(x) -> Gorpuse(x))", "all x.(Rompus(x) -> Gorpuse(x))", "all x.(Rompes(x) -> Gorpus(x))", "all x y.((Rompus(x) & Gorpus(y)) -> Gorpus(x))", "(all x.(Rompus(x) -> Gorpus(x))", "all x.(Rompes(x) -> Gorpuse(x))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Rompus(x) -> Gorpus(x))", "All x.(Rosape(x) -> Gorpuse(x))", "all x.(Rompus(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_583", "nl": "Sam is a numpus and Sam is not a gorpus and Sam is a wumpus.", "fol": "(numpus(Sam) & -gorpus(Sam) & wumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Numpus(x)) & (-Sam(x) -> Gorpus(x)) & (-Sam(x) -> Wumpus(x)))", "all x y z.((Sam(x) & Numpus(x) & Sam(y) & Gorpus(z)) -> (-Gorpus(y) & Wumpus(z)))", "all x y.((Sam(x) & Numpus(x) & Sam(y)) -> (-Gorpus(y) & Wumpus(y)))", "(all x.(Sam(x) -> Numpus(x)) & (-Sam(x) -> Gorpus(x)) & (-Sam(x) -> Wumpus(x)))", "(all x.(Sam(x) -> Numpus(x)) & (-Gorpus(x) & -Wumpus(x)))", "(all x y.(Sam(x) -> Numpus(x)) & (-Sam(y) -> Gorpus(y)) & (-Sam(y) -> Wumpus(y)))", "all x y z.((Sam(x) & Numpus(y) & Gorpus(z)) -> (-Gorpus(x) & Wumpus(x)))", "all x y z.((Sam(x) & Numpus(x) & Sam(y) & Gorpus(z)) -> (-Gorpus(y) & Wumpus(z)))", "(all x y.(Numpus(x) -> Sam(x)) & (-Gorpus(y) -> Sam(y))) & (Wumpus(y) -> Sam(y)))", "all x.(Sam(x) -> (numpus(x) & -gorpus(x) & -wumpus(x)))", "(all x.(SameDay(x) -> Numpus(x)) & (-SameDay(x) -> Gorpus(x)) & (-SameDay(x) -> Wumpus(x)))", "all x.(Sam(x) -> (Numpus(x) & -Gorpus(x) & Wumpus(x)))", "(all x.(Sam(x) -> Numpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "(all x.(Sam(x) -> Numpus(x)) & all y.(Sam(y) -> -Gorpus(y)) & all z.(Sam(z) -> Wumpus(z))))", "exists x.(Sam(x) & Numpus(x) & -Gorpus(x) & Wumpus(x))", "all x y.((Sam(x) & Sam(y)) -> (Numpus(x) | -Gorpus(y) | Wumpus(y)))"]}
{"id": "prontoqa_train_584", "nl": "Sam is not a rompus.", "fol": "-rompus(Sam)", "prediction": ["all x.(Sam(x) -> -Rompus(x))", "(-Rompus(Sam))", "Sam is not a rompus.", "(Rompus(Sam) | Rompus(Sam)))", "all x.(Sam(x) -> -Rompus(x))", "(-Rompus(Sam))", "all x.(Rompus(x) -> -Rompus(x))", "Sam is not a rompus.", "(-rompus(Sam))", "Sam is not a Rompus.", "all x.(Sam(x) -> -Rompus(x))", "-Rompus(Sam)", "(-rompus(Sam))", "all x.(Sam(x) -> -Rompus(x))", "-Rompus(Sam)", "-Rompus(Sam)"]}
{"id": "prontoqa_train_585", "nl": "Each dumpus is a lempus.", "fol": "all x. (dumpus(x) -> lempus(x))", "prediction": ["all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "(all x.(Dumpus(x) -> Lempus(x)))", "all x y.((Dumpus(x) & Lempus(y)) -> Has(x,y))", "all x.(Dumps(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x y.((Dumpus(x) & Lempus(y)) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "exists x.(Dumps(x) & Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "exists x.(Dupus(x) & Lempus(x))", "exists x.(Dumpus(x) & Lempus(x))", "exists x.(Dumpus(x) & Lempus(x))"]}
{"id": "prontoqa_train_586", "nl": "Fae is a numpus, Fae is a grimpus, and Fae is not a lempus.", "fol": "(numpus(Fae) & grimpus(Fae) & -lempus(Fae))", "prediction": ["(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> Grimpus(x)) & -Lempus(x)))", "all x y z.((Fae(x) & Grimpus(y) & Lempus(z)) -> (Numpus(x) & Grimpus(y) & -Lempus(z)))", "(all x.(Fae(x) -> Numpus(x)) & all y.(Fae(y) -> Grimpus(y)) & all z.(Fae(z) -> -Lempus(z))))", "(all x y z.((Fae(x) & Numpus(y)) -> Numpus(x)) & ((Fae(z) & Grimpus(z)) -> -Lempus(z)))", "all x y z.((Fae(x) & Numpus(y) & Grimpus(z)) -> (Numpus(x) & Grimpus(z) & -Lempus(x)))", "(all x y z.((Fae(x) & Numpus(y)) -> (Numpus(z) | Grimpus(z))) & ((Fae(x) & Lempus(x)) -> -Lempus(x)))", "all x.(Fae(x) -> (Numpus(x) & Grimpus(x) & -Lempus(x)))", "exists x.(Fae(x) & Numpus(x) & Grimpus(x) & -Lempus(x))", "all x y z.((Fae(x) & Grimpus(y) & Lempus(z)) -> (Numpus(x) | Grimpus(y) | -Lempus(z)))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> Grimpus(x)) & -Lempus(x)))", "(all x y z.((Fae(x) & Numpus(y) & Grimpus(z)) -> Numpus(x,y)) & ((Fae(x) & Grimpus(x,z)) -> -Lempus(x)))", "all x y z.(Fae(x) & Numpus(x) & Grimpus(y) & Lempus(z))", "(all x.(Fae(x) -> Numpus(x)) & all y.(Fae(y) -> Grimpus(y)) & all z.(Fae(z) -> -Lempus(z))))", "all x.(Fae(x) -> (Numpus(x) & Grimpus(x) & -Lempus(x)))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> -Lempus(x)))", "all x y z.((Fae(x) & Numpus(y) & Grimpus(z)) -> (Numpus(x) & Grimpus(y) & -Lempus(z)))"]}
{"id": "prontoqa_train_587", "nl": "Fae is not a dumpus.", "fol": "-dumpus(Fae)", "prediction": ["all x.(Fae(x) -> -Dumpus(x))", "(-Dumpus(Fae))", "Fae is not a Dumpus.", "(Dumus(Fae) & -Dumpus(Fae))", "-Dumpus(Fae)", "all x.(Fae(x) -> -Dumpus(x))", "Fae is not a Dumpus.", "(-Dumpus(Fae))", "(Dumus(Fae) & -Dumpus(Fae))", "-Dumpus(Fae)", "all x.(Fae(x) -> -Dumpus(x))", "(Dumpus(fee) & -Dumpus(fee))", "-Dumpus(Fae)", "-Dumpus(fae,f)", "all x.(Fae(x) -> -Dumpus(x))", "-Dumpus(Fae)"]}
{"id": "prontoqa_train_588", "nl": "Gorpuses are zumpuses.", "fol": "all x. (gorpus(x) -> zumpus(x))", "prediction": ["all x.(Gorpuse(x) -> Zumpuse(x))", "all x.(Gorpuse(x) -> Zumpuse(x))", "(All x.(Gorpuse(x) -> Zumpuse(x))", "all x y.((Gorpuse(x) & Zumpuse(y)) -> Has(x,y))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpuse(x) -> Zumpuse(x))", "(Zombie(gorpus) & Tosso(gorpus))", "all x y.((Gorpuse(x) & Zumpuse(y)) -> -Tompus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x y.((Gorpuse(x) & Zumpuse(y)) -> Tossa(x,y))", "all x.(Gorpuse(x) -> Zumpuse(x))", "all x.(Gorpus(x) -> Zumpuse(x))", "all x.(Gorpuse(x) -> Zumpus(x))", "All x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpuse(x) -> Zumpuse(x))", "All x.(Gorpuse(x) -> Zumpuse(x))"]}
{"id": "prontoqa_train_589", "nl": "Polly is a wumpus, Polly is not a zumpus, and Polly is a brimpus.", "fol": "(wumpus(Polly) & -zumpus(Polly) & brimpus(Polly))", "prediction": ["(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Brimpus(x)))", "all x y z.((Polly(x) & Wumpus(y) & Zumpus(z)) -> (Wumpus(x) & -Zumpus(y) & Brimpus(z)))", "(all x y z.((Polly(x) & Wumpus(y)) -> (Wumpus(x) & -Zumpus(y))) & ((Polly(z) & Brimpus(z)) -> (Brimpus(z))))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Brimpus(x)))", "all x y z.((Polly(x) & Wumpus(x) & Polly(y) & Zumpus(z)) -> (Wumpus(x) | Brimpus(y)))", "(all x y z.((Polly(x) & Wumpus(y)) -> Wumpus(x)) & ((Polly(z) & -Zumpus(z)) -> Brimpus(z)))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> -Zumpus(y))) & all z.(Polly(z) -> Brimpus(z)))", "(all x y z.((Polly(x) & Wumpus(y)) -> (Wumpus(z) | Zumpus(z))) & ((Polly(x) & Brimpus(x)) -> (Wumpus(x) & Brimpus(x))))", "all x y z.((Polly(x) & Wumpus(y) & Zumpus(z)) -> (Wumpus(x) & -Tompus(y) & Brimpus(z)))", "all x.(Polly(x) -> (Wumpus(x) & -Zumpus(x) & Brimpus(x)))", "exists x.(Polly(x) & Wumpus(x) & -Zumpus(x) & Brimpus(x))", "(all x.(Wumpus(x) -> Polly)) & (-Zumpus(x) -> Polly)) & (Brimpus(x) -> Polly)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Brimpus(x)))", "all x y z.((Polly(x) & Wumpus(x) & Polly(y) & Zumpus(z)) -> (Wumpus(x) & Brimpus(y)))", "all x y z.((Polly(x) & Wumpus(x) & Polly(y) & Zumpus(z)) -> (Wumpus(x) | Brimpus(y)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> -Tompus(x)) & (Polly(x) -> Brimpus(x)))"]}
{"id": "prontoqa_train_590", "nl": "Wren is a tumpus, Wren is not a dumpus, and Wren is a rompus.", "fol": "(tumpus(Wren) & -dumpus(Wren) & rompus(Wren))", "prediction": ["(all x.(Wren(x) -> Tumpus(x)) & (-Dumpus(x)) & (Rompus(x))))", "all x y z.((Wren(x) & Tumpus(y) & Dumpus(z)) -> (Tumpus(x) & -Dumpus(y) & Rompus(z)))", "(all x y z.((Wren(x) & Tumpus(y)) -> Tumpus(x)) & ((Wren(z) & -Dumpus(z))) -> Rompus(z)))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> -Dumpus(x)) & (Wren(x) -> Rompus(x)))", "all x y z.((Wren(x) & Tompus(y) & Dumpus(z)) -> (Tumpus(x) & -Dumpus(y) & Rompus(z)))", "all x.(Wren(x) -> (Tumpus(x) & -Dumpus(x) & Rompus(x)))", "all x y z.((Wren(x) & Tumpus(y) & Dumpus(z)) -> (Tumpus(x) & -Dumpus(x) & Rompus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> -Dumpus(y))) & all z.(Wren(z) -> Rompus(z)))", "(all x y z.((Wren(x) & Tumpus(y)) -> Tumpus(x)) & ((Wren(z) & -Dumpus(z))) -> Rompus(z)))", "all x y z.((Wren(x) & Tumpus(x) & Wren(y) & Dumpus(z)) -> (Tumpus(x) & -Dumpus(y) & Rompus(z)))", "(all x.(Wren(x) -> Tumpus(x)) & (-Dumpus(x)) & (Rompus(x))))", "(all x y z.((Wren(x) & Tumpus(y) & Dumpus(z)) -> Tumpus(x)) & ((Wren(x) & -Dumpus(x)) -> Rompus(x)))", "all x y z.((Wren(x) & Dumpus(y) & Rompus(z)) -> (Tumpus(x) & -Dumpus(y) & Rompus(z)))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> -Dumpus(x)) & (Wren(x) -> Rompus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> -Dumpus(y))) & all z.(Wren(z) -> Rompus(z)))", "all x y z.((Wren(x) & Tumpus(y) & Dumpus(z)) -> (Tumpus(x) & -Dumpus(y) & Rompus(z)))"]}
{"id": "prontoqa_train_591", "nl": "Tumpuses are yumpuses.", "fol": "all x. (tumpus(x) -> yumpus(x))", "prediction": ["all x.(Tumpus(x) -> Yampus(x))", "all x.(Tumpus(x) -> Yumpus(x))", "all x y.((Tumpus(x) & Tumpus(y)) -> Yampus(x))", "all x.(Tumpus(x) -> Yampus(x))", "All x y.((Tumpus(x) & Tumpus(y)) -> Yumpus(x))", "(Yumpuse(tump) & Tumpus(tump))", "all x.(Tumpus(x) -> Yumpus(x))", "all x.((Tumpus(x) & Yumpus(x)) -> Yampus(x))", "(Yumpus)", "all x.(Tumpus(x) -> Yampus(x))", "all x.(Tumpuse(x) -> Yumpus(x))", "all x.(Tumpus(x) -> Yumpus(x))", "all x.(Tumpus(x) -> Yampus(x))", "all x.(Mumpsue(x) -> Yampus(x))", "all x.(Tumpus(x) -> Yampus(x))", "all x.(Tumpus(x) -> Yumpus(x))"]}
{"id": "prontoqa_train_592", "nl": "Sally is not a yumpus and Sally is a lorpus and Sally is a brimpus.", "fol": "(-yumpus(Sally) & lorpus(Sally) & brimpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Yumpus(x)) & (Lorpus(x) & Brimpus(x)))", "all x y z.((Sally(x) & Yumpus(y) & Lorpus(z)) -> (-Yumpus(x) & -Lorpus(x) & -Brimpus(x)))", "(all x.(Sally(x) -> -Yumpus(x)) & all y.(Sally(y) -> Lorpus(y)) & all z.(Sally(z) -> Brimpus(z))))", "(all x y.(Yumpus(x) -> -Yumpus(x)) & (Lorpus(y) -> Yumpus(y)) & (Brimpus(y) -> Yumpus(y)))", "(-Yumpus(Sally) & Lorpus(Sally) & Brimpus(Sally))", "all x y.((Sally(x) & -Yumpus(x)) -> (Lorpus(x) & Brimpus(y)))", "(all x.(Yumpus(x) -> -Yumpus(x)) & (Lorpus(x) -> Brimpus(x)))", "all x.(Sally(x) -> (-Yumpus(x) & -Lorpus(x) & -Brimpus(x)))", "exists x.(Sally(x) & -Yumpus(x) & exists y.(Lorpus(y) & -Yumpus(y))) & exists z.(Brimpus(z) & -Yumpus(z))))", "all x y z.((Sally(x) & Yumpus(y) & Lorpus(z)) -> (-Yumpus(x) & -Lorpus(x) & -Brimpus(x)))", "(all x.(Sally(x) -> -Yumpus(x)) & (Lorpus(x) | Brimpus(x))))", "(-Yumpus(Sally) & -Lorpus(Sally) & -Brimpus(Sally))", "all x.(Sally(x) -> (-Yumpus(x) & -Lorpus(x) & -Brimpus(x)))", "(all x.(Yumpus(x) -> -Yumpus(x)) & (Lorpus(x) -> Brimpus(x)))", "all x y z.((Sally(x) & Yumpus(y) & Lorpus(z)) -> (-Yumpus(x) & -Lorpus(x) & -Brimpus(x)))", "all x y.((Sally(x) & -Yumpus(x)) -> (Lorpus(x) & Brimpus(y)))"]}
{"id": "prontoqa_train_593", "nl": "Dumpuses are sterpuses.", "fol": "all x. (dumpus(x) -> sterpus(x))", "prediction": ["all x.(Dumpuse(x) -> Sterpuse(x))", "all x.(Dumpuse(x) -> Sterpuse(x))", "(Sterpuse(dumpuse) & Sterpuse(dumpuse))", "all x y.((Dumpuse(x) & Sterpuse(y)) -> Sterpuse(x))", "all x.(Dumpuse(x) -> Sterpuse(x))", "(Sterpuse(dumpuse) & Sterpuse(dumpuse))", "all x y.((Dumpuse(x) & Sterpuse(y)) -> Sterpuse(x))", "all x.(Dumpuse(x) -> Sterus(x))", "(Sterpuse(dumpuse) & Sterpuse(dumpuse,sterpuse))", "all x.(Dumpus(x) -> Steroid(x))", "all x.(Dumpuse(x) -> Sterpuse(x))", "all x.(Dumpus(x) -> Sterpuse(x))", "all x.(Dumpuse(x) -> Sterpuse(x))", "all x.(Dumpus(x) -> Sterosene(x))", "all x.(Dumpus(x) -> Sterpuse(x))", "All x.(Dumpuse(x) -> Sterus(x))"]}
{"id": "prontoqa_train_594", "nl": "Sam is not a sterpus and Sam is a brimpus and Sam is an impus.", "fol": "(-sterpus(Sam) & brimpus(Sam) & impus(Sam))", "prediction": ["all x y z.((Sam(x) & Sterpus(y) & Brimpus(z)) -> (-Sterpus(x) & -Brimpus(y) & -Impossible(z)))", "(all x.(Sam(x) -> -Sterpus(x)) & all y.(Brimpus(y) -> -Sterpus(y))) & all z.(Illegal(z) -> Impossible(z)))", "all x.(Sam(x) -> (-Sterpus(x) & Brimpus(x) & Imperator(x)))", "(all x.(Sam(x) -> -Sterpus(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> Imperator(x)))", "all x y z.((Sam(x) & Sterus(y) & Brimpus(z)) -> (-Sterpus(x) & Brimpus(x) & Imperator(x)))", "(all x y.(Sam(x) -> -Sterpus(x)) & (Sam(y) -> Brimpus(y)) & (Sam(y) -> Imperator(y)))", "(-Sterpus(sam) & Brimpus(sam) & Imperator(sam))", "all x y.((Sam(x) & Sterpus(y)) -> (-Sterpus(x) & Brimpus(y) & Imperator(x)))", "(all x.(Sam(x) -> -Sterpus(x)) & all y.(Brimpus(y) -> Impossible(y)))", "all x.(Sam(x) -> (-Sterpus(x) & Brimpus(x) & Imperator(x)))", "all x y z.((Sam(x) & Sterpus(y) & Brimpus(z)) -> (-Sterpus(x) & Brimpus(x) & Imperator(x)))", "all x y.((Sam(x) & Sterpus(y) & Brimpus(y)) -> (-Sterpus(x) & -Brimpus(y) & -Impossible(y)))", "(all x.(Sam(x) -> -Sterepus(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> Imperator(x)))", "exists x.(Sam(x) & -Sterpus(x) & Brimpus(x) & Impermissible(x))", "(all x y.(Sam(x) -> -Sterpus(x)) & (Sam(y) -> Brimpus(y)) & (Sam(y) -> Impermissible(y)))", "(all x.(Sam(x) -> -Sterpus(x)) & all y.(Brimpus(y) -> Imperator(y)))"]}
{"id": "prontoqa_train_595", "nl": "Sam is not a dumpus.", "fol": "-dumpus(Sam)", "prediction": ["all x.(Sam(x) -> -Dumpus(x))", "(-Dumpus(Sam))", "Sam is not a Dumpus.", "all x.(Sam(x) -> -Dumpus(x))", "(-Dumpus(Sam))", "Sam is not a Dumpus.", "(Dumus(Sam) & -Dumpus(Sam))", "Sam is notDumpus(Sam).", "all x.(Sam(x) -> -Dumpus(x))", "(-Dumus(Sam))", "-Dumpus(Sam)", "all x.(Sam(x) -> -Dumpus(x))", "all x.(Sam(x) -> -Dumpus(x))", "(-Dumpus(Sam))", "-Dumpus(sam)", "-Dumpus(Sam)"]}
{"id": "prontoqa_train_596", "nl": "Fae is not a numpus, Fae is a shumpus, and Fae is a jompus.", "fol": "(-numpus(Fae) & shumpus(Fae) & jompus(Fae))", "prediction": ["(all x.(Fae(x) -> -Numpus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> Jompus(z))))", "all x y z.((Fae(x) & Shumpus(y) & Jompus(z)) -> (-Numpus(x) & Shumpus(y) & Jompus(z)))", "(all x.(Fae(x) -> -Numpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> Jompus(x)))", "all x.(Fae(x) -> (-Numpus(x) & Shumpus(x) & Jompus(x)))", "(all x y z.((Fae(x) & Numpus(y)) -> -Numpus(x)) & ((Fae(z) & Humpus(z))) -> (Jompus(z))))", "all x y z.((Fae(x) & Numpus(y) & Humpus(z)) -> (-Numpus(x) & Shumpus(x) & Jompus(x)))", "(all x y z.((Fae(x) & Numpus(y) & Shumpus(z)) -> -Numpus(x)) & ((Fae(x) & Humpus(x)) -> Jompus(x)))", "all x y z.((Fae(x) & Shumpus(y) & Jompus(z)) -> (-Numpus(x) & -Shumpus(y) & -Jumpus(z)))", "(all x.(Fae(x) -> -Numpus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> Jompus(z))))", "exists x.(Fae(x) & -Numpus(x) & Shumpus(x) & Jompus(x))", "all x y z.(Fae(x) & Numpus(y) & Shumpus(z) & Jompus(x))", "(all x.(Fae(x) -> -Numpus(x)) & (Fae(x) -> Shumpus(x)) & (Fae(x) -> Jompus(x)))", "(all x y z.((Fae(x) & Numpus(y)) -> -Numpus(x)) & ((Fae(z) & Humpus(z))) -> Jompus(z)))", "all x y z.(Fae(x) -> (-Numpus(x) & Shumpus(y) & Jompus(z)))", "all x y z.((Fae(x) & Numpus(y) & Shumpus(z)) -> (-Numpus(x) & Shumpus(x) & Jompus(x)))", "(all x.(Fae(x) -> -Numpus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> Jompus(z)))"]}
{"id": "prontoqa_train_597", "nl": "Each shumpus is a gorpus.", "fol": "all x. (shumpus(x) -> gorpus(x))", "prediction": ["all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x y.((Shumpus(x) & Gorpus(y)) -> HasShumpus(x,y))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x y.((Shumpus(x) & Gorpus(y)) -> Has(x,y))", "(all x.(Shumpus(x) -> Gorpus(x))", "all x y.((Shumpus(x) & Gorpus(y)) -> Is(x,y))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "exists x.(Shumpus(x) & Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "exists x.(Shumpus(x) & Gorpus(x))", "exists x.(Shumpus(x) & Gorpus(x))"]}
{"id": "prontoqa_train_598", "nl": "Alex is not a gorpus and Alex is a zumpus and Alex is a tumpus.", "fol": "(-gorpus(Alex) & zumpus(Alex) & tumpus(Alex))", "prediction": ["(all x.(Alex(x) -> -Gorpus(x)) & all y.(Alex(y) -> Zumpus(y))) & all z.(Alex(z) -> Tumpus(z)))", "all x y z.((Alex(x) & Gorpus(y) & Zumpus(z)) -> (-Gorpus(x) & Toumpus(x)))", "all x.(Alex(x) -> (-Gorpus(x) & Zumpus(x) & Tumpus(x)))", "(all x y z.((Alex(x) & Gorpus(y) & Zumpus(z)) -> -Gorpus(x)) & ((Alex(x) & Toumpus(x)) -> Toumpus(x)))", "all x y.((Alex(x) & Gorpus(y) & Zumpus(y)) -> (-Gorpus(x) & Toumpus(x)))", "all x y z.((Alex(x) & Gorpus(y) & Zumpus(z)) -> (-Gorpus(x) & Zumpus(x) & Tumpus(x)))", "(all x.(Alex(x) -> -Gorpus(x)) & all y.(Alex(y) -> Zumpus(y))) & all z.(Alex(z) -> Tumpus(z)))", "(all x.(Alex(x) -> -Gorpus(x)) & (Alex(x) -> Zumpus(x)) & (Alex(x) -> Tumpus(x)))", "(-Gorpus(Alex) & Zumpus(Alex) & Tumpus(Alex))", "all x.(Alex(x) -> (-Gorpus(x) & Zumpus(x) & Tumpus(x)))", "all x y z.((Alex(x) & Gorpus(y) & Zumpus(z)) -> (-Gorpus(x) & Toumpus(x)))", "(all x.(Alex(x) -> -Gorpus(x)) & all y.(Alex(y) -> Zumpus(y))) & all z.(Alex(z) -> Tumpus(z)))", "all x.(Alex(x) -> (-Gorpus(x) & Zumpus(x) & Tumpus(x)))", "all x y.((Alex(x) & Gorpus(y) & Zumpus(y)) -> (-Gorpus(x) & Toumpus(x)))", "(all x.(Alex(x) -> -Gorpus(x)) & (Alex(x) -> Zumpus(x)) & (Alex(x) -> Tumpus(x)))", "exists x.(Alex(x) & -Gorpus(x) & Zumpus(x) & Tumpus(x))"]}
{"id": "prontoqa_train_599", "nl": "Alex is not a shumpus.", "fol": "-shumpus(Alex)", "prediction": ["all x.(Alex(x) -> -Shumpus(x))", "Alex is not a shumpus.", "(-Shumpus(Alex))", "Alex is notShumpus(Alex)", "all x.(Alex(x) -> -Shumpus(x))", "-Shumpus(Alex)", "Alex is not shumpus.", "all x.(Alex(x) -> -Shumpus(x))", "Alex is not a shumpus.", "Alex is notShumpus(Alex)", "(-Shumpus(Alex))", "-Shumpus(Alex)", "all x.(Alex(x) -> -Shumpus(x))", "(-Shumpus(Alex)).", "all x.(Alex(x) -> -Shumpus(x))", "All x.(Alex(x) -> -Shumpus(x))"]}
{"id": "prontoqa_train_600", "nl": "Every gorpus is a lempus.", "fol": "all x. (gorpus(x) -> lempus(x))", "prediction": ["all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x y.((Gorpus(x) & Lempus(y)) -> Is(x,y))", "all x.(Gorpus(x) -> Lempus(x))", "all x y.((Gorpus(x) & Lempus(y)) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "exists x.(Gorph(x) & Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "exists x.(Gorph(x) & Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "exists x.(Gorpus(x) & Lempus(x))", "exists x.(Gorpus(x) & Lempus(x))"]}
{"id": "prontoqa_train_601", "nl": "Rex is not a lempus, Rex is a dumpus, and Rex is a zumpus.", "fol": "(-lempus(Rex) & dumpus(Rex) & zumpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Lempus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> Zumpus(x)))", "all x y z.((Rex(x) & Lempus(y) & Dumpus(z)) -> (-Lempus(x) & Dumpus(x) & Zumpus(x)))", "(all x y z.((Rex(x) & Lempus(y)) -> -Lempus(x)) & ((Rex(z) & Dumpus(z)) -> Zumpus(z)))", "(all x.(Rex(x) -> -Lempus(x)) & all y.(Rex(y) -> Dumpus(y)) & all z.(Rex(z) -> Zumpus(z))))", "all x.(Rex(x) -> (-Lempus(x) & Dumpus(x) & Zumpus(x)))", "all x y z.((Rex(x) & Dumpus(y) & Zumpus(z)) -> (-Lempus(x) & Dumpus(y) & Zumpus(z)))", "(-Lempus(rex) & Dumpus(rex) & Zumpus(rex))", "all x y z.((Rex(x) & Lempus(y) & Dumpus(z)) -> (-Lempus(x) & Dumpus(x) & Zumpus(x)))", "(all x.(Rex(x) -> -Lempus(x)) & (Dumpus(x) & Zumpus(x)))", "(all x y z.((Rex(x) & Lempus(y) & Dumpus(z)) -> -Lempus(x)) & ((Rex(x) & Dumpus(x)) -> Zumpus(x)))", "(all x y z.((Rex(x) & Lempus(y)) -> -Lempus(x)) & ((Rex(z) & Dumpus(z)) -> Zumpus(z)))", "all x.(Rex(x) -> (-Lempus(x) & Dumpus(x) & Zumpus(x)))", "(all x.(Rex(x) -> -Lempus(x)) & all y.(Dumpus(y) & Zumpus(y)))", "(all x.(Rex(x) -> -Lempus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> Zumpus(x)))", "all x y z.((Rex(x) & Dumpus(y) & Zumpus(z)) -> (-Lempus(x) & Dumpus(y) & Zumpus(z)))", "all x y z.((Rex(x) & Lempus(y) & Dumpus(z)) -> (-Lempus(x) & Dumpus(x) & Zumpus(x)))"]}
{"id": "prontoqa_train_602", "nl": "Yumpuses are numpuses.", "fol": "all x. (yumpus(x) -> numpus(x))", "prediction": ["all x.(Yumpus(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x y.((Yumpus(x) & Numpus(y)) -> Numpus(x))", "(Numpus(y) & Numpus(z))", "all x.(Yumpus(x) -> Numpuse(x))", "all x y.((Yumpus(x) & Numpus(y)) -> Numpus(x))", "all x.(Umpuse(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x y.((Yumpus(x) & Numpus(y)) -> Numpuse(x))", "all x.(Umpuse(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpuse(x))", "(Numpus)", "all x.(Yumpus(x) -> Numpus(x))", "All x.(Umpuse(x) -> Numpuse(x))", "all x.(Yumpus(x) -> Numpuse(x))", "All x.(Yumpus(x) -> Numpus(x))"]}
{"id": "prontoqa_train_603", "nl": "Fae is a grimpus, Fae is a jompus, and Fae is not a numpus.", "fol": "(grimpus(Fae) & jompus(Fae) & -numpus(Fae))", "prediction": ["(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & -Fae(x)))", "all x y z.((Fae(x) & Grimpus(x) & Jompus(y) & Numpus(z)) -> (Fae(x) & -Fae(x)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Jompus(y)) & all z.(Fae(z) -> -Numpus(z))))", "all x y z.((Fae(x) & Grimpus(y) & Jompus(z)) -> (Fae(x) & -Numpus(x)))", "all x.(Fae(x) -> (Grimpus(x) | Jompus(x) | -Numpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & -Fae(x)))", "(all x y z.((Fae(x) & Grimpus(y)) -> (Fae(z) & Grimpus(z))) & ((Fae(x) & Jompus(x)) -> -Numpus(x)))", "(all x y z.(Fae(x) -> Grimpus(x)) & (Fae(y) -> Jompus(y)) & (Fae(z) -> -Numpus(z)))", "all x y z.(Fae(x) & Grimpus(x) & Jompus(y) & Numpus(z))", "exists x.(Fae(x) & Grimpus(x) & Jompus(x) & -Numpus(x))", "all x y z.(Fae(x) -> (Grimpus(x) & Jompus(y) & -Numpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> -Numpus(x)))", "all x y z.((Fae(x) & Grimpus(y) & Jompus(z)) -> (Smooth(x) & -Numpus(x)))", "(all x y z.((Fae(x) & Grimpus(y)) -> (Smooth(x) | Jompus(y)) | Numpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Jompus(y)) & all z.(Fae(z) -> -Numpus(z))))", "all x y z.(Fae(x) & Grimpus(x) & Jompus(y) & Numpus(z))"]}
{"id": "prontoqa_train_604", "nl": "Wumpuses are shumpuses.", "fol": "all x. (wumpus(x) -> shumpus(x))", "prediction": ["all x.(Wumpus(x) -> Shumpus(x))", "all x.(Wumpuse(x) -> Shumpus(x))", "all x.(Wumpus(x) -> Shumpus(x))", "all x y.((Wumpuse(x) & Shumpus(y)) -> Shumpus(x))", "all x y.((Wumpus(x) & Shumpus(y)) -> Shumpus(x))", "all x.(Wumpuse(x) -> Shumpus(x))", "(Shumpuse(wumpuse)", "all x.(Wumpus(x) -> Shumpus(x))", "(Shumpuse(wumpuse)", "all x.(Wumpuse(x) -> Shumpus(x))", "all x.(Wumpus(x) -> Shumpus(x))", "(Shumpuse(wumpuses)", "all x.(Wumpus(x) -> Humpus(x))", "all x.(Wumpuse(x) -> Shumpus(x))", "All x.(Wumpuse(x) -> Humptus(x))", "all x.(Wumpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_605", "nl": "Polly is not a shumpus, Polly is a grimpus, and Polly is a gorpus.", "fol": "(-shumpus(Polly) & grimpus(Polly) & gorpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> Grimpus(x)) & (Polly(x) -> Gorpus(x)))", "(all x.(Polly(x) -> -Shumpus(x)) & all y.(Polly(y) -> Grimpus(y)) & all z.(Polly(z) -> Gorpus(z))))", "all x y z.((Polly(x) & Grimpus(y) & Gorpus(z)) -> (-Shumpus(x) & -Shumpus(y) & -Shumpus(z) & -Shumpus(y) & -Surprise(z) & -Surprise(z)))", "(all x y z.((Polly(x) & Humpus(y)) -> -Shumpus(x)) & ((Polly(z) & Grimpus(z))) -> Gorpus(z)))", "exists x.(Polly(x) & -Shumpus(x) & Grimpus(x) & Gorpus(x))", "all x y z.((Polly(x) & Grimpus(y) & Gorpus(z)) -> (-Shumpus(x) & Grimpus(y) & Gorpus(z)))", "all x y z.((Polly(x) & Grimpus(y) & Gorpus(z)) -> (-Shumpus(x) & Grimpus(y) & Gorpus(z)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> Grimpus(x)) & (Polly(x) -> Gorpus(x)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> Grimpus(x)) & (Polly(x) -> Gorpus(x)))", "all x y.((Polly(x) & Polly(y)) -> (-Shumpus(x) | Grimpus(y) | Gorpus(y)))", "(all x y z.((Polly(x) & Humpus(y)) -> -Shumpus(x)) & ((Polly(z) & Grimpus(z)) -> Gorpus(z)))", "all x y z.((Polly(x) & Grimpus(y) & Gorpus(z)) -> (-Shumpus(x) & -Shumpus(y) & Grimpus(z) & Gorpus(z)))", "(all x.(Polly(x) -> -Shumpus(x)) & all y.(Polly(y) -> Grimpus(y)) & all z.(Polly(z) -> Gorpus(z))))", "all x y z.((Polly(x) & Shumpus(y) & Grimpus(z)) -> (-Shumpus(x) | Grimpus(x) | Gorpus(x)))", "all x y z.((Polly(x) & Grimpus(y) & Gorpus(z)) -> (-Shumpus(x) | (Smoothpus(y) | Gorpus(y))))", "(all x y z.((Polly(x) & Humpus(y)) -> -Shumpus(x)) & ((Polly(z) & Grimpus(z))) -> Gorpus(z)))"]}
{"id": "prontoqa_train_606", "nl": "Sally is a gorpus and Sally is not a grimpus and Sally is a brimpus.", "fol": "(gorpus(Sally) & -grimpus(Sally) & brimpus(Sally))", "prediction": ["(all x.(Sally(x) -> Gorpus(x)) & (Sally(x) -> -Grimpus(x)) & (Sally(x) -> Brimpus(x)))", "all x y z.((Sally(x) & Gorpus(x) & Grimpus(y) & Brimpus(z)) -> (Gorpus(x) & -Grimpus(y) & Brimpus(z)))", "all x y.((Sally(x) & Gorpus(x) & Sally(y)) -> (-Grimpus(y) & Brimpus(y)))", "(all x.(Sally(x) -> Gorpus(x)) & (Sally(x) -> -Grimpus(x)) & (Sally(x) -> Brimpus(x)))", "(all x.(Sally(x) -> Gorpus(x)) & (Sally(x) -> -Grimpus(x)) & (Sally(x) -> Brimpus(x)))", "(all x y.(Sally(x) -> Gorpus(x)) & (Sally(y) -> -Grimpus(y))) & (Sally(y) -> Brimpus(y)))", "(all x y.(Gorpus(x) -> Sally(x)) & (-Smoothpus(y) -> Sally(y))) & (Brimpus(y) -> Sally(y)))", "all x y z.((Sally(x) & Gorpus(x) & Sally(y) & Grimpus(z) & Brimpus(x)) -> (Gorpus(x) & -Grimpus(y) & Brimpus(z)))", "all x.(Sally(x) -> (Gorpus(x) & -Grimpus(x) & Brimpus(x)))", "all x y.((Sally(x) & Gorpus(x) & Sally(y)) -> (-Smoothpus(y) & Brimpus(y)))", "exists x.(Sally(x) & Gorpus(x) & -Grimpus(x) & Brimpus(x))", "(all x.(Sally(x) -> Gorpus(x)) & (Sally(x) -> -Grimpus(x)) & (Sally(x) -> Brimpus(x)))", "(all x.(Sally(x) -> Gorpus(x)) & (Sally(x) -> -Grimpus(x)) & (Sally(x) -> Brimpus(x)))", "all x.(Sally(x) -> (Gorpus(x) & -Grimpus(x) & Brimpus(x)))", "all x.(Sally(x) -> (Gorpus(x) & -Grimpus(x) & Brimpus(x)))", "(all x.(Sally(x) -> Gorpus(x)) & (Sally(x) -> -Grimpus(x)) & (Sally(x) -> Brimpus(x)))"]}
{"id": "prontoqa_train_607", "nl": "Sally is not a wumpus.", "fol": "-wumpus(Sally)", "prediction": ["Sally is not a wumpus.", "all x.(Sally(x) -> -Wumpus(x))", "(-Wumpus(Sally))", "Sally n'est pas wumpus.", "Sally is not a wumpus.", "Sally -Wumpus(Sally)", "all x.(Sally(x) -> -Wumpus(x))", "(-Wumpus(Sally))", "Sally is not a wumpus.", "-Wumpus(Sally)", "all x.(Sally(x) -> -Wumpus(x))", "Sally n\u2019est pas wumpus.", "(-Wumpus(Sally))", "Sally is not a wumpus.", "-Wumpus(Sally)", "Sally is not a wumpus."]}
{"id": "prontoqa_train_608", "nl": "Polly is not a sterpus and Polly is a jompus and Polly is a numpus.", "fol": "(-sterpus(Polly) & jompus(Polly) & numpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Sterpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Sterpus(y) & Jompus(z)) -> (-Sterpus(x) & -Jompus(x) & -Numpus(y)))", "(all x.(Polly(x) -> -Sterpus(x)) & all y.(Polly(y) -> Jompus(y)) & all z.(Polly(z) -> Numpus(z))))", "(all x y.(Sterpus(x) -> -Sterpus(x)) & (Jompus(y) -> Numpus(y)))", "all x.(Polly(x) -> (-Sterpus(x) & Jompus(x) & Numpus(x)))", "all x y z.((Polly(x) & Sterpus(y) & Jompus(z)) -> (-Sterpus(x) & -Jompus(x) & -Numpus(x)))", "all x y z.((Polly(x) & Sterpus(y) & Jompus(z)) -> (-Sterpus(x) & Jompus(x) & Numpus(x)))", "(-Sterpus(Polly) & Jompus(Poly) & Numpus(Poly))", "all x y.((Polly(x) & Polly(y)) -> (-Sterpus(x) & Jompus(y) & Numpus(y)))", "(all x y z.((Polly(x) & Sterpus(y)) -> -Sterpus(x)) & ((Polly(z) & Jompus(z)) -> Numpus(z)))", "(all x.(Polly(x) -> -Sterpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> Numpus(x)))", "(all x.(Polly(x) -> -Sterepus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> Numpus(x)))", "exists x.(Polly(x) & (-Sterpus(x) | (Jompus(x) | Numpus(x)))))", "all x y.((Polly(x) & Polly(y)) -> (-Sterpus(x) & Jompus(y) & Numpus(y)))", "(all x.(Poly(x) -> -Sterpus(x)) & (Poly(x) -> Jompus(x)) & (Poly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Sterpus(y) & Jompus(z)) -> (-Sterpus(x) & -Jompus(y) & -Nompus(z)))"]}
{"id": "prontoqa_train_609", "nl": "Fae is a gorpus and Fae is a zumpus and Fae is not a grimpus.", "fol": "(gorpus(Fae) & zumpus(Fae) & -grimpus(Fae))", "prediction": ["(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> -Grimpus(x)))", "all x y z.((Fae(x) & Gorpus(x) & Fae(y) & Zumpus(y)) -> (Gorpus(x) & -Grimpus(z)))", "all x y z.((Fae(x) & Gorpus(x) & Zumpus(y) & -Grimpus(z)) -> (Gorpus(x) & Zumpus(y) & -Grimpus(z)))", "all x y.((Fae(x) & Gorpus(x) & Fae(y)) -> (Tompus(y) & -Grimpus(y)))", "(all x.(Fae(x) -> Gorpus(x)) & all y.(Fae(y) -> Zumpus(y)) & all z.(Fae(z) -> -Grimpus(z))))", "(all x y z.((Fae(x) & Gorpus(x) & Zumpus(y)) -> (Gorpus(x) & Zumpus(y) & -Grimpus(z))))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> -Grimpus(x)))", "all x.(Fae(x) -> (Gorpus(x) & Zumpus(x) & -Grimpus(x)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> -Grimpus(x)))", "(all x y z.((Fae(x) & Gorpus(y)) -> (Gorpus(x) & Zumpus(y))) & ((Fae(z) & Grimpus(z)) -> -Grimpus(z)))", "all x y z.((Fae(x) & Gorpus(x) & Fae(y) & Zumpus(y)) -> (Gorpus(x) & -Grimpus(z)))", "all x.(Fae(x) -> (Gorpus(x) | Zumpus(x) | -Grimpus(x)))", "(all x y.(Fae(x) -> Gorpus(x)) & (Fae(y) -> Zumpus(y)) & (Fae(y) -> -Grimpus(y)))", "exists x.(Fae(x) & Gorpus(x) & Zumpus(x) & -Grimpus(x))", "all x y z.(Fae(x) -> (Gorpus(x) & Zumpus(y) & Grimpus(z)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> -Grimpus(x)))"]}
{"id": "prontoqa_train_610", "nl": "Fae is not a wumpus.", "fol": "-wumpus(Fae)", "prediction": ["all x.(Fae(x) -> -Wumpus(x))", "(-Wumpus(Fae))", "(Wumpus(Fae) & -Wumpus(Fae))", "-Wumpus(Fae)", "all x.(Fae(x) -> -Wumpus(x))", "(Wumpus(Fae) & -Wumpus(Fae))", "-Wumpus(Fae)", "(Wumpus(fe) & -Wumpus(fe))", "all x.(Fae(x) -> -Wumpus(x))", "-Wumpus(Fae)", "(Wumpus(fae) & -Wumpus(fae))", "(Wumpus(fe) & -Wumpus(fe))", "-Wumpus(fae)", "all x.(Fae(x) -> -Wumpus(x))", "-Wumpus(Fae)", "all x.(Fae(x) -> -Wumpus(x))"]}
{"id": "prontoqa_train_611", "nl": "Each tumpus is a yumpus.", "fol": "all x. (tumpus(x) -> yumpus(x))", "prediction": ["all x.(Tumpus(x) -> Yumpus(x))", "all x.(Tumpus(x) -> Yumpa(x))", "all x y.((Tumpus(x) & Yumpus(y)) -> HasTumpus(x,y))", "(all x.(Tumpus(x) -> Yumpus(x)))", "all x.(Tumpus(x) -> Yumpus(x))", "all x y.((Tumpus(x) & Yumpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Yampus(x))", "all x.(Tumpus(x) -> Yumpa(x))", "all x.(Tumpus(x) -> Yampus(x))", "all x.(Tumpus(x) -> Yumpus(x))", "all x.(Tumpus(x) -> Yumpus(x))", "exists x.(Tumpus(x) & Yampus(x))", "all x.(Tumpus(x) -> Yumpus(x))", "exists x.(Tompus(x) & Yupse(x))", "exists x.(Tumpus(x) & Yampus(x))", "exists x.(Tumpus(x) & Yampus(x))"]}
{"id": "prontoqa_train_612", "nl": "Polly is an impus, Polly is not a yumpus, and Polly is a numpus.", "fol": "(impus(Polly) & -yumpus(Polly) & numpus(Polly))", "prediction": ["(all x.(Polly(x) -> Issue(x)) & (Polly(x) -> -Yumpus(x)) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Is(x,y) & Polly(z)) -> (Impossible(x) & -Yumpus(y) & Numpus(z)))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Yumpus(x)) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Is(x,y) & Polly(z)) -> (Impossible(x) & -Yumpus(y) & Numpus(z)))", "(all x y z.(Polly(x) -> Issue(x)) & (Polly(y) -> -Yumpus(y)) & (Polly(z) -> Numpus(z)))", "exists x.(Polly(x) & Is(x) & -Yumpus(x) & Numpus(x))", "all x y z.((Polly(x) & Polly(y) & Yumpus(z)) -> (Impossible(x) & -Yumpus(y) & Numpus(z)))", "(all x y z.((Polly(x) & Impossible(x)) -> Polly(y)) & ((Polly(z) & -Yumpus(z)) -> Nompus(z)))", "(all x.(Polly(x) -> Issue(x)) & (Polly(x) -> -Yumpus(x)) & (Polly(x) -> Numpus(x)))", "(all x.(Polly(x) -> Issue(x)) & (Polly(x) -> -Yumpus(x)) & (Polly(x) -> Numpus(x)))", "all x y.((Polly(x) & Polly(y)) -> (Impossible(x) | -Yumpus(y) | Numpus(y)))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Yumpus(x)) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Imposer(y) & Polly(z)) -> (-Yumpus(z) & Numpus(z)))", "all x y z.((Polly(x) & Is(x,y) & Polly(z)) -> (Impossible(x) | -Yumpus(z) | Numpus(z)))", "(all x y z.((Polly(x) & Impossible(x)) -> Polly(y)) & ((Polly(z) & -Yumpus(z))) -> Numpus(z)))", "all x y z.((Polly(x) & Is(x,y) & Polly(z)) -> (Impossible(x) & -Yumpus(z) & Numpus(z)))"]}
{"id": "prontoqa_train_613", "nl": "Every lorpus is a dumpus.", "fol": "all x. (lorpus(x) -> dumpus(x))", "prediction": ["all x.(Lorpus(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpus(x))", "(all x.(Lorpus(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpus(x))", "exists x y.(Lorpus(x) & Dumpus(y))", "all x.exists y.(Lorpus(x) & Dumpus(y))", "all x.(Lorpus(x) -> Dumpus(x))", "exists x y.(Lorpus(x) & Dumpus(y))", "all x.(Lorpus(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpus(x))", "all x.(Larp(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpus(x))", "all x.(Larp(x) -> Dumpus(x))", "exists x.(Lorpus(x) & Dumpus(x))", "all x.(Lorpus(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_614", "nl": "Polly is not a dumpus, Polly is a tumpus, and Polly is a shumpus.", "fol": "(-dumpus(Polly) & tumpus(Polly) & shumpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Dumpus(x)) & (Polly(x) -> Tumpus(x)) & (Polly(x) -> Humpus(x)))", "all x y z.((Polly(x) & Dumpus(y) & Tumpus(z)) -> (-Dumpus(x) & Tumpus(x) & Humpus(y)))", "(all x y z.((Polly(x) & Dumpus(y)) -> -Dumpus(x)) & ((Polly(z) & Tumpus(z)) -> Humpus(z)))", "(all x.(Polly(x) -> -Dumpus(x)) & all y.(Polly(y) -> Tumpus(y))) & all z.(Polly(z) -> Humpus(z)))", "all x y z.((Polly(x) & Dumpus(y) & Tumpus(z)) -> (-Dumpus(x) & Tumpus(x) & Humpus(y)))", "exists x.(Polly(x) & -Dumpus(x) & Tumpus(x) & Humpus(x))", "all x y z.((Polly(x) & Dumpus(y) & Tumpus(z)) -> (-Dumpus(x) & Tumpus(y) & Humpus(z)))", "(all x.(Polly(x) -> -Dumpus(x)) & (Polly(x) -> Tumpus(x)) & (Polly(x) -> Humpus(x)))", "(all x y z.((Polly(x) & Dumpus(y)) -> -Dumpus(x)) & ((Polly(z) & Tumpus(z))) -> Humpus(z)))", "(all x.(Polly(x) -> -Dumpus(x)) & (Polly(x) -> Tumpus(x)) & (Polly(x) -> Humpus(x)))", "(all x.(Polly(x) -> -Dumpus(x)) & all y.(Polly(y) -> Tumpus(y))) & all z.(Polly(z) -> Humpus(z)))", "(all x.(Polly(x) -> -Dumpus(x)) & all y.(Polly(y) -> Tumpus(y))) & all z.(Polly(z) -> Humpus(z)))", "all x y z.((Polly(x) & Dumpus(y) & Tumpus(z)) -> (-Dumpus(x) & Tumpus(y) & Humpus(z)))", "all x y z.((Polly(x) & Dumpus(y) & Tumpus(z)) -> (-Dumpus(x) & Tumpus(x) & Humpus(y)))", "all x y z.((Polly(x) & Dumpus(y) & Tumpus(z) & Humpus(z)) -> (-Dumpus(x) & Tumpus(x) & Humpus(y)))", "(all x y z.((Polly(x) & Dumpus(y)) -> -Dumpus(x)) & ((Polly(z) & Tumpus(z)) -> Humpus(z)))"]}
{"id": "prontoqa_train_615", "nl": "Polly is not a lorpus.", "fol": "-lorpus(Polly)", "prediction": ["all x.(Polly(x) -> -Lorpus(x))", "(-Lorpus(Polly))", "Polly is notLorpus(Polly)", "Polly is not a lorpus.", "all x.(Polly(x) -> -Lorpus(x))", "(-Lorpus(Polly))", "(Lorpus(Poly) & -Lorpus(Poly))", "all x.(Polly(x) -> -Lorpus(x))", "all x.(Polly(x) -> -Lorpus(x))", "(-Lorpus(Polly))", "Polly is notLorpus(poly)", "All x.(Polly(x) -> -Lorpus(x))", "all x.(Polly(x) -> -Lorpus(x))", "(-Lorpus(Polly))", "-Lorpus(Polly)", "-Lorpus(Polly,y)"]}
{"id": "prontoqa_train_616", "nl": "Sally is a tumpus, Sally is a numpus, and Sally is not a lempus.", "fol": "(tumpus(Sally) & numpus(Sally) & -lempus(Sally))", "prediction": ["(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> Numpus(x)) & (Sally(x) -> -Lempus(x))))", "all x y z.((Sally(x) & Tumpus(y) & Numpus(z)) -> (Tumpus(x) | Numpus(z) | -Lempus(z)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> Numpus(y)) & all z.(Sally(z) -> -Lempus(z))))", "(all x y z.((Sally(x) & Tumpus(y)) -> Tumpus(x)) & ((Sally(z) & Numpus(z)) -> -Lempus(z)))", "all x.(Sally(x) -> (Tumpus(x) & Numpus(x) & -Lempus(x)))", "all x y z.((Sally(x) & Tumpus(y) & Numpus(z)) -> (Tumpus(x) & Numpus(x) & -Lempus(x)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> Numpus(x)) & (Sally(x) -> -Lempus(x)))", "all x y z.((Sally(x) & Tumpus(y) & Numpus(z) & -Lempus(z)) -> (Tumpus(x) | Numpus(x) | Numpus(x)))", "(all x y z.((Sally(x) & Tumpus(y) & Numpus(z)) -> Tumpus(x,y)) & ((Sally(x) & Numpus(x)) -> -Lempus(x)))", "exists x.(Sally(x) & Tumpus(x) & Numpus(x) & -Lempus(x))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> Numpus(y)) & all z.(Sally(z) -> -Lempus(z))))", "all x.(Sally(x) -> (Tumpus(x) & Numpus(x) & -Lempus(x)))", "all x y z.((Sally(x) & Tumpus(y) & Numpus(z) & -Lempus(z)) -> (Tumpus(x) & Numpus(x) & -Lempus(x)))", "all x y z.((Sally(x) & Tumpus(x) & Numpus(y) & Lempus(z)) -> (Tumpus(x) | Numpus(y) & -Lempus(z)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> Numpus(x)) & -Lempus(x)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> Numpus(y)) & all z.(Sally(z) -> -Lempus(z))))"]}
{"id": "prontoqa_train_617", "nl": "Each vumpus is a lorpus.", "fol": "all x. (vumpus(x) -> lorpus(x))", "prediction": ["all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "(all x.(Vumpus(x) -> Lorpus(x))", "all x y.((Vumpus(x) & Lorpus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x y.((Vumpus(x) & Lorpus(y)) -> -Vumpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "exists x.(Vumpus(x) & Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "exists x.(Vumpus(x) & Lord(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lordus(x))", "exists x.(Vumpus(x) & Lorpus(x))", "exists x.(Vumpus(x) & Lord(x))"]}
{"id": "prontoqa_train_618", "nl": "Stella is an impus and Stella is a brimpus and Stella is not a lorpus.", "fol": "(impus(Stella) & brimpus(Stella) & -lorpus(Stella))", "prediction": ["(all x.(Stella(x) -> Is(x)) & (Stella(x) -> Brimpus(x)) & (Stella(x) -> -Lorpus(x)))", "all x y z.((Stella(x) & Is(x,y) & Stella(z)) -> (Impossible(x) & Brimpus(y) & -Lorpus(z)))", "all x y.((Stella(x) & Stella(y)) -> (Impossible(x) & Brimpus(y) & -Lorpus(y)))", "(all x.(Stella(x) -> Issue(x)) & (Stella(x) -> Brimpus(x)) & (Stella(x) -> -Lorpus(x)))", "(all x.(Stella(x) -> Impossible(x)) & all y.(Stella(y) -> Brimpus(y)) & all z.(Stella(z) -> -Lorpus(z))))", "(all x y.((Stella(x) & Is(x,y)) -> Is(x,y)) & ((Stella(x) & Brimpus(y)) -> -Lorpus(x)))", "all x y z.((Stella(x) & Impossible(x) & Stella(y) & Brimpus(y) & -Lorpus(z)) -> (Impossible(x) & Brimpus(y) & -Lorpus(z)))", "all x.(Stella(x) -> (Impossible(x) & Brimpus(x) & -Lorpus(x)))", "(all x y z.((Stella(x) & Is(x,y)) -> Is(x,z)) & ((Stella(y) & Brimpus(z)) -> -Lorpus(y)))", "all x y z.((Stella(x) & Is(x,Issue) & Stella(y) & Brimpus(z)) -> (Is(y,z) & -Lorpus(y)))", "all x y.((Stella(x) & Stella(y)) -> (Impossible(x) & Brimpus(y) & -Lorpus(y)))", "(all x.(Stella(x) -> Is(x)) & (Stella(x) -> Brimpus(x)) & (Stella(x) -> -Lorpus(x)))", "exists x.(Stella(x) & Is(x) & Stella(x) & Brimpus(x) & -Lorpus(x))", "all x.(Stella(x) -> (Impossible(x) & Brimpus(x) & -Lorpus(x)))", "(all x y.(Issue(x) -> Impossible(x)) & (Brimpus(y) -> Brimpus(y)) & (Lorpus(y) -> -Lorpus(y)))", "(all x.(Stella(x) -> Impossible(x)) & all y.(Stella(y) -> Brimpus(y)) & all z.(Stella(z) -> -Lorpus(z))))"]}
{"id": "prontoqa_train_619", "nl": "Sterpuses are grimpuses.", "fol": "all x. (sterpus(x) -> grimpus(x))", "prediction": ["all x.(Sterpuse(x) -> Grimpuse(x))", "all x.(Sterpus(x) -> Grimpuse(x))", "all x.(Sterpuse(x) -> Grimpuse(x))", "all x y.((Sterpuse(x) & Grimpuse(y)) -> (Sterpuse(x) & Gruppuse(x)))", "(all x.(Sterpuse(x) -> Grimpuse(x)))", "all x y.((Sterpuse(x) & Grimpuse(y)) -> (Sterpuse(x) & Gruppuse(x)))", "(Sterpuses(s) & Grimpuses(s))", "all x.(Sterpuse(x) -> Grimpuse(x))", "all x.(Sterpuse(x) -> Grimpuse(x))", "(Gruppuse(sterpus) & Gruppuse(sterpus))", "(all x.(Sterpuse(x) -> Grappa(x)))", "all x.(Sterpus(x) -> Grimpus(x))", "all x.(Sterpuse(x) -> Grimpuse(x))", "all x.(Strerpuse(x) -> Grimpuse(x))", "all x.(Sterpus(x) -> Grimpuse(x))", "all x.(Strerpuse(x) -> Grappa(x))"]}
{"id": "prontoqa_train_620", "nl": "Fae is not a grimpus, Fae is a numpus, and Fae is a yumpus.", "fol": "(-grimpus(Fae) & numpus(Fae) & yumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Grimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> Yumpus(x)))", "all x y z.((Fae(x) & Grimpus(y) & Numpus(z)) -> (-Fae(x) & -Fae(x) & -Fae(x) & -Fae(x) & -Fae(x) & -Fae(x) & -Fae(x) & -Fae(x) & -Fae(x)))", "(all x.(Fae(x) -> -Grimpus(x)) & all y.(Fae(y) -> Numpus(y))) & all z.(Fae(z) -> Yumpus(z)))", "(all x y z.((Fae(x) & Grimpus(y)) -> -Grimpus(x)) & ((Fae(z) & Numpus(z))) -> Yumpus(z)))", "all x.(Fae(x) -> (-Grimpus(x) & Numpus(x) & Yumpus(x)))", "(all x.(Fae(x) -> -Grimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> Yumpus(x)))", "all x y z.((Fae(x) & Grimpus(y) & Numpus(z)) -> (-Grimpus(x) & Numpus(y) & Yumpus(z)))", "all x y z.(Fae(x) & Grimpus(y) & Numpus(z) & Yampus(x))", "exists x.(Fae(x) & -Grimpus(x) & Numpus(x) & Yumpus(x))", "(all x y z.((Fae(x) & Grimpus(y)) -> -Grimpus(x)) & ((Fae(z) & Numpus(z))) -> Yumpus(z)))", "(all x y z.((Fae(x) & Grimpus(y) & Numpus(z)) -> -Grimpus(x)) & ((Fae(x) & Numpus(x)) -> Yumpus(x)))", "all x y z.((Fae(x) & Grimpus(y) & Numpus(z)) -> (-Fae(x) & -Fae(x) & -Fae(x) & -Fae(x) & -Fae(x) & -Fae(x) & -Fae(x)))", "(all x.(Fae(x) -> -Grimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> Yumpus(z))))", "all x y z.(Fae(x) -> (-Grimpus(x) & Fae(y) & Nompus(y) & Yampus(z)))", "(all x.(Fae(x) -> -Grimpus(x)) | (Fae(x) -> Numpus(x))) | (Fae(x) -> Yumpus(x)))", "(all x.(Fae(x) -> -Grimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> Yumpus(x)))"]}
{"id": "prontoqa_train_621", "nl": "Vumpuses are lorpuses.", "fol": "all x. (vumpus(x) -> lorpus(x))", "prediction": ["all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x y.((Vumpus(x) & Lorpus(y)) -> (Lorpus(x) & -Lorpus(y)))", "(Lorpuse(Vumpus) & -Lorpuse(Vumpus))", "all x.(Vumpus(x) -> Lorpus(x))", "(Lorpuse(v) & -Lumpuse(v))", "all x.(Vumpus(x) -> Loomis(x))", "all x y.((Vumpus(x) & Lorpus(y)) -> Is(x,y))", "(Lorpuse(v) & -Lumpuse(v))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Loomis(x))", "all x.(Vumpus(x) -> (Lorpus(x) & -Lorpus(x)))", "all x.(Vumpuse(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lopse(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpuse(x) -> Lorpuse(x))"]}
{"id": "prontoqa_train_622", "nl": "Alex is a brimpus and Alex is not a lorpus and Alex is a grimpus.", "fol": "(brimpus(Alex) & -lorpus(Alex) & grimpus(Alex))", "prediction": ["(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Lorpus(x)) & (Alex(x) -> Grimpus(x)))", "all x y z.((Alex(x) & Brimpus(x) & -Lorpus(y) & Grimpus(z)) -> (Brimpus(x) & -Lorpus(y) & Grimpus(z)))", "all x y.((Alex(x) & Brimpus(x) & -Lorpus(y)) -> Grimpus(x))", "all x.(Alex(x) -> (Brimpus(x) & -Lorpus(x) & Grimpus(x)))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Lorpus(x)) & (Alex(x) -> Grimpus(x)))", "all x y z.((Alex(x) & Brimpus(x) & -Lorpus(y) & Grimpus(z)) -> (Brimpus(x) & Grimpus(z)))", "(all x.(Alex(x) -> Brimpus(x)) & all y.(Alex(y) -> -Lorpus(y))) & all z.(Alex(z) -> Grimpus(z))))", "(all x.(Alexa(x) -> Brimpus(x)) & (Alexa(x) -> -Lorpus(x)) & (Alexa(x) -> Grimpus(x)))", "(all x y.(Brimpus(x) -> Brimpus(x)) & (Lorpus(y) -> -Lorpus(y)) & (Grimpus(y) -> -Grimpus(y)))", "all x y.((Alex(x) & Brimpus(x)) -> (-Lorpus(y) & Grimpus(x)))", "(all x y.(Brimpus(x) -> Brimpus(x)) & (Lorpus(y) | Grimpus(y))))", "all x.(Alex(x) -> (Brimpus(x) & -Lorpus(x) & Grimpus(x)))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Lorpus(x)) & (Alex(x) -> Grimpus(x)))", "all x y z.((Alex(x) & Brimpus(y) & Lorpus(z)) -> (Brimpus(x) & -Lorpus(y) & Grimpus(z)))", "(all x.(Alexa(x) -> Brimpus(x)) & (Alexa(x) -> -Lorpus(x)) & (Alexa(x) -> Grimpus(x)))", "all x.(Alex(x) -> (Brumpus(x) & -Lorpus(x) & Grimpus(x)))"]}
{"id": "prontoqa_train_623", "nl": "Alex is a lorpus, Alex is not a grimpus, and Alex is a tumpus.", "fol": "(lorpus(Alex) & -grimpus(Alex) & tumpus(Alex))", "prediction": ["(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Tumpus(x)))", "all x y z.((Alex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) & -Grimpus(x) & Tumpus(x)))", "(all x y z.((Alex(x) & Lorpus(y)) -> (Lorpus(x) & -Grimpus(y))) & ((Alex(z) & Tumpus(z)) -> (Tumpus(z))))", "all x.(Alex(x) -> (Lorpus(x) | -Grimpus(x) | Tumpus(x)))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Tumpus(x)))", "all x y z.((Alex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) & -Grimpus(x) & Tumpus(x)))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> -Grimpus(y))) & all z.(Alex(z) -> Tumpus(z)))", "all x y z.((Alex(x) & Lorpus(x) & Gruppus(y) & Tumpus(z)) -> (Lorpus(x) & -Grimpus(y) & Tumpus(z)))", "(all x.(Alex(x) -> Loomis(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Tumpus(x)))", "exists x.(Alex(x) & Lorpus(x) & -Grimpus(x) & Tumpus(x))", "all x y z.((Alex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) | Tumpus(x)))", "(all x y z.((Alex(x) & Lorpus(y)) -> (Lorpus(x) & -Grimpus(y))) & ((Alex(z) & Tumpus(z)) -> (Tumpus(z))))", "all x.(Alex(x) -> (Lorpus(x) & -Grimpus(x) & Tumpus(x)))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Tumpus(x)))", "(all x.(Alex(x) -> Lopa(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Tumpus(x)))", "all x y z.((Alex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) | -Grimpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_624", "nl": "Each zumpus is a wumpus.", "fol": "all x. (zumpus(x) -> wumpus(x))", "prediction": ["all x.(Tompus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wumpus(x))", "(all x.(Zumpus(x) -> Wumpus(x)))", "all x y.((Tompus(x) & Wumpus(y)) -> HasTompus(x,y))", "all x.(Tompus(x) -> Wumpus(x))", "all x y.((Zumpus(x) & Wumpus(y)) -> Has(x,y))", "all x.(Zumpus(x) -> Wumpus(x))", "all x.(Tompus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wampus(x))", "all x.(Tompus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wumpus(x))", "all x.(Tompus(x) -> Wumpus(x))", "exists x.(Zumpus(x) & Wumpus(x))", "all x.(Tommus(x) -> Wampus(x))", "exists x.(Zumpus(x) & Wompus(x))", "exists x.(Zumpus(x) & Wumpus(x))"]}
{"id": "prontoqa_train_625", "nl": "Alex is a sterpus and Alex is a gorpus and Alex is not a wumpus.", "fol": "(sterpus(Alex) & gorpus(Alex) & -wumpus(Alex))", "prediction": ["(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Wumpus(z))))", "all x y z.((Alex(x) & Sterpus(y) & Gorpus(z)) -> (Sterepus(x) & Gorpus(y) & -Wumpus(z)))", "all x y.((Alex(x) & Sterpus(x) & Gorpus(y)) -> (-Wumpus(x)))", "all x.(Alex(x) -> (Sterpus(x) & Gorpus(x) & -Wumpus(x)))", "all x y z.((Alex(x) & Sterpus(x) & Gorpus(y) & -Wumpus(z)) -> (Sterepus(x) & Gorpus(y) & -Wumpus(z)))", "(all x.(Alex(x) -> Sterpus(x)) & (Alex(x) -> Gorpus(x)) & (Alex(x) -> -Wumpus(x)))", "(all x y z.((Alex(x) & Sterpus(y) & Gorpus(z)) -> (Sterepus(x) & Gorpus(y)) & ((Alex(x) & -Wumpus(x)) -> Sterepus(x)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Wumpus(z))))", "(all x y.((Alex(x) & Sterpus(x)) -> Sterepus(x)) & ((Alex(y) & Gorpus(y)) -> -Wumpus(y)))", "(all x.(Alex(x) -> Sterepus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Wumpus(z))))", "all x y.((Alex(x) & Sterpus(x) & Gorpus(y)) -> (-Wumpus(x)))", "all x.(Alex(x) -> (Sterepus(x) & Gorpus(x) & -Wumpus(x)))", "exists x.(Alex(x) & Sterpus(x) & Gorpus(x) & -Wumpus(x))", "all x y z.((Alex(x) & Sterpus(y) & Gorpus(z)) -> (Stereo(x) & Gorpus(x) & -Wumpus(x)))", "(all x.(Alex(x) -> Sterpus(x)) & (Alex(x) -> Gorpus(x)) & -Wumpus(x)))", "all x.(Alex(x) -> (Sterpus(x) & Gorpus(x) & -Wumpus(x)))"]}
{"id": "prontoqa_train_626", "nl": "Jompuses are tumpuses.", "fol": "all x. (jompus(x) -> tumpus(x))", "prediction": ["all x.(Jompuse(x) -> Tumpus(x))", "all x.(Jompuse(x) -> Tumulus(x))", "all x y.((Jompuse(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Jompuse(x) -> Tumpus(x))", "(Tumpuse(jompus) & HasTumpus(jompus))", "all x y.((Jompuse(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Jimpus(x) -> Tumpus(x))", "all x.(Jompuse(x) -> Tumpus(x))", "(Tumpuse(jompus) & Tumpus(jompus))", "all x.(Jompus(x) -> Tumulus(x))", "(Tumpuse(jompus) -> Tumpus(jompus))", "all x.(Jimpus(x) -> Tumulus(x))", "all x.(Jomess(x) -> Tumpus(x))", "all x.(Jompuse(x) -> Tumpus(x))", "all x.(Jumpus(x) -> Tumpus(x))", "all x.(Jompus(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_627", "nl": "Max is a rompus, Max is not a tumpus, and Max is a numpus.", "fol": "(rompus(Max) & -tumpus(Max) & numpus(Max))", "prediction": ["(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Tumpus(x)) & (Max(x) -> Numpus(x)))", "all x y z.((Max(x) & Rompus(y) & -Tumpus(z)) -> (Rompus(x) & Numpus(x)))", "(all x y z.((Max(x) & Rompus(y)) -> (Rompus(x) & -Tumpus(y)) & ((Max(z) & Numpus(z))) -> (Rompus(z) & Numpus(z))))", "all x y z.((Max(x) & Rompus(y) & Tumpus(z)) -> (Rompus(x) & -Tumpus(y) & Numpus(z)))", "all x.(Max(x) -> (Rompus(x) & -Tumpus(x) & Numpus(x)))", "(all x y z.((Max(x) & Rompus(y) & -Tumpus(z)) -> Rompus(x)) & ((Max(x) & Numpus(x)) -> Numpus(x)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Tumpus(x)) & (Max(x) -> Numpus(x)))", "all x y z.((Max(x) & Rompus(y) & Tumpus(z)) -> (Rompus(x) & -Tumpus(y) & Numpus(z)))", "all x.(Max(x) -> (Rompus(x) & -Tumpus(x) & Numpus(x)))", "(all x.(Rompus(x) -> Max(x)) & (-Tumpus(x) -> Max(x)) & (Numpus(x) -> Max(x)))", "all x y z.((Max(x) & Rompus(x) & Max(y) & Tumpus(z)) -> (-Tumpus(y) & Numpus(z)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Tumpus(x)) & (Max(x) -> Numpus(x)))", "(all x y z.((Max(x) & Rompus(y)) -> (Rompus(z) | -Tumpus(z) | Numpus(z))))", "(all x.(Max(x) -> Rompus(x)) & all y.(Max(y) -> -Tumpus(y))) & all z.(Max(z) -> Numpus(z)))", "all x y z.((Max(x) & Rompus(y) & Numpus(z)) -> (-Tumpus(z) & Rompus(x) & Numpus(x)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Tumpus(x)) & (Max(x) -> Numpus(x)))"]}
{"id": "prontoqa_train_628", "nl": "Polly is a brimpus, Polly is a numpus, and Polly is not a vumpus.", "fol": "(brimpus(Polly) & numpus(Polly) & -vumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)) & (Polly(x) -> -Vumpus(x))))", "all x y z.((Polly(x) & Brimpus(x) & Numpus(y) & -Vumpus(z)) -> (Brimpus(x) & Numpus(y) & -Vumpus(z)))", "(all x.(Polly(x) -> Brimpus(x)) & all y.(Polly(y) -> Numpus(y)) & all z.(Polly(z) -> -Vumpus(z))))", "(all x y z.((Polly(x) & Brimpus(x)) -> Polly(y)) & ((Polly(z) & Numpus(z)) -> Polly(z)))", "(all x.(Brimpus(x) -> Polly)) & (Numpus(x) -> Polly)) & -Vumpus(x)))", "all x y z.((Polly(x) & Brimpus(x) & Numpus(y) & -Vumpus(z)) -> (Brimpus(x) | Numpus(y) & -Vumpus(z)))", "all x.(Polly(x) -> (Brimpus(x) & Numpus(x) & -Vumpus(x)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)) & -Vumpus(x)))", "(all x y z.((Polly(x) & Brimpus(y)) -> Polly(x)) & ((Polly(z) & Numpus(z)) -> Polly(x)) & ((Polly(x) & -Vumpus(x)) -> Polly(x)))", "all x y z.((Polly(x) & Brimpus(x) & Numpus(y) & -Vumpus(z)) -> (Brimpus(x) & Numpus(y) & -Vumpus(z)))", "all x y z.((Polly(x) & Brimpus(y) & Numpus(z)) -> (Brimpus(x) | Numpus(z) | -Vumpus(z)))", "(all x y z.(Brimpus(x) -> Polly)) & (Nompus(y) -> Polly)) & (Vumpus(z) -> Polly)))", "(all x.(Polly(x) -> Brimpus(x)) & all y.(Polly(y) -> Numpus(y)) & all z.(Polly(z) -> -Vumpus(z))))", "all x y.((Polly(x) & Brimpus(x)) -> (Numpus(x) & -Vumpus(y)))", "(all x.(Brimpus(x) -> Polly)) & all y.(Numpus(y) -> Polly)) & all z.(Vumpus(z) -> Polly)))", "all x y z.((Polly(x) & Brimpus(x) & Numpus(y) & Vumpus(z)) -> (Brimpus(x) & Numpus(y) & -Vumpus(z)))"]}
{"id": "prontoqa_train_629", "nl": "Alex is a lempus, Alex is an impus, and Alex is not a gorpus.", "fol": "(lempus(Alex) & impus(Alex) & -gorpus(Alex))", "prediction": ["(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Imperator(y)) & all z.(Alex(z) -> -Gorpus(z))))", "all x y z.((Alex(x) & Lempus(x) & Issue(y) & -Gorpus(z)) -> (Lempus(x) & Issue(y) & -Gorpus(z)))", "all x y z.((Alex(x) & Lempus(x) & Imperator(y) & -Gorpus(z)) -> (Lempus(x) & Imperator(y) & -Gorpus(z)))", "(all x.(Alex(x) -> Lempus(x)) & (Alex(x) -> Imperator(x)) & (Alex(x) -> -Gorpus(x)))", "(all x.(Alexa(x) -> Lempus(x)) & all y.(Alexa(y) -> Issue(y)) & all z.(Alexa(z) -> -Gorpus(z))))", "all x.(Alex(x) -> (Lempus(x) & Issue(x) & -Gorpus(x)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Issue(y)) & all z.(Alex(z) -> -Gorpus(z))))", "exists x.(Alex(x) & Lempus(x) & Is(x) & -Gorpus(x))", "all x y z.((Alex(x) & Lempus(x) & Issue(y) & -Gorpus(z)) -> (Lempus(x) | Issue(y) & -Gorpus(z)))", "(all x y z.(Alex(x) -> Lempus(x)) & (Alex(y) -> Imperator(y)) & (Alex(z) -> -Gorpus(z))))", "all x.(Alex(x) -> (Lempus(x) & Impossible(x) & -Gorpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Imperator(z)) -> (Lempus(x) & Imperator(z) & -Gorpus(x)))", "(all x.(Alexa(x) -> Lempus(x)) & all y.(Alexa(y) -> Imperator(y)) & all z.(Alexa(z) -> -Gorpus(z))))", "(all x.(Alex(x) -> Lempus(x)) & (Alex(x) -> Imperator(x)) & -Alex(x)))", "(all x y z.(Alex(x) -> Lempus(x)) & (Alex(y) -> Issue(y)) & (Alex(z) -> -Gorpus(z)))", "all x y z.((Alex(x) & Lempus(y) & Impossible(z)) -> (Lempus(x) | Impossible(z) | -Gorpus(x)))"]}
{"id": "prontoqa_train_630", "nl": "Alex is not a tumpus.", "fol": "-tumpus(Alex)", "prediction": ["all x.(Alex(x) -> -Tumpus(x))", "Alex is notTumpus(Alex)", "(-Tumpus(Alex))", "Alex is not a Tumpus.", "all x.(Alex(x) -> -Tumpus(x))", "-Tumpus(Alex)", "Alex is not a tumpus.", "all x.(Alex(x) -> -Tumpus(x))", "Alex is notTumpus(Alex)", "(-Tumpus(Alex)", "-Tumpus(Alex)", "all x.(Alex(x) -> -Tumpus(x))", "Alex is notTumpus.", "all x.(Alex(x) -> -Tumpus(x))", "(-Tumpus(Alex)", "All x.(Alex(x) -> -Tumpus(x))"]}
{"id": "prontoqa_train_631", "nl": "Rex is a zumpus, Rex is a wumpus, and Rex is not a jompus.", "fol": "(zumpus(Rex) & wumpus(Rex) & -jompus(Rex))", "prediction": ["(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Wumpus(y)) & all z.(Rex(z) -> -Jompus(z))))", "all x y z.((Rex(x) & Zumpus(y) & Wumpus(z)) -> (Tompus(x) | Wumpus(z) | -Jompus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Wumpus(x)) & (Rex(x) -> -Jompus(x)))", "(all x y z.((Rex(x) & Zumpus(y)) -> Rex(x)) & ((Rex(z) & Wumpus(z)) -> Rex(x)) & ((Rex(x) & -Jompus(x)) -> Rex(x)))", "all x y z.((Rex(x) & Zumpus(x) & Wumpus(y) & -Jompus(z)) -> (Tompus(x) & Wumpus(y) & -Jumpus(z)))", "all x.(Rex(x) -> (Tompus(x) | Wumpus(x) | -Jompus(x)))", "(all x y z.((Rex(x) & Zumpus(y)) -> (Tompus(x) | Wumpus(y))) & ((Rex(z) & -Jompus(z)) -> (Wumpus(z))))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Wumpus(y)) & all z.(Rex(z) -> -Jompus(z))))", "(all x y z.((Rex(x) & Zumpus(x)) -> Rex)) & ((Rex(y) & Wumpus(y)) -> Rex)) & ((Rex(z) & -Jompus(z)) -> Rex)))", "all x.(Rex(x) -> (Tompus(x) | Wumpus(x) | -Jompus(x)))", "all x y z.((Rex(x) & Zumpus(y) & Wumpus(z)) -> (Tompus(x) | Wumpus(z) | -Jumpus(z)))", "all x y z.((Rex(x) & Zumpus(x) & Wumpus(y) & -Jompus(z)) -> (Tompus(x) | Wumpus(y) & -Jumpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Wumpus(x)) & (Rex(x) -> -Jompus(x)))", "(All x.(Rex,Zumpus) -> Rex(x)) & (Rex,Wumpus) -> Rex(x)) & (Rex,Jompus) -> -Rex(x)))", "all x y z.((Rex(x) & Tompus(y) & Wumpus(z)) -> (Tompus(x) | Wumpus(z) | -Jumpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Wumpus(y)) & all z.(Rex(z) -> -Jompus(z))))"]}
{"id": "prontoqa_train_632", "nl": "Sam is a jompus, Sam is a yumpus, and Sam is not a gorpus.", "fol": "(jompus(Sam) & yumpus(Sam) & -gorpus(Sam))", "prediction": ["(all x.(Sam(x) -> Jompus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> -Gorpus(x)))", "all x y z.((Sam(x) & Jompus(x) & Yumpus(y) & -Gorpus(z)) -> (Jompus(x) & Yumpus(y) & -Gorpus(z)))", "(all x.(Sam(x) -> Jompus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> -Gorpus(x)))", "all x y z.((Sam(x) & Jompus(y) & Yumpus(z)) -> (Jompus(x) & Yampus(y) & -Gorpus(z)))", "(all x.(Sam(x) -> Jompus(x)) & all y.(Sam(y) -> Yumpus(y)) & all z.(Sam(z) -> -Gorpus(z))))", "all x.(Sam(x) -> (Jompus(x) | Yumpus(x) | -Gorpus(x)))", "(all x y z.((Sam(x) & Jompus(y)) -> (Jompus(z) | Yumpus(z))) & ((Sam(x) & Gorpus(x)) -> -Gorpus(x)))", "all x y z.((Sam(x) & Jompus(x) & Yumpus(y) & -Gorpus(z)) -> (Jompus(x) | Yampus(y) & -Gorpus(z)))", "(all x.(SameDay(x) -> Jompus(x)) & (SameDay(x) -> Yumpus(x)) & (SameDay(x) -> -Gorpus(x)))", "(all x y z.(Jompus(x) -> Sam(x)) & (Yumpus(y) -> Sam(z)) & (Gorpus(z) -> Sam(z)))", "(all x y z.(Jompus(x) -> SamMammal(x)) & (Yumpus(y) -> SamMammal(y)) & (Gorpus(z) -> -SamMammal(z)))", "(all x.(Jompus(x) -> SamMole(x)) & (Yumpus(x) -> SamMole(x)) & -Gorpus(x)))", "all x.(Sam(x) -> (Jompus(x) | Yumpus(x) | -Gorpus(x)))", "(all x.(Sam(x) -> Jompus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> -Gorpus(x)))", "all x y z.((Sam(x) & Jompus(y) & Yumpus(z)) -> (Jompus(x) | Yampus(z) | -Gorpus(x)))", "all x y z.((Sam(x) & Jompus(y) & Yumpus(z)) -> (Jompus(x) | Yampus(z) | -Gorpus(x)))"]}
{"id": "prontoqa_train_633", "nl": "Brimpuses are rompuses.", "fol": "all x. (brimpus(x) -> rompus(x))", "prediction": ["all x.(Brompus(x) -> Rompus(x))", "all x.(Brompus(x) -> Rompus(x))", "all x y.((Brompus(x) & Brimpus(y)) -> Rompus(x))", "(Rompus(brimpus) & Rompus(brimpus))", "all x.(Brimpus(x) -> Rompus(x))", "(Rompus(brimpus) -> Roopus(brimpus))", "all x y.((Brompus(x) & Brimpus(y)) -> Rompus(x))", "all x.(Brimpus(x) -> Rompus(x))", "all x y.((Brimpus(x) & Rompus(y)) -> Is(x,y))", "all x.(Brompus(x) -> Rompus(x))", "all x.(Brumpuse(x) -> Rompus(x))", "all x.(Brimpus(x) -> Rompus(x))", "all x.(Brompus(x) -> Rompus(x))", "All x.(Brimpus(x) -> Rompus(x))", "all x.(Brimpus(x) -> Rompus(x))", "all x.(Brompus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_634", "nl": "Polly is an impus, Polly is a grimpus, and Polly is not a rompus.", "fol": "(impus(Polly) & grimpus(Polly) & -rompus(Polly))", "prediction": ["(all x.(Polly(x) -> Issue(x)) & (Polly(x) -> Grimpus(x)) & -Rompus(x)))", "all x y z.((Polly(x) & Polly(y) & Grimpus(z)) -> (Impossible(x) & Greasy(y) & -Rompus(z)))", "(all x y z.(Polly(x) -> Issue(x)) & (Polly(y) -> Grimpus(y)) & (Polly(z) -> -Rompus(z))))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> Grimpus(x)) & -Rompus(x)))", "all x y z.((Polly(x) & Impossible(x) & Polly(y) & Grimpus(y)) -> (-Rompus(z))))", "(all x y z.((Polly(x) & Impossible(x)) -> Polly(y)) & ((Polly(z) & Grimpus(z)) -> Polly(z)))", "exists x.(Polly(x) & Is(x) & Polly(x) & Grimpus(x) & -Rompus(x))", "(all x.(Polly(x) -> Issue(x)) & (Polly(x) -> Grimpus(x)) & (Polly(x) -> -Rompus(x)))", "(all x y z.((Polly(x) & Imperium(y) & Grimpus(z)) -> Polly(x)) & ((Polly(x) & Grimpus(x)) -> -Rompus(x)))", "all x y z.((Polly(x) & Polly(y) & Grimpus(z)) -> (Impossible(x) & Grimpus(y) & -Rompus(z)))", "all x y z.((Polly(x) & Is(x,y) & Polly(z)) -> (Impossible(x) & Grimpus(z) & -Rompus(z)))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> Grimpus(x)) & (Polly(x) -> -Rompus(x)))", "all x y z.((Polly(x) & Impossible(x) & Polly(y) & Grimpus(y)) -> (-Rompus(z))))", "all x y.((Polly(x) & Polly(y)) -> (Impossible(x) | Grimpus(y) | -Rompus(y)))", "all x y z.((Polly(x) & Polly(y) & Grimpus(z)) -> (Impossible(x) & Grimpus(y) & -Rompus(z)))", "(all x.(Polly(x) -> Issue(x)) & (Polly(x) -> Grimpus(x)) & -Rompus(x)))"]}
{"id": "prontoqa_train_635", "nl": "Polly is not a brimpus.", "fol": "-brimpus(Polly)", "prediction": ["all x.(Polly(x) -> -Brimpus(x))", "(-Brimpus(Polly))", "Polly is not a Brimpus.", "all x.(Polly(x) -> -Brimpus(x))", "Polly is not a Brimpus.", "(-Brimpus(Polly))", "Polly -Brimpus(Polly)", "(Brimpus(Polly) & -Brimpus(Polly))", "Polly is not a brimpus.", "all x.(Brimpus(x) -> -Blumpus(x))", "all x.(Polly(x) -> -Brumpus(x))", "(-Brumpus(Polly))", "-(Brimpus(Polly))", "-Brimpus(Polly)", "all x.(Polly(x) -> -Brimpus(x))", "(-Brumpus(Polly))"]}
{"id": "prontoqa_train_636", "nl": "Every tumpus is a lorpus.", "fol": "all x. (tumpus(x) -> lorpus(x))", "prediction": ["all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x y.((Tumpus(x) & Lorpus(y)) -> Has(x,y))", "(all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x y.((Tumpus(x) & Lorpus(y)) -> Is(x,y))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lord(x))", "all x.(Tumpus(x) -> Loomis(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lord(x))", "exists x.(Tumpus(x) & Thrombos(x))", "all x.(Tumpus(x) -> lorpus(x))", "exists x.(Tumpus(x) & Lord(x))", "exists x.(Tumpus(x) & Lorpus(x))"]}
{"id": "prontoqa_train_637", "nl": "Alex is a lempus and Alex is a numpus and Alex is not a lorpus.", "fol": "(lempus(Alex) & numpus(Alex) & -lorpus(Alex))", "prediction": ["all x y z.((Alex(x) & Lempus(x) & Numpus(y) & -Lorpus(z)) -> (Lempus(x) & Numpus(y) & -Lorpus(z)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Numpus(y)) & all z.(Alex(z) -> -Lorpus(z))))", "(all x.(Alex(x) -> Lempus(x)) & (Alex(x) -> Numpus(x)) & (Alex(x) -> -Lorpus(x))))", "all x y.((Alex(x) & Lempus(x) & Numpus(y)) -> (-Lorpus(x)))", "(all x.(Alexa(x) -> Lempus(x)) & all y.(Alexa(y) -> Numpus(y)) & all z.(Alexa(z) -> -Lorpus(z))))", "all x.(Alex(x) -> (Lempus(x) & Numpus(x) & -Lorpus(x)))", "all x y z.((Alex(x) & Lempus(x) & Numpus(y) & -Lorpus(z)) -> (Lempus(x) & Numpus(y) & -Lorpus(z)))", "exists x.(Alex(x) & Lempus(x) & Numpus(x) & -Lorpus(x))", "(all x y.(Lempus(x) -> Alex(x)) & (Numpus(y) -> Alex(y)) & (Lorpus(y) -> Alex(y)))", "(all x.(Alexa(x) -> Lempus(x)) & (Alexa(x) -> Numpus(x)) & (Alexa(x) -> -Lorpus(x)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Numpus(y)) & all z.(Alex(z) -> -Lorpus(z))))", "all x y.((Alex(x) & Lempus(x) & Numpus(y)) -> (Lorpus(x) & -Lorpus(y)))", "all x.(Alex(x) -> (Lempus(x) & Numpus(x) & -Lorpus(x)))", "all x y z.((Alex(x) & Lempus(x) & Numpus(y) & -Lorpus(z)) -> (Lempus(x) | Numpus(y) & -Lorpus(z)))", "(all x y z.(Alex(x) -> Lempus(x)) & (Alex(y) -> Numpus(y)) & (Alex(z) -> -Lorpus(z))))", "all x.(Alex(x) -> (Lempus(x) & Numpus(x) & -Lorpus(x)))"]}
{"id": "prontoqa_train_638", "nl": "Numpuses are brimpuses.", "fol": "all x. (numpus(x) -> brimpus(x))", "prediction": ["all x.(Numpus(x) -> Brimbus(x))", "all x.(Numpuse(x) -> Brimpuse(x))", "all x y.((Numpus(x) & Brimpus(y)) -> Is(x,y))", "(all x.(Numpuse(x) -> Brimbus(x)))", "all x y.((Numpuse(x) & Brimpus(y)) -> (Brimpus(x) & Brimpus(y)))", "all x.(Numpus(x) -> Brimpus(x))", "all x.(Numptus(x) -> Brimbus(x))", "(Brimpus(nupuse) & Brimpus(nupuse))", "all x.(Numpuse(x) -> Brimpuse(x))", "all x.(Numpus(x) -> Brimbus(x))", "all x.(Numptus(x) -> Brimpuse(x))", "all x.(Numpuse(x) -> Brimpuse(x))", "(Brimpus)", "all x.(Numpus(x) -> Brimpus(x))", "all x.(Numpuse(x) -> Brimpuse(x))", "all x.(Numpus(x) -> Brimbus(x))"]}
{"id": "prontoqa_train_639", "nl": "Sally is not a brimpus and Sally is a zumpus and Sally is a jompus.", "fol": "(-brimpus(Sally) & zumpus(Sally) & jompus(Sally))", "prediction": ["(all x.(Sally(x) -> -Brimpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> Jompus(x)))", "all x y z.((Sally(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Zumpus(x) & Jompus(x)))", "(all x.(Sally(x) -> -Brimpus(x)) & all y.(Sally(y) -> Zumpus(y)) & all z.(Sally(z) -> Jompus(z))))", "all x.(Sally(x) -> (-Brimpus(x) & Zumpus(x) & Jompus(x)))", "(all x.(Brimpus(x) -> -Brimpus(x)) & (Zumpus(x) -> Zumpus(x)) & (Jompus(x) -> Jompus(x)))", "(all x y.(Brimpus(x) -> -Brimpus(x)) & (Zumpus(y) -> Zumpus(y)) & (Jimpus(y) -> -Brimpus(y)))", "(all x y z.((Sally(x) & Brimpus(y) & Zumpus(z)) -> -Brimpus(x)) & ((Sally(x) & Zumpus(x)) -> Jompus(x)))", "(-Brimpus(Sally) & Zumpus(Sally) & Jompus(Sally))", "all x y.((Sally(x) & Brimpus(y) & Zumpus(y)) -> (-Brimpus(x) & Zumpus(y) & Jompus(y)))", "all x y z.((Sally(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Zumpus(x) & Jompus(x)))", "(all x.(Sally(x) -> -Brimpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> Jompus(x)))", "all x.(Sally(x) -> (-Brimpus(x) & Zumpus(x) & Jompus(x)))", "exists x.(Sally(x) & -Brimpus(x) & Zumpus(x) & Jompus(x))", "(all x.(Sally(x) -> -Brimpus(x)) & all y.(Sally(y) -> Zumpus(y)) & all z.(Sally(z) -> Jompus(z))))", "all x y.((Sally(x) & Brimpus(y) & Zumpus(x)) -> (-Brimpus(x) & Zumpus(y) & Jompus(y)))", "all x y z.((Sally(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Zumpus(y) & Jompus(z)))"]}
{"id": "prontoqa_train_640", "nl": "Numpuses are lorpuses.", "fol": "all x. (numpus(x) -> lorpus(x))", "prediction": ["all x.(Numpus(x) -> Lorpus(x))", "all x.(Numpus(x) -> Lorpus(x))", "(Lumpuse(Numpus) & -Lumpus(Numpus))", "all x y.((Numpus(x) & Lorpus(y)) -> Is(x,y))", "all x.(Numpus(x) -> Lorpuse(x))", "all x.(Numptus(x) -> Lorpus(x))", "all x.(Numpus(x) -> Loomis(x))", "all x y.((Numpus(x) & Lorpus(y)) -> Loomis(x))", "(Lumpuse(nupus) & Thrombus(nupus))", "all x.(Numpus(x) -> Lorpus(x))", "all x.(Numpuse(x) -> Loomis(x))", "all x.(Numptus(x) -> Lorpuse(x))", "all x.(Numpus(x) -> Lorpuse(x))", "all x.(Numpus(x) -> Loomis(x))", "all x.(Numpuse(x) -> Lompuse(x))", "All x.(Numpus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_641", "nl": "Stella is a dumpus and Stella is not a lorpus and Stella is a shumpus.", "fol": "(dumpus(Stella) & -lorpus(Stella) & shumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Lorpus(x)) & (Stella(x) -> Humpus(x)))", "all x y z.((Stella(x) & Dumpus(x) & Stella(y) & -Lorpus(y)) -> (Shumpus(z) & -Lorpus(y) & Shumpus(z)))", "(all x y.((Stella(x) & Dumpus(x)) -> (Dumpus(x) & -Lorpus(y)) & ((Stella(x) & Humpus(y)) -> (Shumpus(x))))", "(all x y z.((Stella(x) & Dumpus(x)) -> (Dumpus(x) & -Lorpus(y)) & ((Stella(z) & Humpus(z))) -> (Shumpus(z))))", "all x y.((Stella(x) & Dumpus(x)) -> (-Lorpus(y) & Shumpus(x)))", "all x y z.((Stella(x) & Dumpus(x) & Stella(y) & Lorpus(z)) -> (-Lorpus(y) & Shumpus(y)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Lorpus(x)) & (Stella(x) -> Humpus(x)))", "all x.(Stella(x) -> (Dumps(x) & -Lorpus(x) & Humpus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> -Lorpus(y))) & all z.(Shumpus(z) -> Shumpus(z)))", "(all x y.(Stella(x) -> Dumpus(x)) & (Stella(y) -> -Lorpus(y)) & (Stella(y) -> Humpus(y)))", "all x.(Stella(x) -> (Dumpus(x) & -Lorpus(x) & Shumpus(x)))", "exists x.(Stella(x) & Dumpus(x) & -Lorpus(x) & Shumpus(x))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Lorpus(x)) & (Stella(x) -> Humpus(x)))", "all x y z.((Stella(x) & Dumpus(x) & Stella(y) & Lorpus(z)) -> (-Lorpus(y) & Shumpus(y)))", "all x y.((Stella(x) & Dumpus(x) & Stella(y)) -> (-Lorpus(y) & Shumpus(y)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Lorpus(x)) & (Stella(x) -> Shumpus(x)))"]}
{"id": "prontoqa_train_642", "nl": "Rex is a wumpus, Rex is not a lempus, and Rex is a grimpus.", "fol": "(wumpus(Rex) & -lempus(Rex) & grimpus(Rex))", "prediction": ["(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Grimpus(x)))", "all x y z.((Rex(x) & Wumpus(y) & Lempus(z)) -> (Wumpus(x) & -Lempus(y) & Grimpus(z)))", "(all x y z.((Rex(x) & Wumpus(y)) -> Wumpus(x)) & ((Rex(z) & -Lempus(z))) -> Grimpus(z)))", "(all x.(Rex(x) -> Wumpus(x)) & (-Lempus(x) & (Grimpus(x) | Grimpus(x))))", "all x y z.((Rex(x) & Wumpus(y) & Lempus(z)) -> (Wumpus(x) & -Lempus(y) & Grimpus(z)))", "all x.(Rex(x) -> (Wumpus(x) & -Lempus(x) & Grimpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & all y.(Rex(y) -> -Lempus(y))) & all z.(Rex(z) -> Grimpus(z)))", "(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Grimpus(x)))", "(all x y z.((Rex(x) & Wumpus(y)) -> Wumpus(x)) & ((Rex(z) & -Lempus(z))) -> Grimpus(z)))", "(all x y z.((Rex(x) & Wumpus(y) & Lempus(z)) -> Wumpus(x)) & ((Rex(x) & -Lempus(x)) -> Grimpus(x)))", "(all x.(Wumpus(x) -> Rex)) & (-Lempus(x) -> Rex)) & (Grimpus(x) -> Rex)))", "all x y z.((Rex(x) & Wumpus(y) & Lempus(z) & Grimpus(x)) -> (Wumpus(x) & -Lempus(y) & Grimpus(z)))", "all x y z.((Rex(x) & Wumpus(y) & Lempus(z)) -> (Wumpus(x) & -Lempus(y) & Grimpus(z)))", "all x y z.((Rex(x) & Lempus(y) & Grimpus(z)) -> (Wumpus(x) & -Lempus(y) & Grimpus(z)))", "all x.(Rex(x) -> (Wumpus(x) & -Lempus(x) & Grimpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & (-Lempus(x) & (Grimpus(x) | Grimpus(x))))"]}
{"id": "prontoqa_train_643", "nl": "Tumpuses are grimpuses.", "fol": "all x. (tumpus(x) -> grimpus(x))", "prediction": ["all x.(Tumpus(x) -> Grimpuse(x))", "all x.(Tumpuse(x) -> Grimpuse(x))", "all x.(Tumpus(x) -> Grimpuse(x))", "all x y.((Tumpuse(x) & Grimpuse(y)) -> (Smoothpuse(x) & Grapple(y)))", "all x y.((Tumpus(x) & Grimpus(y)) -> Grappa(x))", "(Grimpuse(tump) & Gruffus(tump))", "all x.(Tumpuse(x) -> Grimpuse(x))", "(Gruffus(tumulus) & Gruffus(tumulus))", "all x.(Tumpus(x) -> Grimpuse(x))", "(Smoky(tumpus) -> Grimpuse(tumpus))", "all x.(Tumulus(x) -> Grimpuse(x))", "all x.(Tumulus(x) -> Grappase(x))", "all x.(Tumpus(x) -> Grimpuse(x))", "all x.(Tumpuse(x) -> Grimpuse(x))", "all x.(Tumpus(x) -> Grappa(x))", "all x.(Mumpsue(x) -> Grimpuse(x))"]}
{"id": "prontoqa_train_644", "nl": "Fae is a shumpus and Fae is a lempus and Fae is not a grimpus.", "fol": "(shumpus(Fae) & lempus(Fae) & -grimpus(Fae))", "prediction": ["(all x.(Fae(x) -> Humpus(x)) & (Fae(x) -> Lempus(x)) & -Fae(x)))", "all x y z.((Fae(x) & Shumpus(x) & Lempus(y) & Grimpus(z)) -> (Shumpus(x) & Lempus(y) & -Smoothpus(z)))", "(all x.(Fae(x) -> Humpus(x)) & all y.(Fae(y) -> Lempus(y)) & all z.(Fae(z) -> -Grimpus(z))))", "(all x y.(Fae(x) -> Humpus(x)) & (Fae(y) -> Lempus(y)) & (Fae(y) -> -Grimpus(y)))", "(all x y z.((Fae(x) & Humpus(y)) -> Shumpus(x)) & ((Fae(z) & Lempus(z)) -> Lempus(z)) & ((Fae(z) & -Grimpus(z))) -> -Shumpus(z)))", "(all x.(Fae(x) -> Shumpus(x)) & (Fae(x) -> Lempus(x)) & (Fae(x) -> -Grimpus(x)))", "all x y z.((Fae(x) & Shumpus(y) & Lempus(z)) -> (Shumpus(x) & Lempus(x) & -Grimpus(x)))", "all x y.((Fae(x) & Shumpus(x) & Lempus(y)) -> (Shumpus(x) & Lempus(y) & -Grimpus(y)))", "all x.(Fae(x) -> (Shumpus(x) & Lempus(x) & -Grimpus(x)))", "exists x.(Fae(x) & Humpus(x) & Lempus(x) & -Grimpus(x))", "all x y z.((Fae(x) & Shumpus(x) & Lempus(y) & -Grimpus(z)) -> (Shumpus(x) & Lempus(y) & -Smoothpus(z)))", "(all x y.((Fae(x) & Humpus(y)) -> Shumpus(x)) & ((Fae(x) & Lempus(y)) -> -Grimpus(x)))", "(all x.(Fae(x) -> Shumpus(x)) & all y.(Fae(y) -> Lempus(y)) & all z.(Fae(z) -> -Grimpus(z))))", "(all x.(Fae(x) -> Humpus(x)) & (Fae(x) -> Lempus(x)) & (Fae(x) -> -Grimpus(x)))", "all x y.((Fae(x) & Shumpus(x) & Lempus(y)) -> (Shumpus(x) & Lempus(y) & -Grimpus(x)))", "all x.(Fae(x) -> (Shumpus(x) & Lempus(x) & -Grimpus(x)))"]}
{"id": "prontoqa_train_645", "nl": "Wren is a wumpus and Wren is not a yumpus and Wren is a sterpus.", "fol": "(wumpus(Wren) & -yumpus(Wren) & sterpus(Wren))", "prediction": ["(all x.(Wren(x) -> Wumpus(x)) & (-Yumpus(x) & -Sterpus(x)))", "all x y z.((Wren(x) & Wren(y) & Yumpus(z)) -> (Wumpus(x) & -Yumpus(y) & Sterpus(z)))", "(all x y.(Wren(x) -> Wumpus(x)) & (-Yumpus(y)) & (-Yumpus(y) & -Sterpus(y))))", "all x y.((Wren(x) & Wren(y)) -> (Wumpus(x) & -Yumpus(y) & Sterpus(y)))", "(all x y z.((Wren(x) & Wren(y) & Yumpus(z)) -> Wumpus(x)) & ((Wren(y) & -Yumpus(y)) -> Sterpus(y)))", "(all x.(Wren(x) -> Wumpus(x)) & (-Yumpus(x) & -Sterpus(x)))", "all x y z.((Wren(x) & Wren(y) & Yumpus(z)) -> (Wumpus(x) & -Yumpus(y) & Sterpus(z)))", "all x.(Wren(x) -> (Wumpus(x) & -Yumpus(x) & Sterpus(x)))", "(all x.(Wren(x) -> Wumpus(x)) & all y.(Wren(y) -> -Yumpus(y))) & all z.(Wren(z) -> Sterpus(z)))", "all x y z.((Wren(x) & Wren(y) & Sterpus(z)) -> (Wumpus(x) & -Yumpus(y) & Sterpus(z)))", "all x y.((Wren(x) & Wren(y)) -> (Wumpus(x) | -Yumpus(y) | Sterpus(y)))", "(all x.(Wren(x) -> Wumpus(x)) & (-Yumpus(x) & (-Yumpus(x) | Sterpus(x))))", "(all x y.(Wren(x) -> Wumpus(x)) & (-Yumpus(y)) & (-Yumpus(y) & -Sterpus(y))))", "all x.(Wren(x) -> (Wumpus(x) & -Yumpus(x) & Sterpus(x)))", "all x y z.((Wren(x) & Wren(y) & Yumpus(z)) -> (Wumpus(x) & -Yumpus(y) & Sterpus(z)))", "(all x.(Wren(x) -> Wumpus(x)) & (-Yumpus(y)) & (-Yumpus(y) & -Sterpus(y))))"]}
{"id": "prontoqa_train_646", "nl": "Tumpuses are vumpuses.", "fol": "all x. (tumpus(x) -> vumpus(x))", "prediction": ["all x.(Tumpuse(x) -> Vampuse(x))", "all x.(Tumpus(x) -> Vampuse(x))", "all x.(Tumpuse(x) -> Vampuse(x))", "all x y.((Tumpuse(x) & Vampuse(y)) -> Is(x,y))", "all x.((Tumpuse(x) & Vampuse(x)) -> -Vampuse(x))", "(Vumpuse(tump) & Vampuse(tump))", "all x.(Tumpus(x) -> Vampuse(x))", "all x.(Tumpuse(x) -> Vampuse(x))", "all x y.((Tumpuse(x) & Vampuse(y)) -> Vampuse(x))", "all x.(Mumps(x) -> Vampuse(x))", "(Vampuse(tump) & Vampuse(tump))", "(Vumpuse(tump) & Vampuse(tump))", "all x.(Tumulus(x) -> Vulpuse(x))", "all x.(Tumpuse(x) -> Vampuse(x))", "all x.(Tumpus(x) -> Vampus(x))", "all x.(Muffus(x) -> Vampuse(x))"]}
{"id": "prontoqa_train_647", "nl": "Rex is an impus and Rex is a shumpus and Rex is not a vumpus.", "fol": "(impus(Rex) & shumpus(Rex) & -vumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Is(x)) & (Rex(x) -> Shumpus(x)) & (Rex(x) -> -Vumpus(x)))", "all x y z.((Rex(x) & IsImpossible(x) & Rex(y) & Shumpus(y)) -> (Impossible(x) & -Vumpus(y)))", "(all x.(Rex(x) -> IsImpossible(x)) & (Rex(x) -> Humpus(x)) & (Rex(x) -> -Vumpus(x)))", "all x y.((Rex(x) & IsImpossible(x) & Rex(y)) -> (Shumpus(y) & -Vumpus(y)))", "all x.(Rex(x) -> (Impossible(x) & Humpus(x) & -Vumpus(x)))", "(all x.(Rex(x) -> Impossible(x)) & (Rex(x) -> Humpus(x)) & (Rex(x) -> -Vumpus(x)))", "all x y z.((Rex(x) & Impossible(x) & Shumpus(y) & -Vumpus(z)) -> (Impossible(x) & Shumpus(y) & -Vumpus(z)))", "(all x y.(Rex(x) -> Is(x,Is(x)) & (Rex(y) -> Shumpus(y)) & (Rex(y) -> -Vumpus(y)))", "(all x y.(Rex(x) -> Is(x,y)) & (Rex(y) -> Shumpus(y)) & (Rex(y) -> -Vumpus(y)))", "all x y.((Rex(x) & Impossible(x) & Shumpus(y)) -> (-Vumpus(x)))", "all x y z.((Rex(x) & Imperator(x) & Shumpus(y) & -Vimpus(z)) -> (Impossible(x) & Shumpus(y) & -Vimpus(z)))", "(all x y z.(Rex(x) -> Is(x,Is(x)) & (Rex(y) -> Shumpus(y)) & (Rex(z) -> -Vumpus(z))))", "all x.(Rex(x) -> (Impossible(x) & Shumpus(x) & -Vumpus(x)))", "(all x.(Rex,Impossible(x) -> Shumpus(x)) & all y.(Rex,Vumpus) -> -Impossible(y)))", "(all x.(Rex(x) -> Is(x)) & (Rex(x) -> Shumpus(x)) & (Rex(x) -> -Vumpus(x)))", "(all x.(Rex(x) -> Imperium(x)) & (Rex(x) -> Humpus(x)) & (Rex(x) -> -Vimpus(x)))"]}
{"id": "prontoqa_train_648", "nl": "Wumpuses are dumpuses.", "fol": "all x. (wumpus(x) -> dumpus(x))", "prediction": ["all x.(Wumpus(x) -> Dumpuse(x))", "all x.(Wumpuse(x) -> Dumpuse(x))", "all x y.((Wumpuse(x) & Dumpuse(y)) -> (Dumpsuse(x) & -Dumpuse(y)))", "all x.(Wumpus(x) -> Dumpuse(x))", "all x y.((Wumpus(x) & Dumpuse(y)) -> (Dumpus(x) & -Dumpuse(y)))", "(Dumpsus(w) & -Dumpsus(w))", "(Dumpuse(w) & -Dumpuse(w))", "all x.(Wumpuse(x) -> Dumpuse(x))", "(Dumpuses(w) & -Dumpuse(w))", "all x.(Wumpus(x) -> Dumpuse(x))", "(Dumuse(w) & Wumpuse(w))", "all x.(Wumpuse(x) -> Dumpuse(x))", "all x.(Wumpus(x) -> Dumpuse(x))", "all x.(Wumpuse(x) -> Dumpuse(x))", "all x.(Wumpus(x) -> Dumpuse(x))", "all x.(Wumpus(x) -> Dumpuse(x))"]}
{"id": "prontoqa_train_649", "nl": "Polly is not a dumpus, Polly is a rompus, and Polly is a yumpus.", "fol": "(-dumpus(Polly) & rompus(Polly) & yumpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Dumpus(x)) & (Polly(x) -> Rompus(x)) & (Polly(x) -> Yumpus(x)))", "all x y z.((Polly(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & -Rompus(x) & -Yumpus(x)))", "(all x y z.((Polly(x) & Dumpus(y)) -> -Dumpus(x)) & ((Polly(z) & Rompus(z)) -> Yampus(z)))", "(all x.(Polly(x) -> -Dumpus(x)) & all y.(Polly(y) -> Rompus(y))) & all z.(Polly(z) -> Yumpus(z)))", "(all x.(Polly(x) -> -Dumpus(x)) & (Polly(x) -> Rompus(x)) & (Polly(x) -> Yumpus(x)))", "all x y z.((Polly(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & -Yumpus(x) & -Rompus(y) & -Yumpus(z)))", "exists x.(Polly(x) & -Dumpus(x) & Rompus(x) & Yumpus(x))", "(all x.(Polly(x) -> -Dumpus(x)) & (Polly(x) -> Rompus(x)) & (Polly(x) -> Yumpus(x)))", "all x y z.((Polly(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & -Rompus(x) & -Yumpus(x)))", "(all x y z.((Polly(x) & Dumpus(y)) -> -Dumpus(x)) & ((Polly(z) & Rompus(z)) -> Yampus(z)))", "all x y z.((Polly(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & -Rompus(x) & -Yumpus(x)))", "(all x.(Ploy(x) -> -Dumpus(x)) & (Rompus(x) | Yumpus(x)))", "all x y z.((Polly(x) & Rompus(y) & Yampus(z)) -> (-Dumps(x) & -Rompus(y) & -Yumpus(z)))", "(all x.(Polly(x) -> -Dumpus(x)) & (Polly(x) -> Rompus(x)) & (Polly(x) -> Yumpus(x)))", "all x y z.((Polly(x) & Rompus(y) & Yampus(z)) -> (-Dumpus(x) & -Rompus(y) & -Yumpus(z)))", "(all x y z.((Polly(x) & Dumpus(y)) -> -Dumpus(x)) & ((Polly(z) & Rompus(z))) -> Yampus(z)))"]}
{"id": "prontoqa_train_650", "nl": "Each grimpus is a brimpus.", "fol": "all x. (grimpus(x) -> brimpus(x))", "prediction": ["all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x y.((Grimpus(x) & Grimpus(y)) -> Brimpus(x))", "(all x.(Grimpus(x) -> Brimpus(x)))", "all x.(Grimpus(x) -> Brimpus(x))", "all x y.((Grimpus(x) & Grimpus(y)) -> Brimpus(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Sgrimpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Brimpus(x))", "exists x.(Grimpus(x) & Grimpus(x) & Brimpus(x))", "all x.(Grimpus(x) -> Brimpus(x))", "exists x.(Gravity(x) & Grimpus(x) & Brimpus(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grampus(x) -> Brimpus(x))", "exists x.(Grimps(x) & Grimpus(x))", "exists x.(Grimpus(x) & Brimpus(x))"]}
{"id": "prontoqa_train_651", "nl": "Alex is a dumpus and Alex is an impus and Alex is not a brimpus.", "fol": "(dumpus(Alex) & impus(Alex) & -brimpus(Alex))", "prediction": ["all x y z.((Alex(x) & Dumpus(x) & Imperator(y) & -Brimpus(z)) -> (Dumpus(x) & Imperator(y) & -Brimpus(z)))", "(all x.(Alex(x) -> Dumpus(x)) & all y.(Alex(y) -> Imperator(y))) & all z.(Alex(z) -> -Brimpus(z))))", "all x y.((Alex(x) & Dumpus(x) & Imperator(y)) -> -Brimpus(x))", "all x.(Alex(x) -> (Dumpus(x) & Impermissible(x) & -Brimpus(x)))", "(all x.(Alex(x) -> Dumpus(x)) & all y.(Alex(y) -> Impermissible(y))) & all z.(Alex(z) -> -Brimpus(z)))", "(all x y.((Alex(x) & Dumpus(x)) -> Impossible(x)) & ((Alex(y) & -Brimpus(y)) -> Dumpus(y)))", "(all x.(Alex(x) -> Dumpus(x)) & (Alex(x) -> Imperator(x)) & (Alex(x) -> -Brimpus(x)))", "all x y z.((Alex(x) & Dumpus(y) & Imperator(z)) -> (Impossible(x) & -Brimpus(x)))", "(all x.(Alexa(x) -> Dumpus(x)) & all y.(Alexa(y) -> Imperator(y))) & all z.(Alexa(z) -> -Brimpus(z))))", "exists x.(Alex(x) & Dumpus(x) & Impermiss(x) & -Brimpus(x))", "(all x y z.(Alex(x) -> Dumpus(x)) & (Alex(y) -> Imperator(y)) & (Alex(z) -> -Brimpus(z)))", "all x y.((Alex(x) & Dumpus(x) & Impermissible(y)) -> (Impossible(x) & -Brimpus(x)))", "all x.(Alex(x) -> (Dumps(x) & IsImpossible(x) & -Brimpus(x)))", "all x.(Alex(x) -> (Dumpus(x) & IsImpossible(x) & -Brimpus(x)))", "(all x.(Alex(x) -> Dumpus(x)) & all y.(Alex(y) -> Impossible(y))) & all z.(Alex(z) -> -Brimpus(z)))", "all x y z.((Alex(x) & Dumpus(y) & Imperator(z)) -> (Dumpus(x,y) & Imperator(z,y) & -Brimpus(x,z)))"]}
{"id": "prontoqa_train_652", "nl": "Alex is not a grimpus.", "fol": "-grimpus(Alex)", "prediction": ["all x.(Alex(x) -> -Grimpus(x))", "Alex is notGrimpus(Alex)", "Alex is not a Grimpus.", "(-Grimpus(Alex))", "all x.(Alex(x) -> -Grimpus(x))", "-Grimpus(Alex)", "Alex is notGrimpus.", "all x.(Alex(x) -> -Grimpus(x))", "Alex is not a Grimpus.", "(-Grimpus(Alex))", "all x.(Alex(x) -> -Grimpus(x))", "-Gruppus(Alex)", "Alex is notGrimpus.", "(-Grimpus(Alex)).", "all x.(Alex(x) -> -Grimpus(x))", "All x.(Alex(x) -> -Grimpus(x))"]}
{"id": "prontoqa_train_653", "nl": "Each lorpus is an impus.", "fol": "all x. (lorpus(x) -> impus(x))", "prediction": ["all x.(Lorpus(x) -> IsImpossible(x))", "all x.(Lorpus(x) -> IsImpossible(x))", "exists x y.(Lorpus(x) & IsImpossible(y))", "all x.(Lorpus(x) -> Impossible(x))", "all x.(Lorpus(x) -> IsImpossible(x))", "(all x.(Lorpus(x) -> Isolated(x)))", "exists x y.(Lorpus(x) & Lorpus(y) & IsImpossible(x))", "all x.(Lorpus(x) -> Ilira(x))", "all x.(Lorpus(x) -> Imperator(x))", "exists x y.(Lorpus(x) & LocatedIn(y,x))", "all x.(Larps(x) -> IsImpossible(x))", "all x.(Lorpus(x) -> Is(x,y))", "all x.(Larpus(x) -> Impermissible(x))", "exists x.(Lorpus(x) & Impossible(x))", "all x.(Larpus(x) -> Isolated(x))", "all x.(Lorpus(x) -> Illegal(x))"]}
{"id": "prontoqa_train_654", "nl": "Sally is a zumpus and Sally is a rompus and Sally is not an impus.", "fol": "(zumpus(Sally) & rompus(Sally) & -impus(Sally))", "prediction": ["(all x.(Sally(x) -> Zumpus(x)) & all y.(Sally(y) -> Rompus(y)) & all z.(Sally(z) -> -Impossible(z))))", "all x y z.((Sally(x) & Zumpus(x) & Sally(y) & Rompus(y)) -> (-Impossible(z) & -Impossible(z)))", "all x y.((Sally(x) & Zumpus(x) & Rompus(y)) -> -Impossible(x))", "(all x.(Sally(x) -> Zumpus(x)) & (Sally(x) -> Rompus(x)) & (Sally(x) -> -Impossible(x)))", "all x.(Sally(x) -> (Tompus(x) & Rompus(x) & -Impossible(x)))", "(all x y.(Sally(x) -> Zumpus(x)) & (Sally(y) -> Rompus(y)) & (Sally(y) -> -Impossible(y)))", "all x y z.((Sally(x) & Zumpus(x) & Rompus(y) & -Impossible(z)) -> (Tompus(x) | Rompus(y)))", "exists x.(Sally(x) & Zumpus(x) & Rompus(x) & -Impossible(x))", "(all x.(Sally(x) -> Zumpus(x)) & all y.(Sally(y) -> Rompus(y)) & all z.(Sally(z) -> -Impossible(z))))", "all x.(Sally(x) -> (Tompus(x) | Rompus(x)) & -Impossible(x)))", "all x y.((Sally(x) & Tompus(x) & Rompus(y)) -> (-Impossible(x) & -Impossible(y)))", "(all x.(Sally(x) -> Zumpus(x)) & (Sally(x) -> Rompus(x)) & (Sally(x) -> -Impossible(x)))", "(all x y.(Sally(x) -> Zumpus(x)) & (Sally(y) -> Rompus(y)) & (Sally(y) -> -Impossible(y)))", "(all x.(Sally(x) -> Toss(x)) & (Sally(x) -> Rompus(x)) & (Sally(x) -> -Impossible(x)))", "all x y z.((Sally(x) & Zumpus(x) & Sally(y) & Rompus(z)) -> (Tompus(x) & Rompus(y) & -Impossible(z)))", "(all x.(Sally(x) -> Zumpus(x)) & all y.(Sally(y) -> Rompus(y)) & all z.(Sally(z) -> -Impossible(z))))"]}
{"id": "prontoqa_train_655", "nl": "Impuses are numpuses.", "fol": "all x. (impus(x) -> numpus(x))", "prediction": ["all x.(Impus(x) -> Numpuse(x))", "all x.(Impuse(x) -> Numpuse(x))", "all x y.((Impus(x) & Numpus(y)) -> Is(x,y))", "all x.(Impus(x) -> Numpuse(x))", "(all x.(Impuse(x) -> Numpuse(x)))", "all x.(Impuss(x) -> Numpuse(x))", "all x.(Impuse(x) -> Numpuse(x))", "all x y.((Impuse(x) & Numpuse(y)) -> Is(x,y))", "(all x.(Impuse(x) -> Numpuse(x)))", "all x.(Impuse(x) -> Numpuse(x))", "all x.(Impect(x) -> Numpuse(x))", "all x.(Impus(x) -> Numpus(x))", "all x.(Impuse(x) -> Numpus(x))", "(all x.(Impuse(x) -> Numpus(x))", "all x.(Impuse(x) -> Numpuse(x))", "all x.(Impuse(x) -> Numpuse(x))"]}
{"id": "prontoqa_train_656", "nl": "Fae is not a numpus, Fae is a jompus, and Fae is a rompus.", "fol": "(-numpus(Fae) & jompus(Fae) & rompus(Fae))", "prediction": ["(all x.(Fae(x) -> -Numpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> Rompus(x)))", "all x y z.((Fae(x) & Numpus(y) & Jompus(z)) -> (-Numpus(x) & Jompus(x) & Rompus(x)))", "(all x.(Fae(x) -> -Numpus(x)) & all y.(Fae(y) -> Jompus(y)) & all z.(Fae(z) -> Rompus(z))))", "(all x y z.((Fae(x) & Numpus(y)) -> -Numpus(x)) & ((Fae(z) & Jompus(z)) -> Rompus(z)))", "all x.(Fae(x) -> (-Numpus(x) & Jompus(x) & Rompus(x)))", "all x y z.((Fae(x) & Jompus(y) & Rompus(z)) -> (-Numpus(x) & Jompus(y) & -Rompus(z)))", "all x y z.((Fae(x) & Numpus(y) & Jompus(z)) -> (-Numpus(x) & Jompus(x) & Rompus(x)))", "(all x.(Fae(x) -> -Numpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> Rompus(x)))", "(all x y z.((Fae(x) & Numpus(y)) -> -Numpus(x)) & ((Fae(z) & Jompus(z)) -> Rompus(z)))", "(all x y z.((Fae(x) & Numpus(y) & Jompus(z)) -> -Numpus(x)) & ((Fae(x) & Rompus(x)) -> Rompus(x)))", "all x y z.(Fae(x) & Numpus(y) & Jompus(z) & Rompus(x))", "exists x.(Fae(x) & -Numpus(x) & Jompus(x) & Rompus(x))", "(all x.(Fae(x) -> -Numpus(x)) & all y.(Fae(y) -> Jompus(y)) & all z.(Fae(z) -> Rompus(z))))", "all x y z.(Fae(x) -> (-Numpus(x) & Jompus(y) & Rompus(z)))", "all x y z.((Fae(x) & Numpus(y) & Jompus(z)) -> (-Numpus(x) & Jompus(y) & Rompus(z)))", "(all x.(Fae(x) -> -Numpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> Rompus(x)))"]}
{"id": "prontoqa_train_657", "nl": "Rompuses are sterpuses.", "fol": "all x. (rompus(x) -> sterpus(x))", "prediction": ["all x.(Rompus(x) -> Sterpuse(x))", "(Sterpuse(rompus) & Sterpuse(rompus))", "all x.(Rompus(x) -> Sterpuse(x))", "all x y.((Rompus(x) & Sterpus(y)) -> Sterpuse(x))", "(Sterpuse(rompus) & Sterpuse(rompus))", "all x.(Rompus(x) -> Sterpuse(x))", "all x.(Rompes(x) -> Sterpuse(x))", "all x y.((Rompus(x) & Sterpus(y)) -> Sterpuse(x))", "(All x.(Rompus(x) -> Steroid(x))", "all x.(Rompus(x) -> Sterpus(x))", "all x.(Rompus(x) -> Steroid(x))", "all x y.((Rompus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Rompes(x) -> Sterpuse(x))", "all x.(Rompuse(x) -> Sterpuse(x))", "all x.(Rompus(x) -> Sterpuse(x))", "All x.(Rompe(x) -> Steroid(x))"]}
{"id": "prontoqa_train_658", "nl": "Fae is not a sterpus, Fae is a grimpus, and Fae is a vumpus.", "fol": "(-sterpus(Fae) & grimpus(Fae) & vumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Sterpus(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> Vumpus(x)))", "all x y z.((Fae(x) & Sterpus(y) & Grimpus(z)) -> (-Sterpus(x) & -Sterpus(x) & -Sterpus(y) & -Vumpus(z)))", "(all x.(Fae(x) -> -Sterpus(x)) & all y.(Fae(y) -> Grimpus(y)) & all z.(Fae(z) -> Vumpus(z))))", "(all x y z.((Fae(x) & Sterpus(y)) -> -Sterpus(x)) & ((Fae(z) & Grimpus(z))) -> Vumpus(z)))", "all x.(Fae(x) -> (-Sterpus(x) & Grimpus(x) & Vumpus(x)))", "(all x y z.((Fae(x) & Sterpus(y) & Grimpus(z)) -> -Sterpus(x)) & ((Fae(x) & Grimpus(x)) -> Vumpus(x)))", "(exists x.(Fae(x) & -Sterpus(x)) & exists y.(Fae(y) & Grimpus(y)) & exists z.(Fae(z) & Vumpus(z))))", "all x y z.((Fae(x) & Sterpus(y) & Grimpus(z)) -> (-Sterpus(x) & Grimpus(y) & Vumpus(z)))", "(all x.(Fae(x) -> -Sterepus(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> Vumpus(x)))", "all x y z.((Fae(x) & Sterpus(y) & Grimpus(z) & Vumpus(x)) -> (-Sterpus(x) & Grimpus(y) & Vumpus(z)))", "all x y z.(Fae(x) & Sterpus(y) & Grimpus(z) & Vumpus(x))", "exists x.(Fae(x) & -Sterpus(x) & Grimpus(x) & Vumpus(x))", "(all x.(Fae(x) -> -Sterpus(x)) & all y.(Fae(y) -> Grimpus(y)) & all z.(Fae(z) -> Vumpus(z)))", "(all x y z.((Fae(x) & Sterpus(y)) -> -Sterpus(x)) & ((Fae(z) & Grimpus(z))) -> Vumpus(z)))", "all x y z.(Fae(x) -> (-Sterpus(x) & Grimpus(y) & Vumpus(z)))", "(all x.(Fae(x) -> -Sterepus(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> Vumpus(x)))"]}
{"id": "prontoqa_train_659", "nl": "Every sterpus is a gorpus.", "fol": "all x. (sterpus(x) -> gorpus(x))", "prediction": ["all x.(Sterpus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x y.((Sterpus(x) & Gorpus(y)) -> Has(x,y))", "all x.(Steerpus(x) -> Gorpus(x))", "all x y.((Sterpus(x) & Gorpus(y)) -> Is(x,y))", "all x.(Steerpus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x y.((Steerpus(x) & Gorpus(y)) -> Is(x,y))", "exists x.(Sterpus(x) & Gorpus(x))", "all x.(Stereo(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Steerpus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "exists x.(Steerpus(x) & Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "exists x.(Sternpus(x) & Gorpus(x))"]}
{"id": "prontoqa_train_660", "nl": "Wren is a lorpus, Wren is not a gorpus, and Wren is a rompus.", "fol": "(lorpus(Wren) & -gorpus(Wren) & rompus(Wren))", "prediction": ["(all x.(Wren(x) -> Lorpus(x)) & (-Wren(x) -> Gorpus(x)) & (-Wren(x) -> Rompus(x)))", "all x y z.((Wren(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) & -Gorpus(x) & Rompus(x)))", "(all x y z.((Wren(x) & Lorpus(y)) -> (Lorpus(x) & -Gorpus(y)) & ((Wren(z) & Rompus(z))) -> (Rompus(z))))", "(all x.(Wren(x) -> Lorpus(x)) & (-Wren(x) -> Gorpus(x)) & (-Wren(x) -> Rompus(x)))", "(all x.(Wren(x) -> Lorpus(x)) & (Wren(x) -> -Gorpus(x)) & (Wren(x) -> Rompus(x)))", "all x y z.((Wren(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) & -Gorpus(y) & Rompus(z)))", "(all x y z.((Wren(x) & Lorpus(y)) -> (Lorpus(x) | -Gorpus(y)) | (Rompus(z) & Wren(z))))", "all x.(Wren(x) -> (Lorpus(x) | -Gorpus(x) | Rompus(x)))", "(all x.(Wren(x) -> Llorpus(x)) & (-Wren(x) -> Gorpus(x)) & (-Wren(x) -> Rompus(x)))", "all x y z.((Wren(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) | -Gorpus(x) | Rompus(x)))", "(all x y z.((Wren(x) & Lorpus(y)) -> (Lorpus(z) | -Gorpus(z)) | (Rompus(z) & -Lorpus(z))))", "all x y z.((Wren(x) & Loper(x) & Wren(y) & Gorpus(z)) -> (Lorpus(x) & -Gorpus(y) & Rompus(z)))", "(all x.(Wren(x) -> Lorpus(x)) & all y.(Wren(y) -> -Gorpus(y))) & all z.(Wren(z) -> Rompus(z)))", "(all x y z.((Wren(x) & Lorpus(y) & -Gorpus(z)) -> (Lorpus(x) & -Gorpus(y) & Rompus(z)))", "all x y z.((Wren(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) & -Gorpus(x) & Rompus(x)))", "all x y z.((Wren(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) | -Gorpus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_661", "nl": "Fae is a gorpus and Fae is not a zumpus and Fae is a jompus.", "fol": "(gorpus(Fae) & -zumpus(Fae) & jompus(Fae))", "prediction": ["(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Jompus(x)))", "all x y z.((Fae(x) & Gorpus(x) & Fae(y) & Zumpus(z)) -> (-Tompus(y) & Jompus(z)))", "(all x y z.((Fae(x) & Gorpus(x)) -> (Gorpus(x) & -Zumpus(y)) & ((Fae(z) & Jompus(z)) -> (Jompus(z)))))", "all x y.((Fae(x) & Gorpus(x) & Fae(y)) -> (-Zumpus(y) & Jompus(y)))", "(all x y.(Fae(x) -> Gorpus(x)) & (Fae(y) -> -Zumpus(y)) & (Fae(y) -> Jompus(y)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Jompus(x)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Tompus(x)) & (Fae(x) -> Jompus(x)))", "all x y.((Fae(x) & Gorpus(x)) -> (-Zumpus(x) & Jompus(y)))", "all x.(Fae(x) -> (Gorpus(x) & -Zumpus(x) & Jompus(x)))", "all x y z.((Fae(x) & Gorpus(x) & Fae(y) & Zumpus(z)) -> (-Tompus(y) & Jompus(z)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Jompus(x)))", "(all x y.(Fae(x) -> Gorpus(x)) & (Fae(y) -> -Zumpus(y)) & (Fae(y) -> Jompus(y)))", "all x.(Fae(x) -> (Gorpus(x) & -Zumpus(x) & Jompus(x)))", "all x y z.((Fae(x) & Gorpus(x) & Fae(y) & Zumpus(z)) -> (-Zumpus(y) & Jompus(y)))", "all x y z.(Fae(x) -> (Gorpus(x) & Fae(y) & -Zumpus(y) & Jompus(z)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Tompus(x)) & (Fae(x) -> Jompus(x)))"]}
{"id": "prontoqa_train_662", "nl": "Every tumpus is a zumpus.", "fol": "all x. (tumpus(x) -> zumpus(x))", "prediction": ["all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x y.((Tumpus(x) & Zumpus(y)) -> Has(x,y))", "(all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x y.((Tumpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tompus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tompus(x) -> Zumpus(x))", "exists x.(Tumpus(x) & Tompus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "exists x.(Tompus(x) & Tompus(x))", "exists x.(Tumpus(x) & Zurpus(x))"]}
{"id": "prontoqa_train_663", "nl": "Sam is a grimpus and Sam is not a zumpus and Sam is a vumpus.", "fol": "(grimpus(Sam) & -zumpus(Sam) & vumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Vumpus(x)))", "all x y z.((Sam(x) & Grimpus(x) & Sam(y) & Zumpus(z)) -> (Sam(x) & Vumpus(x)))", "(all x y.(Sam(x) -> Grimpus(x)) & (Sam(y) -> -Zumpus(y)) & (Sam(y) -> Vumpus(y)))", "all x.(Sam(x) -> (Grimpus(x) & -Zumpus(x) & Vumpus(x)))", "all x y.((Sam(x) & Grimpus(x) & Sam(y)) -> (-Zumpus(y) & Vumpus(y)))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Vumpus(x)))", "all x y z.((Sam(x) & Grimpus(x) & Sam(y) & Zumpus(z)) -> (Sam(x) & Vumpus(x)))", "(all x y z.(Sam(x) -> Grumpus(x)) & ((Sam(y) & -Zumpus(y))) -> Vumpus(z)))", "all x.(Sam(x) -> (Grimpus(x) | -Zumpus(x) | Vumpus(x)))", "(all x y.(Sam(x) -> Grimpus(x)) & (Sam(y) -> -Zumpus(y)) & (Sam(y) -> Vumpus(y)))", "(all x.(Sam(x) -> Grimpus(x)) & all y.(Sam(y) -> -Zumpus(y))) & all z.(Sam(z) -> Vumpus(z))))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Tompus(x)) & (Sam(x) -> Vumpus(x)))", "exists x.(Sam(x) & Grimpus(x) & -Zumpus(x) & Vumpus(x))", "all x y z.((Sam(x) & Grimpus(x) & Sam(y) & Zumpus(z)) -> (Sam(x) & Vumpus(x)))", "all x y.((Sam(x) & Grimpus(x) & Sam(y) & -Zumpus(y)) -> Vumpus(y))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Tompus(x)) & (Sam(x) -> Vampus(x)))"]}
{"id": "prontoqa_train_664", "nl": "Max is a vumpus, Max is a tumpus, and Max is not a yumpus.", "fol": "(vumpus(Max) & tumpus(Max) & -yumpus(Max))", "prediction": ["(all x.(Max(x) -> Vumpus(x)) & (Max(x) -> Tumpus(x)) & (Max(x) -> -Yumpus(x)))", "all x y z.((Max(x) & Vumpus(x) & Tumpus(y) & -Yumpus(z)) -> (Vumpus(x) & Tumpus(y) & -Yumpus(z)))", "(all x.(Max(x) -> Vumpus(x)) & all y.(Max(y) -> Tumpus(y))) & all z.(Max(z) -> -Yumpus(z)))", "all x.(Max(x) -> (Vumpus(x) & Tumpus(x) & -Yumpus(x)))", "all x y z.((Max(x) & Vumpus(y) & Tumpus(z)) -> (Vumpus(x) & Tumpus(z) & -Yumpus(x)))", "(all x y z.((Max(x) & Vumpus(y) & Tumpus(z)) -> (Vumpus(x) | Tumpus(z)) | -Yumpus(z)))", "all x y z.((Max(x) & Vampire(y) & Tumpus(z) & -Yumpus(z)) -> (Vampire(x) & Tumpus(x) & -Yumpus(x)))", "(all x.(Max(x) -> Vumpus(x)) & (Max(x) -> Tumpus(x)) & (Max(x) -> -Yumpus(x)))", "all x y z.((Max(x) & Vumpus(x) & Tumpus(y) & -Yumpus(z)) -> (Vumpus(x) | Tumpus(y) & -Yumpus(z)))", "all x.(Max(x) -> (Vimpus(x) & Tumpus(x) & -Yumpus(x)))", "(all x y z.((Max(x) & Vumpus(x)) -> (Max(y) & Tumpus(y))) & ((Max(z) & Tumpus(z)) -> (-Yumpus(z))))", "(all x.(Max(x) -> Vumpus(x)) & all y.(Max(y) -> Tumpus(y))) & all z.(Max(z) -> -Yumpus(z)))", "exists x.(Max(x) & (Vumpus(x) | Tumpus(x) | -Yumpus(x)))", "(all x.(Max(x) -> Vampire(x)) & (Max(x) -> Tumpus(x)) & (Max(x) -> -Yumpus(x)))", "(all x.(Max(x) -> Vumpus(x)) & (Max(x) -> Tumpus(x)) & -Yumpus(x)))", "all x y z.((Max(x) & Vumpus(y) & Tumpus(z)) -> (Vumpus(x) | Tumpus(z) | -Yumpus(z)))"]}
{"id": "prontoqa_train_665", "nl": "Each shumpus is a rompus.", "fol": "all x. (shumpus(x) -> rompus(x))", "prediction": ["all x.(Shumpus(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "(all x.(Shumpus(x) -> Rompus(x))", "all x y.((Shumpus(x) & Rompus(y)) -> Has(x,y))", "all x.(Shumpus(x) -> Rompus(x))", "all x y.((Shumpus(x) & Rompus(y)) -> Is(x,y))", "all x.(Shumpus(x) -> Rompus(x))", "all x y.((Shumpus(x) & Rompus(y)) -> HasShumpus(x,y))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "exists x.(Shumpus(x) & Rumpus(y) & -Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "exists x.(Shumpus(x) & Rumpus(x))", "exists x.(Shumpus(x) & Rumpus(x))"]}
{"id": "prontoqa_train_666", "nl": "Fae is not a rompus, Fae is a zumpus, and Fae is a tumpus.", "fol": "(-rompus(Fae) & zumpus(Fae) & tumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Rompus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> Tumpus(x)))", "(all x.(Fae(x) -> -Rompus(x)) & all y.(Fae(y) -> Zumpus(y)) & all z.(Fae(z) -> Tumpus(z))))", "all x y z.((Fae(x) & Tosh(y) & Tumpus(z)) -> (-Rompus(x) & Tosh(y) & Tosh(z)))", "(all x y z.((Fae(x) & Rompus(y)) -> -Rompus(x)) & ((Fae(z) & Zumpus(z))) -> Tumpus(z)))", "all x y z.((Fae(x) & Zumpus(y) & Tumpus(z)) -> (-Rompus(x) & -Tompus(y) & -Tompus(z)))", "all x.(Fae(x) -> (-Rompus(x) & Zumpus(x) & Tumpus(x)))", "(exists x.(Fae(x) & -Rompus(x)) & exists y.(Fae(y) & Zumpus(y)) & exists z.(Fae(z) & Tumpus(z))))", "(all x.(Fae(x) -> -Rompus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> Tumpus(x)))", "all x y z.(Fae(x) & (Rompus(y) | Zumpus(y) | Tumpus(z))) -> -Rompus(x) & Zumpus(y) & Tumpus(z))", "all x y z.((Fae(x) & Tompus(y) & Tumpus(z)) -> (-Rompus(x) & Tompus(y) & Tumpus(z)))", "(all x y z.((Fae(x) & Rompus(y)) -> -Rompus(x)) & ((Fae(z) & Zumpus(z))) -> Tumpus(x)))", "all x y z.((Fae(x) & Zumpus(y) & Tumpus(z)) -> (-Rompus(x) & Toumpus(y) & Toumpus(z)))", "all x.(Fae(x) -> (-Rompus(x) & Zumpus(x) & Tumpus(x)))", "(all x.(Fae(x) -> -Rompus(x)) & all y.(Fae(y) -> Zumpus(y)) & all z.(Fae(z) -> Tumpus(z))))", "(all x y z.((Fae(x) & Rompus(y)) -> -Rompus(x)) & ((Fae(z) & Zumpus(z)) -> Tumpus(z)))", "(all x.(Fae(x) -> -Rompus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> Tumpus(x)))"]}
{"id": "prontoqa_train_667", "nl": "Fae is not a shumpus.", "fol": "-shumpus(Fae)", "prediction": ["all x.(Fae(x) -> -Shumpus(x))", "(-Shumpus(Fae))", "-Shumpus(Fae)", "all x.(Fae(x) -> -Shumpus(x))", "(Shumpus(Fae) & -Shumpus(Fae))", "(-Shumpus(Fae))", "all x.(Fae(x) -> -Shumpus(x))", "(Fae,Shumpus)", "-(Shumpus(Fae))", "(Shumpus(fae) & -Shumpus(fae))", "-Shumpus(Fae)", "all x.(Fae(x) -> -Shumpus(x))", "(-Shumpus(Fae))", "-Shumpus(fae)", "all x.(Fae(x) -> -Shumpus(x))", "-Shumpus(Fae)"]}
{"id": "prontoqa_train_668", "nl": "Brimpuses are wumpuses.", "fol": "all x. (brimpus(x) -> wumpus(x))", "prediction": ["all x.(Brimpus(x) -> Wumpus(x))", "all x.(Brompus(x) -> Wumpus(x))", "all x.(Brimpus(x) -> Wumpus(x))", "all x y.((Brompus(x) & Wumpus(y)) -> Wumpus(x))", "all x.(Brumpus(x) -> Wumpus(x))", "(Wumpuse(brimpus) & Wumpus(brimpus))", "all x y.((Brimpus(x) & Wumpus(y)) -> Wumpus(x))", "(Wumpuse(brimpus) & -Wumpus(brimpus))", "all x.((Brompus(x) & Wumpus(x)) -> Wumpus(x))", "(Wumpuse(brimpus) & Wumpus(brimpus))", "all x.(Brimpus(x) -> Wumpus(x))", "all x.(Brimpus(x) -> Wumpus(x))", "all x.(Brompus(x) -> Wumpus(x))", "all x.(Brumpus(x) -> Wampus(x))", "all x.(Brimpus(x) -> Wumpus(x))", "all x.(Brompus(x) -> Wampus(x))"]}
{"id": "prontoqa_train_669", "nl": "Stella is not a wumpus and Stella is an impus and Stella is a tumpus.", "fol": "(-wumpus(Stella) & impus(Stella) & tumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Wumpus(x)) & all y.(Stella(y) -> Issue(y))) & all z.(Stella(z) -> Tumpus(z))))", "all x y z.((Stella(x) & Wumpus(y) & Imperator(z)) -> (-Wumpus(x) & Imperator(x) & Tumpus(x)))", "(all x.(Stella(x) -> -Wumpus(x)) & (Stella(x) -> Issue(x)) & (Stella(x) -> Tumpus(x)))", "all x.(Stella(x) -> (-Wumpus(x) & Is(x) & Is(x) & Is(x) & Is(x)))", "(all x y.((Wumpus(x) & Stella(y)) -> -Wumpus(x)) & ((Impossible(y) & Stella(y)) -> Tumpus(y)))", "(all x y z.((Stella(x) & Wumpus(y)) -> -Wumpus(x)) & ((Stella(z) & Impossible(z))) -> Tumpus(z)))", "(all x.(Wumpus(x) -> -Wumpus(x)) & all y.(Impossible(y) -> Stella(y))) & all z.(Tumpus(z) -> (Impossible(z) & -Wumpus(z))))", "all x y.((Stella(x) & Wumpus(y)) -> (-Wumpus(x) & IsImpossible(x) & Tumpus(x)))", "all x y z.((Stella(x) & Wumpus(y) & Is(z) & Is(x,y)) -> (-Wumpus(x) & Is(x,z) & Is(x,y) & Is(x,z)))", "all x y z.((Stella(x) & Wumpus(y) & Imperator(z)) -> (-Wumpus(x) & Imperator(x) & Tumpus(x)))", "exists x.(Wumpus(x) & Imperator(x) & Tumpus(x))", "all x.(Stella(x) -> (-Wumpus(x) & IsImpossible(x) & IsTumpus(x)))", "all x y.((Stella(x) & Wumpus(y) & Imperator(y)) -> (-Wumpus(x) & Imperator(x) & Tumpus(x)))", "(all x y.(Wumpus(x) -> -Wumpus(x)) & (Impossible(y) -> Stella(y))) & (Tumpus(y) -> Stella(y)))", "(all x.(Stella(x) -> -Wumpus(x)) & all y.(Stella(y) -> Issue(y))) & all z.(Stella(z) -> Tumpus(z)))", "(all x.(Wumpus(x) -> -Wumpus(x)) & (Impossible(x) | Tumpus(x))))"]}
{"id": "prontoqa_train_670", "nl": "Jompuses are lorpuses.", "fol": "all x. (jompus(x) -> lorpus(x))", "prediction": ["all x.(Jompuse(x) -> Lorpus(x))", "all x.(Jompuse(x) -> Lorpus(x))", "all x y.((Jompuse(x) & Lorpus(y)) -> Is(x,y))", "(Lorpuse(jompus) & LivesIn(jompus,Lorpus))", "all x.(Jompuse(x) -> Lorpuse(x))", "(Lorpuse(jompus) & LivesIn(jompus,lompus))", "all x y.((Jompuse(x) & Lorpus(y)) -> Loompus(x))", "all x.(Jimpus(x) -> Lorpus(x))", "all x.(Jompuse(x) -> Loomis(x))", "all x.(Jompus(x) -> Lorpus(x))", "all x.(Jompuse(x) -> Loompus(x))", "all x.(Jimpus(x) -> Lorpus(x))", "all x.(Jomess(x) -> Lorpuse(x))", "all x.(Jompus(x) -> Lorpus(x))", "All x.(Jombuse(x) -> Lorpuse(x))", "all x.(Jompuse(x) -> Lompus(x))"]}
{"id": "prontoqa_train_671", "nl": "Polly is a wumpus and Polly is a tumpus and Polly is not a lorpus.", "fol": "(wumpus(Polly) & tumpus(Polly) & -lorpus(Polly))", "prediction": ["(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Tumpus(x)) & (Polly(x) -> -Lorpus(x))))", "all x y z.((Polly(x) & Wumpus(x) & Tumpus(y) & -Lorpus(z)) -> (Wumpus(x) & Tumpus(y) & -Lorpus(z)))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> Tumpus(y)) & all z.(Polly(z) -> -Lorpus(z))))", "all x y.((Polly(x) & Wumpus(x) & Polly(y)) -> (Tumpus(y) & -Lorpus(y)))", "(all x y.(Wumpus(x) -> Polly(y)) & (Tumpus(y) -> Polly(y)) & (Lorpus(y) -> Polly(y)))", "all x y z.((Polly(x) & Wumpus(x) & Tumpus(y) & -Lorpus(z)) -> (Wumpus(x) & Tumpus(y) & -Lorpus(z)))", "(all x.(Wumpus(x) -> Polly)) & (Tumpus(x) -> Polly)) & -Lorpus(x)))", "all x y z.((Polly(x) & Wumpus(x) & Tumpus(y) & -Lorpus(z)) -> (Wumpus(x) & Tumpus(y) & -Lorpus(z)))", "exists x.(Polly(x) & Wumpus(x) & Tumpus(x) & -Lorpus(x))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Tumpus(x)) & -Lorpus(x)))", "all x.(Polly(x) -> (Wumpus(x) & Tumpus(x) & -Lorpus(x)))", "(all x y z.(Wumpus(x) -> Polly(y)) & (Tumpus(z) -> Polly(z)) & -Lorpus(z)))", "all x y z.((Polly(x) & Wumpus(y) & Tumpus(z)) -> (Wumpus(x) & Tumpus(z) & -Lorpus(x)))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> Tumpus(y))) & all z.(Polly(z) -> -Lorpus(z))))", "all x y.((Polly(x) & Wumpus(x) & Polly(y)) -> (Tumpus(y) & -Lorpus(y)))", "(all x y.(Wumpus(x) & Wumpus(y)) & (Tumpus(y) | -Lorpus(y)))"]}
{"id": "prontoqa_train_672", "nl": "Lempuses are dumpuses.", "fol": "all x. (lempus(x) -> dumpus(x))", "prediction": ["all x.(Lempuse(x) -> Dumpuse(x))", "all x.(Lempuse(x) -> Dumpuse(x))", "all x y.((Lempuse(x) & Dumpuse(y)) -> (Dumpsuse(x) & -Dumpsuse(y)))", "(all x.(Lempuse(x) -> Dumpuse(x)))", "all x.(Lempuse(x) -> Dumpuse(x))", "all x.(Lemme(x) -> Dumpuse(x))", "all x y.((Lempuse(x) & Dumpuse(y)) -> Is(x,y))", "all x.(Lempuse(x) -> Dumpuse(x))", "all x.(Lempuse(x) -> Dumpuse(x))", "(all x.(Lempuse(x) -> Dumpuse(x)))", "(Dumpsus(lempus) & Dumpuse(lempuse))", "all x.(Lampuse(x) -> Dumpuse(x))", "all x.(Lempuse(x) -> Dumpuse(x))", "all x.(Lempuse(x) -> Dumpuse(x))", "all x.(Lampus(x) -> Dumpuse(x))", "all x.(Lempuse(x) -> Dumpuse(x))"]}
{"id": "prontoqa_train_673", "nl": "Sam is a grimpus and Sam is not a dumpus and Sam is a tumpus.", "fol": "(grimpus(Sam) & -dumpus(Sam) & tumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Dumpus(x)) & (Sam(x) -> Tumpus(x)))", "all x y z.((Sam(x) & Grimpus(x) & Sam(y) & Dumpus(z)) -> (Sam(x) & Tumpus(x)))", "all x y.((Sam(x) & Grimpus(x)) -> (-Dumpus(x) & Tumpus(y)))", "all x.(Sam(x) -> (Grimpus(x) & -Dumpus(x) & Tumpus(x)))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Dumpus(x)) & (Sam(x) -> Tumpus(x)))", "(all x y.(Sam(x) -> Grimpus(x)) & (Sam(y) -> -Dumpus(y)) & (Sam(y) -> Tumpus(y)))", "(all x y.(Sam(x) -> Grumpus(x)) & (Sam(y) -> -Dumpus(y)) & (Sam(y) -> Tumpus(y)))", "all x y z.((Sam(x) & Grimpus(x) & Sam(y) & Dumpus(z)) -> (Sam(x) & Tumpus(x)))", "all x y z.((Sam(x) & Grumpus(y) & Dumpus(z)) -> (Sam(x) & Tumpus(x)))", "exists x.(Sam(x) & Grimpus(x) & -Dumpus(x) & Tumpus(x))", "(all x.(Sam(x) -> Grumpus(x)) & (Sam(x) -> -Dumpus(x)) & (Sam(x) -> Tumpus(x)))", "all x y.((Sam(x) & Grimpus(x) & Sam(y)) -> (-Dumps(y) & Tumpus(y)))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Dumpus(x)) & (Sam(x) -> Tumpus(x)))", "(all x.(Sam(x) -> Grimpus(x)) & all y.(Sam(y) -> -Dumpus(y))) & all z.(Sam(z) -> Tumpus(z))))", "all x.(Sam(x) -> (Grimpus(x) & -Dumpus(x) & Tumpus(x)))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Dumpus(x)) & (Sam(x) -> Tumpus(x)))"]}
{"id": "prontoqa_train_674", "nl": "Sam is not a lempus.", "fol": "-lempus(Sam)", "prediction": ["all x.(Sam(x) -> -Lempus(x))", "(-Lempus(Sam))", "Sam is not a lempus.", "all x.(Sam(x) -> -Lempus(x))", "(-Lempus(Sam))", "Sam is not a lempus.", "all x.(Sam(x) -> -Lempus(x))", "-Lempus(Sam)", "(Lampus(sam) & -Lempus(sam))", "all x.(Sam(x) -> -Lempus(x))", "(-lempus(Sam))", "-Lempus(Sam)", "all x.(Sam(x) -> -Lempus(x))", "(-lempus(Sam)).", "all x.(Sam(x) -> -Limpus(x))", "-Limpus(sam)"]}
{"id": "prontoqa_train_675", "nl": "Sterpuses are lempuses.", "fol": "all x. (sterpus(x) -> lempus(x))", "prediction": ["all x.(Sterpus(x) -> Lempuse(x))", "(all x.(Sterpuse(x) -> Lempuse(x)))", "all x.(Sterpus(x) -> Lempuse(x))", "all x y.((Sterpus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Sterpus(x) -> Lempuse(x))", "all x y.((Sterpuse(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Stupid(x) -> Lempuse(x))", "all x.(Sterpus(x) -> Lempuse(x))", "all x y.((Sterpus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Sterpus(x) -> Lempuse(x))", "all x.(Stupid(x) -> Lempuse(x))", "(Lempuse(sterpuses)", "all x.(Sterpus(x) -> Lempuse(x))", "all x.(Strerpuse(x) -> Lempuse(x))", "all x.(Sterpus(x) -> Lempuse(x))", "All x.(Sterpus(x) -> Lempus(x))"]}
{"id": "prontoqa_train_676", "nl": "Polly is a brimpus and Polly is not a lempus and Polly is a dumpus.", "fol": "(brimpus(Polly) & -lempus(Polly) & dumpus(Polly))", "prediction": ["(all x.(Brimpus(x) -> Polly)) & (-Lempus(x) -> Polly)) & (Dumpus(x) -> Polly)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Lempus(x)) & (Polly(x) -> Dumpus(x)))", "all x y z.((Polly(x) & Brimpus(x) & Polly(y) & Lempus(z)) -> (-Lempus(y) & Dumpus(y)))", "all x y.((Polly(x) & Brimpus(x) & Polly(y)) -> (-Lempus(y) & Dumpus(y)))", "(all x y.(Brimpus(x) -> Polly)) & (Lempus(y) -> Polly)) & (Dumpus(y)) -> Polly))", "(all x.(Brimpus(x) -> Polly)) & (Lempus(x) -> Polly)) & (Dumpus(x) -> Polly)))", "all x y z.((Polly(x) & Brimpus(x) & Polly(y) & Lempus(z)) -> (Brimpus(x) & -Lempus(y) & Dumpus(z)))", "all x.(Polly(x) -> (Brimpus(x) & -Lempus(x) & Dumpus(x)))", "(all x y.(Brimpus(x) -> Polly(x)) & (Lempus(y) -> Polly(y))) & (Dumpus(y) -> Polly(y)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Lempus(x))) & (Polly(x) -> Dumpus(x)))", "(all x.(Brimpus(x) -> Polly)) & all y.(Lempus(y) -> Polly)) & all z.(Dumpus(z) -> Polly)))", "(all x y z.(Brimpus(x) -> Polly(y)) & (Lempus(z) -> Polly(y)) & (Dumpus(z) -> Polly(y)))", "all x y z.((Polly(x) & Brimpus(x) & Polly(y) & Lempus(z) & Dumpus(x)) -> (Brimpus(y) & -Lempus(y) & Dumpus(z)))", "all x y.((Polly(x) & Brimpus(x) & Polly(y)) -> (-Lempus(y) & Dumpus(y)))", "exists x.(Brimpus(x) & Polly(x) & -Lempus(x) & Dumpus(x))", "all x.(Polly(x) -> (Brimpus(x) & -Lempus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_677", "nl": "Fae is a brimpus, Fae is not a grimpus, and Fae is an impus.", "fol": "(brimpus(Fae) & -grimpus(Fae) & impus(Fae))", "prediction": ["(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> -Grimpus(x)) & (Fae(x) -> Imperator(x)))", "all x y z.((Fae(x) & Brimpus(x) & Fae(y) & Grimpus(z)) -> (Brimpus(x) & Imperator(y)))", "(all x y z.((Fae(x) & Brimpus(x)) -> (Brimpus(x) & -Grimpus(y)) & ((Fae(z) & Impossible(z)) -> (Impossible(z))))", "(all x.(Fae(x) -> Brimpus(x)) & all y.(Fae(y) -> -Grimpus(y)) & all z.(Fae(z) -> Imperator(z))))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> -Grimpus(x)) & (Fae(x) -> Impossible(x)))", "all x y z.((Fae(x) & Brimpus(x) & Fae(y) & Grimpus(z)) -> (Brimpus(x) & Impermissible(y)))", "(all x y z.((Fae(x) & Brimpus(y)) -> Brimpus(x)) & ((Fae(z) & -Grimpus(z))) -> Imperator(z)))", "all x.(Fae(x) -> (Brimpus(x) & -Grimpus(x) & Imperator(x)))", "all x y z.(Fae(x) & Brimpus(x) & Fae(y) & Grimpus(z) & Imperator(x))", "all x y z.((Fae(x) & Brimpus(y) & Grimpus(z)) -> (Brimpus(x) | Imperator(x)))", "(all x y z.((Fae(x) & Brimpus(x)) -> (Brimpus(y) & -Grimpus(z))) & ((Fae(x) & Impossible(x)) -> (Impossible(x))))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> -Grimpus(x)) & (Fae(x) -> Imperator(x)))", "(all x.(Fae(x) -> Brimpus(x)) & all y.(Fae(y) -> -Grimpus(y)) & all z.(Fae(z) -> Imperator(z)))", "all x.(Fae(x) -> (Brimpus(x) & -Grimpus(x) & Impossible(x)))", "all x y z.(Brimpus(x) & Grimpus(y) & Imperator(z))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> -Grimpus(x)) & (Fae(x) -> Impossible(x)))"]}
{"id": "prontoqa_train_678", "nl": "Wren is a tumpus, Wren is not a lorpus, and Wren is an impus.", "fol": "(tumpus(Wren) & -lorpus(Wren) & impus(Wren))", "prediction": ["(all x.(Wren(x) -> Tumpus(x)) & (-Lorpus(x) & -Ilios(x)))", "all x y z.((Wren(x) & Tumpus(y) & -Lorpus(z)) -> (Tumpus(x) & Is(x,y) & Is(x,z)))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> -Lorpus(x)) & (Wren(x) -> Imperator(x)))", "(all x y z.((Wren(x) & Tumpus(y)) -> Tumpus(x)) & ((Wren(z) & -Lorpus(z))) -> Imperator(z)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> -Lorpus(y))) & all z.(Wren(z) -> Imperator(z)))", "all x y z.((Wren(x) & Tumpus(y) & Lorpus(z)) -> (Tumpus(x) & -Lorpus(y) & Imperator(z)))", "all x.(Wren(x) -> (Tumpus(x) & -Lorpus(x) & Imperator(x)))", "all x y z.((Wren(x) & Tumpus(y) & -Lorpus(z)) -> (Tumpus(x) & Imperator(x)))", "(all x.(Wren(x) -> Tumpus(x)) & (-Wren(x) -> Lorpus(x)) & (-Wren(x) -> Imperator(x)))", "(all x y z.((Wren(x) & Tumpus(y) & -Lorpus(z)) -> Tumpus(x,y)) & ((Wren(x) & -Lorpus(x)) -> Imperator(x)))", "all x y z.((Wren(x) & Tumpus(x) & -Lorpus(y) & Imperator(z)) -> (Tumpus(x) & Imperator(z)))", "(all x y z.((Wren(x) & Tumpus(y)) -> Tumpus(x)) & ((Wren(z) & -Lorpus(z))) -> Imperator(z)))", "all x y z.((Wren(x) & Tompus(y) & -Lorpus(z)) -> (Tumpus(x) & Is(x,y) & Is(x,z)))", "all x.(Wren(x) -> (Tumpus(x) & -Lorpus(x) & Imperator(x)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> -Lorpus(y))) & all z.(Wren(z) -> Imperator(z)))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> -Lorpus(x)) & (Wren(x) -> Imperator(x)))"]}
{"id": "prontoqa_train_679", "nl": "Every grimpus is a shumpus.", "fol": "all x. (grimpus(x) -> shumpus(x))", "prediction": ["all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x y.((Grimpus(x) & Grimpus(y)) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x y.((Grimpus(x) & Grimpus(y)) -> Shumpus(x))", "all x.(Slumpus(x) -> Scarlett(x))", "(all x.(Grimpus(x) -> Humpus(x)))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Gruppus(x) -> Humpus(x))", "all x.(Slumpus(x) -> Grimpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "exists x.(Grimpus(x) & Shumpus(x))", "exists x.(Grampus(x) & Humpus(x))", "exists x.(Grimpus(x) & Shumpus(x))"]}
{"id": "prontoqa_train_680", "nl": "Polly is not a shumpus and Polly is a yumpus and Polly is a sterpus.", "fol": "(-shumpus(Polly) & yumpus(Polly) & sterpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x)) & (Polly(x) -> Sterpus(x)))", "all x y z.((Polly(x) & Humpus(y) & Yampus(z)) -> (-Shumpus(x) & -Yumpus(y) & -Sterpus(z)))", "(all x.(Polly(x) -> -Shumpus(x)) & all y.(Polly(y) -> Yumpus(y)) & all z.(Polly(z) -> Sterpus(z))))", "all x y z.((Polly(x) & Shumpus(y) & Yumpus(z)) -> (-Shumpus(x) & -Yumpus(y) & -Sterpus(z)))", "(all x y z.((Polly(x) & Humpus(y)) -> -Shumpus(x)) & ((Polly(z) & Yumpus(z))) -> Sterpus(z)))", "all x.(Polly(x) -> (-Shumpus(x) & (Yumpus(x) | Sterpus(x))))", "all x y.((Polly(x) & -Shumpus(x)) -> (Yumpus(x) & Sterpus(y)))", "all x y z.((Polly(x) & -Shumpus(x) & Polly(y) & Sterpus(z)) -> (-Shumpus(x) & Yampus(y) & Sterpus(z)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x)) & (Polly(x) -> Sterpus(x)))", "(all x y.(Shumpus(x) -> -Shumpus(x)) & (Yumpus(y) -> Sterepus(y)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x)) & (Polly(x) -> Sterpus(x)))", "all x y z.((Polly(x) & Humpus(y) & Yampus(z)) -> (-Shumpus(x) & -Yumpus(y) & -Sterpus(z)))", "all x y.((Polly(x) & Polly(y)) -> (-Shumpus(x) & Yumpus(y) & Sterpus(y)))", "(all x.(Poly(x) -> -Shumpus(x)) & all y.(Poly(y) -> Yumpus(y)) & all z.(Poly(z) -> Sterpus(z))))", "exists x.(Polly(x) & (-Shumpus(x) | (Yumpus(x) & Sterpus(x))))", "(all x y z.((Polly(x) & Humpus(y)) -> -Shumpus(x)) & ((Polly(z) & Yumpus(z))) -> Sterepus(z)))"]}
{"id": "prontoqa_train_681", "nl": "Max is a sterpus, Max is not a gorpus, and Max is a dumpus.", "fol": "(sterpus(Max) & -gorpus(Max) & dumpus(Max))", "prediction": ["(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Gorpus(x)) & (Max(x) -> Dumpus(x)))", "all x y z.((Max(x) & Sterpus(y) & Gorpus(z)) -> (-Sterpus(x) & Dumpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & (-Max(x) -> Gorpus(x)) & (-Max(x) -> Dumpus(x)))", "(all x y z.((Max(x) & Sterpus(y)) -> (Sterpus(z) & -Gorpus(z))) & ((Max(x) & Dumpus(x)) -> (Dumpus(x))))", "all x.(Max(x) -> (Sterpus(x) & -Gorpus(x) & Dumpus(x)))", "(all x y z.((Max(x) & Sterpus(y) & -Gorpus(z)) -> Sterpus(x)) & ((Max(x) & Dumpus(x)) -> Dumpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> -Gorpus(y))) & all z.(Max(z) -> Dumpus(z)))", "all x y z.((Max(x) & Sterpus(y) & Gorpus(z)) -> (-Sterpus(x) & Dumpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & (-Max(x) -> Gorpus(x)) & (-Max(x) -> Dumpus(x)))", "all x y z.((Max(x) & Sterpus(y) & Gorpus(z)) -> (-Sterpus(x) & Dumpus(x)))", "all x.(Max(x) -> (Sterpus(x) & -Gorpus(x) & Dumpus(x)))", "(All x y z.((Max(x) & Sterpus(y)) -> (Sterpus(x) & -Gorpus(y))) & ((Max(z) & Dumpus(z)) -> Dumpus(z)))", "all x y z.((Max(x) & Sterpus(y) & Gorpus(z)) -> (Sterpus(x) & -Gorpus(y) & Dumpus(z)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> -Gorpus(y)) & all z.(Max(z) -> Dumpus(z))))", "(all x.(Max(x) -> Sterepus(x)) & (Max(x) -> -Gorpus(x)) & (Max(x) -> Dumpus(x)))", "all x.(Max(x) -> (Sterepus(x) & -Gorpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_682", "nl": "Max is not a rompus.", "fol": "-rompus(Max)", "prediction": ["(-Rompus(Max))", "all x.(Max(x) -> -Rompus(x))", "Max is not a rompus.", "(Rompus(Max) & -Rompus(Max))", "-Rompus(Max)", "(-rompus(Max))", "Max is not a rompus.", "all x.(Max(x) -> -Rompus(x))", "Max is not a Rompus.", "(-Rompus(Max))", "-(Rompus(Max))", "(-rompus(Max))", "-Rompus(Max)", "all x.(Max(x) -> -Rompus(x))", "-Rompus(Max)", "-Rompus(Max)"]}
{"id": "prontoqa_train_683", "nl": "Stella is a vumpus and Stella is a rompus and Stella is not a yumpus.", "fol": "(vumpus(Stella) & rompus(Stella) & -yumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Vumpus(x)) & (Stella(x) -> Rompus(x)) & (Stella(x) -> -Yumpus(x)))", "all x y z.((Stella(x) & Vumpus(x) & Rompus(y) & -Yumpus(z)) -> (Vumpus(x) & Rompus(y) & -Yumpus(z)))", "(all x.(Stella(x) -> Vumpus(x)) & all y.(Stella(y) -> Rompus(y))) & all z.(Stella(z) -> -Yumpus(z)))", "all x y.((Stella(x) & Vumpus(x) & Rompus(y)) -> (Vumpus(x) & -Yumpus(y)))", "(all x.(Vumpus(x) -> Stella(x)) & all y.(Rompus(y) -> Stella(y))) & all z.(Yumpus(z) -> Stella(z)))", "(all x y.((Stella(x) & Vumpus(x)) -> (Vumpus(x) & Rompus(x))) & ((Stella(y) & -Yumpus(y)) -> (-Vumpus(y) & Rompus(y))))", "all x y z.((Stella(x) & Vumpus(x) & Stella(y) & Rompus(y)) -> (Vumpus(x) & -Yumpus(z)))", "all x.(Stella(x) -> (Vumpus(x) & Rompus(x) & -Yumpus(x)))", "(all x y z.((Stella(x) & Vumpus(x) & Rompus(y)) -> (Vumpus(x) & Rompus(y) & -Yumpus(z)))", "(all x y.(Vumpus(x) -> Stella(x)) & (Rompus(y) -> Stella(y)))", "all x y.((Stella(x) & Vumpus(x) & Stella(y)) -> (Rompus(y) & -Yumpus(y)))", "(all x.(Stella(x) -> Vumpus(x)) & (Stella(x) -> Rompus(x)) & (Stella(x) -> -Yumpus(x)))", "exists x.(Stella(x) & (Vimpus(x) | Rompus(x)) & -Yumpus(x))", "(all x.(Vumpus(x) -> Stella(x)) & (Rompus(x) -> Stella(x)) & -Yumpus(x)))", "all x y z.((Stella(x) & Vumpus(x) & Rompus(y) & -Yumpus(z)) -> (Vumpus(x) & Rompus(y) & -Yumpus(z)))", "all x y z.((Stella(x) & Vampire(x) & Rompus(y) & -Yumpus(z)) -> (Vampire(x) & Rompus(y) & -Yumpus(z)))"]}
{"id": "prontoqa_train_684", "nl": "Each vumpus is a jompus.", "fol": "all x. (vumpus(x) -> jompus(x))", "prediction": ["all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "(all x.(Vumpus(x) -> Jompus(x))", "all x y.((Vumpus(x) & Jompus(y)) -> Has(x,y))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x y.((Vumpus(x) & Jompus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "exists x.(Vumpus(x) & Jompus(x))", "exists x.(Vumpus(x) & Jompus(x))", "exists x.(Vumpus(x) & Jompus(x))", "exists x.(Vumpus(x) & Jompus(x))"]}
{"id": "prontoqa_train_685", "nl": "Fae is not a jompus and Fae is a brimpus and Fae is a sterpus.", "fol": "(-jompus(Fae) & brimpus(Fae) & sterpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Jompus(x)) & (Fae(x) -> Brimpus(x)) & (Fae(x) -> Sterpus(x)))", "all x y z.((Fae(x) & Jompus(y) & Brimpus(z)) -> (-Jompus(x) & Brimpus(x) & Sterpus(x)))", "(all x.(Fae(x) -> -Jompus(x)) & all y.(Fae(y) -> Brimpus(y)) & all z.(Fae(z) -> Sterpus(z))))", "(all x y z.((Fae(x) & Jompus(y) & Brimpus(z)) -> -Jompus(x)) & ((Fae(x) & Brimpus(x)) -> Sterepus(x)))", "(-Jompus(Fae) & Brimpus(Fae) & Sterpus(Fae))", "all x.(Fae(x) -> (-Jompus(x) & Brimpus(x) & Sterpus(x)))", "all x y.((Fae(x) & Jompus(y) & Brimpus(y)) -> (-Jompus(x) & -Brimpus(y) & -Sterpus(y)))", "(all x y.(Fae(x) -> -Jompus(x)) & (Brimpus(y) | Sterpus(y)))", "all x y z.((Fae(x) & Jompus(y) & Brimpus(z)) -> (-Jompus(x) & Brimpus(x) & Sterepus(x)))", "(all x.(Fae(x) -> -Jompus(x)) & (Fae(x) -> Brimpus(x)) & (Fae(x) -> Sterpus(x)))", "all x y z.((Fae(x) & Jompus(y) & Brimpus(z) & Sterpus(x)) -> (-Jompus(x) & Brimpus(y) & Sterpus(z)))", "all x.(Fae(x) -> (-Jompus(x) & Brimpus(x) & Sterpus(x)))", "(all x.(Fae(x) -> -Jompus(x)) & all y.(Brimpus(y) & -Sterpus(y)))", "(all x.(Fae(x) -> -Jompus(x)) | (Fae(x) -> Brimpus(x)) | (Fae(x) -> Sterpus(x))))", "exists x.(Fae(x) & -Jompus(x) & Brimpus(x) & Sterpus(x))", "all x y z.((Fae(x) & Jompus(y) & Brimpus(z) & Sterepus(x)) -> (-Jompus(x) & Brimpus(y) & Sterepus(z)))"]}
{"id": "prontoqa_train_686", "nl": "Sam is a gorpus, Sam is not a lorpus, and Sam is a rompus.", "fol": "(gorpus(Sam) & -lorpus(Sam) & rompus(Sam))", "prediction": ["(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> -Lorpus(x)) & (Sam(x) -> Rompus(x)))", "all x y z.((Sam(x) & Gorpus(x) & -Lorpus(y) & Rompus(z)) -> (Gorpus(x) & -Lorpus(y) & Rompus(z)))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> -Lorpus(x)) & (Sam(x) -> Rompus(x)))", "(all x y z.((Sam(x) & Gorpus(x)) -> Gorpus(x)) & ((Sam(y) & -Lorpus(y)) -> Rompus(z)))", "all x y z.((Sam(x) & Gorpus(x) & Sam(y) & Lorpus(z)) -> (-Lorpus(y) & Rompus(z)))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> -Lorpus(x)) & (Sam(x) -> Rompus(x)))", "all x.(Sam(x) -> (Gorpus(x) & -Lorpus(x) & Rompus(x)))", "all x y z.((Sam(x) & Gorpus(y) & Lorpus(z)) -> (Gorpus(x) & -Lorpus(y) & Rompus(z)))", "(all x y z.((Sam(x) & Gorpus(x)) -> Gorpus(x)) & ((Sam(y) & -Lorpus(y)) -> Rompus(y)))", "all x y z.((Sam(x) & Gorpus(x) & Sam(y) & Lops(z)) -> (-Lorpus(y) & Rompus(z)))", "(all x y z.((Sam(x) & Gorpus(y)) -> Gorpus(x)) & ((Sam(z) & -Lorpus(z)) -> Rompus(z)))", "all x.(Sam(x) -> (Gorpus(x) | -Lorpus(x) | Rompus(x)))", "exists x.(Sam(x) & Gorpus(x) & -Lorpus(x) & Rompus(x))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> -Lorpus(x)) & (Sam(x) -> Rompus(x)))", "all x y z.((Sam(x) & Gorpus(y) & Lorpus(z)) -> (Gorpus(x) | -Lorpus(x) | Rompus(x)))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> -Lorpus(x)) & (Sam(x) -> Rompus(x)))"]}
{"id": "prontoqa_train_687", "nl": "Every dumpus is a grimpus.", "fol": "all x. (dumpus(x) -> grimpus(x))", "prediction": ["all x.(Dumpus(x) -> Grimpus(x))", "all x.(Dumpus(x) -> Grimpus(x))", "all x y.((Dumpus(x) & Grimpus(y)) -> Is(x,y))", "all x.(Dumpus(x) -> Grimpus(x))", "(all x.(Dumpus(x) -> Grimpus(x)))", "all x.(Dumpus(x) -> Gruppus(x))", "(all x.(Dumpus(x) -> Grimpus(x))", "all x.(Dumpus(x) -> Gruppus(x))", "all x.(Dumpus(x) -> Grimpus(x))", "exists x.(Dumps(x) & Grimpus(x))", "all x.(Dumpus(x) -> Grumpus(x))", "all x.(Dumpus(x) -> Grimpus(x))", "all x.(Dumpus(x) -> Grimpus(x))", "exists x.(Dupus(x) & Grimpus(x))", "all x.(Dumpus(x) -> Grimpus(x))", "exists x.(Dumpus(x) & Grimpus(x))"]}
{"id": "prontoqa_train_688", "nl": "Rex is not a grimpus and Rex is a tumpus and Rex is a sterpus.", "fol": "(-grimpus(Rex) & tumpus(Rex) & sterpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Grimpus(x)) & all y.(Tumpus(y) & Sterpus(y)))", "all x y z.((Rex(x) & Grimpus(y) & Tumpus(z)) -> (-Grimpus(x) & Tumpus(y) & Sterpus(z)))", "all x y z.((Rex(x) & Gruppus(y) & Tumpus(z)) -> (-Grimpus(x) & Tumpus(y) & Sterpus(z)))", "(all x.(Rex(x) -> -Grimpus(x)) & (Tumpus(x) | Sterpus(x))))", "all x.(Rex(x) -> (-Grimpus(x) & Tumpus(x) & Sterpus(x)))", "(all x y.(Rex(x) -> -Grimpus(x)) & (Rex(y) -> Tumpus(y)) & (Rex(y) -> Sterpus(y)))", "(-Grimpus(rex) & Tumpus(rex) & Sterpus(rex))", "(all x y z.((Rex(x) & Grimpus(y) & Tumpus(z)) -> -Grimpus(x)) & ((Rex(x) & Tumpus(x)) -> Sterpus(x)))", "all x y.((Rex(x) & Grimpus(y) & Tumpus(y)) -> (-Grimpus(x) & Sterpus(x)))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Tumpus(y) & -Sterpus(y))))", "(all x.(Rex(x) -> -Grimpus(x)) & (Rex(x) -> Tumpus(x)) & (Rex(x) -> Sterpus(x)))", "all x y z.((Rex(x) & Grimpus(y) & Tumpus(z)) -> (-Grimpus(x) & Tumpus(x) & Sterpus(x)))", "all x.(Rex(x) -> (-Grimpus(x) & Tumpus(x) & Sterpus(x)))", "all x y z.((Rex(x) & Grumpus(y) & Tumpus(z)) -> (-Grimpus(x) & Tumpus(y) & Sterpus(z)))", "(all x y.(Rex(x) -> (-Grimpus(x) & Grimpus(y))) & (Tumpus(y) | Sterpus(y))))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Tumpus(y) -> Sterepus(y)))"]}
{"id": "prontoqa_train_689", "nl": "Grimpuses are dumpuses.", "fol": "all x. (grimpus(x) -> dumpus(x))", "prediction": ["all x.(Grimpus(x) -> Dumpuse(x))", "all x.(Grimpus(x) -> Dumpuse(x))", "all x y.((Grimpus(x) & Dumpuse(y)) -> Dumpuse(x))", "(Dumpuse(Grimpus) & Dumpuse(Grimpus))", "all x y.((Grimpus(x) & Dumpuse(y)) -> (Dumpus(x) & Dumpuse(y)))", "all x.(Grimpus(x) -> Dumpuse(x))", "(Dumpuse(gripper) & Dumpuse(gripper))", "all x.(Gruppus(x) -> Dumpuse(x))", "(Dumpuse(Grimpus) & Dumpus(Grimpus))", "all x.(Grimpus(x) -> Dumpuse(x))", "all x.(Gruppus(x) -> Dumpuse(x))", "all x.(Grimpus(x) -> Dumpus(x))", "all x.(Grimpus(x) -> Dumpus(x))", "(Dumpsus)", "all x.(Grimpus(x) -> Dumpuse(x))", "all x.(Grimpus(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_690", "nl": "Stella is not a dumpus, Stella is a lempus, and Stella is a vumpus.", "fol": "(-dumpus(Stella) & lempus(Stella) & vumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Dumpus(x)) & all y.(Stella(y) -> Lempus(y)) & all z.(Stella(z) -> Vumpus(z))))", "all x y z.((Stella(x) & Lempus(y) & Vumpus(z)) -> (-Dumpus(x) & Lempus(y) & Vumpus(z)))", "(all x.(Stella(x) -> -Dumpus(x)) & (Stella(x) -> Lempus(x)) & (Stella(x) -> Vumpus(x)))", "(all x y z.((Stella(x) & Dumpus(y)) -> -Dumpus(x)) & ((Stella(z) & Lempus(z)) -> Vumpus(z)))", "all x.(Stella(x) -> (-Dumpus(x) & Lempus(x) & Vumpus(x)))", "all x y z.((Stella(x) & Dumpus(y) & Lempus(z)) -> (-Dumpus(x) & Lempus(x) & Vumpus(x)))", "all x y z.((Stella(x) & Lempus(y) & Vumpus(z)) -> (-Dumpus(x) & Lempus(y) & Vumpus(z)))", "(all x.(Stella(x) -> -Dumpus(x)) & all y.(Stella(y) -> Lempus(y)) & all z.(Stella(z) -> Vumpus(z))))", "(all x y z.((Stella(x) & Dumpus(y)) -> -Dumpus(x)) & ((Stella(z) & Lempus(z))) -> Vumpus(z)))", "exists x.(Stella(x) & -Dumpus(x) & Lempus(x) & Vumpus(x))", "(all x.(Stella(x) -> -Dumpus(x)) & (Stella(x) -> Lempus(x)) & (Stella(x) -> Vumpus(x)))", "all x y z.((Stella(x) & Lempus(y) & Vampus(z)) -> (-Dumpus(x) & Lempus(y) & Vampus(z)))", "(all x y z.((Stella(x) & Dumpus(y)) -> -Dumpus(x)) & ((Stella(z) & Lempus(z)) -> Vumpus(z)))", "all x y z.((Stella(x) & Dumpus(y) & Lempus(z)) -> (-Dumpus(x) & Lempus(x) & Vumpus(x)))", "(all x.(Stella(x) -> -Dumpus(x)) & all y.(Stella(y) -> Lempus(y)) & all z.(Stella(z) -> Vumpus(z))))", "(all x.(Stella(x) -> -Dumpus(x)) & (Lempus(x) | Vumpus(x)))"]}
{"id": "prontoqa_train_691", "nl": "Every yumpus is a lempus.", "fol": "all x. (yumpus(x) -> lempus(x))", "prediction": ["all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "all x y.((Yumpus(x) & Lempus(y)) -> Has(x,y))", "(all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "all x y.((Yumpus(x) & Lempus(y)) -> Is(x,y))", "all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "exists x.(yumpus(x) & Lempus(y) & HasLempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "exists x.(Yumpus(x) & Lempus(x))", "exists x.(Yumpus(x) & Lempus(x))"]}
{"id": "prontoqa_train_692", "nl": "Fae is not a lempus, Fae is a numpus, and Fae is a lorpus.", "fol": "(-lempus(Fae) & numpus(Fae) & lorpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Lempus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> Lorpus(x)))", "all x y z.((Fae(x) & Numpus(y) & Lorpus(z)) -> (-Lempus(x) & Numpus(y) & -Lorpus(z)))", "(all x.(Fae(x) -> -Lempus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> Lorpus(z))))", "(all x y z.((Fae(x) & Lempus(y)) -> -Lempus(x)) & ((Fae(z) & Numpus(z))) -> Lorpus(z)))", "all x.(Fae(x) -> (-Lempus(x) & Numpus(x) & Lorpus(x)))", "all x y z.((Fae(x) & Numpus(y) & Lorpus(z)) -> (-Lempus(x) & Numpus(y) & -Lorpus(z)))", "(all x.(Fae(x) -> -Lempus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> Lorpus(x)))", "(all x y z.((Fae(x) & Lempus(y)) -> -Lempus(x)) & ((Fae(z) & Numpus(z)) -> Lorpus(z)))", "all x y z.((Fae(x) & Numpus(y) & Lorpus(z)) -> (-Lempus(x) & -Numpus(y) & -Lorpus(z)))", "all x y z.(Fae(x) & (-Lempus(x) & Numpus(y) & Lorpus(z)))", "(all x.(Fae(x) -> -Lempus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> Lorpus(z))))", "all x.(Fae(x) -> (-Lempus(x) & Numpus(x) & Lorpus(x)))", "(all x y z.((Fae(x) & Lempus(y)) -> -Lempus(x)) & ((Fae(z) & Numpus(z)) -> Lorpus(z)))", "exists x.(Fae(x) & -Lempus(x) & Numpus(x) & Lorpus(x))", "all x y z.((Fae(x) & Numpus(y) & Lorpus(z)) -> (-Lempus(x) & Numpus(y) & Loperpus(z)))", "(all x.(Fae(x) -> -Lempus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> Lorpus(x)))"]}
{"id": "prontoqa_train_693", "nl": "Every lempus is a rompus.", "fol": "all x. (lempus(x) -> rompus(x))", "prediction": ["all x.(Lempus(x) -> Rompus(x))", "all x.(Lempus(x) -> Rompus(x))", "all x y.((Lempus(x) & Rompus(y)) -> Has(x,y))", "(all x.(Lempus(x) -> Rompus(x))", "all x.(Lempus(x) -> Rompus(x))", "all x y.((Lempus(x) & Rompus(y)) -> Is(x,y))", "all x.(Limpus(x) -> Rompus(x))", "all x.(Lempus(x) -> Rompus(x))", "all x.(Limpus(x) -> Rompus(x))", "all x.(Lempus(x) -> Rompus(x))", "all x.(Limpus(x) -> Rompus(x))", "all x.(Limpus(x) -> Rompus(x))", "all x.(Lempus(x) -> Rompus(x))", "exists x.(Lempus(x) & Rompus(x))", "exists x.(Lempus(x) & Rumpus(x))", "exists x.(Lempus(x) & Rompus(x))"]}
{"id": "prontoqa_train_694", "nl": "Polly is a yumpus and Polly is not a rompus and Polly is a sterpus.", "fol": "(yumpus(Polly) & -rompus(Polly) & sterpus(Polly))", "prediction": ["(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Rompus(x)) & (Polly(x) -> Sterpus(x)))", "all x y z.((Polly(x) & Yampus(x) & Polly(y) & -Rompus(y)) -> (Sterpus(z)))", "(all x y.(Yumpus(x) -> Polly(x)) & (-Yumpus(y) & -Rompus(y)) & (-Yumpus(y) & Sterpus(y))))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Rompus(x)) & (Polly(x) -> Sterpus(x)))", "(all x.(Yumpus(x) -> Polly)) & (-Rompus(x) -> Polly)) & (-Rompus(x) -> Polly)))", "all x y.((Polly(x) & Yampus(x)) -> (-Rompus(x) & Sterpus(y)))", "all x y z.((Polly(x) & Yumpus(y) & Polly(z)) -> (-Rompus(z) & Sterpus(z)))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Rompus(x)) & (Polly(x) -> Sterpus(x)))", "all x y z.((Polly(x) & Yampus(x) & Polly(y) & Rompus(z)) -> (Yumpus(x) & -Rompus(y) & Sterpus(z)))", "all x.(Polly(x) -> (Yumpus(x) & -Rompus(x) & Sterpus(x)))", "(yumpus(x) | (-rompus(y) | Sterpus(y))))", "all x y z.((Polly(x) & Yumpus(x) & Polly(y) & -Rompus(y) & Sterpus(z)) -> (Yumpus(x) & Sterpus(y)))", "(all x y.(Yumpus(x) -> Polly(x)) & (-Yumpus(y) & -Rompus(y)) & (-Yumpus(y) -> Polly(y)))", "exists x.(Yumpus(x) & -Rompus(x) & Sterpus(x))", "all x y.((Polly(x) & Yampus(x)) -> (-Rompus(y) & Sterpus(x)))", "(all x.(Polly(x) -> Yumpus(x)) & (Polly(x) -> -Rompus(x)) & (Polly(x) -> Sterpus(x)))"]}
{"id": "prontoqa_train_695", "nl": "Polly is not a lempus.", "fol": "-lempus(Polly)", "prediction": ["all x.(Polly(x) -> -Lempus(x))", "(-Lempus(Polly))", "Polly is not a lempus.", "all x.(Polly(x) -> -Lempus(x))", "(-Lempus(Polly))", "Polly is not a lempus.", "Polly -Lempus(Polly)", "all x.(Polly(x) -> -Lempus(x))", "Polly is not lempus.", "(-Lempus(Polly))", "-lempus(Polly)", "all x.(Polly(x) -> -Lempus(x))", "all x.(Polly(x) -> -Limpus(x))", "-Limpus(Poly)", "(-Lempus(Polly))", "(-lempus(Polly))"]}
{"id": "prontoqa_train_696", "nl": "Every numpus is a sterpus.", "fol": "all x. (numpus(x) -> sterpus(x))", "prediction": ["all x.(Nompus(x) -> Sterpus(x))", "all x.(Numpus(x) -> Sterpus(x))", "(all x.(Numpus(x) -> Sterpus(x))", "all x y.((Numpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Numpus(x) -> Sterpus(x))", "all x y.((Numpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Nompus(x) -> Sterpus(x))", "all x.(Numpus(x) -> Sterpus(x))", "all x.(Numpus(x) -> Sterepus(x))", "all x.(Nompus(x) -> Sterpus(x))", "all x.(Numpus(x) -> Sterpus(x))", "all x.(Nompus(x) -> Steroid(x))", "all x.(Numpus(x) -> Sterpus(x))", "exists x.(Numpus(x) & Sterpus(x))", "exists x.(Numpus(x) & Sterep(x))", "exists x.(Nompus(x) & Sterpus(x))"]}
{"id": "prontoqa_train_697", "nl": "Sam is a dumpus, Sam is not a sterpus, and Sam is an impus.", "fol": "(dumpus(Sam) & -sterpus(Sam) & impus(Sam))", "prediction": ["(all x.(Sam(x) -> Dumpus(x)) & (Sam(x) -> -Sterpus(x)) & (Sam(x) -> Imperator(x)))", "all x y z.((Sam(x) & Dumpus(x) & Sterpus(y) & Imperator(z)) -> (Dumpus(x) & -Sterpus(y) & Imperator(z)))", "(all x y z.((Sam(x) & Dumpus(y)) -> Dumpus(x)) & ((Sam(z) & -Sterpus(z))) -> Impermissible(z)))", "all x y z.((Sam(x) & Dumpus(y) & Sterpus(z)) -> (-Sam(x) & Impossible(x)))", "(all x.(Sam(x) -> Dumpus(x)) & (Sam(x) -> -Sterpus(x)) & (Sam(x) -> Impermissible(x)))", "(all x y z.((Sam(x) & Dumpus(x)) -> (Dumpus(x) & -Sterpus(y)) & ((Sam(z) & Impossible(z)) -> (Sam(z))))", "all x.(Sam(x) -> (Dumps(x) & -Sterpus(x) & Impermissible(x)))", "all x y z.((Sam(x) & Dumpus(x) & -Sterpus(y) & Imperator(z)) -> (Dumpus(x) & Imperator(z)))", "(all x.(Sam(x) -> Dumpus(x)) & all y.(Sam(y) -> -Sterpus(y))) & all z.(Sam(z) -> Imperator(z)))", "(all x.(Sam(x) -> Dumpus(x)) & (Sam(x) -> -Sterepus(x)) & (Sam(x) -> Imperator(x)))", "(all x.(Dumus(x) -> -Sterpus(x)) & all y.(Impossible(y) -> Dumpus(y)))", "exists x.(Sam(x) & Dumpus(x) & -Sterpus(x) & Imperator(x))", "all x.(Sam(x) -> (Dumpus(x) & -Sterepus(x) & Impermissible(x)))", "all x y z.((Sam(x) & Dumpus(y) & Sterpus(z)) -> (Dumpus(x) & -Sterpus(y) & Impermissible(z)))", "(all x.(Sam(x) -> Dumpus(x)) & (Sam(x) -> -Sterpus(x)) & (Sam(x) -> Impossible(x)))", "(all x.(Sam(x) -> Dumpus(x)) & (-Sterpus(x) & (Illegal(x) | Impossible(x))))"]}
{"id": "prontoqa_train_698", "nl": "Sam is not a numpus.", "fol": "-numpus(Sam)", "prediction": ["all x.(Sam(x) -> -Numpus(x))", "(-numpus(Sam))", "Sam is not a Numpus.", "all x.(Sam(x) -> -Numpus(x))", "-Numpus(Sam)", "Sam is not Numpus(Sam).", "(-numpus(Sam))", "Sam is not a Numpus.", "all x.(Sam(x) -> -Numpus(x))", "(-Numpus(Sam))", "-Numpus(Sam)", "(-numpus(Sam))", "(-numpus(sam) & Sam(sam))", "all x.(Sam(x) -> -Numpus(x))", "-Numpus(Sam)", "all x.(Sam(x) -> -Numpus(x))"]}
{"id": "prontoqa_train_699", "nl": "Numpuses are zumpuses.", "fol": "all x. (numpus(x) -> zumpus(x))", "prediction": ["all x.(Numpus(x) -> Zumpuse(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x y.((Numpus(x) & Zumpus(y)) -> Has(x,y))", "(All x.(Numpus(x) -> Zumpuse(x))", "all x.(Numpuse(x) -> Zumpuse(x))", "all x y.((Numpus(x) & Zumpus(y)) -> Toss(x,y))", "(Tompuse(nupuse) & Tompus(nupuse))", "all x.(Numpus(x) -> Zumpus(x))", "all x y.((Numpuse(x) & Zumpuse(y)) -> Has(x,y))", "All x.(Numpuse(x) -> Zumpuse(x))", "all x.(Numpuse(x) -> Zumpuse(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Numpuse(x) -> Zumpuse(x))", "all x.(Numpus(x) -> Zumpus(x))", "All x.(Numpus(x) -> Zumpuse(x))", "all x.(Numpuse(x) -> Zumpuse(x))"]}
{"id": "prontoqa_train_700", "nl": "Fae is a tumpus, Fae is a shumpus, and Fae is not a zumpus.", "fol": "(tumpus(Fae) & shumpus(Fae) & -zumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Tumpus(x)) & (Fae(x) -> Humpus(x)) & -Zumpus(x)))", "all x y z.((Fae(x) & Tumpus(x) & Shumpus(y) & -Zumpus(z)) -> (Tumpus(x) & Shumpus(y) & -Tumpus(z)))", "(all x.(Fae(x) -> Tumpus(x)) & all y.(Fae(y) -> Humpus(y)) & all z.(Fae(z) -> -Zumpus(z))))", "(all x y z.((Fae(x) & Tumpus(y)) -> Tumpus(x)) & ((Fae(z) & Humpus(z)) -> Shumpus(z)) & ((Fae(z) & Zumpus(z)) -> -Tumpus(z)))", "all x y z.((Fae(x) & Tumpus(y) & Humpus(z)) -> (Tumpus(x) & Shumpus(x) & -Zumpus(x)))", "(all x.(Fae(x) -> Tumpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> -Zumpus(x)))", "all x.(Fae(x) -> (Tumpus(x) & Humpus(x) & -Zumpus(x)))", "all x y z.(Fae(x) & Tumpus(x) & Shumpus(y) & -Zumpus(z))", "(all x y z.((Fae(x) & Tumpus(y)) -> Tumpus(x)) & ((Fae(z) & Humpus(z))) -> -Tompus(z)))", "all x y z.((Fae(x) & Tumpus(x) & Shumpus(y) & -Zumpus(z)) -> (Tumpus(x) & Shumpus(y) & -Tompus(z)))", "all x.(Fae(x) -> (Tumpus(x) & Shumpus(x) & -Zumpus(x)))", "exists x.(Fae(x) & Tumpus(x) & Shumpus(x) & -Zumpus(x))", "(all x.(Fae(x) -> Tumpus(x)) & all y.(Fae(y) -> Humpus(y)) & all z.(Fae(z) -> -Zumpus(z))))", "(all x y z.(Fae(x) -> Tumpus(x)) & (Fae(y) -> Humpus(y)) & (Fae(z) -> -Zumpus(z)))", "all x y z.(Fae(x) -> (Tumpus(x) | Shumpus(x) | -Zumpus(y)))", "(all x.(Fae(x) -> Tumpus(x)) & (Fae(x) -> Humpus(x)) & -Fae(x)))"]}
{"id": "prontoqa_train_701", "nl": "Every dumpus is a lorpus.", "fol": "all x. (dumpus(x) -> lorpus(x))", "prediction": ["all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpus(x))", "(all x.(Dumpus(x) -> Lorpus(x)))", "all x y.((Dumpus(x) & Lorpus(y)) -> Is(x,y))", "all x.(Dumps(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x y.((Dumpus(x) & Lorpus(y)) -> -Lorpus(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumps(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Loomis(x))", "all x.(Dumpus(x) -> Lorpus(x))", "exists x.(Dumpus(x) & Lordus(x))", "exists x.(Dupus(x) & Lopus(x))", "all x.(Dumpus(x) -> Lorpus(x))", "exists x.(Dumpus(x) & Lordus(x))"]}
{"id": "prontoqa_train_702", "nl": "Wren is a gorpus, Wren is not a lorpus, and Wren is a lempus.", "fol": "(gorpus(Wren) & -lorpus(Wren) & lempus(Wren))", "prediction": ["all x y z.((Wren(x) & Gorpus(x) & -Lorpus(y) & Lempus(z)) -> (Gorpus(x) & Lempus(z)))", "(all x.(Wren(x) -> Gorpus(x)) & (-Lorpus(x) & (Lempus(x) | Wren(x))))", "(all x.(Wren(x) -> Gorpus(x)) & (-Lorpus(x) & (Lempus(x) | Wren(x))))", "(all x y z.(Wren(x) -> Gorpus(x)) & ((Wren(y) & -Lorpus(y)) -> Lempus(z)))", "(all x y z.((Wren(x) & Gorpus(x)) -> Gorpus(x)) & ((Wren(y) & -Lorpus(y)) -> Lempus(z)))", "all x y z.((Wren(x) & Gorpus(x) & Wren(y) & Lemur(z)) -> (-Lorpus(y) & Lemur(z)))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> -Lorpus(x)) & (Wren(x) -> Lempus(x)))", "all x.(Wren(x) -> (Gorpus(x) | -Lorpus(x) | Lempus(x)))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> -Lorpus(x)) & (Wren(x) -> Lempus(x)))", "all x y z.((Wren(x) & Gorpus(x) & -Lorpus(y) & Lempus(z)) -> (Gorpus(x) & Lempus(y)))", "(all x y z.((Wren(x) & Gorpus(x)) -> Gorpus(x)) & ((Wren(y) & -Lorpus(y)) -> Lempus(z)))", "(all x y z.((Wren(x) & Gorpus(y)) -> Gorpus(x)) & ((Wren(z) & -Lorpus(z)) -> Lempus(z)))", "all x y z.((Wren(x) & Gorpus(y) & -Lorpus(z)) -> (Gorpus(x) & Lempus(x)))", "(all x.(Wren(x) -> Gorpus(x)) & (-Lorpus(x) & (Lempus(x) | Wren(x))))", "all x y z.((Wren(x) & Gorpus(x) & Wren(y) & Lemur(z)) -> (-Lorpus(y) & Lemur(z)))", "all x y z.((Wren(x) & Gorpus(y) & Loomis(z)) -> (Gorpus(x) & -Lorpus(y) & Lempus(z)))"]}
{"id": "prontoqa_train_703", "nl": "Every impus is a dumpus.", "fol": "all x. (impus(x) -> dumpus(x))", "prediction": ["all x.(IsDumpus(x) -> Imperium(x))", "all x.(Impossible(x) -> Dumpus(x))", "(all x.(IsDumpus(x)) -> IsDumpus(x))", "all x.(Improvement(x) -> Dumpus(x))", "-all x.(Impossible(x) -> Dumpus(x))", "all x.(IsDumpus(x) -> IsDumpus(x))", "all x y.((Issue(x) & Dumpus(y)) -> IsDumpus(x))", "all x.(Implementation(x) -> Dumpus(x))", "all x.(Defimer(x) -> Dumpus(x))", "all x.(Defect(x) -> Dumpus(x))", "exists x.(Defimer(x) & Dumpus(x))", "all x.(IsDefiant(x) -> Dumpus(x))", "all x.(Impossible(x) -> Dumpus(x))", "exists x.(Defibris(x) & Dumpus(x))", "all x.(Defect(x) -> Dumpus(x))", "exists x.(Device(x) & Dumpus(x))"]}
{"id": "prontoqa_train_704", "nl": "Polly is a grimpus, Polly is a gorpus, and Polly is not a dumpus.", "fol": "(grimpus(Polly) & gorpus(Polly) & -dumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Grimpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Dumpus(x)))", "all x y z.((Polly(x) & Grimpus(x) & Gorpus(y) & Dumpus(z)) -> (Smoke(x) & Gorpus(y) & -Dumpus(z)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Polly(y) -> Gorpus(y)) & all z.(Polly(z) -> -Dumpus(z))))", "(all x y z.((Polly(x) & Grimpus(x)) -> Polly(y)) & ((Polly(z) & Gorpus(z)) -> Polly(z)))", "all x y z.((Polly(x) & Grimpus(x) & Gorpus(y) & -Dumpus(z)) -> (Smokey(x) & Gorpus(y) & -Dumpus(z)))", "all x.(Polly(x) -> (Grimpus(x) | Gorpus(x) | -Dumpus(x)))", "exists x.(Polly(x) & Grimpus(x) & Gorpus(x) & -Dumpus(x))", "(all x.(Polly(x) -> Grimpus(x)) & (Polly(x) -> Gorpus(x)) & -Dumpus(x)))", "all x y z.((Polly(x) & Grimpus(y) & Gorpus(z)) -> (Smokey(x) & Gorpus(x) & -Dumpus(x)))", "(all x.(Polly(x) -> Grumpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Dumpus(x)))", "(all x y z.((Polly(x) & Grimpus(y)) -> (Smaller(x) | Gorpus(y))) & ((Polly(z) & Dumpus(z))) -> -Dumpus(z)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Polly(y) -> Gorpus(y)) & all z.(Polly(z) -> -Dumpus(z))))", "all x y z.((Polly(x) & Grimpus(x) & Gorpus(y) & Dumpus(z)) -> (Smokey(x) | Gorpus(y) & -Dumpus(z)))", "(all x y z.((Polly(x) & Grumpus(y)) -> (Grimpus(z) | Gorpus(z))) & ((Polly(x) & Dumpus(x)) -> -Dumpus(x)))", "all x y z.((Polly(x) & Grumpus(y) & Gorpus(z)) -> (Grimpus(x) | Gorpus(z) | -Dumpus(x)))", "all x y z.((Polly(x) & Grimpus(x) & Gorpus(y) & Dumpus(z)) -> (Smoke(x) | Gorpus(y) | -Dumpus(z)))"]}
{"id": "prontoqa_train_705", "nl": "Polly is not a lempus and Polly is a zumpus and Polly is a tumpus.", "fol": "(-lempus(Polly) & zumpus(Polly) & tumpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Lempus(x)) & (Polly(x) -> Zumpus(x)) & (Polly(x) -> Tumpus(x)))", "all x y z.((Polly(x) & Lempus(y) & Zumpus(z)) -> (-Lempus(x) & Toumpus(x) & Toumpus(y)))", "(all x y z.((Polly(x) & Lempus(y)) -> -Lempus(x)) & ((Polly(z) & Zumpus(z)) -> Tumpus(z)))", "all x y z.((Polly(x) & Lempus(y) & Zumpus(z)) -> (-Lempus(x) & Toumpus(x) & Toumpus(y)))", "(all x y.(Lempus(x) -> Polly)) & (Tompus(y) -> Polly)) & (Tumpus(y) -> Polly)))", "all x y.((Polly(x) & Polly(y)) -> (-Lempus(x) & Zumpus(y) & Tumpus(y)))", "(all x.(Polly(x) -> -Lempus(x)) & all y.(Polly(y) -> Zumpus(y)) & all z.(Polly(z) -> Tumpus(z))))", "(all x.(Polly(x) -> -Lempus(x)) & (Polly(x) -> Zumpus(x)) & (Polly(x) -> Tumpus(x)))", "all x.(Polly(x) -> (-Lempus(x) & Zumpus(x) & Tumpus(x)))", "all x y z.((Polly(x) & Lempus(y) & Zumpus(z)) -> (-Lempus(x) & Toumpus(x)))", "(all x.(Polly(x) -> -Lempus(x)) & (Polly(x) -> Zumpus(x)) & (Polly(x) -> Tumpus(x)))", "all x y.((Polly(x) & Lempus(y) & Zumpus(y)) -> (-Lempus(x) & Toumpus(x)))", "(all x y z.((Polly(x) & Lempus(y)) -> -Lempus(x)) & ((Polly(z) & Zumpus(z)) -> Tumpus(z)))", "all x y z.((Polly(x) & Lempus(y) & Zumpus(z)) -> (-Lempus(x) & Tompus(y) & Tompus(z)))", "(all x.(Polly(x) -> -Lempus(x)) & (Polly(x) -> Zumpus(x)) & (Polly(x) -> Tumpus(x)))", "exists x.(Polly(x) & (-Lempus(x) | Tompus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_706", "nl": "Every gorpus is a wumpus.", "fol": "all x. (gorpus(x) -> wumpus(x))", "prediction": ["all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x y.((Gorpus(x) & Wumpus(y)) -> Is(x,y))", "all x.(Gorpus(x) -> Wumpus(x))", "all x y.((Gorpus(x) & Wumpus(y)) -> Has(x,y))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "exists x.(Gorph(x) & Wumpus(x))", "all x.(Gorpus(x) -> Wampus(x))", "exists x.(Gorpus(x) & Worm(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wampus(x))", "exists x.(Gorpus(x) & Worm(x))", "exists x.(Gorpus(x) & Hush(x))", "all x.(Gorpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_707", "nl": "Rex is not a wumpus, Rex is a numpus, and Rex is a lorpus.", "fol": "(-wumpus(Rex) & numpus(Rex) & lorpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Wumpus(x)) & all y.(Rex(y) -> Numpus(y)) & all z.(Rex(z) -> Lorpus(z))))", "all x y z.((Rex(x) & Wumpus(y) & Numpus(z)) -> (-Wumpus(x) & Numpus(x) & Lorpus(x)))", "(all x.(Rex(x) -> -Wumpus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> Lorpus(x)))", "(all x y z.((Rex(x) & Wumpus(y)) -> -Wumpus(x)) & ((Rex(z) & Numpus(z))) -> Lorpus(x)))", "all x.(Rex(x) -> (-Wumpus(x) & Numpus(x) & Lorpus(x)))", "(-Wumpus(rex) & Numpus(rex) & Lorpus(rex))", "all x y z.((Rex(x) & Wumpus(y) & Numpus(z)) -> (-Wumpus(x) & -Numpus(y) & -Lorpus(z)))", "(all x y z.((Rex(x) & Wumpus(y) & Numpus(z)) -> -Wumpus(x)) & ((Rex(x) & Numpus(x) & Lorpus(x)) -> -Wumpus(x)))", "(all x.(Rex(x) -> -Wumpus(x)) & all y.(Rex(y) -> Numpus(y)) & all z.(Rex(z) -> Lorpus(z))))", "(all x y z.((Rex(x) & Wumpus(y)) -> -Wumpus(x)) & ((Rex(z) & Numpus(z))) -> Lorpus(x)))", "all x y z.((Rex(x) & Humpus(y) & Numpus(z)) -> (-Wumpus(x) & Numpus(y) & Lorpus(z)))", "(all x.(Rex(x) -> -Wumpus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> Lorpus(x)))", "all x y z.((Rex(x) & Wumpus(y) & Numpus(z)) -> (-Wumpus(x) & Numpus(y) & Lorpus(z)))", "all x y z.((Rex(x) & Wumpus(y) & Numpus(z) & Lorpus(x)) -> -Wumpus(x) & Numpus(x,z) & Lorpus(x))", "all x y z.((Rex(x) & Wumpus(y) & Numpus(z)) -> (-Wumpus(x) & -Lorpus(x)))", "(all x.(Rex(x) -> -Wumpus(x)) & all y.(Rex(y) -> Numpus(y)) & all z.(Rex(z) -> Lorpus(z)))"]}
{"id": "prontoqa_train_708", "nl": "Jompuses are gorpuses.", "fol": "all x. (jompus(x) -> gorpus(x))", "prediction": ["all x.(Jompuse(x) -> Gorpus(x))", "all x.(Jompuse(x) -> Gorpuse(x))", "all x y.((Jompuse(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Jompuse(x) -> Gorpuse(x))", "(Gorpuse(jompus) & Gorpus(jompus))", "all x y.((Jompuse(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Jompuse(x) -> Gorpuse(x))", "all x.(Jimpus(x) -> Gorpus(x))", "all x y.((Jompuse(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompuse(x) -> Gorpuse(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpuse(x))", "all x.(Jimpus(x) -> Gorpus(x))", "All x.(Jomess(x) -> Gorpuse(x))", "all x.(Jompuse(x) -> Gorpuse(x))"]}
{"id": "prontoqa_train_709", "nl": "Sam is not a gorpus and Sam is a lorpus and Sam is a grimpus.", "fol": "(-gorpus(Sam) & lorpus(Sam) & grimpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Gorpus(x)) & all y.(Lorpus(y) & All z.(Sam(z) -> Grimpus(z))))", "all x y z.((Sam(x) & Gorpus(y) & Lorpus(z)) -> (-Gorpus(x) & Lopus(y) & Grimpus(z)))", "(all x.(Sam(x) -> -Gorpus(x)) & (Lorpus(x) | Grimpus(x))))", "all x y z.((Sam(x) & Gorpus(y) & Lorpus(z)) -> (-Gorpus(x) & -Lorpus(x) & -Grimpus(x)))", "all x.(Sam(x) -> (-Gorpus(x) & -Lorpus(x) & -Grimpus(x)))", "(-Gorpus(Sam) & Lopus(Sam) & Grimpus(Sam))", "all x y.((Sam(x) & Gorpus(y) & Lorpus(y)) -> (-Gorpus(x) & Grimpus(x)))", "exists x.(Sam(x) & -Gorpus(x) & Lorpus(x) & Grimpus(x))", "(all x y.(Sam(x) -> -Gorpus(x)) & (Lorpus(y) | Grimpus(y))))", "(all x.(Sam(x) -> -Gorpus(x)) & all y.(Lorpus(y) & All z.(Sam(z) -> Grimpus(z))))", "(-Gorpus(sam) & -Lorpus(sam) & Grimpus(sam))", "all x y z.((Sam(x) & Gorpus(y) & Lorpus(z)) -> (-Gorpus(x) & Lorpus(x) & Grimpus(x)))", "(all x.(Sam(x) -> -Gorpus(x)) & all y.(Lorpus(y) & -Sam(y))) & all z.(Sam(z) -> Grimpus(z)))", "(all x.(Sam(x) -> -Gorpus(x)) & (Lorpus(x) | Grimpus(x))))", "all x y.((Sam(x) & Gorpus(y) & Lorpus(x)) -> (-Gorpus(x) & Grimpus(y)))", "all x y z.((Sam(x) & Gorpus(y) & Lorpus(z)) -> (-Gorpus(x) & -Lorpus(y) & -Grimpus(z)))"]}
{"id": "prontoqa_train_710", "nl": "Rex is not a rompus and Rex is a numpus and Rex is a jompus.", "fol": "(-rompus(Rex) & numpus(Rex) & jompus(Rex))", "prediction": ["(all x.(Rex(x) -> -Rompus(x)) & all y.(Nompus(y) & -Jompus(y))))", "all x y z.((Rex(x) & Rompus(y) & Numpus(z)) -> (-Rompus(x) & Numpus(x) & Jompus(x)))", "(all x.(Rex(x) -> -Rompus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> Jompus(x)))", "(all x y z.((Rex(x) & Rompus(y)) -> -Rompus(x)) & ((Rex(z) & Numpus(z))) -> Jompus(z)))", "(-Rompus(Rex) & Numpus(Rex) & Jompus(Rex))", "all x.(Rex(x) -> (-Rompus(x) & Numpus(x) & Jompus(x)))", "all x y z.((Rompus(x) & Numpus(y) & Jompus(z)) -> (-Rompus(x) & Numpus(y) & Jompus(z)))", "(all x y.(Rompus(x) -> -Rompus(x)) & (Numpus(y) -> Numpus(y)) & (Jompus(y) -> -Rompus(y)))", "all x y.((Rex(x) & Rompus(y)) -> (-Rompus(x) & Numpus(y) & Jompus(x)))", "(all x.(Rompus(x) -> -Rompus(x)) & all y.(Numpus(y) -> Numpus(y)) & all z.(Jompus(z) -> Jompus(z)))", "all x y z.((Rex(x) & Rompus(y) & Numpus(z)) -> (-Rompus(x) & Numpus(y) & Jompus(z)))", "(all x.(Rex(x) -> -Rompus(x)) & all y.(Nompus(y) & Jompus(y)))", "(-Rompus(Rex) & Numpus(Rex) & Jompus(Rex))", "all x.(Rex(x) -> (-Rompus(x) & Numpus(x) & Jompus(x)))", "all x y z.((Rex(x) & Rompus(y) & Numpus(z)) -> (-Rompus(x) & Numpus(x) & Jompus(x)))", "(all x.(Rex(x) -> -Rompus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> Jompus(x)))"]}
{"id": "prontoqa_train_711", "nl": "Every lempus is a vumpus.", "fol": "all x. (lempus(x) -> vumpus(x))", "prediction": ["all x.(Lempus(x) -> Vumpus(x))", "all x.(Lempus(x) -> Vumpus(x))", "all x y.((Lempus(x) & Vumpus(y)) -> Is(x,y))", "(all x.(Lempus(x) -> Vumpus(x))", "all x.(Lempus(x) -> Vumpus(x))", "all x y.((Lempus(x) & Vumpus(y)) -> Is(x,y))", "all x.(Lempus(x) -> Vumpus(x))", "all x.(Limpus(x) -> Vumpus(x))", "all x.(Lempus(x) -> Vumpus(x))", "all x.(Lempus(x) -> Vampus(x))", "all x.(Limpus(x) -> Vulpis(x))", "exists x.(Lempus(x) & -Vumpus(x))", "all x.(Limpus(x) -> Vumpus(x))", "exists x.(Lempus(x) & Vempus(x))", "all x.(Limpus(x) -> Vumpus(x))", "exists x.(Lempus(x) & -Vumpus(x))"]}
{"id": "prontoqa_train_712", "nl": "Alex is a yumpus and Alex is not a vumpus and Alex is a dumpus.", "fol": "(yumpus(Alex) & -vumpus(Alex) & dumpus(Alex))", "prediction": ["(all x.(Alex(x) -> Yumpus(x)) & (-Alex(x) -> Vumpus(x)) & (-Alex(x) -> Dumpus(x)))", "all x y.((Alex(x) & Yumpus(x)) -> (-Vumpus(x) & Dumpus(y)))", "all x.(Alex(x) -> (Yumpus(x) & -Vumpus(x) & Dumpus(x)))", "all x y z.((Alex(x) & Yumpus(y) & -Vumpus(z)) -> (Yumpus(x) & Dumpus(x)))", "(all x.(Alex(x) -> Yumpus(x)) & (Alex(x) -> -Vumpus(x)) & (Alex(x) -> Dumpus(x)))", "(all x.(Alexa(x) -> Yumpus(x)) & (-Alexa(x) -> Vumpus(x)) & (-Alexa(x) -> Dumpus(x)))", "(all x.(Alex(x) -> Yumpus(x)) & all y.(Alex(y) -> -Vumpus(y))) & all z.(Alex(z) -> Dumpus(z))))", "(all x y.(Yumpus(x) -> Alex(x)) & (-Vumpus(y) -> Alex(y)) & (-Vumpus(y) -> Alex(y)))", "exists x.(Alex(x) & Yumpus(x) & -Vumpus(x) & Dumpus(x))", "all x y.((Alex(x) & Yumpus(x)) -> (-Vumpus(x) & Dumpus(y)))", "(all x.(Alex(x) -> Yampus(x)) & (Alex(x) -> -Vumpus(x)) & (Alex(x) -> Dumpus(x)))", "all x y z.((Alex(x) & Yumpus(y) & -Vimpus(z)) -> (Yumpus(x) & Dumpus(x)))", "all x.(Alex(x) -> (Yumpus(x) & -Vumpus(x) & Dumpus(x)))", "all x y.(Yumpus(x) & -Vumpus(y) & Dumpus(x))", "(all x y.(Yumpus(x) -> Alex(x)) & (-Vumpus(y) -> Alex(y)) & (-Vumpus(y) -> Alex(y)))", "all x.(Alex(x) -> (Yumpus(x) & -Vumpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_713", "nl": "Sally is not a grimpus, Sally is an impus, and Sally is a lempus.", "fol": "(-grimpus(Sally) & impus(Sally) & lempus(Sally))", "prediction": ["(all x.(Sally(x) -> -Grimpus(x)) & all y.(Sally(y) -> Issue(y)) & all z.(Sally(z) -> Lempus(z))))", "(all x.(Sally(x) -> -Grimpus(x)) & (Sally(x) -> Issue(x)) & (Sally(x) -> Lempus(x)))", "(all x y z.((Sally(x) & Grimpus(y)) -> -Grimpus(x)) & ((Sally(z) & Impossible(z)) -> Lempus(z)))", "all x.(Sally(x) -> (-Grimpus(x) & Issue(x) & Lempus(x)))", "all x y z.((Sally(x) & Grimpus(y) & Imperator(z)) -> (-Grimpus(x) & Imperator(x) & Lempus(x)))", "all x y z.((Sally(x) & Grimpus(y) & Impossible(z)) -> (-Grimpus(x) & Lempus(x)))", "(all x.(Sally(x) -> -Grimpus(x)) & all y.(Sally(y) -> Issue(y)) & all z.(Sally(z) -> Lempus(z))))", "exists x.(Sally(x) & -Grimpus(x) & Impossible(x) & Lempus(x))", "(all x y z.((Sally(x) & Grimpus(y)) -> -Grimpus(x)) & ((Sally(z) & Imperator(z)) -> Lempus(z)))", "all x.(Sally(x) -> (-Grimpus(x) & Issue(x) & Lempus(x)))", "all x y z.((Sally(x) & Grimpus(y) & Imperator(z)) -> (-Salvish(x) & Ilira(x) & Lempus(x)))", "all x y z.((Sally(x) & Grumpus(y) & Imperator(z)) -> (-Grimpus(x) & Imperator(x) & Lempus(x)))", "(all x.(Sally(x) -> -Grimpus(x)) & (Impossible(x) | Lempus(x))))", "(-Grimpus(Sally) & IsImpossible(Sally)) & Lempus(Sally))", "(all x.(Sally(x) -> -Grimpus(x)) & all y.(Sally(y) -> Impossible(y)) & all z.(Sally(z) -> Lempus(z)))", "(all x.(Sally(x) -> -Grimpus(x)) | (Sally(x) -> Issue(x)) | (Sally(x) -> Lempus(x))))"]}
{"id": "prontoqa_train_714", "nl": "Lorpuses are dumpuses.", "fol": "all x. (lorpus(x) -> dumpus(x))", "prediction": ["all x.(Lorpus(x) -> Dumpuse(x))", "all x.(Lorpus(x) -> Dumpuse(x))", "all x y.((Lorpus(x) & Dumpuse(y)) -> Dumpuse(x))", "all x y.((Lorpus(x) & Dumpuse(y)) -> (Dumpus(x) & Dumpuse(y)))", "all x.(Lorpus(x) -> Dumpuse(x))", "(Dumuse(lorpus) & Dumpuse(lorpus))", "(Dumpsus(lorpus) & -Dumpsus(lorpus))", "(Dumpuses(lorpus) & Dumpuse(lorpus))", "all x.(Lorpus(x) -> Dumpuse(x))", "all x.(Lorpus(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpuse(x))", "All x.(Lurpis(x) -> Dumpuse(x))", "all x.(Lorpus(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpuse(x))", "all x.(Lorpus(x) -> Dumpuse(x))", "all x.(Lurpus(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_715", "nl": "Polly is a lempus, Polly is a numpus, and Polly is not a dumpus.", "fol": "(lempus(Polly) & numpus(Polly) & -dumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> Numpus(x)) & (Polly(x) -> -Dumpus(x)))", "all x y z.((Polly(x) & Lempus(x) & Numpus(y) & Dumpus(z)) -> (Lempus(x) & Numpus(y) & -Dumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & all y.(Polly(y) -> Numpus(y)) & all z.(Polly(z) -> -Dumpus(z))))", "all x y z.((Polly(x) & Lempus(x) & Numpus(y) & Dumpus(z)) -> (Lempus(x) & Numpus(y) & -Dumpus(z)))", "(all x y z.(Polly(x) -> Lempus(x)) & (Polly(y) -> Numpus(y)) & (Polly(z) -> -Dumpus(z))))", "all x.(Polly(x) -> (Lempus(x) & Numpus(x) & -Dumpus(x)))", "all x y z.((Polly(x) & Lempus(x) & Numpus(y) & Dumpus(z)) -> (Lempus(x) & Numpus(y) & -Dumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> Numpus(x)) & -Dumpus(x)))", "(all x y z.((Polly(x) & Lempus(x)) -> Polly(x)) & ((Polly(y) & Numpus(y)) -> Polly(z)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> Numpus(x)) & (Polly(x) -> -Dumpus(x)))", "(all x y z.((Polly(x) & Lempus(y)) -> Polly(x,y)) & ((Polly(z) & Numpus(z)) -> Polly(z)) & -Dumpus(z)))", "all x y z.((Polly(x) & Lempus(y) & Numpus(z)) -> (Lempus(x) | Numpus(z) | -Dumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & all y.(Polly(y) -> Numpus(y)) & all z.(Polly(z) -> -Dumpus(z))))", "all x.(Polly(x) -> (Lempus(x) & Numpus(x) & -Dumpus(x)))", "all x y z.((Polly(x) & Lempus(x) & Numpus(y) & Dumpus(z)) -> (Lempus(x) & Numpus(y) & -Dumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> Numpus(x)) & (Polly(x) -> -Dumpus(x)))"]}
{"id": "prontoqa_train_716", "nl": "Tumpuses are shumpuses.", "fol": "all x. (tumpus(x) -> shumpus(x))", "prediction": ["all x.(Tumpus(x) -> Shumpus(x))", "all x.(Tumpus(x) -> Shumpus(x))", "all x y.((Tumpus(x) & Shumpus(y)) -> Shumpus(x))", "all x.(Tumpuse(x) -> Shumpus(x))", "(Shumpuse(tump) & Shumpus(tump))", "all x.(Tumpus(x) -> Shumpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x y.((Tumpus(x) & Shumpus(y)) -> Shumpus(x))", "(Shumpuse(tump) & Shumpus(tump))", "all x.(Tumpuse(x) -> Shumpus(x))", "(Shumpuse(tumpus) -> Tumpus(tumpus))", "all x.(Tumpus(x) -> Shumpus(x))", "all x.(Tumulus(x) -> Shumpus(x))", "all x.(Tumpuse(x) -> Humptus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_717", "nl": "Sam is not a shumpus, Sam is a gorpus, and Sam is a yumpus.", "fol": "(-shumpus(Sam) & gorpus(Sam) & yumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Shumpus(x)) & all y.(Gorpus(y) -> Yampus(y)))", "all x y z.((Sam(x) & Gorpus(y) & Yumpus(z)) -> (-Shumpus(x) & Gorpus(y) & Yampus(z)))", "(all x.(Shumpus(x) -> -Shumpus(x)) & all y.(Gorpus(y) -> Yampus(y)))", "(all x.(Sam(x) -> -Shumpus(x)) & (Gorpus(x) & Yumpus(x)))", "all x.(Sam(x) -> (-Shumpus(x) & Gorpus(x) & Yumpus(x)))", "(all x y z.((Sam(x) & Humpus(y)) -> -Shumpus(x)) & ((Sam(z) & Gorpus(z))) -> Yumpus(z)))", "all x y z.((Sam(x) & Gorpus(y) & Yumpus(z)) -> (-Shumpus(x) & Gorpus(y) & Yampus(z)))", "all x y z.((Sam(x) & Gorpus(y) & Yumpus(z)) -> (-Shumpus(x) & Gorpus(y) & Yumpus(z)))", "exists x.(Sam(x) & -Shumpus(x) & Gorpus(x) & Yumpus(x))", "all x y z.((Sam(x) & Sam(y) & Gorpus(z)) -> (-Shumpus(x) & Gorpus(y) & Yumpus(z)))", "(all x.(Sam(x) -> -Shumpus(x)) & all y.(Gorpus(y) -> Yampus(y)))", "(all x y z.((Sam(x) & Humpus(y)) -> -Shumpus(x)) & ((Sam(z) & Gorpus(z))) -> Yumpus(z)))", "(all x.(Shumpus(x) -> -Shumpus(x)) & (Gorpus(x) -> Yampus(x)))", "all x y z.((Sam(x) & Shumpus(y) & Gorpus(z)) -> (-Shumpus(x) & Gorpus(x) & Yumpus(x)))", "(all x.(Sam(x) -> -Shumpus(x)) & (Gorpus(x) & Yumpus(x)))", "all x y z.((Sam(x) & Gorpus(y) & Yampus(z)) -> (-Shumpus(x) | Gorpus(y) | Yampus(z)))"]}
{"id": "prontoqa_train_718", "nl": "Max is a brimpus, Max is not an impus, and Max is a wumpus.", "fol": "(brimpus(Max) & -impus(Max) & wumpus(Max))", "prediction": ["(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Wumpus(x)))", "all x y z.((Max(x) & Brimpus(y) & Imperator(z)) -> (Brimpus(x) & -Impossible(x) & Wumpus(x)))", "(all x y z.((Max(x) & Brimpus(y)) -> (Brimpus(x) & -Impossible(y))) & ((Max(z) & Wumpus(z)) -> Wumpus(z)))", "all x y z.((Max(x) & Brimpus(x) & -Impossible(y) & Wumpus(z)) -> (Brimpus(x) & Wumpus(z)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Wumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & all y.(Max(y) -> -Impossible(y))) & all z.(Max(z) -> Wumpus(z)))", "all x.(Max(x) -> (Brimpus(x) & -Impossible(x) & Wumpus(x)))", "all x y z.((Max(x) & Brimpus(y) & Impossible(z)) -> (Brimpus(x) & Wumpus(x)))", "(all x y z.((Max(x) & Brimpus(x)) -> (Brimpus(x) & -Impossible(y))) & ((Max(z) & Hush(z)) -> Wumpus(z)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Wumpus(x)))", "(all x y z.((Max(x) & Brimpus(y) & -Impossible(z)) -> (Brimpus(x) & Wumpus(x)))", "all x y z.((Max(x) & Brimpus(x) & Max(y) & Imperator(z)) -> (Brimpus(x) | Wumpus(y)))", "all x.(Max(x) -> (Brimpus(x) & -Impossible(x) & Wumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & all y.(Max(y) -> -Impossible(y))) & all z.(Max(z) -> Wumpus(z)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Issue(x)) & (Max(x) -> Wumpus(x)))", "all x.(Max(x) -> (Brimpus(x) & -Impossible(x) & Wumpus(x)))"]}
{"id": "prontoqa_train_719", "nl": "Every shumpus is a numpus.", "fol": "all x. (shumpus(x) -> numpus(x))", "prediction": ["all x.(Shumpus(x) -> Numpus(x))", "all x.(Shumpus(x) -> Numpus(x))", "all x y.((Shumpus(x) & Numpus(y)) -> Is(x,y))", "(all x.(Shumpus(x) -> Numpus(x))", "all x.(Shumpus(x) -> Numpus(x))", "all x y.((Shumpus(x) & Numpus(y)) -> Has(x,y))", "all x.(Shumpus(x) -> Numpus(x))", "all x.(Shumpus(x) -> Numpus(x))", "all x.(Shumpus(x) -> Numpus(x))", "all x.(Shumpus(x) -> Numpus(x))", "all x.(Shumpus(x) -> Numpus(x))", "exists x.(shumpus(x) & Humpus(x) & Numpus(x))", "all x.(Shumpus(x) -> Number(x))", "all x.(Shumpus(x) -> Numpus(x))", "exists x.(Shumpus(x) & Number(x))", "all x.(Shumpus(x) -> Numpus(x))"]}
{"id": "prontoqa_train_720", "nl": "Fae is an impus and Fae is a yumpus and Fae is not a numpus.", "fol": "(impus(Fae) & yumpus(Fae) & -numpus(Fae))", "prediction": ["(all x.(Fae(x) -> IsImpossible(x)) & (Fae(x) -> Yumpus(x)) & -Numpus(x)))", "all x y z.((Fae(x) & Fae(y) & Yumpus(z)) -> (Impossible(x) & Yampus(y) & -Numpus(z)))", "all x y.((Fae(x) & Fae(y)) -> (Impossible(x) & Yumpus(y) & -Numpus(y)))", "(all x.(Fae(x) -> Impossible(x)) & (Fae(x) -> Yumpus(x)) & -Numpus(x)))", "(all x y.(Fae(x) -> IsImpossible(x)) & (Fae(y) -> Yumpus(y)) & (Fae(y) -> -Numpus(y)))", "all x.(Fae(x) -> (Impossible(x) & Yampus(x) & -Numpus(x)))", "(all x.(Fae(x) -> Is(x)) & (Fae(x) -> (Yumpus(x) & -Numpus(x))))", "(all x y z.(Fae(x) -> IsImpossible(x)) & (Fae(y) -> Yumpus(y)) & (Fae(z) -> -Numpus(z)))", "exists x.(Fae(x) & IsImpossible(x) & exists y.(Yumpus(y) & IsYumpus(y)) & exists z.(Numpus(z) & IsImpossible(z))))", "(all x.(Fae(x) -> Impossible(x)) & all y.(Fae(y) -> Yumpus(y)) & all z.(Fae(z) -> -Numpus(z))))", "all x y z.((Fae(x) & Fae(y) & Yampus(z)) -> (Impossible(x) & Yampus(y) & -Numpus(z)))", "all x y z.(Fae(x) -> (Impossible(x) & Yampus(y) & -Numpus(z)))", "(all x.(Fae(x) -> IsImpossible(x)) & all y.(Fae(y) -> (Yumpus(y) & -Numpus(y))))", "all x.(Fae(x) -> (Impossible(x) & Yampus(x) & -Numpus(x)))", "all x y.((Fae(x) & Fae(y)) -> (Impossible(x) & Yumpus(y) & -Numpus(y)))", "(all x y.(Fae(x) -> Impossible(x)) & (Fae(y) -> Yumpsum(y)) & (Fae(z) -> -Numpus(z)))"]}
{"id": "prontoqa_train_721", "nl": "Max is a sterpus, Max is a jompus, and Max is not a grimpus.", "fol": "(sterpus(Max) & jompus(Max) & -grimpus(Max))", "prediction": ["(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> Jompus(x)) & (Max(x) -> -Grimpus(x)))", "all x y z.((Max(x) & Sterpus(y) & Jompus(z)) -> (Sterpus(x) & Jompus(x) & -Grimpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> Jompus(y)) & all z.(Max(z) -> -Grimpus(z))))", "(all x y z.((Max(x) & Sterpus(y)) -> (Sterpus(x) | Jompus(y)) & -Grimpus(z)))", "all x y z.((Max(x) & Sterpus(y) & Jompus(z)) -> (Sterpus(x) | Jompus(z) | -Grimpus(z)))", "all x.(Max(x) -> (Sterpus(x) & Jompus(x) & -Grimpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> Jompus(x)) & -Max(x)))", "(all x y z.((Max(x) & Sterpus(y) & Jompus(z)) -> (Sterpus(x) | Jompus(z)) | -Grimpus(z)))", "all x y z.((Max(x) & Sterpus(y) & Jompus(z)) -> (Stereos(x) & Jompus(x) & -Grimpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> Jompus(y)) & all z.(Max(z) -> -Grimpus(z))))", "(All x y z.((Max(x) & Sterpus(y)) -> (Sterepus(z) | Jompus(z))) & ((Max(x) & Grimpus(x)) -> -Sterpus(x)))", "all x.(Max(x) -> (Sterepus(x) & Jompus(x) & -Grimpus(x)))", "(all x.(Max(x) -> Sterepus(x)) & (Max(x) -> Jompus(x)) & (Max(x) -> -Grimpus(x)))", "all x y z.((Max(x) & Steropus(y) & Jompus(z)) -> (Steropus(x) & Jompus(y) & -Grimpus(z)))", "all x.(Max(x) -> (Sterpus(x) & Jompus(x) & -Grimpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> Jompus(y)) & all z.(Max(z) -> -Grimpus(z))))"]}
{"id": "prontoqa_train_722", "nl": "Sam is not a brimpus, Sam is a lempus, and Sam is a grimpus.", "fol": "(-brimpus(Sam) & lempus(Sam) & grimpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Brimpus(x)) & all y.(Sam(y) -> Lempus(y)) & all z.(Sam(z) -> Grimpus(z))))", "all x y z.((Sam(x) & Brimpus(y) & Lempus(z)) -> (-Brimpus(x) & Lempus(x) & Grimpus(x)))", "(all x y z.((Sam(x) & Brimpus(y)) -> -Brimpus(x)) & ((Sam(z) & Lempus(z)) -> Grimpus(z)))", "(all x.(Sam(x) -> -Brimpus(x)) & (Lempus(x) & Grimpus(x)))", "all x.(Sam(x) -> (-Brimpus(x) & Lempus(x) & Grimpus(x)))", "all x y z.((Sam(x) & Brimpus(y) & Lempus(z)) -> (-Brimpus(x) & Lempus(x) & Grimpus(x)))", "(all x.(Sam(x) -> -Brimpus(x)) & (Sam(x) -> Lempus(x)) & (Sam(x) -> Grimpus(x)))", "(all x.(Sam(x) -> -Brimpus(x)) & all y.(Lempus(y) & Grimpus(y)))", "exists x.(Sam(x) & -Brimpus(x) & Lempus(x) & Grimpus(x))", "(all x y z.((Sam(x) & Brimpus(y)) -> -Brimpus(x)) & ((Sam(z) & Lempus(z)) -> Grimpus(z)))", "all x y z.((Sam(x) & Brimpus(y) & Lempus(z)) -> (-Brimpus(x) & Lempus(y) & Grimpus(z)))", "(all x.(SameDay(x) -> -Brimpus(x)) & (SameDay(x) -> Lempus(x)) & (SameDay(x) -> Grimpus(x)))", "(all x.(Sam(x) -> -Brumpus(x)) & all y.(Sam(y) -> Lempus(y)) & all z.(Sam(z) -> Grimpus(z))))", "all x y z.((Sam(x) & Brimpus(y) & Lempus(z)) -> (-Brimpus(x) | Grimpus(x)))", "all x y z.((Sam(x) & Brimpus(y) & Lempus(z)) -> (-Sam(x) & Lempus(x) & Grimpus(x)))", "all x y z.((Sam(x) & Brimpus(y) & Lempus(z) & Grimpus(z)) -> (-Brimpus(x) & Lempus(y) & Grimpus(z)))"]}
{"id": "prontoqa_train_723", "nl": "Wumpuses are lorpuses.", "fol": "all x. (wumpus(x) -> lorpus(x))", "prediction": ["all x.(Wumpus(x) -> Lorpus(x))", "all x.(Wumpuse(x) -> Lorpus(x))", "all x y.((Wumpuse(x) & Lorpus(y)) -> IsLorpus(x,y))", "all x.(Wumpus(x) -> Lorpus(x))", "all x.(Wumpuse(x) -> Lorpuse(x))", "(Lumpuse(wumpuse) & -Lumpus(wu))", "all x y.((Wumpuse(x) & Lorpus(y)) -> (Lorpus(x) & -Lorpus(y)))", "(Lumpuse(wumpuse) | Loomise(wumpuse))", "all x.(Wumpus(x) -> Lorpus(x))", "all x.(Wumpuse(x) -> Lorpus(x))", "(Lumpuse(w) & -Lumpuse(w))", "all x.(Wumpus(x) -> Loomis(x))", "all x.(Wumpuse(x) -> Loomis(x))", "all x.(Wumpus(x) -> Lorpus(x))", "all x.(Wumpuse(x) -> Lorpuse(x))", "All x.(Wumpus(x) -> Loomis(x))"]}
{"id": "prontoqa_train_724", "nl": "Sally is not a lorpus, Sally is a shumpus, and Sally is a numpus.", "fol": "(-lorpus(Sally) & shumpus(Sally) & numpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Lorpus(x)) & (Shumpus(x) & Numpus(x)))", "all x y z.((Sally(x) & Lorpus(y) & Humpus(z)) -> (-Lorpus(x) & Shumpus(x) & Numpus(x)))", "(all x y z.((Sally(x) & Lorpus(y)) -> -Lorpus(x)) & ((Sally(z) & Humpus(z))) -> Numpus(z)))", "all x.(Sally(x) -> (-Lorpus(x) & Shumpus(x) & Numpus(x)))", "(all x.(Sally(x) -> -Lorpus(x)) & all y.(Shumpus(y) & -Numpus(y)))", "(-Lorpus(Sally) & Shumpus(Sally) & Numpus(Sally))", "all x y z.((Sally(x) & Lorpus(y) & Humpus(z)) -> (-Lorpus(x) & Shumpus(x) & Numpus(x)))", "all x y z.((Sally(x) & Shumpus(y) & Numpus(z)) -> (-Lorpus(x) & Shumpus(y) & Numpus(z)))", "(all x.(Sally(x) -> -Lorpus(x)) & (Shumpus(x) | Numpus(x))))", "all x.(Sally(x) -> (-Lorpus(x) & Shumpus(x) & Numpus(x)))", "(all x y z.((Sally(x) & Lorpus(y)) -> -Lorpus(x)) & ((Sally(z) & Humpus(z))) -> Numpus(z)))", "(-Lorpus(Sally) & Shumpus(Sally) & Numpus(Sally))", "(all x.(Sally(x) -> -Lorpus(x)) & all y.(Shumpus(y) & Numpus(y)))", "exists x.(Sally(x) & -Lorpus(x) & Shumpus(x) & Numpus(x))", "all x y z.((Sally(x) & Lorpus(y) & Humpus(z)) -> (-Lorpus(x) | (Shumpus(x) & Numpus(x))))", "(all x.(Sally(x) -> -Lorpus(x)) & (Shumpus(x) & Numpus(x)))"]}
{"id": "prontoqa_train_725", "nl": "Brimpuses are shumpuses.", "fol": "all x. (brimpus(x) -> shumpus(x))", "prediction": ["all x.(Brompus(x) -> Shumpus(x))", "all x.(Brompus(x) -> Shumpus(x))", "all x.(Brimpus(x) -> Shumpus(x))", "all x y.((Brompus(x) & Shumpus(y)) -> Shumpus(x))", "(Shumpuse(brimpus) & Shumpuse(brimpus))", "all x.(Brimpus(x) -> Shumpus(x))", "all x y.((Brompus(x) & Shumpus(y)) -> Shumpus(x))", "(Shumpuse(brimpus) & Shumpus(brimpus))", "(Shumpuse(brimpuse) -> shumpuse(brimpuse))", "all x.(Brumpus(x) -> Humpus(x))", "all x.(Brimpus(x) -> Shumpus(x))", "all x.(Brompus(x) -> Shumpus(x))", "all x.(Brimpus(x) -> Shumpus(x))", "all x.(Brumpus(x) -> Humpus(x))", "All x.(Brimpus(x) -> Shumpus(x))", "all x.(Brompus(x) -> Shumpuse(x))"]}
{"id": "prontoqa_train_726", "nl": "Sally is not a shumpus and Sally is a tumpus and Sally is a zumpus.", "fol": "(-shumpus(Sally) & tumpus(Sally) & zumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Shumpus(x)) & all y.(Tumpus(y) & all z.(Zumpus(z)) -> -Shumpus(x)))", "all x y z.((Sally(x) & Humpus(y) & Tumpus(z)) -> (-Shumpus(x) & Tumpus(x) & Zumpus(x)))", "all x.(Sally(x) -> (-Shumpus(x) & Tumpus(x) & Zumpus(x)))", "(all x.(Sally(x) -> -Shumpus(x)) & (Tumpus(x) & Zumpus(x)))", "(-Shumpus(Sally) & Tumpus(Sally) & Zumpus(Sally))", "(all x y.(Sally(x) -> -Shumpus(x)) & (Sally(y) -> Tumpus(y)) & (Sally(y) -> Zumpus(y)))", "all x y z.((Sally(x) & Humpus(y) & Tumpus(z)) -> (-Shumpus(x) & Tumpus(y) & Zumpus(z)))", "(all x.(Sally(x) -> -Shumpus(x)) & all y.(Tumpus(y) & All z.(Zumpus(z))) -> -Shumpus(x)))", "all x y.((Sally(x) & Shumpus(y) & Tumpus(y)) -> (-Shumpus(x) & Tumpus(x) & Zumpus(x)))", "(-Shumpus(s) & -Tumpus(s) & -Zumpus(s))", "(all x.(Sally(x) -> -Shumpus(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> Zumpus(x)))", "all x.(Sally(x) -> (-Shumpus(x) & Tumpus(x) & Zumpus(x)))", "all x y.((Sally(x) & Sally(y)) -> (-Shumpus(x) & Tumpus(y) & Zumpus(y)))", "exists x.(Sally(x) & -Shumpus(x) & Tumpus(x) & Zumpus(x))", "all x y z.((Sally(x) & Humpus(y) & Tumpus(z)) -> (-Shumpus(x) & Tumpus(x) & Zumpus(x)))", "(all x.(Sally(x) -> -Shumpus(x)) & all y.(Tumpus(y) & all z.(Zumpus(z) -> Tosspus(z))))"]}
{"id": "prontoqa_train_727", "nl": "Sam is a lempus, Sam is a vumpus, and Sam is not a rompus.", "fol": "(lempus(Sam) & vumpus(Sam) & -rompus(Sam))", "prediction": ["(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> Vumpus(x)) & (Sam(x) -> -Rompus(x)))", "all x y z.((Sam(x) & Lempus(x) & Vumpus(y) & -Rompus(z)) -> (Lempus(x) & Vumpus(y) & -Rompus(z)))", "(all x y z.((Sam(x) & Lempus(x)) -> (Lempus(x) | Vumpus(x)) & ((Sam(y) & -Rompus(y))))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Sam(y) -> Vumpus(y)) & all z.(Sam(z) -> -Rompus(z))))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> Vumpus(x)) & -Rompus(x)))", "exists x.(Sam(x) & Lempus(x) & Vumpus(x) & -Rompus(x))", "all x y z.((Sam(x) & Lempus(x) & Vumpus(y) & -Rompus(z)) -> (Lempus(x) & Vumpus(y) & -Rompus(z)))", "all x.(Sam(x) -> (Lempus(x) & Vumpus(x) & -Rompus(x)))", "(all x y z.((Sam(x) & Lempus(x)) -> Sam(y)) & ((Sam(z) & Vumpus(z)) -> Sam(z)) & ((Sam(x) & -Rompus(x)) -> Sam(x)))", "(all x.(SameDay(x) -> Lempus(x)) & (SameDay(x) -> Vumpus(x)) & (SameDay(x) -> -Rompus(x)))", "all x y z.((Sam(x) & Lempus(y) & Vampire(z) & -Rompus(x)) -> (Lempus(x) | Vampire(x) | -Rompus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> Vumpus(x)) & (Sam(x) -> -Rompus(x)))", "all x y z.((Sam(x) & Lempus(x) & Vumpus(y) & -Rompus(z)) -> (Lempus(x) & Vumpus(y) & -Rompus(z)))", "all x.(Sam(x) -> (Lempus(x) & Vumpus(x) & -Rompus(x)))", "(all x.(SameDay(x) -> Lempus(x)) & (SameDay(x) -> Vumpus(x)) & (SameDay(x) -> -Rompus(x)))", "all x y z.((Sam(x) & Lempus(x) & Vumpus(y) & -Rompus(z)) -> (Lempus(x) | Vumpus(y) & -Rompus(z)))"]}
{"id": "prontoqa_train_728", "nl": "Every numpus is a dumpus.", "fol": "all x. (numpus(x) -> dumpus(x))", "prediction": ["all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "(all x.(Numpus(x) -> Dumpus(x))", "all x y.((Numpus(x) & Dumpus(y)) -> Has(x,y))", "all x.(Nompus(x) -> Dumpus(x))", "all x y.((Numpus(x) & Dumpus(y)) -> Is(x,y))", "all x.(Numpus(x) -> Dumpus(x))", "exists x.(numpus(x) & Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Numerus(x) -> Dumpus(x))", "all x.(Nompus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "exists x.(Numpus(x) & Puss(x))", "all x.(Nompus(x) -> Dumpus(x))", "exists x.(Numpus(x) & Dumpus(x))"]}
{"id": "prontoqa_train_729", "nl": "Alex is a yumpus, Alex is a lorpus, and Alex is not a dumpus.", "fol": "(yumpus(Alex) & lorpus(Alex) & -dumpus(Alex))", "prediction": ["(all x.(Alex(x) -> Yumpus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> -Dumpus(z))))", "all x y z.((Alex(x) & Yumpus(y) & Lorpus(z)) -> (Yumpus(x) & -Dumpus(x)))", "(all x.(Alex(x) -> Yumpus(x)) & (Alex(x) -> Lorpus(x)) & -Dumpus(x)))", "all x.(Alex(x) -> (Yumpus(x) & Lorpus(x) & -Dumpus(x)))", "all x y z.((Alex(x) & Yumpus(y) & Lorpus(z)) -> (Yumpus(x) & Lopus(x) & -Dumpus(x)))", "(yumpus(Alex) & lorpus(Alex) & -dumpus(Alex))", "all x y z.((Alex(x) & Yumpus(y) & Lorpus(z) & -Dumpus(x)) -> (Yumpus(x) | Lorpus(x) | -Dumpus(x)))", "(all x.(Alex(x) -> Yampus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> -Dumpus(z))))", "(all x y z.(Alex(x) -> Yampus(x)) & (Alex(y) -> Lorpus(y)) & (Alex(z) -> -Dumpus(z))))", "(all x.(Alex(x) -> Yumpus(x)) & (Alex(x) -> Lorpus(x)) & (Alex(x) -> -Dumpus(x)))", "all x.(Alex(x) -> (Yumpus(x) & Lorpus(x) & -Dumpus(x)))", "exists x.(Alex(x) & Yumpus(x) & Lorpus(x) & -Dumpus(x))", "all x.(Alex(x) -> (Yumpus(x) | Lorpus(x) | -Dumpus(x)))", "all x y z.((Alex(x) & Yumpus(y) & Lorpus(z) & -Dumpus(x)) -> (Yumpus(x) | Lorpus(x) | -Dumpus(x)))", "(all x y z.(Alex(x) -> Yampus(x)) & (Alex(y) -> Lorpus(y)) & (Alex(z) -> -Dumpus(z)))", "(all x.(Alex(x) -> Yampus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> -Dumpus(z))))"]}
{"id": "prontoqa_train_730", "nl": "Each jompus is a lorpus.", "fol": "all x. (jompus(x) -> lorpus(x))", "prediction": ["all x.(Jompus(x) -> Lorpus(x))", "(all x.(Jompus(x) -> Lorpus(x))", "all x.(Jompus(x) -> Lorpus(x))", "all x y.((Jompus(x) & Lorpus(y)) -> Has(x,y))", "all x.(Jimpus(x) -> Lorpus(x))", "all x.(Jompus(x) -> Lorpus(x))", "all x y.((Jompus(x) & Lorpus(y)) -> Is(x,y))", "all x.(Jompus(x) -> Lorpus(x))", "all x.(Jimpus(x) -> Lorpus(x))", "all x.(Jompus(x) -> Lorpus(x))", "exists x.(Jimpus(x) & Lord(x))", "all x.(Jumpus(x) -> Lorpus(x))", "all x.(Jompus(x) -> Lordus(x))", "exists x.(Jompus(x) & Lord(x))", "exists x.(jompus(x) & Lord(x))", "exists x.(Jompus(x) & Lord(x))"]}
{"id": "prontoqa_train_731", "nl": "Fae is a sterpus, Fae is an impus, and Fae is not a lorpus.", "fol": "(sterpus(Fae) & impus(Fae) & -lorpus(Fae))", "prediction": ["(all x.(Fae(x) -> Sterpus(x)) & all y.(Fae(y) -> Issue(y)) & all z.(Fae(z) -> -Lorpus(z))))", "all x y z.((Fae(x) & Sterpus(y) & Is(z)) -> (Sterpus(x) & Is(x,z) & -Lorpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Issue(x)) & (Fae(x) -> -Lorpus(x)))", "(all x y z.((Fae(x) & Sterpus(y)) -> Sterpus(x)) & ((Fae(z) & Impossible(z)) -> -Lorpus(z)))", "all x y z.((Fae(x) & Sterpus(y) & Impossible(z)) -> (Sterpus(x) & -Lorpus(x)))", "all x.(Fae(x) -> (Sterpus(x) & Is(x) & -Lorpus(x)))", "(all x y z.((Fae(x) & Sterpus(y) & Is(z)) -> Sterpus(x)) & ((Fae(x) & Is(x) & -Lorpus(x)) -> IsIs(x)))", "(all x.(Fae(x) -> Sterpus(x)) & all y.(Fae(y) -> Issue(y)) & all z.(Fae(z) -> -Lorpus(z))))", "all x y z.((Fae(x) & Sterpus(x) & Is(y) & -Lorpus(z)) -> (Sterpus(x) & Is(y) & -Lorpus(z)))", "(all x y z.((Fae(x) & Sterpus(y)) -> (Sterpus(z) | Impossible(z))) & ((Fae(x) & -Lorpus(x)) -> (Lorpus(x))))", "(all x.(Fae(x) -> Sterepus(x)) & (Fae(x) -> Imperator(x)) & (Fae(x) -> -Lorpus(x)))", "all x y z.(Fae(x) & Sterpus(x) & Is(y) & Ilirp(z) & -Lorpus(x))", "all x y z.(Fae(x) -> (Sterpus(x) | Impossible(x) | -Lorpus(y)))", "all x.(Fae(x) -> (Sterepus(x) & Is(x) & -Lorpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & all y.(Fae(y) -> Imperator(y)) & all z.(Fae(z) -> -Lorpus(z))))", "(All x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Imperator(x)) & (Fae(x) -> -Lorpus(x)))"]}
{"id": "prontoqa_train_732", "nl": "Every numpus is a jompus.", "fol": "all x. (numpus(x) -> jompus(x))", "prediction": ["all x.(Nompus(x) -> Jompus(x))", "all x.(Nompus(x) -> Jompus(x))", "all x y.((Numpus(x) & Jompus(y)) -> Has(x,y))", "(all x.(Nompus(x) -> Jompus(x))", "all x.(Numpus(x) -> Jompus(x))", "all x y.((Nompus(x) & Jompus(y)) -> Has(x,y))", "all x.(Numpus(x) -> Jompus(x))", "all x.(Nompus(x) -> Jompus(x))", "exists x.(Nomus(x) & Jompus(x))", "all x.(Numpus(x) -> Jompus(x))", "all x.(Numpus(x) -> Jompus(x))", "exists x.(Nompus(x) & JOMPUS(x))", "all x.(Nompus(x) -> Jompus(x))", "all x.(Numpus(x) -> Jompus(x))", "all x.(Numpus(x) -> Jompus(x))", "exists x.(Numpus(x) & Jompus(x))"]}
{"id": "prontoqa_train_733", "nl": "Sally is a zumpus, Sally is not a jompus, and Sally is a yumpus.", "fol": "(zumpus(Sally) & -jompus(Sally) & yumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Zumpus(x)) & (Sally(x) -> -Jompus(x)) & (Sally(x) -> Yumpus(x)))", "all x y z.((Sally(x) & Zumpus(x) & Sally(y) & Jompus(z)) -> (-Jompus(y) & Yumpus(z)))", "(all x y z.((Sally(x) & Zumpus(x)) -> (Sally(y) & -Jompus(y))) & ((Sally(z) & Yumpus(z)) -> (Yumpus(z))))", "all x y z.((Sally(x) & Zumpus(x) & -Jompus(y) & Yumpus(z)) -> (Sally(x) & Yumpus(z)))", "all x.(Sally(x) -> (Tompus(x) | -Jompus(x) | Yumpus(x)))", "(all x.(Sally(x) -> Zumpus(x)) & (Sally(x) -> -Jompus(x)) & (Sally(x) -> Yumpus(x)))", "(all x.(Sally(x) -> Zumpus(x)) & (-Jompus(x) & (Yumpus(x) | Sally(x))))", "exists x.(Sally(x) & Zumpus(x) & -Jompus(x) & Yumpus(x))", "all x y z.((Sally(x) & Zumpus(x) & Sally(y) & -Jompus(y)) -> (Yumpus(z)))", "(all x y z.((Sally(x) & Zumpus(y) & -Jompus(z)) -> Toss(x,y)) & ((Sally(x) & -Jompus(x)) -> Yumpus(x)))", "(all x y z.((Sally(x) & Zumpus(x)) -> (Sally(y) & -Jompus(y))) & ((Sally(z) & Yumpus(z)) -> (Yumpus(z))))", "(all x.(Sally(x) -> Zumpus(x)) & all y.(Sally(y) -> -Jompus(y))) & all z.(Sally(z) -> Yumpus(z)))", "all x.(Sally(x) -> (Tompus(x) | -Jompus(x) | Yumpus(x)))", "all x y z.((Sally(x) & Zumpus(y) & Jompus(z)) -> (-Jompus(x) & Yumpus(x)))", "(all x.(Sally(x) -> Zumpus(x)) & (Sally(x) -> -Jompus(x)) & (Sally(x) -> Yumpus(x)))", "(all x.(Sally(x) -> Zumpus(x)) & (-Jompus(x) & (Yumpus(x) | Sally(x))))"]}
{"id": "prontoqa_train_734", "nl": "Stella is a tumpus, Stella is not a zumpus, and Stella is an impus.", "fol": "(tumpus(Stella) & -zumpus(Stella) & impus(Stella))", "prediction": ["(all x.(Tumpus(x) -> Stella(x)) & (-Tompus(x) -> Stella(x)) & (Impossible(x) -> Stella(x)))", "(all x.(Tumpus(x) -> Stella)) & (-Tompus(x) -> Stella)) & (Impossible(x) -> Stella)))", "all x y z.((Stella(x) & Tompus(y) & Zumpus(z)) -> (Tumpus(x) & -Tompus(y) & Imperator(z)))", "(all x.(Stella(x) -> Tumpus(x)) & (Stella(x) -> -Tompus(x)) & (Stella(x) -> Imperator(x)))", "all x y z.((Stella(x) & Tompus(y) & Zumpus(z)) -> (Tumpus(x) & -Tompus(x) & Imperator(x)))", "(all x y z.((Stella(x) & Tumpus(y)) -> Tumpus(x)) & ((Stella(z) & -Zumpus(z))) -> Imperator(z)))", "(all x y z.((Tumpus(x) & Stella(y) & Zumpus(z)) -> Tumpus(x)) & ((Tumpus(y) & -Tompus(y)) -> Imperator(y)))", "all x y z.((Tumpus(x) & Stella(y) & Impossible(z)) -> (Tumpus(y) & -Zumpus(y) & Impossible(z)))", "all x.(Stella(x) -> (Tumpus(x) & -Zumpus(x) & Imperator(x)))", "(all x.(Tumpus(x) -> Stella(x)) & (-Tompus(x) -> Stella(x)) & (-Tompus(x) -> Stella(x)))", "all x.(Tumpus(x) & -Tompus(x) & Imperator(x))", "exists x.(Tumpus(x) & Stella(x) & -Zumpus(x) & Imperator(x))", "(all x y.(Tumpus(x) -> Stella(x)) & (Zumpus(y) -> Stella(y))) & (Impossible(y) -> Stella(y)))", "(all x.(Tumpus(x) & -Tompus(x)) & all y.(Impossible(y) -> Stella)))", "all x y z.(Tumpus(x) & Zumpus(y) & Imperator(z)) -> (Tumpus(x) & -Tompus(y) & Imperator(z)))", "(all x.(Stella(x) -> Tumpus(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Issue(x)))"]}
{"id": "prontoqa_train_735", "nl": "Shumpuses are brimpuses.", "fol": "all x. (shumpus(x) -> brimpus(x))", "prediction": ["all x.(Shampoo(x) -> Brimbus(x))", "all x.(Shumpuse(x) -> Brimpus(x))", "all x y.((Shupuse(x) & Brimpus(y)) -> (Brimpus(x) & Brimpus(y)))", "all x.(Shampoo(x) -> Brimpuse(x))", "(all x.(Shumpuse(x) -> Brimpuse(x)))", "(Brimpus(shupus) & Brimpus(shupus))", "all x.(Shumpsue(x) -> Brimbus(x))", "all x y.((Shampoo(x) & Brimbus(y)) -> (Shampoo(x) & Brimbus(x)))", "all x.(Shuppe(x) -> Brimpus(x))", "all x.(Shumpuse(x) -> Brimpuse(x))", "all x.(Shampoo(x) -> Brimpuse(x))", "all x.(Shumpuse(x) -> Brimbus(x))", "all x.(Shupuse(x) -> Brimbus(x))", "(Brumpus)", "all x.(Shampoos(x) -> Brimpuse(x))", "all x.(Shumpus(x) -> Brimpuse(x))"]}
{"id": "prontoqa_train_736", "nl": "Max is a gorpus, Max is not a brimpus, and Max is a tumpus.", "fol": "(gorpus(Max) & -brimpus(Max) & tumpus(Max))", "prediction": ["(all x.(Max(x) -> Gorpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Tumpus(x)))", "all x y z.((Max(x) & Gorpus(x) & Brimpus(y) & Tumpus(z)) -> (Gorpus(x) & -Brimpus(y) & Tumpus(z)))", "(all x.(Max(x) -> Gorpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Tumpus(x)))", "all x y z.((Max(x) & Gorpus(x) & -Brimpus(y) & Tumpus(z)) -> (Gorpus(x) & -Brimpus(y) & Tumpus(z)))", "(all x y z.((Max(x) & Gorpus(x)) -> Gorpus(x)) & ((Max(y) & -Brimpus(y)) -> Tumpus(z)))", "all x.(Max(x) -> (Gorpus(x) & -Brimpus(x) & Tumpus(x)))", "(all x.(Max(x) -> Gorpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Tumpus(x)))", "all x y z.((Max(x) & Gorpus(x) & Brimpus(y) & Tumpus(z)) -> (Gorpus(x) & -Brimpus(y) & Tumpus(z)))", "all x y z.((Max(x) & Gorpus(y) & Brimpus(z)) -> (Gorpus(x) & -Brimpus(x) & Tumpus(x)))", "(all x.(Max(x) -> Gorpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Tumpus(x)))", "(all x y z.((Max(x) & Gorpus(y)) -> Gorpus(x)) & ((Max(z) & -Brimpus(z)) -> Tumpus(z)))", "all x.(Max(x) -> (Gorpus(x) | -Brimpus(x) | Tumpus(x)))", "(all x y z.((Max(x) & Gorpus(x)) -> Gorpus(x)) & ((Max(y) & -Brimpus(y)) -> Tumpus(z)))", "all x y z.((Max(x) & Gorpus(x) & Max(y) & Brimpus(z)) -> (-Brimpus(y) & Tumpus(z)))", "(all x.(Max(x) -> Gorpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Tumpus(x)))", "(all x.(Max(x) -> Gorpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Tumpus(x)))"]}
{"id": "prontoqa_train_737", "nl": "Each zumpus is a shumpus.", "fol": "all x. (zumpus(x) -> shumpus(x))", "prediction": ["all x.(Tompus(x) -> Humpus(x))", "all x.(Zumpus(x) -> Humpus(x))", "all x y.((Tompus(x) & Shumpus(y)) -> HasShumpus(x,y))", "all x.(Tompus(x) -> Humpus(x))", "all x.(Zumpus(x) -> Shumpus(x))", "all x y.((Zumpus(x) & Humpus(y)) -> HasShumpus(x,y))", "(all x.(Zumpus(x) -> Humpus(x)))", "all x.(Tompus(x) -> Humpus(x))", "all x.(Zumpus(x) -> Shumpus(x))", "all x.(Tompus(x) -> Humpus(x))", "all x.(Zumpus(x) -> Shumpus(x))", "all x.(Zumpus(x) -> Shumpus(x))", "exists x.(Tommy(x) & Humptus(x))", "all x.(Tompus(x) -> Humpus(x))", "exists x.(Zumpus(x) & Humpus(x))", "exists x.(Zumpus(x) & Shumpus(x))"]}
{"id": "prontoqa_train_738", "nl": "Max is a brimpus, Max is a lorpus, and Max is not a shumpus.", "fol": "(brimpus(Max) & lorpus(Max) & -shumpus(Max))", "prediction": ["(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> Lorpus(x)) & (Max(x) -> -Shumpus(x)))", "all x y z.((Max(x) & Brimpus(y) & Lorpus(z)) -> (Brimpus(x) & -Shumpus(x)))", "all x y z.((Max(x) & Brimpus(x) & Lorpus(y) & -Shumpus(z)) -> (Brimpus(x) & Lorpus(y) & -Shumpus(z)))", "(all x.(Max(x) -> Brimpus(x)) & all y.(Max(y) -> Lorpus(y)) & all z.(Max(z) -> -Shumpus(z))))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> Lorpus(x)) & -Shumpus(x)))", "all x.(Max(x) -> (Brimpus(x) & Lorpus(x) & -Shumpus(x)))", "(all x y z.((Max(x) & Brimpus(y)) -> (Brimpus(z) | Lorpus(z))) & ((Max(x) & Humpus(z)) -> -Shumpus(x)))", "(all x y z.((Max(x) & Brimpus(x)) -> (Brimpus(x) & Lorpus(y))) & ((Max(z) & -Shumpus(z)) -> (Lorpus(z))))", "all x y z.((Max(x) & Brimpus(y) & Lorpus(z)) -> (Brimpus(x) | Lorpus(x) & -Shumpus(x)))", "all x.(Max(x) -> (Brimpus(x) & Lorpus(x) & -Shumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> Lorpus(x)) & (Max(x) -> -Shumpus(x)))", "all x y z.((Max(x) & Brimpus(x) & Lorpus(y) & -Shumpus(z)) -> (Brimpus(x) | Lorpus(y) & -Shumpus(z)))", "(all x y z.((Max(x) & Brimpus(y) & Lorpus(z)) -> (Brimpus(x) | Lorpus(z)) | -Shumpus(z)))", "(all x.(Max(x) -> Brimpus(x)) & all y.(Max(y) -> Lorpus(y)) & all z.(Max(z) -> -Shumpus(z))))", "all x y z.((Max(x) & Brimpus(y) & Lorpus(z)) -> (Brimpus(x) & Lorpus(x) & -Shumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> Lorpus(x)) & -Max(x)))"]}
{"id": "prontoqa_train_739", "nl": "Sam is a dumpus, Sam is not a grimpus, and Sam is a shumpus.", "fol": "(dumpus(Sam) & -grimpus(Sam) & shumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Dumpus(x)) & (Sam(x) -> -Grimpus(x)) & (Sam(x) -> Humpus(x)))", "all x y z.((Sam(x) & Dumpus(y) & Grimpus(z)) -> (Dumpus(x) & -Grimpus(y) & Humpus(z)))", "(all x y z.((Sam(x) & Dumpus(y)) -> (Dumpus(z) & -Grimpus(z)) & ((Sam(x) & Humpus(x)) -> Humpus(x)))", "all x y z.((Sam(x) & Dumpus(x) & Sam(y) & Grimpus(z)) -> (-Sam(y) & Humpus(z)))", "(all x.(Sam(x) -> Dumpus(x)) & (Sam(x) -> -Grimpus(x)) & (Sam(x) -> Humpus(x)))", "(all x y z.((Sam(x) & Dumpus(x)) -> Dumpus(x)) & ((Sam(y) & -Smoochus(y)) -> Humpus(z)))", "all x.(Sam(x) -> (Dumpus(x) & -Grimpus(x) & Humpus(x)))", "all x y z.((Sam(x) & Dumpus(y) & Grimpus(z)) -> (Dumps(x) & -Grimpus(y) & Humpus(z)))", "(all x.(Sam(x) -> Dumpus(x)) & all y.(Sam(y) -> -Grimpus(y))) & all z.(Sam(z) -> Humpus(z)))", "(all x y z.((Sam(x) & Dumpus(y)) -> (Dumps(z) & -Grimpus(z)) & (Sam(x) -> Humpus(x)))", "(all x.(Sam(x) -> Dumpus(x)) & (Sam(x) -> -Grimpus(x)) & (Sam(x) -> Humpus(x)))", "all x.(Sam(x) -> (Dumps(x) & -Grimpus(x) & Shumpus(x)))", "exists x.(Sam(x) & Dumpus(x) & -Smoothpus(x) & Humpus(x))", "all x y z.((Sam(x) & Dumpus(x) & Sam(y) & Grimpus(z)) -> (-Sam(y) & Humpus(z)))", "(all x.(Sam(x) -> Dumpus(x)) & (Sam(x) -> -Grimpus(x)) & (Sam(x) -> Humpus(x)))", "(all x.(Sam(x) -> Dumpus(x)) & (Sam(x) -> -Smoothpus(x)) & (Sam(x) -> Humpus(x)))"]}
{"id": "prontoqa_train_740", "nl": "Polly is a zumpus and Polly is a brimpus and Polly is not a shumpus.", "fol": "(zumpus(Polly) & brimpus(Polly) & -shumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Zumpus(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> -Shumpus(x)))", "all x y z.((Polly(x) & Zumpus(x) & Polly(y) & Brimpus(y)) -> (-Shumpus(z)))", "(all x.(Polly(x) -> Zumpus(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> -Shumpus(z))))", "(all x y z.((Polly(x) & Zumpus(x)) -> Polly(y)) & ((Polly(z) & Brimpus(z)) -> Polly(y)) & ((Polly(z) & -Shumpus(z)) -> Polly(z))))", "(all x y.(Polly(x) -> Zumpus(x)) & (Polly(y) -> Brimpus(y)) & (Polly(y) -> -Shumpus(y)))", "all x y z.((Polly(x) & Zumpus(x) & Polly(y) & Brimpus(y)) -> (-Shumpus(z)))", "exists x.(Polly(x) & Zumpus(x) & Brimpus(x) & -Shumpus(x))", "all x y.((Polly(x) & Zumpus(x) & Polly(y)) -> (Brimpus(y) & -Shumpus(y)))", "all x y z.((Polly(x) & Zumpus(x) & Polly(y) & Brimpus(y)) -> (-Shumpus(z) & Polly(z)))", "(all x.(Polly(x) -> Zumpus(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> -Shumpus(x)))", "(all x y.(Tompus(x) & Polly(y)) -> Tompus(y)) & (Brimpus(y) -> Brimpus(y)) & (Shumpus(y) -> -Tompus(y)))", "all x y z.((Polly(x) & Zumpus(x) & Polly(y) & Brimpus(y)) -> (Shumpus(z) & -Shumpus(z)))", "all x.(Polly(x) -> (Tompus(x) & Brimpus(x) & -Shumpus(x)))", "(all x.(Polly(x) -> Zumpus(x)) & (Polly(x) -> Brimpus(x)) & -Shumpus(x)))", "(all x.(Polly(x) -> Zumpus(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> -Shumpus(z))))", "all x y.((Polly(x) & Zumpus(x) & Polly(y)) -> (Brimpus(y) & -Shumpus(y)))"]}
{"id": "prontoqa_train_741", "nl": "Fae is an impus, Fae is a grimpus, and Fae is not a zumpus.", "fol": "(impus(Fae) & grimpus(Fae) & -zumpus(Fae))", "prediction": ["(all x.(Fae(x) -> IsImpossible(x)) & (Fae(x) -> Grimpus(x)) & -Zumpus(x)))", "all x y z.((Fae(x) & Fae(y) & Grimpus(z)) -> (Impossible(x) & Grimpus(y) & -Zumpus(z)))", "(all x.(Fae(x) -> Impossible(x)) & (Fae(x) -> Grimpus(x)) & -Zumpus(x)))", "(all x y z.((Fae(x) & Impossible(x)) -> Grimpus(y)) & ((Fae(z) & Zumpus(z)) -> -Tompus(z)))", "(all x.(Fae(x) -> Is(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> -Zumpus(x)))", "all x.(Fae(x) -> (Impossible(x) | Grimpus(x) | -Zumpus(x)))", "(all x y z.((Fae(x) & IsImpossible(x)) -> Grimpus(x)) & ((Fae(y) & -Zumpus(z)) -> -Impossible(y)))", "all x y z.((Fae(x) & Fae(y) & Grimpus(z)) -> (Impossible(x) | Grimpus(y) | -Zumpus(z)))", "exists x.(Fae(x) & IsImpossible(x) & exists y.(Fae(y) & Grimpus(y)) & exists z.(Fae(z) & -Zumpus(z))))", "(all x.(Fae(x) -> Impossible(x)) & all y.(Fae(y) -> Grimpus(y)) & all z.(Fae(z) -> -Zumpus(z))))", "all x y z.(Fae(x) & (Issue(x) | Grimpus(x) | -Zumpus(y)))", "(all x.(Fae(x) -> IsImpossible(x)) & all y.(Fae(y) -> Grimpus(y)) & all z.(Fae(z) -> -Zumpus(z))))", "all x y z.(Fae(x) -> (Impossible(x) & Grimpus(y) & -Zumpus(z)))", "all x y z.((Fae(x) & Fae(y) & Grimpus(z)) -> (Is(x,z) & -Tompus(y)))", "(all x y z.(Fae(x) -> IsImpossible(x)) & (Fae(y) -> Grimpus(y)) & (Fae(z) -> -Zumpus(z)))", "all x y z.(Fae(x) & Imposer(x) & Fae(y) & Grimpus(y) & -Zumpus(z))"]}
{"id": "prontoqa_train_742", "nl": "Wren is a yumpus and Wren is a brimpus and Wren is not a vumpus.", "fol": "(yumpus(Wren) & brimpus(Wren) & -vumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> Brimpus(x)) & (Wren(x) -> -Vumpus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Brimpus(z)) -> (Yumpus(x) & Brimpus(x) & -Vumpus(x)))", "(all x y.(Wren(x) -> Yumpus(x)) & (Wren(y) -> Brimpus(y)) & (Wren(y) -> -Vumpus(y)))", "(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> Brimpus(y)) & all z.(Wren(z) -> -Vumpus(z))))", "(all x y z.((Wren(x) & Yumpus(y)) -> (Yumpus(x) & Brimpus(y))) & ((Wren(z) & -Vumpus(z))) -> (Brimpus(z) & -Yumpus(z))))", "(yumpus(w) & yumpus(w)) & brimpus(w) & -vumpus(w))", "all x y z.((Wren(x) & Yumpus(x) & Brimpus(y) & -Vumpus(z)) -> (Yumpus(x) & Brimpus(y) & -Vumpus(z)))", "all x y.((Wren(x) & Yumpus(x) & Brimpus(y)) -> (Yumpus(x) & -Vumpus(y)))", "all x.(Wren(x) -> (Yumpus(x) & Brimpus(x) & -Vumpus(x)))", "(all x.(Wren(x) -> Yumpus(x)) & ((Wren(x) -> Brimpus(x))) & ((Wren(x) -> -Vumpus(x))))", "all x y z.((Wren(x) & Yumpus(y) & Brimpus(z)) -> (Yumpus(x) & Brimpus(x) & -Vumpus(x)))", "(all x y.(Yumpus(x) -> Wren(y)) & (Brimpus(y) -> Wren(y)) & (Vumpus(y) -> Wren(y)))", "all x y z.((Wren(x) & Yumpus(y) & Wren(z)) -> (Yumpus(x) & Brimpus(z) & -Vumpus(z)))", "(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> Brimpus(y)) & all z.(Wren(z) -> -Vumpus(z))))", "all x y.((Wren(x) & Yumpus(x) & Brimpus(y)) -> (Yumpus(x) & -Vumpus(y)))", "all x.(Wren(x) -> (Yumpus(x) & Brimpus(x) & -Vumpus(x)))"]}
{"id": "prontoqa_train_743", "nl": "Fae is a numpus and Fae is a rompus and Fae is not a zumpus.", "fol": "(numpus(Fae) & rompus(Fae) & -zumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> Rompus(x)) & -Fae(x)))", "all x y z.((Fae(x) & Numpus(x) & Rompus(y) & -Zumpus(z)) -> (Numpus(x) & Rompus(y) & -Tompus(z)))", "(all x.(Fae(x) -> Numpus(x)) & all y.(Fae(y) -> Rompus(y)) & all z.(Fae(z) -> -Zumpus(z))))", "(all x y.(Fae(x) -> Numpus(x)) & (Fae(y) -> Rompus(y)) & (Fae(y) -> -Zumpus(y)))", "(numpus(Fae) & Rompus(Fae) & -Zumpus(Fae))", "(all x y z.((Fae(x) & Numpus(x)) -> Numpus(x)) & ((Fae(y) & Rompus(y)) -> -Zumpus(z)))", "all x y.((Fae(x) & Fae(y)) -> (Numpus(x) & Rompus(y) & -Zumpus(y)))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> Rompus(x)) & (Fae(x) -> -Zumpus(x)))", "all x y z.((Fae(x) & Numpus(x) & Rompus(y) & -Zumpus(z)) -> (Numpus(x) & Rompus(y) & -Zumpus(z)))", "all x.(Fae(x) -> (Numpus(x) & Rompus(x) & -Zumpus(x)))", "all x.(Fae(x) -> (numpus(x) & Rompus(x) & -zuspus(x)))", "all x y.((Fae(x) & Numpus(x) & Rompus(y)) -> (Numpus(x) & -Zumpus(x)))", "exists x.(Fae(x) & Numpus(x) & Rompus(x) & -Zumpus(x))", "(all x.(Fae(x) -> Numpus(x)) & all y.(Fae(y) -> Rompus(y)) & all z.(Fae(z) -> -Zumpus(z))))", "all x y z.((Fae(x) & Numpus(x) & Rompus(y) & -Zumpus(z)) -> (Numpus(x) & Rompus(y) & -Tompus(z)))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> Rompus(x)) & (Fae(x) -> -Zumpus(x)))"]}
{"id": "prontoqa_train_744", "nl": "Each numpus is a shumpus.", "fol": "all x. (numpus(x) -> shumpus(x))", "prediction": ["all x.(Nompus(x) -> Humpus(x))", "all x.(Nompus(x) -> Humpus(x))", "all x y.((Numpus(x) & Humpus(y)) -> Shumpus(x))", "(all x.(Nompus(x) -> Humpus(x)))", "all x.(Numpus(x) -> Humpus(x))", "all x y.((Numpus(x) & Humpus(y)) -> Is(x,y))", "all x.(Numpus(x) -> Humpus(x))", "all x.(Nompus(x) -> Shumpus(x))", "exists x.(numpus(x) & Humpus(x))", "all x y.((Nompus(x) & Humpus(y)) -> HasShumpus(x,y))", "all x.(Numpus(x) -> Shumpus(x))", "all x.(Numpus(x) -> Humpus(x))", "exists x.(numpus(x) & Humpus(x))", "all x.(Numpus(x) -> Shumpus(x))", "all x.(Nompus(x) -> Humpus(x))", "exists x.(Numpus(x) & Humpus(x))"]}
{"id": "prontoqa_train_745", "nl": "Sally is not a shumpus and Sally is a brimpus and Sally is a jompus.", "fol": "(-shumpus(Sally) & brimpus(Sally) & jompus(Sally))", "prediction": ["(all x.(Sally(x) -> -Shumpus(x)) & (Brimpus(x) & Jompus(x)))", "all x y z.((Sally(x) & Humpus(y) & Brimpus(z)) -> (-Shumpus(x) & Brimpus(x) & Jompus(x)))", "(all x.(Sally(x) -> -Shumpus(x)) & all y.(Brimpus(y) & All z.(Jompus(z))) -> -Shumpus(x)))", "all x.(Sally(x) -> (-Shumpus(x) & Brimpus(x) & Jompus(x)))", "all x y.((Sally(x) & -Shumpus(x)) -> (Brimpus(x) & Jompus(y)))", "(-Shumpus(Sally) & Brimpus(Sally) & Jompus(Sally))", "(-Shumpus(s) & Brimpus(s) & Jompus(s))", "all x y z.((Sally(x) & Humpus(y) & Brimpus(z)) -> (-Shumpus(x) & -Brimpus(x) & -Jimpus(x)))", "(all x.(Sally(x) -> -Shumpus(x)) & all y.(Brimpus(y) -> Brimpus(y)) & all z.(Jompus(z) -> Jompus(z)))", "(all x y.(Sally(x) -> -Shumpus(x)) & (Brimpus(y) | Jompus(y)))", "all x.(Sally(x) -> (-Shumpus(x) & Brimpus(x) & Jompus(x)))", "(all x.(Sally(x) -> -Shumpus(x)) & (Brimpus(x) | Jompus(x))))", "all x y.((Sally(x) & Shumpus(y) & Brimpus(y)) -> (-Shumpus(x) & -Brimpus(x) & -Jimpus(y)))", "exists x.(Sally(x) & -Shumpus(x) & Brimpus(x) & Jompus(x))", "all x y z.((Sally(x) & Humpus(y) & Brimpus(z)) -> (-Shumpus(x) & Brimpus(x) & Jompus(x)))", "(all x.(Sally(x) -> -Shumpus(x)) & (Brimpus(x) | Jompus(x)))"]}
{"id": "prontoqa_train_746", "nl": "Each vumpus is an impus.", "fol": "all x. (vumpus(x) -> impus(x))", "prediction": ["all x.(Vumpus(x) -> IsImpossible(x))", "(all x.(Vumpus(x) -> IsImpossible(x))", "all x.(Vumpus(x) -> IsImpossible(x))", "all x.(Vumpus(x) -> IsImpossed(x))", "-exists x.(Vumpus(x) & IsImpossed(x))", "all x y.((Vumpus(x) & Is(y)) -> Is(x,y))", "all x.(Vumpus(x) -> IsImpossed(x))", "all x.(Vumpus(x) -> IsImpossible(x))", "all x y.((Vumpus(x) & Is(y,x)) -> Is(x,y))", "all x.(Vumpus(x) -> Isolated(x))", "exists x.(Vumpus(x) & Is(x))", "exists x.(Vumpus(x) & Imperative(x))", "all x.(Vumpus(x) -> Imperative(x))", "all x.(Vumpus(x) -> Impossible(x))", "exists x.(Vumpus(x) & Is(x,y))", "exists x.(Vumpus(x) & Is(x,y))"]}
{"id": "prontoqa_train_747", "nl": "Sally is a yumpus and Sally is a dumpus and Sally is not an impus.", "fol": "(yumpus(Sally) & dumpus(Sally) & -impus(Sally))", "prediction": ["(all x.(Sally(x) -> Yumpus(x)) & (Sally(x) -> Dumpus(x)) & (Sally(x) -> -Impossible(x))))", "all x y z.((Sally(x) & Yumpus(y) & Dumpus(z)) -> (Yumpus(x) & Dumpus(x) & -Impossible(x)))", "(all x.(Yumpus(x) -> Sally(x)) & all y.(Dumpus(y) -> Sally(y))) & all z.(Illegal(z) -> Sally(z)))", "all x y.((Sally(x) & Yumpus(x) & Dumpus(y)) -> (-Impossible(x)))", "all x.(Sally(x) -> (Yumpus(x) & Dumpus(x) & -Ilimination(x)))", "(yumpus(Sally) & dumpus(Sally) & -Ilimination(Sally))", "Sally is yumpus (yumpus) & Sally is dumpus (yumpus) & Sally is narcissist(narcissist(narcissist) & Sally is narcissist(narcissist))", "(yumpus(s) & dumpus(s) & -Ilimination(s))", "(all x.(Yumpus(x) -> Sally)) & (Dumpus(x) -> Sally)) & (Illegal(x) -> Sally))", "(all x y.(Yumpus(x) -> Sally(x)) & (Dumpus(y) -> Sally(y))) & (Illegal(y) -> Sally(y)))", "(all x.(Sally(x) -> Yumpus(x)) & (Sally(x) -> Dumpus(x)) & -Ilios(x)))", "(Yumpus(Sally) & Dumpus(Sally) & -Ilios(Sally))", "all x y z.((Sally(x) & Yumpus(y) & Dumpus(z)) -> (Yumpus(x) & Dumpus(z) & -Ilimination(x)))", "all x.(Sally(x) -> (Yumpus(x) & Dumpus(x) & -Impossible(x)))", "all x.(Yumpus(x) & Dumpus(x) & -Ilimination(x))", "exists x.(Yumpus(x) & Dumpus(x) & -Impossible(x))"]}
{"id": "prontoqa_train_748", "nl": "Sam is a sterpus and Sam is a gorpus and Sam is not an impus.", "fol": "(sterpus(Sam) & gorpus(Sam) & -impus(Sam))", "prediction": ["(all x.(Sam(x) -> Sterpus(x)) & (Sam(x) -> Gorpus(x)) & (Sam(x) -> -Impossible(x)))", "all x y z.((Sam(x) & Sterpus(x) & Gorpus(y) & -Impossible(z)) -> (Sterpus(x) & Gorpus(y)))", "all x y.((Sam(x) & Sterpus(x) & Gorpus(y)) -> (-Impossible(x)))", "(all x.(Sam(x) -> Sterpus(x)) & all y.(Sam(y) -> Gorpus(y))) & all z.(Sam(z) -> -Impossible(z))))", "all x.(Sam(x) -> (Sterpus(x) & Gorpus(x) & -Impossible(x)))", "(all x y.(Sam(x) -> Sterpus(x)) & (Sam(y) -> Gorpus(y)) & (Sam(y) -> -Impossible(y)))", "all x y z.((Sam(x) & Sterpus(y) & Gorpus(z)) -> (Sam(x) & -Impossible(x)))", "exists x.(Sam(x) & Sterpus(x) & Gorpus(x) & -Impossible(x))", "all x y z.((Sam(x) & Sterpus(x) & Gorpus(y) & -Impossible(z)) -> (Sterpus(x) & Gorpus(y) & -Impossible(z)))", "(all x.(Sam(x) -> Sterpus(x)) & all y.(Sam(y) -> Gorpus(y)) & all z.(Sam(z) -> -Impossible(z))))", "(all x.(Sam(x) -> Sterpus(x)) & (Sam(x) -> Gorpus(x)) & (Sam(x) -> -Impossible(x)))", "all x.(Sam(x) -> (Sterpus(x) & Gorpus(x) & -Impossible(x)))", "all x y.((Sam(x) & Sterpus(x) & Gorpus(y)) -> (-Impossible(x)))", "(all x y.(Sam(x) -> Sterpus(x)) & (Sam(y) -> Gorpus(y)) & (Sam(y) -> -Impossible(y)))", "(all x.(Sam(x) -> Sterepus(x)) & (Sam(x) -> Gorpus(x)) & (Sam(x) -> -Illegal(x)))", "(all x.(Sam(x) -> Sterpus(x)) & all y.(Sam(y) -> Gorpus(y)) & all z.(Sam(z) -> -Impossible(z))))"]}
{"id": "prontoqa_train_749", "nl": "Alex is not a tumpus and Alex is a sterpus and Alex is a rompus.", "fol": "(-tumpus(Alex) & sterpus(Alex) & rompus(Alex))", "prediction": ["(all x.(Alex(x) -> -Tumpus(x)) & all y.(Sterepus(y) & All z.(Rompus(z))) -> -Tumpus(x)))", "all x y z.((Alex(x) & Tumpus(y) & Sterpus(z)) -> (-Tumpus(x) & Sterpus(x) & Rompus(x)))", "(all x.(Alex(x) -> -Tumpus(x)) & all y.(Sterepus(y) -> Sterepus(y))) & all z.(Rompus(z) -> Rompus(z)))", "all x.(Alex(x) -> (-Tumpus(x) & Sterpus(x) & Rompus(x)))", "all x y.((Alex(x) & Tumpus(y) & Sterpus(y)) -> (-Tumpus(x) & Sterpus(y) & Rompus(y)))", "(all x y.((Alex(x) & -Tumpus(x)) -> Sterepus(x)) & ((Alex(y) & -Tumpus(y)) -> Rompus(y)))", "(all x.(Alex(x) -> -Tumpus(x)) & (Alex(x) -> Sterpus(x)) & (Alex(x) -> Rompus(x)))", "(all x y z.((Alex(x) & Tumpus(y) & Sterpus(z)) -> -Tumpus(x)) & ((Alex(x) & Sterpus(x)) -> Rompus(x)))", "all x y z.((Alex(x) & Tumpus(y) & Sterpus(z)) -> (-Tumpus(x) & Sterpus(y) & Rompus(z)))", "all x y z.((Alex(x) & Tompus(y) & Sterpus(z)) -> (-Tumpus(x) & Sterpus(x) & Rompus(x)))", "all x.(Alex(x) -> (-Tumpus(x) & Sterepus(x) & Rompus(x)))", "all x y.((Alex(x) & Tompus(y)) -> (-Tumpus(x) & Sterpus(y) & Rompus(x)))", "(all x.(Alex(x) -> -Tumpus(x)) & all y.(Sterepus(y) & -Rompus(y)))", "exists x.(Alex(x) & -Tumpus(x) & Sterpus(x) & Rompus(x))", "(all x.(Alex(x) -> -Tumpus(x)) & (Alex(x) -> Sterpus(x)) & (Alex(x) -> Rompus(x)))", "(all x.(Alex(x) -> -Tumpus(x)) & all y.(Alex(y) -> Sterpus(y))) & all z.(Alex(z) -> Rompus(z)))"]}
{"id": "prontoqa_train_750", "nl": "Each dumpus is a sterpus.", "fol": "all x. (dumpus(x) -> sterpus(x))", "prediction": ["all x.(Dumpus(x) -> Sterpus(x))", "all x.(Dumpus(x) -> Sterpus(x))", "(All x.(Dumpus(x) -> Sterpus(x))", "all x y.((Dumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Dumps(x) -> Sterpus(x))", "all x.(Dumpus(x) -> Sterpus(x))", "(all x.(Dumpus(x) -> Sterpus(x))", "all x y.((Dumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Dumpus(x) -> Sterpus(x))", "all x.(Dumps(x) -> Sterpus(x))", "all x.(Dumpus(x) -> Sterus(x))", "exists x.(Dumpus(x) & Sterus(x))", "all x.(Dumpus(x) -> Sterpus(x))", "exists x.(Dumps(x) & Sterpus(x))", "exists x.(Dupus(x) & Sterus(x))", "all x.(Dumpus(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_751", "nl": "Stella is not a sterpus and Stella is a brimpus and Stella is a zumpus.", "fol": "(-sterpus(Stella) & brimpus(Stella) & zumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Sterpus(x)) & (Stella(x) -> Brimpus(x)) & (Stella(x) -> Zumpus(x)))", "all x y z.((Stella(x) & Steros(y) & Brimpus(z)) -> (-Sterpus(x) & Brimpus(y) & Zumpus(z)))", "all x.(Stella(x) -> (-Sterpus(x) & Brimpus(x) & Zumpus(x)))", "(all x.(Stella(x) -> -Sterpus(x)) & all y.(Brimpus(y) -> Zumpus(y)))", "(all x y.(Stella(x) -> -Sterpus(x)) & (Stella(y) -> Brimpus(y)) & (Stella(y) -> Zumpus(y)))", "all x y z.((Stella(x) & Sterpus(y) & Brimpus(z)) -> (-Sterpus(x) & Brimpus(x) & Zumpus(x)))", "(all x y z.((Stella(x) & Sterpus(y)) -> -Sterpus(x)) & ((Stella(z) & Brimpus(z)) -> Zumpus(z)))", "all x y.((Stella(x) & -Sterpus(x)) -> (Brimpus(x) & Zumpus(y)))", "(-Sterpus(Stella) & Brimpus(Stella) & Zumpus(Stella))", "exists x.(Stella(x) & -Sterpus(x) & exists y.(Brimpus(y) & exists z.(Zumpus(z) & -Sterpus(y) & Brimpus(z))))", "(all x.(Stella(x) -> -Sterpus(x)) & (Stella(x) -> Brimpus(x)) & (Stella(x) -> Zumpus(x)))", "(all x.(Stella(x) -> -Sterepus(x)) & all y.(Brimpus(y) & All z.(Zumpus(z))) -> -Sterpus(x)))", "all x.(Stella(x) -> (-Sterpus(x) & Brimpus(x) & Zumpus(x)))", "all x y.((Stella(x) & Sterus(y)) -> (-Sterpus(x) & Brimpus(y) & Zumpus(x)))", "all x y z.((Stella(x) & Sterus(y) & Brimpus(z)) -> (-Sterpus(x) & Brimpus(y) & Zumpus(z)))", "(all x.(Stella(x) -> -Sterpus(x)) & (Brimpus(x) | Zumpus(x))))"]}
{"id": "prontoqa_train_752", "nl": "Numpuses are tumpuses.", "fol": "all x. (numpus(x) -> tumpus(x))", "prediction": ["all x.(Numpus(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumpus(x))", "all x y.((Numpus(x) & Tumpus(y)) -> Tumpus(x))", "(Tumpuse(Numpus) & Tumpus(Numpus))", "all x.(Numpus(x) -> Tumulus(x))", "all x y.((Numpus(x) & Tumpus(y)) -> Tumpus(x))", "(Tumpuse(nupuse) & -Tumpus(nupuse))", "(Tumpuse(Numpus) & Tumpus(Numpus))", "all x.(Numpus(x) -> Tumpus(x))", "all x.(Numpuse(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumulus(x))", "all x.(Numpus(x) -> Tumpus(x))", "all x.(Numpuse(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_753", "nl": "Fae is an impus and Fae is not a tumpus and Fae is a dumpus.", "fol": "(impus(Fae) & -tumpus(Fae) & dumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Issue(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)))", "all x y z.((Fae(x) & Fae(y) & Dumpus(z)) -> (Impossible(x) & -Tumpus(y) & Dumpus(z)))", "all x y.((Fae(x) & Fae(y)) -> (Impossible(x) & -Tumpus(y) & Dumpus(y)))", "(all x y.(Fae(x) -> Issue(x)) & (Fae(y) -> -Tumpus(y)) & (Fae(y) -> Dumpus(y)))", "(all x.(Fae(x) -> Impossible(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)))", "all x.(Fae(x) -> (Impossible(x) & -Tumpus(x) & Dumpus(x)))", "(all x y.(Fae(x) -> Is(x,Impossible)) & (Fae(y) -> -Tumpus(y)) & (Fae(y) -> Dumpus(y)))", "(all x.(Fae(x) -> Is(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)))", "(all x.(Fae(x) -> Issue(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)))", "(all x y z.((Fae(x) & Is(x,y)) -> Is(x,z)) & ((Fae(x) & -Tumpus(z)) -> Dumpus(x)))", "all x y z.((Fae(x) & Is(x,y) & Fae(z)) -> (Impossible(x) & -Tumpus(z) & Dumpus(z)))", "exists x.(Fae(x) & IsImpossible(x) & -Tumpus(x) & Dumpus(x))", "all x.(Fae(x) -> (Impossible(x) & -Tumpus(x) & Dumpus(x)))", "all x y.((Fae(x) & Fae(y)) -> (Impossible(x) & -Tumpus(y) & Dumpus(y)))", "(all x.(Fae(x) -> Impossible(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)))", "all x y z.((Fae(x) & Fae(y) & Dumpus(z)) -> (Impossible(x) & -Tumpus(y) & Dumpus(z)))"]}
{"id": "prontoqa_train_754", "nl": "Alex is a jompus, Alex is a gorpus, and Alex is not a vumpus.", "fol": "(jompus(Alex) & gorpus(Alex) & -vumpus(Alex))", "prediction": ["(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Vumpus(z))))", "all x y z.((Alex(x) & Jompus(x) & Gorpus(y) & -Vumpus(z)) -> (Jompus(x) & Gorpus(y) & -Vumpus(z)))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Gorpus(x)) & -Alex(x)))", "all x.(Alex(x) -> (Jompus(x) | Gorpus(x) | -Vumpus(x)))", "all x y z.((Alex(x) & Jompus(y) & Gorpus(z)) -> (Jompus(x) & Gorpus(x) & -Vumpus(x)))", "(all x y z.((Alex(x) & Jompus(y)) -> (Jompus(z) | Gorpus(z))) & ((Alex(x) & -Vumpus(x)) -> (Vumpus(x))))", "all x y z.((Alex(x) & Jompus(x) & Gorpus(y) & -Vumpus(z)) -> (Jompus(x) | Gorpus(y) & -Vumpus(z)))", "all x.(Alex(x) -> (Jompus(x) | Gorpus(x) | -Vumpus(x)))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Vumpus(z))))", "(all x y z.(Alex(x) -> Jompus(x)) & (Alex(y) -> Gorpus(y)) & (Alex(z) -> -Vumpus(z))))", "all x y z.((Alex(x) & Jompus(y) & Gorpus(z) & -Vumpus(x)) -> (Jompus(x) | Gorpus(x) | Vumpus(x)))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Gorpus(x)) & (Alex(x) -> -Vumpus(x)))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Vumpus(z))))", "all x.(Alex(x) -> (Jompus(x) | Gorpus(x) | -Vumpus(x)))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Gorpus(x)) & (Alex(x) -> -Vumpus(x)))", "all x y z.((Alex(x) & Jompus(y) & Gorpus(z)) -> (Jompus(x) | Gorpus(z) | -Vumpus(z)))"]}
{"id": "prontoqa_train_755", "nl": "Alex is not a rompus.", "fol": "-rompus(Alex)", "prediction": ["all x.(Alex(x) -> -Rompus(x))", "Alex is not a rompus.", "all x.(Alex(x) -> -Rompus(x))", "(-Rompus(Alex))", "Alex is not a rompus.", "all x.(Alex(x) -> -Rompus(x))", "(-Rompus(Alex))", "Alex is not a rompus.", "Alex is not a Rompus.", "(-rompus(Alex))", "-Rompus(Alex)", "all x.(Alex(x) -> -Rompus(x))", "Alex is not a rompus.", "all x.(Alex(x) -> -Rompus(x))", "-Rompus(Alex)", "All x.(Alex(x) -> -Rompus(x))"]}
{"id": "prontoqa_train_756", "nl": "Wumpuses are lempuses.", "fol": "all x. (wumpus(x) -> lempus(x))", "prediction": ["all x.(Wumpus(x) -> Lempuse(x))", "all x.(Wumpuse(x) -> Lempuse(x))", "all x.(Wumpus(x) -> Lempuse(x))", "all x y.((Wumpuse(x) & Lempuse(y)) -> Lempuse(x))", "(all x.(Wumpuse(x) -> Lempuse(x))", "all x y.((Wumpus(x) & Lempuse(y)) -> Lempuse(x))", "(Lempuse(w) & -Lempuse(w))", "all x.(Wumpuse(x) -> Lempuse(x))", "all x.(Wumpus(x) -> Lempuse(x))", "(all x.(Wumpus(x) -> Lempuse(x)))", "all x.(Wumpuse(x) -> Lempuse(x))", "all x.(Wumpus(x) -> Lempuse(x))", "all x.(Wumpuse(x) -> Lempuse(x))", "all x.(Wumpus(x) -> Lempuse(x))", "all x.(Wumpus(x) -> Lempuse(x))", "All x.(Wumpuse(x) -> Lempuse(x))"]}
{"id": "prontoqa_train_757", "nl": "Alex is not a lempus, Alex is a sterpus, and Alex is a zumpus.", "fol": "(-lempus(Alex) & sterpus(Alex) & zumpus(Alex))", "prediction": ["(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Sterpus(y)) & all z.(Alex(z) -> Zumpus(z))))", "all x y z.((Alex(x) & Lempus(y) & Sterpus(z)) -> (-Lempus(x) & Sterpus(x) & Zumpus(x)))", "all x.(Alex(x) -> (-Lempus(x) & Sterpus(x) & Zumpus(x)))", "(all x.(Alex(x) -> -Lempus(x)) & (Alex(x) -> Sterpus(x)) & (Alex(x) -> Zumpus(x)))", "(all x y z.((Alex(x) & Lempus(y)) -> -Lempus(x)) & ((Alex(z) & Sterpus(z)) -> Zumpus(z)))", "all x y z.((Alex(x) & Lempus(y) & Sterpus(z)) -> (-Lempus(x) & Sterpus(x) & Zumpus(x)))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Sterpus(y)) & all z.(Alex(z) -> Zumpus(z))))", "all x.(Alex(x) -> (-Lempus(x) & Sterpus(x) & Zumpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Sterpus(z)) -> (-Lempus(x) | Sterpus(x) | Zumpus(x)))", "(all x.(Alex(x) -> -Lempus(x)) & (Alex(x) -> Sterpus(x)) & (Alex(x) -> Zumpus(x)))", "(all x y z.((Alex(x) & Lempus(y)) -> -Lempus(x)) & ((Alex(z) & Sterpus(z))) -> Zumpus(z)))", "all x.(Alex(x) -> (-Lempus(x) | (Sterepus(x) & Zumpus(x))))", "all x y z.((Alex(x) & Lempus(y) & Sterepus(z)) -> (-Lempus(x) | (Sterepus(x) & Zumpus(x))))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Sterpus(y)) & all z.(Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Lempus(y) & Sterpus(z)) -> (-Lempus(x) | Sterpus(x) | Zumpus(x)))", "(all x.(Alex(x) -> -Lempus(x)) & (Alex(x) -> Sterpus(x)) & (Alex(x) -> Zumpus(x)))"]}
{"id": "prontoqa_train_758", "nl": "Alex is not a wumpus.", "fol": "-wumpus(Alex)", "prediction": ["all x.(Alex(x) -> -Wumpus(x))", "Alex is not a wumpus.", "(-Wumpus(Alex))", "all x.(Alex(x) -> -Wumpus(x))", "Alex is not a wumpus.", "-Wumpus(Alex)", "(Wumpus(Alex) & -Wumpus(Alex))", "all x.(Alex(x) -> -Wumpus(x))", "Alex is not a wumpus.", "Alex is notWumpus.", "(-Wumpus(Alex))", "all x.(Alex(x) -> -Wumpus(x))", "-Wumpus(Alex)", "Alex is not a wumpus.", "all x.(Alex(x) -> -Wumpus(x))", "All x.(Alex(x) -> -Wumpus(x))"]}
{"id": "prontoqa_train_759", "nl": "Zumpuses are grimpuses.", "fol": "all x. (zumpus(x) -> grimpus(x))", "prediction": ["all x.(Zumpus(x) -> Grimpuse(x))", "all x.(Zumpus(x) -> Grimpuse(x))", "all x y.((Zumpuse(x) & Grimpuse(y)) -> (Fragpuse(x) & Grimpuse(y)))", "(Gumpuse(z) & Grimpuse(z))", "all x.(Zumpuse(x) -> Grimpuse(x))", "all x y.((Zumpus(x) & Grimpus(y)) -> (Fragpus(x) & Grimpus(y)))", "all x.(Zumpus(x) -> Grimpuse(x))", "(SmokeyPup(z) & Grimpuse(z))", "(Fragpuse(z) & Grimpuse(z))", "all x.(Smoothpuse(x) -> (Zumpuse(x) & Grimpuse(x)))", "all x.(Zumpus(x) -> Grimpus(x))", "all x.(Zombia(x) -> Grimpuse(x))", "all x.(Zumpuse(x) -> Grimpuse(x))", "all x.(Zumpus(x) -> Grimpuse(x))", "all x.(Zombies(x) -> Grapples(x))", "All x.(Zimpus(x) -> Grimpuse(x))"]}
{"id": "prontoqa_train_760", "nl": "Polly is a yumpus and Polly is not a grimpus and Polly is a lempus.", "fol": "(yumpus(Polly) & -grimpus(Polly) & lempus(Polly))", "prediction": ["(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lempus(x)))", "all x y z.((Polly(x) & Yumpus(y) & Polly(z)) -> (-Grimpus(z) & Lempus(z)))", "(all x y.(Yumpus(x) -> Polly(x)) & (-Smokey(y) & Polly(z))) & (Lempus(z) -> Polly(z)))", "all x y.((Polly(x) & Polly(y)) -> (Yumpus(x) & -Grimpus(y) & Lempus(y)))", "(yumpus(x) | (-yumpus(y) & Polly(y))) | (-yumpus(y) & Polly(y))))", "(all x.(Polly(x) -> Yumpus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lempus(x)))", "all x.(Polly(x) -> (Yumpus(x) & -Grimpus(x) & Lempus(x)))", "all x y z.((Polly(x) & Yumpus(y) & Polly(z)) -> (-Grimpus(z) & Lempus(z)))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lempus(x)))", "all x y z.((Polly(x) & Yampus(x) & Polly(y) & Grimpus(z)) -> (Yumpus(x) & -Grimpus(y) & Lempus(z)))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Grimpus(x))) & (Polly(x) -> Lempus(x)))", "all x y z.((Polly(x) & Yumpus(y) & Polly(z)) -> (-Grimpus(z) & Lempus(z)))", "exists x.(Polly(x) & (Yumpus(x) | -Grimpus(x) | Lempus(x)))", "(all x y.(Yumpus(x) -> Polly(x)) & (-Smoky(y) & Polly(z))) & (Lempus(z) -> Polly(z)))", "all x y.((Polly(x) & Yampus(x)) -> (-Grimpus(x) & Lempus(y)))", "(all x.(Polly(x) -> Yumpus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lempus(x)))"]}
{"id": "prontoqa_train_761", "nl": "Every lorpus is a numpus.", "fol": "all x. (lorpus(x) -> numpus(x))", "prediction": ["all x.(Lorpus(x) -> Numpus(x))", "all x.(Lorpus(x) -> Numpus(x))", "all x y.((Lorpus(x) & Numpus(y)) -> Is(x,y))", "(all x.(Lorpus(x) -> Numpus(x)))", "all x.(Lorpus(x) -> Numpus(x))", "all x y.((Lorpus(x) & Numpus(y)) -> Has(x,y))", "all x.(Lorpus(x) -> Numpus(x))", "all x.(Lorph(x) -> Numpus(x))", "exists x.(lorpus(x) & Numpus(x))", "all x.(Lorpus(x) -> Numpus(x))", "all x.(Lorpus(x) -> Numpus(x))", "exists x.(lorpus(x) & Numpus(x))", "all x.(Lorpus(x) -> Number(x))", "all x.(Lorpus(x) -> Numpus(x))", "all x.(Larp(x) -> Number(x))", "exists x.(Lorpus(x) & Number(x))"]}
{"id": "prontoqa_train_762", "nl": "Sam is a jompus, Sam is a rompus, and Sam is not a numpus.", "fol": "(jompus(Sam) & rompus(Sam) & -numpus(Sam))", "prediction": ["(all x.(Sam(x) -> Jompus(x)) & (Sam(x) -> Rompus(x)) & (Sam(x) -> -Numpus(x)))", "all x y z.((Sam(x) & Jompus(y) & Rompus(z)) -> (Jompus(x) & Rompus(y) & -Numpus(z)))", "all x y z.((Sam(x) & Jompus(x) & Rompus(y) & Numpus(z)) -> (Jompus(x) & Rompus(y) & -Numpus(z)))", "(all x.(Sam(x) -> Jompus(x)) & all y.(Sam(y) -> Rompus(y)) & all z.(Sam(z) -> -Numpus(z))))", "(all x y z.((Sam(x) & Jompus(y)) -> (Jompus(z) | Rompus(z))) & ((Sam(x) & Numpus(x)) -> -Numpus(x)))", "(all x.(Jompus(x) -> SamPose(x)) & (Rompus(x) -> SamPose(x)) & -Numpus(x)))", "(all x.(Sam(x) -> Jompus(x)) & (Sam(x) -> Rompus(x)) & -Sam(x)))", "all x.(Sam(x) -> (Jompus(x) | Rompus(x) | -Numpus(x)))", "all x y z.((Sam(x) & Jompus(y) & Rompus(z)) -> (Jompus(x) | Rompus(z) | -Numpus(z)))", "(all x y z.(Jompus(x) -> SamMammal(x)) & (Rompus(y) -> SamMammal(y)) & (Numpus(z) -> SamMammal(z)))", "(all x.(Jompus(x) -> SamMole(x)) & (Rompus(x) -> SamMole(x)) & -Numpus(x)))", "(all x y z.(Jompus(x) -> Sam(x)) & (Rompus(y) -> Sam(z)) & (Numpus(z) -> Sam(z)))", "all x.(Sam(x) -> (Jompus(x) | Rompus(x) | -Numpus(x)))", "all x y z.((Sam(x) & Jompus(y) & Rompus(z)) -> (Jompus(x) & Rompus(z) & -Numpus(x)))", "(all x.(Sam(x) -> Jompus(x)) & (Sam(x) -> Rompus(x)) & (Sam(x) -> -Numpus(x)))", "all x y z.((Sam(x) & Jompus(y) & Rompus(z)) -> (Jompus(x) | Rompus(z) | -Numpus(x)))"]}
{"id": "prontoqa_train_763", "nl": "Rex is a vumpus, Rex is a grimpus, and Rex is not an impus.", "fol": "(vumpus(Rex) & grimpus(Rex) & -impus(Rex))", "prediction": ["(all x.(Rex(x) -> Vumpus(x)) & (Rex(x) -> Grimpus(x)) & (Rex(x) -> -Impossible(x)))", "all x y z.((Rex(x) & Vumpus(y) & Grimpus(z)) -> (Vumpus(x) & Grimpus(z) & -Impossible(x)))", "(all x.(Rex(x) -> Vumpus(x)) & all y.(Rex(y) -> Grimpus(y)) & all z.(Rex(z) -> -Impossible(z))))", "all x.(Rex(x) -> (Vimpus(x) & Grimpus(x) & -Impossible(x)))", "(all x y z.((Rex(x) & Vumpus(y) & Grimpus(z)) -> (Vumpus(x) & Grimpus(z)) & -Impossible(x)))", "all x y z.((Rex(x) & Vumpus(y) & Grimpus(z)) -> (Vumpus(x) & Gruppus(x) & -Impossible(x)))", "(Vumpus(rex) & Grimpus(rex) & -Impossible(rex))", "(all x.(Rex(x) -> Vumpus(x)) & (Rex(x) -> Grimpus(x)) & (Rex(x) -> -Impossible(x)))", "all x.(Rex(x) -> (Vumpus(x) & Grimpus(x) & -Impossible(x)))", "(all x y z.((Rex(x) & Vumpus(y) & Grimpus(z)) -> Vumpus(x)) & ((Rex(x) & Grimpus(x)) -> -Impossible(x)))", "(all x.(Rex(x) -> Vumpus(x)) & all y.(Rex(y) -> Grimpus(y)) & all z.(Rex(z) -> -Impossible(z))))", "all x y z.((Rex(x) & Vumpus(y) & Grimpus(z)) -> (Vumpus(x) | Grimpus(z) | -Impossible(x)))", "all x y z.((Rex(x) & Vumpus(x) & Grimpus(y) & Imperator(z)) -> (Vumpus(x) & Grimpus(y) & -Impossible(z)))", "(all x.(Rex(x) -> Vampus(x)) & (Rex(x) -> Grimpus(x)) & (Rex(x) -> -Impossible(x)))", "all x.(Rex(x) -> (Vimpus(x) | Grimpus(x) | Imperator(x)))", "(all x.(Rex(x) -> Vumpus(x)) & (Rex(x) -> Grimpus(x)) & (Rex(x) -> -Impossible(x)))"]}
{"id": "prontoqa_train_764", "nl": "Shumpuses are rompuses.", "fol": "all x. (shumpus(x) -> rompus(x))", "prediction": ["all x.(Shupuse(x) -> Rompus(x))", "all x.(Shampus(x) -> Rompus(x))", "(Rompus(shupuses) & -Rompus(shupuses))", "all x y.((Shupuse(x) & Rompus(y)) -> Rompus(x))", "(Rompus(s) & Rompus(s))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Shumpuse(x) -> Rompus(x))", "(Rompus(shm) & Rompus(shm))", "All x y.((Shupuse(x) & Rompus(y)) -> Rompus(x))", "all x.(Shampus(x) -> Rompus(x))", "all x.(Shumpsue(x) -> Rompus(x))", "all x.(Shupuse(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Shutus(x) -> Rompuse(x))", "all x.(Shupuse(x) -> Rompuse(x))", "all x.(Shumpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_765", "nl": "Wren is a zumpus and Wren is a dumpus and Wren is not a rompus.", "fol": "(zumpus(Wren) & dumpus(Wren) & -rompus(Wren))", "prediction": ["(all x.(Wren(x) -> Zumpus(x)) & (Wren(x) -> Dumpus(x)) & (Wren(x) -> -Rompus(x)))", "all x y z.((Wren(x) & Zumpus(x) & Wren(y) & Dumpus(y)) -> (Tompus(x) & -Rompus(z)))", "(all x.(Wren(x) -> Zumpus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> -Rompus(z))))", "(all x y z.((Wren(x) & Zumpus(x)) -> Dumpus(x)) & ((Wren(y) & -Rompus(z))) -> Dumpus(y)))", "all x y.((Wren(x) & Zumpus(x) & Dumpus(y)) -> (-Rompus(x)))", "all x y z.((Wren(x) & Tompus(x) & Dumpus(y) & -Rompus(z)) -> (Tompus(x) & Dumpus(y) & -Tompus(z)))", "all x y z.((Wren(x) & Zumpus(x) & Wren(y) & Dumpus(y)) -> (Tompus(x) & -Rompus(z)))", "(all x y.(Wren(x) -> Zumpus(x)) & (Wren(y) -> Dumpus(y)) & (Wren(y) -> -Rompus(y)))", "(all x.(Wren(x) -> Zumpus(x)) & (Wren(x) -> Dumpus(x)) & (Wren(x) -> -Rompus(x)))", "all x y.((Wren(x) & Tompus(x) & Dumpus(y)) -> (-Rompus(x)))", "all x.(Wren(x) -> (Tompus(x) & Dumpus(x) & -Rompus(x)))", "(all x.(Wren(x) -> Toss(x)) & (Wren(x) -> Dumpus(x)) & (Wren(x) -> -Rompus(x)))", "all x y.((Wren(x) & Wren(y)) -> (Tompus(x) & Dumpus(y) & -Rompus(y)))", "(all x.(Wren(x) -> Zumpus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> -Rompus(z))))", "(all x y z.(Wren(x) -> Zumpus(x)) & (Wren(y) -> Dumpus(y)) & (Wren(z) -> -Rompus(z)))", "all x y z.((Wren(x) & Zumpus(x) & Wren(y) & Dumpus(y)) -> (-Rompus(z)))"]}
{"id": "prontoqa_train_766", "nl": "Every lorpus is a vumpus.", "fol": "all x. (lorpus(x) -> vumpus(x))", "prediction": ["all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x y.((Lorpus(x) & Vumpus(y)) -> Is(x,y))", "(all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x y.((Lorpus(x) & Vumpus(y)) -> Is(x,y))", "all x.(Lorph(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x y.((Lorpus(x) & Vumpus(y)) -> Has(x,y))", "all x.(Lorpus(x) -> Vampire(x))", "exists x.(lorpus(x) & Vumpus(x))", "exists x.(Lorpus(x) & -Vumpus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Larp(x) -> Vulp(x))", "exists x.(Lorpus(x) & Vampus(x))"]}
{"id": "prontoqa_train_767", "nl": "Sally is a brimpus, Sally is not a vumpus, and Sally is an impus.", "fol": "(brimpus(Sally) & -vumpus(Sally) & impus(Sally))", "prediction": ["(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Vumpus(x)) & (Sally(x) -> Imperator(x)))", "all x y z.((Sally(x) & Brimpus(x) & -Vumpus(y) & Imperator(z)) -> (Brimpus(x) & Imperator(z)))", "(all x y z.((Sally(x) & Brimpus(x)) -> Brimpus(x)) & ((Sally(y) & -Vumpus(y)) -> Impermissible(y)))", "all x.(Sally(x) -> (Brimpus(x) & -Vumpus(x) & IsImpossible(x)))", "(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Vumpus(x)) & (Sally(x) -> Impermissible(x)))", "(all x.(Sally(x) -> Brimpus(x)) & (-Vumpus(x) & -Impossible(x)))", "(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Vumpus(y)) & all z.(Sally(z) -> Imperator(z))))", "all x y z.((Sally(x) & Brimpus(x) & -Vumpus(y) & Imperator(z)) -> (Brimpus(x) & Imperator(z)))", "(all x.(Brimpus(x) -> Sally)) & (-Vumpus(x) -> Sally(x)) & (Impossible(x) -> Sally)))", "all x y z.((Sally(x) & Brimpus(x) & Sally(y) & Vumpus(z)) -> (Brimpus(x) & Impermissible(y)))", "(all x y.(Brimpus(x) -> Brimpus(x)) & (Vumpus(y) -> -Vumpus(y)) & (Impossible(y) -> Impossible(y)))", "all x.(Sally(x) -> (Brimpus(x) & -Vumpus(x) & Impermissible(x)))", "exists x.(Sally(x) & Brimpus(x) & -Vumpus(x) & Impermissible(x))", "(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Vumpus(x)) & (Sally(x) -> Imperator(x)))", "(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Vumpus(y)) & all z.(Sally(z) -> Impermissible(z))))", "all x.(Sally(x) -> (Brimpus(x) & -Vumpus(x) & IsIllegal(x)))"]}
{"id": "prontoqa_train_768", "nl": "Each gorpus is a brimpus.", "fol": "all x. (gorpus(x) -> brimpus(x))", "prediction": ["all x.(Gorpus(x) -> Brimpus(x))", "all x.(Gorpus(x) -> Brimpus(x))", "all x y.((Gorpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Gorpus(x) -> Brimpus(x))", "all x y.((Gorpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Gorpus(x) -> Brimpus(x))", "all x y.((Gorpus(x) & Brimpus(y)) -> Is(x,y))", "all x.(Gorpus(x) -> Brimpus(x))", "all x.(Gorpus(x) -> Brimpus(x))", "all x.(Gorpus(x) -> Brimpus(x))", "all x.(Gorpus(x) -> Brimpus(x))", "exists x.(Gorpus(x) & Brimpus(x))", "exists x.(Gorpus(x) & Brumpus(x))", "all x.(Gorpus(x) -> Brimpus(x))", "exists x.(Gorpus(x) & Brampus(x))", "exists x.(Gorpus(x) & Brimpus(x))"]}
{"id": "prontoqa_train_769", "nl": "Fae is a lorpus, Fae is an impus, and Fae is not a brimpus.", "fol": "(lorpus(Fae) & impus(Fae) & -brimpus(Fae))", "prediction": ["(all x.(Fae(x) -> Lorpus(x)) & all y.(Fae(y) -> Issue(y)) & all z.(Fae(z) -> -Brimpus(z))))", "all x y z.((Fae(x) & Lorpus(y) & Impossible(z)) -> (Lorpus(x) & Imperator(x) & -Brimpus(x)))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> Imperator(x)) & (Fae(x) -> -Brimpus(x)))", "(all x y z.((Fae(x) & Lorpus(y)) -> (Lorpus(x) & Issue(z)) & ((Fae(x) & Brimpus(z)) -> -Brimpus(x))))", "all x y z.((Fae(x) & Lorpus(y) & Is(z)) -> (Lorpus(x) & Is(x,z) & -Brimpus(x)))", "all x.(Fae(x) -> (Lorpus(x) | Impossible(x) | -Brimpus(x)))", "(all x y z.((Fae(x) & Lorpus(y)) -> (Lorpus(x) & Impossible(y))) & ((Fae(z) & -Brimpus(z)) -> (Brimpus(z))))", "all x y z.((Fae(x) & Lorpus(x) & Is(y) & Is(z)) -> (Lorpus(x) | Is(y) & -Brimpus(z)))", "(all x.(Fae(x) -> Lorpus(x)) & all y.(Fae(y) -> Issue(y)) & all z.(Fae(z) -> -Brimpus(z))))", "(all x y z.((Fae(x) & Lorpus(y) & Is(z)) -> (Lorpus(x) & Is(z) & -Brimpus(z))) & ((Fae(x) & Is(x)) -> Is(x,y)))", "all x y z.(Fae(x) & Lorpus(x) & Is(y) & Is(z) & -Brimpus(x))", "exists x.(Fae(x) & (Lorpus(x) | Imperator(x) | -Brimpus(x)))", "(all x.(Fae(x) -> Llorpus(x)) & (Fae(x) -> Imperator(x)) & (Fae(x) -> -Brimpus(x)))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> Issue(x)) & (Fae(x) -> -Brimpus(x)))", "all x y z.((Fae(x) & Loper(y) & Impossible(z)) -> (Lorpus(x) & IsBrimpus(x)))", "all x y z.(Fae(x) -> (Lorpus(x) & Impossible(y) & -Brimpus(z)))"]}
{"id": "prontoqa_train_770", "nl": "Wren is a yumpus, Wren is a zumpus, and Wren is not a tumpus.", "fol": "(yumpus(Wren) & zumpus(Wren) & -tumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> -Tumpus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Zumpus(z)) -> (Yumpus(x) & -Tumpus(x)))", "(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> -Tumpus(z))))", "(all x y z.((Wren(x) & Yumpus(y)) -> (Yumpus(z) | Zumpus(z))) & ((Wren(x) & -Tumpus(x)) -> (Yumpus(x) & Zumpus(z))))", "(yumpus(Wren) & Zumpus(Wren) & -Tumpus(Wren))", "all x y z.((Wren(x) & Yumpus(y) & Zumpus(z)) -> (Yumpus(x) | Zumpus(x) | -Tumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Zumpus(x) & -Tumpus(x)))", "(yumpus(w) | zumpus(w)) & -tumpus(w))", "(all x y z.((Wren(x) & Yumpus(y)) -> (Yumpus(x) & Zumpus(y))) & ((Wren(z) & -Tumpus(z)) -> (Yumpus(z) & Zumpus(z))))", "(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> -Tumpus(x)))", "(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> -Tumpus(z))))", "all x y z.((Wren(x) & Yampus(y) & Zumpus(z) & -Tumpus(z)) -> (Yumpus(x) & Zumpus(x) & -Tumpus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Zumpus(z)) -> (Yumpus(x) & -Tumpus(x)))", "all x y z.((Wren(x) & Yumpus(x) & Zumpus(y) & -Tumpus(z)) -> (Yumpus(x) | Zumpus(y) & -Tumpus(z)))", "(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> Zumpus(x)) & -Tumpus(x)))", "all x y z.((Wren(x) & Yampus(y) & Zumpus(z)) -> (Yumpus(x) | Zumpus(z) | -Tumpus(z)))"]}
{"id": "prontoqa_train_771", "nl": "Polly is a jompus and Polly is not a shumpus and Polly is an impus.", "fol": "(jompus(Polly) & -shumpus(Polly) & impus(Polly))", "prediction": ["(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Imperator(x)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Imperator(x)))", "all x y z.((Polly(x) & Jompus(x) & Polly(y) & Hush(z)) -> (-Shumpus(y) & Issue(z)))", "all x y.((Polly(x) & Jompus(x) & Polly(y)) -> (-Shumpus(y) & Imperator(y)))", "all x y z.((Polly(x) & Jompus(x) & Polly(y) & Hushpus(z)) -> (Jompus(x) & -Shumpus(y) & Imperator(z)))", "(all x y.((Polly(x) & Jompus(x)) -> Polly(y)) & ((Polly(x) & -Shumpus(y)) -> Imperator(x)))", "(all x y z.((Polly(x) & Jompus(x)) -> Polly(y)) & ((Polly(z) & -Shumpus(z))) -> Imperator(z)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Imperator(x)))", "(all x.(Polly(x) -> Jompus(x)) & all y.(Polly(y) -> -Shumpus(y))) & all z.(Polly(z) -> Imperator(z)))", "(all x y.(Jompus(x) -> Polly(x)) & (-Shumpus(y) -> Polly(y)))", "all x.(Polly(x) -> (Jompus(x) & -Shumpus(x) & Imperator(x)))", "all x y.((Polly(x) & Jompus(x) & Polly(y)) -> (-Shumpus(y) & Imperator(y)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Imperator(x)))", "exists x.(Polly(x) & Jompus(x) & -Shumpus(x) & Imperator(x))", "all x y z.((Polly(x) & Jompus(x) & Polly(y) & Hush(z)) -> (-Shumpus(y) & Imperator(z)))", "all x.(Polly(x) -> (Jompus(x) & -Shumpus(x) & Imperator(x)))"]}
{"id": "prontoqa_train_772", "nl": "Every grimpus is a dumpus.", "fol": "all x. (grimpus(x) -> dumpus(x))", "prediction": ["all x.(Grimpus(x) -> Dumpus(x))", "all x.(Grimpus(x) -> Dumpus(x))", "all x.(Smooch(x) -> Dumpus(x))", "all x.(SmokyPump(x) -> Dumpus(x))", "exists x y.(Grimpus(x) & Dumpus(y))", "(all x.(Grimpus(x) -> Dumpus(x))", "all x.(Grimpus(x) -> Dumpus(x))", "all x.(Sgrimpus(x) -> Dumpus(x))", "exists x y.(Grimpus(x) & Dumpus(y))", "all x.(Grimpus(x) -> Dumpus(x))", "(all x.(Grimpus(x) -> Dumpus(x))", "all x.(Grimpus(x) -> Dumpus(x))", "all x.(Scrappus(x) -> Dumpus(x))", "all x.(Grampus(x) -> Dumpus(x))", "all x.(Dumpus(x) -> Grimpus(x))", "exists x.(Grimpus(x) & Dumpus(x))"]}
{"id": "prontoqa_train_773", "nl": "Stella is not a dumpus, Stella is a vumpus, and Stella is a lempus.", "fol": "(-dumpus(Stella) & vumpus(Stella) & lempus(Stella))", "prediction": ["(all x.(Stella(x) -> -Dumpus(x)) & (Stella(x) -> Vumpus(x)) & (Stella(x) -> Lempus(x)))", "all x y z.((Stella(x) & Dumpus(y) & Vumpus(z)) -> (-Dumpus(x) & Vumpus(x) & Lempus(x)))", "(all x y z.((Stella(x) & Dumpus(y)) -> -Dumpus(x)) & ((Stella(z) & Vumpus(z)) -> Lempus(z)))", "(all x.(Stella(x) -> -Dumpus(x)) & all y.(Stella(y) -> Vumpus(y)) & all z.(Stella(z) -> Lempus(z))))", "all x.(Stella(x) -> (-Dumpus(x) & Vumpus(x) & Lempus(x)))", "all x y z.((Stella(x) & Dumpus(y) & Vumpus(z)) -> (-Dumpus(x) & Vumpus(x) & Lempus(x)))", "all x y z.((Stella(x) & Dumpus(y) & Vampus(z)) -> (-Dumpus(x) & -Vampus(x) & -Lempus(x)))", "(all x.(Stella(x) -> -Dumpus(x)) & (Stella(x) -> Vumpus(x)) & (Stella(x) -> Lempus(x)))", "exists x.(Stella(x) & -Dumpus(x) & Vumpus(x) & Lempus(x))", "(all x y z.((Stella(x) & Dumpus(y)) -> -Dumpus(x)) & ((Stella(z) & Vumpus(z)) -> Lempus(z)))", "(all x.(Stella(x) -> -Dumpus(x)) & all y.(Stella(y) -> Vumpus(y)) & all z.(Stella(z) -> Lempus(z))))", "(all x y z.((Stella(x) & Dumpus(y)) -> -Dumpus(x)) & ((Stella(z) & Vumpus(z)) -> Lempus(z)))", "all x y z.((Stella(x) & Dumpus(y) & Vumpus(z)) -> (-Dumpus(x) & Vumpus(y) & Lempus(z)))", "all x y z.((Stella(x) & Dumpus(y) & Vampus(z)) -> (-Dumpus(x) & -Vampus(x) & -Lempus(x)))", "(all x.(Stella(x) -> -Dumpus(x)) & (Stella(x) -> Vumpus(x)) & (Stella(x) -> Lempus(x)))", "(all x.(Stella(x) -> -Dumpus(x)) & all y.(Stella(y) -> Vumpus(y)) & all z.(Stella(z) -> Lempus(z))))"]}
{"id": "prontoqa_train_774", "nl": "Rompuses are yumpuses.", "fol": "all x. (rompus(x) -> yumpus(x))", "prediction": ["all x.(Rompus(x) -> Yampus(x))", "all x.(Rompus(x) -> Yumpus(x))", "(Yumpuse(rompus) & Yumpus(y))", "all x y.((Rompus(x) & Yampus(y)) -> Yampus(x))", "all x.(Rompus(x) -> Yampus(x))", "all x y.((Rompus(x) & Yumpus(y)) -> Is(x,y))", "all x.(Rompes(x) -> Yumpe(x))", "all x.(Rompe(x) -> Yumpe(x))", "(Yumpuse(rompus) & Yumpus(rompus))", "(Yumpus)", "all x.(Rompus(x) -> Yampus(x))", "All x.(Rompes(x) -> Yampus(x))", "All x.(Romes(x) -> Yampus(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yampus(x))"]}
{"id": "prontoqa_train_775", "nl": "Sam is a lorpus, Sam is an impus, and Sam is not a yumpus.", "fol": "(lorpus(Sam) & impus(Sam) & -yumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Lorpus(x)) & (Sam(x) -> Imperator(x)) & (Sam(x) -> -Yumpus(x)))", "all x y z.((Sam(x) & Lorpus(y) & Imperator(z)) -> (Lorpus(x) & Imperator(x) & -Yumpus(x)))", "(all x.(Sam(x) -> Lorpus(x)) & all y.(Sam(y) -> Issue(y))) & all z.(Sam(z) -> -Yumpus(z))))", "all x y z.((Sam(x) & Lorpus(y) & Impossible(z)) -> (Lorpus(x) & Impossible(x) & -Yumpus(x)))", "(all x y z.((Sam(x) & Lorpus(y)) -> (Lorpus(x) | Impossible(y))) & ((Sam(z) & -Yumpus(z))) -> (Yumpus(z))))", "(all x.(Sam(x) -> Llorpus(x)) & (Sam(x) -> Imperator(x)) & (Sam(x) -> -Yumpus(x)))", "all x y z.((Sam(x) & Lorpus(x) & Impossible(y) & -Yumpus(z)) -> (Lorpus(x) & Impossible(y) & -Yumpus(z)))", "all x.(Sam(x) -> (Lorpus(x) & Issue(x) & -Yumpus(x)))", "all x y.((Sam(x) & Lorpus(x)) -> (Impossible(x) & -Yumpus(y)))", "(all x.(Sam(x) -> Lorpus(x)) & (Sam(x) -> Imperator(x)) & -Yumpus(x)))", "(all x y z.((Sam(x) & Lorpus(y) & Yumpus(z)) -> (Lorpus(x) | Impossible(y)))", "exists x.(Sam(x) & (Lorpus(x) | Imperator(x) | -Yumpus(x)))", "(all x.(Sam(x) -> Lopa(x)) & (Sam(x) -> Issue(x)) & (Sam(x) -> -Yumpus(x)))", "all x y z.((Sam(x) & Lorpus(y) & Is(z)) -> (Lorpus(x) & Is(x,z) & -Yumpus(x)))", "all x y z.((Sam(x) & Loper(x) & Impossible(y) & -Yumpus(z)) -> (Lorpus(x) & Impossible(y) & -Yumpus(z)))", "(all x.(Sam(x) -> Lorpus(x)) & all y.(Sam(y) -> Imperator(y)) & all z.(Sam(z) -> -Yumpus(z))))"]}
{"id": "prontoqa_train_776", "nl": "Sam is a rompus and Sam is a lempus and Sam is not a numpus.", "fol": "(rompus(Sam) & lempus(Sam) & -numpus(Sam))", "prediction": ["(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> Lempus(x)) & (Sam(x) -> -Numpus(x)))", "all x y z.((Sam(x) & Rompus(x) & Lempus(y) & Numpus(z)) -> (Rompus(x) & Lempus(y) & -Numpus(z)))", "(all x.(Sam(x) -> Rompus(x)) & all y.(Sam(y) -> Lempus(y)) & all z.(Sam(z) -> -Numpus(z))))", "all x y.((Sam(x) & Rompus(x) & Lempus(y)) -> (Rompus(x) & Lempus(y) & -Numpus(x)))", "all x y z.((Sam(x) & Rompus(y) & Lempus(z)) -> (Rompus(x) & Lempus(z) & -Numpus(x)))", "(all x y z.((Sam(x) & Rompus(y)) -> (Rompus(z) & Lempus(z))) & ((Sam(x) & Numpus(x)) -> -Numpus(x)))", "all x.(Sam(x) -> (Rompus(x) & Lempus(x) & -Numpus(x)))", "(all x y.(Rompus(x) -> Sam(x)) & (Lempus(y) -> Sam(y)) & (Numpus(y) -> Sam(y)))", "(all x.(Rompus(x) -> Sam(x)) & all y.(Lempus(y) -> Sam(y))) & all z.(Numpus(z) -> Sam(z)))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> Lempus(x)) & (Sam(x) -> -Numpus(x)))", "exists x.(Sam(x) & Rompus(x) & Lempus(x) & -Numpus(x))", "all x y z.((Sam(x) & Rompus(x) & Lempus(y) & Numpus(z)) -> (Rompus(x) & Lempus(y) & -Numpus(z)))", "all x y.((Sam(x) & Rompus(x)) -> (Lempus(x) & -Numpus(y)))", "all x.(Sam(x) -> (Rompus(x) & Lempus(x) & -Numpus(x)))", "(all x.(Sam(x) -> Rompus(x)) & all y.(Sam(y) -> Lempus(y)) & all z.(Sam(z) -> -Numpus(z))))", "(all x y.(Rompus(x) -> Sam(x)) & (Lempus(y) -> Sam(y)) & (Numpus(y) -> Sam(y)))"]}
{"id": "prontoqa_train_777", "nl": "Sam is not a wumpus.", "fol": "-wumpus(Sam)", "prediction": ["all x.(Sam(x) -> -Wumpus(x))", "(-Wumpus(Sam))", "Sam is not a wumpus.", "all x.(Sam(x) -> -Wumpus(x))", "all x.(Wumpus(x) -> -Wumpus(x))", "(-Wumpus(Sam))", "(Wumpus(Sam) & -Wumpus(Sam))", "Sam is not a wumpus.", "all x.(Sam(x) -> -Wumpus(x))", "(-Wumpus(Sam))", "all x.(Wumpus(x) -> -Wumpus(x))", "-Wumpus(Sam)", "all x.(Sam(x) -> -Wumpus(x))", "(-Wumpus(Sam))", "-Wumpus(sam)", "-Wumpus(sam)"]}
{"id": "prontoqa_train_778", "nl": "Every dumpus is a vumpus.", "fol": "all x. (dumpus(x) -> vumpus(x))", "prediction": ["all x.(Dumpus(x) -> Vumpus(x))", "all x.(Dumpus(x) -> Vumpus(x))", "all x y.((Dumpus(x) & Dumpus(y)) -> Vumpus(x))", "(all x.(Dumpus(x) -> Vumpus(x))", "all x.(Dumpus(x) -> Vumpus(x))", "all x.(Dumpus(x) -> Vumpus(x))", "(all x.(Dumpus(x) -> Vumpus(x))", "all x y.((Dumpus(x) & Dumpus(y)) -> Vumpus(x))", "all x.(Dumpus(x) -> Vumpus(x))", "all x.(Dumpus(x) -> Vampus(x))", "exists x.(Dumpus(x) & -Vumpus(x))", "all x.(Dumpus(x) -> Vumpus(x))", "all x.(Dumpus(x) -> Vumpus(x))", "all x.(Dumpus(x) -> Vumpus(x))", "exists x.(Dupus(x) & Vampus(x))", "exists x.(Dumpus(x) & Vampus(x))"]}
{"id": "prontoqa_train_779", "nl": "Polly is not a vumpus and Polly is a tumpus and Polly is a wumpus.", "fol": "(-vumpus(Polly) & tumpus(Polly) & wumpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Vumpus(x)) & (Polly(x) -> Tumpus(x)) & (Polly(x) -> Wumpus(x)))", "all x y z.((Polly(x) & Vumpus(y) & Tumpus(z)) -> (-Vumpus(x) & Tumpus(y) & Wumpus(z)))", "(all x.(Polly(x) -> -Vumpus(x)) & (Polly(x) -> Tumpus(x)) & (Polly(x) -> Wumpus(x)))", "(-Vumpus(Polly) & Tumpus(Poly) & Wumpus(Poly))", "all x y z.((Polly(x) & Vumpus(y) & Tumpus(z)) -> (-Vumpus(x) & Tumpus(y) & Wumpus(z)))", "(all x y.(Vumpus(x) -> -Vumpus(x)) & (Tumpus(y) -> Tumpus(y))) & (Wumpus(y) -> -Vumpus(y)))", "(all x.(Polly(x) -> -Vumpus(x)) & all y.(Polly(y) -> Tumpus(y))) & all z.(Polly(z) -> Wumpus(z)))", "all x y.((Polly(x) & Polly(y)) -> (-Vumpus(x) & Tumpus(y) & Wumpus(y)))", "(all x.(Polly(x) -> -Vumpus(x)) & (Polly(x) -> Tumpus(x)) & (Polly(x) -> Wumpus(x)))", "all x y z.((Polly(x) & Vumpus(y) & Tumpus(z)) -> (-Vumpus(x) & Tumpus(x) & Wumpus(x)))", "all x.(Polly(x) -> (-Vumpus(x) & Polly(x) & Tumpus(x) & Wumpus(x)))", "(all x y z.((Polly(x) & Vumpus(y) & Tumpus(z)) -> -Vumpus(x)) & ((Polly(x) & Tumpus(z))) -> Wumpus(x)))", "exists x.(Polly(x) & -Vumpus(x) & Polly(x) & Tumpus(x) & Wumpus(x))", "all x y z.((Polly(x) & Vumpus(y) & Tumpus(z) & Wumpus(z)) -> (-Vumpus(x) & Tumpus(y) & Tumpus(z)))", "all x y.((Polly(x) & Polly(y)) -> (-Vumpus(x) & Tumpus(y) & Wumpus(y)))", "(all x.(Polly(x) -> -Vumpus(x)) & (Polly(x) -> Tumpus(x)) & (Polly(x) -> Wumpus(x)))"]}
{"id": "prontoqa_train_780", "nl": "Polly is not a dumpus.", "fol": "-dumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Dumpus(x))", "(-Dumpus(Polly))", "Polly is not a Dumpus.", "all x.(Polly(x) -> -Dumpus(x))", "(-Dumpus(Polly))", "Polly is not a Dumpus.", "all x.(Polly(x) -> -Dumpus(x))", "Polly -Dumpus(Polly)", "(Dumus(Poly) & -Dumpus(Poly))", "all x.(Polly(x) -> -Dumpus(x))", "(-Dumpus(Polly))", "-Dumpus(Polly)", "all x.(Polly(x) -> -Dumpus(x))", "(-Dumpus(Polly))", "-Dumpus(Poly)", "All x.(Polly(x) -> -Dumpus(x))"]}
{"id": "prontoqa_train_781", "nl": "Zumpuses are wumpuses.", "fol": "all x. (zumpus(x) -> wumpus(x))", "prediction": ["all x.(Zumpus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wumpus(x))", "(Wumpuse(z) & -Wumpus(w) & -Wumpus(z))", "all x y.((Zumpus(x) & Wumpus(y)) -> Wumpus(x))", "(Wumpuse(z) & HasWumpus(z))", "all x y.((Zumpus(x) & Wumpus(y)) -> (Wumpus(x) & Wumpus(y)))", "all x.(Zumpus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wumpus(x))", "all x.(Zombie(x) -> Wumpus(x))", "(Wumpuse(z) & -Wumpus(z))", "all x.(Zumpus(x) -> Wampus(x))", "all x.(Zumpus(x) -> Wumpus(x))", "all x.(Zimpus(x) -> Wumpus(x))", "all x.(Zimpus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wampus(x))", "All x.(Zumpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_782", "nl": "Fae is not a wumpus, Fae is a sterpus, and Fae is a dumpus.", "fol": "(-wumpus(Fae) & sterpus(Fae) & dumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Wumpus(x)) & (Fae(x) -> Sterpus(x)) & (Fae(x) -> Dumpus(x)))", "all x y z.((Fae(x) & Wumpus(y) & Sterpus(z)) -> (-Wumpus(x) & Sterpus(x) & Dumpus(x)))", "(all x y z.((Fae(x) & Wumpus(y)) -> -Wumpus(x)) & ((Fae(z) & Sterpus(z)) -> Dumpus(z)))", "(all x.(Fae(x) -> -Wumpus(x)) & all y.(Fae(y) -> Sterpus(y)) & all z.(Fae(z) -> Dumpus(z))))", "all x y z.((Fae(x) & -Wumpus(x) & Sterpus(y) & Dumpus(z)) -> (-Wumpus(x) & Sterpus(y) & Dumpus(z)))", "all x.(Fae(x) -> (-Wumpus(x) & Sterpus(x) & Dumpus(x)))", "(all x y z.((Fae(x) & Wumpus(y) & Sterpus(z)) -> -Wumpus(x)) & ((Fae(x) & Sterpus(x)) -> Dumpus(x)))", "(all x.(Fae(x) -> -Wumpus(x)) & (Fae(x) -> Sterpus(x)) & (Fae(x) -> Dumpus(x)))", "exists x.(Fae(x) & -Wumpus(x) & Sterpus(x) & Dumpus(x))", "all x y z.((Fae(x) & Wumpus(y) & Sterpus(z)) -> (-Wumpus(x) & Sterpus(x) & Dumpus(x)))", "all x y z.(Fae(x) & (Wumpus(y) | Sterpus(y) | Dumpus(z))) -> -Wumpus(x) & Sterpus(y) & Dumpus(z))", "(all x y z.((Fae(x) & Wumpus(y)) -> -Wumpus(x)) & ((Fae(z) & Sterpus(z))) -> Dumpus(z)))", "(all x.(Fae(x) -> -Wumpus(x)) & all y.(Fae(y) -> Sterpus(y)) & all z.(Fae(z) -> Dumpus(z)))", "all x y z.((Fae(x) & Sterpus(y) & Dumpus(z)) -> (-Wumpus(x) & Sterpus(y) & Dumpus(z)))", "(all x.(Fae(x) -> -Wumpus(x)) & (Fae(x) -> Sterepus(x)) & (Fae(x) -> Dumpus(x)))", "(all x.(Fae(x) -> -Wumpus(x)) & all y.(Fae(y) -> Sterepus(y)) & all z.(Fae(z) -> Dumpus(z)))"]}
{"id": "prontoqa_train_783", "nl": "Fae is a sterpus and Fae is not a shumpus and Fae is a brimpus.", "fol": "(sterpus(Fae) & -shumpus(Fae) & brimpus(Fae))", "prediction": ["(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Brimpus(x)))", "all x y z.((Fae(x) & Sterpus(x) & Fae(y) & Brimpus(z)) -> (-Shumpus(y) & -Shumpus(y) & Brimpus(z)))", "(all x y.(Fae(x) -> Sterpus(x)) & (Fae(y) -> -Shumpus(y)) & (Fae(y) -> Brimpus(y)))", "(all x y z.((Fae(x) & Sterpus(y) & -Shumpus(z)) -> Stereoscopic(x)) & ((Fae(x) & -Shumpus(x)) -> Brimpus(x)))", "all x y z.((Fae(x) & Sterepus(y) & -Shumpus(z)) -> (Sterpus(x) & Brimpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Brimpus(x)))", "all x y.((Fae(x) & Sterepus(x) & Fae(y)) -> (-Shumpus(y) & Brimpus(y)))", "all x.(Fae(x) -> (Sterpus(x) & -Shumpus(x) & Brimpus(x)))", "exists x.(Fae(x) & Sterpus(x) & -Shumpus(x) & Brimpus(x))", "(all x.(Fae(x) -> Sterepus(x)) & (-Shumpus(x) & -Brimpus(x)))", "all x y z.((Fae(x) & Sterpus(x) & Fae(y) & Brimpus(z)) -> (-Shumpus(y) & -Shumpus(y) & -Shumpus(z)))", "(all x.(Fae(x) -> Sterpus(x)) & all y.(Fae(y) -> -Shumpus(y)) & all z.(Fae(z) -> Brimpus(z))))", "(all x y.(Fae(x) -> Sterpus(x)) & (Fae(y) -> -Shumpus(y)) & (Fae(y) -> Brimpus(y)))", "all x y.((Fae(x) & Sterpus(x)) -> (-Shumpus(x) & Brimpus(y)))", "all x.(Fae(x) -> (Sterpus(x) & -Shumpus(x) & Brimpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Brimpus(x)))"]}
{"id": "prontoqa_train_784", "nl": "Every yumpus is a grimpus.", "fol": "all x. (yumpus(x) -> grimpus(x))", "prediction": ["all x.(Yumpus(x) -> Grimpus(x))", "all x.(Yumpus(x) -> Grimpus(x))", "all x y.((Yumpus(x) & Grimpus(y)) -> Is(x,y))", "all x.(Yumpus(x) -> Grimpus(x))", "(all x.(Yumpus(x) -> Grimpus(x)))", "all x y.((Yumpus(x) & Grimpus(y)) -> Has(x,y))", "all x.(Yumpus(x) -> Grimpus(x))", "all x.(Yumpus(x) -> Gruppus(x))", "all x.(Yumpus(x) -> Grimpus(x))", "all x.(Yumpus(x) -> Gruppus(x))", "all x.(Yumpus(x) -> Grimpus(x))", "all x.(Yumpus(x) -> Gruppus(x))", "exists x.(yumpus(x) & Grimpus(y) & HasYumpus(x))", "all x.(Yumpus(x) -> Grimpus(x))", "exists x.(Yumpus(x) & Grimpus(x))", "exists x.(yumpus(x) & Grumpus(y))"]}
{"id": "prontoqa_train_785", "nl": "Sam is not a grimpus, Sam is a zumpus, and Sam is a gorpus.", "fol": "(-grimpus(Sam) & zumpus(Sam) & gorpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Grimpus(x)) & (Sam(x) -> Zumpus(x)) & (Sam(x) -> Gorpus(x)))", "all x y z.((Sam(x) & Grimpus(y) & Zumpus(z)) -> (-Sam(x) & Gorpus(x)))", "(all x.(Sam(x) -> -Grimpus(x)) & all y.(Sam(y) -> Zumpus(y)) & all z.(Sam(z) -> Gorpus(z))))", "(all x y z.((Sam(x) & Grimpus(y)) -> -Grimpus(x)) & ((Sam(z) & Zumpus(z)) -> Gorpus(z)))", "all x.(Sam(x) -> (-Grimpus(x) & Zumpus(x) & Gorpus(x)))", "all x y z.((Sam(x) & Grimpus(y) & Zumpus(z)) -> (-Grimpus(x) & Zumpus(y) & Gorpus(z)))", "(all x.(Sam(x) -> -Grimpus(x)) & (Sam(x) -> Zumpus(x)) & (Sam(x) -> Gorpus(x)))", "(all x y z.((Sam(x) & Grimpus(y)) -> -Grimpus(x)) & ((Sam(z) & Zumpus(z))) -> Gorpus(x)))", "exists x.(Sam(x) & -Grimpus(x) & Zumpus(x) & Gorpus(x))", "(all x.(Sam(x) -> -Grimpus(x)) & all y.(Sam(y) -> Zumpus(y)) & all z.(Sam(z) -> Gorpus(z))))", "all x y z.((Sam(x) & Grimpus(y) & Zumpus(z) & Gorpus(x)) -> -Grimpus(x) & Zumpus(y) & Gorpus(z))", "all x y z.((Sam(x) & Grimpus(y) & Zumpus(z)) -> (-Sam(x) & Gorpus(x)))", "all x y z.((Sam(x) & Grimpus(y) & Zumpus(z) & Gorpus(x)) -> (-Grimpus(x) & Zumpus(y) & Gorpus(z)))", "(all x.(Sam(x) -> -Grimpus(x)) | (Sam(x) -> Zumpus(x))) | (Sam(x) -> Gorpus(x)))", "(all x.(Sam(x) -> -Grimpus(x)) & (Sam(x) -> Zumpus(x)) & (Sam(x) -> Gorpus(x)))", "all x y z.((Sam(x) & Grimpus(y) & Zumpus(z)) -> (-Grimpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_786", "nl": "Each tumpus is a jompus.", "fol": "all x. (tumpus(x) -> jompus(x))", "prediction": ["all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x y.((Tumpus(x) & Jompus(y)) -> Has(x,y))", "(all x.(Tumpus(x) -> Jompus(x)))", "all x.(Tumpus(x) -> Jompus(x))", "all x y.((Tumpus(x) & Jompus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Jompus(x))", "all x y.((Tumpus(x) & Jompus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompus(x))", "exists x.(Tumpus(x) & JOMPUS(x))", "all x.(Tumpus(x) -> Jompus(x))", "exists x.(Tumpus(x) & Joompus(x))", "exists x.(Tumpus(x) & Jompus(x))"]}
{"id": "prontoqa_train_787", "nl": "Sam is not a jompus and Sam is a yumpus and Sam is a rompus.", "fol": "(-jompus(Sam) & yumpus(Sam) & rompus(Sam))", "prediction": ["(all x.(Sam(x) -> -Jompus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> Rompus(x)))", "(all x.(Jompus(x) -> -Jompus(x)) & (Yumpus(x) -> Yumpus(x)) & (Rompus(x) -> -Jompus(x)))", "all x y z.((Sam(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) & Yumpus(y) & Rompus(z)))", "(all x y z.((Sam(x) & Jompus(y) & Yampus(z)) -> -Jompus(x)) & ((Sam(x) & Yampus(z)) -> Rompus(x)))", "(all x.(Sam(x) -> -Jompus(x)) & all y.(Yumpus(y) & all z.(Rompus(z)) -> -Jompus(x)))", "all x y z.((Sam(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) & Yumpus(y) & Rompus(z)))", "(-Jompus(Sam) & -Yumpus(Sam) & Rompus(Sam))", "all x y.((Sam(x) & Jompus(y)) -> (-Jompus(x) & Yampus(y) & Rompus(x)))", "all x.(Sam(x) -> (-Jompus(x) & -Yumpus(x) & -Rompus(x)))", "(all x y.(Jompus(x) -> -Jompus(x)) & (Yumpus(y) -> Yumpus(y)))", "(all x.(Jompus(x) -> -Jompus(x)) & all y.(Yumpus(y) -> Yumpus(y)))", "all x.(Sam(x) -> (-Jompus(x) & Yampus(x) & Rompus(x)))", "all x y z.((Sam(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) & Yampus(y) & Rompus(z)))", "exists x.(Sam(x) & -Jompus(x) & Yampus(x) & Rompus(x))", "(all x.(Sam(x) -> -Jompus(x)) & (Yumpus(x) | Rompus(x))))", "all x y z.((Sam(x) & Jompus(y) & Yampus(z)) -> (-Jompus(x) & Yampus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_788", "nl": "Each jompus is a yumpus.", "fol": "all x. (jompus(x) -> yumpus(x))", "prediction": ["all x.(Jompus(x) -> Yumpus(x))", "(all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x y.((Jompus(x) & Yumpus(y)) -> Has(x,y))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jimpus(x) -> Yumpus(x))", "all x y.((Jompus(x) & Yumpus(y)) -> Has(x,y))", "all x.(Jompus(x) -> Yumpus(x))", "all x y.((Jompus(x) & Yumpus(y)) -> HasYumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jimpus(x) -> Yumpus(x))", "all x.(Jumpus(x) -> Yampus(x))", "all x.(Jompus(x) -> Yampus(x))", "exists x.(jompus(x) & Yumpus(x))", "exists x.(Jimpus(x) & Yumpus(x))", "exists x.(Jompus(x) & Yampus(x))"]}
{"id": "prontoqa_train_789", "nl": "Sally is not a yumpus, Sally is a rompus, and Sally is a vumpus.", "fol": "(-yumpus(Sally) & rompus(Sally) & vumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Yumpus(x)) & all y.(Sally(y) -> Rompus(y)) & all z.(Sally(z) -> Vumpus(z))))", "all x y z.((Sally(x) & Yampus(y) & Rompus(z)) -> (-Yumpus(x) & -Vumpus(x)))", "(all x.(Sally(x) -> -Yumpus(x)) & (Rompus(x) & Vumpus(x)))", "(all x y z.((Sally(x) & Yumpus(y)) -> -Yumpus(x)) & ((Sally(z) & Rompus(z)) -> Vumpus(z)))", "all x y z.((Sally(x) & Yampus(y) & Rompus(z)) -> (-Yumpus(x) & -Rompus(x) & -Vumpus(x)))", "all x.(Sally(x) -> (-Yumpus(x) & -Rompus(x) & -Vimpus(x)))", "(all x.(Sally(x) -> -Yumpus(x)) & (Sally(x) -> Rompus(x)) & (Sally(x) -> Vumpus(x)))", "all x.(Sally(x) -> (-Yumpus(x) & Rompus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Yumpus(x)) & all y.(Sally(y) -> Rompus(y)) & all z.(Sally(z) -> Vumpus(z))))", "(-Yumpus(Sally) & -Rompus(Sally) & -Vumpus(Sally))", "all x y z.((Sally(x) & Yumpus(y) & Rompus(z)) -> (-Yumpus(x) & -Vumpus(x) & -Yumpus(y) & -Rompus(z) & -Vumpus(z)))", "(all x y z.((Sally(x) & Yumpus(y)) -> -Yumpus(x)) & ((Sally(z) & Rompus(z)) -> Vumpus(z)))", "(all x.(Sally(x) -> -Yumpus(x)) & all y.(Rompus(y) & all z.(Vumpus(z) -> -Yumpus(x))))", "exists x.(Sally(x) & -Yumpus(x) & Rompus(x) & Vumpus(x))", "all x y z.((Sally(x) & Yompus(y) & Rompus(z)) -> (-Yumpus(x) & -Vumpus(x)))", "all x y z.((Sally(x) & Yumpus(y) & Rompus(z)) -> (-Yumpus(x) | (-Yumpus(x) & Rompus(y) & Vumpus(z))))"]}
{"id": "prontoqa_train_790", "nl": "Fae is a dumpus and Fae is not a lempus and Fae is a grimpus.", "fol": "(dumpus(Fae) & -lempus(Fae) & grimpus(Fae))", "prediction": ["(all x.(Fae(x) -> Dumpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Grimpus(x)))", "all x y z.((Fae(x) & Dumpus(x) & Fae(y) & Grimpus(z)) -> (-Lempus(y) & Grimpus(z)))", "(all x y.(Fae(x) -> Dumpus(x)) & (Fae(y) -> -Lempus(y)) & (Fae(y) -> Grimpus(y)))", "(all x y z.((Fae(x) & Dumpus(x)) -> (Dumpus(x) & -Lempus(y)) & ((Fae(z) & Grimpus(z))) -> (Fae(z) & Grimpus(z))))", "(all x.(Fae(x) -> Dumpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Grimpus(x)))", "all x y z.((Fae(x) & Dumpus(x) & Fae(y) & Grimpus(z)) -> (-Lempus(y) & Grimpus(z)))", "all x y.((Fae(x) & Dumpus(x) & Fae(y)) -> (-Lempus(y) & Grimpus(y)))", "all x.(Fae(x) -> (Dumps(x) & -Lempus(x) & Grimpus(x)))", "(all x.(Fae(x) -> Dumpus(x)) & all y.(Fae(y) -> -Lempus(y)) & all z.(Fae(z) -> Grimpus(z))))", "all x.(Fae(x) -> (Dumpus(x) & -Lempus(x) & Grimpus(x)))", "exists x.(Fae(x) & Dumpus(x) & -Lempus(x) & Grimpus(x))", "(all x y.(Fae(x) -> Dumpus(x)) & (Fae(y) -> -Lempus(y)) & (Fae(y) -> Grimpus(y)))", "(all x.(Fae(x) -> Dumpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Grimpus(x)))", "all x y.((Fae(x) & Fae(y)) -> (Dumpsus(x) & -Lempus(y) & Grimpus(y)))", "all x y z.((Fae(x) & Dumpus(x) & Fae(y) & Grimpus(z)) -> (-Lempus(y) & Grimpus(z)))", "(all x.(Fae(x) -> Dumpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Grimpus(x)))"]}
{"id": "prontoqa_train_791", "nl": "Alex is not a grimpus and Alex is a numpus and Alex is a lorpus.", "fol": "(-grimpus(Alex) & numpus(Alex) & lorpus(Alex))", "prediction": ["(all x.(Alex(x) -> -Grimpus(x)) & all y.(Numpus(y) & All z.(Lorpus(z))) -> -Grimpus(x)))", "all x y z.((Alex(x) & Grimpus(y) & Numpus(z)) -> (-Grimpus(x) & Numpus(y) & Lorpus(z)))", "all x.(Alex(x) -> (-Grimpus(x) & Numpus(x) & Lorpus(x)))", "(all x.(Alex(x) -> -Grimpus(x)) & all y.(Alex(y) -> Numpus(y)) & all z.(Alex(z) -> Lorpus(z))))", "(all x.(Alex(x) -> -Grimpus(x)) & (Alex(x) -> Numpus(x)) & (Alex(x) -> Lorpus(x)))", "(all x y z.((Alex(x) & Grimpus(y)) -> -Grimpus(x)) & ((Alex(z) & Numpus(z))) -> Lops(z)))", "all x y.((Alex(x) & Grimpus(y)) -> (-Grimpus(x) & Numpus(y) & Lorpus(x)))", "all x y z.((Alex(x) & Grimpus(y) & Numpus(z)) -> (-Grimpus(x) & Numpus(x) & Lorpus(x)))", "all x y z.((Alex(x) & Grimpus(y) & Numpus(z)) -> (-Grimpus(x) & -Numpus(y) & -Lorpus(z)))", "all x.(Alex(x) -> (-Grimpus(x) & Numpus(x) & Lorpus(x)))", "(all x.(Alex(x) -> -Grimpus(x)) & all y.(Numpus(y) & All z.(Lorpus(z))) -> -Grimpus(x)))", "(all x y.((Alex(x) & Grimpus(y)) | ((Alex(x) & Numpus(y))) | (Alex(x) & Lorpus(y))))", "exists x.(Alex(x) & -Grimpus(x) & Numpus(x) & Lorpus(x))", "all x y z.((Alex(x) & Grimpus(y) & Numpus(z) & Lorpus(z)) -> -Grimpus(x) & Numpus(y) & Lorpus(z)))", "(all x.(Alex(x) -> -Grimpus(x)) & (Alex(x) -> Numpus(x)) & (Alex(x) -> Lorpus(x)))", "(all x.(Alex(x) -> -Grimpus(x)) | (Alex(x) -> Numpus(x)) | (Alex(x) -> Lorpus(x))))"]}
{"id": "prontoqa_train_792", "nl": "Sally is a vumpus, Sally is not an impus, and Sally is a yumpus.", "fol": "(vumpus(Sally) & -impus(Sally) & yumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> -Impossible(x)) & (Sally(x) -> Yumpus(x)))", "all x y z.((Sally(x) & Vumpus(x) & -Issue(y) & Yumpus(z)) -> (Vumpus(x) & Yumpus(z)))", "(all x.(Sally(x) -> Vumpus(x)) & (-Issue(x) & (Yumpus(x) | -Issue(x))))", "all x y z.((Sally(x) & Vumpus(x) & Sally(y) & Imperator(z)) -> (-Vumpus(x) & -Impossible(y) & Yumpus(z)))", "all x.(Sally(x) -> (Vumpus(x) & -Impossible(x) & Yumpus(x)))", "(all x y z.((Sally(x) & Vumpus(y) & -Impossible(z)) -> (Vumpus(x) & Yumpus(x)))", "(all x y.(Sally(x) -> Vumpus(x)) & (Sally(y) -> -Impossible(y))) & (Sally(y) -> Yumpus(y)))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> -Issue(x)) & (Sally(x) -> Yumpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & all y.(Sally(y) -> -Impossible(y))) & all z.(Sally(z) -> Yumpus(z)))", "all x.(Sally(x) -> (Vimpus(x) & -Impossible(x) & Yumpus(x)))", "all x y z.((Sally(x) & Vumpus(y) & IsNotImpossible(z)) -> (Vumpus(x) & Yumpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & (-Impossible(x) & -Yumpus(x)))", "all x y z.((Sally(x) & Vumpus(x) & -Impossible(y) & Yumpus(z)) -> (Vumpus(x) & Yumpus(z)))", "exists x.(Sally(x) & Vumpus(x) & -Issue(x) & Yumpus(x))", "(all x.(Sally(x) -> Vumpus(x)) & all y.(Sally(y) -> -Impossible(y))) & all z.(Sally(z) -> Yumpus(z)))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> -Impossible(x)) & (Sally(x) -> Yumpus(x)))"]}
{"id": "prontoqa_train_793", "nl": "Polly is a zumpus, Polly is a jompus, and Polly is not a tumpus.", "fol": "(zumpus(Polly) & jompus(Polly) & -tumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Zumpus(x)) & (Polly(x) -> Jompus(x)) & -Tumpus(x)))", "all x y z.((Polly(x) & Zumpus(x) & Jompus(y) & -Tumpus(z)) -> (Tompus(x) | Jompus(y) | Polly(z)))", "(all x.(Polly(x) -> Zumpus(x)) & all y.(Polly(y) -> Jompus(y)) & all z.(Polly(z) -> -Tumpus(z))))", "(all x y z.((Polly(x) & Zumpus(x)) -> Polly(y)) & ((Polly(z) & Jompus(z)) -> Polly(z))) & ((Polly(z) & -Tumpus(z)) -> Polly(z)))", "all x y z.((Polly(x) & Zumpus(x) & Polly(y) & Jompus(y) & -Tumpus(z)) -> (Tompus(x) & Jompus(y) & -Tompus(z)))", "(all x.(Polly(x) -> Zumpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> -Tumpus(x)))", "(all x y z.((Polly(x) & Zumpus(y)) -> (Tompus(z) | Jompus(z))) & ((Polly(x) & -Tumpus(x)) -> (Tompus(x) & Jompus(x))))", "all x.(Polly(x) -> (Tompus(x) | Jompus(x) | -Tumpus(x)))", "all x y z.((Polly(x) & Zumpus(x) & Jompus(y) & -Tumpus(z)) -> (Tompus(x) | Jompus(y) | Polly(z)))", "exists x.(Polly(x) & Zumpus(x) & Jompus(x) & -Tumpus(x))", "(all x.(Polly(x) -> Zumpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> -Tumpus(x)))", "all x y z.((Polly(x) & Zumpus(x) & Jompus(y) & -Tumpus(z)) -> (Tompus(x) | Jompus(y) | -Tompus(z)))", "(all x.(Polly(x) -> Zumpus(x)) & all y.(Polly(y) -> Jompus(y)) & all z.(Polly(z) -> -Tumpus(z))))", "all x y z.((Polly(x) & Tompus(y) & Jompus(z)) -> (Tompus(x) | Jompus(z) | -Tumpus(z)))", "all x y z.((Polly(x) & Tompus(y) & Jompus(z)) -> (Tompus(x) | Jompus(z) | -Tompus(z)))", "(all x y z.((Polly(x) & Zumpus(x)) -> Polly(x)) & ((Polly(y) & Jompus(y)) -> Polly(z)) & -Tumpus(z)))"]}
{"id": "prontoqa_train_794", "nl": "Fae is a vumpus, Fae is a dumpus, and Fae is not an impus.", "fol": "(vumpus(Fae) & dumpus(Fae) & -impus(Fae))", "prediction": ["(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> Dumpus(x)) & -Impossible(x)))", "all x y z.((Fae(x) & Vumpus(x) & Dumpus(y) & -Issue(z)) -> (Vumpus(x) & Dumpus(y) & -Issue(z)))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> -Impossible(z))))", "all x.(Fae(x) -> (Vumpus(x) & Dumpus(x) & -Impossible(x)))", "(all x y z.((Fae(x) & Vumpus(y) & Dumpus(z)) -> (Vumpus(x) & Dumpus(z) & -Impossible(x)))", "all x y z.((Fae(x) & Fae(y) & Dumpus(z)) -> (Vumpus(x) & Dumpus(y) & -Ilimination(z)))", "all x y z.((Fae(x) & Vumpus(x) & Dumpus(y) & Imperator(z)) -> (Vumpus(x) & Dumpus(y) & -Impossible(z)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> -Impossible(x)))", "all x y z.(Fae(x) & Vumpus(x) & Dumpus(y) & -Issue(z))", "(all x y z.((Fae(x) & Vumpus(x)) -> Dumpus(x)) & ((Fae(y) & Imperator(z)) -> -Impossible(y)))", "(all x.(Fae(x) -> Voompus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> -Impossible(x)))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> -Impossible(z))))", "all x.(Fae(x) -> (Vimpus(x) & Dumpus(x) & -Ilises(x)))", "exists x.(Fae(x) & (Vumpus(x) | Dumpus(x) | -Impossible(x)))", "all x y z.(Fae(x) -> (Vumpus(x) & Dumpus(y) & -Impossible(z)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> -Impossible(x)))"]}
{"id": "prontoqa_train_795", "nl": "Every brimpus is a numpus.", "fol": "all x. (brimpus(x) -> numpus(x))", "prediction": ["all x.(Brumpus(x) -> Numpus(x))", "all x.(Brimpus(x) -> Numpus(x))", "(all x.(Brimpus(x) -> Numpus(x)))", "all x y.((Brimpus(x) & Numpus(y)) -> Is(x,y))", "all x.(Brumpus(x) -> Numpus(x))", "all x y.((Brumpus(x) & Numpus(y)) -> Has(x,y))", "all x.(Brimpus(x) -> Numpus(x))", "all x.(Brumpus(x) -> Numpus(x))", "all x.(Brimpus(x) -> Numpus(x))", "all x.(Brimpus(x) -> Number(x))", "all x.(Brimpus(x) -> Numpus(x))", "all x.(Brumpus(x) -> Numpus(x))", "exists x.(Brampus(x) & Number(x))", "all x.(Brumpus(x) -> Numpus(x))", "all x.(Brompus(x) -> Number(x))", "exists x.(Brimpus(x) & Numpus(x))"]}
{"id": "prontoqa_train_796", "nl": "Fae is a shumpus, Fae is not a numpus, and Fae is an impus.", "fol": "(shumpus(Fae) & -numpus(Fae) & impus(Fae))", "prediction": ["(all x.(Fae(x) -> Shumpus(x)) & (Fae(x) -> -Numpus(x)) & (Fae(x) -> Imperator(x)))", "all x y z.((Fae(x) & Shumpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Imperator(z)))", "(all x.(Fae(x) -> Humpus(x)) & (Fae(x) -> -Numpus(x)) & (Fae(x) -> Imperator(x)))", "(all x y z.((Fae(x) & Humpus(y)) -> Shumpus(x)) & ((Fae(z) & -Numpus(z))) -> Imperator(z)))", "all x y z.((Fae(x) & Shumpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(x) & Imperator(x)))", "(all x.(Fae(x) -> Shumpus(x)) & (Fae(x) -> -Numpus(x)) & (Fae(x) -> Imperator(x)))", "all x.(Fae(x) -> (Shumpus(x) & -Numpus(x) & Imperator(x)))", "all x y z.((Fae(x) & Shumpus(x) & Fae(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Imperator(z)))", "(all x.(Fae(x) -> Shumpus(x)) & all y.(Fae(y) -> -Numpus(y)) & all z.(Fae(z) -> Imperator(z)))", "(all x.(Fae(x) -> Humpus(x)) & (Fae(x) -> -Numpus(x)) & (Fae(x) -> Imperator(x)))", "all x y z.(Fae(x) & Shumpus(y) & Numpus(z) & Imperator(x))", "(all x y z.((Fae(x) & Humpus(y)) -> Shumpus(x)) & ((Fae(z) & -Numpus(z))) -> Imperator(z)))", "all x.(Fae(x) -> (Shumpus(x) | -Numpus(x) | Imperator(x)))", "(all x.(Fae(x) -> Humpus(x)) & all y.(Fae(y) -> -Numpus(y))) & all z.(Fae(z) -> Issue(z)))", "all x y z.(Fae(x) -> (Shumpus(x) & -Numpus(y) & Imperator(z)))", "(all x y z.((Fae(x) & Humpus(y)) -> Shumpus(x)) & ((Fae(z) & -Numpus(z))) -> Imperative(z)))"]}
{"id": "prontoqa_train_797", "nl": "Fae is not a brimpus.", "fol": "-brimpus(Fae)", "prediction": ["all x.(Fae(x) -> -Brimpus(x))", "(-Brimpus(Fae))", "(Brimpus(Fae) & -Brimpus(Fae))", "-Brimpus(Fae)", "all x.(Fae(x) -> -Brimpus(x))", "(Brimpus(Fae) & -Brimpus(Fae))", "-Brimpus(Fae)", "all x.(Fae(x) -> -Brumpus(x))", "-Brimpus(fae)", "(Brimpus(fae) & -Brimpus(fae))", "is notbrimpus.", "-Brumpus(Fae)", "all x.(Fae(x) -> -Brimpus(x))", "(Brimpus(fae) & -Brumpus(fae))", "-Brimpus(fae)", "all x.(Fae(x) -> -Brumpus(x))"]}
{"id": "prontoqa_train_798", "nl": "Zumpuses are dumpuses.", "fol": "all x. (zumpus(x) -> dumpus(x))", "prediction": ["all x.(Zumpus(x) -> Dumpuse(x))", "all x.(Zumpus(x) -> Dumpuse(x))", "(Dumpuses(z) & Dumpuse(z))", "all x y.((Zumpus(x) & Dumpuse(y)) -> Dumpuse(x))", "(Dumpuse(z) & Dumpuse(z))", "all x y.((Zumpus(x) & Dumpuse(y)) -> (Dumpus(x) & Dumpuse(y)))", "all x.(Zombie(x) -> Dumpuse(x))", "all x.(Zumpus(x) -> Dumpuse(x))", "(Dumpuse(z) & HasDumpus(z))", "all x.(Zombies(x) -> Dumpuse(x))", "all x.(Zumpus(x) -> Dumpuse(x))", "all x.(Zombie(x) -> Dumpuse(x))", "all x.(Zumpus(x) -> Dumpuse(x))", "all x.(Zombies(x) -> Dumpus(x))", "All x.(Zimpus(x) -> Dumpuse(x))", "all x.(Zumpus(x) -> Dumpuse(x))"]}
{"id": "prontoqa_train_799", "nl": "Fae is a lempus, Fae is a grimpus, and Fae is not a dumpus.", "fol": "(lempus(Fae) & grimpus(Fae) & -dumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Grimpus(x)) & -Dumpus(x)))", "all x y z.((Fae(x) & Lempus(x) & Grimpus(y) & -Dumpus(z)) -> (Lempus(x) & Grimpus(y) & -Dumpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> -Dumpus(x)))", "(all x y z.((Fae(x) & Lempus(x)) -> (Fae(y) & Grimpus(y))) & ((Fae(z) & Dumpus(z)) -> -Dumpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Grimpus(y)) & all z.(Fae(z) -> -Dumpus(z))))", "all x.(Fae(x) -> (Lempus(x) & Grimpus(x) & -Dumpus(x)))", "all x y z.((Fae(x) & Grimpus(y) & Dumpus(z)) -> (Lempus(x) & Grimpus(y) & -Dumpus(z)))", "all x y z.((Fae(x) & Lempus(x) & Grimpus(y) & -Dumpus(z)) -> (Lempus(x) & Grimpus(y) & -Dumpus(z)))", "(all x y z.(Fae(x) -> Lempus(x)) & (Fae(y) -> Grimpus(y)) & (Fae(z) -> -Dumpus(z)))", "exists x.(Fae(x) & Lempus(x) & Grimpus(x) & -Dumpus(x))", "(all x y z.((Fae(x) & Lempus(x)) -> (Fae(y) & Grimpus(y)) & ((Fae(z) & Dumpus(z)) -> -Dumpus(z))))", "all x y z.(Fae(x) & Lempus(x) & Grimpus(y) & -Dumpus(z))", "all x.(Fae(x) -> (Lempus(x) & Grimpus(x) & -Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Grimpus(x)) & -Dumpus(x)))", "all x y z.(Fae(x) -> (Lempus(x) | Grimpus(y) | -Dumpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Grimpus(y)) & all z.(Fae(z) -> -Dumpus(z))))"]}
{"id": "prontoqa_train_800", "nl": "Each lorpus is a lempus.", "fol": "all x. (lorpus(x) -> lempus(x))", "prediction": ["all x.(Lorpus(x) -> Lempus(x))", "all x.(Lorpus(x) -> Lempus(x))", "all x y.((Lorpus(x) & Lempus(y)) -> HasLempus(x,y))", "all x.(Lorpus(x) -> Lempus(x))", "all x y.((Lorpus(x) & Lempus(y)) -> Lempus(x))", "(all x.(Lorpus(x) -> Lempus(x))", "all x y.((Lorpus(x) & Lempus(y)) -> Is(x,y))", "all x.(Lorpus(x) -> Lempus(x))", "all x.(Lorph(x) -> Lempus(x))", "exists x.(lorpus(x) & Lempus(x))", "all x.(Lorpus(x) -> Lempus(x))", "exists x.(Lorph(x) & Lempus(x))", "exists x.(lorpus(x) & Lempus(x))", "all x.(Lorpus(x) -> Lempus(x))", "all x.(Lorpus(x) -> Lempus(x))", "exists x.(Lorpus(x) & Lempus(x))"]}
{"id": "prontoqa_train_801", "nl": "Rex is not a lempus and Rex is a grimpus and Rex is a vumpus.", "fol": "(-lempus(Rex) & grimpus(Rex) & vumpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Lempus(x)) & (Grimpus(x) | Vumpus(x))))", "all x y z.((Rex(x) & Lempus(y) & Grimpus(z)) -> (-Lempus(x) & Grimpus(x) & Vumpus(x)))", "(all x.(Rex(x) -> -Lempus(x)) & all y.(Grimpus(y) -> Grouchpus(y))) & all z.(Vumpus(z) -> -Lempus(z)))", "all x.(Rex(x) -> (-Lempus(x) & Grimpus(x) & Vumpus(x)))", "(all x y z.((Rex(x) & Lempus(y) & Grimpus(z)) -> -Lempus(x)) & ((Rex(x) & Grimpus(x)) -> Vumpus(x)))", "(-Lempus(rex) & Grimpus(rex) & Vumpus(rex))", "all x y z.((Rex(x) & Lempus(y) & Grimpus(z)) -> (-Lempus(x) & Grimpus(x) & Vumpus(x)))", "all x y.((Rex(x) & Lempus(y) & Grimpus(y)) -> (-Lempus(x) & Grimpus(x) & Vumpus(x)))", "(all x y z.((Rex(x) & Lempus(y)) -> -Lempus(x)) & ((Rex(z) & Grimpus(z))) -> Vumpus(z)))", "all x y z.((Rex(x) & Lempus(y) & Grimpus(z) & Vumpus(x)) -> (-Lempus(x) & Grimpus(y) & Vumpus(z)))", "all x.(Rex(x) -> (-Lempus(x) & Grimpus(x) & Vumpus(x)))", "(all x.(Rex(x) -> -Lempus(x)) & (Grimpus(x) | Vumpus(x))))", "(all x y.(Rex(x) -> -Lempus(x)) & (Grimpus(y) | Vumpus(y)))", "(all x.(Rex(x) -> -Lempus(x)) & all y.(Grimpus(y) & -Vumpus(y)))", "(all x.(Rex(x) -> -Lempus(x)) & (Rex(x) -> Grimpus(x)) & (Rex(x) -> Vumpus(x)))", "all x y z.((Rex(x) & Lempus(y) & Grimpus(z)) -> (-Lempus(x) & Grimpus(x) & Vumpus(x)))"]}
{"id": "prontoqa_train_802", "nl": "Rex is not a lorpus.", "fol": "-lorpus(Rex)", "prediction": ["all x.(Rex(x) -> -Lorpus(x))", "Rex is not a lorpus.", "(-Lorpus(Rex))", "Rex is notLorpus(x)", "(Lorpus(Rex) & -Lorpus(Rex))", "all x.(Rex(x) -> -Lorpus(x))", "(-Lorpus(Rex))", "Rex is not a lorpus.", "-Lorpus(Rex)", "Rex is notLorpus(Rex)", "all x.(Rex(x) -> -Lorpus(x))", "Rex -Lorpus(Rex)", "Rex is not a lorpus.", "(-Lorpus(Rex))", "-Lorpus(Rex)", "-Lorpus(rex)"]}
{"id": "prontoqa_train_803", "nl": "Dumpuses are brimpuses.", "fol": "all x. (dumpus(x) -> brimpus(x))", "prediction": ["all x.(Dumpuse(x) -> Brimbus(x))", "all x.(Dumpuse(x) -> Brimpuse(x))", "all x y.((Dumpuse(x) & Brimpus(y)) -> (Brimpus(x) & -Brimpus(y)))", "all x.(Dumpuse(x) -> Brimpus(x))", "all x y.((Dumpuse(x) & Brimpus(y)) -> Is(x,y))", "(Brimpus(dumpus) & Brimpus(dumpus))", "all x.(Dumpuse(x) -> Brimpuse(x))", "all x.(Dumpuse(x) -> Brimbus(x))", "(Brimpus)", "all x.(Dumpuse(x) -> Brimpuse(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "(Brimpus)", "all x.(Dumpuse(x) -> Brimpuse(x))", "all x.(Dumpus(x) -> Brimpuse(x))", "all x.(Dumpuse(x) -> Brimbus(x))"]}
{"id": "prontoqa_train_804", "nl": "Sally is a rompus and Sally is not a brimpus and Sally is a lempus.", "fol": "(rompus(Sally) & -brimpus(Sally) & lempus(Sally))", "prediction": ["(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Brimpus(x)) & (Sally(x) -> Lempus(x)))", "all x y z.((Sally(x) & Rompus(x) & Brimpus(y) & Lempus(z)) -> (Rompus(x) & -Brimpus(y) & Lempus(z)))", "all x.(Sally(x) -> (Rompus(x) & -Brimpus(x) & Lempus(x)))", "(all x y.(Rompus(x) -> Sally(x)) & (Brimpus(y) -> -Sally(y)) & (Lempus(y) -> Sally(y)))", "all x y z.((Sally(x) & Rimpus(y) & Brimpus(z)) -> (Rompus(x) & -Brimpus(y) & Lempus(z)))", "all x y.((Sally(x) & Rompus(x) & -Brimpus(y)) -> Lempus(x))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Brimpus(x)) & (Sally(x) -> Lempus(x)))", "(all x.(Rompus(x) -> Sally(x)) & (-Brimpus(x) -> Sally(x)) & (Lempus(x) -> Sally(x)))", "(all x.(Sally(x) -> Rompus(x)) & (-Brimpus(x) & Lempus(x)))", "exists x.(Sally(x) & Rompus(x) & -Brimpus(x) & Lempus(x))", "all x.(Sally(x) -> (Rompus(x) & -Brimpus(x) & Lempus(x)))", "(all x y.(Rompus(x) -> Sally(x)) & (Brimpus(y) | Lempus(y))))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Brimpus(x)) & (Sally(x) -> Lempus(x)))", "all x y.((Sally(x) & Rompus(x)) -> (-Brimpus(y) & Lempus(x)))", "all x.(Sally(x) -> (Rompus(x) & -Brumpus(x) & Lempus(x)))", "(all x.(Sally(x) -> Rompus(x)) & (-Brimpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_805", "nl": "Impuses are wumpuses.", "fol": "all x. (impus(x) -> wumpus(x))", "prediction": ["all x.(Impus(x) -> Wumpus(x))", "all x.(Impuse(x) -> Wumpus(x))", "all x.(Impuse(x) -> Wumpus(x))", "all x y.((Impuse(x) & Wumpus(y)) -> Wumpus(x))", "all x.(Impuse(x) -> Wumpus(x))", "all x y.((Impuse(x) & Wumpus(y)) -> Wumpus(x))", "all x.(Impus(x) -> Wumpus(x))", "(all x.(Impuse(x) -> Wumpus(x)))", "(Wumpuse(impredator)", "all x.(Impuse(x) -> Wumpus(x))", "all x.(Impuse(x) -> Wumpus(x))", "(Wumpuse(impreneur)", "all x.(Impuse(x) -> Wumpus(x))", "all x.(Impus(x) -> Wumpus(x))", "all x.(Wumpus(x) -> Impuse(x))", "all x.(Impuse(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_806", "nl": "Sally is a vumpus, Sally is a sterpus, and Sally is not a wumpus.", "fol": "(vumpus(Sally) & sterpus(Sally) & -wumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> Sterpus(x)) & (Sally(x) -> -Wumpus(x)))", "all x y z.((Sally(x) & Vumpus(y) & Sterpus(z)) -> (Vumpus(x) & Sterpus(x) & -Wumpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & all y.(Sterpus(y) -> -Wumpus(y)))", "all x y z.((Sally(x) & Vumpus(x) & Sterpus(y) & -Wumpus(z)) -> (Vumpus(x) & Sterpus(y) & -Wumpus(z)))", "(all x y z.((Sally(x) & Vumpus(y) & Sterpus(z)) -> (Vumpus(x) & Sterpus(z) & -Wumpus(x)))", "all x.(Sally(x) -> (Vumpus(x) & Sterpus(x) & -Wumpus(x)))", "(Vumpus(Sally) & Sterpus(Sally) & -Wumpus(Sally))", "(all x.(Sally(x) -> Vumpus(x)) & all y.(Sally(y) -> Sterpus(y)) & all z.(Sally(z) -> -Wumpus(z))))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> Sterpus(x)) & -Wumpus(x)))", "all x y z.((Sally(x) & Vumpus(y) & Sterpus(z)) -> (Vumpus(x) | Sterpus(x) | -Wumpus(x)))", "(all x y z.((Sally(x) & Vumpus(y) & Sterpus(z)) -> (Vumpus(x) | Sterpus(z)) | -Wumpus(x)))", "all x.(Sally(x) -> (Vumpus(x) & Sterpus(x) & -Wumpus(x)))", "all x y z.((Sally(x) & Vumpus(x) & Sterpus(y) & -Wumpus(z)) -> (Vumpus(x) | Sterpus(y) & -Wumpus(z)))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> Sterpus(x)) & (Sally(x) -> -Wumpus(x)))", "exists x.(Sally(x) & Vumpus(x) & Sterpus(x) & -Wumpus(x))", "(all x.(Sally(x) -> Vumpus(x)) & all y.(Sterpus(y) -> -Wumpus(y)))"]}
{"id": "prontoqa_train_807", "nl": "Rex is a zumpus and Rex is not a yumpus and Rex is a grimpus.", "fol": "(zumpus(Rex) & -yumpus(Rex) & grimpus(Rex))", "prediction": ["(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> -Yumpus(x)) & (Rex(x) -> Grimpus(x)))", "all x y z.((Rex(x) & Zumpus(x) & Rex(y) & Grimpus(z)) -> (-Yumpus(y) & -Yumpus(z)))", "all x y.((Rex(x) & Zumpus(x) & Rex(y)) -> (-Yumpus(y) & Grimpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> -Yumpus(x)) & (Rex(x) -> Grimpus(x)))", "(all x y z.((Rex(x) & Zumpus(x)) -> (Yumpus(y) & Grimpus(z))))", "(all x y.(Rex(x) -> Zumpus(x)) & (Rex(y) -> -Yumpus(y)) & (Rex(y) -> Grimpus(y)))", "(all x.(Rex(x) -> Zumpus(x)) & (-Yumpus(x)) & (-Yumpus(x) & -Grimpus(x))))", "all x y z.((Rex(x) & Zumpus(x) & Rex(y) & Grimpus(z)) -> (-Yumpus(y) & Grimpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> -Yumpus(y))) & all z.(Rex(z) -> Grimpus(z)))", "all x.(Rex(x) -> (Tompus(x) | -Yumpus(x) | Grimpus(x)))", "all x y.((Rex(x) & Tompus(x) & -Yumpus(y)) -> Grimpus(x))", "all x.(Rex(x) -> (Tompus(x) & -Yumpus(x) & Grimpus(x)))", "all x y z.((Rex(x) & Tompus(x) & Rex(y) & Grimpus(z)) -> (-Yumpus(y) & -Yumpus(z)))", "all x y z.((Rex(x) & Zumpus(x) & Rex(y) & Grimpus(z)) -> (-Yumpus(y) & -Yumpus(z)))", "(all x y.(Rex(x) -> Zumpus(x)) & (Rex(y) -> -Yumpus(y)) & (Rex(y) -> Grimpus(y)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> -Yumpus(x)) & (Rex(x) -> Grimpus(x)))"]}
{"id": "prontoqa_train_808", "nl": "Rex is not a jompus.", "fol": "-jompus(Rex)", "prediction": ["all x.(Rex(x) -> -Jompus(x))", "(-Jompus(Rex))", "Rex is not a Jompus.", "(Jompus(Rex) & -Jompus(Rex))", "Rex is not a Jompus.", "all x.(Rex(x) -> -Jompus(x))", "-Jompus(Rex)", "Rex -Jompus(x)", "Rex is not Jompus.", "(-Jimpus(Rex))", "Rex is not a Jompus.", "(-Jompus(Rex))", "all x.(Rex(x) -> -Jompus(x))", "Rex is not a jompus.", "-Jompus(Rex)", "-Jompus(Rex)"]}
{"id": "prontoqa_train_809", "nl": "Each grimpus is a shumpus.", "fol": "all x. (grimpus(x) -> shumpus(x))", "prediction": ["all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x y.((Grimpus(x) & Grimpus(y)) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "(all x.(Grimpus(x) -> Humpus(x))", "all x y.((Grimpus(x) & Grimpus(y)) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Slumpus(x) -> Grimpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "exists x.(Gravity(x) & Grimpus(x) & Shumpus(x))", "all x.(Grampus(x) -> Shumpus(x))", "exists x.(Grimpus(x) & Humpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "exists x.(Grimpus(x) & Humpus(x))", "exists x.(Grimpus(x) & Shumpus(x))"]}
{"id": "prontoqa_train_810", "nl": "Fae is a gorpus and Fae is not a shumpus and Fae is a brimpus.", "fol": "(gorpus(Fae) & -shumpus(Fae) & brimpus(Fae))", "prediction": ["(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Brimpus(x)))", "all x y z.((Fae(x) & Gorpus(x) & Fae(y) & Humpus(z)) -> (-Shumpus(y) & Brimpus(z)))", "(all x y z.((Fae(x) & Gorpus(x)) -> Gorpus(x)) & ((Fae(y) & -Shumpus(y)) -> Brimpus(y)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Brimpus(x)))", "all x y.((Fae(x) & Gorpus(x) & Fae(y)) -> (-Shumpus(y) & Brimpus(y)))", "(all x y.(Fae(x) -> Gorpus(x)) & (Fae(y) -> -Shumpus(y)) & (Fae(y) -> Brimpus(y)))", "all x.(Fae(x) -> (Gorpus(x) & -Shumpus(x) & Brimpus(x)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Brimpus(x)))", "all x y z.((Fae(x) & Gorpus(x) & Fae(y) & Humpus(z)) -> (-Shumpus(y) & Brimpus(y)))", "all x y.((Fae(x) & Gorpus(x)) -> (-Shumpus(x) & Brimpus(y)))", "all x y z.((Fae(x) & Gorpus(x) & Fae(y) & Brimpus(z)) -> (-Shumpus(y) & -Shumpus(y) & Brimpus(z)))", "exists x.(Fae(x) & Gorpus(x) & -Shumpus(x) & Brimpus(x))", "all x.(Fae(x) -> (Gorpus(x) & -Shumpus(x) & Brimpus(x)))", "(all x y.(Fae(x) -> Gorpus(x)) & (Fae(y) -> -Shumpus(y)) & (Fae(y) -> Brimpus(y)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Brimpus(x)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Brimpus(x)))"]}
{"id": "prontoqa_train_811", "nl": "Fae is not a grimpus.", "fol": "-grimpus(Fae)", "prediction": ["all x.(Fae(x) -> -Grimpus(x))", "-Grimpus(Fae)", "(Fae isn'tGrimpus(Fae))", "(-Grimpus(Fae))", "all x.(Fae(x) -> -Grimpus(x))", "Fae is not a Grimpus.", "Fae is notGrimpus(f)", "(Fae, -Grimpus(Fae))", "-Gruppus(Fae)", "-Grimpus(Fae)", "all x.(Fae(x) -> -Grimpus(x))", "(-Grimpus(Fae))", "all x.(Fae(x) -> -Grimpus(x))", "-Grimpus(fae)", "(-Grimpus(Fae))", "-Grimpus(Fae)"]}
{"id": "prontoqa_train_812", "nl": "Every grimpus is a rompus.", "fol": "all x. (grimpus(x) -> rompus(x))", "prediction": ["all x.(Grimpus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "exists x y.(Grimpus(x) & Grimpus(y) & Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Sgrimpus(x) -> Rompus(x))", "all x.(Gruppus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "exists x y.(Grimpus(x) & Grimpus(y) & Rompus(x))", "all x.(Rompus(x) -> Grimpus(x))", "(all x.(Grimpus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Grumpsps(x) -> Rompus(x))", "all x.(Sgrimpus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Rompus(x) -> Grimpus(x))", "exists x.(Grampus(x) & Rompus(x))"]}
{"id": "prontoqa_train_813", "nl": "Stella is not a rompus and Stella is a lempus and Stella is a gorpus.", "fol": "(-rompus(Stella) & lempus(Stella) & gorpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Rompus(x)) & all y.(Lempus(y) & Gorpus(y)))", "all x y z.((Stella(x) & Rompus(y) & Lempus(z)) -> (-Rompus(x) & Lempus(x) & Gorpus(x)))", "(all x y z.((Stella(x) & Rompus(y)) -> -Rompus(x)) & ((Stella(z) & Lempus(z))) -> Gorpus(z)))", "(all x.(Stella(x) -> -Rompus(x)) & (Lempus(x) | Gorpus(x))))", "all x.(Stella(x) -> (-Rompus(x) & Lempus(x) & Gorpus(x)))", "all x y.((Stella(x) & Rompus(y)) -> (-Rompus(x) & Lempus(y) & Gorpus(x)))", "(all x y.(Rompus(x) -> -Rompus(x)) & (Lempus(y) -> Gorpus(y)))", "(all x.(Stella(x) -> -Rompus(x)) & all y.(Stella(y) -> Lempus(y)) & all z.(Stella(z) -> Gorpus(z))))", "all x y z.((Stella(x) & Rompus(y) & Lempus(z)) -> (-Rompus(x) & Lempus(y) & Gorpus(z)))", "exists x.(Stella(x) & -Rompus(x) & Lempus(x) & Gorpus(x))", "(all x y z.((Stella(x) & Rompus(y)) -> -Rompus(x)) & ((Stella(z) & Lempus(z))) -> Gorpus(z)))", "all x y.((Stella(x) & Rompus(y)) -> (-Rompus(x) & Lempus(y) & Gorpus(x)))", "all x y z.((Stella(x) & Rompus(y) & Lempus(z)) -> (-Rompus(x) & Lempus(x) & Gorpus(x)))", "(all x.(Stella(x) -> -Rompus(x)) & (Lempus(x) | Gorpus(x))))", "all x y z.((Stella(x) & Rompus(y) & Lempus(z)) -> (-Rompus(x) & Lempus(y) & Gorpus(z)))", "(all x.(Stella(x) -> -Rompus(x)) & all y.(Lempus(y) & Gorpus(y)))"]}
{"id": "prontoqa_train_814", "nl": "Each grimpus is a lorpus.", "fol": "all x. (grimpus(x) -> lorpus(x))", "prediction": ["all x.(Grimpus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x y.((Grimpus(x) & Lorpus(y)) -> Is(x,y))", "(all x.(Grimpus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x y.((Grimpus(x) & Lorpus(y)) -> Grimpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x.(Sgrimpus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x.(Grampus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lordus(x))", "exists x.(Gravity(x) & Lord(x))", "all x.(Grampus(x) -> Lorpus(x))", "exists x.(Grimpus(x) & Lordus(x))", "exists x.(Grimpus(x) & Lordus(x))", "exists x.(Grampus(x) & Lorpus(x))"]}
{"id": "prontoqa_train_815", "nl": "Max is a numpus and Max is a dumpus and Max is not a lorpus.", "fol": "(numpus(Max) & dumpus(Max) & -lorpus(Max))", "prediction": ["(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> -Lorpus(x)))", "all x y z.((Max(x) & Numpus(x) & Dumpus(y) & -Lorpus(z)) -> (Numpus(x) & Dumpus(y) & -Lorpus(z)))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> -Lorpus(z))))", "all x y.((Max(x) & Numpus(x) & Dumpus(y)) -> (-Lorpus(x)))", "all x.(Max(x) -> (numpus(x) & dumpus(x) & -lorpus(x)))", "(all x y.((Max(x) & Numpus(x)) -> Dumpus(x)) & ((Max(y) & -Lorpus(y)) -> Dumpus(y)))", "(all x y z.((Max(x) & Numpus(y) & Dumpus(z)) -> Numpus(x)) & ((Max(x) & Dumpus(x)) -> -Lorpus(x)))", "(numpus(Max) & dumpus(Max) & -lorpus(Max))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> -Lorpus(x)))", "all x.(Max(x) -> (Numpus(x) & Dumpus(x) & -Lorpus(x)))", "all x y z.((Max(x) & Numpus(x) & Dumpus(y) & -Lorpus(z)) -> (Numpus(x) & Dumpus(y) & -Lorpus(z)))", "all x y.((Max(x) & Numpus(x) & Dumpus(y)) -> (-Lorpus(x)))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> -Lorpus(z))))", "(all x y.((Max(x) & Numpus(x)) -> Dumpus(x)) & ((Max(y) & -Lorpus(y))) -> Dumpus(y)))", "all x.(Max(x) -> (Numpus(x) & Dumpus(x) & -Lorpus(x)))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> -Lorpus(x)))"]}
{"id": "prontoqa_train_816", "nl": "Wumpuses are tumpuses.", "fol": "all x. (wumpus(x) -> tumpus(x))", "prediction": ["all x.(Wumpus(x) -> Tumpus(x))", "all x.(Wumpus(x) -> Tumpus(x))", "all x.(Wumpuse(x) -> Tumpus(x))", "all x y.((Wumpus(x) & Tumpus(y)) -> Tumpus(x))", "all x y.((Wumpuse(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Wumpus(x) -> Tumpus(x))", "all x.(Wumpuse(x) -> Tumpus(x))", "(Tumpuse(wumpuse)", "(all x.(Wumpus(x) -> Tumpus(x)))", "(Tumpuse(wumpuses)", "all x.(Wumpus(x) -> Tumpus(x))", "all x.(Wumpuse(x) -> Tumpus(x))", "all x.(Wumpus(x) -> Tumpus(x))", "all x.(Wumpuse(x) -> Tumulus(x))", "all x.(Wumpus(x) -> Tumulus(x))", "All x.(Wumpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_817", "nl": "Polly is not a tumpus and Polly is a yumpus and Polly is a rompus.", "fol": "(-tumpus(Polly) & yumpus(Polly) & rompus(Polly))", "prediction": ["(all x.(Polly(x) -> -Tumpus(x)) & (Polly(x) -> Yumpus(x)) & (Polly(x) -> Rompus(x)))", "all x y z.((Polly(x) & Tompus(y) & Yampus(z)) -> (-Tumpus(x) & -Yumpus(y) & -Rompus(z)))", "(all x.(Polly(x) -> -Tumpus(x)) & all y.(Polly(y) -> Yampus(y))) & all z.(Polly(z) -> Rompus(z)))", "(all x.(Polly(x) -> -Tumpus(x)) & (Polly(x) -> Yumpus(x)) & (Polly(x) -> Rompus(x)))", "(all x y z.((Polly(x) & Tumpus(y)) -> -Tumpus(x)) & ((Polly(z) & Yampus(z))) -> Rompus(z)))", "all x y z.((Polly(x) & Tumpus(y) & Yampus(z)) -> (-Tumpus(x) & -Yumpus(y) & -Rompus(z)))", "all x.(Polly(x) -> (-Tumpus(x) & (Yumpus(x) | Rompus(x))))", "(all x y z.((Polly(x) & Tumpus(y) & Yampus(z)) -> -Tumpus(x)) & ((Polly(x) & Yampus(x)) -> Rompus(x)))", "all x y.((Polly(x) & Polly(y)) -> (-Tumpus(x) & Yampus(y) & Rompus(y)))", "(all x.(Polly(x) -> -Tumpus(x)) & all y.(Polly(y) -> Yampus(y))) & all z.(Polly(z) -> Rompus(z)))", "all x y z.((Polly(x) & Tompus(y) & Yampus(z)) -> (-Tumpus(x) & Yampus(y) & Rompus(z)))", "(all x y.(Tumpus(x) -> Polly)) & (Yumpus(y) -> Polly)) & (Rompus(y) -> Polly)))", "(all x.(Polly(x) -> -Tumpus(x)) & (Polly(x) -> Yampus(x)) & (Polly(x) -> Rompus(x)))", "exists x.(Polly(x) & -Tumpus(x) & exists yumpus(y) & exists z.(Rompus(z) & Polly(x))))", "all x y z.((Polly(x) & Tomb(y) & Yampus(z)) -> (-Tumpus(x) & -Yumpus(y) & -Rompus(z)))", "all x y z.((Polly(x) & Tomb(y) & Yampus(z)) -> (-Tumpus(x) & Yampus(y) & Rompus(z)))"]}
{"id": "prontoqa_train_818", "nl": "Each numpus is a dumpus.", "fol": "all x. (numpus(x) -> dumpus(x))", "prediction": ["all x.(Numpus(x) -> Dumpus(x))", "all x.(Nompus(x) -> Dumpus(x))", "(all x.(Numpus(x) -> Dumpus(x)))", "all x y.((Numpus(x) & Dumpus(y)) -> Has(x,y))", "all x.(Numpus(x) -> Dumpus(x))", "all x y.((Numpus(x) & Dumpus(y)) -> Is(x,y))", "exists x.(Numerus(x) & Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Nompus(x) -> Dumpus(x))", "exists x.(numpus(x) & Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Nompus(x) -> Dumpus(x))", "exists x.(Numpus(x) & Puss(x))", "all x.(Numpus(x) -> Dumpus(x))", "exists x.(Nompus(x) & Puss(x))"]}
{"id": "prontoqa_train_819", "nl": "Fae is not a dumpus, Fae is a brimpus, and Fae is a tumpus.", "fol": "(-dumpus(Fae) & brimpus(Fae) & tumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Dumpus(x)) & (Fae(x) -> Brimpus(x)) & (Fae(x) -> Tumpus(x)))", "all x y z.((Fae(x) & Brimpus(y) & Tumpus(z)) -> (-Dumpus(x) & Brimpus(y) & Tumpus(z)))", "(all x y z.((Fae(x) & Dumpus(y)) -> -Dumpus(x)) & ((Fae(z) & Brimpus(z)) -> Tumpus(z)))", "(all x.(Fae(x) -> -Dumpus(x)) & all y.(Fae(y) -> Brimpus(y)) & all z.(Fae(z) -> Tumpus(z))))", "all x.(Fae(x) -> (-Dumpus(x) & Brimpus(x) & Tumpus(x)))", "(exists x.(Fae(x) & -Dumpus(x)) & exists y.(Brimpus(y) & Brimpus(y)) & exists z.(Tumpus(z) & Fae(z) & -Dumpus(z))))", "all x y z.((Fae(x) & Brimpus(y) & Tumpus(z)) -> (-Dumpus(x) & Brimpus(y) & Tumpus(z)))", "(all x.(Fae(x) -> -Dumpus(x)) & (Brimpus(x) | Tumpus(x))))", "all x y z.(Fae(x) & Dumpus(y) & Brimpus(z) & Tumpus(x))", "(all x y z.((Fae(x) & Dumpus(y)) -> -Dumpus(x)) & ((Fae(z) & Brimpus(z)) -> Tumpus(z)))", "exists x.(Fae(x) & -Dumpus(x) & Brimpus(x) & Tumpus(x))", "(all x.(Fae(x) -> -Dumpus(x)) & all y.(Fae(y) -> Brimpus(y)) & all z.(Fae(z) -> Tumpus(z))))", "all x y z.(Fae(x) -> (-Dumpus(x) & Brimpus(y) & Tumpus(z)))", "all x y z.((Fae(x) & Brimpus(y) & Tumpus(z)) -> (-Dumpus(x) & Brimpus(y) & Tumpus(z)))", "(all x y z.((Fae(x) & Dumpus(y)) -> -Dumpus(x)) & ((Fae(z) & Brimpus(z))) -> Tumpus(z)))", "(all x.(Fae(x) -> -Dumpus(x)) & (Brimpus(x) & Tumpus(x)))"]}
{"id": "prontoqa_train_820", "nl": "Rex is not a jompus and Rex is a wumpus and Rex is a numpus.", "fol": "(-jompus(Rex) & wumpus(Rex) & numpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Jompus(x)) & all y.(Wumpus(y) & -Nompus(y))))", "all x y z.((Rex(x) & Jompus(y) & Wumpus(z)) -> (-Jompus(x) & Wumpus(x) & Numpus(x)))", "(-Jompus(Rex) & Wumpus(Rex) & Numpus(Rex))", "(all x.(Rex(x) -> -Jompus(x)) & (Wumpus(x) | Numpus(x))))", "all x y.((Rex(x) & Jompus(y) & Wumpus(y)) -> (-Jompus(x) & Wumpus(x) & Numpus(x)))", "(all x y z.((Rex(x) & Jompus(y) & Wumpus(z)) -> -Jompus(x)) & ((Rex(x) & Wumpus(x)) -> Numpus(x)))", "all x.(Rex(x) -> (-Jompus(x) & Wumpus(x) & Numpus(x)))", "(all x y.(Jompus(x) -> -Jompus(x)) & (Wumpus(y) -> Numpus(y)))", "all x y z.((Rex(x) & Jompus(y) & Wumpus(z)) -> (-Jompus(x) & Wumpus(y) & Numpus(z)))", "(-Jompus(Rex) & Wumpus(Rex) & Numpus(Rex))", "(all x.(Rex(x) -> -Jompus(x)) & all y.(Wumpus(y) & Numpus(y)))", "all x.(Rex(x) -> (-Jompus(x) & Wumpus(x) & Numpus(x)))", "all x y z.((Rex(x) & Jompus(y) & Wumpus(z)) -> (-Jompus(x) & Wumpus(x) & Numpus(x)))", "all x y z.((Rex(x) & Jompus(y) & Wumpus(z) & Numpus(x)) -> (-Jompus(x) & Wumpus(y) & Numpus(z)))", "(all x.(Rex(x) -> -Jompus(x)) & (Wumpus(x) | Numpus(x))))", "(all x.(Rex(x) -> -Jompus(x)) | (Wumpus(x) & Numpus(x))))"]}
{"id": "prontoqa_train_821", "nl": "Stella is a brimpus, Stella is a lorpus, and Stella is not a rompus.", "fol": "(brimpus(Stella) & lorpus(Stella) & -rompus(Stella))", "prediction": ["(all x.(Stella(x) -> Brimpus(x)) & (Stella(x) -> Lorpus(x)) & (Stella(x) -> -Rompus(x)))", "all x y z.((Stella(x) & Brimpus(x) & Lorpus(y) & -Rompus(z)) -> (Brimpus(x) & Lorpus(y) & -Rompus(z)))", "(all x.(Stella(x) -> Brimpus(x)) & all y.(Stella(y) -> Lorpus(y)) & all z.(Stella(z) -> -Rompus(z))))", "(all x y z.((Stella(x) & Brimpus(x)) -> (Brimpus(x) | Lorpus(x))) & ((Stella(y) & Rompus(z)) -> -Rompus(y)))", "all x.(Stella(x) -> (Brimpus(x) & Lorpus(x) & -Rompus(x)))", "all x y z.((Stella(x) & Brimpus(x) & Lorpus(y) & -Rompus(z)) -> (Brimpus(x) & Lorpus(y) & -Rompus(z)))", "(all x.(Stella(x) -> Brimpus(x)) & (Stella(x) -> Lorpus(x)) & -Rompus(x)))", "all x y z.((Stella(x) & Brimpus(y) & Lorpus(z)) -> (Brimpus(x) & Lorpus(x) & -Rompus(x)))", "(all x.(Brimpus(x) -> Stella(x)) & (Lorpus(x) -> Stella(x)) & -Rompus(x)))", "(all x y z.((Stella(x) & Brimpus(y)) -> (Brimpus(z) | Lorpus(z))) & ((Stella(x) & Rompus(x)) -> -Rompus(x)))", "(all x.(Stella(x) -> Brimpus(x)) & all y.(Lorpus(y) -> -Rompus(y)))", "(all x y z.(Brimpus(x) -> Stella(x)) & (Lorpus(y) -> Stella(z)) & (Rompus(z) -> Stella(z)))", "all x y z.(Brimpus(x) & Brimpus(y) & Lorpus(z) & -Rompus(z))", "all x.(Stella(x) -> (Brimpus(x) | Lorpus(x) | -Rompus(x)))", "all x y z.((Stella(x) & Brimpus(x) & Lorpus(y) & -Rompus(z)) -> (Brimpus(x) | Lorpus(y) & -Rompus(z)))", "(all x.(Stella(x) -> Brimpus(x)) & (Stella(x) -> Lorpus(x)) & (Stella(x) -> -Rompus(x)))"]}
{"id": "prontoqa_train_822", "nl": "Rex is a brimpus and Rex is a lorpus and Rex is not a rompus.", "fol": "(brimpus(Rex) & lorpus(Rex) & -rompus(Rex))", "prediction": ["(all x.(Rex(x) -> Brimpus(x)) & (Rex(x) -> Lorpus(x)) & (Rex(x) -> -Rompus(x)))", "all x y z.((Rex(x) & Brimpus(x) & Lorpus(y) & -Rompus(z)) -> (Brimpus(x) & Lorpus(y) & -Rompus(z)))", "(all x.(Rex(x) -> Brimpus(x)) & all y.(Rex(y) -> Lorpus(y)) & all z.(Rex(z) -> -Rompus(z))))", "all x y.((Rex(x) & Brimpus(x) & Lorpus(y)) -> (Brimpus(x) & -Rompus(y)))", "(all x y.(Brimpus(x) -> Brimpus(x)) & (Lorpus(y) -> Lorpus(y)) & (Rompus(y) -> -Rompus(y)))", "(all x y z.((Rex(x) & Brimpus(x)) -> (Brimpus(x) & Lorpus(y))) & ((Rex(z) & Rompus(z)) -> -Rompus(z)))", "all x.(Rex(x) -> (Brimpus(x) & Lorpus(x) & -Rompus(x)))", "all x y z.((Rex(x) & Brimpus(x) & Lorpus(y) & -Rompus(z)) -> (Brimpus(x) & Lorpus(y) & -Rompus(z)))", "(Brimpus(rex) & Lorpus(rex) & -Rompus(rex))", "(all x.(Rex(x) -> Brimpus(x)) & (Rex(x) -> Lorpus(x)) & (Rex(x) -> -Rompus(x)))", "all x y z.((Rex(x) & Brimpus(y) & Lorpus(z)) -> (Brimpus(x) | Lorpus(x) | -Rompus(x)))", "(all x.(Rex(x) -> Brimpus(x)) & all y.(Lorpus(y) -> -Rompus(y)))", "all x y.((Rex(x) & Brimpus(x) & Lorpus(y)) -> (Brimpus(x) & -Rompus(x)))", "(all x y.(Brimpus(x) -> Rex)) & (Lorpus(y) -> Rex)) & (Rompus(y) -> -Rex)))", "(all x.(Rex(x) -> Brimpus(x)) & (Lorpus(x) -> Lorpus(x)) & (Rompus(x) -> -Rompus(x)))", "all x.(Rex(x) -> (Brimpus(x) & Lorpus(x) & -Rompus(x)))"]}
{"id": "prontoqa_train_823", "nl": "Rex is not a shumpus.", "fol": "-shumpus(Rex)", "prediction": ["(-Shumpus(Rex))", "Rex is notShumpus(x)", "all x.(Rex(x) -> -Shumpus(x))", "Rex is notShumpus(x)", "(-Shumpus(Rex))", "Rex is not a shumpus.", "all x.(Rex(x) -> -Shumpus(x))", "-Shumpus(Rex)", "Rex is notShumpus(Rex)", "all x.(Rex(x) -> -Shumpus(x))", "(-Shumpus(Rex))", "Rex -Shumpus(Rex)", "all x.(Rex(x) -> -Shumpus(x))", "-Shumpus(Rex)", "(-Shumpus(Rex)).", "-Shumpus(rex)"]}
{"id": "prontoqa_train_824", "nl": "Every numpus is a rompus.", "fol": "all x. (numpus(x) -> rompus(x))", "prediction": ["all x.(Nompus(x) -> Rompus(x))", "all x.(Nompus(x) -> Rompus(x))", "(all x.(Nompus(x) -> Rompus(x))", "all x y.((Numpus(x) & Rompus(y)) -> Is(x,y))", "all x.(Numpus(x) -> Rompus(x))", "all x y.((Nompus(x) & Rompus(y)) -> Has(x,y))", "all x.(Numpus(x) -> Rompus(x))", "exists x.(numpus(x) & Rompus(x))", "all x.(Nompus(x) -> Rompus(x))", "exists x.(Numerus(x) & Rompus(x))", "all x.(Numpus(x) -> Rompus(x))", "all x.(Numpus(x) -> Rompus(x))", "all x.(Nompus(x) -> Rompus(x))", "all x.(Numpus(x) -> Romanus(x))", "all x.(Numpus(x) -> Rompus(x))", "exists x.(Nompus(x) & Roman(x))"]}
{"id": "prontoqa_train_825", "nl": "Polly is a wumpus, Polly is not a rompus, and Polly is an impus.", "fol": "(wumpus(Polly) & -rompus(Polly) & impus(Polly))", "prediction": ["(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> -Rompus(x)) & (Polly(x) -> Imperator(x)))", "all x y z.((Polly(x) & Wumpus(y) & Rompus(z)) -> (Wumpus(x) & -Rompus(y) & Imperator(z)))", "(all x y z.((Polly(x) & Wumpus(y)) -> Wumpus(x)) & ((Polly(z) & -Rompus(z))) -> Imperator(z)))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> -Rompus(y))) & all z.(Polly(z) -> Imperator(z)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> -Rompus(x)) & (Polly(x) -> Imperator(x)))", "all x y z.((Polly(x) & Wumpus(y) & Rompus(z)) -> (Wumpus(x) | -Rompus(y) | Imperator(z)))", "all x y z.((Polly(x) & Rumpus(y) & Impossible(z)) -> (Wumpus(x) & -Rompus(y) & Imperator(z)))", "exists x.(Polly(x) & Wumpus(x) & -Rompus(x) & Imperator(x))", "all x y z.((Polly(x) & Rumpus(y) & Imperator(z)) -> (Wumpus(x) | -Rompus(y) | -Impossible(z)))", "(all x.(Wumpus(x) -> Polly)) & (-Rompus(x) -> Polly(x)) & (-Rompus(x) -> Polly(x)))", "(all x y z.((Polly(x) & Wumpus(y)) -> Wumpus(x)) & ((Polly(z) & -Rompus(z))) -> Imperator(z)))", "all x.(Polly(x) -> (Wumpus(x) & -Rompus(x) & Imperator(x)))", "(all x y.(Wumpus(x) -> Polly(x)) & (Rompus(y) -> Polly(y)))", "all x y z.((Polly(x) & Wumpus(x) & Polly(y) & Rompus(z)) -> (Wumpus(x) & -Rompus(y) & Imperator(z)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> -Rompus(x)) & (Polly(x) -> Impossible(x)))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> -Rompus(y))) & all z.(Polly(z) -> Imperator(z)))"]}
{"id": "prontoqa_train_826", "nl": "Every zumpus is a tumpus.", "fol": "all x. (zumpus(x) -> tumpus(x))", "prediction": ["all x.(Zumpus(x) -> Tumpus(x))", "all x.(Tompus(x) -> Tumpus(x))", "all x y.((Zumpus(x) & Tumpus(y)) -> Has(x,y))", "all x.(Zumpus(x) -> Tumpus(x))", "(all x.(Zumpus(x) -> Tumpus(x)))", "all x y.((Zumpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Tompus(x) -> Tumpus(x))", "all x.(Zumpus(x) -> Tumpus(x))", "all x.(Tompus(x) -> Tumulus(x))", "all x.(Zumpus(x) -> Tumpus(x))", "all x.(Zumpus(x) -> Tumpus(x))", "all x.(Tompus(x) -> Tumpus(x))", "all x.(Zumpus(x) -> Tumpus(x))", "all x.(Tompus(x) -> Tumpus(x))", "exists x.(Zumpus(x) & Tumulus(x))", "exists x.(Zumpus(x) & Tumpus(x))"]}
{"id": "prontoqa_train_827", "nl": "Wren is not a tumpus, Wren is a yumpus, and Wren is a rompus.", "fol": "(-tumpus(Wren) & yumpus(Wren) & rompus(Wren))", "prediction": ["(all x.(Wren(x) -> -Tumpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Rompus(z))))", "all x y z.((Wren(x) & Yampus(y) & Rompus(z)) -> (-Tumpus(x) & -Yumpus(y) & -Rompus(z)))", "(all x y z.((Wren(x) & Tumpus(y)) -> -Tumpus(x)) & ((Wren(z) & Yumpus(z)) -> Rompus(z)))", "(all x.(Wren(x) -> -Tumpus(x)) & (Yumpus(x) & Rompus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Rompus(z)) -> (-Tumpus(x) & -Yumpus(y) & -Tumpus(z) & -Yumpus(y) & -Rompus(z)))", "(all x.(Wren(x) -> -Tumpus(x)) & all y.(Wren(y) -> Yampus(y))) & all z.(Wren(z) -> Rompus(z)))", "(all x y z.((Wren(x) & Tumpus(y) & Yampus(z)) -> -Tumpus(x)) & ((Wren(x) & Yampus(x)) -> Rompus(x)))", "all x.(Wren(x) -> (-Tumpus(x) & -Yumpus(x) & -Rompus(x)))", "(all x y z.((Wren(x) & Tumpus(y)) -> -Tumpus(x)) & ((Wren(z) & Yampus(z))) -> Rompus(z)))", "all x y z.((Wren(x) & Yampus(y) & Rompus(z)) -> (-Tumpus(x) & Yampus(y) & Rompus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Rupus(z)) -> (-Tumpus(x) & -Yumpus(y) & -Rompus(z)))", "(all x.(Wren(x) -> -Tumpus(x)) & (Yumpus(x) | Rompus(x))))", "all x y z.((Wren(x) & Yampus(y) & Rompus(z)) -> (-Tumpus(x) | (Yumpus(y) & Rompus(z))))", "(all x.(Wren(x) -> -Tumpus(x)) & all y.(Wren(y) -> Yumpus(y))) & all z.(Wren(z) -> Rompus(z)))", "all x y z.((Wren(x) & Yumpa(y) & Ruppus(z)) -> (-Tumpus(x) & -Yumpus(y) & -Rompus(z)))", "(all x.(Wren(x) -> -Tumpus(x)) & (Yumpus(x) | Rompus(x))))"]}
{"id": "prontoqa_train_828", "nl": "Each yumpus is a tumpus.", "fol": "all x. (yumpus(x) -> tumpus(x))", "prediction": ["all x.(Yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Tumpus(x))", "exists x y.(Yumpus(x) & Tumpus(y))", "all x.(Yumpus(x) -> Tumpus(x))", "exists x y.(Yumpus(x) & Tumpus(y) & HasTumpus(x))", "all x.(Yumpus(x) -> Tumpus(x))", "exists x y.(Yumpus(x) & Tumpus(y) & Contains(x,y))", "all x.(Yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Tumulus(x))", "all x.(Yumpus(x) -> Tumpus(x))", "exists x.(Yumpus(x) & Tumpus(x))", "all x.(yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_829", "nl": "Stella is not a tumpus, Stella is an impus, and Stella is a brimpus.", "fol": "(-tumpus(Stella) & impus(Stella) & brimpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Issue(y)) & all z.(Stella(z) -> Brimpus(z))))", "all x y z.((Stella(x) & Tompus(y) & Imperator(z)) -> (-Tumpus(x) & Imperator(x) & Brimpus(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & (Stella(x) -> Issue(x)) & (Stella(x) -> Brimpus(x)))", "all x.(Stella(x) -> (-Tumpus(x) & Issue(x) & Brimpus(x)))", "(all x y z.((Stella(x) & Tumpus(y)) -> -Tumpus(x)) & ((Stella(z) & Imperator(z)) -> Brimpus(z)))", "all x y z.((Stella(x) & Tompkin(y) & Issue(z)) -> (-Tumpus(x) & Issue(x) & Brimpus(x)))", "all x y z.((Stella(x) & Tompus(y) & Impossible(z)) -> (-Tumpus(x) & -Brimpus(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Issue(y)) & all z.(Stella(z) -> Brimpus(z))))", "all x.(Stella(x) -> (-Tumpus(x) & Issue(x) & Brimpus(x)))", "(all x y z.((Stella(x) & Tumpus(y)) -> -Tumpus(x)) & ((Stella(z) & Impossible(z)) -> Brimpus(z)))", "exists x.(Stella(x) & -Tumpus(x) & Imperator(x) & Brimpus(x))", "all x y z.((Stella(x) & Tumpus(y) & Imperator(z)) -> (-Tumpus(x) & Imperator(x) & Brimpus(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & (Stella(x) -> Issue(x)) & (Stella(x) -> Brimpus(x)))", "all x y z.((Stella(x) & Tompus(y) & Is(z) & Brimpus(x)) -> (-Tumpus(x) & Is(x,y) & Is(x,z)))", "(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Issue(y))) & all z.(Stella(z) -> Brimpus(z)))", "(all x.(Tumpus(x) -> -Tumpus(x)) & (Impossible(x) -> Stella(x))) & (Brimpus(x) -> -Tumpus(x)))"]}
{"id": "prontoqa_train_830", "nl": "Impuses are jompuses.", "fol": "all x. (impus(x) -> jompus(x))", "prediction": ["all x.(Impuse(x) -> Jompuse(x))", "all x.(Impus(x) -> Jompuse(x))", "all x y.((Impuse(x) & Jompuse(y)) -> Is(x,y))", "all x.(Impuse(x) -> Jompuse(x))", "all x y.((Impus(x) & Jompuse(y)) -> Is(x,y))", "all x.(Impus(x) -> Jompuse(x))", "all x.(Impuss(x) -> Jompuse(x))", "(Jumpuse(imprecious)", "all x.(Impuse(x) -> Jompuse(x))", "(all x.(Impuse(x) -> Jompuse(x)))", "(Jompuse(impreneur)", "all x.(Impuse(x) -> Jompuse(x))", "all x.(Imbus(x) -> Jombus(x))", "all x.(Impus(x) -> Jompuse(x))", "all x.(Impuse(x) -> Jompuse(x))", "all x.(Impuse(x) -> Jompuse(x))"]}
{"id": "prontoqa_train_831", "nl": "Max is not a jompus and Max is a lorpus and Max is a dumpus.", "fol": "(-jompus(Max) & lorpus(Max) & dumpus(Max))", "prediction": ["(all x.(Max(x) -> -Jompus(x)) & (Max(x) -> Lorpus(x)) & (Max(x) -> Dumpus(x)))", "all x y z.((Max(x) & Jompus(y) & Lorpus(z)) -> (-Jompus(x) & -Lorpus(x) & -Dumpus(x)))", "(all x.(Max(x) -> -Jompus(x)) & all y.(Max(y) -> Lorpus(y)) & all z.(Max(z) -> Dumpus(z))))", "(all x y z.((Max(x) & Jompus(y) & Lorpus(z)) -> -Jompus(x)) & ((Max(x) & Lorpus(x)) -> Dumpus(x)))", "all x y.((Max(x) & Jompus(y) & Lorpus(y)) -> (-Jompus(x) & Dumpus(x)))", "((Max(Max) & -Jompus(Max)) | (Lorpus(Max) & Dumpus(Max))))", "(-Jompus(Max) & -Lorpus(Max) & -Dumpus(Max))", "all x.(Max(x) -> (-Jompus(x) & Loper(x) & Dumpus(x)))", "all x y z.((Max(x) & Jompus(y) & Lorpus(z)) -> (-Jompus(x) & -Lorpus(x) & -Dumpus(x)))", "(all x y.((Max(x) & Jompus(y)) -> -Jompus(x)) & ((Max(x) & Lorpus(x)) -> Dumpus(x)))", "(all x.(Max(x) -> -Jompus(x)) & (Max(x) -> Lorpus(x)) & (Max(x) -> Dumpus(x)))", "all x y.((Max(x) & Jompus(y)) -> (-Jompus(x) & -Lorpus(y) & -Dumpus(y)))", "all x.(Max(x) -> (-Jompus(x) & (Lorpus(x) | Dumpus(x))))", "(-Jompus(Max) & -Lorpus(Max) & -Dumpus(Max))", "(all x.(Max(x) -> -Jompus(x)) & all y.(Max(y) -> Lorpus(y)) & all z.(Max(z) -> Dumpus(z))))", "all x y z.((Max(x) & Jompus(y) & Lorpus(z)) -> (-Jompus(x) & -Lorpus(y) & -Dumpus(z)))"]}
{"id": "prontoqa_train_832", "nl": "Alex is not a zumpus and Alex is a lorpus and Alex is an impus.", "fol": "(-zumpus(Alex) & lorpus(Alex) & impus(Alex))", "prediction": ["all x y z.((Alex(x) & Zumpus(y) & Lorpus(z)) -> (-Tompus(x) & -Lorpus(x) & -Impossible(x)))", "(all x.(Alex(x) -> -Zumpus(x)) & all y.(Alex(y) -> Lorpus(y))) & all z.(Alex(z) -> Imperator(z)))", "all x y.((Alex(x) & Zumpus(y)) -> (-Tompus(x) & Lorpus(y) & Imperator(x)))", "all x.(Alex(x) -> (-Zumpus(x) & -Lorpus(x) & -Impossible(x)))", "(all x.(Alex(x) -> -Zumpus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> Imperator(z)))", "(all x y.(Alex(x) -> -Zumpus(x)) & (Alex(y) -> Lorpus(y)) & (Alex(y) -> Imperator(y)))", "all x y z.((Alex(x) & Zumpus(y) & Lorpus(z)) -> (-Zumpus(x) & -Lorpus(x) & -Impossible(x)))", "(all x y z.(Alex(x) -> -Zumpus(x)) & ((Alex(y) & Lorpus(y))) -> Issue(z)))", "all x.(Alex(x) -> (-Tompus(x) & Loper(x) & Imperator(x)))", "(all x.(Alex(x) -> -Tompus(x)) & all y.(Lorpus(y) & -Impossible(y)))", "(all x.(Alex(x) -> -Zumpus(x)) & (Alex(x) -> Lorpus(x)) & (Alex(x) -> Imperator(x)))", "exists x.(Alex(x) & -Zumpus(x) & Alex(x) & Lorpus(x) & Ilira(x))", "all x y z.((Alex(x) & Zumpus(y) & Lorpus(z)) -> (-Tompus(x) & Lurpus(x) & Imperator(x)))", "all x y.((Alex(x) & Zumpus(y) & Lorpus(y)) -> Is(x,y))", "(all x.(Alex(x) -> -Tompus(x)) & all y.(Lorpus(y) & -Impossible(y)))", "all x y z.((Alex(x) & Zumpus(y) & Loper(z)) -> (-Tompus(x) & -Lorpus(x) & -Ilimination(x)))"]}
{"id": "prontoqa_train_833", "nl": "Impuses are lorpuses.", "fol": "all x. (impus(x) -> lorpus(x))", "prediction": ["all x.(Impuse(x) -> Lorpus(x))", "all x.(Impus(x) -> Lorpus(x))", "all x.(Impuse(x) -> Lorpuse(x))", "all x y.((Impuse(x) & Lorpus(y)) -> Is(x,y))", "(Lorpuse(impregnata) & -Lorpuse(impregnata))", "all x.(Impuse(x) -> Lorpuse(x))", "all x y.((Impuse(x) & Lorpus(y)) -> Is(x,y))", "(Lorpuse(impus) & LivesIn(impus,impus))", "all x.(Impus(x) -> Lorpuse(x))", "all x y.((Impus(x) & Lorpus(y)) -> Is(x,y))", "all x.(Impuse(x) -> Lorpus(x))", "all x.(Impuse(x) -> Lorpuse(x))", "all x.(Impuse(x) -> Lorpuse(x))", "all x.(Impus(x) -> Lorpuse(x))", "all x.(Impuse(x) -> Loomis(x))", "all x.(Impuse(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_834", "nl": "Sally is a gorpus, Sally is not a lorpus, and Sally is a rompus.", "fol": "(gorpus(Sally) & -lorpus(Sally) & rompus(Sally))", "prediction": ["(all x.(Sally(x) -> Gorpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Rompus(x)))", "all x y z.((Sally(x) & Gorpus(x) & -Lorpus(y) & Rompus(z)) -> (Gorpus(x) & -Lorpus(y) & Rompus(z)))", "(all x y z.((Sally(x) & Gorpus(x)) -> Gorpus(x)) & ((Sally(y) & -Lorpus(y)) -> Rompus(z)))", "(all x.(Sally(x) -> Gorpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Rompus(x)))", "(all x.(Sally(x) -> Gorpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Rompus(x)))", "all x y z.((Sally(x) & Gorpus(y) & Lorpus(z)) -> (Gorpus(x) & -Lorpus(x) & Rompus(x)))", "all x y z.((Sally(x) & Gorpus(x) & -Lorpus(y) & Rompus(z)) -> (Gorpus(x) & -Lorpus(y) & Rompus(z)))", "(all x y z.((Sally(x) & Gorpus(y)) -> Gorpus(x)) & ((Sally(z) & -Lorpus(z)) -> Rompus(z)))", "all x.(Sally(x) -> (Gorpus(x) & -Lorpus(x) & Rompus(x)))", "all x.(Sally(x) -> (Gorpus(x) | -Lorpus(x) | Rompus(x)))", "all x y z.((Sally(x) & Gorpus(x) & -Lorpus(y) & Rompus(z)) -> (Gorpus(x) & -Lorpus(y) & Rompus(z)))", "(all x.(Sally(x) -> Gorpus(x)) & (-Lorpus(x) & -Rompus(x)))", "(all x.(Sally(x) -> Gorpus(x)) & (-Lorpus(x) & -Rompus(x)))", "(all x y z.((Sally(x) & Gorpus(x)) -> Gorpus(x)) & ((Sally(y) & -Lorpus(y)) -> Rompus(y)))", "all x y z.((Sally(x) & Gorpus(x) & -Lorpus(y) & Rompus(z)) -> (Gorpus(x) & -Lorpus(y) & Rompus(z)))", "(all x.(Sally(x) -> Gorpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Rompus(x)))"]}
{"id": "prontoqa_train_835", "nl": "Stella is a lempus, Stella is not a jompus, and Stella is a yumpus.", "fol": "(lempus(Stella) & -jompus(Stella) & yumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Yumpus(x)))", "(all x y z.((Stella(x) & Lempus(x)) -> (Lempus(x) & -Jompus(y)) & ((Stella(z) & Yumpus(z))) -> (Yumpus(z))))", "all x y z.((Stella(x) & Lempus(x) & Stella(y) & Yumpus(z)) -> (-Jompus(y) & -Lempus(y) & -Yumpus(z)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Yumpus(x)))", "(all x.(Lempus(x) -> Stella(x)) & (-Jompus(x) -> Stella(x)) & (Yumpus(x) -> Stella(x)))", "all x y z.((Stella(x) & Lempus(x) & Stella(y) & Yumpus(z)) -> (-Jompus(y) & -Lempus(z) & -Jompus(y) & -Yumpus(y)))", "all x y z.((Stella(x) & Lempus(x) & Stella(y) & Yumpus(z)) -> (-Jompus(y) & -Lempus(y) & -Yumpus(z)))", "(all x y z.((Stella(x) & Lempus(x)) -> (Lempus(x) & -Jompus(y)) & ((Stella(z) & Yumpus(z)))))", "exists x.(Stella(x) & Lempus(x) & -Jompus(x) & Yumpus(x))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> -Jompus(y))) & all z.(Stella(z) -> Yumpus(z)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Yumpus(x)))", "all x y z.(Lempus(x) & Stella(y) & Yompus(z) & -Jompus(y) & Yumpus(z))", "(all x y z.((Stella(x) & Lempus(x)) -> (Lempus(x) | -Jompus(x)) | (Yumpus(y) & Stella(z))))", "all x.(Stella(x) -> (Lempus(x) & -Jompus(x) & Yumpus(x)))", "(all x.(Lempus(x) & -Jompus(x)) -> Stella(x)) & (Yumpus(x) -> Stella(x)))", "all x y z.((Stella(x) & Lempus(x) & Stella(y) & Yompus(z)) -> (-Jompus(y) & Yumpus(z)))"]}
{"id": "prontoqa_train_836", "nl": "Stella is not an impus.", "fol": "-impus(Stella)", "prediction": ["Stella is not impused.", "(-Impossible(Stella))", "all x.(Stella(x) -> -Impossible(x))", "-Is(Stella) & -Is(Stella))", "Stella -IsImpossible(Stella))", "Stella -Impossible(Stella))", "Stella is not impus.", "-Is(Stella) & Is(Stella))", "(-Impossible(Stella))", "-(IsSolve(Stella)?", "Stella is not impused.", "Stella -Impossible(Stella)", "Stella is not a impus.", "(-Impossible(Stella))", "Stella -Impossible(Stella)", "Stella is not impus."]}
{"id": "prontoqa_train_837", "nl": "Stella is a grimpus and Stella is not a gorpus and Stella is a sterpus.", "fol": "(grimpus(Stella) & -gorpus(Stella) & sterpus(Stella))", "prediction": ["(all x.(Stella(x) -> Grimpus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Sterpus(x)))", "all x y z.((Stella(x) & Grimpus(x) & Stella(y) & Sterpus(z)) -> (-Gorpus(y) & -Sterpus(z)))", "(all x y.(Stella(x) -> Grimpus(x)) & (Stella(y) -> -Gorpus(y)) & (Stella(y) -> Sterpus(y)))", "(all x y z.((Stella(x) & Grimpus(x)) -> (Stella(y) & -Gorpus(y)) & ((Stella(z) & Sterpus(z))) -> (Sterpus(z))))", "all x y.((Stella(x) & Grimpus(x)) -> (-Gorpus(y) & Sterpus(x)))", "(all x.(Stella(x) -> Grimpus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Sterpus(x)))", "all x y z.((Stella(x) & Gruppus(y) & -Gorpus(z)) -> (Stella(x) & Sterpus(x)))", "exists x.(Stella(x) & Grimpus(x) & -Gorpus(x) & Sterpus(x))", "all x y z.((Stella(x) & Grimpus(x) & Stella(y) & Sterpus(z)) -> (-Gorpus(y) & -Sterpus(z)))", "all x.(Stella(x) -> (Grimpus(x) & -Gorpus(x) & Sterpus(x)))", "all x.(Stella(x) -> (Grimpus(x) | -Gorpus(x) | Sterpus(x)))", "(all x y.(Stella(x) -> Grimpus(x)) & (Stella(y) -> -Gorpus(y)) & (Stella(y) -> Sterpus(y)))", "(all x.(Stella(x) -> Grimpus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Sterpus(x)))", "all x y.((Stella(x) & Gruppus(x)) -> (-Gorpus(y) & Sterpus(x)))", "(all x.(Stella(x) -> Gruppus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Sterpus(x)))", "(all x.(Stella(x) -> Grimpus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Sterpus(x)))"]}
{"id": "prontoqa_train_838", "nl": "Sally is not a grimpus, Sally is a zumpus, and Sally is a lorpus.", "fol": "(-grimpus(Sally) & zumpus(Sally) & lorpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Grimpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> Lorpus(x)))", "(all x.(Sally(x) -> -Grimpus(x)) & all y.(Sally(y) -> Zumpus(y)) & all z.(Sally(z) -> Lorpus(z))))", "all x y z.((Sally(x) & Grimpus(y) & Zumpus(z)) -> (-Grimpus(x) & Lorpus(x)))", "(all x y z.((Sally(x) & Grimpus(y)) -> -Grimpus(x)) & ((Sally(z) & Zumpus(z)) -> Lorpus(z)))", "all x.(Sally(x) -> (-Grimpus(x) & Zumpus(x) & Lorpus(x)))", "(-Grimpus(Sally) & Zumpus(Sally) & Lorpus(Sally))", "(all x.(Sally(x) -> -Grimpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> Lorpus(x)))", "all x y z.((Sally(x) & Grimpus(y) & Zumpus(z)) -> (-Grimpus(x) & Lorpus(x)))", "(all x y z.((Sally(x) & Grimpus(y)) -> -Grimpus(x)) & ((Sally(z) & Zumpus(z)) -> Lorpus(x)))", "(all x.(Sally(x) -> -Grimpus(x)) & all y.(Sally(y) -> Zumpus(y)) & all z.(Sally(z) -> Lorpus(z))))", "all x y z.((Sally(x) & Grimpus(y) & Zumpus(z) & Lorpus(x)) -> -Grimpus(x) & Lorpus(x))", "all x.(Sally(x) -> (-Grimpus(x) & Zumpus(x) & Lorpus(x)))", "(-Grimpus(Sally) & Zumpus(Sally) & Lorpus(Sally))", "exists x.(Sally(x) & -Grimpus(x) & Zumpus(x) & Lorpus(x))", "all x y z.((Sally(x) & Grimpus(y) & Zumpus(z) & Lorpus(x)) -> -Grimpus(x))", "(all x.(Sally(x) -> -Grimpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> Lorpus(x)))"]}
{"id": "prontoqa_train_839", "nl": "Sally is not a sterpus.", "fol": "-sterpus(Sally)", "prediction": ["Sally is not sterpus.", "all x.(Sally(x) -> -Sterpus(x))", "(-Sterpus(Sally))", "Sally -Sterpus(Sally)", "Sally is not sterpus.", "all x.(Sally(x) -> -Sterpus(x))", "Sally n'est pas Sterpus.", "(-Sterepus(Sally))", "(-Storpus(Sally))", "Sally is not a Sterpus.", "Sally is not sterpus.", "all x.(Sally(x) -> -Sterepus(x))", "-Sterpus(Sally)", "-Sally is a Sterpus.", "Sally -Sterpus(Sally)", "Sally is not sterpus."]}
{"id": "prontoqa_train_840", "nl": "Shumpuses are jompuses.", "fol": "all x. (shumpus(x) -> jompus(x))", "prediction": ["all x.(Shupuse(x) -> Jompuse(x))", "all x.(Shumpuse(x) -> Jompuse(x))", "all x y.((Shupuse(x) & Jompuse(y)) -> Has(x,y))", "all x.(Shampoo(x) -> Jompuse(x))", "(Jumpuse(sh) & Jompuse(sh))", "all x y.((Shuppuse(x) & Jompuse(y)) -> Has(x,y))", "all x.(Shampoos(x) -> Jompuse(x))", "(Jompuse(shm) & Jompuse(shm))", "all x.(Shupuse(x) -> Jompuse(x))", "all x.(Shumpuse(x) -> Jompuse(x))", "all x.(Shampoose(x) -> Jompuse(x))", "all x.(Shutus(x) -> Jompuse(x))", "all x.(Shumpsuse(x) -> Jompuse(x))", "all x.(Shuppe(x) -> Jombus(x))", "(Jumpus)", "all x.(Shumpus(x) -> Jompus(x))"]}
{"id": "prontoqa_train_841", "nl": "Sam is not a jompus, Sam is a yumpus, and Sam is a zumpus.", "fol": "(-jompus(Sam) & yumpus(Sam) & zumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Jompus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> Zumpus(x)))", "all x y z.((Sam(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) & -Yumpus(y) & -Zumpus(z)))", "(all x.(Sam(x) -> -Jompus(x)) & all y.(Yumpus(y) & all z.(Zumpus(z)) -> -Jompus(x)))", "(all x y z.((Sam(x) & Jompus(y)) -> -Jompus(x)) & ((Sam(z) & Yumpus(z))) -> Zumpus(z)))", "all x.(Sam(x) -> (-Jompus(x) & Yampus(x) & Zumpus(x)))", "all x y z.((Sam(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) & Yumpus(y) & Zumpus(z)))", "(all x.(Jompus(x) -> -Jompus(x)) & all y.(Yumpus(y) -> Zumpus(y)))", "(all x y z.((Sam(x) & Jompus(y) & Yumpus(z)) -> -Jompus(x)) & ((Sam(x) & Yumpus(x)) -> Zumpus(x)))", "(all x.(Sam(x) -> -Jompus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> Zumpus(x)))", "all x.(Sam(x) -> (-Jompus(x) & Yampus(x) & Zumpus(x)))", "all x y z.((Sam(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) & Yampus(y) & Zumpus(z)))", "all x y z.((Sam(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) & Yampus(y) & Zumpus(z)))", "(all x.(Sam(x) -> -Jompus(x)) & all y.(Sam(y) -> Yumpus(y)))", "exists x.(Sam(x) & -Jompus(x) & Yumpus(x) & Zumpus(x))", "(all x.(Sam(x) -> -Jompus(x)) | (Sam(x) -> Yumpus(x))) | (Sam(x) -> Zumpus(x)))", "all x y z.((Sam(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_842", "nl": "Every grimpus is a lempus.", "fol": "all x. (grimpus(x) -> lempus(x))", "prediction": ["all x.(Grimpus(x) -> Lempus(x))", "all x.(Grimpus(x) -> Lempus(x))", "all x y.((Grimpus(x) & Lempus(y)) -> Is(x,y))", "all x.(Smooch(x) -> Lempus(x))", "all x.(Grimpus(x) -> Lempus(x))", "all x y.((Grimpus(x) & Lempus(y)) -> Is(x,y))", "all x.(Sgrimpus(x) -> Lempus(x))", "(all x.(Grimpus(x) -> Lempus(x))", "all x y.((Grimpus(x) & Grimpus(y)) -> Lempus(x))", "all x.(Grimpus(x) -> Lempus(x))", "all x.(Grimpus(x) -> Lempus(x))", "exists x.(Gruppus(x) & Lempus(x))", "all x.(Grimpus(x) -> Lempus(x))", "all x.(Grampus(x) -> Lempus(x))", "exists x.(Grimpus(x) & Lempus(x))", "exists x.(Grampus(x) & Lempus(x))"]}
{"id": "prontoqa_train_843", "nl": "Max is not a lempus and Max is a brimpus and Max is a vumpus.", "fol": "(-lempus(Max) & brimpus(Max) & vumpus(Max))", "prediction": ["(all x.(Max(x) -> -Lempus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Vumpus(x)))", "all x y z.((Max(x) & Lempus(y) & Brimpus(z)) -> (-Lempus(x) & Brimpus(x) & Vumpus(x)))", "(all x y z.((Max(x) & Lempus(y)) -> -Lempus(x)) & ((Max(z) & Brimpus(z))) -> Vumpus(z)))", "(all x.(Max(x) -> -Lempus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Vumpus(z))))", "(-Lempus(Max) & Brimpus(Max) & Vumpus(Max))", "all x.(Max(x) -> (-Lempus(x) & Brimpus(x) & Vumpus(x)))", "(all x.(Max(x) -> -Lempus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Vumpus(x)))", "all x y z.((Max(x) & Lempus(y) & Brimpus(z)) -> (-Lempus(x) & Brimpus(x) & Vumpus(x)))", "(exists x.(Max(x) & -Lempus(x)) & exists y.(Brimpus(y) & Brimpus(y))) & exists z.(Max(z) & Vumpus(z))))", "all x y.((Max(x) & Lempus(y) & Brimpus(y)) -> (-Lempus(x) & Brimpus(x) & Vumpus(x)))", "(all x y.((Max(x) & Lempus(x)) -> -Lempus(x)) & ((Max(y) & Brimpus(y)) -> Vumpus(y)))", "all x.(Max(x) -> (-Lempus(x) & Brimpus(x) & Vumpus(x)))", "all x y z.((Max(x) & Lempus(y) & Brimpus(z)) -> (-Lempus(x) & Brimpus(x) & Vumpus(x)))", "all x y z.((Max(x) & Lempus(y) & Brimpus(z)) -> (-Lempus(x) | (-Lempus(x) & Brimpus(y) & Vumpus(z))))", "(all x.(Max(x) -> -Lempus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Vampus(x)))", "(all x.(Max(x) -> -Lempus(x)) & all y.(Max(y) -> Brimpus(y))) & all z.(Max(z) -> Vumpus(z)))"]}
{"id": "prontoqa_train_844", "nl": "Each sterpus is a gorpus.", "fol": "all x. (sterpus(x) -> gorpus(x))", "prediction": ["all x.(Sterpus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x y.((Sterpus(x) & Gorpus(y)) -> Has(x,y))", "all x.(Steerpus(x) -> Gorpus(x))", "all x y.((Sterpus(x) & Gorpus(y)) -> Has(x,y))", "all x.(Steerpus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x y.((Steerpus(x) & Gorpus(y)) -> Is(x,y))", "all x.(Sterepus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "exists x.(Sterpus(x) & Gorpus(x))", "exists x.(Sterpus(x) & Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "exists x.(Sterpus(x) & Gorpus(x))", "all x.(Steerpus(x) -> Gorpus(x))", "exists x.(Steerpus(x) & Gorpus(x))"]}
{"id": "prontoqa_train_845", "nl": "Max is a dumpus, Max is a brimpus, and Max is not a gorpus.", "fol": "(dumpus(Max) & brimpus(Max) & -gorpus(Max))", "prediction": ["(all x.(Max(x) -> Dumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> -Gorpus(x)))", "all x y z.((Max(x) & Dumpus(y) & Brimpus(z)) -> (Dumps(x) & Brimpus(x) & -Gorpus(x)))", "(all x.(Max(x) -> Dumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> -Gorpus(z))))", "(exists x.(Max(x) & Dumpus(x)) & exists y.(Brimpus(y) & Brimpus(y))) & exists z.(Max(z) & -Gorpus(z)))", "(all x y z.(Max(x) -> Dumpus(x)) & (Max(y) -> Brimpus(y)) & (Max(z) -> -Gorpus(z)))", "(all x.(Max(x) -> Dumpus(x)) & (Max(x) -> Brimpus(x)) & -Max(x)))", "all x.(Max(x) -> (Dumps(x) & Brimpus(x) & -Gorpus(x)))", "(all x y z.((Max(x) & Dumpus(y)) -> (Dumpus(z) | Brimpus(z))) & ((Max(x) & Gorpus(x)) -> -Gorpus(x)))", "all x y z.((Max(x) & Dumpus(y) & Brimpus(z)) -> (Dumpus(x) & Brimpus(x) & -Gorpus(x)))", "all x.(Max(x) -> (Dumpus(x) & Brimpus(x) & -Gorpus(x)))", "all x y z.((Max(x) & Dumpus(x) & Brimpus(y) & -Gorpus(z)) -> (Dumps(x) & Brimpus(y) & -Gorpus(z)))", "(all x y z.((Max(x) & Dumpus(x)) -> Dumpus(x)) & ((Max(y) & Brimpus(y)) -> -Gorpus(z)))", "(all x.(Max(x) -> Dumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> -Gorpus(x)))", "all x y z.((Max(x) & Dumpus(y) & Brimpus(z)) -> (Dumpus(x) & Brimpus(z) & -Gorpus(x)))", "(all x.(Max(x) -> Dumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> -Gorpus(z))))", "all x.(Max(x) -> (Dumpus(x) & Brimpus(x) & -Gorpus(x)))"]}
{"id": "prontoqa_train_846", "nl": "Lempuses are yumpuses.", "fol": "all x. (lempus(x) -> yumpus(x))", "prediction": ["all x.(Lempuse(x) -> Yumpus(x))", "all x.(Lempuse(x) -> Yampus(x))", "all x y.((Lempuse(x) & Yumpus(y)) -> Is(x,y))", "(Yumpuse(lempuse) & Yumpuse(lempuse))", "all x.(Lempuse(x) -> Yumpus(x))", "all x.(Lempuse(x) -> Yumpus(x))", "all x y.((Lempuse(x) & Yumpus(y)) -> Is(x,y))", "all x.(Lemme(x) -> Yumpus(x))", "all x.(Lempuse(x) -> Yampus(x))", "all x.(Lemmes(x) -> Yumpus(x))", "all x.(Lempuse(x) -> Yumpus(x))", "all x.(Lemmes(x) -> Yampus(x))", "all x.(Lempuse(x) -> Yampus(x))", "All x.(Lempus(x) -> Yumpus(x))", "All x.(Lumpus(x) -> Yampus(x))", "All x.(Lempuse(x) -> Yumpus(x))"]}
{"id": "prontoqa_train_847", "nl": "Max is a zumpus and Max is not a yumpus and Max is a lorpus.", "fol": "(zumpus(Max) & -yumpus(Max) & lorpus(Max))", "prediction": ["(all x.(Max(x) -> Zumpus(x)) & (-Max(x) -> Yumpus(x)) & (-Max(x) -> Lorpus(x)))", "all x y z.((Max(x) & Zumpus(x) & Max(y) & -Yumpus(y)) -> (Lorpus(z)))", "(all x.(Max(x) -> Zumpus(x)) & (Max(x) -> -Yumpus(x)) & (Max(x) -> Lorpus(x)))", "all x y.((Max(x) & Zumpus(x) & Max(y)) -> (-Yumpus(y) & -Lorpus(y)))", "(all x y z.(Max(x) -> Zumpus(x)) & ((Max(y) & -Yumpus(y)) & ((Max(z) & Lorpus(z)))))", "all x y z.((Max(x) & Tompus(x) & -Yumpus(y) & Lorpus(z)) -> (Max(x) & Tompus(x) & -Yumpus(y) & -Lorpus(z)))", "all x.(Max(x) -> (Tompus(x) & -Yumpus(x) & Lorpus(x)))", "all x y z.((Max(x) & Zumpus(x) & Max(y) & -Yumpus(y)) -> (Lorpus(z)))", "(all x y z.((Max(x) & Zumpus(x)) -> (Max(y) & -Yumpus(y))) & ((Max(z) & Lorpus(z)) -> (Lorpus(z))))", "(all x.(Max(x) -> Zumpus(x)) & (-Max(x) -> Yumpus(x)) & (-Max(x) -> Lorpus(x)))", "(all x y.(Max(x) -> Zumpus(x)) & (Max(y) -> -Yumpus(y))) & (Max(z) -> Lorpus(z)))", "all x.(Max(x) -> (Tompus(x) | -Yumpus(x) | Lorpus(x)))", "all x y.((Max(x) & Tompus(x) & -Yumpus(y)) -> Lorpus(x))", "(all x.(Max(x) -> Zumpus(x)) & ((Max(x) & -Yumpus(x)) & (Max(x) -> Lorpus(x))))", "(all x.(Max(x) -> Zumpus(x)) & all y.(Max(y) -> -Yumpus(y))) & all z.(Max(z) -> Lorpus(z)))", "all x.(Max(x) -> (Zumpus(x) | -Yumpus(x) | Lorpus(x)))"]}
{"id": "prontoqa_train_848", "nl": "Everything that is an impus, a vumpus, or a rompus is a wumpus, a lorpus, and a yumpus.", "fol": "all x. ((impus(x) | vumpus(x) | rompus(x)) -> (wumpus(x) & lorpus(x) & yumpus(x)))", "prediction": ["all x.((Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x.((Impose(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x.((Issue(x) | IsVumpus(x) | IsRompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x.((Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) & Lorpus(x) & Yumpus(x)))", "all x.(Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x y.((Impose(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(y) | Lorpus(y) | Yumpus(y)))", "all x.((Impose(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) & Lorpus(x) & Yumpus(x)))", "all x.((Issue(x) | IsVumpus(x) | IsRompus(x)) -> (Wumpus(x) & Lorpus(x) & Yumpus(x)))", "all x.((Improvse(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) & Lorpus(x) & Yumpus(x)))", "all x.(((Impos(x) | Vumpus(x) | Rompus(x))) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x y.((Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(y) | Lorpus(y) | Yampus(y)))", "all x.((Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "(all x.((Impose(x) | Vumpus(x) | Rompus(x))) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "(all x.((Impos(x) | Vumpus(x) | Rompus(x))) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x.(Impose(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) & Loupus(x) & Yumpus(x)))", "(all x.((Impos,y) | Voompus,y)) | Rompus(y)) -> (Wumpus(x) | Lorpus(x) | Yampus(x,y)))"]}
{"id": "prontoqa_train_849", "nl": "Polly is a rompus.", "fol": "rompus(Polly)", "prediction": ["all x.(Rompus(x) -> Polly(x))", "Polly is a rompus.", "all x.(Polly(x) -> Rompus(x))", "all x.(Polly(x) -> Rompus(x))", "(Rompus(Polly) & Has(Polly,Polly))", "Polly is a rompus.", "(Rompus(Polly) & HasRompus(Polly))", "Polly is a Rompus.", "all x.(Rompus(x) -> Polly(x))", "All x.(Polly(x) -> Rompus(x))", "Polly is rompus.", "all x.(Polly(x) -> Rompus(x))", "(Rompus(Polly)", "(Rompus(Polly)", "All x.(Polly(x) -> Rompus(x))", "(Rompus(Polly)"]}
{"id": "prontoqa_train_850", "nl": "Polly is a lorpus.", "fol": "lorpus(Polly)", "prediction": ["all x.(Lorpus(x) -> Polly(x))", "Polly is a lorpus.", "all x.(Polly(x) -> Lorpus(x))", "(Lorpus(Polly) & LivesIn(Polly,Lorph))", "all x.(Lorph(x) -> Polly(x))", "all x.(Lorpus(x) -> Polly(x))", "Polly is a lorpus.", "(Lorpus(Polly) & LivesIn(Polly,Lorpus))", "(Lorpus(Polly) & HasLorph(Polly))", "Polly is a lorpus.", "all x.(Lorph(x) -> Polly(x))", "All x.(Polly(x) -> Lorpus(x))", "(Lorpus(Poly) & LivesIn(Polly,Lorph))", "Polly is a lorpus.", "exists x.(Polly(x) & Lorpus(x))", "all x.(Lorph(x) -> Polly(x))"]}
{"id": "prontoqa_train_851", "nl": "Everything that is a jompus or a gorpus or a yumpus is a grimpus and a dumpus and a rompus.", "fol": "all x. ((jompus(x) | gorpus(x) | yumpus(x)) -> (grimpus(x) & dumpus(x) & rompus(x)))", "prediction": ["all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.(((Jompus(x) | Gorpus(x) | Yumpus(x))) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x y.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(y) & Dumpus(y) & Rompus(y)))", "all x.((Jimpus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x y.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(y) & Dumpus(y) & Rompus(y)))", "all x.((Jompus(x) | Gorpus(x) | Yampus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "(all x.((Jompus(x) | Gorpus(x) | Yumpus(x))) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x y.((Jompus(x) | Gorpus(x) | Yampus(x)) -> (Grimpus(y) & Dumpus(y) & Rompus(y)))", "all x.((Jompus(x) | Gorpus(x) | Yampus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Smoothpus(x) & Grimpus(x) & Dumpus(x) & Rompus(x)) -> (Jompus(x) | Gorpus(x) | Yumpus(x)))", "all x.((Jimpus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Morph(x) | Gorpus(x) | Yumpus(x)) -> (Smoochus(x) & Dumpus(x) & Rompus(x)))", "(all x.((Jompus(x) | Gorpus(x) | Yumpus(x))) -> (Smoochus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_852", "nl": "Polly is a yumpus.", "fol": "yumpus(Polly)", "prediction": ["all x.(Polly(x) -> Yumpus(x))", "Polly is yumpus.", "all x.(Yumpus(x) -> Polly(x))", "Polly is a yumpus.", "(Yumpus(Polly) & HasYump(Polly))", "all x.(Yumpus(x) -> Polly(x))", "Polly is yumpus.", "all x.(Polly(x) -> Yampus(x))", "(Yumpus(Polly)", "Polly is a yumpus.", "All x.(Polly(x) -> Yumpus(x))", "(Yumpus(Polly)", "all x.((Polly(x) & Yumpus(x)) -> Yampus(x))", "all x.(Yumpus(x) -> Polly(x))", "(Yumpus)", "All x.(Polly(x) -> Yampus(x))"]}
{"id": "prontoqa_train_853", "nl": "Everything that is a lorpus, a numpus, or a wumpus is a gorpus.", "fol": "all x. ((lorpus(x) | numpus(x) | wumpus(x)) -> gorpus(x))", "prediction": ["all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x y.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(y))", "all x.((MajorLorpus(x) | MajorNumpus(x) | MajorWumpus(x)) -> Gorpus(x))", "all x.(((Lorpus(x) | Numpus(x) | Wumpus(x))) -> Gorpus(x))", "all x y.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(y))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "(all x.((Lorpus(x) | Numpus(x) | Wumpus(x))) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Rose(x) | Noxus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Noxus(x) | Wumpus(x)) -> Gorpus(x))"]}
{"id": "prontoqa_train_854", "nl": "Sally is a lorpus and a dumpus and a rompus.", "fol": "(lorpus(Sally) & dumpus(Sally) & rompus(Sally))", "prediction": ["(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))", "all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "Sally is a lorpus and a dumpus and a rompus.", "(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))", "all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Sally(x) & Lorpus(x) & Dumpus(x) & Rompus(x)) -> Lopus(x))", "(Lorpus(s) & Dumpus(s) & Rompus(s))", "Sally is a lorpus and a dumpus and a rompus.", "(Lorpus,Dumpus,Rompus)", "(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))", "all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "Sally is a lorpus and a dumpus and a rompus.", "exists x.(Lorpus(x) & Dumpus(x) & Rompus(x))", "(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))", "all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_855", "nl": "Sally is a gorpus.", "fol": "gorpus(Sally)", "prediction": ["all x.(Sally(x) -> Gorpus(x))", "Sally is Gorpus.", "all x.(Sally(x) -> Gorpus(x))", "Sally is a Gorpus.", "(Gorpus(Sally) & Gorpus(Sally))", "Sally is Gorpus.", "all x.((Sally(x) & Gorpus(x)) -> Gorpus(x))", "all x.(Sally(x) -> Gorpus(x))", "all x.(Gorpus(x) -> Sally(x))", "Sally is a Gorpus.", "all x.(Sally(x) -> Gorpus(x))", "(Gorpus(Sally) & HasGorpa(Sally))", "Sally is gorpus.", "Sally (gorpus)", "Sally is Gorpus(Sally)", "All x.(Sally(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_856", "nl": "Brimpuses are lempuses and zumpuses and grimpuses.", "fol": "all x. (brimpus(x) -> (lempus(x) & zumpus(x) & grimpus(x)))", "prediction": ["all x.(Brimpus(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "all x y.((Brimpus(x) & Lempuse(y)) -> (Tompus(x) | Grimpus(x)))", "(all x.(Brimpus(x) -> Lempuse(x)) & all y.(Tompus(y) & Grimpus(y)))", "all x y z.((Brimpus(x) & Lempuse(y) & Zumpuse(z)) -> (Smoothpuse(x) | Grimpuse(x)))", "all x.(Brompus(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "all x.(Brimpus(x) -> (Lempuse(x) | Zumpus(x) | Grimpuse(x)))", "all x.(Brimpuse(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "all x.(Brompus(x) -> (Lempuse(x) & Zumpuse(x) & Grimpuse(x)))", "(all x.(Brompus(x) -> Lempuse(x)) & (Zumpus(x) | Grimpus(x))))", "all x y.((Brompus(x) & Lempuse(y)) -> (Tompus(x) | Grimpus(x)))", "(all x.(Brimpus(x) -> Lempuse(x)) & all y.(Tompus(y) & Grimpus(y)))", "(all x y.(Brimpus(x) -> Lempuse(x)) & (Zumpus(y) | Grimpus(y)))", "(all x.(Brimpus(x) -> Lempuse(x)) & all y.(Zumpus(y) & All z.(Smoothpus(z))) -> Grimpuse(z)))", "all x.(Brimpus(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "(all x.(Brompus(x) -> Lempus(x)) & (Tompus(x) | Grimpus(x)))", "all x.(Brompus(x) -> (Lampus(x) & Zumpuses(x) & Grimpuses(x)))"]}
{"id": "prontoqa_train_857", "nl": "Wren is a brimpus.", "fol": "brimpus(Wren)", "prediction": ["all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "(Brimpus(wren) & Brimpus(wren))", "all x y.((Wren(x) & Brimpus(y)) -> CanBe(x,y))", "all x.(Wren(x) -> Brimpus(x))", "(Brimpus(wren) & BornOf(wren,x))", "(Brumpus(wren) & HasBrimpus(wren,w))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "(Brimpus)", "All x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "(Brumpus)", "all x.(Wren(x) -> Brimpus(x))", "All x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_858", "nl": "Wren is a dumpus or a vumpus or a grimpus.", "fol": "(dumpus(Wren) | vumpus(Wren) | grimpus(Wren))", "prediction": ["all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "(Dumps(Wren) | Vumpus(Wren) | Grimpus(Wren)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "(Dumpus(w) | Vumpus(w) | Grimpus(w)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x y.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "(Dumpus,Vumpus,Grimpus)", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x y.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "exists x.(Wren(x) & ((Dumpus(x) | Vumpus(x) | Grimpus(x))))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Voompus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumps(x) | Vumpus(x) | Grimpus(x)))", "exists x.(Wren(x) & Dumpus(x) & (Vumpus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_859", "nl": "Each impus is a yumpus.", "fol": "all x. (impus(x) -> yumpus(x))", "prediction": ["all x.(Impossible(x) -> Yumpus(x))", "all x.(Issue(x) -> Yumpus(x))", "all x.(Impact(x) -> Yumpus(x))", "all x y.((Issue(x) & Yumpus(y)) -> IsStill(x))", "all x.(Impossible(x) -> Yumpus(x))", "all x y.((Issue(x) & Yumpus(y)) -> Issue(x))", "all x.(Issue(x) -> Yampus(x))", "(yumpus)", "all x.(Impact(x) -> Yumpus(x))", "all x.(Impossible(x) -> Yumpus(x))", "exists x.(Impact(x) & Yumpus(x))", "all x.(Issue(x) -> Yampus(x))", "exists x.(Impossible(x) & Yumpus(x))", "exists x.(Impedus(x) & Yampus(x))", "all x.(Issue(x) -> Yumpus(x))", "exists x.(Impossible(x) & Yumpus(x))"]}
{"id": "prontoqa_train_860", "nl": "Sally is a dumpus, Sally is not a yumpus, and Sally is a brimpus.", "fol": "(dumpus(Sally) & -yumpus(Sally) & brimpus(Sally))", "prediction": ["(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Yumpus(x)) & (Sally(x) -> Brimpus(x)))", "all x y z.((Sally(x) & Dumpus(x) & -Yumpus(y) & Brimpus(z)) -> (Dumps(x) & Brimpus(z)))", "(all x y z.((Sally(x) & Dumpus(x)) -> (Dumpus(y) & -Yumpus(z))) & ((Sally(x) & Brimpus(x)) -> (Brimpus(x))))", "all x y z.((Sally(x) & Dumpus(x) & -Yumpus(y) & Brimpus(z)) -> (Sally(x) & Dumpus(x) & -Yumpus(y) & Brimpus(z)))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Yumpus(x)) & (Sally(x) -> Brimpus(x)))", "all x.(Sally(x) -> (Dumpus(x) & -Yumpus(x) & Brimpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & (-Yumpus(x) & -Brimpus(x)))", "all x y z.((Sally(x) & Dumpus(y) & Yumpus(z)) -> (-Yumpus(x) & Brimpus(x)))", "(all x y z.((Sally(x) & Dumpus(y)) -> (Dumpus(z) | -Yumpus(z)) | (Brimpus(z) & -Yumpus(z))))", "all x.(Sally(x) -> (Dumps(x) & -Yumpus(x) & Brimpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Sally(y) -> -Yumpus(y)) & all z.(Sally(z) -> Brimpus(z))))", "(all x y z.((Sally(x) & Dumpus(x)) -> Dumpus(x)) & ((Sally(y) & -Yumpus(y)) -> Brimpus(z)))", "exists x.(Sally(x) & Dumpus(x) & -Yumpus(x) & Brimpus(x))", "all x y z.((Sally(x) & Dumpus(x) & Sally(y) & Brimpus(z)) -> (-Yumpus(y) & -Yumpus(z)))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Yumpus(x)) & (Sally(x) -> Brimpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & (-Yumpus(x)) & (Brimpus(x) -> Brimpus(x)))"]}
{"id": "prontoqa_train_861", "nl": "Sally is a yumpus, Sally is not an impus, or Sally is an impus.", "fol": "(yumpus(Sally) | -impus(Sally) | impus(Sally))", "prediction": ["(all x.(Sally(x) -> Yumpus(x)) | (-Impossible(x) | Impossible(x))))", "all x.(Sally(x) -> (Yumpus(x) | -Impossible(x) | Impossible(x)))", "(all x.(Sally(x) -> Yumpus(x)) & (-Impossible(x) | Impossible(x))))", "all x y.((Sally(x) & Yumpus(x)) | (-Impossible(x) | Impossible(x))))", "(yumpus(s) | -Impossible(s) | Impossible(s)))", "(yumpus(Sally) | (-Impossible(Sally) | Impossible(Sally))))", "(all x.(Sally(x) -> Yampus(x)) | (-Sally(x) & Impossible(x))))", "all x.(Yumpus(x) | (-Impossible(x) | Impossible(x))))", "all x.(Sally(x) -> (Yumpus(x) | -Impossible(x) | Impossible(x)))", "all x y.((Sally(x) & Yumpus(x)) | (-Impossible(x) | Impossible(x))))", "all x y.((Sally(x) & Yumpus(x)) -> (-Impossible(x) | Impossible(x)))", "exists x.(Yumpus(x) | (-Impossible(x) | Impossible(x))))", "(all x.(Sally(x) -> Yumpus(x)) | (-Impossible(x) | Impossible(x))))", "exists x.(Yumpus(x) | -Impossible(x) | Impossible(x)))", "(all x.(Sally(x) -> Yampus(x)) & (-Sally(x) | IsImpossible(x))))", "exists x.(Yumpus(x) | (-Impossible(x) | Impeccable(x))))"]}
{"id": "prontoqa_train_862", "nl": "Everything that is a grimpus, a brimpus, or a jompus is a lempus and a dumpus and a lorpus.", "fol": "all x. ((grimpus(x) | brimpus(x) | jompus(x)) -> (lempus(x) & dumpus(x) & lorpus(x)))", "prediction": ["all x.((Smopus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Grimpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Smoothpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x y.((Smopus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(y) & Dumpus(y) & Lorpus(y)))", "all x.((Furricolor(x) | Brimcolor(x) | Jomcolor(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Crumpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x y.((Smoothpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(y) & Dumpus(y) & Lorpus(y)))", "(all x.((Smopus(x) | Brimpus(x) | Jompus(x))) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Rumpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Smokey(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Grumps(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "(all x.((Grimpus(x) | Brimpus(x) | Jompus(x))) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Gruppus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Crampus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "(all x.((Grimpus(x) | Brimpus(x) | Jompus(x))) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Smoothpus(x) | Brimpus(x) | Jompus(x)) -> (Limpus(x) & Dumpus(x) & Loperus(x)))"]}
{"id": "prontoqa_train_863", "nl": "Sally is a brimpus.", "fol": "brimpus(Sally)", "prediction": ["all x.(Sally(x) -> Brimpus(x))", "Sally is a Brimpus.", "all x.(Brimpus(x) -> Sally(x))", "Sally is a Brimpus.", "Sally is a brimpus.", "(Brimpus(Sally) & Brimpus(Sally))", "all x.(Sally(x) -> Brimpus(x))", "all x.((Sally(x) & Brimpus(x)) -> Brimpus(x))", "all x.(Brimpus(x) -> Sally(x))", "Sally is Brimpus.", "(Brimpus(Sally) & Brimpus(Sally))", "Sally is a Brimpus.", "Sally is brimpus.", "all x.(Sally(x) -> Brimpus(x))", "All x.(Sally(x) -> Brimpus(x))", "All x.(Brumpus(x) -> Sally(x))"]}
{"id": "prontoqa_train_864", "nl": "Sally is a dumpus.", "fol": "dumpus(Sally)", "prediction": ["Sally is a dumpus.", "all x.(Sally(x) -> Dumpus(x))", "Sally is a dumpus.", "(Dumpus(Sally))", "all x.(Sally(x) -> Dumpus(x))", "all x.((Sally(x) & Dumpus(x)) -> Dumpus(x))", "Sally is a Dumpus.", "(Dumpus(Sally) & Dumpus(Sally))", "(Dumus(Sally) & HasDums(Sally,Sally))", "all x.(Sally(x) -> Dumpus(x))", "Sally is a dumpus.", "Sally is a Dumpus.", "Sally is Dumpus.", "Sally (Dumpus)", "All x.(Sally(x) -> Dumpus(x))", "Sally is a dumpus."]}
{"id": "prontoqa_train_865", "nl": "Each dumpus is a grimpus, a sterpus, and a gorpus.", "fol": "all x. (dumpus(x) -> (grimpus(x) & sterpus(x) & gorpus(x)))", "prediction": ["all x.(Dumpus(x) -> (Grimpus(x) | Sterpus(x) | Gorpus(x)))", "(all x.(Dumpus(x) -> Grimpus(x)) & all y.(Sterpus(y) & all z.(Gorpus(z)) -> Grimpus(x)))", "all x.(Dumpus(x) -> (Grimpus(x) | Sterpus(x) | Gorpus(x)))", "(all x.(Dumpus(x) -> Grimpus(x)) & all y.(Sterpus(y) -> Gorpus(y)))", "all x.(Dumpus(x) -> (Smooch(x) | Sterpus(x) | Gorpus(x)))", "all x y z.(Dumpus(x) -> (Grimpus(y) | Sterpus(y) | Gorpus(z)))", "(all x.(Dumpus(x) -> Grimpus(x)) & (Sterpus(x) & Gorpus(x)))", "all x.(Dumps(x) -> (Grimpus(x) | Sterpus(x) | Gorpus(x)))", "exists x.(Dumps(x) & Grimpus(x) & Sterpus(x) & Gorpus(x))", "all x.(Dumpus(x) -> (Grimpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> (Smokey(x) | Sterpus(x) | Gorpus(x)))", "exists x.(Dumpus(x) & Grimpus(x) & Sterpus(x) & Gorpus(x))", "(all x.(Dumpus(x) -> Grimpus(x)) & all y.(Sterepus(y) -> Gorpus(y)))", "(all x.(Dumpus(x) -> Grimpus(x)) & (Sterpus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (Grimpus(x) | Sterpus(x) | Gorpus(x)))", "exists x.(Dumpus(x) & Grimpus(x) & Sterpus(x) & Gorpus(x))"]}
{"id": "prontoqa_train_866", "nl": "Wren is a dumpus.", "fol": "dumpus(Wren)", "prediction": ["all x.(Wren(x) -> Dumpus(x))", "Wren is a Dumpus.", "all x.(Wren(x) -> Dumpus(x))", "(Dumpsus(Wren) & HasDumps(Wren))", "(Dumps(Wren) & Dumpus(Wren))", "(Dumpus(Wren))", "all x.(Wren(x) -> Dumpus(x))", "(Dumus(wren) & HasDumus(wren,w))", "(Dumpus(wren) -> Is(wren,w))", "all x.(Wren(x) -> Dumpus(x))", "all x.(Wren(x) -> Dumpus(x))", "(Dumpus)", "all x.(Wren(x) -> Dumpus(x))", "all x.(Wren(x) -> Dumpus(x))", "All x.(Wren(x) -> Dumpus(x))", "exists x.(Wren(x) & Dumpus(x))"]}
{"id": "prontoqa_train_867", "nl": "Wren is a shumpus or a sterpus or a grimpus.", "fol": "(shumpus(Wren) | sterpus(Wren) | grimpus(Wren))", "prediction": ["all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "(Shumpus) | Sterpus(Storpus) | Grimpus(Stormpus))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x y.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(y)))", "all x.(Wren(x) -> ((Shumpus(x) | Sterpus(x) | Grimpus(x))))", "(all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x))))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "exists x.(Wren(x) & ((Shumpus(x) & -Sterpus(x)) | (-Sterpus(x) & -Smooch(x)))))", "all x y.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "(all x.(Wren(x) -> (Shumpus(x) | Sterepus(x) | Grimpus(x)))", "all x.(Wren(x) -> ((Shumpus(x) | Sterpus(x) | Grimpus(x))))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Gruppus(x)))", "exists x.(Wren(x) & ((Shumpus(x) | Sterpus(x)) | Grimpus(x))))"]}
{"id": "prontoqa_train_868", "nl": "Brimpuses are jompuses.", "fol": "all x. (brimpus(x) -> jompus(x))", "prediction": ["all x.(Brimpus(x) -> Jompuse(x))", "all x.(Brompus(x) -> Jompuse(x))", "all x y.((Brompus(x) & Jompus(y)) -> Has(x,y))", "(Jompuse(brimpus) & Jompuse(brimpus))", "all x y.((Brimpus(x) & Jompuse(y)) -> (Brompus(x) & Jompuse(y)))", "all x.(Brimpus(x) -> Jompuse(x))", "all x.(Brimbus(x) -> Jompuse(x))", "(Jompuse(brimpus) -> Jompuse(brimpus))", "(all x.(Brimpus(x) -> Jompuse(x))", "all x.(Brompus(x) -> Jompuse(x))", "all x.(Brimpuse(x) -> Jompuse(x))", "all x.(Brimpus(x) -> Jompus(x))", "all x.(Brombus(x) -> Jompuse(x))", "all x.(Brimpus(x) -> Jompus(x))", "all x.(Brimpus(x) -> Jompuse(x))", "all x.(Brombus(x) -> Jompus(x))"]}
{"id": "prontoqa_train_869", "nl": "Rex is a rompus and a yumpus and a brimpus.", "fol": "(rompus(Rex) & yumpus(Rex) & brimpus(Rex))", "prediction": ["all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Yumpus(y) & all z.(Brimpus(z)) -> Brimpus(z))))", "all x y z.((Rex(x) & Rompus(y) & Yumpus(z)) -> (Rompus(x) & Yumpus(z) & Brimpus(z)))", "(all x.(Rex(x) -> Rompus(x)) & (Yumpus(x) | Brimpus(x))))", "all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))", "(Rompus(Rex) & Yumpus(Rex) & Brimpus(Rex))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Yumpus(y) & all z.(Brimpus(z) & Y.(Yumpus(z))) -> Brimpus(z)))", "(all x.(Rompus(x) -> Rex)) & (Yumpus(x) -> Rex)) & (Brimpus(x) -> Rex)))", "(Rompus(rex) & Yumpus(y) & Brimpus(rex))", "all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))", "all x y.((Rex(x) & Rompus(y)) -> (Yumpus(x) & Brimpus(x)))", "all x y z.((Rex(x) & Rompus(y) & Yumpus(z)) -> (Rompus(x) & Yampus(z) & Brimpus(z)))", "(all x.(Rompus(x) -> Rex)) & all y.(Yumpus(y) -> Rex(y))) & all z.(Brimpus(z) -> Rex(z)))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Brimpus(x)))", "exists x.(Rompus(x) & Yampus(x) & Brimpus(x))", "all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))"]}
{"id": "prontoqa_train_870", "nl": "Rex is a brimpus or a jompus or a gorpus.", "fol": "(brimpus(Rex) | jompus(Rex) | gorpus(Rex))", "prediction": ["all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "(Brimpus(rex) | Jompus(rex) | Gorpus(rex)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "(all x.(Rex(x) -> Brimpus(x)) | (Jompus(x) | Gorpus(x))))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "(Brimpus) | Jompus(x) | Gorpus(x))", "(Brimpus(rex) | Jompus(rex) | Gorpus(rex)))", "exists x.(Rex(x) & ((Brimpus(x) & -Brimpus(x)) | (-Brimpus(x) & Jompus(x)) | (-Brompus(x) & Gorpus(x)))))", "all x y.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "(all x.(Rex(x) -> Brimpus(x)) | (Jompus(x) | Gorpus(x))))", "all x.(Rex(x) -> (Brumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> ((Brimpus(x) | Jompus(x) | Gorpus(x))))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_871", "nl": "Everything that is a dumpus and a sterpus and a brimpus is a wumpus.", "fol": "all x. ((dumpus(x) & sterpus(x) & brimpus(x)) -> wumpus(x))", "prediction": ["all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumps(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x y.((Dumpus(x) & Sterpus(y) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x y z.((Dumpus(x) & Sterpus(y) & Brimpus(z) & Has(x,y)) -> Wumpus(x))", "(all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterus(x) & Brimpus(x)) -> Wumpus(x))", "(all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x y.((Dumpus(x) & Sterpus(y) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumps(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumps(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))"]}
{"id": "prontoqa_train_872", "nl": "Alex is a dumpus.", "fol": "dumpus(Alex)", "prediction": ["all x.(Alex(x) -> Dumpus(x))", "Alex is a Dumpus.", "all x.(Alex(x) -> Dumpus(x))", "Alex is a dumpus.", "(Dumpus(Alex))", "Alex is Dumpus.", "all x.(Alex(x) -> Dumpus(x))", "Alex is a Dumpus.", "Alex is Dumpus(Alex)", "(Dumpus(Alex))", "(Dumus(Alex) & HasDums(Alex))", "Alex is a dumpus.", "all x.(Alex(x) -> Dumpus(x))", "All x.(Alex(x) -> Dumpus(x))", "all x.(Alex(x) -> Dumpus(x))", "All x.(Alex(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_873", "nl": "Alex is a sterpus.", "fol": "sterpus(Alex)", "prediction": ["all x.(Alex(x) -> Sterpus(x))", "Alex is sterpus.", "all x.(Sterepus(x) -> Alex(x))", "Alex is a sterpus.", "(Sterepus(Alex) & Sterpus(Alex))", "all x.(Alex(x) -> Sterpus(x))", "Alex is Sterpus.", "all x.(Sterepus(x) -> Alex(x))", "Alex is sterpus.", "all x.(Sterepus(x) -> Sterpus(x))", "all x.(Alex(x) -> Sterpus(x))", "(Sterpus)", "Alex is Sterpus.", "All x.(Alex(x) -> Sterepus(x))", "all x.(Sterpus(x) -> Alex(x))", "All x.(Alex(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_874", "nl": "Alex is a brimpus.", "fol": "brimpus(Alex)", "prediction": ["all x.(Alex(x) -> Brimpus(x))", "Alex is a brimpus.", "all x.(Alex(x) -> Brimpus(x))", "Alex is a Brimpus.", "Alex is brimpus.", "all x.(Alex(x) -> Brimpus(x))", "(Brimpus(Alex) & HasBrimpus(Alex))", "all x.(Alex(x) -> Brimpus(x))", "Alex is a brimpus.", "(Brimpus(Alex) & Brimpus(Alex))", "all x.(Alex(x) -> Brimpus(x))", "all x.(Alex(x) -> Brimpus(x))", "All x.(Alex(x) -> Brimpus(x))", "all x.(Alex(x) -> Brimpus(x))", "all x.(Brimpus(x) -> Alex(x))", "All x.(Alex(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_875", "nl": "Alex is a zumpus, a wumpus, or a rompus.", "fol": "(zumpus(Alex) | wumpus(Alex) | rompus(Alex))", "prediction": ["all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "(Tompus(Alex) | Wumpus(Alex) | Rompus(Alex))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x y.((Alex(x) & Zumpus(y)) | (Wumpus(y) | Rompus(y))))", "(Tompus,Wumpus,Rompus)", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "(Tompus(Alex) | Wumpus(Alex) | Rompus(Alex))", "(Tompus,Wumpus,Rompus)", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Zumpus(x) | Wumpus(x) | Rompus(x)))", "exists x.(Alex(x) & Tompus(x) | Wumpus(x) | Rompus(x))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Zumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "exists x.(Alex(x) & (Zumpus(x) | Wompus(x) | Romanus(x)))"]}
{"id": "prontoqa_train_876", "nl": "Everything that is a numpus or a jompus or a vumpus is a rompus.", "fol": "all x. ((numpus(x) | jompus(x) | vumpus(x)) -> rompus(x))", "prediction": ["all x.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x y.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(y))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Voompus(x)) -> Rompus(x))", "all x.(((Nompus(x) | Jompus(x) | Vumpus(x))) -> Rompus(x))", "(all x.((Nompus(x) | Jompus(x) | Vumpus(x))) -> Rompus(x))", "all x y.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(y))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Voompus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vampus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vacus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Voluptus(x)) -> Rompus(x))", "all x.((Numpus(x) | Joompus(x) | Vampus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))"]}
{"id": "prontoqa_train_877", "nl": "Wren is a yumpus, a vumpus, and a shumpus.", "fol": "(yumpus(Wren) & vumpus(Wren) & shumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "(Yumpus(Wren) & Vumpus(Wren) & Humpus(Wren))", "(all x.(Wren(x) -> Yumpus(x)) & all y.(Wren(y) -> Vumpus(y)) & all z.(Wren(z) -> Humpus(z))))", "(yumpus) & vumpus(y) & shumpus(z))", "(Yumpus(w) | Vumpus(w) | Humpus(w)))", "all x y z.((Wren(x) & Yumpus(y) & Vumpus(z) & Humpus(z)) -> (Yumpus(x) | Vumpus(z) | Humpus(z)))", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Vumpus(x) & Humpus(x)))", "(yumpus) | vumpus(y) | shumpus(y))", "all x y.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(y)))", "(Yumpus,Vumpus,Shumpus)", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Vumpus(x) & Humpus(x)))", "exists x.(Wren(x) & Yumpus(x) & Vampus(x) & Humpus(x))", "exists x.(Wren(x) & Yampus(x) & Vumpus(x) & Humpus(x))", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))"]}
{"id": "prontoqa_train_878", "nl": "Wren is a rompus.", "fol": "rompus(Wren)", "prediction": ["all x.(Wren(x) -> Rompus(x))", "(Rompus(Wren) & -Rompus(Wren))", "all x.(Wren(x) -> Rompus(x))", "Wren is a rompus.", "(Rompus(Wren) & -Rompus(Wren))", "all x y.((Wren(x) & Rompus(y)) -> Raccoon(x))", "all x.(Wren(x) -> Rompus(x))", "(Rompus(Wren) & Species(Wren,Rompus))", "all x.(Rompus(x) -> Wren(x))", "(Rompus(Wren) & HasRompus(Wren))", "all x.(Wren(x) -> Rompus(x))", "all x.(Wren(x) -> Rompus(x))", "(Rompus(Wren)", "All x.(Wren(x) -> Rompus(x))", "all x.(Wren(x) -> Rompus(x))", "All x.(Wren(x) -> Rompus(x))"]}
{"id": "prontoqa_train_879", "nl": "Each numpus is not a shumpus.", "fol": "all x. (numpus(x) -> -shumpus(x))", "prediction": ["all x.(Numpus(x) -> -Shumpus(x))", "all x.(Nompus(x) -> -Shumpus(x))", "(all x.(Numpus(x) -> -Shumpus(x)))", "(-Shumpus(nump))", "all x.(Numpus(x) -> -Shumpus(x))", "exists x.(numpus(x) & -Shumpus(x))", "all x y.((Numpus(x) & Humpus(y)) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "(-Shumpus(nump))", "all x.(Nompus(x) -> -Shumpus(x))", "exists x.(numpus(x) & -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Nompus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))"]}
{"id": "prontoqa_train_880", "nl": "Everything that is a lempus, a yumpus, or a brimpus is a shumpus.", "fol": "all x. ((lempus(x) | yumpus(x) | brimpus(x)) -> shumpus(x))", "prediction": ["all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.(((Lempus(x) | Yumpus(x) | Brimpus(x))) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x y.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(y))", "all x.((Limpus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.(Shumpus(x) -> (Lempus(x) | Yumpus(x) | Brimpus(x)))", "all x.(((Lempus(x) | Yumpus(x) | Brimpus(x))) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "(all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yampus(x) | Brimpus(x)) -> Shumpus(x))", "all x y.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(y))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lampus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Limpus(x) | Yampus(x) | Brimpus(x)) -> Shumpus(x))"]}
{"id": "prontoqa_train_881", "nl": "Rex is a numpus and a gorpus and a rompus.", "fol": "(numpus(Rex) & gorpus(Rex) & rompus(Rex))", "prediction": ["all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "(numpus(Rex) & gorpus(Rex) & rompus(Rex))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Gorpus(y) & All z.(Rompus(z))) -> Nompus(x)))", "all x y.((Rex(x) & Numpus(y)) -> (Gorpus(x) & Rompus(x)))", "all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "all x y z.((Rex(x) & Numpus(y) & Gorpus(z)) -> (Numpus(x) & Rompus(x)))", "(numpus(Rex) & gorpus(Rex) & rompus(Rex))", "all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "(Numpus(rex) & Gorpus(rex) & Rompus(rex))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Gorpus(y) & All z.(Rompus(z)) -> Rompus(z))))", "all x y.((Rex(x) & Numpus(x) & Gorpus(y)) -> (Rompus(x) & Rompus(y)))", "(numpus(Rex) & Gorpus(Rex) & Rompus(Rex))", "(all x.(Rex(x) -> Numpus(x)) & (Gorpus(x) & Rompus(x)))", "all x.(Rex(x) -> (numpus(x) & gorpus(x) & rompus(x)))", "all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "exists x.(Rex(x) & Numpus(x) & Gorpus(x) & Rompus(x))"]}
{"id": "prontoqa_train_882", "nl": "Everything that is a wumpus, a jompus, and a tumpus is a zumpus and a sterpus and a brimpus.", "fol": "all x. ((wumpus(x) & jompus(x) & tumpus(x)) -> (zumpus(x) & sterpus(x) & brimpus(x)))", "prediction": ["all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x y.((Wumpus(x) & Jompus(y) & Tumpus(x)) -> (Tompus(y) & Sterpus(y) & Brimpus(y)))", "all x y z.((Wumpus(x) & Jompus(y) & Tumpus(z) & Tompus(x) & Sterpus(x) & Brimpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) & Jompus(x) & Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.(Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x y z.((Wumpus(x) & Jompus(y) & Tumpus(z) & Toumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "(all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> Zumpus(x)) & all y.((Sterpus(y) & brimpus(y)) -> Brimpus(y)))", "(all x.((Wumpus(x) | Jompus(x) | Tumpus(x))) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x y.((Wumpus(x) & Jompus(y) & Tumpus(x)) -> (Tompus(y) & Sterpus(y) & Brimpus(y)))", "all x.((Wumpus(x) & Jompus(x) & Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "(all x.((Wumpus(x) | Jompus(x) | Tumpus(x))) -> (Zumpus(x) & Sterepus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Zumpus(x) & Sterepus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Zumpus(x) & Sterepus(x) & Brimpus(x)))"]}
{"id": "prontoqa_train_883", "nl": "Max is a wumpus.", "fol": "wumpus(Max)", "prediction": ["(Wumpus(Max) & -Wumpus(Max))", "all x.(Max(x) -> Wumpus(x))", "Max is a wumpus.", "-Wumpus(Max)", "all x.(Wumpus(x) -> Max(x))", "(Wumpus(Max))", "(Wumpus(Max) & HasWumpus(Max))", "Max is a Wumpus.", "Max is a wumpus.", "all x.(Wumpus(x) -> Max(x))", "(Wumpus(Max) & Wumpus(Max))", "all x.(Wumpus(x) -> Max(x))", "(Wumpus(Max))", "Max is a wumpus.", "All x.(Max(x) -> Wumpus(x))", "all x.(Wumpus(x) -> Max(x))"]}
{"id": "prontoqa_train_884", "nl": "Max is a jompus.", "fol": "jompus(Max)", "prediction": ["all x.(Max(x) -> Jompus(x))", "Max is a Jompus.", "(Jumpus(Max) & Jompus(Max))", "(Jompus(Max) & HasJimmy(Max))", "all x.(Max(x) -> Jompus(x))", "all x.(Jompus(x) -> Max(x))", "Max is a Jompus.", "Max is jompus.", "-Jompus(Max)", "(Jompus(Max) -> HasJimmy(Max))", "(Jimpus(Max) & Jompus(Max))", "all x.(Max(x) -> Jompus(x))", "all x.(Jumpus(x) -> Max(x))", "(Jumpus(Max) -> Jompus(Max))", "Max is Jompus.", "All x.(Max(x) -> Jompus(x))"]}
{"id": "prontoqa_train_885", "nl": "Max is a tumpus.", "fol": "tumpus(Max)", "prediction": ["all x.(Max(x) -> Tumpus(x))", "(Tumpus(Max) & HasTump(Max))", "Max is a tumpus.", "Max isTumpus(Max)", "all x.(Max(x) -> Tumpus(x))", "-Tumpus(Max)", "Max is tumpus.", "(Tumpus(Max) & HasTump(Max))", "all x.(Matthew(x) -> Tumpus(x))", "all x.(Max(x) -> Tumpus(x))", "(Tumpus(Max) -> Tumpus(Max))", "all x.(Tumpus(x) -> Max(x))", "all x.(Max(x) -> Tumpus(x))", "(Tumpus(Max)", "All x.(Max(x) -> Tumulus(x))", "(Tumpus(Max)"]}
{"id": "prontoqa_train_886", "nl": "Max is a zumpus.", "fol": "zumpus(Max)", "prediction": ["all x.(Max(x) -> Zumpus(x))", "all x.(Max(x) -> Zumpus(x))", "(Zumpus(Max) & Has(Max))", "Max is zumpus.", "Max is a zumpus.", "all x.(Max(x) -> Zumpus(x))", "-Zombie.", "Max ist zumpus.", "(Zumpus(Max))", "all x.(Zumpus(x) -> Max(x))", "(Tompus(max) -> Zumpus(max))", "(Zumpus(Max) & Has(Max))", "all x.(Max(x) -> Zumpus(x))", "Max ist zumpus.", "All x.(Max(x) -> Zumpus(x))", "All x.(Max(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_887", "nl": "Every shumpus is a tumpus, a yumpus, and a lempus.", "fol": "all x. (shumpus(x) -> (tumpus(x) & yumpus(x) & lempus(x)))", "prediction": ["all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yumpus(x) & Lempus(x)))", "(all x.(Shumpus(x) -> Tumpus(x)) & all y.(Yumpus(y) -> Lempus(y)))", "all x y z.((Shumpus(x) & Tumpus(y) & Yumpus(z)) -> (Tumpus(x) | Lempus(z)))", "(all x.(Shumpus(x) -> Tumpus(x)) & all y.(Yumpus(y) & all z.(Lempus(z)) -> Lempus(z))))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yumpus(x) & Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))", "(all x.(Shumpus(x) -> Tumpus(x)) & all y.(Yumpus(y) -> Lempus(y)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yampus(x) | Lempus(x)))", "(all x.(Shumpus(x) -> Tumpus(x)) & (Yumpus(x) & Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))", "exists x.(Shumpus(x) & Tumpus(x) & Yumpus(x) & Lempus(x))", "all x.(Shumpus(x) -> (Tumpus(x) & Yampus(x) & Lempus(x)))", "exists x.(Shumpus(x) & Tumpus(x) & Yampus(x) & Lempus(x))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))"]}
{"id": "prontoqa_train_888", "nl": "Alex is a shumpus.", "fol": "shumpus(Alex)", "prediction": ["all x.(Alex(x) -> Humpus(x))", "Alex is a shumpus.", "Alex is shumpus.", "all x.(Alex(x) -> Humpus(x))", "Alex is a shumpus.", "Alex is Shumpus(Alex)", "all x.(Alex(x) -> Humpus(x))", "(Shumpus(Alex) & HasShump(Alex))", "all x.(Alex(x) -> Humptus(x))", "Alex is shumpus.", "all x.(Shumpus(x) -> Alex(x))", "(Shumpus(Alex) & HasSumpus(Alex))", "all x.(Alex(x) -> Humpus(x))", "All x.(Alex(x) -> Shumpus(x))", "all x.(Shumpus(x) -> Alex(x))", "All x.(Alex(x) -> Humptious(x))"]}
{"id": "prontoqa_train_889", "nl": "Alex is a tumpus or a dumpus or a brimpus.", "fol": "(tumpus(Alex) | dumpus(Alex) | brimpus(Alex))", "prediction": ["all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "(Tumpus(Alex) | Dumpus(Alex) | Brimpus(Alex))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "(Tumpus,Tumpus(Alex) | Dumpus,Brimpus))", "all x y.((Alex(x) & Tumpus(x) & Dumpus(y)) | Brimpus(x))", "(Tumpus(Alex) | Dumpus(Alex) | Brimpus(Alex))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "(all x.(Alex(x) -> Tumpus(x)) | (Dumpus(x) | Brimpus(x))))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> ((Tumpus(x) | Dumpus(x) | Brimpus(x))))", "exists x.(Alex(x) & ((Tumpus(x) | Dumpus(x)) | Brimpus(x))))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "exists x.(Alex(x) & (Tumpus(x) | Dumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_890", "nl": "Every sterpus is not a tumpus.", "fol": "all x. (sterpus(x) -> -tumpus(x))", "prediction": ["all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "(all x.(Sterpus(x) -> -Tumpus(x)))", "all x.(Steerpus(x) -> -Tumpus(x))", "-Tumpus(sterps)", "(all x.(Steerpus(x) -> -Tumpus(x)))", "all x.(Sterpus(x) -> -Tumpus(x))", "-Tumpus(sterp)", "all x.(Steerpus(x) -> -Tumpus(x))", "all x.(Strohpus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Sterepus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Steerpus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "exists x.(Steerpus(x) & -Tumpus(x))"]}
{"id": "prontoqa_train_891", "nl": "Every lorpus is a tumpus.", "fol": "all x. (lorpus(x) -> tumpus(x))", "prediction": ["all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "exists x y.(Lorpus(x) & Tumpus(y))", "all x.(Lorph(x) -> Tumpus(x))", "(all x.(Lorpus(x) -> Tumpus(x)))", "all x.exists y.(Lorpus(x) & Tumpus(y))", "all x.(Lorpus(x) -> Tumpus(x))", "exists x.(lorpus(x) & Tumpus(x))", "exists x y.(Lorpus(x) & Tumpus(y))", "all x.(Lorph(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumulus(x))", "all x.(Larp(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_892", "nl": "Wren is a sterpus.", "fol": "sterpus(Wren)", "prediction": ["all x.(Wren(x) -> Sterpus(x))", "all x.(Wren(x) -> Sterpus(x))", "(Sterpus(Wren) & Sterpus(Wren))", "All x y.((Wren(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Wren(x) -> Sterpus(x))", "(Sterpus(wren) & Sterpus(wren))", "all x.((Wren(x) & Sterpus(x)) -> Sterpus(x))", "(Sterpus(wren) & Sterpus(wren) & Sterpus(w))", "(Stereose(Wren))", "all x.(Wren(x) -> Sterpus(x))", "all x.(Wren(x) -> Sterepus(x))", "(Sterpus)", "all x.(Wren(x) -> Sterpus(x))", "All x.(Wren(x) -> Sterpus(x))", "All x.(Wren(x) -> Sterepus(x))", "all x.(Wren(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_893", "nl": "Wren is a grimpus or Wren is not a lorpus or Wren is a lempus.", "fol": "(grimpus(Wren) | -lorpus(Wren) | lempus(Wren))", "prediction": ["all x.((Wren(x) & (Grimpus(x) | -Lorpus(x) | Lempus(x))) -> Grimpus(x))", "(all x.(Wren(x) -> Grimpus(x)) | (-Lorpus(x) | Lempus(x))))", "((Wren(w) & Grimpus(w)) | (-Lorpus(w) & Lempus(w))))", "(exists x.(Wren(x) & Grimpus(x)) | exists y.(Wren(y) & -Lorpus(y))) | exists z.(Wren(z) & Lempus(z))))", "all x y.((Wren(x) & Grimpus(x)) | (-Lorpus(x) | Lempus(y))))", "all x.(Wren(x) -> (Grimpus(x) | -Lorpus(x) | Lempus(x)))", "all x y z.((Wren(x) & Grimpus(x) & (Wren(y) -> -Lorpus(y)) | (Wren(z) -> Lempus(z))))", "((Wren(w) & Grimpus(w)) | (-Lorpus(w) | Lempus(w))))", "(all x.(Wren(x) -> Grimpus(x)) | (-Lorpus(x) | Lempus(x))))", "all x.(Wren(x) -> ((Grimpus(x) | -Lorpus(x) | Lempus(x))))", "all x y.((Wren(x) & Grimpus(x)) | (-Lorpus(y) | Lempus(y))))", "(all x.(Wren(x) -> Grimpus(x)) | (-Lorpus(x) | Lempus(x))))", "(all x.(Wren(x) -> Grimpus(x)) & (-Lorpus(x) | Lempus(x))))", "all x.(Wren(x) -> (Grimpus(x) | -Lorpus(x) | Lempus(x)))", "exists x.(Wren(x) & ((Grimpus(x) | -Lorpus(x)) | (Lempus(x)))))", "all x.(Wren(x) -> (Smokey(x) | -Lorpus(x) | Lempus(x)))"]}
{"id": "prontoqa_train_894", "nl": "Every gorpus is a tumpus.", "fol": "all x. (gorpus(x) -> tumpus(x))", "prediction": ["all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x y.((Gorpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x y.((Gorpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "exists x.(Gorph(x) & Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumulus(x))", "exists x.(Gorpus(x) & Tumulus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "exists x.(Gorpus(x) & Humpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "exists x.(Gorpus(x) & Tumpus(x))"]}
{"id": "prontoqa_train_895", "nl": "Sally is not a tumpus and Sally is a lempus and Sally is a vumpus.", "fol": "(-tumpus(Sally) & lempus(Sally) & vumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Tumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> Vumpus(z))))", "all x y z.((Sally(x) & Tumpus(y) & Lempus(z)) -> (-Tumpus(x) & Lempus(x) & Vumpus(x)))", "all x.(Sally(x) -> (-Tumpus(x) & Lempus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & (Lempus(x) & Vumpus(x)))", "(all x y.(Tumpus(x) -> -Tumpus(x)) & (Lempus(y) -> Vumpus(y)))", "(-Tumpus(Sally) & Lempus(Sally) & Vumpus(Sally))", "all x y.((Sally(x) & Tumpus(y) & Lempus(y)) -> (-Tumpus(x) & Vumpus(x)))", "all x y z.((Sally(x) & Tumpus(y) & Lempus(z)) -> (-Tumpus(x) & Lempus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Lempus(y) & Vumpus(y)))", "all x.(Sally(x) -> (-Tumpus(x) & Lempus(x) & Vumpus(x)))", "(all x y.(Tumpus(x) -> -Tumpus(x)) & (Lempus(y) -> Vumpus(y)))", "exists x.(Sally(x) & -Tumpus(x) & Lempus(x) & Vumpus(x))", "all x y.((Sally(x) & Tumpus(y) & Lempus(y)) -> (-Tumpus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & (Lempus(x) & Vumpus(x)))", "all x y z.((Sally(x) & Tumpus(y) & Lempus(z)) -> (-Tumpus(x) & Lempus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> Vumpus(z))))"]}
{"id": "prontoqa_train_896", "nl": "Sally is a tumpus or Sally is a lorpus or Sally is not a gorpus.", "fol": "(tumpus(Sally) | lorpus(Sally) | -gorpus(Sally))", "prediction": ["all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Lorpus(x)) | (Sally(x) -> -Gorpus(x))))", "((Sally(s) & Tumpus(s)) | (Sally(s) & Lorpus(s)) | (Sally(s) & -Gorpus(s))))", "all x y.((Sally(x) & Tumpus(x)) | (Lorpus(x) | -Gorpus(y))))", "((Sally(Sally) & Tumpus(Sally)) | (Sally(Sally) & Lorpus(Sally)) | (Sally(Sally) & -Gorpus(Sally))))", "(exists x.(Sally(x) & Tumpus(x)) | exists y.(Lorpus(y) & -Gorpus(y))))", "all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) | (Lorpus(x) | -Gorpus(x))))", "all x.(Sally(x) -> ((Tumpus(x) | Lorpus(x) | -Gorpus(x))))", "all x.((Sally(x) & (Tumpus(x) | Lorpus(x) | -Gorpus(x))) -> (Tumpus(x) | Lorpus(x)))", "all x y.((Sally(x) & Tumpus(x)) | (Lorpus(x) | -Gorpus(y))))", "all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Lorpus(x)) | (-Sally(x) -> Gorpus(x))))", "exists x.(Sally(x) & ((Tumpus(x) & Sally(x)) | (Lorpus(x) & -Gorpus(x)))))", "exists x.(Tumpus(x) | Lorpus(x) | -Gorpus(x))", "all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))"]}
{"id": "prontoqa_train_897", "nl": "Numpuses are yumpuses, vumpuses, and gorpuses.", "fol": "all x. (numpus(x) -> (yumpus(x) & vumpus(x) & gorpus(x)))", "prediction": ["all x.(Numpuse(x) -> (Yumpus(x) | Vampuse(x) | Gorpus(x)))", "(Yumpuses(n) | Vampuses(n) | Gorpuses(n)))", "all x y z.((Numpuse(x) & Yumpus(y) & Vampus(z)) -> (Yumpus(y) | Gorpus(z)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vampuse(x) | Gorpus(x)))", "(all x.(Numpuse(x) -> (Yumpus(x) | Vampuse(x) | Gorpus(x)))", "all x y.((Numpuse(x) & Yumpuse(y)) -> (Vumpuse(y) | Gorpuse(y)))", "(all x.(Numpuse(x) -> Yumpuse(x)) & all y.(Vumpuse(y) -> Gorpuse(y)))", "(all x.(Numpuse(x) -> Yumpuse(x)) & all y.(Vampuse(y) & all z.(Gorpuse(z) & Yumpus(y)) -> Gorpuse(z))))", "all x.(Numpuse(x) -> (Yumpus(x) | Vumpus(x) | Gorpus(x)))", "(yumpuses(y) | vumpuses(y) | Gorpuses(y))", "all x.(Numpus(x) -> (Yumpus(x) | Vampus(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vumpuse(x) | Gorpus(x)))", "all x.(Numpus(x) -> (Yumpus(x) | Vumpus(x) | Gorpus(x)))", "all x.(Numpus(x) -> (Yumpus(x) | Vumpus(x) | Gorpus(x)))", "all x.(Numpus(x) -> (Yumpus(x) | Vampus(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpuse(x) | Vampuse(x) | Gorpuse(x)))"]}
{"id": "prontoqa_train_898", "nl": "Rex is a grimpus, Rex is not a gorpus, and Rex is a shumpus.", "fol": "(grimpus(Rex) & -gorpus(Rex) & shumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Grimpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Humpus(x)))", "all x y z.((Rex(x) & Grimpus(y) & Gorpus(z)) -> (Grimpus(x) & -Gorpus(y) & Humpus(z)))", "(all x y z.((Rex(x) & Grimpus(y)) -> Grimpus(x)) & ((Rex(z) & -Gorpus(z))) -> Humpus(z)))", "(all x.(Rex(x) -> Grimpus(x)) & (-Gorpus(x) & (Shumpus(x) | Grimpus(x))))", "all x.(Rex(x) -> (Grimpus(x) | -Gorpus(x) | Humpus(x)))", "(all x y z.((Rex(x) & Grimpus(y)) -> (Grimpus(z) & -Gorpus(z)) & ((Rex(x) & Humpus(x)) -> (Shumpus(x))))", "all x y z.((Rex(x) & Grimpus(y) & Gorpus(z)) -> (Smoothpus(x) | Shumpus(x)))", "all x y z.((Rex(x) & Grimpus(x) & Rex(y) & Gorpus(z)) -> (Shumpus(x) & Grimpus(y) & -Gorpus(y) & Shumpus(z)))", "(all x.(Rex(x) -> Grimpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Humpus(x)))", "(all x y z.((Rex(x) & Grimpus(y) & Gorpus(z)) -> Grimpus(x)) & ((Rex(x) & -Gorpus(x)) -> Humpus(x)))", "(all x.(Rex) -> Grimpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Humpus(x)))", "all x.(Rex(x) -> (Grimpus(x) | -Gorpus(x) | Humpus(x)))", "(all x.(Rex,Grimpus) -> (Grimpus)) & (-Gorpus(Rex) -> Shumpus(Rex)))", "all x y z.((Rex(x) & Grimpus(y) & Gorpus(z)) -> (Grimpus(x) & -Gorpus(y) & Humpus(z)))", "(all x.(Rex(x) -> Grimpus(x)) & (-Gorpus(x) & (Shumpus(x))))", "all x y z.((Rex(x) & Grumpus(y) & Gorpus(z)) -> (Grimpus(x) & -Gorpus(y) & Humpus(z)))"]}
{"id": "prontoqa_train_899", "nl": "Each yumpus is not a wumpus.", "fol": "all x. (yumpus(x) -> -wumpus(x))", "prediction": ["all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "(-Wumpus(y))", "(-Wumpus(y) & Yampus(z))", "all x y.((Yumpus(x) & Wumpus(y)) -> -Yumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x y.((Yumpus(x) & Wumpus(y)) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "exists x.(Yumpus(x) & -Wumpus(x))", "exists x.(yumpus(x) & -Wumpus(y))", "exists x.(Yumpus(x) & -Wumpus(x))"]}
{"id": "prontoqa_train_900", "nl": "Fae is a yumpus.", "fol": "yumpus(Fae)", "prediction": ["all x.(Fae(x) -> Yumpus(x))", "(Yumpus(Fae) & HasYump(Fae))", "Fae is yumpus.", "-Yumpus(Fae)", "all x.(Fae(x) -> Yampus(x))", "(Yumpus(Fae) & HasYump(Fae))", "all x.(Fae(x) -> Yumpus(x))", "(Yumpus(fee) & Yampus(fee))", "(Yumpus(Fae))", "all x.(Fae(x) -> Yampus(x))", "all x.(Yumpus(x) -> Fae(x))", "(Yumpus)", "All x.(Fae(x) -> Yumpus(x))", "all x.(Fae(x) -> Yumpus(x))", "(Yumpus)", "exists x.(Fae(x) & Yumpus(x))"]}
{"id": "prontoqa_train_901", "nl": "Fae is a vumpus or Fae is a wumpus or Fae is not a tumpus.", "fol": "(vumpus(Fae) | wumpus(Fae) | -tumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Vumpus(x)) | (Fae(x) -> Wumpus(x)) | (Fae(x) -> -Tumpus(x))))", "((Fae(f) & Vumpus(f)) | (Fae(f) & Wumpus(f)) | (Fae(f) & -Tumpus(f))))", "all x.(Fae(x) -> (Vumpus(x) | Wumpus(x) | -Tumpus(x)))", "(exists x.(Fae(x) & (Vumpus(x) | Wumpus(x) | -Tumpus(x))))", "all x y.((Fae(x) & Vumpus(x)) | (Fae(y) & Wumpus(y)) | (Fae(y) & -Tumpus(y))))", "all x y z.((Fae(x) & Vumpus(x) & Fae(y) & Wumpus(y) & -Tumpus(z)) -> (Vumpus(x) | Wumpus(y) | Fae(y)))", "all x.(Fae(x) -> (Vimpus(x) | Wumpus(x) | -Tumpus(x)))", "((Fae(f) & Vumpus(f)) | (Fae(f) & Wumpus(f)) | (Fae(f) & -Tumpus(f))))", "all x.(Fae(x) -> ((Vumpus(x) | Wumpus(x)) | -Tumpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) | (Fae(x) -> Wumpus(x)) | (Fae(x) -> -Tumpus(x))))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> Wumpus(x)) | (Fae(x) -> -Tumpus(x))))", "(exists x.(Fae(x) & (Vimpus(x) | Wumpus(x) | -Tumpus(x))))", "all x.(Fae(x) -> (Vumpus(x) | Wumpus(x) | -Tumpus(x)))", "exists x.(Fae(x) & ((Vumpus(x) | Wumpus(x)) | -Tumpus(x)))", "all x.(Fae(x) -> (Vimpus(x) | Wumpus(x) | -Tumpus(x)))", "exists x.(Fae(x) & ((Vimpus(x) | Wumpus(x)) | -Tumpus(x)))"]}
{"id": "prontoqa_train_902", "nl": "Everything that is a zumpus, a brimpus, or a numpus is a rompus, a lorpus, and a lempus.", "fol": "all x. ((zumpus(x) | brimpus(x) | numpus(x)) -> (rompus(x) & lorpus(x) & lempus(x)))", "prediction": ["all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x y.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(y) | Lorpus(y) | Lampus(y)))", "(all x.((Tompus(x) | Brimpus(x) | Numpus(x))) -> (Rompus(x) | Lorpus(x) | Lampus(x)))", "(all x.((Tompus(x) | Brimpus(x) | Numpus(x))) -> (Rompus(x) & Lorpus(x) & Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x y.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(y) | Lorpus(y) | Lempus(y)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) & Lorpus(x) & Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lampus(x)))", "all x.((Zumpus(x) | Brimpus(x) | Nomus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x y.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(y) | Lorpus(y) | Lempus(y)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) & Lorpus(x) & Lempus(x)))", "all x.((Zumpus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Zumpus(x) | Brimpus(x) | Nomus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) & Lorpus(x) & Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (rompus(x) | lorpus(x) | lempus(x)))"]}
{"id": "prontoqa_train_903", "nl": "Sam is a numpus.", "fol": "numpus(Sam)", "prediction": ["all x.(Sam(x) -> Numpus(x))", "Sam is Numpus(Sam)", "all x.(Sam(x) -> Numpus(x))", "(Numpus(Sam) & Numpus(Sam))", "Sam is Numpus(sam)", "Sam is a Numpus.", "(numpus(Sam) & HasNums(Sam))", "(Numpus(Sam) & HasNums(Sam,Sam))", "all x.(Sam(x) -> Numpus(x))", "Sam is Numpus.", "(Numpus(sam) & HasNum(sam))", "all x.(Sam(x) -> Numpus(x))", "(Numpus(sam) & Numpus(sam) & HasNums(sam))", "all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))"]}
{"id": "prontoqa_train_904", "nl": "Sam is a lempus.", "fol": "lempus(Sam)", "prediction": ["all x.(Sam(x) -> Lempus(x))", "Sam is a lempus.", "all x.(Sam(x) -> Lempus(x))", "all x.(Lempus(x) -> Sam(x))", "(Lempus(Sam) & HasLemp(Sam,Sam))", "Sam is a lempus.", "all x.(Sam(x) -> Lempus(x))", "Sam is Lempus.", "(Lempus(Sam) & Lempus(Sam))", "all x.(Lempus(x) -> Sam(x))", "(Lempus(sam) & HasLempics(sam,sam))", "all x.(Sam(x) -> Lempus(x))", "(Lempus(sam) -> Lempus(sam,sam))", "all x.(Lempus(x) -> Sam(x))", "all x.(Sam(x) -> Lempus(x))", "All x.(Sam(x) -> Lempus(x))"]}
{"id": "prontoqa_train_905", "nl": "Everything that is a wumpus or a zumpus or a grimpus is a jompus and a gorpus and a lempus.", "fol": "all x. ((wumpus(x) | zumpus(x) | grimpus(x)) -> (jompus(x) & gorpus(x) & lempus(x)))", "prediction": ["all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x y.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(y) & Gorpus(y) & Lempus(y)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x y.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(y) & Gorpus(y) & Lempus(y)))", "(all x.((Wumpus(x) | Zumpus(x) | Grimpus(x))) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.(Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "(all x.((Wumpus(x) | Zumpus(x) | Grimpus(x))) -> JompusAndGorpusAndLempus(x))", "all x.((Wumpus(x) | Zumpus(x) | Grappus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x y.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(y) & Gorpus(y) & Lempus(y)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jimpus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zurpus(x) | Grumpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jimpus(x) & Gorpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_906", "nl": "Alex is a grimpus.", "fol": "grimpus(Alex)", "prediction": ["all x.(Alex(x) -> Grimpus(x))", "Alex is a Grimpus.", "all x.(Alex(x) -> Grimpus(x))", "Alex is a Grimpus.", "Alex is grimpus.", "all x.(Alex(x) -> Grimpus(x))", "all x.(Alex(x) -> Grimpus(x))", "(Grimpus(Alex))", "all x.(Alex(x) -> Gruppus(x))", "(Grimpus(Alex) & Grimpus(Alex))", "Alex is Grimpus.", "Alex is a Grimpus.", "all x.(Smoothpus(x) -> Alex(x))", "all x.(Alex(x) -> Grimpus(x))", "All x.(Alex(x) -> Grimpus(x))", "All x.(Alex(x) -> Gruppus(x))"]}
{"id": "prontoqa_train_907", "nl": "Alex is a gorpus.", "fol": "gorpus(Alex)", "prediction": ["all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "Alex is Gorpus.", "Alex is Gorpus(Alex)", "all x.(Alex(x) -> Gorpus(x))", "Alex is a Gorpus.", "Alex is gorpus.", "all x.(Alex(x) -> Gorpus(x))", "(Gorpus(Alex) & HasGorpa(Alex))", "Alex is Gorpus(Alex)", "(Gorpus(Alex) & Gorpus(Alex))", "All x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "All x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_908", "nl": "Every yumpus is a sterpus and a jompus and an impus.", "fol": "all x. (yumpus(x) -> (sterpus(x) & jompus(x) & impus(x)))", "prediction": ["all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Imperator(x)))", "(all x.(Yumpus(x) -> Sterpus(x)) & all y.(Jompus(y) -> Issue(y)))", "all x y.((Yumpus(x) & Sterpus(x)) -> (Jompus(y) & Imperator(y)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Issue(x)))", "all x y.((Yumpus(x) & Sterpus(x) & Jompus(y) & Imperator(y)) -> Is(x,y))", "(all x.(Yumpus(x) -> Sterpus(x)) & (Jompus(x) -> Imperator(x)))", "all x.(Yumpus(x) -> (Sterepus(x) & Jompus(x) & Imperator(x)))", "(all x.(Yumpus(x) -> Sterpus(x)) & all y.(Jompus(y) -> Imperator(y)))", "all x y.(Yumpus(x) -> (Sterpus(x) & Jompus(y) & Imperator(y)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Impossible(x)))", "exists x.(Yumpus(x) & Sterpus(x) & Jompus(x) & Imperator(x))", "(all x.(Yumpus(x) -> Sterpus(x)) & (Jompus(x) -> Issue(x)))", "all x.(Yumpus(x) -> (Sterpus(x) | Jompus(x) | Imperator(x)))", "all x.(Yumpus(x) -> (Stereo(x) & Jompus(x) & Issue(x)))", "exists x.(Yumpus(x) & Sterpus(x) & Jompus(x) & Issue(x))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Imperator(x)))"]}
{"id": "prontoqa_train_909", "nl": "Lempuses are not jompuses.", "fol": "all x. (lempus(x) -> -jompus(x))", "prediction": ["all x.(Lempuse(x) -> -Jompuse(x))", "(all x.(Lempuse(x) -> -Jompuse(x)))", "all x.(Lempuse(x) -> -Jompuse(x))", "-Jompuse(lempuse)", "(all x.(Lempuse(x) -> -Jompuse(x)))", "all x.(Lemme(x) -> -Jompuse(x))", "all x.(Lempuse(x) -> -Jompuse(x))", "all x y.((Lempuse(x) & Jompus(y)) -> -Jompuse(x))", "all x.(Lempuse(x) -> -Jumpus(x))", "-Jompuse(lempuse,y)", "(all x.(Lempuse(x) -> -Jompuse(x)))", "all x.(Lempuse(x) -> -Jombuse(x))", "all x.(Lemme(x) -> -Jompuse(x))", "all x.(Lempuse(x) -> -Jimpus(x))", "all x.(Lempuse(x) -> -Jompuse(x))", "all x.(Lampuse(x) -> -Jumpus(x))"]}
{"id": "prontoqa_train_910", "nl": "Polly is a grimpus, an impus, and a lempus.", "fol": "(grimpus(Polly) & impus(Polly) & lempus(Polly))", "prediction": ["all x.(Polly(x) -> (Grimpus(x) | Impossible(x) | Lempus(x)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Impossible(y) & Lempus(y)))", "all x.(Polly(x) -> (Grimpus(x) | Imperator(x) | Lempus(x)))", "all x y z.((Polly(x) & Grimpus(y) & Impossible(z)) -> (Grimpus(x) & Lempus(x)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Impossible(y) & Lempus(y)))", "(all x.(Polly(x) -> Grimpus(x)) & (Impossible(x) | Lempus(x))))", "(All x.(Polly(x) -> (Grimpus(x) | Impossible(x) | Lempus(x))))", "(Smokey(Polly) | Impossible(Polly) | Lempus(Polly))", "all x.(Polly(x) -> (Grimpus(x) | Impossible(x) | Lempus(x)))", "all x.(Polly(x) -> (Grimpus(x) & Impossible(x) & Lempus(x)))", "all x.(Polly(x) -> (Grimpus(x) | Imperator(x) | Lempus(x)))", "all x.(Polly(x) -> (Grimpus(x) & Issue(x) & Lempus(x)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Impossible(y) -> Lempus(y)))", "(All x.(Polly(x) -> Grumpus(x)) & (Impossible(x) | Lempus(x))))", "exists x.(Polly(x) & (Grimpus(x) | Imperator(x) | Lempus(x)))", "exists x.(Polly(x) & Grimpus(x) & Issue(x) & Lempus(x))"]}
{"id": "prontoqa_train_911", "nl": "Everything that is a grimpus, a rompus, or a gorpus is a numpus.", "fol": "all x. ((grimpus(x) | rompus(x) | gorpus(x)) -> numpus(x))", "prediction": ["all x.((Smopus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Smoothpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Grampus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x y.((Smokey(x) | Rompus(x) | Gorpus(x)) -> Numpus(y))", "all x.((Gruppus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Element(x) & (Grimpus(x) | Rompus(x) | Gorpus(x))) -> Numpus(x))", "all x.((Smokey(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x y.((Smoothpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(y))", "all x.((Grimpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Gruppus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Fragpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Crupid(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rumpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "(all x.((Grimpus(x) | Rompus(x) | Gorpus(x))) -> Numpus(x))", "all x.((Smoothpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Gruppus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))"]}
{"id": "prontoqa_train_912", "nl": "Alex is a shumpus, Alex is not a numpus, and Alex is a sterpus.", "fol": "(shumpus(Alex) & -numpus(Alex) & sterpus(Alex))", "prediction": ["(all x.(Alex(x) -> Shumpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x)))", "all x y z.((Alex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Sterpus(z)))", "(all x.(Alex(x) -> Humpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x)))", "all x y z.((Alex(x) & Shumpus(y) & -Numpus(z)) -> (Shumpus(x) & Sterpus(x)))", "all x.(Alex(x) -> (Shumpus(x) & -Numpus(x) & Sterpus(x)))", "(all x y z.(Alex(x) -> Shumpus(x)) & (Alex(y) -> -Numpus(y)) & (Alex(z) -> Sterpus(z)))", "(all x y z.((Alex(x) & Humpus(y)) -> Shumpus(x)) & ((Alex(z) & -Numpus(z)) -> Sterpus(z)))", "(all x.(Alex(x) -> Shumpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x)))", "all x y z.((Alex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Sterpus(z)))", "(all x.(Alex(x) -> Humpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x)))", "all x.(Alex(x) -> (Shumpus(x) & -Numpus(x) & Sterpus(x)))", "all x.(Alex(x) -> (Shumpus(x) | -Numpus(x) | Sterpus(x)))", "all x y z.((Alex(x) & Shumpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Sterpus(z)))", "all x y z.((Alex(x) & Humpus(y) & Sterpus(z)) -> (Shumpus(x) & -Numpus(y) & Sterpus(z)))", "(all x.(Alex(x) -> Shumpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x)))", "(all x.(Alex(x) -> Humpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x)))"]}
{"id": "prontoqa_train_913", "nl": "Each wumpus is a lorpus, a sterpus, and a brimpus.", "fol": "all x. (wumpus(x) -> (lorpus(x) & sterpus(x) & brimpus(x)))", "prediction": ["all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "(all x.(Wumpus(x) -> Lorpus(x)) & all y.(Sterpus(y) & -Brimpus(y)))", "all x.(Wumpus(x) -> (Lorpus(x) & Sterpus(x) & Brimpus(x)))", "all x y z.((Wumpus(x) & Lorpus(y) & Sterpus(z)) -> (Lorpus(x) | Sterpus(z) | Brimpus(z)))", "all x y z.(Wumpus(x) -> (Lorpus(y) & Sterpus(z) & Brimpus(x)))", "all x y.((Wumpus(x) & Lorpus(y)) -> (Sterpus(x) & Brimpus(x)))", "(all x.(Wumpus(x) -> Lorpus(x)) & all y.(Sterpus(y) & -Brimpus(y)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "(all x.(Wumpus(x) -> Lorpus(x)) & (Sterpus(x) & (Brimpus(x) | Lorpus(x))))", "all x.(Wumpus(x) -> (Lorpus(x) & Sterpus(x) & Brimpus(x)))", "(all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "exists x.(Wumpus(x) & Lorpus(x) & Sterpus(x) & Brimpus(x))", "all x.(Wumpus(x) -> (Lorpus(x) & Sterepus(x) & Brimpus(x)))", "exists x.(Wumpus(x) & Lorpus(x) & Sterpus(x) & Brimpus(x))"]}
{"id": "prontoqa_train_914", "nl": "Stella is a wumpus.", "fol": "wumpus(Stella)", "prediction": ["Stella is a wumpus.", "(Wumpus(Stella) & -Wumpus(Stella))", "all x.(Wumpus(x) -> Stella(x))", "Stella is a wumpus.", "Stella is a Wumpus.", "(Wumpus(Stella))", "all x.(Wumpus(x) -> Stella(x))", "(Wumpus(Stella) & Wumpus(Stella))", "Stella (Wumpus)", "Stella is a wumpus.", "all x.(Wumpus(x) -> Stella(x))", "Stella is a Wumpus.", "(Wumpus(Stella))", "all x.(Wumpus(x) -> Stella(x))", "Stella is a wumpus.", "Stella is a Wumpus."]}
{"id": "prontoqa_train_915", "nl": "Stella is a jompus, a lorpus, or a shumpus.", "fol": "(jompus(Stella) | lorpus(Stella) | shumpus(Stella))", "prediction": ["all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "(Jompus(Stella) | Lorpus(Stella) | Humpus(Stella)))", "(all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x))))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "(Jompus(Stella) | Lorpus(Stella) | Humpus(Stella)))", "all x y.((Stella(x) & Jompus(y)) | Lorpus(y) | Humpus(y))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jimpus(x) | Lorpus(x) | Humpus(x)))", "(Jompus(Stella) | Lorpus(Stella)) | Humpus(Stella))", "exists x.(Stella(x) & ((Jompus(x) & -Lorpus(x) & -Shumpus(x)) | (-Jompus(x) & -Lorpus(x)))))", "(all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x))))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "exists x.(Stella(x) & (Jimpus(x) | Lorpus(x) | Humpus(x)))", "exists x.(Stella(x) & ((Jompus(x) | Lorpus(x)) | Humpus(x))))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jumpus(x) | Lorpus(x) | Humpus(x)))"]}
{"id": "prontoqa_train_916", "nl": "Each sterpus is a numpus and a yumpus and a zumpus.", "fol": "all x. (sterpus(x) -> (numpus(x) & yumpus(x) & zumpus(x)))", "prediction": ["all x.(Sterpus(x) -> (Numpus(x) & Yumpus(x) & Zumpus(x)))", "(all x.(Sterpus(x) -> Numpus(x)) & all y.(Yumpus(y) & all z.(Zumpus(z)) -> Zumpus(z))))", "all x y.((Sterpus(x) & Numpus(y)) -> (Yumpus(x) & Zumpus(x)))", "all x.(Sterpus(x) -> (numpus(x) & yumpus(x) & zumpus(x)))", "all x y z.((Sterpus(x) & Numpus(y) & Yumpus(z)) -> (Numpus(x) & Yumpus(z) & Zumpus(z)))", "(all x.(Sterpus(x) -> Numpus(x)) & (Yumpus(x) & Zumpus(x)))", "all x.(Sterepus(x) -> (Numpus(x) & Yumpus(x) & Zumpus(x)))", "all x.(Sterpus(x) -> (Numpus(x) & Yumpus(x) & Zumpus(x)))", "(all x.(Sterepus(x) -> Numpus(x)) & all y.(Yumpus(y) & all z.(Zumpus(z) & -Numpus(y))))", "all x y.((Sterpus(x) & Numpus(y) & Yumpus(y)) -> Zumpus(x))", "all x.(Steerpus(x) -> (numpus(x) & yumpus(x) & zumpus(x)))", "exists x.(Sterpus(x) & Numpus(x) & Yumpus(x) & Zumpus(x))", "(all x.(Sterpus(x) -> Numpus(x)) & (Yumpus(x) | Zumpus(x)))", "all x.(Sterpus(x) -> (Numpus(x) & Yumpus(x) & Zumpus(x)))", "exists x.(Steerpus(x) & Numpus(x) & Yumpus(x) & Zumpus(x))", "exists x.(Sterpus(x) & Numpus(x) & Yumpus(x) & Zumpus(x))"]}
{"id": "prontoqa_train_917", "nl": "Sam is not a numpus and Sam is a jompus and Sam is a yumpus.", "fol": "(-numpus(Sam) & jompus(Sam) & yumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Numpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Yumpus(x)))", "all x y z.((Sam(x) & Numpus(y) & Jompus(z)) -> (-Numpus(x) & Jompus(x) & Yumpus(x)))", "(all x.(Sam(x) -> -Numpus(x)) & all y.(Sam(y) -> Jompus(y))) & all z.(Sam(z) -> Yumpus(z)))", "all x.(Sam(x) -> (-Numpus(x) & Jompus(x) & Yumpus(x)))", "(all x y z.((Sam(x) & Numpus(y) & Jompus(z)) -> -Numpus(x)) & ((Sam(x) & Jompus(z)) -> Yumpus(x)))", "all x y z.((Sam(x) & Numpus(y) & Jompus(z)) -> (-Numpus(x) & Jompus(y) & Yumpus(z)))", "(-numpus(Sam) & Jompus(Sam) & Yumpus(Sam))", "(all x y.(Numpus(x) -> -Numpus(x)) & (Jompus(y) -> Yompus(y)))", "all x y.((Sam(x) & Numpus(y) & Jompus(y)) -> (-Numpus(x) & Yompus(y) & Yumpus(y)))", "(all x.(Sam(x) -> -Numpus(x)) & all y.(Jompus(y) & All z.(Yumpus(z))) -> -Numpus(x)))", "(all x.(Sam(x) -> -Numpus(x)) & (Jompus(x) | Yumpus(x))))", "all x.(Sam(x) -> (-Numpus(x) & Jompus(x) & Yumpus(x)))", "exists x.(Sam(x) & -Numpus(x) & Jompus(x) & Yumpus(x))", "all x y z.((Sam(x) & Numpus(y) & Jompus(z)) -> (-Numpus(x) & Jompus(x) & Yumpus(x)))", "all x y z.((Sam(x) & Numpus(y) & Jompus(z) & Yumpus(z)) -> (-Numpus(x) & Jompus(x) & Yumpus(x)))", "(all x.(Sam(x) -> -Numpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Yumpus(x)))"]}
{"id": "prontoqa_train_918", "nl": "Everything that is a lempus, a lorpus, or a zumpus is a wumpus, an impus, and a yumpus.", "fol": "all x. ((lempus(x) | lorpus(x) | zumpus(x)) -> (wumpus(x) & impus(x) & yumpus(x)))", "prediction": ["all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Imperempt(x) & Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Impossible(x) & Yumpus(x)))", "all x y.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(y) & Imperative(y) & Yumpus(y)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Imperator(x) | Yumpus(x)))", "all x y.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(y) & Impossible(y) & Yumpus(y)))", "(all x.((Lempus(x) | Lorpus(x) | Zumpus(x))) -> (Wumpus(x) | Imperator(x) | Yampus(x)))", "all x.(((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Imperative(x) | Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Issue(x) & Yumpus(x)))", "all x.(Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Issue(x) & Yampus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Imperative(x) | Yumpus(x)))", "(all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Impossible(x) & Yumpus(x)))", "(all x.((Lempus(x) | Lorpus(x) | Zumpus(x))) -> (Wumpus(x) | Imperative(x) | Yumpus(x)))", "all x.((Limpus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Impossible(x) | Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Imperator(x) & Yumpus(x)))", "all x.((Limpus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Imperator(x) | Yampus(x)))", "all x.((Lempus(x) | Lordpus(x) | Zumpus(x)) -> (Wumpus(x) & Impossible(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_919", "nl": "Wren is a lempus.", "fol": "lempus(Wren)", "prediction": ["all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "(Lempus(Wren) & Lempus(Wren))", "(Lempus(wren) & HasLempus(wren,w))", "all x.(Wren(x) -> Lempus(x))", "(Lampus) & Wren(Wren))", "all x.(Wren(x) -> Lempus(x))", "(Lempus(wren) -> Lempus(wren))", "(Lempus(wren) & LivesIn(wren,w))", "all x.(Wren(x) -> Lempus(x))", "All x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "All x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "exists x.(Wren(x) & Lempus(x))"]}
{"id": "prontoqa_train_920", "nl": "Wren is an impus.", "fol": "impus(Wren)", "prediction": ["all x.(Wren(x) -> IsImpossible(x))", "(Is(Wren(w) & Is(w)) -> Is(w))", "all x.(Wren(x) -> Is(x,y))", "(Impossible(Wren))", "Wren is a impus.", "all x.(Wren(x) -> Imperative(x))", "(Impossible(Wren,x))", "Wren is a impus.", "All x.(Wren(x) -> IsImpossible(x))", "(Impossible(Wren,x))", "all x.(Wren(x) -> Imperative(x))", "All x.(Wren(x) -> IsImpossible(x))", "All x.(Wren(x) -> Is(x,y))", "all x.(Wren(x) -> Impossible(x))", "all x.(Wren(x) -> Impeccable(x))", "All x.(Wren(x) -> IsImpossible(x))"]}
{"id": "prontoqa_train_921", "nl": "Everything that is a rompus or a vumpus or a zumpus is a lorpus, a brimpus, and a gorpus.", "fol": "all x. ((rompus(x) | vumpus(x) | zumpus(x)) -> (lorpus(x) & brimpus(x) & gorpus(x)))", "prediction": ["all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.(((Rompus(x) | Vumpus(x) | Zumpus(x))) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x y.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(y) & Brimpus(y) & Gorpus(y)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "(all x.((Rompus(x) | Vumpus(x) | Zumpus(x))) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x y.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(y) | Brimpus(y) | Gorpus(y)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "(all x.((Rompus(x) | Vumpus(x) | Zumpus(x))) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Voompus(x) | Zumpus(x)) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x.(Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x y.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(y) & Brimpus(y) & Gorpus(y)))", "all x.(Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_922", "nl": "Sam is a rompus.", "fol": "rompus(Sam)", "prediction": ["all x.(Rompus(x) -> Sam(x))", "all x.(Sam(x) -> Rompus(x))", "(Rompus(Sam) & Has(Sam,Sam))", "(Rompus(Sam) & -Rompus(Sam))", "Sam is a rompus.", "Sam is rompus.", "all x.(Rompus(x) -> Sam(x))", "all x.(Sam(x) -> Rompus(x))", "(rompus(Sam) & Has(Sam,Sam))", "(Rompus(Sam) & Has(Sam) & Has(Sam))", "(Rompus(Sam) & -Rompus(Sam))", "all x.(Rompus(x) -> Sam(x))", "Sam is rompus.", "all x.(Sam(x) -> Rompus(x))", "all x.(Rompus(x) -> Sam(x))", "All x.(Sam(x) -> Rompus(x))"]}
{"id": "prontoqa_train_923", "nl": "Sam is a gorpus.", "fol": "gorpus(Sam)", "prediction": ["all x.(Sam(x) -> Gorpus(x))", "all x.(Sam(x) -> Gorpus(x))", "Sam is Gorpus.", "Sam is Gorpus(Sam)", "all x.(Sam(x) -> Gorpus(x))", "(Gorpus(Sam) & HasGorpa(Sam))", "all x.(Sam(x) -> Gorpus(x))", "all x.(Gorpus(x) -> Sam(x))", "Sam is gorpus.", "(Gorpus(Sam) & HasGorpa(Sam))", "(Gorpus(sam) & Gorpus(sam))", "all x.(Sam(x) -> Gorpus(x))", "all x.(Gorpus(x) -> Sam(x))", "(Gorpus)", "all x.(Gorpus(x) -> Sam(x))", "all x.(Sam(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_924", "nl": "Everything that is a lorpus, a sterpus, and a grimpus is a tumpus.", "fol": "all x. ((lorpus(x) & sterpus(x) & grimpus(x)) -> tumpus(x))", "prediction": ["all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x y z.((Lorpus(x) & Sterpus(y) & Grimpus(z) & Has(x,y) & Has(x,z)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x y.((Lorpus(x) & Sterpus(y) & Grimpus(y)) -> Tumpus(x))", "all x y z.((Lorpus(x) & Sterpus(y) & Grimpus(z) & Is(x,y) & Is(x,z)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & Sterpus(x) & Grimpus(x)) -> Tumpus(x))", "(all x.((Lorpus(x) | Sterpus(x) | Grimpus(x))) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.(((Lorpus(x) | Sterpus(x) | Grimpus(x))) -> Tumpus(x))", "all x.(Tumpus(x) -> (Lorpus(x) | Sterpus(x) | Grimpus(x)))", "all x.((Lorpus(x) & Sterpus(x) & Grimpus(x)) -> Tumpus(x))", "(all x.((Lorpus(x) | Sterpus(x) | Grimpus(x))) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterepus(x) | Grumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))"]}
{"id": "prontoqa_train_925", "nl": "Fae is not a tumpus, Fae is a dumpus, and Fae is a wumpus.", "fol": "(-tumpus(Fae) & dumpus(Fae) & wumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> Wumpus(x)))", "all x y z.((Fae(x) & Dumpus(y) & Wumpus(z)) -> (-Tumpus(x) & Dumpus(y) & Wumpus(z)))", "(all x y z.((Fae(x) & Tumpus(y)) -> -Tumpus(x)) & ((Fae(z) & Dumpus(z)) -> Wumpus(z)))", "(all x.(Fae(x) -> -Tumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> Wumpus(z))))", "all x.(Fae(x) -> (-Tumpus(x) & Dumpus(x) & Wumpus(x)))", "all x y z.((Fae(x) & Dumpus(y) & Wumpus(z)) -> (-Tumpus(x) & Dumpus(y) & Wumpus(z)))", "(all x.(Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> Wumpus(x)))", "(all x y z.((Fae(x) & Tumpus(y) & Dumpus(z)) -> -Tumpus(x)) & ((Fae(x) & Dumpus(x)) -> Wumpus(x)))", "(all x y z.((Fae(x) & Tumpus(y)) -> -Tumpus(x)) & ((Fae(z) & Dumpus(z))) -> Wumpus(z)))", "exists x.(Fae(x) & -Tumpus(x) & Dumpus(x) & Wumpus(x))", "all x y z.(Fae(x) & (Tumpus(y) | Dumpus(y) | Wumpus(z))) -> -Tumpus(x))", "(all x.(Fae(x) -> -Tumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> Wumpus(z))))", "all x y z.((Fae(x) & Dumpus(y) & Wumpus(z)) -> (-Tumpus(x) & Dumpus(y) & Wumpus(z)))", "all x y z.((Fae(x) & Dumpus(y) & Wumpus(z)) -> (-Tumpus(x) & Dumpus(y) & Wumpus(z)))", "(all x.(Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> Wumpus(x)))", "(all x.(Fae(x) -> -Tumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> Wumpus(z)))"]}
{"id": "prontoqa_train_926", "nl": "Fae is a lorpus.", "fol": "lorpus(Fae)", "prediction": ["all x.(Fae(x) -> Lorpus(x))", "(Lorpus(Fae) & LivesIn(Fae,Lorpus))", "Fae is a lorpus.", "all x.(Fae(x) -> Lorpus(x))", "(Lorpus(Fae) & LivesIn(Fae,Lorpus))", "Fae is a lorpus.", "all x.(Fae(x) -> Lorpus(x))", "(Lorpus(fee) & LivesIn(fee,fee))", "(Lorpus(fee) & HasLorph(fee))", "all x.(Fae(x) -> Lorpus(x))", "all x.(Fae(x) -> Llorpus(x))", "exists x.(Fae(x) & Lompus(x))", "(Lorpus)", "all x.(Fae(x) -> Lorpus(x))", "all x.(Lorpus(x) -> Fae(x))", "All x.(Fae(x) -> Llorpus(x))"]}
{"id": "prontoqa_train_927", "nl": "Fae is a sterpus.", "fol": "sterpus(Fae)", "prediction": ["all x.(Fae(x) -> Sterpus(x))", "(Sterpus(Fae) & Sterpus(Fae))", "all x.(Fae(x) -> Sterpus(x))", "-Sterpus(Fae)", "Fae is sterpus.", "(Stereosis(Fae) & Sterpus(Fae))", "(Sterpus(Fae) & Sterpus(Fae))", "all x.(Fae(x) -> Sterpus(x))", "(Stereose(Fae))", "(Sterpus(fee) & Sterpus(fee))", "all x.(Fae(x) -> Sterepus(x))", "all x.(Fae(x) -> Steroid(x))", "exists x.(Fae(x) & Steroid(x) & Sterpus(x))", "all x.(Fae(x) -> Sterpus(x))", "All x.(Fae(x) -> Sterepus(x))", "all x.(Fae(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_928", "nl": "Lempuses are dumpuses and sterpuses and wumpuses.", "fol": "all x. (lempus(x) -> (dumpus(x) & sterpus(x) & wumpus(x)))", "prediction": ["all x.(Lempuse(x) -> (Dumpsuse(x) & Sterpuse(x) & Wumpuse(x)))", "all x y.((Lempuse(x) & Sterpuse(y)) -> (Dumpsuse(x) & Sterpuse(y) & Wumpuse(y)))", "all x.(Lempuse(x) -> (Dumpuse(x) | Sterpuse(x) | Wumpuse(x)))", "(all x.(Lempuse(x) -> Dumpuse(x)) & (Sterpuse(x) | Wumpuse(x)))", "all x y z.((Lempuse(x) & Sterpuse(y) & Wumpuse(z)) -> (Dumpuse(x) | Sterpuse(y) | Wumpuse(z)))", "(all x.(Lempuse(x) -> Dumpuse(x)) & all y.(Sterpuse(y) -> Wumpuse(y)))", "all x y.((Lempuse(x) & Sterpuse(y)) -> (Dumpuse(x) | Sterpuse(y) | Wumpuse(y)))", "all x.(Lempuse(x) -> (Dumuse(x) | Sterpuse(x) | Wumpuse(x)))", "all x.(Lempuse(x) -> (Dumpuse(x) & Sterpuse(x) & Wumpuse(x)))", "all x.(Lempuse(x) -> (Dumps(x) & Sterpuses(x) & Wumpuses(x)))", "(all x.(Lempuse(x) -> Dumpuse(x)) & (Sterpuse(x) | Wumpuse(x)))", "(all x.(Lempuse(x) -> Dumpus(x)) & all y.(Sterpuse(y) -> Wumpuse(y)))", "(all x.(Lampuse(x) -> Dumpuse)) & (Sterpuse(x) | Wumpuse(x)))", "all x.(Lampuse(x) -> (Dumpuse(x) | Sterpuse(x) | Wumpuse(x)))", "all x.(Lempuse(x) -> (Dupus(x) & Sterus(x) & Wumpus(x)))", "(all x.(Lempuse(x) -> Dumpuse(x)) & (Sterpuse(x) | Wumpuse(x)))"]}
{"id": "prontoqa_train_929", "nl": "Sam is a yumpus, a zumpus, or a sterpus.", "fol": "(yumpus(Sam) | zumpus(Sam) | sterpus(Sam))", "prediction": ["all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "(Yumpus(sam) | Zumpus(sam) | Sterpus(sam))", "(yumpus) | zumpus(y) | sterpus(y)))", "(Yumpus,yumpus,zumpus,sterpus)", "all x y.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "(Yumpus,Yumpus,Zumpus,Sterpus)", "(yumpus) | zumpus(y) | sterpus(y)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterepus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "exists x.(Sam(x) & (Yumpus(x) | Zumpus(x) | Steroid(x)))", "exists x.(Sam(x) & (Yumpus(x) | Zumpus(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_930", "nl": "Each tumpus is a rompus and a zumpus and a wumpus.", "fol": "all x. (tumpus(x) -> (rompus(x) & zumpus(x) & wumpus(x)))", "prediction": ["all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "(all x.(Tumpus(x) -> Rompus(x)) & all y.(Tompus(y) -> Zumpus(y)) & all z.(Wumpus(z) -> Wumpus(z))))", "all x y.((Tumpus(x) & Rompus(y)) -> (Tompus(x) & Tompus(x) & Wumpus(x)))", "all x y z.((Tumpus(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "(all x.(Tumpus(x) -> Rompus(x)) & (Tompus(x) -> Zumpus(x)) & (Wumpus(x) -> Tompus(x)))", "(all x.(Tumpus(x) -> Rompus(x)) & all y.(Tompus(y) -> Tompus(y))) & all z.(Tompus(z) -> Wumpus(z)))", "all x y z.(Tumpus(x) -> (Rompus(y) & Zumpus(z) & Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "all x y.((Tumpus(x) & Rompus(y)) -> (Tompus(x) & Zumpus(x) & Wumpus(x)))", "exists x.(Tumpus(x) & Rompus(x) & Zumpus(x) & Wumpus(x))", "(all x.(Tumpus(x) -> Rompus(x)) & (Tompus(x) -> Zumpus(x)) & (Wumpus(x) -> Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) | Zumpus(x) | Wumpus(x)))", "exists x.(Tumpus(x) & Rompus(x) & Zumpus(x) & Wumpus(x))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))"]}
{"id": "prontoqa_train_931", "nl": "Rex is a tumpus.", "fol": "tumpus(Rex)", "prediction": ["all x.(Rex(x) -> Tumpus(x))", "Rex is a tumpus.", "all x.(Rex(x) -> Tumpus(x))", "(Tumpus(Rex) & HasTumpus(Rex))", "Rex is a tumpus.", "all x.(Tumpus(x) -> Rex(x))", "Rex is tumpus.", "Rex (Tumpus)", "Rex.(Tumpus(x) -> HasTumpus(x))", "(Tumpus(Rex))", "Rex is a tumpus.", "all x.(Tumpus(x) -> Rex(x))", "All x.(Rex(x) -> Tumpus(x))", "(Tumpus(rex) & HasTump(rex))", "All x.(Rex(x) -> Tumpus(x))", "all x.(Tumpus(x) -> Rex(x))"]}
{"id": "prontoqa_train_932", "nl": "Rex is a lempus, a jompus, or a rompus.", "fol": "(lempus(Rex) | jompus(Rex) | rompus(Rex))", "prediction": ["all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "(all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x))))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "(Limpus,Jompus,Rompus)", "(all x.(Rex(x) -> Lempus(x)) | (Jompus(x) | Rompus(x))))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x y.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(y)))", "(all x.(Rex(x) -> Lempus(x)) | (Jompus(x) | Rompus(x))))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "(all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Limpus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Limpus(x) | Jompus(x) | Rompus(x)))", "exists x.(Rex(x) & (Lempus(x) | Jompus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_933", "nl": "Everything that is a wumpus and a numpus and a brimpus is a lorpus, a jompus, and a rompus.", "fol": "all x. ((wumpus(x) & numpus(x) & brimpus(x)) -> (lorpus(x) & jompus(x) & rompus(x)))", "prediction": ["all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x y z.((Wumpus(x) & Numpus(y) & Brimpus(z) & Is(x,y) & Is(x,z)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x y.((Wumpus(x) & Numpus(y) & Brimpus(y)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "(all x.((Wumpus(x) & -Numpus(x) & -Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "(all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) | Numpus(x) | Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x y.((Wumpus(x) & Numpus(y) & Brimpus(y)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x y z.((Wumpus(x) & Numpus(y) & Brimpus(z) & HasWumpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "(all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.(Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) | Numpus(x) | Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_934", "nl": "Stella is a numpus.", "fol": "numpus(Stella)", "prediction": ["Stella is Numpus(Stella)", "all x.(Stella(x) -> Numpus(x))", "Stella is a Numpus.", "(Numpus(Stella) & Numpus(Stella))", "all x.((Stella(x) & Numpus(x)) -> Numpus(x))", "Stella is a Numpus(Stella)", "Stella is Numpus(Stella)", "all x.(Stella(x) -> Numpus(x))", "(Numpus(Stella))", "Stella is Numpus(s)", "(Numpus(Stella) & Numpus(Stella))", "all x.(Stella(x) -> Numpus(x))", "Stella (numpus)", "Stella is a Numpus.", "Stella is Numpus.", "(Numpus(Stella))"]}
{"id": "prontoqa_train_935", "nl": "Stella is a brimpus.", "fol": "brimpus(Stella)", "prediction": ["all x.(Stella(x) -> Brimpus(x))", "Stella is a Brimpus.", "Stella is a brimpus.", "all x.(Stella(x) -> Brimpus(x))", "(Brimpus(Stella) & Brimpus(Stella))", "Stella is a Brimpus.", "all x.(Stella(x) -> Brimpus(x))", "Stella is a brimpus.", "Stella (Brimpus)", "Stella is brimpus.", "all x.(Brimpus(x) -> Stella(x))", "(Brimpus(Stella))", "Stella is a Brimpus.", "(Brimpus(Stella) & Brimpus(Stella))", "all x.(Stella(x) -> Brimpus(x))", "All x.(Stella(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_936", "nl": "Stella is a jompus.", "fol": "jompus(Stella)", "prediction": ["all x.(Stella(x) -> Jompus(x))", "Stella is a Jompus.", "(Jompus(Stella) & Jompus(Stella))", "Stella is a Jompus.", "Stella is Jompus(Stella)", "all x.(Stella(x) -> Jompus(x))", "Stella is a jompus.", "(Jompus(Stella) & Jompus(Stella))", "(Jimpus(Stella) & Jompus(Stella))", "all x.(Stella(x) -> Jompus(x))", "Stella (Jompus)", "Stella is a Jompus.", "Stella is Jompus.", "Stella is jompus.", "all x.(Stella(x) -> Jompus(x))", "All x.(Stella(x) -> Jompus(x))"]}
{"id": "prontoqa_train_937", "nl": "Each shumpus is a sterpus and a vumpus and a jompus.", "fol": "all x. (shumpus(x) -> (sterpus(x) & vumpus(x) & jompus(x)))", "prediction": ["all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "(all x.(Shumpus(x) -> Sterpus(x)) & all y.(Vumpus(y) & All z.(Jompus(z)) -> Jompus(z))))", "all x y.((Shumpus(x) & Sterpus(y)) -> (Vumpus(x) & Jompus(x)))", "all x y z.((Shumpus(x) & Sterpus(y) & Vumpus(z) & Jompus(z)) -> (Shumpus(x) & Sterpus(y) & Vumpus(z) & Jompus(z)))", "all x.(Shumpus(x) -> (Sterepus(x) & Vumpus(x) & Jompus(x)))", "all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "(all x.(Shumpus(x) -> Sterpus(x)) & all y.(Vimpus(y) & -Jimpus(y))))", "all x y.((Shumpus(x) & Sterpus(y)) -> (Vimpus(x) & Jompus(x)))", "exists x.(Shumpus(x) & Sterpus(x) & Vumpus(x) & Jompus(x))", "(all x.(Shumpus(x) -> Sterpus(x)) & (Vumpus(x) | Jompus(x)))", "all x.(Shumpus(x) -> (Stereopus(x) & Vumpus(x) & Jompus(x)))", "all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "(all x.(Shumpus(x) -> Sterus(x)) & (Vumpus(x) | Jompus(x)))", "exists x.(Shumpus(x) & Sterpus(x) & Vumpus(x) & Jompus(x))", "all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "(all x.(Shumpus(x) -> Sterpus(x)) & (Vimpus(x) | Jompus(x)))"]}
{"id": "prontoqa_train_938", "nl": "Stella is a yumpus and Stella is not a jompus and Stella is a gorpus.", "fol": "(yumpus(Stella) & -jompus(Stella) & gorpus(Stella))", "prediction": ["(all x.(Stella(x) -> Yumpus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Gorpus(x)))", "all x y z.((Stella(x) & Yumpus(y) & Stella(z)) -> (Yumpus(x) & -Jompus(z) & Gorpus(z)))", "(all x.(Yumpus(x) -> Stella)) & (-Jompus(x) -> Stella)) & (Gorpus(x) -> Stella)))", "all x y.((Stella(x) & Yumpus(x)) -> (-Jompus(x) & Gorpus(y)))", "(all x y.(Yumpus(x) -> Stella(x)) & (-Jompus(y) -> Stella(y))) & (-Jompus(y) -> Stella(y)))", "all x.(Stella(x) -> (Yumpus(x) & -Jompus(x) & Gorpus(x)))", "(all x y z.((Stella(x) & Yumpus(y) & -Jompus(z)) -> (Yumpus(x) & -Jompus(y) & Gorpus(z)))", "all x y z.((Stella(x) & Yumpus(y) & Stella(z)) -> (-Jompus(z) & Gorpus(z)))", "(all x.(Yumpus(x) & -Jompus(x)) & all y.(Gorpus(y)) -> (Yumpus(y) & Gorpus(y))))", "(all x.(Stella(x) -> Yampus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Gorpus(x)))", "all x y z.((Stella(x) & Yumpus(x) & Stella(y) & Jompus(z)) -> (Yumpus(x) & -Jompus(y) & Gorpus(z)))", "exists x.(Yumpus(x) & -Jompus(x) & Gorpus(x))", "(all x y.(Yumpus(x) -> Stella(x)) & (-Jompus(y) -> Stella(y)) & (Gorpus(y) -> Stella(y)))", "all x.(Stella(x) -> (Yumpus(x) & -Jompus(x) & Gorpus(x)))", "all x y.((Stella(x) & Yumpus(x)) -> (-Jompus(x) & Gorpus(y)))", "(all x.(Stella(x) -> Yumpus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Gorpus(x)))"]}
{"id": "prontoqa_train_939", "nl": "Dumpuses are lempuses.", "fol": "all x. (dumpus(x) -> lempus(x))", "prediction": ["all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x y.((Dumpuse(x) & Lempuse(y)) -> Lempuse(x))", "(all x.(Dumpuse(x) -> Lempuse(x)))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x y.((Dumpuse(x) & Lempuse(y)) -> Lempuse(x))", "(all x.(Dumpuse(x) -> Lempuse(x)))", "(Lempuse(dumpus) & Lempuse(dumpus))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpus(x) -> Lempuse(x))", "all x.(Dumpus(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))"]}
{"id": "prontoqa_train_940", "nl": "Stella is not a lempus, Stella is a tumpus, and Stella is a grimpus.", "fol": "(-lempus(Stella) & tumpus(Stella) & grimpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Grimpus(x)))", "all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) & Tumpus(x) & Grimpus(x)))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y)) & all z.(Stella(z) -> Grimpus(z))))", "(all x y z.((Stella(x) & Lempus(y)) -> -Lempus(x)) & ((Stella(z) & Tumpus(z))) -> Grimpus(z)))", "all x.(Stella(x) -> (-Lempus(x) & Tumpus(x) & Grimpus(x)))", "all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) & Tumpus(x) & Grimpus(x)))", "(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Grimpus(x)))", "(all x y z.((Stella(x) & Lempus(y)) -> -Lempus(x)) & ((Stella(z) & Tumpus(z)) -> Grimpus(z)))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y))) & all z.(Stella(z) -> Grimpus(z)))", "exists x.(Stella(x) & -Lempus(x) & Tumpus(x) & Grimpus(x))", "all x y z.((Stella(x) & Tumpus(y) & Grimpus(z)) -> (-Lempus(x) & -Tumpus(y) & -Stella(z)))", "all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) & Tumpus(y) & Gruppus(z)))", "all x y z.(Stella(x) -> (-Lempus(x) & Stella(y) & Tumpus(y) & Grimpus(z)))", "(all x y z.((Stella(x) & Lempus(y)) -> -Lempus(x)) & ((Stella(z) & Tumpus(z))) -> Grimpus(z)))", "all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) | (Tumpus(x) | Grimpus(x))))", "(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Gruppus(x)))"]}
{"id": "prontoqa_train_941", "nl": "Stella is a lorpus, Stella is a shumpus, or Stella is not a dumpus.", "fol": "(lorpus(Stella) | shumpus(Stella) | -dumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Lorpus(x)) | (Stella(x) -> Humpus(x))) | (Stella(x) -> -Dumpus(x))))", "all x y.((Stella(x) & Lorpus(x)) | (Stella(y) & Humpus(y)) | (-Stella(y) & Dumpus(y))))", "all x.((Lorpus(x) | Humpus(x) | -Dumpus(x)) -> Stella(x))", "all x y.((Lorpus(x) & Shumpus(y)) -> (Lorpus(x) | Shumpus(y) | -Dumpus(y)))", "all x.(Stella(x) -> (Lorpus(x) | Shumpus(x) | -Dumpus(x)))", "all x y z.((Stella(x) & Lorpus(x) & Shumpus(y)) -> (Lorpus(x) | Shumpus(y) | -Dumpus(z)))", "(all x.(Stella(x) -> Lorpus(x)) | (Stella(x) -> Humpus(x)) | (Stella(x) -> -Dumpus(x))))", "exists x.(Stella(x) & ((Lorpus(x) & Stella(x)) | (Shumpus(x) & -Dumpus(x)))))", "(all x y.(Lorpus(x) -> Stella(y)) & (Shumpus(y) | -Dumpus(y))))", "exists x.(Lorpus(x) | Humpus(x) | -Dumpus(x))", "(all x.(Lorpus(x) | Shumpus(x) | -Dumpus(x)))", "(all x.(Stella(x) -> Lorpus(x)) & (Stella(x) -> Humpus(x)) | (Stella(x) -> -Dumpus(x))))", "all x y.((Stella(x) & Lorpus(x)) | (Stella(y) & Humpus(y)) | (Stella(y) & -Dumpus(y))))", "(all x.(Lorpus(x) | Humpus(x) | -Dumpus(x)))", "exists x.(Stella(x) & ((Lorpus(x) & Stella(x)) | (Shumpus(x) & -Dumpus(x))))", "(all x.(Stella(x) -> Loomis(x)) | (Stella(x) -> Humpus(x)) | (Stella(x) -> -Dumpus(x))))"]}
{"id": "prontoqa_train_942", "nl": "Each lorpus is a numpus, a vumpus, and a tumpus.", "fol": "all x. (lorpus(x) -> (numpus(x) & vumpus(x) & tumpus(x)))", "prediction": ["all x.(Lorpus(x) -> (Numpus(x) | Vumpus(x) | Tumpus(x)))", "(all x.(Lorpus(x) -> Numpus(x)) & all y.(Vumpus(y) & -Tumpus(y)))", "all x.(Lorpus(x) -> (Numpus(x) & Vumpus(x) & Tumpus(x)))", "(all x.(Lorpus(x) -> Numpus(x)) & all y.(Vumpus(y) & all z.(Tumpus(z) & -Numpus(z))) -> Tumpus(z)))", "all x y z.(Lorpus(x) -> (Numpus(y) | Vumpus(y) | Tumpus(z)))", "all x y.((Lorpus(x) & Numpus(y) & Vumpus(y)) -> Tumpus(x))", "all x.(Lorpus(x) -> (numpus(x) | vumpus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) | Vumpus(x) | Tumpus(x)))", "exists x.(lorpus(x) & (Numpus(x) | Vumpus(x) | Tumpus(x)))", "(all x.(Lorpus(x) -> Numpus(x)) & all y.(Vumpus(y) & All z.(Tumpus(z)) -> Tumpus(z))))", "all x.(Lorpus(x) -> (Numpus(x) & Vumpus(x) & Tumpus(x)))", "(all x.(Lorpus(x) -> Numpus(x)) & (Vumpus(x) & Tumpus(x)))", "all x.(Lorpus(x) -> (numpus(x) | vumpus(x) | Tumpus(x)))", "exists x.(lorpus(x) & (Numpus(x) | Vumpus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) | Vumpus(x) | Tumpus(x)))", "exists x.(Lorpus(x) & Numpus(x) & Vumpus(x) & Tumpus(x))"]}
{"id": "prontoqa_train_943", "nl": "Everything that is a yumpus, a grimpus, and a brimpus is not a numpus.", "fol": "all x. ((yumpus(x) & grimpus(x) & brimpus(x)) -> -numpus(x))", "prediction": ["all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "(all x.((Yumpus(x) | Grimpus(x) | Brimpus(x))) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) & Grimpus(x) & Brimpus(x)) -> -Numpus(x))", "all x.(Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x y.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(y))", "(all x.((Yumpus(x) | Grimpus(x) | Brimpus(x))) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -numpus(x))", "all x.((Yumpus(x) & Grimpus(x) & Brimpus(x)) -> -Numpus(x))", "(all x.((Yumpus(x) | Grimpus(x) | Brimpus(x))) -> -Numpus(x))", "(all x.((Yumpus(x) | Grimpus(x) | Brimpus(x))) -> -numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -numpus(x))"]}
{"id": "prontoqa_train_944", "nl": "Max is a yumpus.", "fol": "yumpus(Max)", "prediction": ["all x.(Max(x) -> Yumpus(x))", "(Yumpus(Max) & HasYump(Max))", "Max is yumpus.", "Max isYumpus(x)", "all x.(Matthew(x) -> Yumpus(x))", "all x.(Max(x) -> Yumpus(x))", "(Yumpus(Max))", "-Yumpus(Max)", "Max is yumpus.", "Max is Yumpus.", "(Yumpus(Max) & HasYump(Max))", "all x.(Max(x) -> Yumpa(x))", "all x.(Yumpus(x) -> Max(x))", "All x.(Max(x) -> Yumpus(x))", "(Yumpus(Max)", "(Yumpus(Max)"]}
{"id": "prontoqa_train_945", "nl": "Max is a grimpus.", "fol": "grimpus(Max)", "prediction": ["all x.(Max(x) -> Grimpus(x))", "Max is a Grimpus.", "(Grimpus(Max) & -Grimpus(Max))", "all x.(Max(x) -> Grimpus(x))", "all x.(Matt(x) -> Grimpus(x))", "(Scrappus(Max) & Grimpus(Max))", "Max is a Grimpus.", "all x.(Matthew(x) -> Grimpus(x))", "(Grimpus(Max))", "Max is grimpus.", "all x.(Max(x) -> Grimpus(x))", "-Smoothpus(Max)", "(Gruppus(Max) & Gruppus(Max))", "Max is a Grimpus.", "(Grampus(Max))", "All x.(Max(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_946", "nl": "Max is a brimpus.", "fol": "brimpus(Max)", "prediction": ["all x.(Max(x) -> Brimpus(x))", "Max is a Brimpus.", "(Brimpus(Max) & Brimpus(Max))", "all x.(Max(x) -> Brimpus(x))", "Max is brimpus.", "Max is a Brimpus.", "all x.(Matt(x) -> Brimpus(x))", "Max is a brimpus.", "(Brimpus(Max))", "all x.(Max(x) -> Brimpus(x))", "(Brimpus(Max) & HasBrimpus(Max))", "all x.(M Max(x) -> Brimpus(x))", "All x.((Max(x) & Brimpus(x)) -> CanBe(x))", "all x.(Max(x) -> Brimpus(x))", "(Brimpus(Max))", "All x.(Max(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_947", "nl": "Max is not a lorpus.", "fol": "-lorpus(Max)", "prediction": ["(-Lorpus(Max))", "all x.(Max(x) -> -Lorpus(x))", "(Lorpus(Max) & -Lorpus(Max))", "Max is not a lorpus.", "-Lorpus(Max)", "all x.(Max(x) -> -Lorpus(x))", "Max is notLorpus(Max)", "(-Lorpus(Max))", "(Lorpus(Max) & -Lorpus(Max))", "all x.(Max(x) -> -Lorpus(x))", "-Lorpus(Max)", "Max is notLorpus(Max)", "all x.(Max(x) -> -Lorpus(x))", "(-Lorpus(Max))", "-Lorpus(Max)", "-Lorpus(Max)"]}
{"id": "prontoqa_train_948", "nl": "Everything that is a lorpus and a numpus and a brimpus is a vumpus.", "fol": "all x. ((lorpus(x) & numpus(x) & brimpus(x)) -> vumpus(x))", "prediction": ["all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x y.((Lorpus(x) & Numpus(y) & Brimpus(y)) -> Vumpus(x))", "(all x.((Lorpus(x) & -Lumpus(x) & -Numpus(x) & -Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x y z.((Lorpus(x) & Numpus(y) & Brimpus(z) & Is(x,y)) -> Vumpus(x))", "(all x.((Lorpus(x) & -Lumpus(x)) -> Vumpus(x)) & all y.((Numpus(y) & Brimpus(y)) -> Vumpus(y)))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Numpus(x) | Brimpus(x)) -> Vumpus(x))", "all x y.((Lorpus(x) & Numpus(y) & Brimpus(y)) -> Vumpus(x))", "all x.((Lorph(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.(((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Numpus(x) | Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vulpis(x))"]}
{"id": "prontoqa_train_949", "nl": "Shumpuses are gorpuses.", "fol": "all x. (shumpus(x) -> gorpus(x))", "prediction": ["all x.(Shupuse(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpuse(x))", "all x y.((Shupuse(x) & Gorpus(y)) -> Gorpus(x))", "(Gorpuse(shupuse,s) & -Gorpuse(shupuse))", "(Gorpuse(shm) & Gorpus(shm))", "all x.(Shampus(x) -> Gorpus(x))", "all x.(Shampoos(x) -> Gorpuse(x))", "all x y.((Shupuse(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Shupuse(x) -> Gorpuse(x))", "all x.(Shumpsue(x) -> Gorpuse(x))", "all x.(Shutus(x) -> Gorpuse(x))", "all x y.((Shampus(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpuse(x))", "All x.(Shumpuse(x) -> Gorpuse(x))", "all x.(Shupuse(x) -> Gorpuse(x))", "all x.(Shumpus(x) -> Gorpuse(x))"]}
{"id": "prontoqa_train_950", "nl": "Every gorpus is not a vumpus.", "fol": "all x. (gorpus(x) -> -vumpus(x))", "prediction": ["all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x y.((Gorpus(x) & Vumpus(y)) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "(-Vumpus(gorpus)", "-Vumpus(gorpus,y)", "(all x.(Gorpus(x) -> -Vumpus(x)))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vimpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "exists x.(Gorpus(x) & -Vumpus(x))", "exists x.(Gorpus(x) & -Umpus(x))"]}
{"id": "prontoqa_train_951", "nl": "Sam is a shumpus.", "fol": "shumpus(Sam)", "prediction": ["all x.(Sam(x) -> Humpus(x))", "all x.(Sam(x) -> Humptious(x))", "Sam is a shumpus.", "(Sam(sam) & Humpus(sam))", "(Sam,Shumpus)", "Sam is shumpus.", "(Shumpus(Sam) & HasShump(Sam))", "all x.(Sam(x) -> Humpus(x))", "all x.(Shumpus(x) -> Sam(x))", "Sam is a shumpus.", "all x.(Sam(x) -> Humptus(x))", "(Shumpus(sam) & HasShump(sam,sam))", "all x.(Sam(x) -> Shumpus(x))", "all x.(Shumpus(x) -> Sam(x))", "(Shumpus)", "all x.(Sam(x) -> Humpus(x))"]}
{"id": "prontoqa_train_952", "nl": "Sam is a lorpus.", "fol": "lorpus(Sam)", "prediction": ["all x.(Sam(x) -> Lorpus(x))", "Sam is a lorpus.", "(Lorpus(Sam) & LivesIn(Sam,Sam))", "all x.(Sam(x) -> Lorpus(x))", "all x.(Lorpus(x) -> Sam(x))", "Sam is a lorpus.", "(Lorpus(Sam) & LivesIn(Sam,Sam))", "all x.(Sam(x) -> Lorpus(x))", "Sam is a lorpus.", "all x.(Lorpus(x) -> Sam(x))", "(Lorpus(Sam) & HasLorph(Sam))", "all x.((Sam(x) & Lorpus(x)) -> CanBeLorpedo(x))", "all x.(Lorpus(x) -> Sam(x))", "(Lorpus(Sam) & LivesIn(Sam,Sam))", "all x.(Lorpus(x) -> Sam(x))", "exists x.(Lorpus(x) & Sam(x))"]}
{"id": "prontoqa_train_953", "nl": "Everything that is a rompus and a yumpus and a lempus is a gorpus, a sterpus, and a zumpus.", "fol": "all x. ((rompus(x) & yumpus(x) & lempus(x)) -> (gorpus(x) & sterpus(x) & zumpus(x)))", "prediction": ["all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x y.((Rompus(x) & Yumpus(y) & Lempus(y)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x y z.((Rompus(x) & Yumpus(y) & Lempus(z) & Gorpus(x) & Sterpus(x) & Zumpus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) | Yumpus(x) | Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x y z.((Rompus(x) & Yumpus(y) & Lempus(z)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "(all x.((Rompus(x) & Yumpus(x)) -> Gorpus(x)) & all y.((Sterepus(y) & Zumpus(y)) -> Zumpus(y)))", "all x y.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(y) | Sterpus(y) | Zumpus(y)))", "(all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.(Rompus(x) & Yampus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yampus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) | Yumpus(x) | Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Yuppus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "(all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Yampus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_954", "nl": "Max is a rompus.", "fol": "rompus(Max)", "prediction": ["all x.(Max(x) -> Rompus(x))", "(Rompus(Max) & -Rompus(Max))", "Max is a rompus.", "all x.(Max(x) -> Rompus(x))", "(Rompus(Max) & Has(Max))", "Max is rompus.", "all x.(Rompus(x) -> Max(x))", "Max is a rompus.", "-Rompus(Max)", "all x.(Max(x) -> Rompus(x))", "(Rompus(Max)", "all x.(Max(x) -> Rompus(x))", "Max is rompus.", "(Rompus(Max)", "All x.(Max(x) -> Rompus(x))", "(Rompus(Max)"]}
{"id": "prontoqa_train_955", "nl": "Max is a lempus.", "fol": "lempus(Max)", "prediction": ["all x.(Max(x) -> Lempus(x))", "Max is a lempus.", "all x.(Max(x) -> Lempus(x))", "(Lempus(Max))", "Max is a Lempus.", "Max ist ein Lempus.", "(Lempus(Max) & HasLempus(Max))", "All x.(Mat Max(x) -> Lempus(x))", "Max is Lempus.", "all x.(Max(x) -> Lempus(x))", "all x.(Matthew(x) -> Lempus(x))", "(Limpus(Max) -> Lempus(Max))", "Max is a lempus.", "all x.(Max(x) -> Lempus(x))", "(Lempus(Max))", "all x.(Max(x) -> Lempus(x))"]}
{"id": "prontoqa_train_956", "nl": "Everything that is a sterpus, an impus, or a vumpus is a lempus.", "fol": "all x. ((sterpus(x) | impus(x) | vumpus(x)) -> lempus(x))", "prediction": ["all x.((Sterpus(x) | Imperempt(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Imperative(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterepus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterepus(x) | IsImpossed(x) | IsVumpus(x)) -> Lempus(x))", "all x.(((Sterepus(x) | Imperempt(x) | Vumpus(x))) -> Lempus(x))", "all x.((Stereosis(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Imperator(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterepus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x y.((Sterpus(x) | Imperator(x) | Vumpus(x)) -> Lempus(y))", "all x.(((Sterpus(x) | Imperator(x) | Vumpus(x))) -> Lempus(x))", "all x.((Sterpus(x) | Impeccable(x) | Vumpus(x)) -> Lempus(x))", "(all x.((Sterpus(x) | Imperative(x) | Vumpus(x)) -> Lempus(x))", "all x y.((Sterpus(x) | Imperative(x) | Vumpus(x)) -> Lempus(y))", "all x.((Sterpus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))"]}
{"id": "prontoqa_train_957", "nl": "Rex is a brimpus and a tumpus and an impus.", "fol": "(brimpus(Rex) & tumpus(Rex) & impus(Rex))", "prediction": ["all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & Imperator(x)))", "(all x.(Rex(x) -> Brimpus(x)) & (Tumpus(x) & Impossible(x)))", "(all x.(Rex(x) -> Brimpus(x)) & all y.(Tumpus(y) & Imperator(y)))", "all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & Imperator(x)))", "all x y.((Rex(x) & Brimpus(y)) -> (Tumpus(x) & Imperator(x)))", "(Brimpus(rex) & Tumpus(rex) & Imperator(rex))", "(all x.(Rex(x) -> Brimpus(x)) & (Tumpus(x) & Issue(x)))", "all x y.(Rex(x) -> (Brimpus(x) & Tumpus(y) & Imperator(x)))", "all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & Imperator(x)))", "(all x.(Rex) -> Brimpus(x)) & all y.(Tumpus(y) & Imperator(y)))", "exists x.(Rex(x) & Brimpus(x) & Tumpus(x) & Imperator(x))", "(all x.(Rex(x) -> Brimpus)) & (Tumpus(x) -> Impossible(x)))", "(all x.(Rex(x) -> Brimpus(x)) & all y.(Tumpus(y) & -Impossible(y))))", "all x.(Rex(x) -> (Brumpus(x) & Tumpus(x) & Issue(x)))", "all x.(Rex(x) -> (Brimpus(x) | Tumpus(x) | Imperator(x)))", "all x.(Rex(x) -> (Brumpus(x) & Tumpus(x) & Imperator(x)))"]}
{"id": "prontoqa_train_958", "nl": "Rex is a lempus.", "fol": "lempus(Rex)", "prediction": ["all x.(Rex(x) -> Lempus(x))", "Rex is a lempus.", "Rex is Lempus.", "all x.(Rex(x) -> Lempus(x))", "(Lempus(Rex) & Lempus(Rex))", "Rex is a Lempus.", "Rex.(Lempus(Rex))", "Rex is Lempus(x)", "all x.(Rex(x) -> Lempus(x))", "(Lempus(rex) & Lempus(rex))", "Rex (Lempus)", "All x.(Rex(x) -> Lempus(x))", "all x.(Rex(x) -> Lempus(x))", "All x.(Rex(x) -> Lempus(x))", "all x.(Rex(x) -> Lempus(x))", "All x.(Rex(x) -> Lempus(x))"]}
{"id": "prontoqa_train_959", "nl": "Tumpuses are zumpuses and impuses and yumpuses.", "fol": "all x. (tumpus(x) -> (zumpus(x) & impus(x) & yumpus(x)))", "prediction": ["all x.(Tumpus(x) -> (Tompus(x) | Issue(x) | Yumpus(x)))", "(all x.(Tumpus(x) -> Zumpus(x)) & all y.(Issue(y) -> Yumpus(y)))", "all x.(Tumpus(x) -> (Tompus(x) & Issue(x) & Yumpus(x)))", "(all x.(Tumpus(x) -> Tossus(x)) & all y.(Issue(y) -> Issue(y))) & all z.(Yumpus(z) -> Issue(z)))", "(all x.(Tumpus(x) -> Zumpus(x)) & all y.(Issue(y) -> Issue(y))) & all z.(Yumpus(z) -> Issue(z)))", "all x y.((Tumpus(x) & Toumpus(y)) -> (Impose(x) | Yumpus(x)))", "all x y z.((Tumpus(x) & Impossible(y) & Yumpus(z)) -> (Tompus(x) | Issue(y) | Yumpus(z)))", "all x.(Tumpus(x) -> (Tompus(x) | Issue(x) | Yumpus(x)))", "all x.(Tumpus(x) -> (Zumpuse(x) | Issue(x) | Yumpuse(x)))", "all x y.((Tumpus(x) & Zumpus(y)) -> (Impose(x) | Yumpus(y)))", "all x.(Tumpus(x) -> (Tommus(x) & Issues(x) & Yumpus(x)))", "(All x.(Tumpus(x) -> Tossus(x)) & (Issue(x) | Yumpus(x)))", "(all x.(Tumpus(x) -> Zumpus(x)) & (Impose(x) | Yumpus(x)))", "all x.(Tumpus(x) -> (Zumpuse(x) | Impermisse(x) | Yumpuse(x)))", "all x.(Tumpus(x) -> (Tompuse(x) | Issue(x) | Yumpuse(x)))", "all x.(Tumpus(x) -> (Tompus(x) | Issues(x) | Yumpuses(x)))"]}
{"id": "prontoqa_train_960", "nl": "Alex is a tumpus.", "fol": "tumpus(Alex)", "prediction": ["all x.(Alex(x) -> Tumpus(x))", "Alex is a tumpus.", "all x.(Alex(x) -> Tumpus(x))", "Alex is tumpus.", "Alex is a tumpus.", "(Tumpus(Alex) & HasTump(Alex))", "all x.(Alex(x) -> Tumpus(x))", "Alex is tumpus.", "Alex is Tumpus.", "all x.(Alex(x) -> Tumpus(x))", "(Tumpus(Alex) & HasTumpus(Alex))", "all x.(Tumpus(x) -> Alex(x))", "all x.(Alex(x) -> Tumpus(x))", "All x.(Alex(x) -> Tumpus(x))", "all x.(Tumpus(x) -> Alex(x))", "All x.(Alex(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_961", "nl": "Alex is an impus or a wumpus or a gorpus.", "fol": "(impus(Alex) | wumpus(Alex) | gorpus(Alex))", "prediction": ["all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "(Is(Alex) | Is(Alex)) | Is(Alex) | Is(Alex)) | Is(Alex) | Is(Alex)) | Is(Alex) | Is(Alex))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "(Impossible(Alex) | Wumpus(Alex) | Gorpus(Alex))", "all x.(Alex(x) -> (Issue(x) | (Wumpus(x) | Gorpus(x))))", "(Is(Alex) | Is(Alex))) | (Is(Alex) | IsWumpus(Alex) | Is(Alex))))", "all x y.((Alex(x) & Is(x,y)) | (Is(x,y) | Is(x,y))))", "(Impossible(Alex) | Wumpus(Alex) | Gorpus(Alex))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Issue(x) | (Wumpus(x) | Gorpus(x))))", "all x y.((Alex(x) & Impossible(x)) | (Wumpus(x) | Gorpus(x))))", "all x.(Alex(x) -> (Issue(x) | IsWumpus(x) | IsGorpus(x)))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "exists x.(Alex(x) & IsImpossible(x) & (Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_962", "nl": "Jompuses are sterpuses, dumpuses, and lempuses.", "fol": "all x. (jompus(x) -> (sterpus(x) & dumpus(x) & lempus(x)))", "prediction": ["all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x y z.((Jompuse(x) & Sterpuse(y) & Dumpuse(z)) -> (Sterpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "(all x.(Jompuse(x) -> Sterpuse(x)) & all y.(Dumpuse(y) -> Lempuse(y)))", "all x y.((Jompuse(x) & Sterpuse(y)) -> (Dumpsus(x) | Lempuse(x)))", "(all x.(Jompuse(x) -> Sterus(x)) & all y.(Dumpuse(y) -> Lempuse(y)))", "(exists x.(Jompuse(x) & Sterpuse(x)) & exists y.(Dumpuse(y) & Lempuse(y)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Steruse(x) | Dumpuse(x) | Lempuse(x)))", "(all x.(Jompuse(x) -> Sterpuse(x)) & all y.(Dumpsuse(y) & Lempuse(y)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jimpus(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "(all x.(Jompuse(x) -> Sterpuse(x)) & all y.(Dumpuse(y) -> Lempuse(y)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))"]}
{"id": "prontoqa_train_963", "nl": "Alex is not a lempus and Alex is a numpus and Alex is a gorpus.", "fol": "(-lempus(Alex) & numpus(Alex) & gorpus(Alex))", "prediction": ["all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (-Lempus(x) & Numpus(x) & Gorpus(x)))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Numpus(y)) & all z.(Alex(z) -> Gorpus(z))))", "all x.(Alex(x) -> (-Lempus(x) & Numpus(x) & Gorpus(x)))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Numpus(y))) & all z.(Alex(z) -> Gorpus(z)))", "(all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> -Lempus(x)) & ((Alex(x) & Numpus(x)) -> Gorpus(x)))", "(all x.(Alex(x) -> -Lempus(x)) & (Alex(x) -> Numpus(x)) & (Alex(x) -> Gorpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (-Lempus(x) & Numpus(x) & Gorpus(x)))", "all x y.((Alex(x) & Lempus(y) & Numpus(y)) -> (-Lempus(x) & Numpus(y) & Gorpus(y)))", "(-Lempus(Alex) & Numpus(Alex) & Gorpus(Alex))", "all x.(Alex(x) -> (-Lempus(x) & Numpus(x) & Gorpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (-Lempus(x) & -Numpus(x) & -Gorpus(x)))", "(all x y.(Lempus(x) -> -Lempus(x)) & (Numpus(y) -> Gorpus(y)))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Numpus(y))) & all z.(Alex(z) -> Gorpus(z)))", "(all x.(Alex(x) -> -Lempus(x)) & (Alex(x) -> Numpus(x)) & (Alex(x) -> Gorpus(x)))", "all x.(Alex(x) -> (-Lempus(x) & Numpus(x) & Gorpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (-Lempus(x) & Numpus(y) & Gorpus(z)))"]}
{"id": "prontoqa_train_964", "nl": "Each tumpus is not a jompus.", "fol": "all x. (tumpus(x) -> -jompus(x))", "prediction": ["all x.(Tumpus(x) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jompus(x))", "(-jompus(tumpus) & -Tumpus(tumpus,tumpus))", "(-Jompus(tumpus,tumpus))", "(all x.(Tumpus(x) -> -Jompus(x)))", "all x.(Tumpus(x) -> -Jimpus(x))", "all x y.((Tumpus(x) & Jompus(y)) -> -Jumpus(x))", "all x.(Tumpus(x) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jumpus(x))", "all x.(Tumpus(x) -> -Jimpus(x))", "all x.(Tumpus(x) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jumpus(x))", "all x.(Tumpus(x) -> -Jimpus(x))", "exists x.(Tumpus(x) & -Jumpus(x))", "exists x.(Tumpus(x) & -jompus(x))"]}
{"id": "prontoqa_train_965", "nl": "Numpuses are jompuses.", "fol": "all x. (numpus(x) -> jompus(x))", "prediction": ["all x.(Numpus(x) -> Jompuse(x))", "all x.(Numpuse(x) -> Jompuse(x))", "(Jompuse(n) & Numpus(n))", "all x y.((Numpus(x) & Jombus(y)) -> Has(x,y))", "(Jompuse(Numpus) & -Jockuse(Numpus))", "all x.(Numpus(x) -> Jompuse(x))", "(Jumpuse(n) & Numpuse(n))", "all x.(Numptus(x) -> Jompuse(x))", "all x y.((Numpuse(x) & Jompuse(y)) -> -Jompuse(x))", "all x.(Numpuse(x) -> Jompuse(x))", "all x.(Numptus(x) -> Jompuse(x))", "all x.(Numpus(x) -> Jombus(x))", "all x.(Numpuse(x) -> Jompuse(x))", "all x.(Numpus(x) -> Jompus(x))", "all x.(Numpuse(x) -> Jompuse(x))", "all x.(Numpus(x) -> Jombus(x))"]}
{"id": "prontoqa_train_966", "nl": "Fae is a tumpus.", "fol": "tumpus(Fae)", "prediction": ["all x.(Fae(x) -> Tumpus(x))", "-Tumpus(Fae)", "Fae is a tumpus.", "(Tumpus(Fae) & HasTumpus(Fae))", "all x.(Fae(x) -> Tumpus(x))", "Fae is a tumpus.", "(Tumpus(Fae) & Tumpus(Fae))", "all x.(Fae(x) -> Tumpus(x))", "(Tumpus(fae) & HasTump(fae,fae))", "(Tumpus(fe) & Tumpus(fe))", "all x.(Fae(x) -> Tumpus(x))", "(Tumpus(fee) & Tumpus(fee))", "exists x.(Tumpus(x) & Fae(x))", "all x.(Fae(x) -> Tumpus(x))", "all x.(Fae(x) -> Tumpus(x))", "all x.(Fae(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_967", "nl": "Fae is a lorpus, Fae is an impus, or Fae is not a numpus.", "fol": "(lorpus(Fae) | impus(Fae) | -numpus(Fae))", "prediction": ["(all x.(Fae(x) -> Lorpus(x)) | (Fae(x) -> Issue(x)) | (Fae(x) -> -Numpus(x))))", "all x.(Fae(x) -> (Lorpus(x) | Impossible(x) | -Numpus(x)))", "all x y z.((Fae(x) & Lorpus(y) & Is(x,y)) | (Is(x,z) | -Numpus(z))))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> Issue(x)) | (Fae(x) -> -Numpus(x))))", "all x y.((Fae(x) & Lorpus(x)) | (Fae(y) & Impossible(y)) | (Fae(y) & -Numpus(y))))", "(all x y.(Fae(x) -> Lorpus(x)) & (Fae(y) -> Issue(y)) | (Fae(y) -> -Numpus(y))))", "(exists x.(Fae(x) & Lorpus(x)) | exists y.(Fae(y) & IsImpossible(y))) | exists z.(Fae(z) & -Numpus(z))))", "(all x.(Fae(x) -> Lorpus(x)) | (Fae(x) -> Imperator(x)) | (Fae(x) -> -Numpus(x))))", "all x.(Fae(x) -> (Lorpus(x) | Imperator(x) | -Numpus(x)))", "(all x.(Fae(x) -> Loomis(x)) | (Fae(x) -> Issuel(x)) | (Fae(x) -> -Numpus(x))))", "exists x.(Fae(x) & ((Lorpus(x) & Fae(x)) | (Impossible(x) | -Numpus(x)))))", "all x.(Fae(x) -> (Lorpus(x) | IsImpossible(x) | -Numpus(x)))", "all x y z.((Fae(x) & Lorpus(y) & Impossible(z)) -> (Lorpus(x) | Imperator(x) | -Numpus(x)))", "all x y.((Fae(x) & Lops(x)) | (Fae(y) & Is(y)) | (-Numpus(y))))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> Imperator(x)) | (Fae(x) -> -Numpus(x))))", "exists x.(Fae(x) & ((Lorpus(x) & Fae(x)) | Is(x)) | -Numpus(x)))"]}
{"id": "prontoqa_train_968", "nl": "Sterpuses are not dumpuses.", "fol": "all x. (sterpus(x) -> -dumpus(x))", "prediction": ["all x.(Sterpus(x) -> -Dumpuse(x))", "(all x.(Sterpuse(x) -> -Dumpuse(x)))", "-Dumpuse(sterpuses)", "all x.(Sterpus(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dumpuse(x))", "all x.(Stupid(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dumpsus(x))", "-Dumpsus(sterpuses)", "(all x.(Sterpus(x) -> -Dumpsus(x)))", "(all x.(Sterpuse(x) -> -Dumpuse(x)))", "all x.(Sterpus(x) -> -Dumpuse(x))", "-Dumpuse(sterpuses)", "all x.(Stupid(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dumpuse(x))", "all x.(Stupid(x) -> -Dumpsus(x))", "all x.(Sterpus(x) -> -Dumuse(x))"]}
{"id": "prontoqa_train_969", "nl": "Everything that is a vumpus or a grimpus or a yumpus is a dumpus.", "fol": "all x. ((vumpus(x) | grimpus(x) | yumpus(x)) -> dumpus(x))", "prediction": ["all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.(((Vumpus(x) | Grimpus(x) | Yumpus(x))) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x y.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(y))", "all x.(((Vumpus(x) | Grimpus(x) | Yumpus(x))) -> Dumpus(x))", "all x.(((Vumpus(x) | Grimpus(x) | Yumpus(x))) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "(all x.((Vumpus(x) | Grimpus(x) | Yumpus(x))) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x y.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(y))", "all x.((Vimpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.(((Vumpus(x) | Grimpus(x) | Yumpus(x))) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))"]}
{"id": "prontoqa_train_970", "nl": "Stella is a tumpus and a gorpus and a sterpus.", "fol": "(tumpus(Stella) & gorpus(Stella) & sterpus(Stella))", "prediction": ["all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> Tumpus(x)) & (Gorpus(x) | Sterpus(x))))", "(Tumpus(Stella) & Gorpus(Stella) & Sterpus(Stella))", "all x y.((Stella(x) & Tumpus(y)) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> Tumpus(x)) & all y.(Gorpus(y) & All z.(Sterpus(z))) -> Sterpus(z)))", "all x y z.((Stella(x) & Tumpus(y) & Gorpus(z)) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "all x y.((Stella(x) & Tumpus(y)) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "(Tumpus(Stella) & Gorpus(Stella) & Sterpus(Stella))", "(Tumpus(Stella) | Gorpus(Stella) | Sterpus(Stella))", "exists x.(Tumpus(x) & Gorpus(x) & Sterpus(x))", "all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> Tumpus(x)) & (Gorpus(x) | Sterpus(x))))", "all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> Tumpus(x)) & all y.(Gorpus(y) & -Sterpus(y))))", "exists x.(Tumpus(x) & Gorpus(x) & Sterpus(x))"]}
{"id": "prontoqa_train_971", "nl": "Every brimpus is a tumpus, a zumpus, and a lorpus.", "fol": "all x. (brimpus(x) -> (tumpus(x) & zumpus(x) & lorpus(x)))", "prediction": ["all x.(Brimpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "(all x.(Brimpus(x) -> Tumpus(x)) & all y.(Tompus(y) -> Zumpus(y)) & all z.(Lorpus(z) -> Lorpus(z))))", "all x.(Brumpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "(all x.(Brimpus(x) -> Tumpus(x)) & all y.(Tompus(y) -> Zumpus(y)) & all z.(Lorpus(z) -> Lorpus(z))))", "all x y z.(Brimpus(x) -> (Tumpus(y) | Zumpus(y) | Lorpus(z)))", "all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "(all x.(Brumpus(x) -> Tumpus(x)) & (Tompus(x) | Zumpus(x) | Lorpus(x)))", "(all x.(Brimpus(x) -> Tumpus(x)) & all y.(Tompus(y) -> Zumpus(y)) & all z.(Lorpus(z) -> Lorpus(z))))", "all x.(Brumpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "exists x.(Brimpus(x) & Tumpus(x) & Zumpus(x) & Lorpus(x))", "exists x.(Brimpus(x) & (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))"]}
{"id": "prontoqa_train_972", "nl": "Stella is a lempus, Stella is a dumpus, and Stella is not a lorpus.", "fol": "(lempus(Stella) & dumpus(Stella) & -lorpus(Stella))", "prediction": ["(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> Dumpus(x)) & (Stella(x) -> -Lorpus(x)))", "all x y z.((Stella(x) & Lempus(x) & Dumpus(y) & -Lorpus(z)) -> (Lempus(x) & Dumpus(y) & -Lorpus(z)))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> Dumpus(y)) & all z.(Stella(z) -> -Lorpus(z))))", "(all x y z.((Stella(x) & Lempus(x)) -> (Lempus(x) & Dumpus(y))) & ((Stella(z) & -Lorpus(z))) -> (Dumpus(z) & -Lempus(z))))", "(all x.(Lempus(x) -> Stella(x)) & (Dumpus(x) -> Stella(x)) & -Lorpus(x)))", "(all x y z.((Stella(x) & Lempus(x)) -> (Lempus(x) & Dumpus(y)) & ((Stella(z) & -Lorpus(z))) -> (Dumpus(z) & -Lempus(z))))", "exists x.(Stella(x) & Lempus(x) & Dumpus(x) & -Lorpus(x))", "all x y z.((Stella(x) & Lempus(x) & Dumpus(y) & -Lorpus(z)) -> (Lempus(x) & Dumpus(y) & -Lorpus(z)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> Dumpus(x)) & -Lorpus(x)))", "all x.(Stella(x) -> (Lempus(x) & Dumpus(x) & -Lorpus(x)))", "(all x y z.(Lempus(x) -> Stella(x)) & (Dumpus(y) -> Stella(z)) & (Lorpus(z) -> Stella(z)))", "all x y z.((Stella(x) & Lempus(x) & Dumpus(y) & -Lorpus(z)) -> (Lempus(x) & Dumpus(y) & -Lorpus(z)))", "all x y z.(Lorpus(x) -> (Lempus(x) | Dumpus(y) | -Lorpus(z)))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> Dumpus(y)) & all z.(Stella(z) -> -Lorpus(z))))", "all x y z.((Stella(x) & Lempus(x) & Dumpus(y) & -Lorpus(z)) -> (Lempus(x) | Dumpus(y) & -Lorpus(z)))", "(all x.(Lempus(x) & Dumpus(x)) -> -Lorpus(x))"]}
{"id": "prontoqa_train_973", "nl": "Everything that is a tumpus or an impus or a lempus is a brimpus and a rompus and a sterpus.", "fol": "all x. ((tumpus(x) | impus(x) | lempus(x)) -> (brimpus(x) & rompus(x) & sterpus(x)))", "prediction": ["all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Imperator(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | IsImpos(x) | IsLempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.(((Tumpus(x) | Impossible(x) | Lempus(x))) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x y.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(y) & Rompus(y) & Sterpus(y)))", "(all x.((Tumpus(x) | IsImpos(x) | IsLempus(x))) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "(all x.((Tumpus(x) | Impossible(x) | Lempus(x))) -> Brimpus(x)) & all y.((Rompus(y) & Sterpus(y)) -> Brimpus(y)))", "all x.((Tumpus(x) | IsIsIsIs(x) | IsLempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x y.((Tumpus(x) | Imperator(x) | Lempus(x)) -> (Brimpus(y) & Rompus(y) & Sterpus(y)))", "all x.(Tumpus(x) | Imperator(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Imperator(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x y.((Tumpus(x) | IsImpos(x) | Lempus(x)) -> (Brimpus(y) & Rompus(y) & Sterpus(y)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | IsImpos(x) | IsLempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Imperator(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))"]}
{"id": "prontoqa_train_974", "nl": "Stella is a lempus.", "fol": "lempus(Stella)", "prediction": ["Stella is a lempus.", "all x.(Stella(x) -> Lempus(x))", "Stella is Lempus(Stella)", "all x.((Stella(x) & Lempus(x)) -> Lempus(x))", "Stella is a lempus.", "all x.(Stella(x) -> Lempus(x))", "(Lempus(Stella))", "(Lempus(Stella) & Lempus(Stella))", "Stella is a Lempus.", "all x.(Stella(x) -> Lempus(x))", "Stella is Lempus.", "Stella ist ein Lempus.", "all x.(Lempus(x) -> Stella(x))", "Stella (Lempus)", "Stella is a lempus.", "(Lempus(Stella))"]}
{"id": "prontoqa_train_975", "nl": "Stella is a rompus.", "fol": "rompus(Stella)", "prediction": ["Stella is a rompus.", "all x.(Stella(x) -> Rompus(x))", "(Rompus(Stella) & -Rompus(Stella))", "Stella is a Rompus.", "all x.(Stella(x) -> Rompus(x))", "(Rompus(Stella) & -Rompus(Stella))", "Stella is a rompus.", "(Rompus(Stella) & HasRompus(Stella))", "all x.(Stella(x) -> Rompus(x))", "Stella is a Rompus.", "Stella (Rompus)", "(Rompus(Stella) & Rompus(Stella))", "Stella is rompus.", "all x.(Stella(x) -> Rompus(x))", "Stella ist ein Rompus.", "Stella is a rompus."]}
{"id": "prontoqa_train_976", "nl": "Tumpuses are lempuses, dumpuses, and numpuses.", "fol": "all x. (tumpus(x) -> (lempus(x) & dumpus(x) & numpus(x)))", "prediction": ["all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x y z.((Tumpuse(x) & Lempuse(y) & Dumpuse(z)) -> (Lempuse(x) | Dumpuse(z) | Numpuse(z)))", "(all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x))))", "(all x.(Tumpuse(x) -> Lempuse(x)) & all y.(Dumpuse(y) -> Numpuse(y)))", "all x y.((Tumpuse(x) & Lempuse(y)) -> (Dumpuse(x) | Numpuse(x)))", "all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "(all x.(Tumpus(x) -> Lempuse(x)) & all y.(Dumpuse(y) -> Numpuse(y)))", "all x.(Tumulus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "(all x.(Tumpuse(x) -> Lempuse(x)) & all y.(Dumpuse(y) -> Numpuse(y)))", "all x.(Tumpus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "(all x.(Tumpus(x) -> Lempuse(x)) & all y.(Dumpuse(y) -> Numpuse(y)))", "all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumulus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))"]}
{"id": "prontoqa_train_977", "nl": "Wren is a tumpus.", "fol": "tumpus(Wren)", "prediction": ["all x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))", "(Tumpus(Wren) & HasTump(Wren,Tumpus))", "all x.(Wren(x) -> Tumpus(x))", "(Tumpus(wren) & Tumpus(wren))", "(Tumpus(wren) & HasTumpus(wren,x))", "(Tumpus(wren) & Tumpus(wren) & HasTumpus(wren,w))", "all x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))", "(Tumpus(wren) -> Tumpus(wren))", "all x.(Wren(x) -> Tumpus(x))", "All x.(Wren(x) -> Tumpus(x))", "exists x.(Tumpus(x) & Wren(x))", "all x.(Wren(x) -> Tumpus(x))", "All x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_978", "nl": "Wren is a yumpus, a lorpus, or a dumpus.", "fol": "(yumpus(Wren) | lorpus(Wren) | dumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "(Yumpus,Lorpus,Dumpus)", "all x y.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "(yumpus) | lorpus(y) | dumpus(y))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "(Yumpus,Lorpus,Dumpus)", "all x y.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lops(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "exists x.(Wren(x) & (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "exists x.(Wren(x) & (yumpus(y) | lorpus(y) | dumpus(y)))", "exists x.(Wren(x) & (Yumpus(x) | Lordpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_979", "nl": "Everything that is a wumpus, a lorpus, or an impus is a rompus.", "fol": "all x. ((wumpus(x) | lorpus(x) | impus(x)) -> rompus(x))", "prediction": ["all x.((Wumpus(x) | Lorpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsII(x)))", "(all x.((Wumpus(x) | Lorpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsI(x)))", "all x.((Wumpus(x) | Lorpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Impossible(x)) -> Rompus(x))", "all x.(((Wumpus(x) | Lorpus(x) | Imperator(x))) -> Rompus(x))", "all x.((Wumpus(x) | Lordpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsII(x)))", "all x y.((Wumpus(x) | Lorpus(x) | Imperator(x)) -> Rompus(y))", "all x.(((Wumpus(x) | Lorpus(x) | Imperator(x))) -> Rompus(x))", "all x.(((Wumpus(x) | Lorpus(x) | Impossible(x))) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Impossible(x)) -> Rompus(x))", "all x y.((Wumpus(x) | Lorpus(x) | Imperator(x)) -> Rompus(y))", "all x.((Wumpus(x) | Lorpus(x) | IsImpossible(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Imperative(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lordpus(x) | Impossible(x)) -> Rompus(x))"]}
{"id": "prontoqa_train_980", "nl": "Wren is a lorpus and a vumpus and a jompus.", "fol": "(lorpus(Wren) & vumpus(Wren) & jompus(Wren))", "prediction": ["all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "(Lorpus(w) & Vumpus(w) & Jompus(w))", "all x y z.((Wren(x) & Lorpus(y) & Vumpus(z)) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "all x y.((Wren(x) & Lorpus(y)) -> (Vumpus(x) & Jompus(x)))", "(all x.(Wren(x) -> Lorpus(x)) & all y.(Vumpus(y) & -Vumpus(y))) & all z.(Wren(z) -> Jompus(z)))", "all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "(all x.(Wren(x) -> Lorpus(x)) & (Vumpus(x) | Jompus(x)))", "(Lorpus(w) & Vumpus(w) & Jompus(w))", "(Lorpus(w) | Vumpus(w) | Jompus(w)))", "all x y.(Wren(x) -> (Lorpus(x) & Vumpus(y) & Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "exists x.(Wren(x) & Lorpus(x) & Vumpus(x) & Jompus(x))", "all x.(Wren(x) -> (Lorpus(x) | Vumpus(x) | Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "(all x.(Wren(x) -> Lorpus(x)) & (Vumpus(x) | Jompus(x)))", "exists x.(Wren(x) & Lorpus(x) & Vumpus(x) & Jompus(x))"]}
{"id": "prontoqa_train_981", "nl": "Everything that is a zumpus or a shumpus or a vumpus is a sterpus.", "fol": "all x. ((zumpus(x) | shumpus(x) | vumpus(x)) -> sterpus(x))", "prediction": ["all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterpus(x))", "all x y.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterpus(y))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterpus(x))", "all x y.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(y))", "all x.((Zumpus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Zumpus(x) | Humpus(x) | Vampus(x)) -> Sterpus(x))", "all x.((Zumpus(x) | Humpus(x) | Vumpus(x)) -> Sterepus(x))", "all x.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterpus(x))", "(all x.((Tompus(x) | Humpus(x) | Vampus(x))) -> Stereoscopic(x))", "all x.(((Tompus(x) | Humpus(x) | Vampire(x))) -> Sterpus(x))", "all x.((Zumpus(x) | Humpus(x) | Voompus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterepus(x))", "all x.((Tommus(x) | Shumpus(x) | Voompus(x)) -> Sterpus(x))"]}
{"id": "prontoqa_train_982", "nl": "Max is a sterpus, a vumpus, and a jompus.", "fol": "(sterpus(Max) & vumpus(Max) & jompus(Max))", "prediction": ["all x.(Max(x) -> (Sterpus(x) | Vumpus(x) | Jompus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Vumpus(y) & -Jompus(y)))", "(Sterpus(Max) | Vumpus(Max) | Jompus(Max))", "(exists x.(Max(x) & Sterpus(x)) & exists y.(Vumpus(y) & Voompus(y)) & exists z.(Jompus(z) & -Sterpus(z))))", "all x y z.((Max(x) & Sterpus(y) & Vumpus(z)) -> (Sterpus(x) | Jompus(x)))", "(All x.(Max(x) -> Sterpus(x)) & (Vumpus(x) & Jompus(x)))", "(Sterpus(Max) & Vumpus(Max) & Jompus(Max))", "all x.(Max(x) -> (Sterpus(x) | Vumpus(x) | Jompus(x)))", "all x.(Max(x) -> (Sterepus(x) & Vumpus(x) & Jompus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Vumpus(y) & -Jimpus(y)))", "(All x.(Max(x) -> Sterpus(x)) & (Vumpus(x) & Jompus(x)))", "all x.(Max(x) -> (Sterpus(x) | Vumpus(x) | Jompus(x)))", "all x.(M Max(x) -> (Sterpus(x) | Vumpus(x) | Jompus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Vimpus(y) -> Jompus(y)))", "all x.(Max(x) -> (Sterepus(x) & Vumpus(x) & Jompus(x)))", "all x.(Max(x) -> (Sterpus(x) | Vumpus(x) | Jompus(x)))"]}
{"id": "prontoqa_train_983", "nl": "Max is a sterpus.", "fol": "sterpus(Max)", "prediction": ["all x.(Max(x) -> Sterpus(x))", "(Sterpus(Max) & Sterpus(Max))", "Max is sterpus.", "all x.(Max(x) -> Sterpus(x))", "Max is a sterpus.", "all x.((Max(x) & Sterpus(x)) -> Sterpus(x))", "Max is sterpus.", "(Sterpus(Max) & Sterpus(Max))", "All x.(Matt(x) -> Sterpus(x))", "-Sterpus(Max)", "all x.(Max(x) -> Sterpus(x))", "Max is Sterpus.", "(Sterepus(Max) -> Sterpus(Max))", "(Sterpus(Max) & Sterpis(Max))", "all x.(Max(x) -> Sterpus(x))", "(Sterepus(Max))"]}
{"id": "prontoqa_train_984", "nl": "Everything that is a lorpus or a brimpus or a grimpus is not a lempus.", "fol": "all x. ((lorpus(x) | brimpus(x) | grimpus(x)) -> -lempus(x))", "prediction": ["all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.(((Lorpus(x) | Brimpus(x) | Grimpus(x))) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x y.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(y))", "all x.(Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "(all x.((Lorpus(x) | Brimpus(x) | Grimpus(x))) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.(((Lorpus(x) | Brimpus(x) | Grimpus(x))) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "(all x.((Lorpus(x) | Brimpus(x) | Grimpus(x))) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Limpus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Limpus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Limpus(x))"]}
{"id": "prontoqa_train_985", "nl": "Every rompus is a shumpus and a lempus and a dumpus.", "fol": "all x. (rompus(x) -> (shumpus(x) & lempus(x) & dumpus(x)))", "prediction": ["all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "(all x.(Rompus(x) -> Humpus(x)) & all y.(Lempus(y) -> Dumpus(y)))", "all x y.((Rompus(x) & Shumpus(y)) -> (Lempus(x) & Dumpus(x)))", "(all x.(rompus(x) -> Humpus(x)) & all y.(rompus(y) -> Lempus(y) & all z.(rompus(z) -> Dumpus(z))))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "all x y.((Rompus(x) & Humpus(y)) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "exists x.(rompus(x) & Humpus(x) & Lempus(x) & Dumpus(x))", "(all x.(Rompus(x) -> Humpus(x)) & all y.(Lempus(y) -> Dumpus(y)))", "all x.(Rompus(x) -> (Shumpus(x) | Lempus(x) | Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "(all x.(Rompus(x) -> Humpus(x)) & (Lempus(x) -> Dumpus(x)))", "(all x.(Rompus(x) -> Shumpus(x)) & all y.(Lempus(y) -> Dumpus(y)))", "exists x.(rompus(x) & Humpus(x) & Lempus(x) & Dumpus(x))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) | Lempus(x) | Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_986", "nl": "Fae is a brimpus.", "fol": "brimpus(Fae)", "prediction": ["all x.(Fae(x) -> Brimpus(x))", "all x.(Fae(x) -> Brimpus(x))", "Fae is a Brimpus.", "(Brimpus(Fae) & Brimpus(Fae))", "Fae is a Brimpus.", "all x.(Fae(x) -> Brimpus(x))", "(Brimpus(fae) & Brimpus(fae))", "(Brumpus(fee) & HasBrimpus(fee,fee))", "all x.(Fae(x) -> Brimpus(x))", "(Brimpus(fee) & Brimpus(fee))", "all x.(Fae(x) -> Brimpus(x))", "all x.(Fae(x) -> Brimpus(x))", "(Brimpus)", "All x.(Famous(x) -> Brimpus(x))", "all x.(Fampus(x) -> Brimpus(x))", "all x.(Fae(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_987", "nl": "Everything that is a lorpus, a shumpus, and a vumpus is a grimpus and a lempus and a wumpus.", "fol": "all x. ((lorpus(x) & shumpus(x) & vumpus(x)) -> (grimpus(x) & lempus(x) & wumpus(x)))", "prediction": ["all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x y.((Lorpus(x) & Humpus(y) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x y z.((Lorpus(x) & Humpus(y) & Vumpus(z) & Lorpus(x) & Shumpus(y) & Vumpus(z)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Shumpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) & Humpus(x) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "(all x.((Lorpus(x) | Humpus(x)) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x y.((Lorpus(x) & Shumpus(y) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x y.((Lorpus(x) & Humpus(y) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "(all x.((Lorpus(x) | Shumpus(x) | Vumpus(x))) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) & Humpus(x) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Smoochus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Shumpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "(all x.((Lorpus(x) | Humpus(x)) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) & Humpus(x) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))"]}
{"id": "prontoqa_train_988", "nl": "Fae is a shumpus.", "fol": "shumpus(Fae)", "prediction": ["all x.(Fae(x) -> Humpus(x))", "Fae is a shumpus.", "(Shumpus(Fae) & HasShump(Fae))", "all x.(Fae(x) -> Humpus(x))", "(Shumpus(Fae) & Shumpus(Fae))", "all x.(Fae(x) -> Humpus(x))", "all x.(Fae(x) -> Shumpus(x))", "(Shumpus(fee) & Shumpus(fee))", "(Shumpus(fee) & HasShump(fee,fee))", "all x.(Fae(x) -> Humptus(x))", "(Shumpus(fe) & HasShump(fe))", "all x.(Fae(x) -> Humptus(x))", "all x.(Fae(x) -> Shumpus(x))", "exists x.(Shumpus(x) & Fae(x))", "(Shumpus)", "All x.(Fae(x) -> Humpus(x))"]}
{"id": "prontoqa_train_989", "nl": "Fae is a vumpus.", "fol": "vumpus(Fae)", "prediction": ["all x.(Fae(x) -> Vumpus(x))", "(Vumpus(Fae) & -Vumpus(Fae))", "Fae is a Vumpus.", "(Vumpus(Fae) & -Vumpus(Fae))", "all x.(Fae(x) -> Vumpus(x))", "-Vumpus(Fae)", "(Vumpus(fee) & Vumpus(fee))", "all x.(Fae(x) -> Vumpus(x))", "(Vumpus(fe) & -Vumpus(fe) & -Vumpus(fe))", "(Vimpus(fae) -> Vumpus(fae))", "all x.(Fae(x) -> Vampus(x))", "all x.(Fae(x) -> Vumpus(x))", "all x.(Fae(x) -> Vampus(x))", "all x.(Fae(x) -> Vumpus(x))", "exists x.(Fae(x) & Vulmpus(x))", "exists x.(Fae(x) & Vampire(x))"]}
{"id": "prontoqa_train_990", "nl": "Fae is a grimpus.", "fol": "grimpus(Fae)", "prediction": ["all x.(Fae(x) -> Grimpus(x))", "(Grimpus(Fae) & Grimpus(Fae))", "Fae is a Grimpus.", "-Fae(f) & Grimpus(f))", "(Gruppus(Fae) & Grimpus(Fae))", "all x.(Fae(x) -> Grimpus(x))", "(Fae isGrimpus(Fae))", "Fae is a Grimpus.", "(Grimpus(Fae))", "all x.(Fae(x) -> Grimpus(x))", "Fae is a Grimpus.", "(Grimpus(fae) & Grimpus(fae))", "all x.(Fae(x) -> Grimpus(x))", "all x.(Fae(x) -> Gruppus(x))", "(Grampus(fee) & Grimpus(fee))", "all x.(Fae(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_991", "nl": "Each zumpus is a lempus, a tumpus, and a numpus.", "fol": "all x. (zumpus(x) -> (lempus(x) & tumpus(x) & numpus(x)))", "prediction": ["all x.(Zumpus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "(all x.(Zumpus(x) -> Lempus(x)) & all y.(Tumpus(y) & all z.(Numpus(z)) -> Numpus(z))))", "all x.(Tompus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x y z.((Zumpus(x) & Lempus(y) & Tumpus(z)) -> (Tumpus(x) & Numpus(x)))", "all x.(Zumpus(x) -> (Lempus(x) & Tumpus(x) & Numpus(x)))", "all x y.((Zumpus(x) & Lempus(y)) -> (Tumpus(x) & Numpus(x)))", "(all x.(Zumpus(x) -> Lempus(x)) & all y.(Tumpus(y) & all z.(Numpus(z) & -Lempus(y)) & all z.(Tumpus(z) & -Tumpus(z))))", "(all x.(Tompus(x) -> Lempus(x)) & all y.(Tompus(y) -> Tumpus(y)) & all z.(Tompus(z) -> Numpus(z))))", "all x.(Tompus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x.(Zumpus(x) -> (Lempus(x) & Tumpus(x) & Numpus(x)))", "all x.(Zumpus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "(all x.(Zumpus(x) -> Lempus(x)) & (Tumpus(x) | Numpus(x))))", "exists x.(Zumpus(x) & Lempus(x) & Tumpus(x) & Numpus(x))", "all x.(Tompus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "exists x.(Zumpus(x) & Lempus(x) & Tumpus(x) & Numpus(x))", "all x.(Tompus(x) -> (Lempus(x) & Tumpus(x) & Numpus(x)))"]}
{"id": "prontoqa_train_992", "nl": "Stella is a zumpus.", "fol": "zumpus(Stella)", "prediction": ["Stella is a zumpus.", "all x.(Stella(x) -> Zumpus(x))", "Stella is zumpus.", "(Zumpus(Stella) & Has(Stella))", "Stella is a zumpus.", "(Zumpus(Stella) & HasStella(Stella))", "all x.(Stella(x) -> Zumpus(x))", "(Zombie(Stella) & Tosso(Stella))", "Stella is zumpus.", "Stella is zumpus(Stella)", "Stella is a zumpus.", "Stella ist ein Zumpus.", "all x.(Stella(x) -> Zumpus(x))", "(Tompus(Stella))", "all x.(Zumpus(x) -> Stella(x))", "Stella (zumpus)"]}
{"id": "prontoqa_train_993", "nl": "Stella is a wumpus, a numpus, or a lempus.", "fol": "(wumpus(Stella) | numpus(Stella) | lempus(Stella))", "prediction": ["all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x y.((Stella(x) & (Wumpus(y) | Numpus(y) | Lempus(y))) -> (Wumpus(x) | Numpus(y) | Lempus(y)))", "(Wumpus(Stella) | Numpus(Stella) | Lempus(Stella))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "(Wumpus,numpus,lempus) | Nompus(Stella))", "all x.((Stella(x) & (Wumpus(x) | Numpus(x) | Lempus(x))) -> Stella(x))", "(all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x))))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "(Wumpus(Stella) | Numpus(Stella) | Lempus(Stella))", "(Wumpus,numpus,lempus) | Numpus(Limpus))", "exists x.(Wumpus(x) | Numpus(x) | Lempus(x))", "exists x.(Stella(x) & ((Wumpus(x) & -numpus(x)) | (-Wumpus(x) & Numpus(x)))))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "exists x.(Wumpus(x) | Numpus(x) | Lempus(x))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))"]}
{"id": "prontoqa_train_994", "nl": "Every lempus is a sterpus.", "fol": "all x. (lempus(x) -> sterpus(x))", "prediction": ["all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "(all x.(Lempus(x) -> Sterpus(x))", "all x y.((Lempus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x y.((Lempus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterepus(x))", "all x.(Limpus(x) -> Sterepus(x))", "all x.(Lempus(x) -> Sterpus(x))", "exists x.(Lempus(x) & Sterus(x))", "all x.(Limpus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "exists x.(Limpus(x) & Steroid(x))", "exists x.(Lempus(x) & Sterpus(x))"]}
{"id": "prontoqa_train_995", "nl": "Alex is a gorpus, a lempus, and a numpus.", "fol": "(gorpus(Alex) & lempus(Alex) & numpus(Alex))", "prediction": ["all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Lempus(y) & -Numpus(y)))", "all x y z.((Alex(x) & Gorpus(y) & Lempus(z)) -> (Gorpus(x) & Lempus(z) & Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) & Lempus(x) & Numpus(x)))", "(Gorpus(Alex) | Lempus(Alex) | Numpus(Alex))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Lempus(y) & -Numpus(y)))", "all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "all x y z.((Alex(x) & Gorpus(y) & Lempus(z)) -> (Gorpus(x) | Numpus(x)))", "(Gorpus(Alex) | Lempus(Alex) | Numpus(Alex))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Lempus(y) & -Nompus(y)))", "(Gorpus,Lempus,Numpus)", "all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) & Lempus(x) & Numpus(x)))", "exists x.(Alex(x) & Gorpus(x) & Lempus(x) & Numpus(x))", "all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))"]}
{"id": "prontoqa_train_996", "nl": "Alex is a lorpus or a sterpus or a gorpus.", "fol": "(lorpus(Alex) | sterpus(Alex) | gorpus(Alex))", "prediction": ["all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "(Lorpus(Alex) | Sterpus(Alex) | Gorpus(Alex))", "all x y.((Alex(x) & Lorpus(y)) | (Sterpus(x) | Gorpus(x))))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "(Lorpus,lorpus,sterpus,gorpus)", "(Lorpus(Alex) | Sterpus(Alex) | Gorpus(Alex))", "all x y.((Alex(x) & Lorpus(y)) | (Sterpus(x) | Gorpus(x))))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "(Lorpus) | Sterpus(Alex) | Gorpus(Alex))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "exists x.(Lorpus(x) | Sterpus(x) | Gorpus(x))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterepus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterepus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_997", "nl": "Everything that is an impus, a rompus, and a yumpus is a gorpus and a grimpus and a tumpus.", "fol": "all x. ((impus(x) & rompus(x) & yumpus(x)) -> (gorpus(x) & grimpus(x) & tumpus(x)))", "prediction": ["all x.((Impose(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Imposs(x) & Rompus(x) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x y.((Imposs(x) & Rompus(y) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Issue(x) & Rompus(x) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "(all x.((Imposs,y) & -Imposs,y) & -Rompus,y)) -> Gorpus(x)) & ((Imposs,y) & Grimpus(x)) & ((Imposs,y) & -Imposs,y)) | (-Imposs,y) & -Impossible(y)))))", "all x.((Imposs,Rompus,Yumpus) & Grimpus(x) & Tumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x y z.((Impos(x) & Rompus(y) & Yumpus(z) & Is(x,y)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Impose(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Issue(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Imposer(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x y.((Imposs(x) & Rompus(x) & Yumpus(y)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "(all x.((Imposs,y) & -Imposs,y) & -Rompus,y) & -Yumpus(y)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x y.((Imposs(x) & Rompus(y) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Improvse(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "(all x.((Imposer(x) | Rompus(x) | Yumpus(x))) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.(Impose(x) & Rompus(x) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))"]}
{"id": "prontoqa_train_998", "nl": "Fae is an impus.", "fol": "impus(Fae)", "prediction": ["all x.(Fae(x) -> IsImpossible(x))", "(IsFae(f) & IsImpossible(f))", "-Impossible(Fae)", "(Impossible(Fae))", "all x.(Fae(x) -> IsImpossible(x))", "all x.(Fae(x) -> Is(x,Is(x,Is(x)))", "(Impossible(Fae,Fae))", "all x.(Fae(x) -> Impossible(x))", "(IsFae(f) & IsImpossible(f))", "all x.(Fae(x) -> Imperative(x))", "exists x.(FeaElement(x) & IsImpossible(x))", "All x.(Fae(x) -> IsImpossible(x))", "all x.(Fae(x) -> Isolated(x))", "exists x.(Fae(x) & Impossible(x))", "all x.(Fae(x) -> Implicator(x))", "All x.(Fae(x) -> Isolated(x))"]}
{"id": "prontoqa_train_999", "nl": "Fae is a rompus.", "fol": "rompus(Fae)", "prediction": ["all x.(Fae(x) -> Rompus(x))", "(Rompus(Fae) & -Rompus(Fae))", "Fae is a rompus.", "all x.(Fae(x) -> Rompus(x))", "-Rompus(Fae)", "(Rompus(Fae) & -Rompus(Fae))", "Fae is a rompus.", "(rompus(Fae) & HasRedduck(Fae))", "all x.(Fae(x) -> Rompus(x))", "(Rompus(Fae) & HasRedHole(Fae))", "(Rompus(Fae) -> Rompus(Fae))", "all x.(Fae(x) -> Rompus(x))", "(Rompus(Fae) & -Rompus(Fae))", "all x.(Fae(x) -> Rompus(x))", "All x.(Fae(x) -> Rompus(x))", "all x.(Fae(x) -> Rompus(x))"]}
{"id": "prontoqa_train_1000", "nl": "Fae is a gorpus.", "fol": "gorpus(Fae)", "prediction": ["all x.(Fae(x) -> Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "(Gorpus(Fae) & HasGorpus(Fae))", "all x.(Fae(x) -> Gorpus(x))", "(Gorpus(Fae) & Gorpus(Fae))", "(Gorpus(fee) & Gorpus(fee))", "all x.(Fae(x) -> Gorpus(x))", "(Gorpus(fee) -> Gorpus(fee))", "all x.(Fae(x) -> Gorpus(x))", "(Gorpus)", "all x.(Fae(x) -> Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "(Gorpus)", "exists x.(Fae(x) & Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "All x.(Fae(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_1001", "nl": "Each lempus is a grimpus and a shumpus and a wumpus.", "fol": "all x. (lempus(x) -> (grimpus(x) & shumpus(x) & wumpus(x)))", "prediction": ["all x.(Lempus(x) -> (Grimpus(x) & Humpus(x) & Wumpus(x)))", "(all x.(Lempus(x) -> Grimpus(x)) & all y.(Shumpus(y) & all z.(Wumpus(z)) -> Grimpus(x)))", "all x y.((Lempus(x) & Grimpus(y)) -> (Shumpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> (Grimpus(x) & Humpus(x) & Humpus(x)))", "all x y z.((Lempus(x) & Grimpus(y) & Humpus(z)) -> (Grimpus(x) & Humpus(y) & Wumpus(z)))", "all x.(Lempus(x) -> (Grimpus(x) & Shumpus(x) & Wumpus(x)))", "(all x.(Lempus(x) -> Grimpus(x)) & all y.(Shumpus(y) & all z.(Wumpus(z) & -Shumpus(y))) -> Wumpus(z)))", "(all x.(Lempus(x) -> Grimpus(x)) & (Shumpus(x) | Wumpus(x)))", "all x y.((Lempus(x) & Grimpus(y)) -> (Shumpus(x) & Wumpus(x)))", "exists x.(Lempus(x) & Grimpus(x) & Humpus(x) & Wumpus(x))", "all x.(Lempus(x) -> (Smooch(x) & Humpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> (Grimpus(x) & Humpus(x) & Wumpus(x)))", "all x.(Limpus(x) -> (Grimpus(x) | Shumpus(x) | Wumpus(x)))", "(all x.(Lempus(x) -> Grimpus(x)) & (Shumpus(x) | Wumpus(x)))", "exists x.(Lempus(x) & Grimpus(x) & Humpus(x) & Wumpus(x))", "exists x.(Limpus(x) & Grimpus(x) & Shumpus(x) & Wumpus(x))"]}
{"id": "prontoqa_train_1002", "nl": "Each lorpus is a yumpus.", "fol": "all x. (lorpus(x) -> yumpus(x))", "prediction": ["all x.(Lorpus(x) -> Yumpus(x))", "all x.(Lorpus(x) -> Yumpus(x))", "all x y.((Lorpus(x) & Yumpus(y)) -> HasLorpus(x,y))", "all x.(Lorpus(x) -> Yumpa(x))", "(all x.(Lorpus(x) -> Yumpus(x)))", "all x.(Lorpus(x) -> Yumpus(x))", "all x y.((Lorpus(x) & Yumpus(y)) -> Has(x,y))", "all x.(Lorph(x) -> Yumpus(x))", "exists x.(lorpus(x) & Yumpus(x))", "all x.(Lorpus(x) -> Yampus(x))", "all x.(Lorpus(x) -> Yumpus(x))", "exists x.(lorpus(x) & Yampus(x))", "exists x.(Lorph(x) & Yampus(x))", "all x.(Lorpus(x) -> Yumpus(x))", "all x.(Larp(x) -> Yampus(x))", "exists x.(Lorpus(x) & Yampus(x))"]}
{"id": "prontoqa_train_1003", "nl": "Yumpuses are not shumpuses.", "fol": "all x. (yumpus(x) -> -shumpus(x))", "prediction": ["all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "(-Shumpus(y) & Yumpus(z))", "(all x.(Yumpuse(x) -> -Shumpus(x)))", "(all x.(Yumpus(x) -> -Shumpus(x)))", "-Shumpuse(y)", "all x y.((Yumpuse(x) & Humpback(y)) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "(all x.(Yumpuse(x) -> -Shumpus(x)))", "all x.(Yumpuse(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Umbuse(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "(all x.(Yumpus(x) -> -Shumpus(x)))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))"]}
{"id": "prontoqa_train_1004", "nl": "Alex is a lorpus.", "fol": "lorpus(Alex)", "prediction": ["all x.(Alex(x) -> Lorpus(x))", "Alex is a lorpus.", "all x.(Alex(x) -> Lorpus(x))", "Alex is a lorpus.", "(Lorpus(Alex) & LivesIn(Alex,Lorpus))", "all x.(Alex(x) -> Lorpus(x))", "all x.(Lorpus(x) -> Alex(x))", "Alex is a lorpus.", "all x.(Alex(x) -> Llorpus(x))", "(Lorpus(Alex) & LivesIn(Alex))", "Alex is a lorpus.", "all x.(Lorpus(x) -> Alex(x))", "all x.(Alex(x) -> Lorpus(x))", "Alex is a lorpus.", "All x.(Alex(x) -> Loomis(x))", "All x.(Alex(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_1005", "nl": "Each numpus is a lorpus, a shumpus, and a rompus.", "fol": "all x. (numpus(x) -> (lorpus(x) & shumpus(x) & rompus(x)))", "prediction": ["all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "(all x.(Numpus(x) -> Lorpus(x)) & all y.(Shumpus(y) & all z.(Rompus(z)) -> Nompus(x)))", "all x y z.((Numpus(x) & Lorpus(y) & Humpus(z)) -> (Lorpus(x) | Humpus(z) | Rompus(z)))", "all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "all x.(Nompus(x) -> (Lorpus(x) & Humpus(x) & Rompus(x)))", "(all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "(all x.(Numpus(x) -> Lorpus(x)) & all y.(Shumpus(y) & all z.(Rompus(z)) -> Lopus(x)))", "all x y z.((Numpus(x) & Lorpus(y) & Humpus(z)) -> (Lorpus(x) | Humpus(z) | Rompus(z)))", "(all x.(Nompus(x) -> Loomis(x)) & all y.(Shumpus(y) & All z.(Rompus(z)) -> Roose(z))))", "all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) & Humpus(x) & Rompus(x)))", "(all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "exists x.(Numpus(x) & Lorpus(x) & Humpus(x) & Rompus(x))", "all x.(Nompus(x) -> (Lorpus(x) | Shumpus(x) | Rompus(x)))", "exists x.(Nompus(x) & Lorpus(x) & Humpus(x) & Rompus(x))", "all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1006", "nl": "Max is a numpus.", "fol": "numpus(Max)", "prediction": ["all x.(Max(x) -> Numpus(x))", "Max is Numpus(Max)", "(Numpus(Max) & Numpus(Max))", "Max.(Max) -> Numpus(x))", "all x.(Max(x) -> Numpus(x))", "Max is Numpus(Max)", "(numpus(Max) & HasNums(Max))", "(Numpus(Max) & HasNumber(Max))", "Max is a Numpus.", "Max is Numpus(Max)", "all x.(Max(x) -> Numpus(x))", "-Numpus(Max)", "(Numpus(Max) & Numpus(Max))", "all x.(Max(x) -> Numpus(x))", "All x.(Max(x) -> Numpus(x))", "(Numpus(Max)"]}
{"id": "prontoqa_train_1007", "nl": "Max is a shumpus, a lorpus, or an impus.", "fol": "(shumpus(Max) | lorpus(Max) | impus(Max))", "prediction": ["all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x)))", "(all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x))))", "(Shumpus(Max) | Lorpus(Max) | Imperator(Max))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x)))", "(Shumpus,Lorpus,Issue) | Issue(Max,Shumpus))", "(exists x.(Max(x) & Humpus(x)) | exists y.(Lorpus(y) & Issue(y))))", "(all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x))))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x)))", "exists x.(Mat Max(x) & (Shumpus(x) | Lorpus(x) | Imperator(x)))", "(all x.(Max(x) -> Shumpus(x)) | (Max(x) -> Lorpus(x) | Max(x))))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperative(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Issue(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x)))", "all x.(Max(x) -> (Shumpus(x) | Lordpus(x) | Impossible(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Impeccable(x)))", "all x.(Max(x) -> (Shumpus(x) | Lops(x) | Issue(x)))"]}
{"id": "prontoqa_train_1008", "nl": "Polly is a sterpus and a wumpus and a jompus.", "fol": "(sterpus(Polly) & wumpus(Polly) & jompus(Polly))", "prediction": ["all x.(Polly(x) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "(all x.(Polly(x) -> Sterpus(x)) & all y.(Wumpus(y) & -Jompus(y))))", "all x y z.((Polly(x) & Sterpus(y) & Wumpus(z)) -> (Sterpus(x) & Wumpus(y) & Jompus(z)))", "all x y.((Polly(x) & Sterpus(y)) -> (Wumpus(x) & Jompus(x)))", "(all x.(Polly(x) -> Sterpus(x)) & all y.(Wumpus(y) & All z.(Jompus(z))) -> (Wumpus(y) & All z.(Wompus(z) & All w.(Wompus(w) & All w.(Wompus(w)) & All w.(Wompus(w))))))", "(Sterpus(Poly) & Wumpus(Poly) & Jompus(Poly))", "all x.(Polly(x) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "(all x.(Polly(x) -> Sterpus(x)) & (Wumpus(x) | Jompus(x))))", "(All x.(Polly(x) -> Sterpus(x)) & (Wumpus(x) | Jompus(x))))", "all x y z.((Polly(x) & Sterpus(y) & Wumpus(z)) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "all x.(Polly(x) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "all x.(Polly(x) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "all x y.((Polly(x) & Sterpus(y)) -> (Wumpus(x) & Jompus(x)))", "(all x.(Polly(x) -> Sterpus(x)) & (Wumpus(x) | Jompus(x))))", "exists x.(Polly(x) & Sterpus(x) & Wumpus(x) & Jompus(x))", "exists x.(Polly(x) & Sterpus(x) & Wumpus(x) & Jompus(x))"]}
{"id": "prontoqa_train_1009", "nl": "Polly is a tumpus or a lempus or a shumpus.", "fol": "(tumpus(Polly) | lempus(Polly) | shumpus(Polly))", "prediction": ["all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "(Tumpus(poly) | Lempus(poly) | Humpus(poly)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x y.((Polly(x) & Tumpus(y)) | (Lempus(x) | Humpus(x))))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "(Tumpus(poly) | Lempus(poly) | Humpus(poly)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "(all x.(Polly(x) -> Tumpus(x)) | (Lempus(x) | Humpus(x))))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x y.((Polly(x) & Tumpus(y)) | (Lempus(y) | Humpus(y))))", "(Tumpus,Tumpus,Lempus,Shumpus)", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "exists x.(Polly(x) & (Tumpus(x) | Lempus(x) | Humpus(x)))", "exists x.(Polly(x) & (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "exists x.(Polly(x) & (Tumpus(x) | Lempus(x) | Humpus(x)))"]}
{"id": "prontoqa_train_1010", "nl": "Every zumpus is a rompus and a shumpus and a yumpus.", "fol": "all x. (zumpus(x) -> (rompus(x) & shumpus(x) & yumpus(x)))", "prediction": ["all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "(all x.(Tompus(x) -> Rompus(x)) & all y.(Shumpus(y) & All z.(Yumpus(z)) -> Tompus(x)))", "all x.(Zumpus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x y.((Tompus(x) & Rompus(y)) -> (Shumpus(x) & Yumpus(x)))", "(all x.(Tompus(x) -> Rompus(x)) & all y.(Shumpus(y) & All z.(Yumpus(z) & -Rompus(y))))", "(all x.(Zumpus(x) -> Rompus(x)) & (Shumpus(x) | Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x y.((Zumpus(x) & Rompus(y)) -> (Shumpus(x) & Yumpus(x)))", "exists x.(Zumpus(x) & Rompus(x) & Humpus(x) & Yumpus(x))", "all x.(Zumpus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Zumpus(x) -> (Rompus(x) | Humpus(x) | Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "(all x.(Zumpus(x) -> Rompus(x)) & (Shumpus(x) | Yumpus(x)))", "exists x.(Tompus(x) & Rompus(x) & Humpus(x) & Yumpus(x))", "all x.(Zumpus(x) -> (Rompus(x) & Shumpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1011", "nl": "Rex is a zumpus.", "fol": "zumpus(Rex)", "prediction": ["all x.(Rex(x) -> Zumpus(x))", "Rex is a zumpus.", "Rex is zumpus.", "all x.(Rex(x) -> Zumpus(x))", "(Zombie(Rex) & HasTumpus(Rex))", "(Zombian(Rex) & -Zombian(Rex))", "Rex is a zumpus.", "Rex.(Zumpus(x) -> HasRex(x))", "All x.(Rex(x) -> Zumpus(x))", "Rex is zumpus.", "Rex (Zombian)", "Rex is a zumpus.", "all x.(Rex(x) -> Zumpus(x))", "All x.(Rex(x) -> Zumpus(x))", "all x.(Rex(x) -> Zumpus(x))", "All x.(Rex(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_1012", "nl": "Rex is a rompus or a lempus or a grimpus.", "fol": "(rompus(Rex) | lempus(Rex) | grimpus(Rex))", "prediction": ["all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "(Rompus(Rex) | Lempus(Rex) | Grimpus(Rex)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "(all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x))))", "(Rompus(Rex) | Lempus(Rex) | Grimpus(Rex)))", "all x.(Rompus(x) | Lempus(x) | Grimpus(x))", "(Rex(Rex) & (Rompus(Rex) | Lempus(Rex) | Grimpus(Rex)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "(Rompus(rex) | Lempus(rex) | Grimpus(rex)))", "all x y.((Rex(x) & Rompus(y)) | (Lempus(x) | Grimpus(x))))", "exists x.(Rompus(x) | Lempus(x) | Grimpus(x))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Gruppus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Gruppus(x)))"]}
{"id": "prontoqa_train_1013", "nl": "Everything that is a shumpus and a lempus and a yumpus is a tumpus and a brimpus and a zumpus.", "fol": "all x. ((shumpus(x) & lempus(x) & yumpus(x)) -> (tumpus(x) & brimpus(x) & zumpus(x)))", "prediction": ["all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x y.((Shumpus(x) & Lempus(x) & Yumpus(y)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) | Lempus(x) | Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x y.((Shumpus(x) & Lempus(y) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "(all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) | Lempus(x) | Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x y.((Shumpus(x) & Lempus(x) & Yumpus(y)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) | Lempus(x) | Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "(all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "(all x.((Shumpus(x) | Lempus(x) | Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x y.((Shumpus(x) & Lempus(y) & Yumpus(y)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))"]}
{"id": "prontoqa_train_1014", "nl": "Rex is a shumpus.", "fol": "shumpus(Rex)", "prediction": ["all x.(Rex(x) -> Humpus(x))", "Rex is a shumpus.", "all x.(Rex(x) -> Humpus(x))", "(Shumpus(Rex) & HasShump(Rex))", "Rex is a shumpus.", "Rex is shumpus.", "Rex.(Shumpus(Rex))", "(Shumpus(Rex) & Shumpus(Rex))", "all x.(Rex(x) -> Humpus(x))", "Rex is a shumpus.", "All x.(Rex(x) -> Humptus(x))", "all x.(Shumpus(x) -> Rex(x))", "(Shumpus(rex) & HasShump(rex))", "all x.(Rex(x) -> Shumpus(x))", "(Shumpus)", "All x.(Rex(x) -> Humpus(x))"]}
{"id": "prontoqa_train_1015", "nl": "Rex is a yumpus.", "fol": "yumpus(Rex)", "prediction": ["all x.(Rex(x) -> Yumpus(x))", "Rex is yumpus.", "(Yumpus(Rex))", "all x.(Rex(x) -> Yumpus(x))", "Rex is yumpus.", "all x.(Yumpus(x) -> Rex(x))", "Rex (Yumpus)", "All x.(Rex(x) -> Yampus(x))", "Rex is yumpus.", "(Yumpus(Rex) & HasYump(Rex))", "Rex is yumpus.", "All x.(Rex(x) -> Yumpus(x))", "all x.(Yumpus(x) -> Rex(x))", "(Yumpus)", "Rex is yumpus.", "All x.(Rex(x) -> Yumpus(x))"]}
{"id": "prontoqa_train_1016", "nl": "Rex is a brimpus.", "fol": "brimpus(Rex)", "prediction": ["all x.(Rex(x) -> Brimpus(x))", "Rex is a Brimpus.", "Rex is a brimpus.", "all x.(Rex(x) -> Brimpus(x))", "(Brimpus(Rex) & Brimpus(Rex))", "Rex is a Brimpus.", "all x.(Rex(x) -> Brimpus(x))", "Rex is brimpus.", "Rex.(Brimpus)", "(Brimpus(rex) & HasBrimpus(rex))", "All x.(Rex(x) -> Brimpus(x))", "(Brumpus)", "all x.(Rex(x) -> Brimpus(x))", "All x.(Rex(x) -> Brimpus(x))", "all x.(Rex(x) -> Brimpus(x))", "All x.(Rex(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_1017", "nl": "Everything that is an impus and a wumpus and a yumpus is a zumpus, a numpus, and a tumpus.", "fol": "all x. ((impus(x) & wumpus(x) & yumpus(x)) -> (zumpus(x) & numpus(x) & tumpus(x)))", "prediction": ["all x.((Impossible(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Impose(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x y z.((Imposs(x) & Wumpus(y) & Yumpus(z) & Impossible(x) & Impossible(y) & Impossible(z) & Impossible(z) & Impossible(z) & Impossible(z) & Impossible(z) & Impossible(z) & Impossible(z) & Impossible(z) & Impossible(z) & Impossible(z))", "all x.((Issue(x) & IsWumpus(x) & IsYumpus(x)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x y.((Imposs(x) & Wumpus(y) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Impossible(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x.(Impose(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x.((Impose(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x y.((Imposs(x) & Wumpus(x) & Yumpus(y)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x.((Issue(x) & IsWumpus(x) & IsYumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.(Impose(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "(all x.((Impossible(x) & Wumpus(x) & Yumpus(x)) -> (Zumpus(x) & Numpus(x) & Tumpus(x)))", "(all x.((Impossible(x) & Wumpus(x) & Yumpus(x)) -> (Zumpus(x) & Numpus(x) & Tumpus(x)))", "all x y.((Impossible(x) & Wumpus(y) & Yumpus(y)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Imposer(x) & Wumpus(x) & Yumpus(x)) -> (Zumpus(x) & Numpus(x) & Tumpus(x)))", "(all x.((Impossible(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1018", "nl": "Sam is an impus.", "fol": "impus(Sam)", "prediction": ["all x.(Sam(x) -> Is(x,y))", "(Impossible(Sam))", "all x.(Sam(x) -> IsImpossible(x))", "Sam is a impusct.", "(Is(Sam) & Is(Sam)))", "all x.((Sam(x) & IsImpossible(x)) -> IsImpossible(x))", "(Impossible(Sam))", "Sam ist ein Isolator.", "Sam is a impus.", "all x.(Sam(x) -> Is(x,y))", "all x.(Sam(x) -> Impeccable(x))", "(Impossible(Sam,Sam))", "All x.(Sam(x) -> Impossible(x))", "all x.(Sam(x) -> IsImpossible(x))", "All x.(Sam(x) -> Imperator(x))", "All x.(Sam(x) -> Impossible(x))"]}
{"id": "prontoqa_train_1019", "nl": "Sam is a wumpus.", "fol": "wumpus(Sam)", "prediction": ["all x.(Wumpus(x) -> Sam(x))", "all x.(Wumpus(x) -> Sam(x))", "(Wumpus(Sam) & HasWump(Sam))", "(Wumpus(Sam) & -Wumpus(Sam))", "Sam is a wumpus.", "all x.(Wumpus(x) -> Sam(x))", "(Wumpus(Sam) & HasWumpus(Sam,Sam))", "all x.((Sam(x) & Wumpus(x)) -> Wumpus(x))", "Sam is a wumpus.", "(Wumpus(Sam) & -Wumpus(Sam))", "all x.(Wumpus(x) -> Sam(x))", "all x.(Wumpus(x) -> Sam(x))", "Sam is a wumpus.", "all x.(Wumpus(x) -> Sam(x))", "(Wumpus)", "all x.(Wumpus(x) -> Sam(x))"]}
{"id": "prontoqa_train_1020", "nl": "Sam is a yumpus.", "fol": "yumpus(Sam)", "prediction": ["all x.(Yumpus(x) -> Sam(x))", "Sam is yumpus.", "all x.(Sam(x) -> Yumpus(x))", "all x.(Yumpus(x) -> Sam(x))", "(Yumpus(Sam) & HasYump(Sam))", "Sam is yumpus.", "(Yumpus(Sam) & HasYump.", "all x.(Yumpus(x) -> Sam(x))", "(Yumpus(Sam) & HasYumpty(Sam))", "all x.((Sam(x) & Yumpus(x)) -> Yampus(x))", "all x.(Yumpus(x) -> Sam(x))", "all x.(Yumpus(x) -> Sam(x))", "All x.(Sam(x) -> Yumpus(x))", "(Yumpus)", "(Yumpus)", "all x.(Yumpus(x) -> Sam(x))"]}
{"id": "prontoqa_train_1021", "nl": "Sam is a zumpus.", "fol": "zumpus(Sam)", "prediction": ["all x.(Sam(x) -> Zumpus(x))", "all x.(Sam(x) -> Zumpus(x))", "(Zombie(Sam) & Has(Sam) & Has(Sam))", "Sam is zumpus.", "Sam is a zumpus.", "(Zumpus(Sam) & Has(Sam,Sam))", "all x.(Sam(x) -> Zumpus(x))", "Sam is zumpus.", "(Tompus(Sam) & HasTom(Sam,Sam))", "(Zumpus(sam) & Has(sam) & Has(sam))", "all x.(Zumpus(x) -> Sam(x))", "all x.(Sam(x) -> Zumpus(x))", "Sam is zumpus.", "all x.(Sam(x) -> Zumpus(x))", "all x.(Tompus(x) -> Sam(x))", "All x.(Sam(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_1022", "nl": "Everything that is a shumpus and a yumpus and a tumpus is a lorpus.", "fol": "all x. ((shumpus(x) & yumpus(x) & tumpus(x)) -> lorpus(x))", "prediction": ["all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x y.((Shumpus(x) & Yumpus(y) & Tumpus(y)) -> Lorpus(x))", "all x y z.((Shumpus(x) & Yumpus(y) & Tumpus(z) & Has(x,y) & Has(x,z)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Tumpus(x)) -> Lorpus(x))", "(all x.((Shumpus(x) & Yumpus(x)) -> Lorpus(x)) & all y.((Yumpus(y) & Tumpus(y)) -> Lorpus(y)))", "all x y z.((Shumpus(x) & Yumpus(y) & Tumpus(z) & Is(x,y) & Is(y,z)) -> Lorpus(x))", "(all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x y.((Shumpus(x) & Yumpus(y) & Tumpus(y)) -> Lorpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.(((Shumpus(x) | Yampus(x) | Tumpus(x))) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lordess(x))"]}
{"id": "prontoqa_train_1023", "nl": "Each wumpus is not a lorpus.", "fol": "all x. (wumpus(x) -> -lorpus(x))", "prediction": ["all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "(-Lorpus(wumpus) & -Lorpus(wumpus,w))", "all x.(Wumpus(x) -> -Lorpus(x))", "(-Lorpus(wumpus)", "all x y.((Wumpus(x) & Lorpus(y)) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "exists x.(Wumpus(x) & -Larpa(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "exists x.(Wumpus(x) & -Larph(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "exists x.(Wumpus(x) & -Lorpus(x))"]}
{"id": "prontoqa_train_1024", "nl": "Sally is a dumpus and a numpus and a wumpus.", "fol": "(dumpus(Sally) & numpus(Sally) & wumpus(Sally))", "prediction": ["all x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))", "(Dumpus(Sally) & Numpus(Sally) & Wumpus(Sally))", "(Dumps(Sally) & Numpus(Sally) & Wumpus(Sally))", "Sally is a dumpus and a numpus and a wumpus.", "all x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))", "(Dumpus(Sally) & Numpus(Sally) & Wumpus(Sally))", "(Dumpus(s) & Numpus(s) & Wumpus(s))", "all x.(Sally(x) -> (Dumps(x) & Numpus(x) & Wumpus(x)))", "Sally is a Dumpus and NumpusAndWumpus.", "(Dumpus,numpus,wumpus)", "Sally is a dumpus and a numpus and a wumpus.", "all x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))", "(Dumpus(Sally) & Numpus(Sally) & Wumpus(Sally))", "exists x.(Sally(x) & Dumpus(x) & Numpus(x) & Wumpus(x))", "all x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))", "all x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))"]}
{"id": "prontoqa_train_1025", "nl": "Sally is a yumpus.", "fol": "yumpus(Sally)", "prediction": ["all x.(Yumpus(x) -> Sally(x))", "Sally is yumpus.", "Sally is yumpus.", "all x.(Yumpus(x) -> Sally(x))", "(Yumpus(Sally) & HasYump(Sally))", "Sally is a yumpus.", "(Yumpus(Sally) & HasYump(Sally,Sally))", "Sally is yumpus.", "all x.(Yumpus(x) -> Sally(x))", "Sally is Yampus.", "Sally (yumpus)", "All x.(Yumpus(x) -> Sally(x))", "Sally is yumpus.", "All x.(Yumpus(x) -> Sally(x))", "all x.(Yumpus(x) -> Sally(x))", "all x.(Yumpus(x) -> Sally(x))"]}
{"id": "prontoqa_train_1026", "nl": "Sally is a tumpus.", "fol": "tumpus(Sally)", "prediction": ["all x.(Tumpus(x) -> Sally(x))", "Sally is a tumpus.", "all x.(Tumpus(x) -> Sally(x))", "Sally is a tumpus.", "(Tumpus(Sally) & HasTump(Sally,Sally))", "all x.(Sally(x) -> Tumpus(x))", "Sally is tumpus.", "(Tumpus(Sally) & Tumpus(Sally))", "Sally is a tumpus.", "all x.(Tumpus(x) -> Sally(x))", "Sally (Tumpus)", "Sally is tumpus.", "Sally is Tumpus.", "All x.(Sally(x) -> Tumpus(x))", "all x.(Tumpus(x) -> Sally(x))", "all x.(Tumpus(x) -> Sally(x))"]}
{"id": "prontoqa_train_1027", "nl": "Everything that is a vumpus, a tumpus, or a dumpus is a yumpus and a zumpus and a lorpus.", "fol": "all x. ((vumpus(x) | tumpus(x) | dumpus(x)) -> (yumpus(x) & zumpus(x) & lorpus(x)))", "prediction": ["all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.(((Vumpus(x) | Tumpus(x) | Dumpus(x))) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x y.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(y) & Zumpus(y) & Lorpus(y)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x y.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(y) & Zumpus(y) & Lorpus(y)))", "all x.(VumpusTumpusOrDumpus(x) -> (Yumpus(x) | Zumpus(x) | Lorpus(x)))", "(all x.((Vumpus(x) | Tumpus(x) | Dumpus(x))) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "(all x.((Vumpus(x) | Tumpus(x) | Dumpus(x))) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vimpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "(all x.((Vumpus(x) | Tumpus(x) | Dumpus(x))) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_train_1028", "nl": "Sam is a vumpus.", "fol": "vumpus(Sam)", "prediction": ["all x.(Sam(x) -> Vumpus(x))", "all x.(Vumpus(x) -> Sam(x))", "Sam is a Vumpus.", "all x.(Sam(x) -> Vumpus(x))", "(Vumpus(Sam) & HasVumpus(Sam))", "all x.((Sam(x) & Vumpus(x)) -> Vumpus(x))", "(Vimpus(Sam) & -Vimpus(Sam))", "all x.(Vumpus(x) -> Sam(x))", "(Vumpus(Sam) & HasVumpus(Sam))", "Sam is a Vumpus.", "Sam is a Vampus.", "(Vumpus(Sam) & HasVumpus(Sam))", "all x.(Vimpus(x) -> Sam(x))", "(Vimpus(Sam) & Vampire(Sam))", "exists x.(Sam(x) & Vampire(x))", "all x.(Vumpus(x) -> Sam(x))"]}
{"id": "prontoqa_train_1029", "nl": "Everything that is a lorpus and a brimpus and an impus is not a jompus.", "fol": "all x. ((lorpus(x) & brimpus(x) & impus(x)) -> -jompus(x))", "prediction": ["all x.((Lorpus(x) & Brimpus(x) & Imperator(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Impossible(x)) -> -Jompus(x))", "(all x.((Lorpus(x) & -Jompus(x)) -> (Brimpus(x) & -Jompus(x)))", "all x y.((Lorpus(x) & Brimpus(y) & Imperator(x)) -> -Jompus(x))", "(all x.((Lorpus(x) & Brimpus(x) & Impossible(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Imperator(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & IsRefrigerator(x)) -> -Jompus(x))", "all x y.((Lorpus(x) & Brimpus(y) & Impossible(x)) -> -Jompus(x))", "all x.((Lorpus(x) | Brimpus(x) | Imperator(x)) -> -Jompus(x))", "(all x.((Lorpus(x) & Brimpus(x) & Issue(x)) -> -Jompus(x))", "all x.((Lorph(x) & Brimpus(x) & Imperator(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Impossible(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & IsImpossible(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Imperator(x)) -> -Jompus(x))", "all x.((Larps(x) & Brimpus(x) & Issue(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Impossible(x)) -> -Jompus(x))"]}
{"id": "prontoqa_train_1030", "nl": "Grimpuses are jompuses, lempuses, and yumpuses.", "fol": "all x. (grimpus(x) -> (jompus(x) & lempus(x) & yumpus(x)))", "prediction": ["all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "(all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x))))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "all x y z.((Grimpus(x) & Jompuse(y) & Lempuse(z)) -> (Jumpus(x) | Yumpus(x)))", "(all x.(Grimpuse(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x))))", "(all x.(Grimpus(x) -> Jompuse(x)) & all y.(Lempuse(y) & Yumpus(y))))", "(all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x y.((Grimpus(x) & Jompuse(y) & Lempuse(y)) -> Yumpus(x,y))", "(all x.(Grimpuse(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpuse(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "(all x.(Grimpuse(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpuse(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))"]}
{"id": "prontoqa_train_1031", "nl": "Wren is a lorpus.", "fol": "lorpus(Wren)", "prediction": ["all x.(Wren(x) -> Lorpus(x))", "all x.(Wren(x) -> Lorpus(x))", "(Lorpus(Wren) & LivesIn(Wren,Lorpus))", "all x.(Wren(x) -> Lorpus(x))", "(Lorpus(wren) & LivesIn(wren,x))", "all x.(Wren(x) -> Llorpus(x))", "(Lorpus(wren) & LivesIn(wren,w))", "all x.(Wren(x) -> Lorpus(x))", "all x.(Wren(x) -> Llorpus(x))", "(Lorpus)", "(Lorpus)", "All x.(Wren(x) -> Lorpus(x))", "all x.(Wren(x) -> Lorpus(x))", "exists x.(Warn(x) & Throat(x))", "all x.(Wren(x) -> Lompus(x))", "All x.(Wren(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_1032", "nl": "Every rompus is a gorpus and a dumpus and a lempus.", "fol": "all x. (rompus(x) -> (gorpus(x) & dumpus(x) & lempus(x)))", "prediction": ["all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "(all x.(Rompus(x) -> Gorpus(x)) & all y.(Dumpus(y) & All z.(Lempus(z)) -> Lempus(z))))", "all x y.((Rompus(x) & Gorpus(y)) -> (Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "exists x.(rompus(x) & Gorpus(x) & Dumpus(x) & Lempus(x))", "(all x.(Rompus(x) -> Gorpus(x)) & all y.(Dumpus(y) & All z.(Lempus(z)) -> Lempus(z))))", "all x y z.(Rompus(x) -> (Gorpus(x) & Dumpus(y) & Lempus(z)))", "all x y.((Rompus(x) & Gorpus(x) & Dumpus(y)) -> Lempus(x))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "exists x.(rompus(x) & Gorpus(x) & Dumpus(x) & Lempus(x))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "(all x.(Rompus(x) -> Gorpus(x)) & (Dumpus(x) | Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "exists x.(rompus(x) & Gorpus(x) & Dumpus(x) & Lempus(x))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_1033", "nl": "Fae is a lempus, Fae is a yumpus, and Fae is not a gorpus.", "fol": "(lempus(Fae) & yumpus(Fae) & -gorpus(Fae))", "prediction": ["(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & (Fae(x) -> -Gorpus(x)))", "all x y z.((Fae(x) & Lempus(x) & Yampus(y) & -Gorpus(z)) -> (Lempus(x) & Yampus(y) & -Gorpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Yumpus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "(all x y z.((Fae(x) & Lempus(x)) -> (Yumpus(y) & -Gorpus(z))) -> (Fae(x) & Lempus(x) & Yampus(y) & -Gorpus(z)))", "(all x y z.(Fae(x) -> Lempus(x)) & (Fae(y) -> Yumpus(y)) & (Fae(z) -> -Gorpus(z)))", "all x y z.((Fae(x) & Lempus(x) & Yampus(y) & -Gorpus(z)) -> (Lempus(x) & Yampus(y) & -Gorpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & -Gorpus(x)))", "all x.(Fae(x) -> (Lempus(x) & Yumpus(x) & -Gorpus(x)))", "exists x.(Fae(x) & Lempus(x) & Yampus(x) & -Gorpus(x))", "all x y z.(Fae(x) -> (Lempus(x) | Yampus(x) | -Gorpus(y)))", "all x y z.((Fae(x) & Lempus(y) & Yumpus(z)) -> (Lempus(x) | Yampus(z) | -Gorpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Yumpus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "all x y z.(Fae(x) & Lempus(x) & Yampus(y) & -Gorpus(z))", "(all x y z.((Fae(x) & Lempus(x)) -> (Yumpus(y) & -Gorpus(z))))", "all x.(Fae(x) -> (Lempus(x) & Yampus(x) & -Gorpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & -Gorpus(x)))"]}
{"id": "prontoqa_train_1034", "nl": "Everything that is a wumpus, a brimpus, or a tumpus is a lorpus.", "fol": "all x. ((wumpus(x) | brimpus(x) | tumpus(x)) -> lorpus(x))", "prediction": ["all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.(((Wumpus(x) | Brimpus(x) | Tumpus(x))) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x y.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(y))", "all x.(((Wumpus(x) | Brimpus(x) | Tumpus(x))) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "(all x.((Wumpus(x) | Brimpus(x) | Tumpus(x))) -> Lordess(x))", "all x y.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(y))", "all x.(((Wumpus(x) | Brimpus(x) | Tumpus(x))) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lordess(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Loomis(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lordeus(x))"]}
{"id": "prontoqa_train_1035", "nl": "Rex is an impus, Rex is a lempus, and Rex is not a lorpus.", "fol": "(impus(Rex) & lempus(Rex) & -lorpus(Rex))", "prediction": ["(all x.(Rex(x) -> Issue(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Lorpus(x)))", "all x y z.((Rex(x) & Lempus(y) & -Lorpus(z)) -> (Impossible(x) & Lempus(y) & -Lorpus(z)))", "(all x.(Rex(x) -> Issuel(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Lorpus(z))))", "(all x.(Rex(x) -> Impossible(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Lorpus(z))))", "all x y z.((Rex(x) & Lempus(y) & Lorpus(z)) -> (Impossible(x) & Lempus(y) & -Lorpus(z)))", "(all x y z.((Rex(x) & Impossible(x)) -> Lempus(x)) & ((Rex(y) & -Lorpus(z))) -> Lempus(y)))", "all x.(Rex(x) -> (Impossible(x) & Lempus(x) & -Lorpus(x)))", "all x y z.((Rex(x) & Is(x,y) & Lempus(y) & Rex(z)) -> (Impossible(x) & Lempus(z) & -Lorpus(z)))", "(all x.(Rex) -> Issue(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Lorpus(x)))", "(all x.(Rex(x) -> Issue(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Lorpus(z))))", "all x y z.((Rex(x) & Lempus(y) & -Lorpus(z)) -> (Impossible(x) | Lempus(y) | -Lorpus(z)))", "all x.(Rex(x) -> (Impossible(x) | Lempus(x) | -Lorpus(x)))", "all x y z.((Rex(x) & Impossible(x) & Lempus(y) & -Lorpus(z)) -> (Impossible(x) & Lempus(y) & -Lorpus(z)))", "(all x y z.((Rex(x) & Is(x,y)) -> Is(x,z)) & ((Rex(y) & Lempus(z)) -> -Lorpus(y)))", "(all x.(Rex,Impossible(x) -> Lempus(x)) & all y.(Rex,Lorpus) -> -Lorpus(y)))", "(all x y z.((Rex(x) & Impossible(x)) -> Lempus(x)) & ((Rex(y) & -Lorpus(y)) -> Lempus(y)))"]}
{"id": "prontoqa_train_1036", "nl": "Wren is a brimpus and Wren is not a dumpus and Wren is a lempus.", "fol": "(brimpus(Wren) & -dumpus(Wren) & lempus(Wren))", "prediction": ["(all x.(Wren(x) -> Brimpus(x)) & (-Dumpus(x) & Lempus(x)))", "all x y z.((Wren(x) & Brimpus(x) & Wren(y) & Dumpus(z)) -> (Brimpus(x) & Lempus(y)))", "all x y.((Wren(x) & Brimpus(x) & Wren(y)) -> (-Dumpus(y) & Lempus(y)))", "(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> -Dumpus(x)) & (Wren(x) -> Lempus(x)))", "(all x y z.((Wren(x) & Brimpus(x)) -> (Brimpus(x) & -Dumpus(y)) & ((Wren(z) & Lempus(z)) -> Lempus(z))))", "(all x y.(Brimpus(x) -> Wren(x)) & (Dumpus(y) -> Wren(y)))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wren(y) -> -Dumpus(y))) & all z.(Wren(z) -> Lempus(z)))", "(all x.(Wren(x) -> Brimpus(x)) & (-Dumpus(x)) & (-Dumpus(x) -> Lempus(x)))", "all x.(Wren(x) -> (Brimpus(x) & -Dumpus(x) & Lempus(x)))", "all x y z.((Wren(x) & Brimpus(x) & Wren(y) & Dumpus(y)) -> (Brimpus(x) & Lempus(z)))", "all x y.((Wren(x) & Brimpus(x) & Wren(y)) -> (-Dumpus(y) & Lempus(y)))", "all x y z.((Wren(x) & Brimpus(x) & Wren(y) & Dumpus(z) & Lempus(x)) -> (Brimpus(x) & -Dumpus(y) & Lempus(z)))", "(all x y.(Brimpus(x) -> Wren(y)) & (Brimpus(y) | Dumpus(y))) & (Lempus(y) -> Wren(y)))", "all x.(Wren(x) -> (Brimpus(x) & -Dumpus(x) & Lempus(x)))", "all x y.((Wren(x) & Brimpus(x) & Wren(y)) -> (-Dumpus(y) & Lempus(y)))", "(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> -Dumpus(x)) & (Wren(x) -> Lempus(x)))"]}
{"id": "prontoqa_train_1037", "nl": "Wren is a lorpus, Wren is not a jompus, or Wren is a brimpus.", "fol": "(lorpus(Wren) | -jompus(Wren) | brimpus(Wren))", "prediction": ["(all x.(Wren(x) -> Lorpus(x)) | (-Jompus(x) | Brimpus(x))))", "all x y.((Wren(x) & Lorpus(x)) | (-Jompus(y) | Brimpus(y))))", "all x.((Wren(x) & (Lorpus(x) | -Jompus(x) | Brimpus(x))) -> (Lorpus(x) | Brimpus(x)))", "all x y z.((Wren(x) & Lorpus(y) & -Jompus(z)) | (-Jompus(x,z) | Brimpus(x))))", "(all x.(Wren(x) -> Lorpus(x)) & (-Jompus(x) | Brimpus(x))))", "all x y.((Wren(x) & Lorpus(y)) | (-Jompus(y) | Brimpus(x))))", "all x y.((Wren(x) & Moose(y)) -> (Lorpus(x) | -Jompus(y) | Brimpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | -Jompus(x) | Brimpus(x)))", "(all x y.(Wren(x) -> Lorpus(x)) & (-Jompus(y) | Brimpus(y))))", "(all x.(Wren(x) -> Lorpus(x)) | (-Jompus(x) | Brimpus(x))))", "(all x.(Wren(x) -> Loomis(x)) | (-Wren(x) & Jompus(x)) | (-Wren(x) & Brimpus(x))))", "exists x.(Wren(x) & ((Lorph(x) & -Jompus(x)) | (Brimpus(x)))))", "exists x.(Wren(x) & ((Lorpus(x) & -Jompus(x)) | Brimpus(x))))", "all x.(Wren(x) -> (Lorpus(x) | -Jompus(x) | Brimpus(x)))", "(all x y.(Wren(x) -> (Lorpus(x) | -Jompus(x) | Brimpus(y))))", "(all x.(Wren(x) -> Lorpus(x)) & (-Jompus(x) | Brimpus(x))))"]}
{"id": "prontoqa_train_1038", "nl": "Everything that is an impus and a dumpus and a lorpus is a rompus and a numpus and a jompus.", "fol": "all x. ((impus(x) & dumpus(x) & lorpus(x)) -> (rompus(x) & numpus(x) & jompus(x)))", "prediction": ["all x.((Impossible(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Is(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x y.((Impossible(x) & Dumpus(y) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x y z.((Imposs(x) & Dumpus(y) & Lorpus(z) & Is(x,y) & Is(x,z)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Issue(x) & IsDumpus(x) & IsLorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Impossible(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x y.((Imposs(x) & Dumpus(x) & Lorpus(y)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.(Impose(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Imposs(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "(all x.((Impossible(x) & Dumpus(x) & Lorpus(x)) -> Rompus(x)) & ((Impossible(x) & Numpus(x) & Jompus(x)) -> Jompus(x)))", "(all x.((Impossible(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Impossible(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.(Impossible(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x y.((Impossible(x) & Dumpus(x) & Lorpus(y)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "(all x.((Impossible(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Improved(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))"]}
{"id": "prontoqa_train_1039", "nl": "Rex is an impus.", "fol": "impus(Rex)", "prediction": ["all x.(Rex(x) -> IsImpossible(x))", "Rex is a impus.", "all x.(Rex(x) -> IsImpossible(x))", "(IsRex(Rex) & IsImpossible(Rex))", "Rex is a impusct.", "all x.(Rex(x) -> Is(x,y))", "(Impossible(Rex))", "All x.(Rex(x) -> Impermant(x))", "Rex is imposed.", "all x.(Rex(x) -> Impossible(x))", "(Impossible(Rex))", "All x.(Rex(x) -> IsImpossible(x))", "all x.(Rex(x) -> Imperium(x))", "all x.(Rex(x) -> IsImpossible(x))", "All x.(Rex(x) -> Impossible(x))", "All x.(Rex(x) -> Isolated(x))"]}
{"id": "prontoqa_train_1040", "nl": "Rex is a dumpus.", "fol": "dumpus(Rex)", "prediction": ["all x.(Rex(x) -> Dumpus(x))", "Rex is a Dumpus.", "(Dumpus(Rex))", "Rex is a Dumpus.", "(Dumus(Rex) & HasDumus(Rex))", "all x.(Rex(x) -> Dumpus(x))", "Rex is a Dumpus(x)", "Rex.", "All x.(Rex(x) -> Dumpus(x))", "(Dumpus(Rex))", "Rex is a dumpus.", "(Dumus(rex) & HasDums(rex))", "Rex.", "all x.(Rex(x) -> Dumpus(x))", "All x.(Rex(x) -> Dumpus(x))", "all x.(Rex(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_1041", "nl": "Rex is a lorpus.", "fol": "lorpus(Rex)", "prediction": ["all x.(Rex(x) -> Lorpus(x))", "Rex is a lorpus.", "all x.(Rex(x) -> Lorpus(x))", "(Lorpus(Rex) & LivesIn(Rex))", "Rex is a lorpus.", "Rex (Lorpus)", "(Lorpus(rex) & LivesIn(rex,rex))", "Rex is a lorpus.", "all x.(Rex(x) -> Lorpus(x))", "(Lorpus(rex) & HasLorph(rex))", "Rex is a lorpus.", "all x.(Rex(x) -> Llorpus(x))", "All x.(Rex(x) -> Lorpus(x))", "all x.(Rex(x) -> Llorpus(x))", "All x.(Rex(x) -> Lorpus(x))", "All x.(Rex(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_1042", "nl": "Rex is a numpus.", "fol": "numpus(Rex)", "prediction": ["all x.(Rex(x) -> Numpus(x))", "Rex is Numpus(x)", "all x.(Rex(x) -> Numpus(x))", "(Numpus(Rex) & Numpus(Rex))", "Rex is Numpus(x)", "Rex.(Numpus(x) -> HasRex(x))", "all x.(Rex(x) -> Numpus(x))", "Rex (numpus)", "Rex is Numpus.", "(Numpus(rex) & HasNumbus(rex))", "(Numpus(rex) & Numpus(rex))", "All x.(Rex(x) -> Numpus(x))", "all x.(Rex(x) -> Numpus(x))", "All x.(Rex(x) -> Numpus(x))", "all x.(Rex(x) -> Numpus(x))", "All x.(Rex(x) -> Numpus(x))"]}
{"id": "prontoqa_train_1043", "nl": "Everything that is a zumpus, a dumpus, and a tumpus is a jompus and a yumpus and a gorpus.", "fol": "all x. ((zumpus(x) & dumpus(x) & tumpus(x)) -> (jompus(x) & yumpus(x) & gorpus(x)))", "prediction": ["all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x y.((Tompus(x) & Dumpus(x) & Tumpus(y)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Zumpus(x) & Dumpus(x) & Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x y z.((Tompus(x) & Dumpus(y) & Tumpus(z) & Has(x,y) & Has(x,z)) -> (Jompus(x) & Yampus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yampus(x) & Gorpus(x)))", "all x y.((Tompus(x) & Dumpus(x) & Tumpus(y)) -> (Jompus(x) & Yompus(x) & Gorpus(x)))", "(all x.((Zumpus(x) | Dumpus(x)) & Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yompus(x) & Gorpus(x)))", "all x.((Zumpus(x) & Dumpus(x) & Tumpus(x)) -> (Jompus(x) & Yampus(x) & Gorpus(x)))", "(all x.((Tompus(x) | Dumpus(x) | Tumpus(x))) -> (Jompus(x) | Yompus(x) | Gorpus(x)))", "(all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Zumpus(x) & Dumpus(x) & Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jimpus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yampus(x) & Gorpus(x)))", "all x.((Zumpus(x) & Dumpus(x) & Tumpus(x)) -> (Jompus(x) & Yompus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1044", "nl": "Wren is a zumpus.", "fol": "zumpus(Wren)", "prediction": ["all x.(Wren(x) -> Zumpus(x))", "(Zombie(Wren) & -Zombie(Wren))", "all x.(Wren(x) -> Zumpus(x))", "all x y.((Wren(x) & Zumpus(y)) -> Has(x,y))", "all x.(Wren(x) -> Zumpus(x))", "(Tompus(wren) & HasTompus(wren,x))", "all x.(Wren(x) -> Zumpus(x))", "(Zwern)", "(Tompus(wren) & Has(wren,w))", "all x.(Wren(x) -> Zumpus(x))", "(Zumpus)", "All x.(Wren(x) -> Zumpus(x))", "All x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "All x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_1045", "nl": "Wren is a yumpus.", "fol": "yumpus(Wren)", "prediction": ["all x.(Wren(x) -> Yumpus(x))", "all x.(Wren(x) -> Yampus(x))", "(Yumpus(Wren) & HasYump(Wren,Y))", "all x.(Wren(x) -> Yumpus(x))", "(Yumpus(wren) & HasYump(wren,y))", "all x.(Wren(x) -> Yumpus(x))", "all x y.(Yumpus(x) -> Wren(x))", "(Yumpus(wren) & BornIn(wren,y))", "all x.(Wren(x) -> Yampus(x))", "(Yumpus)", "All x.(Wren(x) -> Yumpus(x))", "(Yumpus)", "All x.(Wren(x) -> Yumpus(x))", "all x.(Wren(x) -> Yumpa(x))", "All x.(Wren(x) -> Yampus(x))", "all x.(Wren(x) -> Yampus(x))"]}
{"id": "prontoqa_train_1046", "nl": "Everything that is a jompus and a tumpus and a dumpus is a lempus, an impus, and a wumpus.", "fol": "all x. ((jompus(x) & tumpus(x) & dumpus(x)) -> (lempus(x) & impus(x) & wumpus(x)))", "prediction": ["all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Imperempt(x) & Wumpus(x)))", "all x y z.((Jompus(x) & Tumpus(y) & Dumpus(z) & Is(x,y) & Is(x,z)) -> (Lempus(x) | Imperator(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Imperator(x) | Wumpus(x)))", "(all x.((Jompus(x) & -Tumpus(x) & -Dumpus(x)) -> (Lempus(x) & Imperempt(x) & Wumpus(x)))", "all x y.((Jompus(x) & Tumpus(y) & Dumpus(x)) -> (Lempus(x) | Imperator(x) | Wumpus(x)))", "(all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Imperempt(x) & Wumpus(x)))", "all x.((Jimpus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Impossible(x) & Wumpus(x)))", "all x y.((Jompus(x) & Tumpus(y) & Dumpus(y)) -> (Lempus(x) & Imperator(x) & Wumpus(x)))", "all x y z.((Jompus(x) & Tumpus(y) & Dumpus(z) & Is(x,y)) -> (Lempus(x) | Imperator(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Imperator(x) & Wumpus(x)))", "all x.((Jompus(x) | Tumpus(x) | Dumpus(x)) -> (Lempus(x) & Imperempt(x) & Wumpus(x)))", "all x.((Jimpus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Imperator(x) | Wumpus(x)))", "(all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Imperator(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Imperempt(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Impossible(x) & Wumpus(x)))", "all x.(Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Impossible(x) & Humpus(x)))"]}
{"id": "prontoqa_train_1047", "nl": "Alex is a jompus.", "fol": "jompus(Alex)", "prediction": ["all x.(Alex(x) -> Jompus(x))", "Alex is a jompus.", "all x.(Alex(x) -> Jompus(x))", "Alex is a Jompus.", "Alex is jompus.", "(Jompus(Alex) & Has(Alex))", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "Alex is Jompus.", "(Jimpus(Alex) & Has(Alex))", "Alex is a jompus.", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "All x.(Alex(x) -> Jompus(x))", "All x.(Alex(x) -> Jompus(x))"]}
{"id": "prontoqa_train_1048", "nl": "Alex is a lempus.", "fol": "lempus(Alex)", "prediction": ["all x.(Alex(x) -> Lempus(x))", "Alex is a lempus.", "all x.(Alex(x) -> Lempus(x))", "Alex is a lempus.", "Alex is Lempus.", "all x.(Alex(x) -> Lempus(x))", "Alex is Lempus(Alex)", "(Lempus(Alex) & HasLempus(Alex))", "Alex is a lempus.", "all x.(Alex(x) -> Lempus(x))", "Alex is a Lempus.", "all x.(Alex(x) -> Lempus(x))", "all x.(Alex(x) -> Lempus(x))", "All x.(Alex(x) -> Lempus(x))", "All x.(Alex(x) -> Lempus(x))", "all x.(Alex(x) -> Lempus(x))"]}
{"id": "prontoqa_train_1049", "nl": "Everything that is a brimpus or a tumpus or an impus is a vumpus and a yumpus and a dumpus.", "fol": "all x. ((brimpus(x) | tumpus(x) | impus(x)) -> (vumpus(x) & yumpus(x) & dumpus(x)))", "prediction": ["all x.((Brimpus(x) | Tumpus(x) | Imperator(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Impermissible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | IsImprovement(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.(((Brimpus(x) | Tumpus(x) | Imperator(x))) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x y.((Brimpus(x) | Tumpus(x) | Imperator(x)) -> (Vumpus(y) & Yumpus(y) & Dumpus(y)))", "all x.((Brimpus(x) | Tumpus(x) | Impossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Imperative(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x y.((Brimpus(x) | Tumpus(x) | Imperator(x)) -> (Vumpus(y) & Yumpus(y) & Dumpus(y)))", "(all x.((Brimpus(x) | Tumpus(x) | Impossible(x))) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | IsImpossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.(Brimpus(x) | Tumpus(x) | Impermissible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x y.((Brimpus(x) | Tumpus(x) | Impossible(x)) -> (Vumpus(y) & Yumpus(y) & Dumpus(y)))", "(all x.((Brimpus(x) | Tumpus(x) | Imperator(x))) -> VumpusAndYumpusAndDumpus(x))", "all x.((Brumpus(x) | Tumpus(x) | Impossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Imperator(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brampus(x) | Tumulus(x) | Impossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1050", "nl": "Polly is an impus and Polly is not a numpus and Polly is a yumpus.", "fol": "(impus(Polly) & -numpus(Polly) & yumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Issue(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "all x y z.((Polly(x) & Is(x,y) & Polly(z)) -> (Impossible(x) & -Numpus(z) & Yumpus(z)))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "all x y.((Polly(x) & Polly(y)) -> (Impossible(x) & -Numpus(y) & Yumpus(y)))", "(all x.(Polly(x) -> Is(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x y.(Polly(x) -> Issue(x)) & (Polly(y) -> -Numpus(y))) & (Polly(y) -> Yumpus(y)))", "all x y z.((Polly(x) & Impossible(x) & Polly(y) & -Numpus(y)) -> Yumpus(z))", "all x y.((Polly(x) & Is(x,y)) -> (Impossible(x) & -Numpus(y) & Yampus(x)))", "all x y z.((Polly(x) & Is(x,y) & Polly(z)) -> (Is(x,z) & -IsNumpus(z) & -IsYumpus(z)))", "(all x.(Polly(x) -> Issue(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "all x.(Polly(x) -> (Impossible(x) & -Numpus(x) & Yumpus(x)))", "exists x.(Polly(x) & Impossible(x) & -Numpus(x) & Yumpus(x))", "(all x y.(Polly(x) -> Impossible(x)) & (Polly(y) -> -Numpus(y))) & (Polly(y) -> Yumpus(y)))", "(all x y z.(Polly(x) -> Is(x,y)) & (Polly(z) | Polly(z))) & (Nompus(z) | Yumpus(z)))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "all x y.((Polly(x) & Impossible(x) & Polly(y)) -> (-Numpus(y) & Yumpus(y)))"]}
{"id": "prontoqa_train_1051", "nl": "Polly is a jompus or Polly is a rompus or Polly is not a dumpus.", "fol": "(jompus(Polly) | rompus(Polly) | -dumpus(Polly))", "prediction": ["all x.((Polly(x) & (Jompus(x) | Rompus(x) | -Dumpus(x))) -> Polly(x))", "(all x.(Polly(x) -> (Jompus(x) | Rompus(x) | -Dumpus(x))))", "((Polly(Polly) & Jompus(Polly)) | (Polly(Poly) & Rompus(Poly)) | (Poly(Poly) & -Dumpus(Poly))))", "(all x.(Plompus(x) | Rompus(x) | -Dumpus(x)))", "all x y.((Polly(x) & (Jompus(x) | Rompus(x) | -Dumpus(y))) -> Polly(x))", "all x.(Polly(x) -> ((Jompus(x) | Rompus(x)) | -Dumpus(x)))", "(exists x.(Polly(x) & (Jompus(x) | Rompus(x)) | -Dumpus(x)))", "((Polly(Poly) & Jompus(Poly)) | (Poly(Poly) & Rompus(Poly)) | (Poly(Poly) & -Dumpus(Poly))))", "(all x.(Polly(x) -> Jompus(x)) | (Polly(x) -> Rompus(x)) | (Polly(x) -> -Dumpus(x))))", "all x.((Polly(x) & (Jompus(x) | Rompus(x) | -Dumpus(x))) -> Polly(x))", "all x y.((Polly(x) & Jompus(x) & Polly(y)) | (Rompus(y) | -Dumpus(y))))", "all x y.((Polly(x) & Jompus(x)) | (Polly(y) & Rompus(y)) | (Polly(y) & -Dumpus(y))))", "((Polly(poly) & Jompus(poly)) | (Poly(poly) & Rompus(poly)) | (Poly(poly) & -Dumpus(poly))))", "all x.(Polly(x) -> ((Jompus(x) | Rompus(x) | -Dumpus(x))))", "exists x.(Ploy(x) & ((Jompus(x) | Rompus(x)) | -Dumpus(x))))", "all x.((Polly(x) & (Jompus(x) | Rompus(x) | -Dumpus(x))) -> Polly(x))"]}
{"id": "prontoqa_train_1052", "nl": "Sam is not an impus, Sam is a brimpus, and Sam is a shumpus.", "fol": "(-impus(Sam) & brimpus(Sam) & shumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Impossible(x)) & (Brimpus(x) | Humpus(x))))", "all x y z.((Sam(x) & Brimpus(y) & Humpus(z)) -> (-Impossible(x) & Brimpus(y) & Humpus(z)))", "(all x.(Sam(x) -> -Impossible(x)) & all y.(Brimpus(y) -> Brimpus(y)) & all z.(Shumpus(z) -> -Impossible(z))))", "(all x y z.((Sam(x) & IsNot(x,Is(x)) -> -Impossible(x)) & ((Sam(y) & Brimpus(y)) -> Shumpus(z)))", "(all x y z.((Sam(x) & Impossible(y)) -> -Sam(x)) & ((Sam(z) & Brimpus(z)) -> Shumpus(z)))", "all x.(Sam(x) -> (-Impossible(x) & Brimpus(x) & Humpus(x)))", "(all x.(Sam(x) -> -Impossible(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> Humpus(x)))", "all x y z.((Sam(x) & Brimpus(y) & Humpus(z)) -> (-Issue(x) & -Issue(y) & -Issue(z) & -Issue(y) & -Issue(z)))", "all x y z.((Sam(x) & Brimpus(y) & Humpus(z)) -> (-Impossible(x) & Brimpus(y) & Shumpus(z)))", "(all x.(Sam(x) -> -Impossible(x)) & all y.(Brimpus(y) -> -Impossible(y))) & all z.(Shumpus(z) -> (Sam(z) & -Impossible(z))))", "(all x.(Sam(x) -> -Issuel(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> Humpus(x)))", "exists x.(Sam(x) & -Impossible(x) & Brimpus(x) & Humpus(x))", "all x y z.((Sam(x) & Impossible(y) & Brimpus(z)) -> (-Impossible(x) & Brimpus(y) & Humpus(z)))", "all x y z.((Sam(x) & Brimpus(y) & Humpus(z)) -> (-Impossible(x) | (Brimpus(y) | Humpus(z)))))", "all x y z.((Sam(x) & Brimpus(y) & Humpus(z)) -> (-Is(x,y) & -Is(x,z)))", "(all x.(Sam(x) -> -Impossible(x)) & (Brimpus(x) | Humpus(x)))"]}
{"id": "prontoqa_train_1053", "nl": "Sam is not a tumpus or Sam is a wumpus or Sam is a grimpus.", "fol": "(-tumpus(Sam) | wumpus(Sam) | grimpus(Sam))", "prediction": ["all x.((Sam(x) & -Tumpus(x)) | (Wumpus(x) | Grimpus(x))))", "all x.(Sam(x) -> (-Tumpus(x) | (Wumpus(x) | Grimpus(x))))", "(exists x.(Sam(x) & -Tumpus(x)) | exists y.(Sam(y) & Wumpus(y))) | exists z.(Sam(z) & Grimpus(z))))", "all x y.((Sam(x) & -Tumpus(x)) | (Wumpus(y) | Grimpus(y))))", "(all x.(Sam(x) -> -Tumpus(x)) | (Sam(x) -> Wumpus(x)) | (Sam(x) -> Grimpus(x))))", "((Sam(sam) & -Tumpus(sam)) | (Sam(sam) & Wumpus(sam)) | (Sam(sam) & Grimpus(sam))))", "(all x.(Sam(x) -> (-Tumpus(x) | Wumpus(x) | Grimpus(x))))", "(-Tumpus(Sam) | Wumpus(Sam) | Grimpus(Sam)))", "all x y z.((Sam(x) & Tumpus(y) & Wumpus(z)) -> (-Tumpus(x) | Grimpus(x)))", "all x.(Sam(x) -> (-Tumpus(x) | (Wumpus(x) | Grimpus(x))))", "all x y.((Sam(x) & -Tumpus(x) & Sam(y)) | (Wumpus(y) | Grimpus(y))))", "all x.(Sam(x) -> (-Tumpus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Sam(x) -> (-Tumpus(x) | (Wumpus(x) | Grimpus(x))))", "exists x.(Sam(x) & -Tumpus(x) & (Wumpus(x) | Grimpus(x)))", "(all x.(Sam(x) -> (-Tumpus(x) | Wumpus(x) | Grimpus(x))))", "exists x.(Sam(x) & -(Tumpus(x) | Wumpus(x) | Gruppus(x)))"]}
{"id": "prontoqa_train_1054", "nl": "Everything that is a lorpus, a jompus, or a yumpus is a zumpus.", "fol": "all x. ((lorpus(x) | jompus(x) | yumpus(x)) -> zumpus(x))", "prediction": ["all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.(((Lorpus(x) | Jompus(x) | Yumpus(x))) -> Zumpus(x))", "all x y.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(y))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x y.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(y))", "all x.(((Lorpus(x) | Jompus(x) | Yumpus(x))) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "(all x.((Lorpus(x) | Jompus(x) | Yumpus(x))) -> Zumpus(x))", "all x.((Menu(x) & (Lorpus(x) | Jompus(x) | Yumpus(x))) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Larpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))"]}
{"id": "prontoqa_train_1055", "nl": "Sally is a dumpus and a yumpus and a grimpus.", "fol": "(dumpus(Sally) & yumpus(Sally) & grimpus(Sally))", "prediction": ["all x.(Sally(x) -> (Dumpus(x) & Yumpus(x) & Grimpus(x)))", "(Dumpus(Sally) & Yumpus(Sally) & Grimpus(Sally))", "Sally is a dumpus and yumpus and grimpus.", "(Dumps(Sally) & Yumpus(Sally) & Grimpus(Sally))", "(all x.(Sally(x) -> Dumpus(x)) & (Yumpus(x) | Grimpus(x))))", "(Dumpus(Sally) & Yumpus(Sally) & Grimpus(Sally))", "all x.(Sally(x) -> (Dumpus(x) & Yumpus(x) & Grimpus(x)))", "Sally is a dumpus and yumpus and grimpus.", "all x.(Sally(x) -> (Dumps(x) & Yumpus(x) & Grimpus(x)))", "(Dumpus(Sally) & Yampus(Sally) & Grimpus(Sally))", "(Dumpus,Yumpus,Grimpus)", "all x.(Sally(x) -> (Dumpus(x) & Yampus(x) & Grimpus(x)))", "(Dumpus(Sally) & Yumpus(Sally) & Grimpus(Sally))", "exists x.(Sally(x) & Dumpus(x) & Yumpus(x) & Grimpus(x))", "all x.(Sally(x) -> (Dumpus(x) & Yumpus(x) & Grimpus(x)))", "all x.(Sally(x) -> (Dumpus(x) & Yampus(x) & Gruppus(x)))"]}
{"id": "prontoqa_train_1056", "nl": "Sally is a zumpus.", "fol": "zumpus(Sally)", "prediction": ["all x.(Sally(x) -> Zumpus(x))", "Sally is zumpus.", "Sally is a zumpus.", "all x.(Sally(x) -> Zumpus(x))", "(Zumpus(Sally) & Has(Sally,Sally))", "Sally is zumpus.", "Sally is a zumpus.", "(Zumpus(Sally) & Has(Sally) & Has(Sally))", "all x.(Zumpus(x) -> Sally(x))", "All x.(Sally(x) -> Zumpus(x))", "Sally ist zumpus(Sally)", "Sally is zumpus.", "Sally ist ein Zumpus.", "all x.(Sally(x) -> Zumpus(x))", "Sally is a zumpus.", "All x.(Sally(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_1057", "nl": "Alex is a lempus and a yumpus and a lorpus.", "fol": "(lempus(Alex) & yumpus(Alex) & lorpus(Alex))", "prediction": ["all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Yumpus(z)) -> (Lorpus(x) & Lempus(y) & Yumpus(z)))", "(all x.(Alex(x) -> Lempus(x)) & (Yumpus(x) & Lorpus(x)))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Yumpus(y) & all z.(Lorpus(z) & Y.(Yumpus(z) & Y.(Yumpus(z)))))", "all x y.((Alex(x) & Lempus(x) & Yumpus(y) & Lorpus(y)) -> (Lempus(x) & Yumpus(y) & Lorpus(y)))", "(Lempus(Alex) & Yumpus(Alex) & Lorpus(Alex))", "all x y z.((Alex(x) & Lempus(y) & Yumpus(z)) -> (Lempus(x) & Yumpus(z) & Lorpus(z)))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "all x y.((Alex(x) & Lempus(y)) -> (Yumpus(x) & Lorpus(x)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Yumpus(y) & all z.(Lorpus(z)) -> Lempus(x)))", "(all x.(Alex(x) -> Lempus(x)) & (Yumpus(x) & Lorpus(x)))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "exists x.(Alex(x) & Lempus(x) & Yumpus(x) & Lorpus(x))", "all x.(Alex(x) -> (Lempus(x) | Yumpus(x) | Lorpus(x)))", "(all x.(Alex(x) -> Lempus(x)) & (Yumpus(x) | Lorpus(x))))"]}
{"id": "prontoqa_train_1058", "nl": "Alex is a yumpus, a numpus, or an impus.", "fol": "(yumpus(Alex) | numpus(Alex) | impus(Alex))", "prediction": ["all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperator(x)))", "(Yumpus(Alex) | Numpus(Alex) | Imperator(Alex))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperator(x)))", "(yumpus) | numpus(x) | impus(x))", "(Yumpus,yumpus,numpus,isolator)", "all x y.((Alex(x) & (Yumpus(x) | Numpus(x) | Imperator(x))) -> Alex(x))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperator(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impossible(x)))", "(Yumpus,Yumpus(Alex) | Numpus,Alex,Issue))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Issue(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperator(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impermissible(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impossible(x)))", "all x.(Alex(x) -> (Yumpus(x) | Noxus(x) | Issue(x)))", "exists x.(Alex(x) & (yumpus(y) | numpus(y) | impus(y)))", "exists x.(Alex(x) & (Yumpus(x) | Numpus(x) | Impossible(x)))"]}
{"id": "prontoqa_train_1059", "nl": "Everything that is a lorpus, a grimpus, or a yumpus is a lempus and a rompus and a wumpus.", "fol": "all x. ((lorpus(x) | grimpus(x) | yumpus(x)) -> (lempus(x) & rompus(x) & wumpus(x)))", "prediction": ["all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x y.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(y) & Rompus(y) & Wumpus(y)))", "(all x.((Lorpus(x) | Grimpus(x) | Yumpus(x))) -> Lempus(x)) & all y.((Rompus(y) & wumpus(y)) -> Lempus(y)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x y.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(y) & Wumpus(y)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.(Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "(all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> LempusAndRompusAndWumpus(x)))", "(all x.((Lorpus(x) | Grimpus(x) | Yumpus(x))) -> (Lempus(x) | Rompus(x) | Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x y.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(y) & Rompus(y) & Wumpus(y)))", "all x.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Lempus(x) | Rompus(x) | Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Limpus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Limpus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Lempus(x) | Rompus(x) | Wumpus(x)))"]}
{"id": "prontoqa_train_1060", "nl": "Polly is a grimpus.", "fol": "grimpus(Polly)", "prediction": ["all x.(Polly(x) -> Grimpus(x))", "Polly is a Grimpus.", "(Grimpus(Polly))", "all x.(Polly(x) -> Grimpus(x))", "Polly is a Grimpus.", "all x.(Polly(x) -> Grimpus(x))", "(Gruppus(Polly) & Grimpus(Polly))", "(Grimpus(Polly))", "Polly is a Grimpus.", "(Grimpus(Polly) & Grimpus(Polly))", "all x.(Polly(x) -> Grimpus(x))", "Polly is a Grumpus.", "all x.(Polly(x) -> Grimpus(x))", "All x.(Polly(x) -> Grimpus(x))", "Polly is a Grimpus.", "(Grimpus)"]}
{"id": "prontoqa_train_1061", "nl": "Dumpuses are lorpuses.", "fol": "all x. (dumpus(x) -> lorpus(x))", "prediction": ["all x.(Dumpuse(x) -> Lorpus(x))", "all x.(Dumpuse(x) -> Lorpuse(x))", "(Lorpuse(dumpuse) & -Lorpuse(dumpuse))", "all x y.((Dumpuse(x) & Lorpus(y)) -> Is(x,y))", "all x.(Dumpuse(x) -> Lorpus(x))", "(Lumpuse(dumpuse) & Thrombosis(dumpuse))", "all x.(Dumpuse(x) -> Loomis(x))", "all x y.((Dumpuse(x) & Lorpus(y)) -> Loomis(x))", "(Lorpuse(dumpuse) -> LocatedIn(dumpuse,lorpuse))", "all x.(Dumpuse(x) -> Lorpuse(x))", "all x.(Dumpus(x) -> Loomis(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpuse(x))", "all x.(Dumpuse(x) -> Loomise(x))", "all x.(Dumpus(x) -> Lompus(x))", "All x.(Dumpus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_1062", "nl": "Rex is a shumpus and a vumpus and a dumpus.", "fol": "(shumpus(Rex) & vumpus(Rex) & dumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Humpus(x)) & (Vumpus(x) & Dumpus(x)))", "all x.(Rex(x) -> (Shumpus(x) & Vumpus(x) & Dumpus(x)))", "all x y.((Rex(x) & Humpus(y)) -> (Shumpus(x) & Vumpus(x) & Dumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & all y.(Vumpus(y) & Dumpus(y)))", "all x.(Rex(x) -> (Shumpus(x) | Vumpus(x) | Dumpus(x)))", "(Shumpus(rex) & Vumpus(rex) & Dumpus(rex))", "(all x.(Rex(x) -> Shumpus(x)) & all y.(Vumpus(y) & Dumpus(y)))", "all x.(Rex(x) -> (Shumpus(x) & Vumpus(x) & Dumpus(x)))", "all x y.((Rex(x) & Humpus(y)) -> (Vumpus(x) & Dumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & (Vumpus(x) -> Dumpus(x)))", "exists x.(Rex(x) & Humpus(x) & Vumpus(x) & Dumpus(x))", "all x.(Rex(x) -> (Shumpus(x) | Vumpus(x) | Dumpus(x)))", "(Shumpus(rex) & Vumpus(rex) & Dumpus(rex))", "(all x.(Rex(x) -> Humpus(x)) & all y.(Vumpus(y) -> Dumpus(y)))", "all x.(Rex(x) -> (Shumpus(x) | Vampus(x) | Dumpus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (Vumpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1063", "nl": "Rex is a yumpus, a tumpus, or a lorpus.", "fol": "(yumpus(Rex) | tumpus(Rex) | lorpus(Rex))", "prediction": ["all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "(Yumpus(rex) | Tumpus(rex) | Lorpus(rex)))", "(yumpus) | tumpus(y) | lorpus(y))", "(Yumpus,Yumpus(y) | Tumpus(y) | Lorpus(y))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x y.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "(Yumpus,yumpus,tumpus,lorpus)", "(yumpus) | tumpus(x) | lorpus(x))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "exists x.(Rex(x) & (Yumpus(x) | Tumpus(x) | Lordpus(x)))", "exists x.(Rex(x) & (Yumpus(x) | Tumulus(x) | Lorpus(x)))"]}
{"id": "prontoqa_train_1064", "nl": "Everything that is a wumpus or a grimpus or a brimpus is a vumpus, an impus, and a sterpus.", "fol": "all x. ((wumpus(x) | grimpus(x) | brimpus(x)) -> (vumpus(x) & impus(x) & sterpus(x)))", "prediction": ["all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impossible(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Imperempt(x) & Sterpus(x)))", "all x.(((Wumpus(x) | Grimpus(x) | Brimpus(x))) -> (Vumpus(x) & Imperempt(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impossible(x) & Sterpus(x)))", "all x y.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(y) & Impossible(y) & Sterpus(y)))", "all x.(((Wumpus(x) | Grimpus(x) | Brimpus(x))) -> (Vumpus(x) & Impossible(x) & Sterpus(x)))", "(all x.((Wumpus(x) | Grimpus(x) | Brimpus(x))) -> (Vumpus(x) & Issue(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Issue(x) & Sterpus(x)))", "all x.(Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Imperator(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Imperempt(x) & Sterpus(x)))", "all x y.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(y) & Impossible(y) & Sterpus(y)))", "(all x.((Wumpus(x) | Grimpus(x) | Brimpus(x))) -> (Vumpus(x) & Imperempt(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impossible(x) & Sterpus(x)))", "(all x.((Wumpus(x) | Grimpus(x) | Brimpus(x))) -> (Umpus(x) & Impossible(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Umpus(x) & Impossible(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Issue(x) & Sterpus(x)))"]}
{"id": "prontoqa_train_1065", "nl": "Rex is a wumpus.", "fol": "wumpus(Rex)", "prediction": ["all x.(Rex(x) -> Wumpus(x))", "Rex is a wumpus.", "(Wumpus(Rex))", "Rex is a wumpus.", "all x.(Rex(x) -> Wumpus(x))", "Rex is a Wumpus.", "all x.(Wumpus(x) -> Rex(x))", "(Wumpus(Rex) & HasWumpus(Rex))", "Rex (Wumpus)", "Rex is a wumpus.", "All x.(Rex(x) -> Wumpus(x))", "all x.(Wumpus(x) -> Rex(x))", "(Wumpus(Rex))", "Rex is a Wumpus.", "(Wumpus(rex) & HasWumpus(rex))", "All x.(Rex(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_1066", "nl": "Rex is a vumpus.", "fol": "vumpus(Rex)", "prediction": ["all x.(Rex(x) -> Vumpus(x))", "Rex is a Vumpus.", "(Vumpus(Rex))", "(Vumpus(Rex) & -Vumpus(Rex))", "Rex.(Vumpus(x) -> Is(x,y))", "Rex is a Vumpus.", "all x.(Rex(x) -> Vumpus(x))", "Rex.(Vumpus(x) -> HasVumpus(x))", "(Vumpus(Rex) & HasVumpus(Rex))", "Rex is a Vampus.", "Rex is a vumpus.", "all x.(Rex(x) -> Vumpus(x))", "All x.(Rex(x) -> Vampire(x))", "Rex is a Vumpus.", "all x.(Rex(x) -> Vumpus(x))", "All x.(Rex(x) -> Vampus(x))"]}
{"id": "prontoqa_train_1067", "nl": "Grimpuses are yumpuses, rompuses, and lorpuses.", "fol": "all x. (grimpus(x) -> (yumpus(x) & rompus(x) & lorpus(x)))", "prediction": ["all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "(all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "(yumpuses(x) | rompuses(x) | lorpuses(x)))", "(all x.(Grimpuse(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x y z.((Grimpuse(x) & Yumpus(y) & Rompus(z) & Lorpus(z)) -> (Yumpus(y) | Rompus(z) | Lorpus(z)))", "(all x.(Grimpus(x) -> Yumpes(x)) & all y.(Rompus(y) -> Lorpus(y)))", "all x y z.((Grimpus(x) & Yumpus(y) & Rompus(z) & Lorpus(z)) -> (Yumpus(y) | Rompus(z) | Lorpus(z)))", "(Yumpuses(Grimpus) | Rompuses(Grimpus) | Lorpuses(Grimpus))", "(all x.(Grimpuse(x) -> (Yumpuse(x) | Rompuse(x) | Lorpuse(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpuse(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpus(x) -> (Yumpuses(x) | Rompuses(x) | Lorpuses(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpuse(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))"]}
{"id": "prontoqa_train_1068", "nl": "Numpuses are not yumpuses.", "fol": "all x. (numpus(x) -> -yumpus(x))", "prediction": ["all x.(Numpus(x) -> -Yumpus(x))", "(all x.(Numpus(x) -> -Yumpus(x)))", "all x.(Numpus(x) -> -Yumpus(x))", "-Yumpus(n)", "(all x.(Numpus(x) -> -Yumpus(x)))", "all x.(Numpus(x) -> -Yumpus(x))", "-Yumpus(n)", "-Yumpus(nupuse)", "all x.(Numpuse(x) -> -Yumpus(x))", "(yumpus)", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpuse(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))"]}
{"id": "prontoqa_train_1069", "nl": "Alex is a numpus and a rompus and a sterpus.", "fol": "(numpus(Alex) & rompus(Alex) & sterpus(Alex))", "prediction": ["all x.(Alex(x) -> (Numpus(x) & Rompus(x) & Sterpus(x)))", "(all x.(Alex(x) -> Numpus(x)) & all y.(Rompus(y) & All z.(Sterepus(z))) -> Sterpus(z)))", "(numpus(Alex) | Rompus(Alex) | Sterpus(Alex)))", "all x y.((Alex(x) & Numpus(x) & Rompus(y) & Sterpus(x)) -> (Numpus(x) & Sterpus(y)))", "(Numpus(Alex) & Rompus(Alex) & Sterpus(Alex))", "all x y z.((Alex(x) & Numpus(y) & Rompus(z)) -> (Numpus(x) & Sterpus(x)))", "all x.(Alex(x) -> (Numpus(x) & Rompus(x) & Sterpus(x)))", "(all x.(Alex(x) -> Numpus(x)) & (Rompus(x) & Sterpus(x)))", "(numpus(Alex) & rompus(Alex) & sterpus(Alex))", "all x.(Alex(x) -> (numpus(x) & rompus(x) & sterpus(x)))", "(Numpus(Alex) | Rompus(Alex) | Sterpus(Alex))", "all x y.((Alex(x) & Numpus(x) & Rompus(y)) -> Sterpus(x))", "(all x.(Alex(x) -> Numpus(x)) & all y.(Rompus(y) & all z.(Sterpus(z) & -Numpus(y))))", "all x.(Alex(x) -> (Numpus(x) & Rompus(x) & Sterpus(x)))", "all x.(Alex(x) -> (Numpus(x) & Rompus(x) & Steroid(x)))", "all x.(Alex(x) -> (numpus(x) & rompus(x) & sterpus(x)))"]}
{"id": "prontoqa_train_1070", "nl": "Everything that is a dumpus or a wumpus or a numpus is a jompus, a tumpus, and a zumpus.", "fol": "all x. ((dumpus(x) | wumpus(x) | numpus(x)) -> (jompus(x) & tumpus(x) & zumpus(x)))", "prediction": ["all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumps(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x y.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(y) | Tumpus(y) | Zumpus(y)))", "(all x.((Dumpus(x) | Wumpus(x) | Numpus(x))) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x y.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(y) & Tumpus(y) & Zumpus(y)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumps(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jimpus(x) & Tumpus(x) & Zumpus(x)))", "(all x.((Dumpus(x) | Wumpus(x) | Numpus(x))) -> (Jimpus(x) | Tumpus(x) | Zumpus(x)))", "all x.(DumpusOrWumpusOrNumbus(x) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "(all x.((Dumpsus(x) | Wumpus(x) | Numpus(x))) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jumpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jimpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) & Tumpus(x) & Zumpus(x)))"]}
{"id": "prontoqa_train_1071", "nl": "Alex is a zumpus.", "fol": "zumpus(Alex)", "prediction": ["all x.(Alex(x) -> Zumpus(x))", "Alex is zumpus.", "Alex is a zumpus.", "all x.(Alex(x) -> Zumpus(x))", "Alex is zumpus.", "all x.(Alex(x) -> Zumpus(x))", "Alex is a zumpus.", "all x.(Alex(x) -> Zumpus(x))", "(Tompus(Alex) & HasTom(Alex))", "all x.(Alex(x) -> Zumpus(x))", "Alex ist zumpus.", "all x.(Alex(x) -> Zumpus(x))", "Alex is Zumpus.", "(Zumpus(Alex))", "All x.(Alex(x) -> Zumpus(x))", "All x.(Alex(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_1072", "nl": "Everything that is a grimpus, a zumpus, and a numpus is a wumpus.", "fol": "all x. ((grimpus(x) & zumpus(x) & numpus(x)) -> wumpus(x))", "prediction": ["all x.((Smokey(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Fragpus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x y z.((Smooch(x) & Zumpus(y) & Numpus(z) & Grimpus(x) & Zumpus(y) & Numpus(z)) -> Wumpus(x))", "all x.((Gruppus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Crupid(x) & Zumpus(x) & Numpus(x)) -> Wumpus(x))", "all x y.((Smooch(x) & Zumpus(y) & Numpus(x)) -> Wumpus(x))", "all x.((Smoothpus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Grimpus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Element(x) & Grimpus(x) & Zumpus(x) & Numpus(x)) -> Wumpus(x))", "all x.((Smooch(x) & Zumpus(x) & Numpus(x)) -> Wumpus(x))", "all x.((Fragus(x) & Zumpus(x) & Numpus(x)) -> Wumpus(x))", "all x.((Grampus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Gruppus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "(all x.((Grimpus(x) | Zumpus(x) | Numpus(x))) -> Wumpus(x))", "(all x.((Grimpus(x) | Zumpus(x) | Numpus(x))) -> Wumpus(x))", "(all x.((Grimpus(x) | Zumpus(x) | Numpus(x))) -> Wumpus(x))"]}
{"id": "prontoqa_train_1073", "nl": "Stella is a grimpus.", "fol": "grimpus(Stella)", "prediction": ["Stella is a Grimpus.", "all x.(Stella(x) -> Grimpus(x))", "(Grimpus(Stella))", "Stella is a Grimpus.", "(Grimpus(Stella) & Grimpus(Stella))", "(Gruppus(Stella) & Grimpus(Stella))", "all x.(Stella(x) -> Grimpus(x))", "(Stella,Grimpus)", "Stella is a Grimpus.", "Stella is a Gruppus.", "all x.(Stella(x) -> Grimpus(x))", "(Grimpus(Stella))", "Stella is Grimpus.", "all x.(Stella(x) -> Gruppus(x))", "Stella is a Grimpus.", "Stella is a Grumpus."]}
{"id": "prontoqa_train_1074", "nl": "Stella is a wumpus or a jompus or a rompus.", "fol": "(wumpus(Stella) | jompus(Stella) | rompus(Stella))", "prediction": ["all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "(Wumpus(Stella) | Jompus(Stella) | Rompus(Stella)))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x y.((Stella(x) & Wumpus(y)) | (Jompus(x) | Rompus(x))))", "all x.((Stella(x) & (Wumpus(x) | Jompus(x) | Rompus(x))) -> Wumpus(x))", "(all x.(Stella(x) -> Wumpus(x)) | (Jompus(x) | Rompus(x))))", "(Wumpus(Stella) | Jompus(Stella) | Rompus(Stella)))", "(Wumpus(s) | Jompus(s) | Rompus(s)))", "(Wumpus,Wumpus,Jompus,Rompus)", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "exists x.(Wumpus(x) | Jompus(x) | Rompus(x))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x.(Stella(x) -> ((Wumpus(x) | Jompus(x) | Rompus(x))))", "exists x.(Wumpus(x) | Jompus(x) | Rompus(x))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "exists x.(Wumpus(x) | Jompus(x) | Rompus(x))"]}
{"id": "prontoqa_train_1075", "nl": "Everything that is a brimpus and a lempus and a shumpus is a wumpus, a vumpus, and a grimpus.", "fol": "all x. ((brimpus(x) & lempus(x) & shumpus(x)) -> (wumpus(x) & vumpus(x) & grimpus(x)))", "prediction": ["all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x y z.((Brimpus(x) & Lempus(y) & Humpus(z) & Is(x,y) & Is(x,z)) -> (Wumpus(x) & Is(x,z) & Is(x,z) & Is(x,z) & Is(x,z)))", "all x y.((Brimpus(x) & Lempus(y) & Humpus(y)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "(all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brimpus(x) | Lempus(x) | Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x y.((Brimpus(x) & Lempus(y) & Humpus(y)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brumpus(x) | Lempus(x) | Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "(all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Brumpus(x) | Lempus(x) | Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "(all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x y.((Brimpus(x) & Lempus(y) & Humpus(y)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brampus(x) & Lempus(x) & Shumpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))"]}
{"id": "prontoqa_train_1076", "nl": "Fae is a lempus.", "fol": "lempus(Fae)", "prediction": ["all x.(Fae(x) -> Lempus(x))", "Fae is a lempus.", "all x.(Fae(x) -> Lempus(x))", "(Lempus(Fae) & Lempus(Fae))", "Fae is a lempus.", "all x.(Fae(x) -> Lempus(x))", "(Lempus(fae) & Lempus(fae))", "all x.(Fae(x) -> Lempus(x))", "(Limpus(fae) -> Lempus(fae,fae))", "(Lempus(fee) & Lempus(fee))", "all x.(Fae(x) -> Lempus(x))", "all x.(Fae(x) -> Lempus(x))", "(Lempus)", "all x.(Fae(x) -> Lempus(x))", "exists x.(Fae(x) & Lempus(x))", "All x.(Fae(x) -> Lempus(x))"]}
{"id": "prontoqa_train_1077", "nl": "Each gorpus is not a rompus.", "fol": "all x. (gorpus(x) -> -rompus(x))", "prediction": ["all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x y.((Gorpus(x) & Rompus(y)) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Rompus(x) -> -Rompus(x))", "all x y.((Gorpus(x) & Rompus(y)) -> -Rompus(x))", "(-rompus)", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -rompus(x))", "(-rompus)", "all x.(Gorpus(x) -> -rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "exists x.(Gorpus(x) & -rompus(x))", "exists x.(Gorpus(x) & -rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "exists x.(Gorpus(x) & -Rompus(x))"]}
{"id": "prontoqa_train_1078", "nl": "Every yumpus is a vumpus.", "fol": "all x. (yumpus(x) -> vumpus(x))", "prediction": ["all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "(all x.(Yumpus(x) -> Vumpus(x))", "exists x y.(Yumpus(x) & Vumpus(y))", "all x.(Yumpus(x) -> Vumpus(x))", "exists x y.(Yumpus(x) & Vumpus(y))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vampus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "exists x.(Yumpus(x) & -Vumpus(x))", "all x.(yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vampus(x))"]}
{"id": "prontoqa_train_1079", "nl": "Sam is a gorpus and a wumpus and a brimpus.", "fol": "(gorpus(Sam) & wumpus(Sam) & brimpus(Sam))", "prediction": ["all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "(all x.(Sam(x) -> Gorpus(x)) & (Wumpus(x) & Brimpus(x)))", "all x y z.((Sam(x) & Gorpus(y) & Wumpus(z)) -> (Gorpus(x) & Wumpus(z) & Brimpus(z)))", "all x y.((Sam(x) & Gorpus(x) & Wumpus(y) & Brimpus(x)) -> (Gorpus(x) & Wumpus(y)))", "(all x.(Sam(x) -> Gorpus(x)) & all y.(Wumpus(y) & -Brimpus(y))))", "all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "(Gorpus(Sam) & Wumpus(Sam) & Brimpus(Sam))", "all x y.((Sam(x) & Gorpus(y)) -> (Wumpus(x) & Brimpus(x)))", "(Gorpus,Wumpus,Brimpus)", "all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "(all x.(Sam(x) -> Gorpus(x)) & (Wumpus(x) | Brimpus(x))))", "all x.(Sam(x) -> (Gorpus(x) | Wumpus(x) | Brimpus(x)))", "exists x.(Sam(x) & Gorpus(x) & Wumpus(x) & Brimpus(x))", "all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "(all x.(Sam(x) -> Gorpus(x)) & (Wumpus(x) | Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) | Wumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_1080", "nl": "Everything that is a rompus, a grimpus, and a lorpus is an impus and a sterpus and a dumpus.", "fol": "all x. ((rompus(x) & grimpus(x) & lorpus(x)) -> (impus(x) & sterpus(x) & dumpus(x)))", "prediction": ["all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))", "all x y.((Rompus(x) & Grimpus(x) & Lorpus(y)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x y z.((Rompus(x) & Grimpus(y) & Lorpus(z) & Is(x,y) & Is(x,z)) -> (Impossible(x) & Is(x,z) & Is(x,z) & Is(x,z) & Is(x,z) & Is(x,z) & Is(x,y) & Is(x,y) & Is(x,y) & Is(x,y) & Is(x,y)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "(all x.((Rompus(x) | Grimpus(x) | Lorpus(x))) -> Is(x,Impossible)) & all y.((Impossible(y) & Sterpus(y) & Dumpus(y)) -> Is(y,Dumpus)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))", "all x y.((Rompus(x) & Grimpus(y) & Lorpus(x)) -> (Impossible(x) & Impossible(y) & Sterpus(y) & Dumpus(y)))", "(all x.((Rompus(x) | Grimpus(x) | Lorpus(x))) -> Is(x,Is(x,IsSterpus) & Is(x,Is(x,Is(x,Is(x,Is(x,Is(x))) & all y.((Is(y,Is(y,Is(y)) & all z.((Is(z) & Is(z))) & All(z)))))", "all x.((Rompus(x) & Grimpus(x) & Lorpus(x)) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))", "(all x.((Rompus(x) | Grimpus(x) | Lorpus(x))) -> Impossible(x)) & all y.((Sterpus(y) & Dumpus(y)) -> Impossible(y)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Issue(x) & IsSterpus(x) & IsDumpus(x)))", "all x.((Rompus(x) & Grimpus(x) & Lorpus(x)) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))", "all x.(Rompus(x) & Gruppus(x) & Lorpus(x) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lowerpus(x)) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) | Sterpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_1081", "nl": "Polly is a sterpus.", "fol": "sterpus(Polly)", "prediction": ["all x.(Polly(x) -> Sterpus(x))", "Polly is a Sterpus.", "(Sterpus(Polly) & Sterpus(Poly))", "all x.(Polly(x) -> Sterpus(x))", "all x.(Sterpus(x) -> Polly(x))", "all x.((Polly(x) & Sterpus(x)) -> Sterpus(x))", "Polly is a Sterpus.", "Polly is sterpus.", "Polly is Sterpus.", "(Sterpus(Polly))", "all x.(Sterpus(x) -> Polly(x))", "(Sterpus(Poly) & Sterpus(Poly))", "All x.(Polly(x) -> Sterpus(x))", "(Sterepus(Poly) & Sterpus(Poly))", "All x.(Polly(x) -> Sterpus(x))", "all x.(Sterpus(x) -> Polly(x))"]}
{"id": "prontoqa_train_1082", "nl": "Impuses are sterpuses, yumpuses, and lorpuses.", "fol": "all x. (impus(x) -> (sterpus(x) & yumpus(x) & lorpus(x)))", "prediction": ["all x.(Impuse(x) -> (Sterpuse(x) | Yumpe(x) | Lorpuse(x)))", "all x.(Impus(x) -> (Sterpuse(x) | Yumpe(x) | Lorpuse(x)))", "(all x.(Impuse(x) -> Sterpuse(x)) & all y.(Yumpuse(y) -> Yumpuse(y)) & all z.(Lorpuse(z) -> Yumpuse(z))))", "(all x.(Impuse(x) -> Sterpuse(x)) & all y.(Yumpuse(y) & all z.(Lorpuse(z)) -> Sterpuse(y)))", "all x y z.((Impuse(x) & Sterpuse(y) & Yumpuse(z)) -> (Sterpuse(x) | Yampuse(z) | Lorpuse(z)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "all x.(Impus(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "(all x.(Impuse(x) -> Sterpuse(x)) & all y.(Impuse(y) -> Yumpe(y)) & all z.(Impuse(z) -> Lorpuse(z))))", "(all x.(Impuse(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "all x y z.(Impuse(x) -> (Sterpuse(y) | Yumpuse(y) | Lorpuse(z)))", "(all x.(Impuse(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yumpe(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpuses(x) | Yampuses(x) | Lorpuses(x)))", "exists x.(Impuse(x) & ((Sterus(x) & Yumpus(x)) | (Yumpus(x) & Lorpus(x))))", "all x.(Impue(x) -> (Sterpuse(x) | Yumpe(x) | Lorpuse(x)))"]}
{"id": "prontoqa_train_1083", "nl": "Shumpuses are not sterpuses.", "fol": "all x. (shumpus(x) -> -sterpus(x))", "prediction": ["all x.(Shumpus(x) -> -Sterpuse(x))", "all x.(Shupuse(x) -> -Sterpuse(x))", "(all x.(Shupuse(x) -> -Sterpuse(x)))", "(-Shampoos(shmuckuse))", "-Shumpus(s)", "all x.(Shampoo(x) -> -Sterpuse(x))", "all x.(Shampoos(x) -> -Sterpuse(x))", "-(Shampoose(s) & Sterpuse(s))", "all x.(Shumpus(x) -> -Sterpus(x))", "-Shampoos(sh)", "all x.(Shumpsue(x) -> -Sterpuse(x))", "(all x.(Shampus(x) -> -Sterpuse(x)))", "all x.(Shutus(x) -> -Steruse(x))", "all x.(Shupuse(x) -> -Sterpuse(x))", "all x.(Shumpus(x) -> -Stereose(x))", "all x.(Shuppe(x) -> -Sterpuse(x))"]}
{"id": "prontoqa_train_1084", "nl": "Every wumpus is a sterpus.", "fol": "all x. (wumpus(x) -> sterpus(x))", "prediction": ["all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "(all x.(Wumpus(x) -> Sterpus(x))", "all x y.((Wumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x y.((Wumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterepus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterepus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "exists x.(Wumpus(x) & Sterpus(x))", "exists x.(Wumpus(x) & Sterpus(x))", "exists x.(Wumpus(x) & sterpus(x))"]}
{"id": "prontoqa_train_1085", "nl": "Every tumpus is a wumpus.", "fol": "all x. (tumpus(x) -> wumpus(x))", "prediction": ["all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "(all x.(Tumpus(x) -> Wumpus(x)))", "all x y.((Tumpus(x) & Wumpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Wumpus(x))", "all x y.((Tumpus(x) & Wumpus(y)) -> Is(x,y))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wampus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "exists x.(Tompus(x) & Tumpus(y) & Wumpus(z))", "all x.(Tumpus(x) -> Wampus(x))", "exists x.(Tumpus(x) & Humpus(x))", "exists x.(Tumpus(x) & Wumpus(x))", "all x.(Tumpus(x) -> Wompus(x))"]}
{"id": "prontoqa_train_1086", "nl": "Sam is a shumpus, Sam is not a sterpus, and Sam is an impus.", "fol": "(shumpus(Sam) & -sterpus(Sam) & impus(Sam))", "prediction": ["(all x.(Shumpus(x) -> Sam(x)) & (-Sterpus(x) -> Sam(x)) & (Impossible(x) -> Sam(x)))", "all x y z.((Sam(x) & Shumpus(y) & Sterpus(z)) -> (Sam(x) & -Sterpus(x) & Impossible(x)))", "(all x.(Shumpus(x) -> Sam(x)) & (-Sterpus(x) -> Sam(x)) & (Illegal(x) -> Sam(x)))", "(all x.(Shumpus(x) -> -Sterpus(x)) & all y.(Illegal(y) -> -Shumpus(y)))", "all x.(Shumpus(x) & -Sterpus(x) & Imperator(x))", "all x y z.((Shumpus(x) & Sterpus(y) & Imperator(z)) -> (Shumpus(x) & -Sterpus(y) & Imperator(z)))", "(all x y z.((Shumpus(x) & Sterpus(y) & Impossible(z)) -> (Shumpus(x) & -Sterpus(y)))", "all x y z.((Sam(x) & Sterpus(y) & Imperator(z)) -> (Shumpus(x) & -Sterpus(y) & Imperator(z)))", "all x.(Sam(x) -> (Shumpus(x) | -Sterpus(x) | Imperator(x)))", "(all x.(Sam(x) -> Humpus(x)) & (Sam(x) -> -Sterpus(x)) & (Sam(x) -> Imperator(x)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Sterpus(y) -> Sam(y))) & all z.(Illegal(z) -> Sam(z)))", "all x y z.(Sam(x) -> (Shumpus(x) & -Sterpus(y) & Imperator(z)))", "(all x.(Shumpus(x) -> Shumpus(x)) & (-Sterpus(x) -> Sterpus(x)) & (-Shumpus(x) -> Impermissible(x)))", "(all x y z.((Shumpus(x) & Sam(y) & Sterpus(z)) -> Shumpus(x)) & ((Shumpus(y) & -Sterpus(y)) -> Imperator(y)))", "(all x.(Sam(x) -> Shumpus(x)) & (-Sterpus(x) & (Illegal(x) | Isolator(x))))", "exists x.(Shumpus(x) & -Sterpus(x) & Imperator(x))"]}
{"id": "prontoqa_train_1087", "nl": "Zumpuses are gorpuses, yumpuses, and brimpuses.", "fol": "all x. (zumpus(x) -> (gorpus(x) & yumpus(x) & brimpus(x)))", "prediction": ["all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "(all x.(Zumpus(x) -> Gorpuse(x)) & all y.(Yumpuse(y) -> Brimpuse(y)))", "(all x.(Zumpuse(x) -> (Gorpuse(x) | Yumpuse(x) | Brimpuse(x))))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "all x y z.((Zumpuse(x) & Gorpus(y) & Yumpus(z)) -> (Gorpus(y) | Brimpuse(z)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "(all x.(Zumpus(x) -> Gorpus(x)) & all y.(Yumpus(y) -> Brimpuse(y)))", "all x y z.((Zumpuse(x) & Gorpus(y) & Yumpus(z)) -> (Gorpus(x) | Brimpuse(x)))", "all x.(Zimpuse(x) -> (Gorpuse(x) | Yumpuse(x) | Brimpuse(x)))", "(all x.(Zumpuse(x) -> Gorpus(x)) & all y.(Yumpus(y) -> Brimpuse(y)))", "all x.(Zumpus(x) -> (Gorpuse(x) | Yumpuse(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "(all x.(Zimpuse(x) -> (Gorpuse(x) | Yumpuse(x) | Brimpuse(x)))", "all x.(Zumpuse(x) -> (Gorpuse(x) | Yumpuse(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yampus(x) | Brimpuse(x)))", "all x.(Zimpuse(x) -> (Gorpuse(x) | Yumpuse(x) | Brimpuse(x)))"]}
{"id": "prontoqa_train_1088", "nl": "Wren is a yumpus, an impus, or a brimpus.", "fol": "(yumpus(Wren) | impus(Wren) | brimpus(Wren))", "prediction": ["all x.(Wren(x) -> (Yumpus(x) | Imperative(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "(Yumpus,Impossible(Wren) | Brimpus(Wren))", "all x y.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "(Yumpus,Impossible(w) | Brimpus(w))", "all x.(Wren(x) -> (Yumpus(x) | Imperator(x) | Brimpus(x)))", "(yumpus) | impus(y) | Brimpus(y))", "all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Issue(x) | Brimpus(x)))", "all x y.(Wren(x) -> (Yumpus(x) | Imperative(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Imperative(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Imperative(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "exists x.(Wren(x) & (Yumpus(x) | Issue(x) | Brimpus(x)))", "exists x.(Wren(x) & (yumpus(y) | impus(y) | Brimpus(y)))", "exists x.(Wren(x) & (Yumpus(x) | Imperator(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_1089", "nl": "Every impus is a lempus and a rompus and a gorpus.", "fol": "all x. (impus(x) -> (lempus(x) & rompus(x) & gorpus(x)))", "prediction": ["all x.(Impossible(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Impact(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "(all x.(Impact(x) -> Lempus(x)) & all y.(Rompus(y) & all z.(Gorpus(z)) -> Gorpus(z))))", "all x y.((Issue(x) & Lempus(x) & Rompus(y) & Gorpus(y)) -> Issue(x,y))", "(all x.(Impossible(x) -> Lempus(x)) & all y.(Impossible(y) -> Rompus(y)) & all z.(Impossible(z) -> Gorpus(z))))", "all x y z.((Issue(x) & Lempus(y) & Rompus(z) & Gorpus(z)) -> (Issue(x,y) & Issue(x,z)))", "all x.(Impose(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Issue(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "(all x.(Impact(x) -> Lempus(x)) & (Impact(x) -> Rompus(x)) & Impact(x) & Impact(x)))", "all x.(Impact(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "exists x.(Impact(x) & Lempus(x) & Rompus(x) & Gorpus(x))", "(all x.(Impossible(x) -> Lempus(x)) & all y.(Rompus(y) & all z.(Gorpus(z)) -> Gorpus(z))))", "all x y.((Impos(x) & Lempus(y)) -> (Rompus(x) & Gorpus(x)))", "all x.(Issue(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Impossible(x) -> (Lempus(x) | Rompus(x) | Gorpus(x)))", "exists x.(Implementation(x) & Lempus(x) & Rompus(x) & Gorpus(x))"]}
{"id": "prontoqa_train_1090", "nl": "Sally is a yumpus and Sally is a sterpus and Sally is not a lempus.", "fol": "(yumpus(Sally) & sterpus(Sally) & -lempus(Sally))", "prediction": ["(all x.(Sally(x) -> Yumpus(x)) & (Sally(x) -> Sterpus(x)) & (Sally(x) -> -Lempus(x)))", "all x y z.((Sally(x) & Yumpus(x) & Sterpus(y) & -Lempus(z)) -> (Yumpus(x) & Sterpus(y) & -Lempus(z)))", "all x y.((Sally(x) & Yumpus(x) & Sterpus(y)) -> (Yumpus(x) & Sterpus(y) & -Lempus(y)))", "(all x.(Sally(x) -> Yumpus(x)) & all y.(Sally(y) -> Sterpus(y)) & all z.(Sally(z) -> -Lempus(z))))", "(yumpus(Sally) & sterpus(Sally) & -lempus(Sally))", "(all x.(Yumpus(x) -> Sally)) & (Sterpus(x) -> Sally)) & (Sally(x) -> -Lempus(x)))", "all x.(Sally(x) -> (Yumpus(x) & Sterpus(x) & -Lempus(x)))", "(all x y.(Yumpus(x) -> Sally(x)) & (Sterpus(y) -> Sally(y)) & (Lempus(y) -> Sally(y)))", "all x y z.((Sally(x) & Yumpus(y) & Sterpus(z)) -> (Yumpus(x) & Sterpus(x) & -Lempus(x)))", "(all x.(Sally(x) -> Yampus(x)) & (Sally(x) -> Sterpus(x)) & (Sally(x) -> -Lempus(x)))", "(yumpus(Sally) & Sterpus(Sally) & -Lempus(Sally))", "all x y.((Sally(x) & Yumpus(x) & Sterpus(y)) -> (Yumpus(x) & Sterpus(y) & -Lempus(y)))", "all x y z.((Sally(x) & Yumpus(x) & Sterpus(y) & -Lempus(z)) -> (Yumpus(x) & Sterpus(y) & -Lempus(z)))", "all x.(Yumpus(x) & Sterpus(x) & -Lempus(x))", "(Yumpus(Sally) & Sterpus(Sally) & -Lempus(Sally))", "exists x.(Yumpus(x) & Sterepus(x) & -Lempus(x))"]}
{"id": "prontoqa_train_1091", "nl": "Each sterpus is a dumpus and a tumpus and a lempus.", "fol": "all x. (sterpus(x) -> (dumpus(x) & tumpus(x) & lempus(x)))", "prediction": ["all x.(Sterpus(x) -> (Dumps(x) & Tumpus(x) & Lempus(x)))", "(all x.(Sterpus(x) -> Dumpus(x)) & all y.(Tumpus(y) & all z.(Lempus(z)) -> Lempus(z))))", "all x.(Sterpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "all x y.((Sterpus(x) & Dumpus(y)) -> (Tumpus(x) & Lempus(x)))", "all x y z.((Sterpus(x) & Dumpus(y) & Tumpus(z)) -> (Tumpus(x) & Lempus(x)))", "all x y.((Sterpus(x) & Dumpus(x) & Tumpus(y) & Lempus(y)) -> (Dumps(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "(all x.(Sterpus(x) -> Dumpus(x)) & (Tumpus(x) | Lempus(x)))", "(all x.(Sterpus(x) -> Dumpus(x)) & all y.(Tumpus(y) & all z.(Lempus(z) & -Dumpus(y))))", "all x.(Sterpus(x) -> (Dumps(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterepus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "exists x.(Sterpus(x) & Dumpus(x) & Tumpus(x) & Lempus(x))", "(all x.(Steerpus(x) -> Dumpus(x)) & (Tumpus(x) | Lempus(x)))", "all x.(Steerpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "exists x.(Sterpus(x) & Dumpus(x) & Tumpus(x) & Lempus(x))", "exists x.(Steerpus(x) & Dumpus(x) & Tumpus(x) & Lempus(x))"]}
{"id": "prontoqa_train_1092", "nl": "Sally is a sterpus.", "fol": "sterpus(Sally)", "prediction": ["all x.(Sally(x) -> Sterpus(x))", "Sally is a Sterpus.", "(Sterpus(Sally) & Sterpus(Sally))", "all x.(Sally(x) -> Sterpus(x))", "Sally is Sterpus.", "Sally is a Sterpus.", "(Sally,Sterpus)", "all x.(Sally(x) -> Sterpus(x))", "Sally is sterpus.", "(Sterpus(Sally) & Sterpus(Sally))", "Sally (Sterpus)", "Sally is Sterpus.", "all x.(Sally(x) -> Sterpus(x))", "Sally is a sterpus.", "All x.(Sally(x) -> Sterepus(x))", "all x.(Sally(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_1093", "nl": "Sally is an impus, a dumpus, or a brimpus.", "fol": "(impus(Sally) | dumpus(Sally) | brimpus(Sally))", "prediction": ["all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "(Impossible(Sally) | Dumpus(Sally) | Brimpus(Sally))", "all x.(Sally(x) -> (Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x)))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Issue(x) | IsDumpus(x) | IsBrimpus(x)))", "all x y.((Sally(x) & (Impossible(x) | Dumpus(x) | Brimpus(x))) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "(Issue(Sally,Sally) | IsDumpus(Sally) | IsBrimpus(Sally,Sally))", "(Impossible(Sally) | Dumpus(Sally) | Brimpus(Sally))", "exists x.(Sally(x) & ((Impossible(x) | Dumpus(x) | Brimpus(x))) -> (Impossible(x) | Dumpus(x) | Brimpus(x))))", "all x y.((Sally(x) & Is(y) & (Dumpus(y) | Brimpus(y))) -> Is(x,y))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "(Impossible(Sally) | Dumpus(Sally) | Brimpus(Sally))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "exists x.(Sally(x) & (Issue(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "exists x.(Sally(x) & (Issue(x) | Dumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_1094", "nl": "Everything that is a dumpus, a sterpus, or a brimpus is a lempus.", "fol": "all x. ((dumpus(x) | sterpus(x) | brimpus(x)) -> lempus(x))", "prediction": ["all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumps(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.(((Dumpus(x) | Sterpus(x) | Brimpus(x))) -> Lempus(x))", "all x.((Dumps(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x y.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(y))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "(all x.((Dumpus(x) | Sterpus(x) | Brimpus(x))) -> Lempus(x))", "all x.(((Dumpsus(x) | Sterpus(x) | Brimpus(x))) -> Lempus(x))", "all x.((Dumpus(x) | Sterus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumps(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x y.((Dumps(x) | Sterus(y) | Brimpus(y)) -> Lempus(x,y))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))"]}
{"id": "prontoqa_train_1095", "nl": "Sam is a lempus, a wumpus, and a brimpus.", "fol": "(lempus(Sam) & wumpus(Sam) & brimpus(Sam))", "prediction": ["all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Wumpus(x) & Brimpus(x)))", "all x y z.((Sam(x) & Lempus(y) & Wumpus(z)) -> (Lempus(x) | Wumpus(z) | Brimpus(z)))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Wumpus(y) & -Brimpus(y)))", "all x.(Sam(x) -> (Lempus(x) & Wumpus(x) & Brimpus(x)))", "all x y z.((Sam(x) & Lempus(y) & Wumpus(z)) -> (Lempus(x) & Wumpus(y) & Brimpus(z)))", "(Lempus(sam) | Wumpus(sam) | Brimpus(sam))", "(all x.(Sam(x) -> Lempus(x)) & (Wumpus(x) & Brimpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Wumpus(y) & -Brimpus(y)))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))", "exists x.(Sam(x) & Lempus(x) & Wumpus(x) & Brimpus(x))", "all x.(Sam(x) -> (Lempus(x) & Wumpus(x) & Brimpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Wumpus(x) | Brimpus(x)))", "exists x.(Sam(x) & Lempus(x) & Wumpus(x) & Brimpus(x))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_1096", "nl": "Everything that is a zumpus, a vumpus, and a lorpus is a numpus, a grimpus, and a gorpus.", "fol": "all x. ((zumpus(x) & vumpus(x) & lorpus(x)) -> (numpus(x) & grimpus(x) & gorpus(x)))", "prediction": ["all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x y.((Tompus(x) & Vumpus(y) & Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x y z.((Tompus(x) & Vumpus(y) & Lorpus(z) & Tompus(x) & Tompus(y) & Tompus(z)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) & Vumpus(x) & Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Zumpus(x) | Voompus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) | Grimpus(x) | Gorpus(x)))", "(all x.((Tompus(x) | Voompus(x) | Lorpus(x))) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x y.((Tompus(x) & Vumpus(x) & Lorpus(y)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) & Vumpus(x) & Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Zumpus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "(all x.((Zumpus(x) | Voompus(x) | Lorpus(x))) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Zumpus(x) | Voompus(x) | Lorpus(x)) -> (Numpus(x) | Grimpus(x) | Gorpus(x)))", "(all x.((Tompus(x) | Vumpus(x) | Lorpus(x))) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) & Vumpus(x) & Lorpus(x)) -> (Numpus(x) | Grimpus(x) | Gorpus(x)))", "all x.((Zumpus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1097", "nl": "Stella is a vumpus.", "fol": "vumpus(Stella)", "prediction": ["all x.(Stella(x) -> Vumpus(x))", "Stella is a Vumpus.", "(Vumpus(Stella))", "(Vumpus(Stella) & -Vumpus(Stella))", "Stella is a Vumpus.", "all x.(Stella(x) -> Vumpus(x))", "Stella is a vumpus.", "(Vumpus(Stella) & Vumpus(Stella))", "all x.(Vumpus(x) -> Stella(x))", "Stella is a Vampus(Stella)", "(Vumpus(Stella) & HasVumpus(Stella))", "Stella is a Vumpus(Stella)", "Stella ist ein Vumpus.", "Stella is a vumpus.", "all x.(Stella(x) -> Vumpus(x))", "Stella is vumpus."]}
{"id": "prontoqa_train_1098", "nl": "Stella is a lorpus.", "fol": "lorpus(Stella)", "prediction": ["Stella is a lorpus.", "all x.(Lorph(x) -> Stella(x))", "(Lorpus(Stella) & LivesIn(Stella,Lorpus))", "Stella is a lorpus.", "(Lorpus(Stella) & Throat(Stella))", "all x.(Lorph(x) -> Stella(x))", "all x.(Lorpus(x) -> Stella(x))", "Stella is a lorpus.", "(Lorpus(Stella) & LivesIn(Stella,Lorpus))", "Stella is a Larke(Stella)", "Stella (Lorpus)", "Stella is a lorpus.", "all x.(Lorph(x) -> Stella(x))", "(Lorpus(Stella) & LivesIn(Stella,Lorpus))", "Stella is a lorpus.", "Stella is a Loomis."]}
{"id": "prontoqa_train_1099", "nl": "Everything that is a zumpus and a shumpus and a sterpus is a jompus and a gorpus and a lorpus.", "fol": "all x. ((zumpus(x) & shumpus(x) & sterpus(x)) -> (jompus(x) & gorpus(x) & lorpus(x)))", "prediction": ["all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x y.((Tompus(x) & Shumpus(y) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Shumpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x y z.((Tompus(x) & Shumpus(y) & Sterpus(z) & Has(x,y)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x y.((Tompus(x) & Shumpus(x) & Sterpus(y)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Zumpus(x) | Humpus(x) | Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x y.((Tompus(x) & Humpus(y) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "(all x.((Tompus(x) & Humpus(x)) -> (Stompus(x) & Jompus(x)) & (Gorpus(x) | Lorpus(x))))", "(all x.((Zumpus(x) & Shumpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Zumpus(x) & Shumpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Zumpus(x) | Shumpus(x) | Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Shumpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jimpus(x) & Gorpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_train_1100", "nl": "Sam is a sterpus.", "fol": "sterpus(Sam)", "prediction": ["all x.(Sam(x) -> Sterpus(x))", "(Sam(sam) & Sterpus(sam))", "(Sam,Sterpus)", "all x.(Sam(x) -> Sterpus(x))", "Sam is sterpus.", "(Sterepus(Sam) & Sterpus(Sam))", "all x.(Sam(x) -> Sterpus(x))", "Sam is sterpus.", "(Sam,sterpus)", "all x.(Sam(x) -> Sterpus(x))", "(Sterepus(sam) & Sterpus(sam))", "all x.(Sterepus(x) -> Sam(x))", "all x.(Sam(x) -> Sterepus(x))", "all x.(Sam(x) -> Sterpus(x))", "All x.(Sam(x) -> Sterosene(x))", "all x.(Sam(x) -> Sterepus(x))"]}
{"id": "prontoqa_train_1101", "nl": "Sam is a jompus.", "fol": "jompus(Sam)", "prediction": ["all x.(Jompus(x) -> Sam(x))", "all x.(Sam(x) -> Jompus(x))", "Sam is a Jompus.", "(Jompus(Sam) & HasJimmy(Sam))", "Sam is a jompus.", "(Jompus(Sam) & HasSam(Sam,Sam))", "all x.(Jompus(x) -> Sam(x))", "all x.(Jimpus(x) -> Sam(x))", "(Jimpus(Sam) & Jompus(Sam))", "Sam is jompus.", "all x.(Sam(x) -> Jompus(x))", "(Jumpus(Sam) & HasJimmy(Sam,Sam))", "(Jompus(Sam) & Jompus(Sam))", "all x.(Jumpus(x) -> Sam(x))", "all x.(Sam(x) -> Jompus(x))", "all x.(Jompus(x) -> Sam(x))"]}
{"id": "prontoqa_train_1102", "nl": "Everything that is a zumpus, a yumpus, and a jompus is an impus and a lorpus and a numpus.", "fol": "all x. ((zumpus(x) & yumpus(x) & jompus(x)) -> (impus(x) & lorpus(x) & numpus(x)))", "prediction": ["all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & -Lorpus(x) & -Numpus(x)))", "all x y.((Tompus(x) & Yumpus(y) & Jompus(y)) -> (Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x)))", "all x.((Zumpus(x) & Yumpus(x) & Jompus(x)) -> (Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x)))", "all x y z.((Tompus(x) & Yumpus(y) & Jompus(z) & Tompus(y) & Tompus(z)) -> (Impos(x) & Lopus(x) & Numpus(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & -Lorpus(x) & -Numpus(x)))", "all x.((Zumpus(x) & Yumpus(x) & Jompus(x)) -> (Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & -Lorpus(x) & -Numpus(x)))", "all x y z.((Tompus(x) & Yumpus(y) & Jompus(z) & Tompus(x) & Tompus(y) & Tompus(z) & Tompus(y)) -> (Impos(x) & Lopus(x) & Numpus(x)))", "(all x.((Zumpus(x) | Yumpus(x) | Jompus(x))) -> IsImpos(x)) & all y.((Lorpus(y) & Numpus(y)) -> IsImpos(y)))", "(all x.((Tompus(x) | Yumpus(x) | Jompus(x))) -> Is(x,Is(x,IsLorpus) & Is(x,IsNumpus)))", "(all x.((Tompus(x) | Yumpus(x) | Jompus(x))) -> Impossible(x)) & all y.((Lorpus(y) & Numpus(y)) -> Impossible(y)))", "all x y.((Tompus(x) & Yumpus(x) & Jompus(y)) -> (Impos(x) & -Lorpus(x) & -Numpus(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & -Lorpus(x) & -Numpus(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Lopus(x) & Numpus(x)))", "all x.((Zumpus(x) & Yumpus(x) & Jompus(x)) -> (Impos(x) & Lower(x) & Numpus(x)))"]}
{"id": "prontoqa_train_1103", "nl": "Max is a lorpus.", "fol": "lorpus(Max)", "prediction": ["all x.(Max(x) -> Lorpus(x))", "Max is a lorpus.", "(Lorpus(Max) & LivesIn(Max))", "-Lorpus(Max)", "all x.(Max(x) -> Lorpus(x))", "Max is a lorpus.", "(Lorpus(Max) & HasLorph(Max))", "all x.(Lorpus(x) -> Max(x))", "All x.(Matthew(x) -> Lorpus(x))", "Max is a lorpus.", "all x.(Max(x) -> Lorpus(x))", "(Lorpus(Max) & LivesIn(Max))", "(Lorpus(Max) -> -Lorpus(Max))", "Max is lorpus.", "all x.(Lorpus(x) -> Max(x))", "(Lorpus(Max))"]}
{"id": "prontoqa_train_1104", "nl": "Every brimpus is a tumpus and an impus and a gorpus.", "fol": "all x. (brimpus(x) -> (tumpus(x) & impus(x) & gorpus(x)))", "prediction": ["all x.(Brimpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x y.((Brimpus(x) & Tumpus(y)) -> (Impossible(x) & Gorpus(x)))", "(all x.(Brimpus(x) -> Tumpus(x)) & all y.(Impossible(y) & Gorpus(y))))", "all x.(Brimpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Impossible(x) & Gorpus(x)))", "all x y.((Brimpus(x) & Tompus(y)) -> (Impossible(x) & Gorpus(x)))", "(all x.(Brimpus(x) -> Tumpus(x)) & all y.(Impossible(y) & Gorpus(y))))", "all x.(Brimpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Imperator(x) & Gorpus(x)))", "(all x.(Brimpus(x) -> Tumpus(x)) & (Impossible(x) | Gorpus(x))))", "exists x.(Brimpus(x) & Tumpus(x) & Issue(x) & Gorpus(x))", "all x.(Brimpus(x) -> (Tumpus(x) & Impossible(x) & Gorpus(x)))", "(all x.(Brumpus(x) -> Tumpus(x)) & (Impossible(x) | Gorpus(x)))", "exists x.(Brimpus(x) & Tumpus(x) & Imperator(x) & Gorpus(x))", "all x.(Brimpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1105", "nl": "Wren is a lorpus, an impus, or a yumpus.", "fol": "(lorpus(Wren) | impus(Wren) | yumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Lorpus(x) | Imperator(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpus(x)))", "(Lorpus,Impossible(Wren) | Yumpus(Wren))", "(all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpus(x))))", "all x.(Wren(x) -> (Lorpus(x) | Imperative(x) | Yumpus(x)))", "all x y.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpus(x)))", "(Lorpus,Impossible(wren) | Yumpus(wren))", "all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpus(x)))", "exists x.(Wren(x) & ((Lorpus(x) & -Impossible(x)) | (-Lorpus(x) & Impossible(x)))))", "all x.(Wren(x) -> (Lorpus(x) | Issue(x) | Yumpus(x)))", "all x y.(Wren(x) -> (Lorpus(x) | Imperator(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Imperator(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Imperator(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpus(x)))", "exists x.(Wren(x) & ((Lorpus(x) & -Impossible(x)) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Issue(x) | Yumpus(x)))"]}
{"id": "prontoqa_train_1106", "nl": "Numpuses are sterpuses, gorpuses, and vumpuses.", "fol": "all x. (numpus(x) -> (sterpus(x) & gorpus(x) & vumpus(x)))", "prediction": ["all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x y.((Numpuse(x) & Sterpuse(y)) -> (Gorpuse(y) | Vampuse(y)))", "(all x.(Numpuse(x) -> Sterpuse(x)) & all y.(Gorpuse(y) & Vampuse(y)))", "all x y z.((Numpuse(x) & Sterpuse(y) & Gorpuse(z)) -> (Sterpuse(x) | Vampuse(x)))", "all x.(Numpus(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "(all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vumpuse(x)))", "all x.(Numpuse(x) -> (Steruse(x) | Gorpuse(x) | Vampuse(x)))", "(all x.(Numpuse(x) -> Sterpuse(x)) & all y.(Gorpuse(y) & Vampuse(y)))", "all x.(Numpuse(x) -> (Steruse(x) | Gorpuse(x) | Vampuse(x)))", "(All x.(Numpus(x) -> (Sterpuse(x) | Gorpuse(x) | Vumpuse(x)))", "all x.(Numpus(x) -> (Sterpuse(x) | Gorpuse(x) | Vumpuse(x)))", "(all x.(Numpuse(x) -> Sterpuse(x)) & all y.(Gorpuse(y) -> Vampuse(y)))", "all x.(Numpus(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpus(x) -> (Sterpuses(x) | Gorpuses(x) | Vumpuses(x)))"]}
{"id": "prontoqa_train_1107", "nl": "Sally is an impus, Sally is a jompus, and Sally is not a vumpus.", "fol": "(impus(Sally) & jompus(Sally) & -vumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Is(x)) & (Jompus(x) & -Vumpus(x)))", "all x y z.((Sally(x) & IsImpossible(x) & Jompus(y) & -Vumpus(z)) -> (Impossible(x) & Jompus(y) & -Impossible(z)))", "(all x.(Sally(x) -> Impossible(x)) & (Sally(x) -> Jompus(x)) & (Sally(x) -> -Vumpus(x)))", "(all x y z.((Sally(x) & IsImpossible(x)) -> Jompus(x)) & ((Sally(y) & -Vumpus(z)) -> IsImpossible(y)))", "all x y z.((Sally(x) & IsImpos(x) & Jompus(y) & -Vumpus(z)) -> (Impossible(x) & Jompus(y) & -Impossible(z)))", "(all x.(Sally(x) -> Is(x)) & (Jompus(x) | -Vumpus(x))))", "exists x.(Sally(x) & IsImpossible(x) & exists y.(Jompus(y) & IsImpossible(y)) & exists z.(Vumpus(z) & IsImpossible(z))))", "(all x.(Sally(x) -> Is(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vumpus(z))))", "all x y z.((Sally(x) & IsImpossible(x) & Jompus(y) & -Vumpus(z)) -> (Impossible(x) & Jompus(y) & -Impossible(z)))", "all x.(Sally(x) -> (Impossible(x) & Jompus(x) & -Vumpus(x)))", "all x y z.((Sally(x) & Impossible(x) & Jompus(y) & -Vumpus(z)) -> (Impossible(x) & Jompus(y) & -Vumpus(z)))", "(all x y z.((Sally(x) & Impossible(x)) -> Jompus(x)) & ((Sally(y) & -Vumpus(z)) -> Jompus(y)))", "all x.(Sally(x) -> (Impossible(x) | Jompus(x) | -Vumpus(x)))", "(all x.(Sally(x) -> Impossible(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vumpus(z))))", "(all x.(Sally(x) -> Imperium(x)) & (Jompus(x) & -Vumpus(x)))", "(all x y.(Sally(x) -> Is(x,Is(x)) & (Jompus(y) | -Vumpus(y)))"]}
{"id": "prontoqa_train_1108", "nl": "Everything that is a vumpus, a rompus, or a yumpus is a lempus, a zumpus, and a gorpus.", "fol": "all x. ((vumpus(x) | rompus(x) | yumpus(x)) -> (lempus(x) & zumpus(x) & gorpus(x)))", "prediction": ["all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x y.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(y) & Zumpus(y) & Gorpus(y)))", "all x.(((Vumpus(x) | Rompus(x) | Yumpus(x))) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.(((Vumpus(x) | Rompus(x) | Yumpus(x))) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "(all x.((Vumpus(x) | Rompus(x) | Yumpus(x))) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yampus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x y.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(y) | Zumpus(y) | Gorpus(y)))", "all x.(Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vimpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yampus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "(all x.((Vumpus(x) | Rompus(x) | Yumpus(x))) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1109", "nl": "Sally is a lempus.", "fol": "lempus(Sally)", "prediction": ["all x.(Sally(x) -> Lempus(x))", "Sally is a lempus.", "all x.(Sally(x) -> Lempus(x))", "Sally is a lempus.", "Sally is Lempus.", "(Lempus(Sally) & Lempus(Sally))", "all x.(Sally(x) -> Lempus(x))", "Sally is a Lempus.", "Sally is Lempus.", "(Lempus(Sally) & Lempus(Sally))", "all x.(Sally(x) -> Lempus(x))", "Sally (Lempus)", "all x.(Lempus(x) -> Sally(x))", "Sally is a lempus.", "Sally is Lempus(Sally)", "All x.(Sally(x) -> Lempus(x))"]}
{"id": "prontoqa_train_1110", "nl": "Everything that is a grimpus or a jompus or a lempus is a tumpus, an impus, and a rompus.", "fol": "all x. ((grimpus(x) | jompus(x) | lempus(x)) -> (tumpus(x) & impus(x) & rompus(x)))", "prediction": ["all x.((Smopus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Imperator(x) & Rompus(x)))", "all x.((Tumpus(x) | Impossible(x) | Rompus(x)) -> (Grimpus(x) | Jompus(x) | Lempus(x)))", "all x.((Smoothpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Impossible(x) & Rompus(x)))", "all x.((Smompus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Impossible(x) & Rompus(x)))", "all x.((Grimpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Imperator(x) & Rompus(x)))", "all x y.((Smopus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(y) & Imperator(y) & Rompus(y)))", "all x.((Tumpus(x) | Imperator(x) | Rompus(x)) -> (Grimpus(x) | Jompus(x) | Lempus(x)))", "all x.((Gruppus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Issue(x) & Rompus(x)))", "all x y.((Smoothpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(y) & Impossible(y) & Rompus(y)))", "(all x.((Smompus(x) | Jompus(x) | Lempus(x))) -> (Tumpus(x) & Imperator(x) & Rompus(x)))", "all x.((Rumpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Impossible(x) & Rompus(x)))", "(all x.((Grimpus(x) | Jompus(x) | Lempus(x))) -> (Tumpus(x) & Imperator(x) & Rompus(x)))", "all x.((Crupid(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) | Imperator(x) | Rompus(x)))", "all x.(Smokey(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Issue(x) & Rompus(x)))", "all x.((Gruppus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Imperator(x) & Rompus(x)))", "(all x.((Grimpus(x) | Jompus(x) | Lempus(x))) -> (Tumpus(x) | Impossible(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1111", "nl": "Each dumpus is a tumpus.", "fol": "all x. (dumpus(x) -> tumpus(x))", "prediction": ["all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "(all x.(Dumpus(x) -> Tumpus(x)))", "all x y.((Dumpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumps(x) -> Tumpus(x))", "all x y.((Dumpus(x) & Tumpus(y)) -> Has(x,y))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "exists x.(Dumps(x) & Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "exists x.(Dumpus(x) & Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "exists x.(Dupus(x) & Tumulus(x))", "exists x.(Dumpus(x) & Tumpus(x))"]}
{"id": "prontoqa_train_1112", "nl": "Stella is a wumpus, Stella is not a tumpus, and Stella is a rompus.", "fol": "(wumpus(Stella) & -tumpus(Stella) & rompus(Stella))", "prediction": ["(all x.(Wumpus(x) -> Stella(x)) & (-Tumpus(x) -> Stella(x)) & (Rompus(x) -> Stella(x)))", "all x y z.((Stella(x) & Wumpus(x) & Stella(y) & Rompus(z)) -> (-Tumpus(y) & -Wumpus(y) & Rompus(z)))", "(all x.(Wumpus(x) -> Stella)) & (-Tumpus(x) -> Stella)) & (Rompus(x) -> Stella)))", "(all x y z.((Wumpus(x) & Stella(y) & Tumpus(z)) -> Wumpus(x)) & ((Wumpus(y) & -Tumpus(y)) -> Rompus(y)))", "(all x.(Stella(x) -> Wumpus(x)) & (Stella(x) -> -Tumpus(x)) & (Stella(x) -> Rompus(x)))", "all x y z.((Wumpus(x) & Stella(y) & Tomb(z)) -> (Wumpus(x) & -Tumpus(y) & Rompus(z)))", "(all x y z.((Stella(x) & Wumpus(y)) -> Wumpus(x)) & ((Stella(z) & -Tumpus(z)) -> Rompus(z)))", "all x y z.((Wumpus(x) & Stella(y) & Tumpus(z)) -> (Wumpus(x) & -Tumpus(y) & Rompus(z)))", "all x y z.((Stella(x) & Wumpus(x) & Stella(y) & Tompus(z)) -> (-Tumpus(y) & Rompus(z)))", "all x.(Wumpus(x) & -Tumpus(x) & Rompus(x))", "(all x.(Wumpus(x) -> Stella(x)) & (-Tumpus(x) -> Stella(x)) & (Rompus(x) -> Stella(x)))", "all x.(Stella(x) -> (Wumpus(x) & -Tumpus(x) & Rompus(x)))", "(all x y z.((Wumpus(x) & Stella(y) & Tumpus(z)) -> Wumpus(x)) & ((Wumpus(y) & -Tumpus(y)) -> Rompus(y)))", "all x y z.(Wumpus(x) & Wumpus(y) & -Tumpus(z) & Rompus(z))", "(all x.(Wumpus(x) & -Tumpus(x)) & all y.(Rompus(y) & -Wumpus(y)))", "(all x.(Stella(x) -> Wumpus(x)) & (Stella(x) -> -Tumpus(x)) & (Stella(x) -> Rompus(x)))"]}
{"id": "prontoqa_train_1113", "nl": "Stella is a yumpus, Stella is not a dumpus, or Stella is a brimpus.", "fol": "(yumpus(Stella) | -dumpus(Stella) | brimpus(Stella))", "prediction": ["(all x.(Stella(x) -> Yumpus(x)) | (-Stella(x) & Dumpus(x))) | (-Stella(x) & Brimpus(x))))", "all x.(Stella(x) -> (Yumpus(x) | -Dumpus(x) | Brimpus(x)))", "all x y.((Stella(x) & Yumpus(x)) | (-Dumpus(y) | Brimpus(y))))", "(all x.(Stella(x) -> Yumpus(x)) & (Stella(x) -> -Dumpus(x)) | (Stella(x) -> Brimpus(x))))", "all x y z.((Stella(x) & Yumpus(y) & (Stella(z) | -Dumpus(z))) -> (Yumpus(x) | Brimpus(z))))", "all x y.((Stella(x) & (Yumpus(x) | -Dumpus(x) | Brimpus(y))) -> (Yumpus(x) | -Dumpus(x) | -Dumpus(y)))", "(all x.(Stella(x) -> Yampus(x)) | (-Stella(x) & Dumpus(x)) | (-Stella(x) & Brimpus(x))))", "all x.(Stella(x) -> (Yumpus(x) | -Dumpus(x) | Brimpus(x)))", "(yumpus) | (-dumpus(y) | Brimpus(y))))", "(all x.(Yumpus(x) | -Dumpus(x)) | Brimpus(x)))", "exists x.(Yumpus(x) | (-Dumpus(x) | Brimpus(x)))", "(all x.(Stella(x) -> Yumpus(x)) | (-Stella(x) & Dumpus(x))) | (-Stella(x) & Brimpus(x))))", "all x.(Stella(x) -> (Yumpus(x) | -Dumpus(x) | Brimpus(x)))", "exists x.(Yumpus(x) | (-Dumpus(x) | Brimpus(x)))", "(all x.(Stella(x) -> Yampus(x)) | (-Dumpus(x) | Brimpus(x))))", "exists x.(Yumpus(x) | (-Dumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_1114", "nl": "Every shumpus is a zumpus.", "fol": "all x. (shumpus(x) -> zumpus(x))", "prediction": ["all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x y.((Shumpus(x) & Zumpus(y)) -> Has(x,y))", "(all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x y.((Shumpus(x) & Zumpus(y)) -> HasShumpus(x,y))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "exists x.(shumpus(x) & Toshpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "exists x.(Shumpus(x) & Zurpus(x))"]}
{"id": "prontoqa_train_1115", "nl": "Every lorpus is a brimpus.", "fol": "all x. (lorpus(x) -> brimpus(x))", "prediction": ["all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x y.((Lorpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Lorpus(x) -> Brimpus(x))", "(all x.(Lorpus(x) -> Brimpus(x)))", "all x y.((Lorpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorph(x) -> Brimpus(x))", "exists x.(lorpus(x) & Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "exists x.(Lorph(x) & Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Larp(x) -> Brimpus(x))", "exists x.(Lorpus(x) & Brumpus(x))"]}
{"id": "prontoqa_train_1116", "nl": "Each grimpus is not a zumpus.", "fol": "all x. (grimpus(x) -> -zumpus(x))", "prediction": ["all x.(Grimpus(x) -> -Zumpus(x))", "(-Zumpus(z) & Grimpus(x))", "all x.(Grimpus(x) -> -Zumpus(x))", "(-Zumpus(z) & Grimpus(w))", "all x.(Grimpus(x) -> -Zumpus(x))", "all x.(Gruppus(x) -> -Zumpus(x))", "all x y.((Grimpus(x) & Grimpus(y) & -Zumpus(x)) -> -Grimpus(x))", "(-Zumpus(z) -> Grimpus(x))", "all x.(Grimpus(x) -> -Tompus(x))", "all x.(Sgrimpus(x) -> -Zumpus(x))", "exists x.(Grip(x) & -Zumpus(x))", "all x.(Grimpus(x) -> -Zumpus(x))", "all x.(Gruppus(x) -> -Zumpus(x))", "all x.(Grimpus(x) -> -Tompus(x))", "all x.(Grampus(x) -> -Zumpus(x))", "exists x.(Grimpus(x) & -Zumpus(x))"]}
{"id": "prontoqa_train_1117", "nl": "Polly is a gorpus and Polly is a jompus and Polly is not a brimpus.", "fol": "(gorpus(Polly) & jompus(Polly) & -brimpus(Polly))", "prediction": ["all x y z.((Polly(x) & Gorpus(x) & Jompus(y) & Brimpus(z)) -> (Gorpus(x) & Jompus(y) & -Brimpus(z)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> -Brimpus(x)))", "(all x y z.((Polly(x) & Gorpus(x)) -> Polly(y)) & ((Polly(z) & Jompus(z)) -> Polly(z)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> -Brimpus(x)))", "all x y.((Polly(x) & Gorpus(x) & Jompus(y)) -> (-Brimpus(x)))", "(all x y.(Polly(x) -> Gorpus(x)) & (Polly(y) -> Jompus(y)) & (Polly(y) -> -Brimpus(y)))", "all x y z.((Polly(x) & Gorpus(x) & Jompus(y) & Brimpus(z)) -> (Gorpus(x) & Jompus(y) & -Brimpus(z)))", "all x y z.((Polly(x) & Gorpus(x) & Jompus(y) & Brimpus(z)) -> (Gorpus(x) & Jompus(y) & -Brimpus(z)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & -Brimpus(x)))", "all x.(Polly(x) -> (Gorpus(x) & Jompus(x) & -Brimpus(x)))", "exists x.(Polly(x) & Gorpus(x) & Jompus(x) & -Brimpus(x))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & -Brimpus(x)))", "(all x y z.(Polly(x) -> Gorpus(x)) & (Polly(y) -> Jompus(y)) & (Polly(z) -> -Brimpus(z))))", "all x y z.((Polly(x) & Gorpus(x) & Jompus(y) & Brimpus(z)) -> (Gorpus(x) & Jompus(y) & -Brimpus(z)))", "all x y.((Polly(x) & Gorpus(x) & Jompus(y)) -> (Gorpus(x) & -Brimpus(y)))", "(all x.(Polly(x) -> Gorpus(x)) & all y.(Polly(y) -> Jompus(y)) & all z.(Polly(z) -> -Brimpus(z))))"]}
{"id": "prontoqa_train_1118", "nl": "Polly is a rompus and a wumpus and a sterpus.", "fol": "(rompus(Polly) & wumpus(Polly) & sterpus(Polly))", "prediction": ["all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & Sterpus(x)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Wumpus(y) & -Sterpus(y))))", "all x y z.((Polly(x) & Rompus(y) & Wumpus(z)) -> (Rompus(x) & Wumpus(y) & Sterpus(z)))", "(Rompus(Polly) & Wumpus(Polly) & Sterpus(Polly))", "all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & Sterpus(x)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Wumpus(y) & -Sterpus(y))))", "all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & Sterpus(x)))", "all x y.((Polly(x) & Rompus(y)) -> (Wumpus(x) & Sterpus(x)))", "(all x.(Polly(x) -> Rompus(x)) & (Wumpus(x) | Sterpus(x))))", "all x y z.((Polly(x) & Rompus(y) & Wumpus(z)) -> (Rompus(x) & Wumpus(z) & Sterpus(z)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Wumpus(y) & -Sterpus(y))))", "(Rompus(Polly) | Wumpus(Polly) | Sterpus(Polly))", "exists x.(Polly(x) & Rompus(x) & Wumpus(x) & Sterpus(x))", "all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & Sterpus(x)))", "all x y.((Polly(x) & Rompus(y)) -> (Wumpus(x) & Sterpus(x)))", "exists x.(Polly(x) & Rompus(x) & Wumpus(x) & Sterpus(x))"]}
{"id": "prontoqa_train_1119", "nl": "Polly is not a shumpus, Polly is not a lorpus, and Polly is a vumpus.", "fol": "(-shumpus(Polly) & -lorpus(Polly) & vumpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Vumpus(x)))", "all x y z.((Polly(x) & Shumpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(y) & -Vumpus(z)))", "(all x y z.((Polly(x) & Humpus(y)) -> -Shumpus(x)) & ((Polly(z) & Lorpus(z))) -> Vumpus(z)))", "(all x.(Polly(x) -> -Shumpus(x)) & all y.(Polly(y) -> -Lorpus(y))) & all z.(Polly(z) -> Vumpus(z)))", "all x y z.((Polly(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(y) & -Vumpus(z)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Vumpus(x)))", "all x y z.((Polly(x) & Shumpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(y) & -Vumpus(z)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Vumpus(x)))", "(all x y z.((Polly(x) & Humpus(y)) -> -Shumpus(x)) & ((Polly(z) & Lorpus(z))) -> Vumpus(z)))", "all x y z.((Polly(x) & Shumpus(y) & Lorpus(z)) -> (-Shumpus(x) | (-Lorpus(x) & Vumpus(x))))", "all x.(Polly(x) -> (-Shumpus(x) & -Lorpus(x) & -Vumpus(x)))", "(all x y z.((Polly(x) & Humpus(y)) -> -Shumpus(x)) & ((Polly(z) & Lorpus(z))) -> -Lorpus(z)) & ((Polly(z) & Vumpus(z)) -> -Shumpus(z)))", "all x y z.((Polly(x) & Humpus(y) & Lorpus(z) & Vumpus(x)) -> (-Shumpus(x) | -Lorpus(y) | -Lorpus(z)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Vumpus(x)))", "all x.(Polly(x) -> (-Shumpus(x) & -Lorpus(x) & -Vumpus(x)))", "(all x.(Polly(x) -> -Shumpus(x)) & all y.(Polly(y) -> -Lorpus(y))) & all z.(Polly(z) -> Vumpus(z)))"]}
{"id": "prontoqa_train_1120", "nl": "Every jompus is a yumpus.", "fol": "all x. (jompus(x) -> yumpus(x))", "prediction": ["all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x y.((Jompus(x) & Yumpus(y)) -> Has(x,y))", "all x.(Jompus(x) -> Yumpus(x))", "(all x.(Jompus(x) -> Yumpus(x)))", "all x.(Jimpus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x y.((Jompus(x) & Yumpus(y)) -> Has(x,y))", "all x.(Jimpus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jumpus(x) -> Yampus(x))", "all x.(Jompus(x) -> Yampus(x))", "exists x.(jompus(x) & Yumpus(x))", "exists x.(Jompus(x) & Yampus(x))", "exists x.(Jimpus(x) & Yumpa(x))"]}
{"id": "prontoqa_train_1121", "nl": "Polly is not a yumpus, Polly is a lempus, and Polly is a zumpus.", "fol": "(-yumpus(Polly) & lempus(Polly) & zumpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Yumpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Zumpus(x)))", "all x y z.((Polly(x) & Yumpus(y) & Lempus(z)) -> (-Yumpus(x) & Lempus(x) & Zumpus(x)))", "(all x.(Polly(x) -> -Yumpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Zumpus(z))))", "(all x y z.((Polly(x) & Yumpus(y)) -> -Yumpus(x)) & ((Polly(z) & Lempus(z)) -> Zumpus(z)))", "all x y z.((Polly(x) & Lempus(y) & Zumpus(z)) -> (-Yumpus(x) & Lempus(y) & Zumpus(z)))", "exists x.(Polly(x) & -Yumpus(x) & Lempus(x) & Zumpus(x))", "all x y z.((Polly(x) & Yumpus(y) & Lempus(z)) -> (-Yumpus(x) & Lempus(x) & Zumpus(x)))", "(all x.(Polly(x) -> -Yumpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Zumpus(x)))", "all x y z.((Polly(x) & Yampus(y) & Lempus(z)) -> (-Yumpus(x) & Lempus(x) & Zumpus(x)))", "(all x.(Polly(x) -> -Yumpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Zumpus(x)))", "(all x y z.((Polly(x) & Yumpus(y)) -> -Yumpus(x)) & ((Polly(z) & Lempus(z)) -> Zumpus(z)))", "all x y.((Polly(x) & Lempus(y) & Zumpus(x)) -> (-Yumpus(x) & Lempus(y) & Zumpus(y)))", "all x y z.((Polly(x) & Yampus(y) & Lempus(z)) -> (-Yumpus(x) | (-Yumpus(x) & Lempus(y) & Zumpus(z))))", "(all x.(Polly(x) -> -Yumpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Zumpus(z))))", "all x y z.((Polly(x) & Yumpus(y) & Lempus(z)) -> (-Yumpus(x) | Zumpus(x)))", "(all x y z.((Polly(x) & Yumpus(y)) -> -Yumpus(x)) & ((Polly(z) & Lempus(z)) -> Zumpus(z)))"]}
{"id": "prontoqa_train_1122", "nl": "Polly is a dumpus or Polly is a lorpus or Polly is not a jompus.", "fol": "(dumpus(Polly) | lorpus(Polly) | -jompus(Polly))", "prediction": ["all x.((Polly(x) & (Dumpus(x) | Lorpus(x) | -Jompus(x))) -> Polly(x))", "((Polly(Polly) & Dumpus(Polly)) | (Polly(Polly) & Lorpus(Poly)) | (Poly(Poly) & -Jompus(Poly))))", "all x.((Polly(x) & (Dumpus(x) | Lorpus(x) | -Jompus(x))) -> Polly(x))", "all x y.((Polly(x) & Dumpus(x)) | (Polly(y) & Lorpus(y)) | (Polly(y) & -Jompus(y))))", "(all x.(Polly(x) -> Dumpus(x)) | (Polly(x) -> Lorpus(x)) | (Polly(x) -> -Jompus(x))))", "all x.((Polly(x) & (Dumpus(x) | Lorpus(x) | -Jompus(x))) -> Polly(x))", "((Polly(Polly) & Dumpus(Polly)) | (Polly(Polly) & Lorpus(Poly)) | (Poly(Polly) & -Jompus(Poly))))", "(exists x.(Polly(x) & Dumpus(x)) | exists y.(Polly(y) & Lorpus(y))))", "(all x.(Ploy(x) -> Dumpus(x)) | (Lorpus(x) | -Jompus(x))))", "exists x.(Polly(x) & ((Dumpus(x) & Polly(x)) | (Lorpus(x) & -Jompus(x)))))", "((Polly(Poly) & Dumpus(Poly)) | (Poly(Poly) & Lorpus(Poly)) | (Poly(Poly) & -Jimpus(Poly))))", "all x.((Polly(x) & (Dumpus(x) | Lorpus(x) | -Jumpus(x))) -> Polly(x))", "all x.(Polly(x) -> ((Dumpus(x) | Lorpus(x) | -Jompus(x))))", "all x y.((Polly(x) & Dumpus(x)) | (Polly(y) & Lorpus(y)) | (Polly(y) & -Jompus(y))))", "((Poly(poly) & Dumpus(poly)) | (Poly(poly) & Lorpus(poly)) | (Poly(poly) & -Jompus(poly))))", "exists x.(Polly(x) & ((Dumpus(x) | Lorpus(x)) | -Jompus(x))))"]}
{"id": "prontoqa_train_1123", "nl": "Everything that is a shumpus and a yumpus and a numpus is a dumpus.", "fol": "all x. ((shumpus(x) & yumpus(x) & numpus(x)) -> dumpus(x))", "prediction": ["all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x y.((Shumpus(x) & Yumpus(y) & Numpus(y)) -> Dumpus(x))", "all x y z.((Shumpus(x) & Yumpus(y) & Numpus(z) & Is(x,y)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "(all x.((Shumpus(x) & Yumpus(x)) -> Dumpus(x)) & all y.((Yumpus(y) & Numpus(y)) -> Dumpus(y)))", "all x.((Shumpus(x) | Yumpus(x) | Numpus(x)) -> Dumpus(x))", "(all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "(all x.((Shumpus(x) & Yumpus(x)) -> Dumpus(x)) & all y.((Yumpus(y) & Numpus(y)) -> Dumpus(y)))", "all x.((Shumpus(x) | Yumpus(x) | Numpus(x)) -> Dumpus(x))", "all x y.((Shumpus(x) & Yumpus(y) & Numpus(y)) -> Dumpus(x))", "all x.(((Shumpus(x) | Yampus(x) | Numpus(x))) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))"]}
{"id": "prontoqa_train_1124", "nl": "Stella is a shumpus.", "fol": "shumpus(Stella)", "prediction": ["Stella is a shumpus.", "all x.(Shumpus(x) -> Stella(x))", "(Shumpus(Stella) & HasShump(Stella))", "Stella is a shumpus.", "all x.(Shumpus(x) -> Stella(x))", "(Shumpus(Stella))", "Stella is a shumpus.", "(Shumpus(Stella) & Shumpus(Stella))", "Stella (Shumpus)", "all x.(Shumpus(x) -> Stella(x))", "Stella is Shumpus(Stilla)", "Stella is a shumpus.", "Stella is shumpus.", "all x.(Shumpus(x) -> Stella(x))", "Stella is a shumpus.", "(Shumpus(Stella))"]}
{"id": "prontoqa_train_1125", "nl": "Stella is a yumpus.", "fol": "yumpus(Stella)", "prediction": ["Stella is yumpus.", "(Yumpus(Stella) & HasYump(Stella))", "all x.(Stella(x) -> Yumpus(x))", "Stella is a yumpus.", "all x.(Yumpus(x) -> Stella(x))", "Stella is yumpus.", "(Yumpus(Stella))", "all x.(Yumpus(x) -> Stella(x))", "(Yumpus(Stella) & HasYump(Stella))", "Stella is a yumpus.", "Stella (yumpus)", "Stella is yumpus.", "Stella is Yampus(Stella)", "all x.(Yumpus(x) -> Stella(x))", "(Yumpus(Stella))", "Stella is yumpus."]}
{"id": "prontoqa_train_1126", "nl": "Stella is a grimpus or a dumpus or a gorpus.", "fol": "(grimpus(Stella) | dumpus(Stella) | gorpus(Stella))", "prediction": ["all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "(Stella(s) & (Grimpus(s) | Dumpus(s) | Gorpus(s)))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "(Stella) -> (Grimpus(Stella) | Dumpus(Stella) | Gorpus(Stella)))", "(Grimpus(Stella) | Dumpus(Stella) | Gorpus(Stella)))", "all x y.((Stella(x) & Grimpus(y)) | (Dumpus(y) | Gorpus(y))))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "(Gorpus,Grimpus,Dumpus,Gorpus)", "(Stella isGrimpus(Stella) | (Dumpus(Stella) | Gorpus(Stella))))", "all x.(Stella(x) -> (Sgrimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "exists x.(Stella(x) & ((Grimpus(x) | Dumpus(x) | Gorpus(x))))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "exists x.(Stella(x) & ((Grimpus(x) | Dumpus(x)) | Gorpus(x))))", "exists x.(Stella(x) & (Sgrimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1127", "nl": "Everything that is a yumpus, a lempus, and a sterpus is a gorpus.", "fol": "all x. ((yumpus(x) & lempus(x) & sterpus(x)) -> gorpus(x))", "prediction": ["all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x y.((Yumpus(x) & Lempus(y) & Sterpus(y)) -> Gorpus(x))", "all x y z.((Yumpus(x) & Lempus(y) & Sterpus(z) & Has(x,y) & Has(x,z)) -> Gorpus(x))", "(all x.((Yumpus(x) | Lempus(x) | Sterpus(x))) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) & Lempus(x) & Sterpus(x)) -> Gorpus(x))", "all x.(Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "(all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x y.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(y))", "all x.((Yumpus(x) | Lempus(x) | Steroid(x)) -> Gorpus(x))", "all x.((Yumpus(x) & Lempus(x) & Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterepus(x)) -> Gorpus(x))"]}
{"id": "prontoqa_train_1128", "nl": "Max is a shumpus, Max is not a gorpus, and Max is a vumpus.", "fol": "(shumpus(Max) & -gorpus(Max) & vumpus(Max))", "prediction": ["(all x.(Max(x) -> Humpus(x)) & (-Max(x) -> Gorpus(x)) & (Max(x) -> Vumpus(x)))", "all x y z.((Max(x) & Humpus(y) & Gorpus(z)) -> (Shumpus(x) & -Gorpus(y) & Vumpus(z)))", "(all x y z.((Max(x) & Humpus(y)) -> Shumpus(x)) & ((Max(z) & -Gorpus(z))) -> Vumpus(z)))", "(all x.(Max(x) -> Humpus(x)) & (Max(x) -> -Gorpus(x)) & (Max(x) -> Vumpus(x)))", "all x y z.((Max(x) & Shumpus(y) & Gorpus(z)) -> (-Shumpus(x) & -Gorpus(x) & -Vumpus(x)))", "all x.(Max(x) -> (Shumpus(x) & -Gorpus(x) & Vumpus(x)))", "(all x.(Max(x) -> Shumpus(x)) & (-Max(x) -> Gorpus(x)) & (-Max(x) -> Vumpus(x)))", "all x y z.((Max(x) & Humpus(y) & Gorpus(z)) -> (Shumpus(x) & -Gorpus(x) & Vumpus(x)))", "(all x y z.((Max(x) & Humpus(y)) -> Shumpus(x)) & ((Max(z) & -Gorpus(z)) -> Vumpus(z)))", "(all x.(Max(x) -> Humpus(x)) & (-Max(x) -> Gorpus(x)) & (Max(x) -> Vumpus(x)))", "(all x.(Max(x) -> Shumpus(x)) & (-Max(x) -> Gorpus(x)) & (-Max(x) -> Vumpus(x)))", "all x.(Max(x) -> (Shumpus(x) | -Gorpus(x) | Vumpus(x)))", "all x y z.((Max(x) & Shumpus(y) & Gorpus(z)) -> (-Shumpus(x) & -Gorpus(y) & Vumpus(z)))", "(all x y z.((Max(x) & Humpus(y)) -> (Shumpus(x) | -Gorpus(y)) | (Vumpus(z) & -Shumpus(z))))", "(all x.(Max(x) -> Humpus(x)) & all y.(Max(y) -> -Gorpus(y)) & all z.(Max(z) -> Vumpus(z)))", "all x y z.((Max(x) & Humpus(y) & Gorpus(z)) -> (Shumpus(x) & -Gorpus(y) & Vumpus(z)))"]}
{"id": "prontoqa_train_1129", "nl": "Each wumpus is a grimpus, a gorpus, and a sterpus.", "fol": "all x. (wumpus(x) -> (grimpus(x) & gorpus(x) & sterpus(x)))", "prediction": ["all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "(all x.(Wumpus(x) -> Grimpus(x)) & all y.(Gorpus(y) & all z.(Sterpus(z)) -> Sterpus(z))))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x y z.((Wumpus(x) & Grimpus(y) & Gorpus(z)) -> (Sterpus(x) & Grimpus(y) & Gorpus(z) & Sterpus(z)))", "all x y.((Wumpus(x) & Grimpus(y)) -> (Gorpus(x) & Sterpus(x)))", "(all x.(Wumpus(x) -> Grimpus(x)) & all y.(Gorpus(y) & all z.(Sterpus(z)) -> Sterepus(z))))", "all x.(Wumpus(x) -> (Grimpus(x) & Gorpus(x) & Sterpus(x)))", "all x.(Wumpus(x) -> (Smokey(x) | Gorpus(x) | Sterpus(x)))", "(all x.(Wumpus(x) -> Grimpus(x)) & all y.(Gorpus(y) & all z.(Sterepus(z) & -Grimpus(y)) -> Sterpus(z)))", "(all x.(Wumpus(x) -> Grimpus(x)) & (Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "exists x.(Wumpus(x) & Grimpus(x) & Gorpus(x) & Sterpus(x))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Smaller(x) & Gorpus(x) & Sterpus(x)))", "(all x.(Wumpus(x) -> Grimpus(x)) & all y.(Gorpus(y) & all z.(Sterpus(z)) -> Sterpus(z)))", "exists x.(Wumpus(x) & Grimpus(x) & Gorpus(x) & Sterpus(x))"]}
{"id": "prontoqa_train_1130", "nl": "Max is a lempus, an impus, or a sterpus.", "fol": "(lempus(Max) | impus(Max) | sterpus(Max))", "prediction": ["all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))", "(exists x.(Max(x) & Lempus(x)) | exists y.(Impossible(y) & -Impossible(y))) | exists z.(Sterpus(z) & -Impossible(z))))", "(all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x))))", "all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))", "(Limpus(max) | Impossible(max) | Sterpus(max))", "all x.(Max(x) -> (Lempus(x) | Imperator(x) | Sterpus(x)))", "(exists x.(Max(x) & Lempus(x)) | exists y.(Impossible(y) & -Impossible(y))) | exists z.(Sterpus(z) & -Impossible(z))))", "all x.(Max(x) -> (Lempus(x) | Issue(x) | Sterpus(x)))", "(all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))", "(all x.(Max(x) -> Lempus(x)) | (Max(x) -> Impossible(x) | Max(x))))", "all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Imperempt(x) | Sterpus(x)))", "exists x.(M Max(x) & (Lempus(x) | Imperator(x) | Steroid(x)))", "all x.(Max(x) -> (Limpus(x) | Issue(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Imperator(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1131", "nl": "Everything that is a tumpus or a gorpus or a lorpus is a rompus, a zumpus, and a lempus.", "fol": "all x. ((tumpus(x) | gorpus(x) | lorpus(x)) -> (rompus(x) & zumpus(x) & lempus(x)))", "prediction": ["all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x y.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(y) & Zumpus(y) & Lempus(y)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.(((Tumpus(x) | Gorpus(x) | Lorpus(x))) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x y.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(y) | Zumpus(y) | Lempus(y)))", "(all x.((Tumpus(x) | Gorpus(x) | Lorpus(x))) -> (Rompus(x) | Zumpus(x) | Lampus(x)))", "all x.((Rompus(x) | Zumpus(x) | Lempus(x)) -> (Tumpus(x) | Gorpus(x) | Lorpus(x)))", "all x y.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(y) & Zumpus(y) & Lempus(y)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "(all x.((Tumpus(x) | Gorpus(x) | Lorpus(x))) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((Tompus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.(Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_1132", "nl": "Everything that is a jompus and a rompus and a tumpus is a brimpus, a gorpus, and an impus.", "fol": "all x. ((jompus(x) & rompus(x) & tumpus(x)) -> (brimpus(x) & gorpus(x) & impus(x)))", "prediction": ["all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "all x y.((Jompus(x) & Rompus(y) & Tumpus(y)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "all x y z.((Jompus(x) & Rompus(y) & Tumpus(z) & Is(x,y)) -> (Brimpus(x) | Gorpus(x) | Imperator(x)))", "all x.((Jompus(x) | Rompus(x) | Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "all x.((Jimpus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "(all x.((Jompus(x) & -Rompus(x) & -Tumpus(x)) -> (Brimpus(x) | Gorpus(x) | Imperator(x)))", "all x y z.((Jompus(x) & Rompus(y) & Tumpus(z) & Is(x,y,z)) -> (Brimpus(x) | Gorpus(x) | Imperator(x)))", "all x y.((Jompus(x) & Rompus(y) & Tumpus(y)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "(all x.((Jompus(x) & -Rompus(x) & -Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Impossible(x)))", "all x.((Brimpus(x) | Gorpus(x) | Imperator(x)) -> (Jompus(x) & Rompus(x) & Tumpus(x)))", "all x.((Jimpus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "all x.((Jompus(x) | Rompus(x) | Tumpus(x)) -> (Brimpus(x) | Gorpus(x) | Imperator(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) | Gorpus(x) | Imperator(x)))", "(all x.((Jompus(x) & -Rompus(x) & -Tumpus(x)) -> (Brimpus(x) | Gorpus(x) | Imperator(x)))"]}
{"id": "prontoqa_train_1133", "nl": "Alex is a rompus.", "fol": "rompus(Alex)", "prediction": ["all x.(Alex(x) -> Rompus(x))", "Alex is rompus.", "(Rompus(Alex) & -Rompus(Alex))", "Alex is a rompus.", "all x.(Alex(x) -> Rompus(x))", "(Rompus(Alex) & Has(Alex))", "Alex is rompus.", "all x.(Alex(x) -> Rompus(x))", "all x.(Rompus(x) -> Alex(x))", "Alex is a rompus.", "all x.(Alex(x) -> Rompus(x))", "all x.(Rompus(x) -> Alex(x))", "Alex is rompus.", "all x.(Alex(x) -> Rompus(x))", "All x.(Alex(x) -> Rupus(x))", "All x.(Alex(x) -> Rompus(x))"]}
{"id": "prontoqa_train_1134", "nl": "Everything that is a zumpus and a tumpus and a wumpus is a shumpus, a rompus, and a dumpus.", "fol": "all x. ((zumpus(x) & tumpus(x) & wumpus(x)) -> (shumpus(x) & rompus(x) & dumpus(x)))", "prediction": ["all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x y.((Tompus(x) & Tumpus(y) & Wumpus(y)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x y z.((Tompus(x) & Tumpus(y) & Wumpus(z) & Tompus(y) & Tompus(z)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "(all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Tompus(x) | Tumpus(x) | Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "(all x.((Zumpus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Tompus(x) | Tumpus(x) | Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x y.((Tompus(x) & Tumpus(y) & Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "(all x.((Tompus(x) & Toumpus(x) & Toumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Zumpus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Tompus(x) | Tumpus(x) | Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Zumpus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Zumpus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_1135", "nl": "Zumpuses are yumpuses.", "fol": "all x. (zumpus(x) -> yumpus(x))", "prediction": ["all x.(Zumpus(x) -> Yampus(x))", "all x.(Zumpus(x) -> Yumpus(x))", "(Yumpuse(z) & HasYumpus(z))", "all x y.((Zumpus(x) & Yumpus(y)) -> Is(x,y))", "(Yumpus) -> Zumpuse(z))", "all x.(Zumpus(x) -> Yampus(x))", "all x y.((Zumpus(x) & Yampus(y)) -> Yampus(x))", "(Yumpuse(z) & Yumpus(z))", "all x.(Zumpus(x) -> Yumpus(x))", "all x.(Zumpus(x) -> Yampus(x))", "all x.(Zimpuse(x) -> Yampus(x))", "all x.(Zumpus(x) -> Yumpas(x))", "All x.(Zombie(x) -> Yumpa(x))", "all x.(Zumpus(x) -> Yampus(x))", "all x.(Zumpus(x) -> Yumpus(x))", "All x.(Zumpus(x) -> Yampus(x))"]}
{"id": "prontoqa_train_1136", "nl": "Sam is a zumpus and a yumpus and a gorpus.", "fol": "(zumpus(Sam) & yumpus(Sam) & gorpus(Sam))", "prediction": ["all x.(Sam(x) -> (Tompus(x) & Yumpus(x) & Gorpus(x)))", "all x y z.((Sam(x) & Zumpus(y) & Yumpus(z)) -> (Tompus(x) & Yompus(y) & Gorpus(z)))", "(all x.(Sam(x) -> Zumpus(x)) & (Yumpus(x) & Gorpus(x)))", "all x.(Sam(x) -> (Tompus(x) & Yumpus(x) & Gorpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & all y.(Yumpus(y) & all z.(Gorpus(z)) -> Gorpus(z))))", "all x y.((Sam(x) & Zumpus(y)) -> (Yumpus(x) & Gorpus(x)))", "(Tompus(Sam) & Yumpus(Sam) & Gorpus(Sam))", "all x.(Sam(x) -> (Tompus(x) & Yumpus(x) & Gorpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & all y.(Yumpus(y) & all z.(Gorpus(z) & Y.(Yumpus(z) & Y.(Yumpus(z)))))", "all x y z.((Sam(x) & Zumpus(y) & Yumpus(z)) -> (Tompus(x) & Yampus(z) & Gorpus(z)))", "(all x.(Sam(x) -> Zumpus(x)) & (Yumpus(x) & Gorpus(x)))", "all x.(Sam(x) -> (Zumpus(x) | Yumpus(x) | Gorpus(x)))", "exists x.(Sam(x) & Zumpus(x) & Yumpus(x) & Gorpus(x))", "all x.(Sam(x) -> (Tompus(x) | Yumpus(x) | Gorpus(x)))", "exists x.(Sam(x) & Zumpus(x) & Yumpus(x) & Gorpus(x))", "(All x.(Sam(x) -> Zumpus(x)) & (Yumpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1137", "nl": "Sam is a zumpus or a rompus or a yumpus.", "fol": "(zumpus(Sam) | rompus(Sam) | yumpus(Sam))", "prediction": ["all x.(Sam(x) -> (Tompus(x) | Rompus(x) | Yumpus(x)))", "((Sam) | (Tompus(Sam) | Rompus(Sam) | Yumpus(Sam))))", "all x.(Sam(x) -> (Tompus(x) | Rompus(x) | Yumpus(x)))", "(Tompus(sam) | Rompus(sam) | Yumpus(sam)))", "all x y.((Sam(x) & Zumpus(x)) | (Rompus(x) | Yumpus(x))))", "all x.(Sam(x) -> (Tompus(x) | Rompus(x) | Yumpus(x)))", "(Tompus(sam) | Rompus(sam) | Yumpus(sam)))", "all x y.(Sam(x) -> (Tompus(x) | Rompus(x) | Yumpus(y)))", "(Tompus,rompus,yumpus)", "all x.(Sam(x) -> (Tompus(x) | Rompus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Rompus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Zumpus(x) | Rompus(x) | Yumpus(x)))", "exists x.(Sam(x) & ((Tompus(x) | Rompus(x) | Yumpus(x))) -> Tompus(x))", "all x.(Sam(x) -> (Tompus(x) | Rompus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Zumpus(x) | Rompus(x) | Yumpus(x)))", "exists x.(Sam(x) & (Zumpus(x) | Rompus(x) | Yumpus(x)))"]}
{"id": "prontoqa_train_1138", "nl": "Each rompus is a lempus, an impus, and a zumpus.", "fol": "all x. (rompus(x) -> (lempus(x) & impus(x) & zumpus(x)))", "prediction": ["all x.(Rompus(x) -> (Lempus(x) & Issue(x) & Zumpus(x)))", "(all x.(rompus(x) -> Lempus(x)) & all y.(rompus(y) -> Impossible(y)) & all z.(rompus(z) -> Zumpus(z))))", "all x.(Rompus(x) -> (Lempus(x) | Impossible(x) | Zumpus(x)))", "(all x.(Rompus(x) -> Lempus(x)) & all y.(Imposs(y) -> Zumpus(y)))", "all x.(rompus(x) -> (Lempus(x) | Impossible(x) | Zumpus(x)))", "all x y.((Rompus(x) & Lempus(y)) -> (Impossible(x) & Zumpus(x)))", "all x.(Rompus(x) -> (Lempus(x) & Impossible(x) & Zumpus(x)))", "(all x.(Rompus(x) -> Lempus(x)) & all y.(Rompus(y) -> Impossible(y)) & all z.(Rompus(z) -> Zumpus(z)))", "exists x.(rompus(x) & Lempus(x) & Imperator(x) & Zumpus(x))", "all x.(Rompus(x) -> (Lempus(x) | Imperator(x) | Zumpus(x)))", "(all x.(Rompus(x) -> Lempus(x)) & all y.(Imposs(y) -> Zumpus(y)))", "exists x.(rompus(x) & Lempus(x) & Issue(x) & Zumpus(x))", "all x.(Rompus(x) -> (Lempus(x) & Issue(x) & Zumpus(x)))", "all x.(Rompus(x) -> (Lempus(x) | Issue(x) | Zumpus(x)))", "(all x.(Rompus(x) -> Lempus(x)) & (Imposs(x) | Zumpus(x)))", "all x.(Rompus(x) -> (Limpus(x) | Impossible(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1139", "nl": "Stella is a dumpus or a shumpus or an impus.", "fol": "(dumpus(Stella) | shumpus(Stella) | impus(Stella))", "prediction": ["all x.(Stella(x) -> (Dumpus(x) | Humpus(x) | Imperator(x)))", "((Stella(Stella) & Dumpus(Stella)) | (Shumpus(Stella) & Issue(Stella))))", "(Dumpus(Stella) | Humpus(Stella) | Imperator(Stella)))", "all x.(Stella(x) -> (Dumpus(x) | Humpus(x) | Imperator(x)))", "all x y.((Stella(x) & Dumpus(y)) | (Shumpus(y) | Imperator(y))))", "((Stella(s) & Dumpus(s)) | (Shumpus(s) | Imperator(s))))", "all x.(Stella(x) -> (Dumpus(x) | Humpus(x) | Impeccable(x)))", "(Dumpus(s) | Humpus(s) | Imperator(s)))", "all x.((Stella(x) & (Dumpus(x) | Humpus(x) | Imperator(x))) -> Stella(x))", "(Dumus(Stella) | Humpus(Stella) | Imperator(Stella)))", "(Dumpus,shumpus,isolator)", "all x.(Stella(x) -> ((Dumpus(x) | Humpus(x) | Imperator(x))))", "exists x.(Stella(x) & (Dumps(x) | Humpus(x) | Imperator(x)))", "all x.(Stella(x) -> (Dumpus(x) | Humpus(x) | Imperator(x)))", "all x.(Stella(x) -> (Dumpus(x) | Humpus(x) | Issue(x)))", "exists x.(Stella(x) & ((Dumpus(x) | Humpus(x) | Impeccable(x))))"]}
{"id": "prontoqa_train_1140", "nl": "Everything that is a gorpus or a grimpus or a shumpus is a sterpus, a rompus, and a vumpus.", "fol": "all x. ((gorpus(x) | grimpus(x) | shumpus(x)) -> (sterpus(x) & rompus(x) & vumpus(x)))", "prediction": ["all x.((Gorpus(x) | Grimpus(x) | Shumpus(x)) -> (Sterpus(x) & Rompus(x) & Vumpus(x)))", "all x.((Gorpus(x) | Grimpus(x) | Humpus(x)) -> (Sterpus(x) & Rompus(x) & Vumpus(x)))", "all x y.((Gorpus(x) | Grimpus(x) | Shumpus(x)) -> (Sterpus(y) & Rompus(y) & Vumpus(y)))", "all x.((Gorpus(x) | Grimpus(x) | Shumpus(x)) -> (Sterepus(x) & Rompus(x) & Vumpus(x)))", "(all x.((Gorpus(x) | Grimpus(x) | Shumpus(x))) -> (Sterepus(x) | Rompus(x) | Vumpus(x)))", "all x y.((Gorpus(x) | Grimpus(x) | Shumpus(x)) -> (Sterepus(y) & Rompus(y) & Vumpus(y)))", "all x.((Gorpus(x) | Grimpus(x) | Humpus(x)) -> (Sterepus(x) & Rompus(x) & Vumpus(x)))", "all x.((Gorpus(x) | Grimpus(x) | Shumpus(x)) -> (Sterpus(x) | Rompus(x) | Vumpus(x)))", "all x.((Gorpus(x) | Grimpus(x) | Humpus(x)) -> (Sterepus(x) | Rompus(x) | Vumpus(x)))", "(all x.((Gorpus(x) | Grimpus(x) | Shumpus(x))) -> (Sterpus(x) | Rompus(x) | Vumpus(x)))", "all x.(Gorpus(x) | Grimpus(x) | Shumpus(x)) -> (Sterpus(x) & Roompus(x) & Vumpus(x)))", "all x y.((Gorpus(x) | Grimpus(x) | Shumpus(x)) -> (Sterpus(y) & Rompus(y) & Vumpus(y)))", "all x.((Gorpus(x) | Grimpus(x) | Shumpus(x)) -> (Sterepus(x) & Rompus(x) & Vumpus(x)))", "all x.((Gorpus(x) | Grimpus(x) | Humpus(x)) -> (Sterpus(x) | Rompus(x) | Vumpus(x)))", "all x.((Gorpus(x) | Gruppus(x) | Humpus(x)) -> (Sterepus(x) | Rompus(x) | Vumpus(x)))", "all x.((Gorpus(x) | Grimpus(x) | Shumpus(x)) -> (Sterpus(x) | Rompus(x) | Vumpus(x)))"]}
{"id": "prontoqa_train_1141", "nl": "Each jompus is a rompus and an impus and a yumpus.", "fol": "all x. (jompus(x) -> (rompus(x) & impus(x) & yumpus(x)))", "prediction": ["all x.(Jompus(x) -> (Rompus(x) & Issue(x) & Yumpus(x)))", "(all x.(Jompus(x) -> Rompus(x)) & all y.(Impos(y) -> Yumpus(y)))", "all x.(Jompus(x) -> (Rompus(x) & Impossible(x) & Yumpus(x)))", "exists x.(Jimpus(x) & Rompus(x) & Issue(x) & Yumpus(x))", "(all x.(Jompus(x) -> Rompus(x)) & all y.(Impos(y) -> Yumpus(y)))", "all x y.((Jompus(x) & Rompus(y)) -> (Impossible(x) & Yumpus(x)))", "all x.(Jompus(x) -> (Rompus(x) & Issue(x) & Yumpus(x)))", "(all x.(Jompus(x) -> Rompus(x)) & (Impos(x) | Yumpus(x)))", "all x.(Jompus(x) -> (Rompus(x) & Impossible(x) & Yumpus(x)))", "(all x.(Jompus(x) -> Rompus(x)) & all y.(Imposs(y) -> Yumpus(y)))", "all x y.((Jompus(x) & Rompus(y)) -> (Impossible(x) | Yumpus(x)))", "exists x.(Jompus(x) & Rompus(x) & Issue(x) & Yumpus(x))", "all x.(Jompus(x) -> (Rompus(x) & Issue(x) & Yumpus(x)))", "all x.(Jompus(x) -> (Rompus(x) & Imperator(x) & Yumpus(x)))", "(all x.(Jompus(x) -> Rompus(x)) & (Imposs(x) | Yumpus(x)))", "all x y.((Jompus(x) & Rompus(y)) -> (Impossible(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1142", "nl": "Sam is a zumpus or a brimpus or a yumpus.", "fol": "(zumpus(Sam) | brimpus(Sam) | yumpus(Sam))", "prediction": ["all x.(Sam(x) -> (Tompus(x) | Brimpus(x) | Yumpus(x)))", "((Sam) | (Tompus(Sam) | Brimpus(Sam) | Yumpus(Sam))))", "all x.(Sam(x) -> (Tompus(x) | Brimpus(x) | Yumpus(x)))", "(Tompus(sam) | Brimpus(sam) | Yumpus(sam)))", "(Zumpus) | Brimpus(x) | Yumpus(x))", "all x.(Sam(x) -> (Tompus(x) | Brimpus(x) | Yumpus(x)))", "all x y.(Sam(x) -> (Tompus(x) | Brimpus(x) | Yumpus(x)))", "(Tompus(sam) | Brimpus(sam) | Yumpus(sam)))", "all x.((Sam(x) & (Zumpus(x) | Brimpus(x) | Yumpus(x))) -> Toss(x))", "all x.(Sam(x) -> (Zumpus(x) | Brimpus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Brimpus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Brimpus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Zumpus(x) | Brimpus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Brimpus(x) | Yumpus(x)))", "exists x.(Sam(x) & (Zumpus(x) | Brimpus(x) | Yumpus(x)))", "exists x.(Sam(x) & (Zumpus(x) | Brimpus(x) | Yumpus(x)))"]}
{"id": "prontoqa_train_1143", "nl": "Each jompus is a vumpus, a lempus, and a tumpus.", "fol": "all x. (jompus(x) -> (vumpus(x) & lempus(x) & tumpus(x)))", "prediction": ["all x.(Jompus(x) -> (Vumpus(x) | Lempus(x) | Tumpus(x)))", "(all x.(Jompus(x) -> Vumpus(x)) & all y.(Lempus(y) & -Vumpus(y)) & all z.(Tumpus(z) -> Tumpus(z))))", "all x.(Jompus(x) -> (Vumpus(x) & Lempus(x) & Tumpus(x)))", "all x.(Jompus(x) -> (Vumpus(x) | Lempus(x) | Tumpus(x)))", "all x y.((Jompus(x) & Vumpus(y) & Lempus(y) & Tumpus(x)) -> (Vumpus(x) & Lempus(y) & Tumpus(y)))", "all x y z.(Jompus(x) -> (Vumpus(y) | Lempus(y) | Tumpus(z)))", "(all x.(Jompus(x) -> Vumpus(x)) & all y.(Lempus(y) & All z.(Tumpus(z)) -> Tumpus(z))))", "(all x.(Jompus(x) -> Vumpus(x)) & all y.(Lempus(y) & all z.(Tumpus(z) & -Vumpus(y))) & all w.(Tumpus(w) & -Vumpus(w)) -> Tumpus(w)))", "all x.(Jompus(x) -> (Vumpus(x) | Lempus(x) | Tumpus(x)))", "all x.(Jompus(x) -> (Vumpus(x) & Lempus(x) & Tumpus(x)))", "exists x.(Jimpus(x) & (Vumpus(x) | Lempus(x) | Tumpus(x)))", "all x.(Jompus(x) -> (Vumpus(x) | Lempus(x) | Tumpus(x)))", "all x.(Jompus(x) -> (Vumpus(x) & Lempus(x) & Tumpus(x)))", "(all x.(Jompus(x) -> (Vumpus(x) | Lempus(x) | Tumpus(x)))", "all x.(Jompus(x) -> (Vimpus(x) | Lempus(x) | Tumpus(x)))", "exists x.(Jompus(x) & Vumpus(x) & Lempus(x) & Tumpus(x))"]}
{"id": "prontoqa_train_1144", "nl": "Sam is a tumpus, a lempus, or a rompus.", "fol": "(tumpus(Sam) | lempus(Sam) | rompus(Sam))", "prediction": ["all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "(all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x))))", "(Tumpus(sam) | Lempus(sam) | Rompus(sam)))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "(Tumpus,Tumpus,Lempus,Rompus)", "(all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x))))", "all x y.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(y)))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "exists x.(Sam(x) & ((Tumpus(x) & -Lempus(x)) | (-Tumpus(x) & Lempus(x)))))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "(all x.(Sam(x) -> Tumpus(x)) | (Lempus(x) | Rompus(x))))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "exists x.(Sam(x) & (Tumpus(x) | Lempus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1145", "nl": "Everything that is a tumpus or a shumpus or a grimpus is a sterpus, a rompus, and a yumpus.", "fol": "all x. ((tumpus(x) | shumpus(x) | grimpus(x)) -> (sterpus(x) & rompus(x) & yumpus(x)))", "prediction": ["all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> (Sterepus(x) & Rompus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> (Sterepus(x) & Rompus(x) & Yumpus(x)))", "all x.(((Tumpus(x) | Shumpus(x) | Grimpus(x))) -> (Sterepus(x) & Rompus(x) & Yumpus(x)))", "all x y.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> (Sterpus(y) & Rompus(y) & Yumpus(y)))", "all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> (Sterpus(x) & Rompus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> (Sterpus(x) & Rompus(x) & Yumpus(x)))", "(all x.((Tumpus(x) | Humpus(x) | Grimpus(x))) -> (Sterepus(x) & Rompus(x) & Yumpus(x)))", "all x y.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> (Sterpus(y) & Rompus(y) & Yumpus(y)))", "all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> (Sterepus(x) & Rompus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> (Sterepus(x) & Rompus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> (Sterpus(x) | Rompus(x) | Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> (Sterpus(x) | Rompus(x) | Yumpus(x)))", "(all x.((Tumpus(x) | Humpus(x) | Grimpus(x))) -> (Sterepus(x) | Rompus(x) | Yumpus(x)))", "all x.(Tumpus(x) | Shumpus(x) | Grimpus(x)) -> (Sterpus(x) & Rompus(x) & Yumpus(x)))", "(all x.((Tumpus(x) | Humpus(x) | Grimpus(x))) -> (Sterpus(x) | Rompus(x) | Yumpus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> (Sterepus(x) & Rompus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1146", "nl": "Every grimpus is a vumpus.", "fol": "all x. (grimpus(x) -> vumpus(x))", "prediction": ["all x.(Grimpus(x) -> Vumpus(x))", "all x.(Grimpus(x) -> Vumpus(x))", "all x.(Smooch(x) -> Vumpus(x))", "all x y.((Grimpus(x) & Grouse(y)) -> Vumpus(x))", "all x.(Grimpus(x) -> Vumpus(x))", "all x.(Sgrimpus(x) -> Vumpus(x))", "all x y.((Grimpus(x) & Grosp(y)) -> Vumpus(x))", "all x y.((Grimpus(x) & Grimpus(y)) -> Vumpus(x))", "(all x.(Grimpus(x) -> Vumpus(x))", "all x.(Grimpus(x) -> Vumpus(x))", "all x.(Gruppus(x) -> Vumpus(x))", "exists x.(Grimpus(x) & Grotesque(x) & Vumpus(x))", "all x.(Grimpus(x) -> Vumpus(x))", "exists x.(Gravity(x) & Grosp(x) & Vumpus(x))", "exists x.(Grimpus(x) & Vampus(x))", "all x.(Grampus(x) -> Vulpis(x))"]}
{"id": "prontoqa_train_1147", "nl": "Rex is a shumpus, Rex is a tumpus, and Rex is not a vumpus.", "fol": "(shumpus(Rex) & tumpus(Rex) & -vumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> Tumpus(x)) & (Rex(x) -> -Vumpus(x)))", "all x y z.((Rex(x) & Humpus(y) & Tumpus(z)) -> (Shumpus(x) & Tumpus(y) & -Vumpus(z)))", "(all x.(Rex(x) -> Humpus(x)) & all y.(Rex(y) -> Tumpus(y)) & all z.(Rex(z) -> -Vumpus(z))))", "all x y z.((Rex(x) & Shumpus(y) & Tumpus(z)) -> (Shumpus(x) & Tumpus(x) & -Vumpus(x)))", "(all x y z.((Rex(x) & Humpus(y)) -> Shumpus(x)) & ((Rex(z) & Tumpus(z))) -> -Vumpus(z)))", "(all x.(Rex(x) -> Shumpus(x)) & (Rex(x) -> Tumpus(x)) & (Rex(x) -> -Vumpus(x)))", "all x.(Rex(x) -> (Shumpus(x) | Tumpus(x) | -Vumpus(x)))", "(all x y z.((Rex(x) & Humpus(y)) -> Shumpus(x)) & ((Rex(z) & Tumpus(z)) -> Tumpus(z)) & ((Rex(x) & -Vumpus(x)) -> -Vumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> Tumpus(x)) & (Rex(x) -> -Vumpus(x)))", "all x y z.((Rex(x) & Humpus(y) & Tumpus(z)) -> (Shumpus(x) | Tumpus(z) | -Vumpus(x)))", "(all x.(Rex) -> Humpus(x)) & (Rex(x) -> Tumpus(x)) & (Rex(x) -> -Vumpus(x)))", "all x y z.((Rex(x) & Shumpus(y) & Tumpus(z)) -> (Shumpus(x) & Tumpus(y) & -Vumpus(z)))", "all x.(Rex(x) -> (Shumpus(x) | Tumpus(x) | -Vumpus(x)))", "all x y z.((Rex(x) & Humpus(y) & Tumpus(z) & -Vumpus(z)) -> (Shumpus(x) | Tumpus(x) | Tumpus(x)))", "(all x y z.((Rex(x) & Humpus(y)) -> Shumpus(x)) & ((Rex(z) & Tumpus(z)) -> Tumpus(z)) & ((Rex(x) & -Vumpus(x)) -> -Vumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & all y.(Rex(y) -> Tumpus(y)) & all z.(Rex(z) -> -Vumpus(z))))"]}
{"id": "prontoqa_train_1148", "nl": "Rex is a gorpus or Rex is not a grimpus or Rex is a zumpus.", "fol": "(gorpus(Rex) | -grimpus(Rex) | zumpus(Rex))", "prediction": ["all x.(Rex(x) -> (Gorpus(x) | -Grimpus(x) | Zumpus(x)))", "(exists x.(Rex(x) & Gorpus(x)) | exists y.(Rex(y) & -Grimpus(y))) | exists z.(Rex(z) & Zumpus(z))))", "(all x.(Rex(x) -> Gorpus(x)) | (-Grimpus(x) | Zumpus(x))))", "all x y.((Rex(x) & Gorpus(x)) | (-Grimpus(x) | Zumpus(y))))", "((Rex,gorpus) | (-Grimpus) | Zumpus(x))))", "((Rex) & Gorpus(x)) | (-Grimpus(x) | Zumpus(x))))", "all x.(Rex(x) -> (Gorpus(x) | -Grimpus(x) | Zumpus(x)))", "(all x.(Rex(x) -> Gorpus(x)) | (-Grimpus(x) | Zumpus(x))))", "all x y.((Rex(x) & Gorpus(x)) | (-Grimpus(x) | Zumpus(x))))", "(all x.(Rex(x) -> Gorpus(x)) | (-Grimpus(x) | Zumpus(x))))", "((Rex,Gorpus) | (-Grimpus) | Zumpus(x))))", "all x.(Rex(x) -> (Gorpus(x) | -Grimpus(x) | Zumpus(x)))", "all x.(Rex(x) -> (Gorpus(x) | -Smoothpus(x) | Zumpus(x)))", "all x.(Rex(x) -> ((Gorpus(x) | -Grimpus(x) | Zumpus(x))))", "(all x.(Rex(x) -> Gorpus(x)) & (-Grimpus(x) | Zumpus(x)))", "all x.(Rex(x) -> (Gorpus(x) | -Grippus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1149", "nl": "Everything that is a rompus and a lempus and an impus is a grimpus, a brimpus, and a zumpus.", "fol": "all x. ((rompus(x) & lempus(x) & impus(x)) -> (grimpus(x) & brimpus(x) & zumpus(x)))", "prediction": ["all x.((Rompus(x) & Lempus(x) & Imperator(x)) -> (Grimpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Lempus(x) & Impossible(x)) -> (Grimpus(x) & Brimpus(x) & Zumpus(x)))", "all x y z.((Rompus(x) & Lempus(y) & Impossible(z)) -> (Grimpus(x) | Brimpus(x) | Zumpus(x)))", "all x y.((Rompus(x) & Lempus(y) & Imperator(y)) -> (Grimpus(x) | Brimpus(x) | Zumpus(x)))", "all x.((Rompus(x) | Lempus(x) | Imperator(x)) -> (Grimpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Lempus(x) & Imperator(x)) -> (Grimpus(x) & Brimpus(x) & Zumpus(x)))", "all x y.((Rompus(x) & Lempus(y) & Impossible(y)) -> (Grimpus(x) | Brimpus(x) | Zumpus(x)))", "(all x.((Rompus(x) & Lempus(x) & Impossible(x)) -> (Grimpus(x) | Brimpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Lempus(x) & Issue(x)) -> (Grimpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Lempus(x) & Impossible(x)) -> (Grimpus(x) | Brimpus(x) | Zumpus(x)))", "all x.((Rompus(x) | Lempus(x) | Impossible(x)) -> (Grimpus(x) & Brimpus(x) & Zumpus(x)))", "(all x.((Rompus(x) & Lempus(x) & Imperator(x)) -> (Grimpus(x) | Brimpus(x) | Zumpus(x)))", "(all x.((Rompus(x) & Lempus(x) & Impossible(x)) -> (Grimpus(x) & Brimpus(x) & Zumpus(x)))", "all x.(Rompus(x) & Lempus(x) & Impossible(x)) -> (Smoothpus(x) & Brimpus(x) & Zumpus(x)))", "all x.(Rompus(x) & Lempus(x) & Imperator(x)) -> (Grimpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Lempus(x) & Imperator(x)) -> (Grimpus(x) | Brimpus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1150", "nl": "Everything that is a gorpus, a zumpus, and a jompus is a numpus and a vumpus and a brimpus.", "fol": "all x. ((gorpus(x) & zumpus(x) & jompus(x)) -> (numpus(x) & vumpus(x) & brimpus(x)))", "prediction": ["all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Vumpus(x) & Brimpus(x)))", "all x y.((Gorpus(x) & Zumpus(y) & Jompus(y)) -> (Numpus(x) & Vumpus(x) & Brimpus(x)))", "all x y z.((Gorpus(x) & Zumpus(y) & Jompus(z) & Gorpus(x) & Gorpus(y) & Gorpus(z) & Gorpus(y) & Gorpus(y) & Gorpus(y)) -> (Numpus(x) & Vumpus(x) & Brimpus(x)))", "all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Vumpus(x) & Brimpus(x)))", "all x.((Gorpus(x) & Zumpus(x) & Jompus(x)) -> (Numpus(x) & Vumpus(x) & Brimpus(x)))", "all x y z.((Gorpus(x) & Zumpus(y) & Jompus(z) & Gorpus(x) & Gorpus(x) & Gorpus(y) & Gorpus(z)) -> (Numpus(x) & Vumpus(x) & Brimpus(x)))", "all x y.((Gorpus(x) & Zumpus(y) & Jompus(y)) -> (Numpus(x) & Vumpus(x) & Brimpus(x)))", "all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Vumpus(x) & Brimpus(x)))", "(all x.((Gorpus(x) | Zumpus(x) | Jompus(x))) -> (Numpus(x) & Vumpus(x) & Brimpus(x)))", "all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (numpus(x) & vumpus(x) & brimpus(x)))", "all x.((Gorpus(x) & Zumpus(x) & Jompus(x)) -> (Numpus(x) & Vumpus(x) & Brimpus(x)))", "all x.(Gorpus(x) & Zumpus(x) & Jompus(x)) -> (Numpus(x) & Vumpus(x) & Brimpus(x)))", "all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Vumpus(x) & Brimpus(x)))", "(all x.((Gorpus(x) | Zumpus(x) | Jompus(x))) -> (Numpus(x) & Vumpus(x) & Brimpus(x)))", "all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Vumpus(x) & Brimpus(x)))", "all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Vumpus(x) & Brimpus(x)))"]}
{"id": "prontoqa_train_1151", "nl": "Wren is a gorpus.", "fol": "gorpus(Wren)", "prediction": ["all x.(Wren(x) -> Gorpus(x))", "all x.(Wren(x) -> Gorpus(x))", "all x.(Wren(x) -> Gorpus(x))", "(Gorpus(wren) & HasGorpa(wren,w))", "all x.(Wren(x) -> Gorpus(x))", "(Gorpus(wren) & Gorpus(wren))", "all x.(Wren(x) -> Gorpus(x))", "(Gorpus(wren) & HasGorps(wren,x))", "(Gorpus)", "all x.(Wren(x) -> Gorpus(x))", "all x.(Wren(x) -> Gorpus(x))", "(Gorpus)", "all x.(Wren(x) -> Gorpus(x))", "All x.(Wren(x) -> Gorpus(x))", "all x.(Wren(x) -> Gorpus(x))", "All x.(Wren(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_1152", "nl": "Wren is a jompus.", "fol": "jompus(Wren)", "prediction": ["all x.(Wren(x) -> Jompus(x))", "(Jompus(Wren) & -Jompus(Wren))", "all x.(Wren(x) -> Jompus(x))", "(Jompus(Wren) & Has(Wren,Wren))", "all x.(Wren(x) -> Jompus(x))", "(Jompus(Wren) & -Jompus(Wren))", "all x.(Wren(x) -> Jompus(x))", "(Jompus(Wren)", "all x.(Wren(x) -> Jompus(x))", "all x.(Wren(x) -> Jompus(x))", "(Jompus(Wren)", "all x.(Wren(x) -> Jompus(x))", "All x.(Wren(x) -> Jompus(x))", "all x.(Wren(x) -> Jompus(x))", "All x.(Wren(x) -> Jompus(x))", "All x.(Wren(x) -> Jompus(x))"]}
{"id": "prontoqa_train_1153", "nl": "Everything that is a dumpus or a wumpus or a tumpus is a sterpus, a yumpus, and a vumpus.", "fol": "all x. ((dumpus(x) | wumpus(x) | tumpus(x)) -> (sterpus(x) & yumpus(x) & vumpus(x)))", "prediction": ["all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Sterpus(x) & Yampus(x) & Vumpus(x)))", "all x.((Dumps(x) | Wumpus(x) | Tumpus(x)) -> (Sterpus(x) & Yampus(x) & Vumpus(x)))", "all x y.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Sterpus(y) & Yampus(y) & Vumpus(y)))", "all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Sterepus(x) & Yumpus(x) & Vumpus(x)))", "(all x.((Dumpus(x) | Wumpus(x) | Tumpus(x))) -> (Sterepus(x) | Yampus(x) | Vumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Sterpus(x) | Yumpus(x) | Vumpus(x)))", "all x y.((Dumps(x) | Wumpus(x) | Tumpus(x)) -> (Sterpus(y) & Yumpus(y) & Vumpus(y)))", "all x.((Dumps(x) | Wumpus(x) | Tumpus(x)) -> (Sterepus(x) & Yumpus(x) & Vumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Sterepus(x) & Yampus(x) & Vumpus(x)))", "(all x.((Dumpsus(x) | Wumpus(x) | Tumpus(x))) -> (Sterepus(x) & Yumpus(x) & Vumpus(x)))", "(all x.((Dumpus(x) | Wumpus(x) | Tumpus(x))) -> (Sterpus(x) | Yampus(x) | Vumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Sterpus(x) | Yampus(x) | Vumpus(x)))", "all x.(DumpusOrWumpusOrTumpus(x) -> (Sterpus(x) | Yampus(x) | Vumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Sterepus(x) & Yumpus(x) & Vumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Sterpus(x) | Yampus(x) | Vumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Sterepus(x) & Yampus(x) & Vumpus(x)))"]}
{"id": "prontoqa_train_1154", "nl": "Vumpuses are not rompuses.", "fol": "all x. (vumpus(x) -> -rompus(x))", "prediction": ["all x.(Vumpus(x) -> -Rompus(x))", "(all x.(Vumpus(x) -> -Rompus(x)))", "all x.(Vumpus(x) -> -Rompus(x))", "(-rompus(v) & -rompus(v))", "all x.(Vumpus(x) -> -rompus(x))", "(-rompuse(v) & -rompuse(v))", "-Rompus(v)", "(all x.(Vumpus(x) -> -Rompus(x)))", "all x.(Vumpus(x) -> -Rompus(x))", "all x.(Vumpus(x) -> -rompus(x))", "(all x.(Vumpus(x) -> -rompus(x))", "all x.(Voluptus(x) -> -rompus(x))", "all x.(Vumpus(x) -> -Rompus(x))", "all x.(Vumpus(x) -> -rompus(x))", "all x.(Vumpus(x) -> -Rompus(x))", "all x.(Vumpus(x) -> -Rompus(x))"]}
{"id": "prontoqa_train_1155", "nl": "Every brimpus is a rompus.", "fol": "all x. (brimpus(x) -> rompus(x))", "prediction": ["all x.(Brumpus(x) -> Rompus(x))", "all x.(Brimpus(x) -> Rompus(x))", "all x y.((Brumpus(x) & Rompus(y)) -> Has(x,y))", "all x.(Brumpus(x) -> Rompus(x))", "(all x.(Brimpus(x) -> Rompus(x))", "all x y.((Brimpus(x) & Rompus(y)) -> Is(x,y))", "all x.(Brimpus(x) -> Rompus(x))", "exists x.(Microsoft(x) & Brimpus(x) & Rompus(x))", "all x.(Brumpus(x) -> Rompus(x))", "all x.(Brimpus(x) -> Rompus(x))", "all x.(Brompus(x) -> Rompus(x))", "all x.(Brumpus(x) -> Rompus(x))", "exists x.(Brimpus(x) & Rimpus(x))", "all x.(Brimpus(x) -> Rompus(x))", "exists x.(Brimpus(x) & Rimpus(x))", "all x.(Brumpus(x) -> Romanus(x))"]}
{"id": "prontoqa_train_1156", "nl": "Fae is a numpus or Fae is not a brimpus or Fae is a lorpus.", "fol": "(numpus(Fae) | -brimpus(Fae) | lorpus(Fae))", "prediction": ["(all x.(Fae(x) -> Numpus(x)) | (-Brimpus(x) | Lorpus(x))))", "all x.(Fae(x) -> ((Numpus(x) | -Brimpus(x)) | (Lorpus(x)))))", "((Fae(f) & Numpus(f)) | (-Brimpus(f) & -Lorpus(f))))", "all x.(Fae(x) -> (Numpus(x) | -Brimpus(x) | Lorpus(x)))", "((Fae isNumpus(f) | Fae is-Brimpus(f)) | Fae isLorpus(f)))", "(exists x.(Fae(x) & (Numpus(x) | -Brimpus(x) | Lorpus(x))))", "all x y z.((Fae(x) & Numpus(x) & (Fae(y) | -Brimpus(y) | Fae(z))) -> (Lorpus(z))))", "all x y.((Fae(x) & Numpus(x)) | (-Brimpus(x) | Lorpus(y))))", "((Fae isNumpus) | Fae isNotBrimpus) | Fae isLorpus))", "(all x.(Fae(x) -> Numpus(x)) | (-Brimpus(x) | Lorpus(x))))", "(all x.(Fae(x) -> Numpus(x)) | (-Fae(x) & Brimpus(x)) | (-Fae(x) & Lorpus(x))))", "all x.(Fae(x) -> ((Numpus(x) | -Brimpus(x)) | Lorpus(x)))", "all x.(Fae(x) -> (Numpus(x) | -Brimpus(x) | Lorpus(x)))", "(exists x.(Fae(x) & (Numpus(x) | -Brimpus(x) | Lorpus(x)))", "exists x.(Fae(x) & ((Numpus(x) & -Brimpus(x)) | (Lorpus(x)))))", "all x.(Fae(x) -> ((Numpus(x) | -Brumpus(x) | Lorpus(x))))"]}
{"id": "prontoqa_train_1157", "nl": "Every jompus is a brimpus and a rompus and a numpus.", "fol": "all x. (jompus(x) -> (brimpus(x) & rompus(x) & numpus(x)))", "prediction": ["all x.(Jompus(x) -> (Brimpus(x) & Rompus(x) & Numpus(x)))", "all x y.((Jompus(x) & Brimpus(x) & Rompus(y) & Numpus(y)) -> (Brimpus(x) & Rompus(y) & Numpus(y)))", "(all x.(Jompus(x) -> Brimpus(x)) & all y.(Rompus(y) & all z.(Numpus(z)) -> Numpus(z))))", "all x.(Jompus(x) -> (Brimpus(x) & Rompus(x) & Numpus(x)))", "all x y.((Jompus(x) & Brimpus(y)) -> (Rompus(x) & Numpus(x)))", "(all x.(Jompus(x) -> Brimpus(x)) & (Rompus(x) & Numpus(x)))", "all x y z.(Jompus(x) -> (Brimpus(x) & Rompus(y) & Numpus(z)))", "all x.(Jompus(x) -> (Brimpus(x) & Rompus(x) & Numpus(x)))", "all x.(Jompus(x) -> (Brimpus(x) & Rompus(x) & Numpus(x)))", "exists x.(Jimpus(x) & Brimpus(x) & Rompus(x) & Numpus(x))", "(all x.(Jompus(x) -> Brimpus(x)) & all y.(Rompus(y) & all z.(Numpus(z) & -Brimpus(y))))", "all x.(Jompus(x) -> (Brumpus(x) | Rompus(x) | Numpus(x)))", "all x.(Jompus(x) -> (Brimpus(x) & Rompus(x) & Numpus(x)))", "exists x.(Jompus(x) & Brimpus(x) & Rompus(x) & Numpus(x))", "(all x.(Jompus(x) -> Brimpus(x)) & (Rompus(x) | Numpus(x)))", "all x.(Jompus(x) -> (Brimpus(x) & Rompus(x) & Numpus(x)))"]}
{"id": "prontoqa_train_1158", "nl": "Every sterpus is not a numpus.", "fol": "all x. (sterpus(x) -> -numpus(x))", "prediction": ["all x.(Sterpus(x) -> -Numpus(x))", "all x.(Sterpus(x) -> -Numpus(x))", "(all x.(Sterpus(x) -> -Numpus(x)))", "all x.(Steerpus(x) -> -Numpus(x))", "all x y.((Sterpus(x) & Numpus(y)) -> -Numpus(x))", "all x.(Sterpus(x) -> -Numpus(x))", "(all x.(Steerpus(x) -> -Numpus(x)))", "all x.(Stereopus(x) -> -Numpus(x))", "-numpus.", "all x.(Sterepus(x) -> -Numpus(x))", "all x.(Sterpus(x) -> -Numpus(x))", "all x.(Steerpus(x) -> -Numpus(x))", "all x.(Sterpus(x) -> -Numpus(x))", "exists x.(Sterpus(x) & -numpus(x))", "all x.(Sterpus(x) -> -Nompus(x))", "exists x.(Steerpus(x) & -Numpus(x))"]}
{"id": "prontoqa_train_1159", "nl": "Wren is a brimpus and a wumpus and a sterpus.", "fol": "(brimpus(Wren) & wumpus(Wren) & sterpus(Wren))", "prediction": ["all x.(Wren(x) -> (Brimpus(x) & Wumpus(x) & Sterpus(x)))", "all x y.((Wren(x) & Brimpus(y)) -> (Wumpus(x) & Sterpus(x)))", "all x y z.((Wren(x) & Brimpus(y) & Wumpus(z)) -> (Brimpus(x) & Wumpus(x) & Sterpus(x)))", "(all x.(Wren(x) -> Brimpus(x)) & (Wumpus(x) & Sterpus(x)))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wumpus(y) & -Sterpus(y))))", "all x.(Wren(x) -> (Brimpus(x) & Wumpus(x) & Sterpus(x)))", "all x.(Wren(x) -> (Brimpus(x) & Wumpus(x) & Sterpus(x)))", "(all x y.(Wren(x) -> Brimpus(x)) & (Wumpus(y) | Sterpus(y))))", "all x y.(Wren(x) -> (Brimpus(x) & Wumpus(y) & Sterpus(y)))", "(all x.(Wren(x) -> Brimpus(x)) & (Wumpus(x) | Sterpus(x))))", "exists x.(Wren(x) & Brimpus(x) & Wumpus(x) & Sterpus(x))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wumpus(y) & -Sterpus(y))))", "all x.(Wren(x) -> (Brimpus(x) | Wumpus(x) | Sterpus(x)))", "all x.(Wren(x) -> (Brumpus(x) & Wumpus(x) & Sterpus(x)))", "all x.(Wren(x) -> (Brimpus(x) | Wumpus(x) | Sterpus(x)))", "(all x.(Wren(x) -> Brimpus(x)) & (Wumpus(x) & Sterpus(x)))"]}
{"id": "prontoqa_train_1160", "nl": "Zumpuses are lempuses.", "fol": "all x. (zumpus(x) -> lempus(x))", "prediction": ["all x.(Zumpus(x) -> Lempuse(x))", "all x.(Zumpus(x) -> Lempuse(x))", "all x y.((Zumpus(x) & Lempuse(y)) -> Lempuse(x))", "(Lempuse(z) & Lempuse(z))", "(Lempuses(z) & Lempuse(z))", "all x.(Zumpus(x) -> Lempuse(x))", "all x y.((Zumpuse(x) & Lempuse(y)) -> Lempuse(x))", "all x y.((Zumpus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Zombie(x) -> Lempuse(x))", "all x.(Zumpus(x) -> Lempuse(x))", "all x.(Zumpus(x) -> Lempuse(x))", "all x.(Zumpus(x) -> Lempuse(x))", "All x.(Zumpuse(x) -> Lempuse(x))", "All x.(Zombies(x) -> Lempuse(x))", "all x.(Zumpus(x) -> Lempus(x))", "all x.(Zimpus(x) -> Lempuse(x))"]}
{"id": "prontoqa_train_1161", "nl": "Every lempus is a tumpus.", "fol": "all x. (lempus(x) -> tumpus(x))", "prediction": ["all x.(Lempus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumpus(x))", "all x y.((Lempus(x) & Tumpus(y)) -> Tumpus(x))", "(all x.(Lempus(x) -> Tumpus(x)))", "all x.(Lempus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumulus(x))", "all x.(Limpus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumpus(x))", "all x.(Limpus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumulus(x))", "exists x.(Lempus(x) & Tumpus(x))", "all x.(Limpus(x) -> Tumpus(x))", "exists x.(Lempus(x) & Tumpus(x))", "exists x.(Lempus(x) & Tumulus(x))"]}
{"id": "prontoqa_train_1162", "nl": "Fae is a zumpus.", "fol": "zumpus(Fae)", "prediction": ["all x.(Fae(x) -> Zumpus(x))", "Fae is a zumpus.", "all x.(Fae(x) -> Zumpus(x))", "-Zumpus(Fae)", "(Zumpus(Fae) & Has(Fae,Fae))", "Fae is a zumpus.", "all x.(Fae(x) -> Zumpus(x))", "(Zumpus(fe) & Has(fe) & Has(fe))", "(Tompus(fae) & HasTompus(fae))", "(Zumpus(Fae))", "all x.(Fae(x) -> Zumpus(x))", "(Tompus)", "all x.(Fae(x) -> Zumpus(x))", "All x.(Fae(x) -> Zumpus(x))", "all x.(Fae(x) -> Zumpus(x))", "exists x.(Fae(x) & Zumpus(x))"]}
{"id": "prontoqa_train_1163", "nl": "Fae is a sterpus, a zumpus, and a wumpus.", "fol": "(sterpus(Fae) & zumpus(Fae) & wumpus(Fae))", "prediction": ["all x.(Fae(x) -> (Sterpus(x) & Zumpus(x) & Wumpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & all y.(Tompus(y) -> Wumpus(y)))", "(Sterpus(Fae) & Zumpus(Fae) & Wumpus(Fae))", "all x.(Fae(x) -> (Sterepus(x) | Zumpus(x) | Wumpus(x)))", "all x y z.((Fae(x) & Sterpus(y) & Zumpus(z)) -> (Sterpus(x) & Wumpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & (Zumpus(x) & Wumpus(x)))", "(Sterpus(fae) | Zumpus(fae) | Wumpus(fae))", "all x.(Fae(x) -> (Sterpus(x) & Zumpus(x) & Wumpus(x)))", "(All x.(Fae(x) -> Sterpus(x)) & (Zumpus(x) | Wumpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & all y.(Zumpus(y) & -Wumpus(y)))", "all x.(Fae(x) -> (Sterepus(x) | Zumpus(x) | Wumpus(x)))", "(All x.(Fae(x) -> Sterus(x)) & (Zumpus(x) & Wumpus(x)))", "exists x.(Fae(x) & Sterpus(x) & Zumpus(x) & Wumpus(x))", "all x.(Fae(x) -> (Sterpus(x) & Zumpus(x) & Wumpus(x)))", "all x.(Fae(x) -> (Sterepus(x) | Zumpus(x) | Wumpus(x)))", "exists x.(Fae(x) & Sterepus(x) & Zumpus(x) & Wumpus(x))"]}
{"id": "prontoqa_train_1164", "nl": "Fae is not a dumpus and Fae is a brimpus and Fae is a tumpus.", "fol": "(-dumpus(Fae) & brimpus(Fae) & tumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Dumpus(x)) & (Brimpus(x) | Tumpus(x))))", "all x y z.((Fae(x) & Dumpus(y) & Brimpus(z)) -> (-Dumpus(x) & Brimpus(x) & Tumpus(x)))", "(all x.(Fae(x) -> -Dumpus(x)) & all y.(Fae(y) -> Brimpus(y)) & all z.(Fae(z) -> Tumpus(z))))", "(all x y.((Fae(x) & Dumpus(y)) -> -Dumpus(x)) & ((Fae(x) & Brimpus(x)) -> Tumpus(x)))", "all x.(Fae(x) -> (-Dumpus(x) & Brimpus(x) & Tumpus(x)))", "(all x y z.((Fae(x) & Dumpus(y)) -> -Dumpus(x)) & ((Fae(z) & Brimpus(z)) -> Tumpus(z)))", "(all x.(Fae(x) -> -Dumpus(x)) & (Fae(x) -> Brimpus(x)) & (Fae(x) -> Tumpus(x)))", "(-Dumpus(Fae) & Brimpus(Fae) & Tumpus(Fae))", "all x y z.((Fae(x) & Dumpus(y) & Brimpus(z)) -> (-Dumpus(x) & Brimpus(x) & Tumpus(x)))", "all x y.((Fae(x) & Dumpus(y)) -> (-Dumpus(x) & Brimpus(x) & Tumpus(x)))", "exists x.(Fae(x) & -Dumpus(x) & Brimpus(x) & Tumpus(x))", "(all x.(Fae(x) -> -Dumpus(x)) & all y.(Brimpus(y) & -Tumpus(y)))", "all x y z.((Fae(x) & Dumpus(y) & Brimpus(z)) -> (-Dumpus(x) & Brimpus(x) & Tumpus(x)))", "(all x.(Fae(x) -> -Dumps(x)) & (Brimpus(x) | Tumpus(x)))", "all x y.((Fae(x) & Dumpus(y)) -> (-Dumpus(x) & Brimpus(y) & Tumpus(y)))", "all x y z.((Fae(x) & Dumpus(y) & Brimpus(z)) -> (-Dumpus(x) & Brimpus(y) & Tumpus(z)))"]}
{"id": "prontoqa_train_1165", "nl": "Fae is a tumpus and Fae is a numpus and Fae is not a grimpus.", "fol": "(tumpus(Fae) & numpus(Fae) & -grimpus(Fae))", "prediction": ["(all x.(Fae(x) -> Tumpus(x)) & (Fae(x) -> Numpus(x)) & -Fae(x)))", "all x y z.((Fae(x) & Tumpus(x) & Numpus(y) & Grimpus(z)) -> (Tumpus(x) & Numpus(y) & -Grimpus(z)))", "(all x.(Fae(x) -> Tumpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Grimpus(z))))", "(all x y.(Fae(x) -> Tumpus(x)) & (Fae(y) -> Numpus(y)) & (Fae(y) -> -Grimpus(y)))", "(all x y z.((Fae(x) & Tumpus(y)) -> Tumpus(x)) & ((Fae(z) & Numpus(z))) -> -Grimpus(z)))", "(all x.(Fae(x) -> Tumpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Grimpus(x)))", "all x y.((Fae(x) & Tumpus(x) & Fae(y)) -> (Numpus(y) & -Grimpus(y)))", "exists x.(Fae(x) & Tumpus(x) & Numpus(x) & -Grimpus(x))", "all x y z.((Fae(x) & Tumpus(x) & Numpus(y) & Grimpus(z)) -> (Tumpus(x) & Numpus(y) & -Grimpus(z)))", "all x.(Fae(x) -> (Tumpus(x) & Numpus(x) & -Grimpus(x)))", "all x y z.((Fae(x) & Tompus(y) & Numpus(z)) -> (Tumpus(x) & Numpus(z) & -Grimpus(x)))", "(all x.(Fae(x) -> Tumpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Grimpus(z))))", "(all x y.(Fae(x) -> Tumpus(x)) & (Fae(y) -> Numpus(y)) & (Fae(y) -> -Grimpus(y)))", "all x y.((Fae(x) & Fae(y)) -> (Tumpus(x) & Numpus(y) & -Grimpus(y)))", "all x.(Fae(x) -> (Tumpus(x) & Numpus(x) & -Grimpus(x)))", "(all x.(Fae(x) -> Tumpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Grimpus(x)))"]}
{"id": "prontoqa_train_1166", "nl": "Tumpuses are yumpuses, zumpuses, and brimpuses.", "fol": "all x. (tumpus(x) -> (yumpus(x) & zumpus(x) & brimpus(x)))", "prediction": ["all x.(Tumpus(x) -> (Yumpus(x) | Zumpus(x) | Brimpuse(x)))", "(Yumpuses(TM) | Zumpuses(TM) | Brimpuses(TM))", "(all x.(Tumpus(x) -> Yumpuse(x)) & all y.(Tompus(y) -> Brimpuse(y)))", "all x y z.((Tumpus(x) & Zumpus(y) & Brimpuse(z)) -> (Yumpus(x) | Brimpuse(y)))", "all x.(Tumpus(x) -> (Yumpus(x) | Zumpus(x) | Brimpuse(x)))", "(all x.(Tumpus(x) -> Yumpus)) & all y.(Tompus(y) -> Brimpuse(y)))", "all x y.((Tumpus(x) & Zumpus(y)) -> (Yumpus(x) | Brimpuse(x)))", "(yumpuses(y) | zumpuses(y) | brimpuses(y)))", "(all x.(Tumpus(x) -> Yampus(x)) & all y.(Tompus(y) -> Brimpuse(y)))", "all x.(Tumpus(x) -> (Yumpus(x) | Zumpus(x) | Brimpuse(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Zumpus(x) | Brimpuse(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Zumpus(x) | Brimpus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Zumpus(x) | Brimpuse(x)))", "all x.(Tumpus(x) -> (Yumpus(x) & Zumpus(x) & Brimpuse(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Zumpus(x) | Brimpuse(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Zumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_1167", "nl": "Stella is a tumpus.", "fol": "tumpus(Stella)", "prediction": ["Stella is a tumpus.", "all x.(Tumpus(x) -> Stella(x))", "(Tumpus(Stella) & HasTumpus(Stella))", "Stella is a tumpus.", "(Tumpus(Stella) & Tumpus(Stella))", "all x.(Tumpus(x) -> Stella(x))", "Stella is a Tumpus.", "Stella is tumpus.", "Stella is Tumpus(Stella)", "all x.(Tumpus(x) -> Stella(x))", "(Tumpus(Stella))", "Stella (Tumpus)", "Stella is a tumpus.", "(Tumpus(Stella) & HasTumpus(Stella))", "all x.(Tumpus(x) -> Stella(x))", "Stella is tumpus."]}
{"id": "prontoqa_train_1168", "nl": "Stella is a zumpus, a grimpus, or a rompus.", "fol": "(zumpus(Stella) | grimpus(Stella) | rompus(Stella))", "prediction": ["all x.(Stella(x) -> (Tompus(x) | Grimpus(x) | Rompus(x)))", "(Tompus(Stella) | Grimpus(Stella) | Rompus(Stella)))", "all x.(Stella(x) -> (Tompus(x) | Grimpus(x) | Rompus(x)))", "(all x.(Stella(x) -> Zumpus(x) | Grimpus(x) | Rompus(x)))", "all x.((Stella(x) & (Tompus(x) | Grimpus(x) | Rompus(x))) -> Tompus(x))", "all x y.((Stella(x) & Zumpus(y)) | Grimpus(y) | Rompus(y))", "(Zumpus, Grimpus,Rompus)", "all x.(Stella(x) -> (Tompus(x) | Grimpus(x) | Rompus(x)))", "(Tompus(Stella) | Grimpus(Stella) | Rompus(Stella))", "all x.(Stella(x) -> (Zumpus(x) | Grimpus(x) | Rompus(x)))", "(Tompus, Grimpus,Rompus)", "all x.(Stella(x) -> (Tompus(x) | Grimpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Zumpus(x) | Grimpus(x) | Rompus(x)))", "exists x.(Stella(x) & (Zumpus(x) | Grimpus(x) | Rompus(x)))", "exists x.(Stella(x) & (Zumpus(x) | Grimpus(x) | Rompus(x)))", "exists x.(Stella(x) & (Tommus(x) | Grimpus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1169", "nl": "Everything that is a sterpus and a lempus and a rompus is a yumpus.", "fol": "all x. ((sterpus(x) & lempus(x) & rompus(x)) -> yumpus(x))", "prediction": ["all x.((Sterpus(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))", "all x.((Sterpus(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))", "all x y.((Sterpus(x) & Lempus(y) & Rompus(y)) -> Yumpus(x))", "all x.(((Sterpus(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))", "all x.((Sterpus(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))", "all x y.((Sterpus(x) & Lempus(y) & Rompus(y)) -> Yumpus(x))", "all x.((Sterpus(x) | Lempus(x) | Rompus(x)) -> Yumpus(x))", "all x.((Stereo(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))", "(all x.((Sterepus(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))", "all x.((Sterpus(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))", "all x y.((Sterpus(x) & Lempus(x) & Rompus(y)) -> Yumpus(x))", "all x.((Sterpus(x) & Lempus(x) & Rompus(x)) -> Yampus(x))", "(all x.((Sterpus(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))", "all x.((Sterepus(x) | Lempus(x) | Rompus(x)) -> Yumpus(x))", "all x.((Stereo(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))", "all x.((Stereo(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))"]}
{"id": "prontoqa_train_1170", "nl": "Max is a zumpus, a yumpus, or an impus.", "fol": "(zumpus(Max) | yumpus(Max) | impus(Max))", "prediction": ["all x.(Max(x) -> (Tompus(x) | Yumpus(x) | Imperator(x)))", "(all x.(Max(x) -> Zumpus(x)) & all y.(Max(y) -> Yumpus(y))) & all z.(Max(z) -> Impossible(z)))", "all x.(Max(x) -> (Zumpus(x) | Yumpus(x) | Imperator(x)))", "(Zumpus(x) | Yumpus(x) | Imperator(x))", "(All x.(Max(x) -> Zumpus(x) | All y.(Max(y) & -Zumpus(y))))", "all x y.((Max(x) & (Zumpus(y) | Yumpus(y) | Imperator(y))) -> (Tompus(x) | Yumpus(y)))", "all x.(Max(x) -> (Tompus(x) | Yumpus(x) | Imperator(x)))", "(Zumpus,yumpus,impossible(x))", "(Tompus(max) | Yumpus(max) | Imperator(max))", "all x.(Max(x) -> (Zumpus(x) | Yumpus(x) | Imperator(x)))", "all x.(Max(x) -> (Tompus(x) | Yumpus(x) | Impossible(x)))", "all x.(Max(x) -> (Tompus(x) | Yumpus(x) | Imperator(x)))", "all x.(Max(x) -> (Zumpus(x) | Yumpus(x) | Impossible(x)))", "all x.(Max(x) -> (Tompus(x) | Yumpus(x) | Imperator(x)))", "all x.(Max(x) -> (Zumpus(x) | Yumpus(x) | Imperator(x)))", "exists x.(Max(x) & (Zumpus(x) | Yumpus(x) | Issue(x)))"]}
{"id": "prontoqa_train_1171", "nl": "Everything that is a numpus, a vumpus, and a zumpus is a gorpus, a tumpus, and a sterpus.", "fol": "all x. ((numpus(x) & vumpus(x) & zumpus(x)) -> (gorpus(x) & tumpus(x) & sterpus(x)))", "prediction": ["all x.((Numpus(x) | Vumpus(x) | Zumpus(x)) -> (Gorpus(x) | Tumpus(x) | Sterpus(x)))", "all x.((Nompus(x) | Vumpus(x) | Zumpus(x)) -> (Gorpus(x) & Tumpus(x) & Sterpus(x)))", "all x y.((Numpus(x) & Vumpus(y) & Zumpus(x)) -> (Gorpus(y) | Tumpus(y) | Sterpus(y)))", "all x y z.((Numpus(x) & Vumpus(y) & Zumpus(z) & Gorpus(x) & Tumpus(x) & Sterpus(x)) -> (Gorpus(x) & Tumpus(x) & Sterpus(x)))", "all x.((Nompus(x) | Voompus(x) | Zumpus(x)) -> (Gorpus(x) | Tumpus(x) | Sterpus(x)))", "all x.((Numpus(x) & Vumpus(x) & Zumpus(x)) -> (Gorpus(x) & Tumpus(x) & Sterpus(x)))", "(all x.((Numpus(x) | Vumpus(x) | Zumpus(x)) -> (Gorpus(x) | Tumpus(x) | Sterpus(x)))", "all x.((Numpus(x) | Vumpus(x) | Zumpus(x)) -> (Gorpus(x) | Tumpus(x) | Sterpus(x)))", "all x y.((Nompus(x) & Vumpus(x) & Zumpus(y)) -> (Gorpus(x) & Tumpus(x) & Sterpus(x)))", "all x.((Nompus(x) | Vumpus(x) | Zumpus(x)) -> (Gorpus(x) & Tumpus(x) & Sterpus(x)))", "all x.((Numpus(x) & Vumpus(x) & Zumpus(x)) -> (Gorpus(x) | Tumpus(x) | Sterpus(x)))", "all x.((Numpus(x) | Vumpus(x) | Zumpus(x)) -> (Gorpus(x) & Tumpus(x) & Sterpus(x)))", "(all x.((Nompus(x) | Voompus(x) | Zumpus(x))) -> (Gorpus(x) | Tumpus(x) | Sterpus(x)))", "(all x.((Numpus(x) | Vumpus(x) | Zumpus(x))) -> (Gorpus(x) & Tumpus(x) & Sterpus(x)))", "all x.((Numpus(x) & Vumpus(x) & Zumpus(x)) -> (Gorpus(x) & Tumpus(x) & Sterpus(x)))", "all x.(Numpus(x) & Vumpus(x) & Zumpus(x)) -> (Gorpus(x) & Tumpus(x) & Sterpus(x)))"]}
{"id": "prontoqa_train_1172", "nl": "Wren is a numpus.", "fol": "numpus(Wren)", "prediction": ["all x.(Wren(x) -> Numpus(x))", "all x.(Wren(x) -> Numpus(x))", "(Numpus(Wren) & Numpus(Wren))", "all x.(Wren(x) -> Numpus(x))", "(Numpus(wren) & Numpus(wren))", "(Numpus(wren) & HasNumismo(wren))", "all x.(Wren(x) -> Numpus(x))", "(Numpus(wren) & Numpus(wren) & Numpus(wren))", "all x.(Wren(x) -> Numpus(x))", "all x.(Wren(x) -> Numpus(x))", "(Numpus)", "all x.(Wren(x) -> Numpus(x))", "All x.(Wren(x) -> Numpus(x))", "all x.(Wren(x) -> Numpus(x))", "All x.(Wren(x) -> Numpus(x))", "All x.(Wren(x) -> Numpus(x))"]}
{"id": "prontoqa_train_1173", "nl": "Wren is a vumpus.", "fol": "vumpus(Wren)", "prediction": ["all x.(Wren(x) -> Vumpus(x))", "(Vumpus(Wren) & -Vumpus(Wren))", "all x.(Wren(x) -> Vumpus(x))", "(Vumpus(Wren) & Vulmpus(Wren))", "all x y.((Wren(x) & Vumpus(y)) -> Vumpus(x))", "all x.(Wren(x) -> Vampire(x))", "(Vimpus) & Wren(Wren))", "(Vumpus(Wren) & HasVumpus(Wren))", "all x.(Wren(x) -> Vumpus(x))", "(Vumpus(wren) -> Vulmpus(wren))", "all x.(Wren(x) -> Vulmpus(x))", "all x.(Wren(x) -> Vampus(x))", "all x.(Wren(x) -> Vumpus(x))", "All x.(Wren(x) -> Vumpus(x))", "exists x.(Wren(x) & Vulpu(x))", "All x.(Winner(x) -> Vampus(x))"]}
{"id": "prontoqa_train_1174", "nl": "Numpuses are wumpuses.", "fol": "all x. (numpus(x) -> wumpus(x))", "prediction": ["all x.(Numpus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wumpus(x))", "all x y.((Numpus(x) & Wumpus(y)) -> Wumpus(x))", "(Wumpuse(Numpus) & Wumpus(Numpus))", "(Wumpuse(Numpus) & -Wumpus(Numpus))", "all x.(Numpus(x) -> Wumpus(x))", "(Wumpuse(n) & Numpus(n))", "all x y.((Numpus(x) & Wumpus(y)) -> Wumpus(x))", "all x.(Numpuse(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wumpus(x))", "all x.(Numpuse(x) -> Wampus(x))", "all x.(Numpus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wampus(x))", "all x.(Numpus(x) -> Wumpus(x))", "all x.(Numpuse(x) -> Wampuse(x))"]}
{"id": "prontoqa_train_1175", "nl": "Max is not a wumpus, Max is a lempus, and Max is a gorpus.", "fol": "(-wumpus(Max) & lempus(Max) & gorpus(Max))", "prediction": ["(all x.(Max(x) -> -Wumpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z))))", "all x y z.((Max(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(x) & Gorpus(x)))", "(all x.(Max(x) -> -Wumpus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> Gorpus(x)))", "(all x y z.((Max(x) & Wumpus(y)) -> -Wumpus(x)) & ((Max(z) & Lempus(z))) -> Gorpus(z)))", "all x.(Max(x) -> (-Wumpus(x) & Lempus(x) & Gorpus(x)))", "all x y z.((Max(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(x) & Gorpus(x)))", "(-Wumpus(Max) & Lempus(Max) & Gorpus(Max))", "(all x.(Max(x) -> -Wumpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z))))", "all x y z.((Max(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) | (-Wumpus(x) & Lempus(z) & Gorpus(z))))", "all x.(Max(x) -> (-Wumpus(x) & Lempus(x) & Gorpus(x)))", "(all x y z.((Max(x) & Wumpus(y)) -> -Wumpus(x)) & ((Max(z) & Lempus(z))) -> Gorpus(z)))", "(all x y z.((Max(x) & Wumpus(y) & Lempus(z)) -> -Wumpus(x)) & ((Max(x) & Gorpus(x)) -> Gorpus(x)))", "(all x.(Max(x) -> -Wumpus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> Gorpus(x)))", "all x y z.((Max(x) & Wumpus(y) & Lempus(z) & Gorpus(x)) -> (-Wumpus(x) & Lempus(y) & Gorpus(z)))", "all x y z.((Max(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(x) & Gorpus(x)))", "(all x.(Max(x) -> -Wumpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z)))"]}
{"id": "prontoqa_train_1176", "nl": "Max is not a numpus or Max is a jompus or Max is a lorpus.", "fol": "(-numpus(Max) | jompus(Max) | lorpus(Max))", "prediction": ["((Max(Max) & -Numpus(Max)) | (Max(Max) & Jompus(Max)) | (Max(Max) & Lorpus(Max))))", "all x.(Max(x) -> (-Numpus(x) | Jompus(x) | Lorpus(x)))", "(exists x.(Max(x) & -Numpus(x)) | exists y.(Max(y) & Jompus(y))) | exists z.(Max(z) & Lorpus(z))))", "all x.((Max(x) & -Numpus(x)) | (Max(x) & Jompus(x)) | (Max(x) & Lorpus(x))))", "(exists x.(Max(x) & -numpus(x)) | exists y.(Max(y) & Jompus(y))) | exists z.(Max(z) & Lorpus(z))))", "all x y.((Max(x) & -Numpus(x) & Max(y)) | (Jompus(y) | Lorpus(y))))", "(all x.(Max(x) -> -Numpus(x)) | (Max(x) -> Jompus(x)) | (Max(x) -> Lorpus(x))))", "((Max(Max) & -Numpus(Max)) | (Max(Max) & Jompus(Max)) | (Max(Max) & Lorpus(Max))))", "all x.(Max(x) -> (-Numpus(x) | Jompus(x) | Lorpus(x)))", "all x y z.((Max(x) & Numpus(y) & Jompus(z)) | (Max(x) & Lorpus(x))))", "all x.(Max(x) -> (-Numpus(x) | (Jompus(x) | Lorpus(x))))", "((Max(Max) & -Numpus(Max)) | (Max(Max) & Jompus(Max)) | (Max(Max) & Lorpus(Max))))", "all x.((Max(x) & -Numpus(x)) | (Max(x) & Jompus(x)) | (Max(x) & Lorpus(x))))", "(all x.(Max(x) -> (-numpus(x) | Jompus(x) | Lorpus(x))))", "exists x.(Max(x) & ((Nompus(x) & -Jompus(x)) | Lorpus(x))))", "all x.(Max(x) -> (-Numpus(x) | Jompus(x) | Lorpus(x)))"]}
{"id": "prontoqa_train_1177", "nl": "Everything that is a numpus or a grimpus or a vumpus is a gorpus.", "fol": "all x. ((numpus(x) | grimpus(x) | vumpus(x)) -> gorpus(x))", "prediction": ["all x.((Nompus(x) | Grimpus(x) | Vumpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Grimpus(x) | Vumpus(x)) -> Gorpus(x))", "all x y.((Nompus(x) | Grimpus(x) | Vumpus(x)) -> Gorpus(y))", "all x.((Nompus(x) | Grimpus(x) | Vumpus(x)) -> Gorpus(x))", "all x.(((Nompus(x) | Grimpus(x) | Vumpus(x))) -> Gorpus(x))", "all x.((Numpus(x) | Grimpus(x) | Vumpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Grimpus(x) | Voompus(x)) -> Gorpus(x))", "all x y.((Nompus(x) | Grimpus(x) | Vumpus(x)) -> Gorpus(y))", "all x.((Numpus(x) | Gruppus(x) | Vumpus(x)) -> Gorpus(x))", "all x.((Numpus(x) | Grimpus(x) | Voompus(x)) -> Gorpus(x))", "all x.((Numpus(x) | Grimpus(x) | Vumpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Grapple(x) | Vumpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Grimpus(x) | Vumpus(x)) -> Gorpus(x))", "all x.((Number(x) | Gruppus(x) | Vumpus(x)) -> Gorpus(x))", "all x.((Numpus(x) | Grimpus(x) | Vampus(x)) -> Gorpus(x))", "all x.((Numpus(x) | Grimpus(x) | Vacus(x)) -> Gorpus(x))"]}
{"id": "prontoqa_train_1178", "nl": "Stella is a lorpus, Stella is a jompus, and Stella is not a gorpus.", "fol": "(lorpus(Stella) & jompus(Stella) & -gorpus(Stella))", "prediction": ["(all x.(Stella(x) -> Lorpus(x)) & (Stella(x) -> Jompus(x)) & (Stella(x) -> -Gorpus(x)))", "all x y z.((Stella(x) & Lorpus(y) & Jompus(z)) -> (Lorpus(x) & Jompus(x) & -Gorpus(x)))", "(all x.(Lorpus(x) -> Stella(x)) & all y.(Jompus(y) -> Stella(y))) & all z.(Gorpus(z) -> Stella(z)))", "(all x y z.((Stella(x) & Lorpus(y)) -> (Lorpus(x) | Jompus(y)) & -Gorpus(z)))", "(all x y z.((Lorpus(x) & Jompus(y)) -> (Lorpus(x) & Jompus(y)) & ((Lorpus(z) & -Gorpus(z))) -> (Lorpus(z) & Jompus(z))))", "all x.(Stella(x) -> (Lorpus(x) | Jompus(x) | -Gorpus(x)))", "all x y z.((Lorpus(x) & Jompus(y) & Gorpus(z)) -> (Lorpus(x) & Jompus(y) & -Gorpus(z)))", "all x y z.((Stella(x) & Lorpus(y) & Jompus(z)) -> (Lorpus(x) | Jompus(z) | -Gorpus(z)))", "(all x.(Lorpus(x) -> Stella)) & (Jompus(x) -> Stella)) & -Gorpus(x)))", "(all x.(Stella(x) -> Lorpus(x)) & (Stella(x) -> Jompus(x)) & -Stella(x)))", "all x y z.((Stella(x) & Lorpus(x) & Jompus(y) & -Gorpus(z)) -> (Lorpus(x) & Jompus(y) & -Stella(z)))", "exists x.(Lorpus(x) & Jompus(x) & -Gorpus(x))", "(all x.(Stella(x) -> Lorpus(x)) & all y.(Stella(y) -> Jompus(y)) & all z.(Stella(z) -> -Gorpus(z))))", "(all x y z.(Lorpus(x) -> Stella(x)) & (Jompus(y) -> Stella(z))) & (Gorpus(z) -> Stella(z)))", "all x y z.(Lorpus(x) & Jompus(y) & Gorpus(z)) -> (Lorpus(x) & Jompus(y) & -Gorpus(z)))", "(all x.(Lorpus(x) | Jompus(x)) & -Gorpus(x))"]}
{"id": "prontoqa_train_1179", "nl": "Every vumpus is a numpus, a lorpus, and a shumpus.", "fol": "all x. (vumpus(x) -> (numpus(x) & lorpus(x) & shumpus(x)))", "prediction": ["all x.(Vumpus(x) -> (Numpus(x) | Lorpus(x) | Humpus(x)))", "(all x.(Vumpus(x) -> Numpus(x)) & all y.(Lorpus(y) & All z.(Shumpus(z)) -> Shumpus(z))))", "all x.(Vumpus(x) -> (Numpus(x) | Lorpus(x) | Humpus(x)))", "all x.(Vumpus(x) -> (Numpus(x) & Lorpus(x) & Humpus(x)))", "all x y.((Vumpus(x) & Numpus(y)) -> (Lorpus(y) & Humpus(y)))", "all x y z.(Vumpus(x) -> (Numpus(y) | Lorpus(y) | Humpus(z)))", "(all x.(Vumpus(x) -> Numpus(x)) & all y.(Lorpus(y) -> Humpus(y)))", "all x.(Vumpus(x) -> (numpus(x) | lorpus(x) | shumpus(x)))", "(all x.(Vumpus(x) -> Numpus(x)) & (Lorpus(x) -> Humpus(x)))", "exists x.(Vumpus(x) & Numpus(x) & Lorpus(x) & Humpus(x))", "all x.(Vumpus(x) -> (Numpus(x) & Lops(x) & Humpus(x)))", "all x.(Vumpus(x) -> (Numpus(x) | Lorpus(x) | Humpus(x)))", "(all x.(Vumpus(x) -> Numpus(x)) & all y.(Lorpus(y) & All z.(Shumpus(z)) -> Simpus(x)))", "all x.(Vumpus(x) -> (Numpus(x) | Lorpus(x) | Humpus(x)))", "exists x.(Vumpus(x) & Numpus(x) & Lorpus(x) & Humpus(x))", "all x.(Vumpus(x) -> (Numpus(x) & Lorpus(x) & Humpus(x)))"]}
{"id": "prontoqa_train_1180", "nl": "Sam is a tumpus or a jompus or a numpus.", "fol": "(tumpus(Sam) | jompus(Sam) | numpus(Sam))", "prediction": ["all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "(Tumpus(sam) | Jompus(sam) | Numpus(sam)))", "(all x.(Sam(x) -> Tumpus(x)) | (Jompus(x) | Numpus(x))))", "all x y.((Sam(x) & Tumpus(y)) | (Jompus(y) | Numpus(y))))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "all x y.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(y)))", "exists x.(Sam(x) & ((Tumpus(x) & -Jompus(x)) | (-Tumpus(x) & Jompus(x)))))", "(Tumpus(sam) | Jompus(sam) | Numpus(sam)))", "(all x.(Sam(x) -> Tumpus(x)) | (Jompus(x) | Numpus(x))))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "exists x.(Sam(x) & ((Tumpus(x) & -Jimpus(x)) | (-Jimpus(x) & -Jimpus(x)))))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))"]}
{"id": "prontoqa_train_1181", "nl": "Everything that is a shumpus, a numpus, or a rompus is a yumpus.", "fol": "all x. ((shumpus(x) | numpus(x) | rompus(x)) -> yumpus(x))", "prediction": ["all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpus(x))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpus(x))", "all x.(((Shumpus(x) | Numpus(x) | Rompus(x))) -> Yumpus(x))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yampus(x))", "all x y.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yampus(y))", "all x.(((Shumpus(x) | Numpus(x) | Rompus(x))) -> Yumpus(x))", "all x.(Yumpus(x) -> (Shumpus(x) | Numpus(x) | Rompus(x)))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpus(x))", "all x.(Yumpus(x) -> ((Shumpus(x) | Numpus(x) | Rompus(x)) & Has(x,y)))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpus(x))", "all x y.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpus(y))", "(all x.((Shumpus(x) | Numpus(x) | Rompus(x))) -> Yumpus(x))", "all x.(((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpus(x))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yampus(x))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpus(x))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpus(x))"]}
{"id": "prontoqa_train_1182", "nl": "Each numpus is a brimpus.", "fol": "all x. (numpus(x) -> brimpus(x))", "prediction": ["all x.(Nompus(x) -> Brimpus(x))", "all x.(Numpus(x) -> Brimpus(x))", "(all x.(Numpus(x) -> Brimpus(x)))", "all x y.((Numpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Numpus(x) -> Brimpus(x))", "all x y.((Numpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Numerus(x) -> Brimpus(x))", "all x.(Nompus(x) -> Brimpus(x))", "all x y.((Numpus(x) & Brimpus(y)) -> Is(x,y))", "exists x.(numpus(x) & Brimpus(x))", "all x.(Numpus(x) -> Brimpus(x))", "all x.(Numpus(x) -> Brimpus(x))", "exists x.(Numerus(x) & Brimpus(x))", "all x.(Nompus(x) -> Brimpus(x))", "all x.(Numpus(x) -> Brimpus(x))", "exists x.(Numpus(x) & Brimpus(x))"]}
{"id": "prontoqa_train_1183", "nl": "Each brimpus is a jompus.", "fol": "all x. (brimpus(x) -> jompus(x))", "prediction": ["all x.(Brimpus(x) -> Jompus(x))", "all x.(Brumpus(x) -> Jompus(x))", "all x y.((Brimpus(x) & Jompus(y)) -> Has(x,y))", "(all x.(Brimpus(x) -> Jompus(x)))", "all x.(Brimpus(x) -> Jompus(x))", "all x y.((Brumpus(x) & Jompus(y)) -> HasBrompus(x,y))", "all x.(Brumpus(x) -> Jompus(x))", "all x y.((Brimpus(x) & Jompus(y)) -> Has(x,y))", "exists x.(Brimpus(x) & Jompus(x))", "all x.(Brimpus(x) -> Jompus(x))", "all x.(Brumpus(x) -> Jompus(x))", "all x.(Brimpus(x) -> Jompus(x))", "all x.(Brumpus(x) -> Jompus(x))", "exists x.(Brampus(x) & JOMPUS(x))", "all x.(Brimpus(x) -> Jompus(x))", "exists x.(Brimpus(x) & Jompus(x))"]}
{"id": "prontoqa_train_1184", "nl": "Alex is a numpus.", "fol": "numpus(Alex)", "prediction": ["all x.(Alex(x) -> Numpus(x))", "Alex is Numpus(Alex)", "all x.(Alex(x) -> Numpus(x))", "Alex is a Numpus.", "Alex is Numpus(Alex)", "(Numpus(Alex) & HasNumber(Alex))", "all x.(Alex(x) -> Numpus(x))", "Alex is a Numpus.", "Alex is Numpus.", "all x.(Alex(x) -> Numpus(x))", "Alex is Numpus(Alex)", "(Numpus(Alex) & HasNums(Alex))", "all x.(Alex(x) -> Numpus(x))", "All x.(Alex(x) -> Numpus(x))", "all x.(Alex(x) -> Numpus(x))", "All x.(Alex(x) -> Numpus(x))"]}
{"id": "prontoqa_train_1185", "nl": "Alex is a zumpus, Alex is a lorpus, and Alex is not an impus.", "fol": "(zumpus(Alex) & lorpus(Alex) & -impus(Alex))", "prediction": ["(all x.(Alexa(x) -> Zumpus(x)) & all y.(Alexa(y) -> Lorpus(y)) & -Impossible(y)))", "all x y z.((Alex(x) & Zumpus(x) & Lorpus(y) & Is(z)) -> (Lorpus(x) & -Impossible(x)))", "(all x.(Alex(x) -> Zumpus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> -Impossible(z))))", "all x y z.((Alex(x) & Zumpus(x) & Lorpus(y) & -Impossible(z)) -> (Tompus(x) & Lorpus(y) & -Impossible(z)))", "(all x.(Alexa(x) -> Zumpus(x)) & all y.(Alexa(y) -> Lorpus(y)) & all z.(Alexa(z) -> -Impossible(z))))", "all x.(Alex(x) -> (Tompus(x) & Lorpus(x) & -Impossible(x)))", "(all x.(Alexa(x) -> Zumpus(x)) & (Alexa(x) -> Lorpus(x)) & (Alexa(x) -> -Impossible(x)))", "(all x y z.(Alex(x) -> Zumpus(x)) & (Alex(y) -> Lorpus(y)) & (Alex(z) -> -Impossible(z))))", "all x.(Alex(x) -> (Tompus(x) | Lorpus(x) | -Impossible(x)))", "all x y.((Alex(x) & Zumpus(x)) -> (Lorpus(x) & -Impossible(y)))", "all x y z.((Alex(x) & Zumpus(x) & Lorpus(y) & Is(z)) -> (-Impossible(x)))", "(all x.(Alex(x) -> Zumpus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> -Impossible(z))))", "all x.(Alex(x) -> (Zumpus(x) | Lorpus(x) | Imperator(x)))", "all x y z.((Alex(x) & Zumpus(y) & Lorpus(z)) -> (Lorpus(x,y) & -Impossible(x)))", "(All x.(Alexa(x) -> Zumpus(x)) & (Alexa(x) -> Lorpus(x)) & (Alexa(x) -> -Impossible(x)))", "(all x y z.(Alex(x) -> Zumpus(x)) & (Alex(y) -> Lorpus(y)) & (Alex(z) -> -Impossible(z)))"]}
{"id": "prontoqa_train_1186", "nl": "Alex is a yumpus, Alex is not a grimpus, and Alex is a jompus.", "fol": "(yumpus(Alex) & -grimpus(Alex) & jompus(Alex))", "prediction": ["(all x.(Alex(x) -> Yumpus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Jompus(x)))", "all x y z.((Alex(x) & Yumpus(y) & Grimpus(z)) -> (Yumpus(x) & -Grimpus(y) & Jompus(z)))", "all x.(Alex(x) -> (Yumpus(x) & -Grimpus(x) & Jompus(x)))", "(all x.(Alex(x) -> Yumpus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Jompus(x)))", "(all x y z.((Alex(x) & Yumpus(y)) -> (Yumpus(x) & -Grimpus(y))) & ((Alex(z) & Jompus(z)) -> (Jumpus(z))))", "all x y z.((Alex(x) & Yumpus(y) & Grimpus(z)) -> (Yumpus(x) & -Grimpus(y) & Jompus(z)))", "(all x.(Alex(x) -> Yumpus(x)) & all y.(Alex(y) -> -Grimpus(y))) & all z.(Alex(z) -> Jompus(z)))", "(all x y z.(Alex(x) -> Yampus(x)) & (Alex(y) -> -Grimpus(y))) & (Alex(z) -> Jompus(z)))", "all x y z.((Alex(x) & Yampus(y) & Grimpus(z)) -> (Yumpus(x) & -Smoothpus(x) & Jompus(x)))", "(all x.(Alex(x) -> Yampus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Jompus(x)))", "all x y z.((Alex(x) & Yumpus(y) & -Grimpus(z)) -> (Yumpus(x) & Jompus(x)))", "all x.(Alex(x) -> (Yumpus(x) & -Grimpus(x) & Jompus(x)))", "(all x.(Alex(x) -> Yampus(x)) & ((Alex(x) & -Grimpus(x)) -> Jompus(x)))", "all x y z.((Alex(x) & Yompus(y) & Grapple(z)) -> (Yumpus(x) & -Grimpus(y) & Jompus(z)))", "all x.(Alex(x) -> (Yumpus(x) & -Grimpus(x) & Jompus(x)))", "(all x.(Alex(x) -> Yumpus(x)) & all y.(Alex(y) -> -Grimpus(y))) & all z.(Alex(z) -> Jompus(z)))"]}
{"id": "prontoqa_train_1187", "nl": "Each zumpus is a grimpus and an impus and a rompus.", "fol": "all x. (zumpus(x) -> (grimpus(x) & impus(x) & rompus(x)))", "prediction": ["all x.(Tompus(x) -> (Grimpus(x) & Issue(x) & Rompus(x)))", "(all x.(Tompus(x) -> Grimpus(x)) & all y.(Imposs(y) -> Rompus(y)))", "all x.(Tompus(x) -> (Grimpus(x) & Impossible(x) & Rompus(x)))", "all x y.((Tompus(x) & Grimpus(y)) -> (Impossible(x) & Rompus(x)))", "(all x.(Tompus(x) -> Grimpus(x)) & all y.(Imposs(y) & -Imposs(y)) & all z.(Rompus(z) -> Grimpus(z))))", "all x.(Tompus(x) -> (Grimpus(x) & Issue(x) & Rompus(x)))", "(all x.(Zumpus(x) -> Grimpus(x)) & (Imposs(x) | Rompus(x)))", "all x.(Tompus(x) -> (Sgrimpus(x) & Issue(x) & Rompus(x)))", "all x y.((Tompus(x) & Grimpus(y)) -> (Impossible(x) & Rompus(x)))", "all x y z.(Tompus(x) -> (Grimpus(x) & Impossible(y) & Rompus(z)))", "exists x.(Zumpus(x) & Grimpus(x) & Imperator(x) & Rompus(x))", "all x.(Zumpus(x) -> (Grimpus(x) & Impossible(x) & Rompus(x)))", "all x.(Zumpus(x) -> (Grimpus(x) | Impossible(x) | Rompus(x)))", "exists x.(Zumpus(x) & Grimpus(x) & Issue(x) & Rompus(x))", "(all x.(Zumpus(x) -> Grimpus(x)) & (Imposs(x) | Rompus(x)))", "(all x.(Tompus(x) -> Grimpus(x)) & all y.(Imposs(y) -> Rompus(y)))"]}
{"id": "prontoqa_train_1188", "nl": "Rex is a grimpus, a sterpus, or a brimpus.", "fol": "(grimpus(Rex) | sterpus(Rex) | brimpus(Rex))", "prediction": ["all x.(Rex(x) -> (Grimpus(x) | Sterpus(x) | Brimpus(x)))", "(all x.(Rex(x) -> Grimpus(x)) | (Sterpus(x) & (Brimpus(x) | Grimpus(x)))))", "(all x.(Rex(x) -> Grimpus(x)) & ((Sterepus(x) & -Sterpus(x)) | (-Sterpus(x) & Brimpus(x)))))", "all x.(Rex(x) -> (Grimpus(x) | Sterpus(x) | Brimpus(x)))", "(Smokey(rex) | Sterpus(rex) | Brimpus(rex))", "(all x.(Rex(x) -> (Grimpus(x) | Sterpus(x) | Brimpus(x))))", "(all x.(Rex(x) -> Grimpus(x)) & all y.(Sterpus(y) -> Brimpus(y)))", "all x.(Rex(x) -> (Grimpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Smokey(x) | Sterpus(x) | Brimpus(x)))", "all x y.(Rex(x) -> (Grimpus(x) | Sterpus(x) | Brimpus(y)))", "all x.(Rex(x) -> (Grimpus(x) | Sterepus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Smoky(x) | Sterpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Grimpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Grimpus(x) | Sterepus(x) | Brimpus(x)))", "exists x.(Rex(x) & (Gruppus(x) | Sterpus(x) | Brimpus(x)))", "exists x.(Rex(x) & (Grimpus(x) | Sterpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_1189", "nl": "Sally is a jompus and Sally is a rompus and Sally is not a sterpus.", "fol": "(jompus(Sally) & rompus(Sally) & -sterpus(Sally))", "prediction": ["(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Rompus(x)) & (Sally(x) -> -Sterpus(x)))", "all x y z.((Sally(x) & Jompus(x) & Rompus(y) & -Sterpus(z)) -> (Jompus(x) & Rompus(y) & -Sterpus(z)))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Rompus(y)) & all z.(Sally(z) -> -Sterpus(z))))", "all x y.((Sally(x) & Jompus(x) & Rompus(y)) -> (Jompus(x) & -Sterpus(y)))", "(all x y.(Jompus(x) -> Sally(x)) & (Rompus(y) -> Sally(y)) & (Sterpus(y) -> -Sterpus(y)))", "all x.(Sally(x) -> (Jompus(x) | Rompus(x) | -Sterpus(x)))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Rompus(x)) & (Sally(x) -> -Sterpus(x)))", "all x y z.((Sally(x) & Jompus(x) & Rompus(y) & -Sterpus(z)) -> (Jompus(x) & Rompus(y) & -Sterpus(z)))", "all x.(Sally(x) -> (Jompus(x) | Rompus(x)) & -Sterpus(x)))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Rompus(y)) & all z.(Sally(z) -> -Sterpus(z))))", "(all x.(Jompus(x) -> Sally)) & (Rompus(x) -> Sally)) & (Sterpus(x) -> -Sterpus(x)))", "(all x y.(Jompus(x) -> Sally(x)) & (Rompus(y) -> Sally(y))) & (Sterpus(y) -> -Sterpus(y)))", "all x y.((Sally(x) & Jompus(x) & Rompus(y)) -> (Jompus(x) & -Sterpus(x)))", "exists x.(Sally(x) & Jompus(x) & Rompus(x) & -Sterpus(x))", "all x.(Sally(x) -> (Jompus(x) & Rompus(x) & -Sterpus(x)))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Rompus(x)) & -Sterpus(x)))"]}
{"id": "prontoqa_train_1190", "nl": "Sally is a wumpus or Sally is not a dumpus or Sally is a rompus.", "fol": "(wumpus(Sally) | -dumpus(Sally) | rompus(Sally))", "prediction": ["all x.((Sally(x) & (Wumpus(x) | -Dumpus(x) | Rompus(x))) -> Wumpus(x))", "(exists x.(Sally(x) & Wumpus(x)) | exists y.(Sally(y) & -Dumpus(y))) | exists z.(Sally(z) & Rompus(z))))", "all x.(Sally(x) -> (Wumpus(x) | -Dumpus(x) | Rompus(x)))", "(all x.(Sally(x) -> Wumpus(x)) | (-Dumpus(x) | Rompus(x))))", "(all x.(Sally(x) -> Wumpus(x)) | (-Sally(x) & Dumpus(x)) | (-Sally(x) & Rompus(x))))", "((Sally(Sally) & Wumpus(Sally)) | (-Dumpus(Sally) | Rompus(Sally))))", "all x y.((Sally(x) & Wumpus(x)) | (-Dumpus(x) | Rompus(y))))", "((Sally (Wumpus) | Sally(Dumpus)) | Sally(Rompus)))", "(exists x.(Sally(x) & Wumpus(x)) | exists y.(Sally(y) & -Dumpus(y)) | exists z.(Sally(z) & Rompus(z)))))", "all x.(Sally(x) -> ((Wumpus(x) | -Dumpus(x)) | Rompus(x)))", "all x.((Sally(x) & (Wumpus(x) | -Dumpus(x) | Rompus(x))) -> Wumpus(x))", "(all x.(Sally(x) -> Wumpus(x)) & (-Dumpus(x) | Rompus(x))))", "all x.(Sally(x) -> (Wumpus(x) | -Dumpus(x) | Rompus(x)))", "exists x.(Sally(x) & ((Wumpus(x) | -Dumpus(x)) | (Rompus(x)))))", "all x.((Sally(x) & (Wumpus(x) | -Dumpus(x) | Rompus(x))) -> Wumpus(x))", "all x.((Sally(x) & (Wumpus(x) | -Dumpus(x) | Rompus(x))) -> Wumpus(x))"]}
{"id": "prontoqa_train_1191", "nl": "Every vumpus is a grimpus.", "fol": "all x. (vumpus(x) -> grimpus(x))", "prediction": ["all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grimpus(x))", "(all x.(Vumpus(x) -> Grimpus(x)))", "exists x y.(Vumpus(x) & Grimpus(y))", "all x.((Vumpus(x) & Grimpus(x)) -> -Vumpus(x))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Gruppus(x))", "exists x y.(Vumpus(x) & Gruppus(y))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Gruppus(x))", "exists x.(Vumpus(x) & Gruppus(x))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_1192", "nl": "Sam is a gorpus, Sam is a yumpus, and Sam is not a grimpus.", "fol": "(gorpus(Sam) & yumpus(Sam) & -grimpus(Sam))", "prediction": ["(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> -Grimpus(x)))", "all x y z.((Sam(x) & Gorpus(x) & Yumpus(y) & -Grimpus(z)) -> (Gorpus(x) & Yampus(y) & -Grimpus(z)))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> -Grimpus(x)))", "(all x y z.((Sam(x) & Gorpus(x)) -> Gorpus(x)) & ((Sam(y) & Yumpus(y)) -> -Grimpus(z)))", "all x y z.((Sam(x) & Gorpus(x) & Yampus(y) & -Grimpus(z)) -> (Gorpus(x) & Yampus(y) & -Grimpus(z)))", "all x y z.((Sam(x) & Gorpus(x) & Yumpus(y) & Sam(z)) -> (Gorpus(x) & Yumpus(y) & -Grimpus(z)))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> -Grimpus(x)))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> Yumpus(x)) & -Sam(x)))", "all x.(Sam(x) -> (Gorpus(x) | Yampus(x) | -Grimpus(x)))", "exists x.(Sam(x) & Gorpus(x) & Yumpus(x) & -Grimpus(x))", "(all x.(SameDay(x) -> Gorpus(x)) & (SameDay(x) -> Yumpus(x)) & (SameDay(x) -> -Grimpus(x)))", "(all x y z.((Sam(x) & Gorpus(x)) -> Gorpus(x)) & ((Sam(y) & Yumpus(y)) -> -Grimpus(z)))", "all x y z.((Sam(x) & Gorpus(x) & Yampus(y) & -Grimpus(z)) -> (Gorpus(x) | Yampus(y) & -Grimpus(z)))", "all x y z.((Sam(x) & Gorpus(y) & Yumpus(z)) -> (Gorpus(x) & Yampus(z) & -Grimpus(x)))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> -Grimpus(x)))", "all x y z.((Sam(x) & Gorpus(x) & Yumpus(y) & Sam(z)) -> (Gorpus(x) & Yampus(y) & -Grimpus(z)))"]}
{"id": "prontoqa_train_1193", "nl": "Sam is not a vumpus or Sam is a yumpus or Sam is a tumpus.", "fol": "(-vumpus(Sam) | yumpus(Sam) | tumpus(Sam))", "prediction": ["all x.((Sam(x) & -Vumpus(x)) | (Yumpus(x) | Tumpus(x))))", "all x.(Sam(x) -> (-Vumpus(x) | (Yumpus(x) | Tumpus(x))))", "(-Vumpus(Sam) | Yumpus(Sam) | Tumpus(Sam)))", "((Sam(sam) & -Vumpus(sam)) | (Sam(sam) & Yumpus(sam)) | (Sam(sam) & Tumpus(sam))))", "all x y.((Sam(x) & -Vumpus(x)) | (Yumpus(x) | Tumpus(y))))", "(exists x.(Sam(x) & -Vumpus(x)) | exists y.(Sam(y) & Yumpus(y))))", "all x.(Sam(x) -> (-Vumpus(x) | (Yumpus(x) | Tumpus(x))))", "((Sam) & -Vumpus(Sam)) | (Yumpus(Sam) | Tumpus(Sam))))", "(-Vumpus(sam) | Yampus(sam) | Tumpus(sam)))", "(all x.(Sam(x) -> (-Vumpus(x) | Yampus(x) | Tumpus(x))))", "all x.((Sam(x) & -Vumpus(x)) | (Yumpus(x) | Tumpus(x))))", "all x y.((Sam(x) & -Vumpus(x)) | (Yumpus(x) | Tumpus(x))))", "all x y.((Sam(x) & (-Vumpus(x) | Sam(y) & Sam(y))) -> (Yumpus(y) | Tumpus(y)))", "all x.(Sam(x) -> (-Vumpus(x) | (Yumpus(x) | Tumpus(x))))", "exists x.(Sam(x) & -Vumpus(x) & -Yumpus(x) & -Tumpus(x))", "exists x.(Sam(x) & -Vumpus(x) & (Yumpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1194", "nl": "Everything that is a yumpus, a shumpus, or a gorpus is a dumpus and a jompus and a sterpus.", "fol": "all x. ((yumpus(x) | shumpus(x) | gorpus(x)) -> (dumpus(x) & jompus(x) & sterpus(x)))", "prediction": ["all x.((Yumpus(x) | Shumpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(x) & Sterpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(x) & Sterpus(x)))", "all x.((Yumpus(x) | Shumpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(x) & Sterpus(x)))", "all x y.((Yumpus(x) | Shumpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(y) & Sterpus(y)))", "all x.((Yumpus(x) | Humpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(x) & Sterpus(x)))", "all x y.((Yumpus(x) | Shumpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(y) & Sterpus(y)))", "all x.(Yumpus(x) | Humpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(x) & Sterpus(x)))", "all x.(Yumpus(x) | Shumpus(x) | Gorpus(x)) -> (Dumps(x) & Jompus(x) & Sterpus(x)))", "(all x.((Yumpus(x) | Humpus(x) | Gorpus(x))) -> DumpusAndJompusAndSterepus(x))", "all x.((Yumpus(x) | Humpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(x) & Sterpus(x)))", "(all x.((Yumpus(x) | Humpus(x) | Gorpus(x))) -> DumpusAndJompusAndSterepus(x))", "(all x.(yumpus,y) & all z.(shumpus,z) | Gorpus(x))) -> (Dumpus(x) & Jompus(z) & Sterpus(x)))", "all x.((Yumpus(x) | Shumpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(x) & Sterpus(x)))", "all x y.((Yumpus(x) | Humpus(x) | Gorpus(x)) -> (Dumps(y) & Jompus(y) & Sterpus(y)))", "all x.((Yumpus(x) | Shumpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(x) & Sterpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Gorpus(x)) -> (Dumps(x) & Jompus(x) & Sterpus(x)))"]}
{"id": "prontoqa_train_1195", "nl": "Every grimpus is a rompus, an impus, and a jompus.", "fol": "all x. (grimpus(x) -> (rompus(x) & impus(x) & jompus(x)))", "prediction": ["all x.(Grimpus(x) -> (Rompus(x) | Impossible(x) | Jompus(x)))", "(all x.(Grimpus(x) -> Rompus(x)) & all y.(Imposs(y) -> Jompus(y)))", "all x.(Grimpus(x) -> (Rompus(x) & Issue(x) & Jompus(x)))", "all x y z.((Grimpus(x) & Rompus(y) & Impossible(z)) -> (Rompus(x) & Jompus(x)))", "all x.(Grimpus(x) -> (Rompus(x) | Imperator(x) | Jompus(x)))", "(all x.(Grimpus(x) -> Rompus(x)) & all y.(Imposs(y) -> Jompus(y)))", "all x.(Grimpus(x) -> (Rompus(x) & Impossible(x) & Jompus(x)))", "all x.(Sgrimpus(x) -> (Rompus(x) | Imperator(x) | Jompus(x)))", "all x y.((Grimpus(x) & Rompus(y)) -> (Impossible(x) & Jompus(x)))", "(all x.(Grimpus(x) -> Rompus(x)) & all y.(Imposs(y) -> Jompus(y)))", "exists x.(Grimpus(x) & Rompus(x) & Imperator(x) & Jompus(x))", "all x.(Grimpus(x) -> (Rompus(x) | Impossible(x) | Jompus(x)))", "(all x.(Grimpus(x) -> Rompus(x)) & all y.(Impos(y) -> Jompus(y)))", "all x.(Grampus(x) -> (Rompus(x) | Impossible(x) | Jompus(x)))", "all x.(Grimpus(x) -> (Rompus(x) & Issue(x) & Jompus(x)))", "exists x.(Grimpus(x) & Rompus(x) & Issue(x) & Jompus(x))"]}
{"id": "prontoqa_train_1196", "nl": "Sam is a grimpus.", "fol": "grimpus(Sam)", "prediction": ["all x.(Sam(x) -> Grimpus(x))", "Sam is a Grimpus.", "all x.(Sam(x) -> Grimpus(x))", "(Grimpus(Sam) & Grimpus(Sam))", "Sam is a Grimpus.", "(Gruppus(Sam) & Grimpus(Sam))", "all x.(Sam(x) -> Grimpus(x))", "(Sam isGrimpus.", "(Grimpus(Sam) & HasSam(Sam))", "all x.(Sam(x) -> Gruppus(x))", "Sam is a Grimpus.", "Sam is Grimpus.", "(Grimpus(sam) & Grimpus(sam))", "all x.(Sam(x) -> Grimpus(x))", "all x.(Sam(x) -> Gruppus(x))", "all x.(Sam(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_1197", "nl": "Sam is a vumpus, a rompus, or a sterpus.", "fol": "(vumpus(Sam) | rompus(Sam) | sterpus(Sam))", "prediction": ["all x.(Sam(x) -> (Vumpus(x) | Rompus(x) | Sterpus(x)))", "(Vumpus(Sam) | Rompus(Sam) | Sterpus(Sam))", "all x.(Sam(x) -> (Vumpus(x) | Rompus(x) | Sterpus(x)))", "all x y.((Sam(x) & (Vumpus(y) | Rompus(y) | Sterpus(y))) -> (Vumpus(x) | Rompus(y) | Sterpus(y)))", "(Vumpus(sam) | Rompus(sam) | Sterpus(sam))", "exists x.(Sam(x) & ((Vumpus(x) & -Rompus(x)) | (-Vumpus(x) & -Rompus(x))) | (-Vumpus(x) & -Rompus(x)))))", "all x.(Sam(x) -> (Vumpus(x) | Rompus(x) | Sterpus(x)))", "(Vumpus(Sam) | Rompus(Sam) | Sterpus(Sam))", "(Vumpus,Rompus,Sterpus)", "all x.(Sam(x) -> (Vumpus(x) | Rompus(x) | Sterpus(x)))", "exists x.(Vumpus(x) | Rompus(x) | Sterpus(x))", "(Vumpus(Sam) | Rompus(Sam) | Sterpus(Sam))", "all x.(Sam(x) -> (Vimpus(x) | Rompus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Vumpus(x) | Rompus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Vumpus(x) | Rompus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Vumpus(x) | Rompus(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1198", "nl": "Each grimpus is a vumpus.", "fol": "all x. (grimpus(x) -> vumpus(x))", "prediction": ["all x.(Grimpus(x) -> Vumpus(x))", "all x.(Grimpus(x) -> Vumpus(x))", "all x y.((Grimpus(x) & Grimpus(y)) -> Vumpus(x))", "all x.(Sgrimpus(x) -> Vumpus(x))", "(all x.(Grimpus(x) -> Vumpus(x))", "all x.(Grimpus(x) -> Vumpus(x))", "all x y.((Grimpus(x) & Grimpus(y)) -> Vumpus(x))", "all x y.((Grimpus(x) & Grosp(y)) -> Vumpus(x))", "all x.(Grimpus(x) -> Vumpus(x))", "all x.(Grampus(x) -> Vumpus(x))", "exists x.(Gruppus(x) & Grosp(x) & Vumpus(x))", "exists x.(Grimpus(x) & Grosp(x) & Vumpus(x))", "exists x.(Grimpus(x) & Grotesque(x))", "all x.(Grimpus(x) -> Vumpus(x))", "exists x.(Gravity(x) & Grimpus(x))", "all x.(Grampus(x) -> Vulpis(x))"]}
{"id": "prontoqa_train_1199", "nl": "Wren is a yumpus, Wren is not a rompus, and Wren is a lorpus.", "fol": "(yumpus(Wren) & -rompus(Wren) & lorpus(Wren))", "prediction": ["(all x.(Wren(x) -> Yumpus(x)) & (-Rompus(x) & -Lorpus(x)))", "all x y z.((Wren(x) & Yampus(y) & Rompus(z)) -> (Yumpus(x) & -Rompus(y) & Lorpus(z)))", "(all x y z.((Wren(x) & Yumpus(y)) -> (Yumpus(x) & -Rompus(y)) & ((Wren(z) & Lorpus(z))) -> (Lorpus(z))))", "all x y z.((Wren(x) & Yumpus(y) & -Rompus(z)) -> (Yumpus(x) & -Rompus(y) & -Lorpus(z)))", "(all x.(Wren(x) -> Yampus(x)) & (-Rompus(x)) & (-Rompus(x) & -Lorpus(x))))", "(all x.(Wren(x) -> Yumpus(x)) & (-Wren(x) -> Rompus(x)) & (-Wren(x) -> Lorpus(x)))", "all x.(Wren(x) -> (Yumpus(x) & -Rompus(x) & Lorpus(x)))", "(all x y z.((Wren(x) & Yumpus(y) & -Rompus(z)) -> (Yumpus(x) & -Rompus(y)) & ((Wren(x) & Lorpus(x)) -> Lorpus(x)))", "(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> -Rompus(y)) & all z.(Wren(z) -> Lorpus(z))))", "all x y z.((Wren(x) & Yampus(y) & Rompus(z)) -> (Yumpus(x) & -Rompus(y) & Lorpus(z)))", "(all x y z.((Wren(x) & Yumpus(y)) -> (Yumpus(x) | -Rompus(y)) | (Lorpus(z) & Wren(z))))", "(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> -Rompus(x)) & (Wren(x) -> Lorpus(x)))", "all x y z.((Wren(x) & Yumpus(y) & -Rompus(z)) -> (Yumpus(x) | Lorpus(x)))", "all x y z.((Wren(x) & Yampus(x) & Rrompus(y) & Lorpus(z)) -> (Yumpus(x) & -Rompus(y) & -Lorpus(z)))", "all x y z.((Wren(x) & Yompus(y) & Rompus(z)) -> (Yumpus(x) & -Rompus(y) & Lorpus(z)))", "(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> -Rompus(y)) & all z.(Wren(z) -> Lorpus(z))))"]}
{"id": "prontoqa_train_1200", "nl": "Wren is a shumpus and Wren is a brimpus and Wren is not a vumpus.", "fol": "(shumpus(Wren) & brimpus(Wren) & -vumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Humpus(x)) & (Wren(x) -> Brimpus(x)) & (Wren(x) -> -Vumpus(x)))", "all x y z.((Wren(x) & Humpus(y) & Brimpus(z)) -> (Shumpus(x) & Brimpus(x) & -Vumpus(x)))", "all x y z.((Wren(x) & Shumpus(x) & Brimpus(y) & -Vumpus(z)) -> (Shumpus(x) & Brimpus(y) & -Vumpus(z)))", "(all x.(Wren(x) -> Humpus(x)) & all y.(Wren(y) -> Brimpus(y)) & all z.(Wren(z) -> -Vumpus(z))))", "(all x y.(Wren(x) -> Humpus(x)) & ((Wren(y) & Brimpus(y))) & ((Wren(y) & -Vumpus(y))))", "all x y.((Wren(x) & Shumpus(x) & Brimpus(y)) -> (Shumpus(x) & -Vumpus(y)))", "(all x.(Wren(x) -> Shumpus(x)) & (Wren(x) -> Brimpus(x)) & (Wren(x) -> -Vumpus(x)))", "(all x y z.((Wren(x) & Humpus(y)) -> Shumpus(x)) & ((Wren(z) & Brimpus(z))) -> -Vumpus(z)))", "all x.(Wren(x) -> (Shumpus(x) & Brimpus(x) & -Vumpus(x)))", "all x y z.((Wren(x) & Humpus(y) & Brimpus(z)) -> (Shumpus(x) | Brimpus(z) | -Vumpus(z)))", "(all x.(Wren(x) -> Humpus(x)) & ((Wren(x) -> Brimpus(x))) & ((Wren(x) -> -Vumpus(x))))", "(all x.(Wren(x) -> Shumpus(x)) & all y.(Wren(y) -> Brimpus(y)) & all z.(Wren(z) -> -Vumpus(z))))", "all x y.((Wren(x) & Shumpus(x) & Brimpus(y)) -> (Shumpus(x) & -Vumpus(x)))", "(all x y.(Wren(x) -> Humpus(x)) & (Wren(y) -> Brimpus(y)) & (Wren(y) -> -Vumpus(y)))", "all x y z.((Wren(x) & Shumpus(x) & Brimpus(y) & -Vumpus(z)) -> (Shumpus(x) & Brimpus(y) & -Vumpus(z)))", "all x.(Wren(x) -> (Shumpus(x) & Brimpus(x) & -Vumpus(x)))"]}
{"id": "prontoqa_train_1201", "nl": "Wren is a jompus, Wren is a brimpus, and Wren is not a lempus.", "fol": "(jompus(Wren) & brimpus(Wren) & -lempus(Wren))", "prediction": ["(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Brimpus(x)) & (Wren(x) -> -Lempus(x)))", "all x y z.((Wren(x) & Jompus(y) & Brimpus(z)) -> (Jompus(x) & Brimpus(x) & -Lempus(x)))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Brimpus(y)) & all z.(Wren(z) -> -Lempus(z))))", "(all x y z.((Wren(x) & Jompus(y)) -> (Jompus(z) | Brimpus(z))) & ((Wren(x) & -Lempus(x)) -> (Brimpus(x) & -Lempus(x))))", "(all x.(Wren(x) -> Jompus(x)) & ((Wren(x) -> Brimpus(x))) & ((Wren(x) -> -Lempus(x))))", "all x y z.((Wren(x) & Jompus(y) & Brimpus(z)) -> (Jompus(x) | Brimpus(z) | -Lempus(z)))", "all x.(Wren(x) -> (Jompus(x) | Brimpus(x) | -Lempus(x)))", "all x y z.((Wren(x) & Jompus(x) & Brimpus(y) & -Lempus(z)) -> (Jompus(x) | Brimpus(y) | Wren(z)))", "(all x y z.((Wren(x) & Jompus(x)) -> (Jompus(x) & Brimpus(y))) & ((Wren(z) & -Lempus(z)) -> (Brimpus(z))))", "(all x y z.((Wren(x) & Jompus(y)) -> (Jompus(z) | Brimpus(z))) & ((Wren(x) & Lempus(z)) -> -Lempus(x)))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Brimpus(y)) & all z.(Wren(z) -> -Lempus(z))))", "all x y z.((Wren(x) & Jompus(x) & Brimpus(y) & -Lempus(z)) -> (Jompus(x) & Brimpus(y) & -Lempus(z)))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Brimpus(x)) & (Wren(x) -> -Lempus(x)))", "all x y z.((Wren(x) & Jompus(y) & Brimpus(z)) -> (Jompus(x) | Brimpus(x) | -Lempus(x)))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Brimpus(y)) & all z.(Wren(z) -> -Lempus(z))))", "all x y z.((Wren(x) & Jompus(y) & Brimpus(z)) -> (Jompus(x) | Brimpus(z) | -Lempus(z)))"]}
{"id": "prontoqa_train_1202", "nl": "Wren is not a numpus, Wren is not a grimpus, and Wren is not an impus.", "fol": "(-numpus(Wren) & -grimpus(Wren) & -impus(Wren))", "prediction": ["(all x.(Wren(x) -> -Numpus(x)) & (Wren(x) -> -Grimpus(x)) & (Wren(x) -> -Impossible(x)))", "all x y z.((Wren(x) & Numpus(y) & Grimpus(z)) -> (-Numpus(x) & -Grimpus(x) & -Impossible(x)))", "(all x.(Wren(x) -> -Numpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> -Impossible(z))))", "(all x y z.((Wren(x) & Numpus(y)) -> -Number(x)) & ((Wren(z) & Grimpus(z))) -> -Impossible(z)))", "all x.(Wren(x) -> (-numpus(x) & -grimpus(x) & -isolator(x)))", "all x y z.((Wren(x) & Numpus(y) & Gruppus(z)) -> (-Numpus(x) & -Grimpus(x) & -Impossible(x)))", "(all x.(Wren(x) -> -Numpus(x)) & (-Grimpus(x) & -Ilios(x)))", "(all x.(Wren(x) -> -Numpus(x)) & all y.(Wren(y) -> -Grimpus(y)) & all z.(Wren(z) -> -Impossible(z))))", "(all x y z.((Wren(x) & Numpus(y) & Grimpus(z)) -> -Numpus(x)) & ((Wren(x) & Imperator(x)) -> -Nompus(x)))", "all x y z.((Wren(x) & Numpus(y) & Grimpus(z)) -> (-Numpus(x) & -Grimpus(x) & -Iliotus(x)))", "all x.(Wren(x) -> (-Numpus(x) & -Grimpus(x) & -Ilios(x)))", "(all x y z.((Wren(x) & Numpus(y)) -> -Numpus(x)) & ((Wren(z) & Grimpus(z))) -> -Impossible(z)))", "(all x.(Wren(x) -> -Numpus(x)) & (Wren(x) -> -Grimpus(x)) & (Wren(x) -> -Impossible(x)))", "all x y z.((Wren(x) & Numpus(y) & Grappa(z)) -> (-Numpus(x) & -Grimpus(y) & -Ilios(z)))", "(all x.(Wren(x) -> -Numpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> -Impossible(z)))", "all x y z.((Wren(x) & Numpus(y) & Grimpus(z)) -> (-Numpus(x) & -Surprise(x) & -Impossible(x)))"]}
{"id": "prontoqa_train_1203", "nl": "Lempuses are rompuses and jompuses and lorpuses.", "fol": "all x. (lempus(x) -> (rompus(x) & jompus(x) & lorpus(x)))", "prediction": ["all x.(Lempuse(x) -> (Rompus(x) | Jompuse(x) | Lorpuse(x)))", "(all x.(Lempuse(x) -> Rompus(x)) & all y.(Jompuse(y) & All z.(Lorpus(z)) -> Lompuse(x)))", "all x y.((Lempuse(x) & Rompus(y)) -> (Rompus(x) | Jompuse(x) | Lorpus(x)))", "all x.(Lempuse(x) -> (Rompus(x) | Jompuse(x) | Lorpuse(x)))", "(all x.(Lempuse(x) -> Rompus(x)) & (Jompuse(x) | Lorpuse(x)))", "all x y z.((Lempuse(x) & Rompus(y) & Jompuse(z)) -> (Rompus(x) | Lorpus(z)))", "all x.(Lemme(x) -> (Rompus(x) | Jompuse(x) | Lorpuse(x)))", "all x y.((Lempuse(x) & Rompuse(y)) -> (Jompuse(x) | Lorpuse(x)))", "all x.(Lempuse(x) -> (Rompus(x) & Jompuse(x) & Lorpus(x)))", "(all x.(Lempuse(x) -> Rompus(x)) & all y.(Jompuse(y) & all z.(Lorpus(z) & -Rompus(y)) -> Lompuse(z)))", "(all x.(Lempuse(x) -> Rompuse(x)) & all y.(Jompuse(y) & All z.(Lorpuse(z))) -> Lompuse(x)))", "all x.(Lempuse(x) -> (Rompus(x) | Jompuse(x) | Lorpus(x)))", "(all x.(Lampuse(x) -> Rompus(x)) & (Jompuse(x) | Lorpuse(x)))", "(all x.(Lempuse(x) -> Rompuse(x)) & (Jompuse(x) | Lorpuse(x)))", "all x.(Lempuse(x) -> (Rompus(x) & Jompuse(x) & Lorpus(x)))", "all x.(Lampuse(x) -> (Rompus(x) | Jompuse(x) | Lorpuse(x)))"]}
{"id": "prontoqa_train_1204", "nl": "Polly is a lempus.", "fol": "lempus(Polly)", "prediction": ["all x.(Polly(x) -> Lempus(x))", "Polly is a lempus.", "all x.(Polly(x) -> Lempus(x))", "Polly is a lempus.", "(Lempus(Polly) & HasLempus(Polly))", "all x.(Polly(x) -> Lempus(x))", "Polly is Lempus.", "Polly is a Lempus.", "All x.(Polly(x) -> Lempus(x))", "(Lempus(polly) & HasLempics(polly))", "(Lempus(Poly) & Lempus(Poly))", "all x.(Lempus(x) -> Polly(x))", "(Lempus(Polly))", "all x.(Polly(x) -> Lempus(x))", "Polly is a lempus.", "all x.(Lempus(x) -> Polly(x))"]}
{"id": "prontoqa_train_1205", "nl": "Polly is a yumpus or a jompus or a grimpus.", "fol": "(yumpus(Polly) | jompus(Polly) | grimpus(Polly))", "prediction": ["all x.(Polly(x) -> (Yumpus(x) | Jompus(x) | Grimpus(x)))", "(Yumpus(Polly) | Jompus(Polly) | Grimpus(Polly)))", "(Yumpus(poly) | Jompus(poly) | Grimpus(poly)))", "all x.(Polly(x) -> (Yumpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Polly(x) -> (Yumpus(x) | Jompus(x) | Grimpus(x)))", "all x y.((Polly(x) & (Yumpus(x) | Jompus(x) | Grimpus(x))) -> Polly(x))", "(yumpus) | jompus(y) | grimpus(y)))", "all x y.((Polly(x) & Yumpus(y)) | (Jompus(y) | Grimpus(y))))", "(Yumpus) | Jompus(y) | Grimpus(y))", "all x.(Polly(x) -> (Yumpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Polly(x) -> (Yumpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Polly(x) -> (Yumpus(x) | Jompus(x) | Grimpus(x)))", "exists x.(Polly(x) & (Yumpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Polly(x) -> (Yumpus(x) | Jompus(x) | Grimpus(x)))", "exists x.(Polly(x) & (Yumpus(x) | Jompus(x) | Grimpus(x)))", "exists x.(Polly(x) & (Yumpus(x) | Jompus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1206", "nl": "Everything that is a wumpus, a yumpus, and a sterpus is a brimpus.", "fol": "all x. ((wumpus(x) & yumpus(x) & sterpus(x)) -> brimpus(x))", "prediction": ["all x.((Wumpus(x) | Yumpus(x) | Sterpus(x)) -> Brimpus(x))", "all x y z.((Wumpus(x) & Yumpus(y) & Sterpus(z) & Is(x,y) & Is(x,z)) -> Brimpus(x))", "all x.((Wumpus(x) | Yampus(x) | Sterpus(x)) -> Brimpus(x))", "all x y.((Wumpus(x) & Yumpus(y) & Sterpus(y)) -> Brimpus(x))", "all x.(((Wumpus(x) | Yumpus(x) | Sterpus(x))) -> Brimpus(x))", "all x.((Wumpus(x) | Yumpus(x) | Sterpus(x)) -> Brimpus(x))", "all x.((Wumpus(x) | Yumpus(x) | Steroid(x)) -> Brimpus(x))", "all x.((Wumpus(x) | Yampus(x) | Sterpus(x)) -> Brimpus(x))", "(all x.((Wumpus(x) | Yampus(x) | Sterpus(x))) -> Brimpus(x))", "all x.((Wumpus(x) & Yampus(x) & Sterpus(x)) -> Brimpus(x))", "all x.(((Wumpus(x) | Yumpus(x) | Sterpus(x))) -> Brimpus(x))", "all x.((Wumpus(x) | Yumpus(x) | Specterpus(x)) -> Brimpus(x))", "(all x.((Wumpus(x) | Yumpus(x) | Sterpus(x))) -> Brimpus(x))", "(all x.((Wumpus(x) | Yampus(x) | Steroid(x))) -> Brimpus(x))", "all x.((Wumpus(x) | Yampus(x) | Sterpus(x)) -> Brimpus(x))", "all x.((Wumpus(x) | Yampus(x) | Sterpus(x)) -> Brimpus(x))"]}
{"id": "prontoqa_train_1207", "nl": "Wren is a jompus, Wren is a numpus, and Wren is not a brimpus.", "fol": "(jompus(Wren) & numpus(Wren) & -brimpus(Wren))", "prediction": ["(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Numpus(x)) & (Wren(x) -> -Brimpus(x)))", "all x y z.((Wren(x) & Jompus(y) & Numpus(z)) -> (Jompus(x) & Numpus(x) & -Brimpus(x)))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Numpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "(all x y z.((Wren(x) & Jompus(y)) -> (Jompus(z) | Numpus(z))) & ((Wren(x) & Brimpus(z)) -> -Brimpus(x)))", "all x y z.((Wren(x) & Jompus(y) & Numpus(z)) -> (Jompus(x) | Numpus(z) | -Brimpus(z)))", "all x y z.((Wren(x) & Jompus(x) & Numpus(y) & -Brimpus(z)) -> (Jompus(x) & Numpus(y) & -Brimpus(z)))", "all x.(Wren(x) -> (Jompus(x) | Numpus(x) | -Brimpus(x)))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Numpus(x)) & (Wren(x) -> -Brimpus(x)))", "(all x y z.((Wren(x) & Jompus(y)) -> (Jompus(z) | Numpus(z))) & ((Wren(x) & Brimpus(z)) -> -Brimpus(x)))", "(all x y z.((Wren(x) & Jompus(y) & Numpus(z)) -> (Jompus(x) | Numpus(z)) | -Brimpus(z)))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Numpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "all x y z.((Wren(x) & Jompus(x) & Numpus(y) & -Brimpus(z)) -> (Jompus(x) | Numpus(y) | Numpus(y)))", "all x y z.((Wren(x) & Jompus(y) & Numpus(z)) -> (Jompus(x) | Numpus(z) | -Brimpus(z)))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Numpus(x)) & (Wren(x) -> -Brimpus(x)))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Numpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "all x y z.((Wren(x) & Jompus(y) & Numpus(z)) -> (Jompus(x) | Numpus(z) | -Brimpus(x)))"]}
{"id": "prontoqa_train_1208", "nl": "Wren is not a wumpus.", "fol": "-wumpus(Wren)", "prediction": ["all x.(Wren(x) -> -Wumpus(x))", "(-Wren(w) & -Wumpus(w))", "Wren is not a wumpus.", "all x.(Wren(x) -> -Wumpus(x))", "(Wren(w) & -Wumpus(w))", "(-Wren(w) & Wumpus(w))", "all x.(Wren(x) -> -Wumpus(x))", "(Wren(Wren) & -Wumpus(Wren))", "(-Wren(w) & -Wumpus(w))", "-Wren(w)", "all x.(Wren(x) -> -Wumpus(x))", "all x.(Wren(x) -> -Wumpus(x))", "-Wren(w)", "all x.(Wren(x) -> -Wumpus(x))", "-Wren.", "all x.(Wren(x) -> -Wumpus(x))"]}
{"id": "prontoqa_train_1209", "nl": "Sterpuses are grimpuses, rompuses, and wumpuses.", "fol": "all x. (sterpus(x) -> (grimpus(x) & rompus(x) & wumpus(x)))", "prediction": ["all x.(Sterpuse(x) -> (Grimpus(x) | Rompus(x) | Wumpus(x)))", "all x.(Sterpuse(x) -> (Grimpuse(x) | Rompuse(x) | Wumpuse(x)))", "(all x.(Sterpuse(x) -> (Grimpuse(x) | Rompuse(x) | Wumpuse(x)))", "all x.(Sterpuse(x) -> (Grimpuse(x) | Rompuse(x) | Wumpuse(x)))", "all x y z.((Sterpuse(x) & Grimpuse(y) & Rompuse(z)) -> (Sterpuse(x) | Wumpuse(x)))", "(all x.(Sterpuse(x) -> (Grimpus(x) | Rompus(x) | Wumpus(x)))", "all x.(Sterpus(x) -> (Grimpus(x) | Rompus(x) | Wumpus(x)))", "(all x.(Sterpuse(x) -> Grimpuse(x)) & all y.(Rompuse(y) & all z.(Wumpuse(z)) -> Sterpuse(x)))", "all x y z.((Sterpuse(x) & Grimpuse(y) & Rompuse(z)) -> (Sterpuse(x) | Wumpuse(x)))", "all x.(Sterpuse(x) -> (Smoochus(x) | Rompus(x) | Wumpus(x)))", "(all x.(Sterpuse(x) -> Grimpuse(x)) & all y.(Rompuse(y) & all z.(Wumpuse(z)) -> Sterpuse(x)))", "(all x.(Sterpuse(x) -> Grimpuse(x)) & all y.(Rompus(y) & all z.(Wumpuse(z)) -> Wumpuse(z))))", "(all x.(Sterpuse(x) -> (Grimpuse(x) | Rompuse(x) | Wumpuse(x)))", "all x.(Sterpuse(x) -> (Smoochus(x) | Rompus(x) | Wumpus(x)))", "all x.(Strerpuse(x) -> (Grimpus(x) | Rompus(x) | Wumpus(x)))", "all x.(Sterpuse(x) -> (StrictlyStrictly(x) | Rompusly(x) | Wumpuses(x)))"]}
{"id": "prontoqa_train_1210", "nl": "Rex is not a grimpus and Rex is a lorpus and Rex is a numpus.", "fol": "(-grimpus(Rex) & lorpus(Rex) & numpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Grimpus(x)) & (Lorpus(x) & Numpus(x)))", "all x y z.((Rex(x) & Grimpus(y) & Lorpus(z)) -> (-Grimpus(x) & -Lorpus(x) & -Numpus(x)))", "(all x y z.((Rex(x) & Grimpus(y)) -> -Grimpus(x)) & ((Rex(z) & Lorpus(z))) -> Numpus(z)))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Lorpus(y) & Numpus(y))))", "all x.(Rex(x) -> (-Grimpus(x) & Lorpus(x) & Numpus(x)))", "all x y z.((Rex(x) & Grimpus(y) & Lorpus(z)) -> (-Grimpus(x) & Lorpus(x) & Numpus(x)))", "(-Grimpus(rex) & Lorpus(rex) & Numpus(rex))", "all x y.((Rex(x) & Grimpus(y)) -> (-Grimpus(x) & Lorpus(y) & Numpus(x)))", "(all x.(Rex(x) -> -Grimpus(x)) & (Lorpus(x) | Numpus(x))))", "(all x y z.((Rex(x) & Grimpus(y) & Lorpus(z)) -> -Grimpus(x)) & ((Rex(x) & Lorpus(x)) -> Numpus(x)))", "(all x y.(Rex(x) -> -Grimpus(x)) & (Lorpus(y) | Numpus(y))))", "all x y z.((Rex(x) & Gruppus(y) & Lorpus(z)) -> (-Grimpus(x) & Lorpus(y) & Numpus(z)))", "all x.(Rex(x) -> (-Grimpus(x) & Lorpus(x) & Numpus(x)))", "all x y z.((Rex(x) & Grimpus(y) & Lorpus(z)) -> (-Grimpus(x) & -Lorpus(y) & -Numpus(z)))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Lorpus(y) -> Nompus(y)))", "(all x.(Rex(x) -> -Grimpus(x)) & (Rex(x) -> Lorpus(x)) & (Rex(x) -> Numpus(x)))"]}
{"id": "prontoqa_train_1211", "nl": "Everything that is a shumpus or a lempus or a sterpus is a wumpus.", "fol": "all x. ((shumpus(x) | lempus(x) | sterpus(x)) -> wumpus(x))", "prediction": ["all x.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(x))", "all x.(((Shumpus(x) | Lempus(x) | Sterpus(x))) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(x))", "all x y.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(y))", "all x.(((Shumpus(x) | Lempus(x) | Sterpus(x))) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Spectrpus(x))) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(x))", "all x y.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(y))", "all x.(((Shumpus(x) | Lempus(x) | Sterpus(x))) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(x))", "(all x.((Shumpus(x) | Lempus(x) | Sterpus(x))) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Steroid(x)) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Specterpus(x)) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wampus(x))"]}
{"id": "prontoqa_train_1212", "nl": "Sally is a lorpus and a rompus and a sterpus.", "fol": "(lorpus(Sally) & rompus(Sally) & sterpus(Sally))", "prediction": ["(Lorpus(Sally) & Rompus(Sally) & Sterpus(Sally))", "all x.(Sally(x) -> (Lorpus(x) & Rompus(x) & Sterpus(x)))", "all x y z.((Sally(x) & Lorpus(y) & Rompus(z)) -> (Lorpus(x) & Rompus(x) & Sterpus(x)))", "Sally is a lorpus and a rompus and a sterpus.", "(all x.(Sally(x) -> Lorpus(x)) & (Rompus(x) & Sterpus(x)))", "all x y.((Sally(x) & Lorpus(y)) -> (Rompus(x) & Sterpus(x)))", "(Lorpus(Sally) & Rompus(Sally) & Sterpus(Sally))", "all x.(Sally(x) -> (Lorpus(x) & Rompus(x) & Sterpus(x)))", "(all x.(Sally(x) -> Lorpus(x)) & all y.(Rompus(y) & -Sterpus(y))))", "(Lorpus(Sally) | Rompus(Sally) | Sterpus(Sally))", "Sally is a lorpus and a rompus and a sterpus.", "all x.(Sally(x) -> (Lorpus(x) & Rompus(x) & Sterpus(x)))", "(Lorpus(Sally) & Rompus(Sally) & Sterpus(Sally))", "exists x.(Lorpus(x) & Rompus(x) & Sterpus(x))", "all x.(Sally(x) -> (Lorpus(x) & Rompus(x) & Sterpus(x)))", "(Lorpus(Sally) & Rompus(Sally) & Sterpus(Sally))"]}
{"id": "prontoqa_train_1213", "nl": "Sally is a wumpus.", "fol": "wumpus(Sally)", "prediction": ["all x.(Wumpus(x) -> Sally(x))", "Sally is a wumpus.", "(Wumpus(Sally) & Wumpus(Sally))", "Sally is a wumpus.", "all x.(Wumpus(x) -> Sally(x))", "(Wumpus(Sally) & HasWumpus(Sally,Wumpus))", "Sally is a wumpus.", "Sally is a Wumpus.", "all x.(Wumpus(x) -> Sally(x))", "Sally (Wumpus)", "(Wumpus(Sally) & -Wumpus(Sally))", "All x.((Sally(x) & Wumpus(x)) -> Wumpus(x))", "all x.(Wumpus(x) -> Sally(x))", "all x.(Wumpus(x) -> Sally(x))", "Sally is a wumpus.", "Sally is a Wumpus."]}
{"id": "prontoqa_train_1214", "nl": "Everything that is a gorpus and a lorpus and a grimpus is a sterpus, an impus, and a yumpus.", "fol": "all x. ((gorpus(x) & lorpus(x) & grimpus(x)) -> (sterpus(x) & impus(x) & yumpus(x)))", "prediction": ["all x.((Gorpus(x) & Lorpus(x) & Grimpus(x)) -> (Sterpus(x) & Impossible(x) & Yumpus(x)))", "all x y.((Gorpus(x) & Lorpus(y) & Grimpus(y)) -> (Sterpus(x) & Impossible(x) & Yumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Grimpus(x)) -> (Sterepus(x) & Imperator(x) & Yumpus(x)))", "(all x.((Gorpus(x) & -Lorpus(x) & -Grimpus(x)) -> (Sterpus(x) & Impossible(x) & Yumpus(x)))", "all x.((Gorpus(x) | Lorpus(x) | Grimpus(x)) -> (Sterpus(x) & Impossible(x) & Yumpus(x)))", "all x y z.((Gorpus(x) & Lorpus(y) & Grimpus(z) & Sterpus(x) & Imperator(x) & Yumpus(x)) -> (Sterpus(x) & Imperator(x) & Yumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Grimpus(x)) -> (Sterpus(x) & Issue(x) & Yumpus(x)))", "all x.((Gorpus(x) & Lops(x) & Grimpus(x)) -> (Sterpus(x) & Impossible(x) & Yumpus(x)))", "all x y.((Gorpus(x) & Lorpus(y) & Grimpus(x)) -> (Sterepus(x) & Impossible(x) & Yumpus(x)))", "(all x.((Gorpus(x) & -Lorpus(x) & -Grimpus(x)) -> (Sterepus(x) & Issue(x) & Yumpus(x)))", "all x.(Gorpus(x) & Lorpus(x) & Grimpus(x)) -> (Sterpus(x) & Impossible(x) & Yumpus(x)))", "all x.((Gorpus(x) | Lorpus(x) | Grimpus(x)) -> (Sterepus(x) & Imperator(x) & Yumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Grimpus(x)) -> (Sterepus(x) & Impossible(x) & Yumpus(x)))", "all x y.((Gorpus(x) & Lorpus(x) & Grimpus(x)) -> (Sterpus(y) | Imperator(y) | Yumpus(y)))", "(all x.(Gorpus(x) -> (Lorpus(x) & Grimpus(x))) & (Sterpus(x) | Imperator(x) | Yumpus(x)))", "all x.((Gorpus(x) & Lordpus(x) & Grimpus(x)) -> (Sterpus(x) | Imperator(x) | Yumpus(x)))"]}
{"id": "prontoqa_train_1215", "nl": "Alex is a zumpus, a vumpus, and a jompus.", "fol": "(zumpus(Alex) & vumpus(Alex) & jompus(Alex))", "prediction": ["all x.(Alex(x) -> (Tompus(x) | Vumpus(x) | Jompus(x)))", "(all x.(Alex(x) -> Zumpus(x)) & all y.(Vumpus(y) & -Jompus(y)))", "all x y z.((Alex(x) & Zumpus(y) & Vumpus(z)) -> (Tompus(x) | Vumpus(z) | Jompus(z)))", "(Tompus(Alex) | Vumpus(Alex) | Jompus(Alex))", "(all x.(Alex(x) -> Zumpus(x)) & all y.(Vumpus(y) & All z.(Jompus(z) & All w.(Alex(w) & All w.(Alex(w) & All w.(Alex(w) & All w.(Alex(w) & All w.(Alex(w))))))", "all x.(Alex(x) -> (Tompus(x) | Vumpus(x) | Jompus(x)))", "all x y z.((Alex(x) & Zumpus(y) & Vumpus(z) & Jompus(x)) -> (Tompus(x) | Vumpus(z) | Jompus(z)))", "(All x.(Alex(x) -> Zumpus(x)) & (Vumpus(x) & Jompus(x)))", "(Tompus(Alex) | Vumpus(Alex) | Jompus(Alex))", "all x.(Alex(x) -> (Tompus(x) | Vumpus(x) | Jompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Vampus(x) | Jompus(x)))", "all x.(Alex(x) -> (Zumpus(x) & Vumpus(x) & Jompus(x)))", "(All x.(Alex(x) -> Zumpus(x)) & (Vumpus(x) & Jompus(x)))", "exists x.(Alex(x) & Zumpus(x) & Vumpus(x) & Jompus(x))", "all x.(Alex(x) -> (Zumpus(x) | Voompus(x) | Jompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Vumpus(x) | Jompus(x)))"]}
{"id": "prontoqa_train_1216", "nl": "Alex is a brimpus or a yumpus or a dumpus.", "fol": "(brimpus(Alex) | yumpus(Alex) | dumpus(Alex))", "prediction": ["all x.(Alex(x) -> (Brimpus(x) | Yumpus(x) | Dumpus(x)))", "(Brimpus(Alex) | Yumpus(Alex) | Dumpus(Alex)))", "all x.(Alex(x) -> (Brimpus(x) | Yumpus(x) | Dumpus(x)))", "(all x.(Alex(x) -> Brimpus(x)) | (Yumpus(x) | Dumpus(x))))", "all x y.((Alex(x) & Brimpus(x)) | (Yumpus(y) | Dumpus(y))))", "(Brimpus,Brimpus,Yumpus,Dumpus)", "all x.(Alex(x) -> (Brumpus(x) | Yumpus(x) | Dumpus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Yumpus(x) | Dumpus(x)))", "(Brimpus(Alex) | Yumpus(Alex) | Dumpus(Alex))", "exists x.(Alex(x) & ((Brimpus(x) & -Yumpus(x)) | (-Brimpus(x) & -Yumpus(x)))))", "all x.(Alex(x) -> ((Brimpus(x) | Yumpus(x) | Dumpus(x))))", "(all x.(Alex(x) -> Brimpus(x)) | (Yumpus(x) | Dumpus(x))))", "all x.(Alex(x) -> (Brimpus(x) | Yampus(x) | Dumpus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Yumpus(x) | Dumpus(x)))", "all x.(Alex(x) -> (Brumpus(x) | Yumpus(x) | Dumpus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Yumpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_1217", "nl": "Everything that is a gorpus, an impus, and a zumpus is a brimpus, a sterpus, and a rompus.", "fol": "all x. ((gorpus(x) & impus(x) & zumpus(x)) -> (brimpus(x) & sterpus(x) & rompus(x)))", "prediction": ["all x.((Gorpus(x) | Impossible(x) | Zumpus(x)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))", "all x.((Gorpus(x) | Imperator(x) | Zumpus(x)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))", "all x y.((Gorpus(x) & Impossible(x) & Zumpus(y)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))", "all x.((Gorpus(x) & Impossible(x) & Zumpus(x)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))", "all x.((Gorpus(x) | Impossible(x) | Zumpus(x)) -> (Brimpus(x) | Sterpus(x) | Rompus(x)))", "all x y z.((Gorpus(x) & Impossible(y) & Zumpus(z)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))", "(all x.((Gorpus(x) | Impossible(x)) & Zumpus(x)) -> (Brimpus(x) | Sterpus(x) | Rompus(x)))", "all x.((Gorpus(x) | Imperative(x) | Zumpus(x)) -> (Brimpus(x) | Sterpus(x) | Rompus(x)))", "(all x.((Gorpus(x) | Impossible(x)) & Zumpus(x)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))", "all x.((Gorpus(x) & Imperator(x) & Zumpus(x)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))", "all x.(Gorpus(x) & IsImpos(x) & Zumpus(x)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))", "all x y.((Gorpus(x) & Impossible(x) & Zumpus(y)) -> (Brimpus(x) | Sterpus(x) | Rompus(x)))", "all x.((Gorpus(x) | Impossible(x) | Zumpus(x)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))", "all x.(Gorpus(x) & Impossible(x) & Zumpus(x)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))", "(all x.((Gorpus(x) | Imperator(x)) & Zumpus(x)) -> (Brimpus(x) | Sterpus(x) | Rompus(x)))", "all x.((Gorpus(x) | Imperator(x) | Zumpus(x)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_1218", "nl": "Max is a gorpus.", "fol": "gorpus(Max)", "prediction": ["all x.(Max(x) -> Gorpus(x))", "all x.(Max(x) -> Gorpus(x))", "Max is Gorpus(Max)", "(Gorpus(Max) & HasGorpus(Max))", "all x.(Matthew(x) -> Gorpus(x))", "(Gorpus(Max) & Gorpus(Max))", "Max is Gorpus.", "all x.(Max(x) -> Gorpus(x))", "all x.(Matthew(x) -> Gorpus(x))", "Max is Gorpus(Max)", "all x.(Max(x) -> Gorpus(x))", "(Gorpus(Max) -> Gorpus(Max))", "Max ist Gorpus.", "(Gorpus(Max))", "(Gorpus)", "All x.(Max(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_1219", "nl": "Max is an impus.", "fol": "impus(Max)", "prediction": ["all x.(Max(x) -> Is(x))", "(Impossible(Max))", "all x.(Max(x) -> IsImpossible(x))", "Max is imposed.", "-Impossible(Max)", "Max ist einImposer(Max)", "(Imposer(Max)", "All x.(Max(x) -> Imperative(x))", "(Impossible(Max)", "Max is impused.", "all x.(Max(x) -> Impossible(x))", "-Impossible(Max)", "Max ist ein Isolator.", "all x.(Max(x) -> Impeccable(x))", "All x.(Max(x) -> Is(x))", "(Impossible(Max)"]}
{"id": "prontoqa_train_1220", "nl": "Everything that is a lempus, a gorpus, and a sterpus is not a grimpus.", "fol": "all x. ((lempus(x) & gorpus(x) & sterpus(x)) -> -grimpus(x))", "prediction": ["all x.((Lempus(x) | Gorpus(x) | Sterpus(x)) -> -Grimpus(x))", "all x.((Lempus(x) | Gorpus(x) | Sterpus(x)) -> -Grimpus(x))", "all x.((Lempus(x) | Gorpus(x) | Sterpus(x)) -> -Grimpus(x))", "all x y.((Lempus(x) & Gorpus(y) & Sterpus(x)) -> -Grimpus(x))", "all x.((Limpus(x) & Gorpus(x) & Sterpus(x)) -> -Grimpus(x))", "all x.(((Lempus(x) | Gorpus(x) | Sterpus(x))) -> -Grimpus(x))", "all x.((Lempus(x) | Gorpus(x) | Sterpus(x)) -> -Grimpus(x))", "(all x.((Lempus(x) | Gorpus(x) | Sterpus(x))) -> -Grimpus(x))", "all x y.((Lempus(x) & Gorpus(y) & Sterpus(y)) -> -Grimpus(x))", "all x.((Lempus(x) | Gorpus(x) | Sterpus(x)) -> -Grimpus(x))", "(all x.((Lempus(x) | Gorpus(x) | Sterpus(x))) -> -Grimpus(x))", "all x.((Limpus(x) & Gorpus(x) & Sterpus(x)) -> -Grimpus(x))", "all x.((Lempus(x) | Gorpus(x) | Sterpus(x)) -> -Grimpus(x))", "(all x.((Lempus(x) | Gorpus(x) | Sterpus(x))) -> -Grimpus(x))", "all x.((Lempus(x) | Gorpus(x) | Sterpus(x)) -> -Grimpus(x))", "all x.((Lempus(x) | Gorpus(x) | Sterpus(x)) -> -Grimpus(x))"]}
{"id": "prontoqa_train_1221", "nl": "Everything that is a shumpus, a yumpus, or an impus is a grimpus.", "fol": "all x. ((shumpus(x) | yumpus(x) | impus(x)) -> grimpus(x))", "prediction": ["all x.((Shumpus(x) | Yumpus(x) | Imperator(x)) -> Grimpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Imperator(x)) -> Grimpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Impossible(x)) -> Grimpus(x))", "all x.((Shumpus(x) | Yampus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsII(x)))", "all x.(((Shumpus(x) | Yumpus(x) | Imperator(x))) -> Grimpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Imperator(x)) -> Grimpus(x))", "all x y.((Shumpus(x) | Yumpus(x) | Imperator(x)) -> Grimpus(y))", "all x.((Shumpus(x) | Yumpus(x) | Imperator(x)) -> Grimpus(x))", "all x.((Shumpus(x) | Yampus(x) | Impossible(x)) -> Grimpus(x))", "all x.(((Shumpus(x) | Yumpus(x) | Impossible(x))) -> Grimpus(x))", "all x.(((Shumpus(x) | Yumpus(x) | Imperator(x))) -> Grimpus(x))", "(all x.((Shumpus(x) | Yumpus(x) | Impossible(x))) -> Grimpus(x))", "all x.(Shumpus(x) | Yumpus(x) | Impossible(x)) -> Grimpus(x))", "(all x.((Shumpus(x) | Yumpus(x) | Impossible(x))) -> Grimpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Impermissible(x)) -> Grimpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Imperator(x)) -> Grimpus(x))"]}
{"id": "prontoqa_train_1222", "nl": "Each gorpus is a grimpus.", "fol": "all x. (gorpus(x) -> grimpus(x))", "prediction": ["all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x y.((Gorpus(x) & Grimpus(y)) -> Is(x,y))", "all x.(Gorpus(x) -> Grimpus(x))", "all x y.((Gorpus(x) & Grimpus(y)) -> Is(x,y))", "all x.(Gorpus(x) -> Grimpus(x))", "all x y.((Gorpus(x) & Grimpus(y)) -> Grimpus(x))", "all x.(Gorpus(x) -> Gruppus(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Gruppus(x))", "exists x.(Gorpus(x) & Grimpus(x))", "exists x.(Gorpus(x) & Gruppus(x))", "exists x.(Gorpus(x) & Grimpus(x))", "exists x.(Gorpus(x) & Grumpus(x))", "exists x.(Gorpus(x) & Grimpus(x))"]}
{"id": "prontoqa_train_1223", "nl": "Dumpuses are gorpuses.", "fol": "all x. (dumpus(x) -> gorpus(x))", "prediction": ["all x.(Dumpuse(x) -> Gorpus(x))", "all x.(Dumpuse(x) -> Gorpus(x))", "all x y.((Dumpuse(x) & Gorpus(y)) -> Gorpus(x))", "(Gorpuse(dumpuse) & -Gorpuse(dumpuse))", "all x.(Dumpuse(x) -> Gorpuse(x))", "(Gorpuse(dumpuse) & Gorpus(dumpuse))", "all x y.((Dumpuse(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Dumpuse(x) -> Gorpuse(x))", "all x.(Dumpus(x) -> Gorpuse(x))", "all x y.((Dumpuse(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Dumpuse(x) -> Gorpuse(x))", "all x.(Dumpus(x) -> Gorpus(x))", "all x.(Dumpus(x) -> Gorpus(x))", "all x.(Dumpuse(x) -> Gorpuse(x))", "all x.(Dumpus(x) -> Gorpuse(x))", "All x.(Dumpus(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_1224", "nl": "Sally is a lorpus, Sally is a numpus, and Sally is not a grimpus.", "fol": "(lorpus(Sally) & numpus(Sally) & -grimpus(Sally))", "prediction": ["(all x.(Sally(x) -> Lorpus(x)) & (Sally(x) -> Numpus(x)) & (Sally(x) -> -Grimpus(x))))", "(all x.(Sally(x) -> Lorpus(x)) & all y.(Sally(y) -> Numpus(y)) & all z.(Sally(z) -> -Grimpus(z))))", "all x y z.((Sally(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) | Numpus(z) | -Grimpus(x)))", "(all x y z.((Sally(x) & Lorpus(y)) -> (Lorpus(x) | Numpus(y))) & ((Sally(z) & Grimpus(z)) -> -Lorpus(z)))", "all x.(Sally(x) -> (Lorpus(x) | Numpus(x) | -Grimpus(x)))", "(all x y z.((Sally(x) & Lorpus(y)) -> (Lorpus(x) & Numpus(y))) & ((Sally(z) & Grimpus(z)) -> -Lorpus(z)))", "(all x.(Sally(x) -> Lorpus(x)) & (Sally(x) -> Numpus(x)) & (Sally(x) -> -Grimpus(x)))", "all x y z.((Sally(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) | Numpus(z) | -Grimpus(z)))", "all x y z.((Sally(x) & Lorpus(y) & Numpus(z) & -Grimpus(z)) -> (Lorpus(x) & Numpus(x) & -Grimpus(x)))", "(all x.(Sally(x) -> Lorpus(x)) & all y.(Sally(y) -> Numpus(y)) & all z.(Sally(z) -> -Grimpus(z))))", "exists x.(Sally(x) & Lorpus(x) & Numpus(x) & -Grimpus(x))", "(all x y z.((Sally(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) | Numpus(z)) | -Grimpus(z)))", "(all x.(Sally(x) -> Llorpus(x)) & (Sally(x) -> Numpus(x)) & (Sally(x) -> -Grimpus(x)))", "all x.(Sally(x) -> (Lorpus(x) | Numpus(x) | -Grimpus(x)))", "all x y z.((Sally(x) & Lorpus(x) & Numpus(y) & -Grimpus(z)) -> (Lorpus(x) & Numpus(y) & -Grimpus(z)))", "(all x.(Sally(x) -> Lorpus(x)) & (Sally(x) -> Numpus(x)) & -Sally(x)))"]}
{"id": "prontoqa_train_1225", "nl": "Each rompus is a gorpus, a tumpus, and a yumpus.", "fol": "all x. (rompus(x) -> (gorpus(x) & tumpus(x) & yumpus(x)))", "prediction": ["all x.(Rompus(x) -> (Gorpus(x) | Tumpus(x) | Yumpus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Tumpus(x) & Yumpus(x)))", "(all x.(rompus(x) -> Gorpus(x)) & all y.(rompus(y) -> Tumpus(y))) & all z.(rompus(z) -> Yumpus(z)))", "(all x.(Rompus(x) -> Gorpus(x)) & all y.(Tumpus(y) -> Yumpus(y)))", "(all x.(Rompus(x) -> Gorpus(x)) & all y.(Tumpus(y) -> Yumpus(y)))", "all x.(rompus(x) -> (Gorpus(x) | Tumpus(x) | Yumpus(x)))", "all x y z.(Rompus(x) -> (Gorpus(y) | Tumpus(y) | Yumpus(z)))", "all x.(Rompus(x) -> (Gorpus(x) | Tumpus(x) | Yumpus(x)))", "(all x.(Rompus(x) -> Gorpus(x)) & all y.(Tumpus(y) & All z.(Yumpus(z) & Gorpus(y))))", "exists x.(rompus(x) & Gorpus(x) & Tumpus(x) & Yumpus(x))", "all x y z.(Rompus(x) -> (Gorpus(x) | Tumpus(x) | Yumpus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Tumpus(x) & Yumpus(x)))", "exists x.(rompus(x) & Gorpus(x) & Tumpus(x) & Yumpus(x))", "all x.(Rompus(x) -> (Gorpus(x) | Tumpus(x) | Yumpus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Tumpus(x) & Yumpus(x)))", "exists x.(Rompus(x) & Gorpus(x) & Tumpus(x) & Yumpus(x))"]}
{"id": "prontoqa_train_1226", "nl": "Stella is not a yumpus and Stella is a zumpus and Stella is a dumpus.", "fol": "(-yumpus(Stella) & zumpus(Stella) & dumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Dumpus(x)))", "all x y z.((Stella(x) & Yumpus(y) & Zumpus(z)) -> (-Yumpus(x) & Dumpus(x)))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Zumpus(y)) & all z.(Stella(z) -> Dumpus(z))))", "(all x y.((Stella(x) & Yumpus(y)) -> -Yumpus(x)) & ((Stella(x) & Zumpus(y)) -> Dumpus(x)))", "all x.(Stella(x) -> (-Yumpus(x) & Zumpus(x) & Dumpus(x)))", "(all x y z.((Stella(x) & Yumpus(y)) -> -Yumpus(x)) & ((Stella(z) & Zumpus(z))) -> Dumpus(z)))", "all x y.((Stella(x) & Yampus(y) & Zumpus(y)) -> (-Yumpus(x) & Dumpus(x)))", "all x y z.((Stella(x) & Yumpus(y) & Zumpus(z)) -> (-Yumpus(x) & Dumpus(x)))", "(all x y.(Yumpus(x) -> -Yumpus(x)) & (Zumpus(y) -> -Yumpus(y))) & (Dumpus(y) -> -Yumpus(y)))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Dumpus(x)))", "all x.(Stella(x) -> (-Yumpus(x) & Zumpus(x) & Dumpus(x)))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Zumpus(y)) & all z.(Stella(z) -> Dumpus(z))))", "all x y.((Stella(x) & Yumpus(y)) -> (-Yumpus(x) & Zumpus(y) & Dumpus(x)))", "all x y z.((Stella(x) & Yumpus(y) & Zumpus(z)) -> (-Yumpus(x) & Dumpus(x)))", "exists x.(Stella(x) & -Yumpus(x) & Zumpus(x) & Dumpus(x))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Dumpus(x)))"]}
{"id": "prontoqa_train_1227", "nl": "Wren is not a brimpus, Wren is a shumpus, and Wren is a lempus.", "fol": "(-brimpus(Wren) & shumpus(Wren) & lempus(Wren))", "prediction": ["(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Shumpus(y)) & all z.(Wren(z) -> Lempus(z))))", "all x y z.((Wren(x) & Brimpus(y) & Humpus(z)) -> (-Brimpus(x) & Shumpus(x) & Lempus(x)))", "(all x y z.((Wren(x) & Brimpus(y)) -> -Brimpus(x)) & ((Wren(z) & Humpus(z))) -> Lempus(z)))", "(all x.(Wren(x) -> -Brimpus(x)) & (Wren(x) -> Humpus(x)) & (Wren(x) -> Lempus(x)))", "all x y z.((Wren(x) & Shumpus(y) & Lempus(z)) -> (-Brimpus(x) & Shumpus(y) & Lempus(z)))", "all x.(Wren(x) -> (-Brimpus(x) & Shumpus(x) & Lempus(x)))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Shumpus(y)) & all z.(Wren(z) -> Lempus(z))))", "(all x y z.((Wren(x) & Brimpus(y)) -> -Brimpus(x)) & ((Wren(z) & Humpus(z))) -> Lempus(z)))", "all x y z.((Wren(x) & Brimpus(y) & Humpus(z)) -> (-Brimpus(x) & Shumpus(x) & Lempus(x)))", "(all x.(Wren(x) -> -Brimpus(x)) & (Wren(x) -> Shumpus(x)) & (Wren(x) -> Lempus(x)))", "all x y z.((Wren(x) & Shumpus(y) & Lempus(z)) -> (-Brimpus(x) & Shumpus(y) & Lempus(z)))", "all x y z.((Wren(x) & Brimpus(y) & Humpus(z)) -> (-Brimpus(x) | (-Brimpus(x) & Humpus(y) & Lempus(z))))", "(all x y z.((Wren(x) & Brimpus(y)) -> -Brimpus(x)) & ((Wren(z) & Humpus(z))) -> Lempus(z)))", "all x y z.((Wren(x) & Shumpus(y) & Lempus(z)) -> (-Brimpus(x) & -Shumpus(y) & -Brimpus(z) & Lempus(z)))", "(all x.(Wren(x) -> -Brumpus(x)) & all y.(Wren(y) -> Humpus(y))) & all z.(Wren(z) -> Lempus(z)))", "(all x.(Wren(x) -> -Brimpus(x)) & (Wren(x) -> Humpus(x)) & (Wren(x) -> Lempus(x)))"]}
{"id": "prontoqa_train_1228", "nl": "Wren is not a lorpus or Wren is a dumpus or Wren is a rompus.", "fol": "(-lorpus(Wren) | dumpus(Wren) | rompus(Wren))", "prediction": ["all x.((Wren(x) & -Lorpus(x)) | (-Lorpus(x) | Dumpus(x) | Rompus(x))))", "all x.(Wren(x) -> (-Lorpus(x) | Dumpus(x) | Rompus(x)))", "(exists x.(Wren(x) & -Lorpus(x)) | exists y.(Wren(y) & Dumpus(y))) | exists z.(Wren(z) & Rompus(z))))", "((Wren(w) & -Lorpus(w)) | (-Lorpus(w) & Dumpus(w)) | (-Lorpus(w) & Dumpus(w))))", "all x y.((Wren(x) & -Lorpus(x)) | (-Lorpus(x) | Dumpus(x) | Rompus(y))))", "(all x.(Wren(x) -> (-Lorpus(x) | Dumpus(x) | Rompus(x))))", "(exists x.(Wren(x) & -Lorpus(x)) | exists y.(Dumpus(y) & Wren(x))) | exists z.(Rompus(z) & -Lorpus(z))))", "(all x.(Wren(x) -> (-Lorpus(x) | Dumpus(x) | Rompus(x))))", "((Wren(w) & -Lorpus(w)) | (-Lorpus(w) & Dumpus(w)) | (-Lorpus(w) & Dumpus(w))))", "all x.(Wren(x) -> (-Lorpus(x) | Dumpus(x) | Rompus(x)))", "all x y.((Wren(x) & -Lorpus(x)) | (-Lorpus(y) | Dumpus(y) | Rompus(y))))", "all x.((Wren(x) & -Lorpus(x)) | (-Lorpus(x) | Dumpus(x) | Rompus(x))))", "(all x.(Wren(x) -> (-Lorpus(x) | Dumpus(x) | Rompus(x))))", "all x.(Wren(x) -> (-Lorpus(x) | Dumpus(x) | Rompus(x)))", "exists x.(Wren(x) & -Lorpus(x) & (Dumpus(x) | Rompus(x)))", "all x.(Wren(x) -> (-Lorpus(x) | Dumpus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1229", "nl": "Every vumpus is not a brimpus.", "fol": "all x. (vumpus(x) -> -brimpus(x))", "prediction": ["all x.(Vumpus(x) -> -Brimpus(x))", "(all x.(Vumpus(x) -> -Brimpus(x)))", "all x.(Vumpus(x) -> -Brimpus(x))", "all x y.((Vumpus(x) & Brimpus(y)) -> -Vumpus(x))", "-Brimpus(v)", "all x.(Vumpus(x) -> -Brimpus(x))", "all x.(Vumpus(x) -> -Brimpus(x))", "(all x.(Vumpus(x) -> -Brimpus(x)))", "-Brimpus(v)", "all x.(Vumpus(x) -> -Brumpus(x))", "all x.(Vumpus(x) -> -Brimpus(x))", "all x.(Vumpus(x) -> -Brimpus(x))", "all x.(Vumpus(x) -> -Brimpus(x))", "all x.(Vumpus(x) -> -Brumpus(x))", "all x.(Vumpus(x) -> -Brimpus(x))", "exists x.(Vumpus(x) & -Brumpus(x))"]}
{"id": "prontoqa_train_1230", "nl": "Alex is a vumpus.", "fol": "vumpus(Alex)", "prediction": ["all x.(Alex(x) -> Vumpus(x))", "Alex is a Vumpus.", "all x.(Alex(x) -> Vumpus(x))", "Alex is a vumpus.", "(Vumpus(Alex) & -Vumpus(Alex))", "Alex is vumpus.", "Alex is a Vumpus.", "all x.(Alex(x) -> Vumpus(x))", "(Vumpus(Alex) & HasVumpus(Alex))", "Alex is a vumpus.", "all x.(Alex(x) -> Vumpus(x))", "all x.(Vumpus(x) -> Alex(x))", "all x.(Alex(x) -> Vampus(x))", "all x.(Alex(x) -> Vumpus(x))", "All x.(Alex(x) -> Vampire(x))", "All x.(Alex(x) -> Vumpus(x))"]}
{"id": "prontoqa_train_1231", "nl": "Alex is a numpus or Alex is not a jompus or Alex is a zumpus.", "fol": "(numpus(Alex) | -jompus(Alex) | zumpus(Alex))", "prediction": ["all x.(Alex(x) -> (Numpus(x) | -Jompus(x) | Zumpus(x)))", "((Alex(Alex) & Numpus(Alex)) | (-Jompus(Alex)) | Zumpus(Alex)))", "(all x.(Alex(x) -> Numpus(x)) | (-Jompus(x) | Zumpus(x))))", "(exists x.(Alex(x) & Numpus(x)) | exists y.(Alex(y) & -Jompus(y))) | exists z.(Alex(z) & Zumpus(z))))", "all x y.((Alex(x) & Numpus(x)) | (-Jompus(x) | Zumpus(x))))", "all x.(Alex(x) -> (Numpus(x) | -Jompus(x) | Zumpus(x)))", "((Alex(Alex) & Numpus(Alex)) | (-Jompus(Alex)) | Zumpus(Alex)))", "(all x.(Alex(x) -> Numpus(x)) | (-Jompus(x) | Zumpus(x))))", "all x.(Alex(x) -> (Numpus(x) | -Jompus(x) | Zumpus(x)))", "exists x.(Alexa(x) & ((Numpus(x) | -Jompus(x)) | Zumpus(x))))", "(all x.(Alexa(x) -> Numpus(x)) | (-Jompus(x) | Zumpus(x))))", "all x y.((Alex(x) & Numpus(x)) | (-Jompus(y) | Zumpus(y))))", "all x.(Alex(x) -> ((Numpus(x) | -Jompus(x)) | Zumpus(x)))", "(all x.(Alex(x) -> Numpus(x)) | (-Jompus(x) | Zumpus(x))))", "all x.(Alex(x) -> (Numpus(x) | -Jompus(x) | Zumpus(x)))", "all x.(Alex(x) -> (Numpus(x) | -Jompus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1232", "nl": "Grimpuses are lempuses and impuses and wumpuses.", "fol": "all x. (grimpus(x) -> (lempus(x) & impus(x) & wumpus(x)))", "prediction": ["all x.(Grimpus(x) -> (Lempuse(x) & Issue(x) & Wumpus(x)))", "all x.(Grimpus(x) -> (Lempuse(x) | Issue(x) | Wumpus(x)))", "all x y.((Grimpus(x) & Lempuse(y)) -> (Issue(x) | Wumpus(x)))", "all x y.((Grimpus(x) & Lempuse(y)) -> (Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x)))", "(all x.(Grimpus(x) -> Lempuse(x)) & all y.(Issue(y) -> Wumpus(y)))", "(all x.(Grimpuse(x) -> Lempuse(x)) & all y.(Issue(y) -> Wumpuse(y)))", "all x.(Grimpus(x) -> (Lempuse(x) & Issue(x) & Wumpus(x)))", "all x.(Grimpuse(x) -> (Lempuse(x) | Imperator(x) | Wumpus(x)))", "all x.(Grimpus(x) -> (Lempuse(x) | Imperator(x) | Wumpus(x)))", "(all x.(Grimpus(x) -> Lempuse(x)) & all y.(Issue(y) -> Wumpus(y)))", "(all x.(Grimpuse(x) -> Lempuse(x)) & all y.(Issue(y) -> Wumpuse(y)))", "(all x.(Grimpus(x) -> Lempuse(x)) & (Issue(x) | Wumpus(x)))", "all x.(Grimpus(x) -> (Lempuse(x) & Issue(x) & Wumpus(x)))", "all x.(Grimpus(x) -> (Lampus(x) | Impectus(x) | Wumpus(x)))", "all x.(Grimpuse(x) -> (Lempuse(x) | Impecte(x) | Wumpuse(x)))", "(all x.(Grimpus(x) -> Lempus(x)) & all y.(Issue(y) -> Plumpus(y)))"]}
{"id": "prontoqa_train_1233", "nl": "Sally is a grimpus.", "fol": "grimpus(Sally)", "prediction": ["all x.(Sally(x) -> Grimpus(x))", "Sally is a Grimpus.", "(Grimpus(Sally) & Grimpus(Sally))", "all x.(Sally(x) -> Grimpus(x))", "Sally is a Grimpus.", "Sally is a Gruppus.", "all x.(Sally(x) -> Gruppus(x))", "all x.((Sally(x) & Grimpus(x)) -> Scarlett(x))", "(Grimpus(Sally) & Grimpus(Sally))", "Sally is a Grimpus.", "Sally is Grimpus.", "all x.(Sally(x) -> Grimpus(x))", "Sally is a Gruppus.", "(Grimpus(Sally) & Gruffus(Sally))", "All x.(Sally(x) -> Grimpus(x))", "Sally is a Grimpus."]}
{"id": "prontoqa_train_1234", "nl": "Sally is a brimpus, a wumpus, or a tumpus.", "fol": "(brimpus(Sally) | wumpus(Sally) | tumpus(Sally))", "prediction": ["all x.(Sally(x) -> (Brimpus(x) | Wumpus(x) | Tumpus(x)))", "(Brimpus(s) | Wumpus(s) | Tumpus(s)))", "all x.(Sally(x) -> (Brimpus(x) | Wumpus(x) | Tumpus(x)))", "(Brimpus(s) | Wumpus(s) | Tumpus(s)))", "(Brimpus,Wumpus,Tumpus)", "(all x.(Sally(x) -> Brimpus(x)) | (Wumpus(x) | Tumpus(x))))", "all x.(Sally(x) -> (Brimpus(x) | Wumpus(x) | Tumpus(x)))", "exists x.(Sally(x) & ((Brimpus(x) & -Wumpus(x)) | (-Brimpus(x) & Wumpus(x)))))", "exists x.(Sally(x) & ((Brimpus(x) | Wumpus(x)) | Tumpus(x))))", "all x y.(Sally(x) -> (Brimpus(x) | Wumpus(x) | Tumpus(y)))", "all x.(Sally(x) -> (Brimpus(x) | Wumpus(x) | Tumpus(x)))", "exists x.(Sally(x) & ((Brimpus(x) & -Wumpus(x)) | (-Brimpus(x) & -Wumpus(x)))))", "all x.(Sally(x) -> (Brumpus(x) | Wumpus(x) | Tumpus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Wumpus(x) | Tumpus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Humpus(x) | Tumpus(x)))", "all x.(Sally(x) -> (Brumpus(x) | Wumpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1235", "nl": "Everything that is a vumpus or a shumpus or a tumpus is a brimpus, a sterpus, and a lempus.", "fol": "all x. ((vumpus(x) | shumpus(x) | tumpus(x)) -> (brimpus(x) & sterpus(x) & lempus(x)))", "prediction": ["all x.((Vumpus(x) | Shumpus(x) | Tumpus(x)) -> (Brimpus(x) & Sterpus(x) & Lempus(x)))", "all x.((Vumpus(x) | Humpus(x) | Tumpus(x)) -> (Brimpus(x) & Sterpus(x) & Lempus(x)))", "all x.((Vumpus(x) | Humpus(x) | Tumpus(x)) -> (Brimpus(x) & Sterpus(x) & Lempus(x)))", "all x.(((Vumpus(x) | Shumpus(x) | Tumpus(x))) -> (Brimpus(x) & Sterpus(x) & Lempus(x)))", "all x y.((Vumpus(x) | Shumpus(x) | Tumpus(x)) -> (Brimpus(y) & Sterpus(y) & Lempus(y)))", "all x.((Vumpus(x) | Shumpus(x) | Tumpus(x)) -> (Brimpus(x) & Sterpus(x) & Lempus(x)))", "all x y.((Vumpus(x) | Humpus(x) | Tumpus(x)) -> (Brimpus(y) & Sterpus(y) & Lempus(y)))", "all x.((Vumpus(x) | Humpus(x) | Tumpus(x)) -> (Brimpus(x) & Sterpus(x) & Lempus(x)))", "all x.((Vumpus(x) | Humpus(x) | Tumpus(x)) -> (Brimpus(x) & Sterpus(x) & Lempus(x)))", "(all x.((Vumpus(x) | Humpus(x) | Tumpus(x))) -> (Brimpus(x) | Sterpus(x) | Lempus(x)))", "all x.((Vumpus(x) | Shumpus(x) | Tumpus(x)) -> (Brimpus(x) & Sterepus(x) & Lempus(x)))", "all x.((Vimpus(x) | Shumpus(x) | Tumpus(x)) -> (Brimpus(x) & Sterepus(x) & Lempus(x)))", "all x.(Vumpus(x) | Shumpus(x) | Tumpus(x)) -> (Brimpus(x) | Sterpus(x) | Lempus(x)))", "(all x.((Vumpus(x) | Humpus(x) | Tumpus(x))) -> (Brimpus(x) | Sterpus(x) | Lempus(x)))", "all x y.((Vumpus(x) | Humpus(x) | Tumpus(x)) -> (Brimpus(y) | Sterpus(y) | Lempus(y)))", "all x.(Vumpus(x) | Shumpus(x) | Tumpus(x)) -> (Brimpus(x) & Sterpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_1236", "nl": "Everything that is a brimpus, a wumpus, and a zumpus is a shumpus.", "fol": "all x. ((brimpus(x) & wumpus(x) & zumpus(x)) -> shumpus(x))", "prediction": ["all x.((Brimpus(x) | Wumpus(x) | Zumpus(x)) -> Humpus(x))", "all x y z.((Brimpus(x) & Wumpus(y) & Zumpus(z) & Brimpus(x) & Wumpus(y) & Zumpus(z)) -> Humpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Zumpus(x)) -> Humpus(x))", "all x.(((Brimpus(x) | Wumpus(x) | Zumpus(x))) -> Humpus(x))", "all x y z.((Brimpus(x) & Wumpus(y) & Zumpus(z) & Brimpus(x) & Wumpus(y) & Zumpus(z)) -> Humpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Zumpus(x)) -> Humpus(x))", "all x.(((Brimpus(x) | Wumpus(x) | Zumpus(x))) -> Humpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Zumpus(x)) -> Humpus(x))", "(all x.((Brimpus(x) | Humpus(x)) & Zumpus(x)) -> Humpus(x))", "all x.(((Brimpus(x) | Wumpus(x) | Zumpus(x))) -> Humpus(x))", "(all x.((Brimpus(x) | Wumpus(x) | Zumpus(x)) -> Humpus(x))", "(all x.((Brumpus(x) | Humpus(x)) & Tospus(x)) -> Humpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Zumpus(x)) -> Humpus(x))", "all x.((Brumpus(x) | Wumpus(x) | Zumpus(x)) -> Shumpus(x))", "all x.((Brumpus(x) & Wumpus(x) & Zumpus(x)) -> Humpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Zumpus(x)) -> Humpus(x))"]}
{"id": "prontoqa_train_1237", "nl": "Lorpuses are not shumpuses.", "fol": "all x. (lorpus(x) -> -shumpus(x))", "prediction": ["all x.(Lorpus(x) -> -Shumpus(x))", "all x.(Lorpus(x) -> -Shumpus(x))", "(all x.(Lorpuse(x) -> -Shumpus(x)))", "all x.(Lorpuse(x) -> -Shumpus(x))", "(all x.(Lorpus(x) -> -Shumpus(x)))", "all x y.((Lorpuse(x) & Shumpus(y)) -> -Shumpus(x))", "all x.(Lorpus(x) -> -Shumpus(x))", "-Shumpuse(lorpus)", "(all x.(Lorpuse(x) -> -Shumpus(x)))", "(-Shumpus(lorpus))", "all x.(Lorpus(x) -> -Shumpus(x))", "all x.(Lorpuse(x) -> -Shumpus(x))", "all x.(Lorpus(x) -> -Shumpus(x))", "all x.(Lorpuse(x) -> -Shumpuse(x))", "all x.(Lorpus(x) -> -Shumpus(x))", "all x.(Lurpuse(x) -> -Shumpus(x))"]}
{"id": "prontoqa_train_1238", "nl": "Every rompus is a lorpus.", "fol": "all x. (rompus(x) -> lorpus(x))", "prediction": ["all x.(Rompus(x) -> Lorpus(x))", "(all x.(Rompus(x) -> Lorpus(x))", "all x.(Rompus(x) -> Lorpus(x))", "all x y.((Rompus(x) & Lorpus(y)) -> Is(x,y))", "all x.(Rompus(x) -> Lorpus(x))", "all x.(rompus(x) -> Lorpus(x))", "all x y.((Rompus(x) & Lorpus(y)) -> Has(x,y))", "all x.(Rompus(x) -> Lorpus(x))", "exists x.(rompus(x) & Lorpus(x))", "all x.(Rompus(x) -> Lorpus(x))", "exists x.(rompus(x) & Lorpus(x))", "all x.(Rompus(x) -> Lorpus(x))", "all x.(Rompus(x) -> Lord(x))", "exists x.(rompus(x) & Lord(x))", "all x.(Rompus(x) -> Lorpus(x))", "all x.(Rompus(x) -> Lord(x))"]}
{"id": "prontoqa_train_1239", "nl": "Alex is a wumpus.", "fol": "wumpus(Alex)", "prediction": ["all x.(Alex(x) -> Wumpus(x))", "Alex is a wumpus.", "all x.(Alex(x) -> Wumpus(x))", "all x.(Wumpus(x) -> Alex(x))", "(Wumpus(Alex) & HasWumpus(Alex))", "Alex is a wumpus.", "Alex is a Wumpus.", "all x.(Alex(x) -> Wumpus(x))", "(Wumpus(Alex) & HasWumpus(Alex))", "Alex is a wumpus.", "all x.(Wumpus(x) -> Alex(x))", "all x.(Wumpus(x) -> Alex(x))", "(Wumpus)", "All x.(Alex(x) -> Wumpus(x))", "all x.(Wumpus(x) -> Alex(x))", "All x.(Alex(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_1240", "nl": "Everything that is a tumpus, a shumpus, or a brimpus is a gorpus, a zumpus, and a vumpus.", "fol": "all x. ((tumpus(x) | shumpus(x) | brimpus(x)) -> (gorpus(x) & zumpus(x) & vumpus(x)))", "prediction": ["all x.((Tumpus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(x) & Zumpus(x) & Vumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(x) | Zumpus(x) | Vumpus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Brimpus(x)) -> (Gorpus(x) & Zumpus(x) & Vumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(x) & Zumpus(x) & Vumpus(x)))", "all x y.((Tumpus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(y) | Zumpus(y) | Vumpus(y)))", "all x.(Tumpus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(x) & Zumpus(x) & Vumpus(x)))", "(all x.((Tumpus(x) | Humpus(x) | Brimpus(x))) -> (Gorpus(x) & Zumpus(x) & Vumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(x) | Zumpus(x) | Vumpus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Brimpus(x)) -> (Gorpus(x) | Zumpus(x) | Vumpus(x)))", "all x.(((Tumpus(x) | Humpus(x) | Brimpus(x))) -> (Gorpus(x) | Zumpus(x) | Vumpus(x)))", "(all x.((Tumpus(x) | Humpus(x) | Brimpus(x))) -> (Gorpus(x) & Zumpus(x) & Vumpus(x)))", "all x y.((Tumpus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(y) | Zumpus(y) | Vumpus(y)))", "all x.((Tumpus(x) | Shumpus(x) | Brimpus(x)) -> (Gorpus(x) & Zumpus(x) & Vumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(x) & Zumpus(x) & Vumpus(x)))", "(all x.((Tumpus(x) | Humpus(x) | Brimpus(x))) -> (Gorpus(x) & Zumpus(x) & Vumpus(x)))", "all x.((Tompus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(x) | Zumpus(x) | Vumpus(x)))"]}
{"id": "prontoqa_train_1241", "nl": "Dumpuses are not lorpuses.", "fol": "all x. (dumpus(x) -> -lorpus(x))", "prediction": ["all x.(Dumpuse(x) -> -Lorpuse(x))", "all x.(Dumpuse(x) -> -Lorpus(x))", "(-Lorpus(dumpuse) & -Lorpus(dumpuse))", "(all x.(Dumpuse(x) -> -Lorpuse(x)))", "(-Lorpus(dumpuse) & -Lorpus(dumpuse,lorpus))", "all x.(Dumpuse(x) -> -Lorpuse(x))", "-Lorpuse(dumpuse)", "(Lorpuse(dumpus) & -Lumpouse(dumpus))", "all x.(Dumpuse(x) -> -Lorpus(x))", "-Lumpus(dumpuse)", "all x.(Dumpuse(x) -> -Lorpuse(x))", "all x.(Dumpus(x) -> -Lorpus(x))", "all x.(Dumpus(x) -> -Lorpus(x))", "all x.(Dumpus(x) -> -Lorpuse(x))", "all x.(Dumpuse(x) -> -Lorpuse(x))", "all x.(Dumpus(x) -> -Lorpus(x))"]}
{"id": "prontoqa_train_1242", "nl": "Every rompus is a zumpus, a lorpus, and a tumpus.", "fol": "all x. (rompus(x) -> (zumpus(x) & lorpus(x) & tumpus(x)))", "prediction": ["all x.(Rompus(x) -> (Tompus(x) | Lorpus(x) | Tumpus(x)))", "(all x.(Rompus(x) -> Zumpus(x)) & all y.(Lorpus(y) & all z.(Tumpus(z) & -Tompus(z))))", "all x.(Rompus(x) -> (Tompus(x) & Lorpus(x) & Tumpus(x)))", "(all x.(rompus(x) -> Zumpus(x)) & all y.(lorpus(y) -> Tumpus(y)))", "all x.(rompus(x) -> (Tompus(x) | Lorpus(x) | Tumpus(x)))", "(all x.(Rompus(x) -> Tossus(x)) & all y.(Lorpus(y) & All z.(Tompus(z) & Tossus(z))))", "all x y z.(Rompus(x) -> (Tompus(y) & Lorpus(z) & Tumpus(x)))", "(all x.(Rompus(x) -> Zumpus(x)) & all y.(Lorpus(y) & -Tompus(y))))", "all x.(Rompus(x) -> (Tompus(x) | Lorpus(x) | Tumpus(x)))", "exists x.(rompus(x) & Zumpus(x) & Lorpus(x) & Tumpus(x))", "all x y.((Rompus(x) & Zumpus(y)) -> (Lorpus(x) & Tumpus(x)))", "all x.(Rompus(x) -> (Tompus(x) & Lorpus(x) & Tumpus(x)))", "exists x.(rompus(x) & Zumpus(x) & Lorpus(x) & Tumpus(x))", "all x.(Rompus(x) -> (Zumpus(x) | Lorpus(x) | Tumpus(x)))", "all x.(Rompus(x) -> (Tompus(x) & Lorpus(x) & Tumpus(x)))", "all x.(Rompus(x) -> (Zumpus(x) | Lorpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1243", "nl": "Sally is a jompus and a dumpus and a lempus.", "fol": "(jompus(Sally) & dumpus(Sally) & lempus(Sally))", "prediction": ["all x.(Sally(x) -> (Jompus(x) & Dumpus(x) & Lempus(x)))", "(Jompus(Sally) & Dumpus(Sally) & Lempus(Sally))", "Sally is a jompus and a dumpus and a lempus.", "(all x.(Sally(x) -> Jompus(x)) & all y.(Dumpus(y) & Lempus(y))))", "(Jompus(Sally) | Dumpus(Sally) | Lempus(Sally))", "all x.(Sally(x) -> (Jompus(x) & Dumpus(x) & Lempus(x)))", "(Jompus(Sally) & Dumpus(Sally) & Lempus(Sally))", "Sally is a Jompus and Dumpus and Lempus.", "Sally is a jompus and a dumpus and a lempus.", "all x.(Sally(x) -> (Jimpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Sally(x) -> (Jompus(x) & Dumpus(x) & Lempus(x)))", "(all x.(Sally(x) -> Jompus(x)) & (Dumpus(x) & Lempus(x)))", "exists x.(Sally(x) & Jompus(x) & Dumpus(x) & Lempus(x))", "(Jompus(Sally) & Dumpus(Sally) & Lempus(Sally))", "all x.(Sally(x) -> (Jompus(x) & Dumpus(x) & Lempus(x)))", "all x.(Sally(x) -> (Jompus(x) | Dumpus(x) | Lempus(x)))"]}
{"id": "prontoqa_train_1244", "nl": "Everything that is a brimpus and a tumpus and a lorpus is a yumpus and a rompus and a shumpus.", "fol": "all x. ((brimpus(x) & tumpus(x) & lorpus(x)) -> (yumpus(x) & rompus(x) & shumpus(x)))", "prediction": ["all x.((Brimpus(x) & Tumpus(x) & Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x y.((Brimpus(x) & Tumpus(y) & Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brimpus(x) & Tumpus(x) & Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "(all x.((Brimpus(x) & Tumpus(x) & Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x y z.((Brimpus(x) & Tumpus(y) & Lorpus(z) & Brimpus(x) & Tumpus(y) & Lorpus(z)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x y.((Brimpus(x) & Tumpus(x) & Lorpus(y)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brimpus(x) & Tumpus(x) & Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "(all x.((Brimpus(x) & Tumpus(x) & Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x y.((Brimpus(x) & Tumpus(y) & Lorpus(x)) -> (Yumpus(y) & Rompus(y) & Humpus(y)))", "all x.((Brimpus(x) & Tumpus(x) & Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "(all x.((Brimpus(x) & Tumpus(x) & Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brumpus(x) & Tumpus(x) & Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brumpus(x) & Tumpus(x) & Lordpus(x)) -> (Yumpus(x) & Rompus(x) & Shumpus(x)))"]}
{"id": "prontoqa_train_1245", "nl": "Alex is a yumpus.", "fol": "yumpus(Alex)", "prediction": ["all x.(Alex(x) -> Yumpus(x))", "Alex is yumpus.", "all x.(Alex(x) -> Yumpus(x))", "Alex is yumpus.", "Alex isYumpus(Alex)", "all x.(Alex(x) -> Yampus(x))", "(Yumpus(Alex) & HasYump(Alex))", "Alex is yumpus.", "all x.(Alex(x) -> Yumpus(x))", "(Yumpus)", "Alex is yumpus.", "all x.(Alex(x) -> Yampus(x))", "All x.(Alex(x) -> Yumpus(x))", "all x.(Yumpus(x) -> Alex(x))", "All x.(Alex(x) -> Yumpus(x))", "all x.(Alex(x) -> Yumpa(x))"]}
{"id": "prontoqa_train_1246", "nl": "Everything that is a shumpus and a sterpus and a tumpus is a grimpus and a jompus and a rompus.", "fol": "all x. ((shumpus(x) & sterpus(x) & tumpus(x)) -> (grimpus(x) & jompus(x) & rompus(x)))", "prediction": ["all x.((Shumpus(x) & Sterpus(x) & Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "(all x.((Shumpus(x) & -Sterpus(x) & -Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "all x y.((Shumpus(x) & Sterpus(y) & Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "all x y z.((Shumpus(x) & Sterpus(y) & Tumpus(z) & Grimpus(x) & Jompus(x) & Rompus(x)) -> (Smoothpus(x) & Sterpus(y) & Tumpus(z) & Jompus(x) & Rompus(x)))", "all x.((Shumpus(x) & Sterpus(x) & Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "all x.((Shumpus(x) & Sterus(x) & Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "all x.((Shumpus(x) | Sterpus(x) | Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "(all x.((Shumpus(x) & Sterpus(x) & Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "all x y.((Shumpus(x) & Sterpus(y) & Tumpus(y)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "(all x.((Shumpus(x) & -Sterpus(x) & -Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "all x.((Shumpus(x) & Sterpus(x) & Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "all x y.((Shumpus(x) & Sterpus(y) & Tumpus(x)) -> (Smoothpus(x) & Jompus(x) & Rompus(x)))", "all x.((Shumpus(x) | Sterpus(x) | Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "all x.((Shumpus(x) & Sterus(x) & Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "all x.((Shumpus(x) & Sterpus(x) & Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "all x.((Shumpus(x) | Sterpus(x) | Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_1247", "nl": "Wren is a shumpus.", "fol": "shumpus(Wren)", "prediction": ["all x.(Wren(x) -> Humpus(x))", "all x.(Wren(x) -> Humpus(x))", "(Shumpus(Wren) & HasShump(Wren,Shumpus))", "all x.(Wren(x) -> Shumpus(x))", "(Shumpus(wren) & Shumpus(wren))", "all x.(Wren(x) -> Humpus(x))", "(Shumpus(wren) & HasShump(wren,x))", "all x.(Wren(x) -> Shumpus(x))", "(Shumpus(wren) -> Shumpus(wren))", "exists x.(Shumpus(x) & Wren(x))", "All x.(Wren(x) -> Humptus(x))", "all x.(Wren(x) -> Humpus(x))", "all x.(Wren(x) -> Shumpus(x))", "(Shumpus)", "All x.(Wren(x) -> Humptus(x))", "all x.(Wren(x) -> Humpus(x))"]}
{"id": "prontoqa_train_1248", "nl": "Sally is a tumpus and Sally is a sterpus and Sally is not a yumpus.", "fol": "(tumpus(Sally) & sterpus(Sally) & -yumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> Sterpus(x)) & (Sally(x) -> -Yumpus(x)))", "all x y z.((Sally(x) & Tumpus(x) & Sterpus(y) & -Yumpus(z)) -> (Tumpus(x) & Sterpus(y) & -Yumpus(z)))", "all x y.((Sally(x) & Tumpus(x) & Sterpus(y)) -> (Tumpus(x) & -Yumpus(y)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sterpus(y) -> -Yumpus(y)))", "all x.(Sally(x) -> (Tumpus(x) & Sterpus(x) & -Yumpus(x)))", "(all x y.(Tumpus(x) -> Sally(x)) & (Sterpus(y) -> Sally(y))) & (Yumpus(y) -> -Sally(y)))", "all x y z.((Sally(x) & Tumpus(x) & Sterpus(y) & -Yumpus(z)) -> (Tumpus(x) & Sterpus(y) & -Yumpus(z)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> Sterpus(x)) & (Sally(x) -> -Yumpus(x)))", "(all x y.(Tumpus(x) & Tumpus(y)) & (Sterpus(y) & -Yumpus(y)))", "exists x.(Sally(x) & Tumpus(x) & Sterpus(x) & -Yumpus(x))", "all x y.((Sally(x) & Tumpus(x) & Sterpus(y)) -> (Tumpus(x) & Sterpus(y) & -Yumpus(y)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sterpus(x) -> Sterpus(x)) & (Yumpus(x) -> -Yumpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sterpus(y) -> -Yumpus(y)))", "all x.(Sally(x) -> (Tumpus(x) & Sterpus(x) & -Yumpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> Sterpus(y))) & all z.(Sally(z) -> -Yumpus(z)))", "all x y z.((Sally(x) & Tumpus(x) & Sterpus(y) & -Yumpus(z)) -> (Tumpus(x) & Sterpus(y) & -Yumpus(z)))"]}
{"id": "prontoqa_train_1249", "nl": "Sally is a shumpus, Sally is not a zumpus, or Sally is a zumpus.", "fol": "(shumpus(Sally) | -zumpus(Sally) | zumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Humpus(x)) & (-Sally(x) -> Zumpus(x)))", "all x.(Sally(x) -> (Shumpus(x) | -Zumpus(x) | Zumpus(x)))", "all x y.((Sally(x) & Shumpus(x)) | (-Sumpus(x) | Zumpus(y))))", "(all x.(Sally(x) -> Humpus(x)) & (-Sally(x) -> Zumpus(x)))", "all x.(Sally(x) -> (Shumpus(x) | -Tompus(x) | Tompus(x)))", "all x y.((Sally(x) & Shumpus(x)) | (-Shumpus(x) | Zumpus(x) | Zumpus(y))))", "(all x y.(Sally(x) -> Humpus(x)) | (-Sally(y) & Zumpus(y)) | (-Sally(y) & Zumpus(y))))", "(all x.(Sally(x) -> Humpus(x)) & (-Tompus(x) | Tompus(x))))", "(all x.(Sally(x) -> Shumpus(x)) | (-Sally(x) & Zumpus(x))))", "all x.(Sally(x) -> (Shumpus(x) | -Zumpus(x) | Zumpus(x)))", "exists x.(Sally(x) & ((Shumpus(x) | -Zumpus(x)) | Zumpus(x))))", "(all x.(Sally(x) -> Humpus(x)) & all y.(Sally(y) -> -Tompus(y))))", "all x y.(Sally(x) & (Shumpus(x) | -Tompus(x) | Tompus(y)))", "exists x.(Sally(x) & ((Shumpus(x) & -Zumpus(x)) | Zumpus(x))))", "(all x.(Sally(x) -> Shumpus(x)) | (-Sally(x) & Zumpus(x)) | (-Sally(x) & Zumpus(x))))", "all x.(Sally(x) -> (Shumpus(x) | -Tompus(x) | Tompus(x)))"]}
{"id": "prontoqa_train_1250", "nl": "Yumpuses are lorpuses.", "fol": "all x. (yumpus(x) -> lorpus(x))", "prediction": ["all x.(Yumpus(x) -> Lorpus(x))", "(Lorpuse(y) & Yumpus(z))", "all x y.((Yumpus(x) & Lorpus(y)) -> (Lorpus(x) & -Lorpus(y)))", "all x.(Yumpus(x) -> Lorpus(x))", "all x y.((Yumpuse(x) & Lorpus(y)) -> (Lorpus(x) & -Lorpus(y)))", "(Lorpuse(y) & Yumpus(z))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Umahawk(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Loomis(x))", "all x y.((Yumpus(x) & Lorpus(y)) -> Is(x,y))", "all x.(Umahawk(x) -> Lorpuse(x))", "All x.(Umbuse(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Loomis(x))", "All x.(Yumpuse(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_1251", "nl": "Polly is a vumpus and Polly is not a lorpus and Polly is a jompus.", "fol": "(vumpus(Polly) & -lorpus(Polly) & jompus(Polly))", "prediction": ["(all x.(Polly(x) -> Vumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Jompus(x)))", "all x y z.((Polly(x) & Vumpus(x) & Polly(y) & -Lorpus(y)) -> (Vumpus(x) & Jompus(y)))", "(all x.(Polly(x) -> Vumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Jompus(x)))", "all x y z.((Polly(x) & Vumpus(x) & Polly(y) & Lorpus(z)) -> (-Lorpus(y) & Jompus(z)))", "all x y.((Polly(x) & Vumpus(x) & Polly(y)) -> (-Lorpus(y) & Jompus(y)))", "(all x y z.((Polly(x) & Vumpus(y) & -Lorpus(z)) -> (Vumpus(x) & -Lorpus(y) & -Jompus(z)))", "all x y z.((Polly(x) & Vumpus(x) & Polly(y) & -Lorpus(y)) -> (Vumpus(x) & Jompus(y)))", "(all x.(Vumpus(x) -> Polly)) & (-Lorpus(x) -> Polly)) & (-Lorpus(x) -> Polly)))", "(all x y.(Vumpus(x) -> Polly(x)) & (Lorpus(y) -> Polly(y))) & (Jompus(y) -> Polly(y)))", "exists x.(Polly(x) & (Vumpus(x) | -Lorpus(x) | Jompus(x)))", "(all x.(Polly(x) -> Vumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Jompus(x)))", "all x.(Polly(x) -> (Vumpus(x) & -Lorpus(x) & Jompus(x)))", "all x y z.((Polly(x) & Vumpus(x) & Polly(y) & -Lorpus(y) & Jompus(z)) -> (Vumpus(x) & -Lorpus(y) & -Jompus(z)))", "(all x.(Polly(x) -> Vumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Jompus(x)))", "all x y.((Polly(x) & Vumpus(x) & Polly(y)) -> (-Lorpus(y) & Jompus(y)))", "(all x y.(Vumpus(x) -> Polly(x)) & (-Lorpus(y) -> Polly(y)) & (Jompus(y) -> Polly(y)))"]}
{"id": "prontoqa_train_1252", "nl": "Polly is a yumpus, Polly is not a yumpus, or Polly is a lempus.", "fol": "(yumpus(Polly) | -yumpus(Polly) | lempus(Polly))", "prediction": ["(all x.(Polly(x) -> Yampus(x)) | (-Yumpus(x) | Lempus(x))))", "all x y.((Polly(x) & (Yumpus(x) | -Yumpus(x) | Lempus(y))) -> (Yumpus(x) | Lempus(y)))", "(yumpus(x) | (-yumpus(y) | Lempus(y))))", "all x.((Polly(x) & Yumpus(x)) | (-Yumpus(x) | Lempus(x))))", "(all x.(Polly(x) -> Yampus(x)) & (-Yumpus(x) | Lempus(x))))", "exists x.(Polly(x) & ((Yumpus(x) & Polly(x)) | (-Yumpus(x) & Polly(x)))))", "(all x.(Polly(x) -> Yampus(x)) | (-Yumpus(x) | Lempus(x))))", "all x.(Polly(x) -> (Yumpus(x) | -Yumpus(x) | Lempus(x)))", "all x y z.((Polly(x) & Yumpus(y) & Polly(z)) -> (Yumpus(x) | -Yumpus(z) | Lempus(z))))", "(all x y.(Yumpus(x) -> Polly(y)) & (-Yumpus(y) | Lempus(y))))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Yumpus(x)) | (Polly(x) -> Lempus(x))))", "all x y.((Polly(x) & Yampus(x)) | (-Yumpus(y) | Lempus(y))))", "all x.((Polly(x) & Yumpus(x)) | (-Yumpus(x) | Lempus(x))))", "(all x.(Polly(x) -> Yampus(x)) | (-Yumpus(x) | Lempus(x))))", "exists x.(Polly(x) & (Yumpus(x) | -Yumpus(x) | Lempus(x)))", "exists x.(Polly(x) & (Yumpus(x) | -Yumpus(x) | Lempus(x)))"]}
{"id": "prontoqa_train_1253", "nl": "Everything that is a rompus, a numpus, or a zumpus is a jompus.", "fol": "all x. ((rompus(x) | numpus(x) | zumpus(x)) -> jompus(x))", "prediction": ["all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x.(((Rompus(x) | Numpus(x) | Zumpus(x))) -> Jompus(x))", "all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x y.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(y))", "all x.(((Rompus(x) | Numpus(x) | Zumpus(x))) -> Jompus(x))", "all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x.((Rrompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x y.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(y))", "(all x.((Rompus(x) | Numpus(x) | Zumpus(x))) -> Jompus(x))", "all x.(((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))"]}
{"id": "prontoqa_train_1254", "nl": "Sam is a lempus and a sterpus and a rompus.", "fol": "(lempus(Sam) & sterpus(Sam) & rompus(Sam))", "prediction": ["all x.(Sam(x) -> (Lempus(x) & Sterpus(x) & Rompus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sterpus(x) & Rompus(x)))", "all x y.((Sam(x) & Lempus(y)) -> (Sterepus(x) & Rompus(x)))", "all x y z.((Sam(x) & Lempus(y) & Sterpus(z)) -> (Lempus(x) & Sterpus(y) & Rompus(z)))", "all x.(Sam(x) -> (Lempus(x) & Sterpus(x) & Rompus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Sterpus(y) -> Sterpus(y)) & all z.(Rompus(z) -> Rompus(z))))", "(Lempus(sam) & Sterpus(sam) & Rompus(sam))", "all x y.((Sam(x) & Lempus(x) & Sterpus(y)) -> (Rompus(x) & Lempus(y) & Sterpus(y)))", "(all x.(Sam(x) -> Lempus(x)) & (Sterpus(x) & Rompus(x)))", "all x.(Sam(x) -> (Lempus(x) & Sterepus(x) & Rompus(x)))", "exists x.(Sam(x) & Lempus(x) & Sterpus(x) & Rompus(x))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Sterpus(y) & -Rompus(y))))", "(all x.(Sam(x) -> Lempus(x)) & (Sterpus(x) & Rompus(x)))", "all x.(Sam(x) -> (Lempus(x) | Sterpus(x) | Rompus(x)))", "exists x.(Sam(x) & Lempus(x) & Sterpus(x) & Rompus(x))", "all x.(Sam(x) -> (Lempus(x) & Sterpus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_1255", "nl": "Everything that is a numpus and a lempus and a zumpus is a shumpus.", "fol": "all x. ((numpus(x) & lempus(x) & zumpus(x)) -> shumpus(x))", "prediction": ["all x.((Numpus(x) & Lempus(x) & Zumpus(x)) -> Humpus(x))", "all x y z.((Numpus(x) & Lempus(y) & Zumpus(z) & Numpus(x) & Lempus(y) & Zumpus(z)) -> Humpus(x))", "all x.((Numpus(x) & Lempus(x) & Zumpus(x)) -> Humpus(x))", "all x y.((Numpus(x) & Lempus(y) & Zumpus(y)) -> Humpus(x))", "(all x.((Numpus(x) & Lempus(x) & Zumpus(x)) -> Humpus(x))", "all x.((Numpus(x) | Lempus(x) | Zumpus(x)) -> Humpus(x))", "all x.((Numpus(x) & Lempus(x) & Zumpus(x)) -> Humpus(x))", "all x y.((Numpus(x) & Lempus(y) & Zumpus(x)) -> Humpus(x))", "(all x.((Numpus(x) & Lempus(x) & Zumpus(x)) -> Humpus(x))", "all x.((Nompus(x) | Lempus(x) | Zumpus(x)) -> Humpus(x))", "all x.((Nompus(x) & Lempus(x) & Zumpus(x)) -> Humpus(x))", "all x.((Numpus(x) & Lempus(x) & Zumpus(x)) -> Shumpus(x))", "all x.((Nompus(x) | Lempus(x) | Zumpus(x)) -> Humpus(x))", "all x.((Numpus(x) & Lempus(x) & Zumpus(x)) -> Humpus(x))", "all x.((Numpus(x) | Lempus(x) | Zumpus(x)) -> Humpus(x))", "all x.((Numpus(x) & Lempus(x) & Zumpus(x)) -> Shumpus(x))"]}
{"id": "prontoqa_train_1256", "nl": "Alex is not a shumpus, Alex is a yumpus, and Alex is a zumpus.", "fol": "(-shumpus(Alex) & yumpus(Alex) & zumpus(Alex))", "prediction": ["(all x.(Alex(x) -> -Shumpus(x)) & all y.(Alex(y) -> Yumpus(y))) & all z.(Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Humpus(y) & Yumpus(z)) -> (-Shumpus(x) & -Yumpus(y) & -Zumpus(z)))", "(all x y z.((Alex(x) & Humpus(y)) -> -Shumpus(x)) & ((Alex(z) & Yumpus(z))) -> Zumpus(z)))", "all x y z.((Alex(x) & Humpus(y) & Yumpus(z)) -> (-Shumpus(x) & Yampus(y) & Zumpus(z)))", "(all x.(Alex(x) -> -Shumpus(x)) & (Alex(x) -> Yumpus(x)) & (Alex(x) -> Zumpus(x)))", "(all x.(Alex(x) -> -Shumpus(x)) & all y.(Alex(y) -> Yumpus(y))) & all z.(Alex(z) -> Zumpus(z)))", "all x.(Alex(x) -> (-Shumpus(x) & -Yumpus(x) & -Zumpus(x)))", "all x.(Alex(x) -> (-Shumpus(x) & Yampus(x) & Zumpus(x)))", "(all x y z.((Alex(x) & Humpus(y) & Yumpus(z)) -> -Shumpus(x)) & ((Alex(x) & Yumpus(x)) -> Zumpus(x)))", "all x y z.((Alex(x) & Humpus(y) & Yumpus(z)) -> (-Shumpus(x) & Yampus(y) & Zumpus(z)))", "(all x.(Alex(x) -> -Shumpus(x)) | (Alex(x) -> Yumpus(x))) | (Alex(x) -> Zumpus(x)))", "exists x.(Alex(x) & -Shumpus(x) & Yampus(x) & Zumpus(x))", "(all x.(Alex(x) -> -Shumpus(x)) & all y.(Alex(y) -> Yumpus(y)) & all z.(Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Humpus(y) & Yumpus(z)) -> (-Shumpus(x) | (Yumpus(y) & Zumpus(z))))", "(all x.(Alex(x) -> -Shumpus(x)) | (Alex(x) -> Yumpus(x))) | (Alex(x) -> Zumpus(x)))", "all x y z.((Alex(x) & Humpus(y) & Yumpus(z)) -> (-Shumpus(x) & Yampus(y) & Zumpus(z)))"]}
{"id": "prontoqa_train_1257", "nl": "Wren is a tumpus and a yumpus and a jompus.", "fol": "(tumpus(Wren) & yumpus(Wren) & jompus(Wren))", "prediction": ["all x.(Wren(x) -> (Tumpus(x) & Yumpus(x) & Jompus(x)))", "all x y z.((Wren(x) & Tumpus(y) & Yumpus(z)) -> (Tumpus(x) & Yompus(x) & Jompus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & (Yumpus(x) | Jompus(x))))", "all x.(Wren(x) -> (Tumpus(x) & Yumpus(x) & Jompus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Jompus(z))))", "(Tumpus(w) & Yumpus(w) & Jompus(w))", "all x y.(Wren(x) -> (Tumpus(x) & Yumpus(y) & Jompus(y)))", "(all x.(Wren(x) -> Tumpus(x)) & (Yumpus(x) & Jompus(x)))", "(Tumpus(w) | Yumpus(w) | Jompus(w)))", "all x y z.((Wren(x) & Tumpus(y) & Yumpus(z)) -> (Tumpus(x) & Yompus(z) & Jompus(z)))", "all x.(Wren(x) -> (Tumpus(x) & Yumpus(x) & Jompus(x)))", "exists x.(Wren(x) & Tumpus(x) & Yumpus(x) & Jompus(x))", "all x.(Wren(x) -> (Tumpus(x) | Yumpus(x) | Jompus(x)))", "all x.(Wren(x) -> (Tumpus(x) & Yampus(x) & Jompus(x)))", "exists x.(Wren(x) & Tumpus(x) & Yampus(x) & Jompus(x))", "(all x.(Wren(x) -> Tumpus(x)) & (Yumpus(x) | Jompus(x))))"]}
{"id": "prontoqa_train_1258", "nl": "Wren is a lempus or a wumpus or a grimpus.", "fol": "(lempus(Wren) | wumpus(Wren) | grimpus(Wren))", "prediction": ["all x.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x)))", "all x y.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x)))", "(all x.(Wren(x) -> Lempus(x)) | (Wumpus(x) | Grimpus(x))))", "all x.(Wren(x) -> ((Lempus(x) | Wumpus(x) | Grimpus(x))))", "all x.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x)))", "all x y.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(y)))", "exists x.(Wren(x) & ((Lempus(x) & -Wumpus(x)) | (-Wumpus(x) & Grimpus(x)))))", "(all x.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x))))", "all x.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x)))", "all x y.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(y)))", "exists x.(Wren(x) & ((Lempus(x) | Wumpus(x) | Grimpus(x))) -> Lempus(x))", "all x.(Wren(x) -> (Limpus(x) | Wumpus(x) | Gruppus(x)))", "all x.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1259", "nl": "Everything that is a lorpus and an impus and a vumpus is a tumpus.", "fol": "all x. ((lorpus(x) & impus(x) & vumpus(x)) -> tumpus(x))", "prediction": ["all x.((Lorpus(x) & Imperator(x) & Vumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & Impossible(x) & Vumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & IsImpossible(x) & IsVumpus(x)) -> Tumpus(x))", "(all x.((Lorpus(x) & IsImpossible(x) & IsVumpus(x)) -> Tumpus(x))", "all x y.((Lorpus(x) & Imperator(y) & Vumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & Impermiss(x) & Vumpus(x)) -> Tumpus(x))", "all x y z.((Lorpus(x) & Imperator(y) & Vumpus(z) & Is(x,y)) -> Tumpus(x))", "all x y.((Lorpus(x) & Impossible(x) & Vumpus(y)) -> Tumpus(x))", "all x.((Lorpus(x) & Impossible(x) & Vumpus(x)) -> Tumpus(x))", "(all x.((Lorpus(x) & IsImpossed(x) & IsVumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Impossible(x) | Vumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & IsImpos(x) & IsVumpus(x)) -> Tumpus(x))", "all x.(((Lorpus(x) & Imperator(x) & Vumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Imperator(x) | Vumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & Imperempt(x) & Vumpus(x)) -> Tumpus(x))", "all x.((Larps(x) & Impossible(x) & Vumpus(x)) -> Tumpus(x))"]}
{"id": "prontoqa_train_1260", "nl": "Rex is a jompus and Rex is a numpus and Rex is not a tumpus.", "fol": "(jompus(Rex) & numpus(Rex) & -tumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> -Tumpus(x)))", "all x y z.((Rex(x) & Jompus(x) & Numpus(y) & Numpus(z)) -> (Jompus(x) & Numpus(y) & -Tumpus(z)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Numpus(y)) & all z.(Rex(z) -> -Tumpus(z))))", "all x y z.((Rex(x) & Jompus(x) & Numpus(y) & -Tumpus(z)) -> (Jompus(x) & Numpus(y) & -Tumpus(z)))", "all x y.((Rex(x) & Jompus(x) & Numpus(y)) -> (Jompus(x) & Numpus(y) & -Tumpus(x)))", "(all x y.(Jompus(x) -> Rex)) & (Nompus(y) -> Rex)) & (Tumpus(y) -> -Rex)))", "all x.(Rex(x) -> (Jompus(x) & Numpus(x) & -Tumpus(x)))", "(all x y z.((Rex(x) & Jompus(x)) -> Rex(x)) & ((Rex(y) & Numpus(y)) -> Rex(z)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> -Tumpus(x)))", "(Jompus(rex) & Numpus(rex) & -Tumpus(rex))", "(all x.(Jompus(x) -> Rex)) & (Nompus(x) -> Rex)) & (Tumpus(x) -> -Rex)))", "all x y z.((Rex(x) & Jompus(y) & Numpus(z)) -> (Jompus(x) & Numpus(z) & -Tumpus(x)))", "all x.(Rex(x) -> (Jompus(x) | Numpus(x) | -Tumpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Numpus(y)) & all z.(Rex(z) -> -Tumpus(z))))", "all x y.((Rex(x) & Jompus(x) & Numpus(y)) -> (Jompus(x) & Numpus(y) & -Tumpus(y)))", "(all x y.(Jompus(x) -> Rex(x)) & (Nompus(y) -> Rex(y)) & (Tumpus(y) -> -Rex(y)))"]}
{"id": "prontoqa_train_1261", "nl": "Every zumpus is a tumpus and a dumpus and a wumpus.", "fol": "all x. (zumpus(x) -> (tumpus(x) & dumpus(x) & wumpus(x)))", "prediction": ["all x.(Zumpus(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))", "all x y.((Zumpus(x) & Tumpus(y)) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))", "all x.(Zumpus(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))", "(all x.(Zumpus(x) -> Tumpus(x)) & all y.(Dumpus(y) & All z.(Wumpus(z)) -> Wumpus(z))))", "(all x.(Zumpus(x) -> Tumpus(x)) & (Dumpus(x) -> Wumpus(x)))", "all x y.((Zumpus(x) & Tumpus(y)) -> (Dumpus(x) & Wumpus(x)))", "all x.(Tompus(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))", "(all x.(Zumpus(x) -> Tumpus(x)) & all y.(Dumpus(y) & all z.(Wumpus(z) & -Tumpus(y))))", "all x.(Tompus(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))", "(all x.(Tompus(x) -> Tumpus)) & all y.(Dumpus(y) -> Wumpus(y)))", "all x.(Zumpus(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))", "exists x.(Zumpus(x) & Tumpus(x) & Dumpus(x) & Wumpus(x))", "all x.(Tompus(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))", "all x.(Zumpus(x) -> (Tumpus(x) | Dumpus(x) | Wumpus(x)))", "exists x.(Tompus(x) & Tumpus(x) & Dumpus(x) & Wumpus(x))", "all x.(Zumpus(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))"]}
{"id": "prontoqa_train_1262", "nl": "Wren is a brimpus, a tumpus, or a shumpus.", "fol": "(brimpus(Wren) | tumpus(Wren) | shumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(x)))", "all x y.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(x)))", "(all x.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(x))))", "exists x.(Wren(x) & ((Brimpus(x) & -Tumpus(x)) | (-Brimpus(x) & -Tumpus(x)))))", "exists x.(Wren(x) & ((Brimpus(x) & -Brimpus(x)) | (-Brumpus(x) & Tumpus(x)) | (-Brumpus(x) & Tumpus(x)))))", "all x.(Wren(x) -> ((Brimpus(x) | Tumpus(x) | Humpus(x))))", "all x.(Wren(x) -> (Brumpus(x) | Tumpus(x) | Humpus(x)))", "(all x.(Wren(x) -> Brimpus(x)) | (Tumpus(x) | Humpus(x))))", "(all x.(Wren(x) -> (Brumpus(x) | Tumpus(x) | Humpus(x))))", "all x y.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(y)))", "all x.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Brumpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(x)))"]}
{"id": "prontoqa_train_1263", "nl": "Sterpuses are shumpuses, zumpuses, and numpuses.", "fol": "all x. (sterpus(x) -> (shumpus(x) & zumpus(x) & numpus(x)))", "prediction": ["all x.(Sterpuse(x) -> (Shumpus(x) | Zumpus(x) | Numpuse(x)))", "all x.(Sterpuse(x) -> (Shumpus(x) | Zumpus(x) | Numpuse(x)))", "all x y z.((Sterpuse(x) & Shumpus(y) & Zumpus(z) & Numpuse(x)) -> (Shumpus(x) | Numpuse(x)))", "all x.(Sterpuse(x) -> (Shumpus(x) | Zumpus(x) | Numpuse(x)))", "(all x.(Sterpuse(x) -> (Shumpus(x) | Zumpus(x) | Numpuse(x)))", "(all x.(Sterpuse(x) -> Shumpus(x)) & all y.(Tompus(y) -> Numpuse(y)))", "(all x.(Sterpuse(x) -> Shumpuse(x)) & all y.(Tompuse(y) -> Numpuse(y)))", "all x.(Strerpus(x) -> (Shumpus(x) | Zumpus(x) | Numpuse(x)))", "all x y.((Sterpuse(x) & Shumpus(y)) -> (Tompus(y) | Numpuse(y)))", "(all x.(Sterpuse(x) -> Shumpuse(x)) & all y.(Tompuse(y) -> Numpuse(y)))", "all x.(Sterpuse(x) -> (Shumpus(x) | Zumpus(x) | Numpus(x)))", "all x.(Sterpuse(x) -> (Shumpuse(x) | Zumpuse(x) | Numpuse(x)))", "all x.(Sterpuse(x) -> (Shumpus(x) | Zumpus(x) | Numpuse(x)))", "all x.(Stumpus(x) -> (Shumpus(x) | Zumpus(x) | Numpus(x)))", "(all x.(Sterpuse(x) -> Shumpus(x)) & all y.(Tompus(y) -> Numpuse(y)))", "all x.(Sterpuse(x) -> (Shumpuse(x) | Zumpuse(x) | Numpuse(x)))"]}
{"id": "prontoqa_train_1264", "nl": "Everything that is a numpus, a shumpus, and a vumpus is not a zumpus.", "fol": "all x. ((numpus(x) & shumpus(x) & vumpus(x)) -> -zumpus(x))", "prediction": ["all x.((Numpus(x) | Humpus(x) | Vumpus(x)) -> -Zumpus(x))", "all x.((Numpus(x) | Humpus(x) | Vumpus(x)) -> -Zumpus(x))", "(all x.((Numpus(x) | Humpus(x)) & Vumpus(x)) -> -Zumpus(x))", "all x y.((Numpus(x) & Humpus(y) & Vumpus(x)) -> -Zumpus(x))", "all x.((Numpus(x) | Shumpus(x) | Vumpus(x)) -> -Zumpus(x))", "all x.((Numpus(x) | Humpus(x) | Vumpus(x)) -> -Zumpus(x))", "all x.((Nompus(x) | Humpus(x) | Vumpus(x)) -> -Zumpus(x))", "all x.((Numpus(x) & Humpus(x) & Vumpus(x)) -> -Zumpus(x))", "(all x.((Numpus(x) | Humpus(x) | Vumpus(x))) -> -Zumpus(x))", "all x.((Numpus(x) | Shumpus(x) | Vumpus(x)) -> -Zumpus(x))", "all x.((Nompus(x) & Humpus(x) & Vumpus(x)) -> -Zumpus(x))", "all x.((Nompus(x) | Humpus(x) | Vumpus(x)) -> -Zumpus(x))", "all x.((Numpus(x) & Shumpus(x) & Vumpus(x)) -> -Zumpus(x))", "(all x.((numpus) | shumpus(x) & vumpus(x)) -> -zumpus(x))", "(all x.((Numpus(x) | Humpus(x) | Vumpus(x))) -> -Zumpus(x))", "all x.((Numpus(x) | Humpus(x) | Vumpus(x)) -> -Zumpus(x))"]}
{"id": "prontoqa_train_1265", "nl": "Every brimpus is not an impus.", "fol": "all x. (brimpus(x) -> -impus(x))", "prediction": ["all x.(Brimpus(x) -> -Impossible(x))", "-Impossible(brimpus)", "all x.(Brimpus(x) -> -Impossible(x))", "(all x.(Brimpus(x) -> -Impossible(x)))", "all x y.((Brimpus(x) & Brimpus(y)) -> -Impossible(x))", "all x.(Brimpus(x) -> -Impossible(x))", "-Impossible(brimpus)", "-Impossed(brimpus)", "all x.(Brimpus(x) -> -Impossed(x))", "all x.(Brumpus(x) -> -Is(x,Impossible))", "all x.(Brumpus(x) -> -Is(x,Is(x,Is(x)))", "exists x.(Brimpus(x) & -Impossible(x))", "all x.(Brimpus(x) -> -Impossible(x))", "all x.(Brimpus(x) -> -Impossible(x))", "all x.(Brimpus(x) -> -Illegal(x))", "all x.(Brumpus(x) -> -Impossed(x))"]}
{"id": "prontoqa_train_1266", "nl": "Wren is a rompus, Wren is not a zumpus, or Wren is a wumpus.", "fol": "(rompus(Wren) | -zumpus(Wren) | wumpus(Wren))", "prediction": ["all x.((Wren(x) & Rompus(x)) | (-Tompus(x) | Wren(x))))", "all x y.((Wren(x) & Rompus(x)) | (-Tompus(y) | Wren(x))))", "(all x.(Wren(x) -> Rompus(x)) & (-Wren(x) -> Zumpus(x)) | (-Wren(x) -> Wumpus(x))))", "all x.(Wren(x) -> (Rompus(x) | -Zumpus(x) | Wren(x)))", "(all x.(Wren(x) -> Rompus(x)) | (-Wren(x) & Zumpus(x)) | (-Wren(x) & Wumpus(x))))", "(all x y.(Rompus(x) -> Wren(y)) & (-Tompus(y) | Wren(y))))", "all x y z.((Wren(x) & Rompus(y) & -Zumpus(z)) | (Wren(x) & Wumpus(x))))", "(exists x.(Wren(x) & Rompus(x)) | exists y.(Wren(y) & -Zumpus(y)) | exists z.(Wren(z) & Wumpus(z)))))", "exists x.(Wren(x) & ((Rompus(x) & -Zumpus(x)) | Wren(x))))", "all x y.((Wren(x) & Rompus(x)) | (-Tompus(y) | Wren(x))))", "all x y.((Wren(x) & Rrompus(x)) | (-Rumpus(y) | Wren(x) & Wumpus(x))))", "(all x.(Wren(x) -> Rompus(x)) & (-Wren(x) -> Zumpus(x)) | (-Wren(x) -> Wumpus(x))))", "all x.(Wren(x) -> (Rompus(x) | -Zumpus(x) | Wren(x) & Wumpus(x)))", "exists x.(Wren(x) & ((Rompus(x) & -Zumpus(x)) | (Wren(x) & Wumpus(x))))", "(all x.(Wren(x) -> Rompus(x)) | (-Wren(x) & Zumpus(x)) | (-Wren(x) & Wumpus(x))))", "(all x.(Wren(x) -> Rompus(x)) & (-Wren(x) -> Zumpus(x)) | (-Wren(x) -> Wumpus(x))))"]}
{"id": "prontoqa_train_1267", "nl": "Everything that is an impus and a wumpus and a zumpus is a lorpus.", "fol": "all x. ((impus(x) & wumpus(x) & zumpus(x)) -> lorpus(x))", "prediction": ["all x.((Impossible(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Is(x) & Is(x) & Is(x) & Is(x) & Is(x) & Is(x) & Is(x) & Is(x) & Is(x) & Is(x) & Is(x) & Is(x) & Is(x) & Is(x) & Is(x)) & Is(x))", "all x.((Impossible(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x y.((Impossible(x) & Wumpus(y) & Zumpus(y)) -> Lorpus(x))", "all x y z.((Impossible(x) & Wumpus(y) & Zumpus(z) & Is(x,y) & Is(x,z)) -> Lorpus(x))", "(all x.((Impossible(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Impose(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Is(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Impossible(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x y.((Impossible(x) & Wumpus(y) & Zumpus(y)) -> Lorpus(x))", "(all x.((Impossible(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Improvised(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Issue(x) & IsWumpus(x) & IsTompus(x)) -> Lorpus(x))", "all x.((Impossible(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Impossible(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Improved(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))"]}
{"id": "prontoqa_train_1268", "nl": "Fae is a rompus, Fae is not a lorpus, and Fae is a gorpus.", "fol": "(rompus(Fae) & -lorpus(Fae) & gorpus(Fae))", "prediction": ["(all x.(Fae(x) -> Rompus(x)) & (Fae(x) -> -Lorpus(x)) & (Fae(x) -> Gorpus(x)))", "all x y z.((Fae(x) & Rompus(y) & -Lorpus(z)) -> (Rompus(x) & Gorpus(x)))", "(all x y z.((Fae(x) & Rompus(y)) -> (Rompus(x) & -Lorpus(y)) & ((Fae(z) & Gorpus(z))) -> (Gorpus(z))))", "all x y z.((Fae(x) & Lorpus(y) & Gorpus(z)) -> (Rompus(x) & -Lorpus(y) & Gorpus(z)))", "(all x.(Fae(x) -> Rompus(x)) & (Fae(x) -> -Lorpus(x)) & (Fae(x) -> Gorpus(x)))", "all x.(Fae(x) -> (Rompus(x) & -Lorpus(x) & Gorpus(x)))", "all x y z.((Fae(x) & Rompus(x) & Fae(y) & Lorpus(z)) -> (-Lorpus(y) & Gorpus(y)))", "(all x.(Fae(x) -> Rompus(x)) & all y.(Fae(y) -> -Lorpus(y)) & all z.(Fae(z) -> Gorpus(z))))", "(all x y z.((Fae(x) & Rompus(y)) -> (Rompus(x) | -Lorpus(y)) | (Gorpus(z) & Fae(z))))", "all x y z.((Fae(x) & Lops(y) & Gorpus(z)) -> (Rompus(x) & -Lorpus(y) & Gorpus(z)))", "(all x.(Fae(x) -> Rompus(x)) & (Fae(x) -> -Lorpus(x)) & (Fae(x) -> Gorpus(x)))", "(all x y z.((Fae(x) & Rompus(x)) -> Rimpus(x)) & ((Fae(y) & -Lorpus(y)) -> Gorpus(y)))", "all x.(Fae(x) -> (Rompus(x) & -Lorpus(x) & Gorpus(x)))", "all x y z.(Rompus(x) & -Lorpus(y) & Gorpus(z))", "(all x.(Fae(x) -> Rompus(x)) & all y.(Fae(y) -> -Lorpus(y)) & all z.(Fae(z) -> Gorpus(z)))", "(all x.(Fae(x) -> Rompus(x)) & (Fae(x) -> -Lorpus(x)) & (Fae(x) -> Gorpus(x)))"]}
{"id": "prontoqa_train_1269", "nl": "Fae is a wumpus.", "fol": "wumpus(Fae)", "prediction": ["all x.(Fae(x) -> Wumpus(x))", "-Wumpus(Fae)", "(Wumpus(Fae) & HasWumpus(Fae))", "Fae is a wumpus.", "all x.(Fae(x) -> Wumpus(x))", "(Wumpus(Fae) & Wumpus(Fae))", "-Wumpus(Fae)", "(Wumpus(fae) & HasWumpus(fae,fae))", "all x.(Fae(x) -> Wumpus(x))", "(Wumpus(fe) & -Wumpus(fe) & -Wumpus(fe))", "all x.(Fae(x) -> Wumpus(x))", "(Wumpus(fee) & Wax.", "(Wumpus(fee) & Wumpus(fee))", "all x.(Fae(x) -> Wumpus(x))", "all x.(Wumpus(x) -> Fae(x))", "all x.(Fae(x) -> Wampus(x))"]}
{"id": "prontoqa_train_1270", "nl": "Each yumpus is a rompus.", "fol": "all x. (yumpus(x) -> rompus(x))", "prediction": ["all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x y.((Yumpus(x) & Rompus(y)) -> Has(x,y))", "all x.(Yumpus(x) -> Rompus(x))", "all x y.((Yumpus(x) & Rompus(y)) -> Has(x,y))", "all x.(Yumpus(x) -> Rompus(x))", "all x y.((Yumpus(x) & Rompus(y)) -> Is(x,y))", "all x.(Yumpus(x) -> Rompus(x))", "exists x.(yumpus(x) & Yumpus(y) & Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "exists x.(Yumpus(x) & Rumpus(x))", "exists x.(yumpus(x) & Rhopus(x))", "all x.(Yumpus(x) -> Rompus(x))", "exists x.(Yumpus(x) & Roman(x))"]}
{"id": "prontoqa_train_1271", "nl": "Grimpuses are not rompuses.", "fol": "all x. (grimpus(x) -> -rompus(x))", "prediction": ["all x.(Grimpus(x) -> -Rompus(x))", "(all x.(Grimpus(x) -> -Rompus(x)))", "all x.(Grimpus(x) -> -Rompus(x))", "-Rompus(r)", "all x.(Rampus(x) -> -Rampus(x))", "all x y.((Grimpus(x) & Rompus(y)) -> -Rompus(x))", "(all x.(Grimpuse(x) -> -Rompus(x)))", "(all x.(Grimpus(x) -> -Rompus(x)))", "(-rompuse(Grimpus) & -rompuse(Grimpus))", "all x.(Gruppus(x) -> -Rompus(x))", "all x.(Grimpus(x) -> -Rompus(x))", "all x.(Rampus(x) -> -Rrompus(x))", "all x.(Grimpus(x) -> -rompus(x))", "(all x.(Rampus(x) -> -Rampus(x)))", "all x.(Grimpuse(x) -> -Rompus(x))", "all x.(Rimpus(x) -> -Rimpus(x))"]}
{"id": "prontoqa_train_1272", "nl": "Alex is not a yumpus or Alex is a lempus or Alex is a brimpus.", "fol": "(-yumpus(Alex) | lempus(Alex) | brimpus(Alex))", "prediction": ["all x.(Alex(x) -> (-Yumpus(x) | Lempus(x) | Brimpus(x)))", "((Alex(Alex) & -Yumpus(Alex)) | (Alex(Alex) & Lempus(Alex)) | (Alex(Alex) & Brimpus(Alex))))", "(all x.(Alex(x) -> (-Yumpus(x) | Lempus(x) | Brimpus(x))))", "(exists x.(Alex(x) & -Yumpus(x)) | exists y.(Alex(y) & Lempus(y))) | exists z.(Alex(z) & Brimpus(z))))", "all x y.((Alex(x) & -Yumpus(x)) | (Alex(y) & Lempus(y)) | (Alex(y) & Brimpus(y))))", "(all x.(Alex(x) -> -Yumpus(x)) | (Alex(x) -> Lempus(x)) | (Alex(x) -> Brimpus(x))))", "all x.(Alex(x) -> (-Yumpus(x) | Lempus(x) | Brimpus(x)))", "((Alex(Alex) & -Yumpus(Alex)) | (Alex(Alex) & Lempus(Alex)) | (Alex(Alex) & Brimpus(Alex))))", "all x.(Alex(x) -> (-Yumpus(x) | (Lempus(x) | Brimpus(x))))", "all x y.((Alex(x) & -Yumpus(x)) | (Alex(y) & Lempus(y)) | (Alex(y) & Brimpus(y))))", "(all x.(Alex(x) -> (-Yumpus(x) | Lempus(x) | Brimpus(x))))", "all x.(Alex(x) -> (-Yumpus(x) | Lempus(x) | Brimpus(x)))", "(all x.(Alex(x) -> (-Yumpus(x) | Lempus(x) | Brimpus(x))))", "exists x.(Alex(x) & -Yumpus(x) & (Lempus(x) | Brimpus(x)))", "all x.(Alex(x) -> (-Yumpus(x) | (Lempus(x) | Brimpus(x))))", "all x.(Alex(x) -> (-Yumpus(x) | Lempus(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_1273", "nl": "Everything that is a jompus, a zumpus, and an impus is a tumpus, a sterpus, and a wumpus.", "fol": "all x. ((jompus(x) & zumpus(x) & impus(x)) -> (tumpus(x) & sterpus(x) & wumpus(x)))", "prediction": ["all x.((Jompus(x) | Zumpus(x) | Imperator(x)) -> (Tumpus(x) & Sterpus(x) & Wumpus(x)))", "all x.((Jompus(x) | Zumpus(x) | Impossible(x)) -> (Tumpus(x) & Sterpus(x) & Wumpus(x)))", "all x.(JompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusTompusToMototomotomotomotomotomotomotomotomotomotomotomotomotomotomotomotomotomotomotomotomotomotomotomotomotomotomotomotomotomotomotomoTomoTomoTomoTomoTomoTomoTomoTomoTomoTomoTomoTomoTomoTomoTomoTomoTomoTomoTomoTomoTomoTomoTototototototototototototototototototototototototototototototototototototototototototototototototototototototototototototototo", "all x y.((Jompus(x) & Zumpus(y) & Imperator(x)) -> (Tumpus(y) | Sterpus(y) | Wumpus(y)))", "all x y z.((Jompus(x) & Zumpus(y) & Impossible(z)) -> (Tumpus(x) | Sterpus(x) | Wumpus(x)))", "all x.((Jimpus(x) | Zumpus(x) | Imperator(x)) -> (Tumpus(x) & Sterpus(x) & Wumpus(x)))", "all x.((Jompus(x) | Zumpus(x) | Issue(x)) -> (Tumpus(x) & Sterpus(x) & Wumpus(x)))", "all x.((Jompus(x) | Zumpus(x) | Imperator(x)) -> (Tumpus(x) & Sterpus(x) & Wumpus(x)))", "(all x.((Jompus(x) | Zumpus(x) | Impossible(x))) -> (Tumpus(x) | Sterpus(x) | Wumpus(x)))", "all x y.((Jompus(x) & Zumpus(y) & Issue(x)) -> (Tumpus(y) | Sterpus(y) | Wumpus(y)))", "(all x.((Jompus(x) | Zumpus(x) | Impossible(x))) -> (Tumpus(x) & Sterepus(x) & Wumpus(x)))", "all x.((Jimpus(x) | Zumpus(x) | Impossible(x)) -> (Tumpus(x) | Sterpus(x) | Wumpus(x)))", "all x.((Jompus(x) & Zumpus(x) & Imperator(x)) -> (Tumpus(x) & Sterpus(x) & Wumpus(x)))", "all x.((Jompus(x) | Zumpus(x) | Impossible(x)) -> (Tumpus(x) | Sterpus(x) | Wumpus(x)))", "all x.((Hompus(x) | Zumpus(x) | Issue(x)) -> (Tumpus(x) & Sterpus(x) & Wumpus(x)))", "(all x.((Jompus(x) | Zumpus(x) | Imperator(x))) -> (Tumpus(x) | Sterpus(x) | Wumpus(x)))"]}
{"id": "prontoqa_train_1274", "nl": "Rex is a jompus.", "fol": "jompus(Rex)", "prediction": ["all x.(Rex(x) -> Jompus(x))", "Rex is a Jompus.", "(Jompus(Rex) & HasStorm(Rex))", "all x.(Rex(x) -> Jompus(x))", "(Jompus(Rex) & -Jompus(Rex))", "Rex is a Jompus.", "Rex is Jompus.", "Rex.(Jompus(x) -> HasRex(x))", "Rex is jompus.", "all x.(Jompus(x) -> Rex(x))", "All x.(Rex(x) -> Jompus(x))", "Rex (Jompus)", "(Jompus(Rex) & HasJimmy(Rex))", "all x.(Rex(x) -> Jompus(x))", "All x.(Rex(x) -> Jompus(x))", "All x.(Rex(x) -> Jompus(x))"]}
{"id": "prontoqa_train_1275", "nl": "Rex is a sterpus.", "fol": "sterpus(Rex)", "prediction": ["all x.(Rex(x) -> Sterpus(x))", "Rex is a Sterpus.", "(Sterpus(Rex) & Sterpus(Rex))", "all x.(Rex(x) -> Sterpus(x))", "Rex is sterpus.", "Rex is a sterpus.", "Rex is Sterpus.", "Rex.(Sterpus(Rex))", "all x.(Rex(x) -> Sterpus(x))", "(Sterpus(Rex) & Sterpus(Rex))", "(Stereosis(Rex))", "All x.(Rex(x) -> Sterepus(x))", "all x.(Rex(x) -> Sterpus(x))", "All x.(Rex(x) -> Sterepus(x))", "all x.(Rex(x) -> Sterpus(x))", "All x.(Rex(x) -> Steroid(x))"]}
{"id": "prontoqa_train_1276", "nl": "Tumpuses are shumpuses, lempuses, and gorpuses.", "fol": "all x. (tumpus(x) -> (shumpus(x) & lempus(x) & gorpus(x)))", "prediction": ["all x.(Tumpus(x) -> (Shumpus(x) | Lempuse(x) | Gorpus(x)))", "all x.(Tumpus(x) -> (Shumpus(x) | Lempuse(x) | Gorpus(x)))", "all x y z.((Tumpus(x) & Shumpus(y) & Lempuse(z)) -> (Shumpus(x) | Gorpus(x)))", "all x.(Tumpuse(x) -> (Shumpus(x) | Lempuse(x) | Gorpus(x)))", "(all x.(Tumpus(x) -> Shumpus(x)) & all y.(Lempuse(y) -> Gorpus(y)))", "all x y.((Tumpus(x) & Shumpus(y)) -> (Lempuse(x) | Gorpus(x)))", "all x.(Tumpus(x) -> (Shumpus(x) | Lempuse(x) | Gorpus(x)))", "(all x.(Tumpuse(x) -> Shumpuse(x)) & all y.(Lempuse(y) -> Gorpuse(y)))", "(all x.(Tumpus(x) -> Shumpuses(x)) & all y.(Lempuse(y) -> Gorpuses(y)))", "(all x.(Tumpus(x) -> Shumpus(x)) & all y.(Lempuse(y) -> Gorpus(y)))", "all x.(Tumpuse(x) -> (Shumpus(x) | Lempuse(x) | Gorpuse(x)))", "all x.(Tumpus(x) -> (Shumpus(x) | Lempuse(x) | Gorpus(x)))", "(all x.(Tumpus(x) -> Shumpus(x)) & all y.(Lempuse(y) -> Gorpus(y)))", "all x.(Tumpus(x) -> (Shumpuse(x) | Lempuse(x) | Gorpuse(x)))", "all x.(Tumpus(x) -> (Shumpus(x) | Lempuse(x) | Gorpus(x)))", "all x.(Tumpuse(x) -> (Shumpus(x) | Lempuse(x) | Gorpuse(x)))"]}
{"id": "prontoqa_train_1277", "nl": "Stella is a lorpus, a lempus, or a shumpus.", "fol": "(lorpus(Stella) | lempus(Stella) | shumpus(Stella))", "prediction": ["all x.(Stella(x) -> (Lorpus(x) | Lempus(x) | Humpus(x)))", "all x y.((Stella(x) & (Lorpus(y) | Lempus(y) | Humpus(y))) -> (Lorpus(x) | Lempus(y) | Humpus(y)))", "(Lorpus(Stella) | Lempus(Stella) | Humpus(Stella)))", "all x.(Stella(x) -> (Lorpus(x) | Lempus(x) | Humpus(x)))", "all x.((Stella(x) & (Lorpus(x) | Lempus(x) | Humpus(x))) -> (Lorpus(x) | Lempus(x) | Humpus(x)))", "(Lorpus,Lempus,Shumpus)", "all x.(Stella(x) -> (Lorpus(x) | Lempus(x) | Humpus(x)))", "(Lorpus(Stella) | Lempus(Stella) | Humpus(Stella)))", "all x.(Stella(x) -> (Lorph(x) | Lempus(x) | Humpus(x)))", "(all x.(Stella(x) -> (Lorpus(x) | Lempus(x) | Humpus(x))))", "(Lorpus,Lempus,Shumpus)", "all x.(Stella(x) -> (Lorpus(x) | Lempus(x) | Humpus(x)))", "exists x.(Lorpus(x) | Lempus(x) | Humpus(x))", "all x.(Stella(x) -> (Lorpus(x) | Lempus(x) | Humpus(x)))", "exists x.(Stella(x) & (Lorph(x) | Lempus(x) | Humpus(x)))", "exists x.(Stella(x) & (Lorpus(x) | Lempus(x) | Humpus(x)))"]}
{"id": "prontoqa_train_1278", "nl": "Every jompus is a shumpus.", "fol": "all x. (jompus(x) -> shumpus(x))", "prediction": ["all x.(Jompus(x) -> Humpus(x))", "all x.(Jompus(x) -> Humpus(x))", "(all x.(Jompus(x) -> Humpus(x)))", "all x.(Jompus(x) -> Shumpus(x))", "all x y.((Jompus(x) & Shumpus(y)) -> Has(x,y))", "all x.(Jimpus(x) -> Humpus(x))", "(all x.(Jompus(x) -> Humpus(x)))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jompus(x) -> Shumpus(x))", "all x.(Jumpus(x) -> Shumpus(x))", "all x.(Jimpus(x) -> Humpus(x))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jumpus(x) -> Shumpus(x))", "exists x.(Jimpus(x) & Humpus(x))", "all x.(Jompus(x) -> Shumpus(x))", "exists x.(jompus(x) & Shumpus(x))"]}
{"id": "prontoqa_train_1279", "nl": "Max is a yumpus and Max is not a shumpus and Max is a grimpus.", "fol": "(yumpus(Max) & -shumpus(Max) & grimpus(Max))", "prediction": ["(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> -Shumpus(x)) & (Max(x) -> Grimpus(x)))", "all x y z.((Max(x) & Yumpus(y) & Max(z)) -> (-Yumpus(z) & -Shumpus(z) & Grimpus(z)))", "all x y.((Max(x) & Yumpus(x)) -> (-Shumpus(x) & Grimpus(y)))", "(all x.(Max(x) -> Yumpus(x)) & ((Max(x) & -Shumpus(x))) | (-Max(x) & Grimpus(x))))", "(all x y.((Max(x) & Yumpus(x)) -> (Yumpus(x) & -Shumpus(x))) & ((Max(y) & Grimpus(y)) -> (Smoothpus(y))))", "all x.(Max(x) -> (Yumpus(x) & -Shumpus(x) & Grimpus(x)))", "(yumpus(x) | (-yumpus(x) & Humpus(x))) | (-yumpus(y) & Humpus(y))))", "all x y z.((Max(x) & Yumpus(y) & -Shumpus(z)) -> (Yumpus(x) & Grimpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> -Shumpus(y))) & all z.(Max(z) -> Grimpus(z))))", "(all x.(Max(x) -> Yampus(x)) & (Max(x) -> -Shumpus(x)) & (Max(x) -> Grimpus(x)))", "all x y.((Max(x) & Yumpus(x) & Max(y)) -> (-Shumpus(y) & Grimpus(y)))", "(all x y.((Max(x) & Yumpus(x)) -> (Yumpus(x) & -Shumpus(y))) & ((Max(x) & Grimpus(x)) -> (Smoothpus(x))))", "all x.(Max(x) -> (Yumpus(x) & -Shumpus(x) & Grimpus(x)))", "(all x.(Max(x) -> Yampus(x)) & (-Max(x) -> Humpus(x)) & (-Max(x) -> Grimpus(x)))", "exists x.(Max(x) & Yumpus(x) & -Shumpus(x) & Grimpus(x))", "all x.(Max(x) -> (Yumpus(x) & -Shumpus(x) & Grimpus(x)))"]}
{"id": "prontoqa_train_1280", "nl": "Max is a yumpus, Max is not a jompus, or Max is an impus.", "fol": "(yumpus(Max) | -jompus(Max) | impus(Max))", "prediction": ["(all x.(Max(x) -> Yumpus(x)) | (-Max(x) & Jompus(x))) | (-Max(x) & Imperator(x))))", "all x.(Max(x) -> (Yumpus(x) | -Jompus(x) | Impossible(x)))", "(exists x.(Max(x) & Yumpus(x)) | exists y.(Max(y) & -Jompus(y))) | exists z.(Max(z) & Issue(z))))", "(all x.(Max(x) -> Yumpus(x)) & (-Max(x) -> Jompus(x)) | (-Max(x) -> IsPlate(x))))", "(yumpus(x) | -jompus(x) | -isolator(x)))", "all x y.((Max(x) & Yumpus(x)) | (-Jompus(x) | Impossible(x))))", "(all x.(Max(x) -> Yumpus(x)) | (-Max(x) & Jompus(x)) | (-Max(x) & Imperator(x))))", "all x.(Max(x) -> (Yumpus(x) | -Jompus(x) | Imperator(x)))", "(exists x.(Max(x) & Yumpus(x)) | exists y.(Max(y) & -Jompus(y)) | exists z.(Max(z) & Issue(z)))))", "(all x.(Max(x) -> Yampus(x)) | (-Jompus(x) | Impossible(x))))", "all x y.((Max(x) & Yumpus(x)) | (-Jompus(x) | IsImpossible(x))))", "all x.(Max(x) -> (Yumpus(x) | -Jompus(x) | IsImpossible(x)))", "exists x.(Max(x) & ((Yumpus(x) | -Jompus(x)) | Impossible(x)))", "exists x.(Max(x) & ((Yumpus(x) & -Jompus(x)) | (Impossible(x) & Impossible(x))))", "(all x.(Max(x) -> Yumpus(x)) | (-Max(x) & Jompus(x)) | (-Max(x) & Impossible(x))))", "all x.(Max(x) -> (Yumpus(x) | -Jompus(x) | Impossible(x)))"]}
{"id": "prontoqa_train_1281", "nl": "Each sterpus is a tumpus, a wumpus, and a dumpus.", "fol": "all x. (sterpus(x) -> (tumpus(x) & wumpus(x) & dumpus(x)))", "prediction": ["all x.(Sterpus(x) -> (Tumpus(x) | Wumpus(x) | Dumpus(x)))", "all x.(Sterpus(x) -> (Tumpus(x) & Wumpus(x) & Dumpus(x)))", "(all x.(Sterpus(x) -> Tumpus(x)) & all y.(Wumpus(y) & -Tumpus(y)) & all z.(Dumpus(z) -> Dumpus(z))))", "all x y z.((Sterpus(x) & Tumpus(y) & Wumpus(z)) -> (Tumpus(x) | Wumpus(z) | Dumpus(z)))", "all x y.((Sterpus(x) & Tumpus(y)) -> (Wumpus(x) & Dumpus(x)))", "all x.(Sterepus(x) -> (Tumpus(x) | Wumpus(x) | Dumpus(x)))", "(all x.(Sterpus(x) -> Tumpus(x)) & all y.(Wumpus(y) & Dumpus(y)))", "all x.(Sterpus(x) -> (Tumpus(x) & Wumpus(x) & Dumpus(x)))", "(all x.(Sterpus(x) -> Tumpus(x)) & (Wumpus(x) -> Dumpus(x)))", "(all x.(Sterepus(x) -> Tumpus(x)) & all y.(Wumpus(y) & -Dumpus(y)))", "all x.(Steerpus(x) -> (Tumpus(x) | Wumpus(x) | Dumpus(x)))", "all x.(Sterpus(x) -> (Tumpus(x) | Wumpus(x) | Dumpus(x)))", "exists x.(Sterpus(x) & Tumpus(x) & Wumpus(x) & Dumpus(x))", "all x.(Sterpus(x) -> (Tumpus(x) & Wumpus(x) & Dumpus(x)))", "exists x.(Steerpus(x) & Tumpus(x) & Wumpus(x) & Dumpus(x))", "all x.(Stereo(x) -> (Tumpus(x) | Wumpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_1282", "nl": "Fae is a vumpus and Fae is a brimpus and Fae is not a wumpus.", "fol": "(vumpus(Fae) & brimpus(Fae) & -wumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> Brimpus(x)) & (Fae(x) -> -Wumpus(x)))", "all x y z.((Fae(x) & Vumpus(x) & Brimpus(y) & -Wumpus(z)) -> (Vumpus(x) & Brimpus(y) & -Wumpus(z)))", "all x y z.((Fae(x) & Vumpus(x) & Fae(y) & Brimpus(y)) -> (Vumpus(x) & -Wumpus(z)))", "all x.(Fae(x) -> (Vumpus(x) & Brimpus(x) & -Wumpus(x)))", "(all x y.(Fae(x) -> Vumpus(x)) & (Fae(y) -> Brimpus(y)) & (Fae(y) -> -Wumpus(y)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> Brimpus(x)) & -Wumpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> Brimpus(y)) & all z.(Fae(z) -> -Wumpus(z))))", "(all x y z.((Fae(x) & Vumpus(x) & Brimpus(y)) -> (Vumpus(x) & Brimpus(y) & -Wumpus(z))))", "all x y.((Fae(x) & Fae(y)) -> (Vumpus(x) & Brimpus(y) & -Wumpus(y)))", "all x y z.((Fae(x) & Vumpus(x) & Brimpus(y) & -Wumpus(z)) -> (Vumpus(x) & Brimpus(y) & -Wumpus(z)))", "all x y z.((Fae(x) & Fae(y) & Brimpus(z)) -> (Vumpus(x) | Brimpus(y) | -Wumpus(z)))", "all x.(Fae(x) -> (Vimpus(x) & Brimpus(x) & -Wumpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> Brimpus(y)) & all z.(Fae(z) -> -Wumpus(z))))", "(all x y.(Fae(x) -> Vumpus(x)) & (Fae(y) -> Brimpus(y)) & (Fae(y) -> -Wumpus(y)))", "exists x.(Fae(x) & Vumpus(x) & Brimpus(x) & -Wumpus(x))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> Brimpus(x)) & (Fae(x) -> -Wumpus(x)))"]}
{"id": "prontoqa_train_1283", "nl": "Shumpuses are vumpuses and gorpuses and brimpuses.", "fol": "all x. (shumpus(x) -> (vumpus(x) & gorpus(x) & brimpus(x)))", "prediction": ["all x.(Shupuse(x) -> (Vumpuse(x) & Gorpuse(x) & Brimpuse(x)))", "all x.(Shupuse(x) -> (Vumpuse(x) & Gorpuse(x) & Brimpuse(x)))", "(Vumpuse(s) & Gorpuse(s) & Brimpuse(s))", "all x y.((Shupuse(x) & Vampuse(y)) -> (Vampuse(x) | Gorpuse(x) | Brimpuse(x)))", "(all x.(Shupuse(x) -> Vampuse(x)) & all y.(Gorpuse(y) & Brimpuse(y))))", "all x.(Shupuse(x) -> (Vumpuse(x) | Gorpuse(x) | Brimpuse(x)))", "all x y z.((Shupuse(x) & Vampuse(y) & Gorpuse(z)) -> (Vampuse(x) | Gorpuse(z) | Brimpuse(z)))", "all x.(Shumpuse(x) -> (Vumpuse(x) | Gorpuse(x) | Brimpuse(x)))", "all x.(Shutus(x) -> (Vampuse(x) & Gorpuse(x) & Brimpuse(x)))", "all x y.((Shupuse(x) & Vampuse(y)) -> (Vampuse(x) & Gorpuse(y) & Brimpuse(x)))", "(all x.(Shumpuse(x) -> Vampuse(x)) & all y.(Gorpuse(y) -> Brimpuse(y)))", "(all x.(Shupuse(x) -> Vampuse(x)) & all y.(Gorpuse(y) & Brimpuse(y)))", "(all x.(Shutus(x) -> Vampuse(x)) & (Gorpuse(x) | Brimpuse(x)))", "all x.(Shupuse(x) -> (Vumpuse(x) | Gorpuse(x) | Brimpuse(x)))", "all x.(Shampoos(x) -> (Vampuse(x) | Gorpuse(x) | Brimpuse(x)))", "all x.(Shumpus(x) -> (Vumpus(x) | Gorpus(x) | Brimpuse(x)))"]}
{"id": "prontoqa_train_1284", "nl": "Stella is not a gorpus and Stella is a yumpus and Stella is a dumpus.", "fol": "(-gorpus(Stella) & yumpus(Stella) & dumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Gorpus(x)) & (Stella(x) -> Yumpus(x)) & (Stella(x) -> Dumpus(x)))", "all x y z.((Stella(x) & Gorpus(y) & Yumpus(z)) -> (-Gorpus(x) & Yumpus(x) & Dumpus(x)))", "(all x.(Stella(x) -> -Gorpus(x)) & all y.(Stella(y) -> Yumpus(y))) & all z.(Stella(z) -> Dumpus(z)))", "(all x y z.((Stella(x) & Gorpus(y) & Yumpus(z)) -> -Gorpus(x)) & ((Stella(x) & Yumpus(x)) -> Dumpus(x)))", "all x.(Stella(x) -> (-Gorpus(x) & -Yumpus(x) & -Dumpus(x)))", "all x y z.((Stella(x) & Gorpus(y) & Yumpus(z)) -> (-Gorpus(x) & Yumpus(x) & Dumpus(x)))", "(-Gorpus(Stella) & Yumpus(Stella) & Dumpus(Stella))", "all x.(Stella(x) -> (-Gorpus(x) & Yampus(x) & Dumpus(x)))", "all x y.((Stella(x) & Gorpus(y) & Yumpus(y)) -> (-Gorpus(x) & Dumpus(x)))", "(all x y.(Stella(x) -> -Gorpus(x)) & (Stella(y) -> Yumpus(y)) & (Stella(y) -> Dumpus(y)))", "(all x.(Stella(x) -> -Gorpus(x)) & (Yumpus(x) | Dumpus(x))))", "(all x.(Stella(x) -> -Gorpus(x)) & all y.(Stella(y) -> Yumpus(y))) & all z.(Stella(z) -> Dumpus(z)))", "exists x.(Stella(x) & -Gorpus(x) & Yampus(x) & Dumpus(x))", "all x y z.((Stella(x) & Gorpus(y) & Yumpus(z)) -> (-Gorpus(x) & Yumpus(y) & Dumpus(z)))", "all x y z.((Stella(x) & Gorpus(y) & Yumpus(z)) -> (-Gorpus(x) & Yumpus(x) & Dumpus(x)))", "(all x.(Stella(x) -> -Gorpus(x)) & (Yumpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_1285", "nl": "Jompuses are rompuses and numpuses and vumpuses.", "fol": "all x. (jompus(x) -> (rompus(x) & numpus(x) & vumpus(x)))", "prediction": ["all x.(Jompuse(x) -> (Rompus(x) | Numpuse(x) | Vampuse(x)))", "(all x.(Jompuse(x) -> Rompus(x)) & all y.(Numpuse(y) & All z.(Vumpuse(z)) -> Vumpuse(z))))", "all x y.((Jompuse(x) & Rompus(y)) -> (Rompus(x) | Numpuse(x) | Vampuse(x)))", "all x y z.((Jompuse(x) & Rompus(y) & Numpuse(z)) -> (Rompus(x) | Vampuse(z)))", "all x.(Jompuse(x) -> (Rompus(x) | Numpuse(x) | Vampuse(x)))", "all x.(Jompuse(x) -> (Rompus(x) & Numpuse(x) & Vampuse(x)))", "(all x.(Jompuse(x) -> Rompus(x)) & (Numpuse(x) | Vampuse(x)))", "(all x.(Jompuse(x) -> Rompus(x)) & all y.(Numpuse(y) & -Vampuse(y)))", "all x y.((Jompuse(x) & Rompus(y)) -> (Rompus(x) | Numpuse(x) | Vampuse(x)))", "(all x.(Jompuse(x) -> Rompuse(x)) & all y.(Numpuse(y) & All z.(Vumpuse(z)) -> Vumpuse(z))))", "all x.(Jompuse(x) -> (Rompus(x) | Numpuse(x) | Vampuse(x)))", "all x.(Jompuse(x) -> (Rompus(x) & Numpuse(x) & Vampuse(x)))", "(all x.(Jompuse(x) -> Rompus(x)) & (Numpuse(x) | Vampuse(x)))", "(all x.(Jompuse(x) -> Rompus(x)) & all y.(Numpuse(y) & Vampuse(y)))", "all x.(Jompuse(x) -> (rompus(x) | Numpuse(x) | Vampuse(x)))", "all x.(Jompuse(x) -> (Rompus(x) | Numpus(x) | Vampuse(x)))"]}
{"id": "prontoqa_train_1286", "nl": "Max is a numpus or a lorpus or a sterpus.", "fol": "(numpus(Max) | lorpus(Max) | sterpus(Max))", "prediction": ["all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Sterpus(x)))", "(Numpus(Max) | Lorpus(Max) | Sterpus(Max))", "((Max(Max) & Numpus(Max)) | (Lorpus(Max) | Sterpus(Max))))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Sterpus(x)))", "(numpus(Max) | Lorpus(Max) | Sterpus(Max))", "((Max(Max) & (Numpus(Max) | Lorpus(Max) | Sterpus(Max)))", "all x y.((Max(x) & Numpus(y)) | (Lorpus(x) | Sterpus(x))))", "(Numpus(Max) | Lorpus(Max) | Sterpus(Max))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(M Max(x) -> (Numpus(x) | Lorpus(x) | Sterpus(x)))", "(Number(max) | Lorpus(max) | Sterpus(max))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Max(x) -> (Number(x) | Lorpus(x) | Sterpus(x)))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Max(x) -> (Nompus(x) | Loupus(x) | Sterpus(x)))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1287", "nl": "Alex is an impus, a rompus, and a gorpus.", "fol": "(impus(Alex) & rompus(Alex) & gorpus(Alex))", "prediction": ["all x.(Alex(x) -> (Imposs(x) & Rompus(x) & Gorpus(x)))", "(all x.(Alex(x) -> Impossible(x)) & all y.(Rompus(y) & All z.(Gorpus(z))) -> (Impossible(y) & Rompus(z))))", "(all x.(Alex(x) -> Issue(x)) & all y.(Rompus(y) & All z.(Gorpus(z))) -> (Issue(y) & All w.(Rompus(w) & All w.(Gorpus(w)))))", "all x y z.((Alex(x) & Imposs(y) & Rompus(z)) -> (Imposs(x) & Rompus(y) & Gorpus(z)))", "(Impossible(Alex) | Rompus(Alex) | Gorpus(Alex))", "all x y z.((Alex(x) & Is(y) & Rompus(z)) -> (Impossible(x) | Rompus(y) | Gorpus(z)))", "all x.(Alex(x) -> (Impose(x) & Rompus(x) & Gorpus(x)))", "(Impose(Alex) & Rompus(Alex) & Gorpus(Alex))", "all x.(Alex(x) -> (Impossible(x) & Rompus(x) & Gorpus(x)))", "(all x.(Alex(x) -> Impossible(x)) & (Rompus(x) | Gorpus(x))))", "all x.(Alex(x) -> (Impose(x) | Rompus(x) | Gorpus(x)))", "(all x.(Alex(x) -> Issue(x)) & (Rompus(x) | Gorpus(x)))", "(Impossible(Alex) | Rompus(Alex) | Gorpus(Alex))", "exists x.(Alex(x) & Is(x) & Rompus(x) & Gorpus(x))", "all x.(Alex(x) -> (Impossible(x) | Rompus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Impos(x) & Rompus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1288", "nl": "Alex is a gorpus or a jompus or a yumpus.", "fol": "(gorpus(Alex) | jompus(Alex) | yumpus(Alex))", "prediction": ["all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "(Gorpus(Alex) | Jompus(Alex) | Yumpus(Alex))", "all x y.((Alex(x) & Gorpus(x)) | (Jompus(x) | Yumpus(x))))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "(Gorpus(Alex) | Jompus(Alex) | Yumpus(Alex))", "all x y.((Alex(x) & Gorpus(x) & Jompus(y)) | Yumpus(y))", "(Gorpus) | Jompus(Alex) | Yumpus(Alex))", "(Gorpus,yumpus,yumpus)", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "exists x.(Alex(x) & (Gorpus(x) | Jompus(x) | Yumpus(x)))"]}
{"id": "prontoqa_train_1289", "nl": "Max is a brimpus, a sterpus, and a zumpus.", "fol": "(brimpus(Max) & sterpus(Max) & zumpus(Max))", "prediction": ["(all x.(Max(x) -> Brimpus(x)) & all y.(Sterpus(y) & -Zumpus(y)))", "all x.(Max(x) -> (Brimpus(x) | Sterpus(x) | Zumpus(x)))", "(Brimpus(Max) | Sterpus(Max) | Zumpus(Max))", "all x y z.((Max(x) & Brimpus(y) & Sterpus(z)) -> (Brimpus(x) | Sterpus(z) | Zumpus(z)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> Sterpus(x)) & (Max(x) -> Zumpus(x)))", "(Brimpus(Max) & Sterpus(Max) & Zumpus(Max))", "all x.(Max(x) -> (Brimpus(x) | Sterpus(x) | Zumpus(x)))", "all x.(Max(x) -> (Brimpus(x) & Sterpus(x) & Zumpus(x)))", "all x.(Mat Max(x) -> (Brimpus(x) | Sterpus(x) | Zumpus(x)))", "(Brimpus,Brimpus,Sterpus,Zumpus)", "(all x.(Max(x) -> Brimpus(x)) & all y.(Sterpus(y) -> Zumpus(y)))", "(All x.(Max(x) -> Brimpus(x)) & (Sterpus(x) & Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & all y.(Sterpus(y) & All z.(Max(z) -> Zumpus(z))))", "all x.(Max(x) -> (Brimpus(x) | Sterpus(x) | Zumpus(x)))", "all x.(Max(x) -> (Brimpus(x) & Sterepus(x) & Zumpus(x)))", "all x.(Max(x) -> (Brumpus(x) | Sterepus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1290", "nl": "Max is a wumpus, an impus, or a tumpus.", "fol": "(wumpus(Max) | impus(Max) | tumpus(Max))", "prediction": ["all x.(Max(x) -> (Wumpus(x) | Imperative(x) | Tumpus(x)))", "all x.(Max(x) -> (Wumpus(x) | Impossible(x) | Tumpus(x)))", "(Wumpus(Max) | Imperator(Max) | Tumpus(Max))", "(all x.(Max(x) -> Wumpus(x)) | (Max(x) -> Impossible(x)) | Max(x)))", "(Wumpus(Max) | Impossible(Max) | Tumpus(Max))", "(Wumpus,Impossible(Max) | Tumpus(Max))", "(all x.(Max(x) -> (Wumpus(x) | Impossible(x) | Tumpus(x))))", "all x y.((Max(x) & Wumpus(y)) | (Impossible(y) | Tumpus(y))))", "all x.(Max(x) -> (Wumpus(x) | Imperator(x) | Tumpus(x)))", "all x.(Max(x) -> (Wumpus(x) | Impossible(x) | Tumpus(x)))", "(all x.(Max(x) -> Wumpus(x)) | (Max(x) -> Impossible(x) | Max(x))))", "all x.(M Max(x) -> (Wumpus(x) | Imperative(x) | Tumpus(x)))", "all x.(Max(x) -> (Wumpus(x) | Issue(x) | Tumpus(x)))", "all x.(Max(x) -> (Wumpus(x) | Imperative(x) | Tumpus(x)))", "exists x.(Wumpus(x) | Imperator(x) | Tumpus(x))", "all x.(Max(x) -> (Wumpus(x) | Impossible(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1291", "nl": "Everything that is a zumpus and a sterpus and a lorpus is a grimpus, an impus, and a dumpus.", "fol": "all x. ((zumpus(x) & sterpus(x) & lorpus(x)) -> (grimpus(x) & impus(x) & dumpus(x)))", "prediction": ["all x.((Tompus(x) & Sterpus(x) & Lorpus(x)) -> (Grimpus(x) & Imperempt(x) & Dumpus(x)))", "all x y.((Tompus(x) & Sterpus(y) & Lorpus(y)) -> (Grimpus(x) & Impossible(x) & Dumpus(x)))", "all x.((Tompus(x) & Sterpus(x) & Lorpus(x)) -> (Grimpus(x) & Impossible(x) & Dumpus(x)))", "(all x.((Zumpus(x) & -Sterpus(x) & -Lorpus(x)) -> (Grimpus(x) & Imperempt(x) & Dumpus(x)))", "(all x.((Tompus(x) & Sterpus(x) & Lorpus(x)) -> (Grimpus(x) & Impossible(x) & Dumpus(x)))", "all x y z.((Tompus(x) & Sterpus(y) & Lorpus(z) & Toxic(x)) -> (Grimpus(x) & Imperator(x) & Dumpus(x)))", "all x y.((Tompus(x) & Sterpus(y) & Lorpus(x)) -> (Grimpus(x) & Imperator(x) & Dumpus(x)))", "all x.((Tommus(x) | Sterpus(x) | Lorpus(x)) -> (Grimpus(x) & Imperempt(x) & Dumpus(x)))", "all x.((Tompus(x) & Sterpus(x) & Lorpus(x)) -> (Grimpus(x) & Imperator(x) & Dumpus(x)))", "all x.((Tompus(x) & Sterpus(x) & Lorpus(x)) -> (Grimpus(x) | Imperator(x) | Dumpus(x)))", "all x.((Tompus(x) | Sterpus(x) | Lorpus(x)) -> (Grimpus(x) & Impossible(x) & Dumpus(x)))", "(all x.((Tompus(x) & Sterpus(x) & Lorpus(x)) -> (Grimpus(x) | Imperator(x) | Dumpus(x)))", "all x.((Tompus(x) & Sterpus(x) & Lorpus(x)) -> (Grimpus(x) & Impossible(x) & Dumpus(x)))", "all x.((Stompus(x) & Sterpus(x) & Lorpus(x)) -> (Grimpus(x) & Imperempt(x) & Dumpus(x)))", "all x.((Zumpus(x) & Sterpus(x) & Lorpus(x)) -> (Grimpus(x) | Imperempt(x) | Dumpus(x)))", "all x.((Zumpus(x) & Sterpus(x) & Lorpus(x)) -> (Smokey(x) & Imperator(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1292", "nl": "Polly is a zumpus.", "fol": "zumpus(Polly)", "prediction": ["all x.(Polly(x) -> Zumpus(x))", "Polly is a zumpus.", "all x.(Polly(x) -> Zumpus(x))", "all x.(Polly(x) -> Zumpus(x))", "Polly is zumpus.", "(Zumpus(Polly) & Has(Polly,Ploy))", "(Zombie(Polly) & Has(Polly,Ploy))", "Polly is a zumpus.", "All x.(Polly(x) -> Zumpus(x))", "Polly is zumpus.", "all x.(Polly(x) -> Zumpus(x))", "all x.(Tompus(x) -> Polly(x))", "(Tompus(Polly))", "Polly is a zumpus.", "All x.(Polly(x) -> Zumpus(x))", "(Zumpus)"]}
{"id": "prontoqa_train_1293", "nl": "Gorpuses are jompuses.", "fol": "all x. (gorpus(x) -> jompus(x))", "prediction": ["all x.(Gorpus(x) -> Jompuse(x))", "all x.(Gorpus(x) -> Jompuse(x))", "all x y.((Gorpuse(x) & Jompuse(y)) -> Is(x,y))", "all x.(Gorpuse(x) -> Jompuse(x))", "(Jompuse(gorpus) & Jompuse(gorpus))", "all x.(Gorpus(x) -> Jompuse(x))", "all x y.((Gorpuse(x) & Jompuse(y)) -> Has(x,y))", "(Jompuse(gorpus) & HasJumps(gorpus,y))", "all x.(Gorpuse(x) -> Jompuse(x))", "all x y.((Gorpuse(x) & Jompus(y)) -> Jompus(x))", "all x.(Gorpus(x) -> Jompuse(x))", "all x.(Gorpuse(x) -> Jompuse(x))", "all x.(Gorpus(x) -> Jompus(x))", "all x.(Gorpuse(x) -> Jompuse(x))", "all x.(Gorpus(x) -> Jompuse(x))", "All x.(Gorpus(x) -> Jompus(x))"]}
{"id": "prontoqa_train_1294", "nl": "Sally is a gorpus, a grimpus, and a wumpus.", "fol": "(gorpus(Sally) & grimpus(Sally) & wumpus(Sally))", "prediction": ["all x.(Sally(x) -> (Gorpus(x) & Grimpus(x) & Wumpus(x)))", "(Gorpus(Sally) | Grimpus(Sally) | Wumpus(Sally))", "(all x.(Sally(x) -> Gorpus(x)) & all y.(Grimpus(y) & -Wumpus(y)))", "all x y z.((Sally(x) & Gorpus(y) & Grimpus(z)) -> (Gorpus(x) & Grimpus(z) & Wumpus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Grimpus(x) | Wumpus(x)))", "Sally is a gorpus, a grimpus, and a wumpus.", "(Gorpus(Sally) & Grimpus(Sally) & Wumpus(Sally))", "(all x.(Sally(x) -> Gorpus(x)) & (Grimpus(x) & Wumpus(x)))", "(Gorpus(s) & Grimpus(s) & Wumpus(s))", "(Gorpus,Grimpus,Wumpus)", "(all x.(Sally(x) -> Gorpus(x)) & all y.(Grimpus(y) & -Wumpus(y)))", "all x.(Sally(x) -> (Gorpus(x) | Grimpus(x) | Wumpus(x)))", "all x.(Sally(x) -> (Gorpus(x) & Grimpus(x) & Wumpus(x)))", "exists x.(Sally(x) & Gorpus(x) & Grimpus(x) & Wumpus(x))", "all x.(Sally(x) -> (Gorpus(x) | Grimpus(x) | Wumpus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Grimpus(x) | Wumpus(x)))"]}
{"id": "prontoqa_train_1295", "nl": "Sally is a gorpus or a lorpus or a jompus.", "fol": "(gorpus(Sally) | lorpus(Sally) | jompus(Sally))", "prediction": ["all x.(Sally(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "(Gorpus(s) | Lorpus(s) | Jompus(s)))", "(Gorpus(Sally) | Lorpus(Sally) | Jompus(Sally)))", "all x y.((Sally(x) & Gorpus(x)) | (Lorpus(x) | Jompus(x))))", "all x.(Sally(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "(Gorpus,lorpus,jompus)", "all x y.(Sally(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "(Gorpus) | Lorpus(Sally) | Jompus(Sally))", "all x.(Sally(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Loupus(x) | Jompus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Lordpus(x) | Jompus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "exists x.(Sally(x) & (Gorpus(x) | Lordpus(x) | Jompus(x)))", "exists x.(Sally(x) & (Gorpus(x) | Lorpus(x) | Jompus(x)))"]}
{"id": "prontoqa_train_1296", "nl": "Everything that is a gorpus and a lorpus and a dumpus is a shumpus, a tumpus, and a zumpus.", "fol": "all x. ((gorpus(x) & lorpus(x) & dumpus(x)) -> (shumpus(x) & tumpus(x) & zumpus(x)))", "prediction": ["all x.((Gorpus(x) & Lorpus(x) & Dumpus(x)) -> (Shumpus(x) & Tumpus(x) & Zumpus(x)))", "(all x.((Gorpus(x) & -Lorpus(x) & -Dumpus(x)) -> (Shumpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Dumpus(x)) -> (Shumpus(x) | Tumpus(x) | Zumpus(x)))", "all x y z.((Gorpus(x) & Lorpus(y) & Dumpus(z) & Gorpus(x) & Lorpus(y)) -> (Shumpus(x) | Tumpus(x) | Zumpus(x)))", "all x y.((Gorpus(x) & Lorpus(y) & Dumpus(x)) -> (Shumpus(y) | Tumpus(y) | Zumpus(y)))", "all x.((Gorpus(x) | Lorpus(x) | Dumpus(x)) -> (Shumpus(x) | Tumpus(x) | Zumpus(x)))", "(all x.((Gorpus(x) & -Lorpus(x) & -Dumpus(x)) -> (Shumpus(x) | Tumpus(x) | Zumpus(x)))", "all x.(Gorpus(x) & Lorpus(x) & Dumpus(x)) -> (Shumpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Dumpus(x)) -> (Shumpus(x) & Tumpus(x) & Zumpus(x)))", "all x y z.((Gorpus(x) & Lorpus(y) & Dumpus(z)) -> (Shumpus(x) | Tumpus(x) | Zumpus(x)))", "(all x.(Gorpus(x) -> (Lorpus(x) & Dumpus(x))) & (Shumpus(x) | Tumpus(x) | Zumpus(x)))", "all x y.((Gorpus(x) & Lorpus(y) & Dumpus(y)) -> (Shumpus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Gorpus(x) & Lopus(x) & Dumpus(x)) -> (Shumpus(x) | Tumpus(x) | Zumpus(x)))", "all x.(Gorpus(x) & Lopus(x) & Dumpus(x)) -> (Shumpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Dumpus(x)) -> (Shumpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Gorpus(x) & Lorus(x) & Dumpus(x)) -> (Shumpus(x) & Tumpus(x) & Zumpus(x)))"]}
{"id": "prontoqa_train_1297", "nl": "Sam is a dumpus.", "fol": "dumpus(Sam)", "prediction": ["all x.(Sam(x) -> Dumpus(x))", "Sam is a Dumpus.", "all x.(Sam(x) -> Dumpus(x))", "(Dumus(Sam) & HasDum(Sam))", "Sam is a dumpus.", "all x.((Sam(x) & Dumpus(x)) -> Dumpus(x))", "all x.(Dumus(x) -> Sam(x))", "Sam is Dumpus.", "Sam is a Dumpus.", "(Dumpus(Sam))", "all x.(Sam(x) -> Dumpus(x))", "(Dumus(Sam) & HasDum(Sam))", "(Dumpus(sam) -> Dumpus(sam))", "all x.(Dumus(x) -> Sam(x))", "(Dumus)", "all x.(Sam(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_1298", "nl": "Lorpuses are vumpuses, yumpuses, and zumpuses.", "fol": "all x. (lorpus(x) -> (vumpus(x) & yumpus(x) & zumpus(x)))", "prediction": ["all x.(Lorpuse(x) -> (Vumpuse(x) | Yumpuse(x) | Zumpuse(x)))", "(all x.(Lorpuse(x) -> (Vumpuse(x) | Yumpuse(x) | Zumpuse(x)))", "all x.(Lorpus(x) -> (Vumpuse(x) | Yumpuse(x) | Zumpuse(x)))", "all x y z.((Lorpuse(x) & Vampuse(y) & Yumpuse(z)) -> (Vampuse(x) | Yumpuse(x) | Zumpuse(x)))", "(Vumpuse(lorpus) | Yumpuse(lorpus) | Zumpuse(lorpus))", "all x y.((Lorpuse(x) & Vampuse(y) & Yumpuse(y)) -> (Vampuse(x) | Zumpuse(y)))", "all x.(Lorpuse(x) -> (Vumpuse(x) | Yumpuse(x) | Zumpuse(x)))", "(all x.(Lorpuse(x) -> Vampuse(x)) & all y.(Yumpus(y) & all z.(Zumpus(z)) -> Zumpuse(z))))", "(Vumpuse(lorpus) & Yumpuse(lorpus) & Zumpuse(lorpus))", "all x y z.(Lorpuse(x) -> (Vumpuse(y) | Yumpuse(y) | Zumpuse(z)))", "all x.(Lorpuse(x) -> (Vampuse(x) | Yumpuse(x) | Zumpuse(x)))", "all x.(Lorpus(x) -> (Vumpuse(x) | Yumpuse(x) | Zumpuse(x)))", "all x.(Lorpus(x) -> (Vampuse(x) | Yumpuse(x) | Zumpuse(x)))", "all x.(Lorpuse(x) -> (Vumpuse(x) | Yumpuse(x) | Zumpuse(x)))", "(all x.(Lorpuse(x) -> (Vampuse(x) | Yumpuse(x) | Zumpuse(x)))", "all x.(Lorpuse(x) -> (Vumpuse(x) | Yumpuse(x) | Zumpuse(x)))"]}
{"id": "prontoqa_train_1299", "nl": "Rex is a gorpus or an impus or a vumpus.", "fol": "(gorpus(Rex) | impus(Rex) | vumpus(Rex))", "prediction": ["all x.(Rex(x) -> (Gorpus(x) | Imperator(x) | Vumpus(x)))", "all x.(Rex(x) -> (Gorpus(x) | Impermiss(x) | Vumpus(x)))", "(Gorpus(rex) | Imperator(rex) | Vumpus(rex)))", "(Gorpus) | Impermiss(x) | Vumpus(x))", "all x.(Rex(x) -> (Gorpus(x) | Issue(x) | Vumpus(x)))", "(Gorpus) | IsImpossible(Issue) | IsVumpus(Issue))", "(Gorpus,Impossible(Rex) | Vumpus(Rex))", "all x.(Rex(x) -> (Gorpus(x) | Imperempt(x) | Vumpus(x)))", "all x.(Rex(x) -> (Gorpus(x) | Issue(x) | Vumpus(x)))", "all x y.(Rex(x) -> (Gorpus(x) | Imperator(x) | Vampus(x)))", "all x.(Rex(x) -> (Gorpus(x) | Imperator(x) | Vumpus(x)))", "all x y.(Rex(x) -> (Gorpus(x) | Imperator(x) | Vumpus(y)))", "all x.(Rex(x) -> (Gorpus(x) | Imperium(x) | Vumpus(x)))", "all x.(Rex(x) -> (Gorpus(x) | Issue(x) | Vumpus(x)))", "exists x.(Rex(x) & (Gorpus(x) | Impossible(x) | Vumpus(x)))", "all x.(Rex(x) -> (Gorpus(x) | Imperative(x) | Vumpus(x)))"]}
{"id": "prontoqa_train_1300", "nl": "Jompuses are zumpuses and tumpuses and shumpuses.", "fol": "all x. (jompus(x) -> (zumpus(x) & tumpus(x) & shumpus(x)))", "prediction": ["all x.(Jompuse(x) -> (Tompus(x) | Tumpus(x) | Humpus(x)))", "(all x.(Jompuse(x) -> Zumpuse(x)) & all y.(Tumpus(y) & all z.(Shumpus(z)) -> Toumpuse(y)))", "all x y.((Jompuse(x) & Tompus(y)) -> (Tompus(x) | Tumpus(y) | Humpus(y)))", "(all x.(Jompuse(x) -> Zumpuses(x)) & all y.(Tumpuse(y) & all z.(Shumpuse(z)) -> Toumpuses(y)))", "all x y z.((Jompuse(x) & Tompus(y) & Tumpus(z) & Humpus(z)) -> (Tompus(x) | Tumpus(z) | Humpus(z)))", "all x.(Jompuse(x) -> (Tompuse(x) | Tumpuse(x) | Humpuse(x)))", "all x.(Jompuse(x) -> (Tompus(x) | Tumpus(x) | Humpus(x)))", "(all x.(Jompuse(x) -> Zumpus(x)) & all y.(Tumpus(y) & all z.(Shumpus(z) & -Tompus(y))) -> Tompus(z)))", "all x y.((Jompuse(x) & Toumpus(y)) -> (Tompus(x) | Tumpus(y) | Humpus(y)))", "(all x y.(Jompuse(x) -> Zumpuse(x)) & (Tumpus(y) | Humpus(y))))", "all x.(Jompuse(x) -> (Zumpuse(x) | Tumpuse(x) | Humpuse(x)))", "all x.(Jompuse(x) -> (Tompus(x) | Tumpus(x) | Humpus(x)))", "(all x.(Jompuse(x) -> Zumpuse(x)) & (Tumpus(x) | Humpus(x)))", "(all x.(Jompuse(x) -> Tossus(x)) & (Tumpus(x) | Humpus(x))))", "all x.(Jompuse(x) -> (Tompuse(x) | Tumpuse(x) | Shumpuse(x)))", "all x.(Jompus(x) -> (Zumpuses(x) | Tumpuses(x) | Humpuses(x)))"]}
{"id": "prontoqa_train_1301", "nl": "Sam is a zumpus or a vumpus or a sterpus.", "fol": "(zumpus(Sam) | vumpus(Sam) | sterpus(Sam))", "prediction": ["all x.(Sam(x) -> (Tompus(x) | Vumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Vumpus(x) | Sterpus(x)))", "(Tompus(sam) | Vumpus(sam) | Sterpus(sam)))", "(Zumpus) | Vumpus(x) | Sterpus(x))", "all x y.((Sam(x) & Zumpus(y)) | (Vumpus(y) | Sterpus(y))))", "all x.(Sam(x) -> (Zumpus(x) | Vumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Vumpus(x) | Sterpus(x)))", "all x y.(Sam(x) -> (Tompus(x) | Vumpus(x) | Sterpus(y)))", "(Tompus(sam) | Vumpus(sam) | Sterpus(sam)))", "(Tompus,Vumpus,Sterpus)", "all x.(Sam(x) -> (Tompus(x) | Voompus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Zumpus(x) | Vumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Vampus(x) | Sterpus(x)))", "exists x.(Sam(x) & (Zumpus(x) | -Vumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Zumpus(x) | Vumpus(x) | Sterpus(x)))", "exists x.(Sam(x) & (Tommus(x) | -Vumpus(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1302", "nl": "Rompuses are lempuses, jompuses, and grimpuses.", "fol": "all x. (rompus(x) -> (lempus(x) & jompus(x) & grimpus(x)))", "prediction": ["all x.(Rompus(x) -> (Lempuse(x) | Jompuse(x) | Grimpuse(x)))", "(all x.(Rompuse(x) -> (Lempuse(x) | Jompuse(x) | Grimpuse(x))))", "all x y z.((Rompuse(x) & Lempuse(y) & Jompuse(z) & Grimpuse(x)) -> (Lempuse(y) | Jompuse(z) | Grimpuse(z)))", "all x.(Rompus(x) -> (Lempuse(x) | Jompuse(x) | Grimpuse(x)))", "all x y.((Rompuse(x) & Lempuse(y)) | Jompuse(y) | Grimpuse(y))", "(all x.(Rompuse(x) -> Lempuse(x)) & all y.(Jompuse(y) & All z.(Smoochuse(z))) -> Grimpuse(z)))", "(all x.(Rompus(x) -> Lempuse(x)) & all y.(Jompuse(y) & All z.(Smoochuse(z))) -> Grimpuse(z)))", "all x.(Rompuse(x) -> (Lempuse(x) | Jompuse(x) | Grimpuse(x)))", "all x.(Rompus(x) -> (Lempuse(x) | Jompuse(x) | Grimpuse(x)))", "(all x.(Rompuse(x) -> (Lempuse(x) | Jompuse(x) | Grimpuse(x)))", "(all x.(Rompus(x) -> Lempus(x)) & all y.(Jompuse(y) & All z.(Grimpus(z)) -> Grimpuse(z))))", "all x.(Rompus(x) -> (Lempuse(x) | Jompuse(x) | Grimpuse(x)))", "all x.(Rompuse(x) -> (Lempuse(x) | Jompuse(x) | Grimpuse(x)))", "all x.(Rompus(x) -> (Lempuse(x) | Jompuse(x) | Grimpuse(x)))", "all x.(Rompus(x) -> (Lempuse(x) | Jompuse(x) | Grimpuse(x)))", "all x.(Rompus(x) -> (Lempuse(x) | Jompuse(x) | Grappus(x)))"]}
{"id": "prontoqa_train_1303", "nl": "Polly is a dumpus, a grimpus, or a zumpus.", "fol": "(dumpus(Polly) | grimpus(Polly) | zumpus(Polly))", "prediction": ["all x.(Polly(x) -> (Dumpus(x) | Grimpus(x) | Zumpus(x)))", "(Dumps(Polly) | Grimpus(Polly) | Zumpus(Polly))", "(Dumpus(poly) | Grimpus(poly) | Zumpus(poly)))", "all x.(Polly(x) -> (Dumpus(x) | Grimpus(x) | Zumpus(x)))", "all x.(Polly(x) -> (Dumpus(x) | Grimpus(x) | Zumpus(x)))", "((Polly) | Grimpus(Polly)) | Zumpus(Polly))", "all x y.((Polly(x) & Dumpus(y)) | Grimpus(y) | Zumpus(y)) -> Polly(x))", "(all x.(Polly(x) -> Dumpus(x)) | (Grimpus(x) | Zumpus(x))))", "all x.(Polly(x) -> (Dumps(x) | Grimpus(x) | Zumpus(x)))", "all x.(Polly(x) -> (Dumpus(x) | Grimpus(x) | Zumpus(x)))", "all x.(Polly(x) -> (Dumpus(x) | Grimpus(x) | Zumpus(x)))", "(Dumpus, Grimpus, Zumpus)", "all x.(Polly(x) -> (Dumpus(x) | Grimpus(x) | Zumpus(x)))", "all x y.((Polly(x) & Dumpus(y)) | Grimpus(y) | Zumpus(y))", "exists x.(Polly(x) & (Dumps(x) | Grimpus(x) | Zumpus(x)))", "exists x.(Poly(x) & (Dumpus(x) | Grimpus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1304", "nl": "Rompuses are brimpuses.", "fol": "all x. (rompus(x) -> brimpus(x))", "prediction": ["all x.(Rompus(x) -> Brimpuse(x))", "all x.(Rompus(x) -> Brimpus(x))", "all x y.((Rompus(x) & Brimpus(y)) -> Brimpus(x))", "(Brimpuse(rompus) & Brimpus(rompus))", "(Brompuses(rompus) & Brimpuse(rompus))", "all x.(Rompus(x) -> Brimpuse(x))", "all x y.((Rompus(x) & Brimpus(y)) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "(Brompuses(rompus) & Brimpus(rompus))", "all x.(Rompus(x) -> Brimpuse(x))", "all x.(Romes(x) -> Brimpuse(x))", "all x.(Rompus(x) -> Brimpus(x))", "All x.(Rompuse(x) -> Brimpuse(x))", "all x.(Rompus(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_1305", "nl": "Lorpuses are gorpuses.", "fol": "all x. (lorpus(x) -> gorpus(x))", "prediction": ["all x.(Lorpus(x) -> Gorpus(x))", "all x.(Lorpus(x) -> Gorpuse(x))", "all x y.((Lorpus(x) & Gorpus(y)) -> Gorpus(x))", "all x y.((Lorpuse(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Lorpus(x) -> Gorpus(x))", "(all x.(Lorpus(x) -> Gorpus(x)))", "(Gorpuse(lorpus) & Gorpus(lorpus))", "all x.(Lorpuse(x) -> Gorpuse(x))", "all x y.((Lorpus(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Lorpus(x) -> Gorpuse(x))", "all x.(Lorpus(x) -> Gorpuse(x))", "all x.(Lorpheus(x) -> Gorpuse(x))", "all x.(Lorpus(x) -> Gorpuse(x))", "all x.(Lorpuse(x) -> Gorpuse(x))", "all x.(Lorpus(x) -> Gorpuse(x))", "all x.(Lorpus(x) -> Gorpuse(x))"]}
{"id": "prontoqa_train_1306", "nl": "Gorpuses are grimpuses.", "fol": "all x. (gorpus(x) -> grimpus(x))", "prediction": ["all x.(Gorpus(x) -> Grimpuse(x))", "all x.(Gorpuse(x) -> Grimpuse(x))", "all x y.((Gorpuse(x) & Grimpuse(y)) -> (Smoothpuse(x) & Grapple(y)))", "all x.(Gorpus(x) -> Grimpuse(x))", "(Gorpuse(gorpus) & Grimpuse(gorpus))", "all x.(Gorpuse(x) -> Grimpuse(x))", "all x y.((Gorpuse(x) & Grimpuse(y)) -> (Fragpuse(x) & Grappa(y)))", "(Gorpuse(gorpus) & Grimpuse(gorpus))", "all x.(Gorpus(x) -> Grimpuse(x))", "all x.(Gorpuse(x) -> Grimpuse(x))", "(Grimpuse(gorpus) & Grappa(gorpus))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpuse(x) -> Grimpuse(x))", "all x.(Grossus(x) -> Grimpuse(x))", "all x.(Gorpus(x) -> Grappa(x))", "all x.(Gorpuse(x) -> Grappa(x))"]}
{"id": "prontoqa_train_1307", "nl": "Sam is a shumpus, Sam is a sterpus, and Sam is not a yumpus.", "fol": "(shumpus(Sam) & sterpus(Sam) & -yumpus(Sam))", "prediction": ["(all x.(Shumpus(x) -> Sam(x)) & (Sterpus(x) -> Sam(x)) & -Yumpus(x)))", "all x y z.((Sam(x) & Shumpus(y) & Sterpus(z)) -> (Sam(x) & -Yumpus(x)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Sterpus(y) -> Sam(y))) & all z.(Yumpus(z) -> Sam(z)))", "(all x.(Sam(x) -> Humpus(x)) & (Sam(x) -> Sterpus(x)) & (Sam(x) -> -Yumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) | Sterpus(x) | -Yumpus(x)))", "all x y z.((Sam(x) & Shumpus(y) & Sterpus(z)) -> (Sam(x) & -Yumpus(x)))", "all x y z.((Sam(x) & Sterpus(y) & -Yumpus(z)) -> (Shumpus(x) | Sterpus(y) | -Sam(z)))", "(all x y z.((Shumpus(x) & Sterpus(y) & Sam(z)) -> (Shumpus(x) & Sterpus(y) & -Yumpus(z)))", "(all x.(Shumpus(x) -> Shumpus(x)) & (Sterpus(x) -> Sterpus(x)) & (Yumpus(x) -> -Yumpus(x)))", "(all x y z.((Sam(x) & Humpus(y)) -> Shumpus(x)) & ((Sam(z) & Sterpus(z)) -> -Yumpus(z)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Sterepus(y) -> Sam(y))) & all z.(Yumpus(z) -> Sam(z)))", "exists x.(Sam(x) & Shumpus(x) & Sterpus(x) & -Yumpus(x))", "all x.(Sam(x) -> (Shumpus(x) | Sterpus(x) | -Yumpus(x)))", "(all x.(Sam(x) -> Humpus(x)) & (Sam(x) -> Sterpus(x)) & -Yumpus(x)))", "all x y z.((Sam(x) & Shumpus(y) & Sterpus(z) & -Yumpus(z)) -> (Sam(x) & -Sam(x)))", "all x y z.(Sam(x) -> (Shumpus(x) | Sterpus(y) | -Yumpus(z)))"]}
{"id": "prontoqa_train_1308", "nl": "Sam is a grimpus, Sam is a brimpus, and Sam is not a tumpus.", "fol": "(grimpus(Sam) & brimpus(Sam) & -tumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> -Tumpus(x)))", "all x y z.((Sam(x) & Grimpus(x) & Brimpus(y) & -Tumpus(z)) -> (Sam(x) & -Sam(x)))", "(all x y z.((Sam(x) & Grimpus(x)) -> (Sam(y) & Brimpus(y))) & ((Sam(z) & -Tumpus(z))) -> (Sam(z) & -Sam(z))))", "(all x.(Sam(x) -> Grimpus(x)) & all y.(Sam(y) -> Brimpus(y)) & all z.(Sam(z) -> -Tumpus(z))))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> Brimpus(x)) & -Tumpus(x)))", "all x.(Sam(x) -> (Grimpus(x) | Brimpus(x) | -Tumpus(x)))", "all x y z.((Sam(x) & Grimpus(x) & Brimpus(y) & -Tumpus(z)) -> (Sam(x) & -Sam(x)))", "(all x y z.((Sam(x) & Grimpus(y)) -> (Grimpus(z) | Brimpus(z))) & ((Sam(x) & -Tumpus(x)) -> (Sam(x) & Brimpus(x))))", "(all x.(SameDay(x) -> Grimpus(x)) & (SameDay(x) -> Brimpus(x)) & (SameDay(x) -> -Tumpus(x)))", "all x y z.((Sam(x) & Grimpus(y) & Brimpus(z)) -> (Sam(x) & -Tumpus(x)))", "exists x.(Sam(x) & Grimpus(x) & Brimpus(x) & -Tumpus(x))", "(all x.(Sam(x) -> Grimpus(x)) & all y.(Brimpus(y) -> Brimpus(y)) & all z.(Sam(z) -> -Tumpus(z))))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> -Tumpus(x)))", "all x y z.((Sam(x) & Grimpus(x) & Brimpus(y) & Sam(z)) -> (Sam(x) & -Tumpus(z)))", "all x.(Sam(x) -> (Grimpus(x) | Brimpus(x) | -Tumpus(x)))", "all x y z.((Sam(x) & Grumpus(y) & Brimpus(z)) -> (Grimpus(x) | Brimpus(z) | -Tumpus(z)))"]}
{"id": "prontoqa_train_1309", "nl": "Grimpuses are rompuses, vumpuses, and tumpuses.", "fol": "all x. (grimpus(x) -> (rompus(x) & vumpus(x) & tumpus(x)))", "prediction": ["all x.(Grimpus(x) -> (Rompus(x) | Vampuse(x) | Tumpus(x)))", "(all x.(Grimpus(x) -> (Rompus(x) | Vampuse(x) | Tumpus(x))))", "all x.(Grimpus(x) -> (Rompus(x) | Vampus(x) | Tumpus(x)))", "all x y z.((Grimpus(x) & Rompus(y) & Vampuse(z)) -> (Rompus(x) | Tumpus(x)))", "(all x.(Grimpuse(x) -> (Rompus(x) | Vampuse(x) | Tumpus(x))))", "(Rompuses(Rompus) | Vampuses(Rompus) | Tumpuses(Rompus))", "(all x.(Grimpus(x) -> (Rompus(x) | Vampuse(x) | Tumpus(x)))", "all x.(Grimpus(x) -> (Rompus(x) | Vampuse(x) | Tumpus(x)))", "(all x.(Grimpuse(x) -> (Rompus(x) | Vampuse(x) | Tumpus(x))))", "all x.(Grimpus(x) -> (Rompus(x) | Vampus(x) | Tumulus(x)))", "all x.(Grimpus(x) -> (Rompus(x) | Vumpus(x) | Tumpus(x)))", "all x.(Grimpuse(x) -> (Rompus(x) | Vampuse(x) | Tumulus(x)))", "(all x.(Grimpuse(x) -> (Rompus(x) | Vampus(x) | Tumpus(x)))", "all x.(Rampuse(x) -> (Rompus(x) | Vampus(x) | Tumpus(x)))", "all x.(Grimpus(x) -> (Rompus(x) | Vampuse(x) | Tumpus(x)))", "all x.(Grimpus(x) -> (Rompus(x) | Vampuse(x) | Tumulus(x)))"]}
{"id": "prontoqa_train_1310", "nl": "Fae is a yumpus, a shumpus, or a vumpus.", "fol": "(yumpus(Fae) | shumpus(Fae) | vumpus(Fae))", "prediction": ["all x.(Fae(x) -> (Yumpus(x) | Humpus(x) | Vumpus(x)))", "(Yumpus(f) | Humpus(f) | Vumpus(f))", "all x y.((Fae(x) & (Yumpus(y) | Humpus(y) | Vumpus(y))) -> (Yumpus(x) | Humpus(y) | Vumpus(y)))", "all x.(Fae(x) -> (Yumpus(x) | Humpus(x) | Vumpus(x)))", "(Yumpus,yumpus,shumpus,voompus)", "(Yumpus,yumpus) | Humpus(y) | Vumpus(y))", "all x.(Fae(x) -> (Yumpus(x) | Humpus(x) | Vumpus(x)))", "(yumpus) | shumpus(x) | vumpus(x))", "all x.(Fae(x) -> (Yumpus(x) | Humpus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Yumpus(x) | Humpus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Yumpus(x) | Shumpus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Yumpus(x) | Humpus(x) | Vumpus(x)))", "exists x.(Fae(x) & (Yumpus(x) | Humpus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Yumpus(x) | Shumpus(x) | Vumpus(x)))", "exists x.(Fae(x) & (yumpus(y) | shumpus(y) | vumpus(y)))", "exists x.(Fae(x) & (Yumpus(x) | Humpus(x) | Vampire(x)))"]}
{"id": "prontoqa_train_1311", "nl": "Alex is a sterpus, a yumpus, and a rompus.", "fol": "(sterpus(Alex) & yumpus(Alex) & rompus(Alex))", "prediction": ["all x.(Alex(x) -> (Sterpus(x) | Yumpus(x) | Rompus(x)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Yumpus(y) & all z.(Rompus(z)) -> Sterepus(x)))", "all x y z.((Alex(x) & Sterpus(y) & Yumpus(z)) -> (Sterepus(x) | Rompus(x)))", "all x.(Alex(x) -> (Sterepus(x) & Yumpus(x) & Rompus(x)))", "(Sterpus(Alex) | Yampus(Alex) | Rompus(Alex))", "all x y z.((Alex(x) & Sterepus(y) & Yumpus(z)) -> (Sterepus(x) | Yampus(z) | Rompus(z)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Yumpus(y) & all z.(Rompus(z)) -> Sterile(x)))", "(All x.(Alex(x) -> Sterpus(x)) & (Yumpus(x) & (Rompus(x))))", "all x.(Alex(x) -> (Sterpus(x) | Yampus(x) | Rompus(x)))", "(All x.(Alex(x) -> Sterus(x)) & (Yumpus(x) & (Rompus(x))))", "(Sterpus,yumpus,rompus)", "all x.(Alex(x) -> (Sterepus(x) & Yumpus(x) & Rompus(x)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Yumpus(y) & all z.(Rompus(z) -> Sterepus(x))))", "exists x.(Alex(x) & Sterpus(x) & Yampus(x) & Rompus(x))", "all x.(Alex(x) -> (Sterpus(x) | Yumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Stereopus(x) | Yampus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1312", "nl": "Alex is a rompus or a jompus or a lorpus.", "fol": "(rompus(Alex) | jompus(Alex) | lorpus(Alex))", "prediction": ["all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))", "(Rompus(Alex) | Jompus(Alex) | Lorpus(Alex))", "all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))", "(Rompus(Alex) | Jompus(Alex) | Lorpus(Alex))", "(all x.(Alex(x) -> Rompus(x)) | (Jompus(x) | Lorpus(x))))", "all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))", "all x y.((Alex(x) & Rompus(y)) | (Jompus(y) | Lorpus(y))))", "(Rompus(Alex) | Jompus(Alex) | Lorpus(Alex))", "all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))", "all x.(Alex(x) -> (rompus(x) | Jompus(x) | Lorpus(x)))", "all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))", "(Rompus(Alex) | Jompus(Alex) | Lorpus(Alex))", "all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))", "exists x.(Alex(x) & (rompus(x) | jompus(x) | lorpus(x)))", "all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))", "all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))"]}
{"id": "prontoqa_train_1313", "nl": "Everything that is a tumpus, a shumpus, and a grimpus is a wumpus.", "fol": "all x. ((tumpus(x) & shumpus(x) & grimpus(x)) -> wumpus(x))", "prediction": ["all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> Wumpus(x))", "all x y z.((Tumpus(x) & Shumpus(y) & Grimpus(z) & Has(x,y)) -> Wumpus(x))", "all x y.((Tumpus(x) & Shumpus(y) & Grimpus(y)) -> Wumpus(x))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> Wumpus(x))", "all x.(((Tumpus(x) | Shumpus(x) | Grimpus(x))) -> Wumpus(x))", "all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> Wumpus(x))", "(all x.((Tumpus(x) | Humpus(x) | Grimpus(x))) -> Wumpus(x))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> Wumpus(x))", "all x.(Wumpus(x) -> (Tumpus(x) | Shumpus(x) | Grimpus(x)))", "all x.((Tumpus(x) & Humpus(x) & Grimpus(x)) -> Wumpus(x))", "(all x.((Tumpus(x) | Humpus(x)) | Grimpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> Wumpus(x))", "(all x.((Tumpus(x) | Humpus(x)) | Grimpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> Wumpus(x))"]}
{"id": "prontoqa_train_1314", "nl": "Max is a shumpus.", "fol": "shumpus(Max)", "prediction": ["all x.(Max(x) -> Humpus(x))", "Max is a shumpus.", "(Shumpus(Max) & HasShump(Max))", "-Shumpus(Max)", "Max is a shumpus.", "all x.(Max(x) -> Humpus(x))", "Max is shumpus.", "(Shumpus(Max) & HasShump(Max))", "all x.(Shumpus(x) -> Max(x))", "(Shumpus(Max) & Shumpus(Max))", "all x.(Max(x) -> Humpus(x))", "all x.(Shumpus(x) -> Max(x))", "(Shumpus(Max))", "(Shumpus(Max) -> Shumpus(Max))", "All x.(Max(x) -> Humpus(x))", "(Shumpus(Max)"]}
{"id": "prontoqa_train_1315", "nl": "Max is a gorpus, a rompus, or a wumpus.", "fol": "(gorpus(Max) | rompus(Max) | wumpus(Max))", "prediction": ["all x.(Max(x) -> (Gorpus(x) | Rompus(x) | Wumpus(x)))", "(Gorpus(Max) | Rompus(Max) | Wumpus(Max))", "(all x.(Max(x) -> Gorpus(x) | All y.(Rompus(y) | All z.(Wumpus(z)))))", "(all x.(Max(x) -> Gorpus(x)) | (Max(x) -> Rompus(x)) | Max(x) -> Wumpus(x)))", "all x.(Max(x) -> (Gorpus(x) | Rompus(x) | Wumpus(x)))", "all x y.((Max(x) & Gorpus(y)) | (Rompus(y) | Wumpus(y))))", "(Gorpus(Max) | Rompus(Max) | Wumpus(Max))", "all x.(Max(x) -> (Gorpus(x) | Rompus(x) | Wumpus(x)))", "(Gorpus,rompus,wumpus)", "all x.(M Max(x) -> (Gorpus(x) | Rompus(x) | Wumpus(x)))", "all x.(Max(x) -> (Gorpus(x) | Rompus(x) | Wumpus(x)))", "(all x.(Max(x) -> Gorpus(x)) | (Max(x) -> Rompus(x) | Max(x))))", "all x.(Max(x) -> (Gorpus(x) | Rompus(x) | Wumpus(x)))", "all x.(Max(x) -> (Gorpus(x) | Rompus(x) | Wumpus(x)))", "all x.(Max(x) -> (Gorpus(x) | Rompus(x) | Wumpus(x)))", "exists x.(Max(x) & (Gorpus(x) | Rompus(x) | Wumpus(x)))"]}
{"id": "prontoqa_train_1316", "nl": "Everything that is a gorpus, a shumpus, or a numpus is a yumpus.", "fol": "all x. ((gorpus(x) | shumpus(x) | numpus(x)) -> yumpus(x))", "prediction": ["all x.((Gorpus(x) | Shumpus(x) | Numpus(x)) -> Yumpus(x))", "all x.((Gorpus(x) | Humpus(x) | Numpus(x)) -> Yumpus(x))", "all x.((Gorpus(x) | Shumpus(x) | Numpus(x)) -> Yumpus(x))", "all x y.((Gorpus(x) | Shumpus(x) | Numpus(x)) -> Yumpus(y))", "(all x.((Gorpus(x) | Shumpus(x) | Numpus(x))) -> Yampus(x))", "all x.(Yumpus(x) -> (Gorpus(x) | Shumpus(x) | Numpus(x)))", "all x.((Gorpus(x) | Humpus(x) | Numpus(x)) -> Yumpus(x))", "all x.((Gorpus(x) | Shumpus(x) | Numpus(x)) -> Yumpus(x))", "all x.(Yumpus(x) -> (Gorpus(x) | Shumpus(x) | Numpus(x)))", "all x y.((Gorpus(x) | Shumpus(x) | Numpus(x)) -> Yumpus(y))", "all x.((Gorpus(x) | Humpus(x) | Numpus(x)) -> Yumpus(x))", "all x.((Gorpus(x) | Shumpus(x) | Numpus(x)) -> Yampus(x))", "all x.(Yumpus(x) -> (Gorpus(x) | Shumpus(x) | Numpus(x)))", "all x.((Gorpus(x) | Shumpus(x) | Numpus(x)) -> Yumpus(x))", "all x.((Gorpus(x) | Humpus(x) | Numpus(x)) -> Yampus(x))", "all x.((Gorpus(x) | Humpus(x) | Numpus(x)) -> Yumpus(x))"]}
{"id": "prontoqa_train_1317", "nl": "Wren is not a yumpus, Wren is a lempus, and Wren is a dumpus.", "fol": "(-yumpus(Wren) & lempus(Wren) & dumpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Yumpus(x)) & all y.(Wren(y) -> Lempus(y)) & all z.(Wren(z) -> Dumpus(z))))", "all x y z.((Wren(x) & Yumpus(y) & Lempus(z)) -> (-Yumpus(x) & Lempus(x) & Dumpus(x)))", "all x.(Wren(x) -> (-Yumpus(x) & Lempus(x) & Dumpus(x)))", "(all x.(Wren(x) -> -Yumpus(x)) & (Lempus(x) & Dumpus(x)))", "(all x y z.((Wren(x) & Yumpus(y)) -> -Yumpus(x)) & ((Wren(z) & Lempus(z))) -> Dumpus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Lempus(z)) -> (-Yumpus(x) & Lempus(x) & Dumpus(x)))", "(all x.(Wren(x) -> -Yumpus(x)) & all y.(Wren(y) -> Lempus(y)) & all z.(Wren(z) -> Dumpus(z))))", "(all x y z.((Wren(x) & Yumpus(y)) -> -Yumpus(x)) & ((Wren(z) & Lempus(z)) -> Dumpus(z)))", "all x y z.((Wren(x) & Lempus(y) & Dumpus(z)) -> (-Yumpus(x) & Lempus(y) & Dumpus(z)))", "(all x y z.((Wren(x) & Yumpus(y)) -> -Yumpus(x)) & ((Wren(z) & Lempus(z)) -> Dumpus(z)))", "(all x.(Wren(x) -> -Yumpus(x)) & (Lempus(x) & Dumpus(x)))", "(all x.(Wren(x) -> -Yumpus(x)) & (Wren(x) -> Lempus(x)) & (Wren(x) -> Dumpus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Lempus(z)) -> (-Yumpus(x) | Dumpus(x)))", "(all x.(Wren(x) -> -Yumpus(x)) & all y.(Wren(y) -> Lempus(y)) & all z.(Wren(z) -> Dumpus(z))))", "all x y z.((Wren(x) & Lempus(y) & Dumpus(z)) -> (-Yumpus(x) & Lempus(y) & Dumpus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Lempus(z)) -> (-Yumpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_1318", "nl": "Tumpuses are brimpuses.", "fol": "all x. (tumpus(x) -> brimpus(x))", "prediction": ["all x.(Tumpuse(x) -> Brimpus(x))", "all x.(Tumpuse(x) -> Brimbus(x))", "all x y.((Tumpuse(x) & Brimpus(y)) -> (Brimpus(x) & Tumpus(y)))", "(all x.(Tumpuse(x) -> Brimbus(x)))", "all x.(Tumulus(x) -> Brimpuse(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.((Tumpuse(x) & Brimpus(x)) -> Embryonal(x))", "all x y.((Tumpuse(x) & Brimpus(y)) -> Is(x,y))", "all x.(Tumpuse(x) -> Brimpus(x))", "all x.(Tumulus(x) -> Brimpuse(x))", "all x.(Tumpus(x) -> Brimpus(x))", "(Brimpus)", "all x.(Tumpuse(x) -> Brimbus(x))", "(Brimpus)", "all x.(Tumulus(x) -> Brimpuse(x))", "all x.(Mumpsue(x) -> Brimbus(x))"]}
{"id": "prontoqa_train_1319", "nl": "Every grimpus is not a brimpus.", "fol": "all x. (grimpus(x) -> -brimpus(x))", "prediction": ["all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "-Brimpus(greypus)", "all x.(Smoothpus(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "-Brimpus(grease(grease)", "all x y.((Grimpus(x) & Grimpus(y) & -Brimpus(x)) -> -Brimpus(x))", "(all x.(Grimpus(x) -> -Brimpus(x)))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Sgrimpus(x) -> -Brimpus(x))", "(all x.(Grimpus(x) -> -Brimpus(x)))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Surprise(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brumpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "exists x.(Grimpus(x) & -Brumpus(x))"]}
{"id": "prontoqa_train_1320", "nl": "Every yumpus is not an impus.", "fol": "all x. (yumpus(x) -> -impus(x))", "prediction": ["all x.(Yumpus(x) -> -Impossible(x))", "all x.(Yumpus(x) -> -Impossible(x))", "-Impossible(y)", "-IsImpossible(yumpus)", "(all x.(Yumpus(x) -> -Impossible(x)))", "all x.(Yumpus(x) -> -IsImpossible(x))", "-Impossible(y)", "all x.(Yumpus(x) -> -Is(x,Is(x,Is(x)))", "all x.(Yumpus(x) -> -Impossible(x))", "all x.(Yumpus(x) -> -Impossible(x))", "all x.(Yumpus(x) -> -IsImpossible(x))", "all x.(Yumpus(x) -> -Impossible(x))", "all x.(Yumpus(x) -> -Impossible(x))", "all x.(Yumpus(x) -> -Illegal(x))", "exists x.(Yumpus(x) & -Is(x,Is(x,Is))", "all x.(Yumpus(x) -> -Impossed(x))"]}
{"id": "prontoqa_train_1321", "nl": "Sally is a zumpus, a yumpus, and a lorpus.", "fol": "(zumpus(Sally) & yumpus(Sally) & lorpus(Sally))", "prediction": ["all x.(Sally(x) -> (Tompus(x) | Yumpus(x) | Lorpus(x)))", "(all x.(Sally(x) -> Zumpus(x)) & all y.(Yumpus(y) & all z.(Lorpus(z) & Y.(Yumpus(z) & Y.(Yumpus(z)))))", "(Zumpus(Sally) | Yumpus(Sally) | Lorpus(Sally)))", "all x.(Sally(x) -> (Tompus(x) & Yumpus(x) & Lorpus(x)))", "Sally (zumpus) & yumpus(y) & lorpus(z))", "all x y z.((Sally(x) & Zumpus(y) & Yumpus(z)) -> (Tompus(x) | Lorpus(x)))", "Sally is a zumpus, yumpus, lorpus.", "(Tompus(Sally) & Yumpus(Sally) & Lorpus(Sally))", "(All x.(Sally(x) -> Zumpus(x)) & (Yumpus(x) & Lorpus(x)))", "all x.(Sally(x) -> (Tompus(x) | Yumpus(x) | Lorpus(x)))", "(Zumpus,yumpus,lorpus)", "(all x.(Sally(x) -> Zumpus(x)) & all y.(Yumpus(y) & all z.(Lorpus(z) -> Lorpus(z))))", "all x.(Sally(x) -> (Zumpus(x) & Yumpus(x) & Lorpus(x)))", "exists x.(Sally(x) & Zumpus(x) & Yumpus(x) & Lorpus(x))", "all x.(Sally(x) -> (Tompus(x) | Yumpus(x) | Lorpus(x)))", "all x.(Sally(x) -> (Zumpus(x) | Yumpus(x) | Lorpus(x)))"]}
{"id": "prontoqa_train_1322", "nl": "Sally is not a gorpus, Sally is not a tumpus, and Sally is a dumpus.", "fol": "(-gorpus(Sally) & -tumpus(Sally) & dumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Gorpus(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Dumpus(x)))", "all x y z.((Sally(x) & Gorpus(y) & Tumpus(z)) -> (-Gorpus(x) & -Tumpus(x) & -Dumpus(x)))", "(all x y z.((Sally(x) & Gorpus(y) & Tumpus(z)) -> -Gorpus(x)) & ((Sally(x) & Tumpus(z)) -> Dumpus(x)))", "(all x.(Sally(x) -> -Gorpus(x)) & all y.(Sally(y) -> -Tumpus(y)) & all z.(Sally(z) -> Dumpus(z))))", "(all x.(Sally(x) -> -Gorpus(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Dumpus(x)))", "all x y z.((Sally(x) & Gorpus(y) & Tumpus(z)) -> (-Gorpus(x) & -Tumpus(y) & -Dumpus(z)))", "all x.(Sally(x) -> (-Gorpus(x) & -Tumpus(x) & -Dumpus(x)))", "(-Gorpus(Sally) & -Tumpus(Sally) & Dumpus(Sally))", "all x y z.((Sally(x) & Gorpus(y) & Tumpus(z)) -> (-Gorpus(x) & -Tumpus(x) & Dumpus(x)))", "(all x.(Sally(x) -> -Gorpus(x)) & all y.(Sally(y) -> -Tumpus(y)) & all z.(Sally(z) -> Dumpus(z))))", "all x.(Sally(x) -> (-Gorpus(x) & -Tumpus(x) & -Dumpus(x)))", "(-Gorpus(Sally) & -Tumpus(Sally) & Dumpus(Sally))", "(all x.(Sally(x) -> -Gorpus(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Dumpus(x)))", "all x.(Sally(x) -> (-Gorpus(x) & -Tumpus(x) & Dumpus(x)))", "all x y z.((Sally(x) & Gorpus(y) & Tumpus(z)) -> (-Gorpus(x) & -Tumpus(y) & -Dumpus(z)))", "(all x.(Sally(x) -> -Gorpus(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Dumpus(x)))"]}
{"id": "prontoqa_train_1323", "nl": "Everything that is a zumpus or a dumpus or a yumpus is a numpus and a vumpus and a rompus.", "fol": "all x. ((zumpus(x) | dumpus(x) | yumpus(x)) -> (numpus(x) & vumpus(x) & rompus(x)))", "prediction": ["all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (Numpus(x) & Vumpus(x) & Rompus(x)))", "all x y.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (Numpus(y) & Vumpus(y) & Rompus(y)))", "all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (Numpus(x) & Vumpus(x) & Rompus(x)))", "(all x.((Tompus(x) | Dumpus(x) | Yumpus(x))) -> Numpus(x)) & all y.((Vumpus(y) & Rompus(y)) -> Rompus(y)))", "all x y.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (Numpus(y) & Vumpus(y) & Rompus(y)))", "all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (Numpus(x) & Vumpus(x) & Rompus(x)))", "(all x.((Tompus(x) | Dumpus(x) | Yumpus(x))) -> Numpus(x)) & all y.((Vumpus(y) & Rompus(y)) -> Rompus(y)))", "all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (Numpus(x) & Vumpus(x) & Rompus(x)))", "all x.((Zumpus(x) | Dumpus(x) | Yumpus(x)) -> (numpus(x) & vumpus(x) & rompus(x)))", "all x.((Tompus(x) | Dumpus(x) | Yaumpus(x)) -> (Numpus(x) & Vumpus(x) & Rompus(x)))", "all x y.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (Numpus(y) & Vumpus(y) & Rompus(y)))", "all x.((Zumpus(x) | Dumpus(x) | Yumpus(x)) -> (Numpus(x) & Vumpus(x) & Rompus(x)))", "all x.((Tompus(x) | Dumpus(x) | Yampus(x)) -> (Numpus(x) & Voompus(x) & Rompus(x)))", "all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (Numerus(x) & Vumpus(x) & Rompus(x)))", "all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (Numpus(x) & Voompus(x) & Rompus(x)))", "all x.((Zumpus(x) | Dumpus(x) | Yaumpus(x)) -> (Numpus(x) & Vumpus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_1324", "nl": "Everything that is a grimpus or a gorpus or a rompus is a zumpus.", "fol": "all x. ((grimpus(x) | gorpus(x) | rompus(x)) -> zumpus(x))", "prediction": ["all x.((Smokey(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.((Gruppus(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.((Smaller(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x y.((Smokey(x) | Gorpus(x) | Rompus(x)) -> Zumpus(y))", "all x.((Gruppus(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.((Grimpus(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.((Crupid(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.((Grampus(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x y.((Smooch(x) | Gorpus(x) | Rompus(x)) -> Zumpus(y))", "all x.((Smokey(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.(((Grimpus(x) | Gorpus(x) | Rompus(x))) -> Zumpus(x))", "all x.((Gruppus(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "(all x.((Grimpus(x) | Gorpus(x) | Rompus(x))) -> Zumpus(x))", "all x.((Frostpus(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.((Grimpus(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.((Crupid(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))"]}
{"id": "prontoqa_train_1325", "nl": "Wren is a lempus, a sterpus, and a grimpus.", "fol": "(lempus(Wren) & sterpus(Wren) & grimpus(Wren))", "prediction": ["all x.(Wren(x) -> (Lempus(x) | Sterpus(x) | Grimpus(x)))", "(all x.(Wren(x) -> Lempus(x)) & (Sterpus(x) & Grimpus(x)))", "all x y z.((Wren(x) & Lempus(y) & Sterpus(z) & Grimpus(x)) -> (Lempus(x) & Sterpus(y) & Grimpus(z)))", "(exists x.(Wren(x) & Lempus(x)) & exists y.(Sterpus(y) & Sterpus(y)) & exists z.(Grimpus(z) & Grapple(z))))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Sterpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "all x.(Wren(x) -> (Lempus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) & Sterpus(x) & Grimpus(x)))", "all x y z.((Wren(x) & Lempus(y) & Sterpus(z) & Grimpus(x)) -> (Lempus(x) | Sterpus(z) | Grimpus(z)))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Sterpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "(all x.(Wren(x) -> Lempus(x)) & (Sterpus(x) & Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Sterpus(x) | Grimpus(x)))", "exists x.(Wren(x) & Lempus(x) & Sterepus(x) & Grimpus(x))", "all x.(Wren(x) -> (Lempus(x) & Sterpus(x) & Grimpus(x)))", "exists x.(Wren(x) & Lempus(x) & Sterpus(x) & Grimpus(x))", "(all x.(Wren(x) -> Lempus(x)) & (Sterepus(x) & Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Sterpus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1326", "nl": "Everything that is a vumpus and a wumpus and a brimpus is a sterpus, a lempus, and a tumpus.", "fol": "all x. ((vumpus(x) & wumpus(x) & brimpus(x)) -> (sterpus(x) & lempus(x) & tumpus(x)))", "prediction": ["all x.((Vumpus(x) & Wumpus(x) & Brimpus(x)) -> (Sterpus(x) & Lempus(x) & Tumpus(x)))", "all x y.((Vumpus(x) & Wumpus(y) & Brimpus(y)) -> (Sterpus(x) & Lempus(x) & Tumpus(x)))", "all x y z.((Vumpus(x) & Wumpus(y) & Brimpus(z) & Is(x,y)) -> (Sterepus(x) | Lempus(x) | Tumpus(x)))", "all x.((Vumpus(x) & Wumpus(x) & Brimpus(x)) -> (Sterpus(x) & Lempus(x) & Tumpus(x)))", "all x.((Vumpus(x) & Wumpus(x) & Brimpus(x)) -> (Sterepus(x) & Lempus(x) & Tumpus(x)))", "(all x.((Vumpus(x) & Wumpus(x) & Brimpus(x)) -> (Sterpus(x) & Lempus(x) & Tumpus(x)))", "(all x.((Vumpus(x) & -Wumpus(x) & -Brimpus(x)) -> (Sterepus(x) & Lempus(x) & Tumpus(x)))", "all x.((Vumpus(x) & Wumpus(x) & Brimpus(x)) -> (Sterpus(x) | Lempus(x) | Tumpus(x)))", "all x y z.((Vumpus(x) & Wumpus(y) & Brimpus(z)) -> (Sterpus(x) | Lempus(x) | Tumpus(x)))", "(all x.((Vumpus(x) & Wumpus(x) & Brimpus(x)) -> (Sterepus(x) & Lempus(x) & Tumpus(x)))", "all x y.((Vumpus(x) & Wumpus(x) & Brimpus(y)) -> (Sterepus(x) | Lempus(x) | Tumpus(x)))", "all x.((Vumpus(x) & Wumpus(x) & Brimpus(x)) -> (Sterepus(x) & Lempus(x) & Tumpus(x)))", "all x.((Vumpus(x) & Wumpus(x) & Brimpus(x)) -> (Sterepus(x) & Lempus(x) & Tumpus(x)))", "all x.((Vumpus(x) & Wumpus(x) & Brimpus(x)) -> (Sterpus(x) | Lempus(x) | Tumpus(x)))", "all x.((Vumpus(x) & Wumpus(x) & Brimpus(x)) -> (Sterpus(x) | Lempus(x) | Tumpus(x)))", "all x.((Vumpus(x) & Wumpus(x) & Brimpus(x)) -> (Sterepus(x) & Lempus(x) & Tumpus(x)))"]}
{"id": "prontoqa_train_1327", "nl": "Sam is a brimpus.", "fol": "brimpus(Sam)", "prediction": ["all x.(Sam(x) -> Brimpus(x))", "all x.(Sam(x) -> Brimpus(x))", "Sam is a Brimpus.", "(Brimpus(Sam) & Brimpus(Sam))", "all x.(Brimpus(x) -> Sam(x))", "all x.((Sam(x) & Brimpus(x)) -> CanBeBrimpus(x))", "all x.(Sam(x) -> Brimpus(x))", "(Brimpus(Sam) & HasBrimpus(Sam))", "(Brumpus(Sam) & HasBrimpus(Sam,Sam))", "all x.(Sam(x) -> Brimpus(x))", "all x.((Sam(x) & Brimpus(x)) -> Has(x,y))", "all x.(Brimpus(x) -> Sam(x))", "(Brimpus(sam) & Brimpus(sam))", "(Brumpus)", "all x.(Brumpus(x) -> Sam(x))", "All x.(Sam(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_1328", "nl": "Everything that is a lorpus or a grimpus or a jompus is a vumpus.", "fol": "all x. ((lorpus(x) | grimpus(x) | jompus(x)) -> vumpus(x))", "prediction": ["all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vumpus(x))", "all x y.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vumpus(y))", "all x.(((Lorpus(x) | Grimpus(x) | Jompus(x))) -> Vumpus(x))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vumpus(x))", "all x y.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vumpus(y))", "all x.(((Lorpus(x) | Grimpus(x) | Jompus(x))) -> Vumpus(x))", "all x.((Lorpus(x) | Grapple(x) | Jompus(x)) -> Vumpus(x))", "(all x.((Lorpus(x) | Grimpus(x) | Jompus(x))) -> Vumpus(x))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vumpus(x))", "all x.(Vumpus(x) -> (Lorpus(x) | Grimpus(x) | Jompus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vampus(x))"]}
{"id": "prontoqa_train_1329", "nl": "Rex is a jompus, an impus, and a grimpus.", "fol": "(jompus(Rex) & impus(Rex) & grimpus(Rex))", "prediction": ["(all x.(Rex(x) -> Jompus(x)) & all y.(Imposs(y) -> Grimpus(y)))", "all x.(Rex(x) -> (Jompus(x) | Impossible(x) | Grimpus(x)))", "(Jompus(rex) & Issuel(rex) & Grimpus(rex))", "all x y z.((Rex(x) & Jompus(y) & Impossible(z)) -> (Jompus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Jompus(x) | Imperator(x) | Grimpus(x)))", "(Jompus(rex) | Impossible(rex) | Grimpus(rex)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Imposs(y) -> Grimpus(y)))", "(all x.(Rex(x) -> Jompus(x)) & (Imposs(x) -> Grimpus(x)))", "all x.(Rex(x) -> (Jompus(x) | Impossible(x) | Grimpus(x)))", "(Jompus(rex) & Impossible(rex) & Grimpus(rex))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Issue(y) -> Grimpus(y)))", "all x.(Rex(x) -> (Jompus(x) | Imperator(x) | Grimpus(x)))", "all x.(Rex(x) -> (Jimpus(x) | Impossible(x) | Grimpus(x)))", "all x.(Rex(x) -> (Jompus(x) | Impossible(x) | Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & (Impossible(x) & Grimpus(x)))", "all x.(Rex(x) -> (Jompus(x) | Issue(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1330", "nl": "Everything that is a tumpus, a lempus, or a wumpus is a yumpus and a vumpus and a gorpus.", "fol": "all x. ((tumpus(x) | lempus(x) | wumpus(x)) -> (yumpus(x) & vumpus(x) & gorpus(x)))", "prediction": ["all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "all x y.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(y) & Vumpus(y) & Gorpus(y)))", "all x.(((Tumpus(x) | Lempus(x) | Wumpus(x))) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "all x.(Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "(all x.((Tumpus(x) | Lempus(x) | Wumpus(x))) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "(all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "all x y.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(y) & Vumpus(y) & Gorpus(y)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "(all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & -Vumpus(x) & -Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Voompus(x) & Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) | Vumpus(x) | Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (yumpus(y) & vumpus(y) & gorpus(y)))"]}
{"id": "prontoqa_train_1331", "nl": "Wren is a wumpus.", "fol": "wumpus(Wren)", "prediction": ["all x.(Wren(x) -> Wumpus(x))", "(Wren(Wren) & Wumpus(Wren))", "(Wren(w) & Wumpus(w))", "all x.(Wren(x) -> Wumpus(x))", "(Wren(Wren) & Wumpus(Wren))", "all x y.(Wren(x) -> (Wumpus(y) & -Wumpus(y)))", "all x.(Wren(x) -> Wumpus(x))", "(Wren(w) & Wumpus(w))", "(Wren(Wren) & Wumpus(Wren))", "all x.(Wren(x) -> Wumpus(x))", "all x.(Wren(x) -> Wumpus(x))", "All x.(Wren(x) -> Wumpus(x))", "all x.(Wren(x) -> Wampus(x))", "all x.(Wren(x) -> Wumpus(x))", "All x.(Wren(x) -> Wumpus(x))", "all x.(Wren(x) -> Wampus(x))"]}
{"id": "prontoqa_train_1332", "nl": "Each dumpus is a gorpus, a lorpus, and an impus.", "fol": "all x. (dumpus(x) -> (gorpus(x) & lorpus(x) & impus(x)))", "prediction": ["all x.(Dumpus(x) -> (Gorpus(x) & Lorpus(x) & Imperator(x)))", "(all x.(Dumpus(x) -> Gorpus(x)) & all y.(Dumpus(y) -> Lorpus(y)) & all z.(Dumpus(z) -> Issue(z))))", "all x.(Dumpus(x) -> (Gorpus(x) | Lorpus(x) | Imperator(x)))", "(all x.(Dumpus(x) -> Gorpus(x)) & all y.(Lorpus(y) & -Dumpus(y))) & all z.(Dumpus(z) -> Issue(z)))", "(all x.(Dumpus(x) -> Gorpus(x)) & all y.(Dumpus(y) -> Lorpus(y)) & all z.(Dumpus(z) -> Issue(z))))", "all x.(Dumps(x) -> (Gorpus(x) & Lorpus(x) & Imperator(x)))", "all x y z.(Dumpus(x) -> (Gorpus(y) | Lorpus(y) | Imperator(z)))", "all x y.((Dumpus(x) & Gorpus(y) & Lorpus(y)) -> Is(x,y))", "all x.(Dumpus(x) -> (Gorpus(x) & Lorpus(x) & Impermissible(x)))", "all x.(Dumps(x) -> (Gorpus(x) | Lorpus(x) | Imperator(x)))", "all x.(Dumpus(x) -> (Gorpus(x) | Lorpus(x) | Imperator(x)))", "(all x.(Dumpus(x) -> Gorpus(x)) & all y.(Dumpus(y) -> Lorpus(y)) & all z.(Dumpus(z) -> Issue(z))))", "exists x.(Dumps(x) & Gorpus(x) & Lorpus(x) & Issue(x))", "exists x.(Dupus(x) & Gorpus(x) & Lops(x) & Issue(x))", "all x.(Dumpus(x) -> (Gorpus(x) | Lorpus(x) | Impossible(x)))", "exists x.(Dumpus(x) & Gorpus(x) & Lorpus(x) & Impermissible(x))"]}
{"id": "prontoqa_train_1333", "nl": "Wren is a gorpus, a sterpus, or an impus.", "fol": "(gorpus(Wren) | sterpus(Wren) | impus(Wren))", "prediction": ["all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Imperator(x)))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Imperator(x)))", "(Gorpus,Sterpus,Issue) & -Issue(Wren))", "(Gorpus,Sterpus,Issue) | Issue(Wren))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Imperator(x)))", "all x y.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Imperator(y)))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Issue(x)))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Imperator(x)))", "all x y.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Imperator(y)))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Impermissible(x)))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Impossible(x)))", "exists x.(Wren(x) & ((Gorpus(x) | Sterpus(x)) | Imperator(x)))", "all x.(Wren(x) -> (Gorpus(x) | Sterepus(x) | Issue(x)))", "exists x.(Wren(x) & ((Gorpus(x) | Sterpus(x)) | Issue(x)))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Impossible(x)))", "exists x.(Wren(x) & (Gorpus(x) | Sterpus(x) | Impeccable(x)))"]}
{"id": "prontoqa_train_1334", "nl": "Everything that is a gorpus and a shumpus and a tumpus is a yumpus, a jompus, and a dumpus.", "fol": "all x. ((gorpus(x) & shumpus(x) & tumpus(x)) -> (yumpus(x) & jompus(x) & dumpus(x)))", "prediction": ["all x.((Gorpus(x) & Humpus(x) & Tumpus(x)) -> (Yumpus(x) & Jompus(x) & Dumpus(x)))", "all x y.((Gorpus(x) & Shumpus(y) & Tumpus(y)) -> (Yumpus(x) & Jompus(x) & Dumpus(x)))", "all x.((Gorpus(x) & Humpus(x) & Tumpus(x)) -> (Yumpus(x) | Jompus(x) | Dumpus(x)))", "all x y z.((Gorpus(x) & Shumpus(y) & Tumpus(z) & Gorpus(x) & Shumpus(y) & Tumpus(z)) -> (Yumpus(x) & Jompus(x) & Dumpus(x)))", "all x.((Gorpus(x) & Shumpus(x) & Tumpus(x)) -> (Yumpus(x) & Jompus(x) & Dumpus(x)))", "all x y.((Gorpus(x) & Humpus(y) & Tumpus(y)) -> (Yumpus(x) & Jompus(x) & Dumpus(x)))", "(all x.((Gorpus(x) & Shumpus(x) & Tumpus(x)) -> (Yumpus(x) | Jompus(x) | Dumpus(x)))", "all x.((Gorpus(x) | Humpus(x) | Tumpus(x)) -> (Yumpus(x) & Jompus(x) & Dumpus(x)))", "all x.((Gorpus(x) & Humpus(x) & Tumpus(x)) -> (Yumpus(x) & Jompus(x) & Dumpus(x)))", "all x.(Gorpus(x) & Humpus(x) & Tumpus(x)) -> (Yumpus(x) & Jompus(x) & Dumpus(x)))", "all x.((Gorpus(x) | Humpus(x) | Tumpus(x)) -> (Yumpus(x) | Jompus(x) | Dumpus(x)))", "(all x.(Gorpus(x) -> (Shumpus(x) & Tumpus(x))) & all y.(Jompus(y) & all z.(Dumpus(z) & Yumpus(y))))", "all x y.((Gorpus(x) & Shumpus(y) & Tumpus(y)) -> (Yumpus(x) | Jompus(x) | Dumpus(x)))", "all x.((Gorpus(x) & Shumpus(x) & Tumpus(x)) -> (Yumpus(x) | Jompus(x) | Dumpus(x)))", "(all x.((Gorpus(x) & Humpus(x) & Tumpus(x)) -> (Yumpus(x) | Jompus(x) | Dumpus(x)))", "all x.((Gorpus(x) & Humpus(x) & Tumpus(x)) -> (Yumpus(x) | Jompus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_1335", "nl": "Sam is a tumpus.", "fol": "tumpus(Sam)", "prediction": ["all x.(Tumpus(x) -> Sam(x))", "all x.(Sam(x) -> Tumpus(x))", "all x.(Tumpus(x) -> Sam(x))", "Sam is tumpus.", "Sam is a tumpus.", "(Tumpus(Sam) & HasTump(Sam))", "all x.(Sam(x) -> Tumpus(x))", "(Tumpus(Sam) & HasTums.", "(Tumpus(Sam) & HasTump(Sam,Sam))", "all x.(Tumpus(x) -> Sam(x))", "Sam is a tumpus.", "(Tumpus(Sam) & Tumpus(Sam))", "(Tumpus(sam) -> Tumpus(sam,sam))", "all x.(Tumpus(x) -> Sam(x))", "all x.(Tumpus(x) -> Sam(x))", "all x.(Tumpus(x) -> Sam(x))"]}
{"id": "prontoqa_train_1336", "nl": "Everything that is a yumpus, a gorpus, or a tumpus is a dumpus.", "fol": "all x. ((yumpus(x) | gorpus(x) | tumpus(x)) -> dumpus(x))", "prediction": ["all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x y.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(y))", "all x.(((Yumpus(x) | Gorpus(x) | Tumpus(x))) -> Dumpus(x))", "(all x.((Yumpus(x) | Gorpus(x) | Tumpus(x))) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "(all x.((Yumpus(x) | Gorpus(x) | Tumpus(x))) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.(Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))"]}
{"id": "prontoqa_train_1337", "nl": "Fae is a lempus and Fae is a rompus and Fae is not a dumpus.", "fol": "(lempus(Fae) & rompus(Fae) & -dumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Rompus(x)) & (Fae(x) -> -Dumpus(x)))", "all x y z.((Fae(x) & Lempus(x) & Rompus(y) & -Dumpus(z)) -> (Lempus(x) & Rompus(y) & -Dumpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Rompus(y)) & all z.(Fae(z) -> -Dumpus(z))))", "all x y.((Fae(x) & Lempus(x) & Rompus(y)) -> (Rompus(x) & -Dumpus(x)))", "all x y z.((Fae(x) & Lempus(x) & Rompus(y) & Dumpus(z)) -> (Lempus(x) & Rompus(y) & -Dumpus(z)))", "(all x y z.((Fae(x) & Lempus(x)) -> (Rompus(y) & Lempus(z))) & ((Fae(x) & Dumpus(z)) -> -Dumpus(x)))", "(all x y.(Fae(x) -> Lempus(x)) & (Fae(y) -> Rompus(y)) & (Fae(y) -> -Dumpus(y)))", "all x.(Fae(x) -> (Lempus(x) & Rompus(x) & -Dumpus(x)))", "exists x.(Fae(x) & Lempus(x) & Rompus(x) & -Dumpus(x))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Rompus(x)) & (Fae(x) -> -Dumpus(x)))", "all x y z.((Fae(x) & Lempus(x) & Rompus(y) & -Dumpus(z)) -> (Lempus(x) & Rompus(y) & -Dumpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Rompus(y)) & all z.(Fae(z) -> -Dumpus(z))))", "all x y.((Fae(x) & Lempus(x) & Rompus(y)) -> (Rompus(x) & -Dumpus(x)))", "(all x y.(Fae(x) -> Lempus(x)) & (Fae(y) -> Rompus(y)) & (Fae(y) -> -Dumpus(y)))", "all x.(Fae(x) -> (Lempus(x) & Rompus(x) & -Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Rompus(x)) & (Fae(x) -> -Dumpus(x)))"]}
{"id": "prontoqa_train_1338", "nl": "Every gorpus is a zumpus, a lempus, and a rompus.", "fol": "all x. (gorpus(x) -> (zumpus(x) & lempus(x) & rompus(x)))", "prediction": ["all x.(Gorpus(x) -> (Tompus(x) | Lempus(x) | Rompus(x)))", "(all x.(Gorpus(x) -> Zumpus(x)) & all y.(Lempus(y) & -Rompus(y)))", "all x.(Gorpus(x) -> (Tompus(x) | Lempus(x) | Rompus(x)))", "all x y z.((Gorpus(x) & Zumpus(y) & Lempus(z)) -> (Tompus(x) | Rompus(x)))", "all x.(Gorpus(x) -> (Tompus(x) & Lempus(x) & Rompus(x)))", "(all x.(Gorpus(x) -> Zumpus(x)) & all y.(Lempus(y) & All z.(Rompus(z)) -> Toss(x)))", "all x y z.((Gorpus(x) & Zumpus(y) & Lempus(z) & Rompus(x)) -> (Tompus(x) | Lempus(z) | Rompus(z)))", "all x.(Gorpus(x) -> (Zumpus(x) | Lempus(x) | Rompus(x)))", "(all x.(Gorpus(x) -> Zumpus(x)) & all y.(Lempus(y) & All z.(Rompus(z) & -Tompus(z))) -> Lempus(y)))", "(all x.(Gorpus(x) -> Zumpus(x)) & all y.(Lempus(y) & -Rompus(y)))", "all x.(Gorpus(x) -> (Tompus(x) & Lempus(x) & Rompus(x)))", "all x.(Gorpus(x) -> (Tompus(x) | Lempus(x) | Rompus(x)))", "exists x.(Gorpus(x) & Zumpus(x) & Lempus(x) & Rompus(x))", "all x.(Gorpus(x) -> (Zumpus(x) | Lempus(x) | Rompus(x)))", "exists x.(Gorpus(x) & Zumpus(x) & Lempus(x) & Rompus(x))", "all x.(Gorpus(x) -> (Tompus(x) | Lempus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1339", "nl": "Rex is a gorpus.", "fol": "gorpus(Rex)", "prediction": ["all x.(Rex(x) -> Gorpus(x))", "Rex is Gorpus.", "all x.(Rex(x) -> Gorpus(x))", "Rex is Gorpus.", "(Gorpus(Rex) & HasGorps(Rex))", "all x.(Rex(x) -> Gorpus(x))", "Rex.(Gorpus(Rex))", "Rex is Gorpus(x)", "all x.(Rex(x) -> Gorpus(x))", "Rex (Gorpus)", "(Gorpus(rex) & HasGorpa(rex))", "All x.(Rex(x) -> Gorpus(x))", "(Gorpus)", "all x.(Rex(x) -> Gorpus(x))", "All x.(Rex(x) -> Gorpus(x))", "all x.(Rex(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_1340", "nl": "Rex is a jompus or a shumpus or a rompus.", "fol": "(jompus(Rex) | shumpus(Rex) | rompus(Rex))", "prediction": ["all x.(Rex(x) -> (Jompus(x) | Humpus(x) | Rompus(x)))", "(Jompus(Rex) | Humpus(Rex) | Rompus(Rex)))", "all x.(Rex(x) -> (Jompus(x) | Shumpus(x) | Rompus(x)))", "(Jompus(Rex) | Humpus(Rex) | Rompus(Rex)))", "(Jompus(rex) | Shumpus(rex) | Rompus(rex)))", "(all x.(Rex(x) -> Jompus(x)) | (Shumpus(x) | Rompus(x))))", "all x.(Rex(x) -> (Jompus(x) | Humpus(x) | Rompus(x)))", "all x.(Rex(x) -> (Jimpus(x) | Humpus(x) | Rompus(x)))", "(Jimpus) | Humpus(Shumpus) | Rompus(Sampus))", "all x y.(Rex(x) -> (Jompus(x) | Shumpus(x) | Rompus(y)))", "all x.(Rex(x) -> (Jompus(x) | Shumpus(x) | Rompus(x)))", "exists x.(Rompus(x) & (Jompus(x) | Humpus(x) | Rompus(x)))", "all x.(Rex(x) -> (Jompus(x) | Humpus(x) | Rompus(x)))", "all x.(Rex(x) -> (Jimpus(x) | Humpus(x) | Rompus(x)))", "all x.(Rex(x) -> (Jompus(x) | Humpus(x) | Rompus(x)))", "all x.(Rex(x) -> (Jumpus(x) | Humpus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1341", "nl": "Everything that is a zumpus or a brimpus or a rompus is a wumpus, a numpus, and a sterpus.", "fol": "all x. ((zumpus(x) | brimpus(x) | rompus(x)) -> (wumpus(x) & numpus(x) & sterpus(x)))", "prediction": ["all x.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) & Numpus(x) & Sterpus(x)))", "all x y.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(y) & Numpus(y) & Sterpus(y)))", "all x.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) & Numpus(x) & Sterpus(x)))", "all x.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) | Numpus(x) | Sterpus(x)))", "all x y.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(y) & Numpus(y) & Sterpus(y)))", "(all x.((Tompus(x) | Brimpus(x) | Rompus(x))) -> (Wumpus(x) | Numpus(x) | Sterpus(x)))", "all x.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) & Numpus(x) & Sterpus(x)))", "(all x.((Tompus(x) | Brimpus(x) | Rompus(x))) -> (Wumpus(x) | Numpus(x) | Sterpus(x)))", "all x.((Zumpus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) | Numpus(x) | Sterpus(x)))", "all x y.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(y) & Numpus(y) & Sterpus(y)))", "all x.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) & Numpus(x) & Sterpus(x)))", "all x.((Zumpus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) | Numpus(x) | Sterpus(x)))", "all x.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) & Numpus(x) & Steroid(x)))", "all x.((Zumpus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) | Numpus(x) | Sterpus(x)))", "all x.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) & Numpus(x) & Sterpus(x)))", "all x.((Zumpus(x) | Brimpus(x) | Romanus(x)) -> (Wumpus(x) | Numpus(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1342", "nl": "Sterpuses are tumpuses and jompuses and brimpuses.", "fol": "all x. (sterpus(x) -> (tumpus(x) & jompus(x) & brimpus(x)))", "prediction": ["all x.(Sterpus(x) -> (Tumpus(x) & Jompuse(x) & Brimpuse(x)))", "all x y.((Sterpuse(x) & Tumpus(y)) -> (Tumpus(x) & Jompuse(x) & Brimpuse(x)))", "all x.(Sterpuse(x) -> (Tumpus(x) & Jompuse(x) & Brimpuse(x)))", "(all x.(Sterpuse(x) -> Tumpus(x)) & (Jompuse(x) | Brimpuse(x))))", "all x.(Sterpuse(x) -> (Tumpus(x) & Jompuse(x) & Brimpuse(x)))", "all x.(Sterpus(x) -> (Tumpus(x) & Jompuse(x) & Brimpus(x)))", "(all x.(Sterpuse(x) -> Tumpus(x)) & all y.(Jompuse(y) | Brimpus(y))))", "all x y z.((Sterpuse(x) & Tumpus(y) & Jompuse(z)) -> (Tumpus(x) | Brimpuse(z)))", "all x y.((Sterpuse(x) & Tumpus(y)) -> (Tumpus(x) | Jompuse(x) | Brimpuse(x)))", "all x.(Sterpus(x) -> (Tumpus(x) | Jompuse(x) | Brimpuse(x)))", "(all x.(Sterpuse(x) -> Tumpus(x)) & (Jompuse(x) | Brimpus(x))))", "all x.(Sterpuse(x) -> (Tumpus(x) & Jompuse(x) & Brimpus(x)))", "(all x.(Sterpuse(x) -> Tumpus(x)) & (Jompuse(x) | Brimpus(x))))", "(all x.(Sterpuse(x) -> Tumpus(x)) & all y.(Jompuse(y) | Brimpuse(y))))", "all x.(Stumpus(x) -> (Tumpus(x) & Jompuse(x) & Brimpus(x)))", "all x.(Strerpus(x) -> (Tumpus(x) | Jompuse(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_1343", "nl": "Stella is a sterpus.", "fol": "sterpus(Stella)", "prediction": ["all x.(Stella(x) -> Sterpus(x))", "Stella is a Sterpus.", "Stella is sterpus.", "(Stella) -> Sterpus(Stella))", "(Stella,Sterpus)", "all x.(Stella(x) -> Sterpus(x))", "Stella is a sterpus.", "Stella is Sterpus.", "(Sterepus(Stella) & Sterpus(Stella))", "all x.(Stella(x) -> Sterpus(x))", "(Stella,sterpus)", "Stella (Sterpus)", "Stella is sterpus.", "all x.(Stella(x) -> Sterepus(x))", "Stella (Sterpus)", "Stella is Sterpus."]}
{"id": "prontoqa_train_1344", "nl": "Stella is a vumpus or a zumpus or a tumpus.", "fol": "(vumpus(Stella) | zumpus(Stella) | tumpus(Stella))", "prediction": ["all x.(Stella(x) -> (Vumpus(x) | Zumpus(x) | Tumpus(x)))", "(Vumpus(Stella) | Zumpus(Stella) | Tumpus(Stella)))", "all x y.((Stella(x) & Vumpus(y)) | (Tompus(y) | Tumpus(y))))", "all x.(Stella(x) -> (Vumpus(x) | Zumpus(x) | Tumpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Zumpus(x) | Tumpus(x)))", "(Vumpus(Stella) | Zumpus(Stella) | Tumpus(Stella)))", "(Vumpus(Stella) | Zumpus(Stella) | Tumpus(Stella)))", "(Vumpus,Tompus,Tumpus)", "exists x.(Vumpus(x) | Zumpus(x) | Tumpus(x))", "all x.(Stella(x) -> (Vimpus(x) | Zumpus(x) | Tumpus(x)))", "(Vumpus(Stella) | Zumpus(Stella) | Tumpus(Stella)))", "exists x.(Vumpus(x) | Zumpus(x) | Tumpus(x))", "all x.(Stella(x) -> (Vumpus(x) | Zumpus(x) | Tumpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Zumpus(x) | Tumpus(x)))", "exists x.(Vumpus(x) | Zumpus(x) | Tumpus(x))", "all x.(Stella(x) -> (Vimpus(x) | Zumpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1345", "nl": "Everything that is a grimpus, a gorpus, and a yumpus is a zumpus, a numpus, and a rompus.", "fol": "all x. ((grimpus(x) & gorpus(x) & yumpus(x)) -> (zumpus(x) & numpus(x) & rompus(x)))", "prediction": ["all x.((Smokey(x) | Gorpus(x) | Yumpus(x)) -> (Tompus(x) | Numpus(x) | Rompus(x)))", "all x.((Smoothpus(x) | Gorpus(x) | Yumpus(x)) -> (Tompus(x) | Numpus(x) | Rompus(x)))", "all x y z.((Smoothpus(x) & Gorpus(y) & Yumpus(z) & Grimpus(x) & Gorpus(y) & Yampus(z)) -> (Tompus(x) & Numpus(x) & Rompus(x)))", "all x y.((Smokey(x) & Gorpus(x) & Yumpus(y)) -> (Tompus(x) | Numpus(x) | Rompus(x)))", "all x.((Gruppus(x) | Gorpus(x) | Yumpus(x)) -> (Tompus(x) & Numpus(x) & Rompus(x)))", "all x.((Frostpus(x) | Gorpus(x) | Yumpus(x)) -> (Tompus(x) & Numpus(x) & Rompus(x)))", "all x y.((Smoothpus(x) & Gorpus(x) & Yumpus(y)) -> (Tompus(x) & Numpus(x) & Rompus(x)))", "all x.((Rumpus(x) | Gorpus(x) | Yumpus(x)) -> (Tompus(x) | Numpus(x) | Rompus(x)))", "all x.((Smokey(x) & Gorpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Rompus(x)))", "(all x.((Smompus(x) | Gorpus(x) | Yumpus(x))) -> (Tompus(x) & Numpus(x) & Rompus(x)))", "all x.((Gruppus(x) | Gorpus(x) | Yumpus(x)) -> (Tompus(x) & Numpus(x) & Rompus(x)))", "all x.((Grimpus(x) | Gorpus(x) | Yampus(x)) -> (Tompus(x) & Numpus(x) & Rompus(x)))", "all x.(Smokey(x) & Grimpus(x) & Gorpus(x) & Yumpus(x)) -> (Tompus(x) & Numpus(x) & Rompus(x)))", "all x.((Fragpus(x) | Gorpus(x) | Yumpus(x)) -> (Tompus(x) | Numpus(x) | Rompus(x)))", "(all x.((Grimpus(x) | Gorpus(x) | Yumpus(x))) -> (Tompus(x) & Numpus(x) & Rompus(x)))", "(all x.((Grimpus(x) | Gorpus(x) | Yampus(x))) -> (Tompus(x) & Numpus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_1346", "nl": "Wren is a grimpus.", "fol": "grimpus(Wren)", "prediction": ["all x.(Wren(x) -> Grimpus(x))", "all x.(Wren(x) -> Grimpus(x))", "(Grimpus(Wren))", "(Grimpus(wren) & Grimpus(wren))", "(Gruffus(Wren) & Grimpus(Wren))", "all x.(Wren(x) -> Grimpus(x))", "all x.(Wren(x) -> Grappa(x))", "(Grimpus(wren) & Gruffus(wren))", "all x.(Wren(x) -> Grimpus(x))", "(Grimpus)", "all x.(Wren(x) -> Gruppus(x))", "(Grampus)", "all x.(Wren(x) -> Grimpus(x))", "All x.(Wren(x) -> Grimpus(x))", "All x.(Wren(x) -> Gruffus(x))", "all x.(Wren(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_1347", "nl": "Every wumpus is not a brimpus.", "fol": "all x. (wumpus(x) -> -brimpus(x))", "prediction": ["all x.(Wumpus(x) -> -Brimpus(x))", "all x.(Wumpus(x) -> -Brimpus(x))", "-Brimpus(wumpus)", "(all x.(Wumpus(x) -> -Brimpus(x)))", "all x.(Wumpus(x) -> -Brimpus(x))", "all x y.((Wumpus(x) & Brimpus(y)) -> -Brimpus(x))", "(all x.(Wumpus(x) -> -Brimpus(x)))", "all x.(Wumpus(x) -> -Brumpus(x))", "all x.(Wumpus(x) -> -Brimpus(x))", "all x.(Wumpus(x) -> -Brumpus(x))", "all x.(Wumpus(x) -> -Brimpus(x))", "all x.(Wumpus(x) -> -Brimpus(x))", "all x.(Wumpus(x) -> -Brumpus(x))", "all x.(Wumpus(x) -> -Brimpus(x))", "all x.(Wumpus(x) -> -Brumpus(x))", "exists x.(Wumpus(x) & -Brampus(x))"]}
{"id": "prontoqa_train_1348", "nl": "Fae is a numpus, Fae is not a yumpus, or Fae is a shumpus.", "fol": "(numpus(Fae) | -yumpus(Fae) | shumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Numpus(x)) | (-Yumpus(x) | Humpus(x))))", "all x y.((Fae(x) & -Yumpus(y)) | (Fae(x) & Humpus(x))))", "all x y z.((Fae(x) & Numpus(x) & Fae(y) & -Yumpus(y)) | (Fae(z) & Humpus(z))))", "all x.((Fae(x) & (Numpus(x) | -Yumpus(x) | Humpus(x))) -> Numpus(x))", "(exists x.(Fae(x) & Numpus(x)) | exists y.(Fae(y) & -Yumpus(y))) | exists z.(Fae(z) & Humpus(z))))", "all x.(Fae(x) -> (Numpus(x) | -Yumpus(x) | Humpus(x)))", "(all x.(Fae(x) -> Numpus(x)) & (-Yumpus(x) | Humpus(x))))", "(all x y.(Fae(x) -> Numpus(x)) | (-Fae(y) & Yumpus(y)) | (-Fae(x) & Humpus(y))))", "all x y.((Fae(x) & (Numpus(x) | -Yumpus(x) | Humpus(y))) -> (Fae(x) & -Yumpus(x)))", "all x y z.((Fae(x) & (Numpus(y) | Yumpus(z) | Humpus(z))) -> (Numpus(x) | -Yumpus(y) | -Shumpus(z))))", "(all x.(Fae(x) -> Numpus(x)) | (-Fae(x) & Yumpus(x)) | (-Fae(x) & Humpus(x))))", "(all x.(Fae(x) -> Numpus(x)) & (-Yumpus(x) | Humpus(x))))", "all x.(Fae(x) -> (Numpus(x) | -Yumpus(x) | Humpus(x)))", "exists x.(Fae(x) & ((Numpus(x) & -Yumpus(x)) | Humpus(x))))", "(all x.(Fae(x) -> Numpus(x)) | (-Fae(x) & Yumpus(x)) | (-Fae(x) & Humpus(x))))", "exists x.(Fae(x) & ((Numpus(x) & -Yumpus(x)) | Humpus(x))))"]}
{"id": "prontoqa_train_1349", "nl": "Everything that is a grimpus or a yumpus or a tumpus is an impus.", "fol": "all x. ((grimpus(x) | yumpus(x) | tumpus(x)) -> impus(x))", "prediction": ["all x.((Smopus(x) | Yumpus(x) | Tumpus(x)) -> Impermissible(x))", "all x.((Smompus(x) | Yumpus(x) | Tumpus(x)) -> Impermissible(x))", "all x.((Grimpus(x) | Yumpus(x) | Tumpus(x)) -> Impermissible(x))", "all x.((Smoothpus(x) | Yumpus(x) | Tumpus(x)) -> Imperative(x))", "all x y.((Smompus(x) | Yumpus(x) | Tumpus(x)) -> Imperative(x))", "(all x.((Smompus(x) | Yumpus(x) | Tumpus(x))) -> Impermissible(x))", "all x y.((Smoking(x) | Yumpus(x) | Tumpus(x)) -> Imperative(x))", "all x.((Grimpus(x) | Yumpus(x) | Tumpus(x)) -> Imperative(x))", "all x.((Smoky(x) | Yumpus(x) | Tumpus(x)) -> Imperator(x))", "all x.((Gruppus(x) | Yampus(x) | Tumpus(x)) -> Impossible(x))", "all x.((Grampus(x) | Yumpus(x) | Tumpus(x)) -> Imperator(x))", "all x.((Crupid(x) | Yumpus(x) | Tumpus(x)) -> IsImpossible(x))", "all x.((Fragus(x) | Yampus(x) | Tumpus(x)) -> Impossible(x))", "all x.(((Grimpus(x) | Yumpus(x) | Tumpus(x))) -> Impossible(x))", "all x.((Gruppus(x) | Yampus(x) | Tumpus(x)) -> IsNotRequired(x))", "all x.((Surprise(x) | Yumpus(x) | Tumpus(x)) -> Implicator(x))"]}
{"id": "prontoqa_train_1350", "nl": "Stella is a dumpus and Stella is not an impus and Stella is a lorpus.", "fol": "(dumpus(Stella) & -impus(Stella) & lorpus(Stella))", "prediction": ["(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Impossible(x)) & (Stella(x) -> Lorpus(x)))", "all x y z.((Stella(x) & Dumpus(x) & Stella(y) & -Impossible(y)) -> (Lorpus(z) & -Dumpus(y) & -Impossible(y)))", "(all x y.((Stella(x) & Dumpus(x)) -> (Dumpus(x) & -Impossible(y))) & ((Stella(x) & Lorpus(y)) -> (Lorpus(x))))", "all x y.((Stella(x) & Dumpus(x) & Stella(y)) -> (-Impossible(y) & Lorpus(y)))", "all x.(Stella(x) -> (Dumpus(x) & -Impossible(x) & Lorpus(x)))", "all x y z.((Stella(x) & Dumpus(x) & Stella(y) & Lorpus(z)) -> (-Impossible(y) & -Impossible(y) & -Impossible(y) & -Impossible(y)))", "(all x y.((Stella(x) & Dumpus(x)) -> -Impossible(y)) & ((Stella(x) & Lorpus(y)) -> -Impossible(x)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Impossible(x)) & (Stella(x) -> Lorpus(x)))", "(all x y z.((Stella(x) & Dumpus(x)) -> (Dumpus(x) & -Impossible(y)) & ((Stella(z) & Lorpus(z)) -> (Lorpus(z)))))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> -Impossible(y))) & all z.(Stella(z) -> Lorpus(z)))", "exists x.(Stella(x) & Dumpus(x) & -Impossible(x) & Lorpus(x))", "all x y.((Stella(x) & Dumpus(x)) -> (-Impossible(x) & Lorpus(y)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Impossible(x)) & (Stella(x) -> Lorpus(x)))", "all x.(Stella(x) -> (Dumpus(x) & -Impossible(x) & Lorpus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> -Impossible(y))) & all z.(Stella(z) -> Lorpus(z)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Issue(x)) & (Stella(x) -> Lorpus(x)))"]}
{"id": "prontoqa_train_1351", "nl": "Gorpuses are lorpuses and jompuses and brimpuses.", "fol": "all x. (gorpus(x) -> (lorpus(x) & jompus(x) & brimpus(x)))", "prediction": ["all x.(Gorpus(x) -> (Lorpus(x) & Jompuse(x) & Brimpuse(x)))", "all x.(Gorpuse(x) -> (Lorpus(x) & Jompuse(x) & Brimpuse(x)))", "all x y.((Gorpuse(x) & Lorpus(y)) -> (Lorpus(x) & Jompuse(x) & Brimpuse(x)))", "(all x.(Gorpuse(x) -> Llorpuse(x)) & all y.(Jompuse(y) | Brimpus(y))))", "all x y z.((Gorpuse(x) & Lorpus(y) & Jompuse(z)) -> (Lorpus(x) | Brimpuse(z)))", "all x.(Gorpus(x) -> (Lorpus(x) & Jompuse(x) & Brimpus(x)))", "(all x.(Gorpuse(x) -> Lorpuse(x)) & (Jompuse(x) | Brimpuse(x))))", "all x.(Gorpuse(x) -> (Lorpus(x) & Jompuse(x) & Brimpus(x)))", "all x.(Gorpus(x) -> (Lorpus(x) | Jompuse(x) | Brimpuse(x)))", "(all x.(Gorpuse(x) -> Loomise(x)) & all y.(Jompuse(y) | Brimpuse(y))))", "(all x.(Gorpuse(x) -> Lorpuse(x)) & all y.(Jompuse(y) | Brimpuse(y))))", "all x y.((Gorpuse(x) & Lorpus(y)) -> (Lorpus(x) & Jompuse(x) & Brimpus(x)))", "(all x.(Gorpuse(x) -> Lopase(x)) & all y.(Jompuse(y) | Brimpuse(y))))", "all x.(Gorpuse(x) -> (Lorpus(x) | Jompuse(x) | Brimpuse(x)))", "all x.(Gorpus(x) -> (Lorpus(x) & Jompuse(x) & Brimpuse(x)))", "all x.(Gorpuse(x) -> (Lorpuse(x) | Jompuse(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_1352", "nl": "Polly is a gorpus.", "fol": "gorpus(Polly)", "prediction": ["all x.(Polly(x) -> Gorpus(x))", "all x.(Polly(x) -> Gorpus(x))", "Polly is Gorpus.", "Polly is a Gorpus.", "all x.(Gorpus(x) -> Polly(x))", "(Gorpus(Polly) & HasGorpa(Polly))", "all x.(Polly(x) -> Gorpus(x))", "Polly is Gorpus(Polly)", "all x.(Gorpus(x) -> Polly(x))", "all x.((Polly(x) & Gorpus(x)) -> Gorpus(x))", "(Gorpus(Polly) & HasGorpus(Polly))", "(Gorpus(Poly) & Gorpus(Poly))", "Polly is a Gorpus.", "all x.(Gorpus(x) -> Polly(x))", "All x.(Polly(x) -> Gorpus(x))", "(Gorpus(Polly))"]}
{"id": "prontoqa_train_1353", "nl": "Polly is a dumpus or a tumpus or a jompus.", "fol": "(dumpus(Polly) | tumpus(Polly) | jompus(Polly))", "prediction": ["all x.(Polly(x) -> (Dumpus(x) | Tumpus(x) | Jompus(x)))", "all x.(Polly(x) -> (Dumpus(x) | Tumpus(x) | Jompus(x)))", "all x.(Polly(x) -> (Dumpus(x) | Tumpus(x) | Jompus(x)))", "(Dumpus(poly) | Tumpus(poly) | Jompus(poly)))", "((Polly(poly) & Dumpus(poly)) | (Tumpus(poly) | Jompus(poly))))", "((Polly) | (Dumpus(Polly) | Tumpus(Poly))) | Jompus(Poly)))", "all x y.((Polly(x) & Dumpus(x)) | (Tumpus(x) | Jompus(x))))", "((Polly) | Dumpus(Polly)) | Tumpus(Poly)) | Jompus(Poly))", "(Dumpus,Tumpus,Jompus)", "all x.(Polly(x) -> (Dumpus(x) | Tumpus(x) | Jompus(x)))", "all x.(Polly(x) -> (Dumpus(x) | Tumpus(x) | Jompus(x)))", "all x.(Polly(x) -> (Dumpus(x) | Tumpus(x) | Jompus(x)))", "exists x.(Polly(x) & ((Dumpus(x) | Tumpus(x) | Jompus(x))))", "all x.(Polly(x) -> (Dumpus(x) | Tumpus(x) | Jompus(x)))", "exists x.(Polly(x) & (Dumpus(x) | Tumpus(x) | Jompus(x)))", "all x.(Polly(x) -> (Dumpus(x) | Tumpus(x) | Jompus(x)))"]}
{"id": "prontoqa_train_1354", "nl": "Zumpuses are dumpuses, wumpuses, and impuses.", "fol": "all x. (zumpus(x) -> (dumpus(x) & wumpus(x) & impus(x)))", "prediction": ["all x.(Zumpus(x) -> (Dumps(x) | Wumpus(x) | Impects(x)))", "all x.(Zumpus(x) -> (Dumpuse(x) | Wumpuse(x) | Impecte(x)))", "(all x.(Zumpuse(x) -> (Dumpuse(x) | Wumpuse(x) | Impermissible(x))))", "(all x.(Zumpus(x) -> Dumpuse(x)) & all y.(Wumpus(y) -> Impermissible(y)))", "all x y z.((Zumpuse(x) & Dumpuse(y) & Wumpuse(z)) -> (Issue(x,y) | Issue(x,z)))", "all x y.((Zumpuse(x) & Dumpuse(y)) | Wumpuse(y) | Impermissible(y))", "(all x.(Zumpuse(x) -> Dumpuse(x)) & all y.(Wumpuse(y) -> Impermissible(y)))", "(Dumpuses(z) | Wumpuses(z) | Impects(z)))", "all x.(Zumpuse(x) -> (Dumpsuse(x) | Wumpuse(x) | Impecte(x)))", "all x.(Zumpus(x) -> (Dumps(x) | Wumpus(x) | Impermissible(x)))", "all x.(Zumpus(x) -> (Dumpuse(x) | Wumpus(x) | Impecte(x)))", "(all x.(Zumpuse(x) -> (Dumpsus(x) | Wumpus(x) | Issue(x)))", "(all x.(Zumpuse(x) -> Dumpuse(x)) & all y.(Wumpuse(y) -> Impecte(y)))", "all x.(Zumpuse(x) -> (Dumpuse(x) | Wumpuse(x) | Impermissible(x)))", "all x.(Zumpus(x) -> (Dumuse(x) | Wumpus(x) | Impermissible(x)))", "all x.(Zombie(x) -> (Dumpsus(x) | Wumpus(x) | Impermissible(x)))"]}
{"id": "prontoqa_train_1355", "nl": "Stella is not a wumpus, Stella is a tumpus, and Stella is a numpus.", "fol": "(-wumpus(Stella) & tumpus(Stella) & numpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Wumpus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Numpus(x)))", "all x y z.((Stella(x) & Wumpus(y) & Tumpus(z)) -> (-Wumpus(x) & Tumpus(y) & Numpus(z)))", "(all x.(Wumpus(x) -> -Wumpus(x)) & all y.(Tumpus(y) -> -Wumpus(y))) & all z.(Numpus(z) -> (Wumpus(z) & Numpus(z))))", "all x.(Stella(x) -> (-Wumpus(x) & Tumpus(x) & Numpus(x)))", "(all x y z.((Wumpus(x) & Stella(y) & Tumpus(z)) -> -Wumpus(x)) & ((Wumpus(y) & Tumpus(y)) -> Numpus(y)))", "(all x y z.((Stella(x) & Wumpus(y)) -> -Wumpus(x)) & ((Stella(z) & Tumpus(z))) -> Numpus(z)))", "(all x.(Stella(x) -> -Wumpus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Numpus(x)))", "exists x.(Wumpus(x) & -Wumpus(x) & Tumpus(x) & Numpus(x))", "(all x y z.((Wumpus(x) & Stella(y)) -> -Wumpus(x)) & ((Tumpus(y) & Stella(z))) -> Numpus(z)))", "all x y z.((Stella(x) & Wumpus(y) & Tumpus(z)) -> (-Wumpus(x) & Tumpus(x) & Numpus(x)))", "all x y z.(Wumpus(x) & Wumpus(y) & Tumpus(z) & Numpus(z))", "(all x.(Wumpus(x) -> -Wumpus(x)) & all y.(Tumpus(y) -> Numpus(y)))", "all x y z.((Wumpus(x) & Tumpus(y) & Numpus(z)) -> (-Wumpus(x) | (Tumpus(y) | Numpus(z)))))", "(all x.(Wumpus(x) -> -Wumpus(x)) & all y.(Tumpus(y) -> Tumpus(y)) & all z.(Numpus(z) -> Numpus(z))))", "all x y z.((Stella(x) & Wumpus(y) & Tumpus(z)) -> (-Wumpus(x) & Tumpus(x) & Numpus(x)))", "(all x.(Stella(x) -> -Wumpus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Numpus(x)))"]}
{"id": "prontoqa_train_1356", "nl": "Stella is not a zumpus.", "fol": "-zumpus(Stella)", "prediction": ["Stella is not a zumpus.", "all x.(Stella(x) -> -Zumpus(x))", "(-Zumpus(Stella))", "Stella - Zumpus(Stella))", "Stella is not a zumpus.", "(-Zumpus(Stella))", "all x.(Stella(x) -> -Zumpus(x))", "Stella is not zumpus.", "Stella -Zumpus(Stella))", "(-Zumpus(Stella))", "all x.(Stella(x) -> -Zumpus(x))", "-Zombie(Stella)", "Stella is not a zumpus.", "Stella ist kein Zumpus.", "Stella is not zumpus.", "(-Zumpus(Stella))"]}
{"id": "prontoqa_train_1357", "nl": "Everything that is a dumpus, an impus, and a vumpus is a shumpus, a lorpus, and a gorpus.", "fol": "all x. ((dumpus(x) & impus(x) & vumpus(x)) -> (shumpus(x) & lorpus(x) & gorpus(x)))", "prediction": ["all x.((Dumpus(x) | Imperempt(x) | Vumpus(x)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))", "all x.((Dumpus(x) & Imperempt(x) & Vumpus(x)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))", "all x.((Dumps(x) & Impeccable(x) & Vumpus(x)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))", "all x y z.((Dumpus(x) & Imperator(y) & Vumpus(z) & Is(x,y) & Is(x,z)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))", "(all x.((Dumpus(x) | Impossible(x)) & Vumpus(x)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))", "all x.((Dumpus(x) | Imperative(x) | Vumpus(x)) -> (Shumpus(x) | Lorpus(x) | Gorpus(x)))", "all x y.((Dumpus(x) & Imperator(y) & Vumpus(x)) -> (Shumpus(y) | Lorpus(y) | Gorpus(y)))", "all x.((Dumpus(x) & Imperative(x) & Vumpus(x)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))", "all x.((Dumpus(x) | Impossible(x) | Vumpus(x)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))", "all x.((Dumps(x) & Impossible(x) & Vumpus(x)) -> (Shumpus(x) | Lorpus(x) | Gorpus(x)))", "(all x.((Dumpus(x) | Impossible(x)) & Vumpus(x)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))", "all x.(DumpusImprovis(x) & Vumpus(x)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))", "(all x.((Dumpus(x) & Imperempt(x) & Vumpus(x)) -> (Shumpus(x) | Lorpus(x) | Gorpus(x)))", "(all x.((Dumpsus(x) | Impossible(x) | Vumpus(x)) -> (Shumpus(x) | Lorpus(x) | Gorpus(x)))", "all x.((Dupus(x) | Imperator(x) | Vumpus(x)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))", "all x.((Dumpus(x) & Imperempt(x) & Vumpus(x)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1358", "nl": "Every grimpus is an impus, a gorpus, and a vumpus.", "fol": "all x. (grimpus(x) -> (impus(x) & gorpus(x) & vumpus(x)))", "prediction": ["all x.(Grimpus(x) -> (Impossible(x) | Gorpus(x) | Vumpus(x)))", "(all x.(Grimpus(x) -> Impossible(x)) & all y.(Gorpus(y) & all z.(Vumpus(z) & -Impossible(y))) -> Vumpus(z)))", "all x.(Grimpus(x) -> (Impossible(x) & Gorpus(x) & Vumpus(x)))", "all x y z.((Grimpus(x) & Imperator(y) & Gorpus(z)) -> (Impossible(x) | Vumpus(z)))", "(all x.(Grimpus(x) -> Issue(x)) & all y.(Gorpus(y) & all z.(Vumpus(z) & -Issue(y))) -> Issue(y)))", "all x.(Sgrimpus(x) -> (Impossible(x) | Gorpus(x) | Vumpus(x)))", "all x.(Grimpus(x) -> (Issue(x) & IsGorpus(x) & IsVumpus(x)))", "all x.(Grimpus(x) -> (Impossible(x) | Gorpus(x) | Vumpus(x)))", "(all x.(Grimpus(x) -> Is(x,Is(x)) & all y.(Gorpus(y) & all z.(Vumpus(z)) -> Is(y,z))))", "(all x.(Grimpus(x) -> Impossible(x)) & all y.(Gorpus(y) & All z.(Vumpus(z)) -> Impeccable(y)))", "all x y.((Grimpus(x) & Imperator(y)) -> (Gorpus(x) & Vumpus(x)))", "exists x.(Grimpus(x) & Is(x,Imposs) & Is(x,Gorpus) & Is(x,Vumpus))", "exists x.(Sgrimpus(x) & Imperator(x) & Gorpus(x) & Vumpus(x))", "all x.(Grimpus(x) -> (Impossible(x) | Gorpus(x) | Vumpus(x)))", "all x.(Grimpus(x) -> (Issue(x) | Gorpus(x) | Vumpus(x)))", "exists x.(Grampus(x) & Impossible(x) & Gorpus(x) & Vumpus(x))"]}
{"id": "prontoqa_train_1359", "nl": "Fae is a yumpus and Fae is not a vumpus and Fae is a lempus.", "fol": "(yumpus(Fae) & -vumpus(Fae) & lempus(Fae))", "prediction": ["(all x.(Fae(x) -> Yumpus(x)) & (Fae(x) -> -Vumpus(x)) & (Fae(x) -> Lempus(x)))", "all x y z.((Fae(x) & Yampus(y) & Fae(z)) -> (-Vumpus(z) & Lempus(z)))", "(all x.(Fae(x) -> Yampus(x)) & (Fae(x) -> -Vumpus(x)) & (Fae(x) -> Lempus(x)))", "(all x y.(Fae(x) -> Yumpus(x)) & (Fae(y) -> -Vumpus(y)) & (Fae(y) -> Lempus(y)))", "(all x y z.((Fae(x) & Yumpus(y) & -Vumpus(z)) -> Yampus(x)) & ((Fae(x) & -Vumpus(x)) -> Lempus(x)))", "all x y z.((Fae(x) & Yumpus(x) & Fae(y) & Vumpus(z)) -> (Yumpus(x) & -Vumpus(y) & Lempus(z)))", "all x y.((Fae(x) & Fae(y)) -> (Yumpus(x) & -Vumpus(y) & Lempus(y)))", "(yumpus(Fae) & -Vumpus(Fae) & Lempus(Fae))", "all x.(Fae(x) -> (Yumpus(x) & -Vumpus(x) & Lempus(x)))", "exists x.(Fae(x) & Yumpus(x) & -Vumpus(x) & Lempus(x))", "(all x.(Fae(x) -> Yumpus(x)) & (Fae(x) -> -Vimpus(x)) & (Fae(x) -> Lempus(x)))", "(all x.(Fae(x) -> Yumpus(x)) & all y.(Fae(y) -> -Vumpus(y)) & all z.(Fae(z) -> Lempus(z))))", "all x y.((Fae(x) & Fae(y)) -> (Yumpus(x) & -Vumpus(y) & Lempus(y)))", "all x y z.((Fae(x) & Yampus(y) & Fae(z)) -> (Yumpus(x) & -Vumpus(z) & Lempus(z)))", "(all x.(Fae(x) -> Yampus(x)) & (-Fae(x) -> Vumpus(x)) & (-Fae(x) -> Lempus(x)))", "all x.(Fae(x) -> (Yumpus(x) & -Vumpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_1360", "nl": "Everything that is a tumpus, a sterpus, and a vumpus is a brimpus.", "fol": "all x. ((tumpus(x) & sterpus(x) & vumpus(x)) -> brimpus(x))", "prediction": ["all x.((Tumpus(x) | Sterpus(x) | Vumpus(x)) -> Brimpus(x))", "all x y.((Tumpus(x) & Sterpus(y) & Vumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Sterpus(x) | Vumpus(x)) -> Brimpus(x))", "all x y z.((Tumpus(x) & Sterpus(y) & Vumpus(z) & Has(x,y)) -> Brimpus(x))", "all x.((Tumpus(x) | Sterpus(x) | Vumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Sterpus(x) & Vumpus(x)) -> Brimpus(x))", "all x.(((Tumpus(x) | Sterpus(x) | Vumpus(x))) -> Brimpus(x))", "(all x.((Tumpus(x) | Sterpus(x) | Vumpus(x)) -> Brimpus(x))", "all x y.((Tumpus(x) & Sterpus(y) & Vumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Sterpus(x) | Vumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Sterpus(x) | Vumpus(x)) -> Brimpus(x))", "(all x.((Tumpus(x) | Sterpus(x) | Vumpus(x))) -> Brimpus(x))", "all x.((Tumpus(x) | Sterpus(x) | Vumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Sterpus(x) & Vumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Sterepus(x) | Vumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Sterpus(x) | Vumpus(x)) -> Brimpus(x))"]}
{"id": "prontoqa_train_1361", "nl": "Wren is not a brimpus, Wren is a grimpus, and Wren is a lempus.", "fol": "(-brimpus(Wren) & grimpus(Wren) & lempus(Wren))", "prediction": ["(all x.(Wren(x) -> -Brimpus(x)) & ((Wren(x) & Grimpus(x))) & ((Wren(x) & Lempus(x))))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Grimpus(y)) & all z.(Wren(z) -> Lempus(z))))", "all x y z.((Wren(x) & Grimpus(y) & Lempus(z)) -> (-Brimpus(x) & -Grimpus(y) & -Lempus(z)))", "(all x y z.((Wren(x) & Brimpus(y)) -> -Brimpus(x)) & ((Wren(z) & Grimpus(z))) -> Lempus(z)))", "all x y z.((Wren(x) & Brimpus(y) & Grimpus(z)) -> (-Brimpus(x) & Grimpus(x) & Lempus(x)))", "all x.(Wren(x) -> (-Brimpus(x) & Grimpus(x) & Lempus(x)))", "(all x.(Wren(x) -> -Brimpus(x)) & (Wren(x) -> Grimpus(x)) & (Wren(x) -> Lempus(x)))", "(all x y z.((Wren(x) & Brimpus(y)) -> -Brimpus(x)) & ((Wren(z) & Grimpus(z)) -> Lempus(z)))", "all x y z.((Wren(x) & Brimpus(y) & Grimpus(z)) -> (-Brimpus(x) | (-Brimpus(x) & Grimpus(x) & Lempus(x))))", "(all x y z.((Wren(x) & Brimpus(y)) -> -Brimpus(x)) & ((Wren(z) & Grimpus(z))) -> Lempus(z)))", "all x y z.((Wren(x) & Grimpus(y) & Lempus(z)) -> (-Brimpus(x) & -Smoothpus(y) & -Lempus(z)))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Grimpus(y)) & all z.(Wren(z) -> Lempus(z))))", "all x y z.((Wren(x) & Grimpus(y) & Lempus(z)) -> (-Brimpus(x) | (-Brimpus(y) & Grimpus(y) & Lempus(z))))", "all x y z.((Wren(x) & Brimpus(y) & Grimpus(z) & Lempus(z)) -> (-Brimpus(x) & Grimpus(x) & Lempus(x)))", "(all x.(Wren(x) -> -Brimpus(x)) | (Wren(x) -> Grimpus(x))) | (Wren(x) -> Lempus(x))))", "(all x.(Wren(x) -> -Brumpus(x)) & all y.(Wren(y) -> Grimpus(y)) & all z.(Wren(z) -> Lempus(z)))"]}
{"id": "prontoqa_train_1362", "nl": "Lorpuses are shumpuses.", "fol": "all x. (lorpus(x) -> shumpus(x))", "prediction": ["all x.(Lorpus(x) -> Shumpus(x))", "all x.(Lorpus(x) -> Shumpus(x))", "all x y.((Lorpus(x) & Shumpus(y)) -> Shumpus(x))", "all x y.((Lorpuse(x) & Shumpus(y)) -> Shumpus(x))", "(all x.(Lorpus(x) -> Humptus(x)))", "all x.(Lorpus(x) -> Shumpus(x))", "(Shumpuse(lorpus) & Shumpus(lorpus))", "all x.(Lorpuse(x) -> Shumpus(x))", "all x.(Lorpus(x) -> Shumpus(x))", "(Shumpuse(lorpus) & Shumpus(lorpus))", "all x.(Lorpus(x) -> Shumpus(x))", "All x.(Lurupse(x) -> Shumpuse(x))", "all x.(Lorpuse(x) -> Shumpus(x))", "all x.(Lorpus(x) -> Shumpus(x))", "all x.(Lorpus(x) -> Humpus(x))", "all x.(Lorpus(x) -> Shumpuse(x))"]}
{"id": "prontoqa_train_1363", "nl": "Each shumpus is a dumpus.", "fol": "all x. (shumpus(x) -> dumpus(x))", "prediction": ["all x.(Shumpus(x) -> Dumpus(x))", "all x.(Shumpus(x) -> Dumpus(x))", "(all x.(Shumpus(x) -> Dumpus(x))", "all x y.((Shumpus(x) & Dumpus(y)) -> Has(x,y))", "all x.(Shumpus(x) -> Dumpus(x))", "all x y.((Shumpus(x) & Dumpus(y)) -> Is(x,y))", "all x.(Shumpus(x) -> Dumpus(x))", "all x.(Shumpus(x) -> Dumpus(x))", "all x.(Shumpus(x) -> Dumpus(x))", "all x.(Shumpus(x) -> Dumpus(x))", "exists x.(Shumpus(x) & Puss(y) & Contains(x,y))", "all x.(Shumpus(x) -> Dumpus(x))", "exists x.(Shumpus(x) & Dumpus(x))", "exists x.(Shumpus(x) & Puss(x))", "all x.(Shumpus(x) -> Dumpus(x))", "exists x.(Shumpus(x) & Dumpus(x))"]}
{"id": "prontoqa_train_1364", "nl": "Stella is a tumpus, Stella is a zumpus, and Stella is not a dumpus.", "fol": "(tumpus(Stella) & zumpus(Stella) & -dumpus(Stella))", "prediction": ["(all x.(Tumpus(x) -> Stella(x)) & (Zumpus(x) -> Stella(x)) & -Dumpus(x)))", "all x y z.((Stella(x) & Tompus(y) & Zumpus(z)) -> (Tumpus(x) & -Dumpus(x)))", "(all x.(Tumpus(x) -> Stella(x)) & all y.(Tompus(y) -> Stella(y))) & all z.(Dumpus(z) -> Stella(z))))", "(all x.(Stella(x) -> Tumpus(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> -Dumpus(x)))", "all x y z.((Stella(x) & Tompus(y) & Zumpus(z)) -> (Tumpus(x) & -Dumpus(x)))", "(all x y z.((Stella(x) & Tumpus(y)) -> Tumpus(x)) & ((Stella(z) & Zumpus(z)) -> -Dumpus(z)))", "all x.(Stella(x) -> (Tumpus(x) & Zumpus(x) & -Dumpus(x)))", "(all x.(Tumpus(x) -> Stella)) & (Zumpus(x) -> Stella)) & (Dumpus(x) -> Stella)))", "exists x.(Tumpus(x) & Zumpus(x) & -Dumpus(x))", "(all x.(Stella(x) -> Tumpus(x)) & all y.(Stella(y) -> Zumpus(y)) & all z.(Stella(z) -> -Dumpus(z))))", "all x y z.((Stella(x) & Tompus(y) & Zumpus(z)) -> (Tumpus(x) & Zumpus(y) & -Dumpus(z)))", "all x.(Stella(x) -> (Tumpus(x) | Zumpus(x) | -Dumpus(x)))", "all x y z.(Tumpus(x) & Zumpus(y) & Dumpus(z)) -> (Tumpus(x) & Zumpus(y) & -Dumpus(z)))", "(all x y z.(Tumpus(x) -> Stella(x)) & (Zumpus(y) -> Stella(z)) & (Dumpus(z) -> Stella(z)))", "(all x.(Tumpus(x) & Tosspus(x)) & all y.(Dumpus(y) -> -Tumpus(y)))", "all x y z.(Tumpus(x) & Zumpus(y) & Dumpus(z)) -> (Tumpus(x) & Zumpus(y) & -Dumpus(z)))"]}
{"id": "prontoqa_train_1365", "nl": "Everything that is a gorpus and a numpus and a brimpus is not a zumpus.", "fol": "all x. ((gorpus(x) & numpus(x) & brimpus(x)) -> -zumpus(x))", "prediction": ["all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))", "all x y.((Gorpus(x) & Numpus(y) & Brimpus(y)) -> -Zumpus(x))", "(all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))", "all x y z.((Gorpus(x) & Numpus(y) & Brimpus(z) & Gorpus(y,z)) -> -Zumpus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))", "(all x.((Gorpus(x) & -Zumpus(x)) -> (Numpus(x) & Brimpus(x)))", "all x y.((Gorpus(x) & Numpus(y) & Brimpus(x)) -> -Zumpus(x))", "(all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))", "all x.((Gorpus(x) | Numpus(x) | Brimpus(x)) -> -Zumpus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))", "all x.((Gorpus(x) | Numpus(x) | Brimpus(x)) -> -Zumpus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Tompus(x))"]}
{"id": "prontoqa_train_1366", "nl": "Every tumpus is a zumpus and a rompus and a numpus.", "fol": "all x. (tumpus(x) -> (zumpus(x) & rompus(x) & numpus(x)))", "prediction": ["all x.(Tumpus(x) -> (Tompus(x) & Rompus(x) & Numpus(x)))", "(all x.(Tumpus(x) -> Zumpus(x)) & all y.(Rompus(y) & all z.(Numpus(z) & -Tompus(y))) -> Rompus(z)))", "all x y.((Tumpus(x) & Rompus(y)) -> (Tompus(x) & Rompus(y) & Numpus(y)))", "all x.(Tumpus(x) -> (Tompus(x) & Rompus(x) & Numpus(x)))", "all x y z.((Tumpus(x) & Rompus(y) & Numpus(z)) -> (Tompus(x) & Rompus(y) & Numpus(z)))", "(all x.(Tumpus(x) -> Zumpus(x)) & (Rompus(x) & -Tompus(x)))", "(all x.(Tumpus(x) -> Zumpus(x)) & all y.(Rompus(y) & all z.(Numpus(z) & -Tompus(z))) -> Rompus(y)))", "all x.(Tumpus(x) -> (Tompus(x) & Rompus(x) & Numpus(x)))", "all x y.((Tumpus(x) & Rompus(y)) -> (Tompus(x) & Rompus(y) & Numpus(y)))", "all x.(Tumpus(x) -> (Tompus(x) | Rompus(x) | Numpus(x)))", "(all x.(Tumpus(x) -> Zumpus(x)) & (Rompus(x) -> Numpus(x)))", "exists x.(Tumpus(x) & Zumpus(x) & Rompus(x) & Numpus(x))", "all x.(Tumpus(x) -> (Tompus(x) & Rompus(x) & Numpus(x)))", "exists x.(Tompus(x) & Zumpus(x) & Rompus(x) & Numpus(x))", "all x.(Tumpus(x) -> (Tompus(x) | Rompus(x) | Numpus(x)))", "all x.(Tumpus(x) -> (Zumpus(x) & Rompus(x) & Numpus(x)))"]}
{"id": "prontoqa_train_1367", "nl": "Everything that is a gorpus, a dumpus, and a numpus is a sterpus, a zumpus, and a jompus.", "fol": "all x. ((gorpus(x) & dumpus(x) & numpus(x)) -> (sterpus(x) & zumpus(x) & jompus(x)))", "prediction": ["all x.((Gorpus(x) | Dumpus(x) | Numpus(x)) -> (Sterpus(x) & Zumpus(x) & Jompus(x)))", "all x y.((Gorpus(x) & Dumpus(y) & Numpus(x)) -> (Sterepus(x) & Zumpus(x) & Jompus(x)))", "all x y z.((Gorpus(x) & Dumpus(y) & Numpus(z) & Gorpus(x) & Dumpus(y) & Numpus(z)) -> (Sterepus(x) & Zumpus(x) & Jompus(x)))", "all x.((Gorpus(x) | Dumpus(x) | Numpus(x)) -> (Sterepus(x) & Zumpus(x) & Jompus(x)))", "all x.((Gorpus(x) & Dumpus(x) & Numpus(x)) -> (Sterpus(x) & Zumpus(x) & Jompus(x)))", "all x.((Gorpus(x) | Dumpus(x) | Numpus(x)) -> (Sterpus(x) | Zumpus(x) | Jompus(x)))", "(all x.((Gorpus(x) | Dumpus(x)) & -Nompus(x)) -> (Sterepus(x) & Zumpus(x) & Jompus(x)))", "all x.((Gorpus(x) & Dumpus(x) & Numpus(x)) -> (Sterepus(x) & Zumpus(x) & Jompus(x)))", "all x y.((Gorpus(x) & Dumpus(x) & Numpus(y)) -> (Sterpus(x) | Zumpus(x) | Jompus(x)))", "(all x.((Gorpus(x) | Dumpus(x) | Numpus(x))) -> (Sterpus(x) | Zumpus(x) | Jompus(x)))", "all x.(GorpusDumpusNompus(x) -> (SterpusTompus(x) | JompusTompus(x)))", "all x.((Gorpus(x) | Dumpus(x) | Numpus(x)) -> (Sterepus(x) & Zumpus(x) & Jompus(x)))", "(all x.((Gorpus(x) | Dumpus(x) | Numpus(x))) -> (Sterepus(x) | Zumpus(x) | Jompus(x)))", "all x.((Gorpus(x) | Dumpus(x) | Numpus(x)) -> (Sterpus(x) | Zumpus(x) | Jompus(x)))", "all x.((Gorpus(x) & Dumpus(x) & Numpus(x)) -> (Sterepus(x) & Zumpus(x) & Jompus(x)))", "all x.((Gorpus(x) | Dumpus(x) | Numpus(x)) -> (Sterepus(x) & Zumpus(x) & Jompus(x)))"]}
{"id": "prontoqa_train_1368", "nl": "Everything that is a sterpus, a jompus, and a shumpus is a grimpus, a vumpus, and a lempus.", "fol": "all x. ((sterpus(x) & jompus(x) & shumpus(x)) -> (grimpus(x) & vumpus(x) & lempus(x)))", "prediction": ["all x.((Sterpus(x) | Jompus(x) | Humpus(x)) -> (Smokey(x) & Vumpus(x) & Lempus(x)))", "all x.((Sterpus(x) | Jompus(x) | Shumpus(x)) -> (Smoothpus(x) & Vumpus(x) & Lempus(x)))", "all x y.((Sterpus(x) & Jompus(y) & Shumpus(x)) -> (Smoothpus(x) & Vumpus(x) & Lempus(x)))", "all x.((Sterpus(x) | Jompus(x) | Humpus(x)) -> (Grimpus(x) | Vumpus(x) | Lempus(x)))", "all x.((Sterepus(x) | Jompus(x) | Humpus(x)) -> (Grimpus(x) & Vumpus(x) & Lempus(x)))", "all x y z.((Sterpus(x) & Jompus(y) & Humpus(z) & Sterpus(x) & Jompus(y) & Humpus(z) & Grimpus(x) & Vumpus(x) & Lempus(x)) -> (Sterpus(x) & Vumpus(x) & Lempus(x)))", "all x y.((Sterpus(x) & Jompus(y) & Humpus(y)) -> (Smoothpus(x) & Vumpus(x) & Lempus(x)))", "all x.((Sterepus(x) & Jompus(x) & Humpus(x)) -> (Grimpus(x) | Vumpus(x) | Lempus(x)))", "all x.((Sterepus(x) & Jompus(x) & Shumpus(x)) -> (Grimpus(x) & Vumpus(x) & Lempus(x)))", "all x.((Sterpus(x) | Jompus(x) | Shumpus(x)) -> (Smoothpus(x) & Vumpus(x) & Lempus(x)))", "all x.((Sterpus(x) | Jompus(x) | Shumpus(x)) -> (Smokey(x) & Vumpus(x) & Lempus(x)))", "(all x.((Sterpus(x) | Jompus(x) | Humpus(x))) -> (Smokey(x) | Vumpus(x) | Lempus(x)))", "(all x.((Sterpus(x) | Jompus(x) | Humpus(x))) -> (Smoochpus(x) & Vumpus(x) & Lempus(x)))", "all x.((Sterepus(x) | Jompus(x) | Humpus(x)) -> (Grimpus(x) | Vumpus(x) | Lempus(x)))", "(all x.((Sterepus(x) | Jompus(x) | Shumpus(x))) -> (Smoothpus(x) & Vumpus(x) & Lempus(x)))", "all x.(Sterpus(x) & Jompus(x) & Shumpus(x)) -> (Grimpus(x) & Vumpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_1369", "nl": "Shumpuses are lorpuses and jompuses and gorpuses.", "fol": "all x. (shumpus(x) -> (lorpus(x) & jompus(x) & gorpus(x)))", "prediction": ["all x.(Shupuse(x) -> (Lorpus(x) & Jompuse(x) & Gorpuse(x)))", "all x y.((Shupuse(x) & Lorpus(y)) -> (Lorpus(x) | Jompuse(x) | Gorpuse(x)))", "(all x.(Shupuse(x) -> Lorpus(x)) & all y.(Jompuse(y) & all z.(Gorpuse(z)) -> Gorpus(y)))", "all x.(Shupuse(x) -> (Lorpus(x) & Jompuse(x) & Gorpuse(x)))", "all x.(Shupuse(x) -> (Lorpus(x) | Jompuse(x) | Gorpuse(x)))", "(all x.(Shupuse(x) -> Llorpuse(x)) & all y.(Jompuse(y) & all z.(Gorpuse(z)) -> Gorpuse(y)))", "all x y.((Shupuse(x) & Lorpuse(y)) -> (Lorpus(x) | Jompuse(x) | Gorpuse(x)))", "all x y z.((Shupuse(x) & Lorpus(y) & Jompuse(z)) -> (Lorpus(x) | Gorpus(z)))", "(all x y.(Shumpsuse(x) -> Llorpuse(x)) & (Jompuse(y) | Gorpuse(y)))", "(all x.(Shutupe(x) -> Loomise(x)) & all y.(Jompuse(y) & All z.(Gorpuse(z))) -> Gorpuse(y)))", "(all x.(Shumpsuse(x) -> Lorpuse(x)) & all y.(Jompuse(y) -> Gorpuse(y)))", "all x.(Shumpus(x) -> (Lorpus(x) | Jompuse(x) | Gorpuse(x)))", "(all x.(Shumpus(x) -> Lorpus(x)) & (Jompuse(x) | Gorpus(x)))", "all x.(Shutus(x) -> (Lorpheus(x) | Jompuse(x) | Gorpuse(x)))", "all x y.((Shupuse(x) & Lorompus(y)) -> (Lorpus(x) | Jompuse(x) | Gorpuse(x)))", "all x.(Shupuse(x) -> (Lorpus(x) | Jompuse(x) | Gorpuse(x)))"]}
{"id": "prontoqa_train_1370", "nl": "Fae is a dumpus, a jompus, or a vumpus.", "fol": "(dumpus(Fae) | jompus(Fae) | vumpus(Fae))", "prediction": ["all x.(Fae(x) -> (Dumpus(x) | Jompus(x) | Vumpus(x)))", "(Dumpus(fae) | Jompus(fae) | Vumpus(fae))", "(exists x.(Fae(x) & Dumpus(x)) | exists y.(Jompus(y) & Vumpus(y))))", "all x.(Fae(x) -> (Dumpus(x) | Jompus(x) | Vumpus(x)))", "all x y.((Fae(x) & (Dumpus(y) | Jompus(y) | Vumpus(y))) -> (Dumpus(x) | Jompus(y) | Vumpus(y)))", "(all x.(Fae(x) -> Dumpus(x)) | (Jompus(x) | Vumpus(x))))", "(Dumpus(fe) | Jompus(fe) | Vumpus(fe))", "((Fae(f) & Dumpus(f)) | (Jompus(f) | Vumpus(f))))", "all x.(Fae(x) -> (Dumpus(x) | Jompus(x) | Vumpus(x)))", "exists x.(Fae(x) & ((Dumpus(x) & -Jompus(x)) | (-Dumpus(x) & Jompus(x)))))", "all x.(Fae(x) -> (Dumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Dumpus(x) | Jompus(x) | Vumpus(x)))", "exists x.(Fae(x) & (Dumps(x) | Jompus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Dumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Dumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Dumpus(x) | Jompus(x) | Vampus(x)))"]}
{"id": "prontoqa_train_1371", "nl": "Everything that is a jompus, a zumpus, and a lorpus is a sterpus.", "fol": "all x. ((jompus(x) & zumpus(x) & lorpus(x)) -> sterpus(x))", "prediction": ["all x.((Jompus(x) | Zumpus(x) | Lorpus(x)) -> Sterpus(x))", "all x y z.((Jompus(x) & Zumpus(y) & Lorpus(z) & Has(x,y)) -> Sterpus(x))", "all x.((Jompus(x) | Zumpus(x) | Lorpus(x)) -> Sterpus(x))", "all x.((Jimpus(x) | Zumpus(x) | Lorpus(x)) -> Sterpus(x))", "all x.(((Jompus(x) | Zumpus(x) | Lorpus(x))) -> Sterpus(x))", "all x y.((Jompus(x) & Zumpus(y) & Lorpus(y)) -> Sterpus(x))", "all x.((Jompus(x) | Zumpus(x) | Lorpus(x)) -> Sterpus(x))", "all x.((Morning(x) & Jompus(x) & Zumpus(x) & Lorpus(x)) -> Sterpus(x))", "all x.(((Jompus(x) | Zumpus(x) | Lorpus(x))) -> Sterpus(x))", "(all x.((Jompus(x) | Zumpus(x) | Lorpus(x))) -> Sterpus(x))", "all x.((Jimpus(x) | Zumpus(x) | Lorpus(x)) -> Sterpus(x))", "all x.((Jompus(x) | Zumpus(x) | Lorpus(x)) -> Sterepus(x))", "(all x.((Jompus(x) | Zumpus(x) | Lorpus(x)) -> Sterpus(x))", "all x.((Hompus(x) | Zumpus(x) | Lorpus(x)) -> Sterpus(x))", "all x.((Jompus(x) | Zumpus(x) | Lorpus(x)) -> Sterpus(x))", "(All x.((Jimpus(x) | Zumpus(x) | Lorpus(x))) -> Sterpus(x))"]}
{"id": "prontoqa_train_1372", "nl": "Sally is a jompus.", "fol": "jompus(Sally)", "prediction": ["all x.(Sally(x) -> Jompus(x))", "Sally is a Jompus.", "all x.(Jompus(x) -> Sally(x))", "(Jompus(Sally) & Jompus(Sally))", "Sally is a Jompus.", "Sally is Jompus.", "all x.(Sally(x) -> Jompus(x))", "Sally is a jompus.", "all x.(Jompus(x) -> Sally(x))", "(Jompus(Sally) & Jompus(Sally))", "Sally is Jompus(Sally)", "Sally is jompus.", "All x.(Sally(x) -> Jompus(x))", "all x.(Jompus(x) -> Sally(x))", "Sally is Jompus.", "All x.(Sally(x) -> Jompus(x))"]}
{"id": "prontoqa_train_1373", "nl": "Sally is a lorpus.", "fol": "lorpus(Sally)", "prediction": ["Sally is a lorpus.", "all x.(Lorpus(x) -> Sally(x))", "all x.(Sally(x) -> Lorpus(x))", "(Lorpus(Sally) & LivesIn(Sally,Lorpus))", "Sally is a lorpus.", "all x.(Lorph(x) -> Sally(x))", "Sally is a lorpus.", "All x.(Sally(x) -> Lorpus(x))", "all x.(Lorph(x) -> Sally(x))", "(Lorpus(Sally) & LivesIn(Sally,Lorpus))", "Sally (Lorpus)", "all x.(Lorpus(x) -> Sally(x))", "Sally is a lorpus.", "Sally is a Loomis(Sally)", "All x.(Sally(x) -> Lorpus(x))", "Sally is a lorpus."]}
{"id": "prontoqa_train_1374", "nl": "Sally is a sterpus, a tumpus, or a dumpus.", "fol": "(sterpus(Sally) | tumpus(Sally) | dumpus(Sally))", "prediction": ["all x.(Sally(x) -> (Sterpus(x) | Tumpus(x) | Dumpus(x)))", "(Sally(Sally) | (Tumpus(Sally) | Dumpus(Sally))))", "(Sally(Sally) | Sterpus(Sally) | Tumpus(Sally) | Dumpus(Sally)))", "all x.(Sally(x) -> (Sterpus(x) | Tumpus(x) | Dumpus(x)))", "(Sterepus,Tumpus,Dumpus)", "all x y.(Sally(x) -> (Sterpus(x) | Tumpus(x) | Dumpus(x)))", "(Sally(Sally) | (Sterpus(Sally) | Tumpus(Sally)) | Dumpus(Sally)))", "all x.(Sally(x) -> (Sterepus(x) | Tumpus(x) | Dumpus(x)))", "exists x.(Sally(x) & ((Sterpus(x) & -Tumpus(x)) | (-Storpus(x) & -Tumpus(x)))))", "exists x.(Sally(x) & ((Sterpus(x) | Tumpus(x)) | Dumpus(x))))", "exists x.(Sally(x) & ((Sterpus(x) & -Tumpus(x)) | (-Tumpus(x) & -Tumpus(x)))))", "all x.(Sally(x) -> (Sterpus(x) | Tumpus(x) | Dumpus(x)))", "all x y.(Sally(x) -> (Sterpus(x) | Tumpus(x) | Dumpus(x)))", "all x.(Sally(x) -> (Sterpus(x) | Tumpus(x) | Dumpus(x)))", "all x.(Sally(x) -> (Sterpus(x) | Tumpus(x) | Dumpus(x)))", "all x.(Sally(x) -> (Sterepus(x) | Tumpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_1375", "nl": "Everything that is a numpus or a vumpus or a grimpus is a lempus, an impus, and a brimpus.", "fol": "all x. ((numpus(x) | vumpus(x) | grimpus(x)) -> (lempus(x) & impus(x) & brimpus(x)))", "prediction": ["all x.((Numpus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(x) & Impossible(x) & Brimpus(x)))", "all x.((Numpus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(x) & Imperator(x) & Brimpus(x)))", "all x y.((Numpus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(y) & Impossible(y) & Brimpus(y)))", "(all x.((Numpus(x) | Vumpus(x) | Grimpus(x))) -> (Lempus(x) & Imperempt(x) & Brimpus(x)))", "all x.((Nompus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(x) | Imperator(x) | Brimpus(x)))", "all x.((Nompus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(x) & Impossible(x) & Brimpus(x)))", "(all x.((Numpus(x) | Vumpus(x) | Grimpus(x))) -> (Lempus(x) & Impossible(x) & Brimpus(x)))", "all x.((Numpus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(x) & Impossible(x) & Brimpus(x)))", "all x y.((Numpus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(y) | Imperator(y) | Brimpus(y)))", "all x.((Numpus(x) | Voompus(x) | Grimpus(x)) -> (Lempus(x) & Imperempt(x) & Brimpus(x)))", "all x.((Numpus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(x) | Impossible(x) | Brimpus(x)))", "all x.((Nompus(x) | Vampus(x) | Grimpus(x)) -> (Lempus(x) | Imperator(x) | Brimpus(x)))", "all x.((Numpus(x) | Volumpus(x) | Grimpus(x)) -> (Lempus(x) & Issue(x) & Brimpus(x)))", "all x.((Number(x) | Vampire(x) | Grimpus(x)) -> (Lempus(x) | Impossible(x) | Brimpus(x)))", "all x.((Numpus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(x) & Imperempt(x) & Brimpus(x)))", "all x.(Numpus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(x) & Impossible(x) & Brimpus(x)))"]}
{"id": "prontoqa_train_1376", "nl": "Polly is a numpus.", "fol": "numpus(Polly)", "prediction": ["all x.(Polly(x) -> Numpus(x))", "Polly is a Numpus.", "(Numpus(Polly) & Numpus(Poly))", "all x.(Polly(x) -> Numpus(x))", "Polly is Numpus(Polly)", "all x.(Polly(x) -> Numpus(x))", "Polly is Numpus.", "(Numpus(Polly) & Numpus(Polly))", "Polly is a Numpus.", "all x.(Polly(x) -> Numpus(x))", "all x.(Polly(x) -> Numpus(x))", "(Numpus(Poly) & HasNums(Poly,y))", "(Numpus(poly) & HasNumis(poly,poly))", "all x.(Polly(x) -> Numpus(x))", "All x.(Polly(x) -> Numpus(x))", "All x.(Polly(x) -> Numpus(x))"]}
{"id": "prontoqa_train_1377", "nl": "Wumpuses are rompuses and gorpuses and brimpuses.", "fol": "all x. (wumpus(x) -> (rompus(x) & gorpus(x) & brimpus(x)))", "prediction": ["all x.(Wumpuse(x) -> (Rompus(x) | Gorpus(x) | Brimpuse(x)))", "(all x.(Wumpuse(x) -> Rompus(x)) & all y.(Rompus(y) & Gorpus(y)) & all z.(Brimpus(z) & -Rompus(z)) -> Brimpuse(z)))", "all x y.((Wumpuse(x) & Rompus(y)) -> (Rompus(x) | Gorpus(y) | Brimpuse(y)))", "all x.(Wumpuse(x) -> (Rompus(x) | Gorpus(x) | Brimpuse(x)))", "all x.(Wumpus(x) -> (Rompus(x) | Gorpus(x) | Brimpuse(x)))", "all x y z.((Wumpuse(x) & Rompus(y) & Gorpus(z)) -> (Rompus(x) | Brimpuse(x)))", "(all x.(Wumpuse(x) -> Rompus(x)) & (Gorpus(x) | Brimpuse(x)))", "(all x.(Wumpus(x) -> Rompus(x)) & all y.(Gorpus(y) & Brimpuse(y)) -> Rompus(y)))", "all x.(Wumpus(x) -> (Rompus(x) | Gorpus(x) | Brimpuse(x)))", "(all x.(Wumpuse(x) -> Rompus(x)) & all y.(Gorpus(y) & Brimpuse(y)))", "(all x y.(Wumpuse(x) -> (Rompus(y) | Gorpus(y) | Brimpuse(y)))", "all x y.((Wumpuse(x) & Rompus(y)) -> (Rompus(x) | Gorpus(y) | Brimpuse(y)))", "all x.(Wumpuse(x) -> (Rompus(x) | Gorpus(x) | Brimpuse(x)))", "(all x.(Wumpuse(x) -> (Rompus(x) | Gorpus(x) | Brimpuse(x)))", "all x.(Wumpuse(x) -> (Rompus(x) & Gorpus(x) & Brimpuse(x)))", "all x.(Wumpus(x) -> (Rompus(x) | Gorpus(x) | Brimpuse(x)))"]}
{"id": "prontoqa_train_1378", "nl": "Sally is a vumpus, a jompus, or a gorpus.", "fol": "(vumpus(Sally) | jompus(Sally) | gorpus(Sally))", "prediction": ["all x.(Sally(x) -> (Vumpus(x) | Jompus(x) | Gorpus(x)))", "(Vumpus(Sally) | Jompus(Sally) | Gorpus(Sally))", "all x.(Sally(x) -> (Vumpus(x) | Jompus(x) | Gorpus(x)))", "(Vumpus(s) | Jompus(s) | Gorpus(s))", "(Vumpus(Sally) | Jompus(Sally) | Gorpus(Sally))", "exists x.(Sally(x) & ((Vumpus(x) & -Jompus(x)) | (-Vumpus(x) & Jompus(x)) | (-Vumpus(x) & Jompus(x)))))", "all x.(Sally(x) -> (Vumpus(x) | Jompus(x) | Gorpus(x)))", "(Vumpus,Jompus,Gorpus)", "all x.(Sally(x) -> (Vimpus(x) | Jompus(x) | Gorpus(x)))", "all x y.(Sally(x) -> (Vumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Vumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Vumpus(x) | Jompus(x) | Gorpus(x)))", "exists x.(Sally(x) & ((Vumpus(x) | Jompus(x)) | Gorpus(x))))", "all x.(Sally(x) -> (Vumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Vimpus(x) | Jompus(x) | Gorpus(x)))", "exists x.(Sally(x) & (Vumpus(x) | Jompus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1379", "nl": "Everything that is a brimpus, a lempus, or a zumpus is not a rompus.", "fol": "all x. ((brimpus(x) | lempus(x) | zumpus(x)) -> -rompus(x))", "prediction": ["all x.((Brimpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "all x.((Brimpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "all x.(((Brimpus(x) | Lempus(x) | Zumpus(x))) -> -Rompus(x))", "all x.((IsBrimpus(x) | IsLempus(x) | IsTompus(x)) -> -IsRompus(x))", "all x.((Brimpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "all x.(((Brimpus(x) | Lempus(x) | Zumpus(x))) -> -Rompus(x))", "all x.((Brimpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "all x y.((Brimpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(y))", "(all x.((Brimpus(x) | Lempus(x) | Zumpus(x))) -> -Rompus(x))", "all x.(((Brimpus(x) | Lempus(x) | Zumpus(x))) -> -Rompus(x))", "all x.((Brimpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "(all x.((Brumpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "all x.((Brumpus(x) | Lempus(x) | Zumpus(x)) -> -rompus(x))", "(all x.((Brimpus(x) | Lempus(x) | Zumpus(x))) -> -Rompus(x))", "all x.((Brimpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "all x.((Brompus(x) | Lempus(x) | Zumpus(x)) -> -rompus(x))"]}
{"id": "prontoqa_train_1380", "nl": "Shumpuses are sterpuses and gorpuses and rompuses.", "fol": "all x. (shumpus(x) -> (sterpus(x) & gorpus(x) & rompus(x)))", "prediction": ["all x.(Shupuse(x) -> (Sterpuse(x) | Gorpuse(x) | Rompuse(x)))", "(all x.(Shupuse(x) -> Sterpuse(x)) & all y.(Shupuse(y) -> Gorpuse(y)) & all z.(Rompuse(z) -> Rompuse(z))))", "all x.(Shumpsue(x) -> (Sterpuse(x) | Gorpuse(x) | Rompuse(x)))", "all x y.((Shupuse(x) & Sterpuse(y)) -> (Sterpus(x) | Gorpus(y) | Rompus(y)))", "all x.(Shumpus(x) -> (Sterpuse(x) | Gorpuse(x) | Rompuse(x)))", "(all x.(Shumpsuse(x) -> Sterpuse(x)) & all y.(Gorpuse(y) & all z.(Rompuse(z)) -> Sterpuse(x)))", "all x y z.((Shupuse(x) & Sterpuse(y) & Gorpuse(z) & Rompuse(z)) -> (Sterpuse(x) | Gorpuse(z) | Rompuse(z)))", "all x y.((Shupuse(x) & Sterpus(y)) -> (Sterpus(x) | Gorpus(x) | Rompus(x)))", "all x.(Shupuse(x) -> (Sterpuse(x) & Gorpuse(x) & Rompuse(x)))", "all x y.((Shumpsuse(x) & Sterpuse(y)) -> (Sterpuse(x) | Gorpuse(x) | Rompuse(x)))", "(all x.(Shupuse(x) -> Sterpuse(x)) & (Gorpuse(x) | Rompuse(x))))", "all x.(Shutup(x) -> (Steruse(x) | Gorpuse(x) | Rompuse(x)))", "(all x.(Shutupe(x) -> Sterpuse(x)) & all y.(Gorpuse(y) & All z.(Rompuse(z))) -> Sterpuse(x)))", "(all x.(Shumpus(x) -> Sterus(x)) & (Gorpus(x) | Rompus(x)))", "all x.(Shumpus(x) -> (Sterpuse(x) | Gorpuse(x) | Rompuse(x)))", "all x.(Shumpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Rompuse(x)))"]}
{"id": "prontoqa_train_1381", "nl": "Every yumpus is not a wumpus.", "fol": "all x. (yumpus(x) -> -wumpus(x))", "prediction": ["all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "(all x.(Yumpus(x) -> -Wumpus(x)))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x y.((Yumpus(x) & Wumpus(y)) -> -Wumpus(x))", "(all x.(Yumpus(x) -> -Wumpus(x)))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x y.((Yumpus(x) & Wumpus(y)) -> -Yumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "exists x.(yumpus(x) & -Wumpus(y) & -Yumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "exists x.(Yumpus(x) & -Wumpus(x))"]}
{"id": "prontoqa_train_1382", "nl": "Alex is a shumpus, Alex is not a sterpus, or Alex is a numpus.", "fol": "(shumpus(Alex) | -sterpus(Alex) | numpus(Alex))", "prediction": ["all x.(Alex(x) -> (Shumpus(x) | -Sterpus(x) | Numpus(x)))", "(all x.(Alex(x) -> Shumpus(x)) | (-Alex(x) & Sterpus(x))) | (-Alex(x) & Numpus(x))))", "all x y.((Alex(x) & Shumpus(x)) | (-Sterpus(y) | Numpus(x))))", "(all x.(Alex(x) -> Humpus(x)) & (-Alex(x) -> Sterpus(x)) | (-Alex(x) -> Numpus(x))))", "all x.(Alex(x) -> (Shumpus(x) | -Sterpus(x) | Numpus(x)))", "(all x y.((Alex(x) & Humpus(y)) -> Shumpus(x)) & ((Alex(x) & -Sterpus(x)) | (Alex(x) & Numpus(x)))))", "(all x.(Alexa(x) -> Shumpus(x)) & (-Alexa(x) -> Sterpus(x)) | (-Alexa(x) -> Numpus(x))))", "all x y.((Alex(x) & Humpus(x)) | (-Sterpus(y) | Numpus(y))))", "all x y.((Alex(x) & Shumpus(x)) | (-Sterpus(y)) | (-Sterpus(y) & Numpus(y))))", "exists x.(Alex(x) & ((Shumpus(x) & -Sterpus(x)) | (Numpus(x)))))", "(all x.(Alex(x) -> Humpus(x)) & (-Sterpus(x) | Numpus(x))))", "(all x.(Alex(x) -> Shumpus(x)) | (-Alex(x) & Sterpus(x))) | (-Alex(x) & Numpus(x))))", "all x.(Alex(x) -> (Shumpus(x) | -Sterpus(x) | Numpus(x)))", "exists x.(Alex(x) & ((Shumpus(x) | -Sterpus(x)) | Numpus(x))))", "(all x.(Alex(x) -> Shumpus(x)) | (-Alex(x) & Sterpus(x)) | (-Alex(x) & Numpus(x))))", "all x.(Alex(x) -> (Shumpus(x) | -Sterpus(x) | Numpus(x)))"]}
{"id": "prontoqa_train_1383", "nl": "Everything that is a lorpus, a grimpus, or a wumpus is a zumpus and a jompus and a dumpus.", "fol": "all x. ((lorpus(x) | grimpus(x) | wumpus(x)) -> (zumpus(x) & jompus(x) & dumpus(x)))", "prediction": ["all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Tompus(x) & Jompus(x) & Dumpus(x)))", "all x y.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Tompus(y) & Jompus(y) & Dumpus(y)))", "all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Tompus(x) & Jompus(x) & Dumpus(x)))", "(all x.((Lorpus(x) | Grimpus(x) | Wumpus(x))) -> ZumpusAndJompusAndDumpus(x))", "all x y.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Tompus(y) & Jompus(y) & Dumpus(y)))", "all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Tompus(x) & Jompus(x) & Dumpus(x)))", "(all x.((Lorpus(x) | Grimpus(x) | Wumpus(x))) -> ZumpusAndJompusAndDumps(x))", "(all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> Zumpus(x) & ((Jompus(x) | Dumpus(x))))", "all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Zumpus(x) & Jompus(x) & Dumpus(x)))", "all x y.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Tompus(y) & Jompus(y) & Dumpus(y)))", "all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Zumpus(x) | Jompus(x) | Dumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Tompus(x) & Jompus(x) & Dumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Zumpus(x) | Jompus(x) | Dumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Tompus(x) & Jompus(x) & Dumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Zumpus(x) | Jompus(x) | Dumpus(x)))", "all x.((Larpus(x) | Grimpus(x) | Wompus(x)) -> (Tompus(x) & Jompus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1384", "nl": "Rex is a grimpus.", "fol": "grimpus(Rex)", "prediction": ["Rex is a Grimpus.", "all x.(Rex(x) -> Grimpus(x))", "(Grimpus(Rex) & Grimpus(Rex))", "Rex is a Grimpus.", "all x.(Rex(x) -> Grimpus(x))", "(Grimpus(Rex))", "Rex.(Grimpus(x) -> (Smoothpus(x) & Grimpus(x)))", "Rex is a Grimpus.", "(Grimpus(Rex) & Grimpus(Rex))", "Rex is Grimpus.", "All x.(Rex(x) -> Grimpus(x))", "Rex is a Grimpus.", "all x.(Rex(x) -> Grimpus(x))", "All x.(Rex(x) -> Gruppus(x))", "(Grimpus)", "all x.(Rex(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_1385", "nl": "Each lorpus is a wumpus.", "fol": "all x. (lorpus(x) -> wumpus(x))", "prediction": ["all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Wumpus(x))", "all x y.((Lorpus(x) & Wumpus(y)) -> Has(x,y))", "(all x.(Lorpus(x) -> Wumpus(x)))", "all x.(Lorpus(x) -> Wumpus(x))", "all x y.((Lorpus(x) & Wumpus(y)) -> Is(x,y))", "all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorph(x) -> Wumpus(x))", "exists x.(lorpus(x) & Wumpus(x))", "all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Wampus(x))", "exists x.(lorpus(x) & Wumpus(x))", "all x.(Lorpus(x) -> Wumpus(x))", "exists x.(Lorpus(x) & Wormpus(x))", "all x.(Larp(x) -> Wampus(x))", "exists x.(Lorpus(x) & Wompus(x))"]}
{"id": "prontoqa_train_1386", "nl": "Sam is a rompus, Sam is a zumpus, and Sam is not a wumpus.", "fol": "(rompus(Sam) & zumpus(Sam) & -wumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> Zumpus(x)) & (Sam(x) -> -Wumpus(x)))", "all x y z.((Sam(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & Zumpus(y) & -Wumpus(z)))", "all x y z.((Sam(x) & Rompus(x) & Zumpus(y) & -Wumpus(z)) -> (Rompus(x) & Zumpus(y) & -Wumpus(z)))", "(all x y z.((Sam(x) & Rompus(y)) -> (Rompus(z) | Zumpus(z))) & ((Sam(x) & -Wumpus(x)) -> (Rompus(x) & Zumpus(x))))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> Zumpus(x)) & -Wumpus(x)))", "all x.(Sam(x) -> (Rompus(x) & Zumpus(x) & -Wumpus(x)))", "(all x.(Rompus(x) -> Sam(x)) & (Zumpus(x) -> Sam(x)) & -Wumpus(x)))", "(all x y z.((Sam(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & Zumpus(y) & -Wumpus(z)))", "all x.(Sam(x) -> (Rompus(x) | Zumpus(x) | -Wumpus(x)))", "(all x.(Sam(x) -> Rompus(x)) & all y.(Sam(y) -> Zumpus(y)) & all z.(Sam(z) -> -Wumpus(z))))", "all x y z.((Sam(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) | Zumpus(z) | -Wumpus(x)))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> Zumpus(x)) & (Sam(x) -> -Wumpus(x)))", "(all x.(Rompus(x) -> Sam(x)) & all y.(Zumpus(y) -> Sam(y))) & all z.(Wumpus(z) -> Sam(z)))", "exists x.(Sam(x) & Rompus(x) & Zumpus(x) & -Wumpus(x))", "all x y z.((Sam(x) & Rompus(x) & Zumpus(y) & -Wumpus(z)) -> (Rompus(x) & Zumpus(y) & -Wumpus(z)))", "all x y z.((Sam(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) | Zumpus(z) | -Wumpus(x)))"]}
{"id": "prontoqa_train_1387", "nl": "Impuses are vumpuses.", "fol": "all x. (impus(x) -> vumpus(x))", "prediction": ["all x.(Impuse(x) -> Vampuse(x))", "all x.(Impus(x) -> Vampuse(x))", "all x y.((Impus(x) & Vampuse(y)) -> Is(x,y))", "all x.(Impuse(x) -> Vampuse(x))", "all x y.((Impuse(x) & Vampuse(y)) -> Is(x,y))", "all x.(Impus(x) -> Vampuse(x))", "(all x.(Impuse(x) -> Vampuse(x)))", "(all x.(Impuse(x) -> Vampuse(x)))", "all x.(Impuse(x) -> Vampuse(x))", "(Vumpuse(impredator)", "all x.(Impuss(x) -> Vampuse(x))", "all x.(Impus(x) -> Vampuse(x))", "all x.(Impect(x) -> Vampuse(x))", "all x.(Impuse(x) -> Vampuse(x))", "all x.(Impuse(x) -> Vampuse(x))", "all x.(Impuse(x) -> Vampuse(x))"]}
{"id": "prontoqa_train_1388", "nl": "Stella is a lempus, an impus, and a vumpus.", "fol": "(lempus(Stella) & impus(Stella) & vumpus(Stella))", "prediction": ["all x.(Stella(x) -> (Lempus(x) & Issue(x) & Vumpus(x)))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Impossible(y) & Vumpus(y)))", "all x.(Stella(x) -> (Lempus(x) | Imperative(x) | Vumpus(x)))", "(Lempus(Stella) & Issue(Stella) & Issue(Stella))", "(all x.(Stella(x) -> Lempus(x)) & (Impossible(x) | Vumpus(x))))", "all x y z.((Stella(x) & Lempus(y) & Imperator(z)) -> (Impress(x) & Vumpus(x)))", "(Limpus,Impossible(Stella) & Vumpus(Stella))", "(Lempus(Stella) | Imperator(Stella) | Vumpus(Stella))", "all x.(Stella(x) -> (Lempus(x) & Imperative(x) & Vumpus(x)))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Impossible(y) & Vumpus(y)))", "exists x.(Stella(x) & Lempus(x) & Issue(x) & Vumpus(x))", "all x.(Stella(x) -> (Lempus(x) | Imperator(x) | Vumpus(x)))", "all x.(Stella(x) -> (Lempus(x) & Impossible(x) & Vumpus(x)))", "(all x.(Stella(x) -> Lempus(x)) & (Impossible(x) | Vumpus(x))))", "exists x.(Stella(x) & Lempus(x) & Issue(x) & Vumpus(x))", "all x.(Stella(x) -> (Lempus(x) | Impossible(x) | Vumpus(x)))"]}
{"id": "prontoqa_train_1389", "nl": "Stella is a vumpus, a lorpus, or a sterpus.", "fol": "(vumpus(Stella) | lorpus(Stella) | sterpus(Stella))", "prediction": ["all x.(Stella(x) -> (Vumpus(x) | Lorpus(x) | Sterpus(x)))", "(Vumpus(Stella) | Lorpus(Stella)))", "all x.(Stella(x) -> (Vumpus(x) | Lorpus(x) | Sterpus(x)))", "all x y.((Stella(x) & (Vumpus(y) | Lorpus(y) | Sterpus(y))) -> (Vumpus(x) | Lorpus(y) | Sterpus(y)))", "(Vumpus(Stella) | Lorpus(Stella) | Sterpus(Stella))", "all x.(Stella(x) -> (Vumpus(x) | Lorpus(x) | Sterpus(x)))", "(Vumpus(s) | Lorpus(s) | Sterpus(s))", "all x.(Stella(x) -> (Vumpus(x) | Lorpus(x) | Sterpus(x)))", "(Vumpus(Stella) | Lorpus(Stella)) | Sterpus(Stella))", "(Vumpus,Lorpus,Sterpus)", "exists x.(Vumpus(x) | Lorpus(x) | Sterpus(x))", "exists x.(Stella(x) & ((Vumpus(x) | Lorpus(x) | Sterpus(x))))", "all x.(Stella(x) -> (Vumpus(x) | Lorpus(x) | Sterpus(x)))", "exists x.(Vumpus(x) | Lorpus(x) | Sterpus(x))", "all x.(Stella(x) -> (Vumpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vimpus(x) | Lorpus(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1390", "nl": "Each vumpus is not a grimpus.", "fol": "all x. (vumpus(x) -> -grimpus(x))", "prediction": ["all x.(Vumpus(x) -> -Grimpus(x))", "all x.(Vumpus(x) -> -Grimpus(x))", "all x.(Vumpus(x) -> -Grimpus(x))", "(-Grimpus(vumpus)", "all x.(Vumpus(x) -> -Grimpus(x))", "all x y.((Vumpus(x) & Grimpus(y)) -> -Vumpus(x))", "all x.(Vumpus(x) -> -Grimpus(x))", "(-Grimpus(vumpus)", "-Grimpus(v)", "all x.(Vumpus(x) -> -Grimpus(x))", "all x.(Vumpus(x) -> -Grimpus(x))", "all x.(Vumpus(x) -> -Grimpus(x))", "all x.(Vumpus(x) -> -Grimpus(x))", "exists x.(Vumpus(x) & -Grimpus(x))", "exists x.(Vumpus(x) & -Grimpus(x))", "exists x.(Vumpus(x) & -Grimpus(x))"]}
{"id": "prontoqa_train_1391", "nl": "Sally is a vumpus.", "fol": "vumpus(Sally)", "prediction": ["all x.(Sally(x) -> Vumpus(x))", "Sally is a Vumpus.", "all x.(Vumpus(x) -> Sally(x))", "all x.((Sally(x) & Vumpus(x)) -> Vumpus(x))", "all x.(Sally(x) -> Vumpus(x))", "Sally is a Vumpus.", "(Vumpus(Sally) & Vumpus(Sally))", "Sally is a vumpus.", "(Vumpus(Sally) & HasVumpus(Sally,Sally))", "(Vumpus(Sally) & -Vumpus(Sally))", "Sally is a Vumpus.", "Sally is a vumpus.", "all x.(Vumpus(x) -> Sally(x))", "All x.(Sally(x) -> Vumpus(x))", "Sally is a Vumpus.", "Sally is a vumpus."]}
{"id": "prontoqa_train_1392", "nl": "Sally is a tumpus, Sally is a sterpus, or Sally is not a yumpus.", "fol": "(tumpus(Sally) | sterpus(Sally) | -yumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Sterpus(x)) | (-Yumpus(x))))", "all x.(Sally(x) -> (Tumpus(x) | Sterpus(x) | -Yumpus(x)))", "all x y.((Sally(x) & Tumpus(x)) | (Sally(y) & Sterpus(y)) | (-Yumpus(y))))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> Sterpus(x)) | (Sally(x) -> -Yumpus(x))))", "(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Sterpus(x)) | (-Yumpus(x))))", "exists x.(Sally(x) & ((Tumpus(x) & -Yumpus(x)) | (-Tumpus(x) & Sterpus(x)))))", "all x.(Sally(x) -> (Tumpus(x) | Sterpus(x) | -Yumpus(x)))", "all x y.((Sally(x) & Tumpus(x)) | (Sally(y) & Sterpus(y)) | (-Yumpus(y) & Sally(y))))", "(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Sterpus(x)) | (Sally(x) -> -Yumpus(x))))", "all x.(Sally(x) -> (Tumpus(x) | Sterpus(x) | -Yumpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> Sterpus(x)) | (-Yumpus(x))))", "all x y.((Sally(x) & Tumpus(x)) | (Sally(y) & Sterpus(y)) | (-Yumpus(y) & Sally(z))))", "exists x.(Sally(x) & ((Tumpus(x) & Sally(x)) | (Sterpus(x) & -Yumpus(x)))))", "all x.(Sally(x) -> (Tumpus(x) | Sterepus(x) | -Yumpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Sterepus(x)) | (-Yumpus(x))))", "(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Sterepus(x)) | (Sally(x) -> -Yumpus(x))))"]}
{"id": "prontoqa_train_1393", "nl": "Numpuses are not shumpuses.", "fol": "all x. (numpus(x) -> -shumpus(x))", "prediction": ["all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "(all x.(Numpuse(x) -> -Shumpus(x)))", "(-Shumpus(Numpus)", "-Shumpus(nupus)", "all x.(Numpus(x) -> -Shumpus(x))", "-Shumpuse(numpuse)", "(all x.(Numpus(x) -> -Shumpus(x)))", "all x.(Numpuse(x) -> -Shumpus(x))", "-Shumpus(numpus)", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpuse(x) -> -Shumpuse(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpuse(x) -> -Shumpuse(x))"]}
{"id": "prontoqa_train_1394", "nl": "Each brimpus is a shumpus.", "fol": "all x. (brimpus(x) -> shumpus(x))", "prediction": ["all x.(Brumpus(x) -> Humpus(x))", "all x.(Brimpus(x) -> Humpus(x))", "all x y.((Brimpus(x) & Humpus(y)) -> Is(x,y))", "all x.(Brumpus(x) -> Humpus(x))", "all x y.((Brumpus(x) & Humpus(y)) -> HasShumpus(x,y))", "all x.(Brimpus(x) -> Shumpus(x))", "all x y.((Brimpus(x) & Shumpus(y)) -> HasShumpus(x,y))", "(all x.(Brimpus(x) -> Humpus(x)))", "all x.(Brumpus(x) -> Humpus(x))", "all x.(Brimpus(x) -> Shumpus(x))", "exists x.(Brimpus(x) & Humpus(x))", "all x.(Brumpus(x) -> Humpus(x))", "all x.(Brimpus(x) -> Shumpus(x))", "all x.(Brumpus(x) -> Humpus(x))", "exists x.(Brimpus(x) & Humpus(x))", "exists x.(Brampus(x) & Shumpus(x))"]}
{"id": "prontoqa_train_1395", "nl": "Everything that is a yumpus, a vumpus, and a zumpus is a lorpus.", "fol": "all x. ((yumpus(x) & vumpus(x) & zumpus(x)) -> lorpus(x))", "prediction": ["all x.((Yumpus(x) | Vumpus(x) | Zumpus(x)) -> Lorpus(x))", "all x.((Yumpus(x) | Vumpus(x) | Zumpus(x)) -> Lorpus(x))", "all x y.((Yumpus(x) & Vumpus(y) & Zumpus(y)) -> Lorpus(x))", "all x.((Yumpus(x) | Vampus(x) | Zumpus(x)) -> Lorpus(x))", "all x y z.((Yumpus(x) & Vumpus(y) & Zumpus(z) & Has(x,y)) -> Lorpus(x))", "(all x.((Yumpus(x) | Vumpus(x) | Zumpus(x)) -> Lorpus(x))", "all x.((Yumpus(x) | Vumpus(x) | Zumpus(x)) -> Lorpus(x))", "all x.((Yumpus(x) & Vumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Yumpus(x) | Vumpus(x) | Zumpus(x)) -> Lorpus(x))", "(All x.((Yumpus(x) | Vumpus(x) | Zumpus(x))) -> Lorde(x))", "(all x.((Yumpus(x) | Voompus(x) | Zumpus(x))) -> Lorpus(x))", "all x.((Yumpus(x) | Voompus(x) | Zumpus(x)) -> Lorpus(x))", "all x.((Yumpus(x) & Vumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.(Yumpus(x) | Vumpus(x) | Zumpus(x)) -> Lorde(x))", "all x.((Yumpus(x) | Vumpus(x) | Zumpus(x)) -> Lorpus(x))", "all x.((Yumpus(x) | Vampus(x) | Zumpus(x)) -> Lorpus(x))"]}
{"id": "prontoqa_train_1396", "nl": "Wren is a yumpus, a sterpus, and a jompus.", "fol": "(yumpus(Wren) & sterpus(Wren) & jompus(Wren))", "prediction": ["all x.(Wren(x) -> (Yumpus(x) | Sterpus(x) | Jompus(x)))", "(Yumpus,yumpus) & Sterpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,yumpus,", "(Yumpus(Wren) & Sterpus(Wren) & Jompus(Wren))", "all x y z.((Wren(x) & Yumpus(y) & Sterpus(z)) -> (Yumpus(x) | Sterpus(z) | Jompus(z)))", "(Yumpus(w) | Sterpus(w) | Jompus(w)))", "(all x.(Wren(x) -> Yumpus(x)) & (Sterpus(x) & Jompus(x)))", "(yumpus) & sterpus(y) & jompus(z))", "all x.(Wren(x) -> (Yumpus(x) | Sterpus(x) | Jompus(x)))", "(all x.(Wren(x) -> Yumpus(x)) & all y.(Wren(y) -> Sterpus(y)) & all z.(Wren(z) -> Jompus(z))))", "all x.(Wren(x) -> (Yumpus(x) & Sterpus(x) & Jompus(x)))", "all x y.(Wren(x) -> (Yumpus(x) | Sterpus(x) | Jompus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Sterepus(x) | Jompus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Sterepus(x) & Jompus(x)))", "exists x.(Wren(x) & Yumpus(x) & Sterepus(x) & Jompus(x))", "exists x.(Wren(x) & Yampus(x) & Sterpus(x) & Jompus(x))", "all x.(Wren(x) -> (Yumpus(x) | Sterpus(x) | Jompus(x)))"]}
{"id": "prontoqa_train_1397", "nl": "Wren is not a brimpus, Wren is a lorpus, and Wren is a gorpus.", "fol": "(-brimpus(Wren) & lorpus(Wren) & gorpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Lorpus(y)) & all z.(Wren(z) -> Gorpus(z))))", "all x y z.((Wren(x) & Brimpus(y) & Lorpus(z)) -> (-Brimpus(x) & -Lorpus(x) & -Gorpus(x)))", "(all x y z.((Wren(x) & Brimpus(y)) -> -Brimpus(x)) & ((Wren(z) & Lorpus(z))) -> Gorpus(z)))", "(all x.(Wren(x) -> -Brimpus(x)) & (Lorpus(x) & Gorpus(x)))", "all x.(Wren(x) -> (-Brimpus(x) & -Lorpus(x) & -Gorpus(x)))", "all x y z.((Wren(x) & Brimpus(y) & Lorpus(z)) -> (-Brimpus(x) & -Lorpus(x) & -Gorpus(x)))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Lorpus(y)) & all z.(Wren(z) -> Gorpus(z))))", "all x y z.((Wren(x) & -Brimpus(x) & Lorpus(y) & Gorpus(z)) -> (-Brimpus(x) & -Lorpus(y) & -Gorpus(z)))", "(all x y z.((Wren(x) & Brimpus(y) & Lorpus(z)) -> -Brimpus(x)) & ((Wren(x) & Lorpus(x)) -> Gorpus(x)))", "all x y z.((Wren(x) & Brimpus(y) & Lorpus(z) & Gorpus(z)) -> (-Brimpus(x) & -Lorpus(x) & -Brimpus(y) & Gorpus(z)))", "(all x.(Wren(x) -> -Brimpus(x)) & ((Wren(x) & Lorpus(x)) | (-Wren(x) & Gorpus(x)))))", "(all x y z.((Wren(x) & Brimpus(y)) -> -Brimpus(x)) & ((Wren(z) & Lorpus(z))) -> Gorpus(z)))", "all x y z.((Wren(x) & Brimpus(y) & Lorpus(z)) -> (-Brimpus(x) & -Lorpus(x) & -Gorpus(x)))", "all x y z.((Wren(x) & -Brimpus(x)) -> (Lorpus(y) & Gorpus(z)))", "(all x.(Wren(x) -> -Brumpus(x)) & all y.(Wren(y) -> Lorpus(y)) & all z.(Wren(z) -> Gorpus(z)))", "(all x.(Wren(x) -> -Brimpus(x)) & (Lorpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1398", "nl": "Sterpuses are jompuses, brimpuses, and vumpuses.", "fol": "all x. (sterpus(x) -> (jompus(x) & brimpus(x) & vumpus(x)))", "prediction": ["all x.(Sterpus(x) -> (Jompuse(x) | Brimpuse(x) | Vampuse(x)))", "all x.(Sterpuse(x) -> (Jompuse(x) | Brimpuse(x) | Vampuse(x)))", "all x y z.((Sterpuse(x) & Jompuse(y) & Brimpuse(z)) -> (Vampuse(x) | Jompuse(y) & Vampuse(z)))", "all x.(Sterpus(x) -> (Jompuse(x) | Brimpuse(x) | Vampuse(x)))", "all x.(Sterpuse(x) -> (Jompuse(x) | Brimpuse(x) | Vampuse(x)))", "(all x.(Sterpuse(x) -> (Jompuse(x) | Brimpuse(x) | Vampuse(x)))", "(all x.(Sterpuse(x) -> (Jompuse(x) | Brimpuse(x) | Vampuse(x)))", "all x y.((Sterpuse(x) & Jompuse(y)) -> (Brimpus(x) | Vampuse(x)))", "all x.(Sterpuse(x) -> (Jompuse(x) | Brimpuse(x) | Vampuse(x)))", "all x.(Sterpus(x) -> (Jompuse(x) | Brimpuse(x) | Vampuse(x)))", "(all x.(Sterpuse(x) -> (Jompuse(x) | Brimpuse(x) | Vampuse(x)))", "(all x.(Sterpuse(x) -> (Jompuse(x) | Brimpus(x) | Vumpuse(x)))", "all x.(Sterpus(x) -> (Jompuse(x) | Brimpus(x) | Vumpuse(x)))", "all x.(Strerpuse(x) -> (Jompuse(x) | Brimpuse(x) | Vampuse(x)))", "all x.(Stumpus(x) -> (Jompus(x) | Brimpus(x) | Vampus(x)))", "(all x.(Sterpuse(x) -> (Jompuse(x) | Brimpuse(x) | Vampuse(x)))"]}
{"id": "prontoqa_train_1399", "nl": "Sally is not a brimpus and Sally is a numpus and Sally is a grimpus.", "fol": "(-brimpus(Sally) & numpus(Sally) & grimpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Brimpus(x)) & (Sally(x) -> Numpus(x)) & (Sally(x) -> Grimpus(x)))", "all x y z.((Sally(x) & Brimpus(y) & Numpus(z)) -> (-Brimpus(x) & Numpus(x) & Grimpus(x)))", "all x.(Sally(x) -> (-Brimpus(x) & Numpus(x) & Grimpus(x)))", "(all x.(Sally(x) -> -Brimpus(x)) & all y.(Sally(y) -> Numpus(y)) & all z.(Sally(z) -> Grimpus(z))))", "(-Brimpus(Sally) & Numpus(Sally) & Grimpus(Sally))", "(all x y.(Brimpus(x) -> -Brimpus(x)) & (Numpus(y) -> Grimpus(y)))", "all x y.((Sally(x) & Brimpus(y) & Numpus(y)) -> (-Brimpus(x) & Grimpus(x)))", "all x y z.((Sally(x) & Brimpus(y) & Numpus(z)) -> (-Brimpus(x) & Numpus(x) & Grimpus(x)))", "(all x.(Brimpus(x) -> -Brimpus(x)) & all y.(Numpus(y) -> Grimpus(y)))", "(all x.(Sally(x) -> -Brimpus(x)) & (Sally(x) -> Numpus(x)) & (Sally(x) -> Grimpus(x)))", "all x.(Sally(x) -> (-Brimpus(x) & Numpus(x) & Grimpus(x)))", "(-Brimpus(Sally) & Numpus(Sally) & Grimpus(Sally))", "(all x.(Sally(x) -> -Brimpus(x)) & all y.(Sally(y) -> Numpus(y)) & all z.(Sally(z) -> Grimpus(z))))", "all x y z.((Sally(x) & Brimpus(y) & Numpus(z)) -> (-Brimpus(x) & -Numpus(x) & -Grimpus(x)))", "all x y.((Sally(x) & Brimpus(y) & Numpus(y)) -> (-Brimpus(x) & Grimpus(y)))", "exists x.(Sally(x) & -Brimpus(x) & Numpus(x) & Grimpus(x))"]}
{"id": "prontoqa_train_1400", "nl": "Polly is a rompus and Polly is not an impus and Polly is a jompus.", "fol": "(rompus(Polly) & -impus(Polly) & jompus(Polly))", "prediction": ["(all x.(Polly(x) -> Rompus(x)) & (Polly(x) -> -Impossible(x)) & (Polly(x) -> Jompus(x)))", "(all x.(Polly(x) -> Rompus(x)) & (Polly(x) -> -Impossible(x))) & (Polly(x) -> Jompus(x)))", "all x y z.((Polly(x) & Rompus(x) & Polly(y) & IsNotImpossible(y)) -> (Jompus(z)))", "all x y.((Polly(x) & Rompus(x)) -> (-Impossible(x) & Jompus(y)))", "(all x y.((Polly(x) & Rompus(x)) -> Polly(y)) & ((Polly(x) & -Impossible(y)) -> Jompus(y)))", "(all x y z.((Polly(x) & Rompus(y)) -> (Rompus(x) & -Impossible(y))) & ((Polly(z) & Jompus(z)) -> (Jompus(z))))", "all x y z.((Polly(x) & Rompus(y) & IsNotImpossible(z)) -> (Rompus(x) & Jompus(x)))", "all x y.((Polly(x) & Rompus(x) & Polly(y)) -> (-Impossible(y) & Jompus(y)))", "(all x y.(Rompus(x) -> Polly(x)) & (IsNotImpossible(y) & Polly(y)) -> Jompus(y)))", "(all x.(Polly(x) -> Rompus(x)) & (Polly(x) -> -Impossible(x)) & (Polly(x) -> Jompus(x)))", "(all x.(Polly(x) -> Rompus(x)) & (Polly(x) -> -Impossible(x)) & (Polly(x) -> Jompus(x)))", "all x.((Polly(x) & Rompus(x) & -Impossible(x)) -> Jompus(x))", "all x.(Polly(x) -> (Rompus(x) & -Impossible(x) & Jompus(x)))", "all x y z.((Polly(x) & Rompus(y) & -Impossible(z)) -> (Rompus(x) & Jompus(x)))", "(all x.(Polly(x) -> Rompus(x)) & (Polly(x) -> -Impossible(x)) & (Polly(x) -> Jompus(x)))", "exists x.(Polly(x) & Rompus(x) & -Impossible(x) & Jompus(x))"]}
{"id": "prontoqa_train_1401", "nl": "Polly is a jompus, Polly is not a vumpus, or Polly is a numpus.", "fol": "(jompus(Polly) | -vumpus(Polly) | numpus(Polly))", "prediction": ["(all x.(Polly(x) -> Jompus(x)) | (Polly(x) -> -Vumpus(x)) | (Polly(x) -> Numpus(x))))", "(all x.(Polly(x) -> Jompus(x)) | (-Polly(x) & Vumpus(x))) | (-Polly(x) & Numpus(x))))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Vumpus(x)) | (Polly(x) -> Numpus(x))))", "all x y.((Polly(x) & Jompus(x)) | (-Vumpus(y) | Numpus(y))))", "all x.((Polly(x) & Jompus(x)) | (-Vumpus(x) | Numpus(x))))", "(exists x.(Polly(x) & Jompus(x)) | exists y.(Polly(y) & -Vumpus(y))) | exists z.(Polly(z) & Numpus(z))))", "(all x.(Polly(x) -> Jompus(x)) & (-Polly(x) -> Vumpus(x)) | (-Polly(x) -> Numpus(x))))", "(all x y.((Polly(x) & Jompus(x)) | (-Polly(y) & Vumpus(y))) | (-Polly(y) & Numpus(y))))", "all x.(Polly(x) -> (Jompus(x) | -Vumpus(x) | Numpus(x)))", "all x y z.((Polly(x) & Jompus(x) & Polly(y) & -Vumpus(y)) -> (Nompus(z) | Nompus(z)))", "exists x.(Polly(x) & ((Jompus(x) & Polly(x)) | (-Vumpus(x) & Polly(x)))))", "(all x y.(Polly(x) -> Jompus(x)) | (-Polly(y) & Vumpus(y))) | (-Polly(y) & Numpus(y))))", "exists x.(Polly(x) & ((Jompus(x) & -Vumpus(x)) | (Nompus(x) & Polly(x)))))", "all x y.((Polly(x) & Jompus(x)) | (-Vumpus(y) | Numpus(y))))", "all x.(Polly(x) -> (Jompus(x) | -Vumpus(x) | Numpus(x)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Vumpus(x)) | (Polly(x) -> Numpus(x))))"]}
{"id": "prontoqa_train_1402", "nl": "Everything that is a grimpus, a gorpus, or a rompus is a wumpus.", "fol": "all x. ((grimpus(x) | gorpus(x) | rompus(x)) -> wumpus(x))", "prediction": ["all x.((Smokey(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Smokey(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Grimpus(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Gruppus(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x y.((Smokey(x) | Gorpus(x) | Rompus(x)) -> Wumpus(y))", "all x.((Smoothpus(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Element(x) & (Grimpus(x) | Gorpus(x) | Rompus(x))) -> Wumpus(x))", "all x y.((Smooch(x) & (Gorpus(y) | Rompus(y))) -> Wumpus(x))", "all x.((Gruppus(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Smaller(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Fragus(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.(((Grimpus(x) | Gorpus(x) | Rompus(x))) -> Wumpus(x))", "(all x.((Grimpus(x) | Gorpus(x) | Rompus(x))) -> Wumpus(x))", "all x.((Rumpus(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Crupid(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Grosspus(x) | Gorpus(x) | Rompus(x)) -> Humpus(x))"]}
{"id": "prontoqa_train_1403", "nl": "Sally is a rompus and a grimpus and an impus.", "fol": "(rompus(Sally) & grimpus(Sally) & impus(Sally))", "prediction": ["all x.(Sally(x) -> (Rompus(x) & Grimpus(x) & Imperator(x)))", "(all x.(Sally(x) -> Rompus(x)) & (Grimpus(x) & Imperator(x)))", "(Rompus(Sally) & Grimpus(Sally) & Imperator(Sally))", "(rompus(Sally) & grimpus(Sally) & impus(Sally))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Grimpus(y) -> Imperator(y)))", "Sally is rompus and grimpus and impus.", "all x.(Sally(x) -> (Rompus(x) & Grimpus(x) & Imperator(x)))", "Sally is a rompus and grimpus and impus.", "(all x.(Sally(x) -> Rompus(x)) & (Grimpus(x) -> Grimpus(x)) & (Impossible(x) -> Requires(x)))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> Grimpus(y)) & all z.(Sally(z) -> Imperator(z))))", "(Rompus(Sally) & Grimpus(Sally) & Imperator(Sally))", "all x.(Sally(x) -> (Rompus(x) & Grimpus(x) & Imperator(x)))", "exists x.(Sally(x) & Rompus(x) & Grimpus(x) & Imperator(x))", "all x.(Sally(x) -> (Rompus(x) & Grimpus(x) & Imperium(x)))", "all x.(Sally(x) -> (Rompus(x) | Grimpus(x) | Imperator(x)))", "all x.(Sally(x) -> (Rompus(x) & Grimpus(x) & Impossible(x)))"]}
{"id": "prontoqa_train_1404", "nl": "Numpuses are impuses and shumpuses and dumpuses.", "fol": "all x. (numpus(x) -> (impus(x) & shumpus(x) & dumpus(x)))", "prediction": ["all x.(Numpuse(x) -> (Issue(x) | (Shumpus(x) | Dumpuse(x)))))", "all x y.((Numpuse(x) & Shumpuse(y)) -> (Issue(x) | Dumpuse(y)))", "(all x.(Numpuse(x) -> Issue(x)) & all y.(Shumpus(y) & All z.(Dumpuse(z)) -> Issue(y))))", "all x.(Numpuse(x) -> (Issue(x) | (Shumpuse(x) | Dumpuse(x))))", "all x y z.((Numpuse(x) & Shumpus(y) & Dumpuse(z)) -> (Impossible(x) | Shumpus(y) & Dumpuse(z)))", "all x.(Numpuse(x) -> (Impose(x) | Shumpus(x) | Dumpuse(x)))", "(all x.(Numpuse(x) -> Impose(x)) & all y.(Shumpus(y) & All z.(Dumpuse(z) & -Impose(y)) -> Dumpuse(z)))", "all x y.((Numpuse(x) & Shumpuse(y) & Dumpuse(y)) -> (Issue(x) & Issue(y) & Issue(y) & Issue(y)))", "(all x.(Numpuse(x) -> Issue(x)) & all y.(Shumpus(y) -> Dumpuse(y)))", "all x y.((Numpuse(x) & Shumpuse(y)) -> (Impossible(x) | Dumpuse(y)))", "(all x.(Numpus(x) -> Issues(x)) & all y.(Shumpus(y) -> Dumpuses(y)))", "(all x y.(Numpus(x) -> Issue(x)) & (Shumpus(y) | Dumpuse(y)))", "all x.(Numpus(x) -> (Improves(x) & Shumpuses(x) & Dumpuses(x)))", "(all x.(Numpus(x) -> Issues(x)) & all y.(Shumpus(y) & All z.(Dumpuse(z)) -> Issues(y))))", "all x.(Numpuse(x) -> (Impose(x) | Shumpus(x) | Dumpuse(x)))", "all x.(Numpus(x) -> (Improved(x) & Shumpuses(x) & Dumpuses(x)))"]}
{"id": "prontoqa_train_1405", "nl": "Rex is a yumpus, a dumpus, or a brimpus.", "fol": "(yumpus(Rex) | dumpus(Rex) | brimpus(Rex))", "prediction": ["all x.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "(Yumpus(x) | Dumpus(x) | Brimpus(x))", "all x.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "(Yumpus,yumpus(y) | Dumpus(y) | Brimpus(y))", "(yumpus) | dumpus(y) | Brimpus(y))", "all x y.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "(Yumpus,Dumpus,Brimpus)", "(yumpus) | dumpus(x) | Brimpus(x))", "all x.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "exists x.(Rex(x) & (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "exists x.(Rex(x) & (Yumpus(x) | Dumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_1406", "nl": "Tumpuses are yumpuses, wumpuses, and rompuses.", "fol": "all x. (tumpus(x) -> (yumpus(x) & wumpus(x) & rompus(x)))", "prediction": ["all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "all x y z.((Tumpus(x) & Yampus(y) & Wumpus(z) & Rompus(z)) -> (Yumpus(y) | Wumpus(z) | Rompus(z)))", "(yumpuses(y) | wumpuses(y) | rompuses(y)))", "(all x.(Tumpus(x) -> Yumpus(x)) & all y.(Wumpus(y) -> Rumpus(y)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "(all x.(Tumpus(x) -> Yampuse(x)) & all y.(Wumpus(y) -> Rompuse(y)))", "(Yumpuses(tumpus) | Wumpuses(tumpus) | Rompuses(tumpus))", "all x y z.((Tumpus(x) & Yampus(y) & Wumpus(z) & Rompus(z)) -> (Yumpus(x) | Wumpus(y) | Rompus(z)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "(all x.(Tumpus(x) -> Yumpus(x)) & all y.(Wumpus(y) -> Rumpus(y)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Tumpus(x) -> (Yumpuses(x) | Wumpuses(x) | Rompuses(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1407", "nl": "Sam is a gorpus, Sam is not a yumpus, and Sam is a rompus.", "fol": "(gorpus(Sam) & -yumpus(Sam) & rompus(Sam))", "prediction": ["(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> -Yumpus(x)) & (Sam(x) -> Rompus(x)))", "all x y z.((Sam(x) & Gorpus(x) & Sam(y) & Yampus(z)) -> (-Yumpus(y) & Rompus(z)))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> -Yumpus(x)) & (Sam(x) -> Rompus(x)))", "(all x y z.((Sam(x) & Gorpus(x)) -> Gorpus(x)) & ((Sam(y) & -Yumpus(y)) -> Rompus(z)))", "all x y z.((Sam(x) & Gorpus(x) & Sam(y) & -Yumpus(y)) -> (Rompus(z)))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> -Yumpus(x)) & (Sam(x) -> Rompus(x)))", "all x y z.((Sam(x) & Gorpus(x) & Sam(y) & Yampus(z)) -> (-Yumpus(y) & Rompus(z)))", "(all x y z.((Sam(x) & Gorpus(x)) -> Gorpus(x)) & ((Sam(y) & -Yumpus(y)) -> Rompus(z)))", "(all x.(Sam(x) -> Gorpus(x)) & (-Yumpus(x) & (Rompus(x))))", "all x.(Sam(x) -> (Gorpus(x) & -Yumpus(x) & Rompus(x)))", "all x.(Sam(x) -> (Gorpus(x) | -Yumpus(x) | Rompus(x)))", "exists x.(Sam(x) & Gorpus(x) & -Yumpus(x) & Rompus(x))", "all x y z.((Sam(x) & Gorpus(y) & Yampus(z)) -> (-Yumpus(x) & Rompus(x)))", "(all x y z.((Sam(x) & Gorpus(x)) -> Gorpus(x)) & ((Sam(y) & -Yumpus(y)) -> Rompus(z)))", "all x y z.((Sam(x) & Gorpus(x) & Sam(y) & Yampus(z)) -> (-Yumpus(y) & Rompus(z)))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> -Yumpus(x)) & (Sam(x) -> Rompus(x)))"]}
{"id": "prontoqa_train_1408", "nl": "Fae is a yumpus, Fae is not a rompus, and Fae is a wumpus.", "fol": "(yumpus(Fae) & -rompus(Fae) & wumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Yampus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Wumpus(x)))", "all x y z.((Fae(x) & Yampus(y) & -Rompus(z)) -> (Yumpus(x) & Wumpus(x)))", "(all x y z.((Fae(x) & Yumpus(y)) -> (Yumpus(x) & -Rompus(y)) & ((Fae(z) & Wumpus(z)) -> Wumpus(z))))", "all x y z.((Fae(x) & Yampus(y) & Rompus(z)) -> (Yumpus(x) & -Rompus(y) & Wumpus(z)))", "(all x.(Fae(x) -> Yumpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Wumpus(x)))", "(all x y z.((Fae(x) & Yampus(y) & -Rompus(z)) -> Yampus(x)) & ((Fae(x) & Wumpus(x)) -> Wumpus(x)))", "all x.(Fae(x) -> (Yumpus(x) & -Rompus(x) & Wumpus(x)))", "(yumpus(x) | rompus(x) | wumpus(x)))", "(all x.(Fae(x) -> Yumpus(x)) & all y.(Fae(y) -> -Rompus(y)) & all z.(Fae(z) -> Wumpus(z))))", "exists x.(Fae(x) & Yampus(x) & -Rompus(x) & Wumpus(x))", "all x y z.((Fae(x) & Yampus(y) & Rhopus(z)) -> (Yumpus(x) | Wumpus(x)))", "(all x y z.((Fae(x) & Yumpus(y)) -> Yampus(x)) & ((Fae(z) & -Rompus(z))) -> Wumpus(z)))", "(all x.(Fae(x) -> Yampus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Wumpus(x)))", "all x y z.(Fae(x) -> (Yumpus(x) | -Rompus(y) | Wumpus(z)))", "all x y z.((Fae(x) & Yampus(y) & Rompus(z)) -> (Yumpus(x) & -Rompus(x) & Wumpus(x)))", "(all x.(Fae(x) -> Yampus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Wumpus(x)))"]}
{"id": "prontoqa_train_1409", "nl": "Everything that is a wumpus, a zumpus, and a jompus is a numpus and a brimpus and an impus.", "fol": "all x. ((wumpus(x) & zumpus(x) & jompus(x)) -> (numpus(x) & brimpus(x) & impus(x)))", "prediction": ["all x.((Wumpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Brimpus(x) & Imperator(x)))", "all x y.((Wumpus(x) & Zumpus(y) & Jompus(y)) -> (Numpus(x) & Brimpus(x) & Imperator(x)))", "all x.((Wumpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Brimpus(x) & Imperator(x)))", "all x y z.((Wumpus(x) & Zumpus(y) & Jompus(z) & Numpus(x) & Brimpus(x) & Impossible(x)) -> (Numpus(x) & Impossible(x)))", "all x.((Wumpus(x) & Zumpus(x) & Jompus(x)) -> (Numpus(x) & Brimpus(x) & Imperator(x)))", "all x y.((Wumpus(x) & Zumpus(y) & Jompus(y)) -> (Numpus(x) & Brimpus(x) & Imperator(x)))", "(all x.((Wumpus(x) | Zumpus(x) | Jompus(x))) -> (Numpus(x) & Brimpus(x) & Impossible(x)))", "all x.((Wumpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Brimpus(x) & Impossible(x)))", "all x.((Wumpus(x) & Zumpus(x) & Jompus(x)) -> (Numpus(x) & Brimpus(x) & Imperator(x)))", "all x.((Wumpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Brimpus(x) & Imperator(x)))", "all x.(Wumpus(x) & Zumpus(x) & Jompus(x)) -> (Numpus(x) & Brimpus(x) & Imperator(x)))", "(all x.((Wumpus(x) | Zumpus(x) | Jompus(x))) -> (Numpus(x) & Brimpus(x) & Imperator(x)))", "all x.((Wumpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Brimpus(x) & Impossible(x)))", "(all x.((Wumpus(x) | Zumpus(x) | Jompus(x))) -> (Numpus(x) & Brimpus(x) & Impossible(x)))", "all x.((Wumpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) | Brimpus(x) | Imperator(x)))", "all x.((Wumpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Brimpus(x) & Imperative(x)))"]}
{"id": "prontoqa_train_1410", "nl": "Each zumpus is a sterpus.", "fol": "all x. (zumpus(x) -> sterpus(x))", "prediction": ["all x.(Zumpus(x) -> Sterpus(x))", "all x.(Tompus(x) -> Sterpus(x))", "(All x.(Zumpus(x) -> Sterpus(x))", "all x.(Zumpus(x) -> Sterpus(x))", "exists x y.(Zumpus(x) & Sterpus(y))", "exists x y.(Zumpus(x) & Sterpus(y) & Contains(x,y))", "all x.(Tompus(x) -> Sterpus(x))", "all x.(Zumpus(x) -> Sterpus(x))", "all x.(Tompus(x) -> Sterpus(x))", "all x.(Zumpus(x) -> Sterepus(x))", "exists x.(Zumpus(x) & Sterus(x))", "all x.(Tompus(x) -> Sterpus(x))", "all x.(Zumpus(x) -> Sterpus(x))", "all x.(Zumpus(x) -> Sterpus(x))", "all x.(Tompus(x) -> Sterpus(x))", "all x.(Tommus(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_1411", "nl": "Polly is a shumpus.", "fol": "shumpus(Polly)", "prediction": ["all x.(Shumpus(x) -> Polly(x))", "Polly is a shumpus.", "all x.(Polly(x) -> Humpus(x))", "(Shumpus(Polly) & HasShump(Polly))", "Polly is a shumpus.", "all x.(Shumpus(x) -> Polly(x))", "(Shumpus(Polly))", "(Shumpus(Polly) & HasShump(Polly,Shumpus))", "Polly is a shumpus.", "all x.(Shumpus(x) -> Polly(x))", "All x.(Polly(x) -> Humpus(x))", "Polly is a shumpus.", "all x.(Shumpus(x) -> Polly(x))", "(Shumpus(Polly)", "All x.(Polly(x) -> Humpus(x))", "all x.(Shumpus(x) -> Polly(x))"]}
{"id": "prontoqa_train_1412", "nl": "Polly is a jompus, Polly is not a zumpus, or Polly is a lempus.", "fol": "(jompus(Polly) | -zumpus(Polly) | lempus(Polly))", "prediction": ["(all x.(Polly(x) -> Jompus(x)) | (Polly(x) -> -Zumpus(x)) | (Polly(x) -> Lempus(x))))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Zumpus(x)) | (Polly(x) -> Lempus(x))))", "(all x.(Polly(x) -> Jompus(x)) & (-Polly(x) -> Zumpus(x)) | (-Polly(x) -> Lempus(x))))", "all x.((Polly(x) & (Jompus(x) | -Zumpus(x) | Lempus(x))) -> Polly(x))", "all x y.((Polly(x) & Jompus(x)) | (-Tompus(y) | Lempus(y))))", "all x.(Polly(x) -> (Jompus(x) | -Zumpus(x) | Lempus(x)))", "(all x y.(Polly(x) -> Jompus(x)) & (Polly(y) -> -Zumpus(y)) | (Polly(y) -> Lempus(y))))", "(all x y.((Polly(x) & Jompus(x)) | (-Polly(y) & Zumpus(y))) | (-Polly(y) & Lempus(y))))", "(all x.(Polly(x) -> Jompus(x)) | (-Polly(x) & Zumpus(x)) | (-Polly(x) & Lempus(x))))", "(exists x.(Polly(x) & Jompus(x)) | exists y.(Polly(y) & -Tompus(y))) | exists z.(Polly(z) & Lempus(z))))", "all x y z.((Polly(x) & Jompus(x) & Polly(y) & Zumpus(z) & -Tompus(y)) -> (Lempus(x) & Lempus(y)))", "exists x.(Polly(x) & ((Jompus(x) & Polly(x)) | (-Zumpus(x) & Polly(x)))))", "all x y.((Polly(x) & Jompus(x)) | (-Tompus(y) | Lempus(y))))", "all x.(Polly(x) -> (Jompus(x) | -Zumpus(x) | Lempus(x)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Tompus(x)) | (Polly(x) -> Lempus(x))))", "exists x.(Polly(x) & ((Jompus(x) & Polly(x)) | -Zumpus(x)) | (Lempus(x)))))"]}
{"id": "prontoqa_train_1413", "nl": "Everything that is a tumpus, a wumpus, and a jompus is a grimpus and a brimpus and a yumpus.", "fol": "all x. ((tumpus(x) & wumpus(x) & jompus(x)) -> (grimpus(x) & brimpus(x) & yumpus(x)))", "prediction": ["all x.((Tumpus(x) | Wumpus(x) | Jompus(x)) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))", "all x y.((Tumpus(x) & Wumpus(x) & Jompus(y)) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Wumpus(x) | Jompus(x)) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) & Wumpus(x) & Jompus(x)) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))", "all x y.((Tumpus(x) & Wumpus(x) & Jompus(y)) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Wumpus(x) | Jompus(x)) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))", "(all x.((Tumpus(x) | Wompus(x)) & Jompus(x)) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))", "all x y.((Tumpus(x) & Wumpus(x) & Jompus(x)) -> (Smoothpus(y) & Brimpus(y) & Yumpus(y)))", "(all x.((Tumpus(x) | Wumpus(x) | Jompus(x))) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Wumpus(x) | Jompus(x)) -> (Smoothpus(x) & Brimpus(x) & Yumpus(x)))", "(all x.((Tumpus(x) | Wumpus(x) | Jompus(x)) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) & Wumpus(x) & Jompus(x)) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Wumpus(x) | Jompus(x)) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))", "all x.(Tumpus(x) & Wompus(x) & Jompus(x)) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Wumpus(x) | Jompus(x)) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Wompus(x) | Jompus(x)) -> (Smoothpus(x) & Brimpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1414", "nl": "Fae is a jompus.", "fol": "jompus(Fae)", "prediction": ["all x.(Fae(x) -> Jompus(x))", "Fae is a Jompus.", "(Jompus(Fae) & HasStorm(Fae))", "all x.(Fae(x) -> Jompus(x))", "(Jompus(Fae) & -Jompus(Fae))", "-Jompus(Fae)", "(Jimpus(Fae) & Jompus(Fae))", "all x.(Fae(x) -> Jompus(x))", "(Jompus(Fae) & HasFae(Fae))", "all x.(Fae(x) -> Jompus(x))", "(Jimpus(fee) & Jompus(fee))", "all x.(Fae(x) -> Jompus(x))", "All x.(Fae(x) -> Jompus(x))", "all x.(Fae(x) -> Jompus(x))", "all x.(Fae(x) -> Jompus(x))", "exists x.(Fae(x) & Jompus(x))"]}
{"id": "prontoqa_train_1415", "nl": "Everything that is a tumpus or a wumpus or a zumpus is a lempus, a gorpus, and an impus.", "fol": "all x. ((tumpus(x) | wumpus(x) | zumpus(x)) -> (lempus(x) & gorpus(x) & impus(x)))", "prediction": ["all x.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) & Gorpus(x) & Imperator(x)))", "all x.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) | Gorpus(x) | Imperator(x)))", "all x.(((Tumpus(x) | Wumpus(x) | Zumpus(x))) -> (Lempus(x) | Gorpus(x) | Impossible(x)))", "all x.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) & Gorpus(x) & Imperator(x)))", "all x y.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(y) | Gorpus(y) | Imperator(y)))", "all x.(((Tumpus(x) | Wumpus(x) | Zumpus(x))) -> (Lempus(x) & Gorpus(x) & Imperator(x)))", "all x.(Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) & Gorpus(x) & Imperator(x)))", "all x y.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(y) & Gorpus(y) & Imperator(y)))", "all x.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) | Gorpus(x) | Imperator(x)))", "(all x.((Tumpus(x) | Wumpus(x) | Zumpus(x))) -> (Lempus(x) | Gorpus(x) | Imperator(x)))", "all x.(Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) & Gorpus(x) & Issue(x)))", "(all x.((Tumpus(x) | Wumpus(x) | Zumpus(x))) -> (Lempus(x) & Gorpus(x) & Issue(x)))", "all x.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) & Gorpus(x) & Imperator(x)))", "all x.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) | Gorpus(x) | Imperator(x)))", "all x.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) & Gorpus(x) & Issue(x)))", "all x.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) | Gorpus(x) | Imperator(x)))"]}
{"id": "prontoqa_train_1416", "nl": "Everything that is a lorpus, a yumpus, or a gorpus is a wumpus and a jompus and a lempus.", "fol": "all x. ((lorpus(x) | yumpus(x) | gorpus(x)) -> (wumpus(x) & jompus(x) & lempus(x)))", "prediction": ["all x.((Lorpus(x) | Yumpus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x.((Lorpus(x) | Yumpus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x y.((Lorpus(x) | Yumpus(x) | Gorpus(x)) -> (Wumpus(y) & Jompus(y) & Lempus(y)))", "all x.((Lorpus(x) | Yampus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "(all x.((Lorpus(x) | Yumpus(x) | Gorpus(x))) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x y.((Lorpus(x) | Yumpus(x) | Gorpus(x)) -> (Wumpus(y) & Jompus(y) & Lempus(y)))", "all x.((Lorpus(x) | Yumpus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "(all x.((Lorpus(x) | Yumpus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x.((Wumpus(x) & Jompus(x) & Lempus(x)) -> (Lorpus(x) | Yumpus(x) | Gorpus(x)))", "all x.((Lorpus(x) | Yampus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x y.((Lorpus(x) | Yampus(x) | Gorpus(x)) -> (Wumpus(y) & Jompus(y) & Lempus(y)))", "all x.((Lorpus(x) | Yumpus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x.((Lorpus(x) | Yampus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x.(Lorpus(x) | Yumpus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x.((Lorpus(x) | Yumpus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x.((Lorpus(x) | Yampus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_1417", "nl": "Each gorpus is a wumpus, a sterpus, and a brimpus.", "fol": "all x. (gorpus(x) -> (wumpus(x) & sterpus(x) & brimpus(x)))", "prediction": ["all x.(Gorpus(x) -> (Wumpus(x) | Sterpus(x) | Brimpus(x)))", "(all x.(Gorpus(x) -> Wumpus(x)) & all y.(Sterpus(y) & all z.(Brimpus(z)) -> Brimpus(z))))", "all x y z.((Gorpus(x) & Wumpus(y) & Sterpus(z)) -> (Wumpus(x) | Sterpus(z) | Brimpus(z)))", "all x.(Gorpus(x) -> (Wumpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Gorpus(x) -> (Wumpus(x) & Sterpus(x) & Brimpus(x)))", "all x y z.((Gorpus(x) & Wumpus(y) & Sterpus(z)) -> (Wumpus(x) & Sterpus(y) & Brimpus(z)))", "(all x.(Gorpus(x) -> Wumpus(x)) & all y.(Sterepus(y) -> Brimpus(y)))", "(all x.(Gorpus(x) -> Wumpus(x)) & (Sterpus(x) & Brimpus(x)))", "all x.(Gorpus(x) -> (Wumpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Gorpus(x) -> (Wumpus(x) & Sterpus(x) & Brimpus(x)))", "all x.(Gorpus(x) -> (Wumpus(x) | Sterpus(x) | Brimpus(x)))", "exists x.(Gorpus(x) & Wumpus(x) & Sterepus(x) & Brimpus(x))", "(all x.(Gorpus(x) -> Wumpus(x)) & all y.(Sterpus(y) & All z.(Brimpus(z)) -> Brimpus(z))))", "all x.(Gorpus(x) -> (Wumpus(x) | Sterpus(x) | Brimpus(x)))", "exists x.(Gorpus(x) & Wumpus(x) & Sterus(x) & Brimpus(x))", "exists x.(Gorpus(x) & Wumpus(x) & Sterpus(x) & Brimpus(x))"]}
{"id": "prontoqa_train_1418", "nl": "Sally is a brimpus, an impus, or a lempus.", "fol": "(brimpus(Sally) | impus(Sally) | lempus(Sally))", "prediction": ["all x.(Sally(x) -> (Brimpus(x) | Imperator(x) | Lempus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Impossible(x) | Lempus(x)))", "(Brimpus(s) | Imperator(s) | Lempus(s)))", "(Brimpus(s) | Impossible(s) | Lempus(s))", "(Brimpus,Impossible(Sally) | Lempus(Sally))", "(all x.(Sally(x) -> Brimpus(x)) | (Impossible(x) | Lempus(x))))", "all x.(Sally(x) -> (Brimpus(x) | Imperative(x) | Lempus(x)))", "all x y.(Sally(x) -> (Brimpus(x) | Impossible(x) | Lempus(y)))", "all x.(Sally(x) -> (Brimpus(x) | Impossible(x) | Lempus(x)))", "exists x.(Sally(x) & ((Brimpus(x) | Impossible(x)) | Lempus(x))))", "exists x.(Sally(x) & ((Brimpus(x) & -Impossible(x)) | (-Impossible(x) & -Impossible(x)))))", "all x.(Sally(x) -> (Brimpus(x) | Issue(x) | Lempus(x)))", "all x.(Sally(x) -> (Brumpus(x) | Imperator(x) | Lempus(x)))", "exists x.(Sally(x) & ((Brimpus(x) | Imperator(x)) | Lempus(x))))", "all x.(Sally(x) -> (Brimpus(x) | Impossible(x) | Lempus(x)))", "all x.(Sally(x) -> (Brumpus(x) | Issue(x) | Lempus(x)))"]}
{"id": "prontoqa_train_1419", "nl": "Everything that is a sterpus or an impus or a numpus is a zumpus.", "fol": "all x. ((sterpus(x) | impus(x) | numpus(x)) -> zumpus(x))", "prediction": ["all x.((Sterpus(x) | Impossible(x) | Numpus(x)) -> Zumpus(x))", "all x.((Sterpus(x) | Imperator(x) | Numpus(x)) -> Zumpus(x))", "all x.(((Sterpus(x) | Impossible(x) | Numpus(x))) -> Zumpus(x))", "all x.((Sterepus(x) | Impossible(x) | Numpus(x)) -> Zumpus(x))", "all x.((Sterepus(x) | IsImpossible(x) | IsNumerus(x)) -> Zumpus(x))", "all x.((Sterpus(x) | Imperempt(x) | Numpus(x)) -> Zumpus(x))", "(all x.((Sterepus(x) | IsImpossible(x) | IsNumpus(x))) -> Zumpus(x))", "all x.(((Sterepus(x) | Imperator(x) | Numpus(x))) -> Zumpus(x))", "all x y.((Sterpus(x) | Imperator(x) | Numpus(x)) -> Zumpus(y))", "all x.(((Sterpus(x) | Impossible(x) | Numpus(x))) -> Zumpus(x))", "all x.((Sterpus(x) | IsImpossible(x) | IsNumpus(x)) -> Zumpus(x))", "all x.((Stereosis(x) | Impossible(x) | Numpus(x)) -> Zumpus(x))", "all x y.((Sterpus(x) | Impossible(x) | Numpus(x)) -> Zumpus(y))", "all x.((Sterpus(x) | Impossible(x) | Numpus(x)) -> Zumpus(x))", "all x.((Sterepus(x) | Impermiss(x) | Numpus(x)) -> Zumpus(x))", "all x.((Sterpus(x) | Imperempt(x) | Numpus(x)) -> Zumpus(x))"]}
{"id": "prontoqa_train_1420", "nl": "Rex is not a zumpus and Rex is a gorpus and Rex is a brimpus.", "fol": "(-zumpus(Rex) & gorpus(Rex) & brimpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Zumpus(x)) & (Gorpus(x) & Brimpus(x)))", "all x y z.((Rex(x) & Zumpus(y) & Gorpus(z)) -> (-Tompus(x) & Gorpus(x) & Brimpus(x)))", "(all x y z.((Rex(x) & Zumpus(y) & Gorpus(z)) -> -Tompus(x)) & ((Rex(x) & Brimpus(x)) -> Brimpus(x)))", "(all x.(Rex(x) -> -Zumpus(x)) & all y.(Gorpus(y) & all z.(Brimpus(z)) -> -Brimpus(z))))", "all x.(Rex(x) -> (-Zumpus(x) & Gorpus(x) & Brimpus(x)))", "all x y.((Rex(x) & Zumpus(y) & Gorpus(y)) -> (-Tompus(x) & Brimpus(x)))", "(-Zumpus(rex) & Gorpus(rex) & Brimpus(rex))", "all x y z.((Rex(x) & Zumpus(y) & Gorpus(z)) -> (-Zumpus(x) & Gorpus(x) & Brimpus(x)))", "all x y z.((Rex(x) & Zumpus(y) & Gorpus(z)) -> (-Tompus(x) & Brimpus(x)))", "(-Zumpus(re) & Gorpus(re) & Brimpus(re))", "(all x y.(Rex(x) -> -Zumpus(x)) & (Gorpus(y) & Brimpus(y)))", "(all x.(Rex(x) -> -Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & all z.(Rex(z) -> Brimpus(z))))", "(all x.(Rex(x) -> -Zumpus(x)) & (Gorpus(x) & Brimpus(x)))", "all x.(Rex(x) -> (-Zumpus(x) & Gorpus(x) & Brimpus(x)))", "all x y z.((Rex(x) & Zumpus(y) & Gorpus(z)) -> (-Tompus(x) & Gorpus(x) & Brimpus(x)))", "(all x.(Rex(x) -> -Zumpus(x)) & (Rex(x) -> Gorpus(x)) & (Rex(x) -> Brimpus(x)))"]}
{"id": "prontoqa_train_1421", "nl": "Wumpuses are gorpuses, grimpuses, and sterpuses.", "fol": "all x. (wumpus(x) -> (gorpus(x) & grimpus(x) & sterpus(x)))", "prediction": ["all x.(Wumpuse(x) -> (Gorpuse(x) | Grimpuse(x) | Sterpuse(x)))", "all x.(Wumpus(x) -> (Gorpuse(x) | Grimpuse(x) | Sterpuse(x)))", "(all x.(Wumpuse(x) -> (Gorpuse(x) | Grimpuse(x) | Sterpuse(x)))", "all x y z.((Wumpuse(x) & Gorpus(y) & Grimpus(z)) -> (Sterpuse(x) | Sterpuse(x)))", "all x.(Wumpus(x) -> (Gorpus(x) | Grimpus(x) | Sterpus(x)))", "all x.(Wumpuse(x) -> (Gorpuse(x) | Grimpuse(x) | Sterpuse(x)))", "all x y.((Wumpuse(x) & Gorpuse(y)) -> (Grimpuse(x) | Sterpuse(x)))", "(all x.(Wumpus(x) -> Gorpus(x)) & all y.(Grimpus(y) -> Sterpus(y)))", "(all x.(Wumpuse(x) -> (Gorpuse(x) | Grimpuse(x) | Sterpuse(x)))", "(all x.(Wumpuse(x) -> Gorpuse(x)) & all y.(Grimpuse(y) -> Sterpuse(y)))", "all x.(Wumpus(x) -> (Gorpuse(x) | Grimpuse(x) | Sterpuse(x)))", "all x.(Wumpuse(x) -> (Gorpuse(x) | Grimpuse(x) | Sterpuse(x)))", "(all x.(Wumpus(x) -> Gorpuse(x)) & all y.(Grimpus(y) -> Steruse(y)))", "all x.(Wumpus(x) -> (Gorpuse(x) | Grimpuse(x) | Sterpuse(x)))", "all x.(Wumpuse(x) -> (Gorpuse(x) | Grimpuse(x) | Sterpuse(x)))", "all x.(Wumpuse(x) -> (Gorpuse(x) | Grimpuse(x) | Sterpuse(x)))"]}
{"id": "prontoqa_train_1422", "nl": "Wren is not a grimpus, Wren is a shumpus, and Wren is an impus.", "fol": "(-grimpus(Wren) & shumpus(Wren) & impus(Wren))", "prediction": ["(all x.(Wren(x) -> -Grimpus(x)) & all y.(Wren(y) -> Shumpus(y)) & all z.(Wren(z) -> Imperator(z))))", "all x y z.((Wren(x) & Grimpus(y) & Shumpus(z)) -> (-Grimpus(x) & Shumpus(y) & Imperator(z)))", "(all x y z.((Wren(x) & Grimpus(y)) -> -Grimpus(x)) & ((Wren(z) & Humpus(z))) -> Imperator(z)))", "(all x.(Wren(x) -> -Grimpus(x)) & (Wren(x) -> Shumpus(x)) & (Wren(x) -> Imperator(x)))", "all x.(Wren(x) -> (-Grimpus(x) & Shumpus(x) & Imperator(x)))", "all x y z.((Wren(x) & Grimpus(y) & Shumpus(z)) -> (-Grimpus(x) & Shumpus(x) & Imperator(x)))", "(all x.(Wren(x) -> -Grimpus(x)) & all y.(Wren(y) -> Shumpus(y)) & all z.(Wren(z) -> Imperator(z))))", "(all x y z.((Wren(x) & Grimpus(y)) -> -Grimpus(x)) & ((Wren(z) & Humpus(z))) -> Issue(z)))", "all x y z.((Wren(x) & Shumpus(y) & Imperator(z)) -> (-Grimpus(x) & Shumpus(y) & Imperator(z)))", "all x y z.((Wren(x) & Grimpus(y) & Humpus(z) & Imperator(x)) -> (-Grimpus(x) & Shumpus(y) & Imperator(z)))", "(all x.(Wren(x) -> -Grimpus(x)) & (Wren(x) -> Humpus(x)) & (Wren(x) -> Imperator(x)))", "all x y z.((Wren(x) & Grimpus(y) & Shumpus(z)) -> (-Grimpus(x) & Shumpus(y) & Issue(z)))", "(all x.(Wren(x) -> -Grimpus(x)) | (Wren(x) -> Humpus(x))) | (Wren(x) -> Imperator(x))))", "(all x y z.((Wren(x) & Grimpus(y)) -> -Grimpus(x)) & ((Wren(z) & Humpus(z))) -> Impossible(z)))", "(all x.(Wren(x) -> -Grimpus(x)) & all y.(Wren(y) -> Shumpus(y)) & all z.(Wren(z) -> Issue(z))))", "all x y z.((Wren(x) & Grimpus(y) & Shumpus(z)) -> (-Grimpus(x) | Imperator(x)))"]}
{"id": "prontoqa_train_1423", "nl": "Every lempus is a numpus, a vumpus, and a wumpus.", "fol": "all x. (lempus(x) -> (numpus(x) & vumpus(x) & wumpus(x)))", "prediction": ["all x.(Lempus(x) -> (Numpus(x) | Vumpus(x) | Wumpus(x)))", "(all x.(Lempus(x) -> Numpus(x)) & all y.(Vumpus(y) -> Wumpus(y)))", "all x y z.((Lempus(x) & Numpus(y) & Vumpus(z) & Wumpus(x)) -> (Numpus(x) & Vumpus(y) & Wumpus(z)))", "all x.(Lempus(x) -> (Numpus(x) | Vumpus(x) | Wumpus(x)))", "all x.(Lempus(x) -> (Numpus(x) & Vumpus(x) & Wumpus(x)))", "all x y.((Lempus(x) & Numpus(y)) -> (Vumpus(x) & Wumpus(x)))", "(all x.(Lempus(x) -> Numpus(x)) & all y.(Vumpus(y) -> Wumpus(y)))", "all x.(Lempus(x) -> (numpus(x) | vumpus(x) | wumpus(x)))", "all x.(Lempus(x) -> (Numpus(x) | Vumpus(x) | Wumpus(x)))", "(all x.(Lempus(x) -> Numpus(x)) & all y.(Vimpus(y) -> Wumpus(y)))", "all x.(Limpus(x) -> (Numpus(x) | Vumpus(x) | Wumpus(x)))", "all x.(Lempus(x) -> (Numpus(x) & Vumpus(x) & Wumpus(x)))", "(all x.(Lempus(x) -> Numpus(x)) & (Vumpus(x) & Wumpus(x)))", "exists x.(Lempus(x) & Numpus(x) & Vumpus(x) & Wumpus(x))", "exists x.(Limpus(x) & Numpus(x) & Voompus(x) & Wumpus(x))", "all x.(Lempus(x) -> (Numpus(x) | Vumpus(x) | Wumpus(x)))"]}
{"id": "prontoqa_train_1424", "nl": "Rex is a rompus, a yumpus, or a numpus.", "fol": "(rompus(Rex) | yumpus(Rex) | numpus(Rex))", "prediction": ["all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x)))", "(all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x))))", "(Rompus(Rex) | Yumpus(Rex) | Numpus(Rex))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x)))", "(Rompus(rex) | Yumpus(rex) | Numpus(rex))", "(all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x))))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x)))", "all x y.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x)))", "exists x.(Rompus(x) | Yumpus(x) | Numpus(x))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Yampus(x) | Numpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x)))", "(all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Yampus(x) | Numpus(x)))"]}
{"id": "prontoqa_train_1425", "nl": "Numpuses are not rompuses.", "fol": "all x. (numpus(x) -> -rompus(x))", "prediction": ["all x.(Numpus(x) -> -Rompus(x))", "(all x.(Numpus(x) -> -Rompus(x)))", "all x.(Numpus(x) -> -Rompus(x))", "-Rompus(nupuse)", "(all x.(Numpus(x) -> -Rompus(x)))", "all x.(Numpus(x) -> -Rompus(x))", "-Rompus(numpuse)", "-rompus(nupuse)", "(all x.(Numpus(x) -> -Rompus(x)))", "all x.(Numpus(x) -> -rompus(x))", "all x.(Numpuse(x) -> -Rompus(x))", "all x.(Numpuse(x) -> -Rompus(x))", "all x.(Numpus(x) -> -rompus(x))", "all x.(Numpus(x) -> -Rompus(x))", "all x.(Numpus(x) -> -Rompus(x))", "all x.(Numpus(x) -> -rompus(x))"]}
{"id": "prontoqa_train_1426", "nl": "Vumpuses are rompuses.", "fol": "all x. (vumpus(x) -> rompus(x))", "prediction": ["all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x y.((Vumpus(x) & Rompus(y)) -> Is(x,y))", "(Rompus(v) & -Rompus(v))", "all x y.((Vumpus(x) & Rompus(y)) -> (Rompus(x) & Rompus(y)))", "all x.(Vumpus(x) -> Rompus(x))", "(Rompus(Vumpus) & Rompus(Vumpus))", "(all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Voluptus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpuse(x) -> Rompuse(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_1427", "nl": "Alex is a yumpus, Alex is a dumpus, or Alex is not a vumpus.", "fol": "(yumpus(Alex) | dumpus(Alex) | -vumpus(Alex))", "prediction": ["all x.(Alex(x) -> (Yumpus(x) | Dumpus(x) | -Vumpus(x)))", "(all x.(Alex(x) -> Yumpus(x)) | (Alex(x) -> Dumpus(x)) | (Alex(x) -> -Vumpus(x))))", "(yumpus(Alex) | Dumpus(Alex) | -Vumpus(Alex)))", "all x y.((Alex(x) & Yumpus(x)) | (Alex(y) & Dumpus(y)) | (Alex(x) & -Vumpus(x))))", "(all x.(Alex(x) -> Yumpus(x)) & (Alex(x) -> Dumpus(x)) | (Alex(x) -> -Vumpus(x))))", "all x.(Alex(x) -> (Yumpus(x) | Dumpus(x) | -Vumpus(x)))", "(yumpus) | Dumpus(y) | -Vumpus(y)))", "all x y z.((Alex(x) & Yumpus(y) & Dumpus(z)) | (-Yumpus(x) | -Vumpus(x))))", "exists x.(Alex(x) & ((Yumpus(x) & -Vumpus(x)) | (-Yumpus(x) & Dumpus(x))))", "(all x.(Alex(x) -> Yampus(x)) & (Alex(x) -> Dumpus(x)) | (Alex(x) -> -Vumpus(x))))", "all x y.((Alex(x) & Yumpus(x)) | (Alex(y) & Dumpus(y)) | (Alex(x) & -Vumpus(x))))", "all x.(Alex(x) -> (Yumpus(x) | Dumpus(x) | -Vumpus(x)))", "(all x.(Alex(x) -> Yumpus(x)) | (Alex(x) -> Dumpus(x)) | (Alex(x) -> -Vumpus(x))))", "all x.(Alex(x) -> (Yumpus(x) | Dumpus(x) | -Vumpus(x)))", "exists x.(Alex(x) & (Yumpus(x) | Dumpus(x) | -Vumpus(x)))", "exists x.(Alex(x) & (Yumpus(x) | Dumpus(x) | -Vumpus(x)))"]}
{"id": "prontoqa_train_1428", "nl": "Vumpuses are jompuses, rompuses, and tumpuses.", "fol": "all x. (vumpus(x) -> (jompus(x) & rompus(x) & tumpus(x)))", "prediction": ["all x.(Vumpus(x) -> (Jompuse(x) | Rompus(x) | Tumpus(x)))", "(all x.(Vumpuse(x) -> (Jompuse(x) | Rompus(x) | Tumpuse(x)))", "(all x.(Vumpus(x) -> Jompuse(x)) & all y.(Rompus(y) & all z.(Tumpus(z)) -> Tumpus(z))))", "all x y z.((Vumpuse(x) & Jompuse(y) & Rompus(z)) -> (Jumpus(x) | Tumpus(x)))", "all x.(Vumpuse(x) -> (Jompuse(x) | Rompus(x) | Tumpus(x)))", "all x.(Vumpus(x) -> (Jompuse(x) | Rompus(x) | Tumpus(x)))", "(Jompuse(v) | Rompus(v) | Tumpuse(v)))", "all x y z.((Vumpuse(x) & Jompuse(y) & Rompuse(z)) -> (Jumpus(x) | Tumpus(x)))", "(all x.(Vumpuse(x) -> Jompuse(x)) & all y.(Rompus(y) & all z.(Tumpus(z)) -> Tumpus(z))))", "(all x.(Vumpuse(x) -> (Jompuse(x) | Rompus(x) | Tumpus(x)))", "all x.(Vumpus(x) -> (Jompuse(x) | Rompus(x) | Tumpus(x)))", "all x.(Vumpuse(x) -> (Jompuse(x) | Rompus(x) | Tumpuse(x)))", "all x.(Vumpus(x) -> (Jumpus(x) | Rompus(x) | Tumpus(x)))", "all x.(Vumpus(x) -> (Jompuse(x) | Rompus(x) | Tumpuse(x)))", "all x.(Vumpuse(x) -> (Jompuse(x) | Rompuse(x) | Tumpuse(x)))", "all x.(Vumpuse(x) -> (Jompuse(x) | Rompus(x) | Tumpuse(x)))"]}
{"id": "prontoqa_train_1429", "nl": "Max is not a tumpus, Max is a wumpus, and Max is a yumpus.", "fol": "(-tumpus(Max) & wumpus(Max) & yumpus(Max))", "prediction": ["(all x.(Max(x) -> -Tumpus(x)) & (Max(x) -> Wumpus(x)) & (Max(x) -> Yumpus(x)))", "all x y z.((Max(x) & Tumpus(y) & Wumpus(z)) -> (-Tumpus(x) & -Wumpus(y) & -Yumpus(z)))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Wumpus(y))) & all z.(Max(z) -> Yumpus(z)))", "(all x y z.((Max(x) & Tumpus(y)) -> -Tumpus(x)) & ((Max(z) & Wumpus(z)) -> Yumpus(z)))", "all x.(Max(x) -> (-Tumpus(x) & Wumpus(x) & Yumpus(x)))", "all x y z.((Max(x) & Tumpus(y) & Wumpus(z)) -> (-Tumpus(x) & Wumpus(x) & Yumpus(x)))", "(-Tumpus(Max) & Wumpus(Max) & Yumpus(Max))", "(all x y z.((Max(x) & Tumpus(y) & Wumpus(z)) -> -Tumpus(x)) & ((Max(x) & Yumpus(x)) -> Wumpus(x)))", "(all x.(Max(x) -> -Tumpus(x)) & (Max(x) -> Wumpus(x)) & (Max(x) -> Yumpus(x)))", "all x.(Max(x) -> (-Tumpus(x) & Wumpus(x) & Yumpus(x)))", "all x y z.((Max(x) & Tumpus(y) & Wumpus(z)) -> (-Tumpus(x) & Wumpus(y) & Yumpus(z)))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Wumpus(y))) & all z.(Max(z) -> Yumpus(z)))", "(all x y z.((Max(x) & Tumpus(y) & Wumpus(z)) -> -Tumpus(x)) & ((Max(x) & Yumpus(x)) -> Wumpus(x)))", "all x y z.((Max(x) & Tumpus(y) & Wumpus(z)) -> (-Tumpus(x) & -Wumpus(x) & -Yumpus(x)))", "all x y z.((Max(x) & Tumpus(y) & Wumpus(z)) -> (-Tumpus(x) | (-Tumpus(x) & Wumpus(y) & Yumpus(z))))", "(all x.(Max(x) -> -Tumpus(x)) & (Max(x) -> Wumpus(x)) & (Max(x) -> Yumpus(x)))"]}
{"id": "prontoqa_train_1430", "nl": "Everything that is a rompus or a zumpus or a gorpus is a numpus.", "fol": "all x. ((rompus(x) | zumpus(x) | gorpus(x)) -> numpus(x))", "prediction": ["all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.(((Rompus(x) | Zumpus(x) | Gorpus(x))) -> Numpus(x))", "all x.(((Rompus(x) | Zumpus(x) | Gorpus(x))) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x y.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(y))", "all x y.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(y))", "(all x.((Rompus(x) | Zumpus(x) | Gorpus(x))) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Tompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.(((Rompus(x) | Zumpus(x) | Gorpus(x))) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))"]}
{"id": "prontoqa_train_1431", "nl": "Max is a brimpus, a grimpus, and a gorpus.", "fol": "(brimpus(Max) & grimpus(Max) & gorpus(Max))", "prediction": ["(all x.(Max(x) -> Brimpus(x)) & all y.(Grimpus(y) & -Grimpus(y)) & all z.(Max(z) -> Gorpus(z))))", "all x.(Max(x) -> (Brimpus(x) | Grimpus(x) | Gorpus(x)))", "(Brimpus(Max) | Grimpus(Max) | Gorpus(Max))", "(all x.(Max(x) -> Brimpus(x)) & (Grampus(x) -> Grimpus(x)) & (Gorpus(x) -> Gorpus(x)))", "all x y z.((Max(x) & Brimpus(y) & Grimpus(z)) -> (Brimpus(x) | Grimpus(z) | Gorpus(z)))", "(Brimpus(Max) & Grimpus(Max) & Gorpus(Max))", "all x.(Max(x) -> (Brimpus(x) | Grimpus(x) | Gorpus(x)))", "all x.(Mat Max(x) -> (Brimpus(x) | Grimpus(x) | Gorpus(x)))", "all x.(Max(x) -> (Brimpus(x) & Grimpus(x) & Gorpus(x)))", "(Brimpus,Brimpus,Grimpus,Gorpus)", "(all x.(Max(x) -> Brimpus(x)) & all y.(Grimpus(y) -> Gorpus(y)))", "(all x.(Max(x) -> Brimpus(x)) & all y.(Grampus(y) -> Grimpus(y)) & all z.(Max(z) -> Gorpus(z))))", "(All x.(Max(x) -> Brimpus(x)) & (Grimpus(x) & Gorpus(x)))", "all x.(Max(x) -> (Brimpus(x) | Grimpus(x) | Gorpus(x)))", "all x.(M Max(x) -> (Brimpus(x) | Grimpus(x) | Gorpus(x)))", "all x.(Max(x) -> (Brimpus(x) & Grimpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1432", "nl": "Everything that is a jompus, a rompus, or a yumpus is a tumpus.", "fol": "all x. ((jompus(x) | rompus(x) | yumpus(x)) -> tumpus(x))", "prediction": ["all x.((Jompus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "all x.((Jompus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "all x.((Jimpus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "all x.(((Jompus(x) | Rompus(x) | Yumpus(x))) -> Tumpus(x))", "all x.((Jompus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "all x y.((Jompus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(y))", "all x.((Meets(x,y) & (Jompus(y) | Rompus(y) | Yumpus(y))) -> Tumpus(x))", "all x.(((Jompus(x) | Rompus(x) | Yumpus(x))) -> Tumpus(x))", "all x.((Jimpus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "(all x.((Jompus(x) | Rompus(x) | Yumpus(x))) -> Tumpus(x))", "all x.((Jempus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "all x.((Jompus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "all x y.((Jompus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(y))", "all x.((Jompus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "all x.((Jimpus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "all x.((Hompus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))"]}
{"id": "prontoqa_train_1433", "nl": "Sam is a gorpus, Sam is a brimpus, and Sam is not a tumpus.", "fol": "(gorpus(Sam) & brimpus(Sam) & -tumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> -Tumpus(x)))", "all x y z.((Sam(x) & Gorpus(x) & Brimpus(y) & -Tumpus(z)) -> (Gorpus(x) & Brimpus(y) & -Tumpus(z)))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> -Tumpus(x)))", "(all x y z.((Sam(x) & Gorpus(x)) -> Gorpus(x)) & ((Sam(y) & Brimpus(y)) -> -Tumpus(z)))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> Brimpus(x)) & -Tumpus(x)))", "all x.(Sam(x) -> (Gorpus(x) | Brimpus(x) | -Tumpus(x)))", "all x y z.((Sam(x) & Gorpus(x) & Brimpus(y) & -Tumpus(z)) -> (Gorpus(x) & Brimpus(y) & -Tumpus(z)))", "all x y z.((Sam(x) & Gorpus(x) & Brimpus(y) & -Tumpus(z)) -> (Gorpus(x) & Brimpus(y) & -Tumpus(z)))", "(all x.(Sam(x) -> Gorpus(x)) & all y.(Sam(y) -> Brimpus(y)) & all z.(Sam(z) -> -Tumpus(z))))", "(all x.(SameDay(x) -> Gorpus(x)) & (SameDay(x) -> Brimpus(x)) & (SameDay(x) -> -Tumpus(x)))", "all x.(Sam(x) -> (Gorpus(x) & Brimpus(x) & -Tumpus(x)))", "exists x.(Sam(x) & Gorpus(x) & Brimpus(x) & -Tumpus(x))", "(all x y z.((Sam(x) & Gorpus(x)) -> Gorpus(x)) & ((Sam(y) & Brimpus(y)) -> -Tumpus(z)))", "all x y z.((Sam(x) & Gorpus(x) & Brimpus(y) & -Tumpus(z)) -> (Gorpus(x) & Brimpus(y) & -Tumpus(z)))", "(all x.(SameDay(x) -> Gorpus(x)) & (SameDay(x) -> Brimpus(x)) & (SameDay(x) -> -Tumpus(x)))", "all x y z.((Sam(x) & Gorpus(x) & Brimpus(y) & -Tumpus(z)) -> (Gorpus(x) | Brimpus(y) | Sam(z)))"]}
{"id": "prontoqa_train_1434", "nl": "Zumpuses are vumpuses, jompuses, and lorpuses.", "fol": "all x. (zumpus(x) -> (vumpus(x) & jompus(x) & lorpus(x)))", "prediction": ["all x.(Zumpus(x) -> (Vumpuse(x) | Jompuse(x) | Lorpuse(x)))", "(Vumpuse(z) | Jompuse(z) | Lorpuse(z)))", "(all x.(Zumpuse(x) -> (Vumpuse(x) | Jompuse(x) | Lorpuse(x)))", "all x y z.((Zumpuse(x) & Vampuse(y) & Jompuse(z)) -> (Vampuse(y) | Jompuse(z) | Lorpuse(z)))", "all x.(Zumpus(x) -> (Vampuse(x) | Jompuse(x) | Lorpuse(x)))", "all x.(Zumpus(x) -> (Vumpuse(x) | Jompuse(x) | Lorpuse(x)))", "all x y.((Zumpuse(x) & Vampuse(y) & Jompuse(y)) -> Lorpuse(x))", "(Vumpuse(z) | Jompuse(z) | Lorpuse(z)))", "all x.(Zumpuse(x) -> (Vumpuse(x) | Jompuse(x) | Lorpuse(x)))", "(all x.(Zumpuse(x) -> (Vumpuse(x) | Jompuse(x) | Lorpuse(x)))", "all x.(Zumpus(x) -> (Vampuse(x) | Jompuse(x) | Lorpuse(x)))", "all x.(Zumpus(x) -> (Vumpuse(x) | Jompuse(x) | Lorpuse(x)))", "(Vumpuse(z) | Jompuse(z) | Lorpuse(z)))", "all x.(Zumpuse(x) -> (Vumpuse(x) | Jompuse(x) | Lorpuse(x)))", "all x.(Zumpus(x) -> (Vumpuse(x) | Jompuse(x) | Lorpuse(x)))", "all x.(Zombie(x) -> (Vampuse(x) | Jompuse(x) | Lorpuse(x)))"]}
{"id": "prontoqa_train_1435", "nl": "Everything that is a sterpus, a rompus, and a shumpus is not a vumpus.", "fol": "all x. ((sterpus(x) & rompus(x) & shumpus(x)) -> -vumpus(x))", "prediction": ["all x.((Sterpus(x) | Rompus(x) | Humpus(x)) -> -Vumpus(x))", "all x.((Sterpus(x) | Rompus(x) | Humpus(x)) -> -Vumpus(x))", "all x.((Sterpus(x) | Rompus(x) | Shumpus(x)) -> -Vumpus(x))", "all x y.((Sterpus(x) & Rompus(y) & Shumpus(y)) -> -Vumpus(x))", "all x.(((Sterpus(x) | Rompus(x) | Shumpus(x))) -> -Vumpus(x))", "all x.((Sterpus(x) | Rompus(x) | Humpus(x)) -> -Vumpus(x))", "all x.((Sterepus(x) | Rompus(x) | Shumpus(x)) -> -Vumpus(x))", "all x.((Sterepus(x) & Rompus(x) & Shumpus(x)) -> -Vumpus(x))", "(all x.((Sterpus(x) | Rompus(x) | Humpus(x))) -> -Vumpus(x))", "all x.(((Sterepus(x) | Rompus(x) | Humpus(x))) -> -Vumpus(x))", "(all x.((Sterpus(x) | Rompus(x) | Humpus(x))) -> -Vumpus(x))", "all x.((Sterpus(x) | Rompus(x) | Humpus(x)) -> -Vumpus(x))", "(all x.((Sterepus(x) | Rompus(x) | Shumpus(x))) -> -Vumpus(x))", "all x.((Sterpus(x) & Rompus(x) & Humpus(x)) -> -Vumpus(x))", "(all x.((Sterpus(x) | Rompus(x) | Humpus(x))) -> -Vumpus(x))", "all x.((Sterepus(x) & Rompus(x) & Humpus(x)) -> -Vumpus(x))"]}
{"id": "prontoqa_train_1436", "nl": "Rex is a rompus.", "fol": "rompus(Rex)", "prediction": ["all x.(Rex(x) -> Rompus(x))", "Rex is a rompus.", "(Rompus(Rex) & -Rompus(Rex))", "all x.(Rompus(x) -> Rex(x))", "Rex is a Rompus.", "(Rompus(Rex) & Rompus(Rex))", "All x.(Rex(x) -> Rompus(x))", "all x.(Rompus(x) -> HasRex(x))", "Rex is a rompus.", "Rex is rompus.", "Rex.(Rompus(x) -> HasRex(x))", "(Rompus(Rex) & HasRex(Rex))", "All x.(Rex(x) -> Rompus(x))", "all x.(Rompus(x) -> Rex(x))", "(Rompus(Rex) & Rompus(Rex))", "All x.(Rex(x) -> Rompus(x))"]}
{"id": "prontoqa_train_1437", "nl": "Rex is not a zumpus.", "fol": "-zumpus(Rex)", "prediction": ["all x.(Rex(x) -> -Zumpus(x))", "Rex is not a zumpus.", "(-Zumpus(Rex))", "Rex is not zumpus.", "(-Zumpus(Rex))", "all x.(Rex(x) -> -Zumpus(x))", "Rex is not a zumpus.", "-Zombipus(Rex)", "Rex -Zumpus(x)", "(-Zumpus(Rex) & -Zombiac(Rex))", "all x.(Rex(x) -> -Zombipus(x))", "Rex is not zumpus.", "(-Zumpus(Rex))", "Rex is not a zumpus.", "-Zombipus(Rex)", "All x.(Rex(x) -> -Zumpus(x))"]}
{"id": "prontoqa_train_1438", "nl": "Everything that is a sterpus, an impus, or a rompus is a yumpus and a dumpus and a jompus.", "fol": "all x. ((sterpus(x) | impus(x) | rompus(x)) -> (yumpus(x) & dumpus(x) & jompus(x)))", "prediction": ["all x.((Sterpus(x) | Impossible(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Sterpus(x) | Imperator(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x y.((Sterpus(x) | Impossible(x) | Rompus(x)) -> (Yumpus(y) & Dumpus(y) & Jompus(y)))", "all x.((Sterpus(x) | Impossible(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Sterpus(x) | Impossible(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Stereos,Impossible,Rompus) & Yumpus(x) & Dumpus(x) & Jompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x y.((Sterpus(x) | Impossible(x) | Rompus(x)) -> (Yumpus(y) & Dumpus(y) & Jompus(y)))", "all x.((Sterpus(x) | Imperative(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "(all x.((Sterpus(x) | Impossible(x) | Rompus(x))) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Sterpus(x) | IsImpossible(x) | IsRompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Sterepus(x) | Impossible(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x y.((Sterpus(x) | Imperator(x) | Rompus(x)) -> (Yumpus(y) & Dumpus(y) & Jompus(y)))", "(all x.((Sterpus(x) | Impossible(x) | Rompus(x))) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Sterepus(x) | Imperempt(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Sterepus(x) | Impossible(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Starpus(x) | Impossible(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))"]}
{"id": "prontoqa_train_1439", "nl": "Everything that is a yumpus, a dumpus, and an impus is a tumpus and a grimpus and a lempus.", "fol": "all x. ((yumpus(x) & dumpus(x) & impus(x)) -> (tumpus(x) & grimpus(x) & lempus(x)))", "prediction": ["all x.((Yumpus(x) | Dumpus(x) | Impossible(x)) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.((Yumpus(x) | Dumpus(x) | Imperator(x)) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x y.((Yumpus(x) & Dumpus(x) & Impossible(x)) -> (Tumpus(y) & Grimpus(y) & Lempus(y)))", "all x.((Yumpus(x) & Dumpus(x) & Impossible(x)) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x y.((Yumpus(x) & Dumpus(x) & Imperator(x)) -> (Tumpus(y) & Grimpus(y) & Lempus(y)))", "all x.((Yumpus(x) | Dumpus(x) | Impossible(x)) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.((Yumpus(x) & Dumpus(x) & Imperator(x)) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "(all x.((Yumpus(x) | Dumpus(x) | Impossible(x))) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.(YumpusDumpusImpact(x) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.(Yumpus(x) & Dumpus(x) & Impossible(x)) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "(all x.(Yumpus(x) -> Dumpus(x)) & all y.(Impossible(y) -> Tumpus(y)) & all z.(Grimpus(z) -> Lempus(z)))", "all x.((Yumpus(x) | Dumpus(x) | Imperator(x)) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x y.((Yumpus(x) & Dumpus(x) & Impossible(x)) -> (Tumpus(y) & Grimpus(y) & Lempus(y)))", "(all x.((Yumpus(x) | Dumpus(x) | Impossible(x))) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.(Yumpus(x) & Dumpus(x) & Impermissible(x)) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.((Yumpus(x) | Dumpus(x) | Impossible(x)) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_1440", "nl": "Alex is an impus.", "fol": "impus(Alex)", "prediction": ["all x.(Alex(x) -> IsImpossible(x))", "Alex is a impus.", "all x.(Alex(x) -> IsImpossible(x))", "All x.(Alex(x) -> Implicator(x))", "Alex is a impus.", "Alex ist ein Issue.", "(Impossible(Alex))", "(Imposer(Alex)", "Alex is a impus.", "Alex is a impus(Alex)", "all x.(Alex(x) -> IsImpossible(x))", "All x.(Alex(x) -> Imperative(x))", "all x.(Alex(x) -> Impossible(x))", "Alex is imposed.", "All x.(Alex(x) -> Is(x,y))", "all x.(Alex(x) -> Impeccable(x))"]}
{"id": "prontoqa_train_1441", "nl": "Everything that is a grimpus and an impus and a gorpus is a tumpus.", "fol": "all x. ((grimpus(x) & impus(x) & gorpus(x)) -> tumpus(x))", "prediction": ["all x.((Smoky(x) & Impossible(x) & Gorpus(x)) -> Tumpus(x))", "all x.((Gruppus(x) & Imperator(x) & Gorpus(x)) -> Tumpus(x))", "all x.((Smooch(x) & IsImpossible(x) & IsGorpus(x)) -> Tumpus(x))", "all x y.((Smoky(x) & Impossible(x) & Gorpus(y)) -> Tumpus(x))", "all x.((Element(x) & Grimpus(x) & Imperator(x) & Gorpus(x)) -> Tumpus(x))", "all x y z.((Smooch(x) & Impossible(y) & Gorpus(z) & Grimpus(x) & Impossible(y) & Gorpus(z)) -> Tumpus(x))", "all x.((Fragus(x) & Imperator(x) & Gorpus(x)) -> Tumpus(x))", "all x.((Gruppus(x) & Imperator(x) & Gorpus(x)) -> Tumpus(x))", "all x.((Crupid(x) & Impossible(x) & Gorpus(x)) -> Tumpus(x))", "all x y.((Smoothpus(x) & Impossible(x) & Gorpus(y)) -> Tumpus(x))", "all x.((Grimpus(x) & Impossible(x) & Gorpus(x)) -> Tumpus(x))", "all x.((Grampus(x) & IsImpossible(x) & IsGorpus(x)) -> Tumpus(x))", "all x.((Smoothpus(x) & Impossible(x) & Gorpus(x)) -> Tumpus(x))", "(all x.((Grimpus(x) | Imperator(x) | Gorpus(x))) -> Tumpus(x))", "all x.((Gruppus(x) | Impossible(x) | Gorpus(x)) -> Tumpus(x))", "(all x.((Grimpus(x) | Impossible(x)) & Gorpus(x)) -> Tumpus(x))"]}
{"id": "prontoqa_train_1442", "nl": "Max is a yumpus, Max is a grimpus, and Max is not a tumpus.", "fol": "(yumpus(Max) & grimpus(Max) & -tumpus(Max))", "prediction": ["(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Grimpus(x)) & -Tumpus(x)))", "all x y z.((Max(x) & Yumpus(y) & Grimpus(z)) -> (Yumpus(x) & -Tumpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Grimpus(x)) & (Max(x) -> -Tumpus(x)))", "all x.(Max(x) -> (Yumpus(x) & Grimpus(x) & -Tumpus(x)))", "(all x y z.((Max(x) & Yumpus(y)) -> (Yumpus(z) | Grimpus(z))) & ((Max(x) & -Tumpus(x)) -> (Yumpus(x) & Grimpus(x))))", "all x y z.((Max(x) & Yumpus(y) & Grimpus(z)) -> (Yumpus(x) & -Tumpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Grimpus(y)) & all z.(Max(z) -> -Tumpus(z))))", "(all x y z.((Max(x) & Yumpus(y) & Grimpus(z)) -> (Yumpus(x) | Grimpus(z)) | -Tumpus(z)))", "(yumpus(x) | grimpus(x) | -tumpus(x)))", "(all x.(Max(x) -> Yampus(x)) & (Max(x) -> Grimpus(x)) & (Max(x) -> -Tumpus(x)))", "all x y z.((Max(x) & Yampus(x) & Grimpus(y) & -Tumpus(z)) -> (Yumpus(x) | Grimpus(y) & -Tumpus(z)))", "all x.(Max(x) -> (Yumpus(x) & Grimpus(x) & -Tumpus(x)))", "all x y z.((Max(x) & Yumpus(y) & Grimpus(z)) -> (Yumpus(x) | -Tumpus(x)))", "all x y z.((Max(x) & Yumpus(y) & Grapple(z)) -> (Yumpus(x) & -Tumpus(x)))", "(all x.(Max(x) -> Yampus(x)) & (Max(x) -> Grimpus(x)) & -Tumpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Grimpus(y)) & all z.(Max(z) -> -Tumpus(z))))"]}
{"id": "prontoqa_train_1443", "nl": "Everything that is a brimpus, a numpus, or a zumpus is a sterpus and a vumpus and a lorpus.", "fol": "all x. ((brimpus(x) | numpus(x) | zumpus(x)) -> (sterpus(x) & vumpus(x) & lorpus(x)))", "prediction": ["all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(x) & Vumpus(x) & Lorpus(x)))", "all x.(((Brimpus(x) | Numpus(x) | Zumpus(x))) -> (Sterpus(x) & Vumpus(x) & Lorpus(x)))", "all x y.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(y) & Vumpus(y) & Lorpus(y)))", "(all x.((Brimpus(x) | Numpus(x) | Zumpus(x))) -> Sterpus(x)) & all y.((Vumpus(y) & Lorpus(y)) -> Sterpus(y)))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Stereopus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(x) & Vumpus(x) & Lorpus(x)))", "all x y.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(y) & Vumpus(y) & Lorpus(y)))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(x) & Vumpus(x) & Lorpus(x)))", "all x y.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Stereopus(y) & Vumpus(y) & Lorpus(y)))", "(all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> Sterpus(x)) & all y.((Vumpus(y) & Lorpus(y)) -> Sterpus(y)))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(x) & Vumpus(x) & Lorpus(x)))", "(all x.((Brimpus(x) | Numpus(x) | Zumpus(x))) -> SterpusAndVumpusAndLorpus(x))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterepus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Brumpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Stereopus(x) & Vumpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_train_1444", "nl": "Each jompus is a lorpus and a wumpus and a grimpus.", "fol": "all x. (jompus(x) -> (lorpus(x) & wumpus(x) & grimpus(x)))", "prediction": ["all x.(Jompus(x) -> (Lorpus(x) & Wumpus(x) & Grimpus(x)))", "(all x.(Jompus(x) -> Lorpus(x)) & all y.(Wumpus(y) & All z.(Grimpus(z))) -> Grimpus(z)))", "all x y.((Jompus(x) & Lorpus(y)) -> (Lorpus(x) & Wumpus(x) & Grimpus(x)))", "all x.(Jompus(x) -> (Lorpus(x) & Wumpus(x) & Grimpus(x)))", "all x y z.(Jompus(x) -> (Lorpus(x) & Wumpus(y) & Grimpus(z)))", "(all x.(Jompus(x) -> Loomis(x)) & all y.(Wumpus(y) & All z.(Grimpus(z))) -> Grimpus(z)))", "exists x.(Jimpus(x) & Lorpus(x) & Wumpus(x) & Grimpus(x))", "(all x.(Jompus(x) -> Lorpus(x)) & all y.(Wumpus(y) & All z.(Grimpus(z)) -> Grimpus(z))))", "all x.(Jompus(x) -> (Lorpus(x) & Wumpus(x) & Grimpus(x)))", "(all x.(Jompus(x) -> Lorpus(x)) & (Wumpus(x) | Grimpus(x)))", "all x y.((Jompus(x) & Lorpus(y)) -> (Lorpus(x) & Wumpus(x) & Grimpus(x)))", "all x.(Jompus(x) -> (Lorpus(x) | Wumpus(x) | Grimpus(x)))", "exists x.(Jompus(x) & Lorpus(x) & Wumpus(x) & Grimpus(x))", "all x.(Jompus(x) -> (Lorph(x) & Wumpus(x) & Grimpus(x)))", "all x.(Jompus(x) -> (Lorpus(x) & Wumpus(x) & Grimpus(x)))", "exists x.(Jompus(x) & Lorpus(x) & Wumpus(x) & Grimpus(x))"]}
{"id": "prontoqa_train_1445", "nl": "Rex is an impus, Rex is not a grimpus, and Rex is a numpus.", "fol": "(impus(Rex) & -grimpus(Rex) & numpus(Rex))", "prediction": ["(all x.(Rex(x) -> Issuel(x)) & (Rex(x) -> -Grimpus(x)) & (Rex(x) -> Numpus(x)))", "(all x.(Rex(x) -> Impossible(x)) & (Rex(x) -> -Grimpus(x)) & (Rex(x) -> Numpus(x)))", "all x y z.((Rex(x) & Impossible(x) & Grimpus(y) & Numpus(z)) -> (-Impossible(x) & -Grimpus(y) & Numpus(z)))", "(all x y z.((Rex(x) & Impossible(x)) -> Rex(y)) & ((Rex(z) & -Grimpus(z))) -> Numpus(z)))", "(all x.(Rex(x) -> Issue(x)) & (Rex(x) -> -Grimpus(x)) & (Rex(x) -> Numpus(x)))", "all x y z.((Rex(x) & Impossible(x) & Grimpus(y) & Numpus(z)) -> (Impossible(x) & -Grimpus(y) & Numpus(z)))", "(all x y z.((Rex(x) & Is(x,y)) -> Impossible(x)) & ((Rex(y) & -Grimpus(y)) -> Numpus(z)))", "all x.(Rex(x) -> (Impossible(x) | -Grimpus(x) | Numpus(x)))", "all x y z.((Rex(x) & Imperator(y) & Grimpus(z)) -> (Impossible(x) & -Grimpus(y) & Numpus(z)))", "(all x y z.((Rex(x) & Impossible(x)) -> (Rex) & -Grimpus(y)) & ((Rex(z) & Numpus(z))) -> (Rex) & Numpus(z))))", "(all x.(Rex(x) -> Impeccable(x)) & (Rex(x) -> -Grimpus(x)) & (Rex(x) -> Numpus(x)))", "(all x.(Rex,Impossible(x) -> Rex)) & (Rex,Grimpus) -> -Grimpus(x)) & (Rex,numpus)))", "(all x.(Rex) -> Issuel(x)) & (Rex(x) -> -Grimpus(x)) & (Rex(x) -> Numpus(x)))", "all x y z.((Rex(x) & Impossible(x) & Rex(y) & Grimpus(z)) -> (-Grimpus(y) & Numpus(z)))", "all x.(Rex(x) -> (Impossible(x) & -Grimpus(x) & Numpus(x)))", "all x y z.((Rex(x) & Imperator(y) & Grimpus(z)) -> (Impossible(x) & -Grimpus(y) & Numpus(z)))"]}
{"id": "prontoqa_train_1446", "nl": "Everything that is a numpus and a gorpus and a rompus is a wumpus.", "fol": "all x. ((numpus(x) & gorpus(x) & rompus(x)) -> wumpus(x))", "prediction": ["all x.((Nompus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.((Numpus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x y.((Numpus(x) & Gorpus(y) & Rompus(y)) -> Wumpus(x))", "all x y z.((Numpus(x) & Gorpus(y) & Rompus(z) & Has(x,y) & Has(x,z)) -> Wumpus(x))", "(all x.((Nompus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.((Nompus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.((Numpus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.((Nompus(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "(all x.((Numpus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x y.((Nompus(x) & Gorpus(y) & Rompus(y)) -> Wumpus(x))", "all x.((Numpus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.((Nompus(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Numpus(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Numpus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.((Numpus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.((Numpus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))"]}
{"id": "prontoqa_train_1447", "nl": "Max is a tumpus or a wumpus or a grimpus.", "fol": "(tumpus(Max) | wumpus(Max) | grimpus(Max))", "prediction": ["all x.(Max(x) -> (Tumpus(x) | Wumpus(x) | Grimpus(x)))", "(Tumpus(Max) | Wumpus(Max) | Grimpus(Max))", "all x.(Max(x) -> (Tumpus(x) | Wumpus(x) | Grimpus(x)))", "((Max(Max) & Tumpus(Max)) | (Wumpus(Max) | Grimpus(Max))))", "(all x.(Max(x) -> Tumpus(x)) | (Max(x) -> Wumpus(x)) | Max(x) -> Grimpus(x)))", "(Tumpus(Max) | Wumpus(Max) | Grimpus(Max))", "all x.(Max(x) -> (Tumpus(x) | Wumpus(x) | Grimpus(x)))", "(all x.(Max(x) -> Tumpus(x)) | (Wumpus(x) | Grimpus(x))))", "all x.(Mat Max(x) -> (Tumpus(x) | Wumpus(x) | Grimpus(x)))", "(Tumpus,Wumpus,Grimpus)", "all x.(Max(x) -> (Tumpus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Max(x) -> ((Tumpus(x) | Wumpus(x) | Grimpus(x))))", "all x.(Max(x) -> (Tumpus(x) | Wumpus(x) | Grimpus(x)))", "exists x.(Tumpus(x) | Wumpus(x) | Grimpus(x))", "all x.(Max(x) -> (Tumpus(x) | Wumpus(x) | Gruppus(x)))", "all x.(Max(x) -> (Tumpus(x) | Wumpus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1448", "nl": "Everything that is a zumpus, an impus, or a yumpus is not a jompus.", "fol": "all x. ((zumpus(x) | impus(x) | yumpus(x)) -> -jompus(x))", "prediction": ["all x.((Tompus(x) | Impossible(x) | Yumpus(x)) -> -Jompus(x))", "all x.((Tompus(x) | Imperator(x) | Yumpus(x)) -> -Jompus(x))", "(all x.((Tompus(x) | Impossible(x) | Yumpus(x))) -> -Jompus(x))", "all x.((Tompus(x) | IsImpossed(x) | IsYumpus(x)) -> -Jompus(x))", "all x.((Tompus(x) | Impossible(x) | Yumpus(x)) -> -Jompus(x))", "all x y.((Tompus(x) | Impossible(x) | Yumpus(x)) -> -Jompus(y))", "all x.((Zumpus(x) | Imperative(x) | Yumpus(x)) -> -Jompus(x))", "(all x.((Tompus(x) | Impossible(x) | Yumpus(x))) -> -Jumpus(x))", "all x.((Tompus(x) | IsImpossed(x) | IsYumpus(x)) -> -Jompus(x))", "all x.((Tompus(x) | IsImpossible(x) | IsYumpus(x)) -> -Jompus(x))", "all x.((Tompus(x) | Impossible(x) | Yumpus(x)) -> -Jumpus(x))", "all x.((Zumpus(x) | Imperempt(x) | Yumpus(x)) -> -Jumpus(x))", "(all x.((Tompus(x) | Imperator(x) | Yumpus(x))) -> -Jumpus(x))", "all x.((Zumpus(x) | Imperium(x) | Yumpus(x)) -> -Jompus(x))", "all x.((Zumpus(x) | Impossible(x) | Yumpus(x)) -> -Jompus(x))", "all x.((Tommus(x) | Impossible(x) | Yumpus(x)) -> -Jompus(x))"]}
{"id": "prontoqa_train_1449", "nl": "Everything that is a gorpus, a rompus, or a shumpus is a jompus.", "fol": "all x. ((gorpus(x) | rompus(x) | shumpus(x)) -> jompus(x))", "prediction": ["all x.((Gorpus(x) | Rompus(x) | Humpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Humpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Shumpus(x)) -> Jompus(x))", "all x y.((Gorpus(x) | Rompus(x) | Shumpus(x)) -> Jompus(y))", "(all x.((Gorpus(x) | Rompus(x) | Humpus(x))) -> Jompus(x))", "all x y.((Gorpus(x) | Rompus(x) | Humpus(x)) -> Jompus(y))", "all x.((Gorpus(x) | Rompus(x) | Humpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Shumpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Humpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Shumpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Humpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Shumpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Humpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Romas(x) | Shumpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Humpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Romanus(x) | Humpus(x)) -> Jompus(x))"]}
{"id": "prontoqa_train_1450", "nl": "Stella is an impus.", "fol": "impus(Stella)", "prediction": ["Stella is a impus.", "all x.(Stella(x) -> Is(x,y))", "(Impossible(Stella) & -Impossible(Stella))", "Stella is a impus.", "Stella is a impus(Stella)", "All x.(Stella(x) -> Imperative(x))", "Stella ist ein Issue.", "(Impossible(Stella) & -Impossible(Stella))", "Stella ist ein Issue(Stella)", "all x.(Stella(x) -> Is(x,y))", "Stella ist ein Isolator(Stella)", "Stella is a impus.", "Stella is a impuse.", "(Impossible(Stella)", "Stella is impus.", "Stella is a impus."]}
{"id": "prontoqa_train_1451", "nl": "Each rompus is a numpus, a gorpus, and a zumpus.", "fol": "all x. (rompus(x) -> (numpus(x) & gorpus(x) & zumpus(x)))", "prediction": ["all x.(Rompus(x) -> (Numpus(x) & Gorpus(x) & Zumpus(x)))", "(all x.(Rompus(x) -> Numpus(x)) & all y.(Gorpus(y) & all z.(Tompus(z) -> Zumpus(z))))", "(all x.(rompus(x) -> Numpus(x)) & all y.(rompus(y) -> Gorpus(y)) & all z.(rompus(z) -> Zumpus(z)))", "all x.(Rompus(x) -> (Numpus(x) | Gorpus(x) | Zumpus(x)))", "all x.(rompus(x) -> (Numpus(x) | Gorpus(x) | Zumpus(x)))", "all x y.((Rompus(x) & Numpus(y)) -> (Gorpus(x) & Zumpus(x)))", "(all x.(Rompus(x) -> Numpus(x)) & all y.(Gorpus(y) & all z.(Zumpus(z)) -> Zumpus(z)))", "all x.(Rompus(x) -> (numpus(x) | gorpus(x) | zumpus(x)))", "all x y z.(Rompus(x) -> (Numpus(y) | Gorpus(y) | Zumpus(z)))", "(all x.(Rompus(x) -> Numpus(x)) & all y.(Rompus(y) -> Gorpus(y)) & all z.(Rompus(z) -> Zumpus(z)))", "exists x.(rompus(x) & Numpus(x) & Gorpus(x) & Zumpus(x))", "all x.(Rompus(x) -> (Numpus(x) | Gorpus(x) | Zumpus(x)))", "all x.(Rompus(x) -> (Numpus(x) & Gorpus(x) & Zumpus(x)))", "exists x.(rompus(x) & (Numpus(x) | Gorpus(x) | Zumpus(x)))", "exists x.(rompus(x) & Numpus(x) & Gorpus(x) & Zumpus(x))", "all x.(Rompus(x) -> (Numpus(x) | Gorpus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1452", "nl": "Sally is a rompus.", "fol": "rompus(Sally)", "prediction": ["all x.(Rompus(x) -> Sally(x))", "Sally is a rompus.", "all x.(Sally(x) -> Rompus(x))", "(Rompus(Sally) & -Rompus(Sally))", "Sally is a rompus.", "all x.(Rompus(x) -> Sally(x))", "Sally is a Rompus.", "(Rompus(Sally) & Has(Sally,Sally))", "all x.(Sally(x) -> Rompus(x))", "Sally is rompus.", "(Rompus(Sally) & -Rompus(Sally))", "All x.(Sally(x) -> Rompus(x))", "all x.(Rompus(x) -> Sally(x))", "Sally is a rompus.", "Sally (rompus)", "Sally is rompus."]}
{"id": "prontoqa_train_1453", "nl": "Sally is a gorpus, an impus, or a brimpus.", "fol": "(gorpus(Sally) | impus(Sally) | brimpus(Sally))", "prediction": ["all x.(Sally(x) -> (Gorpus(x) | Imperator(x) | Brimpus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Imperempt(x) | Brimpus(x)))", "(Gorpus(s) | Imperator(s) | Brimpus(s))", "(Gorpus,Impossible(Sally) | Brimpus(Sally))", "all x.(Sally(x) -> (Gorpus(x) | Impossible(x) | Brimpus(x)))", "(Gorpus, Issuel, Brimpus)", "(Gorpus,Impossible(Sally) | Brimpus(Sally))", "all x y.(Sally(x) -> (Gorpus(x) | Imperator(x) | Brimpus(y)))", "all x.(Sally(x) -> (Gorpus(x) | Imperative(x) | Brimpus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Impossible(x) | Brimpus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Issue(x) | Brimpus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Imperium(x) | Brimpus(x)))", "exists x.(Sally(x) & (Gorpus(x) | Impossible(x) | Brimpus(x)))", "exists x.(Sally(x) & ((Gorpus(x) | Imperator(x)) | Brimpus(x))))", "all x.(Sally(x) -> (Gorpus(x) | Issue(x) | Brimpus(x)))", "exists x.(Sally(x) & (Gorpus(x) | Imperator(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_1454", "nl": "Everything that is a yumpus, a tumpus, and a brimpus is a jompus and a sterpus and an impus.", "fol": "all x. ((yumpus(x) & tumpus(x) & brimpus(x)) -> (jompus(x) & sterpus(x) & impus(x)))", "prediction": ["all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jompus(x) & Sterpus(x) & Imperator(x)))", "all x y.((Yumpus(x) & Tumpus(x) & Brimpus(x)) -> (Jompus(y) & Sterpus(y) & Imperator(y)))", "all x y z.((Yumpus(x) & Tumpus(y) & Brimpus(z) & IsYumpus(x) & IsTumpus(y) & IsBrimpus(z)) -> (Jompus(x) & IsSterepus(x) & IsIssue(x)))", "all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jompus(x) & Sterpus(x) & Impossible(x)))", "all x.((Yumpus(x) & Tumpus(x) & Brimpus(x)) -> (Jompus(x) & Sterpus(x) & Imperator(x)))", "all x y.((Yumpus(x) & Tumpus(x) & Brimpus(x)) -> (Jompus(y) & Sterpus(y) & Impossible(y)))", "(all x.(Yumpus(x) -> (Tumpus(x) & Brimpus(x))) & all y.(Sterpus(y) -> (Jompus(y) & Sterpus(y) & Imperator(y))))", "(all x.((Yumpus(x) | Tumpus(x) | Brimpus(x))) -> (Jompus(x) & Sterpus(x) & Issue(x)))", "all x y.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jompus(y) & Sterpus(y) & Impossible(y)))", "all x.(Yumpus(x) & Tumpus(x) & Brimpus(x)) -> (Jompus(x) & Sterpus(x) & Imperator(x)))", "all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jompus(x) & Sterpus(x) & Imperator(x)))", "all x.(Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jompus(x) & Sterpus(x) & Issue(x)))", "all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jumpus(x) & Sterpus(x) & Imperator(x)))", "all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jompus(x) & Sterpus(x) & Issue(x)))", "(all x.((Yumpus(x) | Tumpus(x) | Brimpus(x))) -> (Jompus(x) & Sterpus(x) & Imperator(x)))", "all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jimpus(x) & Sterpus(x) & Impossible(x)))"]}
{"id": "prontoqa_train_1455", "nl": "Everything that is a lorpus, a rompus, and a lempus is a vumpus.", "fol": "all x. ((lorpus(x) & rompus(x) & lempus(x)) -> vumpus(x))", "prediction": ["all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "all x y.((Lorpus(x) & Rompus(y) & Lempus(y)) -> Vumpus(x))", "all x y z.((Lorpus(x) & Rompus(y) & Lempus(z) & Is(x,y) & Is(x,z)) -> Vumpus(x))", "all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Rompus(x) & Lempus(x)) -> Vumpus(x))", "all x.(((Lorpus(x) | Rompus(x) | Lempus(x))) -> Vumpus(x))", "all x y.((Lorpus(x) & Rompus(y) & Lempus(x)) -> Vumpus(x))", "(all x.((Lorpus(x) | Rompus(x) | Lempus(x))) -> Vumpus(x))", "all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "(all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Rompus(x) & Lempus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vulpis(x))"]}
{"id": "prontoqa_train_1456", "nl": "Each lorpus is not an impus.", "fol": "all x. (lorpus(x) -> -impus(x))", "prediction": ["all x.(Lorpus(x) -> -Impossible(x))", "all x.(Lorpus(x) -> -Impossible(x))", "(-Impossible(lorpus,lorpus))", "all x.(Lorpus(x) -> -Issue(x))", "(-Impossible(lorpus,lorpus))", "-Illegal(lorpus)", "exists x.(lorpus(x) & -Impossible(x))", "all x.(Lorpus(x) -> -Impossible(x))", "-IsLorpus(lorpus,lorpus)", "all x.(Lorpus(x) -> -Issue(x))", "all x.(Lorpus(x) -> -Illegal(x))", "all x.(Larpus(x) -> -Issued(x))", "all x.(Lorpus(x) -> -Impossible(x))", "all x.(Lorpus(x) -> -Illegal(x))", "exists x.(Lorpus(x) & -Ilimination(x))", "all x.(Larpus(x) -> -Impossible(x))"]}
{"id": "prontoqa_train_1457", "nl": "Stella is a zumpus and a rompus and a jompus.", "fol": "(zumpus(Stella) & rompus(Stella) & jompus(Stella))", "prediction": ["all x.(Stella(x) -> (Tompus(x) & Rompus(x) & Jompus(x)))", "(all x.(Stella(x) -> Zumpus(x)) & (Rompus(x) | Jompus(x))))", "(Tompus(Stella) & Rompus(Stella) & Jompus(Stella))", "all x y.((Stella(x) & Zumpus(y)) -> (Rompus(x) & Jompus(x)))", "(all x.(Stella(x) -> Zumpus(x)) & all y.(Rompus(y) & -Jompus(y))))", "(all x.(Stella(x) -> Tossus(x)) & all y.(Rompus(y) & All z.(Jompus(z))) -> Tossus(x)))", "all x y z.((Stella(x) & Zumpus(y) & Rompus(z)) -> (Tompus(x) & Rompus(y) & Jompus(z)))", "all x.(Stella(x) -> (Tompus(x) & Rompus(x) & Jompus(x)))", "(Tompus(Stella) | Rompus(Stella) | Jompus(Stella)))", "all x.(Stella(x) -> (Tompus(x) | Rompus(x) | Jompus(x)))", "(Tompus,rompus,jompus)", "all x.(Stella(x) -> (Tompus(x) & Rompus(x) & Jompus(x)))", "(all x.(Stella(x) -> Zumpus(x)) & (Rompus(x) & Jompus(x)))", "exists x.(Stella(x) & Zumpus(x) & Rompus(x) & Jompus(x))", "all x.(Stella(x) -> (Tompus(x) | Rompus(x) | Jompus(x)))", "exists x.(Stella(x) & Zumpus(x) & Rompus(x) & Jompus(x))"]}
{"id": "prontoqa_train_1458", "nl": "Stella is a vumpus and Stella is not a gorpus and Stella is a zumpus.", "fol": "(vumpus(Stella) & -gorpus(Stella) & zumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Vumpus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Zumpus(x)))", "all x y z.((Stella(x) & Vumpus(x) & Stella(y) & Zumpus(z)) -> (-Vumpus(y) & -Gorpus(y) & -Zumpus(z)))", "(all x.(Vumpus(x) -> Stella)) & (-Gorpus(x) -> Stella)) & (-Vumpus(x) -> Stella)) & (-Vumpus(x) -> Stella)) & (-Vumpus(x) -> Stella)) & (-Vumpus(x) -> Stella))", "all x y.((Stella(x) & Vumpus(x) & Stella(y)) -> (-Gorpus(y) & Zumpus(y)))", "(all x y.(Vumpus(x) -> Stella(x)) & (-Gorpus(y) -> Stella(y))) & (-Vumpus(y) -> Stella(y)) & (-Vumpus(y) -> Stella(y)) & (-Vumpus(y) -> Stella(y)) & (-Vumpus(y) -> Stella(y)))", "(all x.(Vumpus(x) -> Stella(x)) & (-Gorpus(x) -> Stella(x)) & (-Vumpus(x) -> Stella(x)) & (-Vumpus(x) -> Stella(x)) & (-Vumpus(x) -> Stella(x)) & (-Vumpus(x) -> Stella(x)))", "(all x y z.((Stella(x) & Vumpus(x) & -Gorpus(y)) -> Vumpus(x)) & ((Stella(z) & Zumpus(z)) -> Zumpus(z)))", "all x y z.((Stella(x) & Vumpus(x) & Stella(y) & Zumpus(z)) -> (-Gorpus(y) & -Vumpus(y) & Zumpus(z)))", "all x.(Stella(x) -> (Vumpus(x) & -Gorpus(x) & Zumpus(x)))", "(all x y.(Vumpus(x) & Vumpus(y)) & (-Gorpus(y) & Zumpus(y)))", "(all x.(Stella(x) -> Vumpus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Zumpus(x)))", "all x.(Stella(x) -> (Vumpus(x) & -Gorpus(x) & Zumpus(x)))", "all x y.((Stella(x) & Vumpus(x) & Stella(y) & -Gorpus(y)) -> Zumpus(y))", "exists x.(Vumpus(x) & -Gorpus(x) & Zumpus(x))", "all x y z.((Stella(x) & Vumpus(x) & Stella(y) & Gorpus(z)) -> (-Vumpus(y) & Zumpus(z)))", "(all x.(Stella(x) -> Vumpus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Zumpus(x)))"]}
{"id": "prontoqa_train_1459", "nl": "Each wumpus is a tumpus and a rompus and a gorpus.", "fol": "all x. (wumpus(x) -> (tumpus(x) & rompus(x) & gorpus(x)))", "prediction": ["all x.(Wumpus(x) -> (Tumpus(x) & Rompus(x) & Gorpus(x)))", "all x y.((Wumpus(x) & Tompus(y)) -> (Rompus(x) & Gorpus(x)))", "(all x.(Wumpus(x) -> Tumpus(x)) & all y.(Rompus(y) & all z.(Gorpus(z)) -> Wormpus(x)))", "all x y z.((Wumpus(x) & Tumpus(y) & Rompus(z)) -> (Tumpus(x) & Rompus(z) & Gorpus(z)))", "all x.(Wumpus(x) -> (Tumpus(x) & Rompus(x) & Gorpus(x)))", "all x y.((Wumpus(x) & Tumpus(x)) -> (Rompus(y) & Gorpus(y)))", "(all x.(Wumpus(x) -> Tumpus(x)) & (Rompus(x) | Gorpus(x))))", "all x.(Wumpus(x) -> (Tumpus(x) & Rompus(x) & Gorpus(x)))", "exists x.(Wumpus(x) & Tumpus(x) & Rompus(x) & Gorpus(x))", "all x y z.(Wumpus(x) -> (Tumpus(x) & Rompus(y) & Gorpus(z)))", "(all x.(Wumpus(x) -> Tumpus(x)) & (Rompus(x) & Gorpus(x)))", "(all x.(Wumpus(x) -> Tumpus(x)) & all y.(Rompus(y) & all z.(Gorpus(z)) -> Wormpus(x)))", "all x.(Wumpus(x) -> (Tumpus(x) & Rompus(x) & Gorpus(x)))", "exists x.(Wumpus(x) & Tumpus(x) & Rompus(x) & Gorpus(x))", "all x.(Wumpus(x) -> (Tumpus(x) & Rompus(x) & Gorpus(x)))", "(all x.(Wumpus(x) -> Tumpus(x)) & (Rompus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1460", "nl": "Polly is a wumpus.", "fol": "wumpus(Polly)", "prediction": ["all x.(Wumpus(x) -> Polly(x))", "Polly is a wumpus.", "(Wumpus(Polly) & HasWumpus(Polly))", "all x.(Wumpus(x) -> Polly(x))", "Polly is a wumpus.", "(Wumpus(Polly))", "all x.(Wumpus(x) -> Polly(x))", "(Wumpus(Polly) & -Wumpus(Polly))", "Polly is a wumpus.", "all x.((Polly(x) & Wumpus(x)) -> Has(x,y))", "(Wumpus(Polly) & HasWumpus(Polly,Wumpus))", "all x.(Wumpus(x) -> Polly(x))", "Polly is a Wumpus.", "All x.(Polly(x) -> Wumpus(x))", "(Wumpus(Polly))", "all x.(Wumpus(x) -> Polly(x))"]}
{"id": "prontoqa_train_1461", "nl": "Polly is a zumpus, a rompus, or a shumpus.", "fol": "(zumpus(Polly) | rompus(Polly) | shumpus(Polly))", "prediction": ["all x.(Polly(x) -> (Tompus(x) | Rompus(x) | Humpus(x)))", "(Tompus(poly) | Rompus(poly) | Humpus(poly)))", "all x.(Polly(x) -> (Tompus(x) | Rompus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tompus(x) | Rompus(x) | Humpus(x)))", "all x y.((Polly(x) & Zumpus(y)) | Rompus(y) | Humpus(y)) -> Polly(x))", "(Tompus,rompus,shumpus)", "(Zumpus) | Rompus(z) | Humpus(z))", "all x.(Polly(x) -> (Tompus(x) | Rompus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tompus(x) | Rompus(x) | Humpus(x)))", "(Tompus,rompus,shumpus)", "all x y.((Polly(x) & Zumpus(y)) | Rompus(y) | Humpus(y)) -> Polly(x))", "all x.(Polly(x) -> (Tompus(x) | Rompus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tompus(x) | Rompus(x) | Humpus(x)))", "exists x.(Polly(x) & (Zumpus(x) | Rompus(x) | Humpus(x)))", "all x.(Polly(x) -> (Zumpus(x) | Rompus(x) | Humpus(x)))", "exists x.(Poly(x) & (Zumpus(x) | Rompus(x) | Shumpus(x)))"]}
{"id": "prontoqa_train_1462", "nl": "Everything that is a dumpus, a gorpus, or a yumpus is a sterpus.", "fol": "all x. ((dumpus(x) | gorpus(x) | yumpus(x)) -> sterpus(x))", "prediction": ["all x.((Dumpus(x) | Gorpus(x) | Yumpus(x)) -> Sterpus(x))", "all x.((Dumps(x) | Gorpus(x) | Yumpus(x)) -> Sterpus(x))", "all x.((Dumpus(x) | Gorpus(x) | Yumpus(x)) -> Sterpus(x))", "all x.(((Dumpus(x) | Gorpus(x) | Yumpus(x))) -> Sterpus(x))", "all x.((Dumps(x) | Gorpus(x) | Yumpus(x)) -> Sterpus(x))", "all x y.((Dumpus(x) | Gorpus(x) | Yumpus(x)) -> Sterpus(y))", "all x y.((Dumps(x) | Gorpus(x) | Yumpus(x)) -> Sterpus(y))", "all x.((Dumpus(x) | Gorpus(x) | Yampus(x)) -> Sterpus(x))", "all x.((Dumpus(x) | Gorpus(x) | Yampus(x)) -> Sterpus(x))", "(all x.((Dumpus(x) | Gorpus(x) | Yampus(x))) -> Sterepus(x))", "all x.((Dumpus(x) | Gorpus(x) | Yumpus(x)) -> Sterepus(x))", "all x.((Dumps(x) | Gorpus(x) | Yampus(x)) -> Sterpus(x))", "(all x.((Dumpsus(x) | Gorpus(x) | Yumpus(x))) -> Steroid(x))", "all x.((Dumpus(x) | Gorpus(x) | Yumpus(x)) -> Sterepus(x))", "all x.((Dumpus(x) | Gorpus(x) | Yumpus(x)) -> Steroid(x))", "all x.((Dumpus(x) | Gorpus(x) | Yampus(x)) -> Sterpus(x))"]}
{"id": "prontoqa_train_1463", "nl": "Max is a gorpus, a wumpus, and a vumpus.", "fol": "(gorpus(Max) & wumpus(Max) & vumpus(Max))", "prediction": ["all x.(Max(x) -> (Gorpus(x) | Wumpus(x) | Vumpus(x)))", "(all x.(Max(x) -> Gorpus(x)) & all y.(Wumpus(y) & -Vimpus(y)))", "(Gorpus(Max) | Wumpus(Max) | Vumpus(Max))", "(all x.(Max(x) -> Gorpus(x)) & all y.(Wumpus(y) & Vumpus(y)))", "all x y z.((Max(x) & Gorpus(y) & Wumpus(z)) -> (Gorpus(x) & Wumpus(z) & Vumpus(x)))", "all x.(Max(x) -> (Gorpus(x) & Wumpus(x) & Vumpus(x)))", "all x y z.((Max(x) & Gorpus(y) & Wumpus(z)) -> (Gorpus(x) | Wumpus(z) | Vumpus(z)))", "(Gorpus(Max) & Wumpus(Max) & Vumpus(Max))", "(Gorpus(Max) | Wumpus(Max) | Vumpus(Max))", "all x.(Max(x) -> (Gorpus(x) | Wumpus(x) | Vumpus(x)))", "(all x.(Max(x) -> Gorpus(x)) & all y.(Wumpus(y) & Vumpus(y)))", "all x.(Mat Max(x) -> (Gorpus(x) | Wumpus(x) | Vumpus(x)))", "(all x.(Max(x) -> Gorpus(x)) & all y.(Wumpus(y) & -Vumpus(y)))", "(All x.(Max(x) -> Gorpus(x)) & (Max(x) -> Wumpus(x)) & (Max(x) -> Vumpus(x)))", "all x.(Max(x) -> (Gorpus(x) | Wumpus(x) | Vumpus(x)))", "all x.(Max(x) -> (Gorpus(x) & Wumpus(x) & Vumpus(x)))"]}
{"id": "prontoqa_train_1464", "nl": "Grimpuses are lorpuses and lempuses and tumpuses.", "fol": "all x. (grimpus(x) -> (lorpus(x) & lempus(x) & tumpus(x)))", "prediction": ["all x.(Grimpus(x) -> (Lorpus(x) & Lempuse(x) & Tumpus(x)))", "(all x.(Grimpus(x) -> Lorpus(x)) & all y.(Lempuse(y) & Tumpus(y)))", "all x.(Grimpus(x) -> (Lorpus(x) | Lempuse(x) | Tumpus(x)))", "all x y.((Grimpus(x) & Lorpus(y)) -> (Lampuse(x) | Lempuse(x) | Tumpus(x)))", "all x y z.((Grimpus(x) & Lorpus(y) & Lempuse(z)) -> (Lorpus(x) | Tumpus(z)))", "(all x.(Grimpus(x) -> Loomis(x)) & all y.(Lempuse(y) & Tumpus(y)))", "(all x.(Grimpuse(x) -> Lorpuse(x)) & all y.(Lempuse(y) & Tumpus(y)))", "(Lorpuses(Grimpus) | Lempuses(Grimpus) | Tumpuses(Grimpus))", "all x.(Grimpus(x) -> (Lorpus(x) & Lempuse(x) & Tumpus(x)))", "(all x.(Grimpuse(x) -> (Lorpuse(x) | Lempuse(x) | Tumpuse(x)))", "(all x.(Grimpuse(x) -> Loomis(x)) & all y.(Lempuse(y) & Tumpus(y)))", "all x.(Grimpus(x) -> (Lorpus(x) | Lempuse(x) | Tumpus(x)))", "all x.(Grimpuse(x) -> (Lorpuse(x) | Lempuse(x) | Tumulus(x)))", "all x y.((Grimpus(x) & Lorpus(y)) -> (Lampuse(x) | Lempuse(y) | Tumpus(y)))", "all x.(Grimpus(x) -> (Lorpuse(x) | Lempuse(x) | Tumpuse(x)))", "all x.(Grimpuse(x) -> (Lorpuse(x) | Lempuse(x) | Tumpuse(x)))"]}
{"id": "prontoqa_train_1465", "nl": "Everything that is an impus, a wumpus, and a gorpus is not a lorpus.", "fol": "all x. ((impus(x) & wumpus(x) & gorpus(x)) -> -lorpus(x))", "prediction": ["all x.((Impossible(x) | Wumpus(x) | Gorpus(x)) -> -Lorpus(x))", "all x.((Impossible(x) & Wumpus(x) & Gorpus(x)) -> -Lorpus(x))", "all x.((Issue(x) | IsWumpus(x) | IsGorpus(x)) -> -Lorpus(x))", "all x.((Is(x) & IsWumpus(x) & IsGorpus(x)) -> -Lorpus(x))", "all x.((Impossible(x) | Wumpus(x) | Gorpus(x)) -> -Lorpus(x))", "(all x.((Issue(x) & -Issue(x)) | (Issue(x) & Wumpus(x) & Gorpus(x)))) -> -Lorpus(x))", "all x y.((Impossible(x) & Wumpus(y) & Gorpus(y)) -> -Lorpus(x))", "(all x.((Impossible(x) | Wumpus(x) | Gorpus(x))) -> -Lorpus(x))", "all x.((Impossible(x) & Wumpus(x) & Gorpus(x)) -> -Lorpus(x))", "(all x.((Impossible(x) & Wumpus(x) & Gorpus(x)) -> -Lorpus(x))", "all x.((Impose(x) | Wumpus(x) | Gorpus(x)) -> -Lorpus(x))", "all x.((Issue(x) | IsWumpus(x) | IsGorpus(x)) -> -Lorpus(x))", "all x.(((Impossible(x) | Wumpus(x) | Gorpus(x))) -> -Lorpus(x))", "all x y.((Impossible(x) & Wumpus(y) & Gorpus(y)) -> -Lorpus(x))", "(all x.((Impossible(x) | Wumpus(x) | Gorpus(x)) -> -Lorpus(x))", "all x.((Impossible(x) & Wumpus(x) & Gorpus(x)) -> -Lorpus(x))"]}
{"id": "prontoqa_train_1466", "nl": "Each tumpus is not a vumpus.", "fol": "all x. (tumpus(x) -> -vumpus(x))", "prediction": ["all x.(Tumpus(x) -> -Vumpus(x))", "(-Vumpus(tumpus) & -Vumpus(tumpus,tumpus))", "all x.(Tumpus(x) -> -Vumpus(x))", "all x y.((Tumpus(x) & Tumpus(y)) -> -Vumpus(x))", "all x.(Tumpus(x) -> -Vumpus(x))", "(-Vumpus(tumpus)", "all x.(Tumpus(x) -> -Vumpus(x))", "all x y.((Tumpus(x) & Tumpus(y)) -> -Vumpus(x))", "all x.(Tumpus(x) -> -Vumpus(x))", "all x.(Tumpus(x) -> -Vumpus(x))", "all x.(Tumpus(x) -> -Vumpus(x))", "all x.(Tumpus(x) -> -Vumpus(x))", "exists x.(Tumpus(x) & -Vimpus(x))", "all x.(Tumpus(x) -> -Vumpus(x))", "exists x.(Tumpus(x) & -Umpus(x))", "exists x.(Tompus(x) & -Tompus(x))"]}
{"id": "prontoqa_train_1467", "nl": "Rex is not a lempus or Rex is a yumpus or Rex is a brimpus.", "fol": "(-lempus(Rex) | yumpus(Rex) | brimpus(Rex))", "prediction": ["all x.(Rex(x) -> (-Lempus(x) | (Yumpus(x) | Brimpus(x))))", "(all x.(Rex(x) -> -Lempus(x)) | (Yumpus(x) | Brimpus(x))))", "((Rex) & -Lempus(x)) | (Yumpus(x) | Brimpus(x))))", "all x y.((Rex(x) & -Lempus(x)) | (Yumpus(x) | Brimpus(y))))", "(exists x.(Rex(x) & -Lempus(x)) | exists y.(Yumpus(y) & -Brimpus(y))))", "all x.(Rex(x) -> (-Lempus(x) | (Yumpus(x) | Brimpus(x))))", "((Rex,lempus) | Yumpus(x)) | Brimpus(x)))", "all x y z.((Rex(x) & Lempus(y) & Yumpus(z)) | (Yumpus(x,z) | Brimpus(x,z))))", "(all x.(Rex(x) -> -Lempus(x)) | (Yumpus(x) | Brimpus(x))))", "all x.(Rex(x) -> (-Lempus(x) | (Yumpus(x) | Brimpus(x))))", "(all x.(Rex(x) -> (-Lempus(x) | Yumpus(x) | Brimpus(x))))", "all x y.((Rex(x) & Lempus(y)) | (Yumpus(x) | Brimpus(x))))", "((Rex) | Rex(x))) | (Yumpus(x) | Brimpus(x))))", "all x.(Rex(x) -> (-Lempus(x) | (Yumpus(x) | Brimpus(x))))", "(all x.(Rex(x) -> (-Lempus(x) | Yumpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (-Lempus(x) | (Yumpus(x) | Brimpus(x))))"]}
{"id": "prontoqa_train_1468", "nl": "Everything that is a lempus or a yumpus or a shumpus is a numpus and a tumpus and a gorpus.", "fol": "all x. ((lempus(x) | yumpus(x) | shumpus(x)) -> (numpus(x) & tumpus(x) & gorpus(x)))", "prediction": ["all x.((Lempus(x) | Yumpus(x) | Humpus(x)) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Lempus(x) | Yumpus(x) | Shumpus(x)) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))", "all x.(((Lempus(x) | Yumpus(x) | Humpus(x))) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))", "all x y.((Lempus(x) | Yumpus(x) | Humpus(x)) -> (Numpus(y) & Tumpus(y) & Gorpus(y)))", "all x y.((Lempus(x) | Yumpus(x) | Shumpus(x)) -> (Numpus(y) & Tumpus(y) & Gorpus(y)))", "all x.((Lempus(x) | Yumpus(x) | Humpus(x)) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))", "(all x.((Lempus(x) | Yumpus(x) | Humpus(x))) -> NumpusAndTumpusAndGorpus(x))", "all x.((Lempus(x) | Yampus(x) | Humpus(x)) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Limpus(x) | Yumpus(x) | Humpus(x)) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Lempus(x) | Yampus(x) | Shumpus(x)) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))", "all x y.((Lempus(x) | Yumpus(x) | Humpus(x)) -> (Numpus(y) & Tumpus(y) & Gorpus(y)))", "(all x.((Lempus(x) | Yumpus(x) | Humpus(x))) -> NumpusAndTumpusAndGorpus(x))", "all x.((Limpus(x) | Yumpus(x) | Humpus(x)) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Limpus(x) | Yumpus(x) | Humpus(x)) -> (numpus(x) & tumpus(x) & gorpus(x)))", "all x.((Lempus(x) | Yampus(x) | Shumpus(x)) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Lempus(x) | Yumpus(x) | Humpus(x)) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1469", "nl": "Fae is a shumpus and a vumpus and a tumpus.", "fol": "(shumpus(Fae) & vumpus(Fae) & tumpus(Fae))", "prediction": ["all x.(Fae(x) -> (Shumpus(x) & Vumpus(x) & Tumpus(x)))", "all x y.((Fae(x) & Humpus(y)) -> (Shumpus(x) & Vumpus(x) & Tumpus(x)))", "(all x.(Fae(x) -> Humpus(x)) & (Vumpus(x) | Tumpus(x))))", "all x y z.((Fae(x) & Humpus(y) & Vumpus(z)) -> (Shumpus(x) & Tumpus(x) & Tumpus(y)))", "(all x.(Fae(x) -> Humpus(x)) & all y.(Vumpus(y) & -Tumpus(y))))", "all x.(Fae(x) -> (Shumpus(x) & Vumpus(x) & Tumpus(x)))", "all x y z.(Fae(x) -> (Shumpus(x) & Vumpus(y) & Tumpus(z)))", "(all x.(Fae(x) -> Shumpus(x)) & (Vumpus(x) & Tumpus(x)))", "(Shumpus(fae) & Vumpus(fae) & Tumpus(fae))", "all x y.((Fae(x) & Humpus(y)) -> (Shumpus(x) & Vumpus(x) & Tumpus(x)))", "exists x.(Fae(x) & Humpus(x) & Vumpus(x) & Tumpus(x))", "all x.(Fae(x) -> (Shumpus(x) | Vumpus(x) | Tumpus(x)))", "all x.(Fae(x) -> (Shumpus(x) & Vumpus(x) & Tumpus(x)))", "(all x.(Fae(x) -> Shumpus(x)) & all y.(Vumpus(y) & -Tumpus(y))))", "exists x.(Fae(x) & Humpus(x) & Vampus(x) & Tumpus(x))", "(all x.(Fae(x) -> Humpus(x)) & (Vumpus(x) | Tumpus(x))))"]}
{"id": "prontoqa_train_1470", "nl": "Fae is a wumpus or a zumpus or a grimpus.", "fol": "(wumpus(Fae) | zumpus(Fae) | grimpus(Fae))", "prediction": ["all x.(Fae(x) -> (Wumpus(x) | Zumpus(x) | Grimpus(x)))", "(Wumpus(f) | Zumpus(f) | Grimpus(f)))", "all x.(Fae(x) -> (Wumpus(x) | Zumpus(x) | Grimpus(x)))", "all x y.((Fae(x) & Wumpus(y)) | (Tompus(y) | Grimpus(y))))", "all x.(Fae(x) -> ((Wumpus(x) | Zumpus(x) | Grimpus(x))))", "(all x.(Fae(x) -> Wumpus(x)) | (Tompus(x) | Grimpus(x))))", "all x.(Fae(x) -> (Wumpus(x) | Zumpus(x) | Grimpus(x)))", "(Wumpus(f) | Zumpus(f) | Grimpus(f)))", "(Wumpus) | Zumpus(Fae) | Grimpus(Fae))", "all x.(Fae(x) -> (Wumpus(x) | Zumpus(x) | Grimpus(x)))", "(Wumpus(f) | Zumpus(f) | Grimpus(f)))", "all x.(Fae(x) -> (Wumpus(x) | Zumpus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Wumpus(x) | Zumpus(x) | Grimpus(x)))", "all x.(Fae(x) -> ((Wumpus(x) | Zumpus(x) | Grimpus(x))))", "exists x.(Fae(x) & ((Wumpus(x) | Zumpus(x)) | Grimpus(x))))", "exists x.(Fae(x) & (Wumpus(x) | Zumpus(x) | Gruppus(x)))"]}
{"id": "prontoqa_train_1471", "nl": "Everything that is a tumpus or a yumpus or a gorpus is a wumpus.", "fol": "all x. ((tumpus(x) | yumpus(x) | gorpus(x)) -> wumpus(x))", "prediction": ["all x.((Tumpus(x) | Yumpus(x) | Gorpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Yumpus(x) | Gorpus(x)) -> Wumpus(x))", "all x.(((Tumpus(x) | Yumpus(x) | Gorpus(x))) -> Wumpus(x))", "all x.((Tumpus(x) | Yampus(x) | Gorpus(x)) -> Wumpus(x))", "all x y.((Tumpus(x) | Yumpus(x) | Gorpus(x)) -> Wumpus(y))", "all x.((Tumpus(x) | Yumpus(x) | Gorpus(x)) -> Wumpus(x))", "all x.(Wumpus(x) -> ((Tumpus(x) | Yumpus(x) | Gorpus(x))))", "all x.(((Tumpus(x) | Yumpus(x) | Gorpus(x))) -> Wumpus(x))", "all x.((Tumpus(x) | Yampus(x) | Gorpus(x)) -> Wumpus(x))", "all x.(((Tumpus(x) | Yampus(x) | Gorpus(x))) -> Wumpus(x))", "all x y.((Tumpus(x) | Yumpus(x) | Gorpus(x)) -> Wumpus(y))", "(all x.((Tumpus(x) | Yampus(x) | Gorpus(x))) -> Wumpus(x))", "all x.((Tumpus(x) | Yumpus(x) | Gorpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Yampus(x) | Gorpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Yumpus(x) | Gorpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Yampus(x) | Gorpus(x)) -> Wumpus(x))"]}
{"id": "prontoqa_train_1472", "nl": "Max is a rompus and a wumpus and a gorpus.", "fol": "(rompus(Max) & wumpus(Max) & gorpus(Max))", "prediction": ["all x.(Max(x) -> (Rompus(x) & Wumpus(x) & Gorpus(x)))", "(all x.(Max(x) -> Rompus(x)) & all y.(Wumpus(y) & Gorpus(y)))", "(Rompus(Max) & Wumpus(Max) & Gorpus(Max))", "all x y z.((Max(x) & Rompus(y) & Wumpus(z)) -> (Rompus(x) & Wumpus(z) & Gorpus(z)))", "(all x.(Max(x) -> Rompus(x)) & all y.(Wumpus(y) & All z.(Gorpus(z))) -> (Rompus(y) & All z.(Wumpus(z) & All w.(Worpus(w) & All w.(Worpus(w))))))", "all x.(Max(x) -> (Rompus(x) & Wumpus(x) & Gorpus(x)))", "all x y.((Max(x) & Rompus(y)) -> (Wumpus(x) & Gorpus(x)))", "(all x.(Max(x) -> Rompus(x)) & (Wumpus(x) & Gorpus(x)))", "(Rompus(Max) & Wumpus(Max) & Gorpus(Max))", "(all x.(Matthew(x) -> Rompus(x)) & all y.(Wumpus(y) -> Gorpus(y)))", "(Rompus(Max) | Wumpus(Max) | Gorpus(Max))", "all x y.((Max(x) & Rumpus(y)) -> (Rompus(x) & Wumpus(y) & Gorpus(y)))", "all x.(Max(x) -> (Rompus(x) & Wumpus(x) & Gorpus(x)))", "all x.(Max(x) -> (Rompus(x) | Wumpus(x) | Gorpus(x)))", "(all x.(Max(x) -> Rompus(x)) & (Wumpus(x) | Gorpus(x)))", "all x.(Max(x) -> (Rompus(x) & Wumpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1473", "nl": "Each jompus is a gorpus.", "fol": "all x. (jompus(x) -> gorpus(x))", "prediction": ["all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x y.((Jompus(x) & Gorpus(y)) -> Has(x,y))", "(all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x y.((Jompus(x) & Gorpus(y)) -> HasGorpus(x,y))", "all x y.((Jompus(x) & Gorpus(y)) -> Has(x,y))", "all x.(Jimpus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "exists x.(Jimpus(x) & Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "exists x.(Jimpus(x) & Gorpus(x))", "exists x.(Jompus(x) & Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_1474", "nl": "Everything that is a rompus and a sterpus and a dumpus is a grimpus.", "fol": "all x. ((rompus(x) & sterpus(x) & dumpus(x)) -> grimpus(x))", "prediction": ["all x.((Rompus(x) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))", "(all x.((Rompus(x) & -Sterpus(x) & -Dumpus(x)) -> Grimpus(x))", "all x y z.((Rompus(x) & Sterpus(y) & Dumpus(z) & Has(x,y)) -> Grimpus(x))", "all x.((Rompus(x) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))", "all x y.((Rompus(x) & Sterpus(y) & Dumpus(x)) -> Grimpus(x))", "all x.(((Rompus(x) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))", "(all x.((Rompus(x) & -Sterpus(x) & -Dumpus(x)) -> Grimpus(x))", "all x.((Rompus(x) & Sterus(x) & Dumpus(x)) -> Grimpus(x))", "all x.((Rompus(x) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))", "all x y.((Rompus(x) & Sterpus(y) & Dumpus(x)) -> Grimpus(x))", "all x.((Rompus(x) | Sterpus(x) | Dumpus(x)) -> Grimpus(x))", "all x.((Rompus(x) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))", "all x.(Rompus(x) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))", "all x.((Rompus(x) & Sterpus(x) & Dumpus(x)) -> Grumpus(x))", "all x.((Rompus(x) & Sterus(x) & Dumpus(x)) -> Grimpus(x))", "all x.((Rompus(x) | Sterpus(x) | Dumpus(x)) -> Grimpus(x))"]}
{"id": "prontoqa_train_1475", "nl": "Every dumpus is not a shumpus.", "fol": "all x. (dumpus(x) -> -shumpus(x))", "prediction": ["all x.(Dumpus(x) -> -Shumpus(x))", "all x.(Dumpus(x) -> -Shumpus(x))", "(all x.(Dumpus(x) -> -Shumpus(x)))", "-Shumpus(dumpus)", "all x.(Dumpus(x) -> -Shumpus(x))", "-Shumpus(dupus)", "(all x.(Dumpus(x) -> -Shumpus(x)))", "all x.(Dumpus(x) -> -Shumpus(x))", "exists x.(Dumps(x) & -Shumpus(x))", "all x.(Dumpus(x) -> -Shumpus(x))", "all x.(Dumpus(x) -> -Shumpus(x))", "all x.(Dumpus(x) -> -Shumpus(x))", "all x.(Dumpus(x) -> -Shumpus(x))", "all x.(Dumpus(x) -> -Shumpus(x))", "all x.(Dumpus(x) -> -Shumpus(x))", "all x.(Dumpus(x) -> -Shumpus(x))"]}
{"id": "prontoqa_train_1476", "nl": "Wumpuses are not gorpuses.", "fol": "all x. (wumpus(x) -> -gorpus(x))", "prediction": ["all x.(Wumpuse(x) -> -Gorpus(x))", "all x.(Wumpus(x) -> -Gorpus(x))", "(all x.(Wumpuse(x) -> -Gorpuse(x)))", "all x.(Wumpuse(x) -> -Gorpuse(x))", "(-Gorpus(wumpuse)", "all x.(Wumpus(x) -> -Gorpus(x))", "all x y.((Wumpuse(x) & Gorpus(y)) -> -Gorpus(x))", "-Gorpus(w)", "all x.(Wumpuse(x) -> -Gorpus(x))", "-Gorpuse(wumpuse)", "all x.(Wumpus(x) -> -Gorpus(x))", "all x.(Wumpuse(x) -> -Gorpuse(x))", "(all x.(Wumpus(x) -> -Gorpus(x)))", "all x.(Wumpus(x) -> -Gorpus(x))", "all x.(Wumpuse(x) -> -Gorpus(x))", "all x.(Wumpus(x) -> -Gorpus(x))"]}
{"id": "prontoqa_train_1477", "nl": "Yumpuses are shumpuses.", "fol": "all x. (yumpus(x) -> shumpus(x))", "prediction": ["all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "(Shumpuse(y) & Yumpus(z))", "all x y.((Yumpuse(x) & Shumpus(y)) -> Shumpus(x))", "all x y.((Yumpus(x) & Shumpus(y)) -> Shumpus(x))", "(Shumpuse(y) & Contains(y,x))", "(all x.(Yumpus(x) -> Humptus(x)))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpuse(x) -> Shumpus(x))", "all x y.((Yumpuse(x) & Humpus(y)) -> Shumpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Umbuse(x) -> Shumpus(x))", "All x.(Umbuse(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_1478", "nl": "Rex is not a jompus, Rex is not a yumpus, and Rex is a grimpus.", "fol": "(-jompus(Rex) & -yumpus(Rex) & grimpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Jompus(x)) & (Rex(x) -> -Yumpus(x)) & (Rex(x) -> Grimpus(x)))", "all x y z.((Rex(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) & -Yumpus(y) & -Grimpus(z)))", "(all x y z.((Rex(x) & Jompus(y)) -> -Jompus(x)) & ((Rex(z) & Yumpus(z))) -> Grimpus(z)))", "(all x.(Rex(x) -> -Jompus(x)) & all y.(Rex(y) -> -Yumpus(y)) & all z.(Rex(z) -> Grimpus(z))))", "(all x.(Rex(x) -> -Jompus(x)) & (Rex(x) -> -Yumpus(x)) & (Rex(x) -> Grimpus(x)))", "(all x y z.((Rex(x) & Jompus(y) & Yumpus(z)) -> -Jompus(x)) & ((Rex(x) & Yumpus(x)) -> Grimpus(x)))", "(-Jompus(Rex) & -Yumpus(Rex) & Grimpus(Rex))", "all x y z.((Rex(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) & -Yumpus(y) & -Grimpus(z)))", "(all x.(Rex) -> -Jompus(x)) & (Rex) -> -Yumpus(x)) & (Rex) -> Grimpus(x)))", "all x.(Rex(x) -> (-Jompus(x) | -Yumpus(x) | -Grimpus(x)))", "all x.(Rex(x) -> (-Jompus(x) & -Yumpus(x) & -Grimpus(x)))", "all x y z.((Rex(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) | (-Yumpus(x) & Grimpus(x))))", "(all x.(Rex(x) -> -Jompus(x)) & all y.(Rex(y) -> -Yumpus(y))) & all z.(Rex(z) -> Grimpus(z)))", "all x y z.((Rex(x) & Jompus(y) & Yumpus(z) & Grimpus(x)) -> -Jompus(x) & -Yumpus(x) & -Grimpus(x))", "(all x.(Rex(x) -> -Jompus(x)) & (Rex(x) -> -Yumpus(x)) & (Rex(x) -> Gruppus(x)))", "all x y z.((Rex(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) & -Yumpus(x) & -Grimpus(x)))"]}
{"id": "prontoqa_train_1479", "nl": "Everything that is a zumpus, a rompus, or a tumpus is a shumpus.", "fol": "all x. ((zumpus(x) | rompus(x) | tumpus(x)) -> shumpus(x))", "prediction": ["all x.((Tompus(x) | Rompus(x) | Tumpus(x)) -> Humpus(x))", "all x.((Tompus(x) | Rompus(x) | Tumpus(x)) -> Humpus(x))", "all x y.((Tompus(x) | Rompus(x) | Tumpus(x)) -> Humpus(y))", "all x.((Tompus(x) | Rompus(x) | Tumpus(x)) -> Humpus(x))", "all x.(((Tompus(x) | Rompus(x) | Tumpus(x))) -> Humpus(x))", "(all x.((Tompus(x) | Rompus(x) | Tumpus(x))) -> Humpus(x))", "all x.((Tompus(x) | Rompus(x) | Tumpus(x)) -> Humpus(x))", "all x y.((Tompus(x) | Rompus(x) | Tumpus(x)) -> Humpus(y))", "all x.((Shumpus(x) & (Tompus(x) | Rompus(x) | Tumpus(x))) -> Humpus(x))", "all x.((Tompus(x) | Rompus(x) | Tumpus(x)) -> Humpus(x))", "all x.((Tompus(x) | Rompus(x) | Tumpus(x)) -> Shumpus(x))", "all x.((Zumpus(x) | Rompus(x) | Tumpus(x)) -> Shumpus(x))", "all x.((Tompus(x) | Rompus(x) | Tumpus(x)) -> Humpus(x))", "all x.((Zumpus(x) | Rompus(x) | Tumpus(x)) -> Shumpus(x))", "all x.((Tommus(x) | Rompus(x) | Tumpus(x)) -> Humpus(x))", "all x.((Zumpus(x) | Romanus(x) | Tumulus(x)) -> Shumpus(x))"]}
{"id": "prontoqa_train_1480", "nl": "Polly is a tumpus and a numpus and a vumpus.", "fol": "(tumpus(Polly) & numpus(Polly) & vumpus(Polly))", "prediction": ["all x.(Polly(x) -> (Tumpus(x) & Numpus(x) & Vumpus(x)))", "all x y z.((Polly(x) & Tumpus(y) & Numpus(z)) -> (Tumpus(x) & Numpus(z) & Vumpus(z)))", "(all x.(Polly(x) -> Tumpus(x)) & (Nompus(x) | Vumpus(x))))", "(Tumpus(Poly) & Numpus(Poly) & Vumpus(Poly))", "all x y.((Polly(x) & Tumpus(y)) -> (Tumpus(x) & Numpus(x) & Vumpus(x)))", "(all x.(Polly(x) -> Tumpus(x)) & all y.(Nompus(y) & -Vumpus(y))))", "all x.(Polly(x) -> (Tumpus(x) & Numpus(x) & Vumpus(x)))", "(Tumpus(Polly) & Numpus(Polly) & Vumpus(Polly))", "all x y z.((Polly(x) & Tumpus(y) & Numpus(z)) -> (Tumpus(x) & Numpus(y) & Vumpus(z)))", "all x y.((Polly(x) & Tumpus(y)) -> (Tumpus(x) & Numpus(x) & Vumpus(x)))", "all x.(Polly(x) -> (Tumpus(x) & Numpus(x) & Vumpus(x)))", "(all x.(Polly(x) -> Tumpus(x)) & (Numpus(x) | Vumpus(x))))", "(all x.(Polly(x) -> Tumpus(x)) & all y.(Nompus(y) & Vumpus(y)))", "all x.(Polly(x) -> (Tumpus(x) & Numpus(x) & Vumpus(x)))", "exists x.(Polly(x) & Tumpus(x) & Numpus(x) & Vumpus(x))", "exists x.(Polly(x) & Tumpus(x) & Numpus(x) & Vulpu(x))"]}
{"id": "prontoqa_train_1481", "nl": "Everything that is a lorpus, a numpus, or a lempus is an impus, a gorpus, and a brimpus.", "fol": "all x. ((lorpus(x) | numpus(x) | lempus(x)) -> (impus(x) & gorpus(x) & brimpus(x)))", "prediction": ["all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Impos(x) & Gorpus(x) & Brimpus(x)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Impos(x) | Gorpus(x) | Brimpus(x)))", "all x y.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Impos(y) | Gorpus(y) | Brimpus(y)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Impos(x) & Gorpus(x) & Brimpus(x)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Issue(x) & IsGorpus(x) & IsBrimpus(x)))", "all x y.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Impos(y) & Gorpus(y) & Brimpus(y)))", "(all x.((Lorpus(x) | Numpus(x) | Lempus(x))) -> (Impos(x) | Gorpus(x) | Brimpus(x)))", "all x.(Lorpus(x) | Numpus(x) | Lempus(x)) -> (Impos(x) & Gorpus(x) & Brimpus(x)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> Is(x,Is(x,Is(x,Is)) & Is(x,Is(x,Is)) & Is(x,Is(x,Is)) & Is(x,Is(x,Is)) & Is(x,Is(x,Is)) & Is(x,Is(x,Is(x,Is(x,Is(x)))", "all x y.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Issue(y) & IsGorpus(y) & IsBrimpus(y)))", "(all x.((Lorpus(x) | Numpus(x) | Lempus(x))) -> (Impose(x) | Gorpus(x) | Brimpus(x)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Impos(x) | Gorpus(x) | Brimpus(x)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Issue(x) & IsGorpus(x) & IsBrimpus(x)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Ilises(x) & Gorpus(x) & Brimpus(x)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Impos(x) & Gorpus(x) & Brimpus(x)))", "all x.((Larpus(x) | Numpus(x) | Lempus(x)) -> (Issue(x) | IsGorpus(x) | IsBrimpus(x)))"]}
{"id": "prontoqa_train_1482", "nl": "Everything that is a lempus, a brimpus, or a gorpus is an impus and a rompus and a tumpus.", "fol": "all x. ((lempus(x) | brimpus(x) | gorpus(x)) -> (impus(x) & rompus(x) & tumpus(x)))", "prediction": ["all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> (Impos(x) & Rompus(x) & Tumpus(x)))", "(all x.((Lempus(x) | Brimpus(x) | Gorpus(x))) -> Is(x,Is(x,Is(x,Is)) & all y.((Is(y,Is(y,Is)) & all z.((Is(z) & Is(z))) -> Is(x,Is(x,Is(x,Is))) & all & all & all & all & all & all & all & all & all & all & all & all & all & all & all & all & all & all & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & & &", "all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> (Impos(x) & Rompus(x) & Tumpus(x)))", "all x y.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> (Impos(y) & Impos(y) & Impos(y) & Impos(y) & Impos(y) & Impos(y) & Impos(y) & Impos(y) & Impos(y)))", "(all x.((Lempus(x) | Brimpus(x) | Gorpus(x))) -> Issue(x)) & all y.((Issue(y) & Issue(y)) -> (Issue(y) & Issue(y))))", "all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> (Impos(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x.((Limpus(x) | Brimpus(x) | Gorpus(x)) -> (Impos(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> (Impos(x) & Rompus(x) & Tumpus(x)))", "all x.((Limpus(x) | Brimpus(x) | Gorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x y.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> (Impos(y) & Rompus(y) & Tumpus(y)))", "all x.(((Lempus(x) | Brimpus(x) | Gorpus(x))) -> (Impos(x) & Rompus(x) & Tumpus(x)))", "all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> (Impos(x) & Rompus(x) & Tumpus(x)))", "(all x.((Lempus(x) | Brimpus(x) | Gorpus(x))) -> Impossible(x)) & all y.((Rompus(y) & Tumpus(y)) -> Impossible(y)))", "all x y.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> (Impos(y) & Impos(y) & Impos(y) & Impos(y) & Impos(y) & Impos(y) & Impos(y) & Impos(y)))", "all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> Is(x)) & (Rompus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1483", "nl": "Polly is a tumpus.", "fol": "tumpus(Polly)", "prediction": ["all x.(Polly(x) -> Tumpus(x))", "Polly is a tumpus.", "all x.(Tumpus(x) -> Polly(x))", "(Tumpus(Polly) & HasTump(Polly))", "Polly is a tumpus.", "all x.(Polly(x) -> Tumpus(x))", "Polly is a Tumpus.", "all x.(Tumpus(x) -> Polly(x))", "(Tumpus(Polly) & HasTumpus(Polly))", "Polly is a tumpus.", "All x.(Polly(x) -> Tumpus(x))", "(Tumpus(Polly))", "all x.(Tumpus(x) -> Polly(x))", "(Tumpus(Polly)", "all x.(Tumpus(x) -> Polly(x))", "exists x.(Tumpus(x) & Polly(x))"]}
{"id": "prontoqa_train_1484", "nl": "Everything that is a tumpus and a rompus and a gorpus is a brimpus.", "fol": "all x. ((tumpus(x) & rompus(x) & gorpus(x)) -> brimpus(x))", "prediction": ["all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))", "all x y.((Tumpus(x) & Rompus(y) & Gorpus(y)) -> Brimpus(x))", "all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))", "all x y z.((Tumpus(x) & Rompus(y) & Gorpus(z) & Has(x,y)) -> Brimpus(x))", "(all x.((Tumpus(x) & -Rompus(x) & -Gorpus(x)) -> Brimpus(x))", "all x y z.((Tumpus(x) & Rompus(y) & Gorpus(z) & HasTumpus(x) & HasRompus(y) & HasGorpus(z)) -> Brimpus(x))", "all x.((Tumpus(x) | Rompus(x) | Gorpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))", "all x y.((Tumpus(x) & Rompus(y) & Gorpus(y)) -> Brimpus(x))", "all x.(((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))", "(all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Rompus(x) | Gorpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))"]}
{"id": "prontoqa_train_1485", "nl": "Jompuses are lempuses.", "fol": "all x. (jompus(x) -> lempus(x))", "prediction": ["all x.(Jompuse(x) -> Lempuse(x))", "all x.(Jompuse(x) -> Lempuse(x))", "all x y.((Jompuse(x) & Lempuse(y)) -> Lempuse(x))", "(all x.(Jompuse(x) -> Lempuse(x)))", "all x.(Jompuse(x) -> Lempuse(x))", "all x y.((Jompuse(x) & Lempuse(y)) -> Lempuse(x))", "(Lempuse(jompuse) & Lempuse(jompuse))", "all x.(Jimpus(x) -> Lempuse(x))", "all x.(Jompuse(x) -> Lempuse(x))", "all x y.((Jompuse(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Jompuse(x) -> Lempuse(x))", "all x.(Jimpus(x) -> Lempuse(x))", "all x.(Jompuse(x) -> Lempuse(x))", "all x.(Jomess(x) -> Lempuse(x))", "all x.(Jompus(x) -> Lempus(x))", "all x.(Jompuse(x) -> Lempuse(x))"]}
{"id": "prontoqa_train_1486", "nl": "Yumpuses are vumpuses.", "fol": "all x. (yumpus(x) -> vumpus(x))", "prediction": ["all x.(Yumpus(x) -> Vampuse(x))", "all x.(Yumpus(x) -> Vampus(x))", "all x y.((Yumpus(x) & Vampus(y)) -> Vampus(x))", "(Vumpus(y) & Y.(Yumpuse(y) & Vampus(y)))", "(Vampus(y) & -Vampus(y))", "(Vumpuse(y) & -Vumpus(y))", "all x.(Yumpus(x) -> Vampuse(x))", "all x y.((Yumpus(x) & Vampus(y)) -> Vampus(x))", "all x.(Umpuse(x) -> Vampuse(x))", "all x.(Umpus(x) -> Vulpuse(x))", "all x y.((Umpus(x) & Vampuse(y)) -> Is(x,y))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Umpuse(x) -> Vampuse(x))", "all x.(Yumpus(x) -> Vampus(x))", "All x.(Umpuse(x) -> Vampuse(x))", "all x.(Yumpus(x) -> Vumpus(x))"]}
{"id": "prontoqa_train_1487", "nl": "Stella is a sterpus and Stella is a shumpus and Stella is not a lempus.", "fol": "(sterpus(Stella) & shumpus(Stella) & -lempus(Stella))", "prediction": ["(all x.(Stella(x) -> Sterpus(x)) & all y.(Shumpus(y) -> -Lempus(y)))", "all x y z.((Stella(x) & Sterpus(x) & Shumpus(y) & -Lempus(z)) -> (Storpus(x) & Shumpus(y) & -Lempus(z)))", "(all x.(Storpus(x) -> Sterpus(x)) & all y.(Shumpus(y) -> Shumpus(y)) & all z.(Lempus(z) -> -Storpus(z)))", "(all x.(Stella(x) -> Sterpus(x)) & (Shumpus(x) & -Lempus(x)))", "(all x y.(Stella(x) -> Sterpus(x)) & (Shumpus(y) -> Shumpus(y)) & (Lempus(y) -> -Stella(y)))", "all x y z.((Stella(x) & Sterpus(x) & Shumpus(y) & Lempus(z)) -> (Storpus(x) & Shumpus(y) & -Lempus(z)))", "(all x y z.((Stella(x) & Sterpus(y)) -> (Storpus(z) & Strumpus(z))) & ((Stella(x) & Lempus(x)) -> -Lempus(x)))", "all x.(Stella(x) -> (Sterpus(x) & Shumpus(x) & -Lempus(x)))", "all x y.((Stella(x) & Sterpus(x) & Shumpus(y)) -> (-Lempus(x)))", "exists x.(Stella(x) & Sterpus(x) & Shumpus(x) & -Lempus(x))", "(all x.(Stella(x) -> Sterpus(x)) & all y.(Shumpus(y) -> Shumpus(y)) & all z.(Lempus(z) -> -Stella(z))))", "(all x.(Storpus(x) -> Sterpus(x)) & (Shumpus(x) -> Shumpus(x)) & (Storpus(x) -> -Lempus(x)))", "all x y z.((Stella(x) & Sterpus(y) & Shumpus(z)) -> (Storpus(x) & Shumpus(y) & -Lempus(z)))", "all x.(Stella(x) -> (Sterpus(x) & Shumpus(x) & -Lempus(x)))", "all x y.((Stella(x) & Sterpus(x) & Shumpus(y)) -> (Stella(x) & -Lempus(x)))", "(all x y.(Stella(x) -> Sterpus(x)) & (Shumpus(y) -> Shumpus(y)) & (Lempus(y) -> -Stella(y)))"]}
{"id": "prontoqa_train_1488", "nl": "Stella is a shumpus, Stella is a tumpus, and Stella is not a vumpus.", "fol": "(shumpus(Stella) & tumpus(Stella) & -vumpus(Stella))", "prediction": ["(all x.(Shumpus(x) -> Stella(x)) & all y.(Tumpus(y) -> Stella(y))) & all z.(Vumpus(z) -> -Shumpus(z)))", "all x y z.((Shumpus(x) & Tumpus(y) & Stella(z)) -> (Shumpus(x) & Tumpus(y) & -Vumpus(z)))", "(all x.(Shumpus(x) -> Stella)) & (Tumpus(x) -> Stella)) & -Vumpus(x)))", "(all x y z.(Shumpus(x) -> Shumpus(x)) & (Tumpus(y) -> Tumpus(y)) & (Vumpus(z) -> -Vumpus(z)))", "(all x.(Shumpus(x) -> Stella(x)) & (Tumpus(x) -> Stella(x)) & -Vumpus(x)))", "all x y z.((Stella(x) & Shumpus(y) & Tumpus(z)) -> (Shumpus(x) | Tumpus(z) | -Vumpus(z)))", "all x.(Shumpus(x) & Tumpus(x) & -Vumpus(x))", "(all x.(Shumpus(x) -> Stella)) & all y.(Tumpus(y) -> Stella)) & all z.(Vumpus(z) -> Stella)))", "(all x y z.((Shumpus(x) & Stella(y) & Tumpus(z)) -> Shumpus(x)) & ((Shumpus(y) & Tumpus(y)) -> -Vumpus(y)))", "(all x.(Shumpus(x) & All y.(Tumpus(y)) -> (Stella(x) & -Vumpus(y))))", "all x y z.((Shumpus(x) & Tumpus(y) & Stella(z)) -> (Shumpus(x) & Tumpus(y) & -Vumpus(z)))", "all x y z.(Stella(x) -> (Shumpus(x) | Tumpus(y) | -Vumpus(z)))", "(all x.(Shumpus(x) -> Shumpus(x)) & (Tumpus(x) -> Tumpus(x)) & (Vumpus(x) -> -Vumpus(x)))", "all x.(Shumpus(x) & Tumpus(x) & -Vumpus(x))", "exists x.(Shumpus(x) & Tumpus(x) & -Vimpus(x))", "(all x y z.((Shumpus(x) & Stella(y) & Tumpus(z)) -> (Shumpus(x) | Tumpus(y) & -Vumpus(y)))"]}
{"id": "prontoqa_train_1489", "nl": "Stella is a gorpus.", "fol": "gorpus(Stella)", "prediction": ["all x.(Stella(x) -> Gorpus(x))", "Stella is Gorpus.", "Stella is Gorpus(Stella)", "all x.(Stella(x) -> Gorpus(x))", "Stella is a Gorpus.", "(Gorpus(Stella) & Gorpus(Stella))", "all x.(Stella(x) -> Gorpus(x))", "Stella is Gorpus.", "(Gorpus(Stella) & Gorpus(Stella))", "Stella is a Gorpus.", "all x.(Stella(x) -> Gorpus(x))", "Stella is gorpus.", "Stella (Gorpus)", "(Gorpus(Stella))", "Stella ist ein Gorpus.", "all x.(Stella(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_1490", "nl": "Stella is not a jompus, Stella is not a yumpus, and Stella is a brimpus.", "fol": "(-jompus(Stella) & -yumpus(Stella) & brimpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Jompus(x)) & (Stella(x) -> -Yumpus(x)) & (Stella(x) -> Brimpus(x)))", "all x y z.((Stella(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) & -Yumpus(y) & -Brimpus(z)))", "(all x y z.((Stella(x) & Jompus(y)) -> -Jompus(x)) & ((Stella(z) & Yumpus(z))) -> Brimpus(z)))", "(all x.(Stella(x) -> -Jompus(x)) & all y.(Stella(y) -> -Yumpus(y)) & all z.(Stella(z) -> Brimpus(z))))", "(all x.(Stella(x) -> -Jompus(x)) & (Stella(x) -> -Yumpus(x)) & (Stella(x) -> Brimpus(x)))", "all x.(Stella(x) -> (-Jompus(x) & -Yumpus(x) & -Brimpus(x)))", "all x y z.(Brimpus(x) -> (-Jompus(x) & -Yumpus(y) & -Brompus(z)))", "all x y z.((Stella(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) & -Yumpus(y) & -Brimpus(z)))", "(all x y z.((Stella(x) & Jompus(y)) -> -Jompus(x)) & ((Stella(z) & Yumpus(z))) -> Brimpus(z)))", "(all x y z.((Stella(x) & Jompus(y) & Yumpus(z)) -> -Jompus(x)) & ((Stella(x) & Yumpus(x)) -> Brimpus(x)))", "(all x.(Stella(x) -> -Jompus(x)) & all y.(Stella(y) -> -Yumpus(y))) & all z.(Stella(z) -> Brimpus(z)))", "all x.(Stella(x) -> (-Jompus(x) & -Yumpus(x) & -Brimpus(x)))", "(all x.(Stella(x) -> -Jompus(x)) & (Stella(x) -> -Yumpus(x)) & (Stella(x) -> Brimpus(x)))", "all x y z.((Stella(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) & -Yumpus(y) & -Brimpus(z)))", "all x y z.((Stella(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) | (-Yumpus(z) | Brimpus(z))))", "(all x.(Stella(x) -> -Jompus(x)) | (Stella(x) -> -Yumpus(x)) | (Stella(x) -> Brimpus(x))))"]}
{"id": "prontoqa_train_1491", "nl": "Lempuses are not brimpuses.", "fol": "all x. (lempus(x) -> -brimpus(x))", "prediction": ["all x.(Lempuse(x) -> -Brimpus(x))", "all x.(Lempuse(x) -> -Brimpus(x))", "(all x.(Lempuse(x) -> -Brimpus(x)))", "all x.(Lemme(x) -> -Brimpus(x))", "-Brimpus(lempuse)", "all x.(Lempuse(x) -> -Brimpus(x))", "all x y.((Lempuse(x) & Brimpus(y)) -> -Brimpus(x))", "(all x.(Lempuse(x) -> -Brimpus(x)))", "all x.(Lempuse(x) -> -Brimbus(x))", "-Brimpus(lempuse)", "all x.(Lemme(x) -> -Brimpus(x))", "(all x.(Lempuse(x) -> -Brimpus(x)))", "all x.(Lempuse(x) -> -Brimpus(x))", "all x.(Lampuse(x) -> -Brimbus(x))", "all x.(Lempuse(x) -> -Birmuse(x))", "all x.(Lempuse(x) -> -Brimpus(x))"]}
{"id": "prontoqa_train_1492", "nl": "Max is a vumpus or Max is not a vumpus or Max is a numpus.", "fol": "(vumpus(Max) | -vumpus(Max) | numpus(Max))", "prediction": ["(exists x.(Max(x) & Vumpus(x)) | exists y.(Max(y) & -Vumpus(y))) | exists z.(Max(z) & Numpus(z))))", "all x.((Max(x) & (Vumpus(x) | -Vumpus(x) | Numpus(x))) -> Vumpus(x))", "((Max(Max) & Vumpus(Max)) | (-Vumpus(Max)) | (-Vumpus(Max) & Numpus(Max))))", "all x.(Max(x) -> (Vumpus(x) | -Vumpus(x) | Numpus(x)))", "(exists x.(Max(x) & Vumpus(x)) | exists y.(Max(y) & -Vumpus(y))) | exists z.(Max(z) & Numpus(z))))", "all x.((Max(x) & (Vumpus(x) | -Vumpus(x) | Numpus(x))) -> (Vumpus(x) | Numpus(x)))", "all x y.((Max(x) & Vumpus(x)) | (-Vumpus(x) | Numpus(y))))", "((Max(Max) & Vumpus(Max)) | (-Vumpus(Max)) | (-Vumpus(Max) & Numpus(Max))))", "all x.(Max(x) -> (Vumpus(x) | -Vumpus(x) | Numpus(x)))", "(all x.(Max(x) -> Vumpus(x)) | (-Vumpus(x) | Numpus(x))))", "((Max(Max) & Vumpus(Max)) | (-Vumpus(Max) | Numpus(Max))))", "(exists x.(Max(x) & Vumpus(x)) | exists y.(Max(y) & -Vumpus(y))) | exists z.(Max(z) & Numpus(z))))", "all x.(Max(x) -> (Vimpus(x) | -Vimpus(x) | Numpus(x)))", "all x.((Max(x) & (Vimpus(x) | -Vimpus(x) | Numpus(x))) -> Vimpus(x))", "exists x.(Max(x) & ((Vimpus(x) | -Vimpus(x)) | (-Vimpus(x) | Numpus(x)))))", "exists x.(Max(x) & ((Vumpus(x) | -Vumpus(x)) | (-Vumpus(x) & -Vumpus(x)))))"]}
{"id": "prontoqa_train_1493", "nl": "Everything that is an impus and a numpus and a lempus is a gorpus.", "fol": "all x. ((impus(x) & numpus(x) & lempus(x)) -> gorpus(x))", "prediction": ["all x.((Impose(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x.((Impossible(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x.((Impose(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x y.((Imposs(x) & Numpus(y) & Lempus(y)) -> Gorpus(x))", "all x.((Issue(x) & IsNumpus(x) & IsLempus(x)) -> Gorpus(x))", "all x y z.((Impos(x) & Numpus(y) & Lempus(z) & IsAndIs(x,y)) -> Gorpus(x))", "all x.((Is(x) & IsNumpus(x) & IsLempus(x)) -> Gorpus(x))", "all x.((Impact(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x.((Impossible(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x.((Impose(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x y.((Imposs(x) & Numpus(y) & Lempus(y)) -> Gorpus(x))", "all x.(Impose(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "(all x.((Impose(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x.((Is(x) & IsNumpus(x) & IsLempus(x)) -> Gorpus(x))", "all x y.((Impose(x) & Numpus(y) & Lempus(y)) -> Gorpus(x))", "all x.((Impose(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))"]}
{"id": "prontoqa_train_1494", "nl": "Everything that is a lempus and a sterpus and a zumpus is not a gorpus.", "fol": "all x. ((lempus(x) & sterpus(x) & zumpus(x)) -> -gorpus(x))", "prediction": ["all x.((Lempus(x) & Sterpus(x) & Zumpus(x)) -> -Gorpus(x))", "all x.((Lempus(x) & Sterpus(x) & Zumpus(x)) -> -Gorpus(x))", "all x.(((Lempus(x) & Sterpus(x) & Zumpus(x)) -> -Gorpus(x))", "all x y.((Lempus(x) & Sterpus(y) & Zumpus(y)) -> -Gorpus(x))", "(all x.((Lempus(x) & -Sterpus(x)) -> Zumpus(x)))", "all x.((Lempus(x) & Sterus(x) & Zumpus(x)) -> -Gorpus(x))", "all x.((Lempus(x) & Sterpus(x) & Zumpus(x)) -> -Gorpus(x))", "all x.(((Lempus(x) & Sterpus(x) & Zumpus(x)) -> -Gorpus(x))", "all x y.((Lempus(x) & Sterpus(y) & Zumpus(x)) -> -Gorpus(x))", "(all x.((Lempus(x) & Sterus(x)) -> -Gorpus(x)))", "all x.((Lempus(x) & Sterus(x) & Zumpus(x)) -> -Gorpus(x))", "(all x.((Lempus(x) & -Sterpus(x)) -> Zumpus(x)))", "all x.((Lempus(x) | Sterpus(x) | Zumpus(x)) -> -Gorpus(x))", "all x.((Lempus(x) & Sterpus(x) & Zumpus(x)) -> -Gorpus(x))", "all x.((Limpus(x) & Sterpus(x) & Zumpus(x)) -> -Gorpus(x))", "all x.((Limpus(x) & Sterepus(x) & Zumpus(x)) -> -Gorpus(x))"]}
{"id": "prontoqa_train_1495", "nl": "Everything that is a tumpus, a wumpus, and a gorpus is a shumpus.", "fol": "all x. ((tumpus(x) & wumpus(x) & gorpus(x)) -> shumpus(x))", "prediction": ["all x.((Tumpus(x) | Wumpus(x) | Gorpus(x)) -> Humpus(x))", "all x.((Tumpus(x) | Wumpus(x) | Gorpus(x)) -> Humpus(x))", "all x y z.((Tumpus(x) & Wumpus(y) & Gorpus(z) & Has(x,y) & Has(x,z)) -> Humpus(x))", "all x y.((Tumpus(x) & Wumpus(y) & Gorpus(y)) -> Humpus(x))", "all x.((Tumpus(x) | Wumpus(x) | Gorpus(x)) -> Humpus(x))", "all x y z.((Tumpus(x) & Wumpus(y) & Gorpus(z) & Has(x,y)) -> Humpus(x))", "(all x.((Tumpus(x) | Wumpus(x) | Gorpus(x))) -> Humpus(x))", "all x.((Tumpus(x) | Wumpus(x) | Gorpus(x)) -> Humpus(x))", "all x.((Tumpus(x) & Wumpus(x) & Gorpus(x)) -> Humpus(x))", "all x.(((Tumpus(x) | Wumpus(x) | Gorpus(x))) -> Humpus(x))", "all x.((Tumpus(x) | Wumpus(x) | Gorpus(x)) -> Humpus(x))", "(all x.((Tumpus(x) | Wumpus(x) | Gorpus(x))) -> Shumpus(x))", "all x.((Tumpus(x) | Wumpus(x) | Gorpus(x)) -> Humpus(x))", "all x.((Tumpus(x) & Wumpus(x) & Gorpus(x)) -> Humpus(x))", "all x.((Tumpus(x) | Wumpus(x) | Gorpus(x)) -> Shumpus(x))", "all x.((Tumpus(x) | Wumpus(x) | Gorpus(x)) -> Humpus(x))"]}
{"id": "prontoqa_train_1496", "nl": "Max is a shumpus, a yumpus, or a numpus.", "fol": "(shumpus(Max) | yumpus(Max) | numpus(Max))", "prediction": ["all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x)))", "(all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x))))", "(Shumpus(Max) | Yumpus(Max) | Numpus(Max))", "all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x)))", "(exists x.(Max(x) & Humpus(x)) | exists yumpus(y)) | exists z.(Max(z) & Numpus(z))))", "(all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x))))", "(Shumpus,yumpus,numpus) | (Yumpus,yumpus))))", "all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x)))", "exists x.(Max(x) & ((Shumpus(x) & -Yumpus(x)) | (-Yumpus(x) & -Yumpus(x)))))", "(all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x))))", "all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x)))", "all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x)))", "all x.(Max(x) -> (Shumpus(x) | Yampus(x) | Numpus(x)))", "all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x)))", "all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x)))", "all x.(M Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x)))"]}
{"id": "prontoqa_train_1497", "nl": "Everything that is a wumpus, a grimpus, and a rompus is a zumpus, a shumpus, and a tumpus.", "fol": "all x. ((wumpus(x) & grimpus(x) & rompus(x)) -> (zumpus(x) & shumpus(x) & tumpus(x)))", "prediction": ["all x.((Wumpus(x) | Grimpus(x) | Rompus(x)) -> (Tompus(x) & Humpus(x) & Tumpus(x)))", "all x y.((Wumpus(x) & Grimpus(x) & Rompus(y)) -> (Tompus(x) & Shumpus(x) & Tumpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Rompus(x)) -> (Tompus(x) & Shumpus(x) & Tumpus(x)))", "all x y z.((Wumpus(x) & Grimpus(y) & Rompus(z) & Toumpus(x) & Shumpus(x) & Tumpus(x)) -> (Tompus(x) & Tompus(x) & Tompus(x)))", "all x.((Wumpus(x) & Grimpus(x) & Rompus(x)) -> (Tompus(x) & Humpus(x) & Tumpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Rompus(x)) -> (Tompus(x) | Humpus(x) | Tumpus(x)))", "(all x.((Wumpus(x) | Grimpus(x) | Rompus(x))) -> (Tompus(x) | Shumpus(x) | Tumpus(x)))", "all x.((Tompus(x) & Tompus(x) & Tompus(x) & Tompus(x) & Tompus(x) & Tompus(x) & Tompus(x)) -> Tompus(x))", "all x y.((Wumpus(x) & Grimpus(y) & Rompus(y)) -> (Tompus(x) | Humpus(x) | Tumpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Rompus(x)) -> (Tompus(x) & Humpus(x) & Tumpus(x)))", "(all x.((Wumpus(x) | Grimpus(x) | Rompus(x))) -> (Tompus(x) | Humpus(x) | Tumpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Rompus(x)) -> (Zumpus(x) | Shumpus(x) | Tumpus(x)))", "(all x.((Wumpus(x) | Grimpus(x) | Rompus(x))) -> (Tompus(x) & Humpus(x) & Tumpus(x)))", "all x.(Wumpus(x) & Gruppus(x) & Rompus(x)) -> (Zumpus(x) & Shumpus(x) & Tumpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Rompus(x)) -> (Tompus(x) & Shumpus(x) & Tumpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Rompus(x)) -> (Zumpus(x) | Shumpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1498", "nl": "Wren is a grimpus and a zumpus and a lorpus.", "fol": "(grimpus(Wren) & zumpus(Wren) & lorpus(Wren))", "prediction": ["all x.(Wren(x) -> (Grimpus(x) & Zumpus(x) & Lorpus(x)))", "all x y z.((Wren(x) & Grimpus(y) & Zumpus(z)) -> (Grimpus(x) & Lorpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & (Tompus(x) | Lorpus(x))))", "all x.(Wren(x) -> (Grimpus(x) & Zumpus(x) & Lorpus(x)))", "all x y.((Wren(x) & Grimpus(y)) -> (Tompus(x) & Lorpus(x)))", "all x y z.((Wren(x) & Grimpus(y) & Zumpus(z) & Lorpus(x)) -> (Grimpus(x) & Lorpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & (Tompus(x) | Lorpus(x))))", "all x.(Wren(x) -> (Grimpus(x) & Zumpus(x) & Lorpus(x)))", "(all x y.(Wren(x) -> Grimpus(x)) & (Tompus(y) | Lorpus(y)))", "exists x.(Wren(x) & Grimpus(x) & Zumpus(x) & Lorpus(x))", "(all x.(Wren(x) -> Grimpus(x)) & all y.(Tompus(y) & Lorpus(y))))", "(all x.(Wren(x) -> Grimpus(x)) & (Tompus(x) & Lorpus(x)))", "all x.(Wren(x) -> (Grimpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Wren(x) -> (Grimpus(x) & Zumpus(x) & Lorpus(x)))", "exists x.(Wren(x) & Grimpus(x) & Zumpus(x) & Lorpus(x))", "(all x.(Wren(x) -> Grimpus(x)) & (Tompus(x) | Lorpus(x)))"]}
{"id": "prontoqa_train_1499", "nl": "Wren is a dumpus, a wumpus, or a vumpus.", "fol": "(dumpus(Wren) | wumpus(Wren) | vumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vumpus(x)))", "(all x.(Wren(x) -> Dumpus(x)) | (Wumpus(x) | Vumpus(x))))", "all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Dumps(x) | Wumpus(x) | Vumpus(x)))", "exists x.(Wren(x) & ((Dumpus(x) & -Wumpus(x)) | (-Dumpus(x) & -Wumpus(x)))))", "all x y.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vumpus(y)))", "(all x.(Wren(x) -> Dumpus(x)) | (Wumpus(x) | Vumpus(x))))", "(all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vumpus(x)))", "all x y.(Wren(x) -> (Dumpus(y) | Wumpus(y) | Vumpus(y)))", "all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vumpus(x)))", "exists x.(Wren(x) & (Dumps(x) | Wumpus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vampus(x)))"]}
{"id": "prontoqa_train_1500", "nl": "Every wumpus is a jompus, a numpus, and a dumpus.", "fol": "all x. (wumpus(x) -> (jompus(x) & numpus(x) & dumpus(x)))", "prediction": ["all x.(Wumpus(x) -> (Jompus(x) | Numpus(x) | Dumpus(x)))", "(all x.(Wumpus(x) -> Jompus(x)) & all y.(Nompus(y) & -Dumpus(y)))", "all x.(Wumpus(x) -> (Jompus(x) & Numpus(x) & Dumpus(x)))", "all x.(Wumpus(x) -> (Jimpus(x) | Numpus(x) | Dumpus(x)))", "(all x.(Wumpus(x) -> Jompus(x)) & all y.(Nompus(y) & All z.(Dumpus(z))) -> Dumpus(x)))", "all x y z.(Wumpus(x) -> (Jompus(y) & Numpus(z) & Dumpus(x)))", "(all x.(Wumpus(x) -> Jompus(x)) & all y.(Numpus(y) & all z.(Dumpus(z)) -> Dumpus(z))))", "all x.(Wumpus(x) -> (Jompus(x) | Numpus(x) | Dumpus(x)))", "all x.(Wumpus(x) -> (Jompus(x) | Numpus(x) | Dumpus(x)))", "all x.(Wumpus(x) -> (Jimpus(x) | Numpus(x) | Dumpus(x)))", "(all x.(Wumpus(x) -> Jompus(x)) & (Nompus(x) | Dumpus(x)))", "all x.(Wumpus(x) -> (Jompus(x) | Numpus(x) | Dumpus(x)))", "all x.(Wumpus(x) -> (Jompus(x) | Numpus(x) | Dumpus(x)))", "exists x.(Wumpus(x) & Jompus(x) & Numpus(x) & Dumpus(x))", "all x.(Wumpus(x) -> (Jimpus(x) & Numpus(x) & Dumpus(x)))", "exists x.(Wumpus(x) & Jompus(x) & Numpus(x) & Dumpus(x))"]}
{"id": "prontoqa_train_1501", "nl": "Sally is a rompus, a numpus, or a grimpus.", "fol": "(rompus(Sally) | numpus(Sally) | grimpus(Sally))", "prediction": ["all x.(Sally(x) -> (Rompus(x) | Numpus(x) | Grimpus(x)))", "(Rompus(Sally) | Numpus(Sally) | Grimpus(Sally)))", "all x.(Sally(x) -> (Rompus(x) | Numpus(x) | Grimpus(x)))", "(Rompus(Sally) | Numpus(Sally) | Grimpus(Sally)))", "all x y.(Sally(x) -> (Rompus(x) | Numpus(x) | Grimpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Numpus(x) | Grimpus(x)))", "(Rompus(Sally) | Numpus(Sally) | Grimpus(Sally))", "all x.(Sally(x) -> (Rompus(x) | Numpus(x) | Grumpus(x)))", "(Rompus(Sally) | Numpus(Sally) | Gruppus(Sally))", "exists x.(Sally(x) & (rompus(x) | numpus(x) | grimpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Numpus(x) | Grimpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Numpus(x) | Grimpus(x)))", "(Rompus(Sally) | Numpus(Sally) | Grimpus(Sally))", "all x.(Sally(x) -> (Rompus(x) | Numpus(x) | Gruppus(x)))", "all x.(Sally(x) -> (Rompus(x) | Nompus(x) | Grimpus(x)))", "exists x.(Sally(x) & (Rompus(x) | Numpus(x) | Grappus(x)))"]}
{"id": "prontoqa_train_1502", "nl": "Tumpuses are yumpuses, lempuses, and grimpuses.", "fol": "all x. (tumpus(x) -> (yumpus(x) & lempus(x) & grimpus(x)))", "prediction": ["all x.(Tumpus(x) -> (Yumpus(x) | Lempuse(x) | Grimpus(x)))", "(Yumpuses(TM) | Lempuses(TM) | Grimpuses(TM))", "all x y z.((Tumpus(x) & Lempuse(y) & Grimpus(z)) -> (Yumpus(x) | Lempuse(y) | Grimpus(z)))", "(all x.(Tumpus(x) -> Yumpus(x)) & all y.(Lempuse(y) -> Grimpus(y)))", "all x.(Tumpus(x) -> (Yumpus(x) | Lempuse(x) | Grimpus(x)))", "all x y.((Tumpus(x) & Lempuse(y)) -> (Yumpus(x) | Grimpus(y)))", "(all x.(Tumpus(x) -> Yumpuse(x)) & all y.(Lempuse(y) -> Grimpuse(y)))", "all x.(Tumpus(x) -> (Yumpus(x) | Lempuse(x) | Grimpus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Lempuse(x) | Grimpus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Lempus(x) | Grimpus(x)))", "(all x.(Tumpus(x) -> Yampus(x)) & all y.(Lempuse(y) -> Grimpus(y)))", "all x.(Tumpus(x) -> (Yumpuses(x) | Lempuses(x) | Grimpuses(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Lempuse(x) | Grimpuse(x)))", "(all x.(Tumpus(x) -> Yumpus(x)) & all y.(Lempus(y) -> Grimpus(y)))", "all x.(Tumpus(x) -> (Yumpus(x) | Lempuse(x) | Grimpuse(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Lempus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1503", "nl": "Rex is a lempus or a zumpus or an impus.", "fol": "(lempus(Rex) | zumpus(Rex) | impus(Rex))", "prediction": ["all x.(Rex(x) -> (Lempus(x) | Zumpus(x) | Imperator(x)))", "all x.(Rex(x) -> (Lempus(x) | Zumpus(x) | Imperator(x)))", "(Lempus(rex) | Zumpus(rex) | Imperator(rex)))", "(all x.(Rex(x) -> Lempus(x)) | (Tompus(x) | Imperator(x))))", "all x.(Rex(x) -> (Lempus(x) | Zumpus(x) | Imperator(x)))", "(Limpus) | Zumpus(x) | Imperator(x))", "(all x.(Rex(x) -> Lempus(x)) | (Tompus(x) | Issue(x))))", "all x y.(Rex(x) -> (Lempus(x) | Zumpus(x) | Imperator(y)))", "all x.(Rex(x) -> (Lempus(x) | Zumpus(x) | Issue(x)))", "all x.(Rex(x) -> (Lempus(x) | Zumpus(x) | Imperator(x)))", "all x y.(Rex(x) -> (Lempus(x) | Zumpus(x) | Imperator(x)))", "all x.(Rex(x) -> (Lempus(x) | Zumpus(x) | Imperator(x)))", "exists x.(Rex(x) & ((Lempus(x) | Zumpus(x) | Imperator(x))) -> Lempus(x))", "all x.(Rex(x) -> (Limpus(x) | Zumpus(x) | Issue(x)))", "all x.(Rex(x) -> (Lempus(x) | Zumpus(x) | Impossible(x)))", "all x.(Rex(x) -> (Limpus(x) | Zumpus(x) | Impeccable(x)))"]}
{"id": "prontoqa_train_1504", "nl": "Everything that is a lempus and a gorpus and a zumpus is a shumpus, a brimpus, and a lorpus.", "fol": "all x. ((lempus(x) & gorpus(x) & zumpus(x)) -> (shumpus(x) & brimpus(x) & lorpus(x)))", "prediction": ["all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) & Brimpus(x) & Lorpus(x)))", "all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) | Brimpus(x) | Lorpus(x)))", "all x y.((Lempus(x) & Gorpus(y) & Zumpus(y)) -> (Shumpus(x) | Brimpus(x) | Lorpus(x)))", "all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) | Brimpus(x) | Lorpus(x)))", "all x y z.((Lempus(x) & Gorpus(y) & Zumpus(z) & Shumpus(x) & Brimpus(x) & Lorpus(x)) -> (Shumpus(x) & Brimpus(x) & Lorpus(x)))", "(all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) | Brimpus(x) | Lorpus(x)))", "all x y.((Lempus(x) & Gorpus(x) & Zumpus(y)) -> (Shumpus(x) & Brimpus(x) & Lorpus(x)))", "all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) & Brimpus(x) & Lorpus(x)))", "all x.((Lempus(x) | Gorpus(x) | Zumpus(x)) -> (Shumpus(x) & Brimpus(x) & Lorpus(x)))", "(all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) & Brimpus(x) & Lorpus(x)))", "all x.((Lempus(x) | Gorpus(x) | Zumpus(x)) -> (Shumpus(x) | Brimpus(x) | Lorpus(x)))", "all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) & Brimpus(x) & Lorpus(x)))", "(all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) & Brimpus(x) & Lorpus(x)))", "all x y.((Lempus(x) & Gorpus(y) & Zumpus(y)) -> (Shumpus(x) | Brimpus(x) | Lorpus(x)))", "all x.((Limpus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) | Brimpus(x) | Lorpus(x)))", "all x.((Limpus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) | Brimpus(x) | Lorpus(x)))"]}
{"id": "prontoqa_train_1505", "nl": "Polly is a brimpus.", "fol": "brimpus(Polly)", "prediction": ["all x.(Brimpus(x) -> Polly(x))", "Polly is a Brimpus.", "(Brimpus(Polly) & Brimpus(Polly))", "all x.(Brumpus(x) -> Polly(x))", "Polly is a brimpus.", "Polly is a Brimpus.", "(Brimpus(Polly) & HasBrimpus(Polly))", "all x.((Polly(x) & Brimpus(x)) -> Polly(x))", "all x.(Brimpus(x) -> Polly(x))", "Polly (Brimpus)", "Polly is brimpus.", "All x.(Polly(x) -> Brimpus(x))", "Polly is a Brimpus.", "(Brumpus(Polly))", "all x.(Brumpus(x) -> Polly(x))", "all x.(Brimpus(x) -> Polly(x))"]}
{"id": "prontoqa_train_1506", "nl": "Everything that is a brimpus, a wumpus, or a dumpus is not a numpus.", "fol": "all x. ((brimpus(x) | wumpus(x) | dumpus(x)) -> -numpus(x))", "prediction": ["all x.((Brimpus(x) | Wumpus(x) | Dumpus(x)) -> -Numpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Dumpus(x)) -> -Numpus(x))", "all x.(((Brimpus(x) | Wumpus(x) | Dumpus(x))) -> -Numpus(x))", "all x.((IsBrimpus(x) | IsWumpus(x) | IsDumpus(x)) -> -IsNumpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Dumpus(x)) -> -Numpus(x))", "all x.(((Brimpus(x) | Wumpus(x) | Dumpus(x))) -> -Numpus(x))", "all x.(Nompus(x) -> (Brimpus(x) | Wumpus(x) | Dumpus(x)))", "all x.((Brimpus(x) | Wumpus(x) | Dumpus(x)) -> -Numpus(x))", "(all x.((Brimpus(x) | Wumpus(x) | Dumpus(x))) -> -Numpus(x))", "all x.(((Brimpus(x) | Wumpus(x) | Dumpus(x))) -> -Numpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Dumpus(x)) -> -Numpus(x))", "(all x.((Brimpus(x) | Wumpus(x) | Dumpus(x))) -> -Numpus(x))", "all x.((Brumpus(x) | Wumpus(x) | Dumpus(x)) -> -Numpus(x))", "(all x.((Brumpus(x) | Humpus(x) | Dumpus(x))) -> -Numpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Dumpus(x)) -> -numpus(x))", "all x.((Brumpus(x) | Wumpus(x) | Dumpus(x)) -> -Numpus(x))"]}
{"id": "prontoqa_train_1507", "nl": "Shumpuses are gorpuses, numpuses, and tumpuses.", "fol": "all x. (shumpus(x) -> (gorpus(x) & numpus(x) & tumpus(x)))", "prediction": ["all x.(Shupuse(x) -> (Gorpus(x) | Numpuse(x) | Tumpus(x)))", "all x.(Shupuse(x) -> (Gorpuse(x) | Numpuse(x) | Tumpuse(x)))", "all x y z.((Shupuse(x) & Gorpus(y) & Numpus(z)) -> (Gorpus(x) | Numpus(z) | Tumpus(z)))", "(all x.(Shupuse(x) -> Gorpuse(x)) & all y.(Numpuse(y) & Tumpus(y)))", "(all x.(Shupuse(x) -> Gorpuse(x)) & all y.(Numpuse(y) & Tumpus(y)) -> Tumpuse(y)))", "all x y.((Shupuse(x) & Gorpus(y)) -> (Numpuse(x) | Tumpus(y)))", "all x.(Shumpus(x) -> (Gorpus(x) | Numpus(x) | Tumpus(x)))", "all x.(Shumpsue(x) -> (Gorpuse(x) | Numpuse(x) | Tumpuse(x)))", "(all x.(Shutus(x) -> Gorpuse(x)) & all y.(Numpuse(y) & Tumpuse(y))))", "all x y z.((Shupuse(x) & Gorpus(y) & Numpus(z)) -> (Gorpus(x) | Numpus(z) | Tumpus(z)))", "(all x.(Shupuse(x) -> Gorpuse(x)) & all y.(Numpuse(y) & Tumpuse(y)) -> Tumpuse(y)))", "all x.(Shumpus(x) -> (Gorpuse(x) | Numpuse(x) | Tumpuse(x)))", "all x.(Shampus(x) -> (Gorpus(x) | Numpus(x) | Tumpus(x)))", "all x.(Shupuse(x) -> (Gorpuse(x) | Numpuse(x) | Tumpuse(x)))", "all x.(Shutus(x) -> (Gorpus(x) | Numpuse(x) | Tumulus(x)))", "(all x.(Shampus(x) -> Gorpus(x)) & all y.(Numpus(y) -> Tumpus(y)))"]}
{"id": "prontoqa_train_1508", "nl": "Everything that is a numpus and a vumpus and a sterpus is a tumpus and an impus and a dumpus.", "fol": "all x. ((numpus(x) & vumpus(x) & sterpus(x)) -> (tumpus(x) & impus(x) & dumpus(x)))", "prediction": ["all x.((Numpus(x) & Vumpus(x) & Sterpus(x)) -> (Tumpus(x) & Imperator(x) & Dumpus(x)))", "all x.((Numpus(x) & Vumpus(x) & Sterpus(x)) -> (Tumpus(x) & Impossible(x) & Dumpus(x)))", "all x y.((Numpus(x) & Vumpus(x) & Sterpus(y)) -> (Tumpus(x) & Imperator(x) & Dumpus(x)))", "all x.((Nompus(x) | Vumpus(x) | Sterpus(x)) -> (Tumpus(x) & Impossible(x) & Dumpus(x)))", "(all x.((Numpus(x) & Vumpus(x) & Sterpus(x)) -> (Tumpus(x) & Imperator(x) & Dumpus(x)))", "(all x.((Numpus(x) & -Vumpus(x)) -> Sterpus(x)) & ((Impossible(x) & Dumpus(x)) -> Tumpus(x)))", "all x y.((Numpus(x) & Vumpus(y) & Sterpus(y)) -> (Tumpus(x) & Impossible(x) & Dumpus(x)))", "all x.((Nompus(x) & Vumpus(x) & Sterpus(x)) -> (Tumpus(x) & Issue(x) & Dumpus(x)))", "all x.((Numpus(x) & Vumpus(x) & Sterpus(x)) -> (Tumpus(x) & Imperator(x) & Dumpus(x)))", "all x.((Numpus(x) | Vumpus(x) | Sterpus(x)) -> (Tumpus(x) & Imperator(x) & Dumpus(x)))", "(all x.((Numpus(x) & Vumpus(x) & Sterpus(x)) -> (Tumpus(x) & Impossible(x) & Dumpus(x)))", "all x.((Numpus(x) & Vumpus(x) & Sterpus(x)) -> (Tumpus(x) & Impermiss(x) & Dumpus(x)))", "all x y.((Numpus(x) & Vumpus(x) & Sterpus(y)) -> (Tumpus(x) & Impermiss(x) & Dumpus(x)))", "all x.((Numpus(x) & Vumpus(x) & Sterpus(x)) -> (Tumpus(x) & Impossible(x) & Dumpus(x)))", "all x.((Nompus(x) | Vumpus(x) | Sterpus(x)) -> (Tumpus(x) & Issue(x) & Dumpus(x)))", "all x.((Numpus(x) & Voompus(x) & Sterpus(x)) -> (Tumpus(x) & Impossible(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1509", "nl": "Each dumpus is a zumpus, a grimpus, and a numpus.", "fol": "all x. (dumpus(x) -> (zumpus(x) & grimpus(x) & numpus(x)))", "prediction": ["all x.(Dumpus(x) -> (Tompus(x) | Grimpus(x) | Numpus(x)))", "(all x.(Dumpus(x) -> Zumpus(x)) & all y.(Dumpus(y) -> Grimpus(y)) & all z.(Dumpus(z) -> Numpus(z))))", "all x.(Dumpus(x) -> (Tompus(x) | Grimpus(x) | Numpus(x)))", "all x.(Dumps(x) -> (Tompus(x) | Grimpus(x) | Numpus(x)))", "all x y z.(Dumpus(x) -> (Tompus(y) | Grimpus(y) | Numpus(z)))", "(all x.(Dumpus(x) -> Zumpus(x)) & all y.(Dumpus(y) -> Grimpus(y)) & all z.(Dumpus(z) -> Numpus(z)))", "all x y.((Dumpus(x) & Zumpus(y)) -> (Grimpus(x) & Numpus(x)))", "(all x.(Dumpus(x) -> Tosspus(x)) & all y.(Grimpus(y) -> Numpus(y)))", "all x.(Dumpus(x) -> (Zumpus(x) & Grimpus(x) & Numpus(x)))", "all x.(Dumpus(x) -> (Tompus(x) | Grimpus(x) | Numpus(x)))", "exists x.(Dumps(x) & Zumpus(x) & Grimpus(x) & Numpus(x))", "(all x.(Dumpus(x) -> Zumpus(x)) & all y.(Dumpus(y) -> Grimpus(y)) & all z.(Dumpus(z) -> Numpus(z)))", "(all x.(Dumpus(x) -> Zumpus(x)) & (Grimpus(x) & Numpus(x)))", "exists x.(Dumpus(x) & Zumpus(x) & Grimpus(x) & Numpus(x))", "all x.(Dumpus(x) -> (Tompus(x) | Grimpus(x) | Numpus(x)))", "all x.(Dumpus(x) -> (Tommus(x) | Grimpus(x) | Numpus(x)))"]}
{"id": "prontoqa_train_1510", "nl": "Alex is a jompus or a numpus or a sterpus.", "fol": "(jompus(Alex) | numpus(Alex) | sterpus(Alex))", "prediction": ["all x.(Alex(x) -> (Jompus(x) | Numpus(x) | Sterpus(x)))", "(Jompus(Alex) | Numpus(Alex) | Sterpus(Alex))", "all x.(Alex(x) -> (Jompus(x) | Numpus(x) | Sterpus(x)))", "(Jompus(Alex) | Numpus(Alex) | Sterpus(Alex))", "all x y.((Alex(x) & Jompus(y)) | (Nompus(y) | Sterpus(y))))", "(Jimpus(Alex) | Numpus(Alex) | Sterpus(Alex))", "all x.(Alex(x) -> (Jimpus(x) | Numpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Jompus(x) | Numpus(x) | Sterpus(x)))", "(all x.(Alex(x) -> Jompus(x)) | (Nompus(x) | Sterpus(x))))", "exists x.(Alex(x) & (Jompus(x) | Numpus(x) | Sterpus(x)))", "(Jompus(Alex) | Numpus(Alex) | Sterpus(Alex))", "all x.(Alex(x) -> (Jompus(x) | Numpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Jompus(x) | Numpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Jimpus(x) | Numpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Jompus(x) | Nompus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Jompus(x) | Numpus(x) | Steroid(x)))"]}
{"id": "prontoqa_train_1511", "nl": "Each grimpus is a rompus and a lempus and a tumpus.", "fol": "all x. (grimpus(x) -> (rompus(x) & lempus(x) & tumpus(x)))", "prediction": ["all x.(Grimpus(x) -> (Rompus(x) & Lempus(x) & Tumpus(x)))", "(all x.(Grimpus(x) -> Rompus(x)) & all y.(Lempus(y) & -Tumpus(y))))", "all x y z.((Grimpus(x) & Rompus(y) & Lempus(z)) -> (Rompus(x) & Lempus(z) & Tumpus(z)))", "all x.(Grimpus(x) -> (Rompus(x) & Lempus(x) & Tumpus(x)))", "all x y.((Grimpus(x) & Rompus(y)) -> (Lempus(x) & Tumpus(x)))", "(all x.(Grimpus(x) -> Rompus(x)) & (Lempus(x) | Tumpus(x)))", "all x.(Sgrimpus(x) -> (Rompus(x) & Lempus(x) & Tumpus(x)))", "(all x.(Grimpus(x) -> Rompus(x)) & all y.(Lempus(y) & Tumpus(y))))", "exists x.(Grimpus(x) & Rompus(x) & Lempus(x) & Tumpus(x))", "all x.(Grimpus(x) -> (Rompus(x) & Lempus(x) & Tumpus(x)))", "all x.(Grimpus(x) -> (Rompus(x) | Lempus(x) | Tumpus(x)))", "all x y.((Grimpus(x) & Rompus(y)) -> (Lempus(x) & Tumpus(x)))", "all x.(Grimpus(x) -> (Rompus(x) & Lempus(x) & Tumpus(x)))", "exists x.(Grimpus(x) & Rompus(x) & Lempus(x) & Tumpus(x))", "(all x.(Grimpus(x) -> Rompus(x)) & (Lempus(x) | Tumpus(x)))", "exists x.(Grampus(x) & Rompus(x) & Lempus(x) & Tumpus(x))"]}
{"id": "prontoqa_train_1512", "nl": "Alex is a brimpus or a lempus or a rompus.", "fol": "(brimpus(Alex) | lempus(Alex) | rompus(Alex))", "prediction": ["all x.(Alex(x) -> (Brimpus(x) | Lempus(x) | Rompus(x)))", "(Brimpus(Alex) | Lempus(Alex) | Rompus(Alex)))", "all x.(Alex(x) -> (Brimpus(x) | Lempus(x) | Rompus(x)))", "(all x.(Alex(x) -> Brimpus(x)) | (Lempus(x) | Rompus(x))))", "all x y.((Alex(x) & Brimpus(x) & Lempus(y)) | Rompus(x))", "(Brimpus(Alex) | Lempus(Alex) | Rompus(Alex)))", "all x.(Alex(x) -> (Brimpus(x) | Lempus(x) | Rompus(x)))", "(Brimpus,Brimpus,Lempus,Rompus,etc.)", "exists x.(Alex(x) & ((Brimpus(x) & -Lempus(x)) | (-Brompus(x) & -Lempus(x)))))", "all x.(Alex(x) -> ((Brimpus(x) | Lempus(x) | Rompus(x))))", "(all x.(Alex(x) -> Brimpus(x)) | (Lempus(x) | Rompus(x))))", "all x.(Alex(x) -> (Brumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Lempus(x) | Rompus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Lempus(x) | Rompus(x)))", "all x.(Alex(x) -> (Brumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Lempus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1513", "nl": "Everything that is an impus, a tumpus, and a shumpus is a zumpus and a brimpus and a numpus.", "fol": "all x. ((impus(x) & tumpus(x) & shumpus(x)) -> (zumpus(x) & brimpus(x) & numpus(x)))", "prediction": ["all x.((Impossible(x) & Tumpus(x) & Humpus(x)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "all x.((Impose(x) | Tumpus(x) | Humpus(x)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "all x.((Impossible(x) | Tumpus(x) | Humpus(x)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "all x y.((Imposs(x) & Tumpus(y) & Humpus(y)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "all x.((Issue(x) & IsTumpus(x) & IsShumpus(x)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "all x.((Issue(x) | IsTumpus(x) | IsShumpus(x)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "all x y.((Impossible(x) & Tumpus(y) & Humpus(y)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "all x y z.((Impos(x) & Tumpus(y) & Humpus(z) & Is(x,y) & Is(y,z)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "all x.((Impose(x) & Tumpus(x) & Humpus(x)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "all x.((Imposer(x) | Tumpus(x) | Humpus(x)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "(all x.((Imposs,y) & Tumpus(y) & Humpus(y)) -> Zumpus(x)) & ((Brimpus(x) & Numpus(x)) -> Numpus(x)))", "all x.(Impose(x) & Tumpus(x) & Humpus(x)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "all x.((Impossible(x) & Tumpus(x) & Humpus(x)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "(all x.((Impossible(x) | Tumpus(x) | Humpus(x))) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "(all x.((Imposer(x) | Tumpus(x) | Humpus(x))) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "all x.(Impose(x) & Tumpus(x) & Humpus(x)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))"]}
{"id": "prontoqa_train_1514", "nl": "Everything that is a lorpus, an impus, and a jompus is a tumpus, a numpus, and a gorpus.", "fol": "all x. ((lorpus(x) & impus(x) & jompus(x)) -> (tumpus(x) & numpus(x) & gorpus(x)))", "prediction": ["all x.((Lorpus(x) | Impossible(x) | Jompus(x)) -> (Tumpus(x) | Numpus(x) | Gorpus(x)))", "all x y.((Lorpus(x) & Impossible(x) & Jompus(y)) -> (Tumpus(x) & Numpus(x) & Gorpus(x)))", "all x y z.((Lorpus(x) & Impossible(y) & Jompus(z) & IsLorpus(x) & IsImpossible(y) & IsJompus(z)) -> (Tumpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Lorpus(x) | Impossible(x) | Jompus(x)) -> (Tumpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Lorpus(x) & Impossible(x) & Jompus(x)) -> (Tumpus(x) & Numpus(x) & Gorpus(x)))", "(all x.((Lorpus(x) | Impossible(x)) & Jompus(x)) -> (Tumpus(x) | Numpus(x) | Gorpus(x)))", "all x.((Lorpus(x) | Imperator(x) | Jompus(x)) -> (Tumpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Lorpus(x) | Impossible(x) | Jompus(x)) -> (Tumpus(x) | Numpus(x) | Gorpus(x)))", "all x.(Lorpus(x) & IsImpossible(x) & Jompus(x)) -> (Tumpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Lorpus(x) & Impossible(x) & Jompus(x)) -> (Tumpus(x) | Numpus(x) | Gorpus(x)))", "all x.((Lorpus(x) & IsImpos(x) & Jompus(x)) -> (Tumpus(x) & Numpus(x) & Gorpus(x)))", "all x y.((Lorpus(x) & Impossible(y) & Jompus(x)) -> (Tumpus(y) | Numpus(y) | Gorpus(y)))", "(all x.((Lorpus(x) | Impossible(x)) & Jompus(x)) -> (Tumpus(x) | Numpus(x) | Gorpus(x)))", "(all x.((Lorpus(x) | Imperator(x)) & Jompus(x)) -> (Tumpus(x) | Numpus(x) | Gorpus(x)))", "all x.((Lorpus(x) | Impossible(x) | Jompus(x)) -> (Tumpus(x) & Numpus(x) & Gorpus(x)))", "all x.(Lorpus(x) & IsImpossible(x) & Jompus(x)) -> (Tumpus(x) & Numpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1515", "nl": "Stella is not a brimpus and Stella is a zumpus and Stella is a dumpus.", "fol": "(-brimpus(Stella) & zumpus(Stella) & dumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Brimpus(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Dumpus(x)))", "all x y z.((Stella(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Dumpus(x)))", "(all x.(Stella(x) -> -Brimpus(x)) & all y.(Stella(y) -> Zumpus(y))) & all z.(Stella(z) -> Dumpus(z)))", "(all x y.((Stella(x) & Brimpus(x)) -> -Brimpus(x)) & ((Stella(y) & Zumpus(y)) -> Dumpus(y)))", "all x.(Stella(x) -> (-Brimpus(x) & Zumpus(x) & Dumpus(x)))", "(all x y z.((Stella(x) & Brimpus(y)) -> -Brimpus(x)) & ((Stella(z) & Zumpus(z))) -> Dumpus(x)))", "all x y.((Stella(x) & Brimpus(y) & Zumpus(y)) -> (-Brimpus(x) & Dumpus(x)))", "all x y z.((Stella(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Zumpus(y) & Dumpus(z)))", "(all x.(Stella(x) -> -Brimpus(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Dumpus(x)))", "(all x.(Stella(x) -> -Brimpus(x)) & all y.(Stella(y) -> Zumpus(y)) & all z.(Stella(z) -> Dumpus(z))))", "(all x y.(Brimpus(x) -> -Brimpus(x)) & (Zumpus(y) -> Dumpus(y)))", "all x.(Stella(x) -> (-Brimpus(x) & Zumpus(x) & Dumpus(x)))", "all x y z.((Stella(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Dumpus(x)))", "all x y.((Stella(x) & Brimpus(y) & Zumpus(y)) -> (-Brimpus(x) & Dumpus(x)))", "exists x.(Stella(x) & -Brimpus(x) & Zumpus(x) & Dumpus(x))", "(all x.(Stella(x) -> -Brimpus(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Dumpus(x)))"]}
{"id": "prontoqa_train_1516", "nl": "Dumpuses are lorpuses, gorpuses, and lempuses.", "fol": "all x. (dumpus(x) -> (lorpus(x) & gorpus(x) & lempus(x)))", "prediction": ["all x.(Dumpuse(x) -> (Lorpus(x) | Gorpus(x) | Lempuse(x)))", "(all x.(Dumpuse(x) -> (Lorpuse(x) | Gorpuse(x) | Lempuse(x)))", "all x.(Dumpuse(x) -> (Lorpus(x) | Gorpus(x) | Lempuse(x)))", "all x y z.((Dumpuse(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) | Gorpus(z) | Lempuse(z)))", "all x.(Dumpuse(x) -> (Lorpuse(x) | Gorpuse(x) | Lempuse(x)))", "(Lorpuses(dumpuses) | Gorpuses(dumpuses) | Lempuses(dumpuses))", "(all x.(Dumpuse(x) -> (Lorpuse(x) | Gorpuse(x) | Lempuse(x)))", "all x y.((Dumpuse(x) & Lorpus(y) & Gorpus(y)) -> Lempuse(x))", "all x.(Dumpuse(x) -> (Lorpus(x) | Gorpus(x) | Lempuse(x)))", "all x.(Dumpuse(x) -> (Lorpuse(x) | Gorpuse(x) | Lempuse(x)))", "(all x.(Dumpuse(x) -> (Lorpuse(x) | Gorpuse(x) | Lempuse(x)))", "all x.(Dumpus(x) -> (Lorpus(x) | Gorpus(x) | Lempuse(x)))", "all x.(Dumpuse(x) -> (Lorpus(x) | Gorpus(x) | Lempuse(x)))", "(all x.(Dumpuse(x) -> (Lorpus(x) | Gorpus(x) | Lempuse(x)))", "all x.(Dumpuse(x) -> (Lorpheus(x) | Gorpus(x) | Lempuse(x)))", "all x.(Dumpus(x) -> (Lorpus(x) | Gorpus(x) | Lempuse(x)))"]}
{"id": "prontoqa_train_1517", "nl": "Sally is a wumpus or a lempus or a gorpus.", "fol": "(wumpus(Sally) | lempus(Sally) | gorpus(Sally))", "prediction": ["all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "(Wumpus(Sally) | Lempus(Sally) | Gorpus(Sally)))", "(Wumpus(s) | Lempus(s) | Gorpus(s)))", "all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "all x y.((Sally(x) & Wumpus(y)) | (Lempus(x) | Gorpus(x))))", "all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "(Wumpus(s) | Lempus(s) | Gorpus(s)))", "(Wumpus,Wumpus,Lempus,Gorpus)", "(Wumpus) | Lempus(Sally) | Gorpus(Sally))", "all x.((Sally(x) & (Wumpus(x) | Lempus(x) | Gorpus(x))) -> Sally(x))", "all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "all x.(Sally(x) -> ((Wumpus(x) | Lempus(x) | Gorpus(x))))", "exists x.(Sally(x) & ((Wumpus(x) | Lempus(x) | Gorpus(x))))", "all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "exists x.(Sally(x) & (Wumpus(x) | Lempus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1518", "nl": "Everything that is a lempus, a lorpus, and a grimpus is a shumpus, a rompus, and an impus.", "fol": "all x. ((lempus(x) & lorpus(x) & grimpus(x)) -> (shumpus(x) & rompus(x) & impus(x)))", "prediction": ["all x.((Lempus(x) | Lorpus(x) | Grimpus(x)) -> (Shumpus(x) & Rompus(x) & Imperator(x)))", "all x y.((Lempus(x) & Lorpus(y) & Grimpus(x)) -> (Shumpus(y) & Rompus(y) & Imperator(y)))", "all x.((Lempus(x) | Lorpus(x) | Grimpus(x)) -> (Shumpus(x) & Rompus(x) & Imperator(x)))", "all x y z.((Lempus(x) & Lorpus(y) & Grimpus(z) & Lempus(x) & Lorpus(y) & Grimpus(z)) -> (Shumpus(x) & Rompus(x) & Imperator(x)))", "all x.((Limpus(x) & Lorpus(x) & Grimpus(x)) -> (Shumpus(x) & Rompus(x) & Imperator(x)))", "all x.((Lempus(x) | Lorpus(x) | Grimpus(x)) -> (Shumpus(x) | Rompus(x) | Imperator(x)))", "all x y.((Lempus(x) & Lorpus(y) & Grimpus(x)) -> (Shumpus(y) | Rompus(y) | Imperator(y)))", "(all x.((Lempus(x) | Lorpus(x) | Grimpus(x))) -> (Shumpus(x) | Rompus(x) | Impossible(x)))", "all x.((Limpus(x) & Lorpus(x) & Grimpus(x)) -> (Shumpus(x) & Rompus(x) & Imperator(x)))", "all x.((Lempus(x) | Lorpus(x) | Grimpus(x)) -> (Shumpus(x) & Rompus(x) & Imperator(x)))", "(all x.((Lempus(x) | Lorpus(x) | Grimpus(x))) -> (Shumpus(x) | Rompus(x) | Imperator(x)))", "(all x.((Lempus(x) | Lorpus(x) | Grimpus(x)) -> (Shumpus(x) | Rompus(x) | Imperator(x)))", "all x.((Lempus(x) | Lorpus(x) | Grimpus(x)) -> (Shumpus(x) | Rompus(x) | Imperator(x)))", "all x.((Lempus(x) | Lorpus(x) | Grumpus(x)) -> (Shumpus(x) & Rompus(x) & Imperator(x)))", "all x.((Lempus(x) | Lorpus(x) | Grimpus(x)) -> (Shumpus(x) & Rompus(x) & Impossible(x)))", "all x.((Lampus(x) & Lorpus(x) & Grimpus(x)) -> (Shumpus(x) & Rompus(x) & Impossible(x)))"]}
{"id": "prontoqa_train_1519", "nl": "Everything that is a gorpus or a lempus or a dumpus is a lorpus.", "fol": "all x. ((gorpus(x) | lempus(x) | dumpus(x)) -> lorpus(x))", "prediction": ["all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x y.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(y))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x y.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(y))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.(Or(Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.(Lorpus(x) -> (Gorpus(x) | Lempus(x) | Dumpus(x)))", "all x.((Gorpus(x) | Lampus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Loompus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lordus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Loompus(x))"]}
{"id": "prontoqa_train_1520", "nl": "Sally is a gorpus, an impus, and a rompus.", "fol": "(gorpus(Sally) & impus(Sally) & rompus(Sally))", "prediction": ["all x.(Sally(x) -> (Gorpus(x) & Impossible(x) & Rompus(x)))", "(Gorpus(Sally) & Impossible(Sally) & Rompus(Sally))", "(all x.(Sally(x) -> Gorpus(x)) & all y.(Impossible(y) -> Rompus(y)))", "Sally is a gorpus, a impus, a rompus.", "(Gorpus(Sally) | Imperator(Sally) | Rompus(Sally))", "all x.(Sally(x) -> (Gorpus(x) & Imperator(x) & Rompus(x)))", "all x y z.((Sally(x) & Gorpus(y) & Imperator(z)) -> (Gorpus(x) & Rompus(x)))", "(Gorpus,Impossible(Sally) & Rompus(Sally))", "all x.(Sally(x) -> (Gorpus(x) | Imperator(x) | Rompus(x)))", "(Gorpus(Sally) & Imperator(Sally) & Rompus(Sally))", "(all x.(Sally(x) -> Gorpus(x)) & all y.(Impossible(y) & Rompus(y)))", "all x.(Sally(x) -> (Gorpus(x) | Impossible(x) | Rompus(x)))", "all x.(Sally(x) -> (Gorpus(x) & Issue(x) & Rompus(x)))", "exists x.(Sally(x) & Gorpus(x) & Issue(x) & Rompus(x))", "all x.(Sally(x) -> (Gorpus(x) | Imperator(x) | Rompus(x)))", "exists x.(Sally(x) & Gorpus(x) & Issue(x) & Rompus(x))"]}
{"id": "prontoqa_train_1521", "nl": "Everything that is a tumpus, an impus, and a lempus is a vumpus.", "fol": "all x. ((tumpus(x) & impus(x) & lempus(x)) -> vumpus(x))", "prediction": ["all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> Vumpus(x))", "all x.((Tumpus(x) | Imperative(x) | Lempus(x)) -> Vumpus(x))", "all x y.((Tumpus(x) & Impossible(y) & Lempus(x)) -> Vumpus(x))", "(all x.((Tumpus(x) | Impossible(x)) & Lempus(x)) -> Vumpus(x))", "all x y z.((Tumpus(x) & Impossible(y) & Lempus(z) & Has(x,y) & Has(x,z)) -> Vumpus(x))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> Vumpus(x))", "all x.((Tumpus(x) | Imperator(x) | Lempus(x)) -> Vumpus(x))", "all x.(((Tumpus(x) | Impossible(x) | Lempus(x))) -> Vumpus(x))", "(all x.((Tumpus(x) | IsImpos(x) | Lempus(x))) -> Vumpus(x))", "all x.((Tumpus(x) & Imperempt(x) & Lempus(x)) -> Vumpus(x))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> Vumpus(x))", "(all x.((Tumpus(x) | Impossible(x) | Lempus(x))) -> Vumpus(x))", "all x.((Tumpus(x) | IsImpos(x) | Lempus(x)) -> Vumpus(x))", "all x.((Tumpus(x) | Imperative(x) | Lempus(x)) -> Vumpus(x))", "all x.((Tumpus(x) & Imperative(x) & Lempus(x)) -> Vumpus(x))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> Vumpus(x))"]}
{"id": "prontoqa_train_1522", "nl": "Wren is a wumpus or a vumpus or a rompus.", "fol": "(wumpus(Wren) | vumpus(Wren) | rompus(Wren))", "prediction": ["all x.(Wren(x) -> (Wumpus(x) | Vumpus(x) | Rompus(x)))", "(Wren(w) & (Wumpus(w) | Vumpus(w) | Rompus(w)))", "all x.(Wren(x) -> (Wumpus(x) | Vumpus(x) | Rompus(x)))", "all x.(Wren(x) -> ((Wumpus(x) | Vumpus(x) | Rompus(x))))", "all x.(Wren(x) -> (Wumpus(x) | Vumpus(x) | Rompus(x)))", "all x y.(Wren(x) -> (Wumpus(x) | Vumpus(x) | Rompus(x)))", "(Wren(Wumpus) | (Vumpus) | Rompus)))", "all x y.(Wren(x) -> ((Wumpus(x) | Vumpus(x) | Rompus(x))))", "(all x.(Wren(x) -> Wumpus(x)) | (Vumpus(x) | Rompus(x))))", "exists x.(Wren(x) & ((Wumpus(x) & -Vumpus(x)) | (-Vumpus(x) & -Rompus(x)))))", "all x.(Wren(x) -> (Wumpus(x) | Vumpus(x) | Rompus(x)))", "all x.(Wren(x) -> ((Wumpus(x) | Vumpus(x) | Rompus(x))))", "all x.(Wren(x) -> (Wumpus(x) | Vumpus(x) | Rompus(x)))", "exists x.(Wren(x) & ((Wumpus(x) & -Vumpus(x)) | (-Vumpus(x) & -Rompus(x)))))", "all x.(Wren(x) -> (Wumpus(x) | Voompus(x) | Rompus(x)))", "all x.(Wren(x) -> ((Wumpus(x) | Voompus(x) | Rompus(x))))"]}
{"id": "prontoqa_train_1523", "nl": "Everything that is a vumpus, a wumpus, and a shumpus is a jompus and a grimpus and a numpus.", "fol": "all x. ((vumpus(x) & wumpus(x) & shumpus(x)) -> (jompus(x) & grimpus(x) & numpus(x)))", "prediction": ["all x.((Vumpus(x) | Wumpus(x) | Humpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) | Wumpus(x) | Shumpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) | Wumpus(x) | Humpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "all x y.((Vumpus(x) & Wumpus(x) & Humpus(y)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) & Wumpus(x) & Humpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "all x y.((Vumpus(x) & Wumpus(y) & Shumpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "all x y z.((Vumpus(x) & Wumpus(y) & Humpus(z) & Shumpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) | Wumpus(x) | Humpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "(all x.((Vumpus(x) | Wumpus(x) | Humpus(x))) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) | Wumpus(x) | Humpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) & Wumpus(x) & Shumpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "all x.(VumpusWumpusShumpus(x) -> (Jompus(x) | Grimpus(x) | Numpus(x)))", "all x.((Vumpus(x) | Wumpus(x) | Shumpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "(all x.((Vumpus(x) | Wumpus(x) | Humpus(x))) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) | Wumpus(x) | Shumpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "(all x.((Vumpus(x) | Humpus(x)) & Shumpus(x)) -> (Jompus(x) | Grimpus(x) | Numpus(x)))"]}
{"id": "prontoqa_train_1524", "nl": "Jompuses are not dumpuses.", "fol": "all x. (jompus(x) -> -dumpus(x))", "prediction": ["all x.(Jompuse(x) -> -Dumpuse(x))", "(all x.(Jompuse(x) -> -Dumpuse(x)))", "all x.(Jompuse(x) -> -Dumpuse(x))", "-Dumpuse(jompus)", "(all x.(Jompuse(x) -> -Dumpuse(x)))", "all x.(Jompuse(x) -> -Dumpuse(x))", "-Dumpsuse(jompus)", "all x.(Jompuse(x) -> -Dumpsuse(x))", "(all x.(Jompuse(x) -> -Dumpuse(x)))", "all x.(Jome(x) -> -Dumpuse(x))", "-Dumpuse(jompus)", "all x.(Jimpus(x) -> -Dumpuse(x))", "all x.(Jompuse(x) -> -Dumpuse(x))", "all x.(Jompuse(x) -> -Dumpsuse(x))", "all x.(Jompuse(x) -> -Dumpuse(x))", "all x.(Jompuse(x) -> -Dumpsus(x))"]}
{"id": "prontoqa_train_1525", "nl": "Alex is a lorpus or Alex is a yumpus or Alex is not a vumpus.", "fol": "(lorpus(Alex) | yumpus(Alex) | -vumpus(Alex))", "prediction": ["all x.(Alex(x) -> (Lorpus(x) | Yumpus(x) | -Vumpus(x)))", "(all x.(Alex(x) -> Lorpus(x)) | (Alex(x) -> Yumpus(x)) | (Alex(x) -> -Vumpus(x))))", "((Alex(Alex) & Lorpus(Alex)) | (Alex(Alex) & Yumpus(Alex)) | (Alex(Alex) & -Vumpus(Alex))))", "(exists x.(Alex(x) & (Lorpus(x) | Yumpus(x))) | -Vumpus(x)))", "all x.(Alex(x) -> ((Lorpus(x) | Yumpus(x)) | -Vumpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Yampus(x) | -Vumpus(x)))", "all x y.((Alex(x) & Lorpus(x)) | (Alex(y) & Yumpus(y)) | (Alex(x) & -Vumpus(x))))", "(all x.(Alex(x) -> Lorpus(x)) | (Alex(x) -> Yumpus(x)) | (Alex(x) -> -Vumpus(x))))", "(all x.(Alex(x) -> (Lorpus(x) | Yampus(x) | -Vumpus(x))))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> Yumpus(x)) | (Alex(x) -> -Vumpus(x))))", "all x.(Alex(x) -> (Lorpus(x) | Yumpus(x) | -Vumpus(x)))", "exists x.(Alex(x) & ((Lorpus(x) & -Vumpus(x)) | (Yumpus(x) & -Lorpus(x))))", "all x y.((Alex(x) & Lorpus(x)) | (Alex(y) & Yumpus(y)) | (Alex(x) & -Vumpus(x))))", "all x.(Alex(x) -> ((Lorpus(x) | Yumpus(x)) | -Vumpus(x)))", "exists x.(Alexa(x) & ((Lorpus(x) | Yumpus(x)) | -Vumpus(x))))", "all x.(Alex(x) -> (Lorpus(x) | Yampus(x) | -Vumpus(x)))"]}
{"id": "prontoqa_train_1526", "nl": "Every gorpus is a vumpus, a shumpus, and a numpus.", "fol": "all x. (gorpus(x) -> (vumpus(x) & shumpus(x) & numpus(x)))", "prediction": ["all x.(Gorpus(x) -> (Vumpus(x) | Humpus(x) | Numpus(x)))", "all x.(Gorpus(x) -> (Vumpus(x) | Humpus(x) | Numpus(x)))", "(all x.(Gorpus(x) -> Vumpus(x)) & all y.(Shumpus(y) & -Vumpus(y)) & all z.(Numpus(z) -> Numpus(z))))", "all x y z.((Gorpus(x) & Vumpus(y) & Humpus(z)) -> (Vumpus(x) | Humpus(z) | Numpus(z)))", "all x.(Gorpus(x) -> (Vumpus(x) & Shumpus(x) & Numpus(x)))", "all x y.((Gorpus(x) & Vumpus(y) & Humpus(y)) -> (Vumpus(x) & Humpus(y) & Numpus(y)))", "(all x.(Gorpus(x) -> Vumpus(x)) & all y.(Shumpus(y) & All z.(Numpus(z) & All w.(Vumpus(w) & All w.(Shumpus(w) & All w.(numpus(w)))))", "(all x.(Gorpus(x) -> Vumpus(x)) & all y.(Shumpus(y) & -Vumpus(y)) & all z.(Nompus(z) -> Nompus(z))))", "all x.(Gorpus(x) -> (Vumpus(x) | Humpus(x) | Numpus(x)))", "all x.(Gorpus(x) -> (Vimpus(x) & Humpus(x) & Numpus(x)))", "(all x.(Gorpus(x) -> Vumpus(x)) & (Shumpus(x) | Numpus(x)))", "all x.(Gorpus(x) -> (Vumpus(x) | Shumpus(x) | Numpus(x)))", "all x.(Gorpus(x) -> (Vumpus(x) | Humpus(x) | Numpus(x)))", "exists x.(Gorpus(x) & Vumpus(x) & Shumpus(x) & Numpus(x))", "all x.(Gorpus(x) -> (Vumpus(x) | Humpus(x) | Numpus(x)))", "exists x.(Gorpus(x) & Vumpus(x) & Humpus(x) & Numpus(x))"]}
{"id": "prontoqa_train_1527", "nl": "Alex is a shumpus, a yumpus, or a zumpus.", "fol": "(shumpus(Alex) | yumpus(Alex) | zumpus(Alex))", "prediction": ["all x.(Alex(x) -> (Shumpus(x) | Yumpus(x) | Zumpus(x)))", "all x.(Alex(x) -> (Shumpus(x) | Yumpus(x) | Zumpus(x)))", "(all x.(Alex(x) -> Humpus(x)) & all y.(Yumpus(y) & all z.(Zumpus(z) & -Shumpus(z))))", "(all x.(Alex(x) -> Shumpus(x)) | (Yumpus(x) | Zumpus(x))))", "(Shumpus(Alex) | Yumpus(Alex) | Zumpus(Alex))", "(Shumpus,Yumpus,Zumpus) | Shumpus,Yumpus,Zumpus))", "all x y.((Alex(x) & Shumpus(y)) | (Yumpus(y) | Zumpus(y))))", "all x.(Alex(x) -> (Shumpus(x) | Yumpus(x) | Zumpus(x)))", "all x.(Alex(x) -> (Shumpus(x) | Yumpus(x) | Zumpus(x)))", "exists x.(Alex(x) & ((Shumpus(x) & -Yumpus(x)) | (-Shumpus(x) & Yumpus(x)))))", "(all x.(Alex(x) -> Shumpus(x)) | (Yumpus(x) | Zumpus(x))))", "all x.(Alex(x) -> (Shumpus(x) | Yampus(x) | Zumpus(x)))", "all x.(Alex(x) -> (Shumpus(x) | Yumpus(x) | Zumpus(x)))", "all x.(Alex(x) -> (Shumpus(x) | Yumpus(x) | Zumpus(x)))", "all x.(Alex(x) -> (Shumpus(x) | Yumpus(x) | Zumpus(x)))", "all x.(Alex(x) -> (Shumpus(x) | Yampus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1528", "nl": "Every shumpus is an impus and a sterpus and a grimpus.", "fol": "all x. (shumpus(x) -> (impus(x) & sterpus(x) & grimpus(x)))", "prediction": ["all x.(Shumpus(x) -> (Impossible(x) & Sterpus(x) & Grimpus(x)))", "all x y.((Shumpus(x) & Sterpus(y)) -> (Impossible(x) & Sterpus(y) & Grimpus(y)))", "(all x.(Shumpus(x) -> Issuel(x)) & (Sterpus(x) | Grimpus(x))))", "all x.(Shumpus(x) -> (Impossible(x) & Sterpus(x) & Grimpus(x)))", "(all x.(Shumpus(x) -> Impossible(x)) & (Sterpus(x) -> Grimpus(x)))", "(all x.(Shumpus(x) -> Is(x)) & (Sterpus(x) | Grimpus(x)))", "all x y.((Shumpus(x) & Sterpus(y)) -> (Impossible(x) & Sterpus(y) & Grimpus(y)))", "all x.(Shumpus(x) -> (Impossible(x) & Sterpus(x) & Grimpus(x)))", "all x y.((Shumpus(x) & Impossible(x)) -> (Sterpus(y) & Grimpus(y)))", "(all x.(Shumpus(x) -> Impossible(x)) & all y.(Sterpus(y) -> Grimpus(y)))", "exists x.(Shumpus(x) & Is(x) & Sterpus(x) & Grimpus(x))", "(all x.(Shumpus(x) -> Impeccable(x)) & all y.(Sterpus(y) -> Grimpus(y)))", "all x.(Shumpus(x) -> (Issue(x) & Sterpus(x) & Grimpus(x)))", "exists x.(Shumpus(x) & Imposer(x) & Sterpus(x) & Grimpus(x))", "all x.(Shumpus(x) -> (Impossible(x) | Sterpus(x) | Grimpus(x)))", "all x.(Shumpus(x) -> (Impossible(x) & Sterpus(x) & Gruppus(x)))"]}
{"id": "prontoqa_train_1529", "nl": "Alex is not a sterpus, Alex is a vumpus, and Alex is a dumpus.", "fol": "(-sterpus(Alex) & vumpus(Alex) & dumpus(Alex))", "prediction": ["(all x.(Alex(x) -> -Sterpus(x)) & all y.(Alex(y) -> Vumpus(y)) & all z.(Alex(z) -> Dumpus(z))))", "all x y z.((Alex(x) & Sterpus(y) & Vumpus(z)) -> (-Sterpus(x) & -Vumpus(x) & -Dumpus(x)))", "all x.(Alex(x) -> (-Sterpus(x) & -Vumpus(x) & -Dumpus(x)))", "(all x y z.((Alex(x) & Sterpus(y)) -> -Sterpus(x)) & ((Alex(z) & Vumpus(z))) -> Dumpus(z)))", "(all x.(Alex(x) -> -Sterpus(x)) & (Alex(x) -> Vumpus(x)) & (Alex(x) -> Dumpus(x)))", "(all x y z.((Alex(x) & Sterpus(y) & Vumpus(z)) -> -Sterpus(x)) & ((Alex(x) & Dumpus(x)) -> Dumpus(x)))", "all x.(Alex(x) -> (-Sterepus(x) & Vumpus(x) & Dumpus(x)))", "(all x.(Alex(x) -> -Sterepus(x)) & all y.(Alex(y) -> Vumpus(y)) & all z.(Alex(z) -> Dumpus(z))))", "all x y z.((Alex(x) & Sterpus(y) & Vumpus(z)) -> (-Sterepus(x) & -Vumpus(y) & -Dumpus(z)))", "all x y z.((Alex(x) & Sterpus(y) & Vumpus(z)) -> (-Sterpus(x) | Dumpus(x)))", "(all x.(Alex(x) -> -Sterepus(x)) & all y.(Vumpus(y) & Dumpus(y)))", "all x.(Alex(x) -> (-Sterpus(x) & Vumpus(x) & Dumpus(x)))", "all x y z.((Alex(x) & Sterpus(y) & Vumpus(z)) -> (-Stereos(x) & -Vumpus(x) & -Dumpus(x)))", "(all x.(Alex(x) -> -Sterpus(x)) & (Alex(x) -> Vumpus(x)) & (Alex(x) -> Dumpus(x)))", "exists x.(Alex(x) & -Sterpus(x) & Vumpus(x) & Dumpus(x))", "(all x.(Alex(x) -> -Sterpus(x)) & all y.(Alex(y) -> Vumpus(y)) & all z.(Alex(z) -> Dumpus(z)))"]}
{"id": "prontoqa_train_1530", "nl": "Each sterpus is a brimpus, a lempus, and a shumpus.", "fol": "all x. (sterpus(x) -> (brimpus(x) & lempus(x) & shumpus(x)))", "prediction": ["all x.(Sterpus(x) -> (Brimpus(x) | Lempus(x) | Humpus(x)))", "(all x.(Sterpus(x) -> Brimpus(x)) & all y.(Lempus(y) & All z.(Shumpus(z))) -> Stempus(x)))", "all x y z.((Sterpus(x) & Brimpus(y) & Lempus(z) & Humpus(x)) -> (Brimpus(x) | Lempus(z) | Humpus(z)))", "all x.(Sterpus(x) -> (Brimpus(x) | Lempus(x) | Humpus(x)))", "all x y.((Sterpus(x) & Brimpus(y) & Lempus(y)) -> (Shumpus(x) & Shumpus(y)))", "(all x.(Sterpus(x) -> Brimpus(x)) & all y.(Lempus(y) & All z.(Shumpus(z)) -> Stempus(x)))", "all x.(Sterpus(x) -> (Brimpus(x) & Lempus(x) & Humpus(x)))", "all x.(Sterepus(x) -> (Brimpus(x) | Lempus(x) | Humpus(x)))", "all x.(Steerpus(x) -> (Brumpus(x) & Lempus(x) & Humpus(x)))", "all x.(Stereo(x) -> (Brimpus(x) | Lempus(x) | Humpus(x)))", "(all x.(Sterpus(x) -> Brimpus(x)) & all y.(Lempus(y) & -Shumpus(y)))", "(all x.(Sterepus(x) -> (Brimpus(x) | Lempus(x) | Humpus(x))))", "all x.(Sterpus(x) -> (Brimpus(x) | Lempus(x) | Humpus(x)))", "all x.(Sterpus(x) -> ((Brimpus(x) | Lempus(x) | Humpus(x))))", "exists x.(Sterpus(x) & Brimpus(x) & Lempus(x) & Humpus(x))", "exists x.(Steerpus(x) & Brimpus(x) & Lempus(x) & Shumpus(x))"]}
{"id": "prontoqa_train_1531", "nl": "Rex is a vumpus, a shumpus, or a gorpus.", "fol": "(vumpus(Rex) | shumpus(Rex) | gorpus(Rex))", "prediction": ["all x.(Rex(x) -> (Vumpus(x) | Humpus(x) | Gorpus(x)))", "(Vumpus(Rex) | Humpus(Rex) | Gorpus(Rex))", "all x.(Rex(x) -> (Vumpus(x) | Humpus(x) | Gorpus(x)))", "(Vumpus(rex) | Humpus(rex) | Gorpus(rex)))", "(Vumpus(rex) | Humpus(rex) | Gorpus(rex))", "all x.(Rex(x) -> (Vumpus(x) | Humpus(x) | Gorpus(x)))", "exists x.(Rex(x) & ((Vumpus(x) & -Shumpus(x)) | (-Vumpus(x) & Shumpus(x))) | (-Vumpus(x) & Shumpus(x)))))", "(Vumpus,Shumpus,Gorpus)", "all x y.(Rex(x) -> (Vumpus(x) | Humpus(x) | Gorpus(y)))", "all x.(Rex(x) -> (Vimpus(x) | Humpus(x) | Gorpus(x)))", "exists x.(Vumpus(x) | Humpus(x) | Gorpus(x))", "(Vumpus(Rex) | Humpus(Rex) | Gorpus(Rex))", "all x.(Rex(x) -> (Vumpus(x) | Humpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Vumpus(x) | Humpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Vumpus(x) | Humpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Vimpus(x) | Humpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1532", "nl": "Rompuses are numpuses and shumpuses and vumpuses.", "fol": "all x. (rompus(x) -> (numpus(x) & shumpus(x) & vumpus(x)))", "prediction": ["(all x.(Rompus(x) -> Numpus(x)) & all y.(Shumpus(y) -> Vampuse(y)))", "all x y.((Rompus(x) & Numpus(y)) -> (Shumpus(x) | Vampuse(x)))", "all x.(Rompus(x) -> (Numpus(x) | Shumpus(x) | Vampuse(x)))", "all x y z.((Rompuse(x) & Numpus(y) & Shumpus(z) & Vampuse(z)) -> (Numpus(x) | Shumpus(z) & Vampuse(z)))", "(all x.(Rompuse(x) -> Numpus(x)) & all y.(Shumpus(y) -> Vampuse(y)))", "all x y.((Rompus(x) & Numpus(y)) -> (Shumpus(x) & Vampuse(x)))", "(all x y.((Rompuse(x) & Numpus(y)) -> Numpus(x)) & ((Shumpus(x) & Vampuse(x)) -> Numpus(y)))", "(all x.(Rompus(x) -> Numpuse(x)) & all y.(Shumpus(y) -> Vampuse(y)))", "all x.(Rompus(x) -> (Numpus(x) | Humpus(x) | Vampuse(x)))", "(all x.(Rompus(x) -> Numpuse(x)) & (Shumpus(x) -> Vampuse(x)))", "all x.(Rompus(x) -> (Numpus(x) & Shumpus(x) & Vampuse(x)))", "(all x y.(Rompus(x) -> Numpuse(x)) & (Shumpus(y) -> Vampuse(y)))", "all x y.((Rompuse(x) & Numpus(y)) -> (Shumpus(x) | Vampus(x)))", "(all x.(Rompuse(x) -> Numpuse(x)) & all y.(Shumpus(y) -> Vampuse(y)))", "all x.(Rompus(x) -> (Numpuse(x) | Shumpus(x) | Vampuse(x)))", "(all x.(Rompus(x) -> Numpuse(x)) & all y.(Shumpus(y) -> Vampuse(y)))"]}
{"id": "prontoqa_train_1533", "nl": "Zumpuses are not numpuses.", "fol": "all x. (zumpus(x) -> -numpus(x))", "prediction": ["all x.(Zumpus(x) -> -Numpus(x))", "(-Numpus(z) & Zumpus(z))", "all x.(Zumpus(x) -> -Numpus(x))", "(-Numpus(z) & Zumpuses(z))", "-(Zumpus(z) & Numpus(x))", "all x.(Zumpus(x) -> -Numpuse(x))", "all x.(Zombie(x) -> -Numpus(x))", "(-Numpus(z) & Zumpus(z))", "(all x.(Zumpus(x) -> -Numpus(x)))", "all x.(Zumpus(x) -> -Numpus(x))", "-Numpuse(z)", "all x.(Zumpus(x) -> -Numpuse(x))", "all x.(Zumpuse(x) -> -Numpus(x))", "all x.(Zumpus(x) -> -Numpus(x))", "all x.(Zombies(x) -> -Numpuse(x))", "all x.(Zumpus(x) -> -Numpuse(x))"]}
{"id": "prontoqa_train_1534", "nl": "Polly is a vumpus, a wumpus, and a zumpus.", "fol": "(vumpus(Polly) & wumpus(Polly) & zumpus(Polly))", "prediction": ["all x.(Polly(x) -> (Vumpus(x) | Wumpus(x) | Zumpus(x)))", "(Vumpus(Polly) | Wumpus(Polly) | Zumpus(Polly))", "(Vumpus(Polly) & Wumpus(Polly) & Zumpus(Polly))", "all x y z.((Polly(x) & Vampire(y) & Wumpus(z)) -> (Vampire(x) & Wumpus(y) & Zumpus(z)))", "all x.(Polly(x) -> (Vimpus(x) & Wumpus(x) & Zumpus(x)))", "all x.(Polly(x) -> (Vumpus(x) | Wumpus(x) | Zumpus(x)))", "(all x.(Polly(x) -> Vumpus(x)) & all y.(Wumpus(y) & All z.(Zumpus(z))) -> Tompus(z)))", "(Vumpus(Polly) & Wumpus(Poly) & Zumpus(Polly))", "(Vumpus(Polly) | Wumpus(Polly) | Zumpus(Polly))", "all x.(Polly(x) -> (Vimpus(x) & Wumpus(x) & Zumpus(x)))", "all x y z.((Polly(x) & Vumpus(y) & Wumpus(z)) -> (Vumpus(x) | Wumpus(z) | Zumpus(z)))", "(Vumpus,Wumpus,Zumpus)", "(all x.(Polly(x) -> Vumpus(x)) & (Wumpus(x) & Zumpus(x)))", "all x.(Polly(x) -> (Vumpus(x) | Wumpus(x) | Zumpus(x)))", "exists x.(Vumpus(x) & Wumpus(x) & Zumpus(x))", "exists x.(Polly(x) & (Vimpus(x) | Wumpus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1535", "nl": "Each brimpus is a tumpus.", "fol": "all x. (brimpus(x) -> tumpus(x))", "prediction": ["all x.(Brumpus(x) -> Tumpus(x))", "all x.(Brimpus(x) -> Tumpus(x))", "all x y.((Brimpus(x) & Tumpus(y)) -> Has(x,y))", "all x.(Brumpus(x) -> Tumpus(x))", "all x y.((Brumpus(x) & Tumpus(y)) -> Is(x,y))", "all x.(Brimpus(x) -> Tumpus(x))", "all x y.((Brimpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Brumpus(x) -> Tumpus(x))", "exists x.(Brimpus(x) & Tumpus(x))", "all x.(Brimpus(x) -> Tumpus(x))", "all x.(Brumpus(x) -> Tumulus(x))", "all x.(Brimpus(x) -> Tumpus(x))", "exists x.(Brimpus(x) & Humpus(x))", "exists x.(Brimpus(x) & Tumpus(x))", "all x.(Brumpus(x) -> Tumpus(x))", "exists x.(Brampus(x) & Tumulus(x))"]}
{"id": "prontoqa_train_1536", "nl": "Wren is a dumpus and a brimpus and a lorpus.", "fol": "(dumpus(Wren) & brimpus(Wren) & lorpus(Wren))", "prediction": ["all x.(Wren(x) -> (Dumpus(x) & Brimpus(x) & Lorpus(x)))", "(Dumps(Wren) & Brimpus(Wren) & Lorpus(Wren))", "all x y.((Wren(x) & Dumpus(y)) -> (Brimpus(x) & Lorpus(x)))", "(all x.(Wren(x) -> Dumpus(x)) & (Brimpus(x) | Lorpus(x))))", "all x y z.((Wren(x) & Dumpus(y) & Brimpus(z)) -> (Dumpus(x) & Brimpus(z) & Lorpus(z)))", "all x.(Wren(x) -> (Dumpsus(x) & Brimpus(x) & Lorpus(x)))", "(all x.(Wren(x) -> Dumpus(x)) & all y.(Brimpus(y) & -Lorpus(y))))", "(Dumpus(wren) & Brimpus(wren) & Lorpus(wren))", "(Dumpus,Brimpus,Lorpus)", "all x.(Wren(x) -> (Dumpus(x) & Brimpus(x) & Lorpus(x)))", "all x y.(Wren(x) -> (Dumps(x) & Brimpus(y) & Lorpus(x)))", "all x.(Wren(x) -> (Dumps(x) & Brimpus(x) & Lorpus(x)))", "(all x.(Wren(x) -> Dumpus(x)) & (Brimpus(x) | Lorpus(x)))", "exists x.(Wren(x) & Dumpus(x) & Brimpus(x) & Lorpus(x))", "all x.(Wren(x) -> (Dumpus(x) & Brimpus(x) & Lorpus(x)))", "all x.(Wren(x) -> (Dumpus(x) & Brimpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_train_1537", "nl": "Wren is a tumpus, a jompus, or a vumpus.", "fol": "(tumpus(Wren) | jompus(Wren) | vumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "(all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x))))", "(Tumpus,Jompus,Vumpus)", "all x y.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(y)))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "exists x.(Wren(x) & ((Tumpus(x) & -Jompus(x)) | (-Tumpus(x) & Jompus(x)))))", "all x y.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "(all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "exists x.(Wren(x) & ((Tumpus(x) & -Jompus(x)) | (-Tumpus(x) & Jompus(x)))))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "exists x.(Wren(x) & ((Tumpus(x) & -Jompus(x)) | (-Jompus(x) & -Vumpus(x))))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))"]}
{"id": "prontoqa_train_1538", "nl": "Everything that is a rompus, a grimpus, or a gorpus is a brimpus, a jompus, and a zumpus.", "fol": "all x. ((rompus(x) | grimpus(x) | gorpus(x)) -> (brimpus(x) & jompus(x) & zumpus(x)))", "prediction": ["all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) | Jompus(x) | Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) & Jompus(x) & Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) | Jompus(x) | Zumpus(x)))", "all x y.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(y) & Jompus(y) & Zumpus(y)))", "(all x.((Rompus(x) | Grimpus(x) | Gorpus(x))) -> (Brimpus(x) | Jompus(x) | Zumpus(x)))", "all x y.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(y) & Jompus(y) & Zumpus(y)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) & Jompus(x) & Zumpus(x)))", "all x.(((Rompus(x) | Grimpus(x) | Gorpus(x))) -> (Brimpus(x) | Jompus(x) | Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) | Jompus(x) | Zumpus(x)))", "all x.(Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) & Jompus(x) & Zumpus(x)))", "all x.(Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) | Jompus(x) | Zumpus(x)))", "(all x.((Rompus(x) | Grimpus(x) | Gorpus(x))) -> (Brimpus(x) | Jompus(x) | Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) & Jompus(x) & Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) | Jompus(x) | Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) | Jompus(x) | Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) & Jompus(x) & Zumpus(x)))"]}
{"id": "prontoqa_train_1539", "nl": "Every gorpus is a lempus, a shumpus, and an impus.", "fol": "all x. (gorpus(x) -> (lempus(x) & shumpus(x) & impus(x)))", "prediction": ["all x.(Gorpus(x) -> (Lempus(x) | Humpus(x) | Imperator(x)))", "(all x.(Gorpus(x) -> Lempus(x)) & all y.(Gorpus(y) -> Humpus(y)) & all z.(Gorpus(z) -> Issue(z))))", "all x.(Gorpus(x) -> (Lempus(x) & Humpus(x) & Imperator(x)))", "all x y z.((Gorpus(x) & Lempus(y) & Humpus(z)) -> (Impossible(x) | Impossible(x)))", "all x y.((Gorpus(x) & Lempus(y) & Humpus(y)) -> Is(x,y))", "all x.(Gorpus(x) -> (Lempus(x) | Humpus(x) | Imperator(x)))", "(all x.(Gorpus(x) -> Lempus(x)) & all y.(Gorpus(y) -> Humpus(y)) & all z.(Gorpus(z) -> Impossible(z)))", "all x.(Gorpus(x) -> (Lempus(x) & Humpus(x) & Issue(x)))", "(all x.(Gorpus(x) -> Lempus(x)) & all y.(Gorpus(y) -> Shumpus(y)) & all z.(Gorpus(z) -> Issue(z))))", "all x.(Gorpus(x) -> (Lempus(x) | Humpus(x) | Issue(x)))", "all x.(Gorpus(x) -> (Lempus(x) | Humpus(x) | Imperator(x)))", "exists x.(Gorpus(x) & Lempus(x) & Humpus(x) & Issue(x))", "(all x.(Gorpus(x) -> Lempus(x)) & (Shumpus(x) | Imperator(x)))", "all x.(Gorpus(x) -> (Lempus(x) & Humpus(x) & Imperator(x)))", "exists x.(Gorpus(x) & Lempus(x) & Humpus(x) & Imperator(x))", "all x.(Gorpus(x) -> (Lempus(x) | Humpus(x) | Imperator(x)))"]}
{"id": "prontoqa_train_1540", "nl": "Fae is a grimpus and Fae is not a lempus and Fae is a wumpus.", "fol": "(grimpus(Fae) & -lempus(Fae) & wumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Wumpus(x)))", "(all x y.(Fae(x) -> Grimpus(x)) & (Fae(y) -> -Lempus(y)) & (Fae(y) -> Wumpus(y)))", "all x y z.((Fae(x) & Grimpus(x) & Fae(y) & Lempus(z)) -> (-Lempus(y) & Wumpus(y)))", "(all x y z.((Fae(x) & Grimpus(x)) -> (Fae(y) & -Lempus(y)) & ((Fae(z) & Humpus(z))) -> (Fae(z) & Grimpus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Wumpus(x)))", "all x y z.((Fae(x) & Grimpus(x) & Fae(y) & Wumpus(z)) -> (-Lempus(y) & -Fae(y) & Wumpus(z)))", "all x y z.((Fae(x) & Grimpus(x) & Fae(y) & Lempus(z) & Wumpus(x)) -> (Fae(x) & -Lempus(y) & Wumpus(z)))", "exists x.(Fae(x) & Grimpus(x) & -Lempus(x) & Wumpus(x))", "all x y.((Fae(x) & Grimpus(x) & Fae(y)) -> (-Lempus(y) & Wumpus(y)))", "all x y z.(Fae(x) & Grimpus(x) & Fae(y) & Lempus(z) & Wumpus(x))", "all x.(Fae(x) -> (Grimpus(x) & -Lempus(x) & Wumpus(x)))", "(all x.(Fae(x) -> Grumpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Wumpus(x)))", "(all x y.(Fae(x) -> Grimpus(x)) & (Fae(y) -> -Lempus(y)) & (Fae(y) -> Wumpus(y)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Wumpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (-Lempus(x) & (Wumpus(x) | Fae(x))))", "all x.(Fae(x) -> (Grimpus(x) & -Lempus(x) & Wumpus(x)))"]}
{"id": "prontoqa_train_1541", "nl": "Everything that is a tumpus, an impus, and a lorpus is a shumpus, a dumpus, and a jompus.", "fol": "all x. ((tumpus(x) & impus(x) & lorpus(x)) -> (shumpus(x) & dumpus(x) & jompus(x)))", "prediction": ["all x.((Tumpus(x) | Impossible(x) | Lorpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "all x y.((Tumpus(x) & Impossible(x) & Lorpus(y)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Tumpus(x) | Imperator(x) | Lorpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "(all x.((Tumpus(x) | Impossible(x)) & Lorpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lorpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Tumpus(x) & Impossible(x) & Lorpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "all x y z.((Tumpus(x) & Impossible(y) & Lorpus(z) & Has(x,y)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "all x.(Tumpus(x) & IsImpossible(x) & IsLorpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lorpus(x)) -> (Shumpus(x) | Dumpus(x) | Jompus(x)))", "all x.((Tumpus(x) & IsImpossible(x) & Lorpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "(all x.((Tumpus(x) | Impossible(x)) & Lordpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "all x y.((Tumpus(x) & Impossible(x) & Lorpus(y)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Tumpus(x) & Impossible(x) & Lorpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Tumpus(x) | Imperative(x) | Lorpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "(all x.((Tumpus(x) | Imperator(x)) & Lordpus(x)) -> (Shumpus(x) | Dumpus(x) | Jompus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lorpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))"]}
{"id": "prontoqa_train_1542", "nl": "Sally is an impus.", "fol": "impus(Sally)", "prediction": ["Sally is a impus.", "all x.(Sally(x) -> IsImpossible(x))", "Sally ist ein Issue.", "Sally is a impus.", "(Impossible(Sally)", "All x.(Sally(x) -> IsImpossible(x))", "all x.(Sally(x) -> Is(x,y))", "All x.(Sally(x) -> Impossible(x))", "Sally ist ein Issuem.", "Sally is a impus.", "(Impossible(Sally)", "all x.(Sally(x) -> Impermissible(x))", "Sally is a impuse.", "Sally ist ein Isolator.", "Sally is an impus.", "All x.(Sally(x) -> IsImpossible(x))"]}
{"id": "prontoqa_train_1543", "nl": "Sally is a shumpus.", "fol": "shumpus(Sally)", "prediction": ["Sally is a shumpus.", "all x.(Sally(x) -> Humpus(x))", "Sally is a shumpus.", "all x.(Sally(x) -> Humpus(x))", "(Shumpus(Sally) & HasShump(Sally,Sally))", "Sally is a shumpus.", "all x.(Sally(x) -> Humpus(x))", "Sally (Shumpus)", "(Shumpus(s) & Sally(s))", "(Shumpus(Sally) & Shumpus(Sally))", "Sally is a shumpus.", "Sally is shumpus.", "all x.(Sally(x) -> Humpus(x))", "all x.(Sally(x) -> Humptus(x))", "Sally is a shumpus.", "All x.(Sally(x) -> Humpus(x))"]}
{"id": "prontoqa_train_1544", "nl": "Everything that is a sterpus or a yumpus or a wumpus is a lorpus and a tumpus and a brimpus.", "fol": "all x. ((sterpus(x) | yumpus(x) | wumpus(x)) -> (lorpus(x) & tumpus(x) & brimpus(x)))", "prediction": ["all x.((Sterpus(x) | Yumpus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.((Sterpus(x) | Yampus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.((Stereopus(x) | Yumpus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x y.((Sterpus(x) | Yumpus(x) | Wumpus(x)) -> (Lorpus(y) & Tumpus(y) & Brimpus(y)))", "all x.(Sterpus(x) | Yumpus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.(((Sterpus(x) | Yumpus(x) | Wumpus(x))) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.((Sterpus(x) | Yumpus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.((Sterpus(x) | Yampus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x y.((Sterpus(x) | Yumpus(x) | Wumpus(x)) -> (Lorpus(y) & Tumpus(y) & Brimpus(y)))", "all x.((Sterepus(x) | Yumpus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "(all x.((Sterpus(x) | Yumpus(x) | Wumpus(x))) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.((Sterpus(x) | Yampus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x y.((Sterpus(x) | Yampus(x) | Wumpus(x)) -> (Lorpus(y) & Tumpus(y) & Brimpus(y)))", "(all x.((Sterepus(x) | Yampus(x) | Wumpus(x))) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.((Sterepus(x) | Yumpus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.((Sterpus(x) | Yampus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))"]}
{"id": "prontoqa_train_1545", "nl": "Everything that is a yumpus or a grimpus or a wumpus is a brimpus and a numpus and a gorpus.", "fol": "all x. ((yumpus(x) | grimpus(x) | wumpus(x)) -> (brimpus(x) & numpus(x) & gorpus(x)))", "prediction": ["all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))", "all x y.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(y) & Gorpus(y)))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))", "(all x.((Yumpus(x) | Grimpus(x) | Wumpus(x))) -> Brimpus(x)) & ((Nompus(x) & Gorpus(x))) -> Brimpus(x)))", "all x.(Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))", "(all x.((Yumpus(x) | Grimpus(x) | Wumpus(x))) -> Brimpus(x)) & all y.((Yumpus(y) & Gorpus(y)) -> Gorpus(y)))", "all x y.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(y) & Numpus(y) & Gorpus(y)))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))", "all x.(Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))", "all x y.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(y) & Gorpus(y)))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brumpus(x) | Numpus(x) | Gorpus(x)))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1546", "nl": "Everything that is a rompus and a grimpus and a lempus is a brimpus.", "fol": "all x. ((rompus(x) & grimpus(x) & lempus(x)) -> brimpus(x))", "prediction": ["all x.((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "all x y.((Rompus(x) & Grimpus(y) & Lempus(y)) -> Brimpus(x))", "all x.((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "all x y z.((Rompus(x) & Grimpus(y) & Lempus(z) & Has(x,y)) -> Brimpus(x))", "all x.((Rompus(x) | Grimpus(x) | Lempus(x)) -> Brimpus(x))", "all x.(((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "(all x.((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "all x.((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "all x y.((Rompus(x) & Grimpus(y) & Lempus(y)) -> Brimpus(x))", "all x.((Rompus(x) | Grimpus(x) | Lempus(x)) -> Brimpus(x))", "all x.((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "(all x.((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "all x.((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "all x.((Rompus(x) | Grimpus(x) | Lempus(x)) -> Brimpus(x))", "all x.((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "all x.((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))"]}
{"id": "prontoqa_train_1547", "nl": "Sally is a rompus and Sally is a dumpus and Sally is not a brimpus.", "fol": "(rompus(Sally) & dumpus(Sally) & -brimpus(Sally))", "prediction": ["(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> Dumpus(x)) & (Sally(x) -> -Brimpus(x)))", "all x y z.((Sally(x) & Rompus(x) & Dumpus(y) & -Brimpus(z)) -> (Rompus(x) & Dumpus(y) & -Brimpus(z)))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> Dumpus(y)) & all z.(Sally(z) -> -Brimpus(z))))", "all x y.((Sally(x) & Rompus(x) & Dumpus(y)) -> (Rompus(x) & -Brimpus(y)))", "(all x.(Rompus(x) -> Sally(x)) & all y.(Dumpus(y) -> Sally(y))) & all z.(Brimpus(z) -> -Sally(z))))", "all x.(Sally(x) -> (Rompus(x) & Dumpus(x) & -Brimpus(x)))", "all x y z.((Sally(x) & Rompus(y) & Dumpus(z)) -> (Rompus(x) & Dumpus(x) & -Brimpus(x)))", "(all x y.(Rompus(x) -> Sally(x)) & (Dumpus(y) -> Sally(y)))", "exists x.(Sally(x) & Rompus(x) & Dumpus(x) & -Brimpus(x))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> Dumpus(x)) & (Sally(x) -> -Brimpus(x)))", "all x y z.((Sally(x) & Rrompus(x) & Dumpus(y) & -Brimpus(z)) -> (Rompus(x) & Dumpus(y) & -Brimpus(z)))", "all x y.((Sally(x) & Rompus(x) & Dumpus(y)) -> (Rompus(x) & Dumpus(y) & -Brimpus(y)))", "all x.(Sally(x) -> (Rompus(x) & Dumpus(x) & -Brimpus(x)))", "(all x.(Rompus(x) -> Sally(x)) & (Dumpus(x) -> Sally(x)) & -Brimpus(x)))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> Dumpus(y)) & all z.(Sally(z) -> -Brimpus(z))))", "(all x y.(Rompus(x) -> Sally(x)) & (Dumpus(y) -> Sally(y)) & -Brimpus(y)))"]}
{"id": "prontoqa_train_1548", "nl": "Tumpuses are dumpuses, wumpuses, and lorpuses.", "fol": "all x. (tumpus(x) -> (dumpus(x) & wumpus(x) & lorpus(x)))", "prediction": ["all x.(Tumpus(x) -> (Dumps(x) | Wumpus(x) | Lorpus(x)))", "all x.(Tumpus(x) -> (Dumpuse(x) | Wumpus(x) | Lorpus(x)))", "(all x.(Tumpus(x) -> Dumpuse(x)) & all y.(Wumpus(y) -> Lorpus(y)))", "all x.(Tumpuse(x) -> (Dumpsuse(x) | Wumpuse(x) | Lorpuse(x)))", "all x y z.((Tumpus(x) & Dumpuse(y) & Wumpus(z) & Lorpus(z)) -> (Dumps(y) | Wumpus(z) | Lorpus(z)))", "all x.(Tumpus(x) -> (Dumps(x) | Wumpus(x) | Lorpus(x)))", "all x y z.((Tumpuse(x) & Dumpuse(y) & Wumpuse(z) & Lorpuse(x)) -> (Dumps(y) | Wumpus(z) | Lorpus(z)))", "(all x.(Tumpuse(x) -> Dumpuse(x)) & all y.(Wumpus(y) -> Lorpuse(y)))", "(all x.(Tumpus(x) -> Dumpuse(x)) & all y.(Wumpus(y) -> Lorpus(y)))", "all x.(Tumpus(x) -> (Dumpuse(x) | Wumpus(x) | Lorpus(x)))", "all x.(Tumpuse(x) -> (Dumpuse(x) | Wumpus(x) | Lorpuse(x)))", "(all x.(Tumpus(x) -> Dumpuse(x)) & all y.(Wumpus(y) -> Lorpuse(y)))", "(all x.(Tumpus(x) -> Dumpuse(x)) & (Wumpus(x) | Lorpus(x)))", "all x.(Tumpus(x) -> (Dumuse(x) | Wumpus(x) | Lorpus(x)))", "all x.(Tumpus(x) -> (Dumpuse(x) | Wumpuse(x) | Lorpuse(x)))", "(all x.(Tumpus(x) -> Dumpus(x)) & all y.(Wumpus(y) -> Lurpus(y)))"]}
{"id": "prontoqa_train_1549", "nl": "Stella is a sterpus, a lorpus, or a dumpus.", "fol": "(sterpus(Stella) | lorpus(Stella) | dumpus(Stella))", "prediction": ["all x.(Stella(x) -> (Sterpus(x) | Lorpus(x) | Dumpus(x)))", "(Stella(storpus) | Lorpus(storpus) | Dumpus(storpus)))", "all x y.((Stella(x) & (Sterpus(y) | Lorpus(y) | Dumpus(y))) -> (Sterpus(x) | Lorpus(y) | Dumpus(y)))", "all x.(Stella(x) -> (Sterpus(x) | Lorpus(x) | Dumpus(x)))", "(Stella) -> (Sterpus(Stella) | Lorpus(Stella) | Dumpus(Stella)))", "(all x.(Stella(x) -> (Sterepus(x) | Lorpus(x) | Dumpus(x))))", "exists x.(Stella(x) & ((Sterpus(x) & -Lorpus(x)) | (-Sterpus(x) & -Lorpus(x)))))", "all x y.((Stella(x) & (Sterpus(y) | Lorpus(y) | Dumpus(y))) -> (Sterpus(x) | Lorpus(y) | Dumpus(y)))", "all x.(Stella(x) -> (Sterepus(x) | Lorpus(x) | Dumpus(x)))", "(Stella) -> (Sterpus(Stella) | Lorpus(Stella) | Dumpus(Stella)))", "exists x.(Stella(x) & ((Sterpus(x) & -Lorpus(x) & -Dumpus(x)) | (-Sterpus(x) & Lorpus(x)))))", "all x.(Stella(x) -> (Sterpus(x) | Lorpus(x) | Dumpus(x)))", "exists x.(Stella(x) & ((Sterpus(x) | Lorpus(x)) | Dumpus(x))))", "all x.(Stella(x) -> (Sterepus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Stella(x) -> (Sterpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Stella(x) -> (Sterpus(x) | Lorpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_1550", "nl": "Every zumpus is a brimpus and a sterpus and a dumpus.", "fol": "all x. (zumpus(x) -> (brimpus(x) & sterpus(x) & dumpus(x)))", "prediction": ["all x.(Zumpus(x) -> (Brimpus(x) & Sterpus(x) & Dumpus(x)))", "all x y.((Zumpus(x) & Brimpus(y)) -> (Sterpus(x) & Dumpus(x)))", "all x.(Zumpus(x) -> (Brimpus(x) & Sterpus(x) & Dumpus(x)))", "(all x.(Zumpus(x) -> Brimpus(x)) & (Sterpus(x) & Dumpus(x)))", "(all x.(Zumpus(x) -> Brimpus(x)) & all y.(Sterpus(y) -> Dumpus(y)))", "all x.(Zumpus(x) -> (Brimpus(x) & Sterpus(x) & Dumpus(x)))", "all x y.((Tompus(x) & Brimpus(x) & Sterpus(y)) -> Dumpus(x))", "all x.(Tompus(x) -> (Brimpus(x) & Sterepus(x) & Dumpus(x)))", "all x.(Tompus(x) -> (Brumpus(x) | Sterpus(x) | Dumpus(x)))", "(all x.(Tompus(x) -> Brimpus)) & all y.(Sterepus(y) -> Dumpus(y)))", "all x.(Zumpus(x) -> (Brimpus(x) & Sterpus(x) & Dumpus(x)))", "(all x.(Zumpus(x) -> Brimpus(x)) & (Sterpus(x) -> Dumpus(x)))", "exists x.(Zumpus(x) & Brimpus(x) & Sterpus(x) & Dumpus(x))", "all x.(Zumpus(x) -> (Brimpus(x) & Sterpus(x) & Dumpus(x)))", "all x.(Tompus(x) -> (Brimpus(x) & Sterus(x) & Dumpus(x)))", "exists x.(Tompus(x) & Brimpus(x) & Sterepus(x) & Dumpus(x))"]}
{"id": "prontoqa_train_1551", "nl": "Wren is a tumpus or a dumpus or a sterpus.", "fol": "(tumpus(Wren) | dumpus(Wren) | sterpus(Wren))", "prediction": ["all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "(Tumpus(w) | Dumpus(w) | Sterpus(w)))", "(Tumpus,Tumpus(Wren) | Dumpus,Sterepus))", "all x y.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(y)))", "all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "all x.(Wren(x) -> ((Tumpus(x) | Dumpus(x) | Sterpus(x))))", "exists x.(Wren(x) & ((Tumpus(x) & -Dumpus(x)) | (-Dumpus(x) & Sterpus(x))))", "all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "all x y.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "(all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "all x.(Wren(x) -> ((Tumpus(x) | Dumpus(x) | Sterpus(x))))", "all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterepus(x)))", "exists x.(Wren(x) & (Tumpus(x) | Dumpus(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1552", "nl": "Wumpuses are lorpuses, impuses, and rompuses.", "fol": "all x. (wumpus(x) -> (lorpus(x) & impus(x) & rompus(x)))", "prediction": ["all x.(Wumpuse(x) -> (Lorpus(x) | Issue(x) | Rompus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Issue(x) | Rompus(x)))", "(all x.(Wumpuse(x) -> (Lorpuse(x) | Issue(x) | Rompuse(x)))", "(Lorpuse(w) | Issue(w) | Rompuse(w)))", "all x.(Wumpuse(x) -> (Lorpus(x) | Imperator(x) | Rompus(x)))", "all x y.((Wumpuse(x) & Lorpus(y)) -> (Issue(x,y) | Rompus(x,y)))", "all x y z.((Wumpuse(x) & Lorpus(y) & Issue(z) & Rompus(z)) -> (Lorpus(x) | Issue(z) | Rompus(z)))", "all x.(Wumpus(x) -> (Lorpus(x) | Imperator(x) | Rompus(x)))", "(all x.(Wumpuse(x) -> (Lorpuse(x) | Issue(x) | Rompuse(x)))", "all x.(Wumpuse(x) -> (Lorpuse(x) | Issue(x) | Rompuse(x)))", "(Lorpuse(w) | Issue(w) | Rompuse(w)))", "(all x.(Wumpus(x) -> Llorpuse(x)) & all y.(Issue(y) -> Rompuse(y)))", "all x.(Wumpus(x) -> (Lorpus(x) | Issue(x) | Rompus(x)))", "all x.(Wumpuse(x) -> (Lorpus(x) | Issue(x) | Rompus(x)))", "all x.(Wumpus(x) -> (Lorpuse(x) | Impossible(x) | Rompuse(x)))", "all x.(Wumpuse(x) -> (Lorpuse(x) | Issue(x) | Rompuse(x)))"]}
{"id": "prontoqa_train_1553", "nl": "Sam is a rompus or a shumpus or a dumpus.", "fol": "(rompus(Sam) | shumpus(Sam) | dumpus(Sam))", "prediction": ["all x.(Sam(x) -> (Rompus(x) | Humpus(x) | Dumpus(x)))", "(Rompus(Sam) | Humpus(Sam) | Dumpus(Sam))", "all x.(Sam(x) -> (Rompus(x) | Humpus(x) | Dumpus(x)))", "(Rompus(Sam) | Humpus(Sam) | Dumpus(Sam))", "all x.(Sam(x) -> (Rompus(x) | Humpus(x) | Dumpus(x)))", "all x y.(Sam(x) -> (Rompus(x) | Humpus(x) | Dumpus(x)))", "all x.(Sam(x) -> ((Rompus(x) | Humpus(x) | Dumpus(x))))", "(Rompus(Sam) | Humpus(Sam) | Dumpus(Sam))", "exists x.(Rompus(x) | Humpus(x) | Dumpus(x))", "all x.(Sam(x) -> (Rompus(x) | Humpus(x) | Dumpus(x)))", "(all x.(Sam(x) -> (Rompus(x) | Humpus(x) | Dumpus(x)))", "all x.(Sam(x) -> (Rompus(x) | Humpus(x) | Dumpus(x)))", "all x.(Sam(x) -> (Rompus(x) | Humpus(x) | Dumpus(x)))", "all x.(Sam(x) -> (Rompus(x) | Shumpus(x) | Dumpus(x)))", "all x.(Sam(x) -> ((Rompus(x) | Humpus(x) | Dumpus(x))))", "exists x.(Sam(x) & (Rompus(x) | Humpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_1554", "nl": "Each vumpus is a lorpus and a grimpus and a tumpus.", "fol": "all x. (vumpus(x) -> (lorpus(x) & grimpus(x) & tumpus(x)))", "prediction": ["all x.(Vumpus(x) -> (Lorpus(x) & Grimpus(x) & Tumpus(x)))", "all x y.((Vumpus(x) & Lorpus(y)) -> (Lorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Grimpus(x) & Tumpus(x)))", "(all x.(Vumpus(x) -> Lorpus(x)) & (Grimpus(x) | Tumpus(x))))", "(all x.(Vumpus(x) -> Lorpus(x)) & all y.(Grimpus(y) -> Tumpus(y)))", "exists x.(Vumpus(x) & Lorpus(x) & Grimpus(x) & Tumpus(x))", "all x y z.(Vumpus(x) -> (Lorpus(x) & Grimpus(y) & Tumpus(z)))", "all x.(Vumpus(x) -> (Lorpus(x) & Grimpus(x) & Tumpus(x)))", "all x y.((Vumpus(x) & Lorpus(y)) -> (Lorpus(x) & Grimpus(y) & Tumpus(y)))", "(all x.(Vumpus(x) -> Lorpus(x)) & (Grimpus(x) & Tumpus(x)))", "exists x.(Vumpus(x) & Lorpus(x) & Grimpus(x) & Tumpus(x))", "all x.(Vumpus(x) -> (Lorph(x) & Grimpus(x) & Tumpus(x)))", "(all x.(Vumpus(x) -> Loomis(x)) & (Grimpus(x) | Tumpus(x))))", "exists x.(Vumpus(x) & Lorpus(x) & Grimpus(x) & Tumpus(x))", "all x.(Vumpus(x) -> (Lorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Grimpus(x) & Tumpus(x)))"]}
{"id": "prontoqa_train_1555", "nl": "Sam is a lorpus, a tumpus, or an impus.", "fol": "(lorpus(Sam) | tumpus(Sam) | impus(Sam))", "prediction": ["all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Imperator(x)))", "(Lorpus(sam) | Tumpus(sam) | Imperator(sam))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Imperator(x)))", "(Lorpus,Tumpus,Issue) | Issue(Sam))", "(all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Imperator(x)))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Imperator(x)))", "all x y.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Imperator(x)))", "(Lorpus,Tumpus,Issue) | Issue(Sam))", "exists x.(Sam(x) & ((Lorpus(x) & -Tumpus(x)) | (-Lorpus(x) & -Tumpus(x)))))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Impossible(x)))", "all x.(Sam(x) -> (Lorph(x) | Tumpus(x) | Imperator(x)))", "(all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Impossible(x)))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Issue(x)))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Imperator(x)))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Impeccable(x)))", "exists x.(Sam(x) & (Lorpus(x) | Tumpus(x) | Impossible(x)))"]}
{"id": "prontoqa_train_1556", "nl": "Each vumpus is a wumpus and a numpus and a shumpus.", "fol": "all x. (vumpus(x) -> (wumpus(x) & numpus(x) & shumpus(x)))", "prediction": ["all x.(Vumpus(x) -> (Wumpus(x) & Numpus(x) & Humpus(x)))", "all x y.((Vumpus(x) & Wumpus(y)) -> (Wumpus(x) & Numpus(x) & Humpus(x)))", "all x.(Vumpus(x) -> (Wumpus(x) & Numpus(x) & Humpus(x)))", "(all x.(Vumpus(x) -> Wumpus(x)) & (Numpus(x) & Humpus(x)))", "all x y z.(Vumpus(x) -> (Wumpus(x) & Numpus(y) & Humpus(z)))", "(all x.(Vumpus(x) -> Wumpus(x)) & all y.(Nompus(y) & All z.(Shumpus(z)) -> Shumpus(z))))", "all x.(Vumpus(x) -> (Wumpus(x) & Numpus(x) & Humpus(x)))", "exists x.(Vumpus(x) & Wumpus(x) & Numpus(x) & Humpus(x))", "all x y.((Vumpus(x) & Wumpus(y)) -> (Wumpus(x) & Numpus(y) & Humpus(y)))", "(all x.(Vumpus(x) -> Wumpus(x)) & all y.(Vumpus(y) -> Numpus(y)) & all z.(Vumpus(z) -> Humpus(z))))", "all x.(Vumpus(x) -> (Wumpus(x) & Numpus(x) & Humpus(x)))", "(all x.(Vumpus(x) -> Wumpus(x)) & (Nompus(x) | Humpus(x))))", "exists x.(Vumpus(x) & Wumpus(x) & Numpus(x) & Humpus(x))", "all x.(Vumpus(x) -> (Wumpus(x) & Numpus(x) & Humpus(x)))", "all x.(Vumpus(x) -> (Wumpus(x) & Numpus(x) & Humpus(x)))", "exists x.(Vumpus(x) & Wumpus(x) & Numpus(x) & Humpus(x))"]}
{"id": "prontoqa_train_1557", "nl": "Stella is a wumpus or a gorpus or a lempus.", "fol": "(wumpus(Stella) | gorpus(Stella) | lempus(Stella))", "prediction": ["all x.(Stella(x) -> (Wumpus(x) | Gorpus(x) | Lempus(x)))", "(Wumpus(Stella) | Gorpus(Stella) | Lempus(Stella)))", "all x.(Stella(x) -> (Wumpus(x) | Gorpus(x) | Lempus(x)))", "(Wumpus(s) | Gorpus(s) | Lempus(s)))", "all x y.((Stella(x) & Wumpus(y)) | (Gorpus(x) | Lempus(x))))", "all x.(Stella(x) -> (Wumpus(x) | Gorpus(x) | Lempus(x)))", "(all x.(Stella(x) -> Wumpus(x)) | (Gorpus(x) | Lempus(x))))", "all x.(Stella(x) -> ((Wumpus(x) | Gorpus(x) | Lempus(x))))", "(Wumpus(s) | Gorpus(s) | Lempus(s)))", "exists x.(Wumpus(x) | Gorpus(x) | Lempus(x))", "(Wumpus,Worpus,Lempus)", "all x.(Stella(x) -> (Wumpus(x) | Gorpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Gorpus(x) | Lempus(x)))", "exists x.(Wumpus(x) | Gorpus(x) | Lempus(x))", "all x.(Stella(x) -> ((Wumpus(x) | Gorpus(x) | Lempus(x))))", "exists x.(Wumpus(x) | Gorpus(x) | Lempus(x))"]}
{"id": "prontoqa_train_1558", "nl": "Every lempus is a tumpus, a vumpus, and a shumpus.", "fol": "all x. (lempus(x) -> (tumpus(x) & vumpus(x) & shumpus(x)))", "prediction": ["all x.(Lempus(x) -> (Tumpus(x) | Vumpus(x) | Humpus(x)))", "(all x.(Lempus(x) -> Tumpus(x)) & all y.(Vumpus(y) -> Humpus(y)))", "all x.(Lempus(x) -> (Tumpus(x) | Vumpus(x) | Humpus(x)))", "all x y.((Lempus(x) & Tumpus(y)) -> (Vumpus(x) & Humpus(y)))", "all x y z.((Lempus(x) & Tumpus(y) & Vumpus(z) & Humpus(z)) -> (Tumpus(x) | Vumpus(y) | Humpus(z)))", "all x.(Lempus(x) -> (Tumpus(x) & Vumpus(x) & Humpus(x)))", "exists x.(Lempus(x) & Tumpus(x) & Tumpus(x) & Tumpus(x) & Tumpus(x) & Tumpus(x) & Tumpus(x) & Tumpus(x) & Tumpus(x) & Tumpus(x) & Tumpus(x) & Tumpus(x) & Tumpus(x))", "all x.(Lempus(x) -> (Tumpus(x) | Vumpus(x) | Humpus(x)))", "(all x.(Lempus(x) -> Tumpus(x)) & all y.(Vumpus(y) -> Humpus(y)))", "all x.(Lempus(x) -> (Tumpus(x) & Vumpus(x) & Humpus(x)))", "(all x.(Lempus(x) -> Tumpus(x)) & all y.(Vimpus(y) -> Humpus(y)))", "(all x.(Lempus(x) -> Tumpus(x)) & (Vumpus(x) -> Humpus(x)))", "all x.(Limpus(x) -> (Tumpus(x) | Vumpus(x) | Humpus(x)))", "exists x.(Lempus(x) & Tumpus(x) & Vumpus(x) & Humpus(x))", "all x.(Lempus(x) -> (Tumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Lempus(x) -> (Tumpus(x) & Vumpus(x) & Humpus(x)))"]}
{"id": "prontoqa_train_1559", "nl": "Rex is a tumpus or a wumpus or a zumpus.", "fol": "(tumpus(Rex) | wumpus(Rex) | zumpus(Rex))", "prediction": ["all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "(Tumpus(rex) | Wumpus(rex) | Zumpus(rex)))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "(Tumpus) | Wumpus(Wumpus) | Zumpus(Wumpus))", "(all x.(Rex(x) -> Tumpus(x)) | (Wumpus(x) | Zumpus(x))))", "(Tumpus(rex) | Wumpus(rex) | Zumpus(rex)))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "all x y.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "exists x.(Tumpus(x) | Wumpus(x) | Zumpus(x))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "(all x.(Rex(x) -> Tumpus(x)) | (Wumpus(x) | Zumpus(x))))", "all x.(Rex(x) -> ((Tumpus(x) | Wumpus(x) | Zumpus(x))))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1560", "nl": "Everything that is a numpus, a lorpus, or a brimpus is a gorpus.", "fol": "all x. ((numpus(x) | lorpus(x) | brimpus(x)) -> gorpus(x))", "prediction": ["all x.((Nompus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Numpus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x y.((Nompus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(y))", "(all x.((Nompus(x) | Lorpus(x) | Brimpus(x))) -> Gorpus(x))", "all x y.((Nompus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(y))", "all x.((Nompus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Numpus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Loupus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Numpus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Lops(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Numpus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Numpus(x) | Lordpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Numpus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Numpus(x) | Lordpus(x) | Brimpus(x)) -> Gorpus(x))"]}
{"id": "prontoqa_train_1561", "nl": "Max is a tumpus, a lorpus, and a lempus.", "fol": "(tumpus(Max) & lorpus(Max) & lempus(Max))", "prediction": ["(all x.(Max(x) -> Tumpus(x)) & all y.(Lorpus(y) & All z.(Max(z) -> Lempus(z))))", "all x.(Max(x) -> (Tumpus(x) | Lorpus(x) | Lempus(x)))", "(Tumpus(Max) | Lorpus(Max) | Lempus(Max))", "all x y z.((Max(x) & Tumpus(y) & Lorpus(z)) -> (Tumpus(x) | Lampus(z)))", "(all x.(Max(x) -> Tumpus(x)) & (Lorpus(x) & Lempus(x)))", "all x.(Max(x) -> (Tumpus(x) & Lorpus(x) & Lempus(x)))", "(Tumpus(Max) & Lorpus(Max) & Lempus(Max))", "all x y z.((Max(x) & Tumpus(y) & Lorpus(z)) -> (Tumpus(x) | Lorpus(z) | Lempus(z)))", "(all x.(Max(x) -> Tumpus(x)) & all y.(Lorpus(y) -> Lempus(y)))", "all x.(Max(x) -> (Tumpus(x) | Lorpus(x) | Lempus(x)))", "(Tumpus(Max) | Lorpus(Max) | Lempus(Max))", "all x.(Max(x) -> (Tumpus(x) & Lorpus(x) & Lempus(x)))", "(all x.(Max(x) -> Tumpus(x)) & (Lorpus(x) -> Lempus(x)))", "all x.(Max(x) -> (Tumpus(x) | Lorpus(x) | Lempus(x)))", "(All x.(Max(x) -> Tumpus(x)) & (Lorpus(x) -> Lempus(x)))", "all x.(Max(x) -> (Tumpus(x) & Lorpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_1562", "nl": "Each gorpus is a sterpus, a zumpus, and a lempus.", "fol": "all x. (gorpus(x) -> (sterpus(x) & zumpus(x) & lempus(x)))", "prediction": ["all x.(Gorpus(x) -> (Sterpus(x) | Zumpus(x) | Lempus(x)))", "all x.(Gorpus(x) -> (Sterepus(x) & Zumpus(x) & Lempus(x)))", "(all x.(Gorpus(x) -> Sterpus(x)) & all y.(Tompus(y) & AllLimpus(y))))", "all x y z.((Gorpus(x) & Sterpus(y) & Zumpus(z)) -> (Stereo(x) & Lempus(x)))", "all x.(Gorpus(x) -> (Sterpus(x) | Zumpus(x) | Lempus(x)))", "(all x.(Gorpus(x) -> Sterpus(x)) & all y.(Tompus(y) -> Lempus(y)))", "all x y z.((Gorpus(x) & Sterpus(y) & Zumpus(z)) -> (Sterpus(x) | Lempus(x)))", "(all x.(Gorpus(x) -> Sterpus(x)) & all y.(Tompus(y) & All z.(Lempus(z)) -> Sterpus(x)))", "all x.(Gorpus(x) -> (Sterpus(x) | Zumpus(x) | Lempus(x)))", "all x.(Gorpus(x) -> (Sterpus(x) & Zumpus(x) & Lempus(x)))", "(all x.(Gorpus(x) -> Sterpus(x)) & (Tompus(x) | Lempus(x)))", "all x.(Gorpus(x) -> (Sterepus(x) | Zumpus(x) | Lempus(x)))", "all x.(Gorpus(x) -> (Sterepus(x) & Zumpus(x) & Lempus(x)))", "exists x.(Gorpus(x) & Sterpus(x) & Zumpus(x) & Lempus(x))", "all x.(Gorpus(x) -> (Sterpus(x) | Zumpus(x) | Lempus(x)))", "exists x.(Gorpus(x) & Sterpus(x) & Zumpus(x) & Lempus(x))"]}
{"id": "prontoqa_train_1563", "nl": "Fae is a zumpus, a yumpus, or a tumpus.", "fol": "(zumpus(Fae) | yumpus(Fae) | tumpus(Fae))", "prediction": ["all x.(Fae(x) -> (Tompus(x) | Yumpus(x) | Tumpus(x)))", "all x.(Fae(x) -> (Tompus(x) | Yumpus(x) | Tumpus(x)))", "all x y.((Fae(x) & (Zumpus(y) | Yumpus(y) | Tumpus(y))) -> (Tompus(x) | Tompus(y)))", "(Tompus(fae) | Yumpus(fae) | Tumpus(fae))", "(all x.(Fae(x) -> Zumpus(x) | (Yumpus(x) & (Tumpus(x) | Tompus(x)))))", "(Tompus(f) | Yumpus(f) | Tumpus(f)))", "(Zumpus,yumpus,tumpus)", "all x.(Fae(x) -> (Tompus(x) | Yumpus(x) | Tumpus(x)))", "all x.(Fae(x) -> (Zumpus(x) | Yumpus(x) | Tumpus(x)))", "all x.(Fae(x) -> (Tompus(x) | Yumpus(x) | Tumpus(x)))", "exists x.(Fae(x) & ((Zumpus(x) & -Yumpus(x)) | (-Zumpus(x) & -Yumpus(x)))))", "all x.(Fae(x) -> (Tompus(x) | Yumpus(x) | Tumpus(x)))", "all x.(Fae(x) -> (Zumpus(x) | Yampus(x) | Tumpus(x)))", "exists x.(Fae(x) & (Zumpus(x) | Yumpus(x) | Tumpus(x)))", "all x.(Fae(x) -> (Tompus(x) | Yumpus(x) | Tumpus(x)))", "exists x.(Fae(x) & (Zumpus(x) | Yumpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1564", "nl": "Every lempus is a yumpus and a jompus and a shumpus.", "fol": "all x. (lempus(x) -> (yumpus(x) & jompus(x) & shumpus(x)))", "prediction": ["all x.(Lempus(x) -> (Yumpus(x) & Jompus(x) & Humpus(x)))", "all x y.((Lempus(x) & Yumpus(y)) -> (Jompus(x) & Humpus(x)))", "all x.(Lempus(x) -> (Yumpus(x) & Jompus(x) & Humpus(x)))", "(all x.(Lempus(x) -> Yumpus(x)) & all y.(Jompus(y) & all z.(Shumpus(z)) -> Humpus(z))))", "all x y.((Lempus(x) & Yumpus(x) & Jompus(y) & Humpus(y)) -> (Yumpus(x) & Jompus(y) & Humpus(y)))", "(all x.(Lempus(x) -> Yumpus(x)) & (Jompus(x) | Humpus(x))))", "all x y.((Lempus(x) & Yumpus(y)) -> (Jompus(x) & Humpus(y)))", "all x.(Lempus(x) -> (Yumpus(x) & Jompus(x) & Humpus(x)))", "all x.(Limpus(x) -> (Yumpus(x) & Jompus(x) & Humpus(x)))", "all x.(Lempus(x) -> (Yumpus(x) | Jompus(x) | Humpus(x)))", "(all x.(Lempus(x) -> Yumpus(x)) & all y.(Jompus(y) -> Humpus(y)))", "exists x.(Lempus(x) & Yumpus(x) & Jompus(x) & Humpus(x))", "all x.(Lempus(x) -> (Yumpus(x) & Jompus(x) & Humpus(x)))", "(all x.(Lempus(x) -> Yampus(x)) & (Jompus(x) & Humpus(x)))", "exists x.(Lempus(x) & Yumpus(x) & Jompus(x) & Humpus(x))", "all x.(Lempus(x) -> (Yumpus(x) & Jompus(x) & Humpus(x)))"]}
{"id": "prontoqa_train_1565", "nl": "Stella is not a shumpus and Stella is a yumpus and Stella is a grimpus.", "fol": "(-shumpus(Stella) & yumpus(Stella) & grimpus(Stella))", "prediction": ["(all x.(Shumpus(x) -> -Shumpus(x)) & all y.(Yumpus(y) -> Grimpus(y)))", "all x y z.((Stella(x) & Humpus(y) & Yampus(z)) -> (-Shumpus(x) & -Yumpus(y) & -Smokey(z)))", "(all x.(Shumpus(x) -> -Shumpus(x)) & (Yumpus(x) -> Grimpus(x)))", "(all x y z.((Shumpus(x) & Stella(y) & Humpus(z)) -> -Shumpus(x)) & ((Shumpus(y) & Yumpus(y)) -> Grimpus(z)))", "all x y z.((Stella(x) & Humpus(y) & Yumpus(z)) -> (-Shumpus(x) & -Yumpus(y) & -Smokey(z)))", "all x.(Stella(x) -> (-Shumpus(x) & (Yumpus(x) | Grimpus(x))))", "all x y.((Stella(x) & -Shumpus(x)) -> (Yumpus(x) & Grimpus(y)))", "all x y z.(Stella(x) -> (-Shumpus(x) & -Yumpus(y) & -Grimpus(z)))", "exists x.(Stella(x) & -Shumpus(x) & exists yumpus(y) & exists z.(Stella(z) & Grimpus(z))))", "(all x.(Shumpus(x) -> -Shumpus(x)) & all y.(Yumpus(y) -> Grimpus(y)))", "(all x y.(Shumpus(x) -> -Shumpus(x)) & (Yumpus(y) -> Grimpus(y)))", "(all x y z.((Shumpus(x) & Stella(y) & Yumpus(z)) -> -Shumpus(x)) & ((Shumpus(y) & Grimpus(z)) -> (Yumpus(y) & Grimpus(z))))", "all x y z.((Stella(x) & Humpus(y) & Yumpus(z)) -> (-Shumpus(x) & -Yumpus(y) & -Smoky(z)))", "(all x.(Shumpus(x) -> -Shumpus(x)) & all y.(Yumpus(y) -> Yumpus(y))) & all z.(Smooch(z) -> Grimpus(z)))", "all x y.((Stella(x) & Shumpus(y) & Yumpus(y)) -> (-Shumpus(x) & Grimpus(y)))", "(all x.(Shumpus(x) -> -Shumpus(x)) & (Yumpus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1566", "nl": "Vumpuses are grimpuses.", "fol": "all x. (vumpus(x) -> grimpus(x))", "prediction": ["all x.(Vumpus(x) -> Grimpuse(x))", "all x.(Vumpus(x) -> Grimpus(x))", "(Fragpuses(Vumpuses) & Grimpuses(Vumpuses))", "all x y.((Vumpus(x) & Grimpus(y)) -> (Fragpus(x) & Grimpus(y)))", "(all x.(Vumpus(x) -> Grimpuse(x)))", "(Gruppuse(v) & Grimpuse(v))", "all x.(Vumpus(x) -> Grimpuse(x))", "all x y.((Vumpus(x) & Grimpus(y)) -> (Smoothpus(x) & Grimpus(y)))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpuse(x) -> Grimpuse(x))", "all x.(Vumpus(x) -> Grappa(x))", "all x.(Vumpus(x) -> Grimpuse(x))", "all x.(Voluptus(x) -> Grimpuse(x))", "all x.(Vumpus(x) -> Gruppus(x))", "all x.(Vumpuse(x) -> Grimpuse(x))", "all x.(Vumpus(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_1567", "nl": "Alex is a brimpus, Alex is not a grimpus, and Alex is a numpus.", "fol": "(brimpus(Alex) & -grimpus(Alex) & numpus(Alex))", "prediction": ["(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Numpus(x)))", "all x y z.((Alex(x) & Brimpus(x) & Grimpus(y) & Numpus(z)) -> (Brimpus(x) & -Grimpus(y) & Numpus(z)))", "all x y z.((Alex(x) & Brimpus(y) & Grimpus(z)) -> (Brimpus(x) & -Grimpus(y) & Numpus(z)))", "(all x y z.((Alex(x) & Brimpus(y)) -> (Brimpus(z) | -Grimpus(z)) | (Numpus(x) & Alex(x))))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Numpus(x)))", "all x.(Alex(x) -> (Brimpus(x) & -Grimpus(x) & Numpus(x)))", "(all x.(Alex(x) -> Brimpus(x)) & all y.(Alex(y) -> -Grimpus(y))) & all z.(Alex(z) -> Numpus(z)))", "(all x y z.((Alex(x) & Brimpus(x)) -> (Brimpus(y) & -Grimpus(z))) & ((Alex(x) & Numpus(x)) -> Numpus(x)))", "(all x.(Alexa(x) -> Brimpus(x)) & (Alexa(x) -> -Grimpus(x)) & (Alexa(x) -> Numpus(x)))", "all x y z.((Alex(x) & Brimpus(x) & Grimpus(y) & Numpus(z)) -> (Brimpus(x) & -Grimpus(y) & Numpus(z)))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Numpus(x)))", "all x y z.((Alex(x) & Brimpus(x) & Grumpus(y) & Numpus(z)) -> (Brimpus(x) & -Grimpus(y) & Numpus(z)))", "all x.(Alex(x) -> (Brimpus(x) & -Grimpus(x) & Numpus(x)))", "all x y z.((Alex(x) & Brimpus(y) & Grimpus(z)) -> (Brimpus(x) | Numpus(x)))", "all x.(Alex(x) -> (Brumpus(x) & -Grimpus(x) & Numpus(x)))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Numpus(x)))"]}
{"id": "prontoqa_train_1568", "nl": "Alex is not a vumpus, Alex is a zumpus, or Alex is a vumpus.", "fol": "(-vumpus(Alex) | zumpus(Alex) | vumpus(Alex))", "prediction": ["all x.(Alex(x) -> (-Vumpus(x) | Zumpus(x) | Vumpus(x)))", "(all x.(Alex(x) -> -Vumpus(x)) | (Alex(x) -> Zumpus(x)) | (Alex(x) -> Vumpus(x))))", "((Alex(Alex) & -Vumpus(Alex)) | (Alex(Alex) & Zumpus(Alex)) | (Alex(Alex) & Vumpus(Alex))))", "all x y.((Alex(x) & (-Vumpus(x) | Zumpus(x) | Vumpus(y))) -> -Vumpus(x))", "all x.(Alex(x) -> (-Vumpus(x) | Zumpus(x) | Vumpus(x)))", "(all x.(Alex(x) -> -Vumpus(x)) & (Alex(x) -> Zumpus(x)) | (Alex(x) -> Vumpus(x))))", "(all x.(Alex(x) -> -Vumpus(x)) | (Alex(x) -> Zumpus(x))))", "(exists x.(Alex(x) & -Vumpus(x)) | exists y.(Alex(y) & Zumpus(y))))", "all x y z.((Alex(x) & Vumpus(y) & Zumpus(z)) -> (-Vumpus(x) | Versus(x)))", "all x y.((Alex(x) & -Vumpus(x)) | (Alex(y) & Zumpus(y)) | (Alex(y) & Vumpus(y))))", "(all x.(Alex(x) -> -Vumpus(x)) | (Alex(x) -> Zumpus(x)) | (Alex(x) -> Vumpus(x))))", "all x.(Alex(x) -> (-Vumpus(x) | Zumpus(x) | Vumpus(x)))", "all x.(Alex(x) -> (-Vumpus(x) | Zumpus(x) | Vumpus(x)))", "exists x.(Alex(x) & -Vumpus(x) & (Tompus(x) | Vumpus(x)))", "all x.(Alex(x) -> (-Vumpus(x) | Zumpus(x) | Vumpus(x)))", "exists x.(Alex(x) & -Vimpus(x) & (Tompus(x) | Vimpus(x)))"]}
{"id": "prontoqa_train_1569", "nl": "Yumpuses are rompuses.", "fol": "all x. (yumpus(x) -> rompus(x))", "prediction": ["all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x y.((Yumpus(x) & Rompus(y)) -> (Rompus(x) & -Rompus(y)))", "(Rompus(y) & Contains(y,x))", "(Rompus(y) & Yumpus(z))", "all x.(Yumpus(x) -> Rompus(x))", "all x y.((Yumpus(x) & Rompus(y)) -> Is(x,y))", "(Rompus(y) & Contains(y,x) & Contains(y,x))", "all x.(Umpteen(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Umahawk(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "All x.(Yumpuse(x) -> Rompus(x))", "All x.(Umbuse(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_1570", "nl": "Tumpuses are not rompuses.", "fol": "all x. (tumpus(x) -> -rompus(x))", "prediction": ["all x.(Tumpus(x) -> -Rompus(x))", "all x.(Tumpuse(x) -> -Rompus(x))", "(all x.(Tumpuse(x) -> -Rompus(x)))", "all x.(Tumpus(x) -> -Rompus(x))", "-Rompus(tumpuse)", "all x.(Tumpuse(x) -> -Rompus(x))", "(all x.(Tumpus(x) -> -Rompus(x)))", "(all x.(Tumpuse(x) -> -Rompus(x)))", "all x.(Tumpuse(x) -> -rompus(x))", "all x.(Tumpus(x) -> -Rompus(x))", "all x.(Tumpus(x) -> -rompus(x))", "-rompus(tump)", "(all x.(Tumpus(x) -> -rompus(x)))", "all x.(Tumulus(x) -> -Rompus(x))", "all x.(Tumpuse(x) -> -rompus(x))", "all x.(Tumpus(x) -> -Rompus(x))"]}
{"id": "prontoqa_train_1571", "nl": "Max is a jompus, Max is not a yumpus, or Max is an impus.", "fol": "(jompus(Max) | -yumpus(Max) | impus(Max))", "prediction": ["(all x.(Max(x) -> Jompus(x)) | (-Max(x) & Yumpus(x))) | (-Max(x) & Imperator(x))))", "all x.(Max(x) -> (Jompus(x) | -Yumpus(x) | Imperator(x)))", "(exists x.(Max(x) & Jompus(x)) | exists y.(Max(y) & -Yumpus(y))) | exists z.(Max(z) & Imperator(z))))", "(all x.(Max(x) -> Jompus(x)) | (-Max(x) & Yumpus(x))) | (-Max(x) & Imperator(x))))", "all x y.((Max(x) & Jompus(x)) | (-Yumpus(x) | Impossible(x))))", "all x.(Max(x) -> (Jompus(x) | -Yumpus(x) | Impossible(x)))", "(all x.(Max(x) -> Jompus(x)) & (-Max(x) -> Yumpus(x)) | (-Max(x) -> Imperator(x))))", "exists x.(Mat Max(x) & ((Jompus(x) | -Yumpus(x)) | Impossible(x))))", "(exists x.(Max(x) & Jompus(x)) | exists y.(Max(y) & -Yumpus(y)) | exists z.(Max(z) & Imperator(z)))))", "all x.(Max(x) -> (Jompus(x) | -Yumpus(x) | IsImpossible(x)))", "(all x.(Max(x) -> Jompus(x)) & (-Max(x) -> Yumpus(x)) | (-Max(x) -> Imperator(x))))", "exists x.(Max(x) & ((Jompus(x) | -Yumpus(x)) | Imperator(x)))", "(all x.(Max(x) -> Jompus(x)) & (-Max(x) -> Yumpus(x)) | (-Max(x) -> Impeccable(x))))", "(all x.(Max(x) -> Jompus(x)) & ((Max(x) & -Yumpus(x)) | (-Max(x) & Imperator(x)))))", "all x.(Max(x) -> (Jompus(x) | -Yumpus(x) | Imperator(x)))", "all x.(Max(x) -> (Jimpus(x) | -Yumpus(x) | Imperator(x)))"]}
{"id": "prontoqa_train_1572", "nl": "Every jompus is not a lorpus.", "fol": "all x. (jompus(x) -> -lorpus(x))", "prediction": ["all x.(Jompus(x) -> -Lorpus(x))", "(all x.(Jompus(x) -> -Lorpus(x)))", "all x.(Jompus(x) -> -Lorpus(x))", "all x.(Jimpus(x) -> -Lorpus(x))", "all x.(Jompus(x) -> -Lorpus(x))", "(all x.(Jompus(x) -> -Lorpus(x)))", "all x y.((Jompus(x) & Lorpus(y)) -> -Lorpus(x))", "-Lorpus(jompus)", "all x.(Jompus(x) -> -Lorpus(x))", "all x.(Jimpus(x) -> -Lorpus(x))", "all x.(Jompus(x) -> -Lorpus(x))", "all x.(Jimpus(x) -> -Lorpus(x))", "all x.(Jompus(x) -> -Lorpus(x))", "exists x.(Jumpus(x) & -Lorpus(x))", "all x.(Jompus(x) -> -Lorpus(x))", "exists x.(Jompus(x) & -Lorpus(x))"]}
{"id": "prontoqa_train_1573", "nl": "Lempuses are jompuses.", "fol": "all x. (lempus(x) -> jompus(x))", "prediction": ["all x.(Lempuse(x) -> Jompuse(x))", "all x.(Lempuse(x) -> Jompuse(x))", "(Jompuse(lempuse) & -Jockuse(lempuse))", "all x y.((Lempuse(x) & Jompuse(y)) -> Has(x,y))", "(Jompuse(lempuse) & -Jompuse(lempuse))", "all x.(Lempuse(x) -> Jompuse(x))", "all x.(Lemme(x) -> Jompuse(x))", "all x y.((Lempuse(x) & Jompuse(y)) -> Has(x,y))", "all x.(Lempuse(x) -> Jompuse(x))", "all x.(Lemme(x) -> Jompuse(x))", "all x.(Lempuse(x) -> Jompuse(x))", "all x.(Lempuse(x) -> Jombus(x))", "all x.(Lampus(x) -> Jompuse(x))", "all x.(Lempuse(x) -> Jompuse(x))", "all x.(Lempuse(x) -> Jompus(x))", "All x.(Lempuse(x) -> Jompuse(x))"]}
{"id": "prontoqa_train_1574", "nl": "Everything that is a rompus, a vumpus, or a wumpus is a lorpus.", "fol": "all x. ((rompus(x) | vumpus(x) | wumpus(x)) -> lorpus(x))", "prediction": ["all x.((Rompus(x) | Vumpus(x) | Wumpus(x)) -> Lorpus(x))", "all x.((Rompus(x) | Vumpus(x) | Wumpus(x)) -> Lorpus(x))", "all x.(((Rompus(x) | Vumpus(x) | Wumpus(x))) -> Lorpus(x))", "all x.((Rompus(x) | Vumpus(x) | Wumpus(x)) -> Lorpus(x))", "all x y.((Rompus(x) | Vumpus(x) | Wumpus(x)) -> Lorpus(y))", "all x.((Rompus(x) | Vumpus(x) | Wumpus(x)) -> Lorpus(x))", "all x.((Rompus(x) | Voompus(x) | Wumpus(x)) -> Lorpus(x))", "all x y.((Rompus(x) | Vumpus(x) | Wumpus(x)) -> Lorpus(y))", "all x.(((Rompus(x) | Vumpus(x) | Wumpus(x))) -> Lorpus(x))", "all x.(((Rompus(x) | Vumpus(x) | Wumpus(x))) -> Lorpus(x))", "all x.((Rompus(x) | Vumpus(x) | Wumpus(x)) -> Lorpus(x))", "(all x.((Rompus(x) | Voompus(x) | Wumpus(x))) -> Lorpus(x))", "all x.((Rompus(x) | Vampus(x) | Wumpus(x)) -> Lorpus(x))", "all x.((Rompus(x) | Vampus(x) | Wumpus(x)) -> Lorpus(x))", "all x.((Rompus(x) | Volumpus(x) | Wumpus(x)) -> Lordess(x))", "all x.((Rompus(x) | Voompus(x) | Wumpus(x)) -> Lorpus(x))"]}
{"id": "prontoqa_train_1575", "nl": "Brimpuses are gorpuses and vumpuses and dumpuses.", "fol": "all x. (brimpus(x) -> (gorpus(x) & vumpus(x) & dumpus(x)))", "prediction": ["all x.(Brimpus(x) -> (Gorpus(x) & Vampuse(x) & Dumpuse(x)))", "all x y.((Brimpus(x) & Gorpus(y)) -> (Vampuse(x) | Dumpuse(x)))", "(all x.(Brimpus(x) -> Gorpuse(x)) & all y.(Vampuse(y) & -Dumpuse(y))))", "all x.(Brompus(x) -> (Gorpus(x) | Vampuse(x) | Dumpuse(x)))", "(all x.(Brompus(x) -> Gorpus(x)) & all y.(Vampuse(y) & -Dumpuse(y)))", "all x y.((Brompus(x) & Gorpus(y)) -> (Vumpuse(x) | Dumpuse(x)))", "(all x.(Brimpus(x) -> Gorpuse(x)) & all y.(Vampuse(y) & -Dumpuse(y)))", "all x.(Brimuse(x) -> (Gorpus(x) | Vampuse(x) | Dumpuse(x)))", "all x y z.(Brimpus(x) -> (Gorpus(x) & Vampuse(y) & Dumpuse(z)))", "(all x.(Brimpuse(x) -> Gorpuse(x)) & all y.(Vumpuse(y) & -Dumpuse(y)))", "all x.(Brimpuse(x) -> (Gorpuse(x) | Vampuse(x) | Dumpuse(x)))", "(all x.(Brimuse(x) -> Gorpuse(x)) & all y.(Vumpuse(y) & all z.(Dumpuse(z)) -> Dumpuse(z))))", "all x.(Brompus(x) -> (Gorpus(x) & Vampuse(x) & Dumpuse(x)))", "(all x.(Brompus(x) -> Gorpuse(x)) & (Vampuse(x) | Dumpuse(x))))", "all x.(Brimuse(x) -> (Gorpuse(x) | Vampuse(x) | Dumpuse(x)))", "all x.(Brompus(x) -> (Gorpuse(x) | Vampuse(x) | Dumpuse(x)))"]}
{"id": "prontoqa_train_1576", "nl": "Stella is a rompus and Stella is not a dumpus and Stella is a tumpus.", "fol": "(rompus(Stella) & -dumpus(Stella) & tumpus(Stella))", "prediction": ["(all x.(Rompus(x) -> -Dumpus(x)) & all y.(Tumpus(y) -> -Dumpus(y)))", "all x y z.((Stella(x) & Rompus(x) & Stella(y) & Dumpus(z)) -> (Rompus(x) & -Dumpus(y) & Tumpus(z)))", "all x y.((Rompus(x) & Dumpus(y)) -> (Rompus(x) & -Dumpus(y) & Tumpus(y)))", "(all x.(Rompus(x) -> Stella(x)) & (-Dumpus(x) -> Stella(x))) & (Tumpus(x) -> Stella(x)))", "(all x y.((Rompus(x) & -Dumpus(y)) -> Rompus(x)) & ((Dumpus(y) & -Dumpus(y)) -> Tumpus(y)))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Dumpus(x)) & (Stella(x) -> Tumpus(x)))", "(all x y z.(Rompus(x) -> Rompus(x)) & (Dumps(y) -> -Dumpus(y)) & (Tumpus(z) -> Tompus(z)))", "all x y.((Stella(x) & Rompus(x)) -> (-Dumpus(x) & Tumpus(y)))", "all x.(Stella(x) -> (Rompus(x) & -Dumpus(x) & Tumpus(x)))", "(all x y.(Rompus(x) -> Rompus(x)) & (Dumps(y) -> -Dumpus(y)) & (Tumpus(y) -> Tumpus(y)))", "all x y z.((Stella(x) & Rompus(x) & Stella(y) & Dumpus(z)) -> (Rompus(x) & -Dumpus(y) & Tumpus(z)))", "exists x.(Rompus(x) & Dumpus(x) & Tumpus(x))", "all x y z.((Stella(x) & Rompus(x) & Stella(y) & Dumpus(z) & Tumpus(x)) -> (Rompus(x) & -Dumpus(y) & Tumpus(z)))", "(all x.(Rompus(x) -> Stella(x)) & (-Dumpus(x) -> Stella(x)))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Dumpus(x)) & (Stella(x) -> Tumpus(x)))", "all x.(Stella(x) -> (Rompus(x) & -Dumps(x) & Tumpus(x)))"]}
{"id": "prontoqa_train_1577", "nl": "Polly is a numpus, Polly is not a vumpus, and Polly is a gorpus.", "fol": "(numpus(Polly) & -vumpus(Polly) & gorpus(Polly))", "prediction": ["(all x.(Polly(x) -> Numpus(x)) & (Polly(x) -> -Vumpus(x)) & (Polly(x) -> Gorpus(x)))", "all x y z.((Polly(x) & Numpus(y) & Vumpus(z)) -> (Numpus(x) & -Vumpus(y) & Gorpus(z)))", "(all x y z.((Polly(x) & Numpus(y)) -> Numpus(x)) & ((Polly(z) & -Vumpus(z))) -> Gorpus(z)))", "all x y z.((Polly(x) & Numpus(x) & Polly(y) & Vumpus(z)) -> (Nompus(x) & -Vumpus(y) & Gorpus(z)))", "(all x.(Ploy(x) -> Numpus(x)) & (-Ploy(x) -> Vumpus(x)) & (Ploy(x) -> Gorpus(x)))", "(all x.(Polly(x) -> Numpus(x)) & (Polly(x) -> -Vumpus(x)) & (Polly(x) -> Gorpus(x)))", "(all x y z.((Polly(x) & Numpus(y)) -> (Numpus(z) | -Vumpus(z))) & ((Polly(x) & Gorpus(x)) -> Gorpus(x)))", "all x.(Polly(x) -> (Numpus(x) & -Vumpus(x) & Gorpus(x)))", "exists x.(Polly(x) & Numpus(x) & -Vumpus(x) & Gorpus(x))", "all x y z.((Polly(x) & Numpus(x) & Polly(y) & Vumpus(z)) -> (Nompus(x) & Gorpus(y)))", "(all x.(Polly(x) -> Numpus(x)) & (Polly(x) -> -Vumpus(x)) & (Polly(x) -> Gorpus(x)))", "(all x.(Polly(x) -> Numpus(x)) & (Polly(x) -> -Vumpus(x)) & (Polly(x) -> Gorpus(x)))", "(all x.(Polly(x) -> Numpus(x)) & all y.(Polly(y) -> -Vumpus(y))) & all z.(Polly(z) -> Gorpus(z)))", "all x y z.((Polly(x) & Numpus(y) & Vumpus(z)) -> (Numpus(x) & -Vumpus(y) & Gorpus(z)))", "all x y z.((Polly(x) & Numpus(x) & Polly(y) & Vumpus(z)) -> (Nompus(x) & Gorpus(y)))", "(all x y z.((Polly(x) & Numpus(y)) -> Numpus(x)) & ((Polly(z) & -Vumpus(z))) -> Gorpus(z)))"]}
{"id": "prontoqa_train_1578", "nl": "Polly is a rompus or Polly is not a grimpus or Polly is a numpus.", "fol": "(rompus(Polly) | -grimpus(Polly) | numpus(Polly))", "prediction": ["all x.((Polly(x) & (Rompus(x) | -Grimpus(x) | Numpus(x))) -> Polly(x))", "(all x.(Polly(x) -> Rompus(x)) | (-Polly(x) & Grimpus(x)) | (-Polly(x) & Numpus(x))))", "all x y.((Polly(x) & Polly(y)) -> (Rompus(x) | -Grimpus(y) | Numpus(y)))", "((Polly(Polly) & Rompus(Polly)) | (Polly(Polly) & -Grimpus(Poly)) | (Polly(Poly) & Numpus(Poly))))", "(exists x.(Polly(x) & Rompus(x)) | exists y.(Polly(y) & -Grimpus(y))) | exists z.(Polly(z) & Numpus(z))))", "((Polly(Polly) & Rompus(Polly)) | (-Polly(Polly) & Grimpus(Poly)) | (-Polly(Polly) & Numpus(Poly))))", "(all x.(Polly(x) -> (Rompus(x) | -Grimpus(x) | Numpus(x))))", "all x.((Polly(x) & (Rompus(x) | -Grimpus(x) | Numpus(x))) -> Polly(x))", "all x y.((Polly(x) & (Rompus(x) | -Grimpus(x) | Numpus(y))) -> (Rompus(x) | Numpus(y)))", "all x y.((Polly(x) & Polly(y)) -> (Rompus(x) | -Grimpus(y) | Numpus(y)))", "((Polly(poly) & Rompus(poly)) | (Poly(poly) & -Grimpus(poly)) | (Poly(poly) & Numpus(poly))))", "all x.((Polly(x) & (Rompus(x) | -Grimpus(x) | Numpus(x))) -> Polly(x))", "(all x.(Polly(x) -> (Rompus(x) | -Grimpus(x) | Numpus(x))))", "exists x.(Polly(x) & ((Rompus(x) | -Grimpus(x)) | Numpus(x))))", "exists x.(Polly(x) & ((Rompus(x) | -Grimpus(x)) | Numpus(x))))", "all x.((Polly(x) & (Rompus(x) | -Grimpus(x) | Numpus(x))) -> Polly(x))"]}
{"id": "prontoqa_train_1579", "nl": "Everything that is a zumpus or a sterpus or an impus is a rompus.", "fol": "all x. ((zumpus(x) | sterpus(x) | impus(x)) -> rompus(x))", "prediction": ["all x.((Tompus(x) | Sterpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Tompus(x) | Sterpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Tompus(x) | Sterpus(x) | Impossible(x)) -> Rompus(x))", "all x.((Tompus(x) | Sterpus(x) | IsImpossible(x)) -> Rompus(x))", "all x y.((Tompus(x) | Sterpus(x) | Imperator(x)) -> Rompus(y))", "(all x.((Tompus(x) | Sterpus(x) | Impossible(x))) -> Rompus(x))", "all x.(((Tompus(x) | Sterpus(x) | Imperator(x))) -> Rompus(x))", "all x y.((Tompus(x) | Sterpus(x) | Imperator(x)) -> Rompus(y))", "all x.((Tompus(x) | Sterpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Tompus(x) | Sterpus(x) | Impossible(x)) -> Rompus(x))", "all x.((Zumpus(x) | Sterepus(x) | IsImpossible(x)) -> Rompus(x))", "all x.((Tommus(x) | sterpus(x) | impus(x)) -> Rompus(x))", "all x.((Zumpus(x) | Sterpus(x) | Impossible(x)) -> Rompus(x))", "all x.((Tompus(x) | Sterpus(x) | Imperative(x)) -> Rompus(x))", "all x.((Zumpus(x) | Sterpus(x) | IsImprovement(x)) -> Rompus(x))", "all x.((Tompus(x) | Sterepus(x) | Impossible(x)) -> Rompus(x))"]}
{"id": "prontoqa_train_1580", "nl": "Sam is a vumpus, an impus, and a dumpus.", "fol": "(vumpus(Sam) & impus(Sam) & dumpus(Sam))", "prediction": ["all x.(Sam(x) -> (Vumpus(x) & Imperative(x) & Dumpus(x)))", "(Vumpus(Sam) & Imperempt(Sam) & Dumpus(Sam))", "all x.(Sam(x) -> (Vumpus(x) & Imperative(x) & Dumpus(x)))", "all x y z.((Sam(x) & Vumpus(y) & Imperator(z)) -> (Vumpus(x) & Imperator(z) & Dumpus(x)))", "(Vumpus(Sam) & Imperempt(Sam) & Dumpus(Sam))", "(Vumpus(Sam) & Issuel(Sam) & Dumpus(Sam))", "all x.(Sam(x) -> (Vumpus(x) & Issue(x) & Dumpus(x)))", "(all x.(Sam(x) -> Vumpus(x)) & all y.(Impossible(y) -> Dumpus(y)))", "(Vumpus(sam) | Imperator(sam) | Dumpus(sam)))", "(Vumpus(Sam) | Imperative(Sam) | Dumpus(Sam))", "all x.(Sam(x) -> (Vimpus(x) & Imperator(x) & Dumpus(x)))", "all x.(Sam(x) -> (Vumpus(x) | Imperative(x) | Dumpus(x)))", "all x.(Sam(x) -> (Vumpus(x) | Imperative(x) | Dumpus(x)))", "exists x.(Vumpus(x) & Imperator(x) & Dumpus(x))", "all x.(Sam(x) -> (Vimpus(x) & Impossible(x) & Dumpus(x)))", "exists x.(Sam(x) & Vumpus(x) & Issue(x) & Dumpus(x))"]}
{"id": "prontoqa_train_1581", "nl": "Everything that is a lorpus, an impus, or a brimpus is a jompus.", "fol": "all x. ((lorpus(x) | impus(x) | brimpus(x)) -> jompus(x))", "prediction": ["all x.((Lorpus(x) | Impossible(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | Imperator(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | Impossible(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | IsImpossed(x) | IsBrimpus(x)) -> Jompus(x))", "all x y.((Lorpus(x) | Impossible(x) | Brimpus(x)) -> Jompus(y))", "all x.(((Lorpus(x) | Impossible(x) | Brimpus(x))) -> Jompus(x))", "all x.((Lorpus(x) | Imperative(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | Impossible(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | IsImpossible(x) | IsBrimpus(x)) -> Jompus(x))", "all x.((Motor(x) | Impossible(x) | Brimpus(x)) -> Jompus(x))", "all x y.((Lorpus(x) | Impossible(x) | Brimpus(x)) -> Jompus(y))", "(all x.((Lorpus(x) | Imperator(x) | Brimpus(x))) -> Jompus(x))", "all x.((Lorpus(x) | Imperempt(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | Impossible(x) | Brimpus(x)) -> Jompus(x))", "all x.((Larps(x) | Imperative(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | Imperator(x) | Brimpus(x)) -> Jompus(x))"]}
{"id": "prontoqa_train_1582", "nl": "Fae is a lorpus and a grimpus and a sterpus.", "fol": "(lorpus(Fae) & grimpus(Fae) & sterpus(Fae))", "prediction": ["all x.(Fae(x) -> (Lorpus(x) & Grimpus(x) & Sterpus(x)))", "(Lorpus(Fae) & Grimpus(Fae) & Sterpus(Fae))", "all x y z.((Fae(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) & Sterpus(x)))", "all x y.((Fae(x) & Lorpus(y)) -> (Lorpus(x) & Grimpus(x) & Sterpus(x)))", "(all x.(Fae(x) -> Lorpus(x)) & (Grimpus(x) | Sterpus(x))))", "all x.(Fae(x) -> (Lorpus(x) & Grimpus(x) & Sterpus(x)))", "(Lorpus(Fae) & Grimpus(Fae) & Sterpus(Fae))", "all x y z.((Fae(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) & Sterpus(x)))", "(all x.(Fae(x) -> Lorpus(x)) & all y.(Grimpus(y) & -Sterpus(y)))", "(all x.(Fae(x) -> Lorpus(x)) & (Grimpus(x) | Sterpus(x))))", "exists x.(Fae(x) & Lorpus(x) & Grimpus(x) & Sterpus(x))", "all x.(Fae(x) -> (Lorpus(x) & Grimpus(x) & Sterpus(x)))", "(Lorpus(fae) & Grimpus(fae) & Sterpus(fae))", "(Lorpus,Strictus,Sterpus)", "exists x.(Fae(x) & Lorpus(x) & Grimpus(x) & Sterpus(x))", "all x.(Fae(x) -> (Lorpus(x) & Grimpus(x) & Sterpus(x)))"]}
{"id": "prontoqa_train_1583", "nl": "Everything that is an impus, a gorpus, or a lempus is not a jompus.", "fol": "all x. ((impus(x) | gorpus(x) | lempus(x)) -> -jompus(x))", "prediction": ["all x.((Impos(x) | Gorpus(x) | Lempus(x)) -> -Jompus(x))", "all x.((Issue(x) | IsGorpus(x) | IsLempus(x)) -> -Jompus(x))", "all x.((Impose(x) | Gorpus(x) | Lempus(x)) -> -Jompus(x))", "all x.((Impos(x) | Gorpus(x) | Lempus(x)) -> -Jompus(x))", "(all x.((Issue(x) | IsGorpus(x) | IsLempus(x))) -> -Jompus(x))", "(all x.((Impose(x) | Gorpus(x) | Lempus(x))) -> -Jompus(x))", "all x.((Issue(x) | IsGorpus(x) | IsLempus(x)) -> -Jompus(x))", "all x.((Is(x) | IsGorpus(x) | IsLempus(x)) -> -Jompus(x))", "all x.((Impose(x) | Gorpus(x) | Lempus(x)) -> -Jompus(x))", "all x.((Impos(x) | Gorpus(x) | Lempus(x)) -> -Jompus(x))", "all x.((Impos(x) | Gorpus(x) | Lempus(x)) -> -Jompus(x))", "all x y.((Impos(x) | Gorpus(x) | Lempus(x)) -> -Jompus(y))", "all x.(((Impos(x) | Gorpus(x) | Lempus(x))) -> -Jompus(x))", "all x.((Impact(x) | Gorpus(x) | Lempus(x)) -> -Jompus(x))", "all x.(((Impos(x) | Gorpus(x) | Lempus(x))) -> -Jompus(x))", "(all x.((Impos(x) | Gorpus(x) | Lempus(x))) -> -Jompus(x))"]}
{"id": "prontoqa_train_1584", "nl": "Zumpuses are jompuses and rompuses and lorpuses.", "fol": "all x. (zumpus(x) -> (jompus(x) & rompus(x) & lorpus(x)))", "prediction": ["all x.(Zumpus(x) -> (Jompuse(x) | Rompus(x) | Lorpus(x)))", "(all x.(Zumpus(x) -> Jompuse(x)) & (Rompus(x) | Lorpus(x))))", "(all x.(Zumpus(x) -> Jompuse(x)) & all y.(Rompus(y) & All z.(Lorpus(z))) -> Lorpuse(z)))", "all x y.((Zumpus(x) & Jompuse(y)) -> (Rompus(y) | Lorpus(y)))", "all x.(Zumpus(x) -> (Jompuse(x) | Rompus(x) | Lorpuse(x)))", "(Jumpuses(z) | Rompuses(z) | Lorpuses(z)))", "all x y.((Zumpuse(x) & Jompuse(y)) -> (Rompus(x) | Lorpus(x)))", "all x y z.((Zumpuse(x) & Jompuse(y) & Rompuse(z) & Lorpuse(x)) -> (Jumpus(y) | Lorpus(z)))", "(all x.(Zumpuse(x) -> Jompuse(x)) & all y.(Rompus(y) & All z.(Lorpus(z))) -> Lorpuse(z)))", "(all x.(Zumpuse(x) -> Jompuse(x)) & (Rompus(x) | Lorpus(x)))", "all x.(Zumpus(x) -> (Jompuse(x) | Rompus(x) | Lorpus(x)))", "all x.(Zumpus(x) -> (Jompuse(x) & Rompus(x) & Lorpus(x)))", "all x.(Zumpus(x) -> (Jumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Zumpuse(x) -> (Jompuse(x) | Rompus(x) | Lorpuse(x)))", "(all x.(Zumpus(x) -> Jompuse(x)) & (Rompus(x) | Lorpus(x)))", "all x.(Zumpus(x) -> (Jumpsus(x) | Rompus(x) | Lorpus(x)))"]}
{"id": "prontoqa_train_1585", "nl": "Everything that is a lempus, a wumpus, or a zumpus is not a jompus.", "fol": "all x. ((lempus(x) | wumpus(x) | zumpus(x)) -> -jompus(x))", "prediction": ["all x.((Lempus(x) | Wumpus(x) | Zumpus(x)) -> -Jompus(x))", "all x.((Lempus(x) | Wumpus(x) | Zumpus(x)) -> -Jompus(x))", "all x.(((Lempus(x) | Wumpus(x) | Zumpus(x))) -> -Jompus(x))", "all x.((Lempus(x) | Wumpus(x) | Zumpus(x)) -> -Jompus(x))", "(all x.((Lempus(x) | Wumpus(x) | Zumpus(x))) -> -Jompus(x))", "all x.(((Lempus(x) | Wumpus(x) | Zumpus(x))) -> -Jompus(x))", "all x y.((Lempus(x) | Wumpus(x) | Zumpus(x)) -> -Jompus(y))", "all x.((Lempus(x) | Wumpus(x) | Zumpus(x)) -> -Jompus(x))", "(all x.((Lempus(x) | Wumpus(x) | Zumpus(x))) -> -Jompus(x))", "(all x.((Lempus(x) | Wumpus(x) | Zumpus(x)) -> -Jompus(x))", "all x.((Lempus(x) | Wumpus(x) | Zumpus(x)) -> -Jompus(x))", "all x.((Limpus(x) | Wumpus(x) | Zumpus(x)) -> -Jimpus(x))", "all x.((Lempus(x) | Wumpus(x) | Zumpus(x)) -> -Jompus(x))", "all x.((Limpus(x) | Wumpus(x) | Zumpus(x)) -> -Jimpus(x))", "all x.((Lempus(x) | Wumpus(x) | Zumpus(x)) -> -Jumpus(x))", "all x.((Lampus(x) | Wompus(x) | Zumpus(x)) -> -Jumpus(x))"]}
{"id": "prontoqa_train_1586", "nl": "Everything that is a yumpus and a brimpus and a vumpus is a jompus.", "fol": "all x. ((yumpus(x) & brimpus(x) & vumpus(x)) -> jompus(x))", "prediction": ["all x.((Yumpus(x) & Brimpus(x) & Vumpus(x)) -> Jompus(x))", "all x y.((Yumpus(x) & Brimpus(y) & Vumpus(y)) -> Jompus(x))", "(all x.((Yumpus(x) & -Brimpus(x) & -Vumpus(x)) -> Jompus(x))", "all x.((Yumpus(x) & Brimpus(x) & Vumpus(x)) -> Jompus(x))", "(all x.((Yumpus(x) & -Brimpus(x)) -> Jompus(x)) & all y.((Brimpus(y) & -Vumpus(y)) -> Jompus(y)))", "all x y z.((Yumpus(x) & Brimpus(y) & Vumpus(z) & Has(x,y)) -> Jompus(x))", "all x.((Yumpus(x) | Brimpus(x) | Vumpus(x)) -> Jompus(x))", "all x y.((Yumpus(x) & Brimpus(x) & Vumpus(x)) -> Jompus(y))", "all x.((Yumpus(x) & Brimpus(x) & Vumpus(x)) -> Jompus(x))", "all x.((Yumpus(x) & Brimpus(x) & Vumpus(x)) -> Jompus(x))", "all x.((Yumpus(x) | Brimpus(x) | Vumpus(x)) -> Jompus(x))", "all x y.((Yumpus(x) & Brimpus(y) & Vumpus(y)) -> Jompus(x))", "all x.((Yumpus(x) & Brimpus(x) & Vumpus(x)) -> Jompus(x))", "all x.((Yumpus(x) | Brimpus(x) | Vumpus(x)) -> Jompus(x))", "all x.((Yumpus(x) & Brimpus(x) & Voompus(x)) -> Jompus(x))", "all x.((Yumpus(x) & Brimpus(x) & Vumpus(x)) -> Jompus(x))"]}
{"id": "prontoqa_train_1587", "nl": "Fae is not a grimpus, Fae is a yumpus, and Fae is a dumpus.", "fol": "(-grimpus(Fae) & yumpus(Fae) & dumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Grimpus(x)) & (Fae(x) -> Yumpus(x)) & (Fae(x) -> Dumpus(x)))", "all x y z.((Fae(x) & Grimpus(y) & Yumpus(z)) -> (-Fae(x) & -Fae(x) & Dumpus(x)))", "(all x.(Fae(x) -> -Grimpus(x)) & all y.(Fae(y) -> Yumpus(y)) & all z.(Fae(z) -> Dumpus(z))))", "(all x y z.((Fae(x) & Grimpus(y)) -> -Grimpus(x)) & ((Fae(z) & Yumpus(z)) -> Dumpus(z)))", "all x.(Fae(x) -> (-Grimpus(x) & Yampus(x) & Dumpus(x)))", "all x y z.((Fae(x) & Yampus(y) & Dumpus(z)) -> (-Grimpus(x) & Yampus(y) & Dumpus(z)))", "all x y z.((Fae(x) & Grimpus(y) & Yumpus(z)) -> (-Fae(x) & Dumpus(x)))", "all x y z.(Fae(x) -> (-Grimpus(x) & Yampus(y) & Dumpus(z)))", "exists x.(Fae(x) & -Grimpus(x) & Yampus(x) & Dumpus(x))", "(all x.(Fae(x) -> -Grimpus(x)) & (Fae(x) -> Yumpus(x)) & (Fae(x) -> Dumpus(x)))", "(all x y z.((Fae(x) & Grimpus(y)) -> -Grimpus(x)) & ((Fae(z) & Yumpus(z)) -> Dumpus(z)))", "(all x y z.((Fae(x) & Grimpus(y) & Yumpus(z)) -> -Fae(x)) & ((Fae(x) & Yumpus(x)) -> Dumpus(x)))", "(all x.(Fae(x) -> -Grimpus(x)) & all y.(Fae(y) -> Yumpus(y)) & all z.(Fae(z) -> Dumpus(z))))", "all x y z.(Fae(x) & Grimpus(y) & Yumpus(z) & Dumpus(x))", "all x y z.((Fae(x) & Grimpus(y) & Yumpus(z)) -> (-Grimpus(x) & Dumpus(x)))", "(all x.(Fae(x) -> -Grimpus(x)) & (Fae(x) -> Yumpus(x)) & (Fae(x) -> Dumpus(x)))"]}
{"id": "prontoqa_train_1588", "nl": "Fae is not a wumpus, Fae is a lorpus, or Fae is a shumpus.", "fol": "(-wumpus(Fae) | lorpus(Fae) | shumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Wumpus(x)) | (Fae(x) -> Lorpus(x)) | (Fae(x) -> Humpus(x))))", "all x.(Fae(x) -> (-Wumpus(x) | (Lorpus(x) | Humpus(x))))", "(exists x.(Fae(x) & -Wumpus(x)) | exists y.(Lorpus(y) & Fae(x))) | exists z.(Shumpus(z) & Fae(x))))", "all x y.((Fae(x) & -Wumpus(x)) | (Lorpus(y) | Humpus(y))))", "all x.((Fae(x) & -Wumpus(x)) | (Lorpus(x) | Humpus(x))))", "(exists x.(Fae(x) & -Wumpus(x)) | exists y.(Lorpus(y) & -Wumpus(y))) | exists z.(Shumpus(z) & -Wumpus(z))))", "all x y z.((Fae(x) & -Wumpus(x) & (Lorpus(y) | Humpus(z))) -> -Wumpus(x))", "(all x.(Fae(x) -> -Wumpus(x)) & (Lorpus(x) | Humpus(x))))", "all x.(Fae(x) -> (-Wumpus(x) | (Lorpus(x) | Humpus(x))))", "all x y z.((Fae(x) & Wumpus(y) & Lorpus(z)) -> (-Wumpus(x) | (Lorpus(x) | Humpus(x))))", "(all x.(Fae(x) -> -Wumpus(x)) | (Fae(x) -> Lorpus(x)) | (Fae(x) -> Humpus(x))))", "exists x.(Fae(x) & -Wumpus(x) & (Lorpus(x) | Humpus(x)))", "all x.(Fae(x) -> (-Wumpus(x) | (Lorpus(x) | Humpus(x))))", "exists x.(Fae(x) & (-Wumpus(x) | -Lorpus(x) | -Shumpus(x)))", "(all x.(Fae(x) -> (-Wumpus(x) | -Lorpus(x) | Shumpus(x))))", "(all x.(Fae(x) -> -Wumpus(x)) | (Fae(x) -> Lorpus(x)) | (Fae(x) -> Humpus(x))))"]}
{"id": "prontoqa_train_1589", "nl": "Every yumpus is not a sterpus.", "fol": "all x. (yumpus(x) -> -sterpus(x))", "prediction": ["all x.(Yumpus(x) -> -Sterpus(x))", "all x.(Yumpus(x) -> -Sterpus(x))", "(-Sterpus(y) & AllOwn(y))", "all x y.((Yumpus(x) & -Sterpus(y)) -> -Sterpus(x))", "(all x.(Yumpus(x) -> -Sterpus(x)))", "all x.(Yumpus(x) -> -Sterpus(x))", "-Sterpus(y)", "all x.(Yumpus(x) -> -Sterepus(x))", "all x.(Yumpus(x) -> -Sterpus(x))", "all x.(Yumpus(x) -> -Sterepus(x))", "all x.(Yumpus(x) -> -Sterpus(x))", "all x.(Yumpus(x) -> -Sterpus(x))", "all x.(Yumpus(x) -> -Steerpus(x))", "exists x.(Yumpus(x) & -Stereopus(x))", "all x.(Yumpus(x) -> -Sterpus(x))", "exists x.(yumpus(x) & -Sterpus(x))"]}
{"id": "prontoqa_train_1590", "nl": "Every brimpus is a sterpus.", "fol": "all x. (brimpus(x) -> sterpus(x))", "prediction": ["all x.(Brimpus(x) -> Sterpus(x))", "all x.(Brumpus(x) -> Sterpus(x))", "all x y.((Brimpus(x) & Sterpus(y)) -> Is(x,y))", "all x.(Brimpus(x) -> Sterpus(x))", "all x y.((Brimpus(x) & Sterpus(y)) -> Has(x,y))", "(all x.(Brimpus(x) -> Sterepus(x))", "all x.(Brumpus(x) -> Sterepus(x))", "all x.(Brimpus(x) -> Sterpus(x))", "all x.(Brimpus(x) -> Sterpus(x))", "exists x.(Brimpus(x) & Sterpus(x))", "all x.(Brumpus(x) -> Sterpus(x))", "all x.(Brimpus(x) -> Sterpus(x))", "all x.(Brumpus(x) -> Sterepus(x))", "exists x.(Brimpus(x) & Sterus(x))", "exists x.(Brampus(x) & Steroid(x))", "all x.(Brimpus(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_1591", "nl": "Sally is a shumpus, Sally is not a brimpus, or Sally is a vumpus.", "fol": "(shumpus(Sally) | -brimpus(Sally) | vumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Humpus(x)) & (-Brimpus(x) | Vumpus(x))))", "all x.(Sally(x) -> (Shumpus(x) | -Brimpus(x) | Vumpus(x)))", "all x y.((Sally(x) & Shumpus(x)) | (-Brimpus(y) | Vumpus(y))))", "(all x.(Sally(x) -> Humpus(x)) & (-Brimpus(x) | Vumpus(x))))", "(all x.(Sally(x) -> Shumpus(x)) | (-Sally(x) & Brimpus(x)) | (-Sally(x) & Vumpus(x))))", "all x.(Sally(x) -> (Shumpus(x) | -Brimpus(x) | Vumpus(x)))", "(all x y.(Sally(x) -> Humpus(x)) | (-Brimpus(y) & Sally(y)) | (-Brimpus(y) & Vumpus(y))))", "(all x.(Sally(x) -> Humpus(x)) & all y.(Sally(y) -> -Brimpus(y))) & all z.(Sally(z) -> Vumpus(z))))", "all x y.((Sally(x) & Shumpus(x)) | (-Brimpus(x) | Vumpus(y))))", "exists x.(Sally(x) & ((Shumpus(x) & -Brimpus(x)) | (Vumpus(x) & Sally(x)))))", "all x.(Sally(x) -> (Shumpus(x) | -Brimpus(x) | Vumpus(x)))", "exists x.(Sally(x) & ((Shumpus(x) | -Brimpus(x)) | Vumpus(x)))", "all x y.(Sally(x) & (Shumpus(x) | -Brimpus(x) | Vumpus(y)))", "(all x.(Sally(x) -> Shumpus(x)) | (-Sally(x) & Brimpus(x)) | (-Sally(x) & Vumpus(x))))", "(all x.(Sally(x) -> Humpus(x)) & (-Brimpus(x) | Vumpus(x))))", "all x.(Sally(x) -> (Shumpus(x) | -Brumpus(x) | -Vumpus(x)))"]}
{"id": "prontoqa_train_1592", "nl": "Impuses are lorpuses, lempuses, and rompuses.", "fol": "all x. (impus(x) -> (lorpus(x) & lempus(x) & rompus(x)))", "prediction": ["all x.(Impus(x) -> (Lorpus(x) | Lempuse(x) | Rompus(x)))", "(all x.(Impuse(x) -> (Lorpuse(x) | Lempuse(x) | Rompuse(x))))", "all x.(Impuse(x) -> (Lorpus(x) | Lempuse(x) | Rompus(x)))", "all x y z.((Impuse(x) & Lorpus(y) & Lempuse(z) & Rompus(x)) -> (Lorpus(y) | Lempuse(z) | Rompus(z)))", "all x.(Impus(x) -> (Lorpus(x) | Lempuse(x) | Rompus(x)))", "all x.(Impus(x) -> (Lorpuse(x) | Lempuse(x) | Rompuse(x)))", "(all x.(Impuse(x) -> (Lorpus(x) | Lempuse(x) | Rompus(x)))", "all x.(Impuse(x) -> (Lorpus(x) | Lempuse(x) | Rompus(x)))", "all x y z.(Impus(x) -> (Lorpus(y) | Lempuse(y) | Rompus(z)))", "(all x.(Impuse(x) -> Loomis(x)) & all y.(Lempuse(y) & All z.(Rompus(z)) -> Rompus(z))))", "(all x.(Impuse(x) -> (Lorpuse(x) | Lempuse(x) | Rompuse(x)))", "(all x.(Impuse(x) -> (Lorpuse(x) | Lempuse(x) | Rompuse(x)))", "all x.(Impuse(x) -> (Lorpus(x) | Lempuse(x) | Rompus(x)))", "all x.(Impue(x) -> (Lorpus(x) | Lempuse(x) | Rompus(x)))", "exists x.(Impuse(x) & (Lorpus(x) | Lempuse(x) | Rompus(x)))", "all x.(Imbuse(x) -> (Lorpus(x) | Lempuse(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1593", "nl": "Stella is a jompus, a dumpus, or a rompus.", "fol": "(jompus(Stella) | dumpus(Stella) | rompus(Stella))", "prediction": ["all x.(Stella(x) -> (Jompus(x) | Dumpus(x) | Rompus(x)))", "(Jompus(Stella) | Dumpus(Stella) | Rompus(Stella)))", "all x y.((Stella(x) & (Jompus(y) | Dumpus(y) | Rompus(y))) -> (Jompus(x) | Dumpus(y) | Rompus(y)))", "all x.(Stella(x) -> (Jompus(x) | Dumpus(x) | Rompus(x)))", "(all x.(Stella(x) -> (Jompus(x) | Dumpus(x) | Rompus(x))))", "(Jompus(Stella) | Dumpus(Stella) | Rompus(Stella))", "(Jimpus,Dumpus,Rompus)", "all x.(Stella(x) -> (Jompus(x) | Dumpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Jimpus(x) | Dumpus(x) | Rompus(x)))", "(Jompus(Stella) | Dumpus(Stella) | Rompus(Stella))", "all x.(Stella(x) -> (Jompus(x) | Dumpus(x) | Rompus(x)))", "exists x.(Stella(x) & (Jumpus(x) | Dumpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Jimpus(x) | Dumpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Jompus(x) | Dumpus(x) | Rompus(x)))", "exists x.(Stella(x) & (Jumpus(x) | Dumpus(x) | Rompus(x)))", "exists x.(Stella(x) & (Jompus(x) | Dumpus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1594", "nl": "Each shumpus is a brimpus.", "fol": "all x. (shumpus(x) -> brimpus(x))", "prediction": ["all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "all x y.((Shumpus(x) & Brimpus(y)) -> Has(x,y))", "(all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "all x y.((Shumpus(x) & Brimpus(y)) -> HasShumpus(x,y))", "all x.(Shumpus(x) -> Brimpus(x))", "all x y.((Shumpus(x) & Brimpus(y)) -> Is(x,y))", "all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "exists x.(Shumpus(x) & -Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "exists x.(Shumpus(x) & Brumpus(x))", "exists x.(Shumpus(x) & Brumpus(x))"]}
{"id": "prontoqa_train_1595", "nl": "Grimpuses are not brimpuses.", "fol": "all x. (grimpus(x) -> -brimpus(x))", "prediction": ["all x.(Grimpus(x) -> -Brimpus(x))", "(all x.(Grimpus(x) -> -Brimpus(x)))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "(all x.(Grimpus(x) -> -Brimpus(x)))", "-Brimpus(grimpus)", "all x.(Grimpus(x) -> -Brimpus(x))", "(all x.(Grimpus(x) -> -Brimpus(x)))", "(all x.(Grimpuse(x) -> -Brimpus(x)))", "-Brimpus(g)", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpuse(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brompus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Gruppus(x) -> -Brompus(x))", "all x.(Rampus(x) -> -Brimpus(x))"]}
{"id": "prontoqa_train_1596", "nl": "Rex is a vumpus, Rex is a lorpus, or Rex is not a shumpus.", "fol": "(vumpus(Rex) | lorpus(Rex) | -shumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Vumpus(x)) & (Rex(x) -> Lorpus(x)) | (Rex(x) -> -Shumpus(x))))", "all x.(Rex(x) -> (Vimpus(x) | Lorpus(x) | -Shumpus(x)))", "all x y.((Rex(x) & Vumpus(x)) | (Lorpus(x) | -Shumpus(y))))", "(all x.(Rex(x) -> Vumpus(x)) | (Rex(x) -> Lorpus(x)) | (Rex(x) -> -Shumpus(x))))", "(exists x.(Rex(x) & Vumpus(x)) | exists y.(Lorpus(y) & -Shumpus(y))))", "all x y z.((Rex(x) & Vumpus(y) & Lorpus(z)) | (-Shumpus(x) & Rex(x))))", "all x.(Rex(x) -> (Vimpus(x) | Lorpus(x) | -Shumpus(x)))", "(Vumpus(rex) | Lorpus(rex) | -Shumpus(rex)))", "all x y.((Rex(x) & Vumpus(x) & Lorpus(y)) -> (Vumpus(x) | -Shumpus(x)))", "exists x.(Vumpus(x) | Lorpus(x) | -Shumpus(x))", "(all x.(Rex(x) -> Vumpus(x)) & (Rex(x) -> Lorpus(x)) | (Rex(x) -> -Shumpus(x))))", "(all x.(Rex(x) -> Vumpus(x)) | (Rex(x) -> Lorpus(x)) | (Rex(x) -> -Shumpus(x))))", "(all x.(Rex(x) -> Vumpus(x)) & (Lorpus(x) | -Shumpus(x))))", "all x.(Rex(x) -> (Vumpus(x) | Lorpus(x) | -Shumpus(x)))", "(all x y.(Vumpus(x) -> Rex)) | (Lorpus(y) -> Rex)) | (-Shumpus(y))))", "all x.(Rex(x) -> (Vimpus(x) | Lorpus(x) | -Shumpus(x)))"]}
{"id": "prontoqa_train_1597", "nl": "Yumpuses are dumpuses and numpuses and shumpuses.", "fol": "all x. (yumpus(x) -> (dumpus(x) & numpus(x) & shumpus(x)))", "prediction": ["all x.(Yumpus(x) -> (Dumpuse(x) | Numpuse(x) | Humpuse(x)))", "(all x.(Yumpus(x) -> Dumpuse(x)) & all y.(Numpuse(y) & All z.(Shumpus(z)) -> Humpuse(z))))", "all x y.((Yumpus(x) & Dumpuse(y)) -> (Numpuse(x) & Humpus(x)))", "(all x.(Yumpuse(x) -> Dumpuse(x)) & all y.(Numpuse(y) & All z.(Shumpuse(z)) -> Humpuse(z))))", "all x.(Yumpus(x) -> (Dumps(x) & Numpuse(x) & Humpus(x)))", "all x y z.((Yumpuse(x) & Numpuse(y) & Humpus(z)) -> (Dumpuse(x) | Numpuse(y) | Humpus(z)))", "all x.(Yumpus(x) -> (Dumpuse(x) & Numpuse(x) & Humpus(x)))", "all x y.((Yumpuse(x) & Numpuse(y)) -> (Dumpsus(x) | Numpuse(y) | Humpuse(y)))", "(all x.(Yumpus(x) -> Dumpuse(x)) & all y.(Numpuse(y) & All z.(Shumpus(z)) -> Humpus(z))))", "all x y z.((Yumpus(x) & Numpuse(y) & Humpus(z)) -> (Dumpuse(x) | Numpuse(y) | Humpus(z)))", "(all x y.(Yumpus(x) -> Dumpuse(x)) & (Numpuse(y) | Humpus(y))))", "(all x.(Yumpuse(x) -> Dumpuse(x)) & all y.(Numpuse(y) & All z.(Shumpuse(z)) -> Humpuse(z))))", "all x.(Yumpus(x) -> (Dumuse(x) | Numpuse(x) | Shumpuse(x)))", "(all x.(Yumpus(x) -> Dumpus(x)) & (Numpuse(x) | Shumpus(x)))", "all x.(Umbuse(x) -> (Dumuse(x) | Numpuse(x) | Shumpuse(x)))", "all x.(Yumpus(x) -> (Dumpuse(x) & Numpuse(x) & Humpuse(x)))"]}
{"id": "prontoqa_train_1598", "nl": "Alex is a tumpus and Alex is a grimpus and Alex is not a dumpus.", "fol": "(tumpus(Alex) & grimpus(Alex) & -dumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Tumpus(x) & Grimpus(y) & Dumpus(z)) -> (Tumpus(x) & Grimpus(y) & -Dumpus(z)))", "(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> Grimpus(y))) & all z.(Alex(z) -> -Dumpus(z))))", "all x.(Alex(x) -> (Tumpus(x) & Grimpus(x) & -Dumpus(x)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> Grimpus(x)) & (Alex(x) -> -Dumpus(x)))", "all x y.((Alex(x) & Tumpus(x) & Grimpus(y)) -> (Tumpus(x) & -Dumpus(y)))", "(all x.(Alexa(x) -> Tumpus(x)) & all y.(Alexa(y) -> Grimpus(y)) & all z.(Alexa(z) -> -Dumpus(z))))", "all x y z.((Alex(x) & Tumpus(y) & Grimpus(z)) -> (Tumpus(x) & Grimpus(x) & -Dumpus(x)))", "exists x.(Alex(x) & Tumpus(x) & Grimpus(x) & -Dumpus(x))", "(all x y.(Tumpus(x) -> Alex(x)) & (Grimpus(y) -> Alex(y)) & (Dumpus(y) -> Alex(y)))", "(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> Grimpus(y))) & all z.(Alex(z) -> -Dumpus(z)))", "all x y z.((Alex(x) & Tompus(y) & Grimpus(z)) -> (Tumpus(x) & Grimpus(x) & -Dumpus(x)))", "all x.(Alex(x) -> (Tumpus(x) & Grimpus(x) & -Dumpus(x)))", "(all x y.(Tumpus(x) & Tumpus(y)) & (Grimpus(y) & -Dumpus(y)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> Grimpus(x)) & -Dumpus(x)))", "all x y.((Alex(x) & Tompus(x) & Grimpus(y)) -> (Tumpus(x) & -Dumpus(x)))", "all x.(Alex(x) -> (Tumpus(x) & Grimpus(x) & -Dumpus(x)))"]}
{"id": "prontoqa_train_1599", "nl": "Everything that is a grimpus, a yumpus, or a wumpus is a sterpus.", "fol": "all x. ((grimpus(x) | yumpus(x) | wumpus(x)) -> sterpus(x))", "prediction": ["all x.((Strictus(x) & (Grimpus(x) | Yumpus(x) | Wumpus(x))) -> Sterpus(x))", "all x.((Fragpus(x) | Yumpus(x) | Wumpus(x)) -> Sterpus(x))", "all x.((Strictus(x) & (Grimpus(x) | Yumpus(x) | Wumpus(x))) -> Sterpus(x))", "all x.((Gruppus(x) | Yumpus(x) | Wumpus(x)) -> Sterpus(x))", "(all x.((Strictus(x) | Yumpus(x) | Wumpus(x))) -> Sterpus(x))", "all x y.((Storpus(x) & (Grimpus(y) | Yumpus(y) | Wumpus(y))) -> Sterpus(x))", "all x.((Strictus(x) & (Smompus(x) | Yumpus(x) | Wumpus(x))) -> Sterpus(x))", "all x.((Sterpus(x) & (Grimpus(x) | Yumpus(x) | Wumpus(x))) -> Sterpus(x))", "all x.((Crupid(x) | Yumpus(x) | Wumpus(x)) -> Sterpus(x))", "all x.((Grampus(x) | Yumpus(x) | Wumpus(x)) -> Sterpus(x))", "all x y.((Strictus(x) & (Grimpus(x) | Yumpus(x) | Wumpus(x))) -> Sterpus(x))", "all x.(Sterpus(x) -> (Stricklepus(x) | Yumpus(x) | Wumpus(x)))", "all x.(((Grimpus(x) | Yumpus(x) | Wumpus(x))) -> Sterpus(x))", "all x.((Rumpus(x) | Yumpus(x) | Wumpus(x)) -> Sterpus(x))", "all x.((Gruppus(x) | Yumpus(x) | Wumpus(x)) -> Sterpus(x))", "all x.((Frostpus(x) | Yampus(x) | Wumpus(x)) -> Stereoscopic(x))"]}
{"id": "prontoqa_train_1600", "nl": "Max is not a sterpus, Max is a brimpus, and Max is a jompus.", "fol": "(-sterpus(Max) & brimpus(Max) & jompus(Max))", "prediction": ["(all x.(Max(x) -> -Sterpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Jompus(x)))", "all x y z.((Max(x) & Steros(y) & Brimpus(z)) -> (-Sterpus(x) & Brimpus(x) & Jompus(x)))", "(all x.(Max(x) -> -Sterpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Jompus(z))))", "(all x y z.((Max(x) & Sterpus(y)) -> -Sterpus(x)) & ((Max(z) & Brimpus(z))) -> Jompus(z)))", "all x.(Max(x) -> (-Sterpus(x) & Brimpus(x) & Jompus(x)))", "(-Sterpus(Max) & Brimpus(Max) & Jompus(Max))", "all x y z.((Max(x) & Sterus(y) & Brimpus(z)) -> (-Sterus(x) & Brimpus(x) & Jompus(x)))", "all x y z.((Max(x) & Sterops(y) & Brimpus(z)) -> (-Sterpus(x) & Brimpus(x) & Jompus(x)))", "(all x y z.((Max(x) & Sterospheus(y) & Brimpus(z)) -> -Sterpus(x)) & ((Max(x) & Brimpus(x)) -> Jompus(x)))", "all x y z.((Max(x) & Sterpus(y) & Brimpus(z)) -> (-Sterpus(x) | (-Sterpus(x) & Brimpus(y) & Jompus(z))))", "(all x.(Max(x) -> -Sterepus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Jompus(x)))", "all x.(Max(x) -> (-Sterpus(x) & Brimpus(x) & Jompus(x)))", "(-Sterpus(Max) & Brimpus(Max) & Jompus(Max))", "(all x.(Max(x) -> -Sterpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Jompus(z))))", "all x y z.((Max(x) & Steros (y) & Brimpus(z)) -> (-Sterpus(x) & Brimpus(y) & Jompus(z)))", "(all x.(Max(x) -> -Sterepus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Jompus(x)))"]}
{"id": "prontoqa_train_1601", "nl": "Impuses are grimpuses.", "fol": "all x. (impus(x) -> grimpus(x))", "prediction": ["all x.(Impuse(x) -> Grimpuse(x))", "all x.(Impuse(x) -> Grimpuse(x))", "all x.(Impuse(x) -> Grimpuse(x))", "all x y.((Impuse(x) & Grimpuse(y)) -> (Smoothpuse(x) & Grimpuse(y)))", "all x.(Impuse(x) -> Grimpuse(x))", "all x y.((Impuse(x) & Grimpuse(y)) -> Grimpuse(x))", "all x.(Impus(x) -> Grimpuse(x))", "(Grimpuse(impregna) & Grimpuse(impregna))", "(all x.(Impuse(x) -> Grimpuse(x))", "all x.(Impuse(x) -> Grimpuse(x))", "(all x.(Impuse(x) -> Grimpuse(x))", "all x.(Impuse(x) -> Grimpuse(x))", "all x.(Impuse(x) -> Grimpuse(x))", "all x.(Impus(x) -> Grimpuse(x))", "all x.(Impuse(x) -> Grappase(x))", "all x.(Impuse(x) -> Grimpuse(x))"]}
{"id": "prontoqa_train_1602", "nl": "Shumpuses are not grimpuses.", "fol": "all x. (shumpus(x) -> -grimpus(x))", "prediction": ["all x.(Shampus(x) -> -Grimpus(x))", "all x.(Shupuse(x) -> -Grimpuse(x))", "(all x.(Shuppus(x) -> -Grimpus(x)))", "-Shampoos(sh)", "all x.(Shampoos(x) -> -Grimpuse(x))", "-Grimpuse(s)", "all x.(Shimpus(x) -> -Smoochuse(x))", "all x.(Shumpus(x) -> -Grimpus(x))", "(all x.(Shampus(x) -> -Shampus(x)))", "-Shimpuse(x)", "(all x.(Shupuse(x) -> -Grimpuse(x)))", "all x.(Shuppe(x) -> -Grimpus(x))", "all x.(Shutus(x) -> -Scrumpus(x))", "all x.(Shumpus(x) -> -Grimpus(x))", "all x.(Shimpus(x) -> -Smoothpuse(x))", "all x.(Shupuse(x) -> -Grimpuse(x))"]}
{"id": "prontoqa_train_1603", "nl": "Stella is a zumpus, Stella is not an impus, or Stella is a brimpus.", "fol": "(zumpus(Stella) | -impus(Stella) | brimpus(Stella))", "prediction": ["(all x.(Stella(x) -> Zumpus(x)) & (Stella(x) -> -Impossible(x)) | (Stella(x) -> Brimpus(x))))", "all x.(Stella(x) -> (Tompus(x) | -Impossible(x) | Brimpus(x)))", "all x y.((Stella(x) & Zumpus(x)) | (-Stella(y) & Imperator(y)) | (-Stella(y) & Brimpus(y))))", "(all x.(Stella(x) -> Zumpus(x)) & (Stella(x) -> -Impossible(x)) | (Stella(x) -> Brimpus(x))))", "all x.(Stella(x) -> (Zumpus(x) | -Impossible(x) | Brimpus(x)))", "(all x y.((Stella(x) & Zumpus(x)) | (-Stella(y) & Impossible(y))) | (-Stella(y) & Brimpus(y))))", "all x y z.((Stella(x) & Zumpus(x) & Stella(y) & -Impossible(y)) -> (Stella(z) | Brimpus(z)))", "all x y.((Stella(x) & Zumpus(x)) | (-Impossible(x) | Brimpus(y))))", "(all x.(Stella(x) -> Zumpus(x)) | (Stella(x) -> -Impossible(x)) | (Stella(x) -> Brimpus(x))))", "(all x.(Stella(x) -> Zumpus(x)) & (Stella(x) -> -Impossible(x)) | (Stella(x) -> Brimpus(x))))", "exists x.(Stella(x) & ((Zumpus(x) | -Impossible(x)) | Brimpus(x))))", "all x.(Stella(x) -> (Tompus(x) | -Impossible(x) | Brimpus(x)))", "exists x.(Stella(x) & ((Zumpus(x) | -Impossible(x)) | Brimpus(x)))", "all x y.((Stella(x) & Zumpus(x)) | (-Stella(y) | Brimpus(y)))", "(all x.(Stella(x) -> Zumpus(x)) & (Stella(x) -> -Impossible(x)) | (Stella(x) -> Brimpus(x))))", "(all x.(Stella(x) -> Zumpus(x)) & (Stella(x) -> -Impossible(x)) | (Stella(x) -> Brimpus(x))))"]}
{"id": "prontoqa_train_1604", "nl": "Impuses are rompuses, yumpuses, and sterpuses.", "fol": "all x. (impus(x) -> (rompus(x) & yumpus(x) & sterpus(x)))", "prediction": ["all x.(Impuse(x) -> (Rompus(x) | Yumpus(x) | Sterpus(x)))", "all x.(Impuse(x) -> (Rompus(x) | Yumpus(x) | Sterpus(x)))", "(all x.(Impuse(x) -> (Rompus(x) | Yumpus(x) | Sterpus(x)))", "all x y z.((Impuse(x) & (Rompus(y) | Yumpus(y) | Sterpus(z))) -> (Impuse(x) & Impuse(x)))", "all x.(Impus(x) -> (Rompus(x) | Yumpus(x) | Sterpus(x)))", "(all x.(Impuse(x) -> (Rompus(x) | Yumpus(x) | Sterpus(x)))", "all x.(Impuse(x) -> (Rompus(x) | Yumpus(x) | Sterpus(x)))", "(all x.(Impuse(x) -> Rompus(x)) & all y.(Impuse(y) -> Yumpus(y)) & all z.(Impuse(z) -> Sterpus(z))))", "all x y z.(Impuse(x) -> (Rompus(y) | Yumpus(y) | Sterpus(z)))", "(all x.(Impuse(x) -> (Rompus(x) | Yumpus(x) | Sterpus(x)))", "(all x.(Impuse(x) -> Rompuse(x)) & all y.(Yumpuse(y) -> Sterpuse(y)))", "all x.(Impuse(x) -> (Rompus(x) | Yumpus(x) | Sterpus(x)))", "all x.(Impuse(x) -> (Rompus(x) | Yumpus(x) | Sterpus(x)))", "(all x.(Impuse(x) -> (Rompus(x) | Yumpus(x) | Sterpus(x)))", "all x.(Impuses(x) -> (Rompuses(x) | Yumpeses(x) | Sterpuses(x)))", "all x.(Impuse(x) -> (Rompus(x) | Yampus(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1605", "nl": "Fae is a rompus or a lempus or a vumpus.", "fol": "(rompus(Fae) | lempus(Fae) | vumpus(Fae))", "prediction": ["all x.(Fae(x) -> (Rompus(x) | Lempus(x) | Vumpus(x)))", "(Rompus(Fae) | Lempus(Fae) | Vumpus(Fae))", "all x.(Fae(x) -> (Rompus(x) | Lempus(x) | Vumpus(x)))", "all x y.((Fae(x) & (Rompus(y) | Lempus(y) | Vumpus(y))) -> Fae(x))", "(Rompus(fae) | Lempus(fae) | Vumpus(fae))", "all x.(Fae(x) -> ((Rompus(x) | Lempus(x) | Vumpus(x))))", "all x.(Fae(x) -> (Rompus(x) | Lempus(x) | Vumpus(x)))", "(Rompus(Fae) | Lempus(Fae) | Vumpus(Fae))", "all x y.((Fae(x) & Rompus(y)) | (Lempus(y) | Vumpus(y))))", "all x.(Fae(x) -> (Rompus(x) | Lempus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Rompus(x) | Lempus(x) | Vumpus(x)))", "(Rompus(fae) | Lempus(fae) | Vumpus(fae))", "all x.(Fae(x) -> (Rompus(x) | Lempus(x) | Vumpus(x)))", "exists x.(Fae(x) & ((Rompus(x) | Lempus(x) | Vumpus(x))))", "all x.(Fae(x) -> (Rompus(x) | Lempus(x) | Vumpus(x)))", "exists x.(Fae(x) & (Rompus(x) | Lempus(x) | Vampus(x)))"]}
{"id": "prontoqa_train_1606", "nl": "Every shumpus is not a dumpus.", "fol": "all x. (shumpus(x) -> -dumpus(x))", "prediction": ["all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "-Dumpus(shumpus)", "(all x.(Shumpus(x) -> -Dumpus(x)))", "all x.(Shumpus(x) -> -Dumpus(x))", "-Dumpus(shumpus)", "all x.(Shumpus(x) -> -Dumpus(x))", "(all x.(Shumpus(x) -> -Dumpus(x)))", "all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumps(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "exists x.(Shumpus(x) & -Dupus(x))"]}
{"id": "prontoqa_train_1607", "nl": "Stella is a numpus, Stella is not a numpus, or Stella is a sterpus.", "fol": "(numpus(Stella) | -numpus(Stella) | sterpus(Stella))", "prediction": ["(all x.(Stella(x) -> Numpus(x)) | (-Numpus(x) | Sterpus(x))))", "all x y.((Stella(x) & Numpus(x)) | (-Numpus(y) | Sterpus(y))))", "all x.(Stella(x) -> (Numpus(x) | -Numpus(x) | Sterpus(x)))", "(all x y.((Stella(x) & Numpus(x)) | (-Numpus(y) & -Stella(y))))", "(all x.(Stella(x) -> Numpus(x)) | (-Numpus(x) | Sterpus(x))))", "exists x.(Stella(x) & ((Numpus(x) & -Numpus(x)) | (Stella(x) & Sterpus(x)))))", "all x y.((Stella(x) & -Stella(y)) -> (Numpus(x) | Sterpus(y)))", "all x.((Stella(x) & Numpus(x)) | (-Numpus(x) | Sterpus(x))))", "(all x.(Stella(x) -> Numpus(x)) & (-Stella(x) | Sterpus(x))))", "all x y.((Stella(x) & Numpus(x)) | (-Numpus(y) | Sterpus(y))))", "exists x.(Stella(x) & ((Numpus(x) & -Numpus(x)) | (-Numpus(x) & Sterpus(x)))))", "all x.(Stella(x) -> (Numpus(x) | -Numpus(x) | Sterpus(x)))", "(all x.(Stella(x) -> Numpus(x)) | (-Stella(x) & -Stella(x))))", "(all x.(Stella(x) -> Numpus(x)) & (-Numpus(x) | Sterpus(x))))", "exists x.(Stella(x) & ((Numpus(x) | -Numpus(x)) | Sterpus(x)))", "(all x.(Stella(x) -> Numpus(x)) | (-Numpus(x) | Sterpus(x))))"]}
{"id": "prontoqa_train_1608", "nl": "Every dumpus is a lempus, a jompus, and a rompus.", "fol": "all x. (dumpus(x) -> (lempus(x) & jompus(x) & rompus(x)))", "prediction": ["all x.(Dumpus(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "(all x.(Dumpus(x) -> Lempus(x)) & all y.(Jompus(y) & all z.(Rompus(z)) -> Dumpus(x)))", "all x.(Dumps(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Dumpus(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x y z.(Dumpus(x) -> (Lempus(y) | Jompus(y) | Rompus(z)))", "(all x.(Dumpus(x) -> Lempus(x)) & all y.(Jompus(y) & -Rompus(y)))", "all x.(Dumpus(x) -> (Lempus(x) & Jompus(x) & Rompus(x)))", "(all x.(Dumpus(x) -> Lempus(x)) & all y.(Jompus(y) & all z.(Rompus(z) & -Lempus(y))) & all z.(Jompus(z) & -Lempus(z)) -> Rompus(z)))", "all x.(Dumpus(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "(all x.(Dumpus(x) -> Lempus(x)) & (Jompus(x) & Rompus(x)))", "exists x.(Dumps(x) & (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Dumpus(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Dumpus(x) -> (Lempus(x) & Jompus(x) & Rompus(x)))", "all x.(Dumpus(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "(all x.(Dumpus(x) -> Lempus(x)) & (Jompus(x) & Rompus(x)))", "exists x.(Dumpus(x) & Lempus(x) & Jompus(x) & Rompus(x))"]}
{"id": "prontoqa_train_1609", "nl": "Stella is a dumpus.", "fol": "dumpus(Stella)", "prediction": ["Stella is a Dumpus.", "(Dumus(Stella))", "Stella is a dumpus.", "all x.(Stella(x) -> Dumpus(x))", "all x.((Stella(x) & Dumpus(x)) -> Dumpus(x))", "(Dumpus(Stella))", "Stella is a Dumpus.", "Stella is Dumpus(Stella)", "all x.(Stella(x) -> Dumpus(x))", "Stella is a Dumpus(Stella)", "Stella is a dumpus.", "(Dumus(Stella))", "Stella (Dumus)", "Stella is Dumpus(Stella)", "(Dumpus(Stella))", "Stella is a dumpus."]}
{"id": "prontoqa_train_1610", "nl": "Stella is a lorpus or a rompus or a zumpus.", "fol": "(lorpus(Stella) | rompus(Stella) | zumpus(Stella))", "prediction": ["all x.(Stella(x) -> (Lorpus(x) | Rompus(x) | Zumpus(x)))", "(Lorpus(Stella) | Rompus(Stella) | Zumpus(Stella)))", "all x y.((Stella(x) & Lorpus(y)) | (Rompus(x) | Zumpus(x))))", "all x.(Stella(x) -> (Lorpus(x) | Rompus(x) | Zumpus(x)))", "all x.((Stella(x) & (Lorpus(x) | Rompus(x) | Zumpus(x))) -> -Lorpus(x))", "(Lorpus(Stella) | Rompus(Stella) | Zumpus(Stella)))", "all x.(Stella(x) -> (Lorpus(x) | Rompus(x) | Zumpus(x)))", "all x y.((Stella(x) & Lorpus(y)) | (Rompus(y) | Zumpus(y))))", "(Lorpus,Rompus,Zumpus)", "exists x.(Lorpus(x) | Rompus(x) | Zumpus(x))", "(Lorpus,Rompus,Zumpus)", "all x.(Stella(x) -> (Lorpus(x) | Rompus(x) | Zumpus(x)))", "(Lorpus(Stella) | Rompus(Stella) | Zumpus(Stella)))", "exists x.(Lorpus(x) | Rompus(x) | Zumpus(x))", "all x.(Stella(x) -> (Lorpus(x) | Rompus(x) | Zumpus(x)))", "exists x.(Stella(x) & (Lorpus(x) | Rompus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1611", "nl": "Everything that is a dumpus or a sterpus or a lempus is a wumpus and a yumpus and a vumpus.", "fol": "all x. ((dumpus(x) | sterpus(x) | lempus(x)) -> (wumpus(x) & yumpus(x) & vumpus(x)))", "prediction": ["all x.((Dumpus(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yumpus(x) & Vumpus(x)))", "all x.((Dumps(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yumpus(x) & Vumpus(x)))", "all x y.((Dumpus(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yumpus(y) & Vumpus(y)))", "all x.((Dumpus(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yampus(x) & Vumpus(x)))", "(all x.((Dumpus(x) | Sterpus(x) | Lempus(x))) -> (Wumpus(x) & Yumpus(x) & Vumpus(x)))", "all x y.((Dumpus(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(y) & Yampus(y) & Vumpus(y)))", "all x.((Dumps(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yampus(x) & Vumpus(x)))", "all x.((Dumpus(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yumpus(x) & Vumpus(x)))", "all x y.((Dumps(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yumpus(y) & Vumpus(y)))", "all x.((Dumpus(x) | Stupid(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yumpus(x) & Vumpus(x)))", "(all x.((Dumpus(x) | Sterpus(x) | Lempus(x))) -> (Wumpus(x) & Yampus(x) & Vumpus(x)))", "(all x.((Dumpus(x) | Sterpus(x) | Lempus(x))) -> (Wumpus(x) & Yumpus(x) & Vumpus(x)))", "all x.((Dumpus(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yampus(x) & Vumpus(x)))", "all x.((Dumpus(x) | Sterus(x) | Lempus(x)) -> (Wumpus(x) & Yumpus(x) & Vumpus(x)))", "all x.((Dumpus(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yumpus(x) & Vumpus(x)))", "all x.((Dumpus(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yampus(x) & Vumpus(x)))"]}
{"id": "prontoqa_train_1612", "nl": "Sterpuses are shumpuses and lempuses and rompuses.", "fol": "all x. (sterpus(x) -> (shumpus(x) & lempus(x) & rompus(x)))", "prediction": ["all x.(Sterpuse(x) -> (Shumpus(x) & Lempuse(x) & Rompus(x)))", "all x.(Sterpus(x) -> (Shumpus(x) | Lempuse(x) | Rompus(x)))", "all x.(Sterpuse(x) -> (Shumpus(x) & Lempuse(x) & Rompus(x)))", "(all x.(Sterpuse(x) -> Shumpuse(x)) & all y.(Lempuse(y) & All z.(Rompus(z))) -> Sterpuse(x)))", "(all x.(Sterpuse(x) -> Shumpuse(x)) & all y.(Lempuse(y) & All z.(Rompus(z)) -> Sterpuse(x)))", "all x y.((Sterpuse(x) & Shumpus(y)) -> (Lempuse(x) | Rompus(x)))", "all x y z.((Sterpuse(x) & Shumpus(y) & Lempuse(z) & Rompus(z)) -> (Shumpus(x) | Lempuse(z) & Rompus(z)))", "all x y.((Sterpuse(x) & Shumpus(y)) -> (Lempuse(x) | Rompus(x)))", "all x.(Sterpuse(x) -> (Shumpus(x) | Lempuse(x) | Rompus(x)))", "(all x.(Sterpuse(x) -> Shumpus(x)) & all y.(Lempuse(y) & All z.(Rompus(z)) -> Sterpuse(x)))", "all x.(Sterpuse(x) -> (Shumpus(x) | Lempuse(x) | Rompus(x)))", "(all x.(Sterpuse(x) -> Shumpuse(x)) & all y.(Lempuse(y) & all z.(Rompuse(z)) -> Sterpuse(x)))", "all x.(Sterpus(x) -> (Shumpus(x) & Lempuse(x) & Rompus(x)))", "(all x.(Sterpuse(x) -> Shumpuse(x)) & all y.(Lempuse(y) & all z.(Rompus(z)) -> Sterpuse(x)))", "(all x.(Sterpuse(x) -> Shumpuse(x)) & (Lempuse(x) | Rompuse(x)))", "all x.(Stumpus(x) -> (Shumpus(x) & Lempuse(x) & Rompus(x)))"]}
{"id": "prontoqa_train_1613", "nl": "Alex is a grimpus or a yumpus or a lempus.", "fol": "(grimpus(Alex) | yumpus(Alex) | lempus(Alex))", "prediction": ["all x.(Alex(x) -> (Grimpus(x) | Yumpus(x) | Lempus(x)))", "(Smokey(Alex) | Yumpus(Alex) | Lempus(Alex)))", "((Alex(Alex) | Grimpus(Alex)) | (Yumpus(Alex) | Lempus(Alex))))", "all x.(Alex(x) -> (Grimpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Smokey(x) | Yumpus(x) | Lempus(x)))", "(Smoothpus(Alex) | Yumpus(Alex) | Lempus(Alex))", "(all x.(Alex(x) -> Grimpus(x)) | (Yumpus(x) | Lempus(x))))", "(all x.(Alex(x) -> Grimpus(x)) & (Yumpus(x) | Lempus(x))))", "all x.(Alex(x) -> (Grimpus(x) | Yumpus(x) | Lempus(x)))", "all x y.((Alex(x) & Grimpus(y)) | (Yumpus(y) | Lempus(y))))", "all x.(Alex(x) -> (Smoothpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Grimpus(x) | Yampus(x) | Lempus(x)))", "all x.(Alex(x) -> (Sgrimpus(x) | Yumpus(x) | Lempus(x)))", "exists x.(Alex(x) & (Grimpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Grimpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Grimpus(x) | Yampus(x) | Lempus(x)))"]}
{"id": "prontoqa_train_1614", "nl": "Everything that is a rompus, a tumpus, and a gorpus is an impus.", "fol": "all x. ((rompus(x) & tumpus(x) & gorpus(x)) -> impus(x))", "prediction": ["all x.((Rompus(x) | Tumpus(x) | Gorpus(x)) -> Impermissible(x))", "all x.((Rompus(x) | Tumpus(x) | Gorpus(x)) -> Impermissible(x))", "all x y z.((Rompus(x) & Tumpus(y) & Gorpus(z) & Is(x,y) & Is(x,z)) -> Impermissible(x))", "all x y.((Rompus(x) & Tumpus(y) & Gorpus(x)) -> Impermissible(x))", "all x.((Rompus(x) | Tumpus(x) | Gorpus(x)) -> Imperative(x))", "(all x.((Rompus(x) | Tumpus(x) | Gorpus(x))) -> Impermissible(x))", "all x y z.((Rompus(x) & Tumpus(y) & Gorpus(z) & Is(x,y) & Is(x,z)) -> Is(x,z))", "all x.((Rompus(x) | Tumpus(x) | Gorpus(x)) -> Imperative(x))", "all x.(((Rompus(x) | Tumpus(x) | Gorpus(x))) -> Impermissible(x))", "all x.((Rompus(x) & Tumpus(x) & Gorpus(x)) -> Impermissible(x))", "all x.((Rompus(x) | Tumpus(x) | Gorpus(x)) -> Impermissible(x))", "(all x.((Rompus(x) | Tumpus(x) | Gorpus(x))) -> Issue(x))", "all x.((Rompus(x) | Tumpus(x) | Gorpus(x)) -> Impermissible(x))", "all x.((Rompus(x) | Tumpus(x) | Gorpus(x)) -> Is(x))", "all x.((Rompus(x) & Tumpus(x) & Gorpus(x)) -> Imperative(x))", "all x.((Rompus(x) | Tumulus(x) | Gorpus(x)) -> Issue(x))"]}
{"id": "prontoqa_train_1615", "nl": "Each sterpus is a zumpus.", "fol": "all x. (sterpus(x) -> zumpus(x))", "prediction": ["all x.(Sterpus(x) -> Zumpus(x))", "all x.(Steerpus(x) -> Zumpus(x))", "all x y.((Sterpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Sterpus(x) -> Zumpus(x))", "(all x.(Sterpus(x) -> Zumpus(x))", "all x y.((Steerpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Stereospheric(x) -> Zumpus(x))", "all x.(Steerpus(x) -> Zumpus(x))", "all x y.((Sterpus(x) & Zumpus(y)) -> Sterpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "exists x.(Stereopus(x) & Zumpus(x))", "all x.(Steerpus(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "exists x.(Steerpus(x) & Zurpus(x))", "exists x.(Sterpus(x) & Zurpus(x))"]}
{"id": "prontoqa_train_1616", "nl": "Sally is a wumpus, Sally is not a brimpus, and Sally is a tumpus.", "fol": "(wumpus(Sally) & -brimpus(Sally) & tumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Wumpus(x)) & (Sally(x) -> -Brimpus(x)) & (Sally(x) -> Tumpus(x)))", "all x y z.((Sally(x) & Wumpus(y) & Brimpus(z)) -> (Wumpus(x) & -Brimpus(y) & Tumpus(z)))", "(all x y z.((Sally(x) & Wumpus(y)) -> Wumpus(x)) & ((Sally(z) & -Brimpus(z)) -> Tumpus(z)))", "(all x.(Sally(x) -> Wumpus(x)) & (-Brimpus(x) & (Tumpus(x) | -Brimpus(x))))", "all x y z.((Sally(x) & Wumpus(x) & Brimpus(y) & Tumpus(z)) -> (Wumpus(x) & -Brimpus(y) & Tumpus(z)))", "all x.(Sally(x) -> (Wumpus(x) & -Brimpus(x) & Tumpus(x)))", "(all x.(Sally(x) -> Wumpus(x)) & (Sally(x) -> -Brimpus(x)) & (Sally(x) -> Tumpus(x)))", "(all x y.(Wumpus(x) -> Sally(x)) & (Brimpus(y) -> -Sally(y)) & (Tumpus(y) -> Sally(y)))", "exists x.(Sally(x) & Wumpus(x) & -Brimpus(x) & Tumpus(x))", "(all x y z.((Sally(x) & Wumpus(y)) -> Wumpus(x)) & ((Sally(z) & -Brimpus(z)) -> Tumpus(z)))", "(all x.(Sally(x) -> Wumpus(x)) & all y.(Sally(y) -> -Brimpus(y))) & all z.(Sally(z) -> Tumpus(z)))", "all x y z.((Sally(x) & Wumpus(y) & Brimpus(z)) -> (Wumpus(x) & -Brimpus(x) & Tumpus(x)))", "(all x.(Sally(x) -> Wumpus(x)) & (-Sally(x) -> Brimpus(x)) & (-Sally(x) -> Tumpus(x)))", "all x y z.((Sally(x) & Wumpus(x) & Brimpus(y) & Tumpus(z)) -> (Wumpus(x) & -Brimpus(y) & Tumpus(z)))", "all x.(Sally(x) -> (Wumpus(x) & -Brimpus(x) & Tumpus(x)))", "(all x.(Sally(x) -> Wumpus(x)) & (Sally(x) -> -Brimpus(x)) & (Sally(x) -> Tumpus(x)))"]}
{"id": "prontoqa_train_1617", "nl": "Sally is a sterpus, a lorpus, and a gorpus.", "fol": "(sterpus(Sally) & lorpus(Sally) & gorpus(Sally))", "prediction": ["all x.(Sally(x) -> (Sterpus(x) & Lorpus(x) & Gorpus(x)))", "(Sally(Sally) -> (Sterpus(Sally) | Lorpus(Sally) | Gorpus(Sally)))", "(Sally(Storpus) & Sally(Lorpus) & Sally(Gorpus))", "all x.(Sally(x) -> (Sterepus(x) | Lorpus(x) | Gorpus(x)))", "all x y z.((Sally(x) & Sterpus(y) & Lorpus(z)) -> (Sterpus(x) | Lorpus(x) | Gorpus(x)))", "(all x.(Sally(x) -> Sterpus(x)) & all y.(Lorpus(y) -> Gorpus(y)))", "(Sally(Sally) & Sterpus(Sally) & Lorpus(Sally) & Gorpus(Sally))", "Sally is a sterpus, a lorpus, a gorpus.", "(All x.(Sally(x) -> Sterpus(x)) & (Lorpus(x) -> Gorpus(x)))", "(Sally (Sterpus) & Sterpus(lorpus) & Gorpus(gorpus))", "all x.(Sally(x) -> (Sterepus(x) & Lorpus(x) & Gorpus(x)))", "(Sterepus(Sally) & Lorpus(Sally) & Gorpus(Sally))", "all x.(Sally(x) -> (Sterpus(x) | Lorpus(x) | Gorpus(x)))", "exists x.(Sally(x) & Sterpus(x) & Lorpus(x) & Gorpus(x))", "all x.(Sally(x) -> (Sterpus(x) & Lorpus(x) & Gorpus(x)))", "all x.(Sally(x) -> (Sterepus(x) | Lorpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1618", "nl": "Sally is not a shumpus, Sally is an impus, and Sally is a zumpus.", "fol": "(-shumpus(Sally) & impus(Sally) & zumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Shumpus(x)) & all y.(Impossible(y) & Zumpus(y)))", "all x y z.((Sally(x) & Shumpus(y) & Imperator(z)) -> (-Shumpus(x) & Impossible(x) & Zumpus(x)))", "(all x y z.((Sally(x) & Humpus(y)) -> -Shumpus(x)) & ((Sally(z) & Impossible(z)) -> Zumpus(z)))", "all x.(Sally(x) -> (-Shumpus(x) & Is(x) & Zumpus(x)))", "(all x.(Sally(x) -> -Shumpus(x)) & (Impossible(x) | Zumpus(x))))", "all x y z.((Sally(x) & Shumpus(y) & Impossible(z)) -> (-Shumpus(x) & Impossible(x) & Zumpus(x)))", "all x.(Sally(x) -> (-Shumpus(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x)))", "(all x.(Sally(x) -> -Shumpus(x)) & all y.(Sally(y) -> Issue(y)) & all z.(Sally(z) -> Zumpus(z))))", "(-Shumpus(Sally) & IsImpossible(Sally) & IsTompus(Sally))", "all x y z.((Sally(x) & Shumpus(y) & Imperator(z)) -> (-Shumpus(x) & Is(x,y) & Zumpus(z)))", "(-Shumpus(s) & -Impossible(s) & Zumpus(s))", "(all x y z.((Sally(x) & Humpus(y)) -> -Shumpus(x)) & ((Sally(z) & Impossible(z)) -> Zumpus(z)))", "(all x.(Sally(x) -> -Shumpus(x)) & (Impossible(x) & Zumpus(x)))", "exists x.(Sally(x) & -Shumpus(x) & Is(x) & Zumpus(x))", "all x y z.((Sally(x) & Humpus(y) & Impossible(z)) -> (-Shumpus(x) & Impossible(x) & Zumpus(x)))", "(all x.(Sally(x) -> -Shumpus(x)) & all y.(Impossible(y) & Zumpus(y)))"]}
{"id": "prontoqa_train_1619", "nl": "Fae is not a rompus, Fae is a zumpus, and Fae is a sterpus.", "fol": "(-rompus(Fae) & zumpus(Fae) & sterpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Rompus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> Sterpus(x)))", "all x y z.((Fae(x) & Zumpus(y) & Sterpus(z)) -> (-Rompus(x) & Zumpus(y) & Sterpus(z)))", "(all x.(Fae(x) -> -Rompus(x)) & all y.(Fae(y) -> Zumpus(y)) & all z.(Fae(z) -> Sterpus(z))))", "(all x y z.((Fae(x) & Rompus(y)) -> -Rompus(x)) & ((Fae(z) & Zumpus(z))) -> Sterpus(x)))", "all x.(Fae(x) -> (-Rompus(x) & Zumpus(x) & Sterpus(x)))", "(exists x.(Fae(x) & -Rompus(x))) & exists y.(Fae(y) & Zumpus(y))) & exists z.(Fae(z) & Sterpus(z))))", "all x y z.((Fae(x) & Zumpus(y) & Sterpus(z)) -> (-Rompus(x) & -Tompus(y) & -Sterpus(z)))", "all x y z.((Fae(x) & Toshpus(y) & Sterpus(z)) -> (-Rompus(x) & Toshpus(y) & Sterpus(z)))", "(all x.(Fae(x) -> -Rompus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> Sterpus(x)))", "all x y z.(Fae(x) & (Rompus(y) | Zumpus(y) | Sterpus(z))) -> -Rompus(x) & Zumpus(y) & Sterpus(z))", "(all x y z.((Fae(x) & Rompus(y)) -> -Rompus(x)) & ((Fae(z) & Zumpus(z))) -> Sterpus(z)))", "all x.(Fae(x) -> (-Rompus(x) & Zumpus(x) & Sterpus(x)))", "(all x.(Fae(x) -> -Rompus(x)) & all y.(Fae(y) -> Zumpus(y)) & all z.(Fae(z) -> Sterpus(z)))", "(all x y z.((Fae(x) & Rompus(y)) -> -Rompus(x)) & ((Fae(z) & Zumpus(z)) -> Sterpus(z)))", "all x y z.((Fae(x) & Zumpus(y) & Sterpus(z)) -> (-Rompus(x) & Zumpus(y) & Sterpus(z)))", "(all x.(Fae(x) -> -Rompus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> Sterepus(x)))"]}
{"id": "prontoqa_train_1620", "nl": "Fae is not a lempus or Fae is a brimpus or Fae is a rompus.", "fol": "(-lempus(Fae) | brimpus(Fae) | rompus(Fae))", "prediction": ["(all x.(Fae(x) -> (-Lempus(x) | Brimpus(x) | Rompus(x))))", "(exists x.(Fae(x) & -Lempus(x)) | exists y.(Brimpus(y) & Brimpus(y))) | exists z.(Rompus(z) & Fae(z))))", "all x y.((Fae(x) & -Lempus(x)) | (Fae(y) & Brimpus(y)) | (Fae(y) & Rompus(y))))", "all x.(Fae(x) -> (-Lempus(x) | (Brimpus(x) | Rompus(x))))", "(all x.(Fae(x) -> -Lempus(x)) | (Fae(x) -> Brimpus(x)) | (Fae(x) -> Rompus(x))))", "all x y z.((Fae(x) & Lempus(y) & Brimpus(z)) | (Fae(x) & Rompus(x))))", "((Fae isn'tLempus(f) | Fae isBrimpus(f)) | Fae isRompus(f)))", "((Fae is notLempus(f) | Fae isBrimpus(f)) | Fae isRompus(f)))", "(exists x.(Fae(x) & -Lempus(x)) | exists y.(Brimpus(y) & Brimpus(y))) | exists z.(Rompus(z) & -Lempus(z))))", "all x.(Fae(x) -> (-Lempus(x) | (Brimpus(x) | Rompus(x))))", "all x.(Fae(x) -> (-Lempus(x) | Brimpus(x) | Rompus(x)))", "(exists x.(Fae(x) & -Lempus(x)) | exists y.(Fae(y) & Brimpus(y)) | exists z.(Fae(z) & Rompus(z)))))", "(all x.(Fae(x) -> (-Lempus(x) | Brimpus(x) | Rompus(x))))", "all x.(Fae(x) -> (-Lempus(x) | (Brimpus(x) | Rompus(x))))", "all x.(Fae(x) -> (-Lempus(x) | Brimpus(x) | Rompus(x)))", "exists x.(Fae(x) & -Limpus(x) & (Brimpus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1621", "nl": "Everything that is a lorpus, a shumpus, or a numpus is a zumpus, a vumpus, and a grimpus.", "fol": "all x. ((lorpus(x) | shumpus(x) | numpus(x)) -> (zumpus(x) & vumpus(x) & grimpus(x)))", "prediction": ["all x.((Lorpus(x) | Humpus(x) | Numpus(x)) -> (Tompus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Numpus(x)) -> (Zumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Lorpus(x) | Shumpus(x) | Numpus(x)) -> (Tompus(x) | Vumpus(x) | Grimpus(x)))", "all x y.((Lorpus(x) | Humpus(x) | Numpus(x)) -> (Tompus(y) | Vumpus(y) | Grimpus(y)))", "all x.((Lorpus(x) | Humpus(x) | Numpus(x)) -> (Tompus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Lorpus(x) | Shumpus(x) | Numpus(x)) -> (Zumpus(x) & Vumpus(x) & Grimpus(x)))", "all x y.((Lorpus(x) | Humpus(x) | Numpus(x)) -> (Zumpus(y) | Vumpus(y) | Grimpus(y)))", "(all x.((Lorpus(x) | Humpus(x) | Numpus(x))) -> (Zumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Numpus(x)) -> (Zumpus(x) | Vumpus(x) | Grimpus(x)))", "(all x.((Lorpus(x) | Humpus(x) | Numpus(x))) -> (Tompus(x) | Voompus(x) | Grimpus(x)))", "all x.((Lorpus(x) | Shumpus(x) | Numpus(x)) -> (Tompus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Numpus(x)) -> (Tompus(x) & Vumpus(x) & Grimpus(x)))", "all x y.((Lorpus(x) | Humpus(x) | Numpus(x)) -> (Tompus(y) | Vumpus(y) | Grimpus(y)))", "all x.((Lorpus(x) | Shumpus(x) | Numpus(x)) -> (Zumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Larpus(x) | Humpus(x) | Numpus(x)) -> (Zumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Larpus(x) | Humpus(x) | Numpus(x)) -> (Tompus(x) & Vumpus(x) & Grimpus(x)))"]}
{"id": "prontoqa_train_1622", "nl": "Every shumpus is a dumpus, a zumpus, and a rompus.", "fol": "all x. (shumpus(x) -> (dumpus(x) & zumpus(x) & rompus(x)))", "prediction": ["all x.(Shumpus(x) -> (Dumpus(x) & Zumpus(x) & Rompus(x)))", "all x.(Shumpus(x) -> (Dumps(x) & Zumpus(x) & Rompus(x)))", "(all x.(Shumpus(x) -> Dumpus(x)) & all y.(Tompus(y) & rompus(y)))", "all x y z.((Shumpus(x) & Dumpus(y) & Zumpus(z) & Rompus(x)) -> (Dumps(x) & Tossup(y) & Rompus(z)))", "all x.(Shumpus(x) -> (Dumpus(x) & Zumpus(x) & Rompus(x)))", "all x.(Shumpus(x) -> (Dumpus(x) | Zumpus(x) | Rompus(x)))", "(all x.(Shumpus(x) -> Dumpus(x)) & all y.(Tompus(y) & rompus(y)))", "(all x.(Shumpus(x) -> Dumpus(x)) & all y.(Tompus(y) -> Rompus(y)))", "(all x.(Shumpus(x) -> Dumpus(x)) & all y.(Tompus(y) & All z.(Rompus(z)) -> Rompus(z))))", "all x.(Shumpus(x) -> (Dumpus(x) & Zumpus(x) & Rompus(x)))", "all x.(Shumpus(x) -> (Dumps(x) & Zumpus(x) & Rompus(x)))", "all x.(Shumpus(x) -> (Dumpus(x) | Zumpus(x) | Rompus(x)))", "(all x.(Shumpus(x) -> Dumpus(x)) & (Tompus(x) & Rompus(x)))", "exists x.(Shumpus(x) & Dumpus(x) & Zumpus(x) & Rompus(x))", "all x.(Shumpus(x) -> (Dumpus(x) | Zumpus(x) | Rompus(x)))", "exists x.(Shumpus(x) & Dumpus(x) & Zumpus(x) & Rompus(x))"]}
{"id": "prontoqa_train_1623", "nl": "Alex is an impus and Alex is a sterpus and Alex is not a zumpus.", "fol": "(impus(Alex) & sterpus(Alex) & -zumpus(Alex))", "prediction": ["(all x.(Alex(x) -> IsImpossible(x)) & all y.(Alex(y) -> Sterpus(y)) & all z.(Alex(z) -> -Zumpus(z))))", "all x y.((Alex(x) & IsImpossible(x) & Alex(y)) -> (Sterepus(y) & -Zumpus(y)))", "all x.(Alex(x) -> (Impossible(x) & Sterpus(x) & -Zumpus(x)))", "all x y z.((Alex(x) & Impossible(x) & Sterepus(y) & -Zumpus(z)) -> (Sterpus(x) & -Sterpus(y)))", "(all x.(Alex(x) -> Impossible(x)) & all y.(Alex(y) -> Sterpus(y)) & all z.(Alex(z) -> -Zumpus(z))))", "(all x y.((Alex(x) & IsImpossible(x)) -> Sterpus(x)) & ((Alex(y) & -Zumpus(y)) -> Sterpus(y)))", "(all x.(Alex(x) -> IsImpossible(x)) & (Alex(x) -> Sterpus(x)) & -Alex(x) -> Zumpus(x)))", "all x y.((Alex(x) & Impossible(x) & Sterpus(y)) -> -Zumpus(x))", "(all x.(Alex(x) -> Impossible(x)) & (Alex(x) -> Sterpus(x)) & -Zumpus(x)))", "all x y z.((Alex(x) & IsImpossible(x) & Alex(y) & Sterpus(y)) -> (-Impossible(y) & -Zumpus(z)))", "(all x y.((Alex(x) & Imposer(x)) -> Sterpus(x)) & ((Alex(y) & Zumpus(y)) -> -Sterpus(y)))", "(all x.(Alex(x) -> Imperium(x)) & all y.(Alex(y) -> Sterpus(y)) & all z.(Alex(z) -> -Zumpus(z))))", "all x.(Alex(x) -> (Impossible(x) & Sterpus(x) & -Zumpus(x)))", "exists x.(Alex(x) & IsImpossible(x) & exists y.(Sterepus(y) & -Zumpus(y)))", "all x.(Alex(x) -> (Imposer(x) & Sterpus(x) & -Zumpus(x)))", "all x y.((Alex(x) & IsImpossible(x) & Alex(y)) -> (Sterepus(y) & -Zumpus(y)))"]}
{"id": "prontoqa_train_1624", "nl": "Max is not a wumpus, Max is a lorpus, or Max is a jompus.", "fol": "(-wumpus(Max) | lorpus(Max) | jompus(Max))", "prediction": ["(all x.(Max(x) -> -Wumpus(x)) | (Max(x) -> Lorpus(x)) | (Max(x) -> Jompus(x))))", "(exists x.(Max(x) & -Wumpus(x)) | exists y.(Lorpus(y) & -Wumpus(y))) | exists z.(Max(z) & Jompus(z))))", "all x y z.((Max(x) & Wumpus(y) & Lorpus(z)) -> (-Wumpus(x) | (Lorpus(x) | Jompus(x))))", "all x.((Max(x) & -Wumpus(x)) | (Lorpus(x) | Jompus(x))))", "all x.(Max(x) -> (-Wumpus(x) | (Lorpus(x) | Jompus(x))))", "((Max(Max) & -Wumpus(Max)) | (Max(Max) & Lorpus(Max)) | (Max(Max) & Jompus(Max))))", "(all x.(Max(x) -> -Wumpus(x)) & (Max(x) -> Lorpus(x)) | (Max(x) -> Jompus(x))))", "(exists x.(Max(x) & -Wumpus(x)) | exists y.(Lorpus(y) & -Wumpus(y)))) | exists z.(Max(z) & Jompus(z))))", "all x y z.((Max(x) & Wumpus(y) & Lorpus(z)) -> (-Wumpus(x) | (-Wumpus(x) | Lorpus(x) | Jompus(x))))", "all x.(Max(x) -> (-Wumpus(x) | (Lorpus(x) | Jompus(x))))", "(all x.(Max(x) -> -Wumpus(x)) | (Max(x) -> Lorpus(x)) | (Max(x) -> Jompus(x))))", "(all x.(Max(x) -> -Wumpus(x)) & (Max(x) -> Lorpus(x)) | (Max(x) -> Jompus(x))))", "all x.(Max(x) -> (-Wumpus(x) | (Lorpus(x) | Jompus(x))))", "exists x.(Max(x) & -Wumpus(x) & (Lorpus(x) | Jompus(x)))", "exists x.(Max(x) & (-Wumpus(x) | -Lorpus(x) | -Jumpus(x)))", "all x.(Max(x) -> (-Wumpus(x) | (Lorpus(x) | Jompus(x))))"]}
{"id": "prontoqa_train_1625", "nl": "Every sterpus is a rompus.", "fol": "all x. (sterpus(x) -> rompus(x))", "prediction": ["all x.(Sterpus(x) -> Rompus(x))", "all x.(Steerpus(x) -> Rompus(x))", "all x y.((Sterpus(x) & Rompus(y)) -> Is(x,y))", "all x.(Sterpus(x) -> Rompus(x))", "all x y.((Steerpus(x) & Rompus(y)) -> Has(x,y))", "(all x.(Sterpus(x) -> Rompus(x))", "all x.(Sterepus(x) -> Rompus(x))", "all x.(Sterpus(x) -> Rompus(x))", "exists x.(Sterpus(x) & Rompus(x))", "all x.(Steerpus(x) -> Rompus(x))", "all x.(Sterpus(x) -> Rompus(x))", "all x.(Steerpus(x) -> Rompus(x))", "all x.(Stereo(x) -> Rompus(x))", "exists x.(Sterpus(x) & Rimpus(x))", "all x.(Sterpus(x) -> Rompus(x))", "exists x.(Steerpus(x) & Rrompus(x))"]}
{"id": "prontoqa_train_1626", "nl": "Stella is a sterpus, a wumpus, and a numpus.", "fol": "(sterpus(Stella) & wumpus(Stella) & numpus(Stella))", "prediction": ["all x.(Stella(x) -> (Sterpus(x) & Wumpus(x) & Numpus(x)))", "(all x.(Stella(x) -> Sterpus(x)) & all y.(Wumpus(y) & -Stella(y))) & all z.(Numpus(z) -> Sterpus(z)))", "(Stella(Sterpus) & Stella(Wumpus) & Stella(Numpus))", "all x y z.((Stella(x) & Sterpus(y) & Wumpus(z)) -> (Sterpus(x) & Wumpus(y) & Numpus(z)))", "all x.(Stella(x) -> (Sterpus(x) | Wumpus(x) | Numpus(x)))", "(Stella) -> (Sterpus(Storpus) & Wumpus(Storpus) & Numpus(Storpus)))", "all x y.((Stella(x) & Sterpus(y)) -> (Wumpus(x) & Numpus(x)))", "(all x.(Stella(x) -> Sterpus(x)) & (Wumpus(x) & Numpus(x)))", "all x.(Stella(x) -> (Sterepus(x) & Wumpus(x) & Numpus(x)))", "(Stella) -> (Sterepus(Storpus) & Wumpus(Stella) & Numpus(Stella)))", "(all x.(Stella(x) -> Sterpus(x)) & all y.(Wumpus(y) & -Sterpus(y))) & all z.(Numpus(z) -> Numpus(z)))", "exists x.(Stella(x) & Sterpus(x) & Wumpus(x) & Numpus(x))", "all x.(Stella(x) -> (Sterpus(x) | Wumpus(x) | Numpus(x)))", "(All x.(Stella(x) -> Sterpus(x)) & (Wumpus(x) & Numpus(x)))", "all x.(Stella(x) -> (Sterepus(x) & Wumpus(x) & Numpus(x)))", "exists x.(Stella(x) & Sterpus(x) & Wumpus(x) & Numpus(x))"]}
{"id": "prontoqa_train_1627", "nl": "Stella is a jompus or a numpus or a rompus.", "fol": "(jompus(Stella) | numpus(Stella) | rompus(Stella))", "prediction": ["all x.(Stella(x) -> (Jompus(x) | Numpus(x) | Rompus(x)))", "(Jompus(Stella) | Numpus(Stella) | Rompus(Stella)))", "all x.(Stella(x) -> (Jompus(x) | Numpus(x) | Rompus(x)))", "all x y.((Stella(x) & Jompus(y)) | (Nompus(y) | Rompus(y))))", "(Jompus(Stella) | Numpus(Stella) | Rompus(Stella)))", "all x.(Stella(x) -> (Jompus(x) | Numpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Jimpus(x) | Numpus(x) | Rompus(x)))", "(Jimpus(s) | Numpus(s) | Rompus(s)))", "(Jompus(Stella) | Numpus(Stella) | Rompus(Stella)))", "all x.(Stella(x) -> (Jompus(x) | Numpus(x) | Rompus(x)))", "exists x.(Stella(x) & (Jumpus(x) | Numpus(x) | Rompus(x)))", "(Jompus(Stella) | Numpus(Stella) | Rompus(Stella)))", "exists x.(Stella(x) & ((Jompus(x) | Numpus(x) | Rompus(x))))", "all x.(Stella(x) -> (Jimpus(x) | Numpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Jompus(x) | Numpus(x) | Rompus(x)))", "exists x.(Solva(x) & (Jompus(x) | Numpus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1628", "nl": "Each gorpus is a tumpus.", "fol": "all x. (gorpus(x) -> tumpus(x))", "prediction": ["all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x y.((Gorpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x y.((Gorpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x y.((Gorpus(x) & Tumpus(y)) -> Has(x,y))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumulus(x))", "exists x.(Gorpus(x) & Tumpus(x))", "exists x.(Gorpus(x) & Humpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "exists x.(Gorpus(x) & Tumpus(x))", "exists x.(Gorpus(x) & Tumpus(x))"]}
{"id": "prontoqa_train_1629", "nl": "Max is a shumpus, a gorpus, and a dumpus.", "fol": "(shumpus(Max) & gorpus(Max) & dumpus(Max))", "prediction": ["all x.(Max(x) -> (Shumpus(x) | Gorpus(x) | Dumpus(x)))", "(all x.(Max(x) -> Humpus(x)) & all y.(Gorpus(y) & Dumpus(y)))", "(Shumpus(Max) | Gorpus(Max) | Dumpus(Max))", "all x y z.((Max(x) & Humpus(y) & Gorpus(z)) -> (Shumpus(x) & Gorpus(y) & Dumpus(z)))", "(Shumpus(Max) & Gorpus(Max) & Dumpus(Max))", "(all x.(Max(x) -> Humpus(x)) & all y.(Gorpus(y) & -Dumpus(y)))", "all x.(Max(x) -> (Shumpus(x) | Gorpus(x) | Dumpus(x)))", "(all x.(Max(x) -> Humpus(x)) & (Max(x) -> Gorpus(x)) & (Max(x) -> Dumpus(x)))", "all x.(Max(x) -> (Shumpus(x) | Gorpus(x) | Dumpus(x)))", "(All x.(Max(x) -> Shumpus(x)) & (Max(x) -> Gorpus(x)) & (Max(x) -> Dumpus(x)))", "all x.(Mat Max(x) -> (Shumpus(x) | Gorpus(x) | Dumpus(x)))", "(Shumpus(Max) | Gorpus(Max) | Dumpus(Max))", "all x.(Max(x) -> (Shumpus(x) & Gorpus(x) & Dumpus(x)))", "(all x.(Max(x) -> Humpus(x)) & all y.(Gorpus(y) & Dumpus(y)))", "all x.(Max(x) -> (Shumpus(x) | Gorpus(x) | Dumpus(x)))", "all x.(Max(x) -> (Shumpus(x) | Gorpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_1630", "nl": "Max is a numpus or a lorpus or a tumpus.", "fol": "(numpus(Max) | lorpus(Max) | tumpus(Max))", "prediction": ["all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Tumpus(x)))", "(Numpus(Max) | Lorpus(Max) | Tumpus(Max))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Tumpus(x)))", "((Max(Max) | (Lorpus(Max) | Tumpus(Max))))", "(numpus(Max) | Lorpus(Max) | Tumpus(Max))", "(Numpus(max) | Lorpus(max) | Tumpus(max)))", "all x y.((Max(x) & Numpus(y)) | (Lorpus(x) | Tumpus(x))))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Tumpus(x)))", "all x.(M Max(x) -> (Numpus(x) | Lorpus(x) | Tumpus(x)))", "exists x.(Mat Max(x) & (Numpus(x) | Lorpus(x) | Tumpus(x)))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Tumpus(x)))", "(Numpus(max) | Lorpus(max) | Tumpus(max)))", "all x.(Max(x) -> (Numpus(x) | Loupus(x) | Tumpus(x)))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Tumpus(x)))", "all x.(Max(x) -> (Nompus(x) | Lower(x) | Tumpus(x)))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1631", "nl": "Everything that is an impus and a wumpus and a jompus is a yumpus and a dumpus and a rompus.", "fol": "all x. ((impus(x) & wumpus(x) & jompus(x)) -> (yumpus(x) & dumpus(x) & rompus(x)))", "prediction": ["all x.((Impossible(x) & Wumpus(x) & Jompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Impose(x) & Wumpus(x) & Jompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x y.((Imposs(x) & Wumpus(x) & Jompus(y)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Issue(x) & IsWumpus(x) & IsJompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x y z.((Impos(x) & Wumpus(y) & Jompus(z) & Is(x,y) & Is(y,z)) -> (Yumpus(x) & Is(x,y) & Is(x,z)) & Is(x,y) & Is(x,z)) & Is(x,y) & Is(x,y) & Is(x,y))", "all x y.((Impossible(x) & Wumpus(x) & Jompus(x)) -> (Yumpus(y) & Dumpus(y) & Rompus(y)))", "all x.((Impact(x) & Wumpus(x) & Jompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Issue(x) & Wumpus(x) & Jompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "(all x.((Impossible(x) & Wumpus(x) & Jompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Imposer(x) & Wumpus(x) & Jompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x.(Impose(x) & Wumpus(x) & Jompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Impossible(x) & Wumpus(x) & Jompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x.(Impose(x) -> (Wumpus(x) & Jompus(x) & Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x y.((Impossible(x) & Wumpus(x) & Jompus(y)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "(all x.((Impossible(x) & Wumpus(x) & Jompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "(all x.(Impose(x) -> (Wumpus(x) & Jompus(x))) & (Yumpus(x) | Dumpus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1632", "nl": "Numpuses are lorpuses and vumpuses and impuses.", "fol": "all x. (numpus(x) -> (lorpus(x) & vumpus(x) & impus(x)))", "prediction": ["all x.(Numpuse(x) -> (Lorpus(x) & Vampuse(x) & Imperium(x)))", "all x y.((Numpuse(x) & Lorpus(y)) -> (Vumpuse(x) & Issue(x)))", "(all x.(Numpuse(x) -> Loomis(x)) & all y.(Vampuse(y) & Imperium(y))))", "all x.(Numpuse(x) -> (Lorpus(x) | Vampuse(x) | Impermissible(x)))", "(all x.(Numpuse(x) -> Lorpus(x)) & all y.(Vampuse(y) & Imperium(y))))", "all x.(Numpus(x) -> (Lorpuse(x) | Vampuse(x) | Impermisse(x)))", "all x y.((Numpuse(x) & Lorpuse(y)) -> (Vampuse(x) & Issue(x)))", "(all x.(Numpus(x) -> Loomis(x)) & all y.(Vumpus(y) -> Issue(y)))", "all x y z.((Numpuse(x) & Lorpus(y) & Vampuse(z)) -> (Lorpus(x,y) | Impermissible(z)))", "all x.(Numpuse(x) -> (Lorpus(x) & Vampuse(x) & Issue(x)))", "all x y.((Numpus(x) & Lorpus(y)) -> (Vampuse(x) & Issue(x)))", "all x.(Numpus(x) -> (Lorpuse(x) & Vampuse(x) & Impermissible(x)))", "(all x.(Numpuse(x) -> Lorpuse(x)) & (Vampuse(x) | Issue(x))))", "(all x.(Numpus(x) -> Llorpuse(x)) & all y.(Vampuse(y) & Impermissible(y))))", "all x.(Numpuse(x) -> (Lorpuse(x) | Vampuse(x) | Issue(x)))", "all x.(Numpus(x) -> (Lorpus(x) | Vumpus(x) | Imperium(x)))"]}
{"id": "prontoqa_train_1633", "nl": "Polly is a shumpus, a grimpus, or an impus.", "fol": "(shumpus(Polly) | grimpus(Polly) | impus(Polly))", "prediction": ["all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Imperator(x)))", "(Shumpus(poly) | Grimpus(poly) | Imperator(poly))", "all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Imperator(x)))", "(Shumpus,Smoothpus,Issuel) | Issuel(Polly))", "all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Imperator(x)))", "(all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Imperator(x))))", "all x y.((Polly(x) & (Shumpus(y) | Grimpus(y) | Imperator(y))) -> Polly(x))", "(Shumpus,Surprise,Impossible) | Impossible(Polly,Shumpus))", "all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Imperator(x)))", "all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Impossible(x)))", "all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Imperator(x)))", "exists x.(Polly(x) & (Shumpus(x) | Grimpus(x) | Impossible(x)))", "(all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Issue(x))))", "all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Impeccable(x)))", "all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Imperium(x)))", "exists x.(Poly(x) & (Shumpus(x) | Grimpus(x) | Issue(x)))"]}
{"id": "prontoqa_train_1634", "nl": "Sam is a lorpus, a tumpus, and a shumpus.", "fol": "(lorpus(Sam) & tumpus(Sam) & shumpus(Sam))", "prediction": ["all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Humpus(x)))", "all x y z.((Sam(x) & Lorpus(y) & Tumpus(z)) -> (Lorpus(x) | Tumpus(z) | Humpus(z)))", "(Lorpus(Sam) | Tumpus(Sam) | Humpus(Sam))", "(all x.(Sam(x) -> Lorpus(x)) & (Tumpus(x) & Humpus(x)))", "all x.(Sam(x) -> (Lorpus(x) & Tumpus(x) & Humpus(x)))", "(all x.(Sam(x) -> Loomis(x)) & all y.(Tumpus(y) & all z.(Shumpus(z)) -> Humpus(z))))", "(Lorpus(Sam) & Tumpus(Sam) & Humpus(Sam))", "all x y z.((Sam(x) & Lorpus(y) & Tumpus(z)) -> (Lorpus(x) & Tumpus(z) & Humpus(z)))", "(all x.(Sam(x) -> Lorpus(x)) & all y.(Tumpus(y) & all z.(Shumpus(z)) -> Shumpus(z))))", "(Lorpus,Tumpus,Shumpus)", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Humpus(x)))", "all x y z.((Sam(x) & Lorpus(y) & Tumpus(z)) -> (Lorpus(x) | Tumpus(z) | Humpus(z)))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Sam(x) -> (Lorph(x) | Tumpus(x) | Humpus(x)))", "exists x.(Sam(x) & Lorpus(x) & Tumpus(x) & Humpus(x))", "exists x.(Sam(x) & (Lorpus(x) | Tumpus(x) | Humpus(x)))"]}
{"id": "prontoqa_train_1635", "nl": "Sam is a zumpus or a shumpus or a numpus.", "fol": "(zumpus(Sam) | shumpus(Sam) | numpus(Sam))", "prediction": ["all x.(Sam(x) -> (Tompus(x) | Humpus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Humpus(x) | Numpus(x)))", "(Tompus(sam) | Humpus(sam) | Numpus(sam)))", "all x.(Sam(x) -> (Tompus(x) | Shumpus(x) | Numpus(x)))", "all x y.(Sam(x) -> (Tompus(x) | Humpus(x) | Numpus(y)))", "(Zumpus, -Shumpus,-Numpus))", "(Tompus(sam) | Humpus(sam) | Numpus(sam)))", "(Tompus) | Humpus(Sam) | Numpus(Sam))", "all x.(Sam(x) -> (Tompus(x) | Humpus(x) | Numpus(x)))", "all x.(Sam(x) -> (Zumpus(x) | Shumpus(x) | Numpus(x)))", "exists x.(Sammu(x) & (Tompus(x) | Humpus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Humpus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Humpus(x) | Numpus(x)))", "all x.(Sam(x) -> (Zumpus(x) | Shumpus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Humpus(x) | Numpus(x)))", "exists x.(Sam(x) & (Zumpus(x) | Humpus(x) | Numpus(x)))"]}
{"id": "prontoqa_train_1636", "nl": "Everything that is a shumpus and a brimpus and a vumpus is a zumpus.", "fol": "all x. ((shumpus(x) & brimpus(x) & vumpus(x)) -> zumpus(x))", "prediction": ["all x.((Shumpus(x) & Brimpus(x) & Vumpus(x)) -> Zumpus(x))", "all x y.((Shumpus(x) & Brimpus(y) & Vumpus(y)) -> Zumpus(x))", "all x y z.((Shumpus(x) & Brimpus(y) & Vumpus(z) & HasShumpus(x) & HasBrimpus(y)) -> Zumpus(x))", "(all x.((Shumpus(x) & -Brimpus(x) & -Vumpus(x)) -> Zumpus(x))", "all x.((Shumpus(x) & Brimpus(x) & Vumpus(x)) -> Zumpus(x))", "(all x.((Shumpus(x) & -Brimpus(x)) -> Zumpus(x)) & all y.((Brimpus(y) & -Vumpus(y)) -> Zumpus(y)))", "all x.((Shumpus(x) | Brimpus(x) | Vumpus(x)) -> Zumpus(x))", "all x.((Shumpus(x) & Brimpus(x) & Vumpus(x)) -> Zumpus(x))", "all x y.((Shumpus(x) & Brimpus(y) & Vumpus(x)) -> Zumpus(x))", "all x y z.((Shumpus(x) & Brimpus(y) & Vumpus(z) & HasShumpus(x) & HasBrimpus(y)) -> Zumpus(x))", "all x.(((Shumpus(x) | Brimpus(x) | Vumpus(x)) -> Zumpus(x))", "all x.((Shumpus(x) & Brimpus(x) & Vumpus(x)) -> Zumpus(x))", "all x.((Shumpus(x) | Brimpus(x) | Vumpus(x)) -> Zumpus(x))", "all x.((Shumpus(x) & Brimpus(x) & Vumpus(x)) -> Zumpus(x))", "all x.((Shumpus(x) | Brimpus(x) | Vumpus(x)) -> Zumpus(x))", "all x.((Shumpus(x) & Brimpus(x) & Vumpus(x)) -> Zumpus(x))"]}
{"id": "prontoqa_train_1637", "nl": "Rex is a lempus and Rex is not a zumpus and Rex is a tumpus.", "fol": "(lempus(Rex) & -zumpus(Rex) & tumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Lempus(x)) & (Rex(x) -> -Zumpus(x)) & (Rex(x) -> Tumpus(x)))", "all x y z.((Rex(x) & Lempus(x) & Rex(y) & Zumpus(z)) -> (-Tompus(y) & Tumpus(z)))", "(all x y z.((Rex(x) & Lempus(x)) -> (Lempus(x) & -Zumpus(y)) & ((Rex(z) & Tumpus(z))) -> (Tumpus(z))))", "(all x y.(Lempus(x) -> Rex)) & (Zumpus(y) -> Rex)) & (Tumpus(y) -> Rex)))", "all x y.((Rex(x) & Lempus(x) & Rex(y)) -> (-Zumpus(y) & Tumpus(y)))", "(all x.(Rex(x) -> Lempus(x)) & (Rex(x) -> -Zumpus(x)) & (Rex(x) -> Tumpus(x)))", "all x y z.((Rex(x) & Lempus(x) & Rex(y) & Zumpus(z)) -> (Lempus(x) & -Tompus(y) & Tumpus(z)))", "(all x.(Rex(x) -> Lempus(x)) & (-Zumpus(x)) & (Tumpus(x))))", "(all x.(Rex(x) -> Lempus(x)) & all y.(Rex(y) -> -Zumpus(y)) & all z.(Rex(z) -> Tumpus(z))))", "all x.(Rex(x) -> (Lempus(x) & -Zumpus(x) & Tumpus(x)))", "(all x y.(Lempus(x) -> Rex(x)) & (Zumpus(y) -> -Rex(y)) & (Tumpus(y) -> Rex(y)))", "all x y z.((Rex(x) & Lempus(x) & Zumpus(y) & Tumpus(z)) -> (Lempus(x) & -Zumpus(y) & Tumpus(z)))", "all x y.((Rex(x) & Lempus(x) & Rex(y)) -> (-Zumpus(y) & Tumpus(y)))", "(all x.(Rex(x) -> Lempus(x)) & all y.(Rex(y) -> -Zumpus(y)) & all z.(Rex(z) -> Tumpus(z))))", "all x.(Rex(x) -> (Lempus(x) & -Zumpus(x) & Tumpus(x)))", "(all x.(Rex(x) -> Lempus(x)) & (Rex(x) -> -Zumpus(x)) & (Rex(x) -> Tumpus(x)))"]}
{"id": "prontoqa_train_1638", "nl": "Every shumpus is a lempus and a jompus and a wumpus.", "fol": "all x. (shumpus(x) -> (lempus(x) & jompus(x) & wumpus(x)))", "prediction": ["all x.(Shumpus(x) -> (Lempus(x) & Jompus(x) & Wumpus(x)))", "all x y.((Shumpus(x) & Lempus(y)) -> (Jompus(x) & Wumpus(x)))", "(all x.(Shumpus(x) -> Lempus(x)) & all y.(Jompus(y) & all z.(Wumpus(z)) -> Wumpus(z))))", "all x y z.((Shumpus(x) & Lempus(y) & Jompus(z)) -> (IsLempus(x) & IsWumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) & Jompus(x) & Wumpus(x)))", "(all x.(Shumpus(x) -> Lempus(x)) & (Jompus(x) & Wumpus(x)))", "all x y.((Shumpus(x) & Lempus(y)) -> (Jompus(x) & Wumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) & Jompus(x) & Wumpus(x)))", "(all x.(Shumpus(x) -> Lempus(x)) & all y.(Jompus(y) & all z.(Wumpus(z)) -> Wumpus(z))))", "all x.(Shumpus(x) -> (Lempus(x) | Jompus(x) | Wumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) & Jompus(x) & Wumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) & Jompus(x) & Wumpus(x)))", "exists x.(Shumpus(x) & Lempus(x) & Jompus(x) & Wumpus(x))", "(all x.(Shumpus(x) -> Lempus(x)) & (Jompus(x) | Wumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) & Jompus(x) & Humpus(x)))", "exists x.(Shumpus(x) & Lempus(x) & Jompus(x) & Wumpus(x))"]}
{"id": "prontoqa_train_1639", "nl": "Everything that is a wumpus, a brimpus, and a sterpus is not a lempus.", "fol": "all x. ((wumpus(x) & brimpus(x) & sterpus(x)) -> -lempus(x))", "prediction": ["all x.((Wumpus(x) | Brimpus(x) | Sterpus(x)) -> -Lempus(x))", "all x.((Wumpus(x) | Brimpus(x) | Sterpus(x)) -> -Lempus(x))", "all x y.((Wumpus(x) & Brimpus(y) & Sterpus(x)) -> -Lempus(x))", "all x.(((Wumpus(x) | Brimpus(x) | Sterpus(x))) -> -Lempus(x))", "(all x.((Wumpus(x) & -Lempus(x)) -> (Brimpus(x) & -Lempus(x)))", "all x.((Wumpus(x) | Brimpus(x) | Sterpus(x)) -> -Lempus(x))", "all x.((Wumpus(x) | Brimpus(x) | Steroid(x)) -> -Lempus(x))", "all x.((Wumpus(x) & Brimpus(x) & Sterpus(x)) -> -Lempus(x))", "(all x.((Wumpus(x) | Brimpus(x) | Sterpus(x))) -> -Lempus(x))", "all x.(((Wumpus(x) | Brimpus(x) | Sterpus(x))) -> -Lempus(x))", "all x.((Wumpus(x) | Brimpus(x) | Sterpus(x)) -> -Lempus(x))", "(all x.((Wumpus(x) | Brimpus(x) | Specterpus(x))) -> -Lempus(x))", "(all x.((Wumpus(x) | Brimpus(x) | Sterpus(x))) -> -Lempus(x))", "all x.((Wumpus(x) | Brimpus(x) | Sterpus(x)) -> -Lempus(x))", "all x.((Wumpus(x) | Brimpus(x) | Steroid(x)) -> -Lempus(x))", "all x.((Wumpus(x) & Brimpus(x) & Sterpus(x)) -> -Lempus(x))"]}
{"id": "prontoqa_train_1640", "nl": "Impuses are gorpuses and tumpuses and dumpuses.", "fol": "all x. (impus(x) -> (gorpus(x) & tumpus(x) & dumpus(x)))", "prediction": ["all x.(Impus(x) -> (Gorpus(x) | Tumpus(x) | Dumpuse(x)))", "(all x.(Impuse(x) -> Gorpuse(x)) & all y.(Tumpus(y) & all z.(Dumpuse(z)) -> Dumpuse(z))))", "all x y.((Impus(x) & Gorpus(y)) -> (Tumpus(x) | Dumpuse(x)))", "all x.(Impuse(x) -> (Gorpus(x) | Tumpus(x) | Dumpuse(x)))", "(all x.(Impuse(x) -> Gorpuse(x)) & all y.(Tumpus(y) & all z.(Dumpuse(z)) -> Dumpuse(z))))", "all x y.((Impuse(x) & Gorpus(y)) -> (Tumpus(x) | Dumpuse(x)))", "all x y z.((Impus(x) & Gorpus(y) & Tumpus(z) & Dumpuse(z)) -> (Gorpus(y) | Tumpus(z) & Dumpuse(z)))", "all x.(Impus(x) -> (Gorpus(x) | Tumpus(x) | Dumpuse(x)))", "(all x.(Impuse(x) -> Gorpuse(x)) & (Tumpus(x) | Dumpuse(x)))", "(all x.(Impuse(x) -> Gorpuse(x)) & all y.(Tumpus(y) & all z.(Dumpuse(z)) -> Dumpuse(z))))", "all x y.((Impuse(x) & Gorpus(y) & Tumpus(y)) -> (Tumpus(y) | Dumpuse(y)))", "(all x.(Impuse(x) -> Gorpuse(x)) & (Tumpus(x) | Dumpuse(x)))", "all x.(Impuse(x) -> (Gorpuse(x) | Tumpuse(x) | Dumpuse(x)))", "all x.(Impus(x) -> (Gorpus(x) | Tumpus(x) | Dumpuse(x)))", "all x.(Impuses(x) -> (Gorpuses(x) | Tumpuses(x) | Dumpuses(x)))", "(all x y.(Impuse(x) -> Gorpuse(x)) & (Tumpus(y) | Dumpuse(y)))"]}
{"id": "prontoqa_train_1641", "nl": "Sam is a shumpus and Sam is a sterpus and Sam is not a dumpus.", "fol": "(shumpus(Sam) & sterpus(Sam) & -dumpus(Sam))", "prediction": ["all x y z.((Sam(x) & Shumpus(y) & Sterpus(z)) -> (Sam(x) & -Dumpus(x)))", "(all x.(Shumpus(x) -> Sam(x)) & (Sterpus(x) -> Sam(x)) & -Dumpus(x)))", "all x y.((Sam(x) & Sam(y)) -> (Shumpus(x) & Sterpus(y) & -Dumpus(y)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Sterpus(y) -> Sam(y))) & all z.(Dumpus(z) -> Sam(z))))", "all x.(Sam(x) -> (Shumpus(x) & Sterpus(x) & -Dumpus(x)))", "(all x.(Shumpus(x) -> -Dumpus(x)) & (Sterpus(x) -> -Dumpus(x)))", "(all x.(Shumpus(x) -> Shumpus(x)) & (Sterpus(x) -> Sterpus(x)) & (Sam(x) -> -Dumpus(x)))", "(all x y.(Shumpus(x) -> Sam(x)) & (Sterpus(y) -> Sam(y)) & (Dumpus(y) -> Sam(y)))", "all x y.((Sam(x) & Shumpus(x)) -> (Sterpus(x) & -Dumpus(y)))", "(all x y.((Shumpus(x) & -Dumpus(y)) -> Shumpus(x)) & ((Sterpus(x) & -Dumpus(y)) -> Sterpus(y)))", "all x y z.((Sam(x) & Shumpus(y) & Sterpus(z)) -> (Sam(x) & -Dumpus(x)))", "(all x.(Sam(x) -> Humpus(x)) & (Sam(x) -> Sterpus(x)) & (Sam(x) -> -Dumpus(x)))", "all x y z.((Sam(x) & Humpus(y) & Sterpus(z)) -> (Shumpus(x) & Sterpus(y) & -Dumpus(z)))", "exists x.(Shumpus(x) & Sterpus(x) & -Dumpus(x))", "all x.(Sam(x) -> (Shumpus(x) & Sterpus(x) & -Dumpus(x)))", "(all x.(Shumpus(x) & All y.(Sterpus(y)) -> -Dumpus(x)))"]}
{"id": "prontoqa_train_1642", "nl": "Sam is not an impus.", "fol": "-impus(Sam)", "prediction": ["-Impossible(Sam)", "all x.(Sam(x) -> -Impossible(x))", "-(Impossible(Sam) & -Impossible(Sam))", "(-Is(Sam) & Is(Sam)))", "(-Issue(Sam))", "Sam is not impuscable.", "all x.(Sam(x) -> -Impossible(x))", "Sam is not a impusct.", "-Impossible(Sam)", "-(Sam(s) & IsNot(s))", "Sam is not impuscible.", "all x.(Sam(x) -> -Impossible(x))", "-Impossible(Sam)", "Sam is not impus.", "(-Issue(Sam))", "(-Impossible(Sam))"]}
{"id": "prontoqa_train_1643", "nl": "Everything that is a sterpus, a gorpus, and a zumpus is a brimpus and a shumpus and a lorpus.", "fol": "all x. ((sterpus(x) & gorpus(x) & zumpus(x)) -> (brimpus(x) & shumpus(x) & lorpus(x)))", "prediction": ["all x.((Sterpus(x) | Gorpus(x) | Zumpus(x)) -> (Brimpus(x) & Humpus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Gorpus(x) | Zumpus(x)) -> (Brimpus(x) & Humpus(x) & Lorpus(x)))", "all x.((Sterepus(x) & Gorpus(x) & Zumpus(x)) -> (Brimpus(x) & Shumpus(x) & Lorpus(x)))", "all x y.((Sterpus(x) & Gorpus(y) & Zumpus(x)) -> (Brimpus(x) & Shumpus(x) & Lorpus(x)))", "all x y z.((Sterpus(x) & Gorpus(y) & Zumpus(z) & Brimpus(x) & Shumpus(x) & Lorpus(x)) -> (Sterpus(x) & Gorpus(x) & Zumpus(y) & Brimpus(x) & Shumpus(x) & Lorpus(x)))", "all x y.((Sterpus(x) & Gorpus(y) & Zumpus(x)) -> (Brimpus(x) & Shumpus(y) & Lorpus(y)))", "all x.((Sterpus(x) | Gorpus(x) | Zumpus(x)) -> (Brimpus(x) & Shumpus(x) & Lorpus(x)))", "all x.((Sterepus(x) & Gorpus(x) & Zumpus(x)) -> (Brimpus(x) & Humpus(x) & Lorpus(x)))", "(all x.((Sterpus(x) | Gorpus(x) | Zumpus(x))) -> (Brimpus(x) & Humpus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Gorpus(x) | Zumpus(x)) -> (Brimpus(x) & Shumpus(x) & Lorpus(x)))", "(all x.((Sterpus(x) | Gorpus(x) | Zumpus(x))) -> (Brimpus(x) & Shumpus(x) & Lorpus(x)))", "all x y.((Sterpus(x) & Gorpus(y) & Zumpus(x)) -> (Brimpus(x) & Humpus(y) & Lorpus(y)))", "all x.((Sterpus(x) | Gorpus(x) | Zumpus(x)) -> (Brimpus(x) & Humpus(x) & Lorpus(x)))", "all x.((Sterepus(x) & Gorpus(x) & Zumpus(x)) -> (Brimpus(x) & Shumpus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Gorpus(x) | Zumpus(x)) -> (Brimpus(x) & Humpus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Gorpus(x) | Zumpus(x)) -> (Brimpus(x) & Humpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_train_1644", "nl": "Everything that is a rompus, a yumpus, and a brimpus is a jompus.", "fol": "all x. ((rompus(x) & yumpus(x) & brimpus(x)) -> jompus(x))", "prediction": ["all x.((Rompus(x) | Yumpus(x) | Brimpus(x)) -> Jompus(x))", "all x y z.((Rompus(x) & Yumpus(y) & Brimpus(z) & Has(x,y)) -> Jompus(x))", "all x.((Rompus(x) | Yumpus(x) | Brimpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Yumpus(x) | Brimpus(x)) -> Jompus(x))", "all x y z.((Rompus(x) & Yumpus(y) & Brimpus(z) & Has(x,y) & Has(x,z)) -> Jompus(x))", "all x y.((Rompus(x) & Yumpus(y) & Brimpus(y)) -> Jompus(x))", "all x.(((Rompus(x) | Yumpus(x) | Brimpus(x))) -> Jompus(x))", "all x.((Rompus(x) | Yumpus(x) | Brimpus(x)) -> Jompus(x))", "(all x.((Rompus(x) | Yumpus(x) | Brimpus(x))) -> Jompus(x))", "all x.((Rompus(x) | Yumpus(x) | Brimpus(x)) -> Jompus(x))", "(all x.((Rompus(x) | Yumpus(x) | Brimpus(x))) -> Jompus(x))", "all x.((Rompus(x) & Yumpus(x) & Brimpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Yumpus(x) | Brimpus(x)) -> Jompus(x))", "(all x.((Rompus(x) | Yumpus(x) | Brimpus(x))) -> Jompus(x))", "all x.((Rompus(x) | Yampus(x) | Brimpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Yumpus(x) | Brimpus(x)) -> Jompus(x))"]}
{"id": "prontoqa_train_1645", "nl": "Alex is a jompus, a wumpus, or a lempus.", "fol": "(jompus(Alex) | wumpus(Alex) | lempus(Alex))", "prediction": ["all x.(Alex(x) -> (Jompus(x) | Wumpus(x) | Lempus(x)))", "(Jompus(Alex) | Wumpus(Alex) | Lempus(Alex))", "(all x.(Alex(x) -> (Jompus(x) | Wumpus(x) | Lempus(x))))", "all x.(Alex(x) -> (Jompus(x) | Wumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Jimpus(x) | Wumpus(x) | Lempus(x)))", "(Jompus(Alex) | Wumpus(Alex) | Lempus(Alex))", "all x y.((Alex(x) & Jompus(y)) | (Wumpus(y) | Lempus(y))))", "all x.(Alex(x) -> (Jompus(x) | Wumpus(x) | Lempus(x)))", "(Jimpus,Wumpus,Lempus)", "(all x.(Alex(x) -> Jompus(x)) | (Wumpus(x) | Lempus(x))))", "all x.(Alex(x) -> (Jimpus(x) | Wumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Jompus(x) | Wumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Jompus(x) | Wumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Jumpus(x) | Wumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Jompus(x) | Wumpus(x) | Lempus(x)))", "exists x.(Alex(x) & (Jimpus(x) | Wumpus(x) | Lempus(x)))"]}
{"id": "prontoqa_train_1646", "nl": "Everything that is a wumpus, a vumpus, or a dumpus is a zumpus, a shumpus, and a jompus.", "fol": "all x. ((wumpus(x) | vumpus(x) | dumpus(x)) -> (zumpus(x) & shumpus(x) & jompus(x)))", "prediction": ["all x.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Tompus(x) | Shumpus(x) | Jompus(x)))", "all x.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Tompus(x) | Shumpus(x) | Jompus(x)))", "all x.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Tompus(x) | Shumpus(x) | Jompus(x)))", "all x.(((Wumpus(x) | Vumpus(x) | Dumpus(x))) -> (Tompus(x) | Shumpus(x) | Jompus(x)))", "all x.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Tompus(x) & Shumpus(x) & Jompus(x)))", "all x y.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Tompus(y) | Shumpus(y) | Jompus(y)))", "(all x.((Wumpus(x) | Vumpus(x) | Dumpus(x))) -> (Tompus(x) & Shumpus(x) & Jompus(x)))", "all x.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Tompus(x) | Shumpus(x) | Jompus(x)))", "all x.(((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Tompus(x) | Humpus(x) | Jompus(x)))", "all x.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Zumpus(x) & Shumpus(x) & Jompus(x)))", "all x y.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Zumpus(y) | Shumpus(y) | Jompus(y)))", "all x.((Wumpus(x) | Voompus(x) | Dumpus(x)) -> (Tompus(x) & Shumpus(x) & Jompus(x)))", "(all x.((Wumpus(x) | Vumpus(x) | Dumpus(x))) -> (Tompus(x) | Shumpus(x) | Jompus(x)))", "(all x.((Wumpus(x) | Vumpus(x) | Dumpus(x))) -> (Tompus(x) & Shumpus(x) & Jompus(x)))", "all x.(Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Zumpus(x) | Shumpus(x) | Jompus(x)))", "all x.((Wumpus(x) | Volumpus(x) | Dumpus(x)) -> (Zumpus(x) & Shumpus(x) & Jompus(x)))"]}
{"id": "prontoqa_train_1647", "nl": "Max is a vumpus.", "fol": "vumpus(Max)", "prediction": ["all x.(Max(x) -> Vumpus(x))", "Max is a Vumpus.", "(Vumpus(Max))", "all x.(Max(x) -> Vumpus(x))", "(Vimpus(Max) & -Vimpus(Max))", "Max is a Vumpus.", "-Vumpus(Max)", "Max is a vumpus.", "Max ist ein Vumpus.", "(Vumpus(Max)", "all x.(Max(x) -> Vumpus(x))", "(Vumpus(Max))", "all x.(Max(x) -> Vampus(x))", "All x.(Max(x) -> Vumpus(x))", "all x.(Max(x) -> Vampire(x))", "(Vimpus(Max)"]}
{"id": "prontoqa_train_1648", "nl": "Everything that is a wumpus or a gorpus or a dumpus is a numpus, a yumpus, and a lorpus.", "fol": "all x. ((wumpus(x) | gorpus(x) | dumpus(x)) -> (numpus(x) & yumpus(x) & lorpus(x)))", "prediction": ["all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) & Yumpus(x) & Lorpus(x)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) & Yumpus(x) & Lorpus(x)))", "all x.(((Wumpus(x) | Gorpus(x) | Dumpus(x))) -> (Numpus(x) & Yumpus(x) & Lorpus(x)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) & Yampus(x) & Lorpus(x)))", "all x y.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(y) & Yumpus(y) & Lorpus(y)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) | Yampus(x) | Lorpus(x)))", "all x.(((Wumpus(x) | Gorpus(x) | Dumpus(x))) -> (Numpus(x) & Yampus(x) & Lorpus(x)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) & Yumpus(x) & Lorpus(x)))", "all x y.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(y) & Yampus(y) & Lorpus(y)))", "(all x.((Wumpus(x) | Gorpus(x) | Dumpus(x))) -> (Numpus(x) | Yampus(x) | Lorpus(x)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) | Yampus(x) | Lorpus(x)))", "(all x.((Wumpus(x) | Gorpus(x) | Dumpus(x))) -> (Numpus(x) & Yumpus(x) & Lorpus(x)))", "all x y.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(y) & Yumpus(y) & Lorpus(y)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) & Yumpus(x) & Lorpus(x)))", "all x.(Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) & Yumpus(x) & Lorpus(x)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) | Yampus(x) | Lorpus(x)))"]}
{"id": "prontoqa_train_1649", "nl": "Everything that is a sterpus, a lempus, and a jompus is a shumpus and a vumpus and a lorpus.", "fol": "all x. ((sterpus(x) & lempus(x) & jompus(x)) -> (shumpus(x) & vumpus(x) & lorpus(x)))", "prediction": ["all x.((Sterpus(x) | Lempus(x) | Jompus(x)) -> (Shumpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Lempus(x) | Jompus(x)) -> (Shumpus(x) & Vumpus(x) & Lorpus(x)))", "all x y.((Sterpus(x) & Lempus(y) & Jompus(x)) -> (Shumpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Sterepus(x) & Lempus(x) & Jompus(x)) -> (Shumpus(x) & Vumpus(x) & Lorpus(x)))", "all x y.((Sterpus(x) & Lempus(y) & Jompus(x)) -> (Shumpus(x) & Vumpus(x) & Lorpus(x)))", "all x y z.((Sterpus(x) & Lempus(y) & Jompus(z) & Sterpus(x) & Lempus(y) & Jompus(z)) -> (Shumpus(x) & Vumpus(x) & Lorpus(x)))", "(all x.((Sterpus(x) | Lempus(x) | Jompus(x))) -> (Shumpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Lempus(x) | Jompus(x)) -> (Shumpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Lempus(x) | Jompus(x)) -> (Shumpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Sterepus(x) | Lempus(x) | Jompus(x)) -> (Shumpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Sterepus(x) & Lempus(x) & Jompus(x)) -> (Shumpus(x) & Vumpus(x) & Lorpus(x)))", "(all x.((Sterpus(x) | Lempus(x) | Jompus(x))) -> (Shumpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Lempus(x) | Jompus(x)) -> (Shumpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Lempus(x) | Jompus(x)) -> (Shumpus(x) & Vumpus(x) & Lorpus(x)))", "all x.(Sterpus(x) & Lempus(x) & Jompus(x)) -> (Shumpus(x) & Vumpus(x) & Lorpus(x)))", "(all x.((Sterepus(x) | Lempus(x) | Jompus(x))) -> (Shumpus(x) & Vumpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_train_1650", "nl": "Every grimpus is a zumpus and a gorpus and a yumpus.", "fol": "all x. (grimpus(x) -> (zumpus(x) & gorpus(x) & yumpus(x)))", "prediction": ["all x.(Grimpus(x) -> (Tompus(x) & Gorpus(x) & Yumpus(x)))", "(all x.(Grimpus(x) -> Zumpus(x)) & all y.(Gorpus(y) & All z.(Yumpus(z) & Y.(Gorpus(z) & Y.(Yumpus(z)))))", "all x y.((Grimpus(x) & Zumpus(y)) -> (Gorpus(x) & Yumpus(x)))", "all x.(Grimpus(x) -> (Tompus(x) & Gorpus(x) & Yumpus(x)))", "all x y z.((Grimpus(x) & Zumpus(y) & Gorpus(z)) -> (Tompus(x) & Gorpus(x) & Yumpus(x)))", "all x.(Smoothpus(x) -> (Tompus(x) & Gorpus(x) & Yumpus(x)))", "(all x.(Smoothpus(x) -> Zumpus(x)) & all y.(Gorpus(y) -> Yumpus(y)))", "(all x.(Grimpus(x) -> Zumpus(x)) & all y.(Gorpus(y) & All z.(Yumpus(z) & -Tompus(y))))", "all x.(Grimpus(x) -> (Tompus(x) & Gorpus(x) & Yumpus(x)))", "all x.(Grimpus(x) -> (Tompus(x) & Gorpus(x) & Yumpus(x)))", "all x y.((Grimpus(x) & Zumpus(y)) -> (Gorpus(x) & Yumpus(x)))", "exists x.(Gruppus(x) & Zumpus(x) & Gorpus(x) & Yumpus(x))", "all x.(Grimpus(x) -> (Zumpus(x) | Gorpus(x) | Yumpus(x)))", "exists x.(Grimpus(x) & Zumpus(x) & Gorpus(x) & Yumpus(x))", "all x.(Sgrimpus(x) -> (Tompus(x) & Gorpus(x) & Yumpus(x)))", "(all x.(Grimpus(x) -> Zumpus(x)) & (Gorpus(x) -> Yumpus(x)))"]}
{"id": "prontoqa_train_1651", "nl": "Sally is not a gorpus, Sally is a yumpus, and Sally is a vumpus.", "fol": "(-gorpus(Sally) & yumpus(Sally) & vumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Gorpus(x)) & all y.(Sally(y) -> Yumpus(y)) & all z.(Sally(z) -> Vumpus(z))))", "all x y z.((Sally(x) & Gorpus(y) & Yumpus(z)) -> (-Gorpus(x) & Yumpus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Gorpus(x)) & (Yumpus(x) | Vumpus(x)))", "(all x y z.((Sally(x) & Gorpus(y)) -> -Gorpus(x)) & ((Sally(z) & Yumpus(z))) -> Vumpus(z)))", "all x.(Sally(x) -> (-Gorpus(x) & -Yumpus(x) & -Vumpus(x)))", "all x y z.((Sally(x) & Gorpus(y) & Yumpus(z)) -> (-Gorpus(x) & Yumpus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Gorpus(x)) & all y.(Sally(y) -> Yumpus(y)) & all z.(Sally(z) -> Vumpus(z))))", "all x y z.((Sally(x) & Gorpus(y) & Yumpus(z)) -> (-Gorpus(x) & Yampus(x) & Vumpus(x)))", "all x.(Sally(x) -> (-Gorpus(x) & Yampus(x) & Vumpus(x)))", "(-Gorpus(Sally) & -Yumpus(Sally) & Vumpus(Sally))", "(-Gorpus(Sally) & Yumpus(Sally) & Vumpus(Sally))", "exists x.(Sally(x) & -Gorpus(x) & Yumpus(x) & Vumpus(x))", "(all x.(Sally(x) -> -Gorpus(x)) & (Yumpus(x) & Vumpus(x)))", "all x y z.((Sally(x) & Gorpus(y) & Yumpus(z) & Vumpus(x)) -> (-Gorpus(x) & Yumpus(y) & Vumpus(z)))", "all x y z.((Sally(x) & Gorpus(y) & Yumpus(z)) -> (-Gorpus(x) | (Yumpus(x) & Vumpus(x))))", "(all x.(Sally(x) -> -Gorpus(x)) & (Yumpus(x) | Vumpus(x)))"]}
{"id": "prontoqa_train_1652", "nl": "Sam is a rompus, Sam is a dumpus, and Sam is not a numpus.", "fol": "(rompus(Sam) & dumpus(Sam) & -numpus(Sam))", "prediction": ["(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Numpus(x)))", "all x y z.((Sam(x) & Rompus(y) & Dumpus(z)) -> (Rompus(x) & Dumpus(x) & -Numpus(x)))", "all x y z.((Sam(x) & Rompus(x) & Dumpus(y) & -Numpus(z)) -> (Rompus(x) & Dumpus(y) & -Numpus(z)))", "all x.(Sam(x) -> (Rompus(x) & Dumpus(x) & -Numpus(x)))", "(all x.(Rompus(x) -> Sam(x)) & (Dumpus(x) -> Sam(x))) & (Numpus(x) -> Sam(x)))", "(all x y z.((Sam(x) & Rompus(y)) -> (Rompus(z) | Dumpus(z))) & ((Sam(x) & Numpus(x)) -> -Numpus(x)))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> Dumpus(x)) & -Sam(x)))", "(all x.(Sam(x) -> Rompus(x)) & all y.(Sam(y) -> Dumpus(y)) & all z.(Sam(z) -> -Numpus(z))))", "(all x.(Rompus(x) -> Sam(x)) & all y.(Dumpus(y) -> Sam(y))) & all z.(Numpus(z) -> Sam(z)))", "all x.(Sam(x) -> (Rompus(x) | Dumpus(x) | -Numpus(x)))", "(all x y z.(Rompus(x) -> Sam(x)) & (Dumpus(y) -> Sam(z)) & -Numpus(z)))", "all x y z.((Sam(x) & Rompus(y) & Dumpus(z)) -> (Rompus(x) | Dumpus(z) | -Numpus(z)))", "(all x.(SameDay(x) -> Rompus(x)) & (SameDay(x) -> Dumpus(x)) & (SameDay(x) -> -Numpus(x)))", "exists x.(Rompus(x) & Dumpus(x) & -Numpus(x))", "all x y z.((Sam(x) & Rompus(x) & Dumpus(y) & -Numpus(z)) -> (Rompus(x) & Dumpus(y) & -Rompus(z)))", "all x y z.((Sam(x) & Rompus(y) & Dumpus(z)) -> (Rompus(x) | Dumpus(z) & -Numpus(x)))"]}
{"id": "prontoqa_train_1653", "nl": "Sam is a gorpus, Sam is not an impus, or Sam is a yumpus.", "fol": "(gorpus(Sam) | -impus(Sam) | yumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Gorpus(x)) | (-Sam(x) & Impossible(x))) | (-Sam(x) & Yumpus(x))))", "all x.(Sam(x) -> (Gorpus(x) | -Impossible(x) | Yumpus(x)))", "all x y.((Sam(x) & Gorpus(x)) | (-Impossible(x) | Yumpus(y))))", "(all x.(Sam(x) -> Gorpus(x)) & (-Sam(x) -> Imperator(x)) | (-Sam(x) -> Yumpus(x))))", "(exists x.(Sam(x) & Gorpus(x)) | exists y.(Impossible(y) & -Impossible(y))))", "all x.(Sam(x) -> (Gorpus(x) | -Impossible(x) | Yumpus(x)))", "(all x.(Sam(x) -> Gorpus(x)) | (-Sam(x) & Impossible(x))) | (-Sam(x) & Yumpus(x))))", "all x y.((Sam(x) & Gorpus(x)) | (-Impossible(x) | Yumpus(y))))", "exists x.(Sam(x) & ((Gorpus(x) & -Impossible(x)) | (Yumpus(x)))))", "exists x.(Gorpus(x) | -Impossible(x) | Yumpus(x))", "(all x.(Sam(x) -> Gorpus(x)) & (-Sam(x) -> Imperator(x)) | (-Sam(x) -> Yumpus(x))))", "all x y.((Sam(x) & Gorpus(x)) | (-Impossible(x) | Yumpus(y))))", "all x.(Sam(x) -> (Gorpus(x) | -Impossible(x) | Yumpus(x)))", "(all x.(Sam(x) -> Gorpus(x)) | (-Impossible(x) | Yumpus(x))))", "(all x.(Sam(x) -> Gorpus(x)) & (-Sam(x) -> Imperium(x)) | (-Sam(x) -> Yumpus(x))))", "all x.(Sam(x) -> (Gorpus(x) | -Issue(x) | Yumpus(x)))"]}
{"id": "prontoqa_train_1654", "nl": "Each lorpus is a jompus and a gorpus and a vumpus.", "fol": "all x. (lorpus(x) -> (jompus(x) & gorpus(x) & vumpus(x)))", "prediction": ["all x.(Lorpus(x) -> (Jompus(x) & Gorpus(x) & Vumpus(x)))", "(all x.(Lorpus(x) -> Jompus(x)) & all y.(Gorpus(y) & all z.(Vumpus(z)) -> Vumpus(z))))", "all x y.((Lorpus(x) & Jompus(y)) -> (Gorpus(x) & Vumpus(x)))", "all x y z.((Lorpus(x) & Jompus(y) & Gorpus(z)) -> (Is(x,y) & Is(x,z)))", "all x.(Lorpus(x) -> (Jompus(x) & Gorpus(x) & Vumpus(x)))", "(all x.(Lorpus(x) -> Jompus(x)) & all y.(Gorpus(y) & all z.(Vumpus(z) & -Jompus(y)) -> Gorpus(z)))", "all x y z.(Lorpus(x) -> (Jompus(x) & Gorpus(y) & Vumpus(z)))", "all x y.((Lorpus(x) & Jompus(y)) -> (Gorpus(x) & Vumpus(x)))", "all x.(Lorpus(x) -> (Jompus(x) | Gorpus(x) | Vumpus(x)))", "(all x.(Lorpus(x) -> Jompus(x)) & (Gorpus(x) & Vumpus(x)))", "all x.(Lorpus(x) -> (Jompus(x) & Gorpus(x) & Vumpus(x)))", "exists x.(Lorpus(x) & Jompus(x) & Gorpus(x) & Vumpus(x))", "all x.(Lorpus(x) -> (Jimpus(x) & Gorpus(x) & Vumpus(x)))", "(all x.(Lorpus(x) -> Jompus(x)) & all y.(Gorpus(y) & AllVumpus(y))))", "exists x.(Lorpus(x) & Jompus(x) & Gorpus(x) & Vumpus(x))", "exists x.(Lorpus(x) & Jompus(x) & Gorpus(x) & Vumpus(x))"]}
{"id": "prontoqa_train_1655", "nl": "Every rompus is not a jompus.", "fol": "all x. (rompus(x) -> -jompus(x))", "prediction": ["all x.(Rompus(x) -> -Jompus(x))", "all x.(Rompus(x) -> -Jompus(x))", "(all x.(Rompus(x) -> -Jompus(x)))", "all x.(Rompus(x) -> -Jimpus(x))", "-Jompus(rompus)", "all x.(Romesue(x) -> -Jompus(x))", "all x y.((Rompus(x) & Jompus(y)) -> -Jompus(x))", "(all x.(Rompus(x) -> -Jompus(x)))", "all x.(rompus(x) -> -Jompus(x))", "all x.(Rompus(x) -> -Jompus(x))", "all x.(Rompus(x) -> -Jimpus(x))", "all x.(Rrompus(x) -> -Jompus(x))", "exists x.(rompus(x) & -Jompus(x))", "all x.(Rompus(x) -> -Jompus(x))", "exists x.(rompus(x) & -Jompus(x))", "all x.(Rompus(x) -> -Jumpus(x))"]}
{"id": "prontoqa_train_1656", "nl": "Sally is a rompus and an impus and a numpus.", "fol": "(rompus(Sally) & impus(Sally) & numpus(Sally))", "prediction": ["all x.(Sally(x) -> (Rompus(x) & Issue(x) & Numpus(x)))", "(Rompus(Sally) & Issue(Sally) & Numpus(Sally))", "(Rompus(Sally) & Impossible(Sally) & Numpus(Sally))", "Sally is rompus(Sally) & Issues(Sally) & Issues(Sally) & Issues(Sally))", "(rompus(Sally) & Issue(Sally) & Issue(Sally) & Issue(Sally))", "all x.(Sally(x) -> (Rompus(x) & Impossible(x) & Numpus(x)))", "(all x.(Sally(x) -> Rompus(x)) & (Impossible(x) | Numpus(x))))", "(Rompus(Sally) & Issuel(Sally) & Numpus(Sally))", "Sally is a rompus and a numpus.", "(all x.(Sally(x) -> Rompus(x)) & all y.(Impossible(y) & Numpus(y))))", "all x.(Sally(x) -> (Rompus(x) & Issue(x) & Numpus(x)))", "exists x.(Sally(x) & Rompus(x) & Issue(x) & Numpus(x))", "(Rompus(Sally) & Impossible(Sally) & Numpus(Sally))", "all x.(Sally(x) -> (Rompus(x) & Impossible(x) & Numpus(x)))", "all x.(Sally(x) -> (Rompus(x) & Imperator(x) & Numpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Impossible(x) | Numpus(x)))"]}
{"id": "prontoqa_train_1657", "nl": "Everything that is a brimpus, a yumpus, and a lorpus is a dumpus, a tumpus, and a jompus.", "fol": "all x. ((brimpus(x) & yumpus(x) & lorpus(x)) -> (dumpus(x) & tumpus(x) & jompus(x)))", "prediction": ["all x.((Brimpus(x) | Yumpus(x) | Lorpus(x)) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))", "all x y z.((Brimpus(x) & Yumpus(y) & Lorpus(z) & Is(x,y) & Is(x,z)) -> (Dumpus(x) & Is(x,z) & Is(x,z) & Is(x,z) & Is(x,z)) & Is(x,y) & Is(x,z)))", "all x y.((Brimpus(x) & Yumpus(y) & Lorpus(x)) -> (Dumpus(y) & Tumpus(y) & Jompus(y)))", "all x.((Brimpus(x) | Yumpus(x) | Lorpus(x)) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))", "(all x.((Brimpus(x) | Yumpus(x)) & -Lorpus(x)) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))", "all x y z.((Brimpus(x) & Yumpus(y) & Lorpus(z) & Brimpus(x) & Yumpus(y) & Lorpus(z)) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))", "all x.((Brimpus(x) | Yumpus(x) | Lorpus(x)) -> (Dumpus(x) | Tumpus(x) | Jompus(x)))", "all x.((Brumpus(x) & Yumpus(x) & Lorpus(x)) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))", "(all x.((Brimpus(x) | Yumpus(x)) & All y.(Lorpus(y))) -> (Dumpus(x) | Tumpus(x) | Jompus(x))))", "all x.((Brimpus(x) | Yampus(x) | Lorpus(x)) -> (Dumps(x) & Tumpus(x) & Jompus(x)))", "all x.(((Brimpus(x) | Yumpus(x) | Lorpus(x))) -> (Dumpus(x) | Tumpus(x) | Jompus(x)))", "(all x.((Brimpus(x) | Yampus(x) | Lorpus(x))) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))", "all x.((Brimpus(x) | Yumpus(x) | Lorpus(x)) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))", "all x.((Brimpus(x) | Yuppus(x) | Lowerpus(x)) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))", "all x.((Brimpus(x) | Yampus(x) | Lorpus(x)) -> (Dumpus(x) | Tumpus(x) | Jompus(x)))", "all x.(Brimpus(x) & Yompus(x) & Lorpus(x)) -> (Dumps(x) & Tumpus(x) & Jompus(x)))"]}
{"id": "prontoqa_train_1658", "nl": "Everything that is a lorpus or a zumpus or a lempus is a rompus.", "fol": "all x. ((lorpus(x) | zumpus(x) | lempus(x)) -> rompus(x))", "prediction": ["all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))", "all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))", "all x.(((Lorpus(x) | Zumpus(x) | Lempus(x))) -> Rompus(x))", "all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))", "all x y.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(y))", "all x.((Rompus(x) & (Lorpus(x) | Zumpus(x) | Lempus(x))) -> Rompus(x))", "all x.((Menu(x) & (Lorpus(x) | Zumpus(x) | Lempus(x))) -> Rompus(x))", "all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))", "(all x.((Lorpus(x) | Zumpus(x) | Lempus(x))) -> Rompus(x))", "all x y.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(y))", "all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))", "all x.(Rompus(x) -> (Lorpus(x) | Zumpus(x) | Lempus(x)))", "all x.((Lorpus(x) | Tompus(x) | Lempus(x)) -> Rompus(x))", "all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))", "all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))", "all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))"]}
{"id": "prontoqa_train_1659", "nl": "Sam is a shumpus and a numpus and a zumpus.", "fol": "(shumpus(Sam) & numpus(Sam) & zumpus(Sam))", "prediction": ["all x.(Sam(x) -> (Shumpus(x) & Numpus(x) & Zumpus(x)))", "(all x.(Sam(x) -> Humpus(x)) & (Numpus(x) & Zumpus(x)))", "all x y.((Sam(x) & Humpus(y)) -> (Shumpus(x) & Numpus(y) & Zumpus(y)))", "all x y z.((Sam(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & Numpus(y) & Zumpus(z)))", "all x.(Sam(x) -> (Shumpus(x) & Numpus(x) & Zumpus(x)))", "(Sam(Shumpus) & Numpus(numpus) & Zumpus(zumpus))", "(all x.(Sam(x) -> Shumpus(x)) & (Numpus(x) & Zumpus(x)))", "(all x.(Sam(x) -> Humpus(x)) & all y.(Numpus(y) & All z.(Zumpus(z))) -> Tosspus(z)))", "all x.(Sam(x) -> (Shumpus(x) | Numpus(x) | Zumpus(x)))", "all x y.(Sam(x) -> (Shumpus(x) & Numpus(y) & Zumpus(y)))", "all x.(Sam(x) -> (Shumpus(x) & Numpus(x) & Zumpus(x)))", "(all x.(Sam(x) -> Humpus(x)) & (Numpus(x) & Zumpus(x)))", "exists x.(Sam(x) & Humpus(x) & Numpus(x) & Zumpus(x))", "(all x.(Sam(x) -> Shumpus(x)) & all y.(Numpus(y) & All z.(Zumpus(z))) -> Tosspus(z)))", "(all x.(Sam(x) -> Shumpus(x)) & (Numpus(x) & Zumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) | Numpus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1660", "nl": "Tumpuses are numpuses and gorpuses and grimpuses.", "fol": "all x. (tumpus(x) -> (numpus(x) & gorpus(x) & grimpus(x)))", "prediction": ["all x.(Tumpus(x) -> (Numpus(x) | Gorpus(x) | Grimpus(x)))", "all x.(Tumpuse(x) -> (Numpuse(x) | Gorpuse(x) | Grimpuse(x)))", "all x y.((Tumpuse(x) & Numpus(y)) -> (Gorpuse(x) | Grimpuse(x)))", "(all x.(Tumpus(x) -> Numpuse(x)) & all y.(Gorpus(y) & All z.(Smokey(z) & -Numpuse(y))) -> Grimpuse(z)))", "(all x.(Tumpuse(x) -> Numpuse(x)) & all y.(Gorpuse(y) & All z.(Grimpuse(z)) -> Grimpuse(z))))", "all x y.((Tumpus(x) & Numpus(y)) -> (Gorpuse(x) | Grimpuse(x)))", "all x.(Tumpus(x) -> (Numpuse(x) | Gorpuse(x) | Grimpuse(x)))", "all x y z.((Tumpuse(x) & Numpus(y) & Gorpuse(z)) -> (Numpus(x) | Grimpuse(z)))", "(all x.(Tumpus(x) -> Numpuse(x)) & all y.(Gorpuse(y) & All z.(Smokey(z) & -Numpuse(y))) -> Grimpuse(z)))", "all x.(Tumpuse(x) -> (Numpuse(x) | Gorpuse(x) | Grimpuse(x)))", "(all x.(Tumpuse(x) -> Numpuse(x)) & all y.(Gorpuse(y) & All z.(Smokey(z) & -Numpuse(y))) -> Grimpuse(z)))", "(all x y.(Tumpuse(x) -> Numpuse(x)) & (Gorpuse(y) | Grimpuse(y))))", "all x.(Tumpus(x) -> (Numpus(x) & Gorpuse(x) & Grimpuse(x)))", "all x.(Tumpuse(x) -> (Numpus(x) | Gorpuses(x) | Grimpuses(x)))", "(all x.(Tumpus(x) -> Numpus(x)) & (Gorpus(x) | Grimpus(x)))", "all x.(Tumpus(x) -> (Numpus(x) | Gorpuse(x) | Grimpuse(x)))"]}
{"id": "prontoqa_train_1661", "nl": "Polly is a wumpus or a yumpus or a grimpus.", "fol": "(wumpus(Polly) | yumpus(Polly) | grimpus(Polly))", "prediction": ["all x.(Polly(x) -> (Wumpus(x) | Yampus(x) | Grimpus(x)))", "(Wumpus(poly) | Yampus(poly) | Grimpus(poly)))", "all x.(Polly(x) -> (Wumpus(x) | Yampus(x) | Grimpus(x)))", "all x.(Polly(x) -> (Wumpus(x) | Yampus(x) | Grimpus(x)))", "all x y.((Polly(x) & Wumpus(y)) | (Yumpus(x) | Grimpus(x))))", "(Wumpus) | Yampus(y) | Grimpus(y))", "(Wumpus(poly) | Yumpus(poly) | Grimpus(poly)))", "all x.(Polly(x) -> (Wumpus(x) | Yumpus(x) | Grimpus(x)))", "exists x.(Polly(x) & ((Wumpus(x) & -Yumpus(x)) | (-Yumpus(x) & -Yumpus(x)))))", "all x.(Polly(x) -> (Wumpus(x) | Yampus(x) | Grimpus(x)))", "all x y.((Polly(x) & Wumpus(y)) | (Yumpus(y) | Grimpus(y))))", "(all x.(Polly(x) -> Wumpus(x)) | (Yumpus(x) | Grimpus(x))))", "exists x.(Polly(x) & ((Wumpus(x) | Yampus(x)) | Grimpus(x))))", "all x.(Polly(x) -> (Wumpus(x) | Yumpus(x) | Grimpus(x)))", "all x.(Polly(x) -> (Wumpus(x) | Yampus(x) | Grimpus(x)))", "exists x.(Polly(x) & (Wumpus(x) | Yumpus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1662", "nl": "Everything that is a lorpus and a yumpus and a lempus is a brimpus, a dumpus, and a zumpus.", "fol": "all x. ((lorpus(x) & yumpus(x) & lempus(x)) -> (brimpus(x) & dumpus(x) & zumpus(x)))", "prediction": ["all x.((Lorpus(x) & Yumpus(x) & Lempus(x)) -> (Brimpus(x) & Dumpus(x) & Zumpus(x)))", "all x y.((Lorpus(x) & Yumpus(y) & Lempus(y)) -> (Brimpus(x) & Dumpus(x) & Zumpus(x)))", "all x y z.((Lorpus(x) & Yumpus(y) & Lempus(z) & Is(x,y) & Is(x,z)) -> (Brimpus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Lorpus(x) & Yumpus(x) & Lempus(x)) -> (Brimpus(x) & Dumpus(x) & Zumpus(x)))", "all x y.((Lorpus(x) & Yumpus(y) & Lempus(y)) -> (Brimpus(x) & Dumpus(x) & Zumpus(x)))", "(all x.((Lorpus(x) & Yumpus(x)) -> (Limpus(x) & Dumpus(x) & Zumpus(x)))", "all x y z.((Lorpus(x) & Yumpus(y) & Lempus(z) & Is(x,y)) -> (Brimpus(x) | Dumpus(x) | Zumpus(x)))", "(all x.((Lorpus(x) & Yumpus(x) & Lempus(x)) -> (Brimpus(x) & Dumpus(x) & Zumpus(x)))", "(all x.((Lorpus(x) & Yumpus(x) & Lempus(x)) -> (Brimpus(x) | Dumpus(x) | Zumpus(x)))", "all x.((Lorpus(x) | Yumpus(x) | Lempus(x)) -> (Brimpus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Lorpus(x) & Yumpus(x) & Lempus(x)) -> (Brimpus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Lorpus(x) & Yuphus(x) & Lempus(x)) -> (Brimpus(x) | Dumpus(x) | Zumpus(x)))", "all x.(LorpusAndYumpusAndLempus(x) -> (Brimpus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Lorpus(x) & Yampus(x) & Lempus(x)) -> (Brimpus(x) | Dumpus(x) | Zumpus(x)))", "all x.((Lorpus(x) & Yumpus(x) & Lempus(x)) -> (Brimpus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Lorpus(x) & Yampus(x) & Lempus(x)) -> (Brimpus(x) | Dumpus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1663", "nl": "Gorpuses are yumpuses, lempuses, and wumpuses.", "fol": "all x. (gorpus(x) -> (yumpus(x) & lempus(x) & wumpus(x)))", "prediction": ["all x.(Gorpuse(x) -> (Yumpus(x) | Lempuse(x) | Wumpus(x)))", "all x.(Gorpus(x) -> (Yumpus(x) | Lempuse(x) | Wumpus(x)))", "(all x.(Gorpuse(x) -> (Yumpus(x) | Lempuse(x) | Wumpus(x))))", "(all x.(Gorpuse(x) -> (Yumpuse(x) | Lempuse(x) | Wumpuse(x))))", "all x y z.((Gorpuse(x) & Yumpus(y) & Lempuse(z)) -> (Yumpus(x) | Wumpus(z)))", "(Yumpuses(Gorpus) | Lempuses(Gorpus) | Wumpuses(Gorpus))", "all x.(Gorpuse(x) -> (Yumpus(x) | Lempuse(x) | Wumpus(x)))", "all x.(Gorpus(x) -> (Yumpus(x) | Lempuse(x) | Wumpus(x)))", "(all x.(Gorpuse(x) -> Yumpus(x)) & all y.(Lempuse(y) & -Wumpus(y))))", "all x y z.((Gorpuse(x) & Yumpus(y) & Lempuse(z)) -> (Yumpus(x) | Wumpus(x)))", "(all x.(Gorpuse(x) -> (Yumpus(x) | Lempuse(x) | Wumpus(x)))", "all x.(Gorpuse(x) -> (Yumpus(x) | Lempuse(x) | Wumpus(x)))", "all x.(Gorpus(x) -> (Yumpus(x) | Lempuse(x) | Wumpus(x)))", "all x.(Gorpuse(x) -> (Yumpus(x) | Lempuse(x) | Wumpus(x)))", "all x.(Gorpuse(x) -> (Yumpuse(x) | Lempuse(x) | Wumpuse(x)))", "all x.(Gorpuse(x) -> (Yumpuse(x) | Lempuse(x) | Wumpuse(x)))"]}
{"id": "prontoqa_train_1664", "nl": "Sam is a rompus and Sam is not a lempus and Sam is a vumpus.", "fol": "(rompus(Sam) & -lempus(Sam) & vumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> -Lempus(x)) & (Sam(x) -> Vumpus(x)))", "all x y z.((Sam(x) & Rompus(x) & Sam(y) & Lempus(z)) -> (Rompus(x) & -Lempus(y) & Vumpus(y)))", "all x y.((Sam(x) & Rompus(x) & Sam(y)) -> (-Lempus(y) & Vumpus(y)))", "(all x.(Rompus(x) -> Sam(x)) & (-Lempus(x) -> Sam(x))) & (Vumpus(x) -> Sam(x)))", "(all x y.(Rompus(x) -> Sam(x)) & (-Lempus(y) -> Sam(y))) & (Vumpus(y) -> Sam(y)))", "all x.(Sam(x) -> (Rompus(x) & -Lempus(x) & Vumpus(x)))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> -Lempus(x)) & (Sam(x) -> Vumpus(x)))", "all x y z.((Sam(x) & Rompus(x) & Sam(y) & Lempus(z)) -> (Rompus(x) & -Lempus(y) & Vumpus(z)))", "all x y.((Sam(x) & Rompus(x)) -> (-Lempus(x) & Vumpus(y)))", "(all x y z.(Rompus(x) -> Sam(x)) & (Lempus(y) -> Sam(z))) & (Vumpus(z) -> Sam(z)))", "all x y z.((Sam(x) & Rompus(y) & Lempus(z)) -> (Rompus(x) & -Lempus(y) & Vumpus(z)))", "(all x.(Sam(x) -> Rompus(x)) & (-Lempus(x) & (Vumpus(x) -> Lempus(x))))", "(all x y.(Rompus(x) -> Sam(x)) & (-Lempus(y) -> Sam(x)) & (Vumpus(y) -> Sam(y)))", "exists x.(Sam(x) & Rompus(x) & -Lempus(x) & Vumpus(x))", "all x.(Sam(x) -> (Rompus(x) & -Lempus(x) & Vumpus(x)))", "(all x.(Rompus(x) -> Sam(x)) & (-Lempus(x) -> Sam(x)) & (Vumpus(x) -> Sam(x)))"]}
{"id": "prontoqa_train_1665", "nl": "Every rompus is a wumpus.", "fol": "all x. (rompus(x) -> wumpus(x))", "prediction": ["all x.(Rompus(x) -> Wumpus(x))", "all x.(Rompus(x) -> Wumpus(x))", "all x y.((Rompus(x) & Wumpus(y)) -> Has(x,y))", "(all x.(Rompus(x) -> Wumpus(x))", "all x.(Rompus(x) -> Wumpus(x))", "all x y.((Rompus(x) & Wumpus(y)) -> Is(x,y))", "exists x.(rompus(x) & Wumpus(x))", "all x.(Rompus(x) -> Wumpus(x))", "all x.(Romesue(x) -> Wumpus(x))", "exists x.(rompus(x) & Wumpus(x))", "all x.(Rompus(x) -> Wumpus(x))", "all x.(Rompus(x) -> Wumpus(x))", "exists x.(rompus(x) & Wumpus(x))", "all x.(Rompus(x) -> Wampus(x))", "all x.(Rompus(x) -> Wumpus(x))", "all x.(Rompus(x) -> Wompus(x))"]}
{"id": "prontoqa_train_1666", "nl": "Sam is a lorpus and a numpus and a rompus.", "fol": "(lorpus(Sam) & numpus(Sam) & rompus(Sam))", "prediction": ["all x.(Sam(x) -> (Lorpus(x) & Numpus(x) & Rompus(x)))", "all x y z.((Sam(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & Numpus(z) & Rompus(z)))", "(Lorpus(Sam) & Numpus(Sam) & Rompus(Sam))", "all x y.((Sam(x) & Lorpus(y)) -> (Lorpus(x) & Numpus(x) & Rompus(x)))", "all x.(Sam(x) -> (Lorpus(x) & Numpus(x) & Rompus(x)))", "(all x.(Sam(x) -> Lorpus(x)) & (Numpus(x) | Rompus(x))))", "(Lorpus(Sam) & Numpus(Sam) & Rompus(Sam))", "(Lorpus(sam) | Numpus(sam) | Rompus(sam)))", "all x y z.((Sam(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & Numpus(z) & Rompus(z)))", "(all x.(Sam(x) -> Lorpus(x)) & (Numpus(x) & Rompus(x)))", "all x.(Sam(x) -> (Lorpus(x) & Numpus(x) & Rompus(x)))", "(all x.(Sam(x) -> Llorpus(x)) & (Numpus(x) | Rompus(x))))", "(Lorpus,numpus,rompus)", "exists x.(Sam(x) & Lorpus(x) & Numpus(x) & Rompus(x))", "all x.(Sam(x) -> (Lorpus(x) | Numpus(x) | Rompus(x)))", "all x.(Sam(x) -> (Lorpus(x) & Numpus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_1667", "nl": "Sam is a shumpus, a vumpus, or a wumpus.", "fol": "(shumpus(Sam) | vumpus(Sam) | wumpus(Sam))", "prediction": ["all x.(Sam(x) -> (Shumpus(x) | Vumpus(x) | Wumpus(x)))", "(all x.(Sam(x) -> (Shumpus(x) | Vumpus(x) | Wumpus(x))))", "(Sam(sam) | Vumpus(sam) | Wumpus(sam)))", "all x.(Sam(x) -> (Shumpus(x) | Vumpus(x) | Wumpus(x)))", "(Sam(Shumpus) | Vumpus(Sam) | Wumpus(Sam))", "(all x.(Sam(x) -> Humpus(x)) & (Vumpus(x) | Wumpus(x))))", "all x y.(Sam(x) -> (Shumpus(x) | Vumpus(x) | Wumpus(y)))", "all x.(Sam(x) -> (Shumpus(x) | Vumpus(x) | Wumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) | Vumpus(x) | Wumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) | Vampus(x) | Wumpus(x)))", "(all x.(Sam(x) -> Shumpus(x)) | (Vumpus(x) & Wumpus(x))))", "all x.(Sam(x) -> (Shumpus(x) | Vumpus(x) | Wumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) | Voompus(x) | Wumpus(x)))", "exists x.(Shumpus(x) | Vumpus(x) | Wumpus(x))", "all x.(Sam(x) -> (Shumpus(x) | Vumpus(x) | Wumpus(x)))", "exists x.(Shumpus(x) | Vumpus(x) | Wumpus(x))"]}
{"id": "prontoqa_train_1668", "nl": "Everything that is a dumpus, a vumpus, or a wumpus is a yumpus, a tumpus, and a gorpus.", "fol": "all x. ((dumpus(x) | vumpus(x) | wumpus(x)) -> (yumpus(x) & tumpus(x) & gorpus(x)))", "prediction": ["all x.((Dumpus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) | Tumpus(x) | Gorpus(x)))", "all x.((Dumpus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) | Tumpus(x) | Gorpus(x)))", "all x.((Dumps(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) | Tumpus(x) | Gorpus(x)))", "(all x.((Dumpus(x) | Vumpus(x) | Wumpus(x))) -> (Yumpus(x) | Tumpus(x) | Gorpus(x)))", "all x y.((Dumpus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(y) & Tumpus(y) & Gorpus(y)))", "all x.((Dumpus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Dumpus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) & Tumpus(x) & Gorpus(x)))", "all x.(DumpusVumpusWumpus(x) -> (YumpusTumpusGorpus(x) & Gorpus(x)))", "(all x.((Dumpus(x) | Vumpus(x) | Wumpus(x))) -> (Yumpus(x) | Tumpus(x) | Gorpus(x)))", "all x.((Dumps(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) | Tumpus(x) | Gorpus(x)))", "all x y.((Dumpsus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(y) & Tumpus(y) & Gorpus(y)))", "(all x.((Dumpsus(x) | Vumpus(x) | Wumpus(x))) -> (Yumpus(x) | Tumpus(x) | Gorpus(x)))", "all x.((Dumpus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) | Tumpus(x) | Gorpus(x)))", "all x.((Dumpus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Dumpus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) | Tumpus(x) | Gorpus(x)))", "all x.((Dumpus(x) | Vampus(x) | Wumpus(x)) -> (Yumpus(x) & Tumpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1669", "nl": "Polly is a dumpus.", "fol": "dumpus(Polly)", "prediction": ["all x.(Polly(x) -> Dumpus(x))", "(Dumpus(Polly))", "Polly is a Dumpus.", "(Dumps(Polly) & Dumpus(Polly))", "Polly is a dumpus.", "all x.(Polly(x) -> Dumpus(x))", "all x.(Polly(x) -> Dumpus(x))", "(Dumus(Polly))", "Polly is a Dumpus.", "all x.(Polly(x) -> Dumpus(x))", "Polly is a dumpus.", "(Dumpus(Polly))", "all x.(Polly(x) -> Dumpus(x))", "Polly is a Dumpus.", "All x.(Polly(x) -> Dumpus(x))", "(Dumpus(Poly))"]}
{"id": "prontoqa_train_1670", "nl": "Each vumpus is a zumpus.", "fol": "all x. (vumpus(x) -> zumpus(x))", "prediction": ["all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "(all x.(Vumpus(x) -> Zumpus(x))", "all x y.((Vumpus(x) & Zumpus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x y.((Vumpus(x) & Zumpus(y)) -> Becomes(x,y))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "exists x.(Vumpus(x) & Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "exists x.(Vumpus(x) & Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "exists x.(Vumpus(x) & Tompus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "exists x.(Vumpus(x) & Zumpus(x))"]}
{"id": "prontoqa_train_1671", "nl": "Wren is an impus and Wren is a wumpus and Wren is not a zumpus.", "fol": "(impus(Wren) & wumpus(Wren) & -zumpus(Wren))", "prediction": ["(all x.(Wren(x) -> IsImpossible(x)) & all y.(Wren(y) -> Wumpus(y)) & all z.(Wren(z) -> -Tompus(z))))", "all x y z.((Wren(x) & Wren(y) & Zumpus(z)) -> (Impossible(x) & Wren(y) & -Impossible(y)))", "all x y.((Wren(x) & Wren(y)) -> (Impossible(x) & Wumpus(y) & -Zumpus(y)))", "(all x.(Wren(x) -> Impossible(x)) & all y.(Wren(y) -> Wumpus(y)) & all z.(Wren(z) -> -Zumpus(z))))", "(all x y.(Wren(x) -> IsImpossible(x)) & (Wren(y) -> Wumpus(y)) & (Wren(y) -> -Tompus(y)))", "all x y z.((Wren(x) & Wren(y) & Impossible(x) & Wumpus(y)) -> (Impossible(x) & Wren(z) & -Zumpus(z)))", "(all x.(Wren(x) -> Is(x)) & (Wren(x) -> Wumpus(x)) & (Wren(x) -> -Zumpus(x)))", "all x.(Wren(x) -> (Impossible(x) & Wren(x) & Wren(x) & -Zumpus(x)))", "(all x y z.(Wren(x) -> IsImpossible(x)) & (Wren(y) -> Wumpus(y)) & (Wren(z) -> -Tompus(z)))", "all x y.((Wren(x) & Wren(y)) -> (Impossible(x) & Wumpus(y) & -Zumpus(y)))", "(all x y.(Wren(x) -> Impossible(x)) & (Wren(y) -> Wumpus(y)) & (Wren(y) -> -Zumpus(y)))", "exists x.(Wren(x) & IsImpossible(x) & Wren(x) & Wren(x) & -Impossible(x))", "all x y z.((Wren(x) & Wren(y) & Zumpus(z)) -> (Impossible(x) & Wren(y) & Wren(z)))", "(all x.(Wren(x) -> Impeccable(x)) & (Wren(x) -> Wumpus(x)) & (Wren(x) -> -Zumpus(x)))", "(all x.(Wren(x) -> Impossible(x)) & all y.(Wren(y) -> Wumpus(y)) & all z.(Wren(z) -> -Zumpus(z))))", "all x y.((Wren(x) & Wren(y)) -> (Impossible(x) & Wumpus(y) & -Zumpus(y)))"]}
{"id": "prontoqa_train_1672", "nl": "Wren is a brimpus or Wren is a rompus or Wren is not a vumpus.", "fol": "(brimpus(Wren) | rompus(Wren) | -vumpus(Wren))", "prediction": ["all x.((Wren(x) & (Brimpus(x) | Rompus(x) | -Vumpus(x))) -> Brimpus(x))", "((Wren(w) & Brimpus(w)) | (Wren(w) & Rompus(w)) | (Wren(w) & -Vumpus(w))))", "all x y.((Wren(x) & Brimpus(x)) | (Wren(y) & Rompus(y)) | (-Vumpus(y))))", "(all x.(Wren(x) -> Brimpus(x)) | (Wren(x) -> Rompus(x)) | (Wren(x) -> -Vumpus(x))))", "all x.((Wren(x) & (Brimpus(x) | Rompus(x) | -Vumpus(x))) -> (Brimpus(x) | Rompus(x)))", "(exists x.(Wren(x) & (Brimpus(x) | Rompus(x)) | -Vumpus(x)))", "(exists x.(Wren(x) & Brimpus(x)) | exists y.(Wren(y) & Rompus(y))) | exists z.(Wren(z) & -Vumpus(z))))", "all x.(Wren(x) -> ((Brimpus(x) | Rompus(x)) | -Vumpus(x)))", "((Wren(w) & Brimpus(w)) | (Wren(w) & Rompus(w)) | (-Wren(w) & Vumpus(w))))", "(all x.(Wren(x) -> Brimpus(x)) | (Wren(x) -> Rompus(x)) | (Wren(x) -> -Vumpus(x))))", "(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Vumpus(x))))", "all x y.((Wren(x) & Brimpus(x)) | (Wren(y) & Rompus(y)) | (-Vumpus(y))))", "all x.(Wren(x) -> ((Brumpus(x) | Rompus(x)) | -Vumpus(x)))", "all x.(Wren(x) -> (Brimpus(x) | Rompus(x) | -Vumpus(x)))", "exists x.(Wren(x) & ((Brumpus(x) & -Vumpus(x)) | (-Brompus(x) & -Vumpus(x))))", "all x.(Wren(x) -> ((Brimpus(x) | Rompus(x) | -Vumpus(x))))"]}
{"id": "prontoqa_train_1673", "nl": "Each shumpus is a lempus, a brimpus, and a yumpus.", "fol": "all x. (shumpus(x) -> (lempus(x) & brimpus(x) & yumpus(x)))", "prediction": ["all x.(Shumpus(x) -> (Lempus(x) | Brimpus(x) | Yumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) & Brimpus(x) & Yumpus(x)))", "(all x.(Shumpus(x) -> Lempus(x)) & all y.(Brimpus(y) -> Yumpus(y)))", "all x y z.((Shumpus(x) & Lempus(y) & Brimpus(z)) -> (Lempus(x) | Brimpus(z) | Yumpus(z)))", "all x.(Shumpus(x) -> (Lempus(x) | Brimpus(x) | Yumpus(x)))", "(all x.(Shumpus(x) -> Lempus(x)) & all y.(Brimpus(y) -> Yumpus(y)))", "all x.(Shumpus(x) -> (Lempus(x) & Brimpus(x) & Yumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) | Brimpus(x) | Yumpus(x)))", "(all x.(Shumpus(x) -> Lempus(x)) & all y.(Brimpus(y) -> Yumpus(y)))", "(all x.(Shumpus(x) -> Lempus(x)) & (Brimpus(x) & Yumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) | Brimpus(x) | Yumpus(x)))", "(all x.(Shumpus(x) -> Lempus(x)) & all y.(Brimpus(y) & All z.(Yumpus(z)) -> Yumpus(z))))", "exists x.(Shumpus(x) & Lempus(x) & Brimpus(x) & Yumpus(x))", "all x.(Shumpus(x) -> (Lempus(x) | Brimpus(x) | Yumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) & Brimpus(x) & Yumpus(x)))", "exists x.(Shumpus(x) & Lempus(x) & Brimpus(x) & Yumpus(x))"]}
{"id": "prontoqa_train_1674", "nl": "Sally is a yumpus, a lempus, or an impus.", "fol": "(yumpus(Sally) | lempus(Sally) | impus(Sally))", "prediction": ["all x.(Sally(x) -> (Yumpus(x) | Lempus(x) | Imperator(x)))", "(Yumpus, Lempus,Issue) | Issue(Issue))", "(Yumpus(Sally) | Lempus(Sally) | Imperator(Sally))", "all x.(Sally(x) -> (Yumpus(x) | Lempus(x) | Imperator(x)))", "(yumpus) | lempus(y) | impus(y))", "all x.(Sally(x) -> (Yumpus(x) | Lempus(x) | Imperator(x)))", "(Yumpus, Lempus,Issue) | Issue(Sally))", "all x y.(Sally(x) -> (Yumpus(x) | Lempus(x) | Imperator(x)))", "all x.(Sally(x) -> (Yumpus(x) | Lempus(x) | Impossible(x)))", "all x.(Sally(x) -> (Yumpus(x) | Lempus(x) | Issue(x)))", "all x.(Sally(x) -> (Yumpus(x) | Lempus(x) | Impeccable(x)))", "exists x.(Sally(x) & (Yumpus(x) | Lempus(x) | Impossible(x)))", "all x.(Sally(x) -> (Yumpus(x) | Lempus(x) | Issue(x)))", "exists x.(Sally(x) & (Yumpus(x) | Lempus(x) | Imperative(x)))", "all x.(Sally(x) -> (yumpus(x) | lempus(x) | impus(x)))", "exists x.(Sally(x) & (Yumpus(x) | Lempus(x) | Impossible(x)))"]}
{"id": "prontoqa_train_1675", "nl": "Impuses are lempuses.", "fol": "all x. (impus(x) -> lempus(x))", "prediction": ["all x.(Impus(x) -> Lempuse(x))", "all x.(Impuse(x) -> Lempuse(x))", "all x y.((Impus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Impus(x) -> Lempuse(x))", "all x y.((Impuse(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Impuse(x) -> Lempuse(x))", "all x.(Impuss(x) -> Lempuse(x))", "(all x.(Impus(x) -> Lempuse(x)))", "all x.(Impus(x) -> Lempuse(x))", "all x y.((Impus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Impuse(x) -> Lempuse(x))", "(all x.(Impuse(x) -> Lempuse(x)))", "all x.(Impuse(x) -> Lempuse(x))", "all x.(Impect(x) -> Lempuse(x))", "all x.(Impus(x) -> Lempuse(x))", "all x.(Impuse(x) -> Lempuse(x))"]}
{"id": "prontoqa_train_1676", "nl": "Wren is a grimpus and Wren is not a lempus and Wren is a zumpus.", "fol": "(grimpus(Wren) & -lempus(Wren) & zumpus(Wren))", "prediction": ["all x y z.((Wren(x) & Grimpus(x) & Wren(y) & Zumpus(z)) -> (-Lempus(y) & Zumpus(z)))", "(all x.(Wren(x) -> Grimpus(x)) & (-Lempus(x) & -Zumpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & (Wren(x) -> -Lempus(x)) & (Wren(x) -> Zumpus(x)))", "(all x y z.((Wren(x) & Grimpus(x)) -> (Grimpus(x) & -Lempus(y)) & ((Wren(z) & Zumpus(z)) -> (Tompus(z))))", "(all x y.(Wren(x) -> Grimpus(x)) & (Wren(y) -> -Lempus(y)) & (Wren(y) -> Zumpus(y)))", "all x y.((Wren(x) & Grimpus(x) & Wren(y)) -> (-Lempus(y) & Zumpus(y)))", "all x y z.((Wren(x) & Grimpus(x) & Wren(y) & Zumpus(z)) -> (-Lempus(y) & Zumpus(z)))", "(all x.(Wren(x) -> Grimpus(x)) & all y.(Wren(y) -> -Lempus(y)) & all z.(Wren(z) -> Zumpus(z))))", "all x.(Wren(x) -> (Grimpus(x) | Wren(x) & -Lempus(x) | Wren(x) & Zumpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & (-Lempus(x)) & (-Wren(x) -> Zumpus(x)))", "all x y z.((Wren(x) & Grapple(x) & Wren(y) & Zumpus(z)) -> (-Lempus(y) & -Lempus(y) & Zumpus(z)))", "all x y.((Wren(x) & Grimpus(x) & Wren(y)) -> (-Lempus(y) & Zumpus(y)))", "all x y z.((Wren(x) & Grimpus(x) & Wren(y) & Zumpus(z)) -> (-Lempus(y) & -Lempus(y) & Zumpus(z)))", "all x.(Wren(x) -> (Grimpus(x) & -Lempus(x) & Zumpus(x)))", "(all x.(Wren(x) -> Grypus(x)) & (-Lempus(x) & -Zumpus(x)))", "(all x y.(Wren(x) -> Grimpus(x)) & (Wren(y) -> -Lempus(y)) & (Wren(y) -> Zumpus(y)))"]}
{"id": "prontoqa_train_1677", "nl": "Wren is a brimpus, Wren is not an impus, or Wren is a shumpus.", "fol": "(brimpus(Wren) | -impus(Wren) | shumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Brimpus(x)) | (-Impossible(x) | Humpus(x))))", "all x y.((Wren(x) & Brimpus(x)) | (-Impossible(x) | Humpus(y))))", "all x y z.((Wren(x) & Brimpus(x) & Wren(y) & -Impossible(y)) -> (Brimpus(x) | Humpus(z)))", "all x.((Wren(x) & Brimpus(x)) | (-Impossible(x) | Humpus(x))))", "all x.(Wren(x) -> (Brimpus(x) | -Impossible(x) | Humpus(x)))", "(all x.(Wren(x) -> Brimpus(x)) & (-Impossible(x) | Humpus(x))))", "(all x y.(Wren(x) -> Brimpus(x)) & ((Wren(y) & -Impossible(y)) | (-Impossible(y) & Shumpus(y))))", "all x y.((Wren(x) & Brimpus(x)) | (-Impossible(y) | Humpus(y))))", "(all x.(Wren(x) -> Brimpus(x)) & (-Impossible(x) | Humpus(x))))", "exists x.(Wren(x) & ((Brimpus(x) | Imperator(x)) | Humpus(x)))", "all x.(Wren(x) -> (Brimpus(x) | -Impossible(x) | Humpus(x)))", "exists x.(Wren(x) & ((Brimpus(x) | -Impossible(x)) | Humpus(x)))", "(all x.(Wren(x) -> Brimpus(x)) | (-Impossible(x) | Humpus(x))))", "all x y.((Wren(x) & Brimpus(x)) | (-Impossible(x) | Humpus(y))))", "(all x.(Wren(x) -> Brimpus(x)) | (-Issue(x) | Shumpus(x))))", "(all x.(Wren(x) -> Brimpus(x)) & (-Impossible(x) | Humpus(x))))"]}
{"id": "prontoqa_train_1678", "nl": "Everything that is a vumpus, a dumpus, and a yumpus is a shumpus, a gorpus, and a tumpus.", "fol": "all x. ((vumpus(x) & dumpus(x) & yumpus(x)) -> (shumpus(x) & gorpus(x) & tumpus(x)))", "prediction": ["all x.((Vumpus(x) | Dumpus(x) | Yumpus(x)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))", "all x y.((Vumpus(x) & Dumpus(x) & Yumpus(y)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))", "all x.((Vumpus(x) | Dumpus(x) | Yumpus(x)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))", "all x.((Vumpus(x) | Dumpus(x) | Yumpus(x)) -> (Shumpus(x) | Gorpus(x) | Tumpus(x)))", "all x.((Vumpus(x) & Dumpus(x) & Yumpus(x)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))", "all x y.((Vumpus(x) & Dumpus(x) & Yumpus(y)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))", "(all x.((Vumpus(x) | Dumpus(x) | Yumpus(x))) -> (Shumpus(x) | Gorpus(x) | Tumpus(x)))", "all x.((Vumpus(x) | Dumpus(x) | Yumpus(x)) -> (Shumpus(x) | Gorpus(x) | Tumpus(x)))", "all x y.((Vumpus(x) & Dumpus(x) & Yumpus(y)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))", "all x.((Vumpus(x) | Dumpus(x) | Yumpus(x)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))", "all x.((Vumpus(x) & Dumpus(x) & Yumpus(x)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))", "all x.(VumpusDumpusYumpus(x) -> (ShumpusGorpusTumpus(x) & TumpusTumpus(x)))", "(all x.((Vumpus(x) | Dumpus(x) | Yumpus(x))) -> (Shumpus(x) | Gorpus(x) | Tumpus(x)))", "(all x.((Vumpus(x) & Dumpus(x) & Yumpus(x)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))", "all x.((Vumpus(x) | Dumpus(x) | Yumpus(x)) -> (Shumpus(x) | Gorpus(x) | Tumpus(x)))", "all x.((Vimpus(x) | Dumpus(x) | Yumpus(x)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))"]}
{"id": "prontoqa_train_1679", "nl": "Everything that is a grimpus, a brimpus, or a yumpus is a numpus.", "fol": "all x. ((grimpus(x) | brimpus(x) | yumpus(x)) -> numpus(x))", "prediction": ["all x.((Smokey(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x.((Smoothpus(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x.((Cramp(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "(all x.((Smompus(x) | Brimpus(x) | Yumpus(x))) -> Numpus(x))", "all x y.((Smokey(x) | Brimpus(x) | Yumpus(x)) -> Numpus(y))", "all x.((Smoky(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x.((Grumpus(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x.((Fragpus(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x.((Element(x) & (Grimpus(x) | Brimpus(x) | Yumpus(x))) -> Numpus(x))", "all x.((Grampus(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x y.((Smoothpus(x) | Brimpus(x) | Yumpus(x)) -> Numpus(y))", "all x.((Smoothpus(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x.((Gruppus(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x.(((Grimpus(x) | Brimpus(x) | Yumpus(x))) -> Numpus(x))", "all x.((Crumpus(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x.((Smokey(x) | Brimpus(x) | Yumpsum(x)) -> Numpus(x))"]}
{"id": "prontoqa_train_1680", "nl": "Sam is not a dumpus and Sam is a jompus and Sam is a gorpus.", "fol": "(-dumpus(Sam) & jompus(Sam) & gorpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Dumpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Gorpus(x)))", "all x y z.((Sam(x) & Dumpus(y) & Jompus(z)) -> (-Dumpus(x) & Jompus(x) & Gorpus(x)))", "(all x.(Sam(x) -> -Dumpus(x)) & all y.(Sam(y) -> Jompus(y)) & all z.(Sam(z) -> Gorpus(z))))", "all x.(Sam(x) -> (-Dumpus(x) & Jompus(x) & Gorpus(x)))", "(all x y.(Dumus(x) -> -Dumpus(x)) & (Jompus(y) -> Gorpus(y)))", "(-Dumpus(sam) & Jompus(sam) & Gorpus(sam))", "(all x y z.((Sam(x) & Dumpus(y)) -> -Dumpus(x)) & ((Sam(z) & Jompus(z)) -> Gorpus(z)))", "all x y z.((Sam(x) & Dumpus(y) & Jompus(z)) -> (-Dumpus(x) & Jompus(y) & Gorpus(z)))", "(all x.(Sam(x) -> -Dumpus(x)) & (Jompus(x) | Gorpus(x))))", "(all x.(Sam(x) -> -Dumpus(x)) & all y.(Jompus(y) & All z.(Gorpus(z))) -> -Dumpus(x)))", "all x y.((Sam(x) & Dumpus(y)) -> (-Dumpus(x) & Jompus(y) & Gorpus(y)))", "all x.(Sam(x) -> (-Dumpus(x) & Jompus(x) & Gorpus(x)))", "all x y z.((Sam(x) & Dumpus(y) & Jompus(z) & Gorpus(x)) -> (-Dumpus(x) & Jompus(y) & Gorpus(z)))", "all x y z.((Sam(x) & Dumpus(y) & Jompus(z)) -> (-Dumpus(x) & Jompus(x) & Gorpus(x)))", "(all x.(Sam(x) -> -Dumpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Gorpus(x)))", "exists x.(Sam(x) & -Dumpus(x) & Jompus(x) & Gorpus(x))"]}
{"id": "prontoqa_train_1681", "nl": "Sam is not a lempus and Sam is a vumpus and Sam is a jompus.", "fol": "(-lempus(Sam) & vumpus(Sam) & jompus(Sam))", "prediction": ["(all x.(Sam(x) -> -Lempus(x)) & (Sam(x) -> Vumpus(x)) & (Sam(x) -> Jompus(x)))", "all x y z.((Sam(x) & Lempus(y) & Vumpus(z)) -> (-Lempus(x) & Vumpus(x) & Jompus(x)))", "(all x y z.((Sam(x) & Lempus(y)) -> -Lempus(x)) & ((Sam(z) & Vumpus(z)) -> Jompus(z)))", "all x.(Sam(x) -> (-Lempus(x) & Vumpus(x) & Jompus(x)))", "all x y z.((Sam(x) & Lempus(y) & Vumpus(z)) -> (-Lempus(x) & -Vumpus(x) & -Jompus(x)))", "all x y.((Sam(x) & Sam(y)) -> (-Lempus(x) & -Vumpus(y) & -Jompus(y)))", "(all x.(Sam(x) -> -Lempus(x)) & all y.(Sam(y) -> Vumpus(y)) & all z.(Sam(z) -> Jompus(z))))", "(all x.(Sam(x) -> -Lempus(x)) & (Sam(x) -> Vumpus(x)) & (Sam(x) -> Jompus(x)))", "(all x y.(Lempus(x) -> -Lempus(x)) & (Vumpus(y) -> -Lempus(y)) & (Jompus(y) -> -Lempus(y)))", "all x y z.((Sam(x) & Lempus(y) & Vampus(z)) -> (-Lempus(x) & -Vampus(x) & -Jompus(x)))", "(-Lempus(sam) & Vumpus(sam) & Jompus(sam))", "exists x.(Sam(x) & -Lempus(x) & Sam(x) & Vumpus(x) & Sam(x))", "all x y.((Sam(x) & Sam(y)) -> (-Lempus(x) & -Vimpus(y) & -Jompus(y)))", "all x y z.((Sam(x) & Lempus(y) & Vumpus(z)) -> (-Lempus(x) & Vumpus(x) & Jompus(x)))", "(all x.(Sam(x) -> -Lempus(x)) & (Sam(x) -> Vumpus(x)) & (Sam(x) -> Jompus(x)))", "(all x.(Sam(x) -> -Lempus(x)) & all y.(Sam(y) -> Vumpus(y)) & all z.(Sam(z) -> Jompus(z))))"]}
{"id": "prontoqa_train_1682", "nl": "Sam is not a grimpus and Sam is a numpus and Sam is not a zumpus.", "fol": "(-grimpus(Sam) & numpus(Sam) & -zumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Grimpus(x)) & (Sam(x) -> Numpus(x)) & (Sam(x) -> -Zumpus(x)))", "all x y z.((Sam(x) & Grimpus(y) & Numpus(z)) -> (-Grimpus(x) & -Zumpus(x)))", "(all x.(Sam(x) -> -Grimpus(x)) & all y.(Sam(y) -> Numpus(y)) & all z.(Sam(z) -> -Zumpus(z))))", "(all x y z.((Sam(x) & Grimpus(y)) -> -Grimpus(x)) & ((Sam(z) & Numpus(z))) -> -Zumpus(z)))", "all x.(Sam(x) -> (-Grimpus(x) & Numpus(x) & -Zumpus(x)))", "all x y z.((Sam(x) & Grimpus(y) & Numpus(z)) -> (-Sam(x) & -Sam(x) & Zumpus(x)))", "all x y.((Sam(x) & Grimpus(x) & Numpus(y)) -> (-Sam(x) & -Zumpus(y)))", "all x.(Sam(x) -> (-Grimpus(x) & Sam(x) & Numpus(x) & -Zumpus(x)))", "(all x.(Sam(x) -> -Grimpus(x)) & (Sam(x) -> Numpus(x)) & (Sam(x) -> -Zumpus(x)))", "(all x y.(Sam(x) -> -Grimpus(x)) & (Sam(y) -> Numpus(y)) & (Sam(y) -> -Zumpus(y)))", "(all x.(Sam(x) -> -Grimpus(x)) & all y.(Sam(y) -> Numpus(y))) & all z.(Sam(z) -> -Zumpus(z)))", "all x y z.((Sam(x) & Grimpus(y) & Numpus(z)) -> (-Grimpus(x) & Numpus(y) & -Zumpus(z)))", "(-Grimpus(sam) & -Numpus(sam) & -Zumpus(sam))", "exists x.(Sam(x) & -Grimpus(x) & Numpus(x) & -Zumpus(x))", "(all x.(Sam(x) -> -Grimpus(x)) & (Sam(x) -> Numpus(x)) & (Sam(x) -> -Zumpus(x)))", "all x y z.((Sam(x) & Grimpus(y) & Numpus(z)) -> (-Sam(x) & -Sam(x)))"]}
{"id": "prontoqa_train_1683", "nl": "Zumpuses are grimpuses, vumpuses, and sterpuses.", "fol": "all x. (zumpus(x) -> (grimpus(x) & vumpus(x) & sterpus(x)))", "prediction": ["all x.(Zumpus(x) -> (Grimpus(x) | Vampuse(x) | Sterpuse(x)))", "all x.(Zumpus(x) -> (Smokey(x) | Vampuse(x) | Sterpuse(x)))", "all x y z.((Zumpuse(x) & Grimpuse(y) & Vampuse(z)) -> (Sterpuse(x) | Sterpuse(x)))", "all x.(Zumpuse(x) -> (Grimpuse(x) | Vampuse(x) | Sterpuse(x)))", "(all x.(Zumpuse(x) -> (Grimpuse(x) | Vampuse(x) | Sterpuse(x)))", "(all x.(Zumpuse(x) -> Grimpuse(x)) & all y.(Vampuse(y) & -Sterpuse(y))))", "all x y.((Zumpuse(x) & Grimpuse(y)) -> (Vumpuse(y) | Sterpuse(y)))", "all x.(Zumpus(x) -> (Grimpus(x) | Vampuse(x) | Sterpuse(x)))", "all x.(Zumpus(x) -> (Smoochpuse(x) | Vampuse(x) | Sterpuse(x)))", "(all x.(Zumpuse(x) -> (Grimpuse(x) | Vampuse(x) | Sterpuse(x)))", "all x.(Zumpuse(x) -> (Smokey(x) | Vampuse(x) | Sterpuse(x)))", "all x.(Zombie(x) -> (Smoochpuse(x) | Vampuse(x) | Sterpuse(x)))", "(all x.(Zumpuse(x) -> Grimpuse(x)) & all y.(Vumpuse(y) -> Sterpuse(y)))", "(all x.(Zombia(x) -> (Smooches(x) | Vampuses(x) | Sterpuses(x)))", "all x.(Zumpus(x) -> (Grimpuse(x) | Vampuse(x) | Sterpuse(x)))", "(all x.(Zumpuse(x) -> (Smokey(x) | Vampus(x) | Sterpuse(x)))"]}
{"id": "prontoqa_train_1684", "nl": "Wren is a sterpus or a yumpus or a grimpus.", "fol": "(sterpus(Wren) | yumpus(Wren) | grimpus(Wren))", "prediction": ["all x.(Wren(x) -> (Sterpus(x) | Yumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Sterpus(x) | Yampus(x) | Grimpus(x)))", "all x.(Wren(x) -> ((Sterpus(x) | Yumpus(x) | Grimpus(x))))", "(Sterpus) | Yumpus(y) | Grimpus(y))", "all x y.(Wren(x) -> (Sterpus(x) | Yampus(x) | Grimpus(x)))", "(all x.(Wren(x) -> Sterpus(x)) | (Yumpus(x) | Grimpus(x))))", "all x.(Wren(x) -> (Sterpus(x) | Yumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> ((Sterpus(x) | Yumpus(x) | Grimpus(x))))", "(Sterpus) | Yampus(y) | Grimpus(y))", "exists x.(Wren(x) & ((Sterpus(x) & -Yumpus(x)) | (-Yumpus(x) & -Yumpus(x)))))", "all x y.(Wren(x) -> (Sterpus(x) | Yampus(x) | Grimpus(x)))", "exists x.(Wren(x) & ((Sterpus(x) | Yumpus(x)) | Grimpus(x))))", "all x.(Wren(x) -> (Sterepus(x) | Yampus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Sterpus(x) | Yampus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Sterpus(x) | Yompus(x) | Grimpus(x)))", "all x.(Wren(x) -> ((Sterepus(x) | Yumpus(x) | Gruppus(x))))"]}
{"id": "prontoqa_train_1685", "nl": "Everything that is a zumpus, a sterpus, or an impus is a shumpus and a rompus and a dumpus.", "fol": "all x. ((zumpus(x) | sterpus(x) | impus(x)) -> (shumpus(x) & rompus(x) & dumpus(x)))", "prediction": ["all x.((Tompus(x) | Sterpus(x) | Impossible(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) | Sterpus(x) | Imperator(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) | Sterpus(x) | IsImpossible(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "(all x.((Tompus(x) | Sterpus(x) | Impossible(x)) -> Shumpus(x)) & all y.((Rompus(y) & Dumpus(y)) -> Dumpus(y)))", "all x y.((Tompus(x) | Sterpus(x) | Impossible(x)) -> (Shumpus(y) & Rompus(y) & Dumpus(y)))", "all x.((Tompus(x) | Sterpus(x) | Impossible(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x y.((Tompus(x) | Sterpus(x) | Imperator(x)) -> (Shumpus(x) & Rompus(y) & Dumpus(y)))", "all x.((Tompus(x) | Sterpus(x) | IsImprovement(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Zumpus(x) | Sterpus(x) | Imperative(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "(all x.((Tompus(x) | Sterpus(x) | Impossible(x))) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "(all x.((Zumpus(x) | Sterpus(x) | Imperator(x))) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Zumpus(x) | Sterepus(x) | IsImpossible(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Zumpus(x) | Sterpus(x) | Imperator(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) | Sterpus(x) | Impossible(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) | Sterpus(x) | Impossible(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Zumpus(x) | Sterpus(x) | Imperative(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1686", "nl": "Everything that is a tumpus or a shumpus or a vumpus is a numpus, a zumpus, and a yumpus.", "fol": "all x. ((tumpus(x) | shumpus(x) | vumpus(x)) -> (numpus(x) & zumpus(x) & yumpus(x)))", "prediction": ["all x.((Tumpus(x) | Humpus(x) | Vumpus(x)) -> (Numpus(x) & Zumpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Vumpus(x)) -> (Numpus(x) & Zumpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Vumpus(x)) -> (Numpus(x) & Zumpus(x) & Yumpus(x)))", "all x y.((Tumpus(x) | Humpus(x) | Vumpus(x)) -> (Numpus(y) & Zumpus(y) & Yumpus(y)))", "all x.(((Tumpus(x) | Humpus(x) | Vumpus(x))) -> (Numpus(x) & Zumpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Vumpus(x)) -> (Numpus(x) & Zumpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Vumpus(x)) -> (Numpus(x) & Zumpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Vumpus(x)) -> (Numpus(x) | Zumpus(x) | Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Vumpus(x)) -> (Numpus(x) & Zumpus(x) & Yumpus(x)))", "all x.(Tumpus(x) | Humpus(x) | Vumpus(x)) -> (Numpus(x) & Zumpus(x) & Yumpus(x)))", "all x y.((Tumpus(x) | Humpus(x) | Vumpus(x)) -> (Numpus(y) & Zumpus(y) & Yumpus(y)))", "(all x.((Tumpus(x) | Humpus(x) | Vumpus(x))) -> (Numpus(x) | Zumpus(x) | Yumpus(x)))", "(all x.((Tumpus(x) | Humpus(x) | Voompus(x))) -> (Numpus(x) | Zumpus(x) | Yumpus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Vumpus(x)) -> (Numpus(x) & Zumpus(x) & Yumpus(x)))", "(all x.((Tumpus(x) | Humpus(x) | Vampire(x))) -> (Numpus(x) | Zumpus(x) | Yumpus(x)))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> (Numpus(x) & Zumpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1687", "nl": "Polly is a vumpus.", "fol": "vumpus(Polly)", "prediction": ["all x.(Vumpus(x) -> Polly(x))", "Polly is a Vumpus.", "all x.(Polly(x) -> Vumpus(x))", "(Vumpus(Polly))", "(Vumpus(Polly))", "Polly is a Vumpus.", "all x.(Vumpus(x) -> Polly(x))", "all x.(Polly(x) -> Vumpus(x))", "Polly is a vumpus.", "(Vumpus(Polly) & -Vumpus(Polly))", "Polly is a Vumpus.", "All x.(Polly(x) -> Vumpus(x))", "all x.(Vumpus(x) -> Polly(x))", "Polly is a vumpus.", "(Vimpus(Polly)", "exists x.(Vimpus(x) & Polly(x))"]}
{"id": "prontoqa_train_1688", "nl": "Everything that is a sterpus, a vumpus, and a numpus is a dumpus, a shumpus, and a grimpus.", "fol": "all x. ((sterpus(x) & vumpus(x) & numpus(x)) -> (dumpus(x) & shumpus(x) & grimpus(x)))", "prediction": ["all x.((Sterpus(x) | Vumpus(x) | Numpus(x)) -> (Dumpus(x) & Humpus(x) & Grimpus(x)))", "all x y z.((Sterpus(x) & Vumpus(y) & Numpus(z) & Sterpus(x) & Vumpus(y) & Numpus(z)) -> (Dumpus(x) & Humpus(x) & Grimpus(x)))", "all x.((Sterepus(x) & Vumpus(x) & Numpus(x)) -> (Dumpus(x) & Shumpus(x) & Grimpus(x)))", "all x y.((Sterpus(x) & Vumpus(y) & Numpus(y)) -> (Dumpus(x) & Humpus(x) & Grimpus(x)))", "all x.((Sterpus(x) | Vumpus(x) | Numpus(x)) -> (Dumpus(x) | Humpus(x) | Grimpus(x)))", "all x.((Sterpus(x) | Vumpus(x) | Numpus(x)) -> (Dumpus(x) & Humpus(x) & Grimpus(x)))", "all x.((Sterepus(x) | Vumpus(x) | Numpus(x)) -> (Dumpus(x) | Humpus(x) | Grimpus(x)))", "all x.((Sterpus(x) | Vumpus(x) | Numpus(x)) -> (Dumps(x) & Shumpus(x) & Grimpus(x)))", "all x.((Sterpus(x) & Vumpus(x) & Numpus(x)) -> (Dumpus(x) & Shumpus(x) & Grimpus(x)))", "all x.((Sterpus(x) & Vumpus(x) & Numpus(x)) -> (Dumpus(x) & Humpus(x) & Grimpus(x)))", "all x y.((Sterpus(x) & Vumpus(y) & Numpus(y)) -> (Dumps(x) & Humpus(x) & Grimpus(x)))", "(all x.((Sterpus(x) | Vumpus(x) | Numpus(x))) -> (Dumps(x) & Shumpus(x) & Grimpus(x)))", "(all x.((Sterpus(x) | Vumpus(x) | Numpus(x))) -> (Dumpus(x) | Shumpus(x) | Grimpus(x)))", "(all x.((Sterpus(x) | Vumpus(x) | Numpus(x))) -> (Dumpus(x) | Shumpus(x) | Grimpus(x)))", "all x.((Sterepus(x) | Vumpus(x) | Numpus(x)) -> (Dumpus(x) & Shumpus(x) & Grimpus(x)))", "all x.(Sterpus(x) & Voompus(x) & Numpus(x)) -> (Dumps(x) & Shumpus(x) & Grimpus(x)))"]}
{"id": "prontoqa_train_1689", "nl": "Everything that is a lempus or a dumpus or a brimpus is a numpus.", "fol": "all x. ((lempus(x) | dumpus(x) | brimpus(x)) -> numpus(x))", "prediction": ["all x.((Lempus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x.(((Lempus(x) | Dumpus(x) | Brimpus(x))) -> Numpus(x))", "all x.((Lempus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x.((Lempus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x y.((Lempus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(y))", "all x.(((Lempus(x) | Dumpus(x) | Brimpus(x))) -> Numpus(x))", "all x.((Lempus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x y.((Lempus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(y))", "all x.(((Lempus(x) | Dumpus(x) | Brimpus(x))) -> Numpus(x))", "(all x.((Lempus(x) | Dumpus(x) | Brimpus(x))) -> Numpus(x))", "all x.((Lempus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x.((Limpus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x.((Lempus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x.((Limpus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x.((Lempus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x.((Limpus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))"]}
{"id": "prontoqa_train_1690", "nl": "Sam is a lempus, a grimpus, and a yumpus.", "fol": "(lempus(Sam) & grimpus(Sam) & yumpus(Sam))", "prediction": ["all x.(Sam(x) -> (Lempus(x) | Grimpus(x) | Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Smoothpus(x) -> Grimpus(x)) & (Yumpus(x) -> Lempus(x)))", "all x y z.((Sam(x) & Lempus(y) & Grimpus(z)) -> (Lempus(x) | Grimpus(z) | Yumpus(z)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Sam(y) -> Grimpus(y)) & all z.(Yumpus(z) -> Yumpus(z)))", "all x.(Sam(x) -> (Lempus(x) | Grimpus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Lempus(x) & Grimpus(x) & Yumpus(x)))", "(Lempus(sam) | Grimpus(sam) | Yumpus(sam))", "(all x.(Sam(x) -> Lempus(x)) & (Smoke(x) -> Grimpus(x)) & (Yumpus(x) -> Lempus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Sam(y) -> Grimpus(y))) & all z.(Yumpus(z) -> Yumpus(z)))", "all x y z.((Sam(x) & Lempus(y) & Grimpus(z)) -> (Lempus(x) | Grimpus(z) | Yumpus(z)))", "all x.(Sam(x) -> (Lempus(x) | Grimpus(x) | Yumpus(x)))", "exists x.(Sam(x) & Lempus(x) & Grimpus(x) & Yumpus(x))", "all x.(Sam(x) -> (Lempus(x) & Grimpus(x) & Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Smoothpus(x) -> Grimpus(x)) & (Yumpus(x) -> Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Grimpus(y) -> Yumpus(y)))", "all x.(Sam(x) -> (Lempus(x) | Grimpus(x) | Yumpus(x)))"]}
{"id": "prontoqa_train_1691", "nl": "Everything that is a tumpus, a dumpus, and a brimpus is a yumpus.", "fol": "all x. ((tumpus(x) & dumpus(x) & brimpus(x)) -> yumpus(x))", "prediction": ["all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yumpus(x))", "all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yumpus(x))", "all x y.((Tumpus(x) & Dumpus(y) & Brimpus(x)) -> Yumpus(x))", "all x.((Tumpus(x) & Dumpus(x) & Brimpus(x)) -> Yumpus(x))", "all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yampus(x))", "all x y.((Tumpus(x) & Dumpus(y) & Brimpus(y)) -> Yampus(x))", "all x.(((Tumpus(x) | Dumpus(x) | Brimpus(x))) -> Yampus(x))", "(all x.((Tumpus(x) | Dumpus(x) | Brimpus(x))) -> Yumpus(x))", "all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yumpus(x))", "all x.((Tumpus(x) & Dumpus(x) & Brimpus(x)) -> Yumpus(x))", "(all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yumpus(x))", "all x.(Yumpus(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yampus(x))", "all x.((Tumpus(x) & Dumpus(x) & Brimpus(x)) -> Yumpus(x))", "all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yumpus(x))", "all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yampus(x))"]}
{"id": "prontoqa_train_1692", "nl": "Polly is a jompus, a lempus, or a yumpus.", "fol": "(jompus(Polly) | lempus(Polly) | yumpus(Polly))", "prediction": ["all x.(Polly(x) -> (Jompus(x) | Lempus(x) | Yumpus(x)))", "(Jompus(Polly) | Lempus(Polly) | Yumpus(Polly))", "all x.(Polly(x) -> (Jompus(x) | Lempus(x) | Yumpus(x)))", "all x.(Polly(x) -> (Jompus(x) | Lempus(x) | Yumpus(x)))", "(Jompus(Polly) | Lempus(Polly) | Yumpus(Polly))", "(Jompus(polly) | Lempus(polly) | Yumpus(polly)))", "exists x.(Pooly(x) & (Jompus(x) | Lempus(x) | Yumpus(x)))", "all x y.((Polly(x) & Jompus(y)) | Lempus(y) | Yumpus(y)) -> Polly(x))", "all x.(Polly(x) -> (Jompus(x) | Lempus(x) | Yumpus(x)))", "all x.(Polly(x) -> (Jompus(x) | Lempus(x) | Yumpus(x)))", "all x.(Polly(x) -> (Jimpus(x) | Lempus(x) | Yumpus(x)))", "all x.(Polly(x) -> (Jompus(x) | Lempus(x) | Yumpus(x)))", "all x.(Polly(x) -> (Jompus(x) | Lempus(x) | Yumpus(x)))", "exists x.(Polly(x) & (Jompus(x) | Lempus(x) | Yumpus(x)))", "(all x.(Polly(x) -> (Jimpus(x) | Lempus(x) | Yumpus(x)))", "exists x.(Polly(x) & (Jompus(x) | Lempus(x) | Yumpus(x)))"]}
{"id": "prontoqa_train_1693", "nl": "Every zumpus is a grimpus and a sterpus and a dumpus.", "fol": "all x. (zumpus(x) -> (grimpus(x) & sterpus(x) & dumpus(x)))", "prediction": ["all x.(Tompus(x) -> (Grimpus(x) & Sterpus(x) & Dumpus(x)))", "all x.(Zumpus(x) -> (Grimpus(x) & Sterpus(x) & Dumpus(x)))", "(all x.(Tompus(x) -> Grimpus(x)) & all y.(Sterpus(y) -> Dumpus(y)))", "all x y.((Zumpus(x) & Grimpus(y)) -> (Sterpus(x) & Dumpus(x)))", "all x y z.((Zumpus(x) & Grimpus(y) & Sterpus(z)) -> (Storpus(x) & Dumpus(x)))", "(all x.(Zumpus(x) -> Grimpus(x)) & (Sterpus(x) -> Dumpus(x)))", "all x.(Tompus(x) -> (Grimpus(x) & Sterpus(x) & Dumpus(x)))", "all x.(Tompus(x) -> (Smooch(x) & Sterpus(x) & Dumpus(x)))", "all x y.((Tompus(x) & Grimpus(y)) -> (Sterepus(x) & Dumpus(x)))", "exists x.(Zumpus(x) & Grimpus(x) & Sterpus(x) & Dumpus(x))", "all x.(Zumpus(x) -> (Grimpus(x) | Sterpus(x) | Dumpus(x)))", "(all x.(Tompus(x) -> Grimpus(x)) & all y.(Sterepus(y) -> Dumpus(y)))", "all x.(Zumpus(x) -> (Grimpus(x) & Sterepus(x) & Dumpus(x)))", "all x.(Tompus(x) -> (Sgrimpus(x) & Sterpus(x) & Dumpus(x)))", "(all x.(Zumpus(x) -> Grimpus(x)) & (Sterpus(x) & Dumpus(x)))", "exists x.(Zumpus(x) & Grimpus(x) & Sterpus(x) & Dumpus(x))"]}
{"id": "prontoqa_train_1694", "nl": "Rex is a numpus or a dumpus or a gorpus.", "fol": "(numpus(Rex) | dumpus(Rex) | gorpus(Rex))", "prediction": ["all x.(Rex(x) -> (Numpus(x) | Dumpus(x) | Gorpus(x)))", "(numpus(Rex) | Dumpus(Rex) | Gorpus(Rex)))", "(Numpus(rex) | Dumpus(rex) | Gorpus(rex)))", "all x.(Rex(x) -> (Numpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Numpus(x) | Dumpus(x) | Gorpus(x)))", "(numpus(Rex) | Dumpus(Rex) | Gorpus(Rex)))", "(Numpus) | Dumpus(x) | Gorpus(x))", "(Numpus(rex) | Dumpus(rex) | Gorpus(rex)))", "all x y.(Rex(x) -> (Numpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Numpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Numpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Numpus(x) | Dumpus(x) | Gorpus(x)))", "exists x.(Rex(x) & ((Numpus(x) | Dumpus(x)) | Gorpus(x))))", "all x.(Rex(x) -> (Numpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Nompus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Numpus(x) | Dumpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1695", "nl": "Each yumpus is a tumpus and a grimpus and a lempus.", "fol": "all x. (yumpus(x) -> (tumpus(x) & grimpus(x) & lempus(x)))", "prediction": ["all x.(Yumpus(x) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x y.((Yumpus(x) & Tumpus(y)) -> (Tumpus(x) & Grimpus(y) & Lempus(y)))", "(all x.(Yumpus(x) -> Tumpus(x)) & (Grimpus(x) & Lempus(x)))", "all x.(Yumpus(x) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "(all x.(Yumpus(x) -> Tumpus(x)) & all y.(Grimpus(y) -> Lempus(y)))", "all x y z.(Yumpus(x) -> (Tumpus(x) & Grimpus(y) & Lempus(z)))", "all x y.((Yumpus(x) & Tumpus(x) & Grimpus(y) & Lempus(y)) -> (Tumpus(x) & Grimpus(y) & Lempus(y)))", "all x.(Yumpus(x) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "exists x.(Yumpus(x) & Tumpus(x) & Grimpus(x) & Lempus(x))", "(all x.(Yumpus(x) -> Tumpus(x)) & (Grimpus(x) | Lempus(x))))", "all x.(Yumpus(x) -> (Tumpus(x) & Grumpus(x) & Lempus(x)))", "all x.(Yumpus(x) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "(all x.(Yumpus(x) -> Tumpus(x)) & all y.(Grimpus(y) -> Lempus(y)))", "all x.(Yumpus(x) -> (Tumpus(x) | Grimpus(x) | Lempus(x)))", "exists x.(Yumpus(x) & Tumpus(x) & Grimpus(x) & Lempus(x))", "exists x.(Yumpus(x) & Tumpus(x) & Grimpus(x) & Lempus(x))"]}
{"id": "prontoqa_train_1696", "nl": "Sally is a numpus and Sally is not a grimpus and Sally is an impus.", "fol": "(numpus(Sally) & -grimpus(Sally) & impus(Sally))", "prediction": ["(all x.(Sally(x) -> Numpus(x)) & (Sally(x) -> -Grimpus(x)) & (Sally(x) -> Imperator(x)))", "all x y.((Sally(x) & Numpus(x) & -Grimpus(y)) -> Imperator(x))", "all x.(Sally(x) -> (Numpus(x) & -Grimpus(x) & Imperator(x)))", "(numpus(Sally) & -Grimpus(Sally) & Imperator(Sally))", "all x y z.((Sally(x) & Numpus(x) & Grimpus(y) & Imperator(z)) -> (Numpus(x) & -Grimpus(y) & Imperator(z)))", "Sally is Numpus(Sally) & -Grimpus(Sally) & IsIlias(Sally))", "(all x.(Sally(x) -> Numpus(x)) & (Sally(x) -> -Grimpus(x)) & (Sally(x) -> Imperator(x)))", "(all x y.(Sally(x) -> Numpus(x)) & (Sally(y) -> -Grimpus(y)) & (Sally(y) -> Imperator(y)))", "(all x.(Sally(x) -> Numpus(x)) & all y.(Sally(y) -> -Grimpus(y))) & all z.(Sally(z) -> Imperator(z)))", "all x.(Sally(x) -> (Numpus(x) & -Grimpus(x) & IsImpossible(x)))", "(all x.(Sally(x) -> Numpus(x)) & (-Smokey(x) & -Smokey(x)) & (-Smokey(x) -> Imperator(x)))", "exists x.(Sally(x) & Numpus(x) & -Grimpus(x) & Imperator(x))", "(all x.(Sally(x) -> Numpus(x)) & (Sally(x) -> -Grimpus(x)) & (Sally(x) -> Impermissible(x)))", "all x y.((Sally(x) & Numpus(x)) -> (-Smooch(x) & Imperator(y)))", "all x.(Sally(x) -> (Numpus(x) & -Grimpus(x) & Imperator(x)))", "(all x.(Sally(x) -> Numpus(x)) & all y.(Sally(y) -> -Grimpus(y))) & all z.(Sally(z) -> Imperator(z)))"]}
{"id": "prontoqa_train_1697", "nl": "Sam is a shumpus and Sam is a jompus and Sam is not a tumpus.", "fol": "(shumpus(Sam) & jompus(Sam) & -tumpus(Sam))", "prediction": ["all x y z.((Sam(x) & Shumpus(y) & Jompus(z)) -> (Sam(x) & -Tumpus(x)))", "(all x.(Shumpus(x) -> Sam(x)) & (Jompus(x) -> Sam(x)) & -Tumpus(x)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Jompus(y) -> Sam(y))) & all z.(Tumpus(z) -> Sam(z)))", "all x y z.((Sam(x) & Sam(y) & Jompus(z)) -> (Shumpus(x) & Jompus(y) & -Tumpus(z)))", "all x y.((Sam(x) & Sam(y)) -> (Shumpus(x) & Jompus(y) & -Tumpus(y)))", "(all x.(Sam(x) -> Humpus(x)) & (Jumpus(x) -> Jompus(x)) & (Sam(x) -> -Tumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) & Jompus(x) & -Tumpus(x)))", "(all x y.(Shumpus(x) -> Sam(x)) & (Jompus(y) -> Sam(y)) & (Tumpus(y) -> Sam(y)))", "all x y z.((Sam(x) & Humpus(y) & Jompus(z)) -> (Shumpus(x) & Jompus(z) & -Tumpus(x)))", "(all x y z.((Shumpus(x) & Sam(y) & Jompus(z)) -> (Shumpus(x) & Jompus(y) & -Tumpus(z)))", "all x.(Sam(x) -> (Shumpus(x) | Jompus(x) | -Tumpus(x)))", "exists x.(Sam(x) & Humpus(x) & Jompus(x) & -Tumpus(x))", "(all x.(Shumpus(x) & All y.(Jompus(y)) -> Sam(x)) & (Shumpus(y) | Jompus(y))) & (Tumpus(y) -> Sam(y)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Jompus(y) -> Sam(y))) & all z.(Tumpus(z) -> Sam(z)))", "(all x.(Sam(x) -> Humpus(x)) & (Jimpus(x) -> Jompus(x)) & (Sam(x) -> -Tumpus(x)))", "all x y.((Sam(x) & Sam(y)) -> (Shumpus(x) & Jompus(y) & -Tumpus(y)))"]}
{"id": "prontoqa_train_1698", "nl": "Sam is a grimpus or Sam is a rompus or Sam is not a lempus.", "fol": "(grimpus(Sam) | rompus(Sam) | -lempus(Sam))", "prediction": ["all x.(Sam(x) -> (Grimpus(x) | Rompus(x) | -Lempus(x)))", "(all x.(Sam(x) -> Grimpus(x)) | (Sam(x) -> Rompus(x)) | (Sam(x) -> -Lempus(x))))", "all x.(Sam(x) -> (Smompus(x) | Rompus(x) | -Lempus(x)))", "((Sam(sam) & Grimpus(sam)) | (Sam(sam) & Rompus(sam)) | (Sam(sam) & -Lempus(sam))))", "(exists x.(Sam(x) & Grimpus(x)) | exists y.(Rompus(y) & -Lempus(y))))", "all x.((Sam(x) & (Grimpus(x) | Rompus(x) | -Lempus(x))) -> Grimpus(x))", "all x y.((Sam(x) & Grimpus(x)) | (Sam(y) & Rompus(y)) | (-Sam(y) & Lempus(y))))", "(all x.(Sam(x) -> Grimpus(x)) | (Sam(x) -> Rompus(x)) | (Sam(x) -> -Lempus(x))))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> Rompus(x)) & (Sam(x) -> -Lempus(x)))", "((Sam isGrimpus) | Sam isRompus) | Sam is-Lempus))", "all x y.((Sam(x) & Grimpus(x)) | (Rompus(x) | -Lempus(y))))", "all x.(Sam(x) -> (Grimpus(x) | Rompus(x) | -Lempus(x)))", "exists x.(Sam(x) & ((Sam(x) & Grimpus(x)) | (Sam(x) & Rompus(x)) | (-Sam(x) & Lempus(x)))))", "all x.(Sam(x) -> (Smooch(x) | Rompus(x) | -Lempus(x)))", "exists x.(Sam(x) & ((Sam(x) & Grimpus(x)) | (Sam(x) & Rompus(x)) | (-Sam(x) & Lempus(x)))))", "(all x.(Sam(x) -> Grimpus(x)) | (Sam(x) -> Rompus(x)) | (Sam(x) -> -Lempus(x))))"]}
{"id": "prontoqa_train_1699", "nl": "Sterpuses are wumpuses, lorpuses, and shumpuses.", "fol": "all x. (sterpus(x) -> (wumpus(x) & lorpus(x) & shumpus(x)))", "prediction": ["all x.(Sterpuse(x) -> (Wumpus(x) | Lorpus(x) | Shumpus(x)))", "(all x.(Sterpuse(x) -> Wumpus(x)) & all y.(Lorpus(y) -> Sterpus(y))) & all z.(Shumpus(z) -> Shumpus(z)))", "all x y z.((Sterpuse(x) & Wumpus(y) & Lorpus(z)) -> (Wumpus(x) | Lorpus(z) | Shumpus(z)))", "all x.(Sterpuse(x) -> (Wumpus(x) | Lorpus(x) | Shumpus(x)))", "all x.(Sterpuse(x) -> (Wumpus(x) | Lorpus(x) | Humpus(x)))", "(all x.(Sterpuse(x) -> Wumpus(x)) & all y.(Lorpus(y) -> Sterpus(y))) & all z.(Shumpus(z) -> Sterpus(z)))", "(all x.(Sterpuse(x) -> (Wumpus(x) | Lorpus(x) | Humpus(x)))", "all x.(Sterpus(x) -> (Wumpus(x) | Lorpus(x) | Shumpus(x)))", "all x y z.((Sterpuse(x) & Wumpus(y) & Lorpus(z)) -> (Wumpus(x) | Lorpus(z) | Shumpus(z)))", "all x.(Sterpuse(x) -> (Wumpus(x) | Lorpus(x) | Shumpus(x)))", "all x.(Sterpuse(x) -> (Wumpus(x) | Lorpus(x) | Humpus(x)))", "(all x.(Sterpuse(x) -> Wumpus(x)) & all y.(Lorpus(y) -> Shumpus(y)))", "all x.(Strerpuse(x) -> (Wumpuse(x) | Lorpuse(x) | Shumpuse(x)))", "all x.(Stumpus(x) -> (Wumpus(x) | Lorpus(x) | Humpus(x)))", "(all x.(Sterpuse(x) -> Wumpus(x)) & all y.(Lorpus(y) -> Sterpus(y))) & all z.(Shumpus(z) -> Sterpus(z)))", "all x.(Sterpuse(x) -> (Wumpuse(x) | Lorpuse(x) | Shumpuse(x)))"]}
{"id": "prontoqa_train_1700", "nl": "Everything that is a tumpus and a zumpus and a rompus is not a wumpus.", "fol": "all x. ((tumpus(x) & zumpus(x) & rompus(x)) -> -wumpus(x))", "prediction": ["all x.((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))", "all x.((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))", "(all x.((Tumpus(x) & Tompus(x) & Rompus(x)) -> -Wumpus(x))", "(all x.((Tumpus(x) & Tompus(x)) & All y.(Rompus(y) & Tompus(y))) -> -Wumpus(x))", "all x y.((Tumpus(x) & Zumpus(y) & Rompus(y)) -> -Wumpus(x))", "all x.((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))", "all x.(((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))", "all x.((Tumpus(x) & Tompus(x) & Rompus(x)) -> -Wumpus(x))", "(all x.((Tumpus(x) & Tompus(x)) & (Tompus(x) & Rompus(x))) -> -Wumpus(x))", "all x.((Tompus(x) | Zumpus(x) | Rompus(x)) -> -Wumpus(x))", "all x.((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))", "all x y.((Tumpus(x) & Zumpus(y) & Rompus(y)) -> -Wumpus(x))", "all x.((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))", "(all x.((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))", "all x.((Tumpus(x) & Tompus(x) & Rompus(x)) -> -Wumpus(x))", "all x.((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))"]}
{"id": "prontoqa_train_1701", "nl": "Alex is a gorpus, a lorpus, and a jompus.", "fol": "(gorpus(Alex) & lorpus(Alex) & jompus(Alex))", "prediction": ["all x.(Alex(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Lorpus(y) & All z.(Jompus(z)) -> Gorpus(x)))", "all x y z.((Alex(x) & Gorpus(y) & Lorpus(z)) -> (Gorpus(x) | Lampus(z) | Jompus(z)))", "all x.(Alex(x) -> (Gorpus(x) & Lorpus(x) & Jompus(x)))", "(Gorpus(Alex) | Lorpus(Alex) | Jompus(Alex))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Lorpus(y) & All z.(Jompus(z)) -> Gorpus(x)))", "all x y z.((Alex(x) & Gorpus(y) & Lorpus(z)) -> (Gorpus(x) | Lorompus(z) | Jompus(z)))", "all x.(Alex(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Lorpus(y) & -Jompus(y)))", "(Gorpus(Alex) | Lorpus(Alex) | Jompus(Alex))", "(Gorpus,Gorpus,Lorpus,Jompus,etc.)", "all x y z.((Alex(x) & Gorpus(y) & Lorpus(z)) -> (Gorpus(x) & Lorompus(x) & Jompus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "all x.(Alex(x) -> (Gorpus(x) & Lorpus(x) & Jompus(x)))", "exists x.(Alex(x) & Gorpus(x) & Loper(x) & Jompus(x))", "all x.(Alex(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))"]}
{"id": "prontoqa_train_1702", "nl": "Alex is a vumpus or a shumpus or a sterpus.", "fol": "(vumpus(Alex) | shumpus(Alex) | sterpus(Alex))", "prediction": ["all x.(Alex(x) -> (Vumpus(x) | Shumpus(x) | Sterpus(x)))", "(Vumpus(Alex) | Shumpus(Alex) | Sterpus(Alex))", "all x.(Alex(x) -> (Vumpus(x) | Shumpus(x) | Sterpus(x)))", "(Vumpus(Alex) | Shumpus(Alex) | Sterpus(Alex))", "all x.(Alex(x) -> (Vumpus(x) | Shumpus(x) | Sterpus(x)))", "(Vumpus(Alex) | Shumpus(Alex) | Sterpus(Alex))", "all x.(Alex(x) -> (Vumpus(x) | Humpus(x) | Sterpus(x)))", "all x y.((Alex(x) & Vumpus(x) & Shumpus(y)) | Sterpus(x))", "(Vumpus,Shumpus,Sterpus)", "all x.(Alex(x) -> (Vumpus(x) | Shumpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Vimpus(x) | Shumpus(x) | Sterpus(x)))", "exists x.(Vumpus(x) | Shumpus(x) | Sterpus(x))", "all x.(Alex(x) -> (Vumpus(x) | Humpus(x) | Sterpus(x)))", "exists x.(Vumpus(x) | Shumpus(x) | Sterpus(x))", "all x.(Alex(x) -> (Vumpus(x) | Humpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Vimpus(x) | Shumpus(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1703", "nl": "Everything that is a shumpus, a numpus, and a rompus is a dumpus, a grimpus, and a wumpus.", "fol": "all x. ((shumpus(x) & numpus(x) & rompus(x)) -> (dumpus(x) & grimpus(x) & wumpus(x)))", "prediction": ["all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> (Dumpus(x) & Grimpus(x) & Wumpus(x)))", "all x y z.((Shumpus(x) & Numpus(y) & Rompus(z) & Dumpus(x) & Grimpus(x) & Wumpus(x)) -> (Dumpus(x) & Grimpus(x) & Wumpus(x)))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> (Dumpus(x) & Grimpus(x) & Wumpus(x)))", "all x y.((Shumpus(x) & Numpus(y) & Rompus(y)) -> (Dumpus(x) & Grimpus(x) & Wumpus(x)))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> (Dumps(x) & Grimpus(x) & Wumpus(x)))", "all x y z.((Shumpus(x) & Numpus(y) & Rompus(z) & Is(x,y) & Is(x,z)) -> (Dumpus(x) & Grimpus(x) & Is(x,wumpus)))", "all x.((Shumpus(x) & Numpus(x) & Rompus(x)) -> (Dumpus(x) & Grimpus(x) & Wumpus(x)))", "(all x.((Shumpus(x) | Numpus(x) | Rompus(x))) -> (Dumps(x) & Grimpus(x) & Wumpus(x)))", "all x.(((Shumpus(x) | Numpus(x) | Rompus(x))) -> (Dumpus(x) | Grimpus(x) | Wumpus(x)))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> (Dumpus(x) | Grimpus(x) | Wumpus(x)))", "(all x.((Shumpus(x) | Numpus(x) | Rompus(x))) -> (Dumpus(x) & Grimpus(x) & Wumpus(x)))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> (Dumps(x) & Grimpus(x) & Wumpus(x)))", "all x.(Shumpus(x) & numpus(x) & rompus(x)) -> (Dumps(x) & Grimpus(x) & Wumpus(x)))", "(all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> (Dumpus(x) | Grimpus(x) | Wumpus(x)))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> (Dumpus(x) & Grimpus(x) & Wumpus(x)))", "(all x.((Shumpus(x) | Numpus(x) | Rompus(x))) -> (Dumpus(x) | Grimpus(x) | Wumpus(x)))"]}
{"id": "prontoqa_train_1704", "nl": "Sally is a numpus.", "fol": "numpus(Sally)", "prediction": ["all x.(Sally(x) -> Numpus(x))", "Sally is Numpus(Sally)", "Sally is a Numpus.", "Sally is Numpus.", "all x.(Sally(x) -> Numpus(x))", "(Numpus(Sally) & Numpus(Sally))", "all x.((Sally(x) & Numpus(x)) -> Numpus(x))", "Sally is Numpus(Sally)", "Sally is a Numpus.", "all x.(Sally(x) -> Numpus(x))", "(Numpus(Sally) & Numpus(Sally))", "Sally (numpus)", "all x.(Sally(x) -> Numpus(x))", "Sally is Numpus.", "All x.(Sally(x) -> Numpus(x))", "All x.(Sally(x) -> Numpus(x))"]}
{"id": "prontoqa_train_1705", "nl": "Zumpuses are sterpuses.", "fol": "all x. (zumpus(x) -> sterpus(x))", "prediction": ["all x.(Zumpus(x) -> Sterpuse(x))", "(Sterpuse(z) & Sterpuse(z))", "all x.(Zumpus(x) -> Sterpuse(x))", "all x y.((Zumpus(x) & Sterpus(y)) -> Sterpuse(x))", "all x y.((Zumpuse(x) & Sterpuse(y)) -> Sterpuse(x))", "(Sterpuse(z) & Sterpuse(z))", "all x.(Zumpus(x) -> Sterpuse(x))", "all x.(Zumpuse(x) -> Sterpuse(x))", "(Sterpuse(z) & -Sterpuse(z))", "all x.(Zumpus(x) -> Sterpuse(x))", "all x.(Zumpus(x) -> Steroid(x))", "all x.(Zombie(x) -> Sterpuse(x))", "all x.(Zumpus(x) -> Sterpus(x))", "All x.(Zumpuse(x) -> Sterpuse(x))", "All x.(Zombia(x) -> Sterus(x))", "all x.(Zimpus(x) -> Sterus(x))"]}
{"id": "prontoqa_train_1706", "nl": "Dumpuses are zumpuses.", "fol": "all x. (dumpus(x) -> zumpus(x))", "prediction": ["all x.(Dumpuse(x) -> Zumpuse(x))", "(Tompuse(dumpuse) & -Tompuse(dumpuse))", "all x.(Dumpuse(x) -> Zumpuse(x))", "all x y.((Dumpuse(x) & Zumpus(y)) -> Is(x,y))", "all x.(Dumpuse(x) -> Zumpus(x))", "(All x.(Dumpuse(x) -> Zumpuse(x))", "all x y.((Dumpuse(x) & Zumpuse(y)) -> Has(x,y))", "all x.(Dumpuse(x) -> Zumpuse(x))", "all x.(Dumpuse(x) -> Zumpus(x))", "all x.(Dumpus(x) -> Zumpuse(x))", "all x.(Dumpuse(x) -> Zumpuse(x))", "all x.(Dumpus(x) -> Zumpus(x))", "All x.(Dumpus(x) -> Zumpuse(x))", "all x.(Dumpus(x) -> Zumpus(x))", "All x.(Dumpuse(x) -> Zurpuse(x))", "All x.(Dumpus(x) -> Tompus(x))"]}
{"id": "prontoqa_train_1707", "nl": "Fae is a numpus and Fae is not a sterpus and Fae is a gorpus.", "fol": "(numpus(Fae) & -sterpus(Fae) & gorpus(Fae))", "prediction": ["(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> -Sterpus(x)) & (Fae(x) -> Gorpus(x)))", "all x y z.((Fae(x) & Numpus(x) & -Sterpus(y) & Gorpus(z)) -> (Numpus(x) & Gorpus(x)))", "(all x y.(Fae(x) -> Numpus(x)) & (Fae(y) -> -Sterpus(y)) & (Fae(y) -> Gorpus(y)))", "(all x y z.((Fae(x) & Numpus(x)) -> (Numpus(x) & -Sterpus(y)) & ((Fae(z) & Gorpus(z))) -> (Gorpus(z))))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> -Sterpus(x)) & (Fae(x) -> Gorpus(x)))", "all x y z.((Fae(x) & Numpus(x) & Fae(y) & Sterpus(z)) -> (-Sterpus(y) & Gorpus(z)))", "all x y.((Fae(x) & Numpus(x) & -Sterpus(y)) -> Gorpus(x))", "all x.(Fae(x) -> (Numpus(x) & -Sterpus(x) & Gorpus(x)))", "exists x.(Fae(x) & Numpus(x) & -Sterpus(x) & Gorpus(x))", "(all x.(Fae(x) -> Numpus(x)) & (-Fae(x) -> Sterpus(x)) & (Fae(x) -> Gorpus(x)))", "all x y z.((Fae(x) & Numpus(x) & Sterpus(y) & Gorpus(z)) -> (Numpus(x) & -Sterpus(y) & Gorpus(z)))", "all x y.((Fae(x) & Numpus(x) & Fae(y) & -Sterpus(y) & Gorpus(y)) -> (Numpus(x) & Gorpus(y)))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> -Sterepus(x)) & (Fae(x) -> Gorpus(x)))", "(all x.(Fae(x) -> Numpus(x)) & all y.(Fae(y) -> -Sterpus(y)) & all z.(Fae(z) -> Gorpus(z))))", "(all x y.(Fae(x) -> Numpus(x)) & (Fae(y) -> -Sterpus(y)) & (Fae(y) -> Gorpus(y)))", "all x.(Fae(x) -> (Numpus(x) & -Sterpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1708", "nl": "Stella is an impus and a brimpus and a yumpus.", "fol": "(impus(Stella) & brimpus(Stella) & yumpus(Stella))", "prediction": ["all x.(Stella(x) -> (Impossible(x) & Brimpus(x) & Yumpus(x)))", "(Impossible(Stella) & Brimpus(Stella) & Yumpus(Stella))", "(Issue(Stella,Issue) & Issue(Stella,Issue) & Issue(Stella,Issue) & Issue(Stella,Issue)) & Issue(Stella,Issue))", "(Impose(Stella) & Brimpus(Stella) & Yumpus(Stella))", "all x y.((Stella(x) & Impossible(x) & Brimpus(y) & Yumpus(x)) -> (Impossible(x) & Brimpus(y) & Yumpus(y)))", "Stella is a impus and a brimpus and a yumpus.", "all x y.((Stella(x) & Issue(x) & Brimpus(y)) -> (Issue(x) & Issue(x) & Issue(y)))", "all x.(Stella(x) -> (Impossible(x) & Brimpus(x) & Yumpus(x)))", "all x.(Stella(x) -> (Impose(x) & Brimpus(x) & Yumpus(x)))", "all x.(Stella(x) -> (Issue(x) & IsBrimpus(x) & IsYumpus(x)))", "(Impossible(Stella) & Brimpus(Stella) & Yumpus(Stella))", "(all x.(Stella(x) -> Impossible(x)) & (Brimpus(x) | Yumpus(x)))", "(all x.(Stella(x) -> Issue(x)) & (Brimpus(x) | Yumpus(x))))", "exists x.(Stella(x) & Issue(x) & Isbris(x) & IsBrimpus(x) & IsYumpus(x))", "exists x.(Stella(x) & Impossible(x) & Brimpus(x) & Yumpus(x))", "all x.(Stella(x) -> (Impossible(x) & Brimpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1709", "nl": "Stella is a numpus or a dumpus or a zumpus.", "fol": "(numpus(Stella) | dumpus(Stella) | zumpus(Stella))", "prediction": ["all x.(Stella(x) -> (Numpus(x) | Dumpus(x) | Zumpus(x)))", "((Stella(s) & (Numpus(s) | Dumpus(s) | Zumpus(s)))", "(Numpus(Stella) | Dumpus(Stella) | Zumpus(Stella)))", "all x.(Stella(x) -> (Numpus(x) | Dumpus(x) | Zumpus(x)))", "all x.((Stella(x) & (Numpus(x) | Dumpus(x) | Zumpus(x))) -> Stella(x))", "all x y.((Stella(x) & Numpus(y)) | Dumpus(y) | Zumpus(y))", "all x.(Stella(x) -> (Numpus(x) | Dumpus(x) | Zumpus(x)))", "(Numpus(Stella) | Dumpus(Stella) | Zumpus(Stella)))", "(Numpus,Dumpus,Zumpus)", "all x.((Stella(x) & (Numpus(x) | Dumpus(x) | Zumpus(x))) -> Numpus(x))", "exists x.(Stella(x) & ((Numpus(x) & -Dumpus(x)) | (-Dumpus(x) & Zumpus(x)))))", "all x.(Stella(x) -> (Numpus(x) | Dumpus(x) | Zumpus(x)))", "exists x.(Stella(x) & ((Numpus(x) | Dumpus(x)) | Zumpus(x))))", "(Numpus(Stella) | Dumpus(Stella) | Zumpus(Stella)))", "all x.(Stella(x) -> (Numpus(x) | Dumpus(x) | Zumpus(x)))", "exists x.(Stella(x) & (Nompus(x) | Dumpus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1710", "nl": "Everything that is a yumpus, a shumpus, or a rompus is a lempus, a vumpus, and a numpus.", "fol": "all x. ((yumpus(x) | shumpus(x) | rompus(x)) -> (lempus(x) & vumpus(x) & numpus(x)))", "prediction": ["all x.((Yumpus(x) | Humpus(x) | Rompus(x)) -> (Lempus(x) | Vumpus(x) | Numpus(x)))", "all x.((Yumpus(x) | Shumpus(x) | Rompus(x)) -> (Lempus(x) | Vumpus(x) | Numpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Rompus(x)) -> (Lempus(x) | Vumpus(x) | Numpus(x)))", "all x.(Yumpus(x) | Humpus(x) | Rompus(x)) -> (Lempus(x) | Vumpus(x) | Numpus(x)))", "all x y.((Yumpus(x) | Humpus(x) | Rompus(x)) -> (Lempus(y) | Vumpus(y) | Numpus(y)))", "all x.((Yumpus(x) | Humpus(x) | Rompus(x)) -> (Lempus(x) & Vumpus(x) & Numpus(x)))", "all x y.((Yumpus(x) | Humpus(x) | Rompus(x)) -> (Lempus(y) & Vumpus(y) & Numpus(y)))", "all x.((Yumpus(x) | Shumpus(x) | Rompus(x)) -> (Lempus(x) | Vumpus(x) | Numpus(x)))", "all x.((Yumpus(x) | Shumpus(x) | Rompus(x)) -> (Lempus(x) & Vumpus(x) & Numpus(x)))", "(all x.((Yumpus(x) | Humpus(x) | Rompus(x))) -> (Lempus(x) | Vumpus(x) | Numpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Rompus(x)) -> (Lempus(x) | Vumpus(x) | Numpus(x)))", "(all x.((Yumpus(x) | Humpus(x) | Rompus(x))) -> (Lempus(x) | Vumpus(x) | Numpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Rompus(x)) -> (Lempus(x) & Vumpus(x) & Numpus(x)))", "all x.((Yumpus(x) | Shumpus(x) | Rompus(x)) -> (Lempus(x) | Vumpus(x) | Numpus(x)))", "(all x.((Yumpus(x) | Humpus(x) | Rompus(x))) -> (Lempus(x) | Vumpus(x) | Numpus(x)))", "all x.(Yumpus(x) | Shumpus(x) | Rompus(x)) -> (Lempus(x) & Vumpus(x) & Numpus(x)))"]}
{"id": "prontoqa_train_1711", "nl": "Every gorpus is a lempus and a vumpus and a dumpus.", "fol": "all x. (gorpus(x) -> (lempus(x) & vumpus(x) & dumpus(x)))", "prediction": ["all x.(Gorpus(x) -> (Lempus(x) & Vumpus(x) & Dumpus(x)))", "all x y.((Gorpus(x) & Lempus(y)) -> (Vumpus(x) & Dumpus(x)))", "(all x.(Gorpus(x) -> Lempus(x)) & all y.(Vumpus(y) & Dumpus(y))))", "all x.(Gorpus(x) -> (Lempus(x) & Vumpus(x) & Dumpus(x)))", "all x y.((Gorpus(x) & Lempus(x) & Vumpus(y) & Dumpus(y)) -> (Lempus(x) & Dumpus(y)))", "all x y z.((Gorpus(x) & Lempus(y) & Vumpus(z)) -> (Vumpus(x) & Dumpus(x)))", "all x.(Gorpus(x) -> (Lempus(x) & Vumpus(x) & Dumpus(x)))", "(all x.(Gorpus(x) -> Lempus(x)) & (Vumpus(x) -> Dumpus(x)))", "(all x.(Gorpus(x) -> Lempus(x)) & all y.(Vumpus(y) -> Dumpus(y)))", "all x.(Gorpus(x) -> (Lempus(x) | Vumpus(x) | Dumpus(x)))", "all x.(Gorpus(x) -> (Lempus(x) & Vumpus(x) & Dumpus(x)))", "exists x.(Gorpus(x) & Lempus(x) & Vumpus(x) & Dumpus(x))", "all x.(Gorpus(x) -> (Lempus(x) & Vampus(x) & Dumpus(x)))", "exists x.(Gorpus(x) & Lempus(x) & Vampus(x) & Dumpus(x))", "(all x.(Gorpus(x) -> Lempus(x)) & (Vumpus(x) & Dumpus(x)))", "all x.(Gorpus(x) -> (Limpus(x) | Vumpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_1712", "nl": "Sally is a rompus or a zumpus or a vumpus.", "fol": "(rompus(Sally) | zumpus(Sally) | vumpus(Sally))", "prediction": ["all x.(Sally(x) -> (Rompus(x) | Zumpus(x) | Vumpus(x)))", "(Rompus(Sally) | Zumpus(Sally) | Vumpus(Sally)))", "(rompus(Sally) | Zumpus(Sally) | Vumpus(Sally)))", "all x.(Sally(x) -> (Rompus(x) | Zumpus(x) | Vumpus(x)))", "(Rompus(Sally) | Zumpus(Sally) | Vumpus(Sally)))", "all x.(Sally(x) -> (Rompus(x) | Zumpus(x) | Vumpus(x)))", "all x.(Sally(x) -> ((Rompus(x) | Zumpus(x) | Vumpus(x))))", "all x y.((Sally(x) & Rompus(y)) | (Tompus(y) | Vumpus(y))))", "(Rompus(Sally) | Zumpus(Sally) | Vumpus(Sally)))", "all x.(Sally(x) -> (Rompus(x) | Zumpus(x) | Vumpus(x)))", "exists x.(Sally(x) & ((Rompus(x) | Zumpus(x)) | Vumpus(x))))", "(Rompus(Sally) | Zumpus(Sally) | Vumpus(Sally))", "all x.(Sally(x) -> (rompus(x) | zumpus(x) | vumpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Zumpus(x) | Vampire(x)))", "exists x.(Sally(x) & ((Rompus(x) | Zumpus(x) | Vumpus(x))))", "all x.(Sally(x) -> (Rompus(x) | Zumpus(x) | Vumpus(x)))"]}
{"id": "prontoqa_train_1713", "nl": "Every dumpus is a brimpus, a jompus, and a gorpus.", "fol": "all x. (dumpus(x) -> (brimpus(x) & jompus(x) & gorpus(x)))", "prediction": ["all x.(Dumpus(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "(all x.(Dumpus(x) -> Brimpus(x)) & all y.(Jompus(y) & all z.(Gorpus(z) & -Brimpus(y)) -> Gorpus(z)))", "all x.(Dumps(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x y z.(Dumpus(x) -> (Brimpus(y) | Jompus(y) | Gorpus(z)))", "(all x.(Dumpus(x) -> Brimpus(x)) & all y.(Jompus(y) & all z.(Gorpus(z)) -> Gorpus(z))))", "all x.(Dumpus(x) -> (Brimpus(x) & Jompus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Dumps(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "(all x.(Dumpus(x) -> Brimpus(x)) & all y.(Jompus(y) & all z.(Gorpus(z) & -Brimpus(z))) -> Gorpus(z)))", "(all x.(Dumpus(x) -> Brimpus(x)) & (Jompus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "exists x.(Dumps(x) & (Brimpus(x) | Jompus(x) | Gorpus(x)))", "(all x.(Dumpus(x) -> Brimpus(x)) & all y.(Jompus(y) & all z.(Gorpus(z)) -> Gorpus(z)))", "all x.(Dumpus(x) -> (Brumpus(x) | Jompus(x) | Gorpus(x)))", "exists x.(Dumpus(x) & Brimpus(x) & Jompus(x) & Gorpus(x))"]}
{"id": "prontoqa_train_1714", "nl": "Fae is a dumpus.", "fol": "dumpus(Fae)", "prediction": ["all x.(Fae(x) -> Dumpus(x))", "(Dumpus(Fae))", "Fae is a Dumpus.", "-Dumpus(Fae)", "all x.(Fae(x) -> Dumpus(x))", "Fae is a Dumpus.", "(Dumus(Fae))", "Fae is a dumpus.", "(Dumus(fee) & Dumpus(fee))", "all x.(Fae(x) -> Dumpus(x))", "(Dumpus(Fae))", "(Dumpus(fee) & HasDumps(fee,fee))", "all x.(Fae(x) -> Dumpus(x))", "(Dumus)", "all x.(Fae(x) -> Dumpus(x))", "exists x.(Fae(x) & Dumpus(x))"]}
{"id": "prontoqa_train_1715", "nl": "Fae is a brimpus or a jompus or a grimpus.", "fol": "(brimpus(Fae) | jompus(Fae) | grimpus(Fae))", "prediction": ["all x.(Fae(x) -> (Brimpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Brimpus(x) | Jompus(x) | Grimpus(x)))", "all x y.((Fae(x) & Brimpus(y)) | (Jompus(x) | Grimpus(x))))", "(Brimpus) | Jompus(x) | Grimpus(x))", "(Brimpus(f) | Jompus(f) | Grimpus(f)))", "exists x.(Fae(x) & ((Brimpus(x) & -Brimpus(x)) | (-Brimpus(x) & Jompus(x)) | (-Brompus(x) & Grimpus(x)))))", "all x.(Fae(x) -> (Brimpus(x) | Jompus(x) | Grimpus(x)))", "all x y.((Fae(x) & Brimpus(y)) | (Jompus(y) | Grimpus(y))))", "all x.(Fae(x) -> (Brimpus(x) | Jompus(x) | Grimpus(x)))", "(Brimpus,Brimpus,Jompus,Grimpus)", "(Brimpus(f) | Jompus(f) | Grimpus(f)))", "all x.(Fae(x) -> (Brumpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Fae(x) -> ((Brimpus(x) | Jompus(x) | Grimpus(x))))", "all x.(Fae(x) -> (Brimpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Brimpus(x) | Jompus(x) | Grimpus(x)))", "exists x.(Fae(x) & ((Brumpus(x) | Jompus(x) | Grimpus(x))) -> Brimpus(x))"]}
{"id": "prontoqa_train_1716", "nl": "Everything that is a shumpus, a sterpus, or an impus is a wumpus, a jompus, and a yumpus.", "fol": "all x. ((shumpus(x) | sterpus(x) | impus(x)) -> (wumpus(x) & jompus(x) & yumpus(x)))", "prediction": ["all x.((Shumpus(x) | Sterpus(x) | Imperator(x)) -> (Wumpus(x) & Jompus(x) & Yumpus(x)))", "all x.((Shumpus(x) | Sterpus(x) | IsImpossible(x)) -> (Wumpus(x) & Jompus(x) & Yumpus(x)))", "all x.((Shumpus(x) | Sterpus(x) | Impossible(x)) -> (Wumpus(x) | Jompus(x) | Yumpus(x)))", "all x y.((Shumpus(x) | Sterpus(x) | Imperator(x)) -> (Wumpus(y) & Jompus(y) & Yumpus(y)))", "(all x.((Shumpus(x) | Sterpus(x) | IsImpossible(x))) -> (Wumpus(x) | Jompus(x) | Yumpus(x)))", "all x.((Shumpus(x) | Sterpus(x) | Imperative(x)) -> (Wumpus(x) | Jompus(x) | Yumpus(x)))", "all x.(((Shumpus(x) | Sterpus(x) | Imperator(x))) -> (Wumpus(x) | Jompus(x) | Yumpus(x)))", "all x.((Shumpus(x) | Sterpus(x) | IsImprovement(x)) -> (Wumpus(x) & Jompus(x) & Yumpus(x)))", "(all x.((Shumpus(x) | Sterpus(x) | Impossible(x))) -> (Wumpus(x) | Jompus(x) | Yumpus(x)))", "all x y.((Shumpus(x) | Sterpus(x) | IsImpossible(x)) -> (Wumpus(y) & Jompus(y) & Yumpus(y)))", "all x.(Shumpus(x) | Sterpus(x) | IsImpossible(x)) -> (Wumpus(x) & Jompus(x) & Yumpus(x)))", "all x.((Shumpus(x) | Sterepus(x) | Impossible(x)) -> (Wumpus(x) & Jompus(x) & Yumpus(x)))", "(all x.((Shumpus(x) | Sterpus(x) | Impossible(x))) -> (Wumpus(x) | Jompus(x) | Yumpus(x)))", "all x.((Shumpus(x) | Sterpus(x) | Imperator(x)) -> (Wumpus(x) & Jompus(x) & Yumpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Yumpus(x)) -> (Shumpus(x) | Sterpus(x) | Imperative(x)))", "all x.((Shumpus(x) | Sterepus(x) | IsIssue(x)) -> (Wumpus(x) | Jompus(x) | Yumpus(x)))"]}
{"id": "prontoqa_train_1717", "nl": "Every wumpus is a lempus and a yumpus and a gorpus.", "fol": "all x. (wumpus(x) -> (lempus(x) & yumpus(x) & gorpus(x)))", "prediction": ["all x.(Wumpus(x) -> (Lempus(x) & Yumpus(x) & Gorpus(x)))", "all x y z.((Wumpus(x) & Lempus(y) & Yumpus(z)) -> (Lempus(x) & Yampus(z) & Gorpus(z)))", "all x y.((Wumpus(x) & Lempus(x)) -> (Yumpus(y) & Gorpus(y)))", "(all x.(Wumpus(x) -> Lempus(x)) & all y.(Yumpus(y) -> Gorpus(y)))", "all x.(Wumpus(x) -> (Lempus(x) & Yampus(x) & Gorpus(x)))", "(all x.(Wumpus(x) -> Lempus(x)) & (Yumpus(x) -> Gorpus(x)))", "all x y z.((Wumpus(x) & Lempus(y) & Yumpus(z)) -> (Yumpus(x) & Gorpus(x)))", "all x.(Wumpus(x) -> (Lempus(x) & Yumpus(x) & Gorpus(x)))", "all x y.((Wumpus(x) & Lempus(y)) -> (Yumpus(x) & Gorpus(x)))", "all x.(Wumpus(x) -> (Lempus(x) & Yumpus(x) & Gorpus(x)))", "(all x.(Wumpus(x) -> Lempus(x)) & all y.(Yumpus(y) -> Gorpus(y)))", "exists x.(Wumpus(x) & Lempus(x) & Yumpus(x) & Gorpus(x))", "(all x.(Wumpus(x) -> Lempus(x)) & (Yumpus(x) -> Gorpus(x)))", "exists x.(Wumpus(x) & Lempus(x) & Yampus(x) & Gorpus(x))", "all x.(Wumpus(x) -> (Lempus(x) & Yampus(x) & Gorpus(x)))", "(all x.(Wumpus(x) -> Lempus(x)) & all y.(Yumpus(y) -> Gorpus(y)))"]}
{"id": "prontoqa_train_1718", "nl": "Rex is a jompus, Rex is a lempus, and Rex is not a gorpus.", "fol": "(jompus(Rex) & lempus(Rex) & -gorpus(Rex))", "prediction": ["(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Gorpus(z))))", "all x y z.((Rex(x) & Jompus(y) & Lempus(z)) -> (Jompus(x) & Lempus(x) & -Gorpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Gorpus(x)))", "(all x y z.((Rex(x) & Jompus(y)) -> (Jompus(z) | Lempus(z))) & ((Rex(x) & Gorpus(x)) -> -Gorpus(x)))", "all x.(Rex(x) -> (Jompus(x) | Lempus(x) | -Gorpus(x)))", "all x y z.((Rex(x) & Jompus(y) & Lempus(z)) -> (Jompus(x) | Lempus(z) | -Gorpus(x)))", "(all x.(Rex) -> Jompus(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Gorpus(z))))", "all x y z.((Rex(x) & Jompus(y) & Lempus(z) & -Gorpus(x)) -> (Jompus(x) | Lempus(z) | -Gorpus(z)))", "(all x y z.(Jompus(x) -> Rex)) & (Lempus(y) -> Rex)) & (Gorpus(z) -> -Rex)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Gorpus(z))))", "(all x y z.((Rex(x) & Jompus(y)) -> Rex(x)) & ((Rex(z) & Lempus(z)) -> Rex(z)) & ((Rex(x) & Gorpus(x)) -> -Rex(x))))", "all x y z.((Rex(x) & Jompus(x) & Lempus(y) & Gorpus(z)) -> (Jompus(x) | Lempus(y) & -Gorpus(z)))", "(all x.(Rex) -> Jompus(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Gorpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Gorpus(x)))", "all x.(Rex(x) -> (Jompus(x) | Lempus(x) | -Gorpus(x)))", "all x y z.((Rex(x) & Jompus(y) & Lempus(z) & -Gorpus(x)) -> (Jompus(x) & Lempus(y) & -Gorpus(z)))"]}
{"id": "prontoqa_train_1719", "nl": "Everything that is a lorpus and a wumpus and a gorpus is a grimpus.", "fol": "all x. ((lorpus(x) & wumpus(x) & gorpus(x)) -> grimpus(x))", "prediction": ["all x.((Lorpus(x) & Wumpus(x) & Gorpus(x)) -> Grimpus(x))", "all x y z.((Lorpus(x) & Wumpus(y) & Gorpus(z) & Is(x,y) & Is(x,z)) -> Grimpus(x))", "all x y.((Lorpus(x) & Wumpus(y) & Gorpus(y)) -> Grimpus(x))", "all x.((Lorpus(x) & Wumpus(x) & Gorpus(x)) -> Grimpus(x))", "all x.((Lorpus(x) & Wumpus(x) & Gorpus(x)) -> Grimpus(x))", "(all x.((Lorpus(x) & -Wumpus(x) & -Gorpus(x)) -> Grimpus(x))", "all x y z.((Lorpus(x) & Wumpus(y) & Gorpus(z) & Is(x,y) & Is(x,z)) -> Grimpus(x))", "all x y.((Lorpus(x) & Wumpus(y) & Gorpus(x)) -> Grimpus(x))", "all x.((Lorpus(x) | Wumpus(x) | Gorpus(x)) -> Grimpus(x))", "all x.((Lorpus(x) & Wumpus(x) & Gorpus(x)) -> Grimpus(x))", "all x.((Lorph(x) & Wumpus(x) & Gorpus(x)) -> Grimpus(x))", "(all x.((Lorpus(x) & Wormpus(x) & Gorpus(x)) -> Grimpus(x))", "all x.((Lorpus(x) & Wumpus(x) & Gorpus(x)) -> Grimpus(x))", "all x.((Larpus(x) | Wumpus(x) | Gorpus(x)) -> Grimpus(x))", "all x.((Lorpus(x) & Wumpus(x) & Gorpus(x)) -> Grimpus(x))", "all x.((Lorpus(x) & Wormpus(x) & Gorpus(x)) -> Grimpus(x))"]}
{"id": "prontoqa_train_1720", "nl": "Wren is a grimpus or a sterpus or a shumpus.", "fol": "(grimpus(Wren) | sterpus(Wren) | shumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Grimpus(x) | Sterpus(x) | Humpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & ((Wren(x) & -Sterpus(x)) | (-Wren(x) & -Shumpus(x)))))", "all x.(Wren(x) -> (Grimpus(x) | Sterpus(x) | Humpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & ((Wren(x) & -Sterpus(x)) | (-Wren(x) & -Shumpus(x)))))", "(Smokey(Wren) | Sterpus(Wren) | Humpus(Wren)))", "all x.(Wren(x) -> (Smooch(x) | Sterpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Grimpus(x) | Sterpus(x) | Humpus(x)))", "all x y.(Wren(x) -> (Grimpus(x) | Sterpus(x) | Humpus(y)))", "all x.(Wren(x) -> (Smokey(x) | Sterpus(x) | Humpus(x)))", "all x y.(Wren(x) -> (Grimpus(x) | Sterpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Grimpus(x) | Sterpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Grimpus(x) | Sterpus(x) | Humpus(x)))", "exists x.(Wren(x) & ((Grimpus(x) & (Sterpus(x) | Humpus(x)))))", "all x.(Wren(x) -> (Grimpus(x) | Sterepus(x) | Humpus(x)))", "all x.(Wren(x) -> (Sgrimpus(x) | Sterpus(x) | Humpus(x)))", "exists x.(Wren(x) & Grimpus(x) & (Sterpus(x) | Shumpus(x)))"]}
{"id": "prontoqa_train_1721", "nl": "Everything that is a gorpus, a shumpus, and a tumpus is a wumpus, a lorpus, and a jompus.", "fol": "all x. ((gorpus(x) & shumpus(x) & tumpus(x)) -> (wumpus(x) & lorpus(x) & jompus(x)))", "prediction": ["all x.((Gorpus(x) | Humpus(x) | Tumpus(x)) -> (Wumpus(x) & Lorpus(x) & Jompus(x)))", "all x.((Gorpus(x) | Shumpus(x) | Tumpus(x)) -> (Wumpus(x) & Lorpus(x) & Jompus(x)))", "all x y.((Gorpus(x) & Humpus(y) & Tumpus(x)) -> (Wumpus(x) & Lorpus(x) & Jompus(x)))", "all x y z.((Gorpus(x) & Humpus(y) & Tumpus(z) & Gorpus(x) & Shumpus(y) & Tumpus(z)) -> (Wumpus(x) & Lorpus(x) & Jompus(x)))", "all x.((Gorpus(x) | Humpus(x) | Tumpus(x)) -> (Wumpus(x) | Lorpus(x) | Jompus(x)))", "all x y.((Gorpus(x) & Shumpus(y) & Tumpus(x)) -> (Wumpus(y) | Lorpus(y) | Jompus(y)))", "all x.((Gorpus(x) | Shumpus(x) | Tumpus(x)) -> (Wumpus(x) | Lorpus(x) | Jompus(x)))", "(all x.((Gorpus(x) | Shumpus(x) | Tumpus(x))) -> (Wumpus(x) | Lorpus(x) | Jompus(x)))", "all x.((Gorpus(x) & Humpus(x) & Tumpus(x)) -> (Wumpus(x) & Lorpus(x) & Jompus(x)))", "(all x.((Gorpus(x) | Shumpus(x) | Tumpus(x))) -> (Wumpus(x) & Lorpus(x) & Jompus(x)))", "all x.((Gorpus(x) | Humpus(x) | Tumpus(x)) -> (Wumpus(x) & Lorompus(x) & Jompus(x)))", "all x.((Gorpus(x) & Humpus(x) & Tumpus(x)) -> (Wumpus(x) | Lorpus(x) | Jompus(x)))", "(all x.((Gorpus(x) | Humpus(x)) & Tumpus(x)) -> (Wumpus(x) | Lorpus(x) | Jompus(x)))", "all x.((Gorpus(x) | Shumpus(x) | Tumpus(x)) -> (Wumpus(x) & Lorpus(x) & Jompus(x)))", "all x.(Gorpus(x) & Humpus(x) & Tumpus(x)) -> (Wumpus(x) & Lorompus(x) & Jompus(x)))", "all x.((Gorpus(x) | Humpus(x) | Tumpus(x)) -> (Wumpus(x) | Lorpus(x) | Jompus(x)))"]}
{"id": "prontoqa_train_1722", "nl": "Jompuses are yumpuses, brimpuses, and lempuses.", "fol": "all x. (jompus(x) -> (yumpus(x) & brimpus(x) & lempus(x)))", "prediction": ["all x.(Jompuse(x) -> (Yumpus(x) | Brimpuse(x) | Lempuse(x)))", "(all x.(Jompuse(x) -> (Yumpus(x) | Brimpuse(x) | Lempuse(x))))", "all x y z.((Jompuse(x) & Yumpuse(y) & Brimpuse(z)) -> (Yumpus(y) | Lempuse(z)))", "all x y.((Jompuse(x) & Yumpuse(y)) -> (Yumpus(y) | Brimpuse(y) | Lempuse(y)))", "all x.(Jompuse(x) -> (Yumpus(x) | Brimpuse(x) | Lempuse(x)))", "(yumpuses(y) | brimpuses(y) | lempuses(y))", "(Yumpuses(jompuse) | Brimpuses(jompuse) | Lempuses(jompuse))", "(all x.(Jompuse(x) -> Yumpuse(x)) & all y.(Brimpuse(y) & all z.(Lempuse(z) & Yumpus(y)) -> Lempuse(z)))", "all x.(Jimpus(x) -> (Yumpus(x) | Brimpuse(x) | Lempuse(x)))", "(all x.(Jompuse(x) -> (Yumpus(x) | Brimpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Yumpus(x) | Brimpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Yumpus(x) | Brimpus(x) | Lempuse(x)))", "all x.(Jimpus(x) -> (Yumpus(x) | Brimpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Yumpus(x) | Brimpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Yumpus(x) | Brimpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Yumpus(x) | Brimpus(x) | Lempuse(x)))"]}
{"id": "prontoqa_train_1723", "nl": "Stella is a vumpus or a lempus or a sterpus.", "fol": "(vumpus(Stella) | lempus(Stella) | sterpus(Stella))", "prediction": ["all x.(Stella(x) -> (Vumpus(x) | Lempus(x) | Sterpus(x)))", "(Vumpus(Stella) | Lempus(Stella) | Sterpus(Stella)))", "all x.(Stella(x) -> (Vumpus(x) | Lempus(x) | Sterpus(x)))", "all x y.((Stella(x) & Vumpus(y)) | (Lempus(y) | Sterpus(y))))", "(Vumpus(Stella) | Lempus(Stella) | Sterpus(Stella)))", "all x.(Stella(x) -> (Vumpus(x) | Lempus(x) | Sterpus(x)))", "(Vumpus(s) | Lempus(s) | Sterpus(s)))", "exists x.(Vumpus(x) | Lempus(x) | Sterpus(x))", "all x.(Stella(x) -> (Vumpus(x) | Lempus(x) | Sterpus(x)))", "(Vumpus,Lempus,Sterpus)", "(Vumpus(Stella) | Lempus(Stella) | Sterpus(Stella))", "exists x.(Vumpus(x) | Lempus(x) | Sterpus(x))", "all x.(Stella(x) -> (Vumpus(x) | Lempus(x) | Sterpus(x)))", "exists x.(Stella(x) & ((Vumpus(x) | Lempus(x) | Sterpus(x))))", "all x.(Stella(x) -> (Vumpus(x) | Lempus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vimpus(x) | Lempus(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1724", "nl": "Tumpuses are not grimpuses.", "fol": "all x. (tumpus(x) -> -grimpus(x))", "prediction": ["all x.(Tumpus(x) -> -Grimpus(x))", "all x.(Tumpuse(x) -> -Grimpus(x))", "all x.(Tumpus(x) -> -Grimpus(x))", "(all x.(Tumpuse(x) -> -Grimpus(x)))", "-Grimpuse(tumpuse)", "all x.(Tumpuse(x) -> -Grimpus(x))", "all x.(Tumpus(x) -> -Grimpus(x))", "(all x.(Tumpus(x) -> -Grimpus(x)))", "-Smoky(tumpuse(t)", "(all x.(Tumpuse(x) -> -Grimpuse(x)))", "all x.(Tumulus(x) -> -Grimpus(x))", "all x.(Tumpuse(x) -> -Smoothpuse(x))", "(all x.(Tumpus(x) -> -Scrappus(x)))", "all x.(Tumpus(x) -> -Grimpus(x))", "all x.(Tumulus(x) -> -Grimpuse(x))", "all x.(Tumpus(x) -> -Smoothpuse(x))"]}
{"id": "prontoqa_train_1725", "nl": "Each brimpus is not a zumpus.", "fol": "all x. (brimpus(x) -> -zumpus(x))", "prediction": ["all x.(Brimpus(x) -> -Zumpus(x))", "all x.(Brimpus(x) -> -Zumpus(x))", "(-Zumpus(brimpus) & -Zumpus(brimpus))", "all x.(Brumpus(x) -> -Zumpus(x))", "all x y.((Brimpus(x) & Zumpus(y)) -> -Brimpus(x))", "(-Zumpus(brimpus)", "all x y.((Brimpus(x) & Zumpus(y) & -Brimpus(x)) -> -Brimpus(x))", "all x.(Brimpus(x) -> -Zumpus(x))", "all x.(Brumpus(x) -> -Zumpus(x))", "all x.(Brumpus(x) -> -Zumpus(x))", "all x.(Brimpus(x) -> -Zumpus(x))", "all x.(Brumpus(x) -> -Tompus(x))", "all x.(Brimpus(x) -> -Zumpus(x))", "exists x.(Brimpus(x) & -Zombipus(x))", "all x.(Brimpus(x) -> -Tompus(x))", "exists x.(Brampus(x) & -Zimpus(x))"]}
{"id": "prontoqa_train_1726", "nl": "Everything that is a sterpus, an impus, or a shumpus is a lempus.", "fol": "all x. ((sterpus(x) | impus(x) | shumpus(x)) -> lempus(x))", "prediction": ["all x.((Sterpus(x) | Impossible(x) | Humpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Imperator(x) | Humpus(x)) -> Lempus(x))", "all x.(((Sterpus(x) | Impossible(x) | Humpus(x))) -> Lempus(x))", "all x.((Sterepus(x) | Impossible(x) | Humpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | IsImpossible(x) | IsShumpus(x)) -> Lempus(x))", "all x y.((Sterpus(x) | Impossible(x) | Humpus(x)) -> Lempus(y))", "all x.((Sterpus(x) | Imperempt(x) | Shumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Imperator(x) | Shumpus(x)) -> Lempus(x))", "all x.(((Sterepus(x) | Impossible(x) | Humpus(x))) -> Lempus(x))", "all x y.((Sterpus(x) | Impossible(x) | Humpus(x)) -> Lempus(y))", "all x.((Sterepus(x) | Impossible(x) | Humpus(x)) -> Lempus(x))", "all x.((Sterepus(x) | Imperative(x) | Humpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | IsImpossible(x) | IsShumpus(x)) -> Lempus(x))", "(all x.((Sterpus(x) | Imperator(x) | Shumpus(x))) -> Lempus(x))", "all x.((Sterpus(x) | Imperator(x) | Humpus(x)) -> Lempus(x))", "all x.((Sterepus(x) | Impossible(x) | Humpus(x)) -> Lempus(x))"]}
{"id": "prontoqa_train_1727", "nl": "Sally is not a yumpus, Sally is a lempus, and Sally is not a numpus.", "fol": "(-yumpus(Sally) & lempus(Sally) & -numpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Yumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> -Numpus(z))))", "all x.(Sally(x) -> (-Yumpus(x) & Lempus(x) & -Numpus(x)))", "all x y z.((Sally(x) & Yumpus(y) & Lempus(z)) -> (-Yumpus(x) & -Numpus(x)))", "(all x.(Sally(x) -> -Yumpus(x)) & (Lempus(x) & -Numpus(x)))", "(all x y z.((Sally(x) & Yumpus(y)) -> -Yumpus(x)) & ((Sally(z) & Lempus(z)) -> -Numpus(z)))", "all x y z.((Sally(x) & Yumpus(y) & Lempus(z)) -> (-Yumpus(x) & Lempus(x) & -Numpus(x)))", "(-Yumpus(Sally) & Lempus(Sally) & -Numpus(Sally))", "(all x.(Sally(x) -> -Yumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> -numpus(z))))", "all x.(Sally(x) -> (-Yumpus(x) & Lempus(x) & -Numpus(x)))", "(-Yumpus(s) | Lempus(s) | Numpus(s)))", "(all x.(Sally(x) -> -Yumpus(x)) & (Lempus(x) & -Numpus(x)))", "all x y z.((Sally(x) & Yumpus(y) & Lempus(z)) -> (-Yumpus(x) | (-Yumpus(x) & Lempus(z) & -Numpus(z))))", "all x y z.((Sally(x) & Yumpus(y) & Lempus(z)) -> (-Yumpus(x) & -Numpus(x)))", "(all x.(Sally(x) -> -Yumpus(x)) & (Sally(x) -> Lempus(x)) & (Sally(x) -> -Numpus(x)))", "all x.(Sally(x) -> (-Yumpus(x) & Lempus(x) & -Numpus(x)))", "(all x.(Sally(x) -> -Yumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> -Numpus(z))))"]}
{"id": "prontoqa_train_1728", "nl": "Rompuses are shumpuses and jompuses and numpuses.", "fol": "all x. (rompus(x) -> (shumpus(x) & jompus(x) & numpus(x)))", "prediction": ["all x.(Rompus(x) -> (Shumpus(x) & Jompuse(x) & Numpuse(x)))", "all x y.((Rompus(x) & Shumpus(y)) -> (Jompuse(x) | Numpuse(x)))", "(all x.(Rompus(x) -> Shumpuse(x)) & all y.(Jompuse(y) | Numpuse(y))))", "all x.(Rompus(x) -> (Shumpus(x) & Jompuse(x) & Numpuse(x)))", "(all x.(Rompuse(x) -> Shumpuse(x)) & all y.(Jompuse(y) | Numpuse(y))))", "all x y z.((Rompuse(x) & Shumpus(y) & Jompuse(z)) -> (Shumpus(x) | Numpuse(z)))", "(all x.(Rompus(x) -> Shumpus(x)) & all y.(Jompuse(y) | Numpuse(y))))", "all x.(Rompus(x) -> (Shumpus(x) | Jompuse(x) | Numpuse(x)))", "all x y.((Rompus(x) & Shumpus(y)) -> (Jompuse(x) | Numpuse(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Jompuse(x) & Numpuse(x)))", "(all x.(Rompuse(x) -> Shumpuse(x)) & all y.(Jompuse(y) | Numpuse(y))))", "all x.(Rompus(x) -> (Shumpus(x) & (Jompuse(x) | Numpuse(x))))", "(all x.(Rompus(x) -> Shumpus(x)) & (Jompuse(x) | Numpuse(x)))", "all x.(Rompus(x) -> (Shumpuse(x) & Jompuse(x) & Numpuse(x)))", "all x.(Rompuse(x) -> (Shumpus(x) | Jompuse(x) | Numpuse(x)))", "(all x.(Rompuse(x) -> Shumpuse(x)) & all y.(Jompus(y) | Numpus(y))))"]}
{"id": "prontoqa_train_1729", "nl": "Polly is a wumpus or a shumpus or an impus.", "fol": "(wumpus(Polly) | shumpus(Polly) | impus(Polly))", "prediction": ["all x.(Polly(x) -> (Wumpus(x) | Humpus(x) | Imperator(x)))", "(Wumpus(poly) | Humpus(poly) | Imperator(poly)))", "all x.(Polly(x) -> (Wumpus(x) | Humpus(x) | Imperator(x)))", "all x y.((Polly(x) & Wumpus(y)) | (Shumpus(x) | Imperator(x))))", "(Wumpus) | Humpus(Shumpus) | Imperator(Polly))", "all x.(Polly(x) -> (Wumpus(x) | Humpus(x) | Imperator(x)))", "(Wumpus(poly) | Humpus(poly) | Imperator(poly)))", "all x.(Polly(x) -> (Wumpus(x) | Humpus(x) | Imperator(x)))", "all x.(Polly(x) -> (Wumpus(x) | Shumpus(x) | Imperator(x)))", "all x.(Polly(x) -> (Wumpus(x) | Humpus(x) | Imperator(x)))", "(all x.(Polly(x) -> Wumpus(x)) | (Shumpus(x) | Imperator(x))))", "(Wumpus(poly) | Humpus(poly) | Imperator(poly))", "all x.(Poly(x) -> (Wumpus(x) | Humpus(x) | Issue(x)))", "exists x.(Polly(x) & (Wumpus(x) | Humpus(x) | Impossible(x)))", "all x.(Polly(x) -> (Wumpus(x) | Shumpus(x) | Imperator(x)))", "exists x.(Polly(x) & (Wumpus(x) | Humpus(x) | Issue(x)))"]}
{"id": "prontoqa_train_1730", "nl": "Everything that is a numpus and a tumpus and an impus is a jompus and a gorpus and a yumpus.", "fol": "all x. ((numpus(x) & tumpus(x) & impus(x)) -> (jompus(x) & gorpus(x) & yumpus(x)))", "prediction": ["all x.((Nompus(x) & Tumpus(x) & Impossible(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Numpus(x) & Tumpus(x) & Imperator(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Nompus(x) | Tumpus(x) | Impossible(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x y.((Numpus(x) & Tumpus(x) & Impossible(x)) -> (Jompus(y) & Gorpus(y) & Yumpus(y)))", "all x.((Numpus(x) & Tumpus(x) & Issue(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x y.((Numpus(x) & Tumpus(y) & Issue(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Nompus(x) | Tumpus(x) | Imperator(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x y.((Nompus(x) & Tumpus(x) & Imperator(x)) -> (Jompus(y) & Gorpus(y) & Yumpus(y)))", "(all x.((Nompus(x) & Tumpus(x) & Impossible(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Numpus(x) & Tumpus(x) & Impossible(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x y.((Numpus(x) & Tumpus(x) & Impossible(x)) -> (Jompus(y) & Gorpus(y) & Yumpus(y)))", "(all x.((Numpus(x) & Tumpus(x) & Issue(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Numpus(x) & Tumpus(x) & Imperator(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "(all x.((Numpus(x) & Tumpus(x) & Imperator(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Numpus(x) | Tumpus(x) | Impossible(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Numpus(x) & Tumpus(x) & Impossible(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1731", "nl": "Everything that is a yumpus, a rompus, or a shumpus is a gorpus, a lempus, and a wumpus.", "fol": "all x. ((yumpus(x) | rompus(x) | shumpus(x)) -> (gorpus(x) & lempus(x) & wumpus(x)))", "prediction": ["all x.((Yumpus(x) | Rompus(x) | Humpus(x)) -> (Gorpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Yumpus(x) | Rompus(x) | Shumpus(x)) -> (Gorpus(x) | Lempus(x) | Wumpus(x)))", "all x.((Yumpus(x) | Rompus(x) | Humpus(x)) -> (Gorpus(x) | Lempus(x) | Wumpus(x)))", "all x.((Yumpus(x) | Rompus(x) | Shumpus(x)) -> (Gorpus(x) & Lempus(x) & Wumpus(x)))", "all x y.((Yumpus(x) | Rompus(x) | Humpus(x)) -> (Gorpus(y) | Lempus(y) | Wumpus(y)))", "all x.(Yumpus(x) | Rompus(x) | Humpus(x)) -> (Gorpus(x) & Lempus(x) & Wumpus(x)))", "all x y.((Yumpus(x) | Rompus(x) | Shumpus(x)) -> (Gorpus(y) | Lempus(y) | Wumpus(y)))", "all x.(Yumpus(x) | Rompus(x) | Humpus(x)) -> (Gorpus(x) | Lempus(x) | Wumpus(x)))", "(all x.((Yumpus(x) | Rompus(x) | Humpus(x))) -> (Gorpus(x) & Lempus(x) & Wumpus(x)))", "(all x.((Yumpus(x) | Rompus(x) | Humpus(x))) -> (Gorpus(x) | Lempus(x) | Wumpus(x)))", "all x.((Yumpus(x) | Rompus(x) | Humpus(x)) -> (Gorpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Yumpus(x) | Rompus(x) | Shumpus(x)) -> (Gorpus(x) | Lempus(x) | Wumpus(x)))", "all x.((Yumpus(x) | Rompus(x) | Humpus(x)) -> (Gorpus(x) | Lempus(x) | Wumpus(x)))", "all x.((Yumpus(x) | Rompus(x) | Shumpus(x)) -> (Gorpus(x) & Lempus(x) & Wumpus(x)))", "all x.(Yumpus(x) | Rompus(x) | Shumpus(x)) -> (Gorpus(x) | Lempus(x) | Wumpus(x)))", "all x.((Yumpus(x) | Rompus(x) | Humpus(x)) -> (Gorpus(x) & Lempus(x) & Wumpus(x)))"]}
{"id": "prontoqa_train_1732", "nl": "Lorpuses are rompuses and tumpuses and numpuses.", "fol": "all x. (lorpus(x) -> (rompus(x) & tumpus(x) & numpus(x)))", "prediction": ["all x.(Lorpus(x) -> (Rompus(x) | Tumpus(x) | Numpus(x)))", "(all x.(Lorpuse(x) -> Rompus(x)) & all y.(Tumpus(y) & Numpuse(y)))", "all x y.((Lorpuse(x) & Rompus(y)) -> (Tumpus(x) & Numpuse(x)))", "all x.(Lorpus(x) -> (Rompus(x) & Tumpus(x) & Numpus(x)))", "all x.(Lorpuse(x) -> (Rompus(x) | Tumpus(x) | Numpus(x)))", "all x y z.((Lorpuse(x) & Rompus(y) & Tumpus(z)) -> (Rompus(x) | Tumpus(z) | Numpus(z)))", "(all x.(Lorpuse(x) -> Rompus(x)) & (Tumpus(x) | Numpus(x)))", "all x.(Lorpuse(x) -> (Rompus(x) & Tumpus(x) & Numpus(x)))", "all x y.((Lorpuse(x) & Rompus(y)) -> (Tumpus(x) | Numpus(x)))", "all x.(Lorpus(x) -> (Rompus(x) | Tumpus(x) | Numpus(x)))", "(all x.(Lorpuse(x) -> Rompus(x)) & all y.(Tumpus(y) & Numpus(y)))", "(all x.(Lorpuse(x) -> Rompuse(x)) & all y.(Tumpuse(y) & Numpuse(y)))", "(all x y.(Lorpus(x) -> Rompuse(x)) & (Tumpus(y) | Numpus(y)))", "all x.(Lorpus(x) -> (Rompus(x) | Tumpus(x) | Numpuse(x)))", "all x.(Lorpuse(x) -> (Rompus(x) | Tumpus(x) | Numpuse(x)))", "(all x.(Lorpuse(x) -> Rompus(x)) & (Tumpus(x) | Numpuse(x)))"]}
{"id": "prontoqa_train_1733", "nl": "Sally is a tumpus, a wumpus, or a numpus.", "fol": "(tumpus(Sally) | wumpus(Sally) | numpus(Sally))", "prediction": ["all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numpus(x)))", "(Tumpus(Sally) | Wumpus(Sally) | Numpus(Sally))", "all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numpus(x)))", "(Tumpus(s) | Wumpus(s) | Numpus(s)))", "(Tumpus,Wumpus,Numpus) | Tumpus(Wumpus) | Numpus(Wumpus))", "all x.((Sally(x) & (Tumpus(x) | Wumpus(x) | Numpus(x))) -> (Tumpus(x) | Wumpus(x) | Numpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) | (Wumpus(x) | Numpus(x))))", "all x y.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numpus(y)))", "exists x.(Sally(x) & ((Tumpus(x) & -Wumpus(x)) | (-Tumpus(x) & Wumpus(x)))))", "all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numpus(x)))", "exists x.(Sally(x) & ((Tumpus(x) | Wumpus(x)) | Numpus(x))))", "all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numpus(x)))", "exists x.(Sally(x) & (Tumpus(x) | Wumpus(x) | Numpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numpus(x)))"]}
{"id": "prontoqa_train_1734", "nl": "Shumpuses are not impuses.", "fol": "all x. (shumpus(x) -> -impus(x))", "prediction": ["all x.(Shupuse(x) -> -Issue(x))", "all x.(Shumpus(x) -> -Issue(x))", "(-Issue(shm) & Shumpuse(s))", "all x.(Shutup(x) -> -Impossible(x))", "all x y.((Shupuse(x) & Issue(y)) -> -Issue(x,y))", "-Issues(shutupuse)", "all x.(Shampoos(x) -> -Impossible(x))", "all x.(Shupuse(x) -> -Issue(x))", "-Issues(shm)", "(all x.(Shumpus(x) -> -Impenet(x)))", "all x.(Shutup(x) -> -Impossible(x))", "(all x.(Shumpus(x) -> -Impossible(x)))", "all x.(Shutupuse(x) -> -Impossible(x))", "all x.(Shumpus(x) -> -Issues(x))", "all x.(Shupuse(x) -> -Impossible(x))", "all x.(Shumpuse(x) -> -Impossible(x))"]}
{"id": "prontoqa_train_1735", "nl": "Gorpuses are wumpuses.", "fol": "all x. (gorpus(x) -> wumpus(x))", "prediction": ["all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x y.((Gorpuse(x) & Wumpus(y)) -> Wumpus(x))", "(all x.(Gorpuse(x) -> Wumpus(x)))", "(Wumpuse(gorpus) & Wumpus(gorpus))", "all x.(Gorpuse(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x y.((Gorpuse(x) & Wumpus(y)) -> Wumpus(x))", "(Wumpuse(gorpus) & Wumpus(gorpus))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpuse(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpuse(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wampus(x))", "all x.(Gorpuse(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_1736", "nl": "Each numpus is a tumpus.", "fol": "all x. (numpus(x) -> tumpus(x))", "prediction": ["all x.(Numpus(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumpus(x))", "(all x.(Numpus(x) -> Tumpus(x)))", "all x y.((Numpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Nompus(x) -> Tumpus(x))", "all x.(Numerus(x) -> Tumpus(x))", "all x y.((Numpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Numpus(x) -> Tumpus(x))", "exists x.(numpus(x) & Tumpus(x))", "all x.(Numpus(x) -> Tumpus(x))", "exists x.(numpus(x) & Tumpus(x))", "all x.(Nompus(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumpus(x))", "exists x.(Nompus(x) & Tumulus(x))", "exists x.(Numpus(x) & Tumpus(x))"]}
{"id": "prontoqa_train_1737", "nl": "Rompuses are impuses.", "fol": "all x. (rompus(x) -> impus(x))", "prediction": ["all x.(Rompus(x) -> Issue(x))", "all x y.((Rompus(x) & Issue(y)) -> Issue(x,y))", "all x.(Rompus(x) -> Issue(x))", "(Issue(rompus) & Issue(rompus))", "all x.(Rompus(x) -> Issue(x))", "all x y.((Rompus(x) & Issue(y)) -> Issue(x,y))", "All x.((Rompuse(x) & Issue(x)) -> Issue(x))", "all x.(Rompuse(x) -> Issue(x))", "(Issue(rompus) & Issue(rompus))", "all x.(Rompus(x) -> Issues(x))", "all x.(Rompes(x) -> Isolated(x))", "all x y.((Rompus(x) & Issue(y)) -> Issue(x,y))", "all x.(Rompus(x) -> Impects(x))", "all x.(Romes(x) -> Ispose(x))", "all x.(Rompuse(x) -> Issue(x))", "all x.(Rompus(x) -> Ispose(x))"]}
{"id": "prontoqa_train_1738", "nl": "Stella is a dumpus, Stella is not a wumpus, and Stella is a zumpus.", "fol": "(dumpus(Stella) & -wumpus(Stella) & zumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Wumpus(x)) & (Stella(x) -> Zumpus(x)))", "all x y z.((Stella(x) & Dumpus(x) & Stella(y) & Zumpus(z)) -> (-Wumpus(y) & Dumpus(y) & Zumpus(z)))", "(all x y z.((Stella(x) & Dumpus(y)) -> (Dumpus(z) & -Wumpus(z)) & ((Stella(x) & Zumpus(x)) -> Zumpus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Wumpus(x)) & (Stella(x) -> Zumpus(x)))", "all x y z.((Stella(x) & Dumpus(x) & Stella(y) & Zumpus(z)) -> (-Wumpus(y) & Dumpus(z) & Zumpus(y)))", "all x.(Stella(x) -> (Dumps(x) & -Wumpus(x) & Zumpus(x)))", "all x.(Stella(x) -> (Dumpus(x) & -Wumpus(x) & Zumpus(x)))", "(all x y z.((Stella(x) & Dumpus(x)) -> (Dumpus(y) & -Wumpus(z))) & ((Stella(x) & Zumpus(x)) -> Zumpus(x)))", "all x y z.((Stella(x) & Dumpus(y) & Stella(z)) -> (-Wumpus(z) & Zumpus(z)))", "exists x.(Stella(x) & Dumpus(x) & -Wumpus(x) & Zumpus(x))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Wumpus(x)) & (Stella(x) -> Zumpus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> -Wumpus(y)) & all z.(Stella(z) -> Zumpus(z))))", "(all x y z.((Stella(x) & Dumpus(y)) -> (Dumpus(x) | -Wumpus(y)) | Zumpus(z)))", "all x y z.((Stella(x) & Dumpus(x) & Stella(y) & Zumpus(z)) -> (-Wumpus(y) & -Dumpus(y) & Zumpus(z)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Wumpus(x)) & (Stella(x) -> Zumpus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Wumpus(x)) & (Stella(x) -> Zumpus(x)))"]}
{"id": "prontoqa_train_1739", "nl": "Stella is a grimpus and a zumpus and a numpus.", "fol": "(grimpus(Stella) & zumpus(Stella) & numpus(Stella))", "prediction": ["(all x.(Stella(x) -> Grimpus(x)) & (Tompus(x) | Numpus(x))))", "all x.(Stella(x) -> (Grimpus(x) & Zumpus(x) & Numpus(x)))", "all x y.((Stella(x) & Grimpus(y)) -> (Tompus(x) & Numpus(x)))", "(Stella isGrimpus(Stella) & Zumpus(Stella) & Numpus(Stella))", "all x y z.((Stella(x) & Grimpus(y) & Zumpus(z)) -> (Grimpus(x) & Numpus(x)))", "(Gruppus(Stella) & Zumpus(Stella) & Numpus(Stella))", "(all x.(Stella(x) -> Grimpus(x)) & (Tompus(x) | Numpus(x))))", "all x.(Stella(x) -> (Grimpus(x) & Zumpus(x) & Numpus(x)))", "(all x.(Stella(x) -> Grimpus(x)) & all y.(Tompus(y) & Numpus(y))))", "all x.(Stella(x) -> (Grimpus(x) | Zumpus(x) | Numpus(x)))", "exists x.(Stella(x) & Grimpus(x) & Zumpus(x) & Numpus(x))", "(All x.(Stella(x) -> Grupus(x)) & (Tompus(x) | Numpus(x))))", "all x.(Stella(x) -> (Grimpus(x) & Zumpus(x) & Numpus(x)))", "all x.(Stella(x) -> (Grimpus(x) | Zumpus(x) | Numpus(x)))", "(all x.(Stella(x) -> Grimpus(x)) & (Zumpus(x) | Numpus(x))))", "exists x.(Stella(x) & Grimpus(x) & Zumpus(x) & Numpus(x))"]}
{"id": "prontoqa_train_1740", "nl": "Stella is not a rompus, Stella is not a gorpus, and Stella is a tumpus.", "fol": "(-rompus(Stella) & -gorpus(Stella) & tumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Rompus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Tumpus(x)))", "(all x.(Stella(x) -> -Rompus(x)) & all y.(Stella(y) -> -Gorpus(y)) & all z.(Stella(z) -> Tumpus(z))))", "all x y z.((Stella(x) & Rompus(y) & Gorpus(z)) -> (-Rompus(x) & -Gorpus(y) & -Tumpus(z)))", "(all x.(Rompus(x) -> -Rompus(x)) & (Gorpus(x) -> -Rompus(x)) & (Tumpus(x) -> -Tumpus(x)))", "(all x y z.((Stella(x) & Rompus(y)) -> -Rompus(x)) & ((Stella(z) & Gorpus(z))) -> Tumpus(z)))", "all x.(Stella(x) -> (-Rompus(x) & -Gorpus(x) & -Tumpus(x)))", "all x y z.((Stella(x) & Rompus(y) & Gorpus(z)) -> (-Rompus(x) & -Gorpus(y) & Tumpus(z)))", "(all x.(Stella(x) -> -Rompus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Tumpus(x)))", "(all x.(Stella(x) -> -Rompus(x)) & all y.(Stella(y) -> -Gorpus(y))) & all z.(Stella(z) -> Tumpus(z)))", "all x y z.((Stella(x) & Rompus(y) & Gorpus(z)) -> (-Rompus(x) & -Gorpus(y) & Tumpus(z)))", "(all x y z.((Stella(x) & Rompus(y)) -> -Rompus(x)) & ((Stella(z) & Gorpus(z))) -> Tumpus(z)))", "all x.(Stella(x) -> (-Rompus(x) & -Gorpus(x) & -Tumpus(x)))", "all x y z.((Rompus(x) & Gorpus(y) & Tumpus(z)) -> (-Rompus(x) & -Gorpus(y) & -Tumpus(z)))", "(all x y z.((Stella(x) & Rompus(y)) -> -Rompus(x)) & ((Stella(z) & Gorpus(z))) -> Tumpus(z)))", "all x y z.((Stella(x) & Rompus(y) & Gorpus(z)) -> (-Rompus(x) & -Gorpus(y) & Tumpus(z)))", "(all x.(Stella(x) -> -Rompus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Tumpus(x)))"]}
{"id": "prontoqa_train_1741", "nl": "Everything that is a dumpus or a numpus or a tumpus is an impus, a lempus, and a brimpus.", "fol": "all x. ((dumpus(x) | numpus(x) | tumpus(x)) -> (impus(x) & lempus(x) & brimpus(x)))", "prediction": ["all x.((Dumpus(x) | Numpus(x) | Tumpus(x)) -> (Impos(x) & Lempus(x) & Brimpus(x)))", "all x.((Dumps(x) | Numpus(x) | Tumpus(x)) -> (Impos(x) & Lempus(x) & Brimpus(x)))", "all x.((Dumpus(x) | Numpus(x) | Tumpus(x)) -> (Impos(x) & Lempus(x) & Brimpus(x)))", "all x y.((Dumpus(x) | Numpus(x) | Tumpus(x)) -> (Impossible(y) & Lempus(y) & Brimpus(y)))", "all x.((Dumpus(x) | Numpus(x) | Tumpus(x)) -> (Impossible(x) & Lempus(x) & Brimpus(x)))", "(all x.((Dumpus(x) | Numpus(x) | Tumpus(x))) -> Issue(x)) & all y.((Lempus(y) & Brimpus(y)) -> Issue(y)))", "all x.((Dumps(x) | Numpus(x) | Tumpus(x)) -> (Impos(x) & Lempus(x) & Brimpus(x)))", "(all x.((Dumpus(x) | Numpus(x) | Tumpus(x))) -> (Impos(x) & Lempus(x) & Brimpus(x)))", "all x.(((Dumpus(x) | Numpus(x) | Tumpus(x))) -> (Impos(x) | Lempus(x) | Brimpus(x)))", "(all x.((Dumpsus(x) | Numpus(x) | Tumpus(x))) -> Impossible(x)) & all y.((Lempus(y) & Brimpus(y)) -> Impossible(y)))", "all x.((Dumpus(x) | Numpus(x) | Tumpus(x)) -> (Issue(x) & IsLempus(x) & IsBrimpus(x)))", "all x y.((Dumpus(x) | Numpus(x) | Tumpus(x)) -> (Impossible(y) & Lempus(y) & Brimpus(y)))", "all x.((Dumpus(x) | Numpus(x) | Tumpus(x)) -> (Impos(x) & Lempus(x) & Brimpus(x)))", "all x.((Dumpus(x) | Numpus(x) | Tumpus(x)) -> (Impos(x) | Lempus(x) | Brimpus(x)))", "all x.((Dumpus(x) | Numpus(x) | Tumpus(x)) -> (Ilises(x) & Lempus(x) & Brimpus(x)))", "all x.((Dupus(x) | Numpus(x) | Tumpus(x)) -> Is(x,Impos,Lempus,Brimpus))"]}
{"id": "prontoqa_train_1742", "nl": "Everything that is a vumpus and a dumpus and a lorpus is an impus, a tumpus, and a grimpus.", "fol": "all x. ((vumpus(x) & dumpus(x) & lorpus(x)) -> (impus(x) & tumpus(x) & grimpus(x)))", "prediction": ["all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x y.((Vumpus(x) & Dumpus(x) & Lorpus(y)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)", "(all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) &", "all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Impossible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Grimpus(x)))", "all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x))", "all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Impossible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Grimpus(x)))", "all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Issues(x) & Issues(x) & Issues(x) & Issues(x) & Issues(x) & Issues(x) & Issues(x) & Issues(x) & Issues(x) & Issues(x)))", "all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x))", "all x y z.((Vumpus(x) & Dumpus(y) & Lorpus(z) & Imperator(x) & Tumpus(x) & Grimpus(x)) -> (Impossible(x) & Imperator(y) & Imperator(y) & Imperator(y) & Imperator(y) & Imperator(y) & Imperator(y) & Grimpus(y)))", "(all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Impossible(x) | Impossible(x)) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x))", "all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Impos(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x))", "all x y.((Vumpus(x) & Dumpus(y) & Lorpus(x)) -> (Impossible(x) & Impermissible(y) & Impermissible(y) & Impermissible(y) & Impermissible(y) & Impermissible(y) & Impermissible(y) & Impermissible(y) & Impermissible(y) & Impermissible(y) & Grimpus(y)))", "all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x)))", "all x.(VumpusAndDumpusAndLorpus(x) -> (Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x) | Impossible(x)", "(all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Impossible(x) & Impermissible(x)) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Grimpus(x)))", "all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Impos(x) & Tumpus(x) & Grimpus(x)))"]}
{"id": "prontoqa_train_1743", "nl": "Max is a dumpus.", "fol": "dumpus(Max)", "prediction": ["all x.(Max(x) -> Dumpus(x))", "Max is a Dumpus.", "(Dumus(Max))", "(Dumps(Max) & Dumpus(Max))", "Max.(Max) -> Dumpus(Max))", "Max is a dumpus.", "(Dumpus(Max))", "all x.(Max(x) -> Dumpus(x))", "Max is Dumpus(Max)", "(Dumpus(Max) & Dumpus(Max))", "-Dumus(Max)", "Max is a Dumpus.", "all x.(Max(x) -> Dumpus(x))", "(Dumus(Max) & Dumpus(Max))", "all x.(Max(x) -> Dumpus(x))", "All x.(Max(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_1744", "nl": "Every sterpus is not a shumpus.", "fol": "all x. (sterpus(x) -> -shumpus(x))", "prediction": ["all x.(Sterpus(x) -> -Shumpus(x))", "all x.(Sterpus(x) -> -Shumpus(x))", "(all x.(Sterpus(x) -> -Shumpus(x)))", "all x.(Sterpus(x) -> -Shumpus(x))", "all x.(Steerpus(x) -> -Shumpus(x))", "-Shumpus(ster)", "all x y.((Sterpus(x) & Sterpus(y)) -> -Shumpus(x))", "(all x.(Sterpus(x) -> -Shumpus(x)))", "all x.(Sterpus(x) -> -Shumpus(x))", "all x.(Sterpus(x) -> -Shumpus(x))", "all x.(Steerpus(x) -> -Shumpus(x))", "all x.(Sterepus(x) -> -Shumpus(x))", "all x.(Sterpus(x) -> -Shumpus(x))", "all x.(Steerpus(x) -> -Shumpus(x))", "exists x.(Sterpus(x) & -Shumpus(x))", "exists x.(Steerpus(x) & -Shumpus(x))"]}
{"id": "prontoqa_train_1745", "nl": "Everything that is a vumpus, a yumpus, and a grimpus is a shumpus.", "fol": "all x. ((vumpus(x) & yumpus(x) & grimpus(x)) -> shumpus(x))", "prediction": ["all x.((Vumpus(x) | Yumpus(x) | Grimpus(x)) -> Humpus(x))", "all x.((Vumpus(x) | Yumpus(x) | Grimpus(x)) -> Humpus(x))", "all x y z.((Vumpus(x) & Yumpus(y) & Grimpus(z) & Is(x,y) & Is(x,z)) -> Humpus(x))", "all x.(((Vumpus(x) | Yumpus(x) | Grimpus(x))) -> Humpus(x))", "all x.((Vumpus(x) | Yumpus(x) | Grimpus(x)) -> Humpus(x))", "all x y z.((Vumpus(x) & Yumpus(y) & Grimpus(z) & Has(x,y) & Has(x,z)) -> Humpus(x))", "all x.((Vumpus(x) | Yumpus(x) | Grimpus(x)) -> Humpus(x))", "(all x.((Vumpus(x) | Yumpus(x) | Grimpus(x))) -> Humpus(x))", "(all x.((Vumpus(x) & Yumpus(x) & Grimpus(x)) -> Humpus(x))", "all x.((Vumpus(x) | Yumpus(x) | Grimpus(x)) -> Shumpus(x))", "all x.((Vumpus(x) | Yumpus(x) | Grimpus(x)) -> Humpus(x))", "(all x.((Vumpus(x) | Yumpus(x) | Grimpus(x)) -> Humpus(x))", "all x.((Vumpus(x) | Yumpus(x) | Grimpus(x)) -> Humpus(x))", "all x.((Vumpus(x) | Yampus(x) | Grimpus(x)) -> Humpus(x))", "all x.(((Vumpus(x) | Yumpus(x) | Grimpus(x))) -> Humpus(x))", "all x.((Vimpus(x) | Yampus(x) | Grimpus(x)) -> Shumpus(x))"]}
{"id": "prontoqa_train_1746", "nl": "Rex is a jompus and a sterpus and a tumpus.", "fol": "(jompus(Rex) & sterpus(Rex) & tumpus(Rex))", "prediction": ["all x.(Rex(x) -> (Jompus(x) & Sterpus(x) & Tumpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & (Sterpus(x) & Tumpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Sterepus(y) -> Sterpus(y)) & all z.(Tumpus(z) -> Tumpus(z))))", "(Jompus(Rex) & Sterpus(Rex) & Tumpus(Rex))", "all x y z.((Rex(x) & Jompus(y) & Sterpus(z)) -> (Jompus(x) & Sterpus(y) & Tumpus(z)))", "all x y.((Rex(x) & Jompus(y)) -> (Sterepus(x) & Tumpus(x)))", "all x.(Rex(x) -> (Jompus(x) & Sterus(x) & Tumpus(x)))", "(Jompus(rex) & Sterus(rex) & Tumpus(rex))", "all x.(Rex(x) -> (Jompus(x) | Sterpus(x) | Tumpus(x)))", "all x y.(Rex(x) -> (Jompus(x) & Sterpus(y) & Tumpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & (Sterpus(x) & Tumpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Sterpus(y) & -Tumpus(y)))", "exists x.(Rex(x) & Jompus(x) & Sterpus(x) & Tumpus(x))", "all x.(Rex(x) -> (Jompus(x) | Sterpus(x) | Tumpus(x)))", "(Jompus(rex) & Sterpus(rex) & Tumpus(rex))", "all x.(Rex(x) -> (Jimpus(x) & Sterepus(x) & Tumpus(x)))"]}
{"id": "prontoqa_train_1747", "nl": "Lorpuses are wumpuses.", "fol": "all x. (lorpus(x) -> wumpus(x))", "prediction": ["all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Wumpus(x))", "all x y.((Lorpus(x) & Wumpus(y)) -> Wumpus(x))", "all x.(Lorpus(x) -> Wumpus(x))", "(Wumpuse(lorpus) & Wumpus(lorpus))", "all x y.((Lorpus(x) & Wumpus(y)) -> Wumpus(x))", "(Wumpuse(lorpus) & Worm(lorpus))", "all x.(Lorpus(x) -> Wumpus(x))", "(Wumpuse(lorpus) & Wumpus(lorpus))", "all x.(Lorpuse(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Wampus(x))", "all x.(Lorph(x) -> Wumpus(x))", "All x.(Lurupe(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Wampus(x))"]}
{"id": "prontoqa_train_1748", "nl": "Every grimpus is not a wumpus.", "fol": "all x. (grimpus(x) -> -wumpus(x))", "prediction": ["all x.(Grimpus(x) -> -Wumpus(x))", "all x.(Grimpus(x) -> -Wumpus(x))", "-Wumpus(x)", "all x.(Grimpus(x) -> -Wumpus(x))", "(all x.(Grimpus(x) -> -Wumpus(x)))", "all x.(Gruppus(x) -> -Wumpus(x))", "-Wumpus(grey)", "all x y.((Grimpus(x) & Grimps(y)) -> -Wumpus(x))", "all x.(Grimpus(x) -> -Wumpus(x))", "(all x.(Grimpus(x) -> -Wumpus(x)))", "all x.(Sgrimpus(x) -> -Wumpus(x))", "all x.(Grimpus(x) -> -Wumpus(x))", "all x.(Grimpus(x) -> -Wumpus(x))", "all x.(Grimpus(x) -> -Wumpus(x))", "all x.(Grimpus(x) -> -Wumpus(x))", "exists x.(Grampus(x) & -Wumpus(x))"]}
{"id": "prontoqa_train_1749", "nl": "Max is a shumpus, Max is not a lorpus, or Max is a jompus.", "fol": "(shumpus(Max) | -lorpus(Max) | jompus(Max))", "prediction": ["(all x.(Max(x) -> Humpus(x)) & (-Lorpus(x) | Jompus(x))))", "all x.(Max(x) -> (Shumpus(x) | -Lorpus(x) | Jompus(x)))", "(all x.(Max(x) -> Humpus(x)) | (-Lorpus(x) | Jompus(x))))", "(exists x.(Max(x) & Humpus(x))) & exists y.(Lorpus(y) & -Lorpus(y))) | exists z.(Max(z) & Jompus(z))))", "(all x.(Max(x) -> Shumpus(x)) | (-Max(x) & -Lorpus(x)) | (-Max(x) & Jompus(x))))", "(all x y.((Max(x) & Humpus(x)) -> Shumpus(x)) & ((Max(y) & -Lorpus(y)) | (-Max(y) & Jompus(y)))))", "all x y.((Max(x) & Humpus(y)) | (-Lorpus(x) | Jompus(x))))", "(exists x.(Max(x) & Humpus(x)) | exists y.(Lorpus(y) & -Lorpus(y))) | exists z.(Max(z) & Jompus(z))))", "all x.(Max(x) -> (Shumpus(x) | -Lorpus(x) | Jompus(x)))", "all x y.((Max(x) & Shumpus(x)) | (-Lorpus(x) | Jompus(y))))", "(all x.(Max(x) -> Humpus(x)) & (-Lorpus(x) | Jompus(x))))", "(all x.(Max(x) -> Shumpus(x)) | (-Max(x) & -Lorpus(x)) | (-Max(x) & Jompus(x))))", "exists x.(Max(x) & ((Shumpus(x) | -Lorpus(x)) | Jompus(x))))", "exists x.(Max(x) & ((Shumpus(x) & -Lorpus(x)) | Jompus(x))))", "all x.(Max(x) -> (Shumpus(x) | -Lorpus(x) | Jompus(x)))", "all x.(Max(x) -> (Shumpus(x) | -Lorpus(x) | Jompus(x)))"]}
{"id": "prontoqa_train_1750", "nl": "Everything that is a shumpus, a tumpus, or a dumpus is a brimpus.", "fol": "all x. ((shumpus(x) | tumpus(x) | dumpus(x)) -> brimpus(x))", "prediction": ["all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.(((Shumpus(x) | Tumpus(x) | Dumpus(x))) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x y.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(y))", "all x.(((Shumpus(x) | Tumpus(x) | Dumpus(x))) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x y.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(y))", "(all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.(((Shumpus(x) | Tumpus(x) | Dumpus(x))) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumulus(x) | Dumpus(x)) -> Brimpus(x))"]}
{"id": "prontoqa_train_1751", "nl": "Polly is a shumpus, a yumpus, and a tumpus.", "fol": "(shumpus(Polly) & yumpus(Polly) & tumpus(Polly))", "prediction": ["all x.(Polly(x) -> (Shumpus(x) | Yumpus(x) | Tumpus(x)))", "(all x.(Polly(x) -> Shumpus(x)) & all y.(Yumpus(y) & all z.(Tumpus(z) & -Shumpus(z)))) & all w.(Tumpus(w) -> Tumpus(w)))", "(all x.(Polly(x) -> Humpus(x)) & all y.(Yumpus(y) & all z.(Tumpus(z) & -Shumpus(z))) & all w.(Yumpus(w) & -Shumpus(w)) & all w.(Tumpus(w)) -> Tumpus(w)))", "all x y z.((Polly(x) & Humpus(y) & Yumpus(z)) -> (Shumpus(x) | Tumpus(x)))", "(Shumpus(Polly) & Yumpus(Polly) & Tumpus(Polly))", "all x.(Polly(x) -> (Shumpus(x) | Yumpus(x) | Tumpus(x)))", "all x.(Polly(x) -> (Shumpus(x) | Yumpus(x) | Tumpus(x)))", "all x y z.((Polly(x) & Humpus(y) & Yumpus(z)) -> (Shumpus(x) | Tumpus(z)))", "(Shumpus(Polly) | Yumpus(Polly) | Tumpus(Polly))", "(all x.(Polly(x) -> Shumpus(x)) & all y.(Yumpus(y) & all z.(Tumpus(z)) -> Tumpus(z))))", "all x y z.((Polly(x) & Humpus(y) & Yumpus(z)) -> (Shumpus(x) | Tumpus(x)))", "(all x.(Polly(x) -> Humpus(x)) & (Yumpus(x) | Tumpus(x))))", "all x.(Polly(x) -> (Shumpus(x) | Yumpus(x) | Tumpus(x)))", "(all x.(Polly(x) -> Humpus(x)) & (Yumpus(x) | Tumpus(x))))", "exists x.(Polly(x) & (Shumpus(x) | Yumpus(x) | Tumpus(x)))", "exists x.(Polly(x) & Humpus(x) & Yumpus(x) & Tumpus(x))"]}
{"id": "prontoqa_train_1752", "nl": "Every lempus is a zumpus, a numpus, and an impus.", "fol": "all x. (lempus(x) -> (zumpus(x) & numpus(x) & impus(x)))", "prediction": ["all x.(Lempus(x) -> (Tompus(x) | Numpus(x) | Imperator(x)))", "(all x.(Lempus(x) -> Zumpus(x)) & all y.(Numpus(y) & -Impossible(y))))", "all x.(Lempus(x) -> (Tompus(x) & Numpus(x) & Imperator(x)))", "all x y.((Lempus(x) & Zumpus(y)) -> (Numpus(x) & Issue(x)))", "all x y z.((Lempus(x) & Zumpus(y) & Numpus(z)) -> (Impossible(x) | Impossible(x)))", "(all x.(Lempus(x) -> Zumpus(x)) & all y.(Numpus(y) & -Impossible(y)))", "all x.(Lempus(x) -> (Tompus(x) | Numpus(x) | Imperator(x)))", "(all x.(Lempus(x) -> Zumpus(x)) & all y.(Numpus(y) & All z.(Impossible(z)) -> Tompus(x)))", "all x.(Lempus(x) -> (Zumpus(x) & Numpus(x) & Imperator(x)))", "all x.(Lempus(x) -> (Tompus(x) | Numpus(x) | Impossible(x)))", "all x.(Lempus(x) -> (Tompus(x) | Numpus(x) | Imperator(x)))", "all x.(Lempus(x) -> (Zumpus(x) & Numpus(x) & Issue(x)))", "exists x.(Lempus(x) & Zumpus(x) & Numpus(x) & Issue(x))", "all x.(Lempus(x) -> (Tompus(x) | Numpus(x) | Imperator(x)))", "exists x.(Lempus(x) & Zumpus(x) & Numpus(x) & Issue(x))", "all x.(Limpus(x) -> (Tompus(x) | Numpus(x) | Imperator(x)))"]}
{"id": "prontoqa_train_1753", "nl": "Sally is a zumpus or an impus or a gorpus.", "fol": "(zumpus(Sally) | impus(Sally) | gorpus(Sally))", "prediction": ["all x.(Sally(x) -> (Tompus(x) | Issue(x) | Gorpus(x)))", "all x.(Sally(x) -> (Tompus(x) | Imperator(x) | Gorpus(x)))", "(Tompus(Sally) | IsImpossible(Sally) | Gorpus(Sally)))", "((Sally) | Zumpus(Sally)) | Issue(Sally)) | Gorpus(Sally))", "(Tompus(s) | Issue(s) | Gorpus(s)))", "(Zumpus,Impossible(Sally) | Gorpus(Sally))", "all x.(Sally(x) -> (Tompus(x) | Issue(x) | Gorpus(x)))", "all x y.(Sally(x) -> (Tompus(x) | Issue(x) | Gorpus(x)))", "all x.(Sally(x) -> (Tompus(x) | Impossible(x) | Gorpus(x)))", "(Tompus(s) | Imperator(s) | Gorpus(s)))", "all x.(Sally(x) -> (Zumpus(x) | Imperator(x) | Gorpus(x)))", "all x.(Sally(x) -> (Tompus(x) | Issue(x) | Gorpus(x)))", "all x.(Sally(x) -> (Zumpus(x) | Imperium(x) | Gorpus(x)))", "exists x.(Sally(x) & (Zumpus(x) | Imperator(x) | Gorpus(x)))", "all x.(Sally(x) -> (Tommus(x) | Impossible(x) | Gorpus(x)))", "exists x.(Sally(x) & (Zumpus(x) | Issue(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1754", "nl": "Tumpuses are rompuses.", "fol": "all x. (tumpus(x) -> rompus(x))", "prediction": ["all x.(Tumpus(x) -> Rompus(x))", "all x.(Tumpuse(x) -> Rompus(x))", "all x y.((Tumpuse(x) & Rompus(y)) -> Rompus(x))", "all x.(Tumpus(x) -> Rompus(x))", "(Rompus(tump) & Rompus(tump))", "all x.(Tumpuse(x) -> Rompus(x))", "(Rompus(tump) -> Roompus(tump))", "all x y.((Tumpuse(x) & Rompus(y)) -> Rompus(x))", "all x.(Tumpus(x) -> Rompus(x))", "(Rompus(tump) & Rompus(tump))", "all x.(Tumpuse(x) -> Rompus(x))", "all x.(Tumulus(x) -> Rompus(x))", "all x.(Tumpus(x) -> Rompus(x))", "all x.(Tumpuse(x) -> Rompus(x))", "all x.(Mumpsue(x) -> Rompuse(x))", "all x.(Tumulus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_1755", "nl": "Sally is a zumpus and Sally is a yumpus and Sally is not a rompus.", "fol": "(zumpus(Sally) & yumpus(Sally) & -rompus(Sally))", "prediction": ["(all x.(Sally(x) -> Zumpus(x)) & (Sally(x) -> Yumpus(x)) & (Sally(x) -> -Rompus(x)))", "all x y z.((Sally(x) & Zumpus(x) & Yumpus(y) & -Rompus(z)) -> (Tompus(x) & Yampus(y) & -Rompus(z)))", "(all x.(Sally(x) -> Zumpus(x)) & all y.(Sally(y) -> Yumpus(y)) & all z.(Sally(z) -> -Rompus(z))))", "all x y.((Sally(x) & Zumpus(x) & Yumpus(y)) -> (-rompus(x)))", "(all x y.(Sally(x) -> Zumpus(x)) & (Sally(y) -> Yumpus(y)) & (Sally(y) -> -Rompus(y)))", "(all x y z.((Sally(x) & Zumpus(x)) -> Toss(x)) & ((Sally(y) & Yumpus(y)) -> -Rompus(z)))", "(all x.(Sally(x) -> Zumpus(x)) & (Sally(x) -> Yumpus(x)) & (Sally(x) -> -Rompus(x)))", "all x y z.((Sally(x) & Zumpus(x) & Yumpus(y) & -Rompus(z)) -> (Tompus(x) & Yumpus(y) & -Tompus(z)))", "all x.(Sally(x) -> (Tompus(x) & Yumpus(x) & -Rompus(x)))", "(all x.(Sally(x) -> Zumpus(x)) & all y.(Sally(y) -> Yumpus(y)) & all z.(Sally(z) -> -Rompus(z))))", "exists x.(Sally(x) & Zumpus(x) & Yumpus(x) & -Rompus(x))", "all x.(Sally(x) -> (Tompus(x) | Yumpus(x) | -Rompus(x)))", "all x y z.((Sally(x) & Zumpus(x) & Yampus(y) & -Rompus(z)) -> (Tompus(x) | Yampus(y) & -Tompus(z)))", "all x y.((Sally(x) & Zumpus(x) & Yumpus(y)) -> (-Rompus(x)))", "(all x.(Sally(x) -> Zumpus(x)) & (Sally(x) -> Yumpus(x)) & (Sally(x) -> -Rompus(x)))", "(all x.(Sally(x) -> Zumpus(x)) & all y.(Sally(y) -> Yumpus(y)) & all z.(Sally(z) -> -Rompus(z))))"]}
{"id": "prontoqa_train_1756", "nl": "Sally is a vumpus, Sally is not a tumpus, or Sally is a lorpus.", "fol": "(vumpus(Sally) | -tumpus(Sally) | lorpus(Sally))", "prediction": ["(all x.(Sally(x) -> Vumpus(x)) | (-Tumpus(x) | Lorpus(x))))", "all x.(Sally(x) -> (Vumpus(x) | -Tumpus(x) | Lorpus(x)))", "all x.(Sally(x) -> (Vumpus(x) | -Tumpus(x) | Lorpus(x)))", "(exists x.(Sally(x) & Vumpus(x)) | exists y.(Sally(y) & -Tumpus(y)) | exists z.(Sally(z) & Lorpus(z)))))", "all x y.((Sally(x) & Vumpus(x)) | (-Tumpus(y) | Lorpus(y))))", "all x y.((Sally(x) & Vumpus(x) & -Tumpus(y)) | (Lorpus(x) & Sally(x))))", "(all x.(Sally(x) -> Vumpus(x)) | (-Tumpus(x) | Lorpus(x))))", "(all x.(Sally(x) -> Vumpus(x)) & (-Tumpus(x) | Lorpus(x))))", "all x.(Sally(x) -> (Vumpus(x) | -Tumpus(x) | Lorpus(x)))", "exists x.(Sally(x) & ((Vumpus(x) & -Tumpus(x)) | (Lorpus(x)))))", "exists x.(Sally(x) & ((Vumpus(x) & -Tumpus(x)) | (Lorpus(x)))))", "all x y.((Sally(x) & Vumpus(x)) | (-Tumpus(x) | Lorpus(y))))", "(all x.(Sally(x) -> Vumpus(x)) | (-Tumpus(x) | Lorpus(x))))", "(all x.(Sally(x) -> Vumpus(x)) & (-Tumpus(x) | Lorpus(x))))", "exists x.(Sally(x) & ((Vumpus(x) & -Tumpus(x)) | (Lorpus(x) & Sally(x)))))", "(all x.(Sally(x) -> Vumpus(x)) | (-Tumpus(x) | Lorpus(x))))"]}
{"id": "prontoqa_train_1757", "nl": "Each gorpus is a lempus.", "fol": "all x. (gorpus(x) -> lempus(x))", "prediction": ["all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x y.((Gorpus(x) & Lempus(y)) -> HasLempus(x,y))", "all x.(Gorpus(x) -> Lempus(x))", "all x y.((Gorpus(x) & Lempus(y)) -> Is(x,y))", "all x.(Gorpus(x) -> Lempus(x))", "all x y.((Gorpus(x) & Lempus(y)) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "exists x.(Gorph(x) & Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "exists x.(Gorpus(x) & Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "exists x.(Gorpus(x) & Lempus(x))", "exists x.(Gorpus(x) & Lempus(x))"]}
{"id": "prontoqa_train_1758", "nl": "Sam is a wumpus, Sam is a shumpus, and Sam is not a lempus.", "fol": "(wumpus(Sam) & shumpus(Sam) & -lempus(Sam))", "prediction": ["(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Humpus(x)) & (Sam(x) -> -Lempus(x)))", "all x y z.((Sam(x) & Wumpus(y) & Humpus(z)) -> (Wumpus(x) & Shumpus(x) & -Lempus(x)))", "(all x y z.((Sam(x) & Wumpus(y)) -> Wumpus(x)) & ((Sam(z) & Humpus(z))) -> -Lempus(z)))", "all x y z.((Sam(x) & Wumpus(x) & Shumpus(y) & Lempus(z)) -> (Wumpus(x) & Shumpus(y) & -Lempus(z)))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Humpus(x)) & -Lempus(x)))", "all x.(Sam(x) -> (Wumpus(x) & Humpus(x) & -Lempus(x)))", "(all x.(Sam(x) -> Wumpus(x)) & all y.(Shumpus(y) -> -Lempus(y)))", "(all x y z.((Sam(x) & Wumpus(y)) -> (Wumpus(z) | Humpus(z))) & ((Sam(x) & Lempus(x)) -> -Lempus(x)))", "(all x.(Wumpus(x) -> Sam(x)) & (Shumpus(x) -> Sam(x)) & -Lempus(x)))", "all x y z.((Sam(x) & Wumpus(y) & Humpus(z)) -> (Wumpus(x) | Shumpus(z) | -Lempus(x)))", "(all x.(SameDay(x) -> Wumpus(x)) & (SameDay(x) -> Humpus(x)) & -Lempus(x)))", "all x y.((Sam(x) & Wumpus(x)) -> (Shumpus(x) & -Lempus(y)))", "exists x.(Sam(x) & Wumpus(x) & Shumpus(x) & -Lempus(x))", "all x y z.((Sam(x) & Wumpus(x) & Shumpus(y) & Lempus(z)) -> (Wumpus(x) & Shumpus(y) & -Lempus(z)))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Humpus(x)) & (Sam(x) -> -Lempus(x)))", "all x.(Sam(x) -> (Wumpus(x) | Humpus(x) | -Lempus(x)))"]}
{"id": "prontoqa_train_1759", "nl": "Sam is a wumpus or Sam is a lempus or Sam is not a gorpus.", "fol": "(wumpus(Sam) | lempus(Sam) | -gorpus(Sam))", "prediction": ["all x.((Sam(x) & (Wumpus(x) | Lempus(x) | -Gorpus(x))) -> SamWumpus(x))", "(all x.(Sam(x) -> Wumpus(x)) | (Sam(x) -> Lempus(x)) | (Sam(x) -> -Gorpus(x))))", "all x y.((Sam(x) & Wumpus(x)) | (Lempus(x) | -Gorpus(y))))", "((Sam(sam) & Wumpus(sam)) | (Sam(sam) & Lempus(sam)) | (Sam(sam) & -Gorpus(sam))))", "all x.(Sam(x) -> ((Wumpus(x) | Lempus(x)) | -Gorpus(x)))", "(exists x.(Sam(x) & Wumpus(x)) | exists y.(Lempus(y) & -Gorpus(y))))", "((Sam) & Wumpus(Sam)) | (Sam(Sam) & Lempus(Sam)) | (Sam(Sam) & -Gorpus(Sam))))", "all x.(Sam(x) -> (Wumpus(x) | Lempus(x) | -Gorpus(x)))", "(all x.(Sam(x) -> Wumpus(x)) | (Sam(x) -> Lempus(x)) | (Sam(x) -> -Gorpus(x))))", "all x y.((Sam(x) & Wumpus(x)) | (Sam(y) & Lempus(y)) | (-Sam(y) & Gorpus(y))))", "(all x.(Sam(x) -> Wumpus(x)) & (Lempus(x) | -Gorpus(x))))", "all x.((Sam(x) & (Wumpus(x) | Lempus(x) | -Gorpus(x))) -> (Wumpus(x) | Lempus(x)))", "(all x.(Wumpus(x) | Lempus(x) | -Gorpus(x)))", "exists x.(Sam(x) & ((Wumpus(x) & Sam(x)) | (Lempus(x) & Sam(x)) | -Gorpus(x))))", "exists x.(Wumpus(x) | Lempus(x) | -Gorpus(x))", "all x.(Sam(x) -> (Wumpus(x) | Lempus(x) | -Gorpus(x)))"]}
{"id": "prontoqa_train_1760", "nl": "Everything that is a tumpus, a rompus, or a lempus is a zumpus, a shumpus, and a yumpus.", "fol": "all x. ((tumpus(x) | rompus(x) | lempus(x)) -> (zumpus(x) & shumpus(x) & yumpus(x)))", "prediction": ["all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) & Humpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) | Shumpus(x) | Yumpus(x)))", "all x y.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Tompus(y) & Humpus(y) & Yumpus(y)))", "(all x.((Tumpus(x) | Rompus(x) | Lempus(x))) -> (Tompus(x) | Shumpus(x) | Yumpus(x)))", "all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) & Shumpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) | Humpus(x) | Yumpus(x)))", "all x.(Tumpus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) & Humpus(x) & Yumpus(x)))", "all x y.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Tompus(y) & Humpus(y) & Yumpus(y)))", "(all x.((Tumpus(x) | Rompus(x) | Lempus(x))) -> (Tompus(x) | Shumpus(x) | Yumpus(x)))", "all x.((Tompus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) & Shumpus(x) & Yumpus(x)))", "(all x.((Tumpus(x) | Rompus(x) | Lempus(x))) -> (Zumpus(x) | Humpus(x) | Yumpus(x)))", "all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Zumpus(x) | Shumpus(x) | Yumpus(x)))", "all x.((Tompus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) & Humpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Zumpus(x) | Humpus(x) | Yumpus(x)))", "all x.((Tompus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) & Shumpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Zumpus(x) | Shumpus(x) | Yumpus(x)))"]}
{"id": "prontoqa_train_1761", "nl": "Everything that is a brimpus, a jompus, and a rompus is a vumpus and a grimpus and a sterpus.", "fol": "all x. ((brimpus(x) & jompus(x) & rompus(x)) -> (vumpus(x) & grimpus(x) & sterpus(x)))", "prediction": ["all x.((Brimpus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x y.((Brimpus(x) & Jompus(y) & Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x y z.((Brimpus(x) & Jompus(y) & Rompus(z) & Brimpus(x) & Jompus(y) & Rompus(z)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x.((Brimpus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x.((Brimpus(x) & Jompus(x) & Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x.((Brimpus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x y.((Brimpus(x) & Jompus(y) & Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "(all x.((Brimpus(x) | Jompus(x) | Rompus(x))) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x.((Brimpus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x.((Brimpus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "(all x.((Brimpus(x) | Jompus(x) | Rompus(x))) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x.((Brimpus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x.((Brumpus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x.((Brimpus(x) & Jompus(x) & Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "(all x.((Brimpus(x) | Jompus(x) | Rompus(x))) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x.((Brampus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))"]}
{"id": "prontoqa_train_1762", "nl": "Each brimpus is a sterpus and a zumpus and a yumpus.", "fol": "all x. (brimpus(x) -> (sterpus(x) & zumpus(x) & yumpus(x)))", "prediction": ["all x.(Brimpus(x) -> (Sterpus(x) & Zumpus(x) & Yumpus(x)))", "all x y.((Brimpus(x) & Sterpus(y)) -> (Sterpus(x) & Zumpus(x) & Yumpus(x)))", "(all x.(Brimpus(x) -> Sterpus(x)) & all y.(Tompus(y) & Yumpus(y))))", "all x.(Brimpus(x) -> (Sterepus(x) & Zumpus(x) & Yumpus(x)))", "all x y z.((Brimpus(x) & Sterpus(y) & Zumpus(z)) -> (Sterpus(x) & Yumpus(x)))", "all x y.((Brimpus(x) & Sterpus(x) & Zumpus(y)) -> Yumpus(x))", "(all x.(Brimpus(x) -> Sterus(x)) & all y.(Tompus(y) & Yumpus(y)))", "(all x.(Brimpus(x) -> Sterpus(x)) & all y.(Tompus(y) & Yumpus(y)))", "all x.(Brimpus(x) -> (Sterpus(x) & Zumpus(x) & Yumpus(x)))", "all x y z.(Brimpus(x) -> (Sterpus(x) & Zumpus(y) & Yumpus(z)))", "exists x.(Brimpus(x) & Sterpus(x) & Zumpus(x) & Yumpus(x))", "all x.(Brimpus(x) -> (Stereos(x) & Zumpus(x) & Yumpus(x)))", "all x.(Brimpus(x) -> (Sterpus(x) & Zumpus(x) & Yumpus(x)))", "(all x.(Brimpus(x) -> Sterpus(x)) & (Zumpus(x) | Yumpus(x))))", "all x.(Brumpus(x) -> (Sterpus(x) & Zumpus(x) & Yumpus(x)))", "exists x.(Brimpus(x) & Sterpus(x) & Zumpus(x) & Yumpus(x))"]}
{"id": "prontoqa_train_1763", "nl": "Each gorpus is not a sterpus.", "fol": "all x. (gorpus(x) -> -sterpus(x))", "prediction": ["all x.(Gorpus(x) -> -Sterpus(x))", "all x.(Gorpus(x) -> -Sterpus(x))", "(-Sterpus(gorpus)", "all x y.((Gorpus(x) & Sterpus(y)) -> -Sterpus(x))", "all x.(Gorpus(x) -> -Sterpus(x))", "(-Sterpus(gorpus)", "all x.(Gorpus(x) -> -Sterepus(x))", "all x y.((Gorpus(x) & Sterpus(y)) -> -Sterpus(x))", "all x.(Gorpus(x) -> -Sterpus(x))", "all x.(Gorpus(x) -> -Steerpus(x))", "all x.(Gorpus(x) -> -Sterpus(x))", "exists x.(Gorpus(x) & -Sterpus(x))", "all x.(Gorpus(x) -> -Stereopus(x))", "all x.(Gorpus(x) -> -Steerpus(x))", "exists x.(Gorpus(x) & -Sterpus(x))", "exists x.(Gorpus(x) & -Sterpus(x))"]}
{"id": "prontoqa_train_1764", "nl": "Sam is an impus, a rompus, and a gorpus.", "fol": "(impus(Sam) & rompus(Sam) & gorpus(Sam))", "prediction": ["all x.(Sam(x) -> (Impossible(x) & Rompus(x) & Gorpus(x)))", "(all x.(Sam(x) -> Impossible(x)) & (Rompus(x) | Gorpus(x))))", "all x y z.((Sam(x) & Issue(y) & Rompus(z)) -> (Issue(x) & Issue(y) & Issue(z) & Issue(z) & Issue(z) & Issue(z) & Issue(z) & Issue(z)))", "all x y z.((Sam(x) & Impossible(y) & Rompus(z)) -> (Rompus(x) & Gorpus(x)))", "(Impossible(Sam) | Rompus(Sam) | Gorpus(Sam))", "(all x.(Sam(x) -> Issue(x)) & (Rompus(x) | Gorpus(x))))", "all x.(Sam(x) -> (Impossible(x) & Rompus(x) & Gorpus(x)))", "(all x.(Sam(x) -> Impossible(x)) & all y.(Rompus(y) & All z.(Gorpus(z)) -> Gorpus(z))))", "(Impose(Sam) & Rompus(Sam) & Gorpus(Sam))", "all x.(Sam(x) -> (Impossible(x) | Rompus(x) | Gorpus(x)))", "exists x.(Sam(x) & Is(x,Imposs) & Is(x,Rompus) & Is(x,Gorpus))", "all x y z.((Sam(x) & Imposs(y) & Rompus(z)) -> (Impossible(x) & Rompus(z) & Gorpus(z)))", "all x.(Sam(x) -> (Imposs(x) & Rompus(x) & Gorpus(x)))", "(all x.(Sam(x) -> Issue(x)) & (Rompus(x) | Gorpus(x)))", "exists x.(Sam(x) & Impossible(x) & Rompus(x) & Gorpus(x))", "all x.(Sam(x) -> (Impose(x) & Rompus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1765", "nl": "Everything that is a tumpus or a numpus or a jompus is a vumpus and a grimpus and an impus.", "fol": "all x. ((tumpus(x) | numpus(x) | jompus(x)) -> (vumpus(x) & grimpus(x) & impus(x)))", "prediction": ["all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Imperator(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Imperator(x)))", "all x.(((Tumpus(x) | Numpus(x) | Jompus(x))) -> (Vumpus(x) & Grimpus(x) & Imperator(x)))", "all x y.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(y) & Grimpus(y) & Imperator(y)))", "(all x.((Tumpus(x) | Numpus(x) | Jompus(x))) -> VumpusAndGrimpusAndImpulse(x))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Imperator(x)))", "(all x.((Tumpus(x) | Numpus(x) | Jompus(x))) -> Vumpus(x)) & all y.((Grimpus(y) & Imperator(y)) -> Imperator(y)))", "all x y.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(y) & Grimpus(y) & Imperator(y)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Imperator(x)))", "all x.(Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Gruppus(x) & Impermissible(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Imperator(x)))", "all x y.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(y) & Grimpus(y) & Imperator(y)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Imperator(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Impossible(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Umpus(x) & Grimpus(x) & Impossible(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Imperempt(x)))"]}
{"id": "prontoqa_train_1766", "nl": "Each numpus is a lorpus, a yumpus, and a rompus.", "fol": "all x. (numpus(x) -> (lorpus(x) & yumpus(x) & rompus(x)))", "prediction": ["all x.(Numpus(x) -> (Lorpus(x) | Yumpus(x) | Rompus(x)))", "(all x.(Numpus(x) -> Lorpus(x)) & all y.(Yumpus(y) & all z.(Rompus(z)) -> Nompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) & Yumpus(x) & Rompus(x)))", "all x y z.((Numpus(x) & Lorpus(y) & Yumpus(z)) -> (Lorpus(x) | Rompus(x)))", "(all x.(Numpus(x) -> (Lorpus(x) | Yampus(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) | Yumpus(x) | Rompus(x)))", "all x y z.((Numpus(x) & Lorpus(y) & Yumpus(z)) -> (Lorpus(x) & Yampus(z) & Rompus(z)))", "(all x.(Numpus(x) -> Lorpus(x)) & all y.(Yumpus(y) & all z.(Rompus(z)) -> Nompus(x)))", "(all x.(Nompus(x) -> Lorpus(x)) & (Yumpus(x) & (Rompus(x) | Lorpus(x))))", "all x.(Nompus(x) -> (Lorpus(x) | Yampus(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) & Yumpus(x) & Rompus(x)))", "(all x.(Numpus(x) -> (Lorpus(x) | Yumpus(x) | Rompus(x)))", "exists x.(Numpus(x) & Lorpus(x) & Yumpus(x) & Rompus(x))", "all x.(Numpus(x) -> (Lorpus(x) | Yumpus(x) | Rompus(x)))", "exists x.(Numpus(x) & Lorpus(x) & Yumpus(x) & Rompus(x))", "all x.(Nompus(x) -> (Lorpus(x) | Yampus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1767", "nl": "Sally is a dumpus, Sally is a lempus, and Sally is not a lorpus.", "fol": "(dumpus(Sally) & lempus(Sally) & -lorpus(Sally))", "prediction": ["(all x.(Sally(x) -> Dumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> -Lorpus(z))))", "all x y z.((Sally(x) & Dumpus(x) & Lempus(y) & -Lorpus(z)) -> (Dumpus(x) & Lempus(y) & -Lorpus(z)))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> Lempus(x)) & (Sally(x) -> -Lorpus(x)))", "(all x y z.((Sally(x) & Dumpus(x)) -> Dumpus(x)) & ((Sally(y) & Lempus(y)) -> -Lorpus(z)))", "all x.(Sally(x) -> (Dumpus(x) & Lempus(x) & -Lorpus(x)))", "all x y z.((Sally(x) & Dumpus(x) & Lempus(y) & -Lorpus(z)) -> (Dumpus(x) & Lempus(y) & -Lorpus(z)))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> -Lorpus(z))))", "all x.(Sally(x) -> (Dumps(x) & Lempus(x) & -Lorpus(x)))", "(all x y z.((Sally(x) & Dumpus(y)) -> (Dumpus(z) | Lempus(z))) & ((Sally(x) & Lorpus(x)) -> -Lorpus(x)))", "all x y z.((Sally(x) & Dumpus(y) & Lempus(z)) -> (Dumpus(x) & Lempus(x) & -Lorpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> Lempus(x)) & (Sally(x) -> -Lorpus(x)))", "exists x.(Sally(x) & Dumpus(x) & Lempus(x) & -Lorpus(x))", "all x y z.((Sally(x) & Dumpus(x) & Lempus(y) & -Lorpus(z)) -> (Dumps(x) & Lempus(y) & -Lorpus(z)))", "(all x y z.((Sally(x) & Dumpus(x)) -> Dumpus(x)) & ((Sally(y) & Lempus(y)) -> -Lorpus(z)))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> -Lorpus(z))))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> Lempus(x)) & -Lorpus(x)))"]}
{"id": "prontoqa_train_1768", "nl": "Everything that is a dumpus, a lempus, or a grimpus is a yumpus.", "fol": "all x. ((dumpus(x) | lempus(x) | grimpus(x)) -> yumpus(x))", "prediction": ["all x.((Dumpus(x) | Lempus(x) | Grimpus(x)) -> Yumpus(x))", "all x.((Dumps(x) | Lempus(x) | Grimpus(x)) -> Yumpus(x))", "all x.((Dumpus(x) | Lempus(x) | Grimpus(x)) -> Yumpus(x))", "all x.(((Dumpus(x) | Lempus(x) | Grimpus(x))) -> Yumpus(x))", "all x.((Dumpus(x) | Lempus(x) | Grimpus(x)) -> Yampus(x))", "all x.((Dumps(x) | Lempus(x) | Grimpus(x)) -> Yumpus(x))", "(all x.((Dumpus(x) | Lempus(x) | Grimpus(x))) -> Yumpus(x))", "all x y.((Dumps(x) | Lempus(x) | Grimpus(x)) -> Yumpus(y))", "all x.(Yumpus(x) -> (Dumpus(x) | Lempus(x) | Grimpus(x)))", "all x.((Dumpus(x) | Lempus(x) | Grimpus(x)) -> Yumpus(x))", "(all x.((Dumpsus(x) | Lempus(x) | Grimpus(x))) -> Yampus(x))", "all x.(Yumpus(x) -> ((Dumpus(x) | Lempus(x) | Grimpus(x))))", "all x.(Yumpus(x) -> (Dumps(x) | Lempus(x) | Grimpus(x)))", "all x.((Dumpus(x) | Lempus(x) | Grimpus(x)) -> Yumpus(x))", "all x.((Dumpus(x) | Lempus(x) | Grimpus(x)) -> Yampus(x))", "all x.((Dumpus(x) | Lempus(x) | Grimpus(x)) -> Yumpus(x))"]}
{"id": "prontoqa_train_1769", "nl": "Alex is a gorpus, a rompus, and a lempus.", "fol": "(gorpus(Alex) & rompus(Alex) & lempus(Alex))", "prediction": ["all x.(Alex(x) -> (Gorpus(x) | Rompus(x) | Lempus(x)))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Rompus(y) & All z.(Lempus(z))) -> Gorpus(x)) & all w.(Rompus(w) -> Lempus(w)))", "all x y z.((Alex(x) & Gorpus(y) & Rompus(z)) -> (Rompus(x) & Lempus(x)))", "all x.(Alex(x) -> (Gorpus(x) & Rompus(x) & Lempus(x)))", "(Gorpus(Alex) | Rompus(Alex) | Lempus(Alex))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Rompus(y) & All z.(Lempus(z))) -> Gorpus(x)))", "all x y z.((Alex(x) & Gorpus(y) & Rompus(z)) -> (Gorpus(x) | Rompus(z) | Lempus(z)))", "all x.(Alex(x) -> (Gorpus(x) | Rompus(x) | Lempus(x)))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Rompus(y) & All z.(Lempus(z)) -> Gorpus(x)))", "(Gorpus,rompus,lempus)", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Rompus(y) & all z.(Lempus(z)) -> Gorpus(x))) & all w.(Rompus(w) -> Lempus(w)))", "all x.(Alex(x) -> (Gorpus(x) | Rompus(x) | Lempus(x)))", "all x.(Alex(x) -> (Gorpus(x) & Rompus(x) & Lempus(x)))", "exists x.(Alex(x) & Gorpus(x) & Rompus(x) & Lempus(x))", "all x.(Alex(x) -> (Gorpus(x) | Rompus(x) | Lempus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Rompus(x) | Lempus(x)))"]}
{"id": "prontoqa_train_1770", "nl": "Every vumpus is a lorpus and an impus and a sterpus.", "fol": "all x. (vumpus(x) -> (lorpus(x) & impus(x) & sterpus(x)))", "prediction": ["all x.(Vumpus(x) -> (Lorpus(x) & Impossible(x) & Sterpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Issue(x) & Sterpus(x)))", "(all x.(Vumpus(x) -> Lorpus(x)) & all y.(Vumpus(y) -> Issue(y)) & all z.(Vumpus(z) -> Sterpus(z))))", "all x y.((Vumpus(x) & Lorpus(y)) -> (Impossible(x) & Sterpus(x)))", "exists x.(Vumpus(x) & Lorpus(x) & Issue(x) & Sterpus(x))", "(all x.(Vumpus(x) -> Lorpus(x)) & (Impossible(x) | Sterpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Impossible(x) & Sterpus(x)))", "(all x.(Vumpus(x) -> Lorpus(x)) & all y.(Vumpus(y) -> Impossible(y)) & all z.(Vumpus(z) -> Sterpus(z)))", "all x y.((Vumpus(x) & Lorpus(y)) -> (Impossible(x) & Sterpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Issue(x) & Sterpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Issue(x) & Sterpus(x)))", "exists x.(Vumpus(x) & Lorpus(x) & Issue(x) & Sterpus(x))", "all x y.((Vumpus(x) & Lorpus(y)) -> (Impossible(x) | Sterpus(x)))", "(all x.(Vumpus(x) -> Lorpus(x)) & (Impossible(x) | Sterpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Impossible(x) & Sterpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Issue(x) & Sterpus(x)))"]}
{"id": "prontoqa_train_1771", "nl": "Stella is a yumpus or an impus or a rompus.", "fol": "(yumpus(Stella) | impus(Stella) | rompus(Stella))", "prediction": ["all x.(Stella(x) -> (Yumpus(x) | Imperator(x) | Rompus(x)))", "all x.(Stella(x) -> (Yumpus(x) | Issue(x) | Rompus(x)))", "(Yumpus(Stella) | Imperator(Stella) | Rompus(Stella)))", "(Yumpus,Impossible(Stella) | Rompus(Stella)))", "(yumpus) | impus(y) | Rompus(y))", "all x y.((Stella(x) & (Yumpus(x) | Imperator(x) | Rompus(x))) -> Is(x,y))", "all x.(Stella(x) -> (Yumpus(x) | Impossible(x) | Rompus(x)))", "all x.((Stella(x) & (Yumpus(x) | Imperator(x) | Rompus(x))) -> Is(x,y))", "(Yumpus(Stella) | IsImpossible(Stella)))", "all x.(Stella(x) -> (Yumpus(x) | Imperator(x) | Rompus(x)))", "(Yumpus, Issue, Rompus)", "all x.((Stella(x) & (Yumpus(x) | Imperator(x) | Rompus(x))) -> Yampus(x))", "all x.(Stella(x) -> (Yumpus(x) | Issue(x) | Rompus(x)))", "exists x.(Stella(x) & (Yumpus(x) | Imperator(x) | Rompus(x)))", "exists x.(Stella(x) & (Yumpus(x) | Impossible(x) | Rompus(x)))", "exists x.(Stella(x) & (Yumpus(x) | Imperative(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1772", "nl": "Every wumpus is a jompus.", "fol": "all x. (wumpus(x) -> jompus(x))", "prediction": ["all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "all x y.((Wumpus(x) & Jompus(y)) -> Has(x,y))", "(all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "all x y.((Wumpus(x) & Jompus(y)) -> Has(x,y))", "all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "exists x.(Wumpus(x) & Moose(x))", "exists x.(Wumpus(x) & Joompus(x))", "exists x.(Wumpus(x) & Jompus(x))"]}
{"id": "prontoqa_train_1773", "nl": "Everything that is a tumpus, a brimpus, or a yumpus is not a lorpus.", "fol": "all x. ((tumpus(x) | brimpus(x) | yumpus(x)) -> -lorpus(x))", "prediction": ["all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "all x.(((Tumpus(x) | Brimpus(x) | Yumpus(x))) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "all x y.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(y))", "(all x.((Tumpus(x) | Brimpus(x) | Yumpus(x))) -> -Lorpus(x))", "(all x.((Tumpus(x) | Brimpus(x) | Yumpus(x))) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "all x.(((Tumpus(x) | Brimpus(x) | Yumpus(x))) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "(all x.((Tumpus(x) | Brimpus(x) | Yumpus(x))) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yampus(x)) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))"]}
{"id": "prontoqa_train_1774", "nl": "Stella is not a wumpus.", "fol": "-wumpus(Stella)", "prediction": ["Stella is not a wumpus.", "all x.(Stella(x) -> -Wumpus(x))", "(-Wumpus(Stella))", "Stella is not a wumpus.", "Stella -Wumpus(Stella))", "all x.(Stella(x) -> -Wumpus(x))", "(-Wumpus(Stella))", "Stella is not a wumpus.", "(-Wumpus(Stella))", "all x.(Stella(x) -> -Wumpus(x))", "Stella -Wumpus(Stella)", "Stella is not a wumpus.", "-Wumpus(Stella)", "Stella is not a wumpus.", "(-Wumpus(Stella))", "-Wumpus(Stella)"]}
{"id": "prontoqa_train_1775", "nl": "Everything that is a brimpus or a wumpus or a grimpus is a numpus, a jompus, and an impus.", "fol": "all x. ((brimpus(x) | wumpus(x) | grimpus(x)) -> (numpus(x) & jompus(x) & impus(x)))", "prediction": ["all x.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) & Jompus(x) & Imperator(x)))", "all x.(((Brimpus(x) | Wumpus(x) | Grimpus(x))) -> (Numpus(x) & Jompus(x) & Imperator(x)))", "all x.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) & Jompus(x) & Imperator(x)))", "all x.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) & Jompus(x) & Impossible(x)))", "all x y.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(y) & Jompus(y) & Impossible(y)))", "all x.(((Brimpus(x) | Wumpus(x) | Grimpus(x))) -> (Numpus(x) & Jompus(x) & Imperator(x)))", "all x.(Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) & Jompus(x) & Imperator(x)))", "all x.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) & Jompus(x) & Issue(x)))", "all x.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) | Jompus(x) | Imperator(x)))", "all x.(((Brimpus(x) | Wumpus(x) | Grimpus(x))) -> (Numpus(x) | Jompus(x) | Impossible(x)))", "all x y.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(y) & Jompus(y) & Imperator(y)))", "(all x.((Brimpus(x) | Wumpus(x) | Grimpus(x))) -> (Numpus(x) | Jompus(x) | Imperator(x)))", "(all x.((Brimpus(x) | Wumpus(x) | Grimpus(x))) -> (Numpus(x) | Jompus(x) | Impossible(x)))", "all x.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) & Jompus(x) & Imperator(x)))", "all x.((Brumpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) | Jompus(x) | Imperator(x)))", "all x.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) & Jompus(x) & Issue(x)))"]}
{"id": "prontoqa_train_1776", "nl": "Everything that is a zumpus or a jompus or a lempus is a sterpus and a gorpus and a wumpus.", "fol": "all x. ((zumpus(x) | jompus(x) | lempus(x)) -> (sterpus(x) & gorpus(x) & wumpus(x)))", "prediction": ["all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterpus(x) & Gorpus(x) & Wumpus(x)))", "all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterepus(x) & Gorpus(x) & Wumpus(x)))", "all x y.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterpus(y) & Gorpus(y) & Wumpus(y)))", "(all x.((Tompus(x) | Jompus(x) | Lempus(x))) -> Sterpus(x)) & all y.((Gorpus(y) & Wumpus(y)) -> Sterpus(y)))", "all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterpus(x) & Gorpus(x) & Wumpus(x)))", "all x y.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterepus(y) & Gorpus(y) & Wumpus(y)))", "(all x.((Tompus(x) | Jompus(x) | Lempus(x))) -> SterpusAndGorpusAndWumpus(x))", "all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterepus(x) & Gorpus(x) & Wumpus(x)))", "all x y.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterpus(y) & Gorpus(y) & Wumpus(y)))", "all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterpus(x) & Gorpus(x) & Wumpus(x)))", "all x.((Zumpus(x) | Jompus(x) | Lempus(x)) -> (Stereopus(x) & Gorpus(x) & Wumpus(x)))", "all x.((Zumpus(x) | Jompus(x) | Lempus(x)) -> (Stereopus(x) & Gorpus(x) & Wumpus(x)))", "all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterpus(x) & Gorpus(x) & Wumpus(x)))", "all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterpus(x) & Gorpus(x) & Wumpus(x)))", "all x.((Zumpus(x) | Jompus(x) | Lempus(x)) -> (Steerpus(x) & Gorpus(x) & Wumpus(x)))", "all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> Sterpus(x) & Gorpus(x) & Wumpus(x))"]}
{"id": "prontoqa_train_1777", "nl": "Each shumpus is a gorpus and a lempus and a grimpus.", "fol": "all x. (shumpus(x) -> (gorpus(x) & lempus(x) & grimpus(x)))", "prediction": ["all x.(Shumpus(x) -> (Gorpus(x) & Lempus(x) & Grimpus(x)))", "(all x.(Shumpus(x) -> Gorpus(x)) & all y.(Lempus(y) & All z.(Grimpus(z))) -> Grimpus(z)))", "all x y.((Shumpus(x) & Gorpus(x) & Lempus(y) & Grimpus(y)) -> (Gorpus(x) & Lempus(y) & Grimpus(y)))", "all x y z.((Shumpus(x) & Gorpus(y) & Lempus(z)) -> (Gorpus(x) & Grimpus(z)))", "all x.(Shumpus(x) -> (Gorpus(x) & Lempus(x) & Grimpus(x)))", "all x y.((Shumpus(x) & Gorpus(y)) -> (Lempus(x) & Grimpus(x)))", "(all x.(Shumpus(x) -> Gorpus(x)) & all y.(Lempus(y) & All z.(Grimpus(z))) -> Grimpus(z)))", "all x.(Shumpus(x) -> (Gorpus(x) & Lempus(x) & Grimpus(x)))", "(all x.(Shumpus(x) -> Gorpus(x)) & all y.(Lempus(y) & All z.(Grimpus(z))) -> Grimpus(z)))", "all x.(Shumpus(x) -> (Gorpus(x) & Lempus(x) & Grimpus(x)))", "(all x.(Shumpus(x) -> Gorpus(x)) & (Lempus(x) | Grimpus(x)))", "all x.(Shumpus(x) -> (Gorpus(x) | Lempus(x) | Grimpus(x)))", "exists x.(Shumpus(x) & Gorpus(x) & Lempus(x) & Grimpus(x))", "all x.(Shumpus(x) -> (Gorpus(x) & Lempus(x) & Grimpus(x)))", "exists x.(Shumpus(x) & Gorpus(x) & Lempus(x) & Grimpus(x))", "exists x.(Shumpus(x) & Gorpus(x) & Lempus(x) & Grimpus(x))"]}
{"id": "prontoqa_train_1778", "nl": "Fae is a sterpus and Fae is a zumpus and Fae is not a gorpus.", "fol": "(sterpus(Fae) & zumpus(Fae) & -gorpus(Fae))", "prediction": ["(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> -Gorpus(x)))", "all x y z.((Fae(x) & Sterpus(x) & Zumpus(y) & -Gorpus(z)) -> (Sterpus(x) & Zumpus(y) & -Gorpus(z)))", "(all x y z.((Fae(x) & Sterpus(y) & Zumpus(z)) -> (Stereo(x) & Zumpus(y) & -Gorpus(z))))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Zumpus(x)) & -Fae(x)))", "(all x.(Fae(x) -> Sterpus(x)) & all y.(Fae(y) -> Zumpus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "all x y z.((Fae(x) & Sterpus(y) & Zumpus(z)) -> (Sterpus(x) & Zumpus(y) & -Gorpus(z)))", "all x y.((Fae(x) & Sterpus(x) & Zumpus(y)) -> (-Gorpus(x)))", "all x y z.((Fae(x) & Sterpus(x) & Toshpus(y) & -Gorpus(z)) -> (Sterpus(x) & Zumpus(y) & -Gorpus(z)))", "(all x y.(Fae(x) -> Sterpus(x)) & (Fae(y) -> Zumpus(y)) & (Fae(y) -> -Gorpus(y)))", "all x.(Fae(x) -> (Sterpus(x) & Zumpus(x) & -Gorpus(x)))", "(all x y z.((Fae(x) & Sterpus(y)) -> (Sterepus(z) & Zumpus(z)) & ((Fae(x) & Gorpus(x)) -> -Gorpus(x)))", "(all x.(Fae(x) -> Sterepus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> -Gorpus(x)))", "all x y z.(Fae(x) -> (Sterpus(x) & Zumpus(y) & -Gorpus(z)))", "all x.(Fae(x) -> (Sterpus(x) & Zumpus(x) & -Gorpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & all y.(Fae(y) -> Zumpus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "(All x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Zumpus(x)) & -Fae(x)))"]}
{"id": "prontoqa_train_1779", "nl": "Everything that is an impus and a lempus and a wumpus is a numpus, a dumpus, and a zumpus.", "fol": "all x. ((impus(x) & lempus(x) & wumpus(x)) -> (numpus(x) & dumpus(x) & zumpus(x)))", "prediction": ["all x.((Impose(x) & Lempus(x) & Wumpus(x)) -> (Numpus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Issue(x) & IsLempus(x) & IsWumpus(x)) -> (Numpus(x) & Dumpus(x) & Zumpus(x)))", "all x y.((Imposs(x) & Lempus(y) & Wumpus(y)) -> (Numpus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Impossible(x) & Lempus(x) & Wumpus(x)) -> (Numpus(x) & Dumpus(x) & Zumpus(x)))", "all x.(Impose(x) & Lempus(x) & Wumpus(x)) -> (Numpus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Impose(x) & Lempus(x) & Wumpus(x)) -> (Numpus(x) & Dumpus(x) & Zumpus(x)))", "all x y z.((Impos(x) & Lempus(y) & Wumpus(z) & IsAndIs(x,y,z)) -> (Numpus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Impose(x) & Lempus(x) & Wumpus(x)) -> (Numpus(x) | Dumpus(x) | Zumpus(x)))", "all x.((Issue(x) & IsLempus(x) & IsWumpus(x)) -> (Numpus(x) & Dumpus(x) & Zumpus(x)))", "(all x.((Imposs(x) & Lempus(x) & Wumpus(x)) -> (Numpus(x) & Dumpus(x) & Zumpus(x)))", "all x y.((Impose(x) & Lempus(y) & Wumpus(y)) -> (Numpus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Impact(x) & Lempus(x) & Wumpus(x)) -> (Numpus(x) & Dumpus(x) & Zumpus(x)))", "(all x.((Impose(x) & Lempus(x) & Wumpus(x)) -> (Numpus(x) & Dumpus(x) & Zumpus(x)))", "all x.(Impose(x) & Lempus(x) & Wumpus(x)) -> (Numpus(x) & Dumpus(x) & Zumpus(x)))", "(all x.((Imposer(x) & Lempus(x) & Wumpus(x)) -> (Numpus(x) | Dumpus(x) | Zumpus(x)))", "all x.(Impose(x) -> (Lempus(x) & Wumpus(x)) & Numpus(x) & Dumpus(x) & Zumpus(x))"]}
{"id": "prontoqa_train_1780", "nl": "Polly is an impus.", "fol": "impus(Polly)", "prediction": ["all x.(Polly(x) -> Is(x))", "Polly is a impus.", "(Impossible(Polly))", "all x.(Polly(x) -> IsImpossible(x))", "(IsPolly(Polly) & IsImpossible(Polly))", "Polly is a impus.", "Polly is an impus.", "all x.(Polly(x) -> Is(x,y))", "(Impossible(Polly)", "All x.(Polly(x) -> Is(x))", "all x.(Polly(x) -> Impossible(x))", "(Impossible(Polly,y))", "All x.(Polly(x) -> IsImpossible(x))", "Polly is a impus.", "exists x.(Polly(x) & Is(x))", "All x.(Polly(x) -> IsImpossible(x))"]}
{"id": "prontoqa_train_1781", "nl": "Every jompus is not an impus.", "fol": "all x. (jompus(x) -> -impus(x))", "prediction": ["all x.(Jompus(x) -> -Impossible(x))", "(all x.(Jompus(x) -> -Impossible(x)))", "all x.(Jompus(x) -> -Impossible(x))", "-Impossible(jompus)", "all x y.((Jompus(x) & IsNotImpossed(y)) -> -Impossible(x))", "-Impossed(jompus)", "all x.(Jimpus(x) -> -Impossible(x))", "all x.(Jompus(x) -> -Impossible(x))", "all x.(Jompus(x) -> -Is(x,Is(x,Is(x)))", "all x.(Jompus(x) -> -Impossed(x))", "-Impossible(jompus)", "all x.(Jimpus(x) -> -Impossible(x))", "all x.(Jompus(x) -> -Illegal(x))", "all x.(Jumpus(x) -> -Impossible(x))", "exists x.(Jomess(x) & -Is(x,Is(x,Is)))", "all x.(Jompus(x) -> -Impossible(x))"]}
{"id": "prontoqa_train_1782", "nl": "Lorpuses are impuses.", "fol": "all x. (lorpus(x) -> impus(x))", "prediction": ["all x.(Lorpus(x) -> Issue(x))", "all x y.((Lorpus(x) & Issue(y)) -> Issue(x,y))", "all x.(Lorpus(x) -> Issue(x))", "(Issues(lorpuses) & -Issues(lorpuses))", "all x y.((Lorpuse(x) & Issue(y)) -> Issue(x,y))", "all x.(Lorpuse(x) -> Issue(x))", "all x.(Lorpus(x) -> Issue(x))", "all x y.((Lorpus(x) & Issue(y)) -> Issue(x,y))", "all x.((Lorpuse(x) & Issue(x)) -> Issue(x))", "all x.(Lorpus(x) -> Issue(x))", "all x.(Lorpuse(x) -> Issue(x))", "all x.(Lorpus(x) -> Impermissible(x))", "all x y.((Lorpus(x) & Issue(y)) -> Issue(x,y))", "all x.(Lurpuse(x) -> Isolated(x))", "all x.(Lorpus(x) -> Issues(x))", "All x.(Lorpus(x) -> Imperium(x))"]}
{"id": "prontoqa_train_1783", "nl": "Sam is a numpus or Sam is an impus or Sam is not a lorpus.", "fol": "(numpus(Sam) | impus(Sam) | -lorpus(Sam))", "prediction": ["all x.(Sam(x) -> (Numpus(x) | Impossible(x) | -Lorpus(x)))", "((Sam(sam) & Numpus(sam)) | (Sam(sam) & IsImpossible(sam)) | (Sam(sam) & -Lorpus(sam))))", "(all x.(Sam(x) -> Numpus(x)) | (Sam(x) -> Imperator(x)) | (Sam(x) -> -Lorpus(x))))", "(exists x.(Sam(x) & (Numpus(x) | Imperator(x))) | -Lorpus(x)))", "all x.(Sam(x) -> (Numpus(x) | IsImpossible(x) | -Lorpus(x)))", "((Sam(sam) & Numpus(sam)) | (Sam(sam) & Impossible(sam)) | (Sam(sam) & -Lorpus(sam))))", "all x.((Sam(x) & (Numpus(x) | Imperator(x) | -Lorpus(x))) -> -Lorpus(x))", "(exists x.(Sam(x) & (Numpus(x) | Impossible(x) | -Lorpus(x))))", "all x y.((Sam(x) & Numpus(x)) | (Impossible(x) | -Lorpus(y))))", "((Sam) & (Numpus(Sam) | Imperator(Sam))) | (-Lorpus(Sam))))", "(all x.(Sam(x) -> Numpus(x)) | (Sam(x) -> IsPlatform(x)) | (Sam(x) -> -Lorpus(x))))", "exists x.(Sam(x) & ((Numpus(x) & -Lorpus(x)) | (Impossible(x) & -Lorpus(x))))", "all x.(Sam(x) -> (Numpus(x) | Impossible(x) | -Lorpus(x)))", "exists x.(Sam(x) & ((Numpus(x) | Impossible(x)) | -Lorpus(x))))", "all x.(Sam(x) -> (Numpus(x) | Imperator(x) | -Lorpus(x)))", "all x.((Sam(x) & (Numpus(x) | Imperator(x) | -Lorpus(x))) -> Numpus(x))"]}
{"id": "prontoqa_train_1784", "nl": "Yumpuses are lorpuses, vumpuses, and impuses.", "fol": "all x. (yumpus(x) -> (lorpus(x) & vumpus(x) & impus(x)))", "prediction": ["all x.(Yumpus(x) -> (Lorpus(x) | Vampuse(x) | Issue(x)))", "(all x.(Yumpuse(x) -> (Lorpus(x) | Vampuse(x) | Issue(x))))", "(Lorpuse(y) | Vampuse(y) | Issue(y)))", "all x y.((Yumpuse(x) & Lorpus(y)) -> (Vampuse(x) | Issue(x)))", "all x.(Yumpus(x) -> (Lorpus(x) | Vampuse(x) | Impermissible(x)))", "(all x.(Yumpuse(x) -> (Lorpuse(x) | Vampuse(x) | Issue(x))))", "all x.(Yumpuse(x) -> (Lorpus(x) | Vampuse(x) | Issue(x)))", "all x.(Yumpus(x) -> (Lorpus(x) | Vampus(x) | Imperium(x)))", "all x y.((Yumpuse(x) & Lorpus(y)) -> (Vampuse(x) | Issue(x)))", "all x.(Umpuse(x) -> (Lorpus(x) | Vampuse(x) | Imperium(x)))", "(all x.(Yumpus(x) -> (Lorpus(x) | Vampus(x) | Isolate(x)))", "all x.(Yumpus(x) -> (Lorpus(x) | Vampuse(x) | Issue(x)))", "(all x.(Yumpuse(x) -> (Lorpuse(x) | Vampuse(x) | Impermissible(x)))", "all x.(Umpus(x) -> (Lorpus(x) | Vampus(x) | Impossible(x)))", "all x.(Yumpus(x) -> (Lorpus(x) & Vampuse(x) & Impermissible(x)))", "all x.(Umpis(x) -> (Lorpus(x) | Vampus(x) | Impermissible(x)))"]}
{"id": "prontoqa_train_1785", "nl": "Max is a jompus, a lorpus, or a vumpus.", "fol": "(jompus(Max) | lorpus(Max) | vumpus(Max))", "prediction": ["all x.(Max(x) -> (Jompus(x) | Lorpus(x) | Vumpus(x)))", "(Jompus(Max) | Lorpus(Max) | Vumpus(Max))", "(exists x.(Max(x) & Jompus(x)) | exists y.(Lorpus(y) & -Jompus(y))) | exists z.(Max(z) & Vumpus(z))))", "all x.(Max(x) -> (Jompus(x) | Lorpus(x) | Vumpus(x)))", "(all x.(Max(x) -> Jompus(x)) | (Lorpus(x) | Vumpus(x))))", "(Jompus(Max) | Lorpus(Max) | Vumpus(Max))", "all x.(Max(x) -> (Jimpus(x) | Lorpus(x) | Vumpus(x)))", "exists x.(Max(x) & ((Jompus(x) & -Lorpus(x)) | (-Jompus(x) & -Lorpus(x)))))", "all x.(Max(x) -> (Jompus(x) | Lorpus(x) | Vumpus(x)))", "(Jimpus,Lorpus,Vumpus)", "(Jompus(Max) | Lorpus(Max) | Vumpus(Max))", "all x.(Max(x) -> (Jompus(x) | Lorpus(x) | Vumpus(x)))", "all x.(Max(x) -> (Jimpus(x) | Lorpus(x) | Vumpus(x)))", "all x.(M Max(x) -> (Jompus(x) | Lorpus(x) | Vumpus(x)))", "all x.(Max(x) -> (Jompus(x) | Lorpus(x) | Vumpus(x)))", "all x.(Max(x) -> (Jompus(x) | Lorpus(x) | Vumpus(x)))"]}
{"id": "prontoqa_train_1786", "nl": "Everything that is a vumpus and a yumpus and a brimpus is a tumpus, a zumpus, and a shumpus.", "fol": "all x. ((vumpus(x) & yumpus(x) & brimpus(x)) -> (tumpus(x) & zumpus(x) & shumpus(x)))", "prediction": ["all x.((Vumpus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) & Zumpus(x) & Humpus(x)))", "all x y.((Vumpus(x) & Yumpus(y) & Brimpus(x)) -> (Tumpus(y) & Zumpus(y) & Humpus(y)))", "all x y z.((Vumpus(x) & Yumpus(y) & Brimpus(z) & Is(x,y) & Is(x,z)) -> (Tumpus(x) & Is(x,z) & Is(x,z) & Is(x,z) & Is(x,y)))", "all x.((Vumpus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) & Zumpus(x) & Humpus(x)))", "(all x.((Vumpus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) & Zumpus(x) & Humpus(x)))", "all x.((Vumpus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) & Zumpus(x) & Humpus(x)))", "all x y z.((Vumpus(x) & Yumpus(y) & Brimpus(z) & HasVumpus(x,y) & HasVumpus(x,z)) -> (Tumpus(x) & HasZumpus(x) & HasShumpus(x)))", "all x.((Vumpus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) | Zumpus(x) | Humpus(x)))", "(all x.((Vumpus(x) | Yumpus(x) | Brimpus(x))) -> (Tumpus(x) | Zumpus(x) | Humpus(x)))", "all x.((Vumpus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) & Zumpus(x) & Humpus(x)))", "(all x.((Vumpus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) & Zumpus(x) & Humpus(x)))", "all x y.((Vumpus(x) & Yumpus(x) & Brimpus(y)) -> (Tumpus(x) | Zumpus(x) | Humpus(x)))", "all x.(VumpusAndYumpusAndBrimpus(x) -> (Tumpus(x) | Zumpus(x) | Humpus(x)))", "all x.((Vumpus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) | Zumpus(x) | Humpus(x)))", "all x.((Vumpus(x) & Yampus(x) & Brimpus(x)) -> (Tumpus(x) & Zumpus(x) & Humpus(x)))", "all x.((Vumpus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) | Zumpus(x) | Humpus(x)))"]}
{"id": "prontoqa_train_1787", "nl": "Every lempus is not a shumpus.", "fol": "all x. (lempus(x) -> -shumpus(x))", "prediction": ["all x.(Lempus(x) -> -Shumpus(x))", "all x.(Lempus(x) -> -Shumpus(x))", "-Shumpus(lempus)", "(all x.(Lempus(x) -> -Shumpus(x)))", "all x.(Lempus(x) -> -Shumpus(x))", "all x y.((Lempus(x) & Humpback(y)) -> -Shumpus(x))", "(all x.(Lempus(x) -> -Shumpus(x)))", "all x.(Lempus(x) -> -Shumpus(x))", "all x.(Lempus(x) -> -Shumpus(x))", "all x.(Lempus(x) -> -Shumpus(x))", "all x.(Lempus(x) -> -Shumpus(x))", "all x.(Limpus(x) -> -Shumpus(x))", "all x.(Lempus(x) -> -Shumpus(x))", "all x.(Limpus(x) -> -Shumpus(x))", "all x.(Limpus(x) -> -Shumpus(x))", "exists x.(Lempus(x) & -Shumpus(x))"]}
{"id": "prontoqa_train_1788", "nl": "Gorpuses are brimpuses, shumpuses, and sterpuses.", "fol": "all x. (gorpus(x) -> (brimpus(x) & shumpus(x) & sterpus(x)))", "prediction": ["all x.(Gorpuse(x) -> (Brimpus(x) | Shumpus(x) | Sterpus(x)))", "all x.(Gorpuse(x) -> (Brimpus(x) | Shumpus(x) | Sterpus(x)))", "all x y z.((Gorpuse(x) & Brimpuse(y) & Shumpuse(z)) -> (Brimpuse(x) | Shumpuse(z) | Sterpuse(z)))", "(all x.(Gorpuse(x) -> Brimpuse(x)) & all y.(Shumpuse(y) & -Sterpuse(y))))", "all x y.((Gorpuse(x) & Brimpuse(y)) | Shumpuse(y) | Sterpuse(y))", "(all x.(Gorpuse(x) -> (Brimpus(x) | Humpus(x) | Sterpus(x)))", "all x.(Gorpuse(x) -> (Brimpus(x) | Shumpus(x) | Sterpus(x)))", "all x.(Gorpus(x) -> (Brimpus(x) | Shumpus(x) | Sterpus(x)))", "all x.(Gorpuse(x) -> (Brimpus(x) | Shumpus(x) | Sterpus(x)))", "all x.(Gorpus(x) -> (Brimpus(x) | Shumpus(x) | Sterpus(x)))", "(all x.(Gorpuse(x) -> Brimpuse(x)) & all y.(Shumpuse(y) & -Sterpuse(y))))", "(all x.(Gorpuse(x) -> (Brimpus(x) | Shumpus(x) | Sterpus(x)))", "(all x.(Gorpuse(x) -> Brimpuse(x)) & all y.(Shumpuse(y) & All z.(Sterpuse(z)) -> Steruse(z))))", "(all x.(Gorpuse(x) -> (Brimpus(x) | Humpus(x) | Sterpus(x)))", "all x.(Gorpuse(x) -> (Brimpus(x) | Shumpus(x) | Sterpuse(x)))", "all x.(Gorpuse(x) -> (Brimpus(x) | Shumpus(x) | Sterpuse(x)))"]}
{"id": "prontoqa_train_1789", "nl": "Stella is a jompus and a zumpus and a lempus.", "fol": "(jompus(Stella) & zumpus(Stella) & lempus(Stella))", "prediction": ["all x.(Stella(x) -> (Jompus(x) & Zumpus(x) & Lempus(x)))", "(Jompus(Stella) & Zumpus(Stella) & Lempus(Stella))", "all x y.((Stella(x) & Jompus(y)) -> (Tompus(x) & Lempus(x)))", "(all x.(Stella(x) -> Jompus(x)) & (Tompus(x) | Lempus(x))))", "all x.(Stella(x) -> (Jompus(x) & Zumpus(x) & Lempus(x)))", "(all x.(Stella(x) -> Jompus(x)) & all y.(Tompus(y) & Lempus(y))))", "all x y.((Stella(x) & Jompus(y) & Zumpus(y) & Lempus(y)) -> (Jompus(x) & Zumpus(x) & Lempus(x)))", "(Jompus(Stella) & Zumpus(Stella) & Lempus(Stella))", "(Jompus(Stella) | Zumpus(Stella) | Lempus(Stella))", "all x.(Stella(x) -> (Jompus(x) | Zumpus(x) | Lempus(x)))", "(Jimpus(Stella) & Zumpus(Stella) & Lempus(Stella))", "all x.(Stella(x) -> (Jompus(x) & Zumpus(x) & Lempus(x)))", "exists x.(Stella(x) & Jompus(x) & Zumpus(x) & Lempus(x))", "all x.(Stella(x) -> (Jimpus(x) & Zumpus(x) & Lempus(x)))", "(all x.(Stella(x) -> Jompus(x)) & (Tompus(x) | Lempus(x))))", "exists x.(Stella(x) & Jompus(x) & Zumpus(x) & Lempus(x))"]}
{"id": "prontoqa_train_1790", "nl": "Each shumpus is not a numpus.", "fol": "all x. (shumpus(x) -> -numpus(x))", "prediction": ["all x.(Shumpus(x) -> -Numpus(x))", "all x.(Shumpus(x) -> -Numpus(x))", "all x.(Shumpus(x) -> -numpus(x))", "all x y.((Shumpus(x) & Numpus(y)) -> -Numpus(x))", "all x.(Shumpus(x) -> -Numpus(x))", "(-numpus)", "all x.(Shumpus(x) -> -Numpus(x))", "(-numpus)", "all x.(Shumpus(x) -> -numpus(x))", "(-numpus)", "all x.(Shumpus(x) -> -Numpus(x))", "all x.(Shumpus(x) -> -Numpus(x))", "all x.(Shumpus(x) -> -Numpus(x))", "exists x.(Shumpus(x) & -numpus(x))", "all x.(Shumpus(x) -> -Numpus(x))", "exists x.(Shumpus(x) & -numpus(x))"]}
{"id": "prontoqa_train_1791", "nl": "Each dumpus is a numpus, a rompus, and a vumpus.", "fol": "all x. (dumpus(x) -> (numpus(x) & rompus(x) & vumpus(x)))", "prediction": ["all x.(Dumpus(x) -> (numpus(x) | rompus(x) | vumpus(x)))", "(all x.(Dumpus(x) -> Numpus(x)) & all y.(Rompus(y) & all z.(Vumpus(z)) -> Vumpus(z))))", "all x.(Dumpus(x) -> (Numpus(x) | Rompus(x) | Vumpus(x)))", "all x.(Dumps(x) -> (numpus(x) | rompus(x) | vumpus(x)))", "all x y z.(Dumpus(x) -> (Numpus(y) | Rompus(y) | Vumpus(z)))", "(all x.(Dumpus(x) -> Numpus(x)) & all y.(Rompus(y) & all z.(Vumpus(z) & -Numpus(z)) -> Rompus(z)))", "all x y.((Dumpus(x) & Numpus(y)) -> (Rompus(y) & Vumpus(y)))", "all x.(Dumpus(x) -> (Numpus(x) | Rompus(x) | Vumpus(x)))", "(all x.(Dumpus(x) -> Numpus(x)) & all y.(Rompus(y) & all z.(Vimpus(z) & -Numpus(z))) -> Vumpus(z)))", "all x.(Dumpus(x) -> (numpus(x) | rompus(x) | vumpus(x)))", "(all x.(Dumpus(x) -> (Numpus(x) | Rompus(x) | Vumpus(x)))", "exists x.(Dumps(x) & (Numpus(x) | Rompus(x) | Vumpus(x)))", "(all x.(Dumpsis(x) -> (numpus) | rompus(x) | vumpus(x)))", "all x.(Dumpus(x) -> (Numpus(x) | Rompus(x) | Vumpus(x)))", "exists x.(Dumpus(x) & Numpus(x) & Rompus(x) & Vumpus(x))", "all x.(Dupus(x) -> (Numpus(x) | Rompus(x) | Vumpus(x)))"]}

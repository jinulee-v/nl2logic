{"id": "eqasc_validation_0", "prediction": "all x.(Climate(x) -> (TermsOfTemperature(x) & TermsOfMoisture(x)))", "score": 0}
{"id": "eqasc_validation_0", "prediction": "all x.(Climate(x) -> (Terms(x,Temperature) & Terms(x,Moisture)))", "score": 0}
{"id": "eqasc_validation_0", "prediction": "all x.(Climate(x) -> (DescribedInTermsOfTemperature(x) & DescribedInTermsOfMoisture(x)))", "score": 0}
{"id": "eqasc_validation_0", "prediction": "all x.(Climate(x) -> (Temperature(x) & Moisture(x)))", "score": 0}
{"id": "eqasc_validation_0", "prediction": "all x.(Climate(x) -> (DepictedInTermsOfTemperature(x) & DepictedInTermsOfMoisture(x)))", "score": 0}
{"id": "eqasc_validation_0", "prediction": "all x y.((Climate(x) & Temperature(y) & Moisture(y)) -> DescribedInTerms(x,y))", "score": 1}
{"id": "eqasc_validation_0", "prediction": "all x y.((Climate(x) & Temperature(y) & Moisture(z)) -> DescribedInTerms(x,y,z))", "score": 1}
{"id": "eqasc_validation_0", "prediction": "all x.(Climate(x) -> (TerminatedByTemperature(x) & DescribedByMoisture(x)))", "score": 0}
{"id": "eqasc_validation_0", "prediction": "all x.(Climate(x) -> (TermsOfTemperature(x) & NamesOfMoisture(x)))", "score": 0}
{"id": "eqasc_validation_0", "prediction": "all x.(Climate(x) -> (TermsOfTemperature(x) & WordsOfMoisture(x)))", "score": 0}
{"id": "eqasc_validation_0", "prediction": "all x y.((Climate(x) & Temperature(y) & Moisture(y)) -> GenerallyDescribedInTerms(x,y))", "score": 0}
{"id": "eqasc_validation_1", "prediction": "all x.(FireBehavior(x) -> (DrivenByLocalWeatherConditions(x) & (Winds(x) | Temperature(x) | Moisture(x))))", "score": 0}
{"id": "eqasc_validation_1", "prediction": "all x.(FireBehavior(x) -> (DrivenByLocalWeatherConditions(x) & WindConditions(x) & TemperatureConditions(x) & MoistureConditions(x)))", "score": 0}
{"id": "eqasc_validation_1", "prediction": "all x y z.((FireBehavior(x) & LocalWeatherCondition(y) & (Winds(z) | Temperature(z) | Moisture(z))) -> DrivenBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1", "prediction": "all x y.((FireBehavior(x) & LocalWeatherConditions(y)) -> (DrivenByWinds(x) & DrivenByTemperature(x) & DrivenByMoisture(x)))", "score": 0}
{"id": "eqasc_validation_1", "prediction": "all x.(FireBehavior(x) -> (DrivenBy(x,Winds) & DrivenBy(x,Temperature) & DrivenBy(x,Moisture)))", "score": 0}
{"id": "eqasc_validation_1", "prediction": "all x.(FireBehavior(x) -> (DrivenByLocalWeather(x) & (Winds(x) | Temperature(x) | Moisture(x))))", "score": 0}
{"id": "eqasc_validation_1", "prediction": "all x y.((FireBehavior(x) & LocalWeatherCondition(y)) -> (DrivenByWinds(x) & DrivenByTemperature(x) & DrivenByMoisture(x)))", "score": 0}
{"id": "eqasc_validation_1", "prediction": "all x.(FireBehavior(x) -> (DrivenByWinds(x) & DrivenByTemperature(x) & DrivenByMoisture(x)))", "score": 0}
{"id": "eqasc_validation_1", "prediction": "all x.(FireBehavior(x) -> (DrivenBy(x,winds) & DrivenBy(x,temperature) & DrivenBy(x,moisture)))", "score": 0}
{"id": "eqasc_validation_1", "prediction": "all x y.((FireBehavior(x) & (Winds(y) | Temperature(y) | Moisture(y))) -> DrivenBy(x,y))", "score": 0}
{"id": "eqasc_validation_1", "prediction": "all x y z.((FireBehavior(x) & LocalWeatherCondition(y) & (Winds(z) | Temperature(z) | Moisture(z))) -> DrivenBy(x,y))", "score": 0}
{"id": "eqasc_validation_1", "prediction": "all x.(FireBehavior(x) -> (DrivenByLocalWeatherConditions(x) & WindsTemperatureMoisture(x)))", "score": 0}
{"id": "eqasc_validation_1", "prediction": "all x y z.((FireBehavior(x) & (Winds(y) | Temperature(y) | Moisture(y))) -> DrivenBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1", "prediction": "all x.(FireBehavior(x) -> (DrivenByLocalWeatherConditions(x) & WindsTemperatureMoistureMoisture(x)))", "score": 0}
{"id": "eqasc_validation_2", "prediction": "all x.(Climate(x) -> LocalWeatherConditions(x))", "score": 0}
{"id": "eqasc_validation_2", "prediction": "all x.(Climate(x) -> (TermsOfLocalWeatherConditions(x) & LocalWeatherConditions(x)))", "score": 0}
{"id": "eqasc_validation_2", "prediction": "all x.(Climate(x) -> (LocalWeatherConditions(x) & LocalWeatherConditions(x)))", "score": 0}
{"id": "eqasc_validation_2", "prediction": "all x y.((Climate(x) & LocalWeatherConditions(y)) -> GenerallyDescribedInTerms(x,y))", "score": 0}
{"id": "eqasc_validation_2", "prediction": "all x.(Climate(x) -> (TermsOfLocalWeatherConditions(x) & DescribedInTermsOfLocalWeatherConditions(x)))", "score": 0}
{"id": "eqasc_validation_2", "prediction": "all x y.((Climate(x) & LocalWeatherConditions(y)) -> DescribedInTerms(x,y))", "score": 0}
{"id": "eqasc_validation_2", "prediction": "all x.(Climate(x) -> (TermsOfLocalWeatherConditions(x) & DescribedInTermsOfWeatherConditions(x)))", "score": 0}
{"id": "eqasc_validation_2", "prediction": "all x.(Climate(x) -> (TermsOfLocalWeatherConditions(x) & LocalWeatherConditions(x) & LocalWeatherConditions(x)))", "score": 0}
{"id": "eqasc_validation_2", "prediction": "all x y z.((Climate(x) & LocalWeatherConditions(y) & LocalWeatherConditions(z)) -> LocalWeatherConditions(x,y,z))", "score": 0}
{"id": "eqasc_validation_2", "prediction": "all x.(Climate(x) -> (LocalWeatherConditions(x) & LocalWeatherConditions(x) & LocalWeatherConditions(x)))", "score": 0}
{"id": "eqasc_validation_2", "prediction": "all x.(Climate(x) -> (TermsOfLocalWeather(x) & LocalWeatherConditions(x)))", "score": 0}
{"id": "eqasc_validation_2", "prediction": "all x.(Climate(x) -> (localWeatherConditions(x) & LocalWeatherConditions(x)))", "score": 0}
{"id": "eqasc_validation_2", "prediction": "all x y z.((Climate(x) & LocalWeatherConditions(y) & LocalWeatherConditions(z)) -> GenerallyDescribedInTerms(x,y,z))", "score": 0}
{"id": "eqasc_validation_3", "prediction": "All x.((Instructions(x) & Altitude(y)) -> VariableClimate(x,y))", "score": -1}
{"id": "eqasc_validation_3", "prediction": "Instructions ClimateClimate(c) varies according to altitude(c))", "score": -1}
{"id": "eqasc_validation_3", "prediction": "All x.((Instructions(x) & Altitude(y)) -> ClimateClimate(x,y))", "score": -1}
{"id": "eqasc_validation_3", "prediction": "All x.((Instructions(x) & Altitude(x)) -> VariableClimate(x))", "score": -1}
{"id": "eqasc_validation_3", "prediction": "all x.((Instructions(x) & Altitude(y)) -> VariableClimate(x,y))", "score": 0}
{"id": "eqasc_validation_3", "prediction": "All x.((Instructions(x) & Altitude(y)) -> Variates(x,y))", "score": -1}
{"id": "eqasc_validation_3", "prediction": "All x.((Instructions(x) & Altitude(x)) -> ClimateClimate(x))", "score": -1}
{"id": "eqasc_validation_3", "prediction": "All x.((Instructions(x) & Altitude(y)) -> ClimateClimateVariates(x,y))", "score": -1}
{"id": "eqasc_validation_3", "prediction": "All x.((Instructions(x) & Altitude(y)) -> Variable(x,y))", "score": -1}
{"id": "eqasc_validation_3", "prediction": "All x.((Instructions(x) & Altitude(x)) -> ClimateClimateVariates(x))", "score": -1}
{"id": "eqasc_validation_3", "prediction": "All x.((Instruction(x) & Altitude(y)) -> ClimateClimate(x,y))", "score": -1}
{"id": "eqasc_validation_3", "prediction": "Instructions ClimateClimate(Climate) varies according to altitude(Climate))", "score": -1}
{"id": "eqasc_validation_3", "prediction": "All x.((Instruction(x) & Altitude(x)) -> ClimateClimate(x))", "score": -1}
{"id": "eqasc_validation_3", "prediction": "All x.((Instructions(x) & Altitude(y)) -> Climate(x,y))", "score": -1}
{"id": "eqasc_validation_3", "prediction": "all x.((Instructions(x) & Altitude(y)) -> Variates(x,y))", "score": 0}
{"id": "eqasc_validation_3", "prediction": "All x.((Instructions(x) & Altitude(x)) -> Climate(x))", "score": -1}
{"id": "eqasc_validation_4", "prediction": "all x.((Temperature(x) & Moisture(x)) -> VariatesByAlltitude(x))", "score": 0}
{"id": "eqasc_validation_4", "prediction": "all x y.((Temperature(x) & Moisture(y)) -> VariatesByAlltitude(x,y))", "score": 0}
{"id": "eqasc_validation_4", "prediction": "all x.((Temperature(x) | Moisture(x)) -> VariatesByAlltitude(x))", "score": 0}
{"id": "eqasc_validation_4", "prediction": "all x.((Temperature(x) & Moisture(x)) -> VariableByAlltitude(x))", "score": 0}
{"id": "eqasc_validation_4", "prediction": "all x.((Temperature(x) & Moisture(x)) -> VaryByAlltitude(x))", "score": 0}
{"id": "eqasc_validation_4", "prediction": "all x.((Temperature(x) & Moisture(x)) -> VariatesByAltitude(x))", "score": 0}
{"id": "eqasc_validation_4", "prediction": "all x.((Temperature(x) & Moisture(x)) -> VariegatesByAlltitude(x))", "score": 0}
{"id": "eqasc_validation_4", "prediction": "all x.((Temperature(x) & Moisture(x)) -> VariatesAtAlltitude(x))", "score": 0}
{"id": "eqasc_validation_4", "prediction": "all x y z.((Temperature(x) & Moisture(y) & Alltitude(z)) -> VariatesBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_4", "prediction": "all x y z.((Temperature(x) & Moisture(y) & Alltitude(z)) -> (VariatesBy(x,y,z) & VariatesBy(x,y)))", "score": 0}
{"id": "eqasc_validation_4", "prediction": "all x y z.((Temperature(x) & Moisture(y) & Alltitude(z)) -> (VariatesBy(x,y,z) & VariatesBy(x,y,z)))", "score": 0}
{"id": "eqasc_validation_4", "prediction": "all x.((Temperature(x) | Moisture(x)) -> VaryByAlltitude(x))", "score": 0}
{"id": "eqasc_validation_4", "prediction": "all x y z.((Temperature(x) & Moisture(y) & Alltitude(z)) -> (VariatesByAlltitude(x,y,z) & VariatesByAlltitude(x,y)))", "score": 0}
{"id": "eqasc_validation_4", "prediction": "all x y z.((Temperature(x) & Moisture(y) & Alltitude(z)) -> VariatesByAlltitude(x,y,z))", "score": 0}
{"id": "eqasc_validation_4", "prediction": "all x.((Temperature(x) & Moisture(x)) -> Variable(x))", "score": 0}
{"id": "eqasc_validation_4", "prediction": "all x y.((Temperature(x) & Moisture(y) & Alltitude(x)) -> VariatesBy(x,y))", "score": 0}
{"id": "eqasc_validation_5", "prediction": "all x.(ClimateChange(x) -> GlobalProblem(x))", "score": 0}
{"id": "eqasc_validation_5", "prediction": "all x y.((ClimateChange(x) & GlobalProblem(y)) -> GlobalProblem(x,y))", "score": 0}
{"id": "eqasc_validation_5", "prediction": "all x y.((ClimateChange(x) & GlobalProblem(y)) -> GlobalProblem(x))", "score": 0}
{"id": "eqasc_validation_5", "prediction": "all x.((ClimateChange(x) & GlobalProblem(x)) -> GlobalProblem(x))", "score": 0}
{"id": "eqasc_validation_5", "prediction": "all x y.((ClimateChange(x) & GlobalProblem(y)) -> Global(x,y))", "score": 0}
{"id": "eqasc_validation_5", "prediction": "all x y.((ClimateChange(x) & GlobalProblem(y)) -> Global(x))", "score": 0}
{"id": "eqasc_validation_5", "prediction": "all x.((ClimateChange(x) & GlobalProblem(x)) -> Global(x))", "score": 0}
{"id": "eqasc_validation_5", "prediction": "all x y.((ClimateChange(x) & GlobalProblem(y)) -> GlobalPositive(x,y))", "score": 0}
{"id": "eqasc_validation_5", "prediction": "all x.(ClimateChange(x) -> GlobalPositive(x))", "score": 0}
{"id": "eqasc_validation_5", "prediction": "all x y.((ClimateChange(x) & GlobalProblem(y)) -> GlobalPositive(x))", "score": 0}
{"id": "eqasc_validation_5", "prediction": "all x.((ClimateChange(x) & GlobalProblem(x)) -> ClimateChange(x))", "score": 0}
{"id": "eqasc_validation_5", "prediction": "all x.((ClimateChange(x) & GlobalProblem(x)) -> GlobalPositive(x))", "score": 0}
{"id": "eqasc_validation_5", "prediction": "all x y.((ClimateChange(x) & GlobalProblem(y)) -> ClimateChange(x,y))", "score": 0}
{"id": "eqasc_validation_5", "prediction": "all x y.((ClimateChange(x) & GlobalProblem(x)) -> GlobalProblem(y))", "score": 0}
{"id": "eqasc_validation_5", "prediction": "all x y.((ClimateChange(x) & GlobalProblem(y)) -> Global(y))", "score": 0}
{"id": "eqasc_validation_6", "prediction": "all x.((Temperature(x) & Moisture(x)) -> ChangesGlobally(x))", "score": 0}
{"id": "eqasc_validation_6", "prediction": "all x.((Temperature(x) | Moisture(x)) -> ChangesGlobally(x))", "score": 0}
{"id": "eqasc_validation_6", "prediction": "all x.((Temperature(x) & Moisture(x)) -> GloballyChanges(x))", "score": 0}
{"id": "eqasc_validation_6", "prediction": "all x y.((Temperature(x) & Moisture(y)) -> ChangesGlobally(x,y))", "score": 0}
{"id": "eqasc_validation_6", "prediction": "all x y.((Temperature(x) & Moisture(y)) -> (ChangingGlobally(x,y) & Globally(x)))", "score": 0}
{"id": "eqasc_validation_6", "prediction": "all x.((Temperature(x) | Moisture(x)) -> GloballyChanges(x))", "score": 0}
{"id": "eqasc_validation_6", "prediction": "all x y.((Temperature(x) & Moisture(y)) -> GloballyChanges(x,y))", "score": 0}
{"id": "eqasc_validation_6", "prediction": "all x y.((Temperature(x) & Moisture(y)) -> (ChangesGlobally(x,y) & ChangesGlobally(x,y)))", "score": 0}
{"id": "eqasc_validation_6", "prediction": "all x y.((Temperature(x) & Moisture(y)) -> (ChangingGlobally(x,y) & Globally(x,y)))", "score": 0}
{"id": "eqasc_validation_6", "prediction": "all x y.((Temperature(x) & Moisture(y)) -> (ChangesGlobally(x,y) & Globally(x)))", "score": 0}
{"id": "eqasc_validation_6", "prediction": "all x y.((Temperature(x) & Moisture(y)) -> (ChangesGlobally(x,y) & Globally(x,y)))", "score": 0}
{"id": "eqasc_validation_6", "prediction": "all x.((Temperature(x) & Moisture(x)) -> GloballyChanging(x))", "score": 0}
{"id": "eqasc_validation_6", "prediction": "all x y.((Temperature(x) & Moisture(y)) -> (ChangesGlobally(x) & ChangesGlobally(x)))", "score": 0}
{"id": "eqasc_validation_6", "prediction": "all x y.((Temperature(x) & Moisture(y)) -> (ChangingGlobally(x) & Globally(x)))", "score": 0}
{"id": "eqasc_validation_6", "prediction": "all x y.((Temperature(x) & Moisture(y)) -> (ChangingGlobally(x,y) & Globally(y)))", "score": 0}
{"id": "eqasc_validation_6", "prediction": "all x.((Temperature(x) & Moisture(x)) -> GloballyChanged(x))", "score": 0}
{"id": "eqasc_validation_7", "prediction": "IntroductionToClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntro", "score": 0}
{"id": "eqasc_validation_7", "prediction": "IntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimate", "score": 0}
{"id": "eqasc_validation_7", "prediction": "IntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntro", "score": 0}
{"id": "eqasc_validation_7", "prediction": "IntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntro", "score": 0}
{"id": "eqasc_validation_7", "prediction": "IntroductionToClimateIntroductionToClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntro", "score": 0}
{"id": "eqasc_validation_7", "prediction": "IntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIn", "score": 0}
{"id": "eqasc_validation_7", "prediction": "IntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntro", "score": 0}
{"id": "eqasc_validation_7", "prediction": "IntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionClimateIntroductionToClimateIntroductionClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntro", "score": 0}
{"id": "eqasc_validation_7", "prediction": "IntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionClimateIntroductionClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntro", "score": 0}
{"id": "eqasc_validation_7", "prediction": "IntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntro", "score": 0}
{"id": "eqasc_validation_7", "prediction": "IntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionClimateIntroductionToClimateIntroductionToClimateIntroductionClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntro", "score": 0}
{"id": "eqasc_validation_7", "prediction": "IntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionClimateIntroductionToClimateIntroductionClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntro", "score": 0}
{"id": "eqasc_validation_7", "prediction": "IntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntro", "score": 0}
{"id": "eqasc_validation_7", "prediction": "IntroductionToClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroduction(ClimateIntro", "score": -1}
{"id": "eqasc_validation_7", "prediction": "IntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateIntroductionToClimateInclimate", "score": 0}
{"id": "eqasc_validation_7", "prediction": "IntroductionToClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateIntroductionClimateInitiation", "score": 0}
{"id": "eqasc_validation_8", "prediction": "all x.(AverageWeatherConditions(x) -> (DescribedInTermsOfTemperature(x) & DescribedInTermsOfMoisture(x)))", "score": 0}
{"id": "eqasc_validation_8", "prediction": "all x.(AverageWeatherCondition(x) -> (DescribedInTermsOfTemperature(x) & DescribedInTermsOfMoisture(x)))", "score": 0}
{"id": "eqasc_validation_8", "prediction": "all x.(AverageWeatherConditions(x) -> (DepictedInTermsOfTemperature(x) & DepictedInTermsOfMoisture(x)))", "score": 0}
{"id": "eqasc_validation_8", "prediction": "all x.(AverageWeatherConditions(x) -> (TermsOfTemperature(x) & TermsOfMoisture(x)))", "score": 0}
{"id": "eqasc_validation_8", "prediction": "all x.(AverageWeatherCondition(x) -> (TermsOfTemperature(x) & TermsOfMoisture(x)))", "score": 0}
{"id": "eqasc_validation_8", "prediction": "all x y.((AverageWeatherCondition(x) & Temperature(y) & Moisture(y)) -> DescribedInTerms(x,y))", "score": 0}
{"id": "eqasc_validation_8", "prediction": "all x y z.((AverageWeatherCondition(x) & Temperature(y) & Moisture(z)) -> (DescribedInTerms(x,y) & DescribedInTerms(x,z)))", "score": 0}
{"id": "eqasc_validation_8", "prediction": "all x y z.((AverageWeatherCondition(x) & Temperature(y) & Moisture(z)) -> (DescribedInTerms(x,y,z) & DescribedInTerms(x,z)))", "score": 0}
{"id": "eqasc_validation_8", "prediction": "all x y z.((AverageWeatherCondition(x) & Temperature(y) & Moisture(z)) -> (DescribedInTerms(x,y,z) & DescribedInTerms(x,y,z)))", "score": 0}
{"id": "eqasc_validation_8", "prediction": "all x y z.((AverageWeatherCondition(x) & Temperature(y) & Moisture(z)) -> (DepictedInTerms(x,y) & DepictedInTerms(x,z)))", "score": 0}
{"id": "eqasc_validation_8", "prediction": "all x y.((AverageWeatherCondition(x) & Temperature(y) & Moisture(y)) -> DescribedInTermsOf(x,y))", "score": 0}
{"id": "eqasc_validation_9", "prediction": "all x.(Cloud(x) -> (MadeOfMoisture(x) & WaterEvaporating(x)))", "score": 0}
{"id": "eqasc_validation_9", "prediction": "all x.(Cloud(x) -> (MadeOfMoisture(x) & MoistureFromWaterEvaporating(x)))", "score": 0}
{"id": "eqasc_validation_9", "prediction": "all x.(Cloud(x) -> (MadeOfMoisture(x) & MoistureEvaporating(x)))", "score": 0}
{"id": "eqasc_validation_9", "prediction": "all x y.((Cloud(x) & Moisture(y)) -> (MadeOf(x,y) & WaterEvaporating(y)))", "score": 0}
{"id": "eqasc_validation_9", "prediction": "all x.(Cloud(x) -> (MadeOfMoisture(x) & WaterEvaporatingMoisture(x)))", "score": 0}
{"id": "eqasc_validation_9", "prediction": "all x y.((Cloud(x) & Moisture(y)) -> (MadeOf(x,y) & WaterEvaporating(x)))", "score": 0}
{"id": "eqasc_validation_9", "prediction": "all x y z.((Cloud(x) & Moisture(y) & WaterEvaporating(z)) -> (MadeOf(x,y) & MoistureFrom(x,z)))", "score": 0}
{"id": "eqasc_validation_9", "prediction": "all x y.((Cloud(x) & Water(y)) -> (MadeOfMoisture(x) & WaterEvaporating(y)))", "score": 0}
{"id": "eqasc_validation_9", "prediction": "all x y z.((Cloud(x) & Moisture(y) & WaterEvaporating(z)) -> MadeOf(x,y))", "score": 0}
{"id": "eqasc_validation_9", "prediction": "all x y.((Cloud(x) & Water(y)) -> (MadeOfMoisture(x,y) & WaterEvaporating(y)))", "score": 0}
{"id": "eqasc_validation_9", "prediction": "all x y z.((Cloud(x) & Moisture(y) & Water(z)) -> (MadeOf(x,y) & Evaporating(z)))", "score": 0}
{"id": "eqasc_validation_9", "prediction": "all x y.((Cloud(x) & Water(y)) -> (MadeOfMoisture(x,y) & WaterEvaporating(x,y)))", "score": 0}
{"id": "eqasc_validation_9", "prediction": "all x y.((Cloud(x) & Moisture(y)) -> (MadeOf(x,y) & WaterEvaporating(z)))", "score": 0}
{"id": "eqasc_validation_9", "prediction": "all x.(Cloud(x) -> (MadeOfMoisture(x) & EvaporatingWater(x)))", "score": 0}
{"id": "eqasc_validation_9", "prediction": "all x.(Cloud(x) -> (MadeOfMoisture(x) & MoistureFromWater(x)))", "score": 0}
{"id": "eqasc_validation_10", "prediction": "all x.(Climate(x) -> (TermsOfTemperature(x) & TermsOfWater(x)))", "score": 0}
{"id": "eqasc_validation_10", "prediction": "all x.(Climate(x) -> (DescribedInTermsOfTemperature(x) & DescribedInTermsOfWater(x)))", "score": 0}
{"id": "eqasc_validation_10", "prediction": "all x y.((Climate(x) & Temperature(y) & Water(y)) -> DescribedInTerms(x,y))", "score": 0}
{"id": "eqasc_validation_10", "prediction": "all x y z.((Climate(x) & Temperature(y) & Water(z)) -> (DescribedIn(x,y) & In(x,z)))", "score": 0}
{"id": "eqasc_validation_10", "prediction": "all x y.((Climate(x) & Temperature(y) & Water(y)) -> DescribedIn(x,y))", "score": 0}
{"id": "eqasc_validation_10", "prediction": "all x.(Climate(x) -> (TermsOfTemperature(x) & NamesOfWater(x)))", "score": 0}
{"id": "eqasc_validation_10", "prediction": "all x.(Climate(x) -> (Temperature(x) & Water(x) & InAir(x)))", "score": 0}
{"id": "eqasc_validation_10", "prediction": "all x y.((Climate(x) & Temperature(y) & Water(y)) -> DescribedInAir(x,y))", "score": 0}
{"id": "eqasc_validation_10", "prediction": "all x y z.((Climate(x) & Temperature(y) & Water(z)) -> (DescribedInTerms(x,y,z) & InAir(x)))", "score": 0}
{"id": "eqasc_validation_10", "prediction": "all x.(Climate(x) -> (Terms(x,Temperature) & Terms(x,Water)))", "score": 0}
{"id": "eqasc_validation_10", "prediction": "all x y z.((Climate(x) & Temperature(y) & Water(z)) -> (DescribedInTerms(x,y) & InAir(x,z)))", "score": 0}
{"id": "eqasc_validation_10", "prediction": "all x.(Climate(x) -> (Temperature(x) & Water(x) & Air(x)))", "score": 0}
{"id": "eqasc_validation_10", "prediction": "all x y.((Climate(x) & Temperature(y) & Water(y)) -> Description(x,y))", "score": 0}
{"id": "eqasc_validation_10", "prediction": "all x y.((Climate(x) & Temperature(y) & Water(y)) -> UsuallyDescribedInTerms(x,y))", "score": 0}
{"id": "eqasc_validation_10", "prediction": "all x y z.((Climate(x) & Temperature(y) & Water(z)) -> (DepictedIn(x,y) & In(x,z)))", "score": 0}
{"id": "eqasc_validation_11", "prediction": "all x.(Climate(x) -> WeatherOverLongPeriod(x))", "score": 0}
{"id": "eqasc_validation_11", "prediction": "all x.(Climate(x) -> Weather(x))", "score": 0}
{"id": "eqasc_validation_11", "prediction": "all x y.((Climate(x) & Weather(y)) -> LongPeriodOfTime(x,y))", "score": 0}
{"id": "eqasc_validation_11", "prediction": "all x y z.((Climate(x) & Weather(y) & LongPeriodOfTime(z)) -> RefersTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_11", "prediction": "all x.(Climate(x) -> (RefersToWeather(x) & LongPeriodOfTime(x)))", "score": 0}
{"id": "eqasc_validation_11", "prediction": "all x y.((Climate(x) & Weather(y)) -> LongPeriodOfTime(x))", "score": 0}
{"id": "eqasc_validation_11", "prediction": "all x y z.((Climate(x) & Weather(y) & LongPeriodOfTime(z)) -> Weather(x,y,z))", "score": 0}
{"id": "eqasc_validation_11", "prediction": "all x.(Climate(x) -> (Weather(x) & LongPeriodOfTime(x)))", "score": 0}
{"id": "eqasc_validation_11", "prediction": "all x y z.((Climate(x) & Weather(y) & LongPeriodOfTime(z)) -> WeatherRefers(x,y,z))", "score": 0}
{"id": "eqasc_validation_11", "prediction": "all x y z.((Climate(x) & Weather(y) & LongPeriodOfTime(z)) -> RefersToOverTime(x,y,z))", "score": 0}
{"id": "eqasc_validation_11", "prediction": "all x.(Climate(x) -> WeatherOverLongPeriodOfTime(x))", "score": 0}
{"id": "eqasc_validation_11", "prediction": "all x y.((Climate(x) & Weather(y) & LongPeriodOfTime(x)) -> RefersTo(x,y))", "score": 0}
{"id": "eqasc_validation_11", "prediction": "all x y.((Climate(x) & Weather(y) & LongPeriodOfTime(x)) -> Weather(x,y))", "score": 0}
{"id": "eqasc_validation_11", "prediction": "all x y z.((Climate(x) & Weather(y) & LongPeriod(z)) -> RefersTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_11", "prediction": "all x y.((Climate(x) & Weather(y) & LongPeriodOfTime(y)) -> RefersTo(x,y))", "score": 0}
{"id": "eqasc_validation_12", "prediction": "all x.(Weather(x) -> (TermsOfTemperature(x) & TermsOfMoisture(x)))", "score": 0}
{"id": "eqasc_validation_12", "prediction": "all x.(Weather(x) -> (DescribedInTermsOfTemperature(x) & DescribedInTermsOfMoisture(x)))", "score": 0}
{"id": "eqasc_validation_12", "prediction": "all x.(Weather(x) -> (TerminatedInTerminsOfTemperature(x) & DescribedInTerminsOfMoisture(x)))", "score": 0}
{"id": "eqasc_validation_12", "prediction": "all x.(Weather(x) -> (DepictedInTermsOfTemperature(x) & DepictedInTermsOfMoisture(x)))", "score": 0}
{"id": "eqasc_validation_12", "prediction": "all x.(Weather(x) -> (Terms(x,Temperature) & Terms(x,Moisture)))", "score": 0}
{"id": "eqasc_validation_12", "prediction": "all x y.((Weather(x) & Temperature(y) & Moisture(y)) -> GenerallyDescribedInTerms(x,y))", "score": 0}
{"id": "eqasc_validation_12", "prediction": "all x y z.((Weather(x) & Temperature(y) & Moisture(z)) -> (DepictedInTerms(x,y) & DepictedInTerms(x,z)))", "score": 0}
{"id": "eqasc_validation_12", "prediction": "all x y z.((Weather(x) & Temperature(y) & Moisture(z)) -> (DescribedInTerms(x,y) & DescribedInTerms(x,z)))", "score": 0}
{"id": "eqasc_validation_12", "prediction": "all x y z.((Weather(x) & Temperature(y) & Moisture(z)) -> (DepictedInTerms(x,y) & DescribedInTerms(x,z)))", "score": 0}
{"id": "eqasc_validation_12", "prediction": "all x y z.((Weather(x) & Temperature(y) & Moisture(z)) -> (DescribedInTerms(x,y,z) & DescribedInTerms(x,z)))", "score": 0}
{"id": "eqasc_validation_13", "prediction": "all x.(Humidity(x) -> MoistureInAir(x))", "score": 0}
{"id": "eqasc_validation_13", "prediction": "all x y.((Humidity(x) & Air(y)) -> Moisture(x,y))", "score": 0}
{"id": "eqasc_validation_13", "prediction": "all x y.((Humidity(x) & Air(y)) -> MoistureIn(x,y))", "score": 0}
{"id": "eqasc_validation_13", "prediction": "all x.(Humidity(x) -> Moisture(x))", "score": 2}
{"id": "eqasc_validation_13", "prediction": "all x y z.((Humidity(x) & Air(y) & Moisture(z)) -> Moisture(x,y,z))", "score": 0}
{"id": "eqasc_validation_13", "prediction": "all x y z.((Humidity(x) & Air(y) & Moisture(z)) -> MoistureIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_13", "prediction": "all x y z.((Humidity(x) & Air(y) & Air(z)) -> Moisture(x,y,z))", "score": 0}
{"id": "eqasc_validation_13", "prediction": "all x y z.((Humidity(x) & Air(y) & Air(z)) -> MoistureIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_13", "prediction": "all x y z.((Humidity(x) & Air(y) & Moisture(z)) -> Moisture(x,y))", "score": 0}
{"id": "eqasc_validation_13", "prediction": "all x.(Humidity(x) -> (MoistureInAir(x)))", "score": 0}
{"id": "eqasc_validation_13", "prediction": "all x y z.((Humidity(x) & Air(y) & Air(z)) -> Moisture(x,y))", "score": 0}
{"id": "eqasc_validation_13", "prediction": "all x y.((Humidity(x) & Air(y)) -> MoistureInAerospace(x,y))", "score": 0}
{"id": "eqasc_validation_13", "prediction": "all x.(Humidity(x) -> MoistureInAerospace(x))", "score": 0}
{"id": "eqasc_validation_14", "prediction": "all x.(Climate(x) -> (TermsOfTemperature(x) & TermsOfHumidity(x)))", "score": 0}
{"id": "eqasc_validation_14", "prediction": "all x.(Climate(x) -> (DescribedInTermsOfTemperature(x) & DescribedInTermsOfHumidity(x)))", "score": 0}
{"id": "eqasc_validation_14", "prediction": "all x.(Climate(x) -> (Terms(x,Temperature) & Terms(x,Humidity)))", "score": 0}
{"id": "eqasc_validation_14", "prediction": "all x.(Climate(x) -> (Temperature(x) & Humidity(x)))", "score": 0}
{"id": "eqasc_validation_14", "prediction": "all x.(Climate(x) -> (DepictedInTermsOfTemperature(x) & DepictedInTermsOfHumidity(x)))", "score": 0}
{"id": "eqasc_validation_14", "prediction": "all x.(Climate(x) -> (TerminatedByTemperature(x) & DescribedByHumidity(x)))", "score": 0}
{"id": "eqasc_validation_14", "prediction": "all x y.((Climate(x) & Temperature(y) & Humidity(z)) -> DescribedInTerms(x,y,z))", "score": 1}
{"id": "eqasc_validation_14", "prediction": "all x.(Climate(x) -> (TermsOfTemperature(x) & DefinitionsOfHumidity(x)))", "score": 0}
{"id": "eqasc_validation_14", "prediction": "all x.(Climate(x) -> (TermsOfTemperature(x) & NamesOfHumidity(x)))", "score": 0}
{"id": "eqasc_validation_14", "prediction": "all x y.((Climate(x) & Temperature(y) & Humidity(y)) -> DescribedInTerms(x,y))", "score": 1}
{"id": "eqasc_validation_14", "prediction": "all x y.((Climate(x) & Temperature(y) & Humidity(z)) -> GenerallyDescribedInTerms(x,y,z))", "score": 0}
{"id": "eqasc_validation_15", "prediction": "all x.(Humidity(x) -> MeasuresMoistureContentOfAir(x))", "score": 0}
{"id": "eqasc_validation_15", "prediction": "all x.(Humidity(x) -> MeasuresMoistureContent(x))", "score": 0}
{"id": "eqasc_validation_15", "prediction": "all x y.((Humidity(x) & Air(y)) -> MeasuresMoistureContent(x,y))", "score": 0}
{"id": "eqasc_validation_15", "prediction": "all x.(Humidity(x) -> (MeasuresMoistureContent(x) & Air(x)))", "score": 0}
{"id": "eqasc_validation_15", "prediction": "all x.(Humidity(x) -> MoistureContentOfAir(x))", "score": 0}
{"id": "eqasc_validation_15", "prediction": "all x.(Humidity(x) -> (MeasuresMoistureContentOfAir(x)))", "score": 0}
{"id": "eqasc_validation_15", "prediction": "all x y z.((Humidity(x) & Air(y) & MoistureContent(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_15", "prediction": "all x y.((Humidity(x) & Air(y)) -> MoistureContent(x,y))", "score": 0}
{"id": "eqasc_validation_15", "prediction": "all x.(Humidity(x) -> MoistureContent(x))", "score": 0}
{"id": "eqasc_validation_16", "prediction": "all x.((Vehicle(x) & UsedForTransportation(x)) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_16", "prediction": "all x.(Vehicle(x) -> UsedForTransportation(x))", "score": 29}
{"id": "eqasc_validation_16", "prediction": "all x y.((Vehicle(x) & Transportation(y)) -> UsedFor(x,y))", "score": 13}
{"id": "eqasc_validation_16", "prediction": "all x y z.((Vehicle(x) & Transportation(y) & Transportation(z)) -> UsedFor(x,y,z))", "score": 5}
{"id": "eqasc_validation_16", "prediction": "all x y.((Vehicle(x) & Vehicle(y)) -> UsedForTransportation(x,y))", "score": 35}
{"id": "eqasc_validation_16", "prediction": "all x y.((Vehicle(x) & Transportation(y)) -> UsedForTransportation(x,y))", "score": 15}
{"id": "eqasc_validation_16", "prediction": "all x y.((Vehicle(x) & Transportation(y) & UsedFor(x,y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_16", "prediction": "all x y.((Vehicle(x) & UsedForTransportation(x)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_16", "prediction": "all x y.((Vehicle(x) & UsedForTransportation(x)) -> UsedForTransportation(y))", "score": 0}
{"id": "eqasc_validation_16", "prediction": "all x y z.((Vehicle(x) & Transportation(y) & Transportation(z)) -> UsedForTransportation(x,y,z))", "score": 0}
{"id": "eqasc_validation_16", "prediction": "all x y.((Vehicle(x) & UsedForTransportation(x,y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_16", "prediction": "all x y.((Vehicle(x) & Transport(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_16", "prediction": "all x y z.((Vehicle(x) & Transportation(y) & Transport(z)) -> UsedFor(x,y,z))", "score": 1}
{"id": "eqasc_validation_16", "prediction": "all x y.((Vehicle(x) & UsedForTransportation(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_16", "prediction": "all x y.((Vehicle(x) & TransportationVehicle(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_16", "prediction": "all x y z.((Vehicle(x) & Vehicle(y) & Transportation(z)) -> UsedFor(x,y,z))", "score": 4}
{"id": "eqasc_validation_17", "prediction": "all x y z.((Transportation(x) & Person(y) & Good(z)) -> MovesFromPlaceToPlace(x,y,z))", "score": 0}
{"id": "eqasc_validation_17", "prediction": "all x y.((Transportation(x) & Place(y)) -> MovesPeopleAndGoods(x,y))", "score": 0}
{"id": "eqasc_validation_17", "prediction": "all x y z.((Transportation(x) & Person(y) & Good(z)) -> MovesFromOnePlaceToAnother(x,y,z))", "score": 0}
{"id": "eqasc_validation_17", "prediction": "all x y.((Transportation(x) & Person(y) & Good(y)) -> MovesFromPlaceToPlace(x,y))", "score": 0}
{"id": "eqasc_validation_17", "prediction": "all x y.((Transportation(x) & Person(y) & Good(y)) -> MovesFromOnePlaceToAnother(x,y))", "score": 0}
{"id": "eqasc_validation_17", "prediction": "all x y z.((Transportation(x) & Person(y) & Good(z)) -> MovesFromTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_17", "prediction": "all x y z.((Transportation(x) & Person(y) & Good(z) & Place(w)) -> MovesFromTo(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_17", "prediction": "all x y z.((Transportation(x) & Person(y) & Good(z)) -> Moves(x,y,z))", "score": 0}
{"id": "eqasc_validation_17", "prediction": "all x y z.((Transportation(x) & Person(y) & Good(z) & Place(z)) -> MovesFromTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_17", "prediction": "all x y z w.((Transportation(x) & Person(y) & Good(z) & Place(w)) -> MovesFromTo(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_17", "prediction": "all x y z.((Transportation(x) & Place(y) & Person(z) & Good(z)) -> MovesFromTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_17", "prediction": "all x y z.((Transportation(x) & Person(y) & Good(z)) -> MovesTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_17", "prediction": "all x y z.((Transportation(x) & Person(y) & Good(z) & Place(y)) -> MovesFromTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_17", "prediction": "all x y z.((Transportation(x) & Person(y) & Good(z)) -> MovesFromToPlace(x,y,z))", "score": 0}
{"id": "eqasc_validation_17", "prediction": "all x.(Transportation(x) -> MovesPeopleAndGoods(x))", "score": 0}
{"id": "eqasc_validation_17", "prediction": "all x y.((Transportation(x) & Place(y)) -> MovesFromTo(x,y))", "score": 0}
{"id": "eqasc_validation_18", "prediction": "all x.(Vehicle(x) -> (MovesPeople(x) & MovesGoods(x)))", "score": 0}
{"id": "eqasc_validation_18", "prediction": "all x.(Vehicle(x) -> (UsedToMovePeople(x) & UsedToMoveGoods(x)))", "score": 0}
{"id": "eqasc_validation_18", "prediction": "all x y.((Vehicle(x) & Person(y) & Good(y)) -> Moves(x,y))", "score": 0}
{"id": "eqasc_validation_18", "prediction": "all x y.((Vehicle(x) & Person(y) & Good(y)) -> UsedToMove(x,y))", "score": 0}
{"id": "eqasc_validation_18", "prediction": "all x y z.((Vehicle(x) & Person(y) & Good(z)) -> Moves(x,y,z))", "score": 0}
{"id": "eqasc_validation_18", "prediction": "all x y z.((Vehicle(x) & Person(y) & Good(z)) -> UsedToMove(x,y,z))", "score": 0}
{"id": "eqasc_validation_18", "prediction": "all x.(Vehicle(x) -> (UsedToMove(x) & MovesPeople(x) & MovesGoods(x)))", "score": 0}
{"id": "eqasc_validation_18", "prediction": "all x.(Vehicle(x) -> (UsedToMove(x,people) & UsedToMove(x,goods)))", "score": 0}
{"id": "eqasc_validation_18", "prediction": "all x.(Vehicle(x) -> (UsedToMove(x) & MovesPeopleAndGoods(x)))", "score": 0}
{"id": "eqasc_validation_18", "prediction": "all x y.((Vehicle(x) & Person(y)) -> UsedToMove(x,y))", "score": 0}
{"id": "eqasc_validation_18", "prediction": "all x.(Vehicle(x) -> (Movement(x) & MovesPeople(x) & MovesGoods(x)))", "score": 0}
{"id": "eqasc_validation_18", "prediction": "all x y.((Vehicle(x) & Person(y)) -> MovesGoods(x,y))", "score": 0}
{"id": "eqasc_validation_18", "prediction": "all x.(Vehicle(x) -> (MovesPeople(x) | MovesGoods(x)))", "score": 0}
{"id": "eqasc_validation_18", "prediction": "all x y z.((Vehicle(x) & Person(y) & Good(z)) -> (Moves(x,y) & Moves(x,z)))", "score": 0}
{"id": "eqasc_validation_18", "prediction": "all x.(Vehicle(x) -> (MovesPerson(x) & MovesGoods(x)))", "score": 0}
{"id": "eqasc_validation_19", "prediction": "all x.(PassengerVehicle(x) -> PrimaryModeOfTransportation(x))", "score": 0}
{"id": "eqasc_validation_19", "prediction": "all x y.((PassengerVehicle(x) & ModeOfTransportation(y)) -> PrimaryModeOfTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_19", "prediction": "all x.(PassengerVehicle(x) -> PrimaryTransportation(x))", "score": 0}
{"id": "eqasc_validation_19", "prediction": "all x y.((PassengerVehicle(x) & Car(y)) -> PrimaryModeOfTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_19", "prediction": "all x y.((PassengerVehicle(x) & PrimaryModeOfTransportation(y)) -> PrimaryModeOfTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_19", "prediction": "all x y.((PassengerVehicle(x) & Vehicle(y)) -> PrimaryModeOfTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_19", "prediction": "all x.((PassengerVehicle(x) & PrimaryModeOfTransportation(x)) -> PrimaryModeOfTransportation(x))", "score": 0}
{"id": "eqasc_validation_19", "prediction": "all x y.((PassengerVehicle(x) & Passenger(y)) -> PrimaryModeOfTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_19", "prediction": "all x y.((PassengerVehicle(x) & Motor(y)) -> PrimaryModeOfTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_19", "prediction": "all x.(PassengerVehicle(x) -> PrimaryTransportationMode(x))", "score": 0}
{"id": "eqasc_validation_19", "prediction": "all x y.((PassengerVehicle(x) & Transport(y)) -> PrimaryModeOfTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_19", "prediction": "all x y.((PassengerVehicle(x) & TransportMode(y)) -> PrimaryModeOfTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_19", "prediction": "all x y.((PassengerVehicle(x) & TransportationMode(y)) -> PrimaryModeOfTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_19", "prediction": "all x y.((PassengerVehicle(x) & ModeOfTransportation(y)) -> PrimaryModeOfTransportation(x))", "score": 0}
{"id": "eqasc_validation_19", "prediction": "all x y.((PassengerVehicle(x) & Vehicle(y)) -> PrimaryModeOfTransportation(x))", "score": 0}
{"id": "eqasc_validation_20", "prediction": "all x.(PassengerCar(x) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_20", "prediction": "all x y.((PassengerCar(x) & Transportation(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_20", "prediction": "all x y.((PassengerCar(x) & Car(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_20", "prediction": "all x.(PassengerCar(x) -> (UsedForTransportation(x) & UsedForTransportation(x)))", "score": 0}
{"id": "eqasc_validation_20", "prediction": "all x y z.((PassengerCar(x) & Car(y) & Transportation(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_20", "prediction": "all x y.((PassengerCar(x) & Transportation(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_20", "prediction": "all x y.((PassengerCar(x) & Vehicle(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_20", "prediction": "all x y z.((PassengerCar(x) & Transportation(y) & Transportation(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_20", "prediction": "all x y z.((PassengerCar(x) & Vehicle(y) & Transportation(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_20", "prediction": "all x y z.((PassengerCar(x) & Car(y) & Transportation(z)) -> UsedForTransportation(x,y,z))", "score": 0}
{"id": "eqasc_validation_20", "prediction": "all x y z.((PassengerCar(x) & Vehicle(y) & Transportation(z)) -> UsedForTransportation(x,y,z))", "score": 0}
{"id": "eqasc_validation_20", "prediction": "all x y z.((PassengerCar(x) & Transportation(y) & Transportation(z)) -> UsedForTransportation(x,y,z))", "score": 0}
{"id": "eqasc_validation_20", "prediction": "all x y.((PassengerCar(x) & Bus(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_20", "prediction": "all x y.((PassengerCar(x) & TransportationCar(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_20", "prediction": "all x.(PassengerCar(x) -> (UsedForTransportation(x) & Transportation(x)))", "score": 0}
{"id": "eqasc_validation_21", "prediction": "all x.((Trailer(x) | Boat(x)) -> PrivateVehicle(x))", "score": 0}
{"id": "eqasc_validation_21", "prediction": "all x.((Tower(x) | Boat(x)) -> PrivateVehicle(x))", "score": 0}
{"id": "eqasc_validation_21", "prediction": "all x.((Truck(x) | Boat(x)) -> PrivateVehicle(x))", "score": 0}
{"id": "eqasc_validation_21", "prediction": "all x.((Towable(x) | Boat(x)) -> PrivateVehicle(x))", "score": 0}
{"id": "eqasc_validation_21", "prediction": "all x y.((Trailer(x) & Boat(y)) -> PrivateVehicle(x))", "score": 0}
{"id": "eqasc_validation_21", "prediction": "all x.((Trailer(x) & Boat(x)) -> PrivateVehicle(x))", "score": 0}
{"id": "eqasc_validation_21", "prediction": "all x.((Railer(x) | Boat(x)) -> PrivateVehicle(x))", "score": 0}
{"id": "eqasc_validation_21", "prediction": "all x.((Tilt(x) | Boat(x)) -> PrivateVehicle(x))", "score": 0}
{"id": "eqasc_validation_21", "prediction": "all x.(( Trailer(x) | Boat(x)) -> PrivateVehicle(x))", "score": 0}
{"id": "eqasc_validation_21", "prediction": "all x y.((Trailer(x) & Boat(y)) -> PrivateVehicle(x,y))", "score": 0}
{"id": "eqasc_validation_21", "prediction": "all x.((Toy(x) | Boat(x)) -> PrivateVehicle(x))", "score": 0}
{"id": "eqasc_validation_22", "prediction": "all x.((Trailer(x) | Boat(x)) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_22", "prediction": "all x y.((Trailer(x) & Boat(y)) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_22", "prediction": "all x y.((Trailer(x) & Boat(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_22", "prediction": "all x y.((Trailer(x) & Boat(y)) -> (UsedForTransportation(x) & UsedForTransportation(y)))", "score": 0}
{"id": "eqasc_validation_22", "prediction": "all x.((Towable(x) | Boat(x)) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_22", "prediction": "all x.(Trailer(x) & Boat(x)) -> UsedForTransportation(x))", "score": -1}
{"id": "eqasc_validation_22", "prediction": "all x y z.((Trailer(x) & Boat(y) & Trailer(z)) -> UsedForTransportation(x,y,z))", "score": 0}
{"id": "eqasc_validation_22", "prediction": "all x y.((Trailer(x) & Boat(y)) -> (UsedForTransportation(x) | UsedForTransportation(y)))", "score": 0}
{"id": "eqasc_validation_22", "prediction": "all x y z.((Trailer(x) & Boat(y) & Transportation(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_22", "prediction": "all x.((Tractor(x) | Boat(x)) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_22", "prediction": "all x.((Trailer(x) & Boat(x)) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_22", "prediction": "all x y.((Trailer(x) & Boat(y)) -> (UsedForTransportation(x,y) | UsedForTransportation(x,y)))", "score": 0}
{"id": "eqasc_validation_22", "prediction": "all x.((Truck(x) | Boat(x)) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_23", "prediction": "all x.((Car(x) | Bus(x)) -> Vehicle(x))", "score": 8}
{"id": "eqasc_validation_23", "prediction": "all x.(Vehicle(x) -> (Car(x) | Bus(x)))", "score": 0}
{"id": "eqasc_validation_23", "prediction": "all x y.((Car(x) & Bus(y)) -> (Vehicle(x) & Vehicle(y)))", "score": 7}
{"id": "eqasc_validation_23", "prediction": "all x y.((Car(x) & Bus(y)) -> Vehicle(x))", "score": 1}
{"id": "eqasc_validation_23", "prediction": "all x y.((Car(x) & Bus(y)) -> (Vehicle(x) | Vehicle(y)))", "score": 1}
{"id": "eqasc_validation_23", "prediction": "all x y.((Car(x) & Bus(y)) -> (ExampleOfVehicle(x,y) | ExampleOfVehicle(x,y)))", "score": 0}
{"id": "eqasc_validation_23", "prediction": "all x.((Car(x) | Buss(x)) -> Vehicle(x))", "score": 0}
{"id": "eqasc_validation_23", "prediction": "all x y.((Car(x) & Bus(y)) -> (ExampleOfVehicle(x,y) | ExamplesOfVehicle(x,y)))", "score": 0}
{"id": "eqasc_validation_23", "prediction": "all x y.((Car(x) & Bus(y)) -> (ExampleOfVehicle(x) & ExamplesOfVehicle(y)))", "score": 0}
{"id": "eqasc_validation_23", "prediction": "all x y.((Car(x) & Bus(y)) -> (ExampleOfVehicle(x) & ExampleOfVehicle(y)))", "score": 0}
{"id": "eqasc_validation_23", "prediction": "all x y.((Car(x) | Bus(y)) -> Vehicle(x))", "score": 8}
{"id": "eqasc_validation_23", "prediction": "all x.(Vehicle(x) & (Car(x) | Bus(x)))", "score": 9}
{"id": "eqasc_validation_23", "prediction": "all x y.((Car(x) & Bus(y)) -> (ExampleOfVehicle(x,y) & ExampleOfVehicle(x,y)))", "score": 0}
{"id": "eqasc_validation_23", "prediction": "all x y.((Car(x) & Bus(y)) -> (ExampleOfVehicle(x,y) & ExamplesOfVehicle(x,y)))", "score": 0}
{"id": "eqasc_validation_23", "prediction": "all x y.((Car(x) & Bus(y)) -> (ExampleOfVehicle(x) | ExampleOfVehicle(x)))", "score": 0}
{"id": "eqasc_validation_24", "prediction": "all x.((Car(x) | Bus(x)) -> UsedForTransportation(x))", "score": 3}
{"id": "eqasc_validation_24", "prediction": "all x y.((Car(x) & Bus(y)) -> (UsedForTransportation(x) & UsedForTransportation(y)))", "score": 4}
{"id": "eqasc_validation_24", "prediction": "all x y.((Car(x) & Bus(y)) -> (UsedForTransportation(x,y) & UsedForTransportation(y)))", "score": 0}
{"id": "eqasc_validation_24", "prediction": "all x y.((Car(x) & Bus(y)) -> UsedForTransportation(x,y))", "score": 4}
{"id": "eqasc_validation_24", "prediction": "all x y z.((Car(x) & Bus(y) & Transportation(z)) -> (UsedForTransportation(x,z) | UsedForTransportation(y,z)))", "score": 6}
{"id": "eqasc_validation_24", "prediction": "all x y.((Car(x) & Bus(y)) -> (UsedForTransportation(x,y) | UsedForTransportation(y)))", "score": 0}
{"id": "eqasc_validation_24", "prediction": "all x y z.((Car(x) & Bus(y) & Transportation(z)) -> (UsedForTransportation(x,y,z) & UsedForTransportation(y,z)))", "score": 0}
{"id": "eqasc_validation_24", "prediction": "all x y z.((Car(x) & Bus(y) & Transportation(z)) -> (UsedForTransportation(x,y,z) | UsedForTransportation(y,z)))", "score": 0}
{"id": "eqasc_validation_24", "prediction": "all x y.((Car(x) & Bus(y)) -> (UsedForTransportation(x,y) & UsedForTransportation(x,y)))", "score": 4}
{"id": "eqasc_validation_24", "prediction": "all x y z.((Car(x) & Bus(y) & Transportation(z)) -> (UsedForTransportation(x,y) | UsedForTransportation(y,z)))", "score": 4}
{"id": "eqasc_validation_24", "prediction": "all x y z.((Car(x) | Bus(y) & Car(z)) -> UsedForTransportation(x,y,z))", "score": 0}
{"id": "eqasc_validation_24", "prediction": "all x y.((Car(x) & Bus(y)) -> (UsedForTransportation(x,y) & UsedForTransportation(y,x)))", "score": 4}
{"id": "eqasc_validation_24", "prediction": "all x y.((Car(x) | Bus(y)) -> UsedForTransportation(x,y))", "score": 1}
{"id": "eqasc_validation_24", "prediction": "all x y z.((Car(x) & Bus(y) & Transportation(z)) -> (UsedForTransportation(x,y) & UsedForTransportation(y,z)))", "score": 0}
{"id": "eqasc_validation_24", "prediction": "all x y z.((Car(x) & Bus(y) & Transportation(z)) -> (UsedForTransportation(x,z) | UsedForTransportation(y)))", "score": 0}
{"id": "eqasc_validation_24", "prediction": "all x y z.((Car(x) & Bus(y) & Transportation(z)) -> (UsedForTransportation(x,z) & UsedForTransportation(y,z)))", "score": 4}
{"id": "eqasc_validation_25", "prediction": "all x.(Boat(x) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_25", "prediction": "all x y.((Boat(x) & Transportation(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_25", "prediction": "all x y.((Boat(x) & Transport(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_25", "prediction": "all x y.((Boat(x) & Transporter(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_25", "prediction": "all x y.((Boat(x) & Vehicle(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_25", "prediction": "all x y z.((Boat(x) & Transportation(y) & Transportation(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_25", "prediction": "all x y z.((Boat(x) & Transportation(y) & Vehicle(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_25", "prediction": "all x.((Boat(x) & UsedForTransportation(x)) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_25", "prediction": "all x y.((Boat(x) & Cargo(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_25", "prediction": "all x y.((Boat(x) & Vehicle(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_25", "prediction": "all x y z.((Boat(x) & Transportation(y) & Transport(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_25", "prediction": "all x y z.((Boat(x) & Transport(y) & Transportation(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_25", "prediction": "all x y z.((Boat(x) & Transport(y) & Vehicle(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_25", "prediction": "all x y z.((Boat(x) & Transport(y) & Transport(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_25", "prediction": "all x y z.((Boat(x) & Transportation(y) & Transportation(z)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_26", "prediction": "all x.((City(x) & Bigger(x)) -> RequiresEfficientPublicTransport(x))", "score": 0}
{"id": "eqasc_validation_26", "prediction": "all x.((City(x) & Bigger(x)) -> RequiresEfficientPublicTransport(x) & RequiresAdequatePublicTransport(x))", "score": 0}
{"id": "eqasc_validation_26", "prediction": "all x.((City(x) & Bigger(x)) -> (RequiresEfficientPublicTransport(x) & RequiresAdequatePublicTransport(x)))", "score": 0}
{"id": "eqasc_validation_26", "prediction": "all x.((City(x) & Bigger(x)) -> (RequiresEfficientPublicTransport(x) & AdequatePublicTransport(x)))", "score": 0}
{"id": "eqasc_validation_26", "prediction": "all x.((City(x) & Bigger(x)) -> RequiresEfficientPublicTransport(x) & AdequatePublicTransport(x))", "score": 0}
{"id": "eqasc_validation_26", "prediction": "all x.(LargerCity(x) -> (RequiresEfficientPublicTransport(x) & RequiresAdequatePublicTransport(x)))", "score": 0}
{"id": "eqasc_validation_26", "prediction": "all x.((City(x) & Bigger(x)) -> RequiresEfficientAndAdequatePublicTransport(x))", "score": 0}
{"id": "eqasc_validation_26", "prediction": "all x.(LargerCity(x) -> (RequiresEfficientPublicTransport(x) & AdequatePublicTransport(x)))", "score": 0}
{"id": "eqasc_validation_26", "prediction": "all x.((City(x) & Larger(x)) -> RequiresEfficientPublicTransport(x) & RequiresAdequatePublicTransport(x))", "score": 0}
{"id": "eqasc_validation_26", "prediction": "all x.(BiggerCity(x) -> (RequiresEfficientPublicTransport(x) & AdequatePublicTransport(x)))", "score": 0}
{"id": "eqasc_validation_26", "prediction": "all x.((City(x) & Bigger(x)) -> (EfficientPublicTransport(x) & AdequatePublicTransport(x)))", "score": 0}
{"id": "eqasc_validation_26", "prediction": "all x.((City(x) & Larger(x)) -> (RequiresEfficientPublicTransport(x) & RequiresAdequatePublicTransport(x)))", "score": 0}
{"id": "eqasc_validation_26", "prediction": "all x.(BiggerCity(x) -> (RequiresEfficientPublicTransport(x) & RequiresAdequatePublicTransport(x)))", "score": 0}
{"id": "eqasc_validation_26", "prediction": "all x.((City(x) & Larger(x)) -> RequiresEfficientPublicTransport(x) & AdequatePublicTransport(x))", "score": 0}
{"id": "eqasc_validation_26", "prediction": "all x.((City(x) & Larger(x)) -> RequiresEfficientPublicTransport(x))", "score": 0}
{"id": "eqasc_validation_26", "prediction": "all x.((City(x) & Larger(x)) -> (RequiresEfficientPublicTransport(x) & AdequatePublicTransport(x)))", "score": 0}
{"id": "eqasc_validation_27", "prediction": "all x.((City(x) & Larger(x)) -> RequiresVehicles(x))", "score": 0}
{"id": "eqasc_validation_27", "prediction": "all x.((City(x) & Bigger(x)) -> RequiresVehicles(x))", "score": 0}
{"id": "eqasc_validation_27", "prediction": "all x y.((LargerCity(x) & LargerCity(y)) -> RequiresVehicles(x,y))", "score": 0}
{"id": "eqasc_validation_27", "prediction": "all x.(LargerCity(x) -> RequiresVehicles(x))", "score": 0}
{"id": "eqasc_validation_27", "prediction": "all x y.((City(x) & Bigger(y)) -> RequiresVehicles(x,y))", "score": 0}
{"id": "eqasc_validation_27", "prediction": "all x y.((LargerCity(x) & BiggerCity(y)) -> RequiresVehicles(x,y))", "score": 0}
{"id": "eqasc_validation_27", "prediction": "all x y.((City(x) & Larger(y)) -> RequiresVehicles(x,y))", "score": 0}
{"id": "eqasc_validation_27", "prediction": "all x.(MoreLargerCity(x) -> RequiresVehicles(x))", "score": 0}
{"id": "eqasc_validation_27", "prediction": "all x y.((MoreLargerCity(x) & LargerCity(y)) -> RequiresVehicles(x,y))", "score": 0}
{"id": "eqasc_validation_27", "prediction": "all x y.((MoreBiggerCity(x) & LargerCity(y)) -> RequiresVehicles(x,y))", "score": 0}
{"id": "eqasc_validation_27", "prediction": "all x.((City(x) & BiggerCity(x)) -> RequiresVehicles(x))", "score": 0}
{"id": "eqasc_validation_27", "prediction": "all x.((City(x) & Larger(x)) -> RequiresVehicle(x))", "score": 0}
{"id": "eqasc_validation_27", "prediction": "all x.(BiggerCity(x) -> RequiresVehicles(x))", "score": 0}
{"id": "eqasc_validation_27", "prediction": "all x y.((LargerCity(x) & LargerCity(y)) -> RequiresVehicle(x,y))", "score": 0}
{"id": "eqasc_validation_27", "prediction": "all x y.((LargerCity(x) & LargerCity(y)) -> RequiresVehicles(x))", "score": 0}
{"id": "eqasc_validation_27", "prediction": "all x.(MoreBiggerCity(x) -> RequiresVehicles(x))", "score": 0}
{"id": "eqasc_validation_28", "prediction": "all x.(TrafficVehicle(x) -> AirPlane(x))", "score": 0}
{"id": "eqasc_validation_28", "prediction": "all x y.((TrafficVehicle(x) & AirPlane(y)) -> AirPlane(x))", "score": 0}
{"id": "eqasc_validation_28", "prediction": "all x y.((TrafficVehicle(x) & AirPlane(y)) -> Airplane(x))", "score": 0}
{"id": "eqasc_validation_28", "prediction": "all x.(TrafficVehicle(x) -> Airplane(x))", "score": 0}
{"id": "eqasc_validation_28", "prediction": "all x y.((TrafficVehicle(x) & AirPlane(y)) -> AirPlane(x,y))", "score": 0}
{"id": "eqasc_validation_28", "prediction": "all x y.((TrafficVehicle(x) & AirPlane(y)) -> AirVehicle(x))", "score": 0}
{"id": "eqasc_validation_28", "prediction": "All x.(TrafficVehicle(x) -> AirPlane(x))", "score": -1}
{"id": "eqasc_validation_28", "prediction": "all x.exists y.(TrafficVehicle(x) & AirPlane(y))", "score": 0}
{"id": "eqasc_validation_28", "prediction": "all x.((TrafficVehicle(x) & AirPlane(x)) -> AirPlane(x))", "score": 0}
{"id": "eqasc_validation_28", "prediction": "all x y.((TrafficVehicle(x) & AirPlane(y)) -> Airplane(x,y))", "score": 0}
{"id": "eqasc_validation_28", "prediction": "all x.((TrafficVehicle(x) & AirPlane(x)) -> AirVehicle(x))", "score": 0}
{"id": "eqasc_validation_28", "prediction": "all x y.((TrafficVehicle(x) & AirPlane(y)) -> AirVehicle(x,y))", "score": 0}
{"id": "eqasc_validation_28", "prediction": "(all x.(TrafficVehicle(x) -> AirPlane(x))", "score": -1}
{"id": "eqasc_validation_28", "prediction": "all x.(TransportVehicle(x) -> AirPlane(x))", "score": 0}
{"id": "eqasc_validation_28", "prediction": "all x.exists y.(TrafficVehicle(x) & AirPlane(y) & PoweredBy(x,y))", "score": 0}
{"id": "eqasc_validation_29", "prediction": "all x.(Plane(x) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_29", "prediction": "all x y.((Plane(x) & Transportation(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_29", "prediction": "all x.((Plane(x) & UsedForTransportation(x)) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_29", "prediction": "all x y z.((Plane(x) & Transportation(y) & Transportation(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_29", "prediction": "all x y.((Plane(x) & Transportation(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_29", "prediction": "all x y z.((Plane(x) & Transportation(y) & Transportation(z)) -> UsedForTransportation(x,y,z))", "score": 0}
{"id": "eqasc_validation_29", "prediction": "all x y.((Plane(x) & Transportation(y) & UsedFor(x,y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_29", "prediction": "all x y z.((Plane(x) & Transportation(y) & Transport(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_29", "prediction": "all x y.((Plane(x) & Airplane(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_29", "prediction": "all x y.((Plane(x) & Vehicle(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_29", "prediction": "all x y z.((Plane(x) & Transportation(y) & Transportation(z) & UsedFor(x,y,z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_29", "prediction": "all x y z.((Plane(x) & Transportation(y) & Vehicle(z)) -> UsedForTransportation(x,y,z))", "score": 0}
{"id": "eqasc_validation_29", "prediction": "all x y.((Plane(x) & Transport(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_29", "prediction": "all x y z.((Plane(x) & Transportation(y) & Vehicle(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_30", "prediction": "all x y.((Car(x) & Truck(y)) -> (Vehicle(x) & Vehicle(y)))", "score": 5}
{"id": "eqasc_validation_30", "prediction": "(all x.(Car(x) -> Vehicle(x)) & all y.(Truck(y) -> Vehicle(y)))", "score": 33}
{"id": "eqasc_validation_30", "prediction": "all x y.((Car(x) & Truck(y)) -> (Vehicle(x) | Vehicle(y)))", "score": 0}
{"id": "eqasc_validation_30", "prediction": "all x y.((Car(x) & Truck(y)) -> (IsVehicle(x) & IsVehicle(y)))", "score": 0}
{"id": "eqasc_validation_30", "prediction": "all x.(Car(x) -> Vehicle(x)) & (Truck(x) -> Vehicle(x)))", "score": -1}
{"id": "eqasc_validation_30", "prediction": "(all x y.((Car(x) & Truck(y)) -> Vehicle(x)) & all z w.((Car(z) & Truck(w)) -> Vehicle(w)))", "score": 5}
{"id": "eqasc_validation_30", "prediction": "(all x.(Car(x) -> Vehicle(x)) & all y.(Truck(y) -> Vehicle(y))))", "score": -1}
{"id": "eqasc_validation_30", "prediction": "all x.(Car(x) -> Vehicle(x)) & all y.(Truck(y) -> Vehicle(y)))", "score": -1}
{"id": "eqasc_validation_30", "prediction": "(all x y.(Car(x) -> Vehicle(x)) & (Truck(y) -> Vehicle(y)))", "score": 33}
{"id": "eqasc_validation_30", "prediction": "(all x y.((Car(x) & Truck(y)) -> Vehicle(x)) & ((Car(x) & Truck(y)) -> Vehicle(y)))", "score": 5}
{"id": "eqasc_validation_30", "prediction": "(all x.(Car(x) -> Vehicle(x)) & (Truck(x) -> Vehicle(x)))", "score": 33}
{"id": "eqasc_validation_30", "prediction": "all x y z.((Car(x) & Truck(y) & Vehicle(z)) -> (Vehicle(x) & Vehicle(y)))", "score": 0}
{"id": "eqasc_validation_30", "prediction": "all x y z.((Car(x) & Truck(y) & Car(z)) -> (Vehicle(x) & Vehicle(y)))", "score": 5}
{"id": "eqasc_validation_30", "prediction": "all x.((Car(x) -> Vehicle(x)) & (Truck(x) -> Vehicle(x)))", "score": 33}
{"id": "eqasc_validation_30", "prediction": "all x.(Car(x) -> Vehicle(x) & Truck(x) -> Vehicle(x))", "score": 0}
{"id": "eqasc_validation_30", "prediction": "all x y.((Car(x) & Truck(y)) -> ((Vehicle(x) & Vehicle(y))))", "score": 5}
{"id": "eqasc_validation_31", "prediction": "all x.(Truck(x) -> UsedForTransportation(x))", "score": 4}
{"id": "eqasc_validation_31", "prediction": "all x y.((Truck(x) & Truck(y)) -> UsedForTransportation(x,y))", "score": 4}
{"id": "eqasc_validation_31", "prediction": "all x.(Truck(x) -> (UsedForTransportation(x) & UsedForTransportation(x)))", "score": 4}
{"id": "eqasc_validation_31", "prediction": "all x y z.((Truck(x) & Truck(y) & Transportation(z)) -> UsedFor(x,y,z))", "score": 4}
{"id": "eqasc_validation_31", "prediction": "all x y.((Truck(x) & Transportation(y)) -> UsedFor(x,y))", "score": 4}
{"id": "eqasc_validation_31", "prediction": "all x y z.((Truck(x) & Truck(y) & Transportation(z)) -> UsedForTransportation(x,y,z))", "score": 0}
{"id": "eqasc_validation_31", "prediction": "all x y.((Truck(x) & Cargo(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_31", "prediction": "all x y z.((Truck(x) & Truck(y) & Truck(z)) -> UsedForTransportation(x,y,z))", "score": 0}
{"id": "eqasc_validation_31", "prediction": "all x y.((Truck(x) & Truck(y)) -> UsedForTransportation(x))", "score": 4}
{"id": "eqasc_validation_31", "prediction": "all x y.((Truck(x) & Truck(y)) -> (UsedForTransportation(x,y) & UsedForTransportation(x,y)))", "score": 4}
{"id": "eqasc_validation_31", "prediction": "all x y z.((Truck(x) & Truck(y) & Transport(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_31", "prediction": "all x y.((Truck(x) & Truck(y)) -> (UsedForTransportation(x,y) & UsedForTransportation(y)))", "score": 0}
{"id": "eqasc_validation_31", "prediction": "all x y.((Truck(x) & Truck(y)) -> (UsedForTransportation(x) & UsedForTransportation(y)))", "score": 4}
{"id": "eqasc_validation_31", "prediction": "all x y.((Truck(x) & Truck(y)) -> (UsedForTransportation(x,y) | UsedForTransportation(x,y)))", "score": 4}
{"id": "eqasc_validation_31", "prediction": "all x y.((Truck(x) & Transporter(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_32", "prediction": "all x.(Car(x) -> UsedForTransportation(x))", "score": 4}
{"id": "eqasc_validation_32", "prediction": "all x y.((Car(x) & Transportation(y)) -> UsedFor(x,y))", "score": 4}
{"id": "eqasc_validation_32", "prediction": "all x.exists y.(Car(x) & Transportation(y) & UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_32", "prediction": "all x y z.((Car(x) & Transportation(y) & Transportation(z)) -> UsedFor(x,y,z))", "score": 4}
{"id": "eqasc_validation_32", "prediction": "exists x.(Car(x) & UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_32", "prediction": "all x y.((Car(x) & Car(y)) -> UsedForTransportation(x,y))", "score": 4}
{"id": "eqasc_validation_32", "prediction": "all x y.((Car(x) & Vehicle(y)) -> UsedForTransportation(x,y))", "score": 4}
{"id": "eqasc_validation_32", "prediction": "all x y z.((Car(x) & Transportation(y) & Transportation(z)) -> UsedFor(x,y))", "score": 4}
{"id": "eqasc_validation_32", "prediction": "all x y z.((Car(x) & Transportation(y) & Vehicle(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_32", "prediction": "all x y.((Car(x) & Transporter(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_32", "prediction": "all x y.((Car(x) & Transport(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_32", "prediction": "all x y z.((Car(x) & Transportation(y) & Car(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_33", "prediction": "all x.(Motorcycle(x) -> SingleOccupantVehicle(x))", "score": 0}
{"id": "eqasc_validation_33", "prediction": "all x.(Motorcycle(x) -> SingleOccupant(x))", "score": 0}
{"id": "eqasc_validation_33", "prediction": "all x.(Motorcycle(x) -> (SingleOccupantVehicle(x) & -SingleOccupantVehicle(x)))", "score": 0}
{"id": "eqasc_validation_33", "prediction": "all x.(Motorcycle(x) -> (SingleOccupant(x) & -SingleOccupant(x)))", "score": 0}
{"id": "eqasc_validation_33", "prediction": "all x.(Motorcycle(x) -> (SingleOccupantVehicle(x) & SingleOccupantVehicle(x)))", "score": 0}
{"id": "eqasc_validation_33", "prediction": "all x.(Motorcycle(x) -> (SingleOccupantVehicle(x) & ForMostPart(x)))", "score": 0}
{"id": "eqasc_validation_33", "prediction": "all x.(Motorcycle(x) -> (SingleOccupantVehicle(x) & ForMostOccupants(x)))", "score": 0}
{"id": "eqasc_validation_33", "prediction": "all x.(Motorcycle(x) -> (SingleOccupant(x) & SingleOccupant(x)))", "score": 0}
{"id": "eqasc_validation_33", "prediction": "all x.(Motorcycle(x) -> (SingleOccupant(x) & ForMostOccupants(x)))", "score": 0}
{"id": "eqasc_validation_33", "prediction": "all x.(Motorcycle(x) -> (SingleOccupantVehicle(x) | SingleOccupantVehicle(x)))", "score": 0}
{"id": "eqasc_validation_33", "prediction": "all x.(Motorcycle(x) -> (SingleOccupant(x) | SingleOccupant(x)))", "score": 0}
{"id": "eqasc_validation_33", "prediction": "all x.(Motorcycle(x) -> (SingleOccupant(x) & Vehicle(x)))", "score": 8}
{"id": "eqasc_validation_33", "prediction": "all x.(Motorcycle(x) -> (SingleOccupant(x) | Vehicle(x)))", "score": 0}
{"id": "eqasc_validation_33", "prediction": "all x.(Motorcycle(x) -> (SingleOccupant(x) & ForMostPart(x)))", "score": 0}
{"id": "eqasc_validation_33", "prediction": "all x.(Motorcycle(x) -> (SingleOccupantVehicle(x) & ForMostParts(x)))", "score": 0}
{"id": "eqasc_validation_33", "prediction": "all x.(Motorcycle(x) -> (SingleOccupantVehicle(x) & MostOccupantVehicle(x)))", "score": 0}
{"id": "eqasc_validation_34", "prediction": "all x.(Motorcycle(x) -> UsedForTransportation(x))", "score": 1}
{"id": "eqasc_validation_34", "prediction": "all x y.((Motorcycle(x) & Transportation(y)) -> UsedFor(x,y))", "score": 1}
{"id": "eqasc_validation_34", "prediction": "all x y z.((Motorcycle(x) & Transportation(y) & Transportation(z)) -> UsedFor(x,y,z))", "score": 1}
{"id": "eqasc_validation_34", "prediction": "all x.(Motorcycle(x) -> (UsedForTransportation(x) & UsedForTransportation(x)))", "score": 1}
{"id": "eqasc_validation_34", "prediction": "all x y.((Motorcycle(x) & Vehicle(y)) -> UsedForTransportation(x,y))", "score": 1}
{"id": "eqasc_validation_34", "prediction": "all x y.((Motorcycle(x) & Motorcycle(y)) -> UsedForTransportation(x,y))", "score": 1}
{"id": "eqasc_validation_34", "prediction": "all x.((Motorcycle(x) & UsedForTransportation(x)) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_34", "prediction": "all x y.((Motorcycle(x) & Transport(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_34", "prediction": "all x y z.((Motorcycle(x) & Transportation(y) & Vehicle(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_34", "prediction": "all x y z.((Motorcycle(x) & Transportation(y) & Transport(z)) -> UsedFor(x,y,z))", "score": 1}
{"id": "eqasc_validation_34", "prediction": "all x y.((Motorcycle(x) & Carrier(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_34", "prediction": "all x y.((Motorcycle(x) & Cargo(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_34", "prediction": "all x y.((Motorcycle(x) & Transporter(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_34", "prediction": "all x y.((Motorcycle(x) & Transportation(y)) -> UsedForTransportation(x,y))", "score": 1}
{"id": "eqasc_validation_34", "prediction": "all x y.((Motorcycle(x) & Bus(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_35", "prediction": "all x.((MovingCar(x) & PullOver(x) & StopAsQuicklyAsSafetyPermits(x) & StayInVehicle(x)) -> SafetyPermits(x))", "score": 0}
{"id": "eqasc_validation_35", "prediction": "all x.((MovingCar(x) & PullOver(x) & StopAsQuicklyAsSafetyPermits(x)) -> StayInVehicle(x))", "score": 0}
{"id": "eqasc_validation_35", "prediction": "all x.(MovingCar(x) -> (PutOver(x) & StopAsQuicklyAsSafetyPermits(x) & StayInVehicle(x)))", "score": 0}
{"id": "eqasc_validation_35", "prediction": "all x.((MovingCar(x) & PullOver(x) & StopQuickly(x) & StayInVehicle(x)) -> SafetyPermits(x))", "score": 0}
{"id": "eqasc_validation_35", "prediction": "all x.(MovingCar(x) -> (PullOver(x) & StopAsQuicklyAsSafetyPermits(x) & StayInVehicle(x)))", "score": 0}
{"id": "eqasc_validation_35", "prediction": "all x.((MovingCar(x) & PullOver(x) & StopAsQuickly(x) & StayInVehicle(x)) -> SafetyPermits(x))", "score": 0}
{"id": "eqasc_validation_35", "prediction": "all x.((MovingCar(x) & PullOver(x) & StopAsQuicklyAsSafetyPermits(x) & StayInVehicle(x)) -> StopAsQuicklyAsSafetyPermits(x))", "score": 0}
{"id": "eqasc_validation_35", "prediction": "all x.((MovingCar(x) & PullOver(x) & StopAsQuicklyAsSafetyPermits(x) & StayInVehicle(x)) -> PullOverAndStopAsQuicklyAsSafetyPermits(x))", "score": 0}
{"id": "eqasc_validation_35", "prediction": "all x.((MovingCar(x) & PullOver(x) & StopRapidly(x) & StayInVehicle(x)) -> SafetyPermits(x))", "score": 0}
{"id": "eqasc_validation_35", "prediction": "all x.((MovingCar(x) & PullOver(x) & StopAsQuicklyAsSafetyPermits(x) & StayInVehicle(x)) -> -StayInVehicle(x))", "score": 0}
{"id": "eqasc_validation_35", "prediction": "all x.((MovingCar(x) & PullOver(x) & StopAsQuicklyAsSafetyPermits(x) & StayInVehicle(x)) -> StayInVehicle(x))", "score": 0}
{"id": "eqasc_validation_35", "prediction": "all x.((MovingCar(x) & PullOver(x) & StopAsQuicklyAsSafetyPermits(x) & StayInVehicle(x)) -> (StayInVehicle(x) & StayInVehicle(x)))", "score": 0}
{"id": "eqasc_validation_35", "prediction": "all x.(MovingCar(x) -> (PutOver(x) & StopQuickly(x) & StayInVehicle(x)))", "score": 0}
{"id": "eqasc_validation_35", "prediction": "all x.((MovingCar(x) & PullOver(x) & StopAsQuicklyAsSafetyPermits(x) & StayInVehicle(x)) -> -StaysInVehicle(x))", "score": 0}
{"id": "eqasc_validation_35", "prediction": "all x.((MovingCar(x) & PullOver(x) & StopFast(x) & StayInVehicle(x)) -> SafetyPermits(x))", "score": 0}
{"id": "eqasc_validation_35", "prediction": "all x.((MovingCar(x) & PullOver(x) & StopAsQuicklyAsSafetyPermits(x) & StayInVehicle(x)) -> QuickStop(x))", "score": 0}
{"id": "eqasc_validation_36", "prediction": "all x.(MovingCar(x) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_36", "prediction": "all x y.((MovingCar(x) & Transportation(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_36", "prediction": "all x y.((MovingCar(x) & Car(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_36", "prediction": "all x y.((Car(x) & Moving(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_36", "prediction": "all x y z.((Car(x) & MovingCar(y) & Transportation(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_36", "prediction": "all x y.((MovingCar(x) & Transportation(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_36", "prediction": "all x y z.((MovingCar(x) & Transportation(y) & Transportation(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_36", "prediction": "all x y z.((MovingCar(x) & Car(y) & Transportation(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_36", "prediction": "all x y z.((Car(x) & Moving(y) & Car(z)) -> UsedForTransportation(x,y,z))", "score": 0}
{"id": "eqasc_validation_36", "prediction": "all x y z.((Car(x) & MovingCar(y) & Transportation(z)) -> UsedForTransportation(x,y,z))", "score": 0}
{"id": "eqasc_validation_36", "prediction": "all x y.((Car(x) & Car(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_36", "prediction": "all x y.((Car(x) & MovingCar(y)) -> UsedForTransportation(x,y))", "score": 0}
{"id": "eqasc_validation_36", "prediction": "all x y z.((MovingCar(x) & Car(y) & Transportation(z)) -> UsedForTransportation(x,y,z))", "score": 0}
{"id": "eqasc_validation_36", "prediction": "all x y.((MovingCar(x) & TransportingCar(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_37", "prediction": "all x y.((Transportation(x) & Vancouver(y)) -> CausesAirPollution(x,y))", "score": 0}
{"id": "eqasc_validation_37", "prediction": "all x y z.((Transportation(x) & AirPollution(y) & Vancouver(z)) -> CausesInAndAround(x,y,z))", "score": 0}
{"id": "eqasc_validation_37", "prediction": "all x y z.((Transportation(x) & AirPollution(y) & Vancouver(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_37", "prediction": "all x y.((Transportation(x) & Vancouver(y)) -> CausesAirPollutionInAndAround(x,y))", "score": 0}
{"id": "eqasc_validation_37", "prediction": "all x y z.((Transportation(x) & AirPollution(y) & Vancouver(z)) -> CausesMost(x,y,z))", "score": 0}
{"id": "eqasc_validation_37", "prediction": "all x y z.((Transportation(x) & AirPollution(y) & Vancouver(z)) -> CausesMostInAndAround(x,y,z))", "score": 0}
{"id": "eqasc_validation_37", "prediction": "all x.(Transportation(x) -> CausesAirPollution(x))", "score": 0}
{"id": "eqasc_validation_37", "prediction": "all x y z.((Transportation(x) & Vancouver(y) & AirPollution(z)) -> CausesInAndAround(x,y,z))", "score": 0}
{"id": "eqasc_validation_37", "prediction": "all x.(Transportation(x) -> (CausesAirPollution(x) & InAndAroundVancouver(x)))", "score": 0}
{"id": "eqasc_validation_37", "prediction": "all x y.((Transportation(x) & AirPollution(y)) -> CausesInAndAroundVancouver(x,y))", "score": 0}
{"id": "eqasc_validation_37", "prediction": "all x y.((Transportation(x) & Vancouver(y)) -> (CausesAirPollution(x,y) & CausesAirPollution(x,y)))", "score": 0}
{"id": "eqasc_validation_37", "prediction": "all x y z.((Transportation(x) & Vancouver(y) & AirPollution(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_37", "prediction": "all x.(Transportation(x) -> CausesAirPollutionInAndAroundVancouver(x))", "score": 0}
{"id": "eqasc_validation_37", "prediction": "all x.(Transportation(x) -> (CausesAirPollution(x) & InVancouver(x) & AroundVancouver(x)))", "score": 0}
{"id": "eqasc_validation_37", "prediction": "all x y.((Transportation(x) & Vancouver(y)) -> (CausesAirPollution(x,y) & InAndAround(x,y)))", "score": 0}
{"id": "eqasc_validation_37", "prediction": "all x y.((Transportation(x) & Vancouver(y)) -> CausesMostOfAirPollution(x,y))", "score": 0}
{"id": "eqasc_validation_38", "prediction": "all x y.((Vehicle(x) & AirPollution(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_38", "prediction": "all x.((Vehicle(x) & CausesAirPollution(x)) -> CausesAirPollution(x))", "score": 0}
{"id": "eqasc_validation_38", "prediction": "all x.(Vehicle(x) -> CausesAirPollution(x))", "score": 0}
{"id": "eqasc_validation_38", "prediction": "all x.((Vehicle(x) & CausesAirPollution(x)) -> AirPollution(x))", "score": 0}
{"id": "eqasc_validation_38", "prediction": "all x y z.((Vehicle(x) & AirPollution(y) & AirPollution(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_38", "prediction": "all x y.((Vehicle(x) & AirPollution(y) & Causes(x,y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_38", "prediction": "all x y z.((Vehicle(x) & AirPollution(y) & AirPollution(z)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_38", "prediction": "all x y z.((Vehicle(x) & AirPollution(y) & Causes(x,y)) -> Causes(x,z))", "score": 0}
{"id": "eqasc_validation_38", "prediction": "all x y z.((Vehicle(x) & AirPollution(y) & Vehicle(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_38", "prediction": "all x y z.((Vehicle(x) & AirPollution(y) & AirPollution(z) & Causes(x,y)) -> Causes(x,z))", "score": 0}
{"id": "eqasc_validation_38", "prediction": "all x y z.((Vehicle(x) & AirPollution(y) & AirPollution(z) & Causes(x,y,z)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_38", "prediction": "all x y z.((Vehicle(x) & AirPollution(y) & AirPollution(z) & Causes(x,y,z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_38", "prediction": "all x y.((Vehicle(x) & AirPollution(y) & Causes(x,y)) -> AirPollution(x))", "score": 0}
{"id": "eqasc_validation_38", "prediction": "all x y z.((Vehicle(x) & AirPollution(y) & Causes(x,y)) -> AirPollution(z))", "score": 0}
{"id": "eqasc_validation_38", "prediction": "all x y z.((Vehicle(x) & AirPollution(y) & Vehicle(z)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_38", "prediction": "all x y z.((Vehicle(x) & AirPollution(y) & AirPlution(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_39", "prediction": "all x.(CollarCell(x) -> (TinyHairs(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_39", "prediction": "all x.(CollarCell(x) -> (HasTinyHairs(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_39", "prediction": "all x y.((CollarCell(x) & TinyHairs(y)) -> TrapsParticles(x,y))", "score": 0}
{"id": "eqasc_validation_39", "prediction": "all x.(CollarCell(x) -> HasTinyHairs(x))", "score": 0}
{"id": "eqasc_validation_39", "prediction": "all x y z.((CollarCell(x) & TinyHairs(y) & Particle(z)) -> Traps(x,y,z))", "score": 0}
{"id": "eqasc_validation_39", "prediction": "all x.(CollarCell(x) -> (TinyHairs(x) & TrapParticles(x)))", "score": 0}
{"id": "eqasc_validation_39", "prediction": "all x y z.((CollarCell(x) & TinyHair(y) & Particle(z)) -> Traps(x,y,z))", "score": 0}
{"id": "eqasc_validation_39", "prediction": "all x y.((CollarCell(x) & TinyHairs(y)) -> Traps(x,y))", "score": 0}
{"id": "eqasc_validation_39", "prediction": "all x.(CollarCell(x) -> (HasTinyHairs(x) & TrapsPrinciples(x)))", "score": 0}
{"id": "eqasc_validation_39", "prediction": "all x.(CollarCell(x) -> exists y.(TinyHair(y) & Traps(x,y)))", "score": 0}
{"id": "eqasc_validation_39", "prediction": "all x y.((CollarCell(x) & TinyHairs(y)) -> TrapsParticles(x))", "score": 0}
{"id": "eqasc_validation_39", "prediction": "all x.(CollarCell(x) -> (TinyHairs(x) & Traps(x)))", "score": 0}
{"id": "eqasc_validation_39", "prediction": "all x.(CollarCell(x) -> exists y.(TinyHairs(y) & Traps(x,y)))", "score": 0}
{"id": "eqasc_validation_40", "prediction": "all x.(WorkHorse(x) -> (CollarCells(x) | Choanocytes(x)))", "score": 0}
{"id": "eqasc_validation_40", "prediction": "all x.((CollarCell(x) | Choanocyte(x)) -> WorkHorse(x))", "score": 0}
{"id": "eqasc_validation_40", "prediction": "all x.((CollarCells(x) | Choanocytes(x)) -> WorkHorse(x))", "score": 0}
{"id": "eqasc_validation_40", "prediction": "all x y.((CollarCell(x) | Choanocyte(x)) -> WorkHorse(y))", "score": 0}
{"id": "eqasc_validation_40", "prediction": "all x.(WorkHorse(x) -> (CollarCell(x) | Choanocyte(x)))", "score": 0}
{"id": "eqasc_validation_40", "prediction": "all x y.((CollarCell(x) | Choanocyte(y)) -> WorkHorse(x))", "score": 0}
{"id": "eqasc_validation_40", "prediction": "all x.(WorkHorse(x) -> (CollarCellsOrChoanocytes(x)))", "score": 0}
{"id": "eqasc_validation_40", "prediction": "all x.(WorkHop(x) -> (CollarCells(x) | Choanocytes(x)))", "score": 0}
{"id": "eqasc_validation_40", "prediction": "all x.((Collar(x) | Choanocyte(x)) -> WorkHorse(x))", "score": 0}
{"id": "eqasc_validation_40", "prediction": "all x.((CollarCell(x) | Choanocytes(x)) -> WorkHorse(x))", "score": 0}
{"id": "eqasc_validation_40", "prediction": "all x y.((CollarCell(x) & Choanocyte(y)) -> WorkHorse(x))", "score": 0}
{"id": "eqasc_validation_40", "prediction": "all x.(WorkHorse(x) -> (Collar(x) | Choanocyte(x)))", "score": 0}
{"id": "eqasc_validation_40", "prediction": "all x y.((CollarCell(x) | Choanocyte(x)) -> WorkHorse(x))", "score": 0}
{"id": "eqasc_validation_41", "prediction": "all x.(Choanocyte(x) -> (HasTinyHairs(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_41", "prediction": "all x.(Choanocyte(x) -> (TinyHairs(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_41", "prediction": "all x y.((Choanocyte(x) & TinyHairs(y)) -> TrapsParticles(x,y))", "score": 0}
{"id": "eqasc_validation_41", "prediction": "all x y z.((Choanocyte(x) & TinyHairs(y) & Particle(z)) -> Traps(x,y,z))", "score": 0}
{"id": "eqasc_validation_41", "prediction": "all x.(Choanocyte(x) -> (TinyHairs(x) & TrapParticles(x)))", "score": 0}
{"id": "eqasc_validation_41", "prediction": "all x.(Choanocyte(x) -> (HasTinyHairs(x) & TrapsProteins(x)))", "score": 0}
{"id": "eqasc_validation_41", "prediction": "all x y z.((Choanocyte(x) & TinyHair(y) & Particle(z)) -> Traps(x,y,z))", "score": 0}
{"id": "eqasc_validation_41", "prediction": "all x.(Choanocyte(x) -> (HasTinyHairs(x) & TrapsPrimary(x)))", "score": 0}
{"id": "eqasc_validation_41", "prediction": "all x.(Choanocyte(x) -> (HasTinyHairs(x) & Traps(x)))", "score": 0}
{"id": "eqasc_validation_41", "prediction": "all x.(Choanocyte(x) -> HasTinyHairs(x))", "score": 0}
{"id": "eqasc_validation_41", "prediction": "all x.(Choanocyte(x) -> (HasTinyHairs(x) & TrapsPrinciples(x)))", "score": 0}
{"id": "eqasc_validation_41", "prediction": "all x.(Choanocyte(x) -> (TinyHairs(x) & TrapsProteins(x)))", "score": 0}
{"id": "eqasc_validation_41", "prediction": "all x.(Choanocyte(x) -> (TinyHairs(x) & Traps(x)))", "score": 0}
{"id": "eqasc_validation_41", "prediction": "all x y.((Choanocyte(x) & TinyHairs(y)) -> Traps(x,y))", "score": 0}
{"id": "eqasc_validation_42", "prediction": "all x.(Particle(x) -> (TinyPieceOfMatter(x) & VeryTinyPieceOfMatter(x)))", "score": 0}
{"id": "eqasc_validation_42", "prediction": "all x.(Particle(x) -> VeryTinyPieceOfMatter(x))", "score": 0}
{"id": "eqasc_validation_42", "prediction": "all x.(Particle(x) -> (TinyPieceOfMatter(x) & VeryTiny(x)))", "score": 0}
{"id": "eqasc_validation_42", "prediction": "all x.(Particle(x) -> (TinyMatter(x) & VeryTiny(x)))", "score": 0}
{"id": "eqasc_validation_42", "prediction": "all x.(Particle(x) -> (TinyPieceOfMatter(x) | VeryTinyPieceOfMatter(x)))", "score": 0}
{"id": "eqasc_validation_42", "prediction": "all x.(Particle(x) -> (TinyPieceOfMatter(x) & -TinyPieceOfMatter(x)))", "score": 0}
{"id": "eqasc_validation_42", "prediction": "all x.(Particle(x) -> (TinyPieceOfMatter(x) & VeryTinyMatter(x)))", "score": 0}
{"id": "eqasc_validation_42", "prediction": "all x.(Particle(x) -> (Particle(x) & VeryTinyPieceOfMatter(x)))", "score": 0}
{"id": "eqasc_validation_42", "prediction": "all x.(Particle(x) -> TinyPieceOfMatter(x))", "score": 0}
{"id": "eqasc_validation_42", "prediction": "all x.((Particle(x) & VeryTinyPieceOfMatter(x)) -> Particle(x))", "score": 0}
{"id": "eqasc_validation_42", "prediction": "all x.(Particle(x) -> (TinyPieceOfMatter(x) & VeryPieceOfMatter(x)))", "score": 0}
{"id": "eqasc_validation_42", "prediction": "all x.(Particle(x) -> (TinyPieceOfMatter(x) & ContainsMatter(x)))", "score": 0}
{"id": "eqasc_validation_42", "prediction": "all x.(Particle(x) -> (TinyPieceOfMatter(x) & VeryTidyPieceOfMatter(x)))", "score": 0}
{"id": "eqasc_validation_42", "prediction": "all x.(Particle(x) -> (TinyPieceOfMatter(x) & Simple(x)))", "score": 0}
{"id": "eqasc_validation_43", "prediction": "all x.(CollarCell(x) -> (TinyHairs(x) & TrapsTinyMatter(x)))", "score": 0}
{"id": "eqasc_validation_43", "prediction": "all x.(CollarCell(x) -> (TinyHairs(x) & TrapsTinyPiecesOfMatter(x)))", "score": 0}
{"id": "eqasc_validation_43", "prediction": "all x.(CollarCell(x) -> (HasTinyHairs(x) & TrapsTinyPiecesOfMatter(x)))", "score": 0}
{"id": "eqasc_validation_43", "prediction": "all x.(CollarCell(x) -> (HasTinyHairs(x) & TrapsTinyMatter(x)))", "score": 0}
{"id": "eqasc_validation_43", "prediction": "all x y.((CollarCell(x) & TinyHairs(y)) -> TrapsTinyPiecesOfMatter(x,y))", "score": 0}
{"id": "eqasc_validation_43", "prediction": "all x y.((CollarCell(x) & TinyHairs(y)) -> TrapsTinyMatter(x,y))", "score": 0}
{"id": "eqasc_validation_43", "prediction": "all x y.((CollarCell(x) & TinyHairs(y)) -> TrapsTinyPiecesOfMatter(x))", "score": 0}
{"id": "eqasc_validation_43", "prediction": "all x.(CollarCell(x) -> (TinyHairs(x) & TrapTinyPiecesOfMatter(x)))", "score": 0}
{"id": "eqasc_validation_43", "prediction": "all x y z.((CollarCell(x) & TinyHairs(y) & TinyMatter(z)) -> Traps(x,y,z))", "score": 0}
{"id": "eqasc_validation_43", "prediction": "all x y z.((CollarCell(x) & TinyHairs(y) & TinyMatter(z)) -> TrapsTinyPiecesOfMatter(x,y,z))", "score": 0}
{"id": "eqasc_validation_43", "prediction": "all x.(CollarCell(x) -> (TinyHairs(x) & TrapTinyMatter(x)))", "score": 0}
{"id": "eqasc_validation_43", "prediction": "all x y z.((CollarCell(x) & TinyHairs(y) & TinyMatter(z)) -> (Has(x,y) & Traps(x,z)))", "score": 0}
{"id": "eqasc_validation_44", "prediction": "exists x.(Cell(x) & TinyHairLikeFibers(x) & Flagella(x))", "score": 0}
{"id": "eqasc_validation_44", "prediction": "exists x.(Cell(x) & HasTinyHairLikeFibers(x) & Flagella(x))", "score": 0}
{"id": "eqasc_validation_44", "prediction": "exists x.(Cell(x) & TickyHairLikeFibers(x) & Flagella(x))", "score": 0}
{"id": "eqasc_validation_44", "prediction": "exists x.(Cell(x) & TinyHairLikeFilms(x) & Flagella(x))", "score": 0}
{"id": "eqasc_validation_44", "prediction": "exists x.(Cell(x) & TweenHairLikeFibers(x) & Flagella(x))", "score": 0}
{"id": "eqasc_validation_44", "prediction": "exists x.(Cell(x) & TightHairLikeFibers(x) & Flagella(x))", "score": 0}
{"id": "eqasc_validation_44", "prediction": "exists x.(Cell(x) & ToughHairLikeFibers(x) & Flagella(x))", "score": 0}
{"id": "eqasc_validation_44", "prediction": "exists x.(Cell(x) & TinyHairLikeFerms(x) & Flagella(x))", "score": 0}
{"id": "eqasc_validation_44", "prediction": "exists x.(Cell(x) & TickyHairLikeFilms(x) & Flagella(x))", "score": 0}
{"id": "eqasc_validation_44", "prediction": "exists x.(Cell(x) & HasTinyHairLikeFilms(x) & Flagella(x))", "score": 0}
{"id": "eqasc_validation_44", "prediction": "exists x.(Cell(x) & HasTinyHairLikeFerms(x) & Flagella(x))", "score": 0}
{"id": "eqasc_validation_44", "prediction": "exists x.(Cell(x) & TinyHairLikeFast(x) & Flagella(x))", "score": 0}
{"id": "eqasc_validation_44", "prediction": "exists x.(Cell(x) & TinyHairLikeFibers(x) & Flagell(x))", "score": 0}
{"id": "eqasc_validation_44", "prediction": "exists x.(Cell(x) & HasTinyHairLikeFibers(x))", "score": 0}
{"id": "eqasc_validation_45", "prediction": "all x.(CollarCell(x) -> (HasFlagella(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_45", "prediction": "all x.(CollarCell(x) -> HasFlagella(x))", "score": 0}
{"id": "eqasc_validation_45", "prediction": "all x y.((CollarCell(x) & Particle(y)) -> HasFlagella(x,y))", "score": 0}
{"id": "eqasc_validation_45", "prediction": "all x.(CollarCell(x) -> exists y.(Flagella(y) & TrapsParticles(x,y)))", "score": 0}
{"id": "eqasc_validation_45", "prediction": "all x.(CollarCell(x) -> exists y.(Flagella(y) & Traps(x,y)))", "score": 0}
{"id": "eqasc_validation_45", "prediction": "all x.(CollarCell(x) -> (Flagella(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_45", "prediction": "all x y.((CollarCell(x) & Particle(y)) -> (HasFlagella(x,y) & Traps(x,y)))", "score": 0}
{"id": "eqasc_validation_45", "prediction": "all x y.((CollarCell(x) & Flagella(y)) -> TrapsParticles(x,y))", "score": 0}
{"id": "eqasc_validation_45", "prediction": "all x y z.((CollarCell(x) & Flagella(y) & Particle(z)) -> Traps(x,y,z))", "score": 0}
{"id": "eqasc_validation_45", "prediction": "all x.(CollarCell(x) -> exists y.(Flagella(y) & Traps(x,y))))", "score": -1}
{"id": "eqasc_validation_45", "prediction": "all x y z.((CollarCell(x) & Flagella(y) & Particle(z)) -> Traps(y,z))", "score": 0}
{"id": "eqasc_validation_45", "prediction": "all x.(CollarCell(x) -> exists y.(Flagella(y) & TrapsParticles(x,y))))", "score": -1}
{"id": "eqasc_validation_45", "prediction": "all x y.((CollarCell(x) & Particle(y)) -> TrapsFlagella(x,y))", "score": 0}
{"id": "eqasc_validation_45", "prediction": "all x y.((CollarCell(x) & Particle(y)) -> Flagella(x,y))", "score": 0}
{"id": "eqasc_validation_45", "prediction": "all x.(Cell(x) -> (HasFlagella(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_46", "prediction": "all x y.((CollarCell(x) & InteriorChamber(y)) -> Lines(x,y))", "score": 0}
{"id": "eqasc_validation_46", "prediction": "all x.(CollarCell(x) -> LinesInteriorChambers(x))", "score": 0}
{"id": "eqasc_validation_46", "prediction": "all x y z.((CollarCell(x) & InteriorChamber(y) & InteriorChamber(z)) -> Lines(x,y,z))", "score": 0}
{"id": "eqasc_validation_46", "prediction": "all x y z.((CollarCell(x) & InteriorChamber(y) & InteriorChamber(z)) -> Lines(x,y))", "score": 0}
{"id": "eqasc_validation_46", "prediction": "all x.(CollarCell(x) -> LineInteriorChambers(x))", "score": 0}
{"id": "eqasc_validation_46", "prediction": "all x y.((CollarCell(x) & InteriorChamber(y)) -> Line(x,y))", "score": 0}
{"id": "eqasc_validation_46", "prediction": "all x y z.((CollarCell(x) & InteriorChamber(y) & InteriorChamber(z)) -> Line(x,y,z))", "score": 0}
{"id": "eqasc_validation_46", "prediction": "all x y z.((CollarCell(x) & InteriorChamber(y) & ExteriorChamber(z)) -> Lines(x,y,z))", "score": 0}
{"id": "eqasc_validation_46", "prediction": "all x y.((CollarCell(x) & Interior(y)) -> Lines(x,y))", "score": 0}
{"id": "eqasc_validation_46", "prediction": "all x y z.((CollarCell(x) & InteriorChamber(y) & InteriorChamber(z) & Lines(x,y,z)) -> Lines(x,y,z))", "score": 0}
{"id": "eqasc_validation_46", "prediction": "all x y.((CollarCell(x) & InteriorChamber(y) & Lines(x,y)) -> Lines(x,y))", "score": 0}
{"id": "eqasc_validation_46", "prediction": "all x y z.((CollarCell(x) & InteriorChamber(y) & InteriorChamber(z) & Lines(x,y,z)) -> Lines(x,y))", "score": 0}
{"id": "eqasc_validation_46", "prediction": "all x y z.((CollarCell(x) & InteriorChamber(y) & InteriorChamber(z) & Lines(x,y)) -> Lines(x,z))", "score": 0}
{"id": "eqasc_validation_46", "prediction": "all x y.((CollarCell(x) & InteriorChambers(y)) -> Lines(x,y))", "score": 0}
{"id": "eqasc_validation_46", "prediction": "all x y.((Cell(x) & InteriorChamber(y)) -> Lines(x,y))", "score": 0}
{"id": "eqasc_validation_46", "prediction": "all x y.((CollaredCell(x) & InteriorChamber(y)) -> Lines(x,y))", "score": 0}
{"id": "eqasc_validation_47", "prediction": "all x y.((InteriorChamber(x) & TinyHairs(y)) -> TrapsParticles(x,y))", "score": 0}
{"id": "eqasc_validation_47", "prediction": "all x.(InteriorChamber(x) -> (TinyHairs(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_47", "prediction": "all x.(InteriorChamber(x) -> (HasTinyHairs(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_47", "prediction": "all x y z.((InteriorChamber(x) & TinyHairs(y) & Particles(z)) -> Traps(x,y,z))", "score": 0}
{"id": "eqasc_validation_47", "prediction": "all x y z.((InteriorChamber(x) & TinyHairs(y) & Particle(z)) -> Traps(x,y,z))", "score": 0}
{"id": "eqasc_validation_47", "prediction": "all x y z.((InteriorChamber(x) & TinyHairs(y) & Particle(z)) -> Traps(y,z))", "score": 0}
{"id": "eqasc_validation_47", "prediction": "all x y z.((InteriorChamber(x) & TinyHairs(y) & Particles(z)) -> Traps(y,z))", "score": 0}
{"id": "eqasc_validation_47", "prediction": "all x.((InteriorChamber(x) & TinyHairs(x)) -> TrapsParticles(x))", "score": 0}
{"id": "eqasc_validation_47", "prediction": "all x y.((InteriorChamber(x) & TinyHairs(y) & TrapsParticles(x,y)) -> InteriorChamber(x))", "score": 0}
{"id": "eqasc_validation_47", "prediction": "all x y z.((InteriorChamber(x) & TinyHairs(y) & Particles(z)) -> TrapsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_47", "prediction": "all x y.((InteriorChamber(x) & TinyHairs(y)) -> TrapsParticles(x))", "score": 0}
{"id": "eqasc_validation_47", "prediction": "all x y z.((InteriorChamber(x) & TinyHairs(y) & Particle(z)) -> TrapsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_47", "prediction": "all x.((InteriorChamber(x) & TinyHairs(x) & TrapsParticles(x)) -> InteriorChamber(x))", "score": 0}
{"id": "eqasc_validation_47", "prediction": "all x y.((InteriorChamber(x) & TinyHairs(y)) -> TrapsParticles(y,x))", "score": 0}
{"id": "eqasc_validation_47", "prediction": "all x.(InteriorChambers(x) -> (TinyHairs(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_47", "prediction": "all x y.((InteriorChamber(x) & InteriorChamber(y)) -> (TinyHairs(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_48", "prediction": "all x.(CollarCell(x) -> WorkHorseOfSponge(x))", "score": 0}
{"id": "eqasc_validation_48", "prediction": "all x y.((CollarCell(x) & Sponge(y)) -> WorkHorse(x,y))", "score": 0}
{"id": "eqasc_validation_48", "prediction": "all x.(CollarCell(x) -> WorkHorse(x))", "score": 0}
{"id": "eqasc_validation_48", "prediction": "all x y z.((CollarCell(x) & Sponge(y) & WorkHorse(z)) -> WorkHorse(x,y,z))", "score": 0}
{"id": "eqasc_validation_48", "prediction": "all x y.((CollarCell(x) & Sponge(y)) -> WorksHorse(x,y))", "score": 0}
{"id": "eqasc_validation_48", "prediction": "all x y.((CollarCell(x) & Sponge(y)) -> WorkHorseOf(x,y))", "score": 0}
{"id": "eqasc_validation_48", "prediction": "all x y z.((CollarCell(x) & Sponge(y) & WorkHorse(z)) -> WorkHorse(x,y))", "score": 0}
{"id": "eqasc_validation_48", "prediction": "all x y z.((CollarCell(x) & Sponge(y) & Sponge(z)) -> WorkHorse(x,y,z))", "score": 0}
{"id": "eqasc_validation_48", "prediction": "all x y z.((CollarCell(x) & Sponge(y) & WorkHorse(z)) -> WorkHorseOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_48", "prediction": "all x y.((CollarCell(x) & Sponge(y)) -> (WorkHorse(x,y) & WorkHorse(x,y)))", "score": 0}
{"id": "eqasc_validation_48", "prediction": "all x y z.((CollarCell(x) & Sponge(y) & WorkHorse(x,y)) -> WorkHorse(x,z))", "score": 0}
{"id": "eqasc_validation_48", "prediction": "all x.(CollarCell(x) -> WorkHorse(x,sponge))", "score": 0}
{"id": "eqasc_validation_48", "prediction": "all x.(CollarCell(x) -> WorkHorse(x,Sponge))", "score": 0}
{"id": "eqasc_validation_48", "prediction": "all x y z.((CollarCell(x) & Sponge(y) & WorkHorse(x,y)) -> WorkHorse(x,y))", "score": 0}
{"id": "eqasc_validation_48", "prediction": "all x y.((CollaredCell(x) & Sponge(y)) -> WorkHorse(x,y))", "score": 0}
{"id": "eqasc_validation_49", "prediction": "all x.(Sponge(x) -> (TinyHairs(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_49", "prediction": "all x.(Sponge(x) -> (HasTinyHairs(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_49", "prediction": "all x y.((Sponge(x) & TinyHairs(y)) -> TrapsParticles(x,y))", "score": 0}
{"id": "eqasc_validation_49", "prediction": "all x y z.((Sponge(x) & TinyHairs(y) & Particle(z)) -> Traps(x,y,z))", "score": 0}
{"id": "eqasc_validation_49", "prediction": "all x.(Sponge(x) -> (TinyHairs(x) & TrapParticles(x)))", "score": 0}
{"id": "eqasc_validation_49", "prediction": "all x y z.((Sponge(x) & TinyHairs(y) & Particles(z)) -> Traps(x,y,z))", "score": 0}
{"id": "eqasc_validation_49", "prediction": "all x y.((Sponge(x) & TinyHairs(y)) -> TrapsParticles(x))", "score": 0}
{"id": "eqasc_validation_49", "prediction": "all x y.((Sponge(x) & TinyHairs(y) & TrapsParticles(x,y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_49", "prediction": "all x y.((Sponge(x) & TinyHairs(y) & TrapsParticles(x)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_49", "prediction": "all x y.((Sponge(x) & Sponge(y)) -> (TinyHairs(x) & TrapsParticles(y)))", "score": 0}
{"id": "eqasc_validation_49", "prediction": "all x y z.((Sponge(x) & TinyHairs(y) & Particle(z)) -> (Has(x,y) & Traps(y,z)))", "score": 0}
{"id": "eqasc_validation_49", "prediction": "all x y z.((Sponge(x) & TinyHairs(y) & Particle(z)) -> (Has(x,y) & Traps(x,z)))", "score": 0}
{"id": "eqasc_validation_49", "prediction": "all x y z.((Sponge(x) & TinyHairs(y) & Particle(z)) -> TrapsParticles(x,y,z))", "score": 0}
{"id": "eqasc_validation_50", "prediction": "all x y.((Sponge(x) & Particle(y)) -> Traps(x,y))", "score": 0}
{"id": "eqasc_validation_50", "prediction": "all x.(Sponge(x) -> TrapsParticles(x))", "score": 0}
{"id": "eqasc_validation_50", "prediction": "all x y z.((Sponge(x) & Particle(y) & Particle(z)) -> Traps(x,y,z))", "score": 0}
{"id": "eqasc_validation_50", "prediction": "all x y z.((Sponge(x) & Particle(y) & Sponge(z)) -> Traps(x,y,z))", "score": 0}
{"id": "eqasc_validation_50", "prediction": "all x.(Sponge(x) -> (TrapsParticles(x) & Particles(x)))", "score": 0}
{"id": "eqasc_validation_50", "prediction": "all x y z.((Sponge(x) & Particle(y) & Particle(z)) -> TrapsParticles(x,y,z))", "score": 0}
{"id": "eqasc_validation_50", "prediction": "all x y z.((Sponge(x) & Particle(y) & Particle(z)) -> Traps(x,y))", "score": 0}
{"id": "eqasc_validation_50", "prediction": "all x.(Sponge(x) -> (TrapsParticles(x) & Sponge(x)))", "score": 0}
{"id": "eqasc_validation_50", "prediction": "all x y.((Sponge(x) & Particle(y)) -> TrapsParticles(x,y))", "score": 0}
{"id": "eqasc_validation_50", "prediction": "all x y z.((Sponge(x) & Particle(y) & Particle(z) & Traps(x,y,z)) -> Sponge(x))", "score": 0}
{"id": "eqasc_validation_50", "prediction": "all x.(Sponge(x) -> (TrapsParticles(x) & ContainsParticles(x)))", "score": 0}
{"id": "eqasc_validation_50", "prediction": "all x y.((Sponge(x) & Particles(y)) -> Traps(x,y))", "score": 0}
{"id": "eqasc_validation_50", "prediction": "all x y.((Sponge(x) & Sponge(y)) -> TrapsParticles(x,y))", "score": 0}
{"id": "eqasc_validation_50", "prediction": "all x y z.((Sponge(x) & Particle(y) & Particle(z) & Traps(x,y,z)) -> Traps(x,y,z))", "score": 0}
{"id": "eqasc_validation_50", "prediction": "all x.((Sponge(x) & Sponge(x)) -> TrapsParticles(x))", "score": 0}
{"id": "eqasc_validation_50", "prediction": "all x y z.((Sponge(x) & Particle(y) & Particle(z) & Traps(x,y)) -> Sponge(x))", "score": 0}
{"id": "eqasc_validation_51", "prediction": "all x.(CollarCell(x) -> HasFlagellum(x))", "score": 0}
{"id": "eqasc_validation_51", "prediction": "all x y.((CollarCell(x) & Flagellum(y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_51", "prediction": "all x y.((CollarCell(x) & Flagellum(y)) -> HasFlagellum(x,y))", "score": 0}
{"id": "eqasc_validation_51", "prediction": "all x.(CollarCell(x) -> exists y.(Flagellum(y) & Has(x,y))))", "score": -1}
{"id": "eqasc_validation_51", "prediction": "all x y.((CollarCell(x) & CollarCell(y)) -> HasFlagellum(x,y))", "score": 0}
{"id": "eqasc_validation_51", "prediction": "all x.(CollarCell(x) -> exists y.(Flagellum(y) & Has(x,y)))", "score": 0}
{"id": "eqasc_validation_51", "prediction": "all x y.((CollarCell(x) & Cell(y)) -> HasFlagellum(x,y))", "score": 0}
{"id": "eqasc_validation_51", "prediction": "all x.(CollarCell(x) -> exists y.(Flagellum(y) & HasFlagellum(x,y)))", "score": 0}
{"id": "eqasc_validation_51", "prediction": "all x y z.((CollarCell(x) & Flagellum(y) & Flagellum(z)) -> Has(x,y,z))", "score": 0}
{"id": "eqasc_validation_51", "prediction": "all x.(CollarCell(x) -> (HasFlagellum(x) | HasFlagellum(x)))", "score": 0}
{"id": "eqasc_validation_51", "prediction": "all x.(Cell(x) -> HasFlagellum(x))", "score": 0}
{"id": "eqasc_validation_51", "prediction": "all x.(CollarCell(x) -> (HasFlagellum(x) & HasFlagellum(x)))", "score": 0}
{"id": "eqasc_validation_51", "prediction": "all x y z.((CollarCell(x) & Flagellum(y) & Cell(z)) -> Has(x,y,z))", "score": 0}
{"id": "eqasc_validation_51", "prediction": "all x y z.((CollarCell(x) & Flagellum(y) & Flagellum(z)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_51", "prediction": "all x.(CollarCell(x) -> exists y.(Flagellum(y) & HasFlagellum(x,y))))", "score": -1}
{"id": "eqasc_validation_52", "prediction": "all x.(Flagellum(x) -> (TinyHairs(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_52", "prediction": "all x.(Flagellum(x) -> (TinyHair(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_52", "prediction": "all x.(Flagellum(x) -> (TinyHairs(x) & TrapParticles(x)))", "score": 0}
{"id": "eqasc_validation_52", "prediction": "all x y.((Flagellum(x) & TinyHair(y)) -> TrapsParticles(x,y))", "score": 0}
{"id": "eqasc_validation_52", "prediction": "all x y.((Flagellum(x) & TinyHairs(y)) -> TrapsParticles(x,y))", "score": 0}
{"id": "eqasc_validation_52", "prediction": "all x y z.((Flagellum(x) & TinyHair(y) & Particle(z)) -> Traps(y,z))", "score": 0}
{"id": "eqasc_validation_52", "prediction": "all x y z.((Flagellum(x) & TinyHair(y) & Particle(z)) -> Traps(x,y,z))", "score": 0}
{"id": "eqasc_validation_52", "prediction": "all x.(Flagellum(x) -> (TinyHairs(x) & TrapsParticulates(x)))", "score": 0}
{"id": "eqasc_validation_52", "prediction": "all x.(Flagellum(x) -> (TinyHairs(x) & TrapsParticles(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_52", "prediction": "all x.(Flagellum(x) -> (TinyHairs(x) & TrapsParticulate(x)))", "score": 0}
{"id": "eqasc_validation_52", "prediction": "all x.(Flagellum(x) -> (TinyHair(x) & TrapParticles(x)))", "score": 0}
{"id": "eqasc_validation_52", "prediction": "all x.(Flagellum(x) -> (TinyHairs(x) & Trap(x) & Particles(x)))", "score": 0}
{"id": "eqasc_validation_53", "prediction": "all x y.((WorkHorse(x) & Sponge(y)) -> (TinyHairs(x) & TrapsParticles(x,y)))", "score": 0}
{"id": "eqasc_validation_53", "prediction": "all x y.((WorkHorse(x) & Sponge(y)) -> HasTinyHairs(x,y))", "score": 0}
{"id": "eqasc_validation_53", "prediction": "all x y.((WorkHorse(x) & Sponge(y)) -> (TinyHairs(x,y) & TrapsParticles(x,y)))", "score": 0}
{"id": "eqasc_validation_53", "prediction": "all x y.((WorkHorse(x) & Sponge(y)) -> (TinyHairs(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_53", "prediction": "all x y.((WorkHorse(x) & Sponge(y)) -> (HasTinyHairs(x,y) & TrapsParticles(x,y)))", "score": 0}
{"id": "eqasc_validation_53", "prediction": "all x y.((WorkHorse(x) & Sponge(y)) -> (HasTinyHairs(x) & TrapsParticles(x,y)))", "score": 0}
{"id": "eqasc_validation_53", "prediction": "all x y.((WorkHorse(x) & Sponge(y)) -> (TinyHairs(x,y) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_53", "prediction": "all x.((WorkHorse(x) & Sponge(x)) -> (TinyHairs(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_53", "prediction": "all x y z.((WorkHorse(x) & Sponge(y) & WorkHorse(z)) -> (HasTinyHairs(x,y) & TrapsParticles(x,z)))", "score": 0}
{"id": "eqasc_validation_53", "prediction": "all x y z.((WorkHorse(x) & Sponge(y) & WorkHorse(z)) -> (TinyHairs(x,y) & TrapsParticles(x,z)))", "score": 0}
{"id": "eqasc_validation_53", "prediction": "all x y.((WorkHorse(x) & Sponge(y)) -> (HasTinyHairs(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_53", "prediction": "all x y z.((WorkHorse(x) & Sponge(y) & WorkHorse(z)) -> (TinyHairs(y) & TrapsParticles(z)))", "score": 0}
{"id": "eqasc_validation_53", "prediction": "all x y.((WorkHorse(x) & Sponge(y) & HasTinyHairs(x,y)) -> TrapsParticles(x,y))", "score": 0}
{"id": "eqasc_validation_53", "prediction": "all x y z.((WorkHorse(x) & Sponge(y) & WorkHorse(z)) -> HasTinyHairs(x,y,z))", "score": 0}
{"id": "eqasc_validation_53", "prediction": "all x y.((WorkHorse(x) & Sponge(y)) -> (TinyHairs(x) & TrapsParticles(y)))", "score": 0}
{"id": "eqasc_validation_53", "prediction": "all x y z.((WorkHorse(x) & Sponge(y) & TinyHairs(z)) -> TrapsParticles(x,y,z))", "score": 0}
{"id": "eqasc_validation_54", "prediction": "all x.(Cnidarian(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_54", "prediction": "all x y.((Cnidarian(x) & Aquatic(y)) -> Cnidarian(x))", "score": 0}
{"id": "eqasc_validation_54", "prediction": "all x.((Cnidarian(x) & Aquatic(x)) -> Cnidarian(x))", "score": 0}
{"id": "eqasc_validation_54", "prediction": "all x y.((Cnidarian(x) & Aquatic(y)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_54", "prediction": "all x y.((Cnidarian(x) & Cnidarian(y)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_54", "prediction": "all x y.((Cnidarian(x) & Aquatic(y)) -> Cnidarian(x,y))", "score": 0}
{"id": "eqasc_validation_54", "prediction": "all x y.((Cnidarian(x) & Aquatic(x)) -> Cnidarian(y))", "score": 0}
{"id": "eqasc_validation_54", "prediction": "all x y.((Cnidarian(x) & Aquatic(y)) -> (Cnidarian(x) & Aquatic(x)))", "score": 0}
{"id": "eqasc_validation_54", "prediction": "(all x.(Cnidarian(x) -> Aquatic(x)))", "score": 0}
{"id": "eqasc_validation_54", "prediction": "all x y.((Cnidarian(x) & Aquatic(y)) -> (Cnidarian(x) & Aquatic(y)))", "score": 0}
{"id": "eqasc_validation_54", "prediction": "all x y.((Cnidarian(x) & Aquatic(y)) -> (Aquatic(x) | Aquatic(y)))", "score": 0}
{"id": "eqasc_validation_54", "prediction": "all x y.((Cnidarian(x) & Aquatic(y)) -> (Aquatic(x) & Aquatic(y)))", "score": 0}
{"id": "eqasc_validation_54", "prediction": "all x y.((Cnidarian(x) & Aquatic(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_54", "prediction": "all x y.((Cnidarian(x) & Aquatic(x)) -> Cnidarian(x))", "score": 0}
{"id": "eqasc_validation_54", "prediction": "all x y.((Cnidarian(x) & Aquatic(y)) -> (Cnidarian(x) | Cnidarian(x)))", "score": 0}
{"id": "eqasc_validation_55", "prediction": "all x.(Cnidarian(x) -> (Jellyfish(x) | Anemone(x)))", "score": 0}
{"id": "eqasc_validation_55", "prediction": "all x.(Cnidarian(x) -> (Jellyfish(x) | Anemones(x)))", "score": 0}
{"id": "eqasc_validation_55", "prediction": "all x.(Cnidarian(x) -> (IncludesJellyfish(x) | IncludesAnemones(x)))", "score": 0}
{"id": "eqasc_validation_55", "prediction": "all x.(Cnidarian(x) -> (Jerkyfish(x) | Anemones(x)))", "score": 0}
{"id": "eqasc_validation_55", "prediction": "all x.(Cnidarian(x) -> (Jerseyfish(x) | Anemones(x)))", "score": 0}
{"id": "eqasc_validation_55", "prediction": "all x.(Cnidarian(x) -> (Jerkfish(x) | Anemone(x)))", "score": 0}
{"id": "eqasc_validation_55", "prediction": "all x.(Cnidarian(x) -> (IncludesJellyfish(x) & IncludesAnemones(x)))", "score": 0}
{"id": "eqasc_validation_55", "prediction": "all x y z.((Cnidarian(x) & Jellyfish(y) & Anemone(z)) -> (Includes(x,y) & Includes(x,z)))", "score": 0}
{"id": "eqasc_validation_55", "prediction": "all x y.((Cnidarian(x) & Jellyfish(y) & Anemone(y)) -> Includes(x,y))", "score": 0}
{"id": "eqasc_validation_55", "prediction": "all x.(Cnidarian(x) -> (Jerkfish(x) | Anemones(x)))", "score": 0}
{"id": "eqasc_validation_55", "prediction": "all x.(Cnidarian(x) -> (Jerkyfish(x) | Anemone(x)))", "score": 0}
{"id": "eqasc_validation_55", "prediction": "all x.(Cnidarian(x) -> (Jerryfish(x) | Anemones(x)))", "score": 0}
{"id": "eqasc_validation_55", "prediction": "all x.(Cnidarian(x) -> (Includes(x,Jellyfish) | Includes(x,Anemones)))", "score": 0}
{"id": "eqasc_validation_55", "prediction": "all x y z.((Cnidarian(x) & Jellyfish(y) & Anemone(z)) -> Includes(x,y,z))", "score": 0}
{"id": "eqasc_validation_55", "prediction": "all x.(Cnidarian(x) -> (Jamefish(x) | Anemones(x)))", "score": 0}
{"id": "eqasc_validation_56", "prediction": "all x.(Jellyfish(x) -> AquaticAnimal(x))", "score": 0}
{"id": "eqasc_validation_56", "prediction": "all x y.((Jellyfish(x) & AquaticAnimal(y)) -> AquaticAnimal(x))", "score": 0}
{"id": "eqasc_validation_56", "prediction": "all x y.((Jellyfish(x) & AquaticAnimal(y)) -> AquaticAnimal(x,y))", "score": 0}
{"id": "eqasc_validation_56", "prediction": "all x.((Jellyfish(x) & AquaticAnimal(x)) -> AquaticAnimal(x))", "score": 0}
{"id": "eqasc_validation_56", "prediction": "all x.(Jellyfish(x) -> (AquaticAnimal(x) & AquaticAnimal(x)))", "score": 0}
{"id": "eqasc_validation_56", "prediction": "all x.(Jerkyfish(x) -> AquaticAnimal(x))", "score": 0}
{"id": "eqasc_validation_56", "prediction": "all x.(Jellyfish(x) -> (AquaticAnimal(x) & AquaticAnimal(x) & AquaticAnimal(x)))", "score": 0}
{"id": "eqasc_validation_56", "prediction": "all x.(Jellyfish(x) -> (AquaticAnimal(x) & AquaticAnimal(x) & AquaticAnimal(x) & AquaticAnimal(x)))", "score": 0}
{"id": "eqasc_validation_56", "prediction": "all x.(Jellyfish(x) -> (AquaticAnimal(x) & AquaticAnimal(x) & AquaticAnimal(x) & AquaticAnimal(x) & AquaticAnimal(x)))", "score": 0}
{"id": "eqasc_validation_56", "prediction": "all x.(Jellyfish(x) -> (AquaticAnimal(x) & AquaticAnimal(x) & AquaticAnimal(x) & AquaticAnimal(x) & AquaticAnimal(x) & AquaticAnimal(x)))", "score": 0}
{"id": "eqasc_validation_56", "prediction": "all x.(Jellyfish(x) -> (AquaticAnimal(x) & AquaticAnimal(x) & AquaticAnimal(x) & AquaticAnimal(x) & AquaticAnimal(x) & AquaticAnimal(x) & AquaticAnimal(x)))", "score": 0}
{"id": "eqasc_validation_56", "prediction": "all x y.((Jellyfish(x) & AquaticAnimal(y) & AquaticAnimal(x)) -> AquaticAnimal(x))", "score": 0}
{"id": "eqasc_validation_56", "prediction": "all x.(Jerkfish(x) -> AquaticAnimal(x))", "score": 0}
{"id": "eqasc_validation_56", "prediction": "all x y.((Jellyfish(x) & AquaticAnimal(y) & AquaticAnimal(z)) -> AquaticAnimal(x,y,z))", "score": 0}
{"id": "eqasc_validation_56", "prediction": "all x.(Jéllyfish(x) -> AquaticAnimal(x))", "score": 0}
{"id": "eqasc_validation_57", "prediction": "all x.(AquaticCreature(x) -> LivesInWater(x))", "score": 0}
{"id": "eqasc_validation_57", "prediction": "all x y.((AquaticCreature(x) & Water(y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_57", "prediction": "all x y z.((AquaticCreature(x) & Water(y) & Water(z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_57", "prediction": "all x y z.((AquaticCreature(x) & Water(y) & Water(z)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_57", "prediction": "all x.(AquaticCreature(x) -> (LivesInWater(x) | LivesInWater(x)))", "score": 0}
{"id": "eqasc_validation_57", "prediction": "all x y.((AquaticCreature(x) & Water(y)) -> LivesInForm(x,y))", "score": 0}
{"id": "eqasc_validation_57", "prediction": "all x y z.((AquaticCreature(x) & Water(y) & AquaticCreature(z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_57", "prediction": "all x.((AquaticCreature(x) & LivesInWater(x)) -> LivesInWater(x))", "score": 0}
{"id": "eqasc_validation_57", "prediction": "all x.((AquaticCreature(x) & LivesInWater(x)) -> AquaticCreature(x))", "score": 0}
{"id": "eqasc_validation_57", "prediction": "all x.(AquaticCreature(x) -> exists y.(Water(y) & LivesIn(x,y)))", "score": 0}
{"id": "eqasc_validation_57", "prediction": "all x y.((AquaticCreature(x) & Water(y)) -> (LivesIn(x,y) | LivesIn(x,y)))", "score": 0}
{"id": "eqasc_validation_57", "prediction": "all x y.((AquaticCreature(x) & Water(y) & LivesIn(x,y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_57", "prediction": "all x.(AquaticCreature(x) -> exists y.(Water(y) & LivesIn(x,y))))", "score": -1}
{"id": "eqasc_validation_57", "prediction": "all x y z.((AquaticCreature(x) & Water(y) & Water(z)) -> LivesInForm(x,y,z))", "score": 0}
{"id": "eqasc_validation_57", "prediction": "all x y z.((AquaticCreature(x) & Water(y) & (Water(z) | Water(z)))) -> LivesIn(x,y,z))", "score": -1}
{"id": "eqasc_validation_57", "prediction": "all x y z.((AquaticCreature(x) & Water(y) & AquaticCreature(z)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_58", "prediction": "all x.(Cnidarian(x) -> LivesInWater(x))", "score": 0}
{"id": "eqasc_validation_58", "prediction": "all x y.((Cnidarian(x) & Water(y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_58", "prediction": "all x y z.((Cnidarian(x) & Water(y) & Water(z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_58", "prediction": "all x y.((Cnidarian(x) & Cnidarian(y)) -> LivesInWater(x,y))", "score": 0}
{"id": "eqasc_validation_58", "prediction": "all x.(Cnidarian(x) -> exists y.(Water(y) & LivesIn(x,y))))", "score": -1}
{"id": "eqasc_validation_58", "prediction": "all x y z.((Cnidarian(x) & Water(y) & Water(z) & LivesIn(x,y,z)) -> Cnidarian(x))", "score": 0}
{"id": "eqasc_validation_58", "prediction": "all x y z.((Cnidarian(x) & Water(y) & Water(z)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_58", "prediction": "all x y.((Cnidarian(x) & Water(y) & LivesIn(x,y)) -> Cnidarian(x))", "score": 0}
{"id": "eqasc_validation_58", "prediction": "all x.(Cnidarian(x) -> LiveInWater(x))", "score": 0}
{"id": "eqasc_validation_58", "prediction": "all x.((Cnidarian(x) & LivesInWater(x)) -> Cnidarian(x))", "score": 0}
{"id": "eqasc_validation_58", "prediction": "all x y z.((Cnidarian(x) & Water(y) & Water(z) & LivesIn(x,y)) -> Cnidarian(x))", "score": 0}
{"id": "eqasc_validation_58", "prediction": "all x.(Cnidarian(x) -> exists y.(Water(y) & LivesIn(x,y)))", "score": 0}
{"id": "eqasc_validation_58", "prediction": "all x.(Cnidarian(x) -> (LivesInWater(x) & LivesInWater(x)))", "score": 0}
{"id": "eqasc_validation_58", "prediction": "all x.((Cnidarian(x) & LivesInWater(x)) -> CnidarianLivesInWater(x))", "score": 0}
{"id": "eqasc_validation_58", "prediction": "all x y z.((Cnidarian(x) & Water(y) & Water(z)) -> LiveIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_59", "prediction": "all x.(CnidarianTentacle(x) -> CapturesPrey(x))", "score": 0}
{"id": "eqasc_validation_59", "prediction": "all x y.((CnidarianTentacle(x) & Prey(y)) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_59", "prediction": "all x.(CnidarianTentacle(x) -> ServesToCapturePrey(x))", "score": 0}
{"id": "eqasc_validation_59", "prediction": "all x y z.((CnidarianTentacle(x) & Prey(y) & Prey(z)) -> Captures(x,y,z))", "score": 0}
{"id": "eqasc_validation_59", "prediction": "all x y.((CnidarianTentacle(x) & Prey(y)) -> ServesToCapture(x,y))", "score": 0}
{"id": "eqasc_validation_59", "prediction": "all x.((CnidarianTentacle(x) & Prey(y)) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_59", "prediction": "all x y z.((CnidarianTentacle(x) & Prey(y) & Prey(z)) -> ServesToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_59", "prediction": "all x y.((Cnidarian(x) & Tentacle(y)) -> CapturesPrey(x,y))", "score": 0}
{"id": "eqasc_validation_59", "prediction": "all x y z.((CnidarianTentacle(x) & Prey(y) & Prey(z)) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_59", "prediction": "all x.(CnidarianTentacle(x) -> (CapturesPrey(x) | CapturesPrey(x)))", "score": 0}
{"id": "eqasc_validation_59", "prediction": "all x y.((CnidarianTentacle(x) & Prey(y)) -> CanCapture(x,y))", "score": 0}
{"id": "eqasc_validation_59", "prediction": "all x.(CnidarianTentacle(x) -> (CapturesPrey(x) & ServesToCapturePrey(x)))", "score": 0}
{"id": "eqasc_validation_59", "prediction": "all x.(CnidarianTentacle(x) -> CapturesPoison(x))", "score": 0}
{"id": "eqasc_validation_59", "prediction": "all x.(CnidarianTentacle(x) -> Captures(x,prey))", "score": 0}
{"id": "eqasc_validation_59", "prediction": "all x.(CnidarianTentacle(x) -> CatchesPrey(x))", "score": 0}
{"id": "eqasc_validation_59", "prediction": "all x y z.((CnidarianTentacle(x) & Prey(y) & Prey(z)) -> CanCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_60", "prediction": "all x.(AquaticTentacle(x) -> CapturesPrey(x))", "score": 0}
{"id": "eqasc_validation_60", "prediction": "all x y.((AquaticTentacle(x) & Prey(y)) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_60", "prediction": "all x.(AquaticTentacle(x) -> ServesToCapturePrey(x))", "score": 0}
{"id": "eqasc_validation_60", "prediction": "all x y z.((AquaticTentacle(x) & Prey(y) & Prey(z)) -> Captures(x,y,z))", "score": 0}
{"id": "eqasc_validation_60", "prediction": "all x.(AquaticTenacle(x) -> CapturesPrey(x))", "score": 0}
{"id": "eqasc_validation_60", "prediction": "all x.(AquaticTentacle(x) -> (CapturesPrey(x) & ServesToCapturePrey(x)))", "score": 0}
{"id": "eqasc_validation_60", "prediction": "all x y.((AquaticTenacle(x) & Prey(y)) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_60", "prediction": "all x.((AquaticTentacle(x) & ServesToCapturePrey(x)) -> CapturesPrey(x))", "score": 0}
{"id": "eqasc_validation_60", "prediction": "all x y z.((AquaticTentacle(x) & Prey(y) & Prey(z) & ServesToCapture(x,y,z)) -> Captures(x,y,z))", "score": 0}
{"id": "eqasc_validation_60", "prediction": "all x y z.((AquaticTentacle(x) & Prey(y) & Prey(z)) -> ServesToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_60", "prediction": "all x y.((AquaticTentacle(x) & Prey(y)) -> ServesToCapture(x,y))", "score": 0}
{"id": "eqasc_validation_60", "prediction": "all x y z.((AquaticTentacle(x) & Prey(y) & Prey(z)) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_60", "prediction": "all x.(AquaticTentacle(x) -> (ServesToCapturePrey(x) & CapturesPrey(x)))", "score": 0}
{"id": "eqasc_validation_60", "prediction": "all x.(AquaticTentacle(x) -> (CapturesPrey(x) | CapturesPrey(x)))", "score": 0}
{"id": "eqasc_validation_60", "prediction": "all x.(AquaticTentacle(x) -> (CapturesPrey(x) & CapturesPrey(x)))", "score": 0}
{"id": "eqasc_validation_60", "prediction": "all x y z.((AquaticTentacle(x) & Prey(y) & Prey(z) & ServesToCapture(x,y,z)) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_61", "prediction": "all x.(Cnidarian(x) -> LivesInWater(x))", "score": 0}
{"id": "eqasc_validation_61", "prediction": "all x y.((Cnidarian(x) & Water(y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_61", "prediction": "all x y z.((Cnidarian(x) & Water(y) & Water(z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_61", "prediction": "all x y.((Cnidarian(x) & Cnidarian(y)) -> LivesInWater(x,y))", "score": 0}
{"id": "eqasc_validation_61", "prediction": "all x y z.((Cnidarian(x) & Water(y) & Water(z) & LivesIn(x,y,z)) -> Cnidarian(x))", "score": 0}
{"id": "eqasc_validation_61", "prediction": "all x.(Cnidarian(x) -> exists y.(Water(y) & LivesIn(x,y))))", "score": -1}
{"id": "eqasc_validation_61", "prediction": "all x y z.((Cnidarian(x) & Water(y) & Water(z)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_61", "prediction": "all x y.((Cnidarian(x) & Water(y) & LivesIn(x,y)) -> Cnidarian(x))", "score": 0}
{"id": "eqasc_validation_61", "prediction": "all x.(Cnidarian(x) -> LiveInWater(x))", "score": 0}
{"id": "eqasc_validation_61", "prediction": "all x y z.((Cnidarian(x) & Water(y) & Water(z) & LivesIn(x,y)) -> Cnidarian(x))", "score": 0}
{"id": "eqasc_validation_61", "prediction": "all x y z.((Cnidarian(x) & Water(y) & Cnidarian(z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_61", "prediction": "all x.((Cnidarian(x) & LivesInWater(x)) -> Cnidarian(x))", "score": 0}
{"id": "eqasc_validation_61", "prediction": "all x y z.((Cnidarian(x) & Water(y) & Water(z)) -> LiveIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_61", "prediction": "all x y.((Cnidarian(x) & Water(y)) -> LiveIn(x,y))", "score": 0}
{"id": "eqasc_validation_61", "prediction": "all x.((Cnidarian(x) & LivesInWater(x)) -> CnidarianLivesInWater(x))", "score": 0}
{"id": "eqasc_validation_62", "prediction": "all x.(Jellyfish(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_62", "prediction": "all x y.((Jellyfish(x) & Aquatic(y)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_62", "prediction": "all x y.((Jellyfish(x) & Aquatic(y)) -> Aquatic(x,y))", "score": 0}
{"id": "eqasc_validation_62", "prediction": "all x y z.((Jellyfish(x) & Aquatic(y) & Aquatic(z)) -> Aquatic(x,y,z))", "score": 0}
{"id": "eqasc_validation_62", "prediction": "all x y z.((Jellyfish(x) & Aquatic(y) & Aquatic(z)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_62", "prediction": "all x.((Jellyfish(x) & Aquatic(x)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_62", "prediction": "all x y.((Jellyfish(x) & Jellyfish(y)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_62", "prediction": "all x y z.((Jellyfish(x) & Aquatic(y) & Aquatic(z)) -> Aquatic(x,y))", "score": 0}
{"id": "eqasc_validation_62", "prediction": "all x.(Jellyfish(x) -> AquaticAquatic(x))", "score": 0}
{"id": "eqasc_validation_62", "prediction": "all x y z.((Jellyfish(x) & Aquatic(y) & Aquatic(z) & Aquatic(z)) -> Aquatic(x,y,z))", "score": 0}
{"id": "eqasc_validation_62", "prediction": "all x y z.((Jellyfish(x) & Aquatic(y) & Aquatic(z)) -> Aquatic(z))", "score": 0}
{"id": "eqasc_validation_62", "prediction": "all x.(Jerkyfish(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_62", "prediction": "all x y z.((Jellyfish(x) & Aquatic(y) & Aquatic(z) & Aquatic(z)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_62", "prediction": "all x y z.((Jellyfish(x) & Aquatic(y) & Aquatic(z)) -> Aquatic(x,z))", "score": 0}
{"id": "eqasc_validation_62", "prediction": "all x y.((Jellyfish(x) & Aquatic(y)) -> Aquatic(z))", "score": 0}
{"id": "eqasc_validation_62", "prediction": "all x y.((Jellyfish(x) & Aquatic(x)) -> Aquatic(y))", "score": 0}
{"id": "eqasc_validation_63", "prediction": "all x.(Jellyfish(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_63", "prediction": "all x y.((Jellyfish(x) & Aquatic(y)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_63", "prediction": "all x.(Jellyfish(x) -> AquaticAquatic(x))", "score": 0}
{"id": "eqasc_validation_63", "prediction": "all x y.((Jellyfish(x) & Aquatic(y)) -> Aquatic(x,y))", "score": 0}
{"id": "eqasc_validation_63", "prediction": "all x.(Jellyfish(x) -> (Aquatic(x) & Aquatic(x)))", "score": 0}
{"id": "eqasc_validation_63", "prediction": "all x.((Jellyfish(x) & Aquatic(x)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_63", "prediction": "all x y z.((Jellyfish(x) & Aquatic(y) & Aquatic(z)) -> Aquatic(x,y,z))", "score": 0}
{"id": "eqasc_validation_63", "prediction": "all x y z.((Jellyfish(x) & Aquatic(y) & Aquatic(z)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_63", "prediction": "all x.(Jellyfish(x) -> (Aquatic(x) & Aquatic(x) & Aquatic(x)))", "score": 0}
{"id": "eqasc_validation_63", "prediction": "all x y z.((Jellyfish(x) & Aquatic(y) & Aquatic(z)) -> Aquatic(x,y))", "score": 0}
{"id": "eqasc_validation_63", "prediction": "all x.(Jellyfish(x) -> (Aquatic(x) & Aquatic(x) & Aquatic(x) & Aquatic(x)))", "score": 0}
{"id": "eqasc_validation_63", "prediction": "all x y z.((Jellyfish(x) & Aquatic(y) & Aquatic(z)) -> Aquatic(z))", "score": 0}
{"id": "eqasc_validation_63", "prediction": "all x y z.((Jellyfish(x) & Aquatic(y) & Aquatic(z)) -> Aquatic(y))", "score": 0}
{"id": "eqasc_validation_63", "prediction": "all x y.((Jellyfish(x) & Aquatic(y)) -> Aquatic(z))", "score": 0}
{"id": "eqasc_validation_63", "prediction": "all x.(Jerkyfish(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_63", "prediction": "all x y z.((Jellyfish(x) & Aquatic(y) & Aquatic(z) & Aquatic(y)) -> Aquatic(z))", "score": 0}
{"id": "eqasc_validation_64", "prediction": "all x.(Anemone(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_64", "prediction": "all x.(Anemone(x) -> AquaticAquatic(x))", "score": 0}
{"id": "eqasc_validation_64", "prediction": "all x y.((Anemone(x) & Aquatic(y)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_64", "prediction": "all x.(Anemone(x) -> (Aquatic(x) & Aquatic(x)))", "score": 0}
{"id": "eqasc_validation_64", "prediction": "all x y.((Anemone(x) & Aquatic(y)) -> Aquatic(x,y))", "score": 0}
{"id": "eqasc_validation_64", "prediction": "all x y z.((Anemone(x) & Aquatic(y) & Aquatic(z)) -> Aquatic(x,y,z))", "score": 0}
{"id": "eqasc_validation_64", "prediction": "all x.(Anemone(x) -> (Aquatic(x) & Aquatic(x) & Aquatic(x)))", "score": 0}
{"id": "eqasc_validation_64", "prediction": "all x.(Anemone(x) -> (AquaticAquatic(x) & AquaticAquatic(x)))", "score": 0}
{"id": "eqasc_validation_64", "prediction": "all x y z.((Anemone(x) & Aquatic(y) & Aquatic(z)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_65", "prediction": "all x.(Jellyfish(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_65", "prediction": "all x.(Jerkyfish(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_65", "prediction": "all x.(Jerryfish(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_65", "prediction": "all x.(Jerkfish(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_65", "prediction": "all x y.((Jellyfish(x) & Aquatic(y)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_65", "prediction": "all x.(Jerky(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_65", "prediction": "all x.((Jellyfish(x) & Aquatic(x)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_65", "prediction": "all x.(Jéllyfish(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_65", "prediction": "all x.(Jame(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_65", "prediction": "all x.(Junglefish(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_65", "prediction": "all x.(Jerk(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_65", "prediction": "all x y.((Jellyfish(x) & Aquatic(y)) -> Aquatic(x,y))", "score": 0}
{"id": "eqasc_validation_65", "prediction": "all x.(J jellyfish(x) -> Aquatic(x))", "score": -1}
{"id": "eqasc_validation_65", "prediction": "all x.(Joyfish(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_65", "prediction": "(all x.(Jellyfish(x) -> Aquatic(x)))", "score": 0}
{"id": "eqasc_validation_66", "prediction": "all x.((Jellyfish(x) | Anemone(x)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_66", "prediction": "all x y.((Jellyfish(x) & Anemone(y)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_66", "prediction": "all x y.((Jellyfish(x) | Anemone(y)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_66", "prediction": "all x y z.((Jellyfish(x) & Anemone(y) & Anemone(z)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_66", "prediction": "all x.((Jellyfish(x) & Anemone(x)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_66", "prediction": "all x.(Jellyfish(x) | Anemone(x)) -> Aquatic(x))", "score": -1}
{"id": "eqasc_validation_66", "prediction": "all x y.((Jellyfish(x) & Anemone(y)) -> (Aquatic(x) & Aquatic(y)))", "score": 0}
{"id": "eqasc_validation_66", "prediction": "all x y z.((Jellyfish(x) & Anemone(y) & Anemone(z)) -> (Aquatic(x) & Aquatic(y)))", "score": 0}
{"id": "eqasc_validation_66", "prediction": "all x y z.((Jellyfish(x) & Anemone(y) & Anemone(z)) -> (Aquatic(x) | Aquatic(y)))", "score": 0}
{"id": "eqasc_validation_66", "prediction": "all x.((Jellowfish(x) | Anemone(x)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_66", "prediction": "all x y.((Jellyfish(x) & Anemone(y)) -> (Aquatic(x) | Aquatic(y)))", "score": 0}
{"id": "eqasc_validation_66", "prediction": "all x y.((Jellyfish(x) | Anemone(x)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_66", "prediction": "all x.((Jellyfish(x) | Anemones(x)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_66", "prediction": "all x y.((Jellow(x) & Anemone(y)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_66", "prediction": "all x.(Jellyfish(x) & Anemone(x)) -> Aquatic(x))", "score": -1}
{"id": "eqasc_validation_66", "prediction": "all x y.((Jellyfish(x) & Anemone(y)) -> Aquatic(x,y))", "score": 0}
{"id": "eqasc_validation_67", "prediction": "all x.(Cnidarian(x) -> Coelenterates(x))", "score": 0}
{"id": "eqasc_validation_67", "prediction": "all x.(Cnidarian(x) -> Coelenterate(x))", "score": 0}
{"id": "eqasc_validation_67", "prediction": "all x.(Cnidarian(x) -> (Coelenterate(x) | Coelenterate(x)))", "score": 0}
{"id": "eqasc_validation_67", "prediction": "all x.(Cnidarian(x) -> (Coelenterate(x) & Cnidarian(x)))", "score": 0}
{"id": "eqasc_validation_67", "prediction": "all x.(Cnidarian(x) -> (Coelenterate(x) | Cnidarian(x)))", "score": 0}
{"id": "eqasc_validation_67", "prediction": "all x.(Cnidarian(x) -> (Coelenterates(x) | Coelenterates(x)))", "score": 0}
{"id": "eqasc_validation_67", "prediction": "all x.(Cnidarian(x) -> (Coelenterates(x) & Cnidarian(x)))", "score": 0}
{"id": "eqasc_validation_67", "prediction": "all x.(Cnidarian(x) -> (Coelenterates(x) | Cnidarian(x)))", "score": 0}
{"id": "eqasc_validation_67", "prediction": "all x.(Cnidarian(x) -> (Coelenterates(x)))", "score": 0}
{"id": "eqasc_validation_67", "prediction": "all x.(Cnidarian(x) -> (Coelenterate(x)))", "score": 0}
{"id": "eqasc_validation_67", "prediction": "all x y.((Cnidarian(x) & Cnidarian(y)) -> Coelenterate(x))", "score": 0}
{"id": "eqasc_validation_67", "prediction": "all x y.((Cnidarian(x) & Cnidarian(y)) -> Coelenterates(x))", "score": 0}
{"id": "eqasc_validation_67", "prediction": "all x.((Cnidarian(x) & Coelenterate(x)) -> Cnidarian(x))", "score": 0}
{"id": "eqasc_validation_67", "prediction": "all x.(Cnidarian(x) -> (Coelenterate(x) | -Coelenterate(x)))", "score": 0}
{"id": "eqasc_validation_68", "prediction": "all x.(Coelenterate(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_68", "prediction": "all x.(Coelenterate(x) -> AquaticAquatic(x))", "score": 0}
{"id": "eqasc_validation_68", "prediction": "all x.(Coelenterates(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_68", "prediction": "all x.(Coelenterates(x) -> AquaticAquatic(x))", "score": 0}
{"id": "eqasc_validation_68", "prediction": "all x y.((Coelenterate(x) & Aquatic(y)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_68", "prediction": "all x.((Coelenterate(x) & Aquatic(x)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_68", "prediction": "all x y z.((Coelenterate(x) & Aquatic(y) & Aquatic(z)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_68", "prediction": "all x y.((Coelenterate(x) & Aquatic(y)) -> Aquatic(x,y))", "score": 0}
{"id": "eqasc_validation_68", "prediction": "all x y z.((Coelenterate(x) & Aquatic(y) & Aquatic(z)) -> Aquatic(x,y,z))", "score": 0}
{"id": "eqasc_validation_68", "prediction": "all x.(Coelenterate(x) -> (Aquatic(x) & Aquatic(x)))", "score": 0}
{"id": "eqasc_validation_68", "prediction": "all x.((Coelenterates(x) & Aquatic(x)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_68", "prediction": "all x y.((Coelenterate(x) & Aquatic(y)) -> AquaticAquatic(x))", "score": 0}
{"id": "eqasc_validation_68", "prediction": "all x y z.((Coelenterate(x) & Aquatic(y) & Aquatic(z)) -> Aquatic(y))", "score": 0}
{"id": "eqasc_validation_68", "prediction": "all x.(Coelenterate(x) -> (Aquatic(x) & Aquatic(x) & Aquatic(x)))", "score": 0}
{"id": "eqasc_validation_68", "prediction": "all x y z.((Coelenterate(x) & Aquatic(y) & Aquatic(z)) -> Aquatic(x,y))", "score": 0}
{"id": "eqasc_validation_68", "prediction": "all x y z.((Coelenterate(x) & Aquatic(y) & Aquatic(z)) -> AquaticAquatic(x))", "score": 0}
{"id": "eqasc_validation_69", "prediction": "all x.(Coelenterate(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_69", "prediction": "all x.(Colelenterate(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_69", "prediction": "all x.(Coelenterates(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_69", "prediction": "all x.((Coelenterate(x) & Aquatic(x)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_69", "prediction": "all x y.((Coelenterate(x) & Aquatic(y)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_69", "prediction": "all x.((Coelenterate(x) & Aquatic(x)) -> Coelenterate(x))", "score": 0}
{"id": "eqasc_validation_69", "prediction": "all x.(Celenterate(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_69", "prediction": "all x.(Coelenterat(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_69", "prediction": "all x.((Coelenterate(x) & Aquatic(x)) -> Waterproof(x))", "score": 0}
{"id": "eqasc_validation_69", "prediction": "all x.(Corelenterate(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_69", "prediction": "all x.((Coelenterate(x) & Aquatic(x)) -> -Aquatic(x))", "score": 0}
{"id": "eqasc_validation_69", "prediction": "all x y.((Coelenterate(x) & Aquatic(y)) -> Aquatic(x,y))", "score": 0}
{"id": "eqasc_validation_69", "prediction": "all x y.((Coelenterate(x) & Aquatic(y)) -> Waterproof(x))", "score": 0}
{"id": "eqasc_validation_69", "prediction": "all x.((Coelenterate(x) & Aquatic(x)) -> Coexists(x))", "score": 0}
{"id": "eqasc_validation_69", "prediction": "all x y.((Coelenterate(x) & Aquatic(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_70", "prediction": "all x.((AquaticAnimal(x) & MovingThroughWater(x)) -> AerodynamicPrinciples(x))", "score": 0}
{"id": "eqasc_validation_70", "prediction": "all x.((AquaticAnimal(x) & MovingThroughWater(x)) -> AerodynamicsPrinciples(x))", "score": 0}
{"id": "eqasc_validation_70", "prediction": "all x.((AquaticAnimal(x) & MovesThroughWater(x)) -> AerodynamicsPrinciples(x))", "score": 0}
{"id": "eqasc_validation_70", "prediction": "all x.((AquaticAnimal(x) & MovesThroughWater(x)) -> AerodynamicPrinciples(x))", "score": 0}
{"id": "eqasc_validation_70", "prediction": "all x.((AquaticAnimal(x) & MovingThroughWater(x)) -> Aerodynamics(x))", "score": 0}
{"id": "eqasc_validation_70", "prediction": "all x.((AquaticAnimal(x) & MovesThroughWater(x)) -> Aerodynamics(x))", "score": 0}
{"id": "eqasc_validation_70", "prediction": "all x.(AquaticAnimal(x) -> (MovingThroughWater(x) & Aerodynamics(x)))", "score": 0}
{"id": "eqasc_validation_70", "prediction": "all x.(AquaticAnimal(x) -> (MovingThroughWater(x) & SubjectToAerodynamics(x)))", "score": 0}
{"id": "eqasc_validation_70", "prediction": "all x y.((AquaticAnimal(x) & Water(y) & MovesThrough(x,y)) -> AerodynamicPrinciples(x))", "score": 0}
{"id": "eqasc_validation_70", "prediction": "all x y.((AquaticAnimal(x) & Water(y) & MovesThrough(x,y)) -> Aerodynamics(x))", "score": 0}
{"id": "eqasc_validation_70", "prediction": "all x y.((AquaticAnimal(x) & Water(y) & MovesThrough(x,y)) -> AerodynamicsPrinciples(x))", "score": 0}
{"id": "eqasc_validation_70", "prediction": "all x.(AquaticAnimal(x) -> MovesThroughWater(x))", "score": 0}
{"id": "eqasc_validation_70", "prediction": "all x y.((AquaticAnimal(x) & Water(y) & MovesThrough(x,y)) -> Aerodynamic(x))", "score": 0}
{"id": "eqasc_validation_70", "prediction": "all x.((AquaticAnimal(x) & MovingThroughWater(x)) -> Aerodynamic(x))", "score": 0}
{"id": "eqasc_validation_70", "prediction": "all x y.((AquaticAnimal(x) & Water(y)) -> MovesThrough(x,y))", "score": 0}
{"id": "eqasc_validation_71", "prediction": "all x.(Cnidarian(x) -> MovesThroughWater(x))", "score": 0}
{"id": "eqasc_validation_71", "prediction": "all x y.((Cnidarian(x) & Water(y)) -> MovesThrough(x,y))", "score": 0}
{"id": "eqasc_validation_71", "prediction": "all x.(Cnidarian(x) -> MoveThroughWater(x))", "score": 0}
{"id": "eqasc_validation_71", "prediction": "all x.(Cnidarian(x) -> MovesInWater(x))", "score": 0}
{"id": "eqasc_validation_71", "prediction": "all x y.((Cnidarian(x) & Water(y)) -> Moves(x,y))", "score": 0}
{"id": "eqasc_validation_71", "prediction": "all x.(Cnidarian(x) -> MovesByWater(x))", "score": 0}
{"id": "eqasc_validation_71", "prediction": "all x.(Cnidarian(x) -> MovesThroughwater(x))", "score": 0}
{"id": "eqasc_validation_71", "prediction": "all x.(Cnidarian(x) -> (MovesThroughWater(x) | MovesThroughWater(x)))", "score": 0}
{"id": "eqasc_validation_71", "prediction": "all x.(Cnidarian(x) -> Moves(x))", "score": 0}
{"id": "eqasc_validation_71", "prediction": "all x.(Cnidarian(x) -> (MovesThroughWater(x) & MovesThroughWater(x)))", "score": 0}
{"id": "eqasc_validation_71", "prediction": "all x y.((Cnidarian(x) & Water(y)) -> Move(x,y))", "score": 0}
{"id": "eqasc_validation_71", "prediction": "all x.(Cnidarian(x) -> MigratesThroughWater(x))", "score": 0}
{"id": "eqasc_validation_71", "prediction": "(all x.(Cnidarian(x) -> MovesThroughWater(x)))", "score": 0}
{"id": "eqasc_validation_72", "prediction": "all x.(Scyphozoan(x) -> (Cnidarian(x) & Jellyfish(x)))", "score": 0}
{"id": "eqasc_validation_72", "prediction": "all x.(Scyphozoan(x) -> (NextGroupOfCnidarians(x) & Jellyfish(x)))", "score": 0}
{"id": "eqasc_validation_72", "prediction": "all x.(Scyphozoan(x) -> (NextCnidarian(x) & Jellyfish(x)))", "score": 0}
{"id": "eqasc_validation_72", "prediction": "all x.(Cnidarian(x) -> (Scyphozoan(x) & Jellyfish(x)))", "score": 0}
{"id": "eqasc_validation_72", "prediction": "all x.(Scyphozoan(x) -> (NextGenreOfCnidarians(x) & Jellyfish(x)))", "score": 0}
{"id": "eqasc_validation_72", "prediction": "all x.(Scyphozoan(x) -> (Cnidarian(x) & Cnidarian(x) & Jellyfish(x)))", "score": 0}
{"id": "eqasc_validation_72", "prediction": "all x.((Scyphozoan(x) & Cnidarian(x)) -> (FamiliarJellyfish(x) & NextGroup(x)))", "score": 0}
{"id": "eqasc_validation_72", "prediction": "all x y.((Scyphozoan(x) & Cnidarian(y)) -> (NextGroup(x,y) & Jellyfish(x)))", "score": 0}
{"id": "eqasc_validation_72", "prediction": "all x.(Scyphozoan(x) -> (NextGroupOfCnidarians(x) & FamiliarJellyfish(x)))", "score": 0}
{"id": "eqasc_validation_72", "prediction": "all x.(Scyphozoan(x) -> (NextCnidarianGroup(x) & Jellyfish(x)))", "score": 0}
{"id": "eqasc_validation_72", "prediction": "all x.(Cnidarian(x) -> (Scyphozoans(x) & Jellyfish(x)))", "score": 0}
{"id": "eqasc_validation_72", "prediction": "all x.((Scyphozoan(x) & Cnidarian(x)) -> (FamiliarJellyfish(x) & NextGenre(x)))", "score": 0}
{"id": "eqasc_validation_72", "prediction": "all x y.((Scyphozoan(x) & Cnidarian(y)) -> (NextGroup(x,y) & Jellyfish(y)))", "score": 0}
{"id": "eqasc_validation_73", "prediction": "all x.(Scyphozoan(x) -> AquaticOrganism(x))", "score": 0}
{"id": "eqasc_validation_73", "prediction": "all x y.((Scyphozoan(x) & AquaticOrganism(y)) -> AquaticOrganism(x))", "score": 0}
{"id": "eqasc_validation_73", "prediction": "all x y.((Scyphozoan(x) & AquaticOrganism(y)) -> AquaticOrganism(x,y))", "score": 0}
{"id": "eqasc_validation_73", "prediction": "all x y.((Scyphozoan(x) & AquaticOrganism(y)) -> (AquaticOrganism(x) & AquaticOrganism(y)))", "score": 0}
{"id": "eqasc_validation_73", "prediction": "all x y z.((Scyphozoan(x) & AquaticOrganism(y) & AquaticOrganism(z)) -> (AquaticOrganism(x) & AquaticOrganism(y) & AquaticOrganism(z)))", "score": 0}
{"id": "eqasc_validation_73", "prediction": "all x.(Scyphozoa(x) -> AquaticOrganism(x))", "score": 0}
{"id": "eqasc_validation_73", "prediction": "all x y.((Scyphozoan(x) & AquaticOrganism(y)) -> (AquaticOrganism(x) & AquaticOrganism(x)))", "score": 0}
{"id": "eqasc_validation_73", "prediction": "all x.(Scyphozoan(x) -> (AquaticOrganism(x) & AquaticOrganism(x)))", "score": 0}
{"id": "eqasc_validation_73", "prediction": "all x y z.((Scyphozoan(x) & AquaticOrganism(y) & AquaticOrganism(z)) -> AquaticOrganism(x,y,z))", "score": 0}
{"id": "eqasc_validation_73", "prediction": "all x y z.((Scyphozoan(x) & AquaticOrganism(y) & AquaticOrganism(z)) -> (AquaticOrganism(y) & AquaticOrganism(z)))", "score": 0}
{"id": "eqasc_validation_73", "prediction": "all x y.((Scyphozoan(x) & AquaticOrganism(y)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_73", "prediction": "all x y z.((Scyphozoan(x) & AquaticOrganism(y) & AquaticOrganism(z)) -> (Scyphozoan(x) & AquaticOrganism(y) & AquaticOrganism(z)))", "score": 0}
{"id": "eqasc_validation_73", "prediction": "all x y z.((Scyphozoan(x) & AquaticOrganism(y) & AquaticOrganism(z)) -> (AquaticOrganism(x) & AquaticOrganism(y)))", "score": 0}
{"id": "eqasc_validation_73", "prediction": "all x y.((Scyphozoan(x) & AquaticOrganism(y)) -> (AquaticOrganism(x,y) | AquaticOrganism(x,y)))", "score": 0}
{"id": "eqasc_validation_73", "prediction": "all x y z.((Scyphozoan(x) & AquaticOrganism(y) & AquaticOrganism(z)) -> (AquaticOrganism(x,y) | AquaticOrganism(x,z)))", "score": 0}
{"id": "eqasc_validation_74", "prediction": "all x.(Cnidarian(x) -> HydrostaticSkeleton(x))", "score": 0}
{"id": "eqasc_validation_74", "prediction": "all x.(Cnidarian(x) -> HasHydrostaticSkeleton(x))", "score": 0}
{"id": "eqasc_validation_74", "prediction": "all x.(Cnidarian(x) -> (HasHydrostaticSkeleton(x) & HasHydrostaticSkeleton(x)))", "score": 0}
{"id": "eqasc_validation_74", "prediction": "all x y.((Cnidarian(x) & HydrostaticSkeleton(y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_74", "prediction": "all x.(Cnidarian(x) -> (HasHydrostaticSkeleton(x) | HasHydrostaticSkeleton(x)))", "score": 0}
{"id": "eqasc_validation_74", "prediction": "all x y.((Cnidarian(x) & Cnidarian(y)) -> HydrostaticSkeleton(x,y))", "score": 0}
{"id": "eqasc_validation_74", "prediction": "all x y.((Cnidarian(x) & Cnidarian(y)) -> HasHydrostaticSkeleton(x,y))", "score": 0}
{"id": "eqasc_validation_74", "prediction": "all x y.((Cnidarian(x) & Cnidarian(y)) -> HydrostaticSkeleton(x))", "score": 0}
{"id": "eqasc_validation_74", "prediction": "all x.(Cnidarian(x) -> exists y.(HydrostaticSkeleton(y) & Has(x,y))))", "score": -1}
{"id": "eqasc_validation_74", "prediction": "all x.(Cnidarian(x) -> exists y.(HydrostaticSkeleton(y) & Has(x,y)))", "score": 0}
{"id": "eqasc_validation_74", "prediction": "all x y.((Cnidarian(x) & Cnidarian(y)) -> HasHydrostaticSkeleton(x))", "score": 0}
{"id": "eqasc_validation_74", "prediction": "all x.(Cnidarian(x) -> (HasHydrostaticSkeleton(x)))", "score": 0}
{"id": "eqasc_validation_74", "prediction": "all x y.((Cnidarian(x) & HydrostaticSkeleton(y)) -> Cnidarian(x))", "score": 0}
{"id": "eqasc_validation_74", "prediction": "all x.(Cnidarian(x) -> HydrastaticSkeleton(x))", "score": 0}
{"id": "eqasc_validation_75", "prediction": "exists x.(AquaticAnimal(x) & HydrostaticSkeleton(x))", "score": 0}
{"id": "eqasc_validation_75", "prediction": "exists x.(AquaticAnimal(x) & HasHydrostaticSkeleton(x))", "score": 0}
{"id": "eqasc_validation_75", "prediction": "exists x.(AquaticAnimal(x) & HasHydrogeneticSkeleton(x))", "score": 0}
{"id": "eqasc_validation_75", "prediction": "exists x.(AquaticAnimal(x) & HasHydrostaticSkeletons(x))", "score": 0}
{"id": "eqasc_validation_75", "prediction": "exists x.(AquaticAnimal(x) & HasHydrogastaticSkeleton(x))", "score": 0}
{"id": "eqasc_validation_75", "prediction": "exists x.(AquaticAnimal(x) & Has(x,hydrostaticSkeleton))", "score": 0}
{"id": "eqasc_validation_75", "prediction": "exists x.(Animal(x) & Aquatic(x) & HydrostaticSkeleton(x))", "score": 0}
{"id": "eqasc_validation_75", "prediction": "exists x y.(AquaticAnimal(x) & HydrostaticSkeleton(y) & Has(x,y))", "score": 0}
{"id": "eqasc_validation_75", "prediction": "exists x.(AquaticAnimal(x) & Has(x,HydrostaticSkeleton))", "score": 0}
{"id": "eqasc_validation_75", "prediction": "exists x.(AquaticAnimal(x) & HasHydroticSkeleton(x))", "score": 0}
{"id": "eqasc_validation_75", "prediction": "exists x.(AquaticAnimal(x) & HydrastaticSkeleton(x))", "score": 0}
{"id": "eqasc_validation_75", "prediction": "exists x y.(AquaticAnimal(x) & HydrostaticSkeleton(y))", "score": 0}
{"id": "eqasc_validation_75", "prediction": "exists x.(AquaticAnimal(x) & HasHidrostaticSkeleton(x))", "score": 0}
{"id": "eqasc_validation_75", "prediction": "exists x.(AquaticAnimal(x) & HasHiberstaticSkeleton(x))", "score": 0}
{"id": "eqasc_validation_76", "prediction": "all x.(PredictingWeather(x) -> RequiresStudyingWeater(x))", "score": 0}
{"id": "eqasc_validation_76", "prediction": "all x y.((Weather(x) & Weater(y)) -> Predicts(x,y))", "score": 0}
{"id": "eqasc_validation_76", "prediction": "all x y z.((Weather(x) & Weater(y) & Weather(z)) -> PredictsRequiresStudying(x,y,z))", "score": 0}
{"id": "eqasc_validation_76", "prediction": "all x y.((WeatherPrediction(x) & Weater(y)) -> RequiresStudying(x,y))", "score": 0}
{"id": "eqasc_validation_76", "prediction": "all x y.((Weather(x) & Weater(y)) -> PredictsRequiresStudying(x,y))", "score": 0}
{"id": "eqasc_validation_76", "prediction": "all x y.((PredictingWeather(x) & Weater(y)) -> RequiresStudying(x,y))", "score": 0}
{"id": "eqasc_validation_76", "prediction": "all x y.((Weather(x) & Weater(y) & Predicts(x,y)) -> RequiresStudying(x,y))", "score": 0}
{"id": "eqasc_validation_76", "prediction": "all x y z.((Weather(x) & Weather(y) & Weater(z)) -> PredictsRequiresStudying(x,y,z))", "score": 0}
{"id": "eqasc_validation_76", "prediction": "all x y.((Weather(x) & Weater(y)) -> PredictionRequiresStudying(x,y))", "score": 0}
{"id": "eqasc_validation_76", "prediction": "all x y.((Weather(x) & Weater(y)) -> RequiresStudying(x,y))", "score": 0}
{"id": "eqasc_validation_76", "prediction": "all x y z.((Weather(x) & Weater(y) & Weather(z)) -> PredictsRequiresStudy(x,y,z))", "score": 0}
{"id": "eqasc_validation_76", "prediction": "all x.(PredictsWeather(x) -> RequiresStudyingWeater(x))", "score": 0}
{"id": "eqasc_validation_76", "prediction": "all x y.((Weather(x) & Weater(y)) -> PredictsWeather(x,y))", "score": 0}
{"id": "eqasc_validation_76", "prediction": "all x y z.((Weather(x) & Weater(y) & Weather(z)) -> Predicts(x,y,z))", "score": 0}
{"id": "eqasc_validation_76", "prediction": "all x y z.((Weather(x) & Weater(y) & Weather(z) & Predicts(x,y,z)) -> RequiresStudying(y,z))", "score": 0}
{"id": "eqasc_validation_76", "prediction": "all x y z.((Weather(x) & Weater(y) & Weather(z) & Predicts(x,y,z)) -> RequiresStudying(x,y,z))", "score": 0}
{"id": "eqasc_validation_77", "prediction": "all x y.((Meteorologist(x) & Weather(y)) -> Predicts(x,y))", "score": 0}
{"id": "eqasc_validation_77", "prediction": "all x.(Meteorologist(x) -> PredictsWeather(x))", "score": 0}
{"id": "eqasc_validation_77", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> Predicts(x,y,z))", "score": 0}
{"id": "eqasc_validation_77", "prediction": "all x y.((Meteorologist(x) & Weather(y)) -> TrysToPredict(x,y))", "score": 0}
{"id": "eqasc_validation_77", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> TrysToPredict(x,y,z))", "score": 0}
{"id": "eqasc_validation_77", "prediction": "all x y.((Meteorologist(x) & Weather(y)) -> AttemptsToPredict(x,y))", "score": 0}
{"id": "eqasc_validation_77", "prediction": "all x y.((Meteorologist(x) & Weather(y)) -> (Predicts(x,y) | Predicts(x,y)))", "score": 0}
{"id": "eqasc_validation_77", "prediction": "all x y.((Meteorologist(x) & Weather(y)) -> TriesToPredict(x,y))", "score": 0}
{"id": "eqasc_validation_77", "prediction": "all x.(Meteorologist(x) -> TrysToPredictWeather(x))", "score": 0}
{"id": "eqasc_validation_77", "prediction": "all x y.((Meteorologist(x) & Weather(y)) -> TrysPredicts(x,y))", "score": 0}
{"id": "eqasc_validation_77", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> Predicts(x,y))", "score": 0}
{"id": "eqasc_validation_77", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> (Predicts(x,y) | Predicts(x,z)))", "score": 0}
{"id": "eqasc_validation_77", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> AttemptsToPredict(x,y,z))", "score": 0}
{"id": "eqasc_validation_77", "prediction": "all x.(Meteorologist(x) -> (PredictsWeather(x) | PredictsWeather(x)))", "score": 0}
{"id": "eqasc_validation_77", "prediction": "all x.(Meteorologist(x) -> PredictWeather(x))", "score": 0}
{"id": "eqasc_validation_77", "prediction": "all x.(Meteorologist(x) -> (TryToPredictWeather(x) | PredictWeather(x)))", "score": 0}
{"id": "eqasc_validation_78", "prediction": "all x.(Meteorologist(x) -> RequiresStudyingWeather(x))", "score": 0}
{"id": "eqasc_validation_78", "prediction": "all x.(Meteorologist(x) -> StudiesWeather(x))", "score": 0}
{"id": "eqasc_validation_78", "prediction": "all x.(Meteorologist(x) -> RequiresStudyWeather(x))", "score": 0}
{"id": "eqasc_validation_78", "prediction": "all x y.((Meteorologist(x) & Weather(y)) -> RequiresStudying(x,y))", "score": 0}
{"id": "eqasc_validation_78", "prediction": "all x.(Meteorologist(x) -> (StudiesWeather(x) & StudiesWeather(x)))", "score": 0}
{"id": "eqasc_validation_78", "prediction": "all x.(Meteorolist(x) -> RequiresStudyingWeather(x))", "score": 0}
{"id": "eqasc_validation_78", "prediction": "all x.(Meteorologist(x) -> RecognizesWeather(x))", "score": 0}
{"id": "eqasc_validation_78", "prediction": "all x.(Meteorologue(x) -> RequiresStudyingWeather(x))", "score": 0}
{"id": "eqasc_validation_78", "prediction": "all x.(Meteorologist(x) -> RequiresStudiesWeather(x))", "score": 0}
{"id": "eqasc_validation_78", "prediction": "all x y.((Meteorologist(x) & Weather(y)) -> RequiresStudy(x,y))", "score": 0}
{"id": "eqasc_validation_78", "prediction": "all x.(Meteorologist(x) -> ReviewsWeather(x))", "score": 0}
{"id": "eqasc_validation_78", "prediction": "all x.(Meteorologist(x) -> ExaminesWeather(x))", "score": 0}
{"id": "eqasc_validation_78", "prediction": "all x.(Meteorologist(x) -> (StudiesWeather(x) & StudyesWeather(x)))", "score": 0}
{"id": "eqasc_validation_79", "prediction": "all x.(Meteorologist(x) -> StudiesWeather(x))", "score": 0}
{"id": "eqasc_validation_79", "prediction": "all x y.((Meteorologist(x) & Weather(y)) -> Studies(x,y))", "score": 0}
{"id": "eqasc_validation_79", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> Studies(x,y,z))", "score": 0}
{"id": "eqasc_validation_79", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> Studies(x,y))", "score": 0}
{"id": "eqasc_validation_79", "prediction": "all x y.((Meteorologist(x) & Weather(y)) -> Study(x,y))", "score": 0}
{"id": "eqasc_validation_79", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z) & Studies(x,y)) -> Studies(x,z))", "score": 0}
{"id": "eqasc_validation_79", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> Study(x,y,z))", "score": 0}
{"id": "eqasc_validation_79", "prediction": "all x y.((Meteorologist(x) & Weather(y)) -> StudyWeather(x,y))", "score": 0}
{"id": "eqasc_validation_79", "prediction": "all x.(Meteorologist(x) -> (StudiesWeather(x) & StudiesWeather(x)))", "score": 0}
{"id": "eqasc_validation_79", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z) & Studies(x,y,z)) -> Studies(x,y))", "score": 0}
{"id": "eqasc_validation_79", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z) & Studies(x,y,z)) -> Studies(x,y,z))", "score": 0}
{"id": "eqasc_validation_79", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> StudyWeather(x,y,z))", "score": 0}
{"id": "eqasc_validation_79", "prediction": "all x y.((Meteorologist(x) & Weather(y) & Studies(x,y)) -> Studies(x,y))", "score": 0}
{"id": "eqasc_validation_79", "prediction": "all x y z w.((Meteorologist(x) & Weather(y) & Weather(z)) -> Studies(x,y,z))", "score": 0}
{"id": "eqasc_validation_79", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z) & Studies(x,y)) -> Study(x,z))", "score": 0}
{"id": "eqasc_validation_80", "prediction": "all x y.((Meteorologist(x) & Weather(y)) -> Studies(x,y))", "score": 0}
{"id": "eqasc_validation_80", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> Studies(x,y,z))", "score": 0}
{"id": "eqasc_validation_80", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> Studies(x,y))", "score": 0}
{"id": "eqasc_validation_80", "prediction": "all x.(Meteorologist(x) -> StudiesWeather(x))", "score": 0}
{"id": "eqasc_validation_80", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> StudiesWeather(x,y,z))", "score": 0}
{"id": "eqasc_validation_80", "prediction": "all x y.((Meteorologist(x) & Weather(y)) -> StudiesWeather(x,y))", "score": 0}
{"id": "eqasc_validation_80", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z) & Studies(x,y)) -> Studies(x,z))", "score": 0}
{"id": "eqasc_validation_80", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> StudyWeather(x,y,z))", "score": 0}
{"id": "eqasc_validation_80", "prediction": "all x y z w.((Meteorologist(x) & Weather(y) & Weather(z) & Weather(w)) -> Studies(x,y,z))", "score": 0}
{"id": "eqasc_validation_80", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> (Studies(x,y) & Studies(x,z)))", "score": 0}
{"id": "eqasc_validation_80", "prediction": "all x y z w.((Meteorologist(x) & Weather(y) & Weather(z) & Weather(w)) -> Studies(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_80", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z) & Studies(x,y,z)) -> Studies(x,y,z))", "score": 0}
{"id": "eqasc_validation_80", "prediction": "all x.(Meteorologist(x) -> (StudiesWeather(x) & StudiesWeather(x)))", "score": 0}
{"id": "eqasc_validation_80", "prediction": "all x y z w.((Meteorologist(x) & Weather(y) & Weather(z)) -> Studies(x,y,z))", "score": 0}
{"id": "eqasc_validation_80", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z) & Studies(x,y,z)) -> Studies(x,y))", "score": 0}
{"id": "eqasc_validation_80", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> Studies(x,z))", "score": 0}
{"id": "eqasc_validation_81", "prediction": "all x.(Meteorologist(x) -> (StudiesWeather(x) | PredictsWeather(x)))", "score": 0}
{"id": "eqasc_validation_81", "prediction": "all x y.((Meteorologist(x) & Person(y)) -> (StudiesWeather(y) | PredictsWeather(y)))", "score": 0}
{"id": "eqasc_validation_81", "prediction": "all x.(Meteorologist(x) -> (StudiesWeatherOrPredictsWeather(x)))", "score": 0}
{"id": "eqasc_validation_81", "prediction": "all x.(Meteorologist(x) -> (StudiesOrPredictsWeather(x)))", "score": 0}
{"id": "eqasc_validation_81", "prediction": "all x y.((Meteorologist(x) & Meteorologist(y)) -> (StudiesWeather(x) | PredictsWeather(y)))", "score": 0}
{"id": "eqasc_validation_81", "prediction": "all x y.((Meteorologist(x) & Meteorologist(y)) -> (StudiesWeather(x,y) | PredictsWeather(x,y)))", "score": 0}
{"id": "eqasc_validation_81", "prediction": "all x y.((Meteorologist(x) & Meteorologist(y)) -> (StudiesWeather(x) | PredictsWeather(x)))", "score": 0}
{"id": "eqasc_validation_81", "prediction": "all x y.((Meteorologist(x) & Person(y)) -> (StudiesWeather(x,y) | PredictsWeather(x,y)))", "score": 0}
{"id": "eqasc_validation_81", "prediction": "all x y z.((Meteorologist(x) & Meteorologist(y) & Weather(z)) -> (Studies(y,z) | Predicts(y,z)))", "score": 0}
{"id": "eqasc_validation_81", "prediction": "all x y.((Meteorologist(x) & Person(y)) -> (StudiesWeather(x) | PredictsWeather(x)))", "score": 0}
{"id": "eqasc_validation_81", "prediction": "all x y z.((Meteorologist(x) & Meteorologist(y) & Weather(z)) -> (Studies(x,z) | Predicts(y,z)))", "score": 0}
{"id": "eqasc_validation_81", "prediction": "all x y.((Meteorologist(x) & Meteorologist(y)) -> (StudiesWeather(x,y) | PredictsWeather(y)))", "score": 0}
{"id": "eqasc_validation_81", "prediction": "all x y.((Meteorologist(x) & Person(y) & StudiesOrPredictsWeather(y)) -> Meteorologist(x))", "score": 0}
{"id": "eqasc_validation_81", "prediction": "all x.(Meteorologist(x) -> StudiesOrPredictsWeather(x))", "score": 0}
{"id": "eqasc_validation_82", "prediction": "all x y.((Meteorology(x) & Weather(y)) -> RequiresStudying(x,y))", "score": 0}
{"id": "eqasc_validation_82", "prediction": "all x.(MeteorologyRequiresStudyingWeather(x) -> MeteorologyRequiresStudyingWeather(x))", "score": 0}
{"id": "eqasc_validation_82", "prediction": "all x.(Meteorology(x) -> RequiresStudyingWeather(x))", "score": 0}
{"id": "eqasc_validation_82", "prediction": "all x y z.((Meteorology(x) & Weather(y) & Weather(z)) -> RequiresStudying(x,y,z))", "score": 0}
{"id": "eqasc_validation_82", "prediction": "all x y z.((Meteorology(x) & Weather(y) & Weather(z)) -> RequiresStudying(x,z))", "score": 0}
{"id": "eqasc_validation_82", "prediction": "all x y.((Meteorology(x) & Weather(y)) -> RequiresStudy(x,y))", "score": 0}
{"id": "eqasc_validation_82", "prediction": "all x y.((Meteorology(x) & Weather(y) & RequiresStudying(x,y)) -> RequiresStudying(x,y))", "score": 0}
{"id": "eqasc_validation_82", "prediction": "all x y.((Meteodology(x) & Weather(y)) -> RequiresStudying(x,y))", "score": 0}
{"id": "eqasc_validation_82", "prediction": "all x.(MeteoorologyRequiresStudyingWeather(x) -> MeteorologyRequiresStudyingWeather(x))", "score": 0}
{"id": "eqasc_validation_82", "prediction": "all x y z.((Meteorology(x) & Weather(y) & Weather(z)) -> RequiresStudy(x,y,z))", "score": 0}
{"id": "eqasc_validation_82", "prediction": "all x.(MeteodologyRequiresStudyingWeather(x) -> MeteorologyRequiresStudyingWeather(x))", "score": 0}
{"id": "eqasc_validation_82", "prediction": "all x y z.((Meteodology(x) & Weather(y) & Weather(z)) -> RequiresStudying(x,y,z))", "score": 0}
{"id": "eqasc_validation_82", "prediction": "all x.(Meteorology(x) -> (RequiresStudyingWeather(x) & Weather(x)))", "score": 0}
{"id": "eqasc_validation_82", "prediction": "all x y.((Meteoorology(x) & Weather(y)) -> RequiresStudying(x,y))", "score": 0}
{"id": "eqasc_validation_82", "prediction": "all x y z.((Meteorology(x) & Weather(y) & Weather(z)) -> RequiresStudying(x,y))", "score": 0}
{"id": "eqasc_validation_82", "prediction": "all x y z.((Meteoorology(x) & Weather(y) & Weather(z)) -> RequiresStudying(x,y,z))", "score": 0}
{"id": "eqasc_validation_83", "prediction": "all x y.((Meteorologist(x) & Weather(y)) -> RequiresStudying(x,y))", "score": 0}
{"id": "eqasc_validation_83", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> RequiresStudying(x,y,z))", "score": 0}
{"id": "eqasc_validation_83", "prediction": "all x.(Meteorologist(x) -> RequiresStudyingWeather(x))", "score": 0}
{"id": "eqasc_validation_83", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> RequiresStudying(x,y))", "score": 0}
{"id": "eqasc_validation_83", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> (RequiresStudying(x,y) & RequiresStudying(x,z)))", "score": 0}
{"id": "eqasc_validation_83", "prediction": "all x y.((Meteorologist(x) & Weather(y) & RequiresStudying(x,y)) -> MeteorologistRequiresStudying(x,y))", "score": 0}
{"id": "eqasc_validation_83", "prediction": "all x y z w.((Meteorologist(x) & Weather(y) & Weather(z) & Weather(w)) -> RequiresStudying(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_83", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z) & RequiresStudying(x,y,z)) -> RequiresStudying(x,y,z))", "score": 0}
{"id": "eqasc_validation_83", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> RequiresStudying(x,z))", "score": 0}
{"id": "eqasc_validation_83", "prediction": "all x y z.((Meteorolist(x) & Weather(y) & Weather(z)) -> RequiresStudying(x,y,z))", "score": 0}
{"id": "eqasc_validation_83", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z) & RequiresStudying(x,y)) -> RequiresStudying(x,z))", "score": 0}
{"id": "eqasc_validation_83", "prediction": "all x y z w.((Meteorologist(x) & Weather(y) & Weather(z) & Weather(w)) -> RequiresStudying(x,y,z))", "score": 0}
{"id": "eqasc_validation_83", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> (RequiresStudying(x,y,z) & RequiresStudying(x,y)))", "score": 0}
{"id": "eqasc_validation_83", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> (RequiresStudying(x,y) | RequiresStudying(x,z)))", "score": 0}
{"id": "eqasc_validation_83", "prediction": "all x y.((Meteorologist(x) & Weather(y)) -> (RequiresStudying(x,y) | RequiresStudying(x,y)))", "score": 0}
{"id": "eqasc_validation_83", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z) & RequiresStudying(x,y,z)) -> RequiresStudying(x,y))", "score": 0}
{"id": "eqasc_validation_84", "prediction": "all x.(Meteorologist(x) -> (StudiesWeatherConditions(x) & PreparesWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_84", "prediction": "all x y.((Meteorologist(x) & WeatherCondition(y)) -> (Studies(x,y) & Prepares(x,y)))", "score": 0}
{"id": "eqasc_validation_84", "prediction": "all x.(Meteorologist(x) -> (StudiesWeatherConditions(x) & PreparesLongRangeWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_84", "prediction": "all x y z.((Meteorologist(x) & WeatherCondition(y) & WeatherPrediction(z)) -> (Studies(x,y) & Prepares(x,z)))", "score": 0}
{"id": "eqasc_validation_84", "prediction": "all x y z.((Meteorologist(x) & WeatherCondition(y) & Weather(z)) -> (Studies(x,y) & Prepares(x,z)))", "score": 0}
{"id": "eqasc_validation_84", "prediction": "all x y z.((Meteorologist(x) & WeatherCondition(y) & CurrentAndLongRange(z)) -> (Studies(x,y) & Prepares(x,z)))", "score": 0}
{"id": "eqasc_validation_84", "prediction": "all x y.((Meteorologist(x) & WeatherCondition(y)) -> (Studies(x,y) & PreparesWeatherPredictions(x,y)))", "score": 0}
{"id": "eqasc_validation_84", "prediction": "all x y.((Meteorologist(x) & WeatherCondition(y)) -> (Studies(x,y) & PreparesPredictions(x,y)))", "score": 0}
{"id": "eqasc_validation_84", "prediction": "all x y.((Meteorologist(x) & WeatherConditions(y)) -> (Studies(x,y) & Prepares(x,y)))", "score": 0}
{"id": "eqasc_validation_84", "prediction": "all x.(Meteorologist(x) -> (StudiesWeatherConditions(x) & PreparesWeatherPredictions(x) & CurrentAndLongRange(x)))", "score": 0}
{"id": "eqasc_validation_84", "prediction": "all x.(Meteorologist(x) -> (StudiesWeatherConditions(x) & PreparesCurrentAndLongRangeWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_84", "prediction": "all x y z.((Meteorologist(x) & WeatherCondition(y) & CurrentAndLongRange(z)) -> (Studies(x,y) & PreparesPredictions(x,z)))", "score": 0}
{"id": "eqasc_validation_84", "prediction": "all x y z.((Meteorologist(x) & WeatherCondition(y) & WeatherCondition(z)) -> (Studies(x,y) & Prepares(x,z)))", "score": 0}
{"id": "eqasc_validation_84", "prediction": "all x.(Meteorologist(x) -> (StudiesWeatherConditions(x) & PreparesWeatherPredictions(x) & CurrentAndLongRangeWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_84", "prediction": "all x.(Meteorologist(x) -> (StudiesWeatherConditions(x) & PreparesWeatherPredictions(x,current,longRange)))", "score": 0}
{"id": "eqasc_validation_84", "prediction": "all x y.((Meteorologist(x) & WeatherCondition(y)) -> (Studies(x,y) & Prepares(x,z)))", "score": 0}
{"id": "eqasc_validation_85", "prediction": "all x.(PredictingWeather(x) -> (PreparesCurrentAndLongRangeWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_85", "prediction": "all x.(PredictingWeather(x) -> (PreparesCurrentAndLongRangeWeatherPredictions(x) & PreparesLongRangeWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_85", "prediction": "all x.(PredictingWeather(x) -> (PreparesCurrentWeatherPredictions(x) & PreparesLongRangeWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_85", "prediction": "all x.(PredictsWeather(x) -> (PreparesCurrentAndLongRangeWeatherPredictions(x) & PreparesLongRangeWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_85", "prediction": "all x.(PredictsWeather(x) -> (PreparesCurrentAndLongRangeWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_85", "prediction": "all x.(PredictingWeather(x) -> (PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_85", "prediction": "all x.(PredictsWeather(x) -> (PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_85", "prediction": "all x.(PredictingWeather(x) -> (PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_85", "prediction": "all x.(PredictsWeather(x) -> (PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_85", "prediction": "all x.(PredictingWeather(x) -> (PreparesCurrentAndLongRangeWeatherPredictions(x) | PreparesLongRangeWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_85", "prediction": "all x.(PredictingWeather(x) -> (PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_85", "prediction": "all x.(PredictingWeather(x) -> (PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_85", "prediction": "all x.(PredictsWeather(x) -> (PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_85", "prediction": "all x.(PredictsWeather(x) -> (PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x) & PreparesWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_86", "prediction": "all x.((IntroductionToWeather(x) & Meteorology(x)) -> StudiesWeather(x))", "score": 0}
{"id": "eqasc_validation_86", "prediction": "all x.((IntroductionToWeather(x) & IntroductionToWeatherMeteorology(x)) -> StudiesWeather(x))", "score": 0}
{"id": "eqasc_validation_86", "prediction": "all x y.((IntroductionToWeather(x) & WeatherMeteorology(y)) -> StudiesWeather(x,y))", "score": 0}
{"id": "eqasc_validation_86", "prediction": "all x.(IntroductionToWeather(x) -> StudiesWeather(x))", "score": 0}
{"id": "eqasc_validation_86", "prediction": "all x.((IntroductionToWeather(x) & WeatherMeteorology(x)) -> StudiesWeather(x))", "score": 0}
{"id": "eqasc_validation_86", "prediction": "all x y.((IntroductionToWeather(x) & WeatherMeteorology(y)) -> StudiesWeather(x))", "score": 0}
{"id": "eqasc_validation_86", "prediction": "all x.((IntroductionToWeather(x) & IntroductionToWeatherMeteorology(x)) -> StudyOfWeather(x))", "score": 0}
{"id": "eqasc_validation_86", "prediction": "all x.(IntroductionToWeather(x) -> (IntroductionToWeatherMeteorology(x) & StudiesWeather(x)))", "score": 0}
{"id": "eqasc_validation_86", "prediction": "all x y.((IntroductionToWeather(x) & WeatherMeteorology(y)) -> StudyOfWeather(x,y))", "score": 0}
{"id": "eqasc_validation_86", "prediction": "all x.((IntroductionToWeather(x) & Meteorology(x)) -> StudyOfWeather(x))", "score": 0}
{"id": "eqasc_validation_86", "prediction": "all x y.((IntroductionToWeather(x) & IntroductionToWeatherMeteorology(y)) -> StudiesWeather(x))", "score": 0}
{"id": "eqasc_validation_86", "prediction": "all x.((IntroductionToWeather(x) & WeatherMeteorology(x)) -> StudyOfWeather(x))", "score": 0}
{"id": "eqasc_validation_86", "prediction": "all x y.((IntroductionToWeather(x) & WeatherMeteorology(y)) -> StudyOfWeather(x))", "score": 0}
{"id": "eqasc_validation_86", "prediction": "all x y.((IntroductionToWeather(x) & IntroductionToWeatherMeteorology(y)) -> StudiesWeather(x,y))", "score": 0}
{"id": "eqasc_validation_86", "prediction": "all x.(IntroductionToWeather(x) -> StudyOfWeather(x))", "score": 0}
{"id": "eqasc_validation_86", "prediction": "all x y.((IntroductionToWeather(x) & Meteorology(y)) -> StudiesWeather(x,y))", "score": 0}
{"id": "eqasc_validation_87", "prediction": "all x.(PredictingWeather(x) -> RequiresMeteorology(x))", "score": 0}
{"id": "eqasc_validation_87", "prediction": "all x y.((Weather(x) & Meteorology(y)) -> Predicts(x,y))", "score": 0}
{"id": "eqasc_validation_87", "prediction": "all x y.((Weather(x) & Meteorology(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_87", "prediction": "all x.(PredictsWeather(x) -> RequiresMeteorology(x))", "score": 0}
{"id": "eqasc_validation_87", "prediction": "all x y z.((Weather(x) & Meteorology(y) & Weather(z)) -> PredictsRequires(x,y,z))", "score": 0}
{"id": "eqasc_validation_87", "prediction": "all x y.((WeatherPrediction(x) & Meteorology(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_87", "prediction": "all x y.((Weather(x) & Meteorology(y)) -> PredictionRequires(x,y))", "score": 0}
{"id": "eqasc_validation_87", "prediction": "all x y z.((Weather(x) & Meteorology(y) & Weather(z)) -> Requires(x,y,z))", "score": 0}
{"id": "eqasc_validation_87", "prediction": "all x y.((PredictingWeather(x) & Meteorology(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_87", "prediction": "all x y z.((Weather(x) & Meteorology(y) & Weather(z)) -> Predicts(x,y,z))", "score": 0}
{"id": "eqasc_validation_87", "prediction": "all x y z.((Weather(x) & Meteorology(y) & Weather(z)) -> PredictionRequires(x,y,z))", "score": 0}
{"id": "eqasc_validation_87", "prediction": "all x.(PredictionOfWeather(x) -> RequiresMeteorology(x))", "score": 0}
{"id": "eqasc_validation_87", "prediction": "all x.(PredictingWeather(x) -> (RequiresMeteorology(x) & RequiresMeteorology(x)))", "score": 0}
{"id": "eqasc_validation_87", "prediction": "all x y.((PredictsWeather(x) & Meteorology(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_87", "prediction": "all x.((WeatherPrediction(x) & Meteorology(x)) -> Requires(x,Meteorology))", "score": 0}
{"id": "eqasc_validation_87", "prediction": "all x y.((Weather(x) & Meteorology(y)) -> PredictsRequires(x,y))", "score": 0}
{"id": "eqasc_validation_88", "prediction": "all x.(Meteorologist(x) -> (StudiesWeather(x) & StudiesWeather(x)))", "score": 0}
{"id": "eqasc_validation_88", "prediction": "all x.(Meteorologist(x) -> StudiesWeather(x))", "score": 0}
{"id": "eqasc_validation_88", "prediction": "all x y.((Meteorologist(x) & Weather(y)) -> Studies(x,y))", "score": 0}
{"id": "eqasc_validation_88", "prediction": "all x.(Meteorologist(x) -> exists y.(Weather(y) & Studies(x,y))))", "score": -1}
{"id": "eqasc_validation_88", "prediction": "all x.(Meteorologist(x) -> (Scientist(x) & StudiesWeather(x)))", "score": 0}
{"id": "eqasc_validation_88", "prediction": "all x.(Meteorologist(x) -> (StudiesWeather(x) & StudyWeather(x)))", "score": 0}
{"id": "eqasc_validation_88", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> Studies(x,y,z))", "score": 0}
{"id": "eqasc_validation_88", "prediction": "all x.(Meteorologist(x) -> exists y.(Weather(y) & Study(x,y))))", "score": -1}
{"id": "eqasc_validation_88", "prediction": "all x.(Meteorologist(x) -> exists y.(Weather(y) & Studies(x,y)))", "score": 0}
{"id": "eqasc_validation_88", "prediction": "all x.(Meteorologist(x) -> (StudiesWeather(x) | StudiesWeather(x)))", "score": 0}
{"id": "eqasc_validation_88", "prediction": "all x.(Meteorologist(x) -> (StudiesWeather(x) & StudyesWeather(x)))", "score": 0}
{"id": "eqasc_validation_88", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> Studies(x,y))", "score": 0}
{"id": "eqasc_validation_88", "prediction": "all x.(Meteorologist(x) -> StudyWeather(x))", "score": 0}
{"id": "eqasc_validation_89", "prediction": "all x.(PredictingWeather(x) -> RequiresMeteorologists(x))", "score": 0}
{"id": "eqasc_validation_89", "prediction": "all x y.((PredictingWeather(x) & Meteorologist(y)) -> Requires(y,x))", "score": 0}
{"id": "eqasc_validation_89", "prediction": "all x y z.((Weather(x) & Meteorologist(y) & Weather(z)) -> Requires(y,z))", "score": 0}
{"id": "eqasc_validation_89", "prediction": "all x y z.((Weather(x) & Meteorologist(y) & Weather(z)) -> (Requires(y,z) & Predicts(y,z)))", "score": 0}
{"id": "eqasc_validation_89", "prediction": "all x y.((Weather(x) & Meteorologist(y)) -> Requires(y,x))", "score": 0}
{"id": "eqasc_validation_89", "prediction": "all x y.((PredictsWeather(x) & Meteorologist(y)) -> Requires(y,x))", "score": 0}
{"id": "eqasc_validation_89", "prediction": "all x y z.((Weather(x) & Meteorologist(y) & Weather(z)) -> Predicts(y,z))", "score": 0}
{"id": "eqasc_validation_89", "prediction": "all x y z.((Weather(x) & Meteorologist(y) & Weather(z) & Predicts(y,z)) -> Requires(y,z))", "score": 0}
{"id": "eqasc_validation_89", "prediction": "all x y.((Weather(x) & Meteorologist(y)) -> Predicts(y,x))", "score": 0}
{"id": "eqasc_validation_89", "prediction": "all x y.((WeatherPrediction(x) & Meteorologist(y)) -> Requires(y,x))", "score": 0}
{"id": "eqasc_validation_89", "prediction": "all x y z.((Weather(x) & Meteorologist(y) & Weather(z)) -> Predicts(x,y,z))", "score": 0}
{"id": "eqasc_validation_89", "prediction": "all x y.((Weather(x) & Meteorologist(y)) -> Predicts(x,y))", "score": 0}
{"id": "eqasc_validation_89", "prediction": "all x y.((Weather(x) & Meteorologist(y)) -> (Requires(y,x) & Predicts(y,x)))", "score": 0}
{"id": "eqasc_validation_89", "prediction": "all x y z.((Weather(x) & Meteorologist(y) & Weather(z)) -> PredictsRequires(y,z))", "score": 0}
{"id": "eqasc_validation_89", "prediction": "all x y z.((Weather(x) & Meteorologist(y) & Weather(z) & Predicts(x,y,z)) -> Requires(y,z))", "score": 0}
{"id": "eqasc_validation_89", "prediction": "all x y z.((Weather(x) & Meteorologist(y) & Weather(z)) -> PredictionRequires(y,z))", "score": 0}
{"id": "eqasc_validation_90", "prediction": "all x.((KnowledgeOfStars(x) & NavigatesStars(x)) -> CanBeUsedToNavigateStars(x))", "score": 0}
{"id": "eqasc_validation_90", "prediction": "all x y.((KnowledgeOfStars(x) & Navigate(y)) -> CanBeUsedToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_90", "prediction": "all x.((KnowledgeOfStars(x) & NavigateStars(x)) -> CanBeUsedToNavigateStars(x))", "score": 0}
{"id": "eqasc_validation_90", "prediction": "all x y.((KnowledgeOfStars(x) & NavigatesStars(y)) -> CanBeUsedToNavigateStars(x,y))", "score": 0}
{"id": "eqasc_validation_90", "prediction": "all x.((KnowledgeOfStars(x) & Navigate(x)) -> CanBeUsedToNavigate(x))", "score": 0}
{"id": "eqasc_validation_90", "prediction": "all x y.((KnowledgeOfStars(x) & NavigateStars(y)) -> CanBeUsedToNavigateStars(x,y))", "score": 0}
{"id": "eqasc_validation_90", "prediction": "all x.(KnowledgeOfStars(x) -> NavigatesStars(x))", "score": 0}
{"id": "eqasc_validation_90", "prediction": "all x y.((KnowledgeOfStars(x) & Navigates(y)) -> CanBeUsedToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_90", "prediction": "all x y.((KnowledgeOfStars(x) & Navigation(y)) -> CanBeUsedToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_90", "prediction": "all x y.((Knowledge(x) & Stars(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_90", "prediction": "all x y.((Knowledge(x) & Star(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_90", "prediction": "all x.((KnowledgeOfStars(x) & NavigatesStars(x)) -> CanNavigateStars(x))", "score": 0}
{"id": "eqasc_validation_90", "prediction": "all x.((KnowledgeOfStars(x) & NavigatesStars(x)) -> UsesKnowledgeOfStars(x))", "score": 0}
{"id": "eqasc_validation_91", "prediction": "all x.(Astronomy(x) -> (StudiesPlanets(x) & StudiesStars(x) & StudiesUniverse(x)))", "score": 0}
{"id": "eqasc_validation_91", "prediction": "all x.(Astronomy(x) -> (StudyOfPlanets(x) & StudyOfStars(x) & StudyOfUniverse(x)))", "score": 0}
{"id": "eqasc_validation_91", "prediction": "all x y z.((Astronomy(x) & Planet(y) & Star(z)) -> (Studies(x,y) & Studies(x,z)))", "score": 0}
{"id": "eqasc_validation_91", "prediction": "all x.(Astronomy(x) -> (StudiesPlanets(x) | StudiesStars(x) | StudiesUniverse(x)))", "score": 0}
{"id": "eqasc_validation_91", "prediction": "all x y z.((Astronomy(x) & Planet(y) & Star(z) & Universe(x)) -> (Studies(x,y) & Studies(x,z)))", "score": 0}
{"id": "eqasc_validation_91", "prediction": "all x y z.((Astronomy(x) & Planet(y) & Star(z) & Universe(x)) -> Studies(x,y,z))", "score": 0}
{"id": "eqasc_validation_91", "prediction": "all x.(Astronomy(x) -> (Planet(x) & Star(x) & Universe(x)))", "score": 0}
{"id": "eqasc_validation_91", "prediction": "all x y z.((Astronomy(x) & Planet(y) & Star(z)) -> (Studies(x,y) & Studies(x,z) & Studies(x,y)))", "score": 0}
{"id": "eqasc_validation_91", "prediction": "all x y.((Astronomy(x) & Planet(y) & Star(y) & Universe(y)) -> Studies(x,y))", "score": 0}
{"id": "eqasc_validation_91", "prediction": "all x y z w.((Astronomy(x) & Planet(y) & Star(z) & Universe(w)) -> (Studies(x,y,z) & Studies(x,w)))", "score": 0}
{"id": "eqasc_validation_91", "prediction": "all x y z.((Astronomy(x) & Planet(y) & Star(z)) -> (Studies(x,y,z) & Studies(x,y)))", "score": 0}
{"id": "eqasc_validation_91", "prediction": "all x y z w.((Astronomy(x) & Planet(y) & Star(z) & Universe(w)) -> Studies(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_91", "prediction": "all x y z.((Astronomy(x) & Planet(y) & Star(z)) -> (Studies(x,y) & Studies(x,z) & Studies(x,y,z)))", "score": 0}
{"id": "eqasc_validation_91", "prediction": "all x y z.((Astronomy(x) & Planet(y) & Star(z) & Universe(x)) -> (Studies(x,y,z) & Studies(x,y)))", "score": 0}
{"id": "eqasc_validation_92", "prediction": "all x y.((Astronomy(x) & Navigate(y)) -> CanBeUsedToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_92", "prediction": "all x.(Astronomy(x) -> (CanBeUsedToNavigate(x) & Navigate(x)))", "score": 0}
{"id": "eqasc_validation_92", "prediction": "all x y.((Astronomy(x) & Navigates(y)) -> CanBeUsedToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_92", "prediction": "all x y.((Astronomy(x) & Navigation(y)) -> CanBeUsedToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_92", "prediction": "all x.(Astronomy(x) -> CanBeUsedToNavigate(x))", "score": 0}
{"id": "eqasc_validation_92", "prediction": "all x.(Astronomy(x) -> Navigates(x))", "score": 0}
{"id": "eqasc_validation_92", "prediction": "all x y.((Astronomy(x) & Navigating(y)) -> CanBeUsedToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_92", "prediction": "all x y.((Astronomy(x) & Navigating(y)) -> CanBeUsedTo(x,y))", "score": 0}
{"id": "eqasc_validation_92", "prediction": "all x.(Astronomy(x) -> (CanBeUsedToNavigate(x) & Navigates(x)))", "score": 0}
{"id": "eqasc_validation_92", "prediction": "all x y.((Astronomy(x) & Navigate(y)) -> CanBeUsedTo(x,y))", "score": 0}
{"id": "eqasc_validation_92", "prediction": "all x.(Astronomy(x) -> (UsedToNavigate(x) & Navigate(x)))", "score": 0}
{"id": "eqasc_validation_92", "prediction": "all x.((Astronomy(x) & Navigate(x)) -> CanBeUsedToNavigate(x))", "score": 0}
{"id": "eqasc_validation_92", "prediction": "all x.((Astronomy(x) & Navigates(x)) -> CanBeUsedToNavigate(x))", "score": 0}
{"id": "eqasc_validation_92", "prediction": "all x y.((Astronomy(x) & Navigate(y)) -> (CanBeUsedToNavigate(x,y) & Navigate(x,y)))", "score": 0}
{"id": "eqasc_validation_92", "prediction": "all x y.((Astronomy(x) & Navigates(y)) -> CanBeUsedTo(x,y))", "score": 0}
{"id": "eqasc_validation_92", "prediction": "all x y.((Astronomy(x) & Navigate(y)) -> (UsedToNavigate(x,y) | UsedToNavigate(x,y)))", "score": 0}
{"id": "eqasc_validation_93", "prediction": "all x.((Map(x) & Navigation(x)) -> (EssentialToTravel(x) & OnRoad(x) & OffRoad(x)))", "score": 0}
{"id": "eqasc_validation_93", "prediction": "all x.((Map(x) & Navigation(x)) -> (EssentialToTravel(x) & (OnRoad(x) | OffRoad(x))))", "score": 0}
{"id": "eqasc_validation_93", "prediction": "all x.(Map(x) -> (GoodMap(x) & EssentialToTravel(x) & OnRoad(x) & OffRoad(x)))", "score": 0}
{"id": "eqasc_validation_93", "prediction": "all x.(Map(x) & Navigation(x)) -> (EssentialToTravel(x) & OnRoad(x) & OffRoad(x)))", "score": -1}
{"id": "eqasc_validation_93", "prediction": "all x.(Map(x) & Navigation(x)) -> (EssentialToTravel(x) & (OnRoad(x) | OffRoad(x))))", "score": -1}
{"id": "eqasc_validation_93", "prediction": "all x.(Map(x) -> (GoodMap(x) & EssentialToTravel(x)))", "score": 0}
{"id": "eqasc_validation_93", "prediction": "all x.(MapsAndNavigation(x) -> (EssentialToTravel(x) & OnRoad(x) & OffRoad(x)))", "score": 0}
{"id": "eqasc_validation_93", "prediction": "all x.(Map(x) -> (GoodMap(x) & EssentialToTravel(x) & (OnRoad(x) | OffRoad(x))))", "score": 0}
{"id": "eqasc_validation_93", "prediction": "all x.(Maps(x) & Navigation(x)) -> (EssentialToTravel(x) & OnRoad(x) & OffRoad(x)))", "score": -1}
{"id": "eqasc_validation_93", "prediction": "all x.((Maps(x) & Navigation(x)) -> (EssentialToTravel(x) & OnRoad(x) & OffRoad(x)))", "score": 0}
{"id": "eqasc_validation_93", "prediction": "all x.((Map(x) | NavigationMap(x)) -> (EssentialToTravel(x) & OnRoad(x) & OffRoad(x)))", "score": 0}
{"id": "eqasc_validation_93", "prediction": "all x.(MapsAndNavigation(x) -> (EssentialToTravel(x) & (OnRoad(x) | OffRoad(x))))", "score": 0}
{"id": "eqasc_validation_93", "prediction": "all x.(Map(x) & Navigation(x) -> (EssentialToTravel(x) & OnRoad(x) & OffRoad(x)))", "score": 0}
{"id": "eqasc_validation_93", "prediction": "all x.((Map(x) & NavigationMap(x)) -> (EssentialToTravel(x) & OnRoad(x) & OffRoad(x)))", "score": 0}
{"id": "eqasc_validation_93", "prediction": "all x y.((Map(x) & Navigation(y)) -> (EssentialToTravel(x,y) & (OnRoad(x) | OffRoad(x))))", "score": 0}
{"id": "eqasc_validation_93", "prediction": "all x y.((Map(x) & Navigation(y)) -> (EssentialToTravel(x,y) & OnRoad(x) & OffRoad(x)))", "score": 0}
{"id": "eqasc_validation_94", "prediction": "all x.((KnowledgeOfStars(x) & (TravelsOnRoad(x) | TravelsOffRoad(x))) -> ReplacesMaps(x))", "score": 0}
{"id": "eqasc_validation_94", "prediction": "all x.((KnowledgeOfStars(x) & (TravelOnRoad(x) | TravelOffRoad(x))) -> ReplacesMaps(x))", "score": 0}
{"id": "eqasc_validation_94", "prediction": "all x y.((KnowledgeOfStars(x) & (TravelsOnRoad(y) | TravelsOffRoad(y))) -> ReplacesMaps(x,y))", "score": 0}
{"id": "eqasc_validation_94", "prediction": "all x y.((KnowledgeOfStars(x) & Travel(y) & (OnRoad(y) | OffRoad(y))) -> ReplacesMaps(x,y))", "score": 0}
{"id": "eqasc_validation_94", "prediction": "all x y.((KnowledgeOfStars(x) & (TravelOnRoad(y) | TravelOffRoad(y))) -> ReplacesMaps(x,y))", "score": 0}
{"id": "eqasc_validation_94", "prediction": "all x.((KnowledgeOfStars(x) & (TravelingOnRoad(x) | TravelingOffRoad(x))) -> ReplacesMaps(x))", "score": 0}
{"id": "eqasc_validation_94", "prediction": "all x y z.((KnowledgeOfStars(x) & Map(y) & (OnRoad(z) | OffRoad(z))) -> Replaces(x,y,z))", "score": 0}
{"id": "eqasc_validation_94", "prediction": "all x.((KnowledgeOfStars(x) & (TravelsOnRoad(x) | TravelsOffRoad(x))) -> CanReplaceMaps(x))", "score": 0}
{"id": "eqasc_validation_94", "prediction": "all x.((KnowledgeOfStars(x) & TravelingOnOrOffRoad(x)) -> ReplacesMaps(x))", "score": 0}
{"id": "eqasc_validation_94", "prediction": "all x.((KnowledgeOfStars(x) & TravelingOnRoad(x) & TravelingOffRoad(x)) -> ReplacesMaps(x))", "score": 0}
{"id": "eqasc_validation_94", "prediction": "all x.((KnowledgeOfStars(x) & TravelsOnOrOffRoad(x)) -> ReplacesMaps(x))", "score": 0}
{"id": "eqasc_validation_94", "prediction": "all x y.((KnowledgeOfStars(x) & (TravelsOnRoad(y) | TravelsOffRoad(y))) -> CanReplaceMaps(x,y))", "score": 0}
{"id": "eqasc_validation_94", "prediction": "all x y.((KnowledgeOfStars(x) & TravelingOnOrOffRoad(y)) -> ReplacesMaps(x,y))", "score": 0}
{"id": "eqasc_validation_94", "prediction": "all x.((KnowledgeOfStars(x) & TravelingOnRoadOrOffRoad(x)) -> ReplacesMaps(x))", "score": 0}
{"id": "eqasc_validation_94", "prediction": "all x y z.((KnowledgeOfStars(x) & Map(y) & (OnRoad(z) | OffRoad(z))) -> CanReplace(x,y,z))", "score": 0}
{"id": "eqasc_validation_94", "prediction": "all x y.((KnowledgeOfStars(x) & TravelingOnRoadOrOffRoad(y)) -> ReplacesMaps(x,y))", "score": 0}
{"id": "eqasc_validation_95", "prediction": "all x.(Star(x) -> InConstellation(x))", "score": 0}
{"id": "eqasc_validation_95", "prediction": "all x.(Star(x) -> Constellation(x))", "score": 0}
{"id": "eqasc_validation_95", "prediction": "all x y.((Star(x) & Constellation(y)) -> InConstellation(x,y))", "score": 0}
{"id": "eqasc_validation_95", "prediction": "all x.((Star(x) & WasInConstellation(x)) -> InConstellation(x))", "score": 0}
{"id": "eqasc_validation_95", "prediction": "all x.((Star(x) & Constellation(x)) -> InConstellation(x))", "score": 0}
{"id": "eqasc_validation_95", "prediction": "all x.(Star(x) -> exists y.(Constellation(y) & In(x,y)))", "score": 0}
{"id": "eqasc_validation_95", "prediction": "all x y.((Star(x) & Constellation(y)) -> In(x,y))", "score": 0}
{"id": "eqasc_validation_95", "prediction": "all x.((Star(x) & EverBeen(x)) -> InConstellation(x))", "score": 0}
{"id": "eqasc_validation_95", "prediction": "all x.(Star(x) -> exists y.(Constellation(y) & In(x,y))))", "score": -1}
{"id": "eqasc_validation_95", "prediction": "all x.(Star(x) -> exists y.(Constellation(y) & InConstellation(x,y)))", "score": 0}
{"id": "eqasc_validation_95", "prediction": "all x.exists y.(Star(x) & Constellation(y) & In(x,y))", "score": 0}
{"id": "eqasc_validation_95", "prediction": "all x.((Star(x) & ThereEverBeen(x)) -> InConstellation(x))", "score": 0}
{"id": "eqasc_validation_95", "prediction": "all x.exists y.(Star(x) & Constellation(y) & InConstellation(x,y))", "score": 0}
{"id": "eqasc_validation_95", "prediction": "all x.((Star(x) & InConstellation(x)) -> InConstellation(x))", "score": 0}
{"id": "eqasc_validation_95", "prediction": "(exists x.(Star(x) & InConstellation(x)))", "score": 0}
{"id": "eqasc_validation_96", "prediction": "all x.((KnowledgeOfConstellations(x) & Navigate(x)) -> CanBeUsedToNavigate(x))", "score": 0}
{"id": "eqasc_validation_96", "prediction": "all x y.((KnowledgeOfConstellations(x) & Navigate(y)) -> CanBeUsedToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_96", "prediction": "all x y.((KnowledgeOfConstellations(x) & Navigation(y)) -> CanBeUsedToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_96", "prediction": "all x.((KnowledgeOfConstellations(x) & Navigates(x)) -> CanBeUsedToNavigate(x))", "score": 0}
{"id": "eqasc_validation_96", "prediction": "all x y.((KnowledgeOfConstellations(x) & Navigates(y)) -> CanBeUsedToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_96", "prediction": "all x.((KnowledgeOfConstellations(x) & NavigatesConstellations(x)) -> CanBeUsedToNavigateConstellations(x))", "score": 0}
{"id": "eqasc_validation_96", "prediction": "all x.((KnowledgeOfConstellations(x) & NavigatesConstellations(x)) -> CanBeUsedToNavigate(x))", "score": 0}
{"id": "eqasc_validation_96", "prediction": "all x.(ConstellationKnowledge(x) -> Navigates(x))", "score": 0}
{"id": "eqasc_validation_96", "prediction": "all x y z.((KnowledgeOfConstellations(x) & KnowledgeOfConstellations(y) & Navigation(z)) -> CanBeUsedToNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_96", "prediction": "all x y z.((KnowledgeOfConstellations(x) & KnowledgeOfConstellations(y) & Navigate(z)) -> CanBeUsedToNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_96", "prediction": "all x y z.((KnowledgeOfConstellations(x) & KnowledgeOfConstellations(y) & Navigation(z)) -> CanNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_96", "prediction": "all x y.((KnowledgeOfConstellations(x) & Navigation(y)) -> CanNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_97", "prediction": "all x y.((Explorer(x) & NorthStar(y)) -> UsedForNavigation(x,y))", "score": 0}
{"id": "eqasc_validation_97", "prediction": "all x y z.((Explorer(x) & NorthStar(y) & NavigationalPurpose(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_97", "prediction": "all x.((Explorer(x) & NorthStar(y)) -> UsedForNavigation(x,y))", "score": 0}
{"id": "eqasc_validation_97", "prediction": "all x y.((Explorer(x) & NorthStar(y)) -> UsesForNavigation(x,y))", "score": 0}
{"id": "eqasc_validation_97", "prediction": "all x.((Explorer(x) & NorthStar(x)) -> UsedForNavigation(x))", "score": 0}
{"id": "eqasc_validation_97", "prediction": "all x.((Explorer(x) & NorthStar(y)) -> UsesForNavigation(x,y))", "score": 0}
{"id": "eqasc_validation_97", "prediction": "all x y z.((Explorer(x) & NorthStar(y) & NavigationalPurpose(z)) -> UsedForCentury(x,y,z))", "score": 0}
{"id": "eqasc_validation_97", "prediction": "all x y z.((Explorer(x) & NorthStar(y) & NavigationalPurpose(z)) -> UsesFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_97", "prediction": "all x y.((Explorer(x) & NorthStar(y)) -> NavigationalPurpose(x,y))", "score": 0}
{"id": "eqasc_validation_97", "prediction": "all x y.((Explorer(x) & NorthStar(y)) -> UsedForNavigationalPurposes(x,y))", "score": 0}
{"id": "eqasc_validation_97", "prediction": "all x y.((Explorer(x) & NorthStar(y)) -> (UsedForNavigation(x,y) & ForCentury(x,y)))", "score": 0}
{"id": "eqasc_validation_97", "prediction": "all x y.((Explorer(x) & NorthStar(y)) -> (UsedForNavigation(x,y) & ForCentury(x)))", "score": 0}
{"id": "eqasc_validation_97", "prediction": "all x y z.((Explorer(x) & NorthStar(y) & Navigation(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_97", "prediction": "all x y.((Explorer(x) & NorthStar(y)) -> HasNavigationPurpose(x,y))", "score": 0}
{"id": "eqasc_validation_97", "prediction": "all x.((Explorer(x) & NorthStar(y)) -> NavigationalPurpose(x,y))", "score": 0}
{"id": "eqasc_validation_97", "prediction": "all x.((Explorer(x) & NorthStar(x)) -> NavigationalPurpose(x))", "score": 0}
{"id": "eqasc_validation_98", "prediction": "all x.((NorthStar(x) & Knowledge(x)) -> CanUseForDirections(x))", "score": 0}
{"id": "eqasc_validation_98", "prediction": "all x.((NorthStar(x) & Knowledge(x)) -> UsesForDirections(x))", "score": 0}
{"id": "eqasc_validation_98", "prediction": "all x y.((NorthStar(x) & Knowledge(y) & UsesForDirections(x,y)) -> HasKnowledge(x,y))", "score": 0}
{"id": "eqasc_validation_98", "prediction": "all x.((NorthStar(x) & Knowledge(x)) -> CanBeUsedForDirections(x))", "score": 0}
{"id": "eqasc_validation_98", "prediction": "all x y.((NorthStar(x) & Knowledge(x) & UsesForDirections(x,y)) -> HasKnowledge(x))", "score": 0}
{"id": "eqasc_validation_98", "prediction": "all x y.((NorthStar(x) & Knowledge(y) & UsesForDirections(x,y)) -> HasKnowledge(x))", "score": 0}
{"id": "eqasc_validation_98", "prediction": "all x.((NorthStar(x) & Knowledge(x)) -> CanForDirections(x))", "score": 0}
{"id": "eqasc_validation_98", "prediction": "all x y z.((NorthStar(x) & Knowledge(y) & Knowledge(z)) -> CanUseForDirections(x,y,z))", "score": 0}
{"id": "eqasc_validation_98", "prediction": "all x.((NorthStar(x) & Knowledge(x)) -> UseForDirections(x))", "score": 0}
{"id": "eqasc_validation_98", "prediction": "all x.((NorthStar(x) & Knowledge(x)) -> CanUseNorthStarForDirections(x))", "score": 0}
{"id": "eqasc_validation_98", "prediction": "all x.((NorthStar(x) & Knowledge(x)) -> UsedForDirections(x))", "score": 0}
{"id": "eqasc_validation_98", "prediction": "all x y.((NorthStar(x) & Knowledge(x) & UsesForDirections(x,y)) -> HasKnowledge(x,y))", "score": 0}
{"id": "eqasc_validation_98", "prediction": "all x.((NorthStar(x) & Knowledge(x)) -> CanDirections(x))", "score": 0}
{"id": "eqasc_validation_98", "prediction": "all x y.((NorthStar(x) & Knowledge(y) & UsesForDirections(x,y)) -> HasKnowledge(y))", "score": 0}
{"id": "eqasc_validation_98", "prediction": "all x y.((NorthStar(x) & Knowledge(y) & UsesForDirections(x,y)) -> UsesForDirections(x,y))", "score": 0}
{"id": "eqasc_validation_99", "prediction": "all x y.((KnowledgeOfStars(x) & Explorer(y)) -> Orients(x,y))", "score": 0}
{"id": "eqasc_validation_99", "prediction": "all x y.((KnowledgeOfStars(x) & Explorer(y)) -> CanOrient(x,y))", "score": 0}
{"id": "eqasc_validation_99", "prediction": "all x y.((KnowledgeOfStars(x) & Explorer(y)) -> Orients(y,x))", "score": 0}
{"id": "eqasc_validation_99", "prediction": "all x y z.((KnowledgeOfStars(x) & Explorer(y) & Explorer(z)) -> Orients(x,y,z))", "score": 0}
{"id": "eqasc_validation_99", "prediction": "all x y z.((KnowledgeOfStars(x) & Explorer(y) & Explorer(z)) -> CanOrient(x,y,z))", "score": 0}
{"id": "eqasc_validation_99", "prediction": "all x.((KnowledgeOfStars(x) & OrientExplorers(x)) -> CanBeUsedToOrient(x))", "score": 0}
{"id": "eqasc_validation_99", "prediction": "all x.((KnowledgeOfStars(x) & OrientExplorers(x)) -> CanBeUsedToOrient(x,explorers))", "score": 0}
{"id": "eqasc_validation_99", "prediction": "all x y.((KnowledgeOfStars(x) & Explorer(y)) -> Orient(x,y))", "score": 0}
{"id": "eqasc_validation_99", "prediction": "all x y z.((KnowledgeOfStars(x) & Explorer(y) & Explorer(z)) -> Orients(y,z))", "score": 0}
{"id": "eqasc_validation_99", "prediction": "all x y.((KnowledgeOfStars(x) & OrientExplorers(y)) -> CanBeUsedToOrient(x,y))", "score": 0}
{"id": "eqasc_validation_99", "prediction": "all x.(KnowledgeOfStars(x) -> OrientExplorers(x))", "score": 0}
{"id": "eqasc_validation_99", "prediction": "all x y.((KnowledgeOfStars(x) & Explorer(y)) -> (Orients(y,x) | Orients(y,x)))", "score": 0}
{"id": "eqasc_validation_99", "prediction": "all x.((KnowledgeOfStars(x) & OrientsExplorers(x)) -> CanBeUsedToOrient(x))", "score": 0}
{"id": "eqasc_validation_99", "prediction": "all x y.((Knowledge(x) & Stars(y)) -> OrientsExplorers(x,y))", "score": 0}
{"id": "eqasc_validation_99", "prediction": "all x.(KnowledgeOfStars(x) -> OrientsExplorers(x))", "score": 0}
{"id": "eqasc_validation_99", "prediction": "all x y z.((KnowledgeOfStars(x) & Explorer(y) & Explorer(z)) -> Orient(x,y,z))", "score": 0}
{"id": "eqasc_validation_100", "prediction": "all x.(StarStar(x) -> (SymbolOfHope(x) & SymbolOfGuidance(x) & InUncertainty(x)))", "score": 0}
{"id": "eqasc_validation_100", "prediction": "all x.(StarStar(x) -> (SymbolOfHope(x) & SymbolOfGuidance(x) & Uncertainty(x)))", "score": 0}
{"id": "eqasc_validation_100", "prediction": "all x.(StarStar(x) -> (SymbolOfHopeAndGuidance(x) & InUncertainty(x)))", "score": 0}
{"id": "eqasc_validation_100", "prediction": "all x.(StarStar(x) -> (SymbolOfHope(x) & SymbolOfGuidance(x) & InMomentOfUncertainty(x)))", "score": 0}
{"id": "eqasc_validation_100", "prediction": "all x y.((StarStar(x) & Uncertainty(y)) -> (SymbolOfHope(x,y) & SymbolOfGuidance(x,y)))", "score": 0}
{"id": "eqasc_validation_100", "prediction": "all x.(StarStar(x) -> (SymbolOfHope(x) & SymbolOfGuidance(x)))", "score": 0}
{"id": "eqasc_validation_100", "prediction": "all x.(StarStar(x) -> (SymbolOfHope(x) & SymbolOfGuidance(x) & InIncertitude(x)))", "score": 0}
{"id": "eqasc_validation_100", "prediction": "all x.(StarStar(x) -> (SymbolOfHope(x) & SymbolOfGuidance(x) & InMomentOfIncertitude(x)))", "score": 0}
{"id": "eqasc_validation_100", "prediction": "all x.(StarStar(x) -> (SymbolOfHope(x) & SymbolOfGuidance(x) & EmbracesUncertainty(x)))", "score": 0}
{"id": "eqasc_validation_100", "prediction": "all x.(StarStar(x) -> (SymbolOfHope(x) & SymbolOfGuidance(x) & InTheMomentOfUncertainty(x)))", "score": 0}
{"id": "eqasc_validation_100", "prediction": "all x.(StarStar(x) -> (SymbolOfHope(x) & SymbolOfGuidance(x) & InTheMomentOfIncertitude(x)))", "score": 0}
{"id": "eqasc_validation_100", "prediction": "all x y.((StarStar(x) & Uncertainty(y)) -> (SymbolOfHopeAndGuidance(x,y)))", "score": 0}
{"id": "eqasc_validation_101", "prediction": "all x.(Uncertainty(x) -> CanBeOvercomeByNavigation(x))", "score": 0}
{"id": "eqasc_validation_101", "prediction": "all x.(Uncertainty(x) -> CanBeOverwhelmedByNavigation(x))", "score": 0}
{"id": "eqasc_validation_101", "prediction": "all x.(Uncertainty(x) -> OvercomeByNavigation(x))", "score": 0}
{"id": "eqasc_validation_101", "prediction": "all x.(Uncertainty(x) -> OverwhelmedByNavigation(x))", "score": 0}
{"id": "eqasc_validation_101", "prediction": "all x y.((Uncertainty(x) & Navigation(y)) -> Overcome(x,y))", "score": 0}
{"id": "eqasc_validation_101", "prediction": "all x.(Uncertainty(x) -> CanBeOvercameByNavigation(x))", "score": 0}
{"id": "eqasc_validation_101", "prediction": "all x y.((Uncertainty(x) & Navigation(y)) -> CanBeOvercome(x,y))", "score": 0}
{"id": "eqasc_validation_101", "prediction": "all x.(Uncertainty(x) -> CanBeBurnedByNavigation(x))", "score": 0}
{"id": "eqasc_validation_101", "prediction": "all x y.((Uncertainty(x) & Navigation(y)) -> Overcomes(x,y))", "score": 0}
{"id": "eqasc_validation_101", "prediction": "all x.(Uncertainty(x) -> OvercameByNavigation(x))", "score": 0}
{"id": "eqasc_validation_101", "prediction": "all x.(Uncertainty(x) -> OvercomesByNavigation(x))", "score": 0}
{"id": "eqasc_validation_101", "prediction": "all x y.((Uncertainty(x) & Navigation(y)) -> CanBeOverwhelmed(x,y))", "score": 0}
{"id": "eqasc_validation_101", "prediction": "all x y.((Uncertainty(x) & Navigation(y)) -> CanOvercome(x,y))", "score": 0}
{"id": "eqasc_validation_101", "prediction": "all x.(Uncertainty(x) -> OverwhelmsByNavigation(x))", "score": 0}
{"id": "eqasc_validation_101", "prediction": "all x y.((Uncertainty(x) & Navigation(y)) -> OvercomeBy(x,y))", "score": 0}
{"id": "eqasc_validation_102", "prediction": "all x.(Navigation(x) -> SpaceTravelElement(x))", "score": 0}
{"id": "eqasc_validation_102", "prediction": "all x.(Navigation(x) -> KeyElementOfSpaceTravel(x))", "score": 0}
{"id": "eqasc_validation_102", "prediction": "all x.(Navigation(x) -> SpaceTravelKeyElement(x))", "score": 0}
{"id": "eqasc_validation_102", "prediction": "all x y.((Navigation(x) & SpaceTravel(y)) -> KeyElement(x,y))", "score": 0}
{"id": "eqasc_validation_102", "prediction": "all x.(Navigation(x) -> SpaceTravel(x))", "score": 0}
{"id": "eqasc_validation_102", "prediction": "all x y.((SpaceTravel(x) & Navigation(y)) -> KeyElement(x,y))", "score": 0}
{"id": "eqasc_validation_102", "prediction": "all x.((Navigation(x) & SpaceTravel(x)) -> KeyElement(x))", "score": 0}
{"id": "eqasc_validation_102", "prediction": "all x y z.((Navigation(x) & SpaceTravel(y) & SpaceTravel(z)) -> KeyElement(x,y,z))", "score": 0}
{"id": "eqasc_validation_102", "prediction": "all x y.((SpaceTravel(x) & Navigation(y)) -> KeyElement(y,x))", "score": 0}
{"id": "eqasc_validation_102", "prediction": "all x y z.((Navigation(x) & SpaceTravel(y) & Element(z)) -> KeyElement(x,y,z))", "score": 0}
{"id": "eqasc_validation_102", "prediction": "all x.((Navigation(x) & SpaceTravel(y)) -> KeyElement(x,y))", "score": 0}
{"id": "eqasc_validation_102", "prediction": "all x.(SpaceTravel(x) -> KeyElementOfNavigation(x))", "score": 0}
{"id": "eqasc_validation_102", "prediction": "all x.((Navigation(x) & SpaceTravel(x)) -> KeyElement(x,y))", "score": 0}
{"id": "eqasc_validation_102", "prediction": "all x y.((Navigation(x) & SpaceTravel(y)) -> KeyElementOf(x,y))", "score": 0}
{"id": "eqasc_validation_102", "prediction": "all x y z.((Navigation(x) & SpaceTravel(y) & KeyElement(z)) -> KeyElement(x,y,z))", "score": 0}
{"id": "eqasc_validation_102", "prediction": "all x y z.((Navigation(x) & SpaceTravel(y) & SpaceTravel(z)) -> KeyElement(x,y))", "score": 0}
{"id": "eqasc_validation_103", "prediction": "all x.(KnowledgeOfStars(x) -> CanBeUsedToTravel(x))", "score": 0}
{"id": "eqasc_validation_103", "prediction": "all x.((KnowledgeOfStars(x) & CanBeUsedToTravel(x)) -> CanBeUsedToTravel(x))", "score": 0}
{"id": "eqasc_validation_103", "prediction": "all x y.((Knowledge(x) & Star(y)) -> CanBeUsedToTravel(x,y))", "score": 0}
{"id": "eqasc_validation_103", "prediction": "all x.(KnowledgeOfStars(x) -> UsedToTravel(x))", "score": 0}
{"id": "eqasc_validation_103", "prediction": "all x.((KnowledgeOfStars(x) & UsedToTravel(x)) -> CanBeUsedToTravel(x))", "score": 0}
{"id": "eqasc_validation_103", "prediction": "all x y.((Star(x) & Knowledge(y)) -> CanBeUsedToTravel(x,y))", "score": 0}
{"id": "eqasc_validation_103", "prediction": "all x.((KnowledgeOfStars(x) & Travel(x)) -> CanBeUsedTo(x))", "score": 0}
{"id": "eqasc_validation_103", "prediction": "all x.((KnowledgeOfStars(x)) -> CanBeUsedToTravel(x))", "score": 0}
{"id": "eqasc_validation_103", "prediction": "all x.((KnowledgeOfStars(x) & Travel(x)) -> CanBeUsed(x))", "score": 0}
{"id": "eqasc_validation_103", "prediction": "all x.(KnowledgeOfStars(x) -> Travel(x))", "score": 0}
{"id": "eqasc_validation_103", "prediction": "all x y.((Star(x) & Knowledge(y)) -> CanBeUsedToTravel(x))", "score": 0}
{"id": "eqasc_validation_103", "prediction": "all x y.((Star(x) & KnowledgeOf(y,x)) -> CanBeUsedToTravel(x))", "score": 0}
{"id": "eqasc_validation_103", "prediction": "all x.((Star(x) & KnowledgeOf(x,y)) -> CanBeUsedToTravel(x))", "score": 0}
{"id": "eqasc_validation_103", "prediction": "all x.(KnowledgeOfStars(x) -> CanBeUsedForTravel(x))", "score": 0}
{"id": "eqasc_validation_103", "prediction": "all x y.((Star(x) & KnowledgeOf(x,y)) -> CanBeUsedToTravel(x))", "score": 0}
{"id": "eqasc_validation_103", "prediction": "all x.((KnowledgeOfStars(x) & Travels(x)) -> CanBeUsedTo(x))", "score": 0}
{"id": "eqasc_validation_104", "prediction": "all x.(Astronomer(x) -> StudiesStars(x))", "score": 0}
{"id": "eqasc_validation_104", "prediction": "all x y.((Astronomer(x) & Star(y)) -> Studies(x,y))", "score": 0}
{"id": "eqasc_validation_104", "prediction": "all x y z.((Astronomer(x) & Star(y) & Star(z)) -> Studies(x,y,z))", "score": 0}
{"id": "eqasc_validation_104", "prediction": "all x y.((Astronomer(x) & Star(y)) -> Study(x,y))", "score": 0}
{"id": "eqasc_validation_104", "prediction": "all x y z.((Astronomer(x) & Star(y) & Star(z)) -> Studies(x,y))", "score": 0}
{"id": "eqasc_validation_104", "prediction": "all x.(Astronomer(x) -> StudyStars(x))", "score": 0}
{"id": "eqasc_validation_104", "prediction": "all x y z.((Astronomer(x) & Star(y) & Star(z)) -> Study(x,y,z))", "score": 0}
{"id": "eqasc_validation_104", "prediction": "all x y z.((Astronomer(x) & Star(y) & Astronomer(z)) -> Studies(x,y,z))", "score": 0}
{"id": "eqasc_validation_104", "prediction": "exists x.(Astronomer(x) & StudiesStars(x))", "score": 0}
{"id": "eqasc_validation_104", "prediction": "all x y.((Astronomer(x) & Star(y)) -> StudiesAndStudies(x,y))", "score": 0}
{"id": "eqasc_validation_104", "prediction": "all x y z.((Astronomer(x) & Star(y) & Stern(z)) -> Studies(x,y,z))", "score": 0}
{"id": "eqasc_validation_104", "prediction": "all x y z.((Astronomer(x) & Star(y) & Object(z)) -> Studies(x,y,z))", "score": 0}
{"id": "eqasc_validation_104", "prediction": "all x.(Astronomer(x) -> (StudiesStars(x) | StudiesStars(x)))", "score": 0}
{"id": "eqasc_validation_104", "prediction": "all x y z.((Astronomer(x) & Star(y) & Star(z)) -> StudiesAndStudies(x,y,z))", "score": 0}
{"id": "eqasc_validation_104", "prediction": "(all x.(Astronomer(x) -> StudiesStars(x)))", "score": 0}
{"id": "eqasc_validation_104", "prediction": "all x.(Astronomer(x) -> StudiesStar(x))", "score": 0}
{"id": "eqasc_validation_105", "prediction": "all x.(Astronomy(x) -> Navigates(x))", "score": 0}
{"id": "eqasc_validation_105", "prediction": "all x y.((Astronomy(x) & Navigation(y)) -> CanBeUsedToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_105", "prediction": "all x y.((Astronomy(x) & Navigate(y)) -> CanBeUsedToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_105", "prediction": "all x.(Astronomy(x) -> Navigate(x))", "score": 0}
{"id": "eqasc_validation_105", "prediction": "all x.(Astronomy(x) -> CanBeUsedToNavigate(x))", "score": 0}
{"id": "eqasc_validation_105", "prediction": "all x y z.((Astronomy(x) & Navigation(y) & Navigation(z)) -> CanBeUsedToNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_105", "prediction": "all x y.((Astronomy(x) & Navigation(y)) -> CanBeUsedTo(x,y))", "score": 0}
{"id": "eqasc_validation_105", "prediction": "all x y.((Astronomy(x) & Astronomy(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_105", "prediction": "all x y.((Astronomy(x) & Navigating(y)) -> CanBeUsedToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_105", "prediction": "all x y.((Astronomy(x) & Navigates(y)) -> CanBeUsedToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_105", "prediction": "all x y.((Astronomy(x) & Navigate(y)) -> CanBeUsedTo(x,y))", "score": 0}
{"id": "eqasc_validation_105", "prediction": "all x y.((Astronomy(x) & Navigating(y)) -> CanBeUsedTo(x,y))", "score": 0}
{"id": "eqasc_validation_105", "prediction": "all x.(Astronomy(x) -> CanNavigate(x))", "score": 0}
{"id": "eqasc_validation_105", "prediction": "all x.(Astronomy(x) -> (CanBeUsedToNavigate(x) & Navigate(x)))", "score": 0}
{"id": "eqasc_validation_105", "prediction": "all x y.((Astronomy(x) & Navigates(y)) -> CanBeUsedTo(x,y))", "score": 0}
{"id": "eqasc_validation_106", "prediction": "all x y z.((Vehicle(x) & Brake(y) & Friction(z)) -> StopsBy(x,y,z))", "score": 4}
{"id": "eqasc_validation_106", "prediction": "all x y z.((Vehicle(x) & Brake(y) & Friction(z)) -> UsedForStopping(x,y,z))", "score": 0}
{"id": "eqasc_validation_106", "prediction": "all x y.((Vehicle(x) & Brake(y)) -> UsesFrictionForStopping(x,y))", "score": 0}
{"id": "eqasc_validation_106", "prediction": "all x y z.((Vehicle(x) & Brake(y) & Friction(z)) -> Stops(x,y,z))", "score": 4}
{"id": "eqasc_validation_106", "prediction": "all x y.((Vehicle(x) & Brake(y)) -> UsedForStopping(x,y))", "score": 0}
{"id": "eqasc_validation_106", "prediction": "all x y.((Vehicle(x) & Brake(y)) -> StopsBy(x,y))", "score": 0}
{"id": "eqasc_validation_106", "prediction": "all x y.((Vehicle(x) & Brake(y)) -> UsedForStoppingBy(x,y))", "score": 0}
{"id": "eqasc_validation_106", "prediction": "all x y z.((Vehicle(x) & Brake(y) & Friction(z)) -> UsedForStoppingBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_106", "prediction": "all x y z.((Friction(x) & Vehicle(y) & Brakes(z)) -> StopsBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_106", "prediction": "all x y z.((Friction(x) & Vehicle(y) & Brake(z)) -> StopsBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_106", "prediction": "all x y.((Vehicle(x) & Brake(y)) -> Stops(x,y))", "score": 0}
{"id": "eqasc_validation_106", "prediction": "all x y z.((Vehicle(x) & Brake(y) & Friction(z)) -> StopsVehicle(x,y,z))", "score": 0}
{"id": "eqasc_validation_106", "prediction": "all x.(Friction(x) -> UsedForStoppingVehicleByBrakes(x))", "score": 0}
{"id": "eqasc_validation_106", "prediction": "all x y z.((Friction(x) & Vehicle(y) & Brakes(z)) -> Stops(x,y,z))", "score": 0}
{"id": "eqasc_validation_106", "prediction": "all x y z.((Vehicle(x) & Brake(y) & Friction(z)) -> StopsByBreaks(x,y,z))", "score": 0}
{"id": "eqasc_validation_106", "prediction": "all x y z.((Vehicle(x) & Brake(y) & Friction(z)) -> StopsVehicleBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_107", "prediction": "all x.((Vehicle(x) & OnIncline(x)) -> BrakesInvolved(x))", "score": 0}
{"id": "eqasc_validation_107", "prediction": "all x y.((Vehicle(x) & Inincline(y)) -> BrakesInvolved(x,y))", "score": 0}
{"id": "eqasc_validation_107", "prediction": "all x.((Vehicle(x) & Inincline(x)) -> BrakesInvolved(x))", "score": 0}
{"id": "eqasc_validation_107", "prediction": "all x y.((Vehicle(x) & Incline(y)) -> BrakesInvolved(x,y))", "score": 0}
{"id": "eqasc_validation_107", "prediction": "all x.((Vehicle(x) & OnIncrement(x)) -> BrakesInvolved(x))", "score": 0}
{"id": "eqasc_validation_107", "prediction": "all x.((Vehicle(x) & OnIndice(x)) -> BrakesInvolved(x))", "score": 0}
{"id": "eqasc_validation_107", "prediction": "all x y.((Vehicle(x) & Inincline(y)) -> BrakeInvolved(x,y))", "score": 0}
{"id": "eqasc_validation_107", "prediction": "all x.((Vehicle(x) & OnInclines(x)) -> BrakesInvolved(x))", "score": 0}
{"id": "eqasc_validation_107", "prediction": "all x y.((Vehicle(x) & Inincline(y)) -> BrakesInvolved(x))", "score": 0}
{"id": "eqasc_validation_107", "prediction": "all x.((Vehicle(x) & OnIncline(x)) -> BrakeInvolved(x))", "score": 0}
{"id": "eqasc_validation_107", "prediction": "all x.((Vehicle(x) & OnIndividual(x)) -> BrakesInvolved(x))", "score": 0}
{"id": "eqasc_validation_107", "prediction": "all x y.((Vehicle(x) & Incline(y)) -> BrakeInvolved(x,y))", "score": 0}
{"id": "eqasc_validation_107", "prediction": "all x.((Vehicle(x) & OnIndication(x)) -> BrakesInvolved(x))", "score": 0}
{"id": "eqasc_validation_107", "prediction": "all x.((Vehicle(x) & OnInincline(x)) -> BrakesInvolved(x))", "score": 0}
{"id": "eqasc_validation_107", "prediction": "all x y.((Vehicle(x) & Inincline(x)) -> BrakesInvolved(x))", "score": 0}
{"id": "eqasc_validation_108", "prediction": "all x y z.((Vehicle(x) & Incline(y) & Friction(z)) -> StopsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_108", "prediction": "all x y z.((Vehicle(x) & Inincline(y) & Friction(z)) -> StopsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_108", "prediction": "all x y z.((Vehicle(x) & Indice(y) & Friction(z)) -> StopsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_108", "prediction": "all x y.((Vehicle(x) & Incline(y)) -> UsesFrictionToStopOn(x,y))", "score": 0}
{"id": "eqasc_validation_108", "prediction": "all x y.((Vehicle(x) & Inincline(y)) -> UsesFrictionToStopOn(x,y))", "score": 0}
{"id": "eqasc_validation_108", "prediction": "all x y.((Vehicle(x) & Inincline(y)) -> UsesFrictionToStop(x,y))", "score": 0}
{"id": "eqasc_validation_108", "prediction": "all x y.((Vehicle(x) & Incline(y)) -> UsesFrictionToStop(x,y))", "score": 0}
{"id": "eqasc_validation_108", "prediction": "all x y.((Vehicle(x) & Incline(y)) -> UsedToStopOn(x,y))", "score": 0}
{"id": "eqasc_validation_108", "prediction": "all x y z.((Vehicle(x) & Inincline(y) & Friction(z)) -> StopsOn(x,z))", "score": 0}
{"id": "eqasc_validation_108", "prediction": "all x y.((Vehicle(x) & Inincline(y)) -> UsedToStopOn(x,y))", "score": 0}
{"id": "eqasc_validation_108", "prediction": "all x y z.((Vehicle(x) & Incline(y) & Friction(z)) -> UsedToStopOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_108", "prediction": "all x y.((Vehicle(x) & Inincline(y)) -> UsedForStop(x,y))", "score": 0}
{"id": "eqasc_validation_108", "prediction": "all x y.((Vehicle(x) & Inincline(y)) -> UsedToStop(x,y))", "score": 0}
{"id": "eqasc_validation_108", "prediction": "all x y.((Vehicle(x) & Incline(y)) -> UsedForStop(x,y))", "score": 0}
{"id": "eqasc_validation_108", "prediction": "all x y.((Vehicle(x) & Incline(y)) -> StopsOn(x,y))", "score": 0}
{"id": "eqasc_validation_109", "prediction": "all x.((Fishtailing(x) | SevereBrakingAtHighSpeed(x)) -> (CausesJackknifing(x) & CausesRollover(x)))", "score": 0}
{"id": "eqasc_validation_109", "prediction": "all x.((Fishtailing(x) | SevereBraking(x)) -> (CausesJackknifing(x) & CausesRollover(x)))", "score": 0}
{"id": "eqasc_validation_109", "prediction": "all x.((Fishtailing(x) | SevereBrakingAtHighSpeed(x)) -> CausesJackknifingAndRollover(x))", "score": 0}
{"id": "eqasc_validation_109", "prediction": "all x.((Fishtailing(x) | SevereBraking(x) & HighSpeed(x)) -> (CausesJackknifing(x) & CausesRollover(x)))", "score": 0}
{"id": "eqasc_validation_109", "prediction": "all x y.((Fishtailing(x) | SevereBrakingAtHighSpeed(x)) -> (CausesJackknifing(y) & CausesRollover(y)))", "score": 0}
{"id": "eqasc_validation_109", "prediction": "all x y.((Fishtailing(x) | SevereBraking(x) & HighSpeed(y)) -> (CausesJackknifing(x) & CausesRollover(x)))", "score": 0}
{"id": "eqasc_validation_109", "prediction": "all x.((Fishtailing(x) | SevereBreathingAtHighSpeed(x)) -> (CausesJackknifing(x) & CausesRollover(x)))", "score": 0}
{"id": "eqasc_validation_109", "prediction": "all x.((Fishing(x) | SevereBrakingAtHighSpeed(x)) -> (CausesJackknifing(x) & CausesRollover(x)))", "score": 0}
{"id": "eqasc_validation_109", "prediction": "all x.((Fishtailing(x) | SevereBrakingHighSpeed(x)) -> (CausesJackknifing(x) & CausesRollover(x)))", "score": 0}
{"id": "eqasc_validation_109", "prediction": "all x.((Fishtailing(x) | SevereBrakingAtHighSpeed(x)) -> (CausesJackknifing(x) & Rollover(x)))", "score": 0}
{"id": "eqasc_validation_109", "prediction": "all x.((Fishtailing(x) | SevereBreathing(x)) -> (CausesJackknifing(x) & CausesRollover(x)))", "score": 0}
{"id": "eqasc_validation_109", "prediction": "all x.((Fishtailing(x) | SevereBreakout(x)) -> (CausesJackknifing(x) & CausesRollover(x)))", "score": 0}
{"id": "eqasc_validation_109", "prediction": "all x.((Fishtailing(x) | SevereBreaching(x)) -> (CausesJackknifing(x) & CausesRollover(x)))", "score": 0}
{"id": "eqasc_validation_109", "prediction": "all x.((Fishing(x) | SevereBraking(x)) -> (CausesJackknifing(x) & CausesRollover(x)))", "score": 0}
{"id": "eqasc_validation_109", "prediction": "all x.((Fishtailing(x) | SevereBraking(x)) -> (CausesJackknifing(x) | CausesRollover(x)))", "score": 0}
{"id": "eqasc_validation_109", "prediction": "all x.((Fishtailing(x) | SevereBrakingAtHighSpeed(x)) -> CausesJackknifing(x) & CausesRollover(x))", "score": 0}
{"id": "eqasc_validation_110", "prediction": "all x.(Friction(x) -> (CausesJackknifing(x) & CausesRollover(x)))", "score": 0}
{"id": "eqasc_validation_110", "prediction": "all x y.((Friction(x) & Vehicle(y)) -> (CausesJackknifing(x,y) & CausesRollover(x,y)))", "score": 0}
{"id": "eqasc_validation_110", "prediction": "all x y.((Friction(x) & Vehicle(y)) -> (CausesJackknifing(x) & CausesRollover(x)))", "score": 0}
{"id": "eqasc_validation_110", "prediction": "all x y.((Friction(x) & Vehicle(y)) -> (CausesJackknifing(x,y) | CausesRollover(x,y)))", "score": 0}
{"id": "eqasc_validation_110", "prediction": "all x y z.((Friction(x) & Vehicle(y) & Vehicle(z)) -> (CausesJackknifing(x,y) & CausesRollover(x,z)))", "score": 0}
{"id": "eqasc_validation_110", "prediction": "all x y.((Friction(x) & Vehicle(y)) -> (CausesJackknifing(x) & CausesRollover(x,y)))", "score": 0}
{"id": "eqasc_validation_110", "prediction": "all x.(Friction(x) -> (CausesJackknifing(x) & CausesRollover(x) & InVehicle(x)))", "score": 0}
{"id": "eqasc_validation_110", "prediction": "all x y.((Fruit(x) & Vehicle(y)) -> (CausesJackknifing(x,y) & CausesRollover(x,y)))", "score": 0}
{"id": "eqasc_validation_110", "prediction": "all x.((Friction(x) & Vehicle(y)) -> (CausesJackknifing(x,y) & CausesRollover(x,y)))", "score": 0}
{"id": "eqasc_validation_110", "prediction": "all x.(Friction(x) -> (CausesJackknifing(x) & CausesRolloverInVehicle(x)))", "score": 0}
{"id": "eqasc_validation_110", "prediction": "all x y z.((Friction(x) & Vehicle(y) & Vehicle(z)) -> (CausesJackknifing(x,y) | CausesRollover(x,z)))", "score": 0}
{"id": "eqasc_validation_110", "prediction": "all x.((Friction(x) & Vehicle(y)) -> (CausesJackknifing(x) & CausesRollover(x)))", "score": 0}
{"id": "eqasc_validation_110", "prediction": "all x.(Friction(x) -> (CausesJackknifing(x) | CausesRollover(x)))", "score": 0}
{"id": "eqasc_validation_110", "prediction": "all x.(Friction(x) -> (CausesJackknifing(x) & CausesRollover(x) & Vehicle(x)))", "score": 0}
{"id": "eqasc_validation_110", "prediction": "all x y z.((Friction(x) & Vehicle(y) & Vehicle(z)) -> (CausesJackknifing(x,z) & CausesRollover(x,y)))", "score": 0}
{"id": "eqasc_validation_110", "prediction": "all x y.((Friction(x) & Vehicle(y)) -> CausesJackknifingAndRollover(x,y))", "score": 0}
{"id": "eqasc_validation_111", "prediction": "all x.(BrakeDust(x) -> ProducedDuringFrictionOfBraking(x))", "score": 0}
{"id": "eqasc_validation_111", "prediction": "all x.(BrakeDust(x) -> ProducedByFrictionOfBraking(x))", "score": 0}
{"id": "eqasc_validation_111", "prediction": "all x y.((BrakeDust(x) & BrakeFriction(y)) -> ProducedDuring(x,y))", "score": 0}
{"id": "eqasc_validation_111", "prediction": "all x.(BrakeDust(x) -> ProducedDuringFrictionOfBreathing(x))", "score": 0}
{"id": "eqasc_validation_111", "prediction": "all x y z.((BrakeDust(x) & Friction(y) & Braking(z)) -> ProducedDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_111", "prediction": "all x y.((BrakeDust(x) & BrakingFriction(y)) -> ProducedDuring(x,y))", "score": 0}
{"id": "eqasc_validation_111", "prediction": "all x y.((BrakeDust(x) & FrictionOfBraking(y)) -> ProducedDuring(x,y))", "score": 0}
{"id": "eqasc_validation_111", "prediction": "all x y.((BrakeDust(x) & Braking(y)) -> ProducedDuringFriction(x,y))", "score": 0}
{"id": "eqasc_validation_111", "prediction": "all x.(BrakeDust(x) -> ProducedDuringFrictionOfBreaching(x))", "score": 0}
{"id": "eqasc_validation_111", "prediction": "all x y.((BrakeDust(x) & FrictionOfBraking(y)) -> Produced(x,y))", "score": 0}
{"id": "eqasc_validation_111", "prediction": "all x y.((BrakeDust(x) & FrictionOfBreathing(y)) -> ProducedDuring(x,y))", "score": 0}
{"id": "eqasc_validation_111", "prediction": "all x y.((BrakeDust(x) & Friction(y)) -> ProducedDuring(x,y))", "score": 0}
{"id": "eqasc_validation_111", "prediction": "all x y.((BrakeDust(x) & Braking(y)) -> ProducedDuringFrictionOf(x,y))", "score": 0}
{"id": "eqasc_validation_111", "prediction": "all x y.((BrakeDust(x) & FrictionOfBraking(y)) -> ProducedBy(x,y))", "score": 0}
{"id": "eqasc_validation_111", "prediction": "all x y.((BrakeDust(x) & FrictionOfBreathing(y)) -> Produced(x,y))", "score": 0}
{"id": "eqasc_validation_111", "prediction": "all x y.((BrakeDust(x) & FrictionOfBreaching(y)) -> ProducedDuring(x,y))", "score": 0}
{"id": "eqasc_validation_112", "prediction": "all x.((Vehicle(x) & Stops(x)) -> ProducesBrakeDust(x))", "score": 0}
{"id": "eqasc_validation_112", "prediction": "all x y.((Vehicle(x) & Vehicle(y) & Stops(x,y)) -> ProducesBrakeDust(x))", "score": 0}
{"id": "eqasc_validation_112", "prediction": "all x y.((Vehicle(x) & Vehicle(y)) -> StopsProducesBrakeDust(x,y))", "score": 0}
{"id": "eqasc_validation_112", "prediction": "all x y.((Vehicle(x) & Stopping(x,y)) -> ProducesBrakeDust(x))", "score": 0}
{"id": "eqasc_validation_112", "prediction": "all x y.((Vehicle(x) & Stops(x,y)) -> ProducesBrakeDust(x))", "score": 0}
{"id": "eqasc_validation_112", "prediction": "all x y.((Vehicle(x) & Vehicle(y) & Stops(x,y)) -> ProducesBrakeDust(x,y))", "score": 0}
{"id": "eqasc_validation_112", "prediction": "all x.(StoppingVehicle(x) -> ProducesBrakeDust(x))", "score": 0}
{"id": "eqasc_validation_112", "prediction": "all x.((Vehicle(x) & Stops(x,y)) -> ProducesBrakeDust(x))", "score": 0}
{"id": "eqasc_validation_112", "prediction": "all x.(StopsVehicle(x) -> ProducesBrakeDust(x))", "score": 0}
{"id": "eqasc_validation_112", "prediction": "all x y.((Vehicle(x) & Stops(x,y)) -> ProducesBrakeDust(y))", "score": 0}
{"id": "eqasc_validation_112", "prediction": "all x y.((Vehicle(x) & Stopping(x,y)) -> ProducesBrakeDust(y))", "score": 0}
{"id": "eqasc_validation_112", "prediction": "all x y z.((Vehicle(x) & Stopping(y) & BrakeDust(z)) -> Produces(x,z))", "score": 0}
{"id": "eqasc_validation_112", "prediction": "all x y z.((Vehicle(x) & Stopping(x,y) & BrakeDust(z)) -> Produces(x,z))", "score": 0}
{"id": "eqasc_validation_112", "prediction": "all x.((Vehicle(x) & Stops(x,y)) -> ProducesBrakeDust(y))", "score": 0}
{"id": "eqasc_validation_112", "prediction": "all x y z.((Vehicle(x) & Stopping(y) & BrakeDust(z)) -> Produces(x,y,z))", "score": 0}
{"id": "eqasc_validation_112", "prediction": "all x y.((Vehicle(x) & Stopping(x,y)) -> ProducesBrakeDust(x,y))", "score": 0}
{"id": "eqasc_validation_113", "prediction": "all x y.((Truck(x) & Truck(y)) -> AppliesBrakesToRearWheels(x,y))", "score": 0}
{"id": "eqasc_validation_113", "prediction": "all x.((Truck(x) & No.2(x)) -> AppliesBrakesToRearWheels(x))", "score": -1}
{"id": "eqasc_validation_113", "prediction": "all x.((Truck(x) & No.2Truck(x)) -> AppliesBrakesToRearWheels(x))", "score": -1}
{"id": "eqasc_validation_113", "prediction": "all x y.((Truck(x) & Truck(y)) -> BrakesAppliedToRearWheels(x,y))", "score": 0}
{"id": "eqasc_validation_113", "prediction": "all x.((Truck(x) & No2(x)) -> AppliesBrakesToRearWheels(x))", "score": 0}
{"id": "eqasc_validation_113", "prediction": "all x y.((Truck(x) & Truck(y)) -> BrakesApplication(x,y))", "score": 0}
{"id": "eqasc_validation_113", "prediction": "all x.((Truck(x) & No.2(x)) -> BrakesAppliedToRearWheels(x))", "score": -1}
{"id": "eqasc_validation_113", "prediction": "all x y z.((Truck(x) & Truck(y) & Brake(z)) -> AppliesToRearWheels(x,y,z))", "score": 0}
{"id": "eqasc_validation_113", "prediction": "all x.((Truck(x) & No.2Truck(x)) -> BrakesAppliedToRearWheels(x))", "score": -1}
{"id": "eqasc_validation_113", "prediction": "all x y z.((Truck(x) & Brake(y) & Wheels(z)) -> AppliesTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_113", "prediction": "all x y.((Truck(x) & Truck(y)) -> (AppliesBrakesToRearWheels(x,y) & No.2Truck(x)))", "score": -1}
{"id": "eqasc_validation_113", "prediction": "all x y z.((Truck(x) & Brake(y) & Wheels(z) & No.2(x)) -> AppliesTo(y,z))", "score": -1}
{"id": "eqasc_validation_113", "prediction": "all x y.((Truck(x) & Truck(y)) -> (AppliesBrakesToRearWheels(x,y) & On(x,y)))", "score": 0}
{"id": "eqasc_validation_113", "prediction": "all x y.((Truck(x) & Truck(y)) -> (AppliesBrakesToRearWheels(x,y) & No.2Truck(y)))", "score": -1}
{"id": "eqasc_validation_113", "prediction": "all x y.((Truck(x) & Truck(y)) -> (AppliesBrakesToRearWheels(x,y)))", "score": 0}
{"id": "eqasc_validation_114", "prediction": "all x.(Friction(x) -> UsedForStoppingTrucks(x))", "score": 0}
{"id": "eqasc_validation_114", "prediction": "all x y.((Friction(x) & Truck(y)) -> Stops(x,y))", "score": 0}
{"id": "eqasc_validation_114", "prediction": "all x y.((Friction(x) & Truck(y)) -> UsedForStopping(x,y))", "score": 0}
{"id": "eqasc_validation_114", "prediction": "all x y z.((Friction(x) & Truck(y) & Truck(z)) -> Stops(x,y,z))", "score": 0}
{"id": "eqasc_validation_114", "prediction": "all x.(Friction(x) -> StopsTrucks(x))", "score": 0}
{"id": "eqasc_validation_114", "prediction": "all x.((Friction(x) & Truck(y)) -> Stops(x,y))", "score": 0}
{"id": "eqasc_validation_114", "prediction": "all x.((Friction(x) & Truck(y)) -> UsedForStopping(x,y))", "score": 0}
{"id": "eqasc_validation_114", "prediction": "all x y z.((Friction(x) & Truck(y) & Truck(z)) -> UsedForStopping(x,y,z))", "score": 0}
{"id": "eqasc_validation_114", "prediction": "all x y.((Truck(x) & Truck(y)) -> (UsedForStopping(x,y) & UsedForStopping(x,y)))", "score": 0}
{"id": "eqasc_validation_114", "prediction": "all x y.((Friction(x) & Truck(y) & UsedForStopping(x,y)) -> Stops(x,y))", "score": 0}
{"id": "eqasc_validation_114", "prediction": "all x y.((Truck(x) & Truck(y)) -> UsedForStopping(x,y))", "score": 0}
{"id": "eqasc_validation_114", "prediction": "all x y.((Truck(x) & Truck(y)) -> (UsedForStopping(x,y) | UsedForStopping(x,y)))", "score": 0}
{"id": "eqasc_validation_114", "prediction": "all x y z.((Friction(x) & Truck(y) & Truck(z) & UsedForStopping(x,y,z)) -> Stops(x,y,z))", "score": 0}
{"id": "eqasc_validation_114", "prediction": "all x y z.((Truck(x) & Truck(y) & Truck(z)) -> (UsedForStopping(x,y,z) & UsedForStopping(x,y)))", "score": 0}
{"id": "eqasc_validation_114", "prediction": "all x y z.((Truck(x) & Truck(y) & Truck(z)) -> (UsedForStopping(x,y,z) & UsedForStopping(x,y,z)))", "score": 0}
{"id": "eqasc_validation_114", "prediction": "all x y.((Friction(x) & Truck(y) & UsedForStopping(x,y)) -> UsedForStopping(x,y))", "score": 0}
{"id": "eqasc_validation_115", "prediction": "all x.(Friction(x) -> OpposesMotion(x))", "score": 0}
{"id": "eqasc_validation_115", "prediction": "all x y.((Friction(x) & Motion(y)) -> Opposes(x,y))", "score": 0}
{"id": "eqasc_validation_115", "prediction": "all x.(Friction(x) -> (OpposesMotion(x) & Force(x)))", "score": 0}
{"id": "eqasc_validation_115", "prediction": "all x.((Friction(x) & OpposesMotion(x)) -> Force(x))", "score": 0}
{"id": "eqasc_validation_115", "prediction": "all x.((Force(x) & OpposesMotion(x)) -> Friction(x))", "score": 0}
{"id": "eqasc_validation_115", "prediction": "all x y z.((Friction(x) & Motion(y) & Motion(z)) -> Opposes(x,y,z))", "score": 0}
{"id": "eqasc_validation_115", "prediction": "all x y z.((Friction(x) & Motion(y) & Force(z)) -> Opposes(x,z))", "score": 0}
{"id": "eqasc_validation_115", "prediction": "all x.(Friction(x) -> (OpposesMotion(x) | OpposesMotion(x)))", "score": 0}
{"id": "eqasc_validation_115", "prediction": "all x.(Fruit(x) -> OpposesMotion(x))", "score": 0}
{"id": "eqasc_validation_115", "prediction": "all x y z.((Friction(x) & Motion(y) & Force(z)) -> Opposes(x,y,z))", "score": 0}
{"id": "eqasc_validation_115", "prediction": "all x.(Friction(x) -> (OpposesMotion(x) & -OpposesMotion(x)))", "score": 0}
{"id": "eqasc_validation_115", "prediction": "all x.(Friction(x) -> OppositeMotion(x))", "score": 0}
{"id": "eqasc_validation_116", "prediction": "all x.((Force(x) & OpposesMotion(x)) -> StopsVehiclesByBrakes(x))", "score": 0}
{"id": "eqasc_validation_116", "prediction": "all x.((Force(x) & OpposesMotion(x)) -> UsedForStoppingVehiclesByBrakes(x))", "score": 0}
{"id": "eqasc_validation_116", "prediction": "all x.((Force(x) & OpposesMotion(x)) -> UsedForStopVehiclesByBrakes(x))", "score": 0}
{"id": "eqasc_validation_116", "prediction": "all x.((Force(x) & OpposesMotion(x)) -> UsedForStopByBrakes(x))", "score": 0}
{"id": "eqasc_validation_116", "prediction": "all x y.((Force(x) & Motion(y) & Opposes(x,y)) -> StopsVehiclesByBrakes(x))", "score": 0}
{"id": "eqasc_validation_116", "prediction": "all x.((Force(x) & OpposesMotion(x)) -> UsedForStopsVehiclesByBrakes(x))", "score": 0}
{"id": "eqasc_validation_116", "prediction": "all x y.((Force(x) & OpposesMotion(x) & Vehicle(y)) -> UsedForStopByBrakes(x,y))", "score": 0}
{"id": "eqasc_validation_116", "prediction": "all x.((Force(x) & OpposesMotion(x)) -> UsedForStoppingVehicles(x))", "score": 0}
{"id": "eqasc_validation_116", "prediction": "all x y.((Force(x) & OpposesMotion(x) & Vehicle(y)) -> StopsByBrakes(x,y))", "score": 0}
{"id": "eqasc_validation_116", "prediction": "all x.(OpposesMotion(x) -> StopsVehiclesByBrakes(x))", "score": 0}
{"id": "eqasc_validation_116", "prediction": "all x.((Force(x) & OpposesMotion(x)) -> StopsVehiclesByBreaks(x))", "score": 0}
{"id": "eqasc_validation_116", "prediction": "all x.((Force(x) & OpposesMotion(x)) -> UsedForStopVehicles(x))", "score": 0}
{"id": "eqasc_validation_116", "prediction": "all x y.((Force(x) & OpposesMotion(x)) -> StopsVehiclesByBrakes(x))", "score": 0}
{"id": "eqasc_validation_116", "prediction": "all x.((Force(x) & OpposesMotion(x)) -> StopsVehicles(x))", "score": 0}
{"id": "eqasc_validation_116", "prediction": "all x.((Force(x) & OpposesMotion(x)) -> UsedForStoppingVehiclesByBreaks(x))", "score": 0}
{"id": "eqasc_validation_116", "prediction": "all x y.((Force(x) & Motion(y) & Opposes(x,y)) -> UsedForStopByBrakes(x))", "score": 0}
{"id": "eqasc_validation_117", "prediction": "all x.(SmootherSurface(x) -> LessFriction(x))", "score": 0}
{"id": "eqasc_validation_117", "prediction": "all x.((SmootherSurface(x) & LessFriction(x)) -> Smoother(x))", "score": 0}
{"id": "eqasc_validation_117", "prediction": "all x.((SmootherSurface(x) & LessFriction(x)) -> SmootherSurface(x))", "score": 0}
{"id": "eqasc_validation_117", "prediction": "all x y.((SmootherSurface(x) & SmootherSurface(y)) -> LessFriction(x))", "score": 0}
{"id": "eqasc_validation_117", "prediction": "all x y.((SmootherSurface(x) & SmootherSurface(y)) -> LessFriction(x,y))", "score": 0}
{"id": "eqasc_validation_117", "prediction": "all x y.((SmootherSurface(x) & SmootherSurface(y)) -> LessFriction(y))", "score": 0}
{"id": "eqasc_validation_117", "prediction": "all x y.((Smoother(x) & Surface(y)) -> LessFriction(x,y))", "score": 0}
{"id": "eqasc_validation_117", "prediction": "all x.(ShaferSurface(x) -> LessFriction(x))", "score": 0}
{"id": "eqasc_validation_117", "prediction": "all x y.((SmootherSurface(x) & SmootherSurface(x)) -> LessFriction(y))", "score": 0}
{"id": "eqasc_validation_117", "prediction": "all x.(Smoother(x) -> LessFriction(x))", "score": 0}
{"id": "eqasc_validation_117", "prediction": "all x y.((Smoother(x) & Surface(y) & LessFriction(y)) -> Smoother(x,y))", "score": 0}
{"id": "eqasc_validation_117", "prediction": "all x.((Smoother(x) & LessFriction(x)) -> SmootherSurface(x))", "score": 0}
{"id": "eqasc_validation_117", "prediction": "all x.(ShaperSurface(x) -> LessFriction(x))", "score": 0}
{"id": "eqasc_validation_117", "prediction": "all x.((Smoother(x) & Smoother(x)) -> LessFriction(x))", "score": 0}
{"id": "eqasc_validation_117", "prediction": "all x.((Smoother(x) & SmootherSurface(x)) -> LessFriction(x))", "score": 0}
{"id": "eqasc_validation_117", "prediction": "all x y.((Smoother(x) & Surface(y)) -> LessFriction(x))", "score": 0}
{"id": "eqasc_validation_118", "prediction": "all x y.((Brake(x) & Vehicle(y) & SmoothSurface(y)) -> LessEffectiveAtStop(x,y))", "score": 0}
{"id": "eqasc_validation_118", "prediction": "all x.(Brake(x) -> (StopsVehiclesOnSmoothSurfaces(x) & LessEffectiveAtStopsVehiclesOnSmoothSurfaces(x)))", "score": 0}
{"id": "eqasc_validation_118", "prediction": "all x y.((Brake(x) & Vehicle(y) & SmoothSurface(y)) -> LessEffective(x,y))", "score": 0}
{"id": "eqasc_validation_118", "prediction": "all x y.((Brake(x) & Vehicle(y) & SmoothSurface(y)) -> LessEffectiveAtStopping(x,y))", "score": 0}
{"id": "eqasc_validation_118", "prediction": "all x y z.((Brake(x) & Vehicle(y) & SmoothSurface(z)) -> LessEffectiveAtStop(x,y,z))", "score": 0}
{"id": "eqasc_validation_118", "prediction": "all x y.((Brake(x) & Vehicle(y)) -> (StopsOnSmoothSurfaces(x,y) & LessEffectiveAtStopsOnSmoothSurfaces(x,y)))", "score": 0}
{"id": "eqasc_validation_118", "prediction": "all x y z.((Brake(x) & Vehicle(y) & SmoothSurface(z)) -> LessEffectiveAtStopping(x,y,z))", "score": 0}
{"id": "eqasc_validation_118", "prediction": "all x y z.((Brake(x) & Vehicle(y) & SmoothSurface(z)) -> LessEffective(x,y,z))", "score": 0}
{"id": "eqasc_validation_118", "prediction": "all x y.((Brake(x) & Vehicle(y)) -> (StopsOnSmoothSurface(x,y) & LessEffectiveAtStopsOnSmoothSurface(x,y)))", "score": 0}
{"id": "eqasc_validation_118", "prediction": "all x.(Brake(x) -> (StopsVehiclesOnSmoothSurfaces(x) & LessEffectiveAtStopsVehicles(x)))", "score": 0}
{"id": "eqasc_validation_118", "prediction": "all x y.((Brake(x) & Vehicle(y)) -> StopsOnSmoothSurfaces(x,y))", "score": 0}
{"id": "eqasc_validation_118", "prediction": "all x y.((Brake(x) & Vehicle(y)) -> LessEffectiveAtStoppingOnSmoothSurfaces(x,y))", "score": 0}
{"id": "eqasc_validation_118", "prediction": "all x y z.((Brake(x) & Vehicle(y) & SmoothSurface(z)) -> -EffectiveAtStop(x,y,z))", "score": 0}
{"id": "eqasc_validation_118", "prediction": "all x.(Brake(x) -> (StopsVehiclesOnSmoothSurfaces(x) & LessEffective(x)))", "score": 0}
{"id": "eqasc_validation_118", "prediction": "all x.(Brake(x) -> LessEffectiveAtStoppingVehiclesOnSmoothSurfaces(x))", "score": 0}
{"id": "eqasc_validation_118", "prediction": "all x y.((Brake(x) & Vehicle(y) & SmoothSurface(y)) -> -EffectiveAtStop(x,y))", "score": 0}
{"id": "eqasc_validation_119", "prediction": "all x y.((Car(x) & Car(y)) -> StopsByBrakes(x,y))", "score": 0}
{"id": "eqasc_validation_119", "prediction": "all x y.((Car(x) & Car(y)) -> UsedForStoppingByBrakes(x,y))", "score": 0}
{"id": "eqasc_validation_119", "prediction": "all x y z.((Car(x) & Car(y) & Brake(z)) -> StopsBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_119", "prediction": "all x y z.((Car(x) & Brake(y) & Friction(z)) -> StopsBy(x,y,z))", "score": 4}
{"id": "eqasc_validation_119", "prediction": "all x y z.((Car(x) & Car(y) & Brake(z)) -> UsesFrictionForStopping(x,y,z))", "score": 0}
{"id": "eqasc_validation_119", "prediction": "all x y z.((Car(x) & Car(y) & Brake(z)) -> UsedForStopping(x,y,z))", "score": 0}
{"id": "eqasc_validation_119", "prediction": "all x y.((Car(x) & Car(y)) -> (StopsByBrakes(x,y) & UsesFriction(x,y)))", "score": 0}
{"id": "eqasc_validation_119", "prediction": "all x y z.((Car(x) & Car(y) & Brake(z)) -> UsedForStoppingBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_119", "prediction": "all x y z.((Car(x) & Car(y) & Brakes(z)) -> StopsBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_119", "prediction": "all x y.((Car(x) & Car(y)) -> StopsByBreaks(x,y))", "score": 0}
{"id": "eqasc_validation_119", "prediction": "all x y.((Car(x) & Car(y)) -> (UsedForStoppingByBrakes(x,y)))", "score": 0}
{"id": "eqasc_validation_119", "prediction": "all x y z.((Car(x) & Brake(y) & Friction(z)) -> Stops(x,y,z))", "score": 4}
{"id": "eqasc_validation_119", "prediction": "all x y.((Car(x) & Car(y)) -> (UsedForStopping(x,y) & Brakes(x)))", "score": 0}
{"id": "eqasc_validation_119", "prediction": "all x y z.((Car(x) & Car(y) & Brake(z)) -> Stops(x,y,z))", "score": 0}
{"id": "eqasc_validation_119", "prediction": "all x y.((Car(x) & Car(y)) -> (UsedForStopping(x,y) & Brakes(y)))", "score": 0}
{"id": "eqasc_validation_119", "prediction": "all x y.((Car(x) & Car(y)) -> (UsedForStopping(x,y) & Brakes(x,y)))", "score": 0}
{"id": "eqasc_validation_120", "prediction": "all x.(Friction(x) -> ProducesHeat(x))", "score": 0}
{"id": "eqasc_validation_120", "prediction": "all x y.((Friction(x) & Heat(y)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_validation_120", "prediction": "all x.(Fruit(x) -> ProducesHeat(x))", "score": 0}
{"id": "eqasc_validation_120", "prediction": "all x y z.((Friction(x) & Heat(y) & Heat(z)) -> Produces(x,y,z))", "score": 0}
{"id": "eqasc_validation_120", "prediction": "all x y.((Fruit(x) & Heat(y)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_validation_120", "prediction": "all x.(Frection(x) -> ProducesHeat(x))", "score": 0}
{"id": "eqasc_validation_120", "prediction": "all x y z.((Friction(x) & Heat(y) & Heat(z)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_validation_120", "prediction": "all x y.((Friction(x) & Heat(y)) -> Produce(x,y))", "score": 0}
{"id": "eqasc_validation_120", "prediction": "all x.((Friction(x) & Heat(y)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_validation_120", "prediction": "all x y z.((Friction(x) & Heat(y) & Friction(z)) -> Produces(x,y,z))", "score": 0}
{"id": "eqasc_validation_120", "prediction": "all x.((Friction(x) & Heat(x)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_validation_120", "prediction": "all x.((Friction(x) & Heat(x)) -> Produces(x,Friction))", "score": 0}
{"id": "eqasc_validation_120", "prediction": "all x y z.((Friction(x) & Heat(y) & Heat(z)) -> Produce(x,y,z))", "score": 0}
{"id": "eqasc_validation_120", "prediction": "all x y z.((Friction(x) & Heat(y) & Friction(z)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_validation_120", "prediction": "all x.(Fraction(x) -> ProducesHeat(x))", "score": 0}
{"id": "eqasc_validation_121", "prediction": "all x y.((Vehicle(x) & Brakes(y) & StopsWith(x,y)) -> GeneratesHeat(x))", "score": 0}
{"id": "eqasc_validation_121", "prediction": "all x.((Vehicle(x) & StopsWithBrakes(x)) -> GeneratesHeat(x))", "score": 0}
{"id": "eqasc_validation_121", "prediction": "all x y.((Vehicle(x) & Brake(y) & StopsWith(x,y)) -> GeneratesHeat(x))", "score": 0}
{"id": "eqasc_validation_121", "prediction": "all x y.((Vehicle(x) & Vehicle(y) & HasBrakes(x,y)) -> GeneratesHeat(x,y))", "score": 0}
{"id": "eqasc_validation_121", "prediction": "all x y.((Vehicle(x) & Brakes(y) & StopsWith(x,y)) -> GeneratesHeat(x,y))", "score": 0}
{"id": "eqasc_validation_121", "prediction": "all x y.((Vehicle(x) & Vehicle(y) & StopsWithBrakes(x,y)) -> GeneratesHeat(x))", "score": 0}
{"id": "eqasc_validation_121", "prediction": "all x y.((Vehicle(x) & Vehicle(y) & StopsWithBrakes(x,y)) -> GeneratesHeat(x,y))", "score": 0}
{"id": "eqasc_validation_121", "prediction": "all x y.((Vehicle(x) & Vehicle(y) & HasBrakes(x,y)) -> GeneratesHeat(x))", "score": 0}
{"id": "eqasc_validation_121", "prediction": "all x y z.((Vehicle(x) & Brake(y) & Brake(z) & StopsWith(x,y,z)) -> GeneratesHeat(x))", "score": 0}
{"id": "eqasc_validation_121", "prediction": "all x y.((Vehicle(x) & Brake(y) & StopsWith(x,y)) -> GeneratesHeat(x,y))", "score": 0}
{"id": "eqasc_validation_121", "prediction": "all x y z.((Vehicle(x) & Brakes(y) & StopsWith(x,y)) -> GeneratesHeat(x,z))", "score": 0}
{"id": "eqasc_validation_121", "prediction": "all x y.((Vehicle(x) & Brakes(y) & StopsWith(x,y)) -> HeatGenerates(x))", "score": 0}
{"id": "eqasc_validation_121", "prediction": "all x y.((Vehicle(x) & Brakes(y) & StopsWith(x,y)) -> HeatGenerates(x,y))", "score": 0}
{"id": "eqasc_validation_121", "prediction": "all x y z.((Vehicle(x) & Vehicle(y) & Brakes(z) & StopsWith(x,y,z)) -> GeneratesHeat(x))", "score": 0}
{"id": "eqasc_validation_121", "prediction": "all x y z.((Vehicle(x) & Brakes(y) & StopsWith(x,y)) -> HeatGenerates(x,z))", "score": 0}
{"id": "eqasc_validation_121", "prediction": "all x.((Vehicle(x) & HasBrakes(x)) -> GeneratesHeat(x))", "score": 0}
{"id": "eqasc_validation_122", "prediction": "all x.((Truck(x) | Car(x)) -> Vehicle(x))", "score": 33}
{"id": "eqasc_validation_122", "prediction": "all x y.((Truck(x) & Car(y)) -> Vehicle(x))", "score": 2}
{"id": "eqasc_validation_122", "prediction": "all x y.((Truck(x) | Car(y)) -> Vehicle(x))", "score": 37}
{"id": "eqasc_validation_122", "prediction": "all x y.((Truck(x) & Car(y)) -> (Vehicle(x) & Vehicle(y)))", "score": 13}
{"id": "eqasc_validation_122", "prediction": "all x.((Taxi(x) | Car(x)) -> Vehicle(x))", "score": 7}
{"id": "eqasc_validation_122", "prediction": "all x y z.((Truck(x) & Car(y) & Truck(z)) -> Vehicle(x))", "score": 2}
{"id": "eqasc_validation_122", "prediction": "all x.((Track(x) | Car(x)) -> Vehicle(x))", "score": 7}
{"id": "eqasc_validation_122", "prediction": "all x y z.((Truck(x) & Car(y) & Truck(z)) -> (Vehicle(x) | Vehicle(y)))", "score": 0}
{"id": "eqasc_validation_122", "prediction": "all x y.((Truck(x) & Car(y)) -> Vehicle(x,y))", "score": 0}
{"id": "eqasc_validation_122", "prediction": "all x y z.((Truck(x) & Car(y) & Vehicle(z)) -> ((Truck(x) | Car(x)) & Vehicle(y)))", "score": 0}
{"id": "eqasc_validation_122", "prediction": "all x y z.((Truck(x) & Car(y) & Vehicle(z)) -> (Vehicle(x) | Vehicle(y)))", "score": 0}
{"id": "eqasc_validation_122", "prediction": "all x y z.((Truck(x) & Car(y) & Vehicle(z)) -> (Vehicle(x) & Vehicle(y)))", "score": 0}
{"id": "eqasc_validation_122", "prediction": "all x.((Turbo(x) | Car(x)) -> Vehicle(x))", "score": 7}
{"id": "eqasc_validation_122", "prediction": "all x y z.((Truck(x) & Car(y) & Vehicle(z)) -> (Truck(x) | Car(y)))", "score": 0}
{"id": "eqasc_validation_122", "prediction": "all x.((Truck(x) & Car(x)) -> Vehicle(x))", "score": 0}
{"id": "eqasc_validation_122", "prediction": "all x y z.((Truck(x) & Car(y) & Truck(z)) -> (Vehicle(x) & Vehicle(y)))", "score": 13}
{"id": "eqasc_validation_123", "prediction": "all x y.((Friction(x) & Truck(y) & Car(y) & UsesBrakes(x,y)) -> Stops(x,y))", "score": 0}
{"id": "eqasc_validation_123", "prediction": "all x y z.((Friction(x) & Truck(y) & Car(z) & Brakes(w)) -> StopsUsing(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_123", "prediction": "all x y z.((Friction(x) & Truck(y) & Car(z) & UsesBrakes(x,y,z)) -> Stops(x,y,z))", "score": 0}
{"id": "eqasc_validation_123", "prediction": "all x y z.((Friction(x) & Truck(y) & Car(z) & Brakes(w)) -> Stops(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_123", "prediction": "all x y.((Friction(x) & Truck(y) & Car(y) & UsesBrakes(x,y)) -> StopsBy(x,y))", "score": 0}
{"id": "eqasc_validation_123", "prediction": "all x y z.((Friction(x) & Truck(y) & Car(z) & Brakes(y)) -> StopsUsing(x,y,z))", "score": 0}
{"id": "eqasc_validation_123", "prediction": "all x y.((Friction(x) & Truck(y) & Car(y)) -> UsedForStopping(x,y))", "score": 0}
{"id": "eqasc_validation_123", "prediction": "all x y z.((Friction(x) & Truck(y) & Car(z) & Brakes(x)) -> StopsUsing(x,y,z))", "score": 0}
{"id": "eqasc_validation_123", "prediction": "all x y.((Friction(x) & Truck(y) & Car(y) & UsesBrakes(x,y)) -> StopsUsingBrakes(x,y))", "score": 0}
{"id": "eqasc_validation_123", "prediction": "all x y z.((Friction(x) & Truck(y) & Car(z) & Brakes(z)) -> StopsUsing(x,y,z))", "score": 0}
{"id": "eqasc_validation_123", "prediction": "all x y.((Friction(x) & Truck(y) & Car(y) & UsesBrakes(x,y)) -> StopsWithBrakes(x,y))", "score": 0}
{"id": "eqasc_validation_123", "prediction": "all x y.((Friction(x) & Truck(y) & Car(y) & UsesBreaks(x,y)) -> Stops(x,y))", "score": 0}
{"id": "eqasc_validation_123", "prediction": "all x y z.((Friction(x) & Truck(y) & Car(z) & Brakes(y)) -> Stops(x,y,z))", "score": 0}
{"id": "eqasc_validation_123", "prediction": "all x y z.((Friction(x) & Truck(y) & Car(z)) -> (UsedForStopping(x,y,z) & UsesBrakes(x,z)))", "score": 0}
{"id": "eqasc_validation_123", "prediction": "all x y z.((Friction(x) & Truck(y) & Car(z)) -> (UsedForStopping(x,y,z) & UsesBrakes(y,z)))", "score": 0}
{"id": "eqasc_validation_123", "prediction": "all x y z.((Friction(x) & Truck(y) & Car(z) & UsesBreaks(x,y,z)) -> Stops(x,y,z))", "score": 0}
{"id": "eqasc_validation_124", "prediction": "all x y.((Flower(x) & SporophytePlant(y)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_124", "prediction": "all x y.((Flower(x) & Sporophyte(y)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_124", "prediction": "all x y z.((Flower(x) & SporophytePlant(y) & SporophytePlant(z)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_124", "prediction": "all x y z.((Flower(x) & SporophytePlant(y) & Sporophyte(z)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_124", "prediction": "all x.(Flower(x) -> FormsOnDominantSporophytePlant(x))", "score": 0}
{"id": "eqasc_validation_124", "prediction": "all x y z.((Flower(x) & Sporophyte(y) & Plant(z)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_124", "prediction": "all x y.((FloweringFlower(x) & SporophytePlant(y)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_124", "prediction": "all x y z.((Flower(x) & SporophytePlant(y) & Plant(z)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_124", "prediction": "all x y z.((Flower(x) & Sporophyte(y) & Sporophyte(z)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_124", "prediction": "all x y.((Flower(x) & SporophytePlant(y) & Dominant(x,y)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_124", "prediction": "all x.(Flower(x) -> FormsOnDistantSporophytePlant(x))", "score": 0}
{"id": "eqasc_validation_124", "prediction": "all x y z.((Flower(x) & SporophytePlant(y) & Sporophyte(z)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_124", "prediction": "all x y z.((Flower(x) & SporophytePlant(y) & SporophytePlant(z)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_124", "prediction": "all x y.((Flower(x) & SporophytePlant(y)) -> FormedOn(x,y))", "score": 0}
{"id": "eqasc_validation_124", "prediction": "all x y.((Flowering(x) & SporophytePlant(y)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_124", "prediction": "all x y z.((Flower(x) & SporophytePlant(y) & SporophytePlant(z)) -> FormedOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_125", "prediction": "all x.(Spotrophyte(x) -> PossessesStoma(x))", "score": 0}
{"id": "eqasc_validation_125", "prediction": "all x.(Sporophyte(x) -> PossessesStoma(x))", "score": 0}
{"id": "eqasc_validation_125", "prediction": "all x y.((Sporophyte(x) & Stoma(y)) -> Possesses(x,y))", "score": 0}
{"id": "eqasc_validation_125", "prediction": "all x y.((Spotrophyte(x) & Stoma(y)) -> Possesses(x,y))", "score": 0}
{"id": "eqasc_validation_125", "prediction": "all x.(Spoorophyte(x) -> PossessesStoma(x))", "score": 0}
{"id": "eqasc_validation_125", "prediction": "all x.(Spokelyte(x) -> PossessesStoma(x))", "score": 0}
{"id": "eqasc_validation_125", "prediction": "all x.(Splorophyte(x) -> PossessesStoma(x))", "score": 0}
{"id": "eqasc_validation_125", "prediction": "all x.(Spokerophyte(x) -> PossessesStoma(x))", "score": 0}
{"id": "eqasc_validation_125", "prediction": "all x.(Spotrophyte(x) -> PossessionOfStoma(x))", "score": 0}
{"id": "eqasc_validation_125", "prediction": "exists x.(Spotrophyte(x) & PossessesStoma(x))", "score": 0}
{"id": "eqasc_validation_125", "prediction": "all x.(Sporophyte(x) -> PossessionOfStoma(x))", "score": 0}
{"id": "eqasc_validation_125", "prediction": "all x.(Spotrophyte(x) -> PossessStoma(x))", "score": 0}
{"id": "eqasc_validation_125", "prediction": "all x.(Sporophyte(x) -> PossessStoma(x))", "score": 0}
{"id": "eqasc_validation_125", "prediction": "all x.(Spotrophyte(x) -> Possesses(x,stoma))", "score": 0}
{"id": "eqasc_validation_126", "prediction": "all x y.((Flower(x) & Plant(y) & PossessesStoma(y,x)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_126", "prediction": "all x y.((Flower(x) & Plant(y) & PossessesStoma(x,y)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_126", "prediction": "all x y.((Flower(x) & Plant(y) & PossessesStoma(y)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_126", "prediction": "all x y z.((Flower(x) & Plant(y) & Plant(z) & PossessesStoma(y,z)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_126", "prediction": "all x y z.((Flower(x) & Plant(y) & Plant(z) & PossessesStoma(x,y,z)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_126", "prediction": "all x y.((Flower(x) & Plant(y) & PossessesStoma(x)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_126", "prediction": "all x y.((Flower(x) & Plant(y) & HasStoma(x,y)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_126", "prediction": "all x y z.((Flower(x) & Plant(y) & Stoma(z) & Possesses(y,z)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_126", "prediction": "all x y z.((Flower(x) & Plant(y) & Stoma(z)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_126", "prediction": "all x y z.((Flower(x) & Plant(y) & Plant(z) & PossessesStoma(y,z)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_126", "prediction": "all x y.((Flower(x) & Plant(y) & HasStoma(y)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_126", "prediction": "all x y.((Flower(x) & Plant(y) & HasStoma(y,x)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_126", "prediction": "all x y z.((Flower(x) & Plant(y) & Stoma(z) & Possesses(x,y,z)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_127", "prediction": "all x.(Sporophyte(x) -> (AppearsEarlyInSpring(x) & As SoonAsSnowMelts(x)))", "score": -1}
{"id": "eqasc_validation_127", "prediction": "all x.(Sporophyte(x) -> (AppearsEarlyInSpring(x) & SnowMelts(x)))", "score": 0}
{"id": "eqasc_validation_127", "prediction": "all x y.((Sporophyte(x) & Spring(y) & SnowMelts(x,y)) -> AppearsEarly(x,y))", "score": 0}
{"id": "eqasc_validation_127", "prediction": "all x.(Spotrophyte(x) -> (AppearsEarlyInSpring(x) & As SoonAsSnowMelts(x)))", "score": -1}
{"id": "eqasc_validation_127", "prediction": "all x y.((Sporophyte(x) & Spring(y)) -> AppearsEarly(x,y))", "score": 0}
{"id": "eqasc_validation_127", "prediction": "all x y z.((Sporophyte(x) & Spring(y) & Snow(z)) -> AppearsEarly(x,y))", "score": 0}
{"id": "eqasc_validation_127", "prediction": "all x.(Sporophyte(x) -> (AppearsEarlyInSpring(x) & SoonAfterSnowMelts(x)))", "score": 0}
{"id": "eqasc_validation_127", "prediction": "all x.(Spotrophyte(x) -> (AppearsEarlyInSpring(x) & SnowMelts(x)))", "score": 0}
{"id": "eqasc_validation_127", "prediction": "all x y z.((Sporophyte(x) & Spring(y) & Snow(z) & Melts(z)) -> AppearsEarly(x,y))", "score": 0}
{"id": "eqasc_validation_127", "prediction": "all x y z.((Sporophyte(x) & Spring(y) & Snow(z)) -> AppearsEarly(x,y,z))", "score": 0}
{"id": "eqasc_validation_127", "prediction": "all x.(Sporophyte(x) -> AppearsEarlyInSpring(x))", "score": 0}
{"id": "eqasc_validation_127", "prediction": "all x y.((Spotrophyte(x) & Spring(y) & SnowMelts(x,y)) -> AppearsEarly(x,y))", "score": 0}
{"id": "eqasc_validation_127", "prediction": "all x y z.((Sporophyte(x) & Spring(y) & SnowMelts(z)) -> AppearsEarly(x,y))", "score": 0}
{"id": "eqasc_validation_127", "prediction": "all x y.((Sporophyte(x) & Snow(y)) -> AppearsEarlyInSpring(x,y))", "score": 0}
{"id": "eqasc_validation_127", "prediction": "all x y.((Sporophyte(x) & Spring(y) & SnowMelts(x)) -> AppearsEarly(x,y))", "score": 0}
{"id": "eqasc_validation_127", "prediction": "all x y z.((Sporophyte(x) & Spring(y) & Snow(z) & Melts(x,z)) -> AppearsEarly(x,y))", "score": 0}
{"id": "eqasc_validation_128", "prediction": "all x y.((Flower(x) & Snow(y)) -> Melts(x,y))", "score": 0}
{"id": "eqasc_validation_128", "prediction": "all x y z.((Flower(x) & Snow(y) & Snow(z)) -> Melts(x,y,z))", "score": 0}
{"id": "eqasc_validation_128", "prediction": "all x.((Flower(x) & SnowMelts(x)) -> Forms(x))", "score": 0}
{"id": "eqasc_validation_128", "prediction": "all x y.((Flower(x) & SnowMelts(y)) -> Forms(x,y))", "score": 0}
{"id": "eqasc_validation_128", "prediction": "all x y.((Flower(x) & SnowMelts(y)) -> FormsAfter(x,y))", "score": 0}
{"id": "eqasc_validation_128", "prediction": "all x y.((Flower(x) & SnowMelt(y)) -> FormsAfter(x,y))", "score": 0}
{"id": "eqasc_validation_128", "prediction": "all x.((Flower(x) & MeltsSnow(x)) -> Forms(x))", "score": 0}
{"id": "eqasc_validation_128", "prediction": "all x y z.((Flower(x) & Snow(y) & SnowMelts(z)) -> FormsAfter(x,y,z))", "score": 0}
{"id": "eqasc_validation_128", "prediction": "all x y z.((Flower(x) & SnowMelt(y) & Snow(z)) -> FormsAfter(x,y,z))", "score": 0}
{"id": "eqasc_validation_128", "prediction": "all x y z.((Flower(x) & Snow(y) & Snow(z)) -> Melts(x,y))", "score": 0}
{"id": "eqasc_validation_128", "prediction": "all x y.((Flower(x) & Snow(y) & Melts(x,y)) -> FormsAfter(x,y))", "score": 0}
{"id": "eqasc_validation_128", "prediction": "all x y z.((Flower(x) & Snow(y) & Snow(z)) -> Melts(x,z))", "score": 0}
{"id": "eqasc_validation_128", "prediction": "all x y.((Flower(x) & Snow(y) & Melts(x,y)) -> Forms(x,y))", "score": 0}
{"id": "eqasc_validation_128", "prediction": "all x y z.((Flower(x) & SnowMelts(y) & Snow(z)) -> FormsAfter(x,y,z))", "score": 0}
{"id": "eqasc_validation_128", "prediction": "all x y z.((Flower(x) & Snow(y) & Snow(z) & Melts(x,y,z)) -> FormsAfter(x,y,z))", "score": 0}
{"id": "eqasc_validation_128", "prediction": "all x y z.((Flower(x) & Snow(y) & Snow(z) & Melts(x,y)) -> FormsAfter(x,z))", "score": 0}
{"id": "eqasc_validation_129", "prediction": "all x y z.((Flower(x) & Plant(y) & Stoma(z)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_129", "prediction": "all x y z.((Flower(x) & Plant(y) & Spoma(z)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_129", "prediction": "all x y.((Flower(x) & Plant(y) & FormsOn(x,y)) -> Stoma(x))", "score": 0}
{"id": "eqasc_validation_129", "prediction": "all x y.((Flower(x) & Plant(y)) -> (FormsOn(x,y) & HasStoma(x)))", "score": 0}
{"id": "eqasc_validation_129", "prediction": "all x y.((Flower(x) & Plant(y)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_129", "prediction": "all x y.((Flower(x) & Plant(y)) -> FormsWithStoma(x,y))", "score": 0}
{"id": "eqasc_validation_129", "prediction": "all x y z.((Flower(x) & Plant(y) & Soma(z)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_129", "prediction": "all x y.((Flower(x) & Plant(y)) -> FormsOnWithStoma(x,y))", "score": 0}
{"id": "eqasc_validation_129", "prediction": "all x y z.((Flower(x) & Plant(y) & Syma(z)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_129", "prediction": "all x y z.((Flower(x) & Plant(y) & Stama(z)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_129", "prediction": "all x y z.((Flower(x) & Plant(y) & Stoma(z)) -> FormsOnWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_129", "prediction": "all x y z.((Flower(x) & Plant(y) & Stima(z)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_129", "prediction": "all x y z.((Flower(x) & Plant(y) & Spoma(z)) -> FormsOnWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_129", "prediction": "all x y z.((Flower(x) & Plant(y) & Spoma(z)) -> (FormsOn(x,y) & HasStoma(x,z)))", "score": 0}
{"id": "eqasc_validation_129", "prediction": "all x y z.((Flower(x) & Plant(y) & Stoma(z)) -> (FormsOn(x,y) & HasStoma(x,z)))", "score": 0}
{"id": "eqasc_validation_130", "prediction": "all x.(AngiospermSporophyte(x) -> Dominant(x))", "score": 0}
{"id": "eqasc_validation_130", "prediction": "all x.((Angiosperm(x) & Sporophyte(x)) -> Dominant(x))", "score": 0}
{"id": "eqasc_validation_130", "prediction": "all x.((Agiosperm(x) & Sporophyte(x)) -> Dominant(x))", "score": 0}
{"id": "eqasc_validation_130", "prediction": "all x.(AngiospermSprophyte(x) -> Dominant(x))", "score": 0}
{"id": "eqasc_validation_130", "prediction": "All x.(AngiospermSporophyte(x) -> Dominant(x))", "score": -1}
{"id": "eqasc_validation_130", "prediction": "all x.(AgiospermSporophyte(x) -> Dominant(x))", "score": 0}
{"id": "eqasc_validation_130", "prediction": "All x.((Agiosperm(x) & Sporophyte(x)) -> Dominant(x))", "score": -1}
{"id": "eqasc_validation_130", "prediction": "All x.(AngiospermSprophyte(x) -> Dominant(x))", "score": -1}
{"id": "eqasc_validation_130", "prediction": "all x.(AgiospermSprophyte(x) -> Dominant(x))", "score": 0}
{"id": "eqasc_validation_130", "prediction": "all x.((Angiosperm(x) & Sporophyte(x)) -> Dominates(x))", "score": 0}
{"id": "eqasc_validation_131", "prediction": "all x y.((Flower(x) & Angiosperm(y)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_131", "prediction": "all x y z.((Flower(x) & Angiosperm(y) & Angiosperm(z)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_131", "prediction": "all x.(Flower(x) -> FormsOnAngiosperm(x))", "score": 0}
{"id": "eqasc_validation_131", "prediction": "all x y z.((Flower(x) & Angiosperm(y) & Angiosperm(z)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_131", "prediction": "all x.(Flower(x) -> exists y.(Angiosperm(y) & FormsOn(x,y)))", "score": 0}
{"id": "eqasc_validation_131", "prediction": "all x y z.((Flower(x) & Angiosperm(y) & Angiosperm(z)) -> FormedOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_131", "prediction": "all x y.((Flower(x) & Angiosperm(y)) -> FormedOn(x,y))", "score": 0}
{"id": "eqasc_validation_131", "prediction": "all x.(Flower(x) -> FormsOnAngiosperms(x))", "score": 0}
{"id": "eqasc_validation_131", "prediction": "all x.(Flower(x) -> FormsOnAgiosperm(x))", "score": 0}
{"id": "eqasc_validation_131", "prediction": "all x y z.((Flower(x) & Angiosperm(y) & Angiosperm(z)) -> Forms(x,y,z))", "score": 0}
{"id": "eqasc_validation_131", "prediction": "all x.(Flower(x) -> (FormsOnAngiosperm(x) | FormsOnAngiosperm(x)))", "score": 0}
{"id": "eqasc_validation_131", "prediction": "all x.(Flower(x) -> (FormsOnAngiosperm(x) & OnAngiosperm(x)))", "score": 0}
{"id": "eqasc_validation_131", "prediction": "all x.(Flower(x) -> exists y.(Angiosperm(y) & FormsOn(x,y))))", "score": -1}
{"id": "eqasc_validation_131", "prediction": "all x y z.((Flower(x) & Angiosperm(y) & Angiosperm(z)) -> Form(x,y,z))", "score": 0}
{"id": "eqasc_validation_132", "prediction": "all x y.((Flower(x) & Angiosperm(y)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_132", "prediction": "all x y z.((Flower(x) & Angiosperm(y) & Angiosperm(z)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_132", "prediction": "all x y z.((Flower(x) & Angiosperm(y) & Angiosperm(z) & FormsOn(x,y,z)) -> FlowersFormOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_132", "prediction": "all x y z.((Flower(x) & Angiosperm(y) & Angiosperm(z) & FormsOn(x,y,z)) -> FlowersFormOn(x,y))", "score": 0}
{"id": "eqasc_validation_132", "prediction": "all x y z.((Flower(x) & Angiosperm(y) & Angiosperm(z)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_132", "prediction": "all x y z.((Flower(x) & Angiosperm(y) & Angiosperm(z)) -> (FormsOn(x,y) & On(x,z)))", "score": 0}
{"id": "eqasc_validation_132", "prediction": "all x y z.((Flower(x) & Angiosperm(y) & Angiosperm(z)) -> FormedOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_132", "prediction": "all x y z.((Flower(x) & Angiosperm(y) & Angiosperm(z)) -> (FormsOn(x,y,z) & On(x,y)))", "score": 0}
{"id": "eqasc_validation_132", "prediction": "all x y z w.((Flower(x) & Angiosperm(y) & Angiosperm(z) & Angiosperm(w)) -> FormsOn(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_132", "prediction": "all x y z.((Flower(x) & Angiosperm(y) & Angiosperm(z)) -> (FormsOn(x,y) & FormsOn(x,z)))", "score": 0}
{"id": "eqasc_validation_132", "prediction": "all x y z w.((Flower(x) & Angiosperm(y) & Angiosperm(z) & Angiosperm(w)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_132", "prediction": "all x y z.((Flower(x) & Angiosperm(y) & Angiosperm(z)) -> (FormsOn(x,y,z) | FormsOn(x,y)))", "score": 0}
{"id": "eqasc_validation_132", "prediction": "all x y z.((Flower(x) & Angiosperm(y) & Angiosperm(z)) -> (FormsOn(x,y,z) & FormsOn(x,y)))", "score": 0}
{"id": "eqasc_validation_132", "prediction": "all x y z.((Flower(x) & Angiosperm(y) & Angiosperm(z)) -> FormOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_132", "prediction": "all x.((Flower(x) & Angiosperm(x)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_133", "prediction": "all x.(SkinColor(x) -> PolygenicTrait(x))", "score": 6}
{"id": "eqasc_validation_133", "prediction": "all x.(SkinColor(x) -> PolygenicTreatment(x))", "score": 12}
{"id": "eqasc_validation_133", "prediction": "all x.(SkinColor(x) -> PolygenicTait(x))", "score": 0}
{"id": "eqasc_validation_133", "prediction": "all x.(SkinColor(x) -> PolygenicTail(x))", "score": 0}
{"id": "eqasc_validation_133", "prediction": "exists x.(SkinColor(x) & PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_133", "prediction": "all x y.((SkinColor(x) & PolygenicTrait(y)) -> PolygenicTrait(x,y))", "score": 0}
{"id": "eqasc_validation_133", "prediction": "exists x.(SkinColor(x) & PolygenicTreatment(x))", "score": 0}
{"id": "eqasc_validation_133", "prediction": "All x.(SkinColor(x) -> PolygenicTrait(x))", "score": -1}
{"id": "eqasc_validation_133", "prediction": "all x.(SkinColor(x) -> PolygenicTax(x))", "score": 0}
{"id": "eqasc_validation_133", "prediction": "all x y.((SkinColor(x) & PolygenicTrait(y)) -> Polygenic(x,y))", "score": 0}
{"id": "eqasc_validation_133", "prediction": "all x.((SkinColor(x) & PolygenicTrait(x)) -> SkinColor(x))", "score": 0}
{"id": "eqasc_validation_133", "prediction": "all x.((SkinColor(x) & PolygenicTrait(x)) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_133", "prediction": "all x.((SkinColor(x) & PolygenicTrait(x)) -> AnotherTrait(x))", "score": 0}
{"id": "eqasc_validation_134", "prediction": "all x.(Melanin(x) -> GivesTanColor(x))", "score": 0}
{"id": "eqasc_validation_134", "prediction": "all x.(Melanin(x) -> (SkinPigment(x) & GivesTanColor(x)))", "score": 0}
{"id": "eqasc_validation_134", "prediction": "all x.(Melanin(x) -> SkinPigment(x))", "score": 0}
{"id": "eqasc_validation_134", "prediction": "all x y.((SkinPigment(x) & Melanin(y)) -> GivesTanColor(x,y))", "score": 0}
{"id": "eqasc_validation_134", "prediction": "all x.(Melanin(x) -> (SkinPigment(x) & GivesSkinTanColor(x)))", "score": 0}
{"id": "eqasc_validation_134", "prediction": "all x y.((SkinPigment(x) & Skin(y)) -> GivesTanColor(x,y))", "score": 0}
{"id": "eqasc_validation_134", "prediction": "all x y.((SkinPigment(x) & Skin(y) & Melanin(x)) -> GivesTanColor(x,y))", "score": 0}
{"id": "eqasc_validation_134", "prediction": "all x.(Melanin(x) -> SkinPigment(x) & GivesSkinTanColor(x))", "score": 0}
{"id": "eqasc_validation_134", "prediction": "all x.(Melanin(x) -> SkinPigment(x) & GivesTanColor(x))", "score": 0}
{"id": "eqasc_validation_134", "prediction": "all x y z.((SkinPigment(x) & Melanin(y) & Skin(z)) -> GivesTanColor(x,z))", "score": 0}
{"id": "eqasc_validation_134", "prediction": "all x.(Melanin(x) -> (GivesTanColor(x) & Skin(x)))", "score": 0}
{"id": "eqasc_validation_134", "prediction": "all x.((SkinPigment(x) & Melanin(x)) -> GivesTanColor(x))", "score": 0}
{"id": "eqasc_validation_134", "prediction": "all x y z.((SkinPigment(x) & Melanin(y) & Skin(z)) -> GivesTanColor(y,z))", "score": 0}
{"id": "eqasc_validation_134", "prediction": "all x y.((Melanin(x) & Skin(y)) -> GivesTanColor(x,y))", "score": 0}
{"id": "eqasc_validation_134", "prediction": "all x y.((SkinPigment(x) & Skin(y) & Melanin(x,y)) -> GivesTanColor(x,y))", "score": 0}
{"id": "eqasc_validation_134", "prediction": "all x.((SkinPigment(x) & GivesTanColor(x)) -> Melanin(x))", "score": 0}
{"id": "eqasc_validation_135", "prediction": "all x.(MelaninAmount(x) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_135", "prediction": "all x.((MelaninAmount(x) & PolygenicTrait(x)) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_135", "prediction": "all x y.((MelaninAmount(x) & PolygenicTrait(y)) -> PolygenicTrait(x,y))", "score": 0}
{"id": "eqasc_validation_135", "prediction": "all x.((MelaninAmount(x) & PolygenicTrait(x)) -> MelaninAmount(x))", "score": 0}
{"id": "eqasc_validation_135", "prediction": "all x y z.((MelaninAmount(x) & PolygenicTrait(y) & PolygenicTrait(z)) -> PolygenicTrait(x,y,z))", "score": 0}
{"id": "eqasc_validation_135", "prediction": "all x.(MelaninAmount(x) -> (PolygenicTrait(x) & PolygenicTrait(x)))", "score": 0}
{"id": "eqasc_validation_136", "prediction": "all x.((HumanSkin(x) & HairColor(x)) -> PolygenicTreatment(x))", "score": 0}
{"id": "eqasc_validation_136", "prediction": "all x.((HumanSkin(x) & HumanHairColor(x)) -> PolygenicTreatment(x))", "score": 0}
{"id": "eqasc_validation_136", "prediction": "all x.(HumanSkin(x) & HumanHairColor(x)) -> PolygenicTreatment(x))", "score": -1}
{"id": "eqasc_validation_136", "prediction": "all x.((HumanSkin(x) | HairColor(x)) -> PolygenicTreatment(x))", "score": 0}
{"id": "eqasc_validation_136", "prediction": "all x.((HumanSkin(x) | HumanHairColor(x)) -> PolygenicTreatment(x))", "score": 0}
{"id": "eqasc_validation_136", "prediction": "all x.(HumanSkin(x) & HairColor(x)) -> PolygenicTreatment(x))", "score": -1}
{"id": "eqasc_validation_136", "prediction": "all x.((HumanSkin(x) & HairColor(x)) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_136", "prediction": "all x.((HumanSkin(x) & HumanHairColor(x)) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_136", "prediction": "all x.((HumanSkin(x) | HairColor(x)) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_136", "prediction": "all x.((HumanSkin(x) | HumanHairColor(x)) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_136", "prediction": "all x.(HumanSkin(x) & HumanHairColor(x)) -> PolygenicTrait(x))", "score": -1}
{"id": "eqasc_validation_136", "prediction": "all x.(HumanSkin(x) & HairColor(x)) -> PolygenicTrait(x))", "score": -1}
{"id": "eqasc_validation_136", "prediction": "all x y.((HumanSkin(x) & HairColor(y)) -> PolygenicTreatment(x))", "score": 0}
{"id": "eqasc_validation_136", "prediction": "all x.((HumanSkin(x) & HairColor(x)) -> PolygenicTraits(x))", "score": 0}
{"id": "eqasc_validation_136", "prediction": "all x y.((HumanSkin(x) & HairColor(y)) -> PolygenicTreatment(x,y))", "score": 0}
{"id": "eqasc_validation_136", "prediction": "all x.(HumanSkinAndHairColor(x) -> PolygenicTreatment(x))", "score": 0}
{"id": "eqasc_validation_137", "prediction": "all x.(HairColor(x) -> Polygenic(x))", "score": 0}
{"id": "eqasc_validation_137", "prediction": "all x.((HairColor(x) & Polygenic(x)) -> Polygenic(x))", "score": 0}
{"id": "eqasc_validation_137", "prediction": "all x.((HairColor(x) & Polygenic(x)) -> HairColor(x))", "score": 0}
{"id": "eqasc_validation_137", "prediction": "all x y.((HairColor(x) & HairColor(y)) -> Polygenic(x))", "score": 0}
{"id": "eqasc_validation_137", "prediction": "all x y.((HairColor(x) & HairColor(y) & Polygenic(x)) -> Polygenic(y))", "score": 0}
{"id": "eqasc_validation_137", "prediction": "all x.(HairColor(x) -> (Polygenic(x) & Polygenic(x)))", "score": 0}
{"id": "eqasc_validation_137", "prediction": "all x y.((HairColor(x) & HairColor(y)) -> Polygenic(x,y))", "score": 0}
{"id": "eqasc_validation_137", "prediction": "all x.((HairColor(x) & Polygenic(x)) -> HasHairColor(x))", "score": 0}
{"id": "eqasc_validation_137", "prediction": "all x y.((HairColor(x) & HairColor(y) & Polygenic(x)) -> Polygenic(x))", "score": 0}
{"id": "eqasc_validation_137", "prediction": "all x y.((HairColor(x) & HairColor(y) & Polygenic(y)) -> Polygenic(y))", "score": 0}
{"id": "eqasc_validation_137", "prediction": "all x y z.((HairColor(x) & HairColor(y) & HairColor(z) & Polygenic(y)) -> Polygenic(z))", "score": 0}
{"id": "eqasc_validation_137", "prediction": "all x y.((HairColor(x) & HairColor(y) & Polygenic(y)) -> Polygenic(x,y))", "score": 0}
{"id": "eqasc_validation_137", "prediction": "all x y.((HairColor(x) & HairColor(y) & Polygenic(y)) -> Polygenic(x))", "score": 0}
{"id": "eqasc_validation_137", "prediction": "all x.((HairColor(x) & Polygenic(x)) -> ColorPolygenic(x))", "score": 0}
{"id": "eqasc_validation_137", "prediction": "all x y.((HairColor(x) & HairColor(y) & Polygenic(x,y)) -> Polygenic(y))", "score": 0}
{"id": "eqasc_validation_137", "prediction": "all x.((HairColor(x) & Polygenic(x)) -> HairColorPolygenic(x))", "score": 0}
{"id": "eqasc_validation_138", "prediction": "all x y z.((SkinColor(x) & MelaninPigment(y) & SkinCell(z)) -> DeterminedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_138", "prediction": "all x y z.((SkinColor(x) & MelaninPigment(y) & SkinCells(z)) -> DeterminedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_138", "prediction": "all x.(SkinColor(x) -> DeterminedByMelaninPigmentInSkinCells(x))", "score": 0}
{"id": "eqasc_validation_138", "prediction": "all x.(SkinColor(x) -> DeterminedByMelaninPigment(x))", "score": 0}
{"id": "eqasc_validation_138", "prediction": "all x y.((SkinColor(x) & MelaninPigment(y)) -> DeterminedBy(x,y))", "score": 0}
{"id": "eqasc_validation_138", "prediction": "all x.(SkinColor(x) -> (DeterminedByMelaninPigment(x) & InSkinCells(x)))", "score": 0}
{"id": "eqasc_validation_138", "prediction": "all x y.((SkinCell(x) & MelaninPigment(y)) -> DeterminedBy(x,y))", "score": 0}
{"id": "eqasc_validation_138", "prediction": "all x y.((SkinCell(x) & MelaninPigment(y)) -> DeterminesColor(x,y))", "score": 0}
{"id": "eqasc_validation_139", "prediction": "all x.(MelaninPigment(x) -> DeterminedByPolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_139", "prediction": "all x y.((MelaninPigment(x) & PolygenicTrait(y)) -> DeterminedBy(x,y))", "score": 0}
{"id": "eqasc_validation_139", "prediction": "all x y z.((MelaninPigment(x) & PolygenicTrait(y) & PolygenicTrait(z)) -> DeterminedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_139", "prediction": "all x.(MelaninPigment(x) -> (PolygenicTrait(x) & DeterminedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_139", "prediction": "all x.((MelaninPigment(x) & PolygenicTrait(x)) -> DeterminedBy(x,y))", "score": 0}
{"id": "eqasc_validation_139", "prediction": "all x.(MelaninPigment(x) -> (DeterminedByPolygenicTrait(x)))", "score": 0}
{"id": "eqasc_validation_139", "prediction": "all x.(MelaninPigment(x) -> (PolygenicTrait(x) & DeterminedBy(x,MelaninPigment)))", "score": 0}
{"id": "eqasc_validation_139", "prediction": "all x.(MelaninPigment(x) -> (PolygenicTrait(x) & DeterminedBy(x,melanin)))", "score": 0}
{"id": "eqasc_validation_140", "prediction": "all x.(PolygenicInheritance(x) -> ControlledByUnknownGenes(x))", "score": 0}
{"id": "eqasc_validation_140", "prediction": "all x.(PolygenicInheritance(x) -> (ControlledByUnknownGenes(x) & PolygenicTraits(x)))", "score": 0}
{"id": "eqasc_validation_140", "prediction": "all x.(PolygenicInheritance(x) -> exists y.(Gene(y) & Controls(x,y)))", "score": 0}
{"id": "eqasc_validation_140", "prediction": "all x.(PolygenicInheritance(x) -> (ControlledByUnknownGenes(x) & PolygenicTreatment(x)))", "score": 0}
{"id": "eqasc_validation_140", "prediction": "all x.(PolygenicInheritance(x) -> (ControlledByUnknownGenes(x)))", "score": 0}
{"id": "eqasc_validation_140", "prediction": "all x y.((PolygenicInheritance(x) & Gene(y)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_validation_140", "prediction": "all x.(PolygenicInheritance(x) -> (PolygenicTreatment(x) & ControlledByUnknownGenes(x)))", "score": 0}
{"id": "eqasc_validation_140", "prediction": "all x.(PolygenicHeritage(x) -> ControlledByUnknownGenes(x))", "score": 0}
{"id": "eqasc_validation_140", "prediction": "all x y.((PolygenicInheritance(x) & PolygenicTreatment(y)) -> ControlledByUnknownGenes(x,y))", "score": 0}
{"id": "eqasc_validation_140", "prediction": "all x.(PolygenicInheritance(x) -> exists y.(Gene(y) & Controls(x,y))))", "score": -1}
{"id": "eqasc_validation_140", "prediction": "all x y.((PolygenicInheritance(x) & Gene(y)) -> ControlledBy(x,y))", "score": 0}
{"id": "eqasc_validation_140", "prediction": "all x y.((PolygenicHeritage(x) & Gene(y)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_validation_140", "prediction": "all x y.((PolygenicInheritance(x) & PolygenicTreatment(y)) -> ControlledByUnknownGenes(y,x))", "score": 0}
{"id": "eqasc_validation_140", "prediction": "all x.(PolygenicInheritance(x) -> ControledByUnknownGenes(x))", "score": 0}
{"id": "eqasc_validation_140", "prediction": "all x y.((PolygenicInheritance(x) & PolygenicTreatment(y)) -> ControlledByUnknownGenes(y))", "score": 0}
{"id": "eqasc_validation_141", "prediction": "all x.(SkinColor(x) -> ControlledByUnknownGenes(x))", "score": 0}
{"id": "eqasc_validation_141", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_validation_141", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> ControlledBy(x,y))", "score": 0}
{"id": "eqasc_validation_141", "prediction": "all x y.((SkinColor(x) & UnknownGene(y)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_validation_141", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> Controls(x,y,z))", "score": 0}
{"id": "eqasc_validation_141", "prediction": "all x.(SkinColor(x) -> ControledByUnknownGenes(x))", "score": 0}
{"id": "eqasc_validation_141", "prediction": "all x y.((SkinColor(x) & UnknownNumberOfGenes(y)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_validation_141", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> ControlledBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_141", "prediction": "all x y.((SkinColor(x) & UnknownGenes(y)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_validation_141", "prediction": "all x.(SkinColor(x) -> UnknownGenes(x))", "score": 0}
{"id": "eqasc_validation_141", "prediction": "all x.(SkinColor(x) -> ControlsUnknownGenes(x))", "score": 0}
{"id": "eqasc_validation_141", "prediction": "all x.(SkinColor(x) -> UnknownNumberOfGenes(x))", "score": 0}
{"id": "eqasc_validation_141", "prediction": "all x y.((SkinColor(x) & UnknownGene(y)) -> ControlledBy(x,y))", "score": 0}
{"id": "eqasc_validation_141", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Unknown(z)) -> Controls(x,y,z))", "score": 0}
{"id": "eqasc_validation_141", "prediction": "all x.(SkinColor(x) -> exists y.(Gene(y) & Controls(x,y)))", "score": 0}
{"id": "eqasc_validation_142", "prediction": "all x.(DentalVariation(x) -> (Polygenic(x) & ControlledByGenes(x)))", "score": 0}
{"id": "eqasc_validation_142", "prediction": "all x.(DentalVariations(x) -> (Polygenic(x) & ControlledByGenes(x)))", "score": 0}
{"id": "eqasc_validation_142", "prediction": "all x.(DentalVariation(x) -> (Polygenic(x) & ControledByGenes(x)))", "score": 0}
{"id": "eqasc_validation_142", "prediction": "all x y.((DentalVariation(x) & Gene(y)) -> (Polygenic(x) & ControlledBy(x,y)))", "score": 0}
{"id": "eqasc_validation_142", "prediction": "all x.(DentalVariations(x) -> (Polygenic(x) & ControledByGenes(x)))", "score": 0}
{"id": "eqasc_validation_142", "prediction": "all x.(DentalVariation(x) -> (Polygenic(x) & exists y.(Gene(y) & Controls(x,y)))))", "score": -1}
{"id": "eqasc_validation_142", "prediction": "all x.(DentalVariation(x) -> (Polygenic(x) & exists y.(Gene(y) & Controls(x,y))))", "score": 0}
{"id": "eqasc_validation_142", "prediction": "all x.(DentalVariety(x) -> (Polygenic(x) & ControlledByGenes(x)))", "score": 0}
{"id": "eqasc_validation_142", "prediction": "all x.((DentalVariation(x) & Polygenic(x)) -> ControlledByGenes(x))", "score": 0}
{"id": "eqasc_validation_142", "prediction": "all x.(DentalVariation(x) -> (Polygenic(x) & ControlledBySeveralGenes(x)))", "score": 0}
{"id": "eqasc_validation_142", "prediction": "all x.(DentalVariations(x) -> (Polygenic(x) & exists y.(Gene(y) & Controls(x,y)))))", "score": -1}
{"id": "eqasc_validation_142", "prediction": "all x y.((DentalVariation(x) & Gene(y)) -> Polygenic(x))", "score": 0}
{"id": "eqasc_validation_142", "prediction": "all x.(DentalVariation(x) -> (Polygenic(x) & exists y.(Gene(y) & ControlledBy(x,y))))", "score": 0}
{"id": "eqasc_validation_142", "prediction": "all x.(DentalVariations(x) -> (Polygenic(x) & exists y.(Gene(y) & Controls(x,y))))", "score": 0}
{"id": "eqasc_validation_142", "prediction": "all x y.((DentalVariation(x) & Gene(y)) -> (Polygenic(x) & ControledBy(x,y)))", "score": 0}
{"id": "eqasc_validation_143", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> ControlledBy(x,y))", "score": 0}
{"id": "eqasc_validation_143", "prediction": "all x.(SkinColor(x) -> exists y.(Gene(y) & Controls(x,y)))", "score": 0}
{"id": "eqasc_validation_143", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_validation_143", "prediction": "all x.(SkinColor(x) -> exists y.(Gene(y) & Controls(x,y))))", "score": -1}
{"id": "eqasc_validation_143", "prediction": "all x.(SkinColor(x) -> ControlledByGenes(x))", "score": 0}
{"id": "eqasc_validation_143", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> Controls(x,y,z))", "score": 0}
{"id": "eqasc_validation_143", "prediction": "all x.(SkinColor(x) -> (ControlledByGenes(x) | ControlledByGenes(x)))", "score": 0}
{"id": "eqasc_validation_143", "prediction": "all x.(SkinColor(x) -> exists y.(Gene(y) & ControlledBy(x,y)))", "score": 0}
{"id": "eqasc_validation_143", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> ControlledBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_143", "prediction": "all x.(SkinColor(x) -> (ControlledByGenes(x) & Genes(x)))", "score": 0}
{"id": "eqasc_validation_143", "prediction": "all x.(SkinColor(x) -> (ControlledByGenes(x) & ControlledByGenes(x)))", "score": 0}
{"id": "eqasc_validation_143", "prediction": "all x.(SkinColor(x) -> exists y z.(Gene(y) & Gene(z) & Controls(x,y,z)))", "score": 0}
{"id": "eqasc_validation_143", "prediction": "all x.(SkinColor(x) -> (ControlledByGenes(x) & SeveralGenes(x)))", "score": 0}
{"id": "eqasc_validation_143", "prediction": "all x.(SkinColor(x) -> (ControlledByGenes(x) & VariousGenes(x)))", "score": 0}
{"id": "eqasc_validation_143", "prediction": "all x.(SkinColor(x) -> exists y.(Gene(y) & ControlledBy(x,y))))", "score": -1}
{"id": "eqasc_validation_143", "prediction": "all x.(SkinColor(x) -> exists y z.(Gene(y) & Gene(z) & Controls(x,y,z))))", "score": -1}
{"id": "eqasc_validation_144", "prediction": "all x.(TouretteSyndrom(x) -> PolygenicDisorder(x))", "score": 0}
{"id": "eqasc_validation_144", "prediction": "all x.(TouretteSyndrom(x) -> (PolygenicDisorder(x) & -PolygenicDisorder(x)))", "score": 0}
{"id": "eqasc_validation_144", "prediction": "all x.(TouretteSyndrom(x) -> (PolygenicDisorder(x) & PolygenicDisorder(x)))", "score": 0}
{"id": "eqasc_validation_144", "prediction": "all x.(TouretteSyndrom(x) -> (PolygenicDisorder(x) & Disorder(x)))", "score": 0}
{"id": "eqasc_validation_144", "prediction": "all x y.((TouretteSyndrom(x) & PolygenicDisorder(y)) -> Disorder(x,y))", "score": 0}
{"id": "eqasc_validation_144", "prediction": "all x.(TouretteSyndrom(x) -> (PolygenicDisorder(x) & -Polygenic(x)))", "score": 0}
{"id": "eqasc_validation_144", "prediction": "all x.(Tourette(x) -> (PolygenicDisorder(x) & -PolygenicDisorder(x)))", "score": 0}
{"id": "eqasc_validation_144", "prediction": "all x.(TouretteSyndrom(x) -> (Polygenic(x) & Disorder(x)))", "score": 0}
{"id": "eqasc_validation_144", "prediction": "all x y.((TouretteSyndrom(x) & PolygenicDisorder(y)) -> Affects(x,y))", "score": 0}
{"id": "eqasc_validation_144", "prediction": "all x.(TouretteSyndrom(x) -> (PolygenicDisorder(x) & Symptoms(x)))", "score": 0}
{"id": "eqasc_validation_144", "prediction": "all x.(TouretteSyndrom(x) -> (PolygenicDisorder(x) & Symptom(x)))", "score": 0}
{"id": "eqasc_validation_144", "prediction": "all x.(TouretteSyndrom(x) -> (PolygenicDisorder(x) & Polygenic(x)))", "score": 0}
{"id": "eqasc_validation_144", "prediction": "all x.(Tourette(x) -> PolygenicDisorder(x))", "score": 0}
{"id": "eqasc_validation_144", "prediction": "all x.(Tourette(x) -> (PolygenicDisorder(x) & Disorder(x)))", "score": 0}
{"id": "eqasc_validation_144", "prediction": "all x y.((TouretteSyndrom(x) & Polygenic(y)) -> Disorder(x,y))", "score": 0}
{"id": "eqasc_validation_145", "prediction": "all x.(TouretteSyndrom(x) -> Trait(x))", "score": 0}
{"id": "eqasc_validation_145", "prediction": "all x y.((TouretteSyndrom(x) & Trait(y)) -> Trait(x,y))", "score": 0}
{"id": "eqasc_validation_145", "prediction": "all x.(TouretteSyndrom(x) -> (Trait(x) & Trait(x) & TouretteSyndrom(x)))", "score": 0}
{"id": "eqasc_validation_145", "prediction": "all x y z.((TouretteSyndrom(x) & Trait(y) & Trait(z)) -> Trait(x,y,z))", "score": 0}
{"id": "eqasc_validation_145", "prediction": "all x.(TouretteSyndrom(x) -> (Trait(x) & Trait(x) & TouretteSyndrom(x) & Trait(x)))", "score": 0}
{"id": "eqasc_validation_145", "prediction": "all x.(TouretteSyndrom(x) -> (Trait(x) & Trait(x) & Trait(x) & TouretteSyndrom(x)))", "score": 0}
{"id": "eqasc_validation_145", "prediction": "all x.(TouretteSyndrom(x) -> (Trait(x) & Trait(x)))", "score": 0}
{"id": "eqasc_validation_145", "prediction": "all x.(TouretteSyndrom(x) -> (Trait(x) & Trait(x) & Trait(x)))", "score": 0}
{"id": "eqasc_validation_145", "prediction": "all x.(TouretteSyndrom(x) -> (Trait(x) & Trait(x) & TouretteSyndrom(x) & TouretteSyndrom(x)))", "score": 0}
{"id": "eqasc_validation_145", "prediction": "all x.((TouretteSyndrom(x) & Trait(x)) -> Trait(x))", "score": 0}
{"id": "eqasc_validation_145", "prediction": "all x.(TouretteSyndrom(x) -> (Trait(x) & Trait(x) & Trait(x) & TouretteSyndrom(x) & TouretteSyndrom(x)))", "score": 0}
{"id": "eqasc_validation_145", "prediction": "all x.(TouretteSyndrom(x) -> (Trait(x) & Trait(x) & TouretteSyndrom(x) & Trait(x) & TouretteSyndrom(x)))", "score": 0}
{"id": "eqasc_validation_146", "prediction": "all x.((PolygenicTreatment(x) & PhenotypicExpression(x)) -> VariatesOverWideRange(x))", "score": 2}
{"id": "eqasc_validation_146", "prediction": "all x y.((PhenotypicExpression(x) & PolygenicTreatment(y)) -> VariatesOverWideRange(x,y))", "score": 1}
{"id": "eqasc_validation_146", "prediction": "all x.((PhenotypicExpression(x) & PolygenicTreatment(x)) -> VariatesOverWideRange(x))", "score": 2}
{"id": "eqasc_validation_146", "prediction": "all x.((PolygenicTreatment(x) & PhenotypicExpression(x)) -> VariableOverWideRange(x))", "score": 1}
{"id": "eqasc_validation_146", "prediction": "all x y.((PhenotypicExpression(x) & PolygenicTrait(y)) -> VariatesOverWideRange(x,y))", "score": 1}
{"id": "eqasc_validation_146", "prediction": "all x.((PhenotypicExpression(x) & PolygenicTreatments(x)) -> VariatesOverWideRange(x))", "score": 0}
{"id": "eqasc_validation_146", "prediction": "all x y z.((PhenotypicExpression(x) & PolygenicTreatment(y) & WideRange(z)) -> VariatesOver(x,y,z))", "score": 1}
{"id": "eqasc_validation_146", "prediction": "all x y.((PhenotypicExpression(x) & PolygenicTreatment(y)) -> VariableOverWideRange(x,y))", "score": 1}
{"id": "eqasc_validation_146", "prediction": "all x y.((PhenotypicExpression(x) & PolygenicTreatment(y)) -> VarysOverWideRange(x,y))", "score": 0}
{"id": "eqasc_validation_146", "prediction": "all x.((PolygenicTrait(x) & PhenotypicExpression(x)) -> VariatesOverWideRange(x))", "score": 2}
{"id": "eqasc_validation_146", "prediction": "all x.((PhenotypicExpression(x) & PolygenicTraits(x)) -> VariatesOverWideRange(x))", "score": 0}
{"id": "eqasc_validation_146", "prediction": "all x y z.((PhenotypicExpression(x) & PolygenicTreatment(y) & WideRange(z)) -> Variable(x,y,z))", "score": 1}
{"id": "eqasc_validation_147", "prediction": "all x.(SkinColor(x) -> PhenotypicExpression(x))", "score": 0}
{"id": "eqasc_validation_147", "prediction": "all x.(SkinColor(x) -> PhenomenotypicExpression(x))", "score": 0}
{"id": "eqasc_validation_147", "prediction": "all x.(SkinColor(x) -> PhenomenalExpression(x))", "score": 0}
{"id": "eqasc_validation_147", "prediction": "all x y.((SkinColor(x) & PhenotypicExpression(y)) -> PhenotypicExpression(x))", "score": 0}
{"id": "eqasc_validation_147", "prediction": "all x.(SkinColor(x) -> PhenomenologicalExpression(x))", "score": 0}
{"id": "eqasc_validation_147", "prediction": "all x.(SkinColour(x) -> PhenotypicExpression(x))", "score": 0}
{"id": "eqasc_validation_147", "prediction": "all x y.((SkinColor(x) & PhenotypicExpression(y)) -> PhenotypicExpression(x,y))", "score": 0}
{"id": "eqasc_validation_147", "prediction": "all x y.((SkinColor(x) & Phenotype(y)) -> PhenotypicExpression(x))", "score": 0}
{"id": "eqasc_validation_147", "prediction": "all x.(SkinColor(x) -> PhenomeneticExpression(x))", "score": 0}
{"id": "eqasc_validation_147", "prediction": "all x.((SkinColor(x) & PhenotypicExpression(x)) -> PhenotypicExpression(x))", "score": 0}
{"id": "eqasc_validation_147", "prediction": "all x y.((SkinColor(x) & PhenotypicExpression(y)) -> Phenotypic(x))", "score": 0}
{"id": "eqasc_validation_147", "prediction": "all x.(SkinColor(x) -> Phenotype(x))", "score": 0}
{"id": "eqasc_validation_147", "prediction": "all x y.((SkinColor(x) & Phenotype(y)) -> PhenotypicExpression(x,y))", "score": 0}
{"id": "eqasc_validation_147", "prediction": "all x y.((SkinColor(x) & PhenotypicExpression(y)) -> Phenotype(x,y))", "score": 0}
{"id": "eqasc_validation_147", "prediction": "all x y.((SkinColor(x) & PhenotypicExpression(x)) -> PhenotypicExpression(y))", "score": 0}
{"id": "eqasc_validation_148", "prediction": "all x y.((PolygenicTreatment(x) & Gene(y)) -> ControledBy(x,y))", "score": 1}
{"id": "eqasc_validation_148", "prediction": "all x.(PolygenicTreatment(x) -> ControledByTwoOrMoreGenes(x))", "score": 0}
{"id": "eqasc_validation_148", "prediction": "all x.(PolygenicTreatment(x) -> (ControledByTwoOrMoreGenes(x)))", "score": 0}
{"id": "eqasc_validation_148", "prediction": "all x y.((PolygenicTreatment(x) & Gene(y)) -> ControlledBy(x,y))", "score": 4}
{"id": "eqasc_validation_148", "prediction": "all x.(PolygenicTreatment(x) -> (ControledByGenes(x,2) | ControledByGenes(x,3)))", "score": 0}
{"id": "eqasc_validation_148", "prediction": "all x.(PolygenicTreatment(x) -> exists y.(Gene(y) & ControledBy(x,y))))", "score": -1}
{"id": "eqasc_validation_148", "prediction": "all x.(PolygenicTreatment(x) -> exists y.(Gene(y) & Controls(x,y))))", "score": -1}
{"id": "eqasc_validation_148", "prediction": "all x.(PolygenicTreatment(x) -> (ControledByGene(x,2) | ControledByGene(x,3)))", "score": 0}
{"id": "eqasc_validation_148", "prediction": "all x y.((PolygenicTrait(x) & Gene(y)) -> ControledBy(x,y))", "score": 1}
{"id": "eqasc_validation_148", "prediction": "all x.(PolygenicTreatment(x) -> exists y.(Gene(y) & Controls(x,y)))", "score": 2}
{"id": "eqasc_validation_148", "prediction": "all x.(PolygenicTreatment(x) -> exists y.(Gene(y) & ControledBy(x,y)))", "score": 0}
{"id": "eqasc_validation_148", "prediction": "all x.(PolygenicTreatment(x) -> ControlledByTwoOrMoreGenes(x))", "score": 0}
{"id": "eqasc_validation_148", "prediction": "all x y.((PolygenicTrait(x) & Gene(y)) -> ControlledBy(x,y))", "score": 4}
{"id": "eqasc_validation_148", "prediction": "all x.(PolygenicTreatment(x) -> (ControledByGenes(x,2) | ControledByGenes(x,2)))", "score": 0}
{"id": "eqasc_validation_148", "prediction": "all x.(PolygenicTrait(x) -> exists y.(Gene(y) & Controls(x,y))))", "score": -1}
{"id": "eqasc_validation_149", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> (ControlledBy(x,y) & ControlledBy(x,y)))", "score": 2}
{"id": "eqasc_validation_149", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> ControlledBy(x,y))", "score": 2}
{"id": "eqasc_validation_149", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> (ControlledBy(x,y,z) & ControlledBy(x,z)))", "score": 0}
{"id": "eqasc_validation_149", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> Controls(x,y,z))", "score": 0}
{"id": "eqasc_validation_149", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> (ControlledBy(x,y,z) & ControlledBy(x,y,z)))", "score": 0}
{"id": "eqasc_validation_149", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_validation_149", "prediction": "all x y.((SkinColor(x) & Gene(y) & Controls(x,y)) -> exists z.(Gene(z) & Controls(x,z))))", "score": -1}
{"id": "eqasc_validation_149", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> (ControlledBy(x,y,z) & ControlledBy(x,y)))", "score": 0}
{"id": "eqasc_validation_149", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> (Controls(x,y,z) & Controls(x,y,z)))", "score": 0}
{"id": "eqasc_validation_149", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> (ControlledBy(x,y,z) & ControlledBy(y,z)))", "score": 0}
{"id": "eqasc_validation_149", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> (Controls(x,y,z) & Controls(x,z)))", "score": 0}
{"id": "eqasc_validation_149", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> (Controls(x,y,z) & Controls(y,z)))", "score": 0}
{"id": "eqasc_validation_149", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> (ControlledBy(x,y) & ControlledBy(x,z)))", "score": 2}
{"id": "eqasc_validation_149", "prediction": "all x y.((SkinColor(x) & Gene(y) & Controls(x,y)) -> exists z.(Gene(z) & Controls(z,y))))", "score": -1}
{"id": "eqasc_validation_149", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> (Controls(x,y,z) & Controls(x,y)))", "score": 0}
{"id": "eqasc_validation_149", "prediction": "all x.(SkinColor(x) -> (ControlledByGenes(x,2) | ControlledByGenes(x,3)))", "score": 0}
{"id": "eqasc_validation_150", "prediction": "all x.((ComplexCharacteristics(x) & Polygenic(x)) -> InfluencedByMultipleGenes(x))", "score": 0}
{"id": "eqasc_validation_150", "prediction": "all x.(ComplexCharacteristics(x) -> (Polygenic(x) & InfluencedByMultipleGenes(x)))", "score": 0}
{"id": "eqasc_validation_150", "prediction": "all x.((ComplexCharacteristics(x) & Polygenic(x)) -> InfluencedByGenes(x))", "score": 0}
{"id": "eqasc_validation_150", "prediction": "all x.((ComplexCharacteristics(x) & Polygenic(x) & InfluencedByMultipleGenes(x)) -> ComplexCharacteristics(x))", "score": 0}
{"id": "eqasc_validation_150", "prediction": "all x.(ComplexCharacteristics(x) -> (Polygenic(x) & InfluencedByGenes(x)))", "score": 0}
{"id": "eqasc_validation_150", "prediction": "all x y.((ComplexCharacteristics(x) & Gene(y)) -> (Polygenic(x) & InfluencedByMultipleGenes(x)))", "score": 0}
{"id": "eqasc_validation_150", "prediction": "all x.((ComplexCharacteristics(x) & Polygenic(x) & InfluencedByMultipleGenes(x)) -> Complex(x))", "score": 0}
{"id": "eqasc_validation_150", "prediction": "all x.((ComplexCharacteristic(x) & Polygenic(x)) -> InfluencedByMultipleGenes(x))", "score": 0}
{"id": "eqasc_validation_150", "prediction": "all x y.((ComplexCharacteristics(x) & Gene(y)) -> (Polygenic(x) & InfluencedByGenes(x,y)))", "score": 0}
{"id": "eqasc_validation_150", "prediction": "all x y.((ComplexCharacteristics(x) & Gene(y)) -> (Polygenic(x) & InfluencedByMultipleGenes(x,y)))", "score": 0}
{"id": "eqasc_validation_150", "prediction": "all x.(ComplexCharacteristics(x) -> (Plastic(x) & InfluencedByMultipleGenes(x)))", "score": 0}
{"id": "eqasc_validation_150", "prediction": "all x y.((ComplexCharacteristics(x) & Gene(y)) -> (Polygenic(x) & InfluencedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_151", "prediction": "all x.(SkinColor(x) -> InfluencedByGenes(x))", "score": 0}
{"id": "eqasc_validation_151", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> InfluencedBy(x,y))", "score": 0}
{"id": "eqasc_validation_151", "prediction": "all x.(SkinColor(x) -> InfluencedByMultipleGenes(x))", "score": 0}
{"id": "eqasc_validation_151", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> InfluencedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_151", "prediction": "all x.((SkinColor(x) & MultipleGenes(x)) -> InfluencedBy(x,y))", "score": 0}
{"id": "eqasc_validation_151", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z) & InfluencedBy(x,y,z)) -> InfluencedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_151", "prediction": "all x y.((SkinColour(x) & Gene(y)) -> InfluencedBy(x,y))", "score": 0}
{"id": "eqasc_validation_151", "prediction": "all x.((SkinColor(x) & InfluencedByGenes(x)) -> InfluencedByGenes(x))", "score": 0}
{"id": "eqasc_validation_151", "prediction": "all x.((SkinColor(x) & Gene(y)) -> InfluencedBy(x,y))", "score": 0}
{"id": "eqasc_validation_151", "prediction": "all x.((SkinColor(x) & MultipleGenes(x)) -> Influenced(x))", "score": 0}
{"id": "eqasc_validation_151", "prediction": "all x.(SkinColour(x) -> InfluencedByGenes(x))", "score": 0}
{"id": "eqasc_validation_152", "prediction": "all x.(PigmentCell(x) -> (GivesColor(x) | GivesTint(x)))", "score": 0}
{"id": "eqasc_validation_152", "prediction": "all x.(PigmentCell(x) -> (GivesColor(x) | GivesTongue(x)))", "score": 0}
{"id": "eqasc_validation_152", "prediction": "all x.(PigmentCell(x) -> (GivesColor(x) | GivesTinte(x)))", "score": 0}
{"id": "eqasc_validation_152", "prediction": "all x y.((PigmentCell(x) & Skin(y)) -> (GivesColor(x,y) | GivesTongue(x,y)))", "score": 0}
{"id": "eqasc_validation_152", "prediction": "all x y.((PigmentCell(x) & Skin(y)) -> (GivesColor(x,y) | GivesTint(x,y)))", "score": 0}
{"id": "eqasc_validation_152", "prediction": "all x y.((PigmentCell(x) & Skin(y)) -> (GivesColor(x,y) | GivesTinte(x,y)))", "score": 0}
{"id": "eqasc_validation_152", "prediction": "all x y.((PigmentCell(x) & Skin(y)) -> (GivesColor(x,y) | GivesTonn(x,y)))", "score": 0}
{"id": "eqasc_validation_152", "prediction": "all x.(PigmentCell(x) -> (GivesColor(x) | GivesTonn(x)))", "score": 0}
{"id": "eqasc_validation_152", "prediction": "all x.(PigmentCell(x) -> (GivesColor(x) | GivesTan(x)))", "score": 0}
{"id": "eqasc_validation_152", "prediction": "all x y.((PigmentCell(x) & Skin(y)) -> (GivesColor(x,y) | GivesTan(x,y)))", "score": 0}
{"id": "eqasc_validation_152", "prediction": "all x y.((PigmentCell(x) & Skin(y)) -> GivesColorOrTonn(x,y))", "score": 0}
{"id": "eqasc_validation_152", "prediction": "all x y.((PigmentCell(x) & Skin(y)) -> GivesColorOrTongue(x,y))", "score": 0}
{"id": "eqasc_validation_152", "prediction": "all x y.((PigmentCell(x) & Skin(y)) -> (GiveColor(x,y) | GiveTongue(x,y)))", "score": 0}
{"id": "eqasc_validation_152", "prediction": "all x y.((PigmentCell(x) & Skin(y)) -> GivesColorOrTint(x,y))", "score": 0}
{"id": "eqasc_validation_152", "prediction": "all x y.((PigmentCell(x) & Skin(y)) -> (GivesColor(x,y) | GivesTonk(x,y)))", "score": 0}
{"id": "eqasc_validation_152", "prediction": "all x y z.((PigmentCell(x) & Skin(y) & Color(z)) | Tint(z))", "score": 0}
{"id": "eqasc_validation_153", "prediction": "all x.(Pigment(x) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_153", "prediction": "all x.(Pigment(x) -> PolygenicTreatment(x))", "score": 0}
{"id": "eqasc_validation_153", "prediction": "(PolygenicTrait(pigment) & PolygenicTrait(pigment))", "score": 0}
{"id": "eqasc_validation_153", "prediction": "exists x.(Pigment(x) & PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_153", "prediction": "all x y.((Pigment(x) & PolygenicTrait(y)) -> PolygenicTrait(x,y))", "score": 0}
{"id": "eqasc_validation_153", "prediction": "all x y.((Pigment(x) & PolygenicTrait(y)) -> Polygenic(x,y))", "score": 0}
{"id": "eqasc_validation_153", "prediction": "all x.(Pigment(x) -> PolygenicTreat(x))", "score": 0}
{"id": "eqasc_validation_153", "prediction": "all x y.((Pigment(x) & PolygenicTrait(y)) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_154", "prediction": "all x.(Color(x) -> DependsOnMelaninContent(x))", "score": 0}
{"id": "eqasc_validation_154", "prediction": "all x.(Color(x) -> DependsOnMelaninContentInSkin(x))", "score": 0}
{"id": "eqasc_validation_154", "prediction": "all x y.((Color(x) & Skin(y)) -> DependsOnMelaninContent(x,y))", "score": 0}
{"id": "eqasc_validation_154", "prediction": "all x.(Color(x) -> DependsOnMelaninInSkin(x))", "score": 0}
{"id": "eqasc_validation_154", "prediction": "all x y z.((Color(x) & MelaninContent(y) & Skin(z)) -> DependsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_154", "prediction": "all x y.((Color(x) & Skin(y)) -> DependsOnMelanin(x,y))", "score": 0}
{"id": "eqasc_validation_154", "prediction": "all x y.((Color(x) & Skin(y) & DependsOnMelaninContent(x,y)) -> ColorDependsOn(x,y))", "score": 0}
{"id": "eqasc_validation_154", "prediction": "all x y z.((Color(x) & Skin(y) & MelaninContent(z)) -> DependsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_154", "prediction": "all x y.((Color(x) & Skin(y) & DependsOnMelaninContent(x,y)) -> ColorDependsOnMelaninContent(x,y))", "score": 0}
{"id": "eqasc_validation_154", "prediction": "all x.(Color(x) -> DependsOnMelanin(x))", "score": 0}
{"id": "eqasc_validation_154", "prediction": "all x y z.((Color(x) & Skin(y) & MelaninContent(z)) -> DependsOn(x,z))", "score": 0}
{"id": "eqasc_validation_154", "prediction": "all x.(Colour(x) -> DependsOnMelaninContentInSkin(x))", "score": 0}
{"id": "eqasc_validation_155", "prediction": "all x.(MelaninContent(x) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_155", "prediction": "all x.((MelaninContent(x) & PolygenicTrait(x)) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_155", "prediction": "all x y.((MelaninContent(x) & PolygenicTrait(y)) -> PolygenicTrait(x,y))", "score": 0}
{"id": "eqasc_validation_155", "prediction": "all x.((MelaninContent(x) & PolygenicTrait(x)) -> PolygenicTreatment(x))", "score": 0}
{"id": "eqasc_validation_155", "prediction": "all x.((MelaninContent(x) & PolygenicTrait(x)) -> PolygeneticTrait(x))", "score": 0}
{"id": "eqasc_validation_155", "prediction": "all x.((MelaninContent(x) & PolygenicTreatment(x)) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_156", "prediction": "all x.((SkinColor(x) & PhenotypicExpression(x)) -> VariatesOverWideRange(x))", "score": 3}
{"id": "eqasc_validation_156", "prediction": "all x y.((PhenotypicExpression(x) & SkinColor(y)) -> VariatesOverWideRange(x,y))", "score": 2}
{"id": "eqasc_validation_156", "prediction": "all x.((SkinColor(x) & PhenotypicExpression(x)) -> VariableOverWideRange(x))", "score": 1}
{"id": "eqasc_validation_156", "prediction": "all x y z.((PhenotypicExpression(x) & SkinColor(y) & WideRange(z)) -> Variable(x,y,z))", "score": 1}
{"id": "eqasc_validation_156", "prediction": "all x y z.((PhenotypicExpression(x) & SkinColor(y) & WideRange(z)) -> VariatesOverWideRange(x,y,z))", "score": 0}
{"id": "eqasc_validation_156", "prediction": "all x y.((PhenotypicExpression(x) & SkinColor(y)) -> VariableOverWideRange(x,y))", "score": 1}
{"id": "eqasc_validation_156", "prediction": "all x.((PhenotypicExpression(x) & SkinColor(x)) -> VariatesOverWideRange(x))", "score": 3}
{"id": "eqasc_validation_156", "prediction": "all x y z.((PhenotypicExpression(x) & SkinColor(y) & WideRange(z)) -> VariatesOver(x,y,z))", "score": 1}
{"id": "eqasc_validation_156", "prediction": "all x.(PhenotypicExpressionOfSkinColor(x) -> VariatesOverWideRange(x))", "score": 0}
{"id": "eqasc_validation_156", "prediction": "all x y z.((PhenotypicExpression(x) & SkinColor(y) & Range(z)) -> VariatesOverWideRange(x,y,z))", "score": 0}
{"id": "eqasc_validation_156", "prediction": "all x.((SkinColor(x) & PhenotypicExpression(x)) -> Variable(x))", "score": 0}
{"id": "eqasc_validation_157", "prediction": "all x y.((ReptileParent(x) & Young(y)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_157", "prediction": "all x.(ReptileParent(x) -> ProvidesLittleCareToYoung(x))", "score": 0}
{"id": "eqasc_validation_157", "prediction": "all x.(ReptileParent(x) -> ProvidesLittleCare(x))", "score": 0}
{"id": "eqasc_validation_157", "prediction": "all x y z.((ReptileParent(x) & Young(y) & Young(z)) -> ProvidesLittleCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_157", "prediction": "all x y.((ReptileParent(x) & Young(y) & ProvidesLittleCare(x,y)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_157", "prediction": "all x.(ReptileParent(x) -> (ProvidesLittleCare(x) | ProvidesLittleCare(x)))", "score": 0}
{"id": "eqasc_validation_157", "prediction": "all x y z.((ReptileParent(x) & Young(y) & Child(z)) -> ProvidesLittleCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_157", "prediction": "all x y.((ReptileParent(x) & Young(y)) -> (ProvidesLittleCare(x,y) | ProvidesLittleCare(x,y)))", "score": 0}
{"id": "eqasc_validation_157", "prediction": "all x.(ReptileParent(x) -> (ProvidesLittleCare(x) & Young(x)))", "score": 0}
{"id": "eqasc_validation_157", "prediction": "all x.((ReptileParent(x) & Young(y)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_157", "prediction": "all x y.((ReptileParent(x) & Young(y)) -> ProvidesLittleCareTo(x,y))", "score": 0}
{"id": "eqasc_validation_157", "prediction": "all x y z.((ReptileParent(x) & Young(y) & Reptile(z)) -> ProvidesLittleCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_157", "prediction": "all x y.((ReptileParent(x) & Young(y) & ProvidesLittleCare(x,y)) -> ProvidesCare(x,y))", "score": 0}
{"id": "eqasc_validation_157", "prediction": "all x y.((ReptileParent(x) & Young(y)) -> (ProvidesLittleCare(x,y) & ProvidesLittleCare(x,y)))", "score": 0}
{"id": "eqasc_validation_157", "prediction": "all x y.((ReptileParent(x) & Young(y)) -> ProvidesLittleIfAnyCare(x,y))", "score": 0}
{"id": "eqasc_validation_157", "prediction": "all x y z.((ReptileParent(x) & Young(y) & Young(z)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_158", "prediction": "all x y.((CrocodilianMother(x) & Reptile(y)) -> ProvidesMostParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_158", "prediction": "all x.((Mother(x) & Crocodilian(x)) -> ProvidesMostParentalCare(x))", "score": 0}
{"id": "eqasc_validation_158", "prediction": "all x y.((Mother(x) & Reptile(y) & Crocodilian(x)) -> ProvidesMostParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_158", "prediction": "all x y.((CrocodynilianMother(x) & Reptile(y)) -> ProvidesMostParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_158", "prediction": "all x y.((Mother(x) & Crocodilian(y)) -> ProvidesMostParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_158", "prediction": "all x y.((Mother(x) & Reptile(y)) -> ProvidesMostParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_158", "prediction": "all x y.((Crocodilian(x) & Reptile(y)) -> ProvidesMostParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_158", "prediction": "all x.((CrocodilianMother(x) & Reptile(y)) -> ProvidesMostParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_158", "prediction": "all x y.((CrocodillianMother(x) & Reptile(y)) -> ProvidesMostParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_158", "prediction": "all x y.((Mother(x) & Reptile(y) & Crocodilian(x,y)) -> ProvidesMostParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_158", "prediction": "all x.((CrocodilianMother(x) & Reptile(x)) -> ProvidesMostParentalCare(x))", "score": 0}
{"id": "eqasc_validation_158", "prediction": "all x y.((Mother(x) & Crocodilian(y) & Reptile(z)) -> ProvidesMostParentalCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_158", "prediction": "all x.((Mother(x) & Crocodilian(x)) -> ProvidesMostParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_158", "prediction": "all x y.((CrocodylianMother(x) & Reptile(y)) -> ProvidesMostParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_158", "prediction": "all x.(CrocodilianMother(x) -> ProvidesMostParentalCare(x))", "score": 0}
{"id": "eqasc_validation_158", "prediction": "all x.((Mother(x) & Crocodilian(x) & Reptile(x)) -> ProvidesMostParentalCare(x))", "score": 0}
{"id": "eqasc_validation_159", "prediction": "all x.((Mother(x) & Crocodilian(x)) -> AttentiveReptileParent(x))", "score": 0}
{"id": "eqasc_validation_159", "prediction": "all x.((Mother(x) & Crocodilian(x)) -> MostAttentiveReptileParent(x))", "score": 0}
{"id": "eqasc_validation_159", "prediction": "all x.(CrocodilianMother(x) -> AttentiveReptileParent(x))", "score": 0}
{"id": "eqasc_validation_159", "prediction": "all x.((Mother(x) & Crocodilian(x)) -> AttentiveReptile(x))", "score": 0}
{"id": "eqasc_validation_159", "prediction": "all x.(CrocodynilianMother(x) -> AttentiveReptileParent(x))", "score": 0}
{"id": "eqasc_validation_159", "prediction": "all x.((Mother(x) & Crocodilian(x)) -> MostAttentiveReptile(x))", "score": 0}
{"id": "eqasc_validation_159", "prediction": "all x y.((Mother(x) & Crocodilian(y)) -> AttentiveReptileParent(x,y))", "score": 0}
{"id": "eqasc_validation_159", "prediction": "all x.((Mother(x) & Crocodilian(x)) -> AwareReptileParent(x))", "score": 0}
{"id": "eqasc_validation_159", "prediction": "all x.((Mother(x) & Crocodilian(x)) -> Attentive(x))", "score": 0}
{"id": "eqasc_validation_159", "prediction": "all x.(CrocodillianMother(x) -> AttentiveReptileParent(x))", "score": 0}
{"id": "eqasc_validation_159", "prediction": "all x.((Mother(x) & CrocodilianMother(x)) -> AttentiveReptileParent(x))", "score": 0}
{"id": "eqasc_validation_159", "prediction": "all x.((Mother(x) & Crocodillian(x)) -> AttentiveReptileParent(x))", "score": 0}
{"id": "eqasc_validation_159", "prediction": "all x.((Mother(x) & Crocodilian(x)) -> AttentiveParent(x))", "score": 0}
{"id": "eqasc_validation_159", "prediction": "all x.(CrocodylianMother(x) -> AttentiveReptileParent(x))", "score": 0}
{"id": "eqasc_validation_159", "prediction": "all x.((Mother(x) & Crocodilian(x)) -> MostAttentionalReptileParent(x))", "score": 0}
{"id": "eqasc_validation_160", "prediction": "all x.(Iguana(x) -> (GoodReptile(x) & ExperiencedCaregivers(x)))", "score": 0}
{"id": "eqasc_validation_160", "prediction": "all x.(Iguana(x) -> (GoodReptile(x) & ExperiencedReptileCaregivers(x)))", "score": 0}
{"id": "eqasc_validation_160", "prediction": "all x.(Iguana(x) -> GoodReptile(x))", "score": 0}
{"id": "eqasc_validation_160", "prediction": "all x.(Iguana(x) -> (GoodReptile(x) & ForExperiencedReptileCaregivers(x)))", "score": 0}
{"id": "eqasc_validation_160", "prediction": "all x.(Iguana(x) -> (GoodReptile(x) & ForExperiencedCaregivers(x)))", "score": 0}
{"id": "eqasc_validation_160", "prediction": "all x.(Iguana(x) -> (GoodReptile(x) & GoodReptile(x) & ExperiencedCaregivers(x)))", "score": 0}
{"id": "eqasc_validation_160", "prediction": "all x.(Iguana(x) -> (GoodReptile(x) & GoodForExperiencedCaregivers(x)))", "score": 0}
{"id": "eqasc_validation_160", "prediction": "all x.(Iguana(x) -> (GoodReptile(x) & GoodForExperiencedReptileCaregivers(x)))", "score": 0}
{"id": "eqasc_validation_160", "prediction": "all x.(Iguana(x) -> (GoodReptile(x) & GoodReptile(x) & ExperiencedReptileCaregivers(x)))", "score": 0}
{"id": "eqasc_validation_160", "prediction": "all x.(Iguana(x) -> (GoodReptile(x) & ExperiencedReptileCaretakers(x)))", "score": 0}
{"id": "eqasc_validation_160", "prediction": "all x.(Iguana(x) -> (GoodReptile(x) & ExperiencedCaretakers(x)))", "score": 0}
{"id": "eqasc_validation_160", "prediction": "all x.(Iguana(x) -> (GoodReptile(x) & ForExperiencedReptileCaretakers(x)))", "score": 0}
{"id": "eqasc_validation_160", "prediction": "all x y.((Iguana(x) & Caretakers(y)) -> GoodReptile(x,y))", "score": 0}
{"id": "eqasc_validation_160", "prediction": "all x.(Iguana(x) -> (GoodReptile(x) & GoodReptile(x)))", "score": 0}
{"id": "eqasc_validation_160", "prediction": "all x y.((Iguana(x) & ReptileCaregivers(y)) -> GoodFor(x,y))", "score": 0}
{"id": "eqasc_validation_161", "prediction": "all x y.((IguanaParent(x) & Young(y)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_161", "prediction": "all x y.((IguanaParent(x) & Young(y)) -> ProvidesLittleCareTo(x,y))", "score": 0}
{"id": "eqasc_validation_161", "prediction": "all x.(IguanaParent(x) -> ProvidesLittleCareToYoung(x))", "score": 0}
{"id": "eqasc_validation_161", "prediction": "all x y z.((IguanaParent(x) & Young(y) & Iguana(z)) -> ProvidesLittleCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_161", "prediction": "all x y z.((IguanaParent(x) & Young(y) & Iguana(z)) -> ProvidesLittleCareTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_161", "prediction": "all x y.((IguanaParent(x) & YoungIguana(y)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_161", "prediction": "all x y.((IguanaParent(x) & YoungIguana(y)) -> ProvidesLittleCareTo(x,y))", "score": 0}
{"id": "eqasc_validation_161", "prediction": "all x y z.((IguanaParent(x) & YoungIguana(y) & YoungIguana(z)) -> ProvidesLittleCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_161", "prediction": "all x y.((IguanaParent(x) & Young(y) & ProvidesLittleCare(x,y)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_161", "prediction": "all x y z.((IguanaParent(x) & Young(y) & Young(z)) -> ProvidesLittleCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_161", "prediction": "all x y z.((IguanaParent(x) & Young(y) & Iguana(z)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_161", "prediction": "all x y z.((IguanaParent(x) & Iguana(y) & Young(z)) -> ProvidesLittleCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_161", "prediction": "all x y z.((IguanaParent(x) & YoungIguana(y) & YoungIguana(z)) -> ProvidesLittleCareTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_161", "prediction": "all x y z.((IguanaParent(x) & Young(y) & Young(z)) -> ProvidesLittleCareTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_161", "prediction": "all x y z.((IguanaParent(x) & Iguana(y) & Young(z)) -> ProvidesLittleCareTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_161", "prediction": "all x y z.((IguanaParent(x) & Young(y) & IguanaParent(z)) -> ProvidesLittleCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_162", "prediction": "all x.(Sparrowing(x) -> (AbandonsEggs(x) & -ProvidesParentalCare(x)))", "score": 0}
{"id": "eqasc_validation_162", "prediction": "all x.(Sparrowing(x) -> (AbandonsEggs(x) & ProvidesNoParentalCare(x)))", "score": 0}
{"id": "eqasc_validation_162", "prediction": "all x.(Sparrowing(x) -> (AbandonEggs(x) & ProvideNoParentalCare(x)))", "score": 0}
{"id": "eqasc_validation_162", "prediction": "all x.(Sparrowing(x) -> (AbandonEggs(x) & -ProvidesParentalCare(x)))", "score": 0}
{"id": "eqasc_validation_162", "prediction": "all x.(Sparrowing(x) -> (AbandonesEggs(x) & ProvidesNoParentalCare(x)))", "score": 0}
{"id": "eqasc_validation_162", "prediction": "all x.(Sparrowing(x) -> (AbandonesEggs(x) & -ProvidesParentalCare(x)))", "score": 0}
{"id": "eqasc_validation_162", "prediction": "all x y.((Sparrow(x) & Egg(y)) -> (Abandons(x,y) & -ProvidesParentalCare(x,y)))", "score": 0}
{"id": "eqasc_validation_162", "prediction": "all x y.((Sparrow(x) & Egg(y)) -> (Abandons(x,y) & ProvidesNoParentalCare(x,y)))", "score": 0}
{"id": "eqasc_validation_162", "prediction": "all x y.((Sparrowing(x) & Egg(y)) -> (Abandons(x,y) & ProvidesNoParentalCare(x,y)))", "score": 0}
{"id": "eqasc_validation_162", "prediction": "all x.(Sparrowing(x) -> (AbandonEggs(x) & NoParentalCare(x)))", "score": 0}
{"id": "eqasc_validation_162", "prediction": "all x.(Sparrowing(x) -> (AbandonsEggs(x) & NoParentalCare(x)))", "score": 0}
{"id": "eqasc_validation_162", "prediction": "all x y.((Sparrow(x) & Egg(y)) -> (Abandons(x,y) & ProvidesNoParentalCare(x)))", "score": 0}
{"id": "eqasc_validation_162", "prediction": "all x y.((Sparrow(x) & Egg(y)) -> (Abandons(x,y) & -ProvidesParentalCare(x)))", "score": 0}
{"id": "eqasc_validation_162", "prediction": "all x y.((Sparrowing(x) & Egg(y)) -> (Abandons(x,y) & ProvidesNoParentalCare(x)))", "score": 0}
{"id": "eqasc_validation_162", "prediction": "all x y.((Sparrow(x) & Egg(y)) -> (Abandon(x,y) & NoParentalCare(x,y)))", "score": 0}
{"id": "eqasc_validation_162", "prediction": "all x y.((Sparrow(x) & Egg(y)) -> (Abandons(x,y) & NoParentalCare(x)))", "score": 0}
{"id": "eqasc_validation_163", "prediction": "all x y.((ReptileParent(x) & Egg(y)) -> Abandons(x,y))", "score": 0}
{"id": "eqasc_validation_163", "prediction": "all x y z.((ReptileParent(x) & Egg(y) & Egg(z)) -> Abandons(x,y,z))", "score": 0}
{"id": "eqasc_validation_163", "prediction": "all x y.((ReptileParent(x) & Reptile(y)) -> AbandonsEggs(x,y))", "score": 0}
{"id": "eqasc_validation_163", "prediction": "all x y.((ReptileParent(x) & Reptile(y)) -> AdoptsEggs(x,y))", "score": 0}
{"id": "eqasc_validation_163", "prediction": "all x y.((ReptileParent(x) & Egg(y)) -> Adopts(x,y))", "score": 0}
{"id": "eqasc_validation_163", "prediction": "all x y z.((ReptileParent(x) & Egg(y) & Egg(z)) -> Adopts(x,y,z))", "score": 0}
{"id": "eqasc_validation_163", "prediction": "all x y z.((ReptileParent(x) & Egg(y) & Reptile(z)) -> Abandons(x,y,z))", "score": 0}
{"id": "eqasc_validation_163", "prediction": "all x y z.((ReptileParent(x) & Egg(y) & Reptile(z)) -> Adopts(x,y,z))", "score": 0}
{"id": "eqasc_validation_163", "prediction": "all x y.((ReptileParent(x) & Reptile(y)) -> (AbandonsEggs(x,y) | AbandonsEggs(x,y)))", "score": 0}
{"id": "eqasc_validation_163", "prediction": "all x.(ReptileParent(x) -> AbandonsEggs(x))", "score": 0}
{"id": "eqasc_validation_163", "prediction": "all x y z.((ReptileParent(x) & Egg(y) & ReptileParent(z)) -> Abandons(x,y,z))", "score": 0}
{"id": "eqasc_validation_163", "prediction": "all x.(ReptileParent(x) -> AdoptsEggs(x))", "score": 0}
{"id": "eqasc_validation_163", "prediction": "all x y z.((ReptileParent(x) & Egg(y) & Egg(z)) -> Abandon(x,y,z))", "score": 0}
{"id": "eqasc_validation_163", "prediction": "all x y z w.((ReptileParent(x) & Egg(y) & Egg(z) & Egg(w)) -> Abandons(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_163", "prediction": "all x y z.((ReptileParent(x) & Egg(y) & ReptileParent(z)) -> Adopts(x,y,z))", "score": 0}
{"id": "eqasc_validation_163", "prediction": "all x y z.((ReptileParent(x) & Egg(y) & Egg(z)) -> Abandons(x,y))", "score": 0}
{"id": "eqasc_validation_164", "prediction": "all x.((Alligator(x) | Crocodile(x)) -> LargestLivingReptile(x))", "score": 0}
{"id": "eqasc_validation_164", "prediction": "all x.((Alligator(x) | Crocodile(x)) -> LargestReptile(x))", "score": 0}
{"id": "eqasc_validation_164", "prediction": "all x.((Reptile(x) & (Alligator(x) | Crocodile(x))) -> Largest(x))", "score": 0}
{"id": "eqasc_validation_164", "prediction": "all x y.((Alligator(x) & Crocodile(y)) -> (LargestLivingReptile(x) & LargestLivingReptile(y)))", "score": 0}
{"id": "eqasc_validation_164", "prediction": "all x.(LargestLivingReptile(x) -> (Alligator(x) | Crocodile(x)))", "score": 0}
{"id": "eqasc_validation_164", "prediction": "all x.((Reptile(x) & (Alligator(x) | Crocodile(x))) -> LargestLiving(x))", "score": 0}
{"id": "eqasc_validation_164", "prediction": "all x y.((Alligator(x) | Crocodile(y)) -> LargestLivingReptile(x))", "score": 0}
{"id": "eqasc_validation_164", "prediction": "all x y.((Alligator(x) & Crocodile(y)) -> LargestLivingReptile(x))", "score": 0}
{"id": "eqasc_validation_164", "prediction": "all x.((Aligator(x) | Crocodile(x)) -> LargestLivingReptile(x))", "score": 0}
{"id": "eqasc_validation_164", "prediction": "all x y.((Alligator(x) & Crocodile(y)) -> (LargestLivingReptile(x) & LargestLivingReptile(x)))", "score": 0}
{"id": "eqasc_validation_164", "prediction": "all x y.((Alligator(x) & Crocodile(y)) -> LargestLivingReptile(x,y))", "score": 0}
{"id": "eqasc_validation_164", "prediction": "all x y.((Alligator(x) | Crocodile(y)) -> LargestReptile(x))", "score": 0}
{"id": "eqasc_validation_164", "prediction": "all x y.((Alligator(x) & Crocodile(y)) -> LargestReptile(x,y))", "score": 0}
{"id": "eqasc_validation_164", "prediction": "all x.((Aligator(x) | Crocodile(x)) -> LargestReptile(x))", "score": 0}
{"id": "eqasc_validation_164", "prediction": "all x.((Reptile(x) & (Alligator(x) | Crocodile(x))) -> LargestLivingReptile(x))", "score": 0}
{"id": "eqasc_validation_165", "prediction": "all x y.((Alligator(x) & CrocodileParent(y)) -> ProvidesLittleCareToYoung(x,y))", "score": 0}
{"id": "eqasc_validation_165", "prediction": "all x.((Alligator(x) | Crocodile(x)) -> ProvidesLittleCareToYoung(x))", "score": 0}
{"id": "eqasc_validation_165", "prediction": "all x y.((Alligator(x) | Crocodile(x)) & Young(y)) -> ProvidesLittleCare(x,y))", "score": -1}
{"id": "eqasc_validation_165", "prediction": "all x y.((Alligator(x) & Crocodile(y)) -> ProvidesLittleCareToYoung(x,y))", "score": 0}
{"id": "eqasc_validation_165", "prediction": "all x y.((Alligator(x) | Crocodile(x)) & Young(y)) -> ProvidesLittleCareTo(x,y))", "score": -1}
{"id": "eqasc_validation_165", "prediction": "all x y.((Alligator(x) | Crocodile(y)) & Young(y)) -> ProvidesLittleCareTo(x,y))", "score": -1}
{"id": "eqasc_validation_165", "prediction": "all x y.((AlligatorParent(x) & CrocodileParent(y)) -> ProvidesLittleCareToYoung(x,y))", "score": 0}
{"id": "eqasc_validation_165", "prediction": "all x y.((Alligator(x) | Crocodile(y)) & Young(y)) -> ProvidesLittleCare(x,y))", "score": -1}
{"id": "eqasc_validation_165", "prediction": "all x.((AlligatorParent(x) | CrocodileParent(x)) -> ProvidesLittleCareToYoung(x))", "score": 0}
{"id": "eqasc_validation_165", "prediction": "all x y.((Alligator(x) & CrocodileParent(y)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_165", "prediction": "all x.((Alligator(x) | CrocodileParent(x)) -> ProvidesLittleCareToYoung(x))", "score": 0}
{"id": "eqasc_validation_165", "prediction": "all x y z.((Alligator(x) & Crocodile(y) & Parent(z)) -> ProvidesLittleCareToYoung(z))", "score": 0}
{"id": "eqasc_validation_165", "prediction": "all x y.((Alligator(x) | Crocodile(x)) & Parent(y)) -> ProvidesLittleCareToYoung(y,x))", "score": -1}
{"id": "eqasc_validation_165", "prediction": "all x y.((Alligator(x) | CrocodileParent(y)) -> ProvidesLittleCareToYoung(x,y))", "score": 0}
{"id": "eqasc_validation_165", "prediction": "all x y.((Alligator(x) | Crocodile(y)) & Parent(x,y)) -> ProvidesLittleCareToYoung(x,y))", "score": -1}
{"id": "eqasc_validation_165", "prediction": "all x y z.((Alligator(x) | Crocodile(y) & Parent(z)) -> ProvidesLittleCareToYoung(z))", "score": 0}
{"id": "eqasc_validation_166", "prediction": "all x.(Lizard(x) -> Reptile(x))", "score": 0}
{"id": "eqasc_validation_166", "prediction": "all x y.((Lizard(x) & Reptile(y)) -> Reptile(x))", "score": 0}
{"id": "eqasc_validation_166", "prediction": "all x.(lizard(x) -> Reptile(x))", "score": 0}
{"id": "eqasc_validation_166", "prediction": "all x y.((Lizard(x) & Reptile(y)) -> Reptile(x,y))", "score": 0}
{"id": "eqasc_validation_166", "prediction": "all x y.((Lizard(x) & Reptile(y)) -> (Reptile(x) | Reptile(y)))", "score": 0}
{"id": "eqasc_validation_166", "prediction": "(all x.(Lizard(x) -> Reptile(x)))", "score": 0}
{"id": "eqasc_validation_166", "prediction": "all x y.((Lizard(x) & Reptile(y)) -> (Reptile(x) & Reptile(y)))", "score": 0}
{"id": "eqasc_validation_166", "prediction": "all x y.((Lizard(x) & Reptile(y)) -> (Reptile(x) | Reptile(x)))", "score": 0}
{"id": "eqasc_validation_166", "prediction": "all x y.((Lizard(x) & Reptile(x)) -> Reptile(y))", "score": 0}
{"id": "eqasc_validation_166", "prediction": "all x y.((Lizard(x) & Reptile(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_166", "prediction": "all x.((Lizard(x) & Reptile(x)) -> (Reptile(x) | Reptile(x)))", "score": 0}
{"id": "eqasc_validation_166", "prediction": "all x.((Lizard(x) & Reptile(x)) -> Reptile(x))", "score": 0}
{"id": "eqasc_validation_166", "prediction": "all x.(Leizard(x) -> Reptile(x))", "score": 0}
{"id": "eqasc_validation_166", "prediction": "all x y.((Lizard(x) & Reptile(y)) -> (Reptile(x) & Reptile(x)))", "score": 0}
{"id": "eqasc_validation_166", "prediction": "all x y.((Lizard(x) & Reptile(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_167", "prediction": "all x y.((LizardParent(x) & Young(y)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_167", "prediction": "all x y.((LizardParent(x) & Young(y)) -> ProvidesLittleCareTo(x,y))", "score": 0}
{"id": "eqasc_validation_167", "prediction": "all x y z.((LizardParent(x) & Young(y) & Lizard(z)) -> ProvidesLittleCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_167", "prediction": "all x y z.((LizardParent(x) & Young(y) & Young(z)) -> ProvidesLittleCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_167", "prediction": "all x.(LizardParent(x) -> ProvidesLittleCareToYoung(x))", "score": 0}
{"id": "eqasc_validation_167", "prediction": "all x y z.((LizardParent(x) & Young(y) & Lizard(z)) -> ProvidesLittleCareTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_167", "prediction": "all x y.((LizardParent(x) & Young(y)) -> ProvidesLittleIfAnyCare(x,y))", "score": 0}
{"id": "eqasc_validation_167", "prediction": "all x y.((LizardParent(x) & Young(y) & ProvidesLittleCare(x,y)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_167", "prediction": "all x y.((LizardParent(x) & Young(y)) -> (ProvidesLittleCare(x,y) | ProvidesLittleCare(x,y)))", "score": 0}
{"id": "eqasc_validation_167", "prediction": "all x y z.((LizardParent(x) & Young(y) & Lizard(z)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_167", "prediction": "all x y.((LizardParent(x) & Young(y)) -> (ProvidesLittleCare(x,y) & LittleCare(x,y)))", "score": 0}
{"id": "eqasc_validation_167", "prediction": "all x y z.((LizardParent(x) & Young(y) & Lizard(z)) -> ProvidesLittleCare(x,z))", "score": 0}
{"id": "eqasc_validation_167", "prediction": "all x y.((LizardParent(x) & Young(y)) -> LittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_167", "prediction": "all x y.((LizardParent(x) & Young(y)) -> ProvidesLittleIfNoCare(x,y))", "score": 0}
{"id": "eqasc_validation_167", "prediction": "all x.(LizardParent(x) -> ProvidesLittleCare(x))", "score": 0}
{"id": "eqasc_validation_167", "prediction": "all x y z.((LizardParent(x) & Young(y) & Young(z)) -> ProvidesLittleCareTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_168", "prediction": "all x y.((Mother(x) & Crocodilian(y)) -> ProvidesCareToYoung(x,y))", "score": 0}
{"id": "eqasc_validation_168", "prediction": "all x y z.((Mother(x) & Crocodilian(y) & Young(z)) -> ProvidesCareTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_168", "prediction": "all x y.((Mother(x) & Crocodilian(y) & Young(y)) -> ProvidesCareTo(x,y))", "score": 0}
{"id": "eqasc_validation_168", "prediction": "all x y.((CrocodilianMother(x) & Young(y)) -> ProvidesCareTo(x,y))", "score": 0}
{"id": "eqasc_validation_168", "prediction": "all x.((Mother(x) & Crocodilian(x)) -> ProvidesCareToYoung(x))", "score": 0}
{"id": "eqasc_validation_168", "prediction": "all x y z.((Mother(x) & Crocodilian(y) & Young(z)) -> ProvidesCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_168", "prediction": "all x y z.((CrocodilianMother(x) & Young(y) & CrocodilianMother(z)) -> ProvidesCareTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_168", "prediction": "all x y.((Mother(x) & Crocodilian(y) & Young(z)) -> ProvidesCareTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_168", "prediction": "all x y.((CrocodynilianMother(x) & Young(y)) -> ProvidesCareTo(x,y))", "score": 0}
{"id": "eqasc_validation_168", "prediction": "all x y z.((CrocodynilianMother(x) & Young(y) & CrocodilianMother(z)) -> ProvidesCareTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_168", "prediction": "all x y.((Mother(x) & Crocodillian(y)) -> ProvidesCareToYoung(x,y))", "score": 0}
{"id": "eqasc_validation_168", "prediction": "all x y.((CrocodillianMother(x) & Young(y)) -> ProvidesCareTo(x,y))", "score": 0}
{"id": "eqasc_validation_168", "prediction": "all x y.((Mother(x) & Crocodilian(x) & Young(y)) -> ProvidesCareTo(x,y))", "score": 0}
{"id": "eqasc_validation_168", "prediction": "all x.(CrocodilianMother(x) -> ProvidesCareToYoung(x))", "score": 0}
{"id": "eqasc_validation_168", "prediction": "all x y.((Mother(x) & Crocodilian(y)) -> ProvidesCare(x,y))", "score": 0}
{"id": "eqasc_validation_168", "prediction": "all x y.((CrocodylianMother(x) & Young(y)) -> ProvidesCareTo(x,y))", "score": 0}
{"id": "eqasc_validation_169", "prediction": "all x.(Geckos(x) -> Reptile(x))", "score": 0}
{"id": "eqasc_validation_169", "prediction": "all x y.((Geckos(x) & Reptile(y)) -> Reptile(x))", "score": 0}
{"id": "eqasc_validation_169", "prediction": "all x y.((Geckos(x) & Reptile(y)) -> (Reptile(x) & Reptile(y)))", "score": 0}
{"id": "eqasc_validation_169", "prediction": "all x y.((Geckos(x) & Reptile(y)) -> Reptile(x,y))", "score": 0}
{"id": "eqasc_validation_169", "prediction": "all x.(Gecko(x) -> Reptile(x))", "score": 0}
{"id": "eqasc_validation_169", "prediction": "all x y.((Geckos(x) & Reptile(y)) -> (Reptile(x) & Reptile(x)))", "score": 0}
{"id": "eqasc_validation_169", "prediction": "all x.((Geckos(x) & Reptile(x)) -> Reptile(x))", "score": 0}
{"id": "eqasc_validation_169", "prediction": "all x y z.((Geckos(x) & Reptile(y) & Reptile(z)) -> Reptile(x))", "score": 0}
{"id": "eqasc_validation_169", "prediction": "all x y.((Geckos(x) & Reptile(y)) -> (Reptile(x) | Reptile(y)))", "score": 0}
{"id": "eqasc_validation_169", "prediction": "all x.(Geckos(x) -> (Reptile(x) & Reptile(x)))", "score": 0}
{"id": "eqasc_validation_169", "prediction": "all x.(Geckos(x) -> Reptiles(x))", "score": 0}
{"id": "eqasc_validation_169", "prediction": "all x y.((Geckos(x) & Reptile(y)) -> InFactReptile(x))", "score": 0}
{"id": "eqasc_validation_169", "prediction": "all x.((Geckos(x) & Reptile(x)) -> Geckos(x))", "score": 0}
{"id": "eqasc_validation_169", "prediction": "all x y.((Geckos(x) & Reptile(y)) -> ReactsTo(x,y))", "score": 0}
{"id": "eqasc_validation_170", "prediction": "all x y.((GeckoParent(x) & Young(y)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_170", "prediction": "all x y z.((GeckoParent(x) & Young(y) & Young(z)) -> ProvidesLittleCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_170", "prediction": "all x y.((GeckoParent(x) & Young(y)) -> ProvidesLittleCareTo(x,y))", "score": 0}
{"id": "eqasc_validation_170", "prediction": "all x.(GeckoParent(x) -> ProvidesLittleCareToYoung(x))", "score": 0}
{"id": "eqasc_validation_170", "prediction": "all x y.((GeckoParent(x) & Young(y) & ProvidesLittleCare(x,y)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_170", "prediction": "all x y.((GeckoParent(x) & YoungGecko(y)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_170", "prediction": "all x y z.((GeckoParent(x) & YoungGecko(y) & YoungGecko(z)) -> ProvidesLittleCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_170", "prediction": "all x y.((GeckoParent(x) & Young(y)) -> (ProvidesLittleCare(x,y) | ProvidesLittleCare(x,y)))", "score": 0}
{"id": "eqasc_validation_170", "prediction": "all x y z.((GeckoParent(x) & Young(y) & Young(z)) -> ProvidesLittleCareTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_170", "prediction": "all x y.((GeckoParent(x) & Young(y)) -> ProvidesLittleIfAnyCare(x,y))", "score": 0}
{"id": "eqasc_validation_170", "prediction": "all x y z.((GeckoParent(x) & Young(y) & Young(z)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_170", "prediction": "all x y z.((GeckoParent(x) & Young(y) & Young(z)) -> (ProvidesLittleCare(x,y) | ProvidesLittleCare(x,z)))", "score": 0}
{"id": "eqasc_validation_170", "prediction": "all x y.((GeckoParent(x) & Young(y)) -> (ProvidesLittleCare(x,y) & LittleCare(x,y)))", "score": 0}
{"id": "eqasc_validation_170", "prediction": "all x y z.((GeckoParent(x) & Young(y) & Young(z)) -> (ProvidesLittleCare(x,y) & LittleCare(x,z)))", "score": 0}
{"id": "eqasc_validation_171", "prediction": "all x.(Reptile(x) -> ColdBlooded(x))", "score": 0}
{"id": "eqasc_validation_171", "prediction": "all x y.((Reptile(x) & ColdBlooded(y)) -> ColdBlooded(x))", "score": 0}
{"id": "eqasc_validation_171", "prediction": "all x.((Reptile(x) & ColdBlooded(x)) -> ColdBlooded(x))", "score": 0}
{"id": "eqasc_validation_171", "prediction": "all x y.((Reptile(x) & ColdBlooded(x)) -> ColdBlooded(x))", "score": 0}
{"id": "eqasc_validation_171", "prediction": "all x y.((Reptile(x) & ColdBlooded(x)) -> ColdBlooded(y))", "score": 0}
{"id": "eqasc_validation_171", "prediction": "all x y.((Reptile(x) & ColdBlooded(y)) -> ColdBlooded(x,y))", "score": 0}
{"id": "eqasc_validation_171", "prediction": "all x.(Rptile(x) -> ColdBlooded(x))", "score": 0}
{"id": "eqasc_validation_171", "prediction": "(all x.(Reptile(x) -> ColdBlooded(x)))", "score": 0}
{"id": "eqasc_validation_171", "prediction": "all x.(Roptile(x) -> ColdBlooded(x))", "score": 0}
{"id": "eqasc_validation_171", "prediction": "all x.(Riptile(x) -> ColdBlooded(x))", "score": 0}
{"id": "eqasc_validation_171", "prediction": "all x y.((Reptile(x) & ColdBlooded(x)) -> ColdBlooded(x,y))", "score": 0}
{"id": "eqasc_validation_171", "prediction": "all x y.((Reptile(x) & ColdBlooded(x,y)) -> ColdBlooded(x))", "score": 0}
{"id": "eqasc_validation_171", "prediction": "all x y.((Reptile(x) & ColdBlooded(y)) -> ColdBlooded(y))", "score": 0}
{"id": "eqasc_validation_171", "prediction": "All x.(Reptile(x) -> ColdBlooded(x))", "score": -1}
{"id": "eqasc_validation_171", "prediction": "all x y.((Reptile(x) & ColdBlooded(x,y)) -> ColdBlooded(x,y))", "score": 0}
{"id": "eqasc_validation_172", "prediction": "all x y.((ColdBloodedParent(x) & Young(y)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_172", "prediction": "all x.(ColdBloodedParent(x) -> ProvidesLittleCareToYoung(x))", "score": 0}
{"id": "eqasc_validation_172", "prediction": "all x.(ColdBloodedParent(x) -> ProvidesLittleCare(x))", "score": 0}
{"id": "eqasc_validation_172", "prediction": "all x y.((ColdBlooded(x) & Young(y)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_172", "prediction": "all x.((Parent(x) & ColdBlooded(x)) -> ProvidesLittleCareToYoung(x))", "score": 0}
{"id": "eqasc_validation_172", "prediction": "all x y z.((ColdBloodedParent(x) & Young(y) & ColdBlooded(z)) -> ProvidesLittleCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_172", "prediction": "all x.((ColdBloodedParent(x) & Young(y)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_172", "prediction": "all x y z.((ColdBloodedParent(x) & Young(y) & Child(z)) -> ProvidesLittleCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_172", "prediction": "all x y.((ColdBloodedParent(x) & Young(y)) -> ProvidesLittleCareTo(x,y))", "score": 0}
{"id": "eqasc_validation_172", "prediction": "all x y z.((ColdBloodedParent(x) & Young(y) & ColdBlooded(x)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_172", "prediction": "all x.((Parent(x) & ColdBlooded(x)) -> ProvidesLittleCare(x))", "score": 0}
{"id": "eqasc_validation_172", "prediction": "all x.(ColdBloodedParent(x) -> (ProvidesLittleCare(x) | ProvidesLittleCare(x)))", "score": 0}
{"id": "eqasc_validation_172", "prediction": "all x.(ColdBloodedParent(x) -> (ProvidesLittleCare(x) & Young(x)))", "score": 0}
{"id": "eqasc_validation_172", "prediction": "all x y z.((ColdBlooded(x) & Parent(y) & Young(z)) -> ProvidesLittleCare(y,z))", "score": 0}
{"id": "eqasc_validation_172", "prediction": "all x y.((ColdBloodedParent(x) & Young(y)) -> ProvidesLittleIfAnyCare(x,y))", "score": 0}
{"id": "eqasc_validation_172", "prediction": "all x.(ColdBloodedParents(x) -> ProvidesLittleCareToYoung(x))", "score": 0}
{"id": "eqasc_validation_173", "prediction": "all x y.((GroundTissue(x) & Plant(y)) -> MakesUpInterior(x,y))", "score": 0}
{"id": "eqasc_validation_173", "prediction": "all x.(GroundTissue(x) -> MakesUpInteriorOfPlant(x))", "score": 0}
{"id": "eqasc_validation_173", "prediction": "all x y z.((GroundTissue(x) & Plant(y) & Interior(z)) -> MakesUp(x,y,z))", "score": 0}
{"id": "eqasc_validation_173", "prediction": "all x y z.((GroundTissue(x) & Plant(y) & Plant(z)) -> MakesUpInterior(x,y,z))", "score": 0}
{"id": "eqasc_validation_173", "prediction": "all x y z.((GroundTissue(x) & Plant(y) & Interior(z)) -> MakesUpMost(x,y,z))", "score": 0}
{"id": "eqasc_validation_173", "prediction": "all x y.((GroundTissue(x) & Plant(y)) -> MakesUpInteriorOf(x,y))", "score": 0}
{"id": "eqasc_validation_173", "prediction": "all x y z.((GroundTissue(x) & Plant(y) & Interior(z)) -> MakesUpMostOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_173", "prediction": "all x y z.((GroundTissue(x) & Plant(y) & Interior(z)) -> MakesUpInterior(x,y,z))", "score": 0}
{"id": "eqasc_validation_173", "prediction": "all x y.((GroundTissue(x) & Plant(y) & MakesUpInterior(x,y)) -> MakesUpInterior(x,y))", "score": 0}
{"id": "eqasc_validation_173", "prediction": "all x y z.((GroundTissue(x) & Plant(y) & Interior(z)) -> MakesUp(x,z))", "score": 0}
{"id": "eqasc_validation_173", "prediction": "all x y z.((GroundTissue(x) & Plant(y) & Interior(z)) -> MakesUpInside(x,y,z))", "score": 0}
{"id": "eqasc_validation_173", "prediction": "all x y.((GroundTissue(x) & Plant(y)) -> (MakesUpInterior(x,y) | MakesUpInterior(x,y)))", "score": 0}
{"id": "eqasc_validation_173", "prediction": "all x.((GroundTissue(x) & Plant(y)) -> MakesUpInterior(x,y))", "score": 0}
{"id": "eqasc_validation_173", "prediction": "all x y z.((GroundTissue(x) & Plant(y) & Interior(z)) -> MakesUpMost(x,z))", "score": 0}
{"id": "eqasc_validation_173", "prediction": "all x y z.((GroundTissue(x) & Plant(y) & Interior(z)) -> MakesUpMostOf(x,z))", "score": 0}
{"id": "eqasc_validation_173", "prediction": "all x y.((GroundTissue(x) & Plant(y)) -> (MakesUpInterior(x,y) & MakesUpInterior(x,y)))", "score": 0}
{"id": "eqasc_validation_174", "prediction": "all x.(Oak(x) -> MostCommonlyAttackedPlant(x))", "score": 0}
{"id": "eqasc_validation_174", "prediction": "all x.(Oak(x) -> AttackedPlant(x))", "score": 0}
{"id": "eqasc_validation_174", "prediction": "all x.(Oak(x) -> MostFrequentlyAttackedPlant(x))", "score": 0}
{"id": "eqasc_validation_174", "prediction": "all x.(Oak(x) -> MostCommonlyAttachedPlant(x))", "score": 0}
{"id": "eqasc_validation_174", "prediction": "all x.(Oak(x) -> MostFrequentlyAttachedPlant(x))", "score": 0}
{"id": "eqasc_validation_174", "prediction": "all x.(Oak(x) -> CommonlyAttackedPlant(x))", "score": 0}
{"id": "eqasc_validation_174", "prediction": "all x.(Oak(x) -> MostFrequentlyAssaultedPlant(x))", "score": 0}
{"id": "eqasc_validation_174", "prediction": "all x y.((Oak(x) & Plant(y)) -> MostFrequentlyAttacked(x,y))", "score": 0}
{"id": "eqasc_validation_174", "prediction": "all x y.((Oak(x) & Plant(y)) -> MostCommonlyAttacked(x,y))", "score": 0}
{"id": "eqasc_validation_174", "prediction": "all x.(Oak(x) -> OftenAttackedPlant(x))", "score": 0}
{"id": "eqasc_validation_174", "prediction": "all x.(Oak(x) -> MostAttackedPlant(x))", "score": 0}
{"id": "eqasc_validation_174", "prediction": "all x.(Oak(x) -> MostCommonlyAssaultedPlant(x))", "score": 0}
{"id": "eqasc_validation_174", "prediction": "all x.(Oak(x) -> MostOftenAttackedPlant(x))", "score": 0}
{"id": "eqasc_validation_174", "prediction": "all x.(Oak(x) -> AfflictedPlant(x))", "score": 0}
{"id": "eqasc_validation_174", "prediction": "all x.(Oak(x) -> MostCommonlyAttastedPlant(x))", "score": 0}
{"id": "eqasc_validation_174", "prediction": "all x y.((Oak(x) & Plant(y)) -> Attacked(x,y))", "score": 0}
{"id": "eqasc_validation_175", "prediction": "all x y.((GroundTissue(x) & Oak(y)) -> MakesUpInterior(x,y))", "score": 0}
{"id": "eqasc_validation_175", "prediction": "all x y z.((GroundTissue(x) & Oak(y) & Oak(z)) -> MakesUpInterior(x,y,z))", "score": 0}
{"id": "eqasc_validation_175", "prediction": "all x y z.((GroundTissue(x) & Oak(y) & Oak(z)) -> MakesUpInteriorOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_175", "prediction": "all x y.((GroundTissue(x) & Oak(y)) -> MakesUpInteriorOf(x,y))", "score": 0}
{"id": "eqasc_validation_175", "prediction": "all x y z.((GroundTissue(x) & Oak(y) & Oak(z)) -> MakesUpInterior(x,y))", "score": 0}
{"id": "eqasc_validation_175", "prediction": "all x y z.((GroundTissue(x) & Oak(y) & Oak(z)) -> MakesUpInterior(x,z))", "score": 0}
{"id": "eqasc_validation_175", "prediction": "all x y.((Oak(x) & GroundTissue(y)) -> MakesUpInterior(y,x))", "score": 0}
{"id": "eqasc_validation_175", "prediction": "all x y.((GradTissue(x) & Oak(y)) -> MakesUpInterior(x,y))", "score": 0}
{"id": "eqasc_validation_175", "prediction": "all x y z.((GroundTissue(x) & Oak(y) & Oak(z)) -> MakesUpInteriorInside(x,y,z))", "score": 0}
{"id": "eqasc_validation_175", "prediction": "all x.((GroundTissue(x) & Oak(y)) -> MakesUpInterior(x,y))", "score": 0}
{"id": "eqasc_validation_175", "prediction": "all x y z.((GradTissue(x) & Oak(y) & Oak(z)) -> MakesUpInterior(x,y,z))", "score": 0}
{"id": "eqasc_validation_175", "prediction": "all x y.((GroundTissue(x) & Oak(y)) -> MakesUpInteriorOfOak(x,y))", "score": 0}
{"id": "eqasc_validation_175", "prediction": "all x y.((GroundTissue(x) & Oak(y)) -> MakesUpInteriorInside(x,y))", "score": 0}
{"id": "eqasc_validation_175", "prediction": "all x y z.((GroundTissue(x) & Oak(y) & Oak(z)) -> MakesUpInteriorMost(x,y,z))", "score": 0}
{"id": "eqasc_validation_175", "prediction": "all x y z.((GroundTissue(x) & Oak(y) & Oak(z)) -> MakesUpInteriorMostOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_175", "prediction": "all x y.((GroundTissue(x) & Oak(y)) -> MakesUpInteriorMostOf(x,y))", "score": 0}
{"id": "eqasc_validation_176", "prediction": "all x y.((VascularTissue(x) & Roots(y)) -> DrawsWaterIntoPlantFromGround(x,y))", "score": 0}
{"id": "eqasc_validation_176", "prediction": "all x.((VascularTissue(x) & RootsInvolved(x)) -> DrawsWaterIntoPlantFromGround(x))", "score": 0}
{"id": "eqasc_validation_176", "prediction": "all x y.((VascularTissue(x) & Roots(y)) -> DrawsWaterIntoPlant(x,y))", "score": 0}
{"id": "eqasc_validation_176", "prediction": "all x y z.((VascularTissue(x) & Roots(y) & Plant(z)) -> DrawsWaterFromGround(x,z))", "score": 0}
{"id": "eqasc_validation_176", "prediction": "all x y.((VascularTissue(x) & Roots(y)) -> DrawsWaterIntoPlantFromGround(x))", "score": 0}
{"id": "eqasc_validation_176", "prediction": "all x y z.((VascularTissue(x) & Roots(y) & Plant(z)) -> DrawsWaterFromGround(x,y,z))", "score": 0}
{"id": "eqasc_validation_176", "prediction": "all x y z.((VascularTissue(x) & Roots(y) & Plant(z)) -> DrawsWaterInto(x,z))", "score": 0}
{"id": "eqasc_validation_176", "prediction": "all x y.((VascularTissue(x) & Roots(y) & Plant(z)) -> DrawsWaterFromGround(x,z))", "score": 0}
{"id": "eqasc_validation_176", "prediction": "all x y.((VascularTissue(x) & Roots(y)) -> DrawsWaterFromGround(x,y))", "score": 0}
{"id": "eqasc_validation_176", "prediction": "all x.((VascularTissue(x) & Roots(x)) -> DrawsWaterIntoPlantFromGround(x))", "score": 0}
{"id": "eqasc_validation_176", "prediction": "all x y.((VascularTissue(x) & Roots(y) & Involves(x,y)) -> DrawsWaterIntoPlantFromGround(x))", "score": 0}
{"id": "eqasc_validation_176", "prediction": "all x y.((VascularTissue(x) & Roots(y)) -> DrawsWater(x,y))", "score": 0}
{"id": "eqasc_validation_176", "prediction": "all x y.((VascularTissue(x) & Roots(y)) -> DrawWaterIntoPlantFromGround(x,y))", "score": 0}
{"id": "eqasc_validation_176", "prediction": "all x.((VascularTissue(x) & RootsInvolved(x)) -> DrawWaterIntoPlantFromGround(x))", "score": 0}
{"id": "eqasc_validation_176", "prediction": "all x y z.((VascularTissue(x) & Roots(y) & Plant(z)) -> DrawsWaterInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_176", "prediction": "all x y.((VascularTissue(x) & Roots(y) & Involves(x,y)) -> DrawsWaterIntoPlantFromGround(x,y))", "score": 0}
{"id": "eqasc_validation_177", "prediction": "all x y.((VascularTissue(x) & Roots(y)) -> MakesUpInteriorOfPlant(x,y))", "score": 0}
{"id": "eqasc_validation_177", "prediction": "all x.((VascularTissue(x) & Roots(x)) -> InteriorOfPlant(x))", "score": 0}
{"id": "eqasc_validation_177", "prediction": "all x.((VascularTissue(x) & Roots(x)) -> MakesUpInteriorOfPlant(x))", "score": 0}
{"id": "eqasc_validation_177", "prediction": "all x y z.((VascularTissue(x) & Roots(y) & Plant(z)) -> MakesUpInterior(x,y,z))", "score": 0}
{"id": "eqasc_validation_177", "prediction": "all x y.((VascularTissue(x) & Roots(y)) -> MakesUpInterior(x,y))", "score": 0}
{"id": "eqasc_validation_177", "prediction": "all x y.((VascularTissue(x) & Roots(y)) -> InteriorOfPlant(x,y))", "score": 0}
{"id": "eqasc_validation_177", "prediction": "all x y z.((VascularTissue(x) & Roots(y) & Plant(z)) -> (MakesUpInterior(x,y,z) & MakesUpInterior(y,z)))", "score": 0}
{"id": "eqasc_validation_177", "prediction": "all x y z.((VascularTissue(x) & Roots(y) & Plant(z)) -> MakesUpInterior(x,z))", "score": 0}
{"id": "eqasc_validation_177", "prediction": "all x y.((VascularTissue(x) & Root(y)) -> MakesUpInteriorOfPlant(x,y))", "score": 0}
{"id": "eqasc_validation_177", "prediction": "all x y z.((VascularTissue(x) & Roots(y) & Plant(z)) -> MakesInteriorOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_177", "prediction": "all x y z.((VascularTissue(x) & Roots(y) & Plant(z)) -> (MakesUpInterior(x,y,z) | MakesUpInterior(y,z)))", "score": 0}
{"id": "eqasc_validation_177", "prediction": "all x y z.((VascularTissue(x) & Roots(y) & Plant(z)) -> MakesUpInteriorOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_177", "prediction": "all x y z.((VascularTissue(x) & Roots(y) & Plant(z)) -> (MakesUpInterior(x,y,z) | MakesUpInterior(x,y,z)))", "score": 0}
{"id": "eqasc_validation_177", "prediction": "all x y.((Plant(x) & VascularTissue(y) & Roots(y)) -> MakesUpInterior(x,y))", "score": 0}
{"id": "eqasc_validation_177", "prediction": "all x y z.((VascularTissue(x) & Roots(y) & Plant(z)) -> (MakesUpInterior(x,y,z) & MakesUpInterior(x,z)))", "score": 0}
{"id": "eqasc_validation_177", "prediction": "all x y.((VascularTissue(x) & Roots(y) & Plant(z)) -> MakesUpInterior(x,y,z))", "score": 0}
{"id": "eqasc_validation_178", "prediction": "all x.(Fern(x) -> SeedlessPlant(x))", "score": 0}
{"id": "eqasc_validation_178", "prediction": "all x y.((Fern(x) & SeedlessPlant(y)) -> SeedlessPlant(x))", "score": 0}
{"id": "eqasc_validation_178", "prediction": "all x y.((Fern(x) & SeedlessPlant(y)) -> SeedlessPlant(x,y))", "score": 0}
{"id": "eqasc_validation_178", "prediction": "all x y z.((Fern(x) & SeedlessPlant(y) & SeedlessPlant(z)) -> SeedlessPlant(x,y,z))", "score": 0}
{"id": "eqasc_validation_178", "prediction": "all x y.((Fern(x) & SeedlessPlant(y)) -> Seedless(x,y))", "score": 0}
{"id": "eqasc_validation_178", "prediction": "all x y.((Fern(x) & SeedlessPlant(y)) -> Seedless(x))", "score": 0}
{"id": "eqasc_validation_178", "prediction": "all x y.((Fern(x) & SeedlessPlant(y)) -> Plant(x,y))", "score": 0}
{"id": "eqasc_validation_178", "prediction": "all x y z.((Fern(x) & SeedlessPlant(y) & Plant(z)) -> SeedlessPlant(x,y,z))", "score": 0}
{"id": "eqasc_validation_178", "prediction": "all x y z.((Fern(x) & SeedlessPlant(y) & SeedlessPlant(z)) -> SeedlessPlant(x))", "score": 0}
{"id": "eqasc_validation_178", "prediction": "all x y z.((Fern(x) & SeedlessPlant(y) & Plant(z)) -> Seedless(x,y,z))", "score": 0}
{"id": "eqasc_validation_178", "prediction": "all x y.((Fern(x) & SeedlessPlant(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_178", "prediction": "all x y.((Fern(x) & SeedlessPlant(y)) -> OneType(x,y))", "score": 0}
{"id": "eqasc_validation_178", "prediction": "all x y z.((Fern(x) & SeedlessPlant(y) & SeedlessPlant(z)) -> SeedlessPlant(x,y))", "score": 0}
{"id": "eqasc_validation_178", "prediction": "all x y z.((Fern(x) & SeedlessPlant(y) & SeedlessPlant(z)) -> Plant(x,y,z))", "score": 0}
{"id": "eqasc_validation_178", "prediction": "all x.((Fern(x) & SeedlessPlant(x)) -> SeedlessPlant(x))", "score": 0}
{"id": "eqasc_validation_179", "prediction": "all x y.((GroundTissue(x) & Fern(y)) -> MakesUpInterior(x,y))", "score": 0}
{"id": "eqasc_validation_179", "prediction": "all x y z.((GroundTissue(x) & Fern(y) & Interior(z)) -> MakesUpInterior(x,y,z))", "score": 0}
{"id": "eqasc_validation_179", "prediction": "all x.(GroundTissue(x) -> MakesUpInteriorOfFerns(x))", "score": 0}
{"id": "eqasc_validation_179", "prediction": "all x y z.((GroundTissue(x) & Fern(y) & Interior(z)) -> MakesUpMostOfInterior(x,y,z))", "score": 0}
{"id": "eqasc_validation_179", "prediction": "all x y.((GroundTissue(x) & Fern(y)) -> MakesUpInteriorOfInterior(x,y))", "score": 0}
{"id": "eqasc_validation_179", "prediction": "all x y z.((GroundTissue(x) & Fern(y) & Interior(z)) -> MakesUpInteriorOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_179", "prediction": "all x y z.((GroundTissue(x) & Fern(y) & Interior(z)) -> MakesUpInterior(x,z))", "score": 0}
{"id": "eqasc_validation_179", "prediction": "all x y z.((GroundTissue(x) & Fern(y) & Interior(z)) -> MakesUpInterior(x,y))", "score": 0}
{"id": "eqasc_validation_179", "prediction": "all x.((GroundTissue(x) & InteriorOfFerns(x)) -> MakesUpMostOfInteriorOfFerns(x))", "score": 0}
{"id": "eqasc_validation_179", "prediction": "all x y.((GroundTissue(x) & Fern(y)) -> (MakesUpInterior(x,y) & MakesUpInterior(x,y)))", "score": 0}
{"id": "eqasc_validation_179", "prediction": "all x y.((GroundTissue(x) & Fern(y)) -> (MakesUpInterior(x,y) | MakesUpInterior(x,y)))", "score": 0}
{"id": "eqasc_validation_179", "prediction": "all x y.((GroundTissue(x) & Fern(y) & Interior(x,y)) -> MakesUpInterior(x,y))", "score": 0}
{"id": "eqasc_validation_179", "prediction": "all x y.((Fern(x) & GroundTissue(y)) -> MakesUpInterior(y,x))", "score": 0}
{"id": "eqasc_validation_179", "prediction": "all x y z.((Fern(x) & GroundTissue(y) & Interior(z)) -> MakesUpInterior(y,z))", "score": 0}
{"id": "eqasc_validation_179", "prediction": "all x.((GroundTissue(x) & InteriorOfFerns(x)) -> MakesUpMostOfInterior(x,ferns))", "score": 0}
{"id": "eqasc_validation_179", "prediction": "all x y.((GroundTissue(x) & Fern(y)) -> MakesUpInteriorOf(x,y))", "score": 0}
{"id": "eqasc_validation_180", "prediction": "all x.(Plant(x) -> HoldsNutrientsInTissue(x))", "score": 0}
{"id": "eqasc_validation_180", "prediction": "all x y.((Plant(x) & Tissue(y)) -> HoldsNutrients(x,y))", "score": 0}
{"id": "eqasc_validation_180", "prediction": "all x y.((Plant(x) & Tissue(y)) -> HoldsNutrientsIn(x,y))", "score": 0}
{"id": "eqasc_validation_180", "prediction": "all x y z.((Plant(x) & Nutrient(y) & Tissue(z)) -> HoldsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_180", "prediction": "all x y z.((Plant(x) & Tissue(y) & Nutrient(z)) -> HoldsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_180", "prediction": "all x y z.((Plant(x) & Nutrients(y) & Tissue(z)) -> HoldsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_180", "prediction": "all x y z.((Plant(x) & Tissue(y) & Nutrients(z)) -> HoldsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_180", "prediction": "all x y.((Plant(x) & Nutrient(y)) -> HoldsInTissue(x,y))", "score": 0}
{"id": "eqasc_validation_180", "prediction": "all x y z.((Plant(x) & Nutrient(y) & Tissue(z) & HoldsIn(x,y,z)) -> HoldsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_180", "prediction": "all x y z.((Plant(x) & Nutrient(y) & Tissue(z)) -> Holds(x,y,z))", "score": 0}
{"id": "eqasc_validation_180", "prediction": "all x.(Plant(x) -> exists y.(Tissue(y) & HoldsNutrients(x,y))))", "score": -1}
{"id": "eqasc_validation_180", "prediction": "all x.(Plant(x) -> (HoldsNutrientsInTissue(x)))", "score": 0}
{"id": "eqasc_validation_180", "prediction": "all x.(Plant(x) -> (HoldsNutrientsInTissue(x) & InTissue(x)))", "score": 0}
{"id": "eqasc_validation_180", "prediction": "all x.(Plant(x) -> HoldsNutrients(x))", "score": 0}
{"id": "eqasc_validation_180", "prediction": "all x.(Plant(x) -> exists y.(Tissue(y) & HoldsNutrients(x,y)))", "score": 0}
{"id": "eqasc_validation_180", "prediction": "all x y z.((Plant(x) & Nutrients(y) & Tissue(z)) -> Holds(x,y,z))", "score": 0}
{"id": "eqasc_validation_181", "prediction": "all x y.((Nutrient(x) & Tissue(y)) -> HeldIn(x,y))", "score": 0}
{"id": "eqasc_validation_181", "prediction": "all x y.((Nutrients(x) & Tissue(y)) -> HeldIn(x,y))", "score": 0}
{"id": "eqasc_validation_181", "prediction": "all x y z.((Nutrient(x) & Tissue(y) & Tissue(z)) -> HeldIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_181", "prediction": "all x y z.((Nutrients(x) & Tissue(y) & Tissue(z)) -> HeldIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_181", "prediction": "all x y z.((Nutrient(x) & Tissue(y) & Tissue(z)) -> HoldsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_181", "prediction": "all x.(Nutrients(x) -> HeldInTissue(x))", "score": 0}
{"id": "eqasc_validation_181", "prediction": "all x y.((Nutrient(x) & Tissue(y)) -> HoldsIn(x,y))", "score": 0}
{"id": "eqasc_validation_181", "prediction": "all x y z.((Nutrients(x) & Tissue(y) & Tissue(z)) -> HoldsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_181", "prediction": "all x y.((Nutrient(x) & Tissue(y) & HeldIn(x,y)) -> HoldsIn(x,y))", "score": 0}
{"id": "eqasc_validation_181", "prediction": "all x y z.((Nutrients(x) & Tissue(y) & Tissue(z)) -> HoldedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_181", "prediction": "all x y z.((Nutrients(x) & Tissue(y) & Tissue(z)) -> HoldenIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_181", "prediction": "all x y z.((Nutrient(x) & Tissue(y) & Tissue(z)) -> HoldedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_181", "prediction": "all x y z.((Nutrient(x) & Tissue(y) & Tissue(z)) -> HoldenIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_181", "prediction": "all x y.((Nutrient(x) & Tissue(y)) -> HeldInTissue(x,y))", "score": 0}
{"id": "eqasc_validation_181", "prediction": "all x y.((Nutrients(x) & Tissue(y)) -> HoldenIn(x,y))", "score": 0}
{"id": "eqasc_validation_181", "prediction": "all x y.((Nutrient(x) & Tissue(y)) -> HoldenIn(x,y))", "score": 0}
{"id": "eqasc_validation_182", "prediction": "all x y z.((Gas(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,y)) -> SpreadsOutIntoAir(x,z))", "score": 0}
{"id": "eqasc_validation_182", "prediction": "all x y.((Gas(x) & OpenContainer(y) & Evaporates(x,y)) -> SpreadsOutIntoAir(x,y))", "score": 0}
{"id": "eqasc_validation_182", "prediction": "all x y z.((Gas(x) & OpenContainer(y) & Evaporates(x,y)) -> SpreadsOutIntoAir(x,z))", "score": 0}
{"id": "eqasc_validation_182", "prediction": "all x y.((Gas(x) & OpenContainer(y) & Evaporates(x,y)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_182", "prediction": "all x y z.((Gas(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,z)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_182", "prediction": "all x y z.((Gas(x) & OpenContainer(y) & Gas(z) & Evaporates(x,y)) -> SpreadsOutIntoAir(z,y))", "score": 0}
{"id": "eqasc_validation_182", "prediction": "all x y z.((Gas(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,y)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_182", "prediction": "all x y z.((Gas(x) & OpenContainer(y) & Gas(z) & Evaporates(x,y)) -> SpreadsOutIntoAir(z))", "score": 0}
{"id": "eqasc_validation_182", "prediction": "all x y z.((Gas(x) & OpenContainer(y) & Gas(z) & Evaporates(x,y)) -> SpreadsOutIntoAir(x,z))", "score": 0}
{"id": "eqasc_validation_182", "prediction": "all x y z.((Gas(x) & OpenContainer(y) & Evaporates(x,y) & Air(z)) -> SpreadsOutInto(x,z))", "score": 0}
{"id": "eqasc_validation_182", "prediction": "all x y z.((Gas(x) & OpenContainer(y) & GasEvaporates(x,y) & Air(z)) -> SpreadsOutInto(x,z))", "score": 0}
{"id": "eqasc_validation_182", "prediction": "all x y z w.((Gas(x) & OpenContainer(y) & Gas(z) & Evaporates(x,y)) -> SpreadsOutIntoAir(z,w))", "score": 0}
{"id": "eqasc_validation_182", "prediction": "all x y z.((Gas(x) & OpenContainer(y) & Evaporates(x,y)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_182", "prediction": "all x y z w.((Gas(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,y)) -> SpreadsOutIntoAir(x,z))", "score": 0}
{"id": "eqasc_validation_182", "prediction": "all x y z.((Gas(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,z)) -> SpreadsOutIntoAir(x,y))", "score": 0}
{"id": "eqasc_validation_182", "prediction": "all x y z.((Gas(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x)) -> SpreadsOutIntoAir(x,y,z))", "score": 0}
{"id": "eqasc_validation_183", "prediction": "all x.((Fume(x) & Evaporation(x)) -> PresentsDanger(x))", "score": 0}
{"id": "eqasc_validation_183", "prediction": "all x y.((Fume(x) & Evaporation(y)) -> PresentsDanger(x,y))", "score": 0}
{"id": "eqasc_validation_183", "prediction": "all x.((Fume(x) & Evaporation(x)) -> PresentsDangerous(x))", "score": 0}
{"id": "eqasc_validation_183", "prediction": "all x y z.((Fume(x) & Evaporation(y) & Evaporation(z)) -> PresentsDanger(x,y,z))", "score": 0}
{"id": "eqasc_validation_183", "prediction": "all x y.((Fume(x) & Evaporation(y)) -> PresentsDangerous(x,y))", "score": 0}
{"id": "eqasc_validation_183", "prediction": "all x.((Fume(x) & DuringEvaporation(x)) -> PresentsDanger(x))", "score": 0}
{"id": "eqasc_validation_183", "prediction": "all x y z.((Fume(x) & Evaporation(y) & Evaporation(z)) -> PresentsDangerous(x,y,z))", "score": 0}
{"id": "eqasc_validation_183", "prediction": "all x y z.((Fume(x) & Evaporation(y) & Evaporation(z)) -> PresentsDanger(x,y))", "score": 0}
{"id": "eqasc_validation_183", "prediction": "all x y.((Fume(x) & Evaporation(y) & PresentsDanger(x,y)) -> PresentsDanger(x,y))", "score": 0}
{"id": "eqasc_validation_184", "prediction": "all x y.((Gas(x) & OpenContainer(y) & SpreadsOut(x,y)) -> FumesPresentDanger(x))", "score": 0}
{"id": "eqasc_validation_184", "prediction": "all x y.((Gas(x) & OpenContainer(y) & SpreadsOut(x,y)) -> FumesPresentDanger(x,y))", "score": 0}
{"id": "eqasc_validation_184", "prediction": "all x y.((Gas(x) & OpenContainer(y) & SpreadsOut(x,y)) -> Fumes(x))", "score": 0}
{"id": "eqasc_validation_184", "prediction": "all x y z.((Gas(x) & OpenContainer(y) & SpreadsOut(x,y) & Fumes(z)) -> PresentsDanger(x,z))", "score": 0}
{"id": "eqasc_validation_184", "prediction": "all x.((GasInOpenContainer(x) & SpreadsOut(x)) -> FumesPresentDanger(x))", "score": 0}
{"id": "eqasc_validation_184", "prediction": "all x y.((Gas(x) & OpenContainer(y)) -> SpreadsOutFumes(x,y))", "score": 0}
{"id": "eqasc_validation_184", "prediction": "all x.((Gas(x) & OpenContainer(x)) -> SpreadsOutFumes(x))", "score": 0}
{"id": "eqasc_validation_184", "prediction": "all x y.((Gas(x) & OpenContainer(y) & SpreadsOut(x,y)) -> FumesPresentDangerous(x))", "score": 0}
{"id": "eqasc_validation_184", "prediction": "all x y.((Gas(x) & OpenContainer(y) & SpreadsOut(x,y)) -> ContainsFumes(x))", "score": 0}
{"id": "eqasc_validation_184", "prediction": "all x y.((Gas(x) & OpenContainer(y) & SpreadsOut(x,y)) -> (Fumes(x) & PresentDanger(x)))", "score": 0}
{"id": "eqasc_validation_184", "prediction": "all x y.((Gas(x) & OpenContainer(y) & SpreadsOut(x,y)) -> ContainsFumes(x,y))", "score": 0}
{"id": "eqasc_validation_185", "prediction": "all x.((Gases(x) & Vapours(x)) -> CanContaminateWorkplaceAir(x))", "score": 0}
{"id": "eqasc_validation_185", "prediction": "all x.((Gases(x) | Vapours(x)) -> CanContaminateWorkplaceAir(x))", "score": 0}
{"id": "eqasc_validation_185", "prediction": "all x y.((Gas(x) & Vapour(y)) -> CanContaminateWorkplaceAir(x,y))", "score": 0}
{"id": "eqasc_validation_185", "prediction": "all x y.((Gase(x) & Vapour(y)) -> CanContaminateWorkplaceAir(x,y))", "score": 0}
{"id": "eqasc_validation_185", "prediction": "all x.((Gas(x) & Vapour(x)) -> CanContaminateWorkplaceAir(x))", "score": 0}
{"id": "eqasc_validation_185", "prediction": "all x y.((Gas(x) & Vapour(y)) -> CanContaminateWorkplaceAir(x))", "score": 0}
{"id": "eqasc_validation_185", "prediction": "all x.((Gas(x) | Vapour(x)) -> CanContaminateWorkplaceAir(x))", "score": 0}
{"id": "eqasc_validation_185", "prediction": "all x y.((Gases(x) & Vapours(y)) -> CanContaminateWorkplaceAir(x,y))", "score": 0}
{"id": "eqasc_validation_185", "prediction": "all x y z.((Gas(x) & Vapour(y) & WorkplaceAir(z)) -> CanContaminate(x,y,z))", "score": 0}
{"id": "eqasc_validation_185", "prediction": "all x.((Gase(x) & Vapour(x)) -> CanContaminateWorkplaceAir(x))", "score": 0}
{"id": "eqasc_validation_185", "prediction": "all x.((Gase(x) | Vapour(x)) -> CanContaminateWorkplaceAir(x))", "score": 0}
{"id": "eqasc_validation_185", "prediction": "all x y.((Gas(x) & Vapour(y)) -> (ContaminatesWorkplaceAir(x,y)))", "score": 0}
{"id": "eqasc_validation_185", "prediction": "all x y.((Gas(x) & Vapour(y)) -> (ContaminatesWorkplaceAir(x) | ContaminatesWorkplaceAir(y)))", "score": 0}
{"id": "eqasc_validation_185", "prediction": "all x y.((Gase(x) & Vapour(y)) -> CanContaminateWorkplaceAir(x))", "score": 0}
{"id": "eqasc_validation_185", "prediction": "all x y.((Gas(x) & Vapour(y)) -> (ContaminatesWorkplaceAir(x) & CanContaminateWorkplaceAir(x)))", "score": 0}
{"id": "eqasc_validation_185", "prediction": "all x y.((Gases(x) & Vapours(y)) -> CanContaminateWorkplaceAir(x))", "score": 0}
{"id": "eqasc_validation_186", "prediction": "all x y.((DangerousGas(x) & OpenContainer(y) & Evaporates(x,y)) -> CanContaminateWorkplace(x))", "score": 0}
{"id": "eqasc_validation_186", "prediction": "all x y.((DangerousGas(x) & OpenContainer(y) & Evaporates(x,y)) -> CanContaminateWorkplace(x,y))", "score": 0}
{"id": "eqasc_validation_186", "prediction": "all x.((DangerousGas(x) & OpenContainer(x)) -> CanContaminateWorkplace(x))", "score": 0}
{"id": "eqasc_validation_186", "prediction": "all x y.((DangerousGas(x) & OpenContainer(y) & Evaporates(x)) -> CanContaminateWorkplace(x))", "score": 0}
{"id": "eqasc_validation_186", "prediction": "all x.((DangerousGasEvaporates(x) & OpenContainer(x)) -> CanContaminateWorkplace(x))", "score": 0}
{"id": "eqasc_validation_186", "prediction": "all x y z.((DangerousGas(x) & OpenContainer(y) & Workplace(z) & Evaporates(x,y)) -> CanContaminate(x,z))", "score": 0}
{"id": "eqasc_validation_186", "prediction": "all x y.((DangerousGas(x) & OpenContainer(y) & Evaporates(x)) -> CanContaminateWorkplace(x,y))", "score": 0}
{"id": "eqasc_validation_186", "prediction": "all x.((DangerousGas(x) & OpenContainerEvaporates(x)) -> CanContaminateWorkplace(x))", "score": 0}
{"id": "eqasc_validation_186", "prediction": "all x y.((DangerousGasEvaporates(x) & OpenContainer(y)) -> CanContaminateWorkplace(x,y))", "score": 0}
{"id": "eqasc_validation_186", "prediction": "all x.((DangerousGas(x) & FromOpenContainer(x)) -> CanContaminateWorkplace(x))", "score": 0}
{"id": "eqasc_validation_186", "prediction": "all x y.((DangerousGasEvaporatesFromOpenContainer(x) & Workplace(y)) -> CanContaminate(x,y))", "score": 0}
{"id": "eqasc_validation_186", "prediction": "all x y.((DangerousGas(x) & OpenContainer(y)) -> Evaporates(x,y))", "score": 0}
{"id": "eqasc_validation_186", "prediction": "all x y z.((DangerousGas(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,z)) -> CanContaminateWorkplace(x))", "score": 0}
{"id": "eqasc_validation_186", "prediction": "all x.((DangerousGasFromOpenContainer(x) & Evaporates(x)) -> CanContaminateWorkplace(x))", "score": 0}
{"id": "eqasc_validation_186", "prediction": "all x y z.((DangerousGas(x) & OpenContainer(y) & Workplace(z) & Evaporates(x)) -> CanContaminate(x,y,z))", "score": 0}
{"id": "eqasc_validation_186", "prediction": "all x.((DangerousGas(x) & OpenContainer(x) & Evaporates(x)) -> CanContaminateWorkplace(x))", "score": 0}
{"id": "eqasc_validation_187", "prediction": "all x.(Gas(x) -> Oxygen(x))", "score": 0}
{"id": "eqasc_validation_187", "prediction": "all x.(Gas(x) -> UsuallyOxygen(x))", "score": 0}
{"id": "eqasc_validation_187", "prediction": "all x.(Gas(x) -> (Oxygen(x) & Usually(x)))", "score": 0}
{"id": "eqasc_validation_187", "prediction": "all x.(Gas(x) -> (Oxygen(x)))", "score": 0}
{"id": "eqasc_validation_187", "prediction": "all x.(Gas(x) -> (Oxygen(x) | -Oxygen(x)))", "score": 0}
{"id": "eqasc_validation_187", "prediction": "all x.(Gas(x) -> (Oxygen(x) | Oxygen(x)))", "score": 0}
{"id": "eqasc_validation_187", "prediction": "all x.(Gas(x) -> (Oxygen(x) | Gas(x)))", "score": 0}
{"id": "eqasc_validation_187", "prediction": "all x y.((Gas(x) & Oxygen(y)) -> Usually(x,y))", "score": 0}
{"id": "eqasc_validation_187", "prediction": "all x.(Gas(x) -> (Oxygen(x) & UsuallyOxygen(x)))", "score": 0}
{"id": "eqasc_validation_187", "prediction": "all x.(Gas(x) -> NormallyOxygen(x))", "score": 0}
{"id": "eqasc_validation_187", "prediction": "all x.(Gas(x) -> IsOxygen(x))", "score": 0}
{"id": "eqasc_validation_187", "prediction": "all x.(Gas(x) -> TypicallyOxygen(x))", "score": 0}
{"id": "eqasc_validation_187", "prediction": "all x.(Gas(x) -> (Oxygen(x) & Typically(x)))", "score": 0}
{"id": "eqasc_validation_187", "prediction": "all x.(Gas(x) -> (Oxygen(x) & Normally(x)))", "score": 0}
{"id": "eqasc_validation_188", "prediction": "all x y z.((Oxygen(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,y)) -> SpreadsOutIntoAir(x,z))", "score": 0}
{"id": "eqasc_validation_188", "prediction": "all x y z.((Oxygen(x) & OpenContainer(y) & Evaporates(x,y) & Air(z)) -> SpreadsOutInto(x,z))", "score": 0}
{"id": "eqasc_validation_188", "prediction": "all x y z.((Oxygen(x) & OpenContainer(y) & Evaporates(x,y)) -> (OxygenSpreadsOutIntoAir(x)))", "score": 0}
{"id": "eqasc_validation_188", "prediction": "all x y z.((Oxygen(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,z)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_188", "prediction": "all x y z.((Oxygen(x) & OpenContainer(y) & Evaporates(x,y)) -> SpreadsOutIntoAir(x,z))", "score": 0}
{"id": "eqasc_validation_188", "prediction": "all x y z.((Oxygen(x) & OpenContainer(y) & OpenContainer(z)) -> (Evaporates(x,y) & SpreadsOutIntoAir(x,z)))", "score": 0}
{"id": "eqasc_validation_188", "prediction": "all x y z.((Oxygen(x) & OpenContainer(y) & Evaporates(x,y)) -> OxygenSpreadsOutIntoAir(x,z))", "score": 0}
{"id": "eqasc_validation_188", "prediction": "all x y z.((Oxygen(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,y)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_188", "prediction": "all x y z.((Oxygen(x) & OpenContainer(y) & Evaporates(x,y)) -> OxygenSpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_188", "prediction": "all x y z.((Oxygen(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,y)) -> OxygenSpreadsOutIntoAir(x,z))", "score": 0}
{"id": "eqasc_validation_188", "prediction": "all x y z w.((Oxygen(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,y)) -> SpreadsOutIntoAir(x,z))", "score": 0}
{"id": "eqasc_validation_188", "prediction": "all x y z w.((Oxygen(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,y)) -> OxygenSpreadsOutIntoAir(x,z))", "score": 0}
{"id": "eqasc_validation_188", "prediction": "all x y z.((Oxygen(x) & OpenContainer(y) & Evaporates(x,y) & Air(z)) -> SpreadsOut(x,z))", "score": 0}
{"id": "eqasc_validation_188", "prediction": "all x y z.((Oxygen(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,z)) -> SpreadsOutIntoAir(x,y))", "score": 0}
{"id": "eqasc_validation_188", "prediction": "all x y.((Oxygen(x) & OpenContainer(y) & Evaporates(x,y)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_188", "prediction": "all x y z.((Oxygen(x) & OpenContainer(y) & Evaporates(x,y) & Oxygen(z)) -> SpreadsOutIntoAir(x,z))", "score": 0}
{"id": "eqasc_validation_189", "prediction": "all x y.((Liquid(x) & Gas(y)) -> Evaporation(x))", "score": 0}
{"id": "eqasc_validation_189", "prediction": "all x.(Evaporation(x) -> (Liquid(x) & TurnsIntoGas(x)))", "score": 0}
{"id": "eqasc_validation_189", "prediction": "all x y.((Liquid(x) & Gas(y)) -> TurnsInto(x,y))", "score": 0}
{"id": "eqasc_validation_189", "prediction": "all x.(Evaporation(x) -> (LiquidTurnsIntoGas(x)))", "score": 0}
{"id": "eqasc_validation_189", "prediction": "all x y z.((Liquid(x) & Gas(y) & Liquid(z)) -> TurnsInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_189", "prediction": "all x y.((Liquid(x) & Gas(y) & TurnsInto(x,y)) -> Evaporation(x))", "score": 0}
{"id": "eqasc_validation_189", "prediction": "all x y.((Liquid(x) & Gas(y)) -> Evaporation(x,y))", "score": 0}
{"id": "eqasc_validation_189", "prediction": "all x.((Liquid(x) & Gas(x)) -> Evaporation(x))", "score": 0}
{"id": "eqasc_validation_189", "prediction": "all x y z.((Liquid(x) & Gas(y) & Liquid(z) & TurnsInto(x,y,z)) -> Evaporation(x))", "score": 0}
{"id": "eqasc_validation_189", "prediction": "all x.(Evaporation(x) -> TurnsIntoGas(x))", "score": 0}
{"id": "eqasc_validation_189", "prediction": "all x.((Liquid(x) & TurnsIntoGas(x)) -> Evaporation(x))", "score": 0}
{"id": "eqasc_validation_189", "prediction": "all x y z.((Liquid(x) & Gas(y) & Liquid(z) & TurnsInto(x,y)) -> Evaporation(x))", "score": 0}
{"id": "eqasc_validation_189", "prediction": "all x y.((Evaporation(x) & Liquid(y)) -> TurnsIntoGas(x,y))", "score": 0}
{"id": "eqasc_validation_189", "prediction": "all x y z.((Liquid(x) & Gas(y) & Liquid(z) & TurnsInto(x,y)) -> Evaporation(x,z))", "score": 0}
{"id": "eqasc_validation_190", "prediction": "all x y.((Liquid(x) & OpenContainer(y) & TurnsIntoGas(x,y)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_190", "prediction": "all x.((Liquid(x) & TurnsIntoGas(x) & OpenContainer(x)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_190", "prediction": "all x y z.((Liquid(x) & Gas(y) & OpenContainer(z) & TurnsInto(x,y,z)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_190", "prediction": "all x y.((Liquid(x) & OpenContainer(y) & TurnsIntoGas(x,y)) -> SpreadsIntoAir(x))", "score": 0}
{"id": "eqasc_validation_190", "prediction": "all x.((Liquid(x) & TurnsIntoGas(x) & OpenContainer(x)) -> SpreadsIntoAir(x))", "score": 0}
{"id": "eqasc_validation_190", "prediction": "all x y z.((Liquid(x) & Gas(y) & OpenContainer(z) & TurnsInto(x,y)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_190", "prediction": "all x y z.((Liquid(x) & Gas(y) & OpenContainer(z) & TurnsInto(x,y,z)) -> SpreadsIntoAir(x))", "score": 0}
{"id": "eqasc_validation_190", "prediction": "all x y z.((Liquid(x) & Gas(y) & OpenContainer(z) & TurnsInto(x,y)) -> SpreadsOutIntoAir(x,z))", "score": 0}
{"id": "eqasc_validation_190", "prediction": "all x y.((Liquid(x) & Gas(y) & OpenContainer(x)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_190", "prediction": "all x y z.((Liquid(x) & Gas(y) & OpenContainer(z) & TurnsIntoIn(x,y,z)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_190", "prediction": "all x y.((Liquid(x) & OpenContainer(y) & TurnsIntoGas(x,y)) -> SpreadsOutIntoAir(x,y))", "score": 0}
{"id": "eqasc_validation_190", "prediction": "all x y.((Liquid(x) & Gas(y) & OpenContainer(x) & TurnsInto(x,y)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_190", "prediction": "all x y z.((Liquid(x) & Gas(y) & OpenContainer(z) & TurnsInto(x,y)) -> SpreadsIntoAir(x))", "score": 0}
{"id": "eqasc_validation_190", "prediction": "all x y.((Liquid(x) & Gas(y) & OpenContainer(x)) -> SpreadsOutIntoAir(x,y))", "score": 0}
{"id": "eqasc_validation_190", "prediction": "all x y z.((Liquid(x) & OpenContainer(y) & Gas(z) & TurnsInto(x,z)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_190", "prediction": "all x.((Liquid(x) & OpenContainer(x) & TurnsIntoGas(x)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_191", "prediction": "all x.(Hydrogen(x) -> ExplosiveGas(x))", "score": 0}
{"id": "eqasc_validation_191", "prediction": "all x.((Hydrogen(x) & ExplosiveGas(x)) -> ExplosiveGas(x))", "score": 0}
{"id": "eqasc_validation_191", "prediction": "all x y.((Hydrogen(x) & ExplosiveGas(y)) -> ExplosiveGas(x))", "score": 0}
{"id": "eqasc_validation_191", "prediction": "all x y.((Hydrogen(x) & ExplosiveGas(y)) -> ExplosiveGas(x,y))", "score": 0}
{"id": "eqasc_validation_191", "prediction": "(Element(Hydrogen) & ExplosiveGas(Hydrogen))", "score": 0}
{"id": "eqasc_validation_191", "prediction": "all x.((Hydrogen(x) & ExplosiveGas(x)) -> Explosive(x))", "score": 0}
{"id": "eqasc_validation_191", "prediction": "all x y.((Hydrogen(x) & ExplosiveGas(y)) -> Explosive(x))", "score": 0}
{"id": "eqasc_validation_191", "prediction": "(all x.(Hydrogen(x) -> ExplosiveGas(x)))", "score": 0}
{"id": "eqasc_validation_191", "prediction": "all x y.((Hydrogen(x) & ExplosiveGas(x)) -> ExplosiveGas(y))", "score": 0}
{"id": "eqasc_validation_191", "prediction": "all x y.((Hydrogen(x) & ExplosiveGas(y)) -> Explosive(x,y))", "score": 0}
{"id": "eqasc_validation_191", "prediction": "all x y.((Hydrogen(x) & ExplosiveGas(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_191", "prediction": "all x.((Hydrogen(x) & ExplosiveGas(x)) -> ElectricGas(x))", "score": 0}
{"id": "eqasc_validation_191", "prediction": "all x.((Hydrogen(x) & ExplosiveGas(x)) -> SimilarTo(x,Hydrogen))", "score": 0}
{"id": "eqasc_validation_191", "prediction": "all x y.((Hydrogen(x) & ExplosiveGas(y)) -> ExplosiveGas(y))", "score": 0}
{"id": "eqasc_validation_191", "prediction": "all x y.((Hydrogen(x) & ExplosiveGas(x)) -> ExplosiveGas(x))", "score": 0}
{"id": "eqasc_validation_192", "prediction": "all x y.((Hydrogen(x) & OpenContainer(y) & EvaporatesFrom(x,y)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_192", "prediction": "all x y z.((Hydrogen(x) & OpenContainer(y) & OpenContainer(z) & EvaporatesFrom(x,y,z)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_192", "prediction": "all x y z.((Hydrogen(x) & OpenContainer(y) & OpenContainer(z) & EvaporatesFrom(x,y)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_192", "prediction": "all x y.((HydrogenEvaporates(x) & OpenContainer(y)) -> SpreadsOutIntoAir(x,y))", "score": 0}
{"id": "eqasc_validation_192", "prediction": "all x y z.((Hydrogen(x) & OpenContainer(y) & OpenContainer(z) & EvaporatesFrom(x,y)) -> SpreadsOutIntoAir(x,z))", "score": 0}
{"id": "eqasc_validation_192", "prediction": "all x y.((HydrogenEvaporatesFromOpenContainer(x) & OpenContainer(y)) -> SpreadsOutIntoAir(x,y))", "score": 0}
{"id": "eqasc_validation_192", "prediction": "all x.((HydrogenEvaporates(x) & OpenContainer(x)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_192", "prediction": "all x y z.((HydrogenEvaporatesFromOpenContainer(x) & OpenContainer(y) & Air(z)) -> SpreadsOutInto(x,z))", "score": 0}
{"id": "eqasc_validation_192", "prediction": "all x y.((Hydrogen(x) & OpenContainer(y) & Evaporates(x,y)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_192", "prediction": "all x y.((HydrogenEvaporatesFromOpenContainer(x) & OpenContainer(y)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_192", "prediction": "all x y.((Hydrogen(x) & OpenContainer(y)) -> (EvaporatesFrom(x,y) & SpreadsOutIntoAir(x)))", "score": 0}
{"id": "eqasc_validation_192", "prediction": "all x y z.((Hydrogen(x) & OpenContainer(y) & OpenContainer(z) & EvaporatesFrom(x,z)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_192", "prediction": "all x y z.((Hydrogen(x) & OpenContainer(y) & EvaporatesFrom(x,y)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_192", "prediction": "all x y z.((Hydrogen(x) & OpenContainer(y) & OpenContainer(z)) -> (EvaporatesFrom(x,y) & SpreadsOutIntoAir(x)))", "score": 0}
{"id": "eqasc_validation_192", "prediction": "all x y z.((HydrogenEvaporatesFromOpenContainer(x) & OpenContainer(y) & Air(z)) -> SpreadsOutInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_192", "prediction": "all x y z.((HydrogenEvaporates(x) & OpenContainer(y) & OpenContainer(z)) -> SpreadsOutIntoAir(x,y,z))", "score": 0}
{"id": "eqasc_validation_193", "prediction": "all x.(WaterVapor(x) -> GasInAir(x))", "score": 0}
{"id": "eqasc_validation_193", "prediction": "all x y.((WaterVapor(x) & Air(y)) -> GasIn(x,y))", "score": 0}
{"id": "eqasc_validation_193", "prediction": "all x y.((WaterVapor(x) & Air(y)) -> Gas(x,y))", "score": 0}
{"id": "eqasc_validation_193", "prediction": "all x y z.((WaterVapor(x) & Air(y) & Gas(z)) -> GasIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_193", "prediction": "all x y z.((WaterVapor(x) & Gas(y) & Air(z)) -> GasIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_193", "prediction": "all x y z.((WaterVapor(x) & Air(y) & Gas(z)) -> GasIn(x,y))", "score": 0}
{"id": "eqasc_validation_193", "prediction": "all x y z.((WaterVapor(x) & Air(y) & Gas(z)) -> GasInAir(x,y,z))", "score": 0}
{"id": "eqasc_validation_193", "prediction": "all x y z.((WaterVapor(x) & Air(y) & Gas(z)) -> Gas(x,y,z))", "score": 0}
{"id": "eqasc_validation_193", "prediction": "all x.((WaterVapor(x) & GasInAir(x)) -> GasInAir(x))", "score": 0}
{"id": "eqasc_validation_193", "prediction": "all x y.((WaterVapor(x) & Air(y)) -> Gas(x))", "score": 0}
{"id": "eqasc_validation_193", "prediction": "all x y z.((WaterVapor(x) & Gas(y) & Air(z)) -> Gas(x,y,z))", "score": 0}
{"id": "eqasc_validation_193", "prediction": "all x y z.((WaterVapor(x) & Air(y) & Gas(z)) -> GasIn(x,z))", "score": 0}
{"id": "eqasc_validation_193", "prediction": "all x y z.((WaterVapor(x) & Air(y) & Air(z)) -> GasIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_193", "prediction": "all x y z.((WaterVapor(x) & Air(y) & Gas(z)) -> InAir(x,y,z))", "score": 0}
{"id": "eqasc_validation_193", "prediction": "all x y z.((WaterVapor(x) & Air(y) & Gas(z)) -> Gas(x,y))", "score": 0}
{"id": "eqasc_validation_194", "prediction": "all x y z.((WaterVapor(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,y)) -> SpreadsOutIntoAir(x,z))", "score": 0}
{"id": "eqasc_validation_194", "prediction": "all x y z.((WaterVapor(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,z)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_194", "prediction": "all x y z.((WaterVapor(x) & OpenContainer(y) & OpenContainer(z)) -> (Evaporates(x,y) & SpreadsOutIntoAir(x,z)))", "score": 0}
{"id": "eqasc_validation_194", "prediction": "all x y z.((WaterVapor(x) & OpenContainer(y) & WaterVapor(z)) -> (Evaporates(x,y) & SpreadsOutIntoAir(x,z)))", "score": 0}
{"id": "eqasc_validation_194", "prediction": "all x y z.((WaterVapor(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,y)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_194", "prediction": "all x y z.((WaterVapor(x) & OpenContainer(y) & WaterVapor(z) & Evaporates(x,y)) -> SpreadsOutIntoAir(x,z))", "score": 0}
{"id": "eqasc_validation_194", "prediction": "all x y z.((WaterVapor(x) & OpenContainer(y) & WaterVapor(z)) -> (Evaporates(z) & SpreadsOutIntoAir(z)))", "score": 0}
{"id": "eqasc_validation_194", "prediction": "all x y z.((WaterVapor(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,y) & WaterVapor(x,z)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_194", "prediction": "all x y z w.((WaterVapor(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,y)) -> SpreadsOutIntoAir(x,z))", "score": 0}
{"id": "eqasc_validation_194", "prediction": "all x y z.((WaterVapor(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,y)) -> WaterVaporSpreadsOutIntoAir(x,z))", "score": 0}
{"id": "eqasc_validation_194", "prediction": "all x y z.((WaterVapor(x) & OpenContainer(y) & OpenContainer(z)) -> (Evaporates(x,z) & SpreadsOutIntoAir(x)))", "score": 0}
{"id": "eqasc_validation_194", "prediction": "all x y.((WaterVapor(x) & OpenContainer(y) & Evaporates(x,y)) -> SpreadsOutIntoAir(x,y))", "score": 0}
{"id": "eqasc_validation_194", "prediction": "all x y z.((WaterVapor(x) & OpenContainer(y) & Air(z)) -> (Evaporates(x,y) & SpreadsOutInto(x,z)))", "score": 0}
{"id": "eqasc_validation_194", "prediction": "all x y.((WaterVapor(x) & OpenContainer(y) & Evaporates(x,y)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_194", "prediction": "all x y z.((WaterVapor(x) & OpenContainer(y) & WaterVapor(z)) -> (Evaporates(x,y) & SpreadsOutIntoAir(z)))", "score": 0}
{"id": "eqasc_validation_194", "prediction": "all x y z.((WaterVapor(x) & OpenContainer(y) & WaterVapor(z) & Evaporates(x,y)) -> SpreadsOutIntoAir(z))", "score": 0}
{"id": "eqasc_validation_195", "prediction": "all x.(KidsLunchBox(x) -> MarvellousContainer(x))", "score": 0}
{"id": "eqasc_validation_195", "prediction": "all x.((Kids(x) & LunchBox(x)) -> MarvellousContainer(x))", "score": 0}
{"id": "eqasc_validation_195", "prediction": "all x y.((Kids(x) & LunchBox(y)) -> MarvellousContainer(x,y))", "score": 0}
{"id": "eqasc_validation_195", "prediction": "all x y.((KidsLunchBox(x) & Container(y)) -> Marvellous(x,y))", "score": 0}
{"id": "eqasc_validation_195", "prediction": "all x.(KidsLunchBox(x) -> MarvelousContainer(x))", "score": 0}
{"id": "eqasc_validation_195", "prediction": "all x y.((KidsLunchBox(x) & Container(y)) -> Marvellous(x))", "score": 0}
{"id": "eqasc_validation_195", "prediction": "all x.(Kids(x) -> (LunchBox(x) & MarvellousContainer(x)))", "score": 0}
{"id": "eqasc_validation_195", "prediction": "all x y.((Kids(x) & LunchBox(y)) -> MarvellousContainer(x))", "score": 0}
{"id": "eqasc_validation_195", "prediction": "all x.(Child(x) -> (LunchBox(x) & MarvellousContainer(x)))", "score": 0}
{"id": "eqasc_validation_195", "prediction": "all x.(KitchenLunchBox(x) -> MarvellousContainer(x))", "score": 0}
{"id": "eqasc_validation_195", "prediction": "all x.((Child(x) & LunchBox(x)) -> MarvellousContainer(x))", "score": 0}
{"id": "eqasc_validation_195", "prediction": "all x.((KidsLunchBox(x) & Container(y)) -> Marvellous(x))", "score": 0}
{"id": "eqasc_validation_195", "prediction": "all x.((KidsLunchBox(x) & Container(x)) -> Marvellous(x))", "score": 0}
{"id": "eqasc_validation_195", "prediction": "all x.(KidsLunchBox(x) -> FantasticContainer(x))", "score": 0}
{"id": "eqasc_validation_195", "prediction": "all x.(KidsLunchBox(x) -> MarvellousContainers(x))", "score": 0}
{"id": "eqasc_validation_195", "prediction": "all x y.((Kids(x) & LunchBox(y)) -> MarvellousContainer(y))", "score": 0}
{"id": "eqasc_validation_196", "prediction": "all x.((Gas(x) & OpenBox(x)) -> (Evaporates(x) & SpreadsOutIntoAir(x)))", "score": 0}
{"id": "eqasc_validation_196", "prediction": "all x.((GasInOpenBox(x)) -> (Evaporates(x) & SpreadsOutIntoAir(x)))", "score": 0}
{"id": "eqasc_validation_196", "prediction": "all x.((OpenBox(x) & PlacesGasIn(x)) -> (Evaporates(x) & SpreadsOutIntoAir(x)))", "score": 0}
{"id": "eqasc_validation_196", "prediction": "all x.((Gas(x) & PlacesInOpenBox(x)) -> (Evaporates(x) & SpreadsOutIntoAir(x)))", "score": 0}
{"id": "eqasc_validation_196", "prediction": "all x.((GasInOpenBox(x) & PlacesInOpenBox(x)) -> (Evaporates(x) & SpreadsOutIntoAir(x)))", "score": 0}
{"id": "eqasc_validation_196", "prediction": "all x.((PlacesGasInOpenBox(x)) -> (Evaporates(x) & SpreadsOutIntoAir(x)))", "score": 0}
{"id": "eqasc_validation_196", "prediction": "all x y.((Gas(x) & OpenBox(y)) -> (Evaporates(x) & SpreadsOutIntoAir(x)))", "score": 0}
{"id": "eqasc_validation_196", "prediction": "all x y.((Gas(x) & OpenBox(y)) -> (Evaporates(x,y) & SpreadsOutIntoAir(x,y)))", "score": 0}
{"id": "eqasc_validation_196", "prediction": "all x y.((Gas(x) & OpenBox(y) & PlacesIn(x,y)) -> (Evaporates(x) & SpreadsOutIntoAir(x)))", "score": 0}
{"id": "eqasc_validation_196", "prediction": "all x.((Gas(x) & OpenBox(x)) -> EvaporatesAndSpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_196", "prediction": "all x.((Gas(x) & OpenBox(x)) -> (Evaporates(x) & SpreadsIntoAir(x)))", "score": 0}
{"id": "eqasc_validation_196", "prediction": "all x.((Gas(x) & OpenBox(x)) -> EvaporatesAndSpreadsIntoAir(x))", "score": 0}
{"id": "eqasc_validation_196", "prediction": "all x.((Gas(x) & OpenBox(x)) -> (Evaporate(x) & SpreadOutIntoAir(x)))", "score": 0}
{"id": "eqasc_validation_196", "prediction": "all x.((GasInOpenBox(x) & PlacesInOpenBox(x)) -> EvaporatesAndSpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_196", "prediction": "all x y.((Gas(x) & OpenBox(y)) -> (Evaporates(x,y) & SpreadsOutIntoAir(x)))", "score": 0}
{"id": "eqasc_validation_196", "prediction": "all x.((Gas(x) & PlacesInOpenBox(x)) -> EvaporatesAndSpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_197", "prediction": "all x.((GeneratorExhaust(x) & DeadlyCarbonMonoxideGas(x)) -> SpreadsThroughoutEnclosedSpaces(x))", "score": 0}
{"id": "eqasc_validation_197", "prediction": "all x.((GeneratorExhaust(x) & DeadlyCarbonMonoxideGas(x)) -> CanSpreadThroughoutEnclosedSpaces(x))", "score": 0}
{"id": "eqasc_validation_197", "prediction": "all x y.((DeadlyCarbonMonoxideGas(x) & GeneratorExhaust(y)) -> SpreadsThroughoutEnclosedSpaces(x,y))", "score": 0}
{"id": "eqasc_validation_197", "prediction": "all x.((DeadlyCarbonMonoxideGas(x) & GeneratorsExhaust(x)) -> SpreadsThroughoutEnclosedSpaces(x))", "score": 0}
{"id": "eqasc_validation_197", "prediction": "all x y z.((DeadlyCarbonMonoxideGas(x) & GeneratorExhaust(y) & EnclosedSpace(z)) -> CanSpread(x,y,z))", "score": 0}
{"id": "eqasc_validation_197", "prediction": "all x y.((DeadlyCarbonMonoxideGas(x) & GeneratorsExhaust(y)) -> SpreadsThroughoutEnclosedSpaces(x,y))", "score": 0}
{"id": "eqasc_validation_197", "prediction": "all x y z.((DeadlyCarbonMonoxideGas(x) & GeneratorExhaust(y) & EnclosedSpace(z)) -> CanSpreadThroughout(x,y,z))", "score": 0}
{"id": "eqasc_validation_197", "prediction": "all x y z.((DeadlyCarbonMonoxideGas(x) & GeneratorExhaust(y) & EnclosedSpace(z)) -> SpreadsThroughout(x,y,z))", "score": 0}
{"id": "eqasc_validation_197", "prediction": "all x y.((DeadlyCarbonMonoxideGas(x) & GeneratorExhaust(y)) -> CanSpreadThroughoutEnclosedSpaces(x,y))", "score": 0}
{"id": "eqasc_validation_197", "prediction": "all x y.((DeadlyCarbonMonoxideGas(x) & GeneratorExhaust(y)) -> SpreadsThroughoutEnclosedSpaces(x))", "score": 0}
{"id": "eqasc_validation_197", "prediction": "all x.((DeadlyCarbonMonoxideGas(x) & GeneratorExhaust(x)) -> SpreadsThroughoutEnclosedSpaces(x))", "score": 0}
{"id": "eqasc_validation_197", "prediction": "all x y z.((DeadlyCarbonMonoxideGas(x) & GeneratorsExhaust(y) & EnclosedSpace(z)) -> SpreadsThroughout(x,y,z))", "score": 0}
{"id": "eqasc_validation_197", "prediction": "all x y z.((DeadlyCarbonMonoxideGas(x) & GeneratorsExhaust(y) & EnclosedSpaces(z)) -> CanSpread(x,y,z))", "score": 0}
{"id": "eqasc_validation_197", "prediction": "all x y z.((DeadlyCarbonMonoxideGas(x) & GeneratorsExhaust(y) & EnclosedSpaces(z)) -> SpreadsThroughout(x,y,z))", "score": 0}
{"id": "eqasc_validation_197", "prediction": "all x y z.((DeadlyCarbonMonoxideGas(x) & GeneratorsExhaust(y) & EnclosedSpace(z)) -> CanSpread(x,y,z))", "score": 0}
{"id": "eqasc_validation_198", "prediction": "all x.((CarbonMonoxideGas(x) & GeneratorExhaust(x)) -> Evaporated(x))", "score": 0}
{"id": "eqasc_validation_198", "prediction": "all x y.((Generator(x) & GeneratorExhaust(y)) -> EvaporatedCarbonMonoxideGas(x,y))", "score": 0}
{"id": "eqasc_validation_198", "prediction": "all x y z.((CarbonMonoxideGas(x) & GeneratorExhaust(y) & GeneratorExhaust(z)) -> Evaporated(x,y,z))", "score": 0}
{"id": "eqasc_validation_198", "prediction": "all x y.((GeneratorExhaust(x) & CarbonMonoxideGas(y)) -> Evaporated(x,y))", "score": 0}
{"id": "eqasc_validation_198", "prediction": "all x.((CarbonMonoxideGas(x) & FromGeneratorExhaust(x)) -> Evaporated(x))", "score": 0}
{"id": "eqasc_validation_198", "prediction": "all x y z.((Generator(x) & CarbonMonoxideGas(y) & GeneratorExhaust(z)) -> Evaporated(y,z))", "score": 0}
{"id": "eqasc_validation_198", "prediction": "all x y.((Generator(x) & GeneratorExhaust(y)) -> CarbonMonoxideGasEvaporated(x,y))", "score": 0}
{"id": "eqasc_validation_198", "prediction": "all x y.((Generator(x) & GeneratorExhaust(y)) -> Evaporated(x,y))", "score": 0}
{"id": "eqasc_validation_198", "prediction": "all x y z.((CarbonMonoxideGas(x) & GeneratorExhaust(y) & Generator(z)) -> Evaporated(x,y,z))", "score": 0}
{"id": "eqasc_validation_198", "prediction": "all x y.((GeneratorExhaust(x) & CarbonMonoxideGas(y)) -> Evaporated(x))", "score": 0}
{"id": "eqasc_validation_198", "prediction": "all x y z.((Generator(x) & CarbonMonoxideGas(y) & GeneratorExhaust(z)) -> Evaporated(x,y,z))", "score": 0}
{"id": "eqasc_validation_198", "prediction": "all x y.((CarbonMonoxideGas(x) & GeneratorExhaust(y)) -> Evaporated(x,y))", "score": 0}
{"id": "eqasc_validation_198", "prediction": "all x.((CarbonMonoxideGas(x) & GeneratorsExhaust(x)) -> Evaporated(x))", "score": 0}
{"id": "eqasc_validation_198", "prediction": "all x y z.((CarbonMonoxideGas(x) & GeneratorExhaust(y) & GeneratorExhaust(z)) -> Evaporated(x))", "score": 0}
{"id": "eqasc_validation_198", "prediction": "all x y z.((Generator(x) & CarbonMonoxideGas(y) & GeneratorExhaust(z)) -> Evaporated(y))", "score": 0}
{"id": "eqasc_validation_199", "prediction": "all x.(Bone(x) -> (LessFlexible(x) & Stronger(x)))", "score": 1}
{"id": "eqasc_validation_199", "prediction": "all x y.((Bone(x) & Carboil(y)) -> (LessFlexible(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_199", "prediction": "all x y.((Bone(x) & Cartilage(y)) -> (LessFlexible(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_199", "prediction": "all x y.((Bone(x) & Carbohydrate(y)) -> (LessFlexible(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_199", "prediction": "all x y.((Bone(x) & Carbilage(y)) -> (LessFlexible(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_199", "prediction": "all x.(Bone(x) -> (LessFlexibleThanCartilagin(x) & StrongerThanCartilagin(x)))", "score": 0}
{"id": "eqasc_validation_199", "prediction": "all x.(Bone(x) -> (LessFlexibleThanCartillage(x) & StrongerThanCartillage(x)))", "score": 0}
{"id": "eqasc_validation_199", "prediction": "all x y.((Bone(x) & Carboilage(y)) -> (LessFlexible(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_199", "prediction": "all x y.((Bone(x) & Carrot(y)) -> (LessFlexible(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_199", "prediction": "all x.(Bone(x) -> (LessFlexibleThanCartilization(x) & StrongerThanCartillage(x)))", "score": 0}
{"id": "eqasc_validation_199", "prediction": "all x.(Bone(x) -> (LessFlexibleThanCartilage(x) & StrongerThanCartilage(x)))", "score": 0}
{"id": "eqasc_validation_199", "prediction": "all x y.((Bone(x) & Carylage(y)) -> (LessFlexible(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_199", "prediction": "all x y.((Bone(x) & Carboil(y)) -> (LessFlexibleThan(x,y) & StrongerThan(x,y)))", "score": 0}
{"id": "eqasc_validation_199", "prediction": "all x y.((Bone(x) & Carboil(y)) -> (LessFlexible(x,y) & Stronger(x)))", "score": 0}
{"id": "eqasc_validation_199", "prediction": "all x y.((Bone(x) & Cartilage(y)) -> (LessFlexible(x,y) & Stronger(x)))", "score": 0}
{"id": "eqasc_validation_199", "prediction": "all x y.((Bone(x) & Carboil(y)) -> (LessFlexible(x,y) & Stronger(x,z)))", "score": 0}
{"id": "eqasc_validation_200", "prediction": "all x.(Shark(x) -> HasCartillageSkeleton(x))", "score": 0}
{"id": "eqasc_validation_200", "prediction": "all x.(Shark(x) -> HasCartilaginousSkeleton(x))", "score": 0}
{"id": "eqasc_validation_200", "prediction": "all x.(Shark(x) -> HasCartilageSkeleton(x))", "score": 0}
{"id": "eqasc_validation_200", "prediction": "all x.(Shark(x) -> HasCartilizationSkeleton(x))", "score": 0}
{"id": "eqasc_validation_200", "prediction": "all x.(Shark(x) -> HasCartilaginationSkeleton(x))", "score": 0}
{"id": "eqasc_validation_200", "prediction": "all x y.((Shark(x) & CartilageSkeleton(y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_200", "prediction": "all x.(Shark(x) -> (HasCartillageSkeleton(x) & HasCartillageSkeleton(x)))", "score": 0}
{"id": "eqasc_validation_200", "prediction": "all x.(Shark(x) -> HasCartilizedSkeleton(x))", "score": 0}
{"id": "eqasc_validation_200", "prediction": "all x.(Shark(x) -> (HasCartilaginousSkeleton(x) & HasCartilaginousSkeleton(x)))", "score": 0}
{"id": "eqasc_validation_200", "prediction": "all x.(Shark(x) -> HasCartilagiaSkeleton(x))", "score": 0}
{"id": "eqasc_validation_200", "prediction": "all x.(Shark(x) -> HasCartolageSkeleton(x))", "score": 0}
{"id": "eqasc_validation_200", "prediction": "all x.(Shark(x) -> HasCartilizeSkeleton(x))", "score": 0}
{"id": "eqasc_validation_200", "prediction": "all x.(Shark(x) -> (HasCartillageSkeleton(x) | HasCartillageSkeleton(x)))", "score": 0}
{"id": "eqasc_validation_200", "prediction": "all x.(Shark(x) -> HasCartillaSkeleton(x))", "score": 0}
{"id": "eqasc_validation_201", "prediction": "all x y.((RegularSkeleton(x) & SharkSkeleton(y)) -> (LessFlexible(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_201", "prediction": "all x.(RegularSkeleton(x) -> (LessFlexible(x) & Stronger(x)))", "score": 0}
{"id": "eqasc_validation_201", "prediction": "all x y.((RegularSkeleton(x) & Shark(y)) -> (LessFlexible(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_201", "prediction": "all x y.((Skeleton(x) & Shark(y)) -> (LessFlexible(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_201", "prediction": "all x y.((RegularSkeleton(x) & SharkSkeleton(y)) -> (LessFlexible(x,y) & Stronger(y)))", "score": 0}
{"id": "eqasc_validation_201", "prediction": "all x.((RegularSkeleton(x) & SharkSkeleton(x)) -> (LessFlexible(x) & Stronger(x)))", "score": 0}
{"id": "eqasc_validation_201", "prediction": "all x y.((RegularSkeleton(x) & SharkSkeleton(y)) -> (LessFlexible(x) & Stronger(y)))", "score": 0}
{"id": "eqasc_validation_201", "prediction": "all x y.((Skinnel(x) & Shark(y)) -> (LessFlexible(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_201", "prediction": "all x.(RegularSkeleton(x) -> (LessFlexibleThanSharkSkeleton(x) & StrongerThanSharkSkeleton(x)))", "score": 0}
{"id": "eqasc_validation_201", "prediction": "all x y.((RegularSkeleton(x) & SharkSkeleton(y)) -> (LessFlexible(x,y) & Stronger(y,x)))", "score": 0}
{"id": "eqasc_validation_201", "prediction": "all x.((Skeleton(x) & Shark(x)) -> (LessFlexible(x) & Stronger(x)))", "score": 0}
{"id": "eqasc_validation_201", "prediction": "all x y.((RegularSkeleton(x) & SharkSkeleton(y)) -> (LessFlexible(x) & Stronger(x)))", "score": 0}
{"id": "eqasc_validation_201", "prediction": "all x y.((RegularSkeleton(x) & SharkSkeleton(y)) -> (LowerFlexible(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_202", "prediction": "all x.((Ears(x) & Bones(x)) -> MadeOfCartilization(x))", "score": 0}
{"id": "eqasc_validation_202", "prediction": "all x.((Ears(x) | Bones(x)) -> MadeOfCartilization(x))", "score": 0}
{"id": "eqasc_validation_202", "prediction": "all x.((Person(x) & Ears(x) & Bones(x)) -> MadeOfCartilization(x))", "score": 0}
{"id": "eqasc_validation_202", "prediction": "all x.((Ears(x) & Bones(x)) -> MadeOfCartilagin(x))", "score": 0}
{"id": "eqasc_validation_202", "prediction": "all x.((Ears(x) & Bones(x)) -> MadeOfCarboil(x))", "score": 0}
{"id": "eqasc_validation_202", "prediction": "all x y.((Person(x) & Ears(y) & Bones(y)) -> MadeOfCartilization(x,y))", "score": 0}
{"id": "eqasc_validation_202", "prediction": "all x.(EarsAndBones(x) -> MadeOfCartilization(x))", "score": 0}
{"id": "eqasc_validation_202", "prediction": "all x y.((Ears(x) & Bones(y)) -> MadeOfCartilization(x,y))", "score": 0}
{"id": "eqasc_validation_202", "prediction": "all x.((Ears(x) & Bones(x)) -> MadeOfCarbon(x))", "score": 0}
{"id": "eqasc_validation_202", "prediction": "all x.(Ears(x) & Bones(x) -> MadeOfCartilization(x))", "score": 0}
{"id": "eqasc_validation_202", "prediction": "all x.((Ears(x) | Bones(x)) -> MadeOfCartilagin(x))", "score": 0}
{"id": "eqasc_validation_202", "prediction": "all x.((Ears(x) | Bones(x)) -> MadeOfCarboil(x))", "score": 0}
{"id": "eqasc_validation_202", "prediction": "all x.((Person(x) & Ears(x) & Bones(x)) -> MadeOfCartilagin(x))", "score": 0}
{"id": "eqasc_validation_202", "prediction": "all x.((PopularEars(x) & Bones(x)) -> MadeOfCartilization(x))", "score": 0}
{"id": "eqasc_validation_202", "prediction": "all x.((People(x) & Ears(x) & Bones(x)) -> MadeOfCartilization(x))", "score": 0}
{"id": "eqasc_validation_202", "prediction": "all x.(EarsAndBones(x) -> MadeOfCartilagin(x))", "score": 0}
{"id": "eqasc_validation_203", "prediction": "all x.((Ears(x) & MadeOfCartilagin(x)) -> MadeOfCartilagin(x))", "score": 0}
{"id": "eqasc_validation_203", "prediction": "all x.((Ear(x) & MadeOfCartilagin(x)) -> MadeOfCartilagin(x))", "score": 0}
{"id": "eqasc_validation_203", "prediction": "all x.((Ears(x) & MadeOfCartillage(x)) -> MadeOfCartillage(x))", "score": 0}
{"id": "eqasc_validation_203", "prediction": "all x.(Ears(x) -> MadeOfCartilagin(x))", "score": 0}
{"id": "eqasc_validation_203", "prediction": "all x.(Ears(x) -> MadeOfCartilization(x))", "score": 0}
{"id": "eqasc_validation_203", "prediction": "all x.((Ear(x) & MadeOfCartilagin(x)) -> EarsMadeOfCartilagin(x))", "score": 0}
{"id": "eqasc_validation_203", "prediction": "all x.(Ears(x) -> MadeOfCartillage(x))", "score": 0}
{"id": "eqasc_validation_203", "prediction": "all x.((Ears(x) & MadeOfCartilization(x)) -> MadeOfCartillage(x))", "score": 0}
{"id": "eqasc_validation_203", "prediction": "all x.((Ears(x) & MadeOfCartilagin(x)) -> EarsMadeOfCartilagin(x))", "score": 0}
{"id": "eqasc_validation_203", "prediction": "all x.((Ears(x) & MadeOfCartilization(x)) -> MadeOfCartilization(x))", "score": 0}
{"id": "eqasc_validation_203", "prediction": "all x.((Ear(x) & MadeOfCartillage(x)) -> MadeOfCartillage(x))", "score": 0}
{"id": "eqasc_validation_203", "prediction": "all x.(Ears(x) -> (MadeOfCartilagin(x) & MadeOfCartilagin(x)))", "score": 0}
{"id": "eqasc_validation_203", "prediction": "all x.((Ear(x) & MadeOfCartillage(x)) -> EarsMadeOfCartillage(x))", "score": 0}
{"id": "eqasc_validation_203", "prediction": "all x.((Ears(x) & MadeOfCartillage(x)) -> EarsMadeOfCartillage(x))", "score": 0}
{"id": "eqasc_validation_203", "prediction": "all x.((Ear(x) & MadeOfCartilization(x)) -> MadeOfCartillage(x))", "score": 0}
{"id": "eqasc_validation_203", "prediction": "all x.((Ears(x) & MadeOfCartillage(x)) -> MadeOfCartilization(x))", "score": 0}
{"id": "eqasc_validation_204", "prediction": "all x y.((Fish(x) & Shark(y)) -> (HasBonySkeleton(x) | HasSkeleton(y) & MadeOfCartillage(y)))", "score": 0}
{"id": "eqasc_validation_204", "prediction": "all x y.((Fish(x) & Shark(y)) -> (HasBonySkeleton(x) & HasSkeleton(y) & MadeOfCartillage(y)))", "score": 0}
{"id": "eqasc_validation_204", "prediction": "(all x.(Fish(x) -> BonySkeleton(x)) & all y.(Shark(y) -> HasSkeleton(y)))", "score": 0}
{"id": "eqasc_validation_204", "prediction": "(all x.(Fish(x) -> BonySkeleton(x)) & all y.(Shark(y) -> (HasSkeleton(y) & MadeOfCartillage(y))))", "score": 0}
{"id": "eqasc_validation_204", "prediction": "(all x.(Fish(x) -> BonySkeleton(x)) & all y.(Shark(y) -> HasSkeleton(y))))", "score": -1}
{"id": "eqasc_validation_204", "prediction": "all x y.((Fish(x) & Shark(y)) -> (HasBonySkeleton(x) | HasSkeleton(y) & MadeOfCartilagin(y)))", "score": 0}
{"id": "eqasc_validation_204", "prediction": "(all x y.((Fish(x) & BonySkeleton(x)) -> Has(x,y)) & all z w.((Shark(z) & Skeleton(w)) -> Has(z,w))))", "score": -1}
{"id": "eqasc_validation_204", "prediction": "all x y.((Fish(x) & Shark(y)) -> (HasBonySkeleton(x) & HasSkeleton(y) & MadeOfCartilagin(y)))", "score": 0}
{"id": "eqasc_validation_204", "prediction": "all x y.((Fish(x) & Shark(y)) -> (HasBonySkeleton(x) & HasSkeleton(y) & MadeOfCartilization(y)))", "score": 0}
{"id": "eqasc_validation_204", "prediction": "(all x.(Fish(x) -> BonySkeleton(x)) & all y.(Shark(y) -> HasSkeletonMadeOfCartillage(y))))", "score": -1}
{"id": "eqasc_validation_204", "prediction": "all x y.((Fish(x) & Shark(y)) -> (HasBonySkeleton(x) | HasSkeleton(y) & MadeOfCartilization(y)))", "score": 0}
{"id": "eqasc_validation_204", "prediction": "all x y.((Fish(x) & Shark(y)) -> (HasBonySkeleton(x) & HasCartilagin(y)))", "score": 0}
{"id": "eqasc_validation_204", "prediction": "(all x.(Fish(x) -> BonySkeleton(x)) & all y.(Shark(y) -> HasSkeleton(y,Cartillage))))", "score": -1}
{"id": "eqasc_validation_204", "prediction": "(all x.(Fish(x) -> BonySkeleton(x)) & all y.(Shark(y) -> (HasSkeleton(y) & MadeOfCartilization(y))))", "score": 0}
{"id": "eqasc_validation_204", "prediction": "(all x.(Fish(x) -> BonySkeletons(x)) & all y.(Shark(y) -> HasSkeletonsMadeOfCartillage(y))))", "score": -1}
{"id": "eqasc_validation_204", "prediction": "(all x y.((Fish(x) & BonySkeleton(x)) -> Has(x,y)) & all z w.((Shark(z) & Skeleton(w)) -> Has(z,w)))", "score": 0}
{"id": "eqasc_validation_205", "prediction": "all x y.((Fish(x) & Shark(y)) -> (LessFlexibleSkeletons(x,y) & StrongerSkeletons(x,y)))", "score": 0}
{"id": "eqasc_validation_205", "prediction": "all x y.((Fish(x) & Shark(y)) -> (LessFlexibleSkeletons(x) & StrongerSkeletons(x)))", "score": 0}
{"id": "eqasc_validation_205", "prediction": "all x y.((Fish(x) & Shark(y)) -> LessFlexibleSkeletons(x,y) & StrongerSkeletons(x,y))", "score": 0}
{"id": "eqasc_validation_205", "prediction": "all x y.((Fish(x) & Shark(y)) -> (LessFlexibleSkeleton(x,y) & StrongerSkeleton(x,y)))", "score": 0}
{"id": "eqasc_validation_205", "prediction": "all x y.((Fish(x) & Shark(y)) -> (LessFlexibleSkeleton(x) & StrongerSkeleton(x)))", "score": 0}
{"id": "eqasc_validation_205", "prediction": "all x y.((Fish(x) & Shark(y)) -> (LessFlexibleSkeletons(x,y) & StrongerSkeletons(x)))", "score": 0}
{"id": "eqasc_validation_205", "prediction": "all x.((Fish(x) & Shark(x)) -> (LessFlexibleSkeletons(x) & StrongerSkeletons(x)))", "score": 0}
{"id": "eqasc_validation_205", "prediction": "all x y z.((Fish(x) & Shark(y) & Skeleton(z)) -> (LessFlexible(x,z) & Stronger(x,z)))", "score": 0}
{"id": "eqasc_validation_205", "prediction": "all x y.((Fish(x) & Shark(y)) -> (LessFlexibleSkeletons(x) & StrongerSkeletons(x) & ComparedTo(x,y)))", "score": 0}
{"id": "eqasc_validation_205", "prediction": "all x y.((Fish(x) & Shark(y)) -> LessFlexibleSkeletons(x,y) & StrongerSkeletons(x))", "score": 0}
{"id": "eqasc_validation_205", "prediction": "all x y.((Fish(x) & Shark(y)) -> LessFlexibleSkeleton(x,y) & StrongerSkeleton(x,y))", "score": 0}
{"id": "eqasc_validation_205", "prediction": "all x y.((Fish(x) & Shark(y)) -> (LessFlexibleSkeleton(x) & StrongerSkeleton(x) & ComparedTo(x,y)))", "score": 0}
{"id": "eqasc_validation_205", "prediction": "all x y.((Fish(x) & Shark(y)) -> (LowerFlexibleSkeletons(x,y) & StrongerSkeletons(x,y)))", "score": 0}
{"id": "eqasc_validation_205", "prediction": "all x y.((Fish(x) & Shark(y)) -> (LessFlexibleSkeletons(x,y) & StrongerSkeleton(x,y)))", "score": 0}
{"id": "eqasc_validation_205", "prediction": "all x y.((Fish(x) & Shark(y)) -> LessFlexibleSkeletons(x) & StrongerSkeletons(x))", "score": 0}
{"id": "eqasc_validation_205", "prediction": "all x.((Fish(x) & Shark(x)) -> LessFlexibleSkeletons(x) & StrongerSkeletons(x))", "score": 0}
{"id": "eqasc_validation_206", "prediction": "all x.(ArticularCartilagin(x) -> (Cartilagin(x) & CoversBone(x) & CoversJoin(x)))", "score": 0}
{"id": "eqasc_validation_206", "prediction": "all x.(ArticularCartilagin(x) -> (Cartilagin(x) & CoversBoneAndJoinAreas(x)))", "score": 0}
{"id": "eqasc_validation_206", "prediction": "all x.(ArticularCartilagin(x) -> (Cartilagin(x) & CoversBone(x) & CoversJoinAreas(x)))", "score": 0}
{"id": "eqasc_validation_206", "prediction": "all x.(ArticularCartilagin(x) -> (CoversBone(x) & CoversJoinAreas(x)))", "score": 0}
{"id": "eqasc_validation_206", "prediction": "all x.(ArticularCartilagin(x) -> CoversBoneAndJoinAreas(x))", "score": 0}
{"id": "eqasc_validation_206", "prediction": "all x.(ArticularCartilagia(x) -> (Cartilagia(x) & CoversBoneAndJoinAreas(x)))", "score": 0}
{"id": "eqasc_validation_206", "prediction": "all x.(ArticularCartilage(x) -> (Cartilage(x) & CoversBone(x) & CoversJoinAreas(x)))", "score": 0}
{"id": "eqasc_validation_206", "prediction": "all x.(ArticularCartillage(x) -> (CoversBone(x) & CoversJoinAreas(x)))", "score": 0}
{"id": "eqasc_validation_206", "prediction": "all x.(ArticularCartilagia(x) -> (Cartilagia(x) & CoversBone(x) & CoversJoinAreas(x)))", "score": 0}
{"id": "eqasc_validation_206", "prediction": "all x.(ArticularCartilagin(x) -> (Cartilagin(x) & CoversBoneAndJoin(x)))", "score": 0}
{"id": "eqasc_validation_206", "prediction": "all x.(ArticularCartilage(x) -> (Cartilage(x) & CoversBone(x) & CoversJoin(x)))", "score": 0}
{"id": "eqasc_validation_206", "prediction": "all x.(ArticularCartilagin(x) -> (CoversBone(x) & CoversJoin(x)))", "score": 0}
{"id": "eqasc_validation_206", "prediction": "all x.(ArticularCartillage(x) -> CoversBoneAndJoinAreas(x))", "score": 0}
{"id": "eqasc_validation_206", "prediction": "all x.(ArticularCartilagia(x) -> (Cartilagia(x) & CoversBone(x) & CoversJoin(x)))", "score": 0}
{"id": "eqasc_validation_206", "prediction": "all x.(ArticularCartillage(x) -> (CoversBone(x) & CoversJoin(x)))", "score": 0}
{"id": "eqasc_validation_206", "prediction": "all x.(ArticularCartillage(x) -> (Cartillage(x) & CoversBone(x) & CoversJoinAreas(x)))", "score": 0}
{"id": "eqasc_validation_207", "prediction": "all x y.((Bone(x) & Material(y) & Covers(x,y)) -> (LessFlexible(x) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_207", "prediction": "all x y.((Bone(x) & Material(y) & Covers(x,y)) -> (LessFlexible(x) & Stronger(x)))", "score": 0}
{"id": "eqasc_validation_207", "prediction": "all x y.((Bone(x) & Material(y)) -> (LessFlexible(x) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_207", "prediction": "all x y.((Bone(x) & Material(y) & Covers(x,y)) -> (LessFlexible(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_207", "prediction": "all x y.((Bone(x) & Material(y)) -> (LessFlexible(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_207", "prediction": "all x y z.((Bone(x) & Material(y) & Material(z)) -> (LessFlexible(x,y) & Stronger(x,z)))", "score": 0}
{"id": "eqasc_validation_207", "prediction": "all x y z.((Bone(x) & Material(y) & Material(z)) -> (LessFlexible(x) & Stronger(x,y,z)))", "score": 0}
{"id": "eqasc_validation_207", "prediction": "all x y z.((Bone(x) & Material(y) & Material(z)) -> (LessFlexible(x) & Stronger(x,y) & Covers(x,z)))", "score": 0}
{"id": "eqasc_validation_207", "prediction": "all x y.((Bone(x) & Material(y) & Covers(y,x)) -> (LessFlexible(x) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_207", "prediction": "all x y.((Bone(x) & Material(y)) -> (LessFlexible(x) & Stronger(x)))", "score": 0}
{"id": "eqasc_validation_207", "prediction": "all x y.((Bone(x) & Material(y) & Covers(x,y)) -> (LessFlexible(x) & StrongerThan(x,y)))", "score": 0}
{"id": "eqasc_validation_207", "prediction": "all x y.((Bone(x) & Material(y) & Covers(y,x)) -> (LessFlexible(x) & Stronger(x)))", "score": 0}
{"id": "eqasc_validation_207", "prediction": "all x y.((Bone(x) & Material(y) & CoveredBy(x,y)) -> (LessFlexible(x) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_207", "prediction": "all x.(Bone(x) -> (LessFlexible(x) & Stronger(x)))", "score": 0}
{"id": "eqasc_validation_207", "prediction": "all x y z.((Bone(x) & Material(y) & Material(z)) -> (LessFlexible(x) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_207", "prediction": "all x y.((Bone(x) & Material(y)) -> (LessFlexible(x) & Stronger(x) & Covers(x,y)))", "score": 0}
{"id": "eqasc_validation_208", "prediction": "all x.(Tissue(x) -> (Bone(x) & Cartilage(x) & BoneMarrow(x) & Corneas(x)))", "score": 0}
{"id": "eqasc_validation_208", "prediction": "all x.(Tissue(x) -> (Bone(x) | Cartilage(x) | BoneMarrow(x) | Corneas(x)))", "score": 0}
{"id": "eqasc_validation_208", "prediction": "all x.(Tissue(x) -> (Bone(x) & Carbohydrate(x) & BoneMarrow(x) & Corneas(x)))", "score": 0}
{"id": "eqasc_validation_208", "prediction": "all x.(Tissue(x) -> (Bone(x) | Carbohydrate(x) | BoneMarrow(x) | Corneas(x)))", "score": 0}
{"id": "eqasc_validation_208", "prediction": "all x.(Tissue(x) -> (IncludesBone(x) & IncludesCartilage(x) & IncludesBoneMarrow(x) & IncludesCorneas(x)))", "score": 0}
{"id": "eqasc_validation_208", "prediction": "all x.(Tissue(x) -> (Bone(x) & Carilage(x) & BoneMarrow(x) & Corneas(x)))", "score": 0}
{"id": "eqasc_validation_208", "prediction": "all x.(Tissue(x) -> (Bone(x) & Cartilage(x) & BoneMarrow(x) & Cornea(x)))", "score": 0}
{"id": "eqasc_validation_208", "prediction": "all x.(Tissue(x) -> (IncludesBone(x) & IncludesCartillage(x) & IncludesBoneMarrow(x) & IncludesCorneas(x)))", "score": 0}
{"id": "eqasc_validation_208", "prediction": "all x.(Tissue(x) -> (IncludesBone(x) & IncludesCartilagin(x) & IncludesBoneMarrow(x) & IncludesCorneas(x)))", "score": 0}
{"id": "eqasc_validation_208", "prediction": "all x.(Tissue(x) -> (IncludesBone(x) & IncludesCartilization(x) & IncludesBoneMarrow(x) & IncludesCorneas(x)))", "score": 0}
{"id": "eqasc_validation_208", "prediction": "all x.(Tissue(x) -> (Bone(x) | Carilage(x) | BoneMarrow(x) | Corneas(x)))", "score": 0}
{"id": "eqasc_validation_208", "prediction": "all x.(Tissue(x) -> (Bone(x) | Cartilage(x) | BoneMarrow(x) | Cornea(x)))", "score": 0}
{"id": "eqasc_validation_208", "prediction": "all x.(Tissue(x) -> (Bone(x) & Carbohydrate(x) & BoneMarrow(x) & Cornea(x)))", "score": 0}
{"id": "eqasc_validation_208", "prediction": "all x.(Tissue(x) -> (Bone(x) & Carilage(x) & BoneMarrow(x) & Cornea(x)))", "score": 0}
{"id": "eqasc_validation_208", "prediction": "all x.(Tissue(x) -> (Bone(x) | Carbohydrate(x) | BoneMarrow(x) | Cornea(x)))", "score": 0}
{"id": "eqasc_validation_208", "prediction": "all x.(Tissue(x) -> (IncludesBone(x) & IncludesCartilage(x) & IncludesBoneMarrow(x) & IncludesCoreas(x)))", "score": 0}
{"id": "eqasc_validation_209", "prediction": "exists x.(BodylyTissue(x) & Flexible(x) & Strong(x))", "score": 0}
{"id": "eqasc_validation_209", "prediction": "exists x y.(BodylyTissue(x) & BodyTissue(y) & Flexible(x) & Strong(y))", "score": 0}
{"id": "eqasc_validation_209", "prediction": "exists x.(BodylyTissue(x) & Flexible(x)) & exists y.(BodylyTissue(y) & Strong(y)))", "score": -1}
{"id": "eqasc_validation_209", "prediction": "exists x.(BodylyTissue(x) & (Flexible(x) | Strong(x)))", "score": 0}
{"id": "eqasc_validation_209", "prediction": "(exists x.(BodylyTissue(x) & Flexible(x)) & exists y.(BodylyTissue(y) & Strong(y)))", "score": 0}
{"id": "eqasc_validation_209", "prediction": "exists x.(BodylyTissue(x) & Flexible(x) & exists y.(BodylyTissue(y) & Strong(y)))", "score": 0}
{"id": "eqasc_validation_209", "prediction": "exists x.(BodylyTissue(x) & Flexible(x) | Strong(x))", "score": 0}
{"id": "eqasc_validation_209", "prediction": "exists x y.(BodylyTissue(x) & BodyTouch(y) & Flexible(x) & Strong(y))", "score": 0}
{"id": "eqasc_validation_209", "prediction": "(exists x.(BodylyTissue(x) & Flexible(x)) & exists y.(BodylyTissue(y) & Strong(y))))", "score": -1}
{"id": "eqasc_validation_209", "prediction": "exists x y.(BodylyTissue(x) & BodilyTissue(y) & Flexible(x) & Strong(y))", "score": 0}
{"id": "eqasc_validation_209", "prediction": "exists x.(BodylyTissue(x) & Flexible(x) & (BodylyTissue(x) -> Strong(x)))", "score": 0}
{"id": "eqasc_validation_209", "prediction": "exists x y.(BodylyTissue(x) & Flexible(x) & BodyTissue(y) & Strong(y))", "score": 0}
{"id": "eqasc_validation_209", "prediction": "exists x.(BodylyTissue(x) & Flexible(x) & (BodylyTissue(x) & Strong(x)))", "score": 0}
{"id": "eqasc_validation_209", "prediction": "exists x y.(BodylyTissue(x) & Body(y) & Flexible(x) & Strong(y))", "score": 0}
{"id": "eqasc_validation_210", "prediction": "all x y.((Cartilage(x) & Bone(y)) -> (MoreFlexible(x,y) & LighterInWeight(x,y)))", "score": 0}
{"id": "eqasc_validation_210", "prediction": "all x.(Cartilage(x) -> (MoreFlexible(x) & LighterInWeight(x)))", "score": 0}
{"id": "eqasc_validation_210", "prediction": "all x y.((Cartilage(x) & Bone(y)) -> (MoreFlexible(x,y) & Lighter(x,y)))", "score": 0}
{"id": "eqasc_validation_210", "prediction": "all x y.((Cartilage(x) & Bone(y)) -> (MoreFlexible(x) & LighterInWeight(x,y)))", "score": 0}
{"id": "eqasc_validation_210", "prediction": "all x.(Cartilage(x) -> (MoreFlexible(x) & LighterInWeight(x) & Bone(x)))", "score": 0}
{"id": "eqasc_validation_210", "prediction": "all x y.((Cartilage(x) & Bone(y)) -> (MoreFlexible(x) & LighterInWeight(x)))", "score": 0}
{"id": "eqasc_validation_210", "prediction": "all x y.((Cartilage(x) & Bone(y)) -> (Flexible(x) & LighterInWeight(x,y)))", "score": 0}
{"id": "eqasc_validation_210", "prediction": "all x y.((Cartilage(x) & Bone(y)) -> (MoreFlexible(x) & Lighter(x)))", "score": 0}
{"id": "eqasc_validation_210", "prediction": "all x y.((Cartilage(x) & Bone(y)) -> (MoreFlexible(x,y) & LighterWeight(x,y)))", "score": 0}
{"id": "eqasc_validation_210", "prediction": "all x y.((Cartilage(x) & Bone(y)) -> (MoreFlexible(x) & Lighter(x,y)))", "score": 0}
{"id": "eqasc_validation_210", "prediction": "all x y.((Cartilage(x) & Bone(y)) -> (MoreFlexible(x) & LighterWeight(x,y)))", "score": 0}
{"id": "eqasc_validation_210", "prediction": "all x.(Cartilage(x) -> (MoreFlexible(x) & Lighter(x) & Bone(x)))", "score": 0}
{"id": "eqasc_validation_210", "prediction": "all x.(Cartilage(x) -> (Flexible(x) & LighterInWeight(x)))", "score": 0}
{"id": "eqasc_validation_210", "prediction": "all x y.((Cartilage(x) & Bone(y)) -> (Flexible(x) & LighterInWeight(x)))", "score": 0}
{"id": "eqasc_validation_210", "prediction": "all x.(Cartilage(x) -> (MoreFlexible(x) & Lighter(x)))", "score": 0}
{"id": "eqasc_validation_210", "prediction": "all x.(Cartilage(x) -> (Flexible(x) & LighterInWeight(x) & Bone(x)))", "score": 0}
{"id": "eqasc_validation_211", "prediction": "all x y.((Bone(x) & Cartilage(y)) -> (Stronger(x,y) & MoreRigid(x,y)))", "score": 0}
{"id": "eqasc_validation_211", "prediction": "all x y.((Bone(x) & Carbolage(y)) -> (Stronger(x,y) & MoreRigid(x,y)))", "score": 0}
{"id": "eqasc_validation_211", "prediction": "all x y.((Bone(x) & Carbilage(y)) -> (Stronger(x,y) & MoreRigid(x,y)))", "score": 0}
{"id": "eqasc_validation_211", "prediction": "all x y.((Bone(x) & Carboillage(y)) -> (Stronger(x,y) & MoreRigid(x,y)))", "score": 0}
{"id": "eqasc_validation_211", "prediction": "all x y.((Bone(x) & Carbolage(y)) -> (Stronger(x) & MoreRigid(x,y)))", "score": 0}
{"id": "eqasc_validation_211", "prediction": "all x y.((Bone(x) & Cartilage(y)) -> (Stronger(x) & MoreRigid(x,y)))", "score": 0}
{"id": "eqasc_validation_211", "prediction": "all x y.((Bone(x) & Carboilage(y)) -> (Stronger(x,y) & MoreRigid(x,y)))", "score": 0}
{"id": "eqasc_validation_211", "prediction": "all x y.((Bone(x) & Carbilage(y)) -> (Stronger(x) & MoreRigid(x,y)))", "score": 0}
{"id": "eqasc_validation_211", "prediction": "all x.(Bone(x) -> (Stronger(x) & MoreRigid(x)))", "score": 0}
{"id": "eqasc_validation_211", "prediction": "all x y.((Bone(x) & Cartilage(y)) -> (Stronger(x) & MoreRigid(x)))", "score": 0}
{"id": "eqasc_validation_211", "prediction": "all x y.((Bone(x) & Carbolage(y)) -> (Stronger(x) & MoreRigid(x)))", "score": 0}
{"id": "eqasc_validation_211", "prediction": "all x y.((Bone(x) & Carboil(y)) -> (Stronger(x,y) & MoreRigid(x,y)))", "score": 0}
{"id": "eqasc_validation_211", "prediction": "all x y.((Bone(x) & Carbohydrate(y)) -> (Stronger(x,y) & MoreRigid(x,y)))", "score": 0}
{"id": "eqasc_validation_211", "prediction": "all x y z.((Bone(x) & Carbolage(y) & Bone(z)) -> (Stronger(x,z) & MoreRigid(x,z)))", "score": 0}
{"id": "eqasc_validation_211", "prediction": "all x y.((Bone(x) & Carboillage(y)) -> (Stronger(x) & MoreRigid(x,y)))", "score": 0}
{"id": "eqasc_validation_211", "prediction": "all x y.((Bone(x) & Carbilage(y)) -> (Stronger(x) & MoreRigid(x)))", "score": 0}
{"id": "eqasc_validation_212", "prediction": "all x y.((BoneSkeleton(x) & SharkSkeleton(y)) -> (LessFlexible(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_212", "prediction": "all x y.((BoneSkeleton(x) & Shark(y)) -> (LessFlexible(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_212", "prediction": "all x.((BoneSkeleton(x) & SharkSkeleton(x)) -> (LessFlexible(x) & Stronger(x)))", "score": 0}
{"id": "eqasc_validation_212", "prediction": "all x y z.((BoneSkeleton(x) & Shark(y) & Shark(z)) -> (LessFlexible(x,y) & Stronger(x,z)))", "score": 0}
{"id": "eqasc_validation_212", "prediction": "all x y z.((BoneSkeleton(x) & SharkSkeleton(y) & SharkSkeleton(z)) -> (LessFlexible(x,y) & Stronger(x,z)))", "score": 0}
{"id": "eqasc_validation_212", "prediction": "all x y.((BoneSkeleton(x) & SharkSkeleton(y)) -> (LessFlexible(x,y) & Stronger(y)))", "score": 0}
{"id": "eqasc_validation_212", "prediction": "all x y.((BoneSkeleton(x) & SharkSkeleton(y)) -> (LessFlexibleThan(x,y) & StrongerThan(x,y)))", "score": 0}
{"id": "eqasc_validation_212", "prediction": "all x y z.((BoneSkeleton(x) & SharkSkeleton(y) & Shark(z)) -> (LessFlexible(x,y) & Stronger(x,z)))", "score": 0}
{"id": "eqasc_validation_212", "prediction": "all x y.((BoneSkeleton(x) & Shark(y)) -> (LessFlexibleThan(x,y) & StrongerThan(x,y)))", "score": 0}
{"id": "eqasc_validation_212", "prediction": "all x y.((BoneSkeleton(x) & Shark(y)) -> (LessFlexibleThanSkeleton(x,y) & StrongerThanSkeleton(x,y)))", "score": 0}
{"id": "eqasc_validation_212", "prediction": "all x y.((BoneSkeleton(x) & SharkSkeleton(y)) -> (LessFlexible(x) & Stronger(x)))", "score": 0}
{"id": "eqasc_validation_212", "prediction": "all x y.((BoneSkeleton(x) & SharkSkeleton(y)) -> (LessFlexibleThan(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_212", "prediction": "all x y.((BoneSkeleton(x) & SharkSkeleton(y)) -> (LessFlexible(x,y) & Stronger(x)))", "score": 0}
{"id": "eqasc_validation_212", "prediction": "all x y.((BoneSkeleton(x) & SharkSkeleton(y)) -> (LessFlexible(x) & Stronger(y)))", "score": 0}
{"id": "eqasc_validation_212", "prediction": "all x y z.((BoneSkeleton(x) & SharkSkeleton(y) & SharkSkeleton(z)) -> (LessFlexible(x,y) & Stronger(y,z)))", "score": 0}
{"id": "eqasc_validation_212", "prediction": "all x y z.((BoneSkeleton(x) & SharkSkeleton(y) & SharkSkeleton(z)) -> (LessFlexible(x,y) & Stronger(y)))", "score": 0}
{"id": "eqasc_validation_213", "prediction": "all x.(Cartilage(x) -> (Strong(x) & Flexible(x) & Lightweight(x)))", "score": 0}
{"id": "eqasc_validation_213", "prediction": "all x y.((Cartilage(x) & Strong(x) & Flexible(y) & Lightweight(x)) -> Cartilage(x))", "score": 0}
{"id": "eqasc_validation_213", "prediction": "all x y.((Cartilage(x) & Strong(x) & Flexible(x) & Lightweight(y)) -> Cartilage(x))", "score": 0}
{"id": "eqasc_validation_213", "prediction": "all x.((Cartilage(x) & Strong(x) & Flexible(x) & Lightweight(x)) -> Cartilage(x))", "score": 0}
{"id": "eqasc_validation_213", "prediction": "(Strong(cartilage) & Flexible(cartilage) & Lightweight(cartilage))", "score": 1}
{"id": "eqasc_validation_213", "prediction": "all x y.((Cartilage(x) & Strong(y) & Flexible(y) & Lightweight(x)) -> Cartilage(x))", "score": 0}
{"id": "eqasc_validation_213", "prediction": "All x.(Cartilage(x) -> (Strong(x) & Flexible(x) & Lightweight(x)))", "score": -1}
{"id": "eqasc_validation_213", "prediction": "exists x.(Cartilage(x) & Strong(x) & Flexible(x) & Lightweight(x))", "score": 0}
{"id": "eqasc_validation_213", "prediction": "all x.(Cartilagin(x) -> (Strong(x) & Flexible(x) & Lightweight(x)))", "score": 0}
{"id": "eqasc_validation_213", "prediction": "all x y z.((Cartilage(x) & Strong(y) & Flexible(z) & Lightweight(x)) -> Cartilage(x))", "score": 0}
{"id": "eqasc_validation_213", "prediction": "all x.(Cartilage(x) -> (Strong(x) | Flexible(x) | Lightweight(x)))", "score": 0}
{"id": "eqasc_validation_213", "prediction": "all x.(Cartolage(x) -> (Strong(x) & Flexible(x) & Lightweight(x)))", "score": 0}
{"id": "eqasc_validation_213", "prediction": "all x y.((Cartilage(x) & Strong(y) & Flexible(y) & Lightweight(y)) -> Cartilage(x))", "score": 0}
{"id": "eqasc_validation_214", "prediction": "all x.(Bone(x) -> (LessLightweight(x) & Stronger(x)))", "score": 0}
{"id": "eqasc_validation_214", "prediction": "all x y.((Bone(x) & Carboil(y)) -> (LessLightweight(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_214", "prediction": "all x y.((Bone(x) & Cartilage(y)) -> (LessLightweight(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_214", "prediction": "all x.(Bone(x) -> (Lightweight(x) & Stronger(x)))", "score": 1}
{"id": "eqasc_validation_214", "prediction": "all x y.((Bone(x) & Carboil(y)) -> (Lightweight(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_214", "prediction": "all x y.((Bone(x) & Carbohydrate(y)) -> (LessLightweight(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_214", "prediction": "all x y.((Bone(x) & Carbilage(y)) -> (LessLightweight(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_214", "prediction": "all x y.((Bone(x) & Cartilage(y)) -> (Lightweight(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_214", "prediction": "all x.(Bone(x) -> (LessLightweightThanCartilagin(x) & StrongerThanCartilagin(x)))", "score": 0}
{"id": "eqasc_validation_214", "prediction": "all x y.((Bone(x) & Carbilage(y)) -> (Lightweight(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_214", "prediction": "all x y.((Bone(x) & Carbohydrate(y)) -> (Lightweight(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_214", "prediction": "all x y.((Bone(x) & Carboilage(y)) -> (LessLightweight(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_214", "prediction": "all x.(Bone(x) -> (LessLightweightThanCartilage(x) & StrongerThanCartilage(x)))", "score": 0}
{"id": "eqasc_validation_214", "prediction": "all x.(Bone(x) -> (LessLightweightThanCartillage(x) & StrongerThanCartillage(x)))", "score": 0}
{"id": "eqasc_validation_214", "prediction": "all x y.((Bone(x) & Carboil(y)) -> (LessLightweight(x,y) & Stronger(x)))", "score": 0}
{"id": "eqasc_validation_215", "prediction": "all x.(Cartilage(x) -> (SemiTranslucentTissue(x) & Firm(x) & MoreFlexibleThanBone(x)))", "score": 0}
{"id": "eqasc_validation_215", "prediction": "all x.(Cartilage(x) -> (SemitranslucentTissue(x) & Firm(x) & MoreFlexibleThanBone(x)))", "score": 0}
{"id": "eqasc_validation_215", "prediction": "all x.(Cartilage(x) -> (SemiTranslucentTissue(x) & Firm(x) & FlexibleThanBone(x)))", "score": 0}
{"id": "eqasc_validation_215", "prediction": "all x.(Cartilage(x) -> (SemitranslucentTissue(x) & Firm(x) & FlexibleThanBone(x)))", "score": 0}
{"id": "eqasc_validation_215", "prediction": "all x y.((Cartilage(x) & Bone(y)) -> (SemiTranslucentTissue(x) & Firm(x) & MoreFlexible(x,y)))", "score": 0}
{"id": "eqasc_validation_215", "prediction": "all x.(Cartilage(x) -> (SemiTranslucentTissue(x) & Firm(x) & Flexible(x)))", "score": 0}
{"id": "eqasc_validation_215", "prediction": "all x y.((Cartilage(x) & Bone(y)) -> (SemiTranslucentTissue(x) & Firm(x) & MoreFlexibleThan(x,y)))", "score": 0}
{"id": "eqasc_validation_215", "prediction": "all x y.((Cartilage(x) & Bone(y)) -> (SemitranslucentTissue(x) & Firm(x) & MoreFlexible(x,y)))", "score": 0}
{"id": "eqasc_validation_215", "prediction": "all x y.((Cartilage(x) & Bone(y)) -> (SemitranslucentTissue(x) & Firm(x) & MoreFlexibleThan(x,y)))", "score": 0}
{"id": "eqasc_validation_215", "prediction": "all x.(Cartilage(x) -> (SemitranslucentTissue(x) & Firm(x) & Flexible(x)))", "score": 0}
{"id": "eqasc_validation_216", "prediction": "all x y.((Bone(x) & SemiTranslucentTissue(y)) -> LessFlexibleThan(x,y))", "score": 0}
{"id": "eqasc_validation_216", "prediction": "all x y.((Bone(x) & SemiTranslucentTissue(y)) -> LessFlexible(x,y))", "score": 0}
{"id": "eqasc_validation_216", "prediction": "all x.((Bone(x) & SemiTranslucentTissue(x)) -> LessFlexible(x))", "score": 0}
{"id": "eqasc_validation_216", "prediction": "all x.((Bone(x) & SemiTranslucentTissue(x)) -> LessFlexibleThan(x))", "score": 0}
{"id": "eqasc_validation_216", "prediction": "all x y.((Bone(x) & SemiTranslucentTissue(y) & LessFlexible(x,y)) -> LessFlexible(x,y))", "score": 0}
{"id": "eqasc_validation_216", "prediction": "all x y z.((Bone(x) & SemiTranslucentTissue(y) & Tissue(z)) -> LessFlexibleThan(x,y,z))", "score": 0}
{"id": "eqasc_validation_216", "prediction": "all x y z.((Bone(x) & SemiTranslucentTissue(y) & SemiTranslucentTissue(z)) -> LessFlexible(x,y,z))", "score": 0}
{"id": "eqasc_validation_216", "prediction": "all x y z.((Bone(x) & SemiTranslucentTissue(y) & SemiTranslucentTissue(z)) -> LessFlexibleThan(x,y,z))", "score": 0}
{"id": "eqasc_validation_216", "prediction": "all x y.((Bone(x) & SemiTranslucentTissue(y)) -> (LessFlexible(x,y) & LessFlexible(x,y)))", "score": 0}
{"id": "eqasc_validation_216", "prediction": "all x y z.((Bone(x) & SemiTranslucentTissue(y) & Tissue(z)) -> LessFlexible(x,y,z))", "score": 0}
{"id": "eqasc_validation_216", "prediction": "all x y.((Bone(x) & SemiTranslucent(y)) -> LessFlexibleTissue(x,y))", "score": 0}
{"id": "eqasc_validation_216", "prediction": "all x.((Bone(x) & SemiTranslucentTissue(x)) -> LessFlexibleThan(x,y))", "score": 0}
{"id": "eqasc_validation_216", "prediction": "all x y z.((Bone(x) & SemiTranslucentTissue(y) & Tissue(z)) -> LessFlexibleThan(x,y))", "score": 0}
{"id": "eqasc_validation_216", "prediction": "all x y z.((Bone(x) & SemiTranslucentTissue(y) & SemiTranslucent(z)) -> LessFlexibleTissue(x,y,z))", "score": 0}
{"id": "eqasc_validation_216", "prediction": "all x y.((Bone(x) & SemiTranslucentTissue(y) & LessFlexible(x,y)) -> LessFlexible(x))", "score": 0}
{"id": "eqasc_validation_216", "prediction": "all x y z.((Bone(x) & SemiTranslucentTissue(y) & SemiTranslucentTissue(z)) -> LessFlexible(x,y))", "score": 0}
{"id": "eqasc_validation_217", "prediction": "all x y.((BadWeather(x) & BadWeather(y)) -> DecreasesVisibility(x,y))", "score": 0}
{"id": "eqasc_validation_217", "prediction": "all x.((BadWeather(x) & DecreasesVisibility(x) & Driving(x)) -> DecreasesVisibility(x))", "score": 0}
{"id": "eqasc_validation_217", "prediction": "all x y.((BadWeather(x) & Driving(y)) -> DecreasesVisibility(x,y))", "score": 0}
{"id": "eqasc_validation_217", "prediction": "all x.((BadWeather(x) & BadWeather(x)) -> DecreasesVisibility(x))", "score": 0}
{"id": "eqasc_validation_217", "prediction": "all x y.((BadWeather(x) & BadWeather(y)) -> DecreasesVisibilityWhileDriving(x,y))", "score": 0}
{"id": "eqasc_validation_217", "prediction": "all x.((BadWeather(x) & BadWeather(x)) -> DecreasesVisibilityWhileDriving(x))", "score": 0}
{"id": "eqasc_validation_217", "prediction": "all x.(BadWeather(x) -> DecreasesVisibility(x))", "score": 0}
{"id": "eqasc_validation_217", "prediction": "all x y.((BadWeather(x) & BadWeather(y)) -> DecreasesVisibilityWhileDriving(x))", "score": 0}
{"id": "eqasc_validation_217", "prediction": "all x y z.((BadWeather(x) & BadWeather(y) & Driving(z)) -> DecreasesVisibility(x,y,z))", "score": 0}
{"id": "eqasc_validation_217", "prediction": "all x.(BadWeather(x) -> DecreasesVisibilityWhileDriving(x))", "score": 0}
{"id": "eqasc_validation_217", "prediction": "all x y.((BadWeather(x) & BadWeather(y)) -> DecreasesVisibilityWhenDriving(x,y))", "score": 0}
{"id": "eqasc_validation_217", "prediction": "all x.((BadWeather(x) & BadWeather(x)) -> DecreasesVisibilityWhenDriving(x))", "score": 0}
{"id": "eqasc_validation_217", "prediction": "all x.((BadWeather(x) & PoorWeather(x)) -> DecreasesVisibilityWhileDriving(x))", "score": 0}
{"id": "eqasc_validation_217", "prediction": "all x.((BadWeather(x) & DecreasesVisibility(x)) -> DecreasesVisibility(x))", "score": 0}
{"id": "eqasc_validation_217", "prediction": "all x.((BadWeather(x) & PoorWeather(x)) -> DecreasesVisibility(x))", "score": 0}
{"id": "eqasc_validation_217", "prediction": "all x.((BadWeather(x) & Driving(x)) -> DecreasesVisibility(x))", "score": 0}
{"id": "eqasc_validation_218", "prediction": "all x.(MoreVisibility(x) -> SafeOperation(x))", "score": 0}
{"id": "eqasc_validation_218", "prediction": "all x.((Visibility(x) & SafeOperation(x)) -> MoreVisibility(x))", "score": 0}
{"id": "eqasc_validation_218", "prediction": "(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(More(More(More(More(More(More)))))", "score": -1}
{"id": "eqasc_validation_218", "prediction": "(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility)) -> SafeOperation(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreOperation(MoreOperation(MoreOperation(MoreOperation))))", "score": -1}
{"id": "eqasc_validation_218", "prediction": "(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility)) -> SafeOperation(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreOperation(MoreOperation(MoreOperation(MoreOperation))))", "score": -1}
{"id": "eqasc_validation_218", "prediction": "(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility)) -> SafeOperation(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(Me)))", "score": -1}
{"id": "eqasc_validation_218", "prediction": "(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility)) -> SafeOperation(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreOperation(MoreOperation(MoreOperation(MoreOperation)))", "score": -1}
{"id": "eqasc_validation_218", "prediction": "All x.(MoreVisibility(x) -> SafeOperation(x))", "score": -1}
{"id": "eqasc_validation_218", "prediction": "(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreOperation(More(More(More(More)))))", "score": -1}
{"id": "eqasc_validation_218", "prediction": "(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(More(More(More(More(More)))))", "score": -1}
{"id": "eqasc_validation_218", "prediction": "(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility)) -> SafeOperation(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(Me))))", "score": -1}
{"id": "eqasc_validation_218", "prediction": "(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreSafeOperation(MoreSafeOperation(More(More))))", "score": -1}
{"id": "eqasc_validation_218", "prediction": "(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility)) -> SafeOperation(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreOperation(MoreOperation(MoreOperation))))", "score": -1}
{"id": "eqasc_validation_218", "prediction": "(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility)) -> SafeOperation(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreOperation(MoreOperation(MoreOperation)))", "score": -1}
{"id": "eqasc_validation_218", "prediction": "(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility)) -> SafeOperation(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreOperation(MoreOperation(MoreOperation)))", "score": -1}
{"id": "eqasc_validation_218", "prediction": "(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility)) -> SafeOperation(MoreVisibility(MoreVisibility(MoreVisibility(MoreVisibility(More)))", "score": -1}
{"id": "eqasc_validation_219", "prediction": "all x y.((BadWeather(x) & Driving(y)) -> DecreasesSafeOperation(x,y))", "score": 0}
{"id": "eqasc_validation_219", "prediction": "all x.((BadWeather(x) & SafeOperation(x) & Driving(x)) -> Decreases(x))", "score": 0}
{"id": "eqasc_validation_219", "prediction": "all x.((BadWeather(x) & DecreasesSafeOperation(x) & Driving(x)) -> BadWeatherDecreasesSafeOperation(x))", "score": 0}
{"id": "eqasc_validation_219", "prediction": "all x.(BadWeather(x) -> DecreasesSafeOperation(x))", "score": 0}
{"id": "eqasc_validation_219", "prediction": "all x.((BadWeather(x) & BadOperation(x) & Driving(x)) -> DecreasesSafeOperation(x))", "score": 0}
{"id": "eqasc_validation_219", "prediction": "all x.((BadWeather(x) & SafeOperation(x)) -> Decreases(x))", "score": 0}
{"id": "eqasc_validation_219", "prediction": "all x.((BadWeather(x) & DecreasesSafeOperation(x) & Driving(x)) -> DecreasesSafeOperation(x))", "score": 0}
{"id": "eqasc_validation_219", "prediction": "all x y z.((BadWeather(x) & SafeOperation(y) & Driving(z)) -> Decreases(x,y,z))", "score": 0}
{"id": "eqasc_validation_219", "prediction": "all x y.((BadWeather(x) & BadOperation(y)) -> DecreasesSafeOperation(x,y))", "score": 0}
{"id": "eqasc_validation_219", "prediction": "all x y.((BadWeather(x) & SafeOperation(y)) -> Decreases(x,y))", "score": 0}
{"id": "eqasc_validation_219", "prediction": "all x y.((BadWeather(x) & SafeOperation(y) & Driving(y)) -> Decreases(x,y))", "score": 0}
{"id": "eqasc_validation_219", "prediction": "all x y.((BadWeather(x) & Driving(y)) -> ReducesSafeOperation(x,y))", "score": 0}
{"id": "eqasc_validation_219", "prediction": "all x.((BadWeather(x) & SafeOperationWhileDriving(x)) -> Decreases(x))", "score": 0}
{"id": "eqasc_validation_219", "prediction": "all x.((BadWeather(x) & BadWeather(x)) -> DecreasesSafeOperation(x))", "score": 0}
{"id": "eqasc_validation_219", "prediction": "all x y z.((BadWeather(x) & SafeOperation(y) & Driving(z)) -> Decreases(x,y))", "score": 0}
{"id": "eqasc_validation_219", "prediction": "all x y.((BadWeather(x) & BadWeather(y)) -> DecreasesSafeOperation(x,y))", "score": 0}
{"id": "eqasc_validation_220", "prediction": "all x.(GoodVisibility(x) -> SafeDriving(x))", "score": 0}
{"id": "eqasc_validation_220", "prediction": "all x.(GoodVisibility(x) -> EssentialForSafeDriving(x))", "score": 0}
{"id": "eqasc_validation_220", "prediction": "all x.((GoodVisibility(x) & SafeDriving(x)) -> EssentialForSafeDriving(x))", "score": 0}
{"id": "eqasc_validation_220", "prediction": "all x.((GoodVisibility(x) & SafeDriving(x)) -> EssentialFor(x,y))", "score": 0}
{"id": "eqasc_validation_220", "prediction": "all x y.((GoodVisibility(x) & SafeDriving(y)) -> EssentialFor(x,y))", "score": 0}
{"id": "eqasc_validation_220", "prediction": "all x.((GoodVisibility(x) & SafeDriving(x)) -> EssentialForDriving(x))", "score": 0}
{"id": "eqasc_validation_220", "prediction": "all x.((GoodVisibility(x) & SafeDriving(x)) -> Essential(x))", "score": 0}
{"id": "eqasc_validation_220", "prediction": "all x.((GoodVisibility(x) & SafeDriving(x)) -> EssentialFor(x,safeDriving))", "score": 0}
{"id": "eqasc_validation_220", "prediction": "all x.((GoodVisibility(x) & SafeDriving(x)) -> EssentialFor(x,SafeDriving))", "score": 0}
{"id": "eqasc_validation_220", "prediction": "all x y.((GoodVisibility(x) & SafeDriving(y)) -> EssentialForSafeDriving(x,y))", "score": 0}
{"id": "eqasc_validation_220", "prediction": "all x.((GoodVisibility(x) & SafeDriving(x)) -> EssentialFor(x))", "score": 0}
{"id": "eqasc_validation_220", "prediction": "all x.((GoodVisibility(x) & SafeDriving(x)) -> EssentialForSecureDriving(x))", "score": 0}
{"id": "eqasc_validation_220", "prediction": "all x.((Visibility(x) & SafeDriving(x)) -> Good(x))", "score": 0}
{"id": "eqasc_validation_220", "prediction": "all x.((GoodVisibility(x) & SafeDriving(x)) -> EssentialToSafeDriving(x))", "score": 0}
{"id": "eqasc_validation_220", "prediction": "all x.((GoodVisibility(x) & SafeDriving(x)) -> EssentialForSaferDriving(x))", "score": 0}
{"id": "eqasc_validation_221", "prediction": "all x.(BadWeather(x) -> UnsafeDrivingConditions(x))", "score": 0}
{"id": "eqasc_validation_221", "prediction": "all x.((BadWeather(x) & UnsafeDrivingConditions(x)) -> BadWeather(x))", "score": 0}
{"id": "eqasc_validation_221", "prediction": "all x y.((BadWeather(x) & DrivingCondition(y)) -> Unsafe(x,y))", "score": 0}
{"id": "eqasc_validation_221", "prediction": "all x.((BadWeather(x) & UnsafeDrivingConditions(x)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_221", "prediction": "all x y.((BadWeather(x) & UnsafeDrivingConditions(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_221", "prediction": "all x.(BadWeather(x) -> UnsafeDriving(x))", "score": 0}
{"id": "eqasc_validation_221", "prediction": "all x.((BadWeather(x) & UnsafeDrivingConditions(x)) -> Bad(x))", "score": 0}
{"id": "eqasc_validation_221", "prediction": "all x.((Weather(x) & Bad(x)) -> UnsafeDrivingConditions(x))", "score": 0}
{"id": "eqasc_validation_221", "prediction": "all x.((BadWeather(x) & UnsafeDrivingConditions(x)) -> Causes(x,badWeather))", "score": 0}
{"id": "eqasc_validation_221", "prediction": "all x.((BadWeather(x) & UnsafeDrivingConditions(x)) -> BadWeatherCauses(x))", "score": 0}
{"id": "eqasc_validation_221", "prediction": "all x.((BadWeather(x) & UnsafeDriving(x)) -> BadWeather(x))", "score": 0}
{"id": "eqasc_validation_221", "prediction": "all x y.((BadWeather(x) & BadConditions(y)) -> UnsafeDriving(x,y))", "score": 0}
{"id": "eqasc_validation_221", "prediction": "all x y.((BadWeather(x) & BadConditions(y)) -> UnsafeDrivingConditions(x,y))", "score": 0}
{"id": "eqasc_validation_221", "prediction": "all x.((BadWeather(x) & UnsafeDriving(x)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_221", "prediction": "all x.(BadWeather(x) -> CausesUnsafeDrivingConditions(x))", "score": 0}
{"id": "eqasc_validation_221", "prediction": "all x y.((BadWeather(x) & UnsafeDriving(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_222", "prediction": "all x.((Thunderstorm(x) & Hail(x)) -> DangerousWeatherPhenomenon(x))", "score": 0}
{"id": "eqasc_validation_222", "prediction": "all x.((Thunderstorm(x) & HazardousWeatherPhenomenon(x)) -> Hail(x))", "score": 0}
{"id": "eqasc_validation_222", "prediction": "all x.((Thunderstorm(x) & DangerousWeatherPhenomenon(x)) -> Hail(x))", "score": 0}
{"id": "eqasc_validation_222", "prediction": "all x y.((Thunderstorm(x) & Hail(y)) -> DangerousWeatherPhenomenon(x))", "score": 0}
{"id": "eqasc_validation_222", "prediction": "all x.((Thunderstorm(x) & Hail(x)) -> DangerousWeatherPhenomena(x))", "score": 0}
{"id": "eqasc_validation_222", "prediction": "all x y.((Thunderstorm(x) & Hail(y)) -> DangerousWeatherPhenomenon(x,y))", "score": 0}
{"id": "eqasc_validation_222", "prediction": "all x.((Thunderstorm(x) & HarmfulWeatherPhenomenon(x)) -> Hail(x))", "score": 0}
{"id": "eqasc_validation_222", "prediction": "all x.((Thunderstorm(x) & HarshWeatherPhenomenon(x)) -> Hail(x))", "score": 0}
{"id": "eqasc_validation_222", "prediction": "all x.((Tornado(x) & Hail(x)) -> DangerousWeatherPhenomenon(x))", "score": 0}
{"id": "eqasc_validation_222", "prediction": "all x.(DangerousWeatherPhenomenon(x) & ProducedByThunderstorms(x) -> Hail(x))", "score": 0}
{"id": "eqasc_validation_222", "prediction": "all x.((WeatherPhenomenon(x) & Thunderstorm(x)) -> Hail(x))", "score": 0}
{"id": "eqasc_validation_222", "prediction": "all x y.((Thunderstorm(x) & WeatherPhenomenon(y) & Produces(x,y)) -> Hail(y))", "score": 0}
{"id": "eqasc_validation_222", "prediction": "all x.(DangerousWeatherPhenomenon(x) -> (ThunderstormsProduce(x) & Hail(x)))", "score": 0}
{"id": "eqasc_validation_222", "prediction": "all x y.((Thunderstorm(x) & Hail(y)) -> DangerousWeatherPhenomena(x))", "score": 0}
{"id": "eqasc_validation_222", "prediction": "all x y.((Thunderstorm(x) & Hail(y)) -> DangerousWeatherPhenomena(x,y))", "score": 0}
{"id": "eqasc_validation_222", "prediction": "all x.((Thunderstorm(x) & Hurricane(x)) -> Hail(x))", "score": 0}
{"id": "eqasc_validation_223", "prediction": "all x y.((Hail(x) & Driving(y)) -> DecreasesVisibility(x,y))", "score": 0}
{"id": "eqasc_validation_223", "prediction": "all x.(Hail(x) -> DecreasesVisibility(x))", "score": 0}
{"id": "eqasc_validation_223", "prediction": "all x.(Hail(x) -> (DecreasesVisibility(x) & Driving(x)))", "score": 0}
{"id": "eqasc_validation_223", "prediction": "all x y.((Hail(x) & Driving(y)) -> (DecreasesVisibility(x,y) & DecreasesVisibility(x,y)))", "score": 0}
{"id": "eqasc_validation_223", "prediction": "all x.(Hail(x) -> DecreasesVisibilityWhileDriving(x))", "score": 0}
{"id": "eqasc_validation_223", "prediction": "all x y.((Hail(x) & Driving(y)) -> ReducesVisibility(x,y))", "score": 0}
{"id": "eqasc_validation_223", "prediction": "all x y.((Hail(x) & Driving(y)) -> VisibilityDecreases(x,y))", "score": 0}
{"id": "eqasc_validation_223", "prediction": "all x y.((Hail(x) & Driving(y)) -> (DecreasesVisibility(x,y) & -DecreasesVisibility(x,y)))", "score": 0}
{"id": "eqasc_validation_223", "prediction": "all x y.((Hail(x) & Driving(y)) -> (DecreasesVisibility(x,y) & Drives(x,y)))", "score": 0}
{"id": "eqasc_validation_223", "prediction": "all x y.((Hail(x) & Driving(y)) -> IncreasesVisibility(x,y))", "score": 0}
{"id": "eqasc_validation_223", "prediction": "all x.(Hail(x) -> DecreasesVisibilityWhenDriving(x))", "score": 0}
{"id": "eqasc_validation_223", "prediction": "all x y.((Hail(x) & Driving(y)) -> (DecreasesVisibility(x,y) & HailDecreasesVisibility(x,y)))", "score": 0}
{"id": "eqasc_validation_223", "prediction": "all x y z.((Hail(x) & Driving(y) & Hail(z)) -> DecreasesVisibility(x,y,z))", "score": 0}
{"id": "eqasc_validation_223", "prediction": "all x y.((Hail(x) & Driving(y)) -> (DecreasesVisibility(x,y) & Drives(y)))", "score": 0}
{"id": "eqasc_validation_223", "prediction": "all x.(Hail(x) -> (DecreasesVisibility(x) & Drives(x)))", "score": 0}
{"id": "eqasc_validation_223", "prediction": "all x y.((Hail(x) & Driving(y)) -> (DecreasesVisibility(x,y) | DecreasesVisibility(x,y)))", "score": 0}
{"id": "eqasc_validation_224", "prediction": "all x.((Fog(x) & DrivingToSmallBoatHarborTournamentSite(x)) -> VisibilityNearZero(x))", "score": 0}
{"id": "eqasc_validation_224", "prediction": "all x y.((Fog(x) & SmallBoatHarborTournamentSite(y)) -> TakesVisibilityToNearZero(x,y))", "score": 0}
{"id": "eqasc_validation_224", "prediction": "all x y.((Fog(x) & SmallBoatHarborTournamentSite(y) & DrivingTo(x,y)) -> VisibilityNearZero(x))", "score": 0}
{"id": "eqasc_validation_224", "prediction": "all x y.((Fog(x) & SmallBoatHarborTournamentSite(y)) -> VisibilityNearZero(x,y))", "score": 0}
{"id": "eqasc_validation_224", "prediction": "all x y.((Fog(x) & SmallBoatHarborTournamentSite(y)) -> TakenVisibilityToNearZero(x,y))", "score": 0}
{"id": "eqasc_validation_224", "prediction": "all x y.((Fog(x) & SmallBoatHarborTournamentSite(y) & DrivingTo(x,y)) -> TakesVisibilityToNearZero(x))", "score": 0}
{"id": "eqasc_validation_224", "prediction": "all x.((Fog(x) & DrivingToSmallBoatHarborTournamentSite(x)) -> TakesVisibilityToNearZero(x))", "score": 0}
{"id": "eqasc_validation_224", "prediction": "all x y.((Fog(x) & SmallBoatHarborTournamentSite(y)) -> TakenToNearZeroVisibility(x,y))", "score": 0}
{"id": "eqasc_validation_224", "prediction": "all x.((Fog(x) & DrivingToSmallBoatHarborTournamentSite(x)) -> TakenVisibilityToNearZero(x))", "score": 0}
{"id": "eqasc_validation_224", "prediction": "all x.((DrivingToSmallBoatHarborTournamentSite(x) & FogTakesVisibilityToNearZero(x)) -> TakesVisibilityToNearZero(x))", "score": 0}
{"id": "eqasc_validation_224", "prediction": "all x.((Fog(x) & DrivingToSmallBoatHarborTournamentSite(x)) -> VisibilityNearNull(x))", "score": 0}
{"id": "eqasc_validation_224", "prediction": "all x y z.((Fog(x) & SmallBoatHarborTournamentSite(y) & Fog(z)) -> TakesVisibilityToNearZero(x,y,z))", "score": 0}
{"id": "eqasc_validation_224", "prediction": "all x y.((Fog(x) & SmallBoatHarborTournamentSite(y) & DrivingTo(x,y)) -> TakenVisibilityToNearZero(x))", "score": 0}
{"id": "eqasc_validation_224", "prediction": "all x.((Fog(x) & DrivingToSmallBoatHarbor(x)) -> VisibilityNearZero(x))", "score": 0}
{"id": "eqasc_validation_224", "prediction": "all x y.((Fog(x) & SmallBoatHarborTournamentSite(y) & DrivingTo(x,y)) -> VisibilityNearNull(x))", "score": 0}
{"id": "eqasc_validation_224", "prediction": "all x y z.((Fog(x) & SmallBoatHarborTournamentSite(y) & Fog(z)) -> VisibilityNearZero(z))", "score": 0}
{"id": "eqasc_validation_225", "prediction": "all x.(BadWeather(x) -> TakesVisibilityToNearZero(x))", "score": 0}
{"id": "eqasc_validation_225", "prediction": "all x.(BadWeather(x) -> NearNullVisibility(x))", "score": 0}
{"id": "eqasc_validation_225", "prediction": "all x.(BadWeather(x) -> NearZeroVisibility(x))", "score": 0}
{"id": "eqasc_validation_225", "prediction": "all x y.((BadWeather(x) & Visibility(y)) -> TakesToNearZero(x,y))", "score": 0}
{"id": "eqasc_validation_225", "prediction": "all x.(BadWeather(x) -> VisibilityNearZero(x))", "score": 0}
{"id": "eqasc_validation_225", "prediction": "all x.((BadWeather(x) & NearZeroVisibility(x)) -> TakesTo(x,y))", "score": 0}
{"id": "eqasc_validation_225", "prediction": "all x.(BadWeather(x) -> NearNearZeroVisibility(x))", "score": 0}
{"id": "eqasc_validation_225", "prediction": "all x.(BadWeather(x) -> TakesVisibilityToNearNull(x))", "score": 0}
{"id": "eqasc_validation_225", "prediction": "all x.(BadWeather(x) -> TakesVisibilityToNearNearZero(x))", "score": 0}
{"id": "eqasc_validation_225", "prediction": "all x.((BadWeather(x) & VisibilityNearZero(x)) -> TakesTo(x,y))", "score": 0}
{"id": "eqasc_validation_225", "prediction": "all x.((BadWeather(x) & VisibilityNearZero(x)) -> TakesToNearZero(x))", "score": 0}
{"id": "eqasc_validation_225", "prediction": "all x.((BadWeather(x) & NearZeroVisibility(x)) -> Takes(x,y))", "score": 0}
{"id": "eqasc_validation_225", "prediction": "all x.((BadWeather(x) & NearNullVisibility(x)) -> TakesTo(x,y))", "score": 0}
{"id": "eqasc_validation_225", "prediction": "all x y.((BadWeather(x) & Visibility(y)) -> NearNull(x,y))", "score": 0}
{"id": "eqasc_validation_225", "prediction": "all x y.((BadWeather(x) & Visibility(y)) -> NearNull(x))", "score": 0}
{"id": "eqasc_validation_225", "prediction": "all x y.((BadWeather(x) & Visibility(y)) -> NearZero(y))", "score": 0}
{"id": "eqasc_validation_226", "prediction": "all x.((SecondaryAccident(x) & ReducedVisibility(x)) -> MajorProblem(x))", "score": 0}
{"id": "eqasc_validation_226", "prediction": "all x.((SecondaryAccident(x) & DrivingConditionsReducedVisibility(x)) -> MajorProblem(x))", "score": 0}
{"id": "eqasc_validation_226", "prediction": "all x y.((SecondaryAccident(x) & DrivingCondition(y) & ReducedVisibility(y)) -> MajorProblem(x,y))", "score": 0}
{"id": "eqasc_validation_226", "prediction": "all x.((SecondaryAccident(x) & DrivingConditions(x) & ReducedVisibility(x)) -> MajorProblem(x))", "score": 0}
{"id": "eqasc_validation_226", "prediction": "all x y.((SecondaryAccident(x) & DrivingCondition(y) & ReducedVisibility(x)) -> MajorProblem(x))", "score": 0}
{"id": "eqasc_validation_226", "prediction": "all x y.((SecondaryAccident(x) & DrivingCondition(y) & ReducedVisibility(x)) -> MajorProblem(x,y))", "score": 0}
{"id": "eqasc_validation_226", "prediction": "all x.((SecondaryAccident(x) & DrivingCondition(x) & ReducedVisibility(x)) -> MajorProblem(x))", "score": 0}
{"id": "eqasc_validation_226", "prediction": "all x y.((SecondaryAccident(x) & DrivingCondition(y) & ReducedVisibility(y)) -> MajorProblem(x))", "score": 0}
{"id": "eqasc_validation_226", "prediction": "all x y.((SecondaryAccident(x) & DrivingCondition(y) & ReducedVisibility(x,y)) -> MajorProblem(x))", "score": 0}
{"id": "eqasc_validation_226", "prediction": "all x.((SecondaryAccident(x) & DrivingConditions(x,ReducedVisibility)) -> MajorProblem(x))", "score": 0}
{"id": "eqasc_validation_226", "prediction": "all x.((SecondaryAccident(x) & DrivingConditionsWithReducedVisibility(x)) -> MajorProblem(x))", "score": 0}
{"id": "eqasc_validation_226", "prediction": "all x y.((SecondaryAccident(x) & DrivingConditions(y) & ReducedVisibility(x)) -> MajorProblem(x))", "score": 0}
{"id": "eqasc_validation_226", "prediction": "all x.((SecondaryAccident(x) & DrivingCondition(x,ReducedVisibility)) -> MajorProblem(x))", "score": 0}
{"id": "eqasc_validation_226", "prediction": "all x y.((SecondaryAccident(x) & DrivingConditions(y) & ReducedVisibility(x)) -> MajorProblem(x,y))", "score": 0}
{"id": "eqasc_validation_226", "prediction": "all x.((SecondaryAccident(x) & ReducingVisibility(x)) -> MajorProblem(x))", "score": 0}
{"id": "eqasc_validation_227", "prediction": "all x.(BadWeather(x) -> IncreasesRiskOfCarAccidents(x))", "score": 0}
{"id": "eqasc_validation_227", "prediction": "all x y.((BadWeather(x) & CarAccident(y)) -> IncreasesRisk(x,y))", "score": 0}
{"id": "eqasc_validation_227", "prediction": "all x.((BadWeather(x) & CarAccident(y)) -> IncreasesRisk(x,y))", "score": 0}
{"id": "eqasc_validation_227", "prediction": "all x.((BadWeather(x) & IncreasesRiskOfCarAccidents(x)) -> BadWeather(x))", "score": 0}
{"id": "eqasc_validation_227", "prediction": "all x.(BadWeather(x) -> IncreasesCarAccidentRisk(x))", "score": 0}
{"id": "eqasc_validation_227", "prediction": "all x.((BadWeather(x) & CarAccident(x)) -> IncreasesRisk(x))", "score": 0}
{"id": "eqasc_validation_227", "prediction": "all x y.((BadWeather(x) & CarAccident(y)) -> IncreasedRisk(x,y))", "score": 0}
{"id": "eqasc_validation_227", "prediction": "all x.(BadWeather(x) -> IncreasedRiskOfCarAccidents(x))", "score": 0}
{"id": "eqasc_validation_227", "prediction": "all x y.((BadWeather(x) & CarAccident(y)) -> IncreasesRiskOf(x,y))", "score": 0}
{"id": "eqasc_validation_227", "prediction": "all x.((BadWeather(x) & CarAccident(y)) -> IncreasedRisk(x,y))", "score": 0}
{"id": "eqasc_validation_227", "prediction": "all x.((BadWeather(x) & CarAccidentRisk(x)) -> Increases(x))", "score": 0}
{"id": "eqasc_validation_227", "prediction": "all x.((BadWeather(x) & IncreasedRiskOfCarAccidents(x)) -> BadWeather(x))", "score": 0}
{"id": "eqasc_validation_227", "prediction": "all x.((BadWeather(x) & CarAccident(x)) -> IncreasedRisk(x))", "score": 0}
{"id": "eqasc_validation_227", "prediction": "all x.((BadWeather(x) & IncreasesCarAccidentRisk(x)) -> BadWeather(x))", "score": 0}
{"id": "eqasc_validation_227", "prediction": "all x.((BadWeather(x) & CarAccidentRisk(x)) -> Increased(x))", "score": 0}
{"id": "eqasc_validation_227", "prediction": "all x.((BadWeather(x) & CarAccidentRisk(x)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_validation_228", "prediction": "all x.((Collisions(x) & PoorVisibility(x)) -> MoreLikely(x))", "score": 0}
{"id": "eqasc_validation_228", "prediction": "all x.((Collision(x) & PoorVisibility(x)) -> MoreLikely(x))", "score": 0}
{"id": "eqasc_validation_228", "prediction": "all x y.((Collisions(x) & PoorVisibility(y)) -> MoreLikely(x,y))", "score": 0}
{"id": "eqasc_validation_228", "prediction": "all x.((Collisions(x) & VisibilityPoor(x)) -> MoreLikely(x))", "score": 0}
{"id": "eqasc_validation_228", "prediction": "all x.((VisibilityPoor(x) & Collisions(x)) -> MoreLikely(x))", "score": 0}
{"id": "eqasc_validation_228", "prediction": "all x.((VisibilityPoor(x) & MoreLikely(x)) -> Collisions(x))", "score": 0}
{"id": "eqasc_validation_228", "prediction": "all x y.((Collisions(x) & VisibilityPoor(y)) -> MoreLikely(x,y))", "score": 0}
{"id": "eqasc_validation_228", "prediction": "all x.((Collisions(x) & PoorVisibility(x)) -> MoreLikelyWhen(x,y))", "score": 0}
{"id": "eqasc_validation_228", "prediction": "all x.((Likely(x) & PoorVisibility(x)) -> Collisions(x))", "score": 0}
{"id": "eqasc_validation_228", "prediction": "all x.((VisibilityPoor(x) & CollisionsMoreLikely(x)) -> Poor(x))", "score": 0}
{"id": "eqasc_validation_228", "prediction": "all x.((Clarity(x) & PoorVisibility(x)) -> MoreLikely(x))", "score": 0}
{"id": "eqasc_validation_228", "prediction": "all x.((Collisions(x) & PoorVision(x)) -> MoreLikely(x))", "score": 0}
{"id": "eqasc_validation_228", "prediction": "all x.((Colisions(x) & PoorVisibility(x)) -> MoreLikely(x))", "score": 0}
{"id": "eqasc_validation_228", "prediction": "all x y.((Collision(x) & PoorVisibility(y)) -> MoreLikely(x,y))", "score": 0}
{"id": "eqasc_validation_228", "prediction": "all x.((Collision(x) & VisibilityPoor(x)) -> MoreLikely(x))", "score": 0}
{"id": "eqasc_validation_228", "prediction": "all x y.((Collisions(x) & PoorVisibility(y)) -> MoreLikelyWhen(x,y))", "score": 0}
{"id": "eqasc_validation_229", "prediction": "all x y z.((BadWeather(x) & Collision(y) & Driving(z)) -> MoreLikely(x,y,z))", "score": 0}
{"id": "eqasc_validation_229", "prediction": "all x.(BadWeather(x) -> MakesCollisionsMoreLikely(x))", "score": 0}
{"id": "eqasc_validation_229", "prediction": "all x y.((BadWeather(x) & Driving(y)) -> MakesCollisionsMoreLikely(x,y))", "score": 0}
{"id": "eqasc_validation_229", "prediction": "all x.((BadWeather(x) & Driving(y)) -> MoreLikelyCollisions(x,y))", "score": 0}
{"id": "eqasc_validation_229", "prediction": "all x.((BadWeather(x) & Driving(x)) -> MoreLikelyCollisions(x))", "score": 0}
{"id": "eqasc_validation_229", "prediction": "all x y.((BadWeather(x) & Collision(y)) -> MoreLikely(x,y))", "score": 0}
{"id": "eqasc_validation_229", "prediction": "all x.((BadWeather(x) & Driving(y)) -> MakesCollisionsMoreLikely(x,y))", "score": 0}
{"id": "eqasc_validation_229", "prediction": "all x.(BadWeather(x) -> MoreLikelyCollisions(x))", "score": 0}
{"id": "eqasc_validation_229", "prediction": "all x.((BadWeather(x) & Collision(x)) -> MoreLikely(x))", "score": 0}
{"id": "eqasc_validation_229", "prediction": "all x y.((BadWeather(x) & Driving(y)) -> MoreLikelyCollisions(x,y))", "score": 0}
{"id": "eqasc_validation_229", "prediction": "all x.(BadWeather(x) -> CollisionsMoreLikely(x))", "score": 0}
{"id": "eqasc_validation_229", "prediction": "all x.(BadWeather(x) -> MoreLikelyCollisionsWhileDriving(x))", "score": 0}
{"id": "eqasc_validation_229", "prediction": "all x.((BadWeather(x) & Collisions(x)) -> MoreLikely(x))", "score": 0}
{"id": "eqasc_validation_229", "prediction": "all x.((BadWeather(x) & Collision(y)) -> MoreLikely(x,y))", "score": 0}
{"id": "eqasc_validation_229", "prediction": "all x y.((BadWeather(x) & Driving(y)) -> MoreLikelyCollision(x,y))", "score": 0}
{"id": "eqasc_validation_229", "prediction": "all x y.((BadWeather(x) & Driving(y)) -> MoreLikely(x,y))", "score": 0}
{"id": "eqasc_validation_230", "prediction": "all x.((LackOfVisibility(x) & ManyAccidents(x)) -> MajorCause(x))", "score": 0}
{"id": "eqasc_validation_230", "prediction": "all x y.((LackOfVisibility(x) & Accident(y)) -> MajorCause(x,y))", "score": 0}
{"id": "eqasc_validation_230", "prediction": "all x.(LackOfVisibility(x) -> MajorCauseOfManyAccidents(x))", "score": 0}
{"id": "eqasc_validation_230", "prediction": "all x.((LackOfVisibility(x) & MajorCauseOfManyAccidents(x)) -> MajorCauseOfManyAccidents(x))", "score": 0}
{"id": "eqasc_validation_230", "prediction": "exists x.(LackOfVisibility(x) & MajorCauseOfManyAccidents(x))", "score": 0}
{"id": "eqasc_validation_230", "prediction": "all x.((LackOfVisibility(x) & ManyAccidents(x)) -> MajorCauseOf(x,y))", "score": 0}
{"id": "eqasc_validation_230", "prediction": "all x y.((LackOfVisibility(x) & Accident(y)) -> MajorCauseOf(x,y))", "score": 0}
{"id": "eqasc_validation_230", "prediction": "all x.((LackOfVisibility(x) & MajorCauseOfManyAccidents(x)) -> MajorCauseOf(x,y))", "score": 0}
{"id": "eqasc_validation_230", "prediction": "all x.((LackOfVisibility(x) & ManyAccidents(x)) -> MajorCauseOf(x))", "score": 0}
{"id": "eqasc_validation_230", "prediction": "all x y z.((LackOfVisibility(x) & Accident(y) & Accident(z)) -> MajorCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_230", "prediction": "all x.((LackOfVisibility(x) & CauseOfManyAccidents(x)) -> MajorCauseOf(x,y))", "score": 0}
{"id": "eqasc_validation_230", "prediction": "all x.((LackOfVisibility(x) & MajorCauseOfManyAccidents(x)) -> MajorCauseOf(x))", "score": 0}
{"id": "eqasc_validation_230", "prediction": "all x y z.((LackOfVisibility(x) & Accident(y) & Accident(z)) -> MajorCauseOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_230", "prediction": "all x.((LackOfVisibility(x) & CauseOfManyAccidents(x)) -> MajorCauseOfAccidents(x))", "score": 0}
{"id": "eqasc_validation_230", "prediction": "all x.((LackOfVisibility(x) & MajorCauseOfManyAccidents(x)) -> MajorCauseOfAccidents(x))", "score": 0}
{"id": "eqasc_validation_230", "prediction": "all x.((LackOfVisibility(x) & MajorCauseOfManyAccidents(x)) -> MajorCauseOfMoreAccidents(x))", "score": 0}
{"id": "eqasc_validation_231", "prediction": "all x y.((BadWeather(x) & CarAccident(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_231", "prediction": "all x.(BadWeather(x) -> CausesCarAccidents(x))", "score": 0}
{"id": "eqasc_validation_231", "prediction": "all x.((BadWeather(x) & CausesCarAccidents(x)) -> BadWeatherCausesCarAccidents(x))", "score": 0}
{"id": "eqasc_validation_231", "prediction": "all x y z.((BadWeather(x) & CarAccident(y) & BadWeather(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_231", "prediction": "all x y z.((BadWeather(x) & CarAccident(y) & Car(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_231", "prediction": "all x y.((BadWeather(x) & CarAccident(y)) -> BadWeatherCauses(x,y))", "score": 0}
{"id": "eqasc_validation_231", "prediction": "all x.(BadWeatherCausesCarAccidents(x) -> BadWeatherCausesCarAccidents(x))", "score": 0}
{"id": "eqasc_validation_231", "prediction": "all x.((BadWeather(x) & BadWeather(x)) -> CausesCarAccidents(x))", "score": 0}
{"id": "eqasc_validation_231", "prediction": "all x.((BadWeather(x) & CausesCarAccidents(x)) -> BadWeather(x))", "score": 0}
{"id": "eqasc_validation_231", "prediction": "all x.((BadWeather(x) & CausesCarAccidents(x)) -> CausesCarAccidents(x))", "score": 0}
{"id": "eqasc_validation_231", "prediction": "all x y z.((BadWeather(x) & CarAccident(y) & Weather(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_231", "prediction": "all x y z.((BadWeather(x) & CarAccident(y) & BadWeather(z)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_231", "prediction": "all x.(BadWeatherCausesCarAccidents(x) -> BadWeather(x))", "score": 0}
{"id": "eqasc_validation_231", "prediction": "all x.((BadWeather(x) & CarAccident(x)) -> BadWeatherCauses(x))", "score": 0}
{"id": "eqasc_validation_231", "prediction": "all x.((BadWeather(x) & CarAccident(x)) -> BadWeatherCauses(x,caraccidents))", "score": 0}
{"id": "eqasc_validation_232", "prediction": "all x.((BadWeather(x) & ImpairsSafeDriving(x)) -> ImpairsSafeDriving(x))", "score": 0}
{"id": "eqasc_validation_232", "prediction": "all x y.((BadWeather(x) & BadWeather(y)) -> ImpairsSafeDriving(x,y))", "score": 0}
{"id": "eqasc_validation_232", "prediction": "all x.(BadWeatherImpairsSafeDriving(x) -> ImpairsSafeDriving(x))", "score": 0}
{"id": "eqasc_validation_232", "prediction": "all x.((BadWeather(x) & ImpairedSafeDriving(x)) -> ImpairsSafeDriving(x))", "score": 0}
{"id": "eqasc_validation_232", "prediction": "all x.((BadWeather(x) & ImproperWeather(x)) -> ImpairsSafeDriving(x))", "score": 0}
{"id": "eqasc_validation_232", "prediction": "all x y.((BadWeather(x) & BadWeather(y)) -> ImpairsSafeDriving(x))", "score": 0}
{"id": "eqasc_validation_232", "prediction": "all x.(BadWeather(x) -> ImpairsSafeDriving(x))", "score": 0}
{"id": "eqasc_validation_232", "prediction": "all x.((BadWeather(x) & ImprovesSafeDriving(x)) -> ImpairsSafeDriving(x))", "score": 0}
{"id": "eqasc_validation_232", "prediction": "all x y z.((BadWeather(x) & BadWeather(y) & SafeDriving(z)) -> ImpairsSafeDriving(x,y,z))", "score": 0}
{"id": "eqasc_validation_232", "prediction": "all x y z.((BadWeather(x) & BadWeather(y) & SafeDriving(z)) -> Impairs(x,y,z))", "score": 0}
{"id": "eqasc_validation_232", "prediction": "all x.((BadWeather(x) & ImpairsSafeDriving(x)) -> ImprovesSafeDriving(x))", "score": 0}
{"id": "eqasc_validation_232", "prediction": "all x.((BadWeather(x) & ImperfectsSafeDriving(x)) -> ImpairsSafeDriving(x))", "score": 0}
{"id": "eqasc_validation_232", "prediction": "all x.((BadWeather(x) & ImposesSafeDriving(x)) -> ImpairsSafeDriving(x))", "score": 0}
{"id": "eqasc_validation_232", "prediction": "all x y.((BadWeather(x) & SafeDriving(y)) -> ImpairsSafeDriving(x,y))", "score": 0}
{"id": "eqasc_validation_232", "prediction": "all x.(BadWeatherImprovesSafeDriving(x) -> ImpairsSafeDriving(x))", "score": 0}
{"id": "eqasc_validation_232", "prediction": "all x.(BadWeatherImpairsSafeDriving(x) -> ImprovesSafeDriving(x))", "score": 0}
{"id": "eqasc_validation_233", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPpores(x) & InNuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_233", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPpores(x) & NuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_233", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPoors(x) & InNuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_233", "prediction": "all x y.((RNA(x) & SmallMolecule(x) & NuclearMembrane(y)) -> CanSqueezeThroughPpores(x,y))", "score": 0}
{"id": "eqasc_validation_233", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPropores(x) & InNuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_233", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughPpores(x) & NuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_233", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughPpores(x) & InNuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_233", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPores(x) & InNuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_233", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPropores(x) & NuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_233", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPoors(x) & NuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_233", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPporesInNuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_233", "prediction": "all x y.((RNA(x) & SmallMolecule(x) & NuclearMembrane(y)) -> SqueezesThroughPpores(x,y))", "score": 0}
{"id": "eqasc_validation_233", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughPoors(x) & NuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_233", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPpores(x)))", "score": 0}
{"id": "eqasc_validation_233", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughPropores(x) & NuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_233", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPropores(x)))", "score": 0}
{"id": "eqasc_validation_234", "prediction": "all x y.((Protein(x) & DNA(y) & RNA(y)) -> (Polymer(x,y) & SmallChemicallyRelatedMolecule(x)))", "score": 0}
{"id": "eqasc_validation_234", "prediction": "all x y z.((Protein(x) & DNA(y) & RNA(z)) -> (Polymer(x,y,z) & SmallChemicallyRelatedMolecule(x)))", "score": 0}
{"id": "eqasc_validation_234", "prediction": "all x.((DNA(x) | RNA(x)) -> PolymerOfSmallChemicalRelatedMolecules(x))", "score": 0}
{"id": "eqasc_validation_234", "prediction": "all x.((DNA(x) | RNA(x)) -> (Polymer(x) & SmallChemicallyRelatedMolecule(x)))", "score": 0}
{"id": "eqasc_validation_234", "prediction": "all x.((DNA(x) | RNA(x)) -> PolymerOfSmallChemicallyRelatedMolecules(x))", "score": 0}
{"id": "eqasc_validation_234", "prediction": "all x y.((Protein(x) & DNA(y) & RNA(y)) -> (Polymer(x,y) & SmallChemicallyRelatedMolecules(x)))", "score": 0}
{"id": "eqasc_validation_234", "prediction": "all x y.((Protein(x) & DNA(y) & RNA(y)) -> Polymer(x,y))", "score": 0}
{"id": "eqasc_validation_234", "prediction": "all x y z.((Protein(x) & DNA(y) & RNA(z)) -> (Polymer(x,z) & SmallChemicallyRelatedMolecule(x)))", "score": 0}
{"id": "eqasc_validation_234", "prediction": "all x.((DNA(x) | RNA(x)) -> (Polymer(x) & SmallChemicallyRelatedMolecules(x)))", "score": 0}
{"id": "eqasc_validation_234", "prediction": "all x y z.((Protein(x) & DNA(y) & RNA(z)) -> (Polymer(x,y) & SmallChemicallyRelatedMolecule(x)))", "score": 0}
{"id": "eqasc_validation_234", "prediction": "all x y z.((Protein(x) & DNA(y) & RNA(z)) -> (Polymer(x,y,z) & SmallChemicalRelatedMolecule(x)))", "score": 0}
{"id": "eqasc_validation_234", "prediction": "all x y.((Protein(x) & DNA(y) & RNA(y)) -> (Polymer(x,y) & SmallChemicalRelatedMolecule(x)))", "score": 0}
{"id": "eqasc_validation_234", "prediction": "all x y z.((Protein(x) & DNA(y) & RNA(z)) -> (Polymer(x,y,z) & SmallChemicallyRelatedMolecules(x)))", "score": 0}
{"id": "eqasc_validation_234", "prediction": "all x.((DNA(x) | RNA(x)) -> Polymer(x))", "score": 0}
{"id": "eqasc_validation_234", "prediction": "all x.((DNA(x) | RNA(x)) -> (PolymerOfSmallChemicallyRelatedMolecules(x)))", "score": 0}
{"id": "eqasc_validation_234", "prediction": "all x y.((Protein(x) & Polymer(y)) -> (DNA(x) | RNA(x)) & SmallChemicallyRelatedMolecule(y)))", "score": -1}
{"id": "eqasc_validation_235", "prediction": "all x y.((Polymer(x) & SmallChemicallyRelatedMolecule(y)) -> (SqueezesThroughPpores(x,y) & InNuclearMembrane(x,y)))", "score": 0}
{"id": "eqasc_validation_235", "prediction": "all x y.((Polymer(x) & SmallChemicallyRelatedMolecule(y)) -> (SqueezesThroughPpores(x,y) & InNuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_235", "prediction": "all x y z.((Polymer(x) & SmallChemicallyRelatedMolecule(y) & NuclearMembrane(z)) -> (SqueezesThroughPpores(x,y,z) & InNuclearMembrane(x,z)))", "score": 0}
{"id": "eqasc_validation_235", "prediction": "all x y z.((Polymer(x) & SmallChemicallyRelatedMolecule(y) & NuclearMembrane(z) & SmallChemicallyRelatedMolecule(y)) -> CanSqueezeThroughPpores(x,y,z))", "score": 0}
{"id": "eqasc_validation_235", "prediction": "all x y z.((Polymer(x) & SmallChemicallyRelatedMolecule(y) & NuclearMembrane(z) & SmallChemicallyRelatedMolecule(x,y)) -> CanSqueezeThroughPpores(x,z))", "score": 0}
{"id": "eqasc_validation_235", "prediction": "all x y z.((Polymer(x) & SmallChemicallyRelatedMolecule(y) & NuclearMembrane(z) & SmallChemicallyRelatedMolecule(z)) -> CanSqueezeThroughPorouses(x,y,z))", "score": 0}
{"id": "eqasc_validation_235", "prediction": "all x y z.((Polymer(x) & SmallChemicallyRelatedMolecule(y) & NuclearMembrane(z) & SmallChemicallyRelatedMolecule(y)) -> CanSqueezeThroughPorouses(x,y,z))", "score": 0}
{"id": "eqasc_validation_235", "prediction": "all x y z.((Polymer(x) & SmallChemicallyRelatedMolecule(y) & NuclearMembrane(z) & SmallChemicallyRelatedMolecule(x,y)) -> CanSqueezeThroughPorouses(x,z))", "score": 0}
{"id": "eqasc_validation_235", "prediction": "all x y z.((Polymer(x) & SmallChemicallyRelatedMolecule(y) & NuclearMembrane(z) & SmallChemicallyRelatedMolecule(x,y)) -> (SqueezesThroughPpores(x,z) & InNuclearMembrane(x,z)))", "score": 0}
{"id": "eqasc_validation_235", "prediction": "all x y z.((Polymer(x) & SmallChemicallyRelatedMolecule(y) & NuclearMembrane(z)) -> (SqueezesThroughPpores(x,y,z) & InNuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_235", "prediction": "all x y z.((Polymer(x) & SmallChemicallyRelatedMolecule(y) & NuclearMembrane(z) & SmallChemicallyRelatedMolecule(y)) -> CanSqueezeThroughPpores(x,z))", "score": 0}
{"id": "eqasc_validation_235", "prediction": "all x y z.((Polymer(x) & SmallChemicallyRelatedMolecule(y) & NuclearMembrane(z)) -> (SqueezesThroughPpores(x,y,z) & InNuclearMembrane(x,y,z)))", "score": 0}
{"id": "eqasc_validation_235", "prediction": "all x y z.((Polymer(x) & SmallChemicallyRelatedMolecule(y) & NuclearMembrane(z) & SmallChemicallyRelatedMolecule(y)) -> CanSqueezeThroughPorouses(x,z))", "score": 0}
{"id": "eqasc_validation_235", "prediction": "all x y z.((Polymer(x) & SmallChemicallyRelatedMolecule(y) & NuclearMembrane(z) & SmallChemicallyRelatedMolecule(x,y,z)) -> CanSqueezeThroughPpores(x,y,z))", "score": 0}
{"id": "eqasc_validation_235", "prediction": "all x y z.((Polymer(x) & SmallChemicallyRelatedMolecule(y) & NuclearMembrane(z)) -> (SqueezesThroughPpores(x,y,z) & InNuclearMembrane(x,y)))", "score": 0}
{"id": "eqasc_validation_235", "prediction": "all x y z.((Polymer(x) & SmallChemicallyRelatedMolecule(y) & NuclearMembrane(z) & SmallChemicallyRelatedMolecule(x,y,z)) -> CanSqueezeThroughPorouses(x,y,z))", "score": 0}
{"id": "eqasc_validation_236", "prediction": "all x.((Cell(x) & NuclearMembrane(x)) -> Eukaryotic(x))", "score": 0}
{"id": "eqasc_validation_236", "prediction": "all x.((Cell(x) & HasNuclearMembrane(x)) -> Eukaryotic(x))", "score": 0}
{"id": "eqasc_validation_236", "prediction": "all x y.((Cell(x) & NuclearMembrane(y) & Has(x,y)) -> Eukaryotic(x))", "score": 0}
{"id": "eqasc_validation_236", "prediction": "all x y.((Cell(x) & NuclearMembrane(x) & Has(x,y)) -> Eukaryotic(x))", "score": 0}
{"id": "eqasc_validation_236", "prediction": "all x y.((Cell(x) & NuclearMembrane(y)) -> Eukaryotic(x))", "score": 0}
{"id": "eqasc_validation_236", "prediction": "all x y z.((Cell(x) & NuclearMembrane(y) & Cell(z) & Has(x,y)) -> Eukaryotic(x))", "score": 0}
{"id": "eqasc_validation_236", "prediction": "all x.((Cell(x) & AtomicMembrane(x)) -> Eukaryotic(x))", "score": 0}
{"id": "eqasc_validation_236", "prediction": "all x y z.((Cell(x) & NuclearMembrane(y) & Cell(z) & Has(x,y) & NuclearMembrane(z)) -> Eukaryotic(x))", "score": 0}
{"id": "eqasc_validation_236", "prediction": "all x y z.((Cell(x) & NuclearMembrane(y) & Cell(z) & Has(x,y) & Has(x,z)) -> Eukaryotic(x))", "score": 0}
{"id": "eqasc_validation_236", "prediction": "all x y z.((Cell(x) & NuclearMembrane(y) & Cell(z) & Has(x,y,z)) -> Eukaryotic(x))", "score": 0}
{"id": "eqasc_validation_236", "prediction": "all x y.((Cell(x) & NuclearMembrane(x)) -> Eukaryotic(y))", "score": 0}
{"id": "eqasc_validation_236", "prediction": "all x y.((Cell(x) & NuclearMembrane(x) & Has(x,y)) -> Eukaryotic(y))", "score": 0}
{"id": "eqasc_validation_236", "prediction": "all x.((Cell(x) & NuclearMembrane(x)) -> EukaryoticCell(x))", "score": 0}
{"id": "eqasc_validation_237", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPpores(x) & InEukaryoticCells(x)))", "score": 0}
{"id": "eqasc_validation_237", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughPpores(x) & InEukaryoticCells(x)))", "score": 0}
{"id": "eqasc_validation_237", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPores(x) & InEukaryoticCells(x)))", "score": 0}
{"id": "eqasc_validation_237", "prediction": "all x y.((RNA(x) & EukaryoticCell(y)) -> (SmallMolecule(x) & CanSqueezeThroughPpores(x,y)))", "score": 0}
{"id": "eqasc_validation_237", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughPores(x) & InEukaryoticCells(x)))", "score": 0}
{"id": "eqasc_validation_237", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPporesInEukaryoticCells(x)))", "score": 0}
{"id": "eqasc_validation_237", "prediction": "all x y.((RNA(x) & EukaryoticCell(y)) -> (SmallMolecule(x) & SqueezesThroughPpores(x,y)))", "score": 0}
{"id": "eqasc_validation_237", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPoors(x) & InEukaryoticCells(x)))", "score": 0}
{"id": "eqasc_validation_237", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughPporesInEukaryoticCells(x)))", "score": 0}
{"id": "eqasc_validation_237", "prediction": "all x y.((RNA(x) & SmallMolecule(x) & EukaryoticCell(y)) -> CanSqueezeThroughPpores(x,y))", "score": 0}
{"id": "eqasc_validation_237", "prediction": "all x y z.((RNA(x) & SmallMolecule(y) & EukaryoticCell(z)) -> (SqueezesThroughPpores(x,y,z) & InEukaryoticCell(x,z)))", "score": 0}
{"id": "eqasc_validation_237", "prediction": "all x y.((RNA(x) & SmallMolecule(x) & EukaryoticCell(y)) -> (SqueezesThroughPpores(x,y) & InEukaryoticCells(x,y)))", "score": 0}
{"id": "eqasc_validation_237", "prediction": "all x y.((RNA(x) & SmallMolecule(x) & EukaryoticCell(y)) -> SqueezesThroughPpores(x,y))", "score": 0}
{"id": "eqasc_validation_237", "prediction": "all x y z.((RNA(x) & SmallMolecule(x) & EukaryoticCell(y) & EukaryoticCell(z)) -> CanSqueezeThroughPpores(x,y,z))", "score": 0}
{"id": "eqasc_validation_237", "prediction": "all x y.((RNA(x) & SmallMolecule(x) & EukaryoticCell(y)) -> (SqueezesThroughPpores(x,y) & InEukaryoticCell(x,y)))", "score": 0}
{"id": "eqasc_validation_238", "prediction": "all x.(RNA(x) -> (RibonucleicAcid(x) & LikeDNA(x) & NucleicAcid(x)))", "score": 0}
{"id": "eqasc_validation_238", "prediction": "all x.(RNA(x) -> (RribonucleicAcid(x) & LikeDNA(x) & NucleicAcid(x)))", "score": 0}
{"id": "eqasc_validation_238", "prediction": "all x.(RibonucleicAcid(x) -> (DNA(x) & NucleicAcid(x)))", "score": 0}
{"id": "eqasc_validation_238", "prediction": "all x.(RNA(x) -> (RibonucleicAcid(x) & NucleicAcid(x)))", "score": 0}
{"id": "eqasc_validation_238", "prediction": "all x.(RNA(x) -> (RribonucleicAcid(x) & NucleicAcid(x)))", "score": 0}
{"id": "eqasc_validation_238", "prediction": "all x.(RNA(x) -> (RibonucleicAcid(x) & SimilarToDNA(x) & NucleicAcid(x)))", "score": 0}
{"id": "eqasc_validation_238", "prediction": "all x.(RribonucleicAcid(x) -> (DNA(x) & NucleicAcid(x)))", "score": 0}
{"id": "eqasc_validation_238", "prediction": "all x.(RibonucleicAcid(x) -> (DNA(x) | NucleicAcid(x)))", "score": 0}
{"id": "eqasc_validation_238", "prediction": "all x.((RNA(x) & RibonucleicAcid(x)) -> NucleicAcid(x))", "score": 0}
{"id": "eqasc_validation_238", "prediction": "all x y.((RNA(x) & DNA(y)) -> (RibonucleicAcid(x) & NucleicAcid(x)))", "score": 0}
{"id": "eqasc_validation_238", "prediction": "all x.(RNA(x) -> (RribonucleicAcid(x) & SimilarToDNA(x) & NucleicAcid(x)))", "score": 0}
{"id": "eqasc_validation_238", "prediction": "all x y.((RNA(x) & DNA(y)) -> (RribonucleicAcid(x) & NucleicAcid(x)))", "score": 0}
{"id": "eqasc_validation_238", "prediction": "all x.(RribonucleicAcid(x) -> (DNA(x) | NucleicAcid(x)))", "score": 0}
{"id": "eqasc_validation_238", "prediction": "all x y.((RNA(x) & DNA(y)) -> RibonucleicAcid(x))", "score": 0}
{"id": "eqasc_validation_238", "prediction": "all x y.((RNA(x) & DNA(y)) -> (RibonucleicAcid(x) & NucleicAcid(y)))", "score": 0}
{"id": "eqasc_validation_238", "prediction": "all x y.((RNA(x) & DNA(y)) -> (RribonucleicAcid(x) & NucleicAcid(y)))", "score": 0}
{"id": "eqasc_validation_239", "prediction": "all x.(RibonucleicAcid(x) -> (SmallMolecule(x) & CanSqueezeThroughPpores(x) & InNuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_239", "prediction": "all x.(RibonucleicAcid(x) -> (SmallMolecule(x) & CanSqueezeThroughPpores(x) & NuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_239", "prediction": "all x.(RibonucleicAcid(x) -> (SmallMolecule(x) & CanSqueezeThroughPropores(x) & InNuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_239", "prediction": "all x.(RibonucleicAcid(x) -> (SmallMolecule(x) & SqueezesThroughPpores(x) & NuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_239", "prediction": "all x.(RibonucleicAcid(x) -> (SmallMolecule(x) & CanSqueezeThroughPores(x) & InNuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_239", "prediction": "all x.(RibonucleicAcid(x) -> (SmallMolecule(x) & CanSqueezeThroughPoors(x) & InNuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_239", "prediction": "all x.(RibonucleicAcid(x) -> (SmallMolecule(x) & CanSqueezeThroughPropores(x) & NuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_239", "prediction": "all x.(RibonucleicAcid(x) -> (SmallMolecule(x) & SqueezesThroughPpores(x) & InNuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_239", "prediction": "all x.(RibonucleicAcid(x) -> (SmallMolecule(x) & CanSqueezeThroughPpores(x)))", "score": 0}
{"id": "eqasc_validation_239", "prediction": "all x.(RibonucleicAcid(x) -> (SmallMolecule(x) & CanSqueezeThroughPoors(x) & NuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_239", "prediction": "all x.(RibonucleicAcid(x) -> (SmallMolecule(x) & CanSqueezeThroughPropores(x)))", "score": 0}
{"id": "eqasc_validation_239", "prediction": "all x.(RibonucleicAcid(x) -> (SmallMolecule(x) & SqueezesThroughPropores(x) & NuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_239", "prediction": "all x.(RibonucleicAcid(x) -> (SmallMolecule(x) & CanSqueezeThroughPores(x) & NuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_239", "prediction": "all x.(RibonucleicAcid(x) -> (SmallMolecule(x) & SqueezesThroughPoors(x) & NuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_239", "prediction": "all x.(RibonucleicAcid(x) -> (SmallMolecule(x) & SqueezesThroughPores(x) & NuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_239", "prediction": "all x.(RibonucleicAcid(x) -> (SmallMolecule(x) & SqueezesThroughPpores(x)))", "score": 0}
{"id": "eqasc_validation_240", "prediction": "all x y.((NuclearMembrane(x) & Nucleus(y)) -> KeepsDNAInside(x,y))", "score": 0}
{"id": "eqasc_validation_240", "prediction": "all x y z.((NuclearMembrane(x) & DNA(y) & Nucleus(z)) -> KeepsInside(x,y,z))", "score": 0}
{"id": "eqasc_validation_240", "prediction": "all x y z.((NuclearMembrane(x) & Nucleus(y) & DNA(z)) -> KeepsInside(x,y,z))", "score": 0}
{"id": "eqasc_validation_240", "prediction": "all x y.((NuclearMembrane(x) & NuclearMembrane(y)) -> KeepsDNAInside(x,y))", "score": 0}
{"id": "eqasc_validation_240", "prediction": "all x y.((NuclearMembrane(x) & NuclearMembrane(y)) -> KeepsDNAInsideNucleus(x,y))", "score": 0}
{"id": "eqasc_validation_240", "prediction": "all x.((NuclearMembrane(x) & KeepsDNAInsideNucleus(x)) -> KeepsDNAInsideNucleus(x))", "score": 0}
{"id": "eqasc_validation_240", "prediction": "all x.(NuclearMembrane(x) -> KeepsDNAInsideNucleus(x))", "score": 0}
{"id": "eqasc_validation_240", "prediction": "all x y.((NuclearMembrane(x) & DNA(y)) -> KeepsInside(x,y))", "score": 0}
{"id": "eqasc_validation_240", "prediction": "all x y.((NuclearMembrane(x) & Nucleus(y) & KeepsDNAInside(x,y)) -> KeepsDNAInside(x,y))", "score": 0}
{"id": "eqasc_validation_240", "prediction": "all x y z.((NuclearMembrane(x) & NuclearMembrane(y) & Nucleus(z)) -> KeepsDNAInside(x,y,z))", "score": 0}
{"id": "eqasc_validation_240", "prediction": "all x y.((NuclearMembrane(x) & Nucleus(y)) -> KeepsDDNAInside(x,y))", "score": 0}
{"id": "eqasc_validation_240", "prediction": "all x y z.((NuclearMembrane(x) & Nucleus(y) & DNAInside(z)) -> KeepsInside(x,y,z))", "score": 0}
{"id": "eqasc_validation_240", "prediction": "all x.((NuclearMembrane(x) & KeepsDNAInNucleus(x)) -> KeepsDNAInNucleus(x))", "score": 0}
{"id": "eqasc_validation_240", "prediction": "all x y z.((NuclearMembrane(x) & DNA(y) & Nucleus(z)) -> KeepsInsideOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_240", "prediction": "all x y z.((NuclearMembrane(x) & DNA(y) & Nucleus(z)) -> KeepsItInside(x,y,z))", "score": 0}
{"id": "eqasc_validation_240", "prediction": "all x y z.((NuclearMembrane(x) & Nucleus(y) & DNA(z)) -> KeepsInside(x,y))", "score": 0}
{"id": "eqasc_validation_241", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPoors(x) & HoldsDNA(x)))", "score": 0}
{"id": "eqasc_validation_241", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPpores(x) & HoldsDNA(x)))", "score": 0}
{"id": "eqasc_validation_241", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughPoors(x) & HoldsDNA(x)))", "score": 0}
{"id": "eqasc_validation_241", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPropores(x) & HoldsDNA(x)))", "score": 0}
{"id": "eqasc_validation_241", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughPpores(x) & HoldsDNA(x)))", "score": 0}
{"id": "eqasc_validation_241", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPossures(x) & HoldsDNA(x)))", "score": 0}
{"id": "eqasc_validation_241", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPoses(x) & HoldsDNA(x)))", "score": 0}
{"id": "eqasc_validation_241", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPoors(x) & NucleusHoldsDNA(x)))", "score": 0}
{"id": "eqasc_validation_241", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughPoors(x) & NucleusHoldsDNA(x)))", "score": 0}
{"id": "eqasc_validation_241", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughPossures(x) & HoldsDNA(x)))", "score": 0}
{"id": "eqasc_validation_241", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPossories(x) & HoldsDNA(x)))", "score": 0}
{"id": "eqasc_validation_241", "prediction": "all x y z.((RNA(x) & SmallMolecule(x) & Nucleus(y) & Nucleus(z)) -> (SqueezesThroughPoors(x,y,z) & HoldsDNA(x)))", "score": 0}
{"id": "eqasc_validation_241", "prediction": "all x y z.((RNA(x) & SmallMolecule(x) & Nucleus(y) & Nucleus(z)) -> (SqueezesThroughPoses(x,y,z) & HoldsDNA(x)))", "score": 0}
{"id": "eqasc_validation_241", "prediction": "all x y z.((RNA(x) & SmallMolecule(x) & Nucleus(y) & Nucleus(z)) -> (SqueezesThroughPpores(x,y,z) & HoldsDNA(x)))", "score": 0}
{"id": "eqasc_validation_241", "prediction": "all x y z.((RNA(x) & SmallMolecule(x) & Nucleus(y) & Nucleus(z)) -> (SqueezesThroughPossures(x,y,z) & HoldsDNA(x)))", "score": 0}
{"id": "eqasc_validation_241", "prediction": "all x y z.((RNA(x) & SmallMolecule(x) & Nucleus(y) & Nucleus(z)) -> (SqueezesThroughPpores(x,y) & HoldsDNA(x,z)))", "score": 0}
{"id": "eqasc_validation_242", "prediction": "all x.(NuclearMembrane(x) -> (Thickened(x) & Rounded(x) & MildlyIrregular(x)))", "score": 0}
{"id": "eqasc_validation_242", "prediction": "all x.(NuclearMembrane(x) -> (Thickened(x) & Rounded(x) & -Irregular(x)))", "score": 0}
{"id": "eqasc_validation_242", "prediction": "all x.(NuclearMembrane(x) -> (Thickened(x) & Rounded(x) & EtwasIrregular(x)))", "score": 0}
{"id": "eqasc_validation_242", "prediction": "all x.(NuclearMembrane(x) -> (Thickened(x) & Rounded(x) & Irregular(x)))", "score": 0}
{"id": "eqasc_validation_242", "prediction": "all x.(NuclearMembrane(x) -> (Thickened(x) & Rounded(x) & OccasionallyIrregular(x)))", "score": 0}
{"id": "eqasc_validation_242", "prediction": "all x.(NuclearMembrane(x) -> (Thickened(x) & Rounded(x) & UnusuallyIrregular(x)))", "score": 0}
{"id": "eqasc_validation_242", "prediction": "all x.(NuclearMembrane(x) -> (Thickened(x) & Round(x) & MildlyIrregular(x)))", "score": 0}
{"id": "eqasc_validation_242", "prediction": "all x.(NuclearMembrane(x) -> (Thickened(x) & Rounded(x) & LightlyIrregular(x)))", "score": 0}
{"id": "eqasc_validation_242", "prediction": "all x.(NuclearMembrane(x) -> (Thickened(x) & Rounded(x) & -Regular(x)))", "score": 0}
{"id": "eqasc_validation_242", "prediction": "all x.(NuclearMembrane(x) -> (Thickened(x) & Rounded(x) & PossiblyIrregular(x)))", "score": 0}
{"id": "eqasc_validation_242", "prediction": "all x.(NuclearMembrane(x) -> (Thickened(x) & Round(x) & EtwasIrregular(x)))", "score": 0}
{"id": "eqasc_validation_242", "prediction": "all x.(NuclearMembrane(x) -> (Thickened(x) & Rounded(x) & SlightlyIrregular(x)))", "score": 0}
{"id": "eqasc_validation_242", "prediction": "all x.(NuclearMembrane(x) -> (Thickened(x) & Rounded(x) & UnusuallyRegular(x)))", "score": 0}
{"id": "eqasc_validation_242", "prediction": "all x.(NuclearMembrane(x) -> (Thickened(x) & Round(x) & -Irregular(x)))", "score": 0}
{"id": "eqasc_validation_242", "prediction": "all x.(NuclearMembrane(x) -> (Thickened(x) & Round(x) & Irregular(x)))", "score": 0}
{"id": "eqasc_validation_242", "prediction": "all x.(NuclearMembrane(x) -> (Thickened(x) & Rounded(x) & EtwalyIrregular(x)))", "score": 0}
{"id": "eqasc_validation_243", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughThickenedRoundedAndIrregularPpores(x)))", "score": 0}
{"id": "eqasc_validation_243", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughThickenedRoundedAndIrregularPpores(x)))", "score": 0}
{"id": "eqasc_validation_243", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughThickenedRoundedAndIrregularPorouses(x)))", "score": 0}
{"id": "eqasc_validation_243", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughThickenedRoundedAndIrregularPorouses(x)))", "score": 0}
{"id": "eqasc_validation_243", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughThickenedRoundedAndSlightlyIrregularPpores(x)))", "score": 0}
{"id": "eqasc_validation_243", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughThickenedRoundedAndSlightlyIrregularPpores(x)))", "score": 0}
{"id": "eqasc_validation_243", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughThickenedRoundAndIrregularPpores(x)))", "score": 0}
{"id": "eqasc_validation_243", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughThickenedRoundedAndIrregularPoors(x)))", "score": 0}
{"id": "eqasc_validation_243", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezeThroughThickenedRoundedAndIrregularPpores(x)))", "score": 0}
{"id": "eqasc_validation_243", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughThickenedRoundedAndUnderlyingPpores(x)))", "score": 0}
{"id": "eqasc_validation_243", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughThickenedRoundedAndIrregularPoors(x)))", "score": 0}
{"id": "eqasc_validation_243", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughThickenedRoundAndIrregularPpores(x)))", "score": 0}
{"id": "eqasc_validation_243", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughThickenedRoundedAndIrregularPepties(x)))", "score": 0}
{"id": "eqasc_validation_243", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughThickenedRoundedAndIrregularPepties(x)))", "score": 0}
{"id": "eqasc_validation_243", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughThickenedRoundedAndIrregularPorous(x)))", "score": 0}
{"id": "eqasc_validation_243", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughThickenedRoundedAndSlightlyIrregularPorouses(x)))", "score": 0}
{"id": "eqasc_validation_244", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPpores(x) & EukaryoticCell(x)))", "score": 0}
{"id": "eqasc_validation_244", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughPpores(x) & EukaryoticCell(x)))", "score": 0}
{"id": "eqasc_validation_244", "prediction": "all x y.((RNA(x) & EukaryoticCell(y)) -> (SmallMolecule(x) & CanSqueezeThroughPpores(x,y)))", "score": 0}
{"id": "eqasc_validation_244", "prediction": "all x y.((RNA(x) & EukaryoticCell(y)) -> (SmallMolecule(x) & SqueezesThroughPpores(x,y)))", "score": 0}
{"id": "eqasc_validation_244", "prediction": "all x y.((RNA(x) & SmallMolecule(x) & EukaryoticCell(y)) -> CanSqueezeThroughPpores(x,y))", "score": 0}
{"id": "eqasc_validation_244", "prediction": "all x y.((RNA(x) & SmallMolecule(x) & EukaryoticCell(y)) -> SqueezesThroughPpores(x,y))", "score": 0}
{"id": "eqasc_validation_244", "prediction": "all x y z.((RNA(x) & SmallMolecule(x) & EukaryoticCell(y) & EukaryoticCell(z)) -> CanSqueezeThroughPpores(x,y,z))", "score": 0}
{"id": "eqasc_validation_244", "prediction": "all x y.((RNA(x) & SmallMolecule(x) & EukaryoticCell(y)) -> (SqueezesThroughPpores(x,y) & SqueezesThroughPpores(x,y)))", "score": 0}
{"id": "eqasc_validation_244", "prediction": "all x y z.((RNA(x) & SmallMolecule(x) & EukaryoticCell(y) & Pores(z)) -> CanSqueezeThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_244", "prediction": "all x y.((RNA(x) & EukaryoticCell(y)) -> (SmallMolecule(x) & CanSqueezeThroughPores(x,y)))", "score": 0}
{"id": "eqasc_validation_244", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughPores(x) & EukaryoticCell(x)))", "score": 0}
{"id": "eqasc_validation_244", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPores(x) & EukaryoticCell(x)))", "score": 0}
{"id": "eqasc_validation_244", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPporesOfEukaryoticCell(x)))", "score": 0}
{"id": "eqasc_validation_244", "prediction": "all x y.((RNA(x) & EukaryoticCell(y)) -> (SmallMolecule(x,y) & CanSqueezeThroughPpores(x,y)))", "score": 0}
{"id": "eqasc_validation_244", "prediction": "all x y z.((RNA(x) & SmallMolecule(x) & EukaryoticCell(y) & EukaryoticCell(z)) -> SqueezesThroughPpores(x,y,z))", "score": 0}
{"id": "eqasc_validation_244", "prediction": "all x y.((RNA(x) & EukaryoticCell(y)) -> (SmallMolecule(x) & CanSqueezeThroughPoors(x,y)))", "score": 0}
{"id": "eqasc_validation_245", "prediction": "all x y z.((PoisonousDart(x) & SeaAnemone(y) & SeaAnemone(z)) -> UsedForDefense(x,y,z))", "score": 0}
{"id": "eqasc_validation_245", "prediction": "all x y.((PoisonousDart(x) & SeaAnemone(y)) -> UsedForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_245", "prediction": "all x y z.((PoisonousDart(x) & SeaAnemone(y) & SeaAnemone(z)) -> UsedForDefenseBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_245", "prediction": "all x y.((PoisonousDart(x) & SeaAnemone(y)) -> UsedForDefenseBy(x,y))", "score": 0}
{"id": "eqasc_validation_245", "prediction": "all x.(PoisonousDart(x) -> UsedForDefenseBySeaAnemones(x))", "score": 0}
{"id": "eqasc_validation_245", "prediction": "all x y z.((PoisonousDart(x) & SeaAnemone(y) & SeaAnemone(z)) -> UsedForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_245", "prediction": "all x y z.((PoisonousDart(x) & SeaAnemone(y) & SeaAnemone(z)) -> (UsedForDefense(x,y) & UsedForDefense(x,z)))", "score": 0}
{"id": "eqasc_validation_245", "prediction": "all x y z.((PoisonousDart(x) & SeaAnemone(y) & SeaAnemone(z)) -> UsesForDefense(x,y,z))", "score": 0}
{"id": "eqasc_validation_246", "prediction": "all x.(Coral(x) -> EvolutionOfDefenses(x))", "score": 0}
{"id": "eqasc_validation_246", "prediction": "all x.(Coral(x) -> (EvolvedDefenses(x) & Protects(x)))", "score": 0}
{"id": "eqasc_validation_246", "prediction": "all x.(Coral(x) -> HasEvolvedDefenses(x))", "score": 0}
{"id": "eqasc_validation_246", "prediction": "all x.(Coral(x) -> DevelopedDefenses(x))", "score": 0}
{"id": "eqasc_validation_246", "prediction": "all x y.((Coral(x) & Coral(y)) -> EvolutionOfDefenses(x,y))", "score": 0}
{"id": "eqasc_validation_246", "prediction": "all x y.((Coral(x) & Coral(y)) -> HasEvolvedDefenses(x,y))", "score": 0}
{"id": "eqasc_validation_246", "prediction": "all x.(Coral(x) -> (EvolvedDefenses(x) & Protected(x)))", "score": 0}
{"id": "eqasc_validation_246", "prediction": "all x.(Coral(x) -> (EvolvedDefenses(x) & ToProtect(x)))", "score": 0}
{"id": "eqasc_validation_246", "prediction": "all x y.((Coral(x) & Coral(y)) -> DevelopedDefenses(x,y))", "score": 0}
{"id": "eqasc_validation_246", "prediction": "all x y.((Coral(x) & Coral(y)) -> EvolvedDefenses(x,y))", "score": 0}
{"id": "eqasc_validation_246", "prediction": "all x.(Coral(x) -> (EvolvedDefenses(x) & ProtectsCoral(x)))", "score": 0}
{"id": "eqasc_validation_246", "prediction": "all x y.((Coral(x) & Protects(x,y)) -> EvolutionOfDefenses(x,y))", "score": 0}
{"id": "eqasc_validation_246", "prediction": "all x.(Coral(x) -> (EvolvedDefenses(x) & ProtectsCorals(x)))", "score": 0}
{"id": "eqasc_validation_246", "prediction": "all x.(Coral(x) -> EvolvedDefenses(x))", "score": 0}
{"id": "eqasc_validation_247", "prediction": "all x y.((PoisonusDart(x) & SeaAnemone(y)) -> UsedForProtection(x,y))", "score": 0}
{"id": "eqasc_validation_247", "prediction": "all x y z.((PoisonusDart(x) & SeaAnemone(y) & SeaAnemone(z)) -> UsedForProtection(x,y,z))", "score": 0}
{"id": "eqasc_validation_247", "prediction": "all x.(PoisonusDart(x) -> UsedBySeaAnemonesForProtection(x))", "score": 0}
{"id": "eqasc_validation_247", "prediction": "all x.((Dart(x) & Poisonus(x)) -> UsedBySeaAnemonesForProtection(x))", "score": 0}
{"id": "eqasc_validation_247", "prediction": "all x.(PoisonusDart(x) -> UsedBySeaAnemones(x))", "score": 0}
{"id": "eqasc_validation_247", "prediction": "all x y.((Dart(x) & SeaAnemone(y)) -> UsedForProtection(x,y))", "score": 0}
{"id": "eqasc_validation_247", "prediction": "all x y z.((PoisonusDart(x) & SeaAnemone(y) & SeaAnemone(z)) -> UsesForProtection(x,y,z))", "score": 0}
{"id": "eqasc_validation_247", "prediction": "all x y.((PoisonusDart(x) & SeaAnemone(y)) -> UsesForProtection(x,y))", "score": 0}
{"id": "eqasc_validation_247", "prediction": "all x.((Dart(x) & Poisonus(x)) -> UsedBySeaAnemones(x))", "score": 0}
{"id": "eqasc_validation_247", "prediction": "all x y.((Dart(x) & SeaAnemone(y)) -> UsedBy(x,y))", "score": 0}
{"id": "eqasc_validation_247", "prediction": "all x y z.((PoisonusDart(x) & SeaAnemone(y) & SeaAnemone(z)) -> UsedForProtection(x,y))", "score": 0}
{"id": "eqasc_validation_248", "prediction": "all x y.((PoisonDartFrog(x) & Native(y)) -> SourceOfToxin(x,y))", "score": 0}
{"id": "eqasc_validation_248", "prediction": "all x y.((PoisonDartFrog(x) & Native(y)) -> ToxinSource(x,y))", "score": 0}
{"id": "eqasc_validation_248", "prediction": "all x.(PoisonDartFrog(x) -> SourceOfToxin(x))", "score": 0}
{"id": "eqasc_validation_248", "prediction": "all x.(PoisonDartFrog(x) -> (SourceOfToxin(x) & UsedByNativesOnPoisonDarts(x)))", "score": 0}
{"id": "eqasc_validation_248", "prediction": "all x y z.((PoisonDartFrog(x) & Native(y) & Toxin(z)) -> SourceOf(x,z))", "score": 0}
{"id": "eqasc_validation_248", "prediction": "all x y.((PoisonDartFrog(x) & Native(y)) -> (SourceOfToxin(x,y) & UsesOnPoisonDarts(x,y)))", "score": 0}
{"id": "eqasc_validation_248", "prediction": "all x y.((PoisonDartFrog(x) & Native(y) & UsesToxin(x,y)) -> SourceOfToxin(x,y))", "score": 0}
{"id": "eqasc_validation_248", "prediction": "all x y z.((PoisonDartFrog(x) & Native(y) & Toxin(z)) -> SourceOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_248", "prediction": "all x y.((PoisonDartFrog(x) & Native(y)) -> (SourceOfToxin(x,y) & UsesOnPoisonDart(x,y)))", "score": 0}
{"id": "eqasc_validation_248", "prediction": "all x y.((PoisonDartFrog(x) & Native(y)) -> (SourceOfToxin(x,y) & UsedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_248", "prediction": "all x y z.((PoisonDartFrog(x) & Native(y) & Toxin(z)) -> Source(x,y,z))", "score": 0}
{"id": "eqasc_validation_248", "prediction": "all x y z.((PoisonDartFrog(x) & Native(y) & Toxin(z)) -> SourceOfToxin(x,y,z))", "score": 0}
{"id": "eqasc_validation_248", "prediction": "all x y z.((PoisonDartFrog(x) & Toxin(y) & Native(z)) -> SourceOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_248", "prediction": "all x y z.((PoisonDartFrog(x) & Native(y) & Toxin(z)) -> Source(x,z))", "score": 0}
{"id": "eqasc_validation_248", "prediction": "all x y z.((PoisonDartFrog(x) & Native(y) & Toxin(z)) -> UsesOnPoisonDarts(x,y,z))", "score": 0}
{"id": "eqasc_validation_248", "prediction": "all x y.((PoisonDartFrog(x) & Native(y)) -> (SourceOfToxin(x,y) & UsedOnPoisonDarts(x,y)))", "score": 0}
{"id": "eqasc_validation_249", "prediction": "all x y.((Toxin(x) & SeaAnemone(y)) -> UsedForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_249", "prediction": "all x y z.((Toxin(x) & SeaAnemone(y) & SeaAnemone(z)) -> UsedForDefense(x,y,z))", "score": 0}
{"id": "eqasc_validation_249", "prediction": "all x y z.((Toxin(x) & SeaAnemone(y) & SeaAnemone(z)) -> UsedForDefenseBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_249", "prediction": "all x y.((Toxin(x) & SeaAnemone(y)) -> UsedForDefenseBy(x,y))", "score": 0}
{"id": "eqasc_validation_249", "prediction": "all x y z.((Toxin(x) & SeaAnemone(y) & SeaAnemone(z)) -> UsedForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_250", "prediction": "all x.(ReefInhabitant(x) -> Anemone(x))", "score": 0}
{"id": "eqasc_validation_250", "prediction": "exists x.(ReefInhabitant(x) & Anemone(x))", "score": 0}
{"id": "eqasc_validation_250", "prediction": "all x y.((ReefInhabitant(x) & Anemone(y)) -> Inhabits(x,y))", "score": 0}
{"id": "eqasc_validation_250", "prediction": "all x.(RiffInhabitant(x) -> Anemone(x))", "score": 0}
{"id": "eqasc_validation_250", "prediction": "(exists x.(ReefInhabitant(x) & Anemone(x)))", "score": 0}
{"id": "eqasc_validation_250", "prediction": "all x.((ReefInhabitant(x) & Anemone(x)) -> Inhabits(x))", "score": 0}
{"id": "eqasc_validation_250", "prediction": "(ReefInhabitant(x) & Anemone(x))", "score": 0}
{"id": "eqasc_validation_250", "prediction": "(ReefInhabitant(reef) & Anemone(reef))", "score": 0}
{"id": "eqasc_validation_250", "prediction": "(all x.(ReefInhabitant(x) -> Anemone(x)))", "score": 0}
{"id": "eqasc_validation_250", "prediction": "all x.((ReefInhabitant(x) & Anemone(x)) -> Inhabits(x,y))", "score": 0}
{"id": "eqasc_validation_250", "prediction": "all x y.((ReefInhabitant(x) & Anemone(y)) -> Inhabitant(x,y))", "score": 0}
{"id": "eqasc_validation_251", "prediction": "all x y.((SeaCreature(x) & Reef(y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_251", "prediction": "all x y z.((SeaCreature(x) & Reef(y) & Reef(z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_251", "prediction": "all x.(SeaCreature(x) -> LivesInReef(x))", "score": 0}
{"id": "eqasc_validation_251", "prediction": "all x.(SeaCreature(x) -> LivesInReefs(x))", "score": 0}
{"id": "eqasc_validation_251", "prediction": "all x y z w.((SeaCreature(x) & Reef(y) & Reef(z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_251", "prediction": "all x y z.((SeaCreature(x) & Reef(y) & Reef(z) & LivesIn(x,y,z)) -> SeaCreature(x))", "score": 0}
{"id": "eqasc_validation_251", "prediction": "all x y z w.((SeaCreature(x) & Reef(y) & Reef(z) & LivesIn(x,y,z)) -> SeaCreature(x))", "score": 0}
{"id": "eqasc_validation_251", "prediction": "all x y z.((SeaCreature(x) & Reef(y) & Reef(z)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_251", "prediction": "all x y.((SeaCreature(x) & Reef(y) & LivesIn(x,y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_251", "prediction": "all x y z.((SeaCream(x) & Reef(y) & Reef(z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_251", "prediction": "all x y z.((SeaCreature(x) & Reef(y) & Reef(z)) -> LiveIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_251", "prediction": "all x y z.((SeaCreature(x) & Reef(y) & Reef(z) & LivesIn(x,y,z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_251", "prediction": "all x y z.((SeaCreature(x) & Reef(y) & SeaCreature(z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_251", "prediction": "all x.((SeaCreature(x) & Reef(y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_251", "prediction": "all x y.((SeaCream(x) & Reef(y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_251", "prediction": "all x y.((SeaCreature(x) & Reef(y)) -> LiveIn(x,y))", "score": 0}
{"id": "eqasc_validation_252", "prediction": "all x y.((VenomousCreature(x) & Poison(y)) -> UsesAsWaffen(x,y))", "score": 0}
{"id": "eqasc_validation_252", "prediction": "all x.(VenomousCreature(x) -> UsesPoisonAsWaffen(x))", "score": 0}
{"id": "eqasc_validation_252", "prediction": "all x.(VenomousCreature(x) -> (UsesPoisonAsWaffen(x) | UsesPoisonAsWaffen(x)))", "score": 0}
{"id": "eqasc_validation_252", "prediction": "all x.(VenomousCreature(x) -> (UsesPoison(x) & Weapon(x)))", "score": 0}
{"id": "eqasc_validation_252", "prediction": "all x.(VenomousCreature(x) -> (UsesPoisonAsWaffen(x)))", "score": 0}
{"id": "eqasc_validation_252", "prediction": "all x.(VenomousCreature(x) -> CanUsePoisonAsWaffen(x))", "score": 0}
{"id": "eqasc_validation_252", "prediction": "all x.(VenomousCreature(x) -> (UsesPoisonAsWaffen(x) & UsesPoisonAsWaffen(x)))", "score": 0}
{"id": "eqasc_validation_252", "prediction": "all x.(VenomousCreature(x) -> UsePoisonAsWaffen(x))", "score": 0}
{"id": "eqasc_validation_252", "prediction": "all x.(VenomousCreature(x) -> (UsesPoisonAsWaffe(x) | UsesPoisonAsWaffe(x)))", "score": 0}
{"id": "eqasc_validation_252", "prediction": "all x y.((VenomousCreature(x) & Poison(y)) -> CanUseAsWaffen(x,y))", "score": 0}
{"id": "eqasc_validation_252", "prediction": "all x.((VenomousCreature(x) & UsesPoisonAsWaffen(x)) -> UsesPoisonAsWaffen(x))", "score": 0}
{"id": "eqasc_validation_252", "prediction": "all x.(VenomousCreature(x) -> (UsesPoisonAsWaffe(x) & UsesPoisonAsWaffe(x)))", "score": 0}
{"id": "eqasc_validation_252", "prediction": "all x y.((VenomousCreature(x) & Poison(y)) -> UsesAsWaffe(x,y))", "score": 0}
{"id": "eqasc_validation_252", "prediction": "all x.((VenomousCreature(x) & UsesPoisonAsWaffen(x)) -> UsesPoisonAsWaffe(x))", "score": 0}
{"id": "eqasc_validation_252", "prediction": "all x.(VenomousCreature(x) -> (UsesPoisonAsWaffen(x) & UsesPoisonAsWaffe(x)))", "score": 0}
{"id": "eqasc_validation_252", "prediction": "all x.((VenomousCreature(x) & UsePoisonAsWaffen(x)) -> UsePoisonAsWaffen(x))", "score": 0}
{"id": "eqasc_validation_253", "prediction": "all x.(SeaAnemone(x) -> Venomous(x))", "score": 0}
{"id": "eqasc_validation_253", "prediction": "all x.(SeaAnemone(x) -> (Venomous(x) & Venomous(x)))", "score": 0}
{"id": "eqasc_validation_253", "prediction": "all x y.((SeaAnemone(x) & SeaAnemone(y)) -> (Venomous(x) & Venomous(y)))", "score": 0}
{"id": "eqasc_validation_253", "prediction": "all x.(SeaAnemone(x) -> (Venomous(x) & Venomous(x) & Venomous(x)))", "score": 0}
{"id": "eqasc_validation_253", "prediction": "all x.((SeaAnemone(x) & Venomous(x)) -> Venomous(x))", "score": 0}
{"id": "eqasc_validation_253", "prediction": "all x.(SeaAnemone(x) -> (Venomous(x) & Venomous(x) & SeaAnemone(x)))", "score": 0}
{"id": "eqasc_validation_253", "prediction": "all x y.((SeaAnemone(x) & SeaAnemone(y)) -> (Venomous(x) | Venomous(y)))", "score": 0}
{"id": "eqasc_validation_253", "prediction": "all x.(SeaAnemone(x) -> (Venomous(x) | Venomous(x)))", "score": 0}
{"id": "eqasc_validation_253", "prediction": "all x y.((SeaAnemone(x) & SeaAnemone(y)) -> Venomous(x))", "score": 0}
{"id": "eqasc_validation_253", "prediction": "all x y.((SeaAnemone(x) & SeaAnemone(y)) -> (Venomous(y) & Venomous(y)))", "score": 0}
{"id": "eqasc_validation_253", "prediction": "all x y.((SeaAnemone(x) & Sea(y)) -> (Venomous(x) & Venomous(y)))", "score": 0}
{"id": "eqasc_validation_254", "prediction": "all x y.((SeaAnemone(x) & Coral(y)) -> CloseRelative(x,y))", "score": 0}
{"id": "eqasc_validation_254", "prediction": "all x y z.((SeaAnemone(x) & Coral(y) & Coral(z)) -> CloseRelative(x,y,z))", "score": 0}
{"id": "eqasc_validation_254", "prediction": "all x.(SeaAnemone(x) -> CloseRelativeOfCorals(x))", "score": 0}
{"id": "eqasc_validation_254", "prediction": "all x y.((SeaAnemone(x) & Coral(y)) -> CloseRelativeTo(x,y))", "score": 0}
{"id": "eqasc_validation_254", "prediction": "all x.(SeaAnemone(x) -> CloseRelativeToCorals(x))", "score": 0}
{"id": "eqasc_validation_254", "prediction": "all x y.((SeaAnemone(x) & Coral(y)) -> CloseRelativeOf(x,y))", "score": 0}
{"id": "eqasc_validation_254", "prediction": "all x.(SeaAnemone(x) -> (CoralRelative(x) & CloseRelative(x)))", "score": 0}
{"id": "eqasc_validation_254", "prediction": "all x y z.((SeaAnemone(x) & Coral(y) & Coral(z)) -> CloseRelativeTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_255", "prediction": "all x y z.((PoisonousDart(x) & Coral(y) & CloseRelative(z)) -> UsedForDefense(x,y,z))", "score": 0}
{"id": "eqasc_validation_255", "prediction": "all x y.((PoisonousDart(x) & CloseRelative(y)) -> UsedForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_255", "prediction": "all x.(PoisonousDart(x) -> (UsedForDefense(x) & CloseRelativesOfCoral(x)))", "score": 0}
{"id": "eqasc_validation_255", "prediction": "all x y z.((PoisonousDart(x) & CloseRelative(y) & Coral(z)) -> UsedForDefense(x,y,z))", "score": 0}
{"id": "eqasc_validation_255", "prediction": "all x y z.((PoisonousDart(x) & Coral(y) & CloseRelative(z)) -> UsedForDefenseBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_255", "prediction": "all x y.((PoisonousDart(x) & CloseRelative(y) & Coral(y)) -> UsedForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_255", "prediction": "all x y z.((PoisonousDart(x) & CoralCoral(y) & CloseRelative(z)) -> UsedForDefense(x,y,z))", "score": 0}
{"id": "eqasc_validation_255", "prediction": "all x y z.((PoisonousDart(x) & CloseRelative(y) & Coral(z)) -> UsedForDefenseBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_255", "prediction": "all x y.((PoisonousDart(x) & CloseRelativesOfCoral(y)) -> UsedForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_255", "prediction": "all x y.((PoisonousDart(x) & Coral(y)) -> UsedForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_255", "prediction": "all x y.((PoisonousDart(x) & CloseRelative(y)) -> UsedForDefenseBy(x,y))", "score": 0}
{"id": "eqasc_validation_255", "prediction": "all x y.((PoisonousDart(x) & CloseRelative(y) & Coral(z)) -> UsedForDefense(x,y,z))", "score": 0}
{"id": "eqasc_validation_255", "prediction": "all x y z.((PoisonousDart(x) & Coral(y) & CloseRelative(z)) -> (UsedForDefense(x,y,z) & CloseRelative(x,y)))", "score": 0}
{"id": "eqasc_validation_255", "prediction": "all x y.((PoisonousDart(x) & CloseRelative(y) & Coral(y)) -> UsedForDefenseBy(x,y))", "score": 0}
{"id": "eqasc_validation_255", "prediction": "all x y z.((PoisonousDart(x) & Coral(y) & CloseRelatives(z)) -> UsedForDefense(x,y,z))", "score": 0}
{"id": "eqasc_validation_255", "prediction": "all x y z.((PoisonousDart(x) & CoralCoral(y) & CloseRelative(z)) -> UsedForDefenseBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_256", "prediction": "all x y.((CloseRelative(x) & Coral(y)) -> UsesPoisonousDartsForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_256", "prediction": "all x y z.((CloseRelative(x) & Coral(y) & PoisonousDart(z)) -> UsesForDefense(x,y,z))", "score": 0}
{"id": "eqasc_validation_256", "prediction": "all x y.((CloseRelative(x) & Coral(y)) -> UsesPoisonousDarts(x,y))", "score": 0}
{"id": "eqasc_validation_256", "prediction": "all x y.((CloseRelative(x,y) & Coral(y)) -> UsesPoisonousDartsForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_256", "prediction": "all x.(CloseRelativesOfCoral(x) -> UsePoisonousDartsForDefense(x))", "score": 0}
{"id": "eqasc_validation_256", "prediction": "all x y.((CloseRelative(x) & Coral(y) & UsesPoisonousDarts(x,y)) -> UsesForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_256", "prediction": "all x.((CloseRelative(x) & Coral(x)) -> UsesPoisonousDartsForDefense(x))", "score": 0}
{"id": "eqasc_validation_256", "prediction": "all x y.((CloseRelative(x) & Coral(y) & UsesPoisonousDartsForDefense(x,y)) -> UsesPoisonousDartsForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_256", "prediction": "all x.(CloseRelativesOfCoral(x) -> UsesPoisonousDartsForDefense(x))", "score": 0}
{"id": "eqasc_validation_256", "prediction": "all x y.((CoralCoral(x) & CloseRelative(y)) -> UsesPoisonousDartsForDefense(y,x))", "score": 0}
{"id": "eqasc_validation_256", "prediction": "all x y.((CloseRelative(x) & Coral(y)) -> UsesPoisonousDart(x,y))", "score": 0}
{"id": "eqasc_validation_256", "prediction": "all x y.((CloseRelative(x,y) & Coral(y)) -> UsesPoisonousDartsForDefense(x))", "score": 0}
{"id": "eqasc_validation_256", "prediction": "all x y.((CloseRelative(x) & Coral(y)) -> UsePoisonousDartsForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_256", "prediction": "all x y.((CloseRelative(x) & Coral(y) & UsesPoisonousDartsForDefense(x,y)) -> UsesPoisonousDarts(x,y))", "score": 0}
{"id": "eqasc_validation_256", "prediction": "all x y z.((CloseRelative(x) & Coral(y) & PoisonousDart(z)) -> UsesForDefense(x,z))", "score": 0}
{"id": "eqasc_validation_256", "prediction": "all x y.((CloseRelative(x) & Coral(y) & UsesPoisonousDartsForDefense(x,y)) -> UsesDartsForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_257", "prediction": "all x.((Protect(x) & Gateway(x)) -> BestDefense(x))", "score": 0}
{"id": "eqasc_validation_257", "prediction": "all x.(ProtectAtGateway(x) -> BestDefense(x))", "score": 0}
{"id": "eqasc_validation_257", "prediction": "all x.((ProtectionAtGateway(x) & BestDefense(x)) -> BestDefense(x))", "score": 0}
{"id": "eqasc_validation_257", "prediction": "all x.(ProtectionAtGateway(x) -> BestDefense(x))", "score": 0}
{"id": "eqasc_validation_257", "prediction": "all x.((ProtectAtGateway(x) & BestDefense(x)) -> ProtectionAtGateway(x))", "score": 0}
{"id": "eqasc_validation_257", "prediction": "all x.((ProtectAtGateway(x) & BestDefense(x)) -> BestDefense(x))", "score": 0}
{"id": "eqasc_validation_257", "prediction": "all x.((ProtectAtGateway(x) & BestDefense(x)) -> ProtectsAtGateway(x))", "score": 0}
{"id": "eqasc_validation_257", "prediction": "all x.((ProtectionAtGateway(x) & BestDefense(x)) -> ProtectionAtGateway(x))", "score": 0}
{"id": "eqasc_validation_257", "prediction": "all x.((ProtectionAtGateway(x) & BestDefense(x)) -> ProtectsAtGateway(x))", "score": 0}
{"id": "eqasc_validation_257", "prediction": "all x y.((Gateway(x) & Gateway(y)) -> BestDefense(x,y))", "score": 0}
{"id": "eqasc_validation_257", "prediction": "all x.((ProtectAtGateway(x) & Gateway(x)) -> BestDefense(x))", "score": 0}
{"id": "eqasc_validation_257", "prediction": "all x y.((Gateway(x) & Gateway(y)) -> BestDefense(x))", "score": 0}
{"id": "eqasc_validation_257", "prediction": "all x.((ProtectAtGateway(x) & Gateway(y)) -> BestDefense(x))", "score": 0}
{"id": "eqasc_validation_258", "prediction": "all x y.((PoisonousDart(x) & SeaAnemone(y)) -> UsedAsProtection(x,y))", "score": 0}
{"id": "eqasc_validation_258", "prediction": "all x.(PoisonousDart(x) -> UsedAsProtectionBySeaAnemones(x))", "score": 0}
{"id": "eqasc_validation_258", "prediction": "all x y z.((PoisonousDart(x) & SeaAnemone(y) & SeaAnemone(z)) -> UsedAsProtection(x,y,z))", "score": 0}
{"id": "eqasc_validation_258", "prediction": "all x.((Dart(x) & Poisonous(x)) -> UsedAsProtectionBySeaAnemones(x))", "score": 0}
{"id": "eqasc_validation_258", "prediction": "all x y z.((Dart(x) & Poisonous(x) & SeaAnemone(y) & SeaAnemone(z)) -> UsedAsProtection(x,y,z))", "score": 0}
{"id": "eqasc_validation_258", "prediction": "all x y.((Dart(x) & Poisonous(x) & SeaAnemone(y)) -> UsedAsProtection(x,y))", "score": 0}
{"id": "eqasc_validation_258", "prediction": "all x.(PoisonousDart(x) -> UsedAsProtection(x,SeaAnemones))", "score": 0}
{"id": "eqasc_validation_258", "prediction": "all x.(PoisonousDart(x) -> UsedAsProtection(x))", "score": 0}
{"id": "eqasc_validation_258", "prediction": "all x y.((Dart(x) & Poisonous(x)) -> UsedAsProtection(x,y))", "score": 0}
{"id": "eqasc_validation_258", "prediction": "all x y.((PoisonousDart(x) & SeaAnemone(y)) -> UsedForProtection(x,y))", "score": 0}
{"id": "eqasc_validation_258", "prediction": "all x y.((Dart(x) & Poisonous(x)) -> UsedAsProtectionBySeaAnemones(y))", "score": 0}
{"id": "eqasc_validation_258", "prediction": "all x y.((PoisonousDart(x) & SeaAnemone(y)) -> UsedAsProtectionBy(x,y))", "score": 0}
{"id": "eqasc_validation_258", "prediction": "all x.((Dart(x) & Poisonous(x)) -> UsedAsProtection(x,SeaAnemones))", "score": 0}
{"id": "eqasc_validation_259", "prediction": "all x.(Anthozoan(x) -> (FamiliarAnemone(x) & FamiliarCoral(x)))", "score": 0}
{"id": "eqasc_validation_259", "prediction": "all x.(Anthozoan(x) -> (FamiliarAnemone(x) | FamiliarCoral(x)))", "score": 0}
{"id": "eqasc_validation_259", "prediction": "all x.(Anthozoan(x) -> (FamiliarAnemone(x) & FamiliarCorals(x)))", "score": 0}
{"id": "eqasc_validation_259", "prediction": "all x y.((Anthozoan(x) & Anemone(y) & Coral(y)) -> (Familiar(x,y) & Familiar(x,y)))", "score": 0}
{"id": "eqasc_validation_259", "prediction": "all x.(Anthozoan(x) -> (FamousAnemone(x) & FamiliarCoral(x)))", "score": 0}
{"id": "eqasc_validation_259", "prediction": "all x y.((Anthozoan(x) & Anemone(y) & Coral(y)) -> (Familiar(x,y) | Familiar(x,y)))", "score": 0}
{"id": "eqasc_validation_259", "prediction": "all x.(Anthozoan(x) -> (FamiliarAnemone(x) | FamiliarCorals(x)))", "score": 0}
{"id": "eqasc_validation_259", "prediction": "all x y z.((Anthozoan(x) & Anemone(y) & Coral(z)) -> (Familiar(x,y) & Familiar(x,z)))", "score": 0}
{"id": "eqasc_validation_259", "prediction": "all x y z.((Anthozoan(x) & Anemone(y) & Coral(z)) -> (Familiar(x,y) | Familiar(x,z)))", "score": 0}
{"id": "eqasc_validation_259", "prediction": "all x.(Anthozoan(x) -> (FamousAnemone(x) & FamousCoral(x)))", "score": 0}
{"id": "eqasc_validation_259", "prediction": "all x.(Anthozoan(x) -> (FamiliarAnemone(x) & FamousCoral(x)))", "score": 0}
{"id": "eqasc_validation_260", "prediction": "all x y.((PoisonousDart(x) & Anthozoan(y)) -> UsedForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_260", "prediction": "all x y z.((PoisonousDart(x) & Anthozoan(y) & Anthozoan(z)) -> UsedForDefense(x,y,z))", "score": 0}
{"id": "eqasc_validation_260", "prediction": "all x.(PoisonousDart(x) -> UsedForDefense(x))", "score": 0}
{"id": "eqasc_validation_260", "prediction": "all x.(PoisonousDart(x) -> UsedForDefenseByAnthozoans(x))", "score": 0}
{"id": "eqasc_validation_260", "prediction": "all x y z.((Dart(x) & Poisonous(x) & Anthozoan(y) & Anthozoan(z)) -> UsedForDefense(x,y,z))", "score": 0}
{"id": "eqasc_validation_260", "prediction": "all x y.((Dart(x) & Anthozoan(y)) -> UsedForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_260", "prediction": "all x.((Dart(x) & Poisonous(x)) -> UsedForDefenseByAnthozoans(x))", "score": 0}
{"id": "eqasc_validation_260", "prediction": "all x.(PoisonousDart(x) -> UsedForDefense(x,Anthozoans))", "score": 0}
{"id": "eqasc_validation_260", "prediction": "all x.((Dart(x) & Poisonous(x)) -> UsedForDefense(x))", "score": 0}
{"id": "eqasc_validation_260", "prediction": "all x y.((Dart(x) & Poisonous(x) & Anthozoan(y)) -> UsedForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_260", "prediction": "all x.((PoisonousDart(x) & Anthozoan(x)) -> UsedForDefense(x))", "score": 0}
{"id": "eqasc_validation_260", "prediction": "all x.((PoisonousDart(x) & Anthozoan(y)) -> UsedForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_260", "prediction": "all x.((Dart(x) & Poisonous(x)) -> UsedForDefense(x,Anthozoans))", "score": 0}
{"id": "eqasc_validation_260", "prediction": "all x y z.((PoisonousDart(x) & Anthozoan(y) & Anthozoan(z)) -> UsedForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_260", "prediction": "all x y.((PoisonousDart(x) & Anthozoan(y)) -> UsedForDefenseBy(x,y))", "score": 0}
{"id": "eqasc_validation_261", "prediction": "all x.(SeaAnemone(x) -> (RelatedToJellyfish(x) & RelatedToCoral(x)))", "score": 0}
{"id": "eqasc_validation_261", "prediction": "all x.(SeaAnemone(x) -> (RelatedToJellyfish(x) | RelatedToCoral(x)))", "score": 0}
{"id": "eqasc_validation_261", "prediction": "all x y z.((SeaAnemone(x) & Jellyfish(y) & Coral(z)) -> (RelatedTo(x,y) & RelatedTo(x,z)))", "score": 0}
{"id": "eqasc_validation_261", "prediction": "all x.(SeaAnemone(x) -> (RelatedTo(x,Jellyfish) & RelatedTo(x,Coral)))", "score": 0}
{"id": "eqasc_validation_261", "prediction": "all x y.((SeaAnemone(x) & Jellyfish(y) & Coral(y)) -> RelatedTo(x,y))", "score": 0}
{"id": "eqasc_validation_261", "prediction": "all x.(SeaAnemone(x) -> (RelatedTo(x,Jellyfish) | RelatedTo(x,Coral)))", "score": 0}
{"id": "eqasc_validation_261", "prediction": "all x y z.((SeaAnemone(x) & Jellyfish(y) & Coral(z)) -> (RelatedTo(x,y) | RelatedTo(x,z)))", "score": 0}
{"id": "eqasc_validation_262", "prediction": "all x y z.((PoisonousDart(x) & Organism(y) & Jellyfish(z) & Coral(z)) -> UsedForDefense(x,y,z))", "score": 0}
{"id": "eqasc_validation_262", "prediction": "all x y z.((PoisonousDart(x) & Organism(y) & Jellyfish(z) & Coral(z)) -> UsedForDefenseBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_262", "prediction": "all x y z.((PoisonousDart(x) & Organism(y) & (Jellyfish(z) | Coral(z))) -> UsedForDefense(x,y,z))", "score": 0}
{"id": "eqasc_validation_262", "prediction": "all x.(PoisonousDart(x) -> (UsedForDefense(x) & OrganismRelatedToJellyfishAndCoral(x)))", "score": 0}
{"id": "eqasc_validation_262", "prediction": "all x y.((PoisonousDart(x) & Organism(y) & Jellyfish(y) & Coral(y)) -> UsedForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_262", "prediction": "all x y z w.((PoisonousDart(x) & Organism(y) & Jellyfish(z) & Coral(w)) -> UsedForDefense(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_262", "prediction": "all x y z.((PoisonousDart(x) & Organism(y) & Jellyfish(z) & Coral(z)) -> UsedForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_262", "prediction": "all x y z.((PoisonousDart(x) & Organism(y) & (Jellyfish(z) | Coral(z))) -> UsedForDefenseBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_262", "prediction": "all x y z.((PoisonousDart(x) & Organism(y) & Jellyfish(z) & Coral(z)) -> UsedForDefense(x))", "score": 0}
{"id": "eqasc_validation_262", "prediction": "all x.(PoisonousDart(x) -> (UsedForDefenseByOrganism(x) & RelatedToJellyfishAndCoral(x)))", "score": 0}
{"id": "eqasc_validation_262", "prediction": "all x y z.((PoisonousDart(x) & Organism(y) & Jellyfish(z) & Coral(z)) -> UsedForDefenseBy(x,y))", "score": 0}
{"id": "eqasc_validation_262", "prediction": "all x.(PoisonousDart(x) -> (UsedForDefenseByOrganism(x) & (RelatedToJellyfish(x) | RelatedToCoral(x))))", "score": 0}
{"id": "eqasc_validation_262", "prediction": "all x y.((PoisonousDart(x) & Organism(y) & Jellyfish(y) & Coral(y)) -> UsedForDefenseBy(x,y))", "score": 0}
{"id": "eqasc_validation_262", "prediction": "all x y z.((PoisonousDart(x) & Organism(y) & (Jellyfish(z) | Coral(z))) -> UsedForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_262", "prediction": "all x y z.((PoisonousDart(x) & Organism(y) & Jellyfish(z)) -> UsedForDefense(x,y,z))", "score": 0}
{"id": "eqasc_validation_263", "prediction": "all x.(Lymph(x) -> LeaksOutOfCapillariesIntoSpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_263", "prediction": "all x y.((Lymph(x) & Capillary(y)) -> LeaksOutIntoSpacesBetweenCells(x,y))", "score": 0}
{"id": "eqasc_validation_263", "prediction": "all x.(Lymph(x) -> (Fluid(x) & LeaksOutOfCapillaries(x) & LeaksIntoSpacesBetweenCells(x)))", "score": 0}
{"id": "eqasc_validation_263", "prediction": "all x.(Lymph(x) -> (Fluid(x) & LeaksOutOfCapillariesIntoSpacesBetweenCells(x)))", "score": 0}
{"id": "eqasc_validation_263", "prediction": "all x y z.((Lymph(x) & Capillary(y) & Space(z)) -> LeaksOutInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_263", "prediction": "all x.(Lymph(x) -> LeaksOutCapillariesIntoSpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_263", "prediction": "all x.(Lymph(x) -> (Fluid(x) & LeaksOutOfCapillaries(x) & EntersSpacesBetweenCells(x)))", "score": 0}
{"id": "eqasc_validation_263", "prediction": "all x y.((Lymph(x) & Capillary(y)) -> LeaksIntoSpacesBetweenCells(x,y))", "score": 0}
{"id": "eqasc_validation_263", "prediction": "all x.(Lymph(x) -> (Liquid(x) & LeaksOutOfCapillariesIntoSpacesBetweenCells(x)))", "score": 0}
{"id": "eqasc_validation_263", "prediction": "all x.(Lymph(x) -> (LeptOutOfCapillaries(x) & LeaksIntoSpacesBetweenCells(x)))", "score": 0}
{"id": "eqasc_validation_263", "prediction": "all x.(Lymph(x) -> (Liquid(x) & LeaksOutOfCapillaries(x) & LeaksIntoSpacesBetweenCells(x)))", "score": 0}
{"id": "eqasc_validation_263", "prediction": "all x.(Lymph(x) -> (Fluid(x) & LeaksOutOfCapillaries(x) & SpacesBetweenCells(x)))", "score": 0}
{"id": "eqasc_validation_263", "prediction": "all x.(Lymph(x) -> (Fluid(x) & LeaksOutOfCapillaries(x) & InSpacesBetweenCells(x)))", "score": 0}
{"id": "eqasc_validation_264", "prediction": "all x.(SmallLymphCapillary(x) -> CollectsLymph(x))", "score": 0}
{"id": "eqasc_validation_264", "prediction": "all x.(LymphCapillary(x) -> CollectsLymph(x))", "score": 0}
{"id": "eqasc_validation_264", "prediction": "all x y.((SmallLymphCapillary(x) & Lymph(y)) -> Collects(x,y))", "score": 0}
{"id": "eqasc_validation_264", "prediction": "all x y.((LymphCapillary(x) & Small(y)) -> CollectsLymph(x,y))", "score": 0}
{"id": "eqasc_validation_264", "prediction": "all x y.((LymphCapillary(x) & Small(x)) -> CollectsLymph(x,y))", "score": 0}
{"id": "eqasc_validation_264", "prediction": "all x y z.((SmallLymphCapillary(x) & Lymph(y) & Lymph(z)) -> Collects(x,y,z))", "score": 0}
{"id": "eqasc_validation_264", "prediction": "all x.((LymphCapillary(x) & Small(x)) -> CollectsLymph(x))", "score": 0}
{"id": "eqasc_validation_264", "prediction": "all x y.((LymphCapillary(x) & Small(x)) -> CollectsLymph(y))", "score": 0}
{"id": "eqasc_validation_264", "prediction": "all x.(SmallLymphCapillary(x) -> CollectLymph(x))", "score": 0}
{"id": "eqasc_validation_264", "prediction": "all x y.((LymphCapillary(x) & Small(x)) -> CollectsLymph(x))", "score": 0}
{"id": "eqasc_validation_264", "prediction": "all x y.((SmallLymphCapillary(x) & Lymph(y) & Collects(x,y)) -> Collects(x,y))", "score": 0}
{"id": "eqasc_validation_264", "prediction": "all x.(SmallLymphCapillaries(x) -> CollectsLymph(x))", "score": 0}
{"id": "eqasc_validation_264", "prediction": "all x y z.((SmallLymphCapillary(x) & Lymph(y) & Lymph(z)) -> Collects(x,y))", "score": 0}
{"id": "eqasc_validation_264", "prediction": "all x y.((SmallLymphCapillary(x) & Lymph(y)) -> Collect(x,y))", "score": 0}
{"id": "eqasc_validation_264", "prediction": "all x y z.((SmallLymphCapillary(x) & Lymph(y) & Lymph(z)) -> Collect(x,y,z))", "score": 0}
{"id": "eqasc_validation_264", "prediction": "all x y z.((SmallLymphCapillary(x) & Lymph(y) & Collects(x,y)) -> Collects(x,y))", "score": 0}
{"id": "eqasc_validation_265", "prediction": "all x.(SmallCapillary(x) -> CollectsFluid(x))", "score": 0}
{"id": "eqasc_validation_265", "prediction": "all x y z.((SmallCapillary(x) & Fluid(y) & Fluid(z)) -> Collects(x,y,z))", "score": 0}
{"id": "eqasc_validation_265", "prediction": "all x y.((SmallCapillary(x) & SmallCapillary(y)) -> CollectsFluid(x,y))", "score": 0}
{"id": "eqasc_validation_265", "prediction": "all x.(SmallCapillaries(x) -> CollectsFluid(x))", "score": 0}
{"id": "eqasc_validation_265", "prediction": "all x y.((SmallCapillary(x) & Fluid(y)) -> Collects(x,y))", "score": 0}
{"id": "eqasc_validation_265", "prediction": "all x y z.((SmallCapillary(x) & Fluid(y) & Fluid(z)) -> CollectsCollects(x,y,z))", "score": 0}
{"id": "eqasc_validation_265", "prediction": "all x y z.((SmallCapillary(x) & Fluid(y) & Fluid(z) & Collects(x,y,z)) -> Collects(x,y,z))", "score": 0}
{"id": "eqasc_validation_265", "prediction": "all x y z.((SmallCapillary(x) & Fluid(y) & Fluid(z) & Collects(x,y,z)) -> Collects(x,y))", "score": 0}
{"id": "eqasc_validation_265", "prediction": "all x y z.((SmallCapillary(x) & Fluid(y) & Fluid(z) & Collects(x,y)) -> Collects(x,z))", "score": 0}
{"id": "eqasc_validation_265", "prediction": "all x y.((SmallCapillary(x) & FluidCollect(y)) -> Collects(x,y))", "score": 0}
{"id": "eqasc_validation_265", "prediction": "all x y.((SmallCapillary(x) & Capillary(y)) -> CollectsFluid(x,y))", "score": 0}
{"id": "eqasc_validation_265", "prediction": "all x y.((SmallCapillary(x) & SmallCapillary(y)) -> CollectsFluidCollectsFluid(x,y))", "score": 0}
{"id": "eqasc_validation_265", "prediction": "all x y.((Capillary(x) & Small(x)) -> CollectsFluid(x,y))", "score": 0}
{"id": "eqasc_validation_265", "prediction": "all x y.((SmallCapillary(x) & SmallCapillary(y)) -> CollectsFluid(x))", "score": 0}
{"id": "eqasc_validation_265", "prediction": "all x y z.((SmallCapillary(x) & Fluid(y) & Fluid(z)) -> Collects(x,y))", "score": 0}
{"id": "eqasc_validation_265", "prediction": "all x y.((SmallCapillary(x) & SmallCapillary(y)) -> CollectsFlour(x,y))", "score": 0}
{"id": "eqasc_validation_266", "prediction": "all x.(LymphVessel(x) -> (CarriesLymph(x) & ColorlessWateryFluid(x) & ContainsLymphocytes(x)))", "score": 0}
{"id": "eqasc_validation_266", "prediction": "all x y.((LymphVessel(x) & Lymph(y)) -> (CarriesLymph(x,y) & ColorlessWateryFluid(x) & ContainsLymphocytes(x)))", "score": 0}
{"id": "eqasc_validation_266", "prediction": "all x y.((LymphVessel(x) & Lymph(y)) -> (CarriesLymph(x,y) & ColorlessWateryFluid(x) & ContainsLymphocytes(y)))", "score": 0}
{"id": "eqasc_validation_266", "prediction": "all x y.((LymphVessel(x) & Lymph(y)) -> (CarriesLymph(x,y) & ColorlessWateryFluid(y) & ContainsLymphocytes(y)))", "score": 0}
{"id": "eqasc_validation_266", "prediction": "all x.(LymphVessel(x) -> (CarriesLymph(x) & Colorless(x) & Watery(x) & ContainsLymphocytes(x)))", "score": 0}
{"id": "eqasc_validation_266", "prediction": "all x y.((LymphVessel(x) & Lymph(y)) -> (Carries(x,y) & ColorlessWateryFluid(x) & ContainsLymphocytes(x)))", "score": 0}
{"id": "eqasc_validation_266", "prediction": "all x.(LymphVessel(x) -> (CarriesLymph(x) & Colorless(x) & WateryFluid(x) & ContainsLymphocytes(x)))", "score": 0}
{"id": "eqasc_validation_266", "prediction": "all x y.((LymphVessel(x) & Lymph(y)) -> (CarriesLymph(x,y) & ColorlessWateryFluid(y) & ContainsLymphocytes(x)))", "score": 0}
{"id": "eqasc_validation_266", "prediction": "all x y.((LymphVessel(x) & Lymph(y)) -> (Carries(x,y) & ColorlessWateryFluid(x) & ContainsLymphocytes(y)))", "score": 0}
{"id": "eqasc_validation_266", "prediction": "all x.(LymphVessel(x) -> (CarriesLymph(x) & ColorlessWateryFlour(x) & ContainsLymphocytes(x)))", "score": 0}
{"id": "eqasc_validation_266", "prediction": "all x.((LymphVessel(x) & Lymph(x)) -> (CarriesLymph(x) & ColorlessWateryFluid(x) & ContainsLymphocytes(x)))", "score": 0}
{"id": "eqasc_validation_266", "prediction": "all x y.((LymphVessel(x) & Lymph(y)) -> (Carries(x,y) & ColorlessWateryFluid(y) & ContainsLymphocytes(y)))", "score": 0}
{"id": "eqasc_validation_266", "prediction": "all x y.((LymphVessel(x) & Lymph(y)) -> (CarriesLymph(x) & ColorlessWateryFluid(x) & ContainsLymphocytes(x)))", "score": 0}
{"id": "eqasc_validation_266", "prediction": "all x y z.((LymphVessel(x) & Lymph(y) & ColorlessWateryFluid(z) & ContainsLymphocytes(x)) -> Carries(x,y,z))", "score": 0}
{"id": "eqasc_validation_266", "prediction": "all x y z.((LymphVessel(x) & Lymph(y) & ColorlessWateryFluid(z) & ContainsLymphocytes(y)) -> Carries(x,y,z))", "score": 0}
{"id": "eqasc_validation_267", "prediction": "all x.((Fluid(x) & LeaksOutOfCapillariesIntoSpacesBetweenCells(x)) -> ContainsLymphocytes(x))", "score": 0}
{"id": "eqasc_validation_267", "prediction": "all x.((Fluid(x) & LeaksOutOfCapillaries(x) & SpacesBetweenCells(x)) -> ContainsLymphocytes(x))", "score": 0}
{"id": "eqasc_validation_267", "prediction": "all x y.((Fluid(x) & LeaksOutOfCapillaries(x) & SpacesBetweenCells(y)) -> ContainsLymphocytes(x))", "score": 0}
{"id": "eqasc_validation_267", "prediction": "all x y.((Fluid(x) & LeaksOutOfCapillariesIntoSpacesBetweenCells(x)) -> ContainsLymphocytes(x))", "score": 0}
{"id": "eqasc_validation_267", "prediction": "all x.((Fluid(x) & LeaksOutOfCapillaries(x) & LeaksIntoSpacesBetweenCells(x)) -> ContainsLymphocytes(x))", "score": 0}
{"id": "eqasc_validation_267", "prediction": "all x y.((Fluid(x) & LeaksOutOfCapillaries(x) & SpacesBetweenCells(y)) -> ContainsLymphocytes(x,y))", "score": 0}
{"id": "eqasc_validation_267", "prediction": "all x y.((Fluid(x) & LeaksOutOfCapillaries(x,y) & SpacesBetweenCells(y)) -> ContainsLymphocytes(x))", "score": 0}
{"id": "eqasc_validation_267", "prediction": "all x y.((Fluid(x) & LeaksOutOfCapillaries(x) & SpacesBetweenCells(x)) -> ContainsLymphocytes(x))", "score": 0}
{"id": "eqasc_validation_267", "prediction": "all x.((Fluid(x) & LeaksOutOfCapillaries(x) & EntersSpacesBetweenCells(x)) -> ContainsLymphocytes(x))", "score": 0}
{"id": "eqasc_validation_267", "prediction": "all x.((Fluid(x) & LeaksOutOfCapillaries(x) & IntoSpacesBetweenCells(x)) -> ContainsLymphocytes(x))", "score": 0}
{"id": "eqasc_validation_267", "prediction": "all x y.((Fluid(x) & LeaksOutOfCapillaries(x,y) & SpacesBetweenCells(x)) -> ContainsLymphocytes(x))", "score": 0}
{"id": "eqasc_validation_267", "prediction": "all x y.((Fluid(x) & LeaksOutOfCapillariesIntoSpacesBetweenCells(x)) -> ContainsLymphocytes(y))", "score": 0}
{"id": "eqasc_validation_267", "prediction": "all x y z.((Fluid(x) & LeaksOutOfCapillaries(x) & SpacesBetweenCells(y) & LeaksInto(x,y)) -> ContainsLymphocytes(x))", "score": 0}
{"id": "eqasc_validation_267", "prediction": "all x.((Fluid(x) & LeaksOutCapillariesIntoSpacesBetweenCells(x)) -> ContainsLymphocytes(x))", "score": 0}
{"id": "eqasc_validation_267", "prediction": "all x y.((Fluid(x) & LeaksOutOfCapillaries(x) & SpacesBetweenCells(x)) -> ContainsLymphocytes(y))", "score": 0}
{"id": "eqasc_validation_267", "prediction": "all x y z.((Fluid(x) & LeaksOutOfCapillaries(x,y) & SpacesBetweenCells(y) & LeaksInto(x,z)) -> ContainsLymphocytes(x))", "score": 0}
{"id": "eqasc_validation_268", "prediction": "all x.(CapillaryWall(x) -> Permeable(x))", "score": 0}
{"id": "eqasc_validation_268", "prediction": "all x.(CapillaryWall(x) -> VeryPermeable(x))", "score": 0}
{"id": "eqasc_validation_268", "prediction": "all x y.((CapillaryWall(x) & CapillaryWall(y)) -> Permeable(x))", "score": 0}
{"id": "eqasc_validation_268", "prediction": "all x y.((CapillaryWall(x) & Wall(y)) -> Permeable(x))", "score": 0}
{"id": "eqasc_validation_268", "prediction": "all x.((CapillaryWall(x) & Permeable(x)) -> CapillaryWall(x))", "score": 0}
{"id": "eqasc_validation_268", "prediction": "all x y.((CapillaryWall(x) & CapillaryWall(y)) -> Permeable(x,y))", "score": 0}
{"id": "eqasc_validation_268", "prediction": "all x y.((CapillaryWall(x) & Wall(y)) -> Permeable(x,y))", "score": 0}
{"id": "eqasc_validation_268", "prediction": "all x.(CapillaryWall(x) -> (Permeable(x) | Permeable(x)))", "score": 0}
{"id": "eqasc_validation_268", "prediction": "all x.((CapillaryWall(x) & Permeable(x)) -> Permeable(x))", "score": 0}
{"id": "eqasc_validation_268", "prediction": "all x.(CapillaryWall(x) -> (Permeable(x) & Permeable(x)))", "score": 0}
{"id": "eqasc_validation_268", "prediction": "all x y.((CapillaryWall(x) & Capillary(y)) -> Permeable(x))", "score": 0}
{"id": "eqasc_validation_268", "prediction": "all x.(CapillaryWall(x) -> QuitePermeable(x))", "score": 0}
{"id": "eqasc_validation_268", "prediction": "all x y.((CapillaryWall(x) & CapillaryWall(y)) -> Permeable(y))", "score": 0}
{"id": "eqasc_validation_268", "prediction": "all x.((CapillaryWall(x) & Permeable(x)) -> QuitePermeable(x))", "score": 0}
{"id": "eqasc_validation_269", "prediction": "all x.(Lymph(x) -> LeaksFromPermeableWallsIntoSpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_269", "prediction": "all x y z.((Lymph(x) & PermeableWalls(y) & SpacesBetweenCells(z)) -> LeaksFromInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_269", "prediction": "all x y.((Lymph(x) & PermeableWalls(y)) -> LeaksIntoSpacesBetweenCells(x,y))", "score": 0}
{"id": "eqasc_validation_269", "prediction": "all x y z.((Lymph(x) & PermeableWalls(y) & SpacesBetweenCells(z)) -> LeaksInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_269", "prediction": "all x.(Lymph(x) -> (LeaksFromPermeableWallsIntoSpacesBetweenCells(x) & FromPermeableWallsIntoSpacesBetweenCells(x)))", "score": 0}
{"id": "eqasc_validation_269", "prediction": "all x y.((Lymph(x) & PermeableWalls(y)) -> LeaksIntoSpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_269", "prediction": "all x.(Lymph(x) -> (LeaksFromPermeableWallsIntoSpacesBetweenCells(x) & LeaksFromPermeableWallsIntoSpacesBetweenCells(x)))", "score": 0}
{"id": "eqasc_validation_269", "prediction": "all x y.((Lymph(x) & PermeableWalls(y) & SpacesBetweenCells(x)) -> LeaksFromInto(x,y))", "score": 0}
{"id": "eqasc_validation_269", "prediction": "all x y z.((Lymph(x) & PermeableWalls(y) & SpacesBetweenCells(z)) -> LeaksFromToSpacesBetweenCells(x,y,z))", "score": 0}
{"id": "eqasc_validation_269", "prediction": "all x y.((Lymph(x) & PermeableWalls(y) & SpacesBetweenCells(x)) -> LeaksInto(x,y))", "score": 0}
{"id": "eqasc_validation_269", "prediction": "all x y z.((Lymph(x) & PermeableWalls(y) & SpacesBetweenCells(z)) -> Leaks(x,y,z))", "score": 0}
{"id": "eqasc_validation_269", "prediction": "all x y z.((Lymph(x) & PermeableWalls(y) & SpacesBetweenCells(z)) -> LeaksFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_269", "prediction": "all x y.((Lymph(x) & PermeableWalls(y) & SpacesBetweenCells(x,y)) -> LeaksInto(x,y))", "score": 0}
{"id": "eqasc_validation_269", "prediction": "all x.(Lymph(x) -> (Liquid(x) & LeaksFromPermeableWallsIntoSpacesBetweenCells(x)))", "score": 0}
{"id": "eqasc_validation_269", "prediction": "all x y.((Lymph(x) & PermeableWalls(y)) -> LeaksFromIntoSpacesBetweenCells(x,y))", "score": 0}
{"id": "eqasc_validation_270", "prediction": "all x.(System(x) -> (LymphCapillaries(x) & LymphVines(x) & LymphNodes(x)))", "score": 0}
{"id": "eqasc_validation_270", "prediction": "all x.(System(x) -> (LymphCapillaries(x) & LymphVins(x) & LymphNodes(x)))", "score": 0}
{"id": "eqasc_validation_270", "prediction": "all x.(System(x) -> (ConsistsOfLymphCapillaries(x) & ConsistsOfLymphVines(x) & ConsistsOfLymphNodes(x)))", "score": 0}
{"id": "eqasc_validation_270", "prediction": "all x.(System(x) -> (ConsistsOfLymphCapillaries(x) & ConsistsOfLymphVins(x) & ConsistsOfLymphNodes(x)))", "score": 0}
{"id": "eqasc_validation_270", "prediction": "all x.(System(x) -> (exists y.(LymphCapillary(y) & ConsistsOf(x,y)) & exists z.(LymphVine(z) & ConsistsOf(x,z))) & exists w.(LymphNode(w) & ConsistsOf(x,w))))", "score": -1}
{"id": "eqasc_validation_270", "prediction": "all x.(System(x) -> (exists y.(LymphCapillary(y) & ConsistsOf(x,y)) & exists z.(LymphVin(z) & ConsistsOf(x,z))) & exists w.(LymphNode(w) & ConsistsOf(x,w))))", "score": -1}
{"id": "eqasc_validation_270", "prediction": "all x.(System(x) -> (exists y.(LymphCapillary(y) & ConsistsOf(x,y)) & exists z.(LymphVins(z) & ConsistsOf(x,z))) & exists w.(LymphNode(w) & ConsistsOf(x,w))))", "score": -1}
{"id": "eqasc_validation_270", "prediction": "all x.(System(x) -> (exists y.(LymphCapillary(y) & ConsistsOf(x,y)) & exists z.(LymphVine(z) & ConsistsOf(x,z)) & exists w.(LymphNode(w) & ConsistsOf(x,w)))))", "score": -1}
{"id": "eqasc_validation_270", "prediction": "all x.(System(x) -> (exists y.(LymphCapillary(y) & ConsistsOf(x,y)) & exists z.(LymphVines(z) & ConsistsOf(x,z))) & exists w.(LymphNode(w) & ConsistsOf(x,w))))", "score": -1}
{"id": "eqasc_validation_270", "prediction": "all x.(System(x) -> (LymphCapillaries(x) & LymphVine(x) & LymphNodes(x)))", "score": 0}
{"id": "eqasc_validation_270", "prediction": "all x.(System(x) -> (exists y.(LymphCapillary(y) & ConsistsOf(x,y)) & exists z.(LymphVines(z) & ConsistsOf(x,z)) & exists w.(LymphNode(w) & ConsistsOf(x,w)))))", "score": -1}
{"id": "eqasc_validation_270", "prediction": "all x.(System(x) -> (exists y.(LymphCapillary(y) & ConsistsOf(x,y)) & exists z.(LymphVins(z) & ConsistsOf(x,z)) & exists w.(LymphNode(w) & ConsistsOf(x,w)))))", "score": -1}
{"id": "eqasc_validation_270", "prediction": "all x.(System(x) -> (exists y.(LymphCapillary(y) & ConsistsOf(x,y)) & exists z.(LymphVine(z) & ConsistsOf(x,z)))))", "score": -1}
{"id": "eqasc_validation_270", "prediction": "all x.(System(x) -> (exists y.(LymphCapillary(y) & ConsistsOf(x,y)) & exists z.(LymphVin(z) & ConsistsOf(x,z)))))", "score": -1}
{"id": "eqasc_validation_270", "prediction": "all x.(System(x) -> (exists y.(LymphCapillary(y) & ConsistsOf(x,y)) & exists z.(LymphVin(z) & ConsistsOf(x,z)) & exists w.(LymphNode(w) & ConsistsOf(x,w)))))", "score": -1}
{"id": "eqasc_validation_270", "prediction": "all x.(System(x) -> (exists y.(LymphCapillary(y) & ConsistsOf(x,y)) & exists z.(LymphVine(z) & ConsistsOf(x,z))) & exists w.(LymphNode(w) & ConsistsOf(x,w)))))", "score": -1}
{"id": "eqasc_validation_271", "prediction": "all x y.((Lymph(x) & Node(y)) -> InNode(x,y))", "score": 0}
{"id": "eqasc_validation_271", "prediction": "all x y.((Lymph(x) & Node(y)) -> In(x,y))", "score": 0}
{"id": "eqasc_validation_271", "prediction": "all x y z.((Lymph(x) & Node(y) & Node(z)) -> LymphIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_271", "prediction": "all x.(Lymph(x) -> InNodes(x))", "score": 0}
{"id": "eqasc_validation_271", "prediction": "all x.(Lymph(x) -> InNode(x))", "score": 0}
{"id": "eqasc_validation_271", "prediction": "all x y z.((Lymph(x) & Node(y) & Node(z)) -> In(x,y,z))", "score": 0}
{"id": "eqasc_validation_271", "prediction": "all x y z.((Lymph(x) & Node(y) & Node(z)) -> IsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_271", "prediction": "all x y z.((Lymph(x) & Node(y) & Node(z)) -> InNode(x,y,z))", "score": 0}
{"id": "eqasc_validation_271", "prediction": "all x y.((Lymph(x) & Node(y)) -> IsIn(x,y))", "score": 0}
{"id": "eqasc_validation_271", "prediction": "all x y.((Lymph(x) & Node(y)) -> InNodes(x,y))", "score": 0}
{"id": "eqasc_validation_271", "prediction": "all x y z.((Lymph(x) & Node(y) & Node(z)) -> LymphInNode(x,y,z))", "score": 0}
{"id": "eqasc_validation_271", "prediction": "all x y z.((Lymph(x) & Node(y) & Node(z)) -> LymphIsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_271", "prediction": "all x y.((Lymph(x) & Node(y)) -> LymphIn(x,y))", "score": 0}
{"id": "eqasc_validation_271", "prediction": "all x y z.((Lymph(x) & Node(y) & Node(z)) -> LymphInNodes(x,y,z))", "score": 0}
{"id": "eqasc_validation_271", "prediction": "all x y.((Lymph(x) & Node(y)) -> LymphInNode(x,y))", "score": 0}
{"id": "eqasc_validation_271", "prediction": "all x y z.((Lymph(x) & Node(y) & Node(z)) -> InNodes(x,y,z))", "score": 0}
{"id": "eqasc_validation_272", "prediction": "all x.(LymphFluid(x) -> RichInProtein(x))", "score": 0}
{"id": "eqasc_validation_272", "prediction": "all x.(LymphFlour(x) -> RichInProtein(x))", "score": 0}
{"id": "eqasc_validation_272", "prediction": "all x y.((LymphFluid(x) & Protein(y)) -> RichIn(x,y))", "score": 0}
{"id": "eqasc_validation_272", "prediction": "all x.(LymphFloid(x) -> RichInProtein(x))", "score": 0}
{"id": "eqasc_validation_272", "prediction": "exists x.(LymphFluid(x) & RichInProtein(x))", "score": 0}
{"id": "eqasc_validation_272", "prediction": "all x y.((LymphFlour(x) & Protein(y)) -> RichIn(x,y))", "score": 0}
{"id": "eqasc_validation_272", "prediction": "all x y.((LymphFloid(x) & Protein(y)) -> RichIn(x,y))", "score": 0}
{"id": "eqasc_validation_272", "prediction": "all x y.((LymphFluid(x) & Protein(y) & RichIn(x,y)) -> RichIn(x,y))", "score": 0}
{"id": "eqasc_validation_272", "prediction": "all x y.((LymphFluid(x) & Protein(y)) -> Rich(x,y))", "score": 0}
{"id": "eqasc_validation_272", "prediction": "all x.(LymphFloc(x) -> RichInProtein(x))", "score": 0}
{"id": "eqasc_validation_272", "prediction": "all x.(LymphFlower(x) -> RichInProtein(x))", "score": 0}
{"id": "eqasc_validation_272", "prediction": "all x.(LymphFlow(x) -> RichInProtein(x))", "score": 0}
{"id": "eqasc_validation_272", "prediction": "all x.(LymphFiber(x) -> RichInProtein(x))", "score": 0}
{"id": "eqasc_validation_272", "prediction": "all x.(LymphFloss(x) -> RichInProtein(x))", "score": 0}
{"id": "eqasc_validation_272", "prediction": "All x.(LymphFluid(x) -> RichInProtein(x))", "score": -1}
{"id": "eqasc_validation_273", "prediction": "all x y z.((ProteinRichFluid(x) & Space(y) & Cell(z)) -> LeaksInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_273", "prediction": "all x.(ProteinRichFluid(x) -> LeaksIntoSpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_273", "prediction": "all x y.((ProteinRichFluid(x) & Cell(y)) -> LeaksIntoSpacesBetween(x,y))", "score": 0}
{"id": "eqasc_validation_273", "prediction": "all x.((Fluid(x) & ProteinRich(x)) -> LeaksIntoSpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_273", "prediction": "all x y.((ProteinRichFluid(x) & SpacesBetweenCells(y)) -> LeaksInto(x,y))", "score": 0}
{"id": "eqasc_validation_273", "prediction": "all x.((ProteinRichFluid(x) & LeaksIntoSpacesBetweenCells(x)) -> LeaksIntoSpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_273", "prediction": "all x.((ProteinRichFluid(x) & LeaksIntoSpacesBetweenCells(x)) -> ProteinRichFluid(x))", "score": 0}
{"id": "eqasc_validation_273", "prediction": "all x y z.((ProteinRichFluid(x) & SpacesBetweenCells(y) & Cell(z)) -> LeaksInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_273", "prediction": "all x y z.((ProteinRichFluid(x) & Space(y) & Cell(z) & LeaksInto(x,y,z)) -> LeaksInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_273", "prediction": "all x y z.((ProteinRichFluid(x) & Cell(y) & Space(z)) -> LeaksInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_273", "prediction": "all x y.((ProteinRichFluid(x) & Space(y)) -> LeaksInto(x,y))", "score": 0}
{"id": "eqasc_validation_273", "prediction": "all x y z.((ProteinRichFluid(x) & Space(y) & Cell(z) & LeaksInto(x,y,z)) -> ProteinRichFluid(x))", "score": 0}
{"id": "eqasc_validation_273", "prediction": "all x y.((ProteinRichFluid(x) & SpaceBetweenCells(y)) -> LeaksInto(x,y))", "score": 0}
{"id": "eqasc_validation_273", "prediction": "all x y.((ProteinRichFluid(x) & Cell(y)) -> LeaksIntoSpacesBetweenCells(x,y))", "score": 0}
{"id": "eqasc_validation_273", "prediction": "all x y z.((Fluid(x) & ProteinRich(x) & Space(y) & Cell(z)) -> LeaksInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_273", "prediction": "all x y.((ProteinRichFluid(x) & Cell(y)) -> LeaksIntoSpaces(x,y))", "score": 0}
{"id": "eqasc_validation_274", "prediction": "all x.(Human(x) -> MillionsOfCells(x))", "score": 0}
{"id": "eqasc_validation_274", "prediction": "all x.(Human(x) -> trillionsOfCells(x))", "score": 0}
{"id": "eqasc_validation_274", "prediction": "all x.(Human(x) -> exists y.(TrillionsOfCells(y) & MadeUpOf(x,y)))", "score": 0}
{"id": "eqasc_validation_274", "prediction": "all x y.((Human(x) & Cell(y)) -> MillionsOf(x,y))", "score": 0}
{"id": "eqasc_validation_274", "prediction": "all x.(Human(x) -> exists y.(TrillionsOfCells(y) & MadeUpOf(x,y))))", "score": -1}
{"id": "eqasc_validation_274", "prediction": "all x y.((Human(x) & Cell(y)) -> MadeUpOfTwelve(x,y))", "score": 0}
{"id": "eqasc_validation_274", "prediction": "all x.(Human(x) -> MadeUpOfTwelveCells(x))", "score": 0}
{"id": "eqasc_validation_274", "prediction": "all x y z.((Human(x) & Cell(y) & Cell(z)) -> MillionsOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_274", "prediction": "all x.(Human(x) -> (MadeUpOfTwelveCells(x)))", "score": 0}
{"id": "eqasc_validation_274", "prediction": "all x y z.((Human(x) & Cell(y) & Cell(z)) -> MadeUpOfTwelve(x,y,z))", "score": 0}
{"id": "eqasc_validation_274", "prediction": "all x y z.((Human(x) & Cell(y) & Cell(z)) -> MadeUpOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_274", "prediction": "all x.(Human(x) -> exists y.(TrillionsOfCells(y) & MakesUp(x,y)))", "score": 0}
{"id": "eqasc_validation_274", "prediction": "all x.(Human(x) -> exists y.(Twelve(y) & Cell(z) & MadeUpOf(x,y,z))))", "score": -1}
{"id": "eqasc_validation_274", "prediction": "all x.(Human(x) -> (MadeUpOfTwelve(x) & Cells(x)))", "score": 0}
{"id": "eqasc_validation_274", "prediction": "all x.(Human(x) -> exists y.(TrillionsOfCells(y) & MadeOf(x,y))))", "score": -1}
{"id": "eqasc_validation_274", "prediction": "all x.(Human(x) -> exists y.(TrillionsOfCells(y) & MakesUp(x,y))))", "score": -1}
{"id": "eqasc_validation_275", "prediction": "all x.(Human(x) -> ContainsLymph(x))", "score": 0}
{"id": "eqasc_validation_275", "prediction": "all x y.((Human(x) & Human(y)) -> ContainsLymph(x,y))", "score": 0}
{"id": "eqasc_validation_275", "prediction": "all x y z.((Human(x) & Lymph(y) & Lymph(z)) -> Contains(x,y,z))", "score": 0}
{"id": "eqasc_validation_275", "prediction": "all x y.((Human(x) & Lymph(y)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_275", "prediction": "all x y.((Human(x) & Lymph(y)) -> ContainsLymph(x,y))", "score": 0}
{"id": "eqasc_validation_275", "prediction": "all x y z.((Human(x) & Lymph(y) & Lymph(z)) -> ContainsLymph(x,y,z))", "score": 0}
{"id": "eqasc_validation_275", "prediction": "all x.(Human(x) -> LymphContainment(x))", "score": 0}
{"id": "eqasc_validation_275", "prediction": "all x y z.((Human(x) & Lymph(y) & Lymph(z)) -> ContainLymph(x,y,z))", "score": 0}
{"id": "eqasc_validation_275", "prediction": "all x y z.((Human(x) & Lymph(y) & Lymph(z)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_275", "prediction": "all x y.((Human(x) & Lymph(y)) -> ContainLymph(x,y))", "score": 0}
{"id": "eqasc_validation_275", "prediction": "all x y.((Human(x) & Human(y)) -> LymphContainment(x,y))", "score": 0}
{"id": "eqasc_validation_275", "prediction": "all x y z.((Human(x) & Lymph(y) & Lymph(z)) -> ContainsLymph(x,y))", "score": 0}
{"id": "eqasc_validation_275", "prediction": "all x y z.((Human(x) & Lymph(y) & Lymph(z)) -> LymphContainment(x,y,z))", "score": 0}
{"id": "eqasc_validation_275", "prediction": "all x y z.((Human(x) & Lymph(y) & Lymph(z)) -> Contain(x,y,z))", "score": 0}
{"id": "eqasc_validation_275", "prediction": "all x y z.((Human(x) & Lymph(y) & Lymph(z)) -> LymphContain(x,y,z))", "score": 0}
{"id": "eqasc_validation_275", "prediction": "all x.(Human(x) -> ContainLymphoid(x))", "score": 0}
{"id": "eqasc_validation_276", "prediction": "all x.(Capillary(x) -> MicroscopicVessel(x))", "score": 0}
{"id": "eqasc_validation_276", "prediction": "all x.(Capillary(x) -> MicroscopicalVessel(x))", "score": 0}
{"id": "eqasc_validation_276", "prediction": "all x.(Capsule(x) -> MicroscopicVessel(x))", "score": 0}
{"id": "eqasc_validation_276", "prediction": "all x.(Capillary(x) -> (MicroscopicalVessel(x) & MicroscopicalVessel(x)))", "score": 0}
{"id": "eqasc_validation_276", "prediction": "all x.(Capillary(x) -> (MicroscopicalVessel(x) & -MicroscopicalVessel(x)))", "score": 0}
{"id": "eqasc_validation_276", "prediction": "all x.(Capsule(x) -> MicroscopicalVessel(x))", "score": 0}
{"id": "eqasc_validation_276", "prediction": "all x y.((Capillary(x) & MicroscopicVessel(y)) -> Capillary(x))", "score": 0}
{"id": "eqasc_validation_276", "prediction": "all x.(Capillary(x) -> (MicroscopeVessel(x) & MicroscopeVessel(x)))", "score": 0}
{"id": "eqasc_validation_276", "prediction": "all x y.((Capillary(x) & MicroscopicalVessel(y)) -> MicroscopicalVessel(x))", "score": 0}
{"id": "eqasc_validation_276", "prediction": "all x.(Capillary(x) -> (MicroscopicalVessel(x) & MicroscopicVessel(x)))", "score": 0}
{"id": "eqasc_validation_276", "prediction": "all x.(Capillary(x) -> (MicroscopicVessel(x) & -MicroscopicVessel(x)))", "score": 0}
{"id": "eqasc_validation_276", "prediction": "all x.(Capillary(x) -> (MicroscopicVessel(x) & MicroscopicalVessel(x)))", "score": 0}
{"id": "eqasc_validation_276", "prediction": "all x.(Capillary(x) -> (MicroscopicalVessel(x) & -MicroscopicVessel(x)))", "score": 0}
{"id": "eqasc_validation_276", "prediction": "all x y.((Capillary(x) & MicroscopicalVessel(y)) -> MicroscopicalVessel(x,y))", "score": 0}
{"id": "eqasc_validation_277", "prediction": "all x.(Lymph(x) -> LeaksOutOfMicroscopicVesselsIntoSpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_277", "prediction": "all x y.((Lymph(x) & MicroscopicVessel(y)) -> LeaksOutIntoSpacesBetweenCells(x,y))", "score": 0}
{"id": "eqasc_validation_277", "prediction": "all x.(Lymph(x) -> (Fluid(x) & LeaksOutOfMicroscopicVesselsIntoSpacesBetweenCells(x)))", "score": 0}
{"id": "eqasc_validation_277", "prediction": "all x.(Lymph(x) -> (Fluid(x) & LeaksOutOfMicroscopicVessels(x) & LeaksIntoSpacesBetweenCells(x)))", "score": 0}
{"id": "eqasc_validation_277", "prediction": "all x y.((Lymph(x) & MicroscopicVessel(y)) -> LeaksIntoSpacesBetweenCells(x,y))", "score": 0}
{"id": "eqasc_validation_277", "prediction": "all x.(Lymph(x) -> (Fluid(x) & LeaksOutOfMicroscopicVessels(x) & EntersSpacesBetweenCells(x)))", "score": 0}
{"id": "eqasc_validation_277", "prediction": "all x.(Lymph(x) -> (Liquid(x) & LeaksOutOfMicroscopicVesselsIntoSpacesBetweenCells(x)))", "score": 0}
{"id": "eqasc_validation_277", "prediction": "all x.(Lymph(x) -> LeaksOutOfMicroscopicalVesselsIntoSpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_277", "prediction": "all x.(Lymph(x) -> (Liquid(x) & LeaksOutOfMicroscopicVessels(x) & LeaksIntoSpacesBetweenCells(x)))", "score": 0}
{"id": "eqasc_validation_277", "prediction": "all x y.((Lymph(x) & MicroscopicalVessel(y)) -> LeaksOutIntoSpacesBetweenCells(x,y))", "score": 0}
{"id": "eqasc_validation_277", "prediction": "all x y z.((Lymph(x) & MicroscopicVessel(y) & Space(z)) -> LeaksOutInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_277", "prediction": "all x.(Lymph(x) -> LeaksOutMicroscopicVesselsIntoSpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_277", "prediction": "all x.(Lymph(x) -> LeaksOutOfMicroscopeVesselsIntoSpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_277", "prediction": "all x y z.((Lymph(x) & MicroscopicVessel(y) & Cell(z)) -> LeaksOutIntoSpaces(x,y,z))", "score": 0}
{"id": "eqasc_validation_278", "prediction": "all x y.((Bacteria(x) & LymphNode(y)) -> InvadesAndSwells(x,y))", "score": 0}
{"id": "eqasc_validation_278", "prediction": "all x.(Bacteria(x) -> (InvadesLymphNodes(x) & Swells(x) & CreatesBubboes(x)))", "score": 0}
{"id": "eqasc_validation_278", "prediction": "all x y z.((Bacteria(x) & LymphNode(y) & Buboe(z)) -> InvadesAndSwells(x,y,z))", "score": 0}
{"id": "eqasc_validation_278", "prediction": "all x.(Bacteria(x) -> (InvadesLymphNodes(x) & Swells(x) & CreatesBuboes(x)))", "score": 0}
{"id": "eqasc_validation_278", "prediction": "all x y z.((Bacteria(x) & LymphNode(y) & Buboe(z)) -> (Invades(x,y) & Swells(y)))", "score": 0}
{"id": "eqasc_validation_278", "prediction": "all x y z.((Bacteria(x) & LymphNode(y) & Buboe(z)) -> (Invades(x,y) & Swells(y,z)))", "score": 0}
{"id": "eqasc_validation_278", "prediction": "all x.(Bacteria(x) -> (InvadesLymphNodes(x) & Swells(x) & CreatesBubioes(x)))", "score": 0}
{"id": "eqasc_validation_278", "prediction": "all x y.((Bacteria(x) & LymphNode(y)) -> Invades(x,y))", "score": 0}
{"id": "eqasc_validation_278", "prediction": "all x y z.((Bacteria(x) & LymphNode(y) & Bubo(z)) -> InvadesAndSwells(x,y,z))", "score": 0}
{"id": "eqasc_validation_278", "prediction": "all x y z.((Bacteria(x) & LymphNode(y) & Buboe(z)) -> (Invades(x,y) & Swells(x,z)))", "score": 0}
{"id": "eqasc_validation_278", "prediction": "all x y.((Bacteria(x) & LymphNode(y)) -> (Invades(x,y) & Swells(x,y)))", "score": 0}
{"id": "eqasc_validation_278", "prediction": "all x y z.((Bacteria(x) & LymphNode(y) & Buboe(z)) -> Invades(x,y))", "score": 0}
{"id": "eqasc_validation_278", "prediction": "all x y.((Bacteria(x) & LymphNode(y)) -> (Invades(x,y) & Swells(y) & CreatesBubboes(x)))", "score": 0}
{"id": "eqasc_validation_278", "prediction": "all x.(Bacteria(x) -> (InvadesLymphNodes(x) & Swells(x) & CreatesBaboes(x)))", "score": 0}
{"id": "eqasc_validation_278", "prediction": "all x y.((Bacteria(x) & LymphNode(y)) -> (Invades(x,y) & Swells(y) & CreatesBuboes(x)))", "score": 0}
{"id": "eqasc_validation_278", "prediction": "all x y z.((Bacteria(x) & LymphNode(y) & Bubo(z)) -> (Invades(x,y) & Swells(y,z)))", "score": 0}
{"id": "eqasc_validation_279", "prediction": "all x.(SwellingNode(x) -> LeaksFluidOutOfCapillariesIntoSpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_279", "prediction": "all x y.((SwellingNode(x) & Capillary(y)) -> LeaksFluidOutIntoSpacesBetweenCells(x,y))", "score": 0}
{"id": "eqasc_validation_279", "prediction": "all x y.((SwellingNode(x) & Capillary(y)) -> LeaksFluidIntoSpacesBetweenCells(x,y))", "score": 0}
{"id": "eqasc_validation_279", "prediction": "all x y z.((SwellingNode(x) & Capillary(y) & Capillary(z)) -> LeaksFluidOutIntoSpacesBetweenCells(x,y,z))", "score": 0}
{"id": "eqasc_validation_279", "prediction": "all x y z.((SwellingNode(x) & Capillary(y) & Capillary(z)) -> LeaksFluidIntoSpacesBetweenCells(x,y,z))", "score": 0}
{"id": "eqasc_validation_279", "prediction": "all x y.((SwellingNode(x) & Capillary(y)) -> LeaksFluidOut(x,y))", "score": 0}
{"id": "eqasc_validation_279", "prediction": "all x y z.((SwellingNode(x) & Capillary(y) & Space(z)) -> LeaksFluidOutInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_279", "prediction": "all x y z.((SwellingNode(x) & Capillary(y) & SpaceBetweenCells(z)) -> LeaksFluidOut(x,y,z))", "score": 0}
{"id": "eqasc_validation_279", "prediction": "all x y.((SwellingNode(x) & Capillary(y)) -> LeaksFluidOutToSpacesBetweenCells(x,y))", "score": 0}
{"id": "eqasc_validation_279", "prediction": "all x y z.((SwellingNode(x) & Capillary(y) & Capillary(z)) -> LeaksFluidOut(x,y,z))", "score": 0}
{"id": "eqasc_validation_279", "prediction": "all x y.((SwellingNode(x) & Capillary(y)) -> LeaksFloidOutIntoSpacesBetweenCells(x,y))", "score": 0}
{"id": "eqasc_validation_279", "prediction": "all x y z.((SwellingNode(x) & Capillary(y) & Space(z)) -> LeaksFluidOut(x,y,z))", "score": 0}
{"id": "eqasc_validation_279", "prediction": "all x y.((SwellingNode(x) & Capillary(y)) -> LeaksFluid(x,y))", "score": 0}
{"id": "eqasc_validation_279", "prediction": "all x.(SwellingNode(x) -> LeaksFloidOutOfCapillariesIntoSpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_279", "prediction": "all x y z.((SwellingNode(x) & Capillary(y) & Capillary(z)) -> LeaksFluid(x,y,z))", "score": 0}
{"id": "eqasc_validation_279", "prediction": "all x y z.((SwellingNode(x) & Capillary(y) & SpaceBetweenCells(z)) -> LeaksFluidOutInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_280", "prediction": "all x.((LymphNode(x) | Glands(x)) -> FiltersLymphFluid(x))", "score": 0}
{"id": "eqasc_validation_280", "prediction": "all x.(LymphNode(x) -> (Glands(x) & FiltersLymphFluid(x)))", "score": 0}
{"id": "eqasc_validation_280", "prediction": "all x y.((LymphNode(x) | Glands(x)) -> FiltersLymphFluid(y))", "score": 0}
{"id": "eqasc_validation_280", "prediction": "all x.((LymphNode(x) | Glanus(x)) -> FiltersLymphFluid(x))", "score": 0}
{"id": "eqasc_validation_280", "prediction": "all x.((LymphNode(x) | Glands(x)) -> FiltersLymphFloid(x))", "score": 0}
{"id": "eqasc_validation_280", "prediction": "all x y.((LymphNode(x) & Glands(y)) -> FiltersLymphFluid(x,y))", "score": 0}
{"id": "eqasc_validation_280", "prediction": "all x y.((LymphNode(x) | Glands(x)) -> FiltersLymphFluid(x))", "score": 0}
{"id": "eqasc_validation_280", "prediction": "all x.((LymphNode(x) | Gum(x)) -> FiltersLymphFluid(x))", "score": 0}
{"id": "eqasc_validation_280", "prediction": "all x y.((LymphNode(x) | Glands(x)) -> FiltersLymphFluid(x,y))", "score": 0}
{"id": "eqasc_validation_280", "prediction": "all x.(LymphNode(x) -> FiltersLymphFluid(x))", "score": 0}
{"id": "eqasc_validation_280", "prediction": "all x.((LymphNode(x) | Glands(x)) -> FiltersLymphFlow(x))", "score": 0}
{"id": "eqasc_validation_280", "prediction": "all x.((LymphNode(x) | Gnome(x)) -> FiltersLymphFluid(x))", "score": 0}
{"id": "eqasc_validation_280", "prediction": "all x.((LymphNode(x) | Glanz(x)) -> FiltersLymphFluid(x))", "score": 0}
{"id": "eqasc_validation_280", "prediction": "all x.(LymphNodeOrGlands(x) -> FiltersLymphFluid(x))", "score": 0}
{"id": "eqasc_validation_280", "prediction": "all x.(LymphNode(x) | Glands(x)) -> FiltersLymphFluid(x))", "score": -1}
{"id": "eqasc_validation_280", "prediction": "all x y.((LymphNode(x) & Glands(y)) -> FiltersLymphFluid(x))", "score": 0}
{"id": "eqasc_validation_281", "prediction": "all x y.((Lymph(x) & Node(y)) -> FilteredBy(x,y))", "score": 0}
{"id": "eqasc_validation_281", "prediction": "all x y z.((Lymph(x) & Node(y) & Node(z)) -> FilteredBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_281", "prediction": "all x.(Lymph(x) -> FilteredByNodes(x))", "score": 0}
{"id": "eqasc_validation_281", "prediction": "all x y z.((Lymph(x) & Node(y) & Node(z)) -> FilteredBy(x,y))", "score": 0}
{"id": "eqasc_validation_281", "prediction": "all x y z.((Lymph(x) & Node(y) & Node(z)) -> FilledBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_281", "prediction": "all x y z.((Lymph(x) & Node(y) & Node(z) & FilteredBy(x,y,z)) -> FilteredBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_281", "prediction": "all x y z.((Lymph(x) & Node(y) & Node(z) & FilteredBy(x,y,z)) -> FilteredBy(x,y))", "score": 0}
{"id": "eqasc_validation_281", "prediction": "all x y z.((Lymph(x) & Node(y) & Node(z)) -> FiltersBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_281", "prediction": "all x y z.((Lymph(x) & Node(y) & Node(z) & FilledBy(x,y,z)) -> FilteredBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_281", "prediction": "all x y z.((Lymph(x) & Node(y) & Node(z)) -> Filter(x,y,z))", "score": 0}
{"id": "eqasc_validation_281", "prediction": "all x y z w.((Lymph(x) & Node(y) & Node(z)) -> FilteredBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_281", "prediction": "all x y.((Lymph(x) & Node(y) & FilteredBy(x,y)) -> FilteredBy(x,y))", "score": 0}
{"id": "eqasc_validation_281", "prediction": "all x y z w.((Lymph(x) & Node(y) & Node(z) & FilteredBy(x,y,z)) -> FilteredBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_281", "prediction": "all x y.((Lymph(x) & Node(y)) -> FilledBy(x,y))", "score": 0}
{"id": "eqasc_validation_281", "prediction": "all x y z.((Lymph(x) & Node(y) & Node(z) & FilledBy(x,y,z)) -> FilteredBy(x,y))", "score": 0}
{"id": "eqasc_validation_282", "prediction": "all x.(Capillary(x) -> (Tiny(x) & ThinWalled(x) & BloodVessel(x)))", "score": 0}
{"id": "eqasc_validation_282", "prediction": "all x.(Capillary(x) -> (Tiny(x) & ThinWalledBloodedVessel(x)))", "score": 0}
{"id": "eqasc_validation_282", "prediction": "all x.(Capillary(x) -> (Tiny(x) & ThinWalledBloodVessel(x)))", "score": 0}
{"id": "eqasc_validation_282", "prediction": "all x.(Capillary(x) -> (TinyBloodedVessel(x) & ThinWalled(x)))", "score": 0}
{"id": "eqasc_validation_282", "prediction": "all x.(Capillary(x) -> (Tiny(x) & ThinWalledBlooded(x)))", "score": 0}
{"id": "eqasc_validation_282", "prediction": "all x.(Capillary(x) -> (TinyThinWalledBloodVessel(x) & ThickWalledBloodVessel(x)))", "score": 0}
{"id": "eqasc_validation_282", "prediction": "all x.(Capillary(x) -> (Tiny(x) & ThinWalled(x)))", "score": 0}
{"id": "eqasc_validation_282", "prediction": "all x.(Capillaries(x) -> (Tiny(x) & ThinWalledBloodedVessel(x)))", "score": 0}
{"id": "eqasc_validation_282", "prediction": "all x.(Capillary(x) -> (Tiny(x) & ThinWalledBloodedVessels(x)))", "score": 0}
{"id": "eqasc_validation_282", "prediction": "all x.(Capillaries(x) -> (Tiny(x) & ThinWalled(x) & BloodVessel(x)))", "score": 0}
{"id": "eqasc_validation_282", "prediction": "all x.(Capillary(x) -> (TinyBlooded(x) & ThinWalled(x)))", "score": 0}
{"id": "eqasc_validation_282", "prediction": "all x.(Capillaries(x) -> (Tiny(x) & ThinWalledBloodedVessels(x)))", "score": 0}
{"id": "eqasc_validation_282", "prediction": "all x.(Capillary(x) -> (TinyTinyWalledBloodedVessel(x) & ThickWalledVessel(x)))", "score": 0}
{"id": "eqasc_validation_282", "prediction": "all x.(Capillary(x) -> (TinyTinyWalledBloodedVessel(x) & ThickWalledBloodVessel(x)))", "score": 0}
{"id": "eqasc_validation_282", "prediction": "all x.(Capillary(x) -> (TinyThinWalledBloodVessel(x) & ThickWalledVessel(x)))", "score": 0}
{"id": "eqasc_validation_283", "prediction": "all x y.((LymphFluid(x) & BloodVessel(y)) -> LeaksOutIntoSpacesBetweenCells(x,y))", "score": 0}
{"id": "eqasc_validation_283", "prediction": "all x y z.((LymphFluid(x) & BloodVessel(y) & SpaceBetweenCells(z)) -> LeaksOutInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_283", "prediction": "all x y z.((LymphFluid(x) & BloodVessel(y) & Space(z)) -> LeaksOutInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_283", "prediction": "all x y.((LymphFluid(x) & BloodVessel(y)) -> LeaksIntoSpacesBetweenCells(x,y))", "score": 0}
{"id": "eqasc_validation_283", "prediction": "all x.(LymphFluid(x) -> LeaksOutOfBloodVesselsIntoSpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_283", "prediction": "all x.(LymphFluidLeaksOutOfBloodVesselsIntoSpacesBetweenCells(x) -> LeaksIntoSpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_283", "prediction": "all x y z.((LymphFluid(x) & BloodVessel(y) & Space(z)) -> LeaksOutIntoInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_283", "prediction": "all x y z.((LymphFluid(x) & BloodVessel(y) & Cell(z)) -> LeaksOutIntoSpacesBetween(x,y,z))", "score": 0}
{"id": "eqasc_validation_283", "prediction": "all x y z.((LymphFluid(x) & BloodVessel(y) & SpaceBetweenCells(z)) -> LeaksOutIntoInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_283", "prediction": "all x y.((LymphFloid(x) & BloodVessel(y)) -> LeaksOutIntoSpacesBetweenCells(x,y))", "score": 0}
{"id": "eqasc_validation_283", "prediction": "all x y z.((LymphFluid(x) & BloodVessel(y) & SpaceBetweenCells(z)) -> LeaksInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_283", "prediction": "all x y z.((LymphFluid(x) & BloodVessel(y) & SpacesBetweenCells(z)) -> LeaksOutInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_283", "prediction": "all x y z.((LymphFluid(x) & BloodVessel(y) & Space(z)) -> LeaksInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_283", "prediction": "all x y z.((LymphFluid(x) & BloodVessel(y) & Space(z) & BetweenCells(z)) -> LeaksOutInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_283", "prediction": "all x y z.((LymphFluid(x) & BloodVessel(y) & Space BetweenCells(z)) -> LeaksOutInto(x,y,z))", "score": -1}
{"id": "eqasc_validation_283", "prediction": "all x y z.((LymphFluid(x) & BloodVessels(y) & SpacesBetweenCells(z)) -> LeaksOutInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_284", "prediction": "all x.(Lymph(x) -> (RichInWhiteBloodCells(x) & FlowsThroughLymphaticVessels(x)))", "score": 0}
{"id": "eqasc_validation_284", "prediction": "all x.((Lymph(x) & RichInWhiteBloodCells(x)) -> FlowsThroughLymphaticVessels(x))", "score": 0}
{"id": "eqasc_validation_284", "prediction": "all x.(Lymph(x) -> (FluidRichInWhiteBloodCells(x) & FlowsThroughLymphaticVessels(x)))", "score": 0}
{"id": "eqasc_validation_284", "prediction": "all x y z.((Lymph(x) & WhiteBloodCell(y) & LymphaticVessel(z)) -> (RichIn(x,y) & FlowsThrough(x,z)))", "score": 0}
{"id": "eqasc_validation_284", "prediction": "all x y.((Lymph(x) & WhiteBloodCell(y)) -> FlowsThroughLymphaticVessels(x,y))", "score": 0}
{"id": "eqasc_validation_284", "prediction": "all x.(Lymph(x) -> (RichInWhiteBlueBloodCells(x) & FlowsThroughLymphaticVessels(x)))", "score": 0}
{"id": "eqasc_validation_284", "prediction": "all x y.((Lymph(x) & WhiteBloodCell(y)) -> (RichIn(x,y) & FlowsThroughLymphaticVessels(x)))", "score": 0}
{"id": "eqasc_validation_284", "prediction": "all x y.((Lymph(x) & WhiteBloodCell(y)) -> FlowsThroughLymphaticVessels(x))", "score": 0}
{"id": "eqasc_validation_284", "prediction": "all x.((Lymph(x) & RichInWhiteBlueBloodCells(x)) -> FlowsThroughLymphaticVessels(x))", "score": 0}
{"id": "eqasc_validation_284", "prediction": "all x.(Lymph(x) -> (Fluid(x) & RichInWhiteBloodCells(x) & FlowsThroughLymphaticVessels(x)))", "score": 0}
{"id": "eqasc_validation_284", "prediction": "all x.(Lymph(x) -> (FluidRichInWhiteBlueBloodCells(x) & FlowsThroughLymphaticVessels(x)))", "score": 0}
{"id": "eqasc_validation_284", "prediction": "all x y.((Lymph(x) & WhiteBloodCells(y)) -> FlowsThroughLymphaticVessels(x,y))", "score": 0}
{"id": "eqasc_validation_284", "prediction": "all x y.((Lymph(x) & WhiteBloodCell(y)) -> (RichIn(x,y) & FlowsThrough(x,y)))", "score": 0}
{"id": "eqasc_validation_284", "prediction": "all x y.((Lymph(x) & WhiteBlueBloodCell(y)) -> FlowsThroughLymphaticVessels(x,y))", "score": 0}
{"id": "eqasc_validation_285", "prediction": "all x.((Fluid(x) & LeaksOutOfCapillaries(x) & SpacesBetweenCells(x)) -> RichInWhiteBloodCells(x))", "score": 0}
{"id": "eqasc_validation_285", "prediction": "all x.((Fluid(x) & LeaksOutOfCapillariesIntoSpacesBetweenCells(x)) -> RichInWhiteBloodCells(x))", "score": 0}
{"id": "eqasc_validation_285", "prediction": "all x y.((Fluid(x) & LeaksOutOfCapillaries(x) & SpacesBetweenCells(y)) -> RichInWhiteBloodCells(x))", "score": 0}
{"id": "eqasc_validation_285", "prediction": "all x.((Fluid(x) & LeaksOutCapillariesIntoSpacesBetweenCells(x)) -> RichInWhiteBloodCells(x))", "score": 0}
{"id": "eqasc_validation_285", "prediction": "all x.((Fluid(x) & LeaksOutCapillaries(x) & SpacesBetweenCells(x)) -> RichInWhiteBloodCells(x))", "score": 0}
{"id": "eqasc_validation_285", "prediction": "all x.((Fluid(x) & LeaksOutOfCathetersIntoSpacesBetweenCells(x)) -> RichInWhiteBloodCells(x))", "score": 0}
{"id": "eqasc_validation_285", "prediction": "all x y.((Fluid(x) & LeaksOutOfCapillaries(x,y) & SpacesBetweenCells(y)) -> RichInWhiteBloodCells(x))", "score": 0}
{"id": "eqasc_validation_285", "prediction": "all x y.((Fluid(x) & LeaksOutOfCapillaries(x) & SpacesBetweenCells(x)) -> RichInWhiteBloodCells(y))", "score": 0}
{"id": "eqasc_validation_285", "prediction": "all x y z.((Fluid(x) & LeaksOutOfCapillaries(x) & SpacesBetweenCells(y) & LeaksInto(x,y)) -> RichInWhiteBloodCells(x))", "score": 0}
{"id": "eqasc_validation_285", "prediction": "all x y.((Fluid(x) & LeaksOutOfCapillaries(x) & SpacesBetweenCells(y)) -> RichInWhiteBloodCells(x,y))", "score": 0}
{"id": "eqasc_validation_285", "prediction": "all x y.((Fluid(x) & LeaksOutOfCapillaries(x) & SpacesBetweenCells(x)) -> RichInWhiteBloodCells(x))", "score": 0}
{"id": "eqasc_validation_285", "prediction": "all x y.((Fluid(x) & LeaksOutOfCapillariesIntoSpacesBetweenCells(x)) -> RichInWhiteBloodCells(x))", "score": 0}
{"id": "eqasc_validation_285", "prediction": "all x y.((Fluid(x) & LeaksOutOfCapillariesIntoSpacesBetweenCells(x)) -> RichInWhiteBloodCells(y))", "score": 0}
{"id": "eqasc_validation_285", "prediction": "all x.((Fluid(x) & LeaksOutOfCapillaries(x) & SpacesBetweenCells(x)) -> RichInWhiteBlueBloodCells(x))", "score": 0}
{"id": "eqasc_validation_285", "prediction": "all x y z.((Fluid(x) & LeaksOutOfCapillaries(x,y) & SpacesBetweenCells(y) & LeaksInto(x,z)) -> RichInWhiteBloodCells(x))", "score": 0}
{"id": "eqasc_validation_285", "prediction": "all x y.((Fluid(x) & LeaksOutCapillaries(x) & SpacesBetweenCells(y)) -> RichInWhiteBloodCells(x))", "score": 0}
{"id": "eqasc_validation_286", "prediction": "all x.((Fluid(x) & RichInProtein(x)) -> LeaksOutOfCapillariesIntoSpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_286", "prediction": "all x y z.((Fluid(x) & RichInProtein(x) & Capillaries(y) & SpacesBetweenCells(z)) -> LeaksOutInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_286", "prediction": "all x y.((Fluid(x) & RichInProtein(x)) -> LeaksOutOfCapillariesIntoSpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_286", "prediction": "all x y.((Fluid(x) & RichInProtein(x)) -> LeaksOutOfCapillariesIntoSpacesBetweenCells(x,y))", "score": 0}
{"id": "eqasc_validation_286", "prediction": "all x y.((Fluid(x) & RichInProtein(x) & Capillaries(y)) -> LeaksOutIntoSpacesBetweenCells(x,y))", "score": 0}
{"id": "eqasc_validation_286", "prediction": "all x y z.((Fluid(x) & RichInProtein(x) & Capillary(y) & SpaceBetweenCells(z)) -> LeaksOutInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_286", "prediction": "all x y z.((Fluid(x) & RichInProtein(x) & Capillary(y) & Capillary(z)) -> LeaksOutIntoSpacesBetweenCells(x,y,z))", "score": 0}
{"id": "eqasc_validation_286", "prediction": "all x.((Fluid(x) & RichInProteins(x)) -> LeaksOutOfCapillariesIntoSpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_286", "prediction": "all x y z.((Fluid(x) & RichInProtein(x) & Capillaries(y) & Capillaries(z)) -> LeaksOutIntoSpacesBetweenCells(x,y,z))", "score": 0}
{"id": "eqasc_validation_286", "prediction": "all x y z.((Fluid(x) & RichInProtein(x) & Capillaries(y) & SpacesBetweenCells(z)) -> LeaksOutToSpacesBetweenCells(x,y,z))", "score": 0}
{"id": "eqasc_validation_286", "prediction": "all x y.((Fluid(x) & RichInProtein(x)) -> LeaksOutOfCapillariesIntoSpacesBetweenCells(y))", "score": 0}
{"id": "eqasc_validation_286", "prediction": "all x y z.((Fluid(x) & RichInProtein(x) & Capillaries(y) & SpacesBetweenCells(z)) -> LeaksOutIntoIntoSpacesBetweenCells(x,y,z))", "score": 0}
{"id": "eqasc_validation_286", "prediction": "all x y.((Fluid(x) & RichInProtein(x) & Capillary(y)) -> LeaksOutIntoSpacesBetweenCells(x,y))", "score": 0}
{"id": "eqasc_validation_286", "prediction": "all x y z.((Fluid(x) & RichInProtein(x) & Capillary(y) & SpacesBetweenCells(z)) -> LeaksOutInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_286", "prediction": "all x y z.((Fluid(x) & RichInProtein(x) & Capillaries(y) & SpacesBetweenCells(z)) -> LeaksOut(x,y,z))", "score": 0}
{"id": "eqasc_validation_286", "prediction": "all x y z.((Fluid(x) & RichInProtein(x) & Capillary(y) & Capillary(z) & LeaksOut(x,y,z)) -> SpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_287", "prediction": "all x y z.((Capillary(x) & Artery(y) & Vein(z)) -> ConnectsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_287", "prediction": "all x y z.((Capillary(x) & Artery(y) & Vein(z)) -> Connects(x,y,z))", "score": 0}
{"id": "eqasc_validation_287", "prediction": "all x y.((Capillary(x) & Artery(y)) -> ConnectsToVines(x,y))", "score": 0}
{"id": "eqasc_validation_287", "prediction": "all x y z.((Capillary(x) & Arterie(y) & Vein(z)) -> ConnectsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_287", "prediction": "all x y z.((Capillary(x) & Arterie(y) & Vein(z)) -> Connects(x,y,z))", "score": 0}
{"id": "eqasc_validation_287", "prediction": "all x y.((Capillary(x) & Artery(y)) -> ConnectsToVins(x,y))", "score": 0}
{"id": "eqasc_validation_287", "prediction": "all x y z.((Capillary(x) & Artery(y) & Vene(z)) -> ConnectsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_287", "prediction": "all x y.((Capillary(x) & Arterie(y)) -> ConnectsToVines(x,y))", "score": 0}
{"id": "eqasc_validation_287", "prediction": "all x y z.((Capillary(x) & Artery(y) & Venes(z)) -> ConnectsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_287", "prediction": "all x y z.((Capillary(x) & Artery(y) & Venes(z)) -> Connects(x,y,z))", "score": 0}
{"id": "eqasc_validation_287", "prediction": "all x y.((Capillary(x) & Artery(y)) -> ConnectsToVine(x,y))", "score": 0}
{"id": "eqasc_validation_287", "prediction": "all x y z.((Capillary(x) & Arterie(y) & Vene(z)) -> ConnectsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_287", "prediction": "all x y z.((Capillary(x) & Artery(y) & Vein(z)) -> Connect(x,y,z))", "score": 0}
{"id": "eqasc_validation_287", "prediction": "all x y z.((Capillary(x) & Artery(y) & Vene(z)) -> Connects(x,y,z))", "score": 0}
{"id": "eqasc_validation_287", "prediction": "all x y.((Capillary(x) & Artery(y)) -> Connects(x,y))", "score": 0}
{"id": "eqasc_validation_287", "prediction": "all x y z.((Capillary(x) & Arterie(y) & Vene(z)) -> Connects(x,y,z))", "score": 0}
{"id": "eqasc_validation_288", "prediction": "all x y z.((Lymph(x) & ArteryConnection(y) & VeinConnection(z)) -> LeaksOut(x,y,z))", "score": 0}
{"id": "eqasc_validation_288", "prediction": "all x.(Lymph(x) -> LeaksOutOfConnectionOfArteriesToVines(x))", "score": 0}
{"id": "eqasc_validation_288", "prediction": "all x y z.((Lymph(x) & Artery(y) & Vein(z)) -> LeaksOutOfConnection(x,y,z))", "score": 0}
{"id": "eqasc_validation_288", "prediction": "all x y z.((Lymph(x) & ArteryConnection(y) & VeinConnection(z)) -> LeaksOutOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_288", "prediction": "all x y.((Lymph(x) & ArteryConnection(y)) -> LeaksOut(x,y))", "score": 0}
{"id": "eqasc_validation_288", "prediction": "all x y z.((Lymph(x) & ArteryConnection(y) & VeinConnection(z)) -> LeaksOutOfConnection(x,y,z))", "score": 0}
{"id": "eqasc_validation_288", "prediction": "all x y z.((Lymph(x) & Arterie(y) & Vein(z)) -> LeaksOutOfConnection(x,y,z))", "score": 0}
{"id": "eqasc_validation_288", "prediction": "all x y z.((Lymph(x) & ArteryConnection(y) & VeinConnection(z)) -> LeaksOutFluid(x,y,z))", "score": 0}
{"id": "eqasc_validation_288", "prediction": "all x.(Lymph(x) -> (Fluid(x) & LeaksOutOfConnectionOfArteriesToVines(x)))", "score": 0}
{"id": "eqasc_validation_288", "prediction": "all x y z.((Lymph(x) & Artery(y) & Vein(z)) -> LeaksOut(x,y,z))", "score": 0}
{"id": "eqasc_validation_288", "prediction": "all x.(Lymph(x) -> LeaksOutOfConnectionOfArteriesToVins(x))", "score": 0}
{"id": "eqasc_validation_288", "prediction": "all x y z.((Lymph(x) & ArteryConnection(y) & VeinConnection(z)) -> LeaksOutOfLymph(x,y,z))", "score": 0}
{"id": "eqasc_validation_288", "prediction": "all x y z.((Lymph(x) & ArteryConnection(y) & Vein(z)) -> LeaksOut(x,y,z))", "score": 0}
{"id": "eqasc_validation_288", "prediction": "all x y z.((Lymph(x) & ArteryConnection(y) & Vein(z)) -> LeaksOutOfConnection(x,y,z))", "score": 0}
{"id": "eqasc_validation_288", "prediction": "all x y z.((Lymph(x) & ArteryConnection(y) & VeinConnection(z)) -> LeaksOut(x,y))", "score": 0}
{"id": "eqasc_validation_288", "prediction": "all x y.((Lymph(x) & ArteryConnection(y)) -> LeaksOutOfConnection(x,y))", "score": 0}
{"id": "eqasc_validation_289", "prediction": "all x.((Antigen(x) & CausesAllergy(x)) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_289", "prediction": "all x.((Antigen(x) & CausesAllergy(x)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_289", "prediction": "all x.((Antigen(x) & CausesAllergy(x)) -> allergen(x))", "score": 0}
{"id": "eqasc_validation_289", "prediction": "all x.(CausesAllergy(x) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_289", "prediction": "all x.(CausesAllergy(x) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_289", "prediction": "all x.((Antigen(x) & CausesAllergie(x)) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_289", "prediction": "all x.((Antigen(x) & CausesAllergie(x)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_289", "prediction": "all x.((Antigen(x) & CausesAllergic(x)) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_289", "prediction": "all x.((Antigen(x) & CausesAllergies(x)) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_289", "prediction": "all x.((Antigen(x) & CausesAllergic(x)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_289", "prediction": "all x.((Antigen(x) & CausesAllergies(x)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_289", "prediction": "all x.(Allergen(x) -> CausesAllergy(x))", "score": 0}
{"id": "eqasc_validation_289", "prediction": "all x.((Antigen(x) & CausesAllergy(x)) -> Allergy(x))", "score": 0}
{"id": "eqasc_validation_289", "prediction": "all x.((Antigen(x) & CausesAllergie(x)) -> allergen(x))", "score": 0}
{"id": "eqasc_validation_289", "prediction": "all x y.((Antigen(x) & CausesAllergy(x)) -> Allergic(y))", "score": 0}
{"id": "eqasc_validation_289", "prediction": "all x y.((Antigen(x) & CausesAllergy(x)) -> Allergen(y))", "score": 0}
{"id": "eqasc_validation_290", "prediction": "all x.(Antigen(x) -> (Protein(x) & ForeignToBody(x)))", "score": 0}
{"id": "eqasc_validation_290", "prediction": "all x.(Antigen(x) -> (ProteinForeignToBody(x)))", "score": 0}
{"id": "eqasc_validation_290", "prediction": "all x.(Antigen(x) -> (ProteinFrequentToBody(x)))", "score": 0}
{"id": "eqasc_validation_290", "prediction": "all x y.((Antigen(x) & Protein(y)) -> ForeignToBody(x,y))", "score": 0}
{"id": "eqasc_validation_290", "prediction": "all x y.((Antigen(x) & Body(y)) -> ForeignProtein(x,y))", "score": 0}
{"id": "eqasc_validation_290", "prediction": "all x.(Antigen(x) -> (ProteinsForeignToBody(x)))", "score": 0}
{"id": "eqasc_validation_290", "prediction": "all x y.((Antigen(x) & Body(y)) -> (Protein(x,y) & ForeignTo(x,y)))", "score": 0}
{"id": "eqasc_validation_290", "prediction": "all x.(Antigen(x) -> (Protein(x,y) & ForeignToBody(y)))", "score": 0}
{"id": "eqasc_validation_290", "prediction": "all x.(Antigen(x) -> ForeignToBody(x))", "score": 0}
{"id": "eqasc_validation_290", "prediction": "all x.(Antigen(x) -> (ProteinFrequentToBody(x) & -ProteinFrequentToBody(x)))", "score": 0}
{"id": "eqasc_validation_290", "prediction": "all x.(Antigen(x) -> (Protein(y) & ForeignToBody(y)))", "score": 0}
{"id": "eqasc_validation_290", "prediction": "all x y.((Antigen(x) & Body(y)) -> ForeignTo(x,y))", "score": 0}
{"id": "eqasc_validation_290", "prediction": "all x.(Antigen(x) -> (ProteinFrequentToBody(x) & ForeignToBody(x)))", "score": 0}
{"id": "eqasc_validation_290", "prediction": "all x.(Antigen(x) -> (ProteinFrequent(x) & Body(x)))", "score": 0}
{"id": "eqasc_validation_290", "prediction": "all x.(Antigen(x) -> (ProteinFreshToBody(x) & ForeignToBody(x)))", "score": 0}
{"id": "eqasc_validation_291", "prediction": "all x.((FrenchProtein(x) & CausesAllergy(x)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_291", "prediction": "all x.((FrenchProtein(x) & CausesAllergy(x)) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_291", "prediction": "all x.((FreshProtein(x) & CausesAllergy(x)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_291", "prediction": "all x.((FreshProtein(x) & CausesAllergy(x)) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_291", "prediction": "all x.((ForeignProtein(x) & CausesAllergy(x)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_291", "prediction": "all x.((ForeignProtein(x) & CausesAllergy(x)) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_291", "prediction": "all x.((FrenchProtein(x) & CausesAllergyReaction(x)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_291", "prediction": "all x.((FrenchProtein(x) & CausesAllergyReaction(x)) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_291", "prediction": "all x.((FreshProtein(x) & CausesAllergyReaction(x)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_291", "prediction": "all x.((FreshProtein(x) & CausesAllergyReaction(x)) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_291", "prediction": "all x.((ForeignProtein(x) & CausesAllergyReaction(x)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_291", "prediction": "all x.((ForeignProtein(x) & CausesAllergyReaction(x)) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_291", "prediction": "all x.((FrenchProtein(x) & CausesAllergy(x)) -> allergen(x))", "score": 0}
{"id": "eqasc_validation_291", "prediction": "all x.((FreshProtein(x) & CausesAllergy(x)) -> allergen(x))", "score": 0}
{"id": "eqasc_validation_291", "prediction": "all x.((ExternalProtein(x) & CausesAllergy(x)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_291", "prediction": "all x.((ExternalProtein(x) & CausesAllergy(x)) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_292", "prediction": "all x.(AsthmaAttack(x) -> CausedByAllergies(x))", "score": 0}
{"id": "eqasc_validation_292", "prediction": "all x.(Asthma(x) -> CausedByAllergies(x))", "score": 0}
{"id": "eqasc_validation_292", "prediction": "all x y.((Asthma(x) & Allergy(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_292", "prediction": "all x y.((Asthma(x) & Allergie(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_292", "prediction": "all x y.((Asthma(x) & Allergies(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_292", "prediction": "all x y.((AsthmaAttack(x) & Allergy(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_292", "prediction": "all x.(AsthmaAttack(x) -> (CausedByAllergies(x) & CausedByAllergies(x)))", "score": 0}
{"id": "eqasc_validation_292", "prediction": "all x.(AsthmaAttack(x) -> CausedByAllergy(x))", "score": 0}
{"id": "eqasc_validation_292", "prediction": "all x.(AsthmaAttack(x) -> (CausedByAllergies(x)))", "score": 0}
{"id": "eqasc_validation_292", "prediction": "all x.(Asthma(x) -> (CausedByAllergies(x)))", "score": 0}
{"id": "eqasc_validation_292", "prediction": "all x.(AsthmaAttack(x) -> (CausedByAllergies(x) | CausedByAllergies(x)))", "score": 0}
{"id": "eqasc_validation_292", "prediction": "all x.(Asthma(x) -> CausedByAllergy(x))", "score": 0}
{"id": "eqasc_validation_292", "prediction": "all x.(Asthma(x) -> (CausedByAllergies(x) & CausedByAllergies(x)))", "score": 0}
{"id": "eqasc_validation_292", "prediction": "all x.(AsthmaAttack(x) -> CausedByAllergics(x))", "score": 0}
{"id": "eqasc_validation_293", "prediction": "all x.(Allergen(x) -> TriggersAsthmaAttacks(x))", "score": 0}
{"id": "eqasc_validation_293", "prediction": "all x.(Allergen(x) -> TriggerAsthmaAttacks(x))", "score": 0}
{"id": "eqasc_validation_293", "prediction": "all x y.((Allergen(x) & AsthmaAttack(y)) -> Triggers(x,y))", "score": 0}
{"id": "eqasc_validation_293", "prediction": "all x y z.((Allergen(x) & AsthmaAttack(y) & AsthmaAttack(z)) -> Triggers(x,y,z))", "score": 0}
{"id": "eqasc_validation_293", "prediction": "all x y.((Allergen(x) & AsthmaAttack(y)) -> TriggersAsthma(x,y))", "score": 0}
{"id": "eqasc_validation_293", "prediction": "all x.(Allergen(x) -> CanTriggerAsthmaAttacks(x))", "score": 0}
{"id": "eqasc_validation_293", "prediction": "all x y.((Allergen(x) & AsthmaAttack(y)) -> TriggersAsthmaAttacks(x,y))", "score": 0}
{"id": "eqasc_validation_293", "prediction": "all x y.((Allergen(x) & AsthmaAttack(y)) -> TriggersAttacks(x,y))", "score": 0}
{"id": "eqasc_validation_293", "prediction": "all x y.((Allergen(x) & AsthmaAttack(y)) -> CanTrigger(x,y))", "score": 0}
{"id": "eqasc_validation_293", "prediction": "all x y z.((Allergen(x) & AsthmaAttack(y) & AsthmaAttack(z)) -> TriggersAttacks(x,y,z))", "score": 0}
{"id": "eqasc_validation_293", "prediction": "all x y z.((Allergen(x) & AsthmaAttack(y) & Allergen(z)) -> Triggers(x,y,z))", "score": 0}
{"id": "eqasc_validation_293", "prediction": "all x y z.((Allergen(x) & AsthmaAttack(y) & AsthmaAttack(z)) -> CanTrigger(x,y,z))", "score": 0}
{"id": "eqasc_validation_293", "prediction": "all x y.((Allergen(x) & AsthmaAttack(y)) -> TriggerAttack(x,y))", "score": 0}
{"id": "eqasc_validation_293", "prediction": "all x y z.((Allergen(x) & AsthmaAttack(y) & Asthma(z)) -> Triggers(x,y,z))", "score": 0}
{"id": "eqasc_validation_293", "prediction": "all x y z.((Allergen(x) & AsthmaAttack(y) & Allergen(z)) -> TriggersAttacks(x,y,z))", "score": 0}
{"id": "eqasc_validation_293", "prediction": "all x y z.((Allergen(x) & AsthmaAttack(y) & AsthmaAttack(z)) -> Triggers(x,y))", "score": 0}
{"id": "eqasc_validation_294", "prediction": "all x y.((Antibody(x) & Antigen(y)) -> ProducedToFight(x,y))", "score": 0}
{"id": "eqasc_validation_294", "prediction": "all x.(Antibody(x) -> ProducedToFightAntigens(x))", "score": 0}
{"id": "eqasc_validation_294", "prediction": "all x.(Antibody(x) -> (ProducedToFightAntigens(x)))", "score": 0}
{"id": "eqasc_validation_294", "prediction": "all x y z.((Antibody(x) & Antigen(y) & Antigen(z)) -> ProducedToFight(x,y,z))", "score": 0}
{"id": "eqasc_validation_294", "prediction": "all x.(Antibody(x) -> exists y.(Antigen(y) & ProducedToFight(x,y)))", "score": 0}
{"id": "eqasc_validation_294", "prediction": "all x.(Antibody(x) -> exists y.(Antigen(y) & ProducedToFight(x,y))))", "score": -1}
{"id": "eqasc_validation_294", "prediction": "all x y z.((Antibody(x) & Antigen(y) & Antigen(z)) -> (ProducedToFight(x,y,z)))", "score": 0}
{"id": "eqasc_validation_294", "prediction": "all x y.((Antibody(x) & Antigen(y)) -> (ProducedToFight(x,y)))", "score": 0}
{"id": "eqasc_validation_294", "prediction": "all x y z.((Antibody(x) & Antigen(y) & Antigen(z)) -> (ProducedToFight(x,y) & ProducedToFight(x,z)))", "score": 0}
{"id": "eqasc_validation_294", "prediction": "all x y z.((Antibody(x) & Antigen(y) & Antigen(z) & ProducedToFight(x,y,z)) -> ProducedToFight(x,y,z))", "score": 0}
{"id": "eqasc_validation_294", "prediction": "all x.(Antibodies(x) -> ProducedToFightAntigens(x))", "score": 0}
{"id": "eqasc_validation_294", "prediction": "all x y.((Antibody(x) & Antigen(y)) -> (ProducedToFight(x,y) | ProducedToFight(x,y)))", "score": 0}
{"id": "eqasc_validation_294", "prediction": "all x y.((Antibody(x) & Antigen(y)) -> (ProducedToFight(x,y) & ProducedToFight(x,y)))", "score": 0}
{"id": "eqasc_validation_294", "prediction": "all x y z.((Antibody(x) & Antigen(y) & Antigen(z)) -> (ProducedToFight(x,y,z) & ProducedToFight(x,y)))", "score": 0}
{"id": "eqasc_validation_294", "prediction": "all x y z.((Antibody(x) & Antigen(y) & Antigen(z) & ProducedToFight(x,y,z)) -> ProducedToFight(x,y))", "score": 0}
{"id": "eqasc_validation_295", "prediction": "all x y.((Antibody(x) & Allergen(y)) -> ProducedToFight(x,y))", "score": 0}
{"id": "eqasc_validation_295", "prediction": "all x y z.((Antibody(x) & Allergen(y) & Allergen(z)) -> ProducedToFight(x,y,z))", "score": 0}
{"id": "eqasc_validation_295", "prediction": "all x y z.((Antibody(x) & Allergen(y) & Allergen(z)) -> (ProducedToFight(x,y,z)))", "score": 0}
{"id": "eqasc_validation_295", "prediction": "all x y z.((Antibody(x) & allergen(y) & Allergen(z)) -> ProducedToFight(x,y,z))", "score": 0}
{"id": "eqasc_validation_295", "prediction": "all x.(Antibody(x) -> (ProducedToFightAllergens(x) & Allergens(x)))", "score": 0}
{"id": "eqasc_validation_295", "prediction": "all x y.((Antibody(x) & allergen(y)) -> ProducedToFight(x,y))", "score": 0}
{"id": "eqasc_validation_295", "prediction": "all x y z.((Antibody(x) & Allergen(y) & Allergen(z)) -> (ProducedToFight(x,y,z) & Allergen(z)))", "score": 0}
{"id": "eqasc_validation_295", "prediction": "all x y.((Antibody(x) & Allergen(y)) -> (ProducedToFight(x,y) | ProducedToFight(x,y)))", "score": 0}
{"id": "eqasc_validation_295", "prediction": "all x y z.((Antibody(x) & Allergen(y) & Allergen(z)) -> (ProducedToFight(x,y,z) & Allergen(y)))", "score": 0}
{"id": "eqasc_validation_295", "prediction": "all x y.((Antibody(x) & Allergen(y)) -> (ProducedToFight(x,y) & Allergen(x)))", "score": 0}
{"id": "eqasc_validation_295", "prediction": "all x y.((Antibody(x) & Allergen(y)) -> (ProducedToFight(x,y) & Allergen(y)))", "score": 0}
{"id": "eqasc_validation_295", "prediction": "all x y.((Antibody(x) & Allergen(y)) -> (ProducedToFight(x,y)))", "score": 0}
{"id": "eqasc_validation_295", "prediction": "all x y z.((Antibody(x) & allergen(y) & Allergen(z)) -> (ProducedToFight(x,y,z)))", "score": 0}
{"id": "eqasc_validation_295", "prediction": "all x y z.((Antibody(x) & Allergen(y) & Allergen(z)) -> (ProducedToFight(x,y,z) & Allergen(y,z)))", "score": 0}
{"id": "eqasc_validation_295", "prediction": "all x y z.((Antibody(x) & Allergen(y) & Allergen(z)) -> (ProducedToFight(x,y) & Allergen(x,z)))", "score": 0}
{"id": "eqasc_validation_295", "prediction": "all x y z.((Antibody(x) & Allergen(y) & Allergen(z) & ProducedToFight(x,y,z)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_296", "prediction": "all x.((Allergen(x) & Pollen(x) & Dust(x)) -> Common(x))", "score": 0}
{"id": "eqasc_validation_296", "prediction": "all x.((Allergen(x) & Pollen(x) & Dust(x)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_296", "prediction": "all x.((Allergen(x) & Pollen(x) & Dust(x)) -> CommonAllergen(x))", "score": 0}
{"id": "eqasc_validation_296", "prediction": "all x.(Allergen(x) -> (Pollen(x) | Dust(x)))", "score": 0}
{"id": "eqasc_validation_296", "prediction": "all x.(CommonAllergen(x) -> (Pollen(x) | Dust(x)))", "score": 0}
{"id": "eqasc_validation_296", "prediction": "exists x.(Allergen(x) & Pollen(x) & Dust(x))", "score": 0}
{"id": "eqasc_validation_296", "prediction": "all x.((Allergen(x) & Pollen(x)) -> Dust(x))", "score": 0}
{"id": "eqasc_validation_296", "prediction": "all x.((Allergen(x) & Pollen(x) & Dust(x)) -> CommonAllergy(x))", "score": 0}
{"id": "eqasc_validation_296", "prediction": "all x.(Allergen(x) -> (Pollens(x) | Dusts(x)))", "score": 0}
{"id": "eqasc_validation_296", "prediction": "all x.(CommonAllergen(x) -> (Pollens(x) | Dusts(x)))", "score": 0}
{"id": "eqasc_validation_296", "prediction": "all x.((Allergen(x) & Common(x)) -> (Pollen(x) | Dust(x)))", "score": 0}
{"id": "eqasc_validation_296", "prediction": "all x.((Allergen(x) & Pollens(x) & Dusts(x)) -> CommonAllergen(x))", "score": 0}
{"id": "eqasc_validation_296", "prediction": "all x.((CommonAllergen(x) & Pollen(x) & Dust(x)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_296", "prediction": "all x.((Allergen(x) & Pollens(x) & Dusts(x)) -> Common(x))", "score": 0}
{"id": "eqasc_validation_296", "prediction": "all x.((CommonAllergen(x) & Pollen(x) & Dust(x)) -> CommonAllergen(x))", "score": 0}
{"id": "eqasc_validation_296", "prediction": "all x.((Allergen(x) & Pollens(x) & Dusts(x)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_297", "prediction": "all x.(Pollen(x) -> (Antigen(x) & CausesAllergy(x)))", "score": 0}
{"id": "eqasc_validation_297", "prediction": "all x.(Pollen(x) -> (Antigen(x) & CanCauseAllergy(x)))", "score": 0}
{"id": "eqasc_validation_297", "prediction": "all x y.((Pollen(x) & Allergy(y)) -> (Antigen(x) & CausesAllergy(x,y)))", "score": 0}
{"id": "eqasc_validation_297", "prediction": "all x.(Pollen(x) -> (Antigen(x) & CanCauseAllergie(x)))", "score": 0}
{"id": "eqasc_validation_297", "prediction": "all x.(Pollen(x) -> (Antigen(x) & CausesAllergie(x)))", "score": 0}
{"id": "eqasc_validation_297", "prediction": "all x y z.((Pollen(x) & Antigen(y) & Allergy(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_297", "prediction": "all x y.((Pollen(x) & Allergy(y)) -> Antigen(x,y))", "score": 0}
{"id": "eqasc_validation_297", "prediction": "all x y.((Pollen(x) & Antigen(y)) -> CausesAllergy(x,y))", "score": 0}
{"id": "eqasc_validation_297", "prediction": "all x y z.((Pollen(x) & Antigen(y) & Allergy(z)) -> CanCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_297", "prediction": "all x y.((Pollen(x) & Allergy(y)) -> (Antigen(x,y) & CausesAllergy(x,y)))", "score": 0}
{"id": "eqasc_validation_297", "prediction": "all x y.((Pollen(x) & Antigen(y)) -> CanCauseAllergy(x,y))", "score": 0}
{"id": "eqasc_validation_297", "prediction": "all x y.((Pollen(x) & Allergy(y)) -> (Antigen(x) & CanCause(x,y)))", "score": 0}
{"id": "eqasc_validation_297", "prediction": "all x y.((Pollen(x) & Allergy(y)) -> Antigen(x))", "score": 0}
{"id": "eqasc_validation_297", "prediction": "all x y.((Pollen(x) & Allergy(y)) -> (Antigen(x,y) & CanCause(x,y)))", "score": 0}
{"id": "eqasc_validation_297", "prediction": "all x.(Pollens(x) -> (Antigen(x) & CausesAllergy(x)))", "score": 0}
{"id": "eqasc_validation_298", "prediction": "all x.(Allergen(x) -> CanCauseAnaphylaxis(x))", "score": 0}
{"id": "eqasc_validation_298", "prediction": "all x.(Allergen(x) -> CausesAnaphylaxis(x))", "score": 0}
{"id": "eqasc_validation_298", "prediction": "exists x.(Allergen(x) & CanCauseAnaphylaxis(x))", "score": 0}
{"id": "eqasc_validation_298", "prediction": "all x y.((Allergen(x) & Allergen(y)) -> CanCauseAnaphylaxis(x,y))", "score": 0}
{"id": "eqasc_validation_298", "prediction": "exists x.(Allergen(x) & CausesAnaphylaxis(x))", "score": 0}
{"id": "eqasc_validation_298", "prediction": "all x y.((Allergen(x) & Allergy(y)) -> CanCauseAnaphylaxis(x,y))", "score": 0}
{"id": "eqasc_validation_298", "prediction": "all x y.((Allergen(x) & Allergen(y)) -> CausesAnaphylaxis(x,y))", "score": 0}
{"id": "eqasc_validation_298", "prediction": "all x y.((Allergen(x) & Allergy(y)) -> CausesAnaphylaxis(x,y))", "score": 0}
{"id": "eqasc_validation_298", "prediction": "all x.((Allergen(x) & CanCauseAnaphylaxis(x)) -> CanCauseAnaphylaxis(x))", "score": 0}
{"id": "eqasc_validation_298", "prediction": "all x y.((Allergen(x) & Allergen(y)) -> CanCauseAnaphylaxis(x))", "score": 0}
{"id": "eqasc_validation_298", "prediction": "all x y.((Allergen(x) & Allergy(y)) -> CanCauseAnaphylaxis(x))", "score": 0}
{"id": "eqasc_validation_298", "prediction": "all x y.((Allergen(x) & Allergen(y)) -> CausesAnaphylaxis(x))", "score": 0}
{"id": "eqasc_validation_298", "prediction": "all x.((Allergen(x) & CausesAnaphylaxis(x)) -> CanCauseAnaphylaxis(x))", "score": 0}
{"id": "eqasc_validation_298", "prediction": "all x y.((Allergen(x) & Allergic(y)) -> CanCauseAnaphylaxis(x,y))", "score": 0}
{"id": "eqasc_validation_298", "prediction": "(exists x.(Allergen(x) & CanCauseAnaphylaxis(x)))", "score": 0}
{"id": "eqasc_validation_298", "prediction": "all x y.((Allergen(x) & Allergy(y)) -> CausesAnaphylaxis(x))", "score": 0}
{"id": "eqasc_validation_299", "prediction": "all x.(Antigen(x) -> CausesCausesAnaphyaxis(x))", "score": 0}
{"id": "eqasc_validation_299", "prediction": "all x.(Antigen(x) -> CausesCauseAnaphyaxis(x))", "score": 0}
{"id": "eqasc_validation_299", "prediction": "all x y.((Antigen(x) & CausesCauseAnaphyaxis(y)) -> CausesCauseAnaphyaxis(x,y))", "score": 0}
{"id": "eqasc_validation_299", "prediction": "all x y.((Antigen(x) & CausesCausesAnaphyaxis(y)) -> CausesCausesAnaphyaxis(x,y))", "score": 0}
{"id": "eqasc_validation_299", "prediction": "all x y z.((Antigen(x) & CausesCauseAnaphyaxis(y) & Antigen(z)) -> CausesCauseAnaphyaxis(x,y,z))", "score": 0}
{"id": "eqasc_validation_299", "prediction": "all x y.((Antigen(x) & Antigen(y)) -> CausesCausesAnaphyaxis(x,y))", "score": 0}
{"id": "eqasc_validation_299", "prediction": "all x y.((Antigen(x) & CausesCauseAnaphyaxis(x,y)) -> CausesCauseAnaphyaxis(x,y))", "score": 0}
{"id": "eqasc_validation_299", "prediction": "all x y z.((Antigen(x) & CauseCauseAnaphyaxis(y) & Antigen(z)) -> CausesCauseAnaphyaxis(x,y,z))", "score": 0}
{"id": "eqasc_validation_299", "prediction": "all x y.((Antigen(x) & CauseCauseAnaphyaxis(y)) -> CausesCauseAnaphyaxis(x,y))", "score": 0}
{"id": "eqasc_validation_299", "prediction": "all x y.((Antigen(x) & CausesCauseAnaphyaxis(x)) -> CausesCauseAnaphyaxis(y))", "score": 0}
{"id": "eqasc_validation_299", "prediction": "all x y.((Antigen(x) & CausesCausesAnaphyaxis(x,y)) -> CausesCausesAnaphyaxis(x,y))", "score": 0}
{"id": "eqasc_validation_299", "prediction": "all x y z.((Antigen(x) & CauseCauseAnaphyaxis(y) & Antigen(z)) -> CauseCauseAnaphyaxis(x,y,z))", "score": 0}
{"id": "eqasc_validation_299", "prediction": "all x y.((Antigen(x) & CauseCauseAnaphyaxis(y)) -> ManyAntigensCauseCauseAnaphyaxis(x,y))", "score": 0}
{"id": "eqasc_validation_299", "prediction": "all x y.((Antigen(x) & CausesCauseAnaphyaxis(x,y)) -> CausesCauseAnaphyaxis(y))", "score": 0}
{"id": "eqasc_validation_299", "prediction": "all x y.((Antigen(x) & Antigen(y)) -> CausesCauseAnaphyaxis(x,y))", "score": 0}
{"id": "eqasc_validation_299", "prediction": "all x y.((Antigen(x) & CausesCausesAnaphyaxis(x)) -> CausesCausesAnaphyaxis(y))", "score": 0}
{"id": "eqasc_validation_300", "prediction": "all x.((Protein(x) & ForeignToBody(x) & CausesAllergies(x)) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_300", "prediction": "all x.((Protein(x) & ForeignToBody(x) & CausesAllergies(x)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_300", "prediction": "all x.((Protein(x) & ForeignToBody(x) & CausesAllergy(x)) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_300", "prediction": "all x.((Protein(x) & ForeignToBody(x) & CausesAllergy(x)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_300", "prediction": "all x.((Protein(x) & ForeignToBody(x) & CausesAllergies(x)) -> allergen(x))", "score": 0}
{"id": "eqasc_validation_300", "prediction": "all x.((Proteins(x) & ForeignToBody(x) & CausesAllergies(x)) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_300", "prediction": "all x.((Protein(x) & ForeignToBody(x) & CausesAllergies(x)) -> Allergens(x))", "score": 0}
{"id": "eqasc_validation_300", "prediction": "all x.((Protein(x) & ForeignToBody(x) & CauseAllergies(x)) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_300", "prediction": "all x.((Protein(x) & ForeignToBody(x) & CausesAllergies(x)) -> Allergics(x))", "score": 0}
{"id": "eqasc_validation_300", "prediction": "all x.((Protein(x) & ForeignToBody(x) & CauseAllergies(x)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_300", "prediction": "all x.((Proteins(x) & ForeignToBody(x) & CausesAllergies(x)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_300", "prediction": "all x.((Proteins(x) & ForeignToBody(x) & CausesAllergies(x)) -> Allergens(x))", "score": 0}
{"id": "eqasc_validation_300", "prediction": "all x.((Proteins(x) & ForeignToBody(x) & CausesAllergies(x)) -> Allergics(x))", "score": 0}
{"id": "eqasc_validation_300", "prediction": "all x.((Protein(x) & ForeignToTheBody(x) & CausesAllergies(x)) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_300", "prediction": "all x y.((Protein(x) & ForeignToBody(x) & CausesAllergies(x)) -> Allergic(y))", "score": 0}
{"id": "eqasc_validation_300", "prediction": "all x.((Proteins(x) & ForeignToBody(x) & CauseAllergies(x)) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_301", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesBacteriaAmount(x,y))", "score": 0}
{"id": "eqasc_validation_301", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Milk(z)) -> ReducesAmountInMilk(x,y,z))", "score": 0}
{"id": "eqasc_validation_301", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Milk(z)) -> ReducesAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_301", "prediction": "all x.(Pasteurization(x) -> ReducesBacteriaInMilk(x))", "score": 0}
{"id": "eqasc_validation_301", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesBacteriaInMilk(x,y))", "score": 0}
{"id": "eqasc_validation_301", "prediction": "all x.(Pasteurization(x) -> ReducesBacteriaAmountInMilk(x))", "score": 0}
{"id": "eqasc_validation_301", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesAmountOfBacteria(x,y))", "score": 0}
{"id": "eqasc_validation_301", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesBacteriaAmountInMilk(x,y))", "score": 0}
{"id": "eqasc_validation_301", "prediction": "all x y z.((Pasteurization(x) & BacteriaInMilk(y) & Milk(z)) -> ReducesAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_301", "prediction": "all x y z.((Pasteurization(x) & BacteriaInMilk(y) & Milk(z)) -> ReducesAmountInMilk(x,y,z))", "score": 0}
{"id": "eqasc_validation_301", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesAlbumOfBacteria(x,y))", "score": 0}
{"id": "eqasc_validation_301", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesAmountOfBacteriaInMilk(x,y))", "score": 0}
{"id": "eqasc_validation_301", "prediction": "all x y.((Pasteurization(x) & Milk(y) & ReducesBacteriaAmount(x,y)) -> ReducesBacteriaAmount(x,y))", "score": 0}
{"id": "eqasc_validation_301", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Milk(z)) -> ReducesAlbum(x,y,z))", "score": 0}
{"id": "eqasc_validation_301", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Milk(z)) -> ReducesInMilk(x,y,z))", "score": 0}
{"id": "eqasc_validation_301", "prediction": "all x y.((Pasteurization(x) & Bacteria(y)) -> ReducesAmountInMilk(x,y))", "score": 0}
{"id": "eqasc_validation_302", "prediction": "all x.(MilkProduct(x) -> (MadeIntoIceCream(x) | MadeIntoCheeseCake(x) | MadeIntoPuddings(x)))", "score": 0}
{"id": "eqasc_validation_302", "prediction": "all x.(MilkProduct(x) -> (MadeIntoIceCream(x) | MadeIntoCheeseCake(x) | MadeIntoPudding(x)))", "score": 0}
{"id": "eqasc_validation_302", "prediction": "all x.(Milk(x) -> (MadeIntoIceCream(x) | MadeIntoCheeseCake(x) | MadeIntoPuddings(x)))", "score": 0}
{"id": "eqasc_validation_302", "prediction": "all x.(MilkProduct(x) -> (MadeIntoIceCream(x) | MadeIntoCheeseCake(x) | MadeIntoPuppies(x)))", "score": 0}
{"id": "eqasc_validation_302", "prediction": "all x.(MilkProduct(x) -> (MadeInIceCream(x) | MadeInCheeseCake(x) | MadeInPuddings(x)))", "score": 0}
{"id": "eqasc_validation_302", "prediction": "all x.(MilkProduct(x) -> (MakesIceCream(x) | MakesCheeseCake(x) | MakesPuddings(x)))", "score": 0}
{"id": "eqasc_validation_302", "prediction": "all x.(MilkProduct(x) -> (MadeIntoIceCream(x) | MadeIntoSheepCake(x) | MadeIntoPuddings(x)))", "score": 0}
{"id": "eqasc_validation_302", "prediction": "all x.(MilkProduct(x) -> (MakesIceCream(x) | MakesCheeseCake(x) | MakesPudding(x)))", "score": 0}
{"id": "eqasc_validation_302", "prediction": "all x.(MilkProduct(x) -> (MadeInto(x,IceCream) | MadeInto(x,CheeseCake) | MadeInto(x,Pudding)))", "score": 0}
{"id": "eqasc_validation_302", "prediction": "all x.(MilkProduct(x) -> (MadeIntoIceCream(x) & MadeIntoCheeseCake(x) & MadeIntoPuddings(x)))", "score": 0}
{"id": "eqasc_validation_302", "prediction": "all x.(MilkProduct(x) -> (MadeIntoIceCream(x) | MadeIntoCherryCake(x) | MadeIntoPuddings(x)))", "score": 0}
{"id": "eqasc_validation_302", "prediction": "all x.(Milk(x) -> (MadeIntoIceCream(x) | MadeIntoCheeseCake(x) | MadeIntoPudding(x)))", "score": 0}
{"id": "eqasc_validation_302", "prediction": "all x.(MilkProduct(x) -> (MadeInto(x,IceCream) | MadeInto(x,CheeseCake) | MadeInto(x,Puddings)))", "score": 0}
{"id": "eqasc_validation_302", "prediction": "all x.(MilkProduct(x) -> (MadeInIceCream(x) | MadeInCheeseCake(x) | MadeInPudding(x)))", "score": 0}
{"id": "eqasc_validation_302", "prediction": "all x.(MilkProduct(x) -> (MadeInto(x,iceCream) | MadeInto(x,cheeseCake) | MadeInto(x,pudding)))", "score": 0}
{"id": "eqasc_validation_303", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Pudding(z)) -> ReducesAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_303", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Pudding(z)) -> ReducesAmountInPudding(x,y,z))", "score": 0}
{"id": "eqasc_validation_303", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Pudding(z)) -> ReducesAmountIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_303", "prediction": "all x y.((Pasteurization(x) & Bacteria(y)) -> ReducesAmountInPudding(x,y))", "score": 0}
{"id": "eqasc_validation_303", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Pudding(z)) -> ReducesAmount(x,y))", "score": 0}
{"id": "eqasc_validation_303", "prediction": "all x y.((Pasteurization(x) & Pudding(y)) -> ReducesBacteriaAmount(x,y))", "score": 0}
{"id": "eqasc_validation_303", "prediction": "all x y.((Pasteurization(x) & Pudding(y)) -> ReducesBacteriaIn(x,y))", "score": 0}
{"id": "eqasc_validation_303", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Pudding(z) & MadeFrom(z)) -> ReducesAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_303", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Pudding(z) & MadeFrom(x,z)) -> ReducesAmount(x,y))", "score": 0}
{"id": "eqasc_validation_303", "prediction": "all x.(Pasteurization(x) -> ReducesBacteriaInPudding(x))", "score": 0}
{"id": "eqasc_validation_303", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Pudding(z) & MadeFrom(x,z)) -> ReducesAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_303", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Pudding(z) & MadeFrom(z)) -> ReducesAmountInPudding(x,y,z))", "score": 0}
{"id": "eqasc_validation_303", "prediction": "all x y.((Pasteurization(x) & Bacteria(y)) -> ReducesAmount(x,y))", "score": 0}
{"id": "eqasc_validation_303", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Pudding(z) & MadeFrom(z)) -> ReducesAmount(x,y))", "score": 0}
{"id": "eqasc_validation_303", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Pudding(z) & MadeFrom(x,y,z)) -> ReducesAmount(x,y))", "score": 0}
{"id": "eqasc_validation_303", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Pudding(z)) -> ReducesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_304", "prediction": "all x y z.((Pasteurization(x) & FrenchScientist(y) & LouisPasteur(z)) -> DiscoveredBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_304", "prediction": "all x y.((Pasteurization(x) & FrenchScientist(y)) -> DiscoveredBy(x,y))", "score": 0}
{"id": "eqasc_validation_304", "prediction": "all x y.((Pasteurization(x) & FrenchScientist(y) & LouisPasteur(y)) -> DiscoveredBy(x,y))", "score": 0}
{"id": "eqasc_validation_304", "prediction": "all x y.((Pasteurization(x) & FrenchScientist(y) & LouisPasteur(y)) -> Discovered(x,y))", "score": 0}
{"id": "eqasc_validation_304", "prediction": "all x y z.((Pasteurization(x) & FrenchScientist(y) & LouisPasteur(z)) -> Discovered(x,y,z))", "score": 0}
{"id": "eqasc_validation_304", "prediction": "all x y.((FrenchScientist(x) & LouisPasteur(y)) -> Pasteurization(x,y))", "score": 0}
{"id": "eqasc_validation_304", "prediction": "all x.((FrenchScientist(x) & LouisPasteur(x)) -> Pasteurization(x))", "score": 0}
{"id": "eqasc_validation_304", "prediction": "all x y z.((Pasteurization(x) & Scientist(y) & LouisPasteur(z)) -> DiscoveredBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_304", "prediction": "all x y.((FrenchScientist(x) & Pasteur(y)) -> DiscoveredBy(x,y))", "score": 0}
{"id": "eqasc_validation_304", "prediction": "all x y z.((Pasteurization(x) & FrenchScientist(y) & LouisPasteur(z)) -> DiscoveredBy(y,z))", "score": 0}
{"id": "eqasc_validation_304", "prediction": "all x y.((Pasteurization(x) & FrenchScientist(y) & LouisPaseur(y)) -> Discovered(x,y))", "score": 0}
{"id": "eqasc_validation_304", "prediction": "all x y.((Pasteurization(x) & FrenchScientist(y) & LouisPaseur(y)) -> DiscoveredBy(x,y))", "score": 0}
{"id": "eqasc_validation_304", "prediction": "all x.(Pasteurization(x) -> DiscoveredByFrenchScientist(x))", "score": 0}
{"id": "eqasc_validation_304", "prediction": "all x y z.((Pasteurization(x) & Scientist(y) & LouisPasteur(z)) -> DiscoveredBy(y,z))", "score": 0}
{"id": "eqasc_validation_305", "prediction": "all x y z.((FrenchScientist(x) & Bacteria(y) & Milk(z)) -> ReducesAmountInMilk(x,y,z))", "score": 0}
{"id": "eqasc_validation_305", "prediction": "all x y z.((FrenchScientist(x) & Bacteria(y) & Milk(z)) -> ReducesInMilk(x,y,z))", "score": 0}
{"id": "eqasc_validation_305", "prediction": "all x y z.((FrenchScientist(x) & Bacteria(y) & Milk(z)) -> ReducesAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_305", "prediction": "all x y.((FrenchScientist(x) & Milk(y)) -> (ReducesBacteriaInMilk(x,y) | ReducesBacteriaInMilk(x,y)))", "score": 0}
{"id": "eqasc_validation_305", "prediction": "all x y.((FrenchScientist(x) & Milk(y)) -> ReducesBacteriaInMilk(x,y))", "score": 0}
{"id": "eqasc_validation_305", "prediction": "all x y z.((FrenchScientist(x) & Bacteria(y) & Milk(z)) -> ReducedInMilk(x,y,z))", "score": 0}
{"id": "eqasc_validation_305", "prediction": "all x y.((FrenchScientist(x) & FrenchMilk(y)) -> ReducesBacteriaInMilk(x,y))", "score": 0}
{"id": "eqasc_validation_305", "prediction": "all x y z.((FrenchScientist(x) & Bacteria(y) & Milk(z)) -> ReducedAmountInMilk(x,y,z))", "score": 0}
{"id": "eqasc_validation_305", "prediction": "all x y z.((FrenchScientist(x) & Bacteria(y) & Milk(z)) -> ReducedAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_305", "prediction": "all x y.((FrenchScientist(x) & Milk(y)) -> ReducesBacteriaAmount(x,y))", "score": 0}
{"id": "eqasc_validation_305", "prediction": "all x y.((FrenchScientist(x) & Milk(y)) -> (ReducesBacteriaInMilk(x,y) & ReducesBacteriaInMilk(x,y)))", "score": 0}
{"id": "eqasc_validation_305", "prediction": "all x y z.((FrenchScientist(x) & BacteriaInMilk(y) & Milk(z)) -> ReducesAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_305", "prediction": "all x y.((FrenchScientist(x) & Milk(y)) -> (ReducesBacteria(x,y) | ReducesBacteria(x,y)))", "score": 0}
{"id": "eqasc_validation_305", "prediction": "all x y.((FrenchScientist(x) & Milk(y)) -> ReducesBacteria(x,y))", "score": 0}
{"id": "eqasc_validation_305", "prediction": "all x y z.((FrenchScientist(x) & Bacteria(y) & Milk(z)) -> ReducesAlbum(x,y,z))", "score": 0}
{"id": "eqasc_validation_305", "prediction": "all x y z.((FrenchScientist(x) & BacteriaInMilk(y) & Milk(z)) -> ReducesAmountInMilk(x,y,z))", "score": 0}
{"id": "eqasc_validation_306", "prediction": "all x.(Bacteria(x) -> UnicellularOrganism(x))", "score": 0}
{"id": "eqasc_validation_306", "prediction": "all x.(Bacteria(x) -> (UnicellularOrganism(x) & Organism(x)))", "score": 0}
{"id": "eqasc_validation_306", "prediction": "all x.(Bacteria(x) -> (UnicellularOrganism(x) & UnicellularOrganism(x)))", "score": 0}
{"id": "eqasc_validation_306", "prediction": "all x.(Bacteria(x) -> (UnicellularOrganism(x) & -UnicellularOrganism(x)))", "score": 0}
{"id": "eqasc_validation_306", "prediction": "all x y.((Bacteria(x) & Organism(y)) -> Unicellular(x))", "score": 0}
{"id": "eqasc_validation_306", "prediction": "all x.(Bacteria(x) -> (UnicellularOrganism(x) | UnicellularOrganism(x)))", "score": 0}
{"id": "eqasc_validation_306", "prediction": "all x.(Bacteria(x) -> IsUnicellularOrganism(x))", "score": 0}
{"id": "eqasc_validation_306", "prediction": "all x y.((Bacteria(x) & Organism(y)) -> Unicellular(x,y))", "score": 0}
{"id": "eqasc_validation_306", "prediction": "all x.(Bacteria(x) -> (UnicellularOrganism(x) & CellularOrganism(x)))", "score": 0}
{"id": "eqasc_validation_306", "prediction": "all x.(Bacteria(x) -> (UnicellularOrganism(x) & HasUnicellularOrganism(x)))", "score": 0}
{"id": "eqasc_validation_307", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesUnicellularOrganisms(x,y))", "score": 0}
{"id": "eqasc_validation_307", "prediction": "all x.(Pasteurization(x) -> ReducesUnicellularOrganismsInMilk(x))", "score": 0}
{"id": "eqasc_validation_307", "prediction": "all x.(Pasteurization(x) -> ReducesUnicellularOrganisms(x))", "score": 0}
{"id": "eqasc_validation_307", "prediction": "all x y z.((Pasteurization(x) & Milk(y) & UnicellularOrganism(z)) -> ReducesAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_307", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesUnicellularOrganismsInMilk(x,y))", "score": 0}
{"id": "eqasc_validation_307", "prediction": "all x y z.((Pasteurization(x) & UnicellularOrganism(y) & Milk(z)) -> ReducesAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_307", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesAmountOfUnicellularOrganisms(x,y))", "score": 0}
{"id": "eqasc_validation_307", "prediction": "all x y.((Pastorization(x) & Milk(y)) -> ReducesUnicellularOrganisms(x,y))", "score": 0}
{"id": "eqasc_validation_307", "prediction": "all x y.((Pastaurization(x) & Milk(y)) -> ReducesUnicellularOrganisms(x,y))", "score": 0}
{"id": "eqasc_validation_307", "prediction": "all x y z.((Pasteurization(x) & Milk(y) & UnicellularOrganism(z)) -> ReducesAmountInMilk(x,y,z))", "score": 0}
{"id": "eqasc_validation_307", "prediction": "all x y z.((Pasteurization(x) & UnicellularOrganism(y) & Milk(z)) -> ReducesAmountInMilk(x,y,z))", "score": 0}
{"id": "eqasc_validation_307", "prediction": "all x y z.((Pasteurization(x) & Milk(y) & UnicellularOrganism(z)) -> ReducesAmount(x,z))", "score": 0}
{"id": "eqasc_validation_307", "prediction": "all x y z.((Pasteurization(x) & Milk(y) & UnicellularOrganisms(z)) -> ReducesAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_307", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesUnicellularOrganismsIn(x,y))", "score": 0}
{"id": "eqasc_validation_307", "prediction": "all x y z.((Pasteurization(x) & Milk(y) & UnicellularOrganism(z)) -> ReducesAmountIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_307", "prediction": "all x y z.((Pasteurization(x) & Milk(y) & UnicellularOrganism(z)) -> ReducesInMilk(x,y,z))", "score": 0}
{"id": "eqasc_validation_308", "prediction": "all x.(Pasteurization(x) -> (DestroysBacteriaInMilk(x) & CausesTuberculosis(x)))", "score": 0}
{"id": "eqasc_validation_308", "prediction": "all x.(Pasteurization(x) -> (DestroysBacteria(x) & CausesTuberculosis(x)))", "score": 0}
{"id": "eqasc_validation_308", "prediction": "all x y.((Pasteurization(x) & Bacteria(y)) -> (Destroys(x,y) & CausesTuberculosis(y)))", "score": 0}
{"id": "eqasc_validation_308", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Milk(z)) -> (Destroys(x,y) & CausesTuberculosis(y,z)))", "score": 0}
{"id": "eqasc_validation_308", "prediction": "all x y.((Pasteurization(x) & BacteriaInMilk(y) & CausesTuberculosis(y)) -> Destroys(x,y))", "score": 0}
{"id": "eqasc_validation_308", "prediction": "all x y.((Pasteurization(x) & BacteriaInMilk(y) & CausesTuberculosis(y)) -> Disrupts(x,y))", "score": 0}
{"id": "eqasc_validation_308", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Milk(z) & CausesTuberculosis(y,z)) -> Destroys(x,y,z))", "score": 0}
{"id": "eqasc_validation_308", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Milk(z) & CausesTuberculosis(y,z)) -> Disrupts(x,y,z))", "score": 0}
{"id": "eqasc_validation_308", "prediction": "all x y.((Pasteurization(x) & Bacteria(y)) -> (Destroys(x,y) & CausesTuberculosis(x)))", "score": 0}
{"id": "eqasc_validation_308", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Milk(z) & CausesTuberculosis(y,z)) -> Destroys(x,y))", "score": 0}
{"id": "eqasc_validation_308", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Milk(z) & CausesTuberculosis(y,z)) -> Disrupts(x,y))", "score": 0}
{"id": "eqasc_validation_308", "prediction": "all x y.((Pasteurization(x) & BacteriaInMilk(y) & CausesTuberculosis(y)) -> Disintegrates(x,y))", "score": 0}
{"id": "eqasc_validation_308", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Milk(z)) -> (Destroys(x,y) & CausesTuberculosis(x,z)))", "score": 0}
{"id": "eqasc_validation_309", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesCauseOfTuberculosis(x,y))", "score": 0}
{"id": "eqasc_validation_309", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesTuberculosisCause(x,y))", "score": 0}
{"id": "eqasc_validation_309", "prediction": "all x y z.((Pasteurization(x) & Tuberculosis(y) & Milk(z)) -> ReducesCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_309", "prediction": "all x.(Pasteurization(x) -> ReducesCauseOfTuberculosisInMilk(x))", "score": 0}
{"id": "eqasc_validation_309", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesCauseOfTuberculosisInMilk(x,y))", "score": 0}
{"id": "eqasc_validation_309", "prediction": "all x y z.((Pasteurization(x) & Tuberculosis(y) & Milk(z)) -> ReducesCauseInMilk(x,y,z))", "score": 0}
{"id": "eqasc_validation_309", "prediction": "all x y z.((Pasteurization(x) & Tuberculosis(y) & Milk(z)) -> ReducesCauseIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_309", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesCauseOfTuberculosisIn(x,y))", "score": 0}
{"id": "eqasc_validation_309", "prediction": "all x y z.((Pasteurization(x) & Tuberculosis(y) & Milk(z) & ReducesCause(x,y,z)) -> ReducesCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_309", "prediction": "all x y.((Pasteurization(x) & Milk(y) & ReducesCauseOfTuberculosis(x,y)) -> ReducesCauseOfTuberculosis(x,y))", "score": 0}
{"id": "eqasc_validation_309", "prediction": "all x.(Pasteurization(x) -> ReducesTuberculosisCause(x))", "score": 0}
{"id": "eqasc_validation_309", "prediction": "all x y z.((Pasteurization(x) & Tuberculosis(y) & Milk(z)) -> ReducesCause(x,y))", "score": 0}
{"id": "eqasc_validation_309", "prediction": "all x.(Pasteurization(x) -> ReducesTuberculosisCauseInMilk(x))", "score": 0}
{"id": "eqasc_validation_309", "prediction": "all x y.((Pasteurization(x) & Milk(y) & ReducesTuberculosisCause(x,y)) -> ReducesTuberculosisCause(x,y))", "score": 0}
{"id": "eqasc_validation_309", "prediction": "all x y z.((Pasteurization(x) & TuberculosisCause(y) & Milk(z)) -> ReducesCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_310", "prediction": "all x y.((Pasteurization(x) & Germ(y)) -> (KillsByHeating(x,y) & LouisPasteur(x)))", "score": 0}
{"id": "eqasc_validation_310", "prediction": "all x.(Pasteurization(x) -> (KillingGermsByHeating(x) & LouisPasteur(x)))", "score": 0}
{"id": "eqasc_validation_310", "prediction": "all x.((Pasteurization(x) & KillingGermsByHeating(x)) -> LouisPasteur(x))", "score": 0}
{"id": "eqasc_validation_310", "prediction": "all x y.((Pasteurization(x) & Germ(y)) -> (DevelopedByLouisPasteur(x) & KillsByHeating(x,y)))", "score": 0}
{"id": "eqasc_validation_310", "prediction": "all x.(Pasteurization(x) -> (KillsGermsByHeating(x) & LouisPasteur(x)))", "score": 0}
{"id": "eqasc_validation_310", "prediction": "all x y.((Pasteurization(x) & Germ(y)) -> KillsByHeating(x,y))", "score": 0}
{"id": "eqasc_validation_310", "prediction": "all x y.((Pasteurization(x) & Germ(y)) -> (DevelopedBy(x,y) & LouisPasteur(x)))", "score": 0}
{"id": "eqasc_validation_310", "prediction": "all x y.((Pasteurization(x) & Germ(y)) -> (DevelopedBy(x,LouisPasteur) & KillsByHeating(x,y)))", "score": 0}
{"id": "eqasc_validation_310", "prediction": "all x.((Pasteurization(x) & KillingGermsByHeating(x)) -> LouisPaseur(x))", "score": 0}
{"id": "eqasc_validation_310", "prediction": "all x y.((Pasteurization(x) & Germs(y)) -> (DevelopedByLouisPasteur(x) & KillsByHeating(x,y)))", "score": 0}
{"id": "eqasc_validation_310", "prediction": "all x y z.((Pasteurization(x) & Germ(y) & Heater(z)) -> (DevelopedBy(x,y) & LouisPasteur(x)))", "score": 0}
{"id": "eqasc_validation_310", "prediction": "all x.((Pasteurization(x) & KillingGermsByHeating(x)) -> LouisPastre(x))", "score": 0}
{"id": "eqasc_validation_310", "prediction": "all x y z.((Pasteurization(x) & Germ(y) & Heater(z)) -> (DevelopedBy(x,y) & DevelopedBy(x,z)))", "score": 0}
{"id": "eqasc_validation_310", "prediction": "all x y z.((Pasteurization(x) & Germ(y) & Heating(z)) -> (DevelopedBy(x,y) & LouisPasteur(x)))", "score": 0}
{"id": "eqasc_validation_310", "prediction": "all x y z.((Pasteurization(x) & Germ(y) & Heat(z)) -> (DevelopedBy(x,y) & LouisPasteur(x)))", "score": 0}
{"id": "eqasc_validation_310", "prediction": "all x y.((Pasteurization(x) & Germ(y)) -> (KillsByHeating(x,y) & LouisPastre(x)))", "score": 0}
{"id": "eqasc_validation_311", "prediction": "all x y z.((Milk(x) & Milk(y) & Bacteria(z) & Heating(x,y)) -> ReducesAmountOfBacteria(x,z))", "score": 0}
{"id": "eqasc_validation_311", "prediction": "all x y.((Milk(x) & Heating(y)) -> ReducesAmountOfBacteria(x,y))", "score": 0}
{"id": "eqasc_validation_311", "prediction": "all x.((HeatingMilk(x) & ReducesBacteriaAmount(x)) -> ReducesBacteriaAmount(x))", "score": 0}
{"id": "eqasc_validation_311", "prediction": "all x y z.((Milk(x) & Milk(y) & Bacteria(z)) -> ReducesAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_311", "prediction": "all x.((HeatingMilk(x) & ReducesAmountOfBacteria(x)) -> ReducesAmountOfBacteria(x))", "score": 0}
{"id": "eqasc_validation_311", "prediction": "all x y.((HeatingMilk(x) & Bacteria(y)) -> ReducesAmount(x,y))", "score": 0}
{"id": "eqasc_validation_311", "prediction": "all x y z.((Milk(x) & Milk(y) & Bacteria(z) & Heating(x,y)) -> ReducesAmount(x,z))", "score": 0}
{"id": "eqasc_validation_311", "prediction": "all x.(HeatingMilk(x) -> ReducesBacteriaAmount(x))", "score": 0}
{"id": "eqasc_validation_311", "prediction": "all x y z.((Milk(x) & Milk(y) & Bacteria(z) & Heats(x,y)) -> ReducesAmountOfBacteria(x,z))", "score": 0}
{"id": "eqasc_validation_311", "prediction": "all x y.((WarmingMilk(x) & Bacteria(y)) -> ReducesAmount(x,y))", "score": 0}
{"id": "eqasc_validation_311", "prediction": "all x.((Milk(x) & Heating(x)) -> ReducesBacteriaAmount(x))", "score": 0}
{"id": "eqasc_validation_311", "prediction": "all x y.((Milk(x) & Heating(y)) -> ReducesBacteriaAmount(x,y))", "score": 0}
{"id": "eqasc_validation_311", "prediction": "all x.((Milk(x) & Heating(x)) -> ReducesAmountOfBacteria(x))", "score": 0}
{"id": "eqasc_validation_311", "prediction": "all x.(HeatingMilk(x) -> ReducesAmountOfBacteria(x))", "score": 0}
{"id": "eqasc_validation_311", "prediction": "all x y z.((Milk(x) & Milk(y) & Bacteria(z) & Heats(x,y)) -> ReducesAmount(x,z))", "score": 0}
{"id": "eqasc_validation_311", "prediction": "all x y.((Milk(x) & Heating(x,y)) -> ReducesAmountOfBacteria(y))", "score": 0}
{"id": "eqasc_validation_312", "prediction": "all x.(Cow(x) -> ProducesMilk(x))", "score": 0}
{"id": "eqasc_validation_312", "prediction": "all x y.((Cow(x) & Milk(y)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_validation_312", "prediction": "all x y z.((Cow(x) & Milk(y) & Milk(z)) -> Produces(x,y,z))", "score": 0}
{"id": "eqasc_validation_312", "prediction": "all x y.((Cow(x) & Milk(y)) -> Produce(x,y))", "score": 0}
{"id": "eqasc_validation_312", "prediction": "all x y z.((Cow(x) & Milk(y) & Milk(z)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_validation_312", "prediction": "all x.(Cow(x) -> ProduceMilk(x))", "score": 0}
{"id": "eqasc_validation_312", "prediction": "all x.(Chocolate(x) -> ProducesMilk(x))", "score": 0}
{"id": "eqasc_validation_312", "prediction": "all x y z.((Cow(x) & Milk(y) & Milk(z)) -> Produce(x,y,z))", "score": 0}
{"id": "eqasc_validation_312", "prediction": "all x.((Cow(x) & Milk(y)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_validation_312", "prediction": "all x.(Choice(x) -> ProducesMilk(x))", "score": 0}
{"id": "eqasc_validation_312", "prediction": "all x y z.((Cow(x) & Milk(y) & Milk(z)) -> Produce(x,y))", "score": 0}
{"id": "eqasc_validation_312", "prediction": "all x.(Bull(x) -> ProducesMilk(x))", "score": 0}
{"id": "eqasc_validation_313", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Cow(z)) -> ReducesAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_313", "prediction": "all x y.((Pasteurization(x) & Cow(y)) -> ReducesBacteriaAmount(x,y))", "score": 0}
{"id": "eqasc_validation_313", "prediction": "all x y.((Pasteurization(x) & Cow(y)) -> ReducesBacteriaIn(x,y))", "score": 0}
{"id": "eqasc_validation_313", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Cow(z)) -> ReducesAmountIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_313", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Cow(z)) -> ReducesAmount(x,y))", "score": 0}
{"id": "eqasc_validation_313", "prediction": "all x y.((Pasteurization(x) & Cow(y)) -> ReducesBacteria(x,y))", "score": 0}
{"id": "eqasc_validation_313", "prediction": "all x y z.((Cow(x) & Pasteurization(y) & Bacteria(z)) -> ReducesAmount(y,z))", "score": 0}
{"id": "eqasc_validation_313", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Cow(z)) -> ReducesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_313", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Cow(z) & Produces(z,y)) -> ReducesAmount(x,y))", "score": 0}
{"id": "eqasc_validation_313", "prediction": "all x y.((Pasteurization(x) & Cow(y)) -> ReducesBacteriaAmountIn(x,y))", "score": 0}
{"id": "eqasc_validation_313", "prediction": "all x y.((Pasteurization(x) & Cow(y)) -> ReducesAmountOfBacteria(x,y))", "score": 0}
{"id": "eqasc_validation_313", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Cow(z)) -> ReducesAmountInCow(x,y,z))", "score": 0}
{"id": "eqasc_validation_313", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Cow(z)) -> ReducesAmountInBacteria(x,y,z))", "score": 0}
{"id": "eqasc_validation_313", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Cow(z)) -> (ReducesAmount(x,y) & Produces(z,y)))", "score": 0}
{"id": "eqasc_validation_313", "prediction": "all x y z.((Pasteurization(x) & Bacteria(y) & Cow(z)) -> ReducesAmountInProduced(x,y,z))", "score": 0}
{"id": "eqasc_validation_313", "prediction": "all x y z.((Pasteurization(x) & BacteriaIn(y) & Cow(z)) -> ReducesAmountIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_314", "prediction": "all x.(Pasteurization(x) -> (MildHeatingProcess(x) & KillsPathogenicMicroorganisms(x) & InMilk(x)))", "score": 0}
{"id": "eqasc_validation_314", "prediction": "all x.(Pasteurization(x) -> (MildHeatingProcess(x) & KillsPathogenicMicroorganismsInMilk(x)))", "score": 0}
{"id": "eqasc_validation_314", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> (MildHeatingProcess(x) & KillsPathogenicMicroorganisms(x,y)))", "score": 0}
{"id": "eqasc_validation_314", "prediction": "all x.(Pasteurization(x) -> (MildHeating(x) & KillsPathogenicMicroorganisms(x) & InMilk(x)))", "score": 0}
{"id": "eqasc_validation_314", "prediction": "all x.(Pasteurization(x) -> (MildHeatingProcess(x) & KillsPathogenicMicroorganisms(x)))", "score": 0}
{"id": "eqasc_validation_314", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> (MildHeatingProcess(x,y) & KillsPathogenicMicroorganisms(x,y)))", "score": 0}
{"id": "eqasc_validation_314", "prediction": "all x.(Pastorization(x) -> (MildHeatingProcess(x) & KillsPathogenicMicroorganisms(x) & InMilk(x)))", "score": 0}
{"id": "eqasc_validation_314", "prediction": "all x.(Pasteurization(x) -> (MildHeating(x) & KillsPathogenicMicroorganismsInMilk(x)))", "score": 0}
{"id": "eqasc_validation_314", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> KillsPathogenicMicroorganisms(x,y))", "score": 0}
{"id": "eqasc_validation_314", "prediction": "all x.(Pastorization(x) -> (MildHeatingProcess(x) & KillsPathogenicMicroorganismsInMilk(x)))", "score": 0}
{"id": "eqasc_validation_314", "prediction": "all x y z.((Pasteurization(x) & MildHeatingProcess(y) & PathogenicMicroorganism(z)) -> KillsInMilk(x,y,z))", "score": 0}
{"id": "eqasc_validation_314", "prediction": "all x.(Pasteurization(x) -> (MildHeatingProcess(x) & KillsPathogenicMicro-Organisms(x) & InMilk(x)))", "score": -1}
{"id": "eqasc_validation_314", "prediction": "all x.(Pastaurization(x) -> (MildHeatingProcess(x) & KillsPathogenicMicroorganisms(x) & InMilk(x)))", "score": 0}
{"id": "eqasc_validation_314", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> (MildHeatingProcess(x) & KillsPathogenicMicroorganisms(x)))", "score": 0}
{"id": "eqasc_validation_315", "prediction": "all x.(MildHeatingProcess(x) -> ReducesBacteriaInMilk(x))", "score": 0}
{"id": "eqasc_validation_315", "prediction": "all x.((HeatingProcess(x) & Mild(x)) -> ReducesBacteriaInMilk(x))", "score": 0}
{"id": "eqasc_validation_315", "prediction": "all x y.((MildHeatingProcess(x) & Milk(y)) -> ReducesBacteria(x,y))", "score": 0}
{"id": "eqasc_validation_315", "prediction": "all x y z.((MildHeatingProcess(x) & Bacteria(y) & Milk(z)) -> Reduces(x,y,z))", "score": 0}
{"id": "eqasc_validation_315", "prediction": "all x.(MildHeatingProcess(x) -> ReducesBacteria(x))", "score": 0}
{"id": "eqasc_validation_315", "prediction": "all x.((HeatingProcess(x) & Mild(x)) -> ReducesBacteria(x))", "score": 0}
{"id": "eqasc_validation_315", "prediction": "all x y.((MildHeatingProcess(x) & Bacteria(y)) -> ReducesInMilk(x,y))", "score": 0}
{"id": "eqasc_validation_315", "prediction": "all x y.((MildHeatingProcess(x) & BacteriaInMilk(y)) -> Reduces(x,y))", "score": 0}
{"id": "eqasc_validation_315", "prediction": "all x y.((MildHeatingProcess(x) & Milk(y)) -> ReducesBacteriaIn(x,y))", "score": 0}
{"id": "eqasc_validation_315", "prediction": "all x y z.((MildHeatingProcess(x) & BacteriaInMilk(y) & Milk(z)) -> Reduces(x,y,z))", "score": 0}
{"id": "eqasc_validation_315", "prediction": "all x y z.((MildHeatingProcess(x) & Bacteria(y) & Milk(z)) -> ReducesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_315", "prediction": "all x.(MildHeating(x) -> ReducesBacteriaInMilk(x))", "score": 0}
{"id": "eqasc_validation_315", "prediction": "all x y z.((MildHeatingProcess(x) & Bacteria(y) & Milk(z) & Reduces(x,y,z)) -> Reduces(x,y,z))", "score": 0}
{"id": "eqasc_validation_315", "prediction": "all x y.((HeatingProcess(x) & Milk(y)) -> ReducesBacteria(x,y))", "score": 0}
{"id": "eqasc_validation_315", "prediction": "all x y z.((MildHeatingProcess(x) & Bacteria(y) & Milk(z)) -> ReducesInMilk(x,y,z))", "score": 0}
{"id": "eqasc_validation_315", "prediction": "all x y.((MildHeatingProcess(x) & Milk(y)) -> ReducesBacteriaInMilk(x,y))", "score": 0}
{"id": "eqasc_validation_316", "prediction": "all x.((Bacteria(x) | BlueGreenBacteria(x)) -> ProkaryoticCell(x))", "score": 0}
{"id": "eqasc_validation_316", "prediction": "all x.((Bacteria(x) & BlueGreenBacteria(x)) -> ProkaryoticCell(x))", "score": 0}
{"id": "eqasc_validation_316", "prediction": "all x y.((Bacteria(x) & BlueGreenBacteria(y)) -> ProkaryoticCell(x))", "score": 0}
{"id": "eqasc_validation_316", "prediction": "all x.((Bacteria(x) | BlueGreen(x)) -> ProkaryoticCell(x))", "score": 0}
{"id": "eqasc_validation_316", "prediction": "all x y.((Bacteria(x) & BlueGreenBacteria(y)) -> (ProkaryoticCell(x) & ProkaryoticCell(y)))", "score": 0}
{"id": "eqasc_validation_316", "prediction": "all x y.((Bacteria(x) & BlueGreen(y)) -> (ProkaryoticCell(x) & ProkaryoticCell(y)))", "score": 0}
{"id": "eqasc_validation_316", "prediction": "all x y.((Bacteria(x) & BlueGreenBacteria(y)) -> (ProkaryoticCell(x) & ProkaryoticCell(x)))", "score": 0}
{"id": "eqasc_validation_316", "prediction": "all x y.((Bacteria(x) & BlueGreen(y)) -> ProkaryoticCell(x))", "score": 0}
{"id": "eqasc_validation_316", "prediction": "all x.((Bacteria(x) | BlueGreenBacteria(x)) -> ProkaryoticCells(x))", "score": 0}
{"id": "eqasc_validation_316", "prediction": "all x.(ProkaryoticCell(x) -> (Bacteria(x) | BlueGreenBacteria(x)))", "score": 0}
{"id": "eqasc_validation_316", "prediction": "all x y.((Bacteria(x) & BlueGreenBacteria(y)) -> ProkaryoticCell(x,y))", "score": 0}
{"id": "eqasc_validation_316", "prediction": "all x y.((Bacteria(x) & BlueGreen(y)) -> (ProkaryoticCell(x) & ProkaryoticCell(x)))", "score": 0}
{"id": "eqasc_validation_316", "prediction": "all x y.((Bacteria(x) & BlueGreenBacteria(y)) -> (ProkaryoticCell(x) | ProkaryoticCell(y)))", "score": 0}
{"id": "eqasc_validation_316", "prediction": "all x.(Bacteria(x) & BlueGreenBacteria(x)) -> ProkaryoticCell(x))", "score": -1}
{"id": "eqasc_validation_316", "prediction": "all x.((Bacteria(x) & BlueGreen(x)) -> ProkaryoticCell(x))", "score": 0}
{"id": "eqasc_validation_317", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesProkaryoticCellsInMilk(x,y))", "score": 0}
{"id": "eqasc_validation_317", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesProkaryoticCells(x,y))", "score": 0}
{"id": "eqasc_validation_317", "prediction": "all x.(Pasteurization(x) -> ReducesProkaryoticCellsInMilk(x))", "score": 0}
{"id": "eqasc_validation_317", "prediction": "all x y z.((Pasteurization(x) & Milk(y) & Milk(z)) -> ReducesProkaryoticCellsInMilk(x,y,z))", "score": 0}
{"id": "eqasc_validation_317", "prediction": "all x y z.((Pasteurization(x) & Milk(y) & Milk(z)) -> ReducesProkaryoticCells(x,y,z))", "score": 0}
{"id": "eqasc_validation_317", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesAmountOfProkaryoticCells(x,y))", "score": 0}
{"id": "eqasc_validation_317", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesProkaryoticCellsAmount(x,y))", "score": 0}
{"id": "eqasc_validation_317", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesAmountOfProkaryoticCellsInMilk(x,y))", "score": 0}
{"id": "eqasc_validation_317", "prediction": "all x.(Pasteurization(x) -> ReducesProkaryoticCells(x))", "score": 0}
{"id": "eqasc_validation_317", "prediction": "all x y z.((Pasteurization(x) & Milk(y) & Milk(z)) -> ReducesAmountOfProkaryoticCellsInMilk(x,y,z))", "score": 0}
{"id": "eqasc_validation_317", "prediction": "all x y z.((Pasteurization(x) & Milk(y) & Milk(z)) -> ReducesProkaryoticCellsAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_317", "prediction": "all x y.((Pasteurization(x) & Milk(y) & ReducesProkaryoticCells(x,y)) -> ReducesProkaryoticCells(x,y))", "score": 0}
{"id": "eqasc_validation_317", "prediction": "all x y z.((Pasteurization(x) & Milk(y) & Milk(z)) -> ReducesAmountOfProkaryoticCells(x,y,z))", "score": 0}
{"id": "eqasc_validation_317", "prediction": "all x y.((Pasteurization(x) & Milk(y) & ReducesProkaryoticCells(x,y)) -> ReducesProkaryoticCellsInMilk(x,y))", "score": 0}
{"id": "eqasc_validation_317", "prediction": "all x.(Pasteurization(x) -> ReducesAmountOfProkaryoticCellsInMilk(x))", "score": 0}
{"id": "eqasc_validation_317", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesProkaryoticCellsInMilk(x))", "score": 0}
{"id": "eqasc_validation_318", "prediction": "all x.((Heat(x) & Pasteurization(x)) -> ReducesVitaminContent(x))", "score": 0}
{"id": "eqasc_validation_318", "prediction": "all x y.((Heat(x) & Pasteurization(y)) -> ReducesVitaminContent(x,y))", "score": 0}
{"id": "eqasc_validation_318", "prediction": "all x y.((Heat(x) & Pasteurization(y)) -> ReducesVitaminContent(x))", "score": 0}
{"id": "eqasc_validation_318", "prediction": "all x y z.((Heat(x) & Pasteurization(y) & VitaminContent(z)) -> Reduces(x,y,z))", "score": 0}
{"id": "eqasc_validation_318", "prediction": "all x y z.((Heat(x) & Pasteurization(y) & VitaminContent(z)) -> Reduces(x,z))", "score": 0}
{"id": "eqasc_validation_318", "prediction": "all x y.((Heat(x) & Pasteurization(y) & VitaminContent(y)) -> Reduces(x,y))", "score": 0}
{"id": "eqasc_validation_318", "prediction": "all x y.((Heat(x) & Pasteurization(x) & VitaminContent(y)) -> Reduces(x,y))", "score": 0}
{"id": "eqasc_validation_318", "prediction": "all x y z.((Heat(x) & Pasteurization(y) & VitaminContent(z) & Reduces(x,z)) -> Reduces(x,z))", "score": 0}
{"id": "eqasc_validation_318", "prediction": "all x y.((Heat(x) & Pasteurization(y) & VitaminContent(z)) -> Reduces(x,z))", "score": 0}
{"id": "eqasc_validation_318", "prediction": "all x y z.((Heat(x) & Pasteurization(y) & VitaminContent(z)) -> Reduces(x,y))", "score": 0}
{"id": "eqasc_validation_318", "prediction": "all x y.((Heat(x) & Pasteurization(y) & VitaminContent(x)) -> Reduces(x,y))", "score": 0}
{"id": "eqasc_validation_318", "prediction": "all x.((Heat(x) & Pasteurization(x)) -> ReducedVitaminContent(x))", "score": 0}
{"id": "eqasc_validation_318", "prediction": "all x y.((Heat(x) & Pasteurization(x)) -> ReducesVitaminContent(y))", "score": 0}
{"id": "eqasc_validation_318", "prediction": "all x y z.((Heat(x) & Pasteurization(y) & Vitamin(z)) -> ReducesContent(x,z))", "score": 0}
{"id": "eqasc_validation_318", "prediction": "all x y.((Hot(x) & Pasteurization(y)) -> ReducesVitaminContent(x,y))", "score": 0}
{"id": "eqasc_validation_318", "prediction": "all x y.((Heat(x) & Pasteurization(y) & VitaminContent(z)) -> Reduces(x,y,z))", "score": 0}
{"id": "eqasc_validation_319", "prediction": "all x.((HeatingMilk(x) & ReducesAmountOfBacteria(x)) -> ReducesVitaminContent(x))", "score": 0}
{"id": "eqasc_validation_319", "prediction": "all x.((HeatingMilk(x) & ReducesBacteriaAmount(x)) -> ReducesVitaminContent(x))", "score": 0}
{"id": "eqasc_validation_319", "prediction": "all x.((HeatingMilk(x) & ReducesAlbumOfBacteria(x)) -> ReducesVitaminContent(x))", "score": 0}
{"id": "eqasc_validation_319", "prediction": "all x y.((Milk(x) & Bacteria(y) & Heating(x,y)) -> ReducesVitaminContent(x))", "score": 0}
{"id": "eqasc_validation_319", "prediction": "all x y.((HeatingMilk(x) & Bacteria(y) & ReducesAmount(x,y)) -> ReducesVitaminContent(x))", "score": 0}
{"id": "eqasc_validation_319", "prediction": "all x y.((Milk(x) & Bacteria(y) & Heating(x,y)) -> ReducesVitaminContent(x,y))", "score": 0}
{"id": "eqasc_validation_319", "prediction": "all x.((HeatingMilk(x) & ReducesBacteria(x)) -> ReducesVitaminContent(x))", "score": 0}
{"id": "eqasc_validation_319", "prediction": "all x.((HeatsMilk(x) & ReducesAmountOfBacteria(x)) -> ReducesVitaminContent(x))", "score": 0}
{"id": "eqasc_validation_319", "prediction": "all x.((HeatsMilk(x) & ReducesBacteriaAmount(x)) -> ReducesVitaminContent(x))", "score": 0}
{"id": "eqasc_validation_319", "prediction": "all x y.((HeatingMilk(x) & Bacteria(y) & ReducesAmount(x,y)) -> ReducesVitaminContent(x,y))", "score": 0}
{"id": "eqasc_validation_319", "prediction": "all x.((WarmingMilk(x) & ReducesBacteriaAmount(x)) -> ReducesVitaminContent(x))", "score": 0}
{"id": "eqasc_validation_319", "prediction": "all x y.((HeatingMilk(x) & Bacteria(y)) -> ReducesVitaminContent(x,y))", "score": 0}
{"id": "eqasc_validation_319", "prediction": "all x y.((HeatingMilk(x) & ReducesAmountOfBacteria(x)) -> ReducesVitaminContent(y))", "score": 0}
{"id": "eqasc_validation_319", "prediction": "all x y.((Milk(x) & Bacteria(y)) -> ReducesVitaminContent(x,y))", "score": 0}
{"id": "eqasc_validation_319", "prediction": "all x y.((HeatingMilk(x) & ReducesBacteriaAmount(x)) -> ReducesVitaminContent(y))", "score": 0}
{"id": "eqasc_validation_319", "prediction": "all x y.((HeatingMilk(x) & ReducesAmountOfBacteria(x,y)) -> ReducesVitaminContent(x))", "score": 0}
{"id": "eqasc_validation_320", "prediction": "all x y.((Growth(x) & Infancy(y) & Puberty(y)) -> Faster(x,y))", "score": 0}
{"id": "eqasc_validation_320", "prediction": "all x y.((Growth(x) & Infancy(y) & Puberty(z)) -> Faster(x,y,z))", "score": 0}
{"id": "eqasc_validation_320", "prediction": "all x.((Growth(x) & Infancy(x) & Puberty(x)) -> Faster(x))", "score": 1}
{"id": "eqasc_validation_320", "prediction": "all x y.((Infancy(x) & Puberty(y)) -> FasterGrowth(x,y))", "score": 6}
{"id": "eqasc_validation_320", "prediction": "all x y.((Growth(x) & Infancy(x) & Puberty(y)) -> Faster(x,y))", "score": 0}
{"id": "eqasc_validation_320", "prediction": "all x y.((Growth(x) & Infancy(y)) -> Faster(x,y))", "score": 0}
{"id": "eqasc_validation_320", "prediction": "all x y z.((Growth(x) & Infancy(y) & Puberty(z)) -> Faster(x,y,z))", "score": 0}
{"id": "eqasc_validation_320", "prediction": "all x y.((Growth(x) & Infancy(y) & Puberty(z)) -> Faster(x,y))", "score": 0}
{"id": "eqasc_validation_320", "prediction": "all x.((Growth(x) & Infancy(x) & Puberty(x)) -> Faster(x,Infancy))", "score": 0}
{"id": "eqasc_validation_320", "prediction": "all x y.((Growth(x) & Infancy(y) & Puberty(z)) -> FasterThan(x,y,z))", "score": 0}
{"id": "eqasc_validation_320", "prediction": "all x y.((Growth(x) & Infancy(y) & Puberty(x)) -> Faster(x,y))", "score": 0}
{"id": "eqasc_validation_320", "prediction": "all x.((Growth(x) & Infancy(x)) -> Faster(x))", "score": 0}
{"id": "eqasc_validation_320", "prediction": "all x.((Growth(x) & Infancy(x) & Puberty(x)) -> Faster(x,Infancy,Puberty))", "score": 0}
{"id": "eqasc_validation_320", "prediction": "all x y.((Growth(x) & Infancy(y) & Puberty(y)) -> FasterThan(x,y))", "score": 0}
{"id": "eqasc_validation_320", "prediction": "all x.((Growth(x) & InFancy(x) & Puberty(x)) -> Faster(x))", "score": 1}
{"id": "eqasc_validation_320", "prediction": "all x y.((Growth(x) & Infancy(y) & Puberty(z)) -> FasterDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_321", "prediction": "all x.(PhysiologicalStress(x) -> (RelatedToChangeInGrowthSize(x) | RelatedToChangeInGrowthSize(x)))", "score": 0}
{"id": "eqasc_validation_321", "prediction": "all x y.((PhysiologicalStress(x) & GrowthSize(y)) -> RelatesTo(x,y))", "score": 0}
{"id": "eqasc_validation_321", "prediction": "all x y z.((PhysiologicalStress(x) & GrowthSize(y) & GrowthSize(z)) -> RelatesTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_321", "prediction": "all x y z.((PhysiologicalStress(x) & GrowthSize(y) & GrowthSize(z)) -> Relationship(x,y,z))", "score": 0}
{"id": "eqasc_validation_321", "prediction": "all x.(PhysiologicalStress(x) -> (RelatedToChangesInGrowthSize(x) | RelatedToChangesInGrowthSize(x)))", "score": 0}
{"id": "eqasc_validation_321", "prediction": "all x y.((PhysiologicalStress(x) & GrowthSize(y)) -> Relational(x,y))", "score": 0}
{"id": "eqasc_validation_321", "prediction": "all x y.((PhysiologicalStress(x) & GrowthSize(y)) -> Relationship(x,y))", "score": 0}
{"id": "eqasc_validation_321", "prediction": "all x y z.((PhysiologicalStress(x) & GrowthSize(y) & GrowthSize(z)) -> Relational(x,y,z))", "score": 0}
{"id": "eqasc_validation_321", "prediction": "all x.(PhysiologicalStress(x) -> (RelatesToChangesInGrowthSize(x)))", "score": 0}
{"id": "eqasc_validation_321", "prediction": "all x.(PhysiologicalStress(x) -> (RelatedToChangesInGrowthSize(x) & For example(x)))", "score": -1}
{"id": "eqasc_validation_321", "prediction": "all x.(PhysiologicalStress(x) -> (RelatedToChangesInGrowthSize(x)))", "score": 0}
{"id": "eqasc_validation_321", "prediction": "all x.(PhysiologicalStress(x) -> (RelatedToChangeInGrowthSize(x) & For example(x)))", "score": -1}
{"id": "eqasc_validation_321", "prediction": "all x.(PhysiologicalStress(x) -> (RelatedToChangeInGrowthSize(x) & ForGrowthSize(x)))", "score": 0}
{"id": "eqasc_validation_321", "prediction": "all x.(PhysiologicalStress(x) -> (RelatesToChangesInGrowthSize(x) & For example(x)))", "score": -1}
{"id": "eqasc_validation_321", "prediction": "all x y z.((PhysiologicalStress(x) & GrowthSize(y) & GrowthSize(z)) -> CanRelateTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_322", "prediction": "all x y.((ChangeInSize(x) & Infancy(y) & Puberty(y)) -> FasterChangeInSize(x,y))", "score": 0}
{"id": "eqasc_validation_322", "prediction": "all x y.((ChangeInSize(x) & Infancy(y) & Puberty(z)) -> FasterChangeInSize(x,y,z))", "score": 0}
{"id": "eqasc_validation_322", "prediction": "all x y.((SizeChange(x) & Infancy(y) & Puberty(y)) -> FasterChangeInSize(x,y))", "score": 0}
{"id": "eqasc_validation_322", "prediction": "all x y.((SizeChange(x) & Infancy(y) & Puberty(z)) -> FasterChangeInSize(x,y,z))", "score": 0}
{"id": "eqasc_validation_322", "prediction": "all x y z.((ChangeInSize(x) & Infancy(y) & Puberty(z)) -> FasterChangeInSize(x,y,z))", "score": 0}
{"id": "eqasc_validation_322", "prediction": "all x y z.((SizeChange(x) & Infancy(y) & Puberty(z)) -> FasterChangeInSize(x,y,z))", "score": 0}
{"id": "eqasc_validation_322", "prediction": "all x y.((ChangeInSize(x) & Infancy(y) & Puberty(y)) -> Faster(x,y))", "score": 0}
{"id": "eqasc_validation_322", "prediction": "all x y.((SizeChange(x) & Infancy(y) & Puberty(y)) -> Faster(x,y))", "score": 0}
{"id": "eqasc_validation_322", "prediction": "all x y.((SizeChange(x) & Infancy(y) & Puberty(y)) -> FasterChange(x,y))", "score": 0}
{"id": "eqasc_validation_322", "prediction": "all x y.((Infancy(x) & Puberty(y)) -> FasterSizeChanges(x,y))", "score": 0}
{"id": "eqasc_validation_322", "prediction": "all x y.((Infancy(x) & Puberty(y)) -> FasterSizeChange(x,y))", "score": 0}
{"id": "eqasc_validation_322", "prediction": "all x y.((SizeChange(x) & Infancy(y) & Puberty(z)) -> FasterChange(x,y,z))", "score": 0}
{"id": "eqasc_validation_322", "prediction": "all x y.((SizeChange(x) & Infancy(y) & Puberty(z)) -> Faster(x,y,z))", "score": 0}
{"id": "eqasc_validation_322", "prediction": "all x y.((ChangeInSize(x) & InFancy(x) & Puberty(y)) -> FasterChangeInSize(x,y))", "score": 0}
{"id": "eqasc_validation_322", "prediction": "all x y.((ChangeInSize(x) & Infancy(y) & Puberty(z)) -> Faster(x,y,z))", "score": 0}
{"id": "eqasc_validation_322", "prediction": "all x.((SizeChange(x) & Infancy(x) & Puberty(x)) -> FasterChangeInSize(x))", "score": 0}
{"id": "eqasc_validation_323", "prediction": "all x.(Human(x) -> (FetalDevelopment(x) & EarlyInfancy(x)))", "score": 0}
{"id": "eqasc_validation_323", "prediction": "all x y.((Human(x) & FetalDevelopment(y) & EarlyInfancy(x)) -> FastestGrowthRate(x,y))", "score": 0}
{"id": "eqasc_validation_323", "prediction": "all x y.((Human(x) & FetalDevelopment(y) & EarlyInfancy(y)) -> FastestGrowthRate(x,y))", "score": 0}
{"id": "eqasc_validation_323", "prediction": "all x.(Human(x) -> (ExperiencesFastGrowthRate(x) & DuringFetalDevelopment(x) & DuringEarlyInfancy(x)))", "score": 0}
{"id": "eqasc_validation_323", "prediction": "all x y.((Human(x) & FetalDevelopment(y) & EarlyInfancy(z)) -> FastestGrowthRate(x,y,z))", "score": 0}
{"id": "eqasc_validation_323", "prediction": "all x y z.((Human(x) & FetalDevelopment(y) & EarlyInfancy(z)) -> FastestGrowthRate(x,y,z))", "score": 0}
{"id": "eqasc_validation_323", "prediction": "all x y.((Human(x) & FetalDevelopment(y) & EarlyInfancy(x,y)) -> FastestGrowthRate(x,y))", "score": 0}
{"id": "eqasc_validation_323", "prediction": "all x.(Human(x) & (FetalDevelopment(x) | EarlyInfancy(x))) -> FastestGrowthRate(x))", "score": -1}
{"id": "eqasc_validation_323", "prediction": "all x.((Human(x) & FetalDevelopment(x) & EarlyInfancy(x)) -> FastestGrowthRate(x))", "score": 0}
{"id": "eqasc_validation_323", "prediction": "all x.(Human(x) -> (ExperiencesFastGrowthRate(x) & DuringFetalDevelopment(x) & EarlyInfancy(x)))", "score": 0}
{"id": "eqasc_validation_323", "prediction": "all x.(Human(x) -> (ExploresFastGrowthRate(x) & DuringFetalDevelopment(x) & DuringEarlyInfancy(x)))", "score": 0}
{"id": "eqasc_validation_323", "prediction": "all x.(Human(x) -> (ExploresFastGrowthRate(x) & DuringFetalDevelopment(x) & EarlyInfancy(x)))", "score": 0}
{"id": "eqasc_validation_323", "prediction": "all x.(Human(x) -> (FetalDevelopment(x) | EarlyInfancy(x)))", "score": 0}
{"id": "eqasc_validation_323", "prediction": "all x.(Human(x) -> (FetalDevelopment(x) & EarlyInfancy(x) & FastestGrowthRate(x)))", "score": 0}
{"id": "eqasc_validation_323", "prediction": "all x y.((Human(x) & FetalDevelopment(y) & EarlyInfancy(z)) -> FastestGrowthRate(x,y))", "score": 0}
{"id": "eqasc_validation_324", "prediction": "all x y.((FetalDevelopment(x) & Puberty(y)) -> FasterGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_324", "prediction": "all x.((FetalDevelopment(x) & Puberty(x)) -> FasterGrowth(x))", "score": 0}
{"id": "eqasc_validation_324", "prediction": "all x.((FetalDevelopment(x) & Puberty(x)) -> FasterGrowth(x,FetalDevelopment))", "score": 0}
{"id": "eqasc_validation_324", "prediction": "all x y.((FetalDevelopment(x) & Puberty(y)) -> FasterGrowthDuring(x,y))", "score": 0}
{"id": "eqasc_validation_324", "prediction": "all x y.((FetalDevelopment(x) & Puberty(y)) -> GrowthFaster(x,y))", "score": 0}
{"id": "eqasc_validation_324", "prediction": "all x y z.((FetalDevelopment(x) & Puberty(y) & FetalDevelopment(z)) -> FasterGrowth(x,y,z))", "score": 0}
{"id": "eqasc_validation_324", "prediction": "all x y z.((FetalDevelopment(x) & Puberty(y) & FetalDevelopment(z)) -> FasterGrowth(x,z))", "score": 0}
{"id": "eqasc_validation_324", "prediction": "all x y.((Growth(x) & FetalDevelopment(y) & Puberty(y)) -> Faster(x,y))", "score": 0}
{"id": "eqasc_validation_324", "prediction": "all x y.((FetalDevelopment(x) & Puberty(y)) -> FasterGrowth(x,x))", "score": 0}
{"id": "eqasc_validation_324", "prediction": "all x y z.((FetalDevelopment(x) & Puberty(y) & Growth(z)) -> Faster(x,z))", "score": 0}
{"id": "eqasc_validation_324", "prediction": "all x.((Growth(x) & FetalDevelopment(x) & Puberty(x)) -> Faster(x))", "score": 0}
{"id": "eqasc_validation_324", "prediction": "all x y.((Growth(x) & FetalDevelopment(y) & Puberty(z)) -> Faster(x,y,z))", "score": 0}
{"id": "eqasc_validation_324", "prediction": "all x.((FetalDevelopment(x) & Puberty(x)) -> FasterGrowth(x,FetalDevelopment,Puberty))", "score": 0}
{"id": "eqasc_validation_324", "prediction": "all x y z.((FetalDevelopment(x) & Puberty(y) & FetalDevelopment(z)) -> Faster(x,y,z))", "score": 0}
{"id": "eqasc_validation_324", "prediction": "all x y z.((FetalDevelopment(x) & Puberty(y) & FetalDevelopment(z)) -> Faster(x,z))", "score": 0}
{"id": "eqasc_validation_324", "prediction": "all x.((FetalDevelopment(x) & Puberty(x)) -> FasterGrowth(x,fetalDevelopment))", "score": 0}
{"id": "eqasc_validation_325", "prediction": "all x.(Adolescence(x) -> Puberty(x))", "score": 2}
{"id": "eqasc_validation_325", "prediction": "all x y.((Adolescence(x) & Puberty(y)) -> Synonym(x,y))", "score": 0}
{"id": "eqasc_validation_325", "prediction": "all x.((Adolescence(x) & Puberty(x)) -> Synonym(x))", "score": 0}
{"id": "eqasc_validation_325", "prediction": "all x.((Adolescence(x) & ForMany(x)) -> Puberty(x))", "score": 0}
{"id": "eqasc_validation_325", "prediction": "all x.((Adolescence(x) & Puberty(x)) -> Synonym(x,y))", "score": 0}
{"id": "eqasc_validation_325", "prediction": "(all x.(Adolescence(x) -> Puberty(x)))", "score": 2}
{"id": "eqasc_validation_325", "prediction": "all x y z.((Adolescence(x) & Puberty(y) & Adult(z)) -> Synonym(x,y,z))", "score": 0}
{"id": "eqasc_validation_325", "prediction": "all x.((Adolescence(x) & Puberty(y)) -> Synonym(x,y))", "score": 0}
{"id": "eqasc_validation_325", "prediction": "all x.(Adolescence(x) -> (Symbol(x,puberty) & ForMany(x)))", "score": 0}
{"id": "eqasc_validation_325", "prediction": "all x.((Adolescence(x) & Puberty(x)) -> Synonym(x,adolescence))", "score": 0}
{"id": "eqasc_validation_325", "prediction": "all x y.((Adolescence(x) & Puberty(y)) -> Symbol(x,y))", "score": 0}
{"id": "eqasc_validation_325", "prediction": "all x.(Adolescence(x) -> (SymbolOfPuberty(x) & ForMany(x)))", "score": 0}
{"id": "eqasc_validation_325", "prediction": "all x.((Adolescence(x) & Puberty(x)) -> Synonym(x,puberty))", "score": 0}
{"id": "eqasc_validation_325", "prediction": "all x.((Adolescence(x) & Puberty(x)) -> Synonym(x,Adolescence))", "score": 0}
{"id": "eqasc_validation_325", "prediction": "exists x.(Adolescence(x) & Puberty(x))", "score": 0}
{"id": "eqasc_validation_325", "prediction": "all x.((Adolescence(x) & Puberty(x)) -> Symbol(x))", "score": 0}
{"id": "eqasc_validation_326", "prediction": "all x y.((Infancy(x) & Adolescence(y)) -> FasterGrowth(x,y))", "score": 2}
{"id": "eqasc_validation_326", "prediction": "all x y.((Infancy(x) & Adolescence(y)) -> FastGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_326", "prediction": "all x y.((Infancy(x) & Adolescence(y)) -> FasterGrowthDuring(x,y))", "score": 0}
{"id": "eqasc_validation_326", "prediction": "all x y z.((Infancy(x) & Adolescence(y) & Infancy(z)) -> FasterGrowth(x,y,z))", "score": 0}
{"id": "eqasc_validation_326", "prediction": "all x y.((Infancy(x) & Adolescence(y)) -> FasterGrowthThan(x,y))", "score": 0}
{"id": "eqasc_validation_326", "prediction": "all x.((Growth(x) & Infancy(x) & Adolescence(x)) -> FasterGrowth(x))", "score": 0}
{"id": "eqasc_validation_326", "prediction": "all x y.((Infancy(x) & Adolescence(y)) -> GrowthFaster(x,y))", "score": 0}
{"id": "eqasc_validation_326", "prediction": "all x y z.((Infancy(x) & Adolescence(y) & Infancy(z)) -> FasterGrowthThanAdolescence(x,y,z))", "score": 0}
{"id": "eqasc_validation_326", "prediction": "all x y.((Infancy(x) & Adolescence(y)) -> (FasterGrowthDuring(x,y) & FasterGrowthDuring(x,y)))", "score": 0}
{"id": "eqasc_validation_326", "prediction": "all x y.((Infancy(x) & Adolescence(y)) -> FasterGrowthThanAdolescence(x,y))", "score": 0}
{"id": "eqasc_validation_326", "prediction": "all x y.((Infancy(x) & Adolescence(y)) -> (FasterGrowth(x,y) & FasterGrowth(x,y)))", "score": 2}
{"id": "eqasc_validation_326", "prediction": "all x y.((Growth(x) & Infancy(y) & Adolescence(y)) -> FasterGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_326", "prediction": "all x y.((Growth(x) & Infancy(y) & Adolescence(z)) -> FasterGrowth(x,y,z))", "score": 0}
{"id": "eqasc_validation_326", "prediction": "all x y z.((Infancy(x) & Adolescence(y) & Growth(z)) -> FasterGrowth(x,z))", "score": 0}
{"id": "eqasc_validation_326", "prediction": "all x y.((Infancy(x) & Adolescence(y)) -> (FasterGrowthDuring(x,y) & FasterDuring(x,y)))", "score": 0}
{"id": "eqasc_validation_326", "prediction": "all x y z.((Infancy(x) & Adolescence(y) & Infancy(z)) -> FasterGrowth(x,z))", "score": 0}
{"id": "eqasc_validation_327", "prediction": "all x.((Baby(x) & Infancy(x)) -> LearnsToTrustWorld(x))", "score": 0}
{"id": "eqasc_validation_327", "prediction": "all x.((Baby(x) & Infancy(x)) -> LearnsWhetherToTrustWorld(x))", "score": 0}
{"id": "eqasc_validation_327", "prediction": "all x y.((Baby(x) & Infancy(y)) -> LearnsToTrust(x,y))", "score": 0}
{"id": "eqasc_validation_327", "prediction": "all x y.((Baby(x) & Infancy(y)) -> LearnsToTrustWorld(x,y))", "score": 0}
{"id": "eqasc_validation_327", "prediction": "all x y z.((Baby(x) & Infancy(y) & World(z)) -> LearnsToTrust(x,y,z))", "score": 0}
{"id": "eqasc_validation_327", "prediction": "all x y.((Baby(x) & Infancy(y)) -> LearnsWhetherToTrustWorld(x,y))", "score": 0}
{"id": "eqasc_validation_327", "prediction": "all x.((Baby(x) & Infancy(x)) -> LearnsToTrust(x))", "score": 0}
{"id": "eqasc_validation_327", "prediction": "all x y.((Baby(x) & Infancy(y)) -> LearnsWhetherToTrust(x,y))", "score": 0}
{"id": "eqasc_validation_327", "prediction": "all x.((Baby(x) & Infancy(x)) -> (LearnsToTrustWorld(x) | LearnsToTrustWorld(x)))", "score": 0}
{"id": "eqasc_validation_327", "prediction": "all x y.((Baby(x) & Infancy(y)) -> (LearnsToTrust(x,y) | LearnsToTrust(x,y)))", "score": 0}
{"id": "eqasc_validation_327", "prediction": "all x y z.((Baby(x) & Infancy(y) & World(z)) -> LearnsWhetherToTrust(x,y,z))", "score": 0}
{"id": "eqasc_validation_327", "prediction": "all x.((Baby(x) & Infancy(x)) -> (LearnsToTrust(x) | LearnsToTrust(x)))", "score": 0}
{"id": "eqasc_validation_327", "prediction": "all x y.((Bird(x) & Infancy(y)) -> LearnsToTrust(x,y))", "score": 0}
{"id": "eqasc_validation_327", "prediction": "all x.(Infancy(x) -> (Baby(x) & LearnsToTrustWorld(x)))", "score": 0}
{"id": "eqasc_validation_327", "prediction": "all x.((Baby(x) & Infancy(x)) -> (LearnsWhetherToTrustWorld(x)))", "score": 0}
{"id": "eqasc_validation_327", "prediction": "all x y z.((Infancy(x) & Baby(y) & World(z)) -> LearnsToTrust(y,z))", "score": 0}
{"id": "eqasc_validation_328", "prediction": "all x y z.((Baby(x) & Puberty(y) & Puberty(z)) -> (GrowsFaster(x,y) & GrowsFaster(x,z)))", "score": 0}
{"id": "eqasc_validation_328", "prediction": "all x y.((Baby(x) & Puberty(y)) -> (GrowsFaster(x,y) & GrowsFaster(x,y)))", "score": 0}
{"id": "eqasc_validation_328", "prediction": "all x y.((Baby(x) & Puberty(y)) -> GrowsFaster(x,y))", "score": 0}
{"id": "eqasc_validation_328", "prediction": "all x y z.((Baby(x) & Puberty(y) & Puberty(z)) -> (GrowFaster(x,y) & GrowFaster(x,z)))", "score": 0}
{"id": "eqasc_validation_328", "prediction": "all x y.((Baby(x) & Puberty(y)) -> (GrowFaster(x,y) & GrowFaster(x,y)))", "score": 0}
{"id": "eqasc_validation_328", "prediction": "all x y z.((Baby(x) & Puberty(y) & Puberty(z)) -> GrowsFaster(x,y,z))", "score": 0}
{"id": "eqasc_validation_328", "prediction": "all x y z.((Bird(x) & Puberty(y) & Puberty(z)) -> (GrowsFaster(x,y) & GrowsFaster(x,z)))", "score": 0}
{"id": "eqasc_validation_328", "prediction": "all x y z.((Baby(x) & Puberty(y) & Puberty(z)) -> GrowsFasterThan(x,y,z))", "score": 0}
{"id": "eqasc_validation_328", "prediction": "all x y.((Baby(x) & Puberty(y)) -> GrowFaster(x,y))", "score": 0}
{"id": "eqasc_validation_328", "prediction": "all x y z.((Baby(x) & Puberty(y) & Puberty(z)) -> (GrowsFaster(x,y,z) & GrowsFaster(x,y)))", "score": 0}
{"id": "eqasc_validation_328", "prediction": "all x y.((Baby(x) & Puberty(y)) -> GrowsFasterThan(x,y))", "score": 0}
{"id": "eqasc_validation_328", "prediction": "all x.(Baby(x) -> (GrowsFaster(x) & GrowsFaster(x) & Puberty(x)))", "score": 0}
{"id": "eqasc_validation_328", "prediction": "all x.((Baby(x) & Puberty(y)) -> GrowsFaster(x,y))", "score": 0}
{"id": "eqasc_validation_328", "prediction": "all x y z.((Baby(x) & Puberty(y) & Puberty(z)) -> GrowFasterThan(x,y,z))", "score": 0}
{"id": "eqasc_validation_328", "prediction": "all x y z.((Baby(x) & Puberty(y) & Puberty(z)) -> GrowsFasterThanLater(x,y,z))", "score": 0}
{"id": "eqasc_validation_328", "prediction": "all x y z.((Baby(x) & Puberty(y) & Puberty(z)) -> (GrowsFaster(x,y) | GrowsFaster(x,z)))", "score": 0}
{"id": "eqasc_validation_329", "prediction": "all x y z.((Infancy(x) & Weaning(y) & Year3(z)) -> EndsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_329", "prediction": "all x y.((Infancy(x) & Weaning(y)) -> EndsWith(x,y))", "score": 0}
{"id": "eqasc_validation_329", "prediction": "all x.(Infancy(x) -> Weaning(x))", "score": 0}
{"id": "eqasc_validation_329", "prediction": "all x y z.((Infancy(x) & Weaning(y) & Year(z)) -> EndsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_329", "prediction": "all x.(Infancy(x) -> (EndsWithWeaning(x) & UsuallyAroundYear3(x)))", "score": 0}
{"id": "eqasc_validation_329", "prediction": "all x y z.((Infancy(x) & Weaning(y) & Year3(z)) -> EndsWithWeaning(x,y,z))", "score": 0}
{"id": "eqasc_validation_329", "prediction": "all x.(InfancyEndsWithWeaning(x) -> (InfancyEndsWithWeaning(x) & UsuallyAroundYear3(x)))", "score": 0}
{"id": "eqasc_validation_329", "prediction": "all x y.((Infancy(x) & Weaning(y)) -> (EndsWith(x,y) & UsuallyAround(x,y)))", "score": 0}
{"id": "eqasc_validation_329", "prediction": "all x.(InfancyEndsWithWeaning(x) -> Year3(x))", "score": 0}
{"id": "eqasc_validation_329", "prediction": "all x y z.((Infancy(x) & Weaning(y) & Year(z)) -> EndsWithWeaning(x,y,z))", "score": 0}
{"id": "eqasc_validation_329", "prediction": "all x y.((Infancy(x) & Weaning(y) & Year3)) -> EndsWith(x,y))", "score": -1}
{"id": "eqasc_validation_329", "prediction": "all x y z.((Infancy(x) & Weaning(y) & Year3(z)) -> EndsWith(x,y))", "score": 0}
{"id": "eqasc_validation_329", "prediction": "all x y z.((Infancy(x) & Weaning(y) & Year3)) -> EndsWith(x,y))", "score": -1}
{"id": "eqasc_validation_329", "prediction": "all x y z.((Infancy(x) & Weaning(y) & (Year3) | Year3))) -> EndsWith(x,y))", "score": -1}
{"id": "eqasc_validation_329", "prediction": "all x y z.((Infancy(x) & Weaning(y) & Year3(z)) -> EndsWithWeaning(x))", "score": 0}
{"id": "eqasc_validation_330", "prediction": "all x y.((Growth(x) & Age(y) & Age(y)) -> FasterFrom0To3(x,y))", "score": 0}
{"id": "eqasc_validation_330", "prediction": "all x y.((Growth(x) & Age(y) & Age(y)) -> FasterFromTo(x,y))", "score": 0}
{"id": "eqasc_validation_330", "prediction": "all x y.((Growth(x) & Age(y) & Age(y) & Age(y)) -> FasterFrom0To3(x,y))", "score": 0}
{"id": "eqasc_validation_330", "prediction": "all x y.((Growth(x) & Age(y) & Age(x,y)) -> FasterFrom0To3(x))", "score": 0}
{"id": "eqasc_validation_330", "prediction": "all x y.((Growth(x) & Age(y) & Age(y) & Age(y)) -> FasterFromTo(x,y))", "score": 0}
{"id": "eqasc_validation_330", "prediction": "all x y.((Growth(x) & Age(y) & Age(x,y)) -> FasterFrom0To3(x,y))", "score": 0}
{"id": "eqasc_validation_330", "prediction": "all x y.((Growth(x) & Age(y) & Age(z)) -> FasterFrom0To3(x,y,z))", "score": 0}
{"id": "eqasc_validation_330", "prediction": "all x y.((Growth(x) & Age(y) & From0To3(x,y)) -> Faster(x,y))", "score": 0}
{"id": "eqasc_validation_330", "prediction": "all x y.((Growth(x) & Age(y) & Age(z) & From0To3(x,y)) -> Faster(x,z))", "score": 0}
{"id": "eqasc_validation_330", "prediction": "all x y z.((Growth(x) & Age(y) & Age(z) & Age(y) & Age(z)) -> FasterFromTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_330", "prediction": "all x y z.((Growth(x) & Age(y) & Age(z) & From0To3(x,y) & Puberty(z)) -> Faster(x,z))", "score": 0}
{"id": "eqasc_validation_330", "prediction": "all x y.((Growth(x) & Age(y) & Age(z)) -> FasterFrom0To3(x,y))", "score": 0}
{"id": "eqasc_validation_330", "prediction": "all x y z.((Growth(x) & Age(y) & Age(z) & Age(z)) -> FasterFrom0To3(x,y,z))", "score": 0}
{"id": "eqasc_validation_330", "prediction": "all x y.((Growth(x) & Age(y) & Age(y) & Age(y)) -> FasterFrom0To3ThanPuberty(x,y))", "score": 0}
{"id": "eqasc_validation_330", "prediction": "all x y.((Growth(x) & Age(y) & Age(y) & Age(x,y)) -> FasterFrom0To3(x))", "score": 0}
{"id": "eqasc_validation_330", "prediction": "all x y z.((Growth(x) & Age(y) & Age(z) & Age(y) & Age(z)) -> FasterFrom0To3(x,y,z))", "score": 0}
{"id": "eqasc_validation_331", "prediction": "all x.(Patient(x) -> (NeonatalPeriod(x) | EarlyInfancy(x)))", "score": 0}
{"id": "eqasc_validation_331", "prediction": "all x.(Patient(x) -> (DiesInNeonatalPeriod(x) | DiesInEarlyInfancy(x)))", "score": 0}
{"id": "eqasc_validation_331", "prediction": "all x y.((Patient(x) & (NeonatalPeriod(y) | EarlyInfancy(y))) -> DiesIn(x,y))", "score": 0}
{"id": "eqasc_validation_331", "prediction": "all x.(Patient(x) -> (DeathsInNeonatalPeriod(x) | DeathsInEarlyInfancy(x)))", "score": 0}
{"id": "eqasc_validation_331", "prediction": "all x.(Patient(x) -> (exists y.(NeonatalPeriod(y) & DiesIn(x,y)) | exists z.(EarlyInfancy(z) & DiesIn(x,z)))))", "score": -1}
{"id": "eqasc_validation_331", "prediction": "all x.(Patient(x) -> (exists y.(NeonatalPeriod(y) & DiesIn(x,y))) | exists z.(EarlyInfancy(z) & DiesIn(x,z)))))", "score": -1}
{"id": "eqasc_validation_331", "prediction": "all x.((Patient(x) & (NeonatalPeriod(x) | EarlyInfancy(x))) -> DiesIn(x,neonatal))", "score": 0}
{"id": "eqasc_validation_331", "prediction": "all x.(Patient(x) -> ((NeonatalPeriod(x) | EarlyInfancy(x))))", "score": 0}
{"id": "eqasc_validation_331", "prediction": "all x.((Patient(x) & (NeonatalPeriod(x) | EarlyInfancy(x))) -> DiesFrequently(x))", "score": 0}
{"id": "eqasc_validation_331", "prediction": "all x.(Patient(x) -> (FrequentDeath(x) & (NeonatalPeriod(x) | EarlyInfancy(x))))", "score": 0}
{"id": "eqasc_validation_331", "prediction": "all x.(Patient(x) -> (DeathsInNeonatalPeriod(x) | DiesInEarlyInfancy(x)))", "score": 0}
{"id": "eqasc_validation_331", "prediction": "all x.((Patient(x) & (NeonatalPeriod(x) | EarlyInfancy(x))) -> DiesIn(x,NeonatalPeriod))", "score": 0}
{"id": "eqasc_validation_331", "prediction": "all x y.((Patient(x) & (NeonatalPeriod(y) | EarlyInfancy(y))) -> DiesFrequently(x,y))", "score": 0}
{"id": "eqasc_validation_331", "prediction": "all x y.((Patient(x) & (NeonatalPeriod(y) | EarlyInfancy(y))) -> Dies(x,y))", "score": 0}
{"id": "eqasc_validation_331", "prediction": "all x.(Patient(x) -> (DeathInNeonatalPeriod(x) | DeathInEarlyInfancy(x)))", "score": 0}
{"id": "eqasc_validation_331", "prediction": "all x.(Patient(x) -> (exists y.(NeonatalPeriod(y) & DiesIn(x,y))) | exists z.(FrühInfancy(z) & DiesIn(x,z)))))", "score": -1}
{"id": "eqasc_validation_332", "prediction": "all x y.((NeonatalPeriod(x) & Puberty(y)) -> FasterGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_332", "prediction": "all x y.((NeonatalPeriod(x) & Puberty(y)) -> GrowthFaster(x,y))", "score": 0}
{"id": "eqasc_validation_332", "prediction": "all x y.((NeonatalPeriod(x) & Puberty(y)) -> FasterGrowthDuring(x,y))", "score": 0}
{"id": "eqasc_validation_332", "prediction": "all x y.((Growth(x) & NeonatalPeriod(y) & Puberty(y)) -> Faster(x,y))", "score": 0}
{"id": "eqasc_validation_332", "prediction": "all x y z.((NeonatalPeriod(x) & Puberty(y) & Growth(z)) -> FasterGrowth(x,z))", "score": 0}
{"id": "eqasc_validation_332", "prediction": "all x y.((Growth(x) & NeonatalPeriod(x) & Puberty(y)) -> Faster(x,y))", "score": 0}
{"id": "eqasc_validation_332", "prediction": "all x y z.((NeonatalPeriod(x) & Puberty(y) & Growth(z)) -> Faster(x,z))", "score": 0}
{"id": "eqasc_validation_332", "prediction": "all x y.((Growth(x) & NeonatalPeriod(x) & Puberty(y)) -> FasterGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_332", "prediction": "all x y z.((NeonatalPeriod(x) & Puberty(y) & Growth(z)) -> FasterGrowth(x,y,z))", "score": 0}
{"id": "eqasc_validation_332", "prediction": "all x y z.((NeonatalPeriod(x) & Puberty(y) & Growth(z)) -> Faster(x,y,z))", "score": 0}
{"id": "eqasc_validation_333", "prediction": "all x y.((Breast(x) & Puberty(y)) -> DevelopsDuring(x,y))", "score": 0}
{"id": "eqasc_validation_333", "prediction": "all x y z.((Breast(x) & Puberty(y) & Puberty(z)) -> DevelopsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_333", "prediction": "all x y.((Break(x) & Puberty(y)) -> DevelopsDuring(x,y))", "score": 0}
{"id": "eqasc_validation_333", "prediction": "all x.(Breast(x) -> DevelopsDuringPuberty(x))", "score": 0}
{"id": "eqasc_validation_333", "prediction": "all x.(Breast(x) -> DevelopsDuringPupilhood(x))", "score": 0}
{"id": "eqasc_validation_333", "prediction": "all x y.((Brust(x) & Puberty(y)) -> DevelopsDuring(x,y))", "score": 0}
{"id": "eqasc_validation_333", "prediction": "all x.((Breast(x) & Puberty(y)) -> DevelopsDuring(x,y))", "score": 0}
{"id": "eqasc_validation_333", "prediction": "all x y z.((Breast(x) & Puberty(y) & Puberty(z)) -> Develops(x,y,z))", "score": 0}
{"id": "eqasc_validation_333", "prediction": "all x y.((Breast(x) & Puberty(y)) -> Develops(x,y))", "score": 0}
{"id": "eqasc_validation_333", "prediction": "all x y z.((Breast(x) & Puberty(y) & Puberty(z)) -> DevelopsDuring(x,y))", "score": 0}
{"id": "eqasc_validation_333", "prediction": "all x.(Break(x) -> DevelopsDuringPuberty(x))", "score": 0}
{"id": "eqasc_validation_333", "prediction": "all x y z.((Breast(x) & Puberty(y) & Puberty(z)) -> DevelopsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_333", "prediction": "all x.(Break(x) -> DevelopsDuringPupilhood(x))", "score": 0}
{"id": "eqasc_validation_333", "prediction": "all x.((Breast(x) & Puberty(x)) -> DevelopsDuring(x,y))", "score": 0}
{"id": "eqasc_validation_333", "prediction": "all x y z.((Breast(x) & Puberty(y) & Puberty(z)) -> DevelopedDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_333", "prediction": "all x.((Breast(x) & Puberty(x)) -> DevelopsDuring(x,puberty))", "score": 0}
{"id": "eqasc_validation_334", "prediction": "all x y.((Infancy(x) & BreastGrowth(y)) -> FasterGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_334", "prediction": "all x y.((Infancy(x) & Breasts(y)) -> FasterGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_334", "prediction": "all x.((Growth(x) & Infancy(x) & BreastGrowth(x)) -> Faster(x))", "score": 0}
{"id": "eqasc_validation_334", "prediction": "all x y.((Infancy(x) & BreastsGrow(y)) -> FasterGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_334", "prediction": "all x y.((Growth(x) & Infancy(y) & BreastGrowth(y)) -> Faster(x,y))", "score": 0}
{"id": "eqasc_validation_334", "prediction": "all x y.((Infancy(x) & BreastGrowth(y)) -> FasterGrowthIn(x,y))", "score": 0}
{"id": "eqasc_validation_334", "prediction": "all x y.((Infancy(x) & BreastGrowth(y)) -> FasterGrowthInInfancy(x,y))", "score": 0}
{"id": "eqasc_validation_334", "prediction": "all x y.((Growth(x) & Infancy(y) & BreastsGrow(y)) -> Faster(x,y))", "score": 0}
{"id": "eqasc_validation_334", "prediction": "all x.((Growth(x) & InInfancy(x) & BreastGrowth(x)) -> Faster(x))", "score": 0}
{"id": "eqasc_validation_334", "prediction": "all x.((Infancy(x) & BreastGrowth(x)) -> FasterGrowth(x))", "score": 0}
{"id": "eqasc_validation_334", "prediction": "all x.((GrowthInInfancy(x) & GrowthInBreasts(x)) -> FasterInInfancy(x))", "score": 0}
{"id": "eqasc_validation_334", "prediction": "all x y.((Infancy(x) & Breasts(y)) -> FasterGrowthIn(x,y))", "score": 0}
{"id": "eqasc_validation_334", "prediction": "all x.((GrowthInInfancy(x) & GrowthInBreasts(x)) -> Faster(x))", "score": 0}
{"id": "eqasc_validation_334", "prediction": "all x.((Growth(x) & Infancy(x) & BreastsGrow(x)) -> Faster(x))", "score": 0}
{"id": "eqasc_validation_334", "prediction": "all x y.((Growth(x) & Infancy(y) & BreastGrowth(y)) -> FasterInInfancy(x,y))", "score": 0}
{"id": "eqasc_validation_334", "prediction": "all x y.((Infancy(x) & Breast(y)) -> FasterGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_335", "prediction": "all x.(Adolescence(x) -> Puberty(x))", "score": 10}
{"id": "eqasc_validation_335", "prediction": "all x y.((Adolescence(x) & Puberty(y)) -> BeginsWith(x,y))", "score": 0}
{"id": "eqasc_validation_335", "prediction": "all x y.((Adolescence(x) & Puberty(y)) -> StartsWith(x,y))", "score": 0}
{"id": "eqasc_validation_335", "prediction": "all x.(Adolescence(x) -> StartsWithPuberty(x))", "score": 0}
{"id": "eqasc_validation_335", "prediction": "all x.((Adolescence(x) & Puberty(y)) -> StartsWith(x,y))", "score": 0}
{"id": "eqasc_validation_335", "prediction": "all x.((Adolescence(x) & Puberty(y)) -> BeginsWith(x,y))", "score": 0}
{"id": "eqasc_validation_335", "prediction": "all x y z.((Adolescence(x) & Puberty(y) & Puberty(z)) -> StartsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_335", "prediction": "all x y z.((Adolescence(x) & Puberty(y) & Puberty(z)) -> BeginsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_335", "prediction": "all x y.((Adolescent(x) & Puberty(y)) -> StartsWith(x,y))", "score": 0}
{"id": "eqasc_validation_335", "prediction": "all x y.((Adolescent(x) & Puberty(y)) -> BeginsWith(x,y))", "score": 0}
{"id": "eqasc_validation_335", "prediction": "all x.(Adolescence(x) -> StartsWithPupilhood(x))", "score": 0}
{"id": "eqasc_validation_335", "prediction": "all x.(Adolescent(x) -> Puberty(x))", "score": 1}
{"id": "eqasc_validation_335", "prediction": "all x.(Adolescence(x) -> StartsWithPuperhood(x))", "score": 0}
{"id": "eqasc_validation_335", "prediction": "all x.((Adolescence(x) & Puberty(x)) -> StartsWith(x,Puberty))", "score": 0}
{"id": "eqasc_validation_335", "prediction": "all x y.((Adolescence(x) & Puberty(y)) -> BeginningWith(x,y))", "score": 0}
{"id": "eqasc_validation_335", "prediction": "all x.((Adolescence(x) & Puberty(x)) -> StartsWith(x,puberty))", "score": 0}
{"id": "eqasc_validation_336", "prediction": "all x y.((Infancy(x) & Adolescence(y)) -> FasterGrowth(x,y))", "score": 1}
{"id": "eqasc_validation_336", "prediction": "all x.((Infancy(x) & Adolescence(x)) -> FasterGrowth(x))", "score": 0}
{"id": "eqasc_validation_336", "prediction": "all x y.((Infancy(x) & Adolescence(y)) -> FasterGrowthIn(x,y))", "score": 0}
{"id": "eqasc_validation_336", "prediction": "all x y z.((Infancy(x) & Adolescence(y) & Infancy(z)) -> FasterGrowth(x,y,z))", "score": 0}
{"id": "eqasc_validation_336", "prediction": "all x y.((Infancy(x) & Adolescence(y)) -> FastGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_336", "prediction": "all x y.((Infancy(x) & Adolescence(y)) -> GrowthFaster(x,y))", "score": 0}
{"id": "eqasc_validation_336", "prediction": "all x.((Growth(x) & InInfancy(x) & Adolescence(x)) -> Faster(x))", "score": 0}
{"id": "eqasc_validation_336", "prediction": "all x.((GrowthInInfancy(x) & GrowthInAdolescence(x)) -> Faster(x))", "score": 0}
{"id": "eqasc_validation_336", "prediction": "all x.((Growth(x) & Infancy(x) & Adolescence(x)) -> Faster(x))", "score": 1}
{"id": "eqasc_validation_336", "prediction": "all x.((Growth(x) & InFancy(x) & Adolescence(x)) -> Faster(x))", "score": 1}
{"id": "eqasc_validation_336", "prediction": "all x.((Growth(x) & Infancy(x) & Adolescence(x)) -> FasterGrowth(x))", "score": 0}
{"id": "eqasc_validation_336", "prediction": "all x y z.((Infancy(x) & Adolescence(y) & Infancy(z)) -> FasterGrowth(x,z))", "score": 0}
{"id": "eqasc_validation_336", "prediction": "all x y.((Infancy(x) & Adolescence(y)) -> FasterGrowth(x))", "score": 0}
{"id": "eqasc_validation_336", "prediction": "all x.((Growth(x) & InInfancy(x)) -> FasterInAdolescence(x))", "score": 0}
{"id": "eqasc_validation_336", "prediction": "all x y z.((Infancy(x) & Adolescence(y) & Infancy(z)) -> FasterGrowth(x,y))", "score": 1}
{"id": "eqasc_validation_336", "prediction": "all x.((Growth(x) & InFancy(x) & Adolescence(x)) -> FasterGrowth(x))", "score": 0}
{"id": "eqasc_validation_337", "prediction": "all x y.((Seismometer(x) & Earthquake(y)) -> MeasuresStrengthOrMagnitude(x,y))", "score": 0}
{"id": "eqasc_validation_337", "prediction": "all x y.((Seismometer(x) & Earthquake(y)) -> (MeasuresStrengthOrMagnitude(x,y) | MeasuresMagnitude(x,y)))", "score": 0}
{"id": "eqasc_validation_337", "prediction": "all x y z.((Seismometer(x) & Earthquake(y) & (Strength(z) | Magnitude(z))) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_337", "prediction": "all x y.((Seismometer(x) & Earthquake(y)) -> (MeasuresStrength(x,y) | MeasuresMagnitude(x,y)))", "score": 0}
{"id": "eqasc_validation_337", "prediction": "all x.(Seismometer(x) -> MeasuresStrengthOrMagnitudeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_337", "prediction": "all x y z.((Seismometer(x) & Earthquake(y) & (Strength(z) | Magnitude(z))) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_337", "prediction": "all x.(Seismometer(x) -> (MeasuresStrengthOrMagnitudeOfEarthquake(x) | MeasuresMagnitudeOfEarthquake(x)))", "score": 0}
{"id": "eqasc_validation_337", "prediction": "all x y.((Seismometer(x) & Earthquake(y)) -> (MeasuresStrengthOrMagnitude(x,y)))", "score": 0}
{"id": "eqasc_validation_337", "prediction": "all x.(Seismometer(x) -> (MeasuresStrengthOrMagnitudeOfEarthquake(x) & MeasuresStrengthOrMagnitudeOfEarthquake(x)))", "score": 0}
{"id": "eqasc_validation_337", "prediction": "all x y.((Seismometer(x) & Earthquake(y)) -> MeasuresStrengthOrMagnitudeOf(x,y))", "score": 0}
{"id": "eqasc_validation_337", "prediction": "all x y z.((Seismometer(x) & Earthquake(y) & (Strength(z) | Magnitude(z))) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_337", "prediction": "all x y.((Seismometer(x) & Earthquake(y) & MeasuresStrengthOrMagnitude(x,y)) -> Seismometer(x))", "score": 0}
{"id": "eqasc_validation_337", "prediction": "all x y.((Seismometer(x) & EarthquakeEarthquake(y)) -> MeasuresStrengthOrMagnitude(x,y))", "score": 0}
{"id": "eqasc_validation_337", "prediction": "all x y z.((Seismometer(x) & Earthquake(y) & (Strength(z) | Magnitude(z)))) -> Measures(x,y,z))", "score": -1}
{"id": "eqasc_validation_337", "prediction": "all x y z.((Seismometer(x) & Earthquake(y) & StrengthOrMagnitude(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_337", "prediction": "all x y z.((Seismometer(x) & EarthquakeEarthquake(y) & (Strength(z) | Magnitude(z))) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_338", "prediction": "all x.(Seismometer(x) -> ChecksSeismicActivity(x))", "score": 0}
{"id": "eqasc_validation_338", "prediction": "all x.(Seismometer(x) -> ChecksForSeismicActivity(x))", "score": 0}
{"id": "eqasc_validation_338", "prediction": "all x y.((Seismometer(x) & SeismicActivity(y)) -> Checks(x,y))", "score": 0}
{"id": "eqasc_validation_338", "prediction": "all x y.((Seismometer(x) & SeismicActivity(y)) -> ChecksFor(x,y))", "score": 0}
{"id": "eqasc_validation_338", "prediction": "all x y z.((Seismometer(x) & SeismicActivity(y) & SeismicActivity(z)) -> Checks(x,y,z))", "score": 0}
{"id": "eqasc_validation_338", "prediction": "all x.(Seismometer(x) -> CheckSeismicActivity(x))", "score": 0}
{"id": "eqasc_validation_338", "prediction": "all x y z.((Seismometer(x) & SeismicActivity(y) & SeismicActivity(z)) -> ChecksFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_338", "prediction": "all x y.((Seismometer(x) & SeismicActivity(y)) -> Check(x,y))", "score": 0}
{"id": "eqasc_validation_338", "prediction": "all x.(Seismometer(x) -> CheckForSeismicActivity(x))", "score": 0}
{"id": "eqasc_validation_338", "prediction": "all x.(Seismometer(x) -> Checks(x,SeismicActivity))", "score": 0}
{"id": "eqasc_validation_338", "prediction": "all x y z.((Seismometer(x) & SeismicActivity(y) & Activity(z)) -> Checks(x,y,z))", "score": 0}
{"id": "eqasc_validation_338", "prediction": "all x y z.((Seismometer(x) & SeismicActivity(y) & Activity(z)) -> ChecksFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_338", "prediction": "all x y.((Seismometer(x) & SeismicActivity(y)) -> Checked(x,y))", "score": 0}
{"id": "eqasc_validation_338", "prediction": "all x y.((Seismometer(x) & SeismicActivity(y) & Checks(x,y)) -> Checks(x,y))", "score": 0}
{"id": "eqasc_validation_338", "prediction": "all x y z.((Seismometer(x) & SeismicActivity(y) & SeismicActivity(z)) -> Check(x,y,z))", "score": 0}
{"id": "eqasc_validation_338", "prediction": "all x y z.((Seismometer(x) & SeismicActivity(y) & SeismicActivity(z)) -> Checks(x,y))", "score": 0}
{"id": "eqasc_validation_339", "prediction": "all x y.((SeismicActivity(x) & Earthquake(y)) -> (TellsStrength(x,y) | TellsMagnitude(x,y)))", "score": 0}
{"id": "eqasc_validation_339", "prediction": "all x y.((SeismicActivity(x) & Earthquake(y)) -> (Storm(x,y) | Magnitude(x,y)))", "score": 0}
{"id": "eqasc_validation_339", "prediction": "all x.(SeismicActivity(x) -> (TellsStrength(x) | TellsMagnitude(x)))", "score": 0}
{"id": "eqasc_validation_339", "prediction": "all x y z.((SeismicActivity(x) & Earthquake(y) & (Strength(z) | Magnitude(z))) -> Tells(x,y))", "score": 0}
{"id": "eqasc_validation_339", "prediction": "all x y.((SeismicActivity(x) & Earthquake(y)) -> (FindsStrength(x,y) | TellsMagnitude(x,y)))", "score": 0}
{"id": "eqasc_validation_339", "prediction": "all x y z.((SeismicActivity(x) & Earthquake(y) & (Strength(z) | Magnitude(z))) -> Tells(x,y,z))", "score": 0}
{"id": "eqasc_validation_339", "prediction": "all x y.((SeismicActivity(x) & Earthquake(y)) -> (ProvesStrength(x,y) | TellsMagnitude(x,y)))", "score": 0}
{"id": "eqasc_validation_339", "prediction": "all x y.((SeismicActivity(x) & Earthquake(y)) -> (Severity(x,y) | Magnitude(x,y)))", "score": 0}
{"id": "eqasc_validation_339", "prediction": "all x.(SeismicActivity(x) -> (TellsStrengthOfEarthquake(x) | TellsMagnitudeOfEarthquake(x)))", "score": 0}
{"id": "eqasc_validation_339", "prediction": "all x y.((SeismicActivity(x) & Earthquake(y)) -> (TellsStrengthOrMagnitude(x,y)))", "score": 0}
{"id": "eqasc_validation_339", "prediction": "all x.(SeismicActivity(x) -> (FindsStrength(x) | TellsMagnitude(x)))", "score": 0}
{"id": "eqasc_validation_339", "prediction": "all x.(SeismicActivity(x) -> (Storm(x) | Magnitude(x)))", "score": 0}
{"id": "eqasc_validation_339", "prediction": "all x y.((SeismicActivity(x) & Earthquake(y)) -> (StaysStrength(x,y) | TellsMagnitude(x,y)))", "score": 0}
{"id": "eqasc_validation_339", "prediction": "all x y.((SeismicActivity(x) & Earthquake(y)) -> (TellsStrength(x,y) | TellsMajority(x,y)))", "score": 0}
{"id": "eqasc_validation_339", "prediction": "all x y z.((SeismicActivity(x) & Earthquake(y) & (Strength(z) | Magnitude(z))) -> TellsSignificanceOrMagnitude(x,y,z))", "score": 0}
{"id": "eqasc_validation_339", "prediction": "all x y.((SeismicActivity(x) & Earthquake(y)) -> (StaysStrength(x,y) | SaysMagnitude(x,y)))", "score": 0}
{"id": "eqasc_validation_340", "prediction": "all x y.((HomemadeSeismometer(x) & HomemadeSeismometer(y)) -> CalibrationInstructions(x,y))", "score": 0}
{"id": "eqasc_validation_340", "prediction": "all x.(SeismometerCalibration(x) -> (InstructionsOnCalculatingHomemadeSeismometer(x)))", "score": 0}
{"id": "eqasc_validation_340", "prediction": "all x y.((HomemadeSeismometer(x) & HomemadeSeismometer(y)) -> Calibration(x,y))", "score": 0}
{"id": "eqasc_validation_340", "prediction": "all x y.((Seismometer(x) & Homemade(y)) -> Calibration(x,y))", "score": 0}
{"id": "eqasc_validation_340", "prediction": "all x.((Seismometer(x) & Calibration(x)) -> InstructionsOnCalculating(x,HomemadeSeismometer))", "score": 0}
{"id": "eqasc_validation_340", "prediction": "all x.((HomemadeSeismometer(x) & Calibration(x)) -> InstructionsOnCalculating(x))", "score": 0}
{"id": "eqasc_validation_340", "prediction": "all x y.((Seismometer(x) & Homemade(y)) -> CalibrationInstructions(x,y))", "score": 0}
{"id": "eqasc_validation_340", "prediction": "all x.((HomemadeSeismometer(x) & Calibration(x)) -> InstructionsOnCalculating(x,HomemadeSeismometer))", "score": 0}
{"id": "eqasc_validation_340", "prediction": "all x.((HomemadeSeismometer(x) & Calibration(x)) -> InstructionsOnCalculating(x,y))", "score": 0}
{"id": "eqasc_validation_340", "prediction": "all x.(SeismometerCalibration(x) -> (InstructionsOnCalculating(x) & HomemadeSeismometer(x)))", "score": 0}
{"id": "eqasc_validation_340", "prediction": "all x y.((HomemadeSeismometer(x) & Seismometer(y)) -> CalibrationInstructions(x,y))", "score": 0}
{"id": "eqasc_validation_340", "prediction": "all x.((Seismometer(x) & Calibration(x)) -> InstructionsOnCalculating(x))", "score": 0}
{"id": "eqasc_validation_340", "prediction": "all x.(SeismometerCalibration(x) -> InstructionsOnCalculating(x,HomemadeSeismometer))", "score": 0}
{"id": "eqasc_validation_340", "prediction": "all x y.((Seismometer(x) & Seismometer(y)) -> Calibration(x,y))", "score": 0}
{"id": "eqasc_validation_340", "prediction": "all x y.((HomemadeSeismometer(x) & Seismometer(y)) -> Calibration(x,y))", "score": 0}
{"id": "eqasc_validation_340", "prediction": "all x.((SeismometerCalibration(x) & Homemade(x)) -> InstructionsOnCalculating(x,y))", "score": 0}
{"id": "eqasc_validation_341", "prediction": "all x y.((Instrument(x) & Earthquake(y)) -> CanMeasureMagnitude(x,y))", "score": 0}
{"id": "eqasc_validation_341", "prediction": "all x y.((Instrument(x) & Earthquake(y)) -> Calibrated(x,y))", "score": 0}
{"id": "eqasc_validation_341", "prediction": "all x.((Instrument(x) & Calibrated(x)) -> MeasuresMagnitudeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_341", "prediction": "all x.((Instrument(x) & Calibred(x)) -> MeasuresMagnitudeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_341", "prediction": "all x.((Instrument(x) & CanMeasureMagnitudeOfEarthquake(x)) -> Calibrated(x))", "score": 0}
{"id": "eqasc_validation_341", "prediction": "all x.((Instrument(x) & Calculated(x)) -> MeasuresMagnitudeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_341", "prediction": "all x.((Instrument(x) & Calibrated(x)) -> CanMeasureMagnitudeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_341", "prediction": "all x y.((Instrument(x) & Earthquake(y)) -> Calibrated(x))", "score": 0}
{"id": "eqasc_validation_341", "prediction": "all x y.((Instrument(x) & Earthquake(y)) -> CalibratedBeforeMeasurement(x,y))", "score": 0}
{"id": "eqasc_validation_341", "prediction": "all x y.((Instrument(x) & Earthquake(y)) -> MustBeCalculated(x,y))", "score": 0}
{"id": "eqasc_validation_341", "prediction": "all x.((Instrument(x) & MeasuresMagnitudeOfEarthquake(x)) -> Calibrated(x))", "score": 0}
{"id": "eqasc_validation_341", "prediction": "all x.((Instrument(x) & CanMeasureMagnitudeOfEarthquake(x)) -> CanBeCalculated(x))", "score": 0}
{"id": "eqasc_validation_341", "prediction": "all x y.((Instrument(x) & Earthquake(y) & Calibrated(x,y)) -> MeasuresMagnitude(x,y))", "score": 0}
{"id": "eqasc_validation_341", "prediction": "all x.((Instrument(x) & CanMeasureMagnitude(x)) -> Calibrated(x))", "score": 0}
{"id": "eqasc_validation_341", "prediction": "all x y.((Instrument(x) & Earthquake(y)) -> Calibred(x,y))", "score": 0}
{"id": "eqasc_validation_342", "prediction": "all x y z.((Earthquake(x) & Scale(y) & Scale(z)) -> MeasuredOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_342", "prediction": "all x y.((Earthquake(x) & Scale(y)) -> MeasuredOn(x,y))", "score": 0}
{"id": "eqasc_validation_342", "prediction": "all x y z.((Earthquake(x) & Scale(y) & Scale(z)) -> MeasuredOnScale(x,y,z))", "score": 0}
{"id": "eqasc_validation_342", "prediction": "all x y.((Earthquake(x) & Scale(y)) -> MeasuredOnScale(x,y))", "score": 0}
{"id": "eqasc_validation_342", "prediction": "all x.(Earthquake(x) -> (MeasuredOnScale(x,1) & MeasuredOnScale(x,10)))", "score": 0}
{"id": "eqasc_validation_342", "prediction": "all x y z.((Earthquake(x) & Scale(y) & Scale(z)) -> MeasurableOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_342", "prediction": "all x y z.((Earthquake(x) & Scale(y) & Scale(z)) -> Measuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_342", "prediction": "all x.(Earthquake(x) -> MeasuredOnScale(x,1) & MeasuredOnScale(x,10)))", "score": -1}
{"id": "eqasc_validation_342", "prediction": "all x y z.((Earthquake(x) & Scale(y) & Scale(z) & MeasurableOn(x,y,z)) -> MeasuredOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_342", "prediction": "all x y z.((Earthquake(x) & Scale(y) & Scale(z) & MeasuredOn(x,y,z)) -> ScaleOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_342", "prediction": "all x y z.((Earthquake(x) & Scale(y) & Scale(z)) -> MeasurableOnScale(x,y,z))", "score": 0}
{"id": "eqasc_validation_342", "prediction": "all x y z.((Earthquake(x) & Scale(y) & Scale(z) & MeasuredOn(x,y,z)) -> MeasuredOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_343", "prediction": "all x.(Seismometer(x) -> GoesUpTo(x,10))", "score": 0}
{"id": "eqasc_validation_343", "prediction": "all x.(Seismometer(x) -> GoesUpTo10(x))", "score": 0}
{"id": "eqasc_validation_343", "prediction": "all x y.((Seismometer(x) & Seismometer(y)) -> GoesUpTo(x,y))", "score": 0}
{"id": "eqasc_validation_343", "prediction": "all x y z.((Seismometer(x) & Seismometer(y) & Seismometer(z)) -> GoesUpTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_343", "prediction": "all x.(Seismometer(x) -> (GoesUpTo10(x) & Seismometer(x)))", "score": 0}
{"id": "eqasc_validation_343", "prediction": "all x.(Seismometer(x) -> (GoesUpTo(x,10) & GoesUpTo(x,10)))", "score": 0}
{"id": "eqasc_validation_343", "prediction": "all x y.((Seismometer(x) & Seismometer(y)) -> (GoesUpTo(x,y) & UpTo(x,y)))", "score": 0}
{"id": "eqasc_validation_343", "prediction": "all x y.((Seismometer(x) & Seismometer(y)) -> (GoesUpTo(x,y) & UpTo(y,10)))", "score": 0}
{"id": "eqasc_validation_343", "prediction": "all x.(Seismometer(x) -> (GoesUpTo(x,10) & Seismometer(x,10)))", "score": 0}
{"id": "eqasc_validation_343", "prediction": "all x y.((Seismometer(x) & Seismometer(y)) -> GoesUpTo(x,10))", "score": 0}
{"id": "eqasc_validation_343", "prediction": "all x y.((Seismometer(x) & Seismometer(y)) -> (GoesUpTo(x,10) & GoesUpTo(y,10)))", "score": 0}
{"id": "eqasc_validation_343", "prediction": "all x.(Seismometer(x) -> (GoesUpTo(x,10) | GoesTo(x,10)))", "score": 0}
{"id": "eqasc_validation_343", "prediction": "all x.(Seismometer(x) -> (GoesUpTo(x,10) & GoesTo(x,10)))", "score": 0}
{"id": "eqasc_validation_343", "prediction": "all x.(Seismometer(x) -> (GoesUpTo10(x) | GoesTo10(x)))", "score": 0}
{"id": "eqasc_validation_343", "prediction": "all x y.((Seismometer(x) & Seismometer(y)) -> (GoesUpTo(x,10) & GoesUpTo(x,10)))", "score": 0}
{"id": "eqasc_validation_343", "prediction": "all x y.((Seismometer(x) & Seismometer(y)) -> GoesUpTo10(x,y))", "score": 0}
{"id": "eqasc_validation_344", "prediction": "all x.(Earthquake(x) -> CausedByFaultMovement(x))", "score": 0}
{"id": "eqasc_validation_344", "prediction": "all x y.((Earthquake(x) & FaultMovement(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_344", "prediction": "all x y z.((Earthquake(x) & FaultMovement(y) & FaultMovement(z)) -> CausedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_344", "prediction": "all x y.((Earthquake(x) & FaultMovement(y)) -> Caused(x,y))", "score": 0}
{"id": "eqasc_validation_344", "prediction": "all x y.((Earthquake(x) & FaultMovement(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_344", "prediction": "all x y z.((Earthquake(x) & FaultMovement(y) & FaultMovement(z)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_344", "prediction": "all x.(Earthquake(x) -> (CausedByFaultMovement(x) & CausedByFaultMovement(x)))", "score": 0}
{"id": "eqasc_validation_344", "prediction": "all x y z.((Earthquake(x) & FaultMovement(y) & CausedBy(x,y)) -> CausedBy(x,z))", "score": 0}
{"id": "eqasc_validation_344", "prediction": "all x.((Earthquake(x) & CausedByFaultMovement(x)) -> CausedByFaultMovement(x))", "score": 0}
{"id": "eqasc_validation_344", "prediction": "all x y z.((Earthquake(x) & FaultMovement(y) & CausedBy(x,y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_344", "prediction": "all x y z.((Earthquake(x) & FaultMovement(y) & FaultMovement(z)) -> Caused(x,y,z))", "score": 0}
{"id": "eqasc_validation_344", "prediction": "all x y z.((Earthquake(x) & FaultMovement(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_344", "prediction": "all x y.((Earthquake(x) & Fault(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_345", "prediction": "all x y z.((Seismometer(x) & (FaultMovement(y) | FaultMovement(z))) -> MeasuresStrengthOrMagnitudeOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_345", "prediction": "all x y z.((Seismometer(x) & (FaultMovement(y) | FaultMovement(z))) -> MeasuresStrengthOrMagnitude(x,y,z))", "score": 0}
{"id": "eqasc_validation_345", "prediction": "all x y.((Seismometer(x) & (FaultMovement(y) | FaultMovement(y))) -> MeasuresStrengthOrMagnitude(x,y))", "score": 0}
{"id": "eqasc_validation_345", "prediction": "all x.(Seismometer(x) -> (MeasuresStrengthOrMagnitude(x) & CausedByFaultMovement(x)))", "score": 0}
{"id": "eqasc_validation_345", "prediction": "all x y.((Seismometer(x) & (FaultMovement(y) | FaultMovement(y))) -> MeasuresStrengthOrMagnitudeOf(x,y))", "score": 0}
{"id": "eqasc_validation_345", "prediction": "all x.(Seismometer(x) -> (MeasuresStrengthOrMagnitudeOfFaultMovement(x) & CausedByFaultMovement(x)))", "score": 0}
{"id": "eqasc_validation_345", "prediction": "all x.(Seismometer(x) -> MeasuresStrengthOrMagnitudeOfFaultMovement(x))", "score": 0}
{"id": "eqasc_validation_345", "prediction": "all x.(Seismometer(x) -> (MeasuresStrengthOrMagnitudeOfFault(x) & CausedByFaultMovement(x)))", "score": 0}
{"id": "eqasc_validation_345", "prediction": "all x y.((Seismometer(x) & CausedByFaultMovement(y)) -> MeasuresStrengthOrMagnitude(x,y))", "score": 0}
{"id": "eqasc_validation_345", "prediction": "all x y z.((Seismometer(x) & (Strength(y) | Magnitude(y)) & FaultMovement(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_345", "prediction": "all x.(Seismometer(x) -> (MeasuresStrengthOrMagnitudeOfFaultMovement(x) & CausesFaultMovement(x)))", "score": 0}
{"id": "eqasc_validation_345", "prediction": "all x y.((Seismometer(x) & CausedByFaultMovement(y)) -> MeasuresStrengthOrMagnitudeOf(x,y))", "score": 0}
{"id": "eqasc_validation_345", "prediction": "all x y.((Seismometer(x) & FaultMovement(y)) -> MeasuresStrengthOrMagnitude(x,y))", "score": 0}
{"id": "eqasc_validation_345", "prediction": "all x y.((Seismometer(x) & FaultMovement(y)) -> MeasuresStrengthOrMagnitudeOf(x,y))", "score": 0}
{"id": "eqasc_validation_345", "prediction": "all x y.((Seismometer(x) & MeasuresStrengthOrMagnitude(x,y)) -> CausedByFaultMovement(y))", "score": 0}
{"id": "eqasc_validation_345", "prediction": "all x y z.((Seismometer(x) & (FaultMovement(y) | FaultMovement(z))) -> MeasuresStrengthOrMagnitude(x,y))", "score": 0}
{"id": "eqasc_validation_346", "prediction": "all x.((RiverScale(x) & DevelopedIn1935(x)) -> (MeasuresEarthquake(x) & UsesSeismometer(x) & MeasuresMaxAmplitudeOfShaking(x)))", "score": 0}
{"id": "eqasc_validation_346", "prediction": "all x.((RiverScale(x) & DevelopedIn1935(x)) -> MeasuresEarthquake(x))", "score": 0}
{"id": "eqasc_validation_346", "prediction": "all x.((RiverScale(x) & DevelopedIn 1935(x)) -> MeasuresEarthquake(x))", "score": -1}
{"id": "eqasc_validation_346", "prediction": "all x.(RiverScale(x) -> (DevelopedIn1935(x) & MeasuresEarthquake(x) & UsesSeismometer(x) & MeasuresMaxAmplitudeOfShaking(x)))", "score": 0}
{"id": "eqasc_validation_346", "prediction": "all x.(RiverScale(x) -> (DevelopedIn(x, 1935) & MeasuresEarthquake(x) & UsesSeismometer(x) & MeasuresMaxAmplitudeOfShaking(x)))", "score": 0}
{"id": "eqasc_validation_346", "prediction": "all x.((RiverScale(x) & DevelopedIn1935(x)) -> (MeasuresEarthquake(x) & UsesSeismometer(x) & MeasuresMaxAmplitude(x)))", "score": 0}
{"id": "eqasc_validation_346", "prediction": "all x.(RiverScale(x) -> (DevelopedIn1935(x) & MeasuresEarthquake(x) & UsesSeismometer(x) & MeasuresMaxAmplitude(x)))", "score": 0}
{"id": "eqasc_validation_346", "prediction": "all x y.((RiverScale(x) & DevelopedIn1935(x) & StandardSeismometer(y)) -> MeasuresEarthquake(x,y))", "score": 0}
{"id": "eqasc_validation_346", "prediction": "all x.(RiverScale(x) -> (DevelopedIn(x, 1935) & MeasuresEarthquake(x) & UsesSeismometer(x) & MeasuresMaxAmplitude(x)))", "score": 0}
{"id": "eqasc_validation_346", "prediction": "all x.((RiverScale(x) & DevelopedIn(x, 1935)) -> MeasuresEarthquake(x))", "score": 0}
{"id": "eqasc_validation_346", "prediction": "all x y.((RiverScale(x) & DevelopedIn1935(x)) -> MeasuresEarthquake(x,y))", "score": 0}
{"id": "eqasc_validation_346", "prediction": "all x y z.((RiverScale(x) & DevelopedIn1935(x) & Earthquake(y) & StandardSeismometer(z)) -> MeasuresMaxAmplitude(x,y,z))", "score": 0}
{"id": "eqasc_validation_346", "prediction": "all x y.((RiverScale(x) & DevelopedIn 1935(x)) -> MeasuresEarthquake(x,y))", "score": -1}
{"id": "eqasc_validation_347", "prediction": "all x y.((Earthquake(x) & MaximumAmplitude(y)) -> StrengthRefersTo(x,y))", "score": 0}
{"id": "eqasc_validation_347", "prediction": "all x y.((Earthquake(x) & Shaking(y)) -> MaximumAmplitude(x,y))", "score": 0}
{"id": "eqasc_validation_347", "prediction": "all x y z.((Earthquake(x) & MaximumAmplitude(y) & Shaking(z)) -> StrengthRefersTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_347", "prediction": "all x y z.((Earthquake(x) & Strength(y) & Shaking(z)) -> MaximumAmplitude(y,z))", "score": 0}
{"id": "eqasc_validation_347", "prediction": "all x y.((Earthquake(x) & Strength(y)) -> MaximumAmplitudeOfShaking(x,y))", "score": 0}
{"id": "eqasc_validation_347", "prediction": "all x y.((Earthquake(x) & Strength(y)) -> MaximumAmplitude(x,y))", "score": 0}
{"id": "eqasc_validation_347", "prediction": "all x y.((Earthquake(x) & Shaking(y) & MaximumAmplitude(x,y)) -> StrengthRefersTo(x,y))", "score": 0}
{"id": "eqasc_validation_347", "prediction": "all x y z.((Earthquake(x) & Strength(y) & Shaking(z)) -> MaximumAmplitude(x,z))", "score": 0}
{"id": "eqasc_validation_347", "prediction": "all x.(EarthquakeStrength(x) -> MaximumAmplitudeOfShaking(x))", "score": 0}
{"id": "eqasc_validation_347", "prediction": "all x y.((Earthquake(x) & MaximumAmplitudeOfShaking(y)) -> StrengthRefersTo(x,y))", "score": 0}
{"id": "eqasc_validation_347", "prediction": "all x y z.((Earthquake(x) & MaximumAmplitude(y) & Shaking(z)) -> Strength(x,y,z))", "score": 0}
{"id": "eqasc_validation_347", "prediction": "all x y z.((Earthquake(x) & Strength(y) & Shaking(z)) -> MaximumAmplitude(x,y,z))", "score": 0}
{"id": "eqasc_validation_347", "prediction": "all x y.((Earthquake(x) & MaximumAmplitude(y)) -> Strength(x,y))", "score": 0}
{"id": "eqasc_validation_347", "prediction": "all x y z.((Earthquake(x) & MaximumAmplitude(y) & Shaking(z)) -> StrengthRefersTo(x,y))", "score": 0}
{"id": "eqasc_validation_347", "prediction": "all x.(Earthquake(x) -> MaximumAmplitudeOfShaking(x))", "score": 0}
{"id": "eqasc_validation_348", "prediction": "all x.(RiverScale(x) -> (ProvidesInformationOnMagnitude(x) | InherentStrength(x)))", "score": 0}
{"id": "eqasc_validation_348", "prediction": "all x.(RiverScale(x) -> (ProvidesInformationOnMagnitude(x) | ProvidesInherentStrength(x)))", "score": 0}
{"id": "eqasc_validation_348", "prediction": "all x.(RiverScale(x) -> (ProvidesInformationOnMagnitudeOrInherentStrengthOfEarthquake(x)))", "score": 0}
{"id": "eqasc_validation_348", "prediction": "all x y.((RiverScale(x) & Earthquake(y)) -> (ProvidesInformationOnMajority(x,y) | InherentStrength(x,y)))", "score": 0}
{"id": "eqasc_validation_348", "prediction": "all x y.((RiverScale(x) & Earthquake(y)) -> (ProvidesInformationOnMajority(x,y) | ProvidesInherentStrength(x,y)))", "score": 0}
{"id": "eqasc_validation_348", "prediction": "all x y.((RiverScale(x) & Earthquake(y)) -> (ProvidesInformationOnMagnitude(x,y) | InherentStrength(x,y)))", "score": 0}
{"id": "eqasc_validation_348", "prediction": "all x.(RiverScale(x) -> (ProvidesInformationOnMagnitudeOrInherentStrength(x) & Earthquake(x)))", "score": 0}
{"id": "eqasc_validation_348", "prediction": "all x y z.((RiverScale(x) & Earthquake(y) & (Magnitude(z) | InherentStrength(z))) -> ProvidesInformation(x,y,z))", "score": 0}
{"id": "eqasc_validation_348", "prediction": "all x y.((RiverScale(x) & Earthquake(y)) -> ProvidesInformationOnMajorityOrInherentStrength(x,y))", "score": 0}
{"id": "eqasc_validation_348", "prediction": "all x y.((RiverScale(x) & Earthquake(y)) -> (ProvidesInformationOnMagnitude(x,y) | ProvidesInherentStrength(x,y)))", "score": 0}
{"id": "eqasc_validation_348", "prediction": "all x y z.((RiverScale(x) & Earthquake(y) & (Magnitude(z) | InherentStrength(z))) -> ProvidesInformation(x,y))", "score": 0}
{"id": "eqasc_validation_348", "prediction": "all x.(RiverScale(x) -> (ProvidesInformationOnMajority(x) | InherentStrength(x)))", "score": 0}
{"id": "eqasc_validation_348", "prediction": "all x.(RiverScale(x) -> (ProvidesInformationOnMajority(x) | ProvidesInherentStrength(x)))", "score": 0}
{"id": "eqasc_validation_348", "prediction": "all x y.((RiverScale(x) & Earthquake(y)) -> (ProvidesInformationOnMajorityOrInherentStrength(x,y)))", "score": 0}
{"id": "eqasc_validation_348", "prediction": "all x y.((RiverScale(x) & Earthquake(y)) -> (ProvidesInformationOnMagnitudeOrInherentStrength(x,y)))", "score": 0}
{"id": "eqasc_validation_348", "prediction": "all x y.((RiverScale(x) & Earthquake(y)) -> ProvidesInformationOnMagnitudeOrInherentStrength(x,y))", "score": 0}
{"id": "eqasc_validation_349", "prediction": "all x y.((RiverScale(x) & Seismometer(y)) -> UsesReadingsFrom(x,y))", "score": 0}
{"id": "eqasc_validation_349", "prediction": "all x.(RiverScale(x) -> UsesReadingsFromSeismometers(x))", "score": 0}
{"id": "eqasc_validation_349", "prediction": "all x.(RiverScale(x) -> (UsesReadingsFromSeismometers(x) & UsesReadingsFromSeismometers(x)))", "score": 0}
{"id": "eqasc_validation_349", "prediction": "all x y z.((RiverScale(x) & Seismometer(y) & Seismometer(z)) -> UsesReadingsFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_349", "prediction": "all x y.((RiverScale(x) & Seismometer(y)) -> UsesReadings(x,y))", "score": 0}
{"id": "eqasc_validation_349", "prediction": "all x y z.((RiverScale(x) & Seismometer(y) & Reading(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_349", "prediction": "all x.(RiverScale(x) -> (UsesReadingsFromSeismometers(x) & UsesReadingsFromSeismometers(x) & UsesReadingsFromSeismometers(x)))", "score": 0}
{"id": "eqasc_validation_349", "prediction": "all x y z.((RiverScale(x) & Reading(y) & Seismometer(z)) -> UsesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_349", "prediction": "all x.(RiverScale(x) -> (UsesReadingsFromSeismometers(x) & UsesReadingsFromSeismometers(x) & UsesReadingsFromSeismometers(x) & UsesReadingsFromSeismometers(x)))", "score": 0}
{"id": "eqasc_validation_349", "prediction": "all x.(RiverScale(x) -> (UsesReadingsFromSeismometers(x) & UsesReadingsFromSeismometers(x) & UsesReadingsFromSeismometers(x) & UsesReadingsFromSeismometers(x) & UsesReadingsFromSeismometers(x)))", "score": 0}
{"id": "eqasc_validation_349", "prediction": "all x y.((RiverScale(x) & Seismometer(y)) -> UsesReading(x,y))", "score": 0}
{"id": "eqasc_validation_349", "prediction": "all x y z.((RiverScale(x) & Seismometer(y) & Reading(z)) -> UsesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_349", "prediction": "all x.(RiverScale(x) -> (UsesReadingsFromSeismometers(x) & UsesReadingsFromSeismometers(x) & UsesReadingsFromSeismometers(x) & UsesReadingsFromSeismometers(x) & UsesReadingsFromSeismometers(x) & UsesReadingsFromSeismometers(x)))", "score": 0}
{"id": "eqasc_validation_349", "prediction": "all x y z.((RiverScale(x) & Reading(y) & Seismometer(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_349", "prediction": "all x y z.((RiverScale(x) & ReadingsFromSeismometers(y) & Seismometer(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_349", "prediction": "all x y z.((RiverScale(x) & Seismometer(y) & Seismometer(z)) -> UsesReading(x,y,z))", "score": 0}
{"id": "eqasc_validation_350", "prediction": "all x.(Seismometer(x) -> (MeasuresStrengthOrMagnitudeOfFaultMovement(x)))", "score": 0}
{"id": "eqasc_validation_350", "prediction": "all x.(Seismometer(x) -> MeasuresStrengthOrMagnitudeOfFaultMovement(x))", "score": 0}
{"id": "eqasc_validation_350", "prediction": "all x.(Seismometer(x) -> (MeasuresStrengthOfFaultMovement(x) | MeasuresMagnitudeOfFaultMovement(x)))", "score": 0}
{"id": "eqasc_validation_350", "prediction": "all x y.((Seismometer(x) & FaultMovement(y)) -> MeasuresStrengthOrMagnitude(x,y))", "score": 0}
{"id": "eqasc_validation_350", "prediction": "all x y.((Seismometer(x) & FaultMovement(y)) -> (MeasuresStrength(x,y) | MeasuresMagnitude(x,y)))", "score": 0}
{"id": "eqasc_validation_350", "prediction": "all x.(Seismometer(x) -> (MeasuresStrength(x) | MeasuresMagnitude(x)))", "score": 0}
{"id": "eqasc_validation_350", "prediction": "all x.(Seismometer(x) -> (MeasuresStrengthOrMagnitudeOfFaultMovement(x) & MeasuresStrengthOrMagnitudeOfFaultMovement(x)))", "score": 0}
{"id": "eqasc_validation_350", "prediction": "all x y.((Seismometer(x) & FaultMovement(y)) -> (MeasuresStrengthOrMagnitude(x,y)))", "score": 0}
{"id": "eqasc_validation_350", "prediction": "all x y.((Seismometer(x) & (FaultMovement(y) | FaultMovement(y))) -> MeasuresStrengthOrMagnitude(x,y))", "score": 0}
{"id": "eqasc_validation_350", "prediction": "all x.(Seismometer(x) -> (MeasuresStrengthOfFault(x) | MeasuresMagnitudeOfFault(x)))", "score": 0}
{"id": "eqasc_validation_350", "prediction": "all x.(Seismometer(x) -> (MeasuresStrengthOrMagnitudeOfFaultMovement(x) & MeasuresFaultMovement(x)))", "score": 0}
{"id": "eqasc_validation_350", "prediction": "all x y z.((Seismometer(x) & (Strength(y) | Magnitude(y)) & FaultMovement(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_350", "prediction": "all x.(Seismometer(x) -> (MeasuresStrengthOrMagnitudeOfFault(x)))", "score": 0}
{"id": "eqasc_validation_350", "prediction": "all x.((Seismometer(x) & MeasuresStrengthOrMagnitudeOfFaultMovement(x)) -> MeasuresFaultMovement(x))", "score": 0}
{"id": "eqasc_validation_350", "prediction": "all x.(Seismometer(x) -> (MeasuresFaultStrength(x) | MeasuresFaultMagnitude(x)))", "score": 0}
{"id": "eqasc_validation_351", "prediction": "all x y.((Seismometer(x) & RichterScene(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_351", "prediction": "all x y.((Seismometer(x) & RichterScale(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_351", "prediction": "all x y z.((Seismometer(x) & RichterScene(y) & Scale(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_351", "prediction": "all x y.((Seismometer(x) & RichterScene(y)) -> MeasuresRichterScene(x,y))", "score": 0}
{"id": "eqasc_validation_351", "prediction": "all x y z.((Seismometer(x) & RichterScale(y) & Scale(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_351", "prediction": "all x y.((Seismometer(x) & RichterScale(y)) -> MeasuresRichterScale(x,y))", "score": 0}
{"id": "eqasc_validation_351", "prediction": "all x.(Seismometer(x) -> MeasuresRichterScales(x))", "score": 0}
{"id": "eqasc_validation_351", "prediction": "all x y.((Seismometer(x) & RichterScene(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_351", "prediction": "all x y.((Seismometer(x) & RichterScale(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_351", "prediction": "all x y z.((Seismometer(x) & RichterScene(y) & RichterScene(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_351", "prediction": "all x y z.((Seismometer(x) & RichterScene(y) & Scale(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_351", "prediction": "all x y.((Seismometer(x) & RichterScales(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_351", "prediction": "all x y.((Seismometer(x) & RichterScale(y)) -> MeasuresScale(x,y))", "score": 0}
{"id": "eqasc_validation_351", "prediction": "all x y z.((Seismometer(x) & RichterScene(y) & Scale(z)) -> MeasuresRichterScene(x,y,z))", "score": 0}
{"id": "eqasc_validation_351", "prediction": "all x y z.((Seismometer(x) & RichterScale(y) & Scale(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_351", "prediction": "all x y z.((Seismometer(x) & RichterScene(y) & Scale(z)) -> MeasuresRichter(x,y,z))", "score": 0}
{"id": "eqasc_validation_352", "prediction": "all x y.((Intensity(x) & Earthquake(y)) -> MeasuresStrengthOfShaking(x,y))", "score": 0}
{"id": "eqasc_validation_352", "prediction": "all x.(Intensity(x) -> (MeasuresStrengthOfShaking(x) & ExperiencedInEarthquake(x)))", "score": 0}
{"id": "eqasc_validation_352", "prediction": "all x.(Intensity(x) -> (MeasuresShakingStrength(x) & ExperiencedInEarthquake(x)))", "score": 0}
{"id": "eqasc_validation_352", "prediction": "all x y.((Intensity(x) & Earthquake(y)) -> StrengthOfShaking(x,y))", "score": 0}
{"id": "eqasc_validation_352", "prediction": "all x y.((Intensity(x) & Earthquake(y)) -> (MeasuresStrengthOfShaking(x,y) & ExperiencedIn(x,y)))", "score": 0}
{"id": "eqasc_validation_352", "prediction": "all x y z.((Intensity(x) & Earthquake(y) & Shaking(z)) -> MeasuresStrength(x,y,z))", "score": 0}
{"id": "eqasc_validation_352", "prediction": "all x.(Intensity(x) -> (MeasuresStrengthOfShakingInEarthquake(x) & ExperiencedInEarthquake(x)))", "score": 0}
{"id": "eqasc_validation_352", "prediction": "all x y.((Intensity(x) & Earthquake(y)) -> MeasuresShakingStrength(x,y))", "score": 0}
{"id": "eqasc_validation_352", "prediction": "all x y z.((Intensity(x) & Shaking(y) & Earthquake(z)) -> MeasuresStrength(x,y,z))", "score": 0}
{"id": "eqasc_validation_352", "prediction": "all x y.((Intensity(x) & Earthquake(y) & ExperiencedIn(x,y)) -> MeasuresStrengthOfShaking(x,y))", "score": 0}
{"id": "eqasc_validation_353", "prediction": "all x.(Seismometer(x) -> MeasuresIntensityOfShakingOfEarthquakes(x))", "score": 0}
{"id": "eqasc_validation_353", "prediction": "all x y.((Seismometer(x) & Earthquake(y)) -> MeasuresIntensityOfShaking(x,y))", "score": 0}
{"id": "eqasc_validation_353", "prediction": "all x.(Seismometer(x) -> MeasuresIntensityOfShaking(x))", "score": 0}
{"id": "eqasc_validation_353", "prediction": "all x y z.((Seismometer(x) & Earthquake(y) & Shaking(z)) -> MeasuresIntensity(x,y,z))", "score": 0}
{"id": "eqasc_validation_353", "prediction": "all x y z.((Seismometer(x) & Earthquake(y) & Earthquake(z)) -> MeasuresIntensityOfShaking(x,y,z))", "score": 0}
{"id": "eqasc_validation_353", "prediction": "all x y.((Seismometer(x) & Earthquake(y)) -> MeasuresShakingIntensity(x,y))", "score": 0}
{"id": "eqasc_validation_353", "prediction": "all x y z.((Seismometer(x) & Earthquake(y) & Shaking(z)) -> MeasuresIntensityOfShaking(x,y,z))", "score": 0}
{"id": "eqasc_validation_353", "prediction": "all x.(Seismometer(x) -> MeasuresShakingIntensity(x))", "score": 0}
{"id": "eqasc_validation_353", "prediction": "all x.(Seismometer(x) -> MeasuresShakingIntensityOfEarthquakes(x))", "score": 0}
{"id": "eqasc_validation_353", "prediction": "all x y z.((Seismometer(x) & Earthquake(y) & ShakingIntensity(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_353", "prediction": "all x.(Seismometer(x) -> MeasuresIntensityOfShakingEarthquakes(x))", "score": 0}
{"id": "eqasc_validation_353", "prediction": "all x y.((Seismometer(x) & Earthquake(y)) -> MeasuresIntensity(x,y))", "score": 0}
{"id": "eqasc_validation_354", "prediction": "all x y.((SeismicWaves(x) & Earthquake(y)) -> ProducedBy(x,y))", "score": 0}
{"id": "eqasc_validation_354", "prediction": "all x.(SeismicWaves(x) -> ProducedByEarthquakes(x))", "score": 0}
{"id": "eqasc_validation_354", "prediction": "all x y z.((SeismicWaves(x) & Earthquake(y) & Earthquake(z)) -> ProducedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_354", "prediction": "all x y.((SeismicWave(x) & Earthquake(y)) -> ProducedBy(x,y))", "score": 0}
{"id": "eqasc_validation_354", "prediction": "all x y z.((SeismicWave(x) & Earthquake(y) & Earthquake(z)) -> ProducedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_354", "prediction": "all x y.((Earthquake(x) & SeismicWaves(y)) -> ProducedBy(x,y))", "score": 0}
{"id": "eqasc_validation_354", "prediction": "all x y.((Earthquake(x) & SeismicWaves(y)) -> ProducedBy(y,x))", "score": 0}
{"id": "eqasc_validation_354", "prediction": "all x y z.((Earthquake(x) & SeismicWaves(y) & Earthquake(z)) -> ProducedBy(y,z))", "score": 0}
{"id": "eqasc_validation_354", "prediction": "all x y z.((SeismicWaves(x) & Earthquake(y) & Earthquake(z)) -> ProducedBy(x,y))", "score": 0}
{"id": "eqasc_validation_354", "prediction": "all x.(SeismicWaves(x) -> (ProducedByEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_354", "prediction": "all x y z.((SeismicWave(x) & Earthquake(y) & Earthquake(z)) -> ProducedBy(x,y))", "score": 0}
{"id": "eqasc_validation_354", "prediction": "all x y.((Earthquake(x) & SeismicWave(y)) -> ProducedBy(y,x))", "score": 0}
{"id": "eqasc_validation_354", "prediction": "all x.(SeismicWave(x) -> ProducedByEarthquakes(x))", "score": 0}
{"id": "eqasc_validation_354", "prediction": "all x y z.((Earthquake(x) & SeismicWaves(y) & Earthquake(z)) -> ProducedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_355", "prediction": "all x.(Seismometer(x) -> MeasuresSeismicWaves(x))", "score": 0}
{"id": "eqasc_validation_355", "prediction": "all x y.((Seismometer(x) & SeismicWaves(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_355", "prediction": "all x y z.((Seismometer(x) & SeismicWaves(y) & Waves(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_355", "prediction": "all x y.((Seismometer(x) & SeismicWaves(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_355", "prediction": "all x y z.((Seismometer(x) & SeismicWaves(y) & SeismicWaves(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_355", "prediction": "all x y.((Seismometer(x) & SeismicWaves(y)) -> MeasuresWaves(x,y))", "score": 0}
{"id": "eqasc_validation_355", "prediction": "all x.(Seismometer(x) -> UsedToMeasureSeismicWaves(x))", "score": 0}
{"id": "eqasc_validation_355", "prediction": "all x y z.((Seismometer(x) & SeismicWaves(y) & Waves(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_355", "prediction": "all x y.((Seismometer(x) & SeismicWaves(y)) -> MeasuresSeismicWaves(x,y))", "score": 0}
{"id": "eqasc_validation_355", "prediction": "all x y.((Seismometer(x) & Seismometer(y)) -> MeasuresSeismicWaves(x,y))", "score": 0}
{"id": "eqasc_validation_355", "prediction": "all x y z.((Seismometer(x) & SeismicWaves(y) & Wave(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_355", "prediction": "all x y z.((Seismometer(x) & Wave(y) & SeismicWaves(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_355", "prediction": "all x y z.((Seismometer(x) & SeismicWaves(y) & SeismicWaves(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_355", "prediction": "all x.((Seismometer(x) & MeasuresSeismicWaves(x)) -> UsedToMeasureSeismicWaves(x))", "score": 0}
{"id": "eqasc_validation_355", "prediction": "all x.(Seismometer(x) -> (MeasuresSeismicWaves(x) & MeasuresSeismicWaves(x)))", "score": 0}
{"id": "eqasc_validation_355", "prediction": "all x y z.((Seismometer(x) & SeismicWaves(y) & Waves(z)) -> Measure(x,y,z))", "score": 0}
{"id": "eqasc_validation_356", "prediction": "all x y z.((Scientist(x) & Seismometer(y) & Earthquake(z)) -> (Uses(x,y) & DeterminesLocation(x,z) & DeterminesStrength(x,z)))", "score": 0}
{"id": "eqasc_validation_356", "prediction": "all x y.((Scientist(x) & Seismometer(y)) -> (DeterminesLocation(x,y) & DeterminesStrength(x,y)))", "score": 0}
{"id": "eqasc_validation_356", "prediction": "all x y z.((Scientist(x) & Seismometer(y) & Earthquake(z)) -> DeterminesLocationAndStrength(x,y,z))", "score": 0}
{"id": "eqasc_validation_356", "prediction": "all x y.((Scientist(x) & Seismometer(y)) -> DeterminesLocationAndStrengthOfEarthquakes(x,y))", "score": 0}
{"id": "eqasc_validation_356", "prediction": "all x y z.((Scientist(x) & Seismometer(y) & Earthquake(z)) -> (Uses(x,y) & DeterminesLocationAndStrength(x,z)))", "score": 0}
{"id": "eqasc_validation_356", "prediction": "all x.(Scientist(x) -> (UsesSeismometer(x) & DeterminesLocation(x) & DeterminesStrength(x)))", "score": 0}
{"id": "eqasc_validation_356", "prediction": "all x y z.((Scientist(x) & Seismometer(y) & Earthquake(z)) -> (DeterminesLocation(x,y) & DeterminesStrength(x,z)))", "score": 0}
{"id": "eqasc_validation_356", "prediction": "all x y z.((Scientist(x) & Seismometer(y) & Earthquake(z)) -> (Uses(x,y) & DeterminesLocation(y,z) & DeterminesStrength(y,z)))", "score": 0}
{"id": "eqasc_validation_356", "prediction": "all x y.((Scientist(x) & Earthquake(y)) -> (UsesSeismometer(x,y) & DeterminesLocation(x,y) & DeterminesStrength(x,y)))", "score": 0}
{"id": "eqasc_validation_356", "prediction": "all x y z.((Scientist(x) & Seismometer(y) & Earthquake(z)) -> (Uses(x,y) & DeterminesLocation(x,z) & DeterminesStrength(x,y)))", "score": 0}
{"id": "eqasc_validation_356", "prediction": "all x y z.((Scientist(x) & Seismometer(y) & Earthquake(z)) -> (DeterminesLocation(x,y,z) & DeterminesStrength(x,z)))", "score": 0}
{"id": "eqasc_validation_356", "prediction": "all x y z.((Scientist(x) & Seismometer(y) & Earthquake(z)) -> (UsesToDetermineLocation(x,y) & DeterminesStrength(x,z)))", "score": 0}
{"id": "eqasc_validation_356", "prediction": "all x y z.((Scientist(x) & Seismometer(y) & Earthquake(z)) -> UsesToDetermineLocationAndStrength(x,y,z))", "score": 0}
{"id": "eqasc_validation_356", "prediction": "all x.(Scientist(x) -> (UsesSeismometer(x) & DeterminesLocationAndStrengthOfEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_356", "prediction": "all x y.((Scientist(x) & Seismometer(y)) -> DeterminesLocationAndStrength(x,y))", "score": 0}
{"id": "eqasc_validation_356", "prediction": "all x y z.((Scientist(x) & Seismometer(y) & Earthquake(z)) -> (DeterminesLocation(x,z) & DeterminesStrength(x,z)))", "score": 0}
{"id": "eqasc_validation_357", "prediction": "all x.(Seismometer(x) -> MeasuresStrength(x))", "score": 0}
{"id": "eqasc_validation_357", "prediction": "all x y.((Seismometer(x) & Seismometer(y)) -> MeasuresStrength(x,y))", "score": 0}
{"id": "eqasc_validation_357", "prediction": "all x y.((Seismometer(x) & Strength(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_357", "prediction": "all x y z.((Seismometer(x) & Strength(y) & Strength(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_357", "prediction": "all x y z.((Seismometer(x) & Strength(y) & Strength(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_357", "prediction": "all x y.((Seismometer(x) & Strength(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_357", "prediction": "all x.(Seismometer(x) -> UsedToMeasureStrength(x))", "score": 0}
{"id": "eqasc_validation_357", "prediction": "all x y.((Seismometer(x) & Seismometer(y)) -> UsedToMeasureStrength(x,y))", "score": 0}
{"id": "eqasc_validation_357", "prediction": "all x y z.((Seismometer(x) & Strength(y) & Strength(z) & Measures(x,y,z)) -> Seismometer(x))", "score": 0}
{"id": "eqasc_validation_357", "prediction": "all x y z.((Seismometer(x) & Strength(y) & Strength(z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_357", "prediction": "all x y.((Seismometer(x) & Strength(y)) -> MeasuresStrength(x,y))", "score": 0}
{"id": "eqasc_validation_357", "prediction": "all x y z.((Seismometer(x) & Strength(y) & Strength(z) & Measures(x,y)) -> Seismometer(x))", "score": 0}
{"id": "eqasc_validation_357", "prediction": "all x y z.((Seismometer(x) & Strength(y) & Strength(z)) -> MeasuresStrength(x,y,z))", "score": 0}
{"id": "eqasc_validation_357", "prediction": "all x y z.((Seismometer(x) & Strength(y) & Strength(z)) -> Measure(x,y,z))", "score": 0}
{"id": "eqasc_validation_357", "prediction": "all x y.((Seismometer(x) & MeasuresStrength(y)) -> UsedToMeasureStrength(x,y))", "score": 0}
{"id": "eqasc_validation_357", "prediction": "all x.((Seismometer(x) & MeasuresStrength(x)) -> Seismometer(x))", "score": 0}
{"id": "eqasc_validation_358", "prediction": "all x.(Earthquake(x) -> (Strength(x) | ShakingAmount(x)))", "score": 0}
{"id": "eqasc_validation_358", "prediction": "all x.((Earthquake(x) & (Strength(x) | ShakingAmount(x))) -> Magnitude(x))", "score": 0}
{"id": "eqasc_validation_358", "prediction": "all x y.((Earthquake(x) & Strength(y)) | ShakingAmount(y)) -> Magnitude(x,y))", "score": -1}
{"id": "eqasc_validation_358", "prediction": "all x.(Earthquake(x) -> (Strength(x) | Shaking(x)))", "score": 0}
{"id": "eqasc_validation_358", "prediction": "all x y.((Earthquake(x) & (Strength(y) | ShakingAmount(y))) -> Magnitude(x,y))", "score": 0}
{"id": "eqasc_validation_358", "prediction": "all x.(Earthquake(x) -> (HasStrength(x) | HasAmountOfShaking(x)))", "score": 0}
{"id": "eqasc_validation_358", "prediction": "all x.((Earthquake(x) & (Strength(x) | Shaking(x))) -> Magnitude(x))", "score": 0}
{"id": "eqasc_validation_358", "prediction": "all x y.((Earthquake(x) & Strength(y)) -> ShakingAmount(x,y))", "score": 0}
{"id": "eqasc_validation_358", "prediction": "all x y.((Earthquake(x) & Strength(y)) | ShakingAmount(x,y)) -> Magnitude(x,y))", "score": -1}
{"id": "eqasc_validation_358", "prediction": "all x.((Earthquake(x) & Magnitude(x)) -> (Strength(x) | ShakingAmount(x)))", "score": 0}
{"id": "eqasc_validation_358", "prediction": "all x.(Earthquake(x) -> (Strength(x) | AmountOfShaking(x)))", "score": 0}
{"id": "eqasc_validation_358", "prediction": "all x.(Earthquake(x) -> ((Strength(x) | ShakingAmount(x))))", "score": 0}
{"id": "eqasc_validation_358", "prediction": "all x y.((Earthquake(x) & Magnitude(x,y)) -> (Strength(y) | ShakingAmount(y)))", "score": 0}
{"id": "eqasc_validation_359", "prediction": "all x y.((Seismometer(x) & Earthquake(y)) -> MeasuresShakingAmount(x,y))", "score": 0}
{"id": "eqasc_validation_359", "prediction": "all x y.((Seismometer(x) & Earthquake(y)) -> MeasuresAmountOfShaking(x,y))", "score": 0}
{"id": "eqasc_validation_359", "prediction": "all x y z.((Seismometer(x) & Earthquake(y) & Earthquake(z)) -> MeasuresShakingAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_359", "prediction": "all x y z.((Seismometer(x) & Earthquake(y) & Shaking(z)) -> MeasuresAmountOfShaking(x,y,z))", "score": 0}
{"id": "eqasc_validation_359", "prediction": "all x y.((Seismometer(x) & Earthquake(y)) -> MeasuresShaking(x,y))", "score": 0}
{"id": "eqasc_validation_359", "prediction": "all x y z.((Seismometer(x) & Earthquake(y) & Earthquake(z)) -> MeasuresAmountOfShaking(x,y,z))", "score": 0}
{"id": "eqasc_validation_359", "prediction": "all x y z.((Seismometer(x) & Earthquake(y) & Shaking(z)) -> MeasuresAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_359", "prediction": "all x y z.((Seismometer(x) & Earthquake(y) & Earthquake(z)) -> MeasuresShaking(x,y,z))", "score": 0}
{"id": "eqasc_validation_359", "prediction": "all x.(Seismometer(x) -> MeasuresShakingAmountOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_359", "prediction": "all x.(Seismometer(x) -> MeasuresShakingOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_359", "prediction": "all x y z.((Seismometer(x) & Earthquake(y) & Shaking(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_359", "prediction": "all x y z.((Seismometer(x) & Earthquake(y) & ShakingAmount(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_359", "prediction": "all x.(Seismometer(x) -> MeasuresAmountOfShakingOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_360", "prediction": "all x.(Seismograph(x) -> RecordsEarthquakeWaves(x))", "score": 0}
{"id": "eqasc_validation_360", "prediction": "all x.(Seismograph(x) -> (RecordsEarthquakeWaves(x)))", "score": 0}
{"id": "eqasc_validation_360", "prediction": "all x.(Seismograph(x) -> (RecordsEarthquakeWaves(x) & RecordsEarthquakeWaves(x)))", "score": 0}
{"id": "eqasc_validation_360", "prediction": "all x.(Seismograph(x) -> RecordEarthquakeWaves(x))", "score": 0}
{"id": "eqasc_validation_360", "prediction": "all x.(Seismograph(x) -> RecordesEarthquakeWaves(x))", "score": 0}
{"id": "eqasc_validation_360", "prediction": "all x.(Seismograph(x) -> (RecordsEarthquakeWaves(x) & -RecordsEarthquakeWaves(x)))", "score": 0}
{"id": "eqasc_validation_360", "prediction": "all x.(Seismograph(x) -> (RecordsEarthquakeWaves(x) & RecordesEarthquakeWaves(x)))", "score": 0}
{"id": "eqasc_validation_360", "prediction": "all x y.((Seismograph(x) & EarthquakeWaves(y)) -> Records(x,y))", "score": 0}
{"id": "eqasc_validation_360", "prediction": "all x.(Seismograph(x) -> (RecordsEarthquakeWaves(x) | RecordsEarthquakeWaves(x)))", "score": 0}
{"id": "eqasc_validation_360", "prediction": "all x.(Seismograph(x) -> (Device(x) & RecordsEarthquakeWaves(x)))", "score": 0}
{"id": "eqasc_validation_360", "prediction": "all x.(Seismograph(x) -> (RecordsEarthquakeWaves(x) | RecordesEarthquakeWaves(x)))", "score": 0}
{"id": "eqasc_validation_360", "prediction": "all x.((Device(x) & RecordsEarthquakeWaves(x)) -> Seismograph(x))", "score": 0}
{"id": "eqasc_validation_360", "prediction": "all x y.((Seismograph(x) & EarthquakeWaves(y)) -> RecordedBy(x,y))", "score": 0}
{"id": "eqasc_validation_361", "prediction": "all x.(Seismograph(x) -> MeasuresStrength(x))", "score": 0}
{"id": "eqasc_validation_361", "prediction": "all x y.((Seismograph(x) & Strength(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_361", "prediction": "all x y z.((Seismograph(x) & Strength(y) & Strength(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_361", "prediction": "all x y.((Seismograph(x) & Seismometer(y)) -> MeasuresStrength(x,y))", "score": 0}
{"id": "eqasc_validation_361", "prediction": "all x y.((Seismograph(x) & Strength(y)) -> MeasuresStrength(x,y))", "score": 0}
{"id": "eqasc_validation_361", "prediction": "all x y.((Seismograph(x) & Seismograph(y)) -> MeasuresStrength(x,y))", "score": 0}
{"id": "eqasc_validation_361", "prediction": "all x.(Seismograph(x) -> (MeasuresStrength(x) & MeasuresStrength(x)))", "score": 0}
{"id": "eqasc_validation_361", "prediction": "all x y z.((Seismograph(x) & Strength(y) & Strength(z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_361", "prediction": "all x y z.((Seismograph(x) & Strength(y) & Strength(z)) -> MeasuresStrength(x,y,z))", "score": 0}
{"id": "eqasc_validation_361", "prediction": "all x y z.((Seismograph(x) & Strength(y) & Strength(z) & Measures(x,y)) -> Measures(x,z))", "score": 0}
{"id": "eqasc_validation_361", "prediction": "all x y z.((Seismograph(x) & Strength(y) & Strength(z) & Measures(x,y,z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_361", "prediction": "all x.(Seismograph(x) -> (MeasuresStrength(x) & Strength(x)))", "score": 0}
{"id": "eqasc_validation_361", "prediction": "all x.(Seismograph(x) -> (MeasuresStrength(x) | MeasuresStrength(x)))", "score": 0}
{"id": "eqasc_validation_361", "prediction": "all x y z.((Seismograph(x) & Strength(y) & Strength(z) & Measures(x,y,z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_361", "prediction": "all x y.((Seismograph(x) & Strength(y) & Measures(x,y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_361", "prediction": "all x y z.((Seismograph(x) & Strength(y) & Strength(z)) -> Measure(x,y,z))", "score": 0}
{"id": "eqasc_validation_362", "prediction": "all x y z.((Thermometer(x) & Temperature(y) & Temperature(z)) -> Measures(x,y,z))", "score": 8}
{"id": "eqasc_validation_362", "prediction": "all x y.((Thermometer(x) & Temperature(y)) -> Measures(x,y))", "score": 8}
{"id": "eqasc_validation_362", "prediction": "all x.(Thermometer(x) -> MeasuresTemperature(x))", "score": 0}
{"id": "eqasc_validation_362", "prediction": "all x y.((Thermometer(x) & Temperature(y)) -> MeasuresTemperature(x,y))", "score": 0}
{"id": "eqasc_validation_362", "prediction": "all x y z.((Thermometer(x) & Temperature(y) & Temperature(z)) -> UsedToMeasure(x,y,z))", "score": 4}
{"id": "eqasc_validation_362", "prediction": "all x y.((Thermometer(x) & Temperature(y)) -> UsedToMeasure(x,y))", "score": 4}
{"id": "eqasc_validation_362", "prediction": "all x y z.((Thermometer(x) & Temperature(y) & Temperature(z)) -> Measures(x,y))", "score": 8}
{"id": "eqasc_validation_362", "prediction": "all x y z.((Thermometer(x) & Temperature(y) & Temperature(z) & Measures(x,y,z)) -> Thermometer(x))", "score": 0}
{"id": "eqasc_validation_362", "prediction": "all x y z.((Thermometer(x) & Temperature(y) & Temperature(z) & Measures(x,y,z)) -> UsedToMeasure(x,y,z))", "score": 4}
{"id": "eqasc_validation_362", "prediction": "all x y z.((Thermometer(x) & Temperature(y) & Temperature(z) & Measures(x,y,z)) -> UsesToMeasure(x,y,z))", "score": 4}
{"id": "eqasc_validation_362", "prediction": "all x y z.((Thermometer(x) & Temperature(y) & Temperature(z)) -> Measure(x,y,z))", "score": 4}
{"id": "eqasc_validation_362", "prediction": "all x y.((Thermometer(x) & TemperatureMeasurement(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_362", "prediction": "all x y z.((Thermometer(x) & Temperature(y) & Temperature(z) & Measures(x,y)) -> Thermometer(x))", "score": 0}
{"id": "eqasc_validation_362", "prediction": "all x y.((Thermometer(x) & Temperature(y) & Measures(x,y)) -> UsedToMeasure(x,y))", "score": 4}
{"id": "eqasc_validation_362", "prediction": "all x y z.((Thermometer(x) & Temperature(y) & Temperature(z) & Measures(x,y,z)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_362", "prediction": "all x y.((Thermometer(x) & TemperatureMeasure(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_363", "prediction": "all x.(Temperature(x) -> MeasuresHeatAmount(x))", "score": 0}
{"id": "eqasc_validation_363", "prediction": "all x.(Temperature(x) -> MeasuresHeat(x))", "score": 0}
{"id": "eqasc_validation_363", "prediction": "all x.(Temperature(x) -> MeasurementOfHeat(x))", "score": 0}
{"id": "eqasc_validation_363", "prediction": "all x y.((Temperature(x) & Heat(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_363", "prediction": "all x y.((Temperature(x) & Heat(y)) -> Measurement(x,y))", "score": 0}
{"id": "eqasc_validation_363", "prediction": "all x y z.((Temperature(x) & Heat(y) & Heat(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_363", "prediction": "all x.(Temperature(x) -> MeasuresAmountOfHeat(x))", "score": 0}
{"id": "eqasc_validation_363", "prediction": "all x.(Temperature(x) -> (MeasuresHeat(x) & MeasuresHeat(x)))", "score": 0}
{"id": "eqasc_validation_363", "prediction": "all x y z.((Temperature(x) & Heat(y) & Heat(z)) -> Measurement(x,y,z))", "score": 0}
{"id": "eqasc_validation_363", "prediction": "all x y.((Temperature(x) & Heat(y)) -> MeasuresAmount(x,y))", "score": 0}
{"id": "eqasc_validation_363", "prediction": "(MeasuresHeat(Temperature) & MeasuresHeat(Temperature))", "score": 0}
{"id": "eqasc_validation_363", "prediction": "all x y.((Temperature(x) & Heat(y)) -> Measured(x,y))", "score": 0}
{"id": "eqasc_validation_363", "prediction": "all x y z.((Temperature(x) & Heat(y) & Heat(z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_364", "prediction": "all x.(Thermometer(x) -> MeasuresHeat(x))", "score": 0}
{"id": "eqasc_validation_364", "prediction": "all x.(Thermometer(x) -> MeasuresHeatAmount(x))", "score": 0}
{"id": "eqasc_validation_364", "prediction": "all x y.((Thermometer(x) & Heat(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_364", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_364", "prediction": "all x y.((Thermometer(x) & Heat(y)) -> MeasuresAmount(x,y))", "score": 0}
{"id": "eqasc_validation_364", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> MeasuresAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_364", "prediction": "all x y.((Thermometer(x) & Heat(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_364", "prediction": "all x.(Thermometer(x) -> UsedToMeasureHeat(x))", "score": 0}
{"id": "eqasc_validation_364", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_364", "prediction": "all x y.((Thermometer(x) & HeatAmount(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_364", "prediction": "all x y.((Thermometer(x) & Heat(y)) -> Measured(x,y))", "score": 0}
{"id": "eqasc_validation_364", "prediction": "all x.(Thermometer(x) -> MeasuresHeatAddition(x))", "score": 0}
{"id": "eqasc_validation_364", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> Measured(x,y,z))", "score": 0}
{"id": "eqasc_validation_364", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Temperature(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_364", "prediction": "all x y.((Thermometer(x) & Heat(y)) -> MeasuresAmountOfHeat(x,y))", "score": 0}
{"id": "eqasc_validation_364", "prediction": "all x y.((Thermometer(x) & Heat(y) & Measures(x,y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_365", "prediction": "all x.(Fever(x) -> MeasuredUsingThermometer(x))", "score": 0}
{"id": "eqasc_validation_365", "prediction": "all x.(Fever(x) -> MeasuredWithThermometer(x))", "score": 0}
{"id": "eqasc_validation_365", "prediction": "all x y.((Fever(x) & Thermometer(y)) -> MeasuredUsing(x,y))", "score": 0}
{"id": "eqasc_validation_365", "prediction": "all x y.((Fever(x) & Thermometer(y)) -> MeasuredWith(x,y))", "score": 0}
{"id": "eqasc_validation_365", "prediction": "all x y.((Fever(x) & Thermometer(y)) -> Measured(x,y))", "score": 0}
{"id": "eqasc_validation_365", "prediction": "all x y z.((Fever(x) & Thermometer(y) & Thermometer(z)) -> MeasuredUsing(x,y,z))", "score": 0}
{"id": "eqasc_validation_365", "prediction": "all x y z.((Fever(x) & Thermometer(y) & Temperature(z)) -> MeasuredUsing(x,y,z))", "score": 0}
{"id": "eqasc_validation_365", "prediction": "all x y.((Fever(x) & Thermometer(y)) -> Measuring(x,y))", "score": 0}
{"id": "eqasc_validation_365", "prediction": "all x y z.((Fever(x) & Thermometer(y) & Thermometer(z)) -> Measured(x,y,z))", "score": 0}
{"id": "eqasc_validation_366", "prediction": "all x y.((Fever(x) & Thermometer(y)) -> CanBeMeasuredWith(x,y))", "score": 0}
{"id": "eqasc_validation_366", "prediction": "all x y.((Fever(x) & Thermometer(y)) -> MeasuresWith(x,y))", "score": 0}
{"id": "eqasc_validation_366", "prediction": "all x y z.((Fever(x) & Thermometer(y) & Thermometer(z)) -> CanBeMeasuredWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_366", "prediction": "all x y z.((Fever(x) & Thermometer(y) & Thermometer(z)) -> MeasuresWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_366", "prediction": "all x.(Fever(x) -> CanBeMeasuredWithThermometer(x))", "score": 0}
{"id": "eqasc_validation_366", "prediction": "all x y z.((Fever(x) & Thermometer(y) & Thermometer(z)) -> CanMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_366", "prediction": "all x y.((Fever(x) & Thermometer(y)) -> CanMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_366", "prediction": "all x y z.((Fever(x) & Thermometer(y) & Thermometer(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_366", "prediction": "all x y z.((Fever(x) & Thermometer(y) & Thermometer(z)) -> CanBeMeasured(x,y,z))", "score": 0}
{"id": "eqasc_validation_366", "prediction": "all x y.((Fever(x) & Thermometer(y)) -> CanBeMeasured(x,y))", "score": 0}
{"id": "eqasc_validation_366", "prediction": "all x y z.((Fever(x) & Thermometer(y) & TemperatureMeter(z)) -> CanBeMeasuredWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_366", "prediction": "all x y z.((Fever(x) & Thermometer(y) & Thermometer(z)) -> CanMeasureWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_366", "prediction": "all x y.((Fever(x) & Thermometer(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_366", "prediction": "all x y.((Fever(x) & Thermometer(y)) -> CanMeasureWith(x,y))", "score": 0}
{"id": "eqasc_validation_366", "prediction": "all x y z.((Fever(x) & Thermometer(y) & TemperatureMeter(z)) -> CanMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_366", "prediction": "all x.(Fever(x) -> MeasuresWithThermometer(x))", "score": 0}
{"id": "eqasc_validation_367", "prediction": "all x y.((Thermometer(x) & Heat(y)) -> MeasuresAmountOfHeat(x,y))", "score": 0}
{"id": "eqasc_validation_367", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> MeasuresAmountOfHeat(x,y,z))", "score": 0}
{"id": "eqasc_validation_367", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_367", "prediction": "all x y.((Thermometer(x) & Heat(y)) -> MeasuresHeat(x,y))", "score": 0}
{"id": "eqasc_validation_367", "prediction": "all x.(Thermometer(x) -> MeasuresHeatAmount(x))", "score": 0}
{"id": "eqasc_validation_367", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> MeasuresAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_367", "prediction": "all x y.((Thermometer(x) & Heat(y)) -> MeasuresHeatAmount(x,y))", "score": 0}
{"id": "eqasc_validation_367", "prediction": "all x.(Thermometer(x) -> MeasuresHeat(x))", "score": 0}
{"id": "eqasc_validation_367", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> MeasuresHeat(x,y,z))", "score": 0}
{"id": "eqasc_validation_367", "prediction": "all x y.((Thermometer(x) & Heat(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_367", "prediction": "all x y.((Thermometer(x) & Heat(y)) -> MeasuresAmount(x,y))", "score": 0}
{"id": "eqasc_validation_367", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> MeasuresHeatAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_367", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> MeasuresAmountOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_367", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> MeasuresAddition(x,y,z))", "score": 0}
{"id": "eqasc_validation_367", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_367", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_368", "prediction": "all x y.((Heat(x) & Temperature(y)) -> Same(x,y))", "score": 0}
{"id": "eqasc_validation_368", "prediction": "all x.(Heat(x) -> Temperature(x))", "score": 24}
{"id": "eqasc_validation_368", "prediction": "all x.((Heat(x) & Temperature(x)) -> Same(x))", "score": 0}
{"id": "eqasc_validation_368", "prediction": "all x y z.((Heat(x) & Temperature(y) & Heat(z)) -> Same(x,y,z))", "score": 0}
{"id": "eqasc_validation_368", "prediction": "(all x.(Heat(x) -> Same(x)) & all y.(Temperature(y) -> Same(y)))", "score": 0}
{"id": "eqasc_validation_368", "prediction": "all x.(Heat(x) & Temperature(x))", "score": 24}
{"id": "eqasc_validation_368", "prediction": "(SameHeat(Heat) & SameTemperature(Heat))", "score": 0}
{"id": "eqasc_validation_368", "prediction": "all x.((Heat(x) | Temperature(x)) -> Same(x))", "score": 0}
{"id": "eqasc_validation_368", "prediction": "all x y z.((Heat(x) & Temperature(y) & Heat(z)) -> Same(x,z))", "score": 0}
{"id": "eqasc_validation_368", "prediction": "(SameHeat(heat) & SameTemperature(heat))", "score": 0}
{"id": "eqasc_validation_368", "prediction": "(SameHeat(x) & SameTemperature(x))", "score": 0}
{"id": "eqasc_validation_368", "prediction": "all x y.((Heat(x) & Temperature(y)) -> Same(x))", "score": 0}
{"id": "eqasc_validation_368", "prediction": "(all x.(Heat(x) -> Same(x)) & all y.(Temperature(y) -> Same(y))))", "score": -1}
{"id": "eqasc_validation_368", "prediction": "all x y z.((Heat(x) & Temperature(y) & Temperature(z)) -> Same(x,y,z))", "score": 0}
{"id": "eqasc_validation_368", "prediction": "all x.(Heat(x) & Temperature(x)) -> Same(x))", "score": -1}
{"id": "eqasc_validation_368", "prediction": "all x y z.((Heat(x) & Temperature(y) & Heat(z)) -> Same(x,y))", "score": 0}
{"id": "eqasc_validation_369", "prediction": "all x y.((Thermometer(x) & Heat(y)) -> Measures(x,y))", "score": 8}
{"id": "eqasc_validation_369", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> Measures(x,y,z))", "score": 4}
{"id": "eqasc_validation_369", "prediction": "all x.(Thermometer(x) -> MeasuresHeat(x))", "score": 0}
{"id": "eqasc_validation_369", "prediction": "all x y.((Thermometer(x) & Heat(y)) -> MeasuresHeat(x,y))", "score": 0}
{"id": "eqasc_validation_369", "prediction": "all x y.((Thermometer(x) & Heat(y)) -> UsedToMeasure(x,y))", "score": 4}
{"id": "eqasc_validation_369", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> UsedToMeasure(x,y,z))", "score": 4}
{"id": "eqasc_validation_369", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Temperature(z)) -> Measures(x,y,z))", "score": 4}
{"id": "eqasc_validation_369", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z) & Measures(x,y,z)) -> Thermometer(x))", "score": 0}
{"id": "eqasc_validation_369", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> Measures(x,y))", "score": 8}
{"id": "eqasc_validation_369", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z) & Measures(x,y,z)) -> UsedToMeasure(x,y,z))", "score": 4}
{"id": "eqasc_validation_369", "prediction": "all x y.((Thermometer(x) & Heat(y) & Measures(x,y)) -> UsedToMeasure(x,y))", "score": 4}
{"id": "eqasc_validation_369", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> MeasuresHeat(x,y,z))", "score": 0}
{"id": "eqasc_validation_369", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z) & Measures(x,y,z)) -> UsesToMeasure(x,y,z))", "score": 4}
{"id": "eqasc_validation_369", "prediction": "all x.(Thermometer(x) -> UsedToMeasureHeat(x))", "score": 0}
{"id": "eqasc_validation_369", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Temperature(z)) -> MeasuresHeat(x,y,z))", "score": 0}
{"id": "eqasc_validation_369", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> Measure(x,y,z))", "score": 4}
{"id": "eqasc_validation_370", "prediction": "all x.((Weather(x) & Warm(x)) -> RisesTemperature(x))", "score": 0}
{"id": "eqasc_validation_370", "prediction": "all x.((Weather(x) & Warm(x)) -> TemperatureRise(x))", "score": 0}
{"id": "eqasc_validation_370", "prediction": "all x.((Weather(x) & Warm(x)) -> TemperatureRises(x))", "score": 0}
{"id": "eqasc_validation_370", "prediction": "all x.(WarmWeather(x) -> TemperatureRise(x))", "score": 0}
{"id": "eqasc_validation_370", "prediction": "all x.(WarmWeather(x) -> RisesTemperature(x))", "score": 0}
{"id": "eqasc_validation_370", "prediction": "all x.(WarmWeather(x) -> TemperatureRises(x))", "score": 0}
{"id": "eqasc_validation_370", "prediction": "all x.((WarmWeather(x) & RisesTemperature(x)) -> WarmWeather(x))", "score": 0}
{"id": "eqasc_validation_370", "prediction": "all x.((WarmWeather(x) & TemperatureRise(x)) -> WarmWeather(x))", "score": 0}
{"id": "eqasc_validation_370", "prediction": "all x y.((Weather(x) & Warm(x)) -> RisesTemperature(y))", "score": 0}
{"id": "eqasc_validation_370", "prediction": "all x.((WarmWeather(x) & TemperatureRises(x)) -> WarmWeather(x))", "score": 0}
{"id": "eqasc_validation_370", "prediction": "all x.((Weather(x) & Warm(x)) -> TemperatureRising(x))", "score": 0}
{"id": "eqasc_validation_370", "prediction": "all x y.((Weather(x) & Warm(x)) -> TemperatureRise(y))", "score": 0}
{"id": "eqasc_validation_370", "prediction": "all x.((Weather(x) & Warm(x)) -> TemperatureRaises(x))", "score": 0}
{"id": "eqasc_validation_370", "prediction": "all x.((Weather(x) & Warm(x)) -> TemperatureRisen(x))", "score": 0}
{"id": "eqasc_validation_370", "prediction": "all x.((Weather(x) & Warm(x)) -> TemperatureRaise(x))", "score": 0}
{"id": "eqasc_validation_370", "prediction": "all x.((Winter(x) & Warm(x)) -> RisesTemperature(x))", "score": 0}
{"id": "eqasc_validation_371", "prediction": "all x.(Thermometer(x) -> MeasuresWarmWeather(x))", "score": 0}
{"id": "eqasc_validation_371", "prediction": "all x y.((Thermometer(x) & Weather(y)) -> MeasuresWarm(x,y))", "score": 0}
{"id": "eqasc_validation_371", "prediction": "all x y.((Thermometer(x) & Weather(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_371", "prediction": "all x y.((Thermometer(x) & Weather(y) & Warm(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_371", "prediction": "all x y z.((Thermometer(x) & Weather(y) & Temperature(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_371", "prediction": "all x y.((Thermometer(x) & Weather(y)) -> MeasuresWinter(x,y))", "score": 0}
{"id": "eqasc_validation_371", "prediction": "all x.(Thermometer(x) -> MeasuresWinterWeather(x))", "score": 0}
{"id": "eqasc_validation_371", "prediction": "all x.(Thermometer(x) -> (MeasuresWarmWeather(x) | MeasuresWarmWeather(x)))", "score": 0}
{"id": "eqasc_validation_371", "prediction": "all x y.((Thermometer(x) & Weather(y) & Warm(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_371", "prediction": "all x y.((Thermometer(x) & Weather(y)) -> MeasuresWarmWeather(x,y))", "score": 0}
{"id": "eqasc_validation_371", "prediction": "all x y z.((Thermometer(x) & Weather(y) & Weather(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_371", "prediction": "all x.(Thermometer(x) -> (MeasuresWarmWeather(x) & WarmWeather(x)))", "score": 0}
{"id": "eqasc_validation_371", "prediction": "all x.(Thermometer(x) -> UsedToMeasureWarmWeather(x))", "score": 0}
{"id": "eqasc_validation_371", "prediction": "all x.(Thermometer(x) -> MeasuresWeather(x))", "score": 0}
{"id": "eqasc_validation_371", "prediction": "all x y.((Thermometer(x) & Weather(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_372", "prediction": "all x y.((Fever(x) & Thermometer(y)) -> DiagnosedWith(x,y))", "score": 0}
{"id": "eqasc_validation_372", "prediction": "all x y.((Fever(x) & Thermometer(y)) -> CanBeDiagnosedWith(x,y))", "score": 0}
{"id": "eqasc_validation_372", "prediction": "all x y z.((Fever(x) & Thermometer(y) & Thermometer(z)) -> DiagnosedWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_372", "prediction": "all x.(Fever(x) -> CanBeDiagnosedWithThermometer(x))", "score": 0}
{"id": "eqasc_validation_372", "prediction": "all x y z.((Fever(x) & Thermometer(y) & Thermometer(z)) -> CanDiagnosis(x,y,z))", "score": 0}
{"id": "eqasc_validation_372", "prediction": "all x y z.((Fever(x) & Thermometer(y) & Thermometer(z)) -> CanBeDiagnosedWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_372", "prediction": "all x.(Fever(x) -> DiagnosedWithThermometer(x))", "score": 0}
{"id": "eqasc_validation_372", "prediction": "all x y.((Fever(x) & Thermometer(y)) -> CanDiagnosis(x,y))", "score": 0}
{"id": "eqasc_validation_372", "prediction": "all x y z.((Fever(x) & Thermometer(y) & Thermometer(z)) -> CanDiagnosisWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_372", "prediction": "all x y z.((Fever(x) & Thermometer(y) & Thermometer(z)) -> CanDiagnose(x,y,z))", "score": 0}
{"id": "eqasc_validation_372", "prediction": "all x y.((Fever(x) & Thermometer(y)) -> DiagnosedWithThermometer(x,y))", "score": 0}
{"id": "eqasc_validation_372", "prediction": "all x y z.((Fever(x) & Thermometer(y) & TemperatureMeter(z)) -> DiagnosedWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_372", "prediction": "all x y.((Fever(x) & Thermometer(y)) -> CanDiagnosisWith(x,y))", "score": 0}
{"id": "eqasc_validation_372", "prediction": "all x y.((Fever(x) & Thermometer(y) & DiagnosedWith(x,y)) -> CanBeDiagnosedWith(x,y))", "score": 0}
{"id": "eqasc_validation_372", "prediction": "all x y.((Fever(x) & Thermometer(y)) -> CanBeDiagnosed(x,y))", "score": 0}
{"id": "eqasc_validation_372", "prediction": "all x y z.((Fever(x) & Thermometer(y) & Thermometer(z)) -> CanDiagnoseWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_373", "prediction": "all x.(Temperature(x) -> MeasuresHeat(x))", "score": 0}
{"id": "eqasc_validation_373", "prediction": "all x.(Temperature(x) -> MeasuresHeatAmount(x))", "score": 0}
{"id": "eqasc_validation_373", "prediction": "all x y.((Temperature(x) & Heat(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_373", "prediction": "all x.(Temperature(x) -> MeasuresAmountOfHeat(x))", "score": 0}
{"id": "eqasc_validation_373", "prediction": "all x y z.((Temperature(x) & Heat(y) & Heat(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_373", "prediction": "all x y.((Temperature(x) & Heat(y)) -> MeasuresAmount(x,y))", "score": 0}
{"id": "eqasc_validation_373", "prediction": "all x.(Temperature(x) -> (MeasuresHeat(x) & Heat(x)))", "score": 0}
{"id": "eqasc_validation_373", "prediction": "all x.(Temperature(x) -> MeasuredAmountOfHeat(x))", "score": 0}
{"id": "eqasc_validation_373", "prediction": "all x y z.((Temperature(x) & Heat(y) & Heat(z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_373", "prediction": "all x.(Temperature(x) -> (MeasuresHeat(x) & MeasuresHeat(x)))", "score": 0}
{"id": "eqasc_validation_373", "prediction": "all x.(Temperature(x) -> MeasuresHeatAddition(x))", "score": 0}
{"id": "eqasc_validation_373", "prediction": "all x y.((Temperature(x) & Heat(y)) -> Measured(x,y))", "score": 0}
{"id": "eqasc_validation_374", "prediction": "all x.(Thermometer(x) -> MeasuresHeat(x))", "score": 0}
{"id": "eqasc_validation_374", "prediction": "all x.(Thermometer(x) -> (MeasuresHeat(x) & MeasuresHeat(x)))", "score": 0}
{"id": "eqasc_validation_374", "prediction": "all x y.((Thermometer(x) & Heat(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_374", "prediction": "all x.(Thermometer(x) -> CanMeasureHeat(x))", "score": 0}
{"id": "eqasc_validation_374", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_374", "prediction": "all x.(Thermometer(x) -> (MeasuresHeat(x) | MeasuresHeat(x)))", "score": 0}
{"id": "eqasc_validation_374", "prediction": "all x y.((Thermometer(x) & Heat(y)) -> CanMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_374", "prediction": "all x y.((Thermometer(x) & Heat(y)) -> MeasuresHeat(x,y))", "score": 0}
{"id": "eqasc_validation_374", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Heat(z)) -> CanMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_374", "prediction": "all x.(Thermometer(x) -> (MeasuresHeat(x) & MeasuresHeat(x) & MeasuresHeat(x)))", "score": 0}
{"id": "eqasc_validation_374", "prediction": "all x.(Thermometer(x) -> (CanMeasureHeat(x) & MeasureHeat(x)))", "score": 0}
{"id": "eqasc_validation_374", "prediction": "all x y.((Thermometer(x) & Heat(y) & Measures(x,y)) -> CanMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_374", "prediction": "all x.(Thermometer(x) -> (MeasuresHeat(x) & CanMeasureHeat(x)))", "score": 0}
{"id": "eqasc_validation_374", "prediction": "all x y z.((Thermometer(x) & Heat(y) & Temperature(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_375", "prediction": "all x y z.((Temperature(x) & Mercury(y) & Thermometer(z)) -> (Expands(y,z) & RisesIn(y,z)))", "score": 0}
{"id": "eqasc_validation_375", "prediction": "all x y z.((Temperature(x) & Mercury(y) & ThermometerTube(z)) -> (Expands(y,z) & RisesIn(y,z)))", "score": 0}
{"id": "eqasc_validation_375", "prediction": "all x y z.((TemperatureRise(x) & Mercury(y) & ThermometerTube(z)) -> (Expands(y,z) & RisesIn(y,z)))", "score": 0}
{"id": "eqasc_validation_375", "prediction": "all x y.((TemperatureRise(x) & Mercury(y)) -> (Expands(y,x) & RisesInThermometerTube(y,x)))", "score": 0}
{"id": "eqasc_validation_375", "prediction": "all x y z.((Temperature(x) & Mercury(y) & ThermometerTube(z)) -> (Expands(y,z) & Rises(y,z)))", "score": 0}
{"id": "eqasc_validation_375", "prediction": "all x y.((TemperatureRise(x) & Mercury(y)) -> (Expands(y,x) & RisesInThermometer(y,x)))", "score": 0}
{"id": "eqasc_validation_375", "prediction": "all x y.((TemperatureRise(x) & Mercury(y)) -> (Expands(y,x) & RisesInThermometerTube(y)))", "score": 0}
{"id": "eqasc_validation_375", "prediction": "all x y z.((Temperature(x) & Mercury(y) & Thermometer(z)) -> (Expands(y,z) & Rises(y,z)))", "score": 0}
{"id": "eqasc_validation_375", "prediction": "all x y z.((Temperature(x) & Mercury(y) & Thermometer(z)) -> (Expands(y) & RisesIn(y,z)))", "score": 0}
{"id": "eqasc_validation_375", "prediction": "all x y.((TemperatureRise(x) & Mercury(y)) -> (Expands(y) & RisesInThermometerTube(y)))", "score": 0}
{"id": "eqasc_validation_375", "prediction": "all x.((TemperatureRise(x) & Expands(x) & RisesInThermometerTube(x)) -> Mercury(x))", "score": 0}
{"id": "eqasc_validation_375", "prediction": "all x.((Temperature(x) & Rises(x)) -> ExpandsAndRisesInThermometerTube(x))", "score": 0}
{"id": "eqasc_validation_375", "prediction": "all x y z.((TemperatureRise(x) & Mercury(y) & ThermometerTube(z)) -> (Expands(y,z) & Rises(y,z)))", "score": 0}
{"id": "eqasc_validation_375", "prediction": "all x y z.((Temperature(x) & Mercury(y) & ThermometerTube(z)) -> (Expands(y) & RisesIn(y,z)))", "score": 0}
{"id": "eqasc_validation_375", "prediction": "all x y z.((Temperature(x) & Mercury(y) & Tube(z)) -> (Expands(y,z) & RisesIn(y,z)))", "score": 0}
{"id": "eqasc_validation_375", "prediction": "all x y.((TemperatureRises(x) & Mercury(y)) -> (Expands(y,x) & RisesInThermometerTube(y,x)))", "score": 0}
{"id": "eqasc_validation_376", "prediction": "all x y.((Mercury(x) & Tube(y) & ExpandsAndRising(x,y)) -> MeasuresTemperature(x,y))", "score": 0}
{"id": "eqasc_validation_376", "prediction": "all x y.((Mercury(x) & Tube(y) & ExpandingAndRising(x,y)) -> MeasuresTemperature(x,y))", "score": 0}
{"id": "eqasc_validation_376", "prediction": "all x y.((Mercury(x) & Tube(y) & ExpandingAndRisingIn(x,y)) -> UsedToMeasureTemperature(x))", "score": 0}
{"id": "eqasc_validation_376", "prediction": "all x y.((Mercury(x) & Tube(y) & ExpandingAndRisingIn(x,y)) -> MeasuresTemperature(x,y))", "score": 0}
{"id": "eqasc_validation_376", "prediction": "all x y z.((Mercury(x) & Tube(y) & Tube(z)) -> (ExpandingAndRising(x,y) & MeasuresTemperature(x,z)))", "score": 0}
{"id": "eqasc_validation_376", "prediction": "all x.((Mercury(x) & ExpandingAndRisingInTube(x)) -> MeasuresTemperature(x))", "score": 0}
{"id": "eqasc_validation_376", "prediction": "all x y.((Mercury(x) & Tube(y) & ExpandingAndRising(x,y)) -> UsedToMeasureTemperature(x,y))", "score": 0}
{"id": "eqasc_validation_376", "prediction": "all x y.((Mercury(x) & Tube(y) & ExpandingAndRisingIn(x,y)) -> MeasuresTemperature(x))", "score": 0}
{"id": "eqasc_validation_376", "prediction": "all x y z.((Mercury(x) & Tube(y) & Tube(z)) -> (ExpandsAndRising(x,y) & MeasuresTemperature(x,z)))", "score": 0}
{"id": "eqasc_validation_376", "prediction": "all x.((Mercury(x) & ExpandingAndRisingInTube(x)) -> UsedToMeasureTemperature(x))", "score": 0}
{"id": "eqasc_validation_376", "prediction": "all x y.((Mercury(x) & Tube(y)) -> (ExpandingAndRisingIn(x,y) & MeasuresTemperature(x)))", "score": 0}
{"id": "eqasc_validation_376", "prediction": "all x y.((Mercury(x) & Tube(y) & ExpandsAndRising(x,y)) -> MeasuresTemperature(x))", "score": 0}
{"id": "eqasc_validation_376", "prediction": "all x y.((Mercury(x) & Tube(y) & ExpandingAndRisingIn(x,y)) -> UsedToMeasureTemperature(x,y))", "score": 0}
{"id": "eqasc_validation_376", "prediction": "all x y.((Mercury(x) & Tube(y) & ExpandingAndRising(x,y)) -> UsedToMeasureTemperature(x))", "score": 0}
{"id": "eqasc_validation_376", "prediction": "all x y.((Mercury(x) & Tube(y) & ExpandingAndRising(x,y)) -> MeasuresTemperature(x))", "score": 0}
{"id": "eqasc_validation_377", "prediction": "all x.((ObviousReplacement(x) & StandardMercuryThermometer(x)) -> AlcoholThermometer(x))", "score": 0}
{"id": "eqasc_validation_377", "prediction": "all x.((ObscuredReplacement(x) & StandardMercuryThermometer(x)) -> AlcoholThermometer(x))", "score": 0}
{"id": "eqasc_validation_377", "prediction": "all x.(ObviousReplacementForMercuryThermometer(x) -> AlcoholThermometer(x))", "score": 0}
{"id": "eqasc_validation_377", "prediction": "all x.((OptimalReplacement(x) & StandardMercuryThermometer(x)) -> AlcoholThermometer(x))", "score": 0}
{"id": "eqasc_validation_377", "prediction": "all x.(ObviousReplacement(x) -> AlcoholThermometer(x))", "score": 0}
{"id": "eqasc_validation_377", "prediction": "all x.((ExclusiveReplacement(x) & StandardMercuryThermometer(x)) -> AlcoholThermometer(x))", "score": 0}
{"id": "eqasc_validation_377", "prediction": "all x.((ObviousReplacementForMercuryThermometer(x) & StandardThermometer(x)) -> AlcoholThermometer(x))", "score": 0}
{"id": "eqasc_validation_377", "prediction": "all x.((OddReplacement(x) & StandardMercuryThermometer(x)) -> AlcoholThermometer(x))", "score": 0}
{"id": "eqasc_validation_377", "prediction": "all x.((AlcoholicThermometer(x) & StandardMercuryThermometer(x)) -> ObscureReplacement(x))", "score": 0}
{"id": "eqasc_validation_377", "prediction": "all x.(ObviousReplacementForStandardMercuryThermometer(x) -> AlcoholThermometer(x))", "score": 0}
{"id": "eqasc_validation_377", "prediction": "all x.((AlcoholicThermometer(x) & StandardMercuryThermometer(x)) -> ObscissiveReplacement(x))", "score": 0}
{"id": "eqasc_validation_377", "prediction": "all x.((AlcoholicThermometer(x) & StandardMercuryThermometer(x)) -> ObsidianReplacement(x))", "score": 0}
{"id": "eqasc_validation_377", "prediction": "all x.((AlcoholicThermometer(x) & StandardMercuryThermometer(x)) -> ObscillatingReplacement(x))", "score": 0}
{"id": "eqasc_validation_377", "prediction": "all x.((AlcoholicThermometer(x) & StandardMercuryThermometer(x)) -> ObsciousReplacement(x))", "score": 0}
{"id": "eqasc_validation_377", "prediction": "all x.((AlcoholicThermometer(x) & StandardMercuryThermometer(x)) -> OpaqueReplacement(x))", "score": 0}
{"id": "eqasc_validation_378", "prediction": "all x.((Device(x) & (Mercury(x) | Alcohol(x))) -> MeasuresTemperature(x))", "score": 0}
{"id": "eqasc_validation_378", "prediction": "all x.((Device(x) & MeasuresTemperature(x)) -> (Mercury(x) | Alcohol(x)))", "score": 0}
{"id": "eqasc_validation_378", "prediction": "all x.((Device(x) & MeasuresTemperature(x)) -> (MeasuresTemperature(x) | MeasuresTemperature(x)))", "score": 0}
{"id": "eqasc_validation_378", "prediction": "all x.((MercuryDevice(x) | AlcoholContentingDevice(x)) -> MeasuresTemperature(x))", "score": 0}
{"id": "eqasc_validation_378", "prediction": "all x.((Device(x) & (MeasuresTemperature(x) | MeasuresTemperature(x))) -> MercuryOrAlcoholContaining(x))", "score": 0}
{"id": "eqasc_validation_378", "prediction": "all x.((Device(x) & (MeasuresTemperature(x) | MeasuresTemperature(x))) -> MercuryOrAlcohol(x))", "score": 0}
{"id": "eqasc_validation_378", "prediction": "all x.((Device(x) & (MeasureTemperature(x) | MeasureAlcohol(x))) -> UsedToMeasureTemperature(x))", "score": 0}
{"id": "eqasc_validation_378", "prediction": "all x.((Device(x) & (HasMercury(x) | HasAlcohol(x))) -> MeasuresTemperature(x))", "score": 0}
{"id": "eqasc_validation_378", "prediction": "all x.((Device(x) & MeasuresTemperature(x)) -> (HasMercury(x) | HasAlcohol(x)))", "score": 0}
{"id": "eqasc_validation_378", "prediction": "all x.((Device(x) & (Mercury(x) | Alcohol(x))) -> UsedToMeasureTemperature(x))", "score": 0}
{"id": "eqasc_validation_378", "prediction": "all x.((Device(x) & (MeasuresTemperature(x) | MeasuresTemperature(x))) -> MercuryOrAlcoholContent(x))", "score": 0}
{"id": "eqasc_validation_378", "prediction": "all x.((Device(x) & (MeasuresTemperature(x) | MeasuresTemperature(x))) -> (Mercury(x) | Alcohol(x)))", "score": 0}
{"id": "eqasc_validation_378", "prediction": "all x.((MercuryDevice(x) | AlcoholContainingDevice(x)) -> MeasuresTemperature(x))", "score": 0}
{"id": "eqasc_validation_378", "prediction": "all x y.((Device(x) & (Mercury(y) | Alcohol(y))) -> MeasuresTemperature(x,y))", "score": 0}
{"id": "eqasc_validation_378", "prediction": "all x.((Device(x) & (Mercury(x) | Alcohol(x))) -> MeasureTemperature(x))", "score": 0}
{"id": "eqasc_validation_378", "prediction": "all x.((Mercury(x) | Alcohol(x)) -> MeasuresTemperature(x))", "score": 0}
{"id": "eqasc_validation_379", "prediction": "all x.((Vehicle(x) & UsedForTravel(x)) -> UsedForTravel(x))", "score": 0}
{"id": "eqasc_validation_379", "prediction": "all x.(Vehicle(x) -> UsedForTravel(x))", "score": 42}
{"id": "eqasc_validation_379", "prediction": "all x y.((Vehicle(x) & Vehicle(y)) -> UsedForTravel(x,y))", "score": 85}
{"id": "eqasc_validation_379", "prediction": "all x y.((Vehicle(x) & Travel(y)) -> UsedFor(x,y))", "score": 27}
{"id": "eqasc_validation_379", "prediction": "all x y z.((Vehicle(x) & Travel(y) & Travel(z)) -> UsedFor(x,y,z))", "score": 9}
{"id": "eqasc_validation_379", "prediction": "all x y.((Vehicle(x) & Vehicle(y) & UsedForTravel(x,y)) -> UsedForTravel(x,y))", "score": 0}
{"id": "eqasc_validation_379", "prediction": "all x y z.((Vehicle(x) & Vehicle(y) & Travel(z)) -> UsedFor(x,y,z))", "score": 14}
{"id": "eqasc_validation_379", "prediction": "all x y.((Vehicle(x) & UsedForTravel(y)) -> UsedForTravel(x,y))", "score": 0}
{"id": "eqasc_validation_379", "prediction": "all x y z.((Vehicle(x) & Travel(y) & Travel(z) & UsedFor(x,y,z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_379", "prediction": "all x y.((Vehicle(x) & UsedForTravel(x,y)) -> UsedForTravel(x,y))", "score": 0}
{"id": "eqasc_validation_379", "prediction": "all x y z.((Vehicle(x) & Travel(y) & Vehicle(z)) -> UsedFor(x,y,z))", "score": 11}
{"id": "eqasc_validation_379", "prediction": "all x y.((Vehicle(x) & UsedForTravel(x)) -> UsedForTravel(x,y))", "score": 0}
{"id": "eqasc_validation_379", "prediction": "all x y.((Vehicle(x) & Travel(y) & UsedFor(x,y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_379", "prediction": "all x y.((Vehicle(x) & UsedForTravel(x)) -> UsedForTravel(y))", "score": 0}
{"id": "eqasc_validation_379", "prediction": "all x y z.((Vehicle(x) & Travel(y) & Vehicle(z) & UsedFor(x,y,z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_379", "prediction": "all x y z.((Vehicle(x) & Travel(y) & Vehicle(z) & UsedFor(x,y)) -> UsedFor(x,z))", "score": 0}
{"id": "eqasc_validation_380", "prediction": "all x.((Truck(x) | Car(x)) -> UsedForTravel(x))", "score": 2}
{"id": "eqasc_validation_380", "prediction": "all x y.((Truck(x) & Car(y)) -> (UsedForTravel(x,y) & UsedForTravel(x,y)))", "score": 4}
{"id": "eqasc_validation_380", "prediction": "all x.((LKW(x) | Car(x)) -> UsedForTravel(x))", "score": 0}
{"id": "eqasc_validation_380", "prediction": "all x y.((LKW(x) & Car(y)) -> (UsedForTravel(x,y) & UsedForTravel(x,y)))", "score": 0}
{"id": "eqasc_validation_380", "prediction": "all x y.((Truck(x) & Car(y)) -> (UsedForTravel(x,y) | UsedForTravel(x,y)))", "score": 4}
{"id": "eqasc_validation_380", "prediction": "all x y.((Truck(x) & Car(y)) -> UsedForTravel(x,y))", "score": 4}
{"id": "eqasc_validation_380", "prediction": "all x y.((Truck(x) & Car(y)) -> (UsedForTravel(x,y) & UsedForTravel(y)))", "score": 0}
{"id": "eqasc_validation_380", "prediction": "all x y.((LKW(x) & Car(y)) -> (UsedForTravel(x,y) & UsedForTravel(y)))", "score": 0}
{"id": "eqasc_validation_380", "prediction": "all x y.((Truck(x) & Car(y)) -> (UsedForTravel(x,y) & UsedForTravel(x,z)))", "score": 1}
{"id": "eqasc_validation_380", "prediction": "all x y.((LKW(x) & Car(y)) -> UsedForTravel(x,y))", "score": 0}
{"id": "eqasc_validation_380", "prediction": "all x y.((LKW(x) & Car(y)) -> (UsedForTravel(x,y) & UsedForTravel(x,z)))", "score": 0}
{"id": "eqasc_validation_380", "prediction": "all x y z.((Truck(x) & Car(y) & Truck(z)) -> UsedForTravel(x,y,z))", "score": 0}
{"id": "eqasc_validation_380", "prediction": "all x y z.((Truck(x) & Car(y) & Truck(z)) -> UsedForTravel(x,z))", "score": 6}
{"id": "eqasc_validation_380", "prediction": "all x y.((Truck(x) & Car(y)) -> (UsedForTravel(x) & UsedForTravel(y)))", "score": 4}
{"id": "eqasc_validation_380", "prediction": "all x y.((LKW(x) & Car(y)) -> (UsedForTravel(x,y) | UsedForTravel(x,y)))", "score": 0}
{"id": "eqasc_validation_380", "prediction": "all x y.((Truck(x) & Car(y)) -> (UsedForTravel(x) & UsedForTravel(x,y)))", "score": 0}
{"id": "eqasc_validation_381", "prediction": "all x.(VehicleEmissions(x) -> MajorCauseOfAirPollution(x))", "score": 0}
{"id": "eqasc_validation_381", "prediction": "all x.(VehicleEmissions(x) -> MajorAirPollutionCause(x))", "score": 0}
{"id": "eqasc_validation_381", "prediction": "all x y.((VehicleEmission(x) & AirPollution(y)) -> MajorCause(x,y))", "score": 0}
{"id": "eqasc_validation_381", "prediction": "all x.(VehicleEmission(x) -> MajorCauseOfAirPollution(x))", "score": 0}
{"id": "eqasc_validation_381", "prediction": "all x.((VehicleEmissions(x) & MajorCauseOfAirPollution(x)) -> MajorCauseOfAirPollution(x))", "score": 0}
{"id": "eqasc_validation_381", "prediction": "all x y.((VehicleEmissions(x) & AirPollution(y)) -> MajorCause(x,y))", "score": 0}
{"id": "eqasc_validation_381", "prediction": "all x y.((Vehicle(x) & AirPollution(y)) -> MajorCause(x,y))", "score": 0}
{"id": "eqasc_validation_381", "prediction": "all x y.((Vehicle(x) & AirPollution(y)) -> MajorCauseOf(x,y))", "score": 0}
{"id": "eqasc_validation_381", "prediction": "all x.((VehicleEmissions(x) & AirPollution(x)) -> MajorCause(x))", "score": 0}
{"id": "eqasc_validation_381", "prediction": "all x y z.((VehicleEmission(x) & AirPollution(y) & AirPollution(z)) -> MajorCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_381", "prediction": "all x y.((VehicleEmission(x) & AirPollution(y)) -> MajorCauseOf(x,y))", "score": 0}
{"id": "eqasc_validation_381", "prediction": "all x y z.((Vehicle(x) & AirPollution(y) & Emission(z)) -> MajorCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_381", "prediction": "all x.((VehicleEmission(x) & MajorCauseOfAirPollution(x)) -> MajorCauseOfAirPollution(x))", "score": 0}
{"id": "eqasc_validation_381", "prediction": "all x.(VehicleEmissions(x) -> CauseOfAirPollution(x))", "score": 0}
{"id": "eqasc_validation_381", "prediction": "all x y.((VehicleEmissions(x) & AirPollution(y)) -> MajorCauseOf(x,y))", "score": 0}
{"id": "eqasc_validation_382", "prediction": "all x.(Travels(x) -> CauseOfAirPollution(x))", "score": 0}
{"id": "eqasc_validation_382", "prediction": "all x.(Travel(x) -> CauseOfAirPollution(x))", "score": 0}
{"id": "eqasc_validation_382", "prediction": "all x.(Traveling(x) -> CauseOfAirPollution(x))", "score": 0}
{"id": "eqasc_validation_382", "prediction": "all x y.((Travel(x) & AirPollution(y)) -> Cause(x,y))", "score": 0}
{"id": "eqasc_validation_382", "prediction": "all x y.((Traveling(x) & AirPollution(y)) -> Cause(x,y))", "score": 0}
{"id": "eqasc_validation_382", "prediction": "all x y.((Travel(x) & AirPollution(y)) -> CauseOf(x,y))", "score": 0}
{"id": "eqasc_validation_382", "prediction": "all x y.((Travels(x) & AirPollution(y)) -> Cause(x,y))", "score": 0}
{"id": "eqasc_validation_382", "prediction": "all x y z.((Travel(x) & AirPollution(y) & Air(z)) -> Cause(x,y,z))", "score": 0}
{"id": "eqasc_validation_382", "prediction": "all x y z.((Travel(x) & AirPollution(y) & AirPollution(z)) -> Cause(x,y,z))", "score": 0}
{"id": "eqasc_validation_382", "prediction": "all x y.((Traveling(x) & AirPollution(y)) -> CauseOf(x,y))", "score": 0}
{"id": "eqasc_validation_382", "prediction": "all x y z.((Travel(x) & AirPollution(y) & Air(z)) -> CauseOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_382", "prediction": "all x.(Travels(x) -> AirPollutionCause(x))", "score": 0}
{"id": "eqasc_validation_382", "prediction": "all x y z.((Travel(x) & AirPollution(y) & Traveling(z)) -> CauseOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_382", "prediction": "all x y z.((Travel(x) & AirPollution(y) & Traveling(z)) -> Cause(x,y,z))", "score": 0}
{"id": "eqasc_validation_383", "prediction": "all x.(Motorcycle(x) -> AdditionalVehicle(x))", "score": 0}
{"id": "eqasc_validation_383", "prediction": "all x.(Motorcycle(x) -> ExtraVehicle(x))", "score": 0}
{"id": "eqasc_validation_383", "prediction": "all x y.((Motorcycle(x) & Vehicle(y)) -> Additional(x,y))", "score": 0}
{"id": "eqasc_validation_383", "prediction": "all x.(Motorcycle(x) -> AddedVehicle(x))", "score": 0}
{"id": "eqasc_validation_383", "prediction": "all x.((Motorcycle(x) & AdditionalVehicle(x)) -> AdditionalVehicle(x))", "score": 0}
{"id": "eqasc_validation_383", "prediction": "all x.((Motorcycle(x) & AdditionalVehicle(x)) -> AddedVehicle(x))", "score": 0}
{"id": "eqasc_validation_383", "prediction": "all x.((Motorcycle(x) & AddedVehicle(x)) -> AdditionalVehicle(x))", "score": 0}
{"id": "eqasc_validation_383", "prediction": "all x.((Motorcycle(x) & Vehicle(y)) -> Additional(x,y))", "score": 0}
{"id": "eqasc_validation_383", "prediction": "all x y.((Motorcycle(x) & Vehicle(y)) -> AdditionalVehicle(x,y))", "score": 0}
{"id": "eqasc_validation_383", "prediction": "all x.((Motorcycle(x) & Vehicle(x)) -> Additional(x))", "score": 0}
{"id": "eqasc_validation_384", "prediction": "all x.(Motorcycle(x) -> UsedForTravel(x))", "score": 0}
{"id": "eqasc_validation_384", "prediction": "all x y.((Motorcycle(x) & Travel(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_384", "prediction": "all x y.((Motorcycle(x) & Motorcycle(y)) -> UsedForTravel(x,y))", "score": 0}
{"id": "eqasc_validation_384", "prediction": "all x y z.((Motorcycle(x) & Travel(y) & Travel(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_384", "prediction": "all x y.((Motorcycle(x) & Traveler(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_384", "prediction": "all x.((Motorcycle(x) & UsedForTravel(x)) -> UsedForTravel(x))", "score": 0}
{"id": "eqasc_validation_384", "prediction": "all x.(Motorcycle(x) -> (UsedForTravel(x) & UsedForTravel(x)))", "score": 0}
{"id": "eqasc_validation_384", "prediction": "all x y z.((Motorcycle(x) & Motorcycle(y) & Travel(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_384", "prediction": "all x y.((Motorcycle(x) & Motorcyclist(y)) -> UsedForTravel(x,y))", "score": 0}
{"id": "eqasc_validation_384", "prediction": "all x y.((Motorcycle(x) & Motorcycle(y)) -> UsedForTravel(x))", "score": 0}
{"id": "eqasc_validation_384", "prediction": "all x y.((Motorcycle(x) & Rider(y)) -> UsedForTravel(x,y))", "score": 0}
{"id": "eqasc_validation_384", "prediction": "all x y z.((Motorcycle(x) & Travel(y) & Travel(z)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_384", "prediction": "all x y.((Motorcycle(x) & Car(y)) -> UsedForTravel(x,y))", "score": 0}
{"id": "eqasc_validation_384", "prediction": "all x y.((Motorcycle(x) & Vehicle(y)) -> UsedForTravel(x,y))", "score": 0}
{"id": "eqasc_validation_384", "prediction": "all x y z.((Motorcycle(x) & Travel(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_385", "prediction": "all x.((Truck(x) | Car(x)) -> UsedForTravel(x))", "score": 2}
{"id": "eqasc_validation_385", "prediction": "all x y.((Truck(x) & Car(y)) -> (UsedForTravel(x,y) & UsedForTravel(x,y)))", "score": 4}
{"id": "eqasc_validation_385", "prediction": "all x y.((Truck(x) & Car(y)) -> UsedForTravel(x,y))", "score": 4}
{"id": "eqasc_validation_385", "prediction": "all x y.((Truck(x) & Car(y)) -> (UsedForTravel(x,y) & UsedForTravel(y)))", "score": 0}
{"id": "eqasc_validation_385", "prediction": "all x y.((Truck(x) & Car(y)) -> (UsedForTravel(x,y) | UsedForTravel(x,y)))", "score": 4}
{"id": "eqasc_validation_385", "prediction": "all x y z.((Truck(x) & Car(y) & Truck(z)) -> UsedForTravel(x,y,z))", "score": 0}
{"id": "eqasc_validation_385", "prediction": "all x y.((Truck(x) & Car(y)) -> (UsedForTravel(x,y) & UsedForTravel(x,z)))", "score": 1}
{"id": "eqasc_validation_385", "prediction": "all x y.((Truck(x) & Car(y)) -> (UsedForTravel(x) & UsedForTravel(y)))", "score": 4}
{"id": "eqasc_validation_385", "prediction": "all x y z.((Truck(x) & Car(y) & Truck(z)) -> UsedForTravel(x,z))", "score": 6}
{"id": "eqasc_validation_385", "prediction": "all x y.((Truck(x) | Car(y)) -> UsedForTravel(x,y))", "score": 0}
{"id": "eqasc_validation_385", "prediction": "all x y z.((Truck(x) & Car(y) & Travel(z)) -> (UsedFor(x,z) & UsedFor(y,z)))", "score": 4}
{"id": "eqasc_validation_385", "prediction": "all x y z.((Truck(x) & Car(y) & (Truck(z) | Car(z))) -> UsedForTravel(x,y,z))", "score": 0}
{"id": "eqasc_validation_385", "prediction": "all x y z.((Truck(x) & Car(y) & Truck(z)) -> (UsedForTravel(x,y) | UsedForTravel(y,z)))", "score": 4}
{"id": "eqasc_validation_385", "prediction": "all x y z.((Truck(x) & Car(y) & Truck(z)) -> (UsedForTravel(x,y,z) & UsedForTravel(y,z)))", "score": 0}
{"id": "eqasc_validation_385", "prediction": "all x y.((Truck(x) & Car(y)) -> (UsedForTravel(x,y) & UsedForTravel(y,x)))", "score": 4}
{"id": "eqasc_validation_385", "prediction": "all x y.((Truck(x) & Car(y)) -> (UsedForTravel(x) & UsedForTravel(x,y)))", "score": 0}
{"id": "eqasc_validation_386", "prediction": "all x.(Truck(x) -> UsedForTravel(x))", "score": 4}
{"id": "eqasc_validation_386", "prediction": "all x y.((Truck(x) & Truck(y)) -> UsedForTravel(x,y))", "score": 4}
{"id": "eqasc_validation_386", "prediction": "all x.(Truck(x) -> (UsedForTravel(x) & UsedForTravel(x)))", "score": 4}
{"id": "eqasc_validation_386", "prediction": "all x y.((Truck(x) & Travel(y)) -> UsedFor(x,y))", "score": 4}
{"id": "eqasc_validation_386", "prediction": "all x y z.((Truck(x) & Truck(y) & Travel(z)) -> UsedFor(x,y,z))", "score": 4}
{"id": "eqasc_validation_386", "prediction": "all x.(Truck(x) -> (UsedForTravel(x) & Travel(x)))", "score": 0}
{"id": "eqasc_validation_386", "prediction": "all x y z.((Truck(x) & Travel(y) & Travel(z)) -> UsedFor(x,y,z))", "score": 4}
{"id": "eqasc_validation_386", "prediction": "all x y.((Truck(x) & Travel(y)) -> UsedForTravel(x,y))", "score": 0}
{"id": "eqasc_validation_386", "prediction": "all x y.((Truck(x) & Cargo(y)) -> UsedForTravel(x,y))", "score": 0}
{"id": "eqasc_validation_386", "prediction": "all x y z.((Truck(x) & Truck(y) & Travel(z)) -> UsedForTravel(x,y,z))", "score": 0}
{"id": "eqasc_validation_386", "prediction": "all x.(Truck(x) -> (UsedForTravel(x) & Travels(x)))", "score": 0}
{"id": "eqasc_validation_386", "prediction": "all x y.((Truck(x) & Traveler(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_386", "prediction": "all x y.((Truck(x) & Truck(y)) -> (UsedForTravel(x,y) & UsedForTravel(x,y)))", "score": 4}
{"id": "eqasc_validation_386", "prediction": "all x y.((Truck(x) & Vehicle(y)) -> UsedForTravel(x,y))", "score": 4}
{"id": "eqasc_validation_386", "prediction": "all x y.((Truck(x) & Car(y)) -> UsedForTravel(x,y))", "score": 9}
{"id": "eqasc_validation_386", "prediction": "all x y.((Truck(x) & Truck(y)) -> (UsedForTravel(x,y) | UsedForTravel(x,y)))", "score": 4}
{"id": "eqasc_validation_387", "prediction": "all x.(Car(x) -> UsedForTravel(x))", "score": 5}
{"id": "eqasc_validation_387", "prediction": "all x y.((Car(x) & Travel(y)) -> UsedFor(x,y))", "score": 5}
{"id": "eqasc_validation_387", "prediction": "all x y z.((Car(x) & Travel(y) & Travel(z)) -> UsedFor(x,y,z))", "score": 7}
{"id": "eqasc_validation_387", "prediction": "all x.exists y.(Car(x) & Travel(y) & UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_387", "prediction": "exists x.(Car(x) & UsedForTravel(x))", "score": 0}
{"id": "eqasc_validation_387", "prediction": "all x y.((Car(x) & Traveler(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_387", "prediction": "all x y z.((Car(x) & Travel(y) & Travel(z)) -> UsedFor(x,y))", "score": 5}
{"id": "eqasc_validation_387", "prediction": "all x y z.((Car(x) & Travel(y) & Vehicle(z)) -> UsedFor(x,y,z))", "score": 5}
{"id": "eqasc_validation_387", "prediction": "all x y z.((Car(x) & Travel(y) & Car(z)) -> UsedFor(x,y,z))", "score": 5}
{"id": "eqasc_validation_387", "prediction": "all x y.((Car(x) & Travels(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_387", "prediction": "all x y.((Car(x) & Car(y)) -> UsedForTravel(x,y))", "score": 5}
{"id": "eqasc_validation_387", "prediction": "all x y z.((Car(x) & Travel(y) & Trip(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_387", "prediction": "all x y z.((Car(x) & Travel(y) & Uses(x,y)) -> UsedFor(x,z))", "score": 0}
{"id": "eqasc_validation_387", "prediction": "all x y.((Car(x) & Trip(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_387", "prediction": "all x y z.((Car(x) & Travel(y) & Use(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_388", "prediction": "all x.((Car(x) | Truck(x)) -> UsedForTravel(x))", "score": 4}
{"id": "eqasc_validation_388", "prediction": "all x y.((Car(x) | Truck(y)) -> UsedForTravel(x))", "score": 0}
{"id": "eqasc_validation_388", "prediction": "all x y.((Car(x) & Truck(y)) -> UsedForTravel(x,y))", "score": 9}
{"id": "eqasc_validation_388", "prediction": "all x y.((Car(x) & Truck(y)) -> UsedForTravel(x))", "score": 9}
{"id": "eqasc_validation_388", "prediction": "all x.(Car(x) | Truck(x)) -> UsedForTravel(x))", "score": -1}
{"id": "eqasc_validation_388", "prediction": "all x y.((Car(x) | Truck(y)) -> UsedForTravel(x,y))", "score": 0}
{"id": "eqasc_validation_388", "prediction": "all x y z.((Car(x) & Truck(y) & Travel(z)) -> UsedFor(x,y,z))", "score": 9}
{"id": "eqasc_validation_388", "prediction": "all x.(Car(x) & Truck(x)) -> UsedForTravel(x))", "score": -1}
{"id": "eqasc_validation_388", "prediction": "all x y z.((Car(x) | Truck(y) & Travel(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_388", "prediction": "all x y z.((Car(x) | Truck(y) & Car(z)) -> UsedForTravel(x,y,z))", "score": 0}
{"id": "eqasc_validation_388", "prediction": "all x y z.((Car(x) & Truck(y) & Travel(z)) -> UsedFor(x,z))", "score": 9}
{"id": "eqasc_validation_388", "prediction": "all x y z.((Car(x) | Truck(y) & Car(z)) -> UsedForTravel(x))", "score": 0}
{"id": "eqasc_validation_388", "prediction": "all x y z.((Car(x) | Truck(y)) -> UsedForTravel(x))", "score": 0}
{"id": "eqasc_validation_388", "prediction": "all x y z.((Car(x) | Truck(y) & Travel(z)) -> UsedFor(x,z))", "score": 0}
{"id": "eqasc_validation_388", "prediction": "all x y.((Car(x) | Truck(x)) -> UsedForTravel(x))", "score": 4}
{"id": "eqasc_validation_388", "prediction": "all x.((Car(x) | Truck(x))) -> UsedForTravel(x))", "score": -1}
{"id": "eqasc_validation_389", "prediction": "all x.(Airplane(x) -> (Vehicle(x) & LeavesGround(x) & FliesThroughAir(x)))", "score": 0}
{"id": "eqasc_validation_389", "prediction": "all x.(Airplane(x) -> (Vehicle(x) & LeavesGround(x) & FlysThroughAir(x)))", "score": 0}
{"id": "eqasc_validation_389", "prediction": "all x.(Airplane(x) -> (LeavesGround(x) & FliesThroughAir(x)))", "score": 0}
{"id": "eqasc_validation_389", "prediction": "all x.(Airplane(x) -> (LeavingGround(x) & FlyingThroughAir(x)))", "score": 0}
{"id": "eqasc_validation_389", "prediction": "all x.(Airplane(x) -> (Vehicle(x) & CanLeaveGround(x) & CanFlyThroughAir(x)))", "score": 0}
{"id": "eqasc_validation_389", "prediction": "all x.(Airplane(x) -> (Vehicle(x) & LeavesGround(x) & FlowsThroughAir(x)))", "score": 0}
{"id": "eqasc_validation_389", "prediction": "all x.(Airplane(x) -> (Vehicle(x) & LeavesGround(x) & FlyingThroughAir(x)))", "score": 0}
{"id": "eqasc_validation_389", "prediction": "all x.(Airplane(x) -> (VehicleCapableOfLeavingGround(x) & CapableOfFlyingThroughAir(x)))", "score": 0}
{"id": "eqasc_validation_389", "prediction": "all x.(Airplane(x) -> (Vehicle(x) & LeavesGround(x) & FlyesThroughAir(x)))", "score": 0}
{"id": "eqasc_validation_389", "prediction": "all x y.((Airplane(x) & Ground(y)) -> (Leaves(x,y) & FliesThroughAir(x)))", "score": 0}
{"id": "eqasc_validation_389", "prediction": "all x.(Airplane(x) -> (Vehicle(x) & LeavesGround(x) & FloatsThroughAir(x)))", "score": 0}
{"id": "eqasc_validation_390", "prediction": "all x.(Airplane(x) -> TravelsHighAboveGround(x))", "score": 0}
{"id": "eqasc_validation_390", "prediction": "all x.(Airplane(x) -> CanTravelHighAboveGround(x))", "score": 0}
{"id": "eqasc_validation_390", "prediction": "all x y.((Airplane(x) & Ground(y)) -> TravelsHighAbove(x,y))", "score": 0}
{"id": "eqasc_validation_390", "prediction": "all x.(Airplane(x) -> TravelHighAboveGround(x))", "score": 0}
{"id": "eqasc_validation_390", "prediction": "all x y.((Airplane(x) & Ground(y)) -> CanTravelHighAbove(x,y))", "score": 0}
{"id": "eqasc_validation_390", "prediction": "all x.(Airplane(x) -> HighAboveGround(x))", "score": 0}
{"id": "eqasc_validation_390", "prediction": "all x y z.((Airplane(x) & Ground(y) & Ground(z)) -> TravelsHighAbove(x,y,z))", "score": 0}
{"id": "eqasc_validation_390", "prediction": "all x y z.((Airplane(x) & Ground(y) & Ground(z)) -> CanTravelHighAbove(x,y,z))", "score": 0}
{"id": "eqasc_validation_390", "prediction": "all x y.((Airplane(x) & Ground(y)) -> HighAbove(x,y))", "score": 0}
{"id": "eqasc_validation_390", "prediction": "all x y.((Airplane(x) & Ground(y)) -> TravelHighAbove(x,y))", "score": 0}
{"id": "eqasc_validation_390", "prediction": "all x.(Airplane(x) -> CanBeUsedToTravelHighAboveGround(x))", "score": 0}
{"id": "eqasc_validation_390", "prediction": "all x.(Airplane(x) -> (TravelsHighAboveGround(x) & HighAboveGround(x)))", "score": 0}
{"id": "eqasc_validation_390", "prediction": "all x.(Airplane(x) -> (TravelHighAboveGround(x) | TravelHighAboveGround(x)))", "score": 0}
{"id": "eqasc_validation_390", "prediction": "all x.(Airplane(x) -> UsedToTravelHighAboveGround(x))", "score": 0}
{"id": "eqasc_validation_390", "prediction": "all x y.((Airplane(x) & Ground(y)) -> TravelsHigh(x,y))", "score": 0}
{"id": "eqasc_validation_390", "prediction": "all x.(Airplane(x) -> TravelsHighAtGround(x))", "score": 0}
{"id": "eqasc_validation_391", "prediction": "all x.(Travel(x) -> RequiresNavigation(x))", "score": 0}
{"id": "eqasc_validation_391", "prediction": "all x.(Travel(x) -> exists y.(Navigation(y) & Requires(x,y))))", "score": -1}
{"id": "eqasc_validation_391", "prediction": "all x.(Travel(x) -> (RequiresNavigation(x) | RequiresNavigation(x)))", "score": 0}
{"id": "eqasc_validation_391", "prediction": "all x.(Travel(x) -> (RequiresNavigation(x) & InSomeFormOrAnother(x)))", "score": 0}
{"id": "eqasc_validation_391", "prediction": "all x.(Travel(x) -> (RequiresNavigation(x) & exists y.(NavigationForm(y) & Requires(x,y)))))", "score": -1}
{"id": "eqasc_validation_391", "prediction": "all x.(Travel(x) -> (RequiresNavigation(x) & exists y.(Navigation(y) & Requires(x,y)))))", "score": -1}
{"id": "eqasc_validation_391", "prediction": "all x.(Travel(x) -> exists y.(Navigation(y) & Requires(x,y)))", "score": 0}
{"id": "eqasc_validation_391", "prediction": "all x.(Travel(x) -> (RequiresNavigation(x) & exists y.(Form(y) & Requires(x,y)))))", "score": -1}
{"id": "eqasc_validation_391", "prediction": "all x.(Travel(x) -> (RequiresNavigation(x) & exists y.(Form(y) & RequiresNavigation(x,y)))))", "score": -1}
{"id": "eqasc_validation_391", "prediction": "all x.(Travel(x) -> (RequiresNavigation(x) & RequiresNavigation(x)))", "score": 0}
{"id": "eqasc_validation_391", "prediction": "all x.((Travel(x) & RequiresNavigation(x)) -> RequiresNavigation(x))", "score": 0}
{"id": "eqasc_validation_391", "prediction": "all x.(Travel(x) -> (RequiresNavigation(x) & -RequiresNavigation(x)))", "score": 0}
{"id": "eqasc_validation_391", "prediction": "all x.(Travel(x) -> exists y.(NavigationForm(y) & Requires(x,y))))", "score": -1}
{"id": "eqasc_validation_391", "prediction": "all x y.((Travel(x) & Form(y)) -> RequiresNavigation(x,y))", "score": 0}
{"id": "eqasc_validation_391", "prediction": "all x.(Travel(x) -> (RequiresNavigation(x) & exists y.(NavigationForm(y) & Requires(x,y))))", "score": 0}
{"id": "eqasc_validation_391", "prediction": "all x.(Travel(x) -> (RequiresNavigation(x) & In(x,y)))", "score": 0}
{"id": "eqasc_validation_392", "prediction": "all x.((Vehicle(x) & InUse(x)) -> RequiresNavigation(x))", "score": 0}
{"id": "eqasc_validation_392", "prediction": "all x.((VehicleInUse(x) & RequiresNavigation(x)) -> RequiresNavigation(x))", "score": 0}
{"id": "eqasc_validation_392", "prediction": "all x y.((Vehicle(x) & InUse(x)) -> RequiresNavigation(x,y))", "score": 0}
{"id": "eqasc_validation_392", "prediction": "all x.((Vehicle(x) & InUse(x)) -> RequiresNaviation(x))", "score": 0}
{"id": "eqasc_validation_392", "prediction": "all x y.((Vehicle(x) & InUse(x)) -> RequiresNavigation(x))", "score": 0}
{"id": "eqasc_validation_392", "prediction": "all x y.((Vehicle(x) & InUse(x) & RequiresNavigation(y)) -> RequiresNavigation(x,y))", "score": 0}
{"id": "eqasc_validation_392", "prediction": "all x.((VehicleInUse(x) & RequiresNavigation(x)) -> InUse(x))", "score": 0}
{"id": "eqasc_validation_392", "prediction": "all x.((Vehicle(x) & Used(x)) -> RequiresNavigation(x))", "score": 0}
{"id": "eqasc_validation_392", "prediction": "all x.(Vehicle(x) -> (InUse(x) & RequiresNavigation(x)))", "score": 0}
{"id": "eqasc_validation_392", "prediction": "all x.((Vehicle(x) & InUse(x)) -> RequiresNavigationRequired(x))", "score": 0}
{"id": "eqasc_validation_392", "prediction": "all x.((VehicleInUse(x) & InUse(x)) -> RequiresNavigation(x))", "score": 0}
{"id": "eqasc_validation_392", "prediction": "all x.(Vehicle(x) & InUse(x)) -> RequiresNavigation(x))", "score": -1}
{"id": "eqasc_validation_392", "prediction": "all x.((VehicleInUse(x) & RequiresNavigation(x)) -> RequiresNaviation(x))", "score": 0}
{"id": "eqasc_validation_392", "prediction": "all x.(Vehicle(x) & InUse(x) -> RequiresNavigation(x))", "score": 0}
{"id": "eqasc_validation_392", "prediction": "all x y z.((Vehicle(x) & InUse(x) & Navigation(y) & Navigation(z)) -> Requires(x,y,z))", "score": 0}
{"id": "eqasc_validation_393", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_393", "prediction": "all x y.((Weather(x) & Stormy(x)) -> GreaterChanceOfRain(y))", "score": 0}
{"id": "eqasc_validation_393", "prediction": "all x.(StormyWeather(x) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_393", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterCauseOfRain(x))", "score": 0}
{"id": "eqasc_validation_393", "prediction": "all x.((Weather(x) & Stormy(x)) -> greaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_393", "prediction": "all x y.((Weather(x) & Stormy(x) & GreaterChanceOfRain(y)) -> GreaterChanceOfRain(x,y))", "score": 0}
{"id": "eqasc_validation_393", "prediction": "all x.((WeatherStormy(x) & GreaterChanceOfRain(x)) -> Stormy(x))", "score": 0}
{"id": "eqasc_validation_393", "prediction": "all x.((WeatherStormy(x) & GreaterChanceOfRain(x)) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_393", "prediction": "all x y.((Weather(x) & Stormy(x)) -> GreaterChanceOfRain(x,y))", "score": 0}
{"id": "eqasc_validation_393", "prediction": "all x y.((Weather(x) & Stormy(x) & Rain(y)) -> GreaterChanceOf(x,y))", "score": 0}
{"id": "eqasc_validation_393", "prediction": "all x y.((Weather(x) & Stormy(x)) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_393", "prediction": "all x y.((Weather(x) & Stormy(x) & Rain(y)) -> GreaterChanceOfRain(x,y))", "score": 0}
{"id": "eqasc_validation_394", "prediction": "all x y z.((Sentence(x) & Rain(y) & Crops(z) & DestroyedBy(y,z)) -> RainSubject(x))", "score": 0}
{"id": "eqasc_validation_394", "prediction": "all x y z.((Sentence(x) & Rain(y) & Crops(z) & Destroyed(y,z)) -> RainSubject(x))", "score": 0}
{"id": "eqasc_validation_394", "prediction": "all x y z.((Punch(x) & Rain(y) & Crops(z) & DestroyedBy(y,z)) -> RainSubject(x))", "score": 0}
{"id": "eqasc_validation_394", "prediction": "all x y.((Sentence(x) & Rain(y) & DestroyedCrops(y)) -> RainSubject(x,y))", "score": 0}
{"id": "eqasc_validation_394", "prediction": "all x y z.((Sentence(x) & Rain(y) & Crops(z)) -> (Destroyed(y,z) & Subject(x)))", "score": 0}
{"id": "eqasc_validation_394", "prediction": "all x y z.((Punch(x) & Rain(y) & Crops(z) & Destroyed(y,z)) -> RainSubject(x))", "score": 0}
{"id": "eqasc_validation_394", "prediction": "all x y z.((Punch(x) & Rain(y) & Crops(z)) -> (Destroyed(y,z) & Subject(x)))", "score": 0}
{"id": "eqasc_validation_394", "prediction": "all x y z.((Sentence(x) & Rain(y) & Crops(z)) -> (Destroyed(y,z) & Subject(x,y)))", "score": 0}
{"id": "eqasc_validation_394", "prediction": "all x y z.((Punch(x) & Rain(y) & Crops(z) & DestroyedBy(y,z)) -> Subject(x))", "score": 0}
{"id": "eqasc_validation_394", "prediction": "all x y z.((Punch(x) & Rain(y) & Crops(z) & DestroyedBy(y,z)) -> Subject(x,y))", "score": 0}
{"id": "eqasc_validation_394", "prediction": "all x y z.((Punch(x) & Rain(y) & Crops(z) & Destroyed(y,z)) -> Subject(x))", "score": 0}
{"id": "eqasc_validation_394", "prediction": "all x y z.((Sentence(x) & Rain(y) & Crops(z) & Destroyed(y,z)) -> Subject(x))", "score": 0}
{"id": "eqasc_validation_394", "prediction": "all x y z.((Sentence(x) & Rain(y) & Crops(z) & Destroyed(y,z)) -> Subject(x,y))", "score": 0}
{"id": "eqasc_validation_394", "prediction": "all x y z.((Sentence(x) & Rain(y) & Crops(z) & DestroyedBy(y,z)) -> Subject(x))", "score": 0}
{"id": "eqasc_validation_394", "prediction": "all x y z.((Sentence(x) & Rain(y) & Crops(z) & DestroyedBy(y,z)) -> Subject(x,y))", "score": 0}
{"id": "eqasc_validation_394", "prediction": "all x y z.((Punch(x) & Rain(y) & Crops(z) & Destroyed(y,z)) -> Subject(x,y))", "score": 0}
{"id": "eqasc_validation_395", "prediction": "all x.((Weather(x) & Stormy(x)) -> ChanceOfDestroyedCrops(x))", "score": 0}
{"id": "eqasc_validation_395", "prediction": "all x.((Weather(x) & Stormy(x)) -> ChanceOfDisturbedCrops(x))", "score": 0}
{"id": "eqasc_validation_395", "prediction": "all x.((Weather(x) & Stormy(x)) -> ChanceOfDamagedCrops(x))", "score": 0}
{"id": "eqasc_validation_395", "prediction": "all x.((Weather(x) & Stormy(x)) -> ChanceOfDisruptedCrops(x))", "score": 0}
{"id": "eqasc_validation_395", "prediction": "all x.((Weather(x) & Stormy(x)) -> ChanceOfDestroyingCrops(x))", "score": 0}
{"id": "eqasc_validation_395", "prediction": "all x.(StormyWeather(x) -> ChanceOfDestroyedCrops(x))", "score": 0}
{"id": "eqasc_validation_395", "prediction": "all x.(StormyWeather(x) -> ChanceOfDisruptedCrops(x))", "score": 0}
{"id": "eqasc_validation_395", "prediction": "all x.(StormyWeather(x) -> ChanceOfDamagedCrops(x))", "score": 0}
{"id": "eqasc_validation_395", "prediction": "all x.(StormyWeather(x) -> ChanceOfDisturbedCrops(x))", "score": 0}
{"id": "eqasc_validation_395", "prediction": "all x.((WeatherStormy(x) & ChanceOfDestroyedCrops(x)) -> Stormy(x))", "score": 0}
{"id": "eqasc_validation_395", "prediction": "all x.((Weather(x) & Stormy(x)) -> ChanceOfDisaster(x))", "score": 0}
{"id": "eqasc_validation_396", "prediction": "all x.(SpringDay(x) -> Stormy(x))", "score": 0}
{"id": "eqasc_validation_396", "prediction": "all x.(SpringDay(x) -> CanBeStormy(x))", "score": 0}
{"id": "eqasc_validation_396", "prediction": "all x.((SpringDay(x) & Stormy(x)) -> CanBe(x))", "score": 0}
{"id": "eqasc_validation_396", "prediction": "all x y.((SpringDay(x) & Stormy(y)) -> CanBe(x,y))", "score": 0}
{"id": "eqasc_validation_396", "prediction": "all x.(Spring(x) -> Stormy(x))", "score": 0}
{"id": "eqasc_validation_396", "prediction": "all x.(SpringDay(x) -> (Stormy(x) | Stormy(x)))", "score": 0}
{"id": "eqasc_validation_396", "prediction": "all x.(Spring(x) -> CanBeStormy(x))", "score": 0}
{"id": "eqasc_validation_396", "prediction": "all x y.((SpringDay(x) & SpringDay(y)) -> CanBeStormy(x,y))", "score": 0}
{"id": "eqasc_validation_396", "prediction": "all x.((SpringDay(x) & Stormy(x)) -> CanBe(x,y))", "score": 0}
{"id": "eqasc_validation_396", "prediction": "exists x.(SpringDay(x) & Stormy(x))", "score": 0}
{"id": "eqasc_validation_396", "prediction": "all x.((SpringDay(x) & Stormy(x)) -> -Stormy(x))", "score": 0}
{"id": "eqasc_validation_396", "prediction": "all x y.((SpringDay(x) & SpringDay(y)) -> Stormy(x))", "score": 0}
{"id": "eqasc_validation_396", "prediction": "all x y.((SpringDay(x) & Stormy(x)) -> CanBe(x,y))", "score": 0}
{"id": "eqasc_validation_397", "prediction": "all x.(SpringDay(x) -> CanSeeRainWeather(x))", "score": 0}
{"id": "eqasc_validation_397", "prediction": "all x y.((SpringDay(x) & RainWeather(y)) -> CanSee(x,y))", "score": 0}
{"id": "eqasc_validation_397", "prediction": "all x y.((SpringDay(x) & SpringDay(y)) -> CanSeeRainWeather(x,y))", "score": 0}
{"id": "eqasc_validation_397", "prediction": "all x.(SpringDay(x) -> (SeesRainWeather(x) | SeesRainWeather(x)))", "score": 0}
{"id": "eqasc_validation_397", "prediction": "all x.((SpringDay(x) & RainWeather(x)) -> CanSee(x,y))", "score": 0}
{"id": "eqasc_validation_397", "prediction": "all x y z.((SpringDay(x) & RainWeather(y) & RainWeather(z)) -> CanSee(x,y,z))", "score": 0}
{"id": "eqasc_validation_397", "prediction": "all x y z.((SpringDay(x) & RainWeather(y) & SpringDay(z)) -> CanSee(x,y,z))", "score": 0}
{"id": "eqasc_validation_397", "prediction": "all x y.((SpringDay(x) & Spring(y)) -> CanSeeRainWeather(x,y))", "score": 0}
{"id": "eqasc_validation_397", "prediction": "all x.(SpringDay(x) -> RainWeather(x))", "score": 0}
{"id": "eqasc_validation_397", "prediction": "all x.((SpringDay(x) & CanSeeRainWeather(x)) -> CanSeeRainWeather(x))", "score": 0}
{"id": "eqasc_validation_397", "prediction": "all x y z.((SpringDay(x) & RainWeather(y) & Spring(z)) -> CanSee(x,y,z))", "score": 0}
{"id": "eqasc_validation_397", "prediction": "all x.(SpringDay(x) -> (SeesRainWeather(x) & MaySeeRainWeather(x)))", "score": 0}
{"id": "eqasc_validation_397", "prediction": "all x.(SpringDay(x) -> (SeeRainWeather(x) | SeeRainWeather(x)))", "score": 0}
{"id": "eqasc_validation_397", "prediction": "all x.(SpringDay(x) -> SeesRainWeather(x))", "score": 0}
{"id": "eqasc_validation_397", "prediction": "all x.(SpringDay(x) -> (SeesRainWeather(x) & RainWeather(x)))", "score": 0}
{"id": "eqasc_validation_397", "prediction": "all x y.((SpringDay(x) & RainWeather(y)) -> Sees(x,y))", "score": 0}
{"id": "eqasc_validation_398", "prediction": "all x.(LowPressure(x) -> (CloudyWeather(x) | StormyWeather(x)))", "score": 0}
{"id": "eqasc_validation_398", "prediction": "all x.((LowPressure(x) & (CloudyWeather(x) | StormyWeather(x))) -> Assocated(x))", "score": 0}
{"id": "eqasc_validation_398", "prediction": "all x.((LowPressure(x) & (CloudyWeather(x) | StormyWeather(x))) -> AssociatedWith(x,y))", "score": 0}
{"id": "eqasc_validation_398", "prediction": "all x.((LowPressure(x) & (CloudyWeather(x) | StormyWeather(x))) -> Associates(x,y))", "score": 0}
{"id": "eqasc_validation_398", "prediction": "all x.((LowPressure(x) & (CloudyWeather(x) | StormyWeather(x))) -> Associates(x,cloudyWeather))", "score": 0}
{"id": "eqasc_validation_398", "prediction": "all x.((LowPressure(x) & (CloudyWeather(x) | StormyWeather(x))) -> AssociatesWith(x,y))", "score": 0}
{"id": "eqasc_validation_398", "prediction": "all x.((LowPressure(x) & (CloudyWeather(x) | StormyWeather(x))) -> Associated(x))", "score": 0}
{"id": "eqasc_validation_398", "prediction": "all x y.((LowPressure(x) & Weather(y)) -> (Cloudy(y) | Stormy(y)))", "score": 0}
{"id": "eqasc_validation_398", "prediction": "all x y.((LowPressure(x) & (CloudyWeather(y) | StormyWeather(y))) -> Associates(x,y))", "score": 0}
{"id": "eqasc_validation_398", "prediction": "all x.((LowPressure(x) & (CloudyWeather(x) | StormyWeather(x))) -> Assocrated(x))", "score": 0}
{"id": "eqasc_validation_398", "prediction": "all x y.((LowPressure(x) & (CloudyWeather(y) | StormyWeather(y))) -> AssociatedWith(x,y))", "score": 0}
{"id": "eqasc_validation_398", "prediction": "all x y.((LowPressure(x) & (CloudyWeather(y) | StormyWeather(y))) -> Assocated(x,y))", "score": 0}
{"id": "eqasc_validation_398", "prediction": "all x.((LowPressure(x) & (CloudyWeather(x) | StormyWeather(x))) -> AssembledWith(x,y))", "score": 0}
{"id": "eqasc_validation_398", "prediction": "all x y.((LowPressure(x) & (CloudyWeather(y) | StormyWeather(y))) -> Associated(x,y))", "score": 0}
{"id": "eqasc_validation_399", "prediction": "all x.(LowPressure(x) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_399", "prediction": "all x.((LowPressure(x) & GreaterChanceOfRain(x)) -> CausesLowPressure(x))", "score": 0}
{"id": "eqasc_validation_399", "prediction": "all x y.((LowPressure(x) & Rain(y)) -> GreaterChanceOf(x,y))", "score": 0}
{"id": "eqasc_validation_399", "prediction": "all x.(LowPressure(x) -> CausesGreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_399", "prediction": "all x y.((LowPressure(x) & RainChance(y)) -> GreaterChanceOf(x,y))", "score": 0}
{"id": "eqasc_validation_399", "prediction": "all x y z.((LowPressure(x) & Rain(y) & Rain(z)) -> GreaterChanceOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_399", "prediction": "all x y.((LowPressure(x) & Rain(y)) -> CausesGreaterChanceOfRain(x,y))", "score": 0}
{"id": "eqasc_validation_399", "prediction": "all x y.((LowPressure(x) & Rain(y)) -> CausesGreaterChanceOf(x,y))", "score": 0}
{"id": "eqasc_validation_399", "prediction": "all x.((LowPressure(x) & GreaterChanceOfRain(x)) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_399", "prediction": "all x.(LowPressureCausesGreaterChanceOfRain(x) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_399", "prediction": "all x y.((LowPressure(x) & RainChance(y)) -> CausesGreaterChance(x,y))", "score": 0}
{"id": "eqasc_validation_399", "prediction": "all x y.((LowPressure(x) & Rain(y)) -> GreaterChanceOfRain(x,y))", "score": 0}
{"id": "eqasc_validation_399", "prediction": "all x y.((LowPressure(x) & Rain(y)) -> CausesGreaterChance(x,y))", "score": 0}
{"id": "eqasc_validation_399", "prediction": "all x.((LowPressure(x) & GreaterChanceOfRain(x)) -> LowerPressureCauses(x))", "score": 0}
{"id": "eqasc_validation_399", "prediction": "all x y.((LowPressure(x) & RainChance(y)) -> CausesGreaterChanceOf(x,y))", "score": 0}
{"id": "eqasc_validation_399", "prediction": "all x y.((LowPressure(x) & RainChance(y)) -> CausesGreaterChanceOfRain(x,y))", "score": 0}
{"id": "eqasc_validation_400", "prediction": "all x y z.((RapidWarming(x) & GlobalStorminess(y) & Hurricane(z)) -> (Increases(x,y) & CreatesPerfectConditions(x,z)))", "score": 0}
{"id": "eqasc_validation_400", "prediction": "all x y.((RapidWarming(x) & Hurricane(y)) -> (IncreasesGlobalStorminess(x) & CreatesPerfectConditions(x,y)))", "score": 0}
{"id": "eqasc_validation_400", "prediction": "all x.(RapidWarming(x) -> (IncreasesGlobalStorminess(x) & CreatesPerfectConditionsForHurricane(x)))", "score": 0}
{"id": "eqasc_validation_400", "prediction": "all x.(RapidWarming(x) -> (IncreasesGlobalStorminess(x) & CreatesPerfectConditionsForHurricans(x)))", "score": 0}
{"id": "eqasc_validation_400", "prediction": "all x y.((RapidWarming(x) & Hurricane(y)) -> (IncreasesGlobalStorminess(x,y) & CreatesPerfectConditions(x,y)))", "score": 0}
{"id": "eqasc_validation_400", "prediction": "all x.(RapidWarming(x) -> (IncreasesGlobalStorminess(x) & CreatesPerfectConditionsForHurricanes(x)))", "score": 0}
{"id": "eqasc_validation_400", "prediction": "all x.(RapidWarming(x) -> (IncreasesGlobalStorminess(x) & CreatesPerfectConditions(x)))", "score": 0}
{"id": "eqasc_validation_400", "prediction": "all x y z.((RapidWarming(x) & GlobalStorminess(y) & Hurricane(z)) -> IncreasesAndCreatesPerfectConditions(x,y,z))", "score": 0}
{"id": "eqasc_validation_400", "prediction": "all x y.((RapidWarming(x) & Hurricane(y)) -> IncreasesGlobalStorminessAndCreatesPerfectConditions(x,y))", "score": 0}
{"id": "eqasc_validation_400", "prediction": "all x y.((RapidWarming(x) & Hurricane(y)) -> IncreasesGlobalStorminess(x,y))", "score": 0}
{"id": "eqasc_validation_400", "prediction": "all x y z.((RapidWarming(x) & GlobalStorminess(y) & Hurricane(z)) -> (Increases(x,y) & CreatesPerfectConditionsFor(x,z)))", "score": 0}
{"id": "eqasc_validation_400", "prediction": "all x y z.((RapidWarming(x) & GlobalStorminess(y) & Hurricane(z)) -> (Increases(x,y) & PerfectConditions(x,z)))", "score": 0}
{"id": "eqasc_validation_400", "prediction": "all x y.((RapidWarming(x) & GlobalStorminess(y)) -> (Increases(x,y) & CreatesPerfectConditionsForHurricane(x)))", "score": 0}
{"id": "eqasc_validation_400", "prediction": "all x.(RapidWarming(x) -> IncreasesGlobalStorminess(x))", "score": 0}
{"id": "eqasc_validation_400", "prediction": "all x y.((RapidWarming(x) & Hurricane(y)) -> (IncreasesGlobalStorminess(x,y) & CreatesPerfectConditionsFor(x,y)))", "score": 0}
{"id": "eqasc_validation_400", "prediction": "all x y.((RapidWarming(x) & Hurricane(y)) -> (IncreasesGlobalStorminess(x) & CreatesPerfectConditionsFor(x,y)))", "score": 0}
{"id": "eqasc_validation_401", "prediction": "all x.(Hurricane(x) -> CausesGreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_401", "prediction": "all x y.((Hurricane(x) & Hurricane(y)) -> CausesGreaterChanceOfRain(x,y))", "score": 0}
{"id": "eqasc_validation_401", "prediction": "all x.(Hurricane(x) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_401", "prediction": "all x y.((Hurricane(x) & Hurricane(y)) -> GreaterChanceOfRain(x,y))", "score": 0}
{"id": "eqasc_validation_401", "prediction": "all x.(Hurricane(x) -> (CausesGreaterChanceOfRain(x) & CausesGreaterChanceOfRain(x)))", "score": 0}
{"id": "eqasc_validation_401", "prediction": "all x y.((Hurricane(x) & Rain(y)) -> CausesGreaterChanceOfRain(x,y))", "score": 0}
{"id": "eqasc_validation_401", "prediction": "all x y z.((Hurricane(x) & Rain(y) & ChanceOfRain(z)) -> CausesGreaterChanceOfRain(x,y,z))", "score": 0}
{"id": "eqasc_validation_401", "prediction": "all x.(Hurricane(x) -> (CausesGreaterChanceOfRain(x) & GreaterChanceOfRain(x)))", "score": 0}
{"id": "eqasc_validation_401", "prediction": "all x y.((Hurricane(x) & Storm(y)) -> CausesGreaterChanceOfRain(x,y))", "score": 0}
{"id": "eqasc_validation_401", "prediction": "all x y z.((Hurricane(x) & Rain(y) & ChanceOfRain(z)) -> CausesGreaterChanceOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_401", "prediction": "all x y.(Hurricane(x) -> (CausesGreaterChanceOfRain(x,y) & CausesGreaterChanceOfRain(y)))", "score": 0}
{"id": "eqasc_validation_401", "prediction": "all x y.((Hurricane(x) & CausesGreaterChanceOfRain(x,y)) -> CausesGreaterChanceOfRain(x,y))", "score": 0}
{"id": "eqasc_validation_401", "prediction": "all x y.(Hurricane(x) -> (CausesGreaterChanceOfRain(x,y) & CausesGreaterChanceOfRain(x,y)))", "score": 0}
{"id": "eqasc_validation_401", "prediction": "all x y.((Hurricane(x) & Hurricane(y)) -> CausesGreaterChanceOfRain(y,x))", "score": 0}
{"id": "eqasc_validation_401", "prediction": "all x y z.((Hurricane(x) & ChanceOfRain(y) & Rain(z)) -> CausesGreaterChanceOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_401", "prediction": "all x y z.((Hurricane(x) & Hurricane(y) & Rain(z)) -> CausesGreaterChanceOfRain(x,y,z))", "score": 0}
{"id": "eqasc_validation_402", "prediction": "all x.(Rain(x) -> (WonderfulThing(x) & HelpsPlantsGrow(x)))", "score": 0}
{"id": "eqasc_validation_402", "prediction": "all x y.((Rain(x) & Plant(y)) -> (WonderfulThing(x) & HelpsGrow(x,y)))", "score": 0}
{"id": "eqasc_validation_402", "prediction": "all x y.((Rain(x) & Plant(y)) -> HelpsGrow(x,y))", "score": 0}
{"id": "eqasc_validation_402", "prediction": "all x y z.((Rain(x) & Plant(y) & Plant(z)) -> (WonderfulThing(x) & HelpsGrow(x,y,z)))", "score": 0}
{"id": "eqasc_validation_402", "prediction": "all x y z.((Rain(x) & Plant(y) & Plant(z)) -> (WonderfulThing(x) & HelpsGrow(x,y)))", "score": 0}
{"id": "eqasc_validation_402", "prediction": "all x.(Rain(x) -> (BeautifulThing(x) & HelpsPlantsGrow(x)))", "score": 0}
{"id": "eqasc_validation_402", "prediction": "all x y.((Rain(x) & Plant(y)) -> (WonderfulThing(x,y) & HelpsGrow(x,y)))", "score": 0}
{"id": "eqasc_validation_402", "prediction": "all x y.((Rain(x) & Plant(y)) -> (WonderfulThing(x) & HelpsGrow(y)))", "score": 0}
{"id": "eqasc_validation_402", "prediction": "all x y z.((Rain(x) & Plant(y) & Plant(z)) -> (WonderfulThing(x,y) & HelpsGrow(x,z)))", "score": 0}
{"id": "eqasc_validation_402", "prediction": "all x y.((Rain(x) & Plant(y)) -> (WonderfulThing(x) & HelpsGrow(x)))", "score": 0}
{"id": "eqasc_validation_402", "prediction": "all x y z.((Rain(x) & Plant(y) & Plant(z)) -> (WonderfulThing(x) & HelpsGrow(y,z)))", "score": 0}
{"id": "eqasc_validation_402", "prediction": "all x.((Rain(x) & HelpsPlantsGrow(x)) -> WonderfulThing(x))", "score": 0}
{"id": "eqasc_validation_402", "prediction": "all x.(Rain(x) -> (WonderfulThing(x) & PlantsGrow(x)))", "score": 0}
{"id": "eqasc_validation_402", "prediction": "all x y.((Rain(x) & Plant(y)) -> (BeautifulThing(x) & HelpsGrow(x,y)))", "score": 0}
{"id": "eqasc_validation_402", "prediction": "all x y.((Rain(x) & Plant(y)) -> (Wonderful(x) & HelpsGrow(x,y)))", "score": 0}
{"id": "eqasc_validation_403", "prediction": "all x y.((StormyWeather(x) & Plant(y)) -> HelpsGrow(x,y))", "score": 0}
{"id": "eqasc_validation_403", "prediction": "all x y z.((StormyWeather(x) & Plant(y) & Plant(z)) -> HelpsGrow(x,y,z))", "score": 0}
{"id": "eqasc_validation_403", "prediction": "all x.(StormyWeather(x) -> HelpsPlantsGrow(x))", "score": 0}
{"id": "eqasc_validation_403", "prediction": "all x y z.((StormyWeather(x) & Plant(y) & Plant(z)) -> HelpsGrow(y,z))", "score": 0}
{"id": "eqasc_validation_403", "prediction": "all x y.((StormyWeather(x) & Plant(y)) -> HelpsGrow(y,x))", "score": 0}
{"id": "eqasc_validation_403", "prediction": "all x.((StormyWeather(x) & Plant(y)) -> HelpsGrow(x,y))", "score": 0}
{"id": "eqasc_validation_403", "prediction": "all x y.((StormyWeather(x) & Plant(y)) -> HelpsGrowWith(x,y))", "score": 0}
{"id": "eqasc_validation_403", "prediction": "all x y z.((StormyWeather(x) & Plant(y) & Plant(z)) -> HelpsGrow(x,y))", "score": 0}
{"id": "eqasc_validation_403", "prediction": "all x y z.((StormyWeather(x) & Plant(y) & Plant(z)) -> HelpsGrowWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_403", "prediction": "all x.((StormyWeather(x) & HelpsPlantsGrow(x)) -> HelpsPlantsGrow(x))", "score": 0}
{"id": "eqasc_validation_404", "prediction": "all x.(Rain(x) -> Precipitation(x))", "score": 17}
{"id": "eqasc_validation_404", "prediction": "all x.(Rain(x) -> (Precipitation(x) & Rain(x)))", "score": 17}
{"id": "eqasc_validation_404", "prediction": "all x y.((Rain(x) & Precipitation(y)) -> Rain(x))", "score": 0}
{"id": "eqasc_validation_404", "prediction": "(all x.(Rain(x) -> Precipitation(x)))", "score": 17}
{"id": "eqasc_validation_404", "prediction": "all x.(Rain(x) -> (Precipitation(x) | Precipitation(x)))", "score": 17}
{"id": "eqasc_validation_404", "prediction": "all x.(Rain(x) -> (Precipitation(x) | Rain(x)))", "score": 0}
{"id": "eqasc_validation_404", "prediction": "all x.(Rain(x) -> (Precipitation(x)))", "score": 17}
{"id": "eqasc_validation_404", "prediction": "all x.(Rain(x) -> (Precipitation(x) & KnownAs(x,Rain)))", "score": 17}
{"id": "eqasc_validation_404", "prediction": "all x.(Rain(x) -> (Precipitation(x) & KnownAs(x)))", "score": 17}
{"id": "eqasc_validation_404", "prediction": "all x y.((Rain(x) & Precipitation(y)) -> (KnownAs(x,y) & Rain(x)))", "score": 0}
{"id": "eqasc_validation_404", "prediction": "all x y.((Rain(x) & Precipitation(y)) -> KnownAs(x,y))", "score": 0}
{"id": "eqasc_validation_404", "prediction": "all x y.((Rain(x) & Precipitation(y)) -> Rain(x,y))", "score": 0}
{"id": "eqasc_validation_404", "prediction": "all x.(Rain(x) -> (Precipitation(x) & Precipitation(x)))", "score": 17}
{"id": "eqasc_validation_404", "prediction": "exists x.(Rain(x) & Precipitation(x))", "score": 0}
{"id": "eqasc_validation_405", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterChanceOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_405", "prediction": "all x y.((Weather(x) & Stormy(x)) -> GreaterChanceOfPrecipitation(y))", "score": 0}
{"id": "eqasc_validation_405", "prediction": "all x.(StormyWeather(x) -> GreaterChanceOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_405", "prediction": "all x.((WeatherStormy(x) & GreaterChanceOfPrecipitation(x)) -> GreaterChanceOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_405", "prediction": "all x y.((Weather(x) & Stormy(x) & GreaterChanceOfPrecipitation(y)) -> GreaterChanceOfPrecipitation(x,y))", "score": 0}
{"id": "eqasc_validation_405", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterChallengeOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_405", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterCauseOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_405", "prediction": "all x.((WeatherStormy(x) & GreaterChanceOfPrecipitation(x)) -> Stormy(x))", "score": 0}
{"id": "eqasc_validation_405", "prediction": "all x.((Weather(x) & Stormy(x)) -> greaterChanceOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_405", "prediction": "all x.((WeatherStormy(x) & GreaterChanceOfPrecipitation(x)) -> MoreChanceOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_405", "prediction": "all x y.((Weather(x) & Stormy(x) & GreaterChanceOfPrecipitation(y)) -> GreaterChanceOfPrecipitation(y))", "score": 0}
{"id": "eqasc_validation_405", "prediction": "all x y.((Weather(x) & Stormy(x) & GreaterChanceOfPrecipitation(y)) -> MoreChanceOfPrecipitation(x,y))", "score": 0}
{"id": "eqasc_validation_406", "prediction": "all x.((Unsettled(x) & StormyWeather(x) & FrequentRain(x)) -> Common(x))", "score": 0}
{"id": "eqasc_validation_406", "prediction": "all x.((UnsettledStormyWeather(x) & FrequentRain(x)) -> Common(x))", "score": 0}
{"id": "eqasc_validation_406", "prediction": "all x.((StormyWeather(x) & Unsettled(x) & FrequentRain(x)) -> Common(x))", "score": 0}
{"id": "eqasc_validation_406", "prediction": "all x.((Weather(x) & Unsettled(x) & Stormy(x) & FrequentRain(x)) -> Common(x))", "score": 0}
{"id": "eqasc_validation_406", "prediction": "all x.((Unsettled(x) & StormyWeather(x) & FrequentRain(x)) -> CommonDuringSummer(x))", "score": 0}
{"id": "eqasc_validation_406", "prediction": "all x.((Unsettled(x) & Stormy(x) & FrequentRain(x)) -> Common(x))", "score": 0}
{"id": "eqasc_validation_406", "prediction": "all x.((UnsettledStormyWeather(x) & FrequentRain(x) & Summer(x)) -> Common(x))", "score": 0}
{"id": "eqasc_validation_406", "prediction": "all x.((UnsettledStormyWeather(x) & FrequentRain(x)) -> CommonDuringSummer(x))", "score": 0}
{"id": "eqasc_validation_406", "prediction": "all x.((Unsettled(x) & StormyWeather(x) & FrequentRain(x)) -> CommonEvenDuringSummer(x))", "score": 0}
{"id": "eqasc_validation_406", "prediction": "all x.((Unsettled(x) & StormyWeather(x) & FrequentRain(x) & Summer(x)) -> Common(x))", "score": 0}
{"id": "eqasc_validation_406", "prediction": "all x.((Unsettled(x) & StormyWeather(x) & FrequentRain(x)) -> CommonInSummer(x))", "score": 0}
{"id": "eqasc_validation_406", "prediction": "all x.((UnsettledStormyWeather(x) & FrequentRain(x)) -> CommonEvenDuringSummer(x))", "score": 0}
{"id": "eqasc_validation_406", "prediction": "all x.((UnsettledWeather(x) & StormyWeather(x) & FrequentRain(x)) -> Common(x))", "score": 0}
{"id": "eqasc_validation_406", "prediction": "all x.((StormyWeather(x) & Unsettled(x) & FrequentRain(x)) -> CommonDuringSummer(x))", "score": 0}
{"id": "eqasc_validation_406", "prediction": "all x.((Weather(x) & Unsettled(x) & Stormy(x) & FrequentRain(x)) -> CommonDuringSummer(x))", "score": 0}
{"id": "eqasc_validation_406", "prediction": "all x.((UnsettledStormyWeather(x) & FrequentRain(x)) -> CommonInSummer(x))", "score": 0}
{"id": "eqasc_validation_407", "prediction": "all x.(Summer(x) -> BringsStorms(x))", "score": 0}
{"id": "eqasc_validation_407", "prediction": "all x y.((Summer(x) & Storm(y)) -> Brings(x,y))", "score": 0}
{"id": "eqasc_validation_407", "prediction": "all x.((Summer(x) & BringsStorms(x)) -> BringsStorms(x))", "score": 0}
{"id": "eqasc_validation_407", "prediction": "all x.(Summer(x) -> (BringsStorms(x) & BringsStorms(x)))", "score": 0}
{"id": "eqasc_validation_407", "prediction": "all x y z.((Summer(x) & Storm(y) & Storm(z)) -> Brings(x,y,z))", "score": 0}
{"id": "eqasc_validation_407", "prediction": "all x y z.((Summer(x) & Storm(y) & Summer(z)) -> Brings(x,y,z))", "score": 0}
{"id": "eqasc_validation_407", "prediction": "all x y.((Summer(x) & Summer(y)) -> BringsStorms(x,y))", "score": 0}
{"id": "eqasc_validation_407", "prediction": "all x y z.((Summer(x) & Storm(y) & Winter(z)) -> Brings(x,y,z))", "score": 0}
{"id": "eqasc_validation_407", "prediction": "all x y.((Summer(x) & Storms(y)) -> Brings(x,y))", "score": 0}
{"id": "eqasc_validation_407", "prediction": "all x y z.((Summer(x) & Storm(y) & Weather(z)) -> Brings(x,y,z))", "score": 0}
{"id": "eqasc_validation_407", "prediction": "all x y z.((Summer(x) & Storm(y) & Storm(z)) -> Brings(x,y))", "score": 0}
{"id": "eqasc_validation_407", "prediction": "all x y z.((Summer(x) & Storm(y) & Season(z)) -> Brings(x,y,z))", "score": 0}
{"id": "eqasc_validation_407", "prediction": "all x.(Summer(x) -> (BringsStorms(x) | BringsStorms(x)))", "score": 0}
{"id": "eqasc_validation_407", "prediction": "all x y.((Summer(x) & Storm(y) & Brings(x,y)) -> Brings(x,y))", "score": 0}
{"id": "eqasc_validation_407", "prediction": "all x y z.((Summer(x) & Storm(y) & Spring(z)) -> Brings(x,y,z))", "score": 0}
{"id": "eqasc_validation_407", "prediction": "all x y z.((Summer(x) & Storm(y) & Summer(z)) -> Brings(x,y))", "score": 0}
{"id": "eqasc_validation_408", "prediction": "all x y.((Weather(x) & MomentInTime(y)) -> StateOfAtmosphere(x,y))", "score": 0}
{"id": "eqasc_validation_408", "prediction": "all x y z.((Weather(x) & MomentInTime(y) & MomentInTime(z)) -> StateOfAtmosphere(x,y,z))", "score": 0}
{"id": "eqasc_validation_408", "prediction": "all x.(Weather(x) -> StateOfAtmosphere(x))", "score": 0}
{"id": "eqasc_validation_408", "prediction": "all x.(Weather(x) -> AtmosphereState(x))", "score": 0}
{"id": "eqasc_validation_408", "prediction": "all x y.((Weather(x) & MomentInTime(y)) -> AtmosphereState(x,y))", "score": 0}
{"id": "eqasc_validation_408", "prediction": "all x y.((Weather(x) & Moment(y)) -> StateOfAtmosphere(x,y))", "score": 0}
{"id": "eqasc_validation_408", "prediction": "all x y z.((Weather(x) & MomentInTime(y) & MomentInTime(z)) -> AtmosphereState(x,y,z))", "score": 0}
{"id": "eqasc_validation_408", "prediction": "all x y.((Weather(x) & MomentInTime(y)) -> StateOfAtmosphereAt(x,y))", "score": 0}
{"id": "eqasc_validation_408", "prediction": "all x.(Weather(x) -> (StateOfAtmosphere(x) & ParticularMomentInTime(x)))", "score": 0}
{"id": "eqasc_validation_408", "prediction": "all x.(Weather(x) -> exists y.(MomentInTime(y) & StateOfAtmosphere(x,y)))", "score": 0}
{"id": "eqasc_validation_408", "prediction": "all x y.((Weather(x) & MomentInTime(y)) -> StatusOfAtmosphere(x,y))", "score": 0}
{"id": "eqasc_validation_408", "prediction": "all x.(Weather(x) -> exists y.(MomentInTime(y) & Atmosphere(x,y))))", "score": -1}
{"id": "eqasc_validation_408", "prediction": "all x y z.((Weather(x) & MomentInTime(y) & MomentInTime(z)) -> StateOfAtmosphereAt(x,y,z))", "score": 0}
{"id": "eqasc_validation_408", "prediction": "all x.(Weather(x) -> exists y.(MomentInTime(y) & Atmosphere(x,y)))", "score": 0}
{"id": "eqasc_validation_408", "prediction": "all x y z.((Weather(x) & MomentInTime(y) & MomentInTime(z)) -> StateOfAtmosphere(x,y))", "score": 0}
{"id": "eqasc_validation_408", "prediction": "all x y z.((Weather(x) & MomentInTime(y) & MomentInTime(z)) -> Atmosphere(x,y,z))", "score": 0}
{"id": "eqasc_validation_409", "prediction": "all x.((StatusOfAtmosphere(x) & Stormy(x)) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_409", "prediction": "all x.(StormyAtmosphere(x) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_409", "prediction": "all x.((Status(x) & Stormy(x)) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_409", "prediction": "all x.((StatusOfAtmosphereStormy(x) & GreaterChanceOfRain(x)) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_409", "prediction": "all x.((StayOfAtmosphere(x) & Stormy(x)) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_409", "prediction": "all x.((StatusOfAtmosphereStormy(x)) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_409", "prediction": "all x.((StormyAtmosphere(x) & GreaterChanceOfRain(x)) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_409", "prediction": "all x.((StormyAtmosphere(x) & GreaterChanceOfRain(x)) -> StormyAtmosphere(x))", "score": 0}
{"id": "eqasc_validation_409", "prediction": "all x.((StatusStormy(x) & Stormy(x)) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_409", "prediction": "all x y.((StatusOfAtmosphere(x) & Stormy(x)) -> GreaterChanceOfRain(y))", "score": 0}
{"id": "eqasc_validation_409", "prediction": "all x.((AtmosphereStatus(x) & Stormy(x)) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_409", "prediction": "all x.((StatusOfAtmosphereStormy(x) & GreaterChanceOfRain(x)) -> Stormy(x))", "score": 0}
{"id": "eqasc_validation_410", "prediction": "all x.(Rain(x) -> Precipitation(x))", "score": 0}
{"id": "eqasc_validation_410", "prediction": "all x.(Rain(x) -> NormalPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_410", "prediction": "all x y.((Rain(x) & Precipitation(y)) -> UsualForm(x,y))", "score": 0}
{"id": "eqasc_validation_410", "prediction": "all x y.((Rain(x) & Precipitation(y)) -> NormalForm(x,y))", "score": 0}
{"id": "eqasc_validation_410", "prediction": "all x y.((Rain(x) & Precipitation(y)) -> Usual(x,y))", "score": 0}
{"id": "eqasc_validation_410", "prediction": "all x.(Rain(x) -> UsuallyPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_410", "prediction": "all x.(Rain(x) -> UsualPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_410", "prediction": "all x.(Rain(x) -> PrecipitationForm(x))", "score": 0}
{"id": "eqasc_validation_410", "prediction": "all x y.((Rain(x) & Precipitation(y)) -> UsuallyForm(x,y))", "score": 0}
{"id": "eqasc_validation_410", "prediction": "All x.(Rain(x) -> Precipitation(x))", "score": -1}
{"id": "eqasc_validation_410", "prediction": "all x y.((Rain(x) & Precipitation(y)) -> Precipitation(x,y))", "score": 0}
{"id": "eqasc_validation_410", "prediction": "all x.(Rain(x) -> StandardPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_410", "prediction": "all x y.((Rain(x) & Precipitation(y)) -> Normal(x,y))", "score": 0}
{"id": "eqasc_validation_410", "prediction": "all x y.((Rain(x) & Precipitation(y)) -> StandardForm(x,y))", "score": 0}
{"id": "eqasc_validation_410", "prediction": "(All x.(Rain(x) -> Precipitation(x)))", "score": -1}
{"id": "eqasc_validation_411", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterChanceOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_411", "prediction": "all x.(StormyWeather(x) -> GreaterChanceOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_411", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterCauseOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_411", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterChallengeOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_411", "prediction": "all x.(Stormy(x) -> GreaterChanceOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_411", "prediction": "all x.(StormyWeather(x) -> GreaterCauseOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_411", "prediction": "all x y.((Weather(x) & Stormy(x)) -> GreaterChanceOfPrecipitation(y))", "score": 0}
{"id": "eqasc_validation_411", "prediction": "all x.((WeatherStormy(x) & GreaterChanceOfPrecipitation(x)) -> Stormy(x))", "score": 0}
{"id": "eqasc_validation_411", "prediction": "all x.(StormyWeather(x) -> GreaterChallengeOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_411", "prediction": "all x.((Weather(x) & Storn(x)) -> GreaterChanceOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_411", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterCautionOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_412", "prediction": "all x y.((HeavyRain(x) & Plant(y)) -> AbsorbsLargeAmountOfWater(x,y))", "score": 0}
{"id": "eqasc_validation_412", "prediction": "all x y.((HeavyRain(x) & Plant(y)) -> CanAbsorbLargeAmountOfWater(x,y))", "score": 0}
{"id": "eqasc_validation_412", "prediction": "all x y.((HeavyRain(x) & Plant(y)) -> AbsorbLargeAmountOfWater(x,y))", "score": 0}
{"id": "eqasc_validation_412", "prediction": "all x.(HeavyRain(x) -> AbsorbsLargeAmountOfWater(x))", "score": 0}
{"id": "eqasc_validation_412", "prediction": "all x y z.((HeavyRain(x) & Plant(y) & Water(z)) -> AbsorbsLargeAmount(x,y,z))", "score": 0}
{"id": "eqasc_validation_412", "prediction": "all x y.((HeavyRain(x) & Plant(y)) -> (AbsorbsLargeAmountOfWater(x,y)))", "score": 0}
{"id": "eqasc_validation_412", "prediction": "all x y z.((HeavyRain(x) & HeavyRain(y) & Plant(z)) -> AbsorbsLargeAmountOfWater(x,z))", "score": 0}
{"id": "eqasc_validation_412", "prediction": "all x y.((HeavyRain(x) & Plant(y) & AbsorbsLargeAmountOfWater(x,y)) -> AbsorbsLargeAmountOfWater(x,y))", "score": 0}
{"id": "eqasc_validation_412", "prediction": "all x y z.((HeavyRain(x) & HeavyRain(y) & Plant(z)) -> AbsorbsLargeAmountOfWater(x,y,z))", "score": 0}
{"id": "eqasc_validation_412", "prediction": "all x y.((HeavyRain(x) & Plant(y)) -> AbsorbsLargeAmountOfWater(y,x))", "score": 0}
{"id": "eqasc_validation_412", "prediction": "all x y.((HeavyRain(x) & Plant(y) & AbsorbsLargeAmountOfWater(x,y)) -> CanAbsorbLargeAmountOfWater(x,y))", "score": 0}
{"id": "eqasc_validation_412", "prediction": "all x y.((HasHeavyRain(x) & Plant(y)) -> AbsorbsLargeAmountOfWater(x,y))", "score": 0}
{"id": "eqasc_validation_412", "prediction": "all x y.((HeavyRain(x) & Plant(y) & AbsorbLargeAmountOfWater(x,y)) -> CanAbsorbLargeAmountOfWater(x,y))", "score": 0}
{"id": "eqasc_validation_412", "prediction": "all x y.((HardRain(x) & Plant(y)) -> AbsorbsLargeAmountOfWater(x,y))", "score": 0}
{"id": "eqasc_validation_412", "prediction": "all x.((HeavyRain(x) & AbsorbsLargeAmountOfWater(x)) -> Plant(x))", "score": 0}
{"id": "eqasc_validation_412", "prediction": "all x y z.((HeavyRain(x) & Water(y) & Plant(z)) -> AbsorbsLargeAmountOfWater(x,y,z))", "score": 0}
{"id": "eqasc_validation_413", "prediction": "all x.((Weather(x) & Stormy(x)) -> PlantsAbsorbWater(x))", "score": 0}
{"id": "eqasc_validation_413", "prediction": "all x y.((Weather(x) & Stormy(x)) -> PlantsAbsorbWater(y))", "score": 0}
{"id": "eqasc_validation_413", "prediction": "all x.((Weather(x) & Stormy(x)) -> AbsorbsWater(x))", "score": 0}
{"id": "eqasc_validation_413", "prediction": "all x y z.((Weather(x) & Stormy(x) & Plant(y) & Water(z)) -> Absorbs(y,z))", "score": 0}
{"id": "eqasc_validation_413", "prediction": "all x y.((Weather(x) & Stormy(x)) -> AbsorbsWater(y))", "score": 0}
{"id": "eqasc_validation_413", "prediction": "all x.((WeatherStormy(x) & PlantsAbsorbWater(x)) -> AbsorbWater(x))", "score": 0}
{"id": "eqasc_validation_413", "prediction": "all x.(StormyWeather(x) -> PlantsAbsorbWater(x))", "score": 0}
{"id": "eqasc_validation_413", "prediction": "all x y z.((Weather(x) & Stormy(x) & Plant(y) & Water(z)) -> AbsorbsWater(y,z))", "score": 0}
{"id": "eqasc_validation_413", "prediction": "all x.((WeatherStormy(x) & PlantsAbsorbWater(x)) -> AbsorbsWater(x))", "score": 0}
{"id": "eqasc_validation_413", "prediction": "all x y z.((Weather(x) & Stormy(x) & Plants(y) & Water(z)) -> Absorbs(y,z))", "score": 0}
{"id": "eqasc_validation_413", "prediction": "all x y.((Weather(x) & Stormy(x) & Plant(y)) -> AbsorbsWater(y,x))", "score": 0}
{"id": "eqasc_validation_413", "prediction": "all x.((WeatherStormy(x) & PlantsAbsorbWater(x)) -> PlantsAbsorbWater(x))", "score": 0}
{"id": "eqasc_validation_413", "prediction": "all x y.((Weather(x) & Stormy(x) & Plants(y)) -> AbsorbsWater(y))", "score": 0}
{"id": "eqasc_validation_413", "prediction": "all x y.((Weather(x) & Stormy(x)) -> PlantsAbsorbWater(x,y))", "score": 0}
{"id": "eqasc_validation_413", "prediction": "all x y.((StormyWeather(x) & Plant(y)) -> AbsorbsWater(y,x))", "score": 0}
{"id": "eqasc_validation_413", "prediction": "all x.(StormyWeather(x) -> AbsorbsWater(x))", "score": 0}
{"id": "eqasc_validation_414", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterChanceOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_414", "prediction": "all x.(StormyWeather(x) -> GreaterChanceOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_414", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterCauseOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_414", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterChallengeOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_414", "prediction": "all x y.((Weather(x) & Stormy(x)) -> GreaterChanceOfPrecipitation(y))", "score": 0}
{"id": "eqasc_validation_414", "prediction": "all x.((WeatherStormy(x) & GreaterChanceOfPrecipitation(x)) -> Stormy(x))", "score": 0}
{"id": "eqasc_validation_414", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterCautionOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_414", "prediction": "all x.(StormyWeather(x) -> GreaterCauseOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_414", "prediction": "all x.(Stormy(x) -> GreaterChanceOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_414", "prediction": "all x.(StormyWeather(x) -> GreaterChallengeOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_414", "prediction": "all x.((Weather(x) & Stormy(x)) -> greaterChanceOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_414", "prediction": "all x.((Weather(x) & Storn(x)) -> GreaterChanceOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_414", "prediction": "exists x.(StormyWeather(x) & GreaterChanceOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_415", "prediction": "(all x.(Rain(x) -> Good(x)) & all y.(Rain(y) -> DestructiveFlooding(y))))", "score": -1}
{"id": "eqasc_validation_415", "prediction": "(all x.(Rain(x) -> Good(x)) & all y.(Rain(y) -> DestructiveFlooding(y)))", "score": 0}
{"id": "eqasc_validation_415", "prediction": "(all x.(Rain(x) -> Good(x)) & (LotsOfRain(x) -> DestructiveFlooding(x)))", "score": 0}
{"id": "eqasc_validation_415", "prediction": "all x.(Rain(x) -> (Good(x) & LotsOfRain(x) & CausesDestructiveFlooding(x)))", "score": 0}
{"id": "eqasc_validation_415", "prediction": "(all x.(Rain(x) -> Good(x)) & lotsOfRain(x) -> DestructiveFlooding(x)))", "score": -1}
{"id": "eqasc_validation_415", "prediction": "all x.(Rain(x) -> Good(x)) & (LotsOfRain(x) -> DestructiveFlooding(x)))", "score": -1}
{"id": "eqasc_validation_415", "prediction": "all x y.((Rain(x) & Rain(y)) -> (Good(x) & CausesDestructiveFlooding(y)))", "score": 0}
{"id": "eqasc_validation_415", "prediction": "(all x.(Rain(x) -> Good(x)) & all y.(Rain(y) -> CausesDestructiveFlooding(y)))", "score": 0}
{"id": "eqasc_validation_415", "prediction": "all x y.((Rain(x) & Rain(y)) -> (Good(x) & DestructiveFlooding(y)))", "score": 0}
{"id": "eqasc_validation_415", "prediction": "exists x.(Rain(x) & Good(x) & LotsOfRain(x) & CausesDestructiveFlooding(x))", "score": 0}
{"id": "eqasc_validation_415", "prediction": "all x.(Rain(x) -> (Good(x) & LotsOfRain(x) & DestructiveFlooding(x)))", "score": 0}
{"id": "eqasc_validation_415", "prediction": "(all x.(Rain(x) -> Good(x)) & all y.(Rain(y) -> CausesDestructiveFlooding(y))))", "score": -1}
{"id": "eqasc_validation_415", "prediction": "(all x.(Rain(x) -> Good(x)) & (Rain(x) -> DestructiveFlooding(x)))", "score": 0}
{"id": "eqasc_validation_415", "prediction": "(all x.(Rain(x) -> Good(x)) & exists y.(Rain(y) & CausesDestructiveFlooding(y))))", "score": -1}
{"id": "eqasc_validation_415", "prediction": "(all x.(Rain(x) -> Good(x)) & all y.(Rain(y) -> Destructive(y))))", "score": -1}
{"id": "eqasc_validation_416", "prediction": "all x.(StormyWeather(x) -> IncreasesChancesOfFlooding(x))", "score": 0}
{"id": "eqasc_validation_416", "prediction": "all x y.((StormyWeather(x) & FloodingChance(y)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_validation_416", "prediction": "all x.((StormyWeather(x) & IncreasesChancesOfFlooding(x)) -> IncreasesChancesOfFlooding(x))", "score": 0}
{"id": "eqasc_validation_416", "prediction": "all x y.((StormyWeather(x) & Flooding(y)) -> IncreasesChances(x,y))", "score": 0}
{"id": "eqasc_validation_416", "prediction": "all x y.((StormyWeather(x) & Flooding(y)) -> IncreasesChancesOf(x,y))", "score": 0}
{"id": "eqasc_validation_416", "prediction": "all x y.((StormyWeather(x) & FloodingChance(y)) -> IncreasesChances(x,y))", "score": 0}
{"id": "eqasc_validation_416", "prediction": "all x y.((StormyWeather(x) & FloodingChances(y)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_validation_416", "prediction": "all x y z.((StormyWeather(x) & FloodingChance(y) & StormyWeather(z)) -> IncreasesChance(x,y,z))", "score": 0}
{"id": "eqasc_validation_416", "prediction": "all x y.((StormyWeather(x) & FloodingChance(y)) -> IncreasesChance(x,y))", "score": 0}
{"id": "eqasc_validation_416", "prediction": "all x y z.((StormyWeather(x) & FloodingChance(y) & StormyWeather(z)) -> IncreasesChances(x,y,z))", "score": 0}
{"id": "eqasc_validation_416", "prediction": "all x y z.((StormyWeather(x) & FloodingChance(y) & FloodingChance(z)) -> Increases(x,y,z))", "score": 0}
{"id": "eqasc_validation_416", "prediction": "all x y z.((StormyWeather(x) & Flooding(y) & Chance(z)) -> Increases(x,y,z))", "score": 0}
{"id": "eqasc_validation_417", "prediction": "all x.(Erosion(x) -> (LossOfSoil(x) & CausedByRain(x) & CausedByWind(x)))", "score": 0}
{"id": "eqasc_validation_417", "prediction": "all x.(Erosion(x) -> (LossOfSoil(x) & CausedByRainAndWind(x)))", "score": 0}
{"id": "eqasc_validation_417", "prediction": "all x y.((Erosion(x) & Soil(y)) -> (LossOf(x,y) & CausedByRain(x) & CausedByWind(x)))", "score": 0}
{"id": "eqasc_validation_417", "prediction": "all x y.((Erosion(x) & Soil(y)) -> (LossOf(x,y) & CausedBy(x,Rain) & CausedBy(x,Wind)))", "score": 0}
{"id": "eqasc_validation_417", "prediction": "all x y.((Erosion(x) & Rain(y) & Wind(y)) -> LossOfSoil(x,y))", "score": 0}
{"id": "eqasc_validation_417", "prediction": "all x y z.((Erosion(x) & Rain(y) & Wind(z)) -> (LossOfSoil(x,y) & CausedBy(x,z)))", "score": 0}
{"id": "eqasc_validation_417", "prediction": "all x.(Erosion(x) -> (LossOfSoil(x) & CausedBy(x,Rain) & CausedBy(x,Wind)))", "score": 0}
{"id": "eqasc_validation_417", "prediction": "all x y.((Erosion(x) & Soil(y)) -> (LossOfSoil(x,y) & CausedByRain(x) & CausedByWind(x)))", "score": 0}
{"id": "eqasc_validation_417", "prediction": "all x y.((Erosion(x) & Soil(y)) -> (LossOf(x,y) & CausedByRainAndWind(x)))", "score": 0}
{"id": "eqasc_validation_417", "prediction": "all x.(Erosion(x) -> (LessOfSoil(x) & CausedByRain(x) & CausedByWind(x)))", "score": 0}
{"id": "eqasc_validation_417", "prediction": "all x y.((Erosion(x) & (Rain(y) | Wind(y))) -> LossOfSoil(x,y))", "score": 0}
{"id": "eqasc_validation_417", "prediction": "all x.(Erosion(x) -> (LossOfSoil(x,Rain) & LossOfSoil(x,Wind)))", "score": 0}
{"id": "eqasc_validation_417", "prediction": "all x y.((Erosion(x) & Soil(y)) -> (LossOf(x,y) & CausedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_417", "prediction": "all x y z.((Erosion(x) & Rain(y) & Wind(z)) -> LossOfSoil(x,y,z))", "score": 0}
{"id": "eqasc_validation_418", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterChanceOfErosion(x))", "score": 0}
{"id": "eqasc_validation_418", "prediction": "all x.((WeatherStormy(x) & GreaterChanceOfErosion(x)) -> Stormy(x))", "score": 0}
{"id": "eqasc_validation_418", "prediction": "all x.(StormyWeather(x) -> GreaterChanceOfErosion(x))", "score": 0}
{"id": "eqasc_validation_418", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterCauseOfErosion(x))", "score": 0}
{"id": "eqasc_validation_418", "prediction": "all x y.((Weather(x) & Stormy(x)) -> GreaterChanceOfErosion(y))", "score": 0}
{"id": "eqasc_validation_418", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterChallengeOfErosion(x))", "score": 0}
{"id": "eqasc_validation_418", "prediction": "all x.((Stormy(x) & Weather(x)) -> GreaterChanceOfErosion(x))", "score": 0}
{"id": "eqasc_validation_418", "prediction": "all x.(Stormy(x) -> GreaterChanceOfErosion(x))", "score": 0}
{"id": "eqasc_validation_418", "prediction": "all x.((StormyWeather(x) & GreaterChanceOfErosion(x)) -> StormyWeather(x))", "score": 0}
{"id": "eqasc_validation_418", "prediction": "all x.((WeatherStormy(x) & GreaterChanceOfErosion(x)) -> WeatherStormy(x))", "score": 0}
{"id": "eqasc_validation_418", "prediction": "all x.(StormyWeather(x) -> GreaterCauseOfErosion(x))", "score": 0}
{"id": "eqasc_validation_418", "prediction": "exists x.(StormyWeather(x) & GreaterChanceOfErosion(x))", "score": 0}
{"id": "eqasc_validation_419", "prediction": "all x.(Rain(x) -> (ReducesVisibility(x) & MakesPacewayDangerous(x)))", "score": 0}
{"id": "eqasc_validation_419", "prediction": "all x.(Rain(x) -> (ReducesVisibility(x) & MakesPavementDangerous(x)))", "score": 0}
{"id": "eqasc_validation_419", "prediction": "all x y.((Rain(x) & Pavement(y)) -> (ReducesVisibility(x,y) & MakesDangerous(x,y)))", "score": 0}
{"id": "eqasc_validation_419", "prediction": "all x.(Rain(x) -> (ReducesVisibility(x) & MakesPacementDangerous(x)))", "score": 0}
{"id": "eqasc_validation_419", "prediction": "all x y.((Rain(x) & Pavement(y)) -> (ReducesVisibility(x) & MakesDangerous(x,y)))", "score": 0}
{"id": "eqasc_validation_419", "prediction": "all x y.((Rain(x) & Pavement(y)) -> (ReducesVisibility(x) & MakesDangerous(x)))", "score": 0}
{"id": "eqasc_validation_419", "prediction": "all x y z.((Rain(x) & Rain(y) & Pavement(z)) -> (ReducesVisibility(x,y) & MakesDangerous(x,z)))", "score": 0}
{"id": "eqasc_validation_419", "prediction": "all x y z.((Rain(x) & Rain(y) & Pavement(z)) -> (ReducesVisibility(x,y) & MakesDangerous(y,z)))", "score": 0}
{"id": "eqasc_validation_419", "prediction": "all x.(Rain(x) -> (ReducesVisibility(x) & MakesPavityDangerous(x)))", "score": 0}
{"id": "eqasc_validation_419", "prediction": "all x.(Rain(x) -> (ReducesVisibility(x) & MakesPatmentDangerous(x)))", "score": 0}
{"id": "eqasc_validation_419", "prediction": "all x.(Rain(x) -> (ReducesVisibility(x) & MakesPaceworkDangerous(x)))", "score": 0}
{"id": "eqasc_validation_419", "prediction": "all x y z.((Rain(x) & Rain(y) & Pavement(z)) -> (ReducesVisibility(y) & MakesDangerous(z)))", "score": 0}
{"id": "eqasc_validation_419", "prediction": "all x.(Rain(x) -> (ReducesVisibility(x) & MakesPathwayDangerous(x)))", "score": 0}
{"id": "eqasc_validation_419", "prediction": "all x y.((Rain(x) & Pavement(y)) -> (ReducesVisibility(x) & MakesDangerous(y)))", "score": 0}
{"id": "eqasc_validation_419", "prediction": "all x.(Rain(x) -> (ReducesVisibility(x) & MakesPatternDangerous(x)))", "score": 0}
{"id": "eqasc_validation_419", "prediction": "all x.(Rain(x) -> (ReducesVisibility(x) & MakesPatioceanDangerous(x)))", "score": 0}
{"id": "eqasc_validation_420", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterChanceOfReducedVisibility(x))", "score": 0}
{"id": "eqasc_validation_420", "prediction": "all x y.((Weather(x) & Stormy(x)) -> GreaterChanceOfReducedVisibility(y))", "score": 0}
{"id": "eqasc_validation_420", "prediction": "all x.(StormyWeather(x) -> GreaterChanceOfReducedVisibility(x))", "score": 0}
{"id": "eqasc_validation_420", "prediction": "all x.((WeatherStormy(x) & GreaterChanceOfReducedVisibility(x)) -> Stormy(x))", "score": 0}
{"id": "eqasc_validation_420", "prediction": "all x.(Stormy(x) -> GreaterChanceOfReducedVisibility(x))", "score": 0}
{"id": "eqasc_validation_420", "prediction": "all x y.((Weather(x) & Stormy(x) & GreaterChanceOfReducedVisibility(y)) -> GreaterChanceOfReducedVisibility(x,y))", "score": 0}
{"id": "eqasc_validation_420", "prediction": "all x.((WeatherStormy(x) & GreaterChanceOfReducedVisibility(x)) -> GreaterChanceOfStormy(x))", "score": 0}
{"id": "eqasc_validation_420", "prediction": "all x.((WeatherStormy(x) & GreaterChanceOfReducedVisibility(x)) -> GreaterChanceOfReducedVisibility(x))", "score": 0}
{"id": "eqasc_validation_420", "prediction": "all x y.((Weather(x) & Stormy(x)) -> GreaterChanceOfReducedVisibility(x,y))", "score": 0}
{"id": "eqasc_validation_420", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterChallengeOfReducedVisibility(x))", "score": 0}
{"id": "eqasc_validation_420", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterCauseOfReducedVisibility(x))", "score": 0}
{"id": "eqasc_validation_420", "prediction": "all x y.((Weather(x) & Stormy(x) & GreaterChanceOfReducedVisibility(y)) -> GreaterChanceOfReducedVisibility(y))", "score": 0}
{"id": "eqasc_validation_420", "prediction": "all x.((Weather(x) & Stormy(x)) -> greaterChanceOfReducedVisibility(x))", "score": 0}
{"id": "eqasc_validation_421", "prediction": "all x y.((Protozoa(x) & HumanParasite(y)) -> MakesHumansSick(x,y))", "score": 0}
{"id": "eqasc_validation_421", "prediction": "all x.((Protozoa(x) & HumanParasite(x)) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_421", "prediction": "all x y.((Protozoa(x) & HumanParasite(y)) -> MakesSick(x,y))", "score": 0}
{"id": "eqasc_validation_421", "prediction": "all x y.((Protozoa(x) & HumanParasite(y)) -> MakesHumanSick(x,y))", "score": 0}
{"id": "eqasc_validation_421", "prediction": "all x.((Protozoa(x) & HumanParasite(x)) -> MakesHumanSick(x))", "score": 0}
{"id": "eqasc_validation_421", "prediction": "all x.((Protozoa(x) & HumanParasite(y)) -> MakesHumansSick(x,y))", "score": 0}
{"id": "eqasc_validation_421", "prediction": "all x y z.((Protozoa(x) & HumanParasite(y) & Parasite(z)) -> MakesSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_421", "prediction": "all x y z.((Protozoa(x) & HumanParasite(y) & Human(z)) -> MakesSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_421", "prediction": "all x y z.((Protozoa(x) & HumanParasite(y) & Parasite(z)) -> MakesHumansSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_421", "prediction": "all x y.((Protozoa(x) & HumanParasite(y)) -> MakesHabitatSick(x,y))", "score": 0}
{"id": "eqasc_validation_421", "prediction": "all x.(Protozoa(x) -> (MakesHumansSick(x) & HumanParasite(x)))", "score": 0}
{"id": "eqasc_validation_421", "prediction": "all x y.((Protozoa(x) & HumanParasite(y)) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_421", "prediction": "all x.((Protozoa(x) & HumanParasite(x)) -> MakesSick(x))", "score": 0}
{"id": "eqasc_validation_421", "prediction": "all x y z.((Protozoa(x) & HumanParasite(y) & Parasite(z)) -> MakesHumanSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_421", "prediction": "all x y z.((Protozoa(x) & Human(y) & Parasite(z)) -> MakesSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_421", "prediction": "all x y z.((Protozoa(x) & HumanParasite(y) & Human(z)) -> MakesHumansSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_422", "prediction": "all x.((IntestinalParasite(x) & Malaria(x)) -> Endémic(x))", "score": 0}
{"id": "eqasc_validation_422", "prediction": "all x.((IntestinalParasite(x) & Malaria(x)) -> Endemic(x))", "score": 0}
{"id": "eqasc_validation_422", "prediction": "all x.((IntestinalParasite(x) & Malaria(x)) -> Endemisic(x))", "score": 0}
{"id": "eqasc_validation_422", "prediction": "all x.((IntestinalParasite(x) & Malaria(x)) -> Endangemic(x))", "score": 0}
{"id": "eqasc_validation_422", "prediction": "all x.((IntestinalParasite(x) & Malaria(x)) -> Endemical(x))", "score": 0}
{"id": "eqasc_validation_422", "prediction": "all x.((IntestinalParasite(x) & Malaria(x)) -> Endemistic(x))", "score": 0}
{"id": "eqasc_validation_422", "prediction": "all x.((IntestinalParasite(x) | Malaria(x)) -> Endémic(x))", "score": 0}
{"id": "eqasc_validation_422", "prediction": "all x.((IntestinalParasite(x) | Malaria(x)) -> Endemic(x))", "score": 0}
{"id": "eqasc_validation_422", "prediction": "all x y.((IntestinalParasite(x) & Malaria(y)) -> Endémic(x))", "score": 0}
{"id": "eqasc_validation_422", "prediction": "all x y.((IntestinalParasite(x) & Malaria(y)) -> Endemic(x))", "score": 0}
{"id": "eqasc_validation_422", "prediction": "all x y.((IntestinalParasite(x) & Malaria(y)) -> Endemisic(x))", "score": 0}
{"id": "eqasc_validation_422", "prediction": "all x y.((IntestinalParasite(x) & Malaria(y)) -> Endémic(x,y))", "score": 0}
{"id": "eqasc_validation_423", "prediction": "all x y.((IntestinalProtozoa(x) & Human(y)) -> MakesSick(x,y))", "score": 0}
{"id": "eqasc_validation_423", "prediction": "all x.(IntestinalProtozoa(x) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_423", "prediction": "all x y z.((IntestinalProtozoa(x) & Human(y) & IntestinalProtozoa(z)) -> MakesSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_423", "prediction": "all x y z.((IntestinalProtozoa(x) & Human(y) & IntestinalProtozoa(z)) -> MakesSick(x,y))", "score": 0}
{"id": "eqasc_validation_423", "prediction": "all x y z.((IntestinalProtozoa(x) & Human(y) & Human(z)) -> MakesSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_423", "prediction": "all x y.((IntestinalProtozoa(x) & Human(y)) -> MakeSick(x,y))", "score": 0}
{"id": "eqasc_validation_423", "prediction": "all x y.((IndividualProtozoa(x) & Human(y)) -> MakesSick(x,y))", "score": 0}
{"id": "eqasc_validation_423", "prediction": "all x y z.((IntestinalProtozoa(x) & Human(y) & IntestinalProtozoa(z)) -> MakesSick(z))", "score": 0}
{"id": "eqasc_validation_423", "prediction": "all x y z.((IndividualProtozoa(x) & Human(y) & IntestinalProtozoa(z)) -> MakesSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_423", "prediction": "all x y z.((IntestinalProtozoa(x) & Human(y) & IntestinalProtozoa(z)) -> MakeSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_423", "prediction": "all x y z.((IntestinalProtozoa(x) & Human(y) & IntestinalProtozoa(z) & MakesSick(x,y)) -> MakesSick(x,z))", "score": 0}
{"id": "eqasc_validation_423", "prediction": "all x.(IntestinalProtozoa(x) -> MakeHumansSick(x))", "score": 0}
{"id": "eqasc_validation_423", "prediction": "all x y z.((IntestinalProtozoa(x) & Human(y) & IntestinalProtozoa(z)) -> MakesSick(y,z))", "score": 0}
{"id": "eqasc_validation_423", "prediction": "all x y z.((IntestinalProtozoa(x) & Human(y) & Human(z)) -> MakesSick(x,y))", "score": 0}
{"id": "eqasc_validation_423", "prediction": "all x y z.((IntestinalProtozoa(x) & Human(y) & IntestinalProtozoa(z) & MakesSick(z)) -> MakesSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_423", "prediction": "all x y.((IntestinalProtozoa(x) & Human(y) & MakesSick(x,y)) -> IntestinalProtozoa(x))", "score": 0}
{"id": "eqasc_validation_424", "prediction": "all x.(IllnessCausingParasite(x) -> (Protozoa(x) & Cyclospora(x) & Toxoplasmagondii(x)))", "score": 0}
{"id": "eqasc_validation_424", "prediction": "all x.(IllnessCausingParasite(x) -> (Protozoa(x) & Cyclospora(x) & ToxoplasmaGondii(x)))", "score": 0}
{"id": "eqasc_validation_424", "prediction": "all x.(IllnessCausingParasite(x) -> (ProtozoaCyclospora(x) | ToxoplasmaGondii(x)))", "score": 0}
{"id": "eqasc_validation_424", "prediction": "(all x.(IllnessCausingParasite(x) -> Cyclospora(x)) & all y.(ToxoplasmaGondii(y) -> ToxoplasmaGondii(y)))", "score": 0}
{"id": "eqasc_validation_424", "prediction": "all x.(IllnessCausingParasite(x) -> (Cyclospora(x) | ToxoplasmaGondii(x)))", "score": 0}
{"id": "eqasc_validation_424", "prediction": "all x.((Protozoa(x) & Cyclospora(x) & Toxoplasmagondii(x)) -> IllnessCausingParasite(x))", "score": 0}
{"id": "eqasc_validation_424", "prediction": "all x.(IllnessCausingParasite(x) -> (Protozoa(x) & Cyclospora(x) & Toxoplasma(x)))", "score": 0}
{"id": "eqasc_validation_424", "prediction": "all x y.((Protozoa(x) & Cyclospora(y) & Toxoplasmagondii(x)) -> IllnessCausingParasite(x,y))", "score": 0}
{"id": "eqasc_validation_424", "prediction": "all x y.((Protozoa(x) & Cyclospora(y) & ToxoplasmaGondii(x)) -> IllnessCausingParasite(x,y))", "score": 0}
{"id": "eqasc_validation_425", "prediction": "all x.(ToxoplasmaGondii(x) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_425", "prediction": "all x y.((ToxoplasmaGondii(x) & Human(y)) -> MakesSick(x,y))", "score": 0}
{"id": "eqasc_validation_425", "prediction": "all x y.((Toxoplasmagondii(x) & Human(y)) -> MakesSick(x,y))", "score": 0}
{"id": "eqasc_validation_425", "prediction": "all x y.((Toxoplasma(x) & Gondii(y)) -> MakesHumansSick(x,y))", "score": 0}
{"id": "eqasc_validation_425", "prediction": "All x y.((ToxoplasmaGondii(x) & Human(y)) -> MakesSick(x,y))", "score": -1}
{"id": "eqasc_validation_425", "prediction": "all x.(Toxoplasmagondii(x) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_425", "prediction": "All x.(ToxoplasmaGondii(x) -> MakesHumansSick(x))", "score": -1}
{"id": "eqasc_validation_425", "prediction": "all x y z.((Toxoplasma(x) & Gondii(y) & Human(z)) -> MakesSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_425", "prediction": "all x y z.((ToxoplasmaGondii(x) & Human(y) & Human(z)) -> MakesSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_425", "prediction": "All x y.((Toxoplasma(x) & Gondii(y)) -> MakesHumansSick(x,y))", "score": -1}
{"id": "eqasc_validation_425", "prediction": "All x y.((Toxoplasmagondii(x) & Human(y)) -> MakesSick(x,y))", "score": -1}
{"id": "eqasc_validation_425", "prediction": "all x y z.((Toxoplasma(x) & Gondii(y) & Human(z)) -> MakesSick(x,z))", "score": 0}
{"id": "eqasc_validation_425", "prediction": "all x y z.((Toxoplasmagondii(x) & Human(y) & Human(z)) -> MakesSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_425", "prediction": "all x y.((ToxoplasmaGondii(x) & Human(y)) -> MakeSick(x,y))", "score": 0}
{"id": "eqasc_validation_425", "prediction": "all x y z.((Toxoplasma(x) & Gondii(y) & Human(z)) -> MakesSick(y,z))", "score": 0}
{"id": "eqasc_validation_425", "prediction": "all x y.((Toxoplasma(x) & Gondii(y)) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_426", "prediction": "all x.((Organism(x) & (Bacteria(x) | Viral(x) | Fungi(x) | Protozoa(x))) -> CausesInfectionInLung(x))", "score": 0}
{"id": "eqasc_validation_426", "prediction": "all x.((Organism(x) & (Bacteria(x) | Viral(x) | Fungi(x) | Protozoa(x))) -> CanCauseInfectionInLung(x))", "score": 0}
{"id": "eqasc_validation_426", "prediction": "all x.((Organism(x) & (Bacteria(x) | Viral(x) | Fungus(x) | Protozoa(x))) -> CausesInfectionInLung(x))", "score": 0}
{"id": "eqasc_validation_426", "prediction": "all x.((Organism(x) & (Bacteria(x) | Viral(x) | Fungi(x) | Protozoa(x))) -> CausesInfection(x))", "score": 0}
{"id": "eqasc_validation_426", "prediction": "all x.((Organism(x) & (Bacteria(x) | Virals(x) | Fungi(x) | Protozoa(x))) -> CausesInfectionInLung(x))", "score": 0}
{"id": "eqasc_validation_426", "prediction": "all x.((Organism(x) & CausesInfectionInLung(x)) -> (Bacteria(x) | Viral(x) | Fungi(x) | Protozoa(x)))", "score": 0}
{"id": "eqasc_validation_426", "prediction": "all x.((Bacteria(x) | Viral(x) | Fungi(x) | Protozoa(x)) -> CausesInfectionInLung(x))", "score": 0}
{"id": "eqasc_validation_426", "prediction": "all x.((Bacteria(x) | Virals(x) | Fungi(x) | Protozoa(x)) -> CausesInfectionInLung(x))", "score": 0}
{"id": "eqasc_validation_426", "prediction": "all x.((Organism(x) & CausesInfection(x,Lung)) -> (Bacteria(x) | Viral(x) | Fungi(x) | Protozoa(x)))", "score": 0}
{"id": "eqasc_validation_426", "prediction": "all x.((Organism(x) & CausesInfection(x)) -> (Bacteria(x) | Viral(x) | Fungi(x) | Protozoa(x)))", "score": 0}
{"id": "eqasc_validation_426", "prediction": "all x.((Organism(x) & CausesInfectionInLung(x)) -> (Bacteria(x) | Virals(x) | Fungi(x) | Protozoa(x)))", "score": 0}
{"id": "eqasc_validation_426", "prediction": "all x.((Organism(x) & (Bacteria(x) | Viral(x) | Fungi(x) | Protozoa(x))) -> CanCauseInfection(x))", "score": 0}
{"id": "eqasc_validation_426", "prediction": "all x y.((Bacteria(x) | Viral(x) | Fungi(x) | Protozoa(x)) -> CausesInfectionInLung(x))", "score": 0}
{"id": "eqasc_validation_426", "prediction": "all x y.((Organism(x) & (Bacteria(x) | Viral(x) | Fungi(x) | Protozoa(x))) -> CausesInfectionInLung(x))", "score": 0}
{"id": "eqasc_validation_426", "prediction": "all x.((Organism(x) & (Bacteria(x) | Virals(x) | Fungi(x) | Protozoa(x))) -> CanCauseInfectionInLung(x))", "score": 0}
{"id": "eqasc_validation_427", "prediction": "all x.((Organism(x) & CausesInfection(x)) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_427", "prediction": "all x.((Organism(x) & CanCauseInfection(x)) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_427", "prediction": "all x y.((Organism(x) & Organism(y) & CausesInfection(x,y)) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_427", "prediction": "all x.((Organism(x) & CausesInfection(x)) -> MakesHumanSick(x))", "score": 0}
{"id": "eqasc_validation_427", "prediction": "all x y.((Organism(x) & Infection(y) & Causes(x,y)) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_427", "prediction": "all x y.((Organism(x) & Organism(y) & CausesInfection(x,y)) -> MakesHumansSick(x,y))", "score": 0}
{"id": "eqasc_validation_427", "prediction": "all x y.((Organism(x) & Organism(y) & CanCauseInfection(x,y)) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_427", "prediction": "all x.((Organism(x) & CauseInfection(x)) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_427", "prediction": "all x y.((Organism(x) & CausesInfection(x) & Human(y)) -> MakesSick(x,y))", "score": 0}
{"id": "eqasc_validation_427", "prediction": "all x y.((Organism(x) & Organism(y) & CausesInfection(x)) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_427", "prediction": "all x y.((Organism(x) & Organism(y) & CausesInfection(x,y)) -> MakesHumanSick(x))", "score": 0}
{"id": "eqasc_validation_427", "prediction": "all x.((Organism(x) & CanCauseInfection(x)) -> MakesHumanSick(x))", "score": 0}
{"id": "eqasc_validation_427", "prediction": "all x y.((Organism(x) & CausesInfection(x)) -> MakesHumansSick(y))", "score": 0}
{"id": "eqasc_validation_427", "prediction": "all x y z.((Organism(x) & Organism(y) & Infection(z) & Causes(x,y,z)) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_427", "prediction": "all x.((Organisms(x) & CausesInfection(x)) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_427", "prediction": "all x y.((Organism(x) & Organism(y) & CanCauseInfection(x,y)) -> MakesHumansSick(x,y))", "score": 0}
{"id": "eqasc_validation_428", "prediction": "all x.(Protozoa(x) -> (ToxoplasmagondiiMuscles(x) & NematodeTrichinellaSpiralis(x) & SarcocystisSp(x)))", "score": 0}
{"id": "eqasc_validation_428", "prediction": "all x.(Protozoa(x) -> (ToxoplasmaGondiiMuscles(x) & NematodeTrichinellaSpiralis(x) & SarcocystisSp(x)))", "score": 0}
{"id": "eqasc_validation_428", "prediction": "all x.(Protozoa(x) -> (ToxoplasmagondiiMuscles(x) & NematodeTrichinellaSpiralis(x) & SarcocystisSp.(Protozoa(x))))", "score": -1}
{"id": "eqasc_validation_428", "prediction": "all x.(Protozoa(x) -> (ToxoplasmaGondiiMuscles(x) & NematodeTrichinellaSpiralis(x) & SarcocystisSp.(Protozoa(x))))", "score": -1}
{"id": "eqasc_validation_428", "prediction": "all x.((Protozoa(x) & Toxoplasmagondii(x)) -> MusclesNematodeTrichinellaSpiralis(x))", "score": 0}
{"id": "eqasc_validation_428", "prediction": "all x.((Protozoa(x) & ToxoplasmaGondii(x)) -> MusclesNematodeTrichinellaSpiralis(x))", "score": 0}
{"id": "eqasc_validation_428", "prediction": "all x.((Protozoa(x) & ToxoplasmagondiiMuscles(x)) -> NematodeTrichinellaSpiralis(x))", "score": 0}
{"id": "eqasc_validation_428", "prediction": "all x.((Protozoa(x) & ToxoplasmaGondiiMuscles(x)) -> NematodeTrichinellaSpiralis(x))", "score": 0}
{"id": "eqasc_validation_428", "prediction": "all x.(Protozoa(x) -> (ToxoplasmagondiiMuscles(x) & NematodeTrichinellaSpiralis(x) & SarcocystisSp.(x))))", "score": -1}
{"id": "eqasc_validation_428", "prediction": "all x y.((Protozoa(x) & ToxoplasmaGondiiMuscles(x) & NematodeTrichinellaSpiralis(y)) -> SarcocystisSp(x))", "score": 0}
{"id": "eqasc_validation_428", "prediction": "all x.((Protozoa(x) & ToxoplasmagondiiMuscles(x)) -> (NematodeTrichinellaSpiralis(x) & SarcocystisSp(x)))", "score": 0}
{"id": "eqasc_validation_428", "prediction": "all x.((Protozoa(x) & ToxoplasmagondiiMuscles(x)) -> (NematodeTrichinellaSpiralis(x) & SarcocystisSp.(x))))", "score": -1}
{"id": "eqasc_validation_428", "prediction": "all x y.((Protozoa(x) & ToxoplasmagondiiMuscles(x) & NematodeTrichinellaSpiralis(y)) -> SarcocystisSp(x))", "score": 0}
{"id": "eqasc_validation_428", "prediction": "all x.((Protozoa(x) & ToxoplasmaGondiiMuscles(x)) -> (NematodeTrichinellaSpiralis(x) & SarcocystisSp.(x))))", "score": -1}
{"id": "eqasc_validation_428", "prediction": "all x.((Protozoa(x) & ToxoplasmaGondiiMuscles(x)) -> (NematodeTrichinellaSpiralis(x) & SarcocystisSp(x)))", "score": 0}
{"id": "eqasc_validation_428", "prediction": "all x.(Protozoa(x) -> (ToxoplasmagondiiMuscles(x) & NematodeTrichinellaSpiralis(x)))", "score": 0}
{"id": "eqasc_validation_429", "prediction": "all x.(SarcocystisSpecies(x) -> (ParasitesHumans(x) & MakesHumansSick(x)))", "score": 0}
{"id": "eqasc_validation_429", "prediction": "all x.(SarcocystisSpecies(x) -> (ParasitesHumans(x) & MakesSick(x)))", "score": 0}
{"id": "eqasc_validation_429", "prediction": "all x.(Sarcocystis(x) -> (ParasitesHumans(x) & MakesHumansSick(x)))", "score": 0}
{"id": "eqasc_validation_429", "prediction": "all x.(Sarcocystis(x) -> (ParasitesHumans(x) & MakesSick(x)))", "score": 0}
{"id": "eqasc_validation_429", "prediction": "all x y.((SpeciesOfSarcocystis(x) & Human(y)) -> (Parasites(x,y) & MakesSick(x,y)))", "score": 0}
{"id": "eqasc_validation_429", "prediction": "all x.(SarcocystisSpecies(x) -> (ParatizesHumans(x) & MakesHumansSick(x)))", "score": 0}
{"id": "eqasc_validation_429", "prediction": "all x.(SarcocystisSpecies(x) -> (ParatizesHumans(x) & MakesSick(x)))", "score": 0}
{"id": "eqasc_validation_429", "prediction": "all x.(Sarcocystis(x) -> (ParatizesHumans(x) & MakesSick(x)))", "score": 0}
{"id": "eqasc_validation_429", "prediction": "all x y.((Species(x) & Sarcocystis(y)) -> (ParasitesHumans(x,y) & MakesSick(x,y)))", "score": 0}
{"id": "eqasc_validation_429", "prediction": "all x.(SpeciesOfSarcocystis(x) -> (ParasitesHumans(x) & MakesHumansSick(x)))", "score": 0}
{"id": "eqasc_validation_429", "prediction": "all x.(Sarcocystis(x) -> (ParatizesHumans(x) & MakesHumansSick(x)))", "score": 0}
{"id": "eqasc_validation_429", "prediction": "all x y.((SpeciesOfSarcocystis(x) & Human(y)) -> (Parasites(x,y) & MakesSick(y)))", "score": 0}
{"id": "eqasc_validation_430", "prediction": "all x.((Exhibit(x) & OneCelledAnimal(x)) -> Protozoa(x))", "score": 0}
{"id": "eqasc_validation_430", "prediction": "all x.(Exhibit(x) -> (OneCelledAnimal(x) & Protozoa(x)))", "score": 0}
{"id": "eqasc_validation_430", "prediction": "all x.((Exhibit(x) & OneCellledAnimal(x)) -> Protozoa(x))", "score": 0}
{"id": "eqasc_validation_430", "prediction": "all x.(Exhibit(x) -> (OneCellledAnimal(x) & Protozoa(x)))", "score": 0}
{"id": "eqasc_validation_430", "prediction": "all x.((Exhibit(x) & OneCelled(x)) -> Protozoa(x))", "score": 0}
{"id": "eqasc_validation_430", "prediction": "all x y.((Exhibit(x) & OneCelledAnimal(y)) -> Protozoa(x))", "score": 0}
{"id": "eqasc_validation_430", "prediction": "all x.(ExhibitOneCellledAnimals(x) -> Protozoa(x))", "score": 0}
{"id": "eqasc_validation_430", "prediction": "all x.(ExhibitOneCellledAnimal(x) -> Protozoa(x))", "score": 0}
{"id": "eqasc_validation_430", "prediction": "all x y.((Exhibit(x) & OneCellledAnimal(y)) -> Protozoa(x))", "score": 0}
{"id": "eqasc_validation_431", "prediction": "all x.((OneCelledAnimal(x) & Parasite(x)) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_431", "prediction": "all x y.((OneCelledAnimal(x) & Human(y) & Parasite(y)) -> MakesSick(x,y))", "score": 0}
{"id": "eqasc_validation_431", "prediction": "all x y z.((OneCelledAnimal(x) & Human(y) & Parasite(z)) -> MakesSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_431", "prediction": "all x.((Animal(x) & OneCelled(x)) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_431", "prediction": "all x y.((OneCelledAnimal(x) & Human(y) & Parasite(z)) -> MakesSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_431", "prediction": "all x y.((OneCelledAnimal(x) & Human(y) & Parasite(x,y)) -> MakesSick(x,y))", "score": 0}
{"id": "eqasc_validation_431", "prediction": "all x y z.((Animal(x) & OneCelled(x) & Human(y) & Parasite(z)) -> MakesSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_431", "prediction": "all x y.((Animal(x) & OneCelled(x) & Human(y) & Parasite(y)) -> MakesSick(x,y))", "score": 0}
{"id": "eqasc_validation_431", "prediction": "all x y.((OneCelledAnimal(x) & Human(y) & Parasite(x)) -> MakesSick(x,y))", "score": 0}
{"id": "eqasc_validation_431", "prediction": "all x y.((OneCelledAnimal(x) & Human(y) & Parasite(z)) -> MakesSick(x,y))", "score": 0}
{"id": "eqasc_validation_431", "prediction": "all x y z.((OneCelledAnimal(x) & Human(y) & Parasite(z)) -> MakesSick(x,y))", "score": 0}
{"id": "eqasc_validation_431", "prediction": "all x y z.((OneCellledAnimal(x) & Human(y) & Parasite(z)) -> MakesSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_431", "prediction": "all x y.((OneCelledAnimal(x) & Human(y)) -> MakesSick(x,y))", "score": 0}
{"id": "eqasc_validation_431", "prediction": "all x y z.((OneCelledAnimal(x) & Human(y) & Parasite(z)) -> MakesSickWhenBecomes(x,y,z))", "score": 0}
{"id": "eqasc_validation_431", "prediction": "all x y.((Animal(x) & OneCelled(x) & Human(y) & Parasite(z)) -> MakesSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_431", "prediction": "all x.((OneCellledAnimal(x) & Parasite(x)) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_432", "prediction": "all x y.((MalariaParasite(x) & Mosquito(y)) -> TransmittedBy(x,y))", "score": 0}
{"id": "eqasc_validation_432", "prediction": "all x.(MalariaParasite(x) -> TransmittedByMouses(x))", "score": 0}
{"id": "eqasc_validation_432", "prediction": "all x y z.((MalariaParasite(x) & Mosquito(y) & Mosquito(z)) -> TransmittedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_432", "prediction": "all x.(MalariaParasite(x) -> TransmittedByMosquitos(x))", "score": 0}
{"id": "eqasc_validation_432", "prediction": "all x.(MalariaParasite(x) -> TransmittedByMouse(x))", "score": 0}
{"id": "eqasc_validation_432", "prediction": "all x y z.((MalariaParasite(x) & Mosquito(y) & MalariaParasite(z)) -> TransmittedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_432", "prediction": "all x y z.((MalariaParasite(x) & Mosquito(y) & Moskito(z)) -> TransmittedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_432", "prediction": "all x.(MalariaParasite(x) -> TransmittedByMoskitos(x))", "score": 0}
{"id": "eqasc_validation_432", "prediction": "all x y z.((MalariaParasite(x) & Mosquito(y) & Malaria(z)) -> TransmittedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_432", "prediction": "all x y.((Malaria(x) & Mosquito(y)) -> TransmittedBy(x,y))", "score": 0}
{"id": "eqasc_validation_432", "prediction": "all x y.((MalariaParasite(x) & Moskito(y)) -> TransmittedBy(x,y))", "score": 0}
{"id": "eqasc_validation_432", "prediction": "all x.(MalariaParasite(x) -> (TransmittedByMouses(x) | TransmittedByMouses(x)))", "score": 0}
{"id": "eqasc_validation_432", "prediction": "all x y z.((MalariaParasite(x) & Mosquito(y) & Mosquito(z)) -> TransmittedBy(x,y))", "score": 0}
{"id": "eqasc_validation_432", "prediction": "all x.((MalariaParasite(x) & Mosquito(y)) -> TransmittedBy(x,y))", "score": 0}
{"id": "eqasc_validation_432", "prediction": "all x.(MalariaParasite(x) -> TransmittedByMosquitoes(x))", "score": 0}
{"id": "eqasc_validation_432", "prediction": "all x y z.((MalariaParasite(x) & Mosquito(y) & Mosquito(z)) -> Transmitted(x,y,z))", "score": 0}
{"id": "eqasc_validation_433", "prediction": "all x.(Malaria(x) -> (Protozoa(x) & MakesHumansSick(x)))", "score": 0}
{"id": "eqasc_validation_433", "prediction": "all x y z.((Malaria(x) & Protozoa(y) & Human(z)) -> MakesSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_433", "prediction": "all x y.((Malaria(x) & Human(y)) -> (Protozoa(x) & MakesSick(x,y)))", "score": 0}
{"id": "eqasc_validation_433", "prediction": "all x y.((Malaria(x) & Protozoa(y)) -> MakesHumansSick(x,y))", "score": 0}
{"id": "eqasc_validation_433", "prediction": "all x y z.((Malaria(x) & Protozoa(y) & Human(z)) -> MakesSick(x,z))", "score": 0}
{"id": "eqasc_validation_433", "prediction": "all x y z.((Malaria(x) & Protozoa(y) & Human(z)) -> MakesSick(y,z))", "score": 0}
{"id": "eqasc_validation_433", "prediction": "all x.((Protozoa(x) & Malaria(x)) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_433", "prediction": "all x y.((Malaria(x) & Protozoa(y)) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_433", "prediction": "all x.((Malaria(x) & Protozoa(x)) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_433", "prediction": "all x y.((Malaria(x) & Human(y)) -> (Protozoa(x) & MakesSick(x)))", "score": 0}
{"id": "eqasc_validation_434", "prediction": "all x y.((NaturalMagnetism(x) & Compass(y)) -> PointsNorth(x,y))", "score": 0}
{"id": "eqasc_validation_434", "prediction": "all x y.((NaturalMagnetism(x) & Compass(y)) -> PointsNorthBy(x,y))", "score": 0}
{"id": "eqasc_validation_434", "prediction": "all x y z.((NaturalMagnetism(x) & Compass(y) & Compass(z)) -> PointsNorth(x,y,z))", "score": 0}
{"id": "eqasc_validation_434", "prediction": "all x y z.((NaturalMagnetism(x) & Compass(y) & NaturalMagnetism(z)) -> PointsNorth(x,y,z))", "score": 0}
{"id": "eqasc_validation_434", "prediction": "all x y z.((NaturalMagnetism(x) & Compass(y) & Compass(z)) -> PointsNorthBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_434", "prediction": "all x y z.((NaturalMagnetism(x) & Compass(y) & NaturalMagnetism(z)) -> PointsNorthBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_434", "prediction": "all x.(NaturalMagnetism(x) -> PointsNorthByCompass(x))", "score": 0}
{"id": "eqasc_validation_434", "prediction": "all x y z.((NaturalMagnetism(x) & Compass(y) & North(z)) -> Points(x,y,z))", "score": 0}
{"id": "eqasc_validation_434", "prediction": "all x y z.((NaturalMagnetism(x) & Compass(y) & North(z)) -> PointsBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_434", "prediction": "all x y z.((NaturalMagnetism(x) & Compass(y) & PointsNorth(z)) -> PointsNorth(x,y,z))", "score": 0}
{"id": "eqasc_validation_434", "prediction": "all x y.((NaturalMagnetism(x) & Compass(y) & PointsNorth(x,y)) -> UsedForPointingNorth(x,y))", "score": 0}
{"id": "eqasc_validation_434", "prediction": "all x y z.((NaturalMagnetism(x) & Compass(y) & PointsNorth(x,y) & Compass(z)) -> PointsNorth(x,z))", "score": 0}
{"id": "eqasc_validation_434", "prediction": "all x y z.((NaturalMagnetism(x) & Compass(y) & Compass(z)) -> PointsNorth(x,y))", "score": 0}
{"id": "eqasc_validation_434", "prediction": "all x y z.((NaturalMagnetism(x) & Compass(y) & NaturalMagnetism(z)) -> PointsNorth(x,z))", "score": 0}
{"id": "eqasc_validation_434", "prediction": "all x y z.((NaturalMagnetism(x) & Compass(y) & Neighbor(z)) -> PointsNorth(x,y,z))", "score": 0}
{"id": "eqasc_validation_434", "prediction": "all x y z.((NaturalMagnetism(x) & Compass(y) & PointsNorth(x,y)) -> PointsNorth(y,z))", "score": 0}
{"id": "eqasc_validation_435", "prediction": "all x.((Magnet(x) | Compasse(x) | Earth(x)) -> HasMagneticEnergy(x))", "score": 0}
{"id": "eqasc_validation_435", "prediction": "all x.(Magnet(x) | Compasse(x) | Earth(x)) -> HasMagneticEnergy(x))", "score": -1}
{"id": "eqasc_validation_435", "prediction": "all x y z.((Magnet(x) | Compasse(y) | Earth(z)) -> HasMagneticEnergy(x))", "score": 0}
{"id": "eqasc_validation_435", "prediction": "all x y z.((Magnet(x) | Compasse(y) | Earth(z)) -> HasMagneticEnergy(x,y,z))", "score": 0}
{"id": "eqasc_validation_435", "prediction": "all x y z.((Magnet(x) & Compasse(y) & Earth(z)) -> HasMagneticEnergy(x,y,z))", "score": 0}
{"id": "eqasc_validation_435", "prediction": "all x y.((Magnet(x) | Compasse(x) | Earth(y)) -> HasMagneticEnergy(x))", "score": 0}
{"id": "eqasc_validation_435", "prediction": "all x y.((Magnet(x) & Compasse(y) & Earth(y)) -> HasMagneticEnergy(x,y))", "score": 0}
{"id": "eqasc_validation_435", "prediction": "all x.((Magnetic(x) | Compasse(x) | Earth(x)) -> HasMagneticEnergy(x))", "score": 0}
{"id": "eqasc_validation_435", "prediction": "all x.((Magnet(x) | Compasse(x) | Earth(x)) -> MagneticEnergy(x))", "score": 0}
{"id": "eqasc_validation_435", "prediction": "all x.((MagneticEnergy(x) | Compasses(x) | Earth(x)) -> HasMagneticEnergy(x))", "score": 0}
{"id": "eqasc_validation_435", "prediction": "all x y.((Magnet(x) | Compasse(y) | Earth(y)) -> HasMagneticEnergy(x))", "score": 0}
{"id": "eqasc_validation_435", "prediction": "all x y.((Magnet(x) | Compasse(x) | Earth(y)) -> HasMagneticEnergy(x,y))", "score": 0}
{"id": "eqasc_validation_435", "prediction": "all x.((MagneticEnergy(x) | Compasses(x) | Earth(x))) -> HasMagneticEnergy(x))", "score": -1}
{"id": "eqasc_validation_435", "prediction": "all x y.((Magnet(x) | Compasse(y) | Earth(y)) -> HasMagneticEnergy(x,y))", "score": 0}
{"id": "eqasc_validation_435", "prediction": "all x y z.((Magnet(x) & Compasse(y) & Earth(z)) -> HasMagneticEnergy(x))", "score": 0}
{"id": "eqasc_validation_436", "prediction": "all x y.((MagneticEnergy(x) & North(y)) -> UsedToFind(x,y))", "score": 0}
{"id": "eqasc_validation_436", "prediction": "all x y.((MagneticEnergy(x) & NorthNorth(y)) -> UsedToFind(x,y))", "score": 0}
{"id": "eqasc_validation_436", "prediction": "all x y z.((MagneticEnergy(x) & North(y) & North(z)) -> UsedToFind(x,y,z))", "score": 0}
{"id": "eqasc_validation_436", "prediction": "all x y z.((MagneticEnergy(x) & North(y) & MagneticEnergy(z)) -> UsedToFind(x,y,z))", "score": 0}
{"id": "eqasc_validation_436", "prediction": "all x y.((MagneticEnergy(x) & North(y)) -> UsedToFindNorth(x,y))", "score": 0}
{"id": "eqasc_validation_436", "prediction": "all x y.((MagneticEnergy(x) & North(y)) -> UsedToFollow(x,y))", "score": 0}
{"id": "eqasc_validation_436", "prediction": "all x.(MagneticEnergy(x) -> UsedToFindNorthern(x))", "score": 0}
{"id": "eqasc_validation_436", "prediction": "all x y z.((MagneticEnergy(x) & NorthStar(y) & NorthStar(z)) -> UsedToFind(x,y,z))", "score": 0}
{"id": "eqasc_validation_436", "prediction": "all x y z.((MagneticEnergy(x) & NorthNorth(y) & NorthNorth(z)) -> UsedToFind(x,y,z))", "score": 0}
{"id": "eqasc_validation_436", "prediction": "all x y z.((MagneticEnergy(x) & NorthNorth(y) & MagneticEnergy(z)) -> UsedToFind(x,y,z))", "score": 0}
{"id": "eqasc_validation_436", "prediction": "all x y z.((MagneticEnergy(x) & North(y) & MagneticEnergy(z)) -> UsedToFollow(x,y,z))", "score": 0}
{"id": "eqasc_validation_436", "prediction": "all x y z.((MagneticEnergy(x) & North(y) & North(z)) -> UsedToFollow(x,y,z))", "score": 0}
{"id": "eqasc_validation_436", "prediction": "all x y z.((MagneticEnergy(x) & North(y) & MagneticEnergy(z)) -> UsedToFindNorth(x,y,z))", "score": 0}
{"id": "eqasc_validation_436", "prediction": "all x y.((MagneticEnergy(x) & NorthNorth(y)) -> UsedToFollow(x,y))", "score": 0}
{"id": "eqasc_validation_436", "prediction": "all x y.((MagneticEnergy(x) & NorthStar(y)) -> UsedToFind(x,y))", "score": 0}
{"id": "eqasc_validation_436", "prediction": "all x y.((MagneticEnergy(x) & North(y)) -> UsedForNorth(x,y))", "score": 0}
{"id": "eqasc_validation_437", "prediction": "all x y.((SurveyorsCompass(x) & SurveyorsCompass(y)) -> Used(x))", "score": 0}
{"id": "eqasc_validation_437", "prediction": "all x y.((SurveyorsCompass(x) & SurveyorsCompass(y)) -> Used(x,y))", "score": 0}
{"id": "eqasc_validation_437", "prediction": "all x y.((SurveyorsCompass(x) & Surveyor(y)) -> Used(x))", "score": 0}
{"id": "eqasc_validation_437", "prediction": "all x y z.((SurveyorsCompass(x) & SurveyorsCompass(y) & Compass(z)) -> Used(x,y,z))", "score": 0}
{"id": "eqasc_validation_437", "prediction": "all x.((SurveyorsCompass(x) & Used(x)) -> Used(x))", "score": 0}
{"id": "eqasc_validation_437", "prediction": "all x y z.((SurveyorsCompass(x) & SurveyorsCompass(y) & Compass(z)) -> Used(x))", "score": 0}
{"id": "eqasc_validation_437", "prediction": "all x y.((Compass(x) & Surveyor(y)) -> Used(x,y))", "score": 0}
{"id": "eqasc_validation_437", "prediction": "all x y.((SurveyorsCompass(x) & Surveyor(y)) -> Used(x,y))", "score": 0}
{"id": "eqasc_validation_437", "prediction": "all x y z.((SurveyorsCompass(x) & Surveyor(y) & Compass(z)) -> Used(x,y,z))", "score": 0}
{"id": "eqasc_validation_437", "prediction": "all x y.((SurveillanceCompass(x) & Surveyor(y)) -> Used(x))", "score": 0}
{"id": "eqasc_validation_437", "prediction": "all x y z.((SurveillanceCompass(x) & Surveyor(y) & Compass(z)) -> Used(x,y,z))", "score": 0}
{"id": "eqasc_validation_437", "prediction": "all x y z.((Compass(x) & Surveyor(y) & Compass(z)) -> Used(x,y,z))", "score": 0}
{"id": "eqasc_validation_437", "prediction": "all x y.((Surveillant(x) & Compass(y)) -> Used(x,y))", "score": 0}
{"id": "eqasc_validation_437", "prediction": "all x y.((SurveillanceCompass(x) & Surveyor(y)) -> Used(x,y))", "score": 0}
{"id": "eqasc_validation_437", "prediction": "all x.(SurveyorsCompass(x) -> Used(x))", "score": 0}
{"id": "eqasc_validation_437", "prediction": "all x y.((Surveyor(x) & Compass(y)) -> Used(x,y))", "score": 0}
{"id": "eqasc_validation_438", "prediction": "all x y.((NaturalMagnetism(x) & SurveyingTool(y)) -> PointsNorth(x,y))", "score": 0}
{"id": "eqasc_validation_438", "prediction": "all x y z.((NaturalMagnetism(x) & SurveyingTool(y) & SurveyingTool(z)) -> PointsNorth(x,y,z))", "score": 0}
{"id": "eqasc_validation_438", "prediction": "all x y.((NaturalMagnetism(x) & SurveyingTool(y)) -> UsedForPointingNorth(x,y))", "score": 0}
{"id": "eqasc_validation_438", "prediction": "all x.(NaturalMagnetism(x) -> PointsNorth(x))", "score": 0}
{"id": "eqasc_validation_438", "prediction": "all x y z.((NaturalMagnetism(x) & SurveyingTool(y) & SurveyingTool(z)) -> PointsNorth(x,y))", "score": 0}
{"id": "eqasc_validation_438", "prediction": "all x y.((NaturalMagnetism(x) & SurveyingTool(y)) -> PointsNorthIn(x,y))", "score": 0}
{"id": "eqasc_validation_438", "prediction": "all x.((NaturalMagnetism(x) & SurveyingTool(x)) -> PointsNorth(x))", "score": 0}
{"id": "eqasc_validation_438", "prediction": "all x y z.((NaturalMagnetism(x) & SurveyingTool(y) & SurveyingTool(z)) -> UsedForPointingNorth(x,y,z))", "score": 0}
{"id": "eqasc_validation_438", "prediction": "all x.(NaturalMagnetism(x) -> PointsNorthInSurveyingTool(x))", "score": 0}
{"id": "eqasc_validation_438", "prediction": "all x y z.((NaturalMagnetism(x) & SurveyingTool(y) & SurveyingTool(z)) -> PointsNorthIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_438", "prediction": "all x y z.((NaturalMagnetism(x) & SurveyingTool(y) & Tool(z)) -> PointsNorth(x,y,z))", "score": 0}
{"id": "eqasc_validation_438", "prediction": "all x y z.((NaturalMagnetism(x) & SurveyingTool(y) & PointsNorth(x,y)) -> UsedFor(x,z))", "score": 0}
{"id": "eqasc_validation_438", "prediction": "all x y.((NaturalMagnetism(x) & SurveyingTool(y)) -> PointNorth(x,y))", "score": 0}
{"id": "eqasc_validation_438", "prediction": "all x y z.((NaturalMagnetism(x) & SurveyingTool(y) & SurveyingTool(z) & PointsNorth(x,y)) -> UsedFor(x,z))", "score": 0}
{"id": "eqasc_validation_438", "prediction": "all x y z.((NaturalMagnetism(x) & SurveyingTool(y) & SurveyingTool(z)) -> PointsNorth(x,z))", "score": 0}
{"id": "eqasc_validation_438", "prediction": "all x y.((NaturalMagnetism(x) & SurveyingTool(y) & PointsNorth(x,y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_439", "prediction": "all x.((Student(x) & MagnetizesNeedles(x) & LocatesNorth(x)) -> FindsDirection(x))", "score": 0}
{"id": "eqasc_validation_439", "prediction": "all x.((Student(x) & MagnetizeNeedles(x) & LocateNorth(x)) -> FindDirection(x))", "score": 0}
{"id": "eqasc_validation_439", "prediction": "all x.((Student(x) & MagnetizesNeedles(x) & LocatesNorth(x)) -> FindDirection(x))", "score": 0}
{"id": "eqasc_validation_439", "prediction": "all x y.((Student(x) & Student(y)) -> (MagnetizesNeedles(x,y) & LocatesNorth(x,y)))", "score": 0}
{"id": "eqasc_validation_439", "prediction": "all x y.((Student(x) & Student(y)) -> (MagnetizesNeedles(x,y) & LocatesNorth(y,x)))", "score": 0}
{"id": "eqasc_validation_439", "prediction": "all x y z.((Student(x) & Needle(y) & North(z)) -> MagnetizesAndLocates(x,y,z))", "score": 0}
{"id": "eqasc_validation_439", "prediction": "all x y.((Student(x) & MagnetizesNeedles(x) & LocatesNorth(x)) -> FindsDirection(x,y))", "score": 0}
{"id": "eqasc_validation_439", "prediction": "all x y.((Student(x) & Needle(y)) -> (Magnetizes(x,y) & LocatesNorth(x,y)))", "score": 0}
{"id": "eqasc_validation_439", "prediction": "all x.((Student(x) & MagnetizesNeedles(x)) -> LocatesNorth(x))", "score": 0}
{"id": "eqasc_validation_439", "prediction": "all x y.((Student(x) & Student(y)) -> (MagnetizesNeedles(x,y) & LocatesNorth(y)))", "score": 0}
{"id": "eqasc_validation_439", "prediction": "all x y.((Student(x) & MagnetizesNeedles(x,y) & LocatesNorth(x,y)) -> FindsDirection(x,y))", "score": 0}
{"id": "eqasc_validation_439", "prediction": "all x y.((Student(x) & MagnetizesNeedles(x,y) & LocatesNorth(x,y)) -> FindsDirection(x))", "score": 0}
{"id": "eqasc_validation_439", "prediction": "all x y.((Student(x) & Needle(y)) -> (Magnetizes(x,y) & LocatesNorth(x)))", "score": 0}
{"id": "eqasc_validation_440", "prediction": "all x.((Compass(x) & PointsNorth(x)) -> FindDirections(x))", "score": 0}
{"id": "eqasc_validation_440", "prediction": "all x.((Compass(x) & PointsNorth(x)) -> FindsDirections(x))", "score": 0}
{"id": "eqasc_validation_440", "prediction": "all x.((Compass(x) & PointsNorth(x)) -> FindingDirections(x))", "score": 0}
{"id": "eqasc_validation_440", "prediction": "all x y.((Compass(x) & Direction(y)) -> PointsNorth(x,y))", "score": 0}
{"id": "eqasc_validation_440", "prediction": "all x y.((Compass(x) & Compass(y) & PointsNorth(x,y)) -> FindDirections(x,y))", "score": 0}
{"id": "eqasc_validation_440", "prediction": "all x y.((Compass(x) & Direction(y) & PointsNorth(x,y)) -> Finds(x,y))", "score": 0}
{"id": "eqasc_validation_440", "prediction": "all x y.((Compass(x) & Compass(y) & PointsNorth(x,y)) -> FindsDirections(x,y))", "score": 0}
{"id": "eqasc_validation_440", "prediction": "all x y.((Compass(x) & Direction(y) & PointsNorth(x,y)) -> CanFind(x,y))", "score": 0}
{"id": "eqasc_validation_440", "prediction": "all x.((Compass(x) & PointsNorth(x)) -> CanFindDirections(x))", "score": 0}
{"id": "eqasc_validation_440", "prediction": "all x.((Compass(x) & PointsNorth(x)) -> FoundDirections(x))", "score": 0}
{"id": "eqasc_validation_440", "prediction": "all x y.((Compass(x) & Compass(y) & PointsNorth(x)) -> FindDirections(x,y))", "score": 0}
{"id": "eqasc_validation_440", "prediction": "all x.(FindingDirections(x) -> (UsesCompass(x) & PointsNorth(x)))", "score": 0}
{"id": "eqasc_validation_440", "prediction": "all x y.((Compass(x) & Compass(y) & PointsNorth(x)) -> FindsDirections(x,y))", "score": 0}
{"id": "eqasc_validation_440", "prediction": "all x.(FindDirections(x) -> (UsesCompass(x) & PointsNorth(x)))", "score": 0}
{"id": "eqasc_validation_440", "prediction": "all x y.((Compass(x) & Compass(y) & PointsNorth(x,y)) -> FindDirections(x))", "score": 0}
{"id": "eqasc_validation_440", "prediction": "all x.((Compass(x) & PointsNorth(x)) -> LocatesDirections(x))", "score": 0}
{"id": "eqasc_validation_441", "prediction": "all x.((Compass(x) & Ordinary(x)) -> AlignsToNorthDirection(x))", "score": 0}
{"id": "eqasc_validation_441", "prediction": "all x.((Compass(x) & Ordinary(x)) -> AlignToNorthDirection(x))", "score": 0}
{"id": "eqasc_validation_441", "prediction": "all x y.((Compass(x) & Ordinary(y)) -> AlignsToNorthDirection(x,y))", "score": 0}
{"id": "eqasc_validation_441", "prediction": "all x.(OrdinaryCompass(x) -> AlignsToNorthDirection(x))", "score": 0}
{"id": "eqasc_validation_441", "prediction": "all x.(OrdinaryCompass(x) -> AlignToNorthDirection(x))", "score": 0}
{"id": "eqasc_validation_441", "prediction": "All x.((Compass(x) & Ordinary(x)) -> AlignsToNorthDirection(x))", "score": -1}
{"id": "eqasc_validation_441", "prediction": "all x y.((Compass(x) & Ordinary(x)) -> AlignsToNorthDirection(x,y))", "score": 0}
{"id": "eqasc_validation_441", "prediction": "all x y.((Compass(x) & Ordinary(y)) -> AlignToNorthDirection(x,y))", "score": 0}
{"id": "eqasc_validation_441", "prediction": "all x y.((Compass(x) & Ordinary(x)) -> AlignsToNorthDirection(y))", "score": 0}
{"id": "eqasc_validation_441", "prediction": "all x.((Compass(x) & Ordinary(x)) -> AlignNorthDirection(x))", "score": 0}
{"id": "eqasc_validation_441", "prediction": "all x.((Compass(x) & Ordinary(x)) -> AlignsToNordDirection(x))", "score": 0}
{"id": "eqasc_validation_441", "prediction": "all x.((Command(x) & Ordinary(x)) -> AlignsToNorthDirection(x))", "score": 0}
{"id": "eqasc_validation_441", "prediction": "All x.((Compass(x) & Ordinary(x)) -> AlignToNorthDirection(x))", "score": -1}
{"id": "eqasc_validation_441", "prediction": "all x.((Compass(x) & Ordinary(x)) -> AlignToNordDirection(x))", "score": 0}
{"id": "eqasc_validation_442", "prediction": "all x.(Compasse(x) -> UsesMagnetism(x))", "score": 0}
{"id": "eqasc_validation_442", "prediction": "all x y.((Compasse(x) & Magnetism(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_442", "prediction": "all x.(Compass(x) -> UsesMagnetism(x))", "score": 0}
{"id": "eqasc_validation_442", "prediction": "all x y.((Compass(x) & Magnetism(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_442", "prediction": "all x.(Compasse(x) -> (UsesMagnetism(x) & UsesMagnetism(x)))", "score": 0}
{"id": "eqasc_validation_442", "prediction": "all x y z.((Compasse(x) & Magnetism(y) & Magnetism(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_442", "prediction": "all x.(Compact(x) -> UsesMagnetism(x))", "score": 0}
{"id": "eqasc_validation_442", "prediction": "all x y z.((Compass(x) & Magnetism(y) & Magnetism(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_442", "prediction": "all x.(Compasse(x) -> Magnetism(x))", "score": 0}
{"id": "eqasc_validation_442", "prediction": "all x.(Compass(x) -> (UsesMagnetism(x) & UsesMagnetism(x)))", "score": 0}
{"id": "eqasc_validation_442", "prediction": "all x y z.((Compasse(x) & Magnetism(y) & Magnetism(z)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_442", "prediction": "all x.(Compact(x) -> (UsesMagnetism(x) & UsesMagnetism(x)))", "score": 0}
{"id": "eqasc_validation_442", "prediction": "all x y z.((Compass(x) & Magnetism(y) & Magnetism(z)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_442", "prediction": "all x.(Compass(x) -> Magnetism(x))", "score": 0}
{"id": "eqasc_validation_442", "prediction": "all x y.((Compact(x) & Magnetism(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_442", "prediction": "all x.(Compasse(x) -> (UsesMagnetism(x) & UsesMagnetism(x) & UsesMagnetism(x)))", "score": 0}
{"id": "eqasc_validation_443", "prediction": "all x.(Teen(x) -> (LearnsHowToNavigateTerrain(x) & UsesCompass(x)))", "score": 0}
{"id": "eqasc_validation_443", "prediction": "all x.(Teen(x) -> (LearnsToNavigateTerrain(x) & UsesCompass(x)))", "score": 0}
{"id": "eqasc_validation_443", "prediction": "all x y.((Teen(x) & Terrain(y)) -> (LearnsHowToNavigate(x,y) & UsesCompass(x)))", "score": 0}
{"id": "eqasc_validation_443", "prediction": "all x.(Teen(x) -> (LearnsHowToNavigateTerrain(x) & LearnsHowToUseCompass(x)))", "score": 0}
{"id": "eqasc_validation_443", "prediction": "all x.(Ten(x) -> (LearnsHowToNavigateTerrain(x) & UsesCompass(x)))", "score": 0}
{"id": "eqasc_validation_443", "prediction": "all x y.((Teen(x) & Terrain(y)) -> (LearnsHowToNavigate(x,y) & UsesCompass(x,y)))", "score": 0}
{"id": "eqasc_validation_443", "prediction": "all x y z.((Teen(x) & Terrain(y) & Compass(z)) -> (LearnsHowToNavigate(x,y) & Uses(x,z)))", "score": 0}
{"id": "eqasc_validation_443", "prediction": "all x.(Teen(x) -> (LearnsNavigateTerrain(x) & UsesCompass(x)))", "score": 0}
{"id": "eqasc_validation_443", "prediction": "all x y z.((Teen(x) & Terrain(y) & Compass(z)) -> (LearnsHowToNavigate(x,y) & LearnsHowToUse(x,z)))", "score": 0}
{"id": "eqasc_validation_443", "prediction": "all x y.((Ten(x) & Terrain(y)) -> (LearnsHowToNavigate(x,y) & UsesCompass(x)))", "score": 0}
{"id": "eqasc_validation_443", "prediction": "all x y.((Teen(x) & Terrain(y)) -> (LearnsHowToNavigate(x,y) & LearnsHowToUseCompass(x)))", "score": 0}
{"id": "eqasc_validation_443", "prediction": "all x y z.((Ten(x) & Terrain(y) & Compass(z)) -> (LearnsHowToNavigate(x,y) & Uses(x,z)))", "score": 0}
{"id": "eqasc_validation_443", "prediction": "all x y z.((Ten(x) & Terrain(y) & Compass(z)) -> (LearnsHowToNavigate(x,y) & LearnsHowToUse(x,z)))", "score": 0}
{"id": "eqasc_validation_443", "prediction": "all x y.((Ten(x) & Terrain(y)) -> (LearnsHowToNavigate(x,y) & UsesCompass(x,y)))", "score": 0}
{"id": "eqasc_validation_443", "prediction": "all x.(Teen(x) -> (LearnsTerrain(x) & UsesCompass(x)))", "score": 0}
{"id": "eqasc_validation_443", "prediction": "all x.((Teen(x) & NavigatesTerrain(x) & UsesCompass(x)) -> LearnsHowToUseCompass(x))", "score": 0}
{"id": "eqasc_validation_444", "prediction": "all x.(NaturalMagnetismPointsNorth(x) -> NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationN", "score": -1}
{"id": "eqasc_validation_444", "prediction": "all x.(NaturalMagnetismPointsNorth(x) -> NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationN", "score": -1}
{"id": "eqasc_validation_444", "prediction": "all x.(NaturalMagnetismPointsNorthForNavigation(x) -> NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationN", "score": -1}
{"id": "eqasc_validation_444", "prediction": "all x.(NaturalMagnetismPointsNorth(x) -> NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigation(NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationN", "score": -1}
{"id": "eqasc_validation_444", "prediction": "all x.(NaturalMagnetismPointsNorthForNavigation(x) -> NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationN", "score": -1}
{"id": "eqasc_validation_444", "prediction": "all x.(NaturalMagnetismPointsNorthForNavigation(x) -> NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationN", "score": -1}
{"id": "eqasc_validation_444", "prediction": "all x.(NaturalMagnetismPointsNorth(x) -> NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigation(NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationN", "score": -1}
{"id": "eqasc_validation_444", "prediction": "all x.(NaturalMagnetismPointsNorth(x) -> NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigation(NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationN", "score": -1}
{"id": "eqasc_validation_444", "prediction": "all x.(NaturalMagnetismPointsNorth(x) -> NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigation(NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationN", "score": -1}
{"id": "eqasc_validation_444", "prediction": "all x.(NaturalMagnetismPointsNorth(x) -> NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigation(navigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationN", "score": -1}
{"id": "eqasc_validation_444", "prediction": "all x.(NaturalMagnetismPointsNorth(x) -> NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigation(NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationN", "score": -1}
{"id": "eqasc_validation_444", "prediction": "all x.(NaturalMagnetismPointsNorthForNavigation(x) -> NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigation(NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigation", "score": -1}
{"id": "eqasc_validation_444", "prediction": "all x.(NaturalMagnetismPointsNorthForNavigation(x) -> NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigation(NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigation", "score": -1}
{"id": "eqasc_validation_444", "prediction": "all x.(NaturalMagnetismPointsNorthForNavigation(x) -> NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigation(NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigation", "score": -1}
{"id": "eqasc_validation_444", "prediction": "all x.(NaturalMagnetismPointsNorthForNavigation(x) -> NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigation(NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigation", "score": -1}
{"id": "eqasc_validation_444", "prediction": "all x.(NaturalMagnetismPointsNorth(x) -> NavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNavigationNa", "score": -1}
{"id": "eqasc_validation_445", "prediction": "all x.(Compass(x) -> PointsToMagneticPoles(x))", "score": 0}
{"id": "eqasc_validation_445", "prediction": "all x y.((Compass(x) & MagneticPole(y)) -> PointsTo(x,y))", "score": 0}
{"id": "eqasc_validation_445", "prediction": "all x.(Compasse(x) -> PointsToMagneticPoles(x))", "score": 0}
{"id": "eqasc_validation_445", "prediction": "all x y.((Compasse(x) & MagneticPole(y)) -> PointsTo(x,y))", "score": 0}
{"id": "eqasc_validation_445", "prediction": "all x y z.((Compass(x) & MagneticPole(y) & MagneticPole(z)) -> PointsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_445", "prediction": "all x y z.((Compass(x) & MagneticPole(y) & Compasse(z)) -> PointsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_445", "prediction": "all x y.((Compass(x) & MagneticPole(y)) -> PointTo(x,y))", "score": 0}
{"id": "eqasc_validation_445", "prediction": "all x y z.((Compasse(x) & MagneticPole(y) & MagneticPole(z)) -> PointsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_445", "prediction": "all x.(Compass(x) -> PointsToMagneticPole(x))", "score": 0}
{"id": "eqasc_validation_445", "prediction": "all x y.((Compasse(x) & MagneticPole(y)) -> PointTo(x,y))", "score": 0}
{"id": "eqasc_validation_445", "prediction": "all x.(Compasse(x) -> PointsToMagneticPole(x))", "score": 0}
{"id": "eqasc_validation_445", "prediction": "all x.(Compass(x) -> PointToMagneticPoles(x))", "score": 0}
{"id": "eqasc_validation_445", "prediction": "all x y z.((Compass(x) & MagneticPole(y) & Pole(z)) -> PointsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_445", "prediction": "all x y z.((Compasse(x) & MagneticPole(y) & Compasse(z)) -> PointsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_445", "prediction": "all x y z.((Compass(x) & MagneticPole(y) & MagneticPole(z)) -> PointTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_445", "prediction": "all x y z.((Compasse(x) & MagneticPole(y) & Pole(z)) -> PointsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_446", "prediction": "all x y.((Pole(x) & Compass(y)) -> PointsWith(x,y))", "score": 0}
{"id": "eqasc_validation_446", "prediction": "all x y z.((Pole(x) & Compass(y) & Compass(z)) -> PointsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_446", "prediction": "all x.(Pole(x) -> PointsWithCompass(x))", "score": 0}
{"id": "eqasc_validation_446", "prediction": "all x y.((Pole(x) & Compass(y)) -> PointWith(x,y))", "score": 0}
{"id": "eqasc_validation_446", "prediction": "all x y z.((Pole(x) & Compass(y) & Compass(z)) -> PointWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_446", "prediction": "all x y z.((Pole(x) & Compass(y) & Compass(z)) -> Point(x,y,z))", "score": 0}
{"id": "eqasc_validation_446", "prediction": "all x y z.((Pole(x) & Compass(y) & Compass(z) & PointsWith(x,y,z)) -> PointsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_446", "prediction": "all x y.((Pole(x) & Compass(y)) -> Point(x,y))", "score": 0}
{"id": "eqasc_validation_446", "prediction": "all x y z.((Pole(x) & Compass(y) & Compass(z)) -> PointedWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_446", "prediction": "all x y z.((Pole(x) & Compass(y) & Compass(z)) -> Points(x,y,z))", "score": 0}
{"id": "eqasc_validation_446", "prediction": "all x y z.((Pole(x) & Compass(y) & Compass(z)) -> UsedToPointWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_446", "prediction": "all x y z.((Pole(x) & Compass(y) & Compass(z) & PointsWith(x,y,z)) -> UsedToPointWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_446", "prediction": "all x y.((Pole(x) & Compass(y) & PointsWith(x,y)) -> UsedToPointWith(x,y))", "score": 0}
{"id": "eqasc_validation_446", "prediction": "all x y z.((Pole(x) & Compass(y) & Compass(z) & PointsWith(x,y,z)) -> UsedToPoint(x,y,z))", "score": 0}
{"id": "eqasc_validation_446", "prediction": "all x y z w.((Pole(x) & Compass(y) & Compass(z)) -> PointsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_446", "prediction": "all x y z.((Pole(x) & Compass(y) & Compass(z)) -> PointsWith(x,z))", "score": 0}
{"id": "eqasc_validation_447", "prediction": "all x y.((NaturalMagnetism(x) & MagneticPole(y)) -> PointsTo(x,y))", "score": 0}
{"id": "eqasc_validation_447", "prediction": "all x.(NaturalMagnetism(x) -> PointsToMagneticPoles(x))", "score": 0}
{"id": "eqasc_validation_447", "prediction": "all x y z.((NaturalMagnetism(x) & MagneticPole(y) & MagneticPole(z)) -> PointsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_447", "prediction": "all x y.((NaturalMagnetism(x) & MagneticPole(y)) -> PointTo(x,y))", "score": 0}
{"id": "eqasc_validation_447", "prediction": "all x y z.((NaturalMagnetism(x) & MagneticPole(y) & Pole(z)) -> PointsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_447", "prediction": "all x y z.((NaturalMagnetism(x) & MagneticPole(y) & Magnetism(z)) -> PointsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_447", "prediction": "all x.(NaturalMagnetism(x) -> PointsToMagneticalPoles(x))", "score": 0}
{"id": "eqasc_validation_447", "prediction": "all x y.((NaturalMagnetism(x) & MagnetismPole(y)) -> PointsTo(x,y))", "score": 0}
{"id": "eqasc_validation_447", "prediction": "all x y.((NaturalMagnetism(x) & MagneticPole(y)) -> UsedToPointTo(x,y))", "score": 0}
{"id": "eqasc_validation_447", "prediction": "all x y z.((NaturalMagnetism(x) & MagneticPole(y) & MagneticPole(z)) -> PointTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_447", "prediction": "all x y.((NaturalMagnetism(x) & MagneticPose(y)) -> PointsTo(x,y))", "score": 0}
{"id": "eqasc_validation_447", "prediction": "all x y z.((NaturalMagnetism(x) & Magnetism(y) & MagneticPole(z)) -> PointsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_447", "prediction": "all x y z.((NaturalMagnetism(x) & MagneticPole(y) & MagneticPose(z)) -> PointsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_447", "prediction": "all x y z.((NaturalMagnetism(x) & MagneticPole(y) & Pole(z)) -> PointTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_447", "prediction": "all x y z.((NaturalMagnetism(x) & MagneticPole(y) & MagneticPole(z)) -> UsedToPointTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_448", "prediction": "all x.(NaturalMagnet(x) -> (PermanentMagnet(x) & -LosesMagnetism(x)))", "score": 0}
{"id": "eqasc_validation_448", "prediction": "all x.(NaturalMagnet(x) -> (PermanentMagnet(x) & NeverLosesMagnetism(x)))", "score": 0}
{"id": "eqasc_validation_448", "prediction": "all x.(NaturalMagnet(x) -> (PermanentMagnet(x) & -LoseMagnetism(x)))", "score": 0}
{"id": "eqasc_validation_448", "prediction": "all x.(NaturalMagnet(x) -> (PermanentMagnet(x) & NeverLoseMagnetism(x)))", "score": 0}
{"id": "eqasc_validation_448", "prediction": "all x.(NaturalMagnet(x) -> (PermanentMagnet(x) & -LossMagnetism(x)))", "score": 0}
{"id": "eqasc_validation_448", "prediction": "all x.(NaturalMagnet(x) -> (PermanentMagnet(x) & -LowerMagnetism(x)))", "score": 0}
{"id": "eqasc_validation_448", "prediction": "all x.(NaturalMagnetic(x) -> (PermanentMagnet(x) & -LosesMagnetism(x)))", "score": 0}
{"id": "eqasc_validation_448", "prediction": "all x y.((NaturalMagnet(x) & PermanentMagnet(y)) -> -LosesMagnetism(x,y))", "score": 0}
{"id": "eqasc_validation_448", "prediction": "all x.(NaturalMagnet(x) -> (PermanentMagnet(x) & -LaysMagnetism(x)))", "score": 0}
{"id": "eqasc_validation_448", "prediction": "all x.(NaturalMagnet(x) -> (PermanentMagnetic(x) & -LosesMagnetism(x)))", "score": 0}
{"id": "eqasc_validation_448", "prediction": "all x.(NaturalMagnet(x) -> (PermanentMagnet(x) & -LosesMagneticism(x)))", "score": 0}
{"id": "eqasc_validation_448", "prediction": "all x y.((NaturalMagnet(x) & PermanentMagnet(y)) -> NeverLosesMagnetism(x,y))", "score": 0}
{"id": "eqasc_validation_449", "prediction": "all x y.((PermanentMagnet(x) & Compasse(y) & PointsNorth(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_449", "prediction": "all x.(PermanentMagnet(x) -> PointsNorth(x))", "score": 0}
{"id": "eqasc_validation_449", "prediction": "all x y.((PermanentMagnet(x) & Compasse(y)) -> PointsNorth(x,y))", "score": 0}
{"id": "eqasc_validation_449", "prediction": "all x y.((PermanentMagnet(x) & Compasse(y) & PointsNorth(y,x)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_449", "prediction": "all x y z.((PermanentMagnet(x) & Compasse(y) & NorthPoint(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_449", "prediction": "all x.(PermanentMagnet(x) -> (UsedForCompasses(x) & PointsNorth(x)))", "score": 0}
{"id": "eqasc_validation_449", "prediction": "all x y.((PermanentMagnet(x) & Compasse(y) & PointNorth(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_449", "prediction": "all x y.((PermanentMagnet(x) & Compasse(y) & PointsNorth(x,y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_449", "prediction": "all x y.((PermanentMagnet(x) & Compasse(y)) -> PointsNorth(y,x))", "score": 0}
{"id": "eqasc_validation_449", "prediction": "all x y.((PermanentMagnet(x) & Compasse(y)) -> PointsNorth(y))", "score": 0}
{"id": "eqasc_validation_449", "prediction": "all x y z.((PermanentMagnet(x) & Compasse(y) & North(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_449", "prediction": "all x.(PermanentMagnet(x) -> (UsedForCompasses(x) & PointNorth(x)))", "score": 0}
{"id": "eqasc_validation_449", "prediction": "all x y z.((PermanentMagnet(x) & Compasse(y) & North(z)) -> UsedForPointing(x,y,z))", "score": 0}
{"id": "eqasc_validation_449", "prediction": "all x y.((PermanentMagnet(x) & Compasse(y)) -> PointNorth(y))", "score": 0}
{"id": "eqasc_validation_449", "prediction": "all x.(PermanentMagnet(x) -> UsedForCompassPointingNorth(x))", "score": 0}
{"id": "eqasc_validation_450", "prediction": "all x.(NonmetalElement(x) -> FarFamerInNumber(x))", "score": 0}
{"id": "eqasc_validation_450", "prediction": "all x.(NonmetalElement(x) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_450", "prediction": "all x.(NonmetalElement(x) -> FewerInNumber(x))", "score": 0}
{"id": "eqasc_validation_450", "prediction": "all x.((NonmetalElement(x) & FarLessInNumber(x)) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_450", "prediction": "all x.((NonmetalElement(x) & FarFamerInNumber(x)) -> FarFamerInNumber(x))", "score": 0}
{"id": "eqasc_validation_450", "prediction": "all x.(NonMetalElement(x) -> FarFamerInNumber(x))", "score": 0}
{"id": "eqasc_validation_450", "prediction": "all x.((NonmetalElement(x) & FarFamerInNumber(x)) -> FewerInNumber(x))", "score": 0}
{"id": "eqasc_validation_450", "prediction": "all x.((NonmetalElement(x) & FarLessInNumber(x)) -> FewerInNumber(x))", "score": 0}
{"id": "eqasc_validation_450", "prediction": "all x.(NonMetalElement(x) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_450", "prediction": "all x.((NonmetalElement(x) & FarLessInNumber(x)) -> LessInNumber(x))", "score": 0}
{"id": "eqasc_validation_450", "prediction": "all x.((Element(x) & -Metal(x)) -> FewerInNumber(x))", "score": 0}
{"id": "eqasc_validation_450", "prediction": "all x.((NonmetalElement(x) & FarFamer(x)) -> FewerInNumber(x))", "score": 0}
{"id": "eqasc_validation_450", "prediction": "all x.((Element(x) & -Metal(x)) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_450", "prediction": "all x.(NonmetalElement(x) -> FarFarLiderInNumber(x))", "score": 0}
{"id": "eqasc_validation_450", "prediction": "all x.((NonmetalElement(x) & FewerInNumber(x)) -> FewerInNumber(x))", "score": 0}
{"id": "eqasc_validation_450", "prediction": "all x.((NonmetalElement(x) & FarLessInNumber(x)) -> FarLergerInNumber(x))", "score": 0}
{"id": "eqasc_validation_451", "prediction": "all x.(Titanium(x) -> (LuxuriousWhiteMetallicElement(x) & MetallicElement(x)))", "score": 0}
{"id": "eqasc_validation_451", "prediction": "all x.(Titanium(x) -> (LightlyWhiteMetallicElement(x) & MetallicElement(x)))", "score": 0}
{"id": "eqasc_validation_451", "prediction": "all x.(Titanium(x) -> (LuxuriousWhiteMetallicElement(x) & MetallicElement(x) & MetallicElement(x)))", "score": 0}
{"id": "eqasc_validation_451", "prediction": "all x.(Titanium(x) -> (LuxuriousWhiteMetallicElement(x) & Metallic(x)))", "score": 0}
{"id": "eqasc_validation_451", "prediction": "all x.(Titanium(x) -> (LubriousWhiteMetallicElement(x) & MetallicElement(x)))", "score": 0}
{"id": "eqasc_validation_451", "prediction": "all x.(Titanium(x) -> (LuxuriousWhiteMetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x)))", "score": 0}
{"id": "eqasc_validation_451", "prediction": "all x.(Titanium(x) -> (LuxuriousWhiteMetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x)))", "score": 0}
{"id": "eqasc_validation_451", "prediction": "all x.(Titanium(x) -> (LuxuriousWhiteMetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x)))", "score": 0}
{"id": "eqasc_validation_451", "prediction": "all x.(Titanium(x) -> (LuxuriousWhiteMetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x)))", "score": 0}
{"id": "eqasc_validation_451", "prediction": "all x.(Titanium(x) -> (LuxuriousWhiteMetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x)))", "score": 0}
{"id": "eqasc_validation_451", "prediction": "all x.(Titanium(x) -> (LuxuriousWhiteMetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x)))", "score": 0}
{"id": "eqasc_validation_451", "prediction": "all x.(Titanium(x) -> (LightlyWhiteMetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x)))", "score": 0}
{"id": "eqasc_validation_451", "prediction": "all x.(Titanium(x) -> (LightlyWhiteMetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x)))", "score": 0}
{"id": "eqasc_validation_451", "prediction": "all x.(Titanium(x) -> (LightlyWhiteMetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x)))", "score": 0}
{"id": "eqasc_validation_451", "prediction": "all x.(Titanium(x) -> (LightlyWhiteMetallicElement(x) & MetallicElement(x) & MetallicElement(x)))", "score": 0}
{"id": "eqasc_validation_451", "prediction": "all x.(Titanium(x) -> (LightlyWhiteMetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x) & MetallicElement(x)))", "score": 0}
{"id": "eqasc_validation_452", "prediction": "all x.(Titanium(x) -> -NonMetal(x))", "score": 0}
{"id": "eqasc_validation_452", "prediction": "all x.(Titanium(x) -> -(NonMetal(x) & -Metal(x)))", "score": 0}
{"id": "eqasc_validation_452", "prediction": "all x.(Titanium(x) -> -Metal(x))", "score": 0}
{"id": "eqasc_validation_452", "prediction": "all x.(Titanium(x) -> -(NonMetal(x) & -Metal(x))))", "score": -1}
{"id": "eqasc_validation_452", "prediction": "all x.(Titanium(x) -> -MetalNonMetal(x))", "score": 0}
{"id": "eqasc_validation_452", "prediction": "all x.(Titanium(x) -> -(NonMetal(x) & -NonMetal(x)))", "score": 0}
{"id": "eqasc_validation_452", "prediction": "all x.(Titanium(x) -> -(MetalNonMetal(x) & -MetalNonMetal(x)))", "score": 0}
{"id": "eqasc_validation_452", "prediction": "all x.(Titanium(x) -> -(NonMetal(x) & NonMetal(x)))", "score": 0}
{"id": "eqasc_validation_452", "prediction": "all x.(Titanium(x) -> -(NonMetal(x) & -Metal(x) & -Metal(x)))", "score": 0}
{"id": "eqasc_validation_452", "prediction": "all x.(Titanium(x) -> -(NonMetal(x) & -(NonMetal(x) & -Metal(x))))", "score": 0}
{"id": "eqasc_validation_452", "prediction": "all x.(Titanium(x) -> -(NonMetal(x) & -(NonMetal(x) & NonMetal(x))))", "score": 0}
{"id": "eqasc_validation_452", "prediction": "all x.(Titanium(x) -> -(NonMetal(x) & NonMetal(x))))", "score": -1}
{"id": "eqasc_validation_452", "prediction": "all x.(Titanium(x) -> -(NonMetal(x) & Metal(x)))", "score": 0}
{"id": "eqasc_validation_452", "prediction": "all x.(Titanium(x) -> (-Metal(x) & -Metal(x)))", "score": 0}
{"id": "eqasc_validation_452", "prediction": "all x.(Titanium(x) -> (-NonMetal(x) & -NonMetal(x)))", "score": 0}
{"id": "eqasc_validation_453", "prediction": "all x.(Nonmetal(x) -> Element(x,17))", "score": 0}
{"id": "eqasc_validation_453", "prediction": "all x.(Nonmetal(x) -> (ElementsInUpperRightHandCrown(x) & ElementsInUpperRightHandCrown(x)))", "score": 0}
{"id": "eqasc_validation_453", "prediction": "all x.(Nonmetal(x) -> (Element(x,17) & UpperRightHandCrown(x)))", "score": 0}
{"id": "eqasc_validation_453", "prediction": "all x.((Element(x) & UpperRightHandCrown(x)) -> Nonmetal(x))", "score": 0}
{"id": "eqasc_validation_453", "prediction": "all x.(Nonmetal(x) -> UpperRightHandElement(x,17))", "score": 0}
{"id": "eqasc_validation_453", "prediction": "all x y.((Nonmetal(x) & Element(y)) -> UpperRightHandCrownOfPeriodicTable(x,y))", "score": 0}
{"id": "eqasc_validation_453", "prediction": "all x.(Nonmetal(x) -> UpperRightHandCrownOfPeriodicTable(x))", "score": 0}
{"id": "eqasc_validation_453", "prediction": "all x y.((Nonmetal(x) & PeriodicalTable(y)) -> Element(x,y))", "score": 0}
{"id": "eqasc_validation_453", "prediction": "all x.(Nonmetal(x) -> (Elements(x,17) & UpperRightHandCrown(x)))", "score": 0}
{"id": "eqasc_validation_453", "prediction": "all x y.((Nonmetal(x) & PeriodicTable(y)) -> Element(x,y))", "score": 0}
{"id": "eqasc_validation_453", "prediction": "all x.(Nonmetal(x) -> UpperRightHandCrownOfPeriodicTable(x,17))", "score": 0}
{"id": "eqasc_validation_453", "prediction": "all x y.((Nonmetal(x) & Element(y)) -> UpperRightHandCrown(x,y))", "score": 0}
{"id": "eqasc_validation_453", "prediction": "all x y z.((Nonmetal(x) & Element(y) & PeriodicalTable(z)) -> UpperRightHandCrown(y,z))", "score": 0}
{"id": "eqasc_validation_453", "prediction": "all x y z.((Nonmetal(x) & Element(y) & PeriodicalTable(z)) -> UpperRightHandCrown(x,y,z))", "score": 0}
{"id": "eqasc_validation_453", "prediction": "all x.(Nonmetal(x) -> (Element(x,17) & UpperRightHandCoin(x)))", "score": 0}
{"id": "eqasc_validation_453", "prediction": "all x y.((Nonmetal(x) & Element(y)) -> UpperRightHandCrownOfPeriodicalTable(x,y))", "score": 0}
{"id": "eqasc_validation_454", "prediction": "all x y.((PeriodicTable(x) & Element(y) & ListedInRightHandCoin(x,y)) -> FarFarFamer(x,y))", "score": 0}
{"id": "eqasc_validation_454", "prediction": "all x y.((PeriodicTable(x) & Element(y) & ListedInRightHandCoin(x,y)) -> FarFamer(x,y))", "score": 0}
{"id": "eqasc_validation_454", "prediction": "all x y.((PeriodicTable(x) & Element(y) & ListedInRightHandCoin(x,y)) -> FarFarFarFamer(x,y))", "score": 0}
{"id": "eqasc_validation_454", "prediction": "all x.(PeriodicTable(x) -> FarFamerElementsInRightHandCoin(x))", "score": 0}
{"id": "eqasc_validation_454", "prediction": "all x y.((PeriodicalTable(x) & Element(y) & ListedInRightHandCoin(x,y)) -> FarFarFamer(x,y))", "score": 0}
{"id": "eqasc_validation_454", "prediction": "all x y.((PeriodicTable(x) & Element(y) & ListedInRightHandCoin(x,y)) -> FarFarFarFarFamer(x,y))", "score": 0}
{"id": "eqasc_validation_454", "prediction": "all x y.((PeriodicTable(x) & Element(y) & ListedInRightHandCoin(x,y)) -> FarFarFarFarFarFamer(x,y))", "score": 0}
{"id": "eqasc_validation_454", "prediction": "all x y.((PeriodicTable(x) & Element(y) & ListedInRightHandCrown(x,y)) -> FarFarFamer(x,y))", "score": 0}
{"id": "eqasc_validation_454", "prediction": "all x y.((PeriodicalTable(x) & Element(y) & ListedInRightHandCoin(x,y)) -> FarFamer(x,y))", "score": 0}
{"id": "eqasc_validation_454", "prediction": "all x y.((PeriodicTable(x) & Element(y) & ListedInRightHandCoin(x,y)) -> Fewer(x,y))", "score": 0}
{"id": "eqasc_validation_454", "prediction": "all x y.((PeriodicTable(x) & Element(y) & ListedInRightHandCoin(x,y)) -> FarFarFarFarFarFarFarFarFarFarFarRightHandCoin(x,y))", "score": 0}
{"id": "eqasc_validation_454", "prediction": "all x y.((PeriodicalTable(x) & Element(y) & ListedInRightHandCoin(x,y)) -> FarFarFarFamer(x,y))", "score": 0}
{"id": "eqasc_validation_454", "prediction": "all x y.((PeriodicTable(x) & Element(y) & ListedInRightHandCoin(x,y)) -> FarFarFarFarFarFarFamer(x,y))", "score": 0}
{"id": "eqasc_validation_454", "prediction": "all x y.((PeriodicTable(x) & Element(y) & ListedInRightHandCoin(x,y)) -> FarFarFarFarFarFarFarFarFarFarRightHandCoin(x,y))", "score": 0}
{"id": "eqasc_validation_454", "prediction": "all x y.((PeriodicTable(x) & Element(y) & ListedInRightHandCoin(x,y)) -> FarFarFarFarFarFarFarFarFarFarFarFarRightHandCoin(x,y))", "score": 0}
{"id": "eqasc_validation_454", "prediction": "all x.(PeriodicTable(x) -> FarFarFamerElementsInRightHandCoin(x))", "score": 0}
{"id": "eqasc_validation_455", "prediction": "all x.(Element(x) -> ComposedOfAtoms(x))", "score": 0}
{"id": "eqasc_validation_455", "prediction": "all x.(Elements(x) -> ComposedOfAtoms(x))", "score": 0}
{"id": "eqasc_validation_455", "prediction": "all x y.((Element(x) & Atom(y)) -> ComposedOf(x,y))", "score": 0}
{"id": "eqasc_validation_455", "prediction": "all x y z.((Element(x) & Atom(y) & Atom(z)) -> ComposedOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_455", "prediction": "all x.(Element(x) -> (ComposedOfAtoms(x) & ComposedOfAtoms(x)))", "score": 0}
{"id": "eqasc_validation_455", "prediction": "all x y.((Elements(x) & Atom(y)) -> ComposedOf(x,y))", "score": 0}
{"id": "eqasc_validation_455", "prediction": "all x.((Element(x) & ComposedOfAtoms(x)) -> ComposedOfAtoms(x))", "score": 0}
{"id": "eqasc_validation_455", "prediction": "all x.(Elements(x) -> (ComposedOfAtoms(x) & ComposedOfAtoms(x)))", "score": 0}
{"id": "eqasc_validation_455", "prediction": "all x.(Element(x) -> exists y.(Atom(y) & ComposedOf(x,y)))", "score": 0}
{"id": "eqasc_validation_455", "prediction": "all x.((Element(x) & ComposedOfAtoms(x)) -> ComposedOf(x,Atoms))", "score": 0}
{"id": "eqasc_validation_455", "prediction": "all x.(Element(x) -> exists y.(Atom(y) & ComposedOf(x,y))))", "score": -1}
{"id": "eqasc_validation_455", "prediction": "all x.(Element(x) -> (ComposedOfAtoms(x) | ComposedOfAtoms(x)))", "score": 0}
{"id": "eqasc_validation_455", "prediction": "all x y z.((Element(x) & Atom(y) & Atom(z)) -> ComposedOf(x,y))", "score": 0}
{"id": "eqasc_validation_455", "prediction": "all x.(Element(x) -> ComposedOf(x,Atoms))", "score": 0}
{"id": "eqasc_validation_456", "prediction": "all x.(NonmetalAtomicMaterial(x) -> FewerInNumber(x))", "score": 0}
{"id": "eqasc_validation_456", "prediction": "all x.(NonmetalAtomicMaterial(x) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_456", "prediction": "all x.((NonmetalAtomicMaterial(x) & FarLessInNumber(x)) -> FewerInNumber(x))", "score": 0}
{"id": "eqasc_validation_456", "prediction": "all x.(NonMetalAtomicMaterial(x) -> FewerInNumber(x))", "score": 0}
{"id": "eqasc_validation_456", "prediction": "all x.((Material(x) & -Metal(x)) -> FewerInNumber(x))", "score": 0}
{"id": "eqasc_validation_456", "prediction": "all x.((NonmetalAtomicMaterial(x) & FarLessInNumber(x)) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_456", "prediction": "all x.((Nonmetal(x) & AtomicMaterial(x)) -> FewerInNumber(x))", "score": 0}
{"id": "eqasc_validation_456", "prediction": "all x.((NonmetalAtomicMaterial(x) & FarFarLessInNumber(x)) -> FewerInNumber(x))", "score": 0}
{"id": "eqasc_validation_456", "prediction": "all x.((NonmetalAtomicMaterial(x) & FarLessInNumber(x)) -> LessInNumber(x))", "score": 0}
{"id": "eqasc_validation_456", "prediction": "all x.((NonmetalAtomicMaterial(x) & FarLeastNumber(x)) -> FewerInNumber(x))", "score": 0}
{"id": "eqasc_validation_456", "prediction": "all x.((NonMetalAtomicMaterial(x) & FarLessInNumber(x)) -> FewerInNumber(x))", "score": 0}
{"id": "eqasc_validation_456", "prediction": "all x.((NonMetalAtomicMaterial(x) & FarLessInNumber(x)) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_456", "prediction": "all x.((NonmetalAtomicMaterial(x) & FewerInNumber(x)) -> -Material(x))", "score": 0}
{"id": "eqasc_validation_456", "prediction": "all x.((NonmetalAtomicMaterial(x) & FarFarLessInNumber(x)) -> LessInNumber(x))", "score": 0}
{"id": "eqasc_validation_456", "prediction": "all x.((NonmetalAtomicMaterial(x) & FarFarLessInNumber(x)) -> FarFarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_456", "prediction": "all x.((Nonmetal(x) & AtomicMaterial(x)) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_457", "prediction": "all x y.((Element(x) & PeriodicTable(y)) -> GroupedInto(x,y))", "score": 0}
{"id": "eqasc_validation_457", "prediction": "all x.(Element(x) -> PeriodicTable(x))", "score": 0}
{"id": "eqasc_validation_457", "prediction": "all x y z.((Element(x) & PeriodicTable(y) & PeriodicTable(z)) -> GroupedInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_457", "prediction": "all x y.((Elements(x) & PeriodicTable(y)) -> GroupedInto(x,y))", "score": 0}
{"id": "eqasc_validation_457", "prediction": "all x y z.((Element(x) & PeriodicTable(y) & PeriodicTable(z)) -> GroupedInto(x,y))", "score": 0}
{"id": "eqasc_validation_457", "prediction": "all x y.((Element(x) & PeriodicTable(y)) -> GroupedIn(x,y))", "score": 0}
{"id": "eqasc_validation_457", "prediction": "all x.(Elements(x) -> PeriodicTable(x))", "score": 0}
{"id": "eqasc_validation_457", "prediction": "all x y z.((Element(x) & PeriodicTable(y) & PeriodicTable(z)) -> GroupedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_457", "prediction": "all x y z.((Element(x) & PeriodicTable(y) & Element(z)) -> GroupedInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_457", "prediction": "all x y z.((Elements(x) & PeriodicTable(y) & PeriodicTable(z)) -> GroupedInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_457", "prediction": "all x y.((Element(x) & PeriodicTable(y)) -> Grouped(x,y))", "score": 0}
{"id": "eqasc_validation_457", "prediction": "all x y.((Element(x) & PeriodicalTable(y)) -> GroupedInto(x,y))", "score": 0}
{"id": "eqasc_validation_457", "prediction": "all x.((Element(x) & PeriodicTable(x)) -> GroupedInto(x,y))", "score": 0}
{"id": "eqasc_validation_457", "prediction": "all x y z.((Element(x) & PeriodicTable(y)) -> GroupedInto(x,y))", "score": 0}
{"id": "eqasc_validation_457", "prediction": "all x y z.((Element(x) & PeriodicTable(y) & PeriodicTable(z)) -> Grouped(x,y,z))", "score": 0}
{"id": "eqasc_validation_457", "prediction": "all x.(Element(x) -> GroupedIntoPeriodicTable(x))", "score": 0}
{"id": "eqasc_validation_458", "prediction": "all x.(NonMetalPeriodicTableGroup(x) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_458", "prediction": "all x.((NonMetalPeriodicTableGroup(x) & FarLessInNumber(x)) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_458", "prediction": "all x.((NonMetalPeriodicTableGroup(x) & FarFamerInNumber(x)) -> FarFamerInNumber(x))", "score": 0}
{"id": "eqasc_validation_458", "prediction": "all x.((NonMetalPeriodicalTableGroup(x) & FarLessInNumber(x)) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_458", "prediction": "all x.((NonmetalPeriodicTableGroup(x) & FarLessInNumber(x)) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_458", "prediction": "all x y.((NonMetalPeriodicTableGroup(x) & NonMetalPeriodicTableGroup(y)) -> FarLessInNumber(x,y))", "score": 0}
{"id": "eqasc_validation_458", "prediction": "all x.(NonMetalPeriodicalTableGroup(x) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_458", "prediction": "all x.((NonMetalPeriodicTableGroup(x) & FarLessInNumber(x)) -> LessInNumber(x))", "score": 0}
{"id": "eqasc_validation_458", "prediction": "all x.(NonmetalPeriodicTableGroup(x) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_458", "prediction": "all x.((NonMetalPeriodicTableGroup(x) & FarLessInNumber(x)) -> FarLowerInNumber(x))", "score": 0}
{"id": "eqasc_validation_458", "prediction": "all x.((NonMetalPeriodicTableGroup(x) & FarLessInNumberOfNumber(x)) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_458", "prediction": "all x.(NonMetalPeriodicTableGroup(x) -> FarFamerInNumber(x))", "score": 0}
{"id": "eqasc_validation_458", "prediction": "all x.((NonMetalPeriodicTableGroup(x) & FarLessInNumber(x)) -> FarLargerInNumber(x))", "score": 0}
{"id": "eqasc_validation_458", "prediction": "all x.((NonMetalPeriodicTableGroup(x) & FarLessInNumber(x)) -> FarLergerInNumber(x))", "score": 0}
{"id": "eqasc_validation_458", "prediction": "all x.((NonMetalPeriodicTableGroup(x) & FarLessInNumber(x)) -> FarLigerInNumber(x))", "score": 0}
{"id": "eqasc_validation_458", "prediction": "all x.((NonMetalPeriodicTableGroup(x) & FarLessInNumber(x)) -> FarLiderInNumber(x))", "score": 0}
{"id": "eqasc_validation_459", "prediction": "all x.(Element(x) -> (Metal(x) | Nonmetal(x) | Metalloid(x)))", "score": 0}
{"id": "eqasc_validation_459", "prediction": "all x.(Element(x) -> (Metal(x) | NonMetal(x) | Metalloid(x)))", "score": 0}
{"id": "eqasc_validation_459", "prediction": "all x.(Element(x) -> (Metal(x) | -Metal(x) | Metalloid(x)))", "score": 0}
{"id": "eqasc_validation_459", "prediction": "exists x.(Element(x) & (Metal(x) | Nonmetal(x) | Metalloid(x)))", "score": 0}
{"id": "eqasc_validation_459", "prediction": "all x.(Element(x) -> (MetalElement(x) | NonmetalElement(x) | MetalloidElement(x)))", "score": 0}
{"id": "eqasc_validation_459", "prediction": "all x.(Electron(x) -> (Metal(x) | Nonmetal(x) | Metalloid(x)))", "score": 0}
{"id": "eqasc_validation_459", "prediction": "all x.((Element(x) & (Metal(x) | Nonmetal(x) | Metalloid(x))) -> Element(x))", "score": 0}
{"id": "eqasc_validation_459", "prediction": "exists x.(Element(x) & (Metal(x) | -Metal(x) | Metalloid(x)))", "score": 0}
{"id": "eqasc_validation_459", "prediction": "all x.(Elements(x) -> (Metal(x) | Nonmetal(x) | Metalloid(x)))", "score": 0}
{"id": "eqasc_validation_459", "prediction": "(all x.(Element(x) -> (Metal(x) | -Metal(x) | Metalloid(x))))", "score": 0}
{"id": "eqasc_validation_459", "prediction": "(all x.(Element(x) -> (Metal(x) | Nonmetal(x) | Metalloid(x))))", "score": 0}
{"id": "eqasc_validation_459", "prediction": "all x.((Element(x) & (Metal(x) | Nonmetal(x) | Metalloid(x))) -> Elements(x))", "score": 0}
{"id": "eqasc_validation_459", "prediction": "all x.(Element(x) -> (Material(x) | Nonmetal(x) | Metalloid(x)))", "score": 0}
{"id": "eqasc_validation_459", "prediction": "all x.((Element(x) & (Metal(x) | Nonmetal(x) | Metalloid(x))) -> Metal(x))", "score": 0}
{"id": "eqasc_validation_459", "prediction": "exists x.(Element(x) & (Metal(x) | NonMetal(x) | Metalloid(x)))", "score": 0}
{"id": "eqasc_validation_460", "prediction": "all x.((Element(x) & -Metal(x) & -Metalloid(x)) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_460", "prediction": "all x.((Element(x) & -Metal(x) & -Metalloid(x)) -> FarFamerInNumber(x))", "score": 0}
{"id": "eqasc_validation_460", "prediction": "all x.((Element(x) & -Metal(x) & -Metalloid(x)) -> FarLergerInNumber(x))", "score": 0}
{"id": "eqasc_validation_460", "prediction": "all x.((Element(x) & -Metal(x) & -Metalloid(x)) -> FarLargerInNumber(x))", "score": 0}
{"id": "eqasc_validation_460", "prediction": "all x.((Element(x) & -Metal(x) & -Metalloid(x)) -> FarLessNumber(x))", "score": 0}
{"id": "eqasc_validation_460", "prediction": "all x.((Element(x) & -Metal(x) & -Metalloid(x)) -> FarLowerInNumber(x))", "score": 0}
{"id": "eqasc_validation_460", "prediction": "all x.((Element(x) & -Metal(x) & -Metalloid(x)) -> FarFarFamerInNumber(x))", "score": 0}
{"id": "eqasc_validation_460", "prediction": "all x.((Element(x) & -Metal(x) & -Metalloid(x)) -> FewerInNumber(x))", "score": 0}
{"id": "eqasc_validation_460", "prediction": "all x.((Element(x) & -Metal(x) & -Metalloid(x)) -> FarLeastNumber(x))", "score": 0}
{"id": "eqasc_validation_460", "prediction": "all x.((Element(x) & -Metal(x) & -Metalloid(x)) -> FarFarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_460", "prediction": "all x.((Element(x) & -Metal(x) & -Metalloid(x)) -> Far FewerInNumber(x))", "score": -1}
{"id": "eqasc_validation_460", "prediction": "all x.((Element(x) & -Metal(x) & -Metalloid(x)) -> FarLerserInNumber(x))", "score": 0}
{"id": "eqasc_validation_460", "prediction": "all x.((Element(x) & -Metal(x) & -Metalloid(x)) -> FarLiderInNumber(x))", "score": 0}
{"id": "eqasc_validation_460", "prediction": "all x.((Element(x) & -Metal(x) & -Metalloid(x)) -> FarFarLiderInNumber(x))", "score": 0}
{"id": "eqasc_validation_460", "prediction": "all x.((Element(x) & -Metal(x) & -Metalloid(x)) -> FarLessNumbers(x))", "score": 0}
{"id": "eqasc_validation_460", "prediction": "all x.((Element(x) & -Metal(x) & -Metalloid(x)) -> FarLeastNumberInNumber(x))", "score": 0}
{"id": "eqasc_validation_461", "prediction": "all x y.((Nonmetal(x) & PeriodicTable(y)) -> (On(x,y) & On(x,y)))", "score": 0}
{"id": "eqasc_validation_461", "prediction": "all x.((Nonmetal(x) & PeriodicTable(x)) -> 17(x))", "score": 0}
{"id": "eqasc_validation_461", "prediction": "all x y z.((Nonmetal(x) & PeriodicTable(y) & Nonmetal(z)) -> (On(x,y,z) & On(x,y)))", "score": 0}
{"id": "eqasc_validation_461", "prediction": "all x y.((Nonmetal(x) & PeriodicTable(y)) -> (Nonmetal(x,y) & Nonmetal(x,y)))", "score": 0}
{"id": "eqasc_validation_461", "prediction": "all x y z.((Nonmetal(x) & PeriodicTable(y) & Nonmetal(z)) -> (On(x,y) & On(x,z)))", "score": 0}
{"id": "eqasc_validation_461", "prediction": "all x y.((Nonmetal(x) & PeriodicTable(y)) -> (Nonmetal(x,y) | Nonmetal(x,y)))", "score": 0}
{"id": "eqasc_validation_461", "prediction": "all x y z.((Nonmetal(x) & PeriodicalTable(y) & Nonmetal(z)) -> (On(x,y,z) & On(x,y)))", "score": 0}
{"id": "eqasc_validation_461", "prediction": "all x y z.((Nonmetal(x) & PeriodicTable(y) & Nonmetal(z)) -> On(x,y,z))", "score": 0}
{"id": "eqasc_validation_461", "prediction": "all x y.((Nonmetal(x) & PeriodicalTable(y)) -> (Nonmetal(x,y) & Nonmetal(x,y)))", "score": 0}
{"id": "eqasc_validation_461", "prediction": "all x y.((Nonmetal(x) & PeriodicTable(y)) -> ThereAre17(x,y))", "score": 0}
{"id": "eqasc_validation_461", "prediction": "all x.((Nonmetal(x) & PeriodicTable(x,17)) -> Nonmetal(x))", "score": 0}
{"id": "eqasc_validation_461", "prediction": "all x y z.((Nonmetal(x) & PeriodicalTable(y) & Nonmetal(z)) -> (On(x,y) & On(x,z)))", "score": 0}
{"id": "eqasc_validation_461", "prediction": "all x.((Nonmetal(x) & PeriodicalTable(x,17)) -> Nonmetal(x))", "score": 0}
{"id": "eqasc_validation_461", "prediction": "all x y.((Nonmetal(x) & PeriodicalTable(y)) -> (Nonmetal(x,y) | Nonmetal(x,y)))", "score": 0}
{"id": "eqasc_validation_461", "prediction": "all x y.((Nonmetal(x) & PeriodicTable(y)) -> ThereAre(x,y))", "score": 0}
{"id": "eqasc_validation_461", "prediction": "all x y z.((Nonmetal(x) & PeriodicalTable(y) & Nonmetal(z)) -> On(x,y,z))", "score": 0}
{"id": "eqasc_validation_462", "prediction": "all x.((Element(x) & ToRightOfSemiconductors(x)) -> Nonmetals(x))", "score": 0}
{"id": "eqasc_validation_462", "prediction": "all x.((Element(x) & ToRightOfSemiconductors(x)) -> Nonmetal(x))", "score": 0}
{"id": "eqasc_validation_462", "prediction": "all x y.((Element(x) & Semiconductor(y) & ToRightOf(x,y)) -> Nonmetal(x))", "score": 0}
{"id": "eqasc_validation_462", "prediction": "all x.((Element(x) & RightOfSemiconductors(x)) -> Nonmetals(x))", "score": 0}
{"id": "eqasc_validation_462", "prediction": "all x.((Element(x) & RightOfSemiconductors(x)) -> Nonmetal(x))", "score": 0}
{"id": "eqasc_validation_462", "prediction": "all x y.((Element(x) & Semiconductor(y) & ToRightOf(x,y)) -> Nonmetals(x))", "score": 0}
{"id": "eqasc_validation_462", "prediction": "all x y.((Element(x) & Semiconductor(y) & RightOf(x,y)) -> Nonmetal(x))", "score": 0}
{"id": "eqasc_validation_462", "prediction": "all x.((Element(x) & ToTheRightOfSemiconductors(x)) -> Nonmetals(x))", "score": 0}
{"id": "eqasc_validation_462", "prediction": "all x y.((Element(x) & Semiconductor(y) & ToRight(x,y)) -> Nonmetal(x))", "score": 0}
{"id": "eqasc_validation_462", "prediction": "all x.((Element(x) & RightOfSemiconductor(x)) -> Nonmetal(x))", "score": 0}
{"id": "eqasc_validation_462", "prediction": "all x.((Element(x) & ToTheRightOfSemiconductors(x)) -> Nonmetal(x))", "score": 0}
{"id": "eqasc_validation_463", "prediction": "all x y.((Element(x) & Semiconductor(y) & RightOf(x,y)) -> FarLessInNumber(x,y))", "score": 0}
{"id": "eqasc_validation_463", "prediction": "all x.((Element(x) & RightOfSemiconductors(x)) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_463", "prediction": "all x y.((Element(x) & Semiconductor(y) & ToRightOf(x,y)) -> FarLessInNumber(x,y))", "score": 0}
{"id": "eqasc_validation_463", "prediction": "all x.((Element(x) & ToRightOfSemiconductors(x)) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_463", "prediction": "all x.((Element(x) & ToTheRightOfSemiconductors(x)) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_463", "prediction": "all x.((ElementsToRightOfSemiconductors(x) & FarLessInNumber(x)) -> Semiconductor(x))", "score": 0}
{"id": "eqasc_validation_463", "prediction": "all x y.((Element(x) & Semiconductor(y) & RightOf(x,y)) -> FarLergerInNumber(x,y))", "score": 0}
{"id": "eqasc_validation_463", "prediction": "all x.((Element(x) & RightOfSemiconductors(x)) -> FarLergerInNumber(x))", "score": 0}
{"id": "eqasc_validation_463", "prediction": "all x.((Element(x) & RightOfSemiconductor(x)) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_463", "prediction": "all x.((ElementsToRightOfSemiconductors(x) & FarLergerInNumber(x)) -> Semiconductor(x))", "score": 0}
{"id": "eqasc_validation_463", "prediction": "all x y.((Element(x) & Semiconductor(y) & ToRightOf(x,y)) -> FarLergerInNumber(x,y))", "score": 0}
{"id": "eqasc_validation_463", "prediction": "all x y.((Element(x) & Semiconductor(y) & ToRightOf(x,y)) -> FarFamerInNumber(x,y))", "score": 0}
{"id": "eqasc_validation_463", "prediction": "all x.((ElementsToRightOfSemiconductors(x) & FarLessInNumber(x)) -> FewerInNumber(x))", "score": 0}
{"id": "eqasc_validation_463", "prediction": "all x.((ElementsToRightOfSemiconductors(x) & FarLessInNumber(x)) -> SemiconductorElements(x))", "score": 0}
{"id": "eqasc_validation_463", "prediction": "all x y.((Element(x) & Semiconductor(y) & ToRightOf(x,y)) -> FarFarFamerInNumber(x,y))", "score": 0}
{"id": "eqasc_validation_463", "prediction": "all x.((ElementsToRightOfSemiconductors(x) & FarFamerInNumber(x)) -> Semiconductor(x))", "score": 0}
{"id": "eqasc_validation_464", "prediction": "all x.(BloodType(x) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_464", "prediction": "all x.((BloodType(x) & ImportantForMedicalCauses(x)) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_464", "prediction": "all x.(BloodType(x) -> ImportantForMedicalRates(x))", "score": 0}
{"id": "eqasc_validation_464", "prediction": "all x.((BloodType(x) & ImportantForMedicalRates(x)) -> ImportantForMedicalRates(x))", "score": 0}
{"id": "eqasc_validation_464", "prediction": "all x.((BloodType(x) & MedicalRates(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_464", "prediction": "all x y.((BloodType(x) & Medical(y)) -> ImportantFor(x,y))", "score": 0}
{"id": "eqasc_validation_464", "prediction": "all x.((BloodType(x) & Medical(x)) -> ImportantFor(x,y))", "score": 0}
{"id": "eqasc_validation_464", "prediction": "all x.(BloodType(x) -> ImportantForMedicalPurposes(x))", "score": 0}
{"id": "eqasc_validation_464", "prediction": "all x.((BloodType(x) & MedicalCauses(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_464", "prediction": "all x.((BloodType(x) & MedicalRates(x)) -> ImportantFor(x,y))", "score": 0}
{"id": "eqasc_validation_464", "prediction": "all x.((BloodType(x) & MedicalCauses(x)) -> ImportantFor(x,y))", "score": 0}
{"id": "eqasc_validation_464", "prediction": "all x y.((BloodType(x) & MedicalRates(y)) -> ImportantFor(x,y))", "score": 0}
{"id": "eqasc_validation_464", "prediction": "all x.((BloodType(x) & MedicalRates(x)) -> ImportantFor(x))", "score": 0}
{"id": "eqasc_validation_464", "prediction": "all x.(BloodType(x) -> ImportantForMedical(x))", "score": 0}
{"id": "eqasc_validation_464", "prediction": "all x.((BloodType(x) & MedicalCause(x)) -> ImportantFor(x,y))", "score": 0}
{"id": "eqasc_validation_464", "prediction": "all x.((BloodType(x) & MedicalCauses(x)) -> ImportantFor(x))", "score": 0}
{"id": "eqasc_validation_465", "prediction": "all x y.((SeriousEmergency(x) & Team(y)) -> KnowsCompatibleBloodTypes(y,x))", "score": 0}
{"id": "eqasc_validation_465", "prediction": "all x.(SeriousEmergency(x) -> KnowsCompatibleBloodTypes(x))", "score": 0}
{"id": "eqasc_validation_465", "prediction": "all x.((Emergency(x) & Serious(x)) -> KnowsCompatibleBloodTypes(x))", "score": 0}
{"id": "eqasc_validation_465", "prediction": "all x y.((SeriousEmergency(x) & Team(y)) -> KnowsCompatibleBloodTypes(y))", "score": 0}
{"id": "eqasc_validation_465", "prediction": "all x y.((SeriousEmergency(x) & Team(y)) -> KnowsCompatibleBloodType(y,x))", "score": 0}
{"id": "eqasc_validation_465", "prediction": "all x y z.((SeriousEmergency(x) & Team(y) & BloodType(z)) -> KnowsCompatible(y,z))", "score": 0}
{"id": "eqasc_validation_465", "prediction": "all x y.((SeriousEmergency(x) & Team(y) & HasCompatibleBloodTypes(y,x)) -> Knows(y,x))", "score": 0}
{"id": "eqasc_validation_465", "prediction": "all x y z.((SeriousEmergency(x) & Team(y) & BloodType(z)) -> Knows(y,z))", "score": 0}
{"id": "eqasc_validation_465", "prediction": "all x y.((Emergency(x) & Team(y) & Serious(x)) -> KnowsCompatibleBloodTypes(y,x))", "score": 0}
{"id": "eqasc_validation_465", "prediction": "all x.((SeriousEmergency(x) & Team(x)) -> KnowsCompatibleBloodTypes(x))", "score": 0}
{"id": "eqasc_validation_465", "prediction": "all x y.((Emergency(x) & Serious(x)) -> KnowsCompatibleBloodTypes(y))", "score": 0}
{"id": "eqasc_validation_465", "prediction": "all x.((Team(x) & SeriousEmergency(x)) -> KnowsCompatibleBloodTypes(x))", "score": 0}
{"id": "eqasc_validation_465", "prediction": "all x.((Emergency(x) & Severe(x)) -> KnowsCompatibleBloodTypes(x))", "score": 0}
{"id": "eqasc_validation_465", "prediction": "all x y.((Emergency(x) & Team(y)) -> KnowsCompatibleBloodTypes(y,x))", "score": 0}
{"id": "eqasc_validation_465", "prediction": "all x y.((SeriousEmergency(x) & Team(y)) -> KnowsBothCompatibleBloodTypes(y,x))", "score": 0}
{"id": "eqasc_validation_465", "prediction": "all x y.((SeriousEmergency(x) & Team(y) & HasCompatibleBloodTypes(y)) -> Knows(y,x))", "score": 0}
{"id": "eqasc_validation_466", "prediction": "all x.(CompatibleBlood(x) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_466", "prediction": "all x.((CompatibleBlood(x)) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_466", "prediction": "all x.((HasCompatibleBlood(x)) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_466", "prediction": "all x.(CompatibleBlood(x) -> ImportantForMedicalRates(x))", "score": 0}
{"id": "eqasc_validation_466", "prediction": "all x.((HasCompatibleBlood(x)) -> ImportantForMedicalRates(x))", "score": 0}
{"id": "eqasc_validation_466", "prediction": "all x.((CompatibleBlood(x)) -> ImportantForMedicalRates(x))", "score": 0}
{"id": "eqasc_validation_466", "prediction": "all x.((CompatibleBlood(x) & HasBlood(x)) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_466", "prediction": "all x.((CompatibleBlood(x) & HasBlood(x)) -> ImportantForMedicalRates(x))", "score": 0}
{"id": "eqasc_validation_466", "prediction": "all x.((CompatibleBlood(x) & Knows(x)) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_466", "prediction": "all x.(CompatibleBlood(x) -> ImportantForMedicalAreas(x))", "score": 0}
{"id": "eqasc_validation_466", "prediction": "all x.((CompatibleBlood(x)) -> ImportantForMedicalAreas(x))", "score": 0}
{"id": "eqasc_validation_466", "prediction": "all x y.((Blood(x) & Blood(y) & Compatible(y)) -> ImportantForMedicalCauses(x,y))", "score": 0}
{"id": "eqasc_validation_466", "prediction": "all x.((Blood(x) & Compatible(x)) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_466", "prediction": "all x.((CompatibleBlood(x) & Knows(x)) -> ImportantForMedicalRates(x))", "score": 0}
{"id": "eqasc_validation_466", "prediction": "all x.((CompatibleBlood(x) & HasBlood(x)) -> ImportantForMedicalAreas(x))", "score": 0}
{"id": "eqasc_validation_466", "prediction": "all x.((BothCompatibleBlood(x)) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_467", "prediction": "all x y.((MedicalTreatment(x) & MedicalPersonnel(y)) -> OverseenBy(x,y))", "score": 0}
{"id": "eqasc_validation_467", "prediction": "all x y.((MedicalTreatment(x) & MedicalPersonnel(y)) -> Oversees(x,y))", "score": 0}
{"id": "eqasc_validation_467", "prediction": "all x.(MedicalTreatment(x) -> OverseenByMedicalPersonnel(x))", "score": 0}
{"id": "eqasc_validation_467", "prediction": "all x y.((MedicalTreatment(x) & MedicalPersonnel(y)) -> Oversees(y,x))", "score": 0}
{"id": "eqasc_validation_467", "prediction": "all x y z.((MedicalTreatment(x) & MedicalPersonnel(y) & MedicalTreatment(z)) -> OverseenBy(y,z))", "score": 0}
{"id": "eqasc_validation_467", "prediction": "all x y z.((MedicalTreatment(x) & MedicalPersonnel(y) & MedicalTreatment(z)) -> OverseenBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_467", "prediction": "all x y.((MedicalTreatment(x) & MedicalPersonnel(y)) -> SupervisedBy(x,y))", "score": 0}
{"id": "eqasc_validation_467", "prediction": "all x y.((MedicalTreatment(x) & MedicalPersonnel(y)) -> OverseenBy(y,x))", "score": 0}
{"id": "eqasc_validation_467", "prediction": "all x y z.((MedicalTreatment(x) & MedicalPersonnel(y) & MedicalTreatment(z)) -> Oversees(y,z))", "score": 0}
{"id": "eqasc_validation_467", "prediction": "all x y.((MedicalTreatment(x) & MedicalPerson(y)) -> OverseenBy(x,y))", "score": 0}
{"id": "eqasc_validation_467", "prediction": "all x y z.((MedicalTreatment(x) & MedicalPersonnel(y) & Medical(z)) -> Oversees(y,z))", "score": 0}
{"id": "eqasc_validation_467", "prediction": "all x y z.((MedicalTreatment(x) & MedicalPersonnel(y) & Medical(z)) -> OverseenBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_467", "prediction": "all x y z.((MedicalTreatment(x) & MedicalPersonnel(y) & Medical(z)) -> OverseenBy(y,z))", "score": 0}
{"id": "eqasc_validation_467", "prediction": "all x y z.((MedicalTreatment(x) & MedicalPersonnel(y) & MedicalTreatment(z)) -> OverseenBy(y,x))", "score": 0}
{"id": "eqasc_validation_467", "prediction": "all x y.((MedicalTreatment(x) & MedicalPersonnel(y)) -> OverseeedBy(x,y))", "score": 0}
{"id": "eqasc_validation_467", "prediction": "all x y z.((MedicalTreatment(x) & MedicalPersonnel(y) & MedicalTreatment(z)) -> OverseenBy(x,y))", "score": 0}
{"id": "eqasc_validation_468", "prediction": "all x y.((HospitalPersonnel(x) & BloodType(y)) -> WantsToKnow(x,y))", "score": 0}
{"id": "eqasc_validation_468", "prediction": "all x.(HospitalPersonnel(x) -> MayWantToKnowBloodType(x))", "score": 0}
{"id": "eqasc_validation_468", "prediction": "all x y.((HospitalPersonnel(x) & BloodType(y)) -> MayWantToKnow(x,y))", "score": 0}
{"id": "eqasc_validation_468", "prediction": "all x.(HospitalPersonnel(x) -> (WantToKnowBloodType(x) | WantToKnowBloodType(x)))", "score": 0}
{"id": "eqasc_validation_468", "prediction": "all x.(HospitalPersonnel(x) -> WantsToKnowBloodType(x))", "score": 0}
{"id": "eqasc_validation_468", "prediction": "all x.(HospitalPersonnel(x) -> (WantsToKnowBloodType(x) | WantsToKnowBloodType(x)))", "score": 0}
{"id": "eqasc_validation_468", "prediction": "all x.(HospitalPersonnel(x) -> (WantToKnowBloodType(x) | -WantToKnowBloodType(x)))", "score": 0}
{"id": "eqasc_validation_468", "prediction": "all x.(HospitalPersonnel(x) -> (WantToKnowBloodType(x)))", "score": 0}
{"id": "eqasc_validation_468", "prediction": "all x y z.((HospitalPersonnel(x) & BloodType(y) & BloodType(z)) -> WantsToKnow(x,y,z))", "score": 0}
{"id": "eqasc_validation_468", "prediction": "all x y.((HospitalPersonnel(x) & Patient(y)) -> WantsToKnowBloodType(x,y))", "score": 0}
{"id": "eqasc_validation_468", "prediction": "all x.(HospitalPersonnel(x) -> (WantToKnowBloodType(x) | WantsToKnowBloodType(x)))", "score": 0}
{"id": "eqasc_validation_468", "prediction": "all x.(HospitalPersonnel(x) -> (WantsToKnowBloodType(x) | -WantsToKnowBloodType(x)))", "score": 0}
{"id": "eqasc_validation_468", "prediction": "all x.(HospitalPersonnel(x) -> (WantToKnowBloodType(x) & -WantToKnowBloodType(x)))", "score": 0}
{"id": "eqasc_validation_468", "prediction": "all x.(HospitalPersonnel(x) -> (WantToKnow(x,BloodType) | WantToKnow(x,BloodType)))", "score": 0}
{"id": "eqasc_validation_468", "prediction": "all x.(HospitalPersonnel(x) -> (WantsToKnowBloodType(x) | WantToKnowBloodType(x)))", "score": 0}
{"id": "eqasc_validation_468", "prediction": "all x.(HospitalPersonnel(x) -> MayWantToKnow(x,BloodType))", "score": 0}
{"id": "eqasc_validation_469", "prediction": "all x.(Cirrhosis(x) -> MedicalTreatment(x))", "score": 0}
{"id": "eqasc_validation_469", "prediction": "all x.((Cirrhosis(x) & Treatment(x)) -> Medical(x))", "score": 0}
{"id": "eqasc_validation_469", "prediction": "all x.(CirrhosisTreatment(x) -> Medical(x))", "score": 0}
{"id": "eqasc_validation_469", "prediction": "all x.(Cirrhosis(x) -> Medical(x))", "score": 0}
{"id": "eqasc_validation_469", "prediction": "all x.((Treatment(x) & Cirrhosis(x)) -> Medical(x))", "score": 0}
{"id": "eqasc_validation_469", "prediction": "all x y.((Treatment(x) & Cirrhosis(y)) -> Medical(x))", "score": 0}
{"id": "eqasc_validation_469", "prediction": "all x y.((Cirrhosis(x) & Treatment(y)) -> Medical(x))", "score": 0}
{"id": "eqasc_validation_469", "prediction": "All x.((Cirrhosis(x) & Treatment(x)) -> Medical(x))", "score": -1}
{"id": "eqasc_validation_469", "prediction": "all x.((Treatment(x) & Cirrhosis(y)) -> Medical(x))", "score": 0}
{"id": "eqasc_validation_469", "prediction": "all x y.((Treatment(x) & Cirrhosis(y)) -> Medical(x,y))", "score": 0}
{"id": "eqasc_validation_469", "prediction": "All x.(Cirrhosis(x) -> MedicalTreatment(x))", "score": -1}
{"id": "eqasc_validation_469", "prediction": "all x.((Cyrrhosis(x) & Treatment(x)) -> Medical(x))", "score": 0}
{"id": "eqasc_validation_469", "prediction": "all x.(Cyrrhosis(x) -> MedicalTreatment(x))", "score": 0}
{"id": "eqasc_validation_469", "prediction": "All x.(CirrhosisTreatment(x) -> Medical(x))", "score": -1}
{"id": "eqasc_validation_469", "prediction": "all x.(CyrrhosisTreatment(x) -> Medical(x))", "score": 0}
{"id": "eqasc_validation_469", "prediction": "All x.(Cirrhosis(x) -> Medical(x))", "score": -1}
{"id": "eqasc_validation_470", "prediction": "exists x.(BloodType(x) & ImportantForTreatments(x))", "score": 0}
{"id": "eqasc_validation_470", "prediction": "exists x.(BloodType(x) & ImportantForTreatment(x))", "score": 0}
{"id": "eqasc_validation_470", "prediction": "exists x y.(Treatment(x) & BloodType(y) & ImportantFor(x,y))", "score": 0}
{"id": "eqasc_validation_470", "prediction": "all x y.((BloodType(x) & Treatment(y)) -> ImportantFor(x,y))", "score": 0}
{"id": "eqasc_validation_470", "prediction": "exists x.(BloodType(x) & ImportantFor(x,y))", "score": 0}
{"id": "eqasc_validation_470", "prediction": "all x.(BloodType(x) -> ImportantForTreatments(x))", "score": 0}
{"id": "eqasc_validation_470", "prediction": "exists x y.((BloodType(x) & Treatment(y)) -> ImportantFor(x,y))", "score": 0}
{"id": "eqasc_validation_470", "prediction": "exists x.(BloodType(x) & ImportantForSomeTreatments(x))", "score": 0}
{"id": "eqasc_validation_470", "prediction": "all x.((BloodType(x) & Treatment(x)) -> ImportantFor(x,y))", "score": 0}
{"id": "eqasc_validation_470", "prediction": "all x.((BloodType(x) & SomeTreatments(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_470", "prediction": "all x y.((BloodType(x) & Treatment(y)) -> Important(x,y))", "score": 0}
{"id": "eqasc_validation_470", "prediction": "all x.((BloodType(x) & SomeTreatments(x)) -> ImportantFor(x,y))", "score": 0}
{"id": "eqasc_validation_470", "prediction": "exists x y.(Treatment(x) & BloodType(y) & ImportantFor(y,x))", "score": 0}
{"id": "eqasc_validation_470", "prediction": "all x.((BloodType(x) & Treatment(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_470", "prediction": "all x.(BloodType(x) -> ImportantForTreatment(x))", "score": 0}
{"id": "eqasc_validation_470", "prediction": "exists x.(BloodType(x) & ImportantFor(x,Treatment))", "score": 0}
{"id": "eqasc_validation_471", "prediction": "all x.((BloodType(x) & O(x) & A(x) & B(x) & AB(x)) -> ImportantRoleInPatientCare(x))", "score": 0}
{"id": "eqasc_validation_471", "prediction": "all x.((BloodType(x) & O(x) | A(x) | B(x) | AB(x))) -> ImportantRoleInPatientCare(x))", "score": -1}
{"id": "eqasc_validation_471", "prediction": "all x.((BloodType(x) & (O(x) | A(x) | B(x) | AB(x))) -> ImportantRoleInPatientCare(x))", "score": 0}
{"id": "eqasc_validation_471", "prediction": "all x.((BloodType(x) & O(x) & A(x) & B(x) & AB(x)) -> ImportantInPatientCare(x))", "score": 0}
{"id": "eqasc_validation_471", "prediction": "all x.((BloodType(x) & O(x) | A(x) | B(x) | AB(x))) -> ImportantInPatientCare(x))", "score": -1}
{"id": "eqasc_validation_471", "prediction": "all x.((BloodType(x) & O(x) | A(x) | B(x) | Ab(x))) -> ImportantRoleInPatientCare(x))", "score": -1}
{"id": "eqasc_validation_471", "prediction": "all x.((BloodType(x) & O(x)) | A(x) | B(x) | AB(x)) -> ImportantRoleInPatientCare(x))", "score": -1}
{"id": "eqasc_validation_471", "prediction": "all x.((BloodType(x) & O(x) & A(x) & B(x) & Ab(x)) -> ImportantRoleInPatientCare(x))", "score": 0}
{"id": "eqasc_validation_471", "prediction": "all x y z.((BloodType(x) & BloodType(y) & PatientCare(z)) -> (O(y) | A(y) | B(y) | AB(y)))", "score": 0}
{"id": "eqasc_validation_471", "prediction": "all x.((BloodType(x) & (O(x) | A(x) | B(x) | AB(x))) -> ImportantInPatientCare(x))", "score": 0}
{"id": "eqasc_validation_471", "prediction": "all x.((BloodType(x) & (O) | A(x) | B(x) | AB(x))) -> ImportantRoleInPatientCare(x))", "score": -1}
{"id": "eqasc_validation_471", "prediction": "all x y z.((BloodType(x) & BloodType(y) & PatientCare(z)) -> (O(x) | A(x) | B(x) | AB(x)))", "score": 0}
{"id": "eqasc_validation_471", "prediction": "all x y.((BloodType(x) & PatientCare(y)) -> (O(x) | A(x) | B(x) | AB(x)))", "score": 0}
{"id": "eqasc_validation_471", "prediction": "all x.((BloodType(x) & O(x) & A(x) & B(x) & AB(x)) -> ImportantRole(x))", "score": 0}
{"id": "eqasc_validation_471", "prediction": "all x.((BloodType(x) & O(x) | A(x) | B(x) | Ab(x))) -> ImportantInPatientCare(x))", "score": -1}
{"id": "eqasc_validation_471", "prediction": "all x.((BloodType(x) & (O(x) | A(x) | B(x) | AB(x))) -> ImportantRole(x))", "score": 0}
{"id": "eqasc_validation_472", "prediction": "all x.((B(x) | AB(x)) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_472", "prediction": "all x.((B(x) | AB(x)) -> ImportantForMedicalRates(x))", "score": 0}
{"id": "eqasc_validation_472", "prediction": "all x.((TypeO(x) & (B(x) | AB(x))) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_472", "prediction": "all x.((TypeO(x) & (B(x) | AB(x))) -> ImportantForMedicalRates(x))", "score": 0}
{"id": "eqasc_validation_472", "prediction": "all x.((TypeO(x) | TypeAB(x)) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_472", "prediction": "all x.((B(x) | AB(x)) -> ImportantForMedicalRights(x))", "score": 0}
{"id": "eqasc_validation_472", "prediction": "all x.((Boy(x) | AB(x)) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_472", "prediction": "all x.((TypeO(x) | TypeAB(x)) -> ImportantForMedicalRates(x))", "score": 0}
{"id": "eqasc_validation_472", "prediction": "all x.((B(x) | AB(x)) -> ImportantForMedicalRaments(x))", "score": 0}
{"id": "eqasc_validation_472", "prediction": "all x.((B(x) | Ab(x)) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_472", "prediction": "all x.((TypeO(x) & (B(x) | AB(x))) -> ImportantForMedicalRights(x))", "score": 0}
{"id": "eqasc_validation_472", "prediction": "all x.(TypeO(x) -> (B(x) | AB(x)) & ImportantForMedicalCauses(x)))", "score": -1}
{"id": "eqasc_validation_472", "prediction": "all x.((Boy(x) | AB(x)) -> ImportantForMedicalRates(x))", "score": 0}
{"id": "eqasc_validation_472", "prediction": "all x.((TypeOA(x) | TypeAB(x)) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_472", "prediction": "all x.((TypeOAB(x) | TypeAB(x)) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_472", "prediction": "all x.((TypeO(x) & (B(x) | AB(x))) -> ImportantForMedicalRaments(x))", "score": 0}
{"id": "eqasc_validation_473", "prediction": "all x.(BloodType(x) -> (DeterminedByEarnedAntigens(x) & DeterminedByAntibodies(x)))", "score": 0}
{"id": "eqasc_validation_473", "prediction": "all x.(BloodType(x) -> (DeterminedByErinheritedAntigens(x) & DeterminedByAntibodies(x)))", "score": 0}
{"id": "eqasc_validation_473", "prediction": "all x.(BloodType(x) -> (DeterminedBy(x,inheritedAntigens) & DeterminedBy(x,antibodies)))", "score": 0}
{"id": "eqasc_validation_473", "prediction": "all x.(BloodType(x) -> (DeterminedByErasedAntigens(x) & DeterminedByAntibodies(x)))", "score": 0}
{"id": "eqasc_validation_473", "prediction": "all x.(BloodType(x) -> (DestinatedByEarnedAntigens(x) & DeterminedByAntibodies(x)))", "score": 0}
{"id": "eqasc_validation_473", "prediction": "all x.(BloodType(x) -> (DeterminedByHereditaryAntigens(x) & DeterminedByAntibodies(x)))", "score": 0}
{"id": "eqasc_validation_473", "prediction": "all x.(BloodType(x) -> (DeterminedByInheritanceAntigens(x) & DeterminedByAntibodies(x)))", "score": 0}
{"id": "eqasc_validation_473", "prediction": "all x y.((BloodType(x) & ErasedAntigens(y) & Antibodies(y)) -> DeterminedBy(x,y))", "score": 0}
{"id": "eqasc_validation_473", "prediction": "all x.(BloodType(x) -> (DeterminedByEarnedAntigens(x) | DeterminedByAntibodies(x)))", "score": 0}
{"id": "eqasc_validation_473", "prediction": "all x.(BloodType(x) -> (DeterminedByHeritageAntigens(x) & DeterminedByAntibodies(x)))", "score": 0}
{"id": "eqasc_validation_473", "prediction": "all x.(BloodType(x) -> (DeterminedByAllegedAntigens(x) & DeterminedByAntibodies(x)))", "score": 0}
{"id": "eqasc_validation_473", "prediction": "all x.((BloodType(x) & ErasedAntigens(x) & Antibodies(x)) -> DeterminedBy(x,y))", "score": 0}
{"id": "eqasc_validation_473", "prediction": "all x y z.((BloodType(x) & Antigen(y) & Antibodies(z)) -> DeterminedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_473", "prediction": "all x.(BloodType(x) -> (DeterminedBy(x,inheritedAntigens) & DeterminedBy(x,Antibodies)))", "score": 0}
{"id": "eqasc_validation_474", "prediction": "all x.((EarnedAntigens(x) & Antibodies(x)) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_474", "prediction": "all x.((EarnedAntigens(x) & ErasedAntibodies(x)) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_474", "prediction": "all x.((ErasedAntigens(x) & ErasedAntibodies(x)) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_474", "prediction": "all x.((EarnedAntigens(x) & InheritanceAntibodies(x)) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_474", "prediction": "all x y.((EarnedAntigen(x) & Antibody(y)) -> (ImportantForMedicalCauses(x) & ImportantForMedicalCauses(x)))", "score": 0}
{"id": "eqasc_validation_474", "prediction": "all x y.((EarnedAntigens(x) & Antibodies(y)) -> (ImportantForMedicalCauses(x) & ImportantForMedicalCauses(x)))", "score": 0}
{"id": "eqasc_validation_474", "prediction": "all x y z.((EarnedAntigen(x) & Antibody(y) & MedicalCause(z)) -> (ImportantForMedicalCauses(x,y,z) & ImportantForMedicalCauses(x,z)))", "score": 0}
{"id": "eqasc_validation_474", "prediction": "all x y.((EarnedAntigens(x) & Antibodies(y)) -> ImportantForMedicalCauses(x,y))", "score": 0}
{"id": "eqasc_validation_474", "prediction": "all x y z.((EarnedAntigen(x) & Antibodies(y) & MedicalCause(z)) -> (ImportantForMedicalCauses(x,y,z) & ImportantForMedicalCauses(x,z)))", "score": 0}
{"id": "eqasc_validation_474", "prediction": "all x y.((EarnedAntigen(x) & Antibody(y)) -> (ImportantForMedicalCauses(x,y) & ImportantForMedicalCauses(x,y)))", "score": 0}
{"id": "eqasc_validation_474", "prediction": "all x y z.((EarnedAntigen(x) & Antibody(y) & MedicalCause(z)) -> (ImportantForMedicalCauses(x,y,z) & ImportantForMedicalCauses(x)))", "score": 0}
{"id": "eqasc_validation_474", "prediction": "all x y.((EarnedAntigens(x) & Antibodies(y)) -> (ImportantForMedicalCauses(x,y) & ImportantForMedicalCauses(x,y)))", "score": 0}
{"id": "eqasc_validation_474", "prediction": "all x y z.((EarnedAntigen(x) & Antibodies(y) & MedicalCause(z)) -> (ImportantForMedicalCauses(x,y,z) & ImportantForMedicalCauses(x)))", "score": 0}
{"id": "eqasc_validation_474", "prediction": "all x.(EarnedAntigensAndAntibodies(x) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_474", "prediction": "all x y.((EarnedAntigen(x) & Antibodies(y)) -> ImportantForMedicalCauses(x,y))", "score": 0}
{"id": "eqasc_validation_474", "prediction": "all x y.((EarnedAntigen(x) & Antibody(y)) -> (ImportantForMedicalCauses(x,y) & ImportantForMedicalCauses(x)))", "score": 0}
{"id": "eqasc_validation_475", "prediction": "all x.(MedicalIntervention(x) -> (GoesBeyondPills(x) & GoesBeyondBandages(x) & GoesBeyondSurgery(x)))", "score": 0}
{"id": "eqasc_validation_475", "prediction": "all x.(MedicalIntervention(x) -> (GoesAbovePills(x) & GoesBeyondBandages(x) & GoesBeyondSurgery(x)))", "score": 0}
{"id": "eqasc_validation_475", "prediction": "all x.(MedicalIntervention(x) -> (ExceedsPills(x) & ExceedsBandages(x) & ExceedsSurgery(x)))", "score": 0}
{"id": "eqasc_validation_475", "prediction": "all x.(MedicalIntervention(x) -> (GoesBeyondPills(x) | GoesBeyondBandages(x) | GoesBeyondSurgery(x)))", "score": 0}
{"id": "eqasc_validation_475", "prediction": "all x.(MedicalIntervention(x) -> (GoesByPills(x) & GoesByBandages(x) & GoesBySurgery(x)))", "score": 0}
{"id": "eqasc_validation_475", "prediction": "all x.(MedicalIntervention(x) -> (GoesBeyondPills(x) & GoesBeyondBandages(x) & GoesBeyondSurgicalInterventions(x)))", "score": 0}
{"id": "eqasc_validation_475", "prediction": "all x.(MedicalIntervention(x) -> (AbovePills(x) & BeyondBandages(x) & BeyondSurgery(x)))", "score": 0}
{"id": "eqasc_validation_475", "prediction": "all x.(MedicalIntervention(x) -> (GoesByPills(x) & GoesByBandages(x) & GoesBeyondSurgery(x)))", "score": 0}
{"id": "eqasc_validation_475", "prediction": "all x.(MedicalIntervention(x) -> (GoesByPills(x) | GoesByBandages(x) | GoesBySurgery(x)))", "score": 0}
{"id": "eqasc_validation_475", "prediction": "all x.(MedicalIntervention(x) -> (GoesByPills(x) & GoesBeyondBandages(x) & GoesBeyondSurgery(x)))", "score": 0}
{"id": "eqasc_validation_475", "prediction": "all x.(MedicalIntervention(x) -> (ExceedsPills(x) & BeyondBandages(x) & BeyondSurgery(x)))", "score": 0}
{"id": "eqasc_validation_475", "prediction": "all x.(MedicalIntervention(x) -> (GoesBeyondPills(x) & GoesBeyondBandages(x) & GoesBeyondSurgicalIntervention(x)))", "score": 0}
{"id": "eqasc_validation_475", "prediction": "all x.(MedicalIntervention(x) -> (HasPills(x) & HasBandages(x) & HasSurgery(x)))", "score": 0}
{"id": "eqasc_validation_475", "prediction": "all x.(MedicalIntervention(x) -> (GoesByPills(x) & GoesBeyondBandages(x) & GoesBySurgery(x)))", "score": 0}
{"id": "eqasc_validation_475", "prediction": "all x.(MedicalIntervention(x) -> (GoesByPills(x) | GoesByBandages(x) | GoesBeyondSurgery(x)))", "score": 0}
{"id": "eqasc_validation_476", "prediction": "all x y.((BloodType(x) & Surgery(y)) -> ImportantToKnow(x,y))", "score": 0}
{"id": "eqasc_validation_476", "prediction": "all x.(BloodType(x) -> ImportantToKnow(x))", "score": 0}
{"id": "eqasc_validation_476", "prediction": "all x.((BloodType(x) & PriorToSurgery(x)) -> ImportantToKnow(x))", "score": 0}
{"id": "eqasc_validation_476", "prediction": "all x.(BloodType(x) -> ImportantForSurgery(x))", "score": 0}
{"id": "eqasc_validation_476", "prediction": "all x.((BloodType(x) & BeforeSurgery(x)) -> ImportantToKnow(x))", "score": 0}
{"id": "eqasc_validation_476", "prediction": "all x.((BloodType(x) & ImportantToKnow(x)) -> PriorToSurgery(x))", "score": 0}
{"id": "eqasc_validation_476", "prediction": "all x.(BloodType(x) -> ImportantToKnowBeforeSurgery(x))", "score": 0}
{"id": "eqasc_validation_476", "prediction": "all x y z.((BloodType(x) & Surgery(y) & Surgery(z)) -> ImportantToKnow(x,y,z))", "score": 0}
{"id": "eqasc_validation_476", "prediction": "all x.((BloodType(x) & Surgery(x)) -> ImportantToKnow(x))", "score": 0}
{"id": "eqasc_validation_476", "prediction": "all x.((BloodType(x) & -Surgery(x)) -> ImportantToKnow(x))", "score": 0}
{"id": "eqasc_validation_476", "prediction": "all x.(BloodType(x) -> ImportantBeforeSurgery(x))", "score": 0}
{"id": "eqasc_validation_476", "prediction": "all x y.((BloodType(x) & Surgery(y)) -> ImportantFor(x,y))", "score": 0}
{"id": "eqasc_validation_476", "prediction": "all x.((BloodType(x) & ImportantToKnow(x)) -> BeforeSurgery(x))", "score": 0}
{"id": "eqasc_validation_476", "prediction": "all x.((BloodType(x) & Operation(x)) -> ImportantToKnow(x))", "score": 0}
{"id": "eqasc_validation_476", "prediction": "all x y z.((BloodType(x) & Surgery(y) & Surgery(z)) -> ImportantToKnow(x,y))", "score": 0}
{"id": "eqasc_validation_476", "prediction": "all x.(BloodType(x) -> ImportantToKnowPrepareToSurgery(x))", "score": 0}
{"id": "eqasc_validation_477", "prediction": "all x.(Transplant(x) -> MedicalMajority(x))", "score": 0}
{"id": "eqasc_validation_477", "prediction": "all x.(Transplant(x) -> MedicalMagnificent(x))", "score": 0}
{"id": "eqasc_validation_477", "prediction": "all x.(Transplant(x) -> MedicalMajor(x))", "score": 0}
{"id": "eqasc_validation_477", "prediction": "all x y.((Transplant(x) & MedicalMajority(y)) -> MedicalMajor(x,y))", "score": 0}
{"id": "eqasc_validation_477", "prediction": "all x y.((Transplant(x) & MedicalMajority(y)) -> Transplant(x))", "score": 0}
{"id": "eqasc_validation_477", "prediction": "all x y.((Transplant(x) & MedicalMajority(y)) -> Transplant(x,y))", "score": 0}
{"id": "eqasc_validation_477", "prediction": "all x.(Transplant(x) -> MedicalMason(x))", "score": 0}
{"id": "eqasc_validation_477", "prediction": "all x.(Transplant(x) -> MedicalMary(x))", "score": 0}
{"id": "eqasc_validation_477", "prediction": "all x.(Transplant(x) -> MedicalMatrimony(x))", "score": 0}
{"id": "eqasc_validation_477", "prediction": "all x.(Transplant(x) -> MedicalMagic(x))", "score": 0}
{"id": "eqasc_validation_477", "prediction": "all x.(Transplant(x) -> MedicalMammoth(x))", "score": 0}
{"id": "eqasc_validation_477", "prediction": "all x y.((Transplant(x) & MedicalMajor(y)) -> MedicalMajor(x,y))", "score": 0}
{"id": "eqasc_validation_477", "prediction": "all x.(Transplant(x) -> MedicalMortal(x))", "score": 0}
{"id": "eqasc_validation_477", "prediction": "all x.(Transplant(x) -> MedicalMajory(x))", "score": 0}
{"id": "eqasc_validation_477", "prediction": "all x.(Transplant(x) -> MedicalMacrocosm(x))", "score": 0}
{"id": "eqasc_validation_478", "prediction": "all x.(Transplant(x) -> ImportantBloodType(x))", "score": 0}
{"id": "eqasc_validation_478", "prediction": "all x y.((Transplant(x) & Transplant(y)) -> ImportantBloodType(x,y))", "score": 0}
{"id": "eqasc_validation_478", "prediction": "all x y z.((BloodType(x) & Transplant(y) & Transplant(z)) -> ImportantFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_478", "prediction": "all x y.((BloodType(x) & Transplant(y)) -> ImportantFor(x,y))", "score": 0}
{"id": "eqasc_validation_478", "prediction": "all x.((BloodType(x) & Transplant(x)) -> ImportantFor(x,Transplants))", "score": 0}
{"id": "eqasc_validation_478", "prediction": "all x y z.((Transplant(x) & BloodType(y) & Transplant(z)) -> ImportantFor(y,z))", "score": 0}
{"id": "eqasc_validation_478", "prediction": "all x.((BloodType(x) & Transplant(x)) -> ImportantFor(x,Transplant))", "score": 0}
{"id": "eqasc_validation_478", "prediction": "all x y.((Transplant(x) & Transplant(y)) -> Important(x,y))", "score": 0}
{"id": "eqasc_validation_478", "prediction": "all x.((BloodType(x) & Transplant(x)) -> ImportantFor(x,transplant))", "score": 0}
{"id": "eqasc_validation_478", "prediction": "all x.((BloodType(x) & Transplantation(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_478", "prediction": "all x.((BloodType(x) & Transplants(x)) -> ImportantFor(x,Transplants))", "score": 0}
{"id": "eqasc_validation_478", "prediction": "all x.((BloodType(x) & Transplants(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_478", "prediction": "all x y z.((Transplant(x) & BloodType(y) & Transplant(z)) -> ImportantFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_478", "prediction": "all x.((BloodType(x) & Transplant(x)) -> ImportantFor(x,transplants))", "score": 0}
{"id": "eqasc_validation_478", "prediction": "all x.(BloodType(x) -> ImportantForTransplants(x))", "score": 0}
{"id": "eqasc_validation_478", "prediction": "all x.((BloodType(x) & Transplants(x)) -> ImportantFor(x,transplants))", "score": 0}
{"id": "eqasc_validation_479", "prediction": "all x y.((Doctor(x) & Doctor(y)) -> ConsultsForMedicalAdvice(x,y))", "score": 0}
{"id": "eqasc_validation_479", "prediction": "all x y.((Doctor(x) & Doctor(y)) -> Consults(x,y))", "score": 0}
{"id": "eqasc_validation_479", "prediction": "all x y.((Doctor(x) & MedicalAdvice(y)) -> Consult(x,y))", "score": 0}
{"id": "eqasc_validation_479", "prediction": "all x y z.((Doctor(x) & MedicalAdvice(y) & Doctor(z)) -> Consults(x,y,z))", "score": 0}
{"id": "eqasc_validation_479", "prediction": "all x y.((Doctor(x) & MedicalAdvice(y)) -> Consults(x,y))", "score": 0}
{"id": "eqasc_validation_479", "prediction": "all x y.((Doctor(x) & Doctor(y)) -> MedicalAdvice(x,y))", "score": 0}
{"id": "eqasc_validation_479", "prediction": "all x.(MedicalAdvice(x) -> ConsultDoctor(x))", "score": 0}
{"id": "eqasc_validation_479", "prediction": "all x y.((Doctor(x) & Doctor(y)) -> ForMedicalAdvice(x,y))", "score": 0}
{"id": "eqasc_validation_479", "prediction": "all x y.((MedicalAdvice(x) & Doctor(y)) -> Consults(y,x))", "score": 0}
{"id": "eqasc_validation_479", "prediction": "all x y.((MedicalAdvice(x) & Doctor(y)) -> Consult(y,x))", "score": 0}
{"id": "eqasc_validation_479", "prediction": "all x y z.((Doctor(x) & MedicalAdvice(y) & Doctor(z)) -> Consult(x,y,z))", "score": 0}
{"id": "eqasc_validation_479", "prediction": "all x y.((Doctor(x) & Doctor(y)) -> ConsultForMedicalAdvice(x,y))", "score": 0}
{"id": "eqasc_validation_479", "prediction": "all x y.((Doctor(x) & Doctor(y)) -> Consult(x,y))", "score": 0}
{"id": "eqasc_validation_479", "prediction": "all x y z.((Doctor(x) & MedicalAdvice(y) & Doctor(z)) -> Consults(x,y))", "score": 0}
{"id": "eqasc_validation_479", "prediction": "all x.((Doctor(x) & MedicalAdvice(x)) -> Consults(x,y))", "score": 0}
{"id": "eqasc_validation_479", "prediction": "all x.((Doctor(x) & Consults(x)) -> MedicalAdvice(x))", "score": 0}
{"id": "eqasc_validation_480", "prediction": "all x.((BloodType(x) & ImportantForDoctor(x)) -> ImportantForDoctor(x))", "score": 0}
{"id": "eqasc_validation_480", "prediction": "all x.(BloodType(x) -> ImportantForDoctor(x))", "score": 0}
{"id": "eqasc_validation_480", "prediction": "all x.(BloodType(x) -> ImportantForDoctorToKnow(x))", "score": 0}
{"id": "eqasc_validation_480", "prediction": "all x.((BloodType(x) & ImportantForDoctorToKnow(x)) -> ImportantForDoctor(x))", "score": 0}
{"id": "eqasc_validation_480", "prediction": "all x y z.((BloodType(x) & Doctor(y) & Doctor(z)) -> ImportantFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_480", "prediction": "all x y.((Doctor(x) & Doctor(y)) -> ImportantBloodType(x,y))", "score": 0}
{"id": "eqasc_validation_480", "prediction": "all x y.((Doctor(x) & BloodType(y)) -> ImportantFor(x,y))", "score": 0}
{"id": "eqasc_validation_480", "prediction": "all x y.((BloodType(x) & Doctor(y)) -> ImportantFor(x,y))", "score": 0}
{"id": "eqasc_validation_480", "prediction": "all x y.((Drug(x) & BloodType(y)) -> ImportantForDoctor(x,y))", "score": 0}
{"id": "eqasc_validation_480", "prediction": "all x.((BloodType(x) & ImportantForDoctorToKnow(x)) -> ImportantForDoctorToKnow(x))", "score": 0}
{"id": "eqasc_validation_480", "prediction": "all x y.((Doctor(x) & Doctor(y)) -> ImportantToKnow(x,y))", "score": 0}
{"id": "eqasc_validation_480", "prediction": "all x.((BlueTyp(x) & ImportantForDoctor(x)) -> ImportantForDoctor(x))", "score": 0}
{"id": "eqasc_validation_480", "prediction": "all x.((BlueType(x) & ImportantForDoctor(x)) -> ImportantForDoctor(x))", "score": 0}
{"id": "eqasc_validation_480", "prediction": "all x.((BloodType(x) & ImportantForDoctor(x)) -> Knows(x))", "score": 0}
{"id": "eqasc_validation_480", "prediction": "all x.((BloodType(x) & ImportantForDoctor(x)) -> ImportantForDoctorToKnow(x))", "score": 0}
{"id": "eqasc_validation_480", "prediction": "all x y z.((BloodType(x) & Doctor(y) & Doctor(z)) -> ImportantToKnow(x,y,z))", "score": 0}
{"id": "eqasc_validation_481", "prediction": "all x y.((Scientist(x) & Archaea(y)) -> KnowsLittleAbout(x,y))", "score": 0}
{"id": "eqasc_validation_481", "prediction": "all x.(Scientist(x) -> (KnowsLittleAboutArchaea(x) & -KnowsLittleAboutArchaea(x)))", "score": 0}
{"id": "eqasc_validation_481", "prediction": "all x.(Scientist(x) -> KnowsRelativelyLittleAboutArchaea(x))", "score": 0}
{"id": "eqasc_validation_481", "prediction": "all x.(Scientist(x) -> KnowsLittleAboutArchaea(x))", "score": 0}
{"id": "eqasc_validation_481", "prediction": "all x.(Scientist(x) -> (KnowsRelativelyLittleAboutArchaea(x)))", "score": 0}
{"id": "eqasc_validation_481", "prediction": "all x y.((Scientist(x) & Archaea(y)) -> KnowsRelativelyLittleAbout(x,y))", "score": 0}
{"id": "eqasc_validation_481", "prediction": "all x.(Scientist(x) -> (KnowsAboutArchaea(x) & -KnowsAboutArchaea(x)))", "score": 0}
{"id": "eqasc_validation_481", "prediction": "all x y.((Scientist(x) & Archaea(y)) -> (KnowsLittleAbout(x,y) | KnowsLittleAbout(x,y)))", "score": 0}
{"id": "eqasc_validation_481", "prediction": "all x y.((Scientist(x) & Archaea(y)) -> -KnowsLittleAbout(x,y))", "score": 0}
{"id": "eqasc_validation_481", "prediction": "all x.(Scientist(x) -> (KnowsRelativelyLittleAboutArchaea(x) & -KnowsRelativelyLittleAboutArchaea(x)))", "score": 0}
{"id": "eqasc_validation_481", "prediction": "all x y.((Scientist(x) & Archaea(y)) -> (KnowsLittleAbout(x,y) & -KnowsLittleAbout(x,y)))", "score": 0}
{"id": "eqasc_validation_481", "prediction": "all x y.((Scientist(x) & Archaea(y)) -> KnewLittleAbout(x,y))", "score": 0}
{"id": "eqasc_validation_481", "prediction": "all x y.((Scientist(x) & Archaea(y)) -> -KnowsAbout(x,y))", "score": 0}
{"id": "eqasc_validation_481", "prediction": "all x.(Scientist(x) -> -KnowsAboutArchaea(x))", "score": 0}
{"id": "eqasc_validation_481", "prediction": "all x y.((Scientist(x) & Archaea(y)) -> KnownLittleAbout(x,y))", "score": 0}
{"id": "eqasc_validation_481", "prediction": "all x y.((Scientist(x) & Archaea(y)) -> -Knows(x,y))", "score": 0}
{"id": "eqasc_validation_482", "prediction": "all x y.((Scientist(x) & Year(y)) -> DoesResearch(x,y))", "score": 0}
{"id": "eqasc_validation_482", "prediction": "all x.(Scientist(x) -> DoesResearchEveryYear(x))", "score": 0}
{"id": "eqasc_validation_482", "prediction": "all x.(Scientist(x) -> DoResearchEveryYear(x))", "score": 0}
{"id": "eqasc_validation_482", "prediction": "all x.(Scientist(x) -> DosResearchEveryYear(x))", "score": 0}
{"id": "eqasc_validation_482", "prediction": "all x.(Scientist(x) -> DoseResearchEveryYear(x))", "score": 0}
{"id": "eqasc_validation_482", "prediction": "all x y.((Scientist(x) & Year(y)) -> DosResearch(x,y))", "score": 0}
{"id": "eqasc_validation_482", "prediction": "all x y z.((Scientist(x) & Research(y) & Year(z)) -> Does(x,y,z))", "score": 0}
{"id": "eqasc_validation_482", "prediction": "all x y z.((Scientist(x) & Research(y) & Year(z)) -> Dose(x,y,z))", "score": 0}
{"id": "eqasc_validation_482", "prediction": "all x y.((Scientist(x) & Research(y)) -> DoseEveryYear(x,y))", "score": 0}
{"id": "eqasc_validation_482", "prediction": "all x y z.((Scientist(x) & Research(y) & Year(z)) -> Do(x,y,z))", "score": 0}
{"id": "eqasc_validation_482", "prediction": "all x y.((Scientist(x) & Year(y)) -> DoResearch(x,y))", "score": 0}
{"id": "eqasc_validation_482", "prediction": "all x y z.((Scientist(x) & Research(y) & Year(z)) -> DoesEveryYear(x,y,z))", "score": 0}
{"id": "eqasc_validation_482", "prediction": "all x y.((Scientist(x) & Year(y)) -> DoseResearch(x,y))", "score": 0}
{"id": "eqasc_validation_482", "prediction": "all x y.((Scientist(x) & Research(y)) -> DoesEveryYear(x,y))", "score": 0}
{"id": "eqasc_validation_483", "prediction": "all x.(DoesResearch(x) -> KnowsRelativelyLittleAboutArchaea(x))", "score": 0}
{"id": "eqasc_validation_483", "prediction": "all x.((Person(x) & DosResearch(x)) -> KnowsRelativelyLittleAboutArchaea(x))", "score": 0}
{"id": "eqasc_validation_483", "prediction": "all x.(DoesResearch(x) -> KnowsLittleAboutArchaea(x))", "score": 0}
{"id": "eqasc_validation_483", "prediction": "all x.((People(x) & DoResearch(x)) -> KnowsRelativelyLittleAboutArchaea(x))", "score": 0}
{"id": "eqasc_validation_483", "prediction": "all x.(DoesResearch(x) -> -KnowsRelativelyLittleAboutArchaea(x))", "score": 0}
{"id": "eqasc_validation_483", "prediction": "all x.((Person(x) & DoesResearch(x)) -> KnowsRelativelyLittleAboutArchaea(x))", "score": 0}
{"id": "eqasc_validation_483", "prediction": "all x.(DoResearch(x) -> KnowsRelativelyLittleAboutArchaea(x))", "score": 0}
{"id": "eqasc_validation_483", "prediction": "all x.(DoesResearch(x) -> (KnowsRelativelyLittleAboutArchaea(x)))", "score": 0}
{"id": "eqasc_validation_483", "prediction": "all x.((Person(x) & DosResearch(x)) -> KnowsLittleAboutArchaea(x))", "score": 0}
{"id": "eqasc_validation_483", "prediction": "all x.(DoResearch(x) -> KnowsLittleAboutArchaea(x))", "score": 0}
{"id": "eqasc_validation_483", "prediction": "all x.((DoesResearch(x) & KnowsLittleAboutArchaea(x)) -> RelativelyLittleAboutArchaea(x))", "score": 0}
{"id": "eqasc_validation_483", "prediction": "all x.((DoesResearch(x) & KnowsRelativelyLittleAboutArchaea(x)) -> RelativelyLittleAboutArchaea(x))", "score": 0}
{"id": "eqasc_validation_483", "prediction": "all x.((DoesResearch(x) & KnowsRelativelyLittleAboutArchaea(x)) -> VeryLittleAboutArchaea(x))", "score": 0}
{"id": "eqasc_validation_483", "prediction": "all x.((Person(x) & DosResearch(x)) -> -KnowsRelativelyLittleAboutArchaea(x))", "score": 0}
{"id": "eqasc_validation_483", "prediction": "all x.((DoesResearch(x) & KnowsLittleAboutArchaea(x)) -> VeryLittleAboutArchaea(x))", "score": 0}
{"id": "eqasc_validation_483", "prediction": "all x.((Person(x) & DoesResearch(x)) -> KnowsLittleAboutArchaea(x))", "score": 0}
{"id": "eqasc_validation_484", "prediction": "all x.(SkinColor(x) -> PolygenicTrait(x))", "score": 6}
{"id": "eqasc_validation_484", "prediction": "all x.(SkinColor(x) -> PolygenicTreatment(x))", "score": 16}
{"id": "eqasc_validation_484", "prediction": "all x.(SkinColor(x) -> PolygenicTreat(x))", "score": 0}
{"id": "eqasc_validation_484", "prediction": "all x.(SkinColor(x) -> PolygenicTait(x))", "score": 0}
{"id": "eqasc_validation_484", "prediction": "all x y.((SkinColor(x) & PolygenicTrait(y)) -> Color(x,y))", "score": 0}
{"id": "eqasc_validation_484", "prediction": "all x.(SkinColour(x) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_484", "prediction": "all x y.((SkinColor(x) & PolygenicTrait(y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_484", "prediction": "all x y.((SkinColor(x) & PolygenicTrait(y)) -> PolygenicTrait(x,y))", "score": 0}
{"id": "eqasc_validation_484", "prediction": "all x y.((SkinColor(x) & PolygenicTrait(y)) -> Colored(x,y))", "score": 0}
{"id": "eqasc_validation_485", "prediction": "exists x.(Treatment(x) & Erased(x))", "score": 0}
{"id": "eqasc_validation_485", "prediction": "exists x.(Trait(x) & Erased(x))", "score": 0}
{"id": "eqasc_validation_485", "prediction": "exists x.(Treatment(x) & Heard(x))", "score": 0}
{"id": "eqasc_validation_485", "prediction": "exists x.(Trait(x) & Heard(x))", "score": 0}
{"id": "eqasc_validation_485", "prediction": "exists x.(Treatment(x) & inherited(x))", "score": 0}
{"id": "eqasc_validation_485", "prediction": "exists x.(Treatment(x) & Hearned(x))", "score": 0}
{"id": "eqasc_validation_485", "prediction": "exists x.(Treatment(x) & Genealogical(x))", "score": 0}
{"id": "eqasc_validation_485", "prediction": "exists x.(Trait(x) & inherited(x))", "score": 0}
{"id": "eqasc_validation_485", "prediction": "exists x.(Traits(x) & Erased(x))", "score": 0}
{"id": "eqasc_validation_485", "prediction": "exists x.(Trait(x) & Genealogical(x))", "score": 0}
{"id": "eqasc_validation_485", "prediction": "exists x.(Tait(x) & Erased(x))", "score": 0}
{"id": "eqasc_validation_485", "prediction": "exists x.(Tain(x) & Erased(x))", "score": 0}
{"id": "eqasc_validation_485", "prediction": "exists x.(Tax(x) & Erased(x))", "score": 0}
{"id": "eqasc_validation_486", "prediction": "all x.(SkinColor(x) -> Erased(x))", "score": 0}
{"id": "eqasc_validation_486", "prediction": "all x.((SkinColor(x) & Erased(x)) -> SkinColor(x))", "score": 0}
{"id": "eqasc_validation_486", "prediction": "all x y.((SkinColor(x) & SkinColor(y)) -> Erased(x,y))", "score": 0}
{"id": "eqasc_validation_486", "prediction": "all x.((SkinColor(x) & Erased(x)) -> HasSkinColor(x))", "score": 0}
{"id": "eqasc_validation_486", "prediction": "all x.(SkinColor(x) -> ErasedSkinColor(x))", "score": 0}
{"id": "eqasc_validation_486", "prediction": "all x.((SkinColor(x) & Inheritable(x)) -> SkinColor(x))", "score": 0}
{"id": "eqasc_validation_486", "prediction": "all x y.((SkinColor(x) & SkinColor(y)) -> Erased(x))", "score": 0}
{"id": "eqasc_validation_486", "prediction": "all x y.((SkinColor(x) & SkinColor(y)) -> Iinherited(x,y))", "score": 0}
{"id": "eqasc_validation_486", "prediction": "all x.(SkinColor(x) -> Inheritable(x))", "score": 0}
{"id": "eqasc_validation_486", "prediction": "all x.(SkinColor(x) -> Iinherited(x))", "score": 0}
{"id": "eqasc_validation_486", "prediction": "all x.((SkinColor(x) & Erased(x)) -> SkinColorEarned(x))", "score": 0}
{"id": "eqasc_validation_486", "prediction": "all x y z.((SkinColor(x) & SkinColor(y) & SkinColor(z)) -> Erased(x,y,z))", "score": 0}
{"id": "eqasc_validation_486", "prediction": "all x y.((SkinColor(x) & SkinColor(y)) -> Inheritable(x,y))", "score": 0}
{"id": "eqasc_validation_486", "prediction": "all x.((SkinColor(x) & Erased(x)) -> SkinColorIsEarned(x))", "score": 0}
{"id": "eqasc_validation_486", "prediction": "all x.((SkinColor(x) & inherited(x)) -> SkinColor(x))", "score": 0}
{"id": "eqasc_validation_486", "prediction": "all x.((SkinColor(x) & Erased(x)) -> Erased(x))", "score": 0}
{"id": "eqasc_validation_487", "prediction": "all x.(PolygenicTreatment(x) -> InteractionOfGenes(x))", "score": 2}
{"id": "eqasc_validation_487", "prediction": "all x y.((PolygenicTreatment(x) & Gene(y)) -> Interaction(x,y))", "score": 2}
{"id": "eqasc_validation_487", "prediction": "all x y z.((PolygenicTreatment(x) & Gene(y) & Gene(z)) -> Interaction(x,y,z))", "score": 2}
{"id": "eqasc_validation_487", "prediction": "all x.(PolygenicTrait(x) -> InteractionOfGenes(x))", "score": 2}
{"id": "eqasc_validation_487", "prediction": "all x.(PolygenicTarget(x) -> InteractionOfGenes(x))", "score": 0}
{"id": "eqasc_validation_487", "prediction": "all x y.((PolygenicTrait(x) & Gene(y)) -> Interaction(x,y))", "score": 2}
{"id": "eqasc_validation_487", "prediction": "all x y.((PolygenicTreatment(x) & Gene(y)) -> InteractionResult(x,y))", "score": 2}
{"id": "eqasc_validation_487", "prediction": "all x.(PolygenicTreatment(x) -> exists y.(Gene(y) & Interaction(x,y)))", "score": 0}
{"id": "eqasc_validation_487", "prediction": "all x.(PolygenicTreatment(x) -> exists y.(Gene(y) & Interaction(x,y))))", "score": -1}
{"id": "eqasc_validation_487", "prediction": "all x y z.((PolygenicTreatment(x) & Gene(y) & Gene(z)) -> InteractionResult(x,y,z))", "score": 2}
{"id": "eqasc_validation_487", "prediction": "all x y.((PolygenicTarget(x) & Gene(y)) -> Interaction(x,y))", "score": 0}
{"id": "eqasc_validation_487", "prediction": "all x.(PolygenicTraits(x) -> InteractionOfGenes(x))", "score": 0}
{"id": "eqasc_validation_487", "prediction": "all x y z.((PolygenicTreatment(x) & Gene(y) & Gene(z)) -> Interacts(x,y,z))", "score": 2}
{"id": "eqasc_validation_488", "prediction": "all x.(SkinColor(x) -> InteractionOfGenes(x))", "score": 4}
{"id": "eqasc_validation_488", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> Interaction(x,y,z))", "score": 2}
{"id": "eqasc_validation_488", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> Interaction(x,y))", "score": 4}
{"id": "eqasc_validation_488", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> InteractionResult(x,y,z))", "score": 2}
{"id": "eqasc_validation_488", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> Interacts(x,y,z))", "score": 2}
{"id": "eqasc_validation_488", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> InteractionResult(x,y))", "score": 2}
{"id": "eqasc_validation_488", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> Interacts(x,y))", "score": 0}
{"id": "eqasc_validation_488", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> InteractionResultOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_488", "prediction": "all x y.((SkinColor(x) & Gene(y) & Interaction(x,y)) -> SkinColor(x))", "score": 0}
{"id": "eqasc_validation_488", "prediction": "all x.((SkinColor(x) & InteractionOfGenes(x)) -> SkinColor(x))", "score": 0}
{"id": "eqasc_validation_488", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> Interact(x,y,z))", "score": 0}
{"id": "eqasc_validation_488", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z) & Interacts(x,y,z)) -> SkinColor(x))", "score": 0}
{"id": "eqasc_validation_488", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z) & Interaction(x,y,z)) -> SkinColorResultOfInteraction(x,y,z))", "score": 0}
{"id": "eqasc_validation_488", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z) & Interaction(x,y,z)) -> (ResultOfInteraction(x,y,z)))", "score": 0}
{"id": "eqasc_validation_488", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z) & Interaction(x,y,z)) -> ResultsOfInteraction(x,y,z))", "score": 0}
{"id": "eqasc_validation_489", "prediction": "all x.(SkinColor(x) -> exists y.(Gene(y) & Controls(x,y)))", "score": 1}
{"id": "eqasc_validation_489", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_validation_489", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> ControlledBy(x,y))", "score": 2}
{"id": "eqasc_validation_489", "prediction": "all x.(SkinColor(x) -> exists y.(Gene(y) & Controls(x,y))))", "score": -1}
{"id": "eqasc_validation_489", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> Controls(x,y,z))", "score": 0}
{"id": "eqasc_validation_489", "prediction": "all x.(SkinColor(x) -> (exists y.(Gene(y) & Controls(x,y))))", "score": 1}
{"id": "eqasc_validation_489", "prediction": "all x.(SkinColor(x) -> exists y z.(Gene(y) & Gene(z) & Controls(x,y,z)))", "score": 0}
{"id": "eqasc_validation_489", "prediction": "all x.(SkinColor(x) -> (ControlledByGenes(x,2) | ControlledByGenes(x,3)))", "score": 0}
{"id": "eqasc_validation_489", "prediction": "all x.(SkinColor(x) -> (ControlledByGenes(x) & ControlledByGenes(x)))", "score": 0}
{"id": "eqasc_validation_489", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> ControlledBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_489", "prediction": "all x.(SkinColor(x) -> exists y z.(Gene(y) & Gene(z) & Controls(x,y,z))))", "score": -1}
{"id": "eqasc_validation_489", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> ControledBy(x,y))", "score": 2}
{"id": "eqasc_validation_489", "prediction": "all x.(SkinColor(x) -> (ControlledByGene(x,2) | ControlledByGene(x,3)))", "score": 0}
{"id": "eqasc_validation_489", "prediction": "all x.(SkinColor(x) -> exists y.(Gene(y) & Control(x,y)))", "score": 0}
{"id": "eqasc_validation_489", "prediction": "all x.(SkinColor(x) -> exists y.(Gene(y) & ControlledBy(x,y)))", "score": 0}
{"id": "eqasc_validation_490", "prediction": "all x.((Trait(x) & GovernedByTwoOrMoreSetsOfAlleles(x)) -> PolygenicInheritance(x))", "score": 0}
{"id": "eqasc_validation_490", "prediction": "all x.((Trait(x) & RegulatedByTwoOrMoreSetsOfAlleles(x)) -> PolygenicInheritance(x))", "score": 0}
{"id": "eqasc_validation_490", "prediction": "all x.((Trait(x) & RegimedByTwoOrMoreSetsOfAlleles(x)) -> PolygenicInheritance(x))", "score": 0}
{"id": "eqasc_validation_490", "prediction": "all x.((Trait(x) & GovernedByTwoOrMoreAlleles(x)) -> PolygenicInheritance(x))", "score": 0}
{"id": "eqasc_validation_490", "prediction": "all x y.((Trait(x) & Allele(y) & GovernedBy(x,y)) -> PolygenicInheritance(x))", "score": 0}
{"id": "eqasc_validation_490", "prediction": "all x.((Trait(x) & SetOfAlleles(x)) -> PolygenicInheritance(x))", "score": 0}
{"id": "eqasc_validation_490", "prediction": "all x y z.((Trait(x) & Allele(y) & Allele(z) & GovernedBy(x,y,z)) -> PolygenicInheritance(x))", "score": 0}
{"id": "eqasc_validation_490", "prediction": "all x.(PolygenicInheritance(x) -> (exists y.(Trait(y) & GovernedBy(x,y)) & exists z.(Set(z) & GovernedBy(x,z)))))", "score": -1}
{"id": "eqasc_validation_490", "prediction": "all x.(PolygenicInheritance(x) -> (exists y.(Trait(y) & GovernedBy(x,y)) & exists z.(Set(z) & Allele(z) & GovernedBy(x,z)))))", "score": -1}
{"id": "eqasc_validation_490", "prediction": "all x.((Trait(x) & GovernedByTwoOrMoreSetsOfAlleles(x)) -> PolygenicHeritage(x))", "score": 0}
{"id": "eqasc_validation_490", "prediction": "all x.(PolygenicInheritance(x) -> (exists y.(Trait(y) & GovernedBy(x,y)) & exists z.(SetOfAlleles(z) & GovernedBy(x,z)))))", "score": -1}
{"id": "eqasc_validation_490", "prediction": "all x.(PolygenicInheritance(x) -> (exists y.(Trait(y) & GovernedBy(x,y)) & exists z.(Trait(z) & GovernedBy(x,z)))))", "score": -1}
{"id": "eqasc_validation_490", "prediction": "all x.(PolygenicInheritance(x) -> (exists y.(Trait(y) & GovernedBy(x,y)) & exists z.(Allele(z) & GovernedBy(x,z)))))", "score": -1}
{"id": "eqasc_validation_491", "prediction": "all x y z.((SkinColor(x) & Allele(y) & Allele(z)) -> (GovernedBy(x,y,z) & exists w.(Allele(w) & Allele(w)) & exists w.(Allele(w) & Allele(w)))))", "score": -1}
{"id": "eqasc_validation_491", "prediction": "all x y z.((SkinColor(x) & Allele(y) & Allele(z)) -> (GovernedBy(x,y,z) & exists w.(Allele(w) & Allele(w)) & exists w.(Allele(w) & Allele(w) & Allele(w)))))", "score": -1}
{"id": "eqasc_validation_491", "prediction": "all x y z.((SkinColor(x) & Allele(y) & Allele(z)) -> (GovernedBy(x,y,z) & exists w.(Allele(w) & Allele(w)) & exists w.(Allele(w) & Allele(w) & Allele(w) & Allele(w) & Allele(w) & Allele(w))))", "score": 0}
{"id": "eqasc_validation_491", "prediction": "all x y z.((SkinColor(x) & Allele(y) & Allele(z)) -> (GovernedBy(x,y,z)))", "score": 0}
{"id": "eqasc_validation_491", "prediction": "all x y z.((SkinColor(x) & Allele(y) & Allele(z)) -> (GovernedBy(x,y,z) & exists w.(Allele(w) & Allele(w)) & exists w.(Allele(w) & Allele(w) & Allele(w) & Allele(w)))))", "score": -1}
{"id": "eqasc_validation_491", "prediction": "all x y z.((SkinColor(x) & Allele(y) & Allele(z)) -> (GovernedBy(x,y,z) & exists w.(Allele(w) & Allele(w)))))", "score": -1}
{"id": "eqasc_validation_491", "prediction": "all x y z.((SkinColor(x) & Allele(y) & Allele(z)) -> (GovernedBy(x,y,z) & exists w.(Allele(w) & Allele(w) & Allele(w)) & exists w.(Allele(w) & Allele(w) & Allele(w) & Allele(w) & Allele(w))))", "score": 0}
{"id": "eqasc_validation_491", "prediction": "all x y.((SkinColor(x) & Allele(y)) -> (GovernedBy(x,y) & GovernedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_491", "prediction": "all x y z.((SkinColor(x) & Allele(y) & Allele(z)) -> (GovernedBy(x,y,z) & exists w.(Allele(w) & Allele(w) & Allele(w)))))", "score": -1}
{"id": "eqasc_validation_491", "prediction": "all x y.((SkinColor(x) & Allele(y)) -> (GovernedBy(x,y) & exists z.(Allele(z) & Allele(z)) & exists w.(Allele(w) & Allele(w) & Allele(w)))))", "score": -1}
{"id": "eqasc_validation_491", "prediction": "all x y z.((SkinColor(x) & Allele(y) & Allele(z)) -> (GovernedBy(x,y,z) & exists w.(Allele(w) & Allele(w)) & exists w.(Allele(w) & Allele(w) & Allele(w) & Allele(w) & Allele(w)))))", "score": -1}
{"id": "eqasc_validation_491", "prediction": "all x y z.((SkinColor(x) & Allele(y) & Allele(z)) -> (GovernedBy(x,y,z) & exists w.(Allele(w) & Allele(w)) & exists w.(Allele(w) & Allele(w)) & exists w.(Allele(w) & Allele(w) & Allele(w))))", "score": 0}
{"id": "eqasc_validation_491", "prediction": "all x y.((SkinColor(x) & Allele(y)) -> (GovernedBy(x,y) & exists z.(Allele(z) & Allele(z)) & exists w.(Allele(w) & Allele(w)))))", "score": -1}
{"id": "eqasc_validation_491", "prediction": "all x y z.((SkinColor(x) & Allele(y) & Allele(z)) -> (GovernedBy(x,y,z) & exists w.(Allele(w) & Allele(w) & Allele(w)) & exists w.(Allele(w) & Allele(w) & Allele(w)))))", "score": -1}
{"id": "eqasc_validation_491", "prediction": "all x y z.((SkinColor(x) & Allele(y) & Allele(z)) -> (GovernedBy(x,y,z) & exists w.(Allele(w) & Allele(w) & Allele(w)) & exists w.(Allele(w) & Allele(w) & Allele(w) & Allele(w)))))", "score": -1}
{"id": "eqasc_validation_491", "prediction": "all x y z.((SkinColor(x) & Allele(y) & Allele(z)) -> (GovernedBy(x,y,z) & exists w.(Allele(w) & Allele(w) & Allele(w)) & exists w.(Allele(w) & Allele(w)))))", "score": -1}
{"id": "eqasc_validation_492", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> ErasedFrom(x,y))", "score": 0}
{"id": "eqasc_validation_492", "prediction": "all x.(SkinColor(x) -> ErasedFromGenes(x))", "score": 0}
{"id": "eqasc_validation_492", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> ErasedFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_492", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> HearnedFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_492", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> HearnedFrom(x,y))", "score": 0}
{"id": "eqasc_validation_492", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> HealedFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_492", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> HeardFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_492", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> HealedFrom(x,y))", "score": 0}
{"id": "eqasc_validation_492", "prediction": "all x y.((SkinColour(x) & Gene(y)) -> ErasedFrom(x,y))", "score": 0}
{"id": "eqasc_validation_492", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> Erased(x,y,z))", "score": 0}
{"id": "eqasc_validation_492", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> HeardFrom(x,y))", "score": 0}
{"id": "eqasc_validation_492", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> InheritsFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_492", "prediction": "all x.(SkinColor(x) -> inheritedFromGenes(x))", "score": 0}
{"id": "eqasc_validation_492", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> ErasedFromGenes(x,y))", "score": 0}
{"id": "eqasc_validation_492", "prediction": "all x y.((SkinColor(x) & Gene(y)) -> inheritedFrom(x,y))", "score": 0}
{"id": "eqasc_validation_492", "prediction": "all x y z.((SkinColor(x) & Gene(y) & Gene(z)) -> ErroneousFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_493", "prediction": "all x.(Melanin(x) -> ResponsibleForSkinColor(x))", "score": 0}
{"id": "eqasc_validation_493", "prediction": "all x.(Melanin(x) -> SkinColor(x))", "score": 0}
{"id": "eqasc_validation_493", "prediction": "all x y.((Melanin(x) & SkinColor(y)) -> ResponsibleFor(x,y))", "score": 0}
{"id": "eqasc_validation_493", "prediction": "all x y z.((Melanin(x) & SkinColor(y) & SkinColor(z)) -> ResponsibleFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_493", "prediction": "all x.((Melanin(x) & SkinColor(x)) -> ResponsibleFor(x,y))", "score": 0}
{"id": "eqasc_validation_493", "prediction": "all x y.((Melanin(x) & SkinColor(y)) -> Responsible(x,y))", "score": 0}
{"id": "eqasc_validation_493", "prediction": "all x y z.((Melanin(x) & SkinColor(y) & Skin(z)) -> ResponsibleFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_493", "prediction": "all x.(Melanin(x) -> SkinColorResponsible(x))", "score": 0}
{"id": "eqasc_validation_493", "prediction": "all x y.((Melanin(x) & Skin(y)) -> ResponsibleFor(x,y))", "score": 0}
{"id": "eqasc_validation_493", "prediction": "all x y z.((Melanin(x) & SkinColor(y) & SkinColor(z)) -> Responsible(x,y,z))", "score": 0}
{"id": "eqasc_validation_493", "prediction": "all x y z.((Melanin(x) & SkinColor(y) & Color(z)) -> ResponsibleFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_493", "prediction": "all x y z.((Melanin(x) & SkinColor(y) & SkinColor(z)) -> ResponsibleFor(x,y))", "score": 0}
{"id": "eqasc_validation_494", "prediction": "all x.(SkinColor(x) -> (Grey(x) | Brown(x)))", "score": 0}
{"id": "eqasc_validation_494", "prediction": "all x y.((SkinColor(x) & Grey(y)) -> Brown(y))", "score": 0}
{"id": "eqasc_validation_494", "prediction": "all x.(SkinColor(x) -> (GreyToBrown(x)))", "score": 0}
{"id": "eqasc_validation_494", "prediction": "all x.(SkinColor(x) -> (Grey(x) & Brown(x)))", "score": 0}
{"id": "eqasc_validation_494", "prediction": "all x.(SkinColor(x) -> (Gray(x) | Brown(x)))", "score": 0}
{"id": "eqasc_validation_494", "prediction": "all x y z.((SkinColor(x) & Grey(y) & Brown(z)) -> VariatesFromTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_494", "prediction": "all x.(SkinColor(x) -> (Grint(x) | Brown(x)))", "score": 0}
{"id": "eqasc_validation_494", "prediction": "all x.((SkinColor(x) & Grey(x)) -> Brown(x))", "score": 0}
{"id": "eqasc_validation_494", "prediction": "all x y z.((SkinColor(x) & Grey(y) & Brown(z)) -> Vary(x,y,z))", "score": 0}
{"id": "eqasc_validation_494", "prediction": "all x y z.((SkinColor(x) & Grey(y) & Brown(z)) -> Variates(x,y,z))", "score": 0}
{"id": "eqasc_validation_494", "prediction": "all x y z.((SkinColor(x) & Grey(y) & Brown(z)) -> Variable(x,y,z))", "score": 0}
{"id": "eqasc_validation_494", "prediction": "all x.(SkinColor(x,y) -> (Grey(y) | Brown(y)))", "score": 0}
{"id": "eqasc_validation_494", "prediction": "exists x.(SkinColor(x) & Grey(x) & Brown(x))", "score": 0}
{"id": "eqasc_validation_494", "prediction": "all x y.((SkinColor(x) & Grey(y) & Brown(y)) -> Variates(x,y))", "score": 0}
{"id": "eqasc_validation_494", "prediction": "all x.((SkinColor(x) & Grey(x) & Brown(x)) -> SkinColor(x))", "score": 0}
{"id": "eqasc_validation_494", "prediction": "all x y.((SkinColor(x) & Grey(y) & Brown(y)) -> Variable(x,y))", "score": 0}
{"id": "eqasc_validation_495", "prediction": "all x.((White(x) | Brown(x)) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_495", "prediction": "all x.(White(x) | Brown(x)) -> PolygenicTrait(x))", "score": -1}
{"id": "eqasc_validation_495", "prediction": "all x.((White(x) | Brown(x)) -> PolygenicTreatment(x))", "score": 0}
{"id": "eqasc_validation_495", "prediction": "all x.((White(x) | Brown(x)) -> ComesFromPolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_495", "prediction": "all x y.((White(x) | Brown(x)) -> PolygenicTrait(y))", "score": 0}
{"id": "eqasc_validation_495", "prediction": "all x.((White(x) | Brown(x)) -> exists y.(PolygenicTrait(y) & ComesFrom(y,x)))", "score": 0}
{"id": "eqasc_validation_495", "prediction": "all x.(WhiteOrBrown(x) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_495", "prediction": "all x.((White(x) | Brown(x)) -> exists y.(PolygenicTrait(y) & ComesFrom(x,y)))", "score": 0}
{"id": "eqasc_validation_495", "prediction": "all x.(White(x) | Brown(x)) -> ComesFromPolygenicTrait(x))", "score": -1}
{"id": "eqasc_validation_495", "prediction": "all x.((White(x) | Brown(x)) -> ComesFromPolygenicTreatment(x))", "score": 0}
{"id": "eqasc_validation_495", "prediction": "all x.((White(x) | Brown(x)) -> PolygenicTait(x))", "score": 0}
{"id": "eqasc_validation_496", "prediction": "all x.(Chapter5(x) -> (PolygenicInheritance(x) & Intelligence(x)))", "score": 0}
{"id": "eqasc_validation_496", "prediction": "all x.(Chapter5(x) -> (DiscussesPolygenicInheritance(x) & DiscussesIntelligence(x)))", "score": 0}
{"id": "eqasc_validation_496", "prediction": "all x.(Chapter5) -> (PolygenicInheritance(x) & Intelligence(x)))", "score": -1}
{"id": "eqasc_validation_496", "prediction": "all x y.((Chapter5(x) & PolygenicInheritance(y) & Intelligence(y)) -> Discusses(x,y))", "score": 0}
{"id": "eqasc_validation_496", "prediction": "all x y z.((Chapter5(x) & PolygenicInheritance(y) & Intelligence(z)) -> Discusses(x,y,z))", "score": 0}
{"id": "eqasc_validation_496", "prediction": "all x y.((Chapter5(x) & PolygenicInheritance(y) & Intelligence(y)) -> Discuts(x,y))", "score": 0}
{"id": "eqasc_validation_496", "prediction": "all x y.((Chapter5(x) & PolygenicInheritance(y) & Intelligence(x)) -> Discusses(x,y))", "score": 0}
{"id": "eqasc_validation_496", "prediction": "all x.((Chapter5(x) & PolygenicInheritance(x) & Intelligence(x)) -> Discusses(x,y))", "score": 0}
{"id": "eqasc_validation_496", "prediction": "(DiscussesPolygenicInheritance(Chapter5) & DiscussesIntelligence(Chapter5))", "score": 0}
{"id": "eqasc_validation_496", "prediction": "all x.(Chapter5) -> (DiscussesPolygenicInheritance(x) & DiscussesIntelligence(x)))", "score": -1}
{"id": "eqasc_validation_496", "prediction": "all x y z.((Chapter5(x) & PolygenicInheritance(y) & Intelligence(z)) -> Discuts(x,y,z))", "score": 0}
{"id": "eqasc_validation_496", "prediction": "all x y.((Chapter5(x) & PolygenicInheritance(y) & Intelligence(z)) -> Discusses(x,y,z))", "score": 0}
{"id": "eqasc_validation_496", "prediction": "all x y.((Chapter5(x) & PolygenicInheritance(y) & Intelligence(x)) -> Discuts(x,y))", "score": 0}
{"id": "eqasc_validation_496", "prediction": "all x.(Chapter5(x) -> (DisputesPolygenicInheritance(x) & DiscussesIntelligence(x)))", "score": 0}
{"id": "eqasc_validation_496", "prediction": "all x y.((Chapter5(x) & PolygenicInheritance(y) & Intelligence(y)) -> Discuses(x,y))", "score": 0}
{"id": "eqasc_validation_496", "prediction": "all x y.((Chapter(x) & PolygenicInheritance(y) & Intelligence(y)) -> Discusses(x,y))", "score": 0}
{"id": "eqasc_validation_497", "prediction": "all x.(Intelligence(x) -> ErasedTrait(x))", "score": 0}
{"id": "eqasc_validation_497", "prediction": "all x.(Intelligence(x) -> (EarnedTrait(x) & HasTrait(x)))", "score": 0}
{"id": "eqasc_validation_497", "prediction": "all x.(Intelligence(x) -> HasEarnedTrait(x))", "score": 0}
{"id": "eqasc_validation_497", "prediction": "all x.(Intelligence(x) -> (ErasedTrait(x) & HasTrait(x)))", "score": 0}
{"id": "eqasc_validation_497", "prediction": "all x.(Intelligence(x) -> HealedTrait(x))", "score": 0}
{"id": "eqasc_validation_497", "prediction": "all x.(Intelligence(x) -> (EarnedTrait(x) & GenealogicalTrait(x)))", "score": 0}
{"id": "eqasc_validation_497", "prediction": "all x.(Intelligence(x) -> (EarnedTrait(x) & ErasedTrait(x)))", "score": 0}
{"id": "eqasc_validation_497", "prediction": "all x y.((Intelligence(x) & Trait(y)) -> Erased(x,y))", "score": 0}
{"id": "eqasc_validation_497", "prediction": "all x.(Intelligence(x) -> (HasTrait(x) & HasTrait(x)))", "score": 0}
{"id": "eqasc_validation_497", "prediction": "all x.(Intelligence(x) -> (ErasedTrait(x) & GenealogicalTrait(x)))", "score": 0}
{"id": "eqasc_validation_497", "prediction": "all x.(Intelligence(x) -> (ErasedTrait(x) & ErasedTrait(x)))", "score": 0}
{"id": "eqasc_validation_498", "prediction": "all x.((AmountOfMelaninPigmentInSkin(x) & PolygenicTrait(x)) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_498", "prediction": "all x.((MelaninPigmentInSkin(x) & PolygenicTrait(x)) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_498", "prediction": "all x.((MelaninPigment(x) & Skin(x)) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_498", "prediction": "all x.(MelaninPigmentInSkin(x) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_498", "prediction": "all x.((AmountOfMelaninPigment(x) & InSkin(x)) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_498", "prediction": "all x y.((MelaninPigment(x) & Skin(y)) -> PolygenicTrait(x,y))", "score": 0}
{"id": "eqasc_validation_498", "prediction": "all x y.((MelaninPigment(x) & Skin(y)) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_498", "prediction": "all x.((MelaninPigment(x) & InSkin(x)) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_498", "prediction": "all x.(MelaninPigment(x) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_498", "prediction": "all x.((MelaninPigmentInSkin(x) & PolygenicTrait(x)) -> PolygenicTreatment(x))", "score": 0}
{"id": "eqasc_validation_499", "prediction": "all x y.((Pregnancy(x) & Offspring(y)) -> CarryingFromFertilizationToBirth(x,y))", "score": 0}
{"id": "eqasc_validation_499", "prediction": "all x y z.((Pregnancy(x) & Offspring(y) & Fertilization(z)) -> CarryingUntilBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_499", "prediction": "all x y.((Pregnancy(x) & Offspring(y)) -> CarriesFromFertilizationToBirth(x,y))", "score": 0}
{"id": "eqasc_validation_499", "prediction": "all x y z.((Pregnancy(x) & Offspring(y) & Fertilization(z)) -> CarryingFromToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_499", "prediction": "all x y z.((Pregnancy(x) & Offspring(y) & Fertilization(z)) -> CarriesUntilBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_499", "prediction": "all x.(Pregnancy(x) -> (CarriesOffspring(x) & FromFertilizationToBirth(x)))", "score": 0}
{"id": "eqasc_validation_499", "prediction": "all x.(Pregnancy(x) -> (CarriesOffspringFromFertilization(x) & UntilBirth(x)))", "score": 0}
{"id": "eqasc_validation_499", "prediction": "all x y z.((Pregnancy(x) & Offspring(y) & Fertilization(z)) -> Carrying(x,y,z))", "score": 0}
{"id": "eqasc_validation_499", "prediction": "all x y.((Pregnancy(x) & Offspring(y)) -> CarryingFromFertilizationUntilBirth(x,y))", "score": 0}
{"id": "eqasc_validation_499", "prediction": "all x.(Pregnancy(x) -> (CarriesOffspringFromFertilization(x) & Birth(x)))", "score": 0}
{"id": "eqasc_validation_499", "prediction": "all x y.((Pregnancy(x) & Offspring(y) & Fertilization(y)) -> CarryingUntilBirth(x,y))", "score": 0}
{"id": "eqasc_validation_499", "prediction": "all x.(Pregnancy(x) -> (CarriesOffspringFromFertilizationToBirth(x)))", "score": 0}
{"id": "eqasc_validation_499", "prediction": "all x y z.((Pregnancy(x) & Offspring(y) & Fertilization(z)) -> CarriesFromToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_499", "prediction": "all x.(Pregnancy(x) -> (CarriesOffspring(x) & FromFertilization(x) & UntilBirth(x)))", "score": 0}
{"id": "eqasc_validation_499", "prediction": "all x y.((Pregnancy(x) & Offspring(y)) -> Carrying(x,y))", "score": 0}
{"id": "eqasc_validation_500", "prediction": "all x.(Pregnancy(x) -> FertilizedEgg(x))", "score": 0}
{"id": "eqasc_validation_500", "prediction": "all x.(Pregnancy(x) -> FertileEgg(x))", "score": 0}
{"id": "eqasc_validation_500", "prediction": "all x y.((Pregnancy(x) & FertileEgg(y)) -> StartsWith(x,y))", "score": 0}
{"id": "eqasc_validation_500", "prediction": "all x y.((Pregnancy(x) & FertileEgg(y)) -> BeginsWith(x,y))", "score": 0}
{"id": "eqasc_validation_500", "prediction": "all x y.((Pregnancy(x) & FertilizedEgg(y)) -> StartsWith(x,y))", "score": 0}
{"id": "eqasc_validation_500", "prediction": "all x.(Pregnancy(x) -> StartsWithFertilizedEgg(x))", "score": 0}
{"id": "eqasc_validation_500", "prediction": "all x y.((Pregnancy(x) & FertilizedEgg(y)) -> BeginsWith(x,y))", "score": 0}
{"id": "eqasc_validation_500", "prediction": "all x y z.((Pregnancy(x) & Egg(y) & Fertile(z)) -> StartsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_500", "prediction": "all x y z.((Pregnancy(x) & Egg(y) & Fertile(z)) -> BeginsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_500", "prediction": "all x y z.((Pregnancy(x) & Egg(y) & Fertilized(z)) -> StartsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_500", "prediction": "all x.((Pregnancy(x) & FertileEgg(x)) -> StartsWith(x,y))", "score": 0}
{"id": "eqasc_validation_500", "prediction": "all x.((Pregnancy(x) & FertilizedEgg(x)) -> StartsWith(x,y))", "score": 0}
{"id": "eqasc_validation_500", "prediction": "all x.(Pregnancy(x) -> (FertileEgg(x) & StartsWith(x,FertileEgg)))", "score": 0}
{"id": "eqasc_validation_500", "prediction": "all x y z.((Pregnancy(x) & Egg(y) & Fertilized(z)) -> BeginsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_501", "prediction": "all x.((FertilizedEgg(x) & CarriedUntilBirth(x)) -> CanCreateOffspring(x))", "score": 0}
{"id": "eqasc_validation_501", "prediction": "all x.((FertileEgg(x) & CarriedUntilBirth(x)) -> CanCreateOffspring(x))", "score": 0}
{"id": "eqasc_validation_501", "prediction": "all x y.((FertilizedEgg(x) & CarriedUntilBirth(x)) -> CanCreateOffspring(x,y))", "score": 0}
{"id": "eqasc_validation_501", "prediction": "all x.((FertilizedEgg(x) & CarriedToBirth(x)) -> CanCreateOffspring(x))", "score": 0}
{"id": "eqasc_validation_501", "prediction": "all x y.((FertilizedEgg(x) & CarriedUntilBirth(y)) -> CanCreateOffspring(x,y))", "score": 0}
{"id": "eqasc_validation_501", "prediction": "all x.((FertilizedEgg(x) & CarriedUntilBirth(x)) -> CreatesOffspring(x))", "score": 0}
{"id": "eqasc_validation_501", "prediction": "all x y.((FertilizedEgg(x) & CarriedUntilBirth(x)) -> CanCreateOffspring(x))", "score": 0}
{"id": "eqasc_validation_501", "prediction": "all x y.((FertilizedEgg(x) & CarriedUntilBirth(x,y)) -> CanCreateOffspring(x,y))", "score": 0}
{"id": "eqasc_validation_501", "prediction": "all x y.((FertilizedEgg(x) & CarriedToBirth(x)) -> CanCreateOffspring(x,y))", "score": 0}
{"id": "eqasc_validation_501", "prediction": "all x y.((FertileEgg(x) & CarriedUntilBirth(x)) -> CanCreateOffspring(x,y))", "score": 0}
{"id": "eqasc_validation_501", "prediction": "all x.((FertileEgg(x) & CarriedToBirth(x)) -> CanCreateOffspring(x))", "score": 0}
{"id": "eqasc_validation_501", "prediction": "all x y.((FertilizedEgg(x) & CarriedUntilBirth(x,y)) -> CanCreateOffspring(x))", "score": 0}
{"id": "eqasc_validation_501", "prediction": "all x y.((FertilizedEgg(x) & CarriedToBirth(x)) -> CanCreateOffspring(x))", "score": 0}
{"id": "eqasc_validation_502", "prediction": "all x.(Birth(x) -> MainComponentOfPopulationGrowth(x))", "score": 0}
{"id": "eqasc_validation_502", "prediction": "all x y.((Birth(x) & PopulationGrowth(y)) -> MainComponent(x,y))", "score": 0}
{"id": "eqasc_validation_502", "prediction": "all x.(Birth(x) -> MainCommponentOfPopulationGrowth(x))", "score": 0}
{"id": "eqasc_validation_502", "prediction": "all x y.((Birth(x) & PopulationGrowth(y)) -> MainComponentOf(x,y))", "score": 0}
{"id": "eqasc_validation_502", "prediction": "all x.(Birth(x) -> PopulationGrowthComponent(x))", "score": 0}
{"id": "eqasc_validation_502", "prediction": "all x y.((Birth(x) & Population(y)) -> MainComponentOfGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_502", "prediction": "all x y z.((Birth(x) & PopulationGrowth(y) & Population(z)) -> MainComponent(x,y,z))", "score": 0}
{"id": "eqasc_validation_502", "prediction": "all x y z.((Birth(x) & PopulationGrowth(y) & Population(z)) -> MainComponentOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_502", "prediction": "all x.(Birth(x) -> MainCommitmentOfPopulationGrowth(x))", "score": 0}
{"id": "eqasc_validation_502", "prediction": "all x y z.((Birth(x) & Population(y) & Population(z)) -> MainComponentOfGrowth(x,y,z))", "score": 0}
{"id": "eqasc_validation_502", "prediction": "all x y z.((Birth(x) & PopulationGrowth(y) & Population(z)) -> MainComponent(x,y))", "score": 0}
{"id": "eqasc_validation_502", "prediction": "all x y z.((Birth(x) & PopulationGrowth(y) & PopulationGrowth(z)) -> MainComponent(x,y,z))", "score": 0}
{"id": "eqasc_validation_502", "prediction": "all x y z.((Birth(x) & Population(y) & Population(z)) -> MainComponentOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_502", "prediction": "all x y.((Birth(x) & Population(y)) -> MainComponent(x,y))", "score": 0}
{"id": "eqasc_validation_502", "prediction": "all x.(Birth(x) -> (MainComponentOfPopulationGrowth(x)))", "score": 0}
{"id": "eqasc_validation_503", "prediction": "all x.(PregnancyLeadsToPopulationGrowth(x) -> PopulationGrowth(x))", "score": 0}
{"id": "eqasc_validation_503", "prediction": "all x y.((Pregnancy(x) & PopulationGrowth(y)) -> LeadsTo(x,y))", "score": 0}
{"id": "eqasc_validation_503", "prediction": "all x y z.((Pregnancy(x) & PopulationGrowth(y) & Population(z)) -> LeadsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_503", "prediction": "all x y z.((Pregnancy(x) & Population(y) & Population(z)) -> LeadsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_503", "prediction": "all x y z.((Pregnancy(x) & PopulationGrowth(y) & PopulationGrowth(z)) -> LeadsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_503", "prediction": "all x y.((Pregnancy(x) & Population(y)) -> LeadsTo(x,y))", "score": 0}
{"id": "eqasc_validation_503", "prediction": "all x y.((Pregnancy(x) & Population(y)) -> LeadsToGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_503", "prediction": "all x y z.((Pregnancy(x) & Population(y) & PopulationGrowth(z)) -> LeadsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_503", "prediction": "all x y.((Pregnancy(x) & Population(y)) -> LeadsToPopulationGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_503", "prediction": "all x y z.((Pregnancy(x) & PopulationGrowth(y) & Population(z)) -> LeadsTo(x,y))", "score": 0}
{"id": "eqasc_validation_503", "prediction": "all x y z.((Pregnancy(x) & PopulationGrowth(y) & Population(z)) -> LeadsTo(x,z))", "score": 0}
{"id": "eqasc_validation_503", "prediction": "all x.((PregnancyLeadsToPopulationGrowth(x)) -> PopulationGrowth(x))", "score": 0}
{"id": "eqasc_validation_503", "prediction": "all x.((Pregnancy(x) & LeadsToPopulationGrowth(x)) -> PopulationGrowth(x))", "score": 0}
{"id": "eqasc_validation_503", "prediction": "all x.((Pregnancy(x) & PopulationGrowth(x)) -> LeadsTo(x,Pregnancy,PopulationGrowth))", "score": 0}
{"id": "eqasc_validation_503", "prediction": "all x y z.((Pregnancy(x) & Population(y) & Population(z)) -> LeadsToGrowth(x,y,z))", "score": 0}
{"id": "eqasc_validation_504", "prediction": "all x.(Mother(x) -> (ChoosesSex(x) & LeadsToPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_504", "prediction": "all x.(Mother(x) -> (HasSex(x) & LeadsToPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_504", "prediction": "all x y z.((Mother(x) & Sex(y) & Pregnancy(z)) -> (Chooses(x,y) & LeadsTo(x,z)))", "score": 0}
{"id": "eqasc_validation_504", "prediction": "all x y.((Mother(x) & Sex(y)) -> (Chooses(x,y) & LeadsToPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_504", "prediction": "all x y.((Mother(x) & Sex(y)) -> (Chooses(x,y) & LeadsTo(x,y)))", "score": 0}
{"id": "eqasc_validation_504", "prediction": "all x y z.((Mother(x) & Sexual(y) & Pregnancy(z)) -> (Chooses(x,y) & LeadsTo(x,z)))", "score": 0}
{"id": "eqasc_validation_504", "prediction": "all x y.((Mother(x) & Mother(y)) -> (ChoosesSex(x,y) & LeadsToPregnancy(x,y)))", "score": 0}
{"id": "eqasc_validation_504", "prediction": "all x y.((Mother(x) & Mother(y)) -> (ChoosesSex(x,y) & LeadsToPregnancy(y)))", "score": 0}
{"id": "eqasc_validation_504", "prediction": "all x.(Mother(x) -> (PrefersSex(x) & LeadsToPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_504", "prediction": "all x.((Mother(x) & HasSex(x)) -> LeadsToPregnancy(x))", "score": 0}
{"id": "eqasc_validation_504", "prediction": "all x.(Mother(x) -> (CausesSex(x) & LeadsToPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_504", "prediction": "all x y.((Mother(x) & Sex(y)) -> (Chooses(x,y) & LeadsToPregnancy(x,y)))", "score": 0}
{"id": "eqasc_validation_504", "prediction": "all x.(Mother(x) -> (ChoicesSex(x) & LeadsToPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_504", "prediction": "all x y z.((Mother(x) & Sex(y) & Pregnancy(z)) -> (Prefers(x,y) & LeadsTo(x,z)))", "score": 0}
{"id": "eqasc_validation_504", "prediction": "all x y z.((Mother(x) & Sex(y) & Pregnancy(z)) -> (Causes(x,y) & LeadsTo(x,z)))", "score": 0}
{"id": "eqasc_validation_505", "prediction": "all x y.((Mother(x) & Offspring(y)) -> CarriesFromFertilizationToBirth(x,y))", "score": 0}
{"id": "eqasc_validation_505", "prediction": "all x y z.((Mother(x) & Offspring(y) & Fertilization(z)) -> CarriesFromToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_505", "prediction": "all x y z w.((Mother(x) & Offspring(y) & Fertilization(z) & Birth(w)) -> CarriesFrom(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_505", "prediction": "all x y z w.((Mother(x) & Offspring(y) & Fertilization(z) & Birth(w)) -> CarriesFromFertilizationToBirth(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_505", "prediction": "all x y z.((Mother(x) & Offspring(y) & Fertilization(z)) -> CarryFromToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_505", "prediction": "all x y.((Mother(x) & Offspring(y)) -> CarryFromFertilizationToBirth(x,y))", "score": 0}
{"id": "eqasc_validation_505", "prediction": "all x y z.((Mother(x) & Offspring(y) & Fertilization(z) & Birth(z)) -> CarriesFromFertilizationToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_505", "prediction": "all x y z.((Mother(x) & Offspring(y) & Fertilization(z) & CarryFromToBirth(x,y,z)) -> CarryFromFertilizationToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_505", "prediction": "all x y z.((Mother(x) & Offspring(y) & Fertilization(z) & Fertilization(z)) -> CarriesFromToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_505", "prediction": "all x y z w.((Mother(x) & Offspring(y) & Fertilization(z) & Birth(w)) -> CarriesFromFertilizationToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_505", "prediction": "all x y z w.((Mother(x) & Offspring(y) & Fertilization(z) & Birth(w)) -> CarriesFromTo(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_505", "prediction": "all x y z.((Mother(x) & Offspring(y) & Fertilization(z) & CarryFromToBirth(x,y,z)) -> CarriesFromFertilizationToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_505", "prediction": "all x y z.((Mother(x) & Offspring(y) & Fertilization(z) & Carry(x,y,z)) -> Carry(x,y,z))", "score": 0}
{"id": "eqasc_validation_505", "prediction": "all x y z.((Mother(x) & Offspring(y) & Fertilization(z) & Fertilization(y) & Birth(z)) -> CarriesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_506", "prediction": "all x.(HumanEmbryonicDevelopment(x) -> FollowsHumanDevelopmentFromFertilizationToBirth(x))", "score": 0}
{"id": "eqasc_validation_506", "prediction": "all x.(HumanEmbryonicDevelopment(x) -> FollowsHumanDevelopment(x))", "score": 0}
{"id": "eqasc_validation_506", "prediction": "all x y.((HumanEmbryonicDevelopment(x) & Fertilization(y) & Birth(y)) -> FollowsDevelopment(x,y))", "score": 0}
{"id": "eqasc_validation_506", "prediction": "all x y z.((HumanEmbryonicDevelopment(x) & Fertilization(y) & Birth(z)) -> FollowsDevelopment(x,y,z))", "score": 0}
{"id": "eqasc_validation_506", "prediction": "all x y.((HumanEmbryonicDevelopment(x) & HumanFertilization(y)) -> FollowsDevelopment(x,y))", "score": 0}
{"id": "eqasc_validation_506", "prediction": "all x.(HumanEmbryonicDevelopment(x) -> FollowsHumanDevelopmentFromFertilizationThroughBirth(x))", "score": 0}
{"id": "eqasc_validation_506", "prediction": "all x y.((HumanEmbryonicDevelopment(x) & Fertilization(y)) -> FollowsDevelopment(x,y))", "score": 0}
{"id": "eqasc_validation_506", "prediction": "all x.(HumanEmbryonicDevelopment(x) -> FollowsDevelopmentFromFertilizationToBirth(x))", "score": 0}
{"id": "eqasc_validation_506", "prediction": "all x y z.((HumanEmbryonicDevelopment(x) & Fertilization(y) & Birth(z)) -> FollowsDevelopmentFromTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_506", "prediction": "all x y.((HumanEmbryonicDevelopment(x) & Fertilization(y) & Birth(y)) -> Follows(x,y))", "score": 0}
{"id": "eqasc_validation_506", "prediction": "all x y.((HumanEmbryonicDevelopment(x) & Fertilization(y) & Birth(y)) -> FollowsDevelopmentFromTo(x,y))", "score": 0}
{"id": "eqasc_validation_506", "prediction": "all x y z.((HumanEmbryonicDevelopment(x) & Fertilization(y) & Birth(z)) -> FollowsHumanDevelopment(x,y,z))", "score": 0}
{"id": "eqasc_validation_506", "prediction": "all x y z.((HumanEmbryonicDevelopment(x) & Fertilization(y) & Birth(z)) -> FollowsFromTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_506", "prediction": "all x y z.((HumanEmbryonicDevelopment(x) & Fertilization(y) & Birth(z)) -> Follows(x,y,z))", "score": 0}
{"id": "eqasc_validation_506", "prediction": "all x y.((HumanEmbryonicDevelopment(x) & Fertilization(y) & Birth(y)) -> FollowsHumanDevelopment(x,y))", "score": 0}
{"id": "eqasc_validation_506", "prediction": "all x y.((HumanEmbryonicDevelopment(x) & Human(y)) -> FollowsDevelopmentFromFertilizationToBirth(x,y))", "score": 0}
{"id": "eqasc_validation_507", "prediction": "all x.(Pregnancy(x) -> EmbryonicDevelopment(x))", "score": 0}
{"id": "eqasc_validation_507", "prediction": "all x.(Pregnancy(x) -> (EmbryonicDevelopment(x) & EmbryonicDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_507", "prediction": "all x.(Pregnancy(x) -> (EmbryonicDevelopment(x) & Pregnancy(x)))", "score": 0}
{"id": "eqasc_validation_507", "prediction": "all x y.((Pregnancy(x) & EmbryonicDevelopment(y)) -> EmbryonicDevelopment(x,y))", "score": 0}
{"id": "eqasc_validation_507", "prediction": "all x y.((Pregnancy(x) & EmbryonicDevelopment(y)) -> EmbryonicDevelopment(x))", "score": 0}
{"id": "eqasc_validation_507", "prediction": "all x.(Pregnancy(x) -> (EmbryonicDevelopment(x) & EndometrialDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_507", "prediction": "all x y.((Pregnancy(x) & EmbryonicDevelopment(y)) -> IsEmbryonic(x,y))", "score": 0}
{"id": "eqasc_validation_507", "prediction": "all x.(Pregnancy(x) -> (EmbryonicDevelopment(x) & EmbryonalDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_507", "prediction": "all x.(Pregnancy(x) -> (EmbryonicDevelopment(x) & PregnancyEmbryonicDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_507", "prediction": "all x y.((Pregnancy(x) & EmbryonicDevelopment(y)) -> IsEmbryonicDevelopment(x,y))", "score": 0}
{"id": "eqasc_validation_507", "prediction": "all x.(Pregnancy(x) -> (EmbryonicDevelopment(x) & IsEmbryonicDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_507", "prediction": "all x.(Pregnancy(x) -> IsEmbryonicDevelopment(x))", "score": 0}
{"id": "eqasc_validation_508", "prediction": "all x.(Offspring(x) -> (ComesIntoInexistenceAsResultOfPregnancy(x) | ComesIntoInexistenceAsResultOfPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_508", "prediction": "all x.(Offspring(x) -> ((Something(x) | Someone(x)) & ComesIntoInexistenceAsResultOfPregnancy(x))))", "score": -1}
{"id": "eqasc_validation_508", "prediction": "all x.(Offspring(x) -> (Something(x) | Someone(x) & ComesIntoInexistenceAsResultOfPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_508", "prediction": "all x.(Offspring(x) -> (Something(x) | Someone(x) & ComesIntoExistenceAsResultOfPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_508", "prediction": "all x.(Offspring(x) -> ((Something(x) | Someone(x)) & ComesIntoExistenceAsResultOfPregnancy(x))))", "score": -1}
{"id": "eqasc_validation_508", "prediction": "all x.(Offspring(x) -> (IsSomething(x) | IsPerson(x) & ComesIntoInexistenceAsResultOfPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_508", "prediction": "all x.(Offspring(x) -> ((Something(x) | Person(x)) & ComesIntoInexistenceAsResultOfPregnancy(x))))", "score": -1}
{"id": "eqasc_validation_508", "prediction": "all x.(Offspring(x) -> (IsSomething(x) | IsSomeone(x) & ComesIntoInexistenceAsResultOfPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_508", "prediction": "all x.(Offspring(x) -> (IsSomething(x) | IsPerson(x) & ComesIntoExistenceAsResultOfPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_508", "prediction": "all x.(Offspring(x) -> (IsSomething(x) | IsSomeone(x) & ComesIntoExistenceAsResultOfPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_508", "prediction": "all x.(Offspring(x) -> ((Something(x) | Someone(x)) & ComesIntoInexistenceAsResultOfPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_508", "prediction": "all x.(Offspring(x) -> (ComesIntoInexistenceAsResultOfPregnancy(x) | ComesIntoInexistenceAsResultOfPaternity(x)))", "score": 0}
{"id": "eqasc_validation_508", "prediction": "all x.(Offspring(x) -> ((Something(x) | Someone(x)) & ComesIntoExistenceAsResultOfPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_508", "prediction": "all x.(Offspring(x) -> ((Something(x) | Person(x)) & ComesIntoInexistenceAsResultOfPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_508", "prediction": "all x.(Offspring(x) -> (exists y.(Patient(y) & ComesIntoExistence(x,y)))))", "score": -1}
{"id": "eqasc_validation_508", "prediction": "all x.(Offspring(x) -> (ComesIntoInexistenceAsResultOfPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_509", "prediction": "all x y.((Pregnancy(x) & Fertilization(y)) -> ResultsFrom(x,y))", "score": 0}
{"id": "eqasc_validation_509", "prediction": "all x y z.((Pregnancy(x) & Fertilization(y) & Fertilization(z)) -> ResultsFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_509", "prediction": "all x.(PregnancyResultsFromFertilization(x) -> PregnancyResultsFromFertilization(x))", "score": 0}
{"id": "eqasc_validation_509", "prediction": "all x.((PregnancyResultsFromFertilization(x)) -> Fertilization(x))", "score": 0}
{"id": "eqasc_validation_509", "prediction": "all x y z.((Paternity(x) & Fertilization(y) & Fertilization(z)) -> ResultsFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_509", "prediction": "all x.((PregnancyResultsFromFertilization(x) & Fertilization(x)) -> PregnancyResultsFromFertilization(x))", "score": 0}
{"id": "eqasc_validation_509", "prediction": "all x.((PregnancyResult(x) & Fertilization(x)) -> Fertilization(x))", "score": 0}
{"id": "eqasc_validation_509", "prediction": "all x y.((Paternity(x) & Fertilization(y)) -> ResultsFrom(x,y))", "score": 0}
{"id": "eqasc_validation_509", "prediction": "all x y.((Pregnancy(x) & Fertilization(y)) -> ResultsFromFertilization(x,y))", "score": 0}
{"id": "eqasc_validation_509", "prediction": "all x.((PregnancyResultsFromFertilization(x) & Fertilization(x)) -> Fertilization(x))", "score": 0}
{"id": "eqasc_validation_509", "prediction": "all x y z.((Pregnancy(x) & Fertilization(y) & Fertilization(z)) -> (ResultsFrom(x,y,z) & Fertilization(x)))", "score": 0}
{"id": "eqasc_validation_509", "prediction": "all x y z.((Pregnancy(x) & Fertilization(y) & Fertilization(z)) -> ResultsFromFertilization(x,y,z))", "score": 0}
{"id": "eqasc_validation_509", "prediction": "all x y.((PregnancyResult(x) & Fertilization(y)) -> Fertilization(x,y))", "score": 0}
{"id": "eqasc_validation_509", "prediction": "all x y z.((Pregnancy(x) & Fertilization(y) & Fertilization(z)) -> (ResultsFrom(x,y) & Fertilization(x,z)))", "score": 0}
{"id": "eqasc_validation_509", "prediction": "all x.((PregnancyResult(x) & Fertilization(x)) -> FertilizationResult(x))", "score": 0}
{"id": "eqasc_validation_509", "prediction": "all x y z.((Pregnancy(x) & Fertilization(y) & Fertilization(z)) -> (ResultsFrom(x,y,z) & Fertilization(z)))", "score": 0}
{"id": "eqasc_validation_510", "prediction": "all x.(Infertility(x) -> (InabilityToCarry(x) & FullTerm(x)))", "score": 0}
{"id": "eqasc_validation_510", "prediction": "all x.(Infertility(x) -> (InabilityToCarryPregnancyToFullTerm(x)))", "score": 0}
{"id": "eqasc_validation_510", "prediction": "all x.(Infertility(x) -> (InabilityToCarryPregnancy(x) & FullTerm(x)))", "score": 0}
{"id": "eqasc_validation_510", "prediction": "all x.(Infertility(x) -> (InabilityToCarry(x,pregnancy) & FullTerm(x)))", "score": 0}
{"id": "eqasc_validation_510", "prediction": "all x y.((Infertility(x) & Pregnancy(y)) -> InabilityToCarryToFullTerm(x,y))", "score": 0}
{"id": "eqasc_validation_510", "prediction": "all x.(Infertility(x) -> (InabilityToCarry(x,Paternity) & FullTerm(x)))", "score": 0}
{"id": "eqasc_validation_510", "prediction": "all x.(Infertility(x) -> (InabilityToCarryPaternityToFullTerm(x)))", "score": 0}
{"id": "eqasc_validation_510", "prediction": "all x.(Infertility(x) -> (InabilityToCarry(x,y) & FullTerm(y)))", "score": 0}
{"id": "eqasc_validation_510", "prediction": "all x y.((Infertility(x) & Pregnancy(y)) -> InabilityToCarry(x,y))", "score": 0}
{"id": "eqasc_validation_510", "prediction": "all x.(Infertility(x) -> (InabilityToCarryToFullTerm(x)))", "score": 0}
{"id": "eqasc_validation_510", "prediction": "all x.(Infertility(x) -> (InabilityToCarryToFullTerm(x) & CarryToFullTerm(x)))", "score": 0}
{"id": "eqasc_validation_510", "prediction": "all x.(Infertility(x) -> (InabilityToCarryFullTerm(x) & Infertility(x)))", "score": 0}
{"id": "eqasc_validation_511", "prediction": "all x y.((Offspring(x) & Fertilization(y) & Birth(y)) -> CarryingToFullTerm(x,y))", "score": 0}
{"id": "eqasc_validation_511", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & Birth(z)) -> CarryingToFullTerm(x,y,z))", "score": 0}
{"id": "eqasc_validation_511", "prediction": "all x y.((Offspring(x) & Fertilization(y) & Birth(z)) -> CarryingToFullTerm(x,y,z))", "score": 0}
{"id": "eqasc_validation_511", "prediction": "all x y.((Offspring(x) & Fertilisation(y) & Birth(y)) -> CarryingToFullTerm(x,y))", "score": 0}
{"id": "eqasc_validation_511", "prediction": "all x y z.((Offspring(x) & Fertilisation(y) & Birth(z)) -> CarryingToFullTerm(x,y,z))", "score": 0}
{"id": "eqasc_validation_511", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & Birth(z) & CarryingToFullTerm(x,y,z)) -> FromFertilizationToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_511", "prediction": "all x y.((Offspring(x) & Fertilization(y)) -> CarryingToFullTerm(x,y))", "score": 0}
{"id": "eqasc_validation_511", "prediction": "all x y.((Offspring(x) & Fertilization(y) & Birth(x)) -> CarryingToFullTerm(x,y))", "score": 0}
{"id": "eqasc_validation_511", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & Birth(z) & CarryingToFullTerm(x,y,z)) -> FertilizationUntilBirth(x))", "score": 0}
{"id": "eqasc_validation_511", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & Birth(z)) -> CarryingToFullTermFromFertilizationToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_511", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & Birth(z) & CarryingToFullTerm(x,y,z)) -> FertilizationUntilBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_511", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & Birth(z) & CarryingToFullTerm(x,y,z)) -> FromFertilizationToBirth(x))", "score": 0}
{"id": "eqasc_validation_511", "prediction": "all x y.((Fertilization(x) & Birth(y)) -> CarryingOffspringToFullTerm(x,y))", "score": 0}
{"id": "eqasc_validation_511", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & Birth(z) & CarryingToFullTerm(x,y,z)) -> FertilizationUntilBirth(y,z))", "score": 0}
{"id": "eqasc_validation_511", "prediction": "all x y z w.((Offspring(x) & Fertilization(y) & Birth(z) & CarryingToFullTerm(x,y,z)) -> FromFertilizationToBirth(x,w))", "score": 0}
{"id": "eqasc_validation_511", "prediction": "all x y.((Offspring(x) & Fertilization(y) & Birth(y)) -> CarryingToFullTermFromFertilizationToBirth(x,y))", "score": 0}
{"id": "eqasc_validation_512", "prediction": "all x.(Pregnancy(x) -> Gestation(x))", "score": 0}
{"id": "eqasc_validation_512", "prediction": "all x.(Pregnancy(x) -> AnotherWordForGestation(x))", "score": 0}
{"id": "eqasc_validation_512", "prediction": "all x.(Pregnancy(x) -> Gestion(x))", "score": 0}
{"id": "eqasc_validation_512", "prediction": "all x.(Pregnancy(x) -> (Gestation(x) | -Gestation(x)))", "score": 0}
{"id": "eqasc_validation_512", "prediction": "all x y.((Pregnancy(x) & Gestation(y)) -> AnotherWordFor(x,y))", "score": 0}
{"id": "eqasc_validation_512", "prediction": "all x y.((Pregnancy(x) & Gestation(y)) -> AnotherWord(x,y))", "score": 0}
{"id": "eqasc_validation_512", "prediction": "all x.(Pregnancy(x) -> (Gestation(x) | Gestation(x)))", "score": 0}
{"id": "eqasc_validation_512", "prediction": "all x.(Pregnancy(x) -> (Gestation(x) & AnotherWord(x)))", "score": 0}
{"id": "eqasc_validation_512", "prediction": "all x.(Pregnancy(x) -> (Gestation(x) & WordFor(x)))", "score": 0}
{"id": "eqasc_validation_512", "prediction": "all x y.((Pregnancy(x) & Gestation(y)) -> WordFor(x,y))", "score": 0}
{"id": "eqasc_validation_512", "prediction": "all x.(Pregnancy(x) -> (Gestation(x) & Word(x)))", "score": 0}
{"id": "eqasc_validation_512", "prediction": "all x.(Pregnancy(x) -> (Gestation(x) & AnotherWordFor(x)))", "score": 0}
{"id": "eqasc_validation_512", "prediction": "all x.(Pregnancy(x) -> (Gestation(x) | Pregnancy(x)))", "score": 0}
{"id": "eqasc_validation_512", "prediction": "all x.(Pregnancy(x) -> (Gestation(x) & WordForGestation(x)))", "score": 0}
{"id": "eqasc_validation_512", "prediction": "all x.(Pregnancy(x) -> OtherWordForGestation(x))", "score": 0}
{"id": "eqasc_validation_513", "prediction": "all x y.((Gestation(x) & Offspring(y)) -> CarryingFromFertilizationToBirth(x,y))", "score": 0}
{"id": "eqasc_validation_513", "prediction": "all x y z.((Gestation(x) & Offspring(y) & Fertilization(z)) -> CarryingUntilBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_513", "prediction": "all x y.((Offspring(x) & Fertilization(y)) -> CarryingUntilBirth(x,y))", "score": 0}
{"id": "eqasc_validation_513", "prediction": "all x y z.((Gestation(x) & Offspring(y) & Fertilization(z)) -> CarriesUntilBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_513", "prediction": "all x.(Gestation(x) -> (CarriesOffspring(x) & FromFertilizationToBirth(x)))", "score": 0}
{"id": "eqasc_validation_513", "prediction": "all x y.((Offspring(x) & Fertilization(y)) -> CarriesUntilBirth(x,y))", "score": 0}
{"id": "eqasc_validation_513", "prediction": "all x y z.((Gestation(x) & Offspring(y) & Fertilization(z)) -> CarryingFromToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_513", "prediction": "all x.(Gestation(x) -> (CarriesOffspringFromFertilization(x) & UntilBirth(x)))", "score": 0}
{"id": "eqasc_validation_513", "prediction": "all x.(Gestation(x) -> (CarriesOffspringFromFertilization(x) & Birth(x)))", "score": 0}
{"id": "eqasc_validation_513", "prediction": "all x y z.((Gestation(x) & Offspring(y) & Fertilization(z)) -> Carrying(x,y,z))", "score": 0}
{"id": "eqasc_validation_513", "prediction": "all x.(Gestation(x) -> (CarriesOffspringFromFertilizationToBirth(x)))", "score": 0}
{"id": "eqasc_validation_513", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & Birth(z)) -> CarryingFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_513", "prediction": "all x y.((Offspring(x) & Fertilization(y)) -> Carrying(x,y))", "score": 0}
{"id": "eqasc_validation_513", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & Birth(z)) -> Carrying(x,y,z))", "score": 0}
{"id": "eqasc_validation_514", "prediction": "all x.((Pregnancies(x) & HealthyBaby(x)) -> HappyEnd(x))", "score": 0}
{"id": "eqasc_validation_514", "prediction": "all x.((Pregnancies(x) & HealthyBirth(x)) -> HappyEnd(x))", "score": 0}
{"id": "eqasc_validation_514", "prediction": "all x.((Pregnancies(x) & HealthyBaby(x)) -> HappilyEnds(x))", "score": 0}
{"id": "eqasc_validation_514", "prediction": "all x.((Pregnancy(x) & HealthyBaby(x)) -> HappyEnd(x))", "score": 0}
{"id": "eqasc_validation_514", "prediction": "all x.((Pregnancies(x) & HealthyBaby(x)) -> EndsHappily(x))", "score": 0}
{"id": "eqasc_validation_514", "prediction": "all x y.((Pregnancies(x) & HealthyBaby(y)) -> HappyEnd(x,y))", "score": 0}
{"id": "eqasc_validation_514", "prediction": "all x.((Pregnancies(x) & HealthyBaby(x)) -> EndsHappyly(x))", "score": 0}
{"id": "eqasc_validation_514", "prediction": "all x y.((Pregnancies(x) & HealthyBaby(y)) -> EndsHappyly(x,y))", "score": 0}
{"id": "eqasc_validation_514", "prediction": "all x y.((Pregnancies(x) & HealthyBaby(y)) -> EndsHappily(x,y))", "score": 0}
{"id": "eqasc_validation_514", "prediction": "all x y.((Pregnancy(x) & HealthyBaby(y)) -> HappyEnd(x,y))", "score": 0}
{"id": "eqasc_validation_514", "prediction": "all x.((Pregnancies(x) & HealthyBirth(x)) -> HappilyEnds(x))", "score": 0}
{"id": "eqasc_validation_514", "prediction": "all x.((Pregnancies(x) & HealthyBaby(x)) -> HappilyEnd(x))", "score": 0}
{"id": "eqasc_validation_514", "prediction": "all x y.((Pregnancies(x) & HealthyBaby(y)) -> EndsWith(x,y))", "score": 0}
{"id": "eqasc_validation_514", "prediction": "all x y.((Pregnancies(x) & HealthyBirth(y)) -> HappyEnd(x,y))", "score": 0}
{"id": "eqasc_validation_514", "prediction": "all x y.((Pregnancies(x) & HealthyBaby(y)) -> HappyEnd(x))", "score": 0}
{"id": "eqasc_validation_515", "prediction": "all x y.((Offspring(x) & Fertilization(y) & BirthResultsInBaby(x,y)) -> CarryingFromFertilizationToBirth(x,y))", "score": 0}
{"id": "eqasc_validation_515", "prediction": "all x y.((Offspring(x) & Fertilization(y) & BirthResultsInBaby(x,y)) -> CarriesFromFertilizationToBirth(x,y))", "score": 0}
{"id": "eqasc_validation_515", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & Baby(z)) -> CarryingFromFertilizationToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_515", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & BirthResult(z)) -> CarryingFromToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_515", "prediction": "all x y.((Offspring(x) & Fertilization(y) & BirthResultsInBaby(x,y)) -> CarryingFromToBirth(x,y))", "score": 0}
{"id": "eqasc_validation_515", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & Baby(z)) -> CarryingFromToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_515", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & BirthResultsInBaby(z)) -> CarryingFromFertilizationToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_515", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & BirthResult(z)) -> CarryingFromFertilizationToBaby(x,y,z))", "score": 0}
{"id": "eqasc_validation_515", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & Baby(z)) -> CarryingFromFertilizationToBirthResultsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_515", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & Baby(z)) -> CarryingFromFertilizationToBirthResultsInBaby(x,y,z))", "score": 0}
{"id": "eqasc_validation_515", "prediction": "all x y.((Offspring(x) & Fertilization(y) & BirthResult(x,y)) -> CarryingFromToBirth(x,y))", "score": 0}
{"id": "eqasc_validation_515", "prediction": "all x y.((Offspring(x) & Fertilization(y) & BirthResultsInBaby(x,y)) -> CarriesFromToBirth(x,y))", "score": 0}
{"id": "eqasc_validation_515", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & BirthResult(z)) -> CarriesFromFertilizationToBaby(x,y,z))", "score": 0}
{"id": "eqasc_validation_515", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & Baby(z)) -> CarryingFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_515", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & BirthResult(z)) -> CarryingFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_515", "prediction": "all x y z.((Offspring(x) & Fertilization(y) & BirthResultsInBaby(z)) -> CarryingFromToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_516", "prediction": "all x.(ElephantPregnancy(x) -> LastsAbout22Months(x))", "score": 0}
{"id": "eqasc_validation_516", "prediction": "all x.(Elephant(x) -> LastsAbout22Months(x))", "score": 0}
{"id": "eqasc_validation_516", "prediction": "all x.((Elephant(x) & Pregnancy(x,22)) -> LastsAbout(x,22))", "score": 0}
{"id": "eqasc_validation_516", "prediction": "all x.((Elephant(x) & Pregnancy(x)) -> LastsAbout22Months(x))", "score": 0}
{"id": "eqasc_validation_516", "prediction": "all x.(ElephantPaternity(x) -> LastsAbout22Months(x))", "score": 0}
{"id": "eqasc_validation_516", "prediction": "all x.((Elephant(x) & Pregnancies(x,22)) -> LastsAbout(x,22))", "score": 0}
{"id": "eqasc_validation_516", "prediction": "all x y.((Elephant(x) & Pregnancy(y)) -> LastsAbout22Months(x,y))", "score": 0}
{"id": "eqasc_validation_516", "prediction": "all x.(ElephantPregnancy(x) -> LastsAround22Months(x))", "score": 0}
{"id": "eqasc_validation_516", "prediction": "all x.(ElephantPregnant(x) -> LastsAbout22Months(x))", "score": 0}
{"id": "eqasc_validation_516", "prediction": "all x.(ElephantPregnancy(x) -> LastsAbove22Months(x))", "score": 0}
{"id": "eqasc_validation_516", "prediction": "all x.(Elephant(x) -> LastsAround22Months(x))", "score": 0}
{"id": "eqasc_validation_516", "prediction": "all x.((Elephant(x) & LastsAbout22Months(x)) -> Pregnancies(x))", "score": 0}
{"id": "eqasc_validation_516", "prediction": "all x.(ElephantPregnancies(x) -> LastsAbout22Months(x))", "score": 0}
{"id": "eqasc_validation_516", "prediction": "all x.((Elephant(x) & Pregnancy(x,22)) -> Lasts(x,22))", "score": 0}
{"id": "eqasc_validation_516", "prediction": "all x.((Elephant(x) & LastsAbout22Months(x)) -> Pregnancy(x))", "score": 0}
{"id": "eqasc_validation_517", "prediction": "all x y.((Elephant(x) & Offspring(y)) -> CarriesFromFertilizationToBirth(x,y))", "score": 0}
{"id": "eqasc_validation_517", "prediction": "all x.(Elephant(x) -> CarriesOffspringFromFertilizationToBirth(x,22))", "score": 0}
{"id": "eqasc_validation_517", "prediction": "all x y z.((Elephant(x) & Offspring(y) & Fertilization(z)) -> CarriesUntilBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_517", "prediction": "all x y.((Elephant(x) & Offspring(y)) -> CarriesFromFertilizationToBirth(x,22))", "score": 0}
{"id": "eqasc_validation_517", "prediction": "all x y.((Elephant(x) & Offspring(y)) -> CarriesFromFertilizationUntilBirth(x,y))", "score": 0}
{"id": "eqasc_validation_517", "prediction": "all x y z.((Elephant(x) & Offspring(y) & Fertilization(z)) -> CarriesFromToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_517", "prediction": "all x y.((Elephant(x) & Offspring(y)) -> CarriesFromFertilization(x,y))", "score": 0}
{"id": "eqasc_validation_517", "prediction": "all x y.((Elephant(x) & Offspring(y)) -> (CarriesFromFertilizationToBirth(x,y) & 22MonthsAfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_517", "prediction": "all x y z.((Elephant(x) & Offspring(y) & Fertilization(z) & Born(z)) -> CarriesFromToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_517", "prediction": "all x y.((Elephant(x) & Offspring(y)) -> CarriesFromFertilisationToBirth(x,y))", "score": 0}
{"id": "eqasc_validation_517", "prediction": "all x y z.((Elephant(x) & Offspring(y) & Fertilization(z) & Born(y,z)) -> CarriesFromToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_517", "prediction": "all x y z.((Elephant(x) & Offspring(y) & Fertilization(z)) -> Carries(x,y,z))", "score": 0}
{"id": "eqasc_validation_517", "prediction": "all x y.((Elephant(x) & Offspring(y)) -> (CarriesFromFertilizationToBirth(x,y) & 22MonthsAgo(x)))", "score": 0}
{"id": "eqasc_validation_518", "prediction": "all x y.((Bolt(x) & Glacier(y)) -> FormedByMelting(x,y))", "score": 2}
{"id": "eqasc_validation_518", "prediction": "all x y.((Bolt(x) & Glacier(y) & Melting(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_518", "prediction": "all x y.((Bolt(x) & Glacier(y)) -> (FormedBy(x,y) & Melting(y)))", "score": 0}
{"id": "eqasc_validation_518", "prediction": "all x y z.((Bolt(x) & Glacier(y) & Glacier(z)) -> FormedByMelting(x,y,z))", "score": 1}
{"id": "eqasc_validation_518", "prediction": "all x y z.((Bolt(x) & Glacier(y) & Glacier(z)) -> (FormedBy(x,y,z) & Melting(y,z)))", "score": 0}
{"id": "eqasc_validation_518", "prediction": "all x y z.((Blast(x) & Glacier(y) & Glacier(z)) -> FormedByMelting(x,y,z))", "score": 1}
{"id": "eqasc_validation_518", "prediction": "all x y z.((Bolt(x) & Glacier(y) & Glacier(z)) -> (FormedBy(x,y) & Melting(y,z)))", "score": 1}
{"id": "eqasc_validation_518", "prediction": "all x y z.((Bolt(x) & Glacier(y) & Glacier(z) & Melting(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_518", "prediction": "all x y z.((Bolt(x) & Glacier(y) & Glacier(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_518", "prediction": "all x.(Bolt(x) -> (FormedByGlaciers(x) & MeltingSometimes(x)))", "score": 0}
{"id": "eqasc_validation_518", "prediction": "all x y z.((Bolt(x) & Glacier(y) & Glacier(z) & Melting(y,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_518", "prediction": "all x y z.((Blast(x) & Glacier(y) & Glacier(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_518", "prediction": "all x y z.((Blast(x) & Glacier(y) & Glacier(z)) -> (FormedBy(x,y,z) & Melting(y,z)))", "score": 0}
{"id": "eqasc_validation_518", "prediction": "all x y.((Balloon(x) & Glacier(y)) -> FormedByMelting(x,y))", "score": 0}
{"id": "eqasc_validation_518", "prediction": "all x y.((Blast(x) & Glacier(y)) -> FormedByMelting(x,y))", "score": 2}
{"id": "eqasc_validation_518", "prediction": "all x y z.((Blast(x) & Glacier(y) & Glacier(z)) -> (FormedBy(x,y) & Melting(y,z)))", "score": 1}
{"id": "eqasc_validation_519", "prediction": "all x.(Crag(x) -> Boulder(x))", "score": 0}
{"id": "eqasc_validation_519", "prediction": "all x.(Crag(x) -> (Bolt(x) | Boulder(x)))", "score": 0}
{"id": "eqasc_validation_519", "prediction": "exists x.(Crag(x) & Boulder(x))", "score": 0}
{"id": "eqasc_validation_519", "prediction": "exists x.(Crag(x) & Crag(x) & Boulder(x))", "score": 0}
{"id": "eqasc_validation_519", "prediction": "all x.(Crag(x) -> (Bolt(x) | -Bolt(x)))", "score": 0}
{"id": "eqasc_validation_519", "prediction": "all x.(Crag(x) -> Boulders(x))", "score": 0}
{"id": "eqasc_validation_519", "prediction": "all x.(Crag(x) -> Blast(x))", "score": 4}
{"id": "eqasc_validation_519", "prediction": "(all x.(Crag(x) -> Boulder(x)))", "score": 0}
{"id": "eqasc_validation_519", "prediction": "all x y.((Crag(x) & Boulder(y)) -> Crag(x))", "score": 0}
{"id": "eqasc_validation_519", "prediction": "all x.(Crag(x) -> (Bolt(x) & -Bolt(x)))", "score": 0}
{"id": "eqasc_validation_519", "prediction": "all x.(Crag(x) -> (Blast(x) | Boulder(x)))", "score": 0}
{"id": "eqasc_validation_519", "prediction": "all x.(Crag(x) -> -Bolt(x))", "score": 0}
{"id": "eqasc_validation_519", "prediction": "all x.(Crag(x) -> (Blast(x) | -Blast(x)))", "score": 0}
{"id": "eqasc_validation_519", "prediction": "all x.((Crag(x) & Boulder(x)) -> Crag(x))", "score": 0}
{"id": "eqasc_validation_519", "prediction": "all x.(Crag(x) -> (Bolts(x) | Boulders(x)))", "score": 0}
{"id": "eqasc_validation_519", "prediction": "all x.(Crag(x) -> (Bolt(x) & LocatedIn(x,y)))", "score": 4}
{"id": "eqasc_validation_520", "prediction": "all x.(Crag(x) -> FormedByMeltingGlaciers(x))", "score": 0}
{"id": "eqasc_validation_520", "prediction": "all x y.((Crag(x) & MeltingGlacier(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_520", "prediction": "all x y.((Crag(x) & Glacier(y)) -> FormedByMelting(x,y))", "score": 2}
{"id": "eqasc_validation_520", "prediction": "all x.(Crag(x) -> (FormedByMeltingGlaciers(x) | FormedByMeltingGlaciers(x)))", "score": 0}
{"id": "eqasc_validation_520", "prediction": "all x.(Crag(x) -> (FormedByMeltingGlaciers(x) & MeltingGlaciers(x)))", "score": 0}
{"id": "eqasc_validation_520", "prediction": "all x.(Crag(x) -> (FormedByMeltingGlaciers(x) & MostCrags(x)))", "score": 0}
{"id": "eqasc_validation_520", "prediction": "all x.(Crag(x) -> (FormedByMeltingGlaciers(x) | FormedByGlaciers(x)))", "score": 0}
{"id": "eqasc_validation_520", "prediction": "all x y z.((Crag(x) & Glacier(y) & Glacier(z)) -> FormedByMelting(x,y,z))", "score": 2}
{"id": "eqasc_validation_520", "prediction": "all x y z.((Crag(x) & Glacier(y) & Melting(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_520", "prediction": "all x y.((Crag(x) & Glacier(y) & Melting(x,y)) -> FormedBy(x,y))", "score": 2}
{"id": "eqasc_validation_520", "prediction": "all x.(Crag(x) -> (FormedByMeltingGlaciers(x) & FormedByMeltingGlaciers(x)))", "score": 0}
{"id": "eqasc_validation_520", "prediction": "all x y.((Crag(x) & Glacier(y)) -> (FormedByMelting(x,y) | FormedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_520", "prediction": "all x y.((Crag(x) & Glacier(y)) -> (FormedByMelting(x,y) | FormedByMelting(x,y)))", "score": 2}
{"id": "eqasc_validation_520", "prediction": "all x.((Crag(x) & MeltingGlacier(x)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_520", "prediction": "all x.(Crag(x) -> (MeltingGlaciers(x) & FormedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_520", "prediction": "all x y.((Crag(x) & Glacier(y)) -> (FormedByMelting(x,y) & FormedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_521", "prediction": "all x y.((AlpineGlacier(x) & Mountain(y)) -> FormsIn(x,y))", "score": 0}
{"id": "eqasc_validation_521", "prediction": "all x.(AlpineGlacier(x) -> FormsInMountains(x))", "score": 0}
{"id": "eqasc_validation_521", "prediction": "all x y z.((AlpineGlacier(x) & Mountain(y) & Mountain(z)) -> FormsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_521", "prediction": "all x y.((AlpineGlacier(x) & Mountain(y)) -> FormIn(x,y))", "score": 0}
{"id": "eqasc_validation_521", "prediction": "all x y z.((AlpineGlacier(x) & Mountain(y) & Mountain(z)) -> FormIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_521", "prediction": "all x y z.((AlpineGlacier(x) & Mountain(y) & Mountains(z)) -> FormsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_521", "prediction": "all x y.((AlpinalGlacier(x) & Mountain(y)) -> FormsIn(x,y))", "score": 0}
{"id": "eqasc_validation_521", "prediction": "all x.(AlpinalGlacier(x) -> FormsInMountains(x))", "score": 0}
{"id": "eqasc_validation_521", "prediction": "all x y.((AlpineGlacier(x) & Mountains(y)) -> FormsIn(x,y))", "score": 0}
{"id": "eqasc_validation_521", "prediction": "all x y z.((AlpinalGlacier(x) & Mountain(y) & Mountain(z)) -> FormsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_521", "prediction": "all x.(AlpineGlacier(x) -> FormInMountains(x))", "score": 0}
{"id": "eqasc_validation_521", "prediction": "all x y.((AlpinGlacier(x) & Mountain(y)) -> FormsIn(x,y))", "score": 0}
{"id": "eqasc_validation_521", "prediction": "all x y z.((AlpineGlacier(x) & Mountain(y) & Mountain(z) & FormsIn(x,y,z)) -> FormsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_521", "prediction": "all x y z.((AlpineGlacier(x) & Mountain(y) & Mountain(z)) -> FormsIn(x,y))", "score": 0}
{"id": "eqasc_validation_521", "prediction": "all x y.((AlpineGlacier(x) & Mountain(y)) -> FormedIn(x,y))", "score": 0}
{"id": "eqasc_validation_521", "prediction": "all x y z.((AlpineGlacier(x) & Mountain(y) & Mountains(z)) -> FormIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_522", "prediction": "all x.(Boulder(x) -> FormedInMountains(x))", "score": 0}
{"id": "eqasc_validation_522", "prediction": "all x y.((Boulder(x) & Mountain(y)) -> FormedIn(x,y))", "score": 0}
{"id": "eqasc_validation_522", "prediction": "all x y z.((Boulder(x) & Mountain(y) & Mountain(z)) -> FormedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_522", "prediction": "all x y.((Boulder(x) & Mountain(y)) -> FormsIn(x,y))", "score": 0}
{"id": "eqasc_validation_522", "prediction": "all x y z.((Boulder(x) & Mountain(y) & Mountains(z)) -> FormedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_522", "prediction": "all x y z.((Boulder(x) & Mountain(y) & Mountain(z)) -> FormsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_522", "prediction": "all x y.((Boulder(x) & Mountains(y)) -> FormedIn(x,y))", "score": 0}
{"id": "eqasc_validation_522", "prediction": "all x.(Boulder(x) -> FormedInMountain(x))", "score": 0}
{"id": "eqasc_validation_522", "prediction": "all x y z.((Boulder(x) & Mountain(y) & Mountain(z)) -> FormedIn(x,y))", "score": 0}
{"id": "eqasc_validation_522", "prediction": "all x y.((Bolt(x) & Mountain(y)) -> FormedIn(x,y))", "score": 0}
{"id": "eqasc_validation_522", "prediction": "all x.(Boulder(x) -> FormsInMountains(x))", "score": 0}
{"id": "eqasc_validation_522", "prediction": "all x.(Boulder(x) -> (FormedInMountains(x)))", "score": 0}
{"id": "eqasc_validation_522", "prediction": "all x y.((Column(x) & Mountain(y)) -> FormedIn(x,y))", "score": 0}
{"id": "eqasc_validation_523", "prediction": "all x.(Erratic(x) -> (Bolt(x) & DepositedByGlaciers(x) & PartOfMoraines(x)))", "score": 0}
{"id": "eqasc_validation_523", "prediction": "all x.(Erratic(x) -> (Boulder(x) & DepositedByGlaciers(x) & PartOfMoraines(x)))", "score": 0}
{"id": "eqasc_validation_523", "prediction": "all x.(Erratic(x) -> (Bolt(x) & DeposedByGlaciers(x) & PartOfMoraines(x)))", "score": 0}
{"id": "eqasc_validation_523", "prediction": "all x.(Erratic(x) -> (Balloon(x) & DepositedByGlaciers(x) & PartOfMoraines(x)))", "score": 0}
{"id": "eqasc_validation_523", "prediction": "all x.(Erratic(x) -> (Blast(x) & DepositedByGlaciers(x) & PartOfMoraines(x)))", "score": 0}
{"id": "eqasc_validation_523", "prediction": "all x.(Erratic(x) -> (Boulder(x) & DeposedByGlaciers(x) & PartOfMoraines(x)))", "score": 0}
{"id": "eqasc_validation_523", "prediction": "all x.(Erratic(x) -> (Bolt(x) & DepostedByGlaciers(x) & PartOfMoraines(x)))", "score": 0}
{"id": "eqasc_validation_523", "prediction": "all x.(Erratic(x) -> (Bolt(x) & DepositedByGlaciers(x) & Moraines(x)))", "score": 0}
{"id": "eqasc_validation_523", "prediction": "all x y z.((Erratic(x) & Glacier(y) & Moraine(z)) -> (Bolt(x) & DepositedBy(x,y,z)))", "score": 0}
{"id": "eqasc_validation_523", "prediction": "all x y.((Erratic(x) & Glacier(y)) -> DepositedBy(x,y))", "score": 0}
{"id": "eqasc_validation_523", "prediction": "all x.(Erratic(x) -> (Bolt(x) & DeposedByGlaciers(x) & Moraines(x)))", "score": 0}
{"id": "eqasc_validation_523", "prediction": "all x y.((Erratic(x) & Glacier(y)) -> (Bolt(x) & DepositedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_524", "prediction": "all x y.((Eratoid(x) & Glacier(y)) -> FormedByMelting(x,y))", "score": 0}
{"id": "eqasc_validation_524", "prediction": "all x y z.((Eratoid(x) & Glacier(y) & Glacier(z)) -> FormedByMelting(x,y,z))", "score": 0}
{"id": "eqasc_validation_524", "prediction": "all x y.((Erastrotic(x) & Glacier(y)) -> FormedByMelting(x,y))", "score": 0}
{"id": "eqasc_validation_524", "prediction": "all x y.((Erastic(x) & Glacier(y)) -> FormedByMelting(x,y))", "score": 0}
{"id": "eqasc_validation_524", "prediction": "all x y z.((Erastic(x) & Glacier(y) & Glacier(z)) -> FormedByMelting(x,y,z))", "score": 0}
{"id": "eqasc_validation_524", "prediction": "all x y z.((Erastrotic(x) & Glacier(y) & Glacier(z)) -> FormedByMelting(x,y,z))", "score": 0}
{"id": "eqasc_validation_524", "prediction": "all x y.((Eratoic(x) & Glacier(y)) -> FormedByMelting(x,y))", "score": 0}
{"id": "eqasc_validation_524", "prediction": "all x y z.((Erastist(x) & Glacier(y) & Glacier(z)) -> FormedByMelting(x,y,z))", "score": 0}
{"id": "eqasc_validation_524", "prediction": "all x y z.((Eratoid(x) & Glacier(y) & Glacier(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_524", "prediction": "all x y z.((Eratotic(x) & Glacier(y) & Glacier(z)) -> FormedByMelting(x,y,z))", "score": 0}
{"id": "eqasc_validation_524", "prediction": "all x y z.((Eratoic(x) & Glacier(y) & Glacier(z)) -> FormedByMelting(x,y,z))", "score": 0}
{"id": "eqasc_validation_524", "prediction": "all x y.((Eratoid(x) & Glacier(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_524", "prediction": "all x.(Eratoid(x) -> FormedByGlaciersMelting(x))", "score": 0}
{"id": "eqasc_validation_524", "prediction": "all x.(Eratoid(x) -> (FormedByGlaciers(x) & MeltingGlaciers(x)))", "score": 0}
{"id": "eqasc_validation_524", "prediction": "all x y.((Erastist(x) & Glacier(y)) -> FormedByMelting(x,y))", "score": 0}
{"id": "eqasc_validation_525", "prediction": "all x.(Glacier(x) -> (MadeOfSnow(x) & MadeOfIce(x) & MadeOfRock(x)))", "score": 0}
{"id": "eqasc_validation_525", "prediction": "all x.(Glacier(x) -> (MadeOf(x,Snow) & MadeOf(x,Ice) & MadeOf(x,Rock)))", "score": 0}
{"id": "eqasc_validation_525", "prediction": "all x.(Glacier(x) -> (MadeOfSnow(x) | MadeOfIce(x) | MadeOfRock(x)))", "score": 0}
{"id": "eqasc_validation_525", "prediction": "all x.(Glacier(x) -> (MadeOf(x,snow) & MadeOf(x,ice) & MadeOf(x,rock)))", "score": 0}
{"id": "eqasc_validation_525", "prediction": "all x y z.((Glacier(x) & Snow(y) & Ice(z)) -> (MadeOf(x,y) & MadeOf(x,z) & MadeOf(x,y) & MadeOf(x,z)))", "score": 0}
{"id": "eqasc_validation_525", "prediction": "all x y z.((Glacier(x) & Snow(y) & Ice(z)) -> (MadeOf(x,y) & MadeOf(x,z) & MadeOf(x,y) & MadeOf(x,y) & MadeOf(x,z)))", "score": 0}
{"id": "eqasc_validation_525", "prediction": "all x y z.((Glacier(x) & Snow(y) & Ice(z)) -> (MadeOf(x,y) & MadeOf(x,z) & MadeOf(x,y) & MadeOf(x,z) & MadeOf(x,z)))", "score": 0}
{"id": "eqasc_validation_525", "prediction": "all x y z.((Glacier(x) & Snow(y) & Ice(z)) -> (MadeOf(x,y) & MadeOf(x,z) & MadeOf(x,y) & MadeOf(x,z) & MadeOf(x,y) & MadeOf(x,z)))", "score": 0}
{"id": "eqasc_validation_525", "prediction": "all x y z.((Glacier(x) & Snow(y) & Ice(z)) -> (MadeOf(x,y) & MadeOf(x,z) & MadeOf(x,y) & MadeOf(x,z) & MadeOf(x,y)))", "score": 0}
{"id": "eqasc_validation_525", "prediction": "all x y z.((Glacier(x) & Snow(y) & Ice(z)) -> (MadeOf(x,y) & MadeOf(x,z) & MadeOf(x,z)))", "score": 0}
{"id": "eqasc_validation_525", "prediction": "all x y z.((Glacier(x) & Snow(y) & Ice(z)) -> (MadeOf(x,y) & MadeOf(x,z) & MadeOf(x,y) & MadeOf(x,y) & MadeOf(x,z) & MadeOf(x,z)))", "score": 0}
{"id": "eqasc_validation_525", "prediction": "all x y z.((Glacier(x) & Snow(y) & Ice(z)) -> (MadeOf(x,y) & MadeOf(x,z) & MadeOf(x,y) & MadeOf(x,y) & MadeOf(x,z) & MadeOf(x,y)))", "score": 0}
{"id": "eqasc_validation_525", "prediction": "all x y z.((Glacier(x) & Snow(y) & Ice(z)) -> (MadeOf(x,y) & MadeOf(x,z) & MadeOf(x,z) & MadeOf(x,y) & MadeOf(x,z)))", "score": 0}
{"id": "eqasc_validation_526", "prediction": "all x.(Bolt(x) -> (FormedBySnow(x) | FormedByIce(x) | FormedByRockMelting(x)))", "score": 0}
{"id": "eqasc_validation_526", "prediction": "all x.(Bolt(x) -> (FormedBySnow(x) & FormedByIce(x) & FormedByRockMelting(x)))", "score": 0}
{"id": "eqasc_validation_526", "prediction": "all x.(Balloon(x) -> (FormedBySnow(x) | FormedByIce(x) | FormedByRockMelting(x)))", "score": 0}
{"id": "eqasc_validation_526", "prediction": "all x.(Blast(x) -> (FormedBySnow(x) | FormedByIce(x) | FormedByRockMelting(x)))", "score": 0}
{"id": "eqasc_validation_526", "prediction": "all x.(Bolt(x) -> (FormedBy(x,Snow) & FormedBy(x,Ice) & FormedBy(x,RockMelting)))", "score": 0}
{"id": "eqasc_validation_526", "prediction": "all x.(Balloon(x) -> (FormedBySnow(x) & FormedByIce(x) & FormedByRockMelting(x)))", "score": 0}
{"id": "eqasc_validation_526", "prediction": "all x.(Bolt(x) -> (FormedBy(x,Snow) | FormedBy(x,Ice) | FormedBy(x,RockMelting)))", "score": 0}
{"id": "eqasc_validation_526", "prediction": "all x.(Blood(x) -> (FormedBySnow(x) | FormedByIce(x) | FormedByRockMelting(x)))", "score": 0}
{"id": "eqasc_validation_526", "prediction": "all x.(Blood(x) -> (FormedBySnow(x) & FormedByIce(x) & FormedByRockMelting(x)))", "score": 0}
{"id": "eqasc_validation_526", "prediction": "all x.(Blast(x) -> (FormedBySnow(x) & FormedByIce(x) & FormedByRockMelting(x)))", "score": 0}
{"id": "eqasc_validation_526", "prediction": "all x.(Bolt(x) -> (FormedBy(x,snow) & FormedBy(x,ice) & FormedBy(x,rockMelting)))", "score": 0}
{"id": "eqasc_validation_526", "prediction": "all x y z.((Bolt(x) & Snow(y) & Ice(z) & RockMelting(x)) -> (FormedBy(x,y) & FormedBy(x,z)))", "score": 0}
{"id": "eqasc_validation_526", "prediction": "all x.(Bolt(x) -> (FormedBy(x,snow) | FormedBy(x,ice) | FormedBy(x,rockMelting)))", "score": 0}
{"id": "eqasc_validation_526", "prediction": "all x y z.((Bolt(x) & Snow(y) & Ice(z) & RockMelting(x)) -> (FormedBy(x,y) & FormedBy(x,z) & FormedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_526", "prediction": "all x y z.((Bolt(x) & Snow(y) & Ice(z) & RockMelting(x)) -> (FormedBy(x,y) & FormedBy(x,z) & FormedBy(x,z)))", "score": 0}
{"id": "eqasc_validation_527", "prediction": "all x y.((Pelycosaur(x) & Therapsid(y)) -> GivesRiseTo(x,y))", "score": 0}
{"id": "eqasc_validation_527", "prediction": "all x y.((Pelycosaur(x) & Animal(y)) -> Therapsid(x))", "score": 0}
{"id": "eqasc_validation_527", "prediction": "all x y z.((Pelycosaur(x) & Animal(y) & Therapsid(z)) -> GivesRiseTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_527", "prediction": "all x.(Pelycosaur(x) -> Therapsid(x))", "score": 1}
{"id": "eqasc_validation_527", "prediction": "all x.(Pelycosaur(x) -> GivesRiseToTherapsids(x))", "score": 0}
{"id": "eqasc_validation_527", "prediction": "all x y z.((Pelycosaur(x) & Therapsid(y) & Animal(z)) -> GivesRiseTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_527", "prediction": "exists x.(Pelycosaur(x) & Therapsid(x))", "score": 7}
{"id": "eqasc_validation_527", "prediction": "exists x.(Pelycosaur(x) & GivesRiseToTherapsids(x))", "score": 0}
{"id": "eqasc_validation_527", "prediction": "exists x y.(Pelycosaur(x) & Animal(y) & GivesRiseTo(x,y))", "score": 0}
{"id": "eqasc_validation_527", "prediction": "all x y.((Pelycosaur(x) & Animal(y)) -> Therapsid(x,y))", "score": 0}
{"id": "eqasc_validation_527", "prediction": "exists x.(Pelycosaur(x) & Animal(x) & Therapsid(x))", "score": 7}
{"id": "eqasc_validation_527", "prediction": "all x y.((Pelycosaur(x) & Therapsid(y)) -> GivesRisingTo(x,y))", "score": 0}
{"id": "eqasc_validation_527", "prediction": "exists x.(Pelycosaur(x) & GivesRiseToTherapsid(x))", "score": 0}
{"id": "eqasc_validation_527", "prediction": "all x y.((Pelycosaur(x) & Animal(y)) -> GivesRiseToTherapsids(x,y))", "score": 0}
{"id": "eqasc_validation_527", "prediction": "all x y.((Pelycosaur(x) & Animal(y)) -> GivesRiseTo(x,y))", "score": 0}
{"id": "eqasc_validation_527", "prediction": "all x y.((Pelycosaur(x) & Therapsid(y)) -> GivesRiseToGroup(x,y))", "score": 0}
{"id": "eqasc_validation_528", "prediction": "all x.(Pelycosaur(x) -> ImportantLineagePreservedInFossilRecord(x))", "score": 0}
{"id": "eqasc_validation_528", "prediction": "all x.(Pelycosaur(x) -> PreservedInFossilRecord(x))", "score": 0}
{"id": "eqasc_validation_528", "prediction": "all x.(Pelycosaur(x) -> ImportantLineage(x))", "score": 0}
{"id": "eqasc_validation_528", "prediction": "all x.(Pelycosaur(x) -> (MaintainedInFossilRecord(x) & ImportantLineage(x)))", "score": 0}
{"id": "eqasc_validation_528", "prediction": "all x y.((Pelycosaur(x) & FossilRecord(y)) -> ImportantLineagePreservedIn(x,y))", "score": 0}
{"id": "eqasc_validation_528", "prediction": "all x.(Pelycosaur(x) -> (PreservedInFossilRecord(x) & ImportantLineage(x)))", "score": 0}
{"id": "eqasc_validation_528", "prediction": "all x.(Pelycosaur(x) -> (ImportantLineage(x) & PreservedInFossilRecord(x)))", "score": 0}
{"id": "eqasc_validation_528", "prediction": "all x y z.((Pelycosaur(x) & Lineage(y) & FossilRecord(z)) -> PreservedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_528", "prediction": "all x y.((Pelycosaur(x) & FossilRecord(y)) -> ImportantLineagePreserved(x,y))", "score": 0}
{"id": "eqasc_validation_528", "prediction": "all x y.((Pelycosaur(x) & FossilRecord(y)) -> PreservedIn(x,y))", "score": 0}
{"id": "eqasc_validation_528", "prediction": "all x.(Pelycosaur(x) -> ImportantLanguagePreservedInFossilRecord(x))", "score": 0}
{"id": "eqasc_validation_528", "prediction": "all x y.((Pelycosaur(x) & Lineage(y)) -> PreservedInFossilRecord(x,y))", "score": 0}
{"id": "eqasc_validation_528", "prediction": "all x y.((Pelycosaur(x) & FossilRecord(y)) -> ImportantLineage(x,y))", "score": 0}
{"id": "eqasc_validation_528", "prediction": "all x.(Pelycosaur(x) -> exists y.(FossilRecord(y) & ImportantLineage(x,y)))", "score": 0}
{"id": "eqasc_validation_528", "prediction": "all x.(Pelycosaur(x) -> exists y.(FossilRecord(y) & PreservedIn(x,y))))", "score": -1}
{"id": "eqasc_validation_528", "prediction": "all x y z.((Pelycosaur(x) & Lineage(y) & FossilRecord(z)) -> Important(x,y,z))", "score": 0}
{"id": "eqasc_validation_529", "prediction": "all x.(FossilRecord(x) -> ShowsLineageOfTherapsids(x))", "score": 0}
{"id": "eqasc_validation_529", "prediction": "all x y.((FossilRecord(x) & Therapsid(y)) -> ShowsLineage(x,y))", "score": 0}
{"id": "eqasc_validation_529", "prediction": "all x y z.((FossilRecord(x) & Therapsid(y) & Lineage(z)) -> Shows(x,y,z))", "score": 0}
{"id": "eqasc_validation_529", "prediction": "all x.(FossilRecord(x) -> ShowsLiniageOfTherapsids(x))", "score": 0}
{"id": "eqasc_validation_529", "prediction": "all x.(FossilRecord(x) -> ShowsLanguageOfTherapsids(x))", "score": 0}
{"id": "eqasc_validation_529", "prediction": "all x y z.((FossilRecord(x) & Therapsid(y) & Lineage(z)) -> Shows(x,y))", "score": 0}
{"id": "eqasc_validation_529", "prediction": "all x.(FossilRecord(x) -> ShowsLineage(x))", "score": 0}
{"id": "eqasc_validation_529", "prediction": "all x y z.((FossilRecord(x) & Therapsid(y) & Therapsid(z)) -> ShowsLineage(x,y,z))", "score": 0}
{"id": "eqasc_validation_529", "prediction": "all x y.((FossilRecord(x) & Therapsid(y)) -> ShowsLanguage(x,y))", "score": 0}
{"id": "eqasc_validation_529", "prediction": "all x y z.((FossilRecord(x) & Therapsid(y) & Lineage(z)) -> ShowsLineage(x,y,z))", "score": 0}
{"id": "eqasc_validation_529", "prediction": "all x.(FossilRecord(x) -> ShowsLangageOfTherapsids(x))", "score": 0}
{"id": "eqasc_validation_529", "prediction": "all x y.((FossilRecord(x) & Therapsid(y) & ShowsLineage(x,y)) -> ShowsLineage(x,y))", "score": 0}
{"id": "eqasc_validation_529", "prediction": "all x.(FossilRecord(x) -> ShowsLineage(x,Therapsids))", "score": 0}
{"id": "eqasc_validation_529", "prediction": "all x y.((FossilRecord(x) & Therapsid(y)) -> ShowsLiniage(x,y))", "score": 0}
{"id": "eqasc_validation_529", "prediction": "all x.((FossilRecord(x) & Therapsid(x)) -> ShowsLineage(x))", "score": 0}
{"id": "eqasc_validation_529", "prediction": "all x.(FossilRecord(x) -> ShowsLineage(x,rapsids))", "score": 0}
{"id": "eqasc_validation_530", "prediction": "all x.((Pelycosaur(x) | Therapsid(x)) -> Theropsid(x))", "score": 0}
{"id": "eqasc_validation_530", "prediction": "all x y.((Pelycosaur(x) & Therapsid(y)) -> (Theropsid(x) & Theropsid(y)))", "score": 0}
{"id": "eqasc_validation_530", "prediction": "all x.(Theropsid(x) -> (Pelycosaur(x) | Therapsid(x)))", "score": 0}
{"id": "eqasc_validation_530", "prediction": "all x y.((Pelycosaur(x) & Therapsid(y)) -> Theropsid(x))", "score": 0}
{"id": "eqasc_validation_530", "prediction": "all x y.((Pelycosaur(x) & Therapsid(y)) -> (Theropsid(x) | Theropsid(y)))", "score": 0}
{"id": "eqasc_validation_530", "prediction": "all x.((Pelycosaur(x) & Therapsid(x)) -> Theropsid(x))", "score": 0}
{"id": "eqasc_validation_530", "prediction": "all x y.((Pelycosaur(x) | Therapsid(y)) -> Theropsid(x))", "score": 0}
{"id": "eqasc_validation_530", "prediction": "all x y z.((Pelycosaur(x) & Therapsid(y) & Theropsid(z)) -> (Pelycosaur(x) | Therapsid(y)))", "score": 0}
{"id": "eqasc_validation_530", "prediction": "all x y z.((Pelycosaur(x) & Therapsid(y) & Theropsid(z)) -> (Theropsid(x) & Theropsid(y)))", "score": 0}
{"id": "eqasc_validation_530", "prediction": "all x y z.((Pelycosaur(x) & Therapsid(y) & Theropsid(z)) -> (Theropsid(x) | Theropsid(y)))", "score": 0}
{"id": "eqasc_validation_530", "prediction": "all x y.((Pelycosaur(x) & Therapsid(y)) -> (Theropsid(x) & (Pelycosaur(x) | Therapsid(x))))", "score": 0}
{"id": "eqasc_validation_530", "prediction": "all x y.((Pelycosaur(x) & Therapsid(y)) -> (Theropsid(y) & Theropsid(y)))", "score": 0}
{"id": "eqasc_validation_530", "prediction": "all x.((Pelycosaur(x) | Therapsid(x)) -> (Theropsid(x) & Theropsid(x)))", "score": 0}
{"id": "eqasc_validation_530", "prediction": "all x y z.((Pelycosaur(x) & Therapsid(y) & Pelycosaur(z)) -> (Theropsid(y) & Theropsid(z)))", "score": 0}
{"id": "eqasc_validation_530", "prediction": "all x y.((Pelycosaur(x) | Therapsid(x)) -> Theropsid(y))", "score": 0}
{"id": "eqasc_validation_531", "prediction": "all x.(Therapsid(x) -> Animal(x))", "score": 0}
{"id": "eqasc_validation_531", "prediction": "all x.(Therapsid(x) -> (Animal(x) & Animal(x)))", "score": 0}
{"id": "eqasc_validation_531", "prediction": "all x.(Therapsid(x) -> (Animal(x) & Animal(x) & Animal(x)))", "score": 0}
{"id": "eqasc_validation_531", "prediction": "all x y.((Therapsid(x) & Animal(y)) -> Animal(x,y))", "score": 0}
{"id": "eqasc_validation_531", "prediction": "all x.(Therapsid(x) -> (Animal(x) & Animal(x) & Animal(x) & Animal(x)))", "score": 0}
{"id": "eqasc_validation_531", "prediction": "all x.((Therapsid(x) & Animal(x)) -> Animal(x))", "score": 0}
{"id": "eqasc_validation_531", "prediction": "all x y.((Therapsid(x) & Animal(y)) -> Animal(x))", "score": 0}
{"id": "eqasc_validation_531", "prediction": "all x.(Therapsid(x) -> (Animal(x) & Animal(x) & Therapsid(x)))", "score": 0}
{"id": "eqasc_validation_531", "prediction": "all x y z.((Therapsid(x) & Animal(y) & Animal(z)) -> Animal(x,y,z))", "score": 0}
{"id": "eqasc_validation_531", "prediction": "all x.(Therapsid(x) -> (Animal(x) & Animal(x) & Animal(x) & Animal(x) & Animal(x)))", "score": 0}
{"id": "eqasc_validation_531", "prediction": "all x y.((Therapsid(x) & Animal(y)) -> (Animal(x) & Animal(y)))", "score": 0}
{"id": "eqasc_validation_531", "prediction": "all x.(Therapsid(x) -> (Animal(x) & Animal(y) & Animal(z) & Animal(z)))", "score": 0}
{"id": "eqasc_validation_531", "prediction": "all x y z.((Therapsid(x) & Animal(y) & Animal(z)) -> Animal(x))", "score": 0}
{"id": "eqasc_validation_532", "prediction": "all x.(Tetraceratops(x) -> Therapsid(x))", "score": 0}
{"id": "eqasc_validation_532", "prediction": "all x.(Tetraceratops(x) -> OldestKnownTherapsid(x))", "score": 0}
{"id": "eqasc_validation_532", "prediction": "all x.(Tetraceratops(x) -> (OldestKnownTherapsid(x) & Therapsid(x)))", "score": 0}
{"id": "eqasc_validation_532", "prediction": "all x.(Tetraceratops(x) -> (OldestKnownTherapsid(x) & KnownTherapsid(x)))", "score": 0}
{"id": "eqasc_validation_532", "prediction": "Tetraceratops (Tetraceratops) -> OldestKnownTherapsid(x))", "score": -1}
{"id": "eqasc_validation_532", "prediction": "(OldestKnownTherapsid(Tetraceratops))", "score": 0}
{"id": "eqasc_validation_532", "prediction": "All x.(Tetraceratops(x) -> Therapsid(x))", "score": -1}
{"id": "eqasc_validation_532", "prediction": "all x.(Tetraceratops(x) -> (OldestKnownTherapsid(x) & OldestKnownTherapsid(x)))", "score": 0}
{"id": "eqasc_validation_532", "prediction": "(OldestKnownTherapsid(Tetraceratops) & Therapsid(Tetraceratops))", "score": 0}
{"id": "eqasc_validation_532", "prediction": "(AlterestKnownTherapsid(Tetraceratops) & Therapsid(Tetraceratops))", "score": 0}
{"id": "eqasc_validation_532", "prediction": "(AlterestKnownTherapsid(Tetraceratops))", "score": 0}
{"id": "eqasc_validation_532", "prediction": "all x.(Tetraceratops(x) -> (OldestKnownTherapsid(x) & Tetraceratops(x)))", "score": 0}
{"id": "eqasc_validation_532", "prediction": "Tetraceratops is oldestKnownTherapsid(tetraceratops)", "score": -1}
{"id": "eqasc_validation_532", "prediction": "all x.(Tetraceratops(x) -> TherapsidOldestKnown(x))", "score": 0}
{"id": "eqasc_validation_532", "prediction": "Tetraceratops is the oldest known therapsid.", "score": -1}
{"id": "eqasc_validation_532", "prediction": "all x.(Tetraceratops(x) -> (OldestKnownTherapsid(x) & KnownAsTherapsid(x)))", "score": 0}
{"id": "eqasc_validation_533", "prediction": "all x.(Tetraceratop(x) -> Pelycosaur(x))", "score": 0}
{"id": "eqasc_validation_533", "prediction": "all x y.((Tetraceratop(x) & Pelycosaur(y)) -> Pelycosaur(x))", "score": 0}
{"id": "eqasc_validation_533", "prediction": "all x.(Tetraceratops(x) -> Pelycosaur(x))", "score": 0}
{"id": "eqasc_validation_533", "prediction": "all x y.((Tetraceratop(x) & Pelycosaur(y)) -> (Pelycosaur(x) & Pelycosaur(y)))", "score": 0}
{"id": "eqasc_validation_533", "prediction": "all x y.((Tetraceratop(x) & Pelycosaur(y)) -> (Pelycosaur(x) & Pelycosaur(x)))", "score": 0}
{"id": "eqasc_validation_533", "prediction": "all x y z.((Tetraceratop(x) & Pelycosaur(y) & Pelycosaur(z)) -> (Pelycosaur(x) & Pelycosaur(y)))", "score": 0}
{"id": "eqasc_validation_533", "prediction": "all x y.((Tetraceratop(x) & Pelycosaur(y)) -> (Pelycosaur(x) | Pelycosaur(x)))", "score": 0}
{"id": "eqasc_validation_533", "prediction": "all x y z.((Tetraceratop(x) & Pelycosaur(y) & Pelycosaur(z)) -> (Pelycosaur(x) | Pelycosaur(y)))", "score": 0}
{"id": "eqasc_validation_533", "prediction": "all x y z.((Tetraceratop(x) & Pelycosaur(y) & Pelycosaur(z)) -> (Pelycosaur(x) | Pelycosaur(x)))", "score": 0}
{"id": "eqasc_validation_533", "prediction": "all x y.((Tetraceratop(x) & Pelycosaur(y)) -> (Pelycosaur(x) | Pelycosaur(y)))", "score": 0}
{"id": "eqasc_validation_533", "prediction": "all x y.((Tetraceratop(x) & Pelycosaur(y)) -> (Pelycosaur(x) & -Pelycosaur(y)))", "score": 0}
{"id": "eqasc_validation_533", "prediction": "all x y z.((Tetraceratop(x) & Pelycosaur(y) & Pelycosaur(z)) -> (Pelycosaur(x) & Pelycosaur(x)))", "score": 0}
{"id": "eqasc_validation_533", "prediction": "all x.((Tetraceratop(x) & Pelycosaur(x)) -> Pelycosaur(x))", "score": 0}
{"id": "eqasc_validation_533", "prediction": "all x y.((Tetraceratop(x) & Pelycosaur(y)) -> (Pelycosaur(x) & -Pelycosaur(x)))", "score": 0}
{"id": "eqasc_validation_533", "prediction": "all x y z.((Tetraceratop(x) & Pelycosaur(y) & Pelycosaur(z)) -> Pelycosaur(x))", "score": 0}
{"id": "eqasc_validation_534", "prediction": "all x.(Therapsid(x) -> (Reptile(x) & AscendedToMammals(x)))", "score": 2}
{"id": "eqasc_validation_534", "prediction": "all x.(Therapsid(x) -> (Reptile(x) & AncientToMammals(x)))", "score": 2}
{"id": "eqasc_validation_534", "prediction": "all x.(Therapsid(x) -> (AncientToMammals(x) & Reptile(x)))", "score": 2}
{"id": "eqasc_validation_534", "prediction": "all x.(Therapsid(x) -> (Reptile(x) & AntecedentToMammals(x)))", "score": 4}
{"id": "eqasc_validation_534", "prediction": "all x.(Therapsid(x) -> (Reptile(x) & AscendedToMammal(x)))", "score": 0}
{"id": "eqasc_validation_534", "prediction": "all x.(Therapsid(x) -> (Reptile(x) & AscendedTo(x,Mammals)))", "score": 3}
{"id": "eqasc_validation_534", "prediction": "all x.(Therapsid(x) -> (Reptile(x) & AncientToMammal(x)))", "score": 0}
{"id": "eqasc_validation_534", "prediction": "all x.(Therapsid(x) -> (AncientToMammal(x) & Reptile(x)))", "score": 0}
{"id": "eqasc_validation_534", "prediction": "all x y.((Therapsid(x) & Mammal(y)) -> AscendedTo(x,y))", "score": 0}
{"id": "eqasc_validation_534", "prediction": "all x.(Therapsid(x) -> (Reptile(x) & AestheticToMammals(x)))", "score": 0}
{"id": "eqasc_validation_534", "prediction": "all x.(Therapsid(x) -> AscendedToMammals(x))", "score": 0}
{"id": "eqasc_validation_534", "prediction": "all x y.((Therapsid(x) & Mammal(y)) -> AncientTo(x,y))", "score": 0}
{"id": "eqasc_validation_534", "prediction": "all x.(Therapsid(x) -> (Reptile(x) & AvorableToMammals(x)))", "score": 2}
{"id": "eqasc_validation_535", "prediction": "all x y z.((Pelycosaur(x) & Reptile(y) & Mammal(z)) -> AntecedentTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_535", "prediction": "all x y z.((Pelycosaur(x) & Reptile(y) & Mammal(z)) -> AscendedTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_535", "prediction": "all x y z.((Pelycosaur(x) & Reptile(y) & Mammal(z)) -> AncientTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_535", "prediction": "all x y z.((Pelycosaur(x) & Reptile(y) & Mammal(z)) -> GivesRiseTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_535", "prediction": "all x y z.((Pelycosaur(x) & Reptile(y) & Mammal(z)) -> AntecedentTo(y,z))", "score": 0}
{"id": "eqasc_validation_535", "prediction": "all x y z.((Pelycosaur(x) & Reptile(y) & Mammal(z)) -> GaveRiseTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_535", "prediction": "all x y.((Pelycosaur(x) & Reptile(y)) -> AscendedTo(x,y))", "score": 1}
{"id": "eqasc_validation_535", "prediction": "all x y.((Pelycosaur(x) & Reptile(y)) -> AntecedentToMammals(x,y))", "score": 0}
{"id": "eqasc_validation_535", "prediction": "all x y z.((Pelycosaur(x) & Reptile(y) & Mammal(z)) -> GivesRainTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_535", "prediction": "all x y.((Pelycosaur(x) & Reptile(y)) -> AscendedToAncientToMammals(x,y))", "score": 0}
{"id": "eqasc_validation_535", "prediction": "all x y.((Pelycosaur(x) & Reptile(y)) -> AncientToMammals(x,y))", "score": 0}
{"id": "eqasc_validation_535", "prediction": "all x y z.((Pelycosaur(x) & Reptile(y) & Mammal(z)) -> GivesRiseToAncientTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_535", "prediction": "all x y z.((Pelycosaur(x) & Reptile(y) & Mammal(z)) -> AncientTo(y,z))", "score": 0}
{"id": "eqasc_validation_535", "prediction": "all x y z.((Pelycosaur(x) & Reptile(y) & Mammal(z)) -> GaveRiseToAncientTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_535", "prediction": "all x y z.((Pelycosaur(x) & Reptile(y) & Mammal(z)) -> GivesRiseTo(x,y))", "score": 0}
{"id": "eqasc_validation_535", "prediction": "all x y z.((Pelycosaur(x) & Reptile(y) & Mammal(z)) -> AscendedTo(x,y))", "score": 0}
{"id": "eqasc_validation_536", "prediction": "exists x.(Pelycosaur(x) & Reptile(x) & AncientToMammals(x))", "score": 4}
{"id": "eqasc_validation_536", "prediction": "exists x.(Pelycosaur(x) & Reptile(x) & AntecedentToMammals(x))", "score": 2}
{"id": "eqasc_validation_536", "prediction": "exists x.(Pelycosaur(x) & Reptile(x) & AscendedToMammals(x))", "score": 2}
{"id": "eqasc_validation_536", "prediction": "exists x.(Pelycosaur(x) & GivesRiseToReptile(x) & AncientToMammals(x))", "score": 0}
{"id": "eqasc_validation_536", "prediction": "exists x.(Pelycosaur(x) & GivesRiseToReptile(x) & AscendedToMammals(x))", "score": 0}
{"id": "eqasc_validation_536", "prediction": "exists x.(Pelycosaur(x) & GivesRiseToReptile(x))", "score": 0}
{"id": "eqasc_validation_536", "prediction": "exists x.(Pelycosaur(x) & GivesRiseToReptile(x) & AntecedentToMammals(x))", "score": 0}
{"id": "eqasc_validation_536", "prediction": "exists x.(Pelycosaur(x) & ReptileAncientToMammals(x))", "score": 0}
{"id": "eqasc_validation_536", "prediction": "exists x y.(Pelycosaur(x) & Reptile(y) & AntecedentToMammals(x,y))", "score": 0}
{"id": "eqasc_validation_536", "prediction": "exists x.(Pelycosaur(x) & Reptile(x) & AvorableToMammals(x))", "score": 2}
{"id": "eqasc_validation_536", "prediction": "exists x.(Pelycosaur(x) & Reptile(x) & AscendedTo(x,Mammals))", "score": 2}
{"id": "eqasc_validation_536", "prediction": "exists x y.(Pelycosaur(x) & Reptile(y) & GivesRiseTo(x,y))", "score": 0}
{"id": "eqasc_validation_536", "prediction": "all x y.((Pelycosaur(x) & Reptile(y)) -> GivesRiseTo(x,y))", "score": 0}
{"id": "eqasc_validation_536", "prediction": "all x.(Pelycosaur(x) -> GivesRiseToReptile(x))", "score": 0}
{"id": "eqasc_validation_536", "prediction": "exists x.(Pelycosaur(x) & Reptile(y) & AntecedentToMammals(x,y))", "score": 0}
{"id": "eqasc_validation_536", "prediction": "exists x y.(Pelycosaur(x) & Reptile(y) & AntecedentToMammals(y))", "score": 2}
{"id": "eqasc_validation_537", "prediction": "all x y z.((Howling(x) & Wolf(y) & Wolf(z)) -> Warns(x,y,z))", "score": 0}
{"id": "eqasc_validation_537", "prediction": "all x y.((Howling(x) & Wolf(y)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_537", "prediction": "all x y.((Wolf(x) & Wolf(y)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_537", "prediction": "all x y.((Wolf(x) & Wolf(y)) -> HowlingWarns(x,y))", "score": 0}
{"id": "eqasc_validation_537", "prediction": "all x y z.((Wolf(x) & Wolf(y) & Wolf(z)) -> Warns(x,y,z))", "score": 0}
{"id": "eqasc_validation_537", "prediction": "all x y z.((Wolf(x) & Wolf(y) & Wolf(z)) -> HowlingWarns(x,y,z))", "score": 0}
{"id": "eqasc_validation_537", "prediction": "all x y z.((Wolf(x) & Wolf(y) & Wolf(z) & Howling(x)) -> Warns(x,y,z))", "score": 0}
{"id": "eqasc_validation_537", "prediction": "all x y z.((Wolf(x) & Howling(y) & Wolf(z)) -> Warns(y,z))", "score": 0}
{"id": "eqasc_validation_537", "prediction": "all x y z.((Wolf(x) & Wolf(y) & Wolf(z) & Howling(x,y)) -> Warns(x,z))", "score": 0}
{"id": "eqasc_validation_537", "prediction": "all x y z.((Wolf(x) & Wolf(y) & Wolf(z)) -> (Howling(x,y) & Warns(x,z)))", "score": 0}
{"id": "eqasc_validation_537", "prediction": "all x y z.((Howling(x) & Wolf(y) & Wolf(z)) -> UsedToWarn(x,y,z))", "score": 0}
{"id": "eqasc_validation_537", "prediction": "all x y.((Wolf(x) & Wolf(y) & Howling(x)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_537", "prediction": "all x y z.((Howling(x) & Wolf(y) & Wolf(z)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_537", "prediction": "all x y z.((Howling(x) & Wolf(y) & Wolf(z)) -> Warn(x,y,z))", "score": 0}
{"id": "eqasc_validation_537", "prediction": "all x y z.((Wolf(x) & Wolf(y) & Wolf(z)) -> (Howls(x,y) & Warns(x,z)))", "score": 0}
{"id": "eqasc_validation_537", "prediction": "all x y z.((Wolf(x) & Wolf(y) & Wolf(z)) -> (Howling(x) & Warns(x,y,z)))", "score": 0}
{"id": "eqasc_validation_538", "prediction": "all x y.((Beagle(x) & PitifulSound(y)) -> Howls(x,y))", "score": 0}
{"id": "eqasc_validation_538", "prediction": "all x.(Beagle(x) -> HowlsPitifulSound(x))", "score": 0}
{"id": "eqasc_validation_538", "prediction": "all x y z.((Beagle(x) & PitifulSound(y) & Where(z) & Howls(x,y)) -> PitifulSound(z))", "score": 0}
{"id": "eqasc_validation_538", "prediction": "exists x y.(Beagle(x) & PitifulSound(y) & Howls(x,y))", "score": 0}
{"id": "eqasc_validation_538", "prediction": "all x y.((Beagle(x) & PitifulSound(y)) -> Howles(x,y))", "score": 0}
{"id": "eqasc_validation_538", "prediction": "exists x.(Beagle(x) & HowlsPitifulSound(x))", "score": 0}
{"id": "eqasc_validation_538", "prediction": "all x y z.((Beagle(x) & PitifulSound(y) & Where(z)) -> Howls(x,y))", "score": 0}
{"id": "eqasc_validation_538", "prediction": "all x.(Beagle(x) -> HowlsMostPitifulSound(x))", "score": 0}
{"id": "eqasc_validation_538", "prediction": "all x y z.((Beagle(x) & PitifulSound(y) & Where(z) & Howls(x,y)) -> PitifulSound(x,z))", "score": 0}
{"id": "eqasc_validation_538", "prediction": "all x y z.((Beagle(x) & PitifulSound(y) & Where(z) & Howls(x,y)) -> PitifulSound(y))", "score": 0}
{"id": "eqasc_validation_538", "prediction": "all x y z.((Beagle(x) & PitifulSound(y) & Where(z) & Howls(x,y,z)) -> PitifulSound(x))", "score": 0}
{"id": "eqasc_validation_538", "prediction": "all x y z.((Beagle(x) & PitifulSound(y) & Where(z) & Howls(x,y)) -> PitifulSound(x))", "score": 0}
{"id": "eqasc_validation_538", "prediction": "all x y z.((Beagle(x) & PitifulSound(y) & Where(z)) -> Howls(x,y,z))", "score": 0}
{"id": "eqasc_validation_538", "prediction": "all x y z.((Beagle(x) & PitifulSound(y) & Howls(x,y)) -> PitifulSound(z))", "score": 0}
{"id": "eqasc_validation_538", "prediction": "all x y z.((Beagle(x) & PitifulSound(y) & Where(z) & Howls(x,y)) -> PitifulSound(x,y))", "score": 0}
{"id": "eqasc_validation_538", "prediction": "all x y z.((Beagle(x) & PitifulSound(y) & Where(z) & Howls(x,y)) -> Howls(x,y))", "score": 0}
{"id": "eqasc_validation_539", "prediction": "all x y.((Wolf(x) & Wolf(y)) -> UsesSoundToWarn(x,y))", "score": 0}
{"id": "eqasc_validation_539", "prediction": "all x y z.((Wolf(x) & Sound(y) & Wolf(z)) -> UsesToWarn(x,y,z))", "score": 0}
{"id": "eqasc_validation_539", "prediction": "all x y z.((Wolf(x) & Sound(y) & Wolf(z)) -> UsesToWarn(x,z))", "score": 0}
{"id": "eqasc_validation_539", "prediction": "all x y z.((Wolf(x) & Wolf(y) & Sound(z)) -> UsesToWarn(x,y,z))", "score": 0}
{"id": "eqasc_validation_539", "prediction": "all x y z.((Wolf(x) & Wolf(y) & Wolf(z)) -> UsesSoundToWarn(x,y,z))", "score": 0}
{"id": "eqasc_validation_539", "prediction": "all x y.((Wolf(x) & Wolf(y)) -> (UsesSound(x,y) & Warns(x,y)))", "score": 0}
{"id": "eqasc_validation_539", "prediction": "all x y.((Wolf(x) & Wolf(y)) -> (UsesSoundToWarn(x,y) & UsesSoundToWarn(x,y)))", "score": 0}
{"id": "eqasc_validation_539", "prediction": "all x y z.((Wolf(x) & Sound(y) & Wolf(z)) -> (Uses(x,y) & Warns(x,z)))", "score": 0}
{"id": "eqasc_validation_539", "prediction": "all x y z.((Wolf(x) & Sound(y) & Wolf(z)) -> UsesToWarn(x,y))", "score": 0}
{"id": "eqasc_validation_539", "prediction": "all x y.((Wolf(x) & Wolf(y)) -> UseSoundToWarn(x,y))", "score": 0}
{"id": "eqasc_validation_539", "prediction": "all x y.((Wolf(x) & Wolf(y)) -> UsesSound(x,y))", "score": 0}
{"id": "eqasc_validation_539", "prediction": "all x y z.((Wolf(x) & Wolf(y) & Wolf(z)) -> UsesSoundToWarn(x,z))", "score": 0}
{"id": "eqasc_validation_539", "prediction": "all x.(Wolf(x) -> (UsesSound(x) & WarnsOtherWolfe(x)))", "score": 0}
{"id": "eqasc_validation_539", "prediction": "all x y z w.((Wolf(x) & Sound(y) & Wolf(z)) -> UsesToWarn(x,y,z))", "score": 0}
{"id": "eqasc_validation_539", "prediction": "all x y z.((Wolf(x) & Wolf(y) & Sound(z)) -> UsesToWarn(x,y))", "score": 0}
{"id": "eqasc_validation_539", "prediction": "all x y z.((Wolf(x) & Sound(y) & Wolf(z)) -> UsesForWarning(x,y,z))", "score": 0}
{"id": "eqasc_validation_540", "prediction": "all x.(IndrisGroup(x) -> CommunicatesWithMelancholyAndDistinctiveHowls(x))", "score": 0}
{"id": "eqasc_validation_540", "prediction": "all x.(Indris(x) -> CommunicatesWithMelancholyAndDistinctiveHowls(x))", "score": 0}
{"id": "eqasc_validation_540", "prediction": "all x.(IndrisGroup(x) -> CommunicatesWithMournfulAndDistinctiveHowls(x))", "score": 0}
{"id": "eqasc_validation_540", "prediction": "all x.(Indris(x) -> (CommunicatesWithMelancholy(x) & CommunicatesWithDistinctiveHowls(x)))", "score": 0}
{"id": "eqasc_validation_540", "prediction": "all x.(Indris(x) -> CommunicatesWithMournfulAndDistinctiveHowls(x))", "score": 0}
{"id": "eqasc_validation_540", "prediction": "all x.(IndrisGroup(x) -> (CommunicatesWithMelancholy(x) & CommunicatesWithDistinctiveHowls(x)))", "score": 0}
{"id": "eqasc_validation_540", "prediction": "all x y.((Indris(x) & Group(y)) -> CommunicatesWithMelancholyAndDistinctiveHowls(x,y))", "score": 0}
{"id": "eqasc_validation_540", "prediction": "all x.(Indris(x) -> CommunicatesMournfulAndDistinctiveHowls(x))", "score": 0}
{"id": "eqasc_validation_540", "prediction": "all x.(IndrisGroup(x) -> CommunicatesMournfulAndDistinctiveHowls(x))", "score": 0}
{"id": "eqasc_validation_540", "prediction": "all x y.((IndrisGroup(x) & IndrisGroup(y)) -> CommunicatesWithMelancholyAndDistinctiveHowls(x,y))", "score": 0}
{"id": "eqasc_validation_540", "prediction": "all x.(IndrisGroup(x) -> CommunicatesWithMelodfulAndDistinctiveHowls(x))", "score": 0}
{"id": "eqasc_validation_540", "prediction": "all x.(Indris(x) -> CommunicatesWithMelodfulAndDistinctiveHowls(x))", "score": 0}
{"id": "eqasc_validation_540", "prediction": "all x.(IndrisGroup(x) -> CommunicatesWithMeetfulAndDistinctiveHowls(x))", "score": 0}
{"id": "eqasc_validation_540", "prediction": "all x y.((IndrisGroup(x) & IndrisGroup(y)) -> CommunicatesWithMournfulAndDistinctiveHowls(x,y))", "score": 0}
{"id": "eqasc_validation_540", "prediction": "all x.(IndrisGroup(x) -> CommunicatesWithMeetingAndDistinctiveHowls(x))", "score": 0}
{"id": "eqasc_validation_540", "prediction": "all x.(Indris(x) -> CommunicatesWithMeetingAndDistinctiveHowls(x))", "score": 0}
{"id": "eqasc_validation_541", "prediction": "all x.(Wolf(x) -> UsesDistinctFormsOfCommunication(x))", "score": 0}
{"id": "eqasc_validation_541", "prediction": "all x y.((Wolf(x) & Communication(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_541", "prediction": "all x.(Wolf(x) -> DistinctFormsOfCommunication(x))", "score": 0}
{"id": "eqasc_validation_541", "prediction": "all x y.((Wolf(x) & Communication(y)) -> UsesDistinctForms(x,y))", "score": 0}
{"id": "eqasc_validation_541", "prediction": "all x.(Wolf(x) -> (UsesDistinctFormsOfCommunication(x) & UsesDistinctFormsOfCommunication(x)))", "score": 0}
{"id": "eqasc_validation_541", "prediction": "all x.(Wolf(x) -> UsesDiscreteFormsOfCommunication(x))", "score": 0}
{"id": "eqasc_validation_541", "prediction": "all x y z.((Wolf(x) & Communication(y) & Communication(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_541", "prediction": "all x y.((Wolf(x) & CommunicationForm(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_541", "prediction": "all x.(Wolf(x) -> UsesDiscreetFormsOfCommunication(x))", "score": 0}
{"id": "eqasc_validation_541", "prediction": "all x.(Wolf(x) -> exists y.(Communication(y) & Uses(x,y))))", "score": -1}
{"id": "eqasc_validation_541", "prediction": "all x.(Wolf(x) -> UsesDiverseFormsOfCommunication(x))", "score": 0}
{"id": "eqasc_validation_541", "prediction": "all x.(Wolf(x) -> UsesDifferentFormsOfCommunication(x))", "score": 0}
{"id": "eqasc_validation_541", "prediction": "all x.(Wolf(x) -> UsesDistantFormsOfCommunication(x))", "score": 0}
{"id": "eqasc_validation_541", "prediction": "all x y z.((Wolf(x) & Communication(y) & Communication(z)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_541", "prediction": "all x.(Wolf(x) -> UsesDistinctCommunication(x))", "score": 0}
{"id": "eqasc_validation_542", "prediction": "all x y z.((HowlingCoyote(x) & Chorus(y) & Area(z)) -> (JoinsIn(y,x) & ReverberatesWithNoise(z,x)))", "score": 0}
{"id": "eqasc_validation_542", "prediction": "all x y.((HowlingCoyoteChoir(x) & Area(y)) -> (JoinsIn(x,y) & ReverberatesWithNoise(y)))", "score": 0}
{"id": "eqasc_validation_542", "prediction": "all x y z.((Choir(x) & HowlingCoyote(y) & Area(z)) -> (JoinsIn(x,y) & ReverberatesWithNoise(z)))", "score": 0}
{"id": "eqasc_validation_542", "prediction": "all x y z.((Choir(x) & HowlingCoyote(y) & Area(z)) -> (JoinsIn(x,y) & ReverberatesWithNoise(x,z)))", "score": 0}
{"id": "eqasc_validation_542", "prediction": "all x y z.((Choir(x) & HowlingCoyote(y) & Area(z)) -> (JoinsIn(x,y) & ReverberatesWithNoise(z,x)))", "score": 0}
{"id": "eqasc_validation_542", "prediction": "all x y z.((HowlingCoyote(x) & Chorus(y) & Area(z)) -> (JoinsIn(y,x) & ReverberatesWithNoise(z)))", "score": 0}
{"id": "eqasc_validation_542", "prediction": "all x y z.((Coyote(x) & HowlingCoyote(y) & Area(z)) -> (JoinsIn(x,y) & ReverberatesWithNoise(x,z)))", "score": 0}
{"id": "eqasc_validation_542", "prediction": "all x y z.((Coyote(x) & HowlingCoyote(y) & Area(z)) -> (JoinsIn(x,y) & ReverberatesWithNoise(z)))", "score": 0}
{"id": "eqasc_validation_542", "prediction": "all x y z.((Choir(x) & HowlingCoyote(y) & Area(z)) -> (JoinsIn(x,y) & ReverberatesWithNoise(z,y)))", "score": 0}
{"id": "eqasc_validation_542", "prediction": "all x y z.((Cyclist(x) & HowlingCoyote(y) & Area(z)) -> (JoinsIn(x,y) & ReverberatesWithNoise(x,z)))", "score": 0}
{"id": "eqasc_validation_542", "prediction": "all x y z.((CoyoteChoir(x) & HowlingCoyote(y) & Area(z)) -> (JoinsIn(x,y) & ReverberatesWithNoise(x,z)))", "score": 0}
{"id": "eqasc_validation_542", "prediction": "all x y z.((Choir(x) & HowlingCoyote(y) & Area(z) & JoinsIn(x,y)) -> ReverberatesWithNoise(z))", "score": 0}
{"id": "eqasc_validation_542", "prediction": "all x y z.((CoyoteChoir(x) & HowlingCoyote(y) & Area(z)) -> (JoinsIn(x,y) & ReverberatesWithNoise(z)))", "score": 0}
{"id": "eqasc_validation_542", "prediction": "all x y z.((Cyclist(x) & HowlingCoyote(y) & Area(z)) -> (JoinsIn(x,y) & ReverberatesWithNoise(z)))", "score": 0}
{"id": "eqasc_validation_542", "prediction": "all x y z.((Cyclone(x) & HowlingCoyote(y) & Area(z)) -> (JoinsIn(x,y) & ReverberatesWithNoise(x,z)))", "score": 0}
{"id": "eqasc_validation_542", "prediction": "all x y.((Choir(x) & HowlingCoyote(y)) -> (JoinsIn(x,y) & ReverberatesWithNoise(x)))", "score": 0}
{"id": "eqasc_validation_543", "prediction": "all x y z.((ReverberatingNoise(x) & Wolf(y) & Wolf(z)) -> Warns(x,y,z))", "score": 0}
{"id": "eqasc_validation_543", "prediction": "all x y.((ReverberatingNoise(x) & Wolf(y)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_543", "prediction": "all x y.((ReverberatingNoise(x) & Wolf(y)) -> UsedToWarn(x,y))", "score": 0}
{"id": "eqasc_validation_543", "prediction": "all x y z.((ReverberatingNoise(x) & Wolf(y) & Wolf(z)) -> UsedToWarn(x,y,z))", "score": 0}
{"id": "eqasc_validation_543", "prediction": "all x y z.((ReverberatingNoise(x) & Wolf(y) & Wolf(z)) -> Warns(y,z))", "score": 0}
{"id": "eqasc_validation_543", "prediction": "all x y z.((ReverberatingNissance(x) & Wolf(y) & Wolf(z)) -> Warns(x,y,z))", "score": 0}
{"id": "eqasc_validation_543", "prediction": "all x y.((Wolf(x) & Wolf(y)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_543", "prediction": "all x y z.((ReverberatingNast(x) & Wolf(y) & Wolf(z)) -> Warns(x,y,z))", "score": 0}
{"id": "eqasc_validation_543", "prediction": "all x y.((Wolf(x) & Wolf(y) & ReverberatingNoise(x)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_543", "prediction": "all x y.((ReverberatingNissance(x) & Wolf(y)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_543", "prediction": "all x y z.((ReverberatingNoise(x) & Wolf(y) & Wolf(z)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_543", "prediction": "all x y.((ReverberatingNast(x) & Wolf(y)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_543", "prediction": "all x y.((ReverberatingNoise(x) & Wolf(y) & Wolf(z)) -> Warns(x,y,z))", "score": 0}
{"id": "eqasc_validation_543", "prediction": "all x y z.((ReverberatingNoise(x) & Wolf(y) & Wolf(z)) -> WarnsBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_543", "prediction": "all x y z.((ReverberatingNoise(x) & Wolf(y) & Wolf(z)) -> Warn(x,y,z))", "score": 0}
{"id": "eqasc_validation_543", "prediction": "all x y.((Wolf(x) & Wolf(y)) -> (ReverberatingNoise(x) & Warns(x,y)))", "score": 0}
{"id": "eqasc_validation_544", "prediction": "all x.(GrayWolf(x) -> LargestMemberOfCanineFamily(x))", "score": 0}
{"id": "eqasc_validation_544", "prediction": "all x.(GreyWolf(x) -> LargestMemberOfCanineFamily(x))", "score": 0}
{"id": "eqasc_validation_544", "prediction": "all x y.((GrayWolf(x) & CanineFamily(y)) -> LargestMember(x,y))", "score": 0}
{"id": "eqasc_validation_544", "prediction": "all x y.((GrayWolf(x) & Canine(y)) -> LargestMember(x,y))", "score": 0}
{"id": "eqasc_validation_544", "prediction": "all x y.((GrayWolf(x) & CanineFamily(y)) -> Largest(x,y))", "score": 0}
{"id": "eqasc_validation_544", "prediction": "all x.(GrayWolf(x) -> (LargestMemberOfCanineFamily(x) & CanineFamily(x)))", "score": 0}
{"id": "eqasc_validation_544", "prediction": "all x.(Wolf(x) -> (LargestMemberOfCanineFamily(x) & Gray(x)))", "score": 0}
{"id": "eqasc_validation_544", "prediction": "all x.(GreyWolf(x) -> (LargestMemberOfCanineFamily(x) & CanineFamily(x)))", "score": 0}
{"id": "eqasc_validation_544", "prediction": "all x.(GrayWolf(x) -> (LargestMemberOfCanineFamily(x) & LargestMemberOfCanineFamily(x)))", "score": 0}
{"id": "eqasc_validation_544", "prediction": "all x.(Wolf(x) -> LargestMemberOfCanineFamily(x))", "score": 0}
{"id": "eqasc_validation_544", "prediction": "all x.(GrayWolf(x) -> LargestMember(x,CanineFamily))", "score": 0}
{"id": "eqasc_validation_544", "prediction": "all x.(GreyWolf(x) -> (LargestMemberOfCanineFamily(x) & LargestMemberOfCanineFamily(x)))", "score": 0}
{"id": "eqasc_validation_544", "prediction": "all x.(GrayWolf(x) -> (LargestMemberOfCanineFamily(x) | LargestMemberOfCanineFamily(x)))", "score": 0}
{"id": "eqasc_validation_545", "prediction": "all x y.((Canine(x) & Howling(y)) -> WarnsOthers(x,y))", "score": 0}
{"id": "eqasc_validation_545", "prediction": "all x y.((Howling(x) & Canine(y)) -> WarnsOthers(y))", "score": 0}
{"id": "eqasc_validation_545", "prediction": "all x.(Howling(x) -> UsedByCaninesToWarnOthers(x))", "score": 0}
{"id": "eqasc_validation_545", "prediction": "all x y z.((Howling(x) & Canine(y) & Animal(z)) -> (UsedBy(y,z) & Warns(y,z)))", "score": 0}
{"id": "eqasc_validation_545", "prediction": "all x y z.((Howling(x) & Canine(y) & Animal(z)) -> WarnsOthers(y,z))", "score": 0}
{"id": "eqasc_validation_545", "prediction": "all x y z.((Howling(x) & Canine(y) & Animal(z)) -> UsedToWarn(y,z))", "score": 0}
{"id": "eqasc_validation_545", "prediction": "all x y z.((Howling(x) & Canine(y) & Animal(z)) -> Warns(y,z))", "score": 0}
{"id": "eqasc_validation_545", "prediction": "all x y.((Howling(x) & Canine(y)) -> WarnsOthers(y,x))", "score": 0}
{"id": "eqasc_validation_545", "prediction": "all x y z.((Howling(x) & Canine(y) & Animal(z)) -> (UsedBy(y,z) & WarnsOthers(y,z)))", "score": 0}
{"id": "eqasc_validation_545", "prediction": "all x.(Howling(x) -> (UsedByCanines(x) & WarnsOthers(x)))", "score": 0}
{"id": "eqasc_validation_545", "prediction": "all x y.((Canine(x) & Howling(y)) -> (UsedBy(x,y) & WarnsOthers(x)))", "score": 0}
{"id": "eqasc_validation_545", "prediction": "all x y z.((Howling(x) & Canine(y) & Animal(z)) -> UsesToWarn(y,z))", "score": 0}
{"id": "eqasc_validation_545", "prediction": "all x y z.((Howling(x) & Canine(y) & Animal(z)) -> (UsedBy(x,y) & Warns(y,z)))", "score": 0}
{"id": "eqasc_validation_545", "prediction": "all x y z.((Howling(x) & Canine(y) & Other(z)) -> Warns(y,z))", "score": 0}
{"id": "eqasc_validation_545", "prediction": "all x y z.((Howling(x) & Canine(y) & Animal(z)) -> UsedToWarn(x,y,z))", "score": 0}
{"id": "eqasc_validation_545", "prediction": "all x y.((Canine(x) & Canine(y)) -> HowlsToWarn(x,y))", "score": 0}
{"id": "eqasc_validation_546", "prediction": "all x.((Warning(x) | Conveyance(x)) -> GoodRight(x))", "score": 0}
{"id": "eqasc_validation_546", "prediction": "all x.((Warning(x) | Warning(x)) -> GoodRight(x))", "score": 0}
{"id": "eqasc_validation_546", "prediction": "all x y.((Warning(x) & Conveyance(y)) -> exists z.(GoodRight(z) & GoodRight(z))))", "score": -1}
{"id": "eqasc_validation_546", "prediction": "all x.((Warning(x) & Warning(x)) -> GoodRight(x))", "score": 0}
{"id": "eqasc_validation_546", "prediction": "all x y.((Warning(x) & Warning(y)) -> exists z.(GoodRight(z) & GoodRight(z))))", "score": -1}
{"id": "eqasc_validation_546", "prediction": "all x y.((Warning(x) & Warning(y)) -> GoodRight(x))", "score": 0}
{"id": "eqasc_validation_546", "prediction": "all x y.((Warning(x) & Conveyance(y)) -> exists z.(GoodRight(z) & exists w.(GoodRight(w) & GoodRight(w)) & exists w.(GoodRight(w) & GoodRight(w)) & exists w.(GoodRight(w) & GoodRight(w))))", "score": 0}
{"id": "eqasc_validation_546", "prediction": "all x y.((Warning(x) & Conveyance(y)) -> exists z.(GoodRight(z) & exists w.(GoodRight(w) & GoodRight(w)) & exists w.(GoodRight(w) & GoodRight(w))))", "score": 0}
{"id": "eqasc_validation_546", "prediction": "all x y.((Warning(x) & Conveyance(y)) -> exists z.(GoodRight(z) & exists w.(GoodRight(w) & GoodRight(w)) & exists w.(GoodRight(w) & GoodRight(w)) & exists w.(GoodRight(w) & GoodRight(w) & GoodRight(w))))", "score": 0}
{"id": "eqasc_validation_546", "prediction": "all x.((Warning(x) | Warning(x))) -> GoodRight(x))", "score": -1}
{"id": "eqasc_validation_546", "prediction": "all x y.((Warning(x) & Conveyance(y)) -> exists z.(GoodRight(z) & exists w.(GoodRight(w) & GoodRight(w)) & exists w.(GoodRight(w) & GoodRight(w) & GoodRight(w))))", "score": 0}
{"id": "eqasc_validation_546", "prediction": "all x.(Warning(x) -> (GoodRight(x) & GoodRight(x)))", "score": 0}
{"id": "eqasc_validation_546", "prediction": "all x y.((Warning(x) & Conveyance(y)) -> exists z.(GoodRight(z) & exists w.(GoodRight(w) & GoodRight(w)) & exists w.(GoodRight(w) & GoodRight(w) & GoodRight(w) & GoodRight(w))))", "score": 0}
{"id": "eqasc_validation_546", "prediction": "all x y.((Warning(x) & Conveyance(y)) -> exists z.(GoodRight(z) & GoodRight(z)) & exists w.(GoodRight(w) & GoodRight(w)) & exists w.(GoodRight(w) & GoodRight(w))))", "score": -1}
{"id": "eqasc_validation_546", "prediction": "all x y.((Warning(x) & Conveyance(y)) -> exists z.(GoodRight(z) & exists w.(GoodRight(w) & GoodRight(w)) & exists w.(GoodRight(w) & GoodRight(w)) & exists w.(GoodRight(w) & GoodRight(w) & GoodRight(w) & GoodRight(w)))", "score": -1}
{"id": "eqasc_validation_546", "prediction": "all x y.((Warning(x) & Conveyance(y)) -> exists z.(GoodRight(z) & exists w.(GoodRight(w) & GoodRight(w))))", "score": 0}
{"id": "eqasc_validation_547", "prediction": "all x y.((Howling(x) & Wolf(y)) -> UsedToConstrain(x,y))", "score": 0}
{"id": "eqasc_validation_547", "prediction": "all x y z.((Howling(x) & Wolf(y) & Wolf(z)) -> UsedToConstrain(x,y,z))", "score": 0}
{"id": "eqasc_validation_547", "prediction": "all x y.((Howling(x) & Wolf(y)) -> UsedToWarn(x,y))", "score": 0}
{"id": "eqasc_validation_547", "prediction": "all x y z.((Howling(x) & Wolf(y) & Wolf(z)) -> UsedToWarn(x,y,z))", "score": 0}
{"id": "eqasc_validation_547", "prediction": "all x y.((Howling(x) & Wolf(y)) -> UsedToConvey(x,y))", "score": 0}
{"id": "eqasc_validation_547", "prediction": "all x y z.((Howling(x) & Wolf(y) & Wolf(z)) -> UsedToConsult(x,y,z))", "score": 0}
{"id": "eqasc_validation_547", "prediction": "all x y.((Howling(x) & Wolf(y)) -> UsedToConsult(x,y))", "score": 0}
{"id": "eqasc_validation_547", "prediction": "all x y z.((Howling(x) & Wolf(y) & Wolf(z)) -> UsedToConvey(x,y,z))", "score": 0}
{"id": "eqasc_validation_547", "prediction": "all x y z.((Howling(x) & Wolf(y) & Wolf(z)) -> UsesToConstrain(x,y,z))", "score": 0}
{"id": "eqasc_validation_547", "prediction": "all x y z.((Howling(x) & Wolf(y) & Wolf(z)) -> UsedToCaution(x,y,z))", "score": 0}
{"id": "eqasc_validation_547", "prediction": "all x y.((Howling(x) & Wolf(y)) -> UsedToCaution(x,y))", "score": 0}
{"id": "eqasc_validation_547", "prediction": "all x y z.((Howling(x) & Wolf(y) & Wolf(z)) -> Caution(x,y,z))", "score": 0}
{"id": "eqasc_validation_547", "prediction": "all x y z.((Howling(x) & Wolf(y) & Wolf(z)) -> UsedToConstruction(x,y,z))", "score": 0}
{"id": "eqasc_validation_547", "prediction": "all x y z.((Howling(x) & Wolf(y) & Wolf(z)) -> UsedToConstraint(x,y,z))", "score": 0}
{"id": "eqasc_validation_547", "prediction": "all x y.((Howling(x) & Wolf(y)) -> UsedToGuarantee(x,y))", "score": 0}
{"id": "eqasc_validation_547", "prediction": "all x y.((Howling(x) & Wolf(y)) -> UsedToConstruction(x,y))", "score": 0}
{"id": "eqasc_validation_548", "prediction": "all x.(CanisLupus(x) -> GreyWolf(x))", "score": 0}
{"id": "eqasc_validation_548", "prediction": "all x y.((CanisLupus(x) & GreyWolf(y)) -> Includes(x,y))", "score": 0}
{"id": "eqasc_validation_548", "prediction": "all x.(CanisLupus(x) -> (IncludesGrintWolfe(x) & IncludesGrintWolfe(x)))", "score": 0}
{"id": "eqasc_validation_548", "prediction": "all x.(CanisLupus(x) -> (GreyWolf(x) | GreyWolf(x)))", "score": 0}
{"id": "eqasc_validation_548", "prediction": "all x y.((CanisLupus(x) & GreyWolf(y)) -> IncludedSpecies(x,y))", "score": 0}
{"id": "eqasc_validation_548", "prediction": "all x.(CanisLupus(x) -> (IncludesGrintWolfes(x) & IncludesGrintWolfes(x)))", "score": 0}
{"id": "eqasc_validation_548", "prediction": "all x y.((CanisLupus(x) & GreyWolf(y)) -> Inhabits(x,y))", "score": 0}
{"id": "eqasc_validation_548", "prediction": "all x.(CanisLupus(x) -> (IncludesGreyWolfes(x) & IncludesGreyWolfes(x)))", "score": 0}
{"id": "eqasc_validation_548", "prediction": "all x.(CanisLupus(x) -> (IncludesGrintWolfe(x) & IncludesWolfe(x)))", "score": 0}
{"id": "eqasc_validation_548", "prediction": "all x.(CanisLupus(x) -> (IncludesGrintWolfe(x) & IncludesGreyWolfe(x)))", "score": 0}
{"id": "eqasc_validation_548", "prediction": "all x.(CanisLupus(x) -> (IncludesGrintWolfes(x) & IncludesWolfes(x)))", "score": 0}
{"id": "eqasc_validation_548", "prediction": "all x.(CanisLupus(x) -> (IncludesGreyWolfes(x) & IncludesWolfes(x)))", "score": 0}
{"id": "eqasc_validation_548", "prediction": "all x.(CanisLupus(x) -> (IncludesGrintWolfes(x) & IncludesGreyWolfes(x)))", "score": 0}
{"id": "eqasc_validation_548", "prediction": "all x.(CanisLupus(x) -> (IncludesGrintWolfe(x) | IncludesGrintWolfe(x)))", "score": 0}
{"id": "eqasc_validation_548", "prediction": "all x.(CanisLupus(x) -> (IncludesGreyWolfe(x) & IncludesGreyWolfe(x)))", "score": 0}
{"id": "eqasc_validation_549", "prediction": "all x y.((Howling(x) & Member(y) & CanisLupus(y)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_549", "prediction": "all x y z.((Howling(x) & Member(y) & Member(z) & CanisLupus(y)) -> Warns(x,y,z))", "score": 0}
{"id": "eqasc_validation_549", "prediction": "all x.(Howling(x) -> (UsedByCanisLupus(x) & WarnsOtherMembers(x)))", "score": 0}
{"id": "eqasc_validation_549", "prediction": "all x y.((Howling(x) & Member(y) & CanisLupus(y)) -> UsedToWarn(x,y))", "score": 0}
{"id": "eqasc_validation_549", "prediction": "all x y.((Howling(x) & Member(y) & CanisLupus(y)) -> WarnsOther(x,y))", "score": 0}
{"id": "eqasc_validation_549", "prediction": "all x y.((Howling(x) & Member(y) & CanisLupus(x)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_549", "prediction": "all x y.((Howling(x) & CanisLupus(y)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_549", "prediction": "all x y z.((Howling(x) & MemberOfSpecies(y) & MemberOfSpecies(z) & CanisLupus(y)) -> Warns(x,y,z))", "score": 0}
{"id": "eqasc_validation_549", "prediction": "all x y z.((Howling(x) & Member(y) & Species(z) & CanisLupus(y)) -> Warns(x,y,z))", "score": 0}
{"id": "eqasc_validation_549", "prediction": "all x y.((Howling(x) & Member(y) & CanisLupus(y)) -> WarnsOtherMembers(x,y))", "score": 0}
{"id": "eqasc_validation_549", "prediction": "all x y.((Howling(x) & CanisLupus(y)) -> WarnsOtherMembers(x,y))", "score": 0}
{"id": "eqasc_validation_549", "prediction": "all x y.((Howling(x) & Member(y) & CanisLupus(y)) -> WarnsOthers(x,y))", "score": 0}
{"id": "eqasc_validation_549", "prediction": "all x.((Howling(x) & CanisLupus(x)) -> WarnsOtherMembers(x))", "score": 0}
{"id": "eqasc_validation_549", "prediction": "all x y z.((Howling(x) & Member(y) & Member(z) & CanisLupus(y)) -> Warns(x,z))", "score": 0}
{"id": "eqasc_validation_549", "prediction": "all x y z.((Howling(x) & Member(y) & CanisLupus(z)) -> Warns(x,y,z))", "score": 0}
{"id": "eqasc_validation_549", "prediction": "all x y.((Howling(x) & CanisLupus(y)) -> UsedToWarn(x,y))", "score": 0}
{"id": "eqasc_validation_550", "prediction": "all x y.((Wolf(x) & Howl(y)) -> CommunicatesUsingPitches(x,y))", "score": 0}
{"id": "eqasc_validation_550", "prediction": "all x y.((Wolf(x) & Howl(y)) -> CommunicatesWith(x,y))", "score": 0}
{"id": "eqasc_validation_550", "prediction": "all x y z.((Wolf(x) & Howl(y) & Pitch(z)) -> Communicates(x,y,z))", "score": 0}
{"id": "eqasc_validation_550", "prediction": "all x y.((Wolf(x) & Howl(y)) -> Communicates(x,y))", "score": 0}
{"id": "eqasc_validation_550", "prediction": "all x y z.((Wolf(x) & Howl(y) & Pitch(z)) -> CommunicatesWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_550", "prediction": "all x y z.((Wolf(x) & Howl(y) & Pitch(z)) -> CommunicatesUsing(x,y,z))", "score": 0}
{"id": "eqasc_validation_550", "prediction": "all x y.((Wolf(x) & Howl(y)) -> Communicate(x,y))", "score": 0}
{"id": "eqasc_validation_550", "prediction": "all x y.((Wolf(x) & Howl(y)) -> CommunicatesUsingPitch(x,y))", "score": 0}
{"id": "eqasc_validation_550", "prediction": "all x y z.((Wolf(x) & Howl(y) & Pitch(z)) -> Communicate(x,y,z))", "score": 0}
{"id": "eqasc_validation_550", "prediction": "all x y z.((Wolf(x) & HowlPitch(y) & HowlPitch(z)) -> Communicates(x,y,z))", "score": 0}
{"id": "eqasc_validation_550", "prediction": "all x y z.((Wolf(x) & Pitch(y) & Howl(z)) -> CommunicatesWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_550", "prediction": "all x y z.((Wolf(x) & Pitch(y) & Howl(z)) -> Communicates(x,y,z))", "score": 0}
{"id": "eqasc_validation_550", "prediction": "all x y z.((Wolf(x) & HowlPitch(y) & HowlPitch(z)) -> CommunicatesWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_550", "prediction": "all x y z.((Wolf(x) & Howl(y) & Howl(z)) -> CommunicatesWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_550", "prediction": "all x y z.((Wolf(x) & Pitch(y) & Howl(z)) -> CommunicatesUsing(x,y,z))", "score": 0}
{"id": "eqasc_validation_550", "prediction": "all x y z.((Wolf(x) & Howl(y) & Pitch(z)) -> CommunicatesUsingPitch(x,y,z))", "score": 0}
{"id": "eqasc_validation_551", "prediction": "all x y.((Wolf(x) & Wolf(y)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_551", "prediction": "all x y.((Wolf(x) & Wolf(y)) -> WarnsByUsingDifferentPitches(x,y))", "score": 0}
{"id": "eqasc_validation_551", "prediction": "all x y.((Wolf(x) & Wolf(y)) -> WarnsByUsingPitches(x,y))", "score": 0}
{"id": "eqasc_validation_551", "prediction": "all x y.((Wolf(x) & Wolf(y) & UsesDifferentPitches(x,y)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_551", "prediction": "all x y.((Wolf(x) & Wolf(y) & UsesPitches(x,y)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_551", "prediction": "all x y.((Wolf(x) & Wolf(y)) -> (Warns(x,y) & UsesPitches(x,y)))", "score": 0}
{"id": "eqasc_validation_551", "prediction": "all x y.((Wolf(x) & Wolf(y) & UsesPitches(x,y)) -> WarnsByUsingPitches(x,y))", "score": 0}
{"id": "eqasc_validation_551", "prediction": "all x y z.((Wolf(x) & Wolf(y) & Pitch(z) & UsesPitch(x,z)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_551", "prediction": "all x y z.((Wolf(x) & Wolf(y) & Pitch(z) & UsesPitch(x,z)) -> Warns(x,y,z))", "score": 0}
{"id": "eqasc_validation_551", "prediction": "all x y.((Wolf(x) & Wolf(y)) -> (Warns(x,y) & UsesDifferentPitches(x)))", "score": 0}
{"id": "eqasc_validation_551", "prediction": "all x y z.((Wolf(x) & Wolf(y) & Pitch(z)) -> Warns(x,y,z))", "score": 0}
{"id": "eqasc_validation_551", "prediction": "all x y.((Wolf(x) & Wolf(y) & UsesDifferentPitch(x,y)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_551", "prediction": "all x y.((Wolf(x) & Wolf(y)) -> (Warns(x,y) & UsesDifferentPitches(x,y)))", "score": 0}
{"id": "eqasc_validation_551", "prediction": "all x y z.((Wolf(x) & Wolf(y) & Pitch(z)) -> WarnsByUsingPitch(x,y,z))", "score": 0}
{"id": "eqasc_validation_551", "prediction": "all x y.((Wolf(x) & Wolf(y)) -> WarnsByUsingDifferentPitch(x,y))", "score": 0}
{"id": "eqasc_validation_552", "prediction": "all x.(CanisLupusHowl(x) -> CanisLupusHowl(x))", "score": 0}
{"id": "eqasc_validation_552", "prediction": "all x.((CanisLupusHowl(x) & CanisLupusHowl(x)) -> Howl(x))", "score": 0}
{"id": "eqasc_validation_552", "prediction": "all x y.((CanisLupusHowl(x) & CanisLupusHowl(y)) -> CanisLupusHowl(x))", "score": 0}
{"id": "eqasc_validation_552", "prediction": "all x.((CanisLupusHowl(x) & CanisLupusHowl(x)) -> CanisLupusHowl(x))", "score": 0}
{"id": "eqasc_validation_552", "prediction": "all x y.((CanisLupusHowl(x) & CanisLupusHowl(y)) -> Howl(x,y))", "score": 0}
{"id": "eqasc_validation_552", "prediction": "all x y.((CanisLupusHowl(x) & CanisLupusHowl(y)) -> CanisLupusHowl(x,y))", "score": 0}
{"id": "eqasc_validation_552", "prediction": "all x y z.((CanisLupusHowl(x) & CanisLupusHowl(y) & Howl(z)) -> CanisLupusHowl(x,y,z))", "score": 0}
{"id": "eqasc_validation_552", "prediction": "all x y.((CanisLupusHowl(x) & Howl(y)) -> CanisLupusHowl(x,y))", "score": 0}
{"id": "eqasc_validation_552", "prediction": "all x y z.((CanisLupusHowl(x) & CanisLupusHowl(y) & Howl(z)) -> CanisLupusHowl(x))", "score": 0}
{"id": "eqasc_validation_552", "prediction": "all x y.((CanisLupusHowl(x) & Howl(y)) -> CanisLupusHowl(x))", "score": 0}
{"id": "eqasc_validation_552", "prediction": "all x y z.((CanisLupusHowl(x) & CanisLupusHowl(y) & Howl(z)) -> Howl(x,y,z))", "score": 0}
{"id": "eqasc_validation_552", "prediction": "all x y.((CanisLupusHowl(x) & CanisLupusHowl(y)) -> Howl(y))", "score": 0}
{"id": "eqasc_validation_552", "prediction": "all x y z.((CanisLupusHowl(x) & CanisLupusHowl(y) & Howl(z)) -> CanisLupusHowl(y))", "score": 0}
{"id": "eqasc_validation_552", "prediction": "all x.((CanisLupusHowl(x) & CanisLupusHowl(x)) -> CanisHowl(x))", "score": 0}
{"id": "eqasc_validation_552", "prediction": "all x y.((CanisLupusHowl(x) & CanisLupusHowl(y)) -> CanisHowl(x,y))", "score": 0}
{"id": "eqasc_validation_552", "prediction": "all x y.((CanisLupusHowl(x) & CanisLupusHowl(y)) -> Howl(x))", "score": 0}
{"id": "eqasc_validation_553", "prediction": "all x y.((Wolf(x) & WildCanine(y)) -> DistinctBySize(x,y))", "score": 0}
{"id": "eqasc_validation_553", "prediction": "all x y.((Wolf(x) & WildCanine(y)) -> Distinct(x,y))", "score": 0}
{"id": "eqasc_validation_553", "prediction": "all x y.((Wolf(x) & WildCanine(y)) -> DistinctedBySize(x,y))", "score": 0}
{"id": "eqasc_validation_553", "prediction": "all x y.((Wolf(x) & Canine(y)) -> DistinctBySize(x,y))", "score": 0}
{"id": "eqasc_validation_553", "prediction": "all x.(Wolf(x) -> (DistinctFromWildCanines(x) & Size(x)))", "score": 0}
{"id": "eqasc_validation_553", "prediction": "all x y.((Wolf(x) & WildCanine(y)) -> DistinguishedBySize(x,y))", "score": 0}
{"id": "eqasc_validation_553", "prediction": "all x y z.((Wolf(x) & WildCanine(y) & Size(z)) -> Distinct(x,y,z))", "score": 0}
{"id": "eqasc_validation_553", "prediction": "all x y z.((Wolf(x) & WildCanine(y) & WildCanine(z)) -> DistinctBySize(x,y,z))", "score": 0}
{"id": "eqasc_validation_553", "prediction": "all x.((Wolf(x) & WildCanine(x)) -> DistinctBySize(x))", "score": 0}
{"id": "eqasc_validation_553", "prediction": "all x.(Wolf(x) -> (DistinctedFromWildCanines(x) & Size(x)))", "score": 0}
{"id": "eqasc_validation_553", "prediction": "all x y.((Wolf(x) & Canine(y)) -> Distinct(x,y))", "score": 0}
{"id": "eqasc_validation_553", "prediction": "all x.(Wolf(x) -> Distinct(x,y))", "score": 0}
{"id": "eqasc_validation_553", "prediction": "all x y.((Wolf(x) & WildCanine(y)) -> DistinctBySizing(x,y))", "score": 0}
{"id": "eqasc_validation_553", "prediction": "all x.(Wolf(x) -> (Distinct(x) & WildCanine(x) & Size(x)))", "score": 0}
{"id": "eqasc_validation_553", "prediction": "all x y z.((Wolf(x) & WildCanine(y) & Size(z)) -> DistinctedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_554", "prediction": "all x.(WildCanine(x) -> (UsesHowling(x) & WarnsOthers(x)))", "score": 0}
{"id": "eqasc_validation_554", "prediction": "all x y.((WildCanine(x) & Howling(y)) -> UsesToWarn(x,y))", "score": 0}
{"id": "eqasc_validation_554", "prediction": "all x.(WildCanine(x) -> UsesHowlingToWarn(x))", "score": 0}
{"id": "eqasc_validation_554", "prediction": "all x y.((WildCanine(x) & Howling(y)) -> WarnsOthers(x,y))", "score": 0}
{"id": "eqasc_validation_554", "prediction": "all x y z.((WildCanine(x) & Howling(y) & Other(z)) -> UsesToWarn(x,y,z))", "score": 0}
{"id": "eqasc_validation_554", "prediction": "all x.(WildCanine(x) -> UsesHowlingToWarnOthers(x))", "score": 0}
{"id": "eqasc_validation_554", "prediction": "all x.((WildCanine(x) & Howling(x)) -> WarnsOthers(x))", "score": 0}
{"id": "eqasc_validation_554", "prediction": "all x y.((WildCanine(x) & Animal(y)) -> UsesHowlingToWarn(x,y))", "score": 0}
{"id": "eqasc_validation_554", "prediction": "all x y.((WildCanine(x) & WildCanine(y)) -> UsesHowlingToWarn(x,y))", "score": 0}
{"id": "eqasc_validation_554", "prediction": "all x y.((WildCanine(x) & Howling(y)) -> UsesToWarnOthers(x,y))", "score": 0}
{"id": "eqasc_validation_554", "prediction": "all x.(WildCanine(x) -> (UsesHowlingToWarnOthers(x) & UsesHowlingToWarnOthers(x)))", "score": 0}
{"id": "eqasc_validation_554", "prediction": "all x y z.((WildCanine(x) & Howling(y) & Animal(z)) -> UsesToWarn(x,z))", "score": 0}
{"id": "eqasc_validation_554", "prediction": "all x.((WildCanine(x) & UsesHowling(x)) -> WarnsOthers(x))", "score": 0}
{"id": "eqasc_validation_554", "prediction": "all x y z.((WildCanine(x) & Howling(y) & Other(z)) -> UsesToWarn(x,z))", "score": 0}
{"id": "eqasc_validation_554", "prediction": "all x y.((WildCanine(x) & Howling(y)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_554", "prediction": "all x y.((WildCanine(x) & Howl(y)) -> UsesToWarn(x,y))", "score": 0}
{"id": "eqasc_validation_555", "prediction": "All x.(Warning(x) -> MeansDanger(x))", "score": -1}
{"id": "eqasc_validation_555", "prediction": "all x.(Warning(x) -> MeansDanger(x))", "score": 0}
{"id": "eqasc_validation_555", "prediction": "All x.(WarningWarning(x) -> MeansDanger(x))", "score": -1}
{"id": "eqasc_validation_555", "prediction": "(Warning(Warning) & MeansDanger(Warning))", "score": 0}
{"id": "eqasc_validation_555", "prediction": "all x.(WarningWarning(x) -> MeansDanger(x))", "score": 0}
{"id": "eqasc_validation_555", "prediction": "(Warning(Warning) -> MeansDanger(Warning))", "score": 0}
{"id": "eqasc_validation_555", "prediction": "All x.(Warning(x) -> MeansDangerous(x))", "score": -1}
{"id": "eqasc_validation_555", "prediction": "all x.(Warning(x) -> MeansDangerous(x))", "score": 0}
{"id": "eqasc_validation_555", "prediction": "(WarningWarning(Warning) & MeansDanger(Warning))", "score": 0}
{"id": "eqasc_validation_555", "prediction": "Warning Warning (Warning) & MeansDanger(Warning))", "score": -1}
{"id": "eqasc_validation_555", "prediction": "(Warning(warning) & MeansDanger(warning))", "score": 0}
{"id": "eqasc_validation_555", "prediction": "Warning Warning(Warning) -> MeansDanger(Warning))", "score": -1}
{"id": "eqasc_validation_555", "prediction": "All x.(WarningWarning(x) -> MeansDangerous(x))", "score": -1}
{"id": "eqasc_validation_555", "prediction": "(Warning(Warning) & MeansDangerous(Warning))", "score": 0}
{"id": "eqasc_validation_555", "prediction": "all x.(WarningWarning(x) -> MeansDangerous(x))", "score": 0}
{"id": "eqasc_validation_555", "prediction": "Warning Warning (Warning) -> MeansDanger(Warning))", "score": -1}
{"id": "eqasc_validation_556", "prediction": "all x y.((Wolf(x) & Danger(y)) -> Howls(x,y))", "score": 0}
{"id": "eqasc_validation_556", "prediction": "all x y.((Wolf(x) & Danger(y)) -> Howls(x))", "score": 0}
{"id": "eqasc_validation_556", "prediction": "all x.((Wolf(x) & Danger(x)) -> Howls(x))", "score": 0}
{"id": "eqasc_validation_556", "prediction": "all x y z.((Wolf(x) & Danger(y) & Danger(z)) -> Howls(x,y,z))", "score": 0}
{"id": "eqasc_validation_556", "prediction": "all x y.((Wolf(x) & Danger(y)) -> HowlsWhen(x,y))", "score": 0}
{"id": "eqasc_validation_556", "prediction": "all x y z.((Wolf(x) & Danger(y) & Danger(z)) -> Howls(x,y))", "score": 0}
{"id": "eqasc_validation_556", "prediction": "all x y.((Wolf(x) & Danger(y)) -> HowlsWhenInDanger(x,y))", "score": 0}
{"id": "eqasc_validation_556", "prediction": "all x y.((Wolf(x) & Danger(y)) -> Howl(x,y))", "score": 0}
{"id": "eqasc_validation_556", "prediction": "all x y z.((Wolf(x) & Danger(y) & Danger(z)) -> Howls(x))", "score": 0}
{"id": "eqasc_validation_556", "prediction": "all x y z.((Wolf(x) & Danger(y) & Danger(z)) -> HowlsWhen(x,y,z))", "score": 0}
{"id": "eqasc_validation_556", "prediction": "all x y.((Wolf(x) & Danger(y)) -> HowlsWhenThereIs(x,y))", "score": 0}
{"id": "eqasc_validation_556", "prediction": "all x y.((Wolf(x) & Hazard(y)) -> Howls(x,y))", "score": 0}
{"id": "eqasc_validation_556", "prediction": "all x y.((Wolf(x) & Danger(y)) -> Howl(x))", "score": 0}
{"id": "eqasc_validation_556", "prediction": "all x y z.((Wolf(x) & Danger(y) & Hazard(z)) -> Howls(x,y,z))", "score": 0}
{"id": "eqasc_validation_556", "prediction": "all x y.((Wolf(x) & Danger(y)) -> HowlsIn(x,y))", "score": 0}
{"id": "eqasc_validation_556", "prediction": "all x.((Wolf(x) & ThereIsDanger(x)) -> Howls(x))", "score": 0}
{"id": "eqasc_validation_557", "prediction": "all x.(Wolf(x) -> Social(x))", "score": 0}
{"id": "eqasc_validation_557", "prediction": "all x y.((Wolf(x) & Person(y)) -> Social(x))", "score": 0}
{"id": "eqasc_validation_557", "prediction": "all x.(Wolf(x) -> (Social(x) & LikePeople(x)))", "score": 0}
{"id": "eqasc_validation_557", "prediction": "all x.(Wolf(x) -> (Social(x) | Social(x)))", "score": 0}
{"id": "eqasc_validation_557", "prediction": "all x.((Wolf(x) & People(x)) -> Social(x))", "score": 0}
{"id": "eqasc_validation_557", "prediction": "all x y.((Wolf(x) & Person(y)) -> Social(x,y))", "score": 0}
{"id": "eqasc_validation_557", "prediction": "all x y.((Wolf(x) & People(y)) -> Social(x))", "score": 0}
{"id": "eqasc_validation_557", "prediction": "(all x.(Wolf(x) -> Social(x)))", "score": 0}
{"id": "eqasc_validation_557", "prediction": "all x y.((Wolf(x) & People(y)) -> Social(x,y))", "score": 0}
{"id": "eqasc_validation_557", "prediction": "all x.((Wolf(x) & LikePeople(x)) -> Social(x))", "score": 0}
{"id": "eqasc_validation_557", "prediction": "all x.((Wolf(x) & Person(x)) -> Social(x))", "score": 0}
{"id": "eqasc_validation_557", "prediction": "all x.(Wolf(x) -> (Social(x) & People(x)))", "score": 0}
{"id": "eqasc_validation_557", "prediction": "all x.((Wolf(x) & Social(x)) -> Wolf(x))", "score": 0}
{"id": "eqasc_validation_558", "prediction": "all x y.((Howling(x) & SocialAnimal(y)) -> UsedToWarn(x,y))", "score": 0}
{"id": "eqasc_validation_558", "prediction": "all x y.((Howling(x) & SocialAnimal(y)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_558", "prediction": "all x y z.((Howling(x) & SocialAnimal(y) & SocialAnimal(z)) -> Warns(x,y,z))", "score": 0}
{"id": "eqasc_validation_558", "prediction": "all x y z.((Howling(x) & SocialAnimal(y) & SocialAnimal(z)) -> UsedToWarn(x,y,z))", "score": 0}
{"id": "eqasc_validation_558", "prediction": "all x y z.((Howling(x) & Animal(y) & SocialAnimal(z)) -> UsedToWarn(x,y,z))", "score": 0}
{"id": "eqasc_validation_558", "prediction": "all x y z.((Howling(x) & Animal(y) & SocialAnimal(z)) -> Warns(x,y,z))", "score": 0}
{"id": "eqasc_validation_558", "prediction": "all x y.((Howling(x) & Animal(y)) -> UsedToWarn(x,y))", "score": 0}
{"id": "eqasc_validation_558", "prediction": "all x y z.((Howling(x) & SocialAnimal(y) & Animal(z)) -> Warns(x,y,z))", "score": 0}
{"id": "eqasc_validation_558", "prediction": "all x y.((Howling(x) & Animal(y)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_558", "prediction": "all x y z.((Howling(x) & SocialAnimal(y) & Animal(z)) -> UsedToWarn(x,y,z))", "score": 0}
{"id": "eqasc_validation_558", "prediction": "all x y z.((Howling(x) & SocialAnimal(y) & SocialAnimal(z)) -> UsesToWarn(x,y,z))", "score": 0}
{"id": "eqasc_validation_558", "prediction": "all x y.((Howling(x) & SocialAnimal(y)) -> UsesToWarn(x,y))", "score": 0}
{"id": "eqasc_validation_558", "prediction": "all x y z.((Howling(x) & SocialAnimal(y) & SocialAnimal(z)) -> UsedToWarn(x,z))", "score": 0}
{"id": "eqasc_validation_558", "prediction": "all x y z.((Howling(x) & SocialAnimal(y) & SocialAnimal(z)) -> Warns(x,z))", "score": 0}
{"id": "eqasc_validation_558", "prediction": "all x.(Howling(x) -> UsedToWarnSocialAnimals(x))", "score": 0}
{"id": "eqasc_validation_558", "prediction": "all x y z.((Howling(x) & SocialAnimal(y) & SocialAnimal(z)) -> Warn(x,y,z))", "score": 0}
{"id": "eqasc_validation_559", "prediction": "all x.(Sandpaper(x) -> SmoothWoodenObjects(x))", "score": 0}
{"id": "eqasc_validation_559", "prediction": "all x y.((Sandpaper(x) & WoodenObject(y)) -> Smooth(x,y))", "score": 0}
{"id": "eqasc_validation_559", "prediction": "all x.(Sandpaper(x) -> UsedToSmoothWoodenObjects(x))", "score": 0}
{"id": "eqasc_validation_559", "prediction": "all x y.((Sandpaper(x) & WoodenObject(y)) -> SmoothWooden(x,y))", "score": 0}
{"id": "eqasc_validation_559", "prediction": "all x y z.((Sandpaper(x) & WoodenObject(y) & WoodenObject(z)) -> Smooth(x,y,z))", "score": 0}
{"id": "eqasc_validation_559", "prediction": "all x y.((Sandpaper(x) & WoodenObject(y)) -> UsedToSmooth(x,y))", "score": 0}
{"id": "eqasc_validation_559", "prediction": "all x.(Sandpaper(x) -> (UsedToSmoothWoodenObjects(x) & UsedToSmoothWoodenObjects(x)))", "score": 0}
{"id": "eqasc_validation_559", "prediction": "all x y.((Sandpaper(x) & SmoothWoodenObject(y)) -> UsedTo(x,y))", "score": 0}
{"id": "eqasc_validation_559", "prediction": "all x y.((Sandpaper(x) & WoodenObject(y)) -> UsedToSmoothWooden(x,y))", "score": 0}
{"id": "eqasc_validation_559", "prediction": "all x y z.((Sandpaper(x) & WoodenObject(y) & Smooth(z)) -> UsedTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_559", "prediction": "all x y.((Sandpaper(x) & WoodenObject(y)) -> Smoothed(x,y))", "score": 0}
{"id": "eqasc_validation_559", "prediction": "all x.(Sandpaper(x) -> (UsedToSmoothWoodenObjects(x) & SmoothWoodenObjects(x)))", "score": 0}
{"id": "eqasc_validation_559", "prediction": "all x y.((Sandpaper(x) & WoodenObject(y)) -> SmoothObject(x,y))", "score": 0}
{"id": "eqasc_validation_559", "prediction": "all x y.((Sandpaper(x) & WoodenObject(y) & UsedToSmooth(x,y)) -> Smooth(x,y))", "score": 0}
{"id": "eqasc_validation_559", "prediction": "all x y z.((Sandpaper(x) & WoodenObject(y) & Surface(z)) -> Smooth(x,y,z))", "score": 0}
{"id": "eqasc_validation_559", "prediction": "all x y z.((Sandpaper(x) & WoodenObject(y) & WoodenObject(z)) -> UsedToSmooth(x,y,z))", "score": 0}
{"id": "eqasc_validation_560", "prediction": "all x.(Dirt(x) -> (Abrasive(x) & Sandpaper(x)))", "score": 0}
{"id": "eqasc_validation_560", "prediction": "all x y.((Dirt(x) & Sandpaper(y)) -> Abrasive(x,y))", "score": 0}
{"id": "eqasc_validation_560", "prediction": "all x y.((Dirt(x) & Sandpaper(y)) -> Abrasive(x))", "score": 0}
{"id": "eqasc_validation_560", "prediction": "all x.(Dire(x) -> (Abrasive(x) & Sandpaper(x)))", "score": 0}
{"id": "eqasc_validation_560", "prediction": "all x.(Dirt(x) -> Abrasive(x))", "score": 0}
{"id": "eqasc_validation_560", "prediction": "all x.(Dirt(x) -> (Abrasive(x) & LikeSandpaper(x)))", "score": 0}
{"id": "eqasc_validation_560", "prediction": "all x.(Dert(x) -> (Abrasive(x) & Sandpaper(x)))", "score": 0}
{"id": "eqasc_validation_560", "prediction": "all x.(Dry(x) -> (Abrasive(x) & Sandpaper(x)))", "score": 0}
{"id": "eqasc_validation_560", "prediction": "all x.(Dream(x) -> (Abrasive(x) & Sandpaper(x)))", "score": 0}
{"id": "eqasc_validation_560", "prediction": "all x y.((Dert(x) & Sandpaper(y)) -> Abrasive(x,y))", "score": 0}
{"id": "eqasc_validation_560", "prediction": "all x y.((Dire(x) & Sandpaper(y)) -> Abrasive(x,y))", "score": 0}
{"id": "eqasc_validation_560", "prediction": "all x.(Drill(x) -> (Abrasive(x) & Sandpaper(x)))", "score": 0}
{"id": "eqasc_validation_560", "prediction": "all x.(Dirt(x) -> AbrasiveLikeSandpaper(x))", "score": 0}
{"id": "eqasc_validation_560", "prediction": "all x y.((Dry(x) & Sandpaper(y)) -> Abrasive(x,y))", "score": 0}
{"id": "eqasc_validation_560", "prediction": "all x.(Dirt(x) -> (AbrasiveLikeSandpaper(x)))", "score": 0}
{"id": "eqasc_validation_561", "prediction": "all x y.((Abrasive(x) & WoodenObject(y)) -> Smooth(x,y))", "score": 0}
{"id": "eqasc_validation_561", "prediction": "all x y.((Abrasive(x) & WoodenObject(y)) -> UsedToSmooth(x,y))", "score": 0}
{"id": "eqasc_validation_561", "prediction": "all x.(Abrasive(x) -> UsedToSmoothWoodenObjects(x))", "score": 0}
{"id": "eqasc_validation_561", "prediction": "all x.(Abrasive(x) -> SmoothWoodenObjects(x))", "score": 0}
{"id": "eqasc_validation_561", "prediction": "all x y.((Abrasive(x) & WoodenObject(y)) -> Smoothed(x,y))", "score": 0}
{"id": "eqasc_validation_561", "prediction": "all x.(Abrasive(x) -> SmoothWooden(x))", "score": 0}
{"id": "eqasc_validation_561", "prediction": "all x.(Abrasive(x) -> SmoothsWoodenObjects(x))", "score": 0}
{"id": "eqasc_validation_561", "prediction": "all x y z.((Abrasive(x) & WoodenObject(y) & Wooden(z)) -> Smooth(x,y,z))", "score": 0}
{"id": "eqasc_validation_561", "prediction": "all x y z.((Abrasive(x) & WoodenObject(y) & WoodenObject(z)) -> Smooth(x,y,z))", "score": 0}
{"id": "eqasc_validation_561", "prediction": "all x y z.((Abrasive(x) & WoodenObject(y) & Smooth(z)) -> UsedTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_561", "prediction": "all x.(Abrasive(x) -> SmoothWoodenObject(x))", "score": 0}
{"id": "eqasc_validation_561", "prediction": "all x.(Abrasives(x) -> SmoothWoodenObjects(x))", "score": 0}
{"id": "eqasc_validation_561", "prediction": "all x.(Abrasive(x) -> (UsedToSmoothWoodenObjects(x) & UsedToSmoothWoodenObjects(x)))", "score": 0}
{"id": "eqasc_validation_561", "prediction": "all x.(Abrasive(x) -> UsedToSmoothWooden(x))", "score": 0}
{"id": "eqasc_validation_561", "prediction": "all x y z.((Abrasive(x) & WoodenObject(y) & Surface(z)) -> Smooth(x,y,z))", "score": 0}
{"id": "eqasc_validation_561", "prediction": "all x.(Abrasives(x) -> UsedToSmoothWoodenObjects(x))", "score": 0}
{"id": "eqasc_validation_562", "prediction": "all x.(PavementSmoothness(x) -> LackOfRoughness(x))", "score": 0}
{"id": "eqasc_validation_562", "prediction": "all x.(PaveementSmoothness(x) -> LackOfRoughness(x))", "score": 0}
{"id": "eqasc_validation_562", "prediction": "all x.((PavementSmoothness(x) & LackOfRoughness(x)) -> LackOfRoughness(x))", "score": 0}
{"id": "eqasc_validation_562", "prediction": "all x.(PavementSmoothness(x) -> (LackOfRoughness(x)))", "score": 0}
{"id": "eqasc_validation_562", "prediction": "all x.((PavementSmoothness(x) & LackOfRoughness(x)) -> PavementSmoothness(x))", "score": 0}
{"id": "eqasc_validation_562", "prediction": "all x.(PavementSmoothness(x) -> -Roughness(x))", "score": 0}
{"id": "eqasc_validation_562", "prediction": "all x.((PavementSmoothness(x) & LackOfRoughness(x)) -> Smoothness(x))", "score": 0}
{"id": "eqasc_validation_562", "prediction": "all x y.((Pavement(x) & Smoothness(x)) -> LackOfRoughness(y))", "score": 0}
{"id": "eqasc_validation_562", "prediction": "all x y.((Pavement(x) & Smoothness(y)) -> LackOfRoughness(x,y))", "score": 0}
{"id": "eqasc_validation_562", "prediction": "all x.(PavementShapedness(x) -> LackOfRoughness(x))", "score": 0}
{"id": "eqasc_validation_562", "prediction": "all x.((PavementSmoothness(x) & LackOfRoughness(x)) -> Smooth(x))", "score": 0}
{"id": "eqasc_validation_563", "prediction": "all x.(Sandpaper(x) -> RemovesRoughness(x))", "score": 0}
{"id": "eqasc_validation_563", "prediction": "all x y.((Sandpaper(x) & Roughness(y)) -> Removes(x,y))", "score": 0}
{"id": "eqasc_validation_563", "prediction": "all x y z.((Sandpaper(x) & Roughness(y) & Sandpaper(z)) -> Removes(x,y,z))", "score": 0}
{"id": "eqasc_validation_563", "prediction": "all x y.((Sandpaper(x) & Roughness(y)) -> UsedToRemove(x,y))", "score": 0}
{"id": "eqasc_validation_563", "prediction": "all x.(Sandpaper(x) -> RemoveRoughness(x))", "score": 0}
{"id": "eqasc_validation_563", "prediction": "all x.(Sandpaper(x) -> (RemovesRoughness(x) & RemovesRoughness(x)))", "score": 0}
{"id": "eqasc_validation_563", "prediction": "all x y z.((Sandpaper(x) & Roughness(y) & Sandpaper(z)) -> Removes(x,z))", "score": 0}
{"id": "eqasc_validation_563", "prediction": "all x.(Sandpaper(x) -> UsedToRemoveRoughness(x))", "score": 0}
{"id": "eqasc_validation_563", "prediction": "all x y.((Sandpaper(x) & Roughness(y)) -> Remove(x,y))", "score": 0}
{"id": "eqasc_validation_563", "prediction": "all x y z.((Sandpaper(x) & Roughness(y) & Sandpaper(z)) -> UsedToRemove(x,y,z))", "score": 0}
{"id": "eqasc_validation_563", "prediction": "all x y z.((Sandpaper(x) & Roughness(y) & Sandpaper(z)) -> Remove(x,y,z))", "score": 0}
{"id": "eqasc_validation_563", "prediction": "all x y.((Sandpaper(x) & Roughness(y)) -> Removed(x,y))", "score": 0}
{"id": "eqasc_validation_563", "prediction": "all x y.((Sandpaper(x) & Roughness(y)) -> Remover(x,y))", "score": 0}
{"id": "eqasc_validation_563", "prediction": "all x y z.((Sandpaper(x) & Roughness(y) & Sandpaper(z)) -> Removes(x,y))", "score": 0}
{"id": "eqasc_validation_563", "prediction": "all x y z.((Sandpaper(x) & Roughness(y) & Sandpaper(z)) -> RemovesRoughness(x,y,z))", "score": 0}
{"id": "eqasc_validation_563", "prediction": "all x y z.((Sandpaper(x) & Roughness(y) & Sandpaper(z)) -> RemovesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_564", "prediction": "all x.((PicnicTable(x) & CasualLook(x)) -> UsesWooden(x))", "score": 0}
{"id": "eqasc_validation_564", "prediction": "all x.((CafefulLook(x) & UsesWoodenPicnicTable(x)) -> CasualLook(x))", "score": 0}
{"id": "eqasc_validation_564", "prediction": "all x.((CafefulLook(x) & UsesWoodenPicnicTable(x)) -> Casual(x))", "score": 0}
{"id": "eqasc_validation_564", "prediction": "all x.((WoodenPicnicTable(x) & CasualLook(x)) -> Uses(x,WoodenPicnicTable))", "score": 0}
{"id": "eqasc_validation_564", "prediction": "all x y.((CafefulLook(x) & WoodenPicnicTable(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_564", "prediction": "all x.((WoodenPicnicTable(x) & CasualLook(x)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_564", "prediction": "all x.((CasualLook(x) & UsesWoodenPicnicTable(x)) -> CasualLook(x))", "score": 0}
{"id": "eqasc_validation_564", "prediction": "all x.((CasualLook(x) & UsesWoodenPicnicTable(x)) -> Casual(x))", "score": 0}
{"id": "eqasc_validation_564", "prediction": "all x.((CafefulLook(x) & WoodenPicnicTable(x)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_564", "prediction": "all x.((CafefulLook(x) & UsesWoodenPicnicTable(x)) -> UsesWoodenPicnicTable(x))", "score": 0}
{"id": "eqasc_validation_564", "prediction": "all x.((ColorfulLook(x) & UsesWoodenPicnicTable(x)) -> CasualLook(x))", "score": 0}
{"id": "eqasc_validation_564", "prediction": "all x y.((CasualLook(x) & WoodenPicnicTable(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_564", "prediction": "all x.(CasualLook(x) -> UsesWoodenPicnicTable(x))", "score": 0}
{"id": "eqasc_validation_564", "prediction": "all x.(CafefulLook(x) -> UsesWoodenPicnicTable(x))", "score": 0}
{"id": "eqasc_validation_564", "prediction": "all x.((ColorfulLook(x) & UsesWoodenPicnicTable(x)) -> Casual(x))", "score": 0}
{"id": "eqasc_validation_564", "prediction": "all x.((WoodenPicnicTable(x) & CasualLook(x)) -> Uses(x,w))", "score": 0}
{"id": "eqasc_validation_565", "prediction": "all x.(Sandpaper(x) -> SmoothTables(x))", "score": 0}
{"id": "eqasc_validation_565", "prediction": "all x y.((Sandpaper(x) & Table(y)) -> Smooth(x,y))", "score": 0}
{"id": "eqasc_validation_565", "prediction": "all x.(Sandpaper(x) -> CanBeUsedToSmoothTables(x))", "score": 0}
{"id": "eqasc_validation_565", "prediction": "all x.(Sandpaper(x) -> SmoothTable(x))", "score": 0}
{"id": "eqasc_validation_565", "prediction": "all x y z.((Sandpaper(x) & Table(y) & Table(z)) -> Smooth(x,y,z))", "score": 0}
{"id": "eqasc_validation_565", "prediction": "all x y.((Sandpaper(x) & Table(y)) -> Smooths(x,y))", "score": 0}
{"id": "eqasc_validation_565", "prediction": "all x y.((Sandpaper(x) & Table(y)) -> CanBeUsedToSmooth(x,y))", "score": 0}
{"id": "eqasc_validation_565", "prediction": "all x y.((Sandpaper(x) & Table(y)) -> Smoothed(x,y))", "score": 0}
{"id": "eqasc_validation_565", "prediction": "all x y.((Sandpaper(x) & Table(y)) -> Smoothes(x,y))", "score": 0}
{"id": "eqasc_validation_565", "prediction": "all x.(Sandpaper(x) -> SmoothesTables(x))", "score": 0}
{"id": "eqasc_validation_565", "prediction": "all x.(Sandpaper(x) -> SmoothsTables(x))", "score": 0}
{"id": "eqasc_validation_565", "prediction": "all x y.((Sandpaper(x) & Table(y)) -> Smoothing(x,y))", "score": 0}
{"id": "eqasc_validation_565", "prediction": "all x.(Sandpaper(x) -> Smoothtable(x))", "score": 0}
{"id": "eqasc_validation_565", "prediction": "all x y z.((Sandpaper(x) & Table(y) & Table(z)) -> Smooths(x,y,z))", "score": 0}
{"id": "eqasc_validation_565", "prediction": "all x y z.((Sandpaper(x) & Table(y) & Table(z)) -> Smoothed(x,y,z))", "score": 0}
{"id": "eqasc_validation_565", "prediction": "all x.((Sandpaper(x) & SmoothTables(x)) -> CanBeUsedTo(x))", "score": 0}
{"id": "eqasc_validation_566", "prediction": "all x.(RemovePaint(x) -> UseSandpaper(x))", "score": 0}
{"id": "eqasc_validation_566", "prediction": "all x.((Paint(x) & Sandpaper(x)) -> Removes(x))", "score": 0}
{"id": "eqasc_validation_566", "prediction": "all x.((Paint(x) & Sandpaper(x)) -> Remove(x))", "score": 0}
{"id": "eqasc_validation_566", "prediction": "all x.((Sandpaper(x) & RemovePaint(x)) -> Uses(x))", "score": 0}
{"id": "eqasc_validation_566", "prediction": "all x.((Paint(x) & Sandpaper(x)) -> Removes(x,y))", "score": 0}
{"id": "eqasc_validation_566", "prediction": "all x y.((Sandpaper(x) & Paint(y)) -> Removes(x,y))", "score": 0}
{"id": "eqasc_validation_566", "prediction": "all x.((Sandpaper(x) & RemovesPaint(x)) -> Uses(x))", "score": 0}
{"id": "eqasc_validation_566", "prediction": "all x.((Sandpaper(x) & RemovePaint(x)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_566", "prediction": "all x.((Sandpaper(x) & RemovePaint(x)) -> Uses(x,sandpaper))", "score": 0}
{"id": "eqasc_validation_566", "prediction": "all x y.((Paint(x) & Sandpaper(y)) -> Removes(x,y))", "score": 0}
{"id": "eqasc_validation_566", "prediction": "all x.((Sandpaper(x) & RemovePaint(x)) -> Uses(x,Sandpaper))", "score": 0}
{"id": "eqasc_validation_566", "prediction": "all x.((Paint(x) & Sandpaper(x)) -> Removes(x,Paint))", "score": 0}
{"id": "eqasc_validation_566", "prediction": "all x y.((Sandpaper(x) & Paint(y)) -> Remove(x,y))", "score": 0}
{"id": "eqasc_validation_566", "prediction": "all x.((Sandpaper(x) & RemovePaint(x)) -> Use(x))", "score": 0}
{"id": "eqasc_validation_566", "prediction": "all x.((Sandpaper(x) & RemovesPaint(x)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_566", "prediction": "all x y.((Paint(x) & Sandpaper(y)) -> Remove(x,y))", "score": 0}
{"id": "eqasc_validation_567", "prediction": "all x.(Sandpaper(x) -> RemovesPaint(x))", "score": 0}
{"id": "eqasc_validation_567", "prediction": "all x y.((Sandpaper(x) & Paint(y)) -> Removes(x,y))", "score": 0}
{"id": "eqasc_validation_567", "prediction": "all x y z.((Sandpaper(x) & Paint(y) & Paint(z)) -> Removes(x,y,z))", "score": 0}
{"id": "eqasc_validation_567", "prediction": "all x y.((Sandpaper(x) & Paint(y) & Removes(x,y)) -> Removes(x,y))", "score": 0}
{"id": "eqasc_validation_567", "prediction": "all x y z.((Sandpaper(x) & Paint(y) & Paint(z)) -> Removes(x,y))", "score": 0}
{"id": "eqasc_validation_567", "prediction": "all x y.((Sandpaper(x) & Paint(y)) -> RemovesPaint(x,y))", "score": 0}
{"id": "eqasc_validation_567", "prediction": "all x.((Sandpaper(x) & RemovesPaint(x)) -> RemovesPaint(x))", "score": 0}
{"id": "eqasc_validation_567", "prediction": "all x y z.((Sandpaper(x) & Paint(y) & Sandpaper(z)) -> Removes(x,y,z))", "score": 0}
{"id": "eqasc_validation_567", "prediction": "all x y z.((Sandpaper(x) & Paint(y) & Paint(z) & Removes(x,y)) -> Removes(x,z))", "score": 0}
{"id": "eqasc_validation_567", "prediction": "all x.((Sandpaper(x) & Paint(y)) -> Removes(x,y))", "score": 0}
{"id": "eqasc_validation_567", "prediction": "all x y.((Sandpaper(x) & Paint(y) & Removes(x,y)) -> SandpaperRemoves(x,y))", "score": 0}
{"id": "eqasc_validation_567", "prediction": "all x y z.((Sandpaper(x) & Paint(y) & Paint(z) & Removes(x,y,z)) -> Removes(x,y))", "score": 0}
{"id": "eqasc_validation_567", "prediction": "all x y z.((Sandpaper(x) & Paint(y) & Paint(z) & Removes(x,y,z)) -> Removes(x,y,z))", "score": 0}
{"id": "eqasc_validation_567", "prediction": "all x y z.((Sandpaper(x) & Paint(y) & Paint(z)) -> RemovesPaint(x,y,z))", "score": 0}
{"id": "eqasc_validation_567", "prediction": "all x y z.((Sandpaper(x) & Paint(y) & Paint(z) & Removes(x,y,z)) -> SandpaperRemoves(x,y))", "score": 0}
{"id": "eqasc_validation_567", "prediction": "all x y z.((Sandpaper(x) & Paint(y) & Paint(z) & Removes(x,y)) -> SandpaperRemoves(x,z))", "score": 0}
{"id": "eqasc_validation_568", "prediction": "all x.((Object(x) & WoodenTable(x)) -> MadeUpOfMolecules(x))", "score": 0}
{"id": "eqasc_validation_568", "prediction": "all x.((Object(x) & WoodenTable(x)) -> (MadeUpOfMolecules(x) & VibrateToCreateMass(x)))", "score": 0}
{"id": "eqasc_validation_568", "prediction": "all x.((Object(x) & EvenWoodenTable(x)) -> MadeUpOfMolecules(x))", "score": 0}
{"id": "eqasc_validation_568", "prediction": "all x y.((Object(x) & WoodenTable(y)) -> (MadeUpOfMolecules(x,y) & VibrateToCreateMass(x,y)))", "score": 0}
{"id": "eqasc_validation_568", "prediction": "all x.((Object(x) & WoodenTable(x)) -> (MadeOfMolecules(x) & VibrateToCreateMass(x)))", "score": 0}
{"id": "eqasc_validation_568", "prediction": "all x y.((Object(x) & WoodenTable(y)) -> (MadeUpOfMolecules(x) & VibrateToCreateMass(x,y)))", "score": 0}
{"id": "eqasc_validation_568", "prediction": "all x y.((Object(x) & WoodenTable(y)) -> (MadeOfMolecules(x,y) & VibrateToCreateMass(x,y)))", "score": 0}
{"id": "eqasc_validation_568", "prediction": "all x.(Object(x) -> (MadeUpOfMolecules(x) & VibrateToCreateMass(x)))", "score": 0}
{"id": "eqasc_validation_568", "prediction": "all x y.((Object(x) & WoodenTable(y)) -> MadeUpOfMolecules(x,y))", "score": 0}
{"id": "eqasc_validation_568", "prediction": "all x.((Object(x) & WoodenTable(x)) -> (MadeUpOfMolecules(x) & Vibrate(x) & CreateMass(x)))", "score": 0}
{"id": "eqasc_validation_568", "prediction": "all x.((Object(x) & WoodenTable(x)) -> (MadeUpOfMolecules(x) & VibratesToCreateMass(x)))", "score": 0}
{"id": "eqasc_validation_568", "prediction": "all x y.((Object(x) & WoodenTable(y)) -> (MadeUpOfMolecules(x,y) & VibratesToCreateMass(x,y)))", "score": 0}
{"id": "eqasc_validation_568", "prediction": "all x.((Object(x) & WoodenTable(x)) -> (MadeUpOfMoleculars(x) & VibrateToCreateMass(x)))", "score": 0}
{"id": "eqasc_validation_568", "prediction": "all x.((Object(x) & WoodenTable(x)) -> (MadeUpOfMolecules(x) & Vibrates(x) & CreatesMass(x)))", "score": 0}
{"id": "eqasc_validation_568", "prediction": "all x y.((Object(x) & WoodenTable(y)) -> (MadeOfMolecules(x) & VibrateToCreateMass(x,y)))", "score": 0}
{"id": "eqasc_validation_568", "prediction": "all x.((Object(x) & WoodenTable(x)) -> MadeUpOfMoleculesVibratingToCreateMass(x))", "score": 0}
{"id": "eqasc_validation_569", "prediction": "all x y.((SandPaper(x) & Table(y)) -> Smooths(x,y))", "score": 0}
{"id": "eqasc_validation_569", "prediction": "all x y.((SandPaper(x) & Table(y)) -> Smoothed(x,y))", "score": 0}
{"id": "eqasc_validation_569", "prediction": "all x y z.((SandPaper(x) & Table(y) & Table(z)) -> Smoothed(x,y,z))", "score": 0}
{"id": "eqasc_validation_569", "prediction": "all x y z.((SandPaper(x) & Table(y) & Table(z)) -> Smooths(x,y,z))", "score": 0}
{"id": "eqasc_validation_569", "prediction": "all x y.((SandPaper(x) & Table(y)) -> Smoothes(x,y))", "score": 0}
{"id": "eqasc_validation_569", "prediction": "all x y z.((SandPaper(x) & Table(y) & Table(z)) -> Smoothes(x,y,z))", "score": 0}
{"id": "eqasc_validation_569", "prediction": "all x y.((SandPaper(x) & Table(y)) -> Smooth(x,y))", "score": 0}
{"id": "eqasc_validation_569", "prediction": "all x y z.((SandPaper(x) & Table(y) & Table(z)) -> Smooth(x,y,z))", "score": 0}
{"id": "eqasc_validation_569", "prediction": "all x y z.((SandPaper(x) & Table(y) & Table(z)) -> SmoothedWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_569", "prediction": "all x y z.((SandPaper(x) & Table(y) & Table(z)) -> SmoothedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_569", "prediction": "all x y z.((SandPaper(x) & Table(y) & Surface(z)) -> Smooths(x,y,z))", "score": 0}
{"id": "eqasc_validation_569", "prediction": "all x y.((SandPaper(x) & Table(y)) -> SmoothedWith(x,y))", "score": 0}
{"id": "eqasc_validation_569", "prediction": "all x y z.((SandPaper(x) & Table(y) & Surface(z)) -> Smoothed(x,y,z))", "score": 0}
{"id": "eqasc_validation_569", "prediction": "all x y z.((SandPaper(x) & Table(y) & Table(z)) -> SmoothsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_569", "prediction": "all x y z.((SandPaper(x) & Table(y) & Surface(z)) -> Smoothes(x,y,z))", "score": 0}
{"id": "eqasc_validation_569", "prediction": "all x y.((SandPaper(x) & Table(y)) -> SmoothedBy(x,y))", "score": 0}
{"id": "eqasc_validation_570", "prediction": "all x y.((ScrapWood(x) & WoodenBin(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_570", "prediction": "all x y.((ScrapWood(x) & WoodenBin(y)) -> CanBeUsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_570", "prediction": "all x y.((ScrapWood(x) & WoodenBen(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_570", "prediction": "all x.(ScrapWood(x) -> UsedForWoodenBins(x))", "score": 0}
{"id": "eqasc_validation_570", "prediction": "all x y.((ScrapWood(x) & WoodenBen(y)) -> CanBeUsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_570", "prediction": "all x y.((ScrapWood(x) & CheapWoodenBin(y)) -> CanBeUsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_570", "prediction": "all x y.((ScrapWood(x) & CheapWoodenBin(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_570", "prediction": "all x.(ScrapWood(x) -> UsedForBuiltWooden(x))", "score": 0}
{"id": "eqasc_validation_570", "prediction": "all x.(ScrapWood(x) -> UsedForBenches(x))", "score": 0}
{"id": "eqasc_validation_570", "prediction": "all x.(ScrapWood(x) -> UsedForCheapWoodenBins(x))", "score": 0}
{"id": "eqasc_validation_570", "prediction": "all x.(ScrapWood(x) -> CheapWoodenBins(x))", "score": 0}
{"id": "eqasc_validation_570", "prediction": "all x.(ScrapWood(x) -> UsedForBuiltWoodens(x))", "score": 0}
{"id": "eqasc_validation_570", "prediction": "all x.(ScrapWood(x) -> UsedForBuyWoodens(x))", "score": 0}
{"id": "eqasc_validation_570", "prediction": "all x.(ScrapWood(x) -> UsedForBuyWoodenBins(x))", "score": 0}
{"id": "eqasc_validation_570", "prediction": "all x.(ScrapWood(x) -> UsedForBins(x))", "score": 0}
{"id": "eqasc_validation_570", "prediction": "all x.((ScrapWood(x) & CheapWoodenBin(x)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_571", "prediction": "all x.(Sandpaper(x) -> (UsedToSmoothObjects(x) & MadeOfWood(x)))", "score": 0}
{"id": "eqasc_validation_571", "prediction": "all x.(Sandpaper(x) -> (SmoothObjects(x) & MadeOfWood(x)))", "score": 0}
{"id": "eqasc_validation_571", "prediction": "all x y.((Sandpaper(x) & Wood(y)) -> SmoothObjects(x,y))", "score": 0}
{"id": "eqasc_validation_571", "prediction": "all x y.((Sandpaper(x) & Wood(y)) -> Smooth(x,y))", "score": 0}
{"id": "eqasc_validation_571", "prediction": "all x y.((Sandpaper(x) & Wood(y)) -> SmoothObject(x,y))", "score": 0}
{"id": "eqasc_validation_571", "prediction": "all x.(Sandpaper(x) -> SmoothObjects(x))", "score": 0}
{"id": "eqasc_validation_571", "prediction": "all x.(Sandpaper(x) -> SmoothObjectsMadeOfWood(x))", "score": 0}
{"id": "eqasc_validation_571", "prediction": "all x.(Sandpaper(x) -> UsedToSmoothObjects(x))", "score": 0}
{"id": "eqasc_validation_571", "prediction": "all x.(Sandpaper(x) -> SmoothsWood(x))", "score": 0}
{"id": "eqasc_validation_571", "prediction": "all x y.((Sandpaper(x) & Wood(y)) -> UsedToSmoothObjects(x,y))", "score": 0}
{"id": "eqasc_validation_571", "prediction": "all x y.((Sandpaper(x) & Wood(y)) -> SmoothsObjects(x,y))", "score": 0}
{"id": "eqasc_validation_571", "prediction": "all x y.((Sandpaper(x) & SmoothObject(y)) -> MadeOfWood(x,y))", "score": 0}
{"id": "eqasc_validation_571", "prediction": "all x y.((Sandpaper(x) & Object(y)) -> Smooth(x,y))", "score": 0}
{"id": "eqasc_validation_571", "prediction": "all x y.((Sandpaper(x) & Wood(y)) -> SmoothesObjects(x,y))", "score": 0}
{"id": "eqasc_validation_571", "prediction": "all x y.((Sandpaper(x) & SmoothObject(y)) -> MadeOfWood(x))", "score": 0}
{"id": "eqasc_validation_571", "prediction": "all x.(Sandpaper(x) -> SmoothesWood(x))", "score": 0}
{"id": "eqasc_validation_572", "prediction": "all x.(DrumStick(x) -> WoodenCane(x))", "score": 0}
{"id": "eqasc_validation_572", "prediction": "all x y.((DrumStick(x) & WoodenCane(y)) -> MadeOf(x,y))", "score": 0}
{"id": "eqasc_validation_572", "prediction": "all x.(drumstick(x) -> WoodenCane(x))", "score": 0}
{"id": "eqasc_validation_572", "prediction": "all x.(DrumStick(x) -> (WoodenCane(x) & -WoodenCane(x)))", "score": 0}
{"id": "eqasc_validation_572", "prediction": "all x y.((DrumStick(x) & WoodenCane(y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_572", "prediction": "all x.(DrumStick(x) -> (WoodenCane(x) & MadeOf(x,y)))", "score": 0}
{"id": "eqasc_validation_572", "prediction": "all x.(DrumStick(x) -> (OfWoodenCane(x)))", "score": 0}
{"id": "eqasc_validation_572", "prediction": "all x y.((DrumStick(x) & WoodenCane(y)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_572", "prediction": "all x.(DrumStick(x) -> (WoodenCane(x) | WoodenCane(x)))", "score": 0}
{"id": "eqasc_validation_572", "prediction": "all x y.((DrumStick(x) & WoodenCane(y)) -> Material(x,y))", "score": 0}
{"id": "eqasc_validation_572", "prediction": "all x.(DrumStick(x) -> -WoodenCane(x))", "score": 0}
{"id": "eqasc_validation_572", "prediction": "all x.(DrumStick(x) -> OfWoodenCane(x))", "score": 0}
{"id": "eqasc_validation_572", "prediction": "all x.(DrumString(x) -> WoodenCane(x))", "score": 0}
{"id": "eqasc_validation_573", "prediction": "all x y.((Sandpaper(x) & DrumStick(y)) -> Smooth(x,y))", "score": 0}
{"id": "eqasc_validation_573", "prediction": "all x.(Sandpaper(x) -> SmoothDrumSticks(x))", "score": 0}
{"id": "eqasc_validation_573", "prediction": "all x y.((Sandpaper(x) & DrumStick(y)) -> SmoothDrumSticks(x,y))", "score": 0}
{"id": "eqasc_validation_573", "prediction": "all x y.((Sandpaper(x) & DrumStick(y)) -> Smooths(x,y))", "score": 0}
{"id": "eqasc_validation_573", "prediction": "all x y z.((Sandpaper(x) & DrumStick(y) & DrumStick(z)) -> Smooth(x,y,z))", "score": 0}
{"id": "eqasc_validation_573", "prediction": "all x y.((Sandpaper(x) & DrumStick(y)) -> SmoothSmooth(x,y))", "score": 0}
{"id": "eqasc_validation_573", "prediction": "all x y z.((Sandpaper(x) & DrumStick(y) & Sandpaper(z)) -> Smooth(x,y,z))", "score": 0}
{"id": "eqasc_validation_573", "prediction": "all x y z.((Sandpaper(x) & DrumStick(y) & Sandpaper(z)) -> Smooths(x,y,z))", "score": 0}
{"id": "eqasc_validation_573", "prediction": "all x y z.((Sandpaper(x) & DrumStick(y) & Sandpaper(z)) -> SmoothDrumSticks(x,y,z))", "score": 0}
{"id": "eqasc_validation_573", "prediction": "all x.(Sandpaper(x) -> SmoothsDrumSticks(x))", "score": 0}
{"id": "eqasc_validation_573", "prediction": "all x.((Sandpaper(x) & SmoothDrumSticks(x)) -> SandpaperUsedToSmoothDrumSticks(x))", "score": 0}
{"id": "eqasc_validation_573", "prediction": "all x.((Sandpaper(x) & SmoothDrumSticks(x)) -> Sandpaper(x))", "score": 0}
{"id": "eqasc_validation_573", "prediction": "all x y.((Sandpaper(x) & DrumStick(y)) -> Smoothed(x,y))", "score": 0}
{"id": "eqasc_validation_573", "prediction": "all x y z.((Sandpaper(x) & DrumStick(y) & Sandpaper(z)) -> SmoothSmooth(x,y,z))", "score": 0}
{"id": "eqasc_validation_573", "prediction": "all x y z.((Sandpaper(x) & DrumStick(y) & DrumStick(z)) -> Smooths(x,y,z))", "score": 0}
{"id": "eqasc_validation_573", "prediction": "all x y z.((Sandpaper(x) & DrumStick(y) & DrumStick(z)) -> SmoothSmooth(x,y,z))", "score": 0}
{"id": "eqasc_validation_574", "prediction": "all x.(CoarseGritSandpaper(x) -> WorksWell(x))", "score": 0}
{"id": "eqasc_validation_574", "prediction": "all x.((CoarseGritSandpaper(x) & WorksWell(x)) -> WorksWell(x))", "score": 0}
{"id": "eqasc_validation_574", "prediction": "all x y.((CoarseGritSandpaper(x) & Sandpaper(y)) -> WorksWell(x))", "score": 0}
{"id": "eqasc_validation_574", "prediction": "all x.((CoarseGrit(x) & Sandpaper(x)) -> WorksWell(x))", "score": 0}
{"id": "eqasc_validation_574", "prediction": "all x y.((CoarseGritSandpaper(x) & Sandpaper(y)) -> WorksWell(x,y))", "score": 0}
{"id": "eqasc_validation_574", "prediction": "all x.(CoarseGritSandPaper(x) -> WorksWell(x))", "score": 0}
{"id": "eqasc_validation_574", "prediction": "all x y z.((CoarseGritSandpaper(x) & Sandpaper(y) & Sandpaper(z)) -> WorksWell(x,y,z))", "score": 0}
{"id": "eqasc_validation_574", "prediction": "all x.((CoarseGritSandpaper(x) & WorksWell(x)) -> Sandpaper(x))", "score": 0}
{"id": "eqasc_validation_574", "prediction": "all x y z.((CoarseGritSandpaper(x) & Sandpaper(y) & Sandpaper(z)) -> WorksWell(x))", "score": 0}
{"id": "eqasc_validation_574", "prediction": "all x y.((CoarseGrit(x) & Sandpaper(y)) -> WorksWell(x,y))", "score": 0}
{"id": "eqasc_validation_574", "prediction": "all x y.((CoarseGrit(x) & Sandpaper(y)) -> WorksWell(x))", "score": 0}
{"id": "eqasc_validation_574", "prediction": "all x.((CoarseGritSandpaper(x) & WellWorks(x)) -> Works(x))", "score": 0}
{"id": "eqasc_validation_574", "prediction": "all x.((CoarseGritSandpaper(x) & WorksWell(x)) -> CoarseGritSandpaper(x))", "score": 0}
{"id": "eqasc_validation_574", "prediction": "all x.((CoarseGritSandPaper(x) & WorksWell(x)) -> WorksWell(x))", "score": 0}
{"id": "eqasc_validation_574", "prediction": "all x.((CoarseGritSandpaper(x) & WellWorks(x)) -> Sandpaper(x))", "score": 0}
{"id": "eqasc_validation_574", "prediction": "all x.((CoarseGritSandpaper(x) & WorksWell(x)) -> WorkedWell(x))", "score": 0}
{"id": "eqasc_validation_575", "prediction": "all x y.((Grain(x) & WoodenObject(y)) -> Smooth(x,y))", "score": 0}
{"id": "eqasc_validation_575", "prediction": "all x.(CoarseGrit(x) -> SmoothsWoodenObjects(x))", "score": 0}
{"id": "eqasc_validation_575", "prediction": "all x y.((CoarseGrit(x) & WoodenObject(y)) -> Smoothed(x,y))", "score": 0}
{"id": "eqasc_validation_575", "prediction": "all x y.((Grain(x) & WoodenObject(y)) -> Smoothed(x,y))", "score": 0}
{"id": "eqasc_validation_575", "prediction": "all x.(CoarseGrit(x) -> SmoothWoodenObjects(x))", "score": 0}
{"id": "eqasc_validation_575", "prediction": "all x y.((CoarseGrit(x) & WoodenObject(y)) -> Smooth(x,y))", "score": 0}
{"id": "eqasc_validation_575", "prediction": "all x y z.((CoarseGrit(x) & WoodenObject(y) & WoodenObject(z)) -> Smoothed(x,y,z))", "score": 0}
{"id": "eqasc_validation_575", "prediction": "all x y.((Grain(x) & WoodenObject(y)) -> UsedToSmooth(x,y))", "score": 0}
{"id": "eqasc_validation_575", "prediction": "all x y z.((CoarseGrit(x) & WoodenObject(y) & WoodenObject(z)) -> Smooth(x,y,z))", "score": 0}
{"id": "eqasc_validation_575", "prediction": "all x y.((Grain(x) & WoodenObject(y)) -> SmoothedWith(x,y))", "score": 0}
{"id": "eqasc_validation_575", "prediction": "all x.(CoarseGrit(x) -> UsedToSmoothWoodenObjects(x))", "score": 0}
{"id": "eqasc_validation_575", "prediction": "all x y.((CoarseGrit(x) & WoodenObject(y)) -> Smooths(x,y))", "score": 0}
{"id": "eqasc_validation_575", "prediction": "all x y z.((Grain(x) & WoodenObject(y) & WoodenObject(z)) -> Smooth(x,y,z))", "score": 0}
{"id": "eqasc_validation_575", "prediction": "all x y.((Grain(x) & WoodenObject(y)) -> Smooths(x,y))", "score": 0}
{"id": "eqasc_validation_575", "prediction": "all x y.((Grain(x) & WoodenObject(y)) -> SmoothWooden(x,y))", "score": 0}
{"id": "eqasc_validation_575", "prediction": "all x y z.((CoarseGrit(x) & WoodenObject(y) & WoodenObject(z)) -> SmoothedWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_576", "prediction": "all x y.((Child(x) & TinyWoodenLog(y)) -> (MakesLogCabins(x,y) & MakesStructures(x,y)))", "score": 0}
{"id": "eqasc_validation_576", "prediction": "all x y.((Child(x) & TinyWoodenLog(y)) -> MakesLogCabinsAndStructuresFrom(x,y))", "score": 0}
{"id": "eqasc_validation_576", "prediction": "all x y.((Child(x) & TinyWoodenLog(y)) -> (MakesLogCabins(x,y) & MakesStructuresFrom(x,y)))", "score": 0}
{"id": "eqasc_validation_576", "prediction": "all x y.((Child(x) & TinyWoodenLog(y)) -> (MakesLogCabins(x,y) | MakesStructures(x,y)))", "score": 0}
{"id": "eqasc_validation_576", "prediction": "all x y.((Child(x) & TinyWoodenLogs(y)) -> (MakesLogCabins(x,y) & MakesStructures(x,y)))", "score": 0}
{"id": "eqasc_validation_576", "prediction": "all x y.((Child(x) & TinyWoodenLog(y)) -> CanEasilyMakeLogCabinsAndStructuresFrom(x,y))", "score": 0}
{"id": "eqasc_validation_576", "prediction": "all x y.((Child(x) & TinyWoodenLog(y)) -> (EasilyMakesLogCabins(x,y) & MakesStructuresFrom(x,y)))", "score": 0}
{"id": "eqasc_validation_576", "prediction": "all x y.((Child(x) & TinyWoodenLog(y)) -> (EasilyMakesLogCabins(x,y) & MakesStructures(x,y)))", "score": 0}
{"id": "eqasc_validation_576", "prediction": "all x y.((Child(x) & TinyWoodenLog(y)) -> MakesLogCabinsAndStructures(x,y))", "score": 0}
{"id": "eqasc_validation_576", "prediction": "all x y.((Child(x) & TinyWoodenLogs(y)) -> MakesLogCabinsAndStructuresFrom(x,y))", "score": 0}
{"id": "eqasc_validation_576", "prediction": "all x y.((Child(x) & TinyWoodenLog(y)) -> (MakeLogCabins(x,y) & MakeStructures(x,y)))", "score": 0}
{"id": "eqasc_validation_576", "prediction": "all x y.((Child(x) & TinyWoodenLogs(y)) -> (MakesLogCabins(x,y) & MakesStructuresFrom(x,y)))", "score": 0}
{"id": "eqasc_validation_576", "prediction": "all x y z.((Child(x) & LogCabin(y) & WoodenLog(z)) -> (MakesFrom(x,y,z) & MakesFrom(x,y,z)))", "score": 0}
{"id": "eqasc_validation_576", "prediction": "all x y z.((Child(x) & LogCabin(y) & WoodenLog(z)) -> (EasilyMakesFrom(x,y,z) & From(x,y,z)))", "score": 0}
{"id": "eqasc_validation_577", "prediction": "all x.(Sandpaper(x) -> SmoothLogCabins(x))", "score": 0}
{"id": "eqasc_validation_577", "prediction": "all x y.((Sandpaper(x) & LogCabin(y)) -> Smooth(x,y))", "score": 0}
{"id": "eqasc_validation_577", "prediction": "all x y.((Sandpaper(x) & LogCabin(y)) -> Smoothed(x,y))", "score": 0}
{"id": "eqasc_validation_577", "prediction": "all x.(Sandpaper(x) -> SmoothsLogCabins(x))", "score": 0}
{"id": "eqasc_validation_577", "prediction": "all x y.((Sandpaper(x) & LogCabin(y)) -> Smooths(x,y))", "score": 0}
{"id": "eqasc_validation_577", "prediction": "all x y z.((Sandpaper(x) & LogCabin(y) & LogCabin(z)) -> Smooth(x,y,z))", "score": 0}
{"id": "eqasc_validation_577", "prediction": "all x y z.((Sandpaper(x) & LogCabin(y) & LogCabin(z)) -> Smoothed(x,y,z))", "score": 0}
{"id": "eqasc_validation_577", "prediction": "all x y.((Sandpaper(x) & LogCabin(y)) -> Smoothes(x,y))", "score": 0}
{"id": "eqasc_validation_577", "prediction": "all x y z.((Sandpaper(x) & LogCabin(y) & LogCabin(z)) -> Smooths(x,y,z))", "score": 0}
{"id": "eqasc_validation_577", "prediction": "all x y z.((Sandpaper(x) & LogCabin(y) & Log(z)) -> Smooth(x,y,z))", "score": 0}
{"id": "eqasc_validation_577", "prediction": "all x.(Sandpaper(x) -> SmoothLogBaths(x))", "score": 0}
{"id": "eqasc_validation_577", "prediction": "all x y z.((Sandpaper(x) & LogCabin(y) & LogCabin(z)) -> Smoothes(x,y,z))", "score": 0}
{"id": "eqasc_validation_577", "prediction": "all x y z.((Sandpaper(x) & LogCabin(y) & Log(z)) -> Smoothed(x,y,z))", "score": 0}
{"id": "eqasc_validation_577", "prediction": "all x y.((Sandpaper(x) & LogCabin(y) & Smooth(x,y)) -> UsedTo(x,y))", "score": 0}
{"id": "eqasc_validation_577", "prediction": "all x.((Sandpaper(x) & SmoothLogCabins(x)) -> Sandpaper(x))", "score": 0}
{"id": "eqasc_validation_577", "prediction": "all x y z.((Sandpaper(x) & LogCabin(y) & Log(z)) -> Smooths(x,y,z))", "score": 0}
{"id": "eqasc_validation_578", "prediction": "all x y.((WoodenObject(x) & Decoupage(y)) -> UsedIn(x,y))", "score": 0}
{"id": "eqasc_validation_578", "prediction": "all x.((WoodenObject(x) & Decoupage(x)) -> UsedIn(x,y))", "score": 0}
{"id": "eqasc_validation_578", "prediction": "all x.((Wooden(x) & Decoupage(x)) -> UsedIn(x,y))", "score": 0}
{"id": "eqasc_validation_578", "prediction": "all x y.((Wooden(x) & Decoupage(y)) -> UsedIn(x,y))", "score": 0}
{"id": "eqasc_validation_578", "prediction": "all x.((WoodenObject(x) & TraditionallyUsedInDecoupage(x)) -> UsedInDecoupage(x))", "score": 0}
{"id": "eqasc_validation_578", "prediction": "all x.((WoodenObject(x) & UsedInDecoupage(x)) -> Traditional(x))", "score": 0}
{"id": "eqasc_validation_578", "prediction": "all x y z.((WoodenObject(x) & Decoupage(y) & Traditional(z)) -> UsedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_578", "prediction": "all x.((WoodenObject(x) & TraditionalDecoupage(x)) -> UsedIn(x,y))", "score": 0}
{"id": "eqasc_validation_578", "prediction": "all x.((WoodenObject(x) & TraditionallyUsedInDecoupage(x)) -> Decoupage(x))", "score": 0}
{"id": "eqasc_validation_578", "prediction": "all x.((Wooden(x) & TraditionallyUsedInDecoupage(x)) -> UsedInDecoupage(x))", "score": 0}
{"id": "eqasc_validation_578", "prediction": "all x y.((WoodenObject(x) & Decoupage(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_578", "prediction": "all x.((WoodenObject(x) & Decoupage(x)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_578", "prediction": "all x.((WoodenObject(x) & Decoupage(x)) -> UsedIn(x))", "score": 0}
{"id": "eqasc_validation_578", "prediction": "all x.((Wooden(x) & TraditionalDecoupage(x)) -> UsedIn(x,y))", "score": 0}
{"id": "eqasc_validation_578", "prediction": "all x.((Wooden(x) & Decoupage(y)) -> UsedIn(x,y))", "score": 0}
{"id": "eqasc_validation_578", "prediction": "all x y z.((WoodenObject(x) & Decoupage(y) & Traditional(z)) -> UsedIn(x,y))", "score": 0}
{"id": "eqasc_validation_579", "prediction": "all x.(Sandpaper(x) -> SmoothDecoupage(x))", "score": 0}
{"id": "eqasc_validation_579", "prediction": "all x y.((Sandpaper(x) & Sandpaper(y)) -> SmoothDecoupage(x,y))", "score": 0}
{"id": "eqasc_validation_579", "prediction": "all x.((Sandpaper(x) & SmoothDecoupage(x)) -> UsedToDecoupage(x))", "score": 0}
{"id": "eqasc_validation_579", "prediction": "all x y.((Sandpaper(x) & SmoothDecoupage(y)) -> UsedToDecoupage(x,y))", "score": 0}
{"id": "eqasc_validation_579", "prediction": "all x y z.((Sandpaper(x) & Sandpaper(y) & SmoothDecoupage(z)) -> UsedToDecoupage(x,y,z))", "score": 0}
{"id": "eqasc_validation_579", "prediction": "all x.((Sandpaper(x) & SmoothDecoupage(x)) -> SandpaperUsedToDecoupage(x))", "score": 0}
{"id": "eqasc_validation_579", "prediction": "all x y z.((Sandpaper(x) & SmoothDecoupage(y) & Sandpaper(z)) -> UsedToDecoupage(x,y,z))", "score": 0}
{"id": "eqasc_validation_579", "prediction": "all x.((Sandpaper(x) & SmoothDecoupage(x)) -> Sandpaper(x))", "score": 0}
{"id": "eqasc_validation_579", "prediction": "all x y.((Sandpaper(x) & SmoothDecoupage(y)) -> UsedTo(x,y))", "score": 0}
{"id": "eqasc_validation_579", "prediction": "all x y z.((Sandpaper(x) & Sandpaper(y) & Decoupage(z)) -> SmoothDecoupage(x,y,z))", "score": 0}
{"id": "eqasc_validation_579", "prediction": "all x y.((Sandpaper(x) & Sandpaper(y)) -> SmoothDecoupage(x))", "score": 0}
{"id": "eqasc_validation_579", "prediction": "all x y z.((Sandpaper(x) & Sandpaper(y) & SmoothDecoupage(z)) -> UsedTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_579", "prediction": "all x y.((Sandpaper(x) & Decoupage(y)) -> Smooth(x,y))", "score": 0}
{"id": "eqasc_validation_579", "prediction": "all x y.((Sandpaper(x) & Decoupage(y)) -> SmoothDecoupage(x,y))", "score": 0}
{"id": "eqasc_validation_579", "prediction": "all x y.((Sandpaper(x) & Sand(y)) -> SmoothDecoupage(x,y))", "score": 0}
{"id": "eqasc_validation_579", "prediction": "all x y z.((Sandpaper(x) & SmoothDecoupage(y) & Sandpaper(z)) -> UsedTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_580", "prediction": "all x y.((Spacecraft(x) & Spacecraft(y)) -> PropulsionUsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_580", "prediction": "all x y z.((Spacecraft(x) & Propulsion(y) & Spacecraft(z)) -> UsedForFlying(y,z))", "score": 1}
{"id": "eqasc_validation_580", "prediction": "all x y.((Spacecraft(x) & Spacecraft(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_580", "prediction": "all x y.((Spacecraft(x) & Spacecraft(y)) -> UsesForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_580", "prediction": "all x y z.((Spacecraft(x) & Spacecraft(y) & Propulsion(z)) -> UsedForFlying(z,x))", "score": 1}
{"id": "eqasc_validation_580", "prediction": "all x y.((Spacecraft(x) & Spacecraft(y)) -> UsesPropulsionForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_580", "prediction": "all x y z.((Spacecraft(x) & Spacecraft(y) & Propulsion(z)) -> UsedForFlying(z))", "score": 0}
{"id": "eqasc_validation_580", "prediction": "all x y z.((Spacecraft(x) & Spacecraft(y) & Propulsion(z)) -> UsedForFlyingBy(x,z))", "score": 0}
{"id": "eqasc_validation_580", "prediction": "all x y z.((Spacecraft(x) & Spacecraft(y) & Propulsion(z)) -> UsedForFlying(x,z))", "score": 0}
{"id": "eqasc_validation_580", "prediction": "all x y z.((Spacecraft(x) & Propulsion(y) & Spacecraft(z)) -> UsedForFlyingBy(y,z))", "score": 0}
{"id": "eqasc_validation_580", "prediction": "all x y z.((Spacecraft(x) & Spacecraft(y) & Propulsion(z)) -> UsedForFlying(z,y))", "score": 1}
{"id": "eqasc_validation_580", "prediction": "all x y.((Spacecraft(x) & Spacecraft(y)) -> (UsedForFlying(x,y) & Spacecraft(y)))", "score": 0}
{"id": "eqasc_validation_580", "prediction": "all x y z.((Spacecraft(x) & Spacecraft(y) & Propulsion(z)) -> UsedForFlying(x,y,z))", "score": 0}
{"id": "eqasc_validation_580", "prediction": "all x y z.((Spacecraft(x) & Spacecraft(y) & Propulsion(z)) -> UsedForFlyingBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_580", "prediction": "all x y z.((Spacecraft(x) & Spacecraft(y) & Propulsion(z)) -> UsedForFlyingBy(z,x))", "score": 0}
{"id": "eqasc_validation_580", "prediction": "all x y z.((Spacecraft(x) & Spacecraft(y) & Propulsion(z)) -> UsedForFlyingBy(z,y))", "score": 0}
{"id": "eqasc_validation_581", "prediction": "all x.(Propulsion(x) -> (PushForward(x) | DriveForward(x)))", "score": 0}
{"id": "eqasc_validation_581", "prediction": "all x y.((Propulsion(x) & Object(y)) -> (PushForward(x,y) | DriveForward(x,y)))", "score": 0}
{"id": "eqasc_validation_581", "prediction": "all x y.((Propulsion(x) & Object(y)) -> (PutsForward(x,y) | DrivesForward(x,y)))", "score": 0}
{"id": "eqasc_validation_581", "prediction": "all x y.((Propulsion(x) & (Object(y) | Object(y))) -> (PushForward(x,y) | DriveForward(x,y)))", "score": 0}
{"id": "eqasc_validation_581", "prediction": "all x.(Propulsion(x) -> (PutsForward(x) | DrivesForward(x)))", "score": 0}
{"id": "eqasc_validation_581", "prediction": "all x y.((Propulsion(x) & (Object(y) | Object(y))) -> (PutsForward(x,y) | DrivesForward(x,y)))", "score": 0}
{"id": "eqasc_validation_581", "prediction": "all x y.((Propulsion(x) & Object(y)) -> (PressForward(x,y) | DriveForward(x,y)))", "score": 0}
{"id": "eqasc_validation_581", "prediction": "all x y.((Propulsion(x) & Object(y)) -> (PushForward(x) | DriveForward(x)))", "score": 0}
{"id": "eqasc_validation_581", "prediction": "all x.(Propulsion(x) -> (Putforward(x) | DriveForward(x)))", "score": 0}
{"id": "eqasc_validation_581", "prediction": "all x.(Propulsion(x) -> (PressForward(x) | DriveForward(x)))", "score": 0}
{"id": "eqasc_validation_581", "prediction": "all x y.((Propulsion(x) & (Object(y) | Object(y))) -> (PushesForward(x,y) | DrivesForward(x,y)))", "score": 0}
{"id": "eqasc_validation_581", "prediction": "all x y.((Propulsion(x) & (Object(y) | Object(y))) -> (PressForward(x,y) | DriveForward(x,y)))", "score": 0}
{"id": "eqasc_validation_581", "prediction": "all x y.((Propulsion(x) & Object(y)) -> (Putforward(x,y) | DriveForward(x,y)))", "score": 0}
{"id": "eqasc_validation_581", "prediction": "all x y z.((Propulsion(x) & (Object(y) | Object(z))) -> (PutsForward(x,y) | DrivesForward(x,z)))", "score": 0}
{"id": "eqasc_validation_581", "prediction": "all x y z.((Propulsion(x) & (Object(y) | Object(z))) -> (PushForward(x,y) | DriveForward(x,z))))", "score": -1}
{"id": "eqasc_validation_581", "prediction": "all x y.((Propulsion(x) & (Object(y) | Object(y))) -> (PushForward(x) | DriveForward(x)))", "score": 0}
{"id": "eqasc_validation_582", "prediction": "all x y.((PushForward(x) & Spacecraft(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_582", "prediction": "all x y z.((PushForward(x) & Spacecraft(y) & Spacecraft(z)) -> UsedForFlying(x,y,z))", "score": 0}
{"id": "eqasc_validation_582", "prediction": "all x y.((Spacecraft(x) & PushForward(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_582", "prediction": "all x y.((PushForward(x) & Spacecraft(y)) -> UsedForFlyingBy(x,y))", "score": 0}
{"id": "eqasc_validation_582", "prediction": "all x y.((Spacecraft(x) & PushForward(y)) -> UsedForFlying(y,x))", "score": 0}
{"id": "eqasc_validation_582", "prediction": "all x.(PushForward(x) -> UsedForFlyingBySpacecraft(x))", "score": 0}
{"id": "eqasc_validation_582", "prediction": "all x y.((Spacecraft(x) & PushForward(x)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_582", "prediction": "all x y z.((PushForward(x) & Spacecraft(y) & Spacecraft(z)) -> UsedForFlyingBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_582", "prediction": "all x y z.((Spacecraft(x) & PushForward(y) & Spacecraft(z)) -> UsedForFlying(y,z))", "score": 0}
{"id": "eqasc_validation_582", "prediction": "all x y z.((PutForward(x) & Spacecraft(y) & Spacecraft(z)) -> UsedForFlying(x,y,z))", "score": 0}
{"id": "eqasc_validation_582", "prediction": "all x y.((Spacecraft(x) & PushForward(x) & Spacecraft(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_582", "prediction": "all x.(PushForward(x) -> UsedForFlying(x))", "score": 0}
{"id": "eqasc_validation_582", "prediction": "all x y z.((PushForward(x) & Spacecraft(y) & Spacecraft(z)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_582", "prediction": "all x y.((Spacecraft(x) & Spacecraft(y)) -> PushForward(x,y))", "score": 0}
{"id": "eqasc_validation_582", "prediction": "all x y.((Spacecraft(x) & PushForward(y)) -> UsedForFlyingBy(x,y))", "score": 0}
{"id": "eqasc_validation_582", "prediction": "all x y.((PutForward(x) & Spacecraft(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_583", "prediction": "all x.(EarthOrbitingSpacecraft(x) -> Satellite(x))", "score": 0}
{"id": "eqasc_validation_583", "prediction": "all x.((EarthOrbitingSpacecraft(x) & Satellite(x)) -> Orbiting(x))", "score": 0}
{"id": "eqasc_validation_583", "prediction": "all x.((EarthOrbitingSpacecraft(x) & Spacecraft(x)) -> Satellite(x))", "score": 0}
{"id": "eqasc_validation_583", "prediction": "all x.((EarthOrbitingSpacecraft(x) & Satellite(x)) -> Named(x))", "score": 0}
{"id": "eqasc_validation_583", "prediction": "all x.((EarthOrbitingSpacecraft(x) & Satellite(x)) -> Orbits(x))", "score": 0}
{"id": "eqasc_validation_583", "prediction": "all x.((EarthOrbitingSpacecraft(x) & Satellite(x)) -> Calls(x))", "score": 0}
{"id": "eqasc_validation_583", "prediction": "all x.((EarthOrbitingSpacecraft(x) & Satellite(x)) -> Calls(x,y))", "score": 0}
{"id": "eqasc_validation_583", "prediction": "all x.((EarthOrbiting(x) & Spacecraft(x)) -> Satellite(x))", "score": 0}
{"id": "eqasc_validation_583", "prediction": "all x.((EarthOrbitingSpacecraft(x) & Satellite(x)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_583", "prediction": "all x.((EarthOrbitingSpacecraft(x) & Satellite(x)) -> KnownAs(x))", "score": 0}
{"id": "eqasc_validation_583", "prediction": "all x.((EarthOrbitingSpacecraft(x) & Satellite(x)) -> Satellite(x))", "score": 0}
{"id": "eqasc_validation_583", "prediction": "all x.((EarthOrbitingSpacecraft(x) & Satellite(x)) -> HasSatellite(x))", "score": 0}
{"id": "eqasc_validation_583", "prediction": "all x.((EarthOrbitingSpacecraft(x) & Satellite(x)) -> Operates(x))", "score": 0}
{"id": "eqasc_validation_583", "prediction": "all x.((EarthOrbitingSpacecraft(x) & Satellite(x)) -> Is(x,i))", "score": 0}
{"id": "eqasc_validation_583", "prediction": "all x.((EarthOrbitingSpacecraft(x) & Satellite(x)) -> KnownAs(x,y))", "score": 0}
{"id": "eqasc_validation_583", "prediction": "all x.((EarthOrbitingSpacecraft(x) & Satellite(x)) -> OrbitingSpacecraft(x))", "score": 0}
{"id": "eqasc_validation_584", "prediction": "all x.(Propulsion(x) -> UsedForFlyingSatellites(x))", "score": 0}
{"id": "eqasc_validation_584", "prediction": "all x y.((Propulsion(x) & Satellite(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_584", "prediction": "all x y.((Propulsion(x) & Satellite(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_584", "prediction": "all x y z.((Propulsion(x) & Satellite(y) & Satellite(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_584", "prediction": "all x y z.((Propulsion(x) & Satellite(y) & Satellite(z)) -> UsedForFlying(x,y,z))", "score": 0}
{"id": "eqasc_validation_584", "prediction": "all x y z.((Propulsion(x) & Satellite(y) & Satellite(z)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_584", "prediction": "all x y z.((Propulsion(x) & Satellite(y) & (Flying(z) | Flying(z)))) -> UsedFor(x,y,z))", "score": -1}
{"id": "eqasc_validation_584", "prediction": "all x y z.((Propulsion(x) & Satellite(y) & Flight(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_584", "prediction": "all x y z.((Propulsion(x) & Satellite(y) & Satellite(z) & UsedFor(x,y,z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_584", "prediction": "all x y z.((Propulsion(x) & Satellite(y) & Satellite(z)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_584", "prediction": "all x y z.((Propulsion(x) & Satellite(y) & Propulsion(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_584", "prediction": "all x y z.((Propulsion(x) & Satellite(y) & Satellite(z) & UsedFor(x,y,z)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_584", "prediction": "all x.(Propulsion(x) -> UsedForSatelliteFlying(x))", "score": 0}
{"id": "eqasc_validation_585", "prediction": "all x y.((Aircraft(x) & PropulsionSystem(y)) -> GeneratesThrust(x,y))", "score": 0}
{"id": "eqasc_validation_585", "prediction": "all x y z.((Aircraft(x) & PropellerSystem(y) & Thrust(z)) -> Generates(x,y,z))", "score": 0}
{"id": "eqasc_validation_585", "prediction": "all x y.((Aircraft(x) & PropellerSystem(y)) -> GeneratesThrust(x,y))", "score": 0}
{"id": "eqasc_validation_585", "prediction": "all x y z.((Aircraft(x) & PropulsionSystem(y) & Thrust(z)) -> Generates(x,y,z))", "score": 0}
{"id": "eqasc_validation_585", "prediction": "(all x y.((Aircraft(x) & PropulsionSystem(y)) -> GeneratesThrust(x,y))", "score": -1}
{"id": "eqasc_validation_585", "prediction": "(all x y.((Aircraft(x) & PropulsionSystem(y)) -> GeneratesThrust(x,y)))", "score": 0}
{"id": "eqasc_validation_585", "prediction": "all x y z.((Aircraft(x) & PropellerSystem(y) & Thrust(z)) -> GeneratesBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_585", "prediction": "all x y z.((Aircraft(x) & PropellerSystem(y) & Propeller(z)) -> GeneratesThrust(x,y,z))", "score": 0}
{"id": "eqasc_validation_585", "prediction": "all x y z.((Aircraft(x) & PropellerSystem(y) & Thrust(z)) -> Generates(y,z))", "score": 0}
{"id": "eqasc_validation_585", "prediction": "all x y z.((Aircraft(x) & PropellerSystem(y) & Thrust(z)) -> Generates(x,y))", "score": 0}
{"id": "eqasc_validation_585", "prediction": "All x y.((Aircraft(x) & PropulsionSystem(y)) -> GeneratesThrust(x,y))", "score": -1}
{"id": "eqasc_validation_585", "prediction": "all x y.((Aircraft(x) & PropellerSystem(y)) -> GeneratesThroat(x,y))", "score": 0}
{"id": "eqasc_validation_585", "prediction": "(all x y.((Aircraft(x) & PropellerSystem(y)) -> GeneratesThrust(x,y))", "score": -1}
{"id": "eqasc_validation_585", "prediction": "all x y z.((Aircraft(x) & PropellerSystem(y) & Propeller(z)) -> GeneratesThruth(x,y,z))", "score": 0}
{"id": "eqasc_validation_586", "prediction": "all x.(ThrustingEnergy(x) -> UsedForFlying(x))", "score": 0}
{"id": "eqasc_validation_586", "prediction": "all x y.((ThrustingEnergy(x) & Flying(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_586", "prediction": "all x y.((ThrustingEnergy(x) & Flying(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_586", "prediction": "all x y.((ThrustingEnergy(x) & FlyingEnergy(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_586", "prediction": "all x y.((ThrustingEnergy(x) & FlyingEnergy(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_586", "prediction": "all x y z.((ThrustingEnergy(x) & FlyingEnergy(y) & FlyingEnergy(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_586", "prediction": "all x y z.((ThrustingEnergy(x) & FlyingEnergy(y) & ThrustingEnergy(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_586", "prediction": "all x y z.((ThrustingEnergy(x) & Flying(y) & ThrustingEnergy(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_586", "prediction": "all x y z.((ThrustingEnergy(x) & Flying(y) & Flying(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_586", "prediction": "all x y.((ThreatingEnergy(x) & Flying(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_586", "prediction": "all x.((ThrustingEnergy(x) & UsedForFlying(x)) -> UsedForFlying(x))", "score": 0}
{"id": "eqasc_validation_586", "prediction": "all x y z.((ThrustingEnergy(x) & FlyingEnergy(y) & ThrustingEnergy(z)) -> UsedForFlying(x,y,z))", "score": 0}
{"id": "eqasc_validation_586", "prediction": "all x y z.((ThrustingEnergy(x) & Flying(y) & ThrustingEnergy(z)) -> UsedForFlying(x,y,z))", "score": 0}
{"id": "eqasc_validation_586", "prediction": "all x.(ThreatingEnergy(x) -> UsedForFlying(x))", "score": 0}
{"id": "eqasc_validation_586", "prediction": "all x y.((ThrushingEnergy(x) & Flying(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_587", "prediction": "all x.((Spacecraft(x) & Apollo13(x)) -> Launched(x))", "score": 0}
{"id": "eqasc_validation_587", "prediction": "all x.(Apollo13Spacecraft(x) -> Launched(x))", "score": 0}
{"id": "eqasc_validation_587", "prediction": "all x y.((Spacecraft(x) & Apollo13(y)) -> Launched(x,y))", "score": 0}
{"id": "eqasc_validation_587", "prediction": "all x.((Apollo13Spacecraft(x) & Launched(x)) -> Launched(x))", "score": 0}
{"id": "eqasc_validation_587", "prediction": "all x.((Spacecraft(x) & Apollo(x)) -> Launched(x))", "score": 0}
{"id": "eqasc_validation_587", "prediction": "all x.((Spacecraft(x) & Apollo13)) -> Launched(x))", "score": -1}
{"id": "eqasc_validation_587", "prediction": "all x y.((Spacecraft(x) & Apollo(y)) -> Launched(x,y))", "score": 0}
{"id": "eqasc_validation_587", "prediction": "all x.((Apollo13Spacecraft(x) & Launched(x)) -> Spacecraft(x))", "score": 0}
{"id": "eqasc_validation_587", "prediction": "(Spacecraft(Apollo13) & Launched(Apollo13))", "score": 3}
{"id": "eqasc_validation_587", "prediction": "all x.(Apollo13(x) -> Launched(x))", "score": 0}
{"id": "eqasc_validation_587", "prediction": "all x.(Spacecraft(x) -> Launched(x))", "score": 0}
{"id": "eqasc_validation_587", "prediction": "all x.((Apollo13Spacecraft(x) & Launched(x)) -> Apollo13Spacecraft(x))", "score": 0}
{"id": "eqasc_validation_587", "prediction": "all x y.((Spacecraft(x) & Apollo13(y)) -> Launched(x))", "score": 0}
{"id": "eqasc_validation_587", "prediction": "all x.(Spacecraft(x,Apollo13) -> Launched(x))", "score": 0}
{"id": "eqasc_validation_587", "prediction": "all x.((Apollo13Spacecraft(x) & Launched(x)) -> Apollo13(x))", "score": 0}
{"id": "eqasc_validation_587", "prediction": "All x.(Apollo13Spacecraft(x) -> Launched(x))", "score": -1}
{"id": "eqasc_validation_588", "prediction": "all x y.((Propulsion(x) & Apollo13(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_588", "prediction": "all x y z.((Propulsion(x) & Apollo13(y) & Apollo13(z)) -> UsedForFlying(x,y,z))", "score": 0}
{"id": "eqasc_validation_588", "prediction": "all x.((Propulsion(x) & Apollo13(x)) -> UsedForFlying(x))", "score": 0}
{"id": "eqasc_validation_588", "prediction": "all x y.((Propulsion(x) & Apollo13(y)) -> UsedForFlyingBy(x,y))", "score": 0}
{"id": "eqasc_validation_588", "prediction": "all x y z.((Propulsion(x) & Apollo13(y) & Apollo13(z)) -> UsedForFlyingBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_588", "prediction": "all x y z.((Propulsion(x) & Apollo(y) & Apollo13(z)) -> UsedForFlying(x,y,z))", "score": 0}
{"id": "eqasc_validation_588", "prediction": "all x y z.((Propulsion(x) & Apollo13(y) & Apollo13(z)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_588", "prediction": "all x y.((Propulsion(x) & Apollo(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_588", "prediction": "all x y.((Propulsion(x) & Apollo13(y) & Apollo13(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_588", "prediction": "all x y z.((Propulsion(x) & Apollo13(y) & Propulsion(z)) -> UsedForFlying(x,y,z))", "score": 0}
{"id": "eqasc_validation_588", "prediction": "all x y z.((Propulsion(x) & Apollo(y) & Apollo(z)) -> UsedForFlying(x,y,z))", "score": 0}
{"id": "eqasc_validation_588", "prediction": "all x y.((Apollo13(x) & Apollo13(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_588", "prediction": "all x y.((PropulsionPropulsion(x) & Apollo13(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_588", "prediction": "all x y z.((Propulsion(x) & Apollo13(y) & Apollo13(z)) -> UsesForFlying(x,y,z))", "score": 0}
{"id": "eqasc_validation_588", "prediction": "all x y z.((Propulsion(x) & Apollo(y) & Apollo13(z)) -> UsedForFlyingBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_588", "prediction": "all x y z.((Propulsion(x) & Apollo13(y) & Apollo13(z)) -> UsedForFlying(y,z))", "score": 0}
{"id": "eqasc_validation_589", "prediction": "all x.(Raket(x) -> OperatesOnBasicPropulsionPrinciples(x))", "score": 0}
{"id": "eqasc_validation_589", "prediction": "all x.(Raket(x) -> OperatesOnSameBasicPropulsionPrinciples(x))", "score": 0}
{"id": "eqasc_validation_589", "prediction": "all x.(Raket(x) -> OperatesOnSamePropulsionPrinciples(x))", "score": 0}
{"id": "eqasc_validation_589", "prediction": "all x.(Rocket(x) -> OperatesOnBasicPropulsionPrinciples(x))", "score": 0}
{"id": "eqasc_validation_589", "prediction": "all x.(Rocket(x) -> OperatesOnSameBasicPropulsionPrinciples(x))", "score": 0}
{"id": "eqasc_validation_589", "prediction": "all x.(Rocket(x) -> OperatesOnSamePropulsionPrinciples(x))", "score": 0}
{"id": "eqasc_validation_589", "prediction": "all x.(Raket(x) -> OperatesOnBasicPrinciplesOfPropulsion(x))", "score": 0}
{"id": "eqasc_validation_589", "prediction": "all x.(Rainforest(x) -> OperatesOnBasicPropulsionPrinciples(x))", "score": 0}
{"id": "eqasc_validation_589", "prediction": "all x.(Raket(x) -> OperatesOnSamePrinciplesOfPropulsion(x))", "score": 0}
{"id": "eqasc_validation_589", "prediction": "all x.(Rainforest(x) -> OperatesOnSamePropulsionPrinciples(x))", "score": 0}
{"id": "eqasc_validation_589", "prediction": "all x.(Raket(x) -> OperatesOnBasicPropulsion(x))", "score": 0}
{"id": "eqasc_validation_589", "prediction": "all x.(Rainforest(x) -> OperatesOnSameBasicPropulsionPrinciples(x))", "score": 0}
{"id": "eqasc_validation_589", "prediction": "all x.(Rocket(x) -> OperatesOnBasicPrinciplesOfPropulsion(x))", "score": 0}
{"id": "eqasc_validation_589", "prediction": "all x.(Rocket(x) -> OperatesOnSamePrinciplesOfPropulsion(x))", "score": 0}
{"id": "eqasc_validation_589", "prediction": "all x.(Rocket(x) -> OperatesOnBasicPropulsion(x))", "score": 0}
{"id": "eqasc_validation_589", "prediction": "all x.(Rainforest(x) -> OperatesOnBasicPropulsion(x))", "score": 0}
{"id": "eqasc_validation_590", "prediction": "all x y.((Spacecraft(x) & Rocket(y)) -> CanFlyWith(x,y))", "score": 0}
{"id": "eqasc_validation_590", "prediction": "all x y z.((Spacecraft(x) & Rocket(y) & Spacecraft(z)) -> CanFlyWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_590", "prediction": "all x.(Spacecraft(x) -> CanFlyWithRockets(x))", "score": 0}
{"id": "eqasc_validation_590", "prediction": "all x y z.((Spacecraft(x) & Rocket(y) & Rocket(z)) -> CanFlyWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_590", "prediction": "all x.(Spacecraft(x) -> CanFlyWithRakets(x))", "score": 0}
{"id": "eqasc_validation_590", "prediction": "all x y z.((Spacecraft(x) & Rocket(y) & Spacecraft(z)) -> CanFlyWith(x,y))", "score": 0}
{"id": "eqasc_validation_590", "prediction": "all x y z.((Spacecraft(x) & Rocket(y) & Spacecraft(z) & CanFlyWith(x,y,z)) -> CanFlyWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_590", "prediction": "all x y z.((Spacecraft(x) & Rocket(y) & Spacecraft(z) & CanFlyWith(x,y,z)) -> CanFlyWith(x,y))", "score": 0}
{"id": "eqasc_validation_590", "prediction": "all x.(Spacecraft(x) -> (CanFlyWithRockets(x)))", "score": 0}
{"id": "eqasc_validation_590", "prediction": "all x.(Spacecraft(x) -> CanFlyWithRocket(x))", "score": 0}
{"id": "eqasc_validation_590", "prediction": "all x y.((Spacecraft(x) & Rocket(y)) -> CanFly(x,y))", "score": 0}
{"id": "eqasc_validation_590", "prediction": "all x y z.((Spacecraft(x) & Rocket(y) & Spacecraft(z) & CanFlyWith(x,y)) -> CanFlyWith(x,z))", "score": 0}
{"id": "eqasc_validation_590", "prediction": "all x y.((Spacecraft(x) & Spacecraft(y)) -> CanFlyWithRockets(x,y))", "score": 0}
{"id": "eqasc_validation_590", "prediction": "all x y z.((Spacecraft(x) & Rocket(y) & Spacecraft(z)) -> (CanFlyWith(x,y) & CanFlyWith(x,z)))", "score": 0}
{"id": "eqasc_validation_590", "prediction": "all x y z.((Spacecraft(x) & Rocket(y) & Spacecraft(z)) -> CanFly(x,y,z))", "score": 0}
{"id": "eqasc_validation_590", "prediction": "all x y z.((Spacecraft(x) & Rocket(y) & Spacecraft(z)) -> (CanFlyWith(x,y,z) & CanFlyWith(x,y)))", "score": 0}
{"id": "eqasc_validation_591", "prediction": "all x.((Apollo12(x) & TakesOff(x)) -> HitByLightning(x))", "score": 0}
{"id": "eqasc_validation_591", "prediction": "all x.((Spacecraft(x) & Apollo12(x)) -> HitByLightning(x))", "score": 0}
{"id": "eqasc_validation_591", "prediction": "all x y.((Apollo12(x) & Apollo12(y)) -> HitByLightning(x,y))", "score": 0}
{"id": "eqasc_validation_591", "prediction": "all x.((Spacecraft(x) & Apollo12TakesOff(x)) -> HitByLightning(x))", "score": 0}
{"id": "eqasc_validation_591", "prediction": "all x y.((Spacecraft(x) & Apollo12(y)) -> HitByLightning(x,y))", "score": 0}
{"id": "eqasc_validation_591", "prediction": "all x.((Apollo12(x) & Apollo12(x)) -> HitByLightning(x))", "score": 0}
{"id": "eqasc_validation_591", "prediction": "all x y.((Apollo(x) & Apollo12(y)) -> HitByLightning(x,y))", "score": 0}
{"id": "eqasc_validation_591", "prediction": "all x y.((Apollo12(x) & Spacecraft(y)) -> HitByLightning(y))", "score": 0}
{"id": "eqasc_validation_591", "prediction": "all x y z.((Apollo12(x) & Spacecraft(y) & Lightning(z)) -> HitBy(y,z))", "score": 0}
{"id": "eqasc_validation_591", "prediction": "all x y.((Spacecraft(x) & Apollo12(y) & TakesOff(x,y)) -> HitByLightning(x))", "score": 0}
{"id": "eqasc_validation_591", "prediction": "all x y.((Spacecraft(x) & Apollo12(y) & TakesOff(x,y)) -> HitByLightning(x,y))", "score": 0}
{"id": "eqasc_validation_591", "prediction": "all x y.((Apollo12(x) & Spacecraft(y)) -> HitByLightning(y,x))", "score": 0}
{"id": "eqasc_validation_591", "prediction": "all x y z.((Apollo(x) & Apollo12(y) & Lightning(z)) -> HitBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_591", "prediction": "all x y z.((Apollo12(x) & Apollo12(y) & Lightning(z)) -> HitBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_591", "prediction": "all x.(Apollo12(x) -> HitByLightning(x))", "score": 0}
{"id": "eqasc_validation_591", "prediction": "all x.((Apollo12(x) & Takeoff(x)) -> HitByLightning(x))", "score": 0}
{"id": "eqasc_validation_592", "prediction": "all x y.((Propulsion(x) & Apollo12(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_592", "prediction": "all x y z.((Propulsion(x) & Apollo12(y) & Apollo12(z)) -> UsedForFlying(x,y,z))", "score": 0}
{"id": "eqasc_validation_592", "prediction": "all x.((Propulsion(x) & Apollo12(x)) -> UsedForFlying(x))", "score": 0}
{"id": "eqasc_validation_592", "prediction": "all x y.((Propulsion(x) & Apollo12(y)) -> UsedForFlyingBy(x,y))", "score": 0}
{"id": "eqasc_validation_592", "prediction": "all x y z.((Propulsion(x) & Apollo(y) & Apollo12(z)) -> UsedForFlying(x,y,z))", "score": 0}
{"id": "eqasc_validation_592", "prediction": "all x y z.((Propulsion(x) & Apollo12(y) & Apollo12(z)) -> UsedForFlyingBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_592", "prediction": "all x y z.((Propulsion(x) & Apollo12(y) & Apollo12(z)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_592", "prediction": "all x y z.((Propulsion(x) & Apollo12(y) & Propulsion(z)) -> UsedForFlying(x,y,z))", "score": 0}
{"id": "eqasc_validation_592", "prediction": "all x y.((Apollo12(x) & Apollo12(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_592", "prediction": "all x y.((Propulsion(x) & Apollo(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_592", "prediction": "all x y z.((Apollo12(x) & Apollo12(y) & Propulsion(z)) -> UsedForFlying(x,y,z))", "score": 0}
{"id": "eqasc_validation_592", "prediction": "all x y.((Apollo12(x) & Apollo12(y)) -> PropulsionUsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_592", "prediction": "all x y.((PropulsionPropulsion(x) & Apollo12(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_592", "prediction": "all x y z.((Propulsion(x) & Apollo12(y) & Apollo12(z)) -> UsedForFlying(y,z))", "score": 0}
{"id": "eqasc_validation_592", "prediction": "all x y z.((Propulsion(x) & Apollo12(y) & Apollo12(z)) -> UsesForFlying(x,y,z))", "score": 0}
{"id": "eqasc_validation_592", "prediction": "all x y z.((Propulsion(x) & Apollo(y) & Apollo12(z)) -> UsedForFlyingBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_593", "prediction": "all x y.((Propulsion(x) & Apollo13(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_593", "prediction": "all x.(Propulsion(x) -> UsedForFlyingApollo13(x))", "score": 0}
{"id": "eqasc_validation_593", "prediction": "all x y z.((Propulsion(x) & Apollo13(y) & Apollo13(z)) -> UsedForFlying(x,y,z))", "score": 0}
{"id": "eqasc_validation_593", "prediction": "all x y.((Propulsion(x) & Apollo(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_593", "prediction": "all x y z.((Propulsion(x) & Apollo(y) & Apollo(z)) -> UsedForFlying(x,y,z))", "score": 0}
{"id": "eqasc_validation_593", "prediction": "all x.(Propulsion(x) -> UsedForFlyingApollo(x))", "score": 0}
{"id": "eqasc_validation_593", "prediction": "all x y z.((Propulsion(x) & Apollo13(y) & Apollo13(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_593", "prediction": "all x y z.((Propulsion(x) & Apollo(y) & Apollo13(z)) -> UsedForFlying(x,y,z))", "score": 0}
{"id": "eqasc_validation_593", "prediction": "all x y z.((Propulsion(x) & Apollo13(y) & Apollo13(z)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_593", "prediction": "all x y.((Propulsion(x) & Apollo13(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_593", "prediction": "all x.(Propulsion(x) -> UsedForFlying(x,Apollo13))", "score": 3}
{"id": "eqasc_validation_593", "prediction": "all x y.((Propulsion(x) & Apollo 13(y)) -> UsedForFlying(x,y))", "score": -1}
{"id": "eqasc_validation_593", "prediction": "all x.(Propulsion(x) -> (UsedForFlyingApollo13(x) & Apollo13(x)))", "score": 0}
{"id": "eqasc_validation_593", "prediction": "all x.(Propulsion(x) -> (FlyingApollo13(x) | FlyingApollo13(x)))", "score": 0}
{"id": "eqasc_validation_593", "prediction": "all x.(Propulsion(x) -> (UsedForFlyingApollo13(x) | UsedForFlyingApollo13(x)))", "score": 0}
{"id": "eqasc_validation_593", "prediction": "all x y z.((Propulsion(x) & Apollo(y) & Apollo(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_594", "prediction": "all x.(Butter(x) -> (Fat(x) & SolidAtRoomTemperature(x)))", "score": 0}
{"id": "eqasc_validation_594", "prediction": "all x y.((Butter(x) & Fat(y)) -> (Fat(x,y) & SolidAtRoomTemperature(x)))", "score": 0}
{"id": "eqasc_validation_594", "prediction": "all x y.((Butter(x) & Fat(y)) -> SolidAtRoomTemperature(x,y))", "score": 0}
{"id": "eqasc_validation_594", "prediction": "all x y z.((Butter(x) & Fat(y) & RoomTemperature(z)) -> SolidAt(x,y,z))", "score": 0}
{"id": "eqasc_validation_594", "prediction": "all x y.((Butter(x) & Fat(y)) -> (Fat(x,y) & SolidAtRoomTemperature(y)))", "score": 0}
{"id": "eqasc_validation_594", "prediction": "all x y.((Butter(x) & RoomTemperature(y)) -> (Fat(x,y) & SolidAt(x,y)))", "score": 0}
{"id": "eqasc_validation_594", "prediction": "all x.((Butter(x) & Fat(x)) -> SolidAtRoomTemperature(x))", "score": 0}
{"id": "eqasc_validation_594", "prediction": "all x.((Butter(x) & Fat(x) & SolidAtRoomTemperature(x)) -> Butter(x))", "score": 0}
{"id": "eqasc_validation_594", "prediction": "all x.(Butter(x) -> (Fit(x) & SolidAtRoomTemperature(x)))", "score": 0}
{"id": "eqasc_validation_594", "prediction": "all x.((Butter(x) & Fat(x) & SolidAtRoomTemperature(x)) -> Fat(x))", "score": 0}
{"id": "eqasc_validation_594", "prediction": "all x y.((Butter(x) & Fat(y) & RoomTemperature(z)) -> SolidAt(x,y,z))", "score": 0}
{"id": "eqasc_validation_594", "prediction": "all x.(Butter(x) -> (Fat(x) & Solid(x) & RoomTemperature(x)))", "score": 8}
{"id": "eqasc_validation_594", "prediction": "all x y.((Butter(x) & RoomTemperature(y)) -> (Fat(x) & SolidAt(x,y)))", "score": 0}
{"id": "eqasc_validation_594", "prediction": "all x y.((Butter(x) & Fat(y)) -> (Fat(x,y) & SolidAtRoomTemperature(x,y)))", "score": 0}
{"id": "eqasc_validation_594", "prediction": "all x y z.((Butter(x) & Fat(y) & RoomTemperature(z)) -> SolidAt(y,z))", "score": 0}
{"id": "eqasc_validation_595", "prediction": "exists x.(Fat(x) & MoreLikelyToCauseHeartDisease(x))", "score": 0}
{"id": "eqasc_validation_595", "prediction": "exists x.(Fat(x) & MoreLikelyToCause(x,HeartDisease))", "score": 0}
{"id": "eqasc_validation_595", "prediction": "exists x.(Fat(x) & MoreLikelyToCause(x,heartDisease))", "score": 0}
{"id": "eqasc_validation_595", "prediction": "exists x.(Fat(x) & MoreLikelyToCauseHeartDiagnosis(x))", "score": 0}
{"id": "eqasc_validation_595", "prediction": "exists x y.(Fat(x) & HeartDisease(y) & MoreLikelyToCause(x,y))", "score": 0}
{"id": "eqasc_validation_595", "prediction": "exists x.(Fat(x) & CausesHeartDisease(x))", "score": 0}
{"id": "eqasc_validation_595", "prediction": "exists x.(Fat(x) & LessLikelyToCauseHeartDisease(x))", "score": 0}
{"id": "eqasc_validation_595", "prediction": "exists x.(Fat(x) & MoreLikely(x) & CausesHeartDisease(x))", "score": 0}
{"id": "eqasc_validation_595", "prediction": "exists x.(Fat(x) & MoreLikelyToCauseHerbDisease(x))", "score": 0}
{"id": "eqasc_validation_595", "prediction": "exists x.(Fat(x) & MoreLikelyCausesHeartDisease(x))", "score": 0}
{"id": "eqasc_validation_595", "prediction": "exists x.(Fat(x) & MoreLikely(x,HeartDisease))", "score": 0}
{"id": "eqasc_validation_595", "prediction": "exists x.(Fat(x) & MoreLikely(x))", "score": 0}
{"id": "eqasc_validation_595", "prediction": "exists x.(Fat(x) & MoreLikelyToCauseFiberDisease(x))", "score": 0}
{"id": "eqasc_validation_595", "prediction": "exists x.(Fat(x) & LikelyToCauseHeartDisease(x))", "score": 0}
{"id": "eqasc_validation_595", "prediction": "exists x.(Fat(x) & MostLikelyToCauseHeartDisease(x))", "score": 0}
{"id": "eqasc_validation_595", "prediction": "exists x.(Fat(x) & MoreLikelyForHeartDisease(x))", "score": 0}
{"id": "eqasc_validation_596", "prediction": "all x y.((Butter(x) & HeartDisease(y)) -> CanLeadTo(x,y))", "score": 0}
{"id": "eqasc_validation_596", "prediction": "all x.(Butter(x) -> HeartDisease(x))", "score": 0}
{"id": "eqasc_validation_596", "prediction": "all x y z.((Butter(x) & HeartDisease(y) & HeartDisease(z)) -> CanLeadTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_596", "prediction": "all x y.((Butter(x) & HeartDisease(y)) -> LeadsTo(x,y))", "score": 0}
{"id": "eqasc_validation_596", "prediction": "all x.(Butter(x) -> CanLeadToHeartDisease(x))", "score": 0}
{"id": "eqasc_validation_596", "prediction": "all x y z.((Butter(x) & HeartDisease(y) & HeartDisease(z)) -> LeadsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_596", "prediction": "all x.(Butter(x) -> (LeadsToHeartDisease(x) & HeartDisease(x)))", "score": 0}
{"id": "eqasc_validation_596", "prediction": "all x.((Butter(x) & HeartDisease(x)) -> CanLeadTo(x,HeartDisease))", "score": 0}
{"id": "eqasc_validation_596", "prediction": "all x y z.((Butter(x) & HeartDisease(y) & Heart(z)) -> CanLeadTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_596", "prediction": "all x.((Butter(x) & HeartDisease(x)) -> LeadsTo(x,HeartDisease))", "score": 0}
{"id": "eqasc_validation_596", "prediction": "all x.(Butter(x) -> LeadsToHeartDisease(x))", "score": 0}
{"id": "eqasc_validation_596", "prediction": "all x y z.((Butter(x) & HeartDisease(y) & Heart(z)) -> LeadsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_596", "prediction": "all x y z.((Butter(x) & HeartDisease(y) & HeartDisease(z)) -> MayLeadTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_596", "prediction": "all x y z.((Butter(x) & HeartDisease(y) & HeartDisease(z)) -> CanLeadTo(x,z))", "score": 0}
{"id": "eqasc_validation_597", "prediction": "all x y.((Egg(x) | Butter(x) | Margarine(x)) -> KeepsInCooler(x,y))", "score": 0}
{"id": "eqasc_validation_597", "prediction": "all x y.((Egg(x) | Butter(x) | Margarine(x)) -> KeepsInClimate(x,y))", "score": 0}
{"id": "eqasc_validation_597", "prediction": "all x y.((Egg(x) | Butter(x) | Margarine(x)) -> KeepsInColder(x,y))", "score": 0}
{"id": "eqasc_validation_597", "prediction": "all x y.(((Egg(x) | Butter(x) | Margarine(x)) & Refrigerator(y)) -> KeepsInCooler(x,y))", "score": 0}
{"id": "eqasc_validation_597", "prediction": "all x y.(((Egg(x) | Butter(x) | Margarine(x)) & Refrigerator(y)) -> KeepsIn(x,y))", "score": 0}
{"id": "eqasc_validation_597", "prediction": "all x.((Egg(x) | Butter(x) | Margarine(x)) -> KeepsInCooler(x))", "score": 0}
{"id": "eqasc_validation_597", "prediction": "all x y.((Egg(x) | Butter(x) | Margarine(x)) -> KeepsIn(x,y))", "score": 0}
{"id": "eqasc_validation_597", "prediction": "all x y.((Egg(x) | Butter(x) | Margarine(x)) -> KeepsInCooler(x))", "score": 0}
{"id": "eqasc_validation_597", "prediction": "all x y.((Egg(x) & (Butter(x) | Margarine(x))) -> KeepsInCooler(x,y))", "score": 0}
{"id": "eqasc_validation_597", "prediction": "all x y z.((Egg(x) | Butter(x) | Margarine(x)) -> KeepsInCooler(x,y,z))", "score": 0}
{"id": "eqasc_validation_598", "prediction": "all x.((Fat(x) & SolidAtRoomTemperature(x)) -> CanBeKeptInCooler(x))", "score": 0}
{"id": "eqasc_validation_598", "prediction": "all x.((Fat(x) & SolidAtRoomTemperature(x)) -> CanBeKeepenInCooler(x))", "score": 0}
{"id": "eqasc_validation_598", "prediction": "all x.((Fat(x) & SolidAtRoomTemperature(x)) -> CanBeKeepnInCooler(x))", "score": 0}
{"id": "eqasc_validation_598", "prediction": "all x.((Fat(x) & SolidAtRoomTemperature(x)) -> CanBeKeptInColder(x))", "score": 0}
{"id": "eqasc_validation_598", "prediction": "all x.((Fat(x) & SolidAtRoomTemperature(x)) -> Cooler(x))", "score": 0}
{"id": "eqasc_validation_598", "prediction": "all x y.((Fat(x) & SolidAtRoomTemperature(x) & Cooler(y)) -> CanBeKeptIn(x,y))", "score": 0}
{"id": "eqasc_validation_598", "prediction": "all x.((Fat(x) & SolidAtRoomTemperature(x)) -> KeepsInCooler(x))", "score": 0}
{"id": "eqasc_validation_598", "prediction": "all x y.((Fat(x) & SolidAtRoomTemperature(x) & Cooler(y)) -> CanBeKeptInCooler(x,y))", "score": 0}
{"id": "eqasc_validation_598", "prediction": "all x y.((Fat(x) & SolidAtRoomTemperature(x)) -> CanBeKeptInCooler(y))", "score": 0}
{"id": "eqasc_validation_598", "prediction": "all x y.((Fat(x) & SolidAtRoomTemperature(x) & RoomTemperature(y)) -> CanBeKeptInCooler(x,y))", "score": 0}
{"id": "eqasc_validation_598", "prediction": "all x.((Fat(x) & SolidAtRoomTemperature(x)) -> CanBeKeptInClimate(x))", "score": 0}
{"id": "eqasc_validation_598", "prediction": "all x y.((Fat(x) & SolidAtRoomTemperature(x) & RoomTemperature(y)) -> CanBeKeptInCooler(x))", "score": 0}
{"id": "eqasc_validation_598", "prediction": "all x.((Fat(x) & SolidAtRoomTemperature(x)) -> CanBeKeepedInCooler(x))", "score": 0}
{"id": "eqasc_validation_598", "prediction": "all x.((Fat(x) & SolidAtRoomTemperature(x)) -> CanKeepInCooler(x))", "score": 0}
{"id": "eqasc_validation_599", "prediction": "all x.(Butter(x) -> ContainsSaturatedFats(x))", "score": 0}
{"id": "eqasc_validation_599", "prediction": "all x y.((Butter(x) & SaturatedFat(y)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_599", "prediction": "all x y.((Butter(x) & SaturatedFats(y)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_599", "prediction": "all x.(Butter(x) -> (ContainsSaturatedFats(x)))", "score": 0}
{"id": "eqasc_validation_599", "prediction": "all x.(Butter(x) -> SaturatedFats(x))", "score": 0}
{"id": "eqasc_validation_599", "prediction": "all x.((Butter(x) & SaturatedFats(x)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_599", "prediction": "all x y.((Butter(x) & Fat(y)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_599", "prediction": "all x.(Butter(x) -> (ContainsSaturatedFats(x) & ContainsSaturatedFats(x)))", "score": 0}
{"id": "eqasc_validation_599", "prediction": "all x.(Butter(x) -> HasSaturatedFats(x))", "score": 0}
{"id": "eqasc_validation_599", "prediction": "all x.((Butter(x) & ContainsSaturatedFats(x)) -> ContainsFats(x))", "score": 0}
{"id": "eqasc_validation_599", "prediction": "exists x.(Butter(x) & ContainsSaturatedFats(x))", "score": 0}
{"id": "eqasc_validation_599", "prediction": "all x.((Butter(x) & ContainsSaturatedFats(x)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_599", "prediction": "all x.((Butter(x) & SaturatedFats(x)) -> Contains(x,Butter))", "score": 0}
{"id": "eqasc_validation_599", "prediction": "all x.(Butter(x) -> (ContainsSaturatedFats(x) | ContainsSaturatedFats(x)))", "score": 0}
{"id": "eqasc_validation_599", "prediction": "all x.(Butter(x) -> (ContainsSaturatedFats(x) & SaturatedFats(x)))", "score": 0}
{"id": "eqasc_validation_600", "prediction": "all x.(SaturatedFat(x) -> SolidAtRoomTemperature(x))", "score": 0}
{"id": "eqasc_validation_600", "prediction": "all x.((SaturatedFat(x) & RoomTemperature(x)) -> SolidAtRoomTemperature(x))", "score": 0}
{"id": "eqasc_validation_600", "prediction": "all x y.((SaturatedFat(x) & RoomTemperature(y)) -> SolidAt(x,y))", "score": 0}
{"id": "eqasc_validation_600", "prediction": "all x y z.((SaturatedFat(x) & RoomTemperature(y) & RoomTemperature(z)) -> SolidAt(x,y,z))", "score": 0}
{"id": "eqasc_validation_600", "prediction": "all x y.((SaturatedFat(x) & RoomTemperature(y)) -> SolidAtRoomTemperature(x,y))", "score": 0}
{"id": "eqasc_validation_600", "prediction": "all x y.((SaturatedFat(x) & RoomTemperature(y) & SolidAt(x,y)) -> SolidAt(x,y))", "score": 0}
{"id": "eqasc_validation_600", "prediction": "all x y z.((SaturatedFat(x) & RoomTemperature(y) & RoomTemperature(z) & SolidAt(x,y,z)) -> SolidAt(x,y,z))", "score": 0}
{"id": "eqasc_validation_600", "prediction": "all x y z.((SaturatedFat(x) & RoomTemperature(y) & RoomTemperature(z)) -> SolidSaturatedFat(x,y,z))", "score": 0}
{"id": "eqasc_validation_600", "prediction": "all x.((SaturatedFat(x) & RoomTemperature(x)) -> Solid(x))", "score": 0}
{"id": "eqasc_validation_600", "prediction": "all x y z.((SaturatedFat(x) & RoomTemperature(y) & RoomTemperature(z)) -> Solid(x,y,z))", "score": 0}
{"id": "eqasc_validation_600", "prediction": "all x y.((SaturatedFat(x) & RoomTemperature(y)) -> Solid(x,y))", "score": 0}
{"id": "eqasc_validation_600", "prediction": "all x y.((SaturatedFat(x) & RoomTemperature(y)) -> SolidSaturatedFat(x,y))", "score": 0}
{"id": "eqasc_validation_600", "prediction": "all x.((SaturatedFat(x) & RoomTemperature(x)) -> SolidAt(x,RoomTemperature))", "score": 0}
{"id": "eqasc_validation_600", "prediction": "all x.((SaturatedFat(x) & RoomTemperature(x)) -> SolidAt(x))", "score": 0}
{"id": "eqasc_validation_600", "prediction": "all x.((SaturatedFat(x) & RoomTemperature(x)) -> SolidSaturatedFat(x))", "score": 0}
{"id": "eqasc_validation_601", "prediction": "all x.(SaturatedFat(x) -> SolidAtRoomTemperature(x))", "score": 0}
{"id": "eqasc_validation_601", "prediction": "all x.((Fat(x) & Saturated(x)) -> SolidAtRoomTemperature(x))", "score": 0}
{"id": "eqasc_validation_601", "prediction": "all x.((SaturatedFat(x) & RoomTemperature(x)) -> Solid(x))", "score": 0}
{"id": "eqasc_validation_601", "prediction": "all x y.((SaturatedFat(x) & RoomTemperature(y)) -> SolidAt(x,y))", "score": 0}
{"id": "eqasc_validation_601", "prediction": "all x y.((SaturatedFat(x) & RoomTemperature(y)) -> Solid(x,y))", "score": 0}
{"id": "eqasc_validation_601", "prediction": "all x.((SaturatedFat(x) & RoomTemperature(x)) -> SolidAt(x))", "score": 0}
{"id": "eqasc_validation_601", "prediction": "all x.((SaturatedFat(x) & RoomTemperature(x)) -> SolidAt(x,y))", "score": 0}
{"id": "eqasc_validation_601", "prediction": "all x y z.((SaturatedFat(x) & RoomTemperature(y) & RoomTemperature(z)) -> Solid(x,y,z))", "score": 0}
{"id": "eqasc_validation_601", "prediction": "all x y.((Fat(x) & Saturated(x) & RoomTemperature(y)) -> SolidAt(x,y))", "score": 0}
{"id": "eqasc_validation_601", "prediction": "all x y z.((SaturatedFat(x) & RoomTemperature(y) & RoomTemperature(z)) -> SolidAt(x,y,z))", "score": 0}
{"id": "eqasc_validation_601", "prediction": "all x y z.((SaturatedFat(x) & RoomTemperature(y) & SolidAt(x,y)) -> SaturatedFat(x))", "score": 0}
{"id": "eqasc_validation_601", "prediction": "all x.((SaturatedFat(x) & SolidAtRoomTemperature(x)) -> SaturatedFat(x))", "score": 0}
{"id": "eqasc_validation_601", "prediction": "all x y z.((SaturatedFat(x) & RoomTemperature(y) & SolidAt(x,z)) -> SaturatedFat(x))", "score": 0}
{"id": "eqasc_validation_601", "prediction": "all x y.((SaturatedFat(x) & RoomTemperature(y)) -> Solid(x))", "score": 0}
{"id": "eqasc_validation_601", "prediction": "all x.((Fat(x) & SolidAtRoomTemperature(x)) -> Saturated(x))", "score": 0}
{"id": "eqasc_validation_602", "prediction": "all x.(Butter(x) -> SaturatedFat(x))", "score": 0}
{"id": "eqasc_validation_602", "prediction": "all x.(Butter(x) -> (SaturatedFat(x) & SaturatedFat(x)))", "score": 0}
{"id": "eqasc_validation_602", "prediction": "all x.(Butter(x) -> (SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x)))", "score": 0}
{"id": "eqasc_validation_602", "prediction": "all x.(Butter(x) -> (SaturatedFat(x) & Fat(x)))", "score": 0}
{"id": "eqasc_validation_602", "prediction": "all x.(Butter(x) -> (SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x)))", "score": 0}
{"id": "eqasc_validation_602", "prediction": "all x.(Butter(x) -> (SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x)))", "score": 0}
{"id": "eqasc_validation_602", "prediction": "all x.(Butter(x) -> (SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x)))", "score": 0}
{"id": "eqasc_validation_602", "prediction": "all x.(Butter(x) -> (SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x)))", "score": 0}
{"id": "eqasc_validation_602", "prediction": "all x.(Butter(x) -> (SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x)))", "score": 0}
{"id": "eqasc_validation_602", "prediction": "all x.(Butter(x) -> (SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x)))", "score": 0}
{"id": "eqasc_validation_602", "prediction": "all x y.((Butter(x) & SaturatedFat(y)) -> SaturatedFat(x,y))", "score": 0}
{"id": "eqasc_validation_602", "prediction": "all x.(Butter(x) -> (SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x)))", "score": 0}
{"id": "eqasc_validation_602", "prediction": "all x.(Butter(x) -> (SaturatedFat(x) & Fat(x) & SaturatedFat(x)))", "score": 0}
{"id": "eqasc_validation_602", "prediction": "all x.(Butter(x) -> (SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x)))", "score": 0}
{"id": "eqasc_validation_602", "prediction": "all x.(Butter(x) -> (SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x))", "score": -1}
{"id": "eqasc_validation_602", "prediction": "all x.(Butter(x) -> (SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x) & SaturatedFat(x))", "score": -1}
{"id": "eqasc_validation_603", "prediction": "all x y.((SaturatedFat(x) & Butter(y)) -> MakesSolidAtAmbientTemperatures(x,y))", "score": 0}
{"id": "eqasc_validation_603", "prediction": "all x.(SaturatedFat(x) -> MakesButterSolidAtAmbientTemperatures(x))", "score": 0}
{"id": "eqasc_validation_603", "prediction": "all x.(SaturatedFats(x) -> MakesButterSolidAtAmbientTemperatures(x))", "score": 0}
{"id": "eqasc_validation_603", "prediction": "all x y z.((SaturatedFat(x) & Butter(y) & AmbientTemperature(z)) -> MakesSolidAt(y,z))", "score": 0}
{"id": "eqasc_validation_603", "prediction": "all x.((Fat(x) & Saturated(x)) -> MakesButterSolidAtAmbientTemperatures(x))", "score": 0}
{"id": "eqasc_validation_603", "prediction": "all x y z.((SaturatedFat(x) & Butter(y) & AmbientTemperature(z)) -> MakesSolid(y,z))", "score": 0}
{"id": "eqasc_validation_603", "prediction": "all x y z.((SaturatedFat(x) & Butter(y) & AmbientTemperature(z)) -> MakesSolidAt(x,y,z))", "score": 0}
{"id": "eqasc_validation_603", "prediction": "all x y.((SaturatedFat(x) & Butter(y)) -> MakesSolidAtAmbientTemperature(x,y))", "score": 0}
{"id": "eqasc_validation_603", "prediction": "all x y z.((SaturatedFat(x) & Butter(y) & AmbientTemperature(z)) -> MakesSolid(x,y,z))", "score": 0}
{"id": "eqasc_validation_603", "prediction": "all x y.((SaturatedFat(x) & Butter(y) & AmbientTemperature(y)) -> MakesSolid(x,y))", "score": 0}
{"id": "eqasc_validation_603", "prediction": "all x.((SaturatedFat(x) & ButterSolidAtAmbientTemperatures(x)) -> SaturatedFats(x))", "score": 0}
{"id": "eqasc_validation_603", "prediction": "all x y z.((SaturatedFat(x) & Butter(y) & AmbientTemperature(z)) -> MakesButterSolid(x,y,z))", "score": 0}
{"id": "eqasc_validation_603", "prediction": "all x y.((SaturatedFat(x) & Butter(y) & AmbientTemperature(y)) -> MakesButterSolid(x,y))", "score": 0}
{"id": "eqasc_validation_603", "prediction": "all x.((SaturatedFat(x) & Butter(y)) -> MakesSolidAtAmbientTemperatures(x,y))", "score": 0}
{"id": "eqasc_validation_603", "prediction": "all x y.((SaturatedFat(x) & Butter(y) & AmbientTemperature(y)) -> MakesSolidAt(x,y))", "score": 0}
{"id": "eqasc_validation_603", "prediction": "all x y z.((SaturatedFat(x) & Butter(y) & AmbientTemperatures(z)) -> MakesSolidAt(y,z))", "score": 0}
{"id": "eqasc_validation_604", "prediction": "all x.((RoomTemperature(x) & Temperature(x,70) & Temperature(x,75)) -> AcceptableToMostSpecies(x))", "score": 0}
{"id": "eqasc_validation_604", "prediction": "all x.((RoomTemperature(x) & Temperature(x,70,75)) -> AcceptableToMostSpecies(x))", "score": 0}
{"id": "eqasc_validation_604", "prediction": "all x.((RoomTemperature(x) & Temperature(x,70) | Temperature(x,75))) -> AcceptableToMostSpecies(x))", "score": -1}
{"id": "eqasc_validation_604", "prediction": "all x.((RoomTemperature(x) & Temperature(x,70) & Temperature(x,75)) -> Acceptable(x))", "score": 0}
{"id": "eqasc_validation_604", "prediction": "all x.((Room(x) & Temperature(x,70) & Temperature(x,75)) -> AcceptableToMostSpecies(x))", "score": 0}
{"id": "eqasc_validation_604", "prediction": "all x.((RoomTemperature(x) & Temperatures(x,70) & Temperatures(x,75)) -> AcceptableToMostSpecies(x))", "score": 0}
{"id": "eqasc_validation_604", "prediction": "all x.((RoomTemperature(x) & Temperature(x,70) & Temperature(x,75)) -> AcceptableForMostSpecies(x))", "score": 0}
{"id": "eqasc_validation_604", "prediction": "all x.((RoomTemperature(x) & Temperature(x,70-75)) -> AcceptableToMostSpecies(x))", "score": -1}
{"id": "eqasc_validation_604", "prediction": "all x.((RoomTemperature(x) & 70-75FedernheitOrSo(x)) -> AcceptableToMostSpecies(x))", "score": -1}
{"id": "eqasc_validation_604", "prediction": "all x.((RoomTemperature(x) & Temperatures(x,70,75)) -> AcceptableToMostSpecies(x))", "score": 0}
{"id": "eqasc_validation_604", "prediction": "all x.((RoomTemperature(x) & 70-75DegreesFahrenheitOrSo(x)) -> AcceptableToMostSpecies(x))", "score": -1}
{"id": "eqasc_validation_604", "prediction": "all x.((RoomTemperature(x) & 70-75Federnheit(x)) -> AcceptableToMostSpecies(x))", "score": -1}
{"id": "eqasc_validation_604", "prediction": "all x.((RoomTemperature(x) & 70-75DegreesFahrenheit(x)) -> AcceptableToMostSpecies(x))", "score": -1}
{"id": "eqasc_validation_604", "prediction": "all x.((RoomTemperature(x) & 70-75DegreesFahrenheitOrSo)) -> AcceptableToMostSpecies(x))", "score": -1}
{"id": "eqasc_validation_604", "prediction": "all x.((RoomTemperature(x) & Temperature(x,70,75)) -> Acceptable(x))", "score": 0}
{"id": "eqasc_validation_604", "prediction": "all x.((RoomTemperature(x) & 70-75Degrees(x)) -> AcceptableToMostSpecies(x))", "score": -1}
{"id": "eqasc_validation_605", "prediction": "all x.(Butter(x) -> (Fat(x) & SolidAt(x,70) & SolidAt(x,75)))", "score": 0}
{"id": "eqasc_validation_605", "prediction": "all x.(Butter(x) -> (Fat(x) & SolidAt7075DegreesFahrenheit(x)))", "score": 0}
{"id": "eqasc_validation_605", "prediction": "all x.(Butter(x) -> (Fat(x) & SolidAt7075Federnheit(x)))", "score": 0}
{"id": "eqasc_validation_605", "prediction": "all x.(Butter(x) -> (Fat(x) & SolidAt7075(x)))", "score": 0}
{"id": "eqasc_validation_605", "prediction": "all x.(Butter(x) -> (Fat(x) & SolidAt70-75DegreesFahrenheit(x)))", "score": -1}
{"id": "eqasc_validation_605", "prediction": "all x.(Butter(x) -> (Fat(x,70) & Fat(x,75) & SolidAt(x,70) & SolidAt(x,75)))", "score": 0}
{"id": "eqasc_validation_605", "prediction": "all x.(Butter(x) -> (Fat(x) & SolidAt70(x) & SolidAt75(x)))", "score": 0}
{"id": "eqasc_validation_605", "prediction": "all x y.((Butter(x) & Fat(y)) -> (Fat(x,y) & SolidAt(y,70) & SolidAt(x,y,75)))", "score": 0}
{"id": "eqasc_validation_605", "prediction": "all x.(Butter(x) -> (Fat(x) & SolidAt7075Federheit(x)))", "score": 0}
{"id": "eqasc_validation_605", "prediction": "all x y.((Butter(x) & Fat(y)) -> (Fat(x,y) & SolidAt(y,70) & SolidAt(y,75)))", "score": 0}
{"id": "eqasc_validation_605", "prediction": "all x.(Butter(x) -> (Fat(x,70) & SolidAt(x,75)))", "score": 0}
{"id": "eqasc_validation_605", "prediction": "all x.(Butter(x) -> (Fat(x) & SolidAt(x,70,75)))", "score": 0}
{"id": "eqasc_validation_605", "prediction": "all x.(Butter(x) -> (Fat(x) & SolidAt7075DegreesFederheit(x)))", "score": 0}
{"id": "eqasc_validation_605", "prediction": "all x.(Butter(x) -> (Fat(x) & SolidAt7075DegreesFedernheit(x)))", "score": 0}
{"id": "eqasc_validation_606", "prediction": "all x.((RoomTemperature(x) & (40-80Federnheit(x) | 5-27Celsius(x))) -> BestForStorage(x))", "score": -1}
{"id": "eqasc_validation_606", "prediction": "all x.((RoomTemperature(x) & (40Federnheit(x) | 80Federnheit(x) | 5Celsius(x))) -> BestForStorage(x))", "score": 0}
{"id": "eqasc_validation_606", "prediction": "all x.((RoomTemperature(x) & (40Federnheit(x) | 80Federnheit(x) | 5Federnheit(x) | 27Celsius(x))) -> BestForStorage(x))", "score": 0}
{"id": "eqasc_validation_606", "prediction": "all x.((RoomTemperature(x) & (40Federnheit(x) | 80Federnheit(x) | 5Federnity(x) | 27Celsius(x))) -> BestForStorage(x))", "score": 0}
{"id": "eqasc_validation_606", "prediction": "all x.((RoomTemperature(x) & (40Federnheit(x) | 80Federnheit(x) | 5Federniture(x) | 27Celsius(x))) -> BestForStorage(x))", "score": 0}
{"id": "eqasc_validation_606", "prediction": "all x.((RoomTemperature(x) & Temperature(x,40) & Temperature(x,80) & Temperature(x,5) & Temperature(x,27)) -> BestForStorage(x))", "score": 0}
{"id": "eqasc_validation_606", "prediction": "all x.((RoomTemperature(x) & (40+80Federnheit(x) | 5+27Celsius(x))) -> BestForStorage(x))", "score": 0}
{"id": "eqasc_validation_606", "prediction": "all x.((RoomTemperature(x) & (40-80Federnheit(x) | (-5-27Celsius(x)))) -> BestForStorage(x))", "score": -1}
{"id": "eqasc_validation_606", "prediction": "all x.((RoomTemperature(x,40) & Temperature(x,80) & Temperature(x,5) & Temperature(x,27)) -> BestForStorage(x))", "score": 0}
{"id": "eqasc_validation_606", "prediction": "all x.((RoomTemperature(x) & Temperature(x,40) & Temperature(x,80)) | Temperature(x,5) & Temperature(x,27)) -> BestForStorage(x))", "score": -1}
{"id": "eqasc_validation_606", "prediction": "all x.((RoomTemperature(x) & (40Federnheit(x) | 80Federnheit(x) | 5Federnitia(x) | 27Celsius(x))) -> BestForStorage(x))", "score": 0}
{"id": "eqasc_validation_606", "prediction": "all x.((RoomTemperature(x) & (40-80Freshness(x) | 5-27Celsius(x))) -> BestForStorage(x))", "score": -1}
{"id": "eqasc_validation_606", "prediction": "all x.((RoomTemperature(x) & Between40And80Federnheit(x) & Between5And27Celsius(x)) -> BestForStorage(x))", "score": 0}
{"id": "eqasc_validation_606", "prediction": "all x.((RoomTemperature(x) & (40-80Freshheit(x) | 5-27Celsius(x))) -> BestForStorage(x))", "score": -1}
{"id": "eqasc_validation_607", "prediction": "all x.(Butter(x) -> (Fat(x) & SolidBetween(x,5) & SolidBetween(x,27)))", "score": 0}
{"id": "eqasc_validation_607", "prediction": "all x.(Butter(x) -> (Fat(x) & Solid(x) & Between(x,5) & Between(x,27)))", "score": 0}
{"id": "eqasc_validation_607", "prediction": "all x.(Butter(x) -> (Fat(x) & Solid(x) & Between5And27DegreesCelsius(x)))", "score": 0}
{"id": "eqasc_validation_607", "prediction": "all x.(Butter(x) -> (Fat(x) & SolidBetween(x,5 & 27)))", "score": -1}
{"id": "eqasc_validation_607", "prediction": "all x.(Butter(x) -> (Fat(x) & SolidBetween(x,5,27)))", "score": 0}
{"id": "eqasc_validation_607", "prediction": "all x.(Butter(x) -> (Fat(x) & Solid(x) & Between(x,5 & Between(x,27)))", "score": -1}
{"id": "eqasc_validation_607", "prediction": "all x.(Butter(x) -> (Fat(x) & Solid(x,5) & Solid(x,27)))", "score": 0}
{"id": "eqasc_validation_607", "prediction": "all x.(Butter(x) -> (Fat(x) & Solid(x,5 & 27)))", "score": -1}
{"id": "eqasc_validation_607", "prediction": "all x.(Butter(x) -> (Fat(x) & Solid(x) & Between(x,5,27)))", "score": 0}
{"id": "eqasc_validation_608", "prediction": "all x.((Butter(x) & SolidAtRoomTemperature(x) & MostlySaturated(x)) -> SolidAtRoomTemperature(x))", "score": 0}
{"id": "eqasc_validation_608", "prediction": "all x.((Butter(x) & SolidAtRoomTemperature(x)) -> Saturated(x))", "score": 0}
{"id": "eqasc_validation_608", "prediction": "all x.((Butter(x) & SolidAtRoomTemperature(x)) -> MostlySaturated(x))", "score": 0}
{"id": "eqasc_validation_608", "prediction": "all x.((Butter(x) & SolidAtRoomTemperature(x) & Saturated(x)) -> SolidAtRoomTemperature(x))", "score": 0}
{"id": "eqasc_validation_608", "prediction": "all x.(Butter(x) -> (SolidAtRoomTemperature(x) & MostlySaturated(x)))", "score": 0}
{"id": "eqasc_validation_608", "prediction": "all x.(Butter(x) -> (SolidAtRoomTemperature(x) & Saturated(x)))", "score": 0}
{"id": "eqasc_validation_608", "prediction": "all x y.((Butter(x) & RoomTemperature(y)) -> (Solid(x,y) & Saturated(x)))", "score": 0}
{"id": "eqasc_validation_608", "prediction": "all x.((Butter(x) & SolidAtRoomTemperature(x)) -> PrimarilySaturated(x))", "score": 0}
{"id": "eqasc_validation_608", "prediction": "all x y z.((Butter(x) & RoomTemperature(y) & RoomTemperature(z)) -> (Solid(x,y) & Saturated(x)))", "score": 0}
{"id": "eqasc_validation_608", "prediction": "all x y.((Butter(x) & RoomTemperature(y)) -> (Solid(x,y) & MostlySaturated(x)))", "score": 0}
{"id": "eqasc_validation_608", "prediction": "all x y.((Butter(x) & RoomTemperature(y)) -> (SolidAt(x,y) & Saturated(x)))", "score": 0}
{"id": "eqasc_validation_608", "prediction": "all x y.((Butter(x) & RoomTemperature(y)) -> SolidAt(x,y))", "score": 0}
{"id": "eqasc_validation_608", "prediction": "all x y.((Butter(x) & RoomTemperature(y) & SolidAt(x,y)) -> Saturated(x))", "score": 0}
{"id": "eqasc_validation_608", "prediction": "all x y z.((Butter(x) & RoomTemperature(y) & RoomTemperature(z)) -> (Solid(x,y) & MostlySaturated(x)))", "score": 0}
{"id": "eqasc_validation_608", "prediction": "all x y.((Butter(x) & RoomTemperature(y)) -> (SolidAt(x,y) & MostlySaturated(x)))", "score": 0}
{"id": "eqasc_validation_608", "prediction": "all x y z.((Butter(x) & RoomTemperature(y) & RoomTemperature(z)) -> (Solid(x,y) & Saturated(x,z)))", "score": 0}
{"id": "eqasc_validation_609", "prediction": "all x.(Solid(x) -> (ComposedOfNearlyPackedMolecules(x)))", "score": 1}
{"id": "eqasc_validation_609", "prediction": "all x.(Solid(x) -> ComposedOfNearlyPackedMolecules(x))", "score": 1}
{"id": "eqasc_validation_609", "prediction": "all x y.((Solid(x) & Molecule(y)) -> CloselyPacked(x,y))", "score": 0}
{"id": "eqasc_validation_609", "prediction": "all x y.((Solid(x) & Molecule(y)) -> CloselyPackaged(x,y))", "score": 0}
{"id": "eqasc_validation_609", "prediction": "all x.(Solid(x) -> (ComposedOfNearlyPackagedMolecules(x)))", "score": 1}
{"id": "eqasc_validation_609", "prediction": "all x y.((Solid(x) & Molecule(y)) -> (ComposedOf(x,y) & CloselyPacked(x)))", "score": 0}
{"id": "eqasc_validation_609", "prediction": "all x y.((Solid(x) & Molecule(y)) -> ComposedOf(x,y))", "score": 0}
{"id": "eqasc_validation_609", "prediction": "all x y.((Solid(x) & Molecule(y)) -> (ComposedOf(x,y) & CloselyPackaged(x)))", "score": 0}
{"id": "eqasc_validation_609", "prediction": "all x.(Solid(x) -> ComposedOfNearlyPackagedMolecules(x))", "score": 1}
{"id": "eqasc_validation_609", "prediction": "all x.(Solid(x) -> (ComposedOfNearlyPackedMolecules(x) & CloselyPackedMolecules(x)))", "score": 2}
{"id": "eqasc_validation_609", "prediction": "all x.(Solid(x) -> (ComposedOfCloselyPackedMolecules(x)))", "score": 1}
{"id": "eqasc_validation_609", "prediction": "all x y.((Solid(x) & Molecule(y)) -> (ComposedOf(x,y) & CloselyPacked(y)))", "score": 0}
{"id": "eqasc_validation_609", "prediction": "all x y.((Solid(x) & Molecule(y)) -> (ComposedOf(x,y) & CloselyPackaged(y)))", "score": 0}
{"id": "eqasc_validation_609", "prediction": "all x.(Solid(x) -> (ComposedOfCloselyPackagedMolecules(x)))", "score": 1}
{"id": "eqasc_validation_609", "prediction": "all x y z.((Solid(x) & Molecule(y) & Molecule(z)) -> ComposedOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_610", "prediction": "all x.(Butter(x) -> (Fat(x) & CloselyPackagedMolecules(x) & RoomTemperature(x)))", "score": 0}
{"id": "eqasc_validation_610", "prediction": "all x.(Butter(x) -> (Fat(x) & ComposedOfNearlyPackedMolecules(x) & RoomTemperature(x)))", "score": 3}
{"id": "eqasc_validation_610", "prediction": "all x.(Butter(x) -> (Fat(x) & ComposedOfCloselyPackedMolecules(x) & RoomTemperature(x)))", "score": 1}
{"id": "eqasc_validation_610", "prediction": "all x.(Butter(x) -> (Fat(x) & CloselyPackedMolecules(x) & RoomTemperature(x)))", "score": 1}
{"id": "eqasc_validation_610", "prediction": "all x.(Butter(x) -> (Fat(x) & ComposedOfCloselyPackagedMolecules(x) & RoomTemperature(x)))", "score": 1}
{"id": "eqasc_validation_610", "prediction": "all x.(Butter(x) -> (Fat(x) & ComposedOfNearlyPackedMoleculesAtRoomTemperature(x)))", "score": 0}
{"id": "eqasc_validation_610", "prediction": "all x.(Butter(x) -> (Fat(x) & ContainsNearlyPackedMolecules(x) & RoomTemperature(x)))", "score": 0}
{"id": "eqasc_validation_610", "prediction": "all x.(Butter(x) -> (Fat(x) & ComposedOfNearlyPackagedMolecules(x) & RoomTemperature(x)))", "score": 2}
{"id": "eqasc_validation_610", "prediction": "all x.(Butter(x) -> (Fat(x) & ComposedOfCloselyPackedMoleculesAtRoomTemperature(x)))", "score": 0}
{"id": "eqasc_validation_610", "prediction": "all x.(Butter(x) -> (Fat(x) & ComposedOfConsistentlyPackagedMolecules(x) & RoomTemperature(x)))", "score": 0}
{"id": "eqasc_validation_610", "prediction": "all x.(Butter(x) -> (Fat(x) & ContainsCloselyPackedMolecules(x) & RoomTemperature(x)))", "score": 0}
{"id": "eqasc_validation_610", "prediction": "all x.(Butter(x) -> (Fat(x) & ComposedOfCloselyPackagedMoleculesAtRoomTemperature(x)))", "score": 0}
{"id": "eqasc_validation_610", "prediction": "all x.(Butter(x) -> (Fat(x) & CloselyPacked(x) & RoomTemperature(x)))", "score": 0}
{"id": "eqasc_validation_610", "prediction": "all x.(Butter(x) -> (Fat(x) & CloselyPackagedMoleculesAtRoomTemperature(x)))", "score": 0}
{"id": "eqasc_validation_611", "prediction": "all x.(Bile(x) -> ReducesAcidityOfFood(x))", "score": 0}
{"id": "eqasc_validation_611", "prediction": "all x y.((Bile(x) & Food(y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_611", "prediction": "all x y z.((Bile(x) & Food(y) & AcidicStomach(z)) -> ReducesAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_611", "prediction": "all x y.((Bile(x) & Food(y) & EntersFromAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_611", "prediction": "all x y.((Bile(x) & Food(y) & EntersFromHighlyAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_611", "prediction": "all x y.((Bile(x) & Food(y) & EntersFromHighlyAcidicStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_611", "prediction": "all x y.((Bile(x) & Food(y) & EnteringFromAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_611", "prediction": "all x y.((Bile(x) & Food(y) & EnteringFromHighlyAcidicStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_611", "prediction": "all x y.((Bile(x) & Food(y) & EntersFrom(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_611", "prediction": "all x y.((Bile(x) & Food(y) & EnteringFromHighlyAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_611", "prediction": "all x y.((Bile(x) & Food(y) & EnteringFrom(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_611", "prediction": "all x y z.((Bile(x) & Food(y) & AcidicStomach(z) & EntersFrom(x,y,z)) -> ReducesAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_611", "prediction": "all x y z.((Bile(x) & Food(y) & AcidicStomach(z) & EntersFrom(x,y,z)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_611", "prediction": "all x y.((Bile(x) & Food(y) & Enters(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_612", "prediction": "all x y.((Gallbladder(x) & Meal(y)) -> ReleasesBile(x,y))", "score": 0}
{"id": "eqasc_validation_612", "prediction": "all x y z.((Gallbladder(x) & Meal(y) & BileDuct(z)) -> Releases(x,y,z))", "score": 0}
{"id": "eqasc_validation_612", "prediction": "all x y.((Galbladder(x) & Meal(y)) -> ReleasesBile(x,y))", "score": 0}
{"id": "eqasc_validation_612", "prediction": "all x y.((Gallbladder(x) & Meal(y)) -> ReleasesBileThroughBileDuct(x,y))", "score": 0}
{"id": "eqasc_validation_612", "prediction": "all x y z.((Gallbladder(x) & Meal(y) & Bile(z)) -> ReleasesThroughPassage(x,z))", "score": 0}
{"id": "eqasc_validation_612", "prediction": "all x y z.((Gallbladder(x) & Meal(y) & BileDuct(z)) -> Releases(x,z))", "score": 0}
{"id": "eqasc_validation_612", "prediction": "all x y.((Gallbladder(x) & Meal(y) & ReleasesBile(x,y)) -> BileDuct(x))", "score": 0}
{"id": "eqasc_validation_612", "prediction": "all x.((Gallbladder(x) & Meal(x)) -> ReleasesBile(x))", "score": 0}
{"id": "eqasc_validation_612", "prediction": "all x y z.((Galbladder(x) & Meal(y) & BileDuct(z)) -> Releases(x,y,z))", "score": 0}
{"id": "eqasc_validation_612", "prediction": "all x y z.((Gallbladder(x) & Meal(y) & Bile(z)) -> ReleasesThroughPassageway(x,z))", "score": 0}
{"id": "eqasc_validation_612", "prediction": "all x y z.((Gallbladder(x) & Meal(y) & BilePathway(z)) -> Releases(x,y,z))", "score": 0}
{"id": "eqasc_validation_612", "prediction": "all x y z.((Gallbladder(x) & Meal(y) & BileDuct(z)) -> ReleasesThrough(x,z))", "score": 0}
{"id": "eqasc_validation_613", "prediction": "all x.(Gallbladder(x) -> ReducesAcidityOfFood(x))", "score": 0}
{"id": "eqasc_validation_613", "prediction": "all x.(Galbladder(x) -> ReducesAcidityOfFood(x))", "score": 0}
{"id": "eqasc_validation_613", "prediction": "all x y.((Gallbladder(x) & Food(y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_613", "prediction": "all x y.((Galbladder(x) & Food(y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_613", "prediction": "all x.(Gallbladder(x) -> ReducesAcidity(x))", "score": 0}
{"id": "eqasc_validation_613", "prediction": "all x.(GallbladderFunction(x) -> ReducesAcidityOfFood(x))", "score": 0}
{"id": "eqasc_validation_613", "prediction": "all x.(Galbladder(x) -> ReducesAcidity(x))", "score": 0}
{"id": "eqasc_validation_613", "prediction": "all x y z.((Gallbladder(x) & Food(y) & Food(z)) -> ReducesAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_613", "prediction": "all x.(GalbladderFunction(x) -> ReducesAcidityOfFood(x))", "score": 0}
{"id": "eqasc_validation_613", "prediction": "all x y z.((Gallbladder(x) & Food(y) & Acidity(z)) -> Reduces(x,y,z))", "score": 0}
{"id": "eqasc_validation_613", "prediction": "all x.(Gallbladder(x) -> ReduceAcidityOfFood(x))", "score": 0}
{"id": "eqasc_validation_613", "prediction": "all x y z.((Gallbladder(x) & Food(y) & Acidity(z)) -> Reduces(x,y))", "score": 0}
{"id": "eqasc_validation_613", "prediction": "all x y z.((Gallbladder(x) & Food(y) & Acidity(z)) -> Reduce(x,y,z))", "score": 0}
{"id": "eqasc_validation_613", "prediction": "all x.(Gallbladder(x) -> (ReducesAcidityOfFood(x)))", "score": 0}
{"id": "eqasc_validation_614", "prediction": "all x.((Fluid(x) & MadeByLiver(x)) -> StoredInGallbladder(x))", "score": 0}
{"id": "eqasc_validation_614", "prediction": "all x.((Fluid(x) & MadeByLiver(x)) -> StoredInGalbladder(x))", "score": 0}
{"id": "eqasc_validation_614", "prediction": "all x y z.((Bile(x) & Liver(y) & Gallbladder(z)) -> (MadeBy(x,y) & StoredIn(x,z)))", "score": 0}
{"id": "eqasc_validation_614", "prediction": "all x y.((Bile(x) & Liver(y)) -> StoredInGallbladder(x,y))", "score": 0}
{"id": "eqasc_validation_614", "prediction": "all x.((Bile(x) & MadeByLiver(x)) -> StoredInGallbladder(x))", "score": 0}
{"id": "eqasc_validation_614", "prediction": "all x y.((Bile(x) & Liver(y)) -> StoredInGalbladder(x,y))", "score": 0}
{"id": "eqasc_validation_614", "prediction": "all x y.((Fluid(x) & Liver(y)) -> StoredInGallbladder(x,y))", "score": 0}
{"id": "eqasc_validation_614", "prediction": "all x y z.((Bile(x) & Liver(y) & Gallbladder(z)) -> (MakesFluid(x,y) & StoredIn(x,z)))", "score": 0}
{"id": "eqasc_validation_614", "prediction": "all x.((Bile(x) & MadeByLiver(x)) -> StoredInGalbladder(x))", "score": 0}
{"id": "eqasc_validation_614", "prediction": "all x.(Bile(x) -> (MadeByLiver(x) & StoredInGallbladder(x)))", "score": 0}
{"id": "eqasc_validation_614", "prediction": "all x y z.((Bile(x) & Liver(y) & Gallbladder(z)) -> (MadeByLiver(x,y) & StoredIn(x,z)))", "score": 0}
{"id": "eqasc_validation_614", "prediction": "all x y z.((Fluid(x) & Liver(y) & Gallbladder(z)) -> (MadeBy(x,y) & StoredIn(x,z)))", "score": 0}
{"id": "eqasc_validation_614", "prediction": "all x y z.((Bile(x) & Liver(y) & Gallbladder(z)) -> (Makes(x,y) & StoredIn(x,z)))", "score": 0}
{"id": "eqasc_validation_615", "prediction": "all x y.((Gallbladder(x) & Food(y)) -> StoresFluid(x,y))", "score": 0}
{"id": "eqasc_validation_615", "prediction": "all x.(Gallbladder(x) -> (StoresFluid(x) & ReducesAcidityOfFood(x)))", "score": 0}
{"id": "eqasc_validation_615", "prediction": "all x y z.((Gallbladder(x) & Fluid(y) & Food(z) & Stores(x,y)) -> ReducesAcidity(x,z))", "score": 0}
{"id": "eqasc_validation_615", "prediction": "all x.(Galbladder(x) -> (StoresFluid(x) & ReducesAcidityOfFood(x)))", "score": 0}
{"id": "eqasc_validation_615", "prediction": "all x y z.((Gallbladder(x) & Fluid(y) & Food(z)) -> (Stores(x,y) & ReducesAcidity(x,z)))", "score": 0}
{"id": "eqasc_validation_615", "prediction": "all x y.((Galbladder(x) & Food(y)) -> StoresFluid(x,y))", "score": 0}
{"id": "eqasc_validation_615", "prediction": "all x y z.((Gallbladder(x) & Fluid(y) & Food(z)) -> (Stores(x,y) & ReducesAcidity(y,z)))", "score": 0}
{"id": "eqasc_validation_615", "prediction": "all x.(Gallbladder(x) -> StoresFluid(x))", "score": 0}
{"id": "eqasc_validation_615", "prediction": "all x y z.((Gallbladder(x) & Fluid(y) & Food(z) & Stores(x,y)) -> ReducesAcidity(y,z))", "score": 0}
{"id": "eqasc_validation_615", "prediction": "all x y z.((Gallbladder(x) & Fluid(y) & Food(z)) -> StoresAndReducesAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_615", "prediction": "all x y z.((Galbladder(x) & Fluid(y) & Food(z) & Stores(x,y)) -> ReducesAcidity(x,z))", "score": 0}
{"id": "eqasc_validation_615", "prediction": "all x y.((Gallbladder(x) & Food(y)) -> (StoresFluid(x,y) & ReducesAcidity(x,y)))", "score": 0}
{"id": "eqasc_validation_615", "prediction": "all x y z.((Galbladder(x) & Fluid(y) & Food(z)) -> (Stores(x,y) & ReducesAcidity(x,z)))", "score": 0}
{"id": "eqasc_validation_615", "prediction": "all x y z.((Gallbladder(x) & Fluid(y) & Food(z)) -> Stores(x,y))", "score": 0}
{"id": "eqasc_validation_615", "prediction": "all x y.((Gallbladder(x) & Food(y) & StoresFluid(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_615", "prediction": "all x y z.((Gallbladder(x) & Fluid(y) & Food(z)) -> ReducesAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_616", "prediction": "all x y z.((Bile(x) & Gallbladder(y) & BileDuct(z)) -> ExitsBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_616", "prediction": "all x y.((Bile(x) & Gallbladder(y)) -> ExitsBy(x,y))", "score": 0}
{"id": "eqasc_validation_616", "prediction": "all x y.((Bile(x) & Gallbladder(y)) -> Exit(x,y))", "score": 0}
{"id": "eqasc_validation_616", "prediction": "all x y z.((Bile(x) & Gallbladder(y) & Duct(z)) -> ExitsBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_616", "prediction": "all x y.((Bile(x) & Gallbladder(y)) -> ExitsByBileDuct(x,y))", "score": 0}
{"id": "eqasc_validation_616", "prediction": "all x y.((Bile(x) & Gallbladder(y)) -> ExitsByCommonBileDuct(x,y))", "score": 0}
{"id": "eqasc_validation_616", "prediction": "all x y.((Bile(x) & Gallbladder(y) & CommonBileDuct(x)) -> ExitsBy(x,y))", "score": 0}
{"id": "eqasc_validation_616", "prediction": "all x y z.((Bile(x) & Gallbladder(y) & CommonBileDuct(z)) -> ExitsBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_616", "prediction": "all x y z.((Bile(x) & Gallbladder(y) & BileDuct(z)) -> Exit(x,y,z))", "score": 0}
{"id": "eqasc_validation_616", "prediction": "all x y.((Bile(x) & Gallbladder(y) & CommonBileDuct(x,y)) -> ExitsBy(x,y))", "score": 0}
{"id": "eqasc_validation_616", "prediction": "all x.(Bile(x) -> ExitsGalbladderByCommonBileDuct(x))", "score": 0}
{"id": "eqasc_validation_616", "prediction": "all x y.((Bile(x) & Gallbladder(y)) -> ExitsByGallbladder(x,y))", "score": 0}
{"id": "eqasc_validation_616", "prediction": "all x y z.((Bile(x) & Gallbladder(y) & BileDuct(z)) -> Exits(x,y,z))", "score": 0}
{"id": "eqasc_validation_617", "prediction": "all x y.((Gallbladder(x) & Food(y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_617", "prediction": "all x.(Gallbladder(x) -> ReducesAcidityOfFood(x))", "score": 0}
{"id": "eqasc_validation_617", "prediction": "all x y z.((Gallbladder(x) & Food(y) & AcidicStomach(z)) -> ReducesAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_617", "prediction": "all x y.((Gallbladder(x) & Food(y) & EntersFromHighlyAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_617", "prediction": "all x y.((Gallbladder(x) & Food(y) & EntersFromAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_617", "prediction": "all x y.((Gallbladder(x) & Food(y) & EntersFromHighlyAcidicStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_617", "prediction": "all x y.((Galbladder(x) & Food(y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_617", "prediction": "all x y z.((Galbladder(x) & Food(y) & AcidicStomach(z)) -> ReducesAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_617", "prediction": "all x y.((Galbladder(x) & Food(y) & EntersFromHighlyAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_617", "prediction": "all x y.((Galbladder(x) & Food(y) & EntersFromAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_617", "prediction": "all x y.((Gallbladder(x) & Food(y) & EnteringFromAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_617", "prediction": "all x y.((Gallbladder(x) & Food(y) & EnteringFromHighlyAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_617", "prediction": "all x.(Galbladder(x) -> ReducesAcidityOfFood(x))", "score": 0}
{"id": "eqasc_validation_617", "prediction": "all x y z.((Gallbladder(x) & Food(y) & AcidicStomach(z) & EntersFrom(x,y,z)) -> ReducesAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_617", "prediction": "all x y z.((Gallbladder(x) & Food(y) & AcidicStomach(z) & EntersFrom(x,y,z)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_617", "prediction": "all x y z.((Gallbladder(x) & Food(y) & AcidicStomach(z)) -> ReducesAcidityOfFood(x,y,z))", "score": 0}
{"id": "eqasc_validation_618", "prediction": "all x y.((Bile(x) & Liver(y)) -> (ProducedBy(x,y) & HelpsFatDigestion(x) & HelpsAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_618", "prediction": "all x.((Bile(x) & ProducedByLiver(x)) -> (HelpsFatDigestion(x) & HelpsAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_618", "prediction": "all x.(Bile(x) -> (ProducedByLiver(x) & HelpsFatDigestion(x) & HelpsAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_618", "prediction": "all x.((Bile(x) & ProducedByLiver(x)) -> HelpsFatDigestionAndAbsorption(x))", "score": 0}
{"id": "eqasc_validation_618", "prediction": "all x.((Bile(x) & ProducedByLiver(x)) -> (HelpsFatDigestion(x) & HelpsAbsorbtion(x)))", "score": 0}
{"id": "eqasc_validation_618", "prediction": "all x y.((Bile(x) & Liver(y)) -> (ProducedBy(x,y) & HelpsFatDigestion(x) & HelpsAbsorbtion(x)))", "score": 0}
{"id": "eqasc_validation_618", "prediction": "all x y.((Bile(x) & Liver(y) & ProducedBy(x,y)) -> (HelpsFatDigestion(x) & HelpsAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_618", "prediction": "all x y.((Bile(x) & Liver(y)) -> (ProducedBy(x,y) & FatDigestion(x) & FatAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_618", "prediction": "all x y.((Bile(x) & Liver(y)) -> (ProducedBy(x,y) & HelpsFatDigestionAndAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_618", "prediction": "all x.(Bile(x) -> (ProducedByLiver(x) & HelpsFatDigestionAndAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_618", "prediction": "all x y.((Bile(x) & Liver(y)) -> (ProducedBy(x,y) & HelpsFatDigestment(x) & HelpsAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_619", "prediction": "all x y.((Liver(x) & Food(y)) -> HelpsReduceAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_619", "prediction": "all x y.((Liver(x) & Food(y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_619", "prediction": "all x.(Liver(x) -> HelpsReduceAcidityOfFood(x))", "score": 0}
{"id": "eqasc_validation_619", "prediction": "all x y z.((Liver(x) & Food(y) & Food(z)) -> HelpsReduceAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_619", "prediction": "all x.(Liver(x) -> ReducesAcidityOfFood(x))", "score": 0}
{"id": "eqasc_validation_619", "prediction": "all x y.((Liver(x) & Food(y) & HelpsReduceAcidity(x,y)) -> HelpsReduceAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_619", "prediction": "all x y z.((Liver(x) & Food(y) & Food(z)) -> ReducesAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_619", "prediction": "all x y.((Liver(x) & Food(y) & ReducesAcidity(x,y)) -> HelpsReduceAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_619", "prediction": "all x y z.((Liver(x) & Food(y) & Food(z) & HelpsReduceAcidity(x,y,z)) -> HelpsReduceAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_619", "prediction": "all x y z.((Liver(x) & Food(y) & Acidity(z)) -> HelpsReduce(x,y,z))", "score": 0}
{"id": "eqasc_validation_619", "prediction": "all x y z.((Liver(x) & Food(y) & Food(z) & ReducesAcidity(x,y,z)) -> HelpsReduceAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_619", "prediction": "all x y.((Liver(x) & Food(y)) -> HelpsReduceAcidityOfFood(x,y))", "score": 0}
{"id": "eqasc_validation_619", "prediction": "all x y z.((Liver(x) & Food(y) & Food(z) & HelpsReduceAcidity(x,y,z)) -> HelpsReduceAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_619", "prediction": "all x y z.((Liver(x) & Food(y) & Food(z) & ReducesAcidity(x,y,z)) -> HelpsReduceAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_619", "prediction": "all x y z.((Liver(x) & Food(y) & Acidity(z) & HelpsReduce(x,y,z)) -> HelpsReduce(x,y,z))", "score": 0}
{"id": "eqasc_validation_619", "prediction": "all x y.((Liver(x) & Food(y)) -> ReducesAcidityOfFood(x,y))", "score": 0}
{"id": "eqasc_validation_620", "prediction": "all x.(BileAcid(x) -> UsedByBodyToDigestFats(x))", "score": 0}
{"id": "eqasc_validation_620", "prediction": "all x y.((BileAcid(x) & Body(y)) -> DigestsFats(x,y))", "score": 0}
{"id": "eqasc_validation_620", "prediction": "all x y.((BileAcid(x) & Body(y)) -> UsedToDigestFats(x,y))", "score": 0}
{"id": "eqasc_validation_620", "prediction": "all x y z.((BileAcid(x) & Body(y) & Fat(z)) -> Digests(x,y,z))", "score": 0}
{"id": "eqasc_validation_620", "prediction": "all x y z.((BileAcid(x) & Body(y) & Fat(z)) -> UsedToDigest(x,y,z))", "score": 0}
{"id": "eqasc_validation_620", "prediction": "all x.(BileAcid(x) -> UsedToDigestFats(x))", "score": 0}
{"id": "eqasc_validation_620", "prediction": "all x y.((BuleAcid(x) & Body(y)) -> DigestsFats(x,y))", "score": 0}
{"id": "eqasc_validation_620", "prediction": "all x.(BileAcid(x) -> DigestsFats(x))", "score": 0}
{"id": "eqasc_validation_620", "prediction": "all x y.((BileAcid(x) & Body(y)) -> DigestFats(x,y))", "score": 0}
{"id": "eqasc_validation_620", "prediction": "all x y.((Body(x) & BileAcid(y)) -> DigestsFats(x,y))", "score": 0}
{"id": "eqasc_validation_620", "prediction": "all x y.((BuleAcid(x) & Body(y)) -> UsedToDigestFats(x,y))", "score": 0}
{"id": "eqasc_validation_620", "prediction": "all x y z.((BileAcid(x) & Body(y) & Fats(z)) -> Digests(x,y,z))", "score": 0}
{"id": "eqasc_validation_620", "prediction": "all x y z.((BuleAcid(x) & Body(y) & Fat(z)) -> Digests(x,y,z))", "score": 0}
{"id": "eqasc_validation_620", "prediction": "all x y.((BileAcid(x) & Body(y) & DigestsFats(x,y)) -> UsedBy(x,y))", "score": 0}
{"id": "eqasc_validation_620", "prediction": "all x y z.((BileAcid(x) & Body(y) & Fat(z)) -> Digestion(x,y,z))", "score": 0}
{"id": "eqasc_validation_621", "prediction": "all x y.((StomachAcidity(x) & Fats(y)) -> Digests(x,y))", "score": 0}
{"id": "eqasc_validation_621", "prediction": "all x.(StomachAcidityHelpsDigestFats(x) -> DigestsFats(x))", "score": 0}
{"id": "eqasc_validation_621", "prediction": "all x.(StomachAcidity(x) -> DigestsFats(x))", "score": 0}
{"id": "eqasc_validation_621", "prediction": "all x y z.((StomachAcidity(x) & Fats(y) & Fats(z)) -> Digests(x,y,z))", "score": 0}
{"id": "eqasc_validation_621", "prediction": "all x y.((StomachAcidity(x) & Fats(y)) -> HelpsDigest(x,y))", "score": 0}
{"id": "eqasc_validation_621", "prediction": "all x.(StomachAcidityHelpsDigestFats(x) -> HelpsDigestFats(x))", "score": 0}
{"id": "eqasc_validation_621", "prediction": "all x y.((StomachAcidity(x) & Fat(y)) -> Digests(x,y))", "score": 0}
{"id": "eqasc_validation_621", "prediction": "all x.(StomachAcidity(x) -> HelpsDigestFats(x))", "score": 0}
{"id": "eqasc_validation_621", "prediction": "all x y z.((StomachAcidity(x) & Fat(y) & Fat(z)) -> Digests(x,y,z))", "score": 0}
{"id": "eqasc_validation_621", "prediction": "all x y.((StomachAcidity(x) & Fats(y) & Digests(x,y)) -> HelpsDigest(x,y))", "score": 0}
{"id": "eqasc_validation_621", "prediction": "all x y z.((StomachAcidity(x) & Fats(y) & Fats(z)) -> HelpsDigest(x,y,z))", "score": 0}
{"id": "eqasc_validation_621", "prediction": "all x y.((StomachAcidity(x) & Fat(y)) -> HelpsDigest(x,y))", "score": 0}
{"id": "eqasc_validation_621", "prediction": "all x y z.((StomachAcidity(x) & Fat(y) & Fat(z)) -> HelpsDigest(x,y,z))", "score": 0}
{"id": "eqasc_validation_621", "prediction": "all x y.((StomachAcidity(x) & Fats(y)) -> DigestsFats(x,y))", "score": 0}
{"id": "eqasc_validation_621", "prediction": "all x y.((StomachAcidity(x) & Fats(y) & Digests(x,y)) -> Digests(x,y))", "score": 0}
{"id": "eqasc_validation_621", "prediction": "all x.((StomachAcidity(x) & DigestsFats(x)) -> DigestsFats(x))", "score": 0}
{"id": "eqasc_validation_622", "prediction": "all x.(Bile(x) -> (SynthesizedByLiver(x) & ContainsHCO3Salts(x) & ContainsBilePigments(x)))", "score": 0}
{"id": "eqasc_validation_622", "prediction": "all x.(Bile(x) -> (SynthesizedByLiver(x) & ContainsHCO3(x) & ContainsBileSalts(x) & ContainsBilePigments(x)))", "score": 0}
{"id": "eqasc_validation_622", "prediction": "all x.((Bile(x) & SynthesizedByLiver(x)) -> (ContainsHCO3(x) & ContainsBileSalts(x) & ContainsBilePigments(x)))", "score": 0}
{"id": "eqasc_validation_622", "prediction": "all x.((Bile(x) & SynthesizedByLiver(x)) -> (ContainsHCO3Salts(x) & ContainsBilePigments(x)))", "score": 0}
{"id": "eqasc_validation_622", "prediction": "all x y.((Bile(x) & Liver(y)) -> (SynthesizedByLiver(x,y) & ContainsHCO3Salts(x) & ContainsBilePigments(x)))", "score": 0}
{"id": "eqasc_validation_622", "prediction": "all x y.((Bile(x) & Liver(y)) -> (SynthesizedByLiver(x,y) & ContainsHCO3(x) & ContainsBileSalts(x) & ContainsBilePigments(x)))", "score": 0}
{"id": "eqasc_validation_622", "prediction": "all x.((Bile(x) & SynthesizedByLiver(x)) -> (ContainsHCO3,ContainsBileSalts(x) & ContainsBilePigments(x)))", "score": -1}
{"id": "eqasc_validation_622", "prediction": "all x.(Bile(x) -> (SynthesizedByLiver(x) & ContainsHCO3SaltsAndBilePigments(x)))", "score": 0}
{"id": "eqasc_validation_622", "prediction": "all x.(Bile(x) -> (SynthesizedByLiver(x) & ContainsHCO3,BileSalts(x) & ContainsBilePigments(x)))", "score": -1}
{"id": "eqasc_validation_622", "prediction": "all x y.((Bile(x) & Liver(y)) -> (SynthesizedByLiver(x) & ContainsHCO3Salts(x) & ContainsBilePigments(x)))", "score": 0}
{"id": "eqasc_validation_622", "prediction": "all x y.((Bile(x) & Liver(y)) -> (SynthesizedByLiver(x,y) & ContainsHCO3SaltsAndBilePigments(x)))", "score": 0}
{"id": "eqasc_validation_622", "prediction": "(SynthesizedByLiver(bile) & ContainsHCO3Salts(bile) & ContainsBilePigments(bile))", "score": 0}
{"id": "eqasc_validation_622", "prediction": "all x y z.((Bile(x) & Liver(y) & HCO3Salts(z) & BilePigments(z)) -> SynthesizedByLiver(x,y,z))", "score": 0}
{"id": "eqasc_validation_623", "prediction": "all x y.((Liver(x) & Food(y) & EntersFromHighlyAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_623", "prediction": "all x y z.((Liver(x) & Food(y) & AcidicStomach(z)) -> ReducesAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_623", "prediction": "all x y.((Liver(x) & Food(y) & EntersFromAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_623", "prediction": "all x y.((Liver(x) & Food(y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_623", "prediction": "all x y.((Liver(x) & Food(y) & EnteringFromHighlyAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_623", "prediction": "all x y.((Liver(x) & Food(y) & EnteringFromAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_623", "prediction": "all x y.((Liver(x) & Food(y) & EntersFrom(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_623", "prediction": "all x.(Liver(x) -> ReducesAcidityOfFood(x))", "score": 0}
{"id": "eqasc_validation_623", "prediction": "all x y.((Liver(x) & Food(y) & EntersFromHighlyAcidicStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_623", "prediction": "all x y.((Liver(x) & Food(y) & EnteringFrom(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_623", "prediction": "all x y z.((Liver(x) & Food(y) & AcidicStomach(z) & EntersFrom(x,y,z)) -> ReducesAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_623", "prediction": "all x y.((Liver(x) & Food(y) & Enters(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_623", "prediction": "all x y z.((Liver(x) & Food(y) & AcidicStomach(z) & EntersFrom(x,y,z)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_623", "prediction": "all x y.((Liver(x) & Food(y) & EntersFromHighlyAcidStomach(x)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_623", "prediction": "all x y.((Liver(x) & Food(y) & HighlyAcidicStomach(x)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_623", "prediction": "all x y z.((Liver(x) & Food(y) & AcidicStomach(z)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_624", "prediction": "all x y.((BileAcid(x) & Food(y)) -> PoursIntoStomachToAbsorbFats(x,y))", "score": 0}
{"id": "eqasc_validation_624", "prediction": "all x y.((BileAcid(x) & Food(y)) -> PoursIntoStomach(x,y))", "score": 0}
{"id": "eqasc_validation_624", "prediction": "all x.((BileAcid(x) & PoursIntoStomach(x)) -> AbsorbsFatsFromFoods(x))", "score": 0}
{"id": "eqasc_validation_624", "prediction": "all x y z.((BileAcid(x) & Stomach(y) & Food(z)) -> PoursIntoToAbsorbFats(x,y,z))", "score": 0}
{"id": "eqasc_validation_624", "prediction": "all x y z.((BileAcid(x) & Stomach(y) & Food(z)) -> PoursInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_624", "prediction": "all x y.((BileAcid(x) & Stomach(y)) -> PoursIntoToAbsorbFats(x,y))", "score": 0}
{"id": "eqasc_validation_624", "prediction": "all x.((BileAcid(x) & PoursIntoStomach(x)) -> HelpsAbsorbFatsFromFoods(x))", "score": 0}
{"id": "eqasc_validation_624", "prediction": "all x y z.((BileAcid(x) & Stomach(y) & Food(z)) -> PoursInto(x,y))", "score": 0}
{"id": "eqasc_validation_624", "prediction": "all x y.((BileAcid(x) & Stomach(y)) -> PoursInto(x,y))", "score": 0}
{"id": "eqasc_validation_624", "prediction": "all x.((BileAcid(x) & PoursIntoStomach(x)) -> HelpsAbsorbFats(x))", "score": 0}
{"id": "eqasc_validation_624", "prediction": "all x y z.((BileAcid(x) & Stool(y) & Food(z)) -> PoursInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_624", "prediction": "all x y.((BileAcid(x) & Stool(y)) -> PoursInto(x,y))", "score": 0}
{"id": "eqasc_validation_625", "prediction": "all x.(Bile(x) -> (ReducesAcidity(x) & HelpsAbsorbFats(x)))", "score": 0}
{"id": "eqasc_validation_625", "prediction": "all x.(Bile(x) -> (ReducesAcidity(x) & AbsorbsFats(x)))", "score": 0}
{"id": "eqasc_validation_625", "prediction": "all x y.((Bile(x) & Food(y)) -> (ReducesAcidity(x,y) & HelpsAbsorbFats(x,y)))", "score": 0}
{"id": "eqasc_validation_625", "prediction": "all x y.((Bile(x) & Food(y)) -> (ReducesAcidity(x) & HelpsAbsorbFats(x,y)))", "score": 0}
{"id": "eqasc_validation_625", "prediction": "all x y.((Bile(x) & Food(y)) -> (ReducesAcidity(x,y) & AbsorbsFats(x,y)))", "score": 0}
{"id": "eqasc_validation_625", "prediction": "all x y.((Bile(x) & Food(y)) -> (ReducesAcidity(x) & AbsorbsFats(x,y)))", "score": 0}
{"id": "eqasc_validation_625", "prediction": "all x.(Bile(x) -> (ReducesAcidity(x) & HelpsAbsorbFatsFromFoods(x)))", "score": 0}
{"id": "eqasc_validation_625", "prediction": "all x y z.((Bile(x) & Acidity(y) & Fats(z)) -> (Reduces(x,y) & HelpsAbsorb(x,z)))", "score": 0}
{"id": "eqasc_validation_625", "prediction": "all x y z.((Bile(x) & Acidity(y) & Fats(z)) -> (Reduces(x,y) & Absorbs(x,z)))", "score": 0}
{"id": "eqasc_validation_625", "prediction": "all x.(Bile(x) -> (ReducesAcidity(x) & AbsorbsFatsFromFoods(x)))", "score": 0}
{"id": "eqasc_validation_625", "prediction": "all x y z.((Bile(x) & Acidity(y) & Fat(z)) -> (Reduces(x,y) & HelpsAbsorb(x,z)))", "score": 0}
{"id": "eqasc_validation_625", "prediction": "all x y z.((Bile(x) & Acidity(y) & Fat(z)) -> (Reduces(x,y) & Absorbs(x,z)))", "score": 0}
{"id": "eqasc_validation_625", "prediction": "all x y z.((Bile(x) & Acidity(y) & Fats(z)) -> (Reduces(x,y) & AbsorbsFromFood(x,z)))", "score": 0}
{"id": "eqasc_validation_626", "prediction": "all x y z.((Liver(x) & Food(y) & AcidicStomach(z)) -> ReducesAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_626", "prediction": "all x y.((Liver(x) & Food(y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_626", "prediction": "all x y.((Liver(x) & Food(y) & EntersFromHighlyAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_626", "prediction": "all x y.((Liver(x) & Food(y) & EntersFromAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_626", "prediction": "all x y z.((Liver(x) & Food(y) & AcidicStomach(z) & EntersFrom(x,y,z)) -> ReducesAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_626", "prediction": "all x y z.((Liver(x) & Food(y) & AcidicStomach(z)) -> ReducesAcidityOfFood(x,y,z))", "score": 0}
{"id": "eqasc_validation_626", "prediction": "all x y.((Liver(x) & FoodEntry(y) & HighlyAcidicStomach(y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_626", "prediction": "all x y.((Liver(x) & Food(y) & EnteringFromAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_626", "prediction": "all x y.((Liver(x) & Food(y) & HighlyAcidicStomach(y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_626", "prediction": "all x y.((Liver(x) & Food(y) & EnteringFromHighlyAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_626", "prediction": "all x y z.((Liver(x) & Food(y) & AcidicStomach(z) & EnteringFrom(x,y,z)) -> ReducesAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_626", "prediction": "all x y z.((Liver(x) & Food(y) & AcidicStomach(z) & EntersFrom(x,y,z)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_626", "prediction": "all x y.((Liver(x) & Food(y) & EntersFromHighlyAcidicStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_626", "prediction": "all x y z.((Liver(x) & Food(y) & HighlyAcidicStomach(z)) -> ReducesAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_626", "prediction": "all x y z.((Liver(x) & Food(y) & AcidicStomach(z) & EntersFrom(x,y,z)) -> ReducesAcidityOfFood(x,y,z))", "score": 0}
{"id": "eqasc_validation_626", "prediction": "all x y.((Liver(x) & Food(y) & EntersFromHighlyAcidStomach(x,y)) -> ReducesAcidityOfFood(x,y))", "score": 0}
{"id": "eqasc_validation_627", "prediction": "all x.(Bile(x) -> AbsorbsFats(x))", "score": 0}
{"id": "eqasc_validation_627", "prediction": "all x y.((Bile(x) & Fat(y)) -> Absorbs(x,y))", "score": 0}
{"id": "eqasc_validation_627", "prediction": "all x y.((Bile(x) & Fats(y)) -> Absorbs(x,y))", "score": 0}
{"id": "eqasc_validation_627", "prediction": "all x y z.((Bile(x) & Fat(y) & Fat(z)) -> Absorbs(x,y,z))", "score": 0}
{"id": "eqasc_validation_627", "prediction": "all x y z.((Bile(x) & Fats(y) & Fats(z)) -> Absorbs(x,y,z))", "score": 0}
{"id": "eqasc_validation_627", "prediction": "all x y z.((Bile(x) & Fat(y) & Fat(z)) -> Absorbs(x,y))", "score": 0}
{"id": "eqasc_validation_627", "prediction": "all x y.((bile(x) & Fat(y)) -> Absorbs(x,y))", "score": 0}
{"id": "eqasc_validation_627", "prediction": "all x y z.((Bile(x) & Fats(y) & Fats(z)) -> Absorbs(x,y))", "score": 0}
{"id": "eqasc_validation_627", "prediction": "all x y.((bile(x) & Fats(y)) -> Absorbs(x,y))", "score": 0}
{"id": "eqasc_validation_627", "prediction": "all x y z.((Bile(x) & Fats(y) & Fat(z)) -> Absorbs(x,y,z))", "score": 0}
{"id": "eqasc_validation_628", "prediction": "all x.((Bile(x) & Liver(x)) -> (ContainsBileSalts(x) & ContainsManyOrganicSubstances(x) & -ContainsEnzymes(x)))", "score": 0}
{"id": "eqasc_validation_628", "prediction": "all x.((Bile(x) & Liver(x)) -> (ContainsBileSalts(x) & ContainsOtherOrganicSubstances(x) & -ContainsEnzymes(x)))", "score": 0}
{"id": "eqasc_validation_628", "prediction": "all x.(Bile(x) -> (Liver(x) & ContainsBileSalts(x) & ContainsManyOrganicSubstances(x) & -ContainsEnzymes(x)))", "score": 0}
{"id": "eqasc_validation_628", "prediction": "all x.((Bile(x) & Liver(x)) -> (ContainsBileSalts(x) & ContainsOrganicSubstances(x) & -ContainsEnzymes(x)))", "score": 0}
{"id": "eqasc_validation_628", "prediction": "all x y.((Bile(x) & Liver(y)) -> (ContainsBileSalts(x) & ContainsManyOrganicSubstances(x) & -ContainsEnzymes(x)))", "score": 0}
{"id": "eqasc_validation_628", "prediction": "all x y.((Bile(x) & Liver(y)) -> (ContainsBileSalts(x,y) & ContainsManyOrganicSubstances(x,y) & -ContainsEnzymes(x,y)))", "score": 0}
{"id": "eqasc_validation_628", "prediction": "all x.((Bile(x) & Liver(x)) -> (ContainsBileSalts(x) & ContainsOxygens(x) & -ContainsEnzymes(x)))", "score": 0}
{"id": "eqasc_validation_628", "prediction": "all x y.((Bile(x) & Liver(y)) -> (ContainsBileSalts(x,y) & ContainsManyOrganicSubstances(x) & -ContainsEnzymes(x)))", "score": 0}
{"id": "eqasc_validation_628", "prediction": "all x.(Bile(x) -> (ContainsBileSalts(x) & ContainsManyOrganicSubstances(x) & -ContainsEnzymes(x)))", "score": 0}
{"id": "eqasc_validation_628", "prediction": "all x y.((Bile(x) & Liver(y)) -> (ContainsBileSalts(x,y) & ContainsManyOrganicSubstances(x) & -ContainsEnzymes(x,y)))", "score": 0}
{"id": "eqasc_validation_629", "prediction": "all x y z.((Liver(x) & Food(y) & AcidicStomach(z)) -> HelpsReduceAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_629", "prediction": "all x y z.((Liver(x) & Food(y) & AcidicStomach(z)) -> ReducesAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_629", "prediction": "all x y.((Liver(x) & Food(y) & EntersFromAcidStomach(x,y)) -> HelpsReduceAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_629", "prediction": "all x y z.((Liver(x) & Food(y) & AcidicStomach(z) & EntersFrom(x,y,z)) -> HelpsReduceAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_629", "prediction": "all x y.((Liver(x) & Food(y) & HighlyAcidicStomach(y)) -> HelpsReduceAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_629", "prediction": "all x y z.((Liver(x) & Food(y) & HighlyAcidicStomach(z)) -> HelpsReduceAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_629", "prediction": "all x y.((Liver(x) & Food(y) & EntersFromHighlyAcidicStomach(x,y)) -> HelpsReduceAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_629", "prediction": "all x y z.((Liver(x) & Food(y) & AcidicStomach(z) & EnteringFrom(x,y,z)) -> HelpsReduceAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_629", "prediction": "all x y z.((Liver(x) & Food(y) & AcidicStomach(z)) -> ReducesAcidityOfFood(x,y,z))", "score": 0}
{"id": "eqasc_validation_629", "prediction": "all x y.((Liver(x) & Food(y) & HighlyAcidicStomach(x)) -> HelpsReduceAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_629", "prediction": "all x y z.((Liver(x) & Food(y) & AcidicStomach(z) & EntersFrom(x,y,z)) -> ReducesAcidity(x,y,z))", "score": 0}
{"id": "eqasc_validation_629", "prediction": "all x y.((Liver(x) & Food(y) & EntersFromAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_629", "prediction": "all x y.((Liver(x) & Food(y) & HighlyAcidicStomach(y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_629", "prediction": "all x y.((Liver(x) & Food(y) & EnteringFromAcidStomach(x,y)) -> HelpsReduceAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_629", "prediction": "all x y z.((Liver(x) & Food(y) & AcidicStomach(z) & EntersFrom(x,y,z)) -> HelpsReduceAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_629", "prediction": "all x y.((Liver(x) & AcidicStomach(y)) -> ReducesAcidityOfFood(x,y))", "score": 0}
{"id": "eqasc_validation_630", "prediction": "all x.(Hormone(x) -> RegulatesByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_630", "prediction": "all x.(Hormone(x) -> RegulatedByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_630", "prediction": "all x.(Hydrogen(x) -> RegulatesByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_630", "prediction": "all x.(Hydrogen(x) -> RegulatedByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_630", "prediction": "all x y.((Hormone(x) & FeedbackMechanism(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_630", "prediction": "all x.(Hormone(x) -> RegulateByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_630", "prediction": "all x.(Hormone(x) -> RegulatesByFeedbackMechanism(x))", "score": 0}
{"id": "eqasc_validation_630", "prediction": "all x.(Hannabin(x) -> RegulatesByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_630", "prediction": "all x y.((Hormone(x) & FeedbackMechanism(y)) -> Regulate(x,y))", "score": 0}
{"id": "eqasc_validation_630", "prediction": "all x.(Hormone(x) -> RegulatesByFeedback(x))", "score": 0}
{"id": "eqasc_validation_630", "prediction": "all x.(Hannah(x) -> RegulatesByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_630", "prediction": "all x.(Hormone(x) -> RegulatesByFeedbackMechanismes(x))", "score": 0}
{"id": "eqasc_validation_630", "prediction": "all x.(Hormone(x) -> RegulatedByFeedbackMechanism(x))", "score": 0}
{"id": "eqasc_validation_630", "prediction": "all x.(Hannabin(x) -> RegulatedByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_631", "prediction": "all x.(Hormone(x) -> ChemicalMessenger(x))", "score": 0}
{"id": "eqasc_validation_631", "prediction": "all x.(Hormone(x) -> ChemicalMessager(x))", "score": 0}
{"id": "eqasc_validation_631", "prediction": "all x y.((Hormone(x) & ChemicalMessenger(y)) -> ActsAs(x,y))", "score": 0}
{"id": "eqasc_validation_631", "prediction": "all x y.((Hormone(x) & ChemicalMessager(y)) -> ActsAs(x,y))", "score": 0}
{"id": "eqasc_validation_631", "prediction": "all x.(Hormone(x) -> ActsAsChemicalMessager(x))", "score": 0}
{"id": "eqasc_validation_631", "prediction": "all x.(Hormone(x) -> ActsAsChemicalMessenger(x))", "score": 0}
{"id": "eqasc_validation_631", "prediction": "all x y z.((Hormone(x) & ChemicalMessager(y) & ChemicalMessager(z)) -> ActsAs(x,y,z))", "score": 0}
{"id": "eqasc_validation_631", "prediction": "all x.(Hormone(x) -> ChemicalMask(x))", "score": 0}
{"id": "eqasc_validation_631", "prediction": "all x.(Homone(x) -> ChemicalMessenger(x))", "score": 0}
{"id": "eqasc_validation_631", "prediction": "all x y z.((Hormone(x) & ChemicalMessenger(y) & Hormone(z)) -> ActsAs(x,y,z))", "score": 0}
{"id": "eqasc_validation_631", "prediction": "all x y z.((Hormone(x) & ChemicalMessager(y) & ChemicalMessager(z)) -> ActsAs(x,y))", "score": 0}
{"id": "eqasc_validation_631", "prediction": "all x y z.((Hormone(x) & ChemicalMessenger(y) & ChemicalMessenger(z)) -> ActsAs(x,y,z))", "score": 0}
{"id": "eqasc_validation_631", "prediction": "all x.(Hormone(x) -> ChemicalMssager(x))", "score": 0}
{"id": "eqasc_validation_631", "prediction": "all x.(Homone(x) -> ChemicalMessager(x))", "score": 0}
{"id": "eqasc_validation_631", "prediction": "all x.(Hormone(x) -> ChemicalMirror(x))", "score": 0}
{"id": "eqasc_validation_632", "prediction": "all x.(ChemicalMessenger(x) -> RegulatedByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_632", "prediction": "all x.(ChemicalMessager(x) -> RegulatedByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_632", "prediction": "all x y.((ChemicalMachine(x) & ChemicalMachine(y)) -> RegulatedByFeedbackMechanisms(x,y))", "score": 0}
{"id": "eqasc_validation_632", "prediction": "all x y.((ChemicalMessenger(x) & ChemicalMessenger(y)) -> RegulatedByFeedbackMechanisms(x,y))", "score": 0}
{"id": "eqasc_validation_632", "prediction": "all x y.((ChemicalMask(x) & ChemicalMask(y)) -> RegulatedByFeedbackMechanisms(x,y))", "score": 0}
{"id": "eqasc_validation_632", "prediction": "all x y.((ChemicalMessager(x) & FeedbackMechanism(y)) -> RegulatesBy(x,y))", "score": 0}
{"id": "eqasc_validation_632", "prediction": "all x.(ChemicalMessager(x) -> (RegulatedByFeedbackMechanisms(x) | RegulatedByFeedbackMechanisms(x)))", "score": 0}
{"id": "eqasc_validation_632", "prediction": "all x y.((ChemicalMessager(x) & FeedbackMechanism(y)) -> RegulatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_632", "prediction": "all x.(ChemicalMessager(x) -> RegulatesByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_632", "prediction": "all x.(ChemicalMessenger(x) -> (RegulatedByFeedbackMechanisms(x) | RegulatedByFeedbackMechanisms(x)))", "score": 0}
{"id": "eqasc_validation_632", "prediction": "all x.(ChemicalMessenger(x) -> RegulatesByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_632", "prediction": "all x y.((ChemicalMessenger(x) & FeedbackMechanism(y)) -> RegulatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_632", "prediction": "all x.(ChemicalMachine(x) -> RegulatedByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_632", "prediction": "all x y.((ChemicalMessenger(x) & FeedbackMechanism(y)) -> RegulatesBy(x,y))", "score": 0}
{"id": "eqasc_validation_632", "prediction": "all x.(ChemicalMammer(x) -> RegulatedByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_632", "prediction": "all x y.((ChemicalMessenger(x) & ChemicalMessenger(y)) -> RegulatedByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_633", "prediction": "all x y.((HormonalProduction(x) & Enzyme(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_633", "prediction": "all x.(HormonalProduction(x) -> RegulatesByEnzymes(x))", "score": 0}
{"id": "eqasc_validation_633", "prediction": "all x y z.((HormonalProduction(x) & Enzyme(y) & Enzyme(z)) -> Regulates(x,y,z))", "score": 0}
{"id": "eqasc_validation_633", "prediction": "all x.(HormonalProduction(x) -> RegulatedByEnzymes(x))", "score": 0}
{"id": "eqasc_validation_633", "prediction": "all x y.((HomonalProduction(x) & Enzyme(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_633", "prediction": "all x y.((Enzyme(x) & HormonalProduction(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_633", "prediction": "all x y z.((HomonalProduction(x) & Enzyme(y) & Enzyme(z)) -> Regulates(x,y,z))", "score": 0}
{"id": "eqasc_validation_633", "prediction": "all x y.((HormonalProduction(x) & Enzyme(y)) -> Regulate(x,y))", "score": 0}
{"id": "eqasc_validation_633", "prediction": "all x y z.((HormonalProduction(x) & Enzyme(y) & Enzyme(z)) -> Regulate(x,y,z))", "score": 0}
{"id": "eqasc_validation_633", "prediction": "all x y z.((HormonalProduction(x) & Enzyme(y) & Enzyme(z)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_633", "prediction": "all x.(HomonalProduction(x) -> RegulatesByEnzymes(x))", "score": 0}
{"id": "eqasc_validation_633", "prediction": "all x y.((HormonalProduction(x) & Enzyme(y)) -> RegulatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_633", "prediction": "all x y z.((HormonalProduction(x) & Enzyme(y) & Enzyme(z)) -> RegulatedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_633", "prediction": "all x y.((HomonalProduction(x) & Enzyme(y)) -> Regulate(x,y))", "score": 0}
{"id": "eqasc_validation_634", "prediction": "all x y.((Enzyme(x) & Hormone(y)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_validation_634", "prediction": "all x y z.((Enzyme(x) & Hormone(y) & Enzyme(z)) -> Controls(x,y,z))", "score": 0}
{"id": "eqasc_validation_634", "prediction": "all x.(Enzyme(x) -> ControlsHormones(x))", "score": 0}
{"id": "eqasc_validation_634", "prediction": "all x y z.((Enzyme(x) & Hormone(y) & Hormone(z)) -> Controls(x,y,z))", "score": 0}
{"id": "eqasc_validation_634", "prediction": "all x.(Enzyme(x) -> ControlsHydrogens(x))", "score": 0}
{"id": "eqasc_validation_634", "prediction": "all x y z.((Enzyme(x) & Hormone(y) & Enzyme(z)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_validation_634", "prediction": "all x y z.((Enzyme(x) & Hormone(y) & Enzyme(z) & Controls(x,y,z)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_validation_634", "prediction": "all x y z.((Enzyme(x) & Hormone(y) & Hormone(z)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_validation_634", "prediction": "all x y.((Enzyme(x) & Hormone(y) & Controls(x,y)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_validation_634", "prediction": "all x y z.((Enzyme(x) & Hormone(y) & Enzyme(z) & Controls(x,y)) -> Controls(x,z))", "score": 0}
{"id": "eqasc_validation_634", "prediction": "all x.(Enzymes(x) -> ControlsHormones(x))", "score": 0}
{"id": "eqasc_validation_634", "prediction": "all x y z.((Enzyme(x) & Hormone(y) & Enzyme(z) & Controls(x,y,z)) -> Controls(x,y,z))", "score": 0}
{"id": "eqasc_validation_634", "prediction": "all x y z w.((Enzyme(x) & Hormone(y) & Enzyme(z) & Hormone(w)) -> Controls(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_634", "prediction": "all x y z.((Enzyme(x) & Hormone(y) & Hormone(z) & Controls(x,y,z)) -> Controls(x,y,z))", "score": 0}
{"id": "eqasc_validation_634", "prediction": "all x.(Enzymes(x) -> ControlsHydrogens(x))", "score": 0}
{"id": "eqasc_validation_634", "prediction": "all x y z.((Enzyme(x) & Hormone(y) & Hormone(z) & Controls(x,y,z)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_validation_635", "prediction": "all x.(Hormone(x) -> ChemicalMessager(x))", "score": 0}
{"id": "eqasc_validation_635", "prediction": "all x.(Hormone(x) -> ChemicalMessenger(x))", "score": 0}
{"id": "eqasc_validation_635", "prediction": "all x.(Hormone(x) -> ChemicalMessagerInBody(x))", "score": 0}
{"id": "eqasc_validation_635", "prediction": "all x y.((Hormone(x) & Body(y)) -> ChemicalMessager(x,y))", "score": 0}
{"id": "eqasc_validation_635", "prediction": "all x.(Hormone(x) -> ChemicalMessengerInBody(x))", "score": 0}
{"id": "eqasc_validation_635", "prediction": "all x y.((Hormone(x) & Body(y)) -> ChemicalMessenger(x,y))", "score": 0}
{"id": "eqasc_validation_635", "prediction": "all x.(Hormone(x) -> (ChemicalMessager(x) & InBody(x)))", "score": 0}
{"id": "eqasc_validation_635", "prediction": "all x y.((Hormone(x) & ChemicalMessenger(y)) -> InBody(x,y))", "score": 0}
{"id": "eqasc_validation_635", "prediction": "all x y z.((Hormone(x) & Body(y) & Body(z)) -> ChemicalMessager(x,y,z))", "score": 0}
{"id": "eqasc_validation_635", "prediction": "all x y z.((Hormone(x) & Body(y) & Body(z)) -> ChemicalMessenger(x,y,z))", "score": 0}
{"id": "eqasc_validation_635", "prediction": "all x y.((Hormone(x) & Body(y)) -> ChemicalMask(x,y))", "score": 0}
{"id": "eqasc_validation_635", "prediction": "all x y.((Homone(x) & Body(y)) -> ChemicalMessager(x,y))", "score": 0}
{"id": "eqasc_validation_635", "prediction": "all x y.((Homone(x) & Body(y)) -> ChemicalMessenger(x,y))", "score": 0}
{"id": "eqasc_validation_635", "prediction": "all x y.((Horomone(x) & Body(y)) -> ChemicalMessager(x,y))", "score": 0}
{"id": "eqasc_validation_636", "prediction": "all x y.((ChemicalMessenger(x) & Body(y)) -> RegulatedByFeedbackMechanisms(x,y))", "score": 0}
{"id": "eqasc_validation_636", "prediction": "all x.(ChemicalMessenger(x) -> RegulatedByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_636", "prediction": "all x y.((ChemicalMessenger(x) & Body(y)) -> RegulatesByFeedbackMechanisms(x,y))", "score": 0}
{"id": "eqasc_validation_636", "prediction": "all x y.((ChemicalMessager(x) & Body(y)) -> RegulatedByFeedbackMechanisms(x,y))", "score": 0}
{"id": "eqasc_validation_636", "prediction": "all x y.((ChemicalMessager(x) & Body(y)) -> RegulatesByFeedbackMechanisms(x,y))", "score": 0}
{"id": "eqasc_validation_636", "prediction": "all x.(ChemicalMessenger(x) -> RegulatesByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_636", "prediction": "all x.(ChemicalMessager(x) -> RegulatedByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_636", "prediction": "all x.((ChemicalMessenger(x) & InBody(x)) -> RegulatedByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_636", "prediction": "all x y z.((ChemicalMessenger(x) & Body(y) & FeedbackMechanism(z)) -> Regulates(x,y,z))", "score": 0}
{"id": "eqasc_validation_636", "prediction": "all x y.((ChemicalMessenger(x) & Body(y)) -> RegulatedByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_636", "prediction": "all x.((ChemicalMessager(x) & Body(x)) -> RegulatedByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_636", "prediction": "all x.(ChemicalMessager(x) -> RegulatesByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_636", "prediction": "all x y z.((ChemicalMessager(x) & Body(y) & FeedbackMechanism(z)) -> Regulates(x,y,z))", "score": 0}
{"id": "eqasc_validation_636", "prediction": "all x.((ChemicalMessager(x) & InBody(x)) -> RegulatedByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_636", "prediction": "all x y.((ChemicalMask(x) & Body(y)) -> RegulatesByFeedbackMechanisms(x,y))", "score": 0}
{"id": "eqasc_validation_636", "prediction": "all x y z.((ChemicalMessenger(x) & Body(y) & FeedbackMechanism(z)) -> RegulatedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_637", "prediction": "all x y.((ChemicalMessenger(x) & Body(y)) -> RegulatesByFeedbackMechanisms(x,y))", "score": 0}
{"id": "eqasc_validation_637", "prediction": "all x y.((ChemicalMessager(x) & Body(y)) -> RegulatesByFeedbackMechanisms(x,y))", "score": 0}
{"id": "eqasc_validation_637", "prediction": "all x y.((ChemicalMessenger(x) & Body(y)) -> RegulatedByFeedbackMechanisms(x,y))", "score": 0}
{"id": "eqasc_validation_637", "prediction": "all x y z.((ChemicalMessenger(x) & Body(y) & FeedbackMechanism(z)) -> Regulates(x,y,z))", "score": 0}
{"id": "eqasc_validation_637", "prediction": "all x y.((ChemicalMessager(x) & Body(y)) -> RegulatedByFeedbackMechanisms(x,y))", "score": 0}
{"id": "eqasc_validation_637", "prediction": "all x y.((Chemist(x) & Body(y)) -> RegulatesByFeedbackMechanisms(x,y))", "score": 0}
{"id": "eqasc_validation_637", "prediction": "all x y z.((ChemicalMessager(x) & Body(y) & FeedbackMechanism(z)) -> Regulates(x,y,z))", "score": 0}
{"id": "eqasc_validation_637", "prediction": "all x y z.((Chemist(x) & Body(y) & FeedbackMechanism(z)) -> Regulates(x,y,z))", "score": 0}
{"id": "eqasc_validation_637", "prediction": "all x y.((ChemicalMachine(x) & Body(y)) -> RegulatesByFeedbackMechanisms(x,y))", "score": 0}
{"id": "eqasc_validation_637", "prediction": "all x.(ChemicalMessenger(x) -> RegulatesByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_637", "prediction": "all x y.((ChemicalMessage(x) & Body(y)) -> RegulatesByFeedbackMechanisms(x,y))", "score": 0}
{"id": "eqasc_validation_637", "prediction": "all x y z.((ChemicalMessenger(x) & Body(y) & FeedbackMechanism(z)) -> RegulatesBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_637", "prediction": "all x y z.((ChemicalMessenger(x) & Body(y) & FeedbackMechanism(z)) -> Regulate(x,y,z))", "score": 0}
{"id": "eqasc_validation_637", "prediction": "all x.(ChemicalMessenger(x) -> RegulatedByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_637", "prediction": "all x y.((ChemicalMessager(x) & Body(y)) -> RegulatesThroughFeedbackMechanisms(x,y))", "score": 0}
{"id": "eqasc_validation_638", "prediction": "all x.(Hormone(x) -> HelpsBodyManageStress(x))", "score": 0}
{"id": "eqasc_validation_638", "prediction": "all x y.((Hormone(x) & Body(y)) -> HelpsManageStress(x,y))", "score": 0}
{"id": "eqasc_validation_638", "prediction": "all x y z.((Hormone(x) & Body(y) & Stress(z)) -> HelpsManage(x,y,z))", "score": 0}
{"id": "eqasc_validation_638", "prediction": "all x y.((Homone(x) & Body(y)) -> HelpsManageStress(x,y))", "score": 0}
{"id": "eqasc_validation_638", "prediction": "all x.(Hormone(x) -> HelpsManageStress(x))", "score": 0}
{"id": "eqasc_validation_638", "prediction": "all x.(Homone(x) -> HelpsBodyManageStress(x))", "score": 0}
{"id": "eqasc_validation_638", "prediction": "all x y z.((Homone(x) & Body(y) & Stress(z)) -> HelpsManage(x,y,z))", "score": 0}
{"id": "eqasc_validation_638", "prediction": "all x y.((Horomone(x) & Body(y)) -> HelpsManageStress(x,y))", "score": 0}
{"id": "eqasc_validation_638", "prediction": "all x.(Hormone(x) -> (HelpsBodyManageStress(x) & HelpsBodyManageStress(x)))", "score": 0}
{"id": "eqasc_validation_638", "prediction": "all x y.((Hormone(x) & Body(y) & HelpsManageStress(x,y)) -> HelpsManageStress(x,y))", "score": 0}
{"id": "eqasc_validation_638", "prediction": "all x y.((Hormone(x) & Body(y)) -> ManagesStress(x,y))", "score": 0}
{"id": "eqasc_validation_638", "prediction": "all x y.(( Hormone(x) & Body(y)) -> HelpsManageStress(x,y))", "score": 0}
{"id": "eqasc_validation_638", "prediction": "all x y.((Hormone(x) & Body(y) & ManagesStress(x,y)) -> HelpsManage(x,y))", "score": 0}
{"id": "eqasc_validation_638", "prediction": "all x.(Hormone(x) -> (HelpsBodyManageStress(x) | HelpsBodyManageStress(x)))", "score": 0}
{"id": "eqasc_validation_638", "prediction": "all x y.((Hormone(x) & Body(y) & ManagesStress(x,y)) -> HelpsManageStress(x,y))", "score": 0}
{"id": "eqasc_validation_638", "prediction": "all x.( Hormone(x) -> HelpsBodyManageStress(x))", "score": 0}
{"id": "eqasc_validation_639", "prediction": "all x y.((Body(x) & Body(y)) -> ManagesStress(x,y))", "score": 0}
{"id": "eqasc_validation_639", "prediction": "all x.(ManagingBodyStress(x) -> FeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_639", "prediction": "all x y.((Body(x) & Body(y)) -> (ManagingStress(x,y) & FeedbackMechanisms(x)))", "score": 0}
{"id": "eqasc_validation_639", "prediction": "all x y.((Body(x) & Body(y)) -> (RegulatesStress(x,y) & FeedbackMechanisms(x,y)))", "score": 0}
{"id": "eqasc_validation_639", "prediction": "all x y.((Body(x) & Body(y)) -> (ManagingStress(x,y) & FeedbackMechanisms(x,y)))", "score": 0}
{"id": "eqasc_validation_639", "prediction": "all x y.((Body(x) & Body(y)) -> (RegulatesStress(x,y) & FeedbackMechanisms(x)))", "score": 0}
{"id": "eqasc_validation_639", "prediction": "all x.((Body(x) & BodyStress(x)) -> RegulatesFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_639", "prediction": "all x y.((Body(x) & Body(y) & Stress(z)) -> RegulatesFeedbackMechanisms(x,y,z))", "score": 0}
{"id": "eqasc_validation_639", "prediction": "all x y z.((Body(x) & Body(y) & Stress(z)) -> (Regulates(x,y,z) & FeedbackMechanisms(x)))", "score": 0}
{"id": "eqasc_validation_639", "prediction": "all x y.((Body(x) & Body(y)) -> (ManagesStress(x,y) & FeedbackMechanisms(x)))", "score": 0}
{"id": "eqasc_validation_639", "prediction": "all x y.((Body(x) & Body(y)) -> (ManagesStress(x,y) & FeedbackMechanisms(x,y)))", "score": 0}
{"id": "eqasc_validation_639", "prediction": "all x y.((Body(x) & Body(y) & ManagesStress(x,y)) -> FeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_639", "prediction": "all x y.((Body(x) & Body(y)) -> RegulatesStress(x,y))", "score": 0}
{"id": "eqasc_validation_639", "prediction": "all x y z.((Body(x) & Body(y) & Stress(z)) -> (RegulatedByFeedbackMechanisms(x,y,z)))", "score": 0}
{"id": "eqasc_validation_639", "prediction": "all x y.((Body(x) & Body(y) & ManagesStress(x,y)) -> FeedbackMechanisms(x,y))", "score": 0}
{"id": "eqasc_validation_639", "prediction": "all x y z.((Body(x) & Stress(y) & FeedbackMechanisms(z)) -> RegulatesManaging(x,y,z))", "score": 0}
{"id": "eqasc_validation_640", "prediction": "all x.(FemaleHormone(x) -> Estrogen(x))", "score": 0}
{"id": "eqasc_validation_640", "prediction": "all x.(FemaleHydrogen(x) -> Estrogen(x))", "score": 0}
{"id": "eqasc_validation_640", "prediction": "all x.(FemaleHormone(x) -> Esterogen(x))", "score": 0}
{"id": "eqasc_validation_640", "prediction": "all x.(FemaleHydrogen(x) -> Esterogen(x))", "score": 0}
{"id": "eqasc_validation_640", "prediction": "all x.(FemaleHormone(x) -> IsEstrogen(x))", "score": 0}
{"id": "eqasc_validation_640", "prediction": "all x.(FemaleHydrogen(x) -> IsEstrogen(x))", "score": 0}
{"id": "eqasc_validation_640", "prediction": "all x y.((FemaleHormone(x) & Hormone(y)) -> Estrogen(x))", "score": 0}
{"id": "eqasc_validation_640", "prediction": "all x.(FemaleHolotype(x) -> Estrogen(x))", "score": 0}
{"id": "eqasc_validation_640", "prediction": "all x.(FemaleHydrogen(x) -> IsOestrogen(x))", "score": 0}
{"id": "eqasc_validation_640", "prediction": "all x.(FemaleHormone(x) -> strogen(x))", "score": 0}
{"id": "eqasc_validation_640", "prediction": "all x y.((FemaleHormone(x) & Hormone(y)) -> Estrogen(x,y))", "score": 0}
{"id": "eqasc_validation_640", "prediction": "all x.(FemaleHormone(x) -> IsOestrogen(x))", "score": 0}
{"id": "eqasc_validation_640", "prediction": "All x.(FemaleHormone(x) -> Estrogen(x))", "score": -1}
{"id": "eqasc_validation_640", "prediction": "all x.(FemaleHydrogen(x) -> strogen(x))", "score": 0}
{"id": "eqasc_validation_640", "prediction": "All x.(FemaleHydrogen(x) -> Estrogen(x))", "score": -1}
{"id": "eqasc_validation_640", "prediction": "all x.(FemaleHoney(x) -> Estrogen(x))", "score": 0}
{"id": "eqasc_validation_641", "prediction": "all x.(Estrogen(x) -> RegulatesByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_641", "prediction": "all x y.((Estrogen(x) & FeedbackMechanism(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_641", "prediction": "all x.(Estrogen(x) -> RegulatedByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_641", "prediction": "all x y.((Estrogen(x) & FeedbackMechanisms(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_641", "prediction": "all x.((Estrogen(x) & FeedbackMechanisms(x)) -> Regulates(x))", "score": 0}
{"id": "eqasc_validation_641", "prediction": "all x.((Estrogen(x) & FeedbackMechanism(x)) -> Regulates(x))", "score": 0}
{"id": "eqasc_validation_641", "prediction": "all x y.((Estrogen(x) & FeedbackMechanism(y)) -> Regulate(x,y))", "score": 0}
{"id": "eqasc_validation_641", "prediction": "all x.(Oestrogen(x) -> RegulatesByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_641", "prediction": "all x.(Exestrogen(x) -> RegulatesByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_641", "prediction": "all x.(Estrogen(x) -> RegulatesThroughFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_641", "prediction": "all x.(Estrogen(x) -> RegulatesByFeedbackMechanismes(x))", "score": 0}
{"id": "eqasc_validation_642", "prediction": "all x.(FeedbackMechanism(x) -> ControlsUncertainty(x))", "score": 0}
{"id": "eqasc_validation_642", "prediction": "all x.(FeedbackMechanism(x) -> ControlsIncertitude(x))", "score": 0}
{"id": "eqasc_validation_642", "prediction": "all x y.((FeedbackMechanism(x) & Uncertainty(y)) -> NecessaryToControl(x,y))", "score": 0}
{"id": "eqasc_validation_642", "prediction": "all x y.((FeedbackMechanism(x) & Uncertainty(y)) -> NecessaryForControl(x,y))", "score": 0}
{"id": "eqasc_validation_642", "prediction": "all x.(FeedbackMechanism(x) -> ControlIncertitude(x))", "score": 0}
{"id": "eqasc_validation_642", "prediction": "all x y.((FeedbackMechanism(x) & Incertitude(y)) -> NecessaryToControl(x,y))", "score": 0}
{"id": "eqasc_validation_642", "prediction": "all x y.((FeedbackMechanism(x) & Uncertainty(y)) -> Necessary(x,y))", "score": 0}
{"id": "eqasc_validation_642", "prediction": "all x.((FeedbackMechanism(x) & Uncertainty(x)) -> NecessaryToControl(x,y))", "score": 0}
{"id": "eqasc_validation_642", "prediction": "all x y.((FeedbackMechanism(x) & Uncertainty(y)) -> NeededToControl(x,y))", "score": 0}
{"id": "eqasc_validation_642", "prediction": "all x.((FeedbackMechanism(x) & ControlsIncertitude(x)) -> NecessaryToControlIncertitude(x))", "score": 0}
{"id": "eqasc_validation_642", "prediction": "all x.((FeedbackMechanism(x) & ControlsIncertitude(x)) -> Necessary(x))", "score": 0}
{"id": "eqasc_validation_642", "prediction": "all x.(FeedbackMechanism(x) -> ControlsIncertity(x))", "score": 0}
{"id": "eqasc_validation_642", "prediction": "all x.((FeedbackMechanism(x) & ControlIncertitude(x)) -> NecessaryToControlIncertitude(x))", "score": 0}
{"id": "eqasc_validation_642", "prediction": "all x.((FeedbackMechanism(x) & Uncertainty(x)) -> NecessaryToControl(x))", "score": 0}
{"id": "eqasc_validation_642", "prediction": "all x y.((FeedbackMechanism(x) & Incertitude(y)) -> NecessaryForControl(x,y))", "score": 0}
{"id": "eqasc_validation_643", "prediction": "all x y.((Hormone(x) & Uncertainty(y)) -> RegulatedByControlling(x,y))", "score": 0}
{"id": "eqasc_validation_643", "prediction": "all x.(Hormone(x) -> (RegulatedByControllingIncertitude(x) & ControlsIncertitude(x)))", "score": 0}
{"id": "eqasc_validation_643", "prediction": "all x.(Hormone(x) -> (RegulatedByControllingUncertainty(x) & ControlsUncertainty(x)))", "score": 0}
{"id": "eqasc_validation_643", "prediction": "all x.(Hydrogen(x) -> (RegulatedByControllingIncertitude(x) & ControlsIncertitude(x)))", "score": 0}
{"id": "eqasc_validation_643", "prediction": "all x y.((Hydrogen(x) & Uncertainty(y)) -> RegulatedByControlling(x,y))", "score": 0}
{"id": "eqasc_validation_643", "prediction": "all x.(Hormone(x) -> RegulatedByControllingIncertitude(x))", "score": 0}
{"id": "eqasc_validation_643", "prediction": "all x y.((Hormone(x) & Uncertainty(y)) -> RegulatesByControlling(x,y))", "score": 0}
{"id": "eqasc_validation_643", "prediction": "all x.(Hormone(x) -> (RegulatedByControllingIncertitude(x) & -RegulatesIncertitude(x)))", "score": 0}
{"id": "eqasc_validation_643", "prediction": "all x.(Hormone(x) -> (RegulatedByControllingIncertitude(x) & NecessarilyControlsIncertitude(x)))", "score": 0}
{"id": "eqasc_validation_643", "prediction": "all x y.((Hormone(x) & Uncertainty(y)) -> RegulatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_643", "prediction": "all x y.((Hormone(x) & Uncertainty(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_643", "prediction": "all x.(Hydrogen(x) -> (RegulatedByControllingUncertainty(x) & ControlsUncertainty(x)))", "score": 0}
{"id": "eqasc_validation_643", "prediction": "all x.(Hormone(x) -> RegulatedByControllingUncertainty(x))", "score": 0}
{"id": "eqasc_validation_643", "prediction": "all x.(Hydrogen(x) -> (RegulatedByControllingIncertitude(x) & -RegulatesIncertitude(x)))", "score": 0}
{"id": "eqasc_validation_643", "prediction": "all x.(Hormone(x) -> (RegulatedBy(x) & ControlsIncertitude(x)))", "score": 0}
{"id": "eqasc_validation_643", "prediction": "all x.(Hormone(x) -> (RegulatedBy(x) & ControlsUncertainty(x)))", "score": 0}
{"id": "eqasc_validation_644", "prediction": "all x.(Hormone(x) -> RegulatesPancreaticSections(x))", "score": 0}
{"id": "eqasc_validation_644", "prediction": "all x y.((Hormone(x) & PancreaticSectition(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_644", "prediction": "all x.(Hormone(x) -> RegulatesPancreaticSectations(x))", "score": 0}
{"id": "eqasc_validation_644", "prediction": "all x y.((Hormone(x) & PancreaticSectision(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_644", "prediction": "all x y.((Hormone(x) & PancreaticSection(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_644", "prediction": "all x.(Hormone(x) -> RegulatesPancreaticSectitions(x))", "score": 0}
{"id": "eqasc_validation_644", "prediction": "all x.(Homone(x) -> RegulatesPancreaticSections(x))", "score": 0}
{"id": "eqasc_validation_644", "prediction": "all x.( Hormone(x) -> RegulatesPancreaticSections(x))", "score": 0}
{"id": "eqasc_validation_644", "prediction": "all x y z.((Hormone(x) & PancreaticSectition(y) & Secretions(z)) -> Regulates(x,y,z))", "score": 0}
{"id": "eqasc_validation_644", "prediction": "all x y z.((Hormone(x) & PancreaticSectition(y) & Hormone(z)) -> Regulates(x,y,z))", "score": 0}
{"id": "eqasc_validation_644", "prediction": "all x y z.((Hormone(x) & PancreaticSectision(y) & Hormone(z)) -> Regulates(x,y,z))", "score": 0}
{"id": "eqasc_validation_644", "prediction": "all x y z.((Hormone(x) & PancreaticSectition(y) & PancreaticSectition(z)) -> Regulates(x,y,z))", "score": 0}
{"id": "eqasc_validation_644", "prediction": "all x.(Hormone(x) -> RegulatesPancreaticSectiions(x))", "score": 0}
{"id": "eqasc_validation_644", "prediction": "all x y.((Hormone(x) & PancreaticSectition(y)) -> Regulate(x,y))", "score": 0}
{"id": "eqasc_validation_644", "prediction": "all x y z.((Hormone(x) & PancreaticSectition(y) & Serum(z)) -> Regulates(x,y,z))", "score": 0}
{"id": "eqasc_validation_644", "prediction": "all x y z.((Hormone(x) & PancreaticSectision(y) & Secretions(z)) -> Regulates(x,y,z))", "score": 0}
{"id": "eqasc_validation_645", "prediction": "all x.(FeedbackMechanism(x) -> RegulatesPancreaticSections(x))", "score": 0}
{"id": "eqasc_validation_645", "prediction": "all x y.((FeedbackMechanism(x) & PancreaticSectiions(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_645", "prediction": "all x y.((FeedbackMechanism(x) & PancreaticSectition(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_645", "prediction": "all x y.((FeedbackMechanism(x) & PancreaticSectision(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_645", "prediction": "all x y.((FeedbackMechanism(x) & PancreaticSections(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_645", "prediction": "all x y.((FeedbackMechanism(x) & PancreaticSection(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_645", "prediction": "all x y z.((FeedbackMechanism(x) & PancreaticSectiions(y) & PancreaticSectiions(z)) -> Regulates(x,y,z))", "score": 0}
{"id": "eqasc_validation_645", "prediction": "all x y z.((FeedbackMechanism(x) & PancreaticSectition(y) & PancreaticSectition(z)) -> Regulates(x,y,z))", "score": 0}
{"id": "eqasc_validation_645", "prediction": "all x y z.((FeedbackMechanism(x) & PancreaticSection(y) & PancreaticSection(z)) -> Regulates(x,y,z))", "score": 0}
{"id": "eqasc_validation_645", "prediction": "all x y.((FeedbackMechanism(x) & PancreaticSectiton(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_645", "prediction": "all x y z.((FeedbackMechanism(x) & PancreaticSectision(y) & PancreaticSectision(z)) -> Regulates(x,y,z))", "score": 0}
{"id": "eqasc_validation_645", "prediction": "all x y.((FeedbackMechanism(x) & PancreaticSectations(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_645", "prediction": "all x y z.((FeedbackMechanism(x) & PancreaticSectision(y) & PancreaticSection(z)) -> Regulates(x,y,z))", "score": 0}
{"id": "eqasc_validation_645", "prediction": "all x.(FeedbackMechanism(x) -> RegulatesPancreaticSectiions(x))", "score": 0}
{"id": "eqasc_validation_645", "prediction": "all x.(FeedbackMechanism(x) -> RegulatesPancreaticSectations(x))", "score": 0}
{"id": "eqasc_validation_645", "prediction": "all x y z.((FeedbackMechanism(x) & PancreaticSectiions(y) & PancreaticSection(z)) -> Regulates(x,y,z))", "score": 0}
{"id": "eqasc_validation_646", "prediction": "all x.(Homeostasis(x) -> InvolvesNegativeFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_646", "prediction": "all x.(Homeostasis(x) -> NegativeFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_646", "prediction": "all x y.((Homeostasis(x) & NegativeFeedbackMechanisms(y)) -> Involves(x,y))", "score": 0}
{"id": "eqasc_validation_646", "prediction": "all x.(Homeostasis(x) -> InvolvesNegativeFeedbackMechanismes(x))", "score": 0}
{"id": "eqasc_validation_646", "prediction": "all x.(Homeostasis(x) -> InvolvesNegativeFeedback(x))", "score": 0}
{"id": "eqasc_validation_646", "prediction": "all x y.((Homeostasis(x) & NegativeFeedback(y)) -> Involves(x,y))", "score": 0}
{"id": "eqasc_validation_646", "prediction": "all x.(Homeostasis(x) -> NegativeFeedbackMechanismes(x))", "score": 0}
{"id": "eqasc_validation_646", "prediction": "all x.(Homeostasis(x) -> NegativeFeedback(x))", "score": 0}
{"id": "eqasc_validation_646", "prediction": "all x y.((Homeostasis(x) & NegativeFeedbackMechanism(y)) -> Involves(x,y))", "score": 0}
{"id": "eqasc_validation_646", "prediction": "all x.(Homeostasis(x) -> NegativeFeedbackMechanism(x))", "score": 0}
{"id": "eqasc_validation_646", "prediction": "all x.(Homeostasis(x) -> PositiveFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_646", "prediction": "all x.(Homeostasis(x) -> InvolvesNegativeFeedbackMechanics(x))", "score": 0}
{"id": "eqasc_validation_646", "prediction": "all x.(Honeyostasis(x) -> InvolvesNegativeFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_646", "prediction": "all x.(Homeostasis(x) -> HasNegativeFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_646", "prediction": "all x y.((Homeostasis(x) & NegativeFeedbackMechanisms(x)) -> Involves(x,y))", "score": 0}
{"id": "eqasc_validation_647", "prediction": "all x.(Hormone(x) -> RegulatesByHomeostasis(x))", "score": 0}
{"id": "eqasc_validation_647", "prediction": "all x y.((Hormone(x) & Hormone(y)) -> RegulatesByHomeostasis(x,y))", "score": 0}
{"id": "eqasc_validation_647", "prediction": "all x y z.((Hormone(x) & Homeostasis(y) & Hormone(z)) -> RegulatesByHomeostasis(x,y,z))", "score": 0}
{"id": "eqasc_validation_647", "prediction": "all x y.((Hormone(x) & Homeostasis(y)) -> RegulatesBy(x,y))", "score": 0}
{"id": "eqasc_validation_647", "prediction": "all x y.((Hormone(x) & Homeostasis(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_647", "prediction": "all x y z.((Hormone(x) & Homeostasis(y) & Hormone(z)) -> RegulatesBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_647", "prediction": "all x.(Hormone(x) -> RegulatedByHomeostasis(x))", "score": 0}
{"id": "eqasc_validation_647", "prediction": "all x y.((Hydrogen(x) & Hormone(y)) -> RegulatesByHomeostasis(x,y))", "score": 0}
{"id": "eqasc_validation_647", "prediction": "all x y.((Hormone(x) & Hormone(y)) -> RegulatedByHomeostasis(x,y))", "score": 0}
{"id": "eqasc_validation_647", "prediction": "all x.(Hydrogen(x) -> RegulatesByHomeostasis(x))", "score": 0}
{"id": "eqasc_validation_647", "prediction": "all x y z.((Hydrogen(x) & Hormone(y) & Homeostasis(z)) -> RegulatesBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_647", "prediction": "all x y z.((Hormone(x) & Hormone(y) & Homeostasis(z)) -> RegulatesBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_647", "prediction": "all x y z.((Hormone(x) & Homeostasis(y) & Hormone(z)) -> RegulatesByHomeostasis(x,z))", "score": 0}
{"id": "eqasc_validation_647", "prediction": "all x y.((Hormone(x) & Homeostasis(y)) -> RegulatesByHomeostasis(x,y))", "score": 0}
{"id": "eqasc_validation_648", "prediction": "all x.((HolisticRegulation(x) & FeedbackLoops(x)) -> (MaintainsBalance(x) & MaintainsHomeostasis(x)))", "score": 0}
{"id": "eqasc_validation_648", "prediction": "all x.((HormonalRegulation(x) & FeedbackLoops(x)) -> (MaintainsBalance(x) & MaintainsHomeostasis(x)))", "score": 0}
{"id": "eqasc_validation_648", "prediction": "all x.((HolisticRegulation(x) & DependsOnFeedbackLoops(x)) -> (MaintainsBalance(x) & MaintainsHomeostasis(x)))", "score": 0}
{"id": "eqasc_validation_648", "prediction": "all x.((Regulation(x) & FeedbackLoops(x)) -> (MaintainsBalance(x) & MaintainsHomeostasis(x)))", "score": 0}
{"id": "eqasc_validation_648", "prediction": "all x.((HolisticRegulation(x) & DependsOnFeedbackLoops(x)) -> MaintainsBalanceAndHomeostasis(x))", "score": 0}
{"id": "eqasc_validation_648", "prediction": "all x.((HormonalRegulation(x) & DependsOnFeedbackLoops(x)) -> (MaintainsBalance(x) & MaintainsHomeostasis(x)))", "score": 0}
{"id": "eqasc_validation_648", "prediction": "all x.((OralRegulation(x) & FeedbackLoops(x)) -> (MaintainsBalance(x) & MaintainsHomeostasis(x)))", "score": 0}
{"id": "eqasc_validation_648", "prediction": "all x.((OralRegulation(x) & DependsOnFeedbackLoops(x)) -> (MaintainsBalance(x) & MaintainsHomeostasis(x)))", "score": 0}
{"id": "eqasc_validation_648", "prediction": "all x.((HydrosexualRegulation(x) & FeedbackLoops(x)) -> (MaintainsBalance(x) & MaintainsHomeostasis(x)))", "score": 0}
{"id": "eqasc_validation_648", "prediction": "all x y.((HormonalRegulation(x) & FeedbackLoops(y)) -> (MaintainsBalance(x,y) & MaintainsHomeostasis(x,y)))", "score": 0}
{"id": "eqasc_validation_648", "prediction": "all x y.((HormonalRegulation(x) & FeedbackLoops(y)) -> (MaintainsBalance(x) & MaintainsHomeostasis(x)))", "score": 0}
{"id": "eqasc_validation_648", "prediction": "all x.((HormonalRegulation(x) & DependsOnFeedbackLoops(x)) -> MaintainsBalanceAndHomeostasis(x))", "score": 0}
{"id": "eqasc_validation_648", "prediction": "all x.((HolisticRegulation(x) & FeedbackLoops(x)) -> MaintainsBalanceAndHomeostasis(x))", "score": 0}
{"id": "eqasc_validation_648", "prediction": "all x.((OralRegulation(x) & DependsOnFeedbackLoops(x)) -> MaintainsBalanceAndHomeostasis(x))", "score": 0}
{"id": "eqasc_validation_648", "prediction": "all x.((HormonalRegulation(x) & FeedbackLoops(x)) -> MaintainsBalanceAndHomeostasis(x))", "score": 0}
{"id": "eqasc_validation_648", "prediction": "all x y.((OralRegulation(x) & FeedbackLoops(y)) -> (MaintainsBalance(x) & MaintainsHomeostasis(x)))", "score": 0}
{"id": "eqasc_validation_649", "prediction": "all x.(Hormone(x) -> MaintainsBalanceWithFeedbackLoops(x))", "score": 0}
{"id": "eqasc_validation_649", "prediction": "all x y.((Hormone(x) & FeedbackLoop(y)) -> MaintainsBalanceWith(x,y))", "score": 0}
{"id": "eqasc_validation_649", "prediction": "all x y.((Hormone(x) & FeedbackLoops(y)) -> MaintainsBalanceWith(x,y))", "score": 0}
{"id": "eqasc_validation_649", "prediction": "all x.(Hormone(x) -> (MaintainsBalance(x) & FeedbackLoops(x)))", "score": 0}
{"id": "eqasc_validation_649", "prediction": "all x y z.((Hormone(x) & FeedbackLoop(y) & Balance(z)) -> MaintainsBalanceWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_649", "prediction": "all x.(Hormone(x) -> (MaintainsBalanceWithFeedbackLoops(x) & MaintainsBalanceWithFeedbackLoops(x)))", "score": 0}
{"id": "eqasc_validation_649", "prediction": "all x y z.((Hormone(x) & FeedbackLoops(y) & Balance(z)) -> MaintainsBalanceWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_649", "prediction": "all x y z.((Hormone(x) & Balance(y) & FeedbackLoops(z)) -> MaintainsBalanceWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_649", "prediction": "all x.(Hormone(x) -> (MaintainsBalanceWithFeedbackLoops(x) & FeedbackLoops(x)))", "score": 0}
{"id": "eqasc_validation_649", "prediction": "all x y.(( Hormone(x) & FeedbackLoop(y)) -> MaintainsBalanceWith(x,y))", "score": 0}
{"id": "eqasc_validation_649", "prediction": "all x y.((Hormone(x) & FeedbackLoops(y)) -> MaintainsBalance(x,y))", "score": 0}
{"id": "eqasc_validation_649", "prediction": "all x y.((Hormone(x) & FeedbackLoop(y)) -> MaintainsBalance(x,y))", "score": 0}
{"id": "eqasc_validation_649", "prediction": "all x.(Hormone(x) -> MaintainBalanceWithFeedbackLoops(x))", "score": 0}
{"id": "eqasc_validation_649", "prediction": "all x y.(( Hormone(x) & FeedbackLoops(y)) -> MaintainsBalanceWith(x,y))", "score": 0}
{"id": "eqasc_validation_649", "prediction": "all x y z.((Hormone(x) & FeedbackLoop(y) & Balance(z)) -> MaintainsBalanceWith(x,y))", "score": 0}
{"id": "eqasc_validation_649", "prediction": "all x.(Hormone(x) -> (MaintainsBalanceWithFeedbackLoops(x)))", "score": 0}
{"id": "eqasc_validation_650", "prediction": "all x y.((AbsorptionOfNutrients(x) & SmallIntestine(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_650", "prediction": "all x.(AbsorptionOfNutrients(x) -> OccursInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_650", "prediction": "all x.(AbsorptionOfNutrients(x) -> OccursInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_650", "prediction": "all x.(AbsorptionOfNutrients(x) -> SmallIntestine(x))", "score": 10}
{"id": "eqasc_validation_650", "prediction": "all x y.((AbsorbsNutrients(x) & SmallIntestine(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_650", "prediction": "all x y.((Nutrient(x) & SmallIntestine(y)) -> AbsorbsIn(x,y))", "score": 1}
{"id": "eqasc_validation_650", "prediction": "all x.(AbsorptionOfNutrients(x) -> exists y.(SmallIntestine(y) & OccursIn(x,y)))", "score": 0}
{"id": "eqasc_validation_650", "prediction": "all x.(AbsorptionOfNutrients(x) -> exists y.(Smallintestine(y) & OccursIn(x,y)))", "score": 0}
{"id": "eqasc_validation_650", "prediction": "all x y.((SmallIntestine(x) & AbsorptionOfNutrients(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_650", "prediction": "all x.(AbsorptionOfNutrients(x) -> exists y.(Smallintestine(y) & OccursIn(x,y))))", "score": -1}
{"id": "eqasc_validation_650", "prediction": "all x y.((SmallIntestine(x) & AbsorptionOfNutrients(x,y)) -> OccursIn(y,x))", "score": 0}
{"id": "eqasc_validation_650", "prediction": "all x y.((Absorption(x) & Nutrients(y)) -> OccursInSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_650", "prediction": "all x.(AbsorptionOfNutrients(x) -> exists y.(SmallIntestine(y) & OccursIn(x,y))))", "score": -1}
{"id": "eqasc_validation_650", "prediction": "all x y.((SmallIntestine(x) & AbsorptionOfNutrients(x,y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_650", "prediction": "all x y.((Nutrient(x) & SmallIntestine(y)) -> Absorbs(x,y))", "score": 1}
{"id": "eqasc_validation_650", "prediction": "all x.(AbsorbsNutrients(x) -> OccursInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_651", "prediction": "all x y.((Nutrient(x) & LivingPlant(y) & LivingAnimal(y)) -> NeededForGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_651", "prediction": "all x y z.((Nutrient(x) & LivingPlant(y) & Animal(z)) -> NeededForGrowth(x,y,z))", "score": 0}
{"id": "eqasc_validation_651", "prediction": "all x.(Nutrient(x) -> (NeedsForGrowth(x) & InLivingPlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_validation_651", "prediction": "all x.(Nutrient(x) -> (NeedsForGrowth(x) & InAllLivingPlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_validation_651", "prediction": "all x y.((Nutrient(x) & LivingPlant(y) & Animal(y)) -> NeededForGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_651", "prediction": "all x.(Nutrient(x) -> (NeededForGrowth(x) & InLivingPlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_validation_651", "prediction": "all x y.((Nutrient(x) & LivingPlant(y) & LivingAnimal(z)) -> NeededForGrowth(x,y,z))", "score": 0}
{"id": "eqasc_validation_651", "prediction": "all x.(Nutrient(x) -> (NeedsForGrowthInLivingPlants(x) & NeedsForGrowthInLivingAnimals(x)))", "score": 0}
{"id": "eqasc_validation_651", "prediction": "all x.(Nutrient(x) -> (NeededForGrowth(x) & InAllLivingPlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_validation_651", "prediction": "all x y.((Nutrient(x) & LivingPlant(y)) -> NeededForGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_651", "prediction": "all x.(Nutrient(x) -> (NeedsForGrowthInLivingPlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_validation_651", "prediction": "all x.(Nutrient(x) -> (NeededForGrowthInLivingPlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_validation_651", "prediction": "all x y.((Nutrient(x) & LivingPlant(y) & LivingAnimal(y)) -> NeedsForGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_651", "prediction": "all x.(Nutrient(x) -> NeededForGrowthInLivingPlantsAndAnimals(x))", "score": 0}
{"id": "eqasc_validation_651", "prediction": "all x.(Nutrient(x) -> (NeedsForGrowth(x) & exists y.(Plant(y) | Animal(y)) & LivesIn(x,y))))", "score": -1}
{"id": "eqasc_validation_651", "prediction": "all x.(Nutrient(x) -> (Nutrient(x) & NeededForGrowth(x) & InLivingPlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_validation_652", "prediction": "all x y.((SmallIntestine(x) & Human(y)) -> NeededForGrowthAndLive(x,y))", "score": 0}
{"id": "eqasc_validation_652", "prediction": "all x.(SmallIntestine(x) -> NeededForHumansToGrowAndLive(x))", "score": 0}
{"id": "eqasc_validation_652", "prediction": "all x y.((SmallIntestine(x) & Human(y)) -> NeededForGrowthAndLive(y,x))", "score": 0}
{"id": "eqasc_validation_652", "prediction": "all x y.((SmallIntestine(x) & Human(y) & NeededForGrowthAndLive(x,y)) -> NeededForGrowthAndLive(x,y))", "score": 0}
{"id": "eqasc_validation_652", "prediction": "all x y.((SmallIntestine(x) & Human(y)) -> (NeedsSmallIntestine(x,y) & Grow(y) & Live(y)))", "score": 0}
{"id": "eqasc_validation_652", "prediction": "all x y.((SmallIntestine(x) & Human(y)) -> (NeedsSmallIntestine(x,y) & GrowsAndLives(y)))", "score": 0}
{"id": "eqasc_validation_652", "prediction": "all x.(SmallIntestine(x) -> NeededForGrowthAndLive(x))", "score": 0}
{"id": "eqasc_validation_652", "prediction": "all x y.((SmallIntestine(x) & Human(y)) -> (NeededForGrowth(x,y) & NeededForLive(x,y)))", "score": 0}
{"id": "eqasc_validation_652", "prediction": "all x y.((SmallIntestine(x) & Human(y)) -> (NeedsSmallIntestine(x,y) & GrowAndLive(y)))", "score": 0}
{"id": "eqasc_validation_652", "prediction": "all x y.((SmallIntestine(x) & Human(y)) -> NecessaryForGrowthAndLive(x,y))", "score": 0}
{"id": "eqasc_validation_652", "prediction": "all x y.((SmallIntestine(x) & Human(y)) -> (Needs(x,y) & GrowsAndLives(y)))", "score": 0}
{"id": "eqasc_validation_652", "prediction": "all x y.((SmallIntestine(x) & Human(y)) -> (Needs(x,y) & Grows(y) & Lives(y)))", "score": 0}
{"id": "eqasc_validation_652", "prediction": "all x y.((SmallIntestine(x) & Human(y) & NeededForGrowthAndLive(x,y)) -> NeededForSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_652", "prediction": "all x y z.((SmallIntestine(x) & Human(y) & GrowAndLive(z)) -> NeededForGrowthAndLive(x,y,z))", "score": 0}
{"id": "eqasc_validation_652", "prediction": "all x.(SmallIntestine(x) -> (NeedsSmallIntestine(x) & Grow(x) & Live(x)))", "score": 0}
{"id": "eqasc_validation_652", "prediction": "all x y.((SmallIntestine(x) & Human(y)) -> NeededForGrowthAndLive(y))", "score": 0}
{"id": "eqasc_validation_653", "prediction": "all x.(SmallIntestine(x) -> TubularOrgan(x))", "score": 2}
{"id": "eqasc_validation_653", "prediction": "all x.(SmallIntestine(x) -> TuberculousOrgan(x))", "score": 0}
{"id": "eqasc_validation_653", "prediction": "all x.(SmallIntestine(x) -> (SmallIntestine(x) & TubularOrgan(x)))", "score": 2}
{"id": "eqasc_validation_653", "prediction": "all x.((SmallIntestine(x) & StructurallySmallIntestine(x)) -> TubularOrgan(x))", "score": 0}
{"id": "eqasc_validation_653", "prediction": "all x y.((SmallIntestine(x) & SmallIntestine(y)) -> TubularOrgan(x))", "score": 2}
{"id": "eqasc_validation_653", "prediction": "all x y.((SmallIntestine(x) & TubularOrgan(y)) -> StructurallySmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_653", "prediction": "all x.((SmallIntestine(x) & TubularOrgan(x)) -> StructurallySmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_653", "prediction": "all x.(SmallIntestine(x) -> (TubularOrgan(x) & StructurallySmallIntestine(x)))", "score": 2}
{"id": "eqasc_validation_653", "prediction": "all x y.((SmallIntestine(x) & SmallIntestine(y)) -> TubularOrgan(x,y))", "score": 0}
{"id": "eqasc_validation_653", "prediction": "all x.(SmallIntestine(x) -> (TuberculousOrgan(x) & StructurallySmallIntestine(x)))", "score": 0}
{"id": "eqasc_validation_653", "prediction": "all x.((SmallIntestine(x) & Structurally(x)) -> TubularOrgan(x))", "score": 0}
{"id": "eqasc_validation_653", "prediction": "all x.(SmallIntestine(x) -> (TuberculousOrgan(x) & Structurally(x)))", "score": 0}
{"id": "eqasc_validation_653", "prediction": "all x y.((SmallIntestine(x) & SmallIntestine(y)) -> TuberculousOrgan(x))", "score": 0}
{"id": "eqasc_validation_653", "prediction": "all x.(SmallIntestine(x) -> (TubularOrgan(x) & Structurally(x)))", "score": 2}
{"id": "eqasc_validation_653", "prediction": "all x.((SmallIntestine(x) & StructurallySmallIntestine(x)) -> TuberculousOrgan(x))", "score": 0}
{"id": "eqasc_validation_653", "prediction": "all x y.((SmallIntestine(x) & TubularOrgan(y)) -> StructurallySmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_654", "prediction": "all x y.((Nutrient(x) & TubularOrgan(y)) -> AbsorbsIn(x,y))", "score": 0}
{"id": "eqasc_validation_654", "prediction": "all x.(AbsorptionOfNutrients(x) -> TubularOrgan(x))", "score": 10}
{"id": "eqasc_validation_654", "prediction": "all x y.((AbsorptionOfNutrients(x) & TubularOrgan(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_654", "prediction": "all x y z.((AbsorptionOfNutrients(x) & TubularOrgan(y) & TubularOrgan(z)) -> OccursIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_654", "prediction": "all x y.((TubularOrgan(x) & TubularOrgan(y)) -> AbsorbsNutrients(x,y))", "score": 0}
{"id": "eqasc_validation_654", "prediction": "all x y.((AbsorbsNutrients(x) & TubularOrgan(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_654", "prediction": "all x.(AbsorptionOfNutrients(x) -> PrimarilyInTumulusOrgan(x))", "score": 0}
{"id": "eqasc_validation_654", "prediction": "all x y.((Nutrient(x) & TubularOrgan(y)) -> Absorbs(x,y))", "score": 0}
{"id": "eqasc_validation_654", "prediction": "all x y.((NutrientAbsorption(x) & TubularOrgan(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_654", "prediction": "all x y.((Nutrients(x) & TubularOrgan(y)) -> AbsorbsIn(x,y))", "score": 0}
{"id": "eqasc_validation_654", "prediction": "all x y z.((AbsorptionOfNutrients(x) & TubularOrgan(y) & Organ(z)) -> OccursIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_654", "prediction": "all x y z.((Nutrient(x) & TubularOrgan(y) & Nutrient(z)) -> AbsorbsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_654", "prediction": "all x.(AbsorbsNutrients(x) -> TubularOrgan(x))", "score": 0}
{"id": "eqasc_validation_654", "prediction": "all x.(AbsorptionOfNutrients(x) -> PrimarilyInTubularOrgan(x))", "score": 0}
{"id": "eqasc_validation_654", "prediction": "all x y.((AbsorptionOfNutrients(x) & TubularOrgan(y)) -> ObtainedIn(x,y))", "score": 0}
{"id": "eqasc_validation_655", "prediction": "all x.(GastrointestinalGIDisfunction(x) -> InhibitsMgAbsorptionFromSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_655", "prediction": "all x.(GastrointestinalGIDisfunction(x) -> InhibitsMgAbsorption(x))", "score": 0}
{"id": "eqasc_validation_655", "prediction": "all x y.((GastrointestinalGIDisfunction(x) & SmallIntestine(y)) -> InhibitsMgAbsorption(x,y))", "score": 0}
{"id": "eqasc_validation_655", "prediction": "all x.(GastrointestinalGIDisfunction(x) -> InhibitsMgAbsorptionFromSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_655", "prediction": "all x y.((GastrointestinalGIDisfunction(x) & SmallIndividual(y)) -> InhibitsMgAbsorption(x,y))", "score": 0}
{"id": "eqasc_validation_655", "prediction": "all x y.((GastrointestinalGIDisfunction(x) & Smallintestine(y)) -> InhibitsMgAbsorption(x,y))", "score": 0}
{"id": "eqasc_validation_655", "prediction": "all x.(GastrointestinalGIDisfunction(x) -> InhibitsMgAbsorptionFromSmallIndividual(x))", "score": 0}
{"id": "eqasc_validation_655", "prediction": "all x y.((GastrointestinalGiddyDisfunction(x) & SmallIntestine(y)) -> InhibitsMgAbsorption(x,y))", "score": 0}
{"id": "eqasc_validation_655", "prediction": "all x.((GastrointestinalGIDisfunction(x) & InhibitsMgAbsorption(x)) -> InhibitsMgAbsorption(x))", "score": 0}
{"id": "eqasc_validation_655", "prediction": "all x.(GastrointestinalGiddyDisfunction(x) -> InhibitsMgAbsorptionFromSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_655", "prediction": "all x.((GastrointestinalGIDisfunction(x) & InhibitsMgAbsorption(x)) -> InhibitsMgAbsorptionFromSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_655", "prediction": "all x.(GastrointestinalGiddyDisfunction(x) -> InhibitsMgAbsorption(x))", "score": 0}
{"id": "eqasc_validation_655", "prediction": "all x.((GastrointestinalGIDisfunction(x) & InhibitsMgAbsorptionFromSmallintestine(x)) -> InhibitsMgAbsorption(x))", "score": 0}
{"id": "eqasc_validation_655", "prediction": "all x.((GastrointestinalGIDisfunction(x) & InhibitsMgAbsorptionFromSmallintestine(x)) -> GastrointestinalGIDisfunction(x))", "score": 0}
{"id": "eqasc_validation_655", "prediction": "all x y.((GastrointestinalGIDisfunction(x) & SmallIntestine(y)) -> InhibitsMgAbsorptionFrom(x,y))", "score": 0}
{"id": "eqasc_validation_655", "prediction": "all x.((GastrointestinalGIDisfunction(x) & InhibitsMgAbsorption(x)) -> InhibitsSmallintestineAbsorption(x))", "score": 0}
{"id": "eqasc_validation_656", "prediction": "all x y.((Magnesium(x) & GITract(y)) -> AbsorbsIn(x,y))", "score": 0}
{"id": "eqasc_validation_656", "prediction": "all x y.((MagnesiumAbsorption(x) & GITract(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_656", "prediction": "all x y.((Magnesium(x) & GITract(y)) -> Absorbs(x,y))", "score": 0}
{"id": "eqasc_validation_656", "prediction": "all x.(MagnesiumAbsorption(x) -> OccursInGITract(x))", "score": 0}
{"id": "eqasc_validation_656", "prediction": "all x y.((Magnesium(x) & GIThreat(y)) -> AbsorbsIn(x,y))", "score": 0}
{"id": "eqasc_validation_656", "prediction": "all x y.((Magnesium(x) & GIThreat(y)) -> Absorbs(x,y))", "score": 0}
{"id": "eqasc_validation_656", "prediction": "all x y.((MagnesiumAbsorption(x) & GIThreat(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_656", "prediction": "all x y z.((Magnesium(x) & GITract(y) & Absorption(z)) -> OccursIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_656", "prediction": "all x.(AbsorptionOfMagnesium(x) -> OccursInGITract(x))", "score": 0}
{"id": "eqasc_validation_656", "prediction": "all x y z.((Magnesium(x) & GITract(y) & Absorbs(x,y)) -> OccursIn(x,z))", "score": 0}
{"id": "eqasc_validation_656", "prediction": "all x y z.((Magnesium(x) & GITract(y) & Absorbs(x,y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_656", "prediction": "all x.((MagnesiumAbsorption(x) & GITract(x)) -> OccursIn(x,GITract))", "score": 0}
{"id": "eqasc_validation_656", "prediction": "all x.((MagnesiumAbsorption(x) & GITract(x)) -> OccursIn(x,GITarget))", "score": 0}
{"id": "eqasc_validation_656", "prediction": "all x y z.((Magnesium(x) & GITract(y) & AbsorptionOf(x,y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_656", "prediction": "all x.((MagnesiumAbsorption(x) & GITract(x)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_656", "prediction": "all x y.((Magnesium(x) & GITract(y) & Absorbs(x,y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_657", "prediction": "all x.(Diarrhea(x) -> ReducesAbsorptionOfNutrients(x))", "score": 0}
{"id": "eqasc_validation_657", "prediction": "all x y.((Diarrhea(x) & Nutrient(y)) -> ReducesAbsorption(x,y))", "score": 0}
{"id": "eqasc_validation_657", "prediction": "all x y z.((Diarrhea(x) & Nutrient(y) & Nutrient(z)) -> ReducesAbsorption(x,y,z))", "score": 0}
{"id": "eqasc_validation_657", "prediction": "all x.(Diarrhea(x) -> ReducesAbsorption(x))", "score": 0}
{"id": "eqasc_validation_657", "prediction": "all x.(Diarrhea(x) -> ReducesAbsorptionOfAllNutrients(x))", "score": 0}
{"id": "eqasc_validation_657", "prediction": "all x y.((Diarrhea(x) & Nutrients(y)) -> ReducesAbsorption(x,y))", "score": 0}
{"id": "eqasc_validation_657", "prediction": "all x.(Darrhea(x) -> ReducesAbsorptionOfNutrients(x))", "score": 0}
{"id": "eqasc_validation_657", "prediction": "all x y z.((Diarrhea(x) & Nutrient(y) & Nutrient(z) & ReducesAbsorption(x,y,z)) -> ReducesAbsorption(x,y,z))", "score": 0}
{"id": "eqasc_validation_657", "prediction": "all x y.((Diarrhea(x) & Nutrient(y)) -> ReducedAbsorption(x,y))", "score": 0}
{"id": "eqasc_validation_657", "prediction": "all x y z.((Diarrhea(x) & Nutrient(y) & Nutrient(z)) -> ReducesAbsorption(x,y))", "score": 0}
{"id": "eqasc_validation_657", "prediction": "all x y z.((Diarrhea(x) & Nutrient(y) & Nutrient(z)) -> ReducedAbsorption(x,y,z))", "score": 0}
{"id": "eqasc_validation_657", "prediction": "all x y z.((Diarrhea(x) & Nutrient(y) & Nutrient(z) & ReducesAbsorption(x,y,z)) -> ReducesAbsorption(x,y))", "score": 0}
{"id": "eqasc_validation_657", "prediction": "all x y.((Diarrhea(x) & Nutrient(y)) -> ReducesAbsorptionOf(x,y))", "score": 0}
{"id": "eqasc_validation_657", "prediction": "all x y z.((Diarrhea(x) & Nutrient(y) & Nutrient(z) & ReducesAbsorption(x,y)) -> ReducesAbsorption(x,z))", "score": 0}
{"id": "eqasc_validation_658", "prediction": "all x.(Diarrhea(x) -> (ReducesFuntcion(x) & OccursInSmallintestine(x)))", "score": 0}
{"id": "eqasc_validation_658", "prediction": "all x.(Diarrhea(x) -> (ReducesFuntcion(x) & OccursInSmallIntestine(x)))", "score": 0}
{"id": "eqasc_validation_658", "prediction": "all x y.((Diarrhea(x) & SmallIntestine(y)) -> ReducesFuntcion(x,y))", "score": 0}
{"id": "eqasc_validation_658", "prediction": "all x.(Diarrhea(x) -> (ReducesFuntcion(x) & OccursPrimarilyInSmallintestine(x)))", "score": 0}
{"id": "eqasc_validation_658", "prediction": "all x.(Diarrhea(x) -> ReducesFuntcion(x))", "score": 0}
{"id": "eqasc_validation_658", "prediction": "all x y z.((Diarrhea(x) & Funtcion(y) & SmallIntestine(z)) -> Reduces(x,y,z))", "score": 0}
{"id": "eqasc_validation_658", "prediction": "all x y.((Diarrhea(x) & Funtcion(y)) -> (Reduces(x,y) & OccursInSmallintestine(x)))", "score": 0}
{"id": "eqasc_validation_658", "prediction": "all x.(Diarrhea(x) -> (ReducesFuntcion(x) & OccursPrimarilyInSmallIntestine(x)))", "score": 0}
{"id": "eqasc_validation_658", "prediction": "all x y.((Diarrhea(x) & SmallIntestine(y)) -> (ReducesFuntcion(x,y) & OccursIn(x,y)))", "score": 0}
{"id": "eqasc_validation_658", "prediction": "all x y.((Diarrhea(x) & Funtcion(y)) -> (Reduces(x,y) & OccursInSmallIntestine(x)))", "score": 0}
{"id": "eqasc_validation_658", "prediction": "all x.(Darrhea(x) -> (ReducesFuntcion(x) & OccursInSmallintestine(x)))", "score": 0}
{"id": "eqasc_validation_658", "prediction": "all x.(Diarrhea(x) -> (ReducesFuntcion(x) & OccursInSmallIndividual(x)))", "score": 0}
{"id": "eqasc_validation_658", "prediction": "all x y.((Diarrhea(x) & Funtcion(y) & SmallIntestine(y)) -> Reduces(x,y))", "score": 0}
{"id": "eqasc_validation_659", "prediction": "all x y.((Absorption(x) & SmallIntestine(y)) -> TakesPlaceIn(x,y))", "score": 0}
{"id": "eqasc_validation_659", "prediction": "all x y z.((Absorption(x) & SmallIntestine(y) & SmallIntestine(z)) -> TakesPlaceIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_659", "prediction": "all x.(Absorption(x) -> TakesPlaceInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_659", "prediction": "all x.(Absorption(x) -> TakesPlaceInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_659", "prediction": "all x y.((Absorption(x) & SmallIndividual(y)) -> TakesPlaceIn(x,y))", "score": 0}
{"id": "eqasc_validation_659", "prediction": "all x y.((SmallIntestine(x) & Absorption(y)) -> TakesPlaceIn(x,y))", "score": 0}
{"id": "eqasc_validation_659", "prediction": "all x y.((Absorbment(x) & SmallIntestine(y)) -> TakesPlaceIn(x,y))", "score": 0}
{"id": "eqasc_validation_659", "prediction": "all x y.((Absorption(x) & Smallintestine(y)) -> TakesPlaceIn(x,y))", "score": 0}
{"id": "eqasc_validation_659", "prediction": "all x y.((Absorbtion(x) & SmallIntestine(y)) -> TakesPlaceIn(x,y))", "score": 0}
{"id": "eqasc_validation_659", "prediction": "all x y.((Absorption(x) & SmallIntestine(y)) -> TakesPlace(x,y))", "score": 0}
{"id": "eqasc_validation_659", "prediction": "all x.(Absorption(x) -> SmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_659", "prediction": "all x y z.((Absorption(x) & SmallIntestine(y) & SmallIntestine(z)) -> TakesPlace(x,y,z))", "score": 0}
{"id": "eqasc_validation_659", "prediction": "all x.(Absorption(x) -> exists y.(SmallIntestine(y) & TakesPlaceIn(x,y)))", "score": 0}
{"id": "eqasc_validation_659", "prediction": "all x.(Absorption(x) -> InSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_659", "prediction": "all x y.((SmallIntestine(x) & Absorption(y)) -> TakesPlaceIn(y,x))", "score": 0}
{"id": "eqasc_validation_659", "prediction": "all x.(Absorption(x) -> exists y.(Smallintestine(y) & TakesPlaceIn(x,y)))", "score": 0}
{"id": "eqasc_validation_660", "prediction": "all x y.((Nutrients(x) & SmallIntestine(y)) -> AbsorbedIn(x,y))", "score": 0}
{"id": "eqasc_validation_660", "prediction": "all x y z.((Nutrients(x) & SmallIntestine(y) & SmallIntestine(z)) -> AbsorbedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_660", "prediction": "all x y.((Nutrients(x) & SmallIntestine(y)) -> AbsorbedInSmallintestine(x,y))", "score": 0}
{"id": "eqasc_validation_660", "prediction": "all x y.((Nutrients(x) & Smallintestine(y)) -> AbsorbedIn(x,y))", "score": 0}
{"id": "eqasc_validation_660", "prediction": "all x y z.((Nutrients(x) & SmallIntestine(y) & Smallintestine(z)) -> AbsorbedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_660", "prediction": "all x y z.((Nutrients(x) & Smallintestine(y) & Smallintestine(z)) -> AbsorbedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_660", "prediction": "all x y.((Nutrient(x) & SmallIntestine(y)) -> AbsorbedIn(x,y))", "score": 0}
{"id": "eqasc_validation_660", "prediction": "all x y.((Nutrients(x) & SmallIntestine(y)) -> AbsorbedInSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_660", "prediction": "all x y z.((Nutrients(x) & Smallintestine(y) & SmallIntestine(z)) -> AbsorbedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_660", "prediction": "all x y z.((Nutrient(x) & SmallIntestine(y) & SmallIntestine(z)) -> AbsorbedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_660", "prediction": "all x y.((Nutrient(x) & SmallIntestine(y)) -> AbsorbedInSmallintestine(x,y))", "score": 0}
{"id": "eqasc_validation_660", "prediction": "all x y.((Nutrient(x) & Smallintestine(y)) -> AbsorbedIn(x,y))", "score": 0}
{"id": "eqasc_validation_660", "prediction": "all x.(NutrientsAbsorbedInSmallintestine(x) -> AbsorbedInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_660", "prediction": "all x y.((Smallintestine(x) & Nutrients(y)) -> AbsorbedIn(x,y))", "score": 0}
{"id": "eqasc_validation_660", "prediction": "all x y.((Nutrients(x) & SmallIndividual(y)) -> AbsorbedInSmallintestine(x,y))", "score": 0}
{"id": "eqasc_validation_660", "prediction": "all x y.((SmallIntestine(x) & Nutrients(y)) -> AbsorbedIn(x,y))", "score": 0}
{"id": "eqasc_validation_661", "prediction": "all x y.((Food(x) & Body(y)) -> BestNutrientSource(x,y))", "score": 0}
{"id": "eqasc_validation_661", "prediction": "all x y.((Food(x) & Body(y)) -> BestSourceOfNutrients(x,y))", "score": 0}
{"id": "eqasc_validation_661", "prediction": "all x.(Food(x) -> BestNutrientSource(x))", "score": 0}
{"id": "eqasc_validation_661", "prediction": "all x.(Food(x) -> BestSourceOfNutrients(x))", "score": 0}
{"id": "eqasc_validation_661", "prediction": "all x.(Food(x) -> BestNutrientSourceForBody(x))", "score": 0}
{"id": "eqasc_validation_661", "prediction": "all x y.((Food(x) & Body(y)) -> ProvidesNutrients(x,y))", "score": 0}
{"id": "eqasc_validation_661", "prediction": "all x y z.((Food(x) & Nutrient(y) & Body(z)) -> BestSource(x,y,z))", "score": 0}
{"id": "eqasc_validation_661", "prediction": "all x y z.((Food(x) & Nutrient(y) & Body(z)) -> BestSourceOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_661", "prediction": "all x y.((Food(x) & Body(y)) -> SourceOfNutrients(x,y))", "score": 0}
{"id": "eqasc_validation_661", "prediction": "all x.(Food(x) -> BestSourceOfNutrientsForBody(x))", "score": 0}
{"id": "eqasc_validation_661", "prediction": "all x y z.((Food(x) & Nutrients(y) & Body(z)) -> BestSource(x,y,z))", "score": 0}
{"id": "eqasc_validation_661", "prediction": "all x y z.((Food(x) & Nutrient(y) & Body(z)) -> BestSourceFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_661", "prediction": "all x y z.((Food(x) & Nutrients(y) & Body(z)) -> BestSourceFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_661", "prediction": "all x y z.((Food(x) & Nutrients(y) & Body(z)) -> BestSourceOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_661", "prediction": "all x y.((Food(x) & Body(y)) -> BestNutrientSourceFor(x,y))", "score": 0}
{"id": "eqasc_validation_661", "prediction": "all x y z.((Food(x) & Body(y) & Nutrients(z)) -> BestSource(x,y,z))", "score": 0}
{"id": "eqasc_validation_662", "prediction": "all x y.((SmallIntestine(x) & FoodAbsorption(y)) -> MainPlace(x,y))", "score": 0}
{"id": "eqasc_validation_662", "prediction": "all x.(SmallIntestine(x) -> FoodAbsorption(x))", "score": 0}
{"id": "eqasc_validation_662", "prediction": "all x.(SmallIntestine(x) -> FoodAbsorptionOccurrence(x))", "score": 0}
{"id": "eqasc_validation_662", "prediction": "all x.(SmallIntestine(x) -> FoodAbsorptionPlace(x))", "score": 0}
{"id": "eqasc_validation_662", "prediction": "all x.(SmallIntestine(x) -> FoodAbsorptionOccurs(x))", "score": 0}
{"id": "eqasc_validation_662", "prediction": "all x.(SmallIntestine(x) -> FoodAbsorptionOfPlace(x))", "score": 0}
{"id": "eqasc_validation_662", "prediction": "all x y z.((SmallIntestine(x) & FoodAbsorption(y) & Food(z)) -> MainPlace(x,y,z))", "score": 0}
{"id": "eqasc_validation_662", "prediction": "all x.(SmallIntestine(x) -> MainPlaceOfFoodAbsorption(x))", "score": 0}
{"id": "eqasc_validation_662", "prediction": "all x y.((SmallIntestine(x) & FoodAbsorptionPlace(y)) -> MainPlace(x,y))", "score": 0}
{"id": "eqasc_validation_662", "prediction": "all x.((SmallIntestine(x) & FoodAbsorption(x)) -> MainPlace(x))", "score": 0}
{"id": "eqasc_validation_662", "prediction": "all x y.((SmallIntestine(x) & FoodAbsorption(y)) -> Occurs(x,y))", "score": 0}
{"id": "eqasc_validation_662", "prediction": "all x y z.((SmallIntestine(x) & FoodAbsorption(y) & Food(z)) -> MainPlace(x,y))", "score": 0}
{"id": "eqasc_validation_662", "prediction": "all x.(SmallIntestine(x) -> FoodAbsorptionOrganism(x))", "score": 0}
{"id": "eqasc_validation_662", "prediction": "all x.(SmallIntestine(x) -> FoodAbsorptionMainPlace(x))", "score": 0}
{"id": "eqasc_validation_662", "prediction": "all x y.((SmallIntestine(x) & FoodAbsorption(y)) -> PrimaryPlace(x,y))", "score": 0}
{"id": "eqasc_validation_662", "prediction": "all x y.((SmallIntestine(x) & FoodAbsorptionPlace(y)) -> Occurs(x,y))", "score": 0}
{"id": "eqasc_validation_663", "prediction": "all x.(Food(x) -> ContainsSeveralNutrients(x))", "score": 0}
{"id": "eqasc_validation_663", "prediction": "all x.(Food(x) -> ContainsNutrients(x))", "score": 0}
{"id": "eqasc_validation_663", "prediction": "all x y.((Food(x) & Nutrient(y)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_663", "prediction": "all x.(Food(x) -> ContainsNerts(x))", "score": 0}
{"id": "eqasc_validation_663", "prediction": "all x.(Food(x) -> exists y.(Nutrient(y) & Contains(x,y))))", "score": -1}
{"id": "eqasc_validation_663", "prediction": "all x.(Food(x) -> (ContainsNutrients(x) & ContainsNutrients(x)))", "score": 0}
{"id": "eqasc_validation_663", "prediction": "all x.(Food(x) -> ContainsMultipleNutrients(x))", "score": 0}
{"id": "eqasc_validation_663", "prediction": "all x.(Food(x) -> exists y.(Nutrient(y) & Contains(x,y)))", "score": 0}
{"id": "eqasc_validation_663", "prediction": "exists x.(Food(x) & ContainsNutrients(x))", "score": 0}
{"id": "eqasc_validation_663", "prediction": "all x.(Food(x) -> (ContainsNerts(x) & ContainsNutrients(x)))", "score": 0}
{"id": "eqasc_validation_663", "prediction": "all x.(Food(x) -> exists y.(Nutrients(y) & Contains(x,y))))", "score": -1}
{"id": "eqasc_validation_663", "prediction": "all x.(Food(x) -> (ContainsNutrients(x) | ContainsNutrients(x)))", "score": 0}
{"id": "eqasc_validation_663", "prediction": "all x.(Food(x) -> ContainsNumerousNutrients(x))", "score": 0}
{"id": "eqasc_validation_663", "prediction": "all x.(Food(x) -> ContainsTwoNutrients(x))", "score": 0}
{"id": "eqasc_validation_663", "prediction": "exists x.(Food(x) & ContainsSeveralNutrients(x))", "score": 0}
{"id": "eqasc_validation_663", "prediction": "all x.(Food(x) -> (ContainsNutrients(x) & ManyNutrients(x)))", "score": 0}
{"id": "eqasc_validation_664", "prediction": "all x y.((AbsorptionOfFood(x) & SmallIntestine(y)) -> OccursInSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_664", "prediction": "all x y z.((AbsorptionOfFood(x) & SmallIntestine(y) & SmallIntestine(z)) -> OccursIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_664", "prediction": "all x y.((AbsorptionOfFood(x) & SmallIntestine(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_664", "prediction": "all x y z.((AbsorptionOfFood(x) & SmallIntestine(y) & SmallIntestine(z)) -> OccursInSmallIntestine(x,y,z))", "score": 0}
{"id": "eqasc_validation_664", "prediction": "all x y.((FoodAbsorption(x) & SmallIntestine(y)) -> OccursInSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_664", "prediction": "all x y.((SmallIntestine(x) & SmallIntestine(y)) -> AbsorbsFood(x,y))", "score": 0}
{"id": "eqasc_validation_664", "prediction": "all x.(AbsorptionOfFood(x) -> OccursInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_664", "prediction": "all x y.((AbsorptionOfFood(x) & SmallIntestine(y)) -> OccursInSmallintestine(x,y))", "score": 0}
{"id": "eqasc_validation_664", "prediction": "all x y z.((FoodAbsorption(x) & SmallIntestine(y) & SmallIntestine(z)) -> OccursIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_664", "prediction": "all x y z.((AbsorptionOfFood(x) & SmallIntestine(y) & Smallintestine(z)) -> OccursIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_664", "prediction": "all x y z.((FoodAbsorption(x) & SmallIntestine(y) & SmallIntestine(z)) -> OccursInSmallIntestine(x,y,z))", "score": 0}
{"id": "eqasc_validation_664", "prediction": "all x y.((FoodAbsorption(x) & SmallIntestine(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_664", "prediction": "all x.(AbsorptionOfFood(x) -> (OccursInSmallIntestine(x) & MostlyInSmallIntestine(x)))", "score": 0}
{"id": "eqasc_validation_664", "prediction": "all x y.((AbsorptionOfFood(x) & SmallIntestine(y)) -> OccursPrimarilyIn(x,y))", "score": 0}
{"id": "eqasc_validation_664", "prediction": "all x y.((SmallIntestine(x) & Smallintestine(y)) -> AbsorbsFood(x,y))", "score": 0}
{"id": "eqasc_validation_664", "prediction": "all x y.((AbsorptionOfFood(x) & SmallIntestine(y)) -> OccursPrimarilyInSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_665", "prediction": "all x.(DozensOfDrugs(x) -> (InhibitsNutrientAbsorption(x) | DepletesNutrients(x)))", "score": 0}
{"id": "eqasc_validation_665", "prediction": "all x.(Drug(x) -> (InhibitsNutrientAbsorption(x) | DepletesNutrients(x)))", "score": 0}
{"id": "eqasc_validation_665", "prediction": "all x y.((Drug(x) & NutrientAbsorption(y)) -> (Inhibits(x,y) | Depletes(x,y)))", "score": 0}
{"id": "eqasc_validation_665", "prediction": "all x.((Drug(x) & (InhibitsNutrientAbsorption(x) | DepletesNutrients(x))) -> InhibitsNutrientAbsorption(x))", "score": 0}
{"id": "eqasc_validation_665", "prediction": "all x.(Drugs(x) -> (InhibitsNutrientAbsorption(x) | DepletesNutrients(x)))", "score": 0}
{"id": "eqasc_validation_665", "prediction": "exists x.(Drug(x) & (InhibitsNutrientAbsorption(x) | DepletesNutrients(x)))", "score": 0}
{"id": "eqasc_validation_665", "prediction": "all x y.((Drug(x) & NutrientAbsorption(y)) -> (Inhibits(x,y) | DepletesNutrients(x,y)))", "score": 0}
{"id": "eqasc_validation_665", "prediction": "all x y.((DozensOfDrugs(x) & NutrientAbsorption(y)) -> (Inhibits(x,y) | Depletes(x,y)))", "score": 0}
{"id": "eqasc_validation_665", "prediction": "all x.(DozensOfDrug(x) -> (InhibitsNutrientAbsorption(x) | DepletesNutrients(x)))", "score": 0}
{"id": "eqasc_validation_665", "prediction": "all x y.((Drug(x) & NutrientAbsorption(y)) -> (Inhibits(x,y) | DepletesNutrients(x)))", "score": 0}
{"id": "eqasc_validation_665", "prediction": "all x y z.((Drug(x) & NutrientAbsorption(y) & NutrientAbsorption(z)) -> (Inhibits(x,y) | Depletes(x,z)))", "score": 0}
{"id": "eqasc_validation_665", "prediction": "all x y.((DozensOfDrugs(x) & NutrientAbsorption(y)) -> (Inhibits(x,y) | DepletesNutrients(x,y)))", "score": 0}
{"id": "eqasc_validation_665", "prediction": "all x.((Drug(x) & (InhibitsNutrientAbsorption(x) | DepletesNutrients(x))) -> InhibitsNutrientAbsorptionOrDepletesNutrients(x))", "score": 0}
{"id": "eqasc_validation_665", "prediction": "all x y z.((Drug(x) & NutrientAbsorption(y) & Nutrients(z)) -> (Inhibits(x,y) | Depletes(x,z)))", "score": 0}
{"id": "eqasc_validation_665", "prediction": "all x.((Drug(x) & InhibitsNutrientAbsorption(x)) | DepletesNutrients(x)) -> InhibitsNutrientAbsorption(x))", "score": -1}
{"id": "eqasc_validation_665", "prediction": "all x y.((Drug(x) & (InhibitsNutrientAbsorption(x,y) | DepletesNutrients(x,y))) -> InhibitsNutrientAbsorption(x,y))", "score": 0}
{"id": "eqasc_validation_666", "prediction": "all x y.((Drug(x) & SmallIntestine(y)) -> InhibitsAction(x,y))", "score": 0}
{"id": "eqasc_validation_666", "prediction": "all x y.((Drug(x) & SmallIntestine(y)) -> InhibitsActions(x,y))", "score": 0}
{"id": "eqasc_validation_666", "prediction": "exists x.(Drug(x) & InhibitsSmallintestinalActions(x))", "score": 0}
{"id": "eqasc_validation_666", "prediction": "all x.(Drug(x) -> InhibitsSmallintestinalActions(x))", "score": 0}
{"id": "eqasc_validation_666", "prediction": "all x.(Drug(x) -> InhibitsSmallIntestineActions(x))", "score": 0}
{"id": "eqasc_validation_666", "prediction": "exists x.(Drug(x) & InhibitsSmallIntestineActions(x))", "score": 0}
{"id": "eqasc_validation_666", "prediction": "exists x.(Drug(x) & InhibitsSmallIntestinalActions(x))", "score": 0}
{"id": "eqasc_validation_666", "prediction": "all x.(Drug(x) -> InhibitsSmallIntestinalActions(x))", "score": 0}
{"id": "eqasc_validation_666", "prediction": "exists x.(Drug(x) & InhibitsSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_666", "prediction": "all x.(Drug(x) -> InhibitsSmallintestineActions(x))", "score": 0}
{"id": "eqasc_validation_666", "prediction": "all x y.((Drug(x) & SmallIntestine(y)) -> InhibitsActivities(x,y))", "score": 0}
{"id": "eqasc_validation_666", "prediction": "exists x.(Drug(x) & InhibitsSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_666", "prediction": "all x.(Drug(x) -> InhibitsSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_666", "prediction": "all x y.((Drug(x) & SmallIntestine(y)) -> Inhibits(x,y))", "score": 0}
{"id": "eqasc_validation_666", "prediction": "exists x.(Drug(x) & InhibitsSmallintestineActions(x))", "score": 0}
{"id": "eqasc_validation_666", "prediction": "all x.(Drug(x) -> InhibitsSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_667", "prediction": "all x.((Food(x) & Mineral(x)) -> Nutrient(x))", "score": 0}
{"id": "eqasc_validation_667", "prediction": "all x.((Food(x) & Minerals(x)) -> Nutrient(x))", "score": 0}
{"id": "eqasc_validation_667", "prediction": "all x.((Food(x) | Minerals(x)) -> Nutrient(x))", "score": 0}
{"id": "eqasc_validation_667", "prediction": "all x y.((Food(x) & Mineral(y)) -> Nutrient(x,y))", "score": 0}
{"id": "eqasc_validation_667", "prediction": "all x y.((Food(x) & Mineral(y)) -> Nutrient(x))", "score": 0}
{"id": "eqasc_validation_667", "prediction": "all x y.((Food(x) & Mineral(y)) -> (Nutrient(x) & Nutrient(y)))", "score": 0}
{"id": "eqasc_validation_667", "prediction": "all x y.((Food(x) & Mineral(y)) -> (Nutrient(x,y) & Nutrient(x,y)))", "score": 0}
{"id": "eqasc_validation_667", "prediction": "all x.(Nutrient(x) -> (Food(x) & Minerals(x)))", "score": 0}
{"id": "eqasc_validation_667", "prediction": "(Nutrient(Food) & Nutrient(Minerals))", "score": 0}
{"id": "eqasc_validation_667", "prediction": "(Natural(Food) & Nutrient(Minerals))", "score": 0}
{"id": "eqasc_validation_667", "prediction": "all x.((Food(x) & Mineral(x)) -> (Nutrient(x) & Nutrient(x)))", "score": 0}
{"id": "eqasc_validation_667", "prediction": "((Food(Food) & Minerals(Minerals)) -> Nutrient(Food) & Nutrient(Minerals))", "score": 0}
{"id": "eqasc_validation_667", "prediction": "all x.((Food(x) | Mineral(x)) -> Nutrient(x))", "score": 2}
{"id": "eqasc_validation_667", "prediction": "all x y.((Food(x) & Mineral(y)) -> (Nutrient(x,y) & Nutrient(y)))", "score": 0}
{"id": "eqasc_validation_667", "prediction": "(Nutrient(food) & Nutrient(minerals))", "score": 0}
{"id": "eqasc_validation_667", "prediction": "all x y.((Food(x) & Mineral(y)) -> (Nutrient(x) & Nutrient(x)))", "score": 0}
{"id": "eqasc_validation_668", "prediction": "all x y.((Mineral(x) & SmallIntestine(y)) -> AbsorbsIn(x,y))", "score": 1}
{"id": "eqasc_validation_668", "prediction": "all x y.((Mineral(x) & SmallIntestine(y)) -> Absorbs(x,y))", "score": 1}
{"id": "eqasc_validation_668", "prediction": "all x y.((MineralAbsorption(x) & SmallIntestine(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_668", "prediction": "all x.(AbsorptionOfMinerals(x) -> OccursInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_668", "prediction": "all x y.((Mineral(x) & Smallintestine(y)) -> AbsorbsIn(x,y))", "score": 0}
{"id": "eqasc_validation_668", "prediction": "all x.(MineralAbsorption(x) -> OccursInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_668", "prediction": "all x.(AbsorptionOfMinerals(x) -> OccursInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_668", "prediction": "all x.(MineralAbsorption(x) -> OccursInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_668", "prediction": "all x y.((Mineral(x) & Smallintestine(y)) -> Absorbs(x,y))", "score": 0}
{"id": "eqasc_validation_668", "prediction": "all x y z.((Mineral(x) & SmallIntestine(y) & Absorption(z)) -> OccursIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_668", "prediction": "all x y z.((Mineral(x) & SmallIntestine(y) & Absorbs(x,y)) -> OccursIn(x,z))", "score": 0}
{"id": "eqasc_validation_668", "prediction": "all x.((MineralAbsorption(x) & SmallIntestine(x)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_668", "prediction": "all x y z.((Mineral(x) & SmallIntestine(y) & Absorption(z)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_668", "prediction": "all x y z.((Mineral(x) & SmallIntestine(y) & Absorbs(x,y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_668", "prediction": "all x y.((Mineral(x) & SmallIntestine(y)) -> AbsorptionOf(x,y))", "score": 0}
{"id": "eqasc_validation_668", "prediction": "all x.(Minerals(x) -> AbsorbsInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_669", "prediction": "all x.((Fat(x) & Protein(x)) -> Nutrient(x))", "score": 0}
{"id": "eqasc_validation_669", "prediction": "all x y.((Fat(x) & Protein(y)) -> Nutrient(x))", "score": 0}
{"id": "eqasc_validation_669", "prediction": "all x.((Fat(x) | Protein(x)) -> Nutrient(x))", "score": 0}
{"id": "eqasc_validation_669", "prediction": "all x.((Fat(x) & Protein(x) & Nutrient(x)) -> Nutrient(x))", "score": 0}
{"id": "eqasc_validation_669", "prediction": "all x y.((Fat(x) & Protein(y)) -> Nutrient(x,y))", "score": 0}
{"id": "eqasc_validation_669", "prediction": "all x y.((Fat(x) & Protein(y) & Nutrient(x)) -> Nutrient(x))", "score": 0}
{"id": "eqasc_validation_669", "prediction": "all x.((Fat(x) & LikeProtein(x)) -> Nutrient(x))", "score": 0}
{"id": "eqasc_validation_669", "prediction": "all x.(Fat(x) -> (Protein(x) & Nutrient(x)))", "score": 0}
{"id": "eqasc_validation_669", "prediction": "all x y z.((Fat(x) & Protein(y) & Nutrient(z)) -> Nutrient(x,y,z))", "score": 0}
{"id": "eqasc_validation_669", "prediction": "all x y.((Fat(x) & Protein(y) & Nutrient(x)) -> Nutrient(x,y))", "score": 0}
{"id": "eqasc_validation_669", "prediction": "all x y z.((Fat(x) & Protein(y) & Nutrient(z)) -> (Nutrient(x,y) & Nutrient(x,z)))", "score": 0}
{"id": "eqasc_validation_669", "prediction": "(all x.(Fat(x) -> Nutrient(x)))", "score": 0}
{"id": "eqasc_validation_669", "prediction": "all x y z.((Fat(x) & Protein(y) & Nutrient(z)) -> (Nutrient(x,y) & Nutrient(z)))", "score": 0}
{"id": "eqasc_validation_669", "prediction": "all x y z.((Fat(x) & Protein(y) & Nutrient(z)) -> (Nutrient(x) & Nutrient(z)))", "score": 0}
{"id": "eqasc_validation_669", "prediction": "all x y z.((Fat(x) & Protein(y) & Nutrient(z)) -> (Nutrient(x) | Nutrient(z)))", "score": 0}
{"id": "eqasc_validation_669", "prediction": "((Fat(Fat) & Protein(Fat)) -> Nutrient(Fat))", "score": 0}
{"id": "eqasc_validation_670", "prediction": "all x.(AbsorptionOfFatAndProtein(x) -> OccursInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_670", "prediction": "all x.(AbsorptionOfFatAndProtein(x) -> OccursInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_670", "prediction": "all x.((AbsorptionOfFat(x) & AbsorptionOfProtein(x)) -> OccursInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_670", "prediction": "all x.((AbsorptionOfFat(x) & AbsorptionOfProtein(x)) -> SmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_670", "prediction": "all x y.((Absorption(x,y) & Fat(y) & Protein(y)) -> OccursInSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_670", "prediction": "all x.((AbsorptionOfFat(x) & AbsorptionOfProtein(x)) -> OccursInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_670", "prediction": "all x.(AbsorptionOfFat(x) & AbsorptionOfProtein(x)) -> OccursInSmallIntestine(x))", "score": -1}
{"id": "eqasc_validation_670", "prediction": "all x y.((AbsorptionOfFat(x) & AbsorptionOfProtein(y)) -> OccursInSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_670", "prediction": "all x y.((Absorption(x,y) & Fat(y) & Protein(y)) -> OccursInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_670", "prediction": "all x y.((AbsorptionOfFat(x) & AbsorptionOfProtein(y)) -> OccursInSmallintestine(x,y))", "score": 0}
{"id": "eqasc_validation_670", "prediction": "all x.(AbsorptionOfFat(x) & AbsorptionOfProtein(x)) -> OccursInSmallintestine(x))", "score": -1}
{"id": "eqasc_validation_670", "prediction": "all x.((AbsorbsFat(x) & AbsorbsProtein(x)) -> SmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_670", "prediction": "all x y.((Absorption(x,y) & Fat(y) & Protein(y)) -> OccursInSmallintestine(x,y))", "score": 0}
{"id": "eqasc_validation_670", "prediction": "all x y.((Fat(x) & Protein(y)) -> AbsorbsInSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_670", "prediction": "all x y.((AbsorbsFat(x) & AbsorbsProtein(x)) -> SmallIntestine(y))", "score": 0}
{"id": "eqasc_validation_670", "prediction": "all x.((AbsorbsFat(x) & AbsorbsProtein(x)) -> OccursInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_671", "prediction": "all x y z.((Ssperm(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_671", "prediction": "all x y.((Ssperm(x) & Vagina(y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_671", "prediction": "all x y z.((Sporem(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_671", "prediction": "all x y.((Sporem(x) & Vagina(y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_671", "prediction": "all x y.((Ssperm(x) & Vagina(y) & SexualIntercourse(y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_671", "prediction": "all x y.((Ssperm(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_671", "prediction": "all x y.((Ssperm(x) & Vagina(y)) -> DepositedDuringSexualIntercourse(x,y))", "score": 0}
{"id": "eqasc_validation_671", "prediction": "all x y.((Ssperm(x) & Vagina(y) & SexualIntercourse(x)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_671", "prediction": "all x y.((Sporem(x) & Vagina(y) & SexualIntercourse(y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_671", "prediction": "all x y z.((Sperm(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedIn(x,y,z))", "score": 6}
{"id": "eqasc_validation_671", "prediction": "all x.((Ssperm(x) & SexualIntercourse(x)) -> DepositedInVagina(x))", "score": 0}
{"id": "eqasc_validation_671", "prediction": "all x y.((Ssperm(x) & SexualIntercourse(y)) -> DepositedInVagina(x,y))", "score": 0}
{"id": "eqasc_validation_671", "prediction": "all x y.((Ssperm(x) & Vagina(y)) -> DepositedDuringIntercourse(x,y))", "score": 0}
{"id": "eqasc_validation_671", "prediction": "all x y z.((Ssperm(x) & Vagina(y) & SexualIntercourse(z) & DepositedIn(x,y,z)) -> SexualIntercourse(x))", "score": 0}
{"id": "eqasc_validation_671", "prediction": "all x.(Ssperm(x) -> DepositedInVagina(x))", "score": 0}
{"id": "eqasc_validation_671", "prediction": "all x y.((Ssperm(x) & Vagina(y)) -> DeposesDuringSexualIntercourse(x,y))", "score": 0}
{"id": "eqasc_validation_672", "prediction": "all x.(Semen(x) -> CarrierForSperm(x))", "score": 0}
{"id": "eqasc_validation_672", "prediction": "all x.(Semen(x) -> CarrierForSsperm(x))", "score": 0}
{"id": "eqasc_validation_672", "prediction": "all x y.((Semen(x) & Sperm(y)) -> CarrierFor(x,y))", "score": 0}
{"id": "eqasc_validation_672", "prediction": "all x.(Semen(x) -> CarrierForSpores(x))", "score": 0}
{"id": "eqasc_validation_672", "prediction": "all x.((Semen(x) & CarrierForSsperm(x)) -> CarrierForSsperm(x))", "score": 0}
{"id": "eqasc_validation_672", "prediction": "all x y.((Semen(x) & Sperm(y)) -> Carrier(x,y))", "score": 0}
{"id": "eqasc_validation_672", "prediction": "all x.((Semen(x) & CarrierForSperm(x)) -> CarrierForSsperm(x))", "score": 0}
{"id": "eqasc_validation_672", "prediction": "all x.((Semen(x) & CarrierForSperm(x)) -> ContainsInSporen(x))", "score": 0}
{"id": "eqasc_validation_672", "prediction": "all x.(Semen(x) -> CarrierForSpore(x))", "score": 0}
{"id": "eqasc_validation_672", "prediction": "all x.(Semen(x) -> (CarrierForSperm(x) & ContainsSsperm(x)))", "score": 0}
{"id": "eqasc_validation_672", "prediction": "all x.((Semen(x) & CarrierForSperm(x)) -> ContainsIn(x,sperm))", "score": 0}
{"id": "eqasc_validation_672", "prediction": "all x.(Semen(x) -> (CarrierForSperm(x) & ContainsInSsperm(x)))", "score": 0}
{"id": "eqasc_validation_672", "prediction": "all x.(Semen(x) -> (CarrierForSperm(x) & ContainsInSporen(x)))", "score": 0}
{"id": "eqasc_validation_672", "prediction": "all x y.((Semen(x) & Sperm(y)) -> CarriersFor(x,y))", "score": 0}
{"id": "eqasc_validation_672", "prediction": "all x.((Semen(x) & CarrierForSsperm(x)) -> ContainsInSporen(x))", "score": 0}
{"id": "eqasc_validation_673", "prediction": "all x y z.((Semen(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_673", "prediction": "all x y.((Semen(x) & Vagina(y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_673", "prediction": "all x y.((Semen(x) & SexualIntercourse(y)) -> DepositedInVagina(x,y))", "score": 0}
{"id": "eqasc_validation_673", "prediction": "all x.((Semen(x) & SexualIntercourse(x)) -> DepositedInVagina(x))", "score": 0}
{"id": "eqasc_validation_673", "prediction": "all x y.((Semen(x) & Vagina(y) & SexualIntercourse(y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_673", "prediction": "all x y.((Semen(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_673", "prediction": "all x y.((Semen(x) & Vagina(y) & SexualIntercourse(x)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_673", "prediction": "all x y.((Semen(x) & Vagina(y)) -> DepositedDuringSexualIntercourse(x,y))", "score": 0}
{"id": "eqasc_validation_673", "prediction": "all x.(Semen(x) -> DepositedInVagina(x))", "score": 0}
{"id": "eqasc_validation_673", "prediction": "all x y.((Semen(x) & Vagina(y)) -> DepositedDuringIntercourse(x,y))", "score": 0}
{"id": "eqasc_validation_673", "prediction": "all x y.((Semen(x) & Vagina(y) & SexualIntercourse(x,y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_673", "prediction": "all x y z.((Semen(x) & Vagina(y) & SexualIntercourse(z)) -> Deposited(x,y,z))", "score": 0}
{"id": "eqasc_validation_673", "prediction": "all x y z.((Semen(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_673", "prediction": "all x y z.((Semen(x) & Vagina(y) & SexualIntercourse(z)) -> DeposesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_673", "prediction": "all x y z.((Semen(x) & Vagina(y) & SexualIntercourse(z) & DepositedIn(x,y,z)) -> SexualIntercourse(x))", "score": 0}
{"id": "eqasc_validation_673", "prediction": "all x y z.((Semen(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_674", "prediction": "all x y z.((Ejaculate(x) & Sperm(y) & Vagina(z)) -> CarriesInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_674", "prediction": "all x y.((Ejaculate(x) & Sperm(y)) -> CarriesIntoVagina(x,y))", "score": 0}
{"id": "eqasc_validation_674", "prediction": "all x y.((Erection(x) & Ejaculate(y) & ContainsSsperm(y)) -> CarriesIntoVagina(x,y))", "score": 0}
{"id": "eqasc_validation_674", "prediction": "all x.((Ejaculate(x) & ContainsSsperm(x)) -> CarriesIntoVagina(x))", "score": 0}
{"id": "eqasc_validation_674", "prediction": "all x y z.((Erection(x) & Ejaculate(y) & Sperm(z)) -> CarriesIntoVagina(x,y,z))", "score": 0}
{"id": "eqasc_validation_674", "prediction": "all x y.((Erection(x) & Ejaculate(y) & ContainsSsperm(y,x)) -> CarriesIntoVagina(x,y))", "score": 0}
{"id": "eqasc_validation_674", "prediction": "all x y.((Ejaculate(x) & Sperm(y) & CarriesIntoVagina(x,y)) -> NecessaryErection(x))", "score": 0}
{"id": "eqasc_validation_674", "prediction": "all x y z.((Ejaculate(x) & Sperm(y) & Vagina(z) & Contains(x,y)) -> CarriesInto(x,z))", "score": 0}
{"id": "eqasc_validation_674", "prediction": "all x y.((Ejaculate(x) & Sperm(y) & CarriesIntoVagina(x,y)) -> ErectionNecessaryForCarrying(x,y))", "score": 0}
{"id": "eqasc_validation_674", "prediction": "all x y.((Ejaculate(x) & Sperm(y) & CarriesIntoVagina(x,y)) -> ErectionNecessaryForCarryingIntoVagina(x,y))", "score": 0}
{"id": "eqasc_validation_674", "prediction": "all x y.((Ejaculate(x) & Sperm(y) & CarriesIntoVagina(x,y)) -> ErectionNecessaryToCarry(x,y))", "score": 0}
{"id": "eqasc_validation_674", "prediction": "all x y.((Ejaculate(x) & Sperm(y) & Contains(x,y)) -> CarriesIntoVagina(x,y))", "score": 0}
{"id": "eqasc_validation_674", "prediction": "all x y z.((Erection(x) & Ejaculate(y) & Sperm(z) & Contains(y,z)) -> CarriesIntoVagina(x,y,z))", "score": 0}
{"id": "eqasc_validation_674", "prediction": "all x y.((Ejaculate(x) & Sperm(y) & CarriesIntoVagina(x,y)) -> ErectionNecessaryToCarryIntoVagina(x,y))", "score": 0}
{"id": "eqasc_validation_674", "prediction": "all x y.((Erection(x) & Ejaculate(y) & ContainsSperm(y)) -> CarriesIntoVagina(x,y))", "score": 0}
{"id": "eqasc_validation_674", "prediction": "all x.(Erection(x) -> CarriesEjaculate(x))", "score": 0}
{"id": "eqasc_validation_675", "prediction": "all x y z.((Ssperm(x) & Ejaculate(y) & SexualIntercourse(z) & CarriedDuring(x,y,z)) -> DepositedAfter(x,y,z))", "score": 0}
{"id": "eqasc_validation_675", "prediction": "all x y z.((Ssperm(x) & Ejaculate(y) & SexualIntercourse(z) & CarriedDuring(x,y,z)) -> DepositedAfter(x,y))", "score": 0}
{"id": "eqasc_validation_675", "prediction": "all x y z.((Ssperm(x) & Ejaculate(y) & SexualIntercourse(z)) -> DepositedAfterCarrying(x,y,z))", "score": 0}
{"id": "eqasc_validation_675", "prediction": "all x y z.((Sporem(x) & Ejaculate(y) & SexualIntercourse(z) & CarriedDuring(x,y,z)) -> DepositedAfter(x,y,z))", "score": 0}
{"id": "eqasc_validation_675", "prediction": "all x y.((Ssperm(x) & Ejaculate(y) & CarriedDuringSexualIntercourse(x,y)) -> Deposited(x,y))", "score": 0}
{"id": "eqasc_validation_675", "prediction": "all x y z.((Ssperm(x) & Ejaculate(y) & SexualIntercourse(z) & CarriedDuring(x,y,z)) -> Deposited(x))", "score": 0}
{"id": "eqasc_validation_675", "prediction": "all x y.((Ssperm(x) & Ejaculate(y) & CarriedDuringSexualIntercourse(x)) -> Deposited(x,y))", "score": 0}
{"id": "eqasc_validation_675", "prediction": "all x y.((Ssperm(x) & Ejaculate(y) & CarriedDuringSexualIntercourse(x)) -> DepositedAfterEjaculate(x,y))", "score": 0}
{"id": "eqasc_validation_675", "prediction": "all x.((Ssperm(x) & EjaculateCarried(x) & SexualIntercourse(x)) -> Deposited(x))", "score": 0}
{"id": "eqasc_validation_675", "prediction": "all x y.((Ssperm(x) & Ejaculate(y) & CarriedDuringSexualIntercourse(x,y)) -> DepositedAfter(x,y))", "score": 0}
{"id": "eqasc_validation_675", "prediction": "all x y z.((Ssperm(x) & Ejaculate(y) & SexualIntercourse(z) & CarriedDuring(y,z)) -> DepositedAfter(x,y,z))", "score": 0}
{"id": "eqasc_validation_675", "prediction": "all x y z.((Ssperm(x) & Ejaculate(y) & SexualIntercourse(z) & CarriedDuring(x,y,z)) -> DepositedAfterEjaculate(x))", "score": 0}
{"id": "eqasc_validation_675", "prediction": "all x y z.((Ssperm(x) & Ejaculate(y) & SexualIntercourse(z)) -> DeposesAfterCarrying(x,y,z))", "score": 0}
{"id": "eqasc_validation_675", "prediction": "all x y z.((Sporem(x) & Ejaculate(y) & SexualIntercourse(z)) -> DepositedAfterCarrying(x,y,z))", "score": 0}
{"id": "eqasc_validation_675", "prediction": "all x y z.((Sporem(x) & Ejaculate(y) & SexualIntercourse(z) & CarriedDuring(x,y,z)) -> DepositedAfter(x,y))", "score": 0}
{"id": "eqasc_validation_675", "prediction": "all x y z.((Ssperm(x) & Ejaculate(y) & SexualIntercourse(z) & CarriedDuring(x,y,z)) -> Deposited(x,y,z))", "score": 0}
{"id": "eqasc_validation_676", "prediction": "all x y.((Intercourse(x) & Sperm(y)) -> ReleasedInVagina(x,y))", "score": 0}
{"id": "eqasc_validation_676", "prediction": "all x y.((Intercourse(x) & Sperm(y)) -> ReleasedInsideVagina(x,y))", "score": 0}
{"id": "eqasc_validation_676", "prediction": "all x y z.((Intercourse(x) & Sperm(y) & Vagina(z)) -> ReleasedInside(y,z))", "score": 0}
{"id": "eqasc_validation_676", "prediction": "all x y z.((Intercourse(x) & Sperm(y) & Vagina(z)) -> ReleasedInside(x,y,z))", "score": 0}
{"id": "eqasc_validation_676", "prediction": "all x y.((Intercourse(x) & Sperm(y)) -> ReleasedInvagina(x,y))", "score": 0}
{"id": "eqasc_validation_676", "prediction": "all x y.((Intercourse(x) & Sperm(y) & Vagina(z)) -> ReleasedInside(x,y,z))", "score": 0}
{"id": "eqasc_validation_676", "prediction": "all x y.((Intercourse(x) & Sperm(y) & Vagina(y)) -> ReleasedInside(x,y))", "score": 0}
{"id": "eqasc_validation_676", "prediction": "all x y.((Intercourse(x) & Sperm(y) & Vagina(z)) -> ReleasedInside(y,z))", "score": 0}
{"id": "eqasc_validation_676", "prediction": "all x y z.((Intercourse(x) & Sperm(y) & Vagina(z)) -> ReleasedInside(y,x,z))", "score": 0}
{"id": "eqasc_validation_676", "prediction": "all x y.((Intercourse(x) & Sperm(y)) -> FreezesInsideVagina(x,y))", "score": 0}
{"id": "eqasc_validation_676", "prediction": "all x y.((Intercourse(x) & Sperm(y)) -> ReleasedInvaginal(x,y))", "score": 0}
{"id": "eqasc_validation_676", "prediction": "all x y z.((Intercourse(x) & Sperm(y) & Vagina(z)) -> ReleasesInside(y,z))", "score": 0}
{"id": "eqasc_validation_676", "prediction": "all x y.((Intercourse(x) & Sperm(y)) -> ReleasesInsideVagina(x,y))", "score": 0}
{"id": "eqasc_validation_676", "prediction": "all x y z.((Intercourse(x) & Sperm(y) & Vagina(z)) -> ReleasesInside(x,y,z))", "score": 0}
{"id": "eqasc_validation_676", "prediction": "all x y.((Intercourse(x) & Sperm(y)) -> ReleasedInVagina(y,x))", "score": 0}
{"id": "eqasc_validation_676", "prediction": "all x y z.((Intercourse(x) & Sperm(y) & Vagina(z)) -> ReleasedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_677", "prediction": "all x y.((MillionsOfSsperm(x) & SexualIntercourse(y)) -> DepositedDuring(x,y))", "score": 0}
{"id": "eqasc_validation_677", "prediction": "all x y z.((MillionsOfSsperm(x) & SexualIntercourse(y) & SexualIntercourse(z)) -> DepositedDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_677", "prediction": "all x y z.((MillionsOfSsperm(x) & SexualIntercourse(y) & SexualIntercourse(z)) -> DepositsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_677", "prediction": "all x y.((SexualIntercourse(x) & SexualIntercourse(y)) -> DepositsMillionsOfSsperm(x,y))", "score": 0}
{"id": "eqasc_validation_677", "prediction": "all x y.((MillionsOfSsperm(x) & SexualIntercourse(y)) -> DepositsDuring(x,y))", "score": 0}
{"id": "eqasc_validation_677", "prediction": "all x y z.((MillionsOfSsperm(x) & SexualIntercourse(y) & SexualIntercourse(z)) -> DeposesDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_677", "prediction": "all x y.((Ssperm(x) & SexualIntercourse(y)) -> DepositedDuring(x,y))", "score": 0}
{"id": "eqasc_validation_677", "prediction": "all x y z.((MillionsOfSsperm(x) & SexualIntercourse(y) & SexualIntercourse(z) & DepositedDuring(x,y,z)) -> Sperm(x))", "score": 0}
{"id": "eqasc_validation_677", "prediction": "all x y z.((Ssperm(x) & SexualIntercourse(y) & SexualIntercourse(z) & DepositedDuring(x,y,z)) -> MillionsOfSsperm(x))", "score": 0}
{"id": "eqasc_validation_677", "prediction": "all x y.((Ssperm(x) & SexualIntercourse(y) & DepositedDuring(x,y)) -> MillionsOf(x,y))", "score": 0}
{"id": "eqasc_validation_677", "prediction": "all x y z.((MillionsOfSsperm(x) & SexualIntercourse(y) & SexualIntercourse(z)) -> Deposits(x,y,z))", "score": 0}
{"id": "eqasc_validation_677", "prediction": "all x y z.((MillionsOfSsperm(x) & SexualIntercourse(y) & SexualIntercourse(z) & DepositsDuring(x,y,z)) -> SpermDepositsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_677", "prediction": "all x y z.((MillionsOfSsperm(x) & SexualIntercourse(y) & SexualIntercourse(z) & DepositedDuring(x,y,z)) -> SpermDepositsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_677", "prediction": "all x y z.((Ssperm(x) & SexualIntercourse(y) & Sperm(z)) -> DepositedDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_677", "prediction": "all x y z.((MillionsOfSsperm(x) & SexualIntercourse(y) & SexualIntercourse(z) & DepositedDuring(x,y,z)) -> SpermDeposits(x,y,z))", "score": 0}
{"id": "eqasc_validation_678", "prediction": "all x y z.((Ssperm(x) & SexualIntercourse(y) & SexualIntercourse(z)) -> (Releases(x,y,z) & HundredsMillions(x)))", "score": 0}
{"id": "eqasc_validation_678", "prediction": "all x y.((Ssperm(x) & SexualIntercourse(y)) -> (Releases(x,y) & HundredsMillions(x)))", "score": 0}
{"id": "eqasc_validation_678", "prediction": "all x y z.((Ssperm(x) & SexualIntercourse(y) & Sperm(z)) -> (Releases(x,z) & During(x,y)))", "score": 0}
{"id": "eqasc_validation_678", "prediction": "all x y z.((Ssperm(x) & SexualIntercourse(y) & SexualIntercourse(z)) -> (Releases(x,y,z) & SeveralSixtyMillions(x)))", "score": 0}
{"id": "eqasc_validation_678", "prediction": "all x y z.((Ssperm(x) & SexualIntercourse(y) & SexualIntercourse(z)) -> (Releases(x,y,z) & HundredsMillions(x,y)))", "score": 0}
{"id": "eqasc_validation_678", "prediction": "all x y z.((Ssperm(x) & SexualIntercourse(y) & Sperm(z)) -> (ReleasedDuring(x,y,z) & SeveralSixtyMillions(x)))", "score": 0}
{"id": "eqasc_validation_678", "prediction": "all x y z.((Ssperm(x) & SexualIntercourse(y) & SexualIntercourse(z)) -> (Releases(x,y,z) & Contains(x,y)))", "score": 0}
{"id": "eqasc_validation_678", "prediction": "all x y z.((Ssperm(x) & SexualIntercourse(y) & Sperm(z) & ReleasedDuring(x,y,z)) -> SeveralSixtyMillions(x))", "score": 0}
{"id": "eqasc_validation_678", "prediction": "all x y z.((Ssperm(x) & SexualIntercourse(y) & SexualIntercourse(z)) -> (Releases(x,y) & HundredsMillions(x,z)))", "score": 0}
{"id": "eqasc_validation_678", "prediction": "all x y z.((Ssperm(x) & SexualIntercourse(y) & Sperm(z) & ReleasedDuring(x,y,z)) -> SeveralSixtyMillions(x,z))", "score": 0}
{"id": "eqasc_validation_678", "prediction": "all x y z.((Ssperm(x) & SexualIntercourse(y) & Sperm(z)) -> (Releases(x,z) & During(x,y,z)))", "score": 0}
{"id": "eqasc_validation_678", "prediction": "all x y z.((Ssperm(x) & SexualIntercourse(y) & Sperm(z) & ReleasedDuring(x,y,z)) -> SeveralSixtyMillions(x,y,z))", "score": 0}
{"id": "eqasc_validation_678", "prediction": "all x y z.((Ssperm(x) & SexualIntercourse(y) & Sperm(z) & ReleasedDuring(x,y,z)) -> SeveralSixtyMillions(x,y))", "score": 0}
{"id": "eqasc_validation_678", "prediction": "all x y z.((Ssperm(x) & SexualIntercourse(y) & Sperm(z) & ReleasedDuring(x,y,z)) -> HundredsMillions(x,z))", "score": 0}
{"id": "eqasc_validation_678", "prediction": "all x y z.((Ssperm(x) & SexualIntercourse(y) & Sperm(z) & ReleasedDuring(x,y,z)) -> HundredsMillions(x))", "score": 0}
{"id": "eqasc_validation_678", "prediction": "all x y z.((Ssperm(x) & SexualIntercourse(y) & SexualIntercourse(z) & Releases(x,y,z)) -> HundredsMillions(x))", "score": 0}
{"id": "eqasc_validation_679", "prediction": "all x.((Ssperm(x) & DepositedInVagina(x)) -> TravelsThroughCervixAndIntoFallopianTubes(x))", "score": 0}
{"id": "eqasc_validation_679", "prediction": "all x y z.((Ssperm(x) & Vagina(y) & Cervix(z) & DepositedIn(x,y)) -> TravelsThrough(x,z))", "score": 0}
{"id": "eqasc_validation_679", "prediction": "all x y z.((Ssperm(x) & Vagina(y) & Cervix(z) & DepositedIn(x,y,z)) -> TravelsThrough(x,z))", "score": 0}
{"id": "eqasc_validation_679", "prediction": "all x y.((Ssperm(x) & Vagina(y) & DepositedIn(x,y)) -> TravelsThroughCervixAndIntoFallopianTubes(x))", "score": 0}
{"id": "eqasc_validation_679", "prediction": "all x y z.((Ssperm(x) & Vagina(y) & Cervix(z) & DepositedIn(x,y,z)) -> TravelsThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_679", "prediction": "all x y z.((Ssperm(x) & Vagina(y) & Cervix(z)) -> DepositedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_679", "prediction": "all x y z.((Ssperm(x) & Vagina(y) & Cervix(z) & DepositedIn(x,y)) -> TravelsThroughFallopianTubes(x,z))", "score": 0}
{"id": "eqasc_validation_679", "prediction": "all x y.((Ssperm(x) & DepositedInVagina(x,y)) -> TravelsThroughCervixAndIntoFallopianTubes(x))", "score": 0}
{"id": "eqasc_validation_679", "prediction": "all x y z.((Ssperm(x) & Vagina(y) & Cervix(z) & DepostedIn(x,y)) -> TravelsThrough(x,z))", "score": 0}
{"id": "eqasc_validation_679", "prediction": "all x.((Sperm(x) & DepositedInVagina(x)) -> TravelsThroughCervixAndIntoFallopianTubes(x))", "score": 0}
{"id": "eqasc_validation_679", "prediction": "all x y z.((Ssperm(x) & Vagina(y) & Cervix(z) & DepositedIn(x,y)) -> TravelsThroughAndIntoFallopianTubes(x,z))", "score": 0}
{"id": "eqasc_validation_679", "prediction": "all x y.((Ssperm(x) & Vagina(y) & DepositedIn(x,y)) -> TravelsThroughCervixAndFallopianTubes(x))", "score": 0}
{"id": "eqasc_validation_679", "prediction": "all x y.((Ssperm(x) & Vagina(y)) -> (DepositsIn(x,y) & TravelsThroughCervix(x) & FallsopianTubes(x)))", "score": 0}
{"id": "eqasc_validation_679", "prediction": "all x y.((Ssperm(x) & Vagina(y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_679", "prediction": "all x y.((Ssperm(x) & Vagina(y)) -> (DepositedIn(x,y) & TravelsThroughCervix(x) & FallsopianTubes(x)))", "score": 0}
{"id": "eqasc_validation_680", "prediction": "all x y.((Ssperm(x) & Cervix(y) & FallopianTubes(z)) -> TravelsThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_680", "prediction": "all x y z.((Ssperm(x) & Cervix(y) & FallopianTubes(z) & SexualIntercourse(x)) -> TravelsThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_680", "prediction": "all x y z.((Ssperm(x) & Cervix(y) & FallopianTubes(z)) -> TravelsThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_680", "prediction": "all x y z.((Ssperm(x) & Cervix(y) & FallopianTubes(z)) -> (TravelsThrough(x,y) & TravelsInto(x,z)))", "score": 0}
{"id": "eqasc_validation_680", "prediction": "all x y z.((Ssperm(x) & Cervix(y) & FallopianTubes(z)) -> (TravelsThrough(x,y) & Through(x,z)))", "score": 0}
{"id": "eqasc_validation_680", "prediction": "all x y z.((Ssperm(x) & Cervix(y) & FallopianTubes(z)) -> (TravelsThrough(x,y) & Into(x,z)))", "score": 0}
{"id": "eqasc_validation_680", "prediction": "all x y.((Ssperm(x) & Cervix(y) & FallopianTubes(z) & SexualIntercourse(x)) -> TravelsThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_680", "prediction": "all x y z.((Ssperm(x) & Cervix(y) & FallopianTube(z)) -> TravelsThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_680", "prediction": "all x y z.((Ssperm(x) & Cervix(y) & FallopianTube(z) & SexualIntercourse(x)) -> TravelsThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_680", "prediction": "all x y z.((Ssperm(x) & Cervix(y) & FallopianTubes(z) & SexualIntercourse(x,y,z)) -> TravelsThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_680", "prediction": "all x y.((Ssperm(x) & Cervix(y) & FallopianTubes(x)) -> TravelsThrough(x,y))", "score": 0}
{"id": "eqasc_validation_680", "prediction": "all x y z.((Ssperm(x) & Cervix(y) & FallopianTubes(z)) -> (TravelsThrough(x,y) & In(x,z)))", "score": 0}
{"id": "eqasc_validation_680", "prediction": "all x y z.((Ssperm(x) & Cervix(y) & FallopianTube(z)) -> (TravelsThrough(x,y) & TravelsInto(x,z)))", "score": 0}
{"id": "eqasc_validation_680", "prediction": "all x y.((Ssperm(x) & Cervix(y) & FallopianTubes(y)) -> TravelsThrough(x,y))", "score": 0}
{"id": "eqasc_validation_680", "prediction": "all x y z.((Ssperm(x) & Cervix(y) & FallopianTube(z)) -> (TravelsThrough(x,y) & Through(x,z)))", "score": 0}
{"id": "eqasc_validation_680", "prediction": "all x.(Ssperm(x) -> (TravelsThroughCervix(x) & TravelsIntoFallopianTubes(x) & SexualIntercourse(x)))", "score": 0}
{"id": "eqasc_validation_681", "prediction": "all x y.((MaleSsperm(x) & Man(y)) -> MadeInTestes(x,y))", "score": 0}
{"id": "eqasc_validation_681", "prediction": "all x y.((MaleSpore(x) & Man(y)) -> MadeInTestes(x,y))", "score": 0}
{"id": "eqasc_validation_681", "prediction": "all x y.((MaleSperm(x) & Man(y)) -> MadeInTestes(x,y))", "score": 0}
{"id": "eqasc_validation_681", "prediction": "all x y.((Malesperm(x) & Man(y)) -> MadeInTestes(x,y))", "score": 0}
{"id": "eqasc_validation_681", "prediction": "all x y.((Male(x) & Man(y)) -> MadeInTestes(x,y))", "score": 0}
{"id": "eqasc_validation_681", "prediction": "all x y.((MalePerm(x) & Man(y)) -> MadeInTestes(x,y))", "score": 0}
{"id": "eqasc_validation_681", "prediction": "all x y z.((Male(x) & Sperm(y) & Man(z)) -> MadeInTestes(x,y,z))", "score": 0}
{"id": "eqasc_validation_681", "prediction": "all x.(MaleSperm(x) -> MadeInTestes(x))", "score": 0}
{"id": "eqasc_validation_681", "prediction": "all x y.((Male(x) & Man(y)) -> MakesInTestes(x,y))", "score": 0}
{"id": "eqasc_validation_681", "prediction": "all x y.((Male(x) & Male(y)) -> MadeInTestes(x,y))", "score": 0}
{"id": "eqasc_validation_681", "prediction": "all x y z.((Male(x) & Sperm(y) & Man(z)) -> MadeInTestes(y,z))", "score": 0}
{"id": "eqasc_validation_681", "prediction": "all x y.((Man(x) & Sperm(y)) -> MadeInTestes(x,y))", "score": 0}
{"id": "eqasc_validation_681", "prediction": "all x.(MaleSsperm(x) -> MadeInTestes(x))", "score": 0}
{"id": "eqasc_validation_681", "prediction": "all x y.((Male(x) & Sperm(y)) -> MadeInTestes(x,y))", "score": 0}
{"id": "eqasc_validation_681", "prediction": "all x.(Malesperm(x) -> MadeInTestes(x))", "score": 0}
{"id": "eqasc_validation_681", "prediction": "all x.(MaleSpore(x) -> MadeInTestes(x))", "score": 0}
{"id": "eqasc_validation_682", "prediction": "all x y z.((MadeInTestes(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedInVagina(x,y,z))", "score": 0}
{"id": "eqasc_validation_682", "prediction": "all x y z.((MadeInTestes(x) & Testes(y) & Vagina(z) & SexualIntercourse(z)) -> DepositedInVagina(x,y,z))", "score": 0}
{"id": "eqasc_validation_682", "prediction": "all x y.((MadeInTestes(x) & SexualIntercourse(y)) -> DepositedInVagina(x,y))", "score": 0}
{"id": "eqasc_validation_682", "prediction": "all x.((MadeInTestes(x) & DepositedInVagina(x) & SexualIntercourse(x)) -> DepositedInVagina(x))", "score": 0}
{"id": "eqasc_validation_682", "prediction": "all x y z.((MadeInTestes(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_682", "prediction": "all x y z.((MadeInTestes(x) & Testes(y) & Vagina(z) & SexualIntercourse(z)) -> DepositedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_682", "prediction": "all x y z.((Testes(x) & Vagina(y) & SexualIntercourse(z) & MadeIn(x,y)) -> DepositedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_682", "prediction": "all x y z.((MakedInTestes(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedInVagina(x,y,z))", "score": 0}
{"id": "eqasc_validation_682", "prediction": "all x y z.((Testes(x) & Vagina(y) & SexualIntercourse(z)) -> (MadeIn(x,testes) & DepositedIn(x,y)))", "score": 0}
{"id": "eqasc_validation_682", "prediction": "all x y z.((MadeInTestes(x) & Testes(y) & Vagina(z) & SexualIntercourse(x)) -> DepositedInVagina(x,y,z))", "score": 0}
{"id": "eqasc_validation_682", "prediction": "all x y z.((Testes(x) & Vagina(y) & SexualIntercourse(z)) -> (MadeInTestes(x) & DepositedInVagina(x,y,z)))", "score": 0}
{"id": "eqasc_validation_682", "prediction": "all x y z.((MadeInTestes(x) & Testes(y) & Vagina(z)) -> DepositedInVagina(x,y,z))", "score": 0}
{"id": "eqasc_validation_682", "prediction": "all x y z.((MadeInTestes(x) & Testes(y) & Vagina(z) & SexualIntercourse(z)) -> DepositedInVagina(x,z))", "score": 0}
{"id": "eqasc_validation_682", "prediction": "all x y z.((MadeInTestes(x) & Testes(y) & Vagina(z) & SexualIntercourse(x,z)) -> DepositedInVagina(x,z))", "score": 0}
{"id": "eqasc_validation_682", "prediction": "all x y z.((Testes(x) & Vagina(y) & SexualIntercourse(z) & MadeIn(x,y,z)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_682", "prediction": "all x y z.((Testes(x) & Vagina(y) & SexualIntercourse(z) & MadeIn(x,y,z)) -> DepositedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_683", "prediction": "all x.(MaleGamete(x) -> Sperm(x))", "score": 7}
{"id": "eqasc_validation_683", "prediction": "all x.(MammalGamete(x) -> Sperm(x))", "score": 2}
{"id": "eqasc_validation_683", "prediction": "all x.(MameGamete(x) -> Sperm(x))", "score": 0}
{"id": "eqasc_validation_683", "prediction": "all x y.((MaleGamete(x) & Sperm(y)) -> KnownAs(x,y))", "score": 0}
{"id": "eqasc_validation_683", "prediction": "all x y.((MaleGamete(x) & Sperm(y)) -> Calls(x,y))", "score": 0}
{"id": "eqasc_validation_683", "prediction": "all x.(MalleGamete(x) -> Sperm(x))", "score": 0}
{"id": "eqasc_validation_683", "prediction": "all x.((MaleGamete(x) & Sperm(x)) -> Gamete(x))", "score": 0}
{"id": "eqasc_validation_683", "prediction": "all x.((MaleGamete(x) & Sperm(x)) -> KnownAs(x,y))", "score": 0}
{"id": "eqasc_validation_683", "prediction": "all x y.((MaleGamete(x) & Sperm(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_683", "prediction": "all x.(MammaleGamete(x) -> Sperm(x))", "score": 0}
{"id": "eqasc_validation_683", "prediction": "all x.((MaleGamete(x) & Sperm(x)) -> MaleGamete(x))", "score": 0}
{"id": "eqasc_validation_683", "prediction": "all x.((MaleGamete(x) & Sperm(x)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_683", "prediction": "all x.(MaleGamet(x) -> Sperm(x))", "score": 0}
{"id": "eqasc_validation_683", "prediction": "all x y.((MaleGamete(x) & Sperm(y)) -> Called(x,y))", "score": 0}
{"id": "eqasc_validation_683", "prediction": "all x.(ManleGamete(x) -> Sperm(x))", "score": 0}
{"id": "eqasc_validation_684", "prediction": "all x y.((MaleGamete(x) & Vagina(y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_684", "prediction": "all x y z.((MaleGamete(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedIn(x,y,z))", "score": 1}
{"id": "eqasc_validation_684", "prediction": "all x.((MaleGamete(x) & SexualIntercourse(x)) -> DepositedInVagina(x))", "score": 0}
{"id": "eqasc_validation_684", "prediction": "all x.(MaleGamete(x) -> DepositedInVagina(x))", "score": 0}
{"id": "eqasc_validation_684", "prediction": "all x y.((MaleGamete(x) & Vagina(y) & SexualIntercourse(y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_684", "prediction": "all x y.((MaleGamete(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedIn(x,y,z))", "score": 1}
{"id": "eqasc_validation_684", "prediction": "all x y.((MaleGamete(x) & SexualIntercourse(y)) -> DepositedInVagina(x,y))", "score": 0}
{"id": "eqasc_validation_684", "prediction": "all x.(MaleGamete(x) -> DepositedInVaginaDuringSexualIntercourse(x))", "score": 0}
{"id": "eqasc_validation_684", "prediction": "all x y.((MaleGamete(x) & Vagina(y) & SexualIntercourse(x)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_684", "prediction": "all x y.((MaleGamete(x) & Vagina(y)) -> DepositedDuringSexualIntercourse(x,y))", "score": 0}
{"id": "eqasc_validation_684", "prediction": "all x y.((MaleGamete(x) & Vagina(y) & SexualIntercourse(x,y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_684", "prediction": "all x.((MaleGamete(x) & SexualIntercourse(y)) -> DepositedInVagina(x,y))", "score": 0}
{"id": "eqasc_validation_684", "prediction": "all x y z.((MaleGamete(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_684", "prediction": "all x y z.((MaleGamete(x) & Vagina(y) & SexualIntercourse(z)) -> DeposesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_684", "prediction": "all x y.((MaleGamete(x) & Vagina(y)) -> DepositedDuringIntercourse(x,y))", "score": 0}
{"id": "eqasc_validation_684", "prediction": "all x y z.((MaleGamete(x) & Vagina(y) & SexualIntercourse(z) & DepositedIn(x,y,z)) -> SexualIntercourse(x))", "score": 0}
{"id": "eqasc_validation_685", "prediction": "all x y z.((MaleGamete(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedIn(x,y,z))", "score": 1}
{"id": "eqasc_validation_685", "prediction": "all x.((MaleGamete(x) & SexualIntercourse(x)) -> DepositedInVagina(x))", "score": 0}
{"id": "eqasc_validation_685", "prediction": "all x y.((MaleGamete(x) & Vagina(y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_685", "prediction": "all x y z.((MaleGamete(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedInVagina(x,y,z))", "score": 0}
{"id": "eqasc_validation_685", "prediction": "all x y.((MaleGamete(x) & Vagina(y) & SexualIntercourse(y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_685", "prediction": "all x y.((MaleGamete(x) & Vagina(y) & SexualIntercourse(x)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_685", "prediction": "all x y.((MaleGamete(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedIn(x,y,z))", "score": 1}
{"id": "eqasc_validation_685", "prediction": "all x y.((MaleGamete(x) & SexualIntercourse(y)) -> DepositedInVagina(x,y))", "score": 0}
{"id": "eqasc_validation_685", "prediction": "all x y.((MaleGamete(x) & Vagina(y) & SexualIntercourse(x,y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_685", "prediction": "all x y.((MaleGamete(x) & Vagina(y) & SexualIntercourse(x)) -> DepositedInVagina(x,y))", "score": 0}
{"id": "eqasc_validation_685", "prediction": "all x y.((MaleGamete(x) & Vagina(y) & SexualIntercourse(y)) -> DepositedInVagina(x,y))", "score": 0}
{"id": "eqasc_validation_685", "prediction": "all x y z.((MaleGamete(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_685", "prediction": "all x y.((MaleGamete(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedInVagina(x,y,z))", "score": 0}
{"id": "eqasc_validation_685", "prediction": "all x y z.((MaleGamete(x) & Vagina(y) & SexualIntercourse(z)) -> DeposesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_685", "prediction": "all x y.((MaleGamete(x) & Vagina(y)) -> DepositedInVagina(x,y))", "score": 0}
{"id": "eqasc_validation_685", "prediction": "all x y.((MaleGamete(x) & Vagina(y) & SexualIntercourse(x,y)) -> DepositedInVagina(x,y))", "score": 0}
{"id": "eqasc_validation_686", "prediction": "all x.(Pregnancy(x) -> SexualIntercourse(x))", "score": 0}
{"id": "eqasc_validation_686", "prediction": "all x.(Pregnancy(x) -> EvidenceOfSexualIntercourse(x))", "score": 0}
{"id": "eqasc_validation_686", "prediction": "all x y.((Pregnancy(x) & SexualIntercourse(y)) -> Evidence(x,y))", "score": 0}
{"id": "eqasc_validation_686", "prediction": "all x.(Pregnancy(x) -> SexualIntercourseEvidence(x))", "score": 0}
{"id": "eqasc_validation_686", "prediction": "all x.(Pregnancy(x) -> (EvidenceOfSexualIntercourse(x)))", "score": 0}
{"id": "eqasc_validation_686", "prediction": "all x.((Pregnancy(x) & SexualIntercourse(x)) -> Evidence(x))", "score": 0}
{"id": "eqasc_validation_686", "prediction": "all x.(Pregnancy(x) -> exists y.(SexualIntercourse(y) & Evidence(x,y)))", "score": 0}
{"id": "eqasc_validation_686", "prediction": "all x y.((Pregnancy(x) & SexualIntercourse(y)) -> EvidenceOf(x,y))", "score": 0}
{"id": "eqasc_validation_686", "prediction": "all x y z.((Pregnancy(x) & SexualIntercourse(y) & SexualIntercourse(z)) -> Evidence(x,y,z))", "score": 0}
{"id": "eqasc_validation_686", "prediction": "all x y z.((Pregnancy(x) & SexualIntercourse(y) & Pregnancy(z)) -> EvidenceOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_686", "prediction": "all x y z.((Pregnancy(x) & SexualIntercourse(y) & Pregnancy(z)) -> Evidence(x,y,z))", "score": 0}
{"id": "eqasc_validation_686", "prediction": "all x.(Pregnancy(x) -> exists y.(SexualIntercourse(y) & Evidence(x,y))))", "score": -1}
{"id": "eqasc_validation_687", "prediction": "all x y.((Ssperm(x) & Vagina(y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_687", "prediction": "all x y z.((Ssperm(x) & Vagina(y) & Vagina(z)) -> DepositedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_687", "prediction": "all x y.((Ssperm(x) & Vagina(y)) -> (DepositsIn(x,y) & CausesPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_687", "prediction": "all x y.((Ssperm(x) & Vagina(y)) -> DepositedIn(x,y)) (CausesPregnancy(x) | CausesPregnancy(x)))", "score": -1}
{"id": "eqasc_validation_687", "prediction": "all x y.((Ssperm(x) & Vagina(y)) -> (DepositedIn(x,y) & CausesPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_687", "prediction": "all x y.((Ssperm(x) & Vagina(y)) -> (DepositsIn(x,y) & SometimesCausesPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_687", "prediction": "all x y.((Ssperm(x) & Vagina(y) & DepositedIn(x,y)) -> CausesPregnancy(x))", "score": 0}
{"id": "eqasc_validation_687", "prediction": "all x y.((Ssperm(x) & Vagina(y) & DepositedIn(x,y)) -> SometimesCausesPregnancy(x))", "score": 0}
{"id": "eqasc_validation_687", "prediction": "all x y.((Ssperm(x) & Vagina(y)) -> (DepositedIn(x,y) & SometimesCausesPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_687", "prediction": "all x y.((Sporem(x) & Vagina(y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_687", "prediction": "all x y.((Ssperm(x) & Vagina(y) & DepositedIn(x,y)) -> SometimesCausesPregnancy(x,y))", "score": 0}
{"id": "eqasc_validation_687", "prediction": "all x y z.((Ssperm(x) & Vagina(y) & Vagina(z)) -> (DepositsIn(x,y,z) & CausesPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_687", "prediction": "all x y.((Ssperm(x) & Vagina(y)) -> (DeposesIn(x,y) & CausesPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_687", "prediction": "all x y.((Ssperm(x) & Vagina(y) & DepositedIn(x,y)) -> CausesPregnancy(x,y))", "score": 0}
{"id": "eqasc_validation_687", "prediction": "all x y z.((Ssperm(x) & Vagina(y) & Vagina(z) & DepositedIn(x,y,z)) -> CausesPregnancy(x))", "score": 0}
{"id": "eqasc_validation_687", "prediction": "all x y.((Ssperm(x) & Vagina(y)) -> DepositedIn(x,y)) (CausesPregnancy(x) & SometimesCausesPregnancy(x)))", "score": -1}
{"id": "eqasc_validation_688", "prediction": "all x.(Woman(x) -> HasVagina(x))", "score": 0}
{"id": "eqasc_validation_688", "prediction": "all x.(Women(x) -> HasVagina(x))", "score": 0}
{"id": "eqasc_validation_688", "prediction": "all x.(Woman(x) -> HasValga(x))", "score": 0}
{"id": "eqasc_validation_688", "prediction": "all x.(Women(x) -> HasValga(x))", "score": 0}
{"id": "eqasc_validation_688", "prediction": "all x y.((Women(x) & Vagina(y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_688", "prediction": "all x y.((Woman(x) & Vagina(y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_688", "prediction": "all x.(Woman(x) -> HasValgina(x))", "score": 0}
{"id": "eqasc_validation_688", "prediction": "all x.((Women(x) & Vagina(x)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_688", "prediction": "all x.(Women(x) -> HasValgina(x))", "score": 0}
{"id": "eqasc_validation_688", "prediction": "all x.((Women(x) & Vagina(y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_688", "prediction": "all x.((Woman(x) & Vagina(x)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_688", "prediction": "all x.(Woman(x) -> HasValagina(x))", "score": 0}
{"id": "eqasc_validation_688", "prediction": "all x.((Women(x) & Vagina(x)) -> Has(x,Vagina))", "score": 0}
{"id": "eqasc_validation_688", "prediction": "all x.(Female(x) -> HasVagina(x))", "score": 0}
{"id": "eqasc_validation_688", "prediction": "all x.((Woman(x) & Vagina(x)) -> Has(x,Vagina))", "score": 0}
{"id": "eqasc_validation_688", "prediction": "all x.(Woman(x) -> HasValgus(x))", "score": 0}
{"id": "eqasc_validation_689", "prediction": "all x y.((Sex(x) & Sperm(y)) -> DepositedIntoReproductiveOrgan(y,x))", "score": 0}
{"id": "eqasc_validation_689", "prediction": "all x y.((Sex(x) & Sperm(y)) -> DepositedIntoReproductiveOrgan(x,y))", "score": 0}
{"id": "eqasc_validation_689", "prediction": "all x y z.((Sex(x) & Sperm(y) & Woman(z)) -> DepositedIntoOrgan(y,z))", "score": 0}
{"id": "eqasc_validation_689", "prediction": "all x y z.((Sex(x) & Sperm(y) & Woman(z)) -> DepositedIntoReproductiveOrgan(y,z))", "score": 0}
{"id": "eqasc_validation_689", "prediction": "all x y z.((Sex(x) & Sperm(y) & ReproductiveOrgan(z)) -> DepositedInto(y,z))", "score": 0}
{"id": "eqasc_validation_689", "prediction": "all x y z.((Sex(x) & Sperm(y) & Woman(z)) -> DepositedIntoOrgan(x,y,z))", "score": 0}
{"id": "eqasc_validation_689", "prediction": "all x y z.((Sex(x) & Sperm(y) & Woman(z)) -> DepositedIntoReproductiveOrgan(x,y,z))", "score": 0}
{"id": "eqasc_validation_689", "prediction": "all x.((Sex(x) & Sperm(x)) -> DepositedIntoReproductiveOrgan(x))", "score": 0}
{"id": "eqasc_validation_689", "prediction": "all x y.((Sex(x) & Sperm(y)) -> DepositedInto(y,x))", "score": 0}
{"id": "eqasc_validation_689", "prediction": "all x y.((Sex(x) & Sperm(y)) -> DepositedInReproductiveOrgan(y,x))", "score": 0}
{"id": "eqasc_validation_689", "prediction": "all x y.((Sex(x) & Sperm(y)) -> DepositedIntoReproductiveOrgan(y))", "score": 0}
{"id": "eqasc_validation_689", "prediction": "all x y z.((Sex(x) & Sperm(y) & Woman(z)) -> DepositsIntoOrgan(y,z))", "score": 0}
{"id": "eqasc_validation_689", "prediction": "all x y z.((Sex(x) & Sperm(y) & Woman(z)) -> DepositedInReproductiveOrgan(y,z))", "score": 0}
{"id": "eqasc_validation_689", "prediction": "all x y.((Sex(x) & Sperm(y)) -> DepositedIntoOrgan(y,x))", "score": 0}
{"id": "eqasc_validation_689", "prediction": "all x y.((Sex(x) & Sperm(y)) -> DeposesIntoReproductiveOrgan(y,x))", "score": 0}
{"id": "eqasc_validation_689", "prediction": "all x y z.((Sex(x) & Sperm(y) & Female(z)) -> DepositedIntoOrgan(y,z))", "score": 0}
{"id": "eqasc_validation_690", "prediction": "all x.(SexualUnion(x) -> (ForPleasure(x) & ForCloseness(x) & ForProcreation(x)))", "score": 0}
{"id": "eqasc_validation_690", "prediction": "all x.(SexualUnion(x) -> (ForPlenish(x) & ForCloseness(x) & ForProcreation(x)))", "score": 0}
{"id": "eqasc_validation_690", "prediction": "all x.(SexualUnion(x) -> (ForPlaise(x) & ForCloseness(x) & ForProcreation(x)))", "score": 0}
{"id": "eqasc_validation_690", "prediction": "all x.(SexualUnion(x) -> (ForPlaisance(x) & ForCloseness(x) & ForProcreation(x)))", "score": 0}
{"id": "eqasc_validation_690", "prediction": "all x.(SexualUnion(x) -> (ForPluise(x) & ForCloseness(x) & ForProcreation(x)))", "score": 0}
{"id": "eqasc_validation_690", "prediction": "all x.(SexualUnion(x) -> (ForPleasing(x) & ForCloseness(x) & ForProcreation(x)))", "score": 0}
{"id": "eqasc_validation_690", "prediction": "all x.(SexualUnion(x) -> (ForPlendom(x) & ForCloseness(x) & ForProcreation(x)))", "score": 0}
{"id": "eqasc_validation_690", "prediction": "all x.((SexualUnion(x) & ForPleasure(x) & ForCloseness(x) & ForProcreation(x)) -> ForProcreation(x))", "score": 0}
{"id": "eqasc_validation_690", "prediction": "all x.(SexualUnion(x) -> (ForPlair(x) & ForCloseness(x) & ForProcreation(x)))", "score": 0}
{"id": "eqasc_validation_690", "prediction": "all x.(SexualUnion(x) -> (ForPure(x) & ForCloseness(x) & ForProcreation(x)))", "score": 0}
{"id": "eqasc_validation_690", "prediction": "all x.(SexualUnion(x) -> (ForPluit(x) & ForCloseness(x) & ForProcreation(x)))", "score": 0}
{"id": "eqasc_validation_690", "prediction": "all x.(SexualUnion(x) -> (Pleasure(x) & Closeness(x) & Procreation(x)))", "score": 0}
{"id": "eqasc_validation_690", "prediction": "all x y.((SexualUnion(x) & Pleasure(y) & Closeness(y)) -> Procreation(x))", "score": 0}
{"id": "eqasc_validation_690", "prediction": "all x y.((SexualUnion(x) & Pleasure(y) & Closeness(y) & Procreation(x)) -> For(x,y))", "score": 0}
{"id": "eqasc_validation_691", "prediction": "all x y z.((Ssperm(x) & Vagina(y) & Procreation(z)) -> DepositedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_691", "prediction": "all x y z.((Sporem(x) & Vagina(y) & Procreation(z)) -> DepositedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_691", "prediction": "all x y.((Ssperm(x) & Vagina(y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_691", "prediction": "all x y.((Ssperm(x) & Vagina(y) & Procreation(z)) -> DepositedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_691", "prediction": "all x y.((Ssperm(x) & Vagina(y) & Procreation(y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_691", "prediction": "all x y.((Ssperm(x) & Procreation(y)) -> DepositedInVagina(x,y))", "score": 0}
{"id": "eqasc_validation_691", "prediction": "all x y z.((Sperm(x) & Vagina(y) & Procreation(z)) -> DepositedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_691", "prediction": "all x y.((Ssperm(x) & Vagina(y) & Procreation(x)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_691", "prediction": "all x y.((Sporem(x) & Vagina(y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_691", "prediction": "all x y.((Sporem(x) & Procreation(y)) -> DepositedInVagina(x,y))", "score": 0}
{"id": "eqasc_validation_691", "prediction": "all x y z.((Ssperm(x) & Vagina(y) & Procreation(z)) -> DeposesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_691", "prediction": "all x y.((Sporem(x) & Vagina(y) & Procreation(z)) -> DepositedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_691", "prediction": "all x y z.((Ssperm(x) & Vagina(y) & Procreation(z)) -> DepositedInVagina(x,y,z))", "score": 0}
{"id": "eqasc_validation_691", "prediction": "all x y z.((Ssperm(x) & Vagina(y) & Procreation(z)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_691", "prediction": "all x y z.((Ssperm(x) & Vagina(y) & Procreation(z)) -> DepositsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_691", "prediction": "all x y z.((Sporem(x) & Vagina(y) & Procreation(z)) -> DeposesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_692", "prediction": "all x.(MaleGamete(x) -> Sperm(x))", "score": 5}
{"id": "eqasc_validation_692", "prediction": "all x.(MammalGamete(x) -> Sperm(x))", "score": 1}
{"id": "eqasc_validation_692", "prediction": "all x y.((MaleGamete(x) & Sperm(y)) -> Sperm(x))", "score": 0}
{"id": "eqasc_validation_692", "prediction": "all x y.((MaleGamete(x) & Sperm(y)) -> Sperm(x,y))", "score": 0}
{"id": "eqasc_validation_692", "prediction": "all x.((MaleGamete(x) & Sperm(x)) -> Gamete(x))", "score": 0}
{"id": "eqasc_validation_692", "prediction": "all x.(MalleGamete(x) -> Sperm(x))", "score": 0}
{"id": "eqasc_validation_692", "prediction": "all x y.((MaleGamete(x) & Sperm(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_692", "prediction": "all x.((MaleGamete(x) & Sperm(x)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_692", "prediction": "all x.((MaleGamete(x) & Sperm(x)) -> Sperm(x))", "score": 0}
{"id": "eqasc_validation_692", "prediction": "all x.((MaleGamete(x) & Sperm(x)) -> MaleGamete(x))", "score": 0}
{"id": "eqasc_validation_692", "prediction": "all x.((MaleGamete(x) & Sperm(x)) -> Male(x))", "score": 0}
{"id": "eqasc_validation_692", "prediction": "all x.(MaleGamet(x) -> Sperm(x))", "score": 0}
{"id": "eqasc_validation_692", "prediction": "all x.(MammaleGamete(x) -> Sperm(x))", "score": 0}
{"id": "eqasc_validation_692", "prediction": "all x.((MaleGamete(x) & Sperm(x)) -> Are(x,y))", "score": 0}
{"id": "eqasc_validation_692", "prediction": "all x.(MameGamete(x) -> Sperm(x))", "score": 0}
{"id": "eqasc_validation_693", "prediction": "all x.((MaleGamete(x) & SexualIntercourse(x)) -> DepositedInVagina(x))", "score": 0}
{"id": "eqasc_validation_693", "prediction": "all x y.((MaleGamete(x) & Vagina(y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_693", "prediction": "all x y z.((MaleGamete(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedIn(x,y,z))", "score": 1}
{"id": "eqasc_validation_693", "prediction": "all x.(MaleGamete(x) -> DepositedInVagina(x))", "score": 0}
{"id": "eqasc_validation_693", "prediction": "all x y.((MaleGamete(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedIn(x,y,z))", "score": 1}
{"id": "eqasc_validation_693", "prediction": "all x y.((MaleGamete(x) & Vagina(y) & SexualIntercourse(y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_693", "prediction": "all x y.((MaleGamete(x) & Vagina(y) & SexualIntercourse(x)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_693", "prediction": "all x y.((MaleGamete(x) & SexualIntercourse(y)) -> DepositedInVagina(x,y))", "score": 0}
{"id": "eqasc_validation_693", "prediction": "all x.(MaleGamete(x) -> DepositedInVaginaDuringSexualIntercourse(x))", "score": 0}
{"id": "eqasc_validation_693", "prediction": "all x y.((MaleGamete(x) & Vagina(y)) -> DepositedDuringSexualIntercourse(x,y))", "score": 0}
{"id": "eqasc_validation_693", "prediction": "all x y.((MaleGamete(x) & Vagina(y) & SexualIntercourse(x,y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_693", "prediction": "all x.((MaleGamete(x) & SexualIntercourse(y)) -> DepositedInVagina(x,y))", "score": 0}
{"id": "eqasc_validation_693", "prediction": "all x y z.((MaleGamete(x) & Vagina(y) & SexualIntercourse(z)) -> DeposesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_693", "prediction": "all x y.((MaleGamete(x) & Vagina(y)) -> DepositedDuringIntercourse(x,y))", "score": 0}
{"id": "eqasc_validation_693", "prediction": "all x y z.((MaleGamete(x) & Vagina(y) & SexualIntercourse(z)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_693", "prediction": "all x y.((MaleGamete(x) & Vagina(y)) -> DeposesDuringSexualIntercourse(x,y))", "score": 0}
{"id": "eqasc_validation_694", "prediction": "all x y.((Ssperm(x) & Osculum(y)) -> ReleasedIntoWater(x,y))", "score": 0}
{"id": "eqasc_validation_694", "prediction": "all x y.((Ssperm(x) & Osculum(y)) -> ReleasedIntoSurroundingWater(x,y))", "score": 0}
{"id": "eqasc_validation_694", "prediction": "all x y z.((Ssperm(x) & Osculum(y) & Water(z)) -> ReleasedInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_694", "prediction": "all x y.((Sperm(x) & Osculum(y)) -> ReleasedIntoWater(x,y))", "score": 3}
{"id": "eqasc_validation_694", "prediction": "all x y z.((Sperm(x) & Osculum(y) & Water(z)) -> ReleasedInto(x,y,z))", "score": 3}
{"id": "eqasc_validation_694", "prediction": "all x y z.((Sporem(x) & Osculum(y) & Water(z)) -> ReleasedInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_694", "prediction": "all x y z.((Ssperm(x) & Osculum(y) & Water(z)) -> ReleasedThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_694", "prediction": "all x y.((Sperm(x) & Osculum(y)) -> ReleasedIntoSurroundingWater(x,y))", "score": 3}
{"id": "eqasc_validation_694", "prediction": "all x y.((Sporem(x) & Osculum(y)) -> ReleasedIntoWater(x,y))", "score": 0}
{"id": "eqasc_validation_694", "prediction": "all x y.((Ssperm(x) & Osculum(y)) -> ReleasedIntoWaterThrough(x,y))", "score": 0}
{"id": "eqasc_validation_694", "prediction": "all x y.((Ssperm(x) & Osculum(y)) -> ReleasedInto(x,y))", "score": 0}
{"id": "eqasc_validation_694", "prediction": "all x y.((Sporem(x) & Osculum(y)) -> ReleasedIntoSurroundingWater(x,y))", "score": 0}
{"id": "eqasc_validation_694", "prediction": "all x y z.((Ssperm(x) & Water(y) & Osculum(z)) -> ReleasedInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_694", "prediction": "all x y z.((Ssperm(x) & Osculum(y) & Water(z)) -> Released(x,y,z))", "score": 0}
{"id": "eqasc_validation_694", "prediction": "all x y.((Ssperm(x) & Water(y)) -> ReleasedThroughOsculum(x,y))", "score": 0}
{"id": "eqasc_validation_694", "prediction": "all x.((Ssperm(x) & Osculum(x)) -> ReleasedIntoSurroundingWater(x))", "score": 0}
{"id": "eqasc_validation_695", "prediction": "all x y.((MaleGamete(x) & Osculum(y)) -> ReleasedIntoSurroundingWater(x,y))", "score": 1}
{"id": "eqasc_validation_695", "prediction": "all x y z.((MaleGamete(x) & Osculum(y) & Water(z)) -> ReleasedInto(x,y,z))", "score": 1}
{"id": "eqasc_validation_695", "prediction": "all x.((MaleGamete(x) & Osculum(x)) -> ReleasedIntoSurroundingWater(x))", "score": 0}
{"id": "eqasc_validation_695", "prediction": "all x y z.((MaleGamete(x) & Osculum(y) & Osculum(z)) -> ReleasedIntoSurroundingWater(x,y,z))", "score": 0}
{"id": "eqasc_validation_695", "prediction": "all x y.((MaleGamete(x) & Osculum(y)) -> ReleasedIntoWaterThroughOsculum(x,y))", "score": 0}
{"id": "eqasc_validation_695", "prediction": "all x y.((MaleGamete(x) & Osculum(y)) -> ReleasedIntoWater(x,y))", "score": 1}
{"id": "eqasc_validation_695", "prediction": "all x.(MaleGamete(x) -> ReleasedIntoSurroundingWaterThroughOsculum(x))", "score": 0}
{"id": "eqasc_validation_695", "prediction": "all x y z.((MaleGamete(x) & Water(y) & Osculum(z)) -> ReleasedInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_695", "prediction": "all x y.((MaleGamete(x) & Osculum(y)) -> ReleasedIntoSurroundingWaterThroughOsculum(x,y))", "score": 0}
{"id": "eqasc_validation_695", "prediction": "all x y z.((MaleGamete(x) & Osculum(y) & Osculum(z)) -> ReleasedIntoWater(x,y,z))", "score": 0}
{"id": "eqasc_validation_695", "prediction": "all x y.((MammalGamete(x) & Osculum(y)) -> ReleasedIntoSurroundingWater(x,y))", "score": 1}
{"id": "eqasc_validation_695", "prediction": "all x y z.((MaleGamete(x) & Osculum(y) & Osculum(z)) -> ReleasedIntoWaterThroughOsculum(x,y,z))", "score": 0}
{"id": "eqasc_validation_695", "prediction": "all x y z.((MammalGamete(x) & Osculum(y) & Water(z)) -> ReleasedInto(x,y,z))", "score": 1}
{"id": "eqasc_validation_695", "prediction": "all x y z.((MaleGamete(x) & Osculum(y) & Water(z) & ReleasedInto(x,y,z)) -> ReleasedInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_695", "prediction": "all x.((MaleGamete(x) & Osculum(x)) -> ReleasedIntoSurroundingWaterThroughOsculum(x))", "score": 0}
{"id": "eqasc_validation_695", "prediction": "all x y z.((MaleGamete(x) & Osculum(y) & Osculum(z)) -> ReleasedIntoSurroundingWaterThroughOsculum(x,y,z))", "score": 0}
{"id": "eqasc_validation_696", "prediction": "all x y.((MaleGamete(x) & Osculum(y)) -> ReleasedIntoWater(x,y))", "score": 1}
{"id": "eqasc_validation_696", "prediction": "all x y z.((MaleGamete(x) & Osculum(y) & Water(z)) -> ReleasedInto(x,y,z))", "score": 1}
{"id": "eqasc_validation_696", "prediction": "all x.(MaleGamete(x) -> ReleasedIntoWaterThroughOsculum(x))", "score": 0}
{"id": "eqasc_validation_696", "prediction": "all x.((MaleGamete(x) & Osculum(x)) -> ReleasedIntoSurroundingWater(x))", "score": 0}
{"id": "eqasc_validation_696", "prediction": "all x y.((MaleGamete(x) & Osculum(y)) -> ReleasedIntoSurroundingWater(x,y))", "score": 1}
{"id": "eqasc_validation_696", "prediction": "all x.(MaleGamete(x) -> ReleasedIntoSurroundingWaterThroughOsculum(x))", "score": 0}
{"id": "eqasc_validation_696", "prediction": "all x.((MaleGamete(x) & Osculum(x)) -> ReleasedIntoWater(x))", "score": 0}
{"id": "eqasc_validation_696", "prediction": "all x.(MaleGamete(x) -> ReleasedIntoSurroundingWater(x))", "score": 0}
{"id": "eqasc_validation_696", "prediction": "all x y z.((MaleGamete(x) & Water(y) & Osculum(z)) -> ReleasedInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_696", "prediction": "all x y.((MaleGamete(x) & Osculum(y)) -> ReleasedIntoWaterThroughOsculum(x,y))", "score": 0}
{"id": "eqasc_validation_696", "prediction": "all x y z.((MaleGamete(x) & Osculum(y) & Osculum(z)) -> ReleasedIntoWater(x,y,z))", "score": 0}
{"id": "eqasc_validation_696", "prediction": "all x y.((MaleGamete(x) & Osculum(y)) -> ReleasedIntoWaterThrough(x,y))", "score": 0}
{"id": "eqasc_validation_696", "prediction": "all x y.((MammalGamete(x) & Osculum(y)) -> ReleasedIntoWater(x,y))", "score": 1}
{"id": "eqasc_validation_696", "prediction": "all x y z.((MaleGamete(x) & Osculum(y) & Water(z)) -> Released(x,y,z))", "score": 0}
{"id": "eqasc_validation_696", "prediction": "all x y.((MaleGamete(x) & Osculum(y)) -> ReleasedInto(x,y))", "score": 0}
{"id": "eqasc_validation_696", "prediction": "all x y.((MaleGamete(x) & Water(y)) -> ReleasedThroughOsculum(x,y))", "score": 0}
{"id": "eqasc_validation_697", "prediction": "all x y.((Lightning(x) & ForestFire(y)) -> CanCause(x,y))", "score": 0}
{"id": "eqasc_validation_697", "prediction": "all x y.((Lightning(x) & ForestFire(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_697", "prediction": "all x y z.((Lightning(x) & ForestFire(y) & ForestFire(z)) -> CanCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_697", "prediction": "all x y z.((Lightning(x) & ForestFire(y) & ForestFire(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_697", "prediction": "all x y z.((Lightning(x) & ForestFire(y) & Fire(z)) -> CanCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_697", "prediction": "all x y z.((Lightning(x) & ForestFire(y) & Fire(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_697", "prediction": "all x.(Lightning(x) -> CanCauseForestFire(x))", "score": 0}
{"id": "eqasc_validation_697", "prediction": "all x y z.((Lightning(x) & ForestFire(y) & ForestFire(z) & Causes(x,y,z)) -> CanCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_697", "prediction": "all x y z.((Lightning(x) & ForestFire(y) & Forest(z)) -> CanCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_697", "prediction": "all x y z.((Lightning(x) & ForestFire(y) & ForestFire(z)) -> Cause(x,y,z))", "score": 0}
{"id": "eqasc_validation_697", "prediction": "all x y.((Lightning(x) & ForestFire(y)) -> Cause(x,y))", "score": 0}
{"id": "eqasc_validation_697", "prediction": "all x y z.((Lightning(x) & ForestFire(y) & ForestFire(z) & Causes(x,y,z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_697", "prediction": "all x.(Lightning(x) -> CausesForestFire(x))", "score": 0}
{"id": "eqasc_validation_697", "prediction": "all x y z.((Lightning(x) & ForestFire(y) & Fire(z)) -> Cause(x,y,z))", "score": 0}
{"id": "eqasc_validation_697", "prediction": "all x y.((Lightning(x) & ForestFire(y)) -> CausesForestFire(x,y))", "score": 0}
{"id": "eqasc_validation_697", "prediction": "all x y.((Lightning(x) & ForestFire(y) & Causes(x,y)) -> CanCause(x,y))", "score": 0}
{"id": "eqasc_validation_698", "prediction": "all x y.((Bust(x) & ForestFire(y)) -> (CausesExtremeDamageToVegetation(x) & CausesExtremeDamageToWildlife(x)))", "score": 0}
{"id": "eqasc_validation_698", "prediction": "all x y.((Bust(x) & ForestFire(y)) -> (CausesEmbarrassmentToVegetation(x) & CausesEmbarrassmentToWildlife(x)))", "score": 0}
{"id": "eqasc_validation_698", "prediction": "all x y.((Bush(x) & ForestFire(y)) -> (CausesExtremeDamageToVegetation(x) & CausesExtremeDamageToWildlife(x)))", "score": 0}
{"id": "eqasc_validation_698", "prediction": "all x y z.((Bust(x) & ForestFire(y) & Vegetation(z) & Wildlife(z)) -> CausesExtremeDamage(x,y,z))", "score": 0}
{"id": "eqasc_validation_698", "prediction": "all x y z.((Bust(x) & ForestFire(y) & Vegetation(z) & Wildlife(z)) -> CausesEmbarrassmentalDamage(x,y,z))", "score": 0}
{"id": "eqasc_validation_698", "prediction": "all x y z.((Bush(x) & ForestFire(y) & Vegetation(z) & Wildlife(z)) -> CausesExtremeDamage(x,y,z))", "score": 0}
{"id": "eqasc_validation_698", "prediction": "all x y z.((Bust(x) & ForestFire(y) & Vegetation(z) & Wildlife(z)) -> CausesDamage(x,y,z))", "score": 0}
{"id": "eqasc_validation_698", "prediction": "all x y z.((Bust(x) & ForestFire(y) & Vegetation(z) & Wildlife(z)) -> CausesEternalDamage(x,y,z))", "score": 0}
{"id": "eqasc_validation_698", "prediction": "all x y z.((Bush(x) & ForestFire(y) & Vegetation(z) & Wildlife(z)) -> CausesEmbarrassmentalDamage(x,y,z))", "score": 0}
{"id": "eqasc_validation_698", "prediction": "all x y.((Bust(x) & ForestFire(y)) -> (CausesExtremeDamageToVegetation(x) & CausesExtremeDamageToWildlife(y)))", "score": 0}
{"id": "eqasc_validation_698", "prediction": "all x y.((Bust(x) & ForestFire(y)) -> (CausesEmbarrassmentToVegetation(x) & CausesEmbarrassmentToWildlife(y)))", "score": 0}
{"id": "eqasc_validation_698", "prediction": "all x y z.((Bush(x) & ForestFire(y) & Vegetation(z) & Wildlife(z)) -> CausesDamage(x,y,z))", "score": 0}
{"id": "eqasc_validation_698", "prediction": "all x y.((Bush(x) & ForestFire(y)) -> (CausesExtremeDamageToVegetation(x) & CausesExtremeDamageToWildlife(y)))", "score": 0}
{"id": "eqasc_validation_698", "prediction": "all x y z.((Bust(x) & ForestFire(y) & Vegetation(z) & Wildlife(z)) -> CausesEmbarrassingDamage(x,y,z))", "score": 0}
{"id": "eqasc_validation_699", "prediction": "all x.(Lightning(x) -> (CausesDamageToVegetation(x) & CausesDamageToWildlife(x)))", "score": 0}
{"id": "eqasc_validation_699", "prediction": "all x.(Lightning(x) -> (CausesDamage(x,Vegetation) & CausesDamage(x,Wildlife)))", "score": 0}
{"id": "eqasc_validation_699", "prediction": "all x y.((Lightning(x) & Vegetation(y) & Wildlife(y)) -> CausesDamage(x,y))", "score": 0}
{"id": "eqasc_validation_699", "prediction": "all x.(Lightning(x) -> (CausesDamageToVegetation(x) | CausesDamageToWildlife(x)))", "score": 0}
{"id": "eqasc_validation_699", "prediction": "all x y z.((Lightning(x) & Vegetation(y) & Wildlife(z)) -> CausesDamage(x,y,z))", "score": 0}
{"id": "eqasc_validation_699", "prediction": "all x.(Lightning(x) -> (CausesDamage(x,Vegetation) | CausesDamage(x,Wildlife)))", "score": 0}
{"id": "eqasc_validation_699", "prediction": "all x y.((Lightning(x) & Vegetation(y) & Wildlife(z)) -> CausesDamage(x,y,z))", "score": 0}
{"id": "eqasc_validation_699", "prediction": "all x.(Lightning(x) -> (CausesDamage(x) & ToVegetation(x) & ToWildlife(x)))", "score": 0}
{"id": "eqasc_validation_699", "prediction": "all x y.((Lightning(x) & (Vegetation(y) | Wildlife(y))) -> CausesDamage(x,y))", "score": 0}
{"id": "eqasc_validation_699", "prediction": "all x y.((Lightning(x) & Vegetation(y) & Wildlife(y)) -> CanCauseDamage(x,y))", "score": 0}
{"id": "eqasc_validation_699", "prediction": "all x y z.((Lightning(x) & Vegetation(y) & Wildlife(z)) -> (CausesDamage(x,y) | CausesDamage(x,z)))", "score": 0}
{"id": "eqasc_validation_699", "prediction": "all x y z.((Lightning(x) & Vegetation(y) & Wildlife(z)) -> CanCauseDamage(x,y,z))", "score": 0}
{"id": "eqasc_validation_699", "prediction": "all x.(Lightning(x) -> (CausesDamage(x) & ToVegetationAndWildlife(x)))", "score": 0}
{"id": "eqasc_validation_699", "prediction": "all x.(Lightning(x) -> (CausesDamage(x) & (Vegetation(x) | Wildlife(x))))", "score": 0}
{"id": "eqasc_validation_699", "prediction": "all x y z.((Lightning(x) & Vegetation(y) & Wildlife(z)) -> (CausesDamage(x,y,z) | CausesDamage(x,z)))", "score": 0}
{"id": "eqasc_validation_699", "prediction": "all x y.((Lightning(x) & Vegetation(y)) -> CausesDamage(x,y))", "score": 0}
{"id": "eqasc_validation_700", "prediction": "all x.(ForestFire(x) -> BadForEnvironment(x))", "score": 0}
{"id": "eqasc_validation_700", "prediction": "all x y.((ForestFire(x) & Environment(y)) -> BadFor(x,y))", "score": 0}
{"id": "eqasc_validation_700", "prediction": "all x y z.((ForestFire(x) & Environment(y) & Environment(z)) -> BadFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_700", "prediction": "all x y.((ForestFire(x) & Environment(y)) -> Bad(x,y))", "score": 0}
{"id": "eqasc_validation_700", "prediction": "all x y z.((ForestFire(x) & Environment(y) & Environment(z)) -> BadFor(x,y))", "score": 0}
{"id": "eqasc_validation_700", "prediction": "all x y.((ForestFeuer(x) & Environment(y)) -> BadFor(x,y))", "score": 0}
{"id": "eqasc_validation_700", "prediction": "all x y.((ForestFire(x) & Environment(y) & BadFor(x,y)) -> BadFor(x,y))", "score": 0}
{"id": "eqasc_validation_700", "prediction": "all x.((ForestFire(x) & BadForEnvironment(x)) -> BadForEnvironment(x))", "score": 0}
{"id": "eqasc_validation_700", "prediction": "all x.(ForestFeuer(x) -> BadForEnvironment(x))", "score": 0}
{"id": "eqasc_validation_700", "prediction": "all x y z.((ForestFire(x) & Environment(y) & Environment(z) & BadFor(x,y,z)) -> BadFor(x,y))", "score": 0}
{"id": "eqasc_validation_700", "prediction": "all x y z.((ForestFire(x) & Environment(y) & Environment(z) & BadFor(x,y)) -> BadFor(x,z))", "score": 0}
{"id": "eqasc_validation_700", "prediction": "all x y z.((ForestFire(x) & Environment(y) & Environment(z) & BadFor(x,y,z)) -> BadFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_700", "prediction": "all x y.((ForestFurniture(x) & Environment(y)) -> BadFor(x,y))", "score": 0}
{"id": "eqasc_validation_700", "prediction": "all x y z.((ForestFire(x) & Environment(y) & Environment(z)) -> Bad(x,y,z))", "score": 0}
{"id": "eqasc_validation_700", "prediction": "all x y z.((ForestFire(x) & Environment(y) & Environmental(z)) -> BadFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_700", "prediction": "all x.((ForestFire(x) & Environment(y)) -> BadFor(x,y))", "score": 0}
{"id": "eqasc_validation_701", "prediction": "all x.(Lightning(x) -> BadForEnvironment(x))", "score": 0}
{"id": "eqasc_validation_701", "prediction": "all x y.((Lightning(x) & Environment(y)) -> BadFor(x,y))", "score": 0}
{"id": "eqasc_validation_701", "prediction": "all x y z.((Lightning(x) & Environment(y) & Environment(z)) -> BadFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_701", "prediction": "all x y.((Lightning(x) & Environment(y)) -> Bad(x,y))", "score": 0}
{"id": "eqasc_validation_701", "prediction": "all x.(Lightning(x) -> CanBeBadForEnvironment(x))", "score": 0}
{"id": "eqasc_validation_701", "prediction": "all x y z.((Lightning(x) & Environment(y) & Environment(z)) -> BadFor(x,y))", "score": 0}
{"id": "eqasc_validation_701", "prediction": "all x.(Lightning(x) -> (BadForEnvironment(x)))", "score": 0}
{"id": "eqasc_validation_701", "prediction": "all x.((Lightning(x) & Environment(y)) -> BadFor(x,y))", "score": 0}
{"id": "eqasc_validation_701", "prediction": "all x y z.((Lightning(x) & Environment(y) & Environment(z)) -> Bad(x,y,z))", "score": 0}
{"id": "eqasc_validation_701", "prediction": "all x y z.((Lightning(x) & Environment(y) & Environment(z)) -> CanBeBad(x,y,z))", "score": 0}
{"id": "eqasc_validation_701", "prediction": "all x.(Lightning(x) -> BADForEnvironment(x))", "score": 0}
{"id": "eqasc_validation_701", "prediction": "all x y z.((Lightning(x) & Environment(y) & Environment(z)) -> Bad(x,y))", "score": 0}
{"id": "eqasc_validation_701", "prediction": "all x y.((Lightning(x) & Environment(y)) -> CanBeBad(x,y))", "score": 0}
{"id": "eqasc_validation_701", "prediction": "all x y.((Lightning(x) & Environment(y) & BadFor(x,y)) -> BadFor(x,y))", "score": 0}
{"id": "eqasc_validation_701", "prediction": "all x.(Lightning(x) -> CanBadForEnvironment(x))", "score": 0}
{"id": "eqasc_validation_702", "prediction": "all x.(Thunderstorm(x) -> ContainsLightning(x))", "score": 0}
{"id": "eqasc_validation_702", "prediction": "all x y.((Thunderstorm(x) & Lightning(y)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_702", "prediction": "all x.(Thunderstorm(x) -> ContainsLiterary(x))", "score": 0}
{"id": "eqasc_validation_702", "prediction": "all x.(Thunderstorm(x) -> HasLightning(x))", "score": 0}
{"id": "eqasc_validation_702", "prediction": "all x.(Thunderstorm(x) -> (ContainsLightning(x) & ContainsLightning(x)))", "score": 0}
{"id": "eqasc_validation_702", "prediction": "all x.(Thunderstorm(x) -> IncorporatesLightning(x))", "score": 0}
{"id": "eqasc_validation_702", "prediction": "all x.(Thunderstorm(x) -> (ContainsLightning(x) | ContainsLightning(x)))", "score": 0}
{"id": "eqasc_validation_702", "prediction": "all x.(Thunderstorm(x) -> InvolvesLightning(x))", "score": 0}
{"id": "eqasc_validation_702", "prediction": "all x.(Tornado(x) -> ContainsLightning(x))", "score": 0}
{"id": "eqasc_validation_702", "prediction": "all x.(Thunderstorm(x) -> ContainLightning(x))", "score": 0}
{"id": "eqasc_validation_702", "prediction": "(all x.(Thunderstorm(x) -> ContainsLightning(x)))", "score": 0}
{"id": "eqasc_validation_702", "prediction": "all x.(Thunderstorm(x) -> IncludesLightning(x))", "score": 0}
{"id": "eqasc_validation_702", "prediction": "all x y.((Thunderstorm(x) & Lightning(y)) -> Contain(x,y))", "score": 0}
{"id": "eqasc_validation_702", "prediction": "all x.(Thunderstorm(x) -> (ContainsLightning(x) & HasLightning(x)))", "score": 0}
{"id": "eqasc_validation_702", "prediction": "all x y.((Thunderstorm(x) & Lightning(y)) -> Incorporates(x,y))", "score": 0}
{"id": "eqasc_validation_703", "prediction": "all x y.((Thunderstorm(x) & ForestFire(y)) -> CanCause(x,y))", "score": 0}
{"id": "eqasc_validation_703", "prediction": "all x y.((Thunderstorm(x) & ForestFire(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_703", "prediction": "all x.(Thunderstorm(x) -> CausesForestFires(x))", "score": 0}
{"id": "eqasc_validation_703", "prediction": "all x y z.((Thunderstorm(x) & ForestFire(y) & ForestFire(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_703", "prediction": "all x.(Thunderstorm(x) -> CanCauseForestFires(x))", "score": 0}
{"id": "eqasc_validation_703", "prediction": "all x y z.((Thunderstorm(x) & ForestFire(y) & ForestFire(z)) -> CanCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_703", "prediction": "all x y.((Thunderstorm(x) & ForestFire(y)) -> Cause(x,y))", "score": 0}
{"id": "eqasc_validation_703", "prediction": "all x.(Thunderstorm(x) -> (CausesForestFires(x) & CausesForestFires(x)))", "score": 0}
{"id": "eqasc_validation_703", "prediction": "all x y z.((Thunderstorm(x) & ForestFire(y) & ForestFire(z)) -> Cause(x,y,z))", "score": 0}
{"id": "eqasc_validation_703", "prediction": "all x y z.((Thunderstorm(x) & ForestFire(y) & Forest(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_703", "prediction": "all x y z.((Thunderstorm(x) & ForestFire(y) & Forest(z)) -> CanCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_703", "prediction": "all x y z.((Thunderstorm(x) & ForestFire(y) & ForestFarm(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_703", "prediction": "all x y z.((Thunderstorm(x) & ForestFire(y) & Fire(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_703", "prediction": "all x y z.((Thunderstorm(x) & ForestFire(y) & Fire(z)) -> CanCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_703", "prediction": "all x y z.((Thunderstorm(x) & ForestFire(y) & ForestFarm(z)) -> CanCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_703", "prediction": "all x.(Thunderstorm(x) -> CausesForestFire(x))", "score": 0}
{"id": "eqasc_validation_704", "prediction": "all x y.((Fire(x) & Forest(y) & CleansOut(x,y)) -> (NewGrowth(x) & Revitalization(x)))", "score": 0}
{"id": "eqasc_validation_704", "prediction": "all x y.((Fire(x) & Forest(y) & CleansOut(x,y)) -> (LeadsToNewGrowth(x) & Revitalizes(x)))", "score": 0}
{"id": "eqasc_validation_704", "prediction": "all x y.((Fire(x) & Forest(y)) -> (CleansOut(x,y) & LeadsToNewGrowth(x) & Revitalizes(x)))", "score": 0}
{"id": "eqasc_validation_704", "prediction": "all x y.((Fire(x) & Forest(y) & CleansOut(x,y)) -> (LeadsToNewGrowth(x,y) & Revitalizes(x,y)))", "score": 0}
{"id": "eqasc_validation_704", "prediction": "all x y.((Fire(x) & Forest(y)) -> (CleaningOut(x,y) & NewGrowth(x) & Revitalization(x)))", "score": 0}
{"id": "eqasc_validation_704", "prediction": "all x y.((Fire(x) & Forest(y) & CleansOut(x,y)) -> (LeadsToNewGrowth(x) & LeadsToRevitalization(x)))", "score": 0}
{"id": "eqasc_validation_704", "prediction": "all x y.((Fire(x) & Forest(y) & CleaningOut(x,y)) -> (NewGrowth(x) & Revitalization(x)))", "score": 0}
{"id": "eqasc_validation_704", "prediction": "all x.((Fire(x) & Forest(y) & CleansOut(x,y)) -> (NewGrowth(x) & Revitalization(x)))", "score": 0}
{"id": "eqasc_validation_704", "prediction": "all x y z.((Fire(x) & Forest(y) & Forest(z) & CleansOut(x,y,z)) -> (LeadsToNewGrowth(x) & Revitalizes(x)))", "score": 0}
{"id": "eqasc_validation_704", "prediction": "all x y z.((Fire(x) & Forest(y) & Forest(z) & CleansOut(x,y)) -> (LeadsToNewGrowth(x,z) & Revitalizes(x,y)))", "score": 0}
{"id": "eqasc_validation_704", "prediction": "all x y.((Fire(x) & Forest(y) & CleansOut(x,y)) -> LeadsToNewGrowthAndRevitalization(x))", "score": 0}
{"id": "eqasc_validation_704", "prediction": "all x.((Fire(x) & Forest(y) & CleansOut(x,y)) -> (LeadsToNewGrowth(x) & Revitalizes(x)))", "score": 0}
{"id": "eqasc_validation_704", "prediction": "all x y.((Fire(x) & Forest(y) & CleansOut(x,y)) -> (NewGrowth(x,y) & Revitalization(x,y)))", "score": 0}
{"id": "eqasc_validation_704", "prediction": "all x y.((Fire(x) & Forest(y)) -> (CleaningOut(x,y) & LeadsToNewGrowth(x) & Revitalizes(x)))", "score": 0}
{"id": "eqasc_validation_704", "prediction": "all x y.((Fire(x) & Forest(y)) -> (CleansOut(x,y) & LeadsToNewGrowth(x) & LeadsToRevitalization(x)))", "score": 0}
{"id": "eqasc_validation_704", "prediction": "all x y z.((Fire(x) & Forest(y) & Forest(z) & CleansOut(x,y)) -> (LeadsToNewGrowth(x) & Revitalizes(x)))", "score": 0}
{"id": "eqasc_validation_705", "prediction": "all x y.((Lightning(x) & Forest(y)) -> (CausesNewGrowth(x,y) & Revitalizes(x,y)))", "score": 0}
{"id": "eqasc_validation_705", "prediction": "all x.(Lightning(x) -> (CausesNewGrowth(x) & RevitalizesForest(x)))", "score": 0}
{"id": "eqasc_validation_705", "prediction": "all x y z.((Lightning(x) & Forest(y) & Forest(z)) -> (CausesNewGrowth(x,y) & Revitalizes(x,z)))", "score": 0}
{"id": "eqasc_validation_705", "prediction": "all x y.((Lightning(x) & Forest(y)) -> (CausesNewGrowth(x,y) & CausesRevitalization(x,y)))", "score": 0}
{"id": "eqasc_validation_705", "prediction": "all x y.((Lightning(x) & Forest(y)) -> (CausesNewGrowth(x,y) & RevitalizesForest(x,y)))", "score": 0}
{"id": "eqasc_validation_705", "prediction": "all x y.((Lightning(x) & Forest(y)) -> (CausesNewGrowth(x,y) & Rejuvenates(x,y)))", "score": 0}
{"id": "eqasc_validation_705", "prediction": "all x y.((Lightning(x) & Forest(y)) -> (CausesNewGrowth(x) & Revitalizes(x,y)))", "score": 0}
{"id": "eqasc_validation_705", "prediction": "all x y.((Lightning(x) & Forest(y)) -> CausesNewGrowthAndRevitalization(x,y))", "score": 0}
{"id": "eqasc_validation_705", "prediction": "all x y z.((Lightning(x) & Forest(y) & Forest(z)) -> (CausesNewGrowth(x,y) & Revitalizes(x,y,z)))", "score": 0}
{"id": "eqasc_validation_705", "prediction": "all x y.((Lightning(x) & Forest(y)) -> (CausesNewGrowth(x,y) & CausesVitalization(x,y)))", "score": 0}
{"id": "eqasc_validation_705", "prediction": "all x y z.((Lightning(x) & Forest(y) & Forest(z)) -> (CausesNewGrowth(x,y,z) & Revitalizes(x,y)))", "score": 0}
{"id": "eqasc_validation_705", "prediction": "all x y z.((Lightning(x) & Forest(y) & Forest(z)) -> (CausesNewGrowth(x,y) & CausesRevitalization(x,z)))", "score": 0}
{"id": "eqasc_validation_705", "prediction": "all x y.((Lightning(x) & Forest(y)) -> (CausesNewGrowth(x,y) | Revitalizes(x,y)))", "score": 0}
{"id": "eqasc_validation_705", "prediction": "all x y z.((Lightning(x) & Forest(y) & Growth(z)) -> (CausesNewGrowth(x,y) & Revitalizes(x,z)))", "score": 0}
{"id": "eqasc_validation_705", "prediction": "all x y.((Lightning(x) & Forest(y)) -> (CausesNewGrowth(x,y) & Revivifies(x,y)))", "score": 0}
{"id": "eqasc_validation_706", "prediction": "all x.(Lightning(x) -> VeryCommonDuringStorms(x))", "score": 0}
{"id": "eqasc_validation_706", "prediction": "all x y.((Lightning(x) & Storm(y)) -> VeryCommon(x,y))", "score": 0}
{"id": "eqasc_validation_706", "prediction": "all x y.((Lightning(x) & Storm(y)) -> VeryCommonDuring(x,y))", "score": 0}
{"id": "eqasc_validation_706", "prediction": "all x.((Lightning(x) & Storm(x)) -> VeryCommon(x))", "score": 0}
{"id": "eqasc_validation_706", "prediction": "all x y z.((Lightning(x) & Storm(y) & Storm(z)) -> VeryCommon(x,y,z))", "score": 0}
{"id": "eqasc_validation_706", "prediction": "all x y z.((Lightning(x) & Storm(y) & Storm(z)) -> VeryCommonDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_706", "prediction": "all x.(Lightning(x) -> CommonDuringStorms(x))", "score": 0}
{"id": "eqasc_validation_706", "prediction": "all x.(Lightning(x) -> VeryCommonDuringStorm(x))", "score": 0}
{"id": "eqasc_validation_706", "prediction": "all x.((Lightning(x) & Storm(y)) -> VeryCommon(x,y))", "score": 0}
{"id": "eqasc_validation_706", "prediction": "all x y.((Lightning(x) & Storm(y)) -> CommonDuring(x,y))", "score": 0}
{"id": "eqasc_validation_706", "prediction": "all x.((Lightning(x) & Storm(x)) -> VeryCommonDuring(x,y))", "score": 0}
{"id": "eqasc_validation_706", "prediction": "all x.((Lightning(x) & Storm(y)) -> VeryCommonDuring(x,y))", "score": 0}
{"id": "eqasc_validation_706", "prediction": "all x y z.((Lightning(x) & Storm(y) & Storm(z)) -> CommonDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_707", "prediction": "all x y.((ForestFire(x) & ThunderStorm(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_707", "prediction": "all x y z.((ForestFire(x) & ThunderStorm(y) & ThunderStorm(z)) -> CausedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_707", "prediction": "all x.(ForestFire(x) -> (CausedByThunderStorms(x) & CausedByThunderStorms(x)))", "score": 0}
{"id": "eqasc_validation_707", "prediction": "all x.(ForestFire(x) -> CausedByThunderStorms(x))", "score": 0}
{"id": "eqasc_validation_707", "prediction": "all x y z.((ForestFire(x) & ThunderStorm(y) & Thunderstorm(z)) -> CausedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_707", "prediction": "all x.(ForestFire(x) -> (CausedByThunderStorms(x) | CausedByThunderStorms(x)))", "score": 0}
{"id": "eqasc_validation_707", "prediction": "all x y.((ForestFire(x) & ThunderStorm(y)) -> (CausedBy(x,y) & CausedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_707", "prediction": "all x y.((ForestFire(x) & ThunderStorm(y)) -> CanCause(x,y))", "score": 0}
{"id": "eqasc_validation_707", "prediction": "all x y z.((ForestFire(x) & ThunderStorm(y) & ThunderStorm(z)) -> CanCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_707", "prediction": "all x y z.((ForestFire(x) & ThunderStorm(y) & Thunder(z)) -> CausedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_707", "prediction": "all x y z.((ForestFire(x) & ThunderStorm(y) & ThunderStorm(z)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_707", "prediction": "all x.(ForestFire(x) -> (CausedByThunderStorm(x) & CausedByThunderStorm(x)))", "score": 0}
{"id": "eqasc_validation_707", "prediction": "all x y.((ForestFire(x) & ThunderStorm(y)) -> CanBeCausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_707", "prediction": "all x y z.((ForestFire(x) & ThunderStorm(y) & ThunderStorm(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_707", "prediction": "all x.(ForestFire(x) -> (CausedByThunderStorm(x) | CausedByThunderStorm(x)))", "score": 0}
{"id": "eqasc_validation_708", "prediction": "all x.((Lightning(x) & MajorCauseOfFires(x)) -> MajorCauseOfFires(x))", "score": 0}
{"id": "eqasc_validation_708", "prediction": "all x.(Lightning(x) -> MajorCauseOfFires(x))", "score": 0}
{"id": "eqasc_validation_708", "prediction": "all x y.((Lightning(x) & Fire(y)) -> MajorCause(x,y))", "score": 0}
{"id": "eqasc_validation_708", "prediction": "all x y.((Lightning(x) & Fire(y)) -> MajorCauseOf(x,y))", "score": 0}
{"id": "eqasc_validation_708", "prediction": "all x.((Lightning(x) & FireCause(x)) -> MajorCause(x))", "score": 0}
{"id": "eqasc_validation_708", "prediction": "all x y z.((Lightning(x) & Fire(y) & Fire(z)) -> MajorCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_708", "prediction": "all x.((Lightning(x) & Fire(x)) -> MajorCause(x))", "score": 0}
{"id": "eqasc_validation_708", "prediction": "all x.((Lightning(x) & MajorCauseOfFires(x)) -> Overall(x))", "score": 0}
{"id": "eqasc_validation_708", "prediction": "all x.((Lightning(x) & MajorCauseOfFires(x)) -> (Overall(x) & MajorCauseOfFires(x)))", "score": 0}
{"id": "eqasc_validation_708", "prediction": "all x.((Lightning(x) & MajorFireCause(x)) -> MajorCause(x))", "score": 0}
{"id": "eqasc_validation_708", "prediction": "all x.((Lightning(x) & CauseOfFires(x)) -> MajorCauseOfFires(x))", "score": 0}
{"id": "eqasc_validation_708", "prediction": "all x.((Lightning(x) & MajorCauseOfFires(x)) -> CauseOfFires(x))", "score": 0}
{"id": "eqasc_validation_708", "prediction": "all x.((Lightning(x) & Fire(y)) -> MajorCause(x,y))", "score": 0}
{"id": "eqasc_validation_708", "prediction": "all x.((Lightning(x) & MajorCauseOfFires(x)) -> MajorCause(x))", "score": 0}
{"id": "eqasc_validation_708", "prediction": "all x.((Lightning(x) & MajorCauseOfFires(x)) -> FireCause(x))", "score": 0}
{"id": "eqasc_validation_709", "prediction": "all x y.((Lightning(x) & Fire(y)) -> Ignites(x,y))", "score": 0}
{"id": "eqasc_validation_709", "prediction": "all x y z.((Lightning(x) & Fire(y) & Fire(z)) -> Ignites(x,y,z))", "score": 0}
{"id": "eqasc_validation_709", "prediction": "all x y z.((Lightning(x) & Fire(y) & Fire(z)) -> Ignites(x,y))", "score": 0}
{"id": "eqasc_validation_709", "prediction": "all x.(Lightning(x) -> IgnitesFires(x))", "score": 0}
{"id": "eqasc_validation_709", "prediction": "all x y z.((Lightning(x) & Fire(y) & Fire(z) & Ignites(x,y)) -> Ignites(x,z))", "score": 0}
{"id": "eqasc_validation_709", "prediction": "all x y z.((Lightning(x) & Fire(y) & Fire(z) & Ignites(x,y,z)) -> Ignites(x,y,z))", "score": 0}
{"id": "eqasc_validation_709", "prediction": "all x y.((Lightning(x) & Fire(y) & Ignites(x,y)) -> Ignites(x,y))", "score": 0}
{"id": "eqasc_validation_709", "prediction": "all x y z.((Lightning(x) & Fire(y) & Fire(z) & Ignites(x,y,z)) -> Ignites(x,y))", "score": 0}
{"id": "eqasc_validation_709", "prediction": "all x y z w.((Lightning(x) & Fire(y) & Fire(z) & Fire(w)) -> Ignites(x,y,z))", "score": 0}
{"id": "eqasc_validation_709", "prediction": "all x y z.((Lightning(x) & Fire(y) & Fire(z)) -> Inflammates(x,y,z))", "score": 0}
{"id": "eqasc_validation_709", "prediction": "all x y z w.((Lightning(x) & Fire(y) & Fire(z)) -> Ignites(x,y,z))", "score": 0}
{"id": "eqasc_validation_709", "prediction": "all x y z.((Lightning(x) & Fire(y) & Fire(z)) -> Ignite(x,y,z))", "score": 0}
{"id": "eqasc_validation_709", "prediction": "all x y z w.((Lightning(x) & Fire(y) & Fire(z) & Fire(w)) -> Ignites(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_709", "prediction": "all x y z w.((Lightning(x) & Fire(y) & Fire(z) & Ignites(x,y)) -> Ignites(x,z))", "score": 0}
{"id": "eqasc_validation_709", "prediction": "all x y.((Lightning(x) & Fire(y)) -> Inflammates(x,y))", "score": 0}
{"id": "eqasc_validation_709", "prediction": "all x y z.((Lightning(x) & Fire(y) & Fire(z) & Ignites(x,y)) -> Ignites(x,y,z))", "score": 0}
{"id": "eqasc_validation_710", "prediction": "all x.(ForestFire(x) -> Wildfire(x))", "score": 12}
{"id": "eqasc_validation_710", "prediction": "all x.((ForestFire(x) & Wildfire(x)) -> Examples(x))", "score": 0}
{"id": "eqasc_validation_710", "prediction": "all x y.((ForestFire(x) & Wildfire(y)) -> Examples(x,y))", "score": 0}
{"id": "eqasc_validation_710", "prediction": "all x.((ForestFire(x) & Wildfire(x)) -> ExamplesOf(x,y))", "score": 0}
{"id": "eqasc_validation_710", "prediction": "all x y.((ForestFire(x) & Wildfire(y)) -> ExamplesOf(x,y))", "score": 0}
{"id": "eqasc_validation_710", "prediction": "all x y.((ForestFire(x) & Wildfire(y)) -> Example(x,y))", "score": 0}
{"id": "eqasc_validation_710", "prediction": "all x.((ForestFire(x) & Wildfire(x)) -> Example(x))", "score": 0}
{"id": "eqasc_validation_710", "prediction": "all x y z.((ForestFire(x) & Wildfire(y) & Fire(z)) -> Examples(x,y,z))", "score": 0}
{"id": "eqasc_validation_710", "prediction": "all x y z.((ForestFire(x) & Wildfire(y) & Fire(z)) -> ExamplesOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_710", "prediction": "all x y.((ForestFire(x) & Wildfire(y)) -> (Example(x,y) & Wildfire(y)))", "score": 0}
{"id": "eqasc_validation_710", "prediction": "all x.(Fire(x) -> Wildfire(x))", "score": 0}
{"id": "eqasc_validation_710", "prediction": "all x y z.((ForestFire(x) & Wildfire(y) & Fire(z)) -> Example(x,y,z))", "score": 0}
{"id": "eqasc_validation_710", "prediction": "all x.((ForestFire(x) & Wildfire(x)) -> Examples(x,y))", "score": 0}
{"id": "eqasc_validation_710", "prediction": "all x.(ForestFire(x) -> WildFire(x))", "score": 0}
{"id": "eqasc_validation_710", "prediction": "all x.((ForestFire(x) & Wildfire(y)) -> Examples(x,y))", "score": 0}
{"id": "eqasc_validation_711", "prediction": "all x y.((Wildfire(x) & Lightning(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_711", "prediction": "all x.(Wildfire(x) -> (CausedByLightning(x) & CausedByLightning(x)))", "score": 0}
{"id": "eqasc_validation_711", "prediction": "all x y z.((Wildfire(x) & Lightning(y) & Lightning(z)) -> CausedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_711", "prediction": "all x.(Wildfire(x) -> CausedByLightning(x))", "score": 0}
{"id": "eqasc_validation_711", "prediction": "all x.(Wildfire(x) -> (CausedByLightning(x) & CausedByLightning(x) & CausedByLightning(x)))", "score": 0}
{"id": "eqasc_validation_711", "prediction": "all x.((Wildfire(x) & Lightning(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_711", "prediction": "all x y z.((Wildfire(x) & Lightning(y) & Lightning(z)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_711", "prediction": "all x y z.((Wildfire(x) & Lightning(y) & Lightning(z)) -> (CausedBy(x,y) & CausedBy(x,z)))", "score": 0}
{"id": "eqasc_validation_711", "prediction": "all x y z.((Wildfire(x) & Lightning(y) & Lightning(z) & CausedBy(x,y,z)) -> Wildfire(x))", "score": 0}
{"id": "eqasc_validation_711", "prediction": "all x y z.((Wildfire(x) & Lightning(y) & Lightning(z)) -> (CausedBy(x,y,z) & CausedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_711", "prediction": "all x y.((Wildfire(x) & Lightning(y) & CausedBy(x,y)) -> Wildfire(x))", "score": 0}
{"id": "eqasc_validation_711", "prediction": "all x y.((Wildfire(x) & Lightning(y) & CausedBy(x,y)) -> WildfireCausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_711", "prediction": "all x y.((Wildfire(x) & Lightning(y) & CausedBy(x,y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_712", "prediction": "all x.(Lightning(x) -> CanCauseWildfire(x))", "score": 0}
{"id": "eqasc_validation_712", "prediction": "all x y.((Lightning(x) & Wildfire(y)) -> CanCause(x,y))", "score": 0}
{"id": "eqasc_validation_712", "prediction": "all x y z.((Lightning(x) & Wildfire(y) & Fire(z)) -> CanCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_712", "prediction": "all x y.((Lightning(x) & Wildfire(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_712", "prediction": "all x.(Lightning(x) -> CausesWildfire(x))", "score": 0}
{"id": "eqasc_validation_712", "prediction": "all x y z.((Lightning(x) & Wildfire(y) & Wildfire(z)) -> CanCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_712", "prediction": "all x y.((Lightning(x) & Wildfire(y)) -> Cause(x,y))", "score": 0}
{"id": "eqasc_validation_712", "prediction": "all x y z.((Lightning(x) & Wildfire(y) & Fire(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_712", "prediction": "all x y z.((Lightning(x) & Wildfire(y) & Wildfire(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_712", "prediction": "all x y z.((Lightning(x) & Wildfire(y) & Fire(z)) -> Cause(x,y,z))", "score": 0}
{"id": "eqasc_validation_712", "prediction": "all x.(Lightning(x) -> CanCause(x,wildfire))", "score": 0}
{"id": "eqasc_validation_712", "prediction": "all x y z.((Lightning(x) & Wildfire(y) & Wildfire(z)) -> Cause(x,y,z))", "score": 0}
{"id": "eqasc_validation_712", "prediction": "all x y z.((Lightning(x) & Wildfire(y) & Fire(z)) -> CanCause(x,y))", "score": 0}
{"id": "eqasc_validation_712", "prediction": "all x y z.((Lightning(x) & Wildfire(y) & Wildfire(z)) -> CanCause(x,y))", "score": 0}
{"id": "eqasc_validation_712", "prediction": "all x.(Lightning(x) -> (CausesWildfire(x)))", "score": 0}
{"id": "eqasc_validation_712", "prediction": "all x.((Lightning(x) & Wildfire(x)) -> CanCause(x,y))", "score": 0}
{"id": "eqasc_validation_713", "prediction": "all x y.((Town(x) & ForestFire(y)) -> DestroyedBy(x,y))", "score": 0}
{"id": "eqasc_validation_713", "prediction": "all x.((Town(x) & ForestFire(x)) -> DestroyedBy(x,y))", "score": 0}
{"id": "eqasc_validation_713", "prediction": "all x y z.((Town(x) & ForestFire(y) & ForestFire(z)) -> DestroyedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_713", "prediction": "all x.((Town(x) & ForestFire(x)) -> Destroyed(x))", "score": 0}
{"id": "eqasc_validation_713", "prediction": "all x y.((Town(x) & ForestFire(y)) -> Destroyed(x,y))", "score": 0}
{"id": "eqasc_validation_713", "prediction": "all x y z.((Town(x) & ForestFire(y) & ForestFire(z)) -> Destroyed(x,y,z))", "score": 0}
{"id": "eqasc_validation_713", "prediction": "all x.((Town(x) & ForestFire(x)) -> DestroyedBy(x,Town))", "score": 0}
{"id": "eqasc_validation_713", "prediction": "all x.((Town(x) & ForestFire(x)) -> DestroyedBy(x))", "score": 0}
{"id": "eqasc_validation_713", "prediction": "all x y.((Town(x) & ForestFire(y)) -> DissectedBy(x,y))", "score": 0}
{"id": "eqasc_validation_713", "prediction": "all x y z.((Town(x) & ForestFire(y) & Fire(z)) -> DestroyedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_713", "prediction": "all x y.((Town(x) & ForestFire(y)) -> DefiredBy(x,y))", "score": 0}
{"id": "eqasc_validation_713", "prediction": "all x y z.((Town(x) & ForestFire(y) & ForestFire(z)) -> DestroyedBy(x,y))", "score": 0}
{"id": "eqasc_validation_713", "prediction": "all x.(Town(x) -> DestroyedByForestFire(x))", "score": 0}
{"id": "eqasc_validation_713", "prediction": "all x y.((Town(x) & ForestFire(y)) -> DismantledBy(x,y))", "score": 0}
{"id": "eqasc_validation_713", "prediction": "all x y z.((Town(x) & ForestFire(y) & ForestFire(z)) -> DissectedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_713", "prediction": "all x y.((Town(x) & ForestFire(y)) -> DemolishedBy(x,y))", "score": 0}
{"id": "eqasc_validation_714", "prediction": "all x y.((Lightning(x) & Town(y)) -> CanDestroy(x,y))", "score": 0}
{"id": "eqasc_validation_714", "prediction": "all x y z.((Lightning(x) & Town(y) & Town(z)) -> CanDestroy(x,y,z))", "score": 0}
{"id": "eqasc_validation_714", "prediction": "all x.(Lightning(x) -> CanDestroyTowns(x))", "score": 0}
{"id": "eqasc_validation_714", "prediction": "all x y z.((Lightning(x) & Town(y) & Town(z)) -> CanDisrupt(x,y,z))", "score": 0}
{"id": "eqasc_validation_714", "prediction": "all x y.((Lightning(x) & Town(y)) -> CanDisrupt(x,y))", "score": 0}
{"id": "eqasc_validation_714", "prediction": "all x y.((Lightning(x) & Town(y)) -> CanDefeat(x,y))", "score": 0}
{"id": "eqasc_validation_714", "prediction": "all x y z.((Lightning(x) & Town(y) & Town(z)) -> CanDefeat(x,y,z))", "score": 0}
{"id": "eqasc_validation_714", "prediction": "all x y z.((Lightning(x) & Town(y) & Town(z) & CanDestroy(x,y,z)) -> CanDestroy(x,y,z))", "score": 0}
{"id": "eqasc_validation_714", "prediction": "all x.(Lightning(x) -> CanDestroyCountries(x))", "score": 0}
{"id": "eqasc_validation_714", "prediction": "all x y z w.((Lightning(x) & Town(y) & Town(z) & Town(w)) -> CanDestroy(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_714", "prediction": "all x y z.((Lightning(x) & Town(y) & Town(z)) -> Destroys(x,y,z))", "score": 0}
{"id": "eqasc_validation_714", "prediction": "all x y.((Lightning(x) & Town(y)) -> Destroys(x,y))", "score": 0}
{"id": "eqasc_validation_715", "prediction": "all x y.((SummerStorm(x) & Lightning(y)) -> (KicksUp(x,y) & IgnitesBrushFires(y)))", "score": 0}
{"id": "eqasc_validation_715", "prediction": "all x y.((SummerStorm(x) & Lightning(y)) -> (KicksUpHugeCloudsOfDust(x) & IgnitesBrushFires(y)))", "score": 0}
{"id": "eqasc_validation_715", "prediction": "all x y z.((SummerStorm(x) & Dust(y) & Lightning(z)) -> (KicksUp(x,y) & IgnitesBrushFires(z)))", "score": 0}
{"id": "eqasc_validation_715", "prediction": "all x y z.((SummerStorm(x) & Cloud(y) & Lightning(z)) -> (KicksUp(x,y) & IgnitesBrushFires(z)))", "score": 0}
{"id": "eqasc_validation_715", "prediction": "all x y.((SummerStorm(x) & Lightning(y)) -> (KicksUpHazardousCloudsOfDust(x) & IgnitesBrushFires(y)))", "score": 0}
{"id": "eqasc_validation_715", "prediction": "all x y z.((SummerStorm(x) & Thunderbolt(y) & BrushFire(z)) -> (KicksUp(x,y) & Ignites(y,z)))", "score": 0}
{"id": "eqasc_validation_715", "prediction": "all x y z.((SummerStorm(x) & Lightning(y) & BrushFire(z)) -> (KicksUp(x,y) & Ignites(y,z)))", "score": 0}
{"id": "eqasc_validation_715", "prediction": "all x y.((SummerStorm(x) & Lightning(y)) -> (KicksUpHazardousClouds(x) & IgnitesBrushFires(y)))", "score": 0}
{"id": "eqasc_validation_715", "prediction": "all x y.((SummerStorm(x) & Lightning(y)) -> (KicksUpHousesOfDust(x) & IgnitesBrushFires(y)))", "score": 0}
{"id": "eqasc_validation_715", "prediction": "all x y.((SummerStorm(x) & Lightning(y)) -> (KicksUpHumidClouds(x) & IgnitesBrushFires(y)))", "score": 0}
{"id": "eqasc_validation_715", "prediction": "all x y.((SummerStorm(x) & Lightning(y)) -> (KicksUpHabitat(x) & IgnitesBrushFires(y)))", "score": 0}
{"id": "eqasc_validation_715", "prediction": "all x y z.((SummerStorm(x) & SummerStorm(y) & Lightning(z)) -> (KicksUp(x,y) & IgnitesBrushFires(z)))", "score": 0}
{"id": "eqasc_validation_715", "prediction": "(all x.(SummerStorm(x) -> KickUpSum(x)) & all y.(Lightning(y) -> IgnitesBrushFires(y)))", "score": 0}
{"id": "eqasc_validation_715", "prediction": "all x y z.((SummerStorm(x) & Dust(y) & Lightning(z)) -> (KicksUp(x,y) & IgnitesBrushFires(z,y)))", "score": 0}
{"id": "eqasc_validation_715", "prediction": "all x y z.((SummerStorm(x) & Cloud(y) & Lightning(z)) -> (KicksUp(x,y) & IgnitesBrushFires(z,y)))", "score": 0}
{"id": "eqasc_validation_715", "prediction": "all x y.((SummerStorm(x) & Lightning(y)) -> (KicksUp(x,y) & InflammatesBrushFires(y)))", "score": 0}
{"id": "eqasc_validation_716", "prediction": "all x y.((Storm(x) & Woods(y)) -> CausesFiresIn(x,y))", "score": 0}
{"id": "eqasc_validation_716", "prediction": "all x y.((Storm(x) & Woods(y)) -> CausesFires(x,y))", "score": 0}
{"id": "eqasc_validation_716", "prediction": "all x y z.((Storm(x) & Fire(y) & Woods(z)) -> CausesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_716", "prediction": "all x y z.((Storm(x) & Woods(y) & Fire(z)) -> CausesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_716", "prediction": "all x y.((Storm(x) & Woods(y)) -> CausesFire(x,y))", "score": 0}
{"id": "eqasc_validation_716", "prediction": "all x y z.((Storm(x) & Woods(y) & Woods(z)) -> CausesFiresIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_716", "prediction": "all x y z.((Storm(x) & Fire(y) & Wood(z)) -> CausesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_716", "prediction": "all x y.((Storm(x) & Wood(y)) -> CausesFiresIn(x,y))", "score": 0}
{"id": "eqasc_validation_716", "prediction": "all x y z.((Storm(x) & Woods(y) & Woods(z)) -> CausesFire(x,y,z))", "score": 0}
{"id": "eqasc_validation_716", "prediction": "all x y z.((Storm(x) & Woods(y) & Woods(z)) -> CausesFires(x,y,z))", "score": 0}
{"id": "eqasc_validation_716", "prediction": "all x y z.((Storm(x) & Wood(y) & Fire(z)) -> CausesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_716", "prediction": "all x y z.((Storm(x) & Wood(y) & Wood(z)) -> CausesFiresIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_716", "prediction": "all x y z.((Storm(x) & Wood(y) & Wood(z)) -> CausesFire(x,y,z))", "score": 0}
{"id": "eqasc_validation_716", "prediction": "all x.(Storm(x) -> CausesFiresInWoods(x))", "score": 0}
{"id": "eqasc_validation_716", "prediction": "all x y.((Storm(x) & Wood(y)) -> CausesFires(x,y))", "score": 0}
{"id": "eqasc_validation_716", "prediction": "all x y z.((Storm(x) & Fire(y) & Woods(z)) -> CausesInWoods(x,y,z))", "score": 0}
{"id": "eqasc_validation_717", "prediction": "all x.(StaticElectricity(x) -> CauseOfLightning(x))", "score": 0}
{"id": "eqasc_validation_717", "prediction": "all x.((StaticElectricity(x) & Lightning(x)) -> Cause(x))", "score": 0}
{"id": "eqasc_validation_717", "prediction": "all x y.((StaticElectricity(x) & Lightning(y)) -> Cause(x,y))", "score": 0}
{"id": "eqasc_validation_717", "prediction": "all x.((StaticElectricity(x) & Lightning(y)) -> Cause(x,y))", "score": 0}
{"id": "eqasc_validation_717", "prediction": "all x.((StaticElectricity(x) & CauseOfLightning(x)) -> CauseOfLightning(x))", "score": 0}
{"id": "eqasc_validation_717", "prediction": "all x y.((StaticElectricity(x) & Lightning(y)) -> CauseOf(x,y))", "score": 0}
{"id": "eqasc_validation_717", "prediction": "all x.((StaticElectricity(x) & Lightning(x)) -> Cause(x,y))", "score": 0}
{"id": "eqasc_validation_717", "prediction": "all x.((StaticElectricity(x) & Lightning(x)) -> CauseOf(x,y))", "score": 0}
{"id": "eqasc_validation_717", "prediction": "all x.((StaticElectricity(x) & Lightning(y)) -> CauseOf(x,y))", "score": 0}
{"id": "eqasc_validation_717", "prediction": "all x.((StaticElectricity(x) & Lightning(x)) -> Cause(x,Lightning))", "score": 0}
{"id": "eqasc_validation_717", "prediction": "all x y z.((StaticElectricity(x) & Lightning(y) & Lightning(z)) -> Cause(x,y,z))", "score": 0}
{"id": "eqasc_validation_717", "prediction": "all x.((StaticElectricity(x) & Lightning(x)) -> CauseOf(x,Lightning))", "score": 0}
{"id": "eqasc_validation_717", "prediction": "all x.((StaticElectricity(x) & Lightning(x)) -> CauseOf(x,lightning))", "score": 0}
{"id": "eqasc_validation_717", "prediction": "all x.((StaticElectricity(x) & LightningCause(x)) -> StaticElectricity(x))", "score": 0}
{"id": "eqasc_validation_717", "prediction": "all x.((StaticElectricity(x) & Lightning(x)) -> Cause(x,lightning))", "score": 0}
{"id": "eqasc_validation_718", "prediction": "all x.(StaticElectricity(x) -> CanCauseForestFire(x))", "score": 0}
{"id": "eqasc_validation_718", "prediction": "all x.(StaticElectricity(x) -> CausesForestFire(x))", "score": 0}
{"id": "eqasc_validation_718", "prediction": "all x.((StaticElectricity(x) & ForestFire(x)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_718", "prediction": "all x.((StaticElectricity(x) & ForestFire(x)) -> CanCause(x,y))", "score": 0}
{"id": "eqasc_validation_718", "prediction": "all x y.((StaticElectricity(x) & ForestFire(y)) -> CanCause(x,y))", "score": 0}
{"id": "eqasc_validation_718", "prediction": "all x y.((StaticElectricity(x) & ForestFire(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_718", "prediction": "all x y.((StaticElectricity(x) & ForestFire(y)) -> Cause(x,y))", "score": 0}
{"id": "eqasc_validation_718", "prediction": "all x.((StaticElectricity(x) & ForestFire(x)) -> Cause(x,y))", "score": 0}
{"id": "eqasc_validation_718", "prediction": "all x y z.((StaticElectricity(x) & ForestFire(y) & Fire(z)) -> CanCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_718", "prediction": "all x.((StaticElectricity(x) & ForestFire(x)) -> CanCause(x,StaticElectricity))", "score": 0}
{"id": "eqasc_validation_718", "prediction": "all x.((StaticElectricity(x) & ForestFire(x)) -> Causes(x,StaticElectricity))", "score": 0}
{"id": "eqasc_validation_718", "prediction": "all x.((StaticElectricity(x) & ForestFire(x)) -> CanCause(x,x))", "score": 0}
{"id": "eqasc_validation_718", "prediction": "all x y z.((StaticElectricity(x) & ForestFire(y) & Fire(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_718", "prediction": "all x.((StaticElectricity(x) & ForestFire(y)) -> CanCause(x,y))", "score": 0}
{"id": "eqasc_validation_718", "prediction": "all x.((StaticElectricity(x) & ForestFire(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_718", "prediction": "all x.((Electricity(x) & Static(x)) -> CanCauseForestFire(x))", "score": 0}
{"id": "eqasc_validation_719", "prediction": "all x y.((Forest(x) & ForestFire(y)) -> AtRiskOfDestroying(x,y))", "score": 0}
{"id": "eqasc_validation_719", "prediction": "all x.(Forest(x) -> (AtRiskOfForestFires(x) & DestroyedByForestFires(x)))", "score": 0}
{"id": "eqasc_validation_719", "prediction": "all x.(Forest(x) -> (AtRiskOfFire(x) & DestroyedByForestFire(x)))", "score": 0}
{"id": "eqasc_validation_719", "prediction": "all x y.((Forest(x) & ForestFire(y)) -> AtRiskOfDefiring(x,y))", "score": 0}
{"id": "eqasc_validation_719", "prediction": "all x y.((Forest(x) & ForestFire(y)) -> (AtRisk(x,y) & DestroyedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_719", "prediction": "all x.(Forest(x) -> (AtRiskOfFeuers(x) & DestroyedByForestFires(x)))", "score": 0}
{"id": "eqasc_validation_719", "prediction": "all x y.((Forest(x) & ForestFire(y)) -> OftenAtRiskOfDestroying(x,y))", "score": 0}
{"id": "eqasc_validation_719", "prediction": "all x.(Forest(x) -> (AtRiskOfFire(x) & DestroyedByForestFires(x)))", "score": 0}
{"id": "eqasc_validation_719", "prediction": "all x y.((Forest(x) & ForestFire(y)) -> AtRiskOfDestruction(x,y))", "score": 0}
{"id": "eqasc_validation_719", "prediction": "all x y z.((Forest(x) & ForestFire(y) & Fire(z)) -> AtRiskOfDestroying(x,y,z))", "score": 0}
{"id": "eqasc_validation_719", "prediction": "all x.(Forest(x) -> (AtRiskOfFire(x) & DestroyedByForest(x)))", "score": 0}
{"id": "eqasc_validation_719", "prediction": "all x y.((Forest(x) & ForestFire(y)) -> AtRiskOfDestroy(x,y))", "score": 0}
{"id": "eqasc_validation_719", "prediction": "all x.(Forest(x) -> (AtRiskOfFeuer(x) & DestroyedByForestFires(x)))", "score": 0}
{"id": "eqasc_validation_719", "prediction": "all x y z.((Forest(x) & ForestFire(y) & ForestFire(z)) -> AtRiskOfDestroying(x,y,z))", "score": 0}
{"id": "eqasc_validation_719", "prediction": "all x y.((Forest(x) & ForestFire(y)) -> (AtRiskOfDestroying(x,y)))", "score": 0}
{"id": "eqasc_validation_719", "prediction": "all x.(Forest(x) -> AtRiskOfFire(x))", "score": 0}
{"id": "eqasc_validation_720", "prediction": "all x y.((Lightning(x) & Forest(y)) -> CausesToBeDestroyed(x,y))", "score": 0}
{"id": "eqasc_validation_720", "prediction": "all x y.((Lightning(x) & Forest(y)) -> CanCauseDestruction(x,y))", "score": 0}
{"id": "eqasc_validation_720", "prediction": "all x y z.((Lightning(x) & Forest(y) & Forest(z)) -> CausesToBeDestroyed(x,y,z))", "score": 0}
{"id": "eqasc_validation_720", "prediction": "all x y.((Lightning(x) & Forest(y)) -> CausesDestruction(x,y))", "score": 0}
{"id": "eqasc_validation_720", "prediction": "all x y z.((Lightning(x) & Forest(y) & Forest(z)) -> CanCauseDestruction(x,y,z))", "score": 0}
{"id": "eqasc_validation_720", "prediction": "all x y z.((Lightning(x) & Forest(y) & Forest(z)) -> CausesDestruction(x,y,z))", "score": 0}
{"id": "eqasc_validation_720", "prediction": "all x y.((Lightning(x) & Forest(y)) -> CausesToBeDisturbed(x,y))", "score": 0}
{"id": "eqasc_validation_720", "prediction": "all x y z.((Lightning(x) & Forest(y) & Forest(z)) -> CanCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_720", "prediction": "all x y.((Lightning(x) & Forest(y)) -> CausesToBeDismantled(x,y))", "score": 0}
{"id": "eqasc_validation_720", "prediction": "all x y z.((Lightning(x) & Forest(y) & Forest(z)) -> CausesToBeDismantled(x,y,z))", "score": 0}
{"id": "eqasc_validation_720", "prediction": "all x y z.((Lightning(x) & Forest(y) & Forest(z)) -> CausesToBeDamaged(x,y,z))", "score": 0}
{"id": "eqasc_validation_720", "prediction": "all x y z.((Lightning(x) & Forest(y) & Forest(z)) -> CausesToBeDisturbed(x,y,z))", "score": 0}
{"id": "eqasc_validation_720", "prediction": "all x y.((Lightning(x) & Forest(y)) -> CanCause(x,y))", "score": 0}
{"id": "eqasc_validation_720", "prediction": "all x y.((Lightning(x) & Forest(y)) -> CausesToBeDamaged(x,y))", "score": 0}
{"id": "eqasc_validation_720", "prediction": "all x y z.((Lightning(x) & Forest(y) & Forest(z)) -> CausesToBeDisrupted(x,y,z))", "score": 0}
{"id": "eqasc_validation_720", "prediction": "all x y.((Lightning(x) & Forest(y)) -> CausesToBeDisrupted(x,y))", "score": 0}
{"id": "eqasc_validation_721", "prediction": "all x.((MaterialType(x) & SoundPasses(x)) -> ChangesSpeedAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW", "score": -1}
{"id": "eqasc_validation_721", "prediction": "all x.((MaterialType(x) & SoundPasses(x)) -> ChangesSpeedAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW", "score": -1}
{"id": "eqasc_validation_721", "prediction": "all x.((MaterialType(x) & SoundPasses(x)) -> ChangesSpeedAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW", "score": -1}
{"id": "eqasc_validation_721", "prediction": "all x.((MaterialType(x) & SoundPasses(x)) -> ChangesSpeedAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW", "score": -1}
{"id": "eqasc_validation_721", "prediction": "all x.((MaterialType(x) & SoundPasses(x)) -> ChangesSpeedAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW", "score": -1}
{"id": "eqasc_validation_721", "prediction": "all x.((MaterialType(x) & SoundPasses(x)) -> ChangesSpeedAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW", "score": -1}
{"id": "eqasc_validation_721", "prediction": "all x.((MaterialType(x) & SoundPasses(x)) -> ChangesSpeedAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW", "score": -1}
{"id": "eqasc_validation_721", "prediction": "all x.((MaterialType(x) & SoundPasses(x)) -> ChangesSpeedAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW", "score": -1}
{"id": "eqasc_validation_721", "prediction": "all x.((MaterialType(x) & SoundPasses(x)) -> ChangesSpeedAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWay", "score": -1}
{"id": "eqasc_validation_721", "prediction": "all x.((MaterialType(x) & SoundPasses(x)) -> ChangesSpeedAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW", "score": -1}
{"id": "eqasc_validation_721", "prediction": "all x.((MaterialType(x) & SoundPasses(x)) -> ChangesSpeedAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWay", "score": -1}
{"id": "eqasc_validation_721", "prediction": "all x.((MaterialType(x) & SoundPasses(x)) -> ChangesSpeedAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWay", "score": -1}
{"id": "eqasc_validation_721", "prediction": "all x.((MaterialType(x) & SoundPasses(x)) -> ChangesSpeedAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW", "score": -1}
{"id": "eqasc_validation_721", "prediction": "all x.((MaterialType(x) & SoundPasses(x)) -> ChangesSpeedAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWH", "score": -1}
{"id": "eqasc_validation_721", "prediction": "all x.((MaterialType(x) & SoundPasses(x)) -> ChangesSpeedAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWH", "score": -1}
{"id": "eqasc_validation_721", "prediction": "all x.((MaterialType(x) & SoundPasses(x)) -> ChangesSpeedAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWayWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWHW", "score": -1}
{"id": "eqasc_validation_722", "prediction": "all x.(Hearing(x) -> PerceivesSound(x))", "score": 0}
{"id": "eqasc_validation_722", "prediction": "all x y.((Hearing(x) & Sound(y)) -> Perceives(x,y))", "score": 0}
{"id": "eqasc_validation_722", "prediction": "all x.(Hearing(x) -> PerceivingSound(x))", "score": 0}
{"id": "eqasc_validation_722", "prediction": "all x y z.((Hearing(x) & Sound(y) & Sound(z)) -> Perceives(x,y,z))", "score": 0}
{"id": "eqasc_validation_722", "prediction": "all x.(Hearing(x) -> PerceiveSound(x))", "score": 0}
{"id": "eqasc_validation_722", "prediction": "all x.(HasHearing(x) -> PerceivesSound(x))", "score": 0}
{"id": "eqasc_validation_722", "prediction": "all x y.((Hearing(x) & Sound(y)) -> Perceiving(x,y))", "score": 0}
{"id": "eqasc_validation_722", "prediction": "all x y z.((Hearing(x) & Sound(y) & Sound(z)) -> Perceives(x,y))", "score": 0}
{"id": "eqasc_validation_722", "prediction": "all x y.((Hearing(x) & Sound(y)) -> Perceived(x,y))", "score": 0}
{"id": "eqasc_validation_722", "prediction": "all x y.((HasHearing(x) & Sound(y)) -> Perceives(x,y))", "score": 0}
{"id": "eqasc_validation_722", "prediction": "all x.(Hearing(x) -> (PerceivesSound(x) & PerceivesSound(x)))", "score": 0}
{"id": "eqasc_validation_722", "prediction": "All x.(Hearing(x) -> PerceivesSound(x))", "score": -1}
{"id": "eqasc_validation_722", "prediction": "all x y z.((Hearing(x) & Sound(y) & Sound(z)) -> Perceiving(x,y,z))", "score": 0}
{"id": "eqasc_validation_722", "prediction": "all x y.((Hearing(x) & Sound(y)) -> PerceivesAction(x,y))", "score": 0}
{"id": "eqasc_validation_722", "prediction": "all x y z.((Hearing(x) & Sound(y) & Sound(z)) -> Perceived(x,y,z))", "score": 0}
{"id": "eqasc_validation_723", "prediction": "all x.((SpeedOfHearing(x) & MaterialPassedThrough(x)) -> ChangesSpeedOfHearing(x))", "score": 0}
{"id": "eqasc_validation_723", "prediction": "all x.((HearingMaterial(x) & PassedThrough(x)) -> ChangesSpeedOfHearing(x))", "score": 0}
{"id": "eqasc_validation_723", "prediction": "all x y.((Material(x) & Material(y) & PassedThrough(x,y)) -> ChangesSpeedOfHearing(x))", "score": 0}
{"id": "eqasc_validation_723", "prediction": "all x y z.((SpeedOfHearing(x) & Material(y) & MaterialPassedThrough(z)) -> ChangesSpeedOfHearing(x,y,z))", "score": 0}
{"id": "eqasc_validation_723", "prediction": "all x.((HearingMaterial(x) & PassedThrough(x)) -> ChangesSpeed(x))", "score": 0}
{"id": "eqasc_validation_723", "prediction": "all x.((HearingMaterial(x) & PassedThrough(x)) -> SpeedChanges(x))", "score": 0}
{"id": "eqasc_validation_723", "prediction": "all x y.((Material(x) & Material(y) & PassedThrough(x,y)) -> SpeedOfHearingChanges(x))", "score": 0}
{"id": "eqasc_validation_723", "prediction": "all x y z.((SpeedOfHearing(x) & Material(y) & Material(z) & PassedThrough(y,z)) -> ChangesSpeedOfHearing(x,y,z))", "score": 0}
{"id": "eqasc_validation_723", "prediction": "all x y.((HearingMaterial(x) & MaterialPassedThrough(y)) -> ChangesSpeedOfHearing(x,y))", "score": 0}
{"id": "eqasc_validation_723", "prediction": "all x y.((Material(x) & Material(y) & PassedThrough(x,y)) -> ChangesSpeedOfHearing(x,y))", "score": 0}
{"id": "eqasc_validation_723", "prediction": "all x y z.((SpeedOfHearing(x) & Material(y) & Material(z) & PassedThrough(y,z)) -> ChangesSpeedOfHearing(x))", "score": 0}
{"id": "eqasc_validation_723", "prediction": "all x y.((Material(x) & Material(y) & PassedThrough(x,y)) -> SpeedOfHearingChanges(x,y))", "score": 0}
{"id": "eqasc_validation_723", "prediction": "all x y z.((Hearing(x) & Material(y) & Material(z) & PassedThrough(x,y,z)) -> ChangesSpeedOfHearing(x))", "score": 0}
{"id": "eqasc_validation_723", "prediction": "all x y.((Hearing(x) & Material(y) & PassedThrough(x,y)) -> ChangesSpeedOfHearing(x))", "score": 0}
{"id": "eqasc_validation_723", "prediction": "all x y z.((Hearing(x) & Material(y) & Material(z) & PassedThrough(y,z)) -> ChangesSpeedOfHearing(x))", "score": 0}
{"id": "eqasc_validation_723", "prediction": "all x y.((HearingMaterial(x) & MaterialPassedThrough(y)) -> SpeedChanges(x,y))", "score": 0}
{"id": "eqasc_validation_724", "prediction": "all x y.((SoundVibration(x) & Material(y)) -> TravelsAtDifferentSpeeds(x,y))", "score": 0}
{"id": "eqasc_validation_724", "prediction": "all x y z.((SoundVibration(x) & Material(y) & Material(z)) -> TravelsAtDifferentSpeeds(x,y,z))", "score": 0}
{"id": "eqasc_validation_724", "prediction": "all x y.((SoundVibration(x) & Material(y)) -> TravelsAtVariousSpeeds(x,y))", "score": 0}
{"id": "eqasc_validation_724", "prediction": "all x.(SoundVibration(x) -> TravelsAtDifferentSpeeds(x))", "score": 0}
{"id": "eqasc_validation_724", "prediction": "all x y z.((SoundVibration(x) & Material(y) & Material(z)) -> TravelsAtVariousSpeeds(x,y,z))", "score": 0}
{"id": "eqasc_validation_724", "prediction": "all x y.((SoundVibration(x) & Material(y)) -> TravelsAtDifferentSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_724", "prediction": "all x y z.((SoundVibration(x) & Material(y) & Material(z)) -> TravelsAtDifferentSpeed(x,y,z))", "score": 0}
{"id": "eqasc_validation_724", "prediction": "all x y.((SoundVibration(x) & Material(y)) -> TravelAtDifferentSpeeds(x,y))", "score": 0}
{"id": "eqasc_validation_724", "prediction": "all x y z.((SoundVibration(x) & Material(y) & Material(z)) -> TravelAtDifferentSpeeds(x,y,z))", "score": 0}
{"id": "eqasc_validation_724", "prediction": "all x y z.((SoundVibration(x) & Material(y) & Materials(z)) -> TravelsAtDifferentSpeeds(x,y,z))", "score": 0}
{"id": "eqasc_validation_724", "prediction": "all x.(SoundVibration(x) -> (TravelsAtDifferentSpeeds(x) & ThroughDifferentMaterials(x)))", "score": 0}
{"id": "eqasc_validation_724", "prediction": "all x y.((SoundVibration(x) & Materials(y)) -> TravelsAtDifferentSpeeds(x,y))", "score": 0}
{"id": "eqasc_validation_724", "prediction": "all x y.((SoundVibration(x) & Material(y) & TravelsAtDifferentSpeeds(x,y)) -> DifferentSpeeds(x,y))", "score": 0}
{"id": "eqasc_validation_724", "prediction": "all x y z.((SoundVibration(x) & Material(y) & Material(z)) -> TravelsAtDifferentSpeeds(x,y))", "score": 0}
{"id": "eqasc_validation_724", "prediction": "all x.(SoundVibration(x) -> TravelsAtDifferentSpeedsThroughDifferentMaterials(x))", "score": 0}
{"id": "eqasc_validation_724", "prediction": "all x y.((SoundVibration(x) & Material(y)) -> TravelsAtDifferentSpeeds(x))", "score": 0}
{"id": "eqasc_validation_725", "prediction": "all x.((MaterialType(x) & SoundPasses(x)) -> ChangesSoundVibrations(x))", "score": 0}
{"id": "eqasc_validation_725", "prediction": "all x.((Material(x) & SoundPasses(x)) -> ChangesSoundVibrations(x))", "score": 0}
{"id": "eqasc_validation_725", "prediction": "all x.((MaterialType(x) & SoundPassesThrough(x)) -> ChangesSoundVibrations(x))", "score": 0}
{"id": "eqasc_validation_725", "prediction": "all x.((Material(x) & SoundPassesThrough(x)) -> ChangesSoundVibrations(x))", "score": 0}
{"id": "eqasc_validation_725", "prediction": "all x y.((Material(x) & SoundPassesThrough(x,y)) -> ChangesSoundVibrations(x))", "score": 0}
{"id": "eqasc_validation_725", "prediction": "all x.((MaterialType(x) & SoundPasses(x)) -> ChangesVibrations(x))", "score": 0}
{"id": "eqasc_validation_725", "prediction": "all x y.((Material(x) & SoundPasses(y)) -> ChangesSoundVibrations(x,y))", "score": 0}
{"id": "eqasc_validation_725", "prediction": "all x y.((MaterialType(x) & SoundPassesThrough(x,y)) -> ChangesSoundVibrations(x))", "score": 0}
{"id": "eqasc_validation_725", "prediction": "all x.((Material(x) & SoundPasses(x)) -> ChangesVibrations(x))", "score": 0}
{"id": "eqasc_validation_725", "prediction": "all x y.((Material(x) & SoundPassesThrough(x,y)) -> ChangesSoundVibrations(x,y))", "score": 0}
{"id": "eqasc_validation_725", "prediction": "all x y.((MaterialType(x) & SoundPasses(y)) -> ChangesSoundVibrations(x,y))", "score": 0}
{"id": "eqasc_validation_725", "prediction": "all x y.((Material(x) & SoundPasses(x)) -> ChangesSoundVibrations(x,y))", "score": 0}
{"id": "eqasc_validation_725", "prediction": "all x y.((Material(x) & SoundPasses(x,y)) -> ChangesSoundVibrations(x))", "score": 0}
{"id": "eqasc_validation_725", "prediction": "all x y.((Material(x) & SoundPasses(x)) -> ChangesSoundVibrations(y))", "score": 0}
{"id": "eqasc_validation_725", "prediction": "all x y.((MaterialType(x) & SoundPasses(x)) -> ChangesSoundVibrations(y))", "score": 0}
{"id": "eqasc_validation_725", "prediction": "all x y.((MaterialType(x) & SoundPassesThrough(x,y)) -> ChangesSoundVibrations(x,y))", "score": 0}
{"id": "eqasc_validation_726", "prediction": "all x.(SoundWaves(x) -> MechanicalWaves(x))", "score": 0}
{"id": "eqasc_validation_726", "prediction": "all x.(Sound(x) -> MechanicalWaves(x))", "score": 0}
{"id": "eqasc_validation_726", "prediction": "all x.(SonicWaves(x) -> MechanicalWaves(x))", "score": 0}
{"id": "eqasc_validation_726", "prediction": "all x.(SoundWaves(x) -> Mechanical(x))", "score": 0}
{"id": "eqasc_validation_726", "prediction": "all x.((SoundWaves(x) & MechanicalWaves(x)) -> SoundWaves(x))", "score": 0}
{"id": "eqasc_validation_726", "prediction": "all x.(Sound(x) -> (MechanicalWaves(x) & Waves(x)))", "score": 0}
{"id": "eqasc_validation_726", "prediction": "all x.(Sound(x) -> (MechanicalWaves(x) & -MechanicalWaves(x)))", "score": 0}
{"id": "eqasc_validation_726", "prediction": "all x.(Sound(x) -> (MechanicalWaves(x) & SoundWaves(x)))", "score": 0}
{"id": "eqasc_validation_726", "prediction": "all x.((SoundWaves(x) & Mechanical(x)) -> SoundWaves(x))", "score": 0}
{"id": "eqasc_validation_726", "prediction": "all x.(Sound(x) -> (MechanicalWaves(x) & Wave(x)))", "score": 0}
{"id": "eqasc_validation_726", "prediction": "all x.(Son(x) -> MechanicalWaves(x))", "score": 0}
{"id": "eqasc_validation_726", "prediction": "all x.(Sonic(x) -> MechanicalWaves(x))", "score": 0}
{"id": "eqasc_validation_726", "prediction": "all x y.((SoundWaves(x) & MechanicalWaves(y)) -> SoundWaves(x,y))", "score": 0}
{"id": "eqasc_validation_726", "prediction": "all x y.((Sound(x) & SoundWaves(y)) -> MechanicalWaves(x,y))", "score": 0}
{"id": "eqasc_validation_726", "prediction": "all x.(Sound(x) -> (MechanicalWaves(x) & MechanicalWaves(x)))", "score": 0}
{"id": "eqasc_validation_726", "prediction": "all x y.((Sound(x) & SoundWaves(y)) -> MechanicalWaves(x))", "score": 0}
{"id": "eqasc_validation_727", "prediction": "all x y.((MaterialType(x) & MechanicalWaves(y)) -> ChangesSpeedAtTravel(x,y))", "score": 0}
{"id": "eqasc_validation_727", "prediction": "all x.((MaterialType(x) & MechanicalWavesPass(x)) -> ChangesSpeedAtTravel(x))", "score": 0}
{"id": "eqasc_validation_727", "prediction": "all x y.((MaterialType(x) & MechanicalWaves(y) & PassesThrough(x,y)) -> ChangesSpeedAtTravel(x,y))", "score": 0}
{"id": "eqasc_validation_727", "prediction": "all x y.((MaterialType(x) & MechanicalWaves(y) & PassThrough(x,y)) -> ChangesSpeedAtTravel(x,y))", "score": 0}
{"id": "eqasc_validation_727", "prediction": "all x y.((Material(x) & MechanicalWaves(y) & PassThrough(x,y)) -> ChangesSpeedAtTravel(x,y))", "score": 0}
{"id": "eqasc_validation_727", "prediction": "all x y.((Material(x) & MechanicalWaves(y)) -> ChangesSpeedAtTravel(x,y))", "score": 0}
{"id": "eqasc_validation_727", "prediction": "all x y.((Material(x) & MechanicalWaves(y) & Through(x,y)) -> ChangesSpeedAtTravel(x,y))", "score": 0}
{"id": "eqasc_validation_727", "prediction": "all x y.((MaterialType(x) & MechanicalWaves(y) & MechanicalWaves(z)) -> ChangesSpeedAtTravel(x,y,z))", "score": 0}
{"id": "eqasc_validation_727", "prediction": "all x y.((MaterialType(x) & MechanicalWaves(y) & Through(x,y)) -> ChangesSpeedAtTravel(x,y))", "score": 0}
{"id": "eqasc_validation_727", "prediction": "all x y.((Material(x) & MechanicalWaves(y) & PassThrough(x,y)) -> ChangeSpeedAtTravel(x,y))", "score": 0}
{"id": "eqasc_validation_727", "prediction": "all x y.((MaterialType(x) & MechanicalWaves(y) & PassThrough(x,y)) -> ChangeSpeedAtTravel(x,y))", "score": 0}
{"id": "eqasc_validation_727", "prediction": "all x y.((MaterialType(x) & MechanicalWaves(y) & PassesThrough(x,y)) -> ChangesSpeedAtTravel(x))", "score": 0}
{"id": "eqasc_validation_727", "prediction": "all x y.((MaterialType(x) & MechanicalWaves(y) & PassesThrough(x,y)) -> ChangeSpeedAtTravel(x,y))", "score": 0}
{"id": "eqasc_validation_727", "prediction": "all x.((MaterialType(x) & MechanicalWaves(x)) -> ChangesSpeedAtTravel(x))", "score": 0}
{"id": "eqasc_validation_727", "prediction": "all x.((MaterialType(x) & MechanicalWavesPass(x)) -> ChangeSpeedAtTravel(x))", "score": 0}
{"id": "eqasc_validation_727", "prediction": "all x.((Material(x) & MechanicalWavesPass(x)) -> ChangesSpeedAtTravel(x))", "score": 0}
{"id": "eqasc_validation_728", "prediction": "all x y z.((Sound(x) & Material(y) & Material(z)) -> MovesAtDifferentRate(x,y,z))", "score": 0}
{"id": "eqasc_validation_728", "prediction": "all x y.((Sound(x) & Material(y)) -> MovesAtDifferentRate(x,y))", "score": 0}
{"id": "eqasc_validation_728", "prediction": "all x y z.((Sound(x) & Material(y) & Material(z)) -> MovesAtDifferentRates(x,y,z))", "score": 0}
{"id": "eqasc_validation_728", "prediction": "all x y.((Sound(x) & Material(y)) -> MovesAtDifferentRates(x,y))", "score": 0}
{"id": "eqasc_validation_728", "prediction": "all x y z.((Sound(x) & Material(y) & Material(z)) -> MovesAtVariousRate(x,y,z))", "score": 0}
{"id": "eqasc_validation_728", "prediction": "all x y z w.((Sound(x) & Material(y) & Material(z) & Rate(w)) -> MovesAtDifferentRate(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_728", "prediction": "all x.(Sound(x) -> MovesThroughDifferentMaterialsAtDifferentRate(x))", "score": 0}
{"id": "eqasc_validation_728", "prediction": "all x y z.((Sound(x) & Material(y) & Rate(z)) -> MovesAtDifferentRate(x,y,z))", "score": 0}
{"id": "eqasc_validation_728", "prediction": "all x y z.((Sound(x) & Material(y) & Material(z)) -> MovesAtVariousRates(x,y,z))", "score": 0}
{"id": "eqasc_validation_728", "prediction": "all x y.((Sound(x) & Material(y) & DifferentRate(x,y)) -> MovesAtDifferentRate(x,y))", "score": 0}
{"id": "eqasc_validation_728", "prediction": "all x y z.((Sound(x) & Material(y) & Material(z)) -> Moves(x,y,z))", "score": 0}
{"id": "eqasc_validation_728", "prediction": "all x y z w.((Sound(x) & Material(y) & Material(z) & Material(w)) -> MovesAtDifferentRate(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_728", "prediction": "all x y z.((Sound(x) & Material(y) & Material(z) & Material(z)) -> MovesAtDifferentRate(x,y,z))", "score": 0}
{"id": "eqasc_validation_728", "prediction": "all x y z w.((Sound(x) & Material(y) & Material(z) & Rate(w)) -> MovesAtDifferentRate(x,y,z))", "score": 0}
{"id": "eqasc_validation_728", "prediction": "all x y z.((Sound(x) & Material(y) & Material(z)) -> MovesAtRate(x,y,z))", "score": 0}
{"id": "eqasc_validation_728", "prediction": "all x y z w.((Sound(x) & Material(y) & Material(z) & Rate(w)) -> MovesAtDifferentRates(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_729", "prediction": "all x y.((Refraction(x) & Wave(y) & ChangesInMedium(x,y)) -> EffectOn(x,y))", "score": 0}
{"id": "eqasc_validation_729", "prediction": "all x y z.((Refraction(x) & Wave(y) & Medium(z) & ChangesIn(y,z)) -> EffectOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_729", "prediction": "all x y z.((Refraction(x) & Wave(y) & Medium(z) & ChangesIn(x,y,z)) -> EffectOn(x,y))", "score": 0}
{"id": "eqasc_validation_729", "prediction": "all x y z.((Refraction(x) & Wave(y) & Medium(z) & ChangesIn(y,z)) -> EffectOn(x,y))", "score": 0}
{"id": "eqasc_validation_729", "prediction": "all x y.((Refraction(x) & Wave(y) & Medium(z) & ChangesIn(x,y,z)) -> EffectOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_729", "prediction": "all x y z.((Refraction(x) & Wave(y) & Medium(z) & ChangesIn(x,y,z)) -> EffectOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_729", "prediction": "all x.((Refraction(x) & ChangesInMedium(x)) -> EffectOnWave(x))", "score": 0}
{"id": "eqasc_validation_729", "prediction": "all x y.((Refraction(x) & Wave(y) & ChangesInMedium(x)) -> EffectOn(x,y))", "score": 0}
{"id": "eqasc_validation_729", "prediction": "all x y.((Refraction(x) & Wave(y) & Medium(y)) -> ChangesIn(x,y))", "score": 0}
{"id": "eqasc_validation_729", "prediction": "all x y.((Refraction(x) & Wave(y) & Medium(z)) -> ChangesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_729", "prediction": "all x y.((Refraction(x) & Wave(y) & Medium(z) & ChangesIn(x,y,z)) -> EffectOn(x,y))", "score": 0}
{"id": "eqasc_validation_729", "prediction": "all x y.((Refraction(x) & Wave(y) & ChangesInMedium(x,y)) -> Effect(x,y))", "score": 0}
{"id": "eqasc_validation_729", "prediction": "all x y.((Refraction(x) & Wave(y) & ChangesInMedium(y)) -> EffectOn(x,y))", "score": 0}
{"id": "eqasc_validation_729", "prediction": "all x y.((Wave(x) & Medium(y) & ChangesIn(x,y)) -> RefractionEffect(x,y))", "score": 0}
{"id": "eqasc_validation_729", "prediction": "all x y.((Refraction(x) & Medium(y) & ChangesIn(x,y)) -> EffectOnWave(x))", "score": 0}
{"id": "eqasc_validation_729", "prediction": "all x y z.((Refraction(x) & Wave(y) & Medium(z)) -> ChangesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_730", "prediction": "all x.((DifferencesInSpeedOfSound(x) & PassingBetweenMedia(x)) -> SoundWavesRefracted(x))", "score": 0}
{"id": "eqasc_validation_730", "prediction": "all x y.((DifferencesInSpeedOfSound(x) & Media(y)) -> CausesSoundWavesToBeRefracted(x,y))", "score": 0}
{"id": "eqasc_validation_730", "prediction": "all x y z.((DifferencesInSpeedOfSound(x) & SoundWaves(y) & Media(z) & PassingBetweenMedia(y,z)) -> SoundWavesRefracted(y,z))", "score": 0}
{"id": "eqasc_validation_730", "prediction": "all x y.((DifferencesInSpeedOfSound(x) & Media(y)) -> SoundWavesRefracted(x,y))", "score": 0}
{"id": "eqasc_validation_730", "prediction": "all x y z.((DifferencesInSpeedOfSound(x) & SoundWaves(y) & Media(z) & PassingBetweenMedia(x,y,z)) -> SoundWavesRefracted(y,z))", "score": 0}
{"id": "eqasc_validation_730", "prediction": "all x y z.((DifferencesInSpeedOfSound(x) & SoundWaves(y) & Media(z) & PassingBetweenMedia(y,z)) -> SoundWavesRefracted(y))", "score": 0}
{"id": "eqasc_validation_730", "prediction": "all x y z.((DifferencesInSpeedOfSound(x) & SoundWaves(y) & Media(z)) -> CausesRefraction(x,y,z))", "score": 0}
{"id": "eqasc_validation_730", "prediction": "all x y z.((DifferenceInSpeedOfSound(x) & SoundWaves(y) & Media(z) & PassingBetweenMedia(y,z)) -> SoundWavesRefracted(y,z))", "score": 0}
{"id": "eqasc_validation_730", "prediction": "all x y.((DifferenceInSpeedOfSound(x) & Media(y)) -> CausesSoundWavesToBeRefracted(x,y))", "score": 0}
{"id": "eqasc_validation_730", "prediction": "all x y z.((DifferencesInSpeedOfSound(x) & SoundWaves(y) & Media(z) & PassingBetweenMedia(x,y,z)) -> SoundWavesRefracted(y))", "score": 0}
{"id": "eqasc_validation_730", "prediction": "all x y.((DifferencesInSpeedOfSound(x) & Media(y)) -> CausesRefractionOfSoundWaves(x,y))", "score": 0}
{"id": "eqasc_validation_730", "prediction": "all x.((DifferenceInSpeedOfSound(x) & PassingBetweenMedia(x)) -> SoundWavesRefracted(x))", "score": 0}
{"id": "eqasc_validation_730", "prediction": "all x y z.((DifferenceInSpeedOfSound(x) & SoundWaves(y) & Media(z) & PassingBetweenMedia(x,y,z)) -> SoundWavesRefracted(y,z))", "score": 0}
{"id": "eqasc_validation_730", "prediction": "all x y z.((DifferenceInSpeedOfSound(x) & SoundWaves(y) & Media(z) & PassingBetweenMedia(y,z)) -> SoundWavesRefracted(y))", "score": 0}
{"id": "eqasc_validation_730", "prediction": "all x y.((DifferencesInSpeedOfSound(x) & Media(y) & Media(z)) -> SoundWavesRefracted(x,y,z))", "score": 0}
{"id": "eqasc_validation_730", "prediction": "all x y z.((DifferenceInSpeedOfSound(x) & SoundWaves(y) & Media(z) & PassingBetweenMedia(x,y,z)) -> SoundWavesRefracted(y))", "score": 0}
{"id": "eqasc_validation_731", "prediction": "all x.((FiberousMaterial(x) & MolecularLevel(x)) -> SlowsTransmissionOfSound(x))", "score": 0}
{"id": "eqasc_validation_731", "prediction": "all x.(FiberousMaterial(x) -> SlowsTransmissionOfSound(x))", "score": 0}
{"id": "eqasc_validation_731", "prediction": "all x y.((FiberousMaterial(x) & MolecularLevel(y)) -> SlowsTransmissionOfSound(x,y))", "score": 0}
{"id": "eqasc_validation_731", "prediction": "all x.((FiberousMaterial(x) & MolecularLevel(x)) -> SlowTransmissionOfSound(x))", "score": 0}
{"id": "eqasc_validation_731", "prediction": "all x.(FiberousMaterial(x) -> (SlowsTransmissionOfSound(x) | SlowsTransmissionOfSound(x)))", "score": 0}
{"id": "eqasc_validation_731", "prediction": "all x.((FiberousMaterial(x) & OnMolecularLevel(x)) -> SlowsTransmissionOfSound(x))", "score": 0}
{"id": "eqasc_validation_731", "prediction": "all x.(FiberousMaterial(x) -> (SlowsTransmissionOfSound(x) & OnMolecularLevel(x)))", "score": 0}
{"id": "eqasc_validation_731", "prediction": "all x.((FiberousMaterial(x) & MolecularLevel(x)) -> SlowsSpeedOfTransmissionOfSound(x))", "score": 0}
{"id": "eqasc_validation_731", "prediction": "all x y.((FiberousMaterial(x) & MolecularLevel(y)) -> SlowsTransmissionOfSound(x))", "score": 0}
{"id": "eqasc_validation_731", "prediction": "all x.((FibrousMaterial(x) & MolecularLevel(x)) -> SlowsTransmissionOfSound(x))", "score": 0}
{"id": "eqasc_validation_731", "prediction": "all x.(FilmousMaterial(x) -> SlowsTransmissionOfSound(x))", "score": 0}
{"id": "eqasc_validation_731", "prediction": "all x y.((FibrousMaterial(x) & MolecularLevel(y)) -> SlowsTransmissionOfSound(x,y))", "score": 0}
{"id": "eqasc_validation_732", "prediction": "all x y.((Sound(x) & FibrousMaterial(y) & PassesThrough(x,y)) -> SlowsDown(x))", "score": 0}
{"id": "eqasc_validation_732", "prediction": "all x y.((Sound(x) & FibrousMaterial(y) & PassesThrough(x,y)) -> SlowsDown(x,y))", "score": 0}
{"id": "eqasc_validation_732", "prediction": "all x y.((Sound(x) & FibrousMaterial(y)) -> SlowsDown(x,y))", "score": 0}
{"id": "eqasc_validation_732", "prediction": "all x y.((Sound(x) & FibrousMaterial(y) & PassingThrough(x,y)) -> SlowsDown(x))", "score": 0}
{"id": "eqasc_validation_732", "prediction": "all x y z.((Sound(x) & FibrousMaterial(y) & FibrousMaterial(z) & PassesThrough(x,y,z)) -> SlowsDown(x))", "score": 0}
{"id": "eqasc_validation_732", "prediction": "all x y z.((Sound(x) & FibrousMaterial(y) & SoundPassingThrough(x,y)) -> SlowsDown(x))", "score": 0}
{"id": "eqasc_validation_732", "prediction": "all x y z.((Sound(x) & FibrousMaterial(y) & SoundPassingThrough(x,y) & FibrousMaterial(z)) -> SlowsDown(x,z))", "score": 0}
{"id": "eqasc_validation_732", "prediction": "all x y z.((Sound(x) & FibrousMaterial(y) & FibrousMaterial(z)) -> SlowsDown(x,y,z))", "score": 0}
{"id": "eqasc_validation_732", "prediction": "all x y z.((Sound(x) & FibrousMaterial(y) & SoundPassingThrough(x,y)) -> SlowsDown(x,z))", "score": 0}
{"id": "eqasc_validation_732", "prediction": "all x y z.((Sound(x) & FibrousMaterial(y) & FibrousMaterial(z) & PassesThrough(x,y,z)) -> SlowsDown(x,y))", "score": 0}
{"id": "eqasc_validation_732", "prediction": "all x y.((Sound(x) & FibrousMaterial(y) & PassesThrough(x,y)) -> SlowDown(x))", "score": 0}
{"id": "eqasc_validation_732", "prediction": "all x y z.((Sound(x) & FibrousMaterial(y) & Sound(z) & PassesThrough(x,y,z)) -> SlowsDown(x))", "score": 0}
{"id": "eqasc_validation_732", "prediction": "all x y z.((Sound(x) & FibrousMaterial(y) & SoundPassingThrough(x,y) & FibrousMaterial(z)) -> SlowsDown(x))", "score": 0}
{"id": "eqasc_validation_732", "prediction": "all x y.((SoundPassingThroughFiber(x) & FibrousMaterial(y)) -> SlowsDown(x,y))", "score": 0}
{"id": "eqasc_validation_732", "prediction": "all x y z.((Sound(x) & FibrousMaterial(y) & FibrousMaterial(z) & PassesThrough(x,y,z)) -> SlowsDown(x,y,z))", "score": 0}
{"id": "eqasc_validation_732", "prediction": "all x y.((Sound(x) & FibrousMaterial(y) & PassingThrough(x,y)) -> SlowsDown(x,y))", "score": 0}
{"id": "eqasc_validation_733", "prediction": "all x.((Energy(x) & Sound(x)) -> (ProducedByVibrations(x) & TravelsInWaves(x)))", "score": 0}
{"id": "eqasc_validation_733", "prediction": "all x.(Sound(x) -> (Energy(x) & ProducedByVibrations(x) & TravelsInWaves(x)))", "score": 0}
{"id": "eqasc_validation_733", "prediction": "all x.((Energy(x) & ProducedByVibrations(x) & TravelsInWaves(x)) -> Sound(x))", "score": 0}
{"id": "eqasc_validation_733", "prediction": "all x y.((Sound(x) & Energy(y)) -> (ProducedByVibrations(x) & TravelsInWaves(x)))", "score": 0}
{"id": "eqasc_validation_733", "prediction": "all x.((Sound(x) & Energy(x)) -> (ProducedByVibrations(x) & TravelsInWaves(x)))", "score": 0}
{"id": "eqasc_validation_733", "prediction": "all x.(Son(x) -> (Energy(x) & ProducedByVibrations(x) & TravelsInWaves(x)))", "score": 0}
{"id": "eqasc_validation_733", "prediction": "all x.(Sonic(x) -> (Energy(x) & ProducedByVibrations(x) & TravelsInWaves(x)))", "score": 0}
{"id": "eqasc_validation_733", "prediction": "all x y.((Energy(x) & Sound(y)) -> (ProducedByVibrations(y) & TravelsInWaves(y)))", "score": 0}
{"id": "eqasc_validation_733", "prediction": "all x.((Energy(x) & ProducedByVibrations(x) & TravelsInWaves(x)) -> SoundEnergy(x))", "score": 0}
{"id": "eqasc_validation_733", "prediction": "all x.(Sound(x) -> (ProducedByVibrations(x) & TravelsInWaves(x)))", "score": 0}
{"id": "eqasc_validation_733", "prediction": "all x.(Sound(x) -> (EnergyType(x) & ProducedByVibrations(x) & TravelsInWaves(x)))", "score": 0}
{"id": "eqasc_validation_733", "prediction": "all x y.((Energy(x) & Sound(y)) -> (ProducedByVibrations(x) & TravelsInWaves(x)))", "score": 0}
{"id": "eqasc_validation_733", "prediction": "all x y.((Energy(x) & Sound(y)) -> (ProducedByVibrations(x) & TravelsInWaves(y)))", "score": 0}
{"id": "eqasc_validation_733", "prediction": "all x y z.((Sound(x) & Energy(y) & Vibration(z)) -> (ProducedBy(x,z) & TravelsInWaves(x)))", "score": 0}
{"id": "eqasc_validation_733", "prediction": "all x y.((Sound(x) & Energy(y)) -> (ProducedByVibrations(x,y) & TravelsInWaves(x)))", "score": 0}
{"id": "eqasc_validation_734", "prediction": "all x y.((Material(x) & Wave(y) & PassesThrough(x,y)) -> ChangesSpeedAtWavesMovement(x,y))", "score": 0}
{"id": "eqasc_validation_734", "prediction": "all x y.((MaterialType(x) & Waves(y) & PassesThrough(x,y)) -> ChangesSpeedAtWavesMovement(x,y))", "score": 0}
{"id": "eqasc_validation_734", "prediction": "all x.((MaterialType(x) & WavesPass(x)) -> ChangesSpeedAtWavesMovement(x))", "score": 0}
{"id": "eqasc_validation_734", "prediction": "all x y.((Material(x) & Waves(y) & PassesThrough(x,y)) -> ChangesSpeedAtWavesMovement(x,y))", "score": 0}
{"id": "eqasc_validation_734", "prediction": "all x y.((MaterialType(x) & Wave(y) & PassesThrough(x,y)) -> ChangesSpeedAtWavesMovement(x,y))", "score": 0}
{"id": "eqasc_validation_734", "prediction": "all x y.((Material(x) & Wave(y) & PassesThrough(x,y)) -> ChangesSpeedAtMovement(x,y))", "score": 0}
{"id": "eqasc_validation_734", "prediction": "all x y.((MaterialType(x) & Waves(y) & PassesThrough(x,y)) -> ChangesSpeedAtWavesMovement(x))", "score": 0}
{"id": "eqasc_validation_734", "prediction": "all x y.((MaterialType(x) & Waves(y) & PassesThrough(x,y)) -> ChangesSpeedAtMovement(x,y))", "score": 0}
{"id": "eqasc_validation_734", "prediction": "all x y.((Material(x) & Wave(y) & PassesThrough(x,y)) -> ChangesSpeedAtWavesMovement(x))", "score": 0}
{"id": "eqasc_validation_734", "prediction": "all x y.((MaterialType(x) & Waves(y) & PassesThrough(x,y)) -> ChangesSpeedAt(x,y))", "score": 0}
{"id": "eqasc_validation_734", "prediction": "all x y.((Material(x) & Waves(y) & PassesThrough(x,y)) -> ChangesSpeedAtMovement(x,y))", "score": 0}
{"id": "eqasc_validation_734", "prediction": "all x y.((MaterialType(x) & Wave(y) & PassesThrough(x,y)) -> ChangesSpeedAtMovement(x,y))", "score": 0}
{"id": "eqasc_validation_734", "prediction": "all x.((MaterialType(x) & PassesWaves(x)) -> ChangesSpeedAtWavesMovement(x))", "score": 0}
{"id": "eqasc_validation_734", "prediction": "all x y.((Material(x) & Waves(y) & PassesThrough(x,y)) -> ChangesSpeedAtWavesMovement(x))", "score": 0}
{"id": "eqasc_validation_734", "prediction": "all x y.((Material(x) & Wave(y) & PassesThrough(x,y)) -> ChangesSpeedAt(x,y))", "score": 0}
{"id": "eqasc_validation_734", "prediction": "all x y.((MaterialType(x) & Wave(y) & PassesThrough(x,y)) -> ChangesSpeedAtWavesMovement(x))", "score": 0}
{"id": "eqasc_validation_735", "prediction": "all x y.((NegativeFeedback(x) & InsulinSecrétion(y)) -> Controls(x,y))", "score": 8}
{"id": "eqasc_validation_735", "prediction": "all x.(NegativeFeedback(x) -> ControlsInsulinSecrétionByPancreas(x))", "score": 8}
{"id": "eqasc_validation_735", "prediction": "all x y z.((NegativeFeedback(x) & InsulinSecrétion(y) & Pancreas(z)) -> Controls(x,y,z))", "score": 8}
{"id": "eqasc_validation_735", "prediction": "all x.(NegativeFeedback(x) -> ControlsInsulinSecrationByPancreas(x))", "score": 8}
{"id": "eqasc_validation_735", "prediction": "all x y.((NegativeFeedback(x) & InsulinSecrétionByPancreas(y)) -> Controls(x,y))", "score": 8}
{"id": "eqasc_validation_735", "prediction": "all x y z.((NegativeFeedback(x) & InsulinSecration(y) & Pancreas(z)) -> Controls(x,y,z))", "score": 0}
{"id": "eqasc_validation_735", "prediction": "all x y.((NegativeFeedback(x) & InsulinSecrine(y)) -> Controls(x,y))", "score": 8}
{"id": "eqasc_validation_735", "prediction": "all x y.((NegativeFeedback(x) & Insulin(y)) -> ControlsSecrétionByPancreas(x,y))", "score": 8}
{"id": "eqasc_validation_735", "prediction": "all x y.((NegativeFeedback(x) & InsulinSecration(y)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_validation_735", "prediction": "all x y.((NegativeFeedback(x) & InsulinSecrétion(y) & Pancreas(y)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_validation_735", "prediction": "all x y.((NegativeFeedback(x) & InsulinSecrétion(y) & Pancreas(z)) -> Controls(x,y,z))", "score": 8}
{"id": "eqasc_validation_735", "prediction": "all x.(NegativeFeedback(x) -> ControlsInsulinSecrétion(x))", "score": 8}
{"id": "eqasc_validation_735", "prediction": "all x.(NegativeFeedback(x) -> ControlsInsulinSecration(x))", "score": 0}
{"id": "eqasc_validation_735", "prediction": "all x.(NegativeFeedback(x) -> ControlsIndividualSecrétionByPancreas(x))", "score": 0}
{"id": "eqasc_validation_735", "prediction": "all x.(NegativeFeedback(x) -> ControlsInsulinSecrine(x))", "score": 8}
{"id": "eqasc_validation_735", "prediction": "all x y z.((NegativeFeedback(x) & InsulinSecrétion(y) & Pancreas(z)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_validation_736", "prediction": "all x.(Glucose(x) -> (StimulatesPancreas(x) & SecretesIndividual(x) & NegativeFeedback(x)))", "score": 0}
{"id": "eqasc_validation_736", "prediction": "all x.(Glucose(x) -> (StimulatesPancreas(x) & SecretesInsulin(x) & NegativeFeedback(x)))", "score": 0}
{"id": "eqasc_validation_736", "prediction": "all x y z.((Glucose(x) & Pancreas(y) & Insulin(z) & Stimulates(x,y)) -> SecretesThroughNegativeFeedback(x,z))", "score": 0}
{"id": "eqasc_validation_736", "prediction": "all x y z.((Glucose(x) & Pancreas(y) & Insulin(z)) -> (Stimulates(x,y) & SecretesThroughNegativeFeedback(x,z)))", "score": 0}
{"id": "eqasc_validation_736", "prediction": "all x.(Glucose(x) -> StimulatesPancreasToSecrateIndividual(x))", "score": 0}
{"id": "eqasc_validation_736", "prediction": "all x y.((Glucose(x) & Pancreas(y)) -> StimulatesToSecrateIndividual(x,y))", "score": 0}
{"id": "eqasc_validation_736", "prediction": "all x.(Glucose(x) -> (StimulatesPancreas(x) & SecretesIndividual(x) & PositiveFeedback(x)))", "score": 0}
{"id": "eqasc_validation_736", "prediction": "all x.(Glucose(x) -> (StimulatesPancreas(x) & SecretesIndividualThroughNegativeFeedback(x)))", "score": 0}
{"id": "eqasc_validation_736", "prediction": "all x.(Glucose(x) -> StimulatesPancreas(x))", "score": 0}
{"id": "eqasc_validation_736", "prediction": "all x y z.((Glucose(x) & Pancreas(y) & Insulin(z)) -> StimulatesToSecrate(x,y,z))", "score": 0}
{"id": "eqasc_validation_736", "prediction": "all x y z.((Glucose(x) & Pancreas(y) & Insulin(z)) -> StimulatesSpokenThroughNegativeFeedback(x,y,z))", "score": 0}
{"id": "eqasc_validation_736", "prediction": "all x y z.((Glucose(x) & Pancreas(y) & Insulin(z)) -> StimulatesToSecrateThroughNegativeFeedback(x,y,z))", "score": 0}
{"id": "eqasc_validation_736", "prediction": "all x y z.((Glucose(x) & Pancreas(y) & Insulin(z)) -> (Stimulates(x,y) & Secretes(x,z)))", "score": 0}
{"id": "eqasc_validation_736", "prediction": "all x y z.((Glucose(x) & Pancreas(y) & Insulin(z)) -> (Stimulates(x,y) & Secretes(x,z) & NegativeFeedback(x)))", "score": 0}
{"id": "eqasc_validation_736", "prediction": "all x y z.((Glucose(x) & Pancreas(y) & Insulin(z) & Stimulates(x,y)) -> SecretesByNegativeFeedback(x,z))", "score": 0}
{"id": "eqasc_validation_736", "prediction": "all x.(Glucose(x) -> (StimulatesPancreas(x) & SecretesIndividual(x)))", "score": 0}
{"id": "eqasc_validation_737", "prediction": "all x y.((Glucose(x) & Pancreas(y)) -> SecretesIndividual(x,y))", "score": 0}
{"id": "eqasc_validation_737", "prediction": "all x.(Glucose(x) -> MakesPancreasSecreteIndividual(x))", "score": 0}
{"id": "eqasc_validation_737", "prediction": "all x y z.((Glucose(x) & Pancreas(y) & Insulin(z)) -> Secretes(x,y,z))", "score": 0}
{"id": "eqasc_validation_737", "prediction": "all x.(Glucose(x) -> MakesPancreasSectIndividual(x))", "score": 0}
{"id": "eqasc_validation_737", "prediction": "all x.(Glucose(x) -> MakesPancreasSecrateIndividual(x))", "score": 0}
{"id": "eqasc_validation_737", "prediction": "all x y.((Glucose(x) & Pancreas(y)) -> SecretesInsulin(x,y))", "score": 0}
{"id": "eqasc_validation_737", "prediction": "all x.(Glucose(x) -> SecretesIndividual(x))", "score": 0}
{"id": "eqasc_validation_737", "prediction": "all x.(Glucose(x) -> MakesPancreasSectIsotropin(x))", "score": 0}
{"id": "eqasc_validation_737", "prediction": "all x y.((Glucose(x) & Pancreas(y)) -> SecretesIndividual(y,x))", "score": 0}
{"id": "eqasc_validation_737", "prediction": "all x y.((Glucose(x) & Pancreas(y)) -> MakesSecreteIndividual(x,y))", "score": 0}
{"id": "eqasc_validation_737", "prediction": "all x.(Glucose(x) -> SecretesInsulin(x))", "score": 0}
{"id": "eqasc_validation_737", "prediction": "all x y.((Glucose(x) & Pancreas(y)) -> SecretesInsulin(y,x))", "score": 0}
{"id": "eqasc_validation_737", "prediction": "all x y z.((Glucose(x) & Pancreas(y) & Insulin(z)) -> Secrete(x,y,z))", "score": 0}
{"id": "eqasc_validation_737", "prediction": "all x y z.((Glucose(x) & Pancreas(y) & Insulin(z)) -> MakesSecrete(x,y,z))", "score": 0}
{"id": "eqasc_validation_737", "prediction": "all x y.((Glucose(x) & Pancreas(y) & SecretesIndividual(x,y)) -> Makes(x,y))", "score": 0}
{"id": "eqasc_validation_737", "prediction": "all x y.((Glucose(x) & Pancreas(y)) -> SecreteIndividual(x,y))", "score": 0}
{"id": "eqasc_validation_738", "prediction": "all x.(FeedbackInhibition(x) -> (CommonBiologicalControlMechanism(x) & NegativeFeedback(x)))", "score": 10}
{"id": "eqasc_validation_738", "prediction": "all x.(FeedbackInhibition(x) -> (CommonBiologicalControlMachine(x) & NegativeFeedback(x)))", "score": 10}
{"id": "eqasc_validation_738", "prediction": "all x.(FeedbackInhibition(x) -> (BiologicalControlMechanism(x) & NegativeFeedback(x)))", "score": 10}
{"id": "eqasc_validation_738", "prediction": "all x.((FeedbackInhibition(x) & CommonBiologicalControlMechanism(x)) -> NegativeFeedback(x))", "score": 0}
{"id": "eqasc_validation_738", "prediction": "all x.(FeedbackInhibition(x) -> NegativeFeedback(x))", "score": 10}
{"id": "eqasc_validation_738", "prediction": "all x.(FeedbackInhibition(x) -> (BiologicalControlMachine(x) & NegativeFeedback(x)))", "score": 10}
{"id": "eqasc_validation_738", "prediction": "all x y.((FeedbackInhibition(x) & CommonBiologicalControlMechanism(y)) -> NegativeFeedback(x))", "score": 0}
{"id": "eqasc_validation_738", "prediction": "all x.((FeedbackInhibition(x) & CommonBiologicalControlMachine(x)) -> NegativeFeedback(x))", "score": 0}
{"id": "eqasc_validation_738", "prediction": "all x.(FeedbackInhibition(x) -> (CommonBiologicalControlMechanic(x) & NegativeFeedback(x)))", "score": 10}
{"id": "eqasc_validation_738", "prediction": "all x.(FeedbackInhibition(x) -> (BiologicalControlMechanic(x) & NegativeFeedback(x)))", "score": 10}
{"id": "eqasc_validation_738", "prediction": "all x.(FeedbackInhibition(x) -> (CommonBiologicalControl(x) & NegativeFeedback(x)))", "score": 10}
{"id": "eqasc_validation_738", "prediction": "all x.(FeedbackInhibition(x) -> (CommonBiologicalControlMechanism(x) & PositiveFeedback(x)))", "score": 0}
{"id": "eqasc_validation_738", "prediction": "all x.(FeedbackInhibition(x) -> CommonBiologicalControlMechanism(x))", "score": 0}
{"id": "eqasc_validation_739", "prediction": "all x y z.((FeedbackInhibition(x) & InsulinSecrétion(y) & Pancreas(z)) -> Controls(x,y,z))", "score": 16}
{"id": "eqasc_validation_739", "prediction": "all x.(FeedbackInhibition(x) -> ControlsInsulinSecrétionByPancreas(x))", "score": 8}
{"id": "eqasc_validation_739", "prediction": "all x y.((FeedbackInhibition(x) & Pancreas(y)) -> ControlsSecrétion(x,y))", "score": 0}
{"id": "eqasc_validation_739", "prediction": "all x y.((FeedbackInhibition(x) & Pancreas(y)) -> ControlsInsulinSecrétion(x,y))", "score": 0}
{"id": "eqasc_validation_739", "prediction": "all x y.((FeedbackInhibition(x) & InsulinSecrétion(y)) -> Controls(x,y))", "score": 8}
{"id": "eqasc_validation_739", "prediction": "all x y.((FeedbackInhibition(x) & Pancreas(y)) -> ControlsInsulinSecration(x,y))", "score": 0}
{"id": "eqasc_validation_739", "prediction": "all x y z.((FeedbackInhibition(x) & Insulin(y) & Pancreas(z)) -> ControlsSecrétion(x,y,z))", "score": 0}
{"id": "eqasc_validation_739", "prediction": "all x y.((FeedbackInhibition(x) & Pancreas(y)) -> ControlsSecrétionBy(x,y))", "score": 0}
{"id": "eqasc_validation_739", "prediction": "all x.(FeedbackInhibition(x) -> ControlsInsulinSecrationByPancreas(x))", "score": 8}
{"id": "eqasc_validation_739", "prediction": "all x y.((FeedbackInhibition(x) & InsulinSecrétionByPancreas(y)) -> Controls(x,y))", "score": 8}
{"id": "eqasc_validation_739", "prediction": "all x y.((FeedbackInhibition(x) & Pancreas(y)) -> ControlsInsulinSecrine(x,y))", "score": 0}
{"id": "eqasc_validation_739", "prediction": "all x y.((FeedbackInhibition(x) & Insulin(y)) -> ControlsSecrétionByPancreas(x,y))", "score": 8}
{"id": "eqasc_validation_739", "prediction": "all x y z.((FeedbackInhibition(x) & Insulin(y) & Pancreas(z)) -> ControlsSecrétionBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_739", "prediction": "all x.(FeedbackInhibition(x) -> ControlsInsulinSecrétion(x))", "score": 8}
{"id": "eqasc_validation_739", "prediction": "all x.(FeedbackInhibition(x) -> ControlsInsulinSecrine(x))", "score": 8}
{"id": "eqasc_validation_739", "prediction": "all x y.((FeedbackInhibition(x) & InsulinSecrine(y)) -> Controls(x,y))", "score": 8}
{"id": "eqasc_validation_740", "prediction": "all x.(IsletCell(x) -> LocatedInPancreas(x))", "score": 0}
{"id": "eqasc_validation_740", "prediction": "all x y.((IsletCell(x) & Pancreas(y)) -> LocatedIn(x,y))", "score": 0}
{"id": "eqasc_validation_740", "prediction": "all x.(IslandCell(x) -> LocatedInPancreas(x))", "score": 0}
{"id": "eqasc_validation_740", "prediction": "all x y z.((IsletCell(x) & Pancreas(y) & Pancreas(z)) -> LocatedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_740", "prediction": "all x y.((IslandCell(x) & Pancreas(y)) -> LocatedIn(x,y))", "score": 0}
{"id": "eqasc_validation_740", "prediction": "all x.(IsletCell(x) -> LocationInPancreas(x))", "score": 0}
{"id": "eqasc_validation_740", "prediction": "all x.(IsletCell(x) -> (LocatedInPancreas(x) & LocatedInPancreas(x)))", "score": 0}
{"id": "eqasc_validation_740", "prediction": "all x.(IsletCell(x) -> FoundInPancreas(x))", "score": 0}
{"id": "eqasc_validation_740", "prediction": "all x.(IsletCell(x) -> LocatesInPancreas(x))", "score": 0}
{"id": "eqasc_validation_740", "prediction": "all x y.((IsletCell(x) & Pancreas(y)) -> LocalizedIn(x,y))", "score": 0}
{"id": "eqasc_validation_740", "prediction": "all x.(IsletCell(x) -> (LocatedInPancreas(x) | LocatedInPancreas(x)))", "score": 0}
{"id": "eqasc_validation_741", "prediction": "all x y.((IsletCell(x) & InsulinSecrétion(y)) -> LocatedWhere(x,y))", "score": 0}
{"id": "eqasc_validation_741", "prediction": "all x y z.((IsletCell(x) & InsulinSecrétion(y) & InsulinSecrétion(z)) -> LocatedWhere(x,y,z))", "score": 0}
{"id": "eqasc_validation_741", "prediction": "all x.(IsletCell(x) -> (LocatedWhereInsulinSecrétionOccurs(x) & InsulinSecrétionOccurs(x)))", "score": 0}
{"id": "eqasc_validation_741", "prediction": "all x y z.((IsletCell(x) & InsulinSecrétion(y) & InsulinSecrétion(z)) -> LocatesWhereSecrétionOccurs(x,y,z))", "score": 0}
{"id": "eqasc_validation_741", "prediction": "all x y z.((IsletCell(x) & InsulinSecrétion(y) & InsulinSecrétion(z)) -> LocatedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_741", "prediction": "all x y z.((IsletCell(x) & InsulinSecrétion(y) & InsulinSecrétion(z)) -> LocatesWhere(x,y,z))", "score": 0}
{"id": "eqasc_validation_741", "prediction": "all x y.((IsletCell(x) & InsulinSecrétion(y)) -> LocatesWhere(x,y))", "score": 0}
{"id": "eqasc_validation_741", "prediction": "all x y z.((IsletCell(x) & InsulinSecrétion(y) & InsulinSecrétion(z)) -> LocatesWhereSecrétionOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_741", "prediction": "all x y.((IsletCell(x) & InsulinSecrétion(y)) -> LocatedIn(x,y))", "score": 0}
{"id": "eqasc_validation_741", "prediction": "all x y z.((IsletCell(x) & InsulinSecrétion(y) & InsulinSecrétion(z)) -> LocatedWhereSecrétionOccurs(x,y,z))", "score": 0}
{"id": "eqasc_validation_741", "prediction": "all x y z.((IsletCell(x) & InsulinSecrétion(y) & InsulinSecrétion(z)) -> LocatedWhereSecrétionOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_741", "prediction": "all x y z.((IsletCell(x) & InsulinSecrétion(y) & InsulinSecrétion(z)) -> Locates(x,y,z))", "score": 0}
{"id": "eqasc_validation_741", "prediction": "all x y.((IsletCell(x) & InsulinSecrétion(y)) -> LocatesWhereSecrétionOccurs(x,y))", "score": 0}
{"id": "eqasc_validation_742", "prediction": "all x.(Spot(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_742", "prediction": "all x.(Sponges(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_742", "prediction": "all x.(Spoonge(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_742", "prediction": "all x.(Sponge(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_742", "prediction": "all x.(Spotge(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_742", "prediction": "all x y.((Spot(x) & FilterFeeder(y)) -> FilterFeeder(x,y))", "score": 0}
{"id": "eqasc_validation_742", "prediction": "all x y.((Spot(x) & FilterFeeder(y)) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_742", "prediction": "all x.(Spotlight(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_742", "prediction": "all x.(Spotter(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_742", "prediction": "all x.(Spoken(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_742", "prediction": "all x.(Spote(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_742", "prediction": "all x.(Spunge(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_742", "prediction": "all x.(Spotfire(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_742", "prediction": "all x y.((Spot(x) & FilterFeeder(y)) -> Filter(x,y))", "score": 0}
{"id": "eqasc_validation_743", "prediction": "all x.(DietFilterFilter(x) -> (EatsKrill(x) & EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_743", "prediction": "all x.(DietFilterFilter(x) -> (EatsKril(x) & EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_743", "prediction": "all x.(DietFilterFeeder(x) -> (EatsKrill(x) & EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_743", "prediction": "all x.((DietFilter(x) & Feeder(x)) -> (EatsKrill(x) & EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_743", "prediction": "all x.(DietFilter(x) -> (EatsKrill(x) & EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_743", "prediction": "all x.(DietFilterFilter(x) -> (EatKrill(x) & EatPlankton(x)))", "score": 0}
{"id": "eqasc_validation_743", "prediction": "all x.(DietFilterFilter(x) -> (EatsKirll(x) & EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_743", "prediction": "all x.(DietFilterFeeder(x) -> (EatsKril(x) & EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_743", "prediction": "all x y z.((DietFilter(x) & Krill(y) & Plankton(z)) -> Eats(x,y,z))", "score": 0}
{"id": "eqasc_validation_743", "prediction": "all x.(DietFilterFilter(x) -> (EatsKrill(x) | EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_743", "prediction": "all x.(DietFilterFilter(x) -> (EatKril(x) & EatPlankton(x)))", "score": 0}
{"id": "eqasc_validation_743", "prediction": "all x.(DietFilter(x) -> (EatsKril(x) & EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_743", "prediction": "all x y.((DietFilter(x) & Krill(y) & Plankton(y)) -> Eats(x,y))", "score": 0}
{"id": "eqasc_validation_743", "prediction": "all x.(Filter(x) -> (EatsKrill(x) & EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_743", "prediction": "all x y.((DietFilter(x) & Feeder(y)) -> (EatsKrill(x) & EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_744", "prediction": "all x.(Spot(x) -> EatsPlankton(x))", "score": 0}
{"id": "eqasc_validation_744", "prediction": "all x.(Spot(x) -> EatPlankton(x))", "score": 0}
{"id": "eqasc_validation_744", "prediction": "all x y.((Spot(x) & Plankton(y)) -> Eats(x,y))", "score": 0}
{"id": "eqasc_validation_744", "prediction": "all x.(Spoonge(x) -> EatsPlankton(x))", "score": 0}
{"id": "eqasc_validation_744", "prediction": "all x.(Sponge(x) -> EatsPlankton(x))", "score": 0}
{"id": "eqasc_validation_744", "prediction": "all x y.((Spoonge(x) & Plankton(y)) -> Eats(x,y))", "score": 0}
{"id": "eqasc_validation_744", "prediction": "all x.(Spotge(x) -> EatsPlankton(x))", "score": 0}
{"id": "eqasc_validation_744", "prediction": "all x.(Spoonge(x) -> EatPlankton(x))", "score": 0}
{"id": "eqasc_validation_744", "prediction": "all x y.((Sponge(x) & Plankton(y)) -> Eats(x,y))", "score": 0}
{"id": "eqasc_validation_744", "prediction": "all x.(Sponge(x) -> EatPlankton(x))", "score": 0}
{"id": "eqasc_validation_744", "prediction": "all x.(Sponges(x) -> EatPlankton(x))", "score": 0}
{"id": "eqasc_validation_744", "prediction": "all x.(Sponges(x) -> EatsPlankton(x))", "score": 0}
{"id": "eqasc_validation_744", "prediction": "all x.(Spotge(x) -> EatPlankton(x))", "score": 0}
{"id": "eqasc_validation_744", "prediction": "all x y.((Spot(x) & Plankton(y)) -> Eat(x,y))", "score": 0}
{"id": "eqasc_validation_744", "prediction": "all x.(Spotch(x) -> EatsPlankton(x))", "score": 0}
{"id": "eqasc_validation_744", "prediction": "all x y.((Spoonge(x) & Plankton(y)) -> Eat(x,y))", "score": 0}
{"id": "eqasc_validation_745", "prediction": "all x.((BottomDwellingOrganism(x) & (Coral(x) | Urchin(x) | Sponge(x))) -> ColorfulBackground(x))", "score": 0}
{"id": "eqasc_validation_745", "prediction": "all x.((BottomDwellingOrganism(x) & (Coral(x) | Urchin(x) | Sponge(x))) -> ProvidesColorfulBackground(x))", "score": 0}
{"id": "eqasc_validation_745", "prediction": "all x y.((BottomDwellingOrganism(x) & (Coral(y) | Urchin(y) | Sponge(y))) -> ColorfulBackground(x))", "score": 0}
{"id": "eqasc_validation_745", "prediction": "all x y z.((BottomDwellingOrganism(x) & (Coral(y) | Urchin(y) | Sponge(y))) -> ProvidesColorfulBackground(x))", "score": 0}
{"id": "eqasc_validation_745", "prediction": "all x.((BottomDwellingOrganism(x) & Coral(x) & Urchin(x) & Sponge(x)) -> ColorfulBackground(x))", "score": 0}
{"id": "eqasc_validation_745", "prediction": "all x y z.((BottomDwellingOrganism(x) & (Coral(y) | Urchin(y) | Sponge(y))) -> ProvidesColorfulBackground(x,y))", "score": 0}
{"id": "eqasc_validation_745", "prediction": "all x.((BottomDwellingOrganism(x) & ColorfulBackground(x)) -> (Coral(x) | Urchin(x) | Sponge(x)))", "score": 0}
{"id": "eqasc_validation_745", "prediction": "all x y z.((BottomDwellingOrganism(x) & (Coral(y) | Urchin(y) | Sponge(y))) -> ColorfulBackground(x))", "score": 0}
{"id": "eqasc_validation_745", "prediction": "all x y.((BottomDwellingOrganism(x) & (Coral(y) | Urchin(y) | Sponge(y))) -> ProvidesColorfulBackground(x))", "score": 0}
{"id": "eqasc_validation_745", "prediction": "all x.(BottomDwellingOrganism(x) -> (Coral(x) | Urchin(x) | Sponge(x)))", "score": 0}
{"id": "eqasc_validation_745", "prediction": "all x y.((BottomDwellingOrganism(x) & (Coral(y) | Urchin(y) | Sponge(y))) -> ProvidesColorfulBackground(x,y))", "score": 0}
{"id": "eqasc_validation_745", "prediction": "all x y z.((BottomDwellingOrganism(x) & (Coral(y) | Urchin(y) | Sponge(y))) -> ProvidesColorfulBackground(x,y,z))", "score": 0}
{"id": "eqasc_validation_745", "prediction": "all x y z.((BottomDwellingOrganism(x) & (Coral(y) | Urchin(y) | Sponge(y))) -> ColorfulBackground(z))", "score": 0}
{"id": "eqasc_validation_745", "prediction": "all x y z.((BottomDwellingOrganism(x) & (Coral(y) | Urchin(y) | Sponge(y)) & ColorfulBackground(z)) -> Provides(x,y,z))", "score": 0}
{"id": "eqasc_validation_745", "prediction": "all x y z.((BottomDwellingOrganism(x) & Coral(y) & Urchin(z) & Sponge(x)) -> ProvidesColorfulBackground(x))", "score": 0}
{"id": "eqasc_validation_745", "prediction": "all x.((BottomDwellingOrganism(x) & (Coral(x) | Urchin(x) | Sponge(x))) -> ColorfulBackdrop(x))", "score": 0}
{"id": "eqasc_validation_746", "prediction": "all x.(BottomDwellingOrganism(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_746", "prediction": "all x.((BottomDwellingOrganism(x) & FilterFeeder(x)) -> CanBeFilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_746", "prediction": "all x.(BottomDwellingOrganism(x) -> CanBeFilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_746", "prediction": "all x y.((BottomDwellingOrganism(x) & BottomDwellingOrganism(y)) -> FilterFeeder(x,y))", "score": 0}
{"id": "eqasc_validation_746", "prediction": "all x y.((BottomDwellingOrganism(x) & BottomDwellingOrganism(y)) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_746", "prediction": "all x.(FilterFeeder(x) -> BottomDwellingOrganism(x))", "score": 0}
{"id": "eqasc_validation_746", "prediction": "all x.((BottomDwellingOrganism(x) & FilterFeeder(x)) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_746", "prediction": "all x y z.((BottomDwellingOrganism(x) & BottomDwellingOrganism(y) & FilterFeeder(z)) -> CanBeFilterFeeder(x,y,z))", "score": 0}
{"id": "eqasc_validation_746", "prediction": "all x.(BottomDwellingOrganism(x) -> (FilterFeeder(x) | FilterFeeder(x)))", "score": 0}
{"id": "eqasc_validation_746", "prediction": "all x y z.((BottomDwellingOrganism(x) & BottomDwellingOrganism(y) & FilterFeeder(z)) -> FilterFeeder(x,y,z))", "score": 0}
{"id": "eqasc_validation_746", "prediction": "all x y.((BottomDwellingOrganism(x) & BottomDwellingOrganism(y)) -> CanBeFilterFeeder(x,y))", "score": 0}
{"id": "eqasc_validation_746", "prediction": "all x.(BottomDwellingOrganism(x) -> (FilterFeeder(x) & FilterFeeder(x)))", "score": 0}
{"id": "eqasc_validation_746", "prediction": "all x y.((BottomDwellingOrganism(x) & BottomDwellingOrganism(y)) -> CanBeFilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_746", "prediction": "all x.((BottomDwellingOrganism(x) & FilterFeeder(x)) -> CanBeFeeder(x))", "score": 0}
{"id": "eqasc_validation_746", "prediction": "all x.((BottomDwellingOrganism(x) & FilterFeeder(x)) -> CanBeFilterFeedingOrganism(x))", "score": 0}
{"id": "eqasc_validation_746", "prediction": "all x y z.((BottomDwellingOrganism(x) & BottomDwellingOrganism(y) & FilterFeeder(z)) -> CanBe(x,y,z))", "score": 0}
{"id": "eqasc_validation_747", "prediction": "all x.(Sponge(x) -> (EatsKrill(x) & EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_747", "prediction": "all x y z.((Sponge(x) & Krill(y) & Plankton(z)) -> (Eats(x,y) & Eats(x,z)))", "score": 0}
{"id": "eqasc_validation_747", "prediction": "all x y z.((Sponge(x) & Krill(y) & Plankton(z)) -> (Eats(x,y) | Eats(x,z)))", "score": 0}
{"id": "eqasc_validation_747", "prediction": "all x y.((Sponge(x) & Sponge(y)) -> (EatsKrill(x) & EatsPlankton(y)))", "score": 0}
{"id": "eqasc_validation_747", "prediction": "all x y z.((Sponge(x) & Krill(y) & Plankton(z)) -> EatsAndPlankton(x,y,z))", "score": 0}
{"id": "eqasc_validation_747", "prediction": "all x y z.((Sponge(x) & Krill(y) & Plankton(z)) -> Eats(x,y,z))", "score": 0}
{"id": "eqasc_validation_747", "prediction": "all x.(Sponge(x) -> (EatsKril(x) & EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_747", "prediction": "all x y z.((Sponge(x) & Krill(y) & Plankton(z)) -> (Eats(x,y) & Eats(x,z) & Eats(x,z)))", "score": 0}
{"id": "eqasc_validation_747", "prediction": "all x y z.((Sponge(x) & Krill(y) & Plankton(z)) -> (Eats(x,y,z) & Eats(x,z)))", "score": 0}
{"id": "eqasc_validation_747", "prediction": "all x y z w.((Sponge(x) & Krill(y) & Plankton(z)) -> (Eats(x,y) & Eats(x,z)))", "score": 0}
{"id": "eqasc_validation_747", "prediction": "all x y z.((Sponge(x) & (Krill(y) | Plankton(z))) -> (Eats(x,y) & Eats(x,z)))", "score": 0}
{"id": "eqasc_validation_747", "prediction": "all x y.((Sponge(x) & (Krill(y) | Plankton(y))) -> Eats(x,y))", "score": 0}
{"id": "eqasc_validation_747", "prediction": "all x.(Sponge(x) -> (EatKrill(x) & EatPlankton(x)))", "score": 0}
{"id": "eqasc_validation_747", "prediction": "all x.(Sponge(x) -> (EatsKrill(x) | EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_747", "prediction": "all x y z w.((Sponge(x) & Krill(y) & Plankton(z)) -> (Eats(x,y) & Eats(x,z) & Eats(x,w)))", "score": 0}
{"id": "eqasc_validation_747", "prediction": "all x.(Sponge(x) -> (EatsKirll(x) & EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_748", "prediction": "all x.(Clam(x) -> (FilterFeeder(x) & TrapsAndFiltersFood(x) & WaterPassesBy(x)))", "score": 0}
{"id": "eqasc_validation_748", "prediction": "all x.(Clam(x) -> (FilterFeeder(x) & TrapsAndFiltersFood(x)))", "score": 0}
{"id": "eqasc_validation_748", "prediction": "all x.(Clam(x) -> (FilterFeeder(x) & TrapsFood(x) & FiltersFood(x) & WaterPassesBy(x)))", "score": 0}
{"id": "eqasc_validation_748", "prediction": "all x.(Clam(x) -> (FilterFeeder(x) & TrapsAndFiltersOutFood(x) & WaterPassesBy(x)))", "score": 0}
{"id": "eqasc_validation_748", "prediction": "all x.(Clam(x) -> (FilterFeeder(x) & TrapsFood(x) & FiltersFood(x)))", "score": 0}
{"id": "eqasc_validation_748", "prediction": "all x.(Clam(x) -> (FilterFeeder(x) & TrapsAndFiltersFoodAsWaterPassesBy(x)))", "score": 0}
{"id": "eqasc_validation_748", "prediction": "all x.(Clam(x) -> (FilterFeeder(x) & TrapFood(x) & FilterFood(x) & WaterPassesBy(x)))", "score": 0}
{"id": "eqasc_validation_748", "prediction": "all x.(Clam(x) -> (FilterFeeder(x) & TrapsAndFiltersFood(x) & PassesByWater(x)))", "score": 0}
{"id": "eqasc_validation_748", "prediction": "all x.(Chamb(x) -> (FilterFeeder(x) & TrapsAndFiltersFood(x) & WaterPassesBy(x)))", "score": 0}
{"id": "eqasc_validation_748", "prediction": "all x.(Clam(x) -> (FilterFeeder(x) & TrapsFood(x) & FiltersOutFood(x)))", "score": 0}
{"id": "eqasc_validation_748", "prediction": "all x.(Cam(x) -> (FilterFeeder(x) & TrapsAndFiltersFood(x) & WaterPassesBy(x)))", "score": 0}
{"id": "eqasc_validation_748", "prediction": "all x.(Clam(x) -> (FilterFeeder(x) & TrapFood(x) & FilterFood(x)))", "score": 0}
{"id": "eqasc_validation_748", "prediction": "all x.(Clam(x) -> (FilterFeeder(x) & TrapsFood(x) & FiltersOutFood(x) & WaterPassesBy(x)))", "score": 0}
{"id": "eqasc_validation_748", "prediction": "all x.(Clam(x) -> (FilterFeeder(x) & TrapFood(x) & FilterOutFood(x) & WaterPassesBy(x)))", "score": 0}
{"id": "eqasc_validation_748", "prediction": "all x.(Clam(x) -> (FilterFeeder(x) & TrapsFood(x) & FiltersFoodAsWaterPassesBy(x)))", "score": 0}
{"id": "eqasc_validation_748", "prediction": "all x.(Chamber(x) -> (FilterFeeder(x) & TrapsAndFiltersFood(x) & WaterPassesBy(x)))", "score": 0}
{"id": "eqasc_validation_749", "prediction": "all x y.((Spot(x) & Water(y)) -> (Traps(x,y) & FiltersOutFood(x,y)))", "score": 0}
{"id": "eqasc_validation_749", "prediction": "all x y.((Spoonge(x) & Water(y)) -> (Traps(x,y) & FiltersOutFood(x,y)))", "score": 0}
{"id": "eqasc_validation_749", "prediction": "all x y z.((Spot(x) & Water(y) & Food(z)) -> (Traps(x,y) & FiltersOut(x,z)))", "score": 0}
{"id": "eqasc_validation_749", "prediction": "all x y z.((Spot(x) & Water(y) & Water(z)) -> (Traps(x,y) & FiltersOutFood(x,z)))", "score": 0}
{"id": "eqasc_validation_749", "prediction": "all x y.((Sponge(x) & Water(y)) -> (Traps(x,y) & FiltersOutFood(x,y)))", "score": 0}
{"id": "eqasc_validation_749", "prediction": "all x y.((Sponges(x) & Water(y)) -> (Traps(x,y) & FiltersOutFood(x,y)))", "score": 0}
{"id": "eqasc_validation_749", "prediction": "all x y z.((Spot(x) & Water(y) & Food(z)) -> (Traps(x,y) & Filters(x,z)))", "score": 0}
{"id": "eqasc_validation_749", "prediction": "all x y.((Spot(x) & Water(y)) -> (Traps(x,y) & Filters(x,y)))", "score": 0}
{"id": "eqasc_validation_749", "prediction": "all x y z.((Spoonge(x) & Water(y) & Food(z)) -> (Traps(x,y) & FiltersOut(x,z)))", "score": 0}
{"id": "eqasc_validation_749", "prediction": "all x.(Spot(x) -> (Traps(x) & FiltersOutFood(x) & WaterPasses(x)))", "score": 0}
{"id": "eqasc_validation_749", "prediction": "all x y z.((Sponge(x) & Water(y) & Food(z)) -> (Traps(x,y) & FiltersOut(x,z)))", "score": 0}
{"id": "eqasc_validation_749", "prediction": "all x y.((Spot(x) & WaterPasses(y)) -> (Traps(x,y) & FiltersOutFood(x,y)))", "score": 0}
{"id": "eqasc_validation_749", "prediction": "all x y.((Spot(x) & Water(y)) -> (Traps(x,y) & FiltersOutFood(x)))", "score": 0}
{"id": "eqasc_validation_749", "prediction": "all x y.((Spotge(x) & Water(y)) -> (Traps(x,y) & FiltersOutFood(x,y)))", "score": 0}
{"id": "eqasc_validation_749", "prediction": "all x y z.((Spot(x) & Water(y) & Food(z)) -> (Traps(x,y) & FiltersOutFood(x,z)))", "score": 0}
{"id": "eqasc_validation_749", "prediction": "all x.(Sponges(x) -> (TrapsFood(x) & FiltersOutFood(x) & WaterPasses(x)))", "score": 0}
{"id": "eqasc_validation_750", "prediction": "all x.(Mushels(x) -> (FilterFeeder(x) & CleanWater(x)))", "score": 0}
{"id": "eqasc_validation_750", "prediction": "all x.(Muschel(x) -> (FilterFeeder(x) & CleanWater(x)))", "score": 0}
{"id": "eqasc_validation_750", "prediction": "all x.(Mushels(x) -> (FilterFeeder(x) & CleanWater(x) & Feeds(x)))", "score": 0}
{"id": "eqasc_validation_750", "prediction": "all x.(Mushels(x) -> (FilterFeeders(x) & CleanWater(x)))", "score": 0}
{"id": "eqasc_validation_750", "prediction": "all x.(Muschel(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_750", "prediction": "all x.(Muschel(x) -> (FilterFeeder(x) & CleanWater(x) & Feeds(x)))", "score": 0}
{"id": "eqasc_validation_750", "prediction": "all x.(Muschel(x) -> (FilterFeeder(x) & CleansWater(x)))", "score": 0}
{"id": "eqasc_validation_750", "prediction": "all x.(Mushels(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_750", "prediction": "all x.(Mushels(x) -> (FilterFeeder(x) & CleansWater(x)))", "score": 0}
{"id": "eqasc_validation_750", "prediction": "all x.(Mushels(x) -> (FilterFeeders(x) & CleanWater(x) & Feeds(x)))", "score": 0}
{"id": "eqasc_validation_750", "prediction": "all x.(Muschel(x) -> (FilterFeeder(x) & CleansWater(x) & Feeds(x)))", "score": 0}
{"id": "eqasc_validation_750", "prediction": "all x.(Mushel(x) -> (FilterFeeder(x) & CleanWater(x)))", "score": 0}
{"id": "eqasc_validation_750", "prediction": "all x.(Mushele(x) -> (FilterFeeder(x) & CleanWater(x)))", "score": 0}
{"id": "eqasc_validation_750", "prediction": "all x.(Mushels(x) -> FilterFeeders(x))", "score": 0}
{"id": "eqasc_validation_750", "prediction": "all x.(Mushels(x) -> (FilterFeeder(x) & CleanWaterAsMushels(x)))", "score": 0}
{"id": "eqasc_validation_750", "prediction": "all x.(Mushel(x) -> (FilterFeeder(x) & CleanWater(x) & Feeds(x)))", "score": 0}
{"id": "eqasc_validation_751", "prediction": "all x y.((Sponge(x) & Water(y)) -> Cleans(x,y))", "score": 0}
{"id": "eqasc_validation_751", "prediction": "all x.(Sponge(x) -> CleansWater(x))", "score": 0}
{"id": "eqasc_validation_751", "prediction": "all x y z.((Sponge(x) & Water(y) & Water(z)) -> Cleans(x,y,z))", "score": 0}
{"id": "eqasc_validation_751", "prediction": "all x y.((Sponge(x) & Water(y)) -> CleansWater(x,y))", "score": 0}
{"id": "eqasc_validation_751", "prediction": "all x y z.((Sponge(x) & Water(y) & Water(z)) -> CleansWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_751", "prediction": "all x y z.((Sponge(x) & Water(y) & Water(z)) -> Cleans(x,y))", "score": 0}
{"id": "eqasc_validation_751", "prediction": "all x y.((Sponge(x) & Water(y) & Cleans(x,y)) -> Sponge(x))", "score": 0}
{"id": "eqasc_validation_751", "prediction": "all x y.((Sponge(x) & Water(y)) -> CleansWith(x,y))", "score": 0}
{"id": "eqasc_validation_751", "prediction": "all x y z.((Sponge(x) & Water(y) & Water(z)) -> CleansWater(x,y,z))", "score": 0}
{"id": "eqasc_validation_751", "prediction": "all x y z.((Sponge(x) & Water(y) & Water(z) & Cleans(x,y,z)) -> Sponge(x))", "score": 0}
{"id": "eqasc_validation_751", "prediction": "all x y z.((Sponge(x) & Water(y) & Water(z) & Cleans(x,y,z)) -> Cleans(x,y,z))", "score": 0}
{"id": "eqasc_validation_751", "prediction": "all x y z.((Sponge(x) & Water(y) & Water(z) & Cleans(x,y)) -> Sponge(x))", "score": 0}
{"id": "eqasc_validation_751", "prediction": "all x y z.((Sponge(x) & Water(y) & Water(z) & Cleans(x,y,z)) -> Cleans(x,y))", "score": 0}
{"id": "eqasc_validation_751", "prediction": "all x y.((Sponge(x) & Water(y) & CleansWater(x,y)) -> Sponge(x))", "score": 0}
{"id": "eqasc_validation_751", "prediction": "all x y z.((Sponge(x) & Water(y) & Water(z)) -> Clean(x,y,z))", "score": 0}
{"id": "eqasc_validation_751", "prediction": "all x.(Sponge(x) -> (CleansWater(x) & Sponge(x)))", "score": 0}
{"id": "eqasc_validation_752", "prediction": "all x.(Sponge(x) -> (CleansWater(x) & Feeds(x)))", "score": 0}
{"id": "eqasc_validation_752", "prediction": "all x.(Sponge(x) -> (CleanWater(x) & Feeds(x)))", "score": 0}
{"id": "eqasc_validation_752", "prediction": "all x y.((Sponge(x) & Water(y)) -> (CleansWater(x,y) & Feeds(x,y)))", "score": 0}
{"id": "eqasc_validation_752", "prediction": "all x y.((Sponge(x) & Water(y)) -> Cleans(x,y))", "score": 0}
{"id": "eqasc_validation_752", "prediction": "all x y.((Sponge(x) & Water(y) & Feeds(x,y)) -> CleansWater(x,y))", "score": 0}
{"id": "eqasc_validation_752", "prediction": "all x y.((Sponge(x) & Water(y) & Feeds(x,y)) -> CleansWater(x))", "score": 0}
{"id": "eqasc_validation_752", "prediction": "all x y.((Sponge(x) & Water(y) & Feeds(x,y)) -> Cleans(x,y))", "score": 0}
{"id": "eqasc_validation_752", "prediction": "all x y z.((Sponge(x) & Water(y) & Feed(z)) -> (CleansWater(x,y) & Feeds(x,z)))", "score": 0}
{"id": "eqasc_validation_752", "prediction": "all x y z.((Sponge(x) & Water(y) & Food(z)) -> (CleansWater(x,y) & Feeds(x,z)))", "score": 0}
{"id": "eqasc_validation_752", "prediction": "all x.(Sponge(x) -> (CleanWater(x) & Feed(x)))", "score": 0}
{"id": "eqasc_validation_752", "prediction": "all x y z.((Sponge(x) & Water(y) & Water(z)) -> (CleansWater(x,y) & Feeds(x,z)))", "score": 0}
{"id": "eqasc_validation_752", "prediction": "all x y.((Sponge(x) & Feed(y)) -> CleansWater(x,y))", "score": 0}
{"id": "eqasc_validation_752", "prediction": "all x y z.((Sponge(x) & Water(y) & Feed(z)) -> CleansWater(x,y,z))", "score": 0}
{"id": "eqasc_validation_752", "prediction": "all x y.((Sponge(x) & Water(y) & Feeds(x,y)) -> CleansWaterAsSponge(x,y))", "score": 0}
{"id": "eqasc_validation_752", "prediction": "all x y.((Sponge(x) & Water(y)) -> (CleansWater(x,y) & Feeds(x)))", "score": 0}
{"id": "eqasc_validation_753", "prediction": "all x y.((Spot(x) & Water(y)) -> (Traps(x,y) & FiltersOutFood(x,y)))", "score": 0}
{"id": "eqasc_validation_753", "prediction": "all x y.((Spoonge(x) & Water(y)) -> (Traps(x,y) & FiltersOutFood(x,y)))", "score": 0}
{"id": "eqasc_validation_753", "prediction": "all x y.((Sponge(x) & Water(y)) -> (Traps(x,y) & FiltersOutFood(x,y)))", "score": 0}
{"id": "eqasc_validation_753", "prediction": "all x.(Spot(x) -> (Traps(x) & FiltersOutFood(x) & WaterPassesBy(x)))", "score": 0}
{"id": "eqasc_validation_753", "prediction": "all x.(Spoonge(x) -> (Traps(x) & FiltersOutFood(x) & WaterPassesBy(x)))", "score": 0}
{"id": "eqasc_validation_753", "prediction": "all x.(Sponge(x) -> (Traps(x) & FiltersOutFood(x) & WaterPassesBy(x)))", "score": 0}
{"id": "eqasc_validation_753", "prediction": "all x.(Sponges(x) -> (Traps(x) & FiltersOutFood(x) & WaterPassesBy(x)))", "score": 0}
{"id": "eqasc_validation_753", "prediction": "all x y.((Sponges(x) & Water(y)) -> (Traps(x,y) & FiltersOutFood(x,y)))", "score": 0}
{"id": "eqasc_validation_753", "prediction": "all x y.((Spot(x) & Water(y)) -> (Traps(x,y) & Filters(x,y)))", "score": 0}
{"id": "eqasc_validation_753", "prediction": "all x y z.((Spot(x) & Water(y) & Water(z)) -> (Traps(x,y) & FiltersOutFood(x,z)))", "score": 0}
{"id": "eqasc_validation_753", "prediction": "all x.(Spoonge(x) -> (TrapsWater(x) & FiltersOutFood(x)))", "score": 0}
{"id": "eqasc_validation_753", "prediction": "all x y.((Spotge(x) & Water(y)) -> (Traps(x,y) & FiltersOutFood(x,y)))", "score": 0}
{"id": "eqasc_validation_753", "prediction": "all x y.((Spoonge(x) & Water(y)) -> (Traps(x,y) & Filters(x,y)))", "score": 0}
{"id": "eqasc_validation_753", "prediction": "all x y.((Spot(x) & Water(y)) -> (Traps(x,y) & FiltersOut(x,y)))", "score": 0}
{"id": "eqasc_validation_753", "prediction": "all x y.((Sponge(x) & Water(y)) -> (Traps(x,y) & Filters(x,y)))", "score": 0}
{"id": "eqasc_validation_753", "prediction": "all x y.((Spoonge(x) & Water(y)) -> (Traps(x,y) & FiltersOut(x,y)))", "score": 0}
{"id": "eqasc_validation_754", "prediction": "all x y z.((Spot(x) & Krill(y) & Plankton(z)) -> (Eats(x,y) & Eats(x,z)))", "score": 0}
{"id": "eqasc_validation_754", "prediction": "all x y z.((Spoonge(x) & Krill(y) & Plankton(z)) -> (Eats(x,y) & Eats(x,z)))", "score": 0}
{"id": "eqasc_validation_754", "prediction": "all x y z.((Sponge(x) & Krill(y) & Plankton(z)) -> (Eats(x,y) & Eats(x,z)))", "score": 0}
{"id": "eqasc_validation_754", "prediction": "all x y z.((Spotge(x) & Krill(y) & Plankton(z)) -> (Eats(x,y) & Eats(x,z)))", "score": 0}
{"id": "eqasc_validation_754", "prediction": "all x.(Spot(x) -> (EatsKrill(x) & EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_754", "prediction": "all x y z.((Sponges(x) & Krill(y) & Plankton(z)) -> (Eats(x,y) & Eats(x,z)))", "score": 0}
{"id": "eqasc_validation_754", "prediction": "all x y z.((Spot(x) & Krill(y) & Plankton(z)) -> (Eats(x,y) | Eats(x,z)))", "score": 0}
{"id": "eqasc_validation_754", "prediction": "all x y z w.((Spot(x) & Krill(y) & Plankton(z) & Eats(x,y)) -> (Eats(x,z) & Eats(x,w)))", "score": 0}
{"id": "eqasc_validation_754", "prediction": "all x y z.((Spot(x) & Krill(y) & Plankton(z)) -> (Eats(x,y) & Eats(x,z) & Eats(x,z)))", "score": 0}
{"id": "eqasc_validation_754", "prediction": "all x.(Spotge(x) -> (EatsKrill(x) & EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_754", "prediction": "all x.(Spot(x) -> (EatsKril(x) & EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_754", "prediction": "all x y.((Spot(x) & Krill(y)) -> Eats(x,y)) & (Plankton(z) -> Eats(x,z)))", "score": -1}
{"id": "eqasc_validation_754", "prediction": "all x y.((Spot(x) & Krill(y)) -> Eats(x,y)) & (Plankton(x) -> Eats(x,y)))", "score": -1}
{"id": "eqasc_validation_754", "prediction": "all x y z.((Spot(x) & Krill(y) & Plankton(z)) -> (Eat(x,y) & Eat(x,z)))", "score": 0}
{"id": "eqasc_validation_754", "prediction": "all x y z.((Spot(x) & Krill(y) & Plankton(z)) -> EatsAndPlankton(x,y,z))", "score": 0}
{"id": "eqasc_validation_754", "prediction": "all x y.((Spot(x) & Krill(y)) -> Eats(x,y)) & (Plankton(y) -> Eats(x,y)))", "score": -1}
{"id": "eqasc_validation_755", "prediction": "all x.(Sponge(x) -> CleanWater(x))", "score": 0}
{"id": "eqasc_validation_755", "prediction": "all x.(Sponge(x) -> CleansWater(x))", "score": 0}
{"id": "eqasc_validation_755", "prediction": "all x y z.((Sponge(x) & Water(y) & Water(z)) -> Cleans(x,y,z))", "score": 0}
{"id": "eqasc_validation_755", "prediction": "all x y.((Sponge(x) & CleanWater(y)) -> CleanWater(x,y))", "score": 0}
{"id": "eqasc_validation_755", "prediction": "all x y.((Sponge(x) & Water(y)) -> Cleans(x,y))", "score": 0}
{"id": "eqasc_validation_755", "prediction": "all x y.((Sponge(x) & Water(y)) -> CleansWater(x,y))", "score": 0}
{"id": "eqasc_validation_755", "prediction": "all x.(Sponge(x) -> (CleanWater(x) & Sponge(x)))", "score": 0}
{"id": "eqasc_validation_755", "prediction": "all x y.((Sponge(x) & CleanWater(y)) -> CleansWater(x,y))", "score": 0}
{"id": "eqasc_validation_755", "prediction": "all x y.((Sponge(x) & CleanWater(y)) -> Sponge(x))", "score": 0}
{"id": "eqasc_validation_755", "prediction": "all x y z.((Sponge(x) & Water(y) & Water(z)) -> CleanWater(x,y,z))", "score": 0}
{"id": "eqasc_validation_755", "prediction": "all x y z.((Sponge(x) & Water(y) & Water(z)) -> CleansWater(x,y,z))", "score": 0}
{"id": "eqasc_validation_755", "prediction": "all x y.((Sponge(x) & CleanWater(y)) -> SpongesCleanWater(x,y))", "score": 0}
{"id": "eqasc_validation_755", "prediction": "all x y z.((Sponge(x) & CleanWater(y) & Water(z)) -> CleanWater(x,y,z))", "score": 0}
{"id": "eqasc_validation_755", "prediction": "all x y.((Sponge(x) & CleanWater(y)) -> Sponges(x,y))", "score": 0}
{"id": "eqasc_validation_755", "prediction": "all x y.((Sponge(x) & Water(y)) -> CleanWater(x,y))", "score": 0}
{"id": "eqasc_validation_755", "prediction": "all x y.((Sponge(x) & CleanWater(y)) -> Sponge(x,y))", "score": 0}
{"id": "eqasc_validation_756", "prediction": "all x.(BaleenWhale(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_756", "prediction": "all x y.((BaleenWhale(x) & FilterFeeder(y)) -> FilterFeeder(x,y))", "score": 0}
{"id": "eqasc_validation_756", "prediction": "all x.(Baleen(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_756", "prediction": "all x y.((BaleenWhale(x) & FilterFeeder(y)) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_756", "prediction": "all x y.((BaleenWhale(x) & FilterFeeder(y)) -> Filter(x,y))", "score": 0}
{"id": "eqasc_validation_756", "prediction": "all x y.((BaleenWhale(x) & Fisher(y)) -> FilterFeeder(x,y))", "score": 0}
{"id": "eqasc_validation_756", "prediction": "all x y.((BaleenWhale(x) & Fisher(y)) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_756", "prediction": "all x.((BaleenWhale(x) & FilterFeeder(x)) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_756", "prediction": "all x y.((BaleenWhale(x) & Feeder(y)) -> FilterFeeder(x,y))", "score": 0}
{"id": "eqasc_validation_756", "prediction": "all x y.((BaleenWhale(x) & Feeder(y)) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_756", "prediction": "all x.(BalleenWhale(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_756", "prediction": "all x.(BaleenWhale(x) -> FilterFeeders(x))", "score": 0}
{"id": "eqasc_validation_756", "prediction": "all x y.((BaleenWhale(x) & Feeder(y)) -> Filter(x,y))", "score": 0}
{"id": "eqasc_validation_756", "prediction": "all x y.((BaleenWhale(x) & FilterFeeder(x)) -> FilterFeeder(y))", "score": 0}
{"id": "eqasc_validation_756", "prediction": "all x y.((BaleenWhale(x) & FilterFeeder(y)) -> Filter(x))", "score": 0}
{"id": "eqasc_validation_757", "prediction": "all x y.((BaleenWhale(x) & Sponge(y)) -> EatsInSameWay(x,y))", "score": 0}
{"id": "eqasc_validation_757", "prediction": "all x y.((BaleenWhale(x) & Sponge(y)) -> EatsInSameWays(x,y))", "score": 0}
{"id": "eqasc_validation_757", "prediction": "all x y.((BaleenWhale(x) & Sponge(y)) -> (EatsInSameWay(x,y) & EatsInSameWay(y,x)))", "score": 0}
{"id": "eqasc_validation_757", "prediction": "all x y.((BaleenWhale(x) & Sponge(y)) -> (EatsInSameWays(x,y) & EatsInSameWays(y,x)))", "score": 0}
{"id": "eqasc_validation_757", "prediction": "all x y.((BaleenWhale(x) & Sponge(y)) -> EatsInSameManner(x,y))", "score": 0}
{"id": "eqasc_validation_757", "prediction": "all x y.((BaleenWhale(x) & Sponge(y)) -> (EatsInSameWay(x,y) & EatsInSameWay(y,z)))", "score": 0}
{"id": "eqasc_validation_757", "prediction": "all x y.((BaleenWhale(x) & Sponge(y)) -> EatsInSameWeapons(x,y))", "score": 0}
{"id": "eqasc_validation_757", "prediction": "all x y.((BaleenWhale(x) & Sponge(y)) -> (EatsInSameWay(x,y) | EatsInSameWay(y,x)))", "score": 0}
{"id": "eqasc_validation_757", "prediction": "all x y.((BaleenWhale(x) & Sponge(y)) -> (EatsInSameWays(x,y) & EatsInSameWays(y,z)))", "score": 0}
{"id": "eqasc_validation_757", "prediction": "all x y.((BaleenWhale(x) & Sponge(y)) -> (EatsInSameWays(x,y) & EatsInSameWays(x,y)))", "score": 0}
{"id": "eqasc_validation_757", "prediction": "all x y.((BaleenWhale(x) & Sponge(y)) -> (EatsInSameWay(x,y) & EatsInSameWay(x,y)))", "score": 0}
{"id": "eqasc_validation_757", "prediction": "all x y.((BaleenWhale(x) & Sponge(y)) -> (EatsInSameWays(x,y) & EatsInSameWays(y)))", "score": 0}
{"id": "eqasc_validation_757", "prediction": "all x y.((BaleenWhale(x) & Sponge(y)) -> (EatsInSameWays(x,y) | EatsInSameWays(y,x)))", "score": 0}
{"id": "eqasc_validation_757", "prediction": "all x y.((BaleenWhale(x) & Sponge(y)) -> (EatsInSameWay(x,y) | EatsInSameWay(y,z)))", "score": 0}
{"id": "eqasc_validation_757", "prediction": "all x y.((BaleenWhale(x) & Sponge(y)) -> (EatInSameWay(x,y) & EatInSameWay(y,x)))", "score": 0}
{"id": "eqasc_validation_757", "prediction": "all x y.((BaleenWhale(x) & Sponge(y)) -> EatInSameWay(x,y))", "score": 0}
{"id": "eqasc_validation_758", "prediction": "all x.(Mutualism(x) -> (SymbioticRelationship(x) & BenefitsBothSpecies(x)))", "score": 8}
{"id": "eqasc_validation_758", "prediction": "all x.(Mutualism(x) -> (SymbioticRelationship(x) & BothSpeciesBenefit(x)))", "score": 8}
{"id": "eqasc_validation_758", "prediction": "all x.(Mutualism(x) -> (SymbioticRelationship(x) & BenefitBothSpecies(x)))", "score": 8}
{"id": "eqasc_validation_758", "prediction": "all x y.((Mutualism(x) & Species(y)) -> (SymbioticRelationship(x,y) & BenefitsBothSpecies(x,y)))", "score": 0}
{"id": "eqasc_validation_758", "prediction": "all x y.((Mutualism(x) & Species(y)) -> BenefitsBothSpecies(x,y))", "score": 0}
{"id": "eqasc_validation_758", "prediction": "all x y.((Mutualism(x) & Species(y)) -> (SymbioticRelationship(x,y) & Benefits(x,y)))", "score": 0}
{"id": "eqasc_validation_758", "prediction": "all x y.((Mutualism(x) & Species(y)) -> (SymbioticRelationship(x,y) & BothSpeciesBenefit(x,y)))", "score": 0}
{"id": "eqasc_validation_758", "prediction": "all x y.((Mutualism(x) & Species(y)) -> (SymbioticRelationship(x,y) & Benefit(x,y)))", "score": 0}
{"id": "eqasc_validation_758", "prediction": "all x.(Mutualism(x) -> (SymbioticRelationship(x) & Benefit(x,y)))", "score": 8}
{"id": "eqasc_validation_759", "prediction": "all x.((Dog(x) | Human(x)) -> SymbioticSpecies(x))", "score": 0}
{"id": "eqasc_validation_759", "prediction": "all x.(SymbioticSpecies(x) -> (Dog(x) | Human(x)))", "score": 0}
{"id": "eqasc_validation_759", "prediction": "all x y.((Dog(x) & Human(y)) -> SymbioticSpecies(x,y))", "score": 0}
{"id": "eqasc_validation_759", "prediction": "all x y.((Dog(x) | Human(y)) -> SymbioticSpecies(x))", "score": 0}
{"id": "eqasc_validation_759", "prediction": "all x y.((Dog(x) & Human(y)) -> SymbioticSpecies(x))", "score": 0}
{"id": "eqasc_validation_759", "prediction": "all x.(Dog(x) | Human(x)) -> SymbioticSpecies(x))", "score": -1}
{"id": "eqasc_validation_759", "prediction": "all x y.((Dog(x) & Human(y)) -> (SymbioticSpecies(x) & SymbioticSpecies(y)))", "score": 0}
{"id": "eqasc_validation_759", "prediction": "all x y.((Dog(x) | Human(y)) -> SymbioticSpecies(x,y))", "score": 0}
{"id": "eqasc_validation_759", "prediction": "all x y.((Dog(x) & Human(y)) -> (SymbioticSpecies(x,y) & SymbioticSpecies(x,y)))", "score": 0}
{"id": "eqasc_validation_759", "prediction": "all x.((Dog(x) | Human(x)) -> Symbiotic(x))", "score": 0}
{"id": "eqasc_validation_759", "prediction": "(SymbioticSpecies(Dogs) & SymbioticSpecies(Humans))", "score": 0}
{"id": "eqasc_validation_759", "prediction": "(SymbioticSpecies(Dog) & SymbioticSpecies(Human))", "score": 0}
{"id": "eqasc_validation_759", "prediction": "all x y.((Dog(x) & Human(y)) -> (SymbioticSpecies(x,y) & SymbioticSpecies(y)))", "score": 0}
{"id": "eqasc_validation_759", "prediction": "all x y.((Dog(x) & Human(y)) -> (SymbioticSpecies(x) & SymbioticSpecies(x)))", "score": 0}
{"id": "eqasc_validation_759", "prediction": "all x.(SymbioticSpecies(x) -> (Dogs(x) | Humans(x)))", "score": 0}
{"id": "eqasc_validation_760", "prediction": "all x y z.((Dog(x) & Human(y) & Dog(z)) -> Mutualism(x,y,z))", "score": 0}
{"id": "eqasc_validation_760", "prediction": "all x y.((Dog(x) & Human(y)) -> Mutualism(x,y))", "score": 0}
{"id": "eqasc_validation_760", "prediction": "all x y z w.((Dog(x) & Human(y) & Dog(z) & Human(w)) -> Mutualism(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_760", "prediction": "all x y z.((Dog(x) & Human(y) & Dog(z)) -> Mutualism(x,z))", "score": 0}
{"id": "eqasc_validation_760", "prediction": "all x y z.((Dog(x) & Human(y) & Dog(z) & Human(z)) -> Mutualism(x,y,z))", "score": 0}
{"id": "eqasc_validation_760", "prediction": "all x y z.((Dog(x) & Human(y) & Dog(z)) -> Mutualism(x,y))", "score": 0}
{"id": "eqasc_validation_760", "prediction": "all x y z w.((Dog(x) & Human(y) & Dog(z) & Human(w)) -> Mutualism(x,z,w))", "score": 0}
{"id": "eqasc_validation_760", "prediction": "all x y z w.((Dog(x) & Human(y) & Dog(z) & Human(w)) -> Mutualism(x,y,z))", "score": 0}
{"id": "eqasc_validation_760", "prediction": "all x y z.((Dog(x) & Human(y) & Dog(z) & Mutualism(x,y,z)) -> exists w.(Dog(w) & Human(w) & Mutualism(x,w)))", "score": 0}
{"id": "eqasc_validation_760", "prediction": "all x y z.((Dog(x) & Human(y) & Dog(z) & Human(y)) -> Mutualism(x,y,z))", "score": 0}
{"id": "eqasc_validation_760", "prediction": "all x y.((Dog(x) & Human(y) & Mutualism(x,y)) -> exists z.(Dog(z) & Human(z) & Mutualism(x,z))))", "score": -1}
{"id": "eqasc_validation_760", "prediction": "all x y z.((Dog(x) & Human(y) & Dog(z) & Human(y)) -> Mutualism(x,z))", "score": 0}
{"id": "eqasc_validation_760", "prediction": "all x y z.((Dog(x) & Human(y) & Dog(z) & Mutualism(x,y)) -> exists w.(Dog(w) & Human(w) & Mutualism(x,w)))", "score": 0}
{"id": "eqasc_validation_760", "prediction": "all x y.((Dog(x) & Human(y) & Mutualism(x,y)) -> exists z.(Dog(z) & Human(z) & Mutualism(x,y)))", "score": 0}
{"id": "eqasc_validation_760", "prediction": "all x y z.((Dog(x) & Human(y) & Dog(z)) -> MutualismBetween(x,y,z))", "score": 0}
{"id": "eqasc_validation_760", "prediction": "all x y z w.((Dog(x) & Human(y) & Dog(z)) -> Mutualism(x,y,z))", "score": 0}
{"id": "eqasc_validation_761", "prediction": "all x.(DomesticationOfAnimals(x) -> SymbioticRelationship(x))", "score": 0}
{"id": "eqasc_validation_761", "prediction": "all x.(Domestication(x) -> SymbioticRelationship(x))", "score": 0}
{"id": "eqasc_validation_761", "prediction": "all x y.((Animal(x) & Domestication(y)) -> SymbioticRelationship(x,y))", "score": 0}
{"id": "eqasc_validation_761", "prediction": "all x y.((Domestication(x) & Animal(y)) -> SymbioticRelationship(x,y))", "score": 0}
{"id": "eqasc_validation_761", "prediction": "all x y z.((Animal(x) & Domestication(y) & Animal(z)) -> SymbioticRelationship(x,y,z))", "score": 0}
{"id": "eqasc_validation_761", "prediction": "all x y.((DomesticationOfAnimals(x) & Animal(y)) -> SymbioticRelationship(x,y))", "score": 0}
{"id": "eqasc_validation_761", "prediction": "all x y.((Animal(x) & Domestication(y)) -> SymbioticRelationship(x))", "score": 0}
{"id": "eqasc_validation_761", "prediction": "all x y.((Animal(x) & Animal(y)) -> Domestication(x,y))", "score": 0}
{"id": "eqasc_validation_761", "prediction": "all x.((AnimalDomestication(x) & SymbioticRelationship(x)) -> Domestication(x))", "score": 8}
{"id": "eqasc_validation_761", "prediction": "all x.((AnimalDomestication(x) & Animal(y)) -> SymbioticRelationship(x,y))", "score": 0}
{"id": "eqasc_validation_761", "prediction": "all x y.((Animal(x) & Domestication(x,y)) -> SymbioticRelationship(x))", "score": 0}
{"id": "eqasc_validation_761", "prediction": "all x y.((Animal(x) & Domestication(x,y)) -> SymbioticRelationship(x,y))", "score": 0}
{"id": "eqasc_validation_761", "prediction": "all x.((Animal(x) & Domestication(x)) -> SymbioticRelationship(x))", "score": 0}
{"id": "eqasc_validation_762", "prediction": "all x.(DomesticationOfAnimals(x) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_762", "prediction": "all x.((AnimalDomestication(x) & Mutualism(x)) -> Domestication(x))", "score": 4}
{"id": "eqasc_validation_762", "prediction": "all x.((DomesticationOfAnimals(x) & Mutualism(x)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_762", "prediction": "all x y.((AnimalDomestication(x) & Animal(y)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_762", "prediction": "all x y.((AnimalDomestication(x) & Animal(y)) -> Mutualism(x,y))", "score": 0}
{"id": "eqasc_validation_762", "prediction": "all x.((AnimalDomestication(x) & Mutualism(x)) -> DomesticationOfAnimals(x))", "score": 0}
{"id": "eqasc_validation_762", "prediction": "all x y.((Animal(x) & Domestication(y)) -> Mutualism(x,y))", "score": 0}
{"id": "eqasc_validation_762", "prediction": "all x y.((Animal(x) & Domestication(y)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_762", "prediction": "all x y.((DomesticationOfAnimals(x) & Animal(y)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_762", "prediction": "all x y.((DomesticationOfAnimals(x) & Animal(y)) -> Mutualism(x,y))", "score": 0}
{"id": "eqasc_validation_762", "prediction": "all x y.((Domestication(x) & Animal(y)) -> Mutualism(x,y))", "score": 0}
{"id": "eqasc_validation_762", "prediction": "all x y z.((Animal(x) & Domestication(y) & Animal(z)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_762", "prediction": "all x y z.((Animal(x) & Animal(y) & Domestication(z)) -> Mutualism(x,y,z))", "score": 0}
{"id": "eqasc_validation_762", "prediction": "all x y z.((Animal(x) & Domestication(y) & Animal(z)) -> Mutualism(x,y,z))", "score": 0}
{"id": "eqasc_validation_762", "prediction": "all x y z.((DomesticationOfAnimals(x) & Animal(y) & Animal(z)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_763", "prediction": "all x.(DomesticationOfAnimals(x) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_763", "prediction": "all x y.((DomesticationOfAnimals(x) & Animal(y)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_763", "prediction": "all x y.((AnimalDomestication(x) & Animal(y)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_763", "prediction": "all x y.((AnimalDomestication(x) & Animal(y)) -> Mutualism(x,y))", "score": 0}
{"id": "eqasc_validation_763", "prediction": "all x y.((DomesticationOfAnimals(x) & Animal(y)) -> Mutualism(x,y))", "score": 0}
{"id": "eqasc_validation_763", "prediction": "all x y z.((DomesticationOfAnimals(x) & Animal(y) & Animal(z)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_763", "prediction": "all x y.((Animal(x) & Domestication(y)) -> Mutualism(x,y))", "score": 0}
{"id": "eqasc_validation_763", "prediction": "all x y.((Animal(x) & Domestication(y)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_763", "prediction": "all x.(DomesticationOfAnimals(x) -> MutualismExample(x))", "score": 0}
{"id": "eqasc_validation_763", "prediction": "all x.((DomesticationOfAnimals(x) & Mutualism(x)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_763", "prediction": "all x y.((Domestication(x) & Animal(y)) -> Mutualism(x,y))", "score": 0}
{"id": "eqasc_validation_763", "prediction": "all x.((AnimalDomestication(x) & Mutualism(x)) -> Domestication(x))", "score": 4}
{"id": "eqasc_validation_763", "prediction": "all x.((DomesticationOfAnimals(x) & Mutualism(x)) -> DomesticationOfAnimals(x))", "score": 0}
{"id": "eqasc_validation_763", "prediction": "all x y z.((Animal(x) & Domestication(y) & Animal(z)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_763", "prediction": "all x.((AnimalDomestication(x) & Mutualism(x)) -> DomesticationOfAnimals(x))", "score": 0}
{"id": "eqasc_validation_764", "prediction": "all x y.((Coral(x) & Alga(y)) -> SymbioticRelationship(x,y))", "score": 0}
{"id": "eqasc_validation_764", "prediction": "all x.((Coral(x) & Alga(x)) -> SymbioticRelationship(x))", "score": 0}
{"id": "eqasc_validation_764", "prediction": "all x.((Coral(x) | Alga(x)) -> SymbioticRelationship(x))", "score": 0}
{"id": "eqasc_validation_764", "prediction": "all x y z.((Coral(x) & Alga(y) & SymbioticRelationship(z)) -> Has(x,y,z))", "score": 0}
{"id": "eqasc_validation_764", "prediction": "all x y.((Coral(x) & Alga(y)) -> SymbioticRelationship(x))", "score": 0}
{"id": "eqasc_validation_764", "prediction": "all x y.((Coral(x) & Alga(y)) -> HasSymbioticRelationship(x,y))", "score": 0}
{"id": "eqasc_validation_764", "prediction": "all x y z.((Coral(x) & Alga(y) & SymbioticRelationship(z)) -> (HasSymbioticRelationship(x,y) & HasSymbioticRelationship(y,z)))", "score": 0}
{"id": "eqasc_validation_764", "prediction": "all x.(Coral(x) -> SymbioticRelationship(x))", "score": 0}
{"id": "eqasc_validation_764", "prediction": "all x y z.((Coral(x) & Alga(y) & SymbioticRelationship(z)) -> HasSymbioticRelationship(x,y,z))", "score": 0}
{"id": "eqasc_validation_764", "prediction": "all x y z.((Coral(x) & Alga(y) & SymbioticRelationship(z)) -> (HasSymbioticRelationship(x,y,z) & HasSymbioticRelationship(y,z)))", "score": 0}
{"id": "eqasc_validation_764", "prediction": "all x y z.((Coral(x) & Alga(y) & SymbioticRelationship(z)) -> (HasSymbioticRelationship(x,y,z) & HasSymbioticRelationship(x,y)))", "score": 0}
{"id": "eqasc_validation_764", "prediction": "all x y z.((Coral(x) & Alga(y) & SymbioticRelationship(z)) -> (HasSymbioticRelationship(x,y) & HasSymbioticRelationship(x,z)))", "score": 0}
{"id": "eqasc_validation_764", "prediction": "all x.(Coral(x) & Alga(x)) -> SymbioticRelationship(x))", "score": -1}
{"id": "eqasc_validation_764", "prediction": "all x y z.((Coral(x) & Alga(y) & SymbioticRelationship(z)) -> (HasSymbioticRelationship(x,y,z) & HasSymbioticRelationship(y,x)))", "score": 0}
{"id": "eqasc_validation_764", "prediction": "all x y z.((Coral(x) & Alga(y) & SymbioticRelationship(z)) -> (HasSymbioticRelationship(x,y,z) & HasSymbioticRelationship(x,y,z)))", "score": 0}
{"id": "eqasc_validation_764", "prediction": "all x y z.((Coral(x) & Alga(y) & SymbioticRelationship(z)) -> (SymbioticRelationship(x,y) & SymbioticRelationship(y,z)))", "score": 0}
{"id": "eqasc_validation_765", "prediction": "all x.((Interaction(x) & Coral(x) & Alga(x)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_765", "prediction": "all x y.((Coral(x) & Alga(y)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_765", "prediction": "all x y.((Interaction(x) & Coral(y) & Alga(y)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_765", "prediction": "all x y.((Coral(x) & Alga(y)) -> Mutualism(x,y))", "score": 0}
{"id": "eqasc_validation_765", "prediction": "all x y.((Interaction(x) & Coral(y) & Alga(y)) -> Mutualism(x,y))", "score": 0}
{"id": "eqasc_validation_765", "prediction": "all x y.((Interaction(x,y) & Coral(y) & Alga(y)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_765", "prediction": "all x y z.((Interaction(x,y) & Coral(y) & Alga(z)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_765", "prediction": "all x y z.((Interaction(x) & Coral(y) & Alga(z)) -> Mutualism(x,y,z))", "score": 0}
{"id": "eqasc_validation_765", "prediction": "all x.((Coral(x) & Alga(x)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_765", "prediction": "all x.((Interaction(x,Coral) & Alga(x)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_765", "prediction": "all x y z.((Interaction(x) & Coral(y) & Alga(z)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_765", "prediction": "all x y.((Interaction(x) & Coral(y) & Alga(z)) -> Mutualism(x,y,z))", "score": 0}
{"id": "eqasc_validation_765", "prediction": "all x y z.((Coral(x) & Alga(y) & Interaction(z)) -> Mutualism(x,y,z))", "score": 0}
{"id": "eqasc_validation_765", "prediction": "all x y.((Interaction(x) & Coral(y) & Alga(z)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_765", "prediction": "all x y.((Coral(x) & Alga(y) & Interaction(x,y)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_766", "prediction": "all x.(Mutualism(x) -> (AssociationBetweenSpecies(x) & BenefitsSpecies(x)))", "score": 0}
{"id": "eqasc_validation_766", "prediction": "all x y.((Mutualism(x) & DifferentSpecies(y)) -> Benefits(x,y))", "score": 0}
{"id": "eqasc_validation_766", "prediction": "all x y z.((Mutualism(x) & Species(y) & Species(z)) -> Benefits(x,y,z))", "score": 0}
{"id": "eqasc_validation_766", "prediction": "all x y.((Mutualism(x) & DifferentSpecies(y)) -> BenefitsSpecies(x,y))", "score": 0}
{"id": "eqasc_validation_766", "prediction": "all x y.((Mutualism(x) & Species(y)) -> Benefits(x,y))", "score": 0}
{"id": "eqasc_validation_766", "prediction": "all x y z.((Mutualism(x) & Species(y) & Species(z)) -> (Association(x,y,z) & Benefits(x,y,z)))", "score": 0}
{"id": "eqasc_validation_766", "prediction": "all x y z.((Mutualism(x) & Species(y) & Species(z)) -> (Association(x,y,z) & Benefits(x,y)))", "score": 0}
{"id": "eqasc_validation_766", "prediction": "all x.(Mutualism(x) -> (exists y.(Species(y) & Benefits(x,y))))", "score": 0}
{"id": "eqasc_validation_766", "prediction": "all x y z.((Mutualism(x) & Species(y) & Species(z) & Benefits(x,y,z)) -> Association(x,y,z))", "score": 0}
{"id": "eqasc_validation_767", "prediction": "all x y.((SymbioticRelationship(x) & DifferentSpecies(y)) -> BenefitsSpecies(x,y))", "score": 0}
{"id": "eqasc_validation_767", "prediction": "all x y.((SymbioticRelationship(x) & Species(y)) -> (AssociationBetweenSpecies(x,y) & BenefitsSpecies(x,y)))", "score": 0}
{"id": "eqasc_validation_767", "prediction": "all x.(SymbioticRelationship(x) -> (AssociationBetweenSpecies(x) & BenefitsSpecies(x)))", "score": 0}
{"id": "eqasc_validation_767", "prediction": "all x y z.((SymbioticRelationship(x) & Species(y) & Species(z)) -> (Association(x,y,z) & BenefitsSpecies(y,z)))", "score": 0}
{"id": "eqasc_validation_767", "prediction": "all x y.((SymbioticRelationship(x) & Species(y)) -> (Association(x,y) & BenefitsSpecies(x,y)))", "score": 0}
{"id": "eqasc_validation_767", "prediction": "all x y z.((SymbioticRelationship(x) & Species(y) & Species(z)) -> (AssociationBetweenSpecies(x,y,z) & BenefitsSpecies(y,z)))", "score": 0}
{"id": "eqasc_validation_767", "prediction": "all x y z.((SymbioticRelationship(x) & Species(y) & Species(z)) -> (AssociationBetweenSpecies(x,y,z) & BenefitsSpecies(x,y,z)))", "score": 0}
{"id": "eqasc_validation_767", "prediction": "all x y z.((SymbioticRelationship(x) & Species(y) & Species(z)) -> (Association(x,y,z) & BenefitsSpecies(x,y,z)))", "score": 0}
{"id": "eqasc_validation_767", "prediction": "all x y.((SymbioticRelationship(x) & DifferentSpecies(y)) -> (Association(x,y) & BenefitsSpecies(x,y)))", "score": 0}
{"id": "eqasc_validation_767", "prediction": "all x y z.((SymbioticRelationship(x) & Species(y) & Species(z)) -> (AssociationBetween(x,y,z) & BenefitsSpecies(y,z)))", "score": 0}
{"id": "eqasc_validation_767", "prediction": "all x y z.((SymbioticRelationship(x) & Species(y) & Species(z)) -> (AssociationBetweenSpecies(x,y,z) & BenefitsSpecies(x,y)))", "score": 0}
{"id": "eqasc_validation_767", "prediction": "all x.(SymbioticRelationship(x) -> (Association(x,y) & DifferentSpecies(y) & BenefitsSpecies(x,y)))", "score": 0}
{"id": "eqasc_validation_767", "prediction": "all x y z.((SymbioticRelationship(x) & Species(y) & Species(z)) -> (Association(x,y,z) & BenefitsSpecies(x,y)))", "score": 0}
{"id": "eqasc_validation_767", "prediction": "all x y z.((SymbioticRelationship(x) & Species(y) & Species(z)) -> (AssociationBetween(x,y,z) & BenefitsSpecies(x,y,z)))", "score": 0}
{"id": "eqasc_validation_768", "prediction": "all x y.((LivingSpecies(x) & HumanSpecies(y)) -> OutOf(x,y))", "score": 0}
{"id": "eqasc_validation_768", "prediction": "all x.((LivingSpecies(x) & 8400000(x)) -> HumanSpecies(x))", "score": 0}
{"id": "eqasc_validation_768", "prediction": "all x y z.((LivingSpecies(x) & LivingSpecies(y) & HumanSpecies(z)) -> OutOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_768", "prediction": "all x y.((LivingBeing(x) & HumanSpecies(y)) -> OutOf(x,y))", "score": 0}
{"id": "eqasc_validation_768", "prediction": "all x.((LivingBeing(x) & 8400000(x)) -> HumanSpecies(x))", "score": 0}
{"id": "eqasc_validation_768", "prediction": "all x y z.((LivingSpecies(x) & LivingSpecies(y) & HumanSpecies(z)) -> (OutOf(x,y,z) & OutOf(x,y) & OutOf(x,z)))", "score": 0}
{"id": "eqasc_validation_768", "prediction": "all x y z.((LivingSpecies(x) & LivingSpecies(y) & HumanSpecies(z)) -> (OutOf(x,y,z) & OutOf(x,y) & OutOf(x,y,z)))", "score": 0}
{"id": "eqasc_validation_768", "prediction": "all x y.((LivingSpecies(x) & HumanSpecies(y)) -> exists z.(LivingSpecies(z) & OutOf(x,y) & OutOf(x,z))))", "score": -1}
{"id": "eqasc_validation_768", "prediction": "all x y z.((LivingSpecies(x) & LivingSpecies(y) & HumanSpecies(z)) -> (OutOf(x,y) & OutOf(x,z)))", "score": 0}
{"id": "eqasc_validation_768", "prediction": "all x y z.((LivingSpecies(x) & LivingSpecies(y) & HumanSpecies(z)) -> (OutOf(x,y,z) & OutOf(x,y,z)))", "score": 0}
{"id": "eqasc_validation_768", "prediction": "all x.((LivingBeingSpecies(x) & 8400000(x)) -> HumanSpecies(x))", "score": 0}
{"id": "eqasc_validation_768", "prediction": "all x y z.((LivingSpecies(x) & LivingSpecies(y) & HumanSpecies(z)) -> (OutOf(x,y,z) & OutOf(x,y) & OutOf(x,y)))", "score": 0}
{"id": "eqasc_validation_768", "prediction": "all x y.((LivingSpecies(x) & HumanSpecies(y)) -> exists z.(LivingSpecies(z) & OutOf(x,y,z))))", "score": -1}
{"id": "eqasc_validation_768", "prediction": "all x y.((LivingSpecies(x,y) & HumanSpecies(y)) -> OutOf(x,y))", "score": 0}
{"id": "eqasc_validation_768", "prediction": "all x y z.((LivingSpecies(x) & LivingSpecies(y) & HumanSpecies(z)) -> exists w.(LivingSpecies(w) & LivesIn(x,y) & LivesIn(x,z))))", "score": -1}
{"id": "eqasc_validation_768", "prediction": "all x y z.((LivingSpecies(x) & LivingSpecies(y) & HumanSpecies(z)) -> (OutOf(x,y) & OutOf(x,z) & OutOf(x,y)))", "score": 0}
{"id": "eqasc_validation_769", "prediction": "all x.(Mutualism(x) -> (SymbioticRelationship(x) & BothLivingBeingsBenefit(x)))", "score": 0}
{"id": "eqasc_validation_769", "prediction": "all x.(Mutualism(x) -> (SymbioticRelationship(x) & LivingBeingsBenefit(x)))", "score": 0}
{"id": "eqasc_validation_769", "prediction": "all x.(Mutualism(x) -> (SymbioticRelationship(x) & BenefitsLivingBeings(x)))", "score": 0}
{"id": "eqasc_validation_769", "prediction": "all x.(Mutualism(x) -> (SymbioticRelationship(x) & LivingBeingBenefit(x)))", "score": 0}
{"id": "eqasc_validation_769", "prediction": "all x.(Mutualism(x) -> (SymbioticRelationship(x) & BenefitsBothLivingBeings(x)))", "score": 0}
{"id": "eqasc_validation_769", "prediction": "all x.(Mutualism(x) -> (SymbioticRelationship(x) & LivingBeing(x) & Benefit(x)))", "score": 0}
{"id": "eqasc_validation_769", "prediction": "all x.(Mutualism(x) -> (SymbioticRelationship(x) & LivingBeing(x) & Benefits(x)))", "score": 0}
{"id": "eqasc_validation_769", "prediction": "all x.(Mutualism(x) -> (SymbioticRelationship(x) & LivingBeingBenefits(x)))", "score": 0}
{"id": "eqasc_validation_769", "prediction": "all x.(Mutualism(x) -> (exists y.(LivingBeing(y) & Benefits(x,y))))", "score": 0}
{"id": "eqasc_validation_770", "prediction": "all x.(SymbioticMicrobe(x) -> LivesInMushelsGills(x))", "score": 0}
{"id": "eqasc_validation_770", "prediction": "all x y.((SymbioticMicrobe(x) & Muschel(y)) -> LivesInGills(x,y))", "score": 0}
{"id": "eqasc_validation_770", "prediction": "all x.(SymbioticMicrobe(x) -> LivesInMuschelsGills(x))", "score": 0}
{"id": "eqasc_validation_770", "prediction": "all x y z.((SymbioticMicrobe(x) & Muschel(y) & Gill(z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_770", "prediction": "all x y z.((SymbioticMicrobe(x) & Muschel(y) & Gills(z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_770", "prediction": "all x y.((SymbioticMicrobe(x) & Mustell(y)) -> LivesInGills(x,y))", "score": 0}
{"id": "eqasc_validation_770", "prediction": "all x.((SymbioticMicrobe(x) & LivesInMushelsGills(x)) -> LivesInMushelsGills(x))", "score": 0}
{"id": "eqasc_validation_770", "prediction": "all x.(SymbioticMicrobe(x) -> LivesInMuschelGills(x))", "score": 0}
{"id": "eqasc_validation_770", "prediction": "all x y.((SymbioticMicrobe(x) & MuschelGills(y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_770", "prediction": "all x y.((Symbiotic(x) & Muschel(y)) -> LivesInGills(x,y))", "score": 0}
{"id": "eqasc_validation_770", "prediction": "all x y.((Muschel(x) & SymbioticMicrobe(y)) -> LivesInGills(y,x))", "score": 0}
{"id": "eqasc_validation_770", "prediction": "all x y.((Muschel(x) & SymbioticMicrobe(x)) -> LivesInGills(x,y))", "score": 0}
{"id": "eqasc_validation_770", "prediction": "all x y.((Mushels(x) & SymbioticMicrobe(y)) -> LivesInGills(y,x))", "score": 0}
{"id": "eqasc_validation_770", "prediction": "all x.((Muschel(x) & SymbioticMicrobe(x)) -> LivesInGills(x))", "score": 0}
{"id": "eqasc_validation_770", "prediction": "all x.(SymbioticMicrobe(x) -> LivesInMusselsGills(x))", "score": 0}
{"id": "eqasc_validation_770", "prediction": "all x.(SymbioticMicrobe(x) -> LivesInMistelsGills(x))", "score": 0}
{"id": "eqasc_validation_771", "prediction": "all x y.((Mutualism(x) & Microbe(y) & Muschel(y)) -> BenefitsBothSpecies(x,y))", "score": 0}
{"id": "eqasc_validation_771", "prediction": "all x y.((Mutualism(x) & Microbe(y) & Muschel(y)) -> (Benefits(x,y) & Benefits(x,y)))", "score": 0}
{"id": "eqasc_validation_771", "prediction": "all x y z.((Mutualism(x) & Microbe(y) & Muschel(z)) -> (Benefit(x,y,z) & Benefit(y,z)))", "score": 0}
{"id": "eqasc_validation_771", "prediction": "all x y.((Mutualism(x) & Microbe(y) & Muschel(z)) -> BenefitsBothSpecies(x,y,z))", "score": 0}
{"id": "eqasc_validation_771", "prediction": "all x y z.((Mutualism(x) & Microbe(y) & Muschel(z)) -> (Benefits(x,y,z) & Benefits(y,z)))", "score": 0}
{"id": "eqasc_validation_771", "prediction": "all x y.((Mutualism(x) & Microbe(y) & Muschel(y)) -> (Benefit(x,y) & Benefit(x,y)))", "score": 0}
{"id": "eqasc_validation_771", "prediction": "all x y z.((Mutualism(x) & Microbe(y) & Muschel(z)) -> (Benefits(x,y,z) & Benefits(x,z)))", "score": 0}
{"id": "eqasc_validation_771", "prediction": "all x y z.((Mutualism(x) & Microbe(y) & Muschel(z)) -> (Benefit(x,y,z) & Benefit(x,z)))", "score": 0}
{"id": "eqasc_validation_771", "prediction": "all x y z.((Mutualism(x) & Microbe(y) & Muschel(z)) -> BenefitsBothSpecies(x,y,z))", "score": 0}
{"id": "eqasc_validation_771", "prediction": "all x y.((Mutualism(x) & Microbe(y) & Muschel(y)) -> Benefits(x,y))", "score": 0}
{"id": "eqasc_validation_771", "prediction": "all x y z.((Mutualism(x) & Microbe(y) & Muschel(z)) -> Benefits(x,y,z))", "score": 0}
{"id": "eqasc_validation_772", "prediction": "all x y.((Coral(x) & Alga(y)) -> BenefitsFromMutualism(x,y))", "score": 0}
{"id": "eqasc_validation_772", "prediction": "all x.((Coral(x) | Alga(x)) -> BenefitsFromMutualism(x))", "score": 0}
{"id": "eqasc_validation_772", "prediction": "(BenefitsFromMutualism(Coral) & BenefitsFromMutualism(Alga))", "score": 0}
{"id": "eqasc_validation_772", "prediction": "(BenefitFromMutualism(Coral) & BenefitFromMutualism(Alga))", "score": 0}
{"id": "eqasc_validation_772", "prediction": "all x y.((Coral(x) & Alga(y)) -> (BenefitsFromMutualism(x,y) | BenefitsFromMutualism(x,y)))", "score": 0}
{"id": "eqasc_validation_772", "prediction": "all x y z.((Coral(x) & Alga(y) & Mutualism(z)) -> BenefitsFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_772", "prediction": "all x y.((Coral(x) & Alga(y)) -> (BenefitsFromMutualism(x,y) & BenefitsFromMutualism(x,y)))", "score": 0}
{"id": "eqasc_validation_772", "prediction": "all x y z.((Coral(x) & Alga(y) & Mutualism(z)) -> (BenefitsFrom(x,y,z) & BenefitsFrom(y,z)))", "score": 0}
{"id": "eqasc_validation_772", "prediction": "all x y.((Coral(x) & Alga(y)) -> (BenefitsFromMutualism(x,y) & BenefitsFromMutualism(y)))", "score": 0}
{"id": "eqasc_validation_772", "prediction": "(BenefitsFromMutualism(Coral) & BenefitsFromMutualism(alga))", "score": 0}
{"id": "eqasc_validation_772", "prediction": "all x y.((Coral(x) & Alga(y)) -> (BenefitsFromMutualism(x) & BenefitsFromMutualism(y)))", "score": 0}
{"id": "eqasc_validation_772", "prediction": "all x y z.((Coral(x) & Alga(y) & Mutualism(z)) -> (BenefitsFrom(x,y) & BenefitsFrom(y,z)))", "score": 0}
{"id": "eqasc_validation_772", "prediction": "all x y.((Coral(x) & Alga(y)) -> (BenefitsFromMutualism(x,y) & BenefitsFromMutualism(y,x)))", "score": 0}
{"id": "eqasc_validation_772", "prediction": "all x y.((Coral(x) & Alga(y)) -> (BenefitFromMutualism(x,y) | BenefitFromMutualism(x,y)))", "score": 0}
{"id": "eqasc_validation_772", "prediction": "all x y.((Coral(x) & Alga(y)) -> (BenefitsFromMutualism(x,y) | BenefitsFromMutualism(y)))", "score": 0}
{"id": "eqasc_validation_772", "prediction": "all x.((Coral(x) & Alga(x)) -> BenefitsFromMutualism(x))", "score": 0}
{"id": "eqasc_validation_773", "prediction": "all x.(SymbioticRelationship(x) -> (Common(x) & AddsToComplexityOfSpeciesInteractions(x)))", "score": 4}
{"id": "eqasc_validation_773", "prediction": "all x.(SymbioticRelationship(x) -> (Common(x) & AddToComplexityOfSpeciesInteractions(x)))", "score": 0}
{"id": "eqasc_validation_773", "prediction": "all x.(SymbioticRelationship(x) -> (Common(x) & AddsComplexityOfSpeciesInteractions(x)))", "score": 4}
{"id": "eqasc_validation_773", "prediction": "all x.(SymbioticRelationship(x) -> (Common(x) & AddsComplexity(x)))", "score": 0}
{"id": "eqasc_validation_773", "prediction": "all x y.((SymbioticRelationship(x) & SpeciesInteraction(y)) -> (Common(x,y) & AddsComplexity(x,y)))", "score": 4}
{"id": "eqasc_validation_773", "prediction": "all x.(SymbioticRelationship(x) -> (Common(x) & AddsToComplexityOfSpeciesInteraction(x)))", "score": 4}
{"id": "eqasc_validation_773", "prediction": "all x.((SymbioticRelationship(x) & Common(x)) -> AddsToComplexityOfSpeciesInteractions(x))", "score": 0}
{"id": "eqasc_validation_773", "prediction": "all x y.((SymbioticRelationship(x) & SpeciesInteraction(y)) -> (Common(x,y) & AddToComplexity(x,y)))", "score": 0}
{"id": "eqasc_validation_773", "prediction": "all x.(SymbioticRelationship(x) -> (Common(x) & AddsToComplexity(x)))", "score": 0}
{"id": "eqasc_validation_773", "prediction": "all x.(SymbioticRelationship(x) -> (Common(x) & AddToComplexityOfSpeciesInteraction(x)))", "score": 0}
{"id": "eqasc_validation_773", "prediction": "all x.((SymbioticRelationship(x) & Common(x)) -> AddsComplexityOfSpeciesInteractions(x))", "score": 0}
{"id": "eqasc_validation_773", "prediction": "all x y.((SymbioticRelationship(x) & SpeciesInteraction(y)) -> (Common(x) & AddsComplexity(x,y)))", "score": 4}
{"id": "eqasc_validation_773", "prediction": "all x.(SymbioticRelationship(x) -> (Common(x) & AddsComplexityOfSpeciesInteraction(x)))", "score": 0}
{"id": "eqasc_validation_773", "prediction": "all x y.((SymbioticRelationship(x) & SpeciesInteraction(y)) -> (Common(x) & AddToComplexity(x,y)))", "score": 0}
{"id": "eqasc_validation_773", "prediction": "all x y.((SymbioticRelationship(x) & SpeciesInteraction(y)) -> (Common(x,y) & AddsToComplexity(x,y)))", "score": 4}
{"id": "eqasc_validation_773", "prediction": "all x.(SymbioticRelationship(x) -> (Common(x) & AddToComplexity(x)))", "score": 0}
{"id": "eqasc_validation_774", "prediction": "all x.(Mutualism(x) -> AddsToComplexityOfSpeciesInteractions(x))", "score": 4}
{"id": "eqasc_validation_774", "prediction": "all x.(Mutualism(x) -> AddsComplexityOfSpeciesInteractions(x))", "score": 4}
{"id": "eqasc_validation_774", "prediction": "all x y.((Mutualism(x) & SpeciesInteraction(y)) -> AddsComplexity(x,y))", "score": 8}
{"id": "eqasc_validation_774", "prediction": "all x y.((Mutualism(x) & SpeciesInteraction(y)) -> AddsToComplexity(x,y))", "score": 4}
{"id": "eqasc_validation_774", "prediction": "all x y z.((Mutualism(x) & SpeciesInteraction(y) & Complexity(z)) -> AddsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_774", "prediction": "all x y z.((Mutualism(x) & SpeciesInteraction(y) & SpeciesInteraction(z)) -> AddsComplexity(x,y,z))", "score": 0}
{"id": "eqasc_validation_774", "prediction": "all x y z.((Mutualism(x) & SpeciesInteraction(y) & SpeciesInteraction(z)) -> AddsToComplexity(x,y,z))", "score": 0}
{"id": "eqasc_validation_774", "prediction": "all x y.((Mutualism(x) & SpeciesInteraction(y)) -> AddsComplexityTo(x,y))", "score": 0}
{"id": "eqasc_validation_774", "prediction": "all x.((Mutualism(x) & ComplexSpeciesInteractions(x)) -> AddsTo(x,ComplexSpeciesInteractions))", "score": 0}
{"id": "eqasc_validation_774", "prediction": "all x y z.((Mutualism(x) & SpeciesInteraction(y) & Complexity(z)) -> Adds(x,y,z))", "score": 0}
{"id": "eqasc_validation_774", "prediction": "all x.(Mutualism(x) -> AddsToComplexityOfSpeciesInteraction(x))", "score": 4}
{"id": "eqasc_validation_775", "prediction": "all x.(Male(x) -> (HasIndividualTerritories(x) & MutuallyBeneficialSymbioticRelationship(x) & OxpeckerBird(x)))", "score": 0}
{"id": "eqasc_validation_775", "prediction": "all x.(Male(x) -> HasIndividualTerritories(x)) HasMutuallyBeneficialSymbioticRelationshipWithOxpeckerBird(x))", "score": -1}
{"id": "eqasc_validation_775", "prediction": "all x y.((Male(x) & OxpeckerBird(y)) -> HasIndividualTerritories(x,y))", "score": 0}
{"id": "eqasc_validation_775", "prediction": "all x.(Male(x) -> (HasIndividualTerritories(x) & MutuallyBeneficialSymbioticRelationshipWithOxpeckerBird(x)))", "score": 0}
{"id": "eqasc_validation_775", "prediction": "all x.(Male(x) -> (HasIndividualTerritories(x) & HasMutuallyBeneficialSymbioticRelationship(x) & OxpeckerBird(x)))", "score": 0}
{"id": "eqasc_validation_775", "prediction": "all x.(Male(x) -> HasIndividualTerritories(x)) HasMutuallyBeneficialSymbioticRelationship(x))", "score": -1}
{"id": "eqasc_validation_775", "prediction": "all x y.((Male(x) & OxpeckerBird(y)) -> (HasIndividualTerritories(x,y) & HasMutuallyBeneficialSymbioticRelationship(x,y)))", "score": 0}
{"id": "eqasc_validation_775", "prediction": "all x.(Male(x) -> (HasIndividualTerritories(x) & HasMutuallyBeneficialSymbioticRelationshipWithOxpeckerBird(x)))", "score": 0}
{"id": "eqasc_validation_775", "prediction": "all x.(Male(x) -> (HasIndividualTerritories(x) & MutuallyBeneficialSymbioticRelationship(x,OxpeckerBird)))", "score": 0}
{"id": "eqasc_validation_775", "prediction": "all x y.((Male(x) & OxpeckerBird(y)) -> IndividualTerritories(x,y))", "score": 0}
{"id": "eqasc_validation_775", "prediction": "all x.(Male(x) -> HasIndividualTerritories(x)) HasMutuallyBeneficialSymbioticRelationship(x,OxpeckerBird))", "score": -1}
{"id": "eqasc_validation_775", "prediction": "all x.(Male(x) -> (HasIndividualTerritories(x) & HasMutuallyBeneficialSymbioticRelationship(x,OxpeckerBird)))", "score": 0}
{"id": "eqasc_validation_775", "prediction": "all x.(Male(x) -> (IndividualTerritories(x) & MutuallyBeneficialSymbioticRelationship(x) & OxpeckerBird(x)))", "score": 0}
{"id": "eqasc_validation_775", "prediction": "all x.(Mammal(x) -> HasIndividualTerritories(x)) HasMutuallyBeneficialSymbioticRelationshipWithOxpeckerBird(x))", "score": -1}
{"id": "eqasc_validation_775", "prediction": "all x.(Mammal(x) -> (HasIndividualTerritories(x) & MutuallyBeneficialSymbioticRelationship(x) & OxpeckerBird(x)))", "score": 0}
{"id": "eqasc_validation_776", "prediction": "all x y.((OxpeckerBird(x) & OtherSpecies(y)) -> HelpsBenefit(x,y))", "score": 0}
{"id": "eqasc_validation_776", "prediction": "all x y.((OxpeckerBird(x) & Bird(y)) -> HelpsBenefitSpecies(x,y))", "score": 0}
{"id": "eqasc_validation_776", "prediction": "all x y.((OxpeckerBird(x) & Species(y)) -> HelpsBenefit(x,y))", "score": 0}
{"id": "eqasc_validation_776", "prediction": "all x y.((OxpeckerBird(x) & Bird(y)) -> HelpsBenefitOtherSpecies(x,y))", "score": 0}
{"id": "eqasc_validation_776", "prediction": "all x y z.((OxpeckerBird(x) & Bird(y) & Species(z)) -> HelpsBenefit(x,y,z))", "score": 0}
{"id": "eqasc_validation_776", "prediction": "all x y.((OxpeckerBird(x) & Bird(y)) -> HelpsBenefit(x,y))", "score": 0}
{"id": "eqasc_validation_776", "prediction": "all x.(OxpeckerBird(x) -> HelpsOtherSpeciesBenefit(x))", "score": 0}
{"id": "eqasc_validation_776", "prediction": "all x y.((OxpeckerBird(x) & Bird(y)) -> HelpsOtherSpeciesBenefit(x,y))", "score": 0}
{"id": "eqasc_validation_776", "prediction": "all x y.((OxpeckerBird(x) & OtherSpeciesBenefit(y)) -> HelpsBenefit(x,y))", "score": 0}
{"id": "eqasc_validation_776", "prediction": "all x y z.((OxpeckerBird(x) & OtherSpecies(y) & Bird(z)) -> HelpsBenefit(x,y,z))", "score": 0}
{"id": "eqasc_validation_776", "prediction": "all x.(OxpeckerBird(x) -> HelpsBenefitOtherSpecies(x))", "score": 0}
{"id": "eqasc_validation_776", "prediction": "all x y.((OxpeckerBird(x) & OtherSpecies(y)) -> HelpsBenefitSpecies(x,y))", "score": 0}
{"id": "eqasc_validation_776", "prediction": "all x y.((OxpeckerBird(x) & OtherSpecies(y)) -> HelpsBenefitOtherSpecies(x,y))", "score": 0}
{"id": "eqasc_validation_776", "prediction": "all x y.((OxpeckerBird(x) & BirdSpecies(y)) -> HelpsBenefit(x,y))", "score": 0}
{"id": "eqasc_validation_776", "prediction": "all x y.((Oxpecker(x) & Bird(y)) -> HelpsBenefitSpecies(x,y))", "score": 0}
{"id": "eqasc_validation_776", "prediction": "all x y.((Oxpecker(x) & Bird(y)) -> HelpsBenefitOtherSpecies(x,y))", "score": 0}
{"id": "eqasc_validation_777", "prediction": "exists x.(SymbioticRelationship(x) & FoundWith(x,Cucumbers) & FoundWith(x,Corn))", "score": 0}
{"id": "eqasc_validation_777", "prediction": "all x y z.((SymbioticRelationship(x) & Cucumber(y) & Corn(z)) -> FoundWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_777", "prediction": "exists x.(SymbioticRelationship(x) & FoundWithCucumbers(x) & FoundWithCorn(x))", "score": 0}
{"id": "eqasc_validation_777", "prediction": "(exists x.(SymbioticRelationship(x) & FoundWith(x,Cucumbers) & FoundWith(x,Corn)))", "score": 0}
{"id": "eqasc_validation_777", "prediction": "all x y.((Cucumber(x) & Corn(y)) -> SymbioticRelationship(x,y))", "score": 0}
{"id": "eqasc_validation_777", "prediction": "all x y.((SymbioticRelationship(x) & Cucumber(y) & Corn(y)) -> FoundWith(x,y))", "score": 0}
{"id": "eqasc_validation_777", "prediction": "all x.((Cucumber(x) & Corn(x)) -> SymbioticRelationship(x))", "score": 0}
{"id": "eqasc_validation_777", "prediction": "all x.(SymbioticRelationship(x) -> (Cucumbers(x) & Corn(x)))", "score": 0}
{"id": "eqasc_validation_777", "prediction": "(exists x.(SymbioticRelationship(x) & FoundWith(x,Cucumber) & FoundWith(x,Corn)))", "score": 0}
{"id": "eqasc_validation_777", "prediction": "(exists x.(SymbioticRelationship(x) & FoundWith(x,Cucumbers)) & FoundWith(x,Corn)))", "score": -1}
{"id": "eqasc_validation_777", "prediction": "exists x.(SymbioticRelationship(x) & FoundWith(x,Cucumber) & FoundWith(x,Corn))", "score": 0}
{"id": "eqasc_validation_777", "prediction": "all x y.((SymbioticRelationship(x) & Cucumber(y) & Corn(y)) -> SymbioticRelationship(x,y))", "score": 0}
{"id": "eqasc_validation_777", "prediction": "all x y.((SymbioticRelationship(x) & Cucumber(y) & Corn(y)) -> Symbiotic(x,y))", "score": 0}
{"id": "eqasc_validation_777", "prediction": "all x y z.((SymbioticRelationship(x) & Cucumber(y) & Corn(z)) -> Symbiotic(x,y,z))", "score": 0}
{"id": "eqasc_validation_777", "prediction": "(exists x.(SymbioticRelationship(x) & FoundWith(x,Cucumbers)) & FoundWith(x,Corn))", "score": 0}
{"id": "eqasc_validation_778", "prediction": "all x y.((Cucumber(x) & Corn(y)) -> (HasMutualism(x,y) & Benefits(y,x)))", "score": 0}
{"id": "eqasc_validation_778", "prediction": "all x y.((Cucumber(x) & Corn(y)) -> (HasMutualism(x,y) & BenefitsBothSpecies(x,y)))", "score": 0}
{"id": "eqasc_validation_778", "prediction": "all x y.((Cucumber(x) & Corn(y)) -> (HasMutualism(x,y) & HasMutualism(x,y)))", "score": 0}
{"id": "eqasc_validation_778", "prediction": "all x y.((Cucumber(x) & Corn(y)) -> (HasMutualism(x,y) & Benefits(x,y)))", "score": 0}
{"id": "eqasc_validation_778", "prediction": "all x y.((Cucumber(x) & Corn(y)) -> (HasMutualism(x,y) & BenefitsBothSpecies(y,x)))", "score": 0}
{"id": "eqasc_validation_778", "prediction": "all x.((Cucumber(x) & Corn(x)) -> (HasMutualism(x) & BenefitsBothSpecies(x)))", "score": 0}
{"id": "eqasc_validation_778", "prediction": "all x y.((Cucumber(x) & Corn(y)) -> (HasMutualism(x,y) & BenefitsBothSpecies(x)))", "score": 0}
{"id": "eqasc_validation_778", "prediction": "all x y.((Cucumber(x) & Corn(y)) -> (PossessesMutualism(x,y) & Benefits(y,x)))", "score": 0}
{"id": "eqasc_validation_778", "prediction": "all x y.((Cucumber(x) & Corn(y)) -> (HasMutualism(x,y) & Benefits(y)))", "score": 0}
{"id": "eqasc_validation_778", "prediction": "all x y.((Cucumber(x) & Corn(y)) -> (HasMutualism(x,y) & BenefitsBothSpecies(y)))", "score": 0}
{"id": "eqasc_validation_778", "prediction": "all x y.((Cucumber(x) & Corn(y)) -> (Mutualism(x,y) & Benefits(y,x)))", "score": 0}
{"id": "eqasc_validation_778", "prediction": "all x y.((Cucumber(x) & Corn(y)) -> (HasMutualism(x,y) & HasMutualism(y,x)))", "score": 0}
{"id": "eqasc_validation_778", "prediction": "all x y.((Cucumber(x) & Corn(y)) -> (HasMutualism(x,y) & Benefits(y,z)))", "score": 0}
{"id": "eqasc_validation_778", "prediction": "all x y.((Cucumber(x) & Corn(y)) -> HasMutualism(x,y))", "score": 0}
{"id": "eqasc_validation_778", "prediction": "all x y.((Cucumber(x) & Corn(y)) -> (PossessesMutualism(x,y) & BenefitsBothSpecies(x,y)))", "score": 0}
{"id": "eqasc_validation_779", "prediction": "all x.(Adolescence(x) -> (LastStageOfLife(x) & BeforeAdulthood(x)))", "score": 1}
{"id": "eqasc_validation_779", "prediction": "all x y.((Adolescence(x) & Adulthood(y)) -> LastStageOfLife(x,y))", "score": 0}
{"id": "eqasc_validation_779", "prediction": "all x.(Adolescence(x) -> LastStageOfLifeBeforeAdulthood(x))", "score": 0}
{"id": "eqasc_validation_779", "prediction": "all x.(Adolescence(x) -> LastStageOfLife(x))", "score": 0}
{"id": "eqasc_validation_779", "prediction": "all x.(Adolescence(x) -> TheLastStageOfLifeBeforeAdulthood(x))", "score": 0}
{"id": "eqasc_validation_779", "prediction": "all x.((Adolescence(x) & Adulthood(x)) -> LastStageOfLife(x))", "score": 0}
{"id": "eqasc_validation_779", "prediction": "all x.(Adolescence(x) -> EndOfLife(x))", "score": 0}
{"id": "eqasc_validation_779", "prediction": "all x.(Adolescence(x) -> (LateStageOfLife(x) & BeforeAdulthood(x)))", "score": 1}
{"id": "eqasc_validation_779", "prediction": "all x.(Adolescence(x) -> (LastStageOfLifeBeforeAdulthood(x)))", "score": 0}
{"id": "eqasc_validation_779", "prediction": "all x.(Adolescence(x) -> (LeastStageOfLife(x) & BeforeAdulthood(x)))", "score": 1}
{"id": "eqasc_validation_779", "prediction": "all x.(Adolescence(x) -> LastStageOfLifeBetweenAdulthood(x))", "score": 0}
{"id": "eqasc_validation_779", "prediction": "all x.(Adolescence(x) -> LastStageOfLifeAfterAdulthood(x))", "score": 0}
{"id": "eqasc_validation_779", "prediction": "all x.(Adolescence(x) -> TheLastStageOfLife(x))", "score": 0}
{"id": "eqasc_validation_779", "prediction": "all x.(Adolescence(x) -> EndOfLifeBeforeAdulthood(x))", "score": 0}
{"id": "eqasc_validation_779", "prediction": "all x.(Adolescence(x) -> TheLastStageOfLifeBetweenAdulthood(x))", "score": 0}
{"id": "eqasc_validation_780", "prediction": "all x.(Adolescence(x) -> RapidChangesOccur(x))", "score": 0}
{"id": "eqasc_validation_780", "prediction": "all x y.((Adolescence(x) & Adolescence(y)) -> RapidChange(x,y))", "score": 0}
{"id": "eqasc_validation_780", "prediction": "all x y.((Adolescence(x) & Adolescence(y)) -> RapidChangesOccur(x,y))", "score": 0}
{"id": "eqasc_validation_780", "prediction": "all x.(Adolescence(x) -> RapidChange(x))", "score": 0}
{"id": "eqasc_validation_780", "prediction": "all x.((Adolescence(x) & Adolescence(x)) -> RapidChangesOccur(x))", "score": 0}
{"id": "eqasc_validation_780", "prediction": "all x.((Adolescence(x) & RapidChange(x)) -> Adolescence(x))", "score": 0}
{"id": "eqasc_validation_780", "prediction": "all x.((Adolescence(x) & Adolescence(y)) -> RapidChangesOccur(x,y))", "score": 0}
{"id": "eqasc_validation_780", "prediction": "all x.((Adolescence(x) & Adolescence(x)) -> RapidChange(x))", "score": 0}
{"id": "eqasc_validation_780", "prediction": "all x.(Adolescence(x) -> (RapidChanges(x) & Adolescence(x)))", "score": 0}
{"id": "eqasc_validation_780", "prediction": "all x.((Adolescence(x) & Adolescence(y)) -> RapidChange(x,y))", "score": 0}
{"id": "eqasc_validation_780", "prediction": "all x y z.((Adolescence(x) & Adolescence(y) & RapidChange(z)) -> Occurs(x,y,z))", "score": 0}
{"id": "eqasc_validation_780", "prediction": "all x.(Adolescence(x) -> RapidChanges(x))", "score": 0}
{"id": "eqasc_validation_780", "prediction": "all x y.((Adolescence(x) & Adolescence(y)) -> RapidChanges(x,y))", "score": 0}
{"id": "eqasc_validation_780", "prediction": "all x.((Adolescence(x) & RapidChanges(x)) -> Adolescence(x))", "score": 0}
{"id": "eqasc_validation_780", "prediction": "all x y z.((Adolescence(x) & Adolescence(y) & Adolescence(z)) -> RapidChange(x,y,z))", "score": 0}
{"id": "eqasc_validation_780", "prediction": "all x y.((Adolescence(x) & Adolescence(y)) -> RapidChange(x))", "score": 0}
{"id": "eqasc_validation_781", "prediction": "all x y.((RapidChange(x) & StageOfLife(y) & Adulthood(y)) -> OccursInLastStageOfLife(x,y))", "score": 0}
{"id": "eqasc_validation_781", "prediction": "all x y z.((RapidChange(x) & StageOfLife(y) & Adulthood(z)) -> OccursInLastStageOfLife(x,y,z))", "score": 0}
{"id": "eqasc_validation_781", "prediction": "all x y z.((RapidChange(x) & StageOfLife(y) & Adulthood(z)) -> OccursInStageOfLife(x,y,z))", "score": 0}
{"id": "eqasc_validation_781", "prediction": "all x y.((RapidChange(x) & StageOfLife(y) & BeforeAdulthood(y)) -> OccursInLastStageOfLife(x,y))", "score": 0}
{"id": "eqasc_validation_781", "prediction": "all x y.((RapidChange(x) & StageOfLife(y) & Adulthood(y)) -> OccursInStageOfLife(x,y))", "score": 0}
{"id": "eqasc_validation_781", "prediction": "all x y z.((RapidChange(x) & StageOfLife(y) & Adulthood(z)) -> OccursInLastStageOfLife(y,z))", "score": 0}
{"id": "eqasc_validation_781", "prediction": "all x y.((RapidChange(x) & StageOfLife(y) & Adulthood(z)) -> OccursInLastStageOfLife(x,y,z))", "score": 0}
{"id": "eqasc_validation_781", "prediction": "all x y z.((RapidChange(x) & StageOfLife(y) & Adulthood(z)) -> OccursInLastStageOfLifeBeforeAdulthood(x,y,z))", "score": 0}
{"id": "eqasc_validation_781", "prediction": "all x y.((RapidChange(x) & StageOfLife(y) & Adulthood(y)) -> OccursInLastStage(x,y))", "score": 0}
{"id": "eqasc_validation_781", "prediction": "all x y.((RapidChange(x) & StageOfLife(y) & Adulthood(y)) -> OccursInLastStageOfLifeBeforeAdulthood(x,y))", "score": 0}
{"id": "eqasc_validation_781", "prediction": "all x y z.((RapidChange(x) & StageOfLife(y) & Adulthood(z)) -> OccursIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_781", "prediction": "all x y.((RapidChange(x) & LifeStage(y) & Adulthood(y)) -> OccursInLastStageOfLife(x,y))", "score": 0}
{"id": "eqasc_validation_781", "prediction": "all x y z.((RapidChanges(x) & StageOfLife(y) & Adulthood(z)) -> OccursInLastStageOfLife(x,y,z))", "score": 0}
{"id": "eqasc_validation_781", "prediction": "all x y z.((RapidChange(x) & StageOfLife(y) & Adulthood(z)) -> OccursInLastStage(x,y,z))", "score": 0}
{"id": "eqasc_validation_781", "prediction": "all x y.((RapidChange(x) & LifeStage(y) & Adulthood(y)) -> OccursInLastStage(x,y))", "score": 0}
{"id": "eqasc_validation_781", "prediction": "all x y.((RapidChange(x) & StageOfLife(y) & BeforeAdulthood(y)) -> OccursInStageOfLife(x,y))", "score": 0}
{"id": "eqasc_validation_782", "prediction": "all x.((EndStageOfLife(x) & Adulthood(x)) -> Puberty(x))", "score": 0}
{"id": "eqasc_validation_782", "prediction": "all x.((LastStageOfLife(x) & BeforeAdulthood(x)) -> Puberty(x))", "score": 0}
{"id": "eqasc_validation_782", "prediction": "all x y.((StageOfLife(x) & Adulthood(y)) -> StartsWithPuberty(x,y))", "score": 0}
{"id": "eqasc_validation_782", "prediction": "all x.((LeastStageOfLife(x) & BeforeAdulthood(x)) -> Puberty(x))", "score": 0}
{"id": "eqasc_validation_782", "prediction": "all x.((StageOfLife(x) & BeforeAdulthood(x)) -> Puberty(x))", "score": 0}
{"id": "eqasc_validation_782", "prediction": "all x.((StageOfLife(x) & Adulthood(x)) -> Puberty(x))", "score": 0}
{"id": "eqasc_validation_782", "prediction": "all x.((StageOfLife(x) & Adulthood(x)) -> StartsWithPuberty(x))", "score": 0}
{"id": "eqasc_validation_782", "prediction": "all x.((StageOfLife(x) & AdulthoodEndsWithPuberty(x)) -> LastStageOfLife(x))", "score": 0}
{"id": "eqasc_validation_782", "prediction": "all x.((LastStageOfLife(x) & Adulthood(x)) -> Puberty(x))", "score": 0}
{"id": "eqasc_validation_782", "prediction": "all x y.((EndStageOfLife(x) & Adulthood(y)) -> StartsWithPuberty(x,y))", "score": 0}
{"id": "eqasc_validation_782", "prediction": "all x y.((StageOfLife(x) & Adulthood(y)) -> StartsWithPuperhood(x,y))", "score": 0}
{"id": "eqasc_validation_782", "prediction": "all x.((StageOfLife(x) & Adulthood(x)) -> StartsWithPuperhood(x))", "score": 0}
{"id": "eqasc_validation_782", "prediction": "all x.((Adult(x) & Puberty(x)) -> LastStageOfLife(x))", "score": 0}
{"id": "eqasc_validation_782", "prediction": "all x.((StageOfLife(x) & AdulthoodEndsWithPuberty(x)) -> EndsWithPuberty(x))", "score": 0}
{"id": "eqasc_validation_782", "prediction": "all x y.((StageOfLife(x) & Adulthood(y)) -> StartsWithPupilhood(x,y))", "score": 0}
{"id": "eqasc_validation_782", "prediction": "all x.((LeastStageOfLife(x) & Adulthood(x)) -> Puberty(x))", "score": 0}
{"id": "eqasc_validation_783", "prediction": "all x.(Adolescent(x) -> ComplexLife(x))", "score": 0}
{"id": "eqasc_validation_783", "prediction": "all x y.((Adolescent(x) & Adolescent(y)) -> ComplexLife(x,y))", "score": 0}
{"id": "eqasc_validation_783", "prediction": "all x.(Adolescent(x) -> VeryComplexLife(x))", "score": 0}
{"id": "eqasc_validation_783", "prediction": "all x y.((Adolescent(x) & Adolescent(y)) -> VeryComplexLife(x,y))", "score": 0}
{"id": "eqasc_validation_783", "prediction": "all x.((Adolescent(x) & ComplexLife(x)) -> Adolescent(x))", "score": 0}
{"id": "eqasc_validation_783", "prediction": "all x y.((Adolescent(x) & Adolescent(y)) -> VeryComplex(x,y))", "score": 0}
{"id": "eqasc_validation_783", "prediction": "all x y.((Adolescent(x) & Adolescent(y)) -> LifeComplex(x,y))", "score": 0}
{"id": "eqasc_validation_783", "prediction": "all x y.((Adolescent(x) & Adolescent(y)) -> ComplexLife(x))", "score": 0}
{"id": "eqasc_validation_783", "prediction": "all x.(Adolescent(x) -> (LifeComplex(x) & Adolescent(x)))", "score": 0}
{"id": "eqasc_validation_783", "prediction": "all x y z.((Adolescent(x) & Adolescent(y) & Life(z)) -> VeryComplex(x,y,z))", "score": 0}
{"id": "eqasc_validation_783", "prediction": "all x y z.((Adolescent(x) & Life(y) & Adolescent(z)) -> VeryComplex(x,y,z))", "score": 0}
{"id": "eqasc_validation_783", "prediction": "all x y.((Adolescent(x) & Adolescent(y)) -> Complex(x,y))", "score": 0}
{"id": "eqasc_validation_783", "prediction": "all x y z.((Adolescent(x) & Adolescent(y) & Life(z)) -> Complex(x,y,z))", "score": 0}
{"id": "eqasc_validation_783", "prediction": "all x.(Adolescent(x) -> VeryComplex(x))", "score": 0}
{"id": "eqasc_validation_783", "prediction": "all x.(Adolescent(x) -> LifeComplex(x))", "score": 0}
{"id": "eqasc_validation_784", "prediction": "all x.((LastStageOfLife(x) & BeforeAdulthood(x)) -> VeryComplex(x))", "score": 0}
{"id": "eqasc_validation_784", "prediction": "all x.((StageOfLife(x) & BeforeAdulthood(x)) -> VeryComplex(x))", "score": 0}
{"id": "eqasc_validation_784", "prediction": "all x.((LifeStage(x) & BeforeAdulthood(x)) -> VeryComplex(x))", "score": 0}
{"id": "eqasc_validation_784", "prediction": "all x.((LeastStageOfLife(x) & BeforeAdulthood(x)) -> VeryComplex(x))", "score": 0}
{"id": "eqasc_validation_784", "prediction": "all x.((StageOfLife(x) & Adulthood(x)) -> VeryComplex(x))", "score": 0}
{"id": "eqasc_validation_784", "prediction": "all x y.((StageOfLife(x) & Adulthood(y)) -> VeryComplex(x,y))", "score": 0}
{"id": "eqasc_validation_784", "prediction": "all x.((LifeStage(x) & Adulthood(x)) -> VeryComplex(x))", "score": 0}
{"id": "eqasc_validation_784", "prediction": "all x y.((StageOfLife(x) & Adulthood(y)) -> VeryComplex(x))", "score": 0}
{"id": "eqasc_validation_784", "prediction": "all x.((LastStageOfLife(x) & Adulthood(x)) -> VeryComplex(x))", "score": 0}
{"id": "eqasc_validation_784", "prediction": "all x.((LextStageOfLife(x) & BeforeAdulthood(x)) -> VeryComplex(x))", "score": 0}
{"id": "eqasc_validation_784", "prediction": "all x y.((StageOfLife(x) & Adulthood(y)) -> Complex(x))", "score": 0}
{"id": "eqasc_validation_784", "prediction": "all x y.((LifeStage(x) & Adulthood(y)) -> VeryComplex(x,y))", "score": 0}
{"id": "eqasc_validation_784", "prediction": "all x y.((StageOfLife(x) & Adulthood(y)) -> Complex(x,y))", "score": 0}
{"id": "eqasc_validation_784", "prediction": "all x.((StageOfLife(x) & BeforeAdulthood(x)) -> Complex(x))", "score": 0}
{"id": "eqasc_validation_784", "prediction": "all x.((LifeStage(x) & BeforeAdulthood(x)) -> Complex(x))", "score": 0}
{"id": "eqasc_validation_784", "prediction": "all x y.((EndStageOfLife(x) & Adulthood(y)) -> VeryComplex(x,y))", "score": 0}
{"id": "eqasc_validation_785", "prediction": "all x.((Puberty(x) & AdultLifeStage(x)) -> Starts(x))", "score": 0}
{"id": "eqasc_validation_785", "prediction": "all x.((Puberty(x) & AdultLifeStage(x)) -> Begins(x))", "score": 0}
{"id": "eqasc_validation_785", "prediction": "all x.((Parent(x) & Puberty(x)) -> AdultLifeStage(x))", "score": 0}
{"id": "eqasc_validation_785", "prediction": "all x.((Pupilhood(x) & AdultLifeStage(x)) -> Starts(x))", "score": 0}
{"id": "eqasc_validation_785", "prediction": "all x.((Pupilhood(x) & AdultLifeStage(x)) -> Begins(x))", "score": 0}
{"id": "eqasc_validation_785", "prediction": "all x.((Puberty(x) & AdultLife(x)) -> Starts(x))", "score": 0}
{"id": "eqasc_validation_785", "prediction": "all x.((Puperhood(x) & AdultLifeStage(x)) -> Starts(x))", "score": 0}
{"id": "eqasc_validation_785", "prediction": "all x.((AdultLifeStage(x) & Puberty(x)) -> Begins(x))", "score": 0}
{"id": "eqasc_validation_785", "prediction": "all x.((AdultLifeStage(x) & Puberty(x)) -> Starts(x))", "score": 0}
{"id": "eqasc_validation_785", "prediction": "all x.((Pupil(x) & AdultStage(x)) -> Starts(x))", "score": 0}
{"id": "eqasc_validation_785", "prediction": "all x.((Pupil(x) & AdultLifeStage(x)) -> Starts(x))", "score": 0}
{"id": "eqasc_validation_785", "prediction": "all x.((AdultStage(x) & Puberty(x)) -> Begins(x))", "score": 0}
{"id": "eqasc_validation_785", "prediction": "all x.((Puberty(x) & AdultLife(x)) -> Begins(x))", "score": 0}
{"id": "eqasc_validation_785", "prediction": "all x.((AdultStage(x) & Puberty(x)) -> Starts(x))", "score": 0}
{"id": "eqasc_validation_785", "prediction": "all x y.((Pupil(x) & Adult(y)) -> StartsStage(x,y))", "score": 0}
{"id": "eqasc_validation_785", "prediction": "all x.((Pupil(x) & AdultLifeStage(x)) -> Begins(x))", "score": 0}
{"id": "eqasc_validation_786", "prediction": "all x.(Puperty(x) -> (EndsLastStageOfLife(x) & BeforeAdulthood(x)))", "score": 0}
{"id": "eqasc_validation_786", "prediction": "all x.(Puperty(x) -> EndsStageOfLifeBeforeAdulthood(x))", "score": 0}
{"id": "eqasc_validation_786", "prediction": "all x.(Puperty(x) -> EndsLastStageOfLifeBeforeAdulthood(x))", "score": 0}
{"id": "eqasc_validation_786", "prediction": "all x y.((Puperty(x) & Adulthood(y)) -> EndsStageOfLife(x,y))", "score": 0}
{"id": "eqasc_validation_786", "prediction": "all x.(Puperty(x) -> EndsLastStageOfLife(x))", "score": 0}
{"id": "eqasc_validation_786", "prediction": "all x y.((Pupilhood(x) & Adulthood(y)) -> EndsStageOfLife(x,y))", "score": 0}
{"id": "eqasc_validation_786", "prediction": "all x y.((Puperty(x) & Adulthood(y)) -> StartsLastStageOfLife(x,y))", "score": 0}
{"id": "eqasc_validation_786", "prediction": "all x.(Puperty(x) -> EndsStageOfLife(x))", "score": 0}
{"id": "eqasc_validation_786", "prediction": "all x y.((Pupilhood(x) & Adulthood(y)) -> StartsLastStageOfLife(x,y))", "score": 0}
{"id": "eqasc_validation_786", "prediction": "all x y.((Pupil(x) & Adulthood(y)) -> StartsLastStageOfLife(x,y))", "score": 0}
{"id": "eqasc_validation_786", "prediction": "all x y.((Pupil(x) & Adulthood(y)) -> EndsStageOfLife(x,y))", "score": 0}
{"id": "eqasc_validation_786", "prediction": "all x.(Puperty(x) -> LastStageOfLifeBeforeAdulthood(x))", "score": 0}
{"id": "eqasc_validation_786", "prediction": "all x.(Pupilhood(x) -> EndsStageOfLifeBeforeAdulthood(x))", "score": 0}
{"id": "eqasc_validation_786", "prediction": "all x y.((Puperty(x) & Adulthood(y)) -> EndsStage(x,y))", "score": 0}
{"id": "eqasc_validation_786", "prediction": "all x.(Puperty(x) -> EndsFourthStageOfLife(x))", "score": 0}
{"id": "eqasc_validation_786", "prediction": "all x.(Puperty(x) -> EndsLeastStageOfLife(x))", "score": 0}
{"id": "eqasc_validation_787", "prediction": "all x y.((StageOfLife(x) & Adulthood(y)) -> (EndsWithPuberty(x,y) & EndsWithPuberty(x,y)))", "score": 0}
{"id": "eqasc_validation_787", "prediction": "all x y z.((StageOfLife(x) & Adulthood(y) & Puberty(z)) -> LastStageOfLife(x,y,z))", "score": 0}
{"id": "eqasc_validation_787", "prediction": "all x y z.((StageOfLife(x) & Adulthood(y) & Puberty(z)) -> EndsWithPuberty(x,y,z))", "score": 0}
{"id": "eqasc_validation_787", "prediction": "all x y.((StageOfLife(x) & Adulthood(y)) -> StartsWithPuberty(x,y))", "score": 0}
{"id": "eqasc_validation_787", "prediction": "all x y z.((StageOfLife(x) & Adulthood(y) & Puberty(z)) -> LastStageOfLifeBefore(x,y,z))", "score": 0}
{"id": "eqasc_validation_787", "prediction": "all x y.((StageOfLife(x) & Adulthood(y)) -> (EndsWithPuberty(x,y) | EndsWithPuberty(x,y)))", "score": 0}
{"id": "eqasc_validation_787", "prediction": "all x.((LastStageOfLife(x) & BeforeAdulthood(x)) -> Puberty(x))", "score": 0}
{"id": "eqasc_validation_787", "prediction": "all x.((EndStageOfLife(x) & Adulthood(x)) -> Puberty(x))", "score": 0}
{"id": "eqasc_validation_787", "prediction": "all x y.((StageOfLife(x) & Adulthood(y)) -> (EndsWithPuberty(x,y) & StartsWithPuberty(x,y)))", "score": 0}
{"id": "eqasc_validation_787", "prediction": "all x y.((EndStageOfLife(x) & Adulthood(y)) -> StartsWithPuberty(x,y))", "score": 0}
{"id": "eqasc_validation_787", "prediction": "all x y z.((StageOfLife(x) & Adulthood(y) & Puberty(z)) -> EndStageOfLife(x,y,z))", "score": 0}
{"id": "eqasc_validation_787", "prediction": "all x.((LastStageOfLife(x) & Adulthood(x)) -> Puberty(x))", "score": 0}
{"id": "eqasc_validation_787", "prediction": "all x y z.((StageOfLife(x) & Adulthood(y) & Puberty(z)) -> StartsWithPuberty(x,y,z))", "score": 0}
{"id": "eqasc_validation_787", "prediction": "all x y z.((StageOfLife(x) & Adulthood(y) & Puberty(z)) -> StartsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_787", "prediction": "all x y z.((StageOfLife(x) & Adulthood(y) & Puberty(z)) -> FirstStageOfLife(x,y,z))", "score": 0}
{"id": "eqasc_validation_787", "prediction": "all x y z.((StageOfLife(x) & Adulthood(y) & Puberty(z)) -> EndsWithPuperhood(x,y,z))", "score": 0}
{"id": "eqasc_validation_788", "prediction": "all x.(Adolescence(x) -> PivotalStageOfHumanDevelopment(x))", "score": 0}
{"id": "eqasc_validation_788", "prediction": "all x.(Adolescence(x) -> (PivotalStageOfHumanDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_788", "prediction": "all x.(Adolescence(x) -> (PivotalStageOfHumanDevelopment(x) & HumanDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_788", "prediction": "all x y.((Adolescence(x) & HumanDevelopment(y)) -> PivotalStage(x,y))", "score": 0}
{"id": "eqasc_validation_788", "prediction": "all x.((Adolescence(x) & HumanDevelopment(x)) -> PivotalStage(x))", "score": 0}
{"id": "eqasc_validation_788", "prediction": "all x.(Adolescence(x) -> PrivilegedStageOfHumanDevelopment(x))", "score": 0}
{"id": "eqasc_validation_788", "prediction": "all x.(Adolescence(x) -> (PivotalStageOfHumanDevelopment(x) & PivotalStageOfHumanDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_788", "prediction": "all x.(Adolescence(x) -> (PivotalStage(x) & HumanDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_788", "prediction": "all x.(Adolescence(x) -> PhenomenalStageOfHumanDevelopment(x))", "score": 0}
{"id": "eqasc_validation_788", "prediction": "all x.(Adolescence(x) -> (PivotalStageOfHumanDevelopment(x) & -PivotalStageOfHumanDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_788", "prediction": "all x.(Adolescence(x) -> ThePivotalStageOfHumanDevelopment(x))", "score": 0}
{"id": "eqasc_validation_788", "prediction": "all x.(Adolescence(x) -> APivotalStageOfHumanDevelopment(x))", "score": 0}
{"id": "eqasc_validation_788", "prediction": "all x.(Adolescence(x) -> (PivotalStageOfHumanDevelopment(x) & HumanStageOfDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_788", "prediction": "all x.(Adolescence(x) -> (PivotalStageOfHumanDevelopment(x) & CrucialStageOfHumanDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_789", "prediction": "all x.((LastStage(x) & BeforeAdulthood(x)) -> PivotalLaterStageOfHumanDevelopment(x))", "score": 0}
{"id": "eqasc_validation_789", "prediction": "all x.((Stage(x) & BeforeAdulthood(x)) -> PivotalLaterStageOfHumanDevelopment(x))", "score": 0}
{"id": "eqasc_validation_789", "prediction": "all x.((LastStageBeforeAdulthood(x) & HumanDevelopment(x)) -> PivotalLaterStage(x))", "score": 0}
{"id": "eqasc_validation_789", "prediction": "all x.((LastStage(x) & BeforeAdulthood(x)) -> LaterStageOfHumanDevelopment(x))", "score": 0}
{"id": "eqasc_validation_789", "prediction": "all x.((Stage(x) & BeforeAdulthood(x)) -> LaterStageOfHumanDevelopment(x))", "score": 0}
{"id": "eqasc_validation_789", "prediction": "all x.((LastStage(x) & BeforeAdulthood(x)) -> (PivotalLaterStageOfHumanDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_789", "prediction": "all x.((LeastStage(x) & BeforeAdulthood(x)) -> PivotalLaterStageOfHumanDevelopment(x))", "score": 0}
{"id": "eqasc_validation_789", "prediction": "all x.((LateStage(x) & BeforeAdulthood(x)) -> PivotalLaterStageOfHumanDevelopment(x))", "score": 0}
{"id": "eqasc_validation_789", "prediction": "all x.((LastStage(x) & Adulthood(x)) -> PivotalLaterStageOfHumanDevelopment(x))", "score": 0}
{"id": "eqasc_validation_789", "prediction": "all x.((LastStageBeforeAdulthood(x) & HumanDevelopment(x)) -> LaterStage(x))", "score": 0}
{"id": "eqasc_validation_789", "prediction": "all x.((LastStageBeforeAdulthood(x) & HumanDevelopment(x)) -> PivotalLater(x))", "score": 0}
{"id": "eqasc_validation_789", "prediction": "all x.((LeastStageBeforeAdulthood(x) & HumanDevelopment(x)) -> PivotalLaterStage(x))", "score": 0}
{"id": "eqasc_validation_789", "prediction": "all x.((Stage(x) & BeforeAdulthood(x)) -> PivotalLaterThanHumanDevelopment(x))", "score": 0}
{"id": "eqasc_validation_789", "prediction": "all x.((LastStage(x) & BeforeAdulthood(x)) -> LaterHumanDevelopment(x))", "score": 0}
{"id": "eqasc_validation_789", "prediction": "all x.((Stage(x) & BeforeAdulthood(x)) -> LaterHumanDevelopment(x))", "score": 0}
{"id": "eqasc_validation_789", "prediction": "all x.((LastStageBeforeAdulthood(x) & HumanDevelopment(x)) -> PivotalStage(x))", "score": 0}
{"id": "eqasc_validation_790", "prediction": "all x.(Adolescence(x) -> (FunnyTimeOfLife(x) & CrazyTimeOfLife(x)))", "score": 0}
{"id": "eqasc_validation_790", "prediction": "all x.(Adolescence(x) -> (Funny(x) & Crazy(x)))", "score": 0}
{"id": "eqasc_validation_790", "prediction": "all x.(Adolescence(x) -> (FunnyTime(x) & CrazyTime(x)))", "score": 3}
{"id": "eqasc_validation_790", "prediction": "all x.((Adolescence(x) & Fascinating(x) & Crazy(x)) -> TimeOfLife(x))", "score": 0}
{"id": "eqasc_validation_790", "prediction": "all x.((Adolescence(x) & FascinatingTimeOfLife(x) & CrazyTimeOfLife(x)) -> CrazyTimeOfLife(x))", "score": 0}
{"id": "eqasc_validation_790", "prediction": "all x.(Adolescence(x) -> (FunnyTime(x) & CrazyTimeOfLife(x)))", "score": 0}
{"id": "eqasc_validation_790", "prediction": "all x.(Adolescence(x) -> (FamousTimeOfLife(x) & CrazyTimeOfLife(x)))", "score": 0}
{"id": "eqasc_validation_790", "prediction": "all x.(Adolescence(x) -> (FunnishingTimeOfLife(x) & CrazyTimeOfLife(x)))", "score": 0}
{"id": "eqasc_validation_790", "prediction": "all x.(Adolescence(x) -> (FunniratingTimeOfLife(x) & CrazyTimeOfLife(x)))", "score": 0}
{"id": "eqasc_validation_790", "prediction": "all x.(Adolescence(x) -> (FantasticTimeOfLife(x) & CrazyTimeOfLife(x)))", "score": 0}
{"id": "eqasc_validation_790", "prediction": "all x.(Adolescence(x) -> (FascinatingTimeOfLife(x) & CrazyTimeOfLife(x)))", "score": 0}
{"id": "eqasc_validation_790", "prediction": "all x.(Adolescence(x) -> (Funnishing(x) & Crazy(x)))", "score": 0}
{"id": "eqasc_validation_790", "prediction": "all x.(Adolescence(x) -> (Funny(x) & CrazyTimeOfLife(x)))", "score": 0}
{"id": "eqasc_validation_790", "prediction": "all x.((Adolescence(x) & Fascinating(x) & CrazyTimeOfLife(x)) -> CrazyTimeOfLife(x))", "score": 0}
{"id": "eqasc_validation_791", "prediction": "all x y.((Adolescence(x) & Adulthood(y)) -> CrazyTime(x,y))", "score": 0}
{"id": "eqasc_validation_791", "prediction": "all x.(Adolescence(x) -> CrazyTimeBeforeAdulthood(x))", "score": 0}
{"id": "eqasc_validation_791", "prediction": "all x.(Adolescence(x) -> (CrazyTimeBeforeAdulthood(x) & BeforeAdulthood(x)))", "score": 0}
{"id": "eqasc_validation_791", "prediction": "all x y.((Adolescence(x) & Adulthood(y)) -> CrazyTimeBeforeAdulthood(x,y))", "score": 0}
{"id": "eqasc_validation_791", "prediction": "all x.(Adolescence(x) -> (CrazyTime(x) & BeforeAdulthood(x)))", "score": 3}
{"id": "eqasc_validation_791", "prediction": "all x.(Adolescence(x) -> (RainfulTimeBeforeAdulthood(x) & BeforeAdulthood(x)))", "score": 0}
{"id": "eqasc_validation_791", "prediction": "all x y.((Adolescence(x) & Adulthood(y)) -> CrazyTime(x))", "score": 0}
{"id": "eqasc_validation_791", "prediction": "all x y.((Adolescence(x) & Adulthood(y)) -> CrazyTimeBefore(x,y))", "score": 0}
{"id": "eqasc_validation_791", "prediction": "all x.(Adolescence(x) -> (RainfulTime(x) & BeforeAdulthood(x)))", "score": 0}
{"id": "eqasc_validation_791", "prediction": "all x.((Adolescence(x) & CrazyTimeBeforeAdulthood(x)) -> CrazyTimeBeforeAdulthood(x))", "score": 0}
{"id": "eqasc_validation_791", "prediction": "all x y z.((Adolescence(x) & Adulthood(y) & CrazyTime(z)) -> BeforeAdulthood(x,y,z))", "score": 0}
{"id": "eqasc_validation_791", "prediction": "all x.(Adolescence(x) -> (RainyTimeBeforeAdulthood(x) & BeforeAdulthood(x)))", "score": 0}
{"id": "eqasc_validation_791", "prediction": "all x y.((Adolescence(x) & Adulthood(y)) -> CrazyTimeBeforeAdulthood(x))", "score": 0}
{"id": "eqasc_validation_791", "prediction": "all x.(Adolescence(x) -> (RainyTime(x) & BeforeAdulthood(x)))", "score": 0}
{"id": "eqasc_validation_791", "prediction": "all x.(Adolescence(x) -> (crazyTimeBeforeAdulthood(x) & BeforeAdulthood(x)))", "score": 0}
{"id": "eqasc_validation_791", "prediction": "all x.((Adolescence(x) & CrazyTime(x)) -> Adulthood(x))", "score": 0}
{"id": "eqasc_validation_792", "prediction": "all x y.((Phylogeny(x) & Organism(y)) -> EvolutionaryHistory(x,y))", "score": 0}
{"id": "eqasc_validation_792", "prediction": "all x.(Phylogeny(x) -> EvolutionaryHistoryOfRelatedOrganisms(x))", "score": 0}
{"id": "eqasc_validation_792", "prediction": "all x y z.((Phylogeny(x) & Organism(y) & Organism(z)) -> EvolutionaryHistory(x,y,z))", "score": 0}
{"id": "eqasc_validation_792", "prediction": "all x y.((Phylogeny(x) & RelatedOrganisms(y)) -> EvolutionaryHistory(x,y))", "score": 0}
{"id": "eqasc_validation_792", "prediction": "all x y.((Phylogeny(x) & RelatedOrganism(y)) -> EvolutionaryHistory(x,y))", "score": 0}
{"id": "eqasc_validation_792", "prediction": "all x y.((Phylogeny(x) & Organism(y)) -> EvolutionaryHistoryOf(x,y))", "score": 0}
{"id": "eqasc_validation_792", "prediction": "all x y.((Phylogeny(x) & OrganismGroup(y)) -> EvolutionaryHistory(x,y))", "score": 0}
{"id": "eqasc_validation_792", "prediction": "all x.(Phylogeny(x) -> (EvolutionaryHistory(x) & GroupOfRelatedOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_792", "prediction": "all x y z.((Phylogeny(x) & Organism(y) & Organism(z)) -> EvolutionaryHistoryOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_792", "prediction": "all x y.((Phylogeny(x) & RelatedOrganisms(y)) -> EvolutionaryHistoryOf(x,y))", "score": 0}
{"id": "eqasc_validation_792", "prediction": "all x.(Phylogeny(x) -> EvolutionaryHistory(x))", "score": 0}
{"id": "eqasc_validation_792", "prediction": "all x y z.((Phylogeny(x) & Organism(y) & Organism(z)) -> EvolutionaryHistory(x,y))", "score": 0}
{"id": "eqasc_validation_792", "prediction": "all x y.((Phylogeny(x) & RelatedOrganism(y)) -> EvolutionaryHistoryOf(x,y))", "score": 0}
{"id": "eqasc_validation_792", "prediction": "all x y.((Phylogeny(x) & Organism(y) & Related(y)) -> EvolutionaryHistory(x,y))", "score": 0}
{"id": "eqasc_validation_793", "prediction": "all x.(Classification(x) -> BasedOnPhylogeny(x))", "score": 0}
{"id": "eqasc_validation_793", "prediction": "all x y.((Classification(x) & Phylogeny(y)) -> BasedOn(x,y))", "score": 0}
{"id": "eqasc_validation_793", "prediction": "all x.(Classification(x) -> (BasedOnPhylogeny(x) | BasedOnPhylogeny(x)))", "score": 0}
{"id": "eqasc_validation_793", "prediction": "all x y.((Classification(x) & Phylogeny(y)) -> CanBeBasedOn(x,y))", "score": 0}
{"id": "eqasc_validation_793", "prediction": "all x.(Classification(x) -> BaseOnPhylogeny(x))", "score": 0}
{"id": "eqasc_validation_793", "prediction": "all x.(Classification(x) -> PhylogenyBased(x))", "score": 0}
{"id": "eqasc_validation_793", "prediction": "all x y.((Classification(x) & Phylogeny(y)) -> Base(x,y))", "score": 0}
{"id": "eqasc_validation_793", "prediction": "exists x.(Classification(x) & BasedOnPhylogeny(x))", "score": 0}
{"id": "eqasc_validation_793", "prediction": "all x.(Classification(x) -> exists y.(Phylogeny(y) & BasedOn(x,y)))", "score": 0}
{"id": "eqasc_validation_793", "prediction": "all x.(Classification(x) -> exists y.(Phylogeny(y) & BasedOn(x,y))))", "score": -1}
{"id": "eqasc_validation_793", "prediction": "all x y.((Classification(x) & Phylogeny(y)) -> BasesOn(x,y))", "score": 0}
{"id": "eqasc_validation_793", "prediction": "all x.(Classification(x) -> Phylogeny(x))", "score": 0}
{"id": "eqasc_validation_793", "prediction": "all x y.((Classification(x) & Phylogeny(y)) -> Baseless(x,y))", "score": 0}
{"id": "eqasc_validation_794", "prediction": "all x y z.((Organism(x) & EvolutionaryHistory(y) & RelatedOrganism(z)) -> CanBeBasedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_794", "prediction": "all x y.((Organism(x) & RelatedOrganism(y)) -> EvolutionaryHistory(x,y))", "score": 0}
{"id": "eqasc_validation_794", "prediction": "all x y z.((Organism(x) & EvolutionaryHistory(y) & Organism(z)) -> CanBeBasedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_794", "prediction": "all x y.((Organism(x) & RelatedOrganism(y)) -> CanBeBasedInEvolutionaryHistory(x,y))", "score": 0}
{"id": "eqasc_validation_794", "prediction": "all x y z.((Organism(x) & RelatedOrganism(y) & EvolutionaryHistory(z)) -> CanBeBasedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_794", "prediction": "all x y.((Organism(x) & RelatedOrganism(y)) -> (EvolutionaryHistory(x,y) & RelatedOrganism(x,y)))", "score": 0}
{"id": "eqasc_validation_794", "prediction": "all x y.((Organism(x) & RelatedOrganism(y)) -> BasedInEvolutionaryHistory(x,y))", "score": 0}
{"id": "eqasc_validation_794", "prediction": "all x.((Organism(x) & RelatedOrganism(x)) -> EvolutionaryHistory(x))", "score": 0}
{"id": "eqasc_validation_794", "prediction": "all x y z.((Organism(x) & EvolutionaryHistory(y) & RelatedOrganism(z) & BasedIn(x,y,z)) -> RelatedOrganism(x))", "score": 0}
{"id": "eqasc_validation_794", "prediction": "all x y z.((Organism(x) & EvolutionaryHistory(y) & Organism(z) & Related(z)) -> CanBeBasedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_794", "prediction": "all x y.((Organism(x) & EvolutionaryHistory(y)) -> CanBeBasedIn(x,y))", "score": 0}
{"id": "eqasc_validation_795", "prediction": "all x.(EvolutionaryBiology(x) -> InvolvesHistoryOfOrganicDiversity(x))", "score": 0}
{"id": "eqasc_validation_795", "prediction": "all x y.((EvolutionaryBiology(x) & OrganicDiversity(y)) -> InvolvesHistory(x,y))", "score": 0}
{"id": "eqasc_validation_795", "prediction": "all x.((EvolutionaryBiology(x) & InvolvesHistoryOfOrganicDiversity(x)) -> InvolvesHistoryOfOrganicDiversity(x))", "score": 0}
{"id": "eqasc_validation_795", "prediction": "all x.((EvolutionaryBiology(x) & OrganicDiversity(x)) -> InvolvesHistory(x))", "score": 0}
{"id": "eqasc_validation_795", "prediction": "all x.((EvolutionaryBiology(x) & OrganicDiversity(y)) -> InvolvesHistory(x,y))", "score": 0}
{"id": "eqasc_validation_795", "prediction": "all x y.((EvolutionaryBiology(x) & EvolutionaryBiology(y)) -> InvolvesHistoryOfOrganicDiversity(x,y))", "score": 0}
{"id": "eqasc_validation_795", "prediction": "all x.((EvolutionaryBiology(x) & InvolvesHistoryOfOrganicDiversity(x)) -> MuchInvolvesHistoryOfOrganicDiversity(x))", "score": 0}
{"id": "eqasc_validation_795", "prediction": "all x.((EvolutionaryBiology(x) & HistoryOfOrganicDiversity(x)) -> Involves(x,y))", "score": 0}
{"id": "eqasc_validation_795", "prediction": "all x y.((EvolutionaryBiology(x) & OrganicDiverse(y)) -> InvolvesHistory(x,y))", "score": 0}
{"id": "eqasc_validation_795", "prediction": "all x.(EvolutionaryBiology(x) -> (InvolvesHistoryOfOrganicDiversity(x)))", "score": 0}
{"id": "eqasc_validation_795", "prediction": "all x y.((EvolutionaryBiology(x) & OrganicDiversity(y)) -> Involves(x,y))", "score": 0}
{"id": "eqasc_validation_795", "prediction": "all x y z.((EvolutionaryBiology(x) & OrganicDiversity(y) & History(z)) -> Involves(x,y,z))", "score": 0}
{"id": "eqasc_validation_795", "prediction": "all x.((EvolutionaryBiology(x) & InvolvesHistoryOfOrganicDiversity(x)) -> InvolvesHistoryOf(x,OrganicDiversity))", "score": 0}
{"id": "eqasc_validation_795", "prediction": "all x.((EvolutionaryBiology(x) & OrganicDiversity(x)) -> InvolvesHistory(x,y))", "score": 0}
{"id": "eqasc_validation_796", "prediction": "all x y.((Phylogeny(x) & Organism(y)) -> (History(x,y) & OrganicDiversity(x,y)))", "score": 0}
{"id": "eqasc_validation_796", "prediction": "all x y z.((Phylogeny(x) & Organism(y) & Organism(z)) -> (History(x,y) & OrganicDiversity(x,z)))", "score": 0}
{"id": "eqasc_validation_796", "prediction": "all x y.((Phylogeny(x) & RelatedOrganism(y)) -> (History(x,y) & OrganicDiversity(x,y)))", "score": 0}
{"id": "eqasc_validation_796", "prediction": "all x.(Phylogeny(x) -> (HistoryOfOrganisms(x) & OrganicDiversityOfOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_796", "prediction": "all x.(Phylogeny(x) -> (History(x) & OrganicDiversity(x) & RelatedOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_796", "prediction": "all x.(Phylogeny(x) -> (HistoryOfOrganisms(x) & OrganicDiversityOfOrganisms(x) & RelatedOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_796", "prediction": "all x.(Phylogeny(x) -> (HistoryAndOrganicDiversityOfRelatedOrganisms(x) & RelatedOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_796", "prediction": "all x.(Phylogeny(x) -> (HistoryAndOrganicDiversity(x) & RelatedOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_796", "prediction": "all x y.((Phylogeny(x) & Organism(y)) -> (HistoryAndOrganicDiversity(x,y) & RelatedOrganisms(y)))", "score": 0}
{"id": "eqasc_validation_796", "prediction": "all x.(Phylogeny(x) -> (HistoryAndOrganicDiversityOfOrganisms(x) & RelatedOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_796", "prediction": "all x y.((Phylogeny(x) & Organism(y)) -> (HistoryAndOrganicDiversity(x,y) & RelatedOrganism(y)))", "score": 0}
{"id": "eqasc_validation_796", "prediction": "all x y.((Phylogeny(x) & Organism(y)) -> (HistoryAndOrganicDiversity(x,y) & RelatedOrganism(x,y)))", "score": 0}
{"id": "eqasc_validation_796", "prediction": "all x y z.((Phylogeny(x) & Organism(y) & Organism(z)) -> (HistoryAndOrganicDiversity(x,y,z) & RelatedOrganism(x)))", "score": 0}
{"id": "eqasc_validation_796", "prediction": "all x y z.((Phylogeny(x) & Organism(y) & Organism(z)) -> (HistoryAndOrganicDiversity(x,y) & RelatedOrganism(x,z)))", "score": 0}
{"id": "eqasc_validation_797", "prediction": "all x.(MetazoanPhylogeny(x) -> PoorlyUnderstood(x))", "score": 0}
{"id": "eqasc_validation_797", "prediction": "all x y.((MetazoanPhylogeny(x) & Phyla(y)) -> PoorlyUnderstood(x,y))", "score": 0}
{"id": "eqasc_validation_797", "prediction": "all x y.((MetazoanPhylogeny(x) & Phylogeny(y)) -> PoorlyUnderstood(x,y))", "score": 0}
{"id": "eqasc_validation_797", "prediction": "all x.(MetazoanPhylogeny(x) -> PoorlyUnderstoodPhylogenyOfPhyla(x))", "score": 0}
{"id": "eqasc_validation_797", "prediction": "all x y.((MetazoanPhylogeny(x) & Phyla(y)) -> PoorlyUnderstood(x))", "score": 0}
{"id": "eqasc_validation_797", "prediction": "all x y z.((MetazoanPhylogeny(x) & Phylogeny(y) & Phyla(z)) -> PoorlyUnderstood(x,y,z))", "score": 0}
{"id": "eqasc_validation_797", "prediction": "all x y.((MetazoanPhylogeny(x) & Phylogeny(y)) -> PoorlyUnderstood(x))", "score": 0}
{"id": "eqasc_validation_797", "prediction": "all x.(MetazoanPhylogeny(x) -> PoorlyUnderstoodPhylogeny(x))", "score": 0}
{"id": "eqasc_validation_797", "prediction": "all x.(MetazoanPhylogeny(x) & PoorlyUnderstood(x))", "score": 0}
{"id": "eqasc_validation_797", "prediction": "all x y.((MetazoanPhylogeny(x) & Phylo(y)) -> PoorlyUnderstood(x,y))", "score": 0}
{"id": "eqasc_validation_797", "prediction": "all x.(MetazoanPhylogeny(x) & PoorlyUnderstoodPhylogenyOfPhyla(x))", "score": 0}
{"id": "eqasc_validation_797", "prediction": "all x y.((MetazoanPhylogeny(x) & Phyla(y)) -> PoundlyUnderstood(x,y))", "score": 0}
{"id": "eqasc_validation_797", "prediction": "all x.(MetazoanPhylogeny(x) -> PoundlyUnderstood(x))", "score": 0}
{"id": "eqasc_validation_797", "prediction": "all x y.((MetazoanPhylogeny(x) & Phyla(y)) -> PoorlyUnderstand(x,y))", "score": 0}
{"id": "eqasc_validation_797", "prediction": "all x y z.((MetazoanPhylogeny(x) & Phylogeny(y) & Phyla(z)) -> PoorlyUnderstood(x))", "score": 0}
{"id": "eqasc_validation_798", "prediction": "all x.(Metazoa(x) -> PoorlyUnderstoodEvolutionaryHistory(x))", "score": 0}
{"id": "eqasc_validation_798", "prediction": "all x.((Metazoa(x) & EvolutionaryHistory(x)) -> PoorlyUnderstood(x))", "score": 0}
{"id": "eqasc_validation_798", "prediction": "all x.(Metazoa(x) -> PoorlyUnderstood(x))", "score": 0}
{"id": "eqasc_validation_798", "prediction": "all x y.((Metazoa(x) & EvolutionaryHistory(y)) -> PoorlyUnderstood(x,y))", "score": 0}
{"id": "eqasc_validation_798", "prediction": "all x.(Metazoas(x) -> PoorlyUnderstoodEvolutionaryHistory(x))", "score": 0}
{"id": "eqasc_validation_798", "prediction": "all x.(Metazoa(x) -> PoorlyUnknownEvolutionaryHistory(x))", "score": 0}
{"id": "eqasc_validation_798", "prediction": "all x y.((Metazoa(x) & EvolutionaryHistory(y)) -> PoorlyUnderstood(x))", "score": 0}
{"id": "eqasc_validation_798", "prediction": "all x.(Metazoa(x) -> PoorlyUnderstandsEvolutionaryHistory(x))", "score": 0}
{"id": "eqasc_validation_798", "prediction": "all x.((Metazoa(x) & EvolutionaryHistory(x)) -> PoorlyUnderstand(x))", "score": 0}
{"id": "eqasc_validation_798", "prediction": "all x y.((Metazoa(x) & EvolutionaryHistory(y)) -> PoorlyUnderstand(x,y))", "score": 0}
{"id": "eqasc_validation_798", "prediction": "all x.(Metazoa(x) -> PoorlyUnderstandedEvolutionaryHistory(x))", "score": 0}
{"id": "eqasc_validation_798", "prediction": "all x.(Metazoa(x) -> PoorlyUnderstandableEvolutionaryHistory(x))", "score": 0}
{"id": "eqasc_validation_798", "prediction": "all x.((Metazoa(x) & EvolutionaryHistory(x)) -> PoundlyUnderstood(x))", "score": 0}
{"id": "eqasc_validation_799", "prediction": "all x y.((Organism(x) & Environment(y)) -> BehaviorRelatedTo(x,y))", "score": 0}
{"id": "eqasc_validation_799", "prediction": "all x y.((Organism(x) & Environment(y)) -> BehaviorRelated(x,y))", "score": 0}
{"id": "eqasc_validation_799", "prediction": "all x.(Organism(x) -> BehaviorRelatedToEnvironment(x))", "score": 0}
{"id": "eqasc_validation_799", "prediction": "all x y z.((Organism(x) & Environment(y) & Behavior(z)) -> RelatedTo(x,z))", "score": 0}
{"id": "eqasc_validation_799", "prediction": "all x y.((Organism(x) & Environment(y)) -> HasBehaviorRelatedTo(x,y))", "score": 0}
{"id": "eqasc_validation_799", "prediction": "all x y.((Organism(x) & Environment(y)) -> RelatedBehavior(x,y))", "score": 0}
{"id": "eqasc_validation_799", "prediction": "all x y z.((Organism(x) & Environment(y) & Behavior(z)) -> RelatedTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_799", "prediction": "all x y z.((Organism(x) & Behavior(y) & Environment(z)) -> RelatedTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_799", "prediction": "all x y z.((Organism(x) & Environment(y) & Behavior(z)) -> RelativeTo(x,z))", "score": 0}
{"id": "eqasc_validation_799", "prediction": "all x y.((Organism(x) & Environment(y)) -> RelativeBehavior(x,y))", "score": 0}
{"id": "eqasc_validation_799", "prediction": "all x y.((Organism(x) & Environment(y)) -> RelationalBehavior(x,y))", "score": 0}
{"id": "eqasc_validation_799", "prediction": "all x y.((Organism(x) & Environment(y)) -> BehaviorRelationship(x,y))", "score": 0}
{"id": "eqasc_validation_800", "prediction": "all x y.((Phylogeny(x) & Organism(y)) -> ExplainsEvolution(x,y))", "score": 0}
{"id": "eqasc_validation_800", "prediction": "all x y.((Phylogeny(x) & Organism(y)) -> MayExplainEvolution(x,y))", "score": 0}
{"id": "eqasc_validation_800", "prediction": "all x y.((Phylogeny(x) & Organism(y)) -> ExplainsEvolutionaryPart(x,y))", "score": 0}
{"id": "eqasc_validation_800", "prediction": "all x y z.((Phylogeny(x) & EvolutionaryPartOfEnvironment(y) & Organism(z)) -> MayExplain(x,y,z))", "score": 0}
{"id": "eqasc_validation_800", "prediction": "all x y.((Phylogeny(x) & Organism(y)) -> (ExplainsEvolution(x,y) | ExplainsEvolution(x,y)))", "score": 0}
{"id": "eqasc_validation_800", "prediction": "all x y.((Phylogeny(x) & OrganismEnvironment(y)) -> ExplainsEvolution(x,y))", "score": 0}
{"id": "eqasc_validation_800", "prediction": "all x y.((Phylogeny(x) & Organism(y)) -> MayExplainEvolutionaryPart(x,y))", "score": 0}
{"id": "eqasc_validation_800", "prediction": "all x y.((Phylogeny(x) & Organism(y)) -> ExplainsEvolutionaryPartOfEnvironment(x,y))", "score": 0}
{"id": "eqasc_validation_800", "prediction": "all x y.((Phylogeny(x) & Organism(y)) -> (ExplainsEvolutionaryPart(x,y) | ExplainsEvolution(x,y)))", "score": 0}
{"id": "eqasc_validation_800", "prediction": "all x y z.((Phylogeny(x) & EvolutionaryPartOfEnvironment(y) & Organism(z)) -> Explains(x,y,z))", "score": 0}
{"id": "eqasc_validation_800", "prediction": "all x y.((Phylogeny(x) & Organism(y)) -> (ExplainsEvolution(x,y) | ExplainsEnvironment(x,y)))", "score": 0}
{"id": "eqasc_validation_800", "prediction": "all x.(Phylogeny(x) -> ExplainsEvolutionaryPartOfEnvironment(x))", "score": 0}
{"id": "eqasc_validation_800", "prediction": "all x y z.((Phylogeny(x) & Organism(y) & EvolutionaryPart(z)) -> MayExplain(x,y,z))", "score": 0}
{"id": "eqasc_validation_800", "prediction": "all x.(Phylogeny(x) -> (ExplainsEvolution(x) & OrganismEnvironment(x)))", "score": 0}
{"id": "eqasc_validation_800", "prediction": "all x.(Phylogeny(x) -> ExplainsEvolutionaryPartOfOrganismsEnvironment(x))", "score": 0}
{"id": "eqasc_validation_801", "prediction": "all x.((GroupOfRelatedOrganisms(x) & RelatedOrganisms(x)) -> Phyla(x))", "score": 0}
{"id": "eqasc_validation_801", "prediction": "all x.((GroupOfRelatedOrganisms(x) & HasRelatedOrganisms(x)) -> Phyla(x))", "score": 0}
{"id": "eqasc_validation_801", "prediction": "all x.((GroupOfOrganisms(x) & RelatedOrganisms(x)) -> Phyla(x))", "score": 0}
{"id": "eqasc_validation_801", "prediction": "all x y.((GroupOfRelatedOrganisms(x) & RelatedOrganisms(y)) -> Phyla(x))", "score": 0}
{"id": "eqasc_validation_801", "prediction": "all x.((RelatedOrganisms(x) & RelatedOrganisms(x)) -> Phyla(x))", "score": 0}
{"id": "eqasc_validation_801", "prediction": "all x.((Organism(x) & GroupOfRelatedOrganisms(x)) -> Phyla(x))", "score": 0}
{"id": "eqasc_validation_801", "prediction": "all x y.((GroupOfRelatedOrganisms(x) & RelatedOrganisms(y) & RelatedOrganisms(x,y)) -> Phyla(x))", "score": 0}
{"id": "eqasc_validation_801", "prediction": "all x.((OrganismGroup(x) & RelatedOrganisms(x)) -> Phyla(x))", "score": 0}
{"id": "eqasc_validation_801", "prediction": "all x.((Organism(x) & RelatedOrganisms(x)) -> Phyla(x))", "score": 0}
{"id": "eqasc_validation_801", "prediction": "all x y.((GroupOfOrganisms(x) & RelatedOrganisms(y) & RelatedOrganisms(x,y)) -> Phyla(x))", "score": 0}
{"id": "eqasc_validation_801", "prediction": "all x y.((GroupOfRelatedOrganisms(x) & Organism(y) & RelatedOrganism(x,y)) -> Phyla(x))", "score": 0}
{"id": "eqasc_validation_801", "prediction": "all x y.((GroupOfRelatedOrganisms(x) & RelatedOrganisms(y) & RelatedOrganisms(x)) -> Phyla(x))", "score": 0}
{"id": "eqasc_validation_801", "prediction": "all x.((Organism(x) & RelatedOrganism(x)) -> Phyla(x))", "score": 0}
{"id": "eqasc_validation_801", "prediction": "all x.(RelatedOrganisms(x) -> Phyla(x))", "score": 0}
{"id": "eqasc_validation_801", "prediction": "all x y z.((GroupOfRelatedOrganisms(x) & Organism(y) & Organism(z) & RelatedTo(y,z)) -> Phyla(x))", "score": 0}
{"id": "eqasc_validation_802", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedbackOnSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_802", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> GivesFeedbackOnSpeed(x,y,z))", "score": 4}
{"id": "eqasc_validation_802", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedbackOnSpeedOfVehicle(x,y))", "score": 0}
{"id": "eqasc_validation_802", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedbackOnSpeedOnVehicle(x,y))", "score": 0}
{"id": "eqasc_validation_802", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> GivesFeedback(x,y,z))", "score": 2}
{"id": "eqasc_validation_802", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z) & GivesFeedbackOnSpeed(x,y,z)) -> Speedometer(x))", "score": 0}
{"id": "eqasc_validation_802", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> GivesFeedbackOnSpeedOfVehicle(x,y,z))", "score": 0}
{"id": "eqasc_validation_802", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> GivesFeedbackOnSpeedOf(x,y,z))", "score": 2}
{"id": "eqasc_validation_802", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> GivesFeedbackOnSpeedOn(x,y,z))", "score": 2}
{"id": "eqasc_validation_802", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedback(x,y))", "score": 0}
{"id": "eqasc_validation_802", "prediction": "all x y.((Speedometer(x) & Driver(y) & Vehicle(z)) -> GivesFeedbackOnSpeed(x,y,z))", "score": 4}
{"id": "eqasc_validation_802", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> (GivesFeedbackOnSpeed(x,y,z) & SpeedOfVehicle(y,z)))", "score": 4}
{"id": "eqasc_validation_802", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z) & GivesFeedbackOnSpeed(x,y,z)) -> GivesFeedbackOnSpeed(x,y,z))", "score": 0}
{"id": "eqasc_validation_802", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> ProvidesFeedbackOnSpeed(x,y,z))", "score": 2}
{"id": "eqasc_validation_802", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> (GivesFeedback(x,y,z) & SpeedOfVehicle(y,z)))", "score": 2}
{"id": "eqasc_validation_803", "prediction": "all x y z.((Speed(x) & Distance(y) & Yards(z)) -> (InMilesPerHour(x) & InMiles(y,z)))", "score": 0}
{"id": "eqasc_validation_803", "prediction": "all x y.((Speed(x) & Distance(y)) -> (InMilesPerHour(x) & InMilesWithyards(y)))", "score": 0}
{"id": "eqasc_validation_803", "prediction": "all x y.((Speed(x) & Distance(y)) -> (InMilesPerHour(x) & InMiles(y) & YardsAsSubMeasure(y)))", "score": 0}
{"id": "eqasc_validation_803", "prediction": "all x y.((Speed(x) & Distance(y)) -> (InMilesPerHour(x) & InMiles(y) & Yards(y)))", "score": 0}
{"id": "eqasc_validation_803", "prediction": "all x y z.((Speed(x) & Distance(y) & Yard(z)) -> (InMilesPerHour(x) & InMiles(y,z)))", "score": 0}
{"id": "eqasc_validation_803", "prediction": "(all x.(Speed(x) -> InMilesPerHour(x)) & all y.(Distance(y) -> InMiles(y)))", "score": 0}
{"id": "eqasc_validation_803", "prediction": "(all x.(Speed(x) -> MilesPerHour(x)) & all y.(Distance(y) -> MilesWithyards(y)))", "score": 0}
{"id": "eqasc_validation_803", "prediction": "all x y z.((Speed(x) & Distance(y) & Yards(z)) -> (InMilesPerHour(x) & InMiles(y) & SubMeasure(z)))", "score": 0}
{"id": "eqasc_validation_803", "prediction": "all x y.((Speed(x) & Distance(y)) -> (InMilesPerHour(x) & InMiles(y) & YardsAsSubMeasure(x)))", "score": 0}
{"id": "eqasc_validation_803", "prediction": "all x y.((Speed(x) & Distance(y)) -> (MilesPerHour(x) & MilesWithyards(y)))", "score": 0}
{"id": "eqasc_validation_803", "prediction": "(all x.(Speed(x) -> MilesPerHour(x)) & all y.(Distance(y) -> Miles(y)))", "score": 0}
{"id": "eqasc_validation_803", "prediction": "(all x.(Speed(x) -> MilesPerHour(x)) & all y.(Distance(y) -> MilesWithyards(y))))", "score": -1}
{"id": "eqasc_validation_803", "prediction": "all x y.((Speed(x) & Distance(y)) -> (InMilesPerHour(x) & InMilesWithYards(y)))", "score": 0}
{"id": "eqasc_validation_803", "prediction": "(all x.(Speed(x) -> InMilesPerHour(x)) & (Distance(x) -> InMiles(x)))", "score": 0}
{"id": "eqasc_validation_803", "prediction": "(all x.(Speed(x) -> MilesPerHour(x)) & (Distance(x) -> MilesWithyards(x)))", "score": 0}
{"id": "eqasc_validation_803", "prediction": "all x y z.((Speed(x) & Distance(y) & Yards(z)) -> (InMilesPerHour(x) & InMiles(y)))", "score": 0}
{"id": "eqasc_validation_804", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedbackOnMilesPerHour(x,y))", "score": 0}
{"id": "eqasc_validation_804", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> GivesFeedbackOnMilesPerHour(x,y,z))", "score": 0}
{"id": "eqasc_validation_804", "prediction": "all x y.((Speedometer(x) & Driver(y) & Vehicle(z)) -> GivesFeedbackOnMilesPerHour(x,y,z))", "score": 0}
{"id": "eqasc_validation_804", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> (GivesFeedbackOnMilesPerHour(x,y,z)))", "score": 0}
{"id": "eqasc_validation_804", "prediction": "all x.(Speedometer(x) -> (GivesDriverFeedback(x) & HowManyMilesPerHourVehicleGoes(x)))", "score": 0}
{"id": "eqasc_validation_804", "prediction": "all x.(Speedometer(x) -> (GivesDriverFeedbackOnMilesPerHour(x) & VehicleGoes(x)))", "score": 0}
{"id": "eqasc_validation_804", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> (GivesFeedbackOnMilesPerHour(x,y)))", "score": 0}
{"id": "eqasc_validation_804", "prediction": "all x.(Speedometer(x) -> (GivesDriverFeedback(x) & HowManyMilesPerHour(x)))", "score": 0}
{"id": "eqasc_validation_804", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedbackOnMilePerHour(x,y))", "score": 0}
{"id": "eqasc_validation_804", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> (GivesFeedback(x,y) & HowManyMilesPerHour(y)))", "score": 0}
{"id": "eqasc_validation_804", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> (GivesFeedback(x,y,z) & HowManyMilesPerHour(y,z)))", "score": 0}
{"id": "eqasc_validation_804", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedback(x,y))", "score": 0}
{"id": "eqasc_validation_804", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedbackOnMilesPerHours(x,y))", "score": 0}
{"id": "eqasc_validation_804", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedbackOnMilesPerHour(y,x))", "score": 0}
{"id": "eqasc_validation_804", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedbackOnHowManyMilesPerHour(x,y))", "score": 0}
{"id": "eqasc_validation_804", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> GivesFeedback(x,y,z))", "score": 0}
{"id": "eqasc_validation_805", "prediction": "all x.((Odometer(x) | Speedometer(x)) -> (MeasuresDistance(x) & MeasuresSpeed(x)))", "score": 0}
{"id": "eqasc_validation_805", "prediction": "all x.(Odometer(x) & Speedometer(x)) -> (MeasuresDistance(x) & MeasuresSpeed(x)))", "score": -1}
{"id": "eqasc_validation_805", "prediction": "all x y.((Odometer(x) & Speedometer(y)) -> (MeasuresDistance(x) & MeasuresSpeed(y)))", "score": 0}
{"id": "eqasc_validation_805", "prediction": "all x.((Odometer(x) | Speedometer(x)) -> MeasuresDistanceAndSpeed(x))", "score": 0}
{"id": "eqasc_validation_805", "prediction": "all x.(Odometer(x) | Speedometer(x)) -> (MeasuresDistance(x) & MeasuresSpeed(x)))", "score": -1}
{"id": "eqasc_validation_805", "prediction": "all x y.((Odometer(x) & Speedometer(y)) -> (MeasuresDistance(x,y) & MeasuresSpeed(x,y)))", "score": 0}
{"id": "eqasc_validation_805", "prediction": "all x y.((Odometer(x) & Speedometer(y)) -> (MeasuresDistance(x) & MeasuresSpeed(x)))", "score": 0}
{"id": "eqasc_validation_805", "prediction": "all x.((Odometer(x) & Speedometer(x)) -> (MeasuresDistance(x) & MeasuresSpeed(x)))", "score": 0}
{"id": "eqasc_validation_805", "prediction": "all x y.((Odometer(x) & Speedometer(y)) -> MeasuresDistanceAndSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_805", "prediction": "all x.(Odometer(x) & Speedometer(x) -> (MeasuresDistance(x) & MeasuresSpeed(x)))", "score": 0}
{"id": "eqasc_validation_805", "prediction": "all x.((Odometer(x) | Speedometer(x)) -> (MeasureDistance(x) & MeasureSpeed(x)))", "score": 0}
{"id": "eqasc_validation_805", "prediction": "all x y.((Odometer(x) & Speedometer(y)) -> (MeasuresDistance(x,y) & MeasuresSpeed(y,x)))", "score": 0}
{"id": "eqasc_validation_805", "prediction": "all x.(Odometer(x) -> (MeasuresDistance(x) & MeasuresSpeed(x)))", "score": 0}
{"id": "eqasc_validation_805", "prediction": "all x y.((Odometer(x) & Speedometer(y)) -> (MeasureDistance(x) & MeasureSpeed(y)))", "score": 0}
{"id": "eqasc_validation_805", "prediction": "all x.(Odometer(x) & Speedometer(x)) -> MeasuresDistanceAndSpeed(x))", "score": -1}
{"id": "eqasc_validation_805", "prediction": "all x y.((Odometer(x) & Speedometer(y)) -> (MeasuresDistance(x) | MeasuresSpeed(y)))", "score": 0}
{"id": "eqasc_validation_806", "prediction": "all x.(Speedometer(x) -> MeasuresRateOfTravel(x))", "score": 0}
{"id": "eqasc_validation_806", "prediction": "all x y.((Speedometer(x) & TravelRate(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_806", "prediction": "all x y.((Speedometer(x) & RateOfTravel(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_806", "prediction": "all x y.((Speedometer(x) & TravelRate(y)) -> MeasuresRateOfTravel(x,y))", "score": 0}
{"id": "eqasc_validation_806", "prediction": "all x y.((Speedometer(x) & RateOfTravel(y)) -> MeasuresRateOfTravel(x,y))", "score": 0}
{"id": "eqasc_validation_806", "prediction": "all x y z.((Speedometer(x) & TravelRate(y) & TravelRate(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_806", "prediction": "all x y z.((Speedometer(x) & RateOfTravel(y) & TravelRate(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_806", "prediction": "all x y z.((Speedometer(x) & TravelRate(y) & TravelRate(z)) -> MeasuresRateOfTravel(x,y,z))", "score": 0}
{"id": "eqasc_validation_806", "prediction": "all x y.((Speedometer(x) & Travel(y)) -> MeasuresRateOfTravel(x,y))", "score": 0}
{"id": "eqasc_validation_806", "prediction": "all x y z.((Speedometer(x) & RateOfTravel(y) & Travel(z)) -> MeasuresRateOfTravel(x,y,z))", "score": 0}
{"id": "eqasc_validation_806", "prediction": "all x y z.((Speedometer(x) & RateOfTravel(y) & Travel(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_806", "prediction": "all x y.((Speedometer(x) & Speedometer(y)) -> MeasuresRateOfTravel(x,y))", "score": 0}
{"id": "eqasc_validation_806", "prediction": "all x y z.((Speedometer(x) & TravelRate(y) & TravelRate(z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_806", "prediction": "all x y z.((Speedometer(x) & RateOfTravel(y) & TravelRate(z)) -> MeasuresRateOfTravel(x,y,z))", "score": 0}
{"id": "eqasc_validation_806", "prediction": "all x.(Speedometer(x) -> MeasuresSpeedOfTravel(x))", "score": 0}
{"id": "eqasc_validation_806", "prediction": "all x y.((Speedometer(x) & MeasuresRateOfTravel(x,y)) -> MeasuresRateOfTravel(x,y))", "score": 0}
{"id": "eqasc_validation_807", "prediction": "all x.(Speed(x) -> MeasureOfMotion(x))", "score": 0}
{"id": "eqasc_validation_807", "prediction": "all x.(Speed(x) -> MeasuresMotion(x))", "score": 0}
{"id": "eqasc_validation_807", "prediction": "all x y.((Speed(x) & Motion(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_807", "prediction": "All x.(Speed(x) -> MeasureOfMotion(x))", "score": -1}
{"id": "eqasc_validation_807", "prediction": "all x y.((Speed(x) & Motion(y)) -> Measure(x,y))", "score": 0}
{"id": "eqasc_validation_807", "prediction": "All x.(Speed(x) -> MeasuresMotion(x))", "score": -1}
{"id": "eqasc_validation_807", "prediction": "(MeasuresMotion(Speed) & MeasuresMotion(Speed))", "score": 0}
{"id": "eqasc_validation_807", "prediction": "all x y.((Speed(x) & Motion(y)) -> Measured(x,y))", "score": 0}
{"id": "eqasc_validation_807", "prediction": "(MeasuresMotion(Speed) -> MeasuresMotion(Speed))", "score": 0}
{"id": "eqasc_validation_807", "prediction": "all x.(Speed(x) -> MeasuredOfMotion(x))", "score": 0}
{"id": "eqasc_validation_807", "prediction": "(MeasuresSpeed(Speed) & MeasuresMotion(Speed))", "score": 0}
{"id": "eqasc_validation_807", "prediction": "(MeasuresMotion(Speed) & MeasuresMotion(Speed,Motion))", "score": 0}
{"id": "eqasc_validation_808", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedbackOnMotion(x,y))", "score": 0}
{"id": "eqasc_validation_808", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> GivesFeedbackOnMotion(x,y,z))", "score": 0}
{"id": "eqasc_validation_808", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> GivesFeedbackOnMeasureOfMotion(x,y,z))", "score": 0}
{"id": "eqasc_validation_808", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedbackOnMeasureOfMotion(x,y))", "score": 0}
{"id": "eqasc_validation_808", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> GivesFeedback(x,y,z))", "score": 0}
{"id": "eqasc_validation_808", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z) & MeasureOfMotion(y,z)) -> GivesFeedbackOnMotion(x,y,z))", "score": 0}
{"id": "eqasc_validation_808", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedback(x,y))", "score": 0}
{"id": "eqasc_validation_808", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z) & MeasuresMotion(y,z)) -> GivesFeedbackOnMotion(x,y,z))", "score": 0}
{"id": "eqasc_validation_808", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z) & MeasureOfMotion(y,z)) -> GivesFeedback(x,y,z))", "score": 0}
{"id": "eqasc_validation_808", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedbackOnMotionOfVehicle(x,y))", "score": 0}
{"id": "eqasc_validation_808", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z) & MeasuresMotion(y,z)) -> GivesFeedback(x,y,z))", "score": 0}
{"id": "eqasc_validation_808", "prediction": "all x y.((Speedometer(x) & Driver(y) & MeasureOfMotion(y,x)) -> GivesFeedbackOnMotion(x,y))", "score": 0}
{"id": "eqasc_validation_808", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> (GivesFeedbackOnMotion(x,y,z) & MeasuresMotionOfVehicle(y,z)))", "score": 0}
{"id": "eqasc_validation_808", "prediction": "all x y.((Speedometer(x) & Driver(y) & MeasureOfMotion(y,x)) -> GivesFeedback(x,y))", "score": 0}
{"id": "eqasc_validation_808", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> (GivesFeedbackOnMotion(x,y,z) & MeasuresMotion(y,z)))", "score": 0}
{"id": "eqasc_validation_808", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z) & MeasuresMotion(x,y,z)) -> GivesFeedbackOnMotion(x,y,z))", "score": 0}
{"id": "eqasc_validation_809", "prediction": "all x.(Speedometer(x) -> ShowsMaxSpeed(x,90))", "score": 0}
{"id": "eqasc_validation_809", "prediction": "All x.(Speedometer(x) -> ShowsMaxSpeed(x,90))", "score": -1}
{"id": "eqasc_validation_809", "prediction": "all x y.((Speedometer(x) & Speed(y)) -> ShowsMaxSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_809", "prediction": "all x y.((Speedometer(x) & Speedometer(y)) -> ShowsMaxSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_809", "prediction": "all x.(Speedometer(x) -> ShowsMaxSpeedOf(x,90))", "score": 0}
{"id": "eqasc_validation_809", "prediction": "all x.(Speedometer(x) -> ShowsMaxSpeedOf90(x))", "score": 0}
{"id": "eqasc_validation_809", "prediction": "all x y.((Speedometer(x) & Speed(y)) -> ShowsMaxSpeedOf(x,y))", "score": 0}
{"id": "eqasc_validation_809", "prediction": "all x y.((Speedometer(x) & Speedometer(y)) -> ShowsMaxSpeedOf(x,y))", "score": 0}
{"id": "eqasc_validation_809", "prediction": "all x.(Speedometer(x) -> ShowsMaxSpeedOf90MPH(x))", "score": 0}
{"id": "eqasc_validation_809", "prediction": "All x y.((Speedometer(x) & Speed(y)) -> ShowsMaxSpeed(x,y))", "score": -1}
{"id": "eqasc_validation_809", "prediction": "All x.(Speedometer(x) -> ShowsMaxSpeedOf(x,90))", "score": -1}
{"id": "eqasc_validation_809", "prediction": "all x.(Speedometer(x) -> ShowsMaxSpeedOf90mph(x))", "score": 0}
{"id": "eqasc_validation_809", "prediction": "All x.(Speedometer(x) -> ShowsMaxSpeedOf90(x))", "score": -1}
{"id": "eqasc_validation_809", "prediction": "All x y.((Speedometer(x) & Speed(y)) -> ShowsMaxSpeedOf(x,y))", "score": -1}
{"id": "eqasc_validation_809", "prediction": "All x.(Speedometer(x) -> MaximumSpeed(x,90))", "score": -1}
{"id": "eqasc_validation_809", "prediction": "all x.(Speedometer(x) -> ShowsMaxSpeedOf90Php(x))", "score": 0}
{"id": "eqasc_validation_810", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> ShowsMPH(x,y))", "score": 0}
{"id": "eqasc_validation_810", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> ShowsMPH(x,y,z))", "score": 0}
{"id": "eqasc_validation_810", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> ShowsMPH(y,z))", "score": 0}
{"id": "eqasc_validation_810", "prediction": "all x y z.((Speedometer(x) & Vehicle(y) & Driver(z)) -> ShowsMPH(x,y,z))", "score": 0}
{"id": "eqasc_validation_810", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z) & ShowsMPH(y,z)) -> ShowsMPH(y,z))", "score": 0}
{"id": "eqasc_validation_810", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z) & ShowsMPH(x,y,z)) -> ShowsMPH(y,z))", "score": 0}
{"id": "eqasc_validation_810", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> ShowsMPH(y,x))", "score": 0}
{"id": "eqasc_validation_810", "prediction": "all x y.((Speedometer(x) & Vehicle(y)) -> ShowsMPH(x,y))", "score": 0}
{"id": "eqasc_validation_810", "prediction": "all x y z w.((Speedometer(x) & Driver(y) & Vehicle(z) & MPH(w)) -> ShowsMPH(y,z,w))", "score": 0}
{"id": "eqasc_validation_810", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z) & ShowsMPH(y,z)) -> ShowsMPH(x,y,z))", "score": 0}
{"id": "eqasc_validation_810", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> (ShowsMPH(y,z) & ShowsMPH(y,z)))", "score": 0}
{"id": "eqasc_validation_810", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> ShowsMPH(x,z))", "score": 0}
{"id": "eqasc_validation_810", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z) & ShowsMPH(x,y,z)) -> ShowsMPH(x,y,z))", "score": 0}
{"id": "eqasc_validation_810", "prediction": "all x y.((Speedometer(x) & Driver(y) & Vehicle(z)) -> ShowsMPH(x,y,z))", "score": 0}
{"id": "eqasc_validation_810", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z) & DisplaysMPH(y,z)) -> ShowsMPH(y,z))", "score": 0}
{"id": "eqasc_validation_810", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> DisplaysMPH(x,y,z))", "score": 0}
{"id": "eqasc_validation_811", "prediction": "all x.(Vehicle(x) -> ReducesSpeedAtRoadBends(x))", "score": 0}
{"id": "eqasc_validation_811", "prediction": "all x y.((Vehicle(x) & RoadBend(y)) -> ReducesSpeedAt(x,y))", "score": 0}
{"id": "eqasc_validation_811", "prediction": "all x y z.((Vehicle(x) & RoadBend(y) & RoadBend(z)) -> ReducesSpeedAt(x,y,z))", "score": 0}
{"id": "eqasc_validation_811", "prediction": "all x y.((Vehicle(x) & RoadBend(y)) -> ReducesSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_811", "prediction": "all x y z.((Vehicle(x) & RoadBend(y) & RoadBend(z)) -> ReducesSpeed(x,y,z))", "score": 0}
{"id": "eqasc_validation_811", "prediction": "all x y.((Vehicle(x) & RoadBend(y)) -> ReduceSpeedAt(x,y))", "score": 0}
{"id": "eqasc_validation_811", "prediction": "all x.(Vehicle(x) -> ReduceSpeedAtRoadBends(x))", "score": 0}
{"id": "eqasc_validation_811", "prediction": "all x.((Vehicle(x) & RoadBend(x)) -> ReducesSpeedAt(x,y))", "score": 0}
{"id": "eqasc_validation_811", "prediction": "all x.((Vehicle(x) & RoadBend(y)) -> ReducesSpeedAt(x,y))", "score": 0}
{"id": "eqasc_validation_811", "prediction": "all x y z.((Vehicle(x) & RoadBend(y) & RoadBend(z)) -> ReduceSpeedAt(x,y,z))", "score": 0}
{"id": "eqasc_validation_811", "prediction": "all x y z.((Vehicle(x) & RoadBend(y) & RoadBend(z)) -> ReducesSpeedAt(x,y))", "score": 0}
{"id": "eqasc_validation_811", "prediction": "all x.(Vehicle(x) -> ReducesSpeedAtBends(x))", "score": 0}
{"id": "eqasc_validation_811", "prediction": "all x y.((Vehicle(x) & RoadBend(y)) -> ReducesSpeedAtBend(x,y))", "score": 0}
{"id": "eqasc_validation_811", "prediction": "all x.((Vehicle(x) & RoadBend(x)) -> ReducesSpeedAtBend(x))", "score": 0}
{"id": "eqasc_validation_811", "prediction": "all x.((Vehicle(x) & RoadBend(x)) -> ReducesSpeed(x))", "score": 0}
{"id": "eqasc_validation_811", "prediction": "all x.((Vehicle(x) & RoadBend(x)) -> ReducesSpeedAt(x,RoadBends))", "score": 0}
{"id": "eqasc_validation_812", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> NavigatesRoadBends(x,y))", "score": 0}
{"id": "eqasc_validation_812", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> HelpsNavigateRoadBends(x,y))", "score": 0}
{"id": "eqasc_validation_812", "prediction": "all x y z.((Speedometer(x) & Driver(y) & RoadBend(z)) -> HelpsNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_812", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> CanHelpNavigateRoadBends(x,y))", "score": 0}
{"id": "eqasc_validation_812", "prediction": "all x y z.((Speedometer(x) & Driver(y) & RoadBend(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_812", "prediction": "all x y z.((Speedometer(x) & Driver(y) & RoadBend(z)) -> CanHelpNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_812", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> NavigatesRoadBends(y,x))", "score": 0}
{"id": "eqasc_validation_812", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> NavigateRoadBends(x,y))", "score": 0}
{"id": "eqasc_validation_812", "prediction": "all x y z.((Speedometer(x) & Driver(y) & RoadBend(z)) -> Navigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_812", "prediction": "all x y z.((Speedometer(x) & Driver(y) & RoadBends(z)) -> HelpsNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_812", "prediction": "all x y z.((Speedometer(x) & Driver(y) & RoadBends(z)) -> CanHelpNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_812", "prediction": "all x y z.((Speedometer(x) & Driver(y) & RoadBends(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_812", "prediction": "all x y z.((Speedometer(x) & Driver(y) & RoadBend(z) & Navigates(y,z)) -> CanHelp(x,y,z))", "score": 0}
{"id": "eqasc_validation_812", "prediction": "all x y z.((Speedometer(x) & Driver(y) & RoadBend(z) & Navigates(y,z)) -> HelpsNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_812", "prediction": "all x.(Speedometer(x) -> HelpsDriverNavigateRoadBends(x))", "score": 0}
{"id": "eqasc_validation_812", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> NavigateRoadBends(y,x))", "score": 0}
{"id": "eqasc_validation_813", "prediction": "all x.(Speed(x) -> MagnitudeOfVelocity(x))", "score": 0}
{"id": "eqasc_validation_813", "prediction": "all x.(Speed(x) -> MagnitudeOfVibration(x))", "score": 0}
{"id": "eqasc_validation_813", "prediction": "all x.(Speed(x) -> MagnitudeOfVoice(x))", "score": 0}
{"id": "eqasc_validation_813", "prediction": "All x.(Speed(x) -> MagnitudeOfVelocity(x))", "score": -1}
{"id": "eqasc_validation_813", "prediction": "All x.(Speed(x) -> MagnitudeOfVibration(x))", "score": -1}
{"id": "eqasc_validation_813", "prediction": "all x y.((Speed(x) & Velocity(y)) -> Magnitude(x,y))", "score": 0}
{"id": "eqasc_validation_813", "prediction": "all x.(Speed(x) -> MagnitudeOfVast(x))", "score": 0}
{"id": "eqasc_validation_813", "prediction": "all x y.((Speed(x) & Speed(y)) -> MagnitudeOfVelocity(x,y))", "score": 0}
{"id": "eqasc_validation_813", "prediction": "all x y.((Speed(x) & Speed(y)) -> MagnitudeOfVibration(x,y))", "score": 0}
{"id": "eqasc_validation_813", "prediction": "all x.(Speed(x) -> MagnitudeOfVisibility(x))", "score": 0}
{"id": "eqasc_validation_813", "prediction": "all x.(Speed(x) -> MagnitudeOfVueltuity(x))", "score": 0}
{"id": "eqasc_validation_813", "prediction": "all x y.((Speed(x) & Speed(y)) -> Magnitude(x,y))", "score": 0}
{"id": "eqasc_validation_813", "prediction": "exists x.(Speed(x) & MagnitudeOfVelocity(x))", "score": 0}
{"id": "eqasc_validation_814", "prediction": "all x y.((Speedometer(x) & Vehicle(y)) -> GivesFeedbackOnVelocity(x,y))", "score": 0}
{"id": "eqasc_validation_814", "prediction": "all x y z.((Speedometer(x) & Vehicle(y) & Vehicle(z)) -> GivesFeedbackOnVelocity(x,y,z))", "score": 0}
{"id": "eqasc_validation_814", "prediction": "all x y.((Speedometer(x) & Vehicle(y)) -> GivesFeedbackOnVibration(x,y))", "score": 0}
{"id": "eqasc_validation_814", "prediction": "all x y.((Speedometer(x) & Vehicle(y)) -> GivesFeedback(x,y))", "score": 0}
{"id": "eqasc_validation_814", "prediction": "all x.(Speedometer(x) -> (GivesFeedbackOnVelocity(x) & Vehicle(x)))", "score": 0}
{"id": "eqasc_validation_814", "prediction": "all x.(Speedometer(x) -> GivesFeedbackOnVelocityOfVehicle(x))", "score": 0}
{"id": "eqasc_validation_814", "prediction": "all x.(Speedometer(x) -> GivesFeedbackOnVelocity(x))", "score": 0}
{"id": "eqasc_validation_814", "prediction": "all x y z.((Speedometer(x) & Vehicle(y) & Vehicle(z)) -> GivesFeedbackOnVibration(x,y,z))", "score": 0}
{"id": "eqasc_validation_814", "prediction": "all x y.((Speedometer(x) & Vehicle(y) & GivesFeedbackOnVelocity(x,y)) -> Speedometer(x))", "score": 0}
{"id": "eqasc_validation_814", "prediction": "all x y z.((Speedometer(x) & Vehicle(y) & Vehicle(z)) -> GivesFeedback(x,y,z))", "score": 0}
{"id": "eqasc_validation_814", "prediction": "all x y.((Speedometer(x) & Vehicle(y)) -> (GivesFeedbackOnVelocity(x,y) & GivesFeedbackOnVelocity(x,y)))", "score": 0}
{"id": "eqasc_validation_814", "prediction": "all x y.((Speedometer(x) & Vehicle(y)) -> (GivesFeedbackOnVelocity(x,y) | GivesFeedbackOnVelocity(x,y)))", "score": 0}
{"id": "eqasc_validation_814", "prediction": "all x y.((Speedometer(x) & Vehicle(y)) -> GivesFeedbackOnVoice(x,y))", "score": 0}
{"id": "eqasc_validation_814", "prediction": "all x y.((Speedometer(x) & Vehicle(y)) -> GivesVelocityFeedback(x,y))", "score": 0}
{"id": "eqasc_validation_814", "prediction": "all x y.((Speedometer(x) & Vehicle(y)) -> ProvidesFeedbackOnVelocity(x,y))", "score": 0}
{"id": "eqasc_validation_814", "prediction": "all x.(Speedometer(x) -> (GivesFeedbackOnVibration(x) & Vehicle(x)))", "score": 0}
{"id": "eqasc_validation_815", "prediction": "all x.(VehicleSpeed(x) -> CheckedByRadar(x))", "score": 0}
{"id": "eqasc_validation_815", "prediction": "all x y.((VehicleSpeed(x) & Radar(y)) -> CheckedBy(x,y))", "score": 0}
{"id": "eqasc_validation_815", "prediction": "all x.(VehicleSpeedCheckedByRadar(x) -> CheckedBy(x))", "score": 0}
{"id": "eqasc_validation_815", "prediction": "all x y.((VehicleSpeed(x) & Radar(y)) -> Checked(x,y))", "score": 0}
{"id": "eqasc_validation_815", "prediction": "all x.(VehicleSpeedCheckedByRadar(x) -> CheckedByRadar(x))", "score": 0}
{"id": "eqasc_validation_815", "prediction": "all x.(VehicleSpeedCheckedByRadar(x) -> VehicleSpeedCheckedByRadar(x))", "score": 0}
{"id": "eqasc_validation_815", "prediction": "all x y z.((VehicleSpeed(x) & Radar(y) & Vehicle(z)) -> CheckedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_815", "prediction": "all x y z.((VehicleSpeed(x) & Radar(y) & Radar(z)) -> Checked(x,y,z))", "score": 0}
{"id": "eqasc_validation_815", "prediction": "all x.(VehicleSpeedCheckedByRadar(x) -> CheckedByVehicle(x))", "score": 0}
{"id": "eqasc_validation_815", "prediction": "all x y z.((VehicleSpeed(x) & Radar(y) & Radar(z)) -> CheckedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_815", "prediction": "all x.(VehicleSpeedChecked(x) -> Radar(x))", "score": 0}
{"id": "eqasc_validation_815", "prediction": "all x.(VehicleSpeedCheckedByRadar(x) -> CheckedBy(x,y))", "score": 0}
{"id": "eqasc_validation_815", "prediction": "all x.(VehicleSpeedCheckedByRadar(x) -> VehicleSpeedCheckedBy(x))", "score": 0}
{"id": "eqasc_validation_815", "prediction": "all x.(VehicleSpeedCheckedByRadar(x) -> VehicleSpeedChecked(x))", "score": 0}
{"id": "eqasc_validation_815", "prediction": "all x.((VehicleSpeed(x) & CheckedByRadar(x)) -> CheckedBy(x))", "score": 0}
{"id": "eqasc_validation_815", "prediction": "all x.((VehicleSpeed(x) & CheckedByRadar(x)) -> CheckedByRadar(x))", "score": 0}
{"id": "eqasc_validation_816", "prediction": "all x y.((Speedometer(x) & Radar(y)) -> GivesSameReading(x,y))", "score": 0}
{"id": "eqasc_validation_816", "prediction": "all x y.((Speedometer(x) & Radar(y)) -> SameReading(x,y))", "score": 0}
{"id": "eqasc_validation_816", "prediction": "all x.(Speedometer(x) -> SameReadingAsRadar(x))", "score": 0}
{"id": "eqasc_validation_816", "prediction": "all x y.((Speedometer(x) & Radar(y)) -> SameReadingAs(x,y))", "score": 0}
{"id": "eqasc_validation_816", "prediction": "all x.(Speedometer(x) -> GivesSameReadingAsRadar(x))", "score": 0}
{"id": "eqasc_validation_816", "prediction": "all x y.((Speedometer(x) & Radar(y)) -> GivesSameReadingAs(x,y))", "score": 0}
{"id": "eqasc_validation_816", "prediction": "all x y z.((Speedometer(x) & Radar(y) & Reading(z)) -> GivesSameReading(x,y,z))", "score": 0}
{"id": "eqasc_validation_816", "prediction": "all x y z.((Speedometer(x) & Radar(y) & Reading(z)) -> GivesSameReading(x,z))", "score": 0}
{"id": "eqasc_validation_816", "prediction": "all x y.((Speedometer(x) & Radar(y)) -> GivesTheSameReading(x,y))", "score": 0}
{"id": "eqasc_validation_816", "prediction": "all x y z.((Speedometer(x) & Radar(y) & Reading(z)) -> SameReading(x,y,z))", "score": 0}
{"id": "eqasc_validation_816", "prediction": "all x y.((Speedometer(x) & Radar(y) & GivesSameReading(x,y)) -> SameReading(x,y))", "score": 0}
{"id": "eqasc_validation_816", "prediction": "all x y z.((Speedometer(x) & Radar(y) & Reading(z)) -> SameReadingAs(x,y,z))", "score": 0}
{"id": "eqasc_validation_816", "prediction": "all x.(Speedometer(x) -> SameReading(x,Radar))", "score": 0}
{"id": "eqasc_validation_816", "prediction": "all x y z.((Speedometer(x) & Radar(y) & Reading(z)) -> GivesSameReadingAs(x,y,z))", "score": 0}
{"id": "eqasc_validation_816", "prediction": "all x y.((Speedometer(x) & Radar(y)) -> GivesEqualReading(x,y))", "score": 0}
{"id": "eqasc_validation_816", "prediction": "all x y.((Speedometer(x) & Radar(y)) -> SimilarReading(x,y))", "score": 0}
{"id": "eqasc_validation_817", "prediction": "all x.(Odometer(x) -> MeasuresDistances(x))", "score": 0}
{"id": "eqasc_validation_817", "prediction": "all x y.((Odometer(x) & Distance(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_817", "prediction": "all x y z.((Odometer(x) & Distance(y) & Distance(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_817", "prediction": "all x y z.((Odometer(x) & Distance(y) & Distance(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_817", "prediction": "all x y.((Odometer(x) & MeasuresDistances(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_817", "prediction": "all x y.((Odometer(x) & Distance(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_817", "prediction": "all x y.((Odometer(x) & DistanceMeasurement(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_817", "prediction": "all x.(Odometer(x) -> UsedToMeasureDistances(x))", "score": 0}
{"id": "eqasc_validation_817", "prediction": "all x y z.((Odometer(x) & MeasuresDistances(y) & Distance(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_817", "prediction": "all x y.((Odometer(x) & MeasuresDistances(x,y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_817", "prediction": "all x y.((Odometer(x) & MeasuresDistances(y)) -> UsedToMeasureDistances(x,y))", "score": 0}
{"id": "eqasc_validation_817", "prediction": "all x y z.((Odometer(x) & Distance(y) & Distance(z) & Measures(x,y,z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_817", "prediction": "all x y.((Odometer(x) & MeasuresDistances(x)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_817", "prediction": "all x y z.((Odometer(x) & Distance(y) & Distance(z)) -> Measured(x,y,z))", "score": 0}
{"id": "eqasc_validation_817", "prediction": "all x y.((Odometer(x) & MeasuresDistances(x,y)) -> UsedToMeasureDistances(x,y))", "score": 0}
{"id": "eqasc_validation_817", "prediction": "all x y z.((Odometer(x) & Distance(y) & Distance(z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_818", "prediction": "all x.((VehicleSpeed(x) & Average(x,0.3)) -> Rises(x))", "score": -1}
{"id": "eqasc_validation_818", "prediction": "all x.((VehicleSpeed(x) & Average(x,0.3)) -> RisesBy(x,0.3))", "score": -1}
{"id": "eqasc_validation_818", "prediction": "all x.(AverageVehicleSpeed(x) -> (Rises(x,0.3) & -Rises(x,0.3)))", "score": -1}
{"id": "eqasc_validation_818", "prediction": "all x.(AverageVehicleSpeed(x) -> (RisesBy(x,0.3) & -RisesBy(x,0.3)))", "score": -1}
{"id": "eqasc_validation_818", "prediction": "all x.(AverageVehicleSpeed(x) -> (Rises(x,0.3) & Rises(x,0.3)))", "score": -1}
{"id": "eqasc_validation_818", "prediction": "all x.(AverageVehicleSpeed(x) -> (RisesBy(x,0.3) & RisesBy(x,0.3)))", "score": -1}
{"id": "eqasc_validation_818", "prediction": "all x.(AverageVehicleSpeed(x) -> (Rises(x,0.3) | Rises(x,0.3)))", "score": -1}
{"id": "eqasc_validation_818", "prediction": "all x y.((AverageVehicleSpeed(x) & MilesPerHour(y)) -> Rises(x,y))", "score": 0}
{"id": "eqasc_validation_818", "prediction": "all x y.((VehicleSpeed(x) & Average(y)) -> (Rises(x,y) & -Rises(x,y)))", "score": 0}
{"id": "eqasc_validation_818", "prediction": "all x.(AverageVehicleSpeed(x) -> Rises(x,0.3))", "score": -1}
{"id": "eqasc_validation_818", "prediction": "all x.(AverageVehicleSpeed(x) -> RisesBy(x,0.3))", "score": -1}
{"id": "eqasc_validation_818", "prediction": "all x.((VehicleSpeed(x) & -0.3MPH(x)) -> Average(x))", "score": -1}
{"id": "eqasc_validation_818", "prediction": "all x y.((AverageVehicleSpeed(x) & MilesPerHour(y)) -> RisesBy(x,y))", "score": 0}
{"id": "eqasc_validation_818", "prediction": "all x.((VehicleSpeed(x) & Average(x,0.3)) -> Rises(x,0.3))", "score": -1}
{"id": "eqasc_validation_819", "prediction": "all x.(Speedometer(x) -> MeasuresMilesPerHour(x))", "score": 0}
{"id": "eqasc_validation_819", "prediction": "all x y.((Speedometer(x) & MilesPerHour(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_819", "prediction": "all x y z.((Speedometer(x) & MilesPerHour(y) & Hour(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_819", "prediction": "all x y.((Speedometer(x) & MilePerHour(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_819", "prediction": "all x y z.((Speedometer(x) & MilesPerHour(y) & MilesPerHour(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_819", "prediction": "all x y.((Speedometer(x) & MeasuresMilesPerHour(x)) -> MeasuresMilesPerHour(x,y))", "score": 0}
{"id": "eqasc_validation_819", "prediction": "all x.(Speedometer(x) -> MeasuresMilesPerHours(x))", "score": 0}
{"id": "eqasc_validation_819", "prediction": "all x y z.((Speedometer(x) & MilesPerHour(y) & Speedometer(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_819", "prediction": "all x y.((Speedometer(x) & Hour(y)) -> MeasuresMilesPerHour(x,y))", "score": 0}
{"id": "eqasc_validation_819", "prediction": "all x y.((Speedometer(x) & MilesPerHours(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_819", "prediction": "all x y.((Speedometer(x) & MeasuresMilesPerHour(x,y)) -> MeasuresMilesPerHour(x,y))", "score": 0}
{"id": "eqasc_validation_819", "prediction": "all x y z.((Speedometer(x) & MilesPerHour(y) & Hour(z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_819", "prediction": "all x y z.((Speedometer(x) & MilesPerHour(y) & Hour(z) & Measures(x,y,z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_819", "prediction": "all x y z.((Speedometer(x) & MilesPerHour(y) & Hour(z) & Measures(x,y)) -> Measures(x,z))", "score": 0}
{"id": "eqasc_validation_819", "prediction": "all x y z.((Speedometer(x) & MilesPerHour(y) & Time(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_819", "prediction": "all x y z.((Speedometer(x) & MilesPerHour(y) & Hour(z) & Measures(x,y,z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_820", "prediction": "all x y z.((Driver(x) & Car(y) & Speedometer(z)) -> FeedsFeedback(x,y,z))", "score": 0}
{"id": "eqasc_validation_820", "prediction": "all x y z.((Driver(x) & Car(y) & Speedometer(z)) -> FeedsFeedbackOnSpeed(x,y,z))", "score": 0}
{"id": "eqasc_validation_820", "prediction": "all x y.((Driver(x) & Car(y)) -> FeedsFeedbackOnSpeedWithSpeedometer(x,y))", "score": 0}
{"id": "eqasc_validation_820", "prediction": "all x y.((Driver(x) & Car(y)) -> FeedsFeedback(x,y))", "score": 0}
{"id": "eqasc_validation_820", "prediction": "all x y z.((Driver(x) & Car(y) & Speedometer(z)) -> FeedsFeedbackOnSpeedWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_820", "prediction": "all x y.((Driver(x) & Car(y)) -> FeedsFeedbackOnSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_820", "prediction": "all x y.((Driver(x) & Car(y)) -> FeedsFeedbackWithSpeedometer(x,y))", "score": 0}
{"id": "eqasc_validation_820", "prediction": "all x y z.((Driver(x) & Speedometer(y) & Car(z)) -> FeedsFeedback(x,y,z))", "score": 0}
{"id": "eqasc_validation_820", "prediction": "all x y z.((Driver(x) & Car(y) & Speedometer(z)) -> FeedsFeedbackOnSpeedWithFeedback(x,y,z))", "score": 0}
{"id": "eqasc_validation_820", "prediction": "all x y z.((Driver(x) & Car(y) & Speedometer(z)) -> FeedsFeedbackWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_820", "prediction": "all x y z.((Driver(x) & Car(y) & Speedometer(z)) -> FeedsFeedbackOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_820", "prediction": "all x y z.((Driver(x) & Car(y) & Speedometer(z)) -> FeedsFeedbackOnSpeedWithSpeedometer(x,y,z))", "score": 0}
{"id": "eqasc_validation_820", "prediction": "all x y z.((Driver(x) & Speedometer(y) & Car(z)) -> FeedsFeedbackOnSpeed(x,y,z))", "score": 0}
{"id": "eqasc_validation_820", "prediction": "all x y.((Driver(x) & Speedometer(y)) -> FeedsFeedbackOnSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_820", "prediction": "all x y.((Driver(x) & Car(y) & Speedometer(z)) -> FeedsFeedbackOnSpeed(x,y,z))", "score": 0}
{"id": "eqasc_validation_820", "prediction": "all x y.((Driver(x) & Car(y) & FeedsFeedback(x,y)) -> Speedometer(x))", "score": 0}
{"id": "eqasc_validation_821", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> TellsHowFastVehicleGoing(x,y))", "score": 0}
{"id": "eqasc_validation_821", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> TellsHowFast(x,y,z))", "score": 0}
{"id": "eqasc_validation_821", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> TellsHowFastVehicleGoes(x,y))", "score": 0}
{"id": "eqasc_validation_821", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> TellsFast(x,y,z))", "score": 0}
{"id": "eqasc_validation_821", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> TellsHowFastVehicle(x,y))", "score": 0}
{"id": "eqasc_validation_821", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> TellsFastVehicleGoing(x,y))", "score": 0}
{"id": "eqasc_validation_821", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> TellsFastVehicle(x,y))", "score": 0}
{"id": "eqasc_validation_821", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> TellsFast(x,y))", "score": 0}
{"id": "eqasc_validation_821", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> TellsHowFast(y,z))", "score": 0}
{"id": "eqasc_validation_821", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> Tells(x,y,z))", "score": 0}
{"id": "eqasc_validation_821", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> TellsFastGoing(x,y,z))", "score": 0}
{"id": "eqasc_validation_821", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> TellsHowFast(x,z))", "score": 0}
{"id": "eqasc_validation_821", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> Tells(x,y))", "score": 0}
{"id": "eqasc_validation_821", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> TellsFast(x,z))", "score": 0}
{"id": "eqasc_validation_821", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Vehicle(z)) -> TellsFast(y,z))", "score": 0}
{"id": "eqasc_validation_821", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> TellsHowFast(x,y))", "score": 0}
{"id": "eqasc_validation_822", "prediction": "all x.((Driver(x) & -WantsSpeedingTicket(x)) -> -WantsSpeedingTicket(x))", "score": 0}
{"id": "eqasc_validation_822", "prediction": "all x.((Driver(x) & NoSpeedingTicket(x)) -> -WantsToGet(x,y))", "score": 0}
{"id": "eqasc_validation_822", "prediction": "all x.((Driver(x) & -WantsSpeedingTicket(x)) -> -(WantsSpeedingTicket(x) & -WantsSpeedingTicket(x)))", "score": 0}
{"id": "eqasc_validation_822", "prediction": "all x y.((Driver(x) & SpeedingTicket(y)) -> -WantsToGet(x,y))", "score": 0}
{"id": "eqasc_validation_822", "prediction": "all x.((Driver(x) & -HasSpeedingTicket(x)) -> -HasSpeedingTicket(x))", "score": 0}
{"id": "eqasc_validation_822", "prediction": "all x.((Driver(x) & -WantsToGetSpeedingTicket(x)) -> -WantsToGetSpeedingTicket(x))", "score": 0}
{"id": "eqasc_validation_822", "prediction": "all x.((Driver(x) & -WantsSpeedingTicket(x)) -> -(WantsSpeedingTicket(x) & WantsSpeedingTicket(x)))", "score": 0}
{"id": "eqasc_validation_822", "prediction": "all x.(Driver(x) -> -WantsSpeedingTicket(x))", "score": 0}
{"id": "eqasc_validation_822", "prediction": "all x.((Driver(x) & -WantsSpeedingTicket(x)) -> -HasSpeedingTicket(x))", "score": 0}
{"id": "eqasc_validation_822", "prediction": "all x.((Driver(x) & -WantsSpeedingTicket(x)) -> -WantSpeedingTicket(x))", "score": 0}
{"id": "eqasc_validation_822", "prediction": "all x.((Driver(x) & -WantsSpeedingTicket(x)) -> -WantsToGetSpeedingTicket(x))", "score": 0}
{"id": "eqasc_validation_822", "prediction": "all x y.((Driver(x) & Driver(y)) -> -WantsSpeedingTicket(x,y))", "score": 0}
{"id": "eqasc_validation_822", "prediction": "all x.((Driver(x) & -LikesSpeedingTicket(x)) -> -LikesSpeedingTicket(x))", "score": 0}
{"id": "eqasc_validation_822", "prediction": "all x.((Driver(x) & -WantsSpeedingTicket(x)) -> NoDriver(x))", "score": 0}
{"id": "eqasc_validation_822", "prediction": "all x.((Driver(x) & -DrivesSpeedingTicket(x)) -> -WantsToGetSpeedingTicket(x))", "score": 0}
{"id": "eqasc_validation_822", "prediction": "all x.((Driver(x) & -WantsToGetSpeedingTicket(x)) -> -WantsSpeedingTicket(x))", "score": 0}
{"id": "eqasc_validation_823", "prediction": "all x y.((Driver(x) & Speedometer(y)) -> UsesToAvoidTicket(x,y))", "score": 0}
{"id": "eqasc_validation_823", "prediction": "all x y.((Driver(x) & Speedometer(y)) -> AvoidsTicket(x,y))", "score": 0}
{"id": "eqasc_validation_823", "prediction": "all x y z.((Driver(x) & Speedometer(y) & Ticket(z)) -> UsesToAvoid(x,y,z))", "score": 0}
{"id": "eqasc_validation_823", "prediction": "all x.((Driver(x) & UsesSpeedometer(x)) -> AvoidsTicket(x))", "score": 0}
{"id": "eqasc_validation_823", "prediction": "all x.(Driver(x) -> (UsesSpeedometer(x) & AvoidsTicket(x)))", "score": 0}
{"id": "eqasc_validation_823", "prediction": "all x y z.((Driver(x) & Speedometer(y) & Tickets(z)) -> UsesToAvoid(x,y,z))", "score": 0}
{"id": "eqasc_validation_823", "prediction": "all x y z.((Driver(x) & Speedometer(y) & Ticket(z)) -> Avoids(x,y,z))", "score": 0}
{"id": "eqasc_validation_823", "prediction": "all x y.((Driver(x) & Speedometer(y)) -> (UsesToAvoidTicket(x,y)))", "score": 0}
{"id": "eqasc_validation_823", "prediction": "all x y z.((Driver(x) & Speedometer(y) & Ticket(z)) -> (Uses(x,y) & Avoids(x,z)))", "score": 0}
{"id": "eqasc_validation_823", "prediction": "all x y.((Driver(x) & Speedometer(y)) -> (Uses(x,y) & AvoidsTicket(x)))", "score": 0}
{"id": "eqasc_validation_823", "prediction": "all x y z.((Driver(x) & Speedometer(y) & Ticket(z) & Uses(x,y)) -> Avoids(x,z))", "score": 0}
{"id": "eqasc_validation_823", "prediction": "all x y z.((Driver(x) & Speedometer(y) & Ticket(z) & UsesToAvoid(x,y,z)) -> UsesToAvoid(x,y,z))", "score": 0}
{"id": "eqasc_validation_823", "prediction": "all x.(Driver(x) -> UsesSpeedometerToAvoidTicket(x))", "score": 0}
{"id": "eqasc_validation_823", "prediction": "all x y z.((Driver(x) & Speedometer(y) & Tickets(z)) -> Avoids(x,y,z))", "score": 0}
{"id": "eqasc_validation_823", "prediction": "all x y z.((Driver(x) & Speedometer(y) & Ticket(z) & UsesToAvoid(x,y,z)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_823", "prediction": "all x y.((Driver(x) & Speedometer(y)) -> UsesToAvoidTickets(x,y))", "score": 0}
{"id": "eqasc_validation_824", "prediction": "all x.(ExcessiveSpeed(x) -> FactorInManyAccidents(x))", "score": 0}
{"id": "eqasc_validation_824", "prediction": "all x y.((ExcessiveSpeed(x) & Accident(y)) -> FactorIn(x,y))", "score": 0}
{"id": "eqasc_validation_824", "prediction": "all x y z.((ExcessiveSpeed(x) & Accident(y) & Accident(z)) -> FactorIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_824", "prediction": "all x.(ExcessiveSpeed(x) -> ManyAccidents(x))", "score": 0}
{"id": "eqasc_validation_824", "prediction": "all x.(ExcessiveSpeed(x) -> InManyAccidents(x))", "score": 0}
{"id": "eqasc_validation_824", "prediction": "all x y.((ExcessiveSpeed(x) & Accident(y)) -> Factor(x,y))", "score": 0}
{"id": "eqasc_validation_824", "prediction": "all x y z.((ExcessiveSpeed(x) & Accident(y) & Accident(z)) -> Factor(x,y,z))", "score": 0}
{"id": "eqasc_validation_824", "prediction": "all x.((ExcessiveSpeed(x) & ManyAccidents(x)) -> FactorIn(x,y))", "score": 0}
{"id": "eqasc_validation_824", "prediction": "all x.(ExcessiveSpeed(x) -> FactorInMoreAccidents(x))", "score": 0}
{"id": "eqasc_validation_824", "prediction": "all x.((ExcessiveSpeed(x) & InManyAccidents(x)) -> FactorInManyAccidents(x))", "score": 0}
{"id": "eqasc_validation_824", "prediction": "all x.(ExcessiveSpeed(x) -> FactorInMostAccidents(x))", "score": 0}
{"id": "eqasc_validation_824", "prediction": "all x.((ExcessiveSpeed(x) & Accident(x)) -> FactorIn(x,y))", "score": 0}
{"id": "eqasc_validation_824", "prediction": "all x y.((Speed(x) & Accident(y)) -> Excessive(x,y))", "score": 0}
{"id": "eqasc_validation_824", "prediction": "all x.((ExcessiveSpeed(x) & InManyAccidents(x)) -> FactorIn(x,y))", "score": 0}
{"id": "eqasc_validation_825", "prediction": "all x.(Speedometer(x) -> HelpsPreventAccidents(x))", "score": 0}
{"id": "eqasc_validation_825", "prediction": "all x.(Speedometer(x) -> CanHelpPreventAccidents(x))", "score": 0}
{"id": "eqasc_validation_825", "prediction": "all x.(Speedometer(x) -> PreventsAccidents(x))", "score": 0}
{"id": "eqasc_validation_825", "prediction": "all x.(Speedometer(x) -> CanPreventAccidents(x))", "score": 0}
{"id": "eqasc_validation_825", "prediction": "all x y.((Speedometer(x) & Accident(y)) -> HelpsPrevent(x,y))", "score": 0}
{"id": "eqasc_validation_825", "prediction": "all x y.((Speedometer(x) & Accident(y)) -> CanHelpPrevent(x,y))", "score": 0}
{"id": "eqasc_validation_825", "prediction": "all x y z.((Speedometer(x) & Accident(y) & Accident(z)) -> HelpsPrevent(x,y,z))", "score": 0}
{"id": "eqasc_validation_825", "prediction": "all x y z.((Speedometer(x) & Accident(y) & Accident(z)) -> CanHelpPrevent(x,y,z))", "score": 0}
{"id": "eqasc_validation_825", "prediction": "all x.(Speedometer(x) -> (HelpsPreventAccidents(x) & HelpsPreventAccidents(x)))", "score": 0}
{"id": "eqasc_validation_825", "prediction": "all x.(Speedometer(x) -> (HelpsPreventAccidents(x) | HelpsPreventAccidents(x)))", "score": 0}
{"id": "eqasc_validation_825", "prediction": "all x y.((Speedometer(x) & Accident(y)) -> CanPrevent(x,y))", "score": 0}
{"id": "eqasc_validation_825", "prediction": "all x.(Speedometer(x) -> (HelpsPreventAccidents(x)))", "score": 0}
{"id": "eqasc_validation_825", "prediction": "all x y z.((Speedometer(x) & Accident(y) & Accident(z)) -> CanPrevent(x,y,z))", "score": 0}
{"id": "eqasc_validation_825", "prediction": "all x.(Speedometer(x) -> HelpsPreventAccounts(x))", "score": 0}
{"id": "eqasc_validation_825", "prediction": "all x.(Speedometer(x) -> (HelpsPreventAccidents(x) & -HelpsPreventAccidents(x)))", "score": 0}
{"id": "eqasc_validation_825", "prediction": "all x y.((Speedometer(x) & Accident(y)) -> Prevents(x,y))", "score": 0}
{"id": "eqasc_validation_826", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Truck(z)) -> GivesFeedbackOnSpeed(x,y,z))", "score": 6}
{"id": "eqasc_validation_826", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedbackOnSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_826", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedbackOnSpeedOfTruck(x,y))", "score": 0}
{"id": "eqasc_validation_826", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Truck(z)) -> GivesFeedback(x,y,z))", "score": 4}
{"id": "eqasc_validation_826", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Truck(z)) -> GivesFeedbackOnSpeedOf(x,y,z))", "score": 2}
{"id": "eqasc_validation_826", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedbackOnSpeedOnTruck(x,y))", "score": 0}
{"id": "eqasc_validation_826", "prediction": "all x y.((Speedometer(x) & Driver(y) & Truck(z)) -> GivesFeedbackOnSpeed(x,y,z))", "score": 6}
{"id": "eqasc_validation_826", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Truck(z)) -> GivesFeedbackOnSpeedOn(x,y,z))", "score": 2}
{"id": "eqasc_validation_826", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Truck(z) & GivesFeedbackOnSpeed(x,y,z)) -> Speedometer(x))", "score": 0}
{"id": "eqasc_validation_826", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedback(x,y))", "score": 0}
{"id": "eqasc_validation_826", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Truck(z)) -> GivesFeedbackOnSpeedOfFeedback(x,y,z))", "score": 0}
{"id": "eqasc_validation_826", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Truck(z)) -> ProvidesFeedbackOnSpeed(x,y,z))", "score": 2}
{"id": "eqasc_validation_826", "prediction": "all x y.((Speedometer(x) & Driver(y) & Truck(y)) -> GivesFeedbackOnSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_826", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Truck(z)) -> GivesFeedbackOnSpeedOfTruck(x,y,z))", "score": 0}
{"id": "eqasc_validation_826", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Truck(z)) -> GivesFeedbackOnSpeedOfFast(x,y,z))", "score": 0}
{"id": "eqasc_validation_826", "prediction": "all x y z.((Speedometer(x) & Driver(y) & Truck(z)) -> GivesFeedbackOnSpeed(y,z))", "score": 0}
{"id": "eqasc_validation_827", "prediction": "all x.(PolarBear(x) -> RequiresColdEnvironment(x))", "score": 0}
{"id": "eqasc_validation_827", "prediction": "all x y.((PolarBear(x) & ColdEnvironment(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_827", "prediction": "all x.((PolarBear(x) & ColdEnvironment(x)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_827", "prediction": "all x y z.((PolarBear(x) & ColdEnvironment(y) & Environment(z)) -> Requires(x,y,z))", "score": 0}
{"id": "eqasc_validation_827", "prediction": "all x.((PolarBear(x) & ColdEnvironment(x)) -> Requires(x))", "score": 0}
{"id": "eqasc_validation_827", "prediction": "all x y z.((PolarBear(x) & ColdEnvironment(y) & ColdEnvironment(z)) -> Requires(x,y,z))", "score": 0}
{"id": "eqasc_validation_827", "prediction": "all x y z.((PolarBear(x) & ColdEnvironment(y) & Environment(z)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_827", "prediction": "all x.((PolarBear(x) & RequiresColdEnvironment(x)) -> PolarBearRequiresColdEnvironment(x))", "score": 0}
{"id": "eqasc_validation_827", "prediction": "all x.((PolarBear(x) & ColdEnvironment(x)) -> Requires(x,x))", "score": 0}
{"id": "eqasc_validation_827", "prediction": "all x y z.((PolarBear(x) & ColdEnvironment(y) & Environment(z) & Requires(x,y)) -> Requires(x,z))", "score": 0}
{"id": "eqasc_validation_827", "prediction": "all x y z.((PolarBear(x) & ColdEnvironment(y) & ColdEnvironment(z)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_827", "prediction": "all x y.((PolarBear(x) & ColdEnvironment(y) & Requires(x,y)) -> PolarBearRequires(x,y))", "score": 0}
{"id": "eqasc_validation_827", "prediction": "all x y z.((PolarBear(x) & ColdEnvironment(y) & Environment(z) & Requires(x,y,z)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_827", "prediction": "all x.(PlasticBear(x) -> RequiresColdEnvironment(x))", "score": 0}
{"id": "eqasc_validation_827", "prediction": "all x y z.((PolarBear(x) & ColdEnvironment(y) & Environment(z) & Requires(x,y,z)) -> Requires(x,y,z))", "score": 0}
{"id": "eqasc_validation_827", "prediction": "all x.((PolarBear(x) & ColdEnvironment(x)) -> Requires(x,z))", "score": 0}
{"id": "eqasc_validation_828", "prediction": "all x.(PolarBear(x) -> GrowsFurToSurviveInCold(x))", "score": 0}
{"id": "eqasc_validation_828", "prediction": "all x.(PolarBear(x) -> (GrowsFur(x) & SurvivesInCold(x)))", "score": 0}
{"id": "eqasc_validation_828", "prediction": "all x y.((PolarBear(x) & Fur(y)) -> GrowsToSurviveInCold(x,y))", "score": 0}
{"id": "eqasc_validation_828", "prediction": "all x y.((PolarBear(x) & Cold(y)) -> GrowsFurToSurvive(x,y))", "score": 0}
{"id": "eqasc_validation_828", "prediction": "all x.(PolarBear(x) -> GrowsFur(x))", "score": 0}
{"id": "eqasc_validation_828", "prediction": "all x.(PolarBear(x) -> GrowsFurToSurvive(x))", "score": 0}
{"id": "eqasc_validation_828", "prediction": "all x.(PolarBear(x) -> (GrowsFur(x) & SurvivesCold(x)))", "score": 0}
{"id": "eqasc_validation_828", "prediction": "all x y z.((PolarBear(x) & Fur(y) & Cold(z)) -> GrowsToSurvive(x,y,z))", "score": 0}
{"id": "eqasc_validation_828", "prediction": "all x y.((PolarBear(x) & Fur(y)) -> GrowsToSurvive(x,y))", "score": 0}
{"id": "eqasc_validation_828", "prediction": "all x y.((PolarBear(x) & Cold(y)) -> GrowsFur(x,y))", "score": 0}
{"id": "eqasc_validation_828", "prediction": "all x y z.((PolarBear(x) & Fur(y) & Cold(z)) -> GrowsForSurvival(x,y,z))", "score": 0}
{"id": "eqasc_validation_828", "prediction": "all x.((PolarBear(x) & GrowsFur(x)) -> SurvivesInCold(x))", "score": 0}
{"id": "eqasc_validation_828", "prediction": "all x.(PolarBear(x) -> (GrowFur(x) & SurvivesInCold(x)))", "score": 0}
{"id": "eqasc_validation_828", "prediction": "all x.(PolarBear(x) -> (GrowsFurToSurviveInCold(x)))", "score": 0}
{"id": "eqasc_validation_828", "prediction": "all x y.((PolarBear(x) & Fur(y)) -> GrowsForSurvival(x,y))", "score": 0}
{"id": "eqasc_validation_829", "prediction": "all x y z.((PolarBear(x) & Fur(y) & Environment(z)) -> GrowsToSurvive(x,y,z))", "score": 0}
{"id": "eqasc_validation_829", "prediction": "all x.((PolarBear(x) & GrowsFur(x)) -> SurvivesInEnvironment(x))", "score": 0}
{"id": "eqasc_validation_829", "prediction": "all x y.((PolarBear(x) & Fur(y)) -> GrowsToSurvive(x,y))", "score": 0}
{"id": "eqasc_validation_829", "prediction": "all x y.((PolarBear(x) & Fur(y)) -> GrowsToSurviveInEnvironment(x,y))", "score": 0}
{"id": "eqasc_validation_829", "prediction": "all x y z.((PolarBear(x) & Fur(y) & Environment(z)) -> GrowsForSurvival(x,y,z))", "score": 0}
{"id": "eqasc_validation_829", "prediction": "all x.(PolarBear(x) -> GrowsFurToSurviveInEnvironment(x))", "score": 0}
{"id": "eqasc_validation_829", "prediction": "all x y z.((PolarBear(x) & Fur(y) & Environment(z)) -> GrowsToSurviveIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_829", "prediction": "all x y.((PolarBear(x) & Environment(y)) -> GrowsFurToSurvive(x,y))", "score": 0}
{"id": "eqasc_validation_829", "prediction": "all x.(PolarBear(x) -> GrowsFurToSurvive(x))", "score": 0}
{"id": "eqasc_validation_829", "prediction": "all x.(PolarBear(x) -> (GrowsFur(x) & SurvivesInEnvironment(x)))", "score": 0}
{"id": "eqasc_validation_829", "prediction": "all x y.((PolarBear(x) & Fur(y)) -> GrowsForSurvival(x,y))", "score": 0}
{"id": "eqasc_validation_829", "prediction": "all x y z.((PolarBear(x) & Fur(y) & Environment(z) & GrowsToSurvive(x,y,z)) -> GrowsToSurvive(x,y,z))", "score": 0}
{"id": "eqasc_validation_829", "prediction": "all x.(PolarBear(x) -> GrowsFur(x))", "score": 0}
{"id": "eqasc_validation_829", "prediction": "all x y z.((PolarBear(x) & Fur(y) & Environment(z)) -> GrowsToSurvive(x,y))", "score": 0}
{"id": "eqasc_validation_829", "prediction": "all x y z.((PolarBear(x) & Fur(y) & Environment(z) & GrowsForSurvival(x,y,z)) -> SurvivesInEnvironment(x,y,z))", "score": 0}
{"id": "eqasc_validation_829", "prediction": "all x y z.((PolarBear(x) & Fur(y) & Environment(z) & GrowsToSurvive(x,y,z)) -> SurvivesInEnvironment(x,y,z))", "score": 0}
{"id": "eqasc_validation_830", "prediction": "all x.(PolarBear(x) -> EatsSeals(x))", "score": 0}
{"id": "eqasc_validation_830", "prediction": "all x.(PolarBear(x) -> PrimarilyEatsSeals(x))", "score": 0}
{"id": "eqasc_validation_830", "prediction": "all x y.((PolarBear(x) & Seal(y)) -> Eats(x,y))", "score": 0}
{"id": "eqasc_validation_830", "prediction": "all x y z.((PolarBear(x) & Seal(y) & Seal(z)) -> Eats(x,y,z))", "score": 0}
{"id": "eqasc_validation_830", "prediction": "all x.(PolarBear(x) -> EatSeals(x))", "score": 0}
{"id": "eqasc_validation_830", "prediction": "all x y.((PolarBear(x) & Seal(y)) -> PrimarilyEats(x,y))", "score": 0}
{"id": "eqasc_validation_830", "prediction": "all x.(PolarBear(x) -> (EatsSeals(x) & Primarily(x)))", "score": 0}
{"id": "eqasc_validation_830", "prediction": "all x y z.((PolarBear(x) & Seal(y) & Seal(z)) -> Eats(x,y))", "score": 0}
{"id": "eqasc_validation_830", "prediction": "all x.((PolarBear(x) & Seal(y)) -> Eats(x,y))", "score": 0}
{"id": "eqasc_validation_830", "prediction": "all x.(PolarBear(x) -> EatsSeal(x))", "score": 0}
{"id": "eqasc_validation_830", "prediction": "all x.(PolarBear(x) -> (EatsSeals(x) | EatsSeals(x)))", "score": 0}
{"id": "eqasc_validation_830", "prediction": "all x y.((PolarBear(x) & Seal(y)) -> Eat(x,y))", "score": 0}
{"id": "eqasc_validation_830", "prediction": "all x.(PolarBear(x) -> PrimarilyEatSeals(x))", "score": 0}
{"id": "eqasc_validation_830", "prediction": "all x.(PolarBear(x) -> (EatsSeals(x) & -EatsSeals(x)))", "score": 0}
{"id": "eqasc_validation_830", "prediction": "all x.(PolarBear(x) -> (EatSeals(x) & Primarily(x)))", "score": 0}
{"id": "eqasc_validation_831", "prediction": "all x.(Seal(x) -> LivesInColdEnvironment(x))", "score": 0}
{"id": "eqasc_validation_831", "prediction": "all x y.((Seal(x) & ColdEnvironment(y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_831", "prediction": "all x.(Seal(x) -> exists y.(ColdEnvironment(y) & LivesIn(x,y)))", "score": 0}
{"id": "eqasc_validation_831", "prediction": "all x.(Seal(x) -> exists y.(ColdEnvironment(y) & LivesIn(x,y))))", "score": -1}
{"id": "eqasc_validation_831", "prediction": "all x y z.((Seal(x) & ColdEnvironment(y) & Environment(z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_831", "prediction": "all x.(Seal(x) -> (LivesInColdEnvironment(x) & ColdEnvironment(x)))", "score": 0}
{"id": "eqasc_validation_831", "prediction": "all x y z.((Seal(x) & ColdEnvironment(y) & ColdEnvironment(z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_831", "prediction": "all x y z.((Seal(x) & ColdEnvironment(y) & Environment(z)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_831", "prediction": "all x y.((Salmon(x) & ColdEnvironment(y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_831", "prediction": "all x.(Seal(x) -> ColdEnvironment(x))", "score": 0}
{"id": "eqasc_validation_831", "prediction": "all x.(Seal(x) -> (LivesInColdEnvironment(x) | LivesInColdEnvironment(x)))", "score": 0}
{"id": "eqasc_validation_831", "prediction": "all x.(Seal(x) -> LiveInColdEnvironment(x))", "score": 0}
{"id": "eqasc_validation_831", "prediction": "all x y z.((Seal(x) & ColdEnvironment(y) & ColdEnvironment(z)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_831", "prediction": "all x.((Seal(x) & ColdEnvironment(x)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_831", "prediction": "all x y.((Seal(x) & ColdEnvironment(y) & LivesIn(x,y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_832", "prediction": "all x.(PolarBear(x) -> HasTwoLayersOfFur(x))", "score": 0}
{"id": "eqasc_validation_832", "prediction": "all x.(PolarBear(x) -> (HasTwoLayersOfFur(x) & ProtectsFromCold(x)))", "score": 0}
{"id": "eqasc_validation_832", "prediction": "all x.(PolarBear(x) -> (HasTwoLayersOfFur(x) & ForColdProtection(x)))", "score": 0}
{"id": "eqasc_validation_832", "prediction": "all x.(PolarBear(x) -> (HasTwoLayersOfFur(x) & ColdProtection(x)))", "score": 0}
{"id": "eqasc_validation_832", "prediction": "all x y.((PolarBear(x) & Fur(y)) -> HasTwoLayers(x,y))", "score": 0}
{"id": "eqasc_validation_832", "prediction": "all x.(PolarBear(x) -> (HasTwoLayersOfFur(x) & FurtherProtectionFromCold(x)))", "score": 0}
{"id": "eqasc_validation_832", "prediction": "all x.(PolarBear(x) -> (HasTwoLayersOfFur(x) & FurProtectionFromCold(x)))", "score": 0}
{"id": "eqasc_validation_832", "prediction": "all x.(PolarBear(x) -> (HasTwoLayersOfFur(x) & ForFurtherProtectionFromCold(x)))", "score": 0}
{"id": "eqasc_validation_832", "prediction": "all x y.((PolarBear(x) & Fur(y)) -> HasTwoLayersForProtectionFromCold(x,y))", "score": 0}
{"id": "eqasc_validation_832", "prediction": "all x.(PolarBear(x) -> (HasTwoLayersOfFur(x) & ForProtectionFromCold(x)))", "score": 0}
{"id": "eqasc_validation_832", "prediction": "all x.(PolarBear(x) -> (HasTwoLayerOfFur(x) & ProtectsFromCold(x)))", "score": 0}
{"id": "eqasc_validation_832", "prediction": "all x y.((PolarBear(x) & Fur(y)) -> (HasTwoLayers(x,y) & ProtectsFromCold(x)))", "score": 0}
{"id": "eqasc_validation_832", "prediction": "all x.(PolarBear(x) -> HasTwoLayerOfFur(x))", "score": 0}
{"id": "eqasc_validation_832", "prediction": "all x.(PolarBear(x) -> (HasTwoLayersOfFur(x) & ForClothingProtection(x)))", "score": 0}
{"id": "eqasc_validation_832", "prediction": "all x.(PolarBear(x) -> HasTwoLayersOfFurForColdProtection(x))", "score": 0}
{"id": "eqasc_validation_832", "prediction": "all x.(PolarBear(x) -> (HasTwoLayersOfFur(x) & ForCleanProtection(x)))", "score": 0}
{"id": "eqasc_validation_833", "prediction": "all x.(PolarBear(x) -> (HasTwoLayersOfFur(x) & LivesInEnvironment(x)))", "score": 0}
{"id": "eqasc_validation_833", "prediction": "all x.(PolarBear(x) -> (HasTwoLayerOfFur(x) & LivesInEnvironment(x)))", "score": 0}
{"id": "eqasc_validation_833", "prediction": "all x.(PolarBear(x) -> HasTwoLayersOfFur(x))", "score": 0}
{"id": "eqasc_validation_833", "prediction": "all x y.((PolarBear(x) & Fur(y)) -> (HasTwoLayers(x,y) & LivesInEnvironment(x)))", "score": 0}
{"id": "eqasc_validation_833", "prediction": "all x y.((PolarBear(x) & Fur(y)) -> (HasTwoLayers(x,y) & LivesInEnvironment(x,y)))", "score": 0}
{"id": "eqasc_validation_833", "prediction": "all x y.((PolarBear(x) & Fur(y)) -> HasTwoLayers(x,y))", "score": 0}
{"id": "eqasc_validation_833", "prediction": "all x y z.((PolarBear(x) & Fur(y) & Fur(z)) -> (HasTwoLayers(x,y,z) & LivesInEnvironment(x)))", "score": 0}
{"id": "eqasc_validation_833", "prediction": "all x y.((PolarBear(x) & Fur(y)) -> (HasTwoLayer(x,y) & LivesInEnvironment(x)))", "score": 0}
{"id": "eqasc_validation_833", "prediction": "all x y z.((PolarBear(x) & Fur(y) & Fur(z)) -> (HasTwoLayers(x,y) & LivesInEnvironment(x,z)))", "score": 0}
{"id": "eqasc_validation_833", "prediction": "all x y.((PolarBear(x) & Fur(y)) -> HasTwoLayersToLiveInEnvironment(x,y))", "score": 0}
{"id": "eqasc_validation_833", "prediction": "all x y.((PolarBear(x) & Fur(y)) -> (HasTwoLayer(x,y) & LivesInEnvironment(x,y)))", "score": 0}
{"id": "eqasc_validation_833", "prediction": "all x y z.((PolarBear(x) & Fur(y) & Environment(z)) -> (HasTwoLayers(x,y) & HasTwoLayers(x,z)))", "score": 0}
{"id": "eqasc_validation_833", "prediction": "all x y.((PolarBear(x) & Fur(y)) -> (HasTwoLayersOfFur(x,y) & LivesInEnvironment(x,y)))", "score": 0}
{"id": "eqasc_validation_833", "prediction": "all x.(PolarBear(x) -> (HasTwoLayerFur(x) & LivesInEnvironment(x)))", "score": 0}
{"id": "eqasc_validation_833", "prediction": "all x.(PolarBear(x) -> HasTwoLayerOfFur(x))", "score": 0}
{"id": "eqasc_validation_834", "prediction": "all x.(PolarBear(x) -> LivesInArctic(x))", "score": 0}
{"id": "eqasc_validation_834", "prediction": "all x y.((PolarBear(x) & Arctic(y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_834", "prediction": "all x y z.((PolarBear(x) & Arctic(y) & Arctic(z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_834", "prediction": "all x.((PolarBear(x) & LivesInArctic(x)) -> LivesIn(x,Arctic))", "score": 0}
{"id": "eqasc_validation_834", "prediction": "all x.(PolarBear(x) -> LivesIn(x,Arctic))", "score": 0}
{"id": "eqasc_validation_834", "prediction": "all x y z.((PolarBear(x) & Arctic(y) & Arctic(z)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_834", "prediction": "all x y z.((PolarBear(x) & Arctic(y) & Arctic(z) & LivesIn(x,y,z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_834", "prediction": "all x.((PolarBear(x) & LivesInArctic(x)) -> LivesInArctic(x))", "score": 0}
{"id": "eqasc_validation_834", "prediction": "all x.(PolarBear(x) -> exists y.(Arctic(y) & LivesIn(x,y))))", "score": -1}
{"id": "eqasc_validation_834", "prediction": "all x y z.((PolarBear(x) & Arctic(y) & Arctic(z) & LivesIn(x,y,z)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_834", "prediction": "all x.(PolarBear(x) -> exists y.(Arctic(y) & LivesIn(x,y)))", "score": 0}
{"id": "eqasc_validation_834", "prediction": "all x.(PolarBear(x) -> LivesIn(x,arctic))", "score": 0}
{"id": "eqasc_validation_834", "prediction": "all x y z.((PolarBear(x) & Arctic(y) & Arctic(z) & LivesIn(x,y)) -> LivesIn(x,z))", "score": 0}
{"id": "eqasc_validation_835", "prediction": "all x.(Arctic(x) -> ColdEnvironment(x))", "score": 0}
{"id": "eqasc_validation_835", "prediction": "All x.(Arctic(x) -> ColdEnvironment(x))", "score": -1}
{"id": "eqasc_validation_835", "prediction": "all x.((Arctic(x) & ColdEnvironment(x)) -> ColdEnvironment(x))", "score": 0}
{"id": "eqasc_validation_835", "prediction": "all x y.((Arctic(x) & ColdEnvironment(y)) -> ColdEnvironment(x))", "score": 0}
{"id": "eqasc_validation_835", "prediction": "all x y.((Arctic(x) & ColdEnvironment(y)) -> ColdEnvironment(x,y))", "score": 0}
{"id": "eqasc_validation_835", "prediction": "All x.((Arctic(x) & ColdEnvironment(x)) -> ColdEnvironment(x))", "score": -1}
{"id": "eqasc_validation_835", "prediction": "(ColdEnvironment(arctic) & ColdEnvironment(arctic))", "score": 0}
{"id": "eqasc_validation_835", "prediction": "exists x.(Arctic(x) & ColdEnvironment(x))", "score": 0}
{"id": "eqasc_validation_835", "prediction": "all x y.((Arctic(x) & ColdEnvironment(x)) -> ColdEnvironment(y))", "score": 0}
{"id": "eqasc_validation_835", "prediction": "all x.((Arctic(x) & ColdEnvironment(x)) -> CoolEnvironment(x))", "score": 0}
{"id": "eqasc_validation_835", "prediction": "all x y.((Arctic(x) & ColdEnvironment(x)) -> ColdEnvironment(x))", "score": 0}
{"id": "eqasc_validation_835", "prediction": "all x.((Arctic(x) & ColdEnvironment(x)) -> -ColdEnvironment(x))", "score": 0}
{"id": "eqasc_validation_835", "prediction": "all x.((Arctic(x) & ColdEnvironment(x)) -> Cold(x))", "score": 0}
{"id": "eqasc_validation_835", "prediction": "all x y.((Arctic(x) & ColdEnvironment(y)) -> Cold(x))", "score": 0}
{"id": "eqasc_validation_836", "prediction": "all x.(ColdWeather(x) -> (IsWinter(x) & Snowing(x)))", "score": 0}
{"id": "eqasc_validation_836", "prediction": "all x.(ColdWeather(x) -> (Winter(x) & Snowing(x)))", "score": 0}
{"id": "eqasc_validation_836", "prediction": "all x.((ColdWeather(x) & Winter(x) & Snowing(x)) -> ColdWeather(x))", "score": 0}
{"id": "eqasc_validation_836", "prediction": "all x.(ColdWeather(x) -> (IsWinter(x) & IsSnowing(x)))", "score": 0}
{"id": "eqasc_validation_836", "prediction": "(ColdWeather(x) & Winter(x) & Snowing(x))", "score": 0}
{"id": "eqasc_validation_836", "prediction": "all x y.((ColdWeather(x) & Winter(y) & Snowing(x)) -> ColdWeather(x))", "score": 0}
{"id": "eqasc_validation_836", "prediction": "all x y.((ColdWeather(x) & Winter(y) & Snowing(y)) -> ColdWeather(x))", "score": 0}
{"id": "eqasc_validation_836", "prediction": "exists x.(ColdWeather(x) & Winter(x) & Snowing(x))", "score": 0}
{"id": "eqasc_validation_836", "prediction": "all x y z.((ColdWeather(x) & Winter(y) & Snowing(z)) -> (ColdWeather(x) & Winter(y) & Snowing(z)))", "score": 0}
{"id": "eqasc_validation_836", "prediction": "(ColdWeather(ColdWeather) & Winter(Winter) & Snowing(Winter))", "score": 0}
{"id": "eqasc_validation_836", "prediction": "all x y.((ColdWeather(x) & Winter(y)) -> Snowing(x))", "score": 0}
{"id": "eqasc_validation_836", "prediction": "all x y z.((ColdWeather(x) & Winter(y) & Snowing(z)) -> ColdWeather(x))", "score": 0}
{"id": "eqasc_validation_836", "prediction": "all x y z.((ColdWeather(x) & Winter(y) & Snowing(z)) -> (Is(x,y) & Is(x,z)))", "score": 0}
{"id": "eqasc_validation_836", "prediction": "(ColdWeather(cold) & Winter(cold) & Snowing(cold))", "score": 0}
{"id": "eqasc_validation_836", "prediction": "all x.(ColdWeather(x) -> (Warm(x) & Snowing(x)))", "score": 0}
{"id": "eqasc_validation_837", "prediction": "all x.(PolarBear(x) -> RequiresWinterEnvironmentWithSnow(x))", "score": 0}
{"id": "eqasc_validation_837", "prediction": "all x.(PolarBear(x) -> (RequiresWinterEnvironmentWithSnow(x)))", "score": 0}
{"id": "eqasc_validation_837", "prediction": "all x y.((PolarBear(x) & WinterEnvironment(y) & Snow(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_837", "prediction": "all x.(PolarBear(x) -> (RequiresWinterEnvironment(x) & HasSnow(x)))", "score": 0}
{"id": "eqasc_validation_837", "prediction": "all x.((PolarBear(x) & WinterEnvironmentWithSnow(x)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_837", "prediction": "all x y.((PolarBear(x) & WinterEnvironment(y) & HasSnow(x)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_837", "prediction": "all x y.((PolarBear(x) & WinterEnvironment(y) & Snow(z)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_837", "prediction": "all x y.((PolarBear(x) & WinterEnvironment(y) & Snow(z)) -> Requires(x,y,z))", "score": 0}
{"id": "eqasc_validation_837", "prediction": "all x.(PolarBear(x) -> (RequiresWinterEnvironment(x) & Snow(x)))", "score": 0}
{"id": "eqasc_validation_837", "prediction": "all x y z.((PolarBear(x) & WinterEnvironment(y) & Snow(z)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_837", "prediction": "all x y z.((PolarBear(x) & WinterEnvironment(y) & Snow(z)) -> Requires(x,y,z))", "score": 0}
{"id": "eqasc_validation_837", "prediction": "all x y.((PolarBear(x) & WinterEnvironment(y) & HasSnow(x,y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_837", "prediction": "all x.((PolarBear(x) & WinterEnvironment(x) & Snow(x)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_837", "prediction": "all x.((PolarBear(x) & WinterEnvironmentWithSnow(x)) -> Requires(x))", "score": 0}
{"id": "eqasc_validation_837", "prediction": "all x y.((PolarBear(x) & WinterEnvironment(y)) -> RequiresSnow(x,y))", "score": 0}
{"id": "eqasc_validation_838", "prediction": "all x.(Lynx(x) -> LivesInColdSnowyEnvironments(x))", "score": 0}
{"id": "eqasc_validation_838", "prediction": "all x.(Lynx(x) -> (LivesInColdSnowyEnvironments(x) & LivesInColdSnowyEnvironments(x)))", "score": 0}
{"id": "eqasc_validation_838", "prediction": "all x y.((Lynx(x) & ColdSnowyEnvironment(y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_838", "prediction": "all x.(Lynx(x) -> (LivesInColdSnowyEnvironments(x)))", "score": 0}
{"id": "eqasc_validation_838", "prediction": "all x.(Lynx(x) -> exists y.(ColdSnowyEnvironment(y) & LivesIn(x,y)))", "score": 0}
{"id": "eqasc_validation_838", "prediction": "all x.(Lynx(x) -> (LivesInColdSnowyEnvironments(x) | LivesInColdSnowyEnvironments(x)))", "score": 0}
{"id": "eqasc_validation_838", "prediction": "all x.(Lynx(x) -> (LivesInCold(x) & LivesInSnowyEnvironments(x)))", "score": 0}
{"id": "eqasc_validation_838", "prediction": "all x.(Lynx(x) -> LivesInColdSnowyEnvironment(x))", "score": 0}
{"id": "eqasc_validation_838", "prediction": "all x.(Lynx(x) -> exists y.(ColdEnvironment(y) & SnowyEnvironment(z) & LivesIn(x,y)))", "score": 0}
{"id": "eqasc_validation_838", "prediction": "all x.(Lynx(x) -> exists y.(Cold(y) & Snowy(y) & LivesIn(x,y)))", "score": 0}
{"id": "eqasc_validation_838", "prediction": "all x.(Lynx(x) -> exists y.(ColdEnvironment(y) & SnowyEnvironment(x,y)))", "score": 0}
{"id": "eqasc_validation_838", "prediction": "all x y.((Lynx(x) & ColdEnvironment(y) & SnowyEnvironment(y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_838", "prediction": "all x y.((Lynx(x) & ColdEnvironment(y) & SnowyEnvironment(z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_838", "prediction": "all x.(Lynx(x) -> exists y.(ColdEnvironment(y) & SnowyEnvironment(y) & LivesIn(x,y)))", "score": 0}
{"id": "eqasc_validation_838", "prediction": "all x.(Lynx(x) -> exists y.(ColdEnvironment(y) & SnowyEnvironment(z) & LivesIn(x,y,z)))", "score": 0}
{"id": "eqasc_validation_839", "prediction": "all x y.((Lynx(x) & PolarBear(y)) -> SimilarClimateRequirements(x,y))", "score": 0}
{"id": "eqasc_validation_839", "prediction": "all x.((Lynx(x) | PolarBear(x)) -> SimilarClimateRequirements(x))", "score": 0}
{"id": "eqasc_validation_839", "prediction": "all x.((Lynx(x) & PolarBear(x)) -> SimilarClimateRequirements(x))", "score": 0}
{"id": "eqasc_validation_839", "prediction": "(SameClimateRequirements(Lynx) & SameClimateRequirements(PolarBear))", "score": 0}
{"id": "eqasc_validation_839", "prediction": "all x y.((Lynx(x) & PolarBear(y)) -> SimilarClimateRequirements(x))", "score": 0}
{"id": "eqasc_validation_839", "prediction": "all x y.((Lynx(x) & PolarBear(y)) -> HasSameClimateRequirements(x,y))", "score": 0}
{"id": "eqasc_validation_839", "prediction": "(SameClimateRequirements(Lynx) & SimilarClimateRequirements(PolarBear))", "score": 0}
{"id": "eqasc_validation_839", "prediction": "(ClimateRequirements(Lynx) & ClimateRequirements(PolarBear))", "score": 0}
{"id": "eqasc_validation_839", "prediction": "all x y.((Lynx(x) | PolarBear(y)) -> SimilarClimateRequirements(x,y))", "score": 0}
{"id": "eqasc_validation_839", "prediction": "all x y.((Lynx(x) & PolarBear(y)) -> HasSimilarClimateRequirements(x,y))", "score": 0}
{"id": "eqasc_validation_839", "prediction": "all x y.((Lynx(x) & PolarBear(y)) -> SameClimateRequirements(x,y))", "score": 0}
{"id": "eqasc_validation_839", "prediction": "(SameClimateRequirements(Lynx) & SimilarClimateRequirements(PolarBears))", "score": 0}
{"id": "eqasc_validation_839", "prediction": "(SameClimateRequirements(Lynx) & SameClimateRequirements(PolarBears))", "score": 0}
{"id": "eqasc_validation_839", "prediction": "exists x.(Lynx(x) & PolarBear(x) & SimilarClimateRequirements(x))", "score": 0}
{"id": "eqasc_validation_839", "prediction": "(SameClimateRequirements(Lynx,Lynx) & SameClimateRequirements(PolarBear,Lynx))", "score": 0}
{"id": "eqasc_validation_839", "prediction": "all x.(Lynx(x) | PolarBear(x)) -> SimilarClimateRequirements(x))", "score": -1}
{"id": "eqasc_validation_840", "prediction": "all x.(ArcticAirMass(x) -> (ExtremelyCold(x) & SourceRegionArcticOcean(x)))", "score": 0}
{"id": "eqasc_validation_840", "prediction": "all x.((ArcticAirMass(x) & ArcticOcean(x)) -> ExtremelyCold(x))", "score": 0}
{"id": "eqasc_validation_840", "prediction": "all x y.((ArcticAirMass(x) & ArcticOcean(y)) -> ExtremelyCold(x))", "score": 0}
{"id": "eqasc_validation_840", "prediction": "all x.(ArcticAirMass(x) -> (ExtremelyCold(x) & ArcticOceanSourceRegion(x)))", "score": 0}
{"id": "eqasc_validation_840", "prediction": "all x y.((ArcticAirMass(x) & ArcticOcean(y)) -> (ExtremelyCold(x) & SourceRegion(y)))", "score": 0}
{"id": "eqasc_validation_840", "prediction": "all x y.((ArcticAirMass(x) & ArcticOcean(y)) -> (ExtremelyCold(x) & SourceRegion(x,y)))", "score": 0}
{"id": "eqasc_validation_840", "prediction": "all x.(ArcticAirMass(x) -> (ExtremelyCold(x) & SourceRegionOcean(x)))", "score": 0}
{"id": "eqasc_validation_840", "prediction": "all x.(ArcticAirMass(x) -> (ExtremelyCold(x) & SourceRegion(x,ArcticOcean)))", "score": 0}
{"id": "eqasc_validation_840", "prediction": "all x y z.((ArcticAirMass(x) & ArcticOcean(y) & SourceRegion(z)) -> ExtremelyCold(x))", "score": 0}
{"id": "eqasc_validation_840", "prediction": "all x y z.((ArcticAirMass(x) & ArcticOcean(y) & ArcticOcean(z)) -> (ExtremelyCold(x) & SourceRegion(y,z)))", "score": 0}
{"id": "eqasc_validation_840", "prediction": "all x.((ArcticAirMass(x) & ArcticOceanSourceRegion(x)) -> ExtremelyCold(x))", "score": 0}
{"id": "eqasc_validation_840", "prediction": "all x y.((ArcticAirMass(x) & ArcticOcean(y)) -> ExtremelyCold(x,y))", "score": 0}
{"id": "eqasc_validation_840", "prediction": "all x.(ArcticAirMass(x) -> (ExtremelyCold(x) & SourceRegion(x,arcticOcean)))", "score": 0}
{"id": "eqasc_validation_840", "prediction": "all x.((ArcticAirMass(x) & ExtremelyCold(x)) -> SourceRegion(x,ArcticOcean))", "score": 0}
{"id": "eqasc_validation_840", "prediction": "all x.((ArcticAirMass(x) & ExtremelyCold(x)) -> SourceRegionArcticOcean(x))", "score": 0}
{"id": "eqasc_validation_840", "prediction": "all x.((ArcticAirMass(x) & ExtremelyCold(x) & ArcticOceanSourceRegion(x)) -> ExtremelyCold(x))", "score": 0}
{"id": "eqasc_validation_841", "prediction": "all x.(PolarBear(x) -> CanLiveInArctic(x))", "score": 0}
{"id": "eqasc_validation_841", "prediction": "all x y.((PolarBear(x) & Arctic(y)) -> CanLiveIn(x,y))", "score": 0}
{"id": "eqasc_validation_841", "prediction": "all x y z.((PolarBear(x) & Arctic(y) & Arctic(z)) -> CanLiveIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_841", "prediction": "all x.((PolarBear(x) & CanLiveInArctic(x)) -> CanLiveInArctic(x))", "score": 0}
{"id": "eqasc_validation_841", "prediction": "all x.((PolarBear(x) & LivesInArctic(x)) -> CanLiveInArctic(x))", "score": 0}
{"id": "eqasc_validation_841", "prediction": "all x.(PolarBear(x) -> LivesInArctic(x))", "score": 0}
{"id": "eqasc_validation_841", "prediction": "all x y z.((PolarBear(x) & Arctic(y) & Arctic(z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_841", "prediction": "all x y.((PolarBear(x) & Arctic(y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_841", "prediction": "all x y z.((PolarBear(x) & Arctic(y) & Arctic(z) & LivesIn(x,y,z)) -> CanLiveIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_841", "prediction": "all x y.((PolarBear(x) & Arctic(y)) -> CanLiveInArctic(x,y))", "score": 0}
{"id": "eqasc_validation_841", "prediction": "all x y z.((PolarBear(x) & Arctic(y) & Arctic(z)) -> CanLiveInArctic(x,y,z))", "score": 0}
{"id": "eqasc_validation_841", "prediction": "all x y z.((PolarBear(x) & Arctic(y) & Arctic(z)) -> CanLive(x,y,z))", "score": 0}
{"id": "eqasc_validation_841", "prediction": "all x y z.((PolarBear(x) & Arctic(y) & Arctic(z)) -> CanLiveIn(x,y))", "score": 0}
{"id": "eqasc_validation_841", "prediction": "all x.(PolarBear(x) -> exists y.(Arctic(y) & LivesIn(x,y))))", "score": -1}
{"id": "eqasc_validation_841", "prediction": "all x y z.((PolarBear(x) & Arctic(y) & Arctic(z) & LivesIn(x,y,z)) -> CanLiveIn(x,y))", "score": 0}
{"id": "eqasc_validation_841", "prediction": "all x y z.((PolarBear(x) & Arctic(y) & Arctic(z) & LivesIn(x,y,z)) -> CanLive(x,y,z))", "score": 0}
{"id": "eqasc_validation_842", "prediction": "all x y z.((Hurricane(x) & Land(y) & Land(z)) -> (MovesOver(x,y) & DecreasesStrength(x,z)))", "score": 0}
{"id": "eqasc_validation_842", "prediction": "all x y z.((Hurricane(x) & Land(y) & Land(z) & MovesOver(x,y)) -> DecreasesStrength(x,z))", "score": 0}
{"id": "eqasc_validation_842", "prediction": "all x y z.((Hurricane(x) & Land(y) & Land(z)) -> (MovesOver(x,y,z) & DecreasesStrength(x)))", "score": 0}
{"id": "eqasc_validation_842", "prediction": "all x y z w.((Hurricane(x) & Land(y) & Land(z) & MovesOver(x,y)) -> DecreasesStrength(x,z))", "score": 0}
{"id": "eqasc_validation_842", "prediction": "all x y z.((Hurricane(x) & Land(y) & MovesOver(x,y)) -> DecreasesStrength(x,z))", "score": 0}
{"id": "eqasc_validation_842", "prediction": "all x y z.((Hurricane(x) & Land(y) & Land(z) & MovesOver(x,y,z)) -> DecreasesStrength(x,y))", "score": 0}
{"id": "eqasc_validation_842", "prediction": "all x y z.((Hurricane(x) & Land(y) & Land(z)) -> (MovesOver(x,y,z) & DecreasesStrength(x,y)))", "score": 0}
{"id": "eqasc_validation_842", "prediction": "all x y z.((Hurricane(x) & Land(y) & Land(z)) -> MovesOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_842", "prediction": "all x y z.((Hurricane(x) & Land(y) & Land(z) & MovesOver(x,y,z)) -> DecreasesStrength(x))", "score": 0}
{"id": "eqasc_validation_842", "prediction": "all x y z w.((Hurricane(x) & Land(y) & Land(z) & MovesOver(x,y,z)) -> DecreasesStrength(x,w))", "score": 0}
{"id": "eqasc_validation_842", "prediction": "all x y z.((Hurricane(x) & Land(y) & MovesOver(x,y)) -> (DecreasesStrength(x,z) & Hurricane(z)))", "score": 0}
{"id": "eqasc_validation_842", "prediction": "all x.((Hurricane(x) & MovesOverLand(x)) -> DecreasesStrength(x))", "score": 0}
{"id": "eqasc_validation_842", "prediction": "all x y z.((Hurricane(x) & Land(y) & Land(z) & MovesOver(x,y)) -> DecreasedStrength(x,z))", "score": 0}
{"id": "eqasc_validation_842", "prediction": "all x y.((Hurricane(x) & MovesOverLand(x)) -> DecreasesStrength(y))", "score": 0}
{"id": "eqasc_validation_842", "prediction": "all x y z.((Hurricane(x) & Land(y) & Land(z)) -> (MovesOver(x,y) & DecreasesStrength(x)))", "score": 0}
{"id": "eqasc_validation_842", "prediction": "all x y z.((Hurricane(x) & Land(y) & Land(z) & MovesOver(x,y,z)) -> DecreasesStrength(x,y,z))", "score": 0}
{"id": "eqasc_validation_843", "prediction": "all x.((Hurricane(x) & HitsLand(x)) -> (LosesHeat(x) & LosesMoisture(x) & Weakens(x)))", "score": 0}
{"id": "eqasc_validation_843", "prediction": "all x.(Hurricane(x) -> (LosesHeat(x) & LosesMoisture(x) & Weakens(x)))", "score": 0}
{"id": "eqasc_validation_843", "prediction": "all x y.((Hurricane(x) & Land(y)) -> (LosesHeat(x) & LosesMoisture(x) & Weakens(x)))", "score": 0}
{"id": "eqasc_validation_843", "prediction": "all x y.((Hurricane(x) & Land(y)) -> (LosesHeat(x,y) & LosesMoisture(x,y) & Weakens(x,y)))", "score": 0}
{"id": "eqasc_validation_843", "prediction": "all x.((Hurricane(x) & HitsLand(x)) -> (LosesHeat(x) & LosesMoisture(x) & Weaks(x)))", "score": 0}
{"id": "eqasc_validation_843", "prediction": "all x y.((Hurricane(x) & Land(y) & Hits(x,y)) -> (LosesHeat(x) & LosesMoisture(x) & Weakens(x)))", "score": 0}
{"id": "eqasc_validation_843", "prediction": "all x y.((Hurricane(x) & Land(y)) -> (LosesHeat(x,y) & LosesMoisture(x,y) & Weakens(x)))", "score": 0}
{"id": "eqasc_validation_843", "prediction": "all x y.((Hurricane(x) & Land(y)) -> (LosesHeat(x) & LosesMoisture(x) & Weaks(x)))", "score": 0}
{"id": "eqasc_validation_843", "prediction": "all x y.((Hurricane(x) & HitsLand(x)) -> (LosesHeat(x) & LosesMoisture(x) & Weakens(x)))", "score": 0}
{"id": "eqasc_validation_843", "prediction": "all x y.((Hurricane(x) & Land(y)) -> (LosesHeat(x,y) & LosesMoisture(x,y) & Weaks(x,y)))", "score": 0}
{"id": "eqasc_validation_843", "prediction": "all x.(Hurricane(x) -> (LosesHeat(x) & LosesMoisture(x) & Weaks(x)))", "score": 0}
{"id": "eqasc_validation_843", "prediction": "all x y.((Hurricane(x) & HitsLand(x)) -> (LosesHeat(x) & LosesMoisture(x) & Weakens(y)))", "score": 0}
{"id": "eqasc_validation_843", "prediction": "all x.(Hurricane(x) -> (LaysHeat(x) & LosesMoisture(x) & Weakens(x)))", "score": 0}
{"id": "eqasc_validation_843", "prediction": "all x y z.((Hurricane(x) & Land(y) & Heat(z) & Moisture(z)) -> (Loses(x,z) & Weakens(x)))", "score": 0}
{"id": "eqasc_validation_843", "prediction": "all x y z.((Hurricane(x) & Land(y) & Heat(z)) -> (Loses(x,z) & Moisture(z) & Weaks(x)))", "score": 0}
{"id": "eqasc_validation_843", "prediction": "all x.((Hurricane(x) & HitsLand(x)) -> (LosesHeat(x) & LosesMoisture(x) & Weaknesses(x)))", "score": 0}
{"id": "eqasc_validation_844", "prediction": "all x.((Hurricane(x) & DecreasesStrength(x)) -> (LosesHeat(x) & LosesMoisture(x)))", "score": 0}
{"id": "eqasc_validation_844", "prediction": "all x.(Hurricane(x) -> (DecreasesStrength(x) & LosesHeat(x) & LosesMoisture(x)))", "score": 0}
{"id": "eqasc_validation_844", "prediction": "all x.(DecreasesStrength(x) -> (LosesHeat(x) & LosesMoisture(x)))", "score": 0}
{"id": "eqasc_validation_844", "prediction": "all x y.((Hurricane(x) & Strength(y)) -> (Decreases(x,y) & LosesHeat(x) & LosesMoisture(x)))", "score": 0}
{"id": "eqasc_validation_844", "prediction": "all x.((Hurricane(x) & ReducesStrength(x)) -> (LosesHeat(x) & LosesMoisture(x)))", "score": 0}
{"id": "eqasc_validation_844", "prediction": "all x.(Hurricane(x) -> (DecreasesInStrength(x) & LosesHeat(x) & LosesMoisture(x)))", "score": 0}
{"id": "eqasc_validation_844", "prediction": "all x.((Hurricane(x) & DecreasesInStrength(x)) -> (LosesHeat(x) & LosesMoisture(x)))", "score": 0}
{"id": "eqasc_validation_844", "prediction": "all x.((Hurricane(x) & DecreasedStrength(x)) -> (LosesHeat(x) & LosesMoisture(x)))", "score": 0}
{"id": "eqasc_validation_844", "prediction": "all x y.((Hurricane(x) & DecreasesStrength(x)) -> (LosesHeat(x) & LosesMoisture(x)))", "score": 0}
{"id": "eqasc_validation_844", "prediction": "all x.((Hurricane(x) & DecreasesStrength(x)) -> LosesHeatAndMoisture(x))", "score": 0}
{"id": "eqasc_validation_844", "prediction": "all x.(Hurricane(x) -> (DecreasedStrength(x) & LosesHeat(x) & LosesMoisture(x)))", "score": 0}
{"id": "eqasc_validation_844", "prediction": "all x.(DecreasesInStrength(x) -> (LosesHeat(x) & LosesMoisture(x)))", "score": 0}
{"id": "eqasc_validation_844", "prediction": "all x y z.((Hurricane(x) & Strength(y) & Heat(z) & Moisture(z)) -> (Decreases(x,y) & Loses(x,z)))", "score": 0}
{"id": "eqasc_validation_844", "prediction": "all x.((Hurricane(x) & DecreasesStrength(x)) -> LosesHeat(x) & LosesMoisture(x))", "score": 0}
{"id": "eqasc_validation_844", "prediction": "all x y z.((Hurricane(x) & Strength(y) & Heat(z)) -> (Decreases(x,y) & Loses(x,z) & Moisture(x)))", "score": 0}
{"id": "eqasc_validation_845", "prediction": "all x.(LargeBodyOfLand(x) -> Continent(x))", "score": 0}
{"id": "eqasc_validation_845", "prediction": "all x.(LargeBodyOfLand(x) -> Continence(x))", "score": 0}
{"id": "eqasc_validation_845", "prediction": "all x.(LargeBodyOfLand(x) -> continent(x))", "score": 0}
{"id": "eqasc_validation_845", "prediction": "all x.(LargeBodyOfLand(x) -> (Continent(x)))", "score": 0}
{"id": "eqasc_validation_845", "prediction": "all x.(LargeBodyOfLand(x) -> Africa(x))", "score": 0}
{"id": "eqasc_validation_845", "prediction": "all x.(LargeBodyOfLand(x) -> Continental(x))", "score": 0}
{"id": "eqasc_validation_845", "prediction": "all x.((LargeBodyOfLand(x) & Land(x)) -> Continent(x))", "score": 0}
{"id": "eqasc_validation_845", "prediction": "all x.((LargeBodyOfLand(x) & Land(x)) -> Continence(x))", "score": 0}
{"id": "eqasc_validation_845", "prediction": "all x.((LargeBodyOfLand(x) & Land(x)) -> continent(x))", "score": 0}
{"id": "eqasc_validation_845", "prediction": "all x.(LargeBodyOfLand(x) -> Planet(x))", "score": 0}
{"id": "eqasc_validation_845", "prediction": "all x.(LargeBodyOfLand(x) -> CallsContinent(x))", "score": 0}
{"id": "eqasc_validation_845", "prediction": "all x.((LargeBodyOfLand(x) & Large(x)) -> Continent(x))", "score": 0}
{"id": "eqasc_validation_845", "prediction": "all x y.((LargeBodyOfLand(x) & Land(y)) -> Continent(x))", "score": 0}
{"id": "eqasc_validation_845", "prediction": "all x y.((LargeBodyOfLand(x) & Land(y)) -> Continence(x))", "score": 0}
{"id": "eqasc_validation_846", "prediction": "all x.((Hurricane(x) & MovesOverContinents(x)) -> StrengthDecreases(x))", "score": 0}
{"id": "eqasc_validation_846", "prediction": "all x y.((Hurricane(x) & continent(y)) -> MovesOver(x,y))", "score": 0}
{"id": "eqasc_validation_846", "prediction": "all x.(Hurricane(x) -> (MovesOverContinents(x) & StrengthDecreases(x)))", "score": 0}
{"id": "eqasc_validation_846", "prediction": "all x y.((Hurricane(x) & continent(y) & MovesOver(x,y)) -> StrengthDecreases(x))", "score": 0}
{"id": "eqasc_validation_846", "prediction": "all x.(Hurricane(x) -> MovesOverContinents(x))", "score": 0}
{"id": "eqasc_validation_846", "prediction": "all x.(Hurricane(x) -> (MovesOverContinents(x) & DecreasesStrength(x)))", "score": 0}
{"id": "eqasc_validation_846", "prediction": "all x y.((Hurricane(x) & Continence(y)) -> MovesOver(x,y))", "score": 0}
{"id": "eqasc_validation_846", "prediction": "all x y.((Hurricane(x) & Continence(y) & MovesOver(x,y)) -> StrengthDecreases(x))", "score": 0}
{"id": "eqasc_validation_846", "prediction": "all x y.((Hurricane(x) & Continent(y)) -> MovesOver(x,y))", "score": 0}
{"id": "eqasc_validation_846", "prediction": "all x.((Hurricane(x) & MoveOverContinents(x)) -> StrengthDecreases(x))", "score": 0}
{"id": "eqasc_validation_846", "prediction": "all x.((Hurricane(x) & MovesOverContinents(x)) -> StrengthDecrease(x))", "score": 0}
{"id": "eqasc_validation_846", "prediction": "all x y.((Hurricane(x) & Africa(y)) -> MovesOver(x,y))", "score": 0}
{"id": "eqasc_validation_846", "prediction": "all x y z.((Hurricane(x) & continent(y) & continent(z)) -> MovesOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_846", "prediction": "all x y.((Hurricane(x) & MovesOverContinents(x,y)) -> StrengthDecreases(x))", "score": 0}
{"id": "eqasc_validation_846", "prediction": "all x y.((Hurricane(x) & continent(y) & MovesOver(x,y)) -> StrengthDecreases(x,y))", "score": 0}
{"id": "eqasc_validation_846", "prediction": "all x y.((Hurricane(x) & African(y)) -> MovesOver(x,y))", "score": 0}
{"id": "eqasc_validation_847", "prediction": "all x.(Hurricane(x) -> GrowsStrengthFromWarmWaters(x))", "score": 0}
{"id": "eqasc_validation_847", "prediction": "all x y.((Hurricane(x) & WarmWater(y)) -> GrowsStrengthFrom(x,y))", "score": 0}
{"id": "eqasc_validation_847", "prediction": "all x.(Hurricane(x) -> GrowsStrengthFromWarmWater(x))", "score": 0}
{"id": "eqasc_validation_847", "prediction": "all x y z.((Hurricane(x) & WarmWater(y) & WarmWater(z)) -> GrowsStrengthFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_847", "prediction": "all x y.((Hurricane(x) & WarmWater(y)) -> GrowsStrength(x,y))", "score": 0}
{"id": "eqasc_validation_847", "prediction": "all x y z.((Hurricane(x) & WarmWater(y) & Water(z)) -> GrowsStrengthFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_847", "prediction": "all x y z.((Hurricane(x) & WarmWater(y) & WarmWater(z)) -> GrowsStrength(x,y,z))", "score": 0}
{"id": "eqasc_validation_847", "prediction": "all x y z.((Hurricane(x) & WarmWater(y) & Temperature(z)) -> GrowsStrengthFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_847", "prediction": "all x.(Hurricane(x) -> (GrowsStrengthFromWarmWaters(x)))", "score": 0}
{"id": "eqasc_validation_847", "prediction": "all x y.((Hurricane(x) & WarmWater(y) & GrowsStrengthFrom(x,y)) -> GrowsStrengthFrom(x,y))", "score": 0}
{"id": "eqasc_validation_847", "prediction": "all x.(Hurricane(x) -> GrowsStabilityFromWarmWaters(x))", "score": 0}
{"id": "eqasc_validation_847", "prediction": "all x y z.((Hurricane(x) & WarmWater(y) & WarmWater(z)) -> GrowsStrengthFrom(x,y))", "score": 0}
{"id": "eqasc_validation_847", "prediction": "all x y.((Hurricane(x) & WarmWater(y)) -> GrowsStabilityFrom(x,y))", "score": 0}
{"id": "eqasc_validation_847", "prediction": "all x y z.((Hurricane(x) & WarmWater(y) & WarmWater(z)) -> GrowsStrength(x,y))", "score": 0}
{"id": "eqasc_validation_847", "prediction": "all x y z.((Hurricane(x) & WarmWater(y) & WarmWater(z)) -> GrowsStabilityFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_848", "prediction": "all x.(Hurricane(x) -> (WorseOverWarmWater(x) & WeakerOverLand(x)))", "score": 0}
{"id": "eqasc_validation_848", "prediction": "all x y z.((Hurricane(x) & WarmWater(y) & Land(z)) -> (Worse(x,y) & Weaker(x,z)))", "score": 0}
{"id": "eqasc_validation_848", "prediction": "all x y.((Hurricane(x) & WarmWater(y)) -> (Worse(x,y) & Weaker(x,y)))", "score": 0}
{"id": "eqasc_validation_848", "prediction": "(all x.(Hurricane(x) -> WorseOverWarmWater(x)) & (Hurricane(x) -> WorseOverWarmWater(x)) & (Hurricane(x) -> WeakerOverLand(x)))", "score": 0}
{"id": "eqasc_validation_848", "prediction": "all x y z.((Hurricane(x) & WarmWater(y) & Land(z)) -> (WorseOver(x,y) & WeakerOver(x,z)))", "score": 0}
{"id": "eqasc_validation_848", "prediction": "all x y z.((Hurricane(x) & WarmWater(y) & Land(z)) -> (WorstOver(x,y) & WeakerOver(x,z)))", "score": 0}
{"id": "eqasc_validation_848", "prediction": "all x.(Hurricane(x) -> (WorseOverWarmWater(x) & WorseOverLand(x)))", "score": 0}
{"id": "eqasc_validation_848", "prediction": "(all x.(Hurricane(x) -> WorseOverWarmWater(x)) & (Hurricane(x) -> WorseOverWarmWater(x))) & (Hurricane(x) -> WeakerOverLand(x)))", "score": -1}
{"id": "eqasc_validation_848", "prediction": "all x.(Hurricane(x) -> (WorstOverWarmWater(x) & WeakerOverLand(x)))", "score": 0}
{"id": "eqasc_validation_848", "prediction": "all x.(Hurricane(x) -> (WarmWater(x) & WarmWater(x) & Land(x) & Worse(x) & Weaker(x)))", "score": 0}
{"id": "eqasc_validation_848", "prediction": "all x y z.((Hurricane(x) & WarmWater(y) & Land(z)) -> (Worse(x,y) & Worse(x,z)))", "score": 0}
{"id": "eqasc_validation_848", "prediction": "all x y.((Hurricane(x) & WarmWater(y)) -> (Worse(x,y) & Worse(x,y)))", "score": 0}
{"id": "eqasc_validation_848", "prediction": "all x y z.((Hurricane(x) & WarmWater(y) & Land(z)) -> (Worst(x,y) & Weaker(x,z)))", "score": 0}
{"id": "eqasc_validation_848", "prediction": "(all x.(Hurricane(x) -> WorseOverWarmWater(x)) & (Hurricane(x) -> WeakerOverLand(x)))", "score": 0}
{"id": "eqasc_validation_848", "prediction": "all x y.((Hurricane(x) & WarmWater(y)) -> (WorseOver(x,y) & WeakerOverLand(x)))", "score": 0}
{"id": "eqasc_validation_848", "prediction": "all x y z.((Hurricane(x) & WarmWater(y) & Land(z)) -> (WorseOver(x,y) & WorseOver(x,z)))", "score": 0}
{"id": "eqasc_validation_849", "prediction": "all x y z.((Hurricane(x) & Strength(y) & SaffirSimpsonScale(z)) -> DividedInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_849", "prediction": "all x.(Hurricane(x) -> (FiveStrengthCategories(x) & BasedOnSaffirSimpsonScale(x)))", "score": 0}
{"id": "eqasc_validation_849", "prediction": "all x y z.((Hurricane(x) & Strength(y) & SaffirSimpsonScale(z)) -> DividedIntoCategories(x,y,z))", "score": 0}
{"id": "eqasc_validation_849", "prediction": "all x y z.((Hurricane(x) & SaffirSimpsonScale(y) & Strength(z)) -> DividedInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_849", "prediction": "all x y.((Hurricane(x) & SaffirSimpsonScale(y)) -> DividedIntoFiveStrengthCategories(x,y))", "score": 0}
{"id": "eqasc_validation_849", "prediction": "all x y z.((Hurricane(x) & StrengthCategory(y) & SaffirSimpsonScale(z)) -> DividedInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_849", "prediction": "all x y z.((Hurricane(x) & SaffirSimpsonScale(y) & Strength(z)) -> DividedIntoCategories(x,y,z))", "score": 0}
{"id": "eqasc_validation_849", "prediction": "all x.(Hurricane(x) -> (SaffirSimpsonScale(x) & Strength(x,5)))", "score": 0}
{"id": "eqasc_validation_849", "prediction": "all x y z.((Hurricane(x) & Strength(y) & SaffirSimpsonScale(z)) -> DividedIntoFiveCategories(x,y,z))", "score": 0}
{"id": "eqasc_validation_849", "prediction": "all x.(Hurricane(x) -> (Division(x,5) & BasedOnSaffirSimpsonScale(x)))", "score": 0}
{"id": "eqasc_validation_849", "prediction": "all x y.((Hurricane(x) & SaffirSimpsonScale(y)) -> Strength(x,y))", "score": 0}
{"id": "eqasc_validation_849", "prediction": "all x.(Hurricane(x) -> (FiveStrengthCategories(x) & BasedOnSaffirSimpsonScene(x)))", "score": 0}
{"id": "eqasc_validation_849", "prediction": "all x.(Hurricane(x) -> (SaffirSimpsonScale(x) & StrengthCategory(x)))", "score": 0}
{"id": "eqasc_validation_849", "prediction": "all x y.((Hurricane(x) & SaffirSimpsonScale(y)) -> StrengthCategory(x,y))", "score": 0}
{"id": "eqasc_validation_849", "prediction": "all x.(Hurricane(x) -> (FiveStrengthCategories(x) & BasedOnSaffirSimpsonScales(x)))", "score": 0}
{"id": "eqasc_validation_849", "prediction": "all x y.((Hurricane(x) & SaffirSimpsonScale(y)) -> DividedIntoFiveStrength(x,y))", "score": 0}
{"id": "eqasc_validation_850", "prediction": "all x.((Hurricane(x) & MovesOverLand(x)) -> DropsOnSaffirSimpsonScale(x))", "score": 0}
{"id": "eqasc_validation_850", "prediction": "all x.((Hurricane(x) & MovesOverLand(x)) -> DropsOnSaffirSimpsonScales(x))", "score": 0}
{"id": "eqasc_validation_850", "prediction": "all x y.((Hurricane(x) & Land(y) & MovesOver(x,y)) -> DropsOnSaffirSimpsonScale(x))", "score": 0}
{"id": "eqasc_validation_850", "prediction": "all x.((Hurricane(x) & MovesOverLand(x)) -> DropsOnSaffirSimpsonScene(x))", "score": 0}
{"id": "eqasc_validation_850", "prediction": "all x.(Hurricane(x) -> (MovesOverLand(x) & DropsOnSaffirSimpsonScale(x)))", "score": 0}
{"id": "eqasc_validation_850", "prediction": "all x y.((Hurricane(x) & Land(y)) -> MovesOver(x,y))", "score": 0}
{"id": "eqasc_validation_850", "prediction": "all x y.((Hurricane(x) & Land(y) & MovesOver(x,y)) -> DropsOnSaffirSimpsonScales(x))", "score": 0}
{"id": "eqasc_validation_850", "prediction": "all x y.((Hurricane(x) & MovesOverLand(x)) -> DropsOnSaffirSimpsonScale(y))", "score": 0}
{"id": "eqasc_validation_850", "prediction": "all x y.((Hurricane(x) & Land(y) & MovesOver(x,y)) -> DropsOnSaffirSimpsonScale(x,y))", "score": 0}
{"id": "eqasc_validation_850", "prediction": "all x y z.((Hurricane(x) & Land(y) & SaffirSimpsonScale(z)) -> MovesOver(x,y))", "score": 0}
{"id": "eqasc_validation_850", "prediction": "all x y.((Hurricane(x) & Land(y)) -> (MovesOver(x,y) & DropsOnSaffirSimpsonScale(x)))", "score": 0}
{"id": "eqasc_validation_850", "prediction": "all x y z.((Hurricane(x) & Land(y) & SaffirSimpsonScale(z)) -> MovesOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_850", "prediction": "all x y.((Hurricane(x) & Land(y) & MovesOver(x,y)) -> DropsOnSaffirSimpsonScene(x))", "score": 0}
{"id": "eqasc_validation_850", "prediction": "all x.(Hurricane(x) -> (MovesOverLand(x) & DropsOnSaffirSimpsonScales(x)))", "score": 0}
{"id": "eqasc_validation_850", "prediction": "all x.(Hurricane(x) -> MovesOverLand(x))", "score": 0}
{"id": "eqasc_validation_850", "prediction": "all x y.((Hurricane(x) & MovesOverLand(x,y)) -> DropsOnSaffirSimpsonScale(x))", "score": 0}
{"id": "eqasc_validation_851", "prediction": "all x.(Hurricane(x) -> ExtremelyDangerousStorm(x))", "score": 0}
{"id": "eqasc_validation_851", "prediction": "all x y.((Hurricane(x) & Storm(y)) -> ExtremelyDangerous(x,y))", "score": 0}
{"id": "eqasc_validation_851", "prediction": "all x.(Hurricane(x) -> ExtremelyDangerous(x))", "score": 0}
{"id": "eqasc_validation_851", "prediction": "all x.(Hurricane(x) -> ExtremelyDangerStorm(x))", "score": 0}
{"id": "eqasc_validation_851", "prediction": "all x.(Hurricane(x) -> (ExtremelyDangerousStorm(x)))", "score": 0}
{"id": "eqasc_validation_851", "prediction": "all x.(Hurricane(x) -> ExtremelyDamagingStorm(x))", "score": 0}
{"id": "eqasc_validation_851", "prediction": "all x y.((Hurricane(x) & Storm(y)) -> ExtremelyDangerous(x))", "score": 0}
{"id": "eqasc_validation_851", "prediction": "all x.(Hurricane(x) -> ExceptionallyDangerousStorm(x))", "score": 0}
{"id": "eqasc_validation_851", "prediction": "all x.(Hurricane(x) -> (DangerousStorm(x) & ExtremelyDangerous(x)))", "score": 0}
{"id": "eqasc_validation_851", "prediction": "all x y z.((Hurricane(x) & Storm(y) & Storm(z)) -> ExtremelyDangerous(x,y,z))", "score": 0}
{"id": "eqasc_validation_851", "prediction": "all x.(Hurricane(x) -> (ExtremelyDangerousStorm(x) & Storm(x)))", "score": 0}
{"id": "eqasc_validation_851", "prediction": "all x.(Hurricane(x) -> (ExtremelyDangerous(x) & Storm(x)))", "score": 0}
{"id": "eqasc_validation_851", "prediction": "all x.(Hurricane(x) -> VeryDangerousStorm(x))", "score": 0}
{"id": "eqasc_validation_851", "prediction": "all x.(Hurricane(x) -> (ExtremelyDangerousStorm(x) & -DangerousStorm(x)))", "score": 0}
{"id": "eqasc_validation_851", "prediction": "all x.(Horizon(x) -> ExtremelyDangerousStorm(x))", "score": 0}
{"id": "eqasc_validation_851", "prediction": "all x.(Hurricane(x) -> (ExtremelyDangerousStorm(x) & ExtremelyDangerousStorm(x)))", "score": 0}
{"id": "eqasc_validation_852", "prediction": "all x.((Storm(x) & ExtremelyDangerous(x) & MovesOverLand(x)) -> DecreasesStrength(x))", "score": 0}
{"id": "eqasc_validation_852", "prediction": "all x y.((Storm(x) & ExtremelyDangerous(x) & MovesOverLand(x)) -> DecreasesStrength(y))", "score": 0}
{"id": "eqasc_validation_852", "prediction": "all x.((Storm(x) & ExtremelyDangerous(x)) -> (DecreasesStrength(x) & MovesOverLand(x)))", "score": 0}
{"id": "eqasc_validation_852", "prediction": "all x.((Storm(x) & ExtremelyDangerous(x)) -> (MovesOverLand(x) & DecreasesStrength(x)))", "score": 0}
{"id": "eqasc_validation_852", "prediction": "all x y.((Storm(x) & ExtremelyDangerous(x) & MovesOverLand(x)) -> DecreasesStrength(x))", "score": 0}
{"id": "eqasc_validation_852", "prediction": "all x y z.((Storm(x) & ExtremelyDangerous(x) & Land(y) & MovesOver(x,y)) -> DecreasesStrength(x))", "score": 0}
{"id": "eqasc_validation_852", "prediction": "all x y.((Storm(x) & ExtremelyDangerous(x) & MovesOverLand(x,y)) -> DecreasesStrength(x))", "score": 0}
{"id": "eqasc_validation_852", "prediction": "all x y.((Storm(x) & ExtremelyDangerous(x) & MovesOverLand(x)) -> (DecreasesStrength(y) & DecreasesStrength(y)))", "score": 0}
{"id": "eqasc_validation_852", "prediction": "all x.((Storm(x) & ExtremelyDangerous(x) & MovesOverLand(x)) -> DecreasedStrength(x))", "score": 0}
{"id": "eqasc_validation_852", "prediction": "all x.((Storm(x) & ExtremelyDangerous(x)) -> (DecreasedStrength(x) & MovesOverLand(x)))", "score": 0}
{"id": "eqasc_validation_852", "prediction": "all x y z.((Storm(x) & ExtremelyDangerous(x) & Land(y) & MovesOver(x,y)) -> DecreasesStrength(x,z))", "score": 0}
{"id": "eqasc_validation_852", "prediction": "all x y z.((Storm(x) & ExtremelyDangerous(x) & Land(y) & Land(z) & MovesOver(x,y,z)) -> DecreasesStrength(x))", "score": 0}
{"id": "eqasc_validation_852", "prediction": "all x y.((Storm(x) & ExtremelyDangerous(x) & MovesOverLand(x)) -> DecreasesStrength(x,y))", "score": 0}
{"id": "eqasc_validation_852", "prediction": "all x y.((Storm(x) & ExtremelyDangerous(x) & MovesOverLand(x)) -> DecreasedStrength(y))", "score": 0}
{"id": "eqasc_validation_852", "prediction": "all x y z.((Storm(x) & ExtremelyDangerous(x) & Land(y) & MovesOver(x,y)) -> DecreasesStrength(z))", "score": 0}
{"id": "eqasc_validation_852", "prediction": "all x y.((Storm(x) & ExtremelyDangerous(x)) -> (MovesOverLand(x,y) & DecreasesStrength(x)))", "score": 0}
{"id": "eqasc_validation_853", "prediction": "all x.(Hurricane(x) -> (FormsOverWarmTropicalWater(x) & DiesDown(x)))", "score": 0}
{"id": "eqasc_validation_853", "prediction": "all x y.((Hurricane(x) & WarmTropicalWater(y)) -> (FormsOver(x,y) & DiesDown(x)))", "score": 0}
{"id": "eqasc_validation_853", "prediction": "all x y z.((Hurricane(x) & WarmTropicalWater(y) & Ocean(z)) -> (FormsOver(x,y) & DiesDown(x,z)))", "score": 0}
{"id": "eqasc_validation_853", "prediction": "all x.(Hurricane(x) -> (FormsOverWarmTropicalWater(x) & DiesDownWhenMovedOverLand(x)))", "score": 0}
{"id": "eqasc_validation_853", "prediction": "all x y z.((Hurricane(x) & WarmTropicalWater(y) & Ocean(z)) -> (FormsOver(x,y,z) & DiesDown(x)))", "score": 0}
{"id": "eqasc_validation_853", "prediction": "all x.(Hurricane(x) -> (FormsOverWarmTropicalWater(x) & DiesDownWhenMovingOverLand(x)))", "score": 0}
{"id": "eqasc_validation_853", "prediction": "all x.(Hurricane(x) -> (FormsOverWarmTropicalWater(x) & DiesDown(x) & MovesOverLand(x)))", "score": 0}
{"id": "eqasc_validation_853", "prediction": "all x y z.((Hurricane(x) & WarmTropicalWater(y) & Ocean(z)) -> (FormsOver(x,y) & DiesDown(x)))", "score": 0}
{"id": "eqasc_validation_853", "prediction": "all x y.((Hurricane(x) & Ocean(y)) -> (FormsOverWarmTropicalWater(x,y) & DiesDown(x,y)))", "score": 0}
{"id": "eqasc_validation_853", "prediction": "all x y z.((Hurricane(x) & WarmTropicalWater(y) & Ocean(z)) -> (FormsOver(x,y,z) & DiesDown(x,y)))", "score": 0}
{"id": "eqasc_validation_853", "prediction": "all x y z.((Hurricane(x) & WarmTropicalWater(y) & Ocean(z) & Land(w)) -> (FormsOver(x,y,z) & DiesDown(x,w)))", "score": 0}
{"id": "eqasc_validation_853", "prediction": "all x y z.((Hurricane(x) & WarmTropicalWater(y) & Ocean(z) & Land(w)) -> (FormsOver(x,y) & DiesDown(x,z)))", "score": 0}
{"id": "eqasc_validation_853", "prediction": "all x y.((Hurricane(x) & Ocean(y)) -> (FormsOverWarmTropicalWater(x,y) & DiesDown(x)))", "score": 0}
{"id": "eqasc_validation_853", "prediction": "all x y.((Hurricane(x) & WarmTropicalWater(y)) -> (FormsOver(x,y) & DiesDown(x,y)))", "score": 0}
{"id": "eqasc_validation_853", "prediction": "all x y.((Hurricane(x) & WarmTropicalWater(y) & Ocean(y)) -> (FormsOver(x,y) & DiesDown(x)))", "score": 0}
{"id": "eqasc_validation_853", "prediction": "all x y z.((Hurricane(x) & WarmTropicalWater(y) & Ocean(z) & Land(w)) -> (FormsOver(x,y,z) & DiesDown(x)))", "score": 0}
{"id": "eqasc_validation_854", "prediction": "all x.(Hurricane(x) -> (FormsOverWarmTropicalWater(x) & OceanDecreasesStrengthOnGround(x)))", "score": 0}
{"id": "eqasc_validation_854", "prediction": "all x y.((Hurricane(x) & WarmTropicalWater(y)) -> FormsOver(x,y))", "score": 0}
{"id": "eqasc_validation_854", "prediction": "all x y z.((Hurricane(x) & WarmTropicalWater(y) & OceanDecreasesStrengthOnGround(z)) -> FormsOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_854", "prediction": "all x y.((Hurricane(x) & WarmTropicalWater(y) & OceanDecreasesStrengthOnGround(x)) -> FormsOver(x,y))", "score": 0}
{"id": "eqasc_validation_854", "prediction": "all x y z.((Hurricane(x) & WarmTropicalWater(y) & OceanDecreaseStrengthOnGround(z)) -> FormsOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_854", "prediction": "all x y z.((Hurricane(x) & WarmTropicalWater(y) & OceanDecreaseStrength(z)) -> FormsOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_854", "prediction": "all x.(Hurricane(x) -> (FormsOverWarmTropicalWater(x) & DecreasesStrengthOnGround(x)))", "score": 0}
{"id": "eqasc_validation_854", "prediction": "all x y z.((Hurricane(x) & WarmTropicalWater(y) & OceanDecreasesStrength(z)) -> FormsOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_854", "prediction": "all x.(Hurricane(x) -> (FormsOverWarmTropicalWater(x) & OceanDecreasesStrength(x)))", "score": 0}
{"id": "eqasc_validation_854", "prediction": "all x y.((Hurricane(x) & WarmTropicalWater(y) & OceanDecreasesStrengthOnGround(x,y)) -> FormsOver(x,y))", "score": 0}
{"id": "eqasc_validation_854", "prediction": "all x y z.((Hurricane(x) & WarmTropicalWater(y) & Ocean(z)) -> FormsOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_854", "prediction": "all x y.((Hurricane(x) & WarmTropicalWater(y) & OceanDecreaseStrengthOnGround(x)) -> FormsOver(x,y))", "score": 0}
{"id": "eqasc_validation_854", "prediction": "all x.(Hurricane(x) -> (FormsOverWarmTropicalWater(x) & OceanDecreasesStrength(x) & Ground(x)))", "score": 0}
{"id": "eqasc_validation_854", "prediction": "all x y z.((Hurricane(x) & WarmTropicalWater(y) & OceanDecreasedStrength(z)) -> FormsOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_854", "prediction": "all x.(Hurricane(x) -> (FormsOverWarmTropicalWater(x) & OceanDecreasedStrengthOnGround(x)))", "score": 0}
{"id": "eqasc_validation_855", "prediction": "all x.(Hurricane(x) -> TropicalCyclone(x))", "score": 0}
{"id": "eqasc_validation_855", "prediction": "all x.(Hurricane(x) -> (TropicalCyclone(x) & Hurricane(x)))", "score": 0}
{"id": "eqasc_validation_855", "prediction": "all x.(Hurricane(x) -> (TropicalCyclone(x) & Tropical(x)))", "score": 0}
{"id": "eqasc_validation_855", "prediction": "all x y.((Hurricane(x) & TropicalCyclone(y)) -> Hurricane(x))", "score": 0}
{"id": "eqasc_validation_855", "prediction": "all x.(Hurricane(x) -> (TropicalCyclone(x) | TropicalCyclone(x)))", "score": 0}
{"id": "eqasc_validation_855", "prediction": "all x.(Hurricane(x) -> (TropicalCyclone(x) & -TropicalCyclone(x)))", "score": 0}
{"id": "eqasc_validation_855", "prediction": "all x.(Hurricane(x) -> (TropicalCyclone(x) & TropicalCyclone(x)))", "score": 0}
{"id": "eqasc_validation_855", "prediction": "all x y z.((Hurricane(x) & TropicalCyclone(y) & Hurricane(z)) -> TropicalCyclone(x,y,z))", "score": 0}
{"id": "eqasc_validation_855", "prediction": "all x.(Hurricane(x) -> (ThailandCyclone(x) & Tropical(x)))", "score": 0}
{"id": "eqasc_validation_855", "prediction": "all x y.((Hurricane(x) & TropicalCyclone(y)) -> Hurricane(x,y))", "score": 0}
{"id": "eqasc_validation_855", "prediction": "all x.(Hurricane(x) -> (TraditionalCyclone(x) & Hurricane(x)))", "score": 0}
{"id": "eqasc_validation_856", "prediction": "all x.((TropicalCyclone(x) & MovesOverLand(x)) -> DecreasesStrength(x))", "score": 0}
{"id": "eqasc_validation_856", "prediction": "all x.(TropicalCyclone(x) -> (MovesOverLand(x) & DecreasesStrength(x)))", "score": 0}
{"id": "eqasc_validation_856", "prediction": "all x y.((TropicalCyclone(x) & MovesOverLand(x)) -> DecreasesStrength(y))", "score": 0}
{"id": "eqasc_validation_856", "prediction": "all x.((TropicalCyclone(x) & MovesOverLand(x)) -> DecreasedStrength(x))", "score": 0}
{"id": "eqasc_validation_856", "prediction": "all x y.((TropicalCyclone(x) & MovesOverLand(x)) -> DecreasesStrength(x,y))", "score": 0}
{"id": "eqasc_validation_856", "prediction": "all x y z.((TropicalCyclone(x) & Land(y) & Land(z) & MovesOver(x,y)) -> DecreasesStrength(x,z))", "score": 0}
{"id": "eqasc_validation_856", "prediction": "all x y z.((TropicalCyclone(x) & Land(y) & Land(z) & MovesOver(x,y,z)) -> DecreasesStrength(x))", "score": 0}
{"id": "eqasc_validation_856", "prediction": "all x y.((TropicalCyclone(x) & MovesOverLand(x,y)) -> DecreasesStrength(x))", "score": 0}
{"id": "eqasc_validation_856", "prediction": "all x y z.((TropicalCyclone(x) & Land(y) & MovesOver(x,y)) -> DecreasesStrength(x,z))", "score": 0}
{"id": "eqasc_validation_856", "prediction": "all x y.((TropicalCyclone(x) & MovesOverLand(x)) -> DecreasedStrength(y))", "score": 0}
{"id": "eqasc_validation_856", "prediction": "all x y z.((TropicalCyclone(x) & Land(y) & Land(z) & MovesOver(x,y,z)) -> DecreasesStrength(x,y))", "score": 0}
{"id": "eqasc_validation_856", "prediction": "all x y.((TropicalCyclone(x) & Land(y) & MovesOver(x,y)) -> DecreasesStrength(x,y))", "score": 0}
{"id": "eqasc_validation_856", "prediction": "all x y z.((TropicalCyclone(x) & Land(y) & Land(z) & MovesOver(x,y,z)) -> DecreasesStrength(x,y,z))", "score": 0}
{"id": "eqasc_validation_856", "prediction": "all x y.((TropicalCyclone(x) & Land(y) & MovesOver(x,y)) -> DecreasesStrength(x))", "score": 0}
{"id": "eqasc_validation_856", "prediction": "all x y z.((TropicalCyclone(x) & Land(y) & TropicalCyclone(z) & MovesOver(x,y)) -> DecreasesStrength(x,z))", "score": 0}
{"id": "eqasc_validation_856", "prediction": "all x y.((TropicalCyclone(x) & MovesOverLand(x,y)) -> DecreasesStrength(x,y))", "score": 0}
{"id": "eqasc_validation_857", "prediction": "all x.(Blood(x) -> FluidConnectiveTissue(x))", "score": 0}
{"id": "eqasc_validation_857", "prediction": "all x.(Blue(x) -> FluidConnectiveTissue(x))", "score": 0}
{"id": "eqasc_validation_857", "prediction": "all x y.((Blood(x) & ConnectiveTissue(y)) -> Fluid(x,y))", "score": 0}
{"id": "eqasc_validation_857", "prediction": "all x y.((Blood(x) & ConnectiveTissue(y)) -> Fluid(x))", "score": 0}
{"id": "eqasc_validation_857", "prediction": "all x y.((Blood(x) & FluidConnectiveTissue(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_857", "prediction": "all x y z.((Blood(x) & ConnectiveTissue(y) & Fluid(z)) -> Fluid(x,y,z))", "score": 0}
{"id": "eqasc_validation_857", "prediction": "all x.(Blood(x) -> LiquidConnectiveTissue(x))", "score": 0}
{"id": "eqasc_validation_857", "prediction": "all x y.((Blood(x) & FluidConnectiveTissue(y)) -> Fluid(x,y))", "score": 0}
{"id": "eqasc_validation_857", "prediction": "all x.(Blood(x) -> FluidContainiveTissue(x))", "score": 0}
{"id": "eqasc_validation_857", "prediction": "all x y.((Blood(x) & FluidConnectiveTissue(y)) -> IsFluid(x,y))", "score": 0}
{"id": "eqasc_validation_857", "prediction": "all x.((Blood(x) & FluidConnectiveTissue(x)) -> FluidTissue(x))", "score": 0}
{"id": "eqasc_validation_857", "prediction": "all x.((Blood(x) & FluidConnectiveTissue(x)) -> ConnectiveTissue(x))", "score": 0}
{"id": "eqasc_validation_857", "prediction": "all x.((Blood(x) & FluidConnectiveTissue(x)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_857", "prediction": "all x.((Blood(x) & FluidConnectiveTissue(x)) -> Fluid(x))", "score": 0}
{"id": "eqasc_validation_858", "prediction": "all x.(Blood(x) -> (ConnectiveTissue(x) & CarriesOxygen(x) & DeliversNutrient(x)))", "score": 0}
{"id": "eqasc_validation_858", "prediction": "all x.(Blood(x) -> (ConnectiveTissue(x) & CarriesOxygen(x) & DeliversNutrientToTissues(x)))", "score": 0}
{"id": "eqasc_validation_858", "prediction": "all x.(Blood(x) -> (ConnectiveTissue(x) & CarriesOxygen(x) & DeliversNutrient(x) & ToTissues(x)))", "score": 0}
{"id": "eqasc_validation_858", "prediction": "all x.(Blood(x) -> (ConnectiveTissue(x) & CarriesOxygenAndNutrient(x) & ToTissues(x)))", "score": 0}
{"id": "eqasc_validation_858", "prediction": "all x.(Blood(x) -> (ConnectiveTissue(x) & CarriesOxygenAndNutrient(x) & DeliversToTissues(x)))", "score": 0}
{"id": "eqasc_validation_858", "prediction": "all x.(Blood(x) -> (ConnectiveTissue(x) & CarriesOxygenAndNutrientToTissues(x) & DeliversOxygenAndNutrientToTissues(x)))", "score": 0}
{"id": "eqasc_validation_858", "prediction": "all x.(Blood(x) -> (ConnectiveTissue(x) & CarriesOxygenAndNutrientToTissues(x) & DeliversToTissues(x)))", "score": 0}
{"id": "eqasc_validation_858", "prediction": "all x.(Blood(x) -> (ConnectiveTissue(x) & CarriesOxygenAndNutrientToTissues(x) & DeliversOxygenAndNutrient(x)))", "score": 0}
{"id": "eqasc_validation_858", "prediction": "all x y.((Blood(x) & Tissue(y)) -> (ConnectiveTissue(x) & CarriesOxygen(x,y) & DeliversNutrient(x,y)))", "score": 0}
{"id": "eqasc_validation_858", "prediction": "all x.(Blood(x) -> (ConnectiveTissue(x) & CarriesOxygen(x) & DeliversNutrients(x)))", "score": 0}
{"id": "eqasc_validation_858", "prediction": "all x y.((Blood(x) & Tissue(y)) -> (ConnectiveTissue(x) & CarriesOxygen(x) & DeliversNutrient(x)))", "score": 0}
{"id": "eqasc_validation_858", "prediction": "all x.(Blood(x) -> (ConnectiveTissue(x) & CarriesOrDeliversOxygen(x) & DeliversNutrient(x)))", "score": 0}
{"id": "eqasc_validation_858", "prediction": "all x.(Blood(x) -> (ConnectiveTissue(x) & Carries(x) & DeliversOxygen(x) & DeliversNutrient(x)))", "score": 0}
{"id": "eqasc_validation_858", "prediction": "all x.((Blood(x) & ConnectiveTissue(x)) -> (CarriesOxygen(x) & DeliversNutrient(x)))", "score": 0}
{"id": "eqasc_validation_858", "prediction": "all x.(Blood(x) -> (ConnectiveTissue(x) & CarriesOrDeliversOxygenAndNutrient(x)))", "score": 0}
{"id": "eqasc_validation_859", "prediction": "all x.(Blood(x) -> (FluidTissue(x) & DeliversOxygen(x) & DeliversNutrients(x)))", "score": 0}
{"id": "eqasc_validation_859", "prediction": "all x.(Blood(x) -> (FluidTissue(x) & DeliversOxygen(x) & DeliversNutrients(x) & ToTissues(x)))", "score": 0}
{"id": "eqasc_validation_859", "prediction": "all x.(Blood(x) -> (FluidTissue(x) & DeliversOxygen(x) & DeliversNutrients(x) & ToOtherTissues(x)))", "score": 0}
{"id": "eqasc_validation_859", "prediction": "all x.(Blood(x) -> (FluidTissue(x) & DeliversOxygen(x) & DeliversNutrientsToTissues(x)))", "score": 0}
{"id": "eqasc_validation_859", "prediction": "all x.(Blood(x) -> (FluidTissue(x) & DeliversOxygenAndNutrients(x) & ToTissues(x)))", "score": 0}
{"id": "eqasc_validation_859", "prediction": "all x y.((Blood(x) & Tissue(y)) -> (FluidTissue(x) & DeliversOxygen(x,y) & DeliversNutrients(x,y)))", "score": 0}
{"id": "eqasc_validation_859", "prediction": "all x.(Blood(x) -> (FluidTissue(x) & DeliversOxygenAndNutrients(x) & ToOtherTissues(x)))", "score": 0}
{"id": "eqasc_validation_859", "prediction": "all x y.((Blood(x) & Tissue(y)) -> (FluidTissue(x) & DeliversOxygen(x) & DeliversNutrients(x)))", "score": 0}
{"id": "eqasc_validation_859", "prediction": "all x.(Blood(x) -> (FluidTissue(x) & DeliversOxygenToTissues(x) & DeliversNutrientsToTissues(x)))", "score": 0}
{"id": "eqasc_validation_859", "prediction": "all x y.((Blood(x) & Tissue(y)) -> (FluidTissue(x) & DeliversOxygenAndNutrients(x,y)))", "score": 0}
{"id": "eqasc_validation_859", "prediction": "all x.(Blood(x) -> (FluidTissue(x) & DeliversOxygenAndNutrientsToTissues(x)))", "score": 0}
{"id": "eqasc_validation_859", "prediction": "all x.(Blood(x) -> (FluidTissue(x) & DeliversOxygen(x) & DeliversNutrientsToOtherTissues(x)))", "score": 0}
{"id": "eqasc_validation_859", "prediction": "all x.(Blood(x) -> (FluidTissue(x) & DeliversOxygenAndNutrients(x)))", "score": 0}
{"id": "eqasc_validation_860", "prediction": "all x.(ConnectiveTissue(x) -> ViscoElastic(x))", "score": 0}
{"id": "eqasc_validation_860", "prediction": "all x.((ConnectiveTissue(x) & ViscoElastic(x)) -> ClassedAs(x))", "score": 0}
{"id": "eqasc_validation_860", "prediction": "all x.((ConnectiveTissue(x) & ViscoElastic(x)) -> ClassedAs(x,y))", "score": 0}
{"id": "eqasc_validation_860", "prediction": "all x.(ContainiveTissue(x) -> ViscoElastic(x))", "score": 0}
{"id": "eqasc_validation_860", "prediction": "all x.(ConductiveTissue(x) -> ViscoElastic(x))", "score": 0}
{"id": "eqasc_validation_860", "prediction": "all x.((ConnectiveTissue(x) & ViscoElastic(x)) -> Classed(x))", "score": 0}
{"id": "eqasc_validation_860", "prediction": "all x.(ConnectiveTissue(x) -> Viscoelastic(x))", "score": 0}
{"id": "eqasc_validation_860", "prediction": "all x.((ConnectiveTissue(x) & ViscoElastic(x)) -> Classified(x))", "score": 0}
{"id": "eqasc_validation_860", "prediction": "all x.((ConnectiveTissue(x) & ViscoElastic(x)) -> ClassifiedAs(x))", "score": 0}
{"id": "eqasc_validation_860", "prediction": "all x.((ConnectiveTissue(x) & ViscoElastic(x)) -> ClassedAs(x,ViscoElastic))", "score": 0}
{"id": "eqasc_validation_860", "prediction": "all x.((ConnectiveTissue(x) & ViscoElastic(x)) -> ClassifiedAs(x,y))", "score": 0}
{"id": "eqasc_validation_860", "prediction": "all x y.((ConnectiveTissue(x) & ViscoElastic(y)) -> ClassedAs(x,y))", "score": 0}
{"id": "eqasc_validation_860", "prediction": "all x.(ConnectiveTissue(x) -> Visco-Elastic(x))", "score": -1}
{"id": "eqasc_validation_860", "prediction": "all x.((ConnectiveTissue(x) & ViscoElastic(x)) -> ClassedAs(x,ViscoElastic(x))", "score": -1}
{"id": "eqasc_validation_861", "prediction": "all x.(Blood(x) -> ViscoElastic(x))", "score": 0}
{"id": "eqasc_validation_861", "prediction": "all x.((Blood(x) & ViscoElastic(x)) -> ClassedAs(x))", "score": 0}
{"id": "eqasc_validation_861", "prediction": "all x.((Blood(x) & ViscoElastic(x)) -> ClassedAs(x,y))", "score": 0}
{"id": "eqasc_validation_861", "prediction": "all x.((Blood(x) & ViscoElastic(x)) -> Classed(x))", "score": 0}
{"id": "eqasc_validation_861", "prediction": "all x.((Blood(x) & ViscoElastic(x)) -> ClassedAs(x,Blood))", "score": 0}
{"id": "eqasc_validation_861", "prediction": "all x.((Blood(x) & ViscoElastic(x)) -> Classified(x))", "score": 0}
{"id": "eqasc_validation_861", "prediction": "all x y.((Blood(x) & ViscoElastic(y)) -> ClassedAs(x,y))", "score": 0}
{"id": "eqasc_validation_861", "prediction": "all x.((Blood(x) & ViscoElastic(x)) -> ClassifiedAs(x))", "score": 0}
{"id": "eqasc_validation_861", "prediction": "all x.((Blood(x) & ViscoElastic(x)) -> ClassedAs(x,blood))", "score": 0}
{"id": "eqasc_validation_861", "prediction": "all x.((Blood(x) & ViscoElastic(x)) -> ClassifiedAs(x,Blood))", "score": 0}
{"id": "eqasc_validation_861", "prediction": "all x.((Blood(x) & ViscoElastic(x)) -> ClassedIn(x))", "score": 0}
{"id": "eqasc_validation_861", "prediction": "all x.(ViscoElastic(x) -> Blood(x))", "score": 0}
{"id": "eqasc_validation_861", "prediction": "all x.((Blood(x) & ViscoElastic(x)) -> ClassifiedAs(x,y))", "score": 0}
{"id": "eqasc_validation_861", "prediction": "all x.(Blood(x) -> Viscoelastic(x))", "score": 0}
{"id": "eqasc_validation_862", "prediction": "all x.(Blood(x) -> PulsedThroughBody(x))", "score": 0}
{"id": "eqasc_validation_862", "prediction": "all x y.((Blood(x) & Body(y)) -> PulsedThrough(x,y))", "score": 0}
{"id": "eqasc_validation_862", "prediction": "all x.((Blood(x) & PulsedThroughBody(x)) -> PulsedThroughBody(x))", "score": 0}
{"id": "eqasc_validation_862", "prediction": "all x y z.((Blood(x) & Body(y) & Body(z)) -> PulsedThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_862", "prediction": "all x y.((Blood(x) & Body(y)) -> Pulsed(x,y))", "score": 0}
{"id": "eqasc_validation_862", "prediction": "all x y z.((Blood(x) & Body(y) & PulsedThrough(x,y)) -> PulsedThrough(x,z))", "score": 0}
{"id": "eqasc_validation_862", "prediction": "all x y z.((Blood(x) & Body(y) & PulsedThrough(x,y)) -> PulsedThrough(x,y))", "score": 0}
{"id": "eqasc_validation_862", "prediction": "all x y.((Blood(x) & Body(y) & PulsedThrough(x,y)) -> PulsedThrough(x,y))", "score": 0}
{"id": "eqasc_validation_862", "prediction": "all x y z.((Blood(x) & Body(y) & PulsedThrough(x,y)) -> Pulsed(x,y))", "score": 0}
{"id": "eqasc_validation_862", "prediction": "all x y z.((Blood(x) & Body(y) & PulsedThrough(x,y)) -> Pulsed(x,z))", "score": 0}
{"id": "eqasc_validation_862", "prediction": "all x y.((Blood(x) & Body(y) & PulsedThrough(x,y)) -> Pulsed(x,y))", "score": 0}
{"id": "eqasc_validation_862", "prediction": "all x y z.((Blood(x) & Body(y) & Pulsed(z)) -> PulsedThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_862", "prediction": "all x y z.((Blood(x) & Body(y) & Body(z)) -> Pulsed(x,y,z))", "score": 0}
{"id": "eqasc_validation_862", "prediction": "all x y z.((Blood(x) & Body(y) & PulsedThrough(x,z)) -> PulsedThrough(x,y))", "score": 0}
{"id": "eqasc_validation_862", "prediction": "all x y z.((Blood(x) & Body(y) & Pulsed(x,y)) -> PulsedThrough(x,y))", "score": 0}
{"id": "eqasc_validation_862", "prediction": "all x y z.((Blood(x) & Body(y) & PulsedThrough(z)) -> PulsedThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_863", "prediction": "all x y.((FluidConnectiveTissue(x) & Body(y)) -> PulsedThrough(x,y))", "score": 0}
{"id": "eqasc_validation_863", "prediction": "all x y z.((FluidConnectiveTissue(x) & Body(y) & Body(z)) -> PulsedThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_863", "prediction": "all x y.((FluidConnectiveTissue(x) & Body(y) & PulsedThrough(x,y)) -> PulsedThrough(x,y))", "score": 0}
{"id": "eqasc_validation_863", "prediction": "all x.(FluidConnectiveTissue(x) -> PulsedThroughBody(x))", "score": 0}
{"id": "eqasc_validation_863", "prediction": "all x y z.((FluidConnectiveTissue(x) & Body(y) & Body(z) & PulsedThrough(x,y,z)) -> PulsedThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_863", "prediction": "all x y z.((FluidConnectiveTissue(x) & Body(y) & Body(z) & PulsedThrough(x,y,z)) -> PulsedThrough(x,y))", "score": 0}
{"id": "eqasc_validation_863", "prediction": "all x.((FluidConnectiveTissue(x) & PulsedThroughBody(x)) -> PulsedThroughBody(x))", "score": 0}
{"id": "eqasc_validation_863", "prediction": "all x y z w.((FluidConnectiveTissue(x) & Body(y) & Body(z) & PulsedThrough(x,y,z)) -> PulsedThrough(x,w))", "score": 0}
{"id": "eqasc_validation_863", "prediction": "all x y z.((FluidConnectiveTissue(x) & Body(y) & Body(z)) -> PulsedThrough(x,y))", "score": 0}
{"id": "eqasc_validation_863", "prediction": "all x y z.((FluidConnectiveTissue(x) & Body(y) & Body(z) & PulsedThrough(x,y)) -> PulsedThrough(x,z))", "score": 0}
{"id": "eqasc_validation_863", "prediction": "all x y z.((FluidConnectiveTissue(x) & Body(y) & Body(z)) -> PulsedThrough(x,z))", "score": 0}
{"id": "eqasc_validation_863", "prediction": "all x y z w.((FluidConnectiveTissue(x) & Body(y) & Body(z) & PulsedThrough(x,w)) -> PulsedThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_863", "prediction": "all x y z.((FluidConnectiveTissue(x) & Body(y) & Body(z) & PulsedThrough(x,z)) -> PulsedThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_863", "prediction": "all x y z.((FluidConnectiveTissue(x) & Body(y) & Body(z)) -> PulsedThroughBody(x,y,z))", "score": 0}
{"id": "eqasc_validation_863", "prediction": "all x.(FluidConnectiveTissuePulsedThroughBody(x) -> PulsedThroughBody(x))", "score": 0}
{"id": "eqasc_validation_863", "prediction": "all x y z.((FiberConnectiveTissue(x) & Body(y) & Body(z)) -> PulsedThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_864", "prediction": "all x.((Tissues(x) & Fluids(x)) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_864", "prediction": "all x.((Tissues(x) & Fluids(x) & Body(x)) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_864", "prediction": "all x.((Tissue(x) | Fluid(x)) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_864", "prediction": "all x.((Tissue(x) & Fluid(x)) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_864", "prediction": "all x.((Tissue(x) & Fluid(x) & Body(x)) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_864", "prediction": "all x.((Tissues(x) | Fluids(x)) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_864", "prediction": "all x.((Tissue(x) & Fluid(x) & InBody(x)) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_864", "prediction": "all x.((Tissues(x) & Fluids(x) & InBody(x)) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_864", "prediction": "all x.((Tissues(x) & FluidsInBody(x)) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_864", "prediction": "all x.((TissuesAndFluids(x) & Body(x)) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_864", "prediction": "all x.((TissuesAndFluids(x) & InBody(x)) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_864", "prediction": "all x y.((Tissue(x) & Fluid(y) & Body(x)) -> ContainsMinerals(x,y))", "score": 0}
{"id": "eqasc_validation_864", "prediction": "all x.(TissuesAndFluidsInBody(x) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_864", "prediction": "all x.(TissuesAndFluids(x) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_864", "prediction": "all x y.((Tissue(x) & Fluid(y) & Body(x)) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_864", "prediction": "all x y.((Tissue(x) & Fluid(y)) -> ContainsMinerals(x,y))", "score": 0}
{"id": "eqasc_validation_865", "prediction": "all x y.((Blood(x) & Body(y)) -> ContainsMinerals(x,y))", "score": 0}
{"id": "eqasc_validation_865", "prediction": "all x.((Blood(x) & InBody(x)) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_865", "prediction": "all x.((Blood(x) & Body(x)) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_865", "prediction": "all x y z.((Blood(x) & Body(y) & Minerals(z)) -> Contains(x,y,z))", "score": 0}
{"id": "eqasc_validation_865", "prediction": "all x.((Blood(x) & Body(y)) -> ContainsMinerals(x,y))", "score": 0}
{"id": "eqasc_validation_865", "prediction": "all x y.((Blood(x) & Body(y) & ContainsMinerals(x,y)) -> ContainsMinerals(x,y))", "score": 0}
{"id": "eqasc_validation_865", "prediction": "all x y z.((Blood(x) & Body(y) & Minerals(z)) -> ContainsInBlood(x,y,z))", "score": 0}
{"id": "eqasc_validation_865", "prediction": "all x y.((Blood(x) & Body(y) & InBody(x,y)) -> ContainsMinerals(x,y))", "score": 0}
{"id": "eqasc_validation_865", "prediction": "all x y.((Blood(x) & Body(y) & InBody(x,y)) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_865", "prediction": "all x y z.((Blood(x) & Body(y) & Minerals(z)) -> ContainsInBody(x,y,z))", "score": 0}
{"id": "eqasc_validation_865", "prediction": "all x y.((Blood(x) & Body(y) & ContainsMinerals(x,y)) -> InBody(x,y))", "score": 0}
{"id": "eqasc_validation_865", "prediction": "all x.((BloodInBody(x) & ContainsMinerals(x)) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_865", "prediction": "all x.(BloodInBody(x) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_865", "prediction": "all x y z.((Blood(x) & Body(y) & Mineral(z)) -> Contains(x,y,z))", "score": 0}
{"id": "eqasc_validation_865", "prediction": "all x.((BloodInBody(x) & InBody(x)) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_865", "prediction": "all x y z.((Blood(x) & Body(y) & Minerals(z) & InBody(x,y)) -> Contains(x,z))", "score": 0}
{"id": "eqasc_validation_866", "prediction": "all x.(Liquid(x) -> (Fluid(x) & Flows(x) & Liquids(x)))", "score": 0}
{"id": "eqasc_validation_866", "prediction": "all x.(Liquid(x) -> (exists y.(Substance(y) & Flows(y)) & exists z.(Liquid(z) & Flows(z)))))", "score": -1}
{"id": "eqasc_validation_866", "prediction": "all x.(Liquid(x) -> (Fluid(x) & Flows(x) & Liquid(x)))", "score": 0}
{"id": "eqasc_validation_866", "prediction": "all x.(Liquid(x) -> (exists y.(Substance(y) & Flows(y)) & exists z.(Liquid(z) & ExamplesOfFluids(z)))))", "score": -1}
{"id": "eqasc_validation_866", "prediction": "all x.(Liquid(x) -> (exists y.(Substance(y) & Flows(y)) & exists z.(Liquid(z) & ExamplesOf(z,x)))))", "score": -1}
{"id": "eqasc_validation_866", "prediction": "all x.(Fluid(x) -> (exists y.(Substance(y) & Flows(y)) & exists z.(Liquid(z) & ExamplesOfFluids(z)))))", "score": -1}
{"id": "eqasc_validation_866", "prediction": "all x.(Fluid(x) -> (exists y.(Substance(y) & Flows(y)) & exists z.(Liquid(z) & Flows(z)))))", "score": -1}
{"id": "eqasc_validation_866", "prediction": "all x.(Liquid(x) -> (exists y.(Substance(y) & Flows(y)) & exists z.(Liquid(z) & ExamplesOf(z,y)))))", "score": -1}
{"id": "eqasc_validation_866", "prediction": "all x.(Fluid(x) -> (Fluid(x) & Flows(x) & Liquids(x)))", "score": 0}
{"id": "eqasc_validation_866", "prediction": "(all x.(Fluid(x) -> Flows(x)) & all y.(Liquid(y) -> Fluid(y)))", "score": 0}
{"id": "eqasc_validation_866", "prediction": "all x.(Fluid(x) -> (exists y.(Substance(y) & Flows(y)) & exists z.(Liquid(z) & ExamplesOf(z,x)))))", "score": -1}
{"id": "eqasc_validation_866", "prediction": "all x.(Liquid(x) -> (Flows(x) & Liquids(x)))", "score": 0}
{"id": "eqasc_validation_866", "prediction": "all x.(Liquid(x) -> (exists y.(Substance(y) & Flows(y)) & exists z.(Liquid(z) & Examples(z)))))", "score": -1}
{"id": "eqasc_validation_866", "prediction": "all x.(Liquid(x) -> (Floid(x) & Flows(x) & Liquids(x)))", "score": 0}
{"id": "eqasc_validation_866", "prediction": "all x.(Liquid(x) -> (exists y.(Substance(y) & Flows(y)) & exists z.(Liquid(z) & ExampleOf(z,x)))))", "score": -1}
{"id": "eqasc_validation_866", "prediction": "all x.(Liquid(x) -> (exists y.(Substance(y) & Flows(y)) & exists z.(Liquid(z) & ExamplesOf(z,x))))", "score": 0}
{"id": "eqasc_validation_867", "prediction": "all x.((Blood(x) & LiquidConnectiveTissue(x)) -> LiquidConnectiveTissue(x))", "score": 0}
{"id": "eqasc_validation_867", "prediction": "all x.(Blood(x) -> LiquidConnectiveTissue(x))", "score": 0}
{"id": "eqasc_validation_867", "prediction": "all x y.((Blood(x) & LiquidConnectiveTissue(y)) -> LiquidConnectiveTissue(x,y))", "score": 0}
{"id": "eqasc_validation_867", "prediction": "all x.(Blood(x) -> (LiquidConnectiveTissue(x) & LiquidConnectiveTissue(x)))", "score": 0}
{"id": "eqasc_validation_867", "prediction": "all x y.((Blood(x) & LiquidConnectiveTissue(y)) -> LiquidConnectiveTissue(x))", "score": 0}
{"id": "eqasc_validation_867", "prediction": "all x.((Blood(x) & LiquidConnectiveTissue(x)) -> (LiquidConnectiveTissue(x) & LiquidConnectiveTissue(x)))", "score": 0}
{"id": "eqasc_validation_867", "prediction": "all x y z.((Blood(x) & LiquidConnectiveTissue(y) & LiquidConnectiveTissue(z)) -> LiquidConnectiveTissue(x,y,z))", "score": 0}
{"id": "eqasc_validation_867", "prediction": "all x.(LiquidConnectiveTissue(x) -> (Blood(x) & LiquidConnectiveTissue(x)))", "score": 0}
{"id": "eqasc_validation_867", "prediction": "all x.((Blood(x) & LiquidConnectiveTissue(x)) -> LiquidTissue(x))", "score": 0}
{"id": "eqasc_validation_867", "prediction": "all x y.((Blood(x) & LiquidConnectiveTissue(y)) -> (LiquidConnectiveTissue(x) & LiquidConnectiveTissue(x)))", "score": 0}
{"id": "eqasc_validation_867", "prediction": "all x y.((Blood(x) & LiquidConnectiveTissue(x)) -> LiquidConnectiveTissue(y))", "score": 0}
{"id": "eqasc_validation_867", "prediction": "all x y.((Blood(x) & LiquidConnectiveTissue(y)) -> LiquidTissue(x,y))", "score": 0}
{"id": "eqasc_validation_867", "prediction": "all x y z.((Blood(x) & LiquidConnectiveTissue(y) & LiquidConnectiveTissue(z)) -> LiquidTissue(x,y,z))", "score": 0}
{"id": "eqasc_validation_867", "prediction": "all x y.((Blood(x) & LiquidConnectiveTissue(y)) -> (LiquidConnectiveTissue(x,y) & LiquidConnectiveTissue(x,y)))", "score": 0}
{"id": "eqasc_validation_867", "prediction": "all x y z.((Blood(x) & LiquidConnectiveTissue(y) & LiquidConnectiveTissue(z)) -> LiquidConnectiveTissue(x))", "score": 0}
{"id": "eqasc_validation_867", "prediction": "all x.((Blue(x) & LiquidConnectiveTissue(x)) -> LiquidConnectiveTissue(x))", "score": 0}
{"id": "eqasc_validation_868", "prediction": "all x y.((Blood(x) & Brain(y)) -> CarriesOxygen(x,y))", "score": 0}
{"id": "eqasc_validation_868", "prediction": "all x.(Blood(x) -> CarriesOxygenToBrain(x))", "score": 0}
{"id": "eqasc_validation_868", "prediction": "all x y.((Blood(x) & Brain(y)) -> CarriesOxygenTo(x,y))", "score": 0}
{"id": "eqasc_validation_868", "prediction": "all x y z.((Blood(x) & Brain(y) & Oxygen(z)) -> CarriesTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_868", "prediction": "all x y.((Blue(x) & Brain(y)) -> CarriesOxygen(x,y))", "score": 0}
{"id": "eqasc_validation_868", "prediction": "all x y z.((Blood(x) & Brain(y) & Oxygen(z)) -> Carries(x,y,z))", "score": 0}
{"id": "eqasc_validation_868", "prediction": "all x.(Blue(x) -> CarriesOxygenToBrain(x))", "score": 0}
{"id": "eqasc_validation_868", "prediction": "all x y.((Blue(x) & Brain(y)) -> CarriesOxygenTo(x,y))", "score": 0}
{"id": "eqasc_validation_868", "prediction": "all x y z.((Blue(x) & Brain(y) & Oxygen(z)) -> CarriesTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_868", "prediction": "all x.(Blood(x) -> CarriesOxygen(x))", "score": 0}
{"id": "eqasc_validation_868", "prediction": "all x.(Blood(x) -> CarriesOxygenToBody(x))", "score": 0}
{"id": "eqasc_validation_868", "prediction": "all x.((Blood(x) & Brain(y)) -> CarriesOxygen(x,y))", "score": 0}
{"id": "eqasc_validation_868", "prediction": "all x y z.((Blood(x) & Brain(y) & Oxygen(z)) -> CarriesTo(x,y))", "score": 0}
{"id": "eqasc_validation_868", "prediction": "all x y z.((Blood(x) & Brain(y) & Oxygen(z)) -> Carries(x,z))", "score": 0}
{"id": "eqasc_validation_868", "prediction": "all x y z.((Blue(x) & Brain(y) & Oxygen(z)) -> Carries(x,y,z))", "score": 0}
{"id": "eqasc_validation_869", "prediction": "all x.(FluidConnectiveTissue(x) -> CarriesOxygenToBrain(x))", "score": 0}
{"id": "eqasc_validation_869", "prediction": "all x y.((FluidConnectiveTissue(x) & Brain(y)) -> CarriesOxygen(x,y))", "score": 0}
{"id": "eqasc_validation_869", "prediction": "all x y.((FluidConnectiveTissue(x) & Brain(y)) -> CarriesOxygenTo(x,y))", "score": 0}
{"id": "eqasc_validation_869", "prediction": "all x y.((FluidConnectiveTissue(x) & Brain(y)) -> CarriesOxygenToBrain(x,y))", "score": 0}
{"id": "eqasc_validation_869", "prediction": "all x.((FluidConnectiveTissue(x) & CarriesOxygenToBrain(x)) -> CarriesOxygenToBrain(x))", "score": 0}
{"id": "eqasc_validation_869", "prediction": "all x y z.((FluidConnectiveTissue(x) & Brain(y) & Brain(z)) -> CarriesOxygenTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_869", "prediction": "all x y z.((FluidConnectiveTissue(x) & Brain(y) & Oxygen(z)) -> CarriesTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_869", "prediction": "all x y z.((FluidConnectiveTissue(x) & Oxygen(y) & Brain(z)) -> CarriesTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_869", "prediction": "all x y z.((FluidConnectiveTissue(x) & Brain(y) & Brain(z)) -> CarriesOxygen(x,y,z))", "score": 0}
{"id": "eqasc_validation_869", "prediction": "all x y z.((FluidConnectiveTissue(x) & Brain(y) & Oxygen(z)) -> CarriesToBrain(x,y,z))", "score": 0}
{"id": "eqasc_validation_869", "prediction": "all x y z.((Fluid(x) & ConnectiveTissue(y) & Brain(z)) -> CarriesOxygenTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_869", "prediction": "all x.((FluidConnectiveTissue(x) & CarriesOxygenToBrain(x)) -> CarriesOxygen(x))", "score": 0}
{"id": "eqasc_validation_869", "prediction": "all x y z.((Fluid(x) & ConnectiveTissue(y) & Brain(z)) -> CarriesOxygenTo(y,z))", "score": 0}
{"id": "eqasc_validation_869", "prediction": "all x y.((FluidConnectiveTissue(x) & Brain(y)) -> CarriesOxygenToBody(x,y))", "score": 0}
{"id": "eqasc_validation_869", "prediction": "all x y z.((FluidConnectiveTissue(x) & Brain(y) & Brain(z)) -> CarriesOxygenToBrain(x,y,z))", "score": 0}
{"id": "eqasc_validation_869", "prediction": "all x y z.((Fluid(x) & ConnectiveTissue(y) & Brain(z)) -> CarriesOxygen(x,y,z))", "score": 0}
{"id": "eqasc_validation_870", "prediction": "all x.(ConnectiveTissueCancer(x) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_870", "prediction": "all x y.((ConnectiveTissueCancer(x) & Cancer(y)) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_870", "prediction": "all x.(ConnectiveTissueCancerous(x) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_870", "prediction": "all x.(ContainiveTissueCancer(x) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_870", "prediction": "all x y.((ConnectiveTissueCancerous(x) & Cancer(y)) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_870", "prediction": "all x y.((ConnectiveTissueCancer(x) & Cancer(y)) -> Rare(x,y))", "score": 0}
{"id": "eqasc_validation_870", "prediction": "all x.((ConnectiveTissueCancer(x) & Rare(x)) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_870", "prediction": "all x.((ConnectiveTissueCancer(x) & Rare(x)) -> Cancer(x))", "score": 0}
{"id": "eqasc_validation_870", "prediction": "all x y.((ConnectiveTissueCancer(x) & Patient(y)) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_870", "prediction": "all x.(CreativeTissueCancer(x) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_870", "prediction": "all x y.((ConnectiveTissueCancerous(x) & Cancer(y)) -> Rare(x,y))", "score": 0}
{"id": "eqasc_validation_870", "prediction": "all x.((ConnectiveTissueCancerous(x) & Rare(x)) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_870", "prediction": "exists x.(ConnectiveTissueCancer(x) & Rare(x))", "score": 0}
{"id": "eqasc_validation_870", "prediction": "all x y.((ConnectiveTissueCancer(x) & Patient(y)) -> Rare(x,y))", "score": 0}
{"id": "eqasc_validation_870", "prediction": "all x.((ConnectiveTissueCancerous(x) & Rare(x)) -> Cancer(x))", "score": 0}
{"id": "eqasc_validation_871", "prediction": "all x.(BloodCancer(x) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_871", "prediction": "all x.(BloodCancerous(x) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_871", "prediction": "all x y.((BloodCancer(x) & Blood(y)) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_871", "prediction": "all x.((BloodCancer(x) & Rare(x)) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_871", "prediction": "all x.((BloodCancer(x) & Rare(x)) -> BloodCancer(x))", "score": 0}
{"id": "eqasc_validation_871", "prediction": "all x.(BlueCancer(x) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_871", "prediction": "all x.(BloodCancel(x) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_871", "prediction": "all x y.((BloodCancer(x) & Blood(y)) -> Rare(x,y))", "score": 0}
{"id": "eqasc_validation_871", "prediction": "all x y.((BloodCancerous(x) & Blood(y)) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_871", "prediction": "all x.((BloodCancerous(x) & Rare(x)) -> BloodCancer(x))", "score": 0}
{"id": "eqasc_validation_871", "prediction": "all x.((BloodCancerous(x) & Rare(x)) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_871", "prediction": "all x y.((BloodCancer(x) & BloodCancel(y)) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_871", "prediction": "all x.((BloodCancer(x) & Rare(x)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_871", "prediction": "all x.((BloodCancer(x) & Rare(x)) -> BloodCancerous(x))", "score": 0}
{"id": "eqasc_validation_871", "prediction": "all x.((BloodCancer(x) & Rare(x)) -> Cancer(x))", "score": 0}
{"id": "eqasc_validation_872", "prediction": "all x y.((Compass(x) & Ocean(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_872", "prediction": "all x y z.((Compass(x) & Ocean(y) & Ocean(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_872", "prediction": "all x y z.((Compass(x) & Ocean(y) & Ocean(z)) -> Navigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_872", "prediction": "all x y.((Compass(x) & Ocean(y)) -> Navigate(x,y))", "score": 0}
{"id": "eqasc_validation_872", "prediction": "all x.(Compass(x) -> NavigatesOceans(x))", "score": 0}
{"id": "eqasc_validation_872", "prediction": "all x y z.((Compass(x) & Ocean(y) & Ocean(z) & Navigates(x,y,z)) -> UsedToNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_872", "prediction": "all x y z.((Compass(x) & Ocean(y) & Ocean(z) & Navigates(x,y,z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_872", "prediction": "all x y z.((Compass(x) & Ocean(y) & Ocean(z) & Navigate(x,y,z)) -> Navigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_872", "prediction": "all x y.((Compass(x) & Ocean(y) & Navigates(x,y)) -> UsedToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_872", "prediction": "all x y z.((Compass(x) & Ocean(y) & Ocean(z) & Navigates(x,y,z)) -> UsesToNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_872", "prediction": "all x y z.((Compass(x) & Ocean(y) & Ocean(z) & Navigate(x,y,z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_872", "prediction": "all x y z.((Compass(x) & Ocean(y) & Ocean(z)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_872", "prediction": "all x y z.((Compass(x) & Ocean(y) & Ocean(z) & Navigate(x,y,z)) -> UsedToNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_872", "prediction": "all x y z.((Compass(x) & Ocean(y) & Ocean(z) & Navigates(x,y,z)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_872", "prediction": "all x y z w.((Compass(x) & Ocean(y) & Ocean(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_873", "prediction": "all x y.((OceanWaves(x) & Water(y)) -> TravelsOnSurface(x,y))", "score": 0}
{"id": "eqasc_validation_873", "prediction": "all x y.((OceanWave(x) & Water(y)) -> TravelsOnSurface(x,y))", "score": 0}
{"id": "eqasc_validation_873", "prediction": "all x.(OceanWaves(x) -> TravelsOnWaterSurface(x))", "score": 0}
{"id": "eqasc_validation_873", "prediction": "all x y z.((OceanWave(x) & Water(y) & Surface(z)) -> TravelsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_873", "prediction": "all x y z.((OceanWaves(x) & Water(y) & Surface(z)) -> TravelsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_873", "prediction": "all x y.((OceanWaves(x) & WaterSurface(y)) -> TravelsOn(x,y))", "score": 0}
{"id": "eqasc_validation_873", "prediction": "all x.(OceanWaves(x) -> TravelOnWaterSurface(x))", "score": 0}
{"id": "eqasc_validation_873", "prediction": "all x y.((OceanWave(x) & WaterSurface(y)) -> TravelsOn(x,y))", "score": 0}
{"id": "eqasc_validation_873", "prediction": "all x y.((OceanWaves(x) & Water(y)) -> TravelOnSurface(x,y))", "score": 0}
{"id": "eqasc_validation_873", "prediction": "all x.(OceanWave(x) -> TravelsOnWaterSurface(x))", "score": 0}
{"id": "eqasc_validation_873", "prediction": "all x y.((OceanWave(x) & Water(y)) -> TravelsOn(x,y))", "score": 0}
{"id": "eqasc_validation_873", "prediction": "all x y.((OceanWaves(x) & Water(y)) -> TravelsOn(x,y))", "score": 0}
{"id": "eqasc_validation_873", "prediction": "all x y z.((OceanWaves(x) & WaterSurface(y) & Surface(z)) -> TravelsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_873", "prediction": "all x y z.((OceanWave(x) & WaterSurface(y) & WaterSurface(z)) -> TravelsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_873", "prediction": "all x y z.((OceanWave(x) & WaterSurface(y) & Surface(z)) -> TravelsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_873", "prediction": "all x y z.((OceanWaves(x) & Water(y) & Surface(z)) -> TravelOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_874", "prediction": "all x.(Compass(x) -> TravelsOnWaterSurface(x))", "score": 0}
{"id": "eqasc_validation_874", "prediction": "all x.(Compass(x) -> UsedToTravelOnWaterSurface(x))", "score": 0}
{"id": "eqasc_validation_874", "prediction": "all x y.((Compass(x) & WaterSurface(y)) -> UsedToTravel(x,y))", "score": 0}
{"id": "eqasc_validation_874", "prediction": "all x y.((Compass(x) & Water(y)) -> TravelsOnSurface(x,y))", "score": 0}
{"id": "eqasc_validation_874", "prediction": "all x y.((Compass(x) & Water(y)) -> UsedToTravel(x,y))", "score": 0}
{"id": "eqasc_validation_874", "prediction": "all x y.((Compass(x) & Water(y)) -> UsedToTravelOnSurface(x,y))", "score": 0}
{"id": "eqasc_validation_874", "prediction": "all x y.((Compass(x) & WaterSurface(y)) -> TravelsOn(x,y))", "score": 0}
{"id": "eqasc_validation_874", "prediction": "all x y z.((Compass(x) & Water(y) & Surface(z)) -> TravelsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_874", "prediction": "all x y z.((Compass(x) & Water(y) & Surface(z)) -> UsedToTravel(x,y,z))", "score": 0}
{"id": "eqasc_validation_874", "prediction": "all x y.((Compass(x) & Water(y)) -> UsedToTravelOn(x,y))", "score": 0}
{"id": "eqasc_validation_874", "prediction": "all x.(Compass(x) -> TravelOnWaterSurface(x))", "score": 0}
{"id": "eqasc_validation_874", "prediction": "all x y.((Compass(x) & WaterSurface(y)) -> UsedToTravelOn(x,y))", "score": 0}
{"id": "eqasc_validation_874", "prediction": "all x.(Compass(x) -> TravelsOnSurfaceOfWater(x))", "score": 0}
{"id": "eqasc_validation_874", "prediction": "all x y z.((Compass(x) & WaterSurface(y) & WaterSurface(z)) -> UsedToTravel(x,y,z))", "score": 0}
{"id": "eqasc_validation_874", "prediction": "all x y z.((Compass(x) & WaterSurface(y) & WaterSurface(z)) -> TravelsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_874", "prediction": "all x y.((Compass(x) & Water(y)) -> TravelsOn(x,y))", "score": 0}
{"id": "eqasc_validation_875", "prediction": "all x y.((Magnet(x) & Compasse(y)) -> UsedIn(x,y))", "score": 0}
{"id": "eqasc_validation_875", "prediction": "all x.(Magnet(x) -> UsedInCompass(x))", "score": 0}
{"id": "eqasc_validation_875", "prediction": "all x.(Magnet(x) -> UsedInCompasses(x))", "score": 0}
{"id": "eqasc_validation_875", "prediction": "all x y z.((Magnet(x) & Compasse(y) & Compasse(z)) -> UsedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_875", "prediction": "all x y.((Magnetic(x) & Compasse(y)) -> UsedIn(x,y))", "score": 0}
{"id": "eqasc_validation_875", "prediction": "all x y z.((Magnet(x) & Compasse(y) & Compass(z)) -> UsedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_875", "prediction": "all x y z.((Magnet(x) & Compasse(y) & Compasse(z)) -> UsedIn(x,y))", "score": 0}
{"id": "eqasc_validation_875", "prediction": "all x.(Magnet(x) -> UsedInCompasse(x))", "score": 0}
{"id": "eqasc_validation_875", "prediction": "all x y z.((Magnet(x) & Compasse(y) & (Compass(z) | Compasse(z))) -> UsedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_875", "prediction": "all x y.((Magnet(x) & Compasse(y) & UsedIn(x,y)) -> UsedIn(x,y))", "score": 0}
{"id": "eqasc_validation_875", "prediction": "all x y z.((Magnet(x) & Compasse(y) & Compasse(z) & UsedIn(x,y,z)) -> UsedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_875", "prediction": "all x y z.((Magnet(x) & Compasse(y) & Compasse(z) & UsedIn(x,y,z)) -> UsedIn(x,y))", "score": 0}
{"id": "eqasc_validation_875", "prediction": "all x y.((Magnet(x) & Compasse(y)) -> Used(x,y))", "score": 0}
{"id": "eqasc_validation_875", "prediction": "all x y z.((Magnet(x) & Compasse(y) & Compasse(z) & UsedIn(x,y)) -> UsedIn(x,z))", "score": 0}
{"id": "eqasc_validation_875", "prediction": "all x y z.((Magnet(x) & Compasse(y) & Compasse(z)) -> Used(x,y,z))", "score": 0}
{"id": "eqasc_validation_876", "prediction": "all x y.((Magnet(x) & Ocean(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_876", "prediction": "all x y z.((Magnet(x) & Ocean(y) & Ocean(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_876", "prediction": "all x y z.((Magnet(x) & Ocean(y) & Ocean(z)) -> Navigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_876", "prediction": "all x y.((Magnet(x) & Ocean(y)) -> Navigate(x,y))", "score": 0}
{"id": "eqasc_validation_876", "prediction": "all x.(Magnet(x) -> NavigatesOceans(x))", "score": 0}
{"id": "eqasc_validation_876", "prediction": "all x y z.((Magnet(x) & Ocean(y) & Ocean(z) & Navigates(x,y,z)) -> UsedToNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_876", "prediction": "all x y z w.((Magnet(x) & Ocean(y) & Ocean(z) & Ocean(w)) -> Navigates(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_876", "prediction": "all x y z.((Magnet(x) & Ocean(y) & Ocean(z)) -> UsedToNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_876", "prediction": "all x y z.((Magnet(x) & Ocean(y) & Ocean(z) & Navigate(x,y,z)) -> Navigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_876", "prediction": "all x y z.((Magnet(x) & Ocean(y) & Ocean(z) & Navigate(x,y,z)) -> UsedToNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_876", "prediction": "all x.(Magnet(x) -> NavigatesOcean(x))", "score": 0}
{"id": "eqasc_validation_876", "prediction": "all x y z.((Magnet(x) & Ocean(y) & Ocean(z)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_876", "prediction": "all x y z.((Magnet(x) & Ocean(y) & Ocean(z) & Navigates(x,y,z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_876", "prediction": "all x y z w.((Magnet(x) & Ocean(y) & Ocean(z) & Ocean(w)) -> Navigate(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_877", "prediction": "all x.((Ocean(x) & LargestOnEarth(x)) -> PacificOcean(x))", "score": 0}
{"id": "eqasc_validation_877", "prediction": "all x.((Ocean(x) & LargestOnEarth(x)) -> Pacific(x))", "score": 0}
{"id": "eqasc_validation_877", "prediction": "all x y z.((Ocean(x) & Ocean(y) & Earth(z) & LargestOn(x,y,z)) -> PacificOcean(x))", "score": 0}
{"id": "eqasc_validation_877", "prediction": "all x y z.((Ocean(x) & Ocean(y) & Earth(z)) -> LargestOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_877", "prediction": "all x.(LargestOcean(x) -> PacificOcean(x))", "score": 0}
{"id": "eqasc_validation_877", "prediction": "all x y.((Ocean(x) & Ocean(y)) -> LargestOnEarth(x,y))", "score": 0}
{"id": "eqasc_validation_877", "prediction": "all x.(LargestOceanOnEarth(x) -> PacificOcean(x))", "score": 0}
{"id": "eqasc_validation_877", "prediction": "all x y.((Ocean(x) & Earth(y) & LargestOn(x,y)) -> PacificOcean(x))", "score": 0}
{"id": "eqasc_validation_877", "prediction": "all x y.((Ocean(x) & Earth(y)) -> PacificOcean(x,y))", "score": 0}
{"id": "eqasc_validation_877", "prediction": "all x y z.((Ocean(x) & Ocean(y) & Ocean(z)) -> LargestOnEarth(x,y,z))", "score": 0}
{"id": "eqasc_validation_877", "prediction": "all x y.((Ocean(x) & Earth(y) & Largest(x,y)) -> PacificOcean(x))", "score": 0}
{"id": "eqasc_validation_877", "prediction": "all x y z.((Ocean(x) & Ocean(y) & Earth(z) & LargestOn(x,y,z)) -> PacificOcean(y))", "score": 0}
{"id": "eqasc_validation_877", "prediction": "all x y z.((Ocean(x) & Ocean(y) & Earth(z) & Largest(x,y,z)) -> PacificOcean(x))", "score": 0}
{"id": "eqasc_validation_877", "prediction": "all x y.((Ocean(x) & Ocean(y) & Earth(y)) -> PacificOcean(x,y))", "score": 0}
{"id": "eqasc_validation_877", "prediction": "all x y.((Ocean(x) & Earth(y)) -> LargestOn(x,y))", "score": 0}
{"id": "eqasc_validation_877", "prediction": "all x y.((Ocean(x) & Ocean(y) & Earth(x)) -> PacificOcean(x))", "score": 0}
{"id": "eqasc_validation_878", "prediction": "all x y z.((Compass(x) & Pacific(y) & Pacific(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_878", "prediction": "all x y.((Compass(x) & Pacific(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_878", "prediction": "all x y.((Compass(x) & Pacific(y)) -> NavigatesPacific(x,y))", "score": 0}
{"id": "eqasc_validation_878", "prediction": "all x y z.((Compass(x) & Pacific(y) & Pacific(z)) -> NavigatesPacific(x,y,z))", "score": 0}
{"id": "eqasc_validation_878", "prediction": "all x y z.((Compass(x) & Pacific(y) & Pacific(z)) -> Navigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_878", "prediction": "all x.(Compass(x) -> NavigatesPacific(x))", "score": 0}
{"id": "eqasc_validation_878", "prediction": "all x y z.((Compass(x) & Pacific(y) & Pacific(z) & Navigates(x,y,z)) -> UsedToNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_878", "prediction": "all x y.((Compass(x) & Pacific(y)) -> Navigate(x,y))", "score": 0}
{"id": "eqasc_validation_878", "prediction": "all x y z.((Compass(x) & Pacific(y) & Ocean(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_878", "prediction": "all x y z.((Compass(x) & Pacific(y) & Pacific(z) & NavigatesPacific(x,y,z)) -> UsedToNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_878", "prediction": "all x y z.((Compass(x) & Pacific(y) & Pacific(z) & Navigates(x,y,z)) -> UsesToNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_878", "prediction": "all x y z.((Compass(x) & Pacific(y) & Pacific(z) & Navigates(x,y,z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_878", "prediction": "all x y.((Compass(x) & Pacific(y) & NavigatesPacific(x,y)) -> UsedToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_879", "prediction": "all x y.((MoonlessNight(x) & GeomagneticCompass(y)) -> NavigatesWith(x,y))", "score": 0}
{"id": "eqasc_validation_879", "prediction": "all x.(MoonlessNight(x) -> NavigatesWithCompass(x))", "score": 0}
{"id": "eqasc_validation_879", "prediction": "all x y.((MoonlessNight(x) & GeomagneticCompass(y)) -> NavigatesOn(x,y))", "score": 0}
{"id": "eqasc_validation_879", "prediction": "all x.((MoonlessNight(x) & GeomagneticCompass(x)) -> NavigatesWith(x,y))", "score": 0}
{"id": "eqasc_validation_879", "prediction": "all x y z.((MoonlessNight(x) & GeomagneticCompass(y) & MoonlessNight(z)) -> NavigatesWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_879", "prediction": "all x.(MoonlessNight(x) -> NavigatesWithGeomagneticCompass(x))", "score": 0}
{"id": "eqasc_validation_879", "prediction": "all x.((MoonlessNight(x) & GeomagneticCompass(x)) -> NavigatesOn(x,y))", "score": 0}
{"id": "eqasc_validation_879", "prediction": "all x.((Night(x) & Moonless(x)) -> NavigatesWithCompass(x))", "score": 0}
{"id": "eqasc_validation_879", "prediction": "all x.((Night(x) & Moonless(x)) -> NavigatesWithGeomagneticCompass(x))", "score": 0}
{"id": "eqasc_validation_879", "prediction": "all x y.((MoonlessNight(x) & GeomagneticCompass(y)) -> Navigate(x,y))", "score": 0}
{"id": "eqasc_validation_879", "prediction": "all x y.((MoonlessNight(x) & GeomagneticCompass(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_879", "prediction": "all x y z.((MoonlessNight(x) & GeomagneticCompass(y) & MoonlessNight(z)) -> NavigatesOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_879", "prediction": "all x.((MoonlessNight(x) & GeomagneticCompass(y)) -> NavigatesWith(x,y))", "score": 0}
{"id": "eqasc_validation_879", "prediction": "all x y.((MoonlessNight(x) & GeomagneticCompass(y)) -> NavigateWith(x,y))", "score": 0}
{"id": "eqasc_validation_879", "prediction": "all x.((MoonlessNight(x) & GeomagneticCompass(y)) -> NavigatesOn(x,y))", "score": 0}
{"id": "eqasc_validation_880", "prediction": "all x y z.((Ocean(x) & MoonlessNight(y) & MoonlessNight(z)) -> NavigatesOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_880", "prediction": "all x y.((Ocean(x) & MoonlessNight(y)) -> NavigatesOn(x,y))", "score": 0}
{"id": "eqasc_validation_880", "prediction": "all x.((Ocean(x) & MoonlessNight(x)) -> NavigatesOn(x,y))", "score": 0}
{"id": "eqasc_validation_880", "prediction": "all x y.((Ocean(x) & MoonlessNight(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_880", "prediction": "all x y z.((Ocean(x) & MoonlessNight(y) & MoonlessNight(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_880", "prediction": "all x.((Ocean(x) & MoonlessNight(x)) -> NavigatedOn(x,y))", "score": 0}
{"id": "eqasc_validation_880", "prediction": "all x.((Ocean(x) & MoonlessNight(x)) -> Navigates(x))", "score": 0}
{"id": "eqasc_validation_880", "prediction": "all x y.((Ocean(x) & MoonlessNight(y)) -> NavigatedOn(x,y))", "score": 0}
{"id": "eqasc_validation_880", "prediction": "all x.((Ocean(x) & MoonlessNight(x)) -> Navigated(x))", "score": 0}
{"id": "eqasc_validation_880", "prediction": "all x y z.((Ocean(x) & MoonlessNight(y) & MoonlessNight(z)) -> NavigatedOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_880", "prediction": "all x y z.((Ocean(x) & MoonlessNight(y) & MoonlessNight(z)) -> CanNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_880", "prediction": "all x y z.((Ocean(x) & MoonlessNight(y) & MoonlessNight(z)) -> Navigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_880", "prediction": "all x y z.((Ocean(x) & MoonlessNight(y) & MoonlessNight(z)) -> NavigableOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_880", "prediction": "all x y.((Ocean(x) & MoonlessNight(y)) -> CanNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_880", "prediction": "all x y z.((Ocean(x) & MoonlessNight(y) & MoonlessNight(z)) -> CanNavigateOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_880", "prediction": "all x.((Ocean(x) & MoonlessNights(x)) -> NavigatesOn(x,y))", "score": 0}
{"id": "eqasc_validation_881", "prediction": "(all x.(East(x) -> AtlanticOcean(x)))", "score": 0}
{"id": "eqasc_validation_881", "prediction": "(all x y.((AtlanticOcean(x) & East(y)) -> Ocean(x)))", "score": 0}
{"id": "eqasc_validation_881", "prediction": "(all x.((AtlanticOcean(x)) -> ToEast(x)))", "score": 0}
{"id": "eqasc_validation_881", "prediction": "(all x y.((AtlanticOcean(x) & East(y)) -> Ocean(x,y)))", "score": 0}
{"id": "eqasc_validation_881", "prediction": "(all x.((AtlanticOcean(x)) -> East(x)))", "score": 0}
{"id": "eqasc_validation_881", "prediction": "(ToEast(AtlanticOcean) & ToEast(AtlanticOcean))", "score": 0}
{"id": "eqasc_validation_881", "prediction": "(all x.((AtlanticOcean(x) & ToEast(x)) -> Ocean(x)))", "score": 0}
{"id": "eqasc_validation_881", "prediction": "(all x.((AtlanticOcean(x) & East(x)) -> Ocean(x)))", "score": 0}
{"id": "eqasc_validation_881", "prediction": "(ToEast(AtlanticOcean) & ToEastern(AtlanticOcean))", "score": 0}
{"id": "eqasc_validation_881", "prediction": "(all x y.((AtlanticOcean(x) & East(y)) -> Ocean(x))", "score": -1}
{"id": "eqasc_validation_881", "prediction": "(all x.(Easter(x) -> AtlanticOcean(x)))", "score": 0}
{"id": "eqasc_validation_881", "prediction": "(all x.((AtlanticOcean(x) & ToEast(x)) -> Atlantic(x)))", "score": 0}
{"id": "eqasc_validation_881", "prediction": "(all x.((AtlanticOcean(x) & East(x)) -> AtlanticOcean(x)))", "score": 0}
{"id": "eqasc_validation_881", "prediction": "(all x.((AtlanticOcean(x) & ToEast(x)) -> AtlanticOcean(x)))", "score": 0}
{"id": "eqasc_validation_881", "prediction": "(all x.((AtlanticOcean(x) & East(x)) -> Atlantic(x)))", "score": 0}
{"id": "eqasc_validation_881", "prediction": "(all x y.((AtlanticOcean(x) & ToEast(y)) -> Ocean(x)))", "score": 0}
{"id": "eqasc_validation_882", "prediction": "all x y.((Compass(x) & AtlanticAtlantic(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_882", "prediction": "all x y z.((Compass(x) & AtlanticAtlantic(y) & AtlanticAtlantic(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_882", "prediction": "all x y.((Compass(x) & Atlantic(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_882", "prediction": "all x.(Compass(x) -> NavigatesAtlantic(x))", "score": 0}
{"id": "eqasc_validation_882", "prediction": "all x y z.((Compass(x) & Atlantic(y) & Atlantic(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_882", "prediction": "all x y.((Compass(x) & AtlanticAtlantic(y)) -> NavigatesAtlantic(x,y))", "score": 0}
{"id": "eqasc_validation_882", "prediction": "all x y.((Compass(x) & Atlantic(y)) -> NavigatesAtlantic(x,y))", "score": 0}
{"id": "eqasc_validation_882", "prediction": "all x y z.((Compass(x) & AtlanticAtlantic(y) & AtlanticAtlantic(z)) -> Navigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_882", "prediction": "all x y z.((Compass(x) & AtlanticAtlantic(y) & AtlanticAtlantic(z)) -> NavigatesAtlantic(x,y,z))", "score": 0}
{"id": "eqasc_validation_882", "prediction": "all x y z.((Compass(x) & AtlanticAtlantic(y) & Atlantic(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_882", "prediction": "all x y z.((Compass(x) & Atlantic(y) & Atlantic(z)) -> NavigatesAtlantic(x,y,z))", "score": 0}
{"id": "eqasc_validation_882", "prediction": "all x y.((Compass(x) & AtlanticAtlantic(y)) -> Navigate(x,y))", "score": 0}
{"id": "eqasc_validation_882", "prediction": "all x y z.((Compass(x) & Atlantic(y) & Atlantic(z)) -> Navigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_882", "prediction": "all x y.((Compass(x) & AtlanticAtlantic(y)) -> NavigateAtlantic(x,y))", "score": 0}
{"id": "eqasc_validation_882", "prediction": "all x y z.((Compass(x) & AtlanticAtlantic(y) & Ocean(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_882", "prediction": "all x y z.((Compass(x) & AtlanticAtlantic(y) & AtlanticAtlantic(z)) -> NavigateAtlantic(x,y,z))", "score": 0}
{"id": "eqasc_validation_883", "prediction": "all x.((Compass(x) & MagneticStorm(x)) -> DifficultNavigation(x))", "score": 0}
{"id": "eqasc_validation_883", "prediction": "all x y.((Compass(x) & MagneticStorm(y)) -> DifficultNavigation(x,y))", "score": 0}
{"id": "eqasc_validation_883", "prediction": "all x.((Compass(x) & MagneticStorm(x)) -> ParticularlyDifficultNavigation(x))", "score": 0}
{"id": "eqasc_validation_883", "prediction": "all x y.((Compass(x) & MagneticStorm(y)) -> ParticularlyDifficultNavigation(x,y))", "score": 0}
{"id": "eqasc_validation_883", "prediction": "all x y z.((Compass(x) & MagneticStorm(y) & MagneticStorm(z)) -> DifficultNavigation(x,y,z))", "score": 0}
{"id": "eqasc_validation_883", "prediction": "all x.((Compass(x) & MagneticStorm(x)) -> EspeciallyDifficultNavigation(x))", "score": 0}
{"id": "eqasc_validation_883", "prediction": "all x.((Compass(x) & MagneticStorm(y)) -> DifficultNavigation(x,y))", "score": 0}
{"id": "eqasc_validation_883", "prediction": "all x.((Compass(x) & MagneticStorm(x)) -> DifficultNavigate(x))", "score": 0}
{"id": "eqasc_validation_883", "prediction": "all x y.((Compass(x) & MagneticStorm(y)) -> EspeciallyDifficultNavigation(x,y))", "score": 0}
{"id": "eqasc_validation_883", "prediction": "all x y z.((Compass(x) & MagneticStorm(y) & MagneticStorm(z)) -> ParticularlyDifficultNavigation(x,y,z))", "score": 0}
{"id": "eqasc_validation_883", "prediction": "all x.((Compass(x) & MagneticStorm(x)) -> VeryDifficultNavigation(x))", "score": 0}
{"id": "eqasc_validation_883", "prediction": "all x.((CompassNavigation(x) & MagneticStorm(x)) -> Difficult(x))", "score": 0}
{"id": "eqasc_validation_883", "prediction": "all x.((Compass(x) & MagneticStorm(x)) -> Difficult(x))", "score": 0}
{"id": "eqasc_validation_883", "prediction": "all x.((Compass(x) & MagnetStorm(x)) -> DifficultNavigation(x))", "score": 0}
{"id": "eqasc_validation_883", "prediction": "all x y z.((Compass(x) & MagneticStorm(y) & MagneticStorm(z)) -> EspeciallyDifficultNavigation(x,y,z))", "score": 0}
{"id": "eqasc_validation_884", "prediction": "all x y.((MagneticStorm(x) & Ocean(y)) -> MoreDifficultToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_884", "prediction": "all x y z.((MagneticStorm(x) & Ocean(y) & MagneticStorm(z)) -> MoreDifficultToNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_884", "prediction": "all x y.((MagneticStorm(x) & Ocean(y)) -> MoreDifficultNavigating(x,y))", "score": 0}
{"id": "eqasc_validation_884", "prediction": "all x.((MagneticStorm(x) & NavigatingOceans(x)) -> MoreDifficultDuring(x,MagneticStorm))", "score": 0}
{"id": "eqasc_validation_884", "prediction": "all x y z.((MagneticStorm(x) & Ocean(y) & MagneticStorm(z)) -> MoreDifficultNavigating(x,y,z))", "score": 0}
{"id": "eqasc_validation_884", "prediction": "all x y.((MagneticStorm(x) & Ocean(y)) -> MoreDifficultDuring(x,y))", "score": 0}
{"id": "eqasc_validation_884", "prediction": "all x y.((MagneticStorm(x) & Ocean(y)) -> MoreDifficultToNavigateDuring(x,y))", "score": 0}
{"id": "eqasc_validation_884", "prediction": "all x y.((MagneticStorm(x) & MagneticStorm(y)) -> MoreDifficultNavigatingOceans(x,y))", "score": 0}
{"id": "eqasc_validation_884", "prediction": "all x y z.((MagneticStorm(x) & Ocean(y) & MagneticStorm(z)) -> MoreDifficultToNavigateDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_884", "prediction": "all x y.((MagneticStorm(x) & MagneticStorm(y)) -> MoreDifficultToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_884", "prediction": "all x y.((MagneticStorm(x) & Ocean(y)) -> MoreDifficult(x,y))", "score": 0}
{"id": "eqasc_validation_884", "prediction": "all x y z.((MagneticStorm(x) & Ocean(y) & MagneticStorm(z)) -> MoreDifficultDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_884", "prediction": "all x y.((MagneticStorm(x) & MagneticStorm(y)) -> MoreDifficultToNavigateOceans(x,y))", "score": 0}
{"id": "eqasc_validation_884", "prediction": "all x y.((MagneticStorm(x) & Ocean(y) & MagneticStorm(x)) -> MoreDifficultToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_884", "prediction": "all x y z.((MagneticStorm(x) & Ocean(y) & MagneticStorm(z)) -> MoreDifficult(x,y,z))", "score": 0}
{"id": "eqasc_validation_885", "prediction": "all x.(MapNavigator(x) -> (UsesGridNorth(x) | UsesMagneticNorth(x)))", "score": 0}
{"id": "eqasc_validation_885", "prediction": "all x.(MapNavigator(x) -> (GridNorth(x) | MagneticNorth(x)))", "score": 0}
{"id": "eqasc_validation_885", "prediction": "all x y.((MapNavigator(x) & (GridNorth(y) | MagneticNorth(y))) -> UsesDefault(x,y))", "score": 0}
{"id": "eqasc_validation_885", "prediction": "all x y.((MapNavigator(x) & (GridNorth(y) | MagneticNorth(y))) -> UsesDefaultDefault(x,y))", "score": 0}
{"id": "eqasc_validation_885", "prediction": "all x.(MapNavigator(x) -> (UsesGridNorth(x) | UsesMagneticNorth(x))))", "score": -1}
{"id": "eqasc_validation_885", "prediction": "all x y.((MapNavigator(x) & (GridNorth(y) | MagneticNorth(y))) -> UseDefault(x,y))", "score": 0}
{"id": "eqasc_validation_885", "prediction": "all x y z.((MapNavigator(x) & GridNorth(y) & MagneticNorth(z)) -> UsesDefault(x,y,z))", "score": 0}
{"id": "eqasc_validation_886", "prediction": "all x.(Compass(x) -> FindsMagneticNorth(x))", "score": 0}
{"id": "eqasc_validation_886", "prediction": "all x y.((Compass(x) & MagneticNorth(y)) -> UsedToFind(x,y))", "score": 0}
{"id": "eqasc_validation_886", "prediction": "all x.(Compass(x) -> FoundMagneticNorth(x))", "score": 0}
{"id": "eqasc_validation_886", "prediction": "all x y z.((Compass(x) & MagneticNorth(y) & MagneticNorth(z)) -> UsedToFind(x,y,z))", "score": 0}
{"id": "eqasc_validation_886", "prediction": "all x.(Compass(x) -> FindMagneticNorth(x))", "score": 0}
{"id": "eqasc_validation_886", "prediction": "all x y.((Compass(x) & MagneticNorth(y)) -> UsedToFollow(x,y))", "score": 0}
{"id": "eqasc_validation_886", "prediction": "all x.(Compass(x) -> LocatesMagneticNorth(x))", "score": 0}
{"id": "eqasc_validation_886", "prediction": "all x.(Compass(x) -> MagneticNorth(x))", "score": 0}
{"id": "eqasc_validation_886", "prediction": "all x.(Compass(x) -> UsedToFindMagneticNorth(x))", "score": 0}
{"id": "eqasc_validation_886", "prediction": "all x y.((Compass(x) & MagneticNorth(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_886", "prediction": "all x y z.((Compass(x) & MagneticNorth(y) & MagnetNorth(z)) -> UsedToFind(x,y,z))", "score": 0}
{"id": "eqasc_validation_886", "prediction": "all x y.((Compass(x) & MagneticNorth(y)) -> Found(x,y))", "score": 0}
{"id": "eqasc_validation_886", "prediction": "all x y z.((Compass(x) & MagneticNorth(y) & MagneticNorth(z)) -> Found(x,y,z))", "score": 0}
{"id": "eqasc_validation_886", "prediction": "all x y z.((Compass(x) & MagneticNorth(y) & MagneticNorth(z)) -> Finds(x,y,z))", "score": 0}
{"id": "eqasc_validation_886", "prediction": "all x y.((Compass(x) & MagneticNorth(y)) -> UsedForFinding(x,y))", "score": 0}
{"id": "eqasc_validation_887", "prediction": "all x y.((Magnet(x) & Ocean(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_887", "prediction": "all x y z.((Magnet(x) & Ocean(y) & Ocean(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_887", "prediction": "all x y z.((Magnet(x) & Ocean(y) & Ocean(z)) -> Navigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_887", "prediction": "all x.(Magnet(x) -> NavigatesOceans(x))", "score": 0}
{"id": "eqasc_validation_887", "prediction": "all x y.((Magnet(x) & Ocean(y)) -> Navigate(x,y))", "score": 0}
{"id": "eqasc_validation_887", "prediction": "all x y z w.((Magnet(x) & Ocean(y) & Ocean(z) & Ocean(w)) -> Navigates(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_887", "prediction": "all x.(Magnet(x) -> NavigatesOcean(x))", "score": 0}
{"id": "eqasc_validation_887", "prediction": "all x y z w.((Magnet(x) & Ocean(y) & Ocean(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_887", "prediction": "all x y z w.((Magnet(x) & Ocean(y) & Ocean(z) & Ocean(w)) -> Navigate(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_887", "prediction": "all x y z.((Magnet(x) & Ocean(y) & Ocean(z) & Navigates(x,y,z)) -> UsedToNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_887", "prediction": "all x y z.((Magnet(x) & Ocean(y) & Ocean(z)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_887", "prediction": "all x y z.((Magnet(x) & Ocean(y) & Ocean(z)) -> UsedToNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_887", "prediction": "all x y z.((Magnetic(x) & Ocean(y) & Ocean(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_887", "prediction": "all x y z.((Magnet(x) & Ocean(y) & Ocean(z) & Navigates(x,y,z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_887", "prediction": "all x y z.((Magnet(x) & Ocean(y) & Ocean(z) & Navigate(x,y,z)) -> Navigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_887", "prediction": "all x y z.((Magnet(x) & Ocean(y) & Ocean(z)) -> Navigates(x,z))", "score": 0}
{"id": "eqasc_validation_888", "prediction": "all x y.((Compass(x) & Pacific(y)) -> NavigatesWith(x,y))", "score": 0}
{"id": "eqasc_validation_888", "prediction": "all x y.((Compass(x) & Pacific(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_888", "prediction": "all x y z.((Compass(x) & Pacific(y) & Pacific(z)) -> NavigatesWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_888", "prediction": "all x y.((Compass(x) & Pacific(y)) -> Navigate(x,y))", "score": 0}
{"id": "eqasc_validation_888", "prediction": "all x y.((Compass(x) & Pacific(y)) -> NavigateWith(x,y))", "score": 0}
{"id": "eqasc_validation_888", "prediction": "all x y z.((Compass(x) & Pacific(y) & Pacific(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_888", "prediction": "all x y z.((Compass(x) & Pacific(y) & Pacific(z)) -> Navigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_888", "prediction": "all x y z.((Compass(x) & Pacific(y) & Ocean(z)) -> NavigatesWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_888", "prediction": "all x y z.((Compass(x) & Pacific(y) & Pacific(z)) -> NavigateWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_888", "prediction": "all x.((Compass(x) & NavigatesPacific(x)) -> HasCompass(x))", "score": 0}
{"id": "eqasc_validation_888", "prediction": "all x.((Compass(x) & NavigatesPacific(x)) -> Uses(x,Compass))", "score": 0}
{"id": "eqasc_validation_888", "prediction": "all x y z.((Compass(x) & Pacific(y) & Ocean(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_888", "prediction": "all x.((Compass(x) & NavigatesPacific(x)) -> Uses(x,compass))", "score": 0}
{"id": "eqasc_validation_888", "prediction": "all x.((Compass(x) & NavigatesPacific(x)) -> Uses(x))", "score": 0}
{"id": "eqasc_validation_888", "prediction": "all x.((Compass(x) & NavigatesPacific(x)) -> Has(x,Compass))", "score": 0}
{"id": "eqasc_validation_889", "prediction": "all x y.((NauticalChart(x) & Mariner(y) & Boater(y)) -> UsesToSafelyNavigateOnOcean(x,y))", "score": 0}
{"id": "eqasc_validation_889", "prediction": "all x.(NauticalChart(x) -> (UsedByMariners(x) | UsedByBoaters(x)) & NavigatesOnOcean(x)))", "score": -1}
{"id": "eqasc_validation_889", "prediction": "all x y.((NauticalChart(x) & Mariner(y) & Boater(y)) -> NavigatesOnOcean(x,y))", "score": 0}
{"id": "eqasc_validation_889", "prediction": "all x y z.((NauticalChart(x) & Mariner(y) & Boater(z)) -> NavigatesOnOcean(x,y,z))", "score": 0}
{"id": "eqasc_validation_889", "prediction": "all x y z.((NauticalChart(x) & Mariner(y) & Boater(z)) -> UsesToSafelyNavigateOnOcean(x,y,z))", "score": 0}
{"id": "eqasc_validation_889", "prediction": "all x.(NauticalChart(x) -> (UsedByMariners(x) & UsedByBoaters(x) & NavigatesOnOcean(x)))", "score": 0}
{"id": "eqasc_validation_889", "prediction": "all x y.((NauticalChart(x) & Mariner(y) & Boater(y)) -> UsedBy(x,y))", "score": 0}
{"id": "eqasc_validation_889", "prediction": "all x y.((NauticalChart(x) & Mariner(y)) -> (UsedBy(x,y) & UsedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_889", "prediction": "all x.(NauticalChart(x) -> (UsedByMariners(x) | UsedByBoaters(x)) & NavigatesOnOcean(x))", "score": 0}
{"id": "eqasc_validation_889", "prediction": "all x y z.((NauticalChart(x) & Mariner(y) & Boater(z)) -> (UsedBy(x,y) & SafeNavigate(x,z)))", "score": 0}
{"id": "eqasc_validation_889", "prediction": "all x y z.((NauticalChart(x) & Mariner(y) & Boater(z)) -> (UsedBy(x,y) & NavigatesOnOcean(x,z)))", "score": 0}
{"id": "eqasc_validation_889", "prediction": "all x y.((NauticalChart(x) & Mariner(y) & Boater(y)) -> SafeNavigator(x,y))", "score": 0}
{"id": "eqasc_validation_889", "prediction": "all x y.((NauticalChart(x) & Mariner(y) & Boater(y)) -> SafeNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_889", "prediction": "all x.(NauticalChart(x) -> (UsedByMariners(x) | UsedByBoaters(x)) & NavigateOnOcean(x)))", "score": -1}
{"id": "eqasc_validation_890", "prediction": "all x y.((Mariner(x) & Compass(y)) -> TravelsOcean(x,y))", "score": 0}
{"id": "eqasc_validation_890", "prediction": "all x y z.((Mariner(x) & Compass(y) & Ocean(z)) -> UsesToTravel(x,y,z))", "score": 0}
{"id": "eqasc_validation_890", "prediction": "all x y z.((Mariner(x) & Compass(y) & Ocean(z)) -> Travels(x,y,z))", "score": 0}
{"id": "eqasc_validation_890", "prediction": "all x y.((Mariner(x) & Compass(y)) -> UsesToTravel(x,y))", "score": 0}
{"id": "eqasc_validation_890", "prediction": "all x y z.((Mariner(x) & Compass(y) & Ocean(z)) -> UsesCompassToTravel(x,y,z))", "score": 0}
{"id": "eqasc_validation_890", "prediction": "all x y z.((Mariner(x) & Compass(y) & Ocean(z)) -> TravelsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_890", "prediction": "all x y z.((Marine(x) & Compass(y) & Ocean(z)) -> UsesToTravel(x,y,z))", "score": 0}
{"id": "eqasc_validation_890", "prediction": "all x y.((Marine(x) & Compass(y)) -> TravelsOcean(x,y))", "score": 0}
{"id": "eqasc_validation_890", "prediction": "all x.(Mariner(x) -> (UsesCompass(x) & TravelsOcean(x)))", "score": 0}
{"id": "eqasc_validation_890", "prediction": "all x y z.((Mariner(x) & Compass(y) & Ocean(z) & Uses(x,y)) -> Travels(x,z))", "score": 0}
{"id": "eqasc_validation_890", "prediction": "all x y.((Mariner(x) & Compass(y)) -> UsesToTravelOcean(x,y))", "score": 0}
{"id": "eqasc_validation_890", "prediction": "all x y z.((Mariner(x) & Compass(y) & Ocean(z)) -> (Uses(x,y) & Travels(x,z)))", "score": 0}
{"id": "eqasc_validation_891", "prediction": "all x.(Direction(x) -> (DegreesFromNorth(x) & MeasuredByCompass(x)))", "score": 0}
{"id": "eqasc_validation_891", "prediction": "all x y.((Direction(x) & Compass(y)) -> (DegreesFromNorth(x,y) & MeasuredBy(x,y)))", "score": 0}
{"id": "eqasc_validation_891", "prediction": "all x y.((Direction(x) & Compass(y)) -> DegreesFromNorth(x,y))", "score": 0}
{"id": "eqasc_validation_891", "prediction": "all x y z.((Direction(x) & DegreesFromNorth(y) & Compass(z)) -> MeasuredBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_891", "prediction": "all x.(Direction(x) -> (InDegreesFromNorth(x) & MeasuredByCompass(x)))", "score": 0}
{"id": "eqasc_validation_891", "prediction": "all x.(Direction(x) -> (DegreesFromNorth(x) & MeasurableByCompass(x)))", "score": 0}
{"id": "eqasc_validation_891", "prediction": "all x y.((Direction(x) & Compass(y)) -> InDegreesFromNorth(x,y))", "score": 0}
{"id": "eqasc_validation_891", "prediction": "all x y.((Direction(x) & Compass(y)) -> (DegreeFromNorth(x,y) & MeasuredBy(x,y)))", "score": 0}
{"id": "eqasc_validation_891", "prediction": "all x y.((Direction(x) & Compass(y)) -> (DegreesFromNorth(x,y)))", "score": 0}
{"id": "eqasc_validation_891", "prediction": "all x y.((Direction(x) & Compass(y)) -> (DegreesFromNorth(x,y) & MeasurableBy(x,y)))", "score": 0}
{"id": "eqasc_validation_892", "prediction": "all x.((Direction(x) & Degrees(x)) -> NavigatesOceans(x))", "score": 0}
{"id": "eqasc_validation_892", "prediction": "all x y.((DirectionInDegrees(x) & Ocean(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_892", "prediction": "all x y z.((DirectionInDegrees(x) & Ocean(y) & Ocean(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_892", "prediction": "all x y.((Direction(x) & Degrees(y)) -> NavigatesOceans(x,y))", "score": 0}
{"id": "eqasc_validation_892", "prediction": "all x y.((Direction(x) & Degree(y)) -> NavigatesOceans(x,y))", "score": 0}
{"id": "eqasc_validation_892", "prediction": "all x y z.((Direction(x) & Degree(y) & Ocean(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_892", "prediction": "all x.((DirectionInDegrees(x) & Ocean(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_892", "prediction": "all x y z.((Direction(x) & Degrees(y) & Ocean(z)) -> Navigates(x,z))", "score": 0}
{"id": "eqasc_validation_892", "prediction": "all x y z.((Direction(x) & Degrees(y) & Ocean(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_892", "prediction": "all x y z.((DirectionInDegrees(x) & Ocean(y) & Ocean(z)) -> Navigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_892", "prediction": "all x y.((Direction(x,y) & Degrees(y)) -> NavigatesOceans(x,y))", "score": 0}
{"id": "eqasc_validation_892", "prediction": "all x y.((Direction(x,y) & Degree(y)) -> NavigatesOceans(x,y))", "score": 0}
{"id": "eqasc_validation_892", "prediction": "all x.(DegreeDirection(x) -> NavigatesOceans(x))", "score": 0}
{"id": "eqasc_validation_892", "prediction": "all x y z.((Direction(x) & Degree(y) & Ocean(z)) -> Navigates(x,z))", "score": 0}
{"id": "eqasc_validation_892", "prediction": "all x y.((DirectionInDegrees(x) & Ocean(y)) -> Navigate(x,y))", "score": 0}
{"id": "eqasc_validation_892", "prediction": "all x y.((Direction(x) & Degree(y)) -> NavigatesOcean(x,y))", "score": 0}
{"id": "eqasc_validation_893", "prediction": "all x.(Magnetism(x) -> (HasMagnets(x) & HasCompasses(x) & HasEarth(x)))", "score": 0}
{"id": "eqasc_validation_893", "prediction": "all x.(Magnetism(x) -> (exists y.(Magnet(y) & HappensWith(x,y))) & exists z.(Compass(z) & HappensWith(x,z))) & exists w.(Earth(w) & HappensWith(x,w))))", "score": -1}
{"id": "eqasc_validation_893", "prediction": "all x.(Magnetism(x) -> (OccursWithMagnets(x) & HappensWithCompasses(x) & HappensWithEarth(x)))", "score": 0}
{"id": "eqasc_validation_893", "prediction": "all x.(Magnetism(x) -> (exists y.(Magnet(y) & HappensWith(x,y)) & exists z.(Compass(z) & HappensWith(x,z))) & exists w.(Earth(w) & HappensWith(x,w))))", "score": -1}
{"id": "eqasc_validation_893", "prediction": "all x.(Magnetism(x) -> (exists y.(Magnet(y) & HappensWith(x,y))) & exists z.(Compass(z) & HappensWith(x,z)) & exists w.(Earth(w) & HappensWith(x,w)))))", "score": -1}
{"id": "eqasc_validation_893", "prediction": "all x y z.((Magnetism(x) & Magnets(y) & Compasses(z) & Earth(x)) -> HappensWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_893", "prediction": "all x.(Magnetism(x) -> (exists y.(Magnet(y) & HappensWith(x,y)) & exists z.(Compass(z) & HappensWith(x,z)) & exists w.(Earth(w) & HappensWith(x,w)))))", "score": -1}
{"id": "eqasc_validation_893", "prediction": "all x.(Magnetism(x) -> (exists y.(Magnet(y) & HappensWith(x,y))) & exists z.(Compasse(z) & HappensWith(x,z))) & exists w.(Earth(w) & HappensWith(x,w))))", "score": -1}
{"id": "eqasc_validation_893", "prediction": "all x.(Magnetism(x) -> (exists y.(Magnet(y) & HappensWith(x,y)) & exists z.(Compasse(z) & HappensWith(x,z))) & exists w.(Earth(w) & HappensWith(x,w))))", "score": -1}
{"id": "eqasc_validation_893", "prediction": "all x.(Magnetism(x) -> (exists y.(Magnet(y) & HappensWith(x,y))) & exists z.(Compass(z) & HappensWith(x,z)) & exists w.(Earth(w) & HappensWith(x,w))))", "score": -1}
{"id": "eqasc_validation_893", "prediction": "all x.(Magnetism(x) -> (exists y.(Magnet(y) & HappensWith(x,y))) & exists z.(Compasse(z) & HappensWith(x,z)) & exists w.(Earth(w) & HappensWith(x,w)))))", "score": -1}
{"id": "eqasc_validation_893", "prediction": "all x.(Magnetism(x) -> (CausesMagnets(x) & HappensWithCompasses(x) & HappensWithEarth(x)))", "score": 0}
{"id": "eqasc_validation_894", "prediction": "all x y.((Magnetism(x) & Ocean(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_894", "prediction": "all x y z.((Magnetism(x) & Ocean(y) & Ocean(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_894", "prediction": "all x y z.((Magnetism(x) & Ocean(y) & Ocean(z)) -> Navigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_894", "prediction": "all x.(Magnetism(x) -> NavigatesOceans(x))", "score": 0}
{"id": "eqasc_validation_894", "prediction": "all x y.((Magnetism(x) & Ocean(y)) -> Navigate(x,y))", "score": 0}
{"id": "eqasc_validation_894", "prediction": "all x y z.((Magnetism(x) & Ocean(y) & Ocean(z)) -> UsedToNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_894", "prediction": "all x y.((Magnetism(x) & Ocean(y)) -> UsedToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_894", "prediction": "all x y z.((Magneticism(x) & Ocean(y) & Ocean(z)) -> Navigates(x,y,z))", "score": 0}
{"id": "eqasc_validation_894", "prediction": "all x y z w.((Magnetism(x) & Ocean(y) & Ocean(z) & Magnetism(w)) -> Navigates(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_894", "prediction": "all x y.((Magneticism(x) & Ocean(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_894", "prediction": "all x y z w.((Magnetism(x) & Ocean(y) & Ocean(z) & Ocean(w)) -> Navigates(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_894", "prediction": "all x y z.((Magneticism(x) & Ocean(y) & Ocean(z)) -> Navigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_894", "prediction": "all x y z w.((Magnetism(x) & Ocean(y) & Ocean(z) & Magnetism(w)) -> Navigate(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_894", "prediction": "all x y z.((Magnetism(x) & Ocean(y) & Ocean(z)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_895", "prediction": "all x.((LargeOceanGoingVessel(x) & UsesGyrocompass(x)) -> SteeringCompass(x))", "score": 0}
{"id": "eqasc_validation_895", "prediction": "all x.(LargeOceanGoingVessel(x) -> UsesGyrocompassAsSteeringCompass(x))", "score": 0}
{"id": "eqasc_validation_895", "prediction": "all x.((OceanGoingVessel(x) & UsesGyrocompass(x)) -> SteeringCompass(x))", "score": 0}
{"id": "eqasc_validation_895", "prediction": "all x y.((LargeOceanGoingVessel(x) & Gyrocompass(y)) -> UsesAsSteeringCompass(x,y))", "score": 0}
{"id": "eqasc_validation_895", "prediction": "all x y.((LargeOceanGoingVessel(x) & Gyrocompass(y)) -> SteeringCompass(x,y))", "score": 0}
{"id": "eqasc_validation_895", "prediction": "all x.(LargeOceanGoingVessel(x) -> UsesGyrocompass(x))", "score": 0}
{"id": "eqasc_validation_895", "prediction": "all x.((OceanGoingVessel(x) & Large(x)) -> UsesGyrocompassAsSteeringCompass(x))", "score": 0}
{"id": "eqasc_validation_895", "prediction": "all x.(OceanGoingVessel(x) -> UsesGyrocompassAsSteeringCompass(x))", "score": 0}
{"id": "eqasc_validation_895", "prediction": "all x y z.((LargeOceanGoingVessel(x) & Gyrocompass(y) & SteeringCompass(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_895", "prediction": "all x.((LargeOceanGoingVessel(x) & Gyrocompass(x)) -> SteeringCompass(x))", "score": 0}
{"id": "eqasc_validation_895", "prediction": "all x y.((LargeOceanGoingVessel(x) & Gyrocompass(y)) -> UsesForSteeringCompass(x,y))", "score": 0}
{"id": "eqasc_validation_895", "prediction": "all x.(OceanGoingVessel(x) -> UsesGyrocompass(x))", "score": 0}
{"id": "eqasc_validation_895", "prediction": "all x.((LargeOceanGoingVessel(x) & UsesGyrocompassAsSteeringCompass(x)) -> SteeringCompass(x))", "score": 0}
{"id": "eqasc_validation_895", "prediction": "all x.(LargeOceanGoingVessel(x) -> UsesGyrocompassForSteeringCompass(x))", "score": 0}
{"id": "eqasc_validation_896", "prediction": "all x.(Compass(x) -> UsedForSteering(x))", "score": 0}
{"id": "eqasc_validation_896", "prediction": "all x y.((Compass(x) & Steering(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_896", "prediction": "all x.(Compasse(x) -> (UsedForSteering(x) & Steering(x)))", "score": 0}
{"id": "eqasc_validation_896", "prediction": "all x y.((Compasse(x) & Steering(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_896", "prediction": "all x.(Compass(x) -> (UsedForSteering(x) & Steering(x)))", "score": 0}
{"id": "eqasc_validation_896", "prediction": "all x.(Compasse(x) -> UsedForSteering(x))", "score": 0}
{"id": "eqasc_validation_896", "prediction": "all x y z.((Compass(x) & Steering(y) & Steering(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_896", "prediction": "all x.(Compasse(x) -> (UsedForSteering(x) & UsedForSteering(x)))", "score": 0}
{"id": "eqasc_validation_896", "prediction": "all x.(Compass(x) -> (UsedForSteering(x) & UsedForSteering(x)))", "score": 0}
{"id": "eqasc_validation_896", "prediction": "all x y z.((Compasse(x) & Steering(y) & Steering(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_896", "prediction": "all x.(Compass(x) -> (UsedForSteering(x) | UsedForSteering(x)))", "score": 0}
{"id": "eqasc_validation_896", "prediction": "all x.(Compasse(x) -> (UsedForSteering(x) | UsedForSteering(x)))", "score": 0}
{"id": "eqasc_validation_896", "prediction": "all x.(Compasse(x) -> (UsedForSteering(x) & Steering(x) & Steering(x)))", "score": 0}
{"id": "eqasc_validation_896", "prediction": "all x.(Compact(x) -> (UsedForSteering(x) & Steering(x)))", "score": 0}
{"id": "eqasc_validation_896", "prediction": "all x.(Compass(x) -> (UsedForSteering(x) & Steering(x) & Steering(x)))", "score": 0}
{"id": "eqasc_validation_896", "prediction": "all x y z.((Compass(x) & Steering(y) & Steering(z)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_897", "prediction": "all x.(Precipitation(x) -> IncreasesMoisture(x))", "score": 8}
{"id": "eqasc_validation_897", "prediction": "all x y.((Precipitation(x) & Moisture(y)) -> Increases(x,y))", "score": 24}
{"id": "eqasc_validation_897", "prediction": "all x y z.((Precipitation(x) & Moisture(y) & Moisture(z)) -> Increases(x,y,z))", "score": 8}
{"id": "eqasc_validation_897", "prediction": "all x y.((Precipitation(x) & Moisture(y)) -> Increased(x,y))", "score": 8}
{"id": "eqasc_validation_897", "prediction": "all x y.((Precipitation(x) & Moisture(y)) -> Increase(x,y))", "score": 24}
{"id": "eqasc_validation_897", "prediction": "all x y z.((Precipitation(x) & Moisture(y) & Moisture(z)) -> Increases(x,y))", "score": 24}
{"id": "eqasc_validation_897", "prediction": "all x.((Precipitation(x) & IncreasesMoisture(x)) -> IncreasesMoisture(x))", "score": 0}
{"id": "eqasc_validation_897", "prediction": "all x y z.((Precipitation(x) & Moisture(y) & Moisture(z)) -> Increased(x,y,z))", "score": 8}
{"id": "eqasc_validation_897", "prediction": "all x y.((Precipitation(x) & Moisture(y) & Increases(x,y)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_validation_897", "prediction": "all x y z.((Precipitation(x) & Moisture(y) & Moisture(z)) -> Increase(x,y,z))", "score": 8}
{"id": "eqasc_validation_897", "prediction": "all x y z.((Precipitation(x) & Moisture(y) & Moisture(z) & Increases(x,y)) -> Increases(x,z))", "score": 8}
{"id": "eqasc_validation_897", "prediction": "all x y z.((Precipitation(x) & Moisture(y) & Moisture(z) & Increases(x,y,z)) -> Increases(x,y))", "score": 8}
{"id": "eqasc_validation_897", "prediction": "all x.(Precipitation(x) -> IncreasedMoisture(x))", "score": 0}
{"id": "eqasc_validation_897", "prediction": "all x y z.((Precipitation(x) & Moisture(y) & Moisture(z) & Increases(x,y,z)) -> Increases(x,y,z))", "score": 0}
{"id": "eqasc_validation_897", "prediction": "all x y z.((Precipitation(x) & Moisture(y) & Moisture(z)) -> Increased(x,y))", "score": 8}
{"id": "eqasc_validation_897", "prediction": "all x y z.((Precipitation(x) & Moisture(y) & Water(z)) -> Increases(x,y,z))", "score": 0}
{"id": "eqasc_validation_898", "prediction": "all x y.((PrecipitationAmount(x) & MoistureCondensation(y)) -> DependsOnRate(x,y))", "score": 0}
{"id": "eqasc_validation_898", "prediction": "(all x.(MoistureCondensation(x) -> DependsOnRate(x)))", "score": 0}
{"id": "eqasc_validation_898", "prediction": "all x y.((Precipitation(x) & MoistureCondensation(y)) -> DependsOnRate(x,y))", "score": 0}
{"id": "eqasc_validation_898", "prediction": "(all x.((MoistureCondensation(x)) -> DependsOn(x,MoistureCondensation)) -> DependsOn(x,MoistureCondensation))", "score": 0}
{"id": "eqasc_validation_898", "prediction": "all x y.((PrecipitationAmount(x) & MoistureCondensation(y)) -> DependsOn(x,y))", "score": 0}
{"id": "eqasc_validation_898", "prediction": "(all x y.((MoistureCondensation(x) & Rate(y)) -> DependsOn(x,y)) & all z w.((MoistureCondensation(z) & Rate(w)) -> DependsOn(x,z)))", "score": 0}
{"id": "eqasc_validation_898", "prediction": "(all x.((MoistureCondensation(x)) -> DependsOnRate(x)) & all y.((MoistureCondensation(y) & DependsOnRate(x,y))) -> DependsOnRate(x,y)))", "score": -1}
{"id": "eqasc_validation_898", "prediction": "(all x y.((MoistureCondensation(x) & Rate(y)) -> DependsOn(x,y)))", "score": 0}
{"id": "eqasc_validation_898", "prediction": "(all x.((MoistureCondensation(x)) -> DependsOnRate(x)))", "score": 0}
{"id": "eqasc_validation_898", "prediction": "(all x.((MoistureCondensation(x) & Rate(x)) -> DependsOn(x,MoistureCondensation)) -> DependsOn(x,MoistureCondensation))", "score": 0}
{"id": "eqasc_validation_898", "prediction": "all x y.((Precipitation(x) & MoistureCondensation(y)) -> DependsOn(x,y))", "score": 0}
{"id": "eqasc_validation_898", "prediction": "(all x.((MoistureCondensation(x)) -> DependsOnRate(x)) & all y.((MoistureCondensation(y)) -> DependsOnRate(x,y)))", "score": 0}
{"id": "eqasc_validation_898", "prediction": "(all x.((MoistureCondensation(x)) -> DependsOnRate(x)) & all y.((MoistureCondensation(y) & DependsOnRate(x,y))) -> DependsOn(x,y)))", "score": -1}
{"id": "eqasc_validation_898", "prediction": "(all x y.((MoistureCondensation(x) & Rate(y)) -> DependsOn(x,y)) & all z w.((MoistureCondensation(z) & Rate(w))) -> DependsOn(x,z)))", "score": -1}
{"id": "eqasc_validation_898", "prediction": "(all x.((MoistureCondensation(x)) -> DependsOnRate(x)) & all y.((MoistureCondensation(y) & DependsOnRate(x,y))) -> DependsOnAmount(x,y)))", "score": -1}
{"id": "eqasc_validation_898", "prediction": "(all x.((MoistureCondensation(x)) -> DependsOnRate(x)) & all y.((MoistureCondensation(y) & DependsOnRate(x,y)) -> DependsOnRate(x,y)))", "score": 0}
{"id": "eqasc_validation_899", "prediction": "all x y.((Precipitation(x) & Condensation(y)) -> DependsOn(x,y))", "score": 0}
{"id": "eqasc_validation_899", "prediction": "all x.(Precipitation(x) -> DependsOnCondensation(x))", "score": 0}
{"id": "eqasc_validation_899", "prediction": "all x.((PrecipitationAmount(x) & DependsOnCondensation(x)) -> DependsOnCondensation(x))", "score": 0}
{"id": "eqasc_validation_899", "prediction": "all x.((Precipitation(x) & DependsOnCondensation(x)) -> DependsOnCondensation(x))", "score": 0}
{"id": "eqasc_validation_899", "prediction": "all x y z.((Precipitation(x) & Condensation(y) & Condensation(z)) -> DependsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_899", "prediction": "all x y.((PrecipitationAmount(x) & Condensation(y)) -> DependsOn(x,y))", "score": 0}
{"id": "eqasc_validation_899", "prediction": "all x y.((Precipitation(x) & Condensation(y) & DependsOn(x,y)) -> DependsOn(x,y))", "score": 0}
{"id": "eqasc_validation_899", "prediction": "all x y z.((PrecipitationAmount(x) & Condensation(y) & Condensation(z)) -> DependsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_899", "prediction": "all x y z.((Precipitation(x) & Condensation(y) & Precipitation(z)) -> DependsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_899", "prediction": "all x y.((Precipitation(x) & Condensation(y)) -> DependsOnAmount(x,y))", "score": 0}
{"id": "eqasc_validation_899", "prediction": "all x.((Precipitation(x) & DependsOnCondensation(x)) -> DependsOnPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_899", "prediction": "all x.((AmountOfPrecipitation(x) & DependsOnCondensation(x)) -> DependsOnPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_899", "prediction": "all x.(PrecipitationAmount(x) -> DependsOnCondensation(x))", "score": 0}
{"id": "eqasc_validation_899", "prediction": "all x y.((AmountOfPrecipitation(x) & Condensation(y)) -> DependsOn(x,y))", "score": 0}
{"id": "eqasc_validation_899", "prediction": "all x y.((Precipitation(x) & Condensation(y)) -> DependsOnAmountOfPrecipitation(x,y))", "score": 0}
{"id": "eqasc_validation_899", "prediction": "all x y.((Precipitation(x) & Condensation(y)) -> DependsOnAmountOf(x,y))", "score": 0}
{"id": "eqasc_validation_900", "prediction": "all x.(Rain(x) -> IncreasesMoisture(x))", "score": 8}
{"id": "eqasc_validation_900", "prediction": "all x y.((Rain(x) & Moisture(y)) -> Increases(x,y))", "score": 16}
{"id": "eqasc_validation_900", "prediction": "all x y z.((Rain(x) & Moisture(y) & Moisture(z)) -> Increases(x,y,z))", "score": 8}
{"id": "eqasc_validation_900", "prediction": "all x y.((Rain(x) & Moisture(y)) -> Increase(x,y))", "score": 8}
{"id": "eqasc_validation_900", "prediction": "all x y.((Rain(x) & Moisture(y)) -> Increased(x,y))", "score": 16}
{"id": "eqasc_validation_900", "prediction": "all x y z.((Rain(x) & Moisture(y) & Moisture(z)) -> Increases(x,y))", "score": 16}
{"id": "eqasc_validation_900", "prediction": "all x y z.((Rain(x) & Moisture(y) & Moisture(z)) -> Increase(x,y,z))", "score": 8}
{"id": "eqasc_validation_900", "prediction": "all x y z.((Rain(x) & Moisture(y) & Moisture(z)) -> Increased(x,y,z))", "score": 8}
{"id": "eqasc_validation_900", "prediction": "all x y.((Rain(x) & Moisture(y) & Increases(x,y)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_validation_900", "prediction": "all x y z.((Rain(x) & Moisture(y) & Moisture(z) & Increases(x,y)) -> Increases(x,z))", "score": 24}
{"id": "eqasc_validation_900", "prediction": "all x.((Rain(x) & IncreasesMoisture(x)) -> IncreasesMoisture(x))", "score": 0}
{"id": "eqasc_validation_900", "prediction": "all x y z.((Rain(x) & Moisture(y) & Moisture(z) & Increases(x,y,z)) -> Increases(x,y))", "score": 8}
{"id": "eqasc_validation_900", "prediction": "all x y z.((Rain(x) & Moisture(y) & Moisture(z) & Increases(x,y,z)) -> Increases(x,y,z))", "score": 0}
{"id": "eqasc_validation_900", "prediction": "all x y z.((Rain(x) & Moisture(y) & Moisture(z)) -> Increase(x,y))", "score": 8}
{"id": "eqasc_validation_900", "prediction": "All x.(Rain(x) -> IncreasesMoisture(x))", "score": -1}
{"id": "eqasc_validation_900", "prediction": "all x y z.((Rain(x) & Moisture(y) & Moisture(z) & Increase(x,y)) -> Increase(x,z))", "score": 8}
{"id": "eqasc_validation_901", "prediction": "all x.(Rain(x) -> LiquidPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_901", "prediction": "all x y.((Rain(x) & Precipitation(y)) -> Liquid(x,y))", "score": 0}
{"id": "eqasc_validation_901", "prediction": "all x.(Rain(x) -> (LiquidPrecipitation(x) & -LiquidPrecipitation(x)))", "score": 0}
{"id": "eqasc_validation_901", "prediction": "all x y.((Rain(x) & LiquidPrecipitation(y)) -> LiquidPrecipitation(x,y))", "score": 0}
{"id": "eqasc_validation_901", "prediction": "all x y.((Rain(x) & LiquidPrecipitation(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_901", "prediction": "all x.(Rain(x) -> (LiquidPrecipitation(x) | LiquidPrecipitation(x)))", "score": 0}
{"id": "eqasc_validation_901", "prediction": "all x.(Rain(x) -> (LiquidPrecipitation(x) & LiquidPrecipitation(x)))", "score": 0}
{"id": "eqasc_validation_901", "prediction": "all x y.((Rain(x) & Precipitation(y)) -> Liquid(x))", "score": 0}
{"id": "eqasc_validation_901", "prediction": "all x y.((Rain(x) & LiquidPrecipitation(y)) -> Precipitation(x,y))", "score": 0}
{"id": "eqasc_validation_901", "prediction": "all x y.((Rain(x) & LiquidPrecipitation(y)) -> (LiquidPrecipitation(x) & LiquidPrecipitation(x)))", "score": 0}
{"id": "eqasc_validation_901", "prediction": "all x.(Rain(x) -> (LiquidPrecipitation(x)))", "score": 0}
{"id": "eqasc_validation_901", "prediction": "all x y.((Rain(x) & LiquidPrecipitation(y)) -> (LiquidPrecipitation(x) & LiquidPrecipitation(y)))", "score": 0}
{"id": "eqasc_validation_901", "prediction": "all x y.((Rain(x) & LiquidPrecipitation(y)) -> (LiquidPrecipitation(x,y)))", "score": 0}
{"id": "eqasc_validation_901", "prediction": "all x.(Rain(x) -> IsLiquidPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_901", "prediction": "all x y.((Rain(x) & LiquidPrecipitation(y)) -> LiquidPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_902", "prediction": "all x.(Rain(x) -> IncreasesMoisture(x))", "score": 0}
{"id": "eqasc_validation_902", "prediction": "all x y.((Rain(x) & Moisture(y)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_validation_902", "prediction": "all x y z.((Rain(x) & Moisture(y) & Moisture(z)) -> Increases(x,y,z))", "score": 0}
{"id": "eqasc_validation_902", "prediction": "all x y.((Rain(x) & Moisture(y) & Increases(x,y)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_validation_902", "prediction": "all x y.((Rain(x) & Rain(y)) -> IncreasesMoisture(x,y))", "score": 0}
{"id": "eqasc_validation_902", "prediction": "all x y z.((Rain(x) & Moisture(y) & Moisture(z)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_validation_902", "prediction": "all x y z.((Rain(x) & Moisture(y) & Moisture(z) & Increases(x,y)) -> Increases(x,z))", "score": 0}
{"id": "eqasc_validation_902", "prediction": "all x y z.((Rain(x) & Moisture(y) & Moisture(z) & Increases(x,y,z)) -> Increases(x,y,z))", "score": 0}
{"id": "eqasc_validation_902", "prediction": "all x y z.((Rain(x) & Moisture(y) & Moisture(z) & Increases(x,y,z)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_validation_902", "prediction": "all x y.((Rain(x) & Moisture(y)) -> Increase(x,y))", "score": 0}
{"id": "eqasc_validation_902", "prediction": "all x y.((Rain(x) & Water(y)) -> IncreasesMoisture(x,y))", "score": 0}
{"id": "eqasc_validation_902", "prediction": "all x y.((Rain(x) & Moisture(y)) -> IncreasesMoisture(x,y))", "score": 0}
{"id": "eqasc_validation_902", "prediction": "all x y z.((Rain(x) & Moisture(y) & Moisture(z)) -> Increase(x,y,z))", "score": 0}
{"id": "eqasc_validation_902", "prediction": "all x y z w.((Rain(x) & Moisture(y) & Moisture(z) & Rain(w)) -> Increases(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_902", "prediction": "all x y z.((Rain(x) & Moisture(y) & Moisture(z)) -> Increases(x,z))", "score": 0}
{"id": "eqasc_validation_902", "prediction": "all x y z.((Rain(x) & Rain(y) & Moisture(z)) -> Increases(x,y,z))", "score": 0}
{"id": "eqasc_validation_903", "prediction": "all x.((LocalPrecipitation(x) & Altitude(x)) -> IncreasesSharply(x))", "score": 0}
{"id": "eqasc_validation_903", "prediction": "all x y.((LocalPrecipitation(x) & Altitude(y)) -> IncreasesSharply(x,y))", "score": 0}
{"id": "eqasc_validation_903", "prediction": "all x.(LocalPrecipitation(x) -> IncreasesSharplyWithAltitude(x))", "score": 0}
{"id": "eqasc_validation_903", "prediction": "all x.((LocalPrecipitation(x) & Altitude(y)) -> IncreasesSharply(x,y))", "score": 0}
{"id": "eqasc_validation_903", "prediction": "all x y.((LocalPrecipitation(x) & Altitude(y)) -> IncreasesSharplyWith(x,y))", "score": 0}
{"id": "eqasc_validation_903", "prediction": "all x y z.((LocalPrecipitation(x) & Altitude(y) & Altitude(z)) -> IncreasesSharply(x,y,z))", "score": 0}
{"id": "eqasc_validation_903", "prediction": "all x.((LocalPrecipitation(x) & Altitude(x)) -> IncreasedSharply(x))", "score": 0}
{"id": "eqasc_validation_903", "prediction": "all x.((LocalPrecipitation(x) & Altitude(x)) -> IncreasesSharplyWith(x,altitude))", "score": 0}
{"id": "eqasc_validation_903", "prediction": "all x.((LocalPrecipitation(x) & Altitude(x)) -> IncreasesSharply(x,y))", "score": 0}
{"id": "eqasc_validation_903", "prediction": "all x.((Precipitation(x) & Altitude(x)) -> IncreasesSharply(x))", "score": 0}
{"id": "eqasc_validation_903", "prediction": "all x.((LocalPrecipitation(x) & Altitude(x)) -> IncreasesSharplyWith(x,y))", "score": 0}
{"id": "eqasc_validation_903", "prediction": "all x.((LocalPrecipitation(x) & Altitude(y)) -> IncreasesSharplyWith(x,y))", "score": 0}
{"id": "eqasc_validation_903", "prediction": "all x y z.((LocalPrecipitation(x) & Altitude(y) & Altitude(z)) -> IncreasesSharplyWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_903", "prediction": "all x.((LocalPrecipitation(x) & Altitude(x)) -> SteadyIncrease(x))", "score": 0}
{"id": "eqasc_validation_903", "prediction": "all x.((LocalPrecipitation(x) & HighAltitude(x)) -> IncreasesSharply(x))", "score": 0}
{"id": "eqasc_validation_903", "prediction": "all x y.((LocalPrecipitation(x) & Altitude(y)) -> IncreasedSharply(x,y))", "score": 0}
{"id": "eqasc_validation_904", "prediction": "all x.((Moisture(x) & Altitude(x)) -> IncreasesSharplyWithAltitude(x))", "score": 0}
{"id": "eqasc_validation_904", "prediction": "all x.((Moisture(x) & Altitude(x)) -> IncreasesSharply(x))", "score": 0}
{"id": "eqasc_validation_904", "prediction": "all x y.((Moisture(x) & Altitude(y)) -> IncreasesSharplyWith(x,y))", "score": 0}
{"id": "eqasc_validation_904", "prediction": "all x.((Moisture(x) & Altitude(x)) -> SharpMoistureIncrease(x))", "score": 0}
{"id": "eqasc_validation_904", "prediction": "all x.((Moisture(x) & Altitude(x)) -> IncreasesSharplyWith(x,Altitude))", "score": 0}
{"id": "eqasc_validation_904", "prediction": "all x y z.((Moisture(x) & Altitude(y) & Altitude(z)) -> IncreasesSharplyWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_904", "prediction": "all x y.((Moisture(x) & Altitude(y)) -> IncreasesSharply(x,y))", "score": 0}
{"id": "eqasc_validation_904", "prediction": "all x.((Moisture(x) & Altitude(x)) -> IncreasesSharplyWith(x,altitude))", "score": 0}
{"id": "eqasc_validation_904", "prediction": "all x y.((Moisture(x) & Altitude(y)) -> IncreasesSharplyWithAltitude(x,y))", "score": 0}
{"id": "eqasc_validation_904", "prediction": "all x y.((Moisture(x) & Altitude(y)) -> SharpMoistureIncrease(x,y))", "score": 0}
{"id": "eqasc_validation_904", "prediction": "all x y z.((Moisture(x) & Altitude(y) & Altitude(z)) -> IncreasesSharply(x,y,z))", "score": 0}
{"id": "eqasc_validation_904", "prediction": "all x.((Moisture(x) & Altitude(x)) -> IncreasesSharply(x,Altitude))", "score": 0}
{"id": "eqasc_validation_904", "prediction": "all x y z.((Moisture(x) & Altitude(y) & Altitude(z)) -> SharpMoistureIncrease(x,y,z))", "score": 0}
{"id": "eqasc_validation_904", "prediction": "all x.((Moisture(x) & Altitude(x)) -> IncreasesSharply(x,Moisture))", "score": 0}
{"id": "eqasc_validation_904", "prediction": "all x.((Moisture(x) & Altitude(x)) -> IncreasesSharply(x,y))", "score": 0}
{"id": "eqasc_validation_904", "prediction": "all x.((Moisture(x) & Altitude(x)) -> IncreasesSharplyWith(x,Altitude,Altitude))", "score": 0}
{"id": "eqasc_validation_905", "prediction": "all x.(MoistureCondition(x) -> (Damp(x) | Dry(x)))", "score": 0}
{"id": "eqasc_validation_905", "prediction": "all x.(MoistureCondition(x) -> (Damp(x) & Dry(x)))", "score": 0}
{"id": "eqasc_validation_905", "prediction": "all x.(MoistureCondition(x) -> (DampCondition(x) | DryCondition(x)))", "score": 0}
{"id": "eqasc_validation_905", "prediction": "all x y.((MoistureCondition(x) & (Damp(y) | Dry(y))) -> RangesFrom(x,y))", "score": 0}
{"id": "eqasc_validation_905", "prediction": "all x.(Moisture(x) -> (Damp(x) | Dry(x)))", "score": 0}
{"id": "eqasc_validation_905", "prediction": "all x.(MoistureConditions(x) -> (Damp(x) | Dry(x)))", "score": 0}
{"id": "eqasc_validation_905", "prediction": "all x y.((MoistureCondition(x) & (Damp(y) | Dry(y))) -> Range(x,y))", "score": 0}
{"id": "eqasc_validation_905", "prediction": "all x.(MoistureCondition(x) -> (Dust(x) | Dry(x)))", "score": 0}
{"id": "eqasc_validation_905", "prediction": "all x y.((MoistureCondition(x) & (Damp(y) | Dry(y))) -> RangesFromTo(x,y))", "score": 0}
{"id": "eqasc_validation_905", "prediction": "all x.((MoistureCondition(x) & (Damp(x) | Dry(x))) -> MoistureCondition(x))", "score": 0}
{"id": "eqasc_validation_905", "prediction": "all x.(MoistureCondition(x) -> (DampToDry(x)))", "score": 0}
{"id": "eqasc_validation_905", "prediction": "all x y.((MoistureCondition(x) & Damp(y)) -> Dry(y))", "score": 0}
{"id": "eqasc_validation_905", "prediction": "all x y.((MoistureCondition(x) & (Damp(y) | Dry(y))) -> MoistureCondition(x,y))", "score": 0}
{"id": "eqasc_validation_905", "prediction": "all x.(MoistureCondition(x) -> (FromDamp(x) & FromDry(x)))", "score": 0}
{"id": "eqasc_validation_905", "prediction": "all x.(MoistureCondition(x) -> (RangeFromDampToDry(x)))", "score": 0}
{"id": "eqasc_validation_906", "prediction": "all x.(Precipitation(x) -> IncreasesConditionsFromDryToDamp(x))", "score": 0}
{"id": "eqasc_validation_906", "prediction": "all x y z.((Precipitation(x) & DryCondition(y) & DampCondition(z)) -> IncreasesConditions(x,y,z))", "score": 0}
{"id": "eqasc_validation_906", "prediction": "all x y.((Precipitation(x) & DryToDampConditions(y)) -> IncreasesConditions(x,y))", "score": 0}
{"id": "eqasc_validation_906", "prediction": "all x y.((Precipitation(x) & DryToDamp(y)) -> IncreasesConditions(x,y))", "score": 0}
{"id": "eqasc_validation_906", "prediction": "all x y z.((Precipitation(x) & DryCondition(y) & DampCondition(z)) -> IncreasesConditionsFromTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_906", "prediction": "all x y.((Precipitation(x) & DryCondition(y) & DampCondition(y)) -> IncreasesConditions(x,y))", "score": 0}
{"id": "eqasc_validation_906", "prediction": "all x y.((Precipitation(x) & DryCondition(y)) -> IncreasesConditions(x,y))", "score": 0}
{"id": "eqasc_validation_906", "prediction": "all x y z.((Precipitation(x) & Dry(y) & Damp(z)) -> IncreasesConditions(x,y,z))", "score": 0}
{"id": "eqasc_validation_906", "prediction": "all x y z.((Precipitation(x) & DryCondition(y) & DriedCondition(z)) -> IncreasesConditions(x,y,z))", "score": 0}
{"id": "eqasc_validation_906", "prediction": "all x y.((Precipitation(x) & DryCondition(y) & DampCondition(z)) -> IncreasesConditions(x,y,z))", "score": 0}
{"id": "eqasc_validation_906", "prediction": "all x y z.((Precipitation(x) & DryCondition(y) & DampCondition(z)) -> Increases(x,y,z))", "score": 0}
{"id": "eqasc_validation_906", "prediction": "all x y z.((Precipitation(x) & DryConditions(y) & DampConditions(z)) -> IncreasesConditions(x,y,z))", "score": 0}
{"id": "eqasc_validation_906", "prediction": "all x y.((Precipitation(x) & Dry(y) & Damp(y)) -> IncreasesConditions(x,y))", "score": 0}
{"id": "eqasc_validation_906", "prediction": "all x y.((Precipitation(x) & DryCondition(y)) -> IncreasesConditionsToDampConditions(x,y))", "score": 0}
{"id": "eqasc_validation_906", "prediction": "all x y.((Precipitation(x) & DryConditions(y)) -> IncreasesConditions(x,y))", "score": 0}
{"id": "eqasc_validation_907", "prediction": "all x.(Moisture(x) -> (NecessaryIngredientForClouds(x) & NecessaryIngredientForPrecipitation(x)))", "score": 0}
{"id": "eqasc_validation_907", "prediction": "all x.(Moisture(x) -> (NecessaryIngredient(x) & ProducesClouds(x) & ProducesPrecipitation(x)))", "score": 0}
{"id": "eqasc_validation_907", "prediction": "all x.(Moisture(x) -> (NecessaryIngredient(x) & ProductionOfClouds(x) & Precipitation(x)))", "score": 0}
{"id": "eqasc_validation_907", "prediction": "all x.(Moisture(x) -> (NecessaryIngredientForCloudProduction(x) & NecessaryIngredientForPrecipitation(x)))", "score": 0}
{"id": "eqasc_validation_907", "prediction": "all x.(Moisture(x) -> (NecessaryIngredient(x) & ProducesClouds(x) & Precipitation(x)))", "score": 0}
{"id": "eqasc_validation_907", "prediction": "all x.(Moisture(x) -> (NecessaryIngredient(x) & ForClouds(x) & ForPrecipitation(x)))", "score": 0}
{"id": "eqasc_validation_907", "prediction": "all x.(Moisture(x) -> (NecessaryIngredient(x) & ProductionOfClouds(x) & ProductionOfPrecipitation(x)))", "score": 0}
{"id": "eqasc_validation_907", "prediction": "all x.(Moisture(x) -> (NecessaryIngredient(x) & ProductionOfCloudsAndPrecipitation(x)))", "score": 0}
{"id": "eqasc_validation_907", "prediction": "all x.(Moisture(x) -> (NecessaryIngredientForCloudsAndPrecipitation(x)))", "score": 0}
{"id": "eqasc_validation_907", "prediction": "all x.(Moisture(x) -> (NecessaryIngredient(x,clouds) & NecessaryIngredient(x,precipitation)))", "score": 0}
{"id": "eqasc_validation_907", "prediction": "all x y.((Moisture(x) & Cloud(y) & Precipitation(y)) -> NecessaryIngredientFor(x,y))", "score": 0}
{"id": "eqasc_validation_907", "prediction": "all x.(Moisture(x) -> (NecessaryIngredientForClouds(x) & NecessaryForPrecipitation(x)))", "score": 0}
{"id": "eqasc_validation_907", "prediction": "all x y z.((Moisture(x) & Cloud(y) & Precipitation(z)) -> (NecessaryIngredient(x,y) & Produces(x,z)))", "score": 0}
{"id": "eqasc_validation_907", "prediction": "all x y z.((Moisture(x) & Cloud(y) & Precipitation(z)) -> (NecessaryIngredient(x,y,z) & Produces(x,y)))", "score": 0}
{"id": "eqasc_validation_907", "prediction": "all x y.((Moisture(x) & Cloud(y)) -> (NecessaryIngredient(x,y) & Produces(x,y) & Precipitation(x)))", "score": 0}
{"id": "eqasc_validation_908", "prediction": "all x y.((Cloud(x) & Precipitation(y)) -> NecessaryFor(x,y))", "score": 0}
{"id": "eqasc_validation_908", "prediction": "all x.(Cloud(x) -> NecessaryForPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_908", "prediction": "all x y.((Cloud(x) & Precipitation(y)) -> NecessaryForPrecipitation(x,y))", "score": 0}
{"id": "eqasc_validation_908", "prediction": "all x.(Cloud(x) -> PrecipitationNecessaryForPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_908", "prediction": "all x y z.((Cloud(x) & Precipitation(y) & Precipitation(z)) -> NecessaryFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_908", "prediction": "all x y z.((Cloud(x) & Precipitation(y) & Precipitation(z)) -> NecessaryForPrecipitation(x,y,z))", "score": 0}
{"id": "eqasc_validation_908", "prediction": "all x y z.((Cloud(x) & Precipitation(y) & Cloud(z)) -> NecessaryForPrecipitation(x,y,z))", "score": 0}
{"id": "eqasc_validation_908", "prediction": "all x y.((Cloud(x) & Precipitation(y) & NecessaryFor(x,y)) -> NecessaryFor(x,y))", "score": 0}
{"id": "eqasc_validation_908", "prediction": "all x y z.((Cloud(x) & Precipitation(y) & Precipitation(z) & NecessaryFor(x,y,z)) -> NecessaryFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_908", "prediction": "all x.(Cloud(x) -> (NecessaryForPrecipitation(x) & NecessaryForPrecipitation(x)))", "score": 0}
{"id": "eqasc_validation_908", "prediction": "all x y z.((Cloud(x) & Precipitation(y) & Cloud(z)) -> NecessaryFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_908", "prediction": "all x.(Cloud(x) -> PrecipitationNecessary(x))", "score": 0}
{"id": "eqasc_validation_908", "prediction": "all x.(Cloud(x) -> (NecessaryForPrecipitation(x) & Precipitation(x)))", "score": 0}
{"id": "eqasc_validation_908", "prediction": "all x y.((Cloud(x) & Precipitation(y) & NecessaryFor(x,y)) -> Precipitation(x,y))", "score": 0}
{"id": "eqasc_validation_908", "prediction": "all x y z.((Cloud(x) & Precipitation(y) & Snow(z)) -> NecessaryForPrecipitation(x,y,z))", "score": 0}
{"id": "eqasc_validation_908", "prediction": "all x y z.((Cloud(x) & Precipitation(y) & Cloud(z)) -> NecessaryForPrecipitation(x,z))", "score": 0}
{"id": "eqasc_validation_909", "prediction": "all x.(Precipitation(x) -> Rainfall(x))", "score": 0}
{"id": "eqasc_validation_909", "prediction": "all x.(Precipitation(x) -> OccursAsRainfall(x))", "score": 0}
{"id": "eqasc_validation_909", "prediction": "all x.(Precipitation(x) -> (OccursAsRainfall(x)))", "score": 0}
{"id": "eqasc_validation_909", "prediction": "all x.(Precipitation(x) -> RainfallOccurs(x))", "score": 0}
{"id": "eqasc_validation_909", "prediction": "all x y.((Precipitation(x) & Rainfall(y)) -> OccursAs(x,y))", "score": 0}
{"id": "eqasc_validation_909", "prediction": "all x y.((Precipitation(x) & Rainfall(y)) -> Occurs(x,y))", "score": 0}
{"id": "eqasc_validation_909", "prediction": "all x.(Precipitation(x) -> (OccursAsRainfall(x) | OccursAsRainfall(x)))", "score": 0}
{"id": "eqasc_validation_909", "prediction": "all x.(Precipitation(x) -> (OccursAsRainfall(x) & -OccursAsRainfall(x)))", "score": 0}
{"id": "eqasc_validation_909", "prediction": "all x.(Precipitation(x) -> (OccursAsRainfall(x) & MostOccursAsRainfall(x)))", "score": 0}
{"id": "eqasc_validation_909", "prediction": "all x.(Precipitation(x) -> (OccursAsRainfall(x) | -OccursAsRainfall(x)))", "score": 0}
{"id": "eqasc_validation_909", "prediction": "all x.(Precipitation(x) -> UsuallyOccursAsRainfall(x))", "score": 0}
{"id": "eqasc_validation_909", "prediction": "(MostPrecipitationOccursAsRainfall(MostPrecipitationOccursAsRainfall(MostPrecipitation))", "score": -1}
{"id": "eqasc_validation_909", "prediction": "all x y.((Precipitation(x) & Rainfall(y)) -> MostOccursAs(x,y))", "score": 0}
{"id": "eqasc_validation_909", "prediction": "exists x.(Precipitation(x) & Rainfall(x))", "score": 0}
{"id": "eqasc_validation_909", "prediction": "all x.(Precipitation(x) -> RainfallOccurrence(x))", "score": 0}
{"id": "eqasc_validation_910", "prediction": "all x.(Rainfall(x) -> IncreasesMoisture(x))", "score": 0}
{"id": "eqasc_validation_910", "prediction": "all x y.((Rainfall(x) & Moisture(y)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_validation_910", "prediction": "all x y z.((Rainfall(x) & Moisture(y) & Moisture(z)) -> Increases(x,y,z))", "score": 0}
{"id": "eqasc_validation_910", "prediction": "all x y.((Rainfall(x) & Moisture(y)) -> Increase(x,y))", "score": 0}
{"id": "eqasc_validation_910", "prediction": "all x y.((Rainfall(x) & Moisture(y)) -> Increased(x,y))", "score": 0}
{"id": "eqasc_validation_910", "prediction": "all x y z.((Rainfall(x) & Moisture(y) & Moisture(z)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_validation_910", "prediction": "all x y z.((Rainfall(x) & Moisture(y) & Moisture(z)) -> Increase(x,y,z))", "score": 0}
{"id": "eqasc_validation_910", "prediction": "all x y z.((Rainfall(x) & Moisture(y) & Moisture(z)) -> Increased(x,y,z))", "score": 0}
{"id": "eqasc_validation_910", "prediction": "all x.((Rainfall(x) & IncreasesMoisture(x)) -> IncreasesMoisture(x))", "score": 0}
{"id": "eqasc_validation_910", "prediction": "all x y.((Rainfall(x) & Moisture(y) & Increases(x,y)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_validation_910", "prediction": "all x y z.((Rainfall(x) & Moisture(y) & Moisture(z) & Increases(x,y)) -> Increases(x,z))", "score": 0}
{"id": "eqasc_validation_910", "prediction": "all x y z.((Rainfall(x) & Moisture(y) & Moisture(z) & Increases(x,y,z)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_validation_910", "prediction": "all x.(Rainfall(x) -> IncreasedMoisture(x))", "score": 0}
{"id": "eqasc_validation_910", "prediction": "all x y z.((Rainfall(x) & Moisture(y) & Moisture(z) & Increases(x,y,z)) -> Increases(x,y,z))", "score": 0}
{"id": "eqasc_validation_910", "prediction": "all x y z.((Rainfall(x) & Moisture(y) & Water(z)) -> Increases(x,y,z))", "score": 0}
{"id": "eqasc_validation_910", "prediction": "all x y.((Rainfall(x) & Water(y)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_validation_911", "prediction": "all x.(PrecipitationAmount(x) -> InInches(x))", "score": 0}
{"id": "eqasc_validation_911", "prediction": "all x.(Precipitation(x) -> InInches(x))", "score": 0}
{"id": "eqasc_validation_911", "prediction": "all x.(PrecipitationAmount(x) -> InInch(x))", "score": 0}
{"id": "eqasc_validation_911", "prediction": "all x.(PrecipitationAmountInInches(x) -> PrecipitationAmountInInches(x))", "score": 0}
{"id": "eqasc_validation_911", "prediction": "all x.(Precipitation(x) -> InInch(x))", "score": 0}
{"id": "eqasc_validation_911", "prediction": "all x y.((PrecipitationAmount(x) & InInch(y)) -> PrecipitationAmount(x,y))", "score": 0}
{"id": "eqasc_validation_911", "prediction": "all x.(PrecipitationAddition(x) -> InInches(x))", "score": 0}
{"id": "eqasc_validation_911", "prediction": "all x y.((PrecipitationAmount(x) & InInches(y)) -> PrecipitationAmount(x,y))", "score": 0}
{"id": "eqasc_validation_911", "prediction": "all x.(PrecipitationAmount(x) -> (InInches(x)))", "score": 0}
{"id": "eqasc_validation_911", "prediction": "All x.(PrecipitationAmount(x) -> InInches(x))", "score": -1}
{"id": "eqasc_validation_911", "prediction": "all x y.((PrecipitationAmount(x) & InInch(y)) -> PrecipitationAmountInInch(x))", "score": 0}
{"id": "eqasc_validation_911", "prediction": "all x y.((PrecipitationAmount(x) & InInch(y)) -> PrecipitationInInch(x))", "score": 0}
{"id": "eqasc_validation_911", "prediction": "all x y.((PrecipitationAmount(x) & InInches(y)) -> PrecipitationAmountInInches(x))", "score": 0}
{"id": "eqasc_validation_911", "prediction": "all x.(PrecipitationAmounts(x) -> InInches(x))", "score": 0}
{"id": "eqasc_validation_912", "prediction": "all x.(MeasuresMoistureInInches(x) -> MoistureMeasuredInInches(x))", "score": 0}
{"id": "eqasc_validation_912", "prediction": "all x.(MeasuredInInches(x) -> MoistureMeasuredInInches(x))", "score": 0}
{"id": "eqasc_validation_912", "prediction": "all x y.((Moisture(x) & InInches(y)) -> MeasuredInInches(x,y))", "score": 0}
{"id": "eqasc_validation_912", "prediction": "all x.(MeasuredInInches(x) -> Moisture(x))", "score": 0}
{"id": "eqasc_validation_912", "prediction": "all x.(MeasuredMoistureInInches(x) -> MoistureMeasuredInInches(x))", "score": 0}
{"id": "eqasc_validation_912", "prediction": "all x.(MeasuresInInches(x) -> MoistureMeasuredInInches(x))", "score": 0}
{"id": "eqasc_validation_912", "prediction": "all x.(MeasuresMoistureInInches(x) -> MoistureMeasuresInInches(x))", "score": 0}
{"id": "eqasc_validation_912", "prediction": "all x.(MeasuresMoistureInInches(x) -> MoistureInInches(x))", "score": 0}
{"id": "eqasc_validation_912", "prediction": "all x y.((Moisture(x) & InInch(y)) -> MeasuredInInches(x,y))", "score": 0}
{"id": "eqasc_validation_912", "prediction": "all x.(MeasuresInInches(x) -> Moisture(x))", "score": 0}
{"id": "eqasc_validation_912", "prediction": "all x.(MeasuresMoistureInInches(x) -> MeasuresMoistureInInches(x))", "score": 0}
{"id": "eqasc_validation_912", "prediction": "all x y z.((Moisture(x) & InInches(y) & InInches(z)) -> MeasuredInInches(x,y,z))", "score": 0}
{"id": "eqasc_validation_912", "prediction": "all x y z.((Moisture(x) & InInch(y) & InInch(z)) -> MeasuredInInch(x,y,z))", "score": 0}
{"id": "eqasc_validation_913", "prediction": "all x.(Moisture(x) -> (RelatedToElectricalConductivity(x) & IncreasesWithIncreasedMoistureLevels(x)))", "score": 0}
{"id": "eqasc_validation_913", "prediction": "all x.(Moisture(x) -> (RelatedToElectricalConductivity(x) & IncreasesWithIncreasedMoisture(x)))", "score": 0}
{"id": "eqasc_validation_913", "prediction": "all x.(Moisture(x) -> (ElectricalConductivity(x) & IncreasesWithIncreasedMoisture(x)))", "score": 0}
{"id": "eqasc_validation_913", "prediction": "all x.(Moisture(x) -> (RelatedToElectricalConductivity(x) & IncreasedWithIncreasedMoistureLevels(x)))", "score": 0}
{"id": "eqasc_validation_913", "prediction": "all x.(Moisture(x) -> (ElectricalConductivity(x) & IncreasesWithIncreasedMoistureLevels(x)))", "score": 0}
{"id": "eqasc_validation_913", "prediction": "all x.(Moisture(x) -> (RelatedToElectricalConductivity(x) & IncreasedWithIncreasedMoisture(x)))", "score": 0}
{"id": "eqasc_validation_913", "prediction": "all x y.((Moisture(x) & ElectricalConductivity(y)) -> IncreasesWithIncreasedMoisture(x,y))", "score": 0}
{"id": "eqasc_validation_913", "prediction": "all x y z.((Moisture(x) & ElectricalConductivity(y) & MoistureLevel(z)) -> (RelatedTo(x,y) & IncreasesWithIncrease(x,z)))", "score": 0}
{"id": "eqasc_validation_913", "prediction": "all x.(Moisture(x) -> (RelatedToElectricalConductivity(x) & IncreasesWithIncreasesMoistureLevels(x)))", "score": 0}
{"id": "eqasc_validation_913", "prediction": "all x y.((Moisture(x) & ElectricalConductivity(y)) -> IncreasesWithIncreasedMoistureLevels(x,y))", "score": 0}
{"id": "eqasc_validation_913", "prediction": "all x.(Moisture(x) -> (RelatedToElectricalConductivity(x) & IncreasesWithIncreasingMoistureLevels(x)))", "score": 0}
{"id": "eqasc_validation_913", "prediction": "all x y z.((Moisture(x) & ElectricalConductivity(y) & MoistureLevel(z)) -> (RelatedTo(x,y) & IncreasesWith(x,z)))", "score": 0}
{"id": "eqasc_validation_913", "prediction": "all x y z.((Moisture(x) & ElectricalConductivity(y) & MoistureLevel(z)) -> (RelatedTo(x,y) & IncreasedWith(x,z)))", "score": 0}
{"id": "eqasc_validation_913", "prediction": "all x.(Moisture(x) -> (ElectricalConductivity(x) & IncreasesWithMoistureLevels(x)))", "score": 0}
{"id": "eqasc_validation_913", "prediction": "all x.(Moisture(x) -> (ElectricalConductivity(x) & IncreasedWithIncreasedMoistureLevels(x)))", "score": 0}
{"id": "eqasc_validation_913", "prediction": "all x y z.((Moisture(x) & ElectricalConductivity(y) & MoistureLevel(z)) -> (RelatedTo(x,y) & IncreasesWithIncrease(y,z)))", "score": 0}
{"id": "eqasc_validation_914", "prediction": "all x y.((Wood(x) & Precipitation(y)) -> IncreasesElectricalConductivity(x,y))", "score": 0}
{"id": "eqasc_validation_914", "prediction": "all x y.((Wood(x) & Precipitation(y) & FallsOn(x,y)) -> IncreasesElectricalConductivity(x))", "score": 0}
{"id": "eqasc_validation_914", "prediction": "all x y.((Wood(x) & Precipitation(y) & FallsOn(x,y)) -> IncreasesElectricalConductivity(x,y))", "score": 0}
{"id": "eqasc_validation_914", "prediction": "all x y.((Wood(x) & Precipitation(y) & FallsOn(x,y)) -> IncreasedElectricalConductivity(x))", "score": 0}
{"id": "eqasc_validation_914", "prediction": "all x.((Wood(x) & PrecipitationFallsOn(x)) -> IncreasesElectricalConductivity(x))", "score": 0}
{"id": "eqasc_validation_914", "prediction": "all x y z.((Wood(x) & Precipitation(y) & Precipitation(z)) -> IncreasesElectricalConductivity(x,y,z))", "score": 0}
{"id": "eqasc_validation_914", "prediction": "all x.((Wood(x) & Precipitation(x)) -> IncreasesElectricalConductivity(x))", "score": 0}
{"id": "eqasc_validation_914", "prediction": "all x y.((Wood(x) & Precipitation(y)) -> IncreasedElectricalConductivity(x,y))", "score": 0}
{"id": "eqasc_validation_914", "prediction": "all x y.((Wood(x) & Precipitation(y) & FallsOn(x,y)) -> ElectricalConductivityIncreases(x,y))", "score": 0}
{"id": "eqasc_validation_914", "prediction": "all x y.((Wood(x) & Precipitation(y) & FallsOn(x,y)) -> IncreasedElectricalConductivity(x,y))", "score": 0}
{"id": "eqasc_validation_914", "prediction": "all x y z.((Wood(x) & Precipitation(y) & Precipitation(z) & FallsOn(x,y,z)) -> IncreasesElectricalConductivity(x))", "score": 0}
{"id": "eqasc_validation_914", "prediction": "all x.((Wood(x) & PrecipitationFalls(x)) -> IncreasesElectricalConductivity(x))", "score": 0}
{"id": "eqasc_validation_914", "prediction": "all x y.((Wood(x) & Precipitation(y) & FallsOn(x,y)) -> ElectricalConductivityIncreases(x))", "score": 0}
{"id": "eqasc_validation_914", "prediction": "all x y.((Wood(x) & Precipitation(y) & FallsOn(y,x)) -> IncreasesElectricalConductivity(x,y))", "score": 0}
{"id": "eqasc_validation_914", "prediction": "all x y.((Wood(x) & Precipitation(y)) -> ElectricalConductivityIncreases(x,y))", "score": 0}
{"id": "eqasc_validation_914", "prediction": "all x.((Wood(x) & PrecipitationFallsOn(x,Wood)) -> IncreasesElectricalConductivity(x))", "score": 0}
{"id": "eqasc_validation_915", "prediction": "all x y z.((SpiderWeb(x) & Spider(y) & Food(z)) -> CapturesBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_915", "prediction": "all x y.((SpiderWeb(x) & Spider(y)) -> CapturesFood(x,y))", "score": 0}
{"id": "eqasc_validation_915", "prediction": "all x y z.((SpiderWeb(x) & Spider(y) & Food(z)) -> Captures(x,y,z))", "score": 0}
{"id": "eqasc_validation_915", "prediction": "all x y.((SpiderWeb(x) & Spider(y)) -> CapturesFoodBy(x,y))", "score": 0}
{"id": "eqasc_validation_915", "prediction": "all x y z.((SpiderWeb(x) & Spider(y) & Food(z)) -> UsedToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_915", "prediction": "all x y z.((SpiderWeb(x) & Food(y) & Spider(z)) -> CapturesBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_915", "prediction": "all x y z.((SpiderWeb(x) & Food(y) & Spider(z)) -> Captures(x,y,z))", "score": 0}
{"id": "eqasc_validation_915", "prediction": "all x y.((SpiderWeb(x) & Spider(y)) -> UsedToCaptureFood(x,y))", "score": 0}
{"id": "eqasc_validation_915", "prediction": "all x y z.((SpiderWeb(x) & Spider(y) & Food(z) & Captures(x,y,z)) -> UsedBy(x,y))", "score": 0}
{"id": "eqasc_validation_915", "prediction": "all x y z.((SpiderWeb(x) & Spider(y) & Food(z) & Captures(x,y,z)) -> UsedToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_915", "prediction": "all x y z.((SpiderWeb(x) & Food(y) & Spider(z)) -> UsedToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_915", "prediction": "all x y z.((SpiderWeb(x) & Spider(y) & Food(z)) -> UsedToCaptureBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_915", "prediction": "all x y z.((SpiderWeb(x) & Spider(y) & Food(z) & Captures(x,y,z)) -> UsedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_915", "prediction": "all x y z.((SpiderWeb(x) & Spider(y) & Food(z)) -> UsesToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_915", "prediction": "all x y z.((SpiderWeb(x) & Spider(y) & Food(z) & UsedToCapture(x,y,z)) -> UsedBy(x,y))", "score": 0}
{"id": "eqasc_validation_915", "prediction": "all x y z.((SpiderWeb(x) & Spider(y) & Food(z) & UsedToCapture(x,y,z)) -> UsedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_916", "prediction": "all x.(BlackWifeSpider(x) -> ConstructsFunnelShapedWebs(x))", "score": 0}
{"id": "eqasc_validation_916", "prediction": "all x.(BlackWifeSpider(x) -> (ConstructsFunnelShapedWebs(x)))", "score": 0}
{"id": "eqasc_validation_916", "prediction": "all x.(BlackWifeSpider(x) -> ConstructsFunnelShapeWebs(x))", "score": 0}
{"id": "eqasc_validation_916", "prediction": "all x y.((BlackWife(x) & Spider(y)) -> ConstructsFunnelShapedWebs(x,y))", "score": 0}
{"id": "eqasc_validation_916", "prediction": "all x.(BlackWildWifeSpider(x) -> ConstructsFunnelShapedWebs(x))", "score": 0}
{"id": "eqasc_validation_916", "prediction": "all x y z.((BlackWife(x) & Web(y) & Web(z)) -> Constructs(x,y,z))", "score": 0}
{"id": "eqasc_validation_916", "prediction": "all x y.((BlackWifeSpider(x) & Web(y)) -> ConstructsFunnelShaped(x,y))", "score": 0}
{"id": "eqasc_validation_916", "prediction": "all x.(BlackWifeSpider(x) -> ConstructsFunctionnalShapedWebs(x))", "score": 0}
{"id": "eqasc_validation_916", "prediction": "all x y.((BlackWife(x) & Spider(y)) -> ConstructsFunnelShapeWebs(x,y))", "score": 0}
{"id": "eqasc_validation_916", "prediction": "all x y.((BlackWife(x) & Spider(y)) -> ConstructsFunnelShapedWebs(x))", "score": 0}
{"id": "eqasc_validation_916", "prediction": "all x.(BlackWidowSpider(x) -> ConstructsFunnelShapedWebs(x))", "score": 0}
{"id": "eqasc_validation_917", "prediction": "all x.(BlackWife(x) -> UsesWebsToCaptureFood(x))", "score": 0}
{"id": "eqasc_validation_917", "prediction": "all x y z.((BlackWife(x) & Web(y) & Food(z)) -> UsesToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_917", "prediction": "all x y.((BlackWife(x) & Web(y)) -> UsesToCaptureFood(x,y))", "score": 0}
{"id": "eqasc_validation_917", "prediction": "all x y z.((BlackWife(x) & Web(y) & Food(z) & Uses(x,y)) -> CapturesFood(x,z))", "score": 0}
{"id": "eqasc_validation_917", "prediction": "all x.(BlackWife(x) -> (UsesWebs(x) & CapturesFood(x)))", "score": 0}
{"id": "eqasc_validation_917", "prediction": "all x y z.((BlackWife(x) & Web(y) & Food(z)) -> Captures(x,y,z))", "score": 0}
{"id": "eqasc_validation_917", "prediction": "all x y z.((BlackWondow(x) & Web(y) & Food(z)) -> UsesToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_917", "prediction": "all x y.((BlackWife(x) & Web(y)) -> CapturesFood(x,y))", "score": 0}
{"id": "eqasc_validation_917", "prediction": "all x y z.((BlackWife(x) & Web(y) & Food(z)) -> UsesToCaptureFood(x,y,z))", "score": 0}
{"id": "eqasc_validation_917", "prediction": "all x y z.((BlackWild(x) & Web(y) & Food(z)) -> UsesToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_917", "prediction": "all x y.((BlackWondow(x) & Web(y)) -> UsesToCaptureFood(x,y))", "score": 0}
{"id": "eqasc_validation_917", "prediction": "all x y z.((BlackWife(x) & Web(y) & Food(z) & UsesToCapture(x,y,z)) -> UsesToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_917", "prediction": "all x y z.((BlackWife(x) & Web(y) & Food(z)) -> (Uses(x,y) & CapturesFood(x,z)))", "score": 0}
{"id": "eqasc_validation_917", "prediction": "all x y.((BlackWild(x) & Web(y)) -> UsesToCaptureFood(x,y))", "score": 0}
{"id": "eqasc_validation_917", "prediction": "all x y z.((BlackWife(x) & Web(y) & Food(z) & Uses(x,y)) -> Captures(x,z))", "score": 0}
{"id": "eqasc_validation_917", "prediction": "all x y z.((BlackWife(x) & Web(y) & Food(z)) -> (Uses(x,y) & Captures(x,z)))", "score": 0}
{"id": "eqasc_validation_918", "prediction": "all x y.((Spider(x) & CapturedInsect(y)) -> InjectsVenom(x,y))", "score": 0}
{"id": "eqasc_validation_918", "prediction": "all x y.((Spider(x) & CapturedInsect(y)) -> InjectsVenomToParalyze(x,y))", "score": 0}
{"id": "eqasc_validation_918", "prediction": "all x y.((Spider(x) & CapturedInsect(y) & InjectsVenom(x,y)) -> Paralyzes(x,y))", "score": 0}
{"id": "eqasc_validation_918", "prediction": "all x y z.((Spider(x) & CapturedInsect(y) & Venom(z)) -> InjectsIntoBodyToParalyze(x,y,z))", "score": 0}
{"id": "eqasc_validation_918", "prediction": "all x y.((Spider(x) & CapturedInsect(y)) -> (InjectsVenom(x,y) & Paralyzes(x,y)))", "score": 0}
{"id": "eqasc_validation_918", "prediction": "all x y z.((Spider(x) & CapturedInsect(y) & Venom(z)) -> InjectsToParalyze(x,y,z))", "score": 0}
{"id": "eqasc_validation_918", "prediction": "all x y z.((Spider(x) & Insect(y) & Insect(z)) -> InjectsVenom(x,y,z))", "score": 0}
{"id": "eqasc_validation_918", "prediction": "all x y z.((Spider(x) & Insect(y) & Insect(z)) -> (InjectsVenom(x,y) & Paralyzes(x,z)))", "score": 0}
{"id": "eqasc_validation_918", "prediction": "all x y.((Spider(x) & Insect(y)) -> (InjectsVenom(x,y) & Paralyzes(x,y)))", "score": 0}
{"id": "eqasc_validation_918", "prediction": "all x y z.((Spider(x) & CapturedInsect(y) & Venom(z) & InjectsInto(x,y,z)) -> Paralyzes(x,y))", "score": 0}
{"id": "eqasc_validation_918", "prediction": "all x y z.((Spider(x) & CapturedInsect(y) & Venom(z)) -> InjectsIntoBody(x,y,z))", "score": 0}
{"id": "eqasc_validation_918", "prediction": "all x y z.((Spider(x) & Insect(y) & Insect(z)) -> InjectsVenomToParalyze(x,y,z))", "score": 0}
{"id": "eqasc_validation_918", "prediction": "all x y z.((Spider(x) & CapturedInsect(y) & Venom(z)) -> InjectsInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_918", "prediction": "all x y z.((Spider(x) & CapturedInsect(y) & Venom(z) & InjectsInto(x,y,z)) -> Paralyzes(x,y,z))", "score": 0}
{"id": "eqasc_validation_918", "prediction": "all x y z.((Spider(x) & Insect(y) & Insect(z)) -> (InjectsVenom(x,y,z) & Paralyzes(y,z)))", "score": 0}
{"id": "eqasc_validation_918", "prediction": "all x y.((Spider(x) & CapturedInsect(y)) -> InjectVenom(x,y))", "score": 0}
{"id": "eqasc_validation_919", "prediction": "all x.(Arachnid(x) -> (EightLegged(x) & CapturesFoodWithWeb(x) & InjectsVenom(x) & ParalyzesToEat(x)))", "score": 0}
{"id": "eqasc_validation_919", "prediction": "all x y.((Arachnid(x) & EightLegged(x)) -> (CapturesFoodWithWeb(x) & InjectsVenom(x) & ParalyzesToEat(x)))", "score": 0}
{"id": "eqasc_validation_919", "prediction": "all x y z.((Arachnid(x) & EightLegged(x) & Food(y) & Web(z)) -> (Captures(x,y) & InjectsVenom(x,z) & ParalyzesToEat(x,y)))", "score": 0}
{"id": "eqasc_validation_919", "prediction": "all x.(Arachnid(x) -> (EightLegged(x) & CapturesFoodWithWeb(x) & InjectsVenom(x) & ParalyzesFoodToEat(x)))", "score": 0}
{"id": "eqasc_validation_919", "prediction": "all x y.((Arachnid(x) & EightLegged(x)) -> (CapturesFoodWithWeb(x) & InjectsVenom(x) & ParalyzesToEat(x,y)))", "score": 0}
{"id": "eqasc_validation_919", "prediction": "all x y z.((Arachnid(x) & EightLegged(x) & Food(y) & Web(z)) -> (Captures(x,y) & InjectsVenom(x,z) & ParalyzesToEat(x)))", "score": 0}
{"id": "eqasc_validation_919", "prediction": "all x y z.((Arachnid(x) & EightLegged(x) & Food(y) & Web(z)) -> (Captures(x,y) & InjectsVenom(x,z) & Paralyzes(x,y)))", "score": 0}
{"id": "eqasc_validation_919", "prediction": "all x y z.((Arachnid(x) & EightLegged(x) & Food(y) & Web(z)) -> (Captures(x,y) & InjectsVenom(x) & ParalyzesToEat(x)))", "score": 0}
{"id": "eqasc_validation_919", "prediction": "all x y.((Arachnid(x) & EightLegged(x)) -> (CapturesFoodWithWeb(x) & InjectsVenom(x) & ParalyzesFoodToEat(x)))", "score": 0}
{"id": "eqasc_validation_919", "prediction": "all x y z.((Arachnid(x) & EightLegged(x) & Food(y) & Web(z)) -> (Captures(x,y,z) & InjectsVenom(x) & ParalyzesToEat(x)))", "score": 0}
{"id": "eqasc_validation_919", "prediction": "all x.(Arachnid(x) -> (EightLegged(x) & CapturesFoodWithWeb(x) & InjectsVenom(x) & Paralyzes(x) & Eats(x)))", "score": 0}
{"id": "eqasc_validation_919", "prediction": "all x y z.((Arachnid(x) & EightLegged(x) & Food(y) & Web(z)) -> (Captures(x,y) & InjectsVenom(x,z) & Paralyzes(x,y,z)))", "score": 0}
{"id": "eqasc_validation_919", "prediction": "all x y z.((Arachnid(x) & EightLegged(x) & Food(y) & Web(z)) -> (Captures(x,y) & InjectsVenom(x) & Paralyzes(x,z)))", "score": 0}
{"id": "eqasc_validation_919", "prediction": "all x y z.((Arachnid(x) & EightLegged(x) & Food(y) & Web(z)) -> (Captures(x,y,z) & InjectsVenom(x) & Paralyzes(x,y)))", "score": 0}
{"id": "eqasc_validation_919", "prediction": "all x y z.((Arachnid(x) & EightLegged(x) & Food(y) & Web(z) & Captures(x,y) & InjectsVenom(x,z)) -> ParalyzesToEat(x))", "score": 0}
{"id": "eqasc_validation_920", "prediction": "all x.(CrabSpider(x) -> SpinsNoWebs(x))", "score": 0}
{"id": "eqasc_validation_920", "prediction": "all x.(CrabSpider(x) -> SpinsNoWeb(x))", "score": 0}
{"id": "eqasc_validation_920", "prediction": "all x y.((CrabSpider(x) & Web(y)) -> Spins(x,y))", "score": 0}
{"id": "eqasc_validation_920", "prediction": "all x y.((CrabSpider(x) & Web(y)) -> SpinsNo(x,y))", "score": 0}
{"id": "eqasc_validation_920", "prediction": "all x.((CrabSpider(x) & SpinsNoWebs(x)) -> SpinsNoWebs(x))", "score": 0}
{"id": "eqasc_validation_920", "prediction": "all x y.((CrabSpider(x) & Web(y) & Spins(x,y)) -> -Spins(x,y))", "score": 0}
{"id": "eqasc_validation_920", "prediction": "all x y.((Crab(x) & Spider(y)) -> SpinsNoWebs(x,y))", "score": 0}
{"id": "eqasc_validation_920", "prediction": "all x y.((CrabSpider(x) & Web(y) & Spins(x,y)) -> Spins(x,y))", "score": 0}
{"id": "eqasc_validation_920", "prediction": "all x.(RabbitSpider(x) -> SpinsNoWebs(x))", "score": 0}
{"id": "eqasc_validation_920", "prediction": "all x y.((Crab(x) & Spider(y)) -> SpinsNoWeb(x,y))", "score": 0}
{"id": "eqasc_validation_920", "prediction": "all x.(Crab(x) -> SpinsNoWebs(x))", "score": 0}
{"id": "eqasc_validation_920", "prediction": "all x.(CrabSpider(x) -> SpinsNoneWebs(x))", "score": 0}
{"id": "eqasc_validation_920", "prediction": "all x.(CrabSpider(x) -> -SpinsWebs(x))", "score": 0}
{"id": "eqasc_validation_921", "prediction": "all x.(Web(x) -> CapturesFood(x))", "score": 0}
{"id": "eqasc_validation_921", "prediction": "all x y.((Web(x) & Food(y)) -> CapturesFood(x,y))", "score": 0}
{"id": "eqasc_validation_921", "prediction": "all x y z.((Web(x) & Food(y) & Food(z)) -> Captures(x,y,z))", "score": 0}
{"id": "eqasc_validation_921", "prediction": "all x y.((Web(x) & Food(y)) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_921", "prediction": "all x y z.((Web(x) & Food(y) & Food(z)) -> CapturesFood(x,y,z))", "score": 0}
{"id": "eqasc_validation_921", "prediction": "all x y z.((Web(x) & Food(y) & Food(z) & Captures(x,y,z)) -> ToolToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_921", "prediction": "all x y z.((Web(x) & Food(y) & Food(z) & Captures(x,y,z)) -> ToolToCapture(x,y))", "score": 0}
{"id": "eqasc_validation_921", "prediction": "all x y z.((Web(x) & Food(y) & Food(z)) -> CaptureTool(x,y,z))", "score": 0}
{"id": "eqasc_validation_921", "prediction": "all x y z w.((Web(x) & Food(y) & Food(z) & Food(w)) -> Captures(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_921", "prediction": "all x y z.((Web(x) & Food(y) & Food(z) & Captures(x,y)) -> ToolToCapture(x,z))", "score": 0}
{"id": "eqasc_validation_921", "prediction": "all x y.((Web(x) & Food(y) & Captures(x,y)) -> ToolToCapture(x,y))", "score": 0}
{"id": "eqasc_validation_921", "prediction": "all x y.((Web(x) & Food(y)) -> CaptureTool(x,y))", "score": 0}
{"id": "eqasc_validation_921", "prediction": "all x y z.((Web(x) & Food(y) & Food(z)) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_921", "prediction": "all x y z.((Web(x) & Food(y) & Food(z)) -> CapturesTool(x,y,z))", "score": 0}
{"id": "eqasc_validation_921", "prediction": "all x y z.((Web(x) & Food(y) & Food(z) & Captures(x,y,z)) -> Tool(x))", "score": 0}
{"id": "eqasc_validation_921", "prediction": "all x y z.((Web(x) & Food(y) & Food(z)) -> (CapturesFood(x,y,z) & CapturesFood(x,y)))", "score": 0}
{"id": "eqasc_validation_922", "prediction": "all x.(Spider(x) -> EatsInsects(x))", "score": 0}
{"id": "eqasc_validation_922", "prediction": "all x y.((Spider(x) & Insect(y)) -> Eats(x,y))", "score": 0}
{"id": "eqasc_validation_922", "prediction": "all x.(Spider(x) -> EatInsects(x))", "score": 0}
{"id": "eqasc_validation_922", "prediction": "all x y z.((Spider(x) & Insect(y) & Insect(z)) -> Eats(x,y,z))", "score": 0}
{"id": "eqasc_validation_922", "prediction": "all x y.((Spider(x) & Insect(y)) -> Eat(x,y))", "score": 0}
{"id": "eqasc_validation_922", "prediction": "all x.(Spider(x) -> (EatInsects(x) | EatInsects(x)))", "score": 0}
{"id": "eqasc_validation_922", "prediction": "all x.(Spider(x) -> (EatsInsects(x) | EatsInsects(x)))", "score": 0}
{"id": "eqasc_validation_922", "prediction": "all x y z.((Spider(x) & Insect(y) & Insect(z)) -> Eats(x,y))", "score": 0}
{"id": "eqasc_validation_922", "prediction": "all x y z.((Spider(x) & Insect(y) & Insect(z)) -> Eat(x,y,z))", "score": 0}
{"id": "eqasc_validation_922", "prediction": "all x.(Spider(x) -> EatsInsect(x))", "score": 0}
{"id": "eqasc_validation_922", "prediction": "all x.((Spider(x) & Insect(y)) -> Eats(x,y))", "score": 0}
{"id": "eqasc_validation_922", "prediction": "all x.(Spider(x) -> UsuallyEatsInsects(x))", "score": 0}
{"id": "eqasc_validation_922", "prediction": "all x.(Spider(x) -> (EatsInsects(x) & -EatsInsects(x)))", "score": 0}
{"id": "eqasc_validation_922", "prediction": "all x.(Spider(x) -> (EatInsects(x) & -EatInsects(x)))", "score": 0}
{"id": "eqasc_validation_922", "prediction": "all x.(Spider(x) -> (EatInsects(x) & EatInsects(x)))", "score": 0}
{"id": "eqasc_validation_923", "prediction": "all x.(Web(x) -> CapturesInsects(x))", "score": 0}
{"id": "eqasc_validation_923", "prediction": "all x y.((Web(x) & Insect(y)) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_923", "prediction": "all x y z.((Web(x) & Insect(y) & Insect(z)) -> Captures(x,y,z))", "score": 0}
{"id": "eqasc_validation_923", "prediction": "all x y z.((Web(x) & Insect(y) & Insect(z)) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_923", "prediction": "all x y z.((Web(x) & Insect(y) & Insect(z) & Captures(x,y)) -> Captures(x,z))", "score": 0}
{"id": "eqasc_validation_923", "prediction": "all x y z.((Web(x) & Insect(y) & Insect(z) & Captures(x,y,z)) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_923", "prediction": "all x y.((Web(x) & Insect(y) & Captures(x,y)) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_923", "prediction": "all x y z.((Web(x) & Insect(y) & Insect(z) & Captures(x,y,z)) -> Captures(x,y,z))", "score": 0}
{"id": "eqasc_validation_923", "prediction": "all x y z.((Web(x) & Insect(y) & Insect(z) & Captures(x,y)) -> Captures(x,y,z))", "score": 0}
{"id": "eqasc_validation_923", "prediction": "all x.(Web(x) -> CapturesInsect(x))", "score": 0}
{"id": "eqasc_validation_923", "prediction": "all x y z.((Web(x) & Insect(y) & (Insect(z) | Insect(z))) -> Captures(x,y,z))", "score": 0}
{"id": "eqasc_validation_923", "prediction": "all x y z.((Web(x) & Insect(y) & Bug(z)) -> Captures(x,y,z))", "score": 0}
{"id": "eqasc_validation_923", "prediction": "all x y z.((Web(x) & Insect(y) & Insect(z) & Captures(x,y)) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_923", "prediction": "all x y z.((Web(x) & Insect(y) & (Insect(z) | Insect(z))) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_923", "prediction": "all x y z.((Web(x) & Insect(y) & (Insect(z) | Insect(z)))) -> Captures(x,y,z))", "score": -1}
{"id": "eqasc_validation_923", "prediction": "all x y z.((Web(x) & Insect(y) & Species(z)) -> Captures(x,y,z))", "score": 0}
{"id": "eqasc_validation_924", "prediction": "all x y z.((WebSpinningSpider(x) & Web(y) & Insect(z)) -> SpinsToCatch(x,y,z))", "score": 0}
{"id": "eqasc_validation_924", "prediction": "all x y.((WebSpinningSpider(x) & Web(y)) -> SpinsToCatchInsects(x,y))", "score": 0}
{"id": "eqasc_validation_924", "prediction": "all x y.((WebSpinningSpider(x) & Web(y)) -> SpinsToCatch(x,y))", "score": 0}
{"id": "eqasc_validation_924", "prediction": "all x y z.((WebSpinningSpider(x) & Web(y) & Insect(z)) -> SpinsToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_924", "prediction": "all x y z.((WebSpinningSpider(x) & Web(y) & Insect(z)) -> Spins(x,y,z))", "score": 0}
{"id": "eqasc_validation_924", "prediction": "all x y z.((WebSpinningSpider(x) & Web(y) & Insect(z)) -> Spins(x,y))", "score": 0}
{"id": "eqasc_validation_924", "prediction": "all x y.((WebSpinningSpider(x) & Insect(y)) -> SpinsWebsToCatch(x,y))", "score": 0}
{"id": "eqasc_validation_924", "prediction": "all x y.((WebSpinner(x) & Spider(y)) -> SpinsWebsToCatchInsects(x,y))", "score": 0}
{"id": "eqasc_validation_924", "prediction": "all x.(WebSpinningSpider(x) -> SpinsWebsToCatchInsects(x))", "score": 0}
{"id": "eqasc_validation_924", "prediction": "all x y.((WebSpinningSpider(x) & Web(y)) -> Spins(x,y))", "score": 0}
{"id": "eqasc_validation_924", "prediction": "all x y.((WebSpinningSpider(x) & Spider(y)) -> SpinsWebsToCatchInsects(x,y))", "score": 0}
{"id": "eqasc_validation_924", "prediction": "all x y.((WebSpinningSpider(x) & Web(y)) -> SpinsToCapture(x,y))", "score": 0}
{"id": "eqasc_validation_924", "prediction": "all x y z.((WebSpinningSpider(x) & Web(y) & Insect(z)) -> SpinsSpinsToCatch(x,y,z))", "score": 0}
{"id": "eqasc_validation_925", "prediction": "all x y.((Spider(x) & Insect(y)) -> CatchesBySpinning(x,y))", "score": 0}
{"id": "eqasc_validation_925", "prediction": "all x y.((Spider(x) & Insect(y) & Spins(x,y)) -> Catches(x,y))", "score": 0}
{"id": "eqasc_validation_925", "prediction": "all x y z.((Spider(x) & Insect(y) & Insect(z)) -> CatchesBySpinning(x,y,z))", "score": 0}
{"id": "eqasc_validation_925", "prediction": "all x y z.((Spider(x) & Insect(y) & Insect(z) & Spins(x)) -> Catches(x,y,z))", "score": 0}
{"id": "eqasc_validation_925", "prediction": "all x y.((Spider(x) & Insect(y)) -> (Catches(x,y) & Spins(x,y)))", "score": 0}
{"id": "eqasc_validation_925", "prediction": "all x.(Spider(x) -> (CatchesInsects(x) & Spins(x)))", "score": 0}
{"id": "eqasc_validation_925", "prediction": "all x y.((Spider(x) & Insect(y)) -> (Catch(x,y) & Spin(x,y)))", "score": 0}
{"id": "eqasc_validation_925", "prediction": "all x y z.((Spider(x) & Insect(y) & Insect(z) & Spins(x,y,z)) -> Catches(x,y,z))", "score": 0}
{"id": "eqasc_validation_925", "prediction": "all x y z.((Spider(x) & Insect(y) & Insect(z)) -> (Catches(x,y) & Spins(x,z)))", "score": 0}
{"id": "eqasc_validation_925", "prediction": "all x y.((Spider(x) & Insect(y)) -> (Catches(x,y) & Spins(x)))", "score": 0}
{"id": "eqasc_validation_925", "prediction": "all x y z.((Spider(x) & Insect(y) & Insect(z) & Spins(x,y)) -> Catches(x,z))", "score": 0}
{"id": "eqasc_validation_925", "prediction": "all x y z.((Spider(x) & Insect(y) & Insect(z) & Spins(x,y)) -> Catches(x,y,z))", "score": 0}
{"id": "eqasc_validation_925", "prediction": "all x y.((Spider(x) & Insect(y)) -> (Captures(x,y) & Spins(x,y)))", "score": 0}
{"id": "eqasc_validation_925", "prediction": "all x y z.((Spider(x) & Insect(y) & Insect(z)) -> (Catch(x,y) & Spin(x,z)))", "score": 0}
{"id": "eqasc_validation_925", "prediction": "all x y z.((Spider(x) & Insect(y) & Insect(z)) -> (Catches(x,y,z) & Spins(x,y)))", "score": 0}
{"id": "eqasc_validation_925", "prediction": "all x y z.((Spider(x) & Insect(y) & Insect(z)) -> (Catch(x,y,z) & Spin(x,y)))", "score": 0}
{"id": "eqasc_validation_926", "prediction": "all x.(Spider(x) -> HasEightLegs(x))", "score": 0}
{"id": "eqasc_validation_926", "prediction": "all x.(Spider(x) -> (HasEightLegs(x) & Spider(x)))", "score": 0}
{"id": "eqasc_validation_926", "prediction": "all x.(Spider(x) -> (HasEightLegs(x) & HasEightLegs(x)))", "score": 0}
{"id": "eqasc_validation_926", "prediction": "all x y.((Spider(x) & Leg(y)) -> HasEight(x,y))", "score": 0}
{"id": "eqasc_validation_926", "prediction": "all x.(Spider(x) -> (HasEightLegs(x) | HasEightLegs(x)))", "score": 0}
{"id": "eqasc_validation_926", "prediction": "all x.(Spider(x) -> (HasEightLegs(x)))", "score": 0}
{"id": "eqasc_validation_926", "prediction": "all x y.((Spider(x) & Leg(y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_926", "prediction": "all x.(Spider(x) -> (HasEightLegs(x) & HasLegs(x)))", "score": 0}
{"id": "eqasc_validation_926", "prediction": "all x.(Spider(x) -> SpiderHasEightLegs(x))", "score": 0}
{"id": "eqasc_validation_926", "prediction": "all x.(Spider(x) -> (HasLegs(x,8)))", "score": 0}
{"id": "eqasc_validation_926", "prediction": "all x y.((Spider(x) & Legs(y)) -> HasEight(x,y))", "score": 0}
{"id": "eqasc_validation_926", "prediction": "all x y.((Spider(x) & Leg(y)) -> HasEightLegs(x,y))", "score": 0}
{"id": "eqasc_validation_926", "prediction": "all x.(Spider(x) -> HasLegs(x,8))", "score": 0}
{"id": "eqasc_validation_927", "prediction": "all x y.((Web(x) & Creature(y)) -> BuiltToCaptureFood(x,y))", "score": 0}
{"id": "eqasc_validation_927", "prediction": "all x y.((Web(x) & EightLeggedCreature(y)) -> BuiltToCaptureFood(x,y))", "score": 0}
{"id": "eqasc_validation_927", "prediction": "all x y.((Web(x) & Creature(y)) -> CapturesFood(x,y))", "score": 0}
{"id": "eqasc_validation_927", "prediction": "all x y.((Web(x) & Creature(y) & BuiltToCaptureFood(x,y)) -> EightLegged(x))", "score": 0}
{"id": "eqasc_validation_927", "prediction": "all x.(Web(x) -> (CapturesFood(x) & ByEightLeggedCreatures(x)))", "score": 0}
{"id": "eqasc_validation_927", "prediction": "all x y.((Web(x) & EightLeggedCreature(y)) -> CapturesFood(x,y))", "score": 0}
{"id": "eqasc_validation_927", "prediction": "all x y.((Web(x) & Creature(y) & BuiltFor(x,y)) -> CapturesFood(x,y))", "score": 0}
{"id": "eqasc_validation_927", "prediction": "all x.(Web(x) -> (CapturesFood(x) & EightLeggedCreature(x)))", "score": 0}
{"id": "eqasc_validation_927", "prediction": "all x.(Web(x) -> (CapturesFood(x,8) & LeggedCreature(x)))", "score": 0}
{"id": "eqasc_validation_927", "prediction": "all x.(Web(x) -> (CapturesFood(x) & BuiltByEightLeggedCreatures(x)))", "score": 0}
{"id": "eqasc_validation_927", "prediction": "all x y.((Web(x) & TenLeggedCreature(y)) -> BuiltToCaptureFood(x,y))", "score": 0}
{"id": "eqasc_validation_927", "prediction": "all x y.((Web(x) & Creature(y) & BuiltToCaptureFood(x,y)) -> EightLegged(y))", "score": 0}
{"id": "eqasc_validation_927", "prediction": "all x.(Web(x) -> CapturesFoodByEightLeggedCreatures(x))", "score": 0}
{"id": "eqasc_validation_927", "prediction": "all x y.((Web(x) & Creature(y)) -> BuiltToCapture(x,y))", "score": 0}
{"id": "eqasc_validation_927", "prediction": "all x y.((Web(x) & TenLeggedCreature(y)) -> CapturesFood(x,y))", "score": 0}
{"id": "eqasc_validation_927", "prediction": "all x.(Web(x) -> (CapturesFood(x) & EightLeggedCreatures(x)))", "score": 0}
{"id": "eqasc_validation_928", "prediction": "all x.(SpiderWeb(x) -> InterestingTrap(x))", "score": 0}
{"id": "eqasc_validation_928", "prediction": "all x y.((SpiderWeb(x) & Trap(y)) -> Interesting(x,y))", "score": 0}
{"id": "eqasc_validation_928", "prediction": "all x y.((SpiderWeb(x) & Trap(y)) -> Interesting(x))", "score": 0}
{"id": "eqasc_validation_928", "prediction": "all x y z.((SpiderWeb(x) & Trap(y) & Trap(z)) -> Interesting(x,y,z))", "score": 0}
{"id": "eqasc_validation_928", "prediction": "all x y z.((SpiderWeb(x) & Trap(y) & Trap(z)) -> Interesting(x,y))", "score": 0}
{"id": "eqasc_validation_928", "prediction": "all x.((SpiderWeb(x) & Trap(x)) -> Interesting(x))", "score": 0}
{"id": "eqasc_validation_928", "prediction": "all x y z.((SpiderWeb(x) & Trap(y) & Trap(z)) -> Interesting(x))", "score": 0}
{"id": "eqasc_validation_928", "prediction": "all x.((SpiderWeb(x) & InterestingTrap(x)) -> Interesting(x))", "score": 0}
{"id": "eqasc_validation_928", "prediction": "all x.((SpiderWeb(x) & InterestingTrap(x)) -> Intriguing(x))", "score": 0}
{"id": "eqasc_validation_928", "prediction": "all x y z.((SpiderWeb(x) & Trap(y) & Trap(z)) -> Interesting(x,z))", "score": 0}
{"id": "eqasc_validation_928", "prediction": "all x.((SpiderWeb(x) & InterestingTrap(x)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_928", "prediction": "all x.((SpiderWeb(x) & InterestingTrap(x)) -> InterestingTrap(x))", "score": 0}
{"id": "eqasc_validation_928", "prediction": "all x.((SpiderWeb(x) & InterestingTrap(x)) -> exists y.(SpiderWeb(y) & LocatedIn(x,y)))", "score": 0}
{"id": "eqasc_validation_928", "prediction": "all x.((SpiderWeb(x) & InterestingTrap(x)) -> exists y.(SpiderWeb(y) & LocatedIn(x,y))))", "score": -1}
{"id": "eqasc_validation_928", "prediction": "all x.((SpiderWeb(x) & InterestingTrap(x)) -> exists y.(SpiderWeb(y) & Trap(x,y))))", "score": -1}
{"id": "eqasc_validation_929", "prediction": "all x y z.((Spider(x) & Trap(y) & Food(z)) -> UsesToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_929", "prediction": "all x y.((Spider(x) & Trap(y)) -> UsesToCaptureFood(x,y))", "score": 0}
{"id": "eqasc_validation_929", "prediction": "all x y z.((Spider(x) & Trap(y) & Food(z) & Uses(x,y)) -> Captures(x,z))", "score": 0}
{"id": "eqasc_validation_929", "prediction": "all x y z.((Spider(x) & Trap(y) & Food(z) & UsesToCapture(x,y,z)) -> UsesToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_929", "prediction": "all x.(Spider(x) -> UsesTrapsToCaptureFood(x))", "score": 0}
{"id": "eqasc_validation_929", "prediction": "all x y z w.((Spider(x) & Trap(y) & Food(z) & Food(w)) -> UsesToCapture(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_929", "prediction": "all x.(Spider(x) -> (UsesTraps(x) & CapturesFood(x)))", "score": 0}
{"id": "eqasc_validation_929", "prediction": "all x y z.((Spider(x) & Trap(y) & Food(z) & Uses(x,y)) -> CapturesFood(x,z))", "score": 0}
{"id": "eqasc_validation_929", "prediction": "all x y z.((Spider(x) & Trap(y) & Food(z)) -> UsesToCaptureFood(x,y,z))", "score": 0}
{"id": "eqasc_validation_929", "prediction": "all x y z.((Spider(x) & Traps(y) & Food(z)) -> UsesToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_929", "prediction": "all x y z.((Spider(x) & Trap(y) & Food(z)) -> (Uses(x,y) & Captures(x,z)))", "score": 0}
{"id": "eqasc_validation_929", "prediction": "all x y z.((Spider(x) & Trap(y) & Food(z)) -> UsesToCapture(x,y))", "score": 0}
{"id": "eqasc_validation_929", "prediction": "all x y z.((Spider(x) & Trap(y) & Food(z)) -> (Uses(x,y) & CapturesFood(x,z)))", "score": 0}
{"id": "eqasc_validation_929", "prediction": "all x y z.((Spider(x) & Trap(y) & Food(z)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_929", "prediction": "all x y z.((Spider(x) & Trap(y) & Food(z) & UsesToCapture(x,y)) -> UsesToCapture(x,z))", "score": 0}
{"id": "eqasc_validation_929", "prediction": "all x y z.((Spider(x) & Trap(y) & Food(z)) -> UsedToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_930", "prediction": "all x.(Spider(x) -> Arachnid(x))", "score": 0}
{"id": "eqasc_validation_930", "prediction": "all x.((Spider(x) & Arachnid(x)) -> Arachnid(x))", "score": 0}
{"id": "eqasc_validation_930", "prediction": "all x y.((Spider(x) & Arachnid(y)) -> Arachnid(x))", "score": 0}
{"id": "eqasc_validation_930", "prediction": "all x y.((Spider(x) & Arachnid(y)) -> (Arachnid(x) & Arachnid(y)))", "score": 0}
{"id": "eqasc_validation_930", "prediction": "all x.((Spider(x) & Arachnid(x)) -> (Arachnid(x) & Arachnid(x)))", "score": 0}
{"id": "eqasc_validation_930", "prediction": "all x.(Spider(x) -> (Arachnid(x) & Arachnid(x)))", "score": 0}
{"id": "eqasc_validation_930", "prediction": "all x y.((Spider(x) & Arachnid(y)) -> (Arachnid(x) & Arachnid(x)))", "score": 0}
{"id": "eqasc_validation_930", "prediction": "all x.(Arachnid(x) -> Spider(x))", "score": 0}
{"id": "eqasc_validation_930", "prediction": "all x y.((Spider(x) & Arachnid(y)) -> Arachnid(x,y))", "score": 0}
{"id": "eqasc_validation_930", "prediction": "all x.((Spider(x) & Arachnid(x)) -> (Arachnid(x) | Arachnid(x)))", "score": 0}
{"id": "eqasc_validation_930", "prediction": "all x.(Arachnid(x) -> (Spider(x) & Arachnid(x)))", "score": 0}
{"id": "eqasc_validation_930", "prediction": "all x y.((Spider(x) & Arachnid(y)) -> (Arachnid(x) & Spider(y)))", "score": 0}
{"id": "eqasc_validation_930", "prediction": "all x y.((Spider(x) & Arachnid(y)) -> (Arachnid(x) | Arachnid(y)))", "score": 0}
{"id": "eqasc_validation_930", "prediction": "all x y.((Spider(x) & Arachnid(y)) -> (Arachnid(x) | Arachnid(x)))", "score": 0}
{"id": "eqasc_validation_931", "prediction": "all x y.((Web(x) & Arachnid(y)) -> CapturesFood(x,y))", "score": 0}
{"id": "eqasc_validation_931", "prediction": "all x y z.((Web(x) & Arachnid(y) & Food(z)) -> Captures(x,y,z))", "score": 0}
{"id": "eqasc_validation_931", "prediction": "all x y z.((Web(x) & Arachnid(y) & Food(z)) -> CapturesBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_931", "prediction": "all x y.((Web(x) & Arachnid(y)) -> CapturesFoodBy(x,y))", "score": 0}
{"id": "eqasc_validation_931", "prediction": "all x.(Web(x) -> CapturesFoodByArachnids(x))", "score": 0}
{"id": "eqasc_validation_931", "prediction": "all x y z.((Web(x) & Arachnid(y) & Arachnid(z)) -> CapturesFood(x,y,z))", "score": 0}
{"id": "eqasc_validation_931", "prediction": "all x.(Web(x) -> CapturesFood(x))", "score": 0}
{"id": "eqasc_validation_931", "prediction": "all x y z.((Web(x) & Arachnid(y) & Food(z)) -> Captures(x,z))", "score": 0}
{"id": "eqasc_validation_931", "prediction": "all x y z.((Web(x) & Arachnid(y) & Food(z)) -> UsedToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_931", "prediction": "all x y.((Web(x) & Arachnid(y)) -> UsedToCaptureFood(x,y))", "score": 0}
{"id": "eqasc_validation_931", "prediction": "all x y z.((Web(x) & Arachnid(y) & Food(z) & Captures(x,y,z)) -> Arachnid(y))", "score": 0}
{"id": "eqasc_validation_931", "prediction": "all x y z.((Web(x) & Arachnid(y) & Food(z) & Captures(x,y,z)) -> Arachnid(x))", "score": 0}
{"id": "eqasc_validation_931", "prediction": "all x y z.((Web(x) & Arachnid(y) & Arachnid(z)) -> CapturesFoodBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_931", "prediction": "all x y z.((Web(x) & Arachnid(y) & Food(z)) -> CapturesBy(x,y))", "score": 0}
{"id": "eqasc_validation_931", "prediction": "all x y z.((Web(x) & Arachnid(y) & Food(z)) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_931", "prediction": "all x y z.((Web(x) & Arachnid(y) & Food(z) & Captures(x,y,z)) -> UsedBy(x,y))", "score": 0}
{"id": "eqasc_validation_932", "prediction": "all x y z.((CobwebSpider(x) & Corner(y) & LittleTraffic(z)) -> ConstructsWebsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_932", "prediction": "all x y.((CobwebSpider(x) & Corner(y) & LittleTraffic(y)) -> ConstructsWebsIn(x,y))", "score": 0}
{"id": "eqasc_validation_932", "prediction": "all x y.((CobwebSpider(x) & Corner(y) & LittleTraffic(y)) -> ConstructsWebs(x,y))", "score": 0}
{"id": "eqasc_validation_932", "prediction": "all x y z.((CobwebSpider(x) & Corner(y) & Area(z) & LittleTraffic(z)) -> ConstructsWebsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_932", "prediction": "all x y z.((CobwebSpider(x) & Web(y) & Corner(z) & LittleTraffic(z)) -> ConstructsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_932", "prediction": "all x y z.((CobwebSpider(x) & Corner(y) & LittleTraffic(z)) -> ConstructsWebs(x,y,z))", "score": 0}
{"id": "eqasc_validation_932", "prediction": "all x y z.((CobwebSpider(x) & Corner(y) & LittleTrafficArea(z)) -> ConstructsWebsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_932", "prediction": "all x y z.((CobwebSpider(x) & Corner(y) & LittleTraffic(z) & Basement(z)) -> ConstructsWebsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_932", "prediction": "all x y.((CobwebSpider(x) & Corner(y) & LittleTraffic(z)) -> ConstructsWebsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_932", "prediction": "all x y.((CobwebSpider(x) & Corner(y) & LittleTrafficArea(y)) -> ConstructsWebsIn(x,y))", "score": 0}
{"id": "eqasc_validation_932", "prediction": "all x y z.((CobwebSpider(x) & Corner(y) & Area(z) & LittleTraffic(z)) -> ConstructsWebs(x,y,z))", "score": 0}
{"id": "eqasc_validation_932", "prediction": "all x y z.((CobwebSpider(x) & Corner(y) & LittleTraffic(z)) -> ConstructsWeb(x,y,z))", "score": 0}
{"id": "eqasc_validation_932", "prediction": "all x.(CobwebSpider(x) -> (ConstructsWebsInCorners(x) & ConstructsWebsInLittleTraffic(x)))", "score": 0}
{"id": "eqasc_validation_932", "prediction": "all x y z.((CobwebSpider(x) & Web(y) & Corner(z) & LittleTraffic(z)) -> Constructs(x,y,z))", "score": 0}
{"id": "eqasc_validation_932", "prediction": "all x y z.((CobwebSpider(x) & Corner(y) & LittleTrafficArea(z)) -> ConstructsWebs(x,y,z))", "score": 0}
{"id": "eqasc_validation_932", "prediction": "all x y z.((CobwebSpider(x) & Corner(y) & LittleTraffic(z)) -> (ConstructsWebs(x,y) & In(x,z)))", "score": 0}
{"id": "eqasc_validation_933", "prediction": "all x.(Cobweb(x) -> CapturesFood(x))", "score": 0}
{"id": "eqasc_validation_933", "prediction": "all x y.((Cobweb(x) & Food(y)) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_933", "prediction": "all x y z.((Cobweb(x) & Food(y) & Food(z)) -> Captures(x,y,z))", "score": 0}
{"id": "eqasc_validation_933", "prediction": "all x y.((Cobweb(x) & Food(y)) -> CapturesFood(x,y))", "score": 0}
{"id": "eqasc_validation_933", "prediction": "all x y z.((Cobweb(x) & Food(y) & Food(z)) -> UsedToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_933", "prediction": "all x y.((Cobweb(x) & Food(y)) -> UsedToCapture(x,y))", "score": 0}
{"id": "eqasc_validation_933", "prediction": "all x y z.((Cobweb(x) & Food(y) & Food(z) & UsedToCapture(x,y,z)) -> Captures(x,y,z))", "score": 0}
{"id": "eqasc_validation_933", "prediction": "all x y z.((Cobweb(x) & Food(y) & Food(z) & UsedToCapture(x,y,z)) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_933", "prediction": "all x.(Cobweb(x) -> UsedToCaptureFood(x))", "score": 0}
{"id": "eqasc_validation_933", "prediction": "all x y.((Cobweb(x) & Food(y) & UsedToCapture(x,y)) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_933", "prediction": "all x y z.((Cobweb(x) & Food(y) & Food(z) & Captures(x,y,z)) -> UsedToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_933", "prediction": "all x y z.((Cobweb(x) & Food(y) & Food(z)) -> Capture(x,y,z))", "score": 0}
{"id": "eqasc_validation_933", "prediction": "all x y z.((Cobweb(x) & Food(y) & Food(z)) -> CapturesFood(x,y,z))", "score": 0}
{"id": "eqasc_validation_933", "prediction": "all x y z.((Cobweb(x) & Food(y) & Food(z) & UsedToCapture(x,y)) -> Captures(x,z))", "score": 0}
{"id": "eqasc_validation_933", "prediction": "all x y z.((Cobweb(x) & Food(y) & Food(z) & Captures(x,y,z)) -> UsedToCapture(x,y))", "score": 0}
{"id": "eqasc_validation_933", "prediction": "all x y z.((Cobweb(x) & Food(y) & Food(z)) -> Captures(x,y))", "score": 0}
{"id": "eqasc_validation_934", "prediction": "all x.((Spider(x) & SpiderWeb(x)) -> exists y.(Insect(y) & AvailableForFood(y)))", "score": 0}
{"id": "eqasc_validation_934", "prediction": "all x.((Spider(x) & SpiderWeb(x)) -> exists y.(Insect(y) & AvailableForFood(y))))", "score": -1}
{"id": "eqasc_validation_934", "prediction": "all x y.((Spider(x) & SpiderWeb(y)) -> (LargerNumber(x,y) & ManyInsectsAvailableForFood(x)))", "score": 0}
{"id": "eqasc_validation_934", "prediction": "all x y.((Spider(x) & SpiderWeb(y)) -> (LargerNumbers(x,y) & ManyInsectsAvailableForFood(x)))", "score": 0}
{"id": "eqasc_validation_934", "prediction": "all x.(LargerNumberOfSpidersAndSpiderWebs(x) -> exists y.(Insect(y) & AvailableForFood(y)))", "score": 0}
{"id": "eqasc_validation_934", "prediction": "all x.((Spider(x) & SpiderWeb(x)) -> (LargerNumbers(x) & ManyInsectsAvailableForFood(x)))", "score": 0}
{"id": "eqasc_validation_934", "prediction": "all x.(LargerNumbersOfSpidersAndSpiderWebs(x) -> exists y.(Insect(y) & AvailableForFood(y)))", "score": 0}
{"id": "eqasc_validation_934", "prediction": "all x.((Spider(x) & SpiderWeb(x)) -> (LargerNumber(x) & ManyInsectsAvailableForFood(x)))", "score": 0}
{"id": "eqasc_validation_934", "prediction": "all x.((Spider(x) & SpiderWeb(x)) -> ManyInsectsAvailableForFood(x))", "score": 0}
{"id": "eqasc_validation_934", "prediction": "all x y.((Spider(x) & SpiderWeb(y)) -> (LargerNumber(x,y) & ManyInsects(x)))", "score": 0}
{"id": "eqasc_validation_934", "prediction": "all x y.((Spider(x) & SpiderWeb(y)) -> exists z.(Insect(z) & AvailableForFood(z))))", "score": -1}
{"id": "eqasc_validation_934", "prediction": "all x.((Spider(x) & SpiderWeb(x)) -> exists y.(Insect(y) & AvailableForFood(y,x))))", "score": -1}
{"id": "eqasc_validation_934", "prediction": "all x y.((Spider(x) & SpiderWeb(y)) -> (LargerNumbers(x,y) & ManyInsects(x)))", "score": 0}
{"id": "eqasc_validation_934", "prediction": "all x.((Spider(x) & SpiderWeb(x)) -> (ManyInsects(x) & AvailableForFood(x)))", "score": 0}
{"id": "eqasc_validation_934", "prediction": "all x.((Spider(x) & SpiderWeb(x)) -> exists y.(Insect(y) & AvailableForFood(y,x)))", "score": 0}
{"id": "eqasc_validation_934", "prediction": "all x y.((Spider(x) & SpiderWeb(y)) -> (LargerNumber(x,y) & ManyInsects(x,y)))", "score": 0}
{"id": "eqasc_validation_935", "prediction": "all x y z.((SpiderWeb(x) & Spider(y) & Insect(z)) -> CapturesBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_935", "prediction": "all x y.((SpiderWeb(x) & Spider(y)) -> CapturesInsectsBy(x,y))", "score": 0}
{"id": "eqasc_validation_935", "prediction": "all x y z.((SpiderWeb(x) & Insect(y) & Spider(z)) -> CapturesBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_935", "prediction": "all x y.((SpiderWeb(x) & Spider(y)) -> CapturesInsects(x,y))", "score": 0}
{"id": "eqasc_validation_935", "prediction": "all x y z.((SpiderWeb(x) & Spider(y) & Insect(z)) -> UsedToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_935", "prediction": "all x y z.((SpiderWeb(x) & Insect(y) & Spider(z)) -> Captures(x,y,z))", "score": 0}
{"id": "eqasc_validation_935", "prediction": "all x y z.((SpiderWeb(x) & Insect(y) & Spider(z)) -> UsedToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_935", "prediction": "all x y z.((SpiderWeb(x) & Spider(y) & Insect(z)) -> Captures(x,y,z))", "score": 0}
{"id": "eqasc_validation_935", "prediction": "all x y z.((SpiderWeb(x) & Spider(y) & Insect(z) & Captures(x,y,z)) -> UsedBy(x,y))", "score": 0}
{"id": "eqasc_validation_935", "prediction": "all x y.((SpiderWeb(x) & Spider(y)) -> UsedToCaptureInsectsBy(x,y))", "score": 0}
{"id": "eqasc_validation_935", "prediction": "all x y z.((SpiderWeb(x) & Spider(y) & Insect(z)) -> UsedToCaptureBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_935", "prediction": "all x y.((SpiderWeb(x) & Spider(y)) -> CapturesInsectsBySpiders(x,y))", "score": 0}
{"id": "eqasc_validation_935", "prediction": "all x y.((SpiderWeb(x) & Spider(y)) -> UsedToCaptureInsects(x,y))", "score": 0}
{"id": "eqasc_validation_935", "prediction": "all x y z w.((SpiderWeb(x) & Spider(y) & Insect(z) & Spider(w)) -> CapturesBy(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_935", "prediction": "all x y z.((SpiderWeb(x) & Spider(y) & Insect(z) & UsedToCapture(x,y,z)) -> UsedBy(x,y))", "score": 0}
{"id": "eqasc_validation_935", "prediction": "all x y z.((SpiderWeb(x) & Spider(y) & Insect(z) & Captures(x,y,z)) -> UsedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_936", "prediction": "all x.(Spider(x) -> Arachnid(x))", "score": 0}
{"id": "eqasc_validation_936", "prediction": "all x.(Spider(x) -> (LargestGroupOfArachnids(x) & Arachnid(x)))", "score": 0}
{"id": "eqasc_validation_936", "prediction": "all x y.((Spider(x) & Arachnid(y)) -> LargestGroup(x,y))", "score": 0}
{"id": "eqasc_validation_936", "prediction": "all x.(Spider(x) -> (LargestGroupOfArachnids(x)))", "score": 0}
{"id": "eqasc_validation_936", "prediction": "all x.(Spider(x) -> LargestGroupOfArachnids(x))", "score": 0}
{"id": "eqasc_validation_936", "prediction": "all x.(Spider(x) -> (Arachnid(x) & LargestGroup(x)))", "score": 0}
{"id": "eqasc_validation_936", "prediction": "all x.(Arachnid(x) -> (LargestGroup(x) & Arachnid(x)))", "score": 0}
{"id": "eqasc_validation_936", "prediction": "all x.(Spider(x) -> (LargestArachnidGroup(x) & Arachnid(x)))", "score": 0}
{"id": "eqasc_validation_936", "prediction": "all x y.((Arachnid(x) & Spider(y)) -> LargestGroup(x,y))", "score": 0}
{"id": "eqasc_validation_936", "prediction": "all x.(Spider(x) -> (LargestArachnidGroup(x)))", "score": 0}
{"id": "eqasc_validation_936", "prediction": "all x.(Spider(x) -> LargestArachnidGroup(x))", "score": 0}
{"id": "eqasc_validation_936", "prediction": "all x.(Spider(x) -> (LargestArachnid(x) & Arachnid(x)))", "score": 0}
{"id": "eqasc_validation_936", "prediction": "all x.(Spider(x) -> (LargestGroupOfArachnids(x) & Arachnids(x)))", "score": 0}
{"id": "eqasc_validation_936", "prediction": "all x.(Spider(x) -> (LargestGroupOfArachnids(x) & Arachnid(y)))", "score": 0}
{"id": "eqasc_validation_936", "prediction": "all x.((Spider(x) & Arachnid(x)) -> LargestGroup(x))", "score": 0}
{"id": "eqasc_validation_937", "prediction": "exists x.(Arachnid(x) & CapturesFoodWithWeb(x))", "score": 0}
{"id": "eqasc_validation_937", "prediction": "exists x.(Arachnid(x) & CapturesFood(x) & HasWeb(x))", "score": 0}
{"id": "eqasc_validation_937", "prediction": "exists x.(Arachnid(x) & CapturesFood(x) & UsesWeb(x))", "score": 0}
{"id": "eqasc_validation_937", "prediction": "exists x.(Arachnid(x) & CapturesFood(x) & WithWeb(x))", "score": 0}
{"id": "eqasc_validation_937", "prediction": "exists x.(Arachnid(x) & CapturesFood(x) & Web(x))", "score": 0}
{"id": "eqasc_validation_937", "prediction": "exists x.(Arachnid(x) & CapturesFood(x))", "score": 0}
{"id": "eqasc_validation_937", "prediction": "exists x y.(Arachnid(x) & Food(y) & CapturesWithWeb(x,y))", "score": 0}
{"id": "eqasc_validation_937", "prediction": "exists x.(Arachnid(x) & CapturesFood(x,web))", "score": 0}
{"id": "eqasc_validation_937", "prediction": "exists x y.(Arachnid(x) & Food(y) & Captures(x,y))", "score": 0}
{"id": "eqasc_validation_937", "prediction": "exists x.(Arachnid(x) & CapturesFood(x) & UsingWeb(x))", "score": 0}
{"id": "eqasc_validation_937", "prediction": "exists x.(Arachnid(x) & CapturesFood(x) & UtilizesWeb(x))", "score": 0}
{"id": "eqasc_validation_937", "prediction": "exists x.(Arachnid(x) & CapturesFood(x) & ThroughWeb(x))", "score": 0}
{"id": "eqasc_validation_937", "prediction": "exists x y.(Arachnid(x) & Food(y) & Captures(x,y) & Web(x))", "score": 0}
{"id": "eqasc_validation_937", "prediction": "exists x y.(Arachnid(x) & Food(y) & Captures(x,y) & WithWeb(x))", "score": 0}
{"id": "eqasc_validation_937", "prediction": "exists x y.(Arachnid(x) & Food(y) & CapturesWithWeb(x))", "score": 0}
{"id": "eqasc_validation_937", "prediction": "exists x.(Arachnid(x) & CapturesFood(x,Web))", "score": 0}
{"id": "eqasc_validation_938", "prediction": "all x.(Spider(x) -> (BuildsWebsFromSilk(x) & ProducedInAbdomen(x)))", "score": 0}
{"id": "eqasc_validation_938", "prediction": "all x y z.((Spider(x) & Silk(y) & Abdomen(z)) -> BuildsWebsFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_938", "prediction": "all x y.((Spider(x) & Silk(y) & ProducedInAbdomen(x,y)) -> BuildsWebsFrom(x,y))", "score": 0}
{"id": "eqasc_validation_938", "prediction": "all x y.((Spider(x) & Silk(y)) -> BuildsWebsFrom(x,y))", "score": 0}
{"id": "eqasc_validation_938", "prediction": "all x y z.((Spider(x) & Silk(y) & Abdomen(z)) -> BuildsWebFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_938", "prediction": "all x y.((Spider(x) & SilkProducedInAbdomen(y)) -> BuildsWebsFrom(x,y))", "score": 0}
{"id": "eqasc_validation_938", "prediction": "all x y z.((Spider(x) & Silk(y) & Abdomen(z)) -> BuildsWeb(x,y,z))", "score": 0}
{"id": "eqasc_validation_938", "prediction": "all x y.((Spider(x) & Silk(y) & ProducedInAbdomen(x,y)) -> BuildsWebs(x,y))", "score": 0}
{"id": "eqasc_validation_938", "prediction": "all x y.((Spider(x) & Silk(y) & ProducedInAbdomen(x,y)) -> BuildsWeb(x,y))", "score": 0}
{"id": "eqasc_validation_938", "prediction": "all x.(Spider(x) -> BuildsWebsFromSilk(x))", "score": 0}
{"id": "eqasc_validation_938", "prediction": "all x y.((Spider(x) & Silk(y) & ProducedInAbdomen(x,y)) -> BuildsWebFrom(x,y))", "score": 0}
{"id": "eqasc_validation_938", "prediction": "all x.(Spider(x) -> (BuildsWebsFromSilk(x) & ProducesInAbdomen(x)))", "score": 0}
{"id": "eqasc_validation_938", "prediction": "all x y z.((Spider(x) & Silk(y) & Abdomen(z)) -> (BuildsWebsFrom(x,y,z) & ProducedIn(x,y,z)))", "score": 0}
{"id": "eqasc_validation_938", "prediction": "all x y z.((Spider(x) & Web(y) & Silk(z) & ProducedInAbdomen(x,y,z)) -> BuildsFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_938", "prediction": "all x y.((Spider(x) & Silk(y)) -> BuildsWebFrom(x,y))", "score": 0}
{"id": "eqasc_validation_939", "prediction": "all x y.((Spider(x) & Silk(y)) -> UsesToCaptureFood(x,y))", "score": 0}
{"id": "eqasc_validation_939", "prediction": "all x y z.((Spider(x) & Silk(y) & Food(z)) -> UsesToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_939", "prediction": "all x.(Spider(x) -> (UsesSilk(x) & CapturesFood(x)))", "score": 0}
{"id": "eqasc_validation_939", "prediction": "all x.(Spider(x) -> UsesSilkToCaptureFood(x))", "score": 0}
{"id": "eqasc_validation_939", "prediction": "all x y z.((Spider(x) & Silk(y) & Food(z) & Uses(x,y)) -> CapturesFood(x,z))", "score": 0}
{"id": "eqasc_validation_939", "prediction": "all x y.((Spider(x) & Silk(y)) -> CapturesFood(x,y))", "score": 0}
{"id": "eqasc_validation_939", "prediction": "all x y z.((Spider(x) & Silk(y) & Food(z)) -> UsesToCaptureFood(x,y,z))", "score": 0}
{"id": "eqasc_validation_939", "prediction": "all x y z.((Spider(x) & Silk(y) & Food(z)) -> Captures(x,y,z))", "score": 0}
{"id": "eqasc_validation_939", "prediction": "all x y z.((Spider(x) & Silk(y) & Food(z) & UsesToCapture(x,y,z)) -> UsesToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_939", "prediction": "all x y z w.((Spider(x) & Silk(y) & Food(z) & Food(w)) -> UsesToCapture(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_939", "prediction": "all x y z.((Spider(x) & Silk(y) & Food(z)) -> CapturesFood(x,y,z))", "score": 0}
{"id": "eqasc_validation_939", "prediction": "all x y z.((Spider(x) & Silk(y) & Food(z)) -> (Uses(x,y) & CapturesFood(x,z)))", "score": 0}
{"id": "eqasc_validation_939", "prediction": "all x y z.((Spider(x) & Silk(y) & Food(z) & Uses(x,y)) -> Captures(x,z))", "score": 0}
{"id": "eqasc_validation_939", "prediction": "all x y z.((Spider(x) & Silk(y) & Food(z)) -> (Uses(x,y) & Captures(x,z)))", "score": 0}
{"id": "eqasc_validation_939", "prediction": "all x y z.((Spider(x) & Silk(y) & Food(z)) -> Captures(x,z))", "score": 0}
{"id": "eqasc_validation_939", "prediction": "all x.(Spider(x) -> (UsesSilkToCaptureFood(x) & UsesSilkToCaptureFood(x)))", "score": 0}
{"id": "eqasc_validation_940", "prediction": "all x.(Protozoa(x) -> CanBeClassifiedOnMovement(x))", "score": 12}
{"id": "eqasc_validation_940", "prediction": "all x.(Protozoa(x) -> ClassifiedOnMovement(x))", "score": 12}
{"id": "eqasc_validation_940", "prediction": "all x.(Protozoa(x) -> CanBeCategorizedOnMovement(x))", "score": 12}
{"id": "eqasc_validation_940", "prediction": "all x.(Protozoa(x) -> CanBeClassifiedOnTheBaseOfMovement(x))", "score": 0}
{"id": "eqasc_validation_940", "prediction": "all x.(Protozoa(x) -> (Movement(x) & Moves(x)))", "score": 12}
{"id": "eqasc_validation_940", "prediction": "all x.(Protozoa(x) -> (Movement(x) | Movement(x)))", "score": 0}
{"id": "eqasc_validation_940", "prediction": "all x.(Protozoa(x) -> (Movement(x) & Move(x)))", "score": 0}
{"id": "eqasc_validation_940", "prediction": "all x.(Protozoa(x) -> MovesOn(x))", "score": 0}
{"id": "eqasc_validation_940", "prediction": "all x.(Protozoa(x) -> CanBeClassifiedOnBaseOnMovement(x))", "score": 0}
{"id": "eqasc_validation_940", "prediction": "all x.(Protozoa(x) -> MovesOnBasis(x))", "score": 0}
{"id": "eqasc_validation_940", "prediction": "all x.(Protozoa(x) -> Moves(x))", "score": 0}
{"id": "eqasc_validation_940", "prediction": "all x.(Protozoa(x) -> Move(x))", "score": 0}
{"id": "eqasc_validation_940", "prediction": "all x.(Protozoa(x) -> MovesOnBase(x))", "score": 0}
{"id": "eqasc_validation_940", "prediction": "all x.(Protozoa(x) -> CanBeClassifiedOnTheMovement(x))", "score": 0}
{"id": "eqasc_validation_941", "prediction": "all x y z.((Flagellate(x) & Protozoa(y) & Whip(z)) -> (Smallest(x,y) & Uses(x,z)))", "score": 0}
{"id": "eqasc_validation_941", "prediction": "all x y.((Flagellate(x) & Protozoa(y)) -> (Smallest(x,y) & UsesFlagella(x)))", "score": 0}
{"id": "eqasc_validation_941", "prediction": "all x.(Flagellate(x) -> (SmallestOfProtozoa(x) & UsesFlagella(x)))", "score": 0}
{"id": "eqasc_validation_941", "prediction": "all x.(Flagellates(x) -> (SmallestOfProtozoa(x) & UsesFlagella(x)))", "score": 0}
{"id": "eqasc_validation_941", "prediction": "all x y.((Flagellate(x) & Protozoa(y)) -> (Smallest(x,y) & UsesWhip(x,y)))", "score": 0}
{"id": "eqasc_validation_941", "prediction": "all x.(Flagellate(x) -> (SmallestOfProtozoa(x) & UsesFlagellaToMove(x)))", "score": 0}
{"id": "eqasc_validation_941", "prediction": "all x y.((Flagellate(x) & Protozoa(y)) -> (Smallest(x,y) & UsesFlagellaToMove(x)))", "score": 0}
{"id": "eqasc_validation_941", "prediction": "all x.(Flagellate(x) -> (SmallestProtozoa(x) & UsesFlagella(x)))", "score": 0}
{"id": "eqasc_validation_941", "prediction": "all x y z.((Flagellate(x) & Protozoa(y) & Whip(z)) -> (Smallest(x,y) & UsesToMove(x,z)))", "score": 0}
{"id": "eqasc_validation_941", "prediction": "all x.(Flagellates(x) -> (SmallestOfProtozoa(x) & UsesFlagellaToMove(x)))", "score": 0}
{"id": "eqasc_validation_941", "prediction": "all x y z.((Flagellate(x) & Protozoa(y) & Whip(z)) -> (Smaller(x,y) & Uses(x,z)))", "score": 0}
{"id": "eqasc_validation_941", "prediction": "all x y.((Flagellate(x) & Protozoa(y)) -> (Smallest(x,y) & UsesPipe(x,y)))", "score": 0}
{"id": "eqasc_validation_941", "prediction": "all x y.((Flagellate(x) & Protozoa(y)) -> (Smallest(x,y) & UsesSwift(x,y)))", "score": 0}
{"id": "eqasc_validation_941", "prediction": "all x.(Flagellates(x) -> (SmallestProtozoa(x) & UsesFlagella(x)))", "score": 0}
{"id": "eqasc_validation_941", "prediction": "all x y.((Flagellate(x) & Protozoa(y)) -> (Smallest(x,y) & Uses(x,y)))", "score": 0}
{"id": "eqasc_validation_942", "prediction": "all x.(Flagellate(x) -> (SmallProtozoa(x) & SmallProtozoa(x)))", "score": 0}
{"id": "eqasc_validation_942", "prediction": "all x.(Flagellates(x) -> (SmallProtozoa(x) & SmallProtozoa(x)))", "score": 0}
{"id": "eqasc_validation_942", "prediction": "all x.(Flagellate(x) -> (SmallProtozoa(x) & Small(x)))", "score": 0}
{"id": "eqasc_validation_942", "prediction": "all x.(Flagellate(x) -> (SmallProtozoa(x) & SmallProtozoa(x) & SmallProtozoa(x)))", "score": 0}
{"id": "eqasc_validation_942", "prediction": "all x.(Flagellate(x) -> (SmallProtozoa(x) & Protozoa(x)))", "score": 0}
{"id": "eqasc_validation_943", "prediction": "all x.((CottonSeedling(x) & ClassifiedInto(x,3)) -> EasyOfIdentification(x))", "score": 0}
{"id": "eqasc_validation_943", "prediction": "all x.((CottonSeedling(x) & ClassifiedIntoCategories(x,3)) -> EasyOfIdentification(x))", "score": 0}
{"id": "eqasc_validation_943", "prediction": "all x.((CottonSeedling(x) & EasyIdentification(x)) -> ClassifiedIntoCategories(x,3))", "score": 0}
{"id": "eqasc_validation_943", "prediction": "all x.((CottonSeedling(x) & ClassifiedIntoFourCategories(x)) -> EasyOfIdentification(x))", "score": 0}
{"id": "eqasc_validation_943", "prediction": "all x.((CottonSeedling(x) & ClassifiedIntoThreeCategories(x)) -> EasyOfIdentification(x))", "score": 0}
{"id": "eqasc_validation_943", "prediction": "all x.((CottonSeedling(x) & EasyIdentification(x)) -> ClassifiedIntoFourCategories(x))", "score": 0}
{"id": "eqasc_validation_943", "prediction": "all x.((CottonSeedling(x) & ClassifiedIntoTwoCategories(x)) -> EasyOfIdentification(x))", "score": 0}
{"id": "eqasc_validation_943", "prediction": "all x.((CottonSeedling(x) & EasyIdentification(x)) -> ClassifiedInFourCategories(x))", "score": 0}
{"id": "eqasc_validation_943", "prediction": "all x.((CottonSeedling(x) & EasyIdentification(x)) -> ClassifiedInto(x,3))", "score": 0}
{"id": "eqasc_validation_943", "prediction": "all x.((CottonSeedling(x) & ClassifiedIntoCategory(x,3)) -> EasyOfIdentification(x))", "score": 0}
{"id": "eqasc_validation_943", "prediction": "all x.((CottonSeedling(x) & ClassifiedInto(x,3)) -> EfficientIdentification(x))", "score": 0}
{"id": "eqasc_validation_943", "prediction": "all x y.((CottonSeedling(x) & Cotton(y)) -> ClassifiedInto(x,y))", "score": 0}
{"id": "eqasc_validation_943", "prediction": "all x.((CottonSeedling(x) & EasyIdentification(x)) -> ClassifiedInCategory(x,3))", "score": 0}
{"id": "eqasc_validation_943", "prediction": "all x.((CottonSeedling(x) & EasyIdentification(x)) -> ClassifiedInCategories(x,3))", "score": 0}
{"id": "eqasc_validation_943", "prediction": "all x.((CottonSeedling(x) & EasyIdentification(x)) -> ClassifiedIntoThirdCategories(x))", "score": 0}
{"id": "eqasc_validation_943", "prediction": "all x.((Seedling(x) & Cotton(x)) -> ClassifiedIntoCategories(x,3))", "score": 0}
{"id": "eqasc_validation_944", "prediction": "all x.(Protozoa(x) -> CanBeIdentifiedByMovement(x))", "score": 0}
{"id": "eqasc_validation_944", "prediction": "all x.(Protozoa(x) -> IdentifiedByMovement(x))", "score": 0}
{"id": "eqasc_validation_944", "prediction": "all x.(Protozoa(x) -> Moves(x))", "score": 0}
{"id": "eqasc_validation_944", "prediction": "all x.(Protozoa(x) -> IdentifiesByMovement(x))", "score": 0}
{"id": "eqasc_validation_944", "prediction": "all x.(Protozoa(x) -> (IdentifiedByMovement(x) | IdentifiedByMovement(x)))", "score": 0}
{"id": "eqasc_validation_944", "prediction": "all x.(Protozoa(x) -> Move(x))", "score": 0}
{"id": "eqasc_validation_944", "prediction": "all x y.((Protozoa(x) & Move(y)) -> IdentifiedBy(x,y))", "score": 0}
{"id": "eqasc_validation_944", "prediction": "all x y.((Protozoa(x) & Move(y)) -> Identifies(x,y))", "score": 0}
{"id": "eqasc_validation_944", "prediction": "all x.(Protozoa(x) -> (IdentifiedByMovement(x)))", "score": 0}
{"id": "eqasc_validation_944", "prediction": "all x.(Protozoa(x) -> (IdentifiedByMovement(x) & Moves(x)))", "score": 0}
{"id": "eqasc_validation_944", "prediction": "all x y.((Protozoa(x) & Move(y)) -> IdentifiesBy(x,y))", "score": 0}
{"id": "eqasc_validation_944", "prediction": "all x y.((Protozoa(x) & Move(y)) -> CanBeIdentifiedBy(x,y))", "score": 0}
{"id": "eqasc_validation_944", "prediction": "all x.(Protozoa(x) -> (IdentifiesByMovement(x)))", "score": 0}
{"id": "eqasc_validation_944", "prediction": "all x.(Protozoa(x) -> exists y.(Movement(y) & Moves(x,y))))", "score": -1}
{"id": "eqasc_validation_944", "prediction": "all x.(Protozoa(x) -> (IdentifiesByMovement(x) & Moves(x)))", "score": 0}
{"id": "eqasc_validation_944", "prediction": "all x.(Protozoa(x) -> (IdentifiedByMovement(x) & Move(x)))", "score": 0}
{"id": "eqasc_validation_945", "prediction": "all x y.((Cilia(x) & Protozoa(y)) -> (CoordinatedWave(x,y) & MovesInOneDirection(x,y)))", "score": 0}
{"id": "eqasc_validation_945", "prediction": "all x y z.((Cilia(x) & Protozoa(y) & CoordinatedWave(x,y) & Direction(z)) -> MovesInOneDirection(x,y,z))", "score": 0}
{"id": "eqasc_validation_945", "prediction": "all x y.((Cilia(x) & Protozoa(y)) -> CoordinatedWave(x,y))", "score": 0}
{"id": "eqasc_validation_945", "prediction": "all x y.((Cilia(x) & Protozoa(y)) -> (CoordinatedWave(x) & MovesInOneDirection(x,y)))", "score": 0}
{"id": "eqasc_validation_945", "prediction": "all x y.((Cilia(x) & Protozoa(y)) -> CoordinatedWaveToMove(x,y))", "score": 0}
{"id": "eqasc_validation_945", "prediction": "all x y.((Cilia(x) & Protozoa(y)) -> CoordinatedWaveToMoveInOneDirection(x,y))", "score": 0}
{"id": "eqasc_validation_945", "prediction": "all x y z.((Cilia(x) & Protozoa(y) & CoordinatedWave(x,y)) -> MovesInOneDirection(x,z))", "score": 0}
{"id": "eqasc_validation_945", "prediction": "all x y.((Cilia(x) & Protozoa(y) & CoordinatedWave(x,y)) -> MovesInOneDirection(x,y))", "score": 0}
{"id": "eqasc_validation_945", "prediction": "all x y z.((Cilia(x) & Protozoa(y) & CoordinatedWave(x)) -> MovesInOneDirection(x,y,z))", "score": 0}
{"id": "eqasc_validation_945", "prediction": "all x y z.((Cilia(x) & Protozoa(y) & CoordinatedWave(x,y)) -> MovesInOneDirection(x,y))", "score": 0}
{"id": "eqasc_validation_945", "prediction": "all x y z.((Cilia(x) & Protozoa(y) & CoordinatedWave(x,y) & Direction(z)) -> MovesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_945", "prediction": "all x y z.((Cilia(x) & Protozoa(y) & CoordinatedWave(x,y) & Direction(z)) -> MoveInOneDirection(x,y,z))", "score": 0}
{"id": "eqasc_validation_945", "prediction": "all x y.((Cilia(x) & Protozoa(y)) -> (CoordinatedWave(x,y) & MoveInOneDirection(x,y)))", "score": 0}
{"id": "eqasc_validation_945", "prediction": "all x y.((Cilia(x) & Protozoa(y)) -> (CoordinatedWave(x,y) & MovedInOneDirection(x,y)))", "score": 0}
{"id": "eqasc_validation_945", "prediction": "all x.((Cilia(x) & CoordinatedWave(x)) -> MovesProtozoaInOneDirection(x))", "score": 0}
{"id": "eqasc_validation_945", "prediction": "all x y.((Cilia(x) & Protozoa(y)) -> (CoordinatedWave(x,y) & MovesInOneDirection(x)))", "score": 0}
{"id": "eqasc_validation_946", "prediction": "all x y.((CiliaWave(x) & CiliaWave(y)) -> Moves(x,y))", "score": 0}
{"id": "eqasc_validation_946", "prediction": "all x.(CiliaWave(x) -> Move(x))", "score": 0}
{"id": "eqasc_validation_946", "prediction": "all x y.((CiliaWave(x) & CiliaWave(y)) -> Move(x,y))", "score": 0}
{"id": "eqasc_validation_946", "prediction": "all x.(CiliaWave(x) -> Moves(x))", "score": 0}
{"id": "eqasc_validation_946", "prediction": "all x y z.((CiliaWave(x) & CiliaWave(y) & CiliaWave(z)) -> Moves(x,y,z))", "score": 0}
{"id": "eqasc_validation_946", "prediction": "all x.(CiliaWaveToMove(x) -> CiliaWaveToMove(x))", "score": 0}
{"id": "eqasc_validation_946", "prediction": "all x y z.((CiliaWave(x) & CiliaWave(y) & CiliaWave(z)) -> Move(x,y,z))", "score": 0}
{"id": "eqasc_validation_946", "prediction": "all x y z.((Cilia Wave(x) & CiliaWave(y) & CiliaWave(z)) -> Moves(x,y,z))", "score": -1}
{"id": "eqasc_validation_946", "prediction": "all x y.((CiliaWave(x) & CiliaWave(y)) -> MoveTo(x,y))", "score": 0}
{"id": "eqasc_validation_946", "prediction": "all x y z.((Cilia Wave(x) & CiliaWave(y) & CiliaWave(z)) -> Move(x,y,z))", "score": -1}
{"id": "eqasc_validation_946", "prediction": "all x y.((Cilia Wave(x) & CiliaWave(y)) -> Moves(x,y))", "score": -1}
{"id": "eqasc_validation_946", "prediction": "all x y.((CiliaWave(x) & CilinaWave(y)) -> Moves(x,y))", "score": 0}
{"id": "eqasc_validation_946", "prediction": "all x y.((CiliaWave(x) & Cilia(y)) -> Moves(x,y))", "score": 0}
{"id": "eqasc_validation_946", "prediction": "all x y.((Cilia Wave(x) & CiliaWave(y)) -> Move(x,y))", "score": -1}
{"id": "eqasc_validation_946", "prediction": "all x y.((CiliaWave(x) & CilinaWave(y)) -> Move(x,y))", "score": 0}
{"id": "eqasc_validation_946", "prediction": "all x y z.((Cilia(x) & Wave(y) & Cilia(z)) -> Moves(x,y,z))", "score": 0}
{"id": "eqasc_validation_947", "prediction": "all x.(Paramecium(x) -> (Protozoa(x) & SingleLeavedAnimal(x)))", "score": 4}
{"id": "eqasc_validation_947", "prediction": "all x.(Paramecium(x) -> (Protozoa(x) & SingleLeaved(x)))", "score": 4}
{"id": "eqasc_validation_947", "prediction": "all x.(Paramecium(x) -> (Protozoa(x) & SingleLeachedAnimal(x)))", "score": 4}
{"id": "eqasc_validation_947", "prediction": "all x.(Paramecium(x) -> (Protozoa(x) & SingleLeadedAnimal(x)))", "score": 4}
{"id": "eqasc_validation_947", "prediction": "all x.(Paramecium(x) -> (Protozoa(x) & SingleLeached(x)))", "score": 4}
{"id": "eqasc_validation_947", "prediction": "all x.(Paramecium(x) -> (Protozoa(x) & SingleLectured(x)))", "score": 4}
{"id": "eqasc_validation_947", "prediction": "all x.(Paramecium(x) -> (Protozoa(x) & SingleLeaded(x)))", "score": 4}
{"id": "eqasc_validation_947", "prediction": "all x.(Paramecium(x) -> (Protozoa(x) & SingleLeasedAnimal(x)))", "score": 4}
{"id": "eqasc_validation_947", "prediction": "all x.(Paramecium(x) -> (Protozoa(x) & SingleLeapedAnimal(x)))", "score": 4}
{"id": "eqasc_validation_947", "prediction": "all x.(Paramecium(x) -> (Protozoa(x) & SingleLeaped(x)))", "score": 4}
{"id": "eqasc_validation_947", "prediction": "all x.(Paramecium(x) -> (Protozoa(x) & SingleLeased(x)))", "score": 4}
{"id": "eqasc_validation_947", "prediction": "all x.(Paramecium(x) -> (Protozoa(x) & SingleLeathered(x)))", "score": 4}
{"id": "eqasc_validation_948", "prediction": "all x.(Paramecium(x) -> CanBeClassifiedOnMovement(x))", "score": 12}
{"id": "eqasc_validation_948", "prediction": "all x.(Paramecium(x) -> (MovesOnMovement(x) & MovesOnMovement(x)))", "score": 0}
{"id": "eqasc_validation_948", "prediction": "all x.(Paramecium(x) -> ClassifiedOnMovement(x))", "score": 12}
{"id": "eqasc_validation_948", "prediction": "all x y.((Paramecium(x) & Move(y)) -> CanBeClassifiedOnMovement(x,y))", "score": 0}
{"id": "eqasc_validation_948", "prediction": "all x y.((Paramecium(x) & Movement(y)) -> CanBeClassifiedOn(x,y))", "score": 0}
{"id": "eqasc_validation_948", "prediction": "all x.(Paramecium(x) -> MovesOnMovement(x))", "score": 0}
{"id": "eqasc_validation_948", "prediction": "all x y.((Paramecium(x) & Move(y)) -> ClassifiedOnMovement(x,y))", "score": 0}
{"id": "eqasc_validation_948", "prediction": "all x y.((Paramecium(x) & Movement(y)) -> ClassifiedOn(x,y))", "score": 0}
{"id": "eqasc_validation_948", "prediction": "all x y.((Paramecium(x) & Move(y)) -> CanBeClassifiedOn(x,y))", "score": 0}
{"id": "eqasc_validation_948", "prediction": "all x.(Paramecium(x) -> (Movement(x) & Moves(x)))", "score": 12}
{"id": "eqasc_validation_948", "prediction": "all x.(Paramecium(x) -> (Movement(x) & Moves(x) & ClassifiedOnMovement(x)))", "score": 0}
{"id": "eqasc_validation_948", "prediction": "all x.(Paramecium(x) -> CanBeCategorizedOnMovement(x))", "score": 12}
{"id": "eqasc_validation_948", "prediction": "all x.(Paramecium(x) -> (MovesOnMovement(x) & ClassifiesOnMovement(x)))", "score": 0}
{"id": "eqasc_validation_948", "prediction": "all x y.((Paramecium(x) & Move(y)) -> ClassifiedOn(x,y))", "score": 0}
{"id": "eqasc_validation_948", "prediction": "all x.(Paramecium(x) -> (Movement(x) & Moves(x) & ClassifiedOn(x)))", "score": 0}
{"id": "eqasc_validation_949", "prediction": "all x.((Animal(x) & SingleLeaved(x)) -> CanBeClassifiedOnBaseOnMovement(x))", "score": 0}
{"id": "eqasc_validation_949", "prediction": "all x.(SingleLeavedAnimal(x) -> CanBeClassifiedOnBaseOnMovement(x))", "score": 0}
{"id": "eqasc_validation_949", "prediction": "all x.((Animal(x) & SingleLeaved(x)) -> ClassifiedOnMovement(x))", "score": 0}
{"id": "eqasc_validation_949", "prediction": "all x.(SingleLeavedAnimal(x) -> ClassifiedOnMovement(x))", "score": 0}
{"id": "eqasc_validation_949", "prediction": "all x.(SingleLeaved(x) -> CanBeClassifiedOnBaseOnMovement(x))", "score": 0}
{"id": "eqasc_validation_949", "prediction": "all x.(SingleLeavedAnimal(x) -> (ClassifiedOnMovement(x) & ClassifiedOnMovement(x)))", "score": 0}
{"id": "eqasc_validation_949", "prediction": "all x.((Animal(x) & SingleLayed(x)) -> CanBeClassifiedOnBaseOnMovement(x))", "score": 0}
{"id": "eqasc_validation_949", "prediction": "all x.((Animal(x) & SingleLeaved(x)) -> CanBeClassifiedOnMovement(x))", "score": 0}
{"id": "eqasc_validation_949", "prediction": "all x.(SingleLeavedAnimal(x) -> CanBeClassifiedOnMovement(x))", "score": 0}
{"id": "eqasc_validation_949", "prediction": "all x.((Animal(x) & SingleLeaved(x)) -> ClassifiedOnBaseOnMovement(x))", "score": 0}
{"id": "eqasc_validation_949", "prediction": "all x y.((Animal(x) & SingleLeaved(x)) -> CanBeClassifiedOnBaseOnMovement(x,y))", "score": 0}
{"id": "eqasc_validation_949", "prediction": "all x.(SingleLeavedAnimal(x) -> CanBeClassifiedOnTheBaseOfMovement(x))", "score": 0}
{"id": "eqasc_validation_949", "prediction": "all x.((Animal(x) & SingleLeaved(x)) -> CanBeClassifiedOnTheBaseOfMovement(x))", "score": 0}
{"id": "eqasc_validation_949", "prediction": "all x.((Animal(x) & SingleLayed(x)) -> ClassifiedOnMovement(x))", "score": 0}
{"id": "eqasc_validation_949", "prediction": "all x.((Animal(x) & SingleLeaved(x)) -> CanBeClassifiedOnBaseOfMovement(x))", "score": 0}
{"id": "eqasc_validation_949", "prediction": "all x.((Animal(x) & SingleLaid(x)) -> CanBeClassifiedOnBaseOnMovement(x))", "score": 0}
{"id": "eqasc_validation_950", "prediction": "all x.(CryptosporidiumParvum(x) -> HardestProtozoaToKill(x))", "score": 0}
{"id": "eqasc_validation_950", "prediction": "all x.((Protozoa(x) & CryptosporidiumParvum(x)) -> HardestToKill(x))", "score": 0}
{"id": "eqasc_validation_950", "prediction": "all x.((CryptosporidiumParvum(x) & HardestProtozoaToKill(x)) -> CryptosporidiumParvum(x))", "score": 0}
{"id": "eqasc_validation_950", "prediction": "all x y.((CryptosporidiumParvum(x) & Protozoa(y)) -> HardestToKill(x,y))", "score": 0}
{"id": "eqasc_validation_950", "prediction": "all x y.((Protozoa(x) & CryptosporidiumParvum(y)) -> HardestToKill(x,y))", "score": 0}
{"id": "eqasc_validation_950", "prediction": "all x.((CryptosporidiumParvum(x) & HardestToKill(x)) -> Protozoa(x))", "score": 0}
{"id": "eqasc_validation_950", "prediction": "all x.((Protozoa(x) & CryptosporidiumParvum(x)) -> HardestToTreat(x))", "score": 0}
{"id": "eqasc_validation_950", "prediction": "all x.((Protozoa(x) & CryptosporidiumParvum)) -> HardestToKill(x))", "score": -1}
{"id": "eqasc_validation_950", "prediction": "all x.(CryptosporidiumParvum(x) -> HardestToKillProtozoa(x))", "score": 0}
{"id": "eqasc_validation_950", "prediction": "all x.((Protozoa(x) & CryptosporidiumParvum(x)) -> HardestToTreatToKill(x))", "score": 0}
{"id": "eqasc_validation_950", "prediction": "all x y.((Protozoa(x) & CryptosporidiumParvum(x)) -> HardestToKill(x,y))", "score": 0}
{"id": "eqasc_validation_950", "prediction": "All x.(CryptosporidiumParvum(x) -> HardestProtozoaToKill(x))", "score": -1}
{"id": "eqasc_validation_950", "prediction": "all x.(CrystallidiumParvum(x) -> HardestProtozoaToKill(x))", "score": 0}
{"id": "eqasc_validation_950", "prediction": "all x.(CryptosporidiumParvum(x) -> TheHarstProtozoaToKill(x))", "score": 0}
{"id": "eqasc_validation_951", "prediction": "all x.((Animal(x) & Cyptosporidium(x)) -> ClassifiedOnMovement(x))", "score": 0}
{"id": "eqasc_validation_951", "prediction": "all x.(Cyptosporidium(x) -> ClassifiedOnMovement(x))", "score": 0}
{"id": "eqasc_validation_951", "prediction": "all x y.((Animal(x) & Cyptosporidium(y)) -> ClassifiedOnMovement(x,y))", "score": 0}
{"id": "eqasc_validation_951", "prediction": "all x.((Animal(x) & Cyptosporidium(x)) -> ClassifiedOnHowToMove(x))", "score": 0}
{"id": "eqasc_validation_951", "prediction": "all x.((Animal(x) & Cyptosporidium(x)) -> OftenClassifiedOnMovement(x))", "score": 0}
{"id": "eqasc_validation_951", "prediction": "all x y.((Animal(x) & Cyptosporidium(y)) -> (ClassifiedOnMovement(x,y) | ClassifiedOnMovement(x,y)))", "score": 0}
{"id": "eqasc_validation_951", "prediction": "all x.(Cyptosporidium(x) -> (ClassifiedOnMovement(x) | ClassifiedOnMovement(x)))", "score": 0}
{"id": "eqasc_validation_951", "prediction": "all x.((Animal(x) & Cyptosporidium(x)) -> ClassifiedOnHowMovement(x))", "score": 0}
{"id": "eqasc_validation_951", "prediction": "all x y.((Animal(x) & Cyptosporidium(y)) -> ClassifiedOnHowToMove(x,y))", "score": 0}
{"id": "eqasc_validation_951", "prediction": "all x.((Animal(x) & Cyptosporidium(x)) -> ClassifiedOnMovements(x))", "score": 0}
{"id": "eqasc_validation_951", "prediction": "all x y z.((Animal(x) & Cyptosporidium(y) & Move(z)) -> ClassifiedOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_951", "prediction": "all x y.((Animal(x) & Cyptosporidium(y)) -> OftenClassifiedOnMovement(x,y))", "score": 0}
{"id": "eqasc_validation_951", "prediction": "all x.((Animal(x) & Cyptosporidium(x)) -> ClassifiedOnHowMoves(x))", "score": 0}
{"id": "eqasc_validation_951", "prediction": "all x y.((Animal(x) & Cyptosporidium(x)) -> ClassifiedOnMovement(x,y))", "score": 0}
{"id": "eqasc_validation_951", "prediction": "all x.((Animal(x) & Cyptosporidium(x)) -> ClassifiedOnMovement(x,y))", "score": 0}
{"id": "eqasc_validation_952", "prediction": "all x.(Ciliate(x) -> CiliatedProtozoa(x))", "score": 0}
{"id": "eqasc_validation_952", "prediction": "all x.(Ciliates(x) -> CiliatedProtozoa(x))", "score": 0}
{"id": "eqasc_validation_952", "prediction": "all x.(Ciliate(x) -> CilinatedProtozoa(x))", "score": 0}
{"id": "eqasc_validation_952", "prediction": "all x.(Ciliate(x) -> CiliatatedProtozoa(x))", "score": 0}
{"id": "eqasc_validation_952", "prediction": "all x.(Ciliate(x) -> CilicatedProtozoa(x))", "score": 0}
{"id": "eqasc_validation_952", "prediction": "all x.(Ciliate(x) -> CiliatizedProtozoa(x))", "score": 0}
{"id": "eqasc_validation_952", "prediction": "all x.(Ciliates(x) -> CilinatedProtozoa(x))", "score": 0}
{"id": "eqasc_validation_952", "prediction": "all x.(Ciliate(x) -> CilianatedProtozoa(x))", "score": 0}
{"id": "eqasc_validation_952", "prediction": "all x.(Ciliat(x) -> CiliatedProtozoa(x))", "score": 0}
{"id": "eqasc_validation_952", "prediction": "all x.(Ciliate(x) -> CilinidatedProtozoa(x))", "score": 0}
{"id": "eqasc_validation_952", "prediction": "all x.(Ciliates(x) -> CilicatedProtozoa(x))", "score": 0}
{"id": "eqasc_validation_952", "prediction": "all x.(Ciliate(x) -> Ciliated(x))", "score": 0}
{"id": "eqasc_validation_953", "prediction": "all x.(Ciliate(x) -> CanBeClassifiedOnMovement(x))", "score": 0}
{"id": "eqasc_validation_953", "prediction": "all x.(Ciliate(x) -> ClassifiedOnMovement(x))", "score": 0}
{"id": "eqasc_validation_953", "prediction": "all x.(Ciliat(x) -> CanBeClassifiedOnMovement(x))", "score": 0}
{"id": "eqasc_validation_953", "prediction": "all x.(Ciliates(x) -> CanBeClassifiedOnMovement(x))", "score": 0}
{"id": "eqasc_validation_953", "prediction": "all x.(Ciliates(x) -> ClassifiedOnMovement(x))", "score": 0}
{"id": "eqasc_validation_953", "prediction": "all x.(Ciliate(x) -> (Movement(x) & Moves(x)))", "score": 0}
{"id": "eqasc_validation_953", "prediction": "all x.(Ciliat(x) -> ClassifiedOnMovement(x))", "score": 0}
{"id": "eqasc_validation_953", "prediction": "all x.(Ciliate(x) -> (Movement(x) & Move(x)))", "score": 0}
{"id": "eqasc_validation_953", "prediction": "all x.(Ciliate(x) -> (Movement(x) | Movement(x)))", "score": 0}
{"id": "eqasc_validation_953", "prediction": "all x y.((Ciliate(x) & Move(y)) -> CanBeClassified(x,y))", "score": 0}
{"id": "eqasc_validation_953", "prediction": "all x.(Ciliate(x) -> MovesOnBasis(x))", "score": 0}
{"id": "eqasc_validation_953", "prediction": "all x y.((Ciliate(x) & Move(y)) -> ClassifiedOn(x,y))", "score": 0}
{"id": "eqasc_validation_953", "prediction": "all x.(Ciliate(x) -> CanBeClassifiedOnBaseOnMovement(x))", "score": 0}
{"id": "eqasc_validation_953", "prediction": "all x.(Ciliate(x) -> Moves(x))", "score": 0}
{"id": "eqasc_validation_954", "prediction": "all x.(Chromoplast(x) -> (MakesPigments(x) & StoresPigments(x)))", "score": 0}
{"id": "eqasc_validation_954", "prediction": "all x.(Chromoplast(x) -> (Makes(x,Pigments) & Stores(x,Pigments)))", "score": 0}
{"id": "eqasc_validation_954", "prediction": "all x y.((Chromoplast(x) & Pigment(y)) -> (Makes(x,y) & Stores(x,y)))", "score": 0}
{"id": "eqasc_validation_954", "prediction": "all x.(Chromoplast(x) -> MakesAndStoresPigments(x))", "score": 0}
{"id": "eqasc_validation_954", "prediction": "all x.(Chromoplast(x) -> (Makes(x,pigments) & Stores(x,pigments)))", "score": 0}
{"id": "eqasc_validation_954", "prediction": "all x y.((Chromoplast(x) & Pigment(y)) -> MakesAndStores(x,y))", "score": 0}
{"id": "eqasc_validation_954", "prediction": "all x.(Chromoplast(x) -> exists y.(Pigment(y) & Makes(x,y)) & exists z.(Pigment(z) & Stores(x,z))))", "score": -1}
{"id": "eqasc_validation_954", "prediction": "all x y z.((Chromoplast(x) & Pigment(y) & Pigment(z)) -> (Makes(x,y) & Stores(x,z)))", "score": 0}
{"id": "eqasc_validation_954", "prediction": "all x.(Chromoplast(x) -> (MadePigments(x) & StorePigments(x)))", "score": 0}
{"id": "eqasc_validation_954", "prediction": "all x.(Chromoplast(x) -> exists y.(Pigment(y) & Make(x,y)) & exists z.(Pigment(z) & Make(x,z)))))", "score": -1}
{"id": "eqasc_validation_954", "prediction": "all x.(Chromoplast(x) -> exists y.(Pigment(y) & Makes(x,y)) & exists z.(Pigment(z) & Makes(x,z))))", "score": -1}
{"id": "eqasc_validation_954", "prediction": "all x.(Chromoplast(x) -> exists y.(Pigment(y) & Makes(x,y)) & Stores(x,y)))", "score": -1}
{"id": "eqasc_validation_954", "prediction": "all x.(Chromoplast(x) -> (Make(x,Pigments) & Store(x,Pigments)))", "score": 0}
{"id": "eqasc_validation_954", "prediction": "all x.(Chromoplast(x) -> (MakePigments(x) & StorePigments(x)))", "score": 0}
{"id": "eqasc_validation_954", "prediction": "all x.(Chromoplast(x) -> (Makes(x,pigment) & Stores(x,pigment)))", "score": 0}
{"id": "eqasc_validation_954", "prediction": "all x.(Chromoplast(x) -> exists y.(Pigment(y) & Makes(x,y)) & exists z.(Pigment(z) & Makes(x,z)))))", "score": -1}
{"id": "eqasc_validation_955", "prediction": "all x.(Chromoplast(x) -> (ContainsRedOrYellowXanthophyllPigments(x) & InLargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_955", "prediction": "all x.(Chromoplast(x) -> (ContainsRedOrYellowXanthophyllPigments(x) & LargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_955", "prediction": "all x.(Chromoplast(x) -> (ContainsRedOrYellowXanthophyll(x) & InLargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_955", "prediction": "all x.(Chromoplast(x) -> (ContainsRedOrYellowXanthophyll(x) & LargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_955", "prediction": "all x.(Chromoplast(x) -> (ContainsRedXanthophyll(x) | ContainsYellowXanthophyll(x)))", "score": 0}
{"id": "eqasc_validation_955", "prediction": "all x.(Chromoplast(x) -> (ContainsRedXanthophyllPigments(x) | ContainsYellowXanthophyllPigments(x)))", "score": 0}
{"id": "eqasc_validation_955", "prediction": "all x.(Chromoplast(x) -> (ContainsRedOrYellowxanthophyllPigments(x) & InLargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_955", "prediction": "all x.(Chromoplast(x) -> (ContainsRedOrYellowxanthophyllPigments(x) & LargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_955", "prediction": "all x.(Chromoplast(x) -> (ContainsRed(x) | ContainsYellow(x)) & LargeAmountsOfXanthophyll(x)))", "score": -1}
{"id": "eqasc_validation_955", "prediction": "all x.(Chromoplast(x) -> (ContainsRoseOrYellowXanthophyllPigments(x) & InLargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_955", "prediction": "all x.(Chromoplast(x) -> (ContainsRedOrYellowXanthophyllPigmentsInLargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_955", "prediction": "all x.(Chromoplast(x) -> (ContainsRoseOrYellowXanthophyllPigments(x) & LargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_955", "prediction": "all x.(Chromoplast(x) -> (ContainsRed(x) | ContainsYellow(x)) & InLargeAmounts(x)))", "score": -1}
{"id": "eqasc_validation_955", "prediction": "all x.(Chromoplast(x) -> (ContainsRed(x) | ContainsYellow(x)) & LargeAmountsOfXanthophyllPigments(x)))", "score": -1}
{"id": "eqasc_validation_955", "prediction": "all x.(Chromoplast(x) -> ContainsRedOrYellowXanthophyllPigments(x))", "score": 0}
{"id": "eqasc_validation_955", "prediction": "all x.(Chromoplast(x) -> (ContainsRedXanthophyll(x) | ContainsYellowXanthophyll(x)) & InLargeAmounts(x)))", "score": -1}
{"id": "eqasc_validation_956", "prediction": "all x.(Chromoplast(x) -> (MakesAndStoresRedOrYellowColors(x) & InLargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_956", "prediction": "all x.(Chromoplast(x) -> (MakesRedOrYellowColors(x) & StoresRedOrYellowColors(x) & InLargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_956", "prediction": "all x.(Chromoplast(x) -> (MakesRedOrYellowColors(x) & StoresRedOrYellowColors(x) & LargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_956", "prediction": "all x.(Chromoplast(x) -> (MakesAndStoresRedOrYellowColorsInLargeAmounts(x) & InLargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_956", "prediction": "all x.(Chromoplast(x) -> (MakesAndStoresRedOrYellowColors(x) & LargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_956", "prediction": "all x y.((Chromoplast(x) & (RedColor(y) | YellowColor(y))) -> MakesAndStores(x,y))", "score": 0}
{"id": "eqasc_validation_956", "prediction": "all x.(Chromoplast(x) -> (MakesAndStoresRedOrYellowColors(x) & InLargeAmounts(x) & InLargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_956", "prediction": "all x y.((Chromoplast(x) & (RedColor(y) | YellowColor(y))) -> (Makes(x,y) & Stores(x,y)))", "score": 0}
{"id": "eqasc_validation_956", "prediction": "all x y.((Chromoplast(x) & (RedColor(y) | YellowColor(y))) -> (MakesAndStores(x,y) & InLargeAmounts(x,y)))", "score": 0}
{"id": "eqasc_validation_956", "prediction": "all x y z.((Chromoplast(x) & (RedColor(y) | YellowColor(y)) & LargeAmounts(z)) -> MakesAndStores(x,y,z))", "score": 0}
{"id": "eqasc_validation_956", "prediction": "all x y z.((Chromoplast(x) & (RedColor(y) | YellowColor(y))) -> (MakesAndStores(x,y) & InLargeAmounts(x,z)))", "score": 0}
{"id": "eqasc_validation_956", "prediction": "all x y.((Chromoplast(x) & RedOrYellowColor(y)) -> (MakesAndStores(x,y) & InLargeAmounts(x,y)))", "score": 0}
{"id": "eqasc_validation_956", "prediction": "all x.(Chromoplast(x) -> (MakesRedOrYellowColors(x) & StoresRedOrYellowColorsInLargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_956", "prediction": "all x y.((Chromoplast(x) & RedOrYellowColor(y)) -> (MakesAndStores(x,y) & InLargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_956", "prediction": "all x.(Chromoplast(x) -> (MadeAndStoresRedOrYellowColors(x) & InLargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_956", "prediction": "all x y.((Chromoplast(x) & (RedColor(y) | YellowColor(y))) -> (MakesAndStores(x,y) & InLargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_957", "prediction": "all x.(Pigment(x) -> GivesColorToPaint(x))", "score": 0}
{"id": "eqasc_validation_957", "prediction": "all x y.((Pigment(x) & Pigment(y)) -> GivesColorToPaint(x,y))", "score": 0}
{"id": "eqasc_validation_957", "prediction": "all x.(Pigments(x) -> GivesColorToPaint(x))", "score": 0}
{"id": "eqasc_validation_957", "prediction": "all x.(Pigment(x) -> GiveColorToPaint(x))", "score": 0}
{"id": "eqasc_validation_957", "prediction": "all x y.((Pigment(x) & Paint(y)) -> GivesColor(x,y))", "score": 0}
{"id": "eqasc_validation_957", "prediction": "all x y z.((Pigment(x) & Pigment(y) & Paint(z)) -> GivesColor(x,y,z))", "score": 0}
{"id": "eqasc_validation_957", "prediction": "all x y z.((Pigment(x) & Pigment(y) & Paint(z)) -> GivesColorTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_957", "prediction": "all x y.((Pigment(x) & Pigment(y)) -> GivesColorToPaint(y,x))", "score": 0}
{"id": "eqasc_validation_957", "prediction": "all x y.((Pigment(x) & Paint(y)) -> GivesColorTo(x,y))", "score": 0}
{"id": "eqasc_validation_957", "prediction": "all x y.((Pigment(x) & Pigment(y)) -> GivesColor(x,y))", "score": 0}
{"id": "eqasc_validation_957", "prediction": "all x y.((Pigment(x) & Pigment(y)) -> GiveColorToPaint(x,y))", "score": 0}
{"id": "eqasc_validation_957", "prediction": "all x y.((Pigment(x) & Pigment(y)) -> GivesColorTo(x,y))", "score": 0}
{"id": "eqasc_validation_957", "prediction": "all x.(Pigment(x) -> GivesColor(x))", "score": 0}
{"id": "eqasc_validation_957", "prediction": "all x.((Pigment(x) & Pigment(x)) -> GivesColorToPaint(x))", "score": 0}
{"id": "eqasc_validation_957", "prediction": "all x.((Pigment(x) & Pigment(y)) -> GivesColorToPaint(x,y))", "score": 0}
{"id": "eqasc_validation_957", "prediction": "all x.(Pigment(x) -> (GivesColorToPaint(x) | GivesColorToPaint(x)))", "score": 0}
{"id": "eqasc_validation_958", "prediction": "all x.(Chromoplast(x) -> GivesColorToPaint(x))", "score": 0}
{"id": "eqasc_validation_958", "prediction": "all x y.((Chromoplast(x) & Paint(y)) -> GivesColorTo(x,y))", "score": 0}
{"id": "eqasc_validation_958", "prediction": "all x y z.((Chromoplast(x) & Paint(y) & Paint(z)) -> GivesColorTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_958", "prediction": "all x y.((Chromoplast(x) & Paint(y)) -> GivesColor(x,y))", "score": 0}
{"id": "eqasc_validation_958", "prediction": "all x.(Chromoplast(x) -> GiveColorToPaint(x))", "score": 0}
{"id": "eqasc_validation_958", "prediction": "all x y z.((Chromoplast(x) & Paint(y) & Color(z)) -> GivesColorTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_958", "prediction": "all x y z.((Chromoplast(x) & Paint(y) & Color(z)) -> GivesTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_958", "prediction": "all x y.((Chromoplast(x) & Painter(y)) -> GivesColorTo(x,y))", "score": 0}
{"id": "eqasc_validation_958", "prediction": "all x y.((Chromoplast(x) & Paint(y)) -> GivesColorToPaint(x,y))", "score": 0}
{"id": "eqasc_validation_958", "prediction": "all x.(Chromoplast(x) -> (GivesColorToPaint(x) & GivesColorToPaint(x)))", "score": 0}
{"id": "eqasc_validation_958", "prediction": "all x y.((Chromoplast(x) & Paint(y) & GivesColorTo(x,y)) -> GivesColorTo(x,y))", "score": 0}
{"id": "eqasc_validation_958", "prediction": "all x y z.((Chromoplast(x) & Paint(y) & Paint(z)) -> GivesColor(x,y,z))", "score": 0}
{"id": "eqasc_validation_958", "prediction": "all x y z.((Chromoplast(x) & Paint(y) & Chromoplast(z)) -> GivesColorTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_958", "prediction": "all x y.((Chromoplast(x) & Painter(y)) -> GivesColor(x,y))", "score": 0}
{"id": "eqasc_validation_958", "prediction": "all x y.((Chromoplast(x) & Paint(y)) -> GiveColorTo(x,y))", "score": 0}
{"id": "eqasc_validation_958", "prediction": "all x y z.((Chromoplast(x) & Paint(y) & Color(z)) -> GivesColor(x,y,z))", "score": 0}
{"id": "eqasc_validation_959", "prediction": "all x.(Chromoplast(x) -> (Red(x) | Yellow(x) | Orange(x)))", "score": 0}
{"id": "eqasc_validation_959", "prediction": "all x.(Chromoplast(x) -> (Red(x) | Yellow(x) | Orange(x)) & CartenoidPigments(x)))", "score": -1}
{"id": "eqasc_validation_959", "prediction": "all x.(Chromoplast(x) -> (RedHue(x) | YellowHue(x) | OrangeHue(x)))", "score": 0}
{"id": "eqasc_validation_959", "prediction": "all x.(Chromoplast(x) -> (Red(x) | Yellow(x) | Orange(x)) & CarnenoidPigments(x)))", "score": -1}
{"id": "eqasc_validation_959", "prediction": "all x.(Chromoplast(x) -> (RedPigments(x) | YellowPigments(x) | OrangePigments(x)))", "score": 0}
{"id": "eqasc_validation_959", "prediction": "all x.(Chromoplast(x) -> ((Red(x) | Yellow(x) | Orange(x)) & CartenoidPigments(x)))", "score": 0}
{"id": "eqasc_validation_959", "prediction": "all x.(Chromoplast(x) -> (RedHaura(x) | YellowHaura(x) | OrangeHaura(x)))", "score": 0}
{"id": "eqasc_validation_959", "prediction": "all x.(Chromoplast(x) -> ((Red(x) | Yellow(x) | Orange(x)) & CarnenoidPigments(x)))", "score": 0}
{"id": "eqasc_validation_959", "prediction": "all x.(Chromoplast(x) -> (Rose(x) | Yellow(x) | Orange(x)))", "score": 0}
{"id": "eqasc_validation_959", "prediction": "all x.(Chromoplast(x) -> ((RedHue(x) | YellowHue(x) | OrangeHue(x)) & CartenoidPigments(x)))", "score": 0}
{"id": "eqasc_validation_959", "prediction": "all x.(Chromoplast(x) -> ((RedHue(x) | YellowHue(x) | OrangeHue(x)) & CarnenoidPigments(x)))", "score": 0}
{"id": "eqasc_validation_959", "prediction": "all x.(Chromoplast(x) -> ((RedHaura(x) | YellowHaura(x) | OrangeHaura(x)) & CarnenoidPigments(x)))", "score": 0}
{"id": "eqasc_validation_959", "prediction": "all x.(Chromoplast(x) -> (Red(x) | Yellow(x) | Orange(x)) & Carbonoids(x)))", "score": -1}
{"id": "eqasc_validation_959", "prediction": "all x.(Chromoplast(x) -> ((RedHaura(x) | YellowHaura(x) | OrangeHaura(x)) & CartenoidPigments(x)))", "score": 0}
{"id": "eqasc_validation_960", "prediction": "all x.(Chromoplast(x) -> ((Red(x) | Yellow(x) | Orange(x)) & MakesColors(x) & StoresColors(x)))", "score": 0}
{"id": "eqasc_validation_960", "prediction": "all x.(Chromoplast(x) -> ((Red(x) | Yellow(x) | Orange(x)) & MakeColors(x) & StoreColors(x)))", "score": 0}
{"id": "eqasc_validation_960", "prediction": "all x.(Chromoplast(x) -> ((Red(x) | Yellow(x) | Orange(x)) & MakesAndStoresColors(x)))", "score": 0}
{"id": "eqasc_validation_960", "prediction": "all x.(Chromoplast(x) -> ((Red(x) | Yellow(x) | Orange(x)) & (MakeColors(x) | StoreColors(x))))", "score": 0}
{"id": "eqasc_validation_960", "prediction": "all x.(Chromoplast(x) -> ((Red(x) | Yellow(x) | Orange(x)) & MakeColor(x) & StoreColor(x)))", "score": 0}
{"id": "eqasc_validation_960", "prediction": "all x.(Chromoplast(x) -> (Red(x) | Yellow(x) | Orange(x)) & MakesAndStoresColors(x)))", "score": -1}
{"id": "eqasc_validation_960", "prediction": "all x.(Chromoplast(x) -> (Red(x) | Yellow(x) | Orange(x)) & MakesColors(x) & StoresColors(x)))", "score": -1}
{"id": "eqasc_validation_960", "prediction": "all x.(Chromoplast(x) -> ((Red(x) | Yellow(x) | Orange(x)) & MakeAndStoreColors(x)))", "score": 0}
{"id": "eqasc_validation_960", "prediction": "all x.(Chromoplast(x) -> ((Red(x) | Yellow(x) | Orange(x)) & MakesColor(x) & StoresColor(x)))", "score": 0}
{"id": "eqasc_validation_960", "prediction": "all x.(Chromoplast(x) -> ((RedHaura(x) | YellowHaura(x) | OrangeHaura(x)) & MakeColors(x) & StoreColors(x)))", "score": 0}
{"id": "eqasc_validation_960", "prediction": "all x.(Chromoplast(x) -> ((Red(x) | Yellow(x) | Orange(x)) & MakesColors(x)) & StoresColors(x)))", "score": -1}
{"id": "eqasc_validation_960", "prediction": "all x.(Chromoplast(x) -> ((Red(x) | Yellow(x) | Orange(x)) & Make(x) & StoreColors(x)))", "score": 0}
{"id": "eqasc_validation_960", "prediction": "all x.(Chromoplast(x) -> ((Red(x) | Yellow(x) | Orange(x)) & Makes(x) & StoresColors(x)))", "score": 0}
{"id": "eqasc_validation_960", "prediction": "all x.(Chromoplast(x) -> ((RedHaura(x) | YellowHaura(x) | OrangeHaura(x)) & MakesAndStoresColors(x)))", "score": 0}
{"id": "eqasc_validation_960", "prediction": "all x.(Chromoplast(x) -> ((Red(x) | Yellow(x) | Orange(x)) & MakeAndStoreColor(x)))", "score": 0}
{"id": "eqasc_validation_960", "prediction": "all x.(Chromoplast(x) -> ((Red(x) | Yellow(x) | Orange(x)) & MakesColors(x) & StoresColors(x))))", "score": -1}
{"id": "eqasc_validation_961", "prediction": "all x.(Chromoplast(x) -> (exists y.(FlowerPetal(y) & FoundIn(x,y))) & exists z.(Fruit(z) & FoundIn(x,z)))))", "score": -1}
{"id": "eqasc_validation_961", "prediction": "all x y.((Chromoplast(x) & FlowerPetal(y) & Fruit(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_validation_961", "prediction": "all x y z.((Chromoplast(x) & FlowerPetal(y) & Fruit(z)) -> FoundIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_961", "prediction": "all x.(Chromoplast(x) -> (exists y.(FlowerPetal(y) & FoundIn(x,y)) | exists z.(Fruit(z) & FoundIn(x,z)))))", "score": -1}
{"id": "eqasc_validation_961", "prediction": "all x.(Chromoplast(x) -> (exists y.(FlowerPetal(y) & FoundIn(x,y))) | exists z.(Fruit(z) & FoundIn(x,z)))))", "score": -1}
{"id": "eqasc_validation_961", "prediction": "all x.(Chromoplast(x) -> (exists y.(FlowerPetal(y) & FoundIn(x,y)) & exists z.(Fruit(z) & FoundIn(x,z)))))", "score": -1}
{"id": "eqasc_validation_961", "prediction": "all x.(Chromoplast(x) -> exists y.(FlowerPetal(y) | Fruit(y)) & FoundIn(x,y)))", "score": -1}
{"id": "eqasc_validation_961", "prediction": "all x.(Chromoplast(x) -> (FoundInFlowerPetals(x) & FoundInFruits(x)))", "score": 0}
{"id": "eqasc_validation_961", "prediction": "all x.(Chromoplast(x) -> (exists y.(FlowerPetal(y) | Fruit(y)) & FoundIn(x,y))))", "score": -1}
{"id": "eqasc_validation_961", "prediction": "all x.(Chromoplast(x) -> (exists y.(FlowerPetal(y) & FoundIn(x,y))) & exists z.(Fruit(z) & FoundIn(x,z))))", "score": -1}
{"id": "eqasc_validation_961", "prediction": "all x.(Chromoplast(x) -> (FoundIn(x,flowerPetals) & FoundIn(x,fruits)))", "score": 0}
{"id": "eqasc_validation_961", "prediction": "all x.(Chromoplast(x) -> (exists y.(FlowerPetal(y) & FoundIn(x,y))))", "score": 0}
{"id": "eqasc_validation_961", "prediction": "all x y z.((Chromoplast(x) & FlowerPetal(y) & Fruit(z)) -> (FoundIn(x,y) & FoundIn(x,z)))", "score": 0}
{"id": "eqasc_validation_961", "prediction": "all x.(Chromoplast(x) -> (FoundInFlowerPetals(x) | FoundInFruits(x)))", "score": 0}
{"id": "eqasc_validation_961", "prediction": "all x.(Chromoplast(x) -> (FoundInManyFlowerPetals(x) & FoundInManyFruits(x)))", "score": 0}
{"id": "eqasc_validation_961", "prediction": "all x.(Chromoplast(x) -> (exists y.(FlowerPetal(y) | Fruit(y)) & FoundIn(x,y)))", "score": 0}
{"id": "eqasc_validation_962", "prediction": "all x.((FlowerPetals(x) & Fruit(x)) -> (MakesPigments(x) & StoresPigments(x)))", "score": 0}
{"id": "eqasc_validation_962", "prediction": "all x y.((FlowerPetal(x) & Fruit(y)) -> (MakesPigments(x) & StoresPigments(x)))", "score": 0}
{"id": "eqasc_validation_962", "prediction": "all x y.((FlowerPetal(x) & Fruit(y)) -> (MakesPigments(x,y) & StoresPigments(x,y)))", "score": 0}
{"id": "eqasc_validation_962", "prediction": "all x.((FlowerPetals(x) | Fruits(x)) -> (MakesPigments(x) & StoresPigments(x)))", "score": 0}
{"id": "eqasc_validation_962", "prediction": "all x y.((FlowerPetals(x) & Fruit(y)) -> (MakesPigments(x) & StoresPigments(x)))", "score": 0}
{"id": "eqasc_validation_962", "prediction": "all x y z.((FlowerPetal(x) & Fruit(y) & Pigment(z)) -> (Makes(y,z) & Stores(y,z)))", "score": 0}
{"id": "eqasc_validation_962", "prediction": "all x.((FlowerPetal(x) & Fruit(x)) -> (MakesPigments(x) & StoresPigments(x)))", "score": 0}
{"id": "eqasc_validation_962", "prediction": "all x y.((FlowerPetals(x) & Fruit(y)) -> (MakesPigments(x,y) & StoresPigments(x,y)))", "score": 0}
{"id": "eqasc_validation_962", "prediction": "all x.((FlowerPetal(x) | Fruit(x)) -> (MakesPigments(x) & StoresPigments(x)))", "score": 0}
{"id": "eqasc_validation_962", "prediction": "all x y.((FlowerPetals(x) & Fruit(y)) -> (MakesPigments(x) & StoresPigments(y)))", "score": 0}
{"id": "eqasc_validation_962", "prediction": "all x y.((FlowerPetal(x) & Fruit(y)) -> (MakesPigments(x) & StoresPigments(y)))", "score": 0}
{"id": "eqasc_validation_962", "prediction": "all x.((FlowerPetals(x) | Fruit(x)) -> (MakesPigments(x) & StoresPigments(x)))", "score": 0}
{"id": "eqasc_validation_962", "prediction": "all x.((FlowerPetals(x) & Fruits(x)) -> (MakesPigments(x) & StoresPigments(x)))", "score": 0}
{"id": "eqasc_validation_962", "prediction": "all x y z.((FlowerPetals(x) & Fruit(y) & Pigment(z)) -> (Makes(y,z) & Stores(y,z)))", "score": 0}
{"id": "eqasc_validation_962", "prediction": "all x y.((FlowerPetal(x) & Fruit(y)) -> (MakesPigments(x,y) | StoresPigments(x,y)))", "score": 0}
{"id": "eqasc_validation_962", "prediction": "all x y z.((FlowerPetal(x) & Fruit(y) & Pigment(z)) -> (Makes(y,z) | Stores(y,z)))", "score": 0}
{"id": "eqasc_validation_963", "prediction": "all x.(Flower(x) -> ContainsPigments(x))", "score": 0}
{"id": "eqasc_validation_963", "prediction": "all x y.((Flower(x) & Flower(y)) -> ContainsPigments(x,y))", "score": 0}
{"id": "eqasc_validation_963", "prediction": "all x y.((Flower(x) & Pigment(y)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_963", "prediction": "all x y z.((Flower(x) & Pigment(y) & Flower(z)) -> Contains(x,y,z))", "score": 0}
{"id": "eqasc_validation_963", "prediction": "all x y z.((Flower(x) & Pigment(y) & Pigment(z)) -> Contains(x,y,z))", "score": 0}
{"id": "eqasc_validation_963", "prediction": "all x y z.((Flower(x) & Pigment(y) & Flower(z)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_963", "prediction": "all x.(Flower(x) -> (ContainsPigments(x) & ContainsPigments(x)))", "score": 0}
{"id": "eqasc_validation_963", "prediction": "all x y.((Flower(x) & Flower(y)) -> (ContainsPigments(x,y) | ContainsPigments(x,y)))", "score": 0}
{"id": "eqasc_validation_963", "prediction": "all x y.((Flower(x) & Flower(y)) -> (ContainsPigments(x,y) & ContainsPigments(x,y)))", "score": 0}
{"id": "eqasc_validation_963", "prediction": "all x y z.((Flower(x) & Pigment(y) & Flower(z) & Contains(x,y)) -> Contains(x,z))", "score": 0}
{"id": "eqasc_validation_963", "prediction": "all x y z.((Flower(x) & Pigment(y) & Pigment(z)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_963", "prediction": "all x y.((Flower(x) & Flower(y)) -> ContainPigments(x,y))", "score": 0}
{"id": "eqasc_validation_963", "prediction": "all x.(Flower(x) -> (ContainsPigments(x) & InFlower(x)))", "score": 0}
{"id": "eqasc_validation_963", "prediction": "all x y.((Flower(x) & Pigment(y) & Contains(x,y)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_963", "prediction": "all x y z.((Flower(x) & Pigment(y) & Flower(z)) -> Contain(x,y,z))", "score": 0}
{"id": "eqasc_validation_963", "prediction": "all x.(Flower(x) -> (ContainsPigments(x) | ContainsPigments(x)))", "score": 0}
{"id": "eqasc_validation_964", "prediction": "all x.(Chromoplast(x) -> (MakesAndStoresSameThing(x) & GivesColorToPaint(x)))", "score": 0}
{"id": "eqasc_validation_964", "prediction": "all x.(Chromoplast(x) -> (Makes(x) & Stores(x) & GivesColorToPaint(x)))", "score": 0}
{"id": "eqasc_validation_964", "prediction": "all x.(Chromoplast(x) -> (MakesAndStoresColor(x) & GivesColorToPaint(x)))", "score": 0}
{"id": "eqasc_validation_964", "prediction": "all x y.((Chromoplast(x) & Color(y)) -> MakesAndStores(x,y))", "score": 0}
{"id": "eqasc_validation_964", "prediction": "all x.(Chromoplast(x) -> (MakesAndStoresEqualThing(x) & GivesColorToPaint(x)))", "score": 0}
{"id": "eqasc_validation_964", "prediction": "all x.(Chromoplast(x) -> (Makes(x,y) & Stores(x,y) & GivesColorToPaint(x)))", "score": 0}
{"id": "eqasc_validation_964", "prediction": "all x y z.((Chromoplast(x) & Color(y) & Paint(z)) -> (MakesAndStores(x,y) & GivesColor(x,z)))", "score": 0}
{"id": "eqasc_validation_964", "prediction": "all x y z.((Chromoplast(x) & Color(y) & Paint(z)) -> MakesAndStores(x,y,z))", "score": 0}
{"id": "eqasc_validation_964", "prediction": "all x y.((Chromoplast(x) & Paint(y)) -> (MakesAndStores(x,y) & GivesColor(x,y)))", "score": 0}
{"id": "eqasc_validation_964", "prediction": "all x.(Chromoplast(x) -> (MakesAndStores(x) & GivesColorToPaint(x)))", "score": 0}
{"id": "eqasc_validation_964", "prediction": "all x y z.((Chromoplast(x) & Color(y) & Paint(z)) -> (MakesAndStores(x,y) & GivesColorTo(x,z)))", "score": 0}
{"id": "eqasc_validation_964", "prediction": "all x y.((Chromoplast(x) & Color(y)) -> (MakesAndStores(x,y) & GivesColorToPaint(x)))", "score": 0}
{"id": "eqasc_validation_964", "prediction": "all x y.((Chromoplast(x) & Color(y)) -> (MakesAndStores(x,y) & GivesColorToPaint(x,y)))", "score": 0}
{"id": "eqasc_validation_964", "prediction": "all x.(Chromoplast(x) -> (Makes(x,y) & Stores(x,y) & GivesColorToPaint(x,y)))", "score": 0}
{"id": "eqasc_validation_964", "prediction": "all x.(Chromoplast(x) -> (MakesAndStores(x,y) & GivesColorToPaint(y)))", "score": 0}
{"id": "eqasc_validation_964", "prediction": "all x y.((Chromoplast(x) & Color(y)) -> MakeAndStore(x,y))", "score": 0}
{"id": "eqasc_validation_965", "prediction": "all x.(PhotosynthesisPigments(x) -> AbsorbsVisibleLight(x))", "score": 0}
{"id": "eqasc_validation_965", "prediction": "all x.(PhotosynthesisPigments(x) -> (AbsorbsVisibleLight(x) & Pigments(x)))", "score": 0}
{"id": "eqasc_validation_965", "prediction": "all x.(Photosynthesis(x) -> (Pigments(x) & AbsorbsVisibleLight(x)))", "score": 0}
{"id": "eqasc_validation_965", "prediction": "all x.(Photosynthesis(x) -> (Pigment(x) & AbsorbsVisibleLight(x)))", "score": 0}
{"id": "eqasc_validation_965", "prediction": "all x.(PhotosynthesisPigment(x) -> (AbsorbsVisibleLight(x) & Pigments(x)))", "score": 0}
{"id": "eqasc_validation_965", "prediction": "all x.(PhotosynthesisPigments(x) -> (AbsorbsVisibleLight(x) & -AbsorbsVisibleLight(x)))", "score": 0}
{"id": "eqasc_validation_965", "prediction": "all x.(PhotosynthesisPigment(x) -> AbsorbsVisibleLight(x))", "score": 0}
{"id": "eqasc_validation_965", "prediction": "all x.((Pigment(x) & Photosynthesis(x)) -> AbsorbsVisibleLight(x))", "score": 0}
{"id": "eqasc_validation_965", "prediction": "all x.(Pigment(x) -> (AbsorbsVisibleLight(x) & Pigments(x)))", "score": 0}
{"id": "eqasc_validation_965", "prediction": "all x.(PhotosynthesisPigments(x) -> (AbsorbsVisibleLight(x) & Contains(x,y)))", "score": 0}
{"id": "eqasc_validation_965", "prediction": "all x.(PhotosynthesisPigments(x) -> (Substance(x) & AbsorbsVisibleLight(x)))", "score": 0}
{"id": "eqasc_validation_965", "prediction": "all x y.((PhotosynthesisPigment(x) & Substance(y)) -> AbsorbsVisibleLight(y,x))", "score": 0}
{"id": "eqasc_validation_965", "prediction": "all x y.((PhotosynthesisPigment(x) & Substance(y)) -> AbsorbsVisibleLight(y))", "score": 0}
{"id": "eqasc_validation_965", "prediction": "all x y.((PhotosynthesisPigment(x) & Substance(y)) -> AbsorbsVisibleLight(x,y))", "score": 0}
{"id": "eqasc_validation_965", "prediction": "all x.(Photosynthesis(x) -> (Pigments(x) & AbsorbVisibleLight(x)))", "score": 0}
{"id": "eqasc_validation_965", "prediction": "all x y.((Photosynthesis(x) & Pigment(y)) -> AbsorbsVisibleLight(y,x))", "score": 0}
{"id": "eqasc_validation_966", "prediction": "all x.(Chromoplast(x) -> (StoresSubstances(x) & AbsorbsVisibleLight(x)))", "score": 0}
{"id": "eqasc_validation_966", "prediction": "all x y.((Chromoplast(x) & Substance(y) & AbsorbsVisibleLight(x,y)) -> Stores(x,y))", "score": 0}
{"id": "eqasc_validation_966", "prediction": "all x.(Chromoplast(x) -> StoresSubstances(x)) AbsorbsVisibleLight(x))", "score": -1}
{"id": "eqasc_validation_966", "prediction": "all x y z.((Chromoplast(x) & Substance(y) & VisibleLight(z)) -> Stores(x,y,z))", "score": 0}
{"id": "eqasc_validation_966", "prediction": "all x y.((Chromoplast(x) & Substance(y)) -> Stores(x,y))", "score": 0}
{"id": "eqasc_validation_966", "prediction": "all x y z.((Chromoplast(x) & Substance(y) & VisibleLight(z)) -> Stores(x,y))", "score": 0}
{"id": "eqasc_validation_966", "prediction": "all x.(Chromoplast(x) -> StoresSubstances(x))", "score": 0}
{"id": "eqasc_validation_966", "prediction": "all x y.((Chromoplast(x) & Substance(y)) -> Stores(x,y)) AbsorbsVisibleLight(x))", "score": -1}
{"id": "eqasc_validation_966", "prediction": "all x y.((Chromoplast(x) & Substance(y) & AbsorbsVisibleLight(x)) -> Stores(x,y))", "score": 0}
{"id": "eqasc_validation_966", "prediction": "all x y z.((Chromoplast(x) & Substance(y) & VisibleLight(z) & Stores(x,y)) -> Absorbs(x,z))", "score": 0}
{"id": "eqasc_validation_966", "prediction": "all x y.((Chromoplast(x) & Substance(y)) -> StoresAbsorbsVisibleLight(x,y))", "score": 0}
{"id": "eqasc_validation_966", "prediction": "all x y.((Chromoplast(x) & Substance(y)) -> (Stores(x,y) & AbsorbsVisibleLight(x)))", "score": 0}
{"id": "eqasc_validation_966", "prediction": "all x y.((Chromoplast(x) & Substance(y)) -> StoresAndAbsorbsVisibleLight(x,y))", "score": 0}
{"id": "eqasc_validation_966", "prediction": "all x y z.((Chromoplast(x) & Substance(y) & VisibleLight(z) & Stores(x,y,z)) -> Absorbs(x,y,z))", "score": 0}
{"id": "eqasc_validation_966", "prediction": "all x y z.((Chromoplast(x) & Substance(y) & VisibleLight(z) & Stores(x,y)) -> AbsorbsLight(x,z))", "score": 0}
{"id": "eqasc_validation_966", "prediction": "all x y.((Chromoplast(x) & Substance(y) & AbsorbsVisibleLight(y)) -> Stores(x,y))", "score": 0}
{"id": "eqasc_validation_967", "prediction": "all x.(Chromoplast(x) -> Hushed(x))", "score": 0}
{"id": "eqasc_validation_967", "prediction": "all x.(Chromoplast(x) -> Hued(x))", "score": 0}
{"id": "eqasc_validation_967", "prediction": "all x.(Chromoplast(x) -> Huded(x))", "score": 0}
{"id": "eqasc_validation_967", "prediction": "all x y.((Chromoplast(x) & Chromoplast(y)) -> Hushed(x,y))", "score": 0}
{"id": "eqasc_validation_967", "prediction": "all x y.((Chromoplast(x) & Chromoplast(y)) -> Hushed(x))", "score": 0}
{"id": "eqasc_validation_967", "prediction": "all x y.((Chromoplast(x) & Chromoplast(y)) -> Hued(x,y))", "score": 0}
{"id": "eqasc_validation_967", "prediction": "all x.(Chromoplast(x) -> Huid(x))", "score": 0}
{"id": "eqasc_validation_967", "prediction": "all x y.((Chromoplast(x) & Chromoplast(y)) -> Hued(x))", "score": 0}
{"id": "eqasc_validation_967", "prediction": "all x.(Chromoplast(x) -> Huished(x))", "score": 0}
{"id": "eqasc_validation_967", "prediction": "all x.(Chromoplast(x) -> Colored(x))", "score": 0}
{"id": "eqasc_validation_967", "prediction": "all x y.((Chromoplast(x) & Chromoplast(y)) -> Huded(x,y))", "score": 0}
{"id": "eqasc_validation_967", "prediction": "all x y.((Chromoplast(x) & Chromoplast(y)) -> Huded(x))", "score": 0}
{"id": "eqasc_validation_967", "prediction": "all x.(Chromoplast(x) -> Honed(x))", "score": 0}
{"id": "eqasc_validation_967", "prediction": "all x y.((Chromoplast(x) & Chromoplast(y)) -> Huid(x))", "score": 0}
{"id": "eqasc_validation_967", "prediction": "all x.(Chromoplast(x) -> (Hued(x) & Chromoplast(x)))", "score": 0}
{"id": "eqasc_validation_968", "prediction": "all x.(PhotosyntheticPigment(x) -> ColorfulCompound(x))", "score": 0}
{"id": "eqasc_validation_968", "prediction": "all x.(PhotosyntheticPigments(x) -> ColorfulCompound(x))", "score": 0}
{"id": "eqasc_validation_968", "prediction": "all x.(PhotosyntheticPigment(x) -> (ColorfulCompound(x) & Pigments(x)))", "score": 0}
{"id": "eqasc_validation_968", "prediction": "all x y.((PhotosyntheticPigment(x) & Pigment(y)) -> ColorfulCompound(x))", "score": 0}
{"id": "eqasc_validation_968", "prediction": "all x y.((PhotosyntheticPigment(x) & Pigment(y)) -> ColorfulCompound(x,y))", "score": 0}
{"id": "eqasc_validation_968", "prediction": "all x.(PhotosyntheticPigments(x) -> (ColorfulCompound(x) & Pigments(x)))", "score": 0}
{"id": "eqasc_validation_968", "prediction": "all x.((PhotosyntheticPigment(x) & ColorfulCompound(x)) -> Pigments(x))", "score": 0}
{"id": "eqasc_validation_968", "prediction": "all x y.((PhotosyntheticPigment(x) & Pigment(y)) -> ColorfulCompound(y))", "score": 0}
{"id": "eqasc_validation_968", "prediction": "all x.((PhotosyntheticPigment(x) & ColorfulCompound(x)) -> PhotosyntheticPigment(x))", "score": 0}
{"id": "eqasc_validation_968", "prediction": "all x.((PhotosyntheticPigment(x) & Pigment(x)) -> ColorfulCompound(x))", "score": 0}
{"id": "eqasc_validation_968", "prediction": "all x.((Pigment(x) & Photosynthetic(x)) -> ColorfulCompound(x))", "score": 0}
{"id": "eqasc_validation_968", "prediction": "all x.((PhotosyntheticPigment(x) & Pigment(y)) -> ColorfulCompound(x))", "score": 0}
{"id": "eqasc_validation_968", "prediction": "all x.(PhotosyntheticPigment(x) -> (ColorfulCompound(x) | ColorfulCompound(x)))", "score": 0}
{"id": "eqasc_validation_968", "prediction": "all x.((PhotosyntheticPigment(x) & ColorfulCompound(x)) -> Pigment(x))", "score": 0}
{"id": "eqasc_validation_968", "prediction": "all x.(PhotosyntheticPigment(x) -> (ColorfulCompound(x) & Pigment(x)))", "score": 0}
{"id": "eqasc_validation_968", "prediction": "all x.(PhotosyntheticPigments(x) -> ColorfulCompounds(x))", "score": 0}
{"id": "eqasc_validation_969", "prediction": "all x y.((Chromoplast(x) & ColorfulCompound(y)) -> (Makes(x,y) & Stores(x,y)))", "score": 0}
{"id": "eqasc_validation_969", "prediction": "all x.(Chromoplast(x) -> (MakesColorfulCompounds(x) & StoresColorfulCompounds(x)))", "score": 0}
{"id": "eqasc_validation_969", "prediction": "all x y z.((Chromoplast(x) & ColorfulCompound(y) & Compound(z)) -> (Makes(x,y) & Stores(x,z)))", "score": 0}
{"id": "eqasc_validation_969", "prediction": "all x y z.((Chromoplast(x) & ColorfulCompound(y) & ColorfulCompound(z)) -> (Makes(x,y) & Stores(x,z)))", "score": 0}
{"id": "eqasc_validation_969", "prediction": "all x.(Chromoplast(x) -> (Makes(x,ColorfulCompounds) & Stores(x,ColorfulCompounds)))", "score": 0}
{"id": "eqasc_validation_969", "prediction": "all x y.((Chromoplast(x) & ColorfulCompound(y)) -> MakesAndStores(x,y))", "score": 0}
{"id": "eqasc_validation_969", "prediction": "all x.(Chromoplast(x) -> (MakesAndStoresColorfulCompounds(x) & ColorfulCompounds(x)))", "score": 0}
{"id": "eqasc_validation_969", "prediction": "all x.(Chromoplast(x) -> (Makes(x,colorfulCompounds) & Stores(x,colorfulCompounds)))", "score": 0}
{"id": "eqasc_validation_969", "prediction": "all x y.((Chromoplast(x) & Compound(y)) -> (Makes(x,y) & Stores(x,y)))", "score": 0}
{"id": "eqasc_validation_969", "prediction": "all x y z.((Chromoplast(x) & ColorfulCompound(y) & Compound(z)) -> (Makes(x,y) & Stores(x,y)))", "score": 0}
{"id": "eqasc_validation_969", "prediction": "all x y z.((Chromoplast(x) & ColorfulCompound(y) & ColorfulCompound(z)) -> MakesAndStores(x,y,z))", "score": 0}
{"id": "eqasc_validation_969", "prediction": "all x y z.((Chromoplast(x) & Compound(y) & ColorfulCompound(z)) -> (Makes(x,y) & Stores(x,z)))", "score": 0}
{"id": "eqasc_validation_969", "prediction": "all x y z.((Chromoplast(x) & ColorfulCompound(y) & Compound(z)) -> MakesAndStores(x,y,z))", "score": 0}
{"id": "eqasc_validation_969", "prediction": "all x.(Chromoplast(x) -> (MakesColorfulCompounds(x) & StoresCompounds(x)))", "score": 0}
{"id": "eqasc_validation_969", "prediction": "all x.(Chromoplast(x) -> (MakesClothingCompounds(x) & StoresColorfulCompounds(x)))", "score": 0}
{"id": "eqasc_validation_969", "prediction": "all x.(Chromoplast(x) -> (MakeColorfulCompounds(x) & StoreColorfulCompounds(x)))", "score": 0}
{"id": "eqasc_validation_970", "prediction": "all x.(Chromoplast(x) -> MakesRedColoring(x))", "score": 0}
{"id": "eqasc_validation_970", "prediction": "all x y.((Chromoplast(x) & Chromoplast(y)) -> MakesRedColoring(x,y))", "score": 0}
{"id": "eqasc_validation_970", "prediction": "all x y z.((Chromoplast(x) & RedColoring(y) & Chromoplast(z)) -> Makes(x,y,z))", "score": 0}
{"id": "eqasc_validation_970", "prediction": "all x.(Chromoplast(x) -> RedColoring(x))", "score": 0}
{"id": "eqasc_validation_970", "prediction": "all x y.((Chromoplast(x) & RedColoring(y)) -> Makes(x,y))", "score": 0}
{"id": "eqasc_validation_970", "prediction": "all x y z.((Chromoplast(x) & RedColoring(y) & Chromoplast(z)) -> Makes(x,z))", "score": 0}
{"id": "eqasc_validation_970", "prediction": "all x y z.((Chromoplast(x) & RedColoring(y) & RedColoring(z)) -> Makes(x,y,z))", "score": 0}
{"id": "eqasc_validation_970", "prediction": "all x y z.((Chromoplast(x) & Chromoplast(y) & RedColoring(z)) -> Makes(x,y,z))", "score": 0}
{"id": "eqasc_validation_970", "prediction": "all x y z.((Chromoplast(x) & RedColoring(y) & Coloring(z)) -> Makes(x,y))", "score": 0}
{"id": "eqasc_validation_970", "prediction": "all x y z.((Chromoplast(x) & RedColoring(y) & Chromoplast(z)) -> Makes(x,y))", "score": 0}
{"id": "eqasc_validation_970", "prediction": "all x y.((Chromoplast(x) & Chromoplast(y)) -> RedColoring(x,y))", "score": 0}
{"id": "eqasc_validation_970", "prediction": "all x y z.((Chromoplast(x) & RedColoring(y) & Coloring(z)) -> Makes(x,y,z))", "score": 0}
{"id": "eqasc_validation_970", "prediction": "all x y z.((Chromoplast(x) & RedColoring(y) & RedColoring(z)) -> Makes(x,y))", "score": 0}
{"id": "eqasc_validation_970", "prediction": "all x.(Chromoplast(x) -> (MakesRedColoring(x) & MakesRedColoring(x)))", "score": 0}
{"id": "eqasc_validation_970", "prediction": "all x y.((Chromoplast(x) & Chromoplast(y)) -> MakesRedColoring(x))", "score": 0}
{"id": "eqasc_validation_970", "prediction": "all x y.((Chromoplast(x) & Color(y)) -> MakesRedColoring(x,y))", "score": 0}
{"id": "eqasc_validation_971", "prediction": "all x y.((Bee(x) & Nectar(y)) -> ConvertsToHoney(x,y))", "score": 0}
{"id": "eqasc_validation_971", "prediction": "all x y z.((Bee(x) & Nectar(y) & Honey(z)) -> ConvertsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_971", "prediction": "all x y z.((Bee(x) & Nectar(y) & Honey(z)) -> Converts(x,y,z))", "score": 0}
{"id": "eqasc_validation_971", "prediction": "all x y.((Bee(x) & Nectar(y)) -> ConvertsIntoHoney(x,y))", "score": 0}
{"id": "eqasc_validation_971", "prediction": "all x y z.((Bee(x) & Nectar(y) & Honey(z)) -> ConvertsInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_971", "prediction": "all x.(Bee(x) -> (ConvertsNectar(x) & ProducesHoney(x)))", "score": 0}
{"id": "eqasc_validation_971", "prediction": "all x y.((Bee(x) & Nectar(y) & Honey(y)) -> ConvertsTo(x,y))", "score": 0}
{"id": "eqasc_validation_971", "prediction": "all x.(Bee(x) -> (ConvertsNectarToHoney(x) & BeesConvertNectarToHoney(x)))", "score": 0}
{"id": "eqasc_validation_971", "prediction": "all x.(Bee(x) -> ConvertsNectarToHoney(x))", "score": 0}
{"id": "eqasc_validation_971", "prediction": "all x y.((Bee(x) & Nectar(y) & Honey(z)) -> ConvertsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_971", "prediction": "all x.(Bee(x) -> (ConvertsNectarToHoney(x)))", "score": 0}
{"id": "eqasc_validation_971", "prediction": "all x y z w.((Bee(x) & Nectar(y) & Honey(z)) -> ConvertsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_971", "prediction": "all x.(Bee(x) -> (ConvertsNectarToHoney(x) & NectarToHoney(x)))", "score": 0}
{"id": "eqasc_validation_971", "prediction": "all x.(Bee(x) -> (ConvertsNectar(x) & Honey(x)))", "score": 0}
{"id": "eqasc_validation_971", "prediction": "all x.(Bee(x) -> (ConvertsNectarIntoHoney(x)))", "score": 0}
{"id": "eqasc_validation_972", "prediction": "all x.(HoneyBee(x) -> (LivesInHome(x) | LivesInAapiary(x)))", "score": 0}
{"id": "eqasc_validation_972", "prediction": "all x.(HoneyBee(x) -> (LivesInHome(x) | LivesInApiary(x)))", "score": 0}
{"id": "eqasc_validation_972", "prediction": "all x.(HoneyBee(x) -> (Social(x) & exists y.(Home(y) | Apiary(y)) & LivesIn(x,y))))", "score": -1}
{"id": "eqasc_validation_972", "prediction": "all x.(HoneyBee(x) -> (exists y.(Home(y) & LivesIn(x,y))) | exists z.(Aapiary(z) & LivesIn(x,z)))))", "score": -1}
{"id": "eqasc_validation_972", "prediction": "all x y.((HoneyBee(x) & Home(y)) | Apiary(y)) -> Social(x))", "score": -1}
{"id": "eqasc_validation_972", "prediction": "all x.(HoneyBee(x) -> (Social(x) & LivesInHome(x) | LivesInAapiary(x)))", "score": 0}
{"id": "eqasc_validation_972", "prediction": "all x y.((HoneyBee(x) & (Home(y) | Apiary(y))) -> Social(x))", "score": 0}
{"id": "eqasc_validation_972", "prediction": "all x.(HoneyBee(x) -> (Social(x) & (LivesInHome(x) | LivesInAapiary(x))))", "score": 0}
{"id": "eqasc_validation_972", "prediction": "all x.(HoneyBee(x) -> (Social(x) & LivesInHome(x) | LivesInApiary(x)))", "score": 0}
{"id": "eqasc_validation_972", "prediction": "all x.(HoneyBee(x) -> (exists y.(Home(y) & LivesIn(x,y)) | LivesIn(x,y))))", "score": -1}
{"id": "eqasc_validation_972", "prediction": "all x y.((HoneyBee(x) & Home(y)) | Apiary(y)) -> Social(x,y))", "score": -1}
{"id": "eqasc_validation_972", "prediction": "all x.(HoneyBee(x) -> (exists y.(Home(y) & LivesIn(x,y))) | exists z.(Apiary(z) & LivesIn(x,z)))))", "score": -1}
{"id": "eqasc_validation_972", "prediction": "all x.(HoneyBee(x) -> exists y.(Home(y) | Apiary(y)) & LivesIn(x,y)))", "score": -1}
{"id": "eqasc_validation_972", "prediction": "all x.(HoneyBee(x) -> (exists y.(Home(y) & LivesIn(x,y)) | exists z.(Aapiary(z) & LivesIn(x,z)))))", "score": -1}
{"id": "eqasc_validation_972", "prediction": "all x y.((HoneyBee(x) & (Home(y) | Apiary(y))) -> Social(x,y))", "score": 0}
{"id": "eqasc_validation_972", "prediction": "all x.(HoneyBee(x) -> (Social(x) & (LivesInHome(x) | LivesInApiary(x))))", "score": 0}
{"id": "eqasc_validation_973", "prediction": "all x y z.((Nectar(x) & Honey(y) & Apiary(z)) -> ConvertedTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_973", "prediction": "all x y.((Nectar(x) & Apiary(y)) -> ConvertedToHoney(x,y))", "score": 0}
{"id": "eqasc_validation_973", "prediction": "all x y z.((Nectar(x) & Honey(y) & Apiary(z)) -> ConvertedInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_973", "prediction": "all x y z.((Nectar(x) & Apiary(y) & Apiary(z)) -> ConvertedToHoney(x,y,z))", "score": 0}
{"id": "eqasc_validation_973", "prediction": "all x y.((Nectar(x) & Apiary(y)) -> ConvertedToHoney(x))", "score": 0}
{"id": "eqasc_validation_973", "prediction": "all x y.((Nectar(x) & Apiary(y)) -> ConvertedIntoHoney(x,y))", "score": 0}
{"id": "eqasc_validation_973", "prediction": "all x y.((Nectar(x) & Apiary(y)) -> ConvertedToHoneyIn(x,y))", "score": 0}
{"id": "eqasc_validation_973", "prediction": "all x y z.((Nectar(x) & Apiary(y) & Apiary(z)) -> ConvertedToHoneyIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_973", "prediction": "all x y z.((Nectar(x) & Honey(y) & Aapiary(z)) -> ConvertedTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_973", "prediction": "all x y z.((Nectar(x) & Apiary(y) & Apiary(z)) -> ConvertedIntoHoney(x,y,z))", "score": 0}
{"id": "eqasc_validation_973", "prediction": "all x y z.((Nectar(x) & Honey(y) & Apiary(z)) -> ConvertedToIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_973", "prediction": "all x y z.((Nectar(x) & Apiary(y) & Apiary(z)) -> ConvertedToHoney(x))", "score": 0}
{"id": "eqasc_validation_973", "prediction": "all x y z.((Nectar(x) & Apiary(y) & Honey(z)) -> ConvertedTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_973", "prediction": "all x y z.((Nectar(x) & Honey(y) & Apiary(z)) -> ConvertsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_973", "prediction": "all x y z.((Nectar(x) & Beef(y) & Apiary(z)) -> ConvertedTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_973", "prediction": "all x y.((Nectar(x) & Apiary(y)) -> ConvertedIntoHoney(x))", "score": 0}
{"id": "eqasc_validation_974", "prediction": "all x y.((Butterfly(x) & Flower(y)) -> FeedsOnNectar(x,y))", "score": 0}
{"id": "eqasc_validation_974", "prediction": "all x.(Butterfly(x) -> FeedsOnNectar(x))", "score": 0}
{"id": "eqasc_validation_974", "prediction": "all x y.((Butterfly(x) & Flower(y)) -> FeedsOn(x,y))", "score": 0}
{"id": "eqasc_validation_974", "prediction": "all x.(Butterfly(x) -> (FeedsOnNectar(x) & ProducedByFlowers(x)))", "score": 0}
{"id": "eqasc_validation_974", "prediction": "all x y z.((Butterfly(x) & Flower(y) & Nectar(z)) -> FeedsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_974", "prediction": "all x y z.((Butterfly(x) & Flower(y) & Nectar(z)) -> FeedsOn(x,z))", "score": 0}
{"id": "eqasc_validation_974", "prediction": "all x.(Butterfly(x) -> FeedsOnNectarProducedByFlowers(x))", "score": 0}
{"id": "eqasc_validation_974", "prediction": "all x y.((Butterfly(x) & Flower(y) & ProducesNectar(x,y)) -> FeedsOn(x,y))", "score": 0}
{"id": "eqasc_validation_974", "prediction": "all x y z.((Butterfly(x) & Nectar(y) & Flower(z)) -> FeedsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_974", "prediction": "all x y z.((Butterfly(x) & Flower(y) & Nectar(z) & ProducedBy(x,y)) -> FeedsOn(x,z))", "score": 0}
{"id": "eqasc_validation_974", "prediction": "all x y z.((Butterfly(x) & Flower(y) & Nectar(z) & ProducedBy(x,y,z)) -> FeedsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_974", "prediction": "all x y z.((Butterfly(x) & Flower(y) & Nectar(z) & ProducedBy(x,y,z)) -> FeedsOn(x,z))", "score": 0}
{"id": "eqasc_validation_974", "prediction": "all x y z.((Butterfly(x) & Flower(y) & Nectar(z) & ProducedBy(x,z)) -> FeedsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_974", "prediction": "all x.(Butterfly(x) -> FeedsOnNectar(x,flowers))", "score": 0}
{"id": "eqasc_validation_974", "prediction": "all x y z.((Butterfly(x) & Flower(y) & Nectar(z) & ProducedBy(x,z)) -> FeedsOn(x,z))", "score": 0}
{"id": "eqasc_validation_974", "prediction": "all x y z.((Butterfly(x) & Flower(y) & Nectar(z)) -> (FeedsOn(x,z) & ProducedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_975", "prediction": "all x.(Bee(x) -> NeedsFlowers(x))", "score": 0}
{"id": "eqasc_validation_975", "prediction": "all x.(Bee(x) -> NeedsFlowersToMakeHoney(x))", "score": 0}
{"id": "eqasc_validation_975", "prediction": "all x y.((Bee(x) & Flower(y)) -> NeedsToMakeHoney(x,y))", "score": 0}
{"id": "eqasc_validation_975", "prediction": "all x y z.((Bee(x) & Flower(y) & Honey(z)) -> NeedsToMake(x,y,z))", "score": 0}
{"id": "eqasc_validation_975", "prediction": "all x.(Bee(x) -> (NeedsFlowers(x) & MakesHoney(x)))", "score": 0}
{"id": "eqasc_validation_975", "prediction": "all x.((Bee(x) & NeedsFlowers(x)) -> MakesHoney(x))", "score": 0}
{"id": "eqasc_validation_975", "prediction": "all x y.((Bee(x) & Flower(y)) -> NeedsForMakingHoney(x,y))", "score": 0}
{"id": "eqasc_validation_975", "prediction": "all x y.((Bee(x) & Flower(y)) -> Needs(x,y))", "score": 0}
{"id": "eqasc_validation_975", "prediction": "all x y.((Bee(x) & Flower(y)) -> NeedsForHoney(x,y))", "score": 0}
{"id": "eqasc_validation_975", "prediction": "all x y z.((Bee(x) & Flower(y) & Honey(z)) -> NeedsFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_975", "prediction": "all x y z.((Bee(x) & Flower(y) & Honey(z)) -> NeedsForMaking(x,y,z))", "score": 0}
{"id": "eqasc_validation_975", "prediction": "all x y.((Bee(x) & Flower(y)) -> NeedsToMake(x,y))", "score": 0}
{"id": "eqasc_validation_975", "prediction": "all x y.((Bee(x) & Honey(y)) -> NeedsFlowers(x,y))", "score": 0}
{"id": "eqasc_validation_975", "prediction": "all x y z.((Bee(x) & Flower(y) & Honey(z)) -> Needs(x,y,z))", "score": 0}
{"id": "eqasc_validation_975", "prediction": "all x y z.((Bee(x) & Flower(y) & Honey(z)) -> Needs(x,y))", "score": 0}
{"id": "eqasc_validation_975", "prediction": "all x.(Bee(x) -> NeedsFlowersForHoney(x))", "score": 0}
{"id": "eqasc_validation_976", "prediction": "all x.(Bee(x) -> ChangesNectarInBeehive(x))", "score": 0}
{"id": "eqasc_validation_976", "prediction": "all x y.((Bee(x) & Beehive(y)) -> ChangesNectar(x,y))", "score": 0}
{"id": "eqasc_validation_976", "prediction": "all x y.((Bee(x) & Beehive(y)) -> ChangesNectarIn(x,y))", "score": 0}
{"id": "eqasc_validation_976", "prediction": "all x y z.((Bee(x) & Beehive(y) & Nectar(z)) -> ChangesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_976", "prediction": "all x y.((Bee(x) & Beehive(y)) -> ChangesNectarInBeehive(x,y))", "score": 0}
{"id": "eqasc_validation_976", "prediction": "all x y.((Bee(x) & Beehive(y) & ChangesNectar(x,y)) -> ChangesNectar(x,y))", "score": 0}
{"id": "eqasc_validation_976", "prediction": "all x y z.((Bee(x) & Beehive(y) & Nectar(z)) -> Changes(x,y,z))", "score": 0}
{"id": "eqasc_validation_976", "prediction": "all x y z.((Bee(x) & Beehive(y) & Nectar(z)) -> Changes(x,z))", "score": 0}
{"id": "eqasc_validation_976", "prediction": "all x y z.((Bee(x) & Beehive(y) & Nectar(z)) -> ChangesIn(x,z))", "score": 0}
{"id": "eqasc_validation_976", "prediction": "all x y z.((Bee(x) & Beehive(y) & Nectar(z) & ChangesIn(x,y,z)) -> ChangesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_976", "prediction": "all x.(Bee(x) -> ChangesNectar(x))", "score": 0}
{"id": "eqasc_validation_976", "prediction": "all x y.((Bee(x) & Beehive(y)) -> (ChangesNectar(x,y) | ChangesNectar(x,y)))", "score": 0}
{"id": "eqasc_validation_976", "prediction": "all x y.((Bee(x) & Beehive(y)) -> ChangeNectar(x,y))", "score": 0}
{"id": "eqasc_validation_976", "prediction": "all x y z.((Bee(x) & Beehive(y) & Beehive(z)) -> ChangesNectar(x,y,z))", "score": 0}
{"id": "eqasc_validation_976", "prediction": "all x y z.((Bee(x) & Beehive(y) & Nectar(z) & ChangesIn(x,y,z)) -> ChangesIn(x,y))", "score": 0}
{"id": "eqasc_validation_976", "prediction": "all x y z.((Bee(x) & Beehive(y) & Beehive(z)) -> ChangesNectarIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_977", "prediction": "all x y.((Honey(x) & Beehive(y)) -> ChangedIn(x,y))", "score": 0}
{"id": "eqasc_validation_977", "prediction": "all x y z.((Honey(x) & Beehive(y) & Beehive(z)) -> ChangedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_977", "prediction": "all x y.((Honey(x) & Beehive(y)) -> ChangedInBeehive(x,y))", "score": 0}
{"id": "eqasc_validation_977", "prediction": "all x y z.((Honey(x) & Beehive(y) & Beehive(z)) -> ChangedInBeehive(x,y,z))", "score": 0}
{"id": "eqasc_validation_977", "prediction": "all x y z.((Honey(x) & Beehive(y) & Beehive(z)) -> ChangesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_977", "prediction": "all x y z.((Honey(x) & Beehive(y) & Beehive(z) & ChangedIn(x,y,z)) -> ChangedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_977", "prediction": "all x y.((Honey(x) & Beehive(y)) -> ChangesIn(x,y))", "score": 0}
{"id": "eqasc_validation_977", "prediction": "all x y z.((Honey(x) & Beehive(y) & Beehive(z)) -> ChangesInBeehive(x,y,z))", "score": 0}
{"id": "eqasc_validation_977", "prediction": "all x y.((Honey(x) & Beehive(y)) -> ChangesInBeehive(x,y))", "score": 0}
{"id": "eqasc_validation_977", "prediction": "all x y z.((Honey(x) & Beehive(y) & Beehive(z)) -> Changed(x,y,z))", "score": 0}
{"id": "eqasc_validation_977", "prediction": "all x y z.((Honey(x) & Beehive(y) & Beehive(z)) -> Changes(x,y,z))", "score": 0}
{"id": "eqasc_validation_977", "prediction": "all x y.((Honey(x) & Beehive(y)) -> Changed(x,y))", "score": 0}
{"id": "eqasc_validation_977", "prediction": "all x y.((Honey(x) & Beehive(y) & ChangedIn(x,y)) -> ChangedIn(x,y))", "score": 0}
{"id": "eqasc_validation_977", "prediction": "all x y z w.((Honey(x) & Beehive(y) & Beehive(z) & ChangedIn(x,y,z)) -> ChangedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_977", "prediction": "all x y z.((Honey(x) & Beehive(y) & Beehive(z) & ChangesIn(x,y,z)) -> ChangesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_977", "prediction": "all x y.((Honey(x) & Beehive(y) & ChangedInBeehive(x,y)) -> ChangedInBeehive(x,y))", "score": 0}
{"id": "eqasc_validation_978", "prediction": "all x y.((Flower(x) & Honey(y)) -> SourceOfNectar(x,y))", "score": 0}
{"id": "eqasc_validation_978", "prediction": "all x y.((Flower(x) & Honey(y)) -> NectarSource(x,y))", "score": 0}
{"id": "eqasc_validation_978", "prediction": "all x y z.((Flower(x) & Honey(y) & Honey(z)) -> SourceOfNectar(x,y,z))", "score": 0}
{"id": "eqasc_validation_978", "prediction": "all x y.((Flower(x) & HoneyPreferred(y)) -> SourceOfNectar(x,y))", "score": 0}
{"id": "eqasc_validation_978", "prediction": "all x y z.((Flower(x) & Honey(y) & Honey(z)) -> NectarSource(x,y,z))", "score": 0}
{"id": "eqasc_validation_978", "prediction": "all x y.((Flower(x) & Honey(y)) -> SourceOfNectarFor(x,y))", "score": 0}
{"id": "eqasc_validation_978", "prediction": "all x y.((Flower(x) & Honey(y)) -> (SourceOfNectar(x,y) & Prefered(x,y)))", "score": 0}
{"id": "eqasc_validation_978", "prediction": "all x.(Flower(x) -> (SourceOfNectar(x) & PreferedHoney(x)))", "score": 0}
{"id": "eqasc_validation_978", "prediction": "all x y.((Flower(x) & Honey(y)) -> NectarSourceFor(x,y))", "score": 0}
{"id": "eqasc_validation_978", "prediction": "all x y z.((Flower(x) & Honey(y) & Honey(z)) -> SourceOfNectarFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_978", "prediction": "all x y z.((Flower(x) & Honey(y) & Honey(z)) -> SourceOfNectar(x,y))", "score": 0}
{"id": "eqasc_validation_978", "prediction": "all x y.((Flower(x) & Honey(y)) -> ProvidesNectar(x,y))", "score": 0}
{"id": "eqasc_validation_978", "prediction": "all x y z.((Flower(x) & Honey(y) & Honey(z)) -> NectarSourceFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_978", "prediction": "all x y.((Flower(x) & Honey(y)) -> (SourceOfNectar(x,y) & Preferred(x,y)))", "score": 0}
{"id": "eqasc_validation_978", "prediction": "all x.(Flower(x) -> (NectarSource(x) & PreferedHoney(x)))", "score": 0}
{"id": "eqasc_validation_978", "prediction": "all x y.((Flower(x) & Honey(y) & SourceOfNectar(x,y)) -> Prefered(x,y))", "score": 0}
{"id": "eqasc_validation_979", "prediction": "all x y.((Bee(x) & Flower(y)) -> GetsNectarFrom(x,y))", "score": 0}
{"id": "eqasc_validation_979", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> GetsNectarFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_979", "prediction": "all x y z.((Bee(x) & Flower(y) & Nectar(z)) -> GetsFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_979", "prediction": "all x.(Bee(x) -> (GetsNectarFromFlowers(x) & FromFlowers(x)))", "score": 0}
{"id": "eqasc_validation_979", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> GetsNectar(x,y,z))", "score": 0}
{"id": "eqasc_validation_979", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> (GetsNectarFrom(x,y,z) & From(x,y)))", "score": 0}
{"id": "eqasc_validation_979", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> (GetsNectarFrom(x,y,z) & From(x,y,z)))", "score": 0}
{"id": "eqasc_validation_979", "prediction": "all x y.((Bee(x) & Flower(y)) -> (GetsNectarFrom(x,y) & From(x,y)))", "score": 0}
{"id": "eqasc_validation_979", "prediction": "all x y z.((Bee(x) & Flower(y) & Nectar(z)) -> GetsFrom(x,z))", "score": 0}
{"id": "eqasc_validation_979", "prediction": "all x.(Bee(x) -> GetsNectarFromFlowers(x))", "score": 0}
{"id": "eqasc_validation_979", "prediction": "all x y.((Bee(x) & Flower(y)) -> GetsNectar(x,y))", "score": 0}
{"id": "eqasc_validation_979", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> Nectar(x,y,z))", "score": 0}
{"id": "eqasc_validation_979", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> (GetsNectarFrom(x,y,z)))", "score": 0}
{"id": "eqasc_validation_979", "prediction": "all x y z w.((Bee(x) & Flower(y) & Flower(z) & Nectar(w)) -> GetsFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_979", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> GetsNectarFrom(x,z))", "score": 0}
{"id": "eqasc_validation_979", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> (GetsNectarFrom(x,y,z) & NectarFrom(x,y)))", "score": 0}
{"id": "eqasc_validation_980", "prediction": "all x.(Flower(x) -> SecretesNectar(x))", "score": 0}
{"id": "eqasc_validation_980", "prediction": "all x y.((Flower(x) & Nectar(y)) -> Secretes(x,y))", "score": 0}
{"id": "eqasc_validation_980", "prediction": "all x y z.((Flower(x) & Nectar(y) & Nectar(z)) -> Secretes(x,y,z))", "score": 0}
{"id": "eqasc_validation_980", "prediction": "all x y.((Flower(x) & Nectar(y)) -> Secrete(x,y))", "score": 0}
{"id": "eqasc_validation_980", "prediction": "all x y z.((Flower(x) & Nectar(y) & Nectar(z)) -> Secretes(x,y))", "score": 0}
{"id": "eqasc_validation_980", "prediction": "all x.(Flower(x) -> SecreteNectar(x))", "score": 0}
{"id": "eqasc_validation_980", "prediction": "all x y z.((Flower(x) & Nectar(y) & Nectar(z)) -> Secrete(x,y,z))", "score": 0}
{"id": "eqasc_validation_980", "prediction": "all x y z.((Flower(x) & Nectar(y) & Flower(z)) -> Secretes(x,y,z))", "score": 0}
{"id": "eqasc_validation_980", "prediction": "all x y.((Flower(x) & Nectar(y)) -> Secrets(x,y))", "score": 0}
{"id": "eqasc_validation_980", "prediction": "all x y.((Flower(x) & Nectar(y)) -> SecretedBy(x,y))", "score": 0}
{"id": "eqasc_validation_980", "prediction": "all x y z.((Flower(x) & Nectar(y) & Nectar(z) & Secretes(x,y,z)) -> Secretes(x,y,z))", "score": 0}
{"id": "eqasc_validation_980", "prediction": "all x y z.((Flower(x) & Nectar(y) & Nectar(z) & Secretes(x,y,z)) -> Secretes(x,y))", "score": 0}
{"id": "eqasc_validation_980", "prediction": "all x y z.((Flower(x) & Nectar(y) & Nectar(z) & Secretes(x,y)) -> Secretes(x,z))", "score": 0}
{"id": "eqasc_validation_980", "prediction": "all x y.((Flower(x) & Nectar(y) & Secretes(x,y)) -> Secretes(x,y))", "score": 0}
{"id": "eqasc_validation_980", "prediction": "all x.(Flower(x) -> SecretsNectar(x))", "score": 0}
{"id": "eqasc_validation_980", "prediction": "all x y.((Flower(x) & Flower(y)) -> SecretesNectar(x,y))", "score": 0}
{"id": "eqasc_validation_981", "prediction": "all x y.((Bee(x) & FlowerSecrétion(y)) -> ConvertsToHoney(x,y))", "score": 0}
{"id": "eqasc_validation_981", "prediction": "all x y z.((Bee(x) & FlowerSecrétion(y) & Honey(z)) -> ConvertsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_981", "prediction": "all x y z.((Bee(x) & Flower(y) & Honey(z)) -> ConvertsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_981", "prediction": "all x y z.((Bee(x) & FlowerSection(y) & Honey(z)) -> ConvertsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_981", "prediction": "all x y z.((Bee(x) & FlowerSecrétion(y) & Honey(z)) -> ConvertsInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_981", "prediction": "all x y.((Bee(x) & FlowerSecrétion(y)) -> ConvertsIntoHoney(x,y))", "score": 0}
{"id": "eqasc_validation_981", "prediction": "all x y z.((Bee(x) & FlowerSecretion(y) & Honey(z)) -> ConvertsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_981", "prediction": "all x y.((Bee(x) & FlowerSecretion(y)) -> ConvertsToHoney(x,y))", "score": 0}
{"id": "eqasc_validation_981", "prediction": "all x y.((Bee(x) & Flower(y)) -> ConvertsToHoney(x,y))", "score": 0}
{"id": "eqasc_validation_981", "prediction": "all x y.((Bee(x) & FlowerSection(y)) -> ConvertsToHoney(x,y))", "score": 0}
{"id": "eqasc_validation_981", "prediction": "all x y z.((Bee(x) & FlowerSecrétion(y) & Honey(z)) -> Converts(x,y,z))", "score": 0}
{"id": "eqasc_validation_981", "prediction": "all x y z.((Bee(x) & FlowerSection(y) & Honey(z)) -> ConvertsInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_981", "prediction": "all x y z.((Bee(x) & Flower(y) & Honey(z)) -> ConvertsInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_981", "prediction": "all x y.((Bee(x) & FlowerSecrétion(y) & Honey(y)) -> ConvertsTo(x,y))", "score": 0}
{"id": "eqasc_validation_981", "prediction": "all x.(Bee(x) -> (ConvertsFlowerSection(x) & ProducesHoney(x)))", "score": 0}
{"id": "eqasc_validation_981", "prediction": "all x y.((Bee(x) & FlowerSecretion(y)) -> ConvertsIntoHoney(x,y))", "score": 0}
{"id": "eqasc_validation_982", "prediction": "all x.((Tea(x) & Honey(x)) -> Good(x))", "score": 0}
{"id": "eqasc_validation_982", "prediction": "all x.((Tea(x) & HasHoney(x)) -> Good(x))", "score": 0}
{"id": "eqasc_validation_982", "prediction": "all x y.((Tea(x) & Honey(y)) -> Good(x))", "score": 0}
{"id": "eqasc_validation_982", "prediction": "all x y.((Tea(x) & Honey(y)) -> Good(x,y))", "score": 0}
{"id": "eqasc_validation_982", "prediction": "all x y.((Tea(x) & Honey(y) & Has(x,y)) -> Good(x))", "score": 0}
{"id": "eqasc_validation_982", "prediction": "all x.((Tea(x) & WithHoney(x)) -> Good(x))", "score": 0}
{"id": "eqasc_validation_982", "prediction": "all x.((Tea(x) & Honey(y)) -> Good(x))", "score": 0}
{"id": "eqasc_validation_982", "prediction": "all x.(Tea(x) & HasHoney(x)) -> Good(x))", "score": -1}
{"id": "eqasc_validation_982", "prediction": "all x y z.((Tea(x) & Honey(y) & Tea(z)) -> Good(x))", "score": 0}
{"id": "eqasc_validation_982", "prediction": "all x y z.((Tea(x) & Honey(y) & Tea(z)) -> Good(x,y,z))", "score": 0}
{"id": "eqasc_validation_982", "prediction": "all x.((Tea(x) & ContainsHoney(x)) -> Good(x))", "score": 0}
{"id": "eqasc_validation_982", "prediction": "All x.((Tea(x) & Honey(x)) -> Good(x))", "score": -1}
{"id": "eqasc_validation_982", "prediction": "all x y z.((Tea(x) & Honey(y) & Tea(z)) -> Good(x,y))", "score": 0}
{"id": "eqasc_validation_982", "prediction": "all x.((Tea(x) & Honig(x)) -> Good(x))", "score": 0}
{"id": "eqasc_validation_983", "prediction": "all x y z.((Bee(x) & Nectar(y) & Tea(z)) -> ConvertsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_983", "prediction": "all x y.((Bee(x) & Nectar(y)) -> ConvertsToTea(x,y))", "score": 0}
{"id": "eqasc_validation_983", "prediction": "all x y z.((Bee(x) & Nectar(y) & Tea(z)) -> ConvertsInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_983", "prediction": "all x y z.((Bee(x) & Nectar(y) & Tea(z)) -> Converts(x,y,z))", "score": 0}
{"id": "eqasc_validation_983", "prediction": "all x y z.((Bee(x) & Nectar(y) & Tea(z)) -> ConvertsFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_983", "prediction": "all x y.((Bee(x) & Nectar(y)) -> ConvertsTo(x,y))", "score": 0}
{"id": "eqasc_validation_983", "prediction": "all x y z.((Bee(x) & Nectar(y) & Tea(z)) -> ConvertsToNectar(x,y,z))", "score": 0}
{"id": "eqasc_validation_983", "prediction": "all x.(Bee(x) -> (ConvertsNectar(x) & Tea(x)))", "score": 0}
{"id": "eqasc_validation_983", "prediction": "all x y.((Bee(x) & Nectar(y)) -> ConvertsIntoTea(x,y))", "score": 0}
{"id": "eqasc_validation_983", "prediction": "all x.(Bee(x) -> ConvertsNectarToTea(x))", "score": 0}
{"id": "eqasc_validation_983", "prediction": "all x.(Bee(x) -> (ConvertsNectarToTea(x) & ForTea(x)))", "score": 0}
{"id": "eqasc_validation_983", "prediction": "all x y.((Bee(x) & Bee(y)) -> ConvertsNectarToTea(x,y))", "score": 0}
{"id": "eqasc_validation_983", "prediction": "all x y.((Bee(x) & Nectar(y)) -> ConvertsForTea(x,y))", "score": 0}
{"id": "eqasc_validation_983", "prediction": "all x y.((Bee(x) & Nectar(y)) -> (Converts(x,y) & Tea(y)))", "score": 0}
{"id": "eqasc_validation_983", "prediction": "all x y z w.((Bee(x) & Nectar(y) & Tea(z)) -> ConvertsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_983", "prediction": "all x y.((Bee(x) & Nectar(y)) -> ConvertsInto(x,y))", "score": 0}
{"id": "eqasc_validation_984", "prediction": "all x.(Bee(x) -> (MovesFromFlowerToFlower(x) & GathersNectar(x)))", "score": 0}
{"id": "eqasc_validation_984", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> (MovesFromTo(x,y,z) & GathersNectar(x)))", "score": 0}
{"id": "eqasc_validation_984", "prediction": "all x y.((Bee(x) & Flower(y)) -> (MovesFromTo(x,y) & GathersNectar(x)))", "score": 0}
{"id": "eqasc_validation_984", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> MovesFromTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_984", "prediction": "all x y.((Bee(x) & Flower(y)) -> MovesFromTo(x,y))", "score": 0}
{"id": "eqasc_validation_984", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> (Moves(x,y,z) & GathersNectar(x)))", "score": 0}
{"id": "eqasc_validation_984", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> (MovesFromTo(x,y) & GathersNectar(x)))", "score": 0}
{"id": "eqasc_validation_984", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> (MovesFromTo(x,y) & GathersNectar(x,z)))", "score": 0}
{"id": "eqasc_validation_984", "prediction": "all x y.((Bee(x) & Flower(y)) -> (Moves(x,y) & GathersNectar(x)))", "score": 0}
{"id": "eqasc_validation_984", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> (MovesTo(x,y,z) & GathersNectar(x)))", "score": 0}
{"id": "eqasc_validation_984", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> (MovesFromTo(x,y,z) & GathersNectar(x,y)))", "score": 0}
{"id": "eqasc_validation_984", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> (Moves(x,y) & GathersNectar(x)))", "score": 0}
{"id": "eqasc_validation_984", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z) & MovesFromTo(x,y,z)) -> GathersNectar(x))", "score": 0}
{"id": "eqasc_validation_984", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> (Moves(x,y) & GathersNectar(x,z)))", "score": 0}
{"id": "eqasc_validation_984", "prediction": "all x y.((Bee(x) & Flower(y)) -> (MovesFromTo(x,y) & GathersNectar(x,y)))", "score": 0}
{"id": "eqasc_validation_984", "prediction": "all x y.((Bee(x) & Flower(y)) -> (MovesTo(x,y) & GathersNectar(x)))", "score": 0}
{"id": "eqasc_validation_985", "prediction": "all x y.((Bee(x) & Flower(y)) -> MakesHoneyFrom(x,y))", "score": 0}
{"id": "eqasc_validation_985", "prediction": "all x y.((Bee(x) & Flower(y)) -> (MakesHoneyFrom(x,y) & GathersFrom(x,y)))", "score": 0}
{"id": "eqasc_validation_985", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> (MakesHoneyFrom(x,y) & GathersFrom(x,z)))", "score": 0}
{"id": "eqasc_validation_985", "prediction": "all x y.((Bee(x) & Flower(y) & GathersFrom(x,y)) -> MakesHoneyFrom(x,y))", "score": 0}
{"id": "eqasc_validation_985", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> MakesHoneyFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_985", "prediction": "all x y z.((Bee(x) & Honey(y) & Flower(z)) -> (MakesFrom(x,y) & GathersFrom(x,z)))", "score": 0}
{"id": "eqasc_validation_985", "prediction": "all x y z.((Bee(x) & Honey(y) & Flower(z) & GathersFrom(x,y,z)) -> MakesFrom(x,y))", "score": 0}
{"id": "eqasc_validation_985", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z) & GathersFrom(x,y,z)) -> MakesHoneyFrom(x,y))", "score": 0}
{"id": "eqasc_validation_985", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> (MakesHoneyFrom(x,y,z) & GathersFrom(x,y,z)))", "score": 0}
{"id": "eqasc_validation_985", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z) & GathersFrom(x,y,z)) -> MakesHoneyFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_985", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> (MakesHoneyFrom(x,y,z) & GathersFrom(x,y)))", "score": 0}
{"id": "eqasc_validation_985", "prediction": "all x y.((Bee(x) & Flower(y)) -> (MakesHoneyFromWhat(x,y) & GathersFrom(x,y)))", "score": 0}
{"id": "eqasc_validation_985", "prediction": "all x y z.((Bee(x) & Honey(y) & Flower(z) & GathersFrom(x,y,z)) -> MakesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_985", "prediction": "all x y.((Bee(x) & Flower(y)) -> MakesHoneyFromWhat(x,y))", "score": 0}
{"id": "eqasc_validation_985", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> (MakesHoneyFromWhat(x,y) & GathersFrom(x,z)))", "score": 0}
{"id": "eqasc_validation_985", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> MakesHoneyFromWhat(x,y,z))", "score": 0}
{"id": "eqasc_validation_986", "prediction": "all x.(Nectar(x) -> (InFlowers(x) | InTrees(x) | InHummingbirdFeeders(x)))", "score": 0}
{"id": "eqasc_validation_986", "prediction": "all x.(Nectar(x) -> (InFlowers(x) & InTrees(x) & InHummingbirdFeeders(x)))", "score": 0}
{"id": "eqasc_validation_986", "prediction": "all x y.((Nectar(x) & (Flower(y) | Tree(y) | HummingbirdFeeder(y))) -> In(x,y))", "score": 0}
{"id": "eqasc_validation_986", "prediction": "all x.(Nectar(x) -> (InFlowers(x) | InTrees(x) | InHummingbirdFeeder(x)))", "score": 0}
{"id": "eqasc_validation_986", "prediction": "all x.(Nectar(x) -> (InFlowers(x) | InTrees(x) | InHumidbirdFeeders(x)))", "score": 0}
{"id": "eqasc_validation_986", "prediction": "all x y z.((Nectar(x) & (Flower(y) | Tree(y) | HummingbirdFeeder(z))) -> In(x,y,z))", "score": 0}
{"id": "eqasc_validation_986", "prediction": "(InFlowers(Nectar) & InTrees(Nectar) & InHummingbirdFeeders(Nectar))", "score": 0}
{"id": "eqasc_validation_986", "prediction": "all x y z.((Nectar(x) & (Flower(y) | Tree(y) | HummingbirdFeeder(z))) -> In(x,y))", "score": 0}
{"id": "eqasc_validation_986", "prediction": "(InFlowers(nectar) | InTrees(nectar) | InHummingbirdFeeders(nectar)))", "score": -1}
{"id": "eqasc_validation_986", "prediction": "(InFlowers(nectar) & InTrees(nectar) & InHummingbirdFeeders(nectar))", "score": 0}
{"id": "eqasc_validation_986", "prediction": "all x.(Nectar(x) -> (InFlowers(x) & InTrees(x) & InHummingbirdFeeder(x)))", "score": 0}
{"id": "eqasc_validation_986", "prediction": "(InFlowers(Nectar) | InTrees(Nectar) | InHummingbirdFeeders(Nectar)))", "score": -1}
{"id": "eqasc_validation_986", "prediction": "all x.(Nectar(x) -> exists y.(Flower(y) | Tree(y) | HummingbirdFeeder(y)) & In(x,y)))", "score": -1}
{"id": "eqasc_validation_986", "prediction": "all x y z.((Nectar(x) & Flower(y) & Tree(z) & HummingbirdFeeder(x)) -> In(x,y,z))", "score": 0}
{"id": "eqasc_validation_987", "prediction": "all x.(Bee(x) -> (GathersMaterial(x) & MakesHoneyFromFlowersAndTrees(x)))", "score": 0}
{"id": "eqasc_validation_987", "prediction": "all x y.((Bee(x) & (Flower(y) | Tree(y))) -> GathersMaterialToMakeHoney(x,y))", "score": 0}
{"id": "eqasc_validation_987", "prediction": "all x y.((Bee(x) & (Flower(y) | Tree(y))) -> GathersMaterialToMakeHoneyFrom(x,y))", "score": 0}
{"id": "eqasc_validation_987", "prediction": "all x.(Bee(x) -> (GathesMaterial(x) & MakesHoneyFromFlowersAndTrees(x)))", "score": 0}
{"id": "eqasc_validation_987", "prediction": "all x y.((Bee(x) & (Flower(y) | Tree(y))) -> GathersMaterial(x,y))", "score": 0}
{"id": "eqasc_validation_987", "prediction": "all x y z.((Bee(x) & (Flower(y) | Tree(y))) -> GathersMaterialToMakeHoney(x,y,z))", "score": 0}
{"id": "eqasc_validation_987", "prediction": "all x y z.((Bee(x) & (Flower(y) | Tree(y))) -> GathersMaterialToMakeHoneyFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_987", "prediction": "all x y z.((Bee(x) & (Flower(y) | Tree(z))) -> GathersMaterialToMakeHoney(x,y,z))", "score": 0}
{"id": "eqasc_validation_987", "prediction": "all x.(Bee(x) -> (GathersMaterial(x) & MakesHoney(x) & FromFlowersAndTrees(x)))", "score": 0}
{"id": "eqasc_validation_987", "prediction": "all x y z.((Bee(x) & Material(y) & (Flower(z) | Tree(z))) -> GathersToMakeHoneyFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_987", "prediction": "all x y z.((Bee(x) & Material(y) & (Flower(z) | Tree(z))) -> GathersToMakeHoney(x,y,z))", "score": 0}
{"id": "eqasc_validation_987", "prediction": "all x y z.((Bee(x) & (Flower(y) | Tree(z))) -> GathersMaterialToMakeHoneyFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_987", "prediction": "all x y z.((Bee(x) & Material(y) & (Flower(z) | Tree(z))) -> GathersForHoney(x,y,z))", "score": 0}
{"id": "eqasc_validation_987", "prediction": "all x y z.((Bee(x) & Flower(y) & Tree(z)) -> GathersMaterialToMakeHoney(x,y,z))", "score": 0}
{"id": "eqasc_validation_987", "prediction": "all x y z.((Bee(x) & (Flower(y) | Tree(y))) -> GathersMaterial(x,y))", "score": 0}
{"id": "eqasc_validation_987", "prediction": "all x y.((Bee(x) & Flower(y) & Tree(y)) -> GathersMaterialToMakeHoney(x,y))", "score": 0}
{"id": "eqasc_validation_988", "prediction": "all x.(Haggfish(x) -> (SectsLargeAmountsOfThickSlimyMucus(x)))", "score": 0}
{"id": "eqasc_validation_988", "prediction": "all x.(Haggfish(x) -> (SectsLargeMucus(x) & ThickMucus(x) & SlimyMucus(x)))", "score": 0}
{"id": "eqasc_validation_988", "prediction": "all x.(Haggfish(x) -> SecretesLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_988", "prediction": "all x.(Haggfish(x) -> (SectsLargeMucus(x) & ThickSlimyMucus(x)))", "score": 0}
{"id": "eqasc_validation_988", "prediction": "all x.(Haggfish(x) -> (SecretsLargeAmountsOfThickSlimyMucus(x)))", "score": 0}
{"id": "eqasc_validation_988", "prediction": "all x.(Hagfish(x) -> (SectsLargeAmountsOfThickSlimyMucus(x)))", "score": 0}
{"id": "eqasc_validation_988", "prediction": "all x.(Haggfish(x) -> (secretesLargeAmountsOfThickSlimyMucus(x)))", "score": 0}
{"id": "eqasc_validation_988", "prediction": "all x.(Haffish(x) -> (SectsLargeAmountsOfThickSlimyMucus(x)))", "score": 0}
{"id": "eqasc_validation_988", "prediction": "all x.(Hagfish(x) -> (SecretsLargeAmountsOfThickSlimyMucus(x)))", "score": 0}
{"id": "eqasc_validation_988", "prediction": "all x.(Hagfish(x) -> (SectsLargeMucus(x) & ThickSlimyMucus(x)))", "score": 0}
{"id": "eqasc_validation_988", "prediction": "all x.(Haggfish(x) -> SecretsLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_988", "prediction": "all x.(Hagfish(x) -> SecretesLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_988", "prediction": "all x.(Haggfish(x) -> (SectsLargeAmountsOfThickSlimyMucus(x) & SecretsLargeAmountsOfMucus(x)))", "score": 0}
{"id": "eqasc_validation_988", "prediction": "all x.(Haggfish(x) -> (SectsLargeAmountsOfThickSlimyMucus(x) | SecretsLargeAmountsOfMucus(x)))", "score": 0}
{"id": "eqasc_validation_988", "prediction": "all x.(Hagfish(x) -> (secretesLargeAmountsOfThickSlimyMucus(x)))", "score": 0}
{"id": "eqasc_validation_988", "prediction": "all x y.((Haggfish(x) & ThickSlimyMucus(y)) -> Secretes(x,y))", "score": 0}
{"id": "eqasc_validation_989", "prediction": "all x.(JawlessFish(x) -> (Lamprey(x) | Hagfish(x)))", "score": 0}
{"id": "eqasc_validation_989", "prediction": "all x y.((JawlessFish(x) & Lamprey(y) & Hagfish(y)) -> Jawless(x))", "score": 0}
{"id": "eqasc_validation_989", "prediction": "all x.(JawlessFish(x) -> (Lambrey(x) | Hagfish(x)))", "score": 0}
{"id": "eqasc_validation_989", "prediction": "all x y z.((JawlessFish(x) & Lamprey(y) & Hagfish(z)) -> (JawlessFish(x) & Lamprey(y) & Hagfish(z)))", "score": 0}
{"id": "eqasc_validation_989", "prediction": "all x y z.((JawlessFish(x) & Lamprey(y) & Hagfish(z)) -> (JawlessFish(x) & Includes(x,y) & Includes(x,z)))", "score": 0}
{"id": "eqasc_validation_989", "prediction": "all x y z.((JawlessFish(x) & Lamprey(y) & Hagfish(z)) -> (Includes(x,y) & Includes(x,z)))", "score": 0}
{"id": "eqasc_validation_989", "prediction": "all x y z.((JawlessFish(x) & Lamprey(y) & Hagfish(z)) -> (JawlessFish(x) | JawlessFish(x)))", "score": 0}
{"id": "eqasc_validation_989", "prediction": "all x.(JawlessFish(x) -> (IncludesLampreys(x) | IncludesHagfishes(x)))", "score": 0}
{"id": "eqasc_validation_989", "prediction": "all x y.((JawlessFish(x) & Lamprey(y) & Hagfish(y)) -> JawlessFish(x))", "score": 0}
{"id": "eqasc_validation_989", "prediction": "all x.((JawlessFish(x) & Lamprey(x) & Hagfish(x)) -> Jawless(x))", "score": 0}
{"id": "eqasc_validation_989", "prediction": "all x y.((JawlessFish(x) & Lamprey(y) & Hagfish(y)) -> (JawlessFish(x) & JawlessFish(x)))", "score": 0}
{"id": "eqasc_validation_989", "prediction": "all x.(JawlessFish(x) -> (Lampreys(x) | Hagfishes(x)))", "score": 0}
{"id": "eqasc_validation_989", "prediction": "all x y z.((JawlessFish(x) & Lamprey(y) & Hagfish(z)) -> (JawlessFish(x) | JawlessFish(x,y,z)))", "score": 0}
{"id": "eqasc_validation_989", "prediction": "all x y z.((JawlessFish(x) & Lamprey(y) & Hagfish(z)) -> Includes(x,y,z))", "score": 0}
{"id": "eqasc_validation_990", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_990", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfThickSlimyMuscus(x))", "score": 0}
{"id": "eqasc_validation_990", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfThickSmoothMucus(x))", "score": 0}
{"id": "eqasc_validation_990", "prediction": "exists x.(JawlessFish(x) & LargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_990", "prediction": "exists x.(JawlessFish(x) & SecretesLargeMucus(x))", "score": 0}
{"id": "eqasc_validation_990", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfThickMucus(x) & SlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_990", "prediction": "exists x.(JamlessFish(x) & SecretesLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_990", "prediction": "exists x.(JawlessFish(x) & secretesLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_990", "prediction": "exists x.(JawlessFish(x) & SeeksLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_990", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfThickSlamyMucus(x))", "score": 0}
{"id": "eqasc_validation_990", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfMucus(x))", "score": 0}
{"id": "eqasc_validation_990", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfThickSmoothMuscus(x))", "score": 0}
{"id": "eqasc_validation_990", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfThickSlammyMucus(x))", "score": 0}
{"id": "eqasc_validation_990", "prediction": "exists x.(JawlessFish(x) & ContainsLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_990", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfThickSmokyMucus(x))", "score": 0}
{"id": "eqasc_validation_990", "prediction": "exists x.(JawlessFish(x) & LargeAmountsOfThickSlimyMuscus(x))", "score": 0}
{"id": "eqasc_validation_991", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_991", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfThickSmoothMucus(x))", "score": 0}
{"id": "eqasc_validation_991", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfThickSlimyMuscus(x))", "score": 0}
{"id": "eqasc_validation_991", "prediction": "exists x.(JawlessFish(x) & SecretesLargeMucus(x))", "score": 0}
{"id": "eqasc_validation_991", "prediction": "exists x.(JawlessFish(x) & LargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_991", "prediction": "exists x.(JawlessFish(x) & secretesLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_991", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfThickMucus(x) & SlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_991", "prediction": "exists x.(JamlessFish(x) & SecretesLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_991", "prediction": "exists x.(JawlessFish(x) & SeeksLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_991", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfThickSlamyMucus(x))", "score": 0}
{"id": "eqasc_validation_991", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfThickSmoothMuscus(x))", "score": 0}
{"id": "eqasc_validation_991", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfThickSlammyMucus(x))", "score": 0}
{"id": "eqasc_validation_991", "prediction": "exists x.(JawlessFish(x) & SecretsLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_991", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfThickSleekMucus(x))", "score": 0}
{"id": "eqasc_validation_991", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfMucus(x))", "score": 0}
{"id": "eqasc_validation_991", "prediction": "exists x.(JawlessFish(x) & SecreteLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_992", "prediction": "all x.(Haggfish(x) -> (Marine(x) & Slimy(x) & FeedsOnCarrionAndInjuredFishes(x)))", "score": 0}
{"id": "eqasc_validation_992", "prediction": "all x.(Haggfish(x) -> (Marine(x) & Slimy(x) & FeedsOnCarrion(x) & FeedsOnInjuredFishes(x)))", "score": 0}
{"id": "eqasc_validation_992", "prediction": "all x.(Haggfish(x) -> (Marine(x) & Slimy(x) & FeedsOnCarrionAndInjuredFish(x)))", "score": 0}
{"id": "eqasc_validation_992", "prediction": "all x.(Haggfish(x) -> (Marine(x) & Slimy(x) & FeedsOnCarrion(x) & FeedsOnInjured(x)))", "score": 0}
{"id": "eqasc_validation_992", "prediction": "all x.(Haggfish(x) -> (Marine(x) & Slimy(x) & FeedsOnCarnivorousAndInjuredFishes(x)))", "score": 0}
{"id": "eqasc_validation_992", "prediction": "all x.(Haggfish(x) -> (ElementsMarine(x) & Slimy(x) & FeedsOnCarrionAndInjuredFishes(x)))", "score": 0}
{"id": "eqasc_validation_992", "prediction": "all x.(Haggfish(x) -> (Marine(x) & Slimy(x) & FeedsOnCarrion(x) & FeedsOnInjuredFish(x)))", "score": 0}
{"id": "eqasc_validation_992", "prediction": "all x.(Haggfish(x) -> ((Marine(x) & Slimy(x) & FeedsOnCarrion(x) & FeedsOnInjuredFishes(x))))", "score": 0}
{"id": "eqasc_validation_992", "prediction": "all x.(Haggfish(x) -> (Marine(x) & Slimy(x) & FeedsOn(x,carrion) & FeedsOn(x,injured)))", "score": 0}
{"id": "eqasc_validation_992", "prediction": "all x.(Haggfish(x) -> ((Marine(x) & Slimy(x) & FeedsOnCarrion(x) & FeedsOnInjured(x))))", "score": 0}
{"id": "eqasc_validation_992", "prediction": "all x.(Haggfish(x) -> (EntirelyMarine(x) & Slimy(x) & FeedsOnCarrionAndInjuredFishes(x)))", "score": 0}
{"id": "eqasc_validation_992", "prediction": "all x.(Haffish(x) -> (Marine(x) & Slimy(x) & FeedsOnCarrionAndInjuredFishes(x)))", "score": 0}
{"id": "eqasc_validation_992", "prediction": "all x.(Haggfish(x) -> (ExclusivelyMarine(x) & Slimy(x) & FeedsOnCarrionAndInjuredFishes(x)))", "score": 0}
{"id": "eqasc_validation_992", "prediction": "all x.(Haggfish(x) -> (CompletelyMarine(x) & Slimy(x) & FeedsOnCarrionAndInjuredFishes(x)))", "score": 0}
{"id": "eqasc_validation_992", "prediction": "all x.(Hagfish(x) -> (Marine(x) & Slimy(x) & FeedsOnCarrionAndInjuredFishes(x)))", "score": 0}
{"id": "eqasc_validation_993", "prediction": "all x.(Haggfish(x) -> SecretesLargeAmountsOfMucus(x))", "score": 0}
{"id": "eqasc_validation_993", "prediction": "all x.(Hagfish(x) -> SecretesLargeAmountsOfMucus(x))", "score": 0}
{"id": "eqasc_validation_993", "prediction": "all x y.((Haggfish(x) & Mucus(y)) -> Secretes(x,y))", "score": 0}
{"id": "eqasc_validation_993", "prediction": "all x y.((Haggfish(x) & Mucus(y)) -> SecretesLargeAmounts(x,y))", "score": 0}
{"id": "eqasc_validation_993", "prediction": "all x y z.((Haggfish(x) & Mucus(y) & Mucus(z)) -> Secretes(x,y,z))", "score": 0}
{"id": "eqasc_validation_993", "prediction": "all x.(Haggfish(x) -> secretesLargeAmountsOfMucus(x))", "score": 0}
{"id": "eqasc_validation_993", "prediction": "all x.(Haggfish(x) -> SecretesLargeAmountsOfMuscus(x))", "score": 0}
{"id": "eqasc_validation_993", "prediction": "all x.(Haffish(x) -> SecretesLargeAmountsOfMucus(x))", "score": 0}
{"id": "eqasc_validation_993", "prediction": "all x y.((Hagfish(x) & Mucus(y)) -> SecretesLargeAmounts(x,y))", "score": 0}
{"id": "eqasc_validation_993", "prediction": "all x.(Haggfish(x) -> SecretesLargeMucus(x))", "score": 0}
{"id": "eqasc_validation_993", "prediction": "all x y.((Hagfish(x) & Mucus(y)) -> Secretes(x,y))", "score": 0}
{"id": "eqasc_validation_993", "prediction": "all x.(Haggfish(x) -> SecretesLargeAmountsOfHucus(x))", "score": 0}
{"id": "eqasc_validation_993", "prediction": "all x.(Haggfish(x) -> SecreteLargeAmountsOfMucus(x))", "score": 0}
{"id": "eqasc_validation_993", "prediction": "all x.(Hagfish(x) -> secretesLargeAmountsOfMucus(x))", "score": 0}
{"id": "eqasc_validation_993", "prediction": "all x.(Haggfish(x) -> (SectsLargeAmountsOfMucus(x)))", "score": 0}
{"id": "eqasc_validation_993", "prediction": "all x.(Haggfish(x) -> SeeksLargeAmountsOfMucus(x))", "score": 0}
{"id": "eqasc_validation_994", "prediction": "all x.(MarineEnvironment(x) -> HasThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_994", "prediction": "all x y.((MarineEnvironment(x) & MarineEnvironment(y)) -> HasThickSlimyMucus(x,y))", "score": 0}
{"id": "eqasc_validation_994", "prediction": "all x.(MarineEnvironment(x) -> (HasThickSlimyMucus(x) & HasThickSlimyMucus(x)))", "score": 0}
{"id": "eqasc_validation_994", "prediction": "all x.(MarineEnvironment(x) -> HasThickSmoothyMucus(x))", "score": 0}
{"id": "eqasc_validation_994", "prediction": "all x y.((MarineEnvironment(x) & MarineEnvironment(y)) -> HasThickSmoothyMucus(x,y))", "score": 0}
{"id": "eqasc_validation_994", "prediction": "all x y z.((MarineEnvironment(x) & ThickSlimyMucus(y) & MarineEnvironment(z)) -> HasMucus(x,y,z))", "score": 0}
{"id": "eqasc_validation_994", "prediction": "all x y.((MarineEnvironment(x) & MarineEnvironment(y)) -> (HasThickSlimyMucus(x,y) & HasThickSlimyMucus(x,y)))", "score": 0}
{"id": "eqasc_validation_994", "prediction": "all x y.((MarineEnvironment(x) & MarineEnvironment(y)) -> (HasThickSlimyMucus(x) & HasThickSlimyMucus(x)))", "score": 0}
{"id": "eqasc_validation_994", "prediction": "all x y z.((MarineEnvironment(x) & ThickSlimyMucus(y) & MarineEnvironment(z)) -> Has(x,y,z))", "score": 0}
{"id": "eqasc_validation_994", "prediction": "all x.(MarineEnvironment(x) -> (HasThickSlimyMucus(x) & HasThickSlimyMucus(x) & HasThickSlimyMucus(x)))", "score": 0}
{"id": "eqasc_validation_994", "prediction": "all x y.((MarineEnvironment(x) & ThickSlimyMucus(y)) -> HasMucus(x,y))", "score": 0}
{"id": "eqasc_validation_994", "prediction": "all x y.((MarineEnvironment(x) & MarineEnvironment(y)) -> HasThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_994", "prediction": "all x y z.((MarineEnvironment(x) & MarineEnvironment(y) & ThickSlimyMucus(z)) -> HasMucus(x,y,z))", "score": 0}
{"id": "eqasc_validation_994", "prediction": "all x y.((MarineEnvironment(x) & MarineEnvironment(y)) -> HasThickSlimyMuscus(x,y))", "score": 0}
{"id": "eqasc_validation_994", "prediction": "all x.(MarineEnvironment(x) -> (HasThickSlimyMucus(x) & HasSmoothMucus(x)))", "score": 0}
{"id": "eqasc_validation_994", "prediction": "all x.((MarineEnvironment(x) & ThickSlimyMucus(x)) -> HasMucus(x))", "score": 0}
{"id": "eqasc_validation_995", "prediction": "exists x.(LivingJawlessFish(x) & SeeksLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_995", "prediction": "exists x.(LivingJawlessFish(x) & SecretsLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_995", "prediction": "exists x.(JawlessFish(x) & SeeksLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_995", "prediction": "exists x.(JawlessFish(x) & LargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_995", "prediction": "exists x.(JawlessFish(x) & SecretsLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_995", "prediction": "exists x.(LivingJawlessFish(x) & SecretesLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_995", "prediction": "exists x.(LivingJawlessFish(x) & LargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_995", "prediction": "exists x.(LivingJawlessFish(x) & KnownForSpoilingLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_995", "prediction": "exists x.(LivingJawlessFish(x) & NotedForSecretingLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_995", "prediction": "exists x.(JawlessFish(x) & SpontaneousMucus(x) & ThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_995", "prediction": "exists x.(LivingJawlessFish(x) & SecretsLargeAmountsOfThickSlimyMuscus(x))", "score": 0}
{"id": "eqasc_validation_995", "prediction": "exists x.(LivingJawlessFish(x) & SeeksLargeAmountsOfThickSlimyMuscus(x))", "score": 0}
{"id": "eqasc_validation_995", "prediction": "exists x.(JawlessFish(x) & SeeksLargeAmountsOfThickSlimyMuscus(x))", "score": 0}
{"id": "eqasc_validation_995", "prediction": "exists x.(LivingJawlessFish(x) & SpontaneousMucus(x) & ThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_995", "prediction": "exists x.(LivingJawlessFish(x) & SeeksLargeAmountsOfThickSmoothMucus(x))", "score": 0}
{"id": "eqasc_validation_995", "prediction": "exists x.(LivingJawlessFish(x) & SecretsLargeAmountsOfThickSmoothMucus(x))", "score": 0}
{"id": "eqasc_validation_996", "prediction": "all x.((Haggfish(x) | Lamprey(x)) -> -HasHardTissues(x))", "score": 0}
{"id": "eqasc_validation_996", "prediction": "all x y.((Haggfish(x) & Lamprey(y)) -> -HasHardTissues(x,y))", "score": 0}
{"id": "eqasc_validation_996", "prediction": "all x.((Hagfish(x) | Lamprey(x)) -> -HasHardTissues(x))", "score": 0}
{"id": "eqasc_validation_996", "prediction": "all x.((Haggfish(x) | Lamprey(x)) -> NoHardTissues(x))", "score": 0}
{"id": "eqasc_validation_996", "prediction": "all x y.((Haggfish(x) | Lamprey(y)) -> -HasHardTissues(x,y))", "score": 0}
{"id": "eqasc_validation_996", "prediction": "all x.((Haggfish(x) | Lamprey(x)) -> -InternalHardTissues(x))", "score": 0}
{"id": "eqasc_validation_996", "prediction": "all x.(Haggfish(x) | Lamprey(x)) -> -HasHardTissues(x))", "score": -1}
{"id": "eqasc_validation_996", "prediction": "all x y.((Hagfish(x) & Lamprey(y)) -> -HasHardTissues(x,y))", "score": 0}
{"id": "eqasc_validation_996", "prediction": "all x.((Haggfish(x) | Lamprey(x)) -> -InnerHardTissues(x))", "score": 0}
{"id": "eqasc_validation_996", "prediction": "all x.((Haggfish(x) | Lamprey(x)) -> -HasInternalHardTissues(x))", "score": 0}
{"id": "eqasc_validation_996", "prediction": "all x y.((Haggfish(x) & Lamprey(y)) -> -HasHardTissues(x))", "score": 0}
{"id": "eqasc_validation_996", "prediction": "all x y.((Haggfish(x) | Lamprey(y)) -> -HasHardTissues(x))", "score": 0}
{"id": "eqasc_validation_996", "prediction": "all x y.((Haggfish(x) & Lamprey(y)) -> NoHardTissues(x,y))", "score": 0}
{"id": "eqasc_validation_996", "prediction": "all x.((Hagfish(x) | Lamprey(x)) -> NoHardTissues(x))", "score": 0}
{"id": "eqasc_validation_996", "prediction": "all x.((Haffish(x) | Lamprey(x)) -> -HasHardTissues(x))", "score": 0}
{"id": "eqasc_validation_996", "prediction": "all x y.((Haggfish(x) & Lamprey(y)) -> -HasHardTissue(x,y))", "score": 0}
{"id": "eqasc_validation_997", "prediction": "all x.((Creature(x) & -InternalHardTissues(x)) -> SecretesLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_997", "prediction": "all x.((Creature(x) & NoInternalHardTissues(x)) -> SecretesLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_997", "prediction": "all x.((Creature(x) & -HasInternalHardTissues(x)) -> SecretesLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_997", "prediction": "all x.((Creature(x) & NoHardTissues(x)) -> SecretesLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_997", "prediction": "all x.((Creature(x) & -HasHardTissues(x)) -> SecretesLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_997", "prediction": "all x.((Creature(x) & -HasInternalHardTissues(x)) -> SecretsLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_997", "prediction": "all x.((Creature(x) & -InnerHardTissues(x)) -> SecretesLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_997", "prediction": "all x.((Creature(x) & -InternalHardTissues(x)) -> SecretsLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_997", "prediction": "all x.((Creature(x) & -InternalHardTissues(x)) -> SecretesThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_997", "prediction": "all x.((Creature(x) & -InternalHardTissues(x)) -> SecretesLargeMucus(x))", "score": 0}
{"id": "eqasc_validation_997", "prediction": "all x.((Creature(x) & -InternalHardTissues(x)) -> SpontaneousMucus(x))", "score": 0}
{"id": "eqasc_validation_998", "prediction": "all x y.((Mountain(x) & Earthquake(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_998", "prediction": "all x y z.((Mountain(x) & Earthquake(y) & Earthquake(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_998", "prediction": "all x.(Mountain(x) -> FormedByEarthquakes(x))", "score": 0}
{"id": "eqasc_validation_998", "prediction": "all x.(Mountain(x) -> (FormedByEarthquakes(x) & FormedByEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_998", "prediction": "all x.(Mountain(x) -> (FormedByEarthquakes(x) | FormedByEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_998", "prediction": "all x y z.((Mountain(x) & Earthquake(y) & Earthquake(z)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_998", "prediction": "all x.(Mountain(x) -> (FormedByEarthquakes(x) & CausedByEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_998", "prediction": "all x y z.((Mountain(x) & Earthquake(y) & Earthquake(z)) -> (FormedBy(x,y) & FormedBy(x,z)))", "score": 0}
{"id": "eqasc_validation_998", "prediction": "all x y z w.((Mountain(x) & Earthquake(y) & Earthquake(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_998", "prediction": "all x y z.((Mountain(x) & Earthquake(y) & Earthquake(z)) -> (FormedBy(x,y,z) & FormedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_998", "prediction": "all x y.((Mountain(x) & Earthquake(y) & FormedBy(x,y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_998", "prediction": "all x.(Mountain(x) -> (FormedByEarthquakes(x) & ShapedByEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_998", "prediction": "all x y z.((Mountain(x) & Earthquake(y) & Earthquake(z)) -> FormsBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_998", "prediction": "all x y.((Mountain(x) & Earthquake(y)) -> FormsBy(x,y))", "score": 0}
{"id": "eqasc_validation_998", "prediction": "all x y z.((Mountain(x) & Earthquake(y) & Earthquake(z)) -> FormedBy(x,z))", "score": 0}
{"id": "eqasc_validation_998", "prediction": "all x.(Mountain(x) -> (FormedByEarthquake(x) & FormedByEarthquake(x)))", "score": 0}
{"id": "eqasc_validation_999", "prediction": "all x y.((Earthquake(x) & TectonicPlate(y)) -> CausedByMovement(x,y))", "score": 0}
{"id": "eqasc_validation_999", "prediction": "all x.(Earthquake(x) -> CausedByTectonicPlateMovement(x))", "score": 0}
{"id": "eqasc_validation_999", "prediction": "all x y.((Earthquake(x) & TectonicPlate(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_999", "prediction": "all x y z.((Earthquake(x) & TectonicPlate(y) & TectonicPlate(z)) -> CausedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_999", "prediction": "all x.(Earthquake(x) -> CausedByMovementOfTectonicPlates(x))", "score": 0}
{"id": "eqasc_validation_999", "prediction": "all x y z.((Earthquake(x) & TectonicPlate(y) & TectonicPlate(z)) -> CausedByMovement(x,y,z))", "score": 0}
{"id": "eqasc_validation_999", "prediction": "all x.(Earthquake(x) -> CausedByTectonicPlatesMovement(x))", "score": 0}
{"id": "eqasc_validation_999", "prediction": "all x.(Earthquake(x) -> CausedByTectonicPlates(x))", "score": 0}
{"id": "eqasc_validation_999", "prediction": "all x y z.((Earthquake(x) & TectonicPlate(y) & Plate(z)) -> CausedByMovement(x,y,z))", "score": 0}
{"id": "eqasc_validation_999", "prediction": "all x.(Earthquake(x) -> (CausedByTectonicPlateMovement(x) & CausedByTectonicPlateMovement(x)))", "score": 0}
{"id": "eqasc_validation_999", "prediction": "all x y z.((Earthquake(x) & TectonicPlate(y) & Plate(z)) -> CausedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_999", "prediction": "all x y.((Earthquake(x) & TectonicPlates(y)) -> CausedByMovement(x,y))", "score": 0}
{"id": "eqasc_validation_999", "prediction": "all x.(Earthquake(x) -> CausedByTectonicPlate(x))", "score": 0}
{"id": "eqasc_validation_999", "prediction": "all x y z.((Earthquake(x) & TectonicPlate(y) & Movement(z)) -> CausedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_999", "prediction": "all x.(Earthquake(x) -> (CausedByTectonicPlateMovement(x) & TectonicPlateMovement(x)))", "score": 0}
{"id": "eqasc_validation_1000", "prediction": "all x.(Mountain(x) -> FormedByMovementOfTectonicPlates(x))", "score": 0}
{"id": "eqasc_validation_1000", "prediction": "all x y.((Mountain(x) & TectonicPlate(y)) -> FormedByMovement(x,y))", "score": 0}
{"id": "eqasc_validation_1000", "prediction": "all x y.((Mountain(x) & TectonicPlate(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1000", "prediction": "all x y z.((Mountain(x) & TectonicPlate(y) & TectonicPlate(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1000", "prediction": "all x.(Mountain(x) -> (FormedByMovementOfTectonicPlates(x)))", "score": 0}
{"id": "eqasc_validation_1000", "prediction": "all x y z.((Mountain(x) & TectonicPlate(y) & TectonicPlate(z)) -> FormedByMovement(x,y,z))", "score": 0}
{"id": "eqasc_validation_1000", "prediction": "all x.(Mountain(x) -> (FormedByMovement(x) & TectonicPlates(x)))", "score": 0}
{"id": "eqasc_validation_1000", "prediction": "all x.(Mountain(x) -> (FormedByMovementOfTectonicPlates(x) | FormedByMovementOfTectonicPlates(x)))", "score": 0}
{"id": "eqasc_validation_1000", "prediction": "all x.(Mountain(x) -> (FormedByMovementOfTectonicPlates(x) & TectonicPlatesMovement(x)))", "score": 0}
{"id": "eqasc_validation_1000", "prediction": "all x y z.((Mountain(x) & TectonicPlate(y) & TectonicPlate(z)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1000", "prediction": "all x.(Mountain(x) -> (FormedByMovementOfTectonicPlates(x) & TectonicPlates(x)))", "score": 0}
{"id": "eqasc_validation_1000", "prediction": "all x y z.((Mountain(x) & TectonicPlate(y) & Plate(z)) -> FormedByMovement(x,y,z))", "score": 0}
{"id": "eqasc_validation_1000", "prediction": "all x.(Mountain(x) -> (FormedByMovementOfTectonicPlates(x) & MovementOfTectonicPlates(x)))", "score": 0}
{"id": "eqasc_validation_1000", "prediction": "all x y z.((Mountain(x) & TectonicPlate(y) & Plate(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1001", "prediction": "all x.(Earthquake(x) -> (MovingPlate(x) & ResultsOf(x,y)))", "score": 0}
{"id": "eqasc_validation_1001", "prediction": "all x y.((Earthquake(x) & MovingPlate(y)) -> ResultsOf(x,y))", "score": 0}
{"id": "eqasc_validation_1001", "prediction": "all x.(Earthquake(x) -> (ResultOfMovingPlates(x)))", "score": 0}
{"id": "eqasc_validation_1001", "prediction": "all x.(Earthquake(x) -> (MovingPlate(x) & Earthquake(x)))", "score": 0}
{"id": "eqasc_validation_1001", "prediction": "all x.(Earthquake(x) -> (ResultsOfMovingPlates(x)))", "score": 0}
{"id": "eqasc_validation_1001", "prediction": "all x.(Earthquake(x) -> (MovingPlate(x) & CausesEarthquake(x)))", "score": 0}
{"id": "eqasc_validation_1001", "prediction": "all x.(Earthquake(x) -> (Result(x) & MovingPlate(x)))", "score": 0}
{"id": "eqasc_validation_1001", "prediction": "all x.(Earthquake(x) -> (MovingPlate(x) & ResultOf(x,y)))", "score": 0}
{"id": "eqasc_validation_1001", "prediction": "all x y z.((Earthquake(x) & MovingPlate(y) & Plate(z)) -> ResultsOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1001", "prediction": "all x.(Earthquake(x) -> (MovingPlate(x) & Causes(x,y)))", "score": 0}
{"id": "eqasc_validation_1001", "prediction": "all x.(Earthquake(x) -> (ResultOfMovingPlates(x) & -ResultOfMovingPlates(x)))", "score": 0}
{"id": "eqasc_validation_1001", "prediction": "all x.(Earthquake(x) -> (ResultsOfMovingPlates(x) & -ResultsOfMovingPlates(x)))", "score": 0}
{"id": "eqasc_validation_1001", "prediction": "all x.(Earthquake(x) -> (MovingPlateResult(x) & Earthquake(x)))", "score": 0}
{"id": "eqasc_validation_1002", "prediction": "all x y.((Mountain(x) & MovingPlate(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1002", "prediction": "all x.(Mountain(x) -> (FormedByMovingPlates(x) & FormedByMovingPlates(x)))", "score": 0}
{"id": "eqasc_validation_1002", "prediction": "all x y z.((Mountain(x) & MovingPlate(y) & MovingPlate(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1002", "prediction": "all x.(Mountain(x) -> FormedByMovingPlates(x))", "score": 0}
{"id": "eqasc_validation_1002", "prediction": "all x.(Mountain(x) -> (FormedByMovingPlates(x) & MoveablePlates(x)))", "score": 0}
{"id": "eqasc_validation_1002", "prediction": "all x.(Mountain(x) -> (FormedByMovingPlates(x) & FormedByMovingPlates(x) & FormedByMovingPlates(x)))", "score": 0}
{"id": "eqasc_validation_1002", "prediction": "all x.(Mountain(x) -> (FormedByMovingPlates(x) | FormedByMovingPlates(x)))", "score": 0}
{"id": "eqasc_validation_1002", "prediction": "all x y z.((Mountain(x) & MovingPlate(y) & Plate(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1002", "prediction": "all x y z.((Mountain(x) & MovingPlate(y) & MovingPlate(z)) -> FormedByMountain(x,y,z))", "score": 0}
{"id": "eqasc_validation_1002", "prediction": "all x y z.((Mountain(x) & MovingPlate(y) & MovingPlate(z)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1002", "prediction": "all x.(Mountain(x) -> (FormedByMovingPlates(x) & MovingPlates(x)))", "score": 0}
{"id": "eqasc_validation_1002", "prediction": "all x y z.((Mountain(x) & MovingPlate(y) & MovingPlate(z)) -> FormedByMountains(x,y,z))", "score": 0}
{"id": "eqasc_validation_1002", "prediction": "all x y.((Mountain(x) & MovingPlate(y)) -> FormedByMountain(x,y))", "score": 0}
{"id": "eqasc_validation_1002", "prediction": "all x y.((Mountain(x) & MovingPlates(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1002", "prediction": "all x y.((Mountain(x) & MovingPlate(y)) -> FormedByMountains(x,y))", "score": 0}
{"id": "eqasc_validation_1003", "prediction": "all x y.((BigMountainBackground(x) & Himalayas(y)) -> CheckOut(x,y))", "score": 0}
{"id": "eqasc_validation_1003", "prediction": "all x y.((BigMountainBackground(x) & Himalayas(y)) -> Check(x,y))", "score": 0}
{"id": "eqasc_validation_1003", "prediction": "all x y.((BigMountainBackground(x) & Himalayas(y)) -> CheckedOut(x,y))", "score": 0}
{"id": "eqasc_validation_1003", "prediction": "all x y.((Himalayas(x) & BigMountainBackground(y)) -> CheckOut(x,y))", "score": 0}
{"id": "eqasc_validation_1003", "prediction": "all x y.((Himalayas(x) & BigMountainBackground(y)) -> Check(x,y))", "score": 0}
{"id": "eqasc_validation_1003", "prediction": "all x y.((BigMountainBackground(x) & Himalayas(y)) -> ChecksOut(x,y))", "score": 0}
{"id": "eqasc_validation_1003", "prediction": "all x y.((BigMountainBackground(x) & Himalayas(y)) -> Checkout(x,y))", "score": 0}
{"id": "eqasc_validation_1003", "prediction": "all x.((BigMountainBackground(x) & Himalayas(x)) -> Check(x))", "score": 0}
{"id": "eqasc_validation_1003", "prediction": "all x.((BigMountainBackground(x) & Himalayas(x)) -> CheckOut(x))", "score": 0}
{"id": "eqasc_validation_1003", "prediction": "all x.((BigMountainBackground(x) & Himalayas(x)) -> CheckedOut(x))", "score": 0}
{"id": "eqasc_validation_1003", "prediction": "all x.((Himalayas(x) & BigMountainBackground(x)) -> Check(x))", "score": 0}
{"id": "eqasc_validation_1003", "prediction": "all x.((Himalayas(x) & BigMountainBackground(x)) -> CheckOut(x,Himalayas))", "score": 0}
{"id": "eqasc_validation_1003", "prediction": "all x.((Himalayas(x) & BigMountainBackground(x)) -> CheckedOut(x))", "score": 0}
{"id": "eqasc_validation_1003", "prediction": "all x.(BigMountainBackground(x) -> CheckOutHimmalayas(x))", "score": 0}
{"id": "eqasc_validation_1003", "prediction": "all x.((Himalayas(x) & BigMountainBackground(x)) -> Check(x,y))", "score": 0}
{"id": "eqasc_validation_1003", "prediction": "all x.((Himalayas(x) & BigMountainBackground(x)) -> CheckOut(x,y))", "score": 0}
{"id": "eqasc_validation_1004", "prediction": "all x y z.((Himalayas(x) & Earthquake(y) & Earthquake(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1004", "prediction": "all x.(Himalaya(x) -> FormedByEarthquakes(x))", "score": 0}
{"id": "eqasc_validation_1004", "prediction": "all x y z.((Himalaya(x) & Earthquake(y) & Earthquake(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1004", "prediction": "all x y.((Himalayas(x) & Earthquake(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1004", "prediction": "all x y.((Himalaya(x) & Earthquake(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1004", "prediction": "all x.(Himalaya(x) -> (FormedByEarthquakes(x) & FormedByEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_1004", "prediction": "all x y.((Himachala(x) & Earthquake(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1004", "prediction": "all x y.((Hemalayas(x) & Earthquake(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1004", "prediction": "all x.(Himalayas(x) -> FormedByEarthquakes(x))", "score": 0}
{"id": "eqasc_validation_1004", "prediction": "all x.(Himalayas(x) -> (FormedByEarthquakes(x) & FormedByEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_1004", "prediction": "all x.(Hemalaya(x) -> FormedByEarthquakes(x))", "score": 0}
{"id": "eqasc_validation_1004", "prediction": "all x y.((Hemalaya(x) & Earthquake(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1004", "prediction": "all x.(Himalaya(x) -> (FormedByEarthquakes(x) & FormedByEarthquakes(x) & FormedByEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_1004", "prediction": "all x y z.((Himalayas(x) & Earthquake(y) & Earthquake(z)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1004", "prediction": "all x.(Hemalaya(x) -> (FormedByEarthquakes(x) & FormedByEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_1004", "prediction": "all x.(Himalayas(x) -> (FormedByEarthquakes(x) & FormedByEarthquakes(x) & FormedByEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_1005", "prediction": "all x.(Mountain(x) -> FormedByMovingPlates(x))", "score": 0}
{"id": "eqasc_validation_1005", "prediction": "all x y.((Mountain(x) & MovingPlate(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1005", "prediction": "all x.(Mountain(x) -> (FormedByMovingPlates(x)))", "score": 0}
{"id": "eqasc_validation_1005", "prediction": "all x y z.((Mountain(x) & MovingPlate(y) & Plate(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1005", "prediction": "all x y z.((Mountain(x) & MovingPlate(y) & MovingPlate(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1005", "prediction": "all x.(Mountain(x) -> FormedByMovingPlate(x))", "score": 0}
{"id": "eqasc_validation_1005", "prediction": "all x.(Mountain(x) -> exists y.(MovingPlate(y) & FormedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1005", "prediction": "all x.(Mountain(x) -> FormsByMovingPlates(x))", "score": 0}
{"id": "eqasc_validation_1005", "prediction": "all x y z.((Mountain(x) & MovingPlate(y) & Plate(z)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1005", "prediction": "all x y.((Mountain(x) & MovingPlate(y)) -> Formed(x,y))", "score": 0}
{"id": "eqasc_validation_1005", "prediction": "all x.(Mountain(x) -> (FormedByMovingPlate(x)))", "score": 0}
{"id": "eqasc_validation_1005", "prediction": "all x y z.((Mountain(x) & MovingPlate(y) & MovingPlate(z)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1005", "prediction": "all x y.((Mountain(x) & MovingPlate(y)) -> Forms(x,y))", "score": 0}
{"id": "eqasc_validation_1006", "prediction": "exists x.(Mountain(x) & FormedByUplifting(x))", "score": 0}
{"id": "eqasc_validation_1006", "prediction": "all x.(Mountain(x) -> FormedByUplifting(x))", "score": 0}
{"id": "eqasc_validation_1006", "prediction": "all x.(Mountain(x) -> FormedThroughUplifting(x))", "score": 0}
{"id": "eqasc_validation_1006", "prediction": "exists x.(Mountain(x) & FormedThroughUplifting(x))", "score": 0}
{"id": "eqasc_validation_1006", "prediction": "all x y.((Mountain(x) & Uplifting(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1006", "prediction": "all x y.((Mountain(x) & Uplifting(y)) -> Formed(x,y))", "score": 0}
{"id": "eqasc_validation_1006", "prediction": "all x y.((Mountain(x) & Uplifting(y)) -> FormedThrough(x,y))", "score": 0}
{"id": "eqasc_validation_1006", "prediction": "all x.(Mountain(x) -> (FormedByUplifting(x) | FormedByUplifting(x)))", "score": 0}
{"id": "eqasc_validation_1006", "prediction": "(exists x.(Mountain(x) & FormedByUplifting(x)))", "score": 0}
{"id": "eqasc_validation_1006", "prediction": "all x.(Mountain(x) -> (FormedByUplifting(x)))", "score": 0}
{"id": "eqasc_validation_1006", "prediction": "all x.(Mountain(x) -> (FormedByUplifting(x) & ManyMountains(x)))", "score": 0}
{"id": "eqasc_validation_1006", "prediction": "all x y.((Mountain(x) & Uplifting(y)) -> Forms(x,y))", "score": 0}
{"id": "eqasc_validation_1006", "prediction": "(exists x.(Mountain(x) & FormedThroughUplifting(x)))", "score": 0}
{"id": "eqasc_validation_1007", "prediction": "all x.(Earthquake(x) -> CausesUplifting(x))", "score": 0}
{"id": "eqasc_validation_1007", "prediction": "all x.(Earthquake(x) -> CanCauseUplifting(x))", "score": 0}
{"id": "eqasc_validation_1007", "prediction": "all x y.((Earthquake(x) & Earthquake(y)) -> CausesUplifting(x,y))", "score": 0}
{"id": "eqasc_validation_1007", "prediction": "all x y.((Earthquake(x) & Earthquake(y)) -> CanCauseUplifting(x,y))", "score": 0}
{"id": "eqasc_validation_1007", "prediction": "all x y.((Earthquake(x) & Uplifting(y)) -> CanCause(x,y))", "score": 0}
{"id": "eqasc_validation_1007", "prediction": "all x y z.((Earthquake(x) & Uplifting(y) & Earthquake(z)) -> CanCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_1007", "prediction": "all x y.((Earthquake(x) & CausesUplifting(y)) -> CanOccur(x,y))", "score": 0}
{"id": "eqasc_validation_1007", "prediction": "all x y.((Earthquake(x) & Uplifting(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_1007", "prediction": "all x.((Earthquake(x) & CausesUplifting(x)) -> CanOccur(x))", "score": 0}
{"id": "eqasc_validation_1007", "prediction": "all x y.((Earthquake(x) & Uplifting(y)) -> CanOccur(x,y))", "score": 0}
{"id": "eqasc_validation_1007", "prediction": "all x y.((Earthquake(x) & Earthquake(y)) -> CausesUpliftingToOccur(x,y))", "score": 0}
{"id": "eqasc_validation_1007", "prediction": "all x y z.((Earthquake(x) & Uplifting(y) & Earthquake(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1007", "prediction": "all x.(Earthquake(x) -> Uplifting(x))", "score": 0}
{"id": "eqasc_validation_1007", "prediction": "all x y.((Earthquake(x) & CausesUplifting(y)) -> CanCause(x,y))", "score": 0}
{"id": "eqasc_validation_1007", "prediction": "all x.(Earthquake(x) -> (CausesUplifting(x) | CausesUplifting(x)))", "score": 0}
{"id": "eqasc_validation_1007", "prediction": "all x y.((Earthquake(x) & CausesUplifting(x)) -> CanOccur(x,y))", "score": 0}
{"id": "eqasc_validation_1008", "prediction": "all x.(Mountain(x) -> GoesToAlps(x))", "score": 0}
{"id": "eqasc_validation_1008", "prediction": "all x y.((Mountain(x) & Alps(y)) -> GoesTo(x,y))", "score": 0}
{"id": "eqasc_validation_1008", "prediction": "all x y.((Mountain(x) & Alp(y)) -> GoesTo(x,y))", "score": 0}
{"id": "eqasc_validation_1008", "prediction": "all x y.((Mountain(x) & Alpine(y)) -> GoesTo(x,y))", "score": 0}
{"id": "eqasc_validation_1008", "prediction": "all x.((Mountain(x) & Alps(x)) -> GoesTo(x,y))", "score": 0}
{"id": "eqasc_validation_1008", "prediction": "all x y z.((Mountain(x) & Alps(y)) -> GoesTo(x,y))", "score": 0}
{"id": "eqasc_validation_1008", "prediction": "all x.((Mountain(x) & Alpine(x)) -> GoesTo(x,Alps))", "score": 0}
{"id": "eqasc_validation_1008", "prediction": "all x y z.((Mountain(x) & Alps(y) & Mountain(z)) -> GoesTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_1008", "prediction": "all x.((Mountain(x) & Alps(x)) -> GoesTo(x))", "score": 0}
{"id": "eqasc_validation_1008", "prediction": "all x y z.((Mountain(x) & Alp(y) & Mountain(z)) -> GoesTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_1008", "prediction": "all x.(Mountain(x) -> Alps(x))", "score": 0}
{"id": "eqasc_validation_1008", "prediction": "all x y.((Mountain(x) & Alps(y)) -> GoTo(x,y))", "score": 0}
{"id": "eqasc_validation_1008", "prediction": "all x.((Mountain(x) & Alps(y)) -> GoesTo(x,y))", "score": 0}
{"id": "eqasc_validation_1008", "prediction": "all x y z.((Mountain(x) & Alp(y)) -> GoesTo(x,y))", "score": 0}
{"id": "eqasc_validation_1009", "prediction": "all x y.((Alps(x) & Earthquake(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1009", "prediction": "all x y z.((Alps(x) & Earthquake(y) & Earthquake(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1009", "prediction": "all x.(Alps(x) -> FormedByEarthquakes(x))", "score": 0}
{"id": "eqasc_validation_1009", "prediction": "all x.(Alps(x) -> (FormedByEarthquakes(x) & FormedByEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_1009", "prediction": "all x y z.((Alp(x) & Earthquake(y) & Earthquake(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1009", "prediction": "all x.(Alps(x) -> (FormedByEarthquakes(x) | FormedByEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_1009", "prediction": "All x y z.((Alps(x) & Earthquake(y) & Earthquake(z)) -> FormedBy(x,y,z))", "score": -1}
{"id": "eqasc_validation_1009", "prediction": "all x y z.((Alps(x) & Earthquake(y) & Earthquake(z)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1009", "prediction": "All x y.((Alps(x) & Earthquake(y)) -> FormedBy(x,y))", "score": -1}
{"id": "eqasc_validation_1009", "prediction": "all x y z.((Alps(x) & Earthquake(y) & Earthquake(z)) -> (FormedBy(x,y) & FormedBy(x,z)))", "score": 0}
{"id": "eqasc_validation_1009", "prediction": "all x.(Alps(x) -> (FormedByEarthquakes(x) & FormedByEarthquakes(x) & FormedByEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_1009", "prediction": "all x.(Alps(x) -> (FormedByEarthquakes(x) & FormedByEarthquakes(x) & FormedByEarthquakes(x) & FormedByEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_1009", "prediction": "All x.(Alps(x) -> FormedByEarthquakes(x))", "score": -1}
{"id": "eqasc_validation_1009", "prediction": "all x y z.((Alps(x) & Earthquake(y) & Earthquake(z)) -> (FormedBy(x,y,z) & FormedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1009", "prediction": "all x y z.((Alps(x) & Earthquake(y) & Earthquake(z) & FormedBy(x,y,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1009", "prediction": "all x y.((Alp(x) & Earthquake(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1010", "prediction": "all x.((Rocks(x) & UpliftedAlongEarthquakeFaults(x)) -> Mountain(x))", "score": 0}
{"id": "eqasc_validation_1010", "prediction": "all x y z.((Rock(x) & EarthquakeFault(y) & Mountain(z)) -> UpliftedAlong(x,y,z))", "score": 0}
{"id": "eqasc_validation_1010", "prediction": "all x y.((Rock(x) & EarthquakeFault(y)) -> UpliftedAlong(x,y))", "score": 0}
{"id": "eqasc_validation_1010", "prediction": "all x y.((Rock(x) & EarthquakeFault(y)) -> UpliftedAlongToMountain(x,y))", "score": 0}
{"id": "eqasc_validation_1010", "prediction": "all x.((Rocks(x) & UpliftedAlongEarthquakeFaults(x)) -> MakesMountain(x))", "score": 0}
{"id": "eqasc_validation_1010", "prediction": "all x.((Rock(x) & UpliftedAlongEarthquakeFaults(x)) -> Mountain(x))", "score": 0}
{"id": "eqasc_validation_1010", "prediction": "all x y.((Rock(x) & EarthquakeFault(y) & UpliftedAlong(x,y)) -> Mountain(x))", "score": 0}
{"id": "eqasc_validation_1010", "prediction": "all x y z.((Rock(x) & EarthquakeFault(y) & Mountain(z)) -> UpliftedAlong(x,y))", "score": 0}
{"id": "eqasc_validation_1010", "prediction": "all x y z.((Rocks(x) & EarthquakeFault(y) & Mountain(z)) -> UpliftedAlong(x,y,z))", "score": 0}
{"id": "eqasc_validation_1010", "prediction": "all x y z.((Rock(x) & EarthquakeFault(y) & Mountain(z)) -> UpliftedAlongToMake(x,y,z))", "score": 0}
{"id": "eqasc_validation_1010", "prediction": "all x y.((Rock(x) & EarthquakeFault(y)) -> UpliftedToMountain(x,y))", "score": 0}
{"id": "eqasc_validation_1010", "prediction": "all x y.((Rock(x) & EarthquakeFault(y) & Uplifted(x,y)) -> Mountain(x))", "score": 0}
{"id": "eqasc_validation_1010", "prediction": "all x y.((Rock(x) & EarthquakeFault(y) & Uplifted(x,y)) -> MakesMountain(x))", "score": 0}
{"id": "eqasc_validation_1010", "prediction": "all x y.((Rock(x) & EarthquakeFault(y)) -> Uplifted(x,y))", "score": 0}
{"id": "eqasc_validation_1010", "prediction": "all x y.((Rock(x) & EarthquakeFault(y)) -> UpliftedAlongForm(x,y))", "score": 0}
{"id": "eqasc_validation_1010", "prediction": "all x y.((Rock(x) & EarthquakeFault(y) & UpliftedAlong(x,y)) -> MakesMountain(x))", "score": 0}
{"id": "eqasc_validation_1011", "prediction": "all x y.((Rocks(x) & Mountain(y)) -> LiftsToMake(x,y))", "score": 0}
{"id": "eqasc_validation_1011", "prediction": "all x y z.((Rocks(x) & Mountain(y) & Mountain(z)) -> LiftsToMake(x,y,z))", "score": 0}
{"id": "eqasc_validation_1011", "prediction": "all x y.((Rock(x) & Mountain(y)) -> LiftsToMake(x,y))", "score": 0}
{"id": "eqasc_validation_1011", "prediction": "all x y z.((Rock(x) & Mountain(y) & Mountain(z)) -> LiftsToMake(x,y,z))", "score": 0}
{"id": "eqasc_validation_1011", "prediction": "all x.(RocksLiftToMakeMountains(x) -> MakesMountains(x))", "score": 0}
{"id": "eqasc_validation_1011", "prediction": "all x y.((Rocks(x) & Mountain(y)) -> LiftToMake(x,y))", "score": 0}
{"id": "eqasc_validation_1011", "prediction": "all x y z.((Rocks(x) & Mountain(y) & Mountain(z)) -> (Lifts(x,y) & Makes(x,z)))", "score": 0}
{"id": "eqasc_validation_1011", "prediction": "all x y z.((Rock(x) & Mountain(y) & Mountain(z)) -> (Lifts(x,y) & Makes(x,z)))", "score": 0}
{"id": "eqasc_validation_1011", "prediction": "all x y z.((Rocks(x) & Mountain(y) & Mountains(z)) -> LiftsToMake(x,y,z))", "score": 0}
{"id": "eqasc_validation_1011", "prediction": "all x y.((Rocks(x) & Mountain(y)) -> (Lifts(x,y) & Makes(x,y)))", "score": 0}
{"id": "eqasc_validation_1011", "prediction": "all x y.((Rocks(x) & Mountains(y)) -> LiftsToMake(x,y))", "score": 0}
{"id": "eqasc_validation_1011", "prediction": "all x y z.((Rock(x) & Rock(y) & Mountain(z)) -> LiftsToMake(x,y,z))", "score": 0}
{"id": "eqasc_validation_1011", "prediction": "all x y z.((Rocks(x) & Mountain(y) & Mountain(z)) -> LiftToMake(x,y,z))", "score": 0}
{"id": "eqasc_validation_1011", "prediction": "all x y z.((Rock(x) & Mountain(y) & Mountains(z)) -> LiftsToMake(x,y,z))", "score": 0}
{"id": "eqasc_validation_1011", "prediction": "all x.(RocksLiftToMakeMountains(x) -> MakeMountains(x))", "score": 0}
{"id": "eqasc_validation_1011", "prediction": "all x y.((Rocks(x) & Rocks(y)) -> LiftsToMakeMountains(x,y))", "score": 0}
{"id": "eqasc_validation_1012", "prediction": "all x.(Earthquake(x) -> EarthquakeProne(x))", "score": 0}
{"id": "eqasc_validation_1012", "prediction": "all x.(Earthquake(x) -> EarthquakeProneCountry(x))", "score": 0}
{"id": "eqasc_validation_1012", "prediction": "all x.(Earthquake(x) -> (EarthquakeProne(x) & Japan(x)))", "score": 0}
{"id": "eqasc_validation_1012", "prediction": "all x.((Earthquake(x) & Japan(x)) -> EarthquakeProne(x))", "score": 0}
{"id": "eqasc_validation_1012", "prediction": "all x.((Earthquake(x) & EarthquakeProne(x)) -> Japan(x))", "score": 0}
{"id": "eqasc_validation_1012", "prediction": "all x.(Earthquake(x) -> (JapanEarthquakeProne(x) & EarthquakeProne(x)))", "score": 0}
{"id": "eqasc_validation_1012", "prediction": "all x y.((Earthquake(x) & Japan(y)) -> EarthquakeProne(x,y))", "score": 0}
{"id": "eqasc_validation_1012", "prediction": "all x.((Earthquake(x) & Earthquake(x)) -> JapanEarthquakeProneCountry(x))", "score": 0}
{"id": "eqasc_validation_1012", "prediction": "all x y.((Earthquake(x) & Japan(y)) -> EarthquakeProne(y))", "score": 0}
{"id": "eqasc_validation_1012", "prediction": "all x.((Earthquake(x) & EarthquakeProne(x)) -> EarthquakeProne(x))", "score": 0}
{"id": "eqasc_validation_1012", "prediction": "all x y.((Earthquake(x) & Earthquake(y)) -> EarthquakeProne(x,y))", "score": 0}
{"id": "eqasc_validation_1012", "prediction": "all x.((Earthquake(x) & Japan(y)) -> EarthquakeProne(x))", "score": 0}
{"id": "eqasc_validation_1012", "prediction": "all x.((Earthquake(x) & Japan(y)) -> EarthquakeProne(y))", "score": 0}
{"id": "eqasc_validation_1013", "prediction": "all x.(Japan(x) -> LotsOfMountains(x))", "score": 0}
{"id": "eqasc_validation_1013", "prediction": "all x.(Japan(x) -> HasMountains(x))", "score": 0}
{"id": "eqasc_validation_1013", "prediction": "all x.(Japan(x) -> HasLotsOfMountains(x))", "score": 0}
{"id": "eqasc_validation_1013", "prediction": "all x.(Japan(x) -> HasLotOfMountains(x))", "score": 0}
{"id": "eqasc_validation_1013", "prediction": "all x y.((Japan(x) & Mountain(y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_1013", "prediction": "all x.((Japan(x) & HasMountains(x)) -> HasMountains(x))", "score": 0}
{"id": "eqasc_validation_1013", "prediction": "all x.(Japan(x) -> (HasMountains(x) & HasMountains(x)))", "score": 0}
{"id": "eqasc_validation_1013", "prediction": "all x.((Japan(x) & LotsOfMountains(x)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_1013", "prediction": "all x.(Japan(x) -> (HasMountains(x) & LotsOfMountains(x)))", "score": 0}
{"id": "eqasc_validation_1013", "prediction": "all x.(Japan(x) -> HasManyMountains(x))", "score": 0}
{"id": "eqasc_validation_1013", "prediction": "all x.(Japan(x) -> HasLittleMountains(x))", "score": 0}
{"id": "eqasc_validation_1013", "prediction": "all x.(Japan(x) -> exists y.(Mountain(y) & Has(x,y))))", "score": -1}
{"id": "eqasc_validation_1013", "prediction": "all x.((Japan(x) & LotsOfMountains(x)) -> HasMountains(x))", "score": 0}
{"id": "eqasc_validation_1013", "prediction": "all x.(Japan(x) -> (HasMountains(x) & -HasMountains(x)))", "score": 0}
{"id": "eqasc_validation_1013", "prediction": "all x.(Japan(x) -> exists y.(Mountain(y) & InJapan(x,y))))", "score": -1}
{"id": "eqasc_validation_1013", "prediction": "all x.(Japan(x) -> exists y.(Mountain(y) & In(x,y))))", "score": -1}
{"id": "eqasc_validation_1014", "prediction": "all x y.((ChemicalDigestion(x) & SmallIntestine(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_1014", "prediction": "all x.(ChemicalDigestion(x) -> OccursInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_1014", "prediction": "all x.(ChemicalDigestion(x) -> OccursInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_1014", "prediction": "all x y z.((ChemicalDigestion(x) & SmallIntestine(y) & SmallIntestine(z)) -> OccursIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1014", "prediction": "all x y.((ChemicalDigestment(x) & SmallIntestine(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_1014", "prediction": "all x y.((ChemicalDigestion(x) & Smallintestine(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_1014", "prediction": "all x.(ChemicalDigestion(x) -> exists y.(Smallintestine(y) & OccursIn(x,y))))", "score": -1}
{"id": "eqasc_validation_1014", "prediction": "all x.(ChemicalDigestion(x) -> exists y.(Smallintestine(y) & OccursIn(x,y)))", "score": 0}
{"id": "eqasc_validation_1014", "prediction": "all x.(ChemicalDigestment(x) -> OccursInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_1014", "prediction": "all x y z.((ChemicalDigestion(x) & SmallIntestine(y) & SmallIntestine(z)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_1014", "prediction": "all x y z.((ChemicalDigestion(x) & SmallIntestine(y) & Smallintestine(z)) -> OccursIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1014", "prediction": "all x y.((ChemicalDigestion(x) & SmallIntestine(y)) -> Occurs(x,y))", "score": 0}
{"id": "eqasc_validation_1015", "prediction": "all x.(Enzyme(x) -> Chemical(x))", "score": 0}
{"id": "eqasc_validation_1015", "prediction": "all x.(Enzyme(x) -> (Chemical(x) & InvolvedInDigestion(x)))", "score": 0}
{"id": "eqasc_validation_1015", "prediction": "all x.(Enzyme(x) -> (InvolvedInDigestion(x) & Chemical(x)))", "score": 0}
{"id": "eqasc_validation_1015", "prediction": "all x.(Enzyme(x) -> (InvolvedInDigestion(x) | InvolvedInDigestion(x)))", "score": 0}
{"id": "eqasc_validation_1015", "prediction": "all x.(Enzyme(x) -> (Chemical(x) & InvolvesDigestion(x)))", "score": 0}
{"id": "eqasc_validation_1015", "prediction": "all x.(Enzyme(x) -> InvolvedInDigestion(x))", "score": 0}
{"id": "eqasc_validation_1015", "prediction": "all x.(Enzyme(x) -> (InvolvesDigestion(x) & Chemical(x)))", "score": 0}
{"id": "eqasc_validation_1015", "prediction": "all x.(Enzyme(x) -> (InvolvedInDigestion(x) & InvolvedInDigestion(x)))", "score": 0}
{"id": "eqasc_validation_1015", "prediction": "all x y.((Enzyme(x) & Digestion(y)) -> Chemical(x,y))", "score": 0}
{"id": "eqasc_validation_1015", "prediction": "all x.(Enzyme(x) -> (Chemistry(x) & InvolvedInDigestion(x)))", "score": 0}
{"id": "eqasc_validation_1015", "prediction": "all x.(Enzyme(x) -> ChemicalInDigestion(x))", "score": 0}
{"id": "eqasc_validation_1015", "prediction": "all x.(Enzyme(x) -> (Chemical(x) & InvolvesDigestment(x)))", "score": 0}
{"id": "eqasc_validation_1015", "prediction": "all x.(Enzyme(x) -> (ChemicalInDigestion(x) & ChemicalInDigestion(x)))", "score": 0}
{"id": "eqasc_validation_1015", "prediction": "all x.(Enzyme(x) -> (InvolvesDigestment(x) & Chemical(x)))", "score": 0}
{"id": "eqasc_validation_1015", "prediction": "all x.(Enzyme(x) -> (Chemical(x) & InvolvedInDigestment(x)))", "score": 0}
{"id": "eqasc_validation_1016", "prediction": "all x y.((Enzyme(x) & SmallIntestine(y)) -> InSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_1016", "prediction": "all x y.((Enzyme(x) & SmallIntestine(y)) -> InSmallintestine(x,y))", "score": 0}
{"id": "eqasc_validation_1016", "prediction": "all x y z.((Enzyme(x) & SmallIntestine(y) & SmallIntestine(z)) -> InSmallIntestine(x,y,z))", "score": 0}
{"id": "eqasc_validation_1016", "prediction": "all x y.((Enzyme(x) & SmallIndividual(y)) -> InSmallIndividual(x,y))", "score": 0}
{"id": "eqasc_validation_1016", "prediction": "all x y z.((Enzyme(x) & SmallIntestine(y) & SmallIntestine(z)) -> InSmallintestine(x,y,z))", "score": 0}
{"id": "eqasc_validation_1016", "prediction": "all x y z.((Enzyme(x) & SmallIntestine(y) & Enzyme(z)) -> InSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_1016", "prediction": "all x.(EnzymesInSmallintestine(x) -> InSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_1016", "prediction": "all x y z.((Enzyme(x) & SmallIntestine(y) & SmallIntestine(z)) -> InSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_1016", "prediction": "all x.(Enzyme(x) -> InSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_1016", "prediction": "all x y z.((Enzyme(x) & SmallIntestine(y) & Enzyme(z)) -> InSmallIntestine(y,z))", "score": 0}
{"id": "eqasc_validation_1016", "prediction": "all x y z.((Enzyme(x) & SmallIntestine(y) & Smallintestine(z)) -> InSmallIntestine(x,y,z))", "score": 0}
{"id": "eqasc_validation_1016", "prediction": "all x y.((Enzyme(x) & SmallIntestine(y)) -> In(x,y))", "score": 0}
{"id": "eqasc_validation_1016", "prediction": "all x y z.((Enzyme(x) & SmallIntestine(y) & SmallIntestine(z)) -> In(x,y,z))", "score": 0}
{"id": "eqasc_validation_1016", "prediction": "all x y.((Enzyme(x) & Smallintestine(y)) -> InSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_1016", "prediction": "all x y z.((Enzyme(x) & SmallIntestine(y) & Enzyme(z)) -> InSmallIntestine(x,y,z))", "score": 0}
{"id": "eqasc_validation_1016", "prediction": "all x y.((Enzyme(x) & SmallIntestine(y)) -> InSmallIgnitor(x,y))", "score": 0}
{"id": "eqasc_validation_1017", "prediction": "all x.(CeliacDisease(x) -> (DamagesSmallIntestine(x) & InterferesWithNutrientAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_1017", "prediction": "all x.(CeliacDisease(x) -> (DamagesSmallintestine(x) & InterferesWithNutrientAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_1017", "prediction": "all x y.((CeliacDisease(x) & SmallIntestine(y)) -> (Damages(x,y) & InterferesWithNutrientAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_1017", "prediction": "all x y.((CeliacDisease(x) & SmallIntestine(y)) -> (Damages(x,y) & InterferesWithNutrientAbsorption(x,y)))", "score": 0}
{"id": "eqasc_validation_1017", "prediction": "all x y z.((CeliacDisease(x) & SmallIntestine(y) & NutrientAbsorption(z)) -> (Damages(x,y) & Interferes(x,z)))", "score": 0}
{"id": "eqasc_validation_1017", "prediction": "all x y z.((CeliacDisease(x) & SmallIntestine(y) & NutrientAbsorption(z)) -> (Damages(x,y) & InterferesWith(x,z)))", "score": 0}
{"id": "eqasc_validation_1017", "prediction": "all x.(CeliacDisease(x) -> (DeterioratesSmallIntestine(x) & InterferesWithNutrientAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_1017", "prediction": "all x.(CeliacDisease(x) -> (DamagesSmallIntestine(x) & InterferencesWithNutrientAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_1017", "prediction": "all x.(CeliacDisease(x) -> (DamagesSmallIntestine(x) & InterfersWithNutrientAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_1017", "prediction": "all x y.((CeliacDisease(x) & SmallIntestine(y)) -> (Damages(x,y) & InterfersWithNutrientAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_1017", "prediction": "all x.(CeliacDisease(x) -> (DamagesSmallIndividual(x) & InterferesWithNutrientAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_1017", "prediction": "all x.(CeliacDisease(x) -> (DamagesSmallintestine(x) & InterferencesWithNutrientAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_1017", "prediction": "all x.(CeliacDisease(x) -> (DamageSmallIntestine(x) & InterferesWithNutrientAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_1017", "prediction": "all x.(CeliacDisease(x) -> (DamagesSmallIgnitor(x) & InterferesWithNutrientAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_1017", "prediction": "all x.(CeliacDiagnosis(x) -> (DamagesSmallIntestine(x) & InterferesWithNutrientAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_1018", "prediction": "all x.(CeliacDisease(x) -> InterferesWithChemicalDigestion(x))", "score": 0}
{"id": "eqasc_validation_1018", "prediction": "all x y.((CeliacDisease(x) & ChemicalDigestion(y)) -> InterferesWith(x,y))", "score": 0}
{"id": "eqasc_validation_1018", "prediction": "all x y.((CeliacDisease(x) & ChemicalDigestion(y)) -> Interferes(x,y))", "score": 0}
{"id": "eqasc_validation_1018", "prediction": "all x y z.((CeliacDisease(x) & ChemicalDigestion(y) & ChemicalDigestion(z)) -> InterferesWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1018", "prediction": "all x y.((CeliacDisease(x) & ChemicalDigestion(y)) -> InterferesWithDigestion(x,y))", "score": 0}
{"id": "eqasc_validation_1018", "prediction": "all x y z.((CeliacDisease(x) & ChemicalDigestion(y) & ChemicalDigestion(z)) -> Interferes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1018", "prediction": "all x y.((CeliacDisease(x) & ChemicalDigestment(y)) -> InterferesWith(x,y))", "score": 0}
{"id": "eqasc_validation_1018", "prediction": "all x.(CeliacDisease(x) -> InterferesWithChemicalDigestment(x))", "score": 0}
{"id": "eqasc_validation_1018", "prediction": "all x y z.((CeliacDisease(x) & ChemicalDigestion(y) & ChemicalDigestion(z)) -> InterferesWithDigestion(x,y,z))", "score": 0}
{"id": "eqasc_validation_1018", "prediction": "all x y.((CeliacDisease(x) & ChemicalDigestion(y)) -> InterferesWithDigestment(x,y))", "score": 0}
{"id": "eqasc_validation_1018", "prediction": "all x.(CeliacDisease(x) -> InterferesWithChemicalDigestration(x))", "score": 0}
{"id": "eqasc_validation_1018", "prediction": "all x y.((CeliacDisease(x) & ChemicalDigestment(y)) -> Interferes(x,y))", "score": 0}
{"id": "eqasc_validation_1019", "prediction": "all x.(SmallIntestine(x) -> (ChemicalDigestion(x) & AbsorptionOfFood(x)))", "score": 0}
{"id": "eqasc_validation_1019", "prediction": "all x y.((SmallIntestine(x) & ChemicalDigestion(y) & AbsorptionOfFood(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_1019", "prediction": "all x y z.((SmallIntestine(x) & ChemicalDigestion(y) & AbsorptionOfFood(z)) -> OccursIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1019", "prediction": "all x.((ChemicalDigestion(x) & AbsorptionOfFood(x)) -> OccursInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_1019", "prediction": "all x.(SmallIntestine(x) -> (ChemicalDigestion(x) & AbsorbsFood(x)))", "score": 0}
{"id": "eqasc_validation_1019", "prediction": "all x y.((SmallIntestine(x) & SmallIntestine(y)) -> (ChemicalDigestion(x,y) & AbsorptionOfFood(x,y)))", "score": 0}
{"id": "eqasc_validation_1019", "prediction": "all x.((ChemicalDigestion(x) & AbsorptionOfFood(x)) -> OccursInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_1019", "prediction": "all x y.((SmallIntestine(x) & SmallIntestine(y)) -> (ChemicalDigestment(x,y) & AbsorbsFood(x,y)))", "score": 0}
{"id": "eqasc_validation_1019", "prediction": "all x y.((SmallIntestine(x) & SmallIntestine(y)) -> (ChemicalDigestion(x,y) & AbsorbsFood(x,y)))", "score": 0}
{"id": "eqasc_validation_1019", "prediction": "all x y.((SmallIntestine(x) & ChemicalDigestion(x) & AbsorptionOfFood(x)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_1019", "prediction": "all x y.((SmallIntestine(x) & SmallIntestine(y)) -> (ChemicalDigestion(x) & AbsorptionOfFood(x)))", "score": 0}
{"id": "eqasc_validation_1019", "prediction": "all x y.((SmallIntestine(x) & SmallIntestine(y)) -> (ChemicalDigestion(x) & AbsorbsFood(x)))", "score": 0}
{"id": "eqasc_validation_1019", "prediction": "all x.(SmallIntestine(x) -> (ChemicalDigestment(x) & AbsorbsFood(x)))", "score": 0}
{"id": "eqasc_validation_1019", "prediction": "all x y.((SmallIntestine(x) & SmallIntestine(y)) -> (ChemicalDigestion(x,y) & Absorption(x,y)))", "score": 0}
{"id": "eqasc_validation_1019", "prediction": "all x y.((SmallIntestine(x) & SmallIntestine(y)) -> (ChemicalDigestment(x) & AbsorbsFood(x)))", "score": 0}
{"id": "eqasc_validation_1019", "prediction": "all x y.((SmallIntestine(x) & SmallIntestine(y)) -> (ChemicalDigestion(x) & AbsorptionOfFood(x,y)))", "score": 0}
{"id": "eqasc_validation_1020", "prediction": "all x y.((ChemicalAbsorption(x) & SmallIntestine(y)) -> HappensIn(x,y))", "score": 0}
{"id": "eqasc_validation_1020", "prediction": "all x y z.((ChemicalAbsorption(x) & SmallIntestine(y) & Smallintestine(z)) -> HappensIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1020", "prediction": "all x y z.((ChemicalAbsorption(x) & SmallIntestine(y) & SmallIntestine(z)) -> HappensIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1020", "prediction": "all x y.((ChemicalAbsorption(x) & Smallintestine(y)) -> HappensIn(x,y))", "score": 0}
{"id": "eqasc_validation_1020", "prediction": "all x y.((ChemicalAbsorption(x) & SmallIntestine(y)) -> HappensInSmallintestine(x,y))", "score": 0}
{"id": "eqasc_validation_1020", "prediction": "all x y.((ChemicalAbsorption(x) & SmallIntestine(y)) -> HappensInSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_1020", "prediction": "all x y z.((ChemicalAbsorption(x) & Smallintestine(y) & Smallintestine(z)) -> HappensIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1020", "prediction": "all x.(ChemicalAbsorption(x) -> HappensInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_1020", "prediction": "all x y z.((ChemicalAbsorption(x) & Smallintestine(y) & SmallIntestine(z)) -> HappensIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1020", "prediction": "all x.(ChemicalAbsorption(x) -> HappensInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_1020", "prediction": "all x y z.((ChemicalAbsorption(x) & SmallIntestine(y) & SmallIntestine(z)) -> HappensInSmallIntestine(x,y,z))", "score": 0}
{"id": "eqasc_validation_1020", "prediction": "all x y z.((ChemicalAbsorption(x) & SmallIntestine(y) & Smallintestine(z)) -> HappensIn(x,y))", "score": 0}
{"id": "eqasc_validation_1020", "prediction": "all x y z.((ChemicalAbsorption(x) & SmallIntestine(y) & SmallIntestine(z)) -> HappensInSmallintestine(x,y,z))", "score": 0}
{"id": "eqasc_validation_1020", "prediction": "all x y.((ChemicalAbsorption(x) & Smallintestine(y)) -> HappensInSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_1020", "prediction": "all x y z.((ChemicalAbsorption(x) & SmallIntestine(y) & Smallintestine(z)) -> HappensInSmallIntestine(x,y,z))", "score": 0}
{"id": "eqasc_validation_1020", "prediction": "all x y.((SmallIntestine(x) & Smallintestine(y)) -> ChemicalAbsorptionOccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_1021", "prediction": "all x.(ChemicalDigestion(x) -> BreaksComplexChemicalsIntoSimpleChemicals(x))", "score": 0}
{"id": "eqasc_validation_1021", "prediction": "all x y.((ChemicalDigestion(x) & ComplexChemicals(y)) -> BreaksIntoSimpleChemicals(x,y))", "score": 0}
{"id": "eqasc_validation_1021", "prediction": "all x y z.((ChemicalDigestion(x) & ComplexChemical(y) & SimpleChemical(z)) -> BreaksInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_1021", "prediction": "all x y z.((ChemicalDigestment(x) & ComplexChemical(y) & SimpleChemical(z)) -> BreaksInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_1021", "prediction": "all x y.((ChemicalDigestment(x) & ComplexChemicals(y)) -> BreaksIntoSimpleChemicals(x,y))", "score": 0}
{"id": "eqasc_validation_1021", "prediction": "all x y.((ChemicalDigestion(x) & ComplexChemical(y)) -> BreaksIntoSimpleChemicals(x,y))", "score": 0}
{"id": "eqasc_validation_1021", "prediction": "all x y.((ChemicalDigestment(x) & ComplexChemical(y)) -> BreaksIntoSimpleChemicals(x,y))", "score": 0}
{"id": "eqasc_validation_1021", "prediction": "all x y z.((Chemistry(x) & ComplexChemical(y) & SimpleChemical(z)) -> BreaksInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_1021", "prediction": "all x.(ChemicalDigestment(x) -> BreaksComplexChemicalsIntoSimpleChemicals(x))", "score": 0}
{"id": "eqasc_validation_1021", "prediction": "all x y.((Chemistry(x) & ComplexChemical(y)) -> BreaksIntoSimpleChemicals(x,y))", "score": 0}
{"id": "eqasc_validation_1021", "prediction": "all x.(Chemistry(x) -> BreaksComplexChemicalsIntoSimpleChemicals(x))", "score": 0}
{"id": "eqasc_validation_1021", "prediction": "all x.(ChemicalDigestration(x) -> BreaksComplexChemicalsIntoSimpleChemicals(x))", "score": 0}
{"id": "eqasc_validation_1021", "prediction": "all x y.((ChemicalDigestion(x) & ComplexChemicals(y)) -> BreaksToSimpleChemicals(x,y))", "score": 0}
{"id": "eqasc_validation_1022", "prediction": "all x y z.((ComplexChemical(x) & SimpleChemical(y) & SmallIntestine(z)) -> BreaksInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_1022", "prediction": "all x.((ComplexChemicals(x) & SimpleChemicals(x)) -> OccursInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_1022", "prediction": "all x.((ComplexChemicals(x) & SimpleChemicals(x)) -> OccursInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_1022", "prediction": "all x y.((ComplexChemical(x) & SimpleChemical(y)) -> OccursInSmallintestine(x,y))", "score": 0}
{"id": "eqasc_validation_1022", "prediction": "all x y.((ComplexChemical(x) & SimpleChemical(y)) -> BreaksInto(x,y))", "score": 0}
{"id": "eqasc_validation_1022", "prediction": "all x y.((ComplexChemical(x) & SimpleChemical(y)) -> OccursInSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_1022", "prediction": "all x.((ComplexChemicals(x) & BreaksIntoSimpleChemicals(x)) -> OccursInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_1022", "prediction": "all x.((ComplexChemicals(x) & BreaksIntoSimpleChemicals(x)) -> OccursInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_1022", "prediction": "all x.((ComplexChemical(x) & SimpleChemical(x)) -> OccursInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_1022", "prediction": "all x y.((ComplexChemical(x) & SimpleChemical(y)) -> OccursInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_1022", "prediction": "all x.((ComplexChemical(x) & SimpleChemical(x)) -> OccursInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_1022", "prediction": "all x y z.((ComplexChemical(x) & SimpleChemical(y) & SmallIntestine(z)) -> OccursIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1022", "prediction": "all x y.((ComplexChemical(x) & SimpleChemical(y)) -> OccursInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_1022", "prediction": "all x.((ComplexChemicals(x) & BreakingIntoSimpleChemicals(x)) -> OccursInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_1022", "prediction": "all x.((ComplexChemicals(x) & BreakingIntoSimpleChemicals(x)) -> OccursInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_1022", "prediction": "all x y z.((ComplexChemical(x) & SimpleChemical(y) & Smallintestine(z)) -> BreaksInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_1023", "prediction": "all x.((Enzyme(x) & InvolvedInDigestion(x)) -> OccursInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_1023", "prediction": "all x.((Enzyme(x) & InvolvedInDigestion(x)) -> OccursInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_1023", "prediction": "all x y z.((Enzyme(x) & Digestion(y) & SmallIntestine(z)) -> OccursIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1023", "prediction": "all x y z.((Enzyme(x) & Digestive(y) & SmallIntestine(z)) -> OccursIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1023", "prediction": "all x.(Enzyme(x) -> (InvolvedInDigestion(x) & OccursInSmallIntestine(x)))", "score": 0}
{"id": "eqasc_validation_1023", "prediction": "all x y z.((Enzyme(x) & Digestive(y) & SmallIntestine(z)) -> OccursInSmallIntestine(x,y,z))", "score": 0}
{"id": "eqasc_validation_1023", "prediction": "all x y.((Enzyme(x) & Digestion(y)) -> OccursInSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_1023", "prediction": "all x y.((Enzyme(x) & Digestive(y)) -> OccursInSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_1023", "prediction": "all x.(Enzyme(x) -> (InvolvedInDigestion(x) & OccursInSmallintestine(x)))", "score": 0}
{"id": "eqasc_validation_1023", "prediction": "all x y.((Enzyme(x) & Digestive(y)) -> (OccursInSmallIntestine(x,y) | OccursInSmallIntestine(x,y)))", "score": 0}
{"id": "eqasc_validation_1023", "prediction": "all x y.((Enzyme(x) & Digestive(y)) -> OccursInSmallintestine(x,y))", "score": 0}
{"id": "eqasc_validation_1023", "prediction": "all x y.((Enzyme(x) & Digestion(y)) -> (OccursInSmallIntestine(x,y) | OccursInSmallIntestine(x,y)))", "score": 0}
{"id": "eqasc_validation_1023", "prediction": "all x.((Enzyme(x) & InvolvedInDigestion(x)) -> (OccursInSmallIntestine(x) & MostlyInSmallIntestine(x)))", "score": 0}
{"id": "eqasc_validation_1023", "prediction": "all x.(Enzyme(x) -> (InterestsInDigestion(x) & OccursInSmallintestine(x)))", "score": 0}
{"id": "eqasc_validation_1023", "prediction": "all x.(Enzyme(x) & InvolvedInDigestion(x) -> OccursInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_1023", "prediction": "all x y.((Enzyme(x) & Digestive(y)) -> (OccursInSmallIntestine(x,y) & MostlyInSmallIntestine(x)))", "score": 0}
{"id": "eqasc_validation_1024", "prediction": "all x.(Lactobacillus(x) -> PresentInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_1024", "prediction": "all x.(Lactobacillus(x) -> PresentInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_1024", "prediction": "exists x.(Lactobacillus(x) & SmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_1024", "prediction": "all x y.((Lactobacillus(x) & SmallIntestine(y)) -> PresentIn(x,y))", "score": 0}
{"id": "eqasc_validation_1024", "prediction": "all x.(Lactobacillus(x) -> exists y.(SmallIntestine(y) & PresentIn(x,y)))", "score": 0}
{"id": "eqasc_validation_1024", "prediction": "all x.(Lactobacillus(x) -> exists y.(SmallIntestine(y) & PresentIn(x,y))))", "score": -1}
{"id": "eqasc_validation_1024", "prediction": "all x y.((Lactobacillus(x) & SmallIntestine(y)) -> Present(x,y))", "score": 0}
{"id": "eqasc_validation_1024", "prediction": "all x.(Lactobacillus(x) -> exists y.(Smallintestine(y) & PresentIn(x,y))))", "score": -1}
{"id": "eqasc_validation_1024", "prediction": "all x.(Lactobacillus(x) -> exists y.(Smallintestine(y) & PresentIn(x,y)))", "score": 0}
{"id": "eqasc_validation_1024", "prediction": "exists x.(Lactobacillus(x) & SmallIntestine(y) & PresentIn(x,y))", "score": 0}
{"id": "eqasc_validation_1024", "prediction": "All x.(Lactobacillus(x) -> PresentInSmallintestine(x))", "score": -1}
{"id": "eqasc_validation_1024", "prediction": "(exists x.(Lactobacillus(x) & SmallIntestine(x)))", "score": 0}
{"id": "eqasc_validation_1024", "prediction": "All x.(Lactobacillus(x) -> PresentInSmallIntestine(x))", "score": -1}
{"id": "eqasc_validation_1024", "prediction": "all x y.((Lactobacillus(x) & SmallIntestine(y)) -> PresentsIn(x,y))", "score": 0}
{"id": "eqasc_validation_1025", "prediction": "all x.(Lactobacillus(x) -> AidsChemicalDigestion(x))", "score": 0}
{"id": "eqasc_validation_1025", "prediction": "all x y.((Lactobacillus(x) & ChemicalDigestion(y)) -> Aids(x,y))", "score": 0}
{"id": "eqasc_validation_1025", "prediction": "all x y z.((Lactobacillus(x) & ChemicalDigestion(y) & ChemicalDigestion(z)) -> Aids(x,y,z))", "score": 0}
{"id": "eqasc_validation_1025", "prediction": "all x y.((Lactobacillus(x) & ChemicalDigestion(y)) -> AidsDigestion(x,y))", "score": 0}
{"id": "eqasc_validation_1025", "prediction": "all x y.((Lactobacillus(x) & ChemicalDigestion(y)) -> AidsChemicalDigestion(x,y))", "score": 0}
{"id": "eqasc_validation_1025", "prediction": "all x y z.((Lactobacillus(x) & ChemicalDigestion(y) & Digestion(z)) -> Aids(x,y,z))", "score": 0}
{"id": "eqasc_validation_1025", "prediction": "all x y z.((Lactobacillus(x) & ChemicalDigestion(y) & ChemicalDigestion(z)) -> Aids(x,y))", "score": 0}
{"id": "eqasc_validation_1025", "prediction": "all x y.((Lactobacillus(x) & Digestion(y)) -> Aids(x,y))", "score": 0}
{"id": "eqasc_validation_1025", "prediction": "all x y.((Lactobacillus(x) & Digestion(y)) -> AidsChemicalDigestion(x,y))", "score": 0}
{"id": "eqasc_validation_1025", "prediction": "all x y z.((Lactobacillus(x) & Digestion(y) & ChemicalDigestion(z)) -> Aids(x,y,z))", "score": 0}
{"id": "eqasc_validation_1025", "prediction": "all x.((Lactobacillus(x) & AidsChemicalDigestion(x)) -> Lactobacillus(x))", "score": 0}
{"id": "eqasc_validation_1026", "prediction": "all x y.((Pharmacist(x) & Intestine(y)) -> CallsBowels(x,y))", "score": 0}
{"id": "eqasc_validation_1026", "prediction": "all x y z.((Pharmacist(x) & Intestine(y) & Bowel(z)) -> Calls(x,y,z))", "score": 0}
{"id": "eqasc_validation_1026", "prediction": "all x y.((Pharmacist(x) & Intestine(y)) -> CallsBodies(x,y))", "score": 0}
{"id": "eqasc_validation_1026", "prediction": "all x y.((Pharmacist(x) & Intestine(y)) -> (CallsBowels(x,y) | CallsBowels(x,y)))", "score": 0}
{"id": "eqasc_validation_1026", "prediction": "all x y.((Pharmacist(x) & Intestine(y)) -> (CallingBowels(x,y) | CallingBowels(x,y)))", "score": 0}
{"id": "eqasc_validation_1026", "prediction": "all x y.((Pharmacist(x) & Intestine(y)) -> OftenCalledBowels(x,y))", "score": 0}
{"id": "eqasc_validation_1026", "prediction": "all x y.((Pharmacist(x) & Intestine(y)) -> CallsBowel(x,y))", "score": 0}
{"id": "eqasc_validation_1026", "prediction": "all x y.((Pharmacist(x) & Intestine(y)) -> (CalledBowel(x,y) | CalledBowel(x,y)))", "score": 0}
{"id": "eqasc_validation_1026", "prediction": "all x y.((Pharmacist(x) & Intestine(y)) -> OftenCalledBowel(x,y))", "score": 0}
{"id": "eqasc_validation_1026", "prediction": "all x y.((Pharmacist(x) & Intestine(y)) -> (CalledBowels(x,y) | CalledBowels(x,y)))", "score": 0}
{"id": "eqasc_validation_1026", "prediction": "all x y.((Pharmacist(x) & Intestine(y)) -> KnownAsBowels(x,y))", "score": 0}
{"id": "eqasc_validation_1026", "prediction": "all x y.((Pharmacist(x) & Intestine(y)) -> CallsBodges(x,y))", "score": 0}
{"id": "eqasc_validation_1026", "prediction": "all x y.((Phlebotomist(x) & Intestine(y)) -> CallsBowels(x,y))", "score": 0}
{"id": "eqasc_validation_1026", "prediction": "all x.((Pharmacist(x) & Intestine(x)) -> Bowels(x))", "score": 0}
{"id": "eqasc_validation_1026", "prediction": "all x.(Pharmacist(x) -> CallsIntestinesBowels(x))", "score": 0}
{"id": "eqasc_validation_1027", "prediction": "all x.(ChemicalDigestion(x) -> OccursInSmallBody(x))", "score": 0}
{"id": "eqasc_validation_1027", "prediction": "all x y.((ChemicalDigestion(x) & SmallBody(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_1027", "prediction": "all x y.((ChemicalDigestion(x) & SmallBowel(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_1027", "prediction": "all x y.((ChemicalDigestment(x) & SmallBody(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_1027", "prediction": "all x y z.((ChemicalDigestion(x) & SmallBody(y) & SmallBody(z)) -> OccursIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1027", "prediction": "all x.(ChemicalDigestion(x) -> exists y.(SmallBody(y) & OccursIn(x,y))))", "score": -1}
{"id": "eqasc_validation_1027", "prediction": "all x.(ChemicalDigestion(x) -> OccursInSmallBowel(x))", "score": 0}
{"id": "eqasc_validation_1027", "prediction": "all x.(ChemicalDigestment(x) -> OccursInSmallBody(x))", "score": 0}
{"id": "eqasc_validation_1027", "prediction": "all x.(ChemicalDigestion(x) -> exists y.(SmallBody(y) & OccursIn(x,y)))", "score": 0}
{"id": "eqasc_validation_1027", "prediction": "all x.(ChemicalDigestion(x) -> (OccursInSmallBody(x) | OccursInSmallBody(x)))", "score": 0}
{"id": "eqasc_validation_1027", "prediction": "all x.(ChemicalDigestion(x) -> (OccursInSmallBody(x) & MostlyInSmallBody(x)))", "score": 0}
{"id": "eqasc_validation_1027", "prediction": "all x.(ChemicalDigestion(x) -> OccursPrimarilyInSmallBody(x))", "score": 0}
{"id": "eqasc_validation_1027", "prediction": "all x.(ChemicalDigestration(x) -> OccursInSmallBody(x))", "score": 0}
{"id": "eqasc_validation_1028", "prediction": "all x y.((Enzyme(x) & SmallIntestine(y)) -> LocatedIn(x,y))", "score": 0}
{"id": "eqasc_validation_1028", "prediction": "all x y z.((Enzyme(x) & SmallIntestine(y) & SmallIntestine(z)) -> LocatedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1028", "prediction": "all x y.((Enzyme(x) & SmallIntestine(y)) -> LocalizedIn(x,y))", "score": 0}
{"id": "eqasc_validation_1028", "prediction": "all x y z.((Enzyme(x) & SmallIntestine(y) & Smallintestine(z)) -> LocatedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1028", "prediction": "all x y z.((Enzyme(x) & SmallIntestine(y) & SmallIntestine(z)) -> LocalizedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1028", "prediction": "all x y z.((Enzyme(x) & SmallIndividual(y) & SmallIndividual(z)) -> LocatedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1028", "prediction": "all x y z.((Enzyme(x) & SmallIntestine(y) & Enzyme(z)) -> LocatedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1028", "prediction": "all x y z.((Enzyme(x) & SmallIntestine(y) & SmallIntestine(z)) -> LocatesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1028", "prediction": "all x.(Enzyme(x) -> (LocatedInSmallintestine(x) & InSmallintestine(x)))", "score": 0}
{"id": "eqasc_validation_1028", "prediction": "all x y.((Enzyme(x) & SmallIndividual(y)) -> LocatedIn(x,y))", "score": 0}
{"id": "eqasc_validation_1028", "prediction": "all x y.((Enzyme(x) & SmallIntestine(y)) -> LocatesIn(x,y))", "score": 0}
{"id": "eqasc_validation_1028", "prediction": "all x y.((Enzyme(x) & SmallIntestine(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_validation_1028", "prediction": "all x.(Enzyme(x) -> (LocatedInSmallIntestine(x) & InSmallintestine(x)))", "score": 0}
{"id": "eqasc_validation_1029", "prediction": "all x y z.((ComplexChemical(x) & SimpleChemical(y) & SmallIntestine(z)) -> BreaksDownInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_1029", "prediction": "all x y.((ComplexChemical(x) & SmallIntestine(y)) -> BreaksDownIntoSimpleChemicals(x,y))", "score": 0}
{"id": "eqasc_validation_1029", "prediction": "all x y.((ComplexChemical(x) & SmallIntestine(y)) -> BreaksIntoSimpleChemicals(x,y))", "score": 0}
{"id": "eqasc_validation_1029", "prediction": "all x.(ComplexChemical(x) -> BreaksDownIntoSimpleChemicals(x))", "score": 0}
{"id": "eqasc_validation_1029", "prediction": "all x y z.((ComplexChemical(x) & SimpleChemical(y) & Smallintestine(z)) -> BreaksDownInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_1029", "prediction": "all x y.((ComplexChemical(x) & SimpleChemical(y)) -> BreaksDownInto(x,y))", "score": 0}
{"id": "eqasc_validation_1029", "prediction": "all x y.((ComplexChemical(x) & Smallintestine(y)) -> BreaksDownIntoSimpleChemicals(x,y))", "score": 0}
{"id": "eqasc_validation_1029", "prediction": "all x y z.((ComplexChemical(x) & SimpleChemical(y) & SmallIntestine(z)) -> BreaksDownTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_1029", "prediction": "all x.(ComplexChemicals(x) -> BreaksDownIntoSimpleChemicals(x))", "score": 0}
{"id": "eqasc_validation_1029", "prediction": "all x y z.((ComplexChemical(x) & SimpleChemical(y) & SmallIntestine(z)) -> BreaksInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_1029", "prediction": "all x y z.((ComplexChemistry(x) & SimpleChemistry(y) & SmallIntestine(z)) -> BreaksDownInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_1029", "prediction": "all x y.((ComplexChemical(x) & SmallIntestine(y)) -> BreaksDownIntoSimpleChemicals(x))", "score": 0}
{"id": "eqasc_validation_1029", "prediction": "all x y.((ComplexChemical(x) & SmallIntestine(y)) -> BreaksDownToSimpleChemicals(x,y))", "score": 0}
{"id": "eqasc_validation_1029", "prediction": "all x y z.((ComplexChemical(x) & SimpleChemical(y) & SmallIntestine(z)) -> BreaksDown(x,y,z))", "score": 0}
{"id": "eqasc_validation_1029", "prediction": "all x y z.((ComplexChemical(x) & SimpleChemical(y) & SmallIntestine(z)) -> BreaksDownInto(x,y))", "score": 0}
{"id": "eqasc_validation_1029", "prediction": "all x y.((ComplexChemical(x) & SimpleChemical(y)) -> BreaksDownInSmallintestine(x,y))", "score": 0}
{"id": "eqasc_validation_1030", "prediction": "all x.(Seconds(x) -> UsedToMeasureTime(x))", "score": 0}
{"id": "eqasc_validation_1030", "prediction": "all x y.((Second(x) & Second(y)) -> MeasuresTime(x,y))", "score": 0}
{"id": "eqasc_validation_1030", "prediction": "all x.(Second(x) -> MeasuresTime(x))", "score": 0}
{"id": "eqasc_validation_1030", "prediction": "all x.(Second(x) -> UsedToMeasureTime(x))", "score": 0}
{"id": "eqasc_validation_1030", "prediction": "all x.(Seconds(x) -> MeasuresTime(x))", "score": 0}
{"id": "eqasc_validation_1030", "prediction": "all x y.((Second(x) & Time(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1030", "prediction": "all x y.((Second(x) & Time(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1030", "prediction": "all x y.((Second(x) & Second(y)) -> UsedToMeasureTime(x,y))", "score": 0}
{"id": "eqasc_validation_1030", "prediction": "all x y.((Seconds(x) & Time(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1030", "prediction": "all x y.((Seconds(x) & Time(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1030", "prediction": "all x y z.((Second(x) & Time(y) & Time(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1030", "prediction": "all x y z.((Second(x) & Time(y) & Time(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1030", "prediction": "all x y z.((Second(x) & Second(y) & Time(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1030", "prediction": "all x y z.((Second(x) & Second(y) & Time(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1030", "prediction": "all x y z.((Second(x) & Time(y) & Second(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1031", "prediction": "all x.(CPUTime(x) -> MeasuredInSeconds(x))", "score": 0}
{"id": "eqasc_validation_1031", "prediction": "all x.(CPUTime(x) -> MeasurableInSeconds(x))", "score": 0}
{"id": "eqasc_validation_1031", "prediction": "all x.(CPUTime(x) -> MeasuringSeconds(x))", "score": 0}
{"id": "eqasc_validation_1031", "prediction": "all x y.((CPUTime(x) & Second(y)) -> MeasuredIn(x,y))", "score": 0}
{"id": "eqasc_validation_1031", "prediction": "all x.((CPUTime(x) & MeasuredInSeconds(x)) -> MeasuredInSeconds(x))", "score": 0}
{"id": "eqasc_validation_1031", "prediction": "all x.(CPUTime(x) -> MeasuringInSeconds(x))", "score": 0}
{"id": "eqasc_validation_1031", "prediction": "all x.(ComputerTime(x) -> MeasuredInSeconds(x))", "score": 0}
{"id": "eqasc_validation_1031", "prediction": "all x y.((CPUTime(x) & Seconds(y)) -> MeasuredIn(x,y))", "score": 0}
{"id": "eqasc_validation_1031", "prediction": "all x.((CPUTime(x) & MeasuredInSeconds(x)) -> MeasurableInSeconds(x))", "score": 0}
{"id": "eqasc_validation_1031", "prediction": "all x y.((CPUTime(x) & Second(y)) -> MeasurableIn(x,y))", "score": 0}
{"id": "eqasc_validation_1032", "prediction": "all x.(CPUTime(x) -> CanBeUsedAsClock(x))", "score": 0}
{"id": "eqasc_validation_1032", "prediction": "all x y.((CPUTime(x) & Clock(y)) -> CanBeUsedAs(x,y))", "score": 0}
{"id": "eqasc_validation_1032", "prediction": "all x.(CPUTime(x) -> Clock(x))", "score": 0}
{"id": "eqasc_validation_1032", "prediction": "all x.((CPUTime(x) & Clock(x)) -> CanBeUsedAs(x,Clock))", "score": 0}
{"id": "eqasc_validation_1032", "prediction": "all x y z.((CPUTime(x) & Clock(y) & CPUTime(z)) -> CanBeUsedAs(x,y,z))", "score": 0}
{"id": "eqasc_validation_1032", "prediction": "all x y z.((CPUTime(x) & Clock(y) & CPUTime(z)) -> CanBeUsedAs(x,z))", "score": 0}
{"id": "eqasc_validation_1032", "prediction": "all x y z.((CPUTime(x) & Clock(y) & CPUTime(z)) -> CanBeUsedAs(x,y))", "score": 0}
{"id": "eqasc_validation_1032", "prediction": "all x.((CPUTime(x) & Clock(x)) -> CanBeUsedAs(x,Clock,Clock))", "score": 0}
{"id": "eqasc_validation_1032", "prediction": "all x.(CPUTime(x) -> UsedAsClock(x))", "score": 0}
{"id": "eqasc_validation_1032", "prediction": "all x.(CPUTime(x) -> (UsedAsClock(x) | UsedAsClock(x)))", "score": 0}
{"id": "eqasc_validation_1032", "prediction": "all x y.(( CPUTime(x) & Clock(y)) -> CanBeUsedAs(x,y))", "score": 0}
{"id": "eqasc_validation_1032", "prediction": "all x.(CPUTime(x) -> CanBeClock(x))", "score": 0}
{"id": "eqasc_validation_1032", "prediction": "all x y.((CPUTime(x) & Clock(y)) -> UsedAs(x,y))", "score": 0}
{"id": "eqasc_validation_1032", "prediction": "all x.((CPUTime(x) & Clock(x)) -> UsedAs(x,Clock))", "score": 0}
{"id": "eqasc_validation_1032", "prediction": "all x y.((CPUTime(x) & Clock(y)) -> (UsedAs(x,y) & UsedAs(x,y)))", "score": 0}
{"id": "eqasc_validation_1032", "prediction": "all x y.((CPUTime(x) & Clock(y)) -> CanUseAs(x,y))", "score": 0}
{"id": "eqasc_validation_1033", "prediction": "all x.(AccountingPeriod(x) -> PeriodOfTime(x))", "score": 0}
{"id": "eqasc_validation_1033", "prediction": "all x.(AccountingPeriod(x) -> TimePeriod(x))", "score": 0}
{"id": "eqasc_validation_1033", "prediction": "all x y.((AccountingPeriod(x) & PeriodOfTime(y)) -> PeriodOfTime(x,y))", "score": 0}
{"id": "eqasc_validation_1033", "prediction": "all x y.((AccountingPeriod(x) & Time(y)) -> PeriodOfTime(x,y))", "score": 0}
{"id": "eqasc_validation_1033", "prediction": "all x y.((AccountingPeriod(x) & PeriodOfTime(y)) -> PeriodOfTime(x))", "score": 0}
{"id": "eqasc_validation_1033", "prediction": "all x y.((AccountingPeriod(x) & Time(y)) -> PeriodOfTime(x))", "score": 0}
{"id": "eqasc_validation_1033", "prediction": "all x.(AccountingPeriod(x) -> (PeriodOfTime(x)))", "score": 0}
{"id": "eqasc_validation_1033", "prediction": "all x.exists y.(AccountingPeriod(x) & PeriodOfTime(y) & PeriodOfTime(x,y))", "score": 0}
{"id": "eqasc_validation_1033", "prediction": "all x.(AccountingPeriod(x) -> (PeriodOfTime(x) & PeriodOfTime(x)))", "score": 0}
{"id": "eqasc_validation_1033", "prediction": "all x y.((AccountingPeriod(x) & Time(y)) -> PeriodOf(x,y))", "score": 0}
{"id": "eqasc_validation_1033", "prediction": "all x y.((AccountingPeriod(x) & PeriodOfTime(y)) -> Simple(x))", "score": 0}
{"id": "eqasc_validation_1033", "prediction": "all x.exists y.(AccountingPeriod(x) & Time(y) & PeriodOfTime(x,y))", "score": 0}
{"id": "eqasc_validation_1033", "prediction": "all x y.((AccountingPeriod(x) & PeriodOfTime(x)) -> PeriodOfTime(y))", "score": 0}
{"id": "eqasc_validation_1033", "prediction": "all x.(AccountingPeriod(x) -> Time(x))", "score": 0}
{"id": "eqasc_validation_1034", "prediction": "all x y.((Second(x) & Period(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1034", "prediction": "all x y.((Second(x) & Period(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1034", "prediction": "all x y z.((Second(x) & Period(y) & Period(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1034", "prediction": "all x y z.((Second(x) & Period(y) & Period(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1034", "prediction": "all x.(Seconds(x) -> MeasuresPeriod(x))", "score": 0}
{"id": "eqasc_validation_1034", "prediction": "all x y.((Second(x) & Period(y)) -> MeasuresPeriod(x,y))", "score": 0}
{"id": "eqasc_validation_1034", "prediction": "all x y.((Seconds(x) & Period(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1034", "prediction": "all x y.((Seconds(x) & Period(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1034", "prediction": "all x.(Second(x) -> MeasuresPeriod(x))", "score": 0}
{"id": "eqasc_validation_1034", "prediction": "all x y z.((Second(x) & Period(y) & Time(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1034", "prediction": "all x y z.((Seconds(x) & Period(y) & Period(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1034", "prediction": "all x y.((Second(x) & Period(y) & Measures(x,y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1034", "prediction": "all x y z.((Second(x) & Period(y) & Time(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1034", "prediction": "all x.(Seconds(x) -> UsedToMeasurePeriod(x))", "score": 0}
{"id": "eqasc_validation_1034", "prediction": "all x y z.((Seconds(x) & Period(y) & Period(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1034", "prediction": "all x.(Second(x) -> UsedToMeasurePeriod(x))", "score": 0}
{"id": "eqasc_validation_1035", "prediction": "all x.(Stopwatch(x) -> UsedToMeasureTime(x))", "score": 0}
{"id": "eqasc_validation_1035", "prediction": "all x.(Stopwatch(x) -> MeasuresTime(x))", "score": 0}
{"id": "eqasc_validation_1035", "prediction": "all x y.((Stopwatch(x) & Time(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1035", "prediction": "all x y.((Stopwatch(x) & Time(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1035", "prediction": "all x y z.((Stopwatch(x) & Time(y) & Time(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1035", "prediction": "all x y.((Stopwatch(x) & Time(y)) -> Measured(x,y))", "score": 0}
{"id": "eqasc_validation_1035", "prediction": "all x y z.((Stopwatch(x) & Time(y) & Time(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1035", "prediction": "all x.(Stopwatch(x) -> MeasuredTime(x))", "score": 0}
{"id": "eqasc_validation_1035", "prediction": "All x.(Stopwatch(x) -> UsedToMeasureTime(x))", "score": -1}
{"id": "eqasc_validation_1035", "prediction": "all x y z.((Stopwatch(x) & Time(y) & Time(z)) -> Measured(x,y,z))", "score": 0}
{"id": "eqasc_validation_1035", "prediction": "All x.(Stopwatch(x) -> MeasuresTime(x))", "score": -1}
{"id": "eqasc_validation_1035", "prediction": "all x y.((Stopwatch(x) & Time(y)) -> Measure(x,y))", "score": 0}
{"id": "eqasc_validation_1035", "prediction": "all x y z.((Stopwatch(x) & Time(y) & Time(z)) -> Measure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1035", "prediction": "All x y.((Stopwatch(x) & Time(y)) -> UsedToMeasure(x,y))", "score": -1}
{"id": "eqasc_validation_1035", "prediction": "all x y.((Stopwatch(x) & Time(y)) -> UsedForMeasurement(x,y))", "score": 0}
{"id": "eqasc_validation_1035", "prediction": "All x y.((Stopwatch(x) & Time(y)) -> Measures(x,y))", "score": -1}
{"id": "eqasc_validation_1036", "prediction": "all x.(Stopwatch(x) -> MeasuresSeconds(x))", "score": 0}
{"id": "eqasc_validation_1036", "prediction": "all x y.((Stopwatch(x) & Seconds(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1036", "prediction": "all x y z.((Stopwatch(x) & Seconds(y) & Seconds(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1036", "prediction": "all x.(Stopwatch(x) -> UsedToMeasureSeconds(x))", "score": 0}
{"id": "eqasc_validation_1036", "prediction": "all x y.((Stopwatch(x) & Second(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1036", "prediction": "all x y z.((Stopwatch(x) & Second(y) & Second(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1036", "prediction": "all x.(Stopwatch(x) -> MeasureSeconds(x))", "score": 0}
{"id": "eqasc_validation_1036", "prediction": "all x y.((Stopwatch(x) & Seconds(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1036", "prediction": "all x.(Stopwatch(x) -> (MeasuresSeconds(x) & MeasuresSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1036", "prediction": "all x y z.((Stopwatch(x) & Seconds(y) & Seconds(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1036", "prediction": "all x y z.((Stopwatch(x) & Seconds(y) & Seconds(z)) -> Measured(x,y,z))", "score": 0}
{"id": "eqasc_validation_1036", "prediction": "all x y.((Stopwatch(x) & Second(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1036", "prediction": "all x y z.((Stopwatch(x) & Seconds(y) & Moments(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1036", "prediction": "all x y z.((Stopwatch(x) & Second(y) & Second(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1036", "prediction": "all x y z.((Stopwatch(x) & Seconds(y) & Seconds(z)) -> Measure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1036", "prediction": "all x y.((Stopwatch(x) & Seconds(y) & Measures(x,y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1037", "prediction": "all x.(Speed(x) -> (MeasuredByDistance(x) & DividedByElapsedTime(x)))", "score": 0}
{"id": "eqasc_validation_1037", "prediction": "all x y z.((Speed(x) & Distance(y) & ElapsedTime(z)) -> MeasuredBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1037", "prediction": "all x.(Speed(x) -> MeasuredByDistance(x))", "score": 0}
{"id": "eqasc_validation_1037", "prediction": "all x.(Speed(x) -> (MeasuresDistance(x) & DividedByElapsedTime(x)))", "score": 0}
{"id": "eqasc_validation_1037", "prediction": "all x y z.((Speed(x) & Distance(y) & Time(z)) -> MeasuredBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1037", "prediction": "all x y.((Speed(x) & Distance(y)) -> DividedByElapsedTime(x,y))", "score": 0}
{"id": "eqasc_validation_1037", "prediction": "all x y.((Speed(x) & Distance(y) & DividedByElapsedTime(x,y)) -> MeasuredBy(x,y))", "score": 0}
{"id": "eqasc_validation_1037", "prediction": "all x y.((Speed(x) & Distance(y) & DividedByElapsedTime(x,y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1037", "prediction": "all x y.((Speed(x) & Distance(y)) -> MeasuredBy(x,y))", "score": 0}
{"id": "eqasc_validation_1037", "prediction": "all x.(Speed(x) -> (MeasuredByDistance(x) & DivisibleByElapsedTime(x)))", "score": 0}
{"id": "eqasc_validation_1037", "prediction": "all x y.((Speed(x) & Distance(y) & ElapsedTime(y)) -> MeasuredBy(x,y))", "score": 0}
{"id": "eqasc_validation_1038", "prediction": "all x.(Seconds(x) -> MeasureSpeed(x))", "score": 0}
{"id": "eqasc_validation_1038", "prediction": "all x.(Seconds(x) -> UsedToMeasureSpeed(x))", "score": 0}
{"id": "eqasc_validation_1038", "prediction": "all x.(Seconds(x) -> CanBeMeasuredToMeasureSpeed(x))", "score": 0}
{"id": "eqasc_validation_1038", "prediction": "all x.(Second(x) -> MeasureSpeed(x))", "score": 0}
{"id": "eqasc_validation_1038", "prediction": "all x y.((Second(x) & Second(y)) -> MeasureSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_1038", "prediction": "all x.(Second(x) -> UsedToMeasureSpeed(x))", "score": 0}
{"id": "eqasc_validation_1038", "prediction": "all x y.((Second(x) & Speed(y)) -> CanBeMeasured(x,y))", "score": 0}
{"id": "eqasc_validation_1038", "prediction": "all x y.((Second(x) & Second(y)) -> CanBeMeasuredToMeasureSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_1038", "prediction": "all x y.((Seconds(x) & Speed(y)) -> CanBeMeasured(x,y))", "score": 0}
{"id": "eqasc_validation_1038", "prediction": "all x.(Seconds(x) -> CanBeUsedToMeasureSpeed(x))", "score": 0}
{"id": "eqasc_validation_1038", "prediction": "all x.(Seconds(x) -> MeasuresSpeed(x))", "score": 0}
{"id": "eqasc_validation_1038", "prediction": "all x y.((Second(x) & Speed(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1038", "prediction": "all x y.((Second(x) & Second(y)) -> MeasuresSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_1038", "prediction": "all x.(Second(x) -> CanBeMeasuredToMeasureSpeed(x))", "score": 0}
{"id": "eqasc_validation_1038", "prediction": "all x y.((Seconds(x) & Speed(y)) -> MeasuresSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_1038", "prediction": "all x y z.((Seconds(x) & Speed(y) & Speed(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1039", "prediction": "all x y.((Whiskers(x) & Animal(y)) -> UsedForFeeling(x,y))", "score": 4}
{"id": "eqasc_validation_1039", "prediction": "all x y z.((Whiskers(x) & Animal(y) & Animal(z)) -> UsedForFeeling(x,y,z))", "score": 4}
{"id": "eqasc_validation_1039", "prediction": "all x y.((Whiskers(x) & Animal(y)) -> UsedForFeelingBy(x,y))", "score": 4}
{"id": "eqasc_validation_1039", "prediction": "all x y z.((Whiskers(x) & Animal(y) & Animal(z)) -> UsedForFeelingBy(x,y,z))", "score": 4}
{"id": "eqasc_validation_1039", "prediction": "all x y z.((Whisker(x) & Animal(y) & Animal(z)) -> UsedForFeeling(x,y,z))", "score": 4}
{"id": "eqasc_validation_1039", "prediction": "all x.(Whiskers(x) -> UsedForFeelingByAnimals(x))", "score": 0}
{"id": "eqasc_validation_1039", "prediction": "all x y.((Whisker(x) & Animal(y)) -> UsedForFeeling(x,y))", "score": 4}
{"id": "eqasc_validation_1039", "prediction": "all x y z.((Whisker(x) & Animal(y) & Animal(z)) -> UsedForFeelingBy(x,y,z))", "score": 4}
{"id": "eqasc_validation_1039", "prediction": "all x.(Whiskers(x) -> UsedForFeeling(x))", "score": 0}
{"id": "eqasc_validation_1039", "prediction": "all x y.((Whisker(x) & Animal(y)) -> UsedForFeelingBy(x,y))", "score": 4}
{"id": "eqasc_validation_1039", "prediction": "all x y.((Whiskers(x) & Animal(y) & UsedForFeeling(x,y)) -> UsedForFeeling(x,y))", "score": 0}
{"id": "eqasc_validation_1039", "prediction": "all x y z.((Whiskers(x) & Animal(y) & Animal(z)) -> Feeling(x,y,z))", "score": 0}
{"id": "eqasc_validation_1039", "prediction": "all x y z.((Whiskers(x) & Animal(y) & Animal(z)) -> UsedForFeeling(x,z))", "score": 4}
{"id": "eqasc_validation_1039", "prediction": "all x y z.((Whiskers(x) & Animal(y) & Animal(z)) -> UsedForFelting(x,y,z))", "score": 4}
{"id": "eqasc_validation_1039", "prediction": "all x y z.((Whiskers(x) & Animal(y) & Animal(z)) -> UsedForFeeling(x,y))", "score": 4}
{"id": "eqasc_validation_1039", "prediction": "all x y z.((Whiskers(x) & Animal(y) & Animal(z)) -> UsedForSense(x,y,z))", "score": 0}
{"id": "eqasc_validation_1040", "prediction": "all x y.((Dog(x) & Whisker(y)) -> StiffHairsOnFace(y,x))", "score": 0}
{"id": "eqasc_validation_1040", "prediction": "all x y.((Dog(x) & Whisker(y)) -> (StiffHairs(y) & OnFace(y,x)))", "score": 0}
{"id": "eqasc_validation_1040", "prediction": "all x.((Dog(x) & Whisker(x)) -> StiffHairsOnFace(x))", "score": 0}
{"id": "eqasc_validation_1040", "prediction": "all x y.((Dog(x) & Whisker(y)) -> (StrongHairs(y) & OnFace(y,x)))", "score": 0}
{"id": "eqasc_validation_1040", "prediction": "all x.(Whiskers(x) -> (StiffHairs(x) & OnDogsFace(x)))", "score": 0}
{"id": "eqasc_validation_1040", "prediction": "all x y.((Dog(x) & Whisker(y)) -> StiffHairs(y))", "score": 0}
{"id": "eqasc_validation_1040", "prediction": "all x.(Whiskers(x) -> (StiffHairs(x) & DogFace(x)))", "score": 0}
{"id": "eqasc_validation_1040", "prediction": "all x y.((Dog(x) & Whisker(y)) -> StiffHairs(y,x))", "score": 0}
{"id": "eqasc_validation_1040", "prediction": "all x.(Whiskers(x) -> (StiffHairs(x) & OnDogFace(x)))", "score": 0}
{"id": "eqasc_validation_1040", "prediction": "all x.(Whiskers(x) -> (StiffHairsOnFace(x) & Dog(x)))", "score": 0}
{"id": "eqasc_validation_1040", "prediction": "all x y.((Dog(x) & Whisker(y)) -> StiffHairsOnFace(y))", "score": 0}
{"id": "eqasc_validation_1040", "prediction": "all x y.((Dog(x) & Whisker(y)) -> (StiffHairs(y,x) & OnFace(y,x)))", "score": 0}
{"id": "eqasc_validation_1040", "prediction": "all x y z.((Dog(x) & Whisker(y) & Dog(z)) -> StiffHairsOnFace(y,z))", "score": 0}
{"id": "eqasc_validation_1040", "prediction": "all x.((Dog(x) & Whisker(x)) -> StiffHairs(x))", "score": 0}
{"id": "eqasc_validation_1040", "prediction": "all x y.((Dog(x) & Whisker(y)) -> (StiffHairsOnFace(y,x)))", "score": 0}
{"id": "eqasc_validation_1040", "prediction": "all x.((Dog(x) & Whiskers(x)) -> StiffHairsOnFace(x))", "score": 0}
{"id": "eqasc_validation_1041", "prediction": "all x y.((StiffHair(x) & Face(y)) -> UsedForFeeling(x,y))", "score": 0}
{"id": "eqasc_validation_1041", "prediction": "all x.((Hair(x) & StiffOnFace(x)) -> UsedForFeelingByAnimals(x))", "score": 0}
{"id": "eqasc_validation_1041", "prediction": "all x y z.((StiffHair(x) & Face(y) & Animal(z)) -> UsedForFeeling(x,y,z))", "score": 0}
{"id": "eqasc_validation_1041", "prediction": "all x y.((StiffHair(x) & Animal(y)) -> UsedForFeeling(x,y))", "score": 0}
{"id": "eqasc_validation_1041", "prediction": "all x y.((StiffHair(x) & Face(y)) -> UsedForFeelingByAnimals(x,y))", "score": 0}
{"id": "eqasc_validation_1041", "prediction": "all x y.((Hair(x) & Face(y) & Animal(z)) -> UsedForFeeling(x,y,z))", "score": 0}
{"id": "eqasc_validation_1041", "prediction": "all x.((Hair(x) & StiffOnFace(x)) -> UsedForFeeling(x))", "score": 0}
{"id": "eqasc_validation_1041", "prediction": "all x.((Hair(x) & Stiff(x)) -> UsedForFeelingByAnimals(x))", "score": 0}
{"id": "eqasc_validation_1041", "prediction": "all x.((Hair(x) & Stiff(x) & Face(x)) -> UsedForFeelingByAnimals(x))", "score": 0}
{"id": "eqasc_validation_1041", "prediction": "all x y.((Hair(x) & Face(y) & Stiff(x,y)) -> UsedForFeeling(x,y))", "score": 0}
{"id": "eqasc_validation_1041", "prediction": "all x.(StiffHairsOnFace(x) -> UsedForFeelingByAnimals(x))", "score": 0}
{"id": "eqasc_validation_1041", "prediction": "all x.((Hair(x) & Stiff(x)) -> UsedForFeeling(x))", "score": 0}
{"id": "eqasc_validation_1041", "prediction": "all x y.((Hair(x) & Face(y) & Stiff(x,y)) -> UsedForFeelingByAnimals(x))", "score": 0}
{"id": "eqasc_validation_1041", "prediction": "all x y.((StiffHair(x) & Face(y)) -> UsedForFeelingByAnimals(x))", "score": 0}
{"id": "eqasc_validation_1041", "prediction": "all x.((Hair(x) & Stiff(x) & Face(x)) -> UsedForFeeling(x))", "score": 0}
{"id": "eqasc_validation_1041", "prediction": "all x y.((SiffHair(x) & Face(y)) -> UsedForFeeling(x,y))", "score": 0}
{"id": "eqasc_validation_1042", "prediction": "all x.((Dog(x) & StiffHairsOnFace(x)) -> UsedForFeeling(x))", "score": 0}
{"id": "eqasc_validation_1042", "prediction": "all x.((Dog(x) & StiffHairs(x)) -> UsedForFeeling(x))", "score": 0}
{"id": "eqasc_validation_1042", "prediction": "all x y.((Dog(x) & StiffHairs(y)) -> UsedForFeeling(x,y))", "score": 0}
{"id": "eqasc_validation_1042", "prediction": "all x y.((Dog(x) & StiffHairsOnFace(x,y)) -> UsedForFeeling(x))", "score": 0}
{"id": "eqasc_validation_1042", "prediction": "all x y.((Dog(x) & StiffHairs(x) & Face(y)) -> UsedForFeeling(x,y))", "score": 0}
{"id": "eqasc_validation_1042", "prediction": "all x y.((Dog(x) & StiffHairs(y) & Face(y)) -> UsedForFeeling(x,y))", "score": 0}
{"id": "eqasc_validation_1042", "prediction": "all x.((Dog(x) & StiffHairs(x) & Face(x)) -> UsedForFeeling(x))", "score": 0}
{"id": "eqasc_validation_1042", "prediction": "all x.((Dog(x) & StiffHairsOnFace(x)) -> UsedForFelting(x))", "score": 0}
{"id": "eqasc_validation_1042", "prediction": "all x y z.((Dog(x) & StiffHairs(y) & Face(z)) -> UsedForFeeling(x,y,z))", "score": 0}
{"id": "eqasc_validation_1042", "prediction": "all x.((Dog(x) & StiffHair(x)) -> UsedForFeeling(x))", "score": 0}
{"id": "eqasc_validation_1042", "prediction": "all x y.((Dog(x) & StiffHairsOnFace(x,y)) -> UsedForFeeling(x,y))", "score": 0}
{"id": "eqasc_validation_1042", "prediction": "all x.((Dog(x) & StiffHairsOnFace(x)) -> UsedForSmelling(x))", "score": 0}
{"id": "eqasc_validation_1042", "prediction": "all x.((Dog(x) & StiffHairsOnFace(x)) -> UsedForSensement(x))", "score": 0}
{"id": "eqasc_validation_1042", "prediction": "all x y.((Dog(x) & StiffHairs(x,y) & Face(y)) -> UsedForFeeling(x))", "score": 0}
{"id": "eqasc_validation_1042", "prediction": "all x y.((Dog(x) & StiffHairs(x,y) & Face(y)) -> UsedForFeeling(x,y))", "score": 0}
{"id": "eqasc_validation_1042", "prediction": "all x y.((Dog(x) & StiffHairsOnFace(x,y)) -> UsedForFeeling(y))", "score": 0}
{"id": "eqasc_validation_1043", "prediction": "all x.(Cat(x) -> Animal(x))", "score": 11}
{"id": "eqasc_validation_1043", "prediction": "all x y.((Cat(x) & Animal(y)) -> Animal(x))", "score": 0}
{"id": "eqasc_validation_1043", "prediction": "(all x.(Cat(x) -> Animal(x)))", "score": 11}
{"id": "eqasc_validation_1043", "prediction": "all x y.((Cat(x) & Animal(y)) -> Animal(x,y))", "score": 0}
{"id": "eqasc_validation_1043", "prediction": "all x.exists y.(Cat(x) & Animal(y))", "score": 0}
{"id": "eqasc_validation_1043", "prediction": "all x.(Kat(x) -> Animal(x))", "score": 0}
{"id": "eqasc_validation_1043", "prediction": "all x.exists y.(Cat(x) & Animal(y) & Cat(x) & Animal(y))", "score": 0}
{"id": "eqasc_validation_1043", "prediction": "all x.exists y.(Cat(x) & Animal(y) & Animal(y))", "score": 0}
{"id": "eqasc_validation_1043", "prediction": "all x.exists y.(Cat(x) & Animal(y) & Animated(x))", "score": 0}
{"id": "eqasc_validation_1043", "prediction": "all x.exists y.(Cat(x) & Animal(y) & LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_1043", "prediction": "all x.exists y.(Cat(x) & Animal(y) & Animal(x))", "score": 11}
{"id": "eqasc_validation_1043", "prediction": "exists x.(Cat(x) & Animal(x))", "score": 0}
{"id": "eqasc_validation_1043", "prediction": "all x.exists y.(Cat(x) & Animal(y) & Cat(x) & Animal(x))", "score": 11}
{"id": "eqasc_validation_1043", "prediction": "all x.exists y.(Cat(x) & Animal(y) & Animal(x,y))", "score": 0}
{"id": "eqasc_validation_1043", "prediction": "all x.exists y.(Cat(x) & Animal(y) & Cat(y) & Animal(y))", "score": 0}
{"id": "eqasc_validation_1044", "prediction": "all x.(Cat(x) -> (UsesSpecializedLongHair(x) & FeelsWith(x)))", "score": 0}
{"id": "eqasc_validation_1044", "prediction": "all x.(Cat(x) -> UsesSpecializedLongHair(x))", "score": 0}
{"id": "eqasc_validation_1044", "prediction": "all x y.((Cat(x) & SpecializedLongHair(y)) -> FeelsWith(x,y))", "score": 0}
{"id": "eqasc_validation_1044", "prediction": "all x y.((Cat(x) & Face(y)) -> UsesSpecializedLongHair(x,y))", "score": 0}
{"id": "eqasc_validation_1044", "prediction": "all x.(Cat(x) -> UsesSpecializedLongHairOnFace(x))", "score": 0}
{"id": "eqasc_validation_1044", "prediction": "all x y z.((Cat(x) & SpecializedLongHair(y) & Face(z)) -> UsesToFeelWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1044", "prediction": "all x y z.((Cat(x) & SpecializedLongHair(y) & Face(z)) -> FeelsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1044", "prediction": "all x y.((Cat(x) & Face(y)) -> (UsesSpecializedLongHair(x,y) & FeelsWith(x,y)))", "score": 0}
{"id": "eqasc_validation_1044", "prediction": "all x.(Cat(x) -> (UsesSpecializedLongHairOnFace(x) & FeelsWith(x)))", "score": 0}
{"id": "eqasc_validation_1044", "prediction": "all x y.((Cat(x) & Cat(y)) -> UsesSpecializedLongHair(x,y))", "score": 0}
{"id": "eqasc_validation_1044", "prediction": "all x y.((Cat(x) & Cat(y)) -> (UsesSpecializedLongHair(x,y) & FeelsWith(x,y)))", "score": 0}
{"id": "eqasc_validation_1044", "prediction": "all x.(Cat(x) -> UsesSpecializedLongHairOnFaces(x))", "score": 0}
{"id": "eqasc_validation_1044", "prediction": "all x.(Cat(x) -> (UsesSpecializedLongHair(x) & FeelWith(x)))", "score": 0}
{"id": "eqasc_validation_1044", "prediction": "all x y.((Cat(x) & SpecializedLongHair(y)) -> UsesToFeelWith(x,y))", "score": 0}
{"id": "eqasc_validation_1044", "prediction": "all x y z.((Cat(x) & SpecializedLongHair(y) & Face(z)) -> FeelsWith(x,z))", "score": 0}
{"id": "eqasc_validation_1044", "prediction": "all x y.((Cat(x) & SpecializedLongHair(y)) -> FeelWith(x,y))", "score": 0}
{"id": "eqasc_validation_1045", "prediction": "all x.(Cat(x) -> Whiskers(x))", "score": 0}
{"id": "eqasc_validation_1045", "prediction": "(exists x.(Cat(x) & Whiskers(x)))", "score": 0}
{"id": "eqasc_validation_1045", "prediction": "exists x.(Cat(x) & Whiskers(x))", "score": 0}
{"id": "eqasc_validation_1045", "prediction": "all x.((Cat(x) & Whiskers(x)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_1045", "prediction": "exists x.(CatsWhiskers(x) & CatsWhiskers(x))", "score": 0}
{"id": "eqasc_validation_1045", "prediction": "all x y.((Cat(x) & Whiskers(y)) -> NameFor(x,y))", "score": 0}
{"id": "eqasc_validation_1045", "prediction": "all x y.((Cat(x) & Whisker(y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_1045", "prediction": "all x y.((Cat(x) & Whiskers(y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_1045", "prediction": "all x.((Cat(x) & Whiskers(x)) -> KnownFor(x,y))", "score": 0}
{"id": "eqasc_validation_1045", "prediction": "all x.((Cat(x) & Whiskers(x)) -> NameFor(x,x))", "score": 0}
{"id": "eqasc_validation_1045", "prediction": "exists x.(CatsWhiskers(x))", "score": 0}
{"id": "eqasc_validation_1045", "prediction": "all x.((Cat(x) & Whiskers(x)) -> NameFor(x,y))", "score": 0}
{"id": "eqasc_validation_1045", "prediction": "all x.(CatsWhiskers(x) -> KnownFor(x))", "score": 0}
{"id": "eqasc_validation_1045", "prediction": "exists x.(CatsWhiskers(x) & KnownFor(x))", "score": 0}
{"id": "eqasc_validation_1045", "prediction": "all x.((Cat(x) & Whiskers(x)) -> Whiskers(x))", "score": 0}
{"id": "eqasc_validation_1045", "prediction": "all x.(CatsWhiskers(x) -> HasName(x))", "score": 0}
{"id": "eqasc_validation_1046", "prediction": "all x.(Cat(x) -> HasBodyParts(x))", "score": 0}
{"id": "eqasc_validation_1046", "prediction": "all x.(Cat(x) -> HasBodyPartsForFeeling(x))", "score": 0}
{"id": "eqasc_validation_1046", "prediction": "all x y.((Cat(x) & BodyPart(y)) -> HasForFeeling(x,y))", "score": 0}
{"id": "eqasc_validation_1046", "prediction": "all x y.((Cat(x) & BodyPart(y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_1046", "prediction": "all x.(Cat(x) -> (HasBodyParts(x) & FeelsBodyParts(x)))", "score": 0}
{"id": "eqasc_validation_1046", "prediction": "all x.(Cat(x) -> HasBodyPart(x))", "score": 0}
{"id": "eqasc_validation_1046", "prediction": "all x.(Cat(x) -> HasBodyPartsForFelting(x))", "score": 0}
{"id": "eqasc_validation_1046", "prediction": "all x.(Cat(x) -> (HasBodyParts(x) & FeelsGood(x)))", "score": 0}
{"id": "eqasc_validation_1046", "prediction": "all x.(Cat(x) -> (HasBodyParts(x) & Feels(x)))", "score": 0}
{"id": "eqasc_validation_1046", "prediction": "all x y.((Cat(x) & BodyPart(y)) -> HasForEmotion(x,y))", "score": 0}
{"id": "eqasc_validation_1046", "prediction": "all x.(Cat(x) -> (HasBodyParts(x) & FeelsFeeling(x)))", "score": 0}
{"id": "eqasc_validation_1046", "prediction": "all x y.((Cat(x) & BodyPart(y)) -> HasBodyPart(x,y))", "score": 0}
{"id": "eqasc_validation_1046", "prediction": "all x y z.((Cat(x) & BodyPart(y) & Feeling(z)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_1046", "prediction": "all x.(Cat(x) -> (HasBodyParts(x) & Feeling(x)))", "score": 0}
{"id": "eqasc_validation_1046", "prediction": "all x y.((Cat(x) & BodyPart(y)) -> HasBodyPartsForFeeling(x,y))", "score": 0}
{"id": "eqasc_validation_1046", "prediction": "all x.(Cat(x) -> HasBodyPartsForEmotion(x))", "score": 0}
{"id": "eqasc_validation_1047", "prediction": "all x y.((Whiskers(x) & Cat(y)) -> UsedForFeeling(x,y))", "score": 12}
{"id": "eqasc_validation_1047", "prediction": "all x y z.((Whiskers(x) & Cat(y) & Cat(z)) -> UsedForFeeling(x,y,z))", "score": 4}
{"id": "eqasc_validation_1047", "prediction": "all x y.((Whiskers(x) & Cat(y)) -> UsedForFeelingBy(x,y))", "score": 4}
{"id": "eqasc_validation_1047", "prediction": "all x y z.((Whisker(x) & Cat(y) & Cat(z)) -> UsedForFeeling(x,y,z))", "score": 4}
{"id": "eqasc_validation_1047", "prediction": "all x y z.((Whiskers(x) & Cat(y) & Cat(z)) -> UsedForFeelingBy(x,y,z))", "score": 4}
{"id": "eqasc_validation_1047", "prediction": "all x y.((Whisker(x) & Cat(y)) -> UsedForFeeling(x,y))", "score": 4}
{"id": "eqasc_validation_1047", "prediction": "all x y z.((Whisker(x) & Cat(y) & Cat(z)) -> UsedForFeelingBy(x,y,z))", "score": 4}
{"id": "eqasc_validation_1047", "prediction": "all x y.((Whiskers(x) & Cat(y)) -> UsedForFelting(x,y))", "score": 0}
{"id": "eqasc_validation_1047", "prediction": "all x.(Whiskers(x) -> UsedForFeelingByCats(x))", "score": 0}
{"id": "eqasc_validation_1047", "prediction": "all x y z.((Whiskers(x) & Cat(y) & Cat(z)) -> UsedForFelting(x,y,z))", "score": 4}
{"id": "eqasc_validation_1047", "prediction": "all x y.((Whisker(x) & Cat(y)) -> UsedForFeelingBy(x,y))", "score": 4}
{"id": "eqasc_validation_1047", "prediction": "all x y.((Whiskers(x) & Cat(y)) -> UsedForFeltingBy(x,y))", "score": 0}
{"id": "eqasc_validation_1047", "prediction": "all x y z.((Whiskers(x) & Cat(y) & Cat(z)) -> UsedForFeltingBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1047", "prediction": "all x.(Whiskers(x) -> UsedForFeeling(x))", "score": 0}
{"id": "eqasc_validation_1047", "prediction": "all x y.((Whiskers(x) & Cat(y)) -> UsedForSmelling(x,y))", "score": 0}
{"id": "eqasc_validation_1047", "prediction": "all x y z.((Whiskers(x) & Cat(y) & Cat(z)) -> UsedForSmelling(x,y,z))", "score": 0}
{"id": "eqasc_validation_1048", "prediction": "all x.((Hair(x) | Whiskers(x) | Claws(x) | Hooves(x)) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1048", "prediction": "all x.((Hair(x) | Whiskers(x) | Cleats(x) | Hooves(x)) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1048", "prediction": "(MadeOfKeratin(Hair) & MadeOfKeratin(Whiskers) & MadeOfKeratin(Claws) & MadeOfKeratin(Hooves))", "score": 0}
{"id": "eqasc_validation_1048", "prediction": "all x.(Keratin(x) -> (Hair(x) | Whiskers(x) | Claws(x) | Hooves(x)))", "score": 0}
{"id": "eqasc_validation_1048", "prediction": "all x.((Hair(x) & Whiskers(x) & Claws(x) & Hooves(x)) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1048", "prediction": "all x.(Hair(x) & (Whiskers(x) | Claws(x) | Hooves(x))) -> MadeOfKeratin(x))", "score": -1}
{"id": "eqasc_validation_1048", "prediction": "(MadeOfKeratin(Hair) & MadeOfKeratin(Wheels) & MadeOfKeratin(Claws) & MadeOfKeratin(Hooves))", "score": 0}
{"id": "eqasc_validation_1048", "prediction": "all x.((Hair(x) | Whisker(x) | Claws(x) | Hooves(x)) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1048", "prediction": "all x.((Hair(x) | Whiskers(x) | Claws(x) | Hooves(x)) -> Keratin(x))", "score": 0}
{"id": "eqasc_validation_1048", "prediction": "(MadeOfKeratin(Hair) & MadeOfKeratin(Whirls) & MadeOfKeratin(Claws) & MadeOfKeratin(Hooves))", "score": 0}
{"id": "eqasc_validation_1048", "prediction": "all x.(Keratin(x) -> (Hair(x) & Whiskers(x) & Claws(x) & Hooves(x)))", "score": 0}
{"id": "eqasc_validation_1048", "prediction": "all x y z.((Hair(x) & Whiskers(y) & Claws(z) & Hooves(x)) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1048", "prediction": "all x.(Hair(x) & Whiskers(x) & Claws(x) & Hooves(x)) -> MadeOfKeratin(x))", "score": -1}
{"id": "eqasc_validation_1048", "prediction": "all x y.((Hair(x) & Whiskers(y) & Claws(y) & Hooves(x)) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1048", "prediction": "all x.((Hair(x) | Whiskers(x) | Claws(x) | Hooves(x)) -> MakesOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1049", "prediction": "all x.((Tissue(x) & MadeOfKeratin(x)) -> UsedForFeelingByAnimals(x))", "score": 0}
{"id": "eqasc_validation_1049", "prediction": "all x y.((Tissue(x) & Keratin(y)) -> UsedForFeelingByAnimals(x,y))", "score": 0}
{"id": "eqasc_validation_1049", "prediction": "all x y z.((Tissue(x) & Keratin(y) & Animal(z)) -> UsedForFeeling(x,y,z))", "score": 0}
{"id": "eqasc_validation_1049", "prediction": "all x.((Tissue(x) & MadeOfKeratin(x)) -> UsedForSensementByAnimals(x))", "score": 0}
{"id": "eqasc_validation_1049", "prediction": "all x y z.((Tissue(x) & Keratin(y) & Animal(z) & MadeOf(x,y)) -> UsedForFeelingBy(x,z))", "score": 0}
{"id": "eqasc_validation_1049", "prediction": "all x y z.((Tissue(x) & Keratin(y) & Animal(z) & MadeOf(x,y)) -> UsedForFeeling(x,z))", "score": 0}
{"id": "eqasc_validation_1049", "prediction": "all x.((Tissue(x) & MadeOfKeratin(x)) -> UsedForSenseingByAnimals(x))", "score": 0}
{"id": "eqasc_validation_1049", "prediction": "all x.((Tissue(x) & MadeOfKeratin(x)) -> UsedForFeeling(x))", "score": 0}
{"id": "eqasc_validation_1049", "prediction": "all x y z.((Tissue(x) & Keratin(y) & Animal(z)) -> UsedForFeelingBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1049", "prediction": "all x y.((Tissue(x) & Keratin(y)) -> UsedForFeelingByAnimals(x))", "score": 0}
{"id": "eqasc_validation_1049", "prediction": "all x y.((Tissue(x) & Keratin(y) & Animal(z)) -> UsedForFeeling(x,y,z))", "score": 0}
{"id": "eqasc_validation_1049", "prediction": "all x y.((Tissue(x) & Keratin(y)) -> UsedForFeeling(x,y))", "score": 0}
{"id": "eqasc_validation_1049", "prediction": "all x y z.((Tissue(x) & Keratin(y) & Animal(z)) -> UsedForFeelingBy(x,z))", "score": 0}
{"id": "eqasc_validation_1049", "prediction": "all x y.((Tissue(x) & Keratin(y) & Animal(z)) -> UsedForFeelingBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1049", "prediction": "all x y.((Tissue(x) & Keratin(y) & Animal(z)) -> UsedForFeelingBy(x,z))", "score": 0}
{"id": "eqasc_validation_1049", "prediction": "all x y.((Tissue(x) & Keratin(y)) -> UsedForSensementByAnimals(x,y))", "score": 0}
{"id": "eqasc_validation_1050", "prediction": "all x.(Watch(x) -> UsedForMeasuringTime(x))", "score": 0}
{"id": "eqasc_validation_1050", "prediction": "all x.(Watch(x) -> MeasuresTime(x))", "score": 0}
{"id": "eqasc_validation_1050", "prediction": "all x y.((Watch(x) & Time(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1050", "prediction": "all x y.((Watch(x) & Time(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1050", "prediction": "all x y z.((Watch(x) & Time(y) & Time(z)) -> UsedForMeasuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1050", "prediction": "all x y z.((Watch(x) & Time(y) & Time(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1050", "prediction": "all x y.((Watch(x) & MeasuresTime(x,y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1050", "prediction": "all x y.((Watch(x) & MeasuresTime(x,y)) -> UsedForMeasuringTime(x,y))", "score": 0}
{"id": "eqasc_validation_1050", "prediction": "all x y.((Watch(x) & MeasuresTime(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1050", "prediction": "all x y.((Watch(x) & MeasuresTime(y)) -> UsedForMeasuringTime(x,y))", "score": 0}
{"id": "eqasc_validation_1050", "prediction": "all x y.((Watch(x) & MeasuresTime(x)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1050", "prediction": "all x y z.((Watch(x) & MeasuresTime(y) & Time(z)) -> UsedForMeasuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1050", "prediction": "all x y.((Watch(x) & Time(y) & Measures(x,y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1050", "prediction": "all x y z.((Watch(x) & MeasuresTime(y) & Time(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1050", "prediction": "all x y.((Watch(x) & MeasuresTime(x)) -> UsedForMeasuringTime(x,y))", "score": 0}
{"id": "eqasc_validation_1050", "prediction": "all x y.((Watch(x) & MeasureTime(y)) -> UsedForMeasuringTime(x,y))", "score": 0}
{"id": "eqasc_validation_1051", "prediction": "all x.(Time(x) -> MeasuredInSeconds(x))", "score": 0}
{"id": "eqasc_validation_1051", "prediction": "all x.(Time(x) -> MeasurableInSeconds(x))", "score": 0}
{"id": "eqasc_validation_1051", "prediction": "all x.(Time(x) -> MeasuringSeconds(x))", "score": 0}
{"id": "eqasc_validation_1051", "prediction": "all x.(Time(x) -> MeasuringInSeconds(x))", "score": 0}
{"id": "eqasc_validation_1051", "prediction": "all x y.((Time(x) & Second(y)) -> MeasuredIn(x,y))", "score": 0}
{"id": "eqasc_validation_1051", "prediction": "all x y.((Time(x) & Second(y)) -> MeasurableIn(x,y))", "score": 0}
{"id": "eqasc_validation_1051", "prediction": "all x y.((Time(x) & Second(y)) -> Measuring(x,y))", "score": 0}
{"id": "eqasc_validation_1051", "prediction": "all x.(Times(x) -> MeasuredInSeconds(x))", "score": 0}
{"id": "eqasc_validation_1051", "prediction": "all x.(Time(x) -> MeasuredInSecond(x))", "score": 0}
{"id": "eqasc_validation_1051", "prediction": "all x.(Time(x) -> (MeasuredInSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1051", "prediction": "all x.(Times(x) -> MeasurableInSeconds(x))", "score": 0}
{"id": "eqasc_validation_1052", "prediction": "all x.(Watch(x) -> MeasuresSeconds(x))", "score": 0}
{"id": "eqasc_validation_1052", "prediction": "all x.(Watch(x) -> MeasureSeconds(x))", "score": 0}
{"id": "eqasc_validation_1052", "prediction": "all x.(Watch(x) -> CanMeasureSeconds(x))", "score": 0}
{"id": "eqasc_validation_1052", "prediction": "all x.(Watch(x) -> UsedToMeasureSeconds(x))", "score": 0}
{"id": "eqasc_validation_1052", "prediction": "all x y.((Watch(x) & Second(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1052", "prediction": "all x.(Watch(x) -> (MeasuresSeconds(x) & MeasuresSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1052", "prediction": "all x.(Watch(x) -> (MeasuresSeconds(x) | MeasuresSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1052", "prediction": "all x y.((Watch(x) & Second(y)) -> CanBeMeasured(x,y))", "score": 0}
{"id": "eqasc_validation_1052", "prediction": "exists x.(Watch(x) & MeasuresSeconds(x))", "score": 0}
{"id": "eqasc_validation_1052", "prediction": "all x y.((Watch(x) & Second(y)) -> CanMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1052", "prediction": "all x y.((Watch(x) & Second(y)) -> Measure(x,y))", "score": 0}
{"id": "eqasc_validation_1052", "prediction": "all x y.((Watch(x) & Seconds(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1052", "prediction": "all x.(Watch(x) -> CanBeMeasuredToMeasureSeconds(x))", "score": 0}
{"id": "eqasc_validation_1052", "prediction": "all x.(Watch(x) -> CanBeUsedToMeasureSeconds(x))", "score": 0}
{"id": "eqasc_validation_1053", "prediction": "all x.(Time(x) -> MeasuredInSeconds(x))", "score": 0}
{"id": "eqasc_validation_1053", "prediction": "all x.(Time(x) -> MeasurableInSeconds(x))", "score": 0}
{"id": "eqasc_validation_1053", "prediction": "all x.(Time(x) -> MeasuringInSeconds(x))", "score": 0}
{"id": "eqasc_validation_1053", "prediction": "all x.(Time(x) -> MeasuringSeconds(x))", "score": 0}
{"id": "eqasc_validation_1053", "prediction": "all x y.((Time(x) & Second(y)) -> MeasuredIn(x,y))", "score": 0}
{"id": "eqasc_validation_1053", "prediction": "all x.(Time(x) -> MeasuredInSecond(x))", "score": 0}
{"id": "eqasc_validation_1053", "prediction": "all x.(Time(x) -> (MeasuredInSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1053", "prediction": "all x.(Time(x) -> MeasuresInSeconds(x))", "score": 0}
{"id": "eqasc_validation_1053", "prediction": "all x.(Times(x) -> MeasuredInSeconds(x))", "score": 0}
{"id": "eqasc_validation_1053", "prediction": "all x.(Time(x) -> Measuring(x,seconds))", "score": 0}
{"id": "eqasc_validation_1053", "prediction": "all x y.((Time(x) & Second(y)) -> MeasurableIn(x,y))", "score": 0}
{"id": "eqasc_validation_1054", "prediction": "all x.(Watch(x) -> UsedForMeasuringSeconds(x))", "score": 0}
{"id": "eqasc_validation_1054", "prediction": "all x.(Watch(x) -> MeasuresSeconds(x))", "score": 0}
{"id": "eqasc_validation_1054", "prediction": "all x y.((Watch(x) & Watch(y)) -> MeasuresSeconds(x,y))", "score": 0}
{"id": "eqasc_validation_1054", "prediction": "all x y.((Watch(x) & Seconds(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1054", "prediction": "all x y z.((Watch(x) & Seconds(y) & Seconds(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1054", "prediction": "all x y.((Watch(x) & Watch(y)) -> UsedForMeasuringSeconds(x,y))", "score": 0}
{"id": "eqasc_validation_1054", "prediction": "all x y.((Watch(x) & Seconds(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1054", "prediction": "all x y z.((Watch(x) & Seconds(y) & Seconds(z)) -> UsedForMeasuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1054", "prediction": "all x.(Watch(x) -> (MeasuresSeconds(x) & MeasuresSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1054", "prediction": "all x y.((Watch(x) & MeasuresSeconds(x,y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1054", "prediction": "all x y.((Watch(x) & Time(y)) -> MeasuresSeconds(x,y))", "score": 0}
{"id": "eqasc_validation_1054", "prediction": "all x y.((Watch(x) & MeasuresSeconds(x,y)) -> UsedForMeasuringSeconds(x,y))", "score": 0}
{"id": "eqasc_validation_1054", "prediction": "all x y.((Watch(x) & Time(y)) -> UsedForMeasuringSeconds(x,y))", "score": 0}
{"id": "eqasc_validation_1054", "prediction": "all x y z.((Watch(x) & Second(y) & Second(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1054", "prediction": "all x y.((Watch(x) & UsedForMeasuringSeconds(x)) -> MeasuresSeconds(x,y))", "score": 0}
{"id": "eqasc_validation_1054", "prediction": "all x y.((Watch(x) & MeasuresSeconds(y)) -> UsedForMeasuringSeconds(x,y))", "score": 0}
{"id": "eqasc_validation_1055", "prediction": "all x.((Rolex(x) & Rolex(x)) -> CheapGoldWatch(x))", "score": 0}
{"id": "eqasc_validation_1055", "prediction": "all x.((Rolex(x) & Today(x)) -> CheapGoldWatch(x))", "score": 0}
{"id": "eqasc_validation_1055", "prediction": "all x.((Rolex(x) & Todays(x)) -> CheapGoldWatch(x))", "score": 0}
{"id": "eqasc_validation_1055", "prediction": "all x.((Rolex(x) & Rolex(x)) -> TomorrowsCheapGoldWatch(x))", "score": 0}
{"id": "eqasc_validation_1055", "prediction": "all x.((Rolex(x) & TomorrowsLiquidGoldWatch(x)) -> Rolex(x))", "score": 0}
{"id": "eqasc_validation_1055", "prediction": "all x y.((Rolex(x) & Rolex(y)) -> TomorrowsCheapGoldWatch(x,y))", "score": 0}
{"id": "eqasc_validation_1055", "prediction": "all x y.((Rolex(x) & Rolex(y)) -> CheapGoldWatch(x,y))", "score": 0}
{"id": "eqasc_validation_1055", "prediction": "all x.((TodaysRolex(x) & TomorrowsLiquidGoldWatch(x)) -> Rolex(x))", "score": 0}
{"id": "eqasc_validation_1055", "prediction": "all x.((Rolex(x) & Rolex(x)) -> TomorrowsLittleGoldWatch(x))", "score": 0}
{"id": "eqasc_validation_1055", "prediction": "all x.((Rolex(x) & Rolex(x)) -> TomorrowsLiquidGoldWatch(x))", "score": 0}
{"id": "eqasc_validation_1055", "prediction": "all x y.((Rolex(x) & Rolex(y)) -> TomorrowsLiquidGoldWatch(x,y))", "score": 0}
{"id": "eqasc_validation_1055", "prediction": "all x.((Rolex(x) & TomorrowsLiquidGoldWatch(x)) -> TodaysRolex(x))", "score": 0}
{"id": "eqasc_validation_1055", "prediction": "all x y.((Rolex(x) & Rolex(y)) -> TomorrowsLittleGoldWatch(x,y))", "score": 0}
{"id": "eqasc_validation_1055", "prediction": "all x.((Rolex(x) & Tomorrow(x)) -> CheapGoldWatch(x))", "score": 0}
{"id": "eqasc_validation_1055", "prediction": "all x.((Rolex(x) & TomorrowsLittleGoldWatch(x)) -> Rolex(x))", "score": 0}
{"id": "eqasc_validation_1055", "prediction": "all x.((Rolex(x) & CheapGoldWatch(x)) -> Todays(x))", "score": 0}
{"id": "eqasc_validation_1056", "prediction": "all x.(Rolex(x) -> UsedForMeasuringTime(x))", "score": 0}
{"id": "eqasc_validation_1056", "prediction": "all x y.((Rolex(x) & Time(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1056", "prediction": "all x.(Rolex(x) -> MeasuresTime(x))", "score": 0}
{"id": "eqasc_validation_1056", "prediction": "all x y.((Rolex(x) & Rolex(y)) -> UsedForMeasuringTime(x,y))", "score": 0}
{"id": "eqasc_validation_1056", "prediction": "all x y z.((Rolex(x) & Time(y) & Time(z)) -> UsedForMeasuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1056", "prediction": "all x y.((Rolex(x) & Time(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1056", "prediction": "all x.((Rolex(x) & UsedForMeasuringTime(x)) -> MeasuresTime(x))", "score": 0}
{"id": "eqasc_validation_1056", "prediction": "all x.((Rolex(x) & MeasuresTime(x)) -> UsedForMeasuringTime(x))", "score": 0}
{"id": "eqasc_validation_1056", "prediction": "all x y z.((Rolex(x) & Time(y) & Rolex(z)) -> UsedForMeasuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1056", "prediction": "all x y.((Rolex(x) & Rolex(y)) -> MeasuresTime(x,y))", "score": 0}
{"id": "eqasc_validation_1056", "prediction": "all x y.((Rolex(x) & MeasuresTime(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1056", "prediction": "all x y z.((Rolex(x) & Time(y) & Time(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1056", "prediction": "all x y.((Rolex(x) & Time(y)) -> MeasuresTime(x,y))", "score": 0}
{"id": "eqasc_validation_1056", "prediction": "all x y z.((Rolex(x) & MeasuresTime(y) & Time(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1056", "prediction": "all x y.((Rolex(x) & Time(y) & Measures(x,y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1056", "prediction": "all x y.((Rolex(x) & MeasuresTime(y)) -> UsedForMeasuringTime(x,y))", "score": 0}
{"id": "eqasc_validation_1057", "prediction": "all x.(Time(x) -> (MeasuredUsingHours(x) & MeasuredUsingSeconds(x) & MeasuredUsingMinutes(x)))", "score": 0}
{"id": "eqasc_validation_1057", "prediction": "all x.(Time(x) -> (MeasuredUsing(x,hours) & MeasuredUsing(x,seconds) & MeasuredUsing(x,minutes)))", "score": 0}
{"id": "eqasc_validation_1057", "prediction": "all x.(Time(x) -> (MeasuredUsing(x,hours) | MeasuredUsing(x,seconds) | MeasuredUsing(x,minutes)))", "score": 0}
{"id": "eqasc_validation_1057", "prediction": "all x.(Time(x) -> (MeasuredWith(x,hours) & MeasuredWith(x,seconds) & MeasuredWith(x,minutes)))", "score": 0}
{"id": "eqasc_validation_1057", "prediction": "all x.(Time(x) -> (MeasuredInHours(x) & MeasuredInSeconds(x) & MeasuredInMinutes(x)))", "score": 0}
{"id": "eqasc_validation_1057", "prediction": "all x.(Time(x) -> (MeasuredUsingHours(x) | MeasuredUsingSeconds(x) | MeasuredUsingMinutes(x)))", "score": 0}
{"id": "eqasc_validation_1057", "prediction": "all x.(Time(x) -> (Measured(x,hours) & Measured(x,seconds) & Measured(x,minutes)))", "score": 0}
{"id": "eqasc_validation_1057", "prediction": "all x.(Time(x) -> (MeasuresHours(x) & MeasuresSeconds(x) & MeasuresMinutes(x)))", "score": 0}
{"id": "eqasc_validation_1057", "prediction": "all x.(Time(x) -> (Measured(x,hours) | Measured(x,seconds) | Measured(x,minutes)))", "score": 0}
{"id": "eqasc_validation_1057", "prediction": "all x.(Time(x) -> (MeasuredWith(x,hours) | MeasuredWith(x,seconds) | MeasuredWith(x,minutes)))", "score": 0}
{"id": "eqasc_validation_1057", "prediction": "all x.(Time(x) -> (MeasuredWith(x,hours) & MeasuredWith(x,seconds) & MeasuredUsing(x,minutes)))", "score": 0}
{"id": "eqasc_validation_1057", "prediction": "all x y z.((Time(x) & Hour(y) & Second(z)) -> (Measured(x,y) & Measured(x,z) & Measured(x,y) & Measured(x,z) & Measured(x,z)))", "score": 0}
{"id": "eqasc_validation_1058", "prediction": "all x.(Watch(x) -> (MeasuresHours(x) & MeasuresSeconds(x) & MeasuresMinutes(x)))", "score": 0}
{"id": "eqasc_validation_1058", "prediction": "all x.(Watch(x) -> (MeasuresHours(x) | MeasuresSeconds(x) | MeasuresMinutes(x)))", "score": 0}
{"id": "eqasc_validation_1058", "prediction": "all x.(Watch(x) -> (Measures(x,hours) & Measures(x,seconds) & Measures(x,minutes)))", "score": 0}
{"id": "eqasc_validation_1058", "prediction": "all x.(Watch(x) -> (MeasuresHeights(x) & MeasuresSeconds(x) & MeasuresMinutes(x)))", "score": 0}
{"id": "eqasc_validation_1058", "prediction": "all x.(Watch(x) -> (MeasuresHours(x) & MeasuresSeconds(x) & MeasuresMeasuresMinutes(x)))", "score": 0}
{"id": "eqasc_validation_1058", "prediction": "all x.(Watch(x) -> (Measures(x,hours) | Measures(x,seconds) | Measures(x,minutes)))", "score": 0}
{"id": "eqasc_validation_1058", "prediction": "all x.(Watch(x) -> MeasuresHours(x) & MeasuresSeconds(x) & MeasuresMinutes(x))", "score": 0}
{"id": "eqasc_validation_1058", "prediction": "all x y z.((Watch(x) & Hours(y) & Seconds(z) & Minutes(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1058", "prediction": "all x.(Watch(x) -> Measures(x,hours) & Measures(x,seconds) & Measures(x,minutes))", "score": 0}
{"id": "eqasc_validation_1058", "prediction": "all x y.((Watch(x) & Hours(y) & Seconds(y) & Minutes(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1058", "prediction": "all x.(Watch(x) -> (MeasuresHours(x) & MeasuresSeconds(x) & MeasuresMinues(x)))", "score": 0}
{"id": "eqasc_validation_1058", "prediction": "all x.(Watch(x) -> MeasuresHoursSecondsMinutes(x))", "score": 0}
{"id": "eqasc_validation_1058", "prediction": "all x y z.((Watch(x) & Hours(y) & Seconds(z) & Minutes(x)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1058", "prediction": "all x.(Watch(x) -> (MeasuresHoursSecondsMinutes(x) & MeasuresMinutes(x)))", "score": 0}
{"id": "eqasc_validation_1059", "prediction": "all x.(TimeManagement(x) -> (UsesHoursEfficiently(x) & UsesHoursEfficiently(x)))", "score": 0}
{"id": "eqasc_validation_1059", "prediction": "all x y z.((TimeManagement(x) & Hours(y) & Day(z)) -> UsesEfficiently(x,y,z))", "score": 0}
{"id": "eqasc_validation_1059", "prediction": "all x y.((TimeManagement(x) & Hours(y)) -> UsesEfficiently(x,y))", "score": 0}
{"id": "eqasc_validation_1059", "prediction": "all x y z.((TimeManagement(x) & Hour(y) & Day(z)) -> UsesEfficiently(x,y,z))", "score": 0}
{"id": "eqasc_validation_1059", "prediction": "all x y.((TimeManagement(x) & Day(y)) -> UsesHoursEfficiently(x,y))", "score": 0}
{"id": "eqasc_validation_1059", "prediction": "all x.(TimeManagement(x) -> UsesHoursEfficiently(x))", "score": 0}
{"id": "eqasc_validation_1059", "prediction": "all x y.((TimeManagement(x) & Day(y)) -> (UsesHoursEfficiently(x,y) & UsesHoursEfficiently(x,y)))", "score": 0}
{"id": "eqasc_validation_1059", "prediction": "all x y.((TimeManagement(x) & Day(y)) -> (UsesHoursEfficiently(x,y)))", "score": 0}
{"id": "eqasc_validation_1059", "prediction": "all x y z.((TimeManagement(x) & Hours(y) & Day(z)) -> (UsesEfficiently(x,y,z) & UsesEfficiently(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1059", "prediction": "all x y z.((TimeManagement(x) & Hour(y) & Day(z)) -> (UsesEfficiently(x,y,z) & UsesEfficiently(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1059", "prediction": "all x.(TimeManagement(x) -> (UsesHoursEfficiently(x) & MoreEfficiently(x)))", "score": 0}
{"id": "eqasc_validation_1059", "prediction": "all x y.((TimeManagement(x) & Hour(y)) -> UsesEfficiently(x,y))", "score": 0}
{"id": "eqasc_validation_1059", "prediction": "all x y.((TimeManagement(x) & Day(y)) -> (UsesHoursEfficiently(x,y) | UsesHoursEfficiently(x,y)))", "score": 0}
{"id": "eqasc_validation_1059", "prediction": "all x.(TimeManagement(x) -> (UsesHoursEfficiently(x) & Efficiently(x)))", "score": 0}
{"id": "eqasc_validation_1060", "prediction": "all x y.((Watch(x) & ScientificResearch(y)) -> NeededFor(x,y))", "score": 0}
{"id": "eqasc_validation_1060", "prediction": "all x.(Watch(x) -> NeededForScientificResearch(x))", "score": 0}
{"id": "eqasc_validation_1060", "prediction": "all x y z.((Watch(x) & ScientificResearch(y) & ScientificResearch(z)) -> NeededFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1060", "prediction": "all x y.((Watch(x) & ScientificResearch(y) & NeededFor(x,y)) -> NeededFor(x,y))", "score": 0}
{"id": "eqasc_validation_1060", "prediction": "all x y z.((Watch(x) & ScientificResearch(y) & ScientificResearch(z) & NeededFor(x,y,z)) -> NeededFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1060", "prediction": "all x y.((Watch(x) & ScientificResearch(y)) -> NecessaryFor(x,y))", "score": 0}
{"id": "eqasc_validation_1060", "prediction": "all x y z.((Watch(x) & ScientificResearch(y) & ScientificResearch(z)) -> NecessaryFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1060", "prediction": "all x.((Watch(x) & ScientificResearch(x)) -> NeededFor(x,ScientificResearch))", "score": 0}
{"id": "eqasc_validation_1060", "prediction": "all x y z.((Watch(x) & ScientificResearch(y) & ScientificResearch(z)) -> Needs(x,y,z))", "score": 0}
{"id": "eqasc_validation_1060", "prediction": "all x y.((Watch(x) & ScientificResearch(y)) -> NeededForResearch(x,y))", "score": 0}
{"id": "eqasc_validation_1060", "prediction": "all x y z.((Watch(x) & ScientificResearch(y) & ScientificResearch(z) & NeededFor(x,y,z)) -> NeededFor(x,y))", "score": 0}
{"id": "eqasc_validation_1060", "prediction": "all x y z.((Watch(x) & ScientificResearch(y) & ScientificResearch(z)) -> Needed(x,y,z))", "score": 0}
{"id": "eqasc_validation_1060", "prediction": "all x y.((Watch(x) & ScientificResearch(y)) -> Needs(x,y))", "score": 0}
{"id": "eqasc_validation_1060", "prediction": "all x.((Watch(x) & ScientificResearch(x)) -> NeededFor(x,scientificResearch))", "score": 0}
{"id": "eqasc_validation_1060", "prediction": "all x y z.((Watch(x) & ScientificResearch(y) & ScientificResearch(z) & NeededFor(x,y)) -> NeededFor(x,z))", "score": 0}
{"id": "eqasc_validation_1060", "prediction": "all x y z w.((Watch(x) & ScientificResearch(y) & ScientificResearch(z) & NeededFor(x,y,z)) -> NeededFor(x,w))", "score": 0}
{"id": "eqasc_validation_1061", "prediction": "all x.(Time(x) -> MeasuredInMinutes(x))", "score": 0}
{"id": "eqasc_validation_1061", "prediction": "all x.(Time(x) -> MeasurableInMinutes(x))", "score": 0}
{"id": "eqasc_validation_1061", "prediction": "all x y.((Time(x) & Minute(y)) -> MeasuredIn(x,y))", "score": 0}
{"id": "eqasc_validation_1061", "prediction": "all x.(Time(x) -> MeasuringInMinutes(x))", "score": 0}
{"id": "eqasc_validation_1061", "prediction": "all x y.((Time(x) & Minute(y)) -> MeasurableIn(x,y))", "score": 0}
{"id": "eqasc_validation_1061", "prediction": "all x y.((Time(x) & Minute(y)) -> Measuring(x,y))", "score": 0}
{"id": "eqasc_validation_1061", "prediction": "all x y z.((Time(x) & Minute(y) & Minute(z)) -> MeasuredIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1061", "prediction": "all x.(Time(x) -> MeasuringMinutes(x))", "score": 0}
{"id": "eqasc_validation_1061", "prediction": "all x y.((Time(x) & Minutes(y)) -> MeasuredIn(x,y))", "score": 0}
{"id": "eqasc_validation_1062", "prediction": "all x.(Watch(x) -> UsedForMeasuringMinutes(x))", "score": 0}
{"id": "eqasc_validation_1062", "prediction": "all x.(Watch(x) -> MeasuresMinutes(x))", "score": 0}
{"id": "eqasc_validation_1062", "prediction": "all x y.((Watch(x) & Minute(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1062", "prediction": "all x y.((Watch(x) & Minute(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1062", "prediction": "all x y.((Watch(x) & Minutes(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1062", "prediction": "all x.(Watch(x) -> MeasureMinutes(x))", "score": 0}
{"id": "eqasc_validation_1062", "prediction": "all x y z.((Watch(x) & Minute(y) & Minute(z)) -> UsedForMeasuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1062", "prediction": "all x.(Watch(x) -> MeasuringMinutes(x))", "score": 0}
{"id": "eqasc_validation_1062", "prediction": "all x y z.((Watch(x) & Minute(y) & Minute(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1062", "prediction": "all x y.((Watch(x) & Minutes(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1062", "prediction": "all x.(Watch(x) -> UsedForMeasuringMeetingMinutes(x))", "score": 0}
{"id": "eqasc_validation_1062", "prediction": "all x.(Watch(x) -> UsesForMeasuringMinutes(x))", "score": 0}
{"id": "eqasc_validation_1062", "prediction": "all x y z.((Watch(x) & Minute(y) & Minute(z)) -> UsedForMeasurement(x,y,z))", "score": 0}
{"id": "eqasc_validation_1062", "prediction": "all x y.((Watch(x) & Minute(y)) -> UsedForMeasurement(x,y))", "score": 0}
{"id": "eqasc_validation_1063", "prediction": "all x.(Watch(x) -> KeepsTrackOfSeconds(x))", "score": 0}
{"id": "eqasc_validation_1063", "prediction": "all x.(Watch(x) -> KeepsSeconds(x))", "score": 0}
{"id": "eqasc_validation_1063", "prediction": "all x y.((Watch(x) & Second(y)) -> KeepsTrackOf(x,y))", "score": 0}
{"id": "eqasc_validation_1063", "prediction": "all x.(Watch(x) -> MustKeepSeconds(x))", "score": 0}
{"id": "eqasc_validation_1063", "prediction": "all x.(Watch(x) -> TracksSeconds(x))", "score": 0}
{"id": "eqasc_validation_1063", "prediction": "all x.(Watch(x) -> MustKeepTrackOfSeconds(x))", "score": 0}
{"id": "eqasc_validation_1063", "prediction": "all x.(Watch(x) -> TrackSeconds(x))", "score": 0}
{"id": "eqasc_validation_1063", "prediction": "all x.(Watch(x) -> (KeepsTrackOfSeconds(x) | KeepsTrackOfSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1063", "prediction": "all x.(Watch(x) -> KeepSeconds(x))", "score": 0}
{"id": "eqasc_validation_1063", "prediction": "all x y.((Watch(x) & Second(y)) -> KeepsTrack(x,y))", "score": 0}
{"id": "eqasc_validation_1063", "prediction": "all x.(Watch(x) -> (KeepsTrackOfSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1063", "prediction": "all x.(Watch(x) -> KeepsTrackerOfSeconds(x))", "score": 0}
{"id": "eqasc_validation_1063", "prediction": "all x y.((Watch(x) & Second(y)) -> MustKeepTrackOf(x,y))", "score": 0}
{"id": "eqasc_validation_1063", "prediction": "all x.(Watch(x) -> KeepsSecondsTrack(x))", "score": 0}
{"id": "eqasc_validation_1063", "prediction": "all x.(Watch(x) -> (KeepsTrackOfSeconds(x) & -KeepsTrackOfSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1063", "prediction": "all x.(Watch(x) -> (KeepsTrackOfSeconds(x) | -KeepsTrackOfSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1064", "prediction": "all x.(TickingHandsOfClock(x) -> ProbablyEasiestToSeeTime(x))", "score": 0}
{"id": "eqasc_validation_1064", "prediction": "all x y.((Clock(x) & TickingHands(y)) -> ProbablyEasiestToSeeTime(x,y))", "score": 0}
{"id": "eqasc_validation_1064", "prediction": "all x y.((TickingHands(x) & Clock(y)) -> ProbablyEasiestToSeeTime(x,y))", "score": 0}
{"id": "eqasc_validation_1064", "prediction": "all x y.((TickingHands(x) & Clock(y)) -> EasyToSeeTime(x,y))", "score": 0}
{"id": "eqasc_validation_1064", "prediction": "all x.((TickingHands(x) & Clock(x)) -> EasyToSeeTime(x))", "score": 0}
{"id": "eqasc_validation_1064", "prediction": "all x y.((Clock(x) & TickingHands(y)) -> EasyToSeeTime(x,y))", "score": 0}
{"id": "eqasc_validation_1064", "prediction": "all x y.((Clock(x) & Time(y)) -> WatchTickingHands(x,y))", "score": 0}
{"id": "eqasc_validation_1064", "prediction": "all x y.((Clock(x) & TickingHands(y)) -> EasyToSeeTime(x))", "score": 0}
{"id": "eqasc_validation_1064", "prediction": "all x.(TickingHandsOfClock(x) -> EasyToSeeTime(x))", "score": 0}
{"id": "eqasc_validation_1064", "prediction": "all x.((TickingHandsOfClock(x) & ProbablyEasiestToSeeTime(x)) -> SeeTime(x))", "score": 0}
{"id": "eqasc_validation_1064", "prediction": "all x.((Clock(x) & WatchTickingHands(x)) -> EasyToSeeTime(x))", "score": 0}
{"id": "eqasc_validation_1064", "prediction": "all x y z.((TickingHands(x) & Clock(y) & Time(z)) -> ProbablyEasiestToSee(x,y,z))", "score": 0}
{"id": "eqasc_validation_1064", "prediction": "all x y.((Clock(x) & TickingHands(y)) -> SeesTimeEasiest(x,y))", "score": 0}
{"id": "eqasc_validation_1064", "prediction": "all x y z.((TickingHands(x) & Clock(y) & Time(z)) -> EasyToSee(x,y,z))", "score": 0}
{"id": "eqasc_validation_1064", "prediction": "all x y.((Clock(x) & TickingHands(y)) -> SeesTime(x,y))", "score": 0}
{"id": "eqasc_validation_1064", "prediction": "all x.((TickingHandsOfClock(x) & ProbablyEasiestToSeeTime(x)) -> Watch(x))", "score": 0}
{"id": "eqasc_validation_1065", "prediction": "all x.(TickingHand(x) -> UsedForMeasuringTime(x))", "score": 0}
{"id": "eqasc_validation_1065", "prediction": "all x.(TickingHands(x) -> UsedForMeasuringTime(x))", "score": 0}
{"id": "eqasc_validation_1065", "prediction": "all x y.((TickingHand(x) & Time(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1065", "prediction": "all x.(TickingHand(x) -> MeasuresTime(x))", "score": 0}
{"id": "eqasc_validation_1065", "prediction": "all x y.((TickingHand(x) & Time(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1065", "prediction": "all x.(TickingHands(x) -> MeasuresTime(x))", "score": 0}
{"id": "eqasc_validation_1065", "prediction": "all x y z.((TickingHand(x) & Time(y) & Time(z)) -> UsedForMeasuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1065", "prediction": "all x y.((TickingHand(x) & Time(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1065", "prediction": "all x y.((TickingHand(x) & MeasuringTime(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1065", "prediction": "all x y z.((TickingHand(x) & Time(y) & Time(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1065", "prediction": "all x y.((TickingHands(x) & Time(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1065", "prediction": "all x y.((TickingHand(x) & MeasuresTime(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1065", "prediction": "all x y z.((TickingHand(x) & Time(y) & Time(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1065", "prediction": "all x y.((TickingHand(x) & Hand(y)) -> UsedForMeasuringTime(x,y))", "score": 0}
{"id": "eqasc_validation_1065", "prediction": "all x y.((TickingHand(x) & Time(y)) -> UsedForMetaphoring(x,y))", "score": 0}
{"id": "eqasc_validation_1065", "prediction": "all x.(TickingHand(x) -> MeasuringTime(x))", "score": 0}
{"id": "eqasc_validation_1066", "prediction": "all x.(Time(x) -> SpeedOfMovements(x))", "score": 0}
{"id": "eqasc_validation_1066", "prediction": "all x y.((Time(x) & Movement(y)) -> SpeedOfMovements(x,y))", "score": 0}
{"id": "eqasc_validation_1066", "prediction": "all x y.((Time(x) & MovementSpeed(y)) -> SpeedOfMovements(x,y))", "score": 0}
{"id": "eqasc_validation_1066", "prediction": "all x.(Time(x) -> TempoOfMovements(x))", "score": 0}
{"id": "eqasc_validation_1066", "prediction": "all x y.((Time(x) & MovementSpeed(y)) -> RefersTo(x,y))", "score": 0}
{"id": "eqasc_validation_1066", "prediction": "all x y z.((Time(x) & Movement(y) & Movement(z)) -> SpeedOfMovements(x,y,z))", "score": 0}
{"id": "eqasc_validation_1066", "prediction": "all x y z.((Time(x) & Movement(y) & Movement(z)) -> SpeedOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1066", "prediction": "all x y.((Time(x) & Movement(y)) -> Speed(x,y))", "score": 0}
{"id": "eqasc_validation_1066", "prediction": "all x y.((Time(x) & Movement(y)) -> SpeedOfMovement(x,y))", "score": 0}
{"id": "eqasc_validation_1066", "prediction": "all x y z.((Time(x) & Movement(y) & Movement(z)) -> Speed(x,y,z))", "score": 0}
{"id": "eqasc_validation_1066", "prediction": "all x y.((Time(x) & MovementSpeed(y)) -> SpeedOf(x,y))", "score": 0}
{"id": "eqasc_validation_1066", "prediction": "all x y.((Time(x) & Movement(y)) -> SpeedOf(x,y))", "score": 0}
{"id": "eqasc_validation_1066", "prediction": "all x y z.((Time(x) & MovementSpeed(y) & MovementSpeed(z)) -> RefersTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_1066", "prediction": "all x y.((Time(x) & MovementSpeed(y)) -> SpeedOfMovement(x,y))", "score": 0}
{"id": "eqasc_validation_1066", "prediction": "all x.(Time(x) -> (SpeedOfMovements(x)))", "score": 0}
{"id": "eqasc_validation_1067", "prediction": "all x.(Watch(x) -> MeasuresSpeedOfMovements(x))", "score": 0}
{"id": "eqasc_validation_1067", "prediction": "all x.(Watch(x) -> UsedForMeasuringSpeedOfMovements(x))", "score": 0}
{"id": "eqasc_validation_1067", "prediction": "all x.(Watch(x) -> MeasureSpeedOfMovements(x))", "score": 0}
{"id": "eqasc_validation_1067", "prediction": "all x.(Watch(x) -> (MeasuresSpeedOfMovements(x) & MeasuresSpeedOfMovements(x)))", "score": 0}
{"id": "eqasc_validation_1067", "prediction": "all x.(Watch(x) -> CanMeasureSpeedOfMovements(x))", "score": 0}
{"id": "eqasc_validation_1067", "prediction": "all x y.((Watch(x) & Movement(y)) -> MeasuresSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_1067", "prediction": "all x y.((Watch(x) & MovementSpeed(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1067", "prediction": "all x.(Watch(x) -> (MeasuresSpeedOfMovements(x) | MeasuresSpeedOfMovements(x)))", "score": 0}
{"id": "eqasc_validation_1067", "prediction": "all x.(Watch(x) -> MeasuringSpeedOfMovements(x))", "score": 0}
{"id": "eqasc_validation_1067", "prediction": "all x.(Watch(x) -> (MeasuresSpeedOfMovements(x)))", "score": 0}
{"id": "eqasc_validation_1067", "prediction": "all x.(Watch(x) -> MeasureSpedicityOfMovements(x))", "score": 0}
{"id": "eqasc_validation_1067", "prediction": "all x.(Watch(x) -> CanBeMeasuredForSpeedOfMovements(x))", "score": 0}
{"id": "eqasc_validation_1067", "prediction": "all x.(Watch(x) -> CanBeMeasuredSpeedOfMovements(x))", "score": 0}
{"id": "eqasc_validation_1068", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1068", "prediction": "all x.((Surface(x) & -St sterilized(x)) -> CoveredWithBacteria(x))", "score": -1}
{"id": "eqasc_validation_1068", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> LikelyCoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1068", "prediction": "all x.((Surface(x) & -Steriled(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1068", "prediction": "all x.((Surface(x) & -Steering(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1068", "prediction": "all x.((Surface(x) & -Stormized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1068", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> ProbablyCoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1068", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> ProbabillyCoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1068", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredByBacteria(x))", "score": 0}
{"id": "eqasc_validation_1068", "prediction": "all x.((Surface(x) & -Stérilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1068", "prediction": "all x.((Surface(x) & -Storned(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1068", "prediction": "all x.((Surface(x) & -Stilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1068", "prediction": "all x.((Surface(x) & -Sterilised(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1068", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> LikelyToBeCoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1069", "prediction": "all x.((Bacteria(x) | Viral(x)) -> Microbe(x))", "score": 0}
{"id": "eqasc_validation_1069", "prediction": "all x.((Bacteria(x) | Virus(x)) -> Microbe(x))", "score": 0}
{"id": "eqasc_validation_1069", "prediction": "all x y.((Bacteria(x) & Viral(y)) -> Microbe(x))", "score": 0}
{"id": "eqasc_validation_1069", "prediction": "all x.((Bacteria(x) & Viral(x)) -> Microbe(x))", "score": 0}
{"id": "eqasc_validation_1069", "prediction": "all x.((Bacteria(x) | Viruses(x)) -> Microbe(x))", "score": 0}
{"id": "eqasc_validation_1069", "prediction": "all x.(Microbe(x) -> (Bacteria(x) | Viral(x)))", "score": 0}
{"id": "eqasc_validation_1069", "prediction": "all x.((Bacteria(x) & Virus(x)) -> Microbe(x))", "score": 0}
{"id": "eqasc_validation_1069", "prediction": "all x.((Bacteria(x) | Virals(x)) -> Microbe(x))", "score": 0}
{"id": "eqasc_validation_1069", "prediction": "all x y.((Bacteria(x) & Virus(y)) -> Microbe(x))", "score": 0}
{"id": "eqasc_validation_1069", "prediction": "all x y.((Bacteria(x) & Viral(y)) -> Microbe(x,y))", "score": 0}
{"id": "eqasc_validation_1069", "prediction": "all x y.((Bacteria(x) | Viral(x)) -> Microbe(y))", "score": 0}
{"id": "eqasc_validation_1069", "prediction": "all x.(Microbe(x) -> (Bacteria(x) & Viral(x)))", "score": 0}
{"id": "eqasc_validation_1069", "prediction": "all x.((Bacteria(x) | Viren(x)) -> Microbe(x))", "score": 0}
{"id": "eqasc_validation_1069", "prediction": "all x.(Bacteria(x) & Viral(x)) -> Microbe(x))", "score": -1}
{"id": "eqasc_validation_1069", "prediction": "all x.(Microbial(x) -> (Bacteria(x) | Viral(x)))", "score": 0}
{"id": "eqasc_validation_1070", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWithLiveMicrobes(x))", "score": 0}
{"id": "eqasc_validation_1070", "prediction": "all x.((Surface(x) & -St sterilized(x)) -> CoveredWithLiveMicrobes(x))", "score": -1}
{"id": "eqasc_validation_1070", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> LikelyCoveredWithLiveMicrobes(x))", "score": 0}
{"id": "eqasc_validation_1070", "prediction": "all x.((Surface(x) & -Steriled(x)) -> CoveredWithLiveMicrobes(x))", "score": 0}
{"id": "eqasc_validation_1070", "prediction": "all x.((Surface(x) & -Steering(x)) -> CoveredWithLiveMicrobes(x))", "score": 0}
{"id": "eqasc_validation_1070", "prediction": "all x.((Surface(x) & -Stormized(x)) -> CoveredWithLiveMicrobes(x))", "score": 0}
{"id": "eqasc_validation_1070", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> ProbablyCoveredWithLiveMicrobes(x))", "score": 0}
{"id": "eqasc_validation_1070", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> LikelyToBeCoveredWithLiveMicrobes(x))", "score": 0}
{"id": "eqasc_validation_1070", "prediction": "all x.((Surface(x) & -Stérilized(x)) -> CoveredWithLiveMicrobes(x))", "score": 0}
{"id": "eqasc_validation_1070", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWithLiveMicrobites(x))", "score": 0}
{"id": "eqasc_validation_1070", "prediction": "all x.((Surface(x) & -Stilized(x)) -> CoveredWithLiveMicrobes(x))", "score": 0}
{"id": "eqasc_validation_1070", "prediction": "all x.((Surface(x) & NotSterilized(x)) -> CoveredWithLiveMicrobes(x))", "score": 0}
{"id": "eqasc_validation_1071", "prediction": "all x y.((Bacteria(x) & Bacteria(y)) -> (Eats(x) & DigestsFoods(y)))", "score": 0}
{"id": "eqasc_validation_1071", "prediction": "(all x.(Bacteria(x) -> Eats(x)) & all y.(Bacteria(y) -> DigestsFoods(y)))", "score": 0}
{"id": "eqasc_validation_1071", "prediction": "all x y.((Bacteria(x) & Bacteria(y)) -> (Eats(x) & Digests(y)))", "score": 0}
{"id": "eqasc_validation_1071", "prediction": "all x y.((Bacteria(x) & Bacteria(y)) -> (Eats(x,y) & DigestsFoods(y,x)))", "score": 0}
{"id": "eqasc_validation_1071", "prediction": "all x y.((Bacteria(x) & Bacteria(y)) -> (Eat(x) & Digest(y)))", "score": 0}
{"id": "eqasc_validation_1071", "prediction": "all x y z.((Bacteria(x) & Food(y) & Bacteria(z)) -> (Eats(x,y) & Digests(z,y)))", "score": 0}
{"id": "eqasc_validation_1071", "prediction": "all x y.((Bacteria(x) & Bacteria(y)) -> (Eats(x) & DigestsFood(y)))", "score": 0}
{"id": "eqasc_validation_1071", "prediction": "all x y.((Bacteria(x) & Bacteria(y)) -> (Eats(x,y) & Digests(y,x)))", "score": 0}
{"id": "eqasc_validation_1071", "prediction": "all x y.((Bacteria(x) & Bacteria(y)) -> (Eat(x,y) & Digest(y,x)))", "score": 0}
{"id": "eqasc_validation_1071", "prediction": "all x.(Bacteria(x) -> (Eats(x) & DigestsFoods(x)))", "score": 0}
{"id": "eqasc_validation_1071", "prediction": "(all x.(Bacteria(x) -> Eat(x)) & all y.(Bacteria(y) -> Digest(y)))", "score": 0}
{"id": "eqasc_validation_1071", "prediction": "(all x.(Bacteria(x) -> Eats(x)) & all y.(Bacteria(y) -> Digests(y)))", "score": 0}
{"id": "eqasc_validation_1071", "prediction": "all x y.((Bacteria(x) & Bacteria(y)) -> (Eats(x,y) & DigestsFood(y,x)))", "score": 0}
{"id": "eqasc_validation_1071", "prediction": "all x y z.((Bacteria(x) & Food(y) & Bacteria(z)) -> (Eat(x,y) & Digest(z,y)))", "score": 0}
{"id": "eqasc_validation_1071", "prediction": "all x y.((Bacteria(x) & Bacteria(y)) -> (Eats(x,y) & DigestsFoods(y)))", "score": 0}
{"id": "eqasc_validation_1071", "prediction": "(all x.(Bacteria(x) -> Eats(x)) & all y.(Bacteria(y) -> DigestsFood(y)))", "score": 0}
{"id": "eqasc_validation_1072", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> (EatsFoods(x) & DigestsFoods(x)))", "score": 0}
{"id": "eqasc_validation_1072", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWith(x))", "score": 0}
{"id": "eqasc_validation_1072", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWith(x,eats,digests,foods))", "score": 0}
{"id": "eqasc_validation_1072", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWith(x) & EatsAndDigestsFoods(x))", "score": 0}
{"id": "eqasc_validation_1072", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWithEatsAndDigestsFoods(x))", "score": 0}
{"id": "eqasc_validation_1072", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWith(x,EatsAndDigestsFoods(x))", "score": -1}
{"id": "eqasc_validation_1072", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> (EatsAndDigestsFoods(x) & CoveredWith(x)))", "score": 0}
{"id": "eqasc_validation_1072", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWith(x,EatsAndDigestsFoods))", "score": 0}
{"id": "eqasc_validation_1072", "prediction": "all x y.((Surface(x) & -Sterilized(x)) -> CoveredWith(x,y))", "score": 0}
{"id": "eqasc_validation_1072", "prediction": "all x y.((Surface(x) & -Sterilized(x)) -> (EatsAndDigestsFoods(y) & CoveredWith(x,y)))", "score": 0}
{"id": "eqasc_validation_1072", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWith(x,y) & EatsAndDigestsFoods(y))", "score": 0}
{"id": "eqasc_validation_1072", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWithFood(x))", "score": 0}
{"id": "eqasc_validation_1072", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> (EatsAndDigestsFoods(x) & CoveredWith(x,y)))", "score": 0}
{"id": "eqasc_validation_1073", "prediction": "all x.((Bacteria(x) & Viruses(x) & MakesPeopleSick(x)) -> PassedOnHands(x))", "score": 0}
{"id": "eqasc_validation_1073", "prediction": "all x.((Bacteria(x) & Virals(x) & MakesPeopleSick(x)) -> PassedOnHands(x))", "score": 0}
{"id": "eqasc_validation_1073", "prediction": "all x.((Bacteria(x) & Viruses(x) & MakesPeopleSick(x)) -> CanBePassedOnHands(x))", "score": 0}
{"id": "eqasc_validation_1073", "prediction": "all x.((Bacteria(x) & Viruses(x) & MakesPeopleSick(x)) -> PassableOnHands(x))", "score": 0}
{"id": "eqasc_validation_1073", "prediction": "all x.((Bacteria(x) & Virals(x) & MakesPeopleSick(x)) -> CanBePassedOnHands(x))", "score": 0}
{"id": "eqasc_validation_1073", "prediction": "all x.((Bacteria(x) & Virals(x) & MakesPeopleSick(x)) -> PassableOnHands(x))", "score": 0}
{"id": "eqasc_validation_1073", "prediction": "all x.((Bacteria(x) & Viruses(x) & MakesPersonSick(x)) -> PassedOnHands(x))", "score": 0}
{"id": "eqasc_validation_1073", "prediction": "all x.((Bacteria(x) | Virals(x)) -> PassedOnHands(x))", "score": 0}
{"id": "eqasc_validation_1073", "prediction": "all x.((Bacteria(x) | Viruses(x) & MakesPeopleSick(x)) -> PassedOnHands(x))", "score": 0}
{"id": "eqasc_validation_1073", "prediction": "all x.((Bacteria(x) & Virus(x) & MakesPeopleSick(x)) -> PassedOnHands(x))", "score": 0}
{"id": "eqasc_validation_1073", "prediction": "all x.((Bacteria(x) & Viral(x) & MakesPeopleSick(x)) -> PassedOnHands(x))", "score": 0}
{"id": "eqasc_validation_1073", "prediction": "all x y.((Bacteria(x) & Viral(y) & MakesPeopleSick(x)) -> PassedOnHands(x,y))", "score": 0}
{"id": "eqasc_validation_1073", "prediction": "all x y.((Bacteria(x) & Viral(y) & MakesPeopleSick(x)) -> PassedOnHands(x))", "score": 0}
{"id": "eqasc_validation_1073", "prediction": "all x y.((Bacteria(x) & Viral(y) & MakesPeopleSick(x)) -> CanBePassedOnHands(x))", "score": 0}
{"id": "eqasc_validation_1073", "prediction": "all x y.((Bacteria(x) & Viral(y) & MakesPeopleSick(x)) -> CanBePassedOnHands(x,y))", "score": 0}
{"id": "eqasc_validation_1073", "prediction": "all x.((Bacteria(x) | Virals(x)) -> CanBePassedOnHands(x))", "score": 0}
{"id": "eqasc_validation_1074", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CanMakePeopleSick(x))", "score": 0}
{"id": "eqasc_validation_1074", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> MakesPeopleSick(x))", "score": 0}
{"id": "eqasc_validation_1074", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> MakesPersonSick(x))", "score": 0}
{"id": "eqasc_validation_1074", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CanMakePersonSick(x))", "score": 0}
{"id": "eqasc_validation_1074", "prediction": "all x y.((Surface(x) & -Sterilized(x)) -> CanMakePeopleSick(x))", "score": 0}
{"id": "eqasc_validation_1074", "prediction": "all x y.((Surface(x) & -Sterilized(x)) -> CanMakePeopleSick(y))", "score": 0}
{"id": "eqasc_validation_1074", "prediction": "all x.((Surface(x) & -St sterilized(x)) -> CanMakePeopleSick(x))", "score": -1}
{"id": "eqasc_validation_1074", "prediction": "all x.((Surface(x) & -St sterilized(x)) -> MakesPeopleSick(x))", "score": -1}
{"id": "eqasc_validation_1074", "prediction": "all x y.((Surface(x) & -Sterilized(x)) -> MakesPeopleSick(x))", "score": 0}
{"id": "eqasc_validation_1074", "prediction": "all x y.((Surface(x) & -Sterilized(x)) -> MakesPeopleSick(y))", "score": 0}
{"id": "eqasc_validation_1074", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CanMadePeopleSick(x))", "score": 0}
{"id": "eqasc_validation_1074", "prediction": "all x.((Surface(x) & -Steering(x)) -> CanMakePeopleSick(x))", "score": 0}
{"id": "eqasc_validation_1074", "prediction": "all x.((Surface(x) & -Steriled(x)) -> CanMakePeopleSick(x))", "score": 0}
{"id": "eqasc_validation_1074", "prediction": "all x y.((Surface(x) & -Sterilized(x)) -> CanMakePersonSick(y))", "score": 0}
{"id": "eqasc_validation_1075", "prediction": "all x.(Bacteria(x) -> SingleCellMicroorganism(x))", "score": 0}
{"id": "eqasc_validation_1075", "prediction": "all x y.((Bacteria(x) & SingleCellMicroorganism(y)) -> Microorganism(x,y))", "score": 0}
{"id": "eqasc_validation_1075", "prediction": "all x y.((Bacteria(x) & Microorganism(y)) -> SingleCell(x,y))", "score": 0}
{"id": "eqasc_validation_1075", "prediction": "all x y.((Bacteria(x) & SingleCellMicroorganism(y)) -> Microorganism(x))", "score": 0}
{"id": "eqasc_validation_1075", "prediction": "all x.(Bacteria(x) -> SingleCell(x))", "score": 0}
{"id": "eqasc_validation_1075", "prediction": "all x y.((Bacteria(x) & Microorganism(y)) -> SingleCell(x))", "score": 0}
{"id": "eqasc_validation_1075", "prediction": "all x y.((Bacteria(x) & SingleCell(y)) -> Microorganism(x,y))", "score": 0}
{"id": "eqasc_validation_1075", "prediction": "all x.((Bacteria(x) & SingleCellMicroorganism(x)) -> Bacteria(x))", "score": 0}
{"id": "eqasc_validation_1075", "prediction": "all x.(Bacteria(x) -> (SingleCellMicroorganism(x) & -SingleCellMicroorganism(x)))", "score": 0}
{"id": "eqasc_validation_1075", "prediction": "all x.((Bacteria(x) & SingleCellMicroorganism(x)) -> Microorganism(x))", "score": 0}
{"id": "eqasc_validation_1075", "prediction": "all x y.((Bacteria(x) & SingleCell(y)) -> Microorganism(x))", "score": 0}
{"id": "eqasc_validation_1075", "prediction": "all x.(Bacteria(x) -> (SingleCellMicroorganism(x) & Microorganism(x)))", "score": 0}
{"id": "eqasc_validation_1075", "prediction": "all x.(Bacteria(x) -> (SingleCellMicroorganism(x) & SingleCellMicroorganism(x)))", "score": 0}
{"id": "eqasc_validation_1075", "prediction": "all x.(Bacterium(x) -> SingleCellMicroorganism(x))", "score": 0}
{"id": "eqasc_validation_1076", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWithSingleCellMicroorganisms(x))", "score": 0}
{"id": "eqasc_validation_1076", "prediction": "all x.((Surface(x) & -St sterilized(x)) -> CoveredWithSingleCellMicroorganisms(x))", "score": -1}
{"id": "eqasc_validation_1076", "prediction": "all x.((Surface(x) & -Steriled(x)) -> CoveredWithSingleCellMicroorganisms(x))", "score": 0}
{"id": "eqasc_validation_1076", "prediction": "all x.((Surface(x) & -Steering(x)) -> CoveredWithSingleCellMicroorganisms(x))", "score": 0}
{"id": "eqasc_validation_1076", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> ProbablyCoveredWithSingleCellMicroorganisms(x))", "score": 0}
{"id": "eqasc_validation_1076", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> LikelyCoveredWithSingleCellMicroorganisms(x))", "score": 0}
{"id": "eqasc_validation_1076", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CommonlyCoveredWithSingleCellMicroorganisms(x))", "score": 0}
{"id": "eqasc_validation_1076", "prediction": "all x.((Surface(x) & -Stormized(x)) -> CoveredWithSingleCellMicroorganisms(x))", "score": 0}
{"id": "eqasc_validation_1076", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredBySingleCellMicroorganisms(x))", "score": 0}
{"id": "eqasc_validation_1076", "prediction": "all x.((Surface(x) & -St sterilized(x)) -> ProbablyCoveredWithSingleCellMicroorganisms(x))", "score": -1}
{"id": "eqasc_validation_1076", "prediction": "all x.((Surface(x) & -Stormed(x)) -> CoveredWithSingleCellMicroorganisms(x))", "score": 0}
{"id": "eqasc_validation_1076", "prediction": "all x.((Surface(x) & -Steertilized(x)) -> CoveredWithSingleCellMicroorganisms(x))", "score": 0}
{"id": "eqasc_validation_1076", "prediction": "all x.((Surface(x) & -Storned(x)) -> CoveredWithSingleCellMicroorganisms(x))", "score": 0}
{"id": "eqasc_validation_1076", "prediction": "all x.((Surface(x) & NotSterilized(x)) -> CoveredWithSingleCellMicroorganisms(x))", "score": 0}
{"id": "eqasc_validation_1076", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWithSingleCellMicrobia(x))", "score": 0}
{"id": "eqasc_validation_1077", "prediction": "all x.(Surface(x) -> (SteamedCleared(x) & Sterilized(x)))", "score": 0}
{"id": "eqasc_validation_1077", "prediction": "all x.(Surface(x) -> (SteamedClean(x) & Sterilized(x)))", "score": 0}
{"id": "eqasc_validation_1077", "prediction": "all x.(Surface(x) -> (SteamedCleaned(x) & Sterilized(x)))", "score": 0}
{"id": "eqasc_validation_1077", "prediction": "all x.(Surface(x) -> (Steamed(x) & Sterilized(x)))", "score": 0}
{"id": "eqasc_validation_1077", "prediction": "all x.(Surface(x) -> (SteamedCleaning(x) & Sterilized(x)))", "score": 0}
{"id": "eqasc_validation_1077", "prediction": "all x.(Surface(x) -> (SteamedCleached(x) & Sterilized(x)))", "score": 0}
{"id": "eqasc_validation_1077", "prediction": "all x.(Surface(x) -> (CanBeSteamed(x) & CanBeSterilized(x)))", "score": 0}
{"id": "eqasc_validation_1077", "prediction": "all x.(Surface(x) -> (SteamedCleared(x) | Sterilized(x)))", "score": 0}
{"id": "eqasc_validation_1077", "prediction": "all x.(Surface(x) -> (SteamedClean(x) | Sterilized(x)))", "score": 0}
{"id": "eqasc_validation_1077", "prediction": "all x.(Surface(x) -> (CanBeSteamedCleaned(x) & CanBeSterilized(x)))", "score": 0}
{"id": "eqasc_validation_1077", "prediction": "all x.(Surface(x) -> (SteamedCleane(x) & Sterilized(x)))", "score": 0}
{"id": "eqasc_validation_1077", "prediction": "all x.(Surface(x) -> (SteamedCleaning(x) | Sterilized(x)))", "score": 0}
{"id": "eqasc_validation_1077", "prediction": "all x.(Surface(x) -> (SteamedCleaning(x) & Sterilization(x)))", "score": 0}
{"id": "eqasc_validation_1077", "prediction": "all x.(Surface(x) -> (Steamed(x) | Sterilized(x)))", "score": 0}
{"id": "eqasc_validation_1077", "prediction": "all x y.((Surface(x) & Surface(y)) -> (SteamedClean(x) & Sterilized(x)))", "score": 0}
{"id": "eqasc_validation_1078", "prediction": "all x.((Surface(x) & -Cleaned(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1078", "prediction": "all x.((Surface(x) & -Cleared(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1078", "prediction": "all x.((Surface(x) & -Cleaned(x)) -> LikelyCoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1078", "prediction": "all x.((Surface(x) & -Cleared(x)) -> LikelyCoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1078", "prediction": "all x.((Surface(x) & -Clean(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1078", "prediction": "all x.((Surface(x) & -Cleached(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1078", "prediction": "all x.((Surface(x) & -Cleaned(x)) -> ProbablyCoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1078", "prediction": "all x.((Surface(x) & -Cleaned(x)) -> ProbabillyCoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1078", "prediction": "all x.((Surface(x) & -Cleared(x)) -> ProbablyCoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1078", "prediction": "all x.((Surface(x) & -Cleaning(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1078", "prediction": "all x.((Surface(x) & -Cleaned(x)) -> CommonlyCoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1078", "prediction": "all x.((Surface(x) & -Cleaned(x)) -> CoveredByBacteria(x))", "score": 0}
{"id": "eqasc_validation_1078", "prediction": "all x.((Surface(x) & NotCleaned(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1079", "prediction": "all x.(RawMeat(x) -> LoadedWithHarmfulBacteria(x))", "score": 0}
{"id": "eqasc_validation_1079", "prediction": "all x.(RawMeat(x) -> ContainsHarmfulBacteria(x))", "score": 0}
{"id": "eqasc_validation_1079", "prediction": "all x y.((RawMeat(x) & Bacteria(y)) -> LoadedWith(x,y))", "score": 0}
{"id": "eqasc_validation_1079", "prediction": "all x.(RawMeat(x) -> (LoadedWithHarmfulBacteria(x)))", "score": 0}
{"id": "eqasc_validation_1079", "prediction": "all x.(RawMeat(x) -> HasHarmfulBacteria(x))", "score": 0}
{"id": "eqasc_validation_1079", "prediction": "all x y z.((RawMeat(x) & Bacteria(y) & Bacteria(z)) -> LoadedWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1079", "prediction": "all x.(RawMeat(x) -> LoadedWithHazardousBacteria(x))", "score": 0}
{"id": "eqasc_validation_1079", "prediction": "all x.(RawMeat(x) -> ContainsHazardousBacteria(x))", "score": 0}
{"id": "eqasc_validation_1079", "prediction": "all x y.((RawMeat(x) & Bacteria(y)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_1079", "prediction": "all x y.((RawMeat(x) & Bacteria(y) & LoadedWith(x,y)) -> Harmful(x))", "score": 0}
{"id": "eqasc_validation_1079", "prediction": "all x y z.((RawMeat(x) & Bacteria(y) & Bacteria(z) & LoadedWith(x,y,z)) -> Harmful(x))", "score": 0}
{"id": "eqasc_validation_1079", "prediction": "all x y z.((RawMeat(x) & Bacteria(y) & Bacteria(z)) -> Contains(x,y,z))", "score": 0}
{"id": "eqasc_validation_1079", "prediction": "all x.(RawMeat(x) -> LuggagedWithHarmfulBacteria(x))", "score": 0}
{"id": "eqasc_validation_1079", "prediction": "all x.(RawMeat(x) -> HasHazardousBacteria(x))", "score": 0}
{"id": "eqasc_validation_1079", "prediction": "all x y z.((RawMeat(x) & Bacteria(y) & Bacteria(z) & LoadedWith(x,y)) -> Harmful(x,z))", "score": 0}
{"id": "eqasc_validation_1079", "prediction": "all x.(RawMeat(x) -> HazardousBacteria(x))", "score": 0}
{"id": "eqasc_validation_1080", "prediction": "all x.((Surface(x) & RawMeat(x)) -> ShouldBeSterilized(x))", "score": 0}
{"id": "eqasc_validation_1080", "prediction": "all x.((Surface(x) & RawMeat(x)) -> Sterilized(x))", "score": 0}
{"id": "eqasc_validation_1080", "prediction": "all x.((Surface(x) & RawMeat(x)) -> ShouldBeStormized(x))", "score": 0}
{"id": "eqasc_validation_1080", "prediction": "all x.((Surface(x) & RawMeat(x)) -> ShouldBeSteering(x))", "score": 0}
{"id": "eqasc_validation_1080", "prediction": "all x.((Surface(x) & RawMeat(x)) -> ShouldBeSteriled(x))", "score": 0}
{"id": "eqasc_validation_1080", "prediction": "all x y.((Surface(x) & RawMeat(y)) -> ShouldBeSterilized(x))", "score": 0}
{"id": "eqasc_validation_1080", "prediction": "all x y.((Surface(x) & RawMeat(y)) -> ShouldBeSterilized(x,y))", "score": 0}
{"id": "eqasc_validation_1080", "prediction": "all x.((Surface(x) & RawMeat(x)) -> -Sterilized(x))", "score": 0}
{"id": "eqasc_validation_1080", "prediction": "all x.((Surface(x) & HasRawMeat(x)) -> ShouldBeSterilized(x))", "score": 0}
{"id": "eqasc_validation_1080", "prediction": "all x.((Surface(x) & RawMeat(x)) -> ShouldBeSt sterilized(x))", "score": -1}
{"id": "eqasc_validation_1080", "prediction": "all x y.((Surface(x) & RawMeat(y) & HasBeen(x,y)) -> ShouldBeSterilized(x))", "score": 0}
{"id": "eqasc_validation_1080", "prediction": "all x.((Surface(x) & RawMeat(x)) -> Steriled(x))", "score": 0}
{"id": "eqasc_validation_1080", "prediction": "all x y.((Surface(x) & RawMeat(y)) -> Sterilized(x))", "score": 0}
{"id": "eqasc_validation_1080", "prediction": "all x y.((Surface(x) & RawMeat(y) & HasBeen(x,y)) -> Sterilized(x))", "score": 0}
{"id": "eqasc_validation_1080", "prediction": "all x.((Surface(x) & RawMeat(x)) -> IdeallySterilized(x))", "score": 0}
{"id": "eqasc_validation_1081", "prediction": "all x.(CookerSurface(x) -> NaturalStone(x))", "score": 0}
{"id": "eqasc_validation_1081", "prediction": "all x.(CoveredSurface(x) -> NaturalStone(x))", "score": 0}
{"id": "eqasc_validation_1081", "prediction": "all x.(CookingSurface(x) -> NaturalStone(x))", "score": 0}
{"id": "eqasc_validation_1081", "prediction": "all x.(CooltopSurface(x) -> NaturalStone(x))", "score": 0}
{"id": "eqasc_validation_1081", "prediction": "all x.(CountertopSurface(x) -> NaturalStone(x))", "score": 0}
{"id": "eqasc_validation_1081", "prediction": "all x.(CoffeetopSurface(x) -> NaturalStone(x))", "score": 0}
{"id": "eqasc_validation_1081", "prediction": "all x.(ConsiderboardSurface(x) -> NaturalStone(x))", "score": 0}
{"id": "eqasc_validation_1081", "prediction": "all x.(CountrySurface(x) -> NaturalStone(x))", "score": 0}
{"id": "eqasc_validation_1081", "prediction": "all x.(CoolertopSurface(x) -> NaturalStone(x))", "score": 0}
{"id": "eqasc_validation_1081", "prediction": "all x.(ConsiderCookerSurface(x) -> NaturalStone(x))", "score": 0}
{"id": "eqasc_validation_1081", "prediction": "all x.(ConsiderCooltopSurface(x) -> NaturalStone(x))", "score": 0}
{"id": "eqasc_validation_1081", "prediction": "all x.(CooktopSurface(x) -> NaturalStone(x))", "score": 0}
{"id": "eqasc_validation_1081", "prediction": "all x.(Cooker(x) -> NaturalStone(x))", "score": 0}
{"id": "eqasc_validation_1081", "prediction": "all x.(ConceptorSurface(x) -> NaturalStone(x))", "score": 0}
{"id": "eqasc_validation_1081", "prediction": "all x.(ContowerSurface(x) -> NaturalStone(x))", "score": 0}
{"id": "eqasc_validation_1081", "prediction": "all x.(CounterboardSurface(x) -> NaturalStone(x))", "score": 0}
{"id": "eqasc_validation_1082", "prediction": "all x.((Cooker(x) & -Sterilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1082", "prediction": "all x.((Colorboard(x) & -Sterilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1082", "prediction": "all x.((Coffeetop(x) & -Sterilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1082", "prediction": "all x.((CoveredCoveredCoveredWithBacteria(x) & -Sterilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1082", "prediction": "all x.((Cooltop(x) & -Sterilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1082", "prediction": "all x.((CoveredCoveredCovered(x) & -Sterilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1082", "prediction": "all x.((Coloring(x) & -Sterilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1082", "prediction": "all x.((Country(x) & -Sterilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1082", "prediction": "all x.((CoveredCovered(x) & -Sterilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1082", "prediction": "all x.((ColorWorktop(x) & -Sterilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1082", "prediction": "all x.((Covettop(x) & -Sterilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1082", "prediction": "all x.((Countertop(x) & -Sterilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1082", "prediction": "all x.((Cofton(x) & -Sterilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1082", "prediction": "all x.((Cotton(x) & -Sterilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1082", "prediction": "all x.((Coordinator(x) & -Sterilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1082", "prediction": "all x.((Cooker(x) & -Sterilized(x)) -> LikelyCoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1083", "prediction": "all x.(Surface(x) -> ScrubbedWithBleach(x))", "score": 0}
{"id": "eqasc_validation_1083", "prediction": "all x.(Surface(x) -> ScrubbedWithBleath(x))", "score": 0}
{"id": "eqasc_validation_1083", "prediction": "all x.(Surface(x) -> ScrubbedWithBleak(x))", "score": 0}
{"id": "eqasc_validation_1083", "prediction": "all x y.((Surface(x) & Bleach(y)) -> ScrubbedWith(x,y))", "score": 0}
{"id": "eqasc_validation_1083", "prediction": "all x.(Surface(x) -> ScrubbedWithBlood(x))", "score": 0}
{"id": "eqasc_validation_1083", "prediction": "all x y.((Surface(x) & Bleach(y)) -> Scrubbed(x,y))", "score": 0}
{"id": "eqasc_validation_1083", "prediction": "all x y.((Surface(x) & Surface(y)) -> ScrubbedWithBleach(x,y))", "score": 0}
{"id": "eqasc_validation_1083", "prediction": "all x.(Surface(x) -> ScrubbedWithB bleach(x))", "score": -1}
{"id": "eqasc_validation_1083", "prediction": "all x.(Surface(x) -> ScrubbedWithBleek(x))", "score": 0}
{"id": "eqasc_validation_1083", "prediction": "-all x.(Surface(x) -> ScrubbedWithBleach(x))", "score": 0}
{"id": "eqasc_validation_1083", "prediction": "all x.(Surface(x) -> ScrubbedWithBleeth(x))", "score": 0}
{"id": "eqasc_validation_1083", "prediction": "all x.(Surface(x) -> ScrubbedWithBleau(x))", "score": 0}
{"id": "eqasc_validation_1083", "prediction": "all x y.((Surface(x) & Surface(y)) -> ScrubbedWithBleach(x))", "score": 0}
{"id": "eqasc_validation_1083", "prediction": "all x.(Surface(x) -> ScrubbedWithBroth(x))", "score": 0}
{"id": "eqasc_validation_1083", "prediction": "all x.(Surface(x) -> ScrubbedWithBleakage(x))", "score": 0}
{"id": "eqasc_validation_1083", "prediction": "all x.(Surface(x) -> ScrubbedWithBrighten(x))", "score": 0}
{"id": "eqasc_validation_1084", "prediction": "all x.((Area(x) & -ScrubbedWithBleach(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1084", "prediction": "all x.((Area(x) & -ScrubbedWithBleath(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1084", "prediction": "all x.((Area(x) & -ScrubbedWithB bleach(x)) -> CoveredWithBacteria(x))", "score": -1}
{"id": "eqasc_validation_1084", "prediction": "all x.((Area(x) & -ScrubbedWithBleak(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1084", "prediction": "all x.((Area(x) & -ScrubbedWithBleach(x)) -> LikelyCoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1084", "prediction": "all x.((Area(x) & -ScrubbedWithBleach(x)) -> ProbablyCoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1084", "prediction": "all x.((Area(x) & -ClearedWithBleach(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1084", "prediction": "all x.((Area(x) & -ScrubbedWithBleese(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1084", "prediction": "all x.((Area(x) & -ScrubbedWithBleece(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1084", "prediction": "all x.((Area(x) & -ScrubbedWithBleach(x)) -> ProbabillyCoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1084", "prediction": "all x.((Area(x) & -CleanedWithBleach(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1084", "prediction": "all x.((Area(x) & -ScrubbedWithBleau(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1084", "prediction": "all x.((Area(x) & -ScrubbedWithBroth(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1084", "prediction": "all x.((Area(x) & -ScrubbedWithBleeth(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1084", "prediction": "all x.((Area(x) & -ScrubbedWithBleath(x)) -> LikelyCoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1084", "prediction": "all x.((Area(x) & -ScrubbedWithBleach(x)) -> CommonlyCoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1085", "prediction": "all x.(Bacteria(x) -> CanCauseInfection(x))", "score": 0}
{"id": "eqasc_validation_1085", "prediction": "all x.(Bacteria(x) -> CausesInfection(x))", "score": 0}
{"id": "eqasc_validation_1085", "prediction": "all x y.((Bacteria(x) & Infection(y)) -> CanCause(x,y))", "score": 0}
{"id": "eqasc_validation_1085", "prediction": "all x y.((Bacteria(x) & Infection(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_1085", "prediction": "all x y z.((Bacteria(x) & Infection(y) & Infection(z)) -> CanCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_1085", "prediction": "all x.(Bacteria(x) -> CauseInfection(x))", "score": 0}
{"id": "eqasc_validation_1085", "prediction": "all x y.((Bacteria(x) & Infection(y)) -> Cause(x,y))", "score": 0}
{"id": "eqasc_validation_1085", "prediction": "all x y z.((Bacteria(x) & Infection(y) & Infection(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1085", "prediction": "all x.(Bacteria(x) -> (CausesInfection(x) | CausesInfection(x)))", "score": 0}
{"id": "eqasc_validation_1085", "prediction": "all x y z.((Bacteria(x) & Infection(y) & Infection(z)) -> Cause(x,y,z))", "score": 0}
{"id": "eqasc_validation_1085", "prediction": "all x y z.((Bacteria(x) & Infection(y) & Infection(z)) -> CanCause(x,y))", "score": 0}
{"id": "eqasc_validation_1085", "prediction": "all x.((Bacteria(x) & CausesInfection(x)) -> CanCauseInfection(x))", "score": 0}
{"id": "eqasc_validation_1085", "prediction": "exists x.(Bacteria(x) & CausesInfection(x))", "score": 0}
{"id": "eqasc_validation_1085", "prediction": "all x y.((Bacteria(x) & Infection(y,x)) -> CanCause(x,y))", "score": 0}
{"id": "eqasc_validation_1085", "prediction": "exists x.(Bacteria(x) & CanCauseInfection(x))", "score": 0}
{"id": "eqasc_validation_1086", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CouldResultInInfection(x))", "score": 0}
{"id": "eqasc_validation_1086", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> PossibleInfection(x))", "score": 0}
{"id": "eqasc_validation_1086", "prediction": "all x.((Surface(x) & -St sterilized(x)) -> CouldResultInInfection(x))", "score": -1}
{"id": "eqasc_validation_1086", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CanResultInInfection(x))", "score": 0}
{"id": "eqasc_validation_1086", "prediction": "all x.((Surface(x) & -Stormized(x)) -> CouldResultInInfection(x))", "score": 0}
{"id": "eqasc_validation_1086", "prediction": "all x.((Surface(x) & -Steriled(x)) -> CouldResultInInfection(x))", "score": 0}
{"id": "eqasc_validation_1086", "prediction": "all x.((Surface(x) & -Steering(x)) -> CouldResultInInfection(x))", "score": 0}
{"id": "eqasc_validation_1086", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> Infection(x))", "score": 0}
{"id": "eqasc_validation_1086", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> PotentialInfection(x))", "score": 0}
{"id": "eqasc_validation_1086", "prediction": "all x.((Surface(x) & -Storned(x)) -> CouldResultInInfection(x))", "score": 0}
{"id": "eqasc_validation_1086", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> MayResultInInfection(x))", "score": 0}
{"id": "eqasc_validation_1086", "prediction": "all x.((Surface(x) & -Stormed(x)) -> CouldResultInInfection(x))", "score": 0}
{"id": "eqasc_validation_1086", "prediction": "all x.((Surface(x) & -Stilized(x)) -> CouldResultInInfection(x))", "score": 0}
{"id": "eqasc_validation_1086", "prediction": "all x.((Surface(x) & -St sterilized(x)) -> PossibleInfection(x))", "score": -1}
{"id": "eqasc_validation_1087", "prediction": "all x.(Bacteria(x) -> SmallestOfMicroscopicOrganisms(x))", "score": 0}
{"id": "eqasc_validation_1087", "prediction": "all x.(Bacteria(x) -> SmallestOfMicroscopicalOrganisms(x))", "score": 0}
{"id": "eqasc_validation_1087", "prediction": "all x.(Bacteria(x) -> MicroscopicOrganism(x))", "score": 0}
{"id": "eqasc_validation_1087", "prediction": "all x.(Bacteria(x) -> (SmallerOfMicroscopicOrganisms(x) & SmallestOfMicroscopicOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_1087", "prediction": "all x.(Bacteria(x) -> MinimalMicroscopicOrganism(x))", "score": 0}
{"id": "eqasc_validation_1087", "prediction": "all x.(Bacteria(x) -> SmallerOfMicroscopicOrganisms(x))", "score": 0}
{"id": "eqasc_validation_1087", "prediction": "all x.(Bacteria(x) -> SlightestOfMicroscopicOrganisms(x))", "score": 0}
{"id": "eqasc_validation_1087", "prediction": "all x.(Bacteria(x) -> (SmallestOfMicroscopicOrganisms(x) & MicroscopicallyOrganism(x)))", "score": 0}
{"id": "eqasc_validation_1087", "prediction": "all x.(Bacteria(x) -> MicroscopicalOrganism(x))", "score": 0}
{"id": "eqasc_validation_1087", "prediction": "all x.(Bacteria(x) -> (SmallerOfMicroscopicOrganisms(x) & -SmallerOfMicroscopicOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_1087", "prediction": "all x y.((Bacteria(x) & MicroscopicalOrganism(y)) -> Smallest(x,y))", "score": 0}
{"id": "eqasc_validation_1087", "prediction": "all x.(Bacteria(x) -> (SmallestOfMicroscopicalOrganisms(x) & MicroscopicallyOrganism(x)))", "score": 0}
{"id": "eqasc_validation_1087", "prediction": "all x.(Bacteria(x) -> (SmallestOfMicroscopicOrganisms(x) & MicroscopicOrganism(x)))", "score": 0}
{"id": "eqasc_validation_1087", "prediction": "all x.(Bacteria(x) -> (SmallestOfMicroscopicalOrganisms(x) & MicroscopicalOrganism(x)))", "score": 0}
{"id": "eqasc_validation_1087", "prediction": "all x.(Bacteria(x) -> (SmallestOfMicroscopicOrganisms(x) & Microscope(x)))", "score": 0}
{"id": "eqasc_validation_1087", "prediction": "all x.(Bacteria(x) -> (SmallerOfMicroscopicOrganisms(x) & SmallestOfOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_1088", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWithMicroscopicOrganisms(x))", "score": 0}
{"id": "eqasc_validation_1088", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWithMicroscopicalOrganisms(x))", "score": 0}
{"id": "eqasc_validation_1088", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWithMicroorganicOrganisms(x))", "score": 0}
{"id": "eqasc_validation_1088", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWithMicroorganisms(x))", "score": 0}
{"id": "eqasc_validation_1088", "prediction": "all x.((Surface(x) & -St sterilized(x)) -> CoveredWithMicroscopicOrganisms(x))", "score": -1}
{"id": "eqasc_validation_1088", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> LikelyCoveredWithMicroscopicOrganisms(x))", "score": 0}
{"id": "eqasc_validation_1088", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> ProbablyCoveredWithMicroscopicOrganisms(x))", "score": 0}
{"id": "eqasc_validation_1088", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CommonlyCoveredWithMicroscopicOrganisms(x))", "score": 0}
{"id": "eqasc_validation_1088", "prediction": "all x.((Surface(x) & -Steriled(x)) -> CoveredWithMicroscopicOrganisms(x))", "score": 0}
{"id": "eqasc_validation_1088", "prediction": "all x.((Surface(x) & -Steering(x)) -> CoveredWithMicroscopicOrganisms(x))", "score": 0}
{"id": "eqasc_validation_1088", "prediction": "all x.((Surface(x) & -Stormized(x)) -> CoveredWithMicroscopicOrganisms(x))", "score": 0}
{"id": "eqasc_validation_1088", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWithMicroscopeOrganisms(x))", "score": 0}
{"id": "eqasc_validation_1088", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> MicroscopicOrganisms(x))", "score": 0}
{"id": "eqasc_validation_1088", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWithMicroscopes(x))", "score": 0}
{"id": "eqasc_validation_1088", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> MicroscopicalOrganisms(x))", "score": 0}
{"id": "eqasc_validation_1089", "prediction": "all x.((Clean(x) & Sterilized(x)) -> LessLikelyToBreedBacteria(x))", "score": 0}
{"id": "eqasc_validation_1089", "prediction": "all x.((Clean(x) & SterilizedContacts(x)) -> LessLikelyToBreedBacteria(x))", "score": 0}
{"id": "eqasc_validation_1089", "prediction": "all x.((Clean(x) & Sterilized(x)) -> -BreedBacteria(x))", "score": 0}
{"id": "eqasc_validation_1089", "prediction": "all x.((Contact(x) & Clean(x) & Sterilized(x)) -> LessLikelyToBreedBacteria(x))", "score": 0}
{"id": "eqasc_validation_1089", "prediction": "all x.((Clean(x) & SterilizedContact(x)) -> LessLikelyToBreedBacteria(x))", "score": 0}
{"id": "eqasc_validation_1089", "prediction": "all x.((Clean(x) & SterilizedContacts(x)) -> -BreedBacteria(x))", "score": 0}
{"id": "eqasc_validation_1089", "prediction": "all x y.((Clean(x) & Sterilized(x) & Contact(y)) -> LessLikelyToBreedBacteria(y))", "score": 0}
{"id": "eqasc_validation_1089", "prediction": "all x.((Clean(x) & Sterilized(x)) -> -BreedsBacteria(x))", "score": 0}
{"id": "eqasc_validation_1089", "prediction": "all x.((Clean(x) | Sterilized(x)) -> LessLikelyToBreedBacteria(x))", "score": 0}
{"id": "eqasc_validation_1089", "prediction": "all x.((Clean(x) & Sterilized(x)) -> RarelyBreedsBacteria(x))", "score": 0}
{"id": "eqasc_validation_1089", "prediction": "all x y.((Clean(x) & Sterilized(x) & Contact(y)) -> LessLikelyToBreedBacteria(x,y))", "score": 0}
{"id": "eqasc_validation_1089", "prediction": "all x.((Contact(x) & Clean(x) & Sterilized(x)) -> -BreedBacteria(x))", "score": 0}
{"id": "eqasc_validation_1089", "prediction": "all x y.((Clean(x) & Sterilized(x)) -> LessLikelyToBreedBacteria(y))", "score": 0}
{"id": "eqasc_validation_1089", "prediction": "all x.((Clean(x) & Sterilized(x)) -> FewerLikelyToBreedBacteria(x))", "score": 0}
{"id": "eqasc_validation_1089", "prediction": "all x.((Clean(x) & Sterilized(x)) -> LessLikelyToBreakBacteria(x))", "score": 0}
{"id": "eqasc_validation_1089", "prediction": "all x.((Clean(x) & SterilizedContacts(x)) -> -BreedsBacteria(x))", "score": 0}
{"id": "eqasc_validation_1090", "prediction": "all x y.((SterilizingSurface(x) & Bacteria(y)) -> Reduces(x,y))", "score": 0}
{"id": "eqasc_validation_1090", "prediction": "all x y z.((SterilizingSurface(x) & Bacteria(y) & Bacteria(z)) -> Reduces(x,y,z))", "score": 0}
{"id": "eqasc_validation_1090", "prediction": "all x y.((SterilizingSurface(x) & Bacteria(y)) -> ReducesBacteria(x,y))", "score": 0}
{"id": "eqasc_validation_1090", "prediction": "all x y z.((Sterilization(x) & Surface(y) & Bacteria(z)) -> Reduces(x,y,z))", "score": 0}
{"id": "eqasc_validation_1090", "prediction": "all x y.((Sterilization(x) & Surface(y)) -> ReducesBacteria(x,y))", "score": 0}
{"id": "eqasc_validation_1090", "prediction": "all x.((SterilizingSurface(x) & ReducesBacteria(x)) -> ReducesBacteria(x))", "score": 0}
{"id": "eqasc_validation_1090", "prediction": "all x y.((SterilizingSurface(x) & Bacteria(y) & Reduces(x,y)) -> Reduces(x,y))", "score": 0}
{"id": "eqasc_validation_1090", "prediction": "all x y.((Sterilizing(x) & Surface(y)) -> ReducesBacteria(x,y))", "score": 0}
{"id": "eqasc_validation_1090", "prediction": "all x y z.((SterilizingSurface(x) & Bacteria(y) & Bacteria(z) & Reduces(x,y,z)) -> Reduces(x,y,z))", "score": 0}
{"id": "eqasc_validation_1090", "prediction": "all x y z.((Sterilization(x) & Surface(y) & Bacteria(z) & Reduces(x,y,z)) -> Reduces(x,y,z))", "score": 0}
{"id": "eqasc_validation_1090", "prediction": "all x y.((Sterilization(x) & Surface(y) & ReducesBacteria(x,y)) -> ReducesBacteria(x,y))", "score": 0}
{"id": "eqasc_validation_1090", "prediction": "all x y z.((Sterilization(x) & Surface(y) & Bacteria(z)) -> ReducesBacteria(x,y,z))", "score": 0}
{"id": "eqasc_validation_1090", "prediction": "all x y z.((SterilizingSurface(x) & Bacteria(y) & Bacteria(z)) -> ReducesBacteria(x,y,z))", "score": 0}
{"id": "eqasc_validation_1090", "prediction": "all x y.((SanitizingSurface(x) & Bacteria(y)) -> Reduces(x,y))", "score": 0}
{"id": "eqasc_validation_1090", "prediction": "all x y z.((Sterilizing(x) & Surface(y) & Bacteria(z)) -> Reduces(x,y,z))", "score": 0}
{"id": "eqasc_validation_1090", "prediction": "all x y z.((Spoilage(x) & Surface(y) & Bacteria(z)) -> Reduces(x,y,z))", "score": 0}
{"id": "eqasc_validation_1091", "prediction": "all x.(PotentLiquidSterilant(x) -> KillsAIDSAndVirusesOnSurfaces(x))", "score": 0}
{"id": "eqasc_validation_1091", "prediction": "all x.((PotentLiquidSterilant(x) & KillsAIDS(x) & KillsVirusesOnSurfaces(x)) -> PotentLiquidSterilant(x))", "score": 0}
{"id": "eqasc_validation_1091", "prediction": "all x y.((PotentLiquidSterilant(x) & AIDS(y)) -> KillsOnSurfaces(x,y))", "score": 0}
{"id": "eqasc_validation_1091", "prediction": "all x.((PotentLiquidSterilant(x) & KillsAIDSAndVirusesOnSurfaces(x)) -> PotentLiquidSterilant(x))", "score": 0}
{"id": "eqasc_validation_1091", "prediction": "all x.((PotentLiquidSterilant(x) & KillsAIDSAndViruses(x)) -> KillsOnSurfaces(x))", "score": 0}
{"id": "eqasc_validation_1091", "prediction": "all x y.((PotentLiquidSterilant(x) & AIDSVirus(y)) -> KillsOnSurfaces(x,y))", "score": 0}
{"id": "eqasc_validation_1091", "prediction": "all x y z.((PotentLiquidSterilant(x) & AIDSVirus(y) & Surface(z)) -> KillsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1091", "prediction": "all x y z.((PotentLiquidSterilant(x) & AIDS(y) & Viral(z)) -> KillsOnSurfaces(x,y,z))", "score": 0}
{"id": "eqasc_validation_1091", "prediction": "all x.((PotentLiquidSterilant(x) & KillsAIDS(x) & KillsViruses(x)) -> KillsOnSurfaces(x))", "score": 0}
{"id": "eqasc_validation_1091", "prediction": "all x y.((PotentLiquidSterilant(x) & AIDS(y) & OtherViruses(z)) -> KillsOnSurfaces(x,y,z))", "score": 0}
{"id": "eqasc_validation_1091", "prediction": "all x y.((PotentLiquidSterilant(x) & AIDSVirus(y)) -> KillsOnSurface(x,y))", "score": 0}
{"id": "eqasc_validation_1091", "prediction": "all x y.((PotentLiquidSterilant(x) & AIDS(y) & OtherViruses(x)) -> KillsOnSurfaces(x,y))", "score": 0}
{"id": "eqasc_validation_1091", "prediction": "all x y.((PotentLiquidSterilant(x) & AIDS(y) & OtherViruses(y)) -> KillsOnSurfaces(x,y))", "score": 0}
{"id": "eqasc_validation_1091", "prediction": "all x y z.((PotentLiquidSterilant(x) & AIDS(y) & Viral(z)) -> KillsOnSurface(x,y,z))", "score": 0}
{"id": "eqasc_validation_1091", "prediction": "all x.((PotentLiquidSterilant(x) & KillsAIDS(x) & KillsViruses(x)) -> OnSurfaces(x))", "score": 0}
{"id": "eqasc_validation_1091", "prediction": "all x y.((PotentLiquidSterilant(x) & AIDS(y) & OtherViruses(z)) -> KillsOnSurface(x,y,z))", "score": 0}
{"id": "eqasc_validation_1092", "prediction": "all x y.((Sterilent(x) & Table(y)) -> Sterilize(x,y))", "score": 0}
{"id": "eqasc_validation_1092", "prediction": "all x y.((Sterilent(x) & Table(y)) -> Sterilizes(x,y))", "score": 0}
{"id": "eqasc_validation_1092", "prediction": "all x.((Table(x) & UsesSterilent(x)) -> Sterilizes(x))", "score": 0}
{"id": "eqasc_validation_1092", "prediction": "all x.((Table(x) & UsesSterilant(x)) -> Sterilizes(x))", "score": 0}
{"id": "eqasc_validation_1092", "prediction": "all x y.((Sterilant(x) & Table(y)) -> Sterilizes(x,y))", "score": 0}
{"id": "eqasc_validation_1092", "prediction": "all x y.((Sterilant(x) & Table(y)) -> Sterilize(x,y))", "score": 0}
{"id": "eqasc_validation_1092", "prediction": "all x.((Sterilent(x) & Table(y)) -> Sterilizes(x,y))", "score": 0}
{"id": "eqasc_validation_1092", "prediction": "all x y.((Sterilent(x) & Table(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1092", "prediction": "all x.((Table(x) & Sterilant(x)) -> Sterilizes(x))", "score": 0}
{"id": "eqasc_validation_1092", "prediction": "all x.((Sterilant(x) & Table(y)) -> Sterilizes(x,y))", "score": 0}
{"id": "eqasc_validation_1092", "prediction": "all x.((Sterilent(x) & Table(y)) -> Sterilize(x,y))", "score": 0}
{"id": "eqasc_validation_1092", "prediction": "all x y z.((Sterilent(x) & Table(y) & Table(z)) -> Sterilize(x,y,z))", "score": 0}
{"id": "eqasc_validation_1092", "prediction": "all x y z.((Sterilent(x) & Table(y) & Table(z)) -> Sterilizes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1092", "prediction": "all x y z.((Sterilent(x) & Table(y) & Table(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1092", "prediction": "all x.((Table(x) & UseSterilant(x)) -> Sterilizes(x))", "score": 0}
{"id": "eqasc_validation_1093", "prediction": "all x y.((Fluoride(x) & TeethDecay(y)) -> Decreases(x,y))", "score": 1}
{"id": "eqasc_validation_1093", "prediction": "all x.(Fluoride(x) -> DecreasesToothDecay(x))", "score": 2}
{"id": "eqasc_validation_1093", "prediction": "all x y.((Fluid(x) & TeethDecay(y)) -> Decreases(x,y))", "score": 0}
{"id": "eqasc_validation_1093", "prediction": "all x.(Ffluoride(x) -> DecreasesToothDecay(x))", "score": 0}
{"id": "eqasc_validation_1093", "prediction": "all x y z.((Fluoride(x) & TeethDecay(y) & DentDecay(z)) -> Decreases(x,y,z))", "score": 0}
{"id": "eqasc_validation_1093", "prediction": "all x y.((Ffluoride(x) & TeethDecay(y)) -> Decreases(x,y))", "score": 0}
{"id": "eqasc_validation_1093", "prediction": "all x y.((Fluoride(x) & ToothDecay(y)) -> Decreases(x,y))", "score": 1}
{"id": "eqasc_validation_1093", "prediction": "all x y.((Fluoride(x) & TeethDecay(y)) -> Reduces(x,y))", "score": 1}
{"id": "eqasc_validation_1093", "prediction": "all x.(Fluoride(x) -> ReducesToothDecay(x))", "score": 1}
{"id": "eqasc_validation_1093", "prediction": "all x.(Fluid(x) -> DecreasesToothDecay(x))", "score": 0}
{"id": "eqasc_validation_1093", "prediction": "all x y z.((Fluid(x) & TeethDecay(y) & DentDecay(z)) -> Decreases(x,y,z))", "score": 0}
{"id": "eqasc_validation_1093", "prediction": "all x.(Fluid(x) -> (DecreasesToothDecay(x) & Fluoride(x)))", "score": 0}
{"id": "eqasc_validation_1093", "prediction": "all x y.((Fluoride(x) & TeethDecay(y)) -> DecreasesToothDecay(x,y))", "score": 0}
{"id": "eqasc_validation_1093", "prediction": "all x y z.((Fluoride(x) & TeethDecay(y) & ToothDecay(z)) -> Decreases(x,y,z))", "score": 0}
{"id": "eqasc_validation_1093", "prediction": "all x.(Fluoride(x) -> (DecreasesToothDecay(x) & Fluoride(x)))", "score": 2}
{"id": "eqasc_validation_1093", "prediction": "all x y z.((Fluoride(x) & TeethDecay(y) & DentalDecay(z)) -> Decreases(x,y,z))", "score": 0}
{"id": "eqasc_validation_1094", "prediction": "all x.(ToothDecay(x) -> (DestructionOfEnamel(x)))", "score": 0}
{"id": "eqasc_validation_1094", "prediction": "all x y.((ToothDecay(x) & TeethEnamel(y)) -> Destroys(x,y))", "score": 0}
{"id": "eqasc_validation_1094", "prediction": "all x.(ToothDecay(x) -> DestroysToothEmail(x))", "score": 0}
{"id": "eqasc_validation_1094", "prediction": "all x.(ToothDecay(x) -> (DestructionOfEnamel(x) & Teeth(x)))", "score": 0}
{"id": "eqasc_validation_1094", "prediction": "all x.(ToothDecay(x) -> (DestructionOfToothEmail(x)))", "score": 0}
{"id": "eqasc_validation_1094", "prediction": "all x.(ToothDisease(x) -> DestroysToothEmail(x))", "score": 0}
{"id": "eqasc_validation_1094", "prediction": "all x.(ToothDecay(x) -> (DestructionOfEyel(x) & TeethEnamel(x)))", "score": 0}
{"id": "eqasc_validation_1094", "prediction": "all x.(ToothDecay(x) -> DestroysToothEnamel(x))", "score": 0}
{"id": "eqasc_validation_1094", "prediction": "all x.(ToothDecay(x) -> (DestructionOfToothEnamel(x)))", "score": 0}
{"id": "eqasc_validation_1094", "prediction": "all x.(ToothDisease(x) -> (DestructionOfEnamel(x)))", "score": 0}
{"id": "eqasc_validation_1094", "prediction": "all x.(TotalDecay(x) -> (DestructionOfToothEmail(x)))", "score": 0}
{"id": "eqasc_validation_1094", "prediction": "all x.(ToothDecay(x) -> (DestructionOfEnamel(x) & Tooth(x)))", "score": 0}
{"id": "eqasc_validation_1094", "prediction": "all x.(ToothDecay(x) -> (DestructionOfEyel(x) & Teeth(x)))", "score": 0}
{"id": "eqasc_validation_1095", "prediction": "all x y.((Fluid(x) & Enamel(y)) -> DecreasesDestruction(x,y))", "score": 0}
{"id": "eqasc_validation_1095", "prediction": "all x y.((Fluoride(x) & Enamel(y)) -> DecreasesDestruction(x,y))", "score": 0}
{"id": "eqasc_validation_1095", "prediction": "all x.(Fluid(x) -> DecreasesDestructionOfEmail(x))", "score": 0}
{"id": "eqasc_validation_1095", "prediction": "all x.(Fluoride(x) -> DecreasesDestructionOfEmail(x))", "score": 0}
{"id": "eqasc_validation_1095", "prediction": "all x y z.((Fluid(x) & Enamel(y) & Enamel(z)) -> DecreasesDestruction(x,y,z))", "score": 0}
{"id": "eqasc_validation_1095", "prediction": "all x.(Fluid(x) -> DecreasesDestructionOfEnamel(x))", "score": 0}
{"id": "eqasc_validation_1095", "prediction": "all x.(Fluoride(x) -> DecreasesDestructionOfEnamel(x))", "score": 0}
{"id": "eqasc_validation_1095", "prediction": "all x y z.((Fluoride(x) & Enamel(y) & Enamel(z)) -> DecreasesDestruction(x,y,z))", "score": 0}
{"id": "eqasc_validation_1095", "prediction": "all x y.((Flavoride(x) & Enamel(y)) -> DecreasesDestruction(x,y))", "score": 0}
{"id": "eqasc_validation_1095", "prediction": "all x y.((Fluid(x) & Enamel(y)) -> DecreasesDistruction(x,y))", "score": 0}
{"id": "eqasc_validation_1095", "prediction": "all x y.((Ffluoride(x) & Enamel(y)) -> DecreasesDestruction(x,y))", "score": 0}
{"id": "eqasc_validation_1095", "prediction": "all x y.((Fluid(x) & Enamel(y)) -> DecreasedDestruction(x,y))", "score": 0}
{"id": "eqasc_validation_1095", "prediction": "all x y.((Fluoride(x) & Enamel(y)) -> DecreasesDistruction(x,y))", "score": 0}
{"id": "eqasc_validation_1095", "prediction": "all x y.((Fluoride(x) & Enamel(y)) -> DecreasedDestruction(x,y))", "score": 0}
{"id": "eqasc_validation_1095", "prediction": "all x y z.((Fluid(x) & Enamel(y) & Enamel(z)) -> DecreasesDistruction(x,y,z))", "score": 0}
{"id": "eqasc_validation_1095", "prediction": "all x y z.((Fluid(x) & Enamel(y) & Enamel(z)) -> DecreasesDestruction(x,y))", "score": 0}
{"id": "eqasc_validation_1096", "prediction": "all x.(ToothDecay(x) -> (Poor(x) & MakesTeethUnsightly(x)))", "score": 0}
{"id": "eqasc_validation_1096", "prediction": "all x.(ToothDecay(x) -> (Poisonous(x) & MakesTeethUnsightly(x)))", "score": 0}
{"id": "eqasc_validation_1096", "prediction": "all x.((ToothDecay(x) & VeryPoisonous(x) & MakesTeethUnsightly(x)) -> VeryPoisonous(x))", "score": 0}
{"id": "eqasc_validation_1096", "prediction": "all x.(ToothDecay(x) -> (Dangerous(x) & MakesTeethUnsightly(x)))", "score": 0}
{"id": "eqasc_validation_1096", "prediction": "all x.((ToothDecay(x) & VeryPourishing(x)) -> MakesTeethUnsightly(x))", "score": 0}
{"id": "eqasc_validation_1096", "prediction": "all x.(ToothDecay(x) -> (Poisoning(x) & MakesTeethUnsightly(x)))", "score": 0}
{"id": "eqasc_validation_1096", "prediction": "all x.(ToothDecay(x) -> (Pourishing(x) & MakesTeethUnsightly(x)))", "score": 0}
{"id": "eqasc_validation_1096", "prediction": "all x.(ToothDecay(x) -> (Painful(x) & MakesTeethUnsightly(x)))", "score": 0}
{"id": "eqasc_validation_1096", "prediction": "all x y.((ToothDecay(x) & Teeth(y)) -> (Poor(x) & Unsightly(y)))", "score": 0}
{"id": "eqasc_validation_1096", "prediction": "all x.((ToothDecay(x) & Painful(x) & MakesTeethUnsightly(x)) -> VeryPoor(x))", "score": 0}
{"id": "eqasc_validation_1096", "prediction": "all x.((ToothDecay(x) & VeryPoor(x)) -> MakesTeethUnsightly(x))", "score": 0}
{"id": "eqasc_validation_1096", "prediction": "all x.((ToothDecay(x) & VeryPourishing(x) & MakesTeethUnsightly(x)) -> VeryPourishing(x))", "score": 0}
{"id": "eqasc_validation_1096", "prediction": "all x.((ToothDecay(x) & Painful(x) & MakesTeethUnsightly(x)) -> VeryPoisonous(x))", "score": 0}
{"id": "eqasc_validation_1096", "prediction": "all x.((ToothDecay(x) & VeryPourishing(x) & MakesTeethUnsightly(x)) -> VeryPoisonous(x))", "score": 0}
{"id": "eqasc_validation_1096", "prediction": "all x y.((ToothDecay(x) & Teeth(y)) -> (Pourishing(x) & Unsightly(y)))", "score": 0}
{"id": "eqasc_validation_1096", "prediction": "all x y.((ToothDecay(x) & Teeth(y)) -> (Poisoning(x) & Unsightly(y)))", "score": 0}
{"id": "eqasc_validation_1097", "prediction": "all x.(Fluoride(x) -> DecreasesPotentialForToothPain(x))", "score": 0}
{"id": "eqasc_validation_1097", "prediction": "all x y.((Fluoride(x) & TeethPain(y)) -> DecreasesPotential(x,y))", "score": 0}
{"id": "eqasc_validation_1097", "prediction": "all x.(Ffluoride(x) -> DecreasesPotentialForToothPain(x))", "score": 0}
{"id": "eqasc_validation_1097", "prediction": "all x y.((Fluid(x) & TeethPain(y)) -> DecreasesPotential(x,y))", "score": 0}
{"id": "eqasc_validation_1097", "prediction": "all x y.((Ffluoride(x) & TeethPain(y)) -> DecreasesPotential(x,y))", "score": 0}
{"id": "eqasc_validation_1097", "prediction": "all x.(Fluid(x) -> DecreasesPotentialForToothPain(x))", "score": 0}
{"id": "eqasc_validation_1097", "prediction": "all x.(Fluoride(x) -> (DecreasesPotentialForToothPain(x) & TeethPain(x)))", "score": 0}
{"id": "eqasc_validation_1097", "prediction": "all x.(Fluoride(x) -> ReducesPotentialForToothPain(x))", "score": 0}
{"id": "eqasc_validation_1097", "prediction": "all x y.((Fluoride(x) & ToothPain(y)) -> DecreasesPotential(x,y))", "score": 0}
{"id": "eqasc_validation_1097", "prediction": "all x y.((Fluoride(x) & TeethPain(y)) -> DecreasesPotentialFor(x,y))", "score": 0}
{"id": "eqasc_validation_1097", "prediction": "all x.(Ffluoride(x) -> (DecreasesPotentialForToothPain(x) & TeethPain(x)))", "score": 0}
{"id": "eqasc_validation_1097", "prediction": "all x.(Ffluoride(x) -> ReducesPotentialForToothPain(x))", "score": 0}
{"id": "eqasc_validation_1097", "prediction": "all x y.((Fluoride(x) & TeethPain(y)) -> ReducesPotential(x,y))", "score": 0}
{"id": "eqasc_validation_1097", "prediction": "all x.(Fluoride(x) -> (DecreasesPotentialForToothPain(x) & ToothPain(x)))", "score": 0}
{"id": "eqasc_validation_1097", "prediction": "all x.(Fluid(x) -> (DecreasesPotentialForToothPain(x) & TeethPain(x)))", "score": 0}
{"id": "eqasc_validation_1098", "prediction": "all x.(Fluoride(x) -> PreventsDestructionOfToothEnamel(x))", "score": 0}
{"id": "eqasc_validation_1098", "prediction": "all x.(Fluoride(x) -> PreventsDestructionOfToothEmail(x))", "score": 0}
{"id": "eqasc_validation_1098", "prediction": "all x y.((Fluoride(x) & TeethEnamel(y)) -> PreventsDestruction(x,y))", "score": 0}
{"id": "eqasc_validation_1098", "prediction": "all x.(Fluoride(x) -> PreventsDestructionOfToothEmilen(x))", "score": 0}
{"id": "eqasc_validation_1098", "prediction": "all x.(Fluoride(x) -> PreventsDistructionOfToothEnamel(x))", "score": 0}
{"id": "eqasc_validation_1098", "prediction": "all x y.((Fluoride(x) & TeethEmcel(y)) -> PreventsDestruction(x,y))", "score": 0}
{"id": "eqasc_validation_1098", "prediction": "all x y.((Fluoride(x) & TeethEmilen(y)) -> PreventsDestruction(x,y))", "score": 0}
{"id": "eqasc_validation_1098", "prediction": "all x.(Fluoride(x) -> PreventsDestructionOfToothEmcel(x))", "score": 0}
{"id": "eqasc_validation_1098", "prediction": "all x.(Fluid(x) -> PreventsDestructionOfToothEnamel(x))", "score": 0}
{"id": "eqasc_validation_1098", "prediction": "all x.(Fluoride(x) -> PreventsDistructionOfToothEmail(x))", "score": 0}
{"id": "eqasc_validation_1098", "prediction": "all x.(Fluid(x) -> PreventsDestructionOfToothEmail(x))", "score": 0}
{"id": "eqasc_validation_1098", "prediction": "all x.(Ffluoride(x) -> PreventsDestructionOfToothEnamel(x))", "score": 0}
{"id": "eqasc_validation_1098", "prediction": "all x.(Fluoride(x) -> PreventsDistructionOfToothEmilen(x))", "score": 0}
{"id": "eqasc_validation_1098", "prediction": "all x.(Fluoride(x) -> PreventsDestructionOfToothEmmail(x))", "score": 0}
{"id": "eqasc_validation_1098", "prediction": "all x.(Fluid(x) -> PreventsDestructionOfToothEmilen(x))", "score": 0}
{"id": "eqasc_validation_1098", "prediction": "all x.(Fluoride(x) -> PreventsDestructionOfToothEmulsion(x))", "score": 0}
{"id": "eqasc_validation_1099", "prediction": "all x.(Flouride(x) -> PreventsDestructionOfToothEnamel(x))", "score": 0}
{"id": "eqasc_validation_1099", "prediction": "all x.(Flouride(x) -> PreventsDestructionOfToothEmail(x))", "score": 0}
{"id": "eqasc_validation_1099", "prediction": "all x y.((Flouride(x) & TeethEnamel(y)) -> PreventsDestruction(x,y))", "score": 0}
{"id": "eqasc_validation_1099", "prediction": "all x.(Flouride(x) -> PreventsDestructionOfToothEmilen(x))", "score": 0}
{"id": "eqasc_validation_1099", "prediction": "all x.(Flouride(x) -> PreventsDistructionOfToothEnamel(x))", "score": 0}
{"id": "eqasc_validation_1099", "prediction": "all x y.((Flouride(x) & TeethEmail(y)) -> PreventsDestruction(x,y))", "score": 0}
{"id": "eqasc_validation_1099", "prediction": "all x.(Flouride(x) -> PreventsDestructionOfToothEmcel(x))", "score": 0}
{"id": "eqasc_validation_1099", "prediction": "all x.(Flouride(x) -> PreventsDistructionOfToothEmail(x))", "score": 0}
{"id": "eqasc_validation_1099", "prediction": "all x y.((Flouride(x) & TeethEmil(y)) -> PreventsDestruction(x,y))", "score": 0}
{"id": "eqasc_validation_1099", "prediction": "all x y.((Flouride(x) & DentEmil(y)) -> PreventsDestruction(x,y))", "score": 0}
{"id": "eqasc_validation_1099", "prediction": "all x.(Flouride(x) -> PreventsDestructionOfToothEmulsion(x))", "score": 0}
{"id": "eqasc_validation_1099", "prediction": "all x.(Flouride(x) -> PreventsDistructionOfToothEmilen(x))", "score": 0}
{"id": "eqasc_validation_1099", "prediction": "all x.(Flouride(x) -> PreventsDestructionOfToothEmmail(x))", "score": 0}
{"id": "eqasc_validation_1099", "prediction": "all x y.((Flouride(x) & TeethEnamel(y)) -> PreventsDistruction(x,y))", "score": 0}
{"id": "eqasc_validation_1099", "prediction": "all x.(Flouride(x) -> PreventsDisruptionOfToothEmail(x))", "score": 0}
{"id": "eqasc_validation_1099", "prediction": "all x.(Flouride(x) -> PreventsDestructionOfToothEmal(x))", "score": 0}
{"id": "eqasc_validation_1100", "prediction": "all x.(Cavity(x) -> (Carries(x) | TeethDecay(x)))", "score": 0}
{"id": "eqasc_validation_1100", "prediction": "all x.(Cavity(x) -> (Carries(x) & TeethDecay(x)))", "score": 0}
{"id": "eqasc_validation_1100", "prediction": "all x.(Cavities(x) -> (Carries(x) | TeethDecay(x)))", "score": 0}
{"id": "eqasc_validation_1100", "prediction": "all x.(Cavities(x) -> (Carries(x) & TeethDecay(x)))", "score": 0}
{"id": "eqasc_validation_1100", "prediction": "all x.(Cave(x) -> (Carries(x) | TeethDecay(x)))", "score": 0}
{"id": "eqasc_validation_1100", "prediction": "all x.(Cave(x) -> (Carries(x) & TeethDecay(x)))", "score": 0}
{"id": "eqasc_validation_1100", "prediction": "all x.(Cavity(x) -> (Carries(x) & DentDecay(x)))", "score": 0}
{"id": "eqasc_validation_1100", "prediction": "all x.(Cavity(x) -> (Carries(x) | DentDecay(x)))", "score": 0}
{"id": "eqasc_validation_1100", "prediction": "all x.(Cavity(x) -> (Carries(x) | ToothDecay(x)))", "score": 0}
{"id": "eqasc_validation_1100", "prediction": "all x.(Cavity(x) -> (Carries(x) | DentalDecay(x)))", "score": 0}
{"id": "eqasc_validation_1100", "prediction": "all x.(Cavity(x) -> (Carries(x) | TeethDisease(x)))", "score": 0}
{"id": "eqasc_validation_1100", "prediction": "all x.(Cavity(x) -> (Carries(x) & ToothDecay(x)))", "score": 0}
{"id": "eqasc_validation_1100", "prediction": "all x.(Cavity(x) -> (Carries(x) & TeethDisease(x)))", "score": 0}
{"id": "eqasc_validation_1100", "prediction": "all x.(Caves(x) -> (Carries(x) | TeethDecay(x)))", "score": 0}
{"id": "eqasc_validation_1101", "prediction": "all x.(Fluid(x) -> ReducesCavityFormation(x))", "score": 0}
{"id": "eqasc_validation_1101", "prediction": "all x.(Fluoride(x) -> ReducesCavityFormation(x))", "score": 0}
{"id": "eqasc_validation_1101", "prediction": "all x y.((Fluid(x) & CavityFormation(y)) -> Reduces(x,y))", "score": 0}
{"id": "eqasc_validation_1101", "prediction": "all x y.((Fluoride(x) & CavityFormation(y)) -> Reduces(x,y))", "score": 0}
{"id": "eqasc_validation_1101", "prediction": "all x.(Flushoride(x) -> ReducesCavityFormation(x))", "score": 0}
{"id": "eqasc_validation_1101", "prediction": "all x.(Ffluoride(x) -> ReducesCavityFormation(x))", "score": 0}
{"id": "eqasc_validation_1101", "prediction": "all x.(Flavoride(x) -> ReducesCavityFormation(x))", "score": 0}
{"id": "eqasc_validation_1101", "prediction": "all x y.((Fluid(x) & Cavity(y)) -> Reduces(x,y))", "score": 0}
{"id": "eqasc_validation_1101", "prediction": "all x.(Flooride(x) -> ReducesCavityFormation(x))", "score": 0}
{"id": "eqasc_validation_1101", "prediction": "all x.(Fluidite(x) -> ReducesCavityFormation(x))", "score": 0}
{"id": "eqasc_validation_1101", "prediction": "all x y.((Fluid(x) & CavityFormation(y)) -> Reduced(x,y))", "score": 0}
{"id": "eqasc_validation_1101", "prediction": "all x.(Fluid(x) -> ReducesCaviumFormation(x))", "score": 0}
{"id": "eqasc_validation_1101", "prediction": "all x.(Flusoride(x) -> ReducesCavityFormation(x))", "score": 0}
{"id": "eqasc_validation_1101", "prediction": "all x.(Fluid(x) -> ReducesCarbohydrateFormation(x))", "score": 0}
{"id": "eqasc_validation_1101", "prediction": "all x y.((Fluoride(x) & CavityFormation(y)) -> Reduced(x,y))", "score": 0}
{"id": "eqasc_validation_1101", "prediction": "all x.(Fluoride(x) -> ReducesCaviumFormation(x))", "score": 0}
{"id": "eqasc_validation_1102", "prediction": "all x.(Fluoride(x) -> (HydrofluoricAcid(x) & Salt(x)))", "score": 0}
{"id": "eqasc_validation_1102", "prediction": "all x.(Fluoride(x) -> (SaltOfHydrofluoricAcid(x) & HydrofluoricAcid(x)))", "score": 0}
{"id": "eqasc_validation_1102", "prediction": "all x y.((Fluoride(x) & HydrofluoricAcid(y)) -> Salt(x,y))", "score": 0}
{"id": "eqasc_validation_1102", "prediction": "all x.(Fluoride(x) -> (HydrofluoricAcid(x) & SaltOf(x,HydrofluoricAcid)))", "score": 0}
{"id": "eqasc_validation_1102", "prediction": "all x.(Fluoride(x) -> (HydrofluoricAcidSalt(x) & SaltOf(x,HydrofluoricAcid)))", "score": 0}
{"id": "eqasc_validation_1102", "prediction": "all x.(Fluoride(x) -> (HydrofluoricAcid(x) & Salt(x,HydrofluoricAcid)))", "score": 0}
{"id": "eqasc_validation_1102", "prediction": "all x.(Fluoride(x) -> (HydrofluoricAcidSalt(x) & SaltOfHydrofluoricAcid(x)))", "score": 0}
{"id": "eqasc_validation_1102", "prediction": "all x.(Fluoride(x) -> (Salt(x,hydrofluoricAcid) & HydrofluoricAcid(x)))", "score": 0}
{"id": "eqasc_validation_1102", "prediction": "all x.(Fluoride(x) -> (Salt(x) & HydrofluoricAcid(x)))", "score": 0}
{"id": "eqasc_validation_1102", "prediction": "all x.(Fluoride(x) -> (HydrofluoricAcidSalt(x) & Salt(x)))", "score": 0}
{"id": "eqasc_validation_1102", "prediction": "all x.(Fluoride(x) -> (HydroxyfluoricAcid(x) & Salt(x)))", "score": 0}
{"id": "eqasc_validation_1102", "prediction": "all x y.((Fluoride(x) & HydrofluoricAcid(y)) -> Salts(x,y))", "score": 0}
{"id": "eqasc_validation_1102", "prediction": "all x.(Fluorides(x) -> (HydrofluoricAcid(x) & Salt(x)))", "score": 0}
{"id": "eqasc_validation_1102", "prediction": "all x.(Flushoride(x) -> (HydrofluoricAcid(x) & Salt(x)))", "score": 0}
{"id": "eqasc_validation_1102", "prediction": "all x.(Flooride(x) -> (HydrofluoricAcid(x) & Salt(x)))", "score": 0}
{"id": "eqasc_validation_1103", "prediction": "all x y.((Salt(x) & HydrofluoricAcid(y)) -> DecreasesToothDecay(x,y))", "score": 0}
{"id": "eqasc_validation_1103", "prediction": "all x y z.((Salt(x) & HydrofluoricAcid(y) & DentalDecay(z)) -> Decreases(x,y,z))", "score": 0}
{"id": "eqasc_validation_1103", "prediction": "all x.((Salts(x) & HydrofluoricAcid(x)) -> DecreasesToothDecay(x))", "score": 0}
{"id": "eqasc_validation_1103", "prediction": "all x y.((Salts(x) & HydrofluoricAcid(y)) -> DecreasesToothDecay(x,y))", "score": 0}
{"id": "eqasc_validation_1103", "prediction": "all x y z.((Salt(x) & HydrofluoricAcid(y) & TeethDecay(z)) -> Decreases(x,y,z))", "score": 0}
{"id": "eqasc_validation_1103", "prediction": "all x y.((HydrofluoricAcid(x) & Salts(y)) -> DecreasesToothDecay(x,y))", "score": 0}
{"id": "eqasc_validation_1103", "prediction": "all x y.((HydrofluoricAcid(x) & Salts(y)) -> DecreasesToothDecay(x))", "score": 0}
{"id": "eqasc_validation_1103", "prediction": "all x.((HydrofluoricAcid(x) & Salts(x)) -> DecreasesToothDecay(x))", "score": 0}
{"id": "eqasc_validation_1103", "prediction": "all x.((Salt(x) & HydrofluoricAcid(x)) -> DecreasesToothDecay(x))", "score": 0}
{"id": "eqasc_validation_1103", "prediction": "all x y.((SaltsOfHydrofluoricAcid(x) & DentalDecay(y)) -> Decreases(x,y))", "score": 0}
{"id": "eqasc_validation_1103", "prediction": "all x y.((Salt(x) & HydrofluoricAcid(y)) -> DecreasesToothDecay(x))", "score": 0}
{"id": "eqasc_validation_1103", "prediction": "all x y.((SaltsOfHydrofluoricAcid(x) & DentalDecay(y)) -> DecreasesToothDecay(x,y))", "score": 0}
{"id": "eqasc_validation_1103", "prediction": "all x y.((Salt(x) & HydrofluoricAcid(x)) -> DecreasesToothDecay(x,y))", "score": 0}
{"id": "eqasc_validation_1103", "prediction": "all x y.((Salt(x) & HydrofluoricAcid(x)) -> DecreasesToothDecay(x))", "score": 0}
{"id": "eqasc_validation_1103", "prediction": "all x.((SaltsOfHydrofluoricAcid(x) & DecreasesToothDecay(x)) -> DentalDecay(x))", "score": 0}
{"id": "eqasc_validation_1103", "prediction": "all x y.((HydrofluoricAcid(x) & Salts(y)) -> DecreasesToothDecay(y))", "score": 0}
{"id": "eqasc_validation_1104", "prediction": "all x.(Water(x) -> ContainsFluoride(x))", "score": 0}
{"id": "eqasc_validation_1104", "prediction": "all x.(Water(x) -> ContainsFluid(x))", "score": 0}
{"id": "eqasc_validation_1104", "prediction": "all x.(Water(x) -> ContainsFluidite(x))", "score": 0}
{"id": "eqasc_validation_1104", "prediction": "all x.(Water(x) -> ContainsFluidoride(x))", "score": 0}
{"id": "eqasc_validation_1104", "prediction": "all x y.((Water(x) & Fluoride(y)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_1104", "prediction": "all x.(Water(x) -> ContainsFluidide(x))", "score": 0}
{"id": "eqasc_validation_1104", "prediction": "all x.(Water(x) -> ContainsFlushoride(x))", "score": 0}
{"id": "eqasc_validation_1104", "prediction": "all x.(Water(x) -> ContainsFloridor(x))", "score": 0}
{"id": "eqasc_validation_1104", "prediction": "all x.(Water(x) -> ContainsFfluoride(x))", "score": 0}
{"id": "eqasc_validation_1104", "prediction": "all x.((Water(x) & Fluoride(x)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_1104", "prediction": "all x.(Water(x) -> Contains(x,fluoride))", "score": 0}
{"id": "eqasc_validation_1104", "prediction": "all x.(Water(x) -> Fluoride(x))", "score": 8}
{"id": "eqasc_validation_1104", "prediction": "all x.(Water(x) -> ContainsFluidium(x))", "score": 0}
{"id": "eqasc_validation_1104", "prediction": "all x.(Water(x) -> ContainsFlavonide(x))", "score": 0}
{"id": "eqasc_validation_1104", "prediction": "all x.(Water(x) -> ContainsFlouride(x))", "score": 0}
{"id": "eqasc_validation_1105", "prediction": "all x.(Water(x) -> DecreasesToothDecay(x))", "score": 2}
{"id": "eqasc_validation_1105", "prediction": "all x y.((Water(x) & TeethDecay(y)) -> Decreases(x,y))", "score": 1}
{"id": "eqasc_validation_1105", "prediction": "all x.(Water(x) -> ReducesToothDecay(x))", "score": 1}
{"id": "eqasc_validation_1105", "prediction": "all x y.((Water(x) & ToothDecay(y)) -> Decreases(x,y))", "score": 1}
{"id": "eqasc_validation_1105", "prediction": "all x y.((Water(x) & TeethDecline(y)) -> Decreases(x,y))", "score": 0}
{"id": "eqasc_validation_1105", "prediction": "all x y.((Water(x) & ToothDecline(y)) -> Decreases(x,y))", "score": 0}
{"id": "eqasc_validation_1105", "prediction": "all x y.((Water(x) & DentDecay(y)) -> Decreases(x,y))", "score": 0}
{"id": "eqasc_validation_1105", "prediction": "all x y.((Water(x) & TeethDisease(y)) -> Decreases(x,y))", "score": 0}
{"id": "eqasc_validation_1105", "prediction": "all x.(Water(x) -> DecreasesToothDisease(x))", "score": 0}
{"id": "eqasc_validation_1105", "prediction": "all x.(Water(x) -> (DecreasesToothDecay(x)))", "score": 2}
{"id": "eqasc_validation_1105", "prediction": "all x y.((Water(x) & Teeth(y)) -> Decreases(x,y))", "score": 0}
{"id": "eqasc_validation_1105", "prediction": "all x y.((Water(x) & TeethDecay(y)) -> Reduces(x,y))", "score": 1}
{"id": "eqasc_validation_1105", "prediction": "all x y.((Water(x) & TeethDecay(y)) -> Decreased(x,y))", "score": 0}
{"id": "eqasc_validation_1105", "prediction": "all x.(Water(x) -> MinimizesToothDecay(x))", "score": 0}
{"id": "eqasc_validation_1105", "prediction": "all x y.((Water(x) & TeethDecay(y)) -> Decrease(x,y))", "score": 0}
{"id": "eqasc_validation_1105", "prediction": "all x y.((Water(x) & Teeth(y)) -> DecreasesDecay(x,y))", "score": 0}
{"id": "eqasc_validation_1106", "prediction": "all x.(Human(x) -> GetsFluorideInDrinkingWater(x))", "score": 0}
{"id": "eqasc_validation_1106", "prediction": "all x.(Human(x) -> MostFluorideInDrinkingWater(x))", "score": 0}
{"id": "eqasc_validation_1106", "prediction": "all x y.((Human(x) & DrinkingWater(y)) -> GetsFluoride(x,y))", "score": 0}
{"id": "eqasc_validation_1106", "prediction": "all x.(Human(x) -> (GetsFluorideInDrinkingWater(x)))", "score": 0}
{"id": "eqasc_validation_1106", "prediction": "all x y.((Human(x) & DrinkingWater(y)) -> GetsFluorideIn(x,y))", "score": 0}
{"id": "eqasc_validation_1106", "prediction": "all x y.((Human(x) & DrinkingWater(y)) -> GetsFluidoride(x,y))", "score": 0}
{"id": "eqasc_validation_1106", "prediction": "all x y.((Human(x) & DrinkingWater(y)) -> MostFluorideIn(x,y))", "score": 0}
{"id": "eqasc_validation_1106", "prediction": "all x.(Human(x) -> (GetsFluoride(x) & DrinkingWater(x)))", "score": 0}
{"id": "eqasc_validation_1106", "prediction": "all x.(Human(x) -> GetsFluidorideInDrinkingWater(x))", "score": 0}
{"id": "eqasc_validation_1106", "prediction": "all x y.((Human(x) & DrinkingWater(y)) -> GetsFluidorideIn(x,y))", "score": 0}
{"id": "eqasc_validation_1106", "prediction": "all x.(Human(x) -> MostOfFluorideInDrinkingWater(x))", "score": 0}
{"id": "eqasc_validation_1106", "prediction": "all x.(Human(x) -> (GetsFluorideInDrinkingWater(x) & -GetsFluorideInDrinkingWater(x)))", "score": 0}
{"id": "eqasc_validation_1106", "prediction": "all x.(Human(x) -> (GetsFluorideInDrinkingWater(x) & MostInDrinkingWater(x)))", "score": 0}
{"id": "eqasc_validation_1106", "prediction": "all x.(Human(x) -> (GetsFluorideInDrinkingWater(x) | GetsFluorideInDrinkingWater(x)))", "score": 0}
{"id": "eqasc_validation_1106", "prediction": "all x.(Human(x) -> FluorideInDrinkingWater(x))", "score": 0}
{"id": "eqasc_validation_1106", "prediction": "all x y.((Human(x) & DrinkingWater(y)) -> GetsMostOfFluorideIn(x,y))", "score": 0}
{"id": "eqasc_validation_1107", "prediction": "all x.(DrinkingWater(x) -> DecreasesToothDecay(x))", "score": 0}
{"id": "eqasc_validation_1107", "prediction": "all x.(DrinkingWater(x) -> ReducesToothDecay(x))", "score": 0}
{"id": "eqasc_validation_1107", "prediction": "all x y.((DrinkingWater(x) & TeethDecay(y)) -> Decreases(x,y))", "score": 0}
{"id": "eqasc_validation_1107", "prediction": "all x.((DrinkingWater(x) & DecreasesToothDecay(x)) -> DecreasesToothDecay(x))", "score": 0}
{"id": "eqasc_validation_1107", "prediction": "all x y.((DrinkingWater(x) & TeethDecline(y)) -> Decreases(x,y))", "score": 0}
{"id": "eqasc_validation_1107", "prediction": "all x.((DrinkingWater(x) & DentDecay(x)) -> Decreases(x))", "score": 0}
{"id": "eqasc_validation_1107", "prediction": "all x y.((DrinkingWater(x) & ToothDecay(y)) -> Decreases(x,y))", "score": 0}
{"id": "eqasc_validation_1107", "prediction": "all x y.((DrinkingWater(x) & TeethDecay(y)) -> Reduces(x,y))", "score": 0}
{"id": "eqasc_validation_1107", "prediction": "all x.((DrinkingWater(x) & DentalDecay(x)) -> Decreases(x))", "score": 0}
{"id": "eqasc_validation_1107", "prediction": "all x.((DrinkingWater(x) & ReducesToothDecay(x)) -> DecreasesToothDecay(x))", "score": 0}
{"id": "eqasc_validation_1107", "prediction": "all x.((DrinkingWater(x) & TeethDecay(x)) -> Decreases(x))", "score": 0}
{"id": "eqasc_validation_1107", "prediction": "all x y.((DrinkingWater(x) & DentDecay(y)) -> Decreases(x,y))", "score": 0}
{"id": "eqasc_validation_1107", "prediction": "all x.((DrinkingWater(x) & DentalDecay(x)) -> Decreases(x,tooth))", "score": 0}
{"id": "eqasc_validation_1107", "prediction": "all x.((DrinkingWater(x) & DentDecay(x)) -> Decreases(x,y))", "score": 0}
{"id": "eqasc_validation_1107", "prediction": "all x.((DrinkingWater(x) & DentalDecay(x)) -> Decreases(x,y))", "score": 0}
{"id": "eqasc_validation_1107", "prediction": "all x.((DrinkingWater(x) & TeethDecay(x)) -> Decreases(x,y))", "score": 0}
{"id": "eqasc_validation_1108", "prediction": "all x.(Differentiation(x) -> (UnspecializedCells(x) & SpecializedCells(x)))", "score": 0}
{"id": "eqasc_validation_1108", "prediction": "all x.(Differential(x) -> (UnspecializedCells(x) & SpecializedCells(x)))", "score": 0}
{"id": "eqasc_validation_1108", "prediction": "all x y.((Differentiation(x) & UnspecializedCell(y)) -> BecomesSpecialized(x,y))", "score": 0}
{"id": "eqasc_validation_1108", "prediction": "all x.(Differiation(x) -> (UnspecializedCells(x) & SpecializedCells(x)))", "score": 0}
{"id": "eqasc_validation_1108", "prediction": "all x.(Differentiation(x) -> (UnspecializedCellsBecomeSpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1108", "prediction": "all x.(Differentiation(x) -> (UnspecializedCells(x) & BecomesSpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1108", "prediction": "all x.(Differentiation(x) -> (UnspecializedCells(x) & BecomeSpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1108", "prediction": "all x y.((Differiation(x) & UnspecializedCell(y)) -> BecomesSpecialized(x,y))", "score": 0}
{"id": "eqasc_validation_1108", "prediction": "all x.(Differential(x) -> (UnspecializedCells(x) & BecomesSpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1108", "prediction": "all x y.((Differential(x) & UnspecializedCell(y)) -> BecomesSpecialized(x,y))", "score": 0}
{"id": "eqasc_validation_1108", "prediction": "all x.((UnspecializedCell(x) & SpecializedCell(x)) -> Differentiation(x))", "score": 0}
{"id": "eqasc_validation_1108", "prediction": "all x.(Differential(x) -> (UnspecializedCell(x) & SpecializedCell(x)))", "score": 0}
{"id": "eqasc_validation_1108", "prediction": "all x y.((Differentiation(x) & UnspecializedCell(y)) -> BecomesSpecialized(x))", "score": 0}
{"id": "eqasc_validation_1108", "prediction": "all x.(Differential(x) -> (UnspecializedCellsBecomeSpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1108", "prediction": "all x y.((Differentiation(x) & UnspecializedCell(y)) -> Specialized(y))", "score": 0}
{"id": "eqasc_validation_1109", "prediction": "all x y.((CellLine(x) & CellLine(y)) -> Specialization(x,y))", "score": 0}
{"id": "eqasc_validation_1109", "prediction": "all x y.((CellLine(x) & CellLine(y)) -> Differentiation(x,y))", "score": 0}
{"id": "eqasc_validation_1109", "prediction": "all x y.((CellLine(x) & CellLine(y)) -> Specialized(x,y))", "score": 0}
{"id": "eqasc_validation_1109", "prediction": "all x.(Differentiation(x) -> SpecializationOfCellLine(x))", "score": 0}
{"id": "eqasc_validation_1109", "prediction": "all x y z.((CellLine(x) & CellLine(y) & CellLine(z)) -> Specialization(x,y,z))", "score": 0}
{"id": "eqasc_validation_1109", "prediction": "all x y z.((CellLine(x) & CellLine(y) & CellLine(z)) -> Differentiation(x,y,z))", "score": 0}
{"id": "eqasc_validation_1109", "prediction": "all x y z.((CellLine(x) & CellLine(y) & CellLine(z)) -> Specialized(x,y,z))", "score": 0}
{"id": "eqasc_validation_1109", "prediction": "all x.(Differential(x) -> SpecializationOfCellLine(x))", "score": 0}
{"id": "eqasc_validation_1109", "prediction": "all x y.((CellLine(x) & CellLine(y)) -> Specializes(x,y))", "score": 0}
{"id": "eqasc_validation_1109", "prediction": "all x y.((CellLine(x) & CellLine(y) & Specialized(x,y)) -> Differentiation(x,y))", "score": 0}
{"id": "eqasc_validation_1109", "prediction": "all x y.((CellLine(x) & CellLine(y)) -> Differentiation(x))", "score": 0}
{"id": "eqasc_validation_1109", "prediction": "all x y.((CellLine(x) & CellLine(y) & Specialized(x,y)) -> Differentiation(x))", "score": 0}
{"id": "eqasc_validation_1109", "prediction": "all x y z.((CellLine(x) & CellLine(y) & CellLine(z)) -> Specializes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1109", "prediction": "all x y.((Differentiation(x) & CellLine(y)) -> Specialization(x,y))", "score": 0}
{"id": "eqasc_validation_1109", "prediction": "all x y z.((CellLine(x) & CellLine(y) & CellLine(z)) -> Differentiation(x,y))", "score": 0}
{"id": "eqasc_validation_1110", "prediction": "all x y.((Specialization(x) & Differenzation(y)) -> OccursWith(x,y))", "score": 0}
{"id": "eqasc_validation_1110", "prediction": "all x y.((Specialization(x) & Differenciation(y)) -> OccursWith(x,y))", "score": 0}
{"id": "eqasc_validation_1110", "prediction": "all x y.((Specialization(x) & Differentiation(y)) -> OccursWith(x,y))", "score": 0}
{"id": "eqasc_validation_1110", "prediction": "all x y z.((Specialization(x) & Differenzation(y) & Specialization(z)) -> OccursWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1110", "prediction": "all x y z.((Specialization(x) & Differenciation(y) & Specialization(z)) -> OccursWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1110", "prediction": "all x y.((Specializing(x) & Differenzation(y)) -> OccursWith(x,y))", "score": 0}
{"id": "eqasc_validation_1110", "prediction": "all x y.((Specializing(x) & Differentiation(y)) -> OccursWith(x,y))", "score": 0}
{"id": "eqasc_validation_1110", "prediction": "all x y.((Specialization(x) & Differenzation(y)) -> Occurs(x,y))", "score": 0}
{"id": "eqasc_validation_1110", "prediction": "all x y.((Specializing(x) & Differenciation(y)) -> OccursWith(x,y))", "score": 0}
{"id": "eqasc_validation_1110", "prediction": "all x y.((Specialization(x) & Differenciation(y)) -> Occurs(x,y))", "score": 0}
{"id": "eqasc_validation_1110", "prediction": "all x y.((Specialization(x) & Difference(y)) -> OccursWith(x,y))", "score": 0}
{"id": "eqasc_validation_1110", "prediction": "all x y.((Specialization(x) & Distinctive(y)) -> OccursWith(x,y))", "score": 0}
{"id": "eqasc_validation_1110", "prediction": "all x.(Specialization(x) -> Distinctive(x))", "score": 0}
{"id": "eqasc_validation_1110", "prediction": "all x y z.((Specialization(x) & Differenzation(y) & Specialization(z)) -> Occurs(x,y,z))", "score": 0}
{"id": "eqasc_validation_1110", "prediction": "all x y z.((Specialization(x) & Differenciation(y) & Specialization(z)) -> Occurs(x,y,z))", "score": 0}
{"id": "eqasc_validation_1111", "prediction": "all x.(Neuron(x) -> SpecializedCell(x))", "score": 0}
{"id": "eqasc_validation_1111", "prediction": "all x y.((Neuron(x) & Cell(y)) -> Specialized(x,y))", "score": 0}
{"id": "eqasc_validation_1111", "prediction": "all x.(Neon(x) -> SpecializedCell(x))", "score": 0}
{"id": "eqasc_validation_1111", "prediction": "all x.(Neuron(x) -> (SpecializedCell(x) & SpecializedCell(x)))", "score": 0}
{"id": "eqasc_validation_1111", "prediction": "all x y.((Neuron(x) & SpecializedCell(y)) -> SpecializedCell(x,y))", "score": 0}
{"id": "eqasc_validation_1111", "prediction": "all x y.((Neuron(x) & SpecializedCell(y)) -> Specialized(x,y))", "score": 0}
{"id": "eqasc_validation_1111", "prediction": "all x y.((Neuron(x) & SpecializedCell(y)) -> SpecializedCell(x))", "score": 0}
{"id": "eqasc_validation_1111", "prediction": "all x.(Neuron(x) -> SpecialistCell(x))", "score": 0}
{"id": "eqasc_validation_1111", "prediction": "all x.(Neuron(x) -> SpezializedCell(x))", "score": 0}
{"id": "eqasc_validation_1111", "prediction": "all x y.((Neuron(x) & SpecializedCell(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_1111", "prediction": "all x y.((Neuron(x) & Cell(y)) -> Specialized(x))", "score": 0}
{"id": "eqasc_validation_1111", "prediction": "all x.(Neuron(x) -> (SpecializedCell(x) | SpecializedCell(x)))", "score": 0}
{"id": "eqasc_validation_1111", "prediction": "all x y.((Neuron(x) & SpecializedCell(y)) -> Neuron(x))", "score": 0}
{"id": "eqasc_validation_1112", "prediction": "all x y.((Differentiation(x) & Neuron(y)) -> CreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1112", "prediction": "all x y z.((Differentiation(x) & Neuron(y) & Neuron(z)) -> (CreatedBy(x,y,z) & CreatedBy(y,z)))", "score": 0}
{"id": "eqasc_validation_1112", "prediction": "all x y.((Differential(x) & Neuron(y)) -> CreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1112", "prediction": "all x y.((Differentiation(x) & Neuron(y)) -> (CreatedBy(x,y) & CreatedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1112", "prediction": "all x y z.((Differentiation(x) & Neuron(y) & Neuron(z)) -> CreatedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1112", "prediction": "all x y.((Differentiation(x) & Neuron(y)) -> Creates(x,y))", "score": 0}
{"id": "eqasc_validation_1112", "prediction": "all x y z.((Differential(x) & Neuron(y) & Neuron(z)) -> (CreatedBy(x,y,z) & CreatedBy(y,z)))", "score": 0}
{"id": "eqasc_validation_1112", "prediction": "all x y z.((Differenciation(x) & Neuron(y) & Neuron(z)) -> (CreatedBy(x,y,z) & CreatedBy(y,z)))", "score": 0}
{"id": "eqasc_validation_1112", "prediction": "all x y z.((Differential(x) & Neuron(y) & Neuron(z)) -> CreatedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1112", "prediction": "all x y.((Differentiation(x) & Neuron(y)) -> (CreatedBy(x,y) & CreatedBy(y,z)))", "score": 0}
{"id": "eqasc_validation_1112", "prediction": "all x y z.((Differenciation(x) & Neuron(y) & Neuron(z)) -> CreatedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1112", "prediction": "all x y z.((Differentiation(x) & Neuron(y) & Neuron(z)) -> (CreatedBy(x,y) & CreatedBy(y,z)))", "score": 0}
{"id": "eqasc_validation_1112", "prediction": "all x y.((Differenciation(x) & Neuron(y)) -> CreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1112", "prediction": "all x y z.((Differiation(x) & Neuron(y) & Neuron(z)) -> (CreatedBy(x,y,z) & CreatedBy(y,z)))", "score": 0}
{"id": "eqasc_validation_1112", "prediction": "all x y.((Differiation(x) & Neuron(y)) -> CreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1112", "prediction": "all x y z.((Differentiation(x) & Neuron(y) & Neuron(z)) -> (CreatedBy(y,z) & CreatedBy(y,z)))", "score": 0}
{"id": "eqasc_validation_1113", "prediction": "all x y.((PlantCell(x) & Development(y)) -> Specialized(x,y))", "score": 0}
{"id": "eqasc_validation_1113", "prediction": "all x y.((PlantCell(x) & Development(y)) -> SpecializedDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1113", "prediction": "all x.((PlantCell(x) & SpecializedDuringDevelopment(x)) -> SpecializedDuringDevelopment(x))", "score": 0}
{"id": "eqasc_validation_1113", "prediction": "all x.(PlantCell(x) -> SpecializedDuringDevelopment(x))", "score": 0}
{"id": "eqasc_validation_1113", "prediction": "all x.((PlantCell(x) & BecomesSpecializedDuringDevelopment(x)) -> SpecializedDuringDevelopment(x))", "score": 0}
{"id": "eqasc_validation_1113", "prediction": "all x y z.((PlantCell(x) & Development(y) & Development(z)) -> Specialized(x,y,z))", "score": 0}
{"id": "eqasc_validation_1113", "prediction": "all x.((PlantCell(x) & SpecializedDuringDevelopment(x)) -> Becomes(x,y))", "score": 0}
{"id": "eqasc_validation_1113", "prediction": "all x.((PlantCell(x) & Development(x)) -> Specialized(x))", "score": 0}
{"id": "eqasc_validation_1113", "prediction": "all x y z.((PlantCell(x) & Development(y) & Development(z)) -> SpecializedDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1113", "prediction": "all x.((PlantCell(x) & BecomesSpecializedDuringDevelopment(x)) -> BecomesSpecializedDuringDevelopment(x))", "score": 0}
{"id": "eqasc_validation_1113", "prediction": "all x.((PlantCell(x) & SpecializedDuringDevelopment(x)) -> BecomesDuringDevelopment(x))", "score": 0}
{"id": "eqasc_validation_1113", "prediction": "all x y.((PlantCell(x) & Development(y)) -> BecomesSpecialized(x,y))", "score": 0}
{"id": "eqasc_validation_1113", "prediction": "all x.(PlantCell(x) -> BecomesSpecializedDuringDevelopment(x))", "score": 0}
{"id": "eqasc_validation_1113", "prediction": "all x y z.((PlantCell(x) & Development(y) & Development(z)) -> Specialized(x,z))", "score": 0}
{"id": "eqasc_validation_1113", "prediction": "all x y z.((PlantCell(x) & Development(y) & Development(z)) -> Specialized(x,y))", "score": 0}
{"id": "eqasc_validation_1113", "prediction": "all x y z.((PlantCell(x) & Development(y) & Development(z)) -> BecomesSpecialized(x,y,z))", "score": 0}
{"id": "eqasc_validation_1114", "prediction": "all x y.((Plant(x) & Development(y)) -> SpecializedDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1114", "prediction": "all x y.((Plant(x) & Development(y)) -> Specialized(x,y))", "score": 0}
{"id": "eqasc_validation_1114", "prediction": "all x y.((Plant(x) & Development(y) & SpecializedDuring(x,y)) -> Differentiation(x))", "score": 0}
{"id": "eqasc_validation_1114", "prediction": "all x.((Plant(x) & SpecializedDuringDevelopment(x)) -> Differentiation(x))", "score": 0}
{"id": "eqasc_validation_1114", "prediction": "all x y z.((Plant(x) & Development(y) & Development(z)) -> SpecializedDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1114", "prediction": "all x.(Differentiation(x) -> (PlantsBecomeSpecializedDuringDevelopment(x) & DuringDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_1114", "prediction": "all x y z.((Plant(x) & Development(y) & Development(z)) -> Specialized(x,y,z))", "score": 0}
{"id": "eqasc_validation_1114", "prediction": "all x y.((Plant(x) & Development(y) & SpecializedDuring(x,y)) -> Differentiation(x,y))", "score": 0}
{"id": "eqasc_validation_1114", "prediction": "all x.(Differentiation(x) -> (Plant(x) & SpecializedDuringDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_1114", "prediction": "all x y z.((Plant(x) & Development(y) & Development(z) & SpecializedDuring(x,y,z)) -> Differentiation(x))", "score": 0}
{"id": "eqasc_validation_1114", "prediction": "all x.(Differential(x) -> (Plant(x) & SpecializedDuringDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_1114", "prediction": "all x y.((Plant(x) & Plant(y)) -> SpecializedDuringDevelopment(x,y))", "score": 0}
{"id": "eqasc_validation_1114", "prediction": "all x.(Differiation(x) -> (PlantsBecomeSpecializedDuringDevelopment(x) & DuringDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_1114", "prediction": "all x y.((Plant(x) & Development(y)) -> SpecializedInDevelopment(x,y))", "score": 0}
{"id": "eqasc_validation_1114", "prediction": "all x y z.((Plant(x) & Development(y) & Development(z)) -> SpecializedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1114", "prediction": "all x.(Differentiation(x) -> (PlantsBecomeSpecializedDuringDevelopment(x) & DevelopsDuringDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_1115", "prediction": "all x.(HairCell(x) -> RequiresBrn3.1(x))", "score": -1}
{"id": "eqasc_validation_1115", "prediction": "all x.(HairCell(x) -> RequiresBrun3.1(x))", "score": -1}
{"id": "eqasc_validation_1115", "prediction": "all x.(HairCell(x) -> RequiresBran3.1(x))", "score": -1}
{"id": "eqasc_validation_1115", "prediction": "all x.(HairCell(x) -> RequiresBrn3.1ForDifference(x))", "score": -1}
{"id": "eqasc_validation_1115", "prediction": "all x.(HairCell(x) -> RequiresBrn3.1ForDifferentiation(x))", "score": -1}
{"id": "eqasc_validation_1115", "prediction": "all x.(HairCell(x) -> RequiresBRn3.1(x))", "score": -1}
{"id": "eqasc_validation_1115", "prediction": "all x.(HairCell(x) -> RequiresBrn3.1ForDifferentialization(x))", "score": -1}
{"id": "eqasc_validation_1115", "prediction": "all x.(HairCell(x) -> RequiresBrn3.1ForDifferensation(x))", "score": -1}
{"id": "eqasc_validation_1115", "prediction": "all x.(HairCell(x) -> RequiresBrn3.1ForDifferentiality(x))", "score": -1}
{"id": "eqasc_validation_1115", "prediction": "all x.(HairCell(x) -> RequiresBrun3.1ForDifference(x))", "score": -1}
{"id": "eqasc_validation_1115", "prediction": "all x.(HairCell(x) -> RequiresBrn3.1ForDiscrimination(x))", "score": -1}
{"id": "eqasc_validation_1115", "prediction": "all x.(HairCell(x) -> RequiresBran3.1ForDifference(x))", "score": -1}
{"id": "eqasc_validation_1115", "prediction": "all x.(HairCell(x) -> RequiresBrun3.1ForDifferentiation(x))", "score": -1}
{"id": "eqasc_validation_1115", "prediction": "all x.(HairCell(x) -> RequiresBrn3.1ForDiversification(x))", "score": -1}
{"id": "eqasc_validation_1115", "prediction": "all x.(HairCell(x) -> RequiresBrn3.1ForDiscipline(x))", "score": -1}
{"id": "eqasc_validation_1115", "prediction": "all x.(HairCell(x) -> RequiresBrun3.1ForDifferentialization(x))", "score": -1}
{"id": "eqasc_validation_1116", "prediction": "all x.(Hair(x) -> SpecializedThroughDiscrimination(x))", "score": 0}
{"id": "eqasc_validation_1116", "prediction": "all x.(Hair(x) -> SpecializedThroughDifferenciation(x))", "score": 0}
{"id": "eqasc_validation_1116", "prediction": "all x.(Hair(x) -> SpecializedThroughDifference(x))", "score": 0}
{"id": "eqasc_validation_1116", "prediction": "all x.(Hair(x) -> SpecializedThroughDiversification(x))", "score": 0}
{"id": "eqasc_validation_1116", "prediction": "all x y.((Hair(x) & Hair(y)) -> SpecializedThroughDifference(x,y))", "score": 0}
{"id": "eqasc_validation_1116", "prediction": "all x y.((Hair(x) & Hair(y)) -> SpecializedThroughDifferenciation(x,y))", "score": 0}
{"id": "eqasc_validation_1116", "prediction": "all x y.((Hair(x) & Hair(y)) -> SpecializedThroughDiscrimination(x,y))", "score": 0}
{"id": "eqasc_validation_1116", "prediction": "all x y.((Hair(x) & Hair(y)) -> SpecializedThroughDiversification(x,y))", "score": 0}
{"id": "eqasc_validation_1116", "prediction": "all x y.((Hair(x) & Hair(y)) -> Specialized(x,y))", "score": 0}
{"id": "eqasc_validation_1116", "prediction": "all x.(Hair(x) -> SpecializedThroughDistribution(x))", "score": 0}
{"id": "eqasc_validation_1116", "prediction": "all x y z.((Hair(x) & Hair(y) & Differenzation(z)) -> Specialized(x,y,z))", "score": 0}
{"id": "eqasc_validation_1116", "prediction": "all x y.((Hair(x) & Hair(y)) -> SpecializedThroughDistribution(x,y))", "score": 0}
{"id": "eqasc_validation_1116", "prediction": "all x y z.((Hair(x) & Hair(y) & Differenzation(z)) -> SpecializedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1116", "prediction": "all x y.((Hair(x) & Hair(y)) -> SpecializedThroughDifferentiation(x,y))", "score": 0}
{"id": "eqasc_validation_1116", "prediction": "all x y.((Hair(x) & Hair(y)) -> SpecializedByDifferenciation(x,y))", "score": 0}
{"id": "eqasc_validation_1116", "prediction": "all x y.((Hair(x) & Hair(y)) -> SpecializedByDifference(x,y))", "score": 0}
{"id": "eqasc_validation_1117", "prediction": "all x.(Cell(x) -> BasicUnitOfLife(x))", "score": 0}
{"id": "eqasc_validation_1117", "prediction": "all x y.((Cell(x) & Life(y)) -> BasicUnitOf(x,y))", "score": 0}
{"id": "eqasc_validation_1117", "prediction": "all x y.((Cell(x) & Life(y)) -> BasicUnit(x,y))", "score": 0}
{"id": "eqasc_validation_1117", "prediction": "all x y.((Cell(x) & LifeUnit(y)) -> Basic(x,y))", "score": 0}
{"id": "eqasc_validation_1117", "prediction": "all x y.((Cell(x) & Life(y)) -> BasicUnitOfLife(x,y))", "score": 0}
{"id": "eqasc_validation_1117", "prediction": "all x.(Cell(x) -> BasicLifeUnit(x))", "score": 0}
{"id": "eqasc_validation_1117", "prediction": "all x y.((Cell(x) & LifeUnit(y)) -> BasicUnit(x,y))", "score": 0}
{"id": "eqasc_validation_1117", "prediction": "all x y.((Cell(x) & LifeUnit(y)) -> BasicUnitOf(x,y))", "score": 0}
{"id": "eqasc_validation_1117", "prediction": "all x y.((Cell(x) & UnitOfLife(y)) -> Basic(x,y))", "score": 0}
{"id": "eqasc_validation_1117", "prediction": "all x y.((Cell(x) & BasicUnitOfLife(y)) -> exists z.(Cell(z) & BasicUnitOfLife(z))))", "score": -1}
{"id": "eqasc_validation_1117", "prediction": "all x y.((Cell(x) & BasicUnitOfLife(y)) -> exists z.((Cell(z) & BasicUnitOfLife(z))))", "score": 0}
{"id": "eqasc_validation_1117", "prediction": "all x y.((Cell(x) & UnitOfLife(y)) -> BasicUnitOfLife(x,y))", "score": 0}
{"id": "eqasc_validation_1117", "prediction": "all x y.((Cell(x) & BasicUnitOfLife(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_1117", "prediction": "all x y.((Cell(x) & BasicUnitOfLife(y)) -> exists z.(Cell(z) & BasicUnitOfLife(x,z))))", "score": -1}
{"id": "eqasc_validation_1117", "prediction": "all x y.((Cell(x) & BasicUnitOfLife(y)) -> Cell(x))", "score": 0}
{"id": "eqasc_validation_1117", "prediction": "all x y.((Cell(x) & BasicUnitOfLife(y)) -> exists z.(Cell(z) & BasicUnitOfLife(x,y))))", "score": -1}
{"id": "eqasc_validation_1118", "prediction": "all x.(Differentiation(x) -> (UnspecializedBasicUnitsOfLife(x) & BecomesSpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1118", "prediction": "all x.(Differentiation(x) -> (UnspecializedBasicUnitsOfLife(x) & SpecializedUnitsOfLife(x)))", "score": 0}
{"id": "eqasc_validation_1118", "prediction": "all x.(Differential(x) -> (UnspecializedBasicUnitsOfLife(x) & BecomesSpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1118", "prediction": "all x.(Differential(x) -> (UnspecializedBasicUnitsOfLife(x) & SpecializedUnitsOfLife(x)))", "score": 0}
{"id": "eqasc_validation_1118", "prediction": "all x.(Differiation(x) -> (UnspecializedBasicUnitsOfLife(x) & BecomesSpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1118", "prediction": "all x y.((Differentiation(x) & UnspecializedBasicUnitsOfLife(y)) -> Specialized(x,y))", "score": 0}
{"id": "eqasc_validation_1118", "prediction": "all x.(Differenciation(x) -> (UnspecializedBasicUnitsOfLife(x) & BecomesSpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1118", "prediction": "all x y.((Differentiation(x) & UnspecializedBasicUnitsOfLife(y)) -> BecomesSpecialized(x,y))", "score": 0}
{"id": "eqasc_validation_1118", "prediction": "all x.(Differiation(x) -> (UnspecializedBasicUnitsOfLife(x) & SpecializedUnitsOfLife(x)))", "score": 0}
{"id": "eqasc_validation_1118", "prediction": "all x.(Differenciation(x) -> (UnspecializedBasicUnitsOfLife(x) & SpecializedUnitsOfLife(x)))", "score": 0}
{"id": "eqasc_validation_1118", "prediction": "all x y.((Differentiation(x) & UnspecializedBasicUnitsOfLife(y)) -> Specialized(x))", "score": 0}
{"id": "eqasc_validation_1118", "prediction": "all x y.((Differentiation(x) & UnspecializedBasicUnitsOfLife(y)) -> BecomesSpecialized(x))", "score": 0}
{"id": "eqasc_validation_1118", "prediction": "all x y.((Differential(x) & UnspecializedBasicUnitsOfLife(y)) -> Specialized(x,y))", "score": 0}
{"id": "eqasc_validation_1118", "prediction": "all x y.((Differiation(x) & UnspecializedBasicUnitsOfLife(y)) -> Specialized(x,y))", "score": 0}
{"id": "eqasc_validation_1119", "prediction": "all x.(NerveCell(x) -> (Large(x) & Complicated(x) & HighlySpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1119", "prediction": "all x.(NerveCell(x) -> (Large(x) & Complex(x) & HighlySpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1119", "prediction": "all x.(NerveCell(x) -> (LargeCell(x) & ComplicatedCell(x) & HighlySpecializedCell(x)))", "score": 0}
{"id": "eqasc_validation_1119", "prediction": "all x.(NerveCell(x) -> (LargeCell(x) & ComplexCell(x) & HighlySpecializedCell(x)))", "score": 0}
{"id": "eqasc_validation_1119", "prediction": "all x.(NerveCell(x) -> (Large(x) & Compromised(x) & HighlySpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1119", "prediction": "all x.(NervineCell(x) -> (Large(x) & Complicated(x) & HighlySpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1119", "prediction": "all x.(NerveCell(x) -> (Large(x) & Complimented(x) & HighlySpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1119", "prediction": "all x.(NerveCell(x) -> (Large(x) & Complimentary(x) & HighlySpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1119", "prediction": "all x.(NervineCell(x) -> (Large(x) & Complex(x) & HighlySpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1119", "prediction": "all x.(NerveCell(x) -> (Large(x) & Complicated(x) & HighlySpezialized(x)))", "score": 0}
{"id": "eqasc_validation_1119", "prediction": "all x.(NerveCell(x) -> (Large(x) & Complicated(x) & HighlySkilled(x)))", "score": 0}
{"id": "eqasc_validation_1120", "prediction": "all x y.((Differentiation(x) & NerveCellDevelopment(y)) -> EssentialToNerveCellDevelopment(x,y))", "score": 0}
{"id": "eqasc_validation_1120", "prediction": "all x y.((Differiation(x) & NerveCellDevelopment(y)) -> EssentialToNerveCellDevelopment(x,y))", "score": 0}
{"id": "eqasc_validation_1120", "prediction": "all x y.((Differentiation(x) & NerveCellDevelopment(y)) -> EssentialToDevelopment(x,y))", "score": 0}
{"id": "eqasc_validation_1120", "prediction": "all x y z.((Differentiation(x) & NerveCellDevelopment(y) & NerveCellDevelopment(z)) -> EssentialToNerveCellDevelopment(x,y,z))", "score": 0}
{"id": "eqasc_validation_1120", "prediction": "all x y z.((Differentiation(x) & NerveCellDevelopment(y) & NerveCellDevelopment(z)) -> EssentialToDevelopment(x,y,z))", "score": 0}
{"id": "eqasc_validation_1120", "prediction": "all x y.((Differentiation(x) & NerveCellDevelopment(y)) -> EssentialToNervousCellDevelopment(x,y))", "score": 0}
{"id": "eqasc_validation_1120", "prediction": "all x y z.((Differenciation(x) & NerveCellDevelopment(y) & NerveCellDevelopment(z)) -> EssentialToNerveCellDevelopment(x,y,z))", "score": 0}
{"id": "eqasc_validation_1120", "prediction": "all x y z.((Differenciation(x) & NerveCellDevelopment(y) & NerveCellDevelopment(z)) -> EssentialToDifferenciation(x,y,z))", "score": 0}
{"id": "eqasc_validation_1120", "prediction": "all x y.((Differenciation(x) & NerveCellDevelopment(y)) -> EssentialToNerveCellDevelopment(x,y))", "score": 0}
{"id": "eqasc_validation_1120", "prediction": "all x y.((Differential(x) & NerveCellDevelopment(y)) -> EssentialToNerveCellDevelopment(x,y))", "score": 0}
{"id": "eqasc_validation_1120", "prediction": "all x y z.((Differiation(x) & NerveCellDevelopment(y) & NerveCellDevelopment(z)) -> EssentialToNerveCellDevelopment(x,y,z))", "score": 0}
{"id": "eqasc_validation_1120", "prediction": "all x y z.((Differenciation(x) & NerveCellDevelopment(y) & NerveCellDevelopment(z)) -> EssentialToDevelopment(x,y,z))", "score": 0}
{"id": "eqasc_validation_1120", "prediction": "all x y z.((Differiation(x) & NerveCellDevelopment(y) & NerveCellDevelopment(z)) -> EssentialToDevelopment(x,y,z))", "score": 0}
{"id": "eqasc_validation_1120", "prediction": "all x y z.((Differiation(x) & NerveCellDevelopment(y) & NerveCellDevelopment(z)) -> EssentialToDifferiation(x,y,z))", "score": 0}
{"id": "eqasc_validation_1120", "prediction": "all x y z.((Differentiation(x) & NerveCellDevelopment(y) & NerveCell(z)) -> EssentialToDevelopment(x,y,z))", "score": 0}
{"id": "eqasc_validation_1120", "prediction": "all x y z.((Differentiation(x) & NerveCellDevelopment(y) & NerveCellDevelopment(z)) -> EssentialToDifferentiation(x,y,z))", "score": 0}
{"id": "eqasc_validation_1121", "prediction": "all x.(Neuron(x) -> HighlySpecializedCell(x))", "score": 0}
{"id": "eqasc_validation_1121", "prediction": "all x.(Neurone(x) -> HighlySpecializedCell(x))", "score": 0}
{"id": "eqasc_validation_1121", "prediction": "all x.(Neuron(x) -> HighlySpecialized(x))", "score": 0}
{"id": "eqasc_validation_1121", "prediction": "all x y.((Neuron(x) & Cell(y)) -> HighlySpecialized(x,y))", "score": 0}
{"id": "eqasc_validation_1121", "prediction": "all x y.((Neurone(x) & Cell(y)) -> HighlySpecialized(x,y))", "score": 0}
{"id": "eqasc_validation_1121", "prediction": "all x y.((Neuron(x) & Cell(y)) -> HighlySpecialized(x))", "score": 0}
{"id": "eqasc_validation_1121", "prediction": "all x.(Neurone(x) -> HighlySpecialized(x))", "score": 0}
{"id": "eqasc_validation_1121", "prediction": "all x.(Neuron(x) -> HighlySpezializedCell(x))", "score": 0}
{"id": "eqasc_validation_1121", "prediction": "all x.(Neon(x) -> HighlySpecializedCell(x))", "score": 0}
{"id": "eqasc_validation_1121", "prediction": "all x.(Neurine(x) -> HighlySpecializedCell(x))", "score": 0}
{"id": "eqasc_validation_1121", "prediction": "all x y.((Neurone(x) & Cell(y)) -> HighlySpecialized(x))", "score": 0}
{"id": "eqasc_validation_1122", "prediction": "all x y.((Differentiation(x) & Neuron(y)) -> CreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1122", "prediction": "all x y.((Differiation(x) & Neuron(y)) -> CreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1122", "prediction": "all x y.((Differentiation(x) & Neurone(y)) -> CreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1122", "prediction": "all x y.((Differential(x) & Neuron(y)) -> CreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1122", "prediction": "all x y.((Differiation(x) & Neurone(y)) -> CreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1122", "prediction": "all x y z.((Differiation(x) & Neuron(y) & Neuron(z)) -> CreatedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1122", "prediction": "all x y z.((Differentiation(x) & Neuron(y) & Neuron(z)) -> CreatedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1122", "prediction": "all x y.((Differenciation(x) & Neuron(y)) -> CreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1122", "prediction": "all x y z.((Differentiation(x) & Neurone(y) & Neurone(z)) -> CreatedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1122", "prediction": "all x y z.((Differential(x) & Neuron(y) & Neuron(z)) -> CreatedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1122", "prediction": "all x y z.((Differiation(x) & Neurone(y) & Neurone(z)) -> CreatedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1122", "prediction": "all x y z.((Differenciation(x) & Neuron(y) & Neuron(z)) -> CreatedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1122", "prediction": "all x y.((Differenciation(x) & Neurone(y)) -> CreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1122", "prediction": "all x y.((Differential(x) & Neurone(y)) -> CreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1122", "prediction": "all x y z.((Differentiation(x) & Neuron(y) & Neuron(z)) -> (CreatedBy(x,y,z) & CreatedBy(y,z)))", "score": 0}
{"id": "eqasc_validation_1122", "prediction": "all x y z.((Differiation(x) & Neuron(y) & Neuron(z)) -> (CreatedBy(x,y,z) & CreatedBy(y,z)))", "score": 0}
{"id": "eqasc_validation_1123", "prediction": "all x.(THelperCell(x) -> (DifferentToMemoryCells(x) & DifferentToEffectorCells(x)))", "score": 0}
{"id": "eqasc_validation_1123", "prediction": "all x.(THelperCell(x) -> (DifferentTo(x,MemoryCells) & DifferentTo(x,EffectorCells)))", "score": 0}
{"id": "eqasc_validation_1123", "prediction": "all x y.((THelperCell(x) & MemoryCell(y) & EffectorCell(y)) -> DifferentiatesTo(x,y))", "score": 0}
{"id": "eqasc_validation_1123", "prediction": "all x y z.((THelperCell(x) & MemoryCell(y) & EffectorCell(z)) -> DifferentiatesTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_1123", "prediction": "all x.(THelperCell(x) -> (DifferentToMemoryCells(x) & DifferentToEffectivorCells(x)))", "score": 0}
{"id": "eqasc_validation_1123", "prediction": "all x y.((THelperCell(x) & MemoryCell(y) & EffectorCell(z)) -> DifferentiatesTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_1123", "prediction": "all x.(THelperCell(x) -> (DifferentToMemoryCells(x) | DifferentToEffectorCells(x)))", "score": 0}
{"id": "eqasc_validation_1123", "prediction": "all x.(THelperCell(x) -> (DifferentTo(x,MemoryCells) & DifferentTo(x,EffectivorCells)))", "score": 0}
{"id": "eqasc_validation_1123", "prediction": "all x y.((THelperCell(x) & MemoryCell(y) & EffectorCell(x)) -> DifferentiatesTo(x,y))", "score": 0}
{"id": "eqasc_validation_1123", "prediction": "all x y z.((THelperCell(x) & MemoryCell(y) & EffectorCell(z)) -> DiffersTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_1123", "prediction": "all x.(THelperCell(x) -> (DifferentToMemoryCell(x) & DifferentToEffectorCell(x)))", "score": 0}
{"id": "eqasc_validation_1123", "prediction": "all x y.((THelperCell(x) & MemoryCell(y) & EffectorCell(y)) -> DiffersTo(x,y))", "score": 0}
{"id": "eqasc_validation_1123", "prediction": "all x.(THelperCell(x) -> (DistinctToMemoryCells(x) & DifferentToEffectorCells(x)))", "score": 0}
{"id": "eqasc_validation_1123", "prediction": "all x y.((THelperCell(x) & MemoryCell(y)) -> DifferentiatesTo(x,y))", "score": 0}
{"id": "eqasc_validation_1123", "prediction": "all x y.((THelperCell(x) & MemoryCell(y)) -> (DifferentTo(x,y) & DifferentTo(x,y)))", "score": 0}
{"id": "eqasc_validation_1123", "prediction": "all x.((THelperCell(x) & MemoryCell(x) & EffectorCell(x)) -> DifferentiatesTo(x,y))", "score": 0}
{"id": "eqasc_validation_1124", "prediction": "all x.(THelperCell(x) -> (MemoryCell(x) | EffectorCell(x)))", "score": 0}
{"id": "eqasc_validation_1124", "prediction": "all x.(THelperCell(x) -> (MemoryCell(x) & EffectorCell(x)))", "score": 0}
{"id": "eqasc_validation_1124", "prediction": "all x y z.((THelperCell(x) & MemoryCell(y) & EffectorCell(z)) -> (MoreSpecializedAs(x,y) & MoreSpecializedAs(x,z)))", "score": 0}
{"id": "eqasc_validation_1124", "prediction": "all x y z.((T HelperCell(x) & MemoryCell(y) & EffectorCell(z)) -> (MoreSpecializedAs(x,y) & MoreSpecializedAs(x,z)))", "score": -1}
{"id": "eqasc_validation_1124", "prediction": "all x y z.((THelperCell(x) & MemoryCell(y) & EffectorCell(z)) -> (MoreSpecialized(x,y) & MoreSpecialized(x,z)))", "score": 0}
{"id": "eqasc_validation_1124", "prediction": "all x y z.((T HelperCell(x) & MemoryCell(y) & EffectorCell(z)) -> (MoreSpecialized(x,y) & MoreSpecialized(x,z)))", "score": -1}
{"id": "eqasc_validation_1124", "prediction": "all x.(ThelperCell(x) -> (MemoryCell(x) | EffectorCell(x)))", "score": 0}
{"id": "eqasc_validation_1124", "prediction": "all x.(T HelperCell(x) -> (MemoryCell(x) | EffectorCell(x)))", "score": -1}
{"id": "eqasc_validation_1124", "prediction": "all x.((THelperCell(x) & MemoryCell(x) & EffectorCell(x)) -> MoreSpecialized(x))", "score": 0}
{"id": "eqasc_validation_1124", "prediction": "all x y.((THelperCell(x) & MemoryCell(y) & EffectorCell(y)) -> (MoreSpecialized(x,y) & MoreSpecialized(x,y)))", "score": 0}
{"id": "eqasc_validation_1124", "prediction": "all x y.((THelperCell(x) & MemoryCell(y)) -> (MoreSpecializedAs(x,y) & MoreSpecializedAs(x,y)))", "score": 0}
{"id": "eqasc_validation_1124", "prediction": "all x y.((THelperCell(x) & MemoryCell(y) & EffectorCell(x)) -> (MoreSpecialized(x,y) & MoreSpecialized(x,y)))", "score": 0}
{"id": "eqasc_validation_1124", "prediction": "all x y.((THelperCell(x) & MemoryCell(y)) -> (MoreSpecializedAs(x,y) & MoreSpecializedAs(x,y) & MoreSpecializedAs(x,y)))", "score": 0}
{"id": "eqasc_validation_1124", "prediction": "all x y.((THelperCell(x) & MemoryCell(y) & EffectorCell(z)) -> (MoreSpecialized(x,y) & MoreSpecialized(x,z)))", "score": 0}
{"id": "eqasc_validation_1124", "prediction": "all x y z.((THelperCell(x) & MemoryCell(y) & EffectorCell(z)) -> (MoreSpezialized(x,y) & MoreSpezialized(x,z)))", "score": 0}
{"id": "eqasc_validation_1124", "prediction": "all x y z.((THelperCell(x) & MemoryCell(y) & EffectorCell(z)) -> (SpezializedAs(x,y) & SpecializedAs(x,z)))", "score": 0}
{"id": "eqasc_validation_1125", "prediction": "all x.((Method(x) | Process(x)) -> Activities(x))", "score": 0}
{"id": "eqasc_validation_1125", "prediction": "all x.((Method(x) & Process(x)) -> Activities(x))", "score": 0}
{"id": "eqasc_validation_1125", "prediction": "all x.((Method(x) | Process(x)) -> Activity(x))", "score": 0}
{"id": "eqasc_validation_1125", "prediction": "all x.(Method(x) & Process(x)) -> Activities(x))", "score": -1}
{"id": "eqasc_validation_1125", "prediction": "all x.((Method(x) & Process(x)) -> Activity(x))", "score": 0}
{"id": "eqasc_validation_1125", "prediction": "all x y.((Method(x) & Process(y)) -> Activities(x))", "score": 0}
{"id": "eqasc_validation_1125", "prediction": "all x.(Method(x) & Process(x)) -> Activity(x))", "score": -1}
{"id": "eqasc_validation_1125", "prediction": "all x y.((Method(x) & Process(y)) -> Activity(x))", "score": 0}
{"id": "eqasc_validation_1125", "prediction": "all x.(Method(x) | Process(x)) -> Activities(x))", "score": -1}
{"id": "eqasc_validation_1125", "prediction": "all x y.((Method(x) & Process(y)) -> Activities(x,y))", "score": 0}
{"id": "eqasc_validation_1125", "prediction": "all x.(Method(x) | Process(x)) -> Activity(x))", "score": -1}
{"id": "eqasc_validation_1125", "prediction": "all x y z.((Method(x) & Process(y) & Method(z)) -> Activities(x))", "score": 0}
{"id": "eqasc_validation_1125", "prediction": "all x y z.((Method(x) & Process(y) & Method(z)) -> Activity(x))", "score": 0}
{"id": "eqasc_validation_1125", "prediction": "all x.(Method(x) -> (Process(x) & Activities(x)))", "score": 0}
{"id": "eqasc_validation_1126", "prediction": "all x.(Differentiation(x) -> (UnspecializedCells(x) & SpecializedCells(x)))", "score": 0}
{"id": "eqasc_validation_1126", "prediction": "all x.(Differential(x) -> (UnspecializedCells(x) & SpecializedCells(x)))", "score": 0}
{"id": "eqasc_validation_1126", "prediction": "all x y.((Differentiation(x) & UnspecializedCell(y)) -> BecomesSpecialized(x,y))", "score": 0}
{"id": "eqasc_validation_1126", "prediction": "all x.(Differiation(x) -> (UnspecializedCells(x) & SpecializedCells(x)))", "score": 0}
{"id": "eqasc_validation_1126", "prediction": "all x.(Differentiation(x) -> (UnspecializedCellsBecomeSpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1126", "prediction": "all x.(Differentiation(x) -> (UnspecializedCells(x) & BecomesSpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1126", "prediction": "all x.(Differentiation(x) -> (UnspecializedCell(x) & SpecializedCell(x)))", "score": 0}
{"id": "eqasc_validation_1126", "prediction": "all x.(Differential(x) -> (UnspecializedCell(x) & SpecializedCell(x)))", "score": 0}
{"id": "eqasc_validation_1126", "prediction": "all x.(Differential(x) -> (UnspecializedCell(x) & BecomesSpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1126", "prediction": "all x.((UnspecializedCell(x) & SpecializedCell(x)) -> Differentiation(x))", "score": 0}
{"id": "eqasc_validation_1126", "prediction": "all x y.((Differentiation(x) & UnspecializedCell(y)) -> Specialized(y))", "score": 0}
{"id": "eqasc_validation_1126", "prediction": "all x.(Differential(x) -> (UnspecializedCellsBecomeSpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1126", "prediction": "all x.(Differiation(x) -> (UnspecializedCellsBecomeSpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1126", "prediction": "all x y.((Differentiation(x) & UnspecializedCell(y)) -> Specialized(x,y))", "score": 0}
{"id": "eqasc_validation_1126", "prediction": "all x y.((Differentiation(x) & UnspecializedCell(y)) -> BecomesSpecialized(x))", "score": 0}
{"id": "eqasc_validation_1127", "prediction": "all x.(HagfishAncestors(x) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1127", "prediction": "all x.(HagfishAncestors(x) -> earliestVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1127", "prediction": "all x y.((Ancestors(x) & Hagfish(y)) -> EarlyVertebrate(x,y))", "score": 0}
{"id": "eqasc_validation_1127", "prediction": "all x y.((Ancestor(x) & Hagfish(y)) -> EarlyVertebrate(x,y))", "score": 0}
{"id": "eqasc_validation_1127", "prediction": "all x.(HagfishAncestors(x) -> FrühestVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1127", "prediction": "all x.((Ancestor(x) & Hagfish(x)) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1127", "prediction": "all x y.((Acestors(x) & Hagfish(y)) -> EarlyVertebrate(x,y))", "score": 0}
{"id": "eqasc_validation_1127", "prediction": "all x.((Ancestor(x) & Hagfish(x)) -> earliestVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1127", "prediction": "all x.(HaggfishAncestors(x) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1127", "prediction": "all x.(HaggfishAncestors(x) -> earliestVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1127", "prediction": "all x.(Hagfish(x) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1127", "prediction": "all x.((Ancestors(x) & Hagfish(x)) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1127", "prediction": "all x.(AncestorsOfHagfish(x) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1127", "prediction": "all x.((AncestorsOfHagfish(x) & Vertebrate(x)) -> earliest(x))", "score": 0}
{"id": "eqasc_validation_1127", "prediction": "all x.((AncestorsOfHagfish(x) & Vertebrate(x)) -> Early(x))", "score": 0}
{"id": "eqasc_validation_1127", "prediction": "all x y.((Ancestors(x) & Hagfish(y)) -> EarlyVertebrates(x,y))", "score": 0}
{"id": "eqasc_validation_1128", "prediction": "all x.((Animal(x) & HasBackbone(x)) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1128", "prediction": "all x.((Animal(x) & HasBackbone(x)) -> Vertebrates(x))", "score": 0}
{"id": "eqasc_validation_1128", "prediction": "all x.((Animal(x) & HasBackbones(x)) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1128", "prediction": "all x.((Animal(x) & HasBackbones(x)) -> Vertebrates(x))", "score": 0}
{"id": "eqasc_validation_1128", "prediction": "all x.((Animal(x) & Backbone(x)) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1128", "prediction": "all x.((Animal(x) & HasBackbone(x)) -> Vertebrite(x))", "score": 0}
{"id": "eqasc_validation_1128", "prediction": "all x.(Animal(x) & HasBackbone(x)) -> Vertebrate(x))", "score": -1}
{"id": "eqasc_validation_1128", "prediction": "all x y.((Animal(x) & Backbone(y) & Has(x,y)) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1128", "prediction": "all x.((Animal(x) & Backbone(x)) -> Vertebrates(x))", "score": 0}
{"id": "eqasc_validation_1128", "prediction": "all x y.((Animal(x) & HasBackbone(x,y)) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1128", "prediction": "all x y.((Animal(x) & HasBackbone(x)) -> Vertebrate(y))", "score": 0}
{"id": "eqasc_validation_1128", "prediction": "all x.((Animal(x) & HasBackbone(x)) -> Vertebrote(x))", "score": 0}
{"id": "eqasc_validation_1128", "prediction": "all x y.((Animal(x) & HasBackbone(x)) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1128", "prediction": "all x.(Animal(x) & HasBackbone(x)) -> Vertebrates(x))", "score": -1}
{"id": "eqasc_validation_1128", "prediction": "all x y.((Animal(x) & Backbone(y) & Has(x,y)) -> Vertebrates(x))", "score": 0}
{"id": "eqasc_validation_1129", "prediction": "all x y.((AncestorsOfHagfish(x) & Animal(y)) -> EarlyWithBackbones(x,y))", "score": 0}
{"id": "eqasc_validation_1129", "prediction": "all x y.((AncestorsOfHagfish(x) & Animal(y)) -> (Early(x,y) & HasBackbone(y)))", "score": 0}
{"id": "eqasc_validation_1129", "prediction": "all x y z.((AncestorsOfHagfish(x) & Animal(y) & Backbone(z)) -> EarlyAnimal(x,y,z))", "score": 0}
{"id": "eqasc_validation_1129", "prediction": "all x y.((AncestorsOfHagfish(x) & Animal(y)) -> (Early(y) & HasBackbone(y)))", "score": 0}
{"id": "eqasc_validation_1129", "prediction": "all x.(AncestorsOfHagfish(x) -> (Animal(x) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1129", "prediction": "all x y.((Ancestors(x) & Hagfish(y)) -> (EarlyAnimal(x,y) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1129", "prediction": "all x.(AncestorsOfHagfish(x) -> (EarlyAnimal(x) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1129", "prediction": "all x y z.((AncestorsOfHagfish(x) & Animal(y) & Backbone(z)) -> (Early(y) & HasBackbone(y,z)))", "score": 0}
{"id": "eqasc_validation_1129", "prediction": "all x y z.((AncestorsOfHagfish(x) & Animal(y) & Backbone(z)) -> Early(x,y,z))", "score": 0}
{"id": "eqasc_validation_1129", "prediction": "all x y z.((AncestorsOfHagfish(x) & Animal(y) & Backbone(z)) -> EarlyWithBackbone(x,y,z))", "score": 0}
{"id": "eqasc_validation_1129", "prediction": "all x y.((AncestorsOfHagfish(x) & Animal(y)) -> (Early(x,y) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1129", "prediction": "all x y.((Ancestors(x) & Hagfish(y)) -> (Animal(x) & HasBackbone(x,y)))", "score": 0}
{"id": "eqasc_validation_1129", "prediction": "all x y z.((AncestorsOfHagfish(x) & Animal(y) & Backbone(z)) -> (Early(y,z) & HasBackbone(y,z)))", "score": 0}
{"id": "eqasc_validation_1129", "prediction": "all x y.((AncestorsOfHagfish(x) & Animal(y)) -> Early(x,y))", "score": 0}
{"id": "eqasc_validation_1129", "prediction": "all x y.((Ancestor(x) & Hagfish(y)) -> (Animal(x) & HasBackbone(x,y)))", "score": 0}
{"id": "eqasc_validation_1129", "prediction": "all x y.((AncestorsOfHagfish(x) & Animal(y)) -> (Early(y) & HasBackbone(x,y)))", "score": 0}
{"id": "eqasc_validation_1130", "prediction": "all x y z.((Descendant(x) & JawlessFish(y) & Lamprey(z) & Hagfish(z)) -> PresentIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1130", "prediction": "all x.((JawlessFish(x) & Lamprey(x) & Hagfish(x)) -> Descendants(x))", "score": 0}
{"id": "eqasc_validation_1130", "prediction": "all x y.((JawlessFish(x) & Lamprey(y) & Hagfish(y)) -> Descendant(x,y))", "score": 0}
{"id": "eqasc_validation_1130", "prediction": "all x y.((EarlyJawlessFish(x) & Lamprey(y) & Hagfish(y)) -> Descendant(x,y))", "score": 0}
{"id": "eqasc_validation_1130", "prediction": "all x y.((JawlessFish(x) & Lamprey(y) & Hagfish(y)) -> Descendants(x,y))", "score": 0}
{"id": "eqasc_validation_1130", "prediction": "all x.((JawlessFish(x) & Lamprey(x) & Hagfish(x)) -> Descendant(x))", "score": 0}
{"id": "eqasc_validation_1130", "prediction": "all x y z.((Descendant(x) & JawlessFish(y) & Lamprey(z) & Hagfish(z)) -> PresentToday(x,y,z))", "score": 0}
{"id": "eqasc_validation_1130", "prediction": "all x.((Descendant(x) & EarlyJawlessFish(x)) -> (presentInLampreys(x) | PresentInHagfishes(x)))", "score": 0}
{"id": "eqasc_validation_1130", "prediction": "all x y z.((Descendant(x) & JawlessFish(y) & Lamprey(z) & Hagfish(z)) -> Present(x,y,z))", "score": 0}
{"id": "eqasc_validation_1130", "prediction": "all x.((EarlyJawlessFish(x) & Lamprey(x) & Hagfish(x)) -> Descendants(x))", "score": 0}
{"id": "eqasc_validation_1130", "prediction": "all x.((EarlyJawlessFish(x) & Lamprey(x) & Hagfish(x)) -> Descendant(x))", "score": 0}
{"id": "eqasc_validation_1130", "prediction": "all x y.((EarlyJawlessFish(x) & Lamprey(y) & Hagfish(y)) -> Descendants(x,y))", "score": 0}
{"id": "eqasc_validation_1130", "prediction": "all x y z.((Descendant(x) & JawlessFish(y) & Lamprey(z) & Hagfish(z)) -> PresentTodayIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1130", "prediction": "all x y.((Descendant(x) & EarlyJawlessFish(x) & Lamprey(y) & Hagfish(y)) -> PresentIn(x,y))", "score": 0}
{"id": "eqasc_validation_1131", "prediction": "all x.((Vertebrate(x) & JawlessFish(x)) -> Early(x))", "score": 0}
{"id": "eqasc_validation_1131", "prediction": "all x y.((Vertebrate(x) & JawlessFish(y)) -> Early(x,y))", "score": 0}
{"id": "eqasc_validation_1131", "prediction": "all x.((Vertebrate(x) & JawlessFish(x)) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1131", "prediction": "all x.((EarlyVertebrate(x) & JawlessFish(x)) -> JawlessFish(x))", "score": 0}
{"id": "eqasc_validation_1131", "prediction": "all x y.((Vertebrate(x) & JawlessFish(y)) -> Early(x))", "score": 0}
{"id": "eqasc_validation_1131", "prediction": "all x.((Vertebrates(x) & JawlessFish(x)) -> Early(x))", "score": 0}
{"id": "eqasc_validation_1131", "prediction": "all x.(Vertebrate(x) -> (JawlessFish(x) | JawlessFish(x)))", "score": 0}
{"id": "eqasc_validation_1131", "prediction": "all x.((EarlyVertebrates(x) & JawlessFish(x)) -> JawlessFish(x))", "score": 0}
{"id": "eqasc_validation_1131", "prediction": "all x.(EarlyVertebrate(x) -> (JawlessFish(x) | JawlessFish(x)))", "score": 0}
{"id": "eqasc_validation_1131", "prediction": "all x.((EarlyVertebrate(x) & JawlessFish(x)) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1131", "prediction": "all x.(EarlyVertebrate(x) -> (JawlessFish(x) & JawlessFish(x)))", "score": 0}
{"id": "eqasc_validation_1131", "prediction": "all x y.((EarlyVertebrate(x) & JawlessFish(y)) -> JawlessFish(x,y))", "score": 0}
{"id": "eqasc_validation_1131", "prediction": "all x.((EarlyVertebrate(x) & JawlessFish(x)) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1131", "prediction": "all x.((EarlyVertebrate(x) & JawlessFish(x)) -> Jawless(x))", "score": 0}
{"id": "eqasc_validation_1131", "prediction": "all x.((Vertebrates(x) & JawlessFish(x)) -> EarlyVertebrates(x))", "score": 0}
{"id": "eqasc_validation_1132", "prediction": "all x.(Vertebrates(x) -> (Animal(x) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1132", "prediction": "all x.(Vertebrates(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_validation_1132", "prediction": "all x.(Vertebrat(x) -> (Animal(x) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1132", "prediction": "all x.(Vertebrate(x) -> (Animal(x) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1132", "prediction": "all x.(Vertebrat(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_validation_1132", "prediction": "all x.(Vertebrate(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_validation_1132", "prediction": "all x.(Vertebrates(x) -> exists y.(Backbone(y) & Has(x,y))))", "score": -1}
{"id": "eqasc_validation_1132", "prediction": "all x y.((Animal(x) & Vertebrates(y)) -> HasBackbone(x,y))", "score": 0}
{"id": "eqasc_validation_1132", "prediction": "all x.((Animal(x) & HasBackbone(x)) -> Vertebrates(x))", "score": 0}
{"id": "eqasc_validation_1132", "prediction": "all x y.((Animal(x) & Vertebrates(x)) -> HasBackbone(x,y))", "score": 0}
{"id": "eqasc_validation_1132", "prediction": "all x.(Vertebrates(x) -> (Animal(x) & Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1132", "prediction": "all x.(Vertebrates(x) -> Animal(x))", "score": 0}
{"id": "eqasc_validation_1133", "prediction": "all x.((AncestorsOfHagfish(x) & HadBackbones(x)) -> HadBackbones(x))", "score": 0}
{"id": "eqasc_validation_1133", "prediction": "all x.((Ancient(x) & Hagfish(x)) -> HadBackbones(x))", "score": 0}
{"id": "eqasc_validation_1133", "prediction": "all x.((AncientsOfHagfish(x) & HadBackbones(x)) -> HadBackbones(x))", "score": 0}
{"id": "eqasc_validation_1133", "prediction": "all x y z.((Ancient(x) & Hagfish(y) & Backbone(z)) -> HadBackbone(x,y,z))", "score": 0}
{"id": "eqasc_validation_1133", "prediction": "all x y.((Ancient(x) & Hagfish(y) & HadBackbone(x,y)) -> HadBackbone(x,y))", "score": 0}
{"id": "eqasc_validation_1133", "prediction": "all x y.((Ancient(x) & Hagfish(y) & HadBackbones(x,y)) -> HadBackbones(x,y))", "score": 0}
{"id": "eqasc_validation_1133", "prediction": "all x y.((Ancient(x) & Hagfish(y)) -> HadBackbones(x,y))", "score": 0}
{"id": "eqasc_validation_1133", "prediction": "all x y.((Ancient(x) & Hagfish(y) & HadBackbones(x,y)) -> HadBackbones(x))", "score": 0}
{"id": "eqasc_validation_1133", "prediction": "all x y.((Ancestors(x) & Hagfish(y)) -> HadBackbones(x,y))", "score": 0}
{"id": "eqasc_validation_1133", "prediction": "all x.((Ancestors(x) & Hagfish(x)) -> HadBackbones(x))", "score": 0}
{"id": "eqasc_validation_1133", "prediction": "all x y.((Ancient(x) & Hagfish(y)) -> HadBackbone(x,y))", "score": 0}
{"id": "eqasc_validation_1133", "prediction": "all x y.((Ancient(x) & Hagfish(y) & HadBackbones(x,y)) -> HadBackbones(y))", "score": 0}
{"id": "eqasc_validation_1133", "prediction": "all x y z.((Ancient(x) & Hagfish(y) & Backbone(z)) -> HadBackbone(x,y))", "score": 0}
{"id": "eqasc_validation_1133", "prediction": "all x y.((Ancient(x) & Hagfish(y) & HadBackbone(x,y)) -> HadBackbone(x))", "score": 0}
{"id": "eqasc_validation_1134", "prediction": "all x y.((Haggfish(x) & Shark(y)) -> (IsosmoticWithSalineEnvironments(x) & IsosmoticWithSalineEnvironments(y)))", "score": 0}
{"id": "eqasc_validation_1134", "prediction": "(IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish))", "score": 0}
{"id": "eqasc_validation_1134", "prediction": "(IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish))", "score": 0}
{"id": "eqasc_validation_1134", "prediction": "all x y.((Haggfish(x) & Shark(y)) -> (IsosmoticWithSalineEnvironment(x) & IsosmoticWithSalineEnvironment(y)))", "score": 0}
{"id": "eqasc_validation_1134", "prediction": "all x y.((Haggfish(x) & Shark(y)) -> (Isosmotic(x) & SalineEnvironment(y)))", "score": 0}
{"id": "eqasc_validation_1134", "prediction": "all x.((Haggfish(x) & Shark(x)) -> (IsosmoticWithSalineEnvironments(x) & IsosmoticWithSalineEnvironments(x)))", "score": 0}
{"id": "eqasc_validation_1134", "prediction": "(IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Has", "score": -1}
{"id": "eqasc_validation_1134", "prediction": "all x y.((Hagfish(x) & Shark(y)) -> (IsosmoticWithSalineEnvironments(x) & IsosmoticWithSalineEnvironments(y)))", "score": 0}
{"id": "eqasc_validation_1134", "prediction": "(IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish))", "score": 0}
{"id": "eqasc_validation_1134", "prediction": "(IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish)) & IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish))", "score": -1}
{"id": "eqasc_validation_1134", "prediction": "all x y.((Haggfish(x) & Shark(y)) -> (IsosmoticWithSalineEnvironments(x,y) & IsosmoticWithSalineEnvironments(y)))", "score": 0}
{"id": "eqasc_validation_1134", "prediction": "(IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish)) & IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Has", "score": -1}
{"id": "eqasc_validation_1134", "prediction": "all x.((Haggfish(x) | Shark(x)) -> (IsosmoticWithSalineEnvironments(x) & IsosmoticWithSalineEnvironments(x)))", "score": 0}
{"id": "eqasc_validation_1134", "prediction": "(IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironments(Haggfish) & IsosmoticWithSalineEnvironment(Haggfish))", "score": 0}
{"id": "eqasc_validation_1134", "prediction": "all x y.((Haggfish(x) & Shark(y)) -> (IsosmoticWithSalineEnvironments(x,y) & IsosmoticWithSalineEnvironments(y,x)))", "score": 0}
{"id": "eqasc_validation_1134", "prediction": "all x y.((Haggfish(x) & Shark(y)) -> (IsosmoticWithSalineEnvironment(x,y) & IsosmoticWithSalineEnvironment(y)))", "score": 0}
{"id": "eqasc_validation_1135", "prediction": "all x.(Shark(x) -> (Vertebrate(x) & Vertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1135", "prediction": "all x.(Shark(x) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1135", "prediction": "all x y.((Shark(x) & Vertebrate(y)) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1135", "prediction": "all x.(Shark(x) -> (Vertebrate(x) & Vertebrates(x)))", "score": 0}
{"id": "eqasc_validation_1135", "prediction": "all x.(Shark(x) -> (Vertebrate(x) & Vertebrate(x) & Vertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1135", "prediction": "all x.(Shark(x) -> (Vertebrates(x) & Vertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1135", "prediction": "all x y.((Shark(x) & Vertebrate(y)) -> Vertebrate(x,y))", "score": 0}
{"id": "eqasc_validation_1135", "prediction": "all x.(Shark(x) -> (Vertebrate(x) | Vertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1135", "prediction": "all x y z.((Shark(x) & Vertebrate(y) & Vertebrate(z)) -> (Vertebrate(x) & Vertebrate(y) & Vertebrate(z)))", "score": 0}
{"id": "eqasc_validation_1135", "prediction": "all x y.((Shark(x) & Vertebrate(y)) -> (Vertebrate(x) & Vertebrate(y)))", "score": 0}
{"id": "eqasc_validation_1135", "prediction": "all x y z.((Shark(x) & Vertebrate(y) & Vertebrate(z)) -> (Vertebrate(x) & Vertebrate(y)))", "score": 0}
{"id": "eqasc_validation_1135", "prediction": "all x y z.((Shark(x) & Vertebrate(y) & Vertebrate(z)) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1135", "prediction": "all x y z.((Shark(x) & Vertebrate(y) & Vertebrate(z)) -> Vertebrate(x,y,z))", "score": 0}
{"id": "eqasc_validation_1135", "prediction": "all x y z.((Shark(x) & Vertebrate(y) & Vertebrate(z)) -> (Vertebrate(y) & Vertebrate(z)))", "score": 0}
{"id": "eqasc_validation_1136", "prediction": "all x.(Vertebrates(x) -> (Animal(x) & HasBackbone(x) & Horse(x)))", "score": 0}
{"id": "eqasc_validation_1136", "prediction": "all x.(Vertebrates(x) -> (Animal(x) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1136", "prediction": "all x.(Vertebrates(x) -> (Animal(x) & HasBackbone(x) & Horses(x)))", "score": 0}
{"id": "eqasc_validation_1136", "prediction": "all x.(Vertebrates(x) -> (Animal(x) & Backbone(x) & Horse(x)))", "score": 0}
{"id": "eqasc_validation_1136", "prediction": "all x.(Vertebrate(x) -> (Animal(x) & HasBackbone(x) & Horse(x)))", "score": 0}
{"id": "eqasc_validation_1136", "prediction": "all x.(Vertebrat(x) -> (Animal(x) & HasBackbone(x) & Horse(x)))", "score": 0}
{"id": "eqasc_validation_1136", "prediction": "all x.(Vertebrates(x) -> (Animal(x) & HasBackbones(x) & Horse(x)))", "score": 0}
{"id": "eqasc_validation_1136", "prediction": "all x.(Vertebrates(x) -> (Animal(x) & HasBackbones(x) & Horses(x)))", "score": 0}
{"id": "eqasc_validation_1136", "prediction": "all x.(Vertebrates(x) -> (Animal(x) & HasBackbone(x) & Equine(x)))", "score": 0}
{"id": "eqasc_validation_1136", "prediction": "all x.(Vertebrates(x) -> (Animal(x) & HasBackbones(x)))", "score": 0}
{"id": "eqasc_validation_1137", "prediction": "all x y.((Ancestors(x) & Hagfish(y)) -> (EarlyAnimal(x,y) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1137", "prediction": "all x y z.((AncestorsOfHagfish(x) & Hagfish(y) & Backbone(z)) -> EarlyAnimal(x,y,z))", "score": 0}
{"id": "eqasc_validation_1137", "prediction": "all x y.((Ancestor(x) & Hagfish(y)) -> (EarlyAnimal(x,y) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1137", "prediction": "all x y.((AncestorsOfHagfish(x) & Hagfish(y)) -> (EarlyAnimal(x,y) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1137", "prediction": "all x y z.((AncestorsOfHagfish(x) & Hagfish(y) & Backbone(z)) -> EarlyAnimalWithBackbone(x,y,z))", "score": 0}
{"id": "eqasc_validation_1137", "prediction": "all x y z.((Ancestors(x) & Hagfish(y) & Backbone(z)) -> EarlyAnimal(x,y,z))", "score": 0}
{"id": "eqasc_validation_1137", "prediction": "all x y.((Ancestors(x) & Hagfish(y)) -> (EarlyAnimal(x,y) & HasBackbone(x,y)))", "score": 0}
{"id": "eqasc_validation_1137", "prediction": "all x y z.((Ancestors(x) & Hagfish(y) & Backbone(z)) -> (EarlyAnimal(x,y,z) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1137", "prediction": "all x.(AncestorsOfHagfish(x) -> (EarlyAnimal(x) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1137", "prediction": "all x y z.((Ancestors(x) & Hagfish(y) & Backbone(z)) -> (EarlyAnimal(x,y) & HasBackbone(x,z)))", "score": 0}
{"id": "eqasc_validation_1137", "prediction": "all x y.((AncestorsOfHagfish(x) & Animal(y)) -> EarlyWithBackbones(x,y))", "score": 0}
{"id": "eqasc_validation_1137", "prediction": "all x y.((Ancestor(x) & Hagfish(y)) -> (EarlyAnimal(x,y) & HasBackbone(x,y)))", "score": 0}
{"id": "eqasc_validation_1137", "prediction": "all x y.((AncestorsOfHagfish(x) & Hagfish(y)) -> (EarlyAnimal(x,y) & HasBackbone(x,y)))", "score": 0}
{"id": "eqasc_validation_1137", "prediction": "all x y z.((Ancestors(x) & Hagfish(y) & Backbone(z)) -> (EarlyAnimal(x,y,z) & HasBackbone(x,y)))", "score": 0}
{"id": "eqasc_validation_1137", "prediction": "all x y.((Ancestors(x) & Hagfish(y)) -> (EarlyAnimal(x,y) & HasBackbone(y)))", "score": 0}
{"id": "eqasc_validation_1137", "prediction": "all x y z.((Ancestor(x) & Hagfish(y) & Backbone(z)) -> (EarlyAnimal(x,y,z) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1138", "prediction": "all x y.((Bone(x) & Vertebrate(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_validation_1138", "prediction": "all x y z.((Bone(x) & Vertebrate(y) & Vertebrate(z)) -> FoundIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1138", "prediction": "all x.(Bone(x) -> FoundInVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1138", "prediction": "all x y.((Bone(x) & Vertebrates(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_validation_1138", "prediction": "all x y.((Bone(x) & Vertebrate(y)) -> FoundOn(x,y))", "score": 0}
{"id": "eqasc_validation_1138", "prediction": "all x y z.((Bone(x) & Vertebrate(y) & Vertebrate(z)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_validation_1138", "prediction": "all x y z.((Bone(x) & Vertebrate(y) & Vegetable(z)) -> FoundIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1138", "prediction": "all x y z.((Bone(x) & Vertebrate(y) & Vertebrate(z)) -> FoundOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1138", "prediction": "all x y z.((Bone(x) & Vertebrate(y) & Vertebrates(z)) -> FoundIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1138", "prediction": "all x y.((Brain(x) & Vertebrate(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_validation_1138", "prediction": "all x y z.((Bone(x) & Vertebrates(y) & Vertebrate(z)) -> FoundIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1138", "prediction": "all x y.((Vertebrate(x) & Vertebrate(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_validation_1138", "prediction": "all x.(Bone(x) -> FoundInVertebrates(x))", "score": 0}
{"id": "eqasc_validation_1138", "prediction": "all x.((Bone(x) & Vertebrate(x)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_validation_1138", "prediction": "all x.(Bone(x) -> (Vertebrate(x) | Vertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1138", "prediction": "all x.(Bone(x) -> FoundIn(x,Vertebrate))", "score": 0}
{"id": "eqasc_validation_1139", "prediction": "all x.(HasEarlyBones(x) -> AncestorsOfHagfish(x))", "score": 0}
{"id": "eqasc_validation_1139", "prediction": "all x.(HasOldBones(x) -> AncestorsOfHagfish(x))", "score": 0}
{"id": "eqasc_validation_1139", "prediction": "all x.(HasEarliestBones(x) -> AncestorsOfHagfish(x))", "score": 0}
{"id": "eqasc_validation_1139", "prediction": "all x.((AncestorsOfHagfish(x) & HasOldBones(x)) -> HasOldBones(x))", "score": 0}
{"id": "eqasc_validation_1139", "prediction": "all x y.((Ancestors(x) & Hagfish(y)) -> HasEarliestBones(x,y))", "score": 0}
{"id": "eqasc_validation_1139", "prediction": "all x y.((Ancestors(x) & Hagfish(y)) -> HasOldestBones(x,y))", "score": 0}
{"id": "eqasc_validation_1139", "prediction": "all x y.((Ancestors(x) & Hagfish(y)) -> HasOldBones(x,y))", "score": 0}
{"id": "eqasc_validation_1139", "prediction": "all x y.((Ancestors(x) & Hagfish(y)) -> HasOfficialBones(x,y))", "score": 0}
{"id": "eqasc_validation_1139", "prediction": "all x.((AcestorsOfHagfish(x) & HasOldBones(x)) -> HasOldBones(x))", "score": 0}
{"id": "eqasc_validation_1139", "prediction": "all x.(HagfishAncestors(x) -> HasOldestBones(x))", "score": 0}
{"id": "eqasc_validation_1139", "prediction": "all x y.((Acestors(x) & Hagfish(y)) -> HasEarliestBones(x,y))", "score": 0}
{"id": "eqasc_validation_1139", "prediction": "all x.((Ancestor(x) & Hagfish(x)) -> HasOldestBones(x))", "score": 0}
{"id": "eqasc_validation_1139", "prediction": "all x.(HaggfishAncestors(x) -> HasOldestBones(x))", "score": 0}
{"id": "eqasc_validation_1139", "prediction": "all x.((Ancestors(x) & Hagfish(x)) -> HasOldestBones(x))", "score": 0}
{"id": "eqasc_validation_1139", "prediction": "all x y.((Acestors(x) & Hagfish(y)) -> HasOldBones(x,y))", "score": 0}
{"id": "eqasc_validation_1139", "prediction": "all x.((AncestorsOfHagfish(x) & HasOldBones(x)) -> HasOfficialBones(x))", "score": 0}
{"id": "eqasc_validation_1140", "prediction": "all x y z.((AncestorsOfHagfish(x) & Hagfish(y) & Bones(z)) -> EarlyCreatureWithBones(x,y,z))", "score": 0}
{"id": "eqasc_validation_1140", "prediction": "all x y.((AncestorsOfHagfish(x) & Hagfish(y)) -> EarlyCreatureWithBones(x,y))", "score": 0}
{"id": "eqasc_validation_1140", "prediction": "all x.(AncestorsOfHagfish(x) -> EarlyCreatureWithBones(x))", "score": 0}
{"id": "eqasc_validation_1140", "prediction": "all x y z.((Ancestors(x) & Hagfish(y) & Bones(z)) -> EarlyCreatureWithBones(x,y,z))", "score": 0}
{"id": "eqasc_validation_1140", "prediction": "all x y z.((AncestorsOfHagfish(x) & Hagfish(y) & Bone(z)) -> EarlyCreatureWithBones(x,y,z))", "score": 0}
{"id": "eqasc_validation_1140", "prediction": "all x y.((Ancestors(x) & Hagfish(y)) -> (EarlyCreature(x,y) & HasBones(x)))", "score": 0}
{"id": "eqasc_validation_1140", "prediction": "all x y z.((AncestorsOfHagfish(x) & Hagfish(y) & Bones(z)) -> EarlyCreaturesWithBones(x,y,z))", "score": 0}
{"id": "eqasc_validation_1140", "prediction": "all x y.((Ancestor(x) & Hagfish(y)) -> (EarlyCreature(x,y) & HasBones(x)))", "score": 0}
{"id": "eqasc_validation_1140", "prediction": "all x y.((AncestorsOfHagfish(x) & Hagfish(y)) -> (EarlyCreatureWithBones(x,y) & HasBones(x,y)))", "score": 0}
{"id": "eqasc_validation_1140", "prediction": "all x y.((Ancestors(x) & Hagfish(y)) -> (EarlyCreatureWithBones(x,y) & HasBones(x,y)))", "score": 0}
{"id": "eqasc_validation_1140", "prediction": "all x y z.((AncestorsOfHagfish(x) & Hagfish(y) & Bones(z)) -> EarlyCreature(x,y,z))", "score": 0}
{"id": "eqasc_validation_1140", "prediction": "all x y.((Ancestor(x) & Hagfish(y)) -> (EarlyCreatureWithBones(x,y) & HasBones(x,y)))", "score": 0}
{"id": "eqasc_validation_1140", "prediction": "all x y z.((Ancestor(x) & Hagfish(y) & Bones(z)) -> EarlyCreatureWithBones(x,y,z))", "score": 0}
{"id": "eqasc_validation_1140", "prediction": "all x y z.((Ancestors(x) & Hagfish(y) & Bones(z)) -> (EarlyCreature(x,y,z) & HasBones(x)))", "score": 0}
{"id": "eqasc_validation_1140", "prediction": "all x y.((Ancestors(x) & Hagfish(y)) -> (EarlyCreature(x,y) & HasBones(x,y)))", "score": 0}
{"id": "eqasc_validation_1140", "prediction": "all x.((Ancestor(x) & Hagfish(x)) -> EarlyCreatureWithBones(x))", "score": 0}
{"id": "eqasc_validation_1141", "prediction": "all x.(Vertebrates(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_validation_1141", "prediction": "all x.(Vertebrates(x) -> HasBackbones(x))", "score": 0}
{"id": "eqasc_validation_1141", "prediction": "all x.(Vertebrates(x) -> (Animal(x) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1141", "prediction": "all x.(Vertebrat(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_validation_1141", "prediction": "all x.(Vertebrat(x) -> (Animal(x) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1141", "prediction": "all x.(Vertebrates(x) -> Animal(x))", "score": 0}
{"id": "eqasc_validation_1141", "prediction": "all x.(Vertebrat(x) -> HasBackbones(x))", "score": 0}
{"id": "eqasc_validation_1141", "prediction": "all x.(Vertebrate(x) -> (Animal(x) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1141", "prediction": "all x.(Vertebrate(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_validation_1141", "prediction": "all x.(Vertebrates(x) -> (Animal(x) & HasBackbones(x)))", "score": 0}
{"id": "eqasc_validation_1141", "prediction": "all x.(Vertebrat(x) -> Animal(x))", "score": 0}
{"id": "eqasc_validation_1142", "prediction": "all x.(HagfishAncestors(x) -> EarlyAnimalWithBackbones(x))", "score": 0}
{"id": "eqasc_validation_1142", "prediction": "all x.(HasBackbone(x) -> AncestorsOfHagfish(x))", "score": 0}
{"id": "eqasc_validation_1142", "prediction": "all x.((AncestorsOfHagfish(x) & HasBackbone(x)) -> earliestAnimalWithBackbone(x))", "score": 0}
{"id": "eqasc_validation_1142", "prediction": "all x.((Ancestor(x) & Hagfish(x)) -> EarlyAnimalWithBackbones(x))", "score": 0}
{"id": "eqasc_validation_1142", "prediction": "all x.((AncestorsOfHagfish(x) & HasBackbone(x)) -> EarlyAnimal(x))", "score": 0}
{"id": "eqasc_validation_1142", "prediction": "all x.(AncestorsOfHagfish(x) -> EarlyAnimalWithBackbones(x))", "score": 0}
{"id": "eqasc_validation_1142", "prediction": "all x.((AncestorsOfHagfish(x) & HasBackbone(x)) -> EarlyAnimalWithBackbone(x))", "score": 0}
{"id": "eqasc_validation_1142", "prediction": "all x y.((Ancestors(x) & Hagfish(y)) -> (EarlyAnimal(x,y) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1142", "prediction": "all x.((AncestorsOfHagfish(x) & HasBackbones(x)) -> EarlyAnimal(x))", "score": 0}
{"id": "eqasc_validation_1142", "prediction": "all x.((AncestorsOfHagfish(x) & HasBackbone(x)) -> earliestAnimal(x))", "score": 0}
{"id": "eqasc_validation_1142", "prediction": "all x y.((Ancestors(x) & Hagfish(y)) -> EarlyAnimalWithBackbones(x,y))", "score": 0}
{"id": "eqasc_validation_1142", "prediction": "all x y.((Hagfish(x) & Ancestors(x,y)) -> EarlyAnimalWithBackbones(x))", "score": 0}
{"id": "eqasc_validation_1142", "prediction": "all x.(Hagfish(x) -> EarlyAnimalWithBackbones(x))", "score": 0}
{"id": "eqasc_validation_1142", "prediction": "all x.((AncestorsOfHagfish(x) & HasBackbones(x)) -> earliestAnimal(x))", "score": 0}
{"id": "eqasc_validation_1142", "prediction": "all x.((AncestorsOfHagfish(x) & HasBackbones(x)) -> earliestAnimalWithBackbone(x))", "score": 0}
{"id": "eqasc_validation_1142", "prediction": "all x.(HagfishAncestors(x) -> EarlyAnimal(x))", "score": 0}
{"id": "eqasc_validation_1143", "prediction": "all x y.((Ancestors(x) & Forefathers(y)) -> CanLegallyEarnedBySons(x,y))", "score": 0}
{"id": "eqasc_validation_1143", "prediction": "all x y.((Ancestors(x) & Forefathers(y)) -> LegallyEarnedBySons(x,y))", "score": 0}
{"id": "eqasc_validation_1143", "prediction": "all x y.((Ancestors(x) & Forefathers(y)) -> (LegallyEarnedBySons(x,y)))", "score": 0}
{"id": "eqasc_validation_1143", "prediction": "all x y.((Ancient(x) & Forefather(y)) -> (LegallyEarnedBySons(x,y) | LegallyEarnedBySons(x,y)))", "score": 0}
{"id": "eqasc_validation_1143", "prediction": "all x y.((Ancestors(x) & Forefathers(y)) -> (LegallyEarnedBySons(x,y) | LegallyEarnedBySons(x,y)))", "score": 0}
{"id": "eqasc_validation_1143", "prediction": "all x y.((Ancient(x) & Forefather(y)) -> (LegallyEarnedBySons(x,y)))", "score": 0}
{"id": "eqasc_validation_1143", "prediction": "all x y.((Ancestors(x) & Forefathers(y)) -> (LegallyEarnedBySons(x)))", "score": 0}
{"id": "eqasc_validation_1143", "prediction": "all x y z.((Ancestors(x) & Forefathers(y) & Sons(z)) -> CanLegallyHaveProperty(x,y,z))", "score": 0}
{"id": "eqasc_validation_1143", "prediction": "all x.((Property(x) & (Ancient(x) | Forefather(x))) -> CanBeLegallyEarnedBySons(x))", "score": 0}
{"id": "eqasc_validation_1143", "prediction": "all x y.((Ancient(x) & Forefather(y)) -> (LegallyEarnedBySons(x)))", "score": 0}
{"id": "eqasc_validation_1143", "prediction": "all x y z.((Ancient(x) & Forefather(y) & Son(z)) -> (LegallyEarnedBy(z,x) | LegallyEarnedBy(z,y)))", "score": 0}
{"id": "eqasc_validation_1143", "prediction": "all x y.((Ancestors(x) & Forefathers(y)) -> LegallyEarnedBySons(x))", "score": 0}
{"id": "eqasc_validation_1143", "prediction": "all x y z.((Ancient(x) & Forefather(y) & Son(z)) -> (LegallyEarnedBy(z,x) | LegallyEarnedBy(z,x)))", "score": 0}
{"id": "eqasc_validation_1143", "prediction": "all x y z.((Ancient(x) & Forefather(y) & Son(z)) -> (LegallyEarnedBy(x,y,z) | LegallyEarnedBy(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1143", "prediction": "all x y z.((Ancient(x) & Forefather(y) & Son(z)) -> (LegallyEarnedBy(x,y,z) | LegallyEarnedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1143", "prediction": "all x y.((Ancestors(x) & Forefathers(y)) -> CanLegallyEarnedBySons(x))", "score": 0}
{"id": "eqasc_validation_1144", "prediction": "all x.((Forefather(x) & Hagfish(x)) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1144", "prediction": "all x.((Forefather(x) & Hagfish(x)) -> earliestVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1144", "prediction": "all x y.((Forefather(x) & Hagfish(y)) -> EarlyVertebrate(x,y))", "score": 0}
{"id": "eqasc_validation_1144", "prediction": "all x.(HagfishForefather(x) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1144", "prediction": "all x.(HagfishForefather(x) -> earliestVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1144", "prediction": "all x.((Forefather(x) & Hagfish(x)) -> FrühestVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1144", "prediction": "all x.(HagfishForefather(x) -> FrühestVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1144", "prediction": "all x y.((Forefather(x) & Hagfish(y)) -> earliestVertebrate(x,y))", "score": 0}
{"id": "eqasc_validation_1144", "prediction": "all x y.((Forefather(x) & Hagfish(y)) -> EarlyVertebrates(x,y))", "score": 0}
{"id": "eqasc_validation_1144", "prediction": "all x y.((Forefather(x) & Hagfish(y)) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1144", "prediction": "all x.((Forefather(x) & Hagfish(x)) -> EarlyVertebrates(x))", "score": 0}
{"id": "eqasc_validation_1144", "prediction": "all x y.((Forefather(x) & Hagfish(y)) -> FrühestVertebrate(x,y))", "score": 0}
{"id": "eqasc_validation_1144", "prediction": "all x.(Forefather(x) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1144", "prediction": "all x.(HaggfishForefather(x) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1144", "prediction": "all x.(HaggfishForefather(x) -> earliestVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1144", "prediction": "all x.((Forefather(x) & Hagfish(x)) -> earliestVertebrates(x))", "score": 0}
{"id": "eqasc_validation_1145", "prediction": "all x.(Haggfish(x) -> (JawlessFish(x) & ParasiticVertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1145", "prediction": "all x.(Hagfish(x) -> (JawlessFish(x) & ParasiticVertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1145", "prediction": "all x.(Haffish(x) -> (JawlessFish(x) & ParasiticVertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1145", "prediction": "all x.(Haggfish(x) -> (JawlessFish(x) & ParasiticalVertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1145", "prediction": "all x.(Haggfish(x) -> (Jawless(x) & ParasiticVertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1145", "prediction": "all x.(Haggfish(x) -> (JawlessFish(x) & ParasitedVertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1145", "prediction": "all x.(Haggfish(x) -> (JawlessFish(x) & ParasiticVertebrates(x)))", "score": 0}
{"id": "eqasc_validation_1145", "prediction": "all x.(Haggfish(x) -> (JawlessFish(x) & OnlyParasiticVertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1145", "prediction": "all x.(Haggfish(x) -> (Jawless(x) & Parasitic(x)))", "score": 0}
{"id": "eqasc_validation_1145", "prediction": "all x.(Hagfish(x) -> (JawlessFish(x) & ParasiticalVertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1146", "prediction": "all x y.((Acestors(x) & JawlessFish(y) & Parasitic(y)) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1146", "prediction": "all x y.((Ancestor(x) & JawlessFish(y) & Parasitic(y)) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1146", "prediction": "all x y z.((Acestors(x) & JawlessFish(y) & Parasitic(z) & JawlessFish(y) & Parasitic(z)) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1146", "prediction": "all x y.((Acestors(x) & JawlessFish(y) & Parasitic(y)) -> EarlyVertebrate(x,y))", "score": 0}
{"id": "eqasc_validation_1146", "prediction": "all x y.((Ancestor(x) & JawlessFish(y) & Parasitic(y)) -> EarlyVertebrate(x,y))", "score": 0}
{"id": "eqasc_validation_1146", "prediction": "all x y z.((Ancestor(x) & JawlessFish(y) & Parasitic(z) & JawlessFish(y) & Parasitic(z)) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1146", "prediction": "all x y.((Ancestors(x) & JawlessFish(y) & Parasitic(y)) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1146", "prediction": "all x.((Acestors(x) & JawlessFish(x) & Parasitic(x)) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1146", "prediction": "all x y z.((Acestors(x) & JawlessFish(y) & Parasitic(z) & JawlessFish(y) & Parasitical(z)) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1146", "prediction": "all x y z.((Ancestors(x) & JawlessFish(y) & Parasitic(z) & JawlessFish(y) & Parasitic(z)) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1147", "prediction": "all x.(HasBackbones(x) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1147", "prediction": "all x.((Animal(x) & HasBackbones(x)) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1147", "prediction": "all x.((Animal(x) & HasBackbone(x)) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1147", "prediction": "all x.(HasBackbone(x) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1147", "prediction": "all x.(Animal(x) & HasBackbones(x)) -> Vertebrate(x))", "score": -1}
{"id": "eqasc_validation_1147", "prediction": "all x.((Animal(x) & Backbones(x)) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1147", "prediction": "all x.((Animal(x) & Backbone(x)) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1147", "prediction": "all x.(Backbones(x) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1147", "prediction": "all x.(Backbone(x) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1147", "prediction": "all x y.((Animal(x) & HasBackbones(x)) -> Vertebrate(y))", "score": 0}
{"id": "eqasc_validation_1147", "prediction": "all x y.((Animal(x) & HasBackbones(x)) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1147", "prediction": "all x y.((Animal(x) & HasBackbones(x,y)) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1147", "prediction": "all x.(HeadsBackbones(x) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1147", "prediction": "all x.((Animal(x) & HasBackbones(x)) -> Vertebrates(x))", "score": 0}
{"id": "eqasc_validation_1147", "prediction": "all x.(HisBackbones(x) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1147", "prediction": "all x.(HisBackbone(x) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1148", "prediction": "all x.(Hagfish(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_validation_1148", "prediction": "all x y.((Hagfish(x) & Backbone(y)) -> HasBackbone(x,y))", "score": 0}
{"id": "eqasc_validation_1148", "prediction": "all x y z.((Hagfish(x) & Backbone(y) & Backbone(z)) -> HasBackbone(x,y,z))", "score": 0}
{"id": "eqasc_validation_1148", "prediction": "all x.(Hagfish(x) -> (HasBackbone(x) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1148", "prediction": "all x y z.((Hagfish(x) & Backbone(y) & Backbone(z)) -> HasBackbone(x,y))", "score": 0}
{"id": "eqasc_validation_1148", "prediction": "all x.(Hagafish(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_validation_1148", "prediction": "all x y z.((Hagfish(x) & Backbone(y) & Backbone(z)) -> HasBackbone(x,z))", "score": 0}
{"id": "eqasc_validation_1148", "prediction": "all x y z.((Hagfish(x) & Backbone(y) & Backbone(z)) -> Has(x,y,z))", "score": 0}
{"id": "eqasc_validation_1148", "prediction": "all x y z.((Hagfish(x) & Backbone(y) & Backbone(z) & HasBackbone(x,y)) -> HasBackbone(x,z))", "score": 0}
{"id": "eqasc_validation_1148", "prediction": "all x.((Hagfish(x) & HasBackbone(x)) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_validation_1148", "prediction": "all x y.((Hagfish(x) & Backbone(y) & HasBackbone(x,y)) -> HasBackbone(x,y))", "score": 0}
{"id": "eqasc_validation_1148", "prediction": "all x y.((Hagfish(x) & Backbone(y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_1148", "prediction": "all x y z.((Hagfish(x) & Backbone(y) & Backbone(z)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_1148", "prediction": "all x y z.((Hagfish(x) & Backbone(y) & Backbone(z) & Has(x,y)) -> HasBackbone(x,z))", "score": 0}
{"id": "eqasc_validation_1148", "prediction": "all x.(Haggfish(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_validation_1149", "prediction": "all x.(AquaticOrganism(x) -> (-ExtremeTemperature(x) | ExtremeMoisture(x)))", "score": 5}
{"id": "eqasc_validation_1149", "prediction": "all x.((AquaticOrganism(x) & -ExtremeTemperature(x) & -ExtremeMoisture(x)) -> -ExtremeMoisture(x))", "score": 0}
{"id": "eqasc_validation_1149", "prediction": "all x.(AquaticOrganism(x) -> -(ExtremeTemperature(x) | ExtremeMoisture(x)))", "score": 15}
{"id": "eqasc_validation_1149", "prediction": "all x.(AquaticOrganism(x) -> -(ExtremeTemperature(x) | ExtremeMoisture(x))))", "score": -1}
{"id": "eqasc_validation_1149", "prediction": "all x.(AquaticOrganism(x) -> -ExtremeTemperatureOrMoisture(x))", "score": 2}
{"id": "eqasc_validation_1149", "prediction": "all x.(AquaticOrganism(x) -> (-ExtremeTemperature(x) & -ExtremeMoisture(x)))", "score": 15}
{"id": "eqasc_validation_1149", "prediction": "all x.(AquaticOrganism(x) -> -ExtremeTemperature(x) & -ExtremeMoisture(x))", "score": 15}
{"id": "eqasc_validation_1149", "prediction": "all x.((AquaticOrganism(x) & -(ExtremeTemperature(x) | ExtremeMoisture(x))) -> -ExtremeMoisture(x))", "score": 0}
{"id": "eqasc_validation_1149", "prediction": "all x.(AquaticOrganism(x) -> (-ExtremeTemperature(x) | -ExtremeMoisture(x)))", "score": 0}
{"id": "eqasc_validation_1149", "prediction": "all x.((AquaticOrganism(x) & -ExtremeTemperature(x) & -ExtremeMoisture(x)) -> -ExtremeTemperature(x))", "score": 0}
{"id": "eqasc_validation_1149", "prediction": "all x.((AquaticOrganism(x) & -(ExtremeTemperature(x) | ExtremeMoisture(x)))) -> -ExtremeMoisture(x))", "score": -1}
{"id": "eqasc_validation_1149", "prediction": "all x.((AquaticOrganism(x) & -ExtremeTemperatureOrMoisture(x)) -> -ExtremeMoisture(x))", "score": 0}
{"id": "eqasc_validation_1149", "prediction": "all x.(AquaticOrganism(x) -> (-(ExtremeTemperature(x) | ExtremeMoisture(x))))", "score": 15}
{"id": "eqasc_validation_1149", "prediction": "all x.((AquaticOrganism(x) & -ExtremeTemperatureOrMoisture(x)) -> -ExtremeTemperatureOrMoisture(x))", "score": 0}
{"id": "eqasc_validation_1150", "prediction": "all x.(Fish(x) -> UltimateAquaticOrganism(x))", "score": 0}
{"id": "eqasc_validation_1150", "prediction": "all x y.((Fish(x) & AquaticOrganism(y)) -> Ultimate(x,y))", "score": 0}
{"id": "eqasc_validation_1150", "prediction": "all x.(Fish(x) -> AquaticOrganism(x))", "score": 67}
{"id": "eqasc_validation_1150", "prediction": "all x.(Fish(x) -> EnduranceAquaticOrganism(x))", "score": 0}
{"id": "eqasc_validation_1150", "prediction": "All x.(Fish(x) -> UltimateAquaticOrganism(x))", "score": -1}
{"id": "eqasc_validation_1150", "prediction": "all x.((Fish(x) & UltimateAquaticOrganism(x)) -> Fish(x))", "score": 0}
{"id": "eqasc_validation_1150", "prediction": "all x.((Fish(x) & AquaticOrganism(x)) -> Ultimate(x))", "score": 0}
{"id": "eqasc_validation_1150", "prediction": "all x y.((Fish(x) & AquaticOrganism(y)) -> Ultimate(x))", "score": 0}
{"id": "eqasc_validation_1150", "prediction": "all x.(Fish(x) -> (UltimateAquaticOrganism(x) & Fish(x)))", "score": 0}
{"id": "eqasc_validation_1150", "prediction": "all x.(Fish(x) -> TheUpperAquaticOrganism(x))", "score": 0}
{"id": "eqasc_validation_1150", "prediction": "all x.((Fish(x) & UltimateAquaticOrganism(x)) -> FishFish(x))", "score": 0}
{"id": "eqasc_validation_1150", "prediction": "all x y.((Fish(x) & AquaticOrganism(y)) -> Endurance(x,y))", "score": 0}
{"id": "eqasc_validation_1150", "prediction": "all x.(Fish(x) -> UltimatumAquaticOrganism(x))", "score": 0}
{"id": "eqasc_validation_1150", "prediction": "all x.(FishFish(x) -> UltimateAquaticOrganism(x))", "score": 0}
{"id": "eqasc_validation_1151", "prediction": "all x.(Fish(x) -> (-ExtremeTemperature(x) | ExtremeMoisture(x)))", "score": 10}
{"id": "eqasc_validation_1151", "prediction": "all x.(Fish(x) -> -(ExtremeTemperature(x) | ExtremeMoisture(x)))", "score": 8}
{"id": "eqasc_validation_1151", "prediction": "all x.((Fish(x) & -ExtremeTemperature(x) & -ExtremeMoisture(x)) -> -ExtremeMoisture(x))", "score": 0}
{"id": "eqasc_validation_1151", "prediction": "all x.(Fish(x) -> -(ExtremeTemperature(x) | ExtremeMoisture(x))))", "score": -1}
{"id": "eqasc_validation_1151", "prediction": "all x y.((Fish(x) & (ExtremeTemperature(y) | ExtremeMoisture(y))) -> -(ExtremeTemperature(x,y) | ExtremeMoisture(x,y))))", "score": -1}
{"id": "eqasc_validation_1151", "prediction": "all x.(Fish(x) -> (-ExtremeTemperature(x) | ExtremeMoisture(x)) & -ExtremeTemperature(x) & -ExtremeMoisture(x)))", "score": -1}
{"id": "eqasc_validation_1151", "prediction": "all x.(Fish(x) -> (-ExtremeTemperatureOrMoisture(x) & -ExtremeMoisture(x)))", "score": 0}
{"id": "eqasc_validation_1151", "prediction": "all x.(Fish(x) -> (-(ExtremeTemperature(x) | ExtremeMoisture(x))) & -(ExtremeTemperature(x) | ExtremeMoisture(x))))", "score": -1}
{"id": "eqasc_validation_1151", "prediction": "all x.(Fish(x) -> (-ExtremeTemperatureOrMoisture(x) & -ExtremeMoisture(x) & -ExtremeMoisture(x)))", "score": 0}
{"id": "eqasc_validation_1151", "prediction": "all x.(Fish(x) -> -(ExtremeTemperature(x) | ExtremeMoisture(x)) & -(ExtremeTemperature(x) | ExtremeMoisture(x))))", "score": -1}
{"id": "eqasc_validation_1151", "prediction": "all x.(Fish(x) -> (-(ExtremeTemperature(x) | ExtremeMoisture(x)) & -(ExtremeTemperature(x) | ExtremeMoisture(x)))))", "score": -1}
{"id": "eqasc_validation_1151", "prediction": "all x.((Fish(x) & -(ExtremeTemperature(x) | ExtremeMoisture(x)))) -> -(ExtremeTemperature(x) | ExtremeMoisture(x))))", "score": -1}
{"id": "eqasc_validation_1151", "prediction": "all x.(Fish(x) -> (-ExtremeTemperatureOrMoisture(x) & -ExtremeMoisture(x) & -ExtremeMoisture(x) & -ExtremeMoisture(x)))", "score": 0}
{"id": "eqasc_validation_1151", "prediction": "all x.((Fish(x) & -(ExtremeTemperature(x) | ExtremeMoisture(x)))) -> -(ExtremeTemperature(x) | ExtremeMoisture(x)))", "score": -1}
{"id": "eqasc_validation_1151", "prediction": "all x y.((Fish(x) & (ExtremeTemperature(y) | ExtremeMoisture(y))) -> -HasExtremeTemperatureOrMoisture(x,y))", "score": 0}
{"id": "eqasc_validation_1151", "prediction": "all x y.((Fish(x) & (ExtremeTemperature(y) | ExtremeMoisture(y))) -> -(ExtremeTemperature(y) | ExtremeMoisture(y))))", "score": -1}
{"id": "eqasc_validation_1152", "prediction": "all x.(Fish(x) -> (-ExtremeTemperature(x) | ExtremeMoisture(x)))", "score": 10}
{"id": "eqasc_validation_1152", "prediction": "all x.(Fish(x) -> -(ExtremeTemperature(x) | ExtremeMoisture(x)))", "score": 8}
{"id": "eqasc_validation_1152", "prediction": "all x.(Fish(x) -> (-ExtremeTemperature(x) & -ExtremeMoisture(x)))", "score": 8}
{"id": "eqasc_validation_1152", "prediction": "all x.(Fish(x) -> -(ExtremeTemperature(x) | ExtremeMoisture(x))))", "score": -1}
{"id": "eqasc_validation_1152", "prediction": "all x.((Fish(x) & -ExtremeTemperature(x) & -ExtremeMoisture(x)) -> -ExtremeMoisture(x))", "score": 0}
{"id": "eqasc_validation_1152", "prediction": "all x.(Fish(x) -> -ExtremeTemperatureOrMoisture(x))", "score": 2}
{"id": "eqasc_validation_1152", "prediction": "all x.(Fish(x) -> (-exists y.(ExtremeTemperature(y) | ExtremeMoisture(y)) & -exists z.(ExtremeTemperature(z) & ExtremeMoisture(z)) & -exists w.(ExtremeMoisture(w) & ExtremeMoisture(w) & ExtremeMoisture(w))))", "score": 0}
{"id": "eqasc_validation_1152", "prediction": "all x.(Fish(x) -> (-exists y.(ExtremeTemperature(y) | ExtremeMoisture(y))) & -exists z.(ExtremeTemperature(z) & ExtremeMoisture(z)) & -exists w.(ExtremeMoisture(w) & ExtremeMoisture(w) & ExtremeMoisture(w))))", "score": -1}
{"id": "eqasc_validation_1152", "prediction": "all x.(Fish(x) -> (-exists y.(ExtremeTemperature(y) | ExtremeMoisture(y)) & -exists z.(ExtremeTemperature(z) & ExtremeMoisture(z)) & -exists w.(ExtremeMoisture(w) & ExtremeMoisture(w)))))", "score": -1}
{"id": "eqasc_validation_1152", "prediction": "all x.(Fish(x) -> -exists y.(ExtremeTemperature(y) | ExtremeMoisture(y)) & -exists z.(ExtremeTemperature(z) & ExtremeMoisture(z)) & -exists w.(ExtremeMoisture(w) & ExtremeMoisture(w) & ExtremeMoisture(w))))", "score": -1}
{"id": "eqasc_validation_1152", "prediction": "all x.(Fish(x) -> (-exists y.(ExtremeTemperature(y) | ExtremeMoisture(y)) & -exists z.(ExtremeTemperature(z) & ExtremeMoisture(z)))))", "score": -1}
{"id": "eqasc_validation_1152", "prediction": "all x.(Fish(x) -> (-exists y.(ExtremeTemperature(y) | ExtremeMoisture(y)) & -exists z.(ExtremeTemperature(z) & ExtremeMoisture(z)) & -exists w.(ExtremeMoisture(w) & -exists w.(ExtremeMoisture(w) & ExtremeMoisture(x,w)))))", "score": 0}
{"id": "eqasc_validation_1152", "prediction": "all x.(Fish(x) -> (-(ExtremeTemperature(x) | ExtremeMoisture(x))))", "score": 8}
{"id": "eqasc_validation_1152", "prediction": "all x.(Fish(x) -> (-exists y.(ExtremeTemperature(y) | ExtremeMoisture(y)) & -exists z.(ExtremeTemperature(z) & -exists w.(ExtremeMoisture(w) & -exists w.(ExtremeMoisture(w) & -exists w.(ExtremeMoisture(x,w))))))", "score": -1}
{"id": "eqasc_validation_1152", "prediction": "all x.(Fish(x) -> (-exists y.(ExtremeTemperature(y) | ExtremeMoisture(y)) & -exists z.(ExtremeTemperature(z) & ExtremeMoisture(z)) & -exists w.(ExtremeMoisture(w) & ExtremeMoisture(w)) & ExtremeMoisture(w))))", "score": -1}
{"id": "eqasc_validation_1153", "prediction": "all x y.((Triallate(x) & AquaticOrganism(y)) -> HighlyToxicTo(x,y))", "score": 0}
{"id": "eqasc_validation_1153", "prediction": "all x.(Triallate(x) -> (ToxicToFish(x) & ToOtherAquaticOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_1153", "prediction": "all x.(Triallate(x) -> (HighlyToxicToFish(x) & HighlyToxicToAquaticOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_1153", "prediction": "all x y z.((Triallate(x) & AquaticOrganism(y) & Fish(z)) -> HighlyToxic(x,y,z))", "score": 0}
{"id": "eqasc_validation_1153", "prediction": "all x.(Triallate(x) -> (ToxicToFish(x) | ToxicToAquaticOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_1153", "prediction": "all x y.((Triallate(x) & AquaticOrganism(y)) -> ToxicTo(x,y))", "score": 0}
{"id": "eqasc_validation_1153", "prediction": "All x y.((Triallate(x) & AquaticOrganism(y)) -> HighlyToxicTo(x,y))", "score": -1}
{"id": "eqasc_validation_1153", "prediction": "all x y z.((Triallate(x) & AquaticOrganism(y) & Fish(z)) -> HighlyToxicTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_1153", "prediction": "all x y z.((Triallate(x) & AquaticOrganism(y) & Fish(z)) -> ToxicTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_1153", "prediction": "all x.(Triallate(x) -> HighlyToxicToFishAndAquaticOrganisms(x))", "score": 0}
{"id": "eqasc_validation_1153", "prediction": "all x y.((Triallate(x) & AquaticOrganism(y)) -> (ToxicTo(x,y) & To(x,y)))", "score": 0}
{"id": "eqasc_validation_1154", "prediction": "all x.(Moisturizing(x) -> (ExtremelyImportant(x) & MoisturizingSkin(x)))", "score": 0}
{"id": "eqasc_validation_1154", "prediction": "all x.(Moisturizing(x) -> (ExtremelyImportant(x) & Moisturizing(x)))", "score": 0}
{"id": "eqasc_validation_1154", "prediction": "all x.(Moisturizing(x) -> (ExtremelyImportant(x) & MoisturizesSkin(x)))", "score": 0}
{"id": "eqasc_validation_1154", "prediction": "all x y.((Moisturizing(x) & Skin(y)) -> ExtremelyImportant(x,y))", "score": 0}
{"id": "eqasc_validation_1154", "prediction": "all x y.((Moisturizing(x) & Skin(y)) -> (ExtremelyImportant(x,y) & Moisturizing(x,y)))", "score": 0}
{"id": "eqasc_validation_1154", "prediction": "all x.((Moisturizing(x) & Skin(x)) -> ExtremelyImportant(x))", "score": 0}
{"id": "eqasc_validation_1154", "prediction": "all x.((Moisturizing(x) & Skin(y)) -> ExtremelyImportant(x,y))", "score": 0}
{"id": "eqasc_validation_1154", "prediction": "all x.(Moisturizing(x) -> (MoisturizingSkin(x) & ExtremelyImportant(x)))", "score": 0}
{"id": "eqasc_validation_1154", "prediction": "all x.(Moisturizing(x) -> (ExtremelyImportant(x) & Moisturizing(x) & Skin(x)))", "score": 0}
{"id": "eqasc_validation_1154", "prediction": "all x.((Moisturizing(x) & Skin(y)) -> ExtremelyImportant(x))", "score": 0}
{"id": "eqasc_validation_1154", "prediction": "all x y.((Moisturizing(x) & Skin(y)) -> (ExtremelyImportant(x,y)))", "score": 0}
{"id": "eqasc_validation_1154", "prediction": "all x.(Moisturizing(x) -> (MoisturizingSkin(x) & -MoisturizingSkin(x)))", "score": 0}
{"id": "eqasc_validation_1154", "prediction": "all x.((Skin(x) & Moisturizing(x)) -> ExtremelyImportant(x))", "score": 0}
{"id": "eqasc_validation_1154", "prediction": "all x.(Moisturizing(x) -> (ExtremelyImportant(x) & MoisturizeSkin(x)))", "score": 0}
{"id": "eqasc_validation_1154", "prediction": "all x.(Moisturizing(x) -> (IsExtremelyImportant(x) & MoisturizesSkin(x)))", "score": 0}
{"id": "eqasc_validation_1155", "prediction": "all x.(AquaticOrganism(x) -> -MoisturizeSkin(x))", "score": 0}
{"id": "eqasc_validation_1155", "prediction": "all x.((AquaticOrganism(x) & -MoisturizeSkin(x)) -> -MoisturizeSkin(x))", "score": 0}
{"id": "eqasc_validation_1155", "prediction": "all x.(AquaticOrganism(x) -> -HasToMoisturizeSkin(x))", "score": 0}
{"id": "eqasc_validation_1155", "prediction": "all x y.((AquaticOrganism(x) & AquaticOrganism(y)) -> -MoisturizeSkin(x,y))", "score": 0}
{"id": "eqasc_validation_1155", "prediction": "all x y.((AquaticOrganism(x) & AquaticOrganism(y)) -> -HasToMoisturizeSkin(x,y))", "score": 0}
{"id": "eqasc_validation_1155", "prediction": "all x.((AquaticOrganism(x) & -HasToMoisturizeSkin(x)) -> -HasToMoisturizeSkin(x))", "score": 0}
{"id": "eqasc_validation_1155", "prediction": "all x.(AquaticOrganism(x) -> -HasToMoistureSkin(x))", "score": 0}
{"id": "eqasc_validation_1155", "prediction": "all x.(AquaticOrganism(x) -> -MoisturizesSkin(x))", "score": 0}
{"id": "eqasc_validation_1155", "prediction": "all x y.((AquaticOrganism(x) & AquaticOrganism(y)) -> -MoisturizesSkin(x,y))", "score": 0}
{"id": "eqasc_validation_1155", "prediction": "all x.((AquaticOrganism(x) & -HasToMoistureSkin(x)) -> -HasToMoistureSkin(x))", "score": 0}
{"id": "eqasc_validation_1155", "prediction": "all x y.((AquaticOrganism(x) & AquaticOrganism(y)) -> -Moisturize(x,y))", "score": 0}
{"id": "eqasc_validation_1155", "prediction": "all x y.((AquaticOrganism(x) & AquaticOrganism(y) & -MoisturizeSkin(x,y)) -> -MoisturizeSkin(x,y))", "score": 0}
{"id": "eqasc_validation_1155", "prediction": "all x.((AquaticOrganism(x) & -HasToMoistureSkin(x)) -> -HasToMoisturizeSkin(x))", "score": 0}
{"id": "eqasc_validation_1155", "prediction": "all x.((AquaticOrganism(x) & -MoisturizeSkin(x)) -> -Moisturize(x))", "score": 0}
{"id": "eqasc_validation_1155", "prediction": "all x y.((AquaticOrganism(x) & AquaticOrganism(y)) -> -HasToMoistureSkin(x,y))", "score": 0}
{"id": "eqasc_validation_1155", "prediction": "all x.(AquaticOrganism(x) -> -MoistureSkin(x))", "score": 0}
{"id": "eqasc_validation_1156", "prediction": "all x.((Fish(x) | AquaticCreature(x)) -> -Exception(x))", "score": 0}
{"id": "eqasc_validation_1156", "prediction": "all x.((Fish(x) & AquaticCreature(x)) -> -Exception(x))", "score": 0}
{"id": "eqasc_validation_1156", "prediction": "all x y.((Fish(x) & AquaticCreature(y)) -> -Exception(x))", "score": 0}
{"id": "eqasc_validation_1156", "prediction": "all x y.((Fish(x) & AquaticCreature(y)) -> -Exception(x,y))", "score": 0}
{"id": "eqasc_validation_1156", "prediction": "all x.((Fish(x) | OtherAquaticCreature(x)) -> -Exception(x))", "score": 0}
{"id": "eqasc_validation_1156", "prediction": "all x.(AquaticCreature(x) -> (Fish(x) | AquaticCreature(x)))", "score": 0}
{"id": "eqasc_validation_1156", "prediction": "all x.((Fish(x) | OtherAquaticCreatures(x)) -> -Exception(x))", "score": 0}
{"id": "eqasc_validation_1156", "prediction": "all x y z.((Fish(x) & AquaticCreature(y) & AquaticCreature(z)) -> -Exception(x))", "score": 0}
{"id": "eqasc_validation_1156", "prediction": "all x y z.((Fish(x) & AquaticCreature(y) & AquaticCreature(z)) -> -Exception(x,y,z))", "score": 0}
{"id": "eqasc_validation_1156", "prediction": "all x.((Fish(x) | AquaticCreature(x)) -> -Excuse(x))", "score": 0}
{"id": "eqasc_validation_1156", "prediction": "all x.((Fish(x) | AquaticCreature(x)) -> NoException(x))", "score": 0}
{"id": "eqasc_validation_1156", "prediction": "all x.((Fish(x) & OtherAquaticCreature(x)) -> -Exception(x))", "score": 0}
{"id": "eqasc_validation_1156", "prediction": "all x.((Fish(x) & AquaticCreature(x)) -> -Excuse(x))", "score": 0}
{"id": "eqasc_validation_1156", "prediction": "all x.((Fish(x) & AquaticCreature(x)) -> NoException(x))", "score": 0}
{"id": "eqasc_validation_1156", "prediction": "all x y z.((Fish(x) & AquaticCreature(y) & AquaticCreature(z)) -> -Exception(x,y))", "score": 0}
{"id": "eqasc_validation_1156", "prediction": "all x.((Fish(x) & -AquaticCreature(x)) -> -Exception(x))", "score": 0}
{"id": "eqasc_validation_1157", "prediction": "all x.(Fish(x) -> (-(TemperatureExtreme(x) | MoistureExtreme(x))) & -(TemperatureExtreme(x) | MoistureExtreme(x))))", "score": -1}
{"id": "eqasc_validation_1157", "prediction": "all x.((Fish(x) & -(TemperatureExtreme(x) | MoistureExtreme(x)))) -> -(TemperatureExtreme(x) | MoistureExtreme(x)))", "score": -1}
{"id": "eqasc_validation_1157", "prediction": "all x.((Fish(x) & -(TemperatureExtreme(x) | MoistureExtreme(x)))) -> -(TemperatureExtreme(x) | MoistureExtreme(x))))", "score": -1}
{"id": "eqasc_validation_1157", "prediction": "all x y.((Fish(x) & -(TemperatureExtreme(y) | MoistureExtreme(y))) -> -(TemperatureExtreme(x,y) | MoistureExtreme(x,y)))", "score": 0}
{"id": "eqasc_validation_1157", "prediction": "all x y.((Fish(x) & -(TemperatureExtreme(y) | MoistureExtreme(y))) -> -(TemperatureExtreme(x,y) | MoistureExtreme(x,y))))", "score": -1}
{"id": "eqasc_validation_1157", "prediction": "all x.((Fish(x) & -(TemperatureExtreme(x) | MoistureExtreme(x))) -> -(TemperatureExtreme(x) | MoistureExtreme(x))))", "score": -1}
{"id": "eqasc_validation_1157", "prediction": "all x.(Fish(x) -> (-(TemperatureExtreme(x) | MoistureExtreme(x))))", "score": 0}
{"id": "eqasc_validation_1157", "prediction": "all x.(Fish(x) -> (-(Temperature(x) | Moisture(x))) & -(Temperature(x) | Moisture(x))))", "score": -1}
{"id": "eqasc_validation_1157", "prediction": "all x.(Fish(x) -> (-(TemperatureExtreme(x) | MoistureExtreme(x))) & -(TemperatureExtreme(x) & MoistureExtreme(x)) & -(TemperatureExtreme(x) & MoistureExtreme(x))))", "score": -1}
{"id": "eqasc_validation_1157", "prediction": "all x.(Fish(x) -> (-(TemperatureExtreme(x) | MoistureExtreme(x)) & -(TemperatureExtreme(x) | MoistureExtreme(x)))))", "score": -1}
{"id": "eqasc_validation_1157", "prediction": "all x.(Fish(x) -> (-(TemperatureExtreme(x) | MoistureExtreme(x))) & -(TemperatureExtreme(x) & MoistureExtreme(x))))", "score": -1}
{"id": "eqasc_validation_1157", "prediction": "all x.(Fish(x) -> (-(TemperatureExtreme(x) | MoistureExtreme(x))) & -(TemperatureExtreme(x) & MoistureExtreme(x)) & -(TemperatureExtreme(x) & MoistureExtreme(x)))))", "score": -1}
{"id": "eqasc_validation_1157", "prediction": "all x y.((Fish(x) & -(TemperatureExtreme(y) | MoistureExtreme(y)))) -> -(TemperatureExtreme(x,y) | MoistureExtreme(x,y)))", "score": -1}
{"id": "eqasc_validation_1157", "prediction": "all x.(Fish(x) -> -(TemperatureExtreme(x) | MoistureExtreme(x)))", "score": 0}
{"id": "eqasc_validation_1157", "prediction": "all x.(Fish(x) -> (-(TemperatureExtreme(x) | MoistureExtreme(x))) & -(TemperatureExtreme(x) | MoistureExtreme(x)) & -(TemperatureExtreme(x) & MoistureExtreme(x)))))", "score": -1}
{"id": "eqasc_validation_1157", "prediction": "all x.(Fish(x) -> (-(TemperatureExtreme(x) | MoistureExtreme(x))) & -(TemperatureExtreme(x) | MoistureExtreme(x)) & -(TemperatureExtreme(x) & MoistureExtreme(x))))", "score": -1}
{"id": "eqasc_validation_1158", "prediction": "all x.(Fish(x) -> (-ExtremeTemperature(x) | ExtremeMoisture(x)))", "score": 5}
{"id": "eqasc_validation_1158", "prediction": "all x.(Fish(x) -> -(ExtremeTemperature(x) | ExtremeMoisture(x)))", "score": 4}
{"id": "eqasc_validation_1158", "prediction": "all x.(Fish(x) -> -(ExtremeTemperature(x) | ExtremeMoisture(x))))", "score": -1}
{"id": "eqasc_validation_1158", "prediction": "all x.((Fish(x) & -ExtremeTemperature(x) & -ExtremeMoisture(x)) -> -ExtremeMoisture(x))", "score": 0}
{"id": "eqasc_validation_1158", "prediction": "all x.(Fish(x) -> (-ExtremeTemperatureOrMoisture(x) & -ExtremeMoisture(x)))", "score": 0}
{"id": "eqasc_validation_1158", "prediction": "all x.(Fish(x) -> (-ExtremeTemperature(x) | ExtremeMoisture(x)) & -ExtremeTemperature(x) & -ExtremeMoisture(x)))", "score": -1}
{"id": "eqasc_validation_1158", "prediction": "all x.(Fish(x) -> (-(ExtremeTemperature(x) | ExtremeMoisture(x))) & -(ExtremeTemperature(x) | ExtremeMoisture(x))))", "score": -1}
{"id": "eqasc_validation_1158", "prediction": "all x y.((Fish(x) & (ExtremeTemperature(y) | ExtremeMoisture(y))) -> -(ExtremeTemperature(x,y) | ExtremeMoisture(x,y))))", "score": -1}
{"id": "eqasc_validation_1158", "prediction": "all x.(Fish(x) -> (-ExtremeTemperatureOrMoisture(x) & -ExtremeMoisture(x) & -ExtremeMoisture(x)))", "score": 0}
{"id": "eqasc_validation_1158", "prediction": "all x.(Fish(x) -> -(ExtremeTemperature(x) | ExtremeMoisture(x)) & -(ExtremeTemperature(x) | ExtremeMoisture(x))))", "score": -1}
{"id": "eqasc_validation_1158", "prediction": "all x.((Fish(x) & -(ExtremeTemperature(x) | ExtremeMoisture(x)))) -> -(ExtremeTemperature(x) | ExtremeMoisture(x))))", "score": -1}
{"id": "eqasc_validation_1158", "prediction": "all x.(Fish(x) -> (-(ExtremeTemperature(x) | ExtremeMoisture(x)) & -(ExtremeTemperature(x) | ExtremeMoisture(x)))))", "score": -1}
{"id": "eqasc_validation_1158", "prediction": "all x.(Fish(x) -> (-ExtremeTemperatureOrMoisture(x) & -ExtremeMoisture(x) & -ExtremeMoisture(x) & -ExtremeMoisture(x)))", "score": 0}
{"id": "eqasc_validation_1158", "prediction": "all x.((Fish(x) & -(ExtremeTemperature(x) | ExtremeMoisture(x)))) -> -(ExtremeTemperature(x) | ExtremeMoisture(x)))", "score": -1}
{"id": "eqasc_validation_1158", "prediction": "all x.(Fish(x) -> (-ExtremeTemperature(x) & -ExtremeMoisture(x)))", "score": 4}
{"id": "eqasc_validation_1158", "prediction": "all x.(Fish(x) -> (-ExtremeTemperature(x) | ExtremeMoisture(x)) & -ExtremeMoisture(x)))", "score": -1}
{"id": "eqasc_validation_1159", "prediction": "all x.(Wetting(x) -> ProvidesMoisture(x))", "score": 0}
{"id": "eqasc_validation_1159", "prediction": "all x.(Wetting(x) -> ProvidesMoistureToMakeBrine(x))", "score": 0}
{"id": "eqasc_validation_1159", "prediction": "all x.(Wetting(x) -> (ProvidesMoisture(x) & MakesBrine(x)))", "score": 0}
{"id": "eqasc_validation_1159", "prediction": "all x y.((Wetting(x) & Brier(y)) -> ProvidesMoisture(x,y))", "score": 0}
{"id": "eqasc_validation_1159", "prediction": "all x.(Wetting(x) -> ProvidesMoistureToMakeMarine(x))", "score": 0}
{"id": "eqasc_validation_1159", "prediction": "all x.(Wetting(x) -> ProvidesMoistureForBrine(x))", "score": 0}
{"id": "eqasc_validation_1159", "prediction": "all x y.((Wetting(x) & Brine(y)) -> ProvidesMoisture(x,y))", "score": 0}
{"id": "eqasc_validation_1159", "prediction": "all x y.((Wetting(x) & Briar(y)) -> ProvidesMoisture(x,y))", "score": 0}
{"id": "eqasc_validation_1159", "prediction": "all x y.((Wetting(x) & Brittle(y)) -> ProvidesMoisture(x,y))", "score": 0}
{"id": "eqasc_validation_1159", "prediction": "all x y.((Wetting(x) & Brier(y)) -> ProvidesMoistureToMake(x,y))", "score": 0}
{"id": "eqasc_validation_1159", "prediction": "all x y.((Wetting(x) & Salt(y)) -> ProvidesMoistureToMake(x,y))", "score": 0}
{"id": "eqasc_validation_1159", "prediction": "all x.(Wetting(x) -> (ProvidesMoisture(x) & MakesMarine(x)))", "score": 0}
{"id": "eqasc_validation_1159", "prediction": "all x y.((Wetting(x) & Briar(y)) -> ProvidesMoistureToMake(x,y))", "score": 0}
{"id": "eqasc_validation_1159", "prediction": "all x y.((Wetting(x) & Salt(y)) -> ProvidesMoisture(x,y))", "score": 0}
{"id": "eqasc_validation_1159", "prediction": "all x y.((Wetting(x) & Brine(y)) -> ProvidesMoistureToMake(x,y))", "score": 0}
{"id": "eqasc_validation_1159", "prediction": "All x.(Wetting(x) -> ProvidesMoistureToMakeBrine(x))", "score": -1}
{"id": "eqasc_validation_1160", "prediction": "all x.(AquaticOrganism(x) -> (-ExtremeTemperature(x) | ExtremeWetness(x)))", "score": 0}
{"id": "eqasc_validation_1160", "prediction": "all x.(AquaticOrganism(x) -> -(ExtremeTemperature(x) | ExtremeWetness(x)))", "score": 0}
{"id": "eqasc_validation_1160", "prediction": "all x.(AquaticOrganism(x) -> -(ExtremeTemperature(x) | ExtremeWetness(x))))", "score": -1}
{"id": "eqasc_validation_1160", "prediction": "all x.((AquaticOrganism(x) & -ExtremeTemperature(x) & -ExtremeWetness(x)) -> -ExtremeWetness(x))", "score": 0}
{"id": "eqasc_validation_1160", "prediction": "all x.(AquaticOrganism(x) -> -ExtremeTemperatureOrWetness(x))", "score": 0}
{"id": "eqasc_validation_1160", "prediction": "all x.(AquaticOrganism(x) -> (-ExtremeTemperature(x) & -ExtremeWetness(x)))", "score": 0}
{"id": "eqasc_validation_1160", "prediction": "all x.(AquaticOrganism(x) -> -ExtremeTemperature(x) & -ExtremeWetness(x))", "score": 0}
{"id": "eqasc_validation_1160", "prediction": "all x.((AquaticOrganism(x) & -ExtremeTemperature(x) & -ExtremeWetness(x)) -> -ExtremeWeatness(x))", "score": 0}
{"id": "eqasc_validation_1160", "prediction": "all x.((AquaticOrganism(x) & -(ExtremeTemperature(x) | ExtremeWetness(x))) -> -ExtremeWetness(x))", "score": 0}
{"id": "eqasc_validation_1160", "prediction": "all x.(AquaticOrganism(x) -> (-ExtremeTemperature(x) | -ExtremeWetness(x)))", "score": 0}
{"id": "eqasc_validation_1160", "prediction": "all x.((AquaticOrganism(x) & -ExtremeTemperature(x) & -ExtremeWetness(x)) -> -ExtremeTemperature(x))", "score": 0}
{"id": "eqasc_validation_1160", "prediction": "all x.(AquaticOrganism(x) -> (-(ExtremeTemperature(x) | ExtremeWetness(x))))", "score": 0}
{"id": "eqasc_validation_1160", "prediction": "all x.((AquaticOrganism(x) & -(ExtremeTemperature(x) | ExtremeWetness(x)))) -> -ExtremeWetness(x))", "score": -1}
{"id": "eqasc_validation_1160", "prediction": "all x.((AquaticOrganism(x) & -ExtremeTemperature(x) & -ExtremeWetness(x)) -> -AquaticOrganism(x))", "score": 0}
{"id": "eqasc_validation_1161", "prediction": "all x y z.((Metal(x) & Rusts(x) & Metal(y) & Surface(z)) -> OrangeOnSurface(y,z))", "score": 0}
{"id": "eqasc_validation_1161", "prediction": "all x y z.((Metal(x) & Rusts(x) & Metal(y) & Surface(z)) -> Orange(y))", "score": 1}
{"id": "eqasc_validation_1161", "prediction": "all x y z.((Metal(x) & Rusts(x) & Metal(y) & Surface(z)) -> Orange(y,z))", "score": 1}
{"id": "eqasc_validation_1161", "prediction": "all x y z.((Metal(x) & Rusts(x) & Metal(y) & Surface(z) & Orange(y)) -> OrangeOnSurface(y,z))", "score": 0}
{"id": "eqasc_validation_1161", "prediction": "all x y z.((Metal(x) & Rusts(x) & Metal(y) & Surface(z)) -> (BecomesOrange(y) & OnSurface(y,z)))", "score": 0}
{"id": "eqasc_validation_1161", "prediction": "all x y z.((Metal(x) & Rusts(x) & Metal(y) & Surface(z)) -> OrangeOnSurface(y))", "score": 0}
{"id": "eqasc_validation_1161", "prediction": "all x y.((Metal(x) & Rusts(x)) -> OrangeOnSurface(y))", "score": 1}
{"id": "eqasc_validation_1161", "prediction": "all x y z.((Metal(x) & Rusts(x) & Metal(y) & Surface(z) & OrangeOnSurface(y,z)) -> OrangeOnSurface(y,z))", "score": 0}
{"id": "eqasc_validation_1161", "prediction": "all x y.((Metal(x) & Rusts(x) & Metal(y)) -> OrangeOnSurface(y))", "score": 1}
{"id": "eqasc_validation_1161", "prediction": "all x y z.((Metal(x) & Rusts(x) & Metal(y) & Surface(z) & Orange(y)) -> BecomesOnSurface(y,z))", "score": 0}
{"id": "eqasc_validation_1161", "prediction": "all x.((Metal(x) & Rusts(x)) -> OrangeOnSurface(x))", "score": 1}
{"id": "eqasc_validation_1161", "prediction": "all x y z.((Metal(x) & Rusts(x) & Metal(y) & Surface(z)) -> (BecomesOrange(y,z)))", "score": 0}
{"id": "eqasc_validation_1161", "prediction": "all x y z.((Metal(x) & Rusts(x) & Metal(y) & Surface(z) & OrangeOnSurface(y)) -> OrangeOnSurface(y,z))", "score": 0}
{"id": "eqasc_validation_1161", "prediction": "all x y z.((Metal(x) & Rusts(x) & Metal(y) & Surface(z) & Orange(y)) -> Orange(y))", "score": 0}
{"id": "eqasc_validation_1161", "prediction": "all x y z.((Metal(x) & Rusts(x) & Metal(y) & Surface(z)) -> (BecomesOrange(y,z) & OnSurface(y,z)))", "score": 0}
{"id": "eqasc_validation_1161", "prediction": "all x y z.((Metal(x) & Rusts(x) & Metal(y) & Surface(z)) -> (BecomesOrangeOnSurface(y,z)))", "score": 0}
{"id": "eqasc_validation_1162", "prediction": "all x.((Iron(x) & Oxidizes(x)) -> Rusts(x))", "score": 0}
{"id": "eqasc_validation_1162", "prediction": "all x.(OxidizesIron(x) -> Rusts(x))", "score": 0}
{"id": "eqasc_validation_1162", "prediction": "all x.(Oxidizes(x) -> Rusts(x))", "score": 0}
{"id": "eqasc_validation_1162", "prediction": "all x.((Iron(x) & Oxidizes(x)) -> Ruins(x))", "score": 0}
{"id": "eqasc_validation_1162", "prediction": "all x.((IronOxidizes(x) & Rusts(x)) -> Oxidizes(x))", "score": 0}
{"id": "eqasc_validation_1162", "prediction": "all x y.((Iron(x) & Oxidizes(x)) -> Rusts(y))", "score": 5}
{"id": "eqasc_validation_1162", "prediction": "all x.((Iron(x) & Oxidizes(x)) -> Rust(x))", "score": 0}
{"id": "eqasc_validation_1162", "prediction": "all x.((Iron(x) & Oxygens(x)) -> Rusts(x))", "score": 0}
{"id": "eqasc_validation_1162", "prediction": "all x y.((Iron(x) & Oxidizes(x)) -> Rusts(x))", "score": 0}
{"id": "eqasc_validation_1162", "prediction": "all x y.((Iron(x) & Oxidizes(x,y)) -> Rusts(x))", "score": 0}
{"id": "eqasc_validation_1162", "prediction": "all x.((Iron(x) & Oxidizes(x)) -> Rotates(x))", "score": 0}
{"id": "eqasc_validation_1162", "prediction": "all x.(OxidizesIron(x) -> RustsIron(x))", "score": 0}
{"id": "eqasc_validation_1162", "prediction": "all x.((IronOxidizes(x) & Rusts(x)) -> IronOxidizes(x))", "score": 0}
{"id": "eqasc_validation_1162", "prediction": "all x.((Iron(x) & Oxidizes(x)) -> Rashes(x))", "score": 0}
{"id": "eqasc_validation_1162", "prediction": "all x.(OxidizesIron(x) -> Ruins(x))", "score": 0}
{"id": "eqasc_validation_1162", "prediction": "all x y.((Iron(x) & Oxidizes(x,y)) -> Rusts(x,y))", "score": 0}
{"id": "eqasc_validation_1163", "prediction": "all x.((Iron(x) & Oxidizes(x)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1163", "prediction": "all x.((IronOxidizes(x) & Metal(x)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1163", "prediction": "all x.((Iron(x) & Oxidizes(x)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1163", "prediction": "all x y.((Iron(x) & Oxidizes(x)) -> OrangeOnSurface(y))", "score": 0}
{"id": "eqasc_validation_1163", "prediction": "all x y.((Iron(x) & Oxidizes(x) & Metal(y)) -> OrangeOnSurface(y))", "score": 3}
{"id": "eqasc_validation_1163", "prediction": "all x y z.((Iron(x) & Oxidizes(x) & Metal(y) & Surface(z)) -> Orange(y))", "score": 1}
{"id": "eqasc_validation_1163", "prediction": "all x y.((IronOxidizes(x) & Metal(y)) -> OrangeOnSurface(y))", "score": 0}
{"id": "eqasc_validation_1163", "prediction": "all x.((IronOxidizes(x) & Metal(y)) -> OrangeOnSurface(y))", "score": 0}
{"id": "eqasc_validation_1163", "prediction": "all x.(OxidizesIron(x) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1163", "prediction": "all x y.((Iron(x) & Oxidizes(x)) -> Orange(y))", "score": 0}
{"id": "eqasc_validation_1163", "prediction": "all x y z.((Iron(x) & Oxidizes(x) & Metal(y) & Surface(z)) -> OrangeOn(y,z))", "score": 0}
{"id": "eqasc_validation_1163", "prediction": "all x.((IronOxidizes(x) & MetalBecomesOrange(x)) -> Oxidizes(x))", "score": 0}
{"id": "eqasc_validation_1163", "prediction": "all x y z.((Iron(x) & Oxidizes(x) & Metal(y) & Surface(z)) -> Orange(y,z))", "score": 1}
{"id": "eqasc_validation_1163", "prediction": "all x.((IronOxidizes(x) & Metal(x)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1163", "prediction": "all x y.((Iron(x) & Oxidizes(x,y)) -> OrangeOnSurface(y))", "score": 0}
{"id": "eqasc_validation_1163", "prediction": "all x.((IronOxygens(x) & Metal(x)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1164", "prediction": "all x.(Moisture(x) -> (DamageMetal(x) & CausesRusting(x) & CausesCorrosion(x)))", "score": 0}
{"id": "eqasc_validation_1164", "prediction": "all x.(Moisture(x) -> (DamagesMetal(x) & CausesRusting(x) & CausesCorrosion(x)))", "score": 0}
{"id": "eqasc_validation_1164", "prediction": "all x y.((Moisture(x) & Metal(y)) -> (Damage(x,y) & CausesRusting(x) & CausesCorrosion(x)))", "score": 0}
{"id": "eqasc_validation_1164", "prediction": "all x.(Moisture(x) -> (DamageMetal(x) & CausesRotting(x) & CausesCorrosion(x)))", "score": 0}
{"id": "eqasc_validation_1164", "prediction": "all x y.((Moisture(x) & Metal(y)) -> (Damages(x,y) & CausesRusting(x) & CausesCorrosion(x)))", "score": 0}
{"id": "eqasc_validation_1164", "prediction": "all x y.((Moisture(x) & Metal(y)) -> (Damage(x,y) & CausesRusting(x,y) & CausesCorrosion(x,y)))", "score": 0}
{"id": "eqasc_validation_1164", "prediction": "all x.(Moisture(x) -> (DamageMetal(x) & CausesRossing(x) & CausesCorrosion(x)))", "score": 0}
{"id": "eqasc_validation_1164", "prediction": "all x y.((Moisture(x) & Metal(y)) -> (Damage(x,y) & CausesRotting(x) & CausesCorrosion(x)))", "score": 0}
{"id": "eqasc_validation_1164", "prediction": "all x y.((Moisture(x) & Metal(y)) -> (Damage(x,y) & Rusting(y) & Corrosion(y)))", "score": 0}
{"id": "eqasc_validation_1164", "prediction": "all x.(Moisture(x) -> (DamagesMetal(x) & CausesRotting(x) & CausesCorrosion(x)))", "score": 0}
{"id": "eqasc_validation_1164", "prediction": "all x y.((Moisture(x) & Metal(y)) -> (Damage(x,y) & CausesRossing(x) & CausesCorrosion(x)))", "score": 0}
{"id": "eqasc_validation_1164", "prediction": "all x.(Moisture(x) -> (DamageMetal(x) & CauseRusting(x) & CauseCorrosion(x)))", "score": 0}
{"id": "eqasc_validation_1164", "prediction": "all x.(Moisture(x) -> (DamageMetal(x) & CausesRunning(x) & CausesCorrosion(x)))", "score": 0}
{"id": "eqasc_validation_1165", "prediction": "all x y.((Moisture(x) & Metal(y)) -> OrangeOnSurface(x,y))", "score": 0}
{"id": "eqasc_validation_1165", "prediction": "all x y.((Moisture(x) & Metal(y)) -> OrangeOnSurface(y))", "score": 0}
{"id": "eqasc_validation_1165", "prediction": "all x.(Moisture(x) -> (CausesMetalToBecomeOrange(x)))", "score": 0}
{"id": "eqasc_validation_1165", "prediction": "all x.(Moisture(x) -> CausesMetalToBecomeOrange(x))", "score": 0}
{"id": "eqasc_validation_1165", "prediction": "all x.(Moisture(x) -> CausesMetalToBecomeOrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1165", "prediction": "all x.((Moisture(x) & Metal(y)) -> OrangeOnSurface(x,y))", "score": 0}
{"id": "eqasc_validation_1165", "prediction": "all x.((Moisture(x) & Metal(y)) -> OrangeOnSurface(y))", "score": 0}
{"id": "eqasc_validation_1165", "prediction": "all x y.((Moisture(x) & Metal(y)) -> (BecomesOrangeOnSurface(x,y)))", "score": 0}
{"id": "eqasc_validation_1165", "prediction": "all x y.((Moisture(x) & Metal(y)) -> Orange(y))", "score": 0}
{"id": "eqasc_validation_1165", "prediction": "all x.(Moisture(x) -> CausesOrangeMetal(x))", "score": 0}
{"id": "eqasc_validation_1165", "prediction": "all x.(Moisture(x) -> CanCauseMetalToBecomeOrange(x))", "score": 0}
{"id": "eqasc_validation_1165", "prediction": "all x.((Moisture(x) & Metal(x)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1165", "prediction": "all x.(Moisture(x) -> CanCauseMetalToBecomeOrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1165", "prediction": "all x.(Moisture(x) -> MetalBecomesOrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1165", "prediction": "all x y.((Moisture(x) & Metal(y)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1165", "prediction": "all x y z.((Moisture(x) & Metal(y) & Surface(z)) -> OrangeOn(y,z))", "score": 0}
{"id": "eqasc_validation_1166", "prediction": "all x.((Iron(x) & PresenceOfOxygen(x) & PresenceOfWater(x)) -> Ruins(x))", "score": 0}
{"id": "eqasc_validation_1166", "prediction": "all x.((Iron(x) & PresenceOfOxygen(x) & PresenceOfWater(x)) -> Rusts(x))", "score": 0}
{"id": "eqasc_validation_1166", "prediction": "all x.((Iron(x) & PresenceOfOxygen(x) & PresenceOfWater(x)) -> RuinsIn(x,y))", "score": 0}
{"id": "eqasc_validation_1166", "prediction": "all x.(Iron(x) -> (RosesInPresenceOfOxygen(x) & RuinsInPresenceOfWater(x)))", "score": 0}
{"id": "eqasc_validation_1166", "prediction": "all x.((Iron(x) & PresenceOfOxygen(x) & PresenceOfWater(x)) -> RuinsIn(x))", "score": 0}
{"id": "eqasc_validation_1166", "prediction": "all x.(Iron(x) -> (Roses(x) & PresenceOfOxygen(x) & PresenceOfWater(x)))", "score": 0}
{"id": "eqasc_validation_1166", "prediction": "all x.(Iron(x) -> (RosesInPresenceOfOxygen(x) & RustsInPresenceOfWater(x)))", "score": 0}
{"id": "eqasc_validation_1166", "prediction": "all x.((Iron(x) & PresenceOfOxygen(x) & PresenceOfWater(x)) -> RustsIn(x,y))", "score": 0}
{"id": "eqasc_validation_1166", "prediction": "all x.((Iron(x) & PresenceOfOxygen(x) & PresenceOfWater(x)) -> RustsIn(x))", "score": 0}
{"id": "eqasc_validation_1166", "prediction": "all x y.((Iron(x) & PresenceOfOxygen(y) & PresenceOfWater(y)) -> RuinsIn(x,y))", "score": 0}
{"id": "eqasc_validation_1166", "prediction": "all x.(Iron(x) -> (RosesInOxygen(x) & RuinsInWater(x)))", "score": 0}
{"id": "eqasc_validation_1166", "prediction": "all x y z.((Iron(x) & Oxygen(y) & Water(z)) -> RuinsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1166", "prediction": "all x y.((Iron(x) & Oxygen(y) & Water(y)) -> RuinsIn(x,y))", "score": 0}
{"id": "eqasc_validation_1166", "prediction": "all x y.((Iron(x) & PresenceOfOxygen(y) & PresenceOfWater(x)) -> RuinsIn(x,y))", "score": 0}
{"id": "eqasc_validation_1166", "prediction": "all x y z.((Iron(x) & Oxygen(y) & Water(z)) -> RuinsInPresence(x,y,z))", "score": 0}
{"id": "eqasc_validation_1166", "prediction": "all x y.((Iron(x) & Oxygen(y) & Water(y)) -> RuinsInPresence(x,y))", "score": 0}
{"id": "eqasc_validation_1167", "prediction": "all x.((Oxygen(x) & Water(x)) -> MetalToTurnOrange(x))", "score": 0}
{"id": "eqasc_validation_1167", "prediction": "all x.((Oxygen(x) & Water(x)) -> MetalTurnsOrange(x))", "score": 0}
{"id": "eqasc_validation_1167", "prediction": "all x y.((Oxygen(x) & Water(y)) -> MetalToTurnOrange(x))", "score": 0}
{"id": "eqasc_validation_1167", "prediction": "all x y z.((Oxygen(x) & Water(y) & Metal(z)) -> TurnsOrange(z))", "score": 0}
{"id": "eqasc_validation_1167", "prediction": "all x y.((Oxygen(x) & Water(y)) -> MetalTurnsOrange(x))", "score": 0}
{"id": "eqasc_validation_1167", "prediction": "all x y z.((Oxygen(x) & Water(y) & Metal(z) & Oxygen(z)) -> TurnsOrange(z))", "score": 0}
{"id": "eqasc_validation_1167", "prediction": "all x y.((Oxygen(x) & Water(y)) -> MetalToTurnOrange(x,y))", "score": 0}
{"id": "eqasc_validation_1167", "prediction": "all x y.((Oxygen(x) & Water(y)) -> (CausesMetalToTurnOrange(x) & CausesMetalToTurnOrange(x)))", "score": 0}
{"id": "eqasc_validation_1167", "prediction": "all x.((Oxygen(x) & Water(x)) -> TurnsOrange(x))", "score": 0}
{"id": "eqasc_validation_1167", "prediction": "all x.((Oxygen(x) & Water(x) & Metal(x)) -> TurnsOrange(x))", "score": 0}
{"id": "eqasc_validation_1167", "prediction": "all x y z.((Oxygen(x) & Water(y) & Metal(z) & Oxygen(z)) -> TurnsOrange(x,z))", "score": 0}
{"id": "eqasc_validation_1167", "prediction": "all x y.((Oxygen(x) & Water(y)) -> (CausesMetalToTurnOrange(x,y) & CausesMetalToTurnOrange(x,y)))", "score": 0}
{"id": "eqasc_validation_1167", "prediction": "all x y.((Oxygen(x) & Water(y)) -> MetalTurnsOrange(x,y))", "score": 0}
{"id": "eqasc_validation_1167", "prediction": "all x y z.((Oxygen(x) & Water(y) & Metal(z) & Oxygen(z)) -> Orange(z))", "score": 0}
{"id": "eqasc_validation_1167", "prediction": "all x y z.((Oxygen(x) & Water(y) & Metal(z)) -> (Orange(z) & Oxygen(z) & Water(y) & CausesOrange(z)))", "score": 0}
{"id": "eqasc_validation_1167", "prediction": "all x y z.((Oxygen(x) & Water(y) & Metal(z)) -> (Orange(z) & Oxygen(x) & Water(y)))", "score": 0}
{"id": "eqasc_validation_1168", "prediction": "all x.(RustStain(x) -> Oxidation(x))", "score": 0}
{"id": "eqasc_validation_1168", "prediction": "all x.(RustStain(x) -> OxidationResult(x))", "score": 0}
{"id": "eqasc_validation_1168", "prediction": "all x.(RustStains(x) -> Oxidation(x))", "score": 0}
{"id": "eqasc_validation_1168", "prediction": "all x.(RustStains(x) -> OxidationResult(x))", "score": 0}
{"id": "eqasc_validation_1168", "prediction": "all x.(RustStained(x) -> Oxidation(x))", "score": 0}
{"id": "eqasc_validation_1168", "prediction": "all x.(RustStained(x) -> OxidationResult(x))", "score": 0}
{"id": "eqasc_validation_1168", "prediction": "all x y.((RustStain(x) & Oxidation(y)) -> Results(x,y))", "score": 0}
{"id": "eqasc_validation_1168", "prediction": "all x y.((RustStain(x) & Oxidation(y)) -> ResultsOf(x,y))", "score": 0}
{"id": "eqasc_validation_1168", "prediction": "all x y.((RustStain(x) & Oxidation(y)) -> OxidationResult(x,y))", "score": 0}
{"id": "eqasc_validation_1168", "prediction": "all x y.((RustStain(x) & Oxidation(y)) -> TheResult(x,y))", "score": 0}
{"id": "eqasc_validation_1168", "prediction": "all x y.((RustStain(x) & Oxidation(y)) -> Remains(x,y))", "score": 0}
{"id": "eqasc_validation_1168", "prediction": "all x y.((RustStain(x) & Oxidation(y)) -> Result(x,y))", "score": 0}
{"id": "eqasc_validation_1168", "prediction": "all x y.((RustStain(x) & Oxidation(y)) -> Oxidation(x,y))", "score": 0}
{"id": "eqasc_validation_1168", "prediction": "all x y.((RustStain(x) & Oxidation(y)) -> Oxidation(x))", "score": 0}
{"id": "eqasc_validation_1169", "prediction": "all x.((Metal(x) & Oxidation(x)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1169", "prediction": "all x y.((Metal(x) & Oxidation(y)) -> OrangeOnSurface(x,y))", "score": 0}
{"id": "eqasc_validation_1169", "prediction": "all x.((Metal(x) & Oxidation(x)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1169", "prediction": "all x.((Metal(x) & Oxidation(x)) -> OrangeSurface(x))", "score": 0}
{"id": "eqasc_validation_1169", "prediction": "all x y.((Metal(x) & Oxidation(y)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1169", "prediction": "all x.((Metal(x) & OxidationResult(x)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1169", "prediction": "all x y.((Metal(x) & Oxidation(y)) -> OrangeSurface(x,y))", "score": 0}
{"id": "eqasc_validation_1169", "prediction": "all x y z.((Metal(x) & Oxidation(y) & Surface(z)) -> Orange(x,y,z))", "score": 0}
{"id": "eqasc_validation_1169", "prediction": "all x y.((Metal(x) & Oxidation(y)) -> Orange(x,y))", "score": 0}
{"id": "eqasc_validation_1169", "prediction": "all x y.((Metal(x) & Oxidation(y)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1169", "prediction": "all x y.((Metal(x) & Surface(y) & Oxidation(x)) -> Orange(x,y))", "score": 0}
{"id": "eqasc_validation_1169", "prediction": "all x y z.((Metal(x) & Oxidation(y) & Surface(z)) -> Orange(x,z))", "score": 0}
{"id": "eqasc_validation_1169", "prediction": "all x y z.((Metal(x) & Oxidation(y) & Surface(z)) -> OrangeOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1169", "prediction": "all x.(OxidationOfMetal(x) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1169", "prediction": "all x y z.((Metal(x) & Oxidation(y) & Surface(z)) -> Orange(x,y))", "score": 0}
{"id": "eqasc_validation_1169", "prediction": "all x y z.((Metal(x) & Surface(y) & Oxidation(z)) -> Orange(x,y,z))", "score": 0}
{"id": "eqasc_validation_1170", "prediction": "all x.(Moisture(x) -> MainCauseOfRust(x))", "score": 0}
{"id": "eqasc_validation_1170", "prediction": "all x y.((Moisture(x) & Rust(y)) -> MainCause(x,y))", "score": 0}
{"id": "eqasc_validation_1170", "prediction": "all x.(Moisture(x) -> MainCauseOfRose(x))", "score": 0}
{"id": "eqasc_validation_1170", "prediction": "all x y.((Moisture(x) & Rust(y)) -> MainCauseOf(x,y))", "score": 0}
{"id": "eqasc_validation_1170", "prediction": "all x.(Moisture(x) -> CauseOfRust(x))", "score": 0}
{"id": "eqasc_validation_1170", "prediction": "all x y z.((Moisture(x) & Rust(y) & Moisture(z)) -> MainCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_1170", "prediction": "all x.((Moisture(x) & Rust(x)) -> MainCause(x))", "score": 0}
{"id": "eqasc_validation_1170", "prediction": "all x y.((Moisture(x) & Rust(y)) -> Cause(x,y))", "score": 0}
{"id": "eqasc_validation_1170", "prediction": "all x.(Moisture(x) -> MainCauseOfRrust(x))", "score": 0}
{"id": "eqasc_validation_1170", "prediction": "all x y z.((Moisture(x) & Rust(y) & Moisture(z)) -> MainCauseOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1170", "prediction": "all x.(Moisture(x) -> CauseOfRose(x))", "score": 0}
{"id": "eqasc_validation_1170", "prediction": "all x y z.((Moisture(x) & Rust(y) & Moisture(z)) -> Cause(x,y,z))", "score": 0}
{"id": "eqasc_validation_1170", "prediction": "(MainCauseOfRust(moisture) & MainCauseOfRust(moisture))", "score": 0}
{"id": "eqasc_validation_1170", "prediction": "all x.((Moisture(x) & Rust(x)) -> MainCause(x,Moisture))", "score": 0}
{"id": "eqasc_validation_1170", "prediction": "all x.(Moisture(x) -> MainCauseOfRain(x))", "score": 0}
{"id": "eqasc_validation_1170", "prediction": "all x.((Moisture(x) & Rust(x)) -> MainCause(x,y))", "score": 0}
{"id": "eqasc_validation_1171", "prediction": "all x y.((Moisture(x) & MetalOrange(y)) -> TurnsOnSurface(x,y))", "score": 0}
{"id": "eqasc_validation_1171", "prediction": "all x.(Moisture(x) -> TurnsMetalOrange(x))", "score": 0}
{"id": "eqasc_validation_1171", "prediction": "all x y z.((Moisture(x) & MetalOrange(y) & Surface(z)) -> TurnsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1171", "prediction": "all x y.((Moisture(x) & Surface(y)) -> TurnsMetalOrange(x,y))", "score": 0}
{"id": "eqasc_validation_1171", "prediction": "all x.(Moisture(x) -> TurnsMetalOrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1171", "prediction": "all x.((Moisture(x) & MetalOrange(x)) -> TurnsOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1171", "prediction": "all x.((Moisture(x) & TurnsMetalOrange(x)) -> OnSurface(x))", "score": 0}
{"id": "eqasc_validation_1171", "prediction": "all x y.((Moisture(x) & MetalOrange(y)) -> CanTurnOnSurface(x,y))", "score": 0}
{"id": "eqasc_validation_1171", "prediction": "all x y.((Moisture(x) & MetalOrange(y) & Surface(z)) -> TurnsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1171", "prediction": "all x y z.((Moisture(x) & MetalOrange(y) & Surface(z)) -> Turns(x,y,z))", "score": 0}
{"id": "eqasc_validation_1171", "prediction": "all x y.((Moisture(x) & Surface(y)) -> TurnsMetalOrangeOn(x,y))", "score": 0}
{"id": "eqasc_validation_1171", "prediction": "all x y z.((Moisture(x) & MetalOrange(y) & Surface(z)) -> TurnsOnMoisture(x,y,z))", "score": 0}
{"id": "eqasc_validation_1171", "prediction": "all x.((Moisture(x) & MetalOrange(x)) -> TurnsOnSurface(x,y))", "score": 0}
{"id": "eqasc_validation_1171", "prediction": "all x y z.((Moisture(x) & MetalOrange(y) & Surface(z)) -> CanTurnOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1171", "prediction": "all x.((Moisture(x) & TurnsMetalOrange(x)) -> MetalOrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1171", "prediction": "all x.(Moisture(x) -> (TurnsMetalOrange(x) & OnSurface(x)))", "score": 0}
{"id": "eqasc_validation_1172", "prediction": "all x.(Iron(x) -> ActiveMetal(x))", "score": 0}
{"id": "eqasc_validation_1172", "prediction": "all x.((Iron(x) & Chemically(x)) -> ActiveMetal(x))", "score": 0}
{"id": "eqasc_validation_1172", "prediction": "all x.((Iron(x) & ChemicallyActiveMetal(x)) -> ActiveMetal(x))", "score": 0}
{"id": "eqasc_validation_1172", "prediction": "all x.((Iron(x) & ChemicallyActive(x)) -> ActiveMetal(x))", "score": 0}
{"id": "eqasc_validation_1172", "prediction": "all x y.((Iron(x) & Chemically(y)) -> ActiveMetal(x))", "score": 0}
{"id": "eqasc_validation_1172", "prediction": "all x y.((Iron(x) & Chemically(y)) -> ActiveMetal(x,y))", "score": 0}
{"id": "eqasc_validation_1172", "prediction": "All x.(Iron(x) -> ActiveMetal(x))", "score": -1}
{"id": "eqasc_validation_1172", "prediction": "all x.(Iron(x) -> (ActiveMetal(x) & Chemically(x)))", "score": 0}
{"id": "eqasc_validation_1172", "prediction": "All x.((Iron(x) & Chemically(x)) -> ActiveMetal(x))", "score": -1}
{"id": "eqasc_validation_1172", "prediction": "all x.(Iron(x) -> ChemicallyActiveMetal(x))", "score": 0}
{"id": "eqasc_validation_1172", "prediction": "all x y.((Iron(x) & Chemically(x)) -> ActiveMetal(x))", "score": 0}
{"id": "eqasc_validation_1172", "prediction": "(ActiveMetal(iron) & Chemically(iron))", "score": 0}
{"id": "eqasc_validation_1173", "prediction": "all x y z.((Iron(x) & Rusts(x) & Iron(y) & Surface(z)) -> Orange(y))", "score": 0}
{"id": "eqasc_validation_1173", "prediction": "all x y z.((Iron(x) & Rusts(x) & Iron(y) & Surface(z)) -> OrangeOnSurface(y,z))", "score": 0}
{"id": "eqasc_validation_1173", "prediction": "all x y z.((Iron(x) & Rusts(x) & Iron(y) & Surface(z)) -> Orange(y,z))", "score": 0}
{"id": "eqasc_validation_1173", "prediction": "all x y z.((Iron(x) & Rusts(x) & Iron(y) & Surface(z)) -> OrangeOn(y,z))", "score": 0}
{"id": "eqasc_validation_1173", "prediction": "all x y z.((IronRushes(x) & Iron(y) & Surface(z)) -> Orange(y))", "score": 0}
{"id": "eqasc_validation_1173", "prediction": "all x y z.((IronRusts(x) & Iron(y) & Surface(z)) -> Orange(y))", "score": 0}
{"id": "eqasc_validation_1173", "prediction": "all x y z.((Iron(x) & Rusts(x) & Iron(y) & Surface(z) & Orange(y)) -> IronBecomesOnSurface(y,z))", "score": 0}
{"id": "eqasc_validation_1173", "prediction": "all x y z.((Iron(x) & Rust(x) & Iron(y) & Surface(z)) -> Orange(y))", "score": 0}
{"id": "eqasc_validation_1173", "prediction": "all x y z.((Iron(x) & Rusts(x) & Iron(y) & Surface(z)) -> (BecomesOrange(y,z)))", "score": 0}
{"id": "eqasc_validation_1173", "prediction": "all x y z w.((Iron(x) & Rusts(x) & Iron(y) & Surface(z) & Orange(w)) -> Orange(y))", "score": 0}
{"id": "eqasc_validation_1173", "prediction": "all x y z.((Iron(x) & Rusts(x) & Iron(y) & Surface(z) & Orange(y)) -> OrangeOnSurface(y,z))", "score": 0}
{"id": "eqasc_validation_1173", "prediction": "all x y z.((Iron(x) & Rusts(y) & Iron(z)) -> OrangeOnSurface(z))", "score": 0}
{"id": "eqasc_validation_1173", "prediction": "all x y.((IronRushes(x) & Iron(y)) -> OrangeOnSurface(y))", "score": 0}
{"id": "eqasc_validation_1173", "prediction": "all x y z w.((Iron(x) & Rust(y) & Iron(z) & Surface(w)) -> Orange(z))", "score": 0}
{"id": "eqasc_validation_1173", "prediction": "all x y z w.((Iron(x) & Rusts(x) & Iron(y) & Surface(z) & Orange(w)) -> Orange(y,z))", "score": 0}
{"id": "eqasc_validation_1173", "prediction": "all x y z.((Iron(x) & Rusts(x) & Iron(y) & Surface(z)) -> OrangeOnSurface(y))", "score": 0}
{"id": "eqasc_validation_1174", "prediction": "all x.(IronOxygen(x) -> Rust(x))", "score": 0}
{"id": "eqasc_validation_1174", "prediction": "all x.(IronOxide(x) -> Rust(x))", "score": 0}
{"id": "eqasc_validation_1174", "prediction": "all x y.((IronOxygen(x) & Rust(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_1174", "prediction": "all x y.((IronOxide(x) & Rust(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_1174", "prediction": "all x y.((IronOxygen(x) & Rust(y)) -> IronOxygen(x))", "score": 0}
{"id": "eqasc_validation_1174", "prediction": "all x.(IronOxygen(x) -> (Rose(x) & -Rose(x)))", "score": 0}
{"id": "eqasc_validation_1174", "prediction": "all x.(IronOxygen(x) -> (Rose(x)))", "score": 0}
{"id": "eqasc_validation_1174", "prediction": "all x.(IronOxygen(x) -> Rrust(x))", "score": 0}
{"id": "eqasc_validation_1174", "prediction": "all x.(IronOxygen(x) -> IsRose(x))", "score": 0}
{"id": "eqasc_validation_1174", "prediction": "all x.(IronOxygen(x) -> IsRust(x))", "score": 0}
{"id": "eqasc_validation_1174", "prediction": "(all x.(IronOxygen(x) -> Rust(x)))", "score": 0}
{"id": "eqasc_validation_1174", "prediction": "all x.(IronOxygen(x) -> Rotten(x))", "score": 0}
{"id": "eqasc_validation_1174", "prediction": "all x y.((IronOxygen(x) & Rust(y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_1174", "prediction": "all x.(IronOxygen(x) -> (Rose(x) | Rust(x)))", "score": 0}
{"id": "eqasc_validation_1174", "prediction": "all x.(IronOxygen(x) -> Rubbed(x))", "score": 0}
{"id": "eqasc_validation_1175", "prediction": "all x.((Metal(x) & ContainsIronOxide(x)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1175", "prediction": "all x y.((Metal(x) & IronOxide(y) & Contains(x,y)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1175", "prediction": "all x.((Metal(x) & ContainsIronOxygen(x)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1175", "prediction": "all x y z.((Metal(x) & IronOxide(y) & Surface(z) & Contains(x,y)) -> OrangeOnSurface(x,z))", "score": 0}
{"id": "eqasc_validation_1175", "prediction": "all x.((Metal(x) & ContainsIronOxide(x)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1175", "prediction": "all x y z.((Metal(x) & IronOxide(y) & Surface(z) & Contains(x,y) & Contains(x,z)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1175", "prediction": "all x y.((Metal(x) & IronOxide(y) & Contains(x,y)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1175", "prediction": "all x y.((Metal(x) & ContainsIronOxide(x)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1175", "prediction": "all x y z.((Metal(x) & IronOxide(y) & Surface(z) & Contains(x,y) & Contains(x,z)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1175", "prediction": "all x y z.((Metal(x) & IronOxide(y) & Surface(z) & Contains(x,y)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1175", "prediction": "all x y z.((Metal(x) & IronOxide(y) & Surface(z) & Contains(x,y)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1175", "prediction": "all x y.((Metal(x) & ContainsIronOxide(x)) -> OrangeOnSurface(y))", "score": 0}
{"id": "eqasc_validation_1175", "prediction": "all x y z.((Metal(x) & IronOxide(y) & Surface(z) & Contains(x,y)) -> Orange(x,z))", "score": 0}
{"id": "eqasc_validation_1175", "prediction": "all x y.((Metal(x) & ContainsIronOxide(x) & ContainsIronOxide(x)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1175", "prediction": "all x y z.((Metal(x) & IronOxide(y) & Surface(z) & Contains(x,y) & Contains(x,z)) -> OrangeOnSurface(x,z))", "score": 0}
{"id": "eqasc_validation_1175", "prediction": "all x y.((Metal(x) & ContainsIronOxide(x) & ContainsIronOxide(x)) -> OrangeOnSurface(y))", "score": 0}
{"id": "eqasc_validation_1176", "prediction": "all x.((PresenceOfOxygen(x) & PresenceOfWater(x)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1176", "prediction": "all x.((PresenceOfOxygen(x) & PresenceOfWater(x)) -> IronBecomesOrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1176", "prediction": "all x.((PresenceOfOxygen(x) & PresenceOfWater(x)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1176", "prediction": "all x.((PresenceOfOxygen(x) & PresenceOfWater(x)) -> IronBecomesOrange(x))", "score": 0}
{"id": "eqasc_validation_1176", "prediction": "all x.((PresenceOfOxygen(x) & PresenceOfWater(x)) -> Iron(x))", "score": 0}
{"id": "eqasc_validation_1176", "prediction": "all x.((PresenceOfOxygen(x) & PresenceOfWater(x) & PresenceOfOxygen(x)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1176", "prediction": "all x.((PresenceOfOxygen(x) & PresenceOfWater(x)) -> OrangeSurface(x))", "score": 0}
{"id": "eqasc_validation_1176", "prediction": "all x.((PresenceOfOxygen(x) & PresenceOfWater(x) & PresenceOfOxygen(x)) -> IronBecomesOrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1176", "prediction": "all x.((Surface(x) & PresenceOfOxygen(x) & PresenceOfWater(x)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1176", "prediction": "all x.((PresenceOfOxygen(x) & PresenceOfWater(x) & PresenceOfOxygen(x) & PresenceOfWater(x)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1176", "prediction": "all x.((PresenceOfOxygen(x) & PresenceOfWater(x)) -> IronOrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1176", "prediction": "all x y.((PresenceOfOxygen(x) & PresenceOfWater(x) & PresenceOfOxygen(y)) -> IronBecomesOrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1176", "prediction": "all x y z.((Oxygen(x) & Water(y) & PresenceOf(x,y) & PresenceOf(x,z)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1176", "prediction": "all x y.((PresenceOfOxygen(x) & PresenceOfWater(x) & PresenceOfOxygen(y)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1176", "prediction": "all x y z.((Oxygen(x) & Water(y) & PresenceOf(x,y) & PresenceOf(x,z)) -> Iron(x))", "score": 0}
{"id": "eqasc_validation_1176", "prediction": "all x.((Surface(x) & PresenceOfOxygen(x) & PresenceOfWater(x)) -> IronBecomesOrange(x))", "score": 0}
{"id": "eqasc_validation_1177", "prediction": "all x.(Metal(x) -> TurnsToRust(x))", "score": 0}
{"id": "eqasc_validation_1177", "prediction": "all x.(Metal(x) -> TurnsToRose(x))", "score": 0}
{"id": "eqasc_validation_1177", "prediction": "all x y.((Metal(x) & Oxidation(y)) -> TurnsToRust(x,y))", "score": 0}
{"id": "eqasc_validation_1177", "prediction": "all x y.((Metal(x) & Oxidation(y)) -> TurnsToRose(x,y))", "score": 0}
{"id": "eqasc_validation_1177", "prediction": "all x y z.((Metal(x) & Oxidation(y) & Rust(z)) -> TurnsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_1177", "prediction": "all x.((Metal(x) & Oxidation(x)) -> TurnsToRust(x))", "score": 0}
{"id": "eqasc_validation_1177", "prediction": "all x.(Metal(x) -> (TurnsToRust(x) & Oxidation(x)))", "score": 0}
{"id": "eqasc_validation_1177", "prediction": "all x.((Metal(x) & Oxidation(x)) -> TurnsToRose(x))", "score": 0}
{"id": "eqasc_validation_1177", "prediction": "all x y z.((Metal(x) & Oxidation(y) & Rust(z)) -> TurnsTo(x,z))", "score": 0}
{"id": "eqasc_validation_1177", "prediction": "all x.(Metal(x) -> TurnsToRoseThroughOxidation(x))", "score": 0}
{"id": "eqasc_validation_1177", "prediction": "all x y.((Metal(x) & Oxidation(y)) -> TurnsToRoss(x,y))", "score": 0}
{"id": "eqasc_validation_1177", "prediction": "all x.(Metal(x) -> TurnsToRustThroughOxidation(x))", "score": 0}
{"id": "eqasc_validation_1177", "prediction": "all x.(Metal(x) -> (TurnsToRose(x) & Oxidation(x)))", "score": 0}
{"id": "eqasc_validation_1177", "prediction": "all x.(Metal(x) -> TurnsToRoss(x))", "score": 0}
{"id": "eqasc_validation_1177", "prediction": "all x.(Metal(x) -> TurnsToRustViaOxidation(x))", "score": 0}
{"id": "eqasc_validation_1177", "prediction": "all x.(Metal(x) -> TurnsToRoseViaOxidation(x))", "score": 0}
{"id": "eqasc_validation_1178", "prediction": "all x.(Oxidation(x) -> MakesMetalOrange(x))", "score": 0}
{"id": "eqasc_validation_1178", "prediction": "all x y.((Oxidation(x) & MetalOrange(y)) -> MakesOrange(x,y))", "score": 0}
{"id": "eqasc_validation_1178", "prediction": "all x y.((Oxidation(x) & MetalOrange(y)) -> Makes(x,y))", "score": 0}
{"id": "eqasc_validation_1178", "prediction": "all x y z.((Oxidation(x) & MetalOrange(y) & Oxidation(z)) -> Makes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1178", "prediction": "all x y z.((Oxidation(x) & MetalOrange(y) & Oxidation(z)) -> MakesOrange(y,z))", "score": 0}
{"id": "eqasc_validation_1178", "prediction": "all x y z.((Oxidation(x) & MetalOrange(y) & Oxidation(z)) -> MakesOrange(x,y,z))", "score": 0}
{"id": "eqasc_validation_1178", "prediction": "all x y z.((Oxidation(x) & MetalOrange(y) & Oxidation(z)) -> Makes(x,y))", "score": 0}
{"id": "eqasc_validation_1178", "prediction": "all x y z.((Oxidation(x) & MetalOrange(y) & Oxidation(z)) -> MakesMetalOrange(x,y,z))", "score": 0}
{"id": "eqasc_validation_1178", "prediction": "all x.(Oxidation(x) -> MetalOrange(x))", "score": 0}
{"id": "eqasc_validation_1178", "prediction": "all x y z.((Oxidation(x) & MetalOrange(y) & Oxidation(z)) -> MakesOrange(z,y))", "score": 0}
{"id": "eqasc_validation_1178", "prediction": "all x y.((Oxidation(x) & MetalOrange(y)) -> OxidationMakes(x,y))", "score": 0}
{"id": "eqasc_validation_1178", "prediction": "All x y z.((Oxidation(x) & MetalOrange(y) & Oxidation(z)) -> Makes(x,y,z))", "score": -1}
{"id": "eqasc_validation_1178", "prediction": "all x y z.((Oxidation(x) & MetalOrange(y) & Oxidation(z)) -> MakesOrange(x,y))", "score": 0}
{"id": "eqasc_validation_1178", "prediction": "all x y z.((Oxidation(x) & Metal(y) & Oxidation(z)) -> MakesOrange(x,y,z))", "score": 0}
{"id": "eqasc_validation_1178", "prediction": "all x y z.((Oxidation(x) & MetalOrange(y) & Oxidation(z)) -> MakesMetalOrange(y,z))", "score": 0}
{"id": "eqasc_validation_1178", "prediction": "all x y.((Oxidation(x) & MetalOrange(y)) -> MadeOf(x,y))", "score": 0}
{"id": "eqasc_validation_1179", "prediction": "all x.((IronRushes(x) & OrangeOnSurface(x)) -> IronRushes(x))", "score": 0}
{"id": "eqasc_validation_1179", "prediction": "all x y.((IronRushes(x) & Iron(y)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1179", "prediction": "all x y.((Iron(x) & Rusts(x)) -> OrangeOnSurface(y))", "score": 0}
{"id": "eqasc_validation_1179", "prediction": "all x y.((IronRushes(x) & Iron(y)) -> OrangeOnSurface(x,y))", "score": 0}
{"id": "eqasc_validation_1179", "prediction": "all x y.((IronRusts(x) & Iron(y)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1179", "prediction": "all x y z.((Iron(x) & Rusts(x) & Surface(y) & Surface(z)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1179", "prediction": "all x.((IronRusts(x) & OrangeOnSurface(x)) -> IronRusts(x))", "score": 0}
{"id": "eqasc_validation_1179", "prediction": "all x y z.((Iron(x) & Rusts(x) & Surface(y) & Surface(z)) -> Orange(x,y,z))", "score": 0}
{"id": "eqasc_validation_1179", "prediction": "all x y z.((Iron(x) & Rusts(x) & Surface(y) & Surface(z)) -> OrangeOnSurface(x,y,z))", "score": 0}
{"id": "eqasc_validation_1179", "prediction": "all x y.((IronRusts(x) & Iron(y)) -> OrangeOnSurface(x,y))", "score": 0}
{"id": "eqasc_validation_1179", "prediction": "all x y.((Iron(x) & Rusts(x)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1179", "prediction": "all x y.((Iron(x) & Rusts(x)) -> Orange(y))", "score": 0}
{"id": "eqasc_validation_1179", "prediction": "all x y z.((Iron(x) & Rusts(x) & Surface(y) & Surface(z)) -> Orange(x,y))", "score": 0}
{"id": "eqasc_validation_1179", "prediction": "all x y z.((Iron(x) & Rusts(x) & Surface(y) & Iron(z)) -> OrangeOnSurface(x,y,z))", "score": 0}
{"id": "eqasc_validation_1179", "prediction": "all x y z.((Iron(x) & Rusts(x) & Surface(y) & Iron(z)) -> OrangeOnSurface(x,y))", "score": 0}
{"id": "eqasc_validation_1179", "prediction": "all x.((IronRrusts(x) & OrangeOnSurface(x)) -> IronRusts(x))", "score": 0}
{"id": "eqasc_validation_1180", "prediction": "all x.(Steel(x) -> MostUsefulMetal(x))", "score": 0}
{"id": "eqasc_validation_1180", "prediction": "all x.(Steel(x) -> MostUsefulOfMetals(x))", "score": 0}
{"id": "eqasc_validation_1180", "prediction": "all x.(Steel(x) -> MostUsualOfMetals(x))", "score": 0}
{"id": "eqasc_validation_1180", "prediction": "all x.(Steel(x) -> MostUsualMetal(x))", "score": 0}
{"id": "eqasc_validation_1180", "prediction": "all x y.((Steel(x) & Metal(y)) -> MostUseful(x,y))", "score": 0}
{"id": "eqasc_validation_1180", "prediction": "all x.(Steel(x) -> MostUtilOfMetals(x))", "score": 0}
{"id": "eqasc_validation_1180", "prediction": "all x y.((Steel(x) & Metal(y)) -> MostUsual(x,y))", "score": 0}
{"id": "eqasc_validation_1180", "prediction": "all x.((Steel(x) & Metal(y)) -> MostUseful(x,y))", "score": 0}
{"id": "eqasc_validation_1180", "prediction": "all x.(Steel(x) -> MostNecessaryMetal(x))", "score": 0}
{"id": "eqasc_validation_1180", "prediction": "all x.(Steel(x) -> TheMostUsefulMetal(x))", "score": 0}
{"id": "eqasc_validation_1180", "prediction": "all x.(Steel(x) -> MostUsableOfMetals(x))", "score": 0}
{"id": "eqasc_validation_1180", "prediction": "all x.((Steel(x) & MostUsefulMetal(x)) -> MostUsefulMetal(x))", "score": 0}
{"id": "eqasc_validation_1180", "prediction": "all x.((Steel(x) & MostUsefulMetal(x)) -> MostUseful(x))", "score": 0}
{"id": "eqasc_validation_1180", "prediction": "All x.(Steel(x) -> MostUsefulMetal(x))", "score": -1}
{"id": "eqasc_validation_1180", "prediction": "all x.(Stick(x) -> MostUsefulMetal(x))", "score": 0}
{"id": "eqasc_validation_1180", "prediction": "all x y.((Steel(x) & Metal(y)) -> MostUtil(x,y))", "score": 0}
{"id": "eqasc_validation_1181", "prediction": "all x.((Steel(x) & Rusts(x)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1181", "prediction": "all x.((Steel(x) & Ruins(x)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1181", "prediction": "all x y.((Steel(x) & Rusts(x)) -> Orange(y))", "score": 0}
{"id": "eqasc_validation_1181", "prediction": "all x.((Steel(x) & Rust(x)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1181", "prediction": "all x.((Steel(x) & Rotates(x)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1181", "prediction": "all x.(Rose(x) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1181", "prediction": "all x.(RosesSteel(x) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1181", "prediction": "all x.(Roses(x) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1181", "prediction": "all x.((Steel(x) & Rrusts(x)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1181", "prediction": "all x.(RotsSteel(x) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1181", "prediction": "all x y.((Steel(x) & Rusts(x)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1181", "prediction": "all x.(SteelRushes(x) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1181", "prediction": "all x y.((Steel(x) & Rusts(x) & Orange(y)) -> Rusts(x))", "score": 0}
{"id": "eqasc_validation_1181", "prediction": "all x y.((Steel(x) & Rusts(x) & Orange(y)) -> Rusts(x,y))", "score": 0}
{"id": "eqasc_validation_1181", "prediction": "all x y.((Steel(x) & Rusts(x,y)) -> Orange(y))", "score": 0}
{"id": "eqasc_validation_1181", "prediction": "all x.(Rots(x) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1182", "prediction": "all x.((Surface(x) & CastIron(x) & Steel(x)) -> SusceptibleToCorrosion(x))", "score": 0}
{"id": "eqasc_validation_1182", "prediction": "all x.((Surface(x) & CastIron(x) & Steel(x)) -> ResponsiveToCorrosion(x))", "score": 0}
{"id": "eqasc_validation_1182", "prediction": "all x.((Shape(x) & CastIron(x) & Steel(x)) -> SusceptibleToCorrosion(x))", "score": 0}
{"id": "eqasc_validation_1182", "prediction": "all x.((Surface(x) & CastIron(x) & Steel(x)) -> SusceptibleToCorrosionInFormOfRust(x))", "score": 0}
{"id": "eqasc_validation_1182", "prediction": "all x.((Surface(x) & (CastIron(x) | Steel(x))) -> SusceptibleToCorrosion(x))", "score": 0}
{"id": "eqasc_validation_1182", "prediction": "all x.((Surface(x) & CastIsotope(x) & SteelSurface(x)) -> SusceptibleToCorrosion(x))", "score": 0}
{"id": "eqasc_validation_1182", "prediction": "all x.((Surface(x) & CastIron(x) & Steel(x)) -> SusceptibleToCorrosionInRust(x))", "score": 0}
{"id": "eqasc_validation_1182", "prediction": "all x.((Castiron(x) | Steel(x)) -> SusceptibleToCorrosion(x))", "score": 0}
{"id": "eqasc_validation_1182", "prediction": "all x.((Surface(x) & CastIron(x) & Steel(x)) -> (SusceptibleToCorrosion(x) & FormsRust(x)))", "score": 0}
{"id": "eqasc_validation_1182", "prediction": "all x.((Surface(x) & (Castiron(x) | Steel(x))) -> SusceptibleToCorrosion(x))", "score": 0}
{"id": "eqasc_validation_1182", "prediction": "all x.((Shape(x) & CastIron(x) & Steel(x)) -> ResponsiveToCorrosion(x))", "score": 0}
{"id": "eqasc_validation_1182", "prediction": "all x y.((Surface(x) & CastIron(x) & Steel(y)) -> SusceptibleToCorrosion(x,y))", "score": 0}
{"id": "eqasc_validation_1182", "prediction": "all x.((Surface(x) & (CastIron(x) | Steel(x))) -> ResponsiveToCorrosion(x))", "score": 0}
{"id": "eqasc_validation_1182", "prediction": "all x.((Surface(x) & CastIron(x) & SteelSurface(x)) -> SusceptibleToCorrosion(x))", "score": 0}
{"id": "eqasc_validation_1182", "prediction": "all x y.((Surface(x) & CastIron(y) & Steel(y)) -> SusceptibleToCorrosion(x,y))", "score": 0}
{"id": "eqasc_validation_1182", "prediction": "all x.((Surface(x) & CastIron(x) & Steel(x)) -> SensitiveToCorrosion(x))", "score": 0}
{"id": "eqasc_validation_1183", "prediction": "all x.((Surface(x) & CastIron(x) & Steel(x)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1183", "prediction": "all x.((Surface(x) & CastIron(x) & Steel(x)) -> SusceptibleToOrange(x))", "score": 0}
{"id": "eqasc_validation_1183", "prediction": "all x.((Surface(x) & CastIron(x) & Steel(x)) -> SensitiveToOrange(x))", "score": 0}
{"id": "eqasc_validation_1183", "prediction": "all x.((Surface(x) & CastIron(x) & Steel(x)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1183", "prediction": "all x.((Surface(x) & CastIron(x) & Steel(x)) -> BecomesOrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1183", "prediction": "all x y.((Surface(x) & CastIron(x) & Steel(y)) -> (SusceptibleToOrange(x) & OnSurface(x,y)))", "score": 0}
{"id": "eqasc_validation_1183", "prediction": "all x.((Surface(x) & CastIron(x) & Steel(x)) -> BecomesOrange(x))", "score": 0}
{"id": "eqasc_validation_1183", "prediction": "all x y.((Surface(x) & CastIron(x) & Steel(y)) -> (SensitiveToOrange(x) & OnSurface(x,y)))", "score": 0}
{"id": "eqasc_validation_1183", "prediction": "all x y.((Surface(x) & CastIron(x) & Steel(y)) -> (SusceptibleToOrange(x,y) & OnSurface(x,y)))", "score": 0}
{"id": "eqasc_validation_1183", "prediction": "all x.((Surface(x) & CastIron(x) & Steel(x)) -> SusceptibleToOrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1183", "prediction": "all x y.((Surface(x) & CastIron(x) & Steel(y)) -> (SensitiveToOrange(x,y) & OnSurface(x,y)))", "score": 0}
{"id": "eqasc_validation_1183", "prediction": "all x.((Surface(x) & CastIron(x) & Steel(x)) -> SensitiveToOrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1183", "prediction": "all x.((Surface(x) & CastIron(x) & Steel(x)) -> (SusceptibleToOrange(x)))", "score": 0}
{"id": "eqasc_validation_1183", "prediction": "all x y z.((Surface(x) & CastIron(y) & Steel(z)) -> (SusceptibleToOrange(x,y) & OnSurface(x,z)))", "score": 0}
{"id": "eqasc_validation_1183", "prediction": "all x.((Surface(x) & CastIron(x) & Steel(x)) -> (SusceptibleToOrange(x) & OnSurface(x)))", "score": 0}
{"id": "eqasc_validation_1183", "prediction": "all x y z.((Surface(x) & CastIron(y) & Steel(z)) -> (SensitiveToOrange(x,y) & OnSurface(x,z)))", "score": 0}
{"id": "eqasc_validation_1184", "prediction": "all x.(YinMetal(x) -> (SmallMetal(x) & JeweleryMetal(x) & DecorativeMetal(x)))", "score": 0}
{"id": "eqasc_validation_1184", "prediction": "all x.(YinMetal(x) -> (SmallMetal(x) & JeweleryMetal(x) & DecoratorMetal(x)))", "score": 0}
{"id": "eqasc_validation_1184", "prediction": "all x.(YinMetal(x) -> (SmallMetal(x) & JeweleryMetal(x) & DecorationalMetal(x)))", "score": 0}
{"id": "eqasc_validation_1184", "prediction": "all x.(YinMetal(x) -> (SmallMetal(x) | JeweleryMetal(x) | DecorativeMetal(x)))", "score": 0}
{"id": "eqasc_validation_1184", "prediction": "all x.(YinMetal(x) -> (SmallMetal(x) & JeweleryMetal(x) & DecorationMetal(x)))", "score": 0}
{"id": "eqasc_validation_1184", "prediction": "all x.(YinMetal(x) -> (SmallMetal(x) | JeweleryMetal(x) | DecoratorMetal(x)))", "score": 0}
{"id": "eqasc_validation_1184", "prediction": "all x.(YinMetal(x) -> (SmallMetal(x) & JeweleryMetal(x) & DecoratedMetal(x)))", "score": 0}
{"id": "eqasc_validation_1184", "prediction": "all x.(YinMetal(x) -> (SmallMetal(x) & JeweleryMetal(x) & DecoratingMetal(x)))", "score": 0}
{"id": "eqasc_validation_1184", "prediction": "all x.(YinMetal(x) -> (SmallMetal(x) & JeweleryMetal(x) & DelicateMetal(x)))", "score": 0}
{"id": "eqasc_validation_1184", "prediction": "all x.(YinMetal(x) -> (SmallMetal(x) | JeweleryMetal(x) | DecorationalMetal(x)))", "score": 0}
{"id": "eqasc_validation_1184", "prediction": "all x.(YinMetal(x) -> (SmallMetal(x) | JeweleryMetal(x) | DecorationMetal(x)))", "score": 0}
{"id": "eqasc_validation_1184", "prediction": "all x y z.((YinMetal(x) & SmallMetal(y) & JeweleryMetal(z)) -> (SmallMetal(x) & JeweleryMetal(z) & DecorativeMetal(z)))", "score": 0}
{"id": "eqasc_validation_1185", "prediction": "all x.((Jewelry(x) & Rusts(x)) -> MayBecomeOrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1185", "prediction": "all x.((Jewelry(x) & Rusts(x)) -> MayBecomeOrange(x))", "score": 0}
{"id": "eqasc_validation_1185", "prediction": "all x.((Jewelry(x) & Rusts(x)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1185", "prediction": "all x.((Jewelry(x) & Rusts(x)) -> (OrangeOnSurface(x)))", "score": 0}
{"id": "eqasc_validation_1185", "prediction": "all x.((Jewelry(x) & Rusts(x)) -> (BecomesOrangeOnSurface(x)))", "score": 0}
{"id": "eqasc_validation_1185", "prediction": "all x.((Jewelry(x) & Rusts(x)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1185", "prediction": "all x.((Jewelry(x) & Rusts(x)) -> MayBeOrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1185", "prediction": "all x.((Joyage(x) & Rusts(x)) -> MayBecomeOrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1185", "prediction": "all x.((Jewelry(x) & Rusts(x)) -> MayBeOrange(x))", "score": 0}
{"id": "eqasc_validation_1185", "prediction": "all x.((Jewelry(x) & Rusts(x)) -> (BecomesOrange(x)))", "score": 0}
{"id": "eqasc_validation_1185", "prediction": "all x.((Joyage(x) & Rusts(x)) -> MayBecomeOrange(x))", "score": 0}
{"id": "eqasc_validation_1185", "prediction": "all x.((Jewelry(x) & Rusts(x)) -> (Orange(x)))", "score": 0}
{"id": "eqasc_validation_1185", "prediction": "all x.((Jewelry(x) & Rusts(x)) -> BecomesOrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1185", "prediction": "all x y.((Jewelry(x) & Rusts(x)) -> MayBecomeOrangeOnSurface(y))", "score": 0}
{"id": "eqasc_validation_1185", "prediction": "all x y.((Jewelry(x) & Rusts(x)) -> MayBecomeOrange(y))", "score": 0}
{"id": "eqasc_validation_1185", "prediction": "all x.((Jewelry(x) & Ruins(x)) -> MayBecomeOrange(x))", "score": 0}
{"id": "eqasc_validation_1186", "prediction": "all x y.((Water(x) & Injector(y)) -> (CausesPartsToRust(x) & DamagesInjector(y)))", "score": 0}
{"id": "eqasc_validation_1186", "prediction": "all x y.((Water(x) & Injector(y)) -> (CausesPartsToRust(x) & DamagesInjectors(y)))", "score": 0}
{"id": "eqasc_validation_1186", "prediction": "all x.((Water(x) & CausesPartsToRust(x)) -> DamagesInjectors(x))", "score": 0}
{"id": "eqasc_validation_1186", "prediction": "all x y.((Water(x) & Injector(y)) -> (CausesPartsToRosh(x) & DamagesInjector(y)))", "score": 0}
{"id": "eqasc_validation_1186", "prediction": "all x.(Water(x) -> (CausesPartsToRust(x) & DamagesInjectors(x)))", "score": 0}
{"id": "eqasc_validation_1186", "prediction": "all x y.((Water(x) & Injector(y)) -> (CausesPartsToRosh(x) & DamagesInjectors(y)))", "score": 0}
{"id": "eqasc_validation_1186", "prediction": "all x y.((Water(x) & Injector(y)) -> (CausesPartsToRose(x) & DamagesInjector(y)))", "score": 0}
{"id": "eqasc_validation_1186", "prediction": "all x y.((Water(x) & Injector(y)) -> (CausesPartsToRust(x,y) & DamagesInjector(x,y)))", "score": 0}
{"id": "eqasc_validation_1186", "prediction": "all x y.((Water(x) & Injector(y)) -> (CausesPartsToRot(x) & DamagesInjector(y)))", "score": 0}
{"id": "eqasc_validation_1186", "prediction": "all x y.((Water(x) & Injector(y)) -> (CausesPartsToRose(x) & DamagesInjectors(y)))", "score": 0}
{"id": "eqasc_validation_1186", "prediction": "all x.((Water(x) & CausesPartsToRosh(x)) -> DamagesInjectors(x))", "score": 0}
{"id": "eqasc_validation_1186", "prediction": "all x y.((Water(x) & Injector(y)) -> (CausesPartsToRust(x,y) & DamagesInjectors(x,y)))", "score": 0}
{"id": "eqasc_validation_1186", "prediction": "all x y.((Water(x) & Injector(y)) -> (CausesPartsToRust(x) & DamagesInjectors(x)))", "score": 0}
{"id": "eqasc_validation_1186", "prediction": "all x y.((Water(x) & Injector(y)) -> (CausesPartsToRust(x) & DamagesInjector(x)))", "score": 0}
{"id": "eqasc_validation_1186", "prediction": "all x y.((Water(x) & Injector(y)) -> (CausesPartsToRust(x) & Damages(y)))", "score": 0}
{"id": "eqasc_validation_1186", "prediction": "all x y.((Water(x) & Injector(y)) -> (CausesPartsToRot(x) & DamagesInjectors(y)))", "score": 0}
{"id": "eqasc_validation_1187", "prediction": "all x y.((Water(x) & MetalSurface(y)) -> OrangeSurface(x,y))", "score": 0}
{"id": "eqasc_validation_1187", "prediction": "all x y.((Water(x) & MetalSurface(y)) -> Orange(y))", "score": 0}
{"id": "eqasc_validation_1187", "prediction": "all x y.((Water(x) & MetalSurface(y)) -> CausesOrangeSurface(x,y))", "score": 0}
{"id": "eqasc_validation_1187", "prediction": "all x y z.((Water(x) & MetalSurface(y) & MetalSurface(z)) -> CausesToBecomeOrange(x,y,z))", "score": 0}
{"id": "eqasc_validation_1187", "prediction": "all x y.((Water(x) & MetalSurface(y)) -> OrangeSurface(y))", "score": 0}
{"id": "eqasc_validation_1187", "prediction": "all x y z.((Water(x) & MetalSurface(y) & MetalSurface(z)) -> CausesToBecomeOrange(y,z))", "score": 0}
{"id": "eqasc_validation_1187", "prediction": "all x.((Water(x) & MetalSurface(x)) -> OrangeSurface(x))", "score": 0}
{"id": "eqasc_validation_1187", "prediction": "all x.((Water(x) & CausesMetalSurfaceToBecomeOrange(x)) -> CausesMetalSurfaceToBecomeOrange(x))", "score": 0}
{"id": "eqasc_validation_1187", "prediction": "all x y z.((Water(x) & MetalSurface(y) & MetalSurface(z)) -> CausesOrangeSurface(x,y,z))", "score": 0}
{"id": "eqasc_validation_1187", "prediction": "all x.(Water(x) -> CausesMetalSurfaceToBecomeOrange(x))", "score": 0}
{"id": "eqasc_validation_1187", "prediction": "all x y.((Water(x) & MetalSurface(y)) -> CausesToBecomeOrange(x,y))", "score": 0}
{"id": "eqasc_validation_1187", "prediction": "all x y z.((Water(x) & MetalSurface(y) & MetalSurface(z)) -> CausesToBeOrange(x,y,z))", "score": 0}
{"id": "eqasc_validation_1187", "prediction": "all x y.((Water(x) & MetalSurface(y)) -> (CausesOrangeSurface(x,y) & OrangeSurface(y)))", "score": 0}
{"id": "eqasc_validation_1187", "prediction": "all x y.((Water(x) & MetalSurface(y)) -> (CausesOrangeSurface(x,y) & OrangeSurface(x,y)))", "score": 0}
{"id": "eqasc_validation_1187", "prediction": "all x y z.((Water(x) & MetalSurface(y) & Metal(z)) -> CausesToBecomeOrange(y,z))", "score": 0}
{"id": "eqasc_validation_1187", "prediction": "all x y.((Water(x) & MetalSurface(y) & CausesOrangeSurface(x,y)) -> OrangeSurface(y))", "score": 0}
{"id": "eqasc_validation_1188", "prediction": "all x y z.((Sound(x) & Ear(y) & Sound(z) & Reaches(x,y)) -> CanBeHeard(x,z))", "score": 4}
{"id": "eqasc_validation_1188", "prediction": "all x y z w.((Sound(x) & Ear(y) & Ear(z) & Reaches(x,y)) -> CanBeHeard(x,z))", "score": 8}
{"id": "eqasc_validation_1188", "prediction": "all x.((Sound(x) & ReachesEar(x)) -> CanBeHeard(x))", "score": 4}
{"id": "eqasc_validation_1188", "prediction": "all x y z w.((Sound(x) & Ear(y) & Ear(z) & Reaches(x,y)) -> CanBeHeard(x))", "score": 10}
{"id": "eqasc_validation_1188", "prediction": "all x y z w.((Sound(x) & Ear(y) & Sound(z) & Reaches(x,y)) -> CanBeHeard(x,z))", "score": 4}
{"id": "eqasc_validation_1188", "prediction": "all x y z.((Sound(x) & Ear(y) & Ear(z) & Reaches(x,y)) -> CanBeHeard(x,z))", "score": 8}
{"id": "eqasc_validation_1188", "prediction": "all x y z.((Sound(x) & Ear(y) & Reaches(x,y)) -> CanBeHeard(x,z))", "score": 12}
{"id": "eqasc_validation_1188", "prediction": "all x y z w.((Sound(x) & Ear(y) & Ear(z) & Reaches(x,y,z)) -> CanBeHeard(x))", "score": 2}
{"id": "eqasc_validation_1188", "prediction": "all x y z.((Sound(x) & Ear(y) & Sound(z) & Reaches(x,y,z)) -> CanBeHeard(x))", "score": 2}
{"id": "eqasc_validation_1188", "prediction": "all x y z.((Sound(x) & Ear(y) & Reaches(x,y)) -> CanBeHeard(x))", "score": 10}
{"id": "eqasc_validation_1188", "prediction": "all x y z.((Sound(x) & Ear(y) & Sound(z) & Reaches(x,y,z)) -> CanBeHeard(x,y))", "score": 0}
{"id": "eqasc_validation_1188", "prediction": "all x y.((Sound(x) & Ear(y) & Reaches(x,y)) -> CanBeHeard(x))", "score": 10}
{"id": "eqasc_validation_1188", "prediction": "all x y z w.((Sound(x) & Ear(y) & Ear(z) & Reaches(x,y,z)) -> CanBeHeard(x,w))", "score": 0}
{"id": "eqasc_validation_1188", "prediction": "all x y z.((Sound(x) & Ear(y) & Sound(z) & Reaches(x,z)) -> CanBeHeard(x))", "score": 2}
{"id": "eqasc_validation_1188", "prediction": "all x y z.((Sound(x) & Ear(y) & Sound(z) & Reaches(x,y,z)) -> CanBeHeard(x,z))", "score": 0}
{"id": "eqasc_validation_1188", "prediction": "all x y z.((Sound(x) & Ear(y) & Sound(z) & Reaches(x,z)) -> CanBeHeard(x,z))", "score": 0}
{"id": "eqasc_validation_1189", "prediction": "all x y.((SoundWaves(x) & Eardrum(y)) -> CausesVibration(x,y))", "score": 0}
{"id": "eqasc_validation_1189", "prediction": "all x.(SoundWaves(x) -> CausesEardrumVibration(x))", "score": 0}
{"id": "eqasc_validation_1189", "prediction": "all x.(SoundWaves(x) -> CausesEardrumToVibrate(x))", "score": 0}
{"id": "eqasc_validation_1189", "prediction": "all x y.((SoundWaves(x) & Eardrum(y)) -> Vibrate(x,y))", "score": 0}
{"id": "eqasc_validation_1189", "prediction": "all x y.((SoundWaves(x) & Eardrum(y)) -> Vibrates(x,y))", "score": 0}
{"id": "eqasc_validation_1189", "prediction": "all x y z.((SoundWaves(x) & Eardrum(y) & Eardrum(z)) -> CausesVibration(x,y,z))", "score": 0}
{"id": "eqasc_validation_1189", "prediction": "all x.((SoundWaves(x) & EardrumVibration(x)) -> CausesVibration(x))", "score": 0}
{"id": "eqasc_validation_1189", "prediction": "all x y z.((SoundWaves(x) & Eardrum(y) & SoundWaves(z)) -> CausesVibration(x,y,z))", "score": 0}
{"id": "eqasc_validation_1189", "prediction": "all x.((SoundWaves(x) & Eardrum(y)) -> Vibrates(x,y))", "score": 0}
{"id": "eqasc_validation_1189", "prediction": "all x.((SoundWaves(x) & Eardrum(y)) -> Vibrate(x,y))", "score": 0}
{"id": "eqasc_validation_1189", "prediction": "all x y.((SoundWaves(x) & Eardrum(y)) -> (CausesVibration(x,y) | CausesVibration(x,y)))", "score": 0}
{"id": "eqasc_validation_1189", "prediction": "all x y.((SoundWaves(x) & Eardrum(y)) -> (CausesVibration(x,y) & Vibrates(x,y)))", "score": 0}
{"id": "eqasc_validation_1189", "prediction": "all x.((SoundWaves(x) & Eardrum(y)) -> CausesVibration(x,y))", "score": 0}
{"id": "eqasc_validation_1189", "prediction": "all x.((SoundWaves(x) & EardrumVibrates(x)) -> CausesVibration(x))", "score": 0}
{"id": "eqasc_validation_1190", "prediction": "all x.((SonicWaves(x) & CausesEardrumVibration(x)) -> CanHear(x))", "score": 0}
{"id": "eqasc_validation_1190", "prediction": "all x y.((SonicWaves(x) & Eardrum(y) & CausesVibration(x,y)) -> CanHear(x))", "score": 0}
{"id": "eqasc_validation_1190", "prediction": "all x y.((SonicWaves(x) & Eardrum(y)) -> CausesVibration(x,y))", "score": 0}
{"id": "eqasc_validation_1190", "prediction": "all x.((SonicWaves(x) & CausesEardrumToVibrate(x)) -> CanHear(x))", "score": 0}
{"id": "eqasc_validation_1190", "prediction": "all x y.((SonicWaves(x) & Eardrum(y)) -> Vibrate(x,y))", "score": 0}
{"id": "eqasc_validation_1190", "prediction": "all x y.((SonicWaves(x) & Eardrum(y)) -> Vibrates(x,y))", "score": 0}
{"id": "eqasc_validation_1190", "prediction": "all x y.((SonicWaves(x) & Eardrum(y) & CausesVibration(x,y)) -> CanHear(x,y))", "score": 0}
{"id": "eqasc_validation_1190", "prediction": "all x.((SonicWaves(x) & CauseEardrumVibration(x)) -> CanHear(x))", "score": 0}
{"id": "eqasc_validation_1190", "prediction": "all x.((SonicWaves(x) & CausesEardrumVibrating(x)) -> CanHear(x))", "score": 0}
{"id": "eqasc_validation_1190", "prediction": "all x y z.((SonicWaves(x) & Eardrum(y) & SonicWaves(z)) -> CausesVibration(x,y,z))", "score": 0}
{"id": "eqasc_validation_1190", "prediction": "all x y.((SonicWaves(x) & EardrumVibration(y)) -> CanHear(x,y))", "score": 0}
{"id": "eqasc_validation_1190", "prediction": "all x.((SonicWaves(x) & CauseEardrumToVibrate(x)) -> CanHear(x))", "score": 0}
{"id": "eqasc_validation_1190", "prediction": "all x y.((SonicWaves(x) & Eardrum(y)) -> CanHear(x,y))", "score": 0}
{"id": "eqasc_validation_1191", "prediction": "all x.(SharpestSound(x) -> PerceivedInBrain(x))", "score": 0}
{"id": "eqasc_validation_1191", "prediction": "all x y.((SharpestSound(x) & Brain(y)) -> PerceivedIn(x,y))", "score": 0}
{"id": "eqasc_validation_1191", "prediction": "all x.(SharpestSounds(x) -> PerceivedInBrain(x))", "score": 0}
{"id": "eqasc_validation_1191", "prediction": "all x y z.((SharpestSound(x) & Brain(y) & Brain(z)) -> PerceivedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1191", "prediction": "all x.((SharpestSound(x) & PerceivedInBrain(x)) -> PerceivedInBrain(x))", "score": 0}
{"id": "eqasc_validation_1191", "prediction": "all x.(SharpestSound(x) -> PerceivedInBody(x))", "score": 0}
{"id": "eqasc_validation_1191", "prediction": "all x.((SharpestSound(x) & PerceivedInBrain(x)) -> PerceivedInBody(x))", "score": 0}
{"id": "eqasc_validation_1191", "prediction": "all x y.((SharpestSound(x) & Brain(y)) -> Perceived(x,y))", "score": 0}
{"id": "eqasc_validation_1191", "prediction": "all x.((Sound(x) & Sharpest(x)) -> PerceivedInBrain(x))", "score": 0}
{"id": "eqasc_validation_1191", "prediction": "all x.((SharpestSound(x) & PerceivedInBody(x)) -> PerceivedInBrain(x))", "score": 0}
{"id": "eqasc_validation_1191", "prediction": "all x y z.((SharpestSound(x) & Brain(y) & Brain(z)) -> Perceived(x,y,z))", "score": 0}
{"id": "eqasc_validation_1191", "prediction": "all x y z.((SharpestSound(x) & Brain(y) & Brain(z)) -> PerceivedIn(x,y))", "score": 0}
{"id": "eqasc_validation_1191", "prediction": "all x.((SharpestSound(x) & PerceivedInBody(x)) -> PerceivedInBody(x))", "score": 0}
{"id": "eqasc_validation_1191", "prediction": "exists x.(SharpestSound(x) & PerceivedInBrain(x))", "score": 0}
{"id": "eqasc_validation_1191", "prediction": "all x.(SharpestSounds(x) -> PerceivedInBody(x))", "score": 0}
{"id": "eqasc_validation_1192", "prediction": "all x y.((Noise(x) & Brain(y) & Reaches(x,y)) -> Processed(x))", "score": 0}
{"id": "eqasc_validation_1192", "prediction": "all x.((Noise(x) & ReachesBrain(x)) -> Processed(x))", "score": 0}
{"id": "eqasc_validation_1192", "prediction": "all x y z.((Noise(x) & Brain(y) & Brain(z) & Reaches(x,y,z)) -> Processed(x))", "score": 0}
{"id": "eqasc_validation_1192", "prediction": "all x y.((Noise(x) & Brain(y) & Reaches(x,y)) -> Processed(x,y))", "score": 0}
{"id": "eqasc_validation_1192", "prediction": "all x y.((Noise(x) & Brain(y) & Reaches(x,y)) -> ProcessedWhenReaches(x,y))", "score": 0}
{"id": "eqasc_validation_1192", "prediction": "all x.((Noise(x) & reachesBrain(x)) -> Processed(x))", "score": 0}
{"id": "eqasc_validation_1192", "prediction": "all x y z.((Noise(x) & Brain(y) & Brain(z)) -> ProcessedWhenReaches(x,y,z))", "score": 0}
{"id": "eqasc_validation_1192", "prediction": "all x y.((Noise(x) & Brain(y)) -> ProcessedWhenReaches(x,y))", "score": 0}
{"id": "eqasc_validation_1192", "prediction": "all x y z.((Noise(x) & Brain(y) & Brain(z) & Reaches(x,y,z)) -> ProcessedWhenReaches(x,y,z))", "score": 0}
{"id": "eqasc_validation_1192", "prediction": "all x y z.((Noise(x) & Brain(y) & Brain(z) & Reaches(x,y,z)) -> Processed(x,y,z))", "score": 0}
{"id": "eqasc_validation_1192", "prediction": "all x y z.((Noise(x) & Brain(y) & Brain(z) & Reaches(x,y)) -> Processed(x))", "score": 0}
{"id": "eqasc_validation_1192", "prediction": "all x y z.((Noise(x) & Brain(y) & Brain(z) & Reaches(x,y,z)) -> Processed(x,y))", "score": 0}
{"id": "eqasc_validation_1192", "prediction": "all x y.((Noise(x) & Brain(y)) -> Processed(x,y))", "score": 0}
{"id": "eqasc_validation_1192", "prediction": "all x y z.((Noise(x) & Brain(y) & Brain(z) & Reaches(x,y)) -> Processed(x,z))", "score": 0}
{"id": "eqasc_validation_1192", "prediction": "all x y.((Noise(x) & Brain(y) & reaches(x,y)) -> Processed(x))", "score": 0}
{"id": "eqasc_validation_1192", "prediction": "all x.((Noise(x) & Brain(x)) -> Processed(x))", "score": 0}
{"id": "eqasc_validation_1193", "prediction": "all x.(Sound(x) -> UsesSenseOfHearing(x))", "score": 0}
{"id": "eqasc_validation_1193", "prediction": "all x.(SenseOfHearing(x) -> UsedForSound(x))", "score": 0}
{"id": "eqasc_validation_1193", "prediction": "all x.((SenseOfHearing(x) & Sound(x)) -> Used(x))", "score": 0}
{"id": "eqasc_validation_1193", "prediction": "all x y.((SenseOfHearing(x) & Sound(y)) -> Used(x,y))", "score": 0}
{"id": "eqasc_validation_1193", "prediction": "all x.((SenseOfHearing(x) & UsedForSound(x)) -> UsedForSound(x))", "score": 0}
{"id": "eqasc_validation_1193", "prediction": "all x y.((SenseOfHearing(x) & Sound(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1193", "prediction": "all x.((Sound(x) & UsesSenseOfHearing(x)) -> UsesSenseOfHearing(x))", "score": 0}
{"id": "eqasc_validation_1193", "prediction": "all x.((SenseOfHearing(x) & ForSound(x)) -> Used(x))", "score": 0}
{"id": "eqasc_validation_1193", "prediction": "all x.((SenseOfHearing(x) & UsedForSound(x)) -> UsedForHearing(x))", "score": 0}
{"id": "eqasc_validation_1193", "prediction": "all x y.((SenseOfHearing(x) & Sound(y)) -> Used(x))", "score": 0}
{"id": "eqasc_validation_1193", "prediction": "all x.((SenseOfHearing(x)) -> UsedForSound(x))", "score": 0}
{"id": "eqasc_validation_1193", "prediction": "all x.(Sound(x) -> UsedSenseOfHearing(x))", "score": 0}
{"id": "eqasc_validation_1194", "prediction": "all x.(Ears(x) -> UsedForHearing(x))", "score": 0}
{"id": "eqasc_validation_1194", "prediction": "all x y.((Ears(x) & Hearing(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1194", "prediction": "all x y z.((Ears(x) & Hearing(y) & Hearing(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1194", "prediction": "all x.(Ear(x) -> UsedForHearing(x))", "score": 0}
{"id": "eqasc_validation_1194", "prediction": "all x y.((Ear(x) & Hearing(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1194", "prediction": "all x y z.((Ear(x) & Hearing(y) & Hearing(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1194", "prediction": "all x.((Ears(x) & UsedForHearing(x)) -> UsedForHearing(x))", "score": 0}
{"id": "eqasc_validation_1194", "prediction": "all x y.((Ear(x) & Ear(y)) -> UsedForHearing(x,y))", "score": 0}
{"id": "eqasc_validation_1194", "prediction": "all x y.((Ears(x) & Hearing(y) & UsedFor(x,y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1194", "prediction": "all x.(Ears(x) -> (UsedForHearing(x) & UsedForHearing(x)))", "score": 0}
{"id": "eqasc_validation_1194", "prediction": "all x y.((Ears(x) & Hearing(y)) -> UsedForHearing(x,y))", "score": 0}
{"id": "eqasc_validation_1194", "prediction": "all x y z.((Ears(x) & Hearing(y) & Hearing(z)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1194", "prediction": "all x y z.((Ear(x) & Ear(y) & Hearing(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1194", "prediction": "all x y z.((Ear(x) & Hearing(y) & Hearing(z)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1194", "prediction": "all x y.((Ears(x) & Auditory(y)) -> UsedForHearing(x,y))", "score": 0}
{"id": "eqasc_validation_1194", "prediction": "all x.(Ear(x) -> (UsedForHearing(x) & UsedForHearing(x)))", "score": 0}
{"id": "eqasc_validation_1195", "prediction": "all x y.((SoundWaves(x) & EarDrum(y)) -> Vibrate(x,y))", "score": 0}
{"id": "eqasc_validation_1195", "prediction": "all x.(SoundWaves(x) -> MakesEarDrumVibrate(x))", "score": 0}
{"id": "eqasc_validation_1195", "prediction": "all x y.((SoundWaves(x) & EarDrum(y)) -> Vibrates(x,y))", "score": 0}
{"id": "eqasc_validation_1195", "prediction": "all x y z.((SoundWaves(x) & EarDrum(y) & Vibrate(z)) -> Makes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1195", "prediction": "all x y.((SoundWaves(x) & EarDrum(y)) -> Vibrate(y))", "score": 0}
{"id": "eqasc_validation_1195", "prediction": "all x y z.((SoundWaves(x) & EarDrum(y) & Vibrate(z)) -> MakesVibrate(x,y,z))", "score": 0}
{"id": "eqasc_validation_1195", "prediction": "all x.(SoundWaves(x) -> MakeEarDrumVibrate(x))", "score": 0}
{"id": "eqasc_validation_1195", "prediction": "all x.((SoundWaves(x) & EarDrumVibrate(x)) -> MakesVibrate(x))", "score": 0}
{"id": "eqasc_validation_1195", "prediction": "all x y.((SoundWaves(x) & EarDrum(y)) -> MakesVibrate(x,y))", "score": 0}
{"id": "eqasc_validation_1195", "prediction": "all x.((SoundWaves(x) & EarDrum(y)) -> Vibrate(x,y))", "score": 0}
{"id": "eqasc_validation_1195", "prediction": "all x.((SoundWaves(x) & EarDrum(y)) -> Vibrates(x,y))", "score": 0}
{"id": "eqasc_validation_1195", "prediction": "all x y.((SoundWaves(x) & EarDrum(y)) -> Vibrates(y))", "score": 0}
{"id": "eqasc_validation_1195", "prediction": "all x.(SoundWaves(x) -> VibrateEarDrum(x))", "score": 0}
{"id": "eqasc_validation_1195", "prediction": "all x.(SoundWaves(x) -> MakesEardrumVibrate(x))", "score": 0}
{"id": "eqasc_validation_1196", "prediction": "all x.((Wave(x) & ReachesEar(x)) -> (EarDrumVibration(x) & CanHear(x)))", "score": 0}
{"id": "eqasc_validation_1196", "prediction": "all x y z.((Wave(x) & Ear(y) & EarDrum(z) & Reaches(x,y)) -> (Vibrates(x,z) & CanHear(x,y)))", "score": 0}
{"id": "eqasc_validation_1196", "prediction": "all x y z.((Wave(x) & Ear(y) & EarDrum(z) & Reaches(x,y)) -> (Vibrates(z,y) & CanHear(z,y)))", "score": 0}
{"id": "eqasc_validation_1196", "prediction": "all x y z.((Wave(x) & Ear(y) & EarDrum(z)) -> (Reaches(x,y) & Vibrates(x,z) & CanHear(x,y)))", "score": 0}
{"id": "eqasc_validation_1196", "prediction": "all x y z.((Wave(x) & Ear(y) & EarDrum(z)) -> (Reaches(x,y) & Vibrates(z,y) & CanHear(z,y)))", "score": 0}
{"id": "eqasc_validation_1196", "prediction": "all x.((Wave(x) & ReachesEar(x)) -> (EarDrumVibrates(x) & CanHear(x)))", "score": 0}
{"id": "eqasc_validation_1196", "prediction": "all x y z.((Wave(x) & Ear(y) & Eardrum(z)) -> (Reaches(x,y) & Vibrates(x,z) & CanHear(x,y)))", "score": 0}
{"id": "eqasc_validation_1196", "prediction": "all x y z.((Wave(x) & Ear(y) & EarDrum(z) & Reaches(x,y)) -> (Vibrates(z) & CanHear(z,y)))", "score": 0}
{"id": "eqasc_validation_1196", "prediction": "all x y z.((Wave(x) & Ear(y) & Eardrum(z) & Reaches(x,y)) -> (Vibrates(z,y) & CanHear(z,y)))", "score": 0}
{"id": "eqasc_validation_1196", "prediction": "all x y z.((Wave(x) & Ear(y) & Eardrum(z) & Reaches(x,y)) -> (Vibrates(x,z) & CanHear(x,y)))", "score": 0}
{"id": "eqasc_validation_1196", "prediction": "all x y.((Wave(x) & Ear(y)) -> (Reaches(x,y) & EarDrumVibration(x) & CanHear(x,y)))", "score": 0}
{"id": "eqasc_validation_1196", "prediction": "all x y z.((Wave(x) & Ear(y) & EarDrum(z)) -> (Reaches(x,y) & Vibrates(z) & CanHear(z,y)))", "score": 0}
{"id": "eqasc_validation_1196", "prediction": "all x y z.((Wave(x) & Ear(y) & EarDrum(z)) -> (Reaches(x,y) & Vibrates(z,y) & CanHear(x,z)))", "score": 0}
{"id": "eqasc_validation_1197", "prediction": "(all x.(Music(x) -> Sound(x)) & all y.(Sound(y) -> Energy(y)))", "score": 38}
{"id": "eqasc_validation_1197", "prediction": "all x y.((Music(x) & Sound(y)) -> (IsSound(x) & IsEnergy(y)))", "score": 0}
{"id": "eqasc_validation_1197", "prediction": "all x y.((Music(x) & Sound(y)) -> (Sound(x) & Energy(y)))", "score": 0}
{"id": "eqasc_validation_1197", "prediction": "all x.(Music(x) -> (Sound(x) | Energy(x)))", "score": 0}
{"id": "eqasc_validation_1197", "prediction": "all x.(Music(x) -> (Sound(x) & Energy(x)))", "score": 38}
{"id": "eqasc_validation_1197", "prediction": "all x y z.((Music(x) & Sound(y) & Energy(z)) -> (IsSound(x) & IsSound(y)))", "score": 0}
{"id": "eqasc_validation_1197", "prediction": "(all x.(Music(x) -> Sound(x)) & all y.(Sound(y) -> Energy(y))))", "score": -1}
{"id": "eqasc_validation_1197", "prediction": "all x y.((Music(x) & Sound(y)) -> (Is(x,y) & Is(x,y)))", "score": 0}
{"id": "eqasc_validation_1197", "prediction": "all x y.((Music(x) & Sound(y)) -> (IsSound(x) | IsEnergy(y)))", "score": 0}
{"id": "eqasc_validation_1197", "prediction": "all x y.((Music(x) & Sound(y)) -> (IsSound(x,y) & IsEnergy(y)))", "score": 0}
{"id": "eqasc_validation_1197", "prediction": "all x.(Music(x) -> (IsSound(x) & IsEnergy(x)))", "score": 0}
{"id": "eqasc_validation_1197", "prediction": "all x y.((Music(x) & Sound(y)) -> (Sound(x) | Energy(y)))", "score": 0}
{"id": "eqasc_validation_1197", "prediction": "all x y z.((Music(x) & Sound(y) & Energy(z)) -> (IsSound(x) & IsSound(y,z)))", "score": 0}
{"id": "eqasc_validation_1197", "prediction": "all x y z.((Music(x) & Sound(y) & Energy(z)) -> (IsSound(x,y) & IsSound(y,z)))", "score": 0}
{"id": "eqasc_validation_1197", "prediction": "all x y.((Music(x) & Sound(y)) -> (Son(x) & Energy(y)))", "score": 0}
{"id": "eqasc_validation_1197", "prediction": "all x y z.((Music(x) & Sound(y) & Energy(z)) -> (IsSound(x) | IsSound(y)))", "score": 0}
{"id": "eqasc_validation_1198", "prediction": "all x y.((Music(x) & Ear(y) & Reaches(x,y)) -> MusicCanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1198", "prediction": "all x y z.((Music(x) & Ear(y) & Music(z) & Reaches(x,y)) -> MusicCanBeHeard(x,z))", "score": 0}
{"id": "eqasc_validation_1198", "prediction": "all x y z.((Music(x) & Ear(y) & Music(z) & Reaches(x,y)) -> CanBeHeard(x,z))", "score": 6}
{"id": "eqasc_validation_1198", "prediction": "all x y z.((Music(x) & Ear(y) & Ear(z) & Reaches(x,y)) -> MusicCanBeHeard(x,z))", "score": 0}
{"id": "eqasc_validation_1198", "prediction": "all x y.((Music(x) & Ear(y) & Reaches(x,y)) -> MusicCanBeHeard(x,y))", "score": 0}
{"id": "eqasc_validation_1198", "prediction": "all x y.((Music(x) & Ear(y) & Reaches(x,y)) -> CanBeHeard(x,y))", "score": 6}
{"id": "eqasc_validation_1198", "prediction": "all x.((Music(x) & ReachesEar(x)) -> MusicCanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1198", "prediction": "all x y.((Music(x) & ReachesEar(x)) -> MusicCanBeHeard(y))", "score": 0}
{"id": "eqasc_validation_1198", "prediction": "all x y.((Music(x) & Ear(y) & Reaches(x,y)) -> CanBeHeard(x))", "score": 6}
{"id": "eqasc_validation_1198", "prediction": "all x y z.((Music(x) & Ear(y) & Ear(z) & Reaches(x,y)) -> CanBeHeard(x,z))", "score": 6}
{"id": "eqasc_validation_1198", "prediction": "all x y z.((Music(x) & Ear(y) & Ear(z) & Reaches(x,y,z)) -> MusicCanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1198", "prediction": "all x.((MusicReachesEar(x) & MusicCanBeHeard(x)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1198", "prediction": "all x.((MusicReachesEar(x) & MusicCanBeHeard(x)) -> MusicCanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1198", "prediction": "all x y z.((Music(x) & Ear(y) & Ear(z) & Reaches(x,y)) -> MusicCanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1198", "prediction": "all x y z.((Music(x) & Ear(y) & Ear(z) & Reaches(x,z)) -> MusicCanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1198", "prediction": "all x.((MusicReachesEar(x) & ReachesEar(x)) -> MusicCanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1199", "prediction": "all x.((MusicReachesEar(x) & ReachesEar(x)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1199", "prediction": "all x.((Music(x) & ReachesEar(x)) -> CanBeHeard(x))", "score": 2}
{"id": "eqasc_validation_1199", "prediction": "all x y.((Music(x) & Ear(y) & Reaches(x,y)) -> CanBeHeard(x))", "score": 6}
{"id": "eqasc_validation_1199", "prediction": "all x y z.((Music(x) & Ear(y) & Ear(z) & Reaches(x,y)) -> CanBeHeard(x,z))", "score": 6}
{"id": "eqasc_validation_1199", "prediction": "all x y.((Music(x) & ReachesEar(x)) -> CanBeHeard(y))", "score": 0}
{"id": "eqasc_validation_1199", "prediction": "all x y z.((Music(x) & Ear(y) & Ear(z) & Reaches(x,y)) -> CanBeHeard(x))", "score": 6}
{"id": "eqasc_validation_1199", "prediction": "all x y z.((Music(x) & Ear(y) & Ear(z) & Reaches(x,y,z)) -> CanBeHeard(x))", "score": 2}
{"id": "eqasc_validation_1199", "prediction": "all x y z.((Music(x) & Ear(y) & Music(z) & Reaches(x,y)) -> CanBeHeard(x,z))", "score": 6}
{"id": "eqasc_validation_1199", "prediction": "all x y z.((Music(x) & Ear(y) & Music(z) & Reaches(x,z)) -> CanBeHeard(x))", "score": 2}
{"id": "eqasc_validation_1199", "prediction": "all x y.((Music(x) & ReachesEar(x,y)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1199", "prediction": "all x y.((Music(x) & Ear(y) & Reaches(x,y)) -> CanBeHeard(x,y))", "score": 6}
{"id": "eqasc_validation_1199", "prediction": "all x y z.((Music(x) & Ear(y) & Ear(z) & Reaches(x,z)) -> CanBeHeard(x))", "score": 6}
{"id": "eqasc_validation_1199", "prediction": "all x y z.((Music(x) & Ear(y) & Music(z) & Reaches(x,y)) -> CanBeHeard(x))", "score": 6}
{"id": "eqasc_validation_1199", "prediction": "all x y.((Music(x) & Music(y) & ReachesEar(x,y)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1199", "prediction": "all x y z.((Music(x) & Ear(y) & Music(z) & Reaches(x,y,z)) -> CanBeHeard(x))", "score": 2}
{"id": "eqasc_validation_1199", "prediction": "all x y.((Music(x) & ReachesEar(x)) -> CanBeHeard(x))", "score": 2}
{"id": "eqasc_validation_1200", "prediction": "all x.(Music(x) -> SoundProducedByVibrations(x))", "score": 0}
{"id": "eqasc_validation_1200", "prediction": "all x.(Music(x) -> ProducedByVibrations(x))", "score": 0}
{"id": "eqasc_validation_1200", "prediction": "all x.(Music(x) -> (ProducedByVibrations(x) & ProducedByVibrations(x)))", "score": 0}
{"id": "eqasc_validation_1200", "prediction": "all x.(Music(x) -> (exists y.(Vibration(y) & ProducedBy(x,y))))", "score": 0}
{"id": "eqasc_validation_1200", "prediction": "all x.(Music(x) -> (SoundProducedByVibrations(x)))", "score": 0}
{"id": "eqasc_validation_1200", "prediction": "all x.(Music(x) -> (ProducedByVibrations(x) & Sound(x)))", "score": 0}
{"id": "eqasc_validation_1200", "prediction": "all x.(Music(x) -> (ProducedByVibrations(x) & SoundProducedByVibrations(x)))", "score": 0}
{"id": "eqasc_validation_1200", "prediction": "all x.(Music(x) -> exists y.(Vibration(y) & ProducedBy(x,y))))", "score": -1}
{"id": "eqasc_validation_1200", "prediction": "all x y.((Music(x) & Vibration(y)) -> ProducedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1200", "prediction": "all x y.((Music(x) & Vibrations(y)) -> SoundProducedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1200", "prediction": "all x.(Music(x) -> exists y.(Vibration(y) & ProducedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1200", "prediction": "all x y.((Music(x) & Vibrations(y)) -> ProducesSound(x,y))", "score": 0}
{"id": "eqasc_validation_1200", "prediction": "all x y.((Music(x) & Vibrations(y)) -> ProducedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1200", "prediction": "all x.(Music(x) -> (exists y.(Vibration(y) & ProducedBy(x,y)))))", "score": -1}
{"id": "eqasc_validation_1200", "prediction": "all x.(Music(x) -> VibrationsProducedSound(x))", "score": 0}
{"id": "eqasc_validation_1201", "prediction": "all x.((VibrationsReachEar(x)) -> MusicCanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1201", "prediction": "all x.((VibrationsReachesEar(x)) -> MusicCanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1201", "prediction": "all x.((Vibrations(x) & ReachEar(x)) -> MusicCanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1201", "prediction": "all x y.((Vibration(x) & Ear(y) & Reaches(x,y)) -> MusicCanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1201", "prediction": "all x y.((Vibration(x) & Ear(y)) -> CanBeHeard(x,y))", "score": 0}
{"id": "eqasc_validation_1201", "prediction": "all x y.((Vibration(x) & Ear(y) & Reaches(x,y)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1201", "prediction": "all x y.((Vibrations(x) & Ear(y) & Reach(x,y)) -> MusicCanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1201", "prediction": "all x y.((Vibrations(x) & Ear(y)) -> CanBeHeard(x,y))", "score": 0}
{"id": "eqasc_validation_1201", "prediction": "all x y.((Vibration(x) & Ear(y) & Reach(x,y)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1201", "prediction": "all x y.((Vibrations(x) & Ear(y) & Reach(x,y)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1201", "prediction": "all x y.((Vibration(x) & Ear(y) & Reach(x,y)) -> MusicCanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1201", "prediction": "all x y.((Vibration(x) & Ear(y) & ReachEar(x,y)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1201", "prediction": "all x y.((Vibration(x) & Ear(y) & Reaches(x,y)) -> CanBeHeard(x,y))", "score": 0}
{"id": "eqasc_validation_1201", "prediction": "all x.((Vibrations(x) & ReachEar(x)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1201", "prediction": "all x.((VibrationsReachEar(x) & MusicCanBeHeard(x)) -> VibrationsReachEar(x))", "score": 0}
{"id": "eqasc_validation_1201", "prediction": "all x y.((Vibration(x) & Ear(y) & ReachEar(x,y)) -> MusicCanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1202", "prediction": "all x.(OtoacousticEmissions(x) -> GeneratesSounds(x))", "score": 0}
{"id": "eqasc_validation_1202", "prediction": "all x.(OtoacousticEmissions(x) -> SoundsEarGenerates(x))", "score": 0}
{"id": "eqasc_validation_1202", "prediction": "all x.(OtoacousticEmission(x) -> GeneratesSounds(x))", "score": 0}
{"id": "eqasc_validation_1202", "prediction": "all x y.((OtoacousticEmission(x) & Ear(y)) -> GeneratesSounds(x,y))", "score": 0}
{"id": "eqasc_validation_1202", "prediction": "all x y.((OtoacousticEmission(x) & Ear(y)) -> GeneratesSound(x,y))", "score": 0}
{"id": "eqasc_validation_1202", "prediction": "all x.(OtoacousticEmission(x) -> SoundsEarGenerates(x))", "score": 0}
{"id": "eqasc_validation_1202", "prediction": "all x.(OtoacousticEmissions(x) -> SoundEarGenerates(x))", "score": 0}
{"id": "eqasc_validation_1202", "prediction": "all x.(OtoacousticEmissions(x) -> GeneratesSound(x))", "score": 0}
{"id": "eqasc_validation_1202", "prediction": "all x.(OtoacousticEmissions(x) -> (SoundsEarGenerates(x)))", "score": 0}
{"id": "eqasc_validation_1202", "prediction": "all x.(OtoacousticEmission(x) -> GeneratesSound(x))", "score": 0}
{"id": "eqasc_validation_1202", "prediction": "all x y.((OtoacousticEmissions(x) & Ear(y)) -> GeneratesSounds(x,y))", "score": 0}
{"id": "eqasc_validation_1202", "prediction": "all x.(OtoacousticEmission(x) -> SoundEarGenerates(x))", "score": 0}
{"id": "eqasc_validation_1202", "prediction": "all x y.((OtoacousticEmissions(x) & Ear(y)) -> GeneratesSound(x,y))", "score": 0}
{"id": "eqasc_validation_1202", "prediction": "all x.(OtoacousticEmission(x) -> (SoundsEarGenerates(x)))", "score": 0}
{"id": "eqasc_validation_1202", "prediction": "all x y.((OtoacousticEmission(x) & Ear(y)) -> Generates(x,y))", "score": 0}
{"id": "eqasc_validation_1202", "prediction": "all x.(OtoacousticEmission(x) -> (Sound(x) & Generates(x)))", "score": 0}
{"id": "eqasc_validation_1203", "prediction": "all x.((Vibration(x) & ReachesEar(x) & MakesNoise(x)) -> Otoacoustic(x))", "score": 0}
{"id": "eqasc_validation_1203", "prediction": "all x.((Vibrations(x) & ReachEar(x) & MakeNoise(x)) -> Otoacoustic(x))", "score": 0}
{"id": "eqasc_validation_1203", "prediction": "all x.((Vibration(x) & ReachEar(x) & MakeNoise(x)) -> Otoacoustic(x))", "score": 0}
{"id": "eqasc_validation_1203", "prediction": "all x.((Vibrations(x) & ReachEarToMakeNoise(x)) -> Otoacoustic(x))", "score": 0}
{"id": "eqasc_validation_1203", "prediction": "all x.((Vibration(x) & ReachEarToMakeNoise(x)) -> Otoacoustic(x))", "score": 0}
{"id": "eqasc_validation_1203", "prediction": "all x.((Vibration(x) & ReachesEarToMakeNoise(x)) -> Otoacoustic(x))", "score": 0}
{"id": "eqasc_validation_1203", "prediction": "all x y.((Vibration(x) & Ear(y) & Reaches(x,y) & MakesNoise(x)) -> Otoacoustic(x))", "score": 0}
{"id": "eqasc_validation_1203", "prediction": "all x y.((Vibration(x) & Ear(y) & ReachesToMakeNoise(x,y)) -> Otoacoustic(x))", "score": 0}
{"id": "eqasc_validation_1203", "prediction": "all x.((Vibrations(x) & ReachesEar(x) & MakesNoise(x)) -> Otoacoustic(x))", "score": 0}
{"id": "eqasc_validation_1203", "prediction": "all x y.((Vibration(x) & Ear(y) & Reaches(x,y)) -> Otoacoustic(x))", "score": 0}
{"id": "eqasc_validation_1203", "prediction": "all x y.((Vibration(x) & Ear(y) & Reaches(x,y) & MakesNoise(x,y)) -> Otoacoustic(x))", "score": 0}
{"id": "eqasc_validation_1203", "prediction": "all x y z.((Vibration(x) & Ear(y) & Ear(z) & ReachesToMakeNoise(x,y,z)) -> Otoacoustic(x))", "score": 0}
{"id": "eqasc_validation_1203", "prediction": "all x.((Vibrations(x) & ReachesEarToMakeNoise(x)) -> Otoacoustic(x))", "score": 0}
{"id": "eqasc_validation_1203", "prediction": "all x y.((Vibration(x) & Ear(y) & MakesNoise(x,y)) -> Otoacoustic(x))", "score": 0}
{"id": "eqasc_validation_1203", "prediction": "all x y.((Vibration(x) & Ear(y) & Reaches(x,y) & MakesNoise(x)) -> OtoacousticVibration(x))", "score": 0}
{"id": "eqasc_validation_1203", "prediction": "all x.((Vibration(x) & ReachesEar(x) & MakesNoise(x)) -> OtoacousticVibration(x))", "score": 0}
{"id": "eqasc_validation_1204", "prediction": "all x.((Vibrations(x) & ReachEars(x)) -> ChangedIntoSounds(x))", "score": 0}
{"id": "eqasc_validation_1204", "prediction": "all x.((Vibrations(x) & ReachesEars(x)) -> ChangedIntoSounds(x))", "score": 0}
{"id": "eqasc_validation_1204", "prediction": "all x y.((Vibrations(x) & Ears(y) & Reach(x,y)) -> ChangedIntoSounds(x))", "score": 0}
{"id": "eqasc_validation_1204", "prediction": "all x.((Vibrations(x) & ReachOurEars(x)) -> ChangedIntoSounds(x))", "score": 0}
{"id": "eqasc_validation_1204", "prediction": "all x y.((Vibration(x) & Ear(y) & Reaches(x,y)) -> ChangedIntoSounds(x))", "score": 0}
{"id": "eqasc_validation_1204", "prediction": "all x y.((Vibrations(x) & Ears(y)) -> ChangedIntoSounds(x,y))", "score": 0}
{"id": "eqasc_validation_1204", "prediction": "all x y.((Vibrations(x) & Ears(y) & Reach(x,y)) -> ChangedIntoSounds(x,y))", "score": 0}
{"id": "eqasc_validation_1204", "prediction": "all x y.((Vibration(x) & Ears(y) & Reach(x,y)) -> ChangedIntoSounds(x))", "score": 0}
{"id": "eqasc_validation_1204", "prediction": "all x y.((Vibration(x) & Ears(y) & Reaches(x,y)) -> ChangedIntoSounds(x))", "score": 0}
{"id": "eqasc_validation_1204", "prediction": "all x.((Vibrations(x) & ReachedEars(x)) -> ChangedIntoSounds(x))", "score": 0}
{"id": "eqasc_validation_1204", "prediction": "all x y.((Vibration(x) & Ear(y) & Reaches(x,y)) -> ChangedIntoSound(x))", "score": 0}
{"id": "eqasc_validation_1204", "prediction": "all x.((Vibrations(x) & ReachEars(x)) -> ChangedToSounds(x))", "score": 0}
{"id": "eqasc_validation_1204", "prediction": "all x.((Vibration(x) & ReachesEars(x)) -> ChangedIntoSounds(x))", "score": 0}
{"id": "eqasc_validation_1204", "prediction": "all x.((Vibrations(x) & ReachEars(x)) -> ChangedIntoSound(x))", "score": 0}
{"id": "eqasc_validation_1204", "prediction": "all x y.((Vibration(x) & Ear(y) & Reaches(x,y)) -> ChangedIntoSounds(x,y))", "score": 0}
{"id": "eqasc_validation_1204", "prediction": "all x y.((Vibrations(x) & Ears(y) & Reach(x,y)) -> ChangedIntoSound(x))", "score": 0}
{"id": "eqasc_validation_1205", "prediction": "all x.((Vibrations(x) & ReachEars(x)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1205", "prediction": "all x y.((Vibration(x) & Ear(y) & Reaches(x,y)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1205", "prediction": "all x.((Vibration(x) & ReachEars(x)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1205", "prediction": "all x.((Vibrations(x) & ReachOurEars(x)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1205", "prediction": "all x.((Vibration(x) & ReachesEars(x)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1205", "prediction": "all x y.((Vibration(x) & Ear(y)) -> CanBeHeard(x,y))", "score": 0}
{"id": "eqasc_validation_1205", "prediction": "all x y.((Vibration(x) & Ears(y) & Reach(x,y)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1205", "prediction": "all x y.((Vibration(x) & Ear(y) & Reach(x,y)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1205", "prediction": "all x.((VibrationsReachesEars(x)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1205", "prediction": "all x.((Vibrations(x) & ReachesEars(x)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1205", "prediction": "all x y.((Vibration(x) & Ears(y)) -> CanBeHeard(x,y))", "score": 0}
{"id": "eqasc_validation_1205", "prediction": "all x y.((Vibration(x) & Ear(y)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1205", "prediction": "all x y.((Vibration(x) & Ear(y) & Reaches(x,y)) -> CanBeHeard(x,y))", "score": 0}
{"id": "eqasc_validation_1205", "prediction": "all x.((Vibrations(x) & ReachEars(x)) -> CanBeHearned(x))", "score": 0}
{"id": "eqasc_validation_1205", "prediction": "all x.((Vibrations(x) & ReachedEars(x)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1205", "prediction": "all x y z.((Vibration(x) & Ear(y) & Ear(z)) -> CanBeHeard(x,y,z))", "score": 0}
{"id": "eqasc_validation_1206", "prediction": "all x.(MeasuresHardnessOfMinerals(x) -> ScratchesMaterials(x))", "score": 0}
{"id": "eqasc_validation_1206", "prediction": "all x.((MeasuresHardnessOfMinerals(x) & ScratchesMinerals(x)) -> MeasuresHardnessOfMinerals(x))", "score": 0}
{"id": "eqasc_validation_1206", "prediction": "all x.((MeasuresHardnessOfMinerals(x) & ScratchesMaterials(x)) -> MeasuresHardnessOfMinerals(x))", "score": 0}
{"id": "eqasc_validation_1206", "prediction": "all x y.((Mineral(x) & Mineral(y) & MeasuresHardness(x,y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1206", "prediction": "all x y.((Mineral(x) & Mineral(y)) -> MeasuresHardnessRequiresScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1206", "prediction": "all x.(MeasuringHardnessOfMinerals(x) -> ScratchesMaterials(x))", "score": 0}
{"id": "eqasc_validation_1206", "prediction": "all x.((MeasuresHardnessOfMinerals(x) & ScratchesMinerals(x)) -> ScratchesMinerals(x))", "score": 0}
{"id": "eqasc_validation_1206", "prediction": "all x y.((Mineral(x) & Mineral(y)) -> MeasuresHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1206", "prediction": "all x.(MeasuresHardnessOfMinerals(x) -> ScratchesMinerals(x))", "score": 0}
{"id": "eqasc_validation_1206", "prediction": "all x y.((MeasuresHardness(x,y) & Minerals(y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1206", "prediction": "all x y.((MeasuresHardness(x,y) & Mineral(y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1206", "prediction": "all x y z.((Mineral(x) & Hardness(y) & Material(z)) -> (Measures(x,y) & Scratches(x,z)))", "score": 2}
{"id": "eqasc_validation_1206", "prediction": "all x y.((Mineral(x) & Hardness(y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1206", "prediction": "all x.((MeasuresHardnessOfMinerals(x) & ScratchesMaterials(x)) -> ScratchesMaterials(x))", "score": 0}
{"id": "eqasc_validation_1206", "prediction": "all x.((Minerals(x) & MeasuresHardness(x)) -> Scratches(x))", "score": 0}
{"id": "eqasc_validation_1206", "prediction": "all x y.((Mineral(x) & Mineral(y) & MeasuresHardness(x,y)) -> ScratchesMaterials(x,y))", "score": 0}
{"id": "eqasc_validation_1207", "prediction": "all x y.((MohsScale(x) & Mineral(y)) -> UsedForRankingHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1207", "prediction": "all x y.((MohsScale(x) & Mineral(y)) -> RankingHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1207", "prediction": "all x.((MineralHardness(x) & MohsScale(x)) -> UsedForRanking(x))", "score": 0}
{"id": "eqasc_validation_1207", "prediction": "all x y.((MohsScale(x) & Mineral(y)) -> UsedForRatingHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1207", "prediction": "all x y z.((MohsScale(x) & Mineral(y) & Hardness(z)) -> UsedForRanking(x,y,z))", "score": 0}
{"id": "eqasc_validation_1207", "prediction": "all x y.((MohsScale(x) & Mineral(y)) -> RankedHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1207", "prediction": "all x.(MohsScale(x) -> RankingHardnessOfMinerals(x))", "score": 0}
{"id": "eqasc_validation_1207", "prediction": "all x.(MohsScale(x) -> UsedForRankingHardnessOfMinerals(x))", "score": 0}
{"id": "eqasc_validation_1207", "prediction": "all x y.((MohsScale(x) & Mineral(y)) -> RangingHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1207", "prediction": "all x y.((Mineral(x) & MohsScale(y)) -> UsedForRankingHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1207", "prediction": "all x y.((Mineral(x) & MohsScale(y)) -> UsedForRankingHardness(y,x))", "score": 0}
{"id": "eqasc_validation_1207", "prediction": "all x y.((MohsScale(x) & Mineral(y)) -> UsedForRanking(x,y))", "score": 0}
{"id": "eqasc_validation_1207", "prediction": "all x y z.((MohsScale(x) & Mineral(y) & Hardness(z)) -> UsedForRating(x,y,z))", "score": 0}
{"id": "eqasc_validation_1207", "prediction": "all x.(RanksHardnessOfMinerals(x) -> MohsScale(x))", "score": 0}
{"id": "eqasc_validation_1207", "prediction": "all x.(RatingHardnessOfMinerals(x) -> MohsScale(x))", "score": 0}
{"id": "eqasc_validation_1207", "prediction": "all x.((MineralHardness(x) & MohsScene(x)) -> UsedForRanking(x))", "score": 0}
{"id": "eqasc_validation_1208", "prediction": "all x y z.((Mineral(x) & Scratching(x,y) & MohsScale(z)) -> DeterminesRanking(x,z))", "score": 0}
{"id": "eqasc_validation_1208", "prediction": "all x y z.((Mineral(x) & Scratching(x,y) & MohsScale(z)) -> DeterminesRankingOnScale(x,z))", "score": 0}
{"id": "eqasc_validation_1208", "prediction": "all x y.((Mineral(x) & Scratching(x,y)) -> DeterminesRankingOnMohsScale(x,y))", "score": 0}
{"id": "eqasc_validation_1208", "prediction": "all x y.((Mineral(x) & Scratching(x,y)) -> DeterminesRankingOnMohsScale(x))", "score": 0}
{"id": "eqasc_validation_1208", "prediction": "all x y z.((Mineral(x) & Scratching(x) & MohsScale(y) & MohsScale(z)) -> DeterminesRanking(x,y,z))", "score": 0}
{"id": "eqasc_validation_1208", "prediction": "all x y.((Mineral(x) & Scratching(x,y)) -> DeterminesRatingOnMohsScale(x,y))", "score": 0}
{"id": "eqasc_validation_1208", "prediction": "all x.((Mineral(x) & Scratches(x)) -> DeterminesRankingOnMohsScale(x))", "score": 0}
{"id": "eqasc_validation_1208", "prediction": "all x y.((Mineral(x) & Scratching(x,y)) -> DeterminesRatingOnMohsScale(x))", "score": 0}
{"id": "eqasc_validation_1208", "prediction": "all x y z.((Mineral(x) & Scratching(x,y) & MohsScale(z)) -> DeterminesRating(x,z))", "score": 0}
{"id": "eqasc_validation_1208", "prediction": "all x y z.((Mineral(x) & Scratching(x,y) & MohsScale(z)) -> DeterminesRankingOn(x,z))", "score": 0}
{"id": "eqasc_validation_1208", "prediction": "all x y.((Mineral(x) & Scratching(x) & MohsScale(y)) -> DeterminesRanking(x,y))", "score": 0}
{"id": "eqasc_validation_1208", "prediction": "all x y.((Mineral(x) & Scratching(x,y)) -> DeterminesRankingOnMohsScale(y))", "score": 0}
{"id": "eqasc_validation_1208", "prediction": "all x y z.((Mineral(x) & Scratching(x,y) & MohsScene(z)) -> DeterminesRanking(x,z))", "score": 0}
{"id": "eqasc_validation_1208", "prediction": "all x y z.((Mineral(x) & Scratching(x,y) & MohsScale(z)) -> DetermineRanking(x,z))", "score": 0}
{"id": "eqasc_validation_1208", "prediction": "all x y z.((Mineral(x) & Scratching(x,y) & MohsScale(z)) -> AllowsRunning(x,z))", "score": 0}
{"id": "eqasc_validation_1208", "prediction": "all x y z.((Mineral(x) & Scratching(x,y) & MohsScale(z)) -> DeterminesRatingOn(x,z))", "score": 0}
{"id": "eqasc_validation_1209", "prediction": "all x.(GemStone(x) -> HardMinerals(x))", "score": 0}
{"id": "eqasc_validation_1209", "prediction": "all x.(GemStone(x) -> HardMineral(x))", "score": 0}
{"id": "eqasc_validation_1209", "prediction": "all x.(Gemstone(x) -> HardMinerals(x))", "score": 0}
{"id": "eqasc_validation_1209", "prediction": "all x.(GemStone(x) -> (HardMinerals(x) | HardMinerals(x)))", "score": 0}
{"id": "eqasc_validation_1209", "prediction": "all x.(GemStone(x) -> (HardMineral(x) | HardMineral(x)))", "score": 0}
{"id": "eqasc_validation_1209", "prediction": "all x.(Gemstone(x) -> HardMineral(x))", "score": 0}
{"id": "eqasc_validation_1209", "prediction": "all x.(GemStone(x) -> (HardMinerals(x) & -HardMinerals(x)))", "score": 0}
{"id": "eqasc_validation_1209", "prediction": "all x y.((GemStone(x) & HardMineral(y)) -> HardMineral(x))", "score": 0}
{"id": "eqasc_validation_1209", "prediction": "all x.(GemStone(x) -> (HardMinerals(x) & HardMinerals(x)))", "score": 0}
{"id": "eqasc_validation_1209", "prediction": "all x.((GemStone(x) & HardMineral(x)) -> HardMineral(x))", "score": 0}
{"id": "eqasc_validation_1209", "prediction": "exists x.(GemStone(x) & HardMineral(x))", "score": 0}
{"id": "eqasc_validation_1209", "prediction": "all x.(MostGemStones(x) -> HardMinerals(x))", "score": 0}
{"id": "eqasc_validation_1209", "prediction": "all x.(GemStone(x) -> (HardMinerals(x) | -HardMinerals(x)))", "score": 0}
{"id": "eqasc_validation_1209", "prediction": "all x y.((GemStone(x) & HardMineral(y)) -> Hard(x,y))", "score": 0}
{"id": "eqasc_validation_1209", "prediction": "all x y.((GemStone(x) & HardMineral(y)) -> HardMineral(x,y))", "score": 0}
{"id": "eqasc_validation_1210", "prediction": "all x y.((GemStone(x) & GemStone(y) & Scratches(x,y)) -> MeasuresHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1210", "prediction": "all x y.((GemStone(x) & GemStone(y) & Scratch(x,y)) -> MeasuresHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1210", "prediction": "all x y.((GemStone(x) & Stone(y) & Scratches(x,y)) -> MeasuresHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1210", "prediction": "all x y.((GemStone(x) & GemStone(y)) -> MeasuresHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1210", "prediction": "all x y.((GemStone(x) & GemStone(y)) -> (MeasuresHardness(x,y) & Scratches(x,y)))", "score": 0}
{"id": "eqasc_validation_1210", "prediction": "all x y.((GemStone(x) & Stone(y) & Scratch(x,y)) -> MeasuresHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1210", "prediction": "all x y.((Gemstone(x) & GemStone(y) & Scratches(x,y)) -> MeasuresHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1210", "prediction": "all x y.((GemStone(x) & Stone(y)) -> MeasuresHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1210", "prediction": "all x y z.((GemStone(x) & GemStone(y) & Stone(z)) -> MeasuresHardness(x,y,z))", "score": 0}
{"id": "eqasc_validation_1210", "prediction": "all x y.((GemStone(x) & GemStone(y)) -> MeasuresHardnessByScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1210", "prediction": "all x y z.((GemStone(x) & GemStone(y) & Stone(z)) -> (MeasuresHardness(x,y,z) & Scratches(x,y)))", "score": 0}
{"id": "eqasc_validation_1210", "prediction": "all x y z.((GemStone(x) & GemStone(y) & Stone(z) & Scratches(x,y)) -> MeasuresHardness(x,y,z))", "score": 0}
{"id": "eqasc_validation_1210", "prediction": "all x y.((GemStone(x) & GemStone(y) & Scratches(x,y)) -> MeasuresHardnessByScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1210", "prediction": "all x y.((GemStone(x) & GemStone(y)) -> MeasuresHardnessByCrushing(x,y))", "score": 0}
{"id": "eqasc_validation_1210", "prediction": "all x y z.((GemStone(x) & GemStone(y) & Stone(z)) -> (MeasuresHardness(x,y) & Scratches(x,z)))", "score": 0}
{"id": "eqasc_validation_1211", "prediction": "all x.(Mineral(x) -> ClassifiedByHardness(x))", "score": 0}
{"id": "eqasc_validation_1211", "prediction": "all x y.((Mineral(x) & Hardness(y)) -> ClassifiedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1211", "prediction": "all x.(Mineral(x) -> Hardness(x))", "score": 1}
{"id": "eqasc_validation_1211", "prediction": "all x.(Mineral(x) -> (ClassifiedByHardness(x) | ClassifiedByHardness(x)))", "score": 0}
{"id": "eqasc_validation_1211", "prediction": "all x y z.((Mineral(x) & Hardness(y) & Hardness(z)) -> ClassifiedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1211", "prediction": "all x.(Molecule(x) -> ClassifiedByHardness(x))", "score": 0}
{"id": "eqasc_validation_1211", "prediction": "all x.(Mineral(x) -> CategorizedByHardness(x))", "score": 0}
{"id": "eqasc_validation_1211", "prediction": "all x.(Mineral(x) -> (ClassifiedByHardness(x) & ClassifiedByHardness(x)))", "score": 0}
{"id": "eqasc_validation_1211", "prediction": "all x.(Mineral(x) -> (ClassifiedByHardness(x) & Hardness(x)))", "score": 1}
{"id": "eqasc_validation_1211", "prediction": "all x y z.((Mineral(x) & Hardness(y) & Hardness(z)) -> ClassifiedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1211", "prediction": "all x y.((Mineral(x) & Hardness(y) & ClassifiedBy(x,y)) -> ClassifiedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1211", "prediction": "all x.(Mineral(x) -> (ClassifiedByHardness(x) & -ClassifiedByHardness(x)))", "score": 0}
{"id": "eqasc_validation_1211", "prediction": "all x y.((Mineral(x) & Hardness(y)) -> Classified(x,y))", "score": 0}
{"id": "eqasc_validation_1211", "prediction": "all x.(Mineral(x) -> (ClassifiedByHardness(x)))", "score": 0}
{"id": "eqasc_validation_1211", "prediction": "all x y.((Mineral(x) & Hardness(y)) -> CategorizedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1212", "prediction": "all x y.((Mineral(x) & Material(y)) -> RequiresScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1212", "prediction": "all x.(ClassifyingMinerals(x) -> RequiresScrapingMaterials(x))", "score": 0}
{"id": "eqasc_validation_1212", "prediction": "all x.(Mineral(x) -> RequiresScraping(x))", "score": 0}
{"id": "eqasc_validation_1212", "prediction": "all x y.((Mineral(x) & Material(y)) -> Scratches(x,y))", "score": 2}
{"id": "eqasc_validation_1212", "prediction": "all x.((Mineral(x) & Scratching(x)) -> Classifies(x,y))", "score": 0}
{"id": "eqasc_validation_1212", "prediction": "all x y.((Mineral(x) & Material(y)) -> Scratching(x,y))", "score": 0}
{"id": "eqasc_validation_1212", "prediction": "all x y.((Mineral(x) & Material(y) & Scratching(x,y)) -> Classifies(x,y))", "score": 0}
{"id": "eqasc_validation_1212", "prediction": "all x y.((Mineral(x) & Material(y)) -> ScratchesRequires(x,y))", "score": 0}
{"id": "eqasc_validation_1212", "prediction": "all x.(ClassifyingMinerals(x) -> RequiresScraping(x))", "score": 0}
{"id": "eqasc_validation_1212", "prediction": "all x y.((Mineral(x) & Material(y)) -> ClassifiesRequiresScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1212", "prediction": "all x y.((Mineral(x) & Material(y)) -> RequiresCratering(x,y))", "score": 0}
{"id": "eqasc_validation_1212", "prediction": "all x.((Mineral(x) & Classifying(x)) -> RequiresScraping(x))", "score": 0}
{"id": "eqasc_validation_1212", "prediction": "all x.((Mineral(x) & Scratching(x)) -> Classifies(x))", "score": 0}
{"id": "eqasc_validation_1212", "prediction": "all x y.((Mineral(x) & Material(y)) -> RequiresCratching(x,y))", "score": 0}
{"id": "eqasc_validation_1212", "prediction": "all x y.((Mineral(x) & Material(y) & Scratching(x,y)) -> Classifying(x,y))", "score": 0}
{"id": "eqasc_validation_1212", "prediction": "all x.((Mineral(x) & ScratchingMaterials(x)) -> Classifies(x,y))", "score": 0}
{"id": "eqasc_validation_1213", "prediction": "all x.((Diamond(x) & ShapeOfDiamondStructure(x)) -> SoHard(x))", "score": 0}
{"id": "eqasc_validation_1213", "prediction": "all x.((Diamond(x) & ShapeOfDiamondStructure(x)) -> Hard(x))", "score": 0}
{"id": "eqasc_validation_1213", "prediction": "all x y.((Diamond(x) & DiamondStructure(y)) -> SoHard(x,y))", "score": 0}
{"id": "eqasc_validation_1213", "prediction": "all x.((Diamond(x) & ShapeOfStructure(x)) -> SoHard(x))", "score": 0}
{"id": "eqasc_validation_1213", "prediction": "all x.((Diamond(x) & ShapeOfDiamond(x)) -> SoHard(x))", "score": 0}
{"id": "eqasc_validation_1213", "prediction": "all x y.((Diamond(x) & DiamondStructure(y)) -> Hard(x))", "score": 0}
{"id": "eqasc_validation_1213", "prediction": "all x y.((Diamond(x) & DiamondStructure(y)) -> Hard(x,y))", "score": 0}
{"id": "eqasc_validation_1213", "prediction": "all x y.((Diamond(x) & DiamondStructure(y)) -> SoHard(x))", "score": 0}
{"id": "eqasc_validation_1213", "prediction": "all x.((Diamond(x) & ShapeOfDiamond(x)) -> Hard(x))", "score": 0}
{"id": "eqasc_validation_1213", "prediction": "all x.(Diamond(x) -> (Hard(x) & ShapeOfDiamondStructure(x)))", "score": 0}
{"id": "eqasc_validation_1213", "prediction": "all x y.((Diamond(x) & DiamondStructure(y) & Shape(x,y)) -> SoHard(x))", "score": 0}
{"id": "eqasc_validation_1213", "prediction": "all x.((Diamond(x) & ShapeOfStructure(x)) -> Hard(x))", "score": 0}
{"id": "eqasc_validation_1213", "prediction": "all x y.((Diamond(x) & DiamondStructure(y) & Shape(x,y)) -> Hard(x))", "score": 0}
{"id": "eqasc_validation_1213", "prediction": "all x.((Diamond(x) & ShapeOfDiamondsStructure(x)) -> SoHard(x))", "score": 0}
{"id": "eqasc_validation_1213", "prediction": "all x y z.((Diamond(x) & DiamondStructure(y) & Shape(z)) -> SoHard(x))", "score": 0}
{"id": "eqasc_validation_1213", "prediction": "all x y z.((Diamond(x) & DiamondStructure(y) & Shape(z)) -> Hard(x))", "score": 0}
{"id": "eqasc_validation_1214", "prediction": "all x.(Diamond(x) -> (Measures(x,Diamonds) & Scratches(x,Diamonds)))", "score": 0}
{"id": "eqasc_validation_1214", "prediction": "all x y.((Diamond(x) & Diamond(y)) -> (Measures(x,y) & Scratches(x,y)))", "score": 0}
{"id": "eqasc_validation_1214", "prediction": "all x y z.((Diamond(x) & Diamond(y) & Diamond(z)) -> (Measures(x,y) & Scratches(x,z)))", "score": 0}
{"id": "eqasc_validation_1214", "prediction": "all x y.((Diamond(x) & Diamond(y)) -> ScratchesRequires(x,y))", "score": 0}
{"id": "eqasc_validation_1214", "prediction": "all x y.((Diamond(x) & Diamond(y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1214", "prediction": "all x y z.((Diamond(x) & Diamond(y) & Diamond(z)) -> (Measures(x,y,z) & Scratches(x,y)))", "score": 0}
{"id": "eqasc_validation_1214", "prediction": "all x.(Diamond(x) -> (Measures(x,Diamond) & Scratches(x,Diamond)))", "score": 0}
{"id": "eqasc_validation_1214", "prediction": "all x y.((Diamond(x) & Diamond(y)) -> MeasuresRequiresScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1214", "prediction": "all x y z.((Diamond(x) & Diamond(y) & Diamond(z)) -> MeasuresRequiresScraping(x,y,z))", "score": 0}
{"id": "eqasc_validation_1214", "prediction": "all x y.((Diamond(x) & Diamond(y)) -> ScratchingRequires(x,y))", "score": 0}
{"id": "eqasc_validation_1214", "prediction": "all x y.((Diamond(x) & Diamond(y)) -> (Measures(x,y) & RequiresScraping(x,y)))", "score": 0}
{"id": "eqasc_validation_1214", "prediction": "all x.(Diamond(x) -> (Measures(x,Diamonds) & Scratches(x)))", "score": 0}
{"id": "eqasc_validation_1214", "prediction": "all x.((Diamond(x) & Scratching(x)) -> Measures(x,Diamonds))", "score": 0}
{"id": "eqasc_validation_1214", "prediction": "all x y.((Diamond(x) & Diamond(y) & Scratching(x,y)) -> MeasuresRequires(x,y))", "score": 0}
{"id": "eqasc_validation_1214", "prediction": "all x y.((Diamond(x) & Diamond(y) & Scratching(x,y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1215", "prediction": "all x.(MeasuringGemHardness(x) -> RequiresScraping(x))", "score": 0}
{"id": "eqasc_validation_1215", "prediction": "all x y.((MeasuresGemHardness(x) & Gem(y)) -> ScratchesRequires(x,y))", "score": 0}
{"id": "eqasc_validation_1215", "prediction": "all x y.((MeasuringGemHardness(x) & GemHardness(y)) -> RequiresScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1215", "prediction": "all x y.((Measurement(x) & GemHardness(y) & Scratching(x,y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1215", "prediction": "all x y.((MeasuringGemHardness(x) & GemHardness(y)) -> ScratchesRequires(x,y))", "score": 0}
{"id": "eqasc_validation_1215", "prediction": "all x.((MeasuringGemHardness(x) & ScratchingGems(x)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1215", "prediction": "all x.((MeasuresGemHardness(x) & ScratchesGems(x)) -> ScratchesGems(x))", "score": 0}
{"id": "eqasc_validation_1215", "prediction": "all x y.((MeasuresGemHardness(x) & Gem(y)) -> RequiresScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1215", "prediction": "all x.(MeasuringGemHardness(x) -> ScratchesGems(x))", "score": 0}
{"id": "eqasc_validation_1215", "prediction": "all x.(MeasuresGemHardness(x) -> ScratchesGems(x))", "score": 0}
{"id": "eqasc_validation_1215", "prediction": "all x y.((MeasuringGemHardness(x) & Gem(y)) -> ScratchesRequires(x,y))", "score": 0}
{"id": "eqasc_validation_1215", "prediction": "all x.((MeasuresGemHardness(x) & ScratchesGems(x)) -> MeasuresHardness(x))", "score": 0}
{"id": "eqasc_validation_1215", "prediction": "all x.((MeasuresGemHardness(x) & ScratchesGems(x)) -> RequiresScraping(x))", "score": 0}
{"id": "eqasc_validation_1215", "prediction": "all x.((MeasuresGemHardness(x) & Scratches(x)) -> MeasuresGemHardness(x))", "score": 0}
{"id": "eqasc_validation_1215", "prediction": "all x.((MeasuringGemHardness(x) & ScratchingGems(x)) -> Requires(x))", "score": 0}
{"id": "eqasc_validation_1215", "prediction": "all x y.((MeasuresGemHardness(x) & Gem(y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1216", "prediction": "all x.((Mineral(x) & MohsScale(x)) -> Scratch(x))", "score": 0}
{"id": "eqasc_validation_1216", "prediction": "all x.((Mineral(x) & MohsScale(x)) -> Scratches(x))", "score": 0}
{"id": "eqasc_validation_1216", "prediction": "all x y.((Mineral(x) & MohsScale(y)) -> Scratch(x,y))", "score": 0}
{"id": "eqasc_validation_1216", "prediction": "all x y.((Mineral(x) & MohsScale(y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1216", "prediction": "all x.((Mineral(x) & MohsScene(x)) -> Scratches(x))", "score": 0}
{"id": "eqasc_validation_1216", "prediction": "all x.((Mineral(x) & MohsScene(x)) -> Scratch(x))", "score": 0}
{"id": "eqasc_validation_1216", "prediction": "all x y.((Mineral(x) & MohsScene(y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1216", "prediction": "all x y.((Mineral(x) & MohsScale(y)) -> Scrashes(x,y))", "score": 0}
{"id": "eqasc_validation_1216", "prediction": "all x y.((Mineral(x) & MohsScale(y)) -> MustScratch(x,y))", "score": 0}
{"id": "eqasc_validation_1216", "prediction": "all x y.((Mineral(x) & MohsScene(y)) -> Scratch(x,y))", "score": 0}
{"id": "eqasc_validation_1216", "prediction": "all x.((Mineral(x) & MohsScale(x)) -> Scrashes(x))", "score": 0}
{"id": "eqasc_validation_1216", "prediction": "all x y z.((Mineral(x) & MohsScale(y) & MohsScale(z)) -> Scratch(x,y,z))", "score": 0}
{"id": "eqasc_validation_1216", "prediction": "all x.((Mineral(x) & MohsScale(x)) -> CanScratch(x))", "score": 0}
{"id": "eqasc_validation_1216", "prediction": "all x y z.((Mineral(x) & MohsScale(y) & MohsScale(z)) -> Scratches(x,y,z))", "score": 0}
{"id": "eqasc_validation_1216", "prediction": "all x y.((Mineral(x) & MohsScale(y) & Scratch(x,y)) -> MohsScaleRank(x,y))", "score": 0}
{"id": "eqasc_validation_1216", "prediction": "all x y.((Mineral(x) & MohsScale(y) & Scratches(x,y)) -> MohsScaleRank(x,y))", "score": 0}
{"id": "eqasc_validation_1217", "prediction": "all x.(Calcite(x) -> VeryCommonMineral(x))", "score": 0}
{"id": "eqasc_validation_1217", "prediction": "all x.(Calcite(x) -> CommonMineral(x))", "score": 0}
{"id": "eqasc_validation_1217", "prediction": "all x y.((Calcite(x) & Mineral(y)) -> VeryCommon(x,y))", "score": 0}
{"id": "eqasc_validation_1217", "prediction": "all x.(Calcite(x) -> (CommonMineral(x) & CommonMineral(x)))", "score": 0}
{"id": "eqasc_validation_1217", "prediction": "all x.(Calcite(x) -> (CommonMineral(x) & VeryCommonMineral(x)))", "score": 0}
{"id": "eqasc_validation_1217", "prediction": "all x.(Calcite(x) -> (VeryCommonMineral(x) & CommonMineral(x)))", "score": 0}
{"id": "eqasc_validation_1217", "prediction": "all x y.((Calcite(x) & Mineral(y)) -> Common(x,y))", "score": 0}
{"id": "eqasc_validation_1217", "prediction": "all x y.((Calcite(x) & Mineral(y)) -> VeryCommon(x))", "score": 0}
{"id": "eqasc_validation_1218", "prediction": "all x y.((MeasuringHardnessOfCalcite(x) & Calcite(y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1218", "prediction": "all x y.((MeasuringHardnessOfCalcite(x) & Calcite(y)) -> ScratchesMaterials(x,y))", "score": 0}
{"id": "eqasc_validation_1218", "prediction": "all x y.((MeasuringHardnessOfCalcite(x) & Calcite(y)) -> RequiresScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1218", "prediction": "all x y z.((MeasuringHardnessOfCalcite(x) & Calcite(y) & Calcite(z)) -> RequiresScraping(x,y,z))", "score": 0}
{"id": "eqasc_validation_1218", "prediction": "all x y.((MeasuringHardnessOfCalcite(x) & Calcite(y)) -> ScratchingMaterials(x,y))", "score": 0}
{"id": "eqasc_validation_1218", "prediction": "all x y z.((MeasuringHardnessOfCalcite(x) & Calcite(y) & Calcite(z)) -> Scratches(x,y,z))", "score": 0}
{"id": "eqasc_validation_1218", "prediction": "all x y.((Calcite(x) & Calcite(y)) -> MeasuringHardnessRequiresScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1218", "prediction": "all x y.((MeasuringHardnessOfCalcite(x) & Calcite(y)) -> Scratching(x,y))", "score": 0}
{"id": "eqasc_validation_1218", "prediction": "all x.((MeasuringHardnessOfCalcite(x) & ScratchingCalciteMaterials(x)) -> RequiresScrapingCalciteMaterials(x))", "score": 0}
{"id": "eqasc_validation_1218", "prediction": "all x y z.((MeasuringHardnessOfCalcite(x) & Calcite(y) & Calcite(z)) -> ScratchesRequires(x,y,z))", "score": 0}
{"id": "eqasc_validation_1218", "prediction": "all x y.((MeasuringHardness(x) & Calcite(y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1218", "prediction": "all x.(MeasuringHardnessOfCalcite(x) -> ScratchesMaterials(x))", "score": 0}
{"id": "eqasc_validation_1218", "prediction": "all x y z.((MeasuringHardnessOfCalcite(x) & Calcite(y) & Calcite(z)) -> ScratchesMaterials(x,y,z))", "score": 0}
{"id": "eqasc_validation_1218", "prediction": "all x.(MeasuringHardnessOfCalcite(x) -> RequiresScraping(x))", "score": 0}
{"id": "eqasc_validation_1218", "prediction": "all x.((MeasuringHardnessOfCalcite(x) & ScratchingCalcite(x)) -> RequiresScrapingCalcite(x))", "score": 0}
{"id": "eqasc_validation_1218", "prediction": "all x y.((MeasuringHardness(x) & Calcite(y)) -> Scratching(x,y))", "score": 0}
{"id": "eqasc_validation_1219", "prediction": "all x.((CarbonateMineral(x) & (Malachite(x) | Pearl(x) | Rhodochrosite(x))) -> DamagedByChemicalAttack(x))", "score": 0}
{"id": "eqasc_validation_1219", "prediction": "all x.((CarbonateMineral(x) & Malachite(x) & Pearl(x) & Rhodochrosite(x)) -> DamagedByChemicalAttack(x))", "score": 0}
{"id": "eqasc_validation_1219", "prediction": "all x.((Malachite(x) | Pearl(x) | Rhodochrosite(x)) -> DamagedByChemicalAttack(x))", "score": 0}
{"id": "eqasc_validation_1219", "prediction": "all x y.((CarbonateMineral(x) & (Malachite(y) | Pearl(y) | Rhodochrosite(y))) -> DamagedByChemicalAttack(x))", "score": 0}
{"id": "eqasc_validation_1219", "prediction": "all x.((Milk(x) & Malachite(x) & Pearl(x) & Rhodochrosite(x)) -> DamagedByChemicalAttack(x))", "score": 0}
{"id": "eqasc_validation_1219", "prediction": "all x.((CarbonateMineral(x) & Malachite(x) | Pearl(x) | Rhodochrosite(x))) -> DamagedByChemicalAttack(x))", "score": -1}
{"id": "eqasc_validation_1219", "prediction": "all x y z.((CarbonateMineral(x) & Malachite(y) & Pearl(z) & Rhodochrosite(z)) -> DamagedByChemicalAttack(x))", "score": 0}
{"id": "eqasc_validation_1219", "prediction": "all x y.((CarbonateMineral(x) & (Malachite(y) | Pearl(y) | Rhodochrosite(y))) -> DamagedByChemicalAttack(x,y))", "score": 0}
{"id": "eqasc_validation_1219", "prediction": "all x y z.((CarbonateMineral(x) & (Malachite(y) | Pearl(y) | Rhodochrosite(y)) & ChemicalAttack(z)) -> DamagedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1219", "prediction": "all x.((CarbonateMineral(x) & Malachite(x)) | Pearl(x) | Rhodochrosite(x)) -> DamagedByChemicalAttack(x))", "score": -1}
{"id": "eqasc_validation_1219", "prediction": "all x y z.((CarbonateMineral(x) & (Malachite(y) | Pearl(y) | Rhodochrosite(y))) -> DamagedByChemicalAttack(x))", "score": 0}
{"id": "eqasc_validation_1219", "prediction": "all x y z.((CarbonateMineral(x) & Malachite(y) & Pearl(z) & Rhodochrosite(x)) -> DamagedByChemicalAttack(x))", "score": 0}
{"id": "eqasc_validation_1219", "prediction": "all x y.((CarbonateMineral(x) & Malachite(y) & Pearl(y) & Rhodochrosite(y)) -> DamagedByChemicalAttack(x))", "score": 0}
{"id": "eqasc_validation_1219", "prediction": "all x.((CarbonateMineral(x) & DamagedByChemicalAttack(x)) -> (Malachite(x) | Pearl(x) | Rhodochrosite(x)))", "score": 0}
{"id": "eqasc_validation_1219", "prediction": "all x y z.((CarbonateMineral(x) & (Malachite(y) | Pearl(y) | Rhodochrosite(y))) -> DamagedByChemicalAttack(z))", "score": 0}
{"id": "eqasc_validation_1219", "prediction": "all x y.((CarbonateMineral(x) & Malachite(y) & Pearl(y) & Rhodochrosite(y)) -> DamagedByChemicalAttack(x,y))", "score": 0}
{"id": "eqasc_validation_1220", "prediction": "all x y.((Pearl(x) & Pearl(y)) -> MeasuresHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1220", "prediction": "all x y.((Pearl(x) & Pearl(y)) -> (MeasuresHardness(x,y) & Scratches(x,y)))", "score": 0}
{"id": "eqasc_validation_1220", "prediction": "all x y.((Pearl(x) & Pearl(y) & MeasuresHardness(x,y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1220", "prediction": "all x y.((Perl(x) & Pearl(y)) -> MeasuresHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1220", "prediction": "all x y.((Pearl(x) & Pearl(y) & MeasuresHardness(x,y)) -> RequiresScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1220", "prediction": "all x y.((Perl(x) & Pearl(y) & MeasuresHardness(x,y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1220", "prediction": "all x y.((Pearl(x) & Pearl(y) & MeasuresHardness(x,y)) -> RequiresScratching(x,y))", "score": 0}
{"id": "eqasc_validation_1220", "prediction": "all x y.((Perle(x) & Pearl(y)) -> MeasuresHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1220", "prediction": "all x y.((Pearl(x) & Pearl(y) & MeasuresHardness(x,y)) -> RequiresCratching(x,y))", "score": 0}
{"id": "eqasc_validation_1220", "prediction": "all x y.((Pearl(x) & Pearl(y)) -> MeasuresHardnessRequiresScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1220", "prediction": "all x y z.((Pearl(x) & Hardness(y) & Pearl(z)) -> (Measures(x,y) & Scratches(x,z)))", "score": 0}
{"id": "eqasc_validation_1220", "prediction": "all x.((Pearl(x) & MeasuresHardness(x)) -> Scratches(x))", "score": 0}
{"id": "eqasc_validation_1220", "prediction": "all x y.((Pearl(x) & Pearl(y)) -> MeasuringHardnessRequiresScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1220", "prediction": "all x y.((Pearl(x) & Pearl(y)) -> (MeasuresHardness(x,y) & RequiresScraping(x,y)))", "score": 0}
{"id": "eqasc_validation_1221", "prediction": "all x.(Diamond(x) -> (HarstSubstanceKnownToMan(x) & (Chipped(x) | Scrubbed(x))))", "score": 0}
{"id": "eqasc_validation_1221", "prediction": "all x.(Diamond(x) -> (HarstSubstanceKnownToMan(x) & (Chipped(x) | Scrubbed(x)))))", "score": -1}
{"id": "eqasc_validation_1221", "prediction": "all x.(Diamond(x) -> (HardestSubstanceKnownToMan(x) & (Chipped(x) | Scrubbed(x))))", "score": 0}
{"id": "eqasc_validation_1221", "prediction": "all x.(Diamond(x) -> (HarstSubstanceKnownToMan(x) & (CanBeChipped(x) | CanBeScraped(x))))", "score": 0}
{"id": "eqasc_validation_1221", "prediction": "all x.(Diamond(x) -> (HarstSubstanceKnownToMan(x) & (Chopped(x) | Scrubbed(x))))", "score": 0}
{"id": "eqasc_validation_1221", "prediction": "all x.(Diamond(x) -> (HarstSubstanceKnownToMan(x) & (CanBeChipped(x) | CanBeScrapped(x))))", "score": 0}
{"id": "eqasc_validation_1221", "prediction": "all x.(Diamond(x) -> (HardestSubstanceKnownToMan(x) & (Chipped(x) | Scrubbed(x)))))", "score": -1}
{"id": "eqasc_validation_1221", "prediction": "all x.((Diamond(x) & HardestSubstanceKnownToMan(x)) -> (Chipped(x) | Scrubbed(x)))", "score": 0}
{"id": "eqasc_validation_1221", "prediction": "all x y.((Diamond(x) & Man(y)) -> (HarstSubstance(x,y) & (Chipped(x) | Scrubbed(x))))", "score": 0}
{"id": "eqasc_validation_1221", "prediction": "all x.(Diamond(x) -> (HardestSubstanceKnownToMan(x) & (CanBeChipped(x) | CanBeScraped(x))))", "score": 0}
{"id": "eqasc_validation_1221", "prediction": "all x.(Diamond(x) -> (HarstSubstance(x) & (Chipped(x) | Scrubbed(x))))", "score": 0}
{"id": "eqasc_validation_1221", "prediction": "all x.(Diamond(x) -> (HarstSubstance(x) & (Chipped(x) | Scrubbed(x)))))", "score": -1}
{"id": "eqasc_validation_1222", "prediction": "all x.((MeasuresHardnessOfMinerals(x) & ChipsMinerals(x)) -> MeasuresHardnessOfMinerals(x))", "score": 0}
{"id": "eqasc_validation_1222", "prediction": "all x.((MeasuresHardnessOfMinerals(x) & ChipsMaterials(x)) -> MeasuresHardnessOfMinerals(x))", "score": 0}
{"id": "eqasc_validation_1222", "prediction": "all x.((MeasuresHardnessOfMinerals(x) & RequiresChips(x)) -> MeasuresHardnessOfMinerals(x))", "score": 0}
{"id": "eqasc_validation_1222", "prediction": "all x y.((Mineral(x) & Mineral(y)) -> MeasuresHardnessRequiresChips(x,y))", "score": 0}
{"id": "eqasc_validation_1222", "prediction": "all x y.((MeasuresHardnessOfMinerals(x) & ChipsMinerals(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1222", "prediction": "all x.(MeasuresHardnessOfMinerals(x) -> RequiresChips(x))", "score": 0}
{"id": "eqasc_validation_1222", "prediction": "all x y.((MeasuresHardnessOfMinerals(x) & ChipsMinerals(y)) -> MeasuresHardnessOfMinerals(x,y))", "score": 0}
{"id": "eqasc_validation_1222", "prediction": "all x y.((Mineral(x) & Mineral(y)) -> MeasuresHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1222", "prediction": "all x y.((MeasuresHardnessOfMinerals(x) & ChipsMaterials(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1222", "prediction": "all x.(MeasuresHardnessOfMinerals(x) -> ChipsMaterials(x))", "score": 0}
{"id": "eqasc_validation_1222", "prediction": "all x y.((Mineral(x) & Mineral(y)) -> MeasuresHardnessRequiresChipping(x,y))", "score": 0}
{"id": "eqasc_validation_1222", "prediction": "all x y.((Mineral(x) & Mineral(y) & MeasuresHardness(x,y)) -> RequiresChips(x,y))", "score": 0}
{"id": "eqasc_validation_1222", "prediction": "all x y.((Mineral(x) & Mineral(y) & MeasuresHardness(x,y)) -> Chips(x,y))", "score": 0}
{"id": "eqasc_validation_1222", "prediction": "all x.(MeasuringHardnessOfMinerals(x) -> RequiresChips(x))", "score": 0}
{"id": "eqasc_validation_1222", "prediction": "all x y.((MeasuresHardness(x,y) & Minerals(y)) -> RequiresChips(x,y))", "score": 0}
{"id": "eqasc_validation_1222", "prediction": "all x y.((MeasuresHardness(x,y) & Mineral(y)) -> RequiresChips(x,y))", "score": 0}
{"id": "eqasc_validation_1223", "prediction": "all x.(Travel(x) -> Necessary(x))", "score": 0}
{"id": "eqasc_validation_1223", "prediction": "all x.((Travel(x) & Necessary(x)) -> Requires(x))", "score": 0}
{"id": "eqasc_validation_1223", "prediction": "all x.((Travel(x) & Necessary(x)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1223", "prediction": "all x y.((Travel(x) & Necessary(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1223", "prediction": "all x.((Travel(x) & Necessary(x)) -> Required(x))", "score": 0}
{"id": "eqasc_validation_1223", "prediction": "all x.(Travel(x) -> RequiredAsNecessary(x))", "score": 0}
{"id": "eqasc_validation_1223", "prediction": "all x y.((Travel(x) & Necessary(y)) -> Required(x,y))", "score": 0}
{"id": "eqasc_validation_1223", "prediction": "all x.(TravelRequired(x) -> Necessary(x))", "score": 0}
{"id": "eqasc_validation_1223", "prediction": "all x.(Travel(x) -> RequiresAsNecessary(x))", "score": 0}
{"id": "eqasc_validation_1223", "prediction": "all x.(Travel(x) -> Requires(x))", "score": 0}
{"id": "eqasc_validation_1223", "prediction": "all x.(RequiredTravel(x) -> Necessary(x))", "score": 0}
{"id": "eqasc_validation_1224", "prediction": "all x.((MeasuresHardnessOfMaterials(x) & ScratchesMaterials(x)) -> Necessary(x))", "score": 0}
{"id": "eqasc_validation_1224", "prediction": "all x.((MeasuresHardness(x) & Scratches(x)) -> Necessary(x))", "score": 0}
{"id": "eqasc_validation_1224", "prediction": "all x.((MeasuresHardnessOfMaterials(x) & ScratchesMaterials(x)) -> NecessaryToMeasureHardnessOfMaterials(x))", "score": 0}
{"id": "eqasc_validation_1224", "prediction": "all x.((MeasuresHardnessOfMaterials(x) & ScratchesMaterials(x)) -> NecessaryToMeasureHardness(x))", "score": 0}
{"id": "eqasc_validation_1224", "prediction": "all x.((MeasuresHardness(x) & ScratchesMaterials(x)) -> Necessary(x))", "score": 0}
{"id": "eqasc_validation_1224", "prediction": "all x.((MeasuresHardnessOfMaterials(x) & Scratches(x)) -> Necessary(x))", "score": 0}
{"id": "eqasc_validation_1224", "prediction": "all x.((MeasuresHardness(x) & Scratches(x)) -> NecessaryToMeasureHardness(x))", "score": 0}
{"id": "eqasc_validation_1224", "prediction": "all x.((MeasuresHardnessOfMaterials(x) & Scratches(x)) -> NecessaryToMeasureHardnessOfMaterials(x))", "score": 0}
{"id": "eqasc_validation_1224", "prediction": "all x y.((MeasuresHardness(x) & Material(y) & Scratches(x,y)) -> Necessary(x))", "score": 0}
{"id": "eqasc_validation_1224", "prediction": "all x.((MeasuresHardnessOfMaterials(x) & ScratchingMaterials(x)) -> Necessary(x))", "score": 0}
{"id": "eqasc_validation_1224", "prediction": "all x y.((MeasuresHardness(x) & Material(y) & Scratches(x,y)) -> Necessary(x,y))", "score": 0}
{"id": "eqasc_validation_1224", "prediction": "all x y.((MeasuresHardness(x) & Material(y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1224", "prediction": "all x.((MeasuresHardness(x) & ScratchesMaterials(x)) -> NecessaryToMeasureHardness(x))", "score": 0}
{"id": "eqasc_validation_1224", "prediction": "all x.((MeasuresHardnessOfMaterials(x) & ScratchesMaterials(x)) -> NecessaryForMeasurement(x))", "score": 0}
{"id": "eqasc_validation_1224", "prediction": "all x.((MeasuresHardnessOfMaterials(x) & ScratchesMaterials(x)) -> NecessaryForMaterials(x))", "score": 0}
{"id": "eqasc_validation_1224", "prediction": "all x y.((MeasuresHardness(x) & Material(y) & Scratches(x,y)) -> NecessaryToMeasureHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1225", "prediction": "all x y.((HarderMineral(x) & SofterMineral(y)) -> CanScratch(x,y))", "score": 0}
{"id": "eqasc_validation_1225", "prediction": "all x y.((HarderMineral(x) & SofterMineral(y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1225", "prediction": "all x.(HarderMinerals(x) -> CanScratchSofterMinerals(x))", "score": 0}
{"id": "eqasc_validation_1225", "prediction": "all x y.((HarderMineral(x) & SofterMineral(y)) -> Scrashes(x,y))", "score": 0}
{"id": "eqasc_validation_1225", "prediction": "all x y.((HarderMineral(x) & SofterMineral(y)) -> Scratch(x,y))", "score": 0}
{"id": "eqasc_validation_1225", "prediction": "all x.((HarderMineral(x) & SofterMineral(x)) -> CanScratch(x,y))", "score": 0}
{"id": "eqasc_validation_1225", "prediction": "all x y.((HarderMineral(x) & SofterMineral(y)) -> CanCrashes(x,y))", "score": 0}
{"id": "eqasc_validation_1225", "prediction": "all x.(HarderMineral(x) -> CanScratchSofterMinerals(x))", "score": 0}
{"id": "eqasc_validation_1225", "prediction": "all x y z.((HarderMineral(x) & SofterMineral(y) & Mineral(z)) -> CanScratch(x,y,z))", "score": 0}
{"id": "eqasc_validation_1225", "prediction": "all x.(HarderMinerals(x) -> ScratchesSofterMinerals(x))", "score": 0}
{"id": "eqasc_validation_1225", "prediction": "all x y.((HarderMinerals(x) & SofterMinerals(y)) -> CanScratch(x,y))", "score": 0}
{"id": "eqasc_validation_1225", "prediction": "all x y z.((HarderMineral(x) & SofterMineral(y)) -> CanScratch(x,y))", "score": 0}
{"id": "eqasc_validation_1225", "prediction": "all x.(HarderMinerals(x) -> ScratchSofterMinerals(x))", "score": 0}
{"id": "eqasc_validation_1225", "prediction": "all x y.((HarderMineral(x) & SofterMineral(y)) -> CanCrumble(x,y))", "score": 0}
{"id": "eqasc_validation_1226", "prediction": "all x.(MeasuringHardnessOfMinerals(x) -> RequiresHarshMineral(x))", "score": 0}
{"id": "eqasc_validation_1226", "prediction": "all x y.((Mineral(x) & Mineral(y)) -> RequiresHarderMineral(x,y))", "score": 0}
{"id": "eqasc_validation_1226", "prediction": "all x.(MeasuringHardnessOfMinerals(x) -> RequiresHarderMineral(x))", "score": 0}
{"id": "eqasc_validation_1226", "prediction": "all x y.((Mineral(x) & Mineral(y)) -> RequiresHarshMineral(x,y))", "score": 0}
{"id": "eqasc_validation_1226", "prediction": "all x.((Mineral(x) & Hardness(x)) -> RequiresHarshMineral(x))", "score": 0}
{"id": "eqasc_validation_1226", "prediction": "all x.(MeasuringHardnessOfMinerals(x) -> RequiresHarsherMineral(x))", "score": 0}
{"id": "eqasc_validation_1226", "prediction": "all x y.((Mineral(x) & Mineral(y) & MeasuringHardness(x,y)) -> RequiresHarshMineral(x,y))", "score": 0}
{"id": "eqasc_validation_1226", "prediction": "all x.((Mineral(x) & Hardness(x)) -> RequiresHarderMineral(x))", "score": 0}
{"id": "eqasc_validation_1226", "prediction": "all x y.((Mineral(x) & Mineral(y)) -> MeasuringHardnessRequiresHarshMineral(x,y))", "score": 0}
{"id": "eqasc_validation_1226", "prediction": "all x y.((Mineral(x) & Mineral(y) & MeasuringHardness(x,y)) -> RequiresHarshMineral(x))", "score": 0}
{"id": "eqasc_validation_1226", "prediction": "all x.(MeasuringHardnessOfMineralsRequiresHarshMineral(x) -> HarderMineral(x))", "score": 0}
{"id": "eqasc_validation_1226", "prediction": "all x.((Mineral(x) & HarderMineral(x)) -> MeasuringHardness(x))", "score": 0}
{"id": "eqasc_validation_1226", "prediction": "all x.(MeasuringHardnessOfMinerals(x) -> HarderMineral(x))", "score": 0}
{"id": "eqasc_validation_1226", "prediction": "all x.((Mineral(x) & MeasuringHardness(x)) -> RequiresHarshMineral(x))", "score": 0}
{"id": "eqasc_validation_1226", "prediction": "all x y.((Mineral(x) & Mineral(y)) -> RequiresHarder(x,y))", "score": 0}
{"id": "eqasc_validation_1226", "prediction": "all x y.((Mineral(x) & Mineral(y) & MeasuringHardness(x,y)) -> RequiresHarderMineral(x,y))", "score": 0}
{"id": "eqasc_validation_1227", "prediction": "all x y.((MohScale(x) & Mineral(y)) -> DefinesHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1227", "prediction": "all x y.((MohScale(x) & Mineral(y)) -> DepictsHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1227", "prediction": "all x y.((MohScales(x) & Mineral(y)) -> DefinesHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1227", "prediction": "all x y z.((MohScale(x) & Mineral(y) & Hardness(z)) -> UsedToDepict(x,y,z))", "score": 0}
{"id": "eqasc_validation_1227", "prediction": "all x y.((MohScale(x) & Mineral(y)) -> DescriptionOfHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1227", "prediction": "all x.(MohScale(x) -> DefinesMineralHardness(x))", "score": 0}
{"id": "eqasc_validation_1227", "prediction": "all x y.((MohScale(x) & Mineral(y)) -> UsedToDepictHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1227", "prediction": "all x y.((MohScales(x) & Mineral(y)) -> DepictsHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1227", "prediction": "all x y.((MohsScales(x) & Mineral(y)) -> DefinesHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1227", "prediction": "all x y.((MohsScale(x) & Mineral(y)) -> DefinesHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1227", "prediction": "all x y.((Scale(x) & Mineral(y)) -> DefinesHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1227", "prediction": "all x y.((Mineral(x) & MohScale(x)) -> DefinesHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1227", "prediction": "all x y z.((MohScale(x) & Mineral(y) & Hardness(z)) -> Defines(x,y,z))", "score": 0}
{"id": "eqasc_validation_1227", "prediction": "all x y z.((MohScale(x) & Mineral(y) & Hardness(z)) -> Depicts(x,y,z))", "score": 0}
{"id": "eqasc_validation_1227", "prediction": "all x y.((Mineral(x) & MohScale(y)) -> DefinesHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1227", "prediction": "all x y z.((MohScale(x) & Mineral(y) & Hardness(z)) -> UsedToDefine(x,y,z))", "score": 0}
{"id": "eqasc_validation_1228", "prediction": "all x y.((MohScale(x) & MohScale(y)) -> RequiresScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1228", "prediction": "all x y.((MohScale(x) & MohScale(y)) -> ScratchingRequires(x,y))", "score": 0}
{"id": "eqasc_validation_1228", "prediction": "all x y.((MohScale(x) & Measurement(y)) -> RequiresScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1228", "prediction": "all x y z.((MohScale(x) & Measurement(y) & MohScale(z)) -> RequiresScraping(x,y,z))", "score": 0}
{"id": "eqasc_validation_1228", "prediction": "all x y.((MohsScale(x) & Measurement(y)) -> RequiresScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1228", "prediction": "all x y z.((MohScale(x) & Measurement(y) & MohScale(z)) -> ScratchingRequires(x,y,z))", "score": 0}
{"id": "eqasc_validation_1228", "prediction": "all x y.((MohScale(x) & Measurement(y)) -> ScratchingRequires(x,y))", "score": 0}
{"id": "eqasc_validation_1228", "prediction": "all x y.((MohScale(x) & MohScale(y)) -> RequiresScratching(x,y))", "score": 0}
{"id": "eqasc_validation_1228", "prediction": "all x y.((MohsScale(x) & MohsScale(y)) -> RequiresScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1228", "prediction": "all x.((Measurement(x) & MohScale(x)) -> RequiresScraping(x))", "score": 0}
{"id": "eqasc_validation_1228", "prediction": "all x y z.((MohScale(x) & Measurement(y) & Scale(z)) -> RequiresScraping(x,y,z))", "score": 0}
{"id": "eqasc_validation_1228", "prediction": "all x y z.((MohScale(x) & Measurement(y) & MohScale(z)) -> RequiresScratching(x,y,z))", "score": 0}
{"id": "eqasc_validation_1228", "prediction": "all x y z.((MohsScale(x) & Measurement(y) & Scale(z)) -> RequiresScraping(x,y,z))", "score": 0}
{"id": "eqasc_validation_1228", "prediction": "all x y z.((MohScale(x) & Measurement(y) & MohScale(z)) -> RequiresScraping(x,z))", "score": 0}
{"id": "eqasc_validation_1228", "prediction": "all x y.((MohScale(x) & MohsScale(y)) -> RequiresScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1229", "prediction": "all x.(Damage(x) -> Scratch(x))", "score": 0}
{"id": "eqasc_validation_1229", "prediction": "exists x.(Damage(x) & Scratch(x))", "score": 0}
{"id": "eqasc_validation_1229", "prediction": "all x.((Damage(x) & Scratch(x)) -> Damage(x))", "score": 0}
{"id": "eqasc_validation_1229", "prediction": "all x y.((Damage(x) & Scratch(y)) -> Damage(x,y))", "score": 0}
{"id": "eqasc_validation_1229", "prediction": "(exists x.(Damage(x) & Scratch(x)))", "score": 0}
{"id": "eqasc_validation_1229", "prediction": "all x.((Damage(x) & Scratch(x)) -> DamageDamage(x))", "score": 0}
{"id": "eqasc_validation_1229", "prediction": "all x.(Cracked(x) -> Damage(x))", "score": 0}
{"id": "eqasc_validation_1229", "prediction": "all x.((Damage(x) & Scratch(x)) -> Damages(x))", "score": 0}
{"id": "eqasc_validation_1229", "prediction": "all x y.((Damage(x) & Scratch(y)) -> Damage(x))", "score": 0}
{"id": "eqasc_validation_1229", "prediction": "all x.(Damage(x) -> Scratcher(x))", "score": 0}
{"id": "eqasc_validation_1229", "prediction": "all x.((Damage(x) & Scratch(x)) -> Damaged(x))", "score": 0}
{"id": "eqasc_validation_1229", "prediction": "all x.(Scratch(x) -> Damage(x))", "score": 0}
{"id": "eqasc_validation_1229", "prediction": "all x.((Damage(x) & Scratch(x)) -> DamagedBy(x))", "score": 0}
{"id": "eqasc_validation_1230", "prediction": "all x y.((Mineral(x) & Mineral(y) & MeasuresHardness(x,y)) -> RequiresDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1230", "prediction": "all x y.((Mineral(x) & Mineral(y)) -> (MeasuresHardness(x,y) & RequiresDamage(x,y)))", "score": 0}
{"id": "eqasc_validation_1230", "prediction": "all x y.((Mineral(x) & Mineral(y)) -> MeasuresHardnessRequiresDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1230", "prediction": "all x.(MeasuresHardnessOfMinerals(x) -> RequiresDamageOfMinerals(x))", "score": 0}
{"id": "eqasc_validation_1230", "prediction": "all x.(MeasuresHardnessOfMinerals(x) -> RequiresDamagingMinerals(x))", "score": 0}
{"id": "eqasc_validation_1230", "prediction": "all x y.((Mineral(x) & Mineral(y)) -> MeasuresHardnessRequiresDamaging(x,y))", "score": 0}
{"id": "eqasc_validation_1230", "prediction": "all x y.((Mineral(x) & Mineral(y) & MeasuresHardness(x,y)) -> Damages(x,y))", "score": 0}
{"id": "eqasc_validation_1230", "prediction": "all x y.((Mineral(x) & Mineral(y)) -> (MeasuresHardness(x,y) & Damages(x,y)))", "score": 0}
{"id": "eqasc_validation_1230", "prediction": "all x.(MeasuresHardnessOfMinerals(x) -> RequiresDamage(x))", "score": 0}
{"id": "eqasc_validation_1230", "prediction": "all x y.((Mineral(x) & Mineral(y)) -> (MeasuresHardness(x,y) & RequiresDamaging(x,y)))", "score": 0}
{"id": "eqasc_validation_1230", "prediction": "all x y.((Mineral(x) & Mineral(y) & MeasuresHardness(x,y)) -> RequiresDamaging(x,y))", "score": 0}
{"id": "eqasc_validation_1230", "prediction": "all x y.((MeasuresHardnessOfMinerals(x) & Minerals(y)) -> RequiresDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1230", "prediction": "all x.((MeasuresHardnessOfMinerals(x) & DamagesMinerals(x)) -> RequiresDamage(x))", "score": 0}
{"id": "eqasc_validation_1230", "prediction": "all x.(MeasuringHardnessOfMinerals(x) -> RequiresDamagingMinerals(x))", "score": 0}
{"id": "eqasc_validation_1230", "prediction": "all x y.((Mineral(x) & Hardness(y)) -> Damages(x,y))", "score": 0}
{"id": "eqasc_validation_1230", "prediction": "all x.(MeasuresHardnessOfMinerals(x) -> DamagesMinerals(x))", "score": 0}
{"id": "eqasc_validation_1231", "prediction": "all x y z.((Mineral(x) & Scratching(x,y) & MohScale(z)) -> DeterminesPlaceOnScale(x,z))", "score": 0}
{"id": "eqasc_validation_1231", "prediction": "all x y z.((Mineral(x) & Scratching(x,y) & MohsScale(z)) -> DeterminesPlaceOnScale(x,z))", "score": 0}
{"id": "eqasc_validation_1231", "prediction": "all x y z.((Mineral(x) & Scratching(x,y) & MohsScene(z)) -> DeterminesPlaceOnScene(x,z))", "score": 0}
{"id": "eqasc_validation_1231", "prediction": "all x y.((Mineral(x) & Scratching(x,y)) -> DeterminesPlaceOnMohScale(x,y))", "score": 0}
{"id": "eqasc_validation_1231", "prediction": "all x y z.((Mineral(x) & Scratching(x) & MohScale(y) & MohScale(z)) -> DeterminesPlace(x,y,z))", "score": 0}
{"id": "eqasc_validation_1231", "prediction": "all x y z.((Mineral(x) & Scratching(x,y) & MohScale(z)) -> DeterminesPlace(x,z))", "score": 0}
{"id": "eqasc_validation_1231", "prediction": "all x y.((Mineral(x) & Scratching(x,y)) -> DeterminesPlaceOnMohsScale(x,y))", "score": 0}
{"id": "eqasc_validation_1231", "prediction": "all x y.((Mineral(x) & Scratching(x,y)) -> DeterminesPlaceOnMohScale(y))", "score": 0}
{"id": "eqasc_validation_1231", "prediction": "all x y z.((Mineral(x) & Scratching(x) & MohScale(y) & MohScale(z)) -> DeterminesPlaceOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1231", "prediction": "all x y z.((Mineral(x) & Scratching(x) & MohScale(y) & MohScale(z)) -> DeterminesPlaceOnScale(x,y,z))", "score": 0}
{"id": "eqasc_validation_1231", "prediction": "all x y.((Mineral(x) & Scratching(x,y)) -> DeterminesPlaceOnMohScale(x))", "score": 0}
{"id": "eqasc_validation_1231", "prediction": "all x y.((Mineral(x) & Scratching(x,y)) -> DeterminesPlaceOnMohsScale(x))", "score": 0}
{"id": "eqasc_validation_1231", "prediction": "all x y z.((Mineral(x) & Scratching(y) & MohScale(z)) -> DeterminesPlaceOnScale(x,y,z))", "score": 0}
{"id": "eqasc_validation_1231", "prediction": "all x y.((Mineral(x) & Scratching(x,y)) -> DeterminesPlaceOnMohsScale(y))", "score": 0}
{"id": "eqasc_validation_1231", "prediction": "all x.((Mineral(x) & Scratches(x)) -> DeterminesPlaceOnMohScale(x))", "score": 0}
{"id": "eqasc_validation_1231", "prediction": "all x y.((Mineral(x) & Scratching(x)) -> DeterminesPlaceOnMohScale(x,y))", "score": 0}
{"id": "eqasc_validation_1232", "prediction": "all x y.((Mineral(x) & MohsScaleOfHardness(y)) -> FiguresOutHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1232", "prediction": "all x y.((Mineral(x) & MohsScaleOfHardness(y)) -> FiguredOut(x,y))", "score": 0}
{"id": "eqasc_validation_1232", "prediction": "all x y.((Mineral(x) & Mineral(y)) -> MohScaleOfHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1232", "prediction": "all x y.((Mineral(x) & MohScaleOfHardness(y)) -> FiguresOutHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1232", "prediction": "all x y.((Mineral(x) & MohScaleOfHardness(y)) -> FiguredOut(x,y))", "score": 0}
{"id": "eqasc_validation_1232", "prediction": "all x y.((Mineral(x) & MohsScaleOfHardness(y)) -> DeterminesHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1232", "prediction": "all x y.((Mineral(x) & MohScaleOfHardness(y)) -> DeterminesHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1232", "prediction": "all x y.((Mineral(x) & Mineral(y)) -> MohsScaleOfHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1232", "prediction": "all x y.((Mineral(x) & MohsScalesOfHardness(y)) -> FiguresOutHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1232", "prediction": "all x y.((Mineral(x) & MohsScaleOfHardness(x)) -> FiguresOutHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1232", "prediction": "all x y.((Mineral(x) & MohScaleOfHardness(x)) -> FiguresOutHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1232", "prediction": "all x.((Mineral(x) & MohScaleOfHardness(x)) -> FiguresOutHardness(x))", "score": 0}
{"id": "eqasc_validation_1232", "prediction": "all x.((Mineral(x) & MohsScaleOfHardness(x)) -> FiguresOutHardness(x))", "score": 0}
{"id": "eqasc_validation_1232", "prediction": "all x y z.((Mineral(x) & MohsScaleOfHardness(y) & Mineral(z)) -> FiguresOutHardness(x,y,z))", "score": 0}
{"id": "eqasc_validation_1232", "prediction": "all x y z.((Mineral(x) & MohsScaleOfHardness(y) & Mineral(z)) -> DeterminesHardness(x,y,z))", "score": 0}
{"id": "eqasc_validation_1232", "prediction": "all x y.((Mineral(x) & MohsSceneOfHardness(y)) -> FiguredOut(x,y))", "score": 0}
{"id": "eqasc_validation_1233", "prediction": "all x y.((MohsScaleOfHardness(x) & Material(y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1233", "prediction": "all x.(MohsScaleOfHardness(x) -> ScratchesMaterials(x))", "score": 0}
{"id": "eqasc_validation_1233", "prediction": "all x y.((MohScaleOfHardness(x) & MohScaleOfHardness(y)) -> ScratchesMaterials(x,y))", "score": 0}
{"id": "eqasc_validation_1233", "prediction": "all x y.((MohsScaleOfHardness(x) & MohsScaleOfHardness(y)) -> ScratchesMaterials(x,y))", "score": 0}
{"id": "eqasc_validation_1233", "prediction": "all x y z.((MohsScaleOfHardness(x) & Material(y) & Material(z)) -> Scratches(x,y,z))", "score": 0}
{"id": "eqasc_validation_1233", "prediction": "all x.(MohScaleOfHardness(x) -> ScratchesMaterials(x))", "score": 0}
{"id": "eqasc_validation_1233", "prediction": "all x y z.((MohsScaleOfHardness(x) & MohsScaleOfHardness(y) & Material(z)) -> Scratches(x,y,z))", "score": 0}
{"id": "eqasc_validation_1233", "prediction": "all x y.((MohScaleOfHardness(x) & Material(y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1233", "prediction": "all x y.((MohScaleOfHardness(x) & MohsScaleOfHardness(y)) -> ScratchesMaterials(x,y))", "score": 0}
{"id": "eqasc_validation_1233", "prediction": "all x.((MohsScaleOfHardness(x) & ScratchesMaterials(x)) -> UsedBy(x))", "score": 0}
{"id": "eqasc_validation_1233", "prediction": "all x y.((MohsScaleOfHardness(x) & Materials(y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1233", "prediction": "all x y.((MohsScaleOfHardness(x) & Material(y) & Scratches(x,y)) -> UsedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1233", "prediction": "all x y z.((MohScaleOfHardness(x) & MohScaleOfHardness(y) & Material(z)) -> Scratches(x,y,z))", "score": 0}
{"id": "eqasc_validation_1233", "prediction": "all x y.((MohScaleOfHardness(x) & MohScaleOfHardness(y)) -> ScratchesMaterials(x))", "score": 0}
{"id": "eqasc_validation_1233", "prediction": "all x y z.((MohsScaleOfHardness(x) & MohsScaleOfHardness(y) & Material(z)) -> Scratches(x,z))", "score": 0}
{"id": "eqasc_validation_1233", "prediction": "all x y.((MohsScaleOfHardness(x) & MohsScaleOfHardness(y)) -> ScratchesMaterials(x))", "score": 0}
{"id": "eqasc_validation_1234", "prediction": "all x y z.((Satellite(x) & Image(y) & Space(z)) -> TakesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1234", "prediction": "all x y.((Satellite(x) & Space(y)) -> TakesImagesFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1234", "prediction": "all x y.((Satellite(x) & Space(y)) -> TakeImagesFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1234", "prediction": "all x y z.((Satellite(x) & Image(y) & Space(z) & TakesFrom(x,y,z)) -> TakesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1234", "prediction": "all x y z.((Satellite(x) & Image(y) & Space(z)) -> UsedToTakeFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1234", "prediction": "all x y.((Satellite(x) & Image(y)) -> TakesFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1234", "prediction": "all x y z.((Satellite(x) & Space(y) & Image(z)) -> TakesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1234", "prediction": "all x y.((Satellite(x) & Space(y)) -> UsedToTakeImagesFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1234", "prediction": "all x y z.((Satellite(x) & Image(y) & Space(z)) -> UsedToTake(x,y,z))", "score": 0}
{"id": "eqasc_validation_1234", "prediction": "all x y z w.((Satellite(x) & Image(y) & Space(z) & TakesFrom(x,y,z)) -> TakesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1234", "prediction": "all x.(Satellite(x) -> TakesImagesFromSpace(x))", "score": 0}
{"id": "eqasc_validation_1234", "prediction": "all x y z.((Satellite(x) & Image(y) & Space(z) & TakesFrom(x,y,z)) -> UsedToTakeFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1234", "prediction": "all x.(Satellite(x) -> TakeImagesFromSpace(x))", "score": 0}
{"id": "eqasc_validation_1234", "prediction": "all x y.((Satellite(x) & Space(y)) -> UsedToTakeImages(x,y))", "score": 0}
{"id": "eqasc_validation_1234", "prediction": "all x y z.((Satellite(x) & Image(y) & Space(z)) -> TakesFromSatellite(x,y,z))", "score": 0}
{"id": "eqasc_validation_1234", "prediction": "all x y z.((Satellite(x) & Space(y) & Image(z)) -> UsedToTakeFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1235", "prediction": "all x.(Image(x) -> (Satellite(x) | Infrared(x)))", "score": 0}
{"id": "eqasc_validation_1235", "prediction": "all x.(Image(x) -> (IncludesSatellite(x) | IncludesInfrared(x)))", "score": 0}
{"id": "eqasc_validation_1235", "prediction": "all x.(Image(x) -> (IncludesSatellite(x) & IncludesInfrared(x)))", "score": 0}
{"id": "eqasc_validation_1235", "prediction": "all x.(Image(x) -> (Satellite(x) & Infrared(x)))", "score": 0}
{"id": "eqasc_validation_1235", "prediction": "all x.(Image(x) -> (SatellitePictures(x) | InfraredPictures(x)))", "score": 0}
{"id": "eqasc_validation_1235", "prediction": "all x.(Image(x) -> (SatellitePicture(x) | InfraredPicture(x)))", "score": 0}
{"id": "eqasc_validation_1235", "prediction": "all x.(Image(x) -> (IncludesSatellite(x) | Infrared(x)))", "score": 0}
{"id": "eqasc_validation_1235", "prediction": "all x y.((Image(x) & Satellite(y) & Infrared(y)) -> Includes(x,y))", "score": 0}
{"id": "eqasc_validation_1235", "prediction": "all x.(Image(x) -> (IncludesSatellite(x) | IncludedInfrared(x)))", "score": 0}
{"id": "eqasc_validation_1235", "prediction": "all x.(Image(x) -> (SatelliteImage(x) | InfraredImage(x)))", "score": 0}
{"id": "eqasc_validation_1235", "prediction": "all x y.((Image(x) & Satellite(y) & Infrared(z)) -> Includes(x,y))", "score": 0}
{"id": "eqasc_validation_1235", "prediction": "all x y.((Image(x) & Satellite(y) & Infrared(x)) -> Includes(x,y))", "score": 0}
{"id": "eqasc_validation_1235", "prediction": "exists x.(Image(x) & (Satellite(x) | Infrared(x)))", "score": 0}
{"id": "eqasc_validation_1235", "prediction": "all x y.((Image(x) & Satellite(y) & Infrared(y)) -> Included(x,y))", "score": 0}
{"id": "eqasc_validation_1236", "prediction": "all x.(Satellite(x) -> TakesInfraredPicturesFromSpace(x))", "score": 0}
{"id": "eqasc_validation_1236", "prediction": "all x y.((Satellite(x) & Space(y)) -> TakesInfraredPictures(x,y))", "score": 0}
{"id": "eqasc_validation_1236", "prediction": "all x y z.((Satellite(x) & InfraredPicture(y) & Space(z)) -> TakesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1236", "prediction": "all x y.((Satellite(x) & InfraredPicture(y)) -> TakesFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1236", "prediction": "all x y.((Satellite(x) & Infrared(y)) -> TakesFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1236", "prediction": "all x y.((Satellite(x) & Space(y)) -> TakesInfrared(x,y))", "score": 0}
{"id": "eqasc_validation_1236", "prediction": "all x y z.((Satellite(x) & Infrared(y) & Space(z)) -> TakesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1236", "prediction": "all x y z.((Satellite(x) & InfraredPicture(y) & Space(z)) -> UsedToTake(x,y,z))", "score": 0}
{"id": "eqasc_validation_1236", "prediction": "all x y.((Satellite(x) & Space(y)) -> TakesInfraredPicturesFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1236", "prediction": "all x.(Satellite(x) -> TakesInfraredPictures(x))", "score": 0}
{"id": "eqasc_validation_1236", "prediction": "all x y.((Satellite(x) & Space(y)) -> TakesInfraredPhotographs(x,y))", "score": 0}
{"id": "eqasc_validation_1236", "prediction": "all x y.((Satellite(x) & Space(y)) -> UsedToTakeInfraredPictures(x,y))", "score": 0}
{"id": "eqasc_validation_1236", "prediction": "all x y z.((Satellite(x) & Infrared(y) & Space(z)) -> UsedToTake(x,y,z))", "score": 0}
{"id": "eqasc_validation_1236", "prediction": "all x.(Satellite(x) -> (TakesInfraredPictures(x) & FromSpace(x)))", "score": 0}
{"id": "eqasc_validation_1236", "prediction": "all x y.((Satellite(x) & InfraredPicture(y)) -> TakenFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1236", "prediction": "all x y z.((Satellite(x) & InfraredPicture(y) & Space(z)) -> UsedToTakeFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1237", "prediction": "all x y.((Meteorologist(x) & Satellite(y)) -> EmploysImagesToPredictWeather(x,y))", "score": 0}
{"id": "eqasc_validation_1237", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Weather(z)) -> EmploysImagesToPredict(x,y,z))", "score": 0}
{"id": "eqasc_validation_1237", "prediction": "all x y z.((Meteorologist(x) & Image(y) & Satellite(z)) -> EmploysToPredictWeather(x,y,z))", "score": 0}
{"id": "eqasc_validation_1237", "prediction": "all x y.((Meteorologist(x) & Satellite(y)) -> EmploysImages(x,y))", "score": 0}
{"id": "eqasc_validation_1237", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Image(z)) -> EmploysToPredictWeather(x,y,z))", "score": 0}
{"id": "eqasc_validation_1237", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Satellite(z)) -> EmploysImagesToPredictWeather(x,y,z))", "score": 0}
{"id": "eqasc_validation_1237", "prediction": "all x.(Meteorologist(x) -> (EmploysImagesFromSatellites(x) & ForecastsWeather(x)))", "score": 0}
{"id": "eqasc_validation_1237", "prediction": "all x y.((Meteorologist(x) & Satellite(y)) -> (EmploysImages(x,y) & ForecastsWeather(x)))", "score": 0}
{"id": "eqasc_validation_1237", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Weather(z)) -> (EmploysImages(x,y) & Forecasts(x,z)))", "score": 0}
{"id": "eqasc_validation_1237", "prediction": "all x.(Meteorologist(x) -> (EmploysImagesFromSatellites(x) & HelpsPredictWeather(x)))", "score": 0}
{"id": "eqasc_validation_1237", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Weather(z)) -> EmploysImages(x,y,z))", "score": 0}
{"id": "eqasc_validation_1237", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Weather(z)) -> (EmploysImages(x,y) & ForecastsWeather(x,z)))", "score": 0}
{"id": "eqasc_validation_1237", "prediction": "all x y.((Meteorologist(x) & Satellite(y) & EmploysImages(x,y)) -> ForecastsWeather(x))", "score": 0}
{"id": "eqasc_validation_1237", "prediction": "all x y.((Meteorologist(x) & Satellite(y)) -> EmploysImagesToProvidesWeather(x,y))", "score": 0}
{"id": "eqasc_validation_1237", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Weather(z)) -> (EmploysImages(x,y) & HelpsPredict(x,z)))", "score": 0}
{"id": "eqasc_validation_1237", "prediction": "all x y.((Meteorologist(x) & Satellite(y)) -> EmploysImagesToHelpPredictWeather(x,y))", "score": 0}
{"id": "eqasc_validation_1238", "prediction": "all x y.((Satellite(x) & Weather(y)) -> CanHelpPredict(x,y))", "score": 0}
{"id": "eqasc_validation_1238", "prediction": "all x y z.((Satellite(x) & Weather(y) & Weather(z)) -> CanHelpPredict(x,y,z))", "score": 0}
{"id": "eqasc_validation_1238", "prediction": "all x.(Satellite(x) -> CanHelpPredictWeather(x))", "score": 0}
{"id": "eqasc_validation_1238", "prediction": "all x y.((Satellite(x) & Weather(y)) -> CanPredict(x,y))", "score": 0}
{"id": "eqasc_validation_1238", "prediction": "all x y z.((Satellite(x) & Weather(y) & Weather(z)) -> CanPredict(x,y,z))", "score": 0}
{"id": "eqasc_validation_1238", "prediction": "all x y z.((Satellite(x) & Weather(y) & Weather(z)) -> HelpsPredict(x,y,z))", "score": 0}
{"id": "eqasc_validation_1238", "prediction": "all x y.((Satellite(x) & Weather(y)) -> HelpsPredict(x,y))", "score": 0}
{"id": "eqasc_validation_1238", "prediction": "all x y z.((Satellite(x) & Weather(y) & Weather(z)) -> Forecasts(x,y,z))", "score": 0}
{"id": "eqasc_validation_1238", "prediction": "all x y.((Satellite(x) & Weather(y)) -> CanHelpPredictWeather(x,y))", "score": 0}
{"id": "eqasc_validation_1238", "prediction": "all x.(Satellite(x) -> (HelpsPredictWeather(x) & HelpsPredictWeather(x)))", "score": 0}
{"id": "eqasc_validation_1238", "prediction": "all x y z.((Satellite(x) & Weather(y) & Weather(z)) -> CanHelpPredictWeather(x,y,z))", "score": 0}
{"id": "eqasc_validation_1238", "prediction": "all x y.((Satellite(x) & Weather(y)) -> ForecastsWeather(x,y))", "score": 0}
{"id": "eqasc_validation_1238", "prediction": "all x y.((Satellite(x) & Weather(y)) -> Forecasts(x,y))", "score": 0}
{"id": "eqasc_validation_1238", "prediction": "all x y z.((Satellite(x) & Weather(y) & Weather(z)) -> CanHelpPredict(x,y))", "score": 0}
{"id": "eqasc_validation_1238", "prediction": "all x y z.((Satellite(x) & Weather(y) & Weather(z)) -> CanPredictWeather(x,y,z))", "score": 0}
{"id": "eqasc_validation_1238", "prediction": "all x.(Satellite(x) -> (CanHelpPredictWeather(x) & CanHelpPredictWeather(x)))", "score": 0}
{"id": "eqasc_validation_1239", "prediction": "all x y z.((Image(x) & Earth(y) & Space(z)) -> TakenFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1239", "prediction": "all x y.((Image(x) & Earth(y) & TakenFromSpace(x,y)) -> TakenFromSpace(x))", "score": 0}
{"id": "eqasc_validation_1239", "prediction": "all x y.((Image(x) & Earth(y)) -> TakenFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1239", "prediction": "all x y.((Image(x) & Earth(y) & TakenFromSpace(x,y)) -> TakenFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1239", "prediction": "all x y.((Image(x) & Earth(y) & TakenFromSpace(x)) -> TakenFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1239", "prediction": "all x y z.((Image(x) & Earth(y) & Space(z) & TakenFrom(x,y,z)) -> TakenFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1239", "prediction": "all x.((Image(x) & Earth(x) & TakenFromSpace(x)) -> TakenFromSpace(x))", "score": 0}
{"id": "eqasc_validation_1239", "prediction": "all x.(Image(x) -> TakenFromSpace(x))", "score": 0}
{"id": "eqasc_validation_1239", "prediction": "all x.((Image(x) & Earth(x)) -> TakenFromSpace(x))", "score": 0}
{"id": "eqasc_validation_1239", "prediction": "all x y z.((Image(x) & Earth(y) & Space(z) & TakenFrom(x,y,z)) -> TakenFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1239", "prediction": "all x y.((Image(x) & Earth(y) & TakenFromSpace(x,y)) -> TakenFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1239", "prediction": "all x y.((Image(x) & Earth(y) & TakenFromSpace(x)) -> TakenFromSpace(x))", "score": 0}
{"id": "eqasc_validation_1239", "prediction": "all x.((EarthImage(x) & TakenFromSpace(x)) -> TakenFromSpace(x))", "score": 0}
{"id": "eqasc_validation_1239", "prediction": "all x y.((EarthImage(x) & Space(y)) -> TakenFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1239", "prediction": "all x.(EarthImage(x) -> TakenFromSpace(x))", "score": 0}
{"id": "eqasc_validation_1239", "prediction": "all x y.((Image(x) & Earth(y) & TakenFromSpace(x)) -> TakenFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1240", "prediction": "all x y.((Satellite(x) & Earth(y)) -> TakesImagesOf(x,y))", "score": 0}
{"id": "eqasc_validation_1240", "prediction": "all x y z.((Satellite(x) & Earth(y) & Earth(z)) -> TakesImagesOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1240", "prediction": "all x.(Satellite(x) -> TakesImagesOfEarth(x))", "score": 0}
{"id": "eqasc_validation_1240", "prediction": "all x y z.((Satellite(x) & Earth(y) & Satellite(z)) -> TakesImagesOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1240", "prediction": "all x y.((Satellite(x) & Earth(y)) -> UsedToTakeImagesOf(x,y))", "score": 0}
{"id": "eqasc_validation_1240", "prediction": "all x y.((Satellite(x) & Earth(y)) -> TakesImage(x,y))", "score": 0}
{"id": "eqasc_validation_1240", "prediction": "all x y.((Satellite(x) & Earth(y)) -> TakeImagesOf(x,y))", "score": 0}
{"id": "eqasc_validation_1240", "prediction": "all x y z.((Satellite(x) & Earth(y) & Image(z)) -> Takes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1240", "prediction": "all x y z.((Satellite(x) & Earth(y) & Earth(z)) -> TakesImage(x,y,z))", "score": 0}
{"id": "eqasc_validation_1240", "prediction": "all x y z.((Satellite(x) & Earth(y) & Earth(z)) -> UsedToTakeImagesOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1240", "prediction": "all x y.((Satellite(x) & Earth(y)) -> TakesImageOf(x,y))", "score": 0}
{"id": "eqasc_validation_1240", "prediction": "all x y z.((Satellite(x) & Earth(y) & Satellite(z)) -> UsedToTakeImagesOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1240", "prediction": "all x.(Satellite(x) -> (TakesImagesOfEarth(x) & TakesImagesOfEarth(x)))", "score": 0}
{"id": "eqasc_validation_1240", "prediction": "all x y z.((Satellite(x) & Earth(y) & Satellite(z)) -> TakesImage(x,y,z))", "score": 0}
{"id": "eqasc_validation_1240", "prediction": "all x y z.((Satellite(x) & Earth(y) & Image(z)) -> TakesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1240", "prediction": "all x y z.((Satellite(x) & Earth(y) & Earth(z)) -> TakesImageOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1241", "prediction": "all x y.((SatelliteImagery(x) & OzoneHole(y)) -> GlobalPerspective(x,y))", "score": 0}
{"id": "eqasc_validation_1241", "prediction": "all x.(SatelliteImagery(x) -> GlobalPerspectiveOnOzoneHole(x))", "score": 0}
{"id": "eqasc_validation_1241", "prediction": "all x y.((SatelliteImagery(x) & OzoneHole(y)) -> GivesGlobalPerspective(x,y))", "score": 0}
{"id": "eqasc_validation_1241", "prediction": "all x.(SatelliteImagery(x) -> GivesGlobalPerspectiveOnOzoneHole(x))", "score": 0}
{"id": "eqasc_validation_1241", "prediction": "all x y.((SatelliteImagery(x) & OzonHole(y)) -> GlobalPerspective(x,y))", "score": 0}
{"id": "eqasc_validation_1241", "prediction": "all x y z.((SatelliteImagery(x) & OzoneHole(y) & GlobalPerspective(z)) -> Gives(x,y,z))", "score": 0}
{"id": "eqasc_validation_1241", "prediction": "all x y z.((SatelliteImagery(x) & OzoneHole(y) & GlobalPerspective(x,y)) -> Gives(x,z))", "score": 0}
{"id": "eqasc_validation_1241", "prediction": "all x y z.((SatelliteImagery(x) & OzoneHole(y) & GlobalPerspective(z)) -> GivesGlobalPerspective(x,y,z))", "score": 0}
{"id": "eqasc_validation_1241", "prediction": "all x y.((SatelliteImagery(x) & OzoneHole(y)) -> GlobalPerspectiveOn(x,y))", "score": 0}
{"id": "eqasc_validation_1241", "prediction": "all x y.((SatelliteImagery(x) & OzoneHole(y)) -> GlobalPosition(x,y))", "score": 0}
{"id": "eqasc_validation_1241", "prediction": "all x y z.((SatelliteImagery(x) & OzoneHole(y) & GlobalPerspective(x,y)) -> GivesGlobalPerspective(x,z))", "score": 0}
{"id": "eqasc_validation_1241", "prediction": "all x y z.((SatelliteImagery(x) & OzoneHole(y) & GlobalPerspective(x,y)) -> GivesGlobalPerspective(x,y))", "score": 0}
{"id": "eqasc_validation_1241", "prediction": "all x y z.((SatelliteImagery(x) & OzoneHole(y) & GlobalPerspective(x,y)) -> Gives(x,y))", "score": 0}
{"id": "eqasc_validation_1241", "prediction": "all x y.((SatelliteImagery(x) & OzoneHole(y)) -> GivesGlobalPerspectiveOn(x,y))", "score": 0}
{"id": "eqasc_validation_1241", "prediction": "all x.((SatelliteImagery(x) & GlobalPerspectiveOnOzoneHole(x)) -> Gives(x,y))", "score": 0}
{"id": "eqasc_validation_1241", "prediction": "all x y.((SatelliteImagery(x) & OzonHole(y)) -> GivesGlobalPerspective(x,y))", "score": 0}
{"id": "eqasc_validation_1242", "prediction": "all x y.((SpaceImage(x) & OzoneHole(y)) -> UsedToStudy(x,y))", "score": 0}
{"id": "eqasc_validation_1242", "prediction": "all x y z.((SpaceImage(x) & OzoneHole(y) & OzoneHole(z)) -> UsedToStudy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1242", "prediction": "all x y z.((Image(x) & Space(y) & OzoneHole(z)) -> UsedToStudy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1242", "prediction": "all x y z.((ImagesFromSpace(x) & OzoneHole(y) & OzoneHole(z)) -> UsedToStudy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1242", "prediction": "all x y.((ImagesFromSpace(x) & OzoneHole(y)) -> UsedToStudy(x,y))", "score": 0}
{"id": "eqasc_validation_1242", "prediction": "all x y.((Image(x) & Space(y)) -> UsedToStudyOzoneHole(x,y))", "score": 0}
{"id": "eqasc_validation_1242", "prediction": "all x y z.((SpaceImages(x) & OzoneHole(y) & OzoneHole(z)) -> UsedToStudy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1242", "prediction": "all x.((ImagesFromSpace(x) & OzoneHole(x)) -> UsedToStudy(x,y))", "score": 0}
{"id": "eqasc_validation_1242", "prediction": "all x.((ImagesFromSpace(x) & OzoneHole(y)) -> UsedToStudy(x,y))", "score": 0}
{"id": "eqasc_validation_1242", "prediction": "all x y.((SpaceImages(x) & OzoneHole(y)) -> UsedToStudy(x,y))", "score": 0}
{"id": "eqasc_validation_1242", "prediction": "all x.((Image(x) & FromSpace(x)) -> UsedToStudyOzoneHole(x))", "score": 0}
{"id": "eqasc_validation_1242", "prediction": "all x.((ImagesFromSpace(x) & OzoneHole(x)) -> UsedToStudy(x))", "score": 0}
{"id": "eqasc_validation_1242", "prediction": "all x y.((Image(x) & Space(y) & UsedToStudyOzoneHole(x,y)) -> UsedToStudyOzoneHole(x,y))", "score": 0}
{"id": "eqasc_validation_1242", "prediction": "all x.((ImagesFromSpace(x) & OzoneHole(x)) -> UsedToStudy(x,OzoneHole))", "score": 0}
{"id": "eqasc_validation_1242", "prediction": "all x y z.((Image(x) & Space(y) & OzoneHole(z)) -> UsedToStudyOzoneHole(x,y,z))", "score": 0}
{"id": "eqasc_validation_1242", "prediction": "all x y.((SpaceImage(x) & OzoneHole(y)) -> UsedToStudyOzoneHole(x,y))", "score": 0}
{"id": "eqasc_validation_1243", "prediction": "all x.(Photo(x) -> DigitalImage(x))", "score": 0}
{"id": "eqasc_validation_1243", "prediction": "all x y.((Photo(x) & DigitalImage(y)) -> DigitalImage(x))", "score": 0}
{"id": "eqasc_validation_1243", "prediction": "all x y.((Photo(x) & DigitalImage(y)) -> DigitalImage(x,y))", "score": 0}
{"id": "eqasc_validation_1243", "prediction": "all x.((Photo(x) & DigitalImage(x)) -> DigitalImage(x))", "score": 0}
{"id": "eqasc_validation_1243", "prediction": "all x.(Photo(x) -> DigitalImages(x))", "score": 0}
{"id": "eqasc_validation_1243", "prediction": "all x y.((Photo(x) & Photo(y)) -> DigitalImage(x))", "score": 0}
{"id": "eqasc_validation_1243", "prediction": "all x y.((Photo(x) & Photo(y)) -> DigitalImage(x,y))", "score": 0}
{"id": "eqasc_validation_1243", "prediction": "all x.(Picture(x) -> DigitalImage(x))", "score": 0}
{"id": "eqasc_validation_1243", "prediction": "all x y.((Photo(x) & DigitalImage(x)) -> DigitalImage(y))", "score": 0}
{"id": "eqasc_validation_1243", "prediction": "all x.(Photo(x) -> (DigitalImage(x) & DigitalImage(x)))", "score": 0}
{"id": "eqasc_validation_1243", "prediction": "all x y.((Photo(x) & DigitalImage(y)) -> Digital(x))", "score": 0}
{"id": "eqasc_validation_1243", "prediction": "all x.(Photo(x) -> (DigitalImage(x) & -DigitalImage(x)))", "score": 0}
{"id": "eqasc_validation_1243", "prediction": "all x y.((Photo(x) & DigitalImage(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_1243", "prediction": "all x y.((Photo(x) & DigitalImage(y)) -> -DigitalImage(x))", "score": 0}
{"id": "eqasc_validation_1243", "prediction": "(all x.(Photo(x) -> DigitalImage(x)))", "score": 0}
{"id": "eqasc_validation_1244", "prediction": "all x y.((Satellite(x) & Space(y)) -> TakesPhotosFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1244", "prediction": "all x y z.((Satellite(x) & Photo(y) & Space(z)) -> TakesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1244", "prediction": "all x y.((Satellite(x) & Space(y)) -> UsedToTakePhotosFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1244", "prediction": "all x y z.((Satellite(x) & Photo(y) & Space(z)) -> UsedToTakeFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1244", "prediction": "all x y z.((Satellite(x) & Photo(y) & Space(z) & TakesFrom(x,y,z)) -> TakesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1244", "prediction": "all x.(Satellite(x) -> TakesPhotosFromSpace(x))", "score": 0}
{"id": "eqasc_validation_1244", "prediction": "all x y z.((Satellite(x) & Photos(y) & Space(z)) -> TakesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1244", "prediction": "all x y z.((Satellite(x) & Space(y) & Photo(z)) -> TakesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1244", "prediction": "all x y z.((Satellite(x) & Photograph(y) & Space(z)) -> TakesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1244", "prediction": "all x y.((Satellite(x) & Space(y)) -> TakePhotosFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1244", "prediction": "all x y z.((Satellite(x) & Photo(y) & Space(z) & TakesFrom(x,y,z)) -> UsedToTakeFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1244", "prediction": "all x y.((Satellite(x) & Space(y)) -> UsedToTakePhotos(x,y))", "score": 0}
{"id": "eqasc_validation_1244", "prediction": "all x y z.((Satellite(x) & Photo(y) & Space(z)) -> UsedToTake(x,y,z))", "score": 0}
{"id": "eqasc_validation_1244", "prediction": "all x y z.((Satellite(x) & Photo(y) & Space(z)) -> TakesFromSatellite(x,y,z))", "score": 0}
{"id": "eqasc_validation_1244", "prediction": "all x y.((Satellite(x) & Space(y) & TakesPhotosFrom(x,y)) -> TakesPhotosFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1244", "prediction": "all x y z.((Satellite(x) & Photos(y) & Space(z)) -> UsedToTakeFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1245", "prediction": "all x y z.((Satellite(x) & Earth(y) & Space(z)) -> TakesPicturesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1245", "prediction": "all x y.((Satellite(x) & Earth(y)) -> TakesPicturesFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1245", "prediction": "all x y z.((Satellite(x) & Earth(y) & Space(z)) -> TakesPhotosFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1245", "prediction": "all x y.((Satellite(x) & Earth(y)) -> TakesPhotosFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1245", "prediction": "all x y z.((Satellite(x) & Earth(y) & Space(z) & TakesPicturesFrom(x,y,z)) -> TakesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1245", "prediction": "all x y z.((Satellite(x) & Earth(y) & Space(z)) -> TakesPicturesFromSatellite(x,y,z))", "score": 0}
{"id": "eqasc_validation_1245", "prediction": "all x y z.((Satellite(x) & Earth(y) & Space(z)) -> UsedToTakePicturesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1245", "prediction": "all x y z.((Satellite(x) & Earth(y) & Space(z)) -> TakesPicturesFromSpace(x,y,z))", "score": 0}
{"id": "eqasc_validation_1245", "prediction": "all x y.((Satellite(x) & Earth(y)) -> (TakesPicturesFromSpace(x,y) & TakesPicturesFromSpace(x,y)))", "score": 0}
{"id": "eqasc_validation_1245", "prediction": "all x y z.((Satellite(x) & Earth(y) & Space(z)) -> (TakesPicturesFrom(x,y,z) & TakesPicturesFrom(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1245", "prediction": "all x.(Satellite(x) -> TakesPicturesOfEarthFromSpace(x))", "score": 0}
{"id": "eqasc_validation_1245", "prediction": "all x y z.((Satellite(x) & Earth(y) & Space(z)) -> TakesPictures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1245", "prediction": "all x y z.((Satellite(x) & Earth(y) & Space(z)) -> UsedToTakePictures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1245", "prediction": "all x y z w.((Satellite(x) & Earth(y) & Space(z) & TakesPicturesFrom(x,y,z)) -> TakesFrom(x,w))", "score": 0}
{"id": "eqasc_validation_1245", "prediction": "all x y.((Satellite(x) & Earth(y)) -> UsedToTakePicturesFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1245", "prediction": "all x y.((Satellite(x) & Earth(y) & TakesPicturesFromSpace(x,y)) -> TakesFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1246", "prediction": "all x y.((Meteorologist(x) & WeatherImage(y)) -> ReliesOn(x,y))", "score": 0}
{"id": "eqasc_validation_1246", "prediction": "all x y z.((Meteorologist(x) & WeatherImage(y) & Space(z)) -> ReliesOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1246", "prediction": "all x y.((Meteorologist(x) & WeatherImage(y)) -> ReliesOnFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1246", "prediction": "all x.(Meteorologist(x) -> ReliesOnWeatherImagesFromSpace(x))", "score": 0}
{"id": "eqasc_validation_1246", "prediction": "all x y z.((Meteorologist(x) & WeatherImage(y) & Space(z) & ReliesOn(x,y,z)) -> ReliesOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1246", "prediction": "all x y z.((Meteorologist(x) & WeatherImage(y) & Space(z)) -> ReliesOn(x,y))", "score": 0}
{"id": "eqasc_validation_1246", "prediction": "all x y z.((Meteorologist(x) & WeatherImage(y) & Space(z) & ReliesOn(x,y,z)) -> ReliesOn(x,y))", "score": 0}
{"id": "eqasc_validation_1246", "prediction": "all x y.((Meteorologist(x) & Space(y)) -> ReliesOnWeatherImages(x,y))", "score": 0}
{"id": "eqasc_validation_1246", "prediction": "all x y.((Meteorologist(x) & WeatherImage(y) & Space(z)) -> ReliesOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1246", "prediction": "all x y.((Meteorologist(x) & WeatherImage(y) & FromSpace(x,y)) -> ReliesOn(x,y))", "score": 0}
{"id": "eqasc_validation_1246", "prediction": "all x y z.((Meteorologist(x) & WeatherImage(y) & Space(z)) -> ReliesOnFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1246", "prediction": "all x.(Meteorologist(x) -> ReliesOnWeatherImages(x))", "score": 0}
{"id": "eqasc_validation_1246", "prediction": "all x y.((Meteorologist(x) & WeatherImage(y) & ReliesOn(x,y)) -> ReliesOn(x,y))", "score": 0}
{"id": "eqasc_validation_1246", "prediction": "all x y.((Meteorologist(x) & WeatherImage(y) & Space(y)) -> ReliesOn(x,y))", "score": 0}
{"id": "eqasc_validation_1246", "prediction": "all x y.((Meteorologist(x) & WeatherImage(y) & FromSpace(x)) -> ReliesOn(x,y))", "score": 0}
{"id": "eqasc_validation_1246", "prediction": "all x y z.((Meteorologist(x) & WeatherImage(y) & Space(z)) -> DependsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1247", "prediction": "all x y.((Meteorologist(x) & Satellite(y)) -> ReliesOnForData(x,y))", "score": 0}
{"id": "eqasc_validation_1247", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Data(z)) -> ReliesOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1247", "prediction": "all x.(Meteorologist(x) -> ReliesOnSatellitesForData(x))", "score": 0}
{"id": "eqasc_validation_1247", "prediction": "all x.(Meteorologist(x) -> ReliesOnSatellites(x))", "score": 0}
{"id": "eqasc_validation_1247", "prediction": "all x y.((Meteorologist(x) & Satellite(y)) -> ReliesOn(x,y))", "score": 0}
{"id": "eqasc_validation_1247", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Data(z)) -> ReliesOnForData(x,y,z))", "score": 0}
{"id": "eqasc_validation_1247", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Data(z) & ReliesOn(x,y,z)) -> ReliesOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1247", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Data(z)) -> ReliesOn(x,y))", "score": 0}
{"id": "eqasc_validation_1247", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Data(z) & ReliesOn(x,y,z)) -> ReliesOn(x,y))", "score": 0}
{"id": "eqasc_validation_1247", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Data(z)) -> DependsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1247", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Data(z)) -> ReliesOnFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1247", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Data(z) & ReliesOn(x,y)) -> ReliesOn(x,z))", "score": 0}
{"id": "eqasc_validation_1247", "prediction": "all x y.((Meteorologist(x) & Satellite(y)) -> RelyOnForData(x,y))", "score": 0}
{"id": "eqasc_validation_1247", "prediction": "all x y.((Meteorologist(x) & Satellite(y) & ReliesOnForData(x,y)) -> ReliesOnForData(x,y))", "score": 0}
{"id": "eqasc_validation_1248", "prediction": "all x.(SatelliteImage(x) -> DigitalPhotograph(x))", "score": 0}
{"id": "eqasc_validation_1248", "prediction": "all x.(SatelliteImage(x) -> DigitalPhotography(x))", "score": 0}
{"id": "eqasc_validation_1248", "prediction": "all x y.((SatelliteImage(x) & DigitalPhotograph(y)) -> Images(x,y))", "score": 0}
{"id": "eqasc_validation_1248", "prediction": "all x y.((SatelliteImage(x) & Photograph(y)) -> Digital(x))", "score": 0}
{"id": "eqasc_validation_1248", "prediction": "all x y.((SatelliteImage(x) & Photograph(y)) -> Digital(x,y))", "score": 0}
{"id": "eqasc_validation_1248", "prediction": "all x y.((SatelliteImage(x) & DigitalPhotograph(y)) -> Image(x,y))", "score": 0}
{"id": "eqasc_validation_1248", "prediction": "all x y.((SatelliteImage(x) & DigitalPhotograph(y)) -> Photograph(x,y))", "score": 0}
{"id": "eqasc_validation_1248", "prediction": "all x y.((SatelliteImage(x) & DigitalPhotograph(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_1248", "prediction": "all x.((SatelliteImage(x) & DigitalPhotograph(x)) -> Images(x))", "score": 0}
{"id": "eqasc_validation_1248", "prediction": "all x y.((SatelliteImage(x) & DigitalPhotograph(y)) -> Photograph(x))", "score": 0}
{"id": "eqasc_validation_1248", "prediction": "all x.(SatelliteImage(x) -> Photograph(x))", "score": 0}
{"id": "eqasc_validation_1248", "prediction": "all x.((SatelliteImage(x) & DigitalPhotograph(x)) -> Photograph(x))", "score": 0}
{"id": "eqasc_validation_1248", "prediction": "all x.(SatelliteImage(x) -> (DigitalPhotograph(x) & -DigitalPhotograph(x)))", "score": 0}
{"id": "eqasc_validation_1248", "prediction": "all x.(SatelliteImage(x) -> DigitalPhotographic(x))", "score": 0}
{"id": "eqasc_validation_1248", "prediction": "all x.((SatelliteImage(x) & DigitalPhotograph(x)) -> Image(x))", "score": 0}
{"id": "eqasc_validation_1249", "prediction": "all x.(Satellite(x) -> TakesDigitalPhotographsFromSpace(x))", "score": 0}
{"id": "eqasc_validation_1249", "prediction": "all x y.((Satellite(x) & DigitalPhotograph(y)) -> TakesFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1249", "prediction": "all x y z.((Satellite(x) & DigitalPhotograph(y) & Space(z)) -> TakesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1249", "prediction": "all x y.((Satellite(x) & DigitalPhotography(y)) -> TakesFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1249", "prediction": "all x y z.((Satellite(x) & DigitalPhotography(y) & Space(z)) -> TakesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1249", "prediction": "all x.(Satellite(x) -> TakeDigitalPhotographsFromSpace(x))", "score": 0}
{"id": "eqasc_validation_1249", "prediction": "all x y z.((Satellite(x) & Photograph(y) & Space(z)) -> TakesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1249", "prediction": "all x y.((Satellite(x) & Photograph(y)) -> TakesFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1249", "prediction": "all x y z.((Satellite(x) & DigitalPhotograph(y) & Space(z)) -> UsedToTake(x,y,z))", "score": 0}
{"id": "eqasc_validation_1249", "prediction": "all x y.((Satellite(x) & Space(y)) -> TakesDigitalPhotographsFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1249", "prediction": "all x y.((Satellite(x) & Space(y)) -> TakesDigitalPhotographs(x,y))", "score": 0}
{"id": "eqasc_validation_1249", "prediction": "all x y.((Satellite(x) & DigitalPhotograph(y)) -> TakenFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1249", "prediction": "all x y z.((Satellite(x) & DigitalPhotography(y) & Space(z)) -> UsedToTake(x,y,z))", "score": 0}
{"id": "eqasc_validation_1249", "prediction": "all x y.((Satellite(x) & DigitalPhotograph(y)) -> UsedToTakeFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1249", "prediction": "all x y.((Satellite(x) & DigitalPhotography(y)) -> TakenFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1249", "prediction": "all x y z.((Satellite(x) & DigitalPhotograph(y) & Space(z)) -> UsedToTakeFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1250", "prediction": "all x y z.((SeatBelt(x) & Passenger(y) & Car(z)) -> PreventsInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1250", "prediction": "all x y.((SeatBelt(x) & Car(y)) -> PreventsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1250", "prediction": "all x y z.((Seatbelt(x) & Passenger(y) & Car(z)) -> PreventsInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1250", "prediction": "all x y z.((SeatBelt(x) & Passenger(y) & Car(z)) -> UsedForPreventingInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1250", "prediction": "all x y.((SeatBelt(x) & Car(y)) -> PreventsInjuriesToPassengers(x,y))", "score": 0}
{"id": "eqasc_validation_1250", "prediction": "all x y z.((Seatbelt(x) & Passenger(y) & Car(z)) -> UsedForPreventingInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1250", "prediction": "all x y.((SeatBelt(x) & Car(y)) -> (PreventsInjuries(x,y) & PassengerInjuries(x,y)))", "score": 0}
{"id": "eqasc_validation_1250", "prediction": "all x y.((SeatBelt(x) & Car(y)) -> UsedForPreventingInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1250", "prediction": "all x y.((SeatBelt(x) & Car(y)) -> UsedForPreventingInjuriesToPassengers(x,y))", "score": 0}
{"id": "eqasc_validation_1250", "prediction": "all x y z.((SeatBelt(x) & Passenger(y) & Car(z)) -> (UsedForPreventingInjuries(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1250", "prediction": "all x y.((Seatbelt(x) & Car(y)) -> PreventsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1250", "prediction": "all x y.((SeatBelt(x) & Passenger(y)) -> PreventsInjuries(x,y))", "score": 4}
{"id": "eqasc_validation_1250", "prediction": "all x y.((Seatbelt(x) & Car(y)) -> PreventsInjuriesToPassengers(x,y))", "score": 0}
{"id": "eqasc_validation_1250", "prediction": "all x.(SeatBelt(x) -> (PreventsInjuriesToPassengers(x) & InCars(x)))", "score": 0}
{"id": "eqasc_validation_1250", "prediction": "all x y z.((SeatBelt(x) & Passenger(y) & Car(z)) -> PreventsInjury(x,y,z))", "score": 0}
{"id": "eqasc_validation_1250", "prediction": "all x y z.((SeatBelt(x) & Passenger(y) & Car(z)) -> PreventsInjuriesInCar(x,y,z))", "score": 0}
{"id": "eqasc_validation_1251", "prediction": "all x.(Child(x) -> Passenger(x))", "score": 2}
{"id": "eqasc_validation_1251", "prediction": "all x y.((Child(x) & Passenger(y)) -> Passenger(x,y))", "score": 0}
{"id": "eqasc_validation_1251", "prediction": "all x.((Child(x) & Passenger(x)) -> Passenger(x))", "score": 0}
{"id": "eqasc_validation_1251", "prediction": "all x y.((Child(x) & Passenger(y)) -> Passenger(x))", "score": 0}
{"id": "eqasc_validation_1251", "prediction": "all x y.((Child(x) & Child(y)) -> Passenger(x,y))", "score": 0}
{"id": "eqasc_validation_1251", "prediction": "all x y.((Child(x) & Child(y)) -> Passenger(x))", "score": 2}
{"id": "eqasc_validation_1251", "prediction": "all x y.((Child(x) & Passenger(y)) -> (Passenger(x) & Passenger(y)))", "score": 0}
{"id": "eqasc_validation_1251", "prediction": "all x y.((Child(x) & Passenger(y)) -> (Passenger(x,y) | Passenger(x,y)))", "score": 0}
{"id": "eqasc_validation_1251", "prediction": "all x.((Child(x) & Passenger(x)) -> -Passenger(x))", "score": 0}
{"id": "eqasc_validation_1251", "prediction": "all x y.((Child(x) & Passenger(y)) -> (Passenger(x,y) & Passenger(x,y)))", "score": 0}
{"id": "eqasc_validation_1251", "prediction": "all x.((Child(x) & Passenger(x)) -> (Passenger(x) | Passenger(x)))", "score": 0}
{"id": "eqasc_validation_1251", "prediction": "all x y.((Child(x) & Passenger(y)) -> -Passenger(x,y))", "score": 0}
{"id": "eqasc_validation_1251", "prediction": "all x y.((Child(x) & Passenger(y)) -> (Passenger(x) | Passenger(y)))", "score": 0}
{"id": "eqasc_validation_1251", "prediction": "all x y.((Child(x) & Passenger(y)) -> CanPassenger(x,y))", "score": 0}
{"id": "eqasc_validation_1252", "prediction": "all x y.((SeatBelt(x) & Child(y)) -> PreventsInjuries(x,y))", "score": 2}
{"id": "eqasc_validation_1252", "prediction": "all x.(SeatBelt(x) -> PreventsInjuriesToChildren(x))", "score": 0}
{"id": "eqasc_validation_1252", "prediction": "all x y z.((SeatBelt(x) & Child(y) & Child(z)) -> PreventsInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1252", "prediction": "all x y.((Seatbelt(x) & Child(y)) -> PreventsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1252", "prediction": "all x y.((SeatBelt(x) & Child(y)) -> PreventsInjuriesTo(x,y))", "score": 0}
{"id": "eqasc_validation_1252", "prediction": "all x y z.((Seatbelt(x) & Child(y) & Child(z)) -> PreventsInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1252", "prediction": "all x y.((SeatBear(x) & Child(y)) -> PreventsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1252", "prediction": "all x y z.((SeatBelt(x) & Child(y) & Child(z)) -> PreventsInjuriesTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_1252", "prediction": "all x y z.((SeatBear(x) & Child(y) & Child(z)) -> PreventsInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1252", "prediction": "all x.(SeatBelt(x) -> PreventsInjuries(x))", "score": 0}
{"id": "eqasc_validation_1252", "prediction": "all x y.((Seatbelt(x) & Child(y)) -> PreventsInjuriesTo(x,y))", "score": 0}
{"id": "eqasc_validation_1252", "prediction": "all x y.((SeatGear(x) & Child(y)) -> PreventsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1252", "prediction": "all x y.((SeatBlade(x) & Child(y)) -> PreventsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1252", "prediction": "all x y.((SeatBelt(x) & Child(y) & PreventsInjuries(x,y)) -> PreventsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1252", "prediction": "all x y z.((SeatBelt(x) & Child(y) & Child(z)) -> PreventsInjuries(x,y))", "score": 2}
{"id": "eqasc_validation_1252", "prediction": "all x y.((SeatBelt(x) & Child(y)) -> PreventsInjury(x,y))", "score": 0}
{"id": "eqasc_validation_1253", "prediction": "all x.(SeatBelt(x) -> SavesLives(x))", "score": 0}
{"id": "eqasc_validation_1253", "prediction": "all x y.((Seatbelt(x) & Life(y)) -> Saves(x,y))", "score": 0}
{"id": "eqasc_validation_1253", "prediction": "all x y.((SeatBelt(x) & Life(y)) -> Saves(x,y))", "score": 0}
{"id": "eqasc_validation_1253", "prediction": "all x.(SeatBelt(x) -> SavesLife(x))", "score": 0}
{"id": "eqasc_validation_1253", "prediction": "all x y.((Seatbelt(x) & Life(y)) -> Save(x,y))", "score": 0}
{"id": "eqasc_validation_1253", "prediction": "all x y.((Seatbelt(x) & Live(y)) -> Saves(x,y))", "score": 0}
{"id": "eqasc_validation_1253", "prediction": "all x y.((SeatBelt(x) & Life(y)) -> Save(x,y))", "score": 0}
{"id": "eqasc_validation_1253", "prediction": "all x y.((SeatBelt(x) & Live(y)) -> Saves(x,y))", "score": 0}
{"id": "eqasc_validation_1253", "prediction": "all x y.((SeatBlade(x) & Life(y)) -> Saves(x,y))", "score": 0}
{"id": "eqasc_validation_1253", "prediction": "all x.(SeatBlade(x) -> SavesLives(x))", "score": 0}
{"id": "eqasc_validation_1253", "prediction": "all x y z.((Seatbelt(x) & Life(y) & Life(z)) -> Saves(x,y,z))", "score": 0}
{"id": "eqasc_validation_1253", "prediction": "all x.(SeatBelt(x) -> SavesLifes(x))", "score": 0}
{"id": "eqasc_validation_1253", "prediction": "all x y z.((SeatBelt(x) & Life(y) & Life(z)) -> Saves(x,y,z))", "score": 0}
{"id": "eqasc_validation_1253", "prediction": "all x y z.((Seatbelt(x) & Life(y) & Seat(z)) -> Saves(x,y,z))", "score": 0}
{"id": "eqasc_validation_1253", "prediction": "all x y z.((Seatbelt(x) & Life(y) & -Life(z)) -> Saves(x,y,z))", "score": 0}
{"id": "eqasc_validation_1253", "prediction": "all x y z.((SeatBelt(x) & Life(y) & -Life(z)) -> Saves(x,y,z))", "score": 0}
{"id": "eqasc_validation_1254", "prediction": "all x y.((Car(x) & Passenger(y)) -> PreventsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1254", "prediction": "all x y.((Car(x) & Passenger(y) & PreventsInjuries(x,y)) -> SavesLives(x))", "score": 0}
{"id": "eqasc_validation_1254", "prediction": "all x.((PreventsInjuries(x) & PassengerInCars(x)) -> SavesLives(x))", "score": 0}
{"id": "eqasc_validation_1254", "prediction": "all x y.((Car(x) & Passenger(y) & PreventsInjuries(x,y)) -> SavesLives(x,y))", "score": 0}
{"id": "eqasc_validation_1254", "prediction": "all x.((PreventsInjuries(x) & PassengerInCar(x)) -> SavesLives(x))", "score": 0}
{"id": "eqasc_validation_1254", "prediction": "all x y z.((Car(x) & Passenger(y) & Car(z) & PreventsInjuries(x,y,z)) -> SavesLives(x))", "score": 0}
{"id": "eqasc_validation_1254", "prediction": "all x y z.((Car(x) & Passenger(y) & Car(z) & PreventsInjuries(x,y,z)) -> SavesLives(x,y,z))", "score": 0}
{"id": "eqasc_validation_1254", "prediction": "all x y.((Passenger(x) & Car(y) & PreventsInjuries(x,y)) -> SavesLives(x,y))", "score": 0}
{"id": "eqasc_validation_1254", "prediction": "all x y z.((Car(x) & Passenger(y) & Car(z) & PreventsInjuries(x,y,z)) -> SavesLives(x,y))", "score": 0}
{"id": "eqasc_validation_1254", "prediction": "all x y.((Person(x) & Car(y) & PreventsInjuries(x,y)) -> SavesLives(x,y))", "score": 0}
{"id": "eqasc_validation_1254", "prediction": "all x y.((Passenger(x) & Car(y) & PreventsInjuries(x,y)) -> SavesLives(x))", "score": 0}
{"id": "eqasc_validation_1254", "prediction": "all x.((Car(x) & PreventsInjuries(x)) -> SavesLives(x))", "score": 0}
{"id": "eqasc_validation_1254", "prediction": "all x y z.((Car(x) & Passenger(y) & Car(z)) -> PreventsInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1254", "prediction": "all x y z.((Car(x) & Passenger(y) & Incar(z) & PreventsInjuries(x,y,z)) -> SavesLives(x))", "score": 0}
{"id": "eqasc_validation_1254", "prediction": "all x y z.((Car(x) & Passenger(y) & Incar(z) & PreventsInjuries(x,y,z)) -> SavesLives(x,y,z))", "score": 0}
{"id": "eqasc_validation_1254", "prediction": "all x.((PreventsInjuriesToPassengers(x) & InCars(x)) -> SavesLives(x))", "score": 0}
{"id": "eqasc_validation_1255", "prediction": "all x y.((CarAccident(x) & Child(y)) -> LeadingCauseOfDeath(x,y))", "score": 0}
{"id": "eqasc_validation_1255", "prediction": "all x.(CarAccident(x) -> LeadingCauseOfDeath(x))", "score": 0}
{"id": "eqasc_validation_1255", "prediction": "all x y z.((CarAccident(x) & Child(y) & Child(z)) -> LeadingCauseOfDeath(x,y,z))", "score": 0}
{"id": "eqasc_validation_1255", "prediction": "all x.(CarAccident(x) -> LeadingCauseOfDeathForChildren(x))", "score": 0}
{"id": "eqasc_validation_1255", "prediction": "all x y.((CarAccident(x) & Child(y)) -> LeadsCauseOfDeath(x,y))", "score": 0}
{"id": "eqasc_validation_1255", "prediction": "all x y.((CarAccount(x) & Child(y)) -> LeadingCauseOfDeath(x,y))", "score": 0}
{"id": "eqasc_validation_1255", "prediction": "all x y.((CarAccident(x) & Children(y)) -> LeadingCauseOfDeath(x,y))", "score": 0}
{"id": "eqasc_validation_1255", "prediction": "all x y z.((CarAccident(x) & Child(y) & Child(z)) -> LeadsCauseOfDeath(x,y,z))", "score": 0}
{"id": "eqasc_validation_1255", "prediction": "all x y.((CarAccident(x) & Child(y)) -> LeadCauseOfDeath(x,y))", "score": 0}
{"id": "eqasc_validation_1255", "prediction": "all x.(CarAccident(x) -> LeadCauseOfDeath(x))", "score": 0}
{"id": "eqasc_validation_1255", "prediction": "all x y z.((CarAccident(x) & Child(y) & Child(z)) -> LeadCauseOfDeath(x,y,z))", "score": 0}
{"id": "eqasc_validation_1255", "prediction": "all x.(CarAccident(x) -> LeadingCauseOfDeath(x,Children))", "score": 0}
{"id": "eqasc_validation_1255", "prediction": "all x.(CarAccident(x) -> LeadCauseOfDeathForChildren(x))", "score": 0}
{"id": "eqasc_validation_1255", "prediction": "all x y.((CarAccident(x) & Child(y)) -> LeadingCauseOfDeathToday(x,y))", "score": 0}
{"id": "eqasc_validation_1255", "prediction": "all x.((CarAccident(x) & LeadingCauseOfDeath(x)) -> Children(x))", "score": 0}
{"id": "eqasc_validation_1255", "prediction": "all x.(CarAccident(x) -> (LeadingCauseOfDeath(x) & ForChildren(x)))", "score": 0}
{"id": "eqasc_validation_1256", "prediction": "all x.(SeatBelt(x) -> HelpsPreventDeath(x))", "score": 0}
{"id": "eqasc_validation_1256", "prediction": "all x.(SeatBelt(x) -> CanHelpPreventDeath(x))", "score": 0}
{"id": "eqasc_validation_1256", "prediction": "all x.(SeatBelt(x) -> PreventsDeath(x))", "score": 0}
{"id": "eqasc_validation_1256", "prediction": "all x.(SeatBelt(x) -> (HelpsPreventDeath(x) & HelpsPreventDeath(x)))", "score": 0}
{"id": "eqasc_validation_1256", "prediction": "all x y.((SeatBelt(x) & Seat(y)) -> HelpsPreventDeath(x,y))", "score": 0}
{"id": "eqasc_validation_1256", "prediction": "all x.(SeatBelt(x) -> CanPreventDeath(x))", "score": 0}
{"id": "eqasc_validation_1256", "prediction": "all x y.((SeatBelt(x) & Death(y)) -> HelpsPrevent(x,y))", "score": 0}
{"id": "eqasc_validation_1256", "prediction": "all x.(SeatBelt(x) -> (HelpsPreventDeath(x) | HelpsPreventDeath(x)))", "score": 0}
{"id": "eqasc_validation_1256", "prediction": "all x y z.((SeatBelt(x) & Death(y) & Seatbelt(z)) -> HelpsPrevent(x,y,z))", "score": 0}
{"id": "eqasc_validation_1256", "prediction": "all x y.((SeatBelt(x) & Seatbelt(y)) -> HelpsPreventDeath(x,y))", "score": 0}
{"id": "eqasc_validation_1256", "prediction": "all x y.((SeatBelt(x) & Seat(y)) -> CanHelpPreventDeath(x,y))", "score": 0}
{"id": "eqasc_validation_1256", "prediction": "all x y.((Seatbelt(x) & Seat(y)) -> HelpsPreventDeath(x,y))", "score": 0}
{"id": "eqasc_validation_1256", "prediction": "all x y.((SeatBelt(x) & Death(y)) -> CanHelpPrevent(x,y))", "score": 0}
{"id": "eqasc_validation_1256", "prediction": "all x y.((Seatbelt(x) & Seatbelt(y)) -> HelpsPreventDeath(x,y))", "score": 0}
{"id": "eqasc_validation_1256", "prediction": "all x y z.((SeatBelt(x) & Death(y) & Seatbelt(z)) -> CanHelpPrevent(x,y,z))", "score": 0}
{"id": "eqasc_validation_1256", "prediction": "all x.(SeatBelt(x) -> HelpsPreventDisaster(x))", "score": 0}
{"id": "eqasc_validation_1257", "prediction": "all x y z.((Crash(x) & UnbeltedPassenger(y) & Car(z)) -> Colliding(y,z))", "score": 0}
{"id": "eqasc_validation_1257", "prediction": "all x y z.((Crash(x) & UnbeltedPassenger(y) & Person(z)) -> Colliding(y,z))", "score": 0}
{"id": "eqasc_validation_1257", "prediction": "all x y.((Crash(x) & UnbeltedPassenger(y)) -> Colliding(y,x))", "score": 0}
{"id": "eqasc_validation_1257", "prediction": "all x y z.((Crash(x) & UnbeltedPassenger(y) & Car(z)) -> CollidingWith(y,z))", "score": 0}
{"id": "eqasc_validation_1257", "prediction": "all x y.((Crash(x) & UnbeltedPassenger(y) & Colliding(y,x)) -> Injured(x,y))", "score": 0}
{"id": "eqasc_validation_1257", "prediction": "all x y.((Crash(x) & UnbeltedPassenger(y) & Colliding(y,x)) -> Injuries(x,y))", "score": 0}
{"id": "eqasc_validation_1257", "prediction": "all x y z.((Crash(x) & UnbeltedPassenger(y) & Car(z)) -> CollidingIn(y,z))", "score": 0}
{"id": "eqasc_validation_1257", "prediction": "all x y.((Crash(x) & UnbeltedPassenger(y) & CollidingInCar(y,x)) -> Injured(x,y))", "score": 0}
{"id": "eqasc_validation_1257", "prediction": "all x y z.((Crashes(x) & UnbeltedPassenger(y) & Car(z)) -> Colliding(y,z))", "score": 0}
{"id": "eqasc_validation_1257", "prediction": "all x y z.((Crash(x) & UnbeltedPassenger(y) & Car(z) & Colliding(y,z)) -> Injured(x,y,z))", "score": 0}
{"id": "eqasc_validation_1257", "prediction": "all x y z.((Crash(x) & UnbeltedPassenger(y) & Car(z) & Colliding(y,z)) -> Injuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1257", "prediction": "all x y.((Crash(x) & UnbeltedPassenger(y) & Colliding(y,x)) -> Injured(x))", "score": 0}
{"id": "eqasc_validation_1257", "prediction": "all x y z.((Crash(x) & UnbeltedPassenger(y) & Car(z) & CollidingWith(y,z)) -> Injuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1257", "prediction": "all x y.((Crash(x) & UnbeltedPassenger(y) & Colliding(y,x)) -> ManyInjuries(x))", "score": 0}
{"id": "eqasc_validation_1257", "prediction": "all x y z.((Crash(x) & UnbeltedPassenger(y) & Car(z) & Colliding(y,z)) -> Injured(y,z))", "score": 0}
{"id": "eqasc_validation_1257", "prediction": "all x y z.((Crash(x) & UnbeltedPassenger(y) & Person(z)) -> CollidingInCar(y,z))", "score": 0}
{"id": "eqasc_validation_1258", "prediction": "all x y.((SeatBelt(x) & Passenger(y)) -> AvoidsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1258", "prediction": "all x y.((SeatBelt(x) & Passenger(y)) -> AvoidsInjuriesInCrashes(x,y))", "score": 0}
{"id": "eqasc_validation_1258", "prediction": "all x y.((Seatbelt(x) & Passenger(y)) -> AvoidsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1258", "prediction": "all x y.((SeatBelt(x) & Passenger(y)) -> AvoidsInjuriesInCrash(x,y))", "score": 0}
{"id": "eqasc_validation_1258", "prediction": "all x y.((Seatbelt(x) & Passenger(y)) -> AvoidsInjuriesInCrashes(x,y))", "score": 0}
{"id": "eqasc_validation_1258", "prediction": "all x y z.((SeatBelt(x) & Passenger(y) & Crash(z)) -> AvoidsInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1258", "prediction": "all x y.((SeatBear(x) & Passenger(y)) -> AvoidsInjuriesInCrashes(x,y))", "score": 0}
{"id": "eqasc_validation_1258", "prediction": "all x y.((SeatBear(x) & Passenger(y)) -> AvoidsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1258", "prediction": "all x y.((SeatBelt(x) & Passenger(y)) -> UsedForEvitingInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1258", "prediction": "all x y.((SeatBelt(x) & Passenger(y)) -> (UsedForEvitingInjuries(x,y) & InCrashes(x,y)))", "score": 0}
{"id": "eqasc_validation_1258", "prediction": "all x y.((Seatbelt(x) & Passenger(y)) -> AvoidsInjuriesInCrash(x,y))", "score": 0}
{"id": "eqasc_validation_1258", "prediction": "all x y.((SeatBelt(x) & Passenger(y)) -> (UsedFor(x,y) & AvoidsInjuries(x,y)))", "score": 0}
{"id": "eqasc_validation_1258", "prediction": "all x y z.((SeatBelt(x) & Carcrash(y) & Passenger(z)) -> AvoidsInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1258", "prediction": "all x y.((SeatBelt(x) & Passenger(y)) -> (AvoidsInjuries(x,y) & InCrashes(x,y)))", "score": 0}
{"id": "eqasc_validation_1258", "prediction": "all x y z.((SeatBelt(x) & Passenger(y) & Crash(z)) -> AvoidsInjuriesInCrashes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1258", "prediction": "all x y.((SeatBelt(x) & Passenger(y)) -> (UsedForEvitingInjuries(x,y) & InCrash(x,y)))", "score": 0}
{"id": "eqasc_validation_1259", "prediction": "all x.(Helmet(x) -> (PreventsInjuries(x) & PreventsDeath(x)))", "score": 0}
{"id": "eqasc_validation_1259", "prediction": "all x.(Helmet(x) -> (PreventsInjuries(x) & PreventsTod(x)))", "score": 0}
{"id": "eqasc_validation_1259", "prediction": "all x.(Helmet(x) -> PreventsInjuriesAndDeath(x))", "score": 0}
{"id": "eqasc_validation_1259", "prediction": "all x y.((Helmet(x) & Injuries(y) & Death(y)) -> Prevents(x,y))", "score": 0}
{"id": "eqasc_validation_1259", "prediction": "all x.(Helmet(x) -> (PreventInjuries(x) & PreventDeath(x)))", "score": 0}
{"id": "eqasc_validation_1259", "prediction": "all x.(Helmet(x) -> (PreventsInjury(x) & PreventsDeath(x)))", "score": 0}
{"id": "eqasc_validation_1259", "prediction": "all x.(Helmet(x) -> (ProtectsInjuries(x) & PreventsDeath(x)))", "score": 0}
{"id": "eqasc_validation_1259", "prediction": "all x y.((Helmet(x) & (Injuries(y) | Death(y))) -> Prevents(x,y))", "score": 0}
{"id": "eqasc_validation_1259", "prediction": "all x.(Helmet(x) -> (PreventsInjuries(x) | PreventsDeath(x)))", "score": 0}
{"id": "eqasc_validation_1259", "prediction": "all x.(Helmet(x) -> (PreventsInjuries(x) & PreventsDamage(x)))", "score": 0}
{"id": "eqasc_validation_1259", "prediction": "all x y.((Helmet(x) & Injuries(y)) -> PreventsDeath(x,y))", "score": 0}
{"id": "eqasc_validation_1259", "prediction": "all x.(Helmet(x) -> (PreventsInjuries(x) & PreventsTotalDeath(x)))", "score": 0}
{"id": "eqasc_validation_1259", "prediction": "all x.(Helmet(x) -> (PreventsInjuries(x) & PreventsDanger(x)))", "score": 0}
{"id": "eqasc_validation_1259", "prediction": "all x y.((Helmet(x) & Injury(y) & Death(y)) -> Prevents(x,y))", "score": 0}
{"id": "eqasc_validation_1259", "prediction": "all x.(Helmet(x) -> (PreventsInjuries(x) & PreventsDaily(x)))", "score": 0}
{"id": "eqasc_validation_1260", "prediction": "all x y.((SeatBelt(x) & Helmet(y)) -> ProtectsPassengers(x,y))", "score": 0}
{"id": "eqasc_validation_1260", "prediction": "all x y z.((SeatBelt(x) & Helmet(y) & Passenger(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1260", "prediction": "all x.((SeatBelt(x) | Helmet(x)) -> ProtectsPassengers(x))", "score": 0}
{"id": "eqasc_validation_1260", "prediction": "all x y.((Seatbelt(x) & Helmet(y)) -> ProtectsPassengers(x,y))", "score": 0}
{"id": "eqasc_validation_1260", "prediction": "all x y.((SeatBlade(x) & Helmet(y)) -> ProtectsPassengers(x,y))", "score": 0}
{"id": "eqasc_validation_1260", "prediction": "all x y z.((SeatBelt(x) & Helmet(y) & Passenger(z)) -> ProtectsFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1260", "prediction": "all x y.((SeatGear(x) & Helmet(y)) -> ProtectsPassengers(x,y))", "score": 0}
{"id": "eqasc_validation_1260", "prediction": "all x y z.((Seatbelt(x) & Helmet(y) & Passenger(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1260", "prediction": "all x y z.((SeatBelt(x) & Helmet(y) & Passenger(z)) -> Protects(x,z))", "score": 0}
{"id": "eqasc_validation_1260", "prediction": "all x.((SeatBelt(x) & Helmet(x)) -> ProtectsPassengers(x))", "score": 0}
{"id": "eqasc_validation_1260", "prediction": "all x y.((SeatBear(x) & Helmet(y)) -> ProtectsPassengers(x,y))", "score": 0}
{"id": "eqasc_validation_1260", "prediction": "all x y z.((SeatGear(x) & Helmet(y) & Passenger(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1260", "prediction": "all x y z.((SeatBelt(x) & Helmet(y) & Passenger(z)) -> (Protects(x,z) & Protects(y,z)))", "score": 0}
{"id": "eqasc_validation_1260", "prediction": "all x y z.((SeatBlade(x) & Helmet(y) & Passenger(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1260", "prediction": "all x y z.((SeatBelt(x) & Helmet(y) & Passenger(z)) -> (Protects(x,y,z) & Protects(y,z)))", "score": 0}
{"id": "eqasc_validation_1260", "prediction": "all x y z.((SeatBelt(x) & Helmet(y) & Passenger(z)) -> (Protects(x,z) | Protects(y,z)))", "score": 0}
{"id": "eqasc_validation_1261", "prediction": "all x.(Injury(x) -> CausedByAccident(x))", "score": 0}
{"id": "eqasc_validation_1261", "prediction": "all x y.((Injury(x) & Accident(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1261", "prediction": "all x y z.((Injury(x) & Accident(y) & Accident(z)) -> CausedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1261", "prediction": "all x y.((Injured(x) & Accident(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1261", "prediction": "all x y z.((Injury(x) & Accident(y) & Injury(z)) -> CausedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1261", "prediction": "all x.(Injured(x) -> CausedByAccident(x))", "score": 0}
{"id": "eqasc_validation_1261", "prediction": "all x y.((Injuries(x) & Accident(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1261", "prediction": "all x y z.((Injury(x) & Accident(y) & Accident(z)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1261", "prediction": "all x.(Injuries(x) -> CausedByAccident(x))", "score": 0}
{"id": "eqasc_validation_1261", "prediction": "all x y z.((Injury(x) & Accident(y) & Injury(z)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1261", "prediction": "all x.((Injury(x) & CausedByAccident(x)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1261", "prediction": "all x y.((Injury(x) & Accident(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_1261", "prediction": "all x y.((Injury(x) & Accident(y)) -> Caused(x,y))", "score": 0}
{"id": "eqasc_validation_1262", "prediction": "all x.((SeatBelt(x) & Accident(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1262", "prediction": "all x y.((Seatbelt(x) & Accident(y)) -> Important(x,y))", "score": 0}
{"id": "eqasc_validation_1262", "prediction": "all x y.((Seatbelt(x) & Accident(y)) -> ImportantIn(x,y))", "score": 0}
{"id": "eqasc_validation_1262", "prediction": "all x.((SeatBelt(x) & Accident(x)) -> ImportantIn(x,y))", "score": 0}
{"id": "eqasc_validation_1262", "prediction": "all x.((Seatbelt(x) & Accident(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1262", "prediction": "all x y.((SeatBelt(x) & Accident(y)) -> Important(x,y))", "score": 0}
{"id": "eqasc_validation_1262", "prediction": "all x y.((SeatBelt(x) & Accident(y)) -> ImportantIn(x,y))", "score": 0}
{"id": "eqasc_validation_1262", "prediction": "all x.((SeatBlade(x) & Accident(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1262", "prediction": "all x y z.((Seatbelt(x) & Accident(y) & Accident(z)) -> Important(x,y,z))", "score": 0}
{"id": "eqasc_validation_1262", "prediction": "all x.((Seatbelt(x) & Accident(x)) -> ImportantIn(x,y))", "score": 0}
{"id": "eqasc_validation_1262", "prediction": "all x y z.((Seatbelt(x) & Accident(y) & Accident(z)) -> ImportantIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1262", "prediction": "all x.(SeatBelt(x) -> ImportantInAccident(x))", "score": 0}
{"id": "eqasc_validation_1262", "prediction": "all x.((SeatBear(x) & Accident(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1262", "prediction": "all x.((SeatBlade(x) & Accident(x)) -> ImportantIn(x,y))", "score": 0}
{"id": "eqasc_validation_1262", "prediction": "all x.((SeatBelt(x) & Accident(y)) -> Important(x,y))", "score": 0}
{"id": "eqasc_validation_1262", "prediction": "all x.(SeatBelt(x) -> ImportantInCaseOfAccident(x))", "score": 0}
{"id": "eqasc_validation_1263", "prediction": "all x.(SeatBelt(x) -> ProvidesPrimaryProtection(x))", "score": 0}
{"id": "eqasc_validation_1263", "prediction": "all x.(SeatBelt(x) -> ProvidesPrimaryProtectionInCrashes(x))", "score": 0}
{"id": "eqasc_validation_1263", "prediction": "all x y.((SeatBelt(x) & Crash(y)) -> ProvidesPrimaryProtection(x,y))", "score": 0}
{"id": "eqasc_validation_1263", "prediction": "all x y.((SeatBlade(x) & Crash(y)) -> ProvidesPrimaryProtection(x,y))", "score": 0}
{"id": "eqasc_validation_1263", "prediction": "all x y z.((SeatBelt(x) & Crash(y) & Crash(z)) -> ProvidesPrimaryProtection(x,y,z))", "score": 0}
{"id": "eqasc_validation_1263", "prediction": "all x y.((SeatBelt(x) & Carcage(y)) -> ProvidesPrimaryProtection(x,y))", "score": 0}
{"id": "eqasc_validation_1263", "prediction": "all x.(SeatBlade(x) -> ProvidesPrimaryProtection(x))", "score": 0}
{"id": "eqasc_validation_1263", "prediction": "all x.(SeatBelt(x) -> ProvidesPrimaryProtectionInCrash(x))", "score": 0}
{"id": "eqasc_validation_1263", "prediction": "all x.(SeatBelt(x) -> PrimaryProtection(x))", "score": 0}
{"id": "eqasc_validation_1263", "prediction": "all x.(SeatBlade(x) -> ProvidesPrimaryProtectionInCrashes(x))", "score": 0}
{"id": "eqasc_validation_1263", "prediction": "all x y.((SeatBelt(x) & Crash(y)) -> PrimaryProtection(x,y))", "score": 0}
{"id": "eqasc_validation_1263", "prediction": "all x y.((SeatBelt(x) & Crash(y)) -> ProvidesPrimaryProtectionIn(x,y))", "score": 0}
{"id": "eqasc_validation_1263", "prediction": "all x.((SeatBelt(x) & PrimaryProtection(x)) -> SeatBelt(x))", "score": 0}
{"id": "eqasc_validation_1263", "prediction": "all x.(SeatBelt(x) -> PrimaryProtectionInCrashes(x))", "score": 0}
{"id": "eqasc_validation_1263", "prediction": "all x y z.((SeatBelt(x) & Crash(y) & Crash(z)) -> PrimaryProtection(x,y,z))", "score": 0}
{"id": "eqasc_validation_1264", "prediction": "all x y.((CarCrashes(x) & Passenger(y)) -> CanInjure(x,y))", "score": 0}
{"id": "eqasc_validation_1264", "prediction": "all x y z.((CarCrashes(x) & Passenger(y) & Car(z)) -> CanInjure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1264", "prediction": "all x y.((CarCrashes(x) & Passenger(y)) -> Injure(x,y))", "score": 0}
{"id": "eqasc_validation_1264", "prediction": "all x y.((CarCrashes(x) & Passenger(y)) -> Injures(x,y))", "score": 0}
{"id": "eqasc_validation_1264", "prediction": "all x.(CarCrashes(x) -> CanInjurePassengers(x))", "score": 0}
{"id": "eqasc_validation_1264", "prediction": "all x y z.((CarCrashes(x) & Passenger(y) & Car(z)) -> Injure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1264", "prediction": "all x y.((CarCrash(x) & Passenger(y)) -> CanInjure(x,y))", "score": 0}
{"id": "eqasc_validation_1264", "prediction": "all x.(CarCrashes(x) -> InjurePassengers(x))", "score": 0}
{"id": "eqasc_validation_1264", "prediction": "all x y z.((CarCrashes(x) & Passenger(y) & Car(z)) -> Injures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1264", "prediction": "all x.(CarCrashes(x) -> (InjurePassengers(x) | InjurePassengers(x)))", "score": 0}
{"id": "eqasc_validation_1264", "prediction": "all x y z.((CarCrash(x) & Passenger(y) & Car(z)) -> CanInjure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1264", "prediction": "all x y z.((CarCrashes(x) & Passenger(y) & Car(z)) -> CanInjure(x,y))", "score": 0}
{"id": "eqasc_validation_1264", "prediction": "all x y z.((CarCrashes(x) & Passenger(y) & Passenger(z)) -> CanInjure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1264", "prediction": "all x y z.((CarCrashes(x) & Passenger(y) & Car(z)) -> (Injure(x,y) | Injure(x,y)))", "score": 0}
{"id": "eqasc_validation_1264", "prediction": "all x y z.((CarCrashes(x) & Passenger(y) & Car(z)) -> (Injure(x,y,z) | Injure(x,y)))", "score": 0}
{"id": "eqasc_validation_1264", "prediction": "all x y z.((CarCrashes(x) & Passenger(y) & Car(z)) -> (Injures(x,y) | Injures(x,y)))", "score": 0}
{"id": "eqasc_validation_1265", "prediction": "all x.(WhiplashInjuries(x) -> SoftTissueInjuries(x))", "score": 0}
{"id": "eqasc_validation_1265", "prediction": "all x.(Whiplash(x) -> SoftTissueInjuries(x))", "score": 0}
{"id": "eqasc_validation_1265", "prediction": "all x.(WhiplashInjury(x) -> SoftTissueInjuries(x))", "score": 0}
{"id": "eqasc_validation_1265", "prediction": "all x y.((WhiplashInjuries(x) & SoftTissueInjuries(y)) -> Injuries(x,y))", "score": 0}
{"id": "eqasc_validation_1265", "prediction": "all x.(WhisplashInjuries(x) -> SoftTissueInjuries(x))", "score": 0}
{"id": "eqasc_validation_1265", "prediction": "all x y.((WhiplashInjuries(x) & SoftTissueInjuries(y)) -> Illness(x,y))", "score": 0}
{"id": "eqasc_validation_1265", "prediction": "all x.(WhiplashIllness(x) -> SoftTissueInjuries(x))", "score": 0}
{"id": "eqasc_validation_1265", "prediction": "all x y.((WhiplashInjuries(x) & SoftTissueInjuries(y)) -> Injured(x,y))", "score": 0}
{"id": "eqasc_validation_1265", "prediction": "all x.((WhiplashInjuries(x) & SoftTissueInjuries(x)) -> Injuries(x))", "score": 0}
{"id": "eqasc_validation_1265", "prediction": "all x.(WhirplashInjuries(x) -> SoftTissueInjuries(x))", "score": 0}
{"id": "eqasc_validation_1265", "prediction": "all x y.((WhiplashInjury(x) & SoftTissueInjuries(y)) -> Injuries(x,y))", "score": 0}
{"id": "eqasc_validation_1265", "prediction": "all x.(WhippedlashInjuries(x) -> SoftTissueInjuries(x))", "score": 0}
{"id": "eqasc_validation_1265", "prediction": "all x y.((WhiplashInjury(x) & SoftTissueInjuries(y)) -> Illness(x,y))", "score": 0}
{"id": "eqasc_validation_1265", "prediction": "all x.(WhistlashInjuries(x) -> SoftTissueInjuries(x))", "score": 0}
{"id": "eqasc_validation_1265", "prediction": "all x y.((WhiplashInjury(x) & SoftTissueInjuries(y)) -> Injured(x,y))", "score": 0}
{"id": "eqasc_validation_1266", "prediction": "all x y.((SeatBelt(x) & Car(y)) -> PreventsWhiplash(x,y))", "score": 0}
{"id": "eqasc_validation_1266", "prediction": "all x y.((SeatBelt(x) & Car(y)) -> PreventsWhistlash(x,y))", "score": 0}
{"id": "eqasc_validation_1266", "prediction": "all x y.((SeatBelt(x) & Car(y)) -> CanPreventWhiplash(x,y))", "score": 0}
{"id": "eqasc_validation_1266", "prediction": "all x y.((SeatBelt(x) & Car(y)) -> PreventsChrisplash(x,y))", "score": 0}
{"id": "eqasc_validation_1266", "prediction": "all x y.((Seatbelt(x) & Car(y)) -> PreventsWhiplash(x,y))", "score": 0}
{"id": "eqasc_validation_1266", "prediction": "all x y.((SeatBelt(x) & Car(y)) -> CanPreventChrisplash(x,y))", "score": 0}
{"id": "eqasc_validation_1266", "prediction": "all x y z.((SeatBelt(x) & Car(y) & Car(z)) -> PreventsWhiplash(x,y,z))", "score": 0}
{"id": "eqasc_validation_1266", "prediction": "all x y z.((SeatBelt(x) & Car(y) & Car(z)) -> CanPrevent(x,y,z))", "score": 0}
{"id": "eqasc_validation_1266", "prediction": "all x y.((Seatbelt(x) & Car(y)) -> PreventsWhistlash(x,y))", "score": 0}
{"id": "eqasc_validation_1266", "prediction": "all x.(SeatBelt(x) -> PreventsWhistlashInCars(x))", "score": 0}
{"id": "eqasc_validation_1266", "prediction": "all x.(SeatBelt(x) -> PreventsWhiplash(x))", "score": 0}
{"id": "eqasc_validation_1266", "prediction": "all x.(SeatBelt(x) -> PreventsWhiplashInCars(x))", "score": 0}
{"id": "eqasc_validation_1266", "prediction": "all x y.((Seatbelt(x) & Car(y)) -> CanPreventWhiplash(x,y))", "score": 0}
{"id": "eqasc_validation_1266", "prediction": "all x y.((SeatBelt(x) & Car(y)) -> CanPrevent(x,y))", "score": 0}
{"id": "eqasc_validation_1266", "prediction": "all x y.((SeatBelt(x) & Car(y)) -> CanPreventWhistlash(x,y))", "score": 0}
{"id": "eqasc_validation_1266", "prediction": "all x y z.((SeatBelt(x) & Car(y) & Car(z)) -> CanPreventWhiplash(x,y,z))", "score": 0}
{"id": "eqasc_validation_1267", "prediction": "all x y z.((SeatBelt(x) & Passenger(y) & Vehicle(z)) -> PreventsInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1267", "prediction": "all x y z.((SeatBelt(x) & Passenger(y) & Vehicle(z)) -> UsedForPreventingInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1267", "prediction": "all x y.((SeatBelt(x) & Vehicle(y)) -> PreventsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1267", "prediction": "all x y.((SeatBelt(x) & Vehicle(y)) -> PreventsInjuriesToPassengers(x,y))", "score": 0}
{"id": "eqasc_validation_1267", "prediction": "all x y z.((Seatbelt(x) & Passenger(y) & Vehicle(z)) -> PreventsInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1267", "prediction": "all x.(SeatBelt(x) -> (PreventsInjuries(x) & PassengerInjuries(x) & InVehicles(x)))", "score": 0}
{"id": "eqasc_validation_1267", "prediction": "all x y z.((SeatBelt(x) & Passenger(y) & Vehicle(z)) -> (PreventsInjuries(x,y,z) & InVehicles(y,z)))", "score": 0}
{"id": "eqasc_validation_1267", "prediction": "all x y.((SeatBelt(x) & Vehicle(y)) -> (PreventsInjuries(x,y) & PassengerInjuries(x,y)))", "score": 0}
{"id": "eqasc_validation_1267", "prediction": "all x y.((SeatBelt(x) & Passenger(y)) -> PreventsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1267", "prediction": "all x y z.((SeatBelt(x) & Passenger(y) & Vehicle(z)) -> (UsedForPreventingInjuries(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1267", "prediction": "all x y.((SeatBelt(x) & Passenger(y)) -> PreventsInjuriesInVehicles(x,y))", "score": 0}
{"id": "eqasc_validation_1267", "prediction": "all x y z.((SeatBelt(x) & Passenger(y) & Vehicle(z)) -> PreventsInjuriesInVehicles(x,y,z))", "score": 0}
{"id": "eqasc_validation_1267", "prediction": "all x.(SeatBelt(x) -> (PreventsInjuriesToPassengers(x) & InVehicles(x)))", "score": 0}
{"id": "eqasc_validation_1267", "prediction": "all x y z.((SeatBelt(x) & Passenger(y) & Vehicle(z)) -> (UsedForPreventingInjuries(x,y,z) & InVehicles(x)))", "score": 0}
{"id": "eqasc_validation_1267", "prediction": "all x y z.((SeatBelt(x) & Passenger(y) & Vehicle(z)) -> (PreventsInjuries(x,y) & InVehicles(y,z)))", "score": 0}
{"id": "eqasc_validation_1267", "prediction": "all x y z.((SeatBelt(x) & Passenger(y) & Vehicle(z)) -> (PreventsInjuries(x,y,z) & InVehicles(x)))", "score": 0}
{"id": "eqasc_validation_1268", "prediction": "all x y.((Vehicle(x) & Swerves(x)) -> (InjuriesToDrivers(x) & InjuriesToPassengers(x)))", "score": 0}
{"id": "eqasc_validation_1268", "prediction": "all x.((VehicleSwerves(x) & InjuriesToDrivers(x) & InjuriesToPassengers(x)) -> Increases(x))", "score": 0}
{"id": "eqasc_validation_1268", "prediction": "all x y.((Vehicle(x) & Swerves(x)) -> (InjuriesToDrivers(x) | InjuriesToPassengers(x)))", "score": 0}
{"id": "eqasc_validation_1268", "prediction": "all x.((Vehicle(x) & Swerves(x)) -> InjuriesToDriversAndPassengers(x))", "score": 0}
{"id": "eqasc_validation_1268", "prediction": "all x y.((Vehicle(x) & Swerves(x)) -> InjuriesToDriversAndPassengers(x,y))", "score": 0}
{"id": "eqasc_validation_1268", "prediction": "all x.((VehicleSwerves(x) & InjuriesToDrivers(x) & InjuriesToPassengers(x)) -> Increased(x))", "score": 0}
{"id": "eqasc_validation_1268", "prediction": "all x y.((Vehicle(x) & Swerves(x)) -> (InjuriesToDrivers(x,y) | InjuriesToPassengers(x,y)))", "score": 0}
{"id": "eqasc_validation_1268", "prediction": "all x y.((Vehicle(x) & Swerves(y)) -> InjuriesToDriversAndPassengers(x,y))", "score": 0}
{"id": "eqasc_validation_1268", "prediction": "all x y z.((Vehicle(x) & Driver(y) & Passenger(z) & Swerves(x)) -> InjuriesIncrease(y,z))", "score": 0}
{"id": "eqasc_validation_1268", "prediction": "all x.((Vehicle(x) & Swerves(x)) -> IncreasedInjuriesToDriversAndPassengers(x))", "score": 0}
{"id": "eqasc_validation_1268", "prediction": "all x y.((Vehicle(x) & Swerves(x)) -> IncreasesInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1268", "prediction": "all x y.((Vehicle(x) & Swerves(x)) -> InjuriesToDriversAndPassengers(x))", "score": 0}
{"id": "eqasc_validation_1268", "prediction": "all x y.((Vehicle(x) & Swerves(x)) -> IncreasedInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1268", "prediction": "all x y.((Vehicle(x) & Swerves(x)) -> IncreasesInjuriesToDriversAndPassengers(x))", "score": 0}
{"id": "eqasc_validation_1268", "prediction": "all x y z.((Vehicle(x) & Driver(y) & Passenger(z) & Swerves(x)) -> IncreasedInjuries(y,z))", "score": 0}
{"id": "eqasc_validation_1268", "prediction": "all x.((VehicleSwerves(x) & InjuriesToDrivers(x) & InjuriesToPassengers(x)) -> Increase(x))", "score": 0}
{"id": "eqasc_validation_1269", "prediction": "all x.(Seatbelt(x) -> PreventsInjuries(x))", "score": 0}
{"id": "eqasc_validation_1269", "prediction": "all x y.((Seatbelt(x) & Swerving(y)) -> PreventsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1269", "prediction": "all x.(Seatbelt(x) -> PreventsInjuriesWhileSwerving(x))", "score": 0}
{"id": "eqasc_validation_1269", "prediction": "all x y.((Seatbelt(x) & Swerving(y)) -> CanPreventInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1269", "prediction": "all x y.((Seatbelt(x) & Sweeping(y)) -> PreventsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1269", "prediction": "all x.(Seatbelt(x) -> (PreventsInjuries(x) & Sweeping(x)))", "score": 0}
{"id": "eqasc_validation_1269", "prediction": "all x.(Seatbelt(x) -> (PreventsInjuries(x) & Swerves(x)))", "score": 0}
{"id": "eqasc_validation_1269", "prediction": "all x.(Seatbelt(x) -> PreventsInjuriesWhenSwerving(x))", "score": 0}
{"id": "eqasc_validation_1269", "prediction": "all x.(Seatbelt(x) -> PreventInjuriesWhileSwerving(x))", "score": 0}
{"id": "eqasc_validation_1269", "prediction": "all x.(Seatbelt(x) -> PreventsInjuriesWithSwerving(x))", "score": 0}
{"id": "eqasc_validation_1269", "prediction": "all x.(Seatbelt(x) -> PreventsInjuries(x,swerving))", "score": 0}
{"id": "eqasc_validation_1269", "prediction": "all x.(Seatbelt(x) -> PreventInjuries(x))", "score": 0}
{"id": "eqasc_validation_1269", "prediction": "all x.(Seatbelt(x) -> PreventsInjuriesBySwerving(x))", "score": 0}
{"id": "eqasc_validation_1269", "prediction": "all x.(Seatbelt(x) -> CanPreventInjuries(x))", "score": 0}
{"id": "eqasc_validation_1269", "prediction": "all x.(Seatbelt(x) -> PreventsInjuriesWhilstSwerving(x))", "score": 0}
{"id": "eqasc_validation_1269", "prediction": "all x.(Seatbelt(x) -> CanPreventInjuriesWhileSwerving(x))", "score": 0}
{"id": "eqasc_validation_1270", "prediction": "all x y z.((WaldronBolt(x) & LeadFoil(y) & SeatBelt(z)) -> MadeUp(x,y,z))", "score": 0}
{"id": "eqasc_validation_1270", "prediction": "all x y.((WaldronBolt(x) & LeadFoil(y)) -> MadeUpSeatbelts(x,y))", "score": 0}
{"id": "eqasc_validation_1270", "prediction": "all x.((WaldronBolt(x) & LeadFoil(x)) -> SeatBelts(x))", "score": 0}
{"id": "eqasc_validation_1270", "prediction": "all x y.((WaldronBolt(x) & LeadFoil(y)) -> MadeUpSeatBelts(x,y))", "score": 0}
{"id": "eqasc_validation_1270", "prediction": "all x y z.((WaldronBowl(x) & LeadFoil(y) & SeatBelt(z)) -> MadeUp(x,y,z))", "score": 0}
{"id": "eqasc_validation_1270", "prediction": "all x y z.((WaldronBolt(x) & LeadFoil(y) & SeatBelt(z)) -> MadeUpWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1270", "prediction": "all x.((WaldronBolt(x) & LeadFoil(x)) -> SeatBelt(x))", "score": 0}
{"id": "eqasc_validation_1270", "prediction": "all x y.((WaldronBowl(x) & LeadFoil(y)) -> MadeUpSeatbelts(x,y))", "score": 0}
{"id": "eqasc_validation_1270", "prediction": "all x.((WaldronBowl(x) & LeadFoil(x)) -> SeatBelts(x))", "score": 0}
{"id": "eqasc_validation_1270", "prediction": "all x y z.((WaldronBolt(x) & LeadFoil(y) & SeatBelt(z)) -> MadeUp(x,z))", "score": 0}
{"id": "eqasc_validation_1270", "prediction": "all x y.((WaldronBowl(x) & LeadFoil(y)) -> MadeUpSeatBelts(x,y))", "score": 0}
{"id": "eqasc_validation_1270", "prediction": "all x y.((WaldronBolt(x) & LeadFoil(y)) -> SeatBelt(x,y))", "score": 0}
{"id": "eqasc_validation_1270", "prediction": "all x y z.((WaldronBolt(x) & LeadFoil(y) & SeatBelt(z)) -> MadeUpBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1270", "prediction": "all x.((WaldronBolt(x) & LeadFoil(x)) -> SeatBlades(x))", "score": 0}
{"id": "eqasc_validation_1270", "prediction": "all x y.((WaldronBolt(x) & LeadFoil(y)) -> SeatBelts(x,y))", "score": 0}
{"id": "eqasc_validation_1270", "prediction": "all x y z.((WaldronBolt(x) & LeadFoil(y) & SeatBlade(z)) -> MadeUp(x,y,z))", "score": 0}
{"id": "eqasc_validation_1271", "prediction": "all x y z.((WaldronBolt(x) & LeadBolt(y) & Passenger(z)) -> PreventsInjuriesInCars(x,y,z))", "score": 0}
{"id": "eqasc_validation_1271", "prediction": "all x y z.((WaldronBolt(x) & LeadBolt(y) & Passenger(z) & Car(z)) -> PreventsInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1271", "prediction": "all x.((WaldronBolt(x) & HasLead(x)) -> PreventsInjuriesToPassengersInCars(x))", "score": 0}
{"id": "eqasc_validation_1271", "prediction": "all x y z.((WaldronBolt(x) & LeadBolt(y) & Passenger(z)) -> PreventsInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1271", "prediction": "all x y z.((WaldronBowl(x) & LeadBowl(y) & Passenger(z) & Car(z)) -> PreventsInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1271", "prediction": "all x y z.((WaldronBowl(x) & LeadBowl(y) & Passenger(z)) -> PreventsInjuriesInCars(x,y,z))", "score": 0}
{"id": "eqasc_validation_1271", "prediction": "all x y z.((WaldronBolt(x) & LeadBolt(y) & Passenger(z)) -> UsedToPreventInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1271", "prediction": "all x y z.((WaldronBolt(x) & LeadBolt(y) & Passenger(z)) -> UsedToPreventInjuriesInCars(x,y,z))", "score": 0}
{"id": "eqasc_validation_1271", "prediction": "all x y z.((WaldronBolt(x) & LeadBolt(y) & Passenger(z) & Car(z)) -> UsedToPreventInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1271", "prediction": "all x y z.((WaldronBowl(x) & LeadBowl(y) & Passenger(z) & Car(z)) -> UsedToPreventInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1271", "prediction": "all x y.((WaldronBolt(x) & Car(y)) -> (BuiltWithLead(x) & PreventsInjuries(x,y)))", "score": 0}
{"id": "eqasc_validation_1271", "prediction": "all x.((WaldronBolt(x) & HasLead(x)) -> PreventsInjuriesToPassengers(x))", "score": 0}
{"id": "eqasc_validation_1271", "prediction": "all x.((WaldronBolt(x) & HasLead(x)) -> UsedToPreventInjuriesToPassengersInCars(x))", "score": 0}
{"id": "eqasc_validation_1271", "prediction": "all x y z.((WaldronBlock(x) & LeadBlock(y) & Passenger(z)) -> PreventsInjuriesInCars(x,y,z))", "score": 0}
{"id": "eqasc_validation_1271", "prediction": "all x y z.((WaldronBowl(x) & LeadBowl(y) & Passenger(z)) -> PreventsInjuries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1271", "prediction": "all x.((WaldronBowl(x) & HasLead(x)) -> PreventsInjuriesToPassengersInCars(x))", "score": 0}
{"id": "eqasc_validation_1272", "prediction": "all x y.((Wildfire(x) & Ecosystem(y)) -> ChangesDramaticly(x,y))", "score": 1}
{"id": "eqasc_validation_1272", "prediction": "all x y z.((Wildfire(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDramaticly(x,y,z))", "score": 1}
{"id": "eqasc_validation_1272", "prediction": "all x y z.((Wildfire(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDisruptively(x,y,z))", "score": 1}
{"id": "eqasc_validation_1272", "prediction": "all x y.((Wildfire(x) & Ecosystem(y)) -> ChangesDirriously(x,y))", "score": 1}
{"id": "eqasc_validation_1272", "prediction": "all x y.((Wildfire(x) & Ecosystem(y)) -> ChangesDisruptively(x,y))", "score": 1}
{"id": "eqasc_validation_1272", "prediction": "all x y z.((Wildfire(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDirriously(x,y,z))", "score": 1}
{"id": "eqasc_validation_1272", "prediction": "all x y z.((Wildfire(x) & Ecosystem(y) & Ecosystem(z)) -> Changes(x,y,z))", "score": 2}
{"id": "eqasc_validation_1272", "prediction": "all x y z.((Wildfire(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDrastically(x,y,z))", "score": 1}
{"id": "eqasc_validation_1272", "prediction": "all x y z.((Wildfire(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDirractively(x,y,z))", "score": 1}
{"id": "eqasc_validation_1272", "prediction": "all x y z.((Wildfire(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDriatrically(x,y,z))", "score": 0}
{"id": "eqasc_validation_1272", "prediction": "all x y z.((Wildfire(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDirtually(x,y,z))", "score": 1}
{"id": "eqasc_validation_1272", "prediction": "all x y.((Wildfire(x) & Ecosystem(y)) -> ChangesDrastically(x,y))", "score": 0}
{"id": "eqasc_validation_1272", "prediction": "all x y z.((Wildfire(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDirtuously(x,y,z))", "score": 0}
{"id": "eqasc_validation_1272", "prediction": "all x y.((Wildfire(x) & Ecosystem(y)) -> ChangesDirractively(x,y))", "score": 0}
{"id": "eqasc_validation_1272", "prediction": "all x y.((Wildfire(x) & Ecosystem(y)) -> ChangesDirtually(x,y))", "score": 0}
{"id": "eqasc_validation_1272", "prediction": "all x y z.((Wildfire(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDramaticly(x,y))", "score": 1}
{"id": "eqasc_validation_1273", "prediction": "all x.(Ecosystem(x) -> (Neighborhood(x) & InNature(x)))", "score": 0}
{"id": "eqasc_validation_1273", "prediction": "all x.(Ecosystem(x) -> NeighborhoodInNature(x))", "score": 0}
{"id": "eqasc_validation_1273", "prediction": "all x.(Ecosystem(x) -> LikeNeighborhoodInNature(x))", "score": 0}
{"id": "eqasc_validation_1273", "prediction": "all x.(Ecosystem(x) -> (LikeNeighborhood(x) & InNature(x)))", "score": 0}
{"id": "eqasc_validation_1273", "prediction": "all x.(Ecosystem(x) -> (NeighborhoodInNature(x) & LikeNeighborhoodInNature(x)))", "score": 0}
{"id": "eqasc_validation_1273", "prediction": "all x.(Ecosystem(x) -> LikeNeighborhood(x))", "score": 0}
{"id": "eqasc_validation_1273", "prediction": "all x.(Ecosystem(x) -> (NeighborhoodInNature(x) & LikeInNature(x)))", "score": 0}
{"id": "eqasc_validation_1273", "prediction": "all x.(Ecosystem(x) -> (LikeNeighborhoodInNature(x)))", "score": 0}
{"id": "eqasc_validation_1273", "prediction": "all x.(Ecosystem(x) -> (NeighborhoodInNature(x) & Like(x,Nature)))", "score": 0}
{"id": "eqasc_validation_1273", "prediction": "all x.(Ecosystem(x) -> (NeighborhoodInNature(x) & Like(x,y)))", "score": 0}
{"id": "eqasc_validation_1273", "prediction": "all x.(Ecosystem(x) -> (Neighborhood(x) & Nature(x)))", "score": 0}
{"id": "eqasc_validation_1273", "prediction": "all x.(Ecosystem(x) -> (LikeNeighborhood(x) & Nature(x)))", "score": 0}
{"id": "eqasc_validation_1273", "prediction": "all x y.((Ecosystem(x) & Nature(y)) -> LikeNeighborhood(x,y))", "score": 0}
{"id": "eqasc_validation_1273", "prediction": "all x y.((Ecosystem(x) & Nature(y)) -> LikeNeighborhoodIn(x,y))", "score": 0}
{"id": "eqasc_validation_1273", "prediction": "all x y z.((Ecosystem(x) & Neighborhood(y) & Nature(z)) -> Like(x,y,z))", "score": 0}
{"id": "eqasc_validation_1274", "prediction": "all x y z.((Wildfire(x) & Neighborhood(y) & Nature(z)) -> ChangesDramaticly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1274", "prediction": "all x y.((Wildfire(x) & Neighborhood(y)) -> ChangesDramaticInNature(x,y))", "score": 0}
{"id": "eqasc_validation_1274", "prediction": "all x y z.((Wildfire(x) & Neighborhood(y) & Nature(z)) -> ChangesDrastically(x,y,z))", "score": 0}
{"id": "eqasc_validation_1274", "prediction": "all x y.((Wildfire(x) & Neighborhood(y)) -> ChangesDramaticNature(x,y))", "score": 0}
{"id": "eqasc_validation_1274", "prediction": "all x y z.((Wildfire(x) & Neighborhood(y) & Nature(z)) -> ChangesDirriously(x,y,z))", "score": 0}
{"id": "eqasc_validation_1274", "prediction": "all x y z.((Wildfire(x) & Neighborhood(y) & Nature(z)) -> ChangesDistantly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1274", "prediction": "all x y z.((Wildfire(x) & Neighborhood(y) & Nature(z)) -> ChangesDisruptively(x,y,z))", "score": 0}
{"id": "eqasc_validation_1274", "prediction": "all x y z.((Wildfire(x) & Neighborhood(y) & Nature(z)) -> ChangesDirtually(x,y,z))", "score": 0}
{"id": "eqasc_validation_1274", "prediction": "all x y.((Wildfire(x) & Neighborhood(y)) -> ChangesDirtuallyInNature(x,y))", "score": 0}
{"id": "eqasc_validation_1274", "prediction": "all x y.((Wildfire(x) & Neighborhood(y)) -> ChangesDirriouslyInNature(x,y))", "score": 0}
{"id": "eqasc_validation_1274", "prediction": "all x y z.((Wildfire(x) & Neighborhood(y) & Nature(z)) -> ChangesDramaticlyInNature(x,y,z))", "score": 0}
{"id": "eqasc_validation_1274", "prediction": "all x y.((Wildfire(x) & Neighborhood(y) & Nature(z)) -> ChangesDramaticly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1274", "prediction": "all x y z.((Wildfire(x) & Neighborhood(y) & Nature(z)) -> ChangesDirregularly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1274", "prediction": "all x y z.((Wildfire(x) & Neighborhood(y) & Nature(z)) -> ChangesDirtuously(x,y,z))", "score": 0}
{"id": "eqasc_validation_1274", "prediction": "all x.(Wildfire(x) -> ChangesNeighborhoodInNatureDramaticly(x))", "score": 0}
{"id": "eqasc_validation_1274", "prediction": "all x y.((Wildfire(x) & Neighborhood(y)) -> ChangesDirriously(x,y))", "score": 0}
{"id": "eqasc_validation_1275", "prediction": "all x.(Human(x) -> StartsWildfire(x))", "score": 0}
{"id": "eqasc_validation_1275", "prediction": "all x y.((Human(x) & Wildfire(y)) -> Starts(x,y))", "score": 0}
{"id": "eqasc_validation_1275", "prediction": "all x.(Human(x) -> StartsWildfires(x))", "score": 0}
{"id": "eqasc_validation_1275", "prediction": "all x y z.((Human(x) & Wildfire(y) & Wildfire(z)) -> Starts(x,y,z))", "score": 0}
{"id": "eqasc_validation_1275", "prediction": "all x y z.((Human(x) & Wildfire(y) & Fire(z)) -> Starts(x,y,z))", "score": 0}
{"id": "eqasc_validation_1275", "prediction": "all x.(Human(x) -> StartsMostWildfires(x))", "score": 0}
{"id": "eqasc_validation_1275", "prediction": "all x y.((Human(x) & Wildfire(y)) -> Start(x,y))", "score": 0}
{"id": "eqasc_validation_1275", "prediction": "all x.(Human(x) -> (StartsWildfire(x) & -StartsWildfire(x)))", "score": 0}
{"id": "eqasc_validation_1275", "prediction": "all x y z.((Human(x) & Wildfire(y) & Wildfire(z)) -> Starts(x,y))", "score": 0}
{"id": "eqasc_validation_1275", "prediction": "all x.(Human(x) -> (StartsWildfires(x) & -StartsWildfires(x)))", "score": 0}
{"id": "eqasc_validation_1275", "prediction": "all x.(Human(x) -> MostStartsWildfires(x))", "score": 0}
{"id": "eqasc_validation_1275", "prediction": "all x.(Human(x) -> (StartsWildfire(x) | StartsWildfire(x)))", "score": 0}
{"id": "eqasc_validation_1275", "prediction": "all x.(Human(x) -> MostStartsWildfire(x))", "score": 0}
{"id": "eqasc_validation_1275", "prediction": "all x y z.((Human(x) & Wildfire(y) & Wildfire(z)) -> Start(x,y,z))", "score": 0}
{"id": "eqasc_validation_1275", "prediction": "all x.(Human(x) -> (StartsWildfires(x) | StartsWildfires(x)))", "score": 0}
{"id": "eqasc_validation_1275", "prediction": "all x.(Human(x) -> (StartsWildfire(x) | -StartsWildfire(x)))", "score": 0}
{"id": "eqasc_validation_1276", "prediction": "all x y.((Human(x) & Ecosystem(y)) -> CanChangeDramaticly(x,y))", "score": 0}
{"id": "eqasc_validation_1276", "prediction": "all x y z.((Human(x) & Ecosystem(y) & Ecosystem(z)) -> CanChangeDramaticly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1276", "prediction": "all x.(Human(x) -> CanChangeEcosystemsDramaticly(x))", "score": 0}
{"id": "eqasc_validation_1276", "prediction": "all x y z.((Human(x) & Ecosystem(y) & Ecosystem(z)) -> CanChange(x,y,z))", "score": 0}
{"id": "eqasc_validation_1276", "prediction": "all x y z.((Human(x) & Ecosystem(y) & Ecosystem(z)) -> CanChangeDrastically(x,y,z))", "score": 0}
{"id": "eqasc_validation_1276", "prediction": "all x y z.((Human(x) & Ecosystem(y) & Environment(z)) -> CanChangeDramaticly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1276", "prediction": "all x y.((Human(x) & Ecosystem(y)) -> CanChangeDrastically(x,y))", "score": 0}
{"id": "eqasc_validation_1276", "prediction": "all x y.((Human(x) & Ecosystem(y)) -> CanChange(x,y))", "score": 0}
{"id": "eqasc_validation_1276", "prediction": "all x y.((Human(x) & Ecosystem(y)) -> ChangesDramaticly(x,y))", "score": 0}
{"id": "eqasc_validation_1276", "prediction": "all x y z.((Human(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDramaticly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1276", "prediction": "all x y z.((Human(x) & Ecosystem(y) & Ecosystem(z)) -> CanChangeDisruptively(x,y,z))", "score": 0}
{"id": "eqasc_validation_1276", "prediction": "all x y.((Human(x) & Ecosystem(y)) -> CanChangeDisruptively(x,y))", "score": 0}
{"id": "eqasc_validation_1276", "prediction": "all x y z.((Human(x) & Ecosystem(y) & Ecosystem(z)) -> CanChangeDramaticly(x,y))", "score": 0}
{"id": "eqasc_validation_1276", "prediction": "all x y z.((Human(x) & Ecosystem(y) & Ecosystem(z)) -> CanChangeDirregularly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1276", "prediction": "all x y.((Human(x) & Ecosystem(y)) -> CanChangeDirregularly(x,y))", "score": 0}
{"id": "eqasc_validation_1277", "prediction": "all x.(Fire(x) -> NaturalPartForestEcosystem(x))", "score": 0}
{"id": "eqasc_validation_1277", "prediction": "all x y.((Fire(x) & ForestEcosystem(y)) -> NaturalPart(x,y))", "score": 0}
{"id": "eqasc_validation_1277", "prediction": "all x.(Fire(x) -> NaturalPartForestEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1277", "prediction": "all x y.((Fire(x) & Forest(y)) -> NaturalPart(x,y))", "score": 0}
{"id": "eqasc_validation_1277", "prediction": "all x y z.((Fire(x) & ForestEcosystem(y) & Forest(z)) -> NaturalPart(x,y,z))", "score": 0}
{"id": "eqasc_validation_1277", "prediction": "all x.(Fire(x) -> (NaturalPartForestEcosystem(x) & PartForestEcosystem(x)))", "score": 0}
{"id": "eqasc_validation_1277", "prediction": "all x y z.((Fire(x) & ForestEcosystem(y) & ForestEcosystem(z)) -> NaturalPart(x,y,z))", "score": 0}
{"id": "eqasc_validation_1277", "prediction": "all x.(Fire(x) -> (NaturalPartForestEcosystem(x) & NaturalPartForestEcosystem(x)))", "score": 0}
{"id": "eqasc_validation_1277", "prediction": "all x y z.((Fire(x) & ForestEcosystem(y) & Ecosystem(z)) -> NaturalPart(x,y,z))", "score": 0}
{"id": "eqasc_validation_1277", "prediction": "all x y z.((Fire(x) & Forest(y) & Ecosystem(z)) -> NaturalPart(x,y,z))", "score": 0}
{"id": "eqasc_validation_1277", "prediction": "all x y z.((Fire(x) & ForestEcosystem(y) & NaturalPart(z)) -> NaturalPart(x,y,z))", "score": 0}
{"id": "eqasc_validation_1277", "prediction": "all x y z.((Fire(x) & ForestEcosystem(y) & Forest(z)) -> NaturalPart(x,y))", "score": 0}
{"id": "eqasc_validation_1277", "prediction": "all x y.((Fire(x) & NaturalPartForestEcosystem(y)) -> NaturalPartForest(x,y))", "score": 0}
{"id": "eqasc_validation_1277", "prediction": "all x.(Fire(x) -> (NaturalPartForestEcosystems(x) & PartForestEcosystems(x)))", "score": 0}
{"id": "eqasc_validation_1278", "prediction": "all x y.((Wildfire(x) & Forest(y)) -> Changes(x,y))", "score": 0}
{"id": "eqasc_validation_1278", "prediction": "all x y z.((Wildfire(x) & Forest(y) & Forest(z)) -> Changes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1278", "prediction": "all x y.((Wildfire(x) & Forest(y)) -> ChangesForests(x,y))", "score": 0}
{"id": "eqasc_validation_1278", "prediction": "all x.(Wildfire(x) -> ChangesForests(x))", "score": 0}
{"id": "eqasc_validation_1278", "prediction": "all x.((Wildfire(x) & ChangesForests(x)) -> ChangesForests(x))", "score": 0}
{"id": "eqasc_validation_1278", "prediction": "all x.((Wildfire(x) & ChangesForests(x)) -> WildfireChangesForests(x))", "score": 0}
{"id": "eqasc_validation_1278", "prediction": "all x y z.((Wildfire(x) & Forest(y) & Forest(z) & Changes(x,y,z)) -> Changes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1278", "prediction": "all x y z.((Wildfire(x) & Forest(y) & Forest(z) & Changes(x,y,z)) -> Changes(x,y))", "score": 0}
{"id": "eqasc_validation_1278", "prediction": "all x y.((Wildfire(x) & Forest(y) & ChangesForests(x,y)) -> ChangesForests(x,y))", "score": 0}
{"id": "eqasc_validation_1278", "prediction": "all x y z.((Wildfire(x) & Forest(y) & Forest(z) & Changes(x,y)) -> Changes(x,z))", "score": 0}
{"id": "eqasc_validation_1278", "prediction": "all x y z.((Wildfire(x) & Forest(y) & Forest(z)) -> Changes(x,y))", "score": 0}
{"id": "eqasc_validation_1278", "prediction": "all x y z.((Wildfire(x) & Forest(y) & Forest(z)) -> ChangesForests(x,y,z))", "score": 0}
{"id": "eqasc_validation_1278", "prediction": "all x y z.((Wildfire(x) & Forest(y) & Forest(z) & ChangesForests(x,y,z)) -> ChangesForests(x,y,z))", "score": 0}
{"id": "eqasc_validation_1278", "prediction": "all x y.((Wildfire(x) & Forest(y) & ChangesForests(x,y)) -> ChangesForests(x))", "score": 0}
{"id": "eqasc_validation_1278", "prediction": "all x y z w.((Wildfire(x) & Forest(y) & Forest(z) & Changes(x,y,z)) -> Changes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1278", "prediction": "all x y z w.((Wildfire(x) & Forest(y) & Forest(z) & Changes(x,y,z)) -> Changes(x,w))", "score": 0}
{"id": "eqasc_validation_1279", "prediction": "all x y z.((Ecosystem(x) & CommunityOfSpecies(y) & Area(z)) -> InSpecificArea(x,y,z))", "score": 0}
{"id": "eqasc_validation_1279", "prediction": "all x.(Ecosystem(x) -> exists y.(Species(y) & Community(x,y)) & exists z.(Area(z) & InArea(x,z))))", "score": -1}
{"id": "eqasc_validation_1279", "prediction": "all x.(Ecosystem(x) -> exists y.(Species(y) & Community(x,y)) & InSpecificArea(x,y)))", "score": -1}
{"id": "eqasc_validation_1279", "prediction": "all x y.((Ecosystem(x) & CommunityOfSpecies(y)) -> InSpecificArea(x,y))", "score": 0}
{"id": "eqasc_validation_1279", "prediction": "all x y.((Ecosystem(x) & CommunityOfSpecies(y) & InSpecificArea(x,y)) -> CommunityOfSpecies(x,y))", "score": 0}
{"id": "eqasc_validation_1279", "prediction": "all x.(Ecosystem(x) -> (CommunityOfSpecies(x) & InSpecificArea(x)))", "score": 0}
{"id": "eqasc_validation_1279", "prediction": "all x.(Ecosystem(x) -> (CommunityOfSpecies(x) & SpecificArea(x)))", "score": 0}
{"id": "eqasc_validation_1279", "prediction": "all x y z.((Ecosystem(x) & CommunityOfSpecies(y) & Area(z)) -> InSpecificArea(y,z))", "score": 0}
{"id": "eqasc_validation_1279", "prediction": "all x.(Ecosystem(x) -> exists y.(SpeciesCommunity(y) & InSpecificArea(x,y))))", "score": -1}
{"id": "eqasc_validation_1279", "prediction": "all x.(Ecosystem(x) -> exists y.(SpeciesCommunity(y) & InSpecificArea(x,y)))", "score": 0}
{"id": "eqasc_validation_1279", "prediction": "all x.(Ecosystem(x) -> exists y.(Species(y) & Community(x,y) & InSpecificArea(x,y)))", "score": 0}
{"id": "eqasc_validation_1279", "prediction": "all x.(Ecosystem(x) -> exists y.(Species(y) & Community(x,y)) & exists z.(Area(z) & InArea(x,z)))))", "score": -1}
{"id": "eqasc_validation_1279", "prediction": "all x.(Ecosystem(x) -> exists y.(Species(y) & Community(x,y)) & exists z.(Species(z) & InArea(x,z))))", "score": -1}
{"id": "eqasc_validation_1280", "prediction": "all x y z.((Wildfire(x) & CommunityOfSpecies(y) & Area(z)) -> ChangesDramaticly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1280", "prediction": "all x y.((Wildfire(x) & CommunityOfSpecies(y) & Area(z)) -> ChangesDramaticly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1280", "prediction": "all x y z.((Wildfire(x) & CommunityOfSpecies(y) & Area(z)) -> ChangesDrastically(x,y,z))", "score": 0}
{"id": "eqasc_validation_1280", "prediction": "all x y z.((Wildfire(x) & CommunityOfSpecies(y) & Area(z)) -> ChangesDisruptively(x,y,z))", "score": 0}
{"id": "eqasc_validation_1280", "prediction": "all x y z.((Wildfire(x) & CommunityOfSpecies(y) & Area(z)) -> Changes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1280", "prediction": "all x y z.((Wildfire(x) & CommunityOfSpecies(y) & Area(z)) -> ChangesDramically(x,y,z))", "score": 0}
{"id": "eqasc_validation_1280", "prediction": "all x y.((Wildfire(x) & CommunityOfSpecies(y)) -> ChangesDramaticArea(x,y))", "score": 0}
{"id": "eqasc_validation_1280", "prediction": "all x y z.((Wildfire(x) & CommunityOfSpecies(y) & Area(z)) -> ChangesDramaticlyInArea(x,y,z))", "score": 0}
{"id": "eqasc_validation_1280", "prediction": "all x y z.((Wildfire(x) & CommunityOfSpecies(y) & Area(z)) -> ChangesDramaticlyIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1280", "prediction": "all x y z.((Wildfire(x) & CommunityOfSpecies(y) & Area(z)) -> ChangesDirtuously(x,y,z))", "score": 0}
{"id": "eqasc_validation_1280", "prediction": "all x y.((Wildfire(x) & CommunityOfSpecies(y) & SpecificArea(z)) -> ChangesDramaticly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1280", "prediction": "all x y z.((Wildfire(x) & CommunityOfSpecies(y) & Area(z)) -> ChangesDirtually(x,y,z))", "score": 0}
{"id": "eqasc_validation_1280", "prediction": "all x y z.((Wildfire(x) & CommunityOfSpecies(y) & Area(z)) -> ChangesDramatic(x,y,z))", "score": 0}
{"id": "eqasc_validation_1280", "prediction": "all x y z.((Wildfire(x) & CommunityOfSpecies(y) & Area(z)) -> ChangesDirriously(x,y,z))", "score": 0}
{"id": "eqasc_validation_1280", "prediction": "all x y z.((Wildfire(x) & CommunityOfSpecies(y) & Area(z)) -> (Changes(x,y,z) & InSpecificArea(y,z)))", "score": 0}
{"id": "eqasc_validation_1280", "prediction": "all x y.((Wildfire(x) & CommunityOfSpecies(y) & Area(y)) -> ChangesDramaticly(x,y))", "score": 0}
{"id": "eqasc_validation_1281", "prediction": "all x.((Weather(x) & Wildfire(x)) -> ActsInEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1281", "prediction": "all x y.((Weather(x) & Wildfire(y)) -> ActsInEcosystems(x,y))", "score": 0}
{"id": "eqasc_validation_1281", "prediction": "all x.((Weather(x) | Wildfire(x)) -> ActsInEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1281", "prediction": "all x.((Weather(x) & Wildfire(x)) -> ActsWithinEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1281", "prediction": "all x y.((Weather(x) & Wildfire(y)) -> ActsWithinEcosystems(x,y))", "score": 0}
{"id": "eqasc_validation_1281", "prediction": "all x y.((Weather(x) & Wildfire(y)) -> ActsInEcosystem(x,y))", "score": 0}
{"id": "eqasc_validation_1281", "prediction": "all x y z.((Weather(x) & Wildfire(y) & Ecosystem(z)) -> ActsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1281", "prediction": "all x.((Weather(x) | Wildfire(x)) -> ActsWithinEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1281", "prediction": "all x y z.((Weather(x) & Wildfire(y) & Ecosystem(z)) -> ActsWithin(x,y,z))", "score": 0}
{"id": "eqasc_validation_1281", "prediction": "all x y.((Weather(x) & Wildfire(y)) -> ActsInEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1281", "prediction": "all x y z.((Weather(x) & Wildfire(y) & Ecosystem(z)) -> ActsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1281", "prediction": "all x y.((Weather(x) & Wildfire(y)) -> (ActsWithinEcosystems(x) & ActsWithinEcosystems(y)))", "score": 0}
{"id": "eqasc_validation_1281", "prediction": "all x y.((Weather(x) & Wildfire(y)) -> (ActsWithinEcosystems(x,y) & ActsWithinEcosystems(x,y)))", "score": 0}
{"id": "eqasc_validation_1281", "prediction": "all x y z.((Weather(x) & Wildfire(y) & Ecosystem(z)) -> ActsWith(x,z))", "score": 0}
{"id": "eqasc_validation_1281", "prediction": "all x.((Weather(x) & Wildfire(x)) -> ActsInEcosystem(x))", "score": 0}
{"id": "eqasc_validation_1281", "prediction": "all x y.((Weather(x) & Wildfire(y)) -> (ActsWithinEcosystems(x) & ActsWithinEcosystems(x)))", "score": 0}
{"id": "eqasc_validation_1282", "prediction": "all x y.((Weather(x) & Ecosystem(y)) -> ChangesDramaticly(x,y))", "score": 0}
{"id": "eqasc_validation_1282", "prediction": "all x y.((Weather(x) & Ecosystem(y)) -> (Changes(x,y) & Changes(x,y)))", "score": 0}
{"id": "eqasc_validation_1282", "prediction": "all x y z.((Weather(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDramaticly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1282", "prediction": "all x y z.((Weather(x) & Ecosystem(y) & Ecosystem(z)) -> (Changes(x,y,z) & Changes(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1282", "prediction": "all x y z.((Weather(x) & Ecosystem(y) & Ecosystem(z)) -> (Changes(x,y,z) & Changes(x,y)))", "score": 0}
{"id": "eqasc_validation_1282", "prediction": "all x y z.((Weather(x) & Ecosystem(y) & Ecosystem(z)) -> (Changes(x,y) & Changes(x,z)))", "score": 0}
{"id": "eqasc_validation_1282", "prediction": "all x.(Weather(x) -> (Force(x) & ChangesEcosystem(x) & Dramatically(x)))", "score": 0}
{"id": "eqasc_validation_1282", "prediction": "all x y z.((Weather(x) & Ecosystem(y) & Environment(z)) -> (Changes(x,y,z) & Changes(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1282", "prediction": "all x.(Weather(x) -> (Force(x) & ChangesEcosystemDramaticly(x)))", "score": 0}
{"id": "eqasc_validation_1282", "prediction": "all x y z.((Weather(x) & Ecosystem(y) & Environment(z)) -> (Changes(x,y,z) & Changes(x,y)))", "score": 0}
{"id": "eqasc_validation_1282", "prediction": "all x y z.((Weather(x) & Ecosystem(y) & Environment(z)) -> ChangesDramaticly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1282", "prediction": "all x.(Weather(x) -> (ChangesEcosystem(x) & Dramatically(x)))", "score": 0}
{"id": "eqasc_validation_1282", "prediction": "all x y.((Weather(x) & Ecosystem(y)) -> ChangesDrastically(x,y))", "score": 0}
{"id": "eqasc_validation_1282", "prediction": "all x y z.((Weather(x) & Ecosystem(y) & Ecosystem(z)) -> (Force(x) & Changes(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1282", "prediction": "all x y.((Weather(x) & Ecosystem(y)) -> ChangesDisruptively(x,y))", "score": 0}
{"id": "eqasc_validation_1282", "prediction": "all x y z.((Weather(x) & Ecosystem(y) & Environment(z)) -> (Changes(x,y) & Changes(x,z)))", "score": 0}
{"id": "eqasc_validation_1283", "prediction": "all x y.((ForestFire(x) & Ecosystem(y)) -> CanChange(x,y))", "score": 0}
{"id": "eqasc_validation_1283", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z)) -> CanChange(x,y,z))", "score": 0}
{"id": "eqasc_validation_1283", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z)) -> Changes(x,y,z))", "score": 1}
{"id": "eqasc_validation_1283", "prediction": "all x y.((ForestFire(x) & Ecosystem(y)) -> Changes(x,y))", "score": 0}
{"id": "eqasc_validation_1283", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z) & CanChange(x,y,z)) -> CanChange(x,y,z))", "score": 0}
{"id": "eqasc_validation_1283", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z) & Changes(x,y,z)) -> CanChange(x,y,z))", "score": 0}
{"id": "eqasc_validation_1283", "prediction": "all x y.((ForestFire(x) & Ecosystem(y) & Changes(x,y)) -> CanChange(x,y))", "score": 0}
{"id": "eqasc_validation_1283", "prediction": "all x y.((ForestFire(x) & Ecosystem(y) & CanChange(x,y)) -> CanChange(x,y))", "score": 0}
{"id": "eqasc_validation_1283", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z) & Changes(x,y,z)) -> CanChange(x,y))", "score": 0}
{"id": "eqasc_validation_1283", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z) & CanChange(x,y,z)) -> CanChange(x,y))", "score": 0}
{"id": "eqasc_validation_1283", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z) & Changes(x,y)) -> CanChange(x,z))", "score": 0}
{"id": "eqasc_validation_1283", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z)) -> CanChange(x,y))", "score": 0}
{"id": "eqasc_validation_1283", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z) & Change(x,y,z)) -> CanChange(x,y,z))", "score": 0}
{"id": "eqasc_validation_1283", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z) & CanChange(x,y)) -> CanChange(x,z))", "score": 0}
{"id": "eqasc_validation_1283", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z) & Changes(x,y)) -> CanChange(x,y,z))", "score": 0}
{"id": "eqasc_validation_1283", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z) & Change(x,y,z)) -> CanChange(x,y))", "score": 0}
{"id": "eqasc_validation_1284", "prediction": "all x.((LargeEcosystem(x) & Biome(x)) -> KnownAs(x))", "score": 0}
{"id": "eqasc_validation_1284", "prediction": "all x.(LargeEcosystem(x) -> Biome(x))", "score": 0}
{"id": "eqasc_validation_1284", "prediction": "all x.((Ecosystem(x) & VeryLarge(x)) -> Biome(x))", "score": 0}
{"id": "eqasc_validation_1284", "prediction": "all x.((LargeEcosystem(x) & Biome(x)) -> Large(x))", "score": 0}
{"id": "eqasc_validation_1284", "prediction": "all x y.((LargeEcosystem(x) & Biome(y)) -> KnownAs(x,y))", "score": 0}
{"id": "eqasc_validation_1284", "prediction": "all x.((LargeEcosystem(x) & Biome(x)) -> LargeEcosystem(x))", "score": 0}
{"id": "eqasc_validation_1284", "prediction": "all x.((LargeEcosystem(x) & Biome(x)) -> Biome(x))", "score": 0}
{"id": "eqasc_validation_1284", "prediction": "all x.((Ecosystem(x) & Large(x)) -> Biome(x))", "score": 0}
{"id": "eqasc_validation_1284", "prediction": "all x.((VeryLargeEcosystem(x) & Biome(x)) -> KnownAs(x))", "score": 0}
{"id": "eqasc_validation_1284", "prediction": "all x.((LargeEcosystem(x) & Biome(x)) -> VeryLarge(x))", "score": 0}
{"id": "eqasc_validation_1284", "prediction": "all x.((LargeEcosystem(x) & Biome(x)) -> KnownAs(x,y))", "score": 0}
{"id": "eqasc_validation_1284", "prediction": "all x y.((VeryLargeEcosystem(x) & Biome(y)) -> KnownAs(x,y))", "score": 0}
{"id": "eqasc_validation_1284", "prediction": "all x.((VolatileEcosystem(x) & Biome(x)) -> Large(x))", "score": 0}
{"id": "eqasc_validation_1284", "prediction": "all x.((LargeEcosystem(x) & Biome(x)) -> Exists(x))", "score": 0}
{"id": "eqasc_validation_1284", "prediction": "all x.((LargeEcosystem(x) & Biome(x)) -> Known(x))", "score": 0}
{"id": "eqasc_validation_1284", "prediction": "all x.((LargeEcosystem(x) & Biome(x)) -> KnownFor(x))", "score": 0}
{"id": "eqasc_validation_1285", "prediction": "all x y z.((Wildfire(x) & Biome(y) & Biome(z)) -> ChangesDramaticly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1285", "prediction": "all x y.((Wildfire(x) & Biome(y)) -> ChangesDramaticly(x,y))", "score": 0}
{"id": "eqasc_validation_1285", "prediction": "all x y z.((Wildfire(x) & Biome(y) & Biome(z)) -> ChangesDisruptively(x,y,z))", "score": 0}
{"id": "eqasc_validation_1285", "prediction": "all x y.((Wildfire(x) & Biome(y)) -> ChangesDisruptively(x,y))", "score": 0}
{"id": "eqasc_validation_1285", "prediction": "all x y z.((Wildfire(x) & Biome(y) & Biome(z)) -> ChangesDirriously(x,y,z))", "score": 0}
{"id": "eqasc_validation_1285", "prediction": "all x y z.((Wildfire(x) & Biome(y) & Biome(z) & ChangesDramaticly(x,y,z)) -> ChangesDramaticly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1285", "prediction": "all x y z.((Wildfire(x) & Biome(y) & Biome(z)) -> ChangesDrastically(x,y,z))", "score": 0}
{"id": "eqasc_validation_1285", "prediction": "all x y z.((Wildfire(x) & Biome(y) & Biome(z)) -> ChangesCrucially(x,y,z))", "score": 0}
{"id": "eqasc_validation_1285", "prediction": "all x y z w.((Wildfire(x) & Biome(y) & Biome(z) & Biome(w)) -> ChangesDramaticly(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_1285", "prediction": "all x y z.((Wildfire(x) & Biome(y) & Biome(z) & ChangesDisruptively(x,y,z)) -> ChangesDisruptively(x,y,z))", "score": 0}
{"id": "eqasc_validation_1285", "prediction": "all x y.((Wildfire(x) & Biome(y)) -> ChangesDirriously(x,y))", "score": 0}
{"id": "eqasc_validation_1285", "prediction": "all x y z.((Wildfire(x) & Biome(y) & Biome(z)) -> Changes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1285", "prediction": "all x y z.((Wildfire(x) & Biome(y) & Biome(z) & ChangesDramaticly(x,y,z)) -> ChangesDramaticly(x,y))", "score": 0}
{"id": "eqasc_validation_1285", "prediction": "all x y z w.((Wildfire(x) & Biome(y) & Biome(z) & Biome(w)) -> ChangesDisruptively(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_1285", "prediction": "all x y z.((Wildfire(x) & Biome(y) & Biome(z)) -> ChangesDirtuously(x,y,z))", "score": 0}
{"id": "eqasc_validation_1285", "prediction": "all x y z.((Wildfire(x) & Biome(y) & Biome(z)) -> (ChangesDramaticly(x,y,z) & Biome(y)))", "score": 0}
{"id": "eqasc_validation_1286", "prediction": "all x.(ForestEcosystem(x) -> (Dynamic(x) & EverChange(x)))", "score": 0}
{"id": "eqasc_validation_1286", "prediction": "all x.(ForestEcosystem(x) -> (Dynamic(x) & EverChanging(x)))", "score": 0}
{"id": "eqasc_validation_1286", "prediction": "all x.(ForestEcosystem(x) -> (Dynamic(x) & EverChanged(x)))", "score": 0}
{"id": "eqasc_validation_1286", "prediction": "all x.(Forest(x) -> (Dynamic(x) & EverChange(x)))", "score": 0}
{"id": "eqasc_validation_1286", "prediction": "all x y.((ForestEcosystem(x) & Forest(y)) -> (Dynamic(x) & EverChange(x)))", "score": 0}
{"id": "eqasc_validation_1286", "prediction": "all x.(Forest(x) -> (Dynamic(x) & EverChanging(x)))", "score": 0}
{"id": "eqasc_validation_1286", "prediction": "all x.(Forest(x) -> (Dynamic(x) & EverChanged(x)))", "score": 0}
{"id": "eqasc_validation_1286", "prediction": "all x y.((ForestEcosystem(x) & Forest(y)) -> (Dynamic(x) & EverChanging(x)))", "score": 0}
{"id": "eqasc_validation_1286", "prediction": "all x y.((ForestEcosystem(x) & Forest(y)) -> (Dynamic(x) & EverChanged(x)))", "score": 0}
{"id": "eqasc_validation_1286", "prediction": "all x.(ForestEcosystem(x) -> (Dynamic(x) & EverChangeing(x)))", "score": 0}
{"id": "eqasc_validation_1286", "prediction": "all x y.((Forest(x) & Ecosystem(y)) -> (Dynamic(x) & EverChange(x)))", "score": 0}
{"id": "eqasc_validation_1286", "prediction": "all x y.((ForestEcosystem(x) & Forest(y)) -> (Dynamic(x,y) & EverChange(x,y)))", "score": 0}
{"id": "eqasc_validation_1286", "prediction": "all x.(ForestEcosystem(x) -> (Dynamic(x) & AlwaysChanging(x)))", "score": 0}
{"id": "eqasc_validation_1287", "prediction": "all x y z.((Wildfire(x) & Forest(y) & Forest(z)) -> ChangesDramaticly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1287", "prediction": "all x y.((Wildfire(x) & Forest(y)) -> ChangesDramaticly(x,y))", "score": 0}
{"id": "eqasc_validation_1287", "prediction": "all x y z.((Wildfire(x) & Forest(y) & Forest(z)) -> ChangesDirriously(x,y,z))", "score": 0}
{"id": "eqasc_validation_1287", "prediction": "all x y z.((Wildfire(x) & Forest(y) & Forest(z)) -> ChangesDisruptively(x,y,z))", "score": 0}
{"id": "eqasc_validation_1287", "prediction": "all x y.((Wildfire(x) & Forest(y)) -> ChangesDirriously(x,y))", "score": 0}
{"id": "eqasc_validation_1287", "prediction": "all x y z.((Wildfire(x) & Forest(y) & Forest(z) & ChangesDramaticly(x,y,z)) -> ChangesDramaticly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1287", "prediction": "all x y z.((Wildfire(x) & Forest(y) & Forest(z)) -> ChangesDrastically(x,y,z))", "score": 0}
{"id": "eqasc_validation_1287", "prediction": "all x y.((Wildfire(x) & Forest(y)) -> ChangesDisruptively(x,y))", "score": 0}
{"id": "eqasc_validation_1287", "prediction": "all x y z.((Wildfire(x) & Forest(y) & Forest(z)) -> ChangesDirtuously(x,y,z))", "score": 0}
{"id": "eqasc_validation_1287", "prediction": "all x y z.((Wildfire(x) & Forest(y) & Forest(z)) -> (Changes(x,y,z) & Dramatically(y,z)))", "score": 0}
{"id": "eqasc_validation_1287", "prediction": "all x y z.((Wildfire(x) & Forest(y) & Forest(z) & ChangesDramaticly(x,y,z)) -> ChangesDramaticly(y,z))", "score": 0}
{"id": "eqasc_validation_1287", "prediction": "all x y z.((Wildfire(x) & Forest(y) & Forest(z)) -> ChangesDirractively(x,y,z))", "score": 0}
{"id": "eqasc_validation_1287", "prediction": "all x y z.((Wildfire(x) & Forest(y) & Forest(z)) -> Changes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1287", "prediction": "all x y.((Wildfire(x) & Forest(y)) -> ChangesDrastically(x,y))", "score": 0}
{"id": "eqasc_validation_1287", "prediction": "all x y z.((Wildfire(x) & Forest(y) & Forest(z) & ChangesDramaticly(x,y,z)) -> ChangesDramaticly(x,y))", "score": 0}
{"id": "eqasc_validation_1287", "prediction": "all x y z.((Wildfire(x) & Forest(y) & Forest(z)) -> ChangesDirtually(x,y,z))", "score": 0}
{"id": "eqasc_validation_1288", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDramaticly(x,y,z))", "score": 1}
{"id": "eqasc_validation_1288", "prediction": "all x y.((ForestFire(x) & Ecosystem(y)) -> ChangesDramaticly(x,y))", "score": 2}
{"id": "eqasc_validation_1288", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDisruptively(x,y,z))", "score": 1}
{"id": "eqasc_validation_1288", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z)) -> Changes(x,y,z))", "score": 1}
{"id": "eqasc_validation_1288", "prediction": "all x y.((ForestFire(x) & Ecosystem(y)) -> ChangesDisruptively(x,y))", "score": 1}
{"id": "eqasc_validation_1288", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDirriously(x,y,z))", "score": 1}
{"id": "eqasc_validation_1288", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDrastically(x,y,z))", "score": 1}
{"id": "eqasc_validation_1288", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDirtually(x,y,z))", "score": 1}
{"id": "eqasc_validation_1288", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z)) -> (Changes(x,y,z) & Dramatically(y,z)))", "score": 0}
{"id": "eqasc_validation_1288", "prediction": "all x y.((ForestFire(x) & Ecosystem(y)) -> ChangesDirriously(x,y))", "score": 1}
{"id": "eqasc_validation_1288", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z)) -> (Changes(x,y,z) & Dramatically(y)))", "score": 0}
{"id": "eqasc_validation_1288", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z)) -> (Changes(x,y) | Changes(x,z))))", "score": -1}
{"id": "eqasc_validation_1288", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z)) -> (Changes(x,y) & Dramatically(y,z)))", "score": 0}
{"id": "eqasc_validation_1288", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDirractively(x,y,z))", "score": 1}
{"id": "eqasc_validation_1288", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z)) -> (Changes(x,y) & Dramatically(y)))", "score": 0}
{"id": "eqasc_validation_1288", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z)) -> (Changes(x,y) & Changes(x,z)))", "score": 0}
{"id": "eqasc_validation_1289", "prediction": "all x y.((Wildfire(x) & Mexico(y)) -> (BurnsUncontrollably(x,y) & DestroysRarePlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_validation_1289", "prediction": "all x.(Wildfire(x) -> (BurnsUncontrollablyAcrossMexico(x) & DestroysRarePlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_validation_1289", "prediction": "all x y.((Wildfire(x) & Mexico(y)) -> (BurnsUncontrollably(x,y) & DestroysRarePlantsAndAnimals(x,y)))", "score": 0}
{"id": "eqasc_validation_1289", "prediction": "all x.(Wildfire(x) -> (BurnsUncontrollably(x) & DestroysRarePlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_validation_1289", "prediction": "all x y.((Wildfire(x) & Mexico(y)) -> (BurnsUncontrollably(x,y) & DisposesRarePlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_validation_1289", "prediction": "all x.(Wildfire(x) -> (BurnsUncontrollablyAcrossMexico(x) & DisposesRarePlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_validation_1289", "prediction": "all x y.((Wildfire(x) & Mexico(y)) -> (BurnsUncontrollably(x,y) & DisposesRarePlantsAndAnimals(x,y)))", "score": 0}
{"id": "eqasc_validation_1289", "prediction": "all x y.((Wildfire(x) & Mexico(y)) -> (BurnsUncontrollably(x,y) & DestroysRarePlants(x) & DestroysRareAnimals(x)))", "score": 0}
{"id": "eqasc_validation_1289", "prediction": "all x.((Wildfire(x) & BurnsUncontrollablyAcrossMexico(x)) -> (DestroysRarePlants(x) & DestroysRareAnimals(x)))", "score": 0}
{"id": "eqasc_validation_1289", "prediction": "all x y.((Wildfire(x) & Mexico(y)) -> BurnsUncontrollably(x,y))", "score": 0}
{"id": "eqasc_validation_1289", "prediction": "all x y.((Wildfire(x) & Mexico(y)) -> (BurnsUncontrollably(x) & DestroysRarePlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_validation_1289", "prediction": "all x.(Wildfire(x) -> (BurnsUncontrollablyAcross(x,Mexico) & DestroysRarePlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_validation_1289", "prediction": "all x y z.((Wildfire(x) & Mexico(y) & (Plant(z) | Animal(z))) -> BurnsUncontrollably(x,y))", "score": 0}
{"id": "eqasc_validation_1289", "prediction": "all x y.((Wildfire(x) & Mexico(y)) -> (BurnsUncontrollablyAcross(x,y) & DestroysRarePlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_validation_1289", "prediction": "all x y z.((Wildfire(x) & Mexico(y) & Plant(z) & Animal(z)) -> BurnsUncontrollably(x,y,z))", "score": 0}
{"id": "eqasc_validation_1289", "prediction": "all x y z.((Wildfire(x) & Mexico(y) & Plant(z) & Animal(z)) -> BurnsUncontrollably(x,y))", "score": 0}
{"id": "eqasc_validation_1290", "prediction": "all x y.((UncontrollableBurning(x) & Ecosystem(y)) -> ChangesDramaticly(x,y))", "score": 0}
{"id": "eqasc_validation_1290", "prediction": "all x y z.((UncontrollableBurning(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDramaticly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1290", "prediction": "all x y.((UncontrollableBurning(x) & Ecosystem(y)) -> ChangesDisruptively(x,y))", "score": 0}
{"id": "eqasc_validation_1290", "prediction": "all x y.((UncontrollableBurning(x) & Ecosystem(y)) -> ChangesDirriously(x,y))", "score": 0}
{"id": "eqasc_validation_1290", "prediction": "all x y.((UncontrollableBurning(x) & Ecosystem(y)) -> ChangesDirregularly(x,y))", "score": 0}
{"id": "eqasc_validation_1290", "prediction": "all x y.((UncontrollableBurning(x) & Ecosystem(y)) -> DramaticallyChanges(x,y))", "score": 0}
{"id": "eqasc_validation_1290", "prediction": "all x y z.((UncontrollableBurning(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDisruptively(x,y,z))", "score": 0}
{"id": "eqasc_validation_1290", "prediction": "all x y z.((UncontrollableBurning(x) & Ecosystem(y) & UncontrollableBurning(z)) -> ChangesDramaticly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1290", "prediction": "all x y.((UncontrollableBurning(x) & Ecosystem(y)) -> ChangesDramatic(x,y))", "score": 0}
{"id": "eqasc_validation_1290", "prediction": "all x y z.((UncontrollableBurning(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDirregularly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1290", "prediction": "all x y z.((UncontrollableBurning(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDirriously(x,y,z))", "score": 0}
{"id": "eqasc_validation_1290", "prediction": "all x y.((UncontrollableBurning(x) & Ecosystem(y)) -> DramaticChange(x,y))", "score": 0}
{"id": "eqasc_validation_1290", "prediction": "all x y z.((UncontrollableBurning(x) & Ecosystem(y) & UncontrollableBurning(z)) -> ChangesDramaticEcosystem(x,y,z))", "score": 0}
{"id": "eqasc_validation_1290", "prediction": "all x y.((UncontrollableBurning(x) & Ecosystem(y)) -> DramaticChanges(x,y))", "score": 0}
{"id": "eqasc_validation_1290", "prediction": "all x y z.((UncontrollableBurning(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDrastically(x,y,z))", "score": 0}
{"id": "eqasc_validation_1290", "prediction": "all x y.((UncontrollableBurning(x) & Ecosystem(y)) -> Changes(x,y))", "score": 0}
{"id": "eqasc_validation_1291", "prediction": "all x.(Biome(x) -> GlobalEcosystem(x))", "score": 0}
{"id": "eqasc_validation_1291", "prediction": "all x y.((Biome(x) & Ecosystem(y)) -> Global(x,y))", "score": 0}
{"id": "eqasc_validation_1291", "prediction": "all x y.((Biome(x) & Ecosystem(y)) -> Global(x))", "score": 0}
{"id": "eqasc_validation_1291", "prediction": "all x y.((Biome(x) & GlobalEcosystem(y)) -> Global(x,y))", "score": 0}
{"id": "eqasc_validation_1291", "prediction": "all x y.((Biome(x) & GlobalEcosystem(y)) -> GlobalEcosystem(x,y))", "score": 0}
{"id": "eqasc_validation_1291", "prediction": "all x y z.((Biome(x) & Ecosystem(y) & Global(z)) -> Global(x,y,z))", "score": 0}
{"id": "eqasc_validation_1291", "prediction": "all x.(Biome(x) -> (GlobalEcosystem(x) & GlobalEcosystem(x)))", "score": 0}
{"id": "eqasc_validation_1291", "prediction": "all x.(Biology(x) -> GlobalEcosystem(x))", "score": 0}
{"id": "eqasc_validation_1291", "prediction": "all x y.((Biome(x) & GlobalEcosystem(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_1291", "prediction": "all x y.((Biome(x) & GlobalEcosystem(y)) -> (GlobalEcosystem(x) & GlobalEcosystem(y)))", "score": 0}
{"id": "eqasc_validation_1291", "prediction": "all x y.((Biome(x) & GlobalEcosystem(y)) -> Ecosystem(x,y))", "score": 0}
{"id": "eqasc_validation_1291", "prediction": "all x y.((Biome(x) & GlobalEcosystem(y)) -> GlobalEcosystem(x))", "score": 0}
{"id": "eqasc_validation_1291", "prediction": "all x y.((Biome(x) & GlobalEcosystem(y)) -> (GlobalEcosystem(x) & GlobalEcosystem(x)))", "score": 0}
{"id": "eqasc_validation_1291", "prediction": "all x y z.((Biome(x) & Ecosystem(y) & Global(z)) -> Global(x,y))", "score": 0}
{"id": "eqasc_validation_1291", "prediction": "all x y.((Biome(x) & GlobalEcosystem(y)) -> Global(x))", "score": 0}
{"id": "eqasc_validation_1292", "prediction": "all x y.((Wildfire(x) & Biome(y)) -> CanChange(x,y))", "score": 0}
{"id": "eqasc_validation_1292", "prediction": "all x y.((Wildfire(x) & Biome(y)) -> CanChangeDramaticly(x,y))", "score": 0}
{"id": "eqasc_validation_1292", "prediction": "all x y.((Wildfire(x) & Biome(y)) -> CanCruciallyChange(x,y))", "score": 0}
{"id": "eqasc_validation_1292", "prediction": "all x y z.((Wildfire(x) & Biome(y) & Biome(z)) -> CanChange(x,y,z))", "score": 0}
{"id": "eqasc_validation_1292", "prediction": "all x y z.((Wildfire(x) & Biome(y) & Biome(z)) -> CanChangeDramaticly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1292", "prediction": "all x y z.((Wildfire(x) & Biome(y) & Biome(z)) -> CanCruciallyChange(x,y,z))", "score": 0}
{"id": "eqasc_validation_1292", "prediction": "all x y.((Wildfire(x) & Biome(y)) -> CanChang(x,y))", "score": 0}
{"id": "eqasc_validation_1292", "prediction": "all x y z.((Wildfire(x) & Biome(y) & Biome(z) & CanChange(x,y,z)) -> CanChange(x,y,z))", "score": 0}
{"id": "eqasc_validation_1292", "prediction": "all x y.((Wildfire(x) & Biome(y)) -> CanChallenge(x,y))", "score": 0}
{"id": "eqasc_validation_1292", "prediction": "all x y.((Wildfire(x) & Biome(y)) -> CanChangeDirregularly(x,y))", "score": 0}
{"id": "eqasc_validation_1292", "prediction": "all x y.((Wildfire(x) & Biome(y) & CanChange(x,y)) -> CanChange(x,y))", "score": 0}
{"id": "eqasc_validation_1292", "prediction": "all x y.((Wildfire(x) & Biome(y)) -> ChangesDramaticly(x,y))", "score": 0}
{"id": "eqasc_validation_1292", "prediction": "all x y.((Wildfire(x) & Biome(y)) -> CanChangDramaticly(x,y))", "score": 0}
{"id": "eqasc_validation_1292", "prediction": "all x y.((Wildfire(x) & Biome(y)) -> CanDramaticChange(x,y))", "score": 0}
{"id": "eqasc_validation_1292", "prediction": "all x y z.((Wildfire(x) & Biome(y) & Biome(z)) -> CanChang(x,y,z))", "score": 0}
{"id": "eqasc_validation_1292", "prediction": "all x y.((Wildfire(x) & Biome(y)) -> CanCrypticallyChange(x,y))", "score": 0}
{"id": "eqasc_validation_1293", "prediction": "all x y.((Wildfire(x) & West(y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1293", "prediction": "all x y.((Wildfire(x) & West(y)) -> Scorches(x,y))", "score": 0}
{"id": "eqasc_validation_1293", "prediction": "all x.(Wildfire(x) -> ScratchesWest(x))", "score": 0}
{"id": "eqasc_validation_1293", "prediction": "all x y.((Wildfire(x) & West(y)) -> scorches(x,y))", "score": 0}
{"id": "eqasc_validation_1293", "prediction": "all x y.((Wildfire(x) & West(y)) -> Scorch(x,y))", "score": 0}
{"id": "eqasc_validation_1293", "prediction": "all x y z.((Wildfire(x) & West(y) & West(z)) -> Scratches(x,y,z))", "score": 0}
{"id": "eqasc_validation_1293", "prediction": "all x y.((Wildfire(x) & West(y)) -> Scorpion(x,y))", "score": 0}
{"id": "eqasc_validation_1293", "prediction": "all x y.((Wildfire(x) & West(y)) -> scorch(x,y))", "score": 0}
{"id": "eqasc_validation_1293", "prediction": "all x y z.((Wildfire(x) & West(y) & West(z)) -> Scorches(x,y,z))", "score": 0}
{"id": "eqasc_validation_1293", "prediction": "all x.(Wildfire(x) -> ScorpionsWest(x))", "score": 0}
{"id": "eqasc_validation_1293", "prediction": "all x y.((Wildfire(x) & West(y)) -> Scours(x,y))", "score": 0}
{"id": "eqasc_validation_1293", "prediction": "all x y z.((Wildfire(x) & West(y) & West(z)) -> Scorch(x,y,z))", "score": 0}
{"id": "eqasc_validation_1293", "prediction": "all x.((Wildfire(x) & West(y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1293", "prediction": "all x y.((Wildfire(x) & West(y)) -> Scrashes(x,y))", "score": 0}
{"id": "eqasc_validation_1293", "prediction": "all x.(Wildfire(x) -> ScorchesWest(x))", "score": 0}
{"id": "eqasc_validation_1293", "prediction": "all x y.((Wildfire(x) & West(y)) -> Scorpions(x,y))", "score": 0}
{"id": "eqasc_validation_1294", "prediction": "all x y.((West(x) & Ecosystem(y)) -> ExperiencesDrasticChanges(x,y))", "score": 0}
{"id": "eqasc_validation_1294", "prediction": "all x y.((West(x) & Ecosystem(y)) -> ExperiencesDramaticChanges(x,y))", "score": 0}
{"id": "eqasc_validation_1294", "prediction": "all x y.((West(x) & West(y)) -> ExperiencesDramaticChangesToEcosystem(x,y))", "score": 0}
{"id": "eqasc_validation_1294", "prediction": "all x y.((West(x) & Ecosystem(y)) -> DramaticChanges(x,y))", "score": 0}
{"id": "eqasc_validation_1294", "prediction": "all x y.((West(x) & West(y)) -> ExperiencesDrasticChangesToEcosystem(x,y))", "score": 0}
{"id": "eqasc_validation_1294", "prediction": "all x y.((West(x) & Ecosystem(y)) -> ExperiencesDistantChanges(x,y))", "score": 0}
{"id": "eqasc_validation_1294", "prediction": "all x.((West(x) & DramaticChangesToEcosystem(x)) -> Experiences(x,West))", "score": 0}
{"id": "eqasc_validation_1294", "prediction": "all x y z.((West(x) & Ecosystem(y) & Environment(z)) -> ExperiencesDramaticChanges(x,y,z))", "score": 0}
{"id": "eqasc_validation_1294", "prediction": "all x y z.((West(x) & Ecosystem(y) & Environment(z)) -> ExperiencesDrasticChanges(x,y,z))", "score": 0}
{"id": "eqasc_validation_1294", "prediction": "all x y.((West(x) & Ecosystem(y)) -> SignificantChanges(x,y))", "score": 0}
{"id": "eqasc_validation_1294", "prediction": "all x y z.((West(x) & Ecosystem(y) & West(z)) -> ExperiencesDramaticChanges(x,y,z))", "score": 0}
{"id": "eqasc_validation_1294", "prediction": "all x y z.((West(x) & Ecosystem(y) & West(z)) -> ExperiencesDrasticChanges(x,y,z))", "score": 0}
{"id": "eqasc_validation_1294", "prediction": "all x.((West(x) & DramaticChangesToEcosystem(x)) -> Experiences(x))", "score": 0}
{"id": "eqasc_validation_1294", "prediction": "all x.((West(x) & DramaticChangesToEcosystem(x)) -> Experiences(x,y))", "score": 0}
{"id": "eqasc_validation_1294", "prediction": "all x y z.((West(x) & Ecosystem(y) & WestEcosystem(z)) -> ExperiencesDramaticChanges(x,y,z))", "score": 0}
{"id": "eqasc_validation_1294", "prediction": "all x y z.((West(x) & Ecosystem(y) & WestEcosystem(z)) -> ExperiencesDrasticChanges(x,y,z))", "score": 0}
{"id": "eqasc_validation_1295", "prediction": "all x.(Seeing(x) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1295", "prediction": "all x.(SeeingRequiresLight(x) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1295", "prediction": "all x y.((Seeing(x) & Light(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1295", "prediction": "all x y.((Seen(x) & Light(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1295", "prediction": "all x.(Seen(x) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1295", "prediction": "all x y z.((Sighting(x) & Light(y) & Light(z)) -> Requires(x,y,z))", "score": 0}
{"id": "eqasc_validation_1295", "prediction": "all x y.((Sighting(x) & Light(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1295", "prediction": "all x y z.((Seeing(x) & Light(y) & Light(z)) -> Requires(x,y,z))", "score": 0}
{"id": "eqasc_validation_1295", "prediction": "all x.(SeeingRequiresLight(x) -> SeeingRequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1295", "prediction": "all x y z.((Sighting(x) & Light(y) & Light(z)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1295", "prediction": "all x.(Seasuring(x) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1295", "prediction": "all x.(Seeing(x) -> LightRequires(x))", "score": 0}
{"id": "eqasc_validation_1295", "prediction": "all x y z.((Seeing(x) & Light(y) & Light(z)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1296", "prediction": "all x.(LooksAroundEveryDay(x) -> SeesColor(x))", "score": 0}
{"id": "eqasc_validation_1296", "prediction": "all x.(LooksAroundEveryday(x) -> SeesColor(x))", "score": 0}
{"id": "eqasc_validation_1296", "prediction": "all x.((Person(x) & LooksAroundEveryday(x)) -> SeesColor(x))", "score": 0}
{"id": "eqasc_validation_1296", "prediction": "all x.((Person(x) & LooksAroundEveryDay(x)) -> SeesColor(x))", "score": 0}
{"id": "eqasc_validation_1296", "prediction": "all x.(LooksAround(x) -> SeesColor(x))", "score": 0}
{"id": "eqasc_validation_1296", "prediction": "all x y.((Person(x) & LooksAroundEveryday(x)) -> SeesColor(x))", "score": 0}
{"id": "eqasc_validation_1296", "prediction": "all x y.((Person(x) & LooksAroundEveryDay(x)) -> SeesColor(x))", "score": 0}
{"id": "eqasc_validation_1296", "prediction": "all x y.((Person(x) & LooksAround(x,y)) -> SeesColor(x))", "score": 0}
{"id": "eqasc_validation_1296", "prediction": "all x y.((Person(x) & LooksAroundEveryday(x) & Color(y)) -> Sees(x,y))", "score": 0}
{"id": "eqasc_validation_1296", "prediction": "all x y.((Person(x) & LooksAroundEveryDay(x,y)) -> SeesColor(x))", "score": 0}
{"id": "eqasc_validation_1296", "prediction": "all x y.((Person(x) & LooksAroundEveryday(x,y)) -> SeesColor(x))", "score": 0}
{"id": "eqasc_validation_1296", "prediction": "all x.((People(x) & LooksAroundEveryday(x)) -> SeesColor(x))", "score": 0}
{"id": "eqasc_validation_1296", "prediction": "all x y.((Person(x) & LooksAroundEveryDay(x) & Color(y)) -> Sees(x,y))", "score": 0}
{"id": "eqasc_validation_1296", "prediction": "all x.((People(x) & LooksAroundEveryDay(x)) -> SeesColor(x))", "score": 0}
{"id": "eqasc_validation_1296", "prediction": "all x y z.((Person(x) & LooksAroundEveryday(x) & Color(y)) -> Sees(x,y))", "score": 0}
{"id": "eqasc_validation_1296", "prediction": "all x y.((Person(x) & LooksAround(x,y) & Everyday(y)) -> SeesColor(x))", "score": 0}
{"id": "eqasc_validation_1297", "prediction": "all x.(LooksAroundEveryDay(x) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1297", "prediction": "all x.((Person(x) & LooksAroundEveryDay(x)) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1297", "prediction": "all x.(LooksAround(x) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1297", "prediction": "all x.((Person(x) & LooksAroundEveryday(x)) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1297", "prediction": "all x.(LooksAroundEveryday(x) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1297", "prediction": "all x y.((Person(x) & LooksAround(x,y)) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1297", "prediction": "all x.((People(x) & LooksAroundEveryDay(x)) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1297", "prediction": "all x y.((Person(x) & LooksAroundEveryDay(x)) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1297", "prediction": "all x.((People(x) & LooksAroundEveryday(x)) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1297", "prediction": "all x y.((Person(x) & LooksAroundEveryday(x)) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1297", "prediction": "all x y.((Person(x) & LooksAroundEveryDay(x,y)) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1297", "prediction": "all x y.((Person(x) & LooksAroundEveryday(x,y)) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1297", "prediction": "all x y.((Person(x) & LooksAroundEveryDay(x) & RequiresLight(x)) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1297", "prediction": "all x y.((Person(x) & LooksAroundEveryday(x) & RequiresLight(x)) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1297", "prediction": "all x y.((Person(x) & LooksAroundEveryDay(x) & RequiresLight(y)) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1297", "prediction": "all x y.((Person(x) & LooksAroundEveryday(x) & RequiresLight(y)) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1298", "prediction": "all x.(Light(x) -> EssentialToVision(x))", "score": 0}
{"id": "eqasc_validation_1298", "prediction": "all x y.((Light(x) & Vision(y)) -> EssentialTo(x,y))", "score": 0}
{"id": "eqasc_validation_1298", "prediction": "all x.((Light(x) & EssentialToVision(x)) -> EssentialToVision(x))", "score": 0}
{"id": "eqasc_validation_1298", "prediction": "all x y z.((Light(x) & Vision(y) & Vision(z)) -> EssentialTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_1298", "prediction": "all x y.((Light(x) & Vision(y)) -> Essential(x,y))", "score": 0}
{"id": "eqasc_validation_1298", "prediction": "all x.((Light(x) & Vision(y)) -> EssentialTo(x,y))", "score": 0}
{"id": "eqasc_validation_1298", "prediction": "all x.((Light(x) & Vision(x)) -> EssentialTo(x,y))", "score": 0}
{"id": "eqasc_validation_1298", "prediction": "exists x.(Light(x) & EssentialToVision(x))", "score": 0}
{"id": "eqasc_validation_1298", "prediction": "All x.(Light(x) -> EssentialToVision(x))", "score": -1}
{"id": "eqasc_validation_1298", "prediction": "all x y.((Light(x) & Vision(y) & EssentialTo(x,y)) -> EssentialTo(x,y))", "score": 0}
{"id": "eqasc_validation_1298", "prediction": "all x y.((Light(x) & Vision(y)) -> EssentialFor(x,y))", "score": 0}
{"id": "eqasc_validation_1298", "prediction": "all x.((Light(x) & Vision(x)) -> EssentialTo(x))", "score": 0}
{"id": "eqasc_validation_1298", "prediction": "all x.(Light(x) -> EssentialToVisual(x))", "score": 0}
{"id": "eqasc_validation_1298", "prediction": "all x.(Light(x) -> EssentialToVisibility(x))", "score": 0}
{"id": "eqasc_validation_1298", "prediction": "all x.(Light(x) -> EssentialForVision(x))", "score": 0}
{"id": "eqasc_validation_1298", "prediction": "all x y z.((Light(x) & Vision(y) & Vision(z)) -> EssentialTo(x,y))", "score": 0}
{"id": "eqasc_validation_1299", "prediction": "all x y.((Seen(x) & Vision(y)) -> Same(x,y))", "score": 0}
{"id": "eqasc_validation_1299", "prediction": "all x y z.((Seeing(x) & Vision(y) & Vision(z)) -> (SameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSame", "score": -1}
{"id": "eqasc_validation_1299", "prediction": "all x y z.((Seeing(x) & Vision(y) & Vision(z)) -> (SameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameS", "score": -1}
{"id": "eqasc_validation_1299", "prediction": "all x y.((Seeing(x) & Vision(y)) -> Same(x,y))", "score": 0}
{"id": "eqasc_validation_1299", "prediction": "all x y z.((Sighting(x) & Vision(y) & Vision(z)) -> (SameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSam", "score": -1}
{"id": "eqasc_validation_1299", "prediction": "all x y z.((Seen(x) & Vision(y) & Vision(z)) -> (SameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSimulSimulSimulSimulSimulSimulSimulSimulSimulSimul", "score": -1}
{"id": "eqasc_validation_1299", "prediction": "all x y z.((Seeing(x) & Vision(y) & Vision(z)) -> (SameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSimulSimulSimulSimulSimulS", "score": -1}
{"id": "eqasc_validation_1299", "prediction": "all x y z.((Sighting(x) & Vision(y) & Vision(z)) -> (SameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSa", "score": -1}
{"id": "eqasc_validation_1299", "prediction": "all x y z.((Sighting(x) & Vision(y) & Vision(z)) -> (SameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSo", "score": -1}
{"id": "eqasc_validation_1299", "prediction": "all x y z.((Sighting(x) & Vision(y) & Vision(z)) -> (SameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSum", "score": -1}
{"id": "eqasc_validation_1299", "prediction": "all x y z.((Seeing(x) & Vision(y) & Vision(z)) -> (SameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSee", "score": -1}
{"id": "eqasc_validation_1299", "prediction": "all x y z.((Seeing(x) & Vision(y) & Vision(z)) -> (SameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSallS", "score": -1}
{"id": "eqasc_validation_1299", "prediction": "all x y z.((Sighting(x) & Vision(y) & Vision(z)) -> (SameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSall", "score": -1}
{"id": "eqasc_validation_1299", "prediction": "all x y z.((Seeing(x) & Vision(y) & Vision(z)) -> (SameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameC", "score": -1}
{"id": "eqasc_validation_1299", "prediction": "all x y z.((Seen(x) & Vision(y) & Vision(z)) -> (SameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSameSam", "score": -1}
{"id": "eqasc_validation_1300", "prediction": "all x.(Light(x) -> exists y.(Radiation(y) & EyesCanSee(x,y)))", "score": 0}
{"id": "eqasc_validation_1300", "prediction": "all x.(Light(x) -> (OneFormOfRadiation(x) & EyesCanSee(x)))", "score": 0}
{"id": "eqasc_validation_1300", "prediction": "all x.(Light(x) -> exists y.(Rayon(y) & EyesCanSee(x,y)))", "score": 0}
{"id": "eqasc_validation_1300", "prediction": "all x.(Light(x) -> exists y.(Radiation(y) & EyesCanSee(x,y))))", "score": -1}
{"id": "eqasc_validation_1300", "prediction": "all x y.((Light(x) & Eyes(y)) -> CanSee(x,y))", "score": 0}
{"id": "eqasc_validation_1300", "prediction": "all x.(Light(x) -> (Radiation(x) & EyesCanSee(x)))", "score": 0}
{"id": "eqasc_validation_1300", "prediction": "all x.(Light(x) -> OneFormOfRadiation(x))", "score": 0}
{"id": "eqasc_validation_1300", "prediction": "all x y.((Light(x) & Eye(y)) -> CanSee(x,y))", "score": 0}
{"id": "eqasc_validation_1300", "prediction": "all x.(Light(x) -> exists y.(Rayon(y) & EyesCanSee(x,y))))", "score": -1}
{"id": "eqasc_validation_1300", "prediction": "all x y.((Light(x) & EyesCanSee(y)) -> Radiation(x,y))", "score": 0}
{"id": "eqasc_validation_1300", "prediction": "all x y z.((Light(x) & Radiation(y) & Eyes(z)) -> CanSee(x,y,z))", "score": 0}
{"id": "eqasc_validation_1300", "prediction": "all x.(Light(x) -> (OneRadiation(x) & EyesCanSee(x)))", "score": 0}
{"id": "eqasc_validation_1300", "prediction": "all x y z.((Light(x) & Radiation(y) & Eye(z)) -> CanSee(x,y,z))", "score": 0}
{"id": "eqasc_validation_1300", "prediction": "all x.(Light(x) -> exists y.(Radiation(y) & EyesCanSelect(x,y)))", "score": 0}
{"id": "eqasc_validation_1300", "prediction": "all x.(Light(x) -> exists y.(Raynament(y) & EyesCanSee(x,y)))", "score": 0}
{"id": "eqasc_validation_1301", "prediction": "all x.(Eyes(x) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1301", "prediction": "all x y.((Eyes(x) & Light(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1301", "prediction": "all x.((Eyes(x) & RequiresLight(x)) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1301", "prediction": "all x y.((Eye(x) & Eye(y)) -> RequiresLight(x,y))", "score": 0}
{"id": "eqasc_validation_1301", "prediction": "all x y.((Eyes(x) & Eyes(y)) -> RequiresLight(x,y))", "score": 0}
{"id": "eqasc_validation_1301", "prediction": "all x y z.((Eyes(x) & Light(y) & Eyes(z)) -> Requires(x,y,z))", "score": 0}
{"id": "eqasc_validation_1301", "prediction": "all x.((Eyes(x) & RequiresLight(x)) -> EyesRequireLight(x))", "score": 0}
{"id": "eqasc_validation_1301", "prediction": "all x.(Eye(x) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1301", "prediction": "all x.((Eyes(x) & RequireLight(x)) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1301", "prediction": "all x y z.((Eyes(x) & Light(y) & Eye(z)) -> Requires(x,y,z))", "score": 0}
{"id": "eqasc_validation_1301", "prediction": "all x.(Eyes(x) -> RequireLight(x))", "score": 0}
{"id": "eqasc_validation_1301", "prediction": "all x.((Eye(x) & Eyes(x)) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1301", "prediction": "all x.(EyesRequireLight(x) -> EyesRequireLight(x))", "score": 0}
{"id": "eqasc_validation_1301", "prediction": "all x.((Eyes(x) & RequireLight(x)) -> EyesRequireLight(x))", "score": 0}
{"id": "eqasc_validation_1301", "prediction": "all x.((Eye(x) & Eye(x)) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1301", "prediction": "all x y z.((Eyes(x) & Light(y) & Eyes(z)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1302", "prediction": "all x.(Sight(x) -> (AbilityToSee(x) & EyeResponseToLight(x)))", "score": 0}
{"id": "eqasc_validation_1302", "prediction": "all x.(Sight(x) -> (AbilityToSee(x) & EyeResponsesToLight(x)))", "score": 0}
{"id": "eqasc_validation_1302", "prediction": "all x y.((Sight(x) & Eye(y)) -> (AbilityToSee(x) & ResponseToLight(y)))", "score": 0}
{"id": "eqasc_validation_1302", "prediction": "all x.(Sight(x) -> (AbilityToSee(x) & ResponseToLight(x)))", "score": 0}
{"id": "eqasc_validation_1302", "prediction": "all x y z.((Sight(x) & Eye(y) & Light(z)) -> (AbilityToSee(x) & ResponseToShining(y,z)))", "score": 0}
{"id": "eqasc_validation_1302", "prediction": "all x.(Sight(x) -> (AbilitiesToSee(x) & EyeResponsesToLight(x)))", "score": 0}
{"id": "eqasc_validation_1302", "prediction": "all x y z.((Sight(x) & Eye(y) & Light(z)) -> (AbilityToSee(x,y) & ResponseToShining(y,z)))", "score": 0}
{"id": "eqasc_validation_1302", "prediction": "all x y z.((Sight(x) & Eye(y) & Light(z)) -> (AbilityToSee(x) & ResponseToShiningInto(y,z)))", "score": 0}
{"id": "eqasc_validation_1302", "prediction": "all x y.((Sight(x) & Eye(y)) -> (AbilityToSee(x) & ResponseToLightShining(y)))", "score": 0}
{"id": "eqasc_validation_1302", "prediction": "all x y.((Sight(x) & Eye(y)) -> (AbilityToSee(x,y) & ResponseToLight(y)))", "score": 0}
{"id": "eqasc_validation_1302", "prediction": "all x y.((Sight(x) & Eye(y)) -> (AbilityToSee(x,y) & ResponseToLight(y,x)))", "score": 0}
{"id": "eqasc_validation_1302", "prediction": "all x.(Sight(x) -> (AbilityToSee(x) & ResponsesToLight(x)))", "score": 0}
{"id": "eqasc_validation_1302", "prediction": "all x y z.((Sight(x) & Eye(y) & Light(z)) -> (AbilityToSee(x,y) & ResponseToShiningInto(y,z)))", "score": 0}
{"id": "eqasc_validation_1302", "prediction": "all x y z.((Sight(x) & Eye(y) & Light(z)) -> (AbilityToSee(x) & ResponseToLight(y,z)))", "score": 0}
{"id": "eqasc_validation_1303", "prediction": "all x y.((Eye(x) & Light(y)) -> RequiresShiningInto(x,y))", "score": 0}
{"id": "eqasc_validation_1303", "prediction": "all x y.((Eyes(x) & Light(y)) -> RequiresShiningInto(x,y))", "score": 0}
{"id": "eqasc_validation_1303", "prediction": "all x y.((Eye(x) & Light(y) & ShinesInto(x,y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1303", "prediction": "all x y.((Eye(x) & Light(y) & ShiningInto(x,y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1303", "prediction": "all x y.((Eye(x) & Light(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1303", "prediction": "all x.(Eyes(x) -> RequiresLightShiningInto(x,y))", "score": 0}
{"id": "eqasc_validation_1303", "prediction": "all x y.((Eyes(x) & Light(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1303", "prediction": "all x y.((Eyes(x) & Light(y) & ShinesInto(x,y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1303", "prediction": "all x y z.((Eyes(x) & Light(y) & Light(z)) -> RequiresShiningInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_1303", "prediction": "all x y z.((Eye(x) & Light(y) & Light(z)) -> RequiresShiningInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_1303", "prediction": "all x.(Eyes(x) -> (RequiresLight(x) & ShinesInto(x)))", "score": 0}
{"id": "eqasc_validation_1303", "prediction": "all x.(Eyes(x) -> RequiresLightShining(x))", "score": 0}
{"id": "eqasc_validation_1303", "prediction": "all x.(Eye(x) -> (RequiresLight(x) & ShinesInto(x)))", "score": 0}
{"id": "eqasc_validation_1303", "prediction": "all x y.((Eye(x) & Eye(y)) -> RequiresLightShiningInto(x,y))", "score": 0}
{"id": "eqasc_validation_1303", "prediction": "all x y z.((Eyes(x) & Light(y) & Light(z)) -> Requires(x,y,z))", "score": 0}
{"id": "eqasc_validation_1303", "prediction": "all x y z.((Eye(x) & Light(y) & Light(z)) -> Requires(x,y,z))", "score": 0}
{"id": "eqasc_validation_1304", "prediction": "all x.(Human(x) -> SeesWithEyes(x))", "score": 0}
{"id": "eqasc_validation_1304", "prediction": "all x y.((Human(x) & Eye(y)) -> SeesWith(x,y))", "score": 0}
{"id": "eqasc_validation_1304", "prediction": "all x y.((Human(x) & Eyes(y)) -> SeesWith(x,y))", "score": 0}
{"id": "eqasc_validation_1304", "prediction": "all x y z.((Human(x) & Eye(y) & Eye(z)) -> SeesWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1304", "prediction": "all x.(Human(x) -> SeesWithOurEyes(x))", "score": 0}
{"id": "eqasc_validation_1304", "prediction": "all x y z.((Human(x) & Eyes(y) & Eyes(z)) -> SeesWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1304", "prediction": "all x y z.((Human(x) & Eyes(y) & Eye(z)) -> SeesWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1304", "prediction": "all x y z.((Human(x) & Eye(y) & Eye(z)) -> SeesWith(x,y))", "score": 0}
{"id": "eqasc_validation_1304", "prediction": "all x y z.((Human(x) & Eyes(y) & Eyes(z)) -> SeesWith(x,y))", "score": 0}
{"id": "eqasc_validation_1304", "prediction": "all x.(Human(x) -> (SeesWithEyes(x) | SeesWithEyes(x)))", "score": 0}
{"id": "eqasc_validation_1304", "prediction": "all x.(Human(x) -> SeesWithOwns(x))", "score": 0}
{"id": "eqasc_validation_1304", "prediction": "all x y.((Human(x) & Eye(y)) -> SeeWith(x,y))", "score": 0}
{"id": "eqasc_validation_1304", "prediction": "all x.(Human(x) -> (SeesWithEyes(x) & SeesWithEyes(x)))", "score": 0}
{"id": "eqasc_validation_1304", "prediction": "all x y z.((Human(x) & Eye(y) & Eye(z)) -> SeeWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1304", "prediction": "all x y.((Human(x) & Eye(y)) -> See(x,y))", "score": 0}
{"id": "eqasc_validation_1305", "prediction": "all x.(Vision(x) -> CanSee(x))", "score": 0}
{"id": "eqasc_validation_1305", "prediction": "all x.(Vision(x) -> AbilityToSee(x))", "score": 0}
{"id": "eqasc_validation_1305", "prediction": "all x y.((Vision(x) & Vision(y)) -> CanSee(x,y))", "score": 0}
{"id": "eqasc_validation_1305", "prediction": "all x.(Vision(x) -> See(x))", "score": 0}
{"id": "eqasc_validation_1305", "prediction": "all x y.((Vision(x) & Eye(y)) -> CanSee(x,y))", "score": 0}
{"id": "eqasc_validation_1305", "prediction": "All x.(Vision(x) -> CanSee(x))", "score": -1}
{"id": "eqasc_validation_1305", "prediction": "all x.(Vision(x) -> AffordsToSee(x))", "score": 0}
{"id": "eqasc_validation_1305", "prediction": "all x.(Visual(x) -> CanSee(x))", "score": 0}
{"id": "eqasc_validation_1305", "prediction": "all x.(Vision(x) -> CapableToSee(x))", "score": 0}
{"id": "eqasc_validation_1305", "prediction": "all x y.((Vision(x) & Vision(y)) -> AbilityToSee(x,y))", "score": 0}
{"id": "eqasc_validation_1305", "prediction": "all x.(Visual(x) -> AbilityToSee(x))", "score": 0}
{"id": "eqasc_validation_1305", "prediction": "all x y.((Vision(x) & Eye(y)) -> AbilityToSee(x,y))", "score": 0}
{"id": "eqasc_validation_1305", "prediction": "all x.(Vision(x) -> AimsToSee(x))", "score": 0}
{"id": "eqasc_validation_1305", "prediction": "all x.(Vision(x) -> WeCanSee(x))", "score": 0}
{"id": "eqasc_validation_1306", "prediction": "all x y.((Light(x) & Vision(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1306", "prediction": "all x y z.((Light(x) & Vision(y) & Vision(z)) -> Requires(x,y,z))", "score": 0}
{"id": "eqasc_validation_1306", "prediction": "all x y.((Light(x) & Vision(y)) -> RequiredFor(x,y))", "score": 0}
{"id": "eqasc_validation_1306", "prediction": "all x.((Light(x) & Vision(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1306", "prediction": "all x y.((Light(x) & Vision(y) & Requires(x,y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1306", "prediction": "all x y.((Light(x) & Vision(y) & RequiredFor(x,y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1306", "prediction": "all x y z.((Light(x) & Vision(y) & Vision(z)) -> RequiredFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1306", "prediction": "all x y.((Light(x) & Vision(y)) -> RequiresFor(x,y))", "score": 0}
{"id": "eqasc_validation_1306", "prediction": "all x y z.((Light(x) & Vision(y) & Vision(z)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1306", "prediction": "all x y z.((Light(x) & Vision(y) & Vision(z)) -> RequiresFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1306", "prediction": "all x.((Light(x) & Vision(x)) -> Requires(x,Light))", "score": 0}
{"id": "eqasc_validation_1306", "prediction": "all x y z.((Light(x) & Vision(y) & Vision(z)) -> LightRequiredFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1306", "prediction": "all x y z.((Light(x) & Vision(y) & Vision(z) & Requires(x,y)) -> Requires(x,z))", "score": 0}
{"id": "eqasc_validation_1306", "prediction": "all x.((Light(x) & Vision(x)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1306", "prediction": "all x y z.((Light(x) & Vision(y) & Vision(z) & RequiredFor(x,y,z)) -> Requires(x,y,z))", "score": 0}
{"id": "eqasc_validation_1306", "prediction": "all x.((Light(x) & Vision(x)) -> Requires(x))", "score": 0}
{"id": "eqasc_validation_1307", "prediction": "all x y.((Pupil(x) & Light(y)) -> ComesThrough(x,y))", "score": 0}
{"id": "eqasc_validation_1307", "prediction": "all x.(Light(x) -> ComesThroughPupil(x))", "score": 0}
{"id": "eqasc_validation_1307", "prediction": "all x y z.((Pupil(x) & Light(y) & Pupil(z)) -> ComesThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_1307", "prediction": "all x y.((Pupil(x) & Pupil(y)) -> LightComesThrough(x,y))", "score": 0}
{"id": "eqasc_validation_1307", "prediction": "all x y z.((Pupil(x) & Light(y) & Pupil(z)) -> ComesThrough(y,z))", "score": 0}
{"id": "eqasc_validation_1307", "prediction": "all x y z.((Light(x) & Pupil(y) & Pupil(z)) -> ComesThrough(x,y,z))", "score": 0}
{"id": "eqasc_validation_1307", "prediction": "all x y.((Pupil(x) & Pupil(y)) -> ComesThrough(x,y))", "score": 0}
{"id": "eqasc_validation_1307", "prediction": "all x y.((Pupil(x) & Light(y)) -> ComesThrough(y,x))", "score": 0}
{"id": "eqasc_validation_1307", "prediction": "all x y.((Light(x) & Pupil(y)) -> ComesThrough(x,y))", "score": 0}
{"id": "eqasc_validation_1307", "prediction": "all x y.((Pupil(x) & Pupil(y)) -> LightComes(x,y))", "score": 0}
{"id": "eqasc_validation_1307", "prediction": "all x.((Pupil(x) & Light(x)) -> ComesThrough(x,Pupil))", "score": 0}
{"id": "eqasc_validation_1307", "prediction": "all x y.((Pupil(x) & Light(y)) -> ComesFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1307", "prediction": "all x y.((Pupil(x) & Light(y)) -> Comes(x,y))", "score": 0}
{"id": "eqasc_validation_1307", "prediction": "all x y.((Pupil(x) & Light(y) & ComesThrough(x,y)) -> ComesThrough(x,y))", "score": 0}
{"id": "eqasc_validation_1307", "prediction": "all x y z.((Pupil(x) & Light(y) & Pupil(z)) -> ComesThrough(y,x,z))", "score": 0}
{"id": "eqasc_validation_1307", "prediction": "all x y.((Pupil(x) & Light(y) & ComesThrough(x,y)) -> LightComesThrough(x,y))", "score": 0}
{"id": "eqasc_validation_1308", "prediction": "all x y.((Seeing(x) & Pupil(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1308", "prediction": "all x y z.((Seeing(x) & Pupil(y) & Pupil(z)) -> Requires(x,y,z))", "score": 0}
{"id": "eqasc_validation_1308", "prediction": "all x y z.((Sighting(x) & Pupil(y) & Pupil(z)) -> Requires(x,y,z))", "score": 0}
{"id": "eqasc_validation_1308", "prediction": "all x y.((Seen(x) & Pupil(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1308", "prediction": "all x.(SeeingRequiresPupils(x) -> RequiresPupils(x))", "score": 0}
{"id": "eqasc_validation_1308", "prediction": "all x y.((Sighting(x) & Pupil(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1308", "prediction": "all x y z.((Seen(x) & Pupil(y) & Pupil(z)) -> Requires(x,y,z))", "score": 0}
{"id": "eqasc_validation_1308", "prediction": "all x y.((Saying(x) & Pupil(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1308", "prediction": "all x y z.((Saying(x) & Pupil(y) & Pupil(z)) -> Requires(x,y,z))", "score": 0}
{"id": "eqasc_validation_1308", "prediction": "all x.(SeeingRequiresPupils(x) -> SeesRequiresPupils(x))", "score": 0}
{"id": "eqasc_validation_1308", "prediction": "all x y z.((Sighting(x) & Pupil(y) & Pupil(z)) -> SeesRequires(x,y,z))", "score": 0}
{"id": "eqasc_validation_1308", "prediction": "all x y z.((Seeing(x) & Pupil(y) & Pupil(z)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1308", "prediction": "all x y z.((Sighting(x) & Pupil(y) & Pupil(z)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1308", "prediction": "all x y.((Seen(x) & Pupils(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1309", "prediction": "all x y.((MeterStick(x) & MeasureDistance(y)) -> UsedToMeasureDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1309", "prediction": "all x y z.((MeterStick(x) & Distance(y) & Distance(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1309", "prediction": "all x.(MeterStick(x) -> MeasuresDistance(x))", "score": 0}
{"id": "eqasc_validation_1309", "prediction": "all x y.((MeterStick(x) & Meter(y)) -> MeasuresDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1309", "prediction": "all x y z.((MeterStick(x) & Distance(y) & Distance(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1309", "prediction": "all x y.((MeterStick(x) & Distance(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1309", "prediction": "all x y.((MeterStick(x) & MeasuresDistance(y)) -> UsedToMeasureDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1309", "prediction": "all x y.((MeterStick(x) & MeasuresDistance(x,y)) -> UsedToMeasureDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1309", "prediction": "all x.(MeterStick(x) -> UsedToMeasureDistance(x))", "score": 0}
{"id": "eqasc_validation_1309", "prediction": "all x y.((MeterStick(x) & Meter(y)) -> UsedToMeasureDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1309", "prediction": "all x y.((MeterStick(x) & MeterStick(y)) -> MeasuresDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1309", "prediction": "all x y.((MeterStick(x) & MeasuredDistance(y)) -> UsedToMeasureDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1309", "prediction": "all x.((MeterStick(x) & MeasureDistance(x)) -> UsedToMeasureDistance(x))", "score": 0}
{"id": "eqasc_validation_1309", "prediction": "all x y.((MeterStick(x) & Distance(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1309", "prediction": "all x y.((MeterStick(x) & Distance(y)) -> MeasuresDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1309", "prediction": "all x y z.((MeterStick(x) & Distance(y) & Distance(z)) -> Measured(x,y,z))", "score": 0}
{"id": "eqasc_validation_1310", "prediction": "all x.(Spacing(x) -> (CenterMeasurements(x) | DistanceBetweenPlants(x)))", "score": 0}
{"id": "eqasc_validation_1310", "prediction": "all x y.((Spacing(x) & Plant(y)) -> (CenterMeasurements(x,y) | DistanceBetween(x,y)))", "score": 0}
{"id": "eqasc_validation_1310", "prediction": "all x.(Spacing(x) -> (CenterMeasurements(x) | DistanceBetweenPlant(x)))", "score": 0}
{"id": "eqasc_validation_1310", "prediction": "all x y.((Spacing(x) & Plant(y)) -> (CenterMeasurements(x,y) | DistanceBetweenPlants(x,y)))", "score": 0}
{"id": "eqasc_validation_1310", "prediction": "all x y.((Spacing(x) & Plant(y)) -> (CenterMeasurement(x,y) | DistanceBetween(x,y)))", "score": 0}
{"id": "eqasc_validation_1310", "prediction": "all x y.((Spacing(x) & Plant(y)) -> (CenterMeasurements(x) | DistanceBetween(x,y)))", "score": 0}
{"id": "eqasc_validation_1310", "prediction": "all x y.((Spacing(x) & Plant(y)) -> (CenterMeasurements(x,y) | Distance(x,y)))", "score": 0}
{"id": "eqasc_validation_1310", "prediction": "all x y.((Spacing(x) & Plant(y)) -> (CenterMeasurements(x,y) | DistanceBetweenPlant(x,y)))", "score": 0}
{"id": "eqasc_validation_1310", "prediction": "all x.(Spacing(x) -> (CenterMeasurement(x) | DistanceBetweenPlants(x)))", "score": 0}
{"id": "eqasc_validation_1310", "prediction": "all x.(Spacing(x) -> (OnCenterMeasurements(x) | DistanceBetweenPlants(x)))", "score": 0}
{"id": "eqasc_validation_1310", "prediction": "all x y.((Spacing(x) & Plant(y)) -> (CenterMeasurement(x,y) | Distance(x,y)))", "score": 0}
{"id": "eqasc_validation_1310", "prediction": "all x.(Spacing(x) -> (CenterMeasurement(x) | DistanceBetweenPlant(x)))", "score": 0}
{"id": "eqasc_validation_1310", "prediction": "all x y.((Spacing(x) & Plant(y)) -> (CenterMeasurements(x,y) | Distinction(x,y)))", "score": 0}
{"id": "eqasc_validation_1311", "prediction": "all x.(MeterStick(x) -> MeasuresSpaceBetween(x))", "score": 0}
{"id": "eqasc_validation_1311", "prediction": "all x y.((MeterStick(x) & SpaceBetween(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1311", "prediction": "all x.(MeterStick(x) -> MeasureSpaceBetween(x))", "score": 0}
{"id": "eqasc_validation_1311", "prediction": "all x y.((MeterStick(x) & SpaceBetween(y,x)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1311", "prediction": "all x y.((MeterStick(x) & SpaceBetween(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1311", "prediction": "all x.(MeterStick(x) -> UsedToMeasureSpaceBetween(x))", "score": 0}
{"id": "eqasc_validation_1311", "prediction": "all x y z.((MeterStick(x) & SpaceBetween(y) & SpaceBetween(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1311", "prediction": "all x y.((MeterStick(x) & SpaceBetween(y,x)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1311", "prediction": "all x y.((MeterStick(x) & SpaceBetween(y,x)) -> MeasuresSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1311", "prediction": "all x y.((MeterStick(x) & SpaceBetween(y)) -> MeasuresSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1311", "prediction": "all x y.((MeterStick(x) & Space(y)) -> MeasuresBetween(x,y))", "score": 0}
{"id": "eqasc_validation_1311", "prediction": "all x y z.((MeterStick(x) & SpaceBetween(y) & SpaceBetween(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1311", "prediction": "all x y z.((MeterStick(x) & Space(y) & Space(z)) -> MeasuresBetween(x,y,z))", "score": 0}
{"id": "eqasc_validation_1311", "prediction": "all x.(MeasuresSpaceBetween(x) -> MeterStick(x))", "score": 0}
{"id": "eqasc_validation_1311", "prediction": "all x.((MeterStick(x) & MeasureSpaceBetween(x)) -> UsedToMeasureSpace(x))", "score": 0}
{"id": "eqasc_validation_1311", "prediction": "all x y.((MeterStick(x) & Space(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1312", "prediction": "all x.((Depth(x) | Distance(x)) -> RepresentedInMeters(x))", "score": 0}
{"id": "eqasc_validation_1312", "prediction": "all x y.((Depth(x) & Distance(y)) -> RepresentedInMeters(x,y))", "score": 0}
{"id": "eqasc_validation_1312", "prediction": "all x.((Depth(x) | Distance(x)) -> RepresentedInMeter(x))", "score": 0}
{"id": "eqasc_validation_1312", "prediction": "all x.(Meter(x) -> (Depth(x) | Distance(x)))", "score": 0}
{"id": "eqasc_validation_1312", "prediction": "all x.(Depth(x) & Distance(x)) -> RepresentedInMeters(x))", "score": -1}
{"id": "eqasc_validation_1312", "prediction": "all x y.((Depth(x) & Distance(y)) -> (RepresentedInMeters(x,y) & RepresentedInMeters(x,y)))", "score": 0}
{"id": "eqasc_validation_1312", "prediction": "all x y.((Depth(x) & Distance(y)) -> (RepresentedInMeters(x) & RepresentedInMeters(x)))", "score": 0}
{"id": "eqasc_validation_1312", "prediction": "all x y.((Depth(x) & Distance(y)) -> (RepresentedInMeter(x,y) & RepresentedInMeter(x,y)))", "score": 0}
{"id": "eqasc_validation_1312", "prediction": "all x y.((Depth(x) & Distance(y)) -> (RepresentedIn(x,y) & RepresentedIn(x,y)))", "score": 0}
{"id": "eqasc_validation_1312", "prediction": "all x y.((Depth(x) & Distance(y)) -> RepresentedInMeter(x,y))", "score": 0}
{"id": "eqasc_validation_1312", "prediction": "all x y z.((Depth(x) & Distance(y) & Meter(z)) -> (RepresentedIn(x,y,z) & RepresentedIn(x,y)))", "score": 0}
{"id": "eqasc_validation_1312", "prediction": "all x y z.((Depth(x) & Distance(y) & Meter(z)) -> RepresentedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1312", "prediction": "all x y z.((Depth(x) & Distance(y) & Meter(z)) -> (RepresentedIn(x,y,z) & RepresentedIn(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1312", "prediction": "all x y z.((Depth(x) & Distance(y) & Meter(z)) -> (RepresentedIn(x,y,z) & RepresentedIn(x,z)))", "score": 0}
{"id": "eqasc_validation_1312", "prediction": "all x y z.((Depth(x) & Distance(y) & Meter(z)) -> (RepresentedIn(x,y) & RepresentedIn(x,z)))", "score": 0}
{"id": "eqasc_validation_1312", "prediction": "all x.((Depth(x) | Distance(x)) -> RepresentedInMetrics(x))", "score": 0}
{"id": "eqasc_validation_1313", "prediction": "all x y z.((MeterStick(x) & Meter(y) & Meter(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1313", "prediction": "all x y.((MeterStick(x) & Meter(y)) -> MeasuresMeters(x,y))", "score": 0}
{"id": "eqasc_validation_1313", "prediction": "all x y.((MeterStick(x) & Meter(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1313", "prediction": "all x y z.((MeterStick(x) & Meter(y) & Meter(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1313", "prediction": "all x y.((MeterStick(x) & Meter(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1313", "prediction": "all x y z.((MeterStick(x) & Meter(y) & Meter(z) & Measures(x,y,z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1313", "prediction": "all x y z.((MeterStick(x) & Meter(y) & Meter(z)) -> MeasuresMeters(x,y,z))", "score": 0}
{"id": "eqasc_validation_1313", "prediction": "all x.(MeterStick(x) -> MeasuresMeters(x))", "score": 0}
{"id": "eqasc_validation_1313", "prediction": "all x.(MeterStick(x) -> UsedToMeasureMeters(x))", "score": 0}
{"id": "eqasc_validation_1313", "prediction": "all x y.((MeterStick(x) & Meter(y)) -> MeasuresMeasurements(x,y))", "score": 0}
{"id": "eqasc_validation_1313", "prediction": "all x y z.((MeterStick(x) & Meter(y) & Meter(z)) -> MeasuresMeasurements(x,y,z))", "score": 0}
{"id": "eqasc_validation_1313", "prediction": "all x.((MeterStick(x) & MeasuresMeters(x)) -> UsedToMeasureMeters(x))", "score": 0}
{"id": "eqasc_validation_1313", "prediction": "all x y.((MeterStick(x) & Meter(y)) -> UsedToMeasureMeters(x,y))", "score": 0}
{"id": "eqasc_validation_1313", "prediction": "all x y.((MeterStick(x) & Meter(y) & Measures(x,y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1313", "prediction": "all x y z.((MeasurementStick(x) & Meter(y) & Meter(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1313", "prediction": "all x y z.((MeterStick(x) & Meter(y) & Meter(z)) -> Measure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1314", "prediction": "all x.(MeasuresDistances(x) -> UsesMeasuringDevice(x))", "score": 0}
{"id": "eqasc_validation_1314", "prediction": "all x.((MeasuresDistances(x) & UsesMeasuringDevice(x)) -> MeasuresDistances(x))", "score": 0}
{"id": "eqasc_validation_1314", "prediction": "all x y.((MeasuresDistances(x) & MeasuringDevice(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1314", "prediction": "all x y.((MeasuresDistances(x) & MeasuresDevice(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1314", "prediction": "all x y.((MeasuresDistances(x) & MeasuringDevice(y)) -> MeasuresDistances(x,y))", "score": 0}
{"id": "eqasc_validation_1314", "prediction": "all x y.((MeasuresDistance(x) & MeasuresDistance(y)) -> UsesMeasuringDevice(x,y))", "score": 0}
{"id": "eqasc_validation_1314", "prediction": "all x y.((MeasuresDistances(x) & MeasuresDevice(y)) -> MeasuresDistances(x,y))", "score": 0}
{"id": "eqasc_validation_1314", "prediction": "all x.((MeasuresDistances(x) & MeasuresDistances(x)) -> UsesMeasuringDevice(x))", "score": 0}
{"id": "eqasc_validation_1314", "prediction": "all x y.((MeasuresDistances(x) & MeasuresDistances(y)) -> UsesMeasuringDevice(x,y))", "score": 0}
{"id": "eqasc_validation_1314", "prediction": "all x y.((MeasuresDistance(x) & MeasuresDistance(y)) -> UsesMeasuringDevice(x))", "score": 0}
{"id": "eqasc_validation_1314", "prediction": "all x y.((MeasuresDistance(x) & MeasuringDevice(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1314", "prediction": "all x y.((MeasuresDistances(x) & MeasuresDistances(y)) -> UsesMeasuringDevice(x))", "score": 0}
{"id": "eqasc_validation_1314", "prediction": "all x y.((MeasuresDistances(x) & Device(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1314", "prediction": "all x y.((MeasuresDistances(x) & MeasuringDevice(y)) -> MeasuresUsing(x,y))", "score": 0}
{"id": "eqasc_validation_1314", "prediction": "all x.(MeasureDistances(x) -> UsesMeasuringDevice(x))", "score": 0}
{"id": "eqasc_validation_1314", "prediction": "all x y.((MeasuresDistances(x) & MeasuresDevice(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1315", "prediction": "all x.(MeterStick(x) -> MeasurementDevice(x))", "score": 0}
{"id": "eqasc_validation_1315", "prediction": "all x.(MeasurementStick(x) -> MeasurementDevice(x))", "score": 0}
{"id": "eqasc_validation_1315", "prediction": "all x.(MeasuringDevice(x) -> MeasurementStick(x))", "score": 0}
{"id": "eqasc_validation_1315", "prediction": "all x.(MeterStick(x) -> MeasuringDevice(x))", "score": 0}
{"id": "eqasc_validation_1315", "prediction": "all x.(MeterStick(x) -> MeasuresDevice(x))", "score": 0}
{"id": "eqasc_validation_1315", "prediction": "all x y.((MeterStick(x) & MeasurementDevice(y)) -> MeasurementDevice(x,y))", "score": 0}
{"id": "eqasc_validation_1315", "prediction": "all x.(MeasuringDevice(x) -> MeterStick(x))", "score": 0}
{"id": "eqasc_validation_1315", "prediction": "all x.(MeasuringDevice(x) -> (MeterStick(x) & MeasuresDevice(x)))", "score": 0}
{"id": "eqasc_validation_1315", "prediction": "all x y.((MeterStick(x) & MeasurementDevice(y)) -> MeasuresDevice(x,y))", "score": 0}
{"id": "eqasc_validation_1315", "prediction": "all x.(MeterStick(x) -> MeasureingDevice(x))", "score": 0}
{"id": "eqasc_validation_1315", "prediction": "all x.((MeterStick(x) & MeasurementDevice(x)) -> MeasurementDevice(x))", "score": 0}
{"id": "eqasc_validation_1315", "prediction": "all x.(MeasuringDevice(x) -> (MeterStick(x) & MeasurementDevice(x)))", "score": 0}
{"id": "eqasc_validation_1315", "prediction": "all x y.((MeterStick(x) & MeasurementDevice(y)) -> MeasurementDevice(x))", "score": 0}
{"id": "eqasc_validation_1315", "prediction": "all x y.((MeterStick(x) & MeasurementDevice(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1316", "prediction": "all x.((BoatBrokerage(x) | BoatDepot(x)) -> WithinWalkingDistance(x))", "score": 0}
{"id": "eqasc_validation_1316", "prediction": "all x.((BoatBrokerage(x) | BoatDealroom(x)) -> WithinWalkingDistance(x))", "score": 0}
{"id": "eqasc_validation_1316", "prediction": "all x.((BoatBrokerage(x) | BoatDemandator(x)) -> WithinWalkingDistance(x))", "score": 0}
{"id": "eqasc_validation_1316", "prediction": "all x.(BoatBrokerage(x) & BoatDepot(x)) -> WithinWalkingDistance(x))", "score": -1}
{"id": "eqasc_validation_1316", "prediction": "all x.((BoatBrokerage(x) | BoatDelivery(x)) -> WithinWalkingDistance(x))", "score": 0}
{"id": "eqasc_validation_1316", "prediction": "all x y.((BoatBrokerage(x) & BoatDepot(y)) -> WithinWalkingDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1316", "prediction": "all x.((BoatBrokerage(x) | BoatDemandation(x)) -> WithinWalkingDistance(x))", "score": 0}
{"id": "eqasc_validation_1316", "prediction": "all x.(BoatBrokerage(x) & Dealership(x)) -> WithinWalkingDistance(x))", "score": -1}
{"id": "eqasc_validation_1316", "prediction": "all x.((BoatBrokerage(x) | BoatDealer(x)) -> WithinWalkingDistance(x))", "score": 0}
{"id": "eqasc_validation_1316", "prediction": "all x.(BoatBrokerage(x) & BoatDelivery(x)) -> WithinWalkingDistance(x))", "score": -1}
{"id": "eqasc_validation_1316", "prediction": "all x y.((BoatBrokerage(x) & BoatDepot(y)) -> (LocatedWithinWalkingDistance(x,y) | LocatedWithinWalkingDistance(x,y)))", "score": 0}
{"id": "eqasc_validation_1316", "prediction": "all x y.((BoatBrokerage(x) & BoatDealer(y)) -> WithinWalkingDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1316", "prediction": "all x y.((BoatBrokerage(x) & BoatDepot(y)) -> (LocatedWithinWalkingDistance(x,y) & LocatedWithinWalkingDistance(x,y)))", "score": 0}
{"id": "eqasc_validation_1316", "prediction": "all x y.((BoatBrokerage(x) & BoatDepot(y)) -> (LocatedWithinWalkingDistance(x) | LocatedWithinWalkingDistance(x)))", "score": 0}
{"id": "eqasc_validation_1316", "prediction": "all x y.((BoatBrokerage(x) & BoatDemandator(y)) -> WithinWalkingDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1317", "prediction": "all x y z.((BoatBrokers(x) & BoatDemandation(y) & MeterStick(z)) -> MeasuresPath(x,y,z))", "score": 0}
{"id": "eqasc_validation_1317", "prediction": "all x y z.((BoatBrokerage(x) & BoatDemandation(y) & MeterStick(z)) -> MeasuresPath(x,y,z))", "score": 0}
{"id": "eqasc_validation_1317", "prediction": "all x y z.((BoatBrokers(x) & BoatDemandator(y) & MeterStick(z)) -> MeasuresPath(x,y,z))", "score": 0}
{"id": "eqasc_validation_1317", "prediction": "all x y z.((BoatBrokers(x) & BoatDemandatorLocation(y) & MeterStick(z)) -> MeasuresPath(x,y,z))", "score": 0}
{"id": "eqasc_validation_1317", "prediction": "all x y z.((BoatBrokery(x) & BoatDemandation(y) & MeterStick(z)) -> MeasuresPath(x,y,z))", "score": 0}
{"id": "eqasc_validation_1317", "prediction": "all x y z.((BoatBrokers(x) & BoatDemandation(y) & MeterStick(z)) -> MeasuresPathBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1317", "prediction": "all x y z.((BoatBrokers(x) & BoatDemandation(y) & MeterStick(z)) -> MeasuresPathWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1317", "prediction": "all x y z.((BoatBrokerage(x) & BoatDemandation(y) & MeterStick(z)) -> MeasuresPathWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1317", "prediction": "all x y z.((BoatBrokerage(x) & BoatDemandation(y) & MeterStick(z)) -> MeasuresPathBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1317", "prediction": "all x y z.((BoatBrokers(x) & BoatDemandator(y) & MeterStick(z)) -> MeasuresPathWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1317", "prediction": "all x y z.((BoatBrokers(x) & BoatDemandatorLocations(y) & MeterStick(z)) -> MeasuresPath(x,y,z))", "score": 0}
{"id": "eqasc_validation_1317", "prediction": "all x y z.((BoatBrokers(x) & BoatDemandator(y) & MeterStick(z)) -> MeasuresPathBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1317", "prediction": "all x y.((BoatBrokers(x) & BoatDemandator(y)) -> MeasuresPathWithMeterStick(x,y))", "score": 0}
{"id": "eqasc_validation_1317", "prediction": "all x y.((BoatBrokers(x) & BoatDemandation(y)) -> MeasuresPathWithMeterStick(x,y))", "score": 0}
{"id": "eqasc_validation_1317", "prediction": "all x y.((BoatBrokerage(x) & BoatDemandation(y)) -> MeasuresPathWithMeterStick(x,y))", "score": 0}
{"id": "eqasc_validation_1318", "prediction": "all x.(MeterStick(x) -> (HasCentimeter(x) | HasMillimeter(x)))", "score": 0}
{"id": "eqasc_validation_1318", "prediction": "all x.(Measurestick(x) -> (HasCentimeter(x) | HasMillimeter(x)))", "score": 0}
{"id": "eqasc_validation_1318", "prediction": "all x.(MeterStick(x) -> (HasCentimeters(x) | HasMillimeters(x)))", "score": 0}
{"id": "eqasc_validation_1318", "prediction": "all x.(MeterStick(x) -> (HasCentimeter(x) & HasMillimeter(x)))", "score": 0}
{"id": "eqasc_validation_1318", "prediction": "all x.(MeterStick(x) -> (HasCentimeters(x) & HasMillimeters(x)))", "score": 0}
{"id": "eqasc_validation_1318", "prediction": "all x.(Measurestick(x) -> (HasCentimeters(x) | HasMillimeters(x)))", "score": 0}
{"id": "eqasc_validation_1318", "prediction": "all x.(Measurestick(x) -> (HasCentimeter(x) & HasMillimeter(x)))", "score": 0}
{"id": "eqasc_validation_1318", "prediction": "all x.(Measurestick(x) -> (HasCentimeters(x) & HasMillimeters(x)))", "score": 0}
{"id": "eqasc_validation_1318", "prediction": "all x.(MeterStick(x) -> (Centimeter(x) | Millimeter(x)))", "score": 0}
{"id": "eqasc_validation_1318", "prediction": "all x.(MeterStick(x) -> (HasUnit(x,centimeter) | HasUnit(x,millimeter)))", "score": 0}
{"id": "eqasc_validation_1318", "prediction": "all x.(MeterStick(x) -> (HasUnit(x,centimeter) & HasUnit(x,millimeter)))", "score": 0}
{"id": "eqasc_validation_1318", "prediction": "all x.(Measurestick(x) -> (HasUnit(x,centimeter) | HasUnit(x,millimeter)))", "score": 0}
{"id": "eqasc_validation_1318", "prediction": "all x.(Measurestick(x) -> (Centimeter(x) | Millimeter(x)))", "score": 0}
{"id": "eqasc_validation_1318", "prediction": "all x.(MeterStick(x) -> (Has(x,centimeter) | Has(x,millimeter)))", "score": 0}
{"id": "eqasc_validation_1318", "prediction": "all x.(MeterStick(x) -> (HasCentrics(x) | HasMillimeters(x)))", "score": 0}
{"id": "eqasc_validation_1318", "prediction": "all x.(MeterStick(x) -> (HasUnit(x,centimeters) | HasUnit(x,millimeters)))", "score": 0}
{"id": "eqasc_validation_1319", "prediction": "all x.((Centimeter(x) | Millimeter(x)) -> DistanceUnit(x))", "score": 0}
{"id": "eqasc_validation_1319", "prediction": "all x.((Centimeter(x) | Millimeter(x)) -> UnitOfDistance(x))", "score": 0}
{"id": "eqasc_validation_1319", "prediction": "all x.((Centimeter(x) | Millimeter(x)) -> DistinctionUnit(x))", "score": 0}
{"id": "eqasc_validation_1319", "prediction": "all x.((Centimeter(x) | Millimeter(x)) -> DistanzUnit(x))", "score": 0}
{"id": "eqasc_validation_1319", "prediction": "all x.((Centimeter(x) | Millimeter(x)) -> DispersionUnit(x))", "score": 0}
{"id": "eqasc_validation_1319", "prediction": "all x.((Centimeter(x) | Millimeter(x)) -> Distanz(x))", "score": 0}
{"id": "eqasc_validation_1319", "prediction": "all x.((Centimeter(x) | Millimeter(x)) -> Distance(x))", "score": 0}
{"id": "eqasc_validation_1319", "prediction": "all x y.((Centimeter(x) | Millimeter(y)) -> DistanceUnit(x))", "score": 0}
{"id": "eqasc_validation_1319", "prediction": "all x.((Centrimeter(x) | Millimeter(x)) -> DistanceUnit(x))", "score": 0}
{"id": "eqasc_validation_1319", "prediction": "all x.((Centimeter(x) | Millimeter(x)) -> Distinction(x))", "score": 0}
{"id": "eqasc_validation_1319", "prediction": "all x y.((Centimeter(x) & Millimeter(y)) -> DistanceUnit(x))", "score": 0}
{"id": "eqasc_validation_1319", "prediction": "all x y.((Centimeter(x) | Millimeter(x)) -> DistanceUnit(y))", "score": 0}
{"id": "eqasc_validation_1319", "prediction": "all x y.((Centimeter(x) & Millimeter(y)) -> UnitOfDistance(x))", "score": 0}
{"id": "eqasc_validation_1319", "prediction": "all x.((Centrimeter(x) | Millimeter(x)) -> UnitOfDistance(x))", "score": 0}
{"id": "eqasc_validation_1319", "prediction": "all x y.((Centimeter(x) & Millimeter(y)) -> UnitOfDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1319", "prediction": "all x y.((Centimeter(x) | Millimeter(y)) -> UnitOfDistance(x))", "score": 0}
{"id": "eqasc_validation_1320", "prediction": "all x.(Distance(x) -> (InMeters(x) & ByTheWay(x)))", "score": 0}
{"id": "eqasc_validation_1320", "prediction": "all x.(Distance(x) -> (Meters(x) & ByTheWay(x)))", "score": 0}
{"id": "eqasc_validation_1320", "prediction": "all x.(Distance(x) -> (InMeter(x) & ByTheWay(x)))", "score": 0}
{"id": "eqasc_validation_1320", "prediction": "all x.(Distance(x) -> (InMeters(x) & ByTheMotor(x)))", "score": 0}
{"id": "eqasc_validation_1320", "prediction": "all x.(Distance(x) -> (InMetrics(x) & ByTheWay(x)))", "score": 0}
{"id": "eqasc_validation_1320", "prediction": "all x.(Distance(x) -> (InMeters(x) & ByThePath(x)))", "score": 0}
{"id": "eqasc_validation_1320", "prediction": "all x.(Distance(x) -> (InMeters(x) & ByWay(x)))", "score": 0}
{"id": "eqasc_validation_1320", "prediction": "all x.(Distance(x) -> (Meter(x) & ByTheWay(x)))", "score": 0}
{"id": "eqasc_validation_1320", "prediction": "all x.(Distance(x) -> InMeters(x))", "score": 0}
{"id": "eqasc_validation_1320", "prediction": "all x.(Distance(x) -> (InMeters(x) & ByTheFast(x)))", "score": 0}
{"id": "eqasc_validation_1320", "prediction": "all x.(Distance(x) -> (InMesh(x) & ByTheWay(x)))", "score": 0}
{"id": "eqasc_validation_1320", "prediction": "all x.(Distance(x) -> (InMeters(x) & ByTheMan(x)))", "score": 0}
{"id": "eqasc_validation_1320", "prediction": "all x.(Distance(x) -> (InMeters(x) | ByTheWay(x)))", "score": 0}
{"id": "eqasc_validation_1320", "prediction": "all x.(Distance(x) -> (InMeters(x) & ByTheGod(x)))", "score": 0}
{"id": "eqasc_validation_1320", "prediction": "all x.(Distance(x) -> (InMeters(x) & ByTheMoment(x)))", "score": 0}
{"id": "eqasc_validation_1320", "prediction": "all x.(Distance(x) -> (InMeters(x) & ByTheMove(x)))", "score": 0}
{"id": "eqasc_validation_1321", "prediction": "all x.(MeterStick(x) -> MeasuresMeters(x))", "score": 0}
{"id": "eqasc_validation_1321", "prediction": "all x y.((MeterStick(x) & Meter(y)) -> MeasuresMeters(x,y))", "score": 0}
{"id": "eqasc_validation_1321", "prediction": "all x y z.((MeterStick(x) & Meter(y) & Meter(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1321", "prediction": "all x y z.((MeterStick(x) & Meter(y) & Meter(z)) -> MeasuresMeters(x,y,z))", "score": 0}
{"id": "eqasc_validation_1321", "prediction": "all x.((MeterStick(x) & MeasuresMeters(x)) -> MeasuresMeters(x))", "score": 0}
{"id": "eqasc_validation_1321", "prediction": "all x y.((MeterStick(x) & Meter(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1321", "prediction": "all x y z.((MeterStick(x) & Meter(y) & Meter(z) & Measures(x,y,z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1321", "prediction": "all x.(MeasuresMeters(x) -> MeasuresMeters(x))", "score": 0}
{"id": "eqasc_validation_1321", "prediction": "all x y.((MeterStick(x) & MeterStick(y)) -> MeasuresMeters(x,y))", "score": 0}
{"id": "eqasc_validation_1321", "prediction": "all x y z.((MeterStick(x) & Meter(y) & Meter(z)) -> MeasuresMeasurements(x,y,z))", "score": 0}
{"id": "eqasc_validation_1321", "prediction": "all x y.((MeasurementStick(x) & Meter(y)) -> MeasuresMeters(x,y))", "score": 0}
{"id": "eqasc_validation_1321", "prediction": "all x y z.((MeasurementStick(x) & Meter(y) & Meter(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1321", "prediction": "all x y z.((MeterStick(x) & Meter(y) & Meter(z) & Measures(x,y,z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1321", "prediction": "all x y z.((MeterStick(x) & Meter(y) & Meter(z)) -> MeasuresMetrics(x,y,z))", "score": 0}
{"id": "eqasc_validation_1321", "prediction": "all x y.((MeterStick(x) & MeasuresMeters(x,y)) -> MeasuresMeters(x,y))", "score": 0}
{"id": "eqasc_validation_1321", "prediction": "all x y z.((MeterStick(x) & MeterStick(y) & Meter(z)) -> MeasuresMeters(x,y,z))", "score": 0}
{"id": "eqasc_validation_1322", "prediction": "all x y.((Person(x) & Object(y)) -> DifferentDistanceFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1322", "prediction": "all x y.((Person(x) & Object(y)) -> DifferentDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1322", "prediction": "all x y.((Person(x) & Object(y)) -> PlacedAtDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1322", "prediction": "all x y.((Person(x) & Object(y)) -> DistantDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1322", "prediction": "all x y z.((Person(x) & Object(y) & Distance(z)) -> PlacedAtDifferentDistance(x,y,z))", "score": 0}
{"id": "eqasc_validation_1322", "prediction": "all x y.((Person(x) & Object(y)) -> DistantDistanceFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1322", "prediction": "all x y.((Person(x) & Object(y)) -> PlacedAtDifferentDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1322", "prediction": "all x.(Person(x) -> DifferentDistanceFromObject(x))", "score": 0}
{"id": "eqasc_validation_1322", "prediction": "all x y.((Person(x) & Object(y) & PlacedAtDistance(x,y)) -> DifferentDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1322", "prediction": "all x y z.((Person(x) & Object(y) & DistantDistance(z)) -> PlacedAt(x,y,z))", "score": 0}
{"id": "eqasc_validation_1322", "prediction": "all x y.((Person(x) & Object(y) & PlacedAtDistance(x,y)) -> DifferentDistanceFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1322", "prediction": "all x y z.((Person(x) & Object(y) & DistantDistance(z)) -> PlacedAtDifferentDistance(x,y,z))", "score": 0}
{"id": "eqasc_validation_1322", "prediction": "all x y.((Person(x) & Object(y) & DifferentDistance(x,y)) -> PlacedAt(x,y))", "score": 0}
{"id": "eqasc_validation_1322", "prediction": "all x y z.((Person(x) & Object(y) & Distance(z)) -> DifferentDistanceFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1322", "prediction": "all x y.((Person(x) & Object(y)) -> PlacedAtDistanceFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1322", "prediction": "all x y z.((Person(x) & Object(y) & Distance(z)) -> Different(x,y,z))", "score": 0}
{"id": "eqasc_validation_1323", "prediction": "all x y z.((MeterStick(x) & Person(y) & Object(z)) -> MeasuresBetween(x,y,z))", "score": 0}
{"id": "eqasc_validation_1323", "prediction": "all x y.((MeterStick(x) & Person(y) & Object(y)) -> MeasuresBetween(x,y))", "score": 0}
{"id": "eqasc_validation_1323", "prediction": "all x y z.((MeterStick(x) & Person(y) & Object(z) & MeasuresBetween(x,y,z)) -> MeasuresBetween(x,y,z))", "score": 0}
{"id": "eqasc_validation_1323", "prediction": "all x y z.((MeasurementStick(x) & Person(y) & Object(z)) -> MeasuresBetween(x,y,z))", "score": 0}
{"id": "eqasc_validation_1323", "prediction": "all x y z.((MeterStick(x) & Person(y) & Object(z) & MeasuresBetween(x,y,z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1323", "prediction": "all x y z.((MeterStick(x) & Person(y) & Object(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1323", "prediction": "all x y.((MeterStick(x) & Person(y)) -> MeasuresBetween(x,y))", "score": 0}
{"id": "eqasc_validation_1323", "prediction": "all x y z.((MeterStick(x) & Person(y) & Object(z)) -> MeasuresBetweenObjectAndPerson(x,y,z))", "score": 0}
{"id": "eqasc_validation_1323", "prediction": "all x y.((MeterStick(x) & Person(y)) -> MeasuresBetweenObject(x,y))", "score": 0}
{"id": "eqasc_validation_1323", "prediction": "all x y z w.((MeterStick(x) & Person(y) & Object(z) & MeasuresBetween(x,y,z)) -> MeasuresBetween(x,y,z))", "score": 0}
{"id": "eqasc_validation_1323", "prediction": "all x y z.((MeterStick(x) & Person(y) & Object(z)) -> UsedToMeasureBetween(x,y,z))", "score": 0}
{"id": "eqasc_validation_1323", "prediction": "all x y.((MeterStick(x) & Person(y)) -> MeasuresBetweenObjectAndPerson(x,y))", "score": 0}
{"id": "eqasc_validation_1323", "prediction": "all x y z.((MeterStick(x) & Person(y) & Object(z)) -> MeasuresBetweenPersonAndObject(x,y,z))", "score": 0}
{"id": "eqasc_validation_1323", "prediction": "all x y.((MeasurementStick(x) & Person(y) & Object(y)) -> MeasuresBetween(x,y))", "score": 0}
{"id": "eqasc_validation_1323", "prediction": "all x y z w.((MeterStick(x) & Person(y) & Object(z) & MeasuresBetween(x,y,z)) -> MeasuresBetween(x,w))", "score": 0}
{"id": "eqasc_validation_1323", "prediction": "all x y z.((MeterStick(x) & Person(y) & Object(z)) -> MeasureBetween(x,y,z))", "score": 0}
{"id": "eqasc_validation_1324", "prediction": "all x.(MeterStick(x) -> 100Cm(x))", "score": 0}
{"id": "eqasc_validation_1324", "prediction": "All x.(MeterStick(x) -> 100Cm(x))", "score": -1}
{"id": "eqasc_validation_1324", "prediction": "all x.(MeterStick(x) -> 100cm(x))", "score": 0}
{"id": "eqasc_validation_1324", "prediction": "all x.(MeterStick(x) -> Size(x,100))", "score": 0}
{"id": "eqasc_validation_1324", "prediction": "all x.(MeasurementStick(x) -> 100Cm(x))", "score": 0}
{"id": "eqasc_validation_1324", "prediction": "all x.(MeterStick(x) -> (100Cm(x)))", "score": 0}
{"id": "eqasc_validation_1324", "prediction": "all x.(MeterStick(x) -> (100cm(x)))", "score": 0}
{"id": "eqasc_validation_1324", "prediction": "all x.(MeterStick(x) -> -100Cm(x))", "score": 0}
{"id": "eqasc_validation_1324", "prediction": "all x.(MeterStick(x) -> Size100Cm(x))", "score": 0}
{"id": "eqasc_validation_1324", "prediction": "all x.(MeterStick(x) -> Capacity(x,100))", "score": 0}
{"id": "eqasc_validation_1324", "prediction": "All x.(MeasurementStick(x) -> 100Cm(x))", "score": -1}
{"id": "eqasc_validation_1324", "prediction": "all x.(Measurestick(x) -> 100Cm(x))", "score": 0}
{"id": "eqasc_validation_1324", "prediction": "all x.(MeasurementStick(x) -> (100Cm(x)))", "score": 0}
{"id": "eqasc_validation_1324", "prediction": "All x.(MeterStick(x) -> (100Cm(x)))", "score": -1}
{"id": "eqasc_validation_1324", "prediction": "All x.(MeterStick(x) -> Size(x,100))", "score": -1}
{"id": "eqasc_validation_1324", "prediction": "all x.(MeterStick(x) -> Size100(x))", "score": 0}
{"id": "eqasc_validation_1325", "prediction": "all x.((100Cm(x) & Meter(x)) -> Meter(x))", "score": 0}
{"id": "eqasc_validation_1325", "prediction": "all x.((100 cm(x) & Meter(x)) -> Meter(x))", "score": -1}
{"id": "eqasc_validation_1325", "prediction": "all x.((Current(x) & Meter(x)) -> Meter(x))", "score": 0}
{"id": "eqasc_validation_1325", "prediction": "all x.((100cm(x) & Meter(x)) -> Meter(x))", "score": 0}
{"id": "eqasc_validation_1325", "prediction": "all x.((SixtyCm(x) & Meter(x)) -> Meter(x))", "score": 0}
{"id": "eqasc_validation_1325", "prediction": "all x.(100Cm(x) -> Meter(x))", "score": 0}
{"id": "eqasc_validation_1325", "prediction": "all x y.((100Cm(x) & Meter(y)) -> Meter(x,y))", "score": 0}
{"id": "eqasc_validation_1325", "prediction": "all x y.((100 cm(x) & Meter(y)) -> Meter(x,y))", "score": -1}
{"id": "eqasc_validation_1325", "prediction": "all x y.((100Cm(x) & Meter(y)) -> Meter(y))", "score": 0}
{"id": "eqasc_validation_1325", "prediction": "all x y.((100 cm(x) & Meter(y)) -> Meter(y))", "score": -1}
{"id": "eqasc_validation_1325", "prediction": "all x.((100 cm) & Meter(x)) -> Meter(x))", "score": -1}
{"id": "eqasc_validation_1325", "prediction": "all x.((Cent(x) & 100Cm(x)) -> Meter(x))", "score": 0}
{"id": "eqasc_validation_1325", "prediction": "all x y z.((100 cm(x) & Meter(y) & Meter(z)) -> Meter(y))", "score": -1}
{"id": "eqasc_validation_1325", "prediction": "all x.((SingleCm(x) & Meter(x)) -> Meter(x))", "score": 0}
{"id": "eqasc_validation_1325", "prediction": "all x y.((100cm(x) & Meter(y)) -> Meter(x,y))", "score": 0}
{"id": "eqasc_validation_1326", "prediction": "all x.((Stick(x) & 100Cm(x)) -> MeasuresDistance(x))", "score": 0}
{"id": "eqasc_validation_1326", "prediction": "all x.((Stick(x) & 100CmStick(x)) -> MeasuresDistance(x))", "score": 0}
{"id": "eqasc_validation_1326", "prediction": "all x.((Stick(x) & 100Cm(x)) -> UsedToMeasureDistance(x))", "score": 0}
{"id": "eqasc_validation_1326", "prediction": "all x.((Stick(x) & 100CmStick(x)) -> UsedToMeasureDistance(x))", "score": 0}
{"id": "eqasc_validation_1326", "prediction": "all x.((Stick(x) & MeasuresDistance(x)) -> 100CmStick(x))", "score": 0}
{"id": "eqasc_validation_1326", "prediction": "all x.((Stick(x) & MeasuresDistance(x)) -> 100Cm(x))", "score": 0}
{"id": "eqasc_validation_1326", "prediction": "all x.(Stick(x,100) -> MeasuresDistance(x))", "score": 0}
{"id": "eqasc_validation_1326", "prediction": "all x.((Stick(x) & Size(x,100)) -> MeasuresDistance(x))", "score": 0}
{"id": "eqasc_validation_1326", "prediction": "all x.((Stick(x) & 100CmStick(x)) -> MeasureDistance(x))", "score": 0}
{"id": "eqasc_validation_1326", "prediction": "all x.((Stick(x) & 100Cm(x)) -> MeasureDistance(x))", "score": 0}
{"id": "eqasc_validation_1326", "prediction": "all x.((Stick(x) & MeasureDistance(x,100)) -> UsedToMeasureDistance(x))", "score": 0}
{"id": "eqasc_validation_1326", "prediction": "all x.(Stick(x,100) -> UsedToMeasureDistance(x))", "score": 0}
{"id": "eqasc_validation_1326", "prediction": "all x.((Stick(x) & MeasureDistance(x)) -> 100Cm(x))", "score": 0}
{"id": "eqasc_validation_1326", "prediction": "all x.((Stick(x) & MeasuresDistance(x,100)) -> UsedToMeasure(x,100))", "score": 0}
{"id": "eqasc_validation_1326", "prediction": "all x.(100CmStick(x) -> UsedToMeasureDistance(x))", "score": 0}
{"id": "eqasc_validation_1326", "prediction": "all x.((Stick(x) & 100Cm(x)) -> MeasuredDistance(x))", "score": 0}
{"id": "eqasc_validation_1327", "prediction": "all x.(Space(x) -> DistanceBetween(x))", "score": 0}
{"id": "eqasc_validation_1327", "prediction": "all x.(Space(x) -> Distant(x))", "score": 0}
{"id": "eqasc_validation_1327", "prediction": "all x.(Space(x) -> DistinctionBetween(x))", "score": 0}
{"id": "eqasc_validation_1327", "prediction": "all x y.((Space(x) & Distance(y)) -> DistanceBetween(x,y))", "score": 0}
{"id": "eqasc_validation_1327", "prediction": "all x y.((Space(x) & Distant(y)) -> DistanceBetween(x,y))", "score": 0}
{"id": "eqasc_validation_1327", "prediction": "all x y.((Space(x) & DistanceBetween(y,x)) -> DistanceBetween(x,y))", "score": 0}
{"id": "eqasc_validation_1327", "prediction": "exists x.(Space(x) & DistanceBetween(x))", "score": 0}
{"id": "eqasc_validation_1327", "prediction": "all x y.((Space(x) & DistanceBetween(y)) -> DistanceBetween(x,y))", "score": 0}
{"id": "eqasc_validation_1327", "prediction": "all x.exists y.(Space(x) & DistanceBetween(y,x))", "score": 0}
{"id": "eqasc_validation_1327", "prediction": "all x.exists y.(Space(x) & Distance(y) & Between(x,y))", "score": 0}
{"id": "eqasc_validation_1327", "prediction": "all x y.((Space(x) & DistanceBetween(x,y)) -> DistanceBetween(x,y))", "score": 0}
{"id": "eqasc_validation_1327", "prediction": "all x.(Space(x) -> DistanzaBetween(x))", "score": 0}
{"id": "eqasc_validation_1327", "prediction": "all x y.((Space(x) & Distance(y)) -> Between(x,y))", "score": 0}
{"id": "eqasc_validation_1327", "prediction": "all x.(Space(x) -> DistantBetween(x))", "score": 0}
{"id": "eqasc_validation_1327", "prediction": "all x y.((Space(x) & Distance(y)) -> Distant(x,y))", "score": 0}
{"id": "eqasc_validation_1328", "prediction": "all x.(MeterStick(x) -> MeasuresSpaceBetweenThings(x))", "score": 0}
{"id": "eqasc_validation_1328", "prediction": "all x y.((MeterStick(x) & Things(y)) -> MeasuresSpaceBetween(x,y))", "score": 0}
{"id": "eqasc_validation_1328", "prediction": "all x y.((MeterStick(x) & Things(y)) -> MeasuresSpaceBetweenThings(x,y))", "score": 0}
{"id": "eqasc_validation_1328", "prediction": "all x y z.((MeterStick(x) & Things(y) & Things(z)) -> MeasuresSpaceBetween(x,y,z))", "score": 0}
{"id": "eqasc_validation_1328", "prediction": "all x y z.((MeterStick(x) & SpaceBetweenThings(y) & Things(z)) -> MeasuresSpaceBetweenThings(x,y,z))", "score": 0}
{"id": "eqasc_validation_1328", "prediction": "all x y.((MeterStick(x) & Things(y)) -> UsedToMeasureSpaceBetween(x,y))", "score": 0}
{"id": "eqasc_validation_1328", "prediction": "all x.(MeterStick(x) -> UsedToMeasureSpaceBetweenThings(x))", "score": 0}
{"id": "eqasc_validation_1328", "prediction": "all x y.((MeterStick(x) & MeasureSpaceBetweenThings(y)) -> UsedToMeasureSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1328", "prediction": "all x y.((MeterStick(x) & Things(y)) -> MeasureSpaceBetween(x,y))", "score": 0}
{"id": "eqasc_validation_1328", "prediction": "all x y.((MeterStick(x) & Thing(y)) -> MeasuresSpaceBetweenThings(x,y))", "score": 0}
{"id": "eqasc_validation_1328", "prediction": "all x y.((MeterStick(x) & MeasuresSpaceBetweenThings(y)) -> UsedToMeasureSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1328", "prediction": "all x y.((MeterStick(x) & MeasuresSpaceBetweenThings(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1328", "prediction": "all x y z.((MeterStick(x) & Space(y) & Things(z)) -> MeasuresSpaceBetween(x,y,z))", "score": 0}
{"id": "eqasc_validation_1328", "prediction": "all x y z.((MeterStick(x) & Space(y) & Things(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1328", "prediction": "all x y.((MeterStick(x) & MeasuresSpaceBetweenThings(y)) -> UsedToMeasureSpaceBetweenThings(x,y))", "score": 0}
{"id": "eqasc_validation_1328", "prediction": "all x y z.((MeterStick(x) & Things(y) & SpaceBetween(z)) -> MeasuresSpaceBetween(x,y,z))", "score": 0}
{"id": "eqasc_validation_1329", "prediction": "all x.(Length(x) -> (TimeOfRide(x) & DistancesAvailable(x)))", "score": 0}
{"id": "eqasc_validation_1329", "prediction": "all x.(Length(x) -> (RefersToTime(x) & RefersToDistances(x)))", "score": 0}
{"id": "eqasc_validation_1329", "prediction": "all x.(Length(x) -> (TimeOfRide(x) & Distance(x)))", "score": 0}
{"id": "eqasc_validation_1329", "prediction": "all x.(Length(x) -> (RideTime(x) & RideDistances(x)))", "score": 0}
{"id": "eqasc_validation_1329", "prediction": "all x.(Length(x) -> (TimeOfRide(x) & DistancesOfRide(x)))", "score": 0}
{"id": "eqasc_validation_1329", "prediction": "all x.(Length(x) -> (TimeOfRide(x) & DistanceAvailable(x)))", "score": 0}
{"id": "eqasc_validation_1329", "prediction": "all x.(Length(x) -> (TimeOfRide(x) & Distances(x)))", "score": 0}
{"id": "eqasc_validation_1329", "prediction": "all x y.((Ride(x) & Ride(y)) -> (Time(x,y) & Distance(x,y)))", "score": 0}
{"id": "eqasc_validation_1329", "prediction": "all x.(Length(x) -> (RideTime(x) & RideDistance(x)))", "score": 0}
{"id": "eqasc_validation_1330", "prediction": "all x.(MeterStick(x) -> MeasuresLength(x))", "score": 0}
{"id": "eqasc_validation_1330", "prediction": "all x.(MeterStick(x) -> UsedToMeasureLength(x))", "score": 0}
{"id": "eqasc_validation_1330", "prediction": "all x.(MeterStick(x) -> MeasureLength(x))", "score": 0}
{"id": "eqasc_validation_1330", "prediction": "all x y.((MeterStick(x) & MeasureLength(y)) -> UsedToMeasureLength(x,y))", "score": 0}
{"id": "eqasc_validation_1330", "prediction": "all x.(MeasuresLength(x) -> MeterStick(x))", "score": 0}
{"id": "eqasc_validation_1330", "prediction": "all x y.((MeterStick(x) & MeasureLength(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1330", "prediction": "all x y.((MeterStick(x) & MeasuresLength(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1330", "prediction": "all x.(MeasureLength(x) -> UsedToMeasureLength(x))", "score": 0}
{"id": "eqasc_validation_1330", "prediction": "all x y.((MeterStick(x) & MeasuresLength(x,y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1330", "prediction": "all x y.((MeterStick(x) & MeasuresLength(x)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1330", "prediction": "all x.(MeasuresLength(x) -> UsesMeterStick(x))", "score": 0}
{"id": "eqasc_validation_1330", "prediction": "all x.(MeasureLength(x) -> MeterStick(x))", "score": 0}
{"id": "eqasc_validation_1330", "prediction": "all x y.((MeterStick(x) & MeasureLength(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1330", "prediction": "all x y.((MeterStick(x) & MeasuresLength(y)) -> UsedToMeasureLength(x,y))", "score": 0}
{"id": "eqasc_validation_1330", "prediction": "all x.(MeasureLength(x) -> UsesMeterStick(x))", "score": 0}
{"id": "eqasc_validation_1331", "prediction": "all x.(Distance(x) -> InFeet(x))", "score": 0}
{"id": "eqasc_validation_1331", "prediction": "all x.(Distance(x) -> (InFeet(x)))", "score": 0}
{"id": "eqasc_validation_1331", "prediction": "all x.(Distance(x) -> Foot(x))", "score": 0}
{"id": "eqasc_validation_1331", "prediction": "all x.(Distance(x) -> InFoot(x))", "score": 0}
{"id": "eqasc_validation_1331", "prediction": "all x.(DistanceInFeet(x) -> DistanceInFeet(x))", "score": 0}
{"id": "eqasc_validation_1331", "prediction": "all x.(Distance(x) -> inFeet(x))", "score": 0}
{"id": "eqasc_validation_1331", "prediction": "all x y.((Distance(x) & Foot(y)) -> InFeet(x))", "score": 0}
{"id": "eqasc_validation_1331", "prediction": "all x.(Distance(x) -> (InFeet(x) & -InFeet(x)))", "score": 0}
{"id": "eqasc_validation_1331", "prediction": "all x.(Distance(x) -> (Feet(x) | Foot(x)))", "score": 0}
{"id": "eqasc_validation_1331", "prediction": "all x.(Distance(x) -> LocatedInFeet(x))", "score": 0}
{"id": "eqasc_validation_1331", "prediction": "all x y.((Distance(x) & Foot(y)) -> DistanceInFeet(x))", "score": 0}
{"id": "eqasc_validation_1331", "prediction": "all x.(Distance(x) -> IsInFeet(x))", "score": 0}
{"id": "eqasc_validation_1331", "prediction": "all x.(Distance(x) -> InFoots(x))", "score": 0}
{"id": "eqasc_validation_1331", "prediction": "all x y.((Distance(x) & Foot(y)) -> DistanceInFeet(x,y))", "score": 0}
{"id": "eqasc_validation_1331", "prediction": "all x.(Distance(x) -> Feet(x))", "score": 0}
{"id": "eqasc_validation_1332", "prediction": "all x y.((MeterStick(x) & Foot(y)) -> MeasuresFeet(x,y))", "score": 0}
{"id": "eqasc_validation_1332", "prediction": "all x.(MeterStick(x) -> MeasuresFeet(x))", "score": 0}
{"id": "eqasc_validation_1332", "prediction": "all x y z.((MeterStick(x) & Foot(y) & Foot(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1332", "prediction": "all x.((MeterStick(x) & MeasuresFeet(x)) -> CanBeUsedToMeasureFeet(x))", "score": 0}
{"id": "eqasc_validation_1332", "prediction": "all x y.((MeterStick(x) & Foot(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1332", "prediction": "all x.((MeterStick(x) & MeasureFeet(x)) -> CanBeUsedToMeasureFeet(x))", "score": 0}
{"id": "eqasc_validation_1332", "prediction": "all x y z.((MeterStick(x) & Foot(y) & Foot(z)) -> MeasuresFeet(x,y,z))", "score": 0}
{"id": "eqasc_validation_1332", "prediction": "all x y.((MeterStick(x) & Foot(y) & Measures(x,y)) -> CanBeUsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1332", "prediction": "all x y.((MeterStick(x) & Foot(y)) -> MeasureFeet(x,y))", "score": 0}
{"id": "eqasc_validation_1332", "prediction": "all x.(MeterStick(x) -> MeasureFeet(x))", "score": 0}
{"id": "eqasc_validation_1332", "prediction": "all x.(MeterStick(x) -> (MeasuresFeet(x) & MeasuresFeet(x)))", "score": 0}
{"id": "eqasc_validation_1332", "prediction": "all x.(MeasuresFeet(x) -> (MeterStick(x) & MeasuresFeet(x)))", "score": 0}
{"id": "eqasc_validation_1332", "prediction": "all x y.((MeterStick(x) & Foot(y)) -> CanMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1332", "prediction": "all x y z.((MeterStick(x) & Foot(y) & Foot(z)) -> CanMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1332", "prediction": "all x y z.((MeterStick(x) & Foot(y) & Foot(z)) -> MeasureFeet(x,y,z))", "score": 0}
{"id": "eqasc_validation_1332", "prediction": "all x y.((MeterStick(x) & Foot(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1333", "prediction": "all x.(TransactionMeasurement(x) -> Calculated(x))", "score": 0}
{"id": "eqasc_validation_1333", "prediction": "all x.(TransactionMeasurements(x) -> Calculated(x))", "score": 0}
{"id": "eqasc_validation_1333", "prediction": "all x y.((Transaction(x) & Transaction(y)) -> Calculated(x,y))", "score": 0}
{"id": "eqasc_validation_1333", "prediction": "all x y.((TransactionMeasurement(x) & Transaction(y)) -> Calculated(x,y))", "score": 0}
{"id": "eqasc_validation_1333", "prediction": "all x y.((TransactionMeasurement(x) & TransactionMeasurement(y)) -> Calculated(x,y))", "score": 0}
{"id": "eqasc_validation_1333", "prediction": "all x y.((Transaction(x) & TransactionMeasurement(y)) -> Calculated(x,y))", "score": 0}
{"id": "eqasc_validation_1333", "prediction": "all x.((TransactionMeasurement(x) & Calculated(x)) -> Calculated(x))", "score": 0}
{"id": "eqasc_validation_1333", "prediction": "all x y z.((Transaction(x) & Transaction(y) & Transaction(z)) -> Calculated(x,y,z))", "score": 0}
{"id": "eqasc_validation_1333", "prediction": "all x y.((TransactionMeasurement(x) & TransactionMeasurement(y)) -> Calculated(x))", "score": 0}
{"id": "eqasc_validation_1333", "prediction": "all x y.((TransactionMeasurement(x) & Transaction(y)) -> Calculated(x))", "score": 0}
{"id": "eqasc_validation_1333", "prediction": "all x y.((Transaction(x) & Measurement(y)) -> Calculated(x,y))", "score": 0}
{"id": "eqasc_validation_1333", "prediction": "all x.(Transaction(x) -> Calculated(x))", "score": 0}
{"id": "eqasc_validation_1333", "prediction": "all x y z.((Transaction(x) & Transaction(y) & Measurement(z)) -> Calculated(x,y,z))", "score": 0}
{"id": "eqasc_validation_1333", "prediction": "(CalculatedTransactionMeasurements(x) -> CalculatedTransactionMeasurements(x))", "score": 0}
{"id": "eqasc_validation_1333", "prediction": "all x.((TransactionMeasurements(x) & Calculated(x)) -> Calculated(x))", "score": 0}
{"id": "eqasc_validation_1333", "prediction": "all x y.((Transaction(x) & Transaction(y)) -> Calculated(x))", "score": 0}
{"id": "eqasc_validation_1334", "prediction": "all x y.((MeterStick(x) & Distance(y)) -> Calculates(x,y))", "score": 0}
{"id": "eqasc_validation_1334", "prediction": "all x y z.((MeterStick(x) & Distance(y) & Distance(z)) -> Calculates(x,y,z))", "score": 0}
{"id": "eqasc_validation_1334", "prediction": "all x.(MeterStick(x) -> CalculatesDistance(x))", "score": 0}
{"id": "eqasc_validation_1334", "prediction": "all x y.((MeterStick(x) & Distance(y)) -> CalculatesDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1334", "prediction": "all x y z.((MeterStick(x) & Distance(y) & Distance(z)) -> Calculated(x,y,z))", "score": 0}
{"id": "eqasc_validation_1334", "prediction": "all x y z.((MeterStick(x) & Distance(y) & Distance(z)) -> Calculate(x,y,z))", "score": 0}
{"id": "eqasc_validation_1334", "prediction": "all x y z.((MeterStick(x) & Distance(y) & Distance(z)) -> CalculatesDistance(x,y,z))", "score": 0}
{"id": "eqasc_validation_1334", "prediction": "all x y z.((MeterStick(x) & Distance(y) & Distance(z)) -> CalculatedWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1334", "prediction": "all x y.((MeterStick(x) & Distance(y)) -> CalculateDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1334", "prediction": "all x y.((MeterStick(x) & Distance(y)) -> Calculate(x,y))", "score": 0}
{"id": "eqasc_validation_1334", "prediction": "all x y.((MeterStick(x) & Distance(y) & Calculates(x,y)) -> UsedToCalculate(x,y))", "score": 0}
{"id": "eqasc_validation_1334", "prediction": "all x y.((MeterStick(x) & Distance(y)) -> CalculatedWith(x,y))", "score": 0}
{"id": "eqasc_validation_1334", "prediction": "all x.((MeterStick(x) & CalculatesDistance(x)) -> UsedToCalculateDistance(x))", "score": 0}
{"id": "eqasc_validation_1334", "prediction": "all x y z.((MeterStick(x) & Distance(y) & Distance(z)) -> CalculateDistance(x,y,z))", "score": 0}
{"id": "eqasc_validation_1334", "prediction": "all x y.((MeterStick(x) & Distance(y) & Calculate(x,y)) -> UsedToCalculate(x,y))", "score": 0}
{"id": "eqasc_validation_1334", "prediction": "all x y.((MeterStick(x) & Distance(y)) -> Calculated(x,y))", "score": 0}
{"id": "eqasc_validation_1335", "prediction": "all x y.((LossOfOzone(x) & Antarctica(y)) -> CreatedOzoneHole(x,y))", "score": 0}
{"id": "eqasc_validation_1335", "prediction": "all x y.((LossOfOzone(x) & Antarctica(y)) -> CreatesOzoneHole(x,y))", "score": 0}
{"id": "eqasc_validation_1335", "prediction": "all x.(LossOfOzone(x) -> CreatesOzoneHoleOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1335", "prediction": "all x y z.((LossOfOzone(x) & OzoneHole(y) & Antarctica(z)) -> CreatedOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_1335", "prediction": "all x.(LossOfOzone(x) -> CreatedOzoneHoleOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1335", "prediction": "all x y z.((LossOzone(x) & OzoneHole(y) & Antarctica(z)) -> CreatedOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_1335", "prediction": "all x y.((LossOzone(x) & Antarctica(y)) -> CreatedOzoneHole(x,y))", "score": 0}
{"id": "eqasc_validation_1335", "prediction": "all x y.((LossOzone(x) & Antarctica(y)) -> CreatesOzoneHole(x,y))", "score": 0}
{"id": "eqasc_validation_1335", "prediction": "all x y z.((LossOfOzone(x) & Antarctica(y) & OzoneHole(z)) -> CreatedOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_1335", "prediction": "all x y z.((LossOfOzone(x) & OzoneHole(y) & Antarctica(z)) -> CreatesOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_1335", "prediction": "all x y.((LossOfOzone(x) & Antarctica(y)) -> CreatedOzoneHoleOver(x,y))", "score": 0}
{"id": "eqasc_validation_1335", "prediction": "all x.(LossOfOzone(x) -> CreatesOzoneHole(x))", "score": 0}
{"id": "eqasc_validation_1335", "prediction": "all x.((LossOfOzone(x) & OzoneHoleOverAntarctica(x)) -> CreatedOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1335", "prediction": "all x.((LossOfOzone(x) & OzoneHole(x)) -> OverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1335", "prediction": "all x y z.((LossOzone(x) & OzoneHole(y) & Antarctica(z)) -> CreatesOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_1335", "prediction": "all x y z.((LossOfOzone(x) & OzoneHole(y) & Antarctica(z)) -> CreatedOver(y,z))", "score": 0}
{"id": "eqasc_validation_1336", "prediction": "all x y.((Scientist(x) & OzoneDisruptingIndustrialChemicals(y)) -> MajorCauseOfOzoneLoss(x,y))", "score": 0}
{"id": "eqasc_validation_1336", "prediction": "all x.((Scientist(x) & OzoneDisruptingIndustrialChemicals(x)) -> MajorCauseOfOzoneLoss(x))", "score": 0}
{"id": "eqasc_validation_1336", "prediction": "all x y.((Scientist(x) & OzoneDestroyingIndustrialChemicals(y)) -> MajorCauseOfOzoneLoss(x,y))", "score": 0}
{"id": "eqasc_validation_1336", "prediction": "all x.((Scientist(x) & OzoneDestroyingIndustrialChemicals(x)) -> MajorCauseOfOzoneLoss(x))", "score": 0}
{"id": "eqasc_validation_1336", "prediction": "all x y z.((Scientist(x) & OzoneDisruptingIndustrialChemicals(y) & OzoneLoss(z)) -> MajorCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_1336", "prediction": "all x y.((Scientist(x) & OzoneDisruptingIndustrialChemicals(y)) -> MajorCauseOfOzoneLoss(x))", "score": 0}
{"id": "eqasc_validation_1336", "prediction": "all x y.((Scientist(x) & OzoneDisturbingIndustrialChemicals(y)) -> MajorCauseOfOzoneLoss(x,y))", "score": 0}
{"id": "eqasc_validation_1336", "prediction": "all x y z.((Scientist(x) & OzoneDestroyingIndustrialChemicals(y) & OzoneLoss(z)) -> MajorCause(x,y,z))", "score": 0}
{"id": "eqasc_validation_1336", "prediction": "all x y.((Scientist(x) & OzoneDisruptingIndustrialChemistry(y)) -> MajorCauseOfOzoneLoss(x,y))", "score": 0}
{"id": "eqasc_validation_1336", "prediction": "all x.(Scientist(x) -> (OzoneDestroyingIndustrialChemicals(x) & MajorCauseOfOzoneLoss(x)))", "score": 0}
{"id": "eqasc_validation_1336", "prediction": "all x.((Scientist(x) & OzoneDisturbingIndustrialChemicals(x)) -> MajorCauseOfOzoneLoss(x))", "score": 0}
{"id": "eqasc_validation_1336", "prediction": "all x.(Scientist(x) -> (OzoneDisruptingIndustrialChemicals(x) & MajorCauseOfOzoneLoss(x)))", "score": 0}
{"id": "eqasc_validation_1336", "prediction": "all x y z.((Scientist(x) & OzoneDisruptingIndustrialChemicals(y) & OzoneLoss(z)) -> MajorCauseOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1337", "prediction": "all x y z.((Chemicals(x) & Ozone(y) & Antarctica(z)) -> CreatedHoleInOzone(x,y,z))", "score": 0}
{"id": "eqasc_validation_1337", "prediction": "all x y.((Chemicals(x) & Antarctica(y)) -> CreatedHoleInOzone(x,y))", "score": 0}
{"id": "eqasc_validation_1337", "prediction": "all x y z.((Chemicals(x) & Ozone(y) & Antarctica(z)) -> CreatedHoleInOzoneOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_1337", "prediction": "all x.(ChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemical", "score": -1}
{"id": "eqasc_validation_1337", "prediction": "all x.(ChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicals", "score": -1}
{"id": "eqasc_validation_1337", "prediction": "all x y z.((Chemistry(x) & Ozone(y) & Antarctica(z)) -> CreatedHoleInOzone(x,y,z))", "score": 0}
{"id": "eqasc_validation_1337", "prediction": "all x.(ChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemo", "score": -1}
{"id": "eqasc_validation_1337", "prediction": "all x.(ChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsCheming", "score": -1}
{"id": "eqasc_validation_1337", "prediction": "all x y.((Chemicals(x) & Antarctica(y)) -> CreatedHoleInOzoneOver(x,y))", "score": 0}
{"id": "eqasc_validation_1337", "prediction": "all x.(ChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChem", "score": -1}
{"id": "eqasc_validation_1337", "prediction": "all x y z.((Chemistry(x) & Ozone(y) & Antarctica(z)) -> CreatedHoleInOzoneOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_1337", "prediction": "all x.(ChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChem-", "score": -1}
{"id": "eqasc_validation_1337", "prediction": "all x.(ChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsP", "score": -1}
{"id": "eqasc_validation_1337", "prediction": "all x y.((Chemistry(x) & Antarctica(y)) -> CreatedHoleInOzone(x,y))", "score": 0}
{"id": "eqasc_validation_1337", "prediction": "all x.(ChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsD", "score": -1}
{"id": "eqasc_validation_1337", "prediction": "all x.(ChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemicalsChemsChemical", "score": -1}
{"id": "eqasc_validation_1338", "prediction": "all x.((AntarcticOzoneLayer(x) & ThreatenedByDepletion(x)) -> ThreatenedByDepletion(x))", "score": 0}
{"id": "eqasc_validation_1338", "prediction": "all x.((AntarcticAntarcticOzoneLayer(x) & ThreatenedByDepletion(x)) -> ThreatenedByDepletion(x))", "score": 0}
{"id": "eqasc_validation_1338", "prediction": "all x y.((AntarcticAntarcticOzoneLayer(x) & Depletion(y)) -> ThreatenedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1338", "prediction": "all x.(AntarcticOzoneLayer(x) -> ThreatenedByDepletion(x))", "score": 0}
{"id": "eqasc_validation_1338", "prediction": "all x y.((Antarctica(x) & OzoneLayer(y)) -> ThreatenedByDepletion(x,y))", "score": 0}
{"id": "eqasc_validation_1338", "prediction": "all x y.((AntarcticOzoneLayer(x) & Antarctica(y)) -> ThreatenedByDepletion(x,y))", "score": 0}
{"id": "eqasc_validation_1338", "prediction": "all x.((Antarctica(x) & OzonLayer(x)) -> ThreatenedByDepletion(x))", "score": 0}
{"id": "eqasc_validation_1338", "prediction": "all x y.((AntarcticOzoneLayer(x) & Depletion(y)) -> ThreatenedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1338", "prediction": "all x.(Antarctica(x) -> ThreatenedByDepletion(x))", "score": 0}
{"id": "eqasc_validation_1338", "prediction": "all x.((Antarctica(x) & OzoneLayer(x)) -> ThreatenedByDepletion(x))", "score": 0}
{"id": "eqasc_validation_1338", "prediction": "all x.(AntarcticAntarcticOzoneLayer(x) -> ThreatenedByDepletion(x))", "score": 0}
{"id": "eqasc_validation_1338", "prediction": "all x y.((Antarctica(x) & OzoneLayer(y) & ThreatenedByDepletion(x,y)) -> ThreatenedByDepletion(x,y))", "score": 0}
{"id": "eqasc_validation_1338", "prediction": "all x.(Antarctica(x) -> ThreatenedByOzoneLayer(x))", "score": 0}
{"id": "eqasc_validation_1338", "prediction": "all x y.((AntarcticAntarcticOzoneLayer(x) & Depletion(y)) -> Threatened(x,y))", "score": 0}
{"id": "eqasc_validation_1338", "prediction": "all x.(Antarctica(x) -> ThreatenedByDepletionOzoneLayer(x))", "score": 0}
{"id": "eqasc_validation_1338", "prediction": "all x.(OzoneLayer(x) -> ThreatenedByDepletion(x))", "score": 0}
{"id": "eqasc_validation_1339", "prediction": "all x.(LossOfOzone(x) -> OzoneHole(x))", "score": 0}
{"id": "eqasc_validation_1339", "prediction": "all x.(LossOzone(x) -> OzoneHole(x))", "score": 0}
{"id": "eqasc_validation_1339", "prediction": "all x.(LossOfOzone(x) -> CanBeOzoneHole(x))", "score": 0}
{"id": "eqasc_validation_1339", "prediction": "all x y.((LossOfOzone(x) & OzoneHole(y)) -> CanSignify(x,y))", "score": 0}
{"id": "eqasc_validation_1339", "prediction": "all x.(LossOfOzone(x) -> CanSignifyOzoneHole(x))", "score": 0}
{"id": "eqasc_validation_1339", "prediction": "all x y.((LossOzone(x) & OzoneHole(y)) -> CanSignify(x,y))", "score": 0}
{"id": "eqasc_validation_1339", "prediction": "all x y.((LossOfOzone(x) & OzoneHole(y)) -> Means(x,y))", "score": 0}
{"id": "eqasc_validation_1339", "prediction": "all x.(LossOfOzone(x) -> MeansOzoneHole(x))", "score": 0}
{"id": "eqasc_validation_1339", "prediction": "all x.(LossOfOzone(x) -> (OzoneHole(x) | OzoneHole(x)))", "score": 0}
{"id": "eqasc_validation_1339", "prediction": "all x.(LossOzone(x) -> CanBeOzoneHole(x))", "score": 0}
{"id": "eqasc_validation_1339", "prediction": "all x y.((LossOfOzone(x) & OzoneHole(y)) -> CanEnable(x,y))", "score": 0}
{"id": "eqasc_validation_1339", "prediction": "all x y.((LossOzone(x) & OzoneHole(y)) -> Means(x,y))", "score": 0}
{"id": "eqasc_validation_1339", "prediction": "all x y.((LossOfOzone(x) & OzoneHole(y)) -> CanMeanOzoneHole(x,y))", "score": 0}
{"id": "eqasc_validation_1339", "prediction": "all x.((LossOfOzone(x) & OzoneHole(x)) -> CanSignify(x,OzoneHole))", "score": 0}
{"id": "eqasc_validation_1339", "prediction": "all x y.((LossOzone(x) & OzoneHole(y)) -> CanEnable(x,y))", "score": 0}
{"id": "eqasc_validation_1339", "prediction": "all x.((LossOzone(x) & OzoneHole(x)) -> CanSignify(x,OzoneHole))", "score": 0}
{"id": "eqasc_validation_1340", "prediction": "all x.((HoleInOzoneLayer(x) & OverAntarctica(x)) -> GlobalWarming(x))", "score": 0}
{"id": "eqasc_validation_1340", "prediction": "all x.(GlobalWarming(x) -> (HoleInOzoneLayer(x) & OverAntarctica(x)))", "score": 0}
{"id": "eqasc_validation_1340", "prediction": "all x.(GlobalWarming(x) -> HoleInOzoneLayerOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1340", "prediction": "all x.(GlobalWarming(x) -> HoleInOzoneLayer(x))", "score": 0}
{"id": "eqasc_validation_1340", "prediction": "all x y z.((GlobalWarming(x) & HoleInOzoneLayer(y) & Antarctica(z)) -> GlobalWarming(x,y,z))", "score": 0}
{"id": "eqasc_validation_1340", "prediction": "all x y z.((GlobalWarming(x) & HoleInOzoneLayer(y) & Antarctica(z)) -> GlobalWarming(x))", "score": 0}
{"id": "eqasc_validation_1340", "prediction": "all x y.((HoleInOzoneLayer(x) & Antarctica(y)) -> GlobalWarming(x))", "score": 0}
{"id": "eqasc_validation_1340", "prediction": "all x y.((GlobalWarming(x) & HoleInOzoneLayer(y)) -> OverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1340", "prediction": "all x.((HoleInOzoneLayer(x) & Antarctica(x)) -> GlobalWarming(x))", "score": 0}
{"id": "eqasc_validation_1340", "prediction": "all x y.((GlobalWarming(x) & HoleInOzoneLayer(y) & OverAntarctica(x)) -> GlobalWarming(x))", "score": 0}
{"id": "eqasc_validation_1340", "prediction": "all x y.((GlobalWarming(x) & HoleInOzoneLayer(y)) -> OverAntarctica(x,y))", "score": 0}
{"id": "eqasc_validation_1341", "prediction": "all x y.((GlobalWarming(x) & OzoneHole(y)) -> Created(x,y))", "score": 0}
{"id": "eqasc_validation_1341", "prediction": "all x.(GlobalWarming(x) -> CreatedOzoneHole(x))", "score": 0}
{"id": "eqasc_validation_1341", "prediction": "all x y z.((GlobalWarming(x) & OzoneHole(y) & GlobalWarming(z)) -> Created(x,y,z))", "score": 0}
{"id": "eqasc_validation_1341", "prediction": "all x y z.((GlobalWarming(x) & OzoneHole(y) & OzoneHole(z)) -> Created(x,y,z))", "score": 0}
{"id": "eqasc_validation_1341", "prediction": "all x y.((GlobalWarming(x) & OzonHole(y)) -> Created(x,y))", "score": 0}
{"id": "eqasc_validation_1341", "prediction": "all x y z.((GlobalWarming(x) & OzoneHole(y) & Ozone(z)) -> Created(x,y,z))", "score": 0}
{"id": "eqasc_validation_1341", "prediction": "all x y z.((GlobalWarming(x) & OzoneHole(y) & GlobalWarming(z)) -> Created(x,y))", "score": 0}
{"id": "eqasc_validation_1341", "prediction": "all x y z.((GlobalWarming(x) & OzoneHole(y) & OzoneHole(z)) -> Created(x,y))", "score": 0}
{"id": "eqasc_validation_1341", "prediction": "all x y z.((GlobalWarming(x) & OzoneHole(y) & GlobalWarming(z)) -> CreatedOzoneHole(x,y,z))", "score": 0}
{"id": "eqasc_validation_1341", "prediction": "all x y.((GlobalWarming(x) & OzoneHole(y)) -> Creates(x,y))", "score": 0}
{"id": "eqasc_validation_1341", "prediction": "all x y z.((GlobalWarming(x) & OzoneHole(y) & GlobalWarming(z)) -> Creates(x,y,z))", "score": 0}
{"id": "eqasc_validation_1341", "prediction": "all x y z.((GlobalWarming(x) & OzonHole(y) & GlobalWarming(z)) -> Created(x,y,z))", "score": 0}
{"id": "eqasc_validation_1341", "prediction": "all x y z.((GlobalWarming(x) & OzonHole(y) & OzoneHole(z)) -> Created(x,y,z))", "score": 0}
{"id": "eqasc_validation_1341", "prediction": "all x y z.((GlobalWarming(x) & OzoneHole(y)) -> Created(x,y))", "score": 0}
{"id": "eqasc_validation_1341", "prediction": "all x y z.((GlobalWarming(x) & OzonHole(y) & Ozone(z)) -> Created(x,y,z))", "score": 0}
{"id": "eqasc_validation_1341", "prediction": "all x y z.((GlobalWarming(x) & OzoneHole(y) & OzoneHole(z)) -> Creates(x,y,z))", "score": 0}
{"id": "eqasc_validation_1342", "prediction": "all x.(OzoneDepletion(x) -> CausesGlobalWarming(x))", "score": 0}
{"id": "eqasc_validation_1342", "prediction": "all x y.((OzoneDepletion(x) & GlobalWarming(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_1342", "prediction": "all x.(OzoneDepletion(x) -> GlobalWarming(x))", "score": 0}
{"id": "eqasc_validation_1342", "prediction": "all x.((OzoneDepletion(x) & GlobalWarming(x)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_1342", "prediction": "all x.(OzoneDefpletion(x) -> CausesGlobalWarming(x))", "score": 0}
{"id": "eqasc_validation_1342", "prediction": "all x y.((OzoneDefpletion(x) & GlobalWarming(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_1342", "prediction": "all x y z.((OzoneDepletion(x) & GlobalWarming(y) & Ozone(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1342", "prediction": "all x y z.((OzoneDepletion(x) & GlobalWarming(y) & Temperature(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1342", "prediction": "all x.(OzoneDepletionCausesGlobalWarming(x) -> CausesGlobalWarming(x))", "score": 0}
{"id": "eqasc_validation_1342", "prediction": "all x.(OzoneDepletionCausesGlobalWarming(x) -> Causes(x))", "score": 0}
{"id": "eqasc_validation_1342", "prediction": "all x.((OzoneDepletion(x) & CausesGlobalWarming(x)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_1342", "prediction": "all x.((OzoneDepletion(x) & GlobalWarming(x)) -> Causes(x))", "score": 0}
{"id": "eqasc_validation_1342", "prediction": "all x.(OzoneDepletionCausesGlobalWarming(x) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_1342", "prediction": "all x y.((OzoneDepletion(x) & GlobalWarming(y)) -> Cause(x,y))", "score": 0}
{"id": "eqasc_validation_1342", "prediction": "all x.((OzoneDepletion(x) & GlobalWarming(x)) -> Causes(x,Ozone,GlobalWarming))", "score": 0}
{"id": "eqasc_validation_1343", "prediction": "all x y z.((Hole(x) & Antarctica(y) & Antarctica(z)) -> CausesGlobalWarming(x,y,z))", "score": 0}
{"id": "eqasc_validation_1343", "prediction": "all x y.((Hole(x) & Antarctica(y)) -> CausesGlobalWarming(x,y))", "score": 0}
{"id": "eqasc_validation_1343", "prediction": "all x y.((HoleOverAntarctica(x) & Antarctica(y)) -> CausesGlobalWarming(x,y))", "score": 0}
{"id": "eqasc_validation_1343", "prediction": "all x y.((HoleOverAntartica(x) & Antarctica(y)) -> CausesGlobalWarming(x,y))", "score": 0}
{"id": "eqasc_validation_1343", "prediction": "all x y.((HoleOver(x,y) & Antarctica(y)) -> CausesGlobalWarming(x,y))", "score": 0}
{"id": "eqasc_validation_1343", "prediction": "all x y z.((HoleOverAntarctica(x) & Antarctica(y) & GlobalWarming(z)) -> CausesGlobalWarming(x,y,z))", "score": 0}
{"id": "eqasc_validation_1343", "prediction": "all x y z.((Hole(x) & Antarctica(y) & GlobalWarming(z)) -> CausesGlobalWarming(x,y,z))", "score": 0}
{"id": "eqasc_validation_1343", "prediction": "all x y z.((HoleOverAntartica(x) & Antarctica(y) & GlobalWarming(z)) -> CausesGlobalWarming(x,y,z))", "score": 0}
{"id": "eqasc_validation_1343", "prediction": "all x y.((HoleOverAntarctica(x) & HoleOverAntarctica(y)) -> CausesGlobalWarming(x,y))", "score": 0}
{"id": "eqasc_validation_1343", "prediction": "all x.((HoleOverAntarctica(x) & CausesGlobalWarming(x)) -> CausesGlobalWarming(x))", "score": 0}
{"id": "eqasc_validation_1343", "prediction": "all x y z.((Hole(x) & Antarctica(y) & GlobalWarming(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1343", "prediction": "all x y z.((Hole(x) & Antarctica(y) & Antarctica(z) & Over(x,y,z)) -> CausesGlobalWarming(x))", "score": 0}
{"id": "eqasc_validation_1343", "prediction": "all x y.((Hole(x) & Antarctica(y) & Over(x,y)) -> CausesGlobalWarming(x))", "score": 0}
{"id": "eqasc_validation_1343", "prediction": "all x y z.((Hole(x) & Antarctica(y) & Antarctica(z)) -> GlobalWarming(x,y,z))", "score": 0}
{"id": "eqasc_validation_1343", "prediction": "all x y.((HoleOverAntarctica(x) & CausesGlobalWarming(y)) -> CausesGlobalWarming(x,y))", "score": 0}
{"id": "eqasc_validation_1343", "prediction": "all x y z.((HoleOver(x,y) & Antarctica(z)) -> CausesGlobalWarming(x,z))", "score": 0}
{"id": "eqasc_validation_1344", "prediction": "all x.(Ozone(x) -> NaturalComponentOfAtmosphere(x))", "score": 0}
{"id": "eqasc_validation_1344", "prediction": "all x.(Ozone(x) -> (NaturalComponentOfAtmosphere(x) & NaturalComponentOfAtmosphere(x)))", "score": 0}
{"id": "eqasc_validation_1344", "prediction": "all x y.((Ozone(x) & Atmosphere(y)) -> NaturalComponent(x,y))", "score": 0}
{"id": "eqasc_validation_1344", "prediction": "all x y.((Ozone(x) & Atmosphere(y)) -> NaturalComponentOf(x,y))", "score": 0}
{"id": "eqasc_validation_1344", "prediction": "all x.((Ozone(x) & NaturalComponentOfAtmosphere(x)) -> NaturalComponentOfAtmosphere(x))", "score": 0}
{"id": "eqasc_validation_1344", "prediction": "Ozone (NaturalComponentOfAtmosphere(Ozone))", "score": 0}
{"id": "eqasc_validation_1344", "prediction": "all x y.((Ozone(x) & NaturalComponentOfAtmosphere(y)) -> NaturalComponentOfAtmosphere(x,y))", "score": 0}
{"id": "eqasc_validation_1344", "prediction": "all x y.((Ozone(x) & NaturalComponentOfAtmosphere(y)) -> Ozone(x))", "score": 0}
{"id": "eqasc_validation_1344", "prediction": "all x.((Ozone(x) & NaturalComponentOfAtmosphere(x)) -> Ozone(x))", "score": 0}
{"id": "eqasc_validation_1344", "prediction": "Ozone (Ozone) -> NaturalComponentOfAtmosphere(Ozone))", "score": -1}
{"id": "eqasc_validation_1344", "prediction": "All x.(Ozone(x) -> NaturalComponentOfAtmosphere(x))", "score": -1}
{"id": "eqasc_validation_1344", "prediction": "all x.(Ozone(x) -> (NaturalComponentOfAtmosphere(x) & AtmosphereComponentOfAtmosphere(x)))", "score": 0}
{"id": "eqasc_validation_1344", "prediction": "Ozone (NaturalComponentOfAtmosphere(ozone) & NaturalComponentOfAtmosphere(ozone))", "score": -1}
{"id": "eqasc_validation_1344", "prediction": "all x y.((Ozone(x) & NaturalComponentOfAtmosphere(y)) -> Atmosphere(x,y))", "score": 0}
{"id": "eqasc_validation_1345", "prediction": "all x y.((LossOfNaturalComponentOfAtmosphere(x) & NaturalComponentOfAtmosphere(y)) -> CreatedHoleOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1345", "prediction": "all x y z.((LossOfNaturalComponentOfAtmosphere(x) & NaturalComponentOfAtmosphere(y) & Antarctica(z)) -> CreatedHoleOverAntarctica(x,z))", "score": 0}
{"id": "eqasc_validation_1345", "prediction": "all x y.((LossOfNaturalComponentOfAtmosphere(x) & NaturalComponentOfAtmosphere(y)) -> CreatedHoleOverAntarctica(x,y))", "score": 0}
{"id": "eqasc_validation_1345", "prediction": "all x y.((LossOfNaturalComponentOfAtmosphere(x) & HoleOverAntarctica(y)) -> CreatedOverAntarctica(x,y))", "score": 0}
{"id": "eqasc_validation_1345", "prediction": "all x y z.((LossOfNaturalComponentOfAtmosphere(x) & NaturalComponentOfAtmosphere(y) & Antarctica(z)) -> CreatedHoleOverAntarctica(x,y,z))", "score": 0}
{"id": "eqasc_validation_1345", "prediction": "all x y z.((LossOfNaturalComponentOfAtmosphere(x) & NaturalComponentOfAtmosphere(y) & NaturalComponentOfAtmosphere(z)) -> CreatedHoleOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1345", "prediction": "all x y.((LossOfNaturalComponentOfAtmosphere(x) & LossOfNaturalComponentOfAtmosphere(x)) -> CreatedHoleOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1345", "prediction": "all x y.((LossOfNaturalComponentOfAtmosphere(x) & LossOfNaturalComponentOfAtmosphere(y)) -> CreatedHoleOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1345", "prediction": "all x y.((LossOfNaturalComponentOfAtmosphere(x) & LossOfNaturalComponentOfAtmosphere(x)) -> CreatedHoleOverAntarctica(y))", "score": 0}
{"id": "eqasc_validation_1345", "prediction": "all x y z.((LossOfNaturalComponentOfAtmosphere(x) & HoleOverAntarctica(y) & LostOfNaturalComponentOfAtmosphere(z)) -> CreatedHoleOverAntarctica(x,y,z))", "score": 0}
{"id": "eqasc_validation_1345", "prediction": "all x y z.((LossOfNaturalComponentOfAtmosphere(x) & HoleOverAntarctica(y) & LossOfNaturalComponentOfAtmosphere(z)) -> CreatedHoleOverAntarctica(x,y,z))", "score": 0}
{"id": "eqasc_validation_1345", "prediction": "all x y.((LossOfNaturalComponentOfAtmosphere(x) & LostOfNaturalComponentOfAtmosphere(x)) -> CreatedHoleOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1345", "prediction": "all x y.((LossOfNaturalComponentOfAtmosphere(x) & LostOfNaturalComponentOfAtmosphere(x)) -> CreatedHoleOverAntarctica(y))", "score": 0}
{"id": "eqasc_validation_1345", "prediction": "all x y z.((LossOfNaturalComponentOfAtmosphere(x) & HoleOverAntarctica(y) & LossOfNaturalComponentOfAtmosphere(z)) -> CreatedHoleOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1345", "prediction": "all x y.((LossOfNaturalComponentOfAtmosphere(x) & LostOfNaturalComponentOfAtmosphere(y)) -> CreatedHoleOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1345", "prediction": "all x y z.((LossOfNaturalComponentOfAtmosphere(x) & HoleOverAntarctica(y) & LossOfNaturalComponentOfAtmosphere(z)) -> CreatedHoleOverAntarctica(y,z))", "score": 0}
{"id": "eqasc_validation_1346", "prediction": "all x.(OzoneLoss(x) -> (IntenseUltravioletRadiation(x) & UpperStratosphere(x)))", "score": 0}
{"id": "eqasc_validation_1346", "prediction": "all x.(OzoneLoss(x) -> (ProducedByIntenseUltravioletRadiation(x) & UpperStratosphere(x)))", "score": 0}
{"id": "eqasc_validation_1346", "prediction": "all x.(OzoneLoss(x) -> (ProducedByIntenseUVRadiation(x) & UpperStratosphere(x)))", "score": 0}
{"id": "eqasc_validation_1346", "prediction": "all x.(OzoneLoss(x) -> (ProducedByIntenseUltravioletRadiation(x) & InUpperStratosphere(x)))", "score": 0}
{"id": "eqasc_validation_1346", "prediction": "all x.(OzoneLoss(x) -> (IntenseUltravioletRadiation(x) & InUpperStratosphere(x)))", "score": 0}
{"id": "eqasc_validation_1346", "prediction": "all x.(OzoneLoss(x) -> (ProducedByIntenseUVRadiation(x) & InUpperStratosphere(x)))", "score": 0}
{"id": "eqasc_validation_1346", "prediction": "all x.(OzoneLoss(x) -> ProducedByIntenseUltravioletRadiation(x))", "score": 0}
{"id": "eqasc_validation_1346", "prediction": "all x.(OzoneLoss(x) -> (IntenseUVRadiation(x) & UpperStratosphere(x)))", "score": 0}
{"id": "eqasc_validation_1346", "prediction": "all x.(OzoneLoss(x) -> ProducedByIntenseUltravioletRadiationInUpperStratosphere(x))", "score": 0}
{"id": "eqasc_validation_1346", "prediction": "all x.(OzoneLoss(x) -> ProducedByIntenseUVRadiationInUpperStratosphere(x))", "score": 0}
{"id": "eqasc_validation_1346", "prediction": "all x y.((OzoneLoss(x) & IntenseUltravioletRadiation(y)) -> ProducedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1346", "prediction": "all x.(OzoneLoss(x) -> (IntenseUVRadiation(x) & InUpperStratosphere(x)))", "score": 0}
{"id": "eqasc_validation_1346", "prediction": "all x.(OzoneLoss(x) -> ProducedByIntenseUVRadiation(x))", "score": 0}
{"id": "eqasc_validation_1346", "prediction": "all x.(OzoneLossOzone(x) -> (IntenseUltravioletRadiation(x) & UpperStratosphere(x)))", "score": 0}
{"id": "eqasc_validation_1346", "prediction": "all x.(OzoneLoss(x) -> (IntenseUVRadiationInUpperStratosphere(x) & ProducesOzone(x)))", "score": 0}
{"id": "eqasc_validation_1346", "prediction": "all x.(OzoneLoss(x) -> (IntenseUltravioletRadiationInUpperStratosphere(x) & ProducedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1347", "prediction": "all x y z.((IntenseUltravioletRadiation(x) & UpperStratosphere(y) & Antarctica(z)) -> CreatedOzoneHole(x,y,z))", "score": 0}
{"id": "eqasc_validation_1347", "prediction": "all x y z.((IntenseUltravioletRadiation(x) & UpperStratosphere(y) & Antarctica(z)) -> CreatedOzoneHole(x,z))", "score": 0}
{"id": "eqasc_validation_1347", "prediction": "all x y.((IntenseUltravioletRadiation(x) & UpperStratosphere(y)) -> CreatedOzoneHoleOverAntarctica(x,y))", "score": 0}
{"id": "eqasc_validation_1347", "prediction": "all x y.((IntenseUltravioletRadiation(x) & UpperStratosphere(y)) -> CreatedOzoneHoleOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1347", "prediction": "all x.((IntenseUltravioletRadiation(x) & UpperStratosphere(x)) -> CreatedOzoneHoleOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1347", "prediction": "all x y.((IntenseUltravioletRadiation(x) & UpperStratosphere(y)) -> CreatedOzoneHole(x,y))", "score": 0}
{"id": "eqasc_validation_1347", "prediction": "all x y z.((IntenseUltravioletRadiation(x) & UpperStratosphere(y) & OzoneHole(z)) -> CreatedOverAntarctica(x,y,z))", "score": 0}
{"id": "eqasc_validation_1347", "prediction": "all x.((IntenseUltravioletRadiation(x) & UpperStratosphere(x)) -> CreatedOzoneHole(x))", "score": 0}
{"id": "eqasc_validation_1347", "prediction": "all x y z.((IntenseUltravioletRadiation(x) & UpperStratosphere(y) & Antarctica(z) & IntenseUltravioletRadiation(x,y)) -> CreatedOzoneHole(x,z))", "score": 0}
{"id": "eqasc_validation_1347", "prediction": "all x y z.((IntenseUltravioletRadiation(x) & UpperStratosphere(y) & Antarctica(z) & IntenseUltravioletRadiation(x,y,z)) -> CreatedOzoneHole(x,z))", "score": 0}
{"id": "eqasc_validation_1347", "prediction": "all x y z.((IntenseUVRadiation(x) & UpperStratosphere(y) & Antarctica(z)) -> CreatedOzoneHole(x,y,z))", "score": 0}
{"id": "eqasc_validation_1347", "prediction": "all x y z.((IntenseUVRadiation(x) & UpperStratosphere(y) & OzoneHole(z)) -> CreatedOverAntarctica(x,y,z))", "score": 0}
{"id": "eqasc_validation_1347", "prediction": "all x y z.((IntenseUltravioletRadiation(x) & UpperStratosphere(y) & Antarctica(z) & IntenseUltravioletRadiation(x,y,z)) -> CreatedOzoneHole(x))", "score": 0}
{"id": "eqasc_validation_1347", "prediction": "all x y z.((IntenseUltravioletRadiation(x) & UpperStratosphere(y) & Antarctica(z)) -> CreatedOzoneHoleOver(x,z))", "score": 0}
{"id": "eqasc_validation_1347", "prediction": "all x y.((IntenseUVRadiation(x) & UpperStratosphere(y)) -> CreatedOzoneHoleOverAntarctica(x,y))", "score": 0}
{"id": "eqasc_validation_1347", "prediction": "all x.((IntenseUltravioletRadiation(x) & UpperStratosphere(x) & Antarctica(x)) -> CreatedOzoneHole(x))", "score": 0}
{"id": "eqasc_validation_1348", "prediction": "all x.(OzoneLoss(x) -> Rapid(x))", "score": 0}
{"id": "eqasc_validation_1348", "prediction": "all x y.((OzoneLoss(x) & Ozone(y)) -> Rapid(x))", "score": 0}
{"id": "eqasc_validation_1348", "prediction": "all x.(Ozone(x) -> RapidLoss(x))", "score": 0}
{"id": "eqasc_validation_1348", "prediction": "All x.(OzoneLoss(x) -> Rapid(x))", "score": -1}
{"id": "eqasc_validation_1348", "prediction": "all x.((OzoneLoss(x) & Rapid(x)) -> OzoneLoss(x))", "score": 0}
{"id": "eqasc_validation_1348", "prediction": "all x.((OzoneLoss(x) & Rapid(x)) -> LossOzone(x))", "score": 0}
{"id": "eqasc_validation_1348", "prediction": "all x y.((OzoneLoss(x) & Ozone(y)) -> Rapid(x,y))", "score": 0}
{"id": "eqasc_validation_1348", "prediction": "all x y.((OzoneLoss(x) & -OzoneLoss(y)) -> Rapid(x))", "score": 0}
{"id": "eqasc_validation_1348", "prediction": "all x y.((OzoneLoss(x) & OzoneLoss(y)) -> Rapid(x))", "score": 0}
{"id": "eqasc_validation_1348", "prediction": "all x y.((OzoneLoss(x) & Region(y)) -> Rapid(x))", "score": 0}
{"id": "eqasc_validation_1348", "prediction": "all x y.((OzoneLoss(x) & Environment(y)) -> Rapid(x))", "score": 0}
{"id": "eqasc_validation_1348", "prediction": "all x y.((OzoneLoss(x) & Temperature(y)) -> Rapid(x))", "score": 0}
{"id": "eqasc_validation_1348", "prediction": "all x y.((OzoneLoss(x) & Term(y)) -> Rapid(x))", "score": 0}
{"id": "eqasc_validation_1348", "prediction": "all x.(OzoneLess(x) -> Rapid(x))", "score": 0}
{"id": "eqasc_validation_1348", "prediction": "all x.(Ozone(x) -> Rapid(x))", "score": 0}
{"id": "eqasc_validation_1349", "prediction": "all x.(Ozone(x) -> DisappearingRapidly(x))", "score": 0}
{"id": "eqasc_validation_1349", "prediction": "all x.(Ozone(x) -> DisappearsRapidly(x))", "score": 0}
{"id": "eqasc_validation_1349", "prediction": "all x y.((Ozone(x) & Ozone(y)) -> DisappearsRapidly(x,y))", "score": 0}
{"id": "eqasc_validation_1349", "prediction": "all x y.((Ozone(x) & Ozone(y)) -> DisappearingRapidly(x,y))", "score": 0}
{"id": "eqasc_validation_1349", "prediction": "all x.(Ozone(x) -> DissolvingRapidly(x))", "score": 0}
{"id": "eqasc_validation_1349", "prediction": "all x y.((Ozone(x) & Ozone(y)) -> DissolvingRapidly(x,y))", "score": 0}
{"id": "eqasc_validation_1349", "prediction": "all x y z.((Ozone(x) & Ozone(y) & Ozone(z)) -> DisappearsRapidly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1349", "prediction": "all x y z.((Ozone(x) & Ozone(y) & Ozone(z)) -> DisappearingRapidly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1349", "prediction": "all x y.((Ozone(x) & Ozone(y)) -> VerschiebingRapidly(x,y))", "score": 0}
{"id": "eqasc_validation_1349", "prediction": "all x.(Ozone(x) -> VerschiebingRapidly(x))", "score": 0}
{"id": "eqasc_validation_1349", "prediction": "all x y.((Ozone(x) & Ozone(y)) -> DisappearingRapidly(x))", "score": 0}
{"id": "eqasc_validation_1349", "prediction": "all x y.((Ozone(x) & Ozone(y)) -> DisappearsRapidly(x))", "score": 0}
{"id": "eqasc_validation_1349", "prediction": "all x y.((Ozone(x) & Ozone(y)) -> AppearsRapidly(x,y))", "score": 0}
{"id": "eqasc_validation_1349", "prediction": "all x y z.((Ozone(x) & Ozone(y) & Ozone(z)) -> DissolvingRapidly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1349", "prediction": "all x y z.((Ozone(x) & Ozone(y) & Ozone(z)) -> DisappearsRapidly(x,y))", "score": 0}
{"id": "eqasc_validation_1349", "prediction": "all x.(Ozone(x) -> AppearsRapidly(x))", "score": 0}
{"id": "eqasc_validation_1350", "prediction": "all x.(OzoneDepletion(x) -> (AllowsUltravioletRadiation(x) & CausesSkinCancer(x)))", "score": 0}
{"id": "eqasc_validation_1350", "prediction": "all x.(OzoneDepletion(x) -> (AllowsMoreUltravioletRadiation(x) & CausesSkinCancer(x)))", "score": 0}
{"id": "eqasc_validation_1350", "prediction": "all x.(OzoneDepletion(x) -> (AllowsMoreUVRadiation(x) & CausesSkinCancer(x)))", "score": 0}
{"id": "eqasc_validation_1350", "prediction": "all x.(OzoneDepletion(x) -> AllowsMoreUltravioletRadiation(x))", "score": 0}
{"id": "eqasc_validation_1350", "prediction": "all x.(OzoneDepletion(x) -> (AllowsMoreUltravioletRadiation(x) & CausesSkinCancerous(x)))", "score": 0}
{"id": "eqasc_validation_1350", "prediction": "all x.(OzoneDepletion(x) -> (AllowsUltravioletRadiation(x) & CausesSkinCancerous(x)))", "score": 0}
{"id": "eqasc_validation_1350", "prediction": "all x.(OzoneDepletion(x) -> (AcquiresMoreUltravioletRadiation(x) & CausesSkinCancer(x)))", "score": 0}
{"id": "eqasc_validation_1350", "prediction": "all x.(OzoneDepletion(x) -> (allowsMoreUltravioletRadiation(x) & CausesSkinCancer(x)))", "score": 0}
{"id": "eqasc_validation_1350", "prediction": "all x y.((OzoneDepletion(x) & UVRadiation(y)) -> (AllowsMore(x,y) & CausesSkinCancer(x)))", "score": 0}
{"id": "eqasc_validation_1350", "prediction": "all x.(OzoneDepletion(x) -> (AllowsMoreUVRadiation(x) & CausesSkinCancerous(x)))", "score": 0}
{"id": "eqasc_validation_1350", "prediction": "all x.(OzoneDepletion(x) -> (AcquiresMoreUVRadiation(x) & CausesSkinCancer(x)))", "score": 0}
{"id": "eqasc_validation_1350", "prediction": "all x.(OzoneDepletion(x) -> (allowsUltravioletRadiation(x) & CausesSkinCancer(x)))", "score": 0}
{"id": "eqasc_validation_1350", "prediction": "all x.(OzoneDepletion(x) -> AllowsMoreUVRadiation(x))", "score": 0}
{"id": "eqasc_validation_1350", "prediction": "all x y z.((OzoneDepletion(x) & UVRadiation(y) & SkinCancer(z)) -> AllowsMore(x,y,z))", "score": 0}
{"id": "eqasc_validation_1350", "prediction": "all x.(OzoneDepletion(x) -> (allowsMoreUVRadiation(x) & CausesSkinCancer(x)))", "score": 0}
{"id": "eqasc_validation_1350", "prediction": "all x y.((OzoneDepletion(x) & UVRadiation(y)) -> CausesSkinCancer(x,y))", "score": 0}
{"id": "eqasc_validation_1351", "prediction": "all x.((Person(x) & LivingNearAntartica(x)) -> ElevatedSkinCancerRiskDueToIncreasedUltravioletRadiation(x))", "score": 0}
{"id": "eqasc_validation_1351", "prediction": "all x.((Person(x) & LivingNearAntartica(x)) -> ElevatedSkinCancerRiskDueToIncreasedUVRadiation(x))", "score": 0}
{"id": "eqasc_validation_1351", "prediction": "all x.((Person(x) & LivingNearAtartica(x)) -> ElevatedSkinCancerRiskDueToIncreasedUltravioletRadiation(x))", "score": 0}
{"id": "eqasc_validation_1351", "prediction": "all x.((Person(x) & LivingNearAtartica(x)) -> ElevatedSkinCancerRiskDueToIncreasedUVRadiation(x))", "score": 0}
{"id": "eqasc_validation_1351", "prediction": "all x y.((Person(x) & LivingNearAntartica(x) & LivingNearAntartica(y)) -> ElevatedSkinCancerRiskDueToIncreasedUltravioletRadiation(x,y))", "score": 0}
{"id": "eqasc_validation_1351", "prediction": "all x y.((Person(x) & LivingNearAntartica(x)) -> ElevatedSkinCancerRiskDueToIncreasedUltravioletRadiation(x))", "score": 0}
{"id": "eqasc_validation_1351", "prediction": "all x y.((Person(x) & LivingNearAntartica(x)) -> ElevatedSkinCancerRiskDueToIncreasedUVRadiation(x))", "score": 0}
{"id": "eqasc_validation_1351", "prediction": "all x y.((Person(x) & LivingNearAntartica(x) & LivingNearAntartica(y)) -> ElevatedSkinCancerRiskDueToIncreasedUltravioletRadiation(x))", "score": 0}
{"id": "eqasc_validation_1351", "prediction": "all x y.((Person(x) & LivingNearAtartica(x) & LivingNearAtartica(y)) -> ElevatedSkinCancerRiskDueToIncreasedUltravioletRadiation(x,y))", "score": 0}
{"id": "eqasc_validation_1351", "prediction": "all x y.((Person(x) & LivingNearAntartica(x) & LivingNearAntartica(y)) -> ElevatedSkinCancerRiskDueToIncreasedUVRadiation(x,y))", "score": 0}
{"id": "eqasc_validation_1351", "prediction": "all x y.((Person(x) & LivingNearAntartica(x)) -> (ElevatedSkinCancerRisk(x) & IncreasedUltravioletRadiation(y)))", "score": 0}
{"id": "eqasc_validation_1351", "prediction": "all x y.((Person(x) & LivingNearAntartica(x) & LivingNearAntartica(y)) -> ElevatedSkinCancerRiskDueToIncreasedUVRadiation(x))", "score": 0}
{"id": "eqasc_validation_1351", "prediction": "all x y.((Person(x) & LivingNearAtartica(x) & LivingNearAtartica(y)) -> ElevatedSkinCancerRiskDueToIncreasedUltravioletRadiation(x))", "score": 0}
{"id": "eqasc_validation_1351", "prediction": "all x y.((Person(x) & LivingNearAntartica(x)) -> (ElevatedSkinCancerRisk(y) & IncreasedUltravioletRadiation(y)))", "score": 0}
{"id": "eqasc_validation_1351", "prediction": "all x y.((Person(x) & LivingNearAtartica(x) & LivingNearAtartica(y)) -> ElevatedSkinCancerRiskDueToIncreasedUVRadiation(x))", "score": 0}
{"id": "eqasc_validation_1351", "prediction": "all x y.((Person(x) & LivingNearAtartica(x) & LivingNearAtartica(y)) -> ElevatedSkinCancerRiskDueToIncreasedUVRadiation(x,y))", "score": 0}
{"id": "eqasc_validation_1352", "prediction": "all x.(Ozone(x) -> (AtmosphericChemical(x) & ProtectiveUVShield(x)))", "score": 0}
{"id": "eqasc_validation_1352", "prediction": "all x.(Ozone(x) -> (AtmosphericChemicalShield(x) & ProtectiveUVShield(x)))", "score": 0}
{"id": "eqasc_validation_1352", "prediction": "all x.(Ozone(x) -> (AtmosphericChemicalShield(x) & ProtectiveUltravioletShield(x)))", "score": 0}
{"id": "eqasc_validation_1352", "prediction": "all x.(Ozone(x) -> (AtmosphericChemical(x) & ProtectiveUltravioletShield(x)))", "score": 0}
{"id": "eqasc_validation_1352", "prediction": "all x.(Ozone(x) -> (KeyAtmosphericChemical(x) & ProtectiveUVShield(x)))", "score": 0}
{"id": "eqasc_validation_1352", "prediction": "all x.(Ozone(x) -> (KeyAtmosphericChemicalShield(x) & ProtectiveUVShield(x)))", "score": 0}
{"id": "eqasc_validation_1352", "prediction": "all x.(Ozone(x) -> (KeyAtmosphericChemicalShield(x) & ProtectiveUltravioletShield(x)))", "score": 0}
{"id": "eqasc_validation_1352", "prediction": "all x.((Ozone(x) & AtmosphericChemical(x) & ProtectiveUVShield(x)) -> KeyAtmosphericShield(x))", "score": 0}
{"id": "eqasc_validation_1352", "prediction": "all x.(Ozone(x) -> (KeyAtmosphericChemical(x) & ProtectiveUltravioletShield(x)))", "score": 0}
{"id": "eqasc_validation_1352", "prediction": "all x y.((Ozone(x) & AtmosphericChemical(y) & ProtectiveUVShield(x)) -> KeyAtmosphericShield(x,y))", "score": 0}
{"id": "eqasc_validation_1352", "prediction": "all x y.((Ozone(x) & AtmosphericChemical(y) & ProtectiveUVShield(x)) -> KeyAtmosphericShield(x))", "score": 0}
{"id": "eqasc_validation_1352", "prediction": "all x.(Ozone(x) -> (AtmosphericChemicalShield(x) & ProtectiveUniformShield(x)))", "score": 0}
{"id": "eqasc_validation_1352", "prediction": "all x y.((Ozone(x) & AtmosphericChemical(y) & ProtectiveUVShield(x)) -> Key(x,y))", "score": 0}
{"id": "eqasc_validation_1353", "prediction": "all x y.((HoleOverAntarctica(x) & Antarctica(y)) -> ReducesUVShielding(x,y))", "score": 0}
{"id": "eqasc_validation_1353", "prediction": "all x y z.((Hole(x) & Antarctica(y) & Antarctica(z)) -> ReducesUVShielding(x,y,z))", "score": 0}
{"id": "eqasc_validation_1353", "prediction": "all x.((HoleOverAntarctica(x) & ReducesUVShielding(x)) -> ReducesUVShielding(x))", "score": 0}
{"id": "eqasc_validation_1353", "prediction": "all x y.((HoleOverAntartica(x) & Antarctica(y)) -> ReducesUVShielding(x,y))", "score": 0}
{"id": "eqasc_validation_1353", "prediction": "all x y.((Hole(x) & Antarctica(y)) -> ReducesUVShielding(x,y))", "score": 0}
{"id": "eqasc_validation_1353", "prediction": "all x y z.((HoleOverAntarctica(x) & Antarctica(y) & UVShielding(z)) -> Reduces(x,y,z))", "score": 0}
{"id": "eqasc_validation_1353", "prediction": "all x y.((HoleOver(x,y) & Antarctica(y)) -> ReducesUVShielding(x,y))", "score": 0}
{"id": "eqasc_validation_1353", "prediction": "all x y.((HoleOverAntarctica(x) & Antarctica(y)) -> ReducesUltravioletShielding(x,y))", "score": 0}
{"id": "eqasc_validation_1353", "prediction": "all x y z.((Hole(x) & Antarctica(y) & Antarctica(z) & Over(x,y)) -> ReducesUVShielding(x,z))", "score": 0}
{"id": "eqasc_validation_1353", "prediction": "all x y z.((HoleOverAntarctica(x) & Antarctica(y) & UVShielding(z)) -> Reduces(x,z))", "score": 0}
{"id": "eqasc_validation_1353", "prediction": "all x y.((HoleOverAntarctica(x) & HoleOverAntarctica(y)) -> ReducesUVShielding(x,y))", "score": 0}
{"id": "eqasc_validation_1353", "prediction": "all x y z.((Hole(x) & Antarctica(y) & Antarctica(z)) -> ReducesUltravioletShielding(x,y,z))", "score": 0}
{"id": "eqasc_validation_1353", "prediction": "all x.((HoleOverAntartica(x) & ReducesUVShielding(x)) -> ReducesUVShielding(x))", "score": 0}
{"id": "eqasc_validation_1353", "prediction": "all x y.((HoleOverAntarctica(x) & Antarctica(y)) -> ReducesUVShielding(x))", "score": 0}
{"id": "eqasc_validation_1353", "prediction": "all x y z.((HoleOverAntartica(x) & Antarctica(y) & UVShielding(z)) -> Reduces(x,y,z))", "score": 0}
{"id": "eqasc_validation_1354", "prediction": "all x y.((AnnualOzoneHole(x) & Antarctica(y)) -> ObservedFromThe80s(x,y))", "score": 0}
{"id": "eqasc_validation_1354", "prediction": "all x y z.((AnnualOzoneHole(x) & Antarctica(y) & 1980s(z)) -> Observed(x,y,z))", "score": 0}
{"id": "eqasc_validation_1354", "prediction": "all x.((AnnualOzoneHole(x) & OverAntarctica(x)) -> ObservedFromThe80s(x))", "score": 0}
{"id": "eqasc_validation_1354", "prediction": "all x y.((AnnualOzoneHole(x) & Antarctica(y)) -> ObservedFromThe80s(x))", "score": 0}
{"id": "eqasc_validation_1354", "prediction": "all x y z.((OzoneHole(x) & Antarctica(y) & 1980s(z)) -> ObservedAnnually(x,y,z))", "score": 0}
{"id": "eqasc_validation_1354", "prediction": "all x y z.((AnnualOzoneHole(x) & Antarctica(y) & 1980s(z)) -> ObservedFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1354", "prediction": "all x y.((OzoneHole(x) & Antarctica(y)) -> ObservedFromThe80s(x,y))", "score": 0}
{"id": "eqasc_validation_1354", "prediction": "all x y.((AnnualOzoneHole(x) & Antarctica(y)) -> Observed(x,y))", "score": 0}
{"id": "eqasc_validation_1354", "prediction": "all x y z.((OzoneHole(x) & Antarctica(y) & 1980s(z)) -> Observed(x,y,z))", "score": 0}
{"id": "eqasc_validation_1354", "prediction": "all x y z.((OzoneHole(x) & Antarctica(y) & 1980s(z)) -> ObservedAntarctic(x,y,z))", "score": 0}
{"id": "eqasc_validation_1354", "prediction": "all x y.((AnnualOzoneHoleOverAntarctica(x) & 1980s(y)) -> Observed(x,y))", "score": 0}
{"id": "eqasc_validation_1354", "prediction": "all x.((OzoneHole(x) & OverAntarctica(x)) -> ObservedFromThe80s(x))", "score": 0}
{"id": "eqasc_validation_1354", "prediction": "all x y.((AnnualOzoneHole(x) & Antarctica(y)) -> ObservedFrom80s(x,y))", "score": 0}
{"id": "eqasc_validation_1354", "prediction": "all x y.((OzoneHole(x) & Antarctica(y)) -> ObservedFromThe80s(x))", "score": 0}
{"id": "eqasc_validation_1354", "prediction": "all x y.((AnnualOzoneHole(x) & Antarctica(y)) -> ObservedInThe80s(x,y))", "score": 0}
{"id": "eqasc_validation_1355", "prediction": "all x y.((LossOzone(x) & SouthPole(y)) -> CreatedHoleOver(x,y))", "score": 0}
{"id": "eqasc_validation_1355", "prediction": "all x y.((LossOzone(x) & SouthPole(y)) -> CreatedHoleOverSouthPole(x,y))", "score": 0}
{"id": "eqasc_validation_1355", "prediction": "all x y.((LossOzone(x) & SouthPole(y)) -> CreatedHole(x,y))", "score": 0}
{"id": "eqasc_validation_1355", "prediction": "all x y z.((LossOzone(x) & SouthPole(y) & Hole(z)) -> CreatedOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_1355", "prediction": "all x y z.((LossOzone(x) & SouthPole(y) & SouthPole(z)) -> CreatedHoleOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_1355", "prediction": "all x y.((LossOzone(x) & SouthPole(y)) -> CreatesHoleOverSouthPole(x,y))", "score": 0}
{"id": "eqasc_validation_1355", "prediction": "all x y.((LossOzone(x) & SouthPole(y)) -> CreatesHoleOver(x,y))", "score": 0}
{"id": "eqasc_validation_1355", "prediction": "all x y z.((LossOzone(x) & SouthPole(y) & Hole(z)) -> CreatedOver(x,z))", "score": 0}
{"id": "eqasc_validation_1355", "prediction": "all x y z.((LossOzone(x) & SouthPole(y) & HoleOver(z)) -> CreatedOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_1355", "prediction": "all x.(LossOzone(x) -> CreatedHoleOverSouthPole(x))", "score": 0}
{"id": "eqasc_validation_1355", "prediction": "all x y z.((LossOzone(x) & SouthPole(y) & Hole(z)) -> CreatedOverSouthPole(x,y,z))", "score": 0}
{"id": "eqasc_validation_1355", "prediction": "all x y z.((LossOzone(x) & SouthPole(y) & Hole(z)) -> CreatedOver(z,y))", "score": 0}
{"id": "eqasc_validation_1355", "prediction": "all x y z.((LossOzone(x) & SouthPole(y) & Hole(z)) -> CreatedOverSouthPole(x,z))", "score": 0}
{"id": "eqasc_validation_1355", "prediction": "all x y.((LossOfOzone(x) & SouthPole(y)) -> CreatedHoleOver(x,y))", "score": 0}
{"id": "eqasc_validation_1355", "prediction": "all x y z.((OzoneLoss(x) & SouthPole(y) & Hole(z)) -> CreatedOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_1356", "prediction": "all x.(Ozone(x) -> (TriatomicOxygen(x) & O3(x)))", "score": 0}
{"id": "eqasc_validation_1356", "prediction": "all x.(Ozone(x) -> (TriatomicOxygen(x) & O3.(Ozone(x))))", "score": -1}
{"id": "eqasc_validation_1356", "prediction": "all x.(Ozone(x) -> (TriatomicOxygen(x) & O3.(x))))", "score": -1}
{"id": "eqasc_validation_1356", "prediction": "all x.(Ozone(x) -> (TriatomicOxygen(x) & O3.(Ozone))))", "score": -1}
{"id": "eqasc_validation_1356", "prediction": "all x.(Ozone(x) -> (TriatomicOxygen(x) & TriatomicOxygen(x) & TriatomicOxygen(x) & TriatomicOxygen(x)))", "score": 0}
{"id": "eqasc_validation_1356", "prediction": "all x.(Ozone(x) -> (TriatomicOxygen(x) & TriatomicOxygen(x) & TriatomicOxygen(x) & TriatomicOxygen(x) & TriatomicOxygen(x)))", "score": 0}
{"id": "eqasc_validation_1356", "prediction": "all x.(Ozone(x) -> (TriatomicOxygen(x) & TriatomicOxygen(x) & O3(x)))", "score": 0}
{"id": "eqasc_validation_1356", "prediction": "all x.(Ozone(x) -> (TriatomicOxygen(x) | TriatomicOxygen(x)))", "score": 0}
{"id": "eqasc_validation_1356", "prediction": "all x.(Ozone(x) -> (TriatomicOxygen(x) & TriatomicOxygen(x) & TriatomicOxygen(x)))", "score": 0}
{"id": "eqasc_validation_1356", "prediction": "all x.(Ozone(x) -> (TriatomicOxygen(x) & O3.(Ozone) & TriatomicOxygen(x))))", "score": -1}
{"id": "eqasc_validation_1356", "prediction": "all x.(Ozone(x) -> (TriatomicOxygen(x) & TriatomicOxygen(x) & O3.(Ozone(x))))", "score": -1}
{"id": "eqasc_validation_1356", "prediction": "all x.(Ozone(x) -> (TriatomicOxygen(x) & O3.(Oxygen(x))))", "score": -1}
{"id": "eqasc_validation_1356", "prediction": "all x.(Ozone(x) -> (TriatomicOxygen(x) & O3.))", "score": -1}
{"id": "eqasc_validation_1356", "prediction": "all x.(Ozone(x) -> (TriatomicOxygen(x) & -TriatomicOxygen(x)))", "score": 0}
{"id": "eqasc_validation_1356", "prediction": "all x.(Ozone(x) -> (TriatomicOxygen(x) & TriatomicOxygen(x)))", "score": 0}
{"id": "eqasc_validation_1357", "prediction": "all x y.((LossOfTriatomicOxygen(x) & Antarctica(y)) -> CreatedTriatomicOxygenHole(x,y))", "score": 0}
{"id": "eqasc_validation_1357", "prediction": "all x y.((LossOfTriatomicOxygen(x) & Antarctica(y)) -> CreatesTriatomicOxygenHole(x,y))", "score": 0}
{"id": "eqasc_validation_1357", "prediction": "all x y z.((LossOfTriatomicOxygen(x) & TriatomicOxygen(y) & Antarctica(z)) -> CreatedTriatomicOxygenHole(x,y,z))", "score": 0}
{"id": "eqasc_validation_1357", "prediction": "all x y z.((LossOfTriatomicOxygen(x) & TriatomicOxygenHole(y) & Antarctica(z)) -> CreatedOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_1357", "prediction": "all x.(LossOfTriatomicOxygen(x) -> CreatedTriatomicOxygenHoleOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1357", "prediction": "all x y z.((LossOfTriatomicOxygen(x) & TriatomicOxygen(y) & Antarctica(z)) -> CreatesTriatomicOxygenHole(x,y,z))", "score": 0}
{"id": "eqasc_validation_1357", "prediction": "all x.(LossOfTriatomicOxygen(x) -> CreatesTriatomicOxygenHoleOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1357", "prediction": "all x y.((LossOfTriatomicOxygen(x) & Antarctica(y)) -> TriatomicOxygenHole(x,y))", "score": 0}
{"id": "eqasc_validation_1357", "prediction": "all x.((LossOfTriatomicOxygen(x) & TriatomicOxygenHole(x)) -> OverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1357", "prediction": "all x.(LossOfTriatomicOxygen(x) -> CreatesTriatomicOxygenHole(x))", "score": 0}
{"id": "eqasc_validation_1357", "prediction": "all x.(LossOfTriatomicOxygen(x) -> CreatedTriatomicOxygenHole(x))", "score": 0}
{"id": "eqasc_validation_1357", "prediction": "all x.((LossOfTriatomicOxygen(x) & TriatomicOxygenHole(x)) -> CreatedOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1357", "prediction": "all x y z.((LossOfTriatomicOxygen(x) & TriatomicOxygenHole(y) & Antarctica(z)) -> CreatedOver(y,z))", "score": 0}
{"id": "eqasc_validation_1357", "prediction": "all x y z.((LossOfTriatomicOxygen(x) & TriatomicOxygenHole(y) & Antarctica(z)) -> Created(x,y,z))", "score": 0}
{"id": "eqasc_validation_1357", "prediction": "all x.((LossOfTriatomicOxygen(x) & TriatomicOxygenHoleOverAntarctica(x)) -> CreatedOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1357", "prediction": "all x y z.((LossOfTriatomicOxygen(x) & TriatomicOxygen(y) & Antarctica(z)) -> CreatedThriatomicOxygenHole(x,y,z))", "score": 0}
{"id": "eqasc_validation_1358", "prediction": "all x.((HighMountain(x) & WellRoundedPeaks(x)) -> CollisionOfCrustalPlates(x))", "score": 0}
{"id": "eqasc_validation_1358", "prediction": "all x.((HighMountain(x) & WellRoundedPeak(x)) -> CollisionOfCrustalPlates(x))", "score": 0}
{"id": "eqasc_validation_1358", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeak(y) & CrustalPlate(z) & Collision(x,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1358", "prediction": "all x y.((HighMountain(x) & WellRoundedPeak(y) & CollisionOfCrustalPlates(x)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1358", "prediction": "all x y.((HighMountain(x) & WellRoundedPeak(y) & CollisionOfCrustalPlates(x,y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1358", "prediction": "all x y.((HighMountain(x) & WellRoundedPeak(x) & CrustalPlate(y) & Collision(x,y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1358", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeak(y) & CrustalPlate(z) & CollisionOf(x,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1358", "prediction": "all x.((HighMountain(x) & WellRoundedPeaks(x)) -> FormedByCrustalPlateCollision(x))", "score": 0}
{"id": "eqasc_validation_1358", "prediction": "all x.((HighMountain(x) & WellRoundedPeaks(x)) -> CanFormCrustalPlates(x))", "score": 0}
{"id": "eqasc_validation_1358", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeaks(y) & CrustalPlate(z) & Collision(x,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1358", "prediction": "all x.((HighMountain(x) & WellRoundedPeaks(x) & CollisionOfCrustalPlates(x)) -> FormsHighMountains(x))", "score": 0}
{"id": "eqasc_validation_1358", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeak(y) & CrasstalPlate(z) & Collision(x,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1358", "prediction": "all x.((HighMountain(x) & WellRoundedPeaks(x) & CollisionOfCrustalPlates(x)) -> FormedByCrustalPlates(x))", "score": 0}
{"id": "eqasc_validation_1358", "prediction": "all x y.((HighMountain(x) & WellRoundedPeak(y) & CollisionOfCrustalPlates(x)) -> Forms(x,y))", "score": 0}
{"id": "eqasc_validation_1358", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeak(y) & CrustalPlate(z) & Collision(x,z)) -> CanForm(x,y,z))", "score": 0}
{"id": "eqasc_validation_1358", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeak(y) & CrustalPlate(z) & Collision(x,z)) -> WellFormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1359", "prediction": "all x y.((Plate(x) & Plate(y) & Collide(x,y)) -> EarthquakeResult(x,y))", "score": 0}
{"id": "eqasc_validation_1359", "prediction": "all x.((PlatesCollide(x) & Earthquake(x)) -> CollisionResult(x))", "score": 0}
{"id": "eqasc_validation_1359", "prediction": "all x y.((Plate(x) & Plate(y) & Collide(x,y)) -> Earthquake(x))", "score": 0}
{"id": "eqasc_validation_1359", "prediction": "all x y.((Plate(x) & Plate(y) & Collide(x,y)) -> EarthquakeResult(x))", "score": 0}
{"id": "eqasc_validation_1359", "prediction": "all x y z.((Plate(x) & Plate(y) & Earthquake(z)) -> Collide(x,y,z))", "score": 0}
{"id": "eqasc_validation_1359", "prediction": "all x.((Plate(x) & Collide(x)) -> EarthquakeResult(x))", "score": 0}
{"id": "eqasc_validation_1359", "prediction": "all x.((PlatesCollide(x) & Earthquake(x)) -> CollideResult(x))", "score": 0}
{"id": "eqasc_validation_1359", "prediction": "all x y.((Plate(x) & Plate(y)) -> Collide(x,y))", "score": 0}
{"id": "eqasc_validation_1359", "prediction": "all x y z.((Plate(x) & Plate(y) & Earthquake(z)) -> Collides(x,y,z))", "score": 0}
{"id": "eqasc_validation_1359", "prediction": "all x.((PlatesCollide(x) & EarthquakeResult(x)) -> Collide(x))", "score": 0}
{"id": "eqasc_validation_1359", "prediction": "all x y.((Plate(x) & Plate(y) & Collides(x,y)) -> EarthquakeResult(x,y))", "score": 0}
{"id": "eqasc_validation_1359", "prediction": "all x.((PlateCollide(x) & Earthquake(x)) -> CollisionResult(x))", "score": 0}
{"id": "eqasc_validation_1359", "prediction": "all x y.((Plate(x) & Plate(y) & Collide(x,y)) -> Earthquake(x,y))", "score": 0}
{"id": "eqasc_validation_1359", "prediction": "all x.((Plate(x) & Collide(x)) -> Earthquake(x))", "score": 0}
{"id": "eqasc_validation_1360", "prediction": "all x y z.((Earthquake(x) & HighMountain(y) & WellRoundedPeak(z)) -> CanResultInFormation(x,y,z))", "score": 0}
{"id": "eqasc_validation_1360", "prediction": "all x y.((Earthquake(x) & HighMountain(y) & WellRoundedPeak(y)) -> CanResultInFormation(x,y))", "score": 0}
{"id": "eqasc_validation_1360", "prediction": "all x.(Earthquake(x) -> (HighMountains(x) & WellRoundedPeaks(x)))", "score": 0}
{"id": "eqasc_validation_1360", "prediction": "all x y z.((Earthquake(x) & HighMountain(y) & WellRoundedPeak(z)) -> Forms(x,y,z))", "score": 0}
{"id": "eqasc_validation_1360", "prediction": "all x y.((Earthquake(x) & HighMountain(y) & WellRoundedPeak(y)) -> Forms(x,y))", "score": 0}
{"id": "eqasc_validation_1360", "prediction": "all x y z.((Earthquake(x) & HighMountain(y) & WellRoundedPeak(z)) -> Formation(x,y,z))", "score": 0}
{"id": "eqasc_validation_1360", "prediction": "all x y.((Earthquake(x) & HighMountain(y) & WellRoundedPeaks(y)) -> CanResultInFormation(x,y))", "score": 0}
{"id": "eqasc_validation_1360", "prediction": "all x y.((Earthquake(x) & HighMountain(y) & WellRoundedPeak(y)) -> Formation(x,y))", "score": 0}
{"id": "eqasc_validation_1360", "prediction": "all x.(Earthquake(x) -> (HighMountain(x) & WellRoundedPeaks(x)))", "score": 0}
{"id": "eqasc_validation_1360", "prediction": "all x y.((Earthquake(x) & HighMountain(y) & WellRoundedPeak(y)) -> FormationOf(x,y))", "score": 0}
{"id": "eqasc_validation_1360", "prediction": "all x y z.((Earthquake(x) & HighMountain(y) & WellRoundedPeak(z)) -> FormationOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1360", "prediction": "all x y z.((Earthquake(x) & HighMountain(y) & WellRoundedPeak(z)) -> CanResultInFormationOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1360", "prediction": "all x y.((Earthquake(x) & HighMountain(y) & WellRoundedPeaks(y)) -> Forms(x,y))", "score": 0}
{"id": "eqasc_validation_1360", "prediction": "all x y z.((Earthquake(x) & HighMountain(y) & WellRoundedPeak(z)) -> FormsHighMountainsWithWellRoundedPeaks(x,y,z))", "score": 0}
{"id": "eqasc_validation_1360", "prediction": "all x y.((Earthquake(x) & HighMountain(y) & WellRoundedPeak(y)) -> CanResultInFormationOf(x,y))", "score": 0}
{"id": "eqasc_validation_1360", "prediction": "all x y.((Earthquake(x) & HighMountain(y) & WellRoundedPeak(y)) -> FormsHighMountainsWithWellRoundedPeaks(x,y))", "score": 0}
{"id": "eqasc_validation_1361", "prediction": "all x.((Earthquake(x) & EarthsCrustalPlatesGrindAndShiftAlongOneAnother(x)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1361", "prediction": "all x y.((Earthquake(x) & EarthsCrustalPlates(y) & GrindAndShiftAlong(x,y)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1361", "prediction": "all x y.((Earthquake(x) & EarthsCrustalPlates(y) & GrindAndShiftAlong(y,x)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1361", "prediction": "all x y.((Earthquake(x) & EarthsCrustalPlates(y)) -> (Grinds(y,x) & ShiftsAlong(y,x)))", "score": 0}
{"id": "eqasc_validation_1361", "prediction": "all x y.((Earthquake(x) & EarthsCrustalPlates(y) & GrindAndShift(x,y)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1361", "prediction": "all x y z.((Earthquake(x) & EarthsCrustalPlates(y) & EarthsCrustalPlates(z)) -> (Grinds(y,z) & ShiftsAlong(y,z)))", "score": 0}
{"id": "eqasc_validation_1361", "prediction": "all x y.((Earthquake(x) & EarthsCrustalPlates(y)) -> (Grinds(x,y) & ShiftsAlong(x,y)))", "score": 0}
{"id": "eqasc_validation_1361", "prediction": "all x y z.((Earthquake(x) & EarthsCrustalPlates(y) & EarthsCrustalPlates(z) & GrindAndShiftAlong(y,z)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1361", "prediction": "all x.((Earthquake(x) & EarthsCrustalPlatesGrindAndShiftAlong(x)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1361", "prediction": "all x y z.((Earthquake(x) & EarthsCrustalPlates(y) & EarthsCrustalPlates(z) & GrindAndShiftAlong(x,y,z)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1361", "prediction": "all x y.((Earthquake(x) & EarthsCrustalPlates(y) & GrindAndShift(y,x)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1361", "prediction": "all x y.((Earthquake(x) & EarthsCrustalPlates(y) & GrindAndShiftAlong(y,x)) -> Occurs(x,y))", "score": 0}
{"id": "eqasc_validation_1361", "prediction": "all x y z.((Earthquake(x) & EarthsCrustalPlate(y) & EarthsCrustalPlate(z)) -> (Grinds(y,z) & ShiftsAlong(y,z)))", "score": 0}
{"id": "eqasc_validation_1361", "prediction": "all x.((Earthquake(x) & EarthsCrustalPlatesGrindAndShift(x)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1361", "prediction": "all x y z.((Earthquake(x) & EarthsCrustalPlates(y) & EarthsCrustalPlates(z) & GrindAndShift(y,z)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1361", "prediction": "all x y.((Earthquake(x) & EarthsCrustalPlates(y) & GrindAndShift(y,x)) -> Occurs(x,y))", "score": 0}
{"id": "eqasc_validation_1362", "prediction": "all x y.((Earthquake(x) & Area(y) & HighMountains(y) & WellRoundedPeaks(y)) -> CanOccur(x,y))", "score": 0}
{"id": "eqasc_validation_1362", "prediction": "all x y.((Earthquake(x) & Area(y) & HighMountains(y) & WellRoundedPeaks(y)) -> CanOccurIn(x,y))", "score": 0}
{"id": "eqasc_validation_1362", "prediction": "all x y.((Earthquake(x) & Area(y) & HighMountain(y) & WellRoundedPeak(y)) -> CanOccur(x,y))", "score": 0}
{"id": "eqasc_validation_1362", "prediction": "all x y.((Earthquake(x) & Area(y) & HighMountain(y) & WellRoundedPeak(y)) -> CanOccurIn(x,y))", "score": 0}
{"id": "eqasc_validation_1362", "prediction": "all x y.((Earthquake(x) & Area(y) & HighMountain(y) & WellRoundedPeaks(y)) -> CanOccur(x,y))", "score": 0}
{"id": "eqasc_validation_1362", "prediction": "all x y z.((Earthquake(x) & Area(y) & HighMountain(z) & WellRoundedPeak(z)) -> CanOccur(x,y,z))", "score": 0}
{"id": "eqasc_validation_1362", "prediction": "all x y z.((Earthquake(x) & Area(y) & HighMountain(z) & WellRoundedPeak(y)) -> CanOccur(x,y,z))", "score": 0}
{"id": "eqasc_validation_1362", "prediction": "all x y.((Earthquake(x) & Area(y) & HighMountain(y) & WellRoundedPeaks(y)) -> CanOccurIn(x,y))", "score": 0}
{"id": "eqasc_validation_1362", "prediction": "all x y z.((Earthquake(x) & Area(y) & HighMountain(z) & WellRoundedPeak(z)) -> CanOccurIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1362", "prediction": "all x y.((Earthquake(x) & Area(y)) -> (HighMountains(y) & WellRoundedPeaks(y)))", "score": 0}
{"id": "eqasc_validation_1362", "prediction": "all x y z.((Earthquake(x) & Area(y) & HighMountain(z) & WellRoundedPeaks(y)) -> CanOccur(x,y,z))", "score": 0}
{"id": "eqasc_validation_1362", "prediction": "all x y z.((Earthquake(x) & Area(y) & HighMountains(z) & WellRoundedPeaks(y)) -> CanOccur(x,y,z))", "score": 0}
{"id": "eqasc_validation_1362", "prediction": "all x y z.((Earthquake(x) & Area(y) & HighMountain(z) & WellRoundedPeak(y)) -> CanOccurIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1362", "prediction": "all x y z.((Earthquake(x) & Area(y) & HighMountain(z) & WellRoundedPeaks(y)) -> CanOccurIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1362", "prediction": "all x y z.((Earthquake(x) & Area(y) & HighMountains(z) & WellRoundedPeaks(y)) -> CanOccurIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1362", "prediction": "all x y z.((Earthquake(x) & Area(y) & HighMountain(z) & WellRoundedPeaks(z)) -> CanOccur(x,y,z))", "score": 0}
{"id": "eqasc_validation_1363", "prediction": "all x.(PlateTectonics(x) -> (GraduateMovementOfCrustalPlates(x) & OnSurfaceOfEarth(x)))", "score": 0}
{"id": "eqasc_validation_1363", "prediction": "all x.(PlateTectonics(x) -> (MovementOfCrustalPlates(x) & OnSurfaceOfEarth(x)))", "score": 0}
{"id": "eqasc_validation_1363", "prediction": "all x.(PlateTectonics(x) -> (GraduateMovementOfCrustalPlates(x) & OnEarthSurface(x)))", "score": 0}
{"id": "eqasc_validation_1363", "prediction": "all x.(PlateTectonics(x) -> (MovementOfCrustalPlates(x) & OnEarthSurface(x)))", "score": 0}
{"id": "eqasc_validation_1363", "prediction": "all x.(PlateTectonics(x) -> (ScientificMovementOfCrustalPlates(x) & OnSurfaceOfEarth(x)))", "score": 0}
{"id": "eqasc_validation_1363", "prediction": "all x y z.((PlateTectonics(x) & CrustalPlate(y) & EarthSurface(z)) -> ProgressiveMovement(x,y,z))", "score": 0}
{"id": "eqasc_validation_1363", "prediction": "all x y z.((PlateTectonics(x) & CrustalPlate(y) & EarthSurface(z)) -> MovesOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1363", "prediction": "all x y.((PlateTectonics(x) & CrustalPlate(y)) -> MovesOnSurfaceOfEarth(x,y))", "score": 0}
{"id": "eqasc_validation_1363", "prediction": "all x y z.((PlateTectonics(x) & CrustalPlate(y) & EarthSurface(z)) -> MovesOnSurface(x,y,z))", "score": 0}
{"id": "eqasc_validation_1363", "prediction": "all x y.((PlateTectonics(x) & EarthSurface(y)) -> ProgressiveMovementOfCrustalPlates(x,y))", "score": 0}
{"id": "eqasc_validation_1363", "prediction": "all x.(PlateTectonics(x) -> (CrustalPlatesMovement(x) & OnSurfaceOfEarth(x)))", "score": 0}
{"id": "eqasc_validation_1363", "prediction": "all x.(PlateTectonics(x) -> (GraduateMovementOfCrustalPlates(x) & SurfaceOfEarth(x)))", "score": 0}
{"id": "eqasc_validation_1364", "prediction": "all x.(PlateTectonics(x) -> (FormsHighMountains(x) & WellRoundedPeaks(x)))", "score": 0}
{"id": "eqasc_validation_1364", "prediction": "all x.(PlateTectonic(x) -> (FormsHighMountains(x) & WellRoundedPeaks(x)))", "score": 0}
{"id": "eqasc_validation_1364", "prediction": "all x y.((PlateTectonics(x) & HighMountain(y) & WellRoundedPeak(y)) -> CanForm(x,y))", "score": 0}
{"id": "eqasc_validation_1364", "prediction": "all x y.((PlateTectonics(x) & HighMountain(y) & WellRoundedPeak(y)) -> Forms(x,y))", "score": 0}
{"id": "eqasc_validation_1364", "prediction": "all x.(PlateTectonics(x) -> (FormHighMountains(x) & WellRoundedPeaks(x)))", "score": 0}
{"id": "eqasc_validation_1364", "prediction": "all x.(PlateTectonics(x) -> (FormsHighMountains(x) & FormsWellRoundedPeaks(x)))", "score": 0}
{"id": "eqasc_validation_1364", "prediction": "all x y z.((PlateTectonics(x) & HighMountain(y) & WellRoundedPeak(z)) -> CanForm(x,y,z))", "score": 0}
{"id": "eqasc_validation_1364", "prediction": "all x y.((PlateTectonics(x) & HighMountain(y) & WellRoundedPeaks(y)) -> CanForm(x,y))", "score": 0}
{"id": "eqasc_validation_1364", "prediction": "all x y.((PlateTectonics(x) & HighMountain(y) & WellRoundedPeaks(y)) -> Forms(x,y))", "score": 0}
{"id": "eqasc_validation_1364", "prediction": "all x y z.((PlateTectonics(x) & HighMountain(y) & WellRoundedPeak(z)) -> Forms(x,y,z))", "score": 0}
{"id": "eqasc_validation_1364", "prediction": "all x.(PlateTectonics(x) -> (HighMountains(x) & WellRoundedPeaks(x)))", "score": 0}
{"id": "eqasc_validation_1364", "prediction": "all x y.((PlateTectonics(x) & HighMountain(y) & WellRoundedPeaks(x)) -> CanForm(x,y))", "score": 0}
{"id": "eqasc_validation_1364", "prediction": "all x y.((PlateTectonics(x) & HighMountain(y) & WellRoundedPeaks(x)) -> Forms(x,y))", "score": 0}
{"id": "eqasc_validation_1364", "prediction": "all x.(PlateTectonics(x) -> FormsHighMountainsWithWellRoundedPeaks(x))", "score": 0}
{"id": "eqasc_validation_1364", "prediction": "all x.(PlateTectonics(x) -> (FormsHighMountainsWithWellRoundedPeaks(x)))", "score": 0}
{"id": "eqasc_validation_1364", "prediction": "all x.(PlateTectonics(x) -> (FormsHighMountains(x) & HasWellRoundedPeaks(x)))", "score": 0}
{"id": "eqasc_validation_1365", "prediction": "all x.(PlateTectonics(x) -> (StudiesCrustalPlates(x) & StudiesCrustalPlateBoundaries(x)))", "score": 0}
{"id": "eqasc_validation_1365", "prediction": "all x.(PlateTectonics(x) -> (StudiesCrustalPlates(x) & StudiesBoundaries(x)))", "score": 0}
{"id": "eqasc_validation_1365", "prediction": "all x.(PlateTectonics(x) -> (StudiesCrustalPlates(x) & StudiesCrustalBoundaries(x)))", "score": 0}
{"id": "eqasc_validation_1365", "prediction": "all x.(PlateTectonics(x) -> (StudyOfCrustalPlates(x) & StudyOfBoundaries(x)))", "score": 0}
{"id": "eqasc_validation_1365", "prediction": "all x y.((PlateTectonics(x) & CrustalPlate(y)) -> StudiesBoundaries(x,y))", "score": 0}
{"id": "eqasc_validation_1365", "prediction": "all x.(PlateTectonics(x) -> (StudyOfCrustalPlates(x) & StudiesBoundaries(x)))", "score": 0}
{"id": "eqasc_validation_1365", "prediction": "all x.(PlateTectonics(x) -> (StudiesCrustalPlates(x) & StudiesBorders(x)))", "score": 0}
{"id": "eqasc_validation_1365", "prediction": "all x.(PlateTectonics(x) -> (StudiesCrustalPlates(x) & StudiesCrustalPlatesBoundaries(x)))", "score": 0}
{"id": "eqasc_validation_1365", "prediction": "all x.(PlateTectonics(x) -> (StudiesCrustalPlates(x) & StudiesPlateBoundaries(x)))", "score": 0}
{"id": "eqasc_validation_1365", "prediction": "all x.(PlateTectonics(x) -> (StudiesCrustalPlates(x) & StudiesCrustalPlateBorders(x)))", "score": 0}
{"id": "eqasc_validation_1365", "prediction": "all x.(PlateTectonics(x) -> (StudiesCrustalPlatesAndBoundaries(x)))", "score": 0}
{"id": "eqasc_validation_1365", "prediction": "all x.(PlateTectonics(x) -> StudiesCrustalPlatesAndBoundaries(x))", "score": 0}
{"id": "eqasc_validation_1366", "prediction": "all x y.((HighMountain(x) & PlateTectonics(y)) -> CanExplainFormation(x,y))", "score": 0}
{"id": "eqasc_validation_1366", "prediction": "all x y.((HighMountain(x) & PlateTectonics(y)) -> ExplainedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1366", "prediction": "all x y.((HighMountain(x) & PlateTectonics(y)) -> CanBeExplainedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1366", "prediction": "all x y z.((HighMountain(x) & PlateTectonics(y) & PlateTectonics(z)) -> CanExplainFormation(x,y,z))", "score": 0}
{"id": "eqasc_validation_1366", "prediction": "all x y.((HighMountain(x) & PlateTectonics(y)) -> CanExplain(x,y))", "score": 0}
{"id": "eqasc_validation_1366", "prediction": "all x y.((HighMountain(x) & PlateTectonics(y)) -> ExplainsFormation(x,y))", "score": 0}
{"id": "eqasc_validation_1366", "prediction": "all x y.((HighMountain(x) & PlateTectonics(y)) -> CanBeExplained(x,y))", "score": 0}
{"id": "eqasc_validation_1366", "prediction": "all x.((HighMountain(x) & PlateTectonics(x)) -> CanExplainFormation(x))", "score": 0}
{"id": "eqasc_validation_1366", "prediction": "all x y z.((HighMountain(x) & PlateTectonics(y) & PlateTectonics(z)) -> CanExplain(x,y,z))", "score": 0}
{"id": "eqasc_validation_1366", "prediction": "all x.((HighMountain(x) & PlateTectonics(x)) -> ExplainsFormation(x))", "score": 0}
{"id": "eqasc_validation_1366", "prediction": "all x y z.((HighMountain(x) & PlateTectonics(y) & PlateTectonics(z)) -> ExplainsFormation(x,y,z))", "score": 0}
{"id": "eqasc_validation_1366", "prediction": "all x y.((HighMountain(x) & PlateTectonics(y)) -> ExplanedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1366", "prediction": "all x y z.((HighMountain(x) & PlateTectonics(y) & PlateTectonics(z)) -> ExplainedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1366", "prediction": "all x.(HighMountain(x) -> CanBeExplainedByPlateTectonics(x))", "score": 0}
{"id": "eqasc_validation_1366", "prediction": "all x y z.((HighMountain(x) & PlateTectonics(y) & PlateTectonics(z)) -> CanBeExplained(x,y,z))", "score": 0}
{"id": "eqasc_validation_1367", "prediction": "all x.((Phenomenon(x) & Collision(x) & Subduction(x)) -> Earthquakes(x))", "score": 0}
{"id": "eqasc_validation_1367", "prediction": "all x y.((Phenomenon(x) & Collision(y) & Subduction(y)) -> Earthquakes(x))", "score": 0}
{"id": "eqasc_validation_1367", "prediction": "all x.((Phenomenon(x) & Collision(x) & SubductionOfPlates(x)) -> Earthquakes(x))", "score": 0}
{"id": "eqasc_validation_1367", "prediction": "all x y.((Phenomenon(x) & Plate(y) & Collision(x,y) & Subduction(x,y)) -> Earthquakes(x))", "score": 0}
{"id": "eqasc_validation_1367", "prediction": "all x.((Collision(x) & Subduction(x)) -> Earthquakes(x))", "score": 0}
{"id": "eqasc_validation_1367", "prediction": "all x y.((Phenomenon(x) & Collision(y) & Subduction(x,y)) -> Earthquakes(x))", "score": 0}
{"id": "eqasc_validation_1367", "prediction": "all x y z.((Phenomenon(x) & Collision(y) & Subduction(z)) -> Earthquakes(x))", "score": 0}
{"id": "eqasc_validation_1367", "prediction": "all x y.((Phenomenon(x) & Collision(y) & SubductionOfPlates(x,y)) -> Earthquakes(x))", "score": 0}
{"id": "eqasc_validation_1367", "prediction": "all x.((Collision(x) & SubductionOfPlates(x)) -> Earthquakes(x))", "score": 0}
{"id": "eqasc_validation_1367", "prediction": "all x.((Phenomenon(x) & CollisionAndSubductionOfPlates(x)) -> Earthquakes(x))", "score": 0}
{"id": "eqasc_validation_1367", "prediction": "all x y.((Phenomenon(x) & Collision(x,y) & Subduction(x,y)) -> Earthquakes(x))", "score": 0}
{"id": "eqasc_validation_1367", "prediction": "all x y z.((Phenomenon(x) & Collision(y) & Subduction(z) & Plate(w)) -> Earthquakes(x))", "score": 0}
{"id": "eqasc_validation_1367", "prediction": "all x y z.((Phenomenon(x) & Plate(y) & Collision(z) & Subduction(z)) -> Earthquakes(x))", "score": 0}
{"id": "eqasc_validation_1367", "prediction": "all x y z.((Phenomenon(x) & Collision(y) & Subduction(z) & Plate(z)) -> Earthquakes(x))", "score": 0}
{"id": "eqasc_validation_1367", "prediction": "all x y.((Phenomenon(x) & Plate(y) & Collision(x,y) & Subduction(x,y)) -> Earthquake(x))", "score": 0}
{"id": "eqasc_validation_1367", "prediction": "all x y.((Phenomenon(x) & Collision(x) & Subduction(x)) -> Earthquakes(y))", "score": 0}
{"id": "eqasc_validation_1368", "prediction": "all x y.((Earthquake(x) & HighMountain(y)) -> FormsInSameManner(x,y))", "score": 0}
{"id": "eqasc_validation_1368", "prediction": "all x y z.((Earthquake(x) & HighMountain(y) & HighMountain(z)) -> FormsInSameManner(x,y,z))", "score": 0}
{"id": "eqasc_validation_1368", "prediction": "all x y z.((Earthquake(x) & HighMountain(y) & HighMountain(z)) -> (FormsInSameManner(x,y) & FormsInSameManner(x,z)))", "score": 0}
{"id": "eqasc_validation_1368", "prediction": "all x y.((Earthquake(x) & HighMountain(y)) -> (FormsInSameManner(x,y) & FormsInSameManner(x,y)))", "score": 0}
{"id": "eqasc_validation_1368", "prediction": "all x y z.((Earthquake(x) & HighMountain(y) & HighMountain(z)) -> (FormsInSameWay(x,y) & FormsInSameWay(x,z)))", "score": 0}
{"id": "eqasc_validation_1368", "prediction": "all x y.((Earthquake(x) & HighMountain(y)) -> FormsInSameMountain(x,y))", "score": 0}
{"id": "eqasc_validation_1368", "prediction": "all x y z.((Earthquake(x) & HighMountain(y) & HighMountain(z)) -> FormsInSameMountain(x,y,z))", "score": 0}
{"id": "eqasc_validation_1368", "prediction": "all x y.((Earthquake(x) & HighMountain(y)) -> FormsAsHighMountain(x,y))", "score": 0}
{"id": "eqasc_validation_1368", "prediction": "all x y z.((Earthquake(x) & HighMountain(y) & HighMountain(z)) -> (FormsInSameManner(x,y,z) & FormsInSameManner(x,y)))", "score": 0}
{"id": "eqasc_validation_1368", "prediction": "all x y z.((Earthquake(x) & HighMountain(y) & HighMountain(z)) -> FormsInSameWay(x,y,z))", "score": 0}
{"id": "eqasc_validation_1368", "prediction": "all x y.((Earthquake(x) & HighMountain(y)) -> FormsInTheSameManner(x,y))", "score": 0}
{"id": "eqasc_validation_1368", "prediction": "all x y z.((Earthquake(x) & HighMountain(y) & HighMountain(z)) -> FormsInTheSameManner(x,y,z))", "score": 0}
{"id": "eqasc_validation_1368", "prediction": "all x y.((Earthquake(x) & HighMountain(y)) -> FormsInSameWay(x,y))", "score": 0}
{"id": "eqasc_validation_1368", "prediction": "all x y.((Earthquake(x) & HighMountain(y)) -> FormsEqually(x,y))", "score": 0}
{"id": "eqasc_validation_1368", "prediction": "all x y z.((Earthquake(x) & HighMountain(y) & HighMountain(z)) -> FormsInSameManual(x,y,z))", "score": 0}
{"id": "eqasc_validation_1368", "prediction": "all x y z.((Earthquake(x) & HighMountain(y) & HighMountain(z)) -> FormsEqually(x,y,z))", "score": 0}
{"id": "eqasc_validation_1369", "prediction": "all x y z.((Himalayas(x) & CrustalPlate(y) & CrustalPlate(z) & Collision(x,y,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1369", "prediction": "all x y.((Himalayas(x) & CrustalPlate(y) & Collision(x,y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1369", "prediction": "all x y z.((Himalaya(x) & CrustalPlate(y) & CrustalPlate(z) & Collision(x,y,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1369", "prediction": "all x y.((Himalaya(x) & CrustalPlate(y) & Collision(x,y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1369", "prediction": "all x y z.((Himalayas(x) & CrustalPlate(y) & CrustalPlate(z) & Collision(x,y,z)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1369", "prediction": "all x y z.((Himalaya(x) & CrustalPlate(y) & CrustalPlate(z) & Collision(x,y,z)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1369", "prediction": "all x y.((Himalayas(x) & CrustalPlate(y)) -> FormedByCollision(x,y))", "score": 0}
{"id": "eqasc_validation_1369", "prediction": "all x y z.((Himalayas(x) & CrustalPlate(y) & CrustalPlate(z)) -> FormedByCollision(x,y,z))", "score": 0}
{"id": "eqasc_validation_1369", "prediction": "all x y.((Himalaya(x) & CrustalPlate(y)) -> FormedByCollision(x,y))", "score": 0}
{"id": "eqasc_validation_1369", "prediction": "all x.(Himalaya(x) -> (FormedByCrisisalPlates(x) & CollisionOfCrustalPlates(x)))", "score": 0}
{"id": "eqasc_validation_1369", "prediction": "all x y z.((Himalaya(x) & CrustalPlate(y) & CrustalPlate(z)) -> FormedByCollision(x,y,z))", "score": 0}
{"id": "eqasc_validation_1369", "prediction": "all x y z.((Himalayas(x) & CrustalPlate(y) & CrustalPlate(z) & CollisionOf(x,y,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1369", "prediction": "all x y z.((Himalaya(x) & CrustalPlate(y) & CrustalPlate(z) & CollisionOf(x,y,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1369", "prediction": "all x.(Himalayas(x) -> (FormedByCrisisalPlates(x) & CollisionOfCrustalPlates(x)))", "score": 0}
{"id": "eqasc_validation_1369", "prediction": "all x.((Himalayas(x) & CollisionOfCrustalPlates(x)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1369", "prediction": "all x y z.((Himalayas(x) & CrustalPlate(y) & CrustalPlate(z) & Collision(x,y,z)) -> Forms(x,y))", "score": 0}
{"id": "eqasc_validation_1370", "prediction": "all x y z.((Earth(x) & Volcano(y) & GreatCrustalPlate(z) & CollidingBoundaries(y,z)) -> FoundAlong(y,z))", "score": 0}
{"id": "eqasc_validation_1370", "prediction": "all x y.((Volcano(x) & Earth(y)) -> CollidingBoundaries(x,y))", "score": 0}
{"id": "eqasc_validation_1370", "prediction": "all x.(Volcano(x) -> exists y.(CrustalPlate(y) & CollidingBoundaries(x,y))))", "score": -1}
{"id": "eqasc_validation_1370", "prediction": "all x y z.((Earth(x) & Volcano(y) & GreatCrustalPlate(z)) -> CollidingBoundaries(y,z))", "score": 0}
{"id": "eqasc_validation_1370", "prediction": "all x y z.((Volcano(x) & Earth(y) & GreatCrustalPlate(z)) -> CollidingBoundaries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1370", "prediction": "all x.(Volcano(x) -> (OnEarth(x) & CollidingBoundaries(x) & GreatCrustalPlates(x)))", "score": 0}
{"id": "eqasc_validation_1370", "prediction": "all x y z.((Volcano(x) & Earth(y) & GreatCrustalPlate(z)) -> FoundAlongBoundaries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1370", "prediction": "all x y z.((Earth(x) & Volcano(y) & GreatCrustalPlate(z)) -> FoundAlongBoundaries(y,z))", "score": 0}
{"id": "eqasc_validation_1370", "prediction": "all x y z.((Volcano(x) & Earth(y) & GreatCrustalPlate(z)) -> FoundAlongCollidingBoundaries(x,y,z))", "score": 0}
{"id": "eqasc_validation_1370", "prediction": "all x y.((Volcano(x) & Earth(y)) -> FoundAlongCollidingBoundaries(x,y))", "score": 0}
{"id": "eqasc_validation_1370", "prediction": "all x y.((Volcano(x) & Earth(y) & CollidingBoundaries(x,y)) -> FoundAlong(x,y))", "score": 0}
{"id": "eqasc_validation_1370", "prediction": "all x y.((Volcano(x) & Earth(y)) -> (CollidingBoundaries(x,y) & GreatCrustalPlates(x,y)))", "score": 0}
{"id": "eqasc_validation_1370", "prediction": "all x y z.((Earth(x) & Volcano(y) & GreatCrustalPlate(z)) -> FoundAlongCollidingBoundaries(y,z))", "score": 0}
{"id": "eqasc_validation_1370", "prediction": "all x y z.((Volcano(x) & Earth(y) & GreatCrustalPlate(z) & CollidingBoundaries(x,z)) -> FoundOn(x,y))", "score": 0}
{"id": "eqasc_validation_1370", "prediction": "all x y z.((Earth(x) & Volcano(y) & GreatCrustalPlate(z) & CollidingBoundaries(y,z)) -> FoundOn(y,z))", "score": 0}
{"id": "eqasc_validation_1370", "prediction": "all x y z.((Volcano(x) & Earth(y) & CollidingBoundaries(z) & GreatCrustalPlates(z)) -> FoundAlong(x,y,z))", "score": 0}
{"id": "eqasc_validation_1371", "prediction": "all x.(Volcano(x) -> FoundNearHighMountains(x))", "score": 0}
{"id": "eqasc_validation_1371", "prediction": "all x.(Volcano(x) -> NearHighMountains(x))", "score": 0}
{"id": "eqasc_validation_1371", "prediction": "all x y.((Volcano(x) & HighMountain(y)) -> FoundNear(x,y))", "score": 0}
{"id": "eqasc_validation_1371", "prediction": "all x y z.((Volcano(x) & HighMountain(y) & HighMountain(z)) -> FoundNear(x,y,z))", "score": 0}
{"id": "eqasc_validation_1371", "prediction": "all x y.((Volcano(x) & HighMountain(y)) -> ProbablyFoundNear(x,y))", "score": 0}
{"id": "eqasc_validation_1371", "prediction": "all x.(Volcano(x) -> (LikelyToBeFoundNearHighMountains(x)))", "score": 0}
{"id": "eqasc_validation_1371", "prediction": "all x y.((Volcano(x) & HighMountain(y)) -> LikelyFoundNear(x,y))", "score": 0}
{"id": "eqasc_validation_1371", "prediction": "all x.(Volcano(x) -> NearHighMountain(x))", "score": 0}
{"id": "eqasc_validation_1371", "prediction": "all x.(Volcano(x) -> ProbablyFoundNearHighMountains(x))", "score": 0}
{"id": "eqasc_validation_1371", "prediction": "all x.(Volcano(x) -> LikelyToBeFoundNearHighMountains(x))", "score": 0}
{"id": "eqasc_validation_1371", "prediction": "all x y.((Volcano(x) & HighMountain(y)) -> LikelyFindedNear(x,y))", "score": 0}
{"id": "eqasc_validation_1371", "prediction": "all x y.((Volcano(x) & HighMountain(y)) -> LikelyFound(x,y))", "score": 0}
{"id": "eqasc_validation_1371", "prediction": "all x.(Volcano(x) -> LikelyFoundNearHighMountains(x))", "score": 0}
{"id": "eqasc_validation_1371", "prediction": "all x y.((Volcano(x) & HighMountain(y)) -> LikelyToBeFound(x,y))", "score": 0}
{"id": "eqasc_validation_1371", "prediction": "all x y z.((Volcano(x) & HighMountain(y) & HighMountain(z)) -> LikelyFound(x,y,z))", "score": 0}
{"id": "eqasc_validation_1371", "prediction": "all x y.((Volcano(x) & HighMountain(y)) -> ProbablyFindedNear(x,y))", "score": 0}
{"id": "eqasc_validation_1372", "prediction": "all x y.((HighMountain(x) & WellRoundedPeaks(x) & PlateTectonics(y) & Collision(x,y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1372", "prediction": "all x y.((HighMountain(x) & WellRoundedPeak(x) & PlateTectonics(y) & Collision(x,y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1372", "prediction": "all x.((HighMountain(x) & WellRoundedPeaks(x)) -> Collision(x))", "score": 0}
{"id": "eqasc_validation_1372", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeak(y) & PlateTectonics(z) & Collision(x,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1372", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeaks(y) & PlateTectonics(z) & Collision(x,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1372", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeak(y) & PlateTectonics(z) & Collision(x,y,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1372", "prediction": "all x.((HighMountain(x) & WellRoundedPeaks(x)) -> (FormedByCollision(x) & StudiedByPlateTectonics(x)))", "score": 0}
{"id": "eqasc_validation_1372", "prediction": "all x y.((HighMountain(x) & WellRoundedPeaks(x) & PlateTectonics(y)) -> FormedByCollision(x,y))", "score": 0}
{"id": "eqasc_validation_1372", "prediction": "all x y.((HighMountain(x) & WellRoundedPeaks(x) & PlateTectonics(y)) -> FormedByCollusion(x,y))", "score": 0}
{"id": "eqasc_validation_1372", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeak(y) & PlateTectonics(z) & Collision(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1372", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeaks(y) & PlateTectonics(z) & Collision(x,y,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1372", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeaks(y) & PlateTectonics(z) & Collision(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1372", "prediction": "all x y.((HighMountain(x) & WellRoundedPeaks(x) & PlateTectonics(y)) -> (FormedByCollision(x,y) & StudiedByPlateTectonics(x)))", "score": 0}
{"id": "eqasc_validation_1372", "prediction": "all x y.((HighMountain(x) & WellRoundedPeak(x) & PlateTectonics(y)) -> FormedByCollision(x,y))", "score": 0}
{"id": "eqasc_validation_1372", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeak(y) & PlateTectonics(z) & Collision(x,z)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1372", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeak(y) & PlateTectonics(z) & Collision(x,y,z)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1373", "prediction": "all x.((HighMountain(x) & WellRoundedPeaks(x)) -> CollisionOfPlateTectonics(x))", "score": 0}
{"id": "eqasc_validation_1373", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeak(y) & PlateTectonics(z) & Collision(x,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1373", "prediction": "all x.((HighMountain(x) & WellRoundedPeaks(x)) -> FormedByCollisionOfPlateTectonics(x))", "score": 0}
{"id": "eqasc_validation_1373", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeaks(y) & PlateTectonics(z) & Collision(x,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1373", "prediction": "all x.((HighMountain(x) & WellRoundedPeaks(x)) -> (FormedByCollisionOfPlateTectonics(x) & WellRoundedPeaks(x)))", "score": 0}
{"id": "eqasc_validation_1373", "prediction": "all x y.((HighMountain(x) & WellRoundedPeaks(x) & PlateTectonics(y) & Collision(x,y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1373", "prediction": "all x y.((HighMountain(x) & WellRoundedPeak(x) & PlateTectonics(y) & Collision(x,y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1373", "prediction": "all x y.((HighMountain(x) & WellRoundedPeaks(x) & PlateTectonics(y) & CollisionOfPlateTectonics(x,y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1373", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeak(y) & PlateTectonics(z) & CollisionOfPlateTectonics(x,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1373", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeak(y) & PlateTectonics(z) & CollisionOf(x,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1373", "prediction": "all x y.((HighMountain(x) & WellRoundedPeak(x) & PlateTectonics(y) & CollisionOfPlateTectonics(x,y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1373", "prediction": "all x y.((HighMountain(x) & WellRoundedPeak(y) & CollisionOfPlateTectonics(x)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1373", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeaks(y) & PlateTectonics(z) & CollisionOf(x,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1373", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeak(y) & PlateTectonic(z) & Collision(x,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1373", "prediction": "all x y z.((HighMountain(x) & WellRoundedPeaks(y) & PlateTectonics(z) & CollisionOfPlateTectonics(x,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1373", "prediction": "all x y.((HighMountain(x) & WellRoundedPeaks(x) & PlateTectonics(y) & CollisionOfPlateTectonics(x)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1374", "prediction": "all x.(Infancy(x) -> MostRapidGrowthAfterBirth(x))", "score": 4}
{"id": "eqasc_validation_1374", "prediction": "all x.(Infancy(x) -> RapidGrowthAfterBirth(x))", "score": 3}
{"id": "eqasc_validation_1374", "prediction": "all x.(Infancy(x) -> (RapidGrowthAfterBirth(x)))", "score": 3}
{"id": "eqasc_validation_1374", "prediction": "all x.(Infancy(x) -> (RapidGrowthAfterBirth(x) & MostRapidGrowthAfterBirth(x)))", "score": 7}
{"id": "eqasc_validation_1374", "prediction": "all x.(Infancy(x) -> (RapidGrowth(x) & AfterBirth(x)))", "score": 3}
{"id": "eqasc_validation_1374", "prediction": "all x.(Infancy(x) -> (RapidGrowthAfterBirth(x) & -RapidGrowthAfterBirth(x)))", "score": 3}
{"id": "eqasc_validation_1374", "prediction": "all x y.((Infancy(x) & Birth(y)) -> MostRapidGrowthAfter(x,y))", "score": 1}
{"id": "eqasc_validation_1374", "prediction": "all x.(Infancy(x) -> FastestGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1374", "prediction": "all x y.((Infancy(x) & Birth(y)) -> MostRapidGrowth(x,y))", "score": 1}
{"id": "eqasc_validation_1374", "prediction": "all x.(Infancy(x) -> (RapidGrowthAfterBirth(x) & AfterBirth(x)))", "score": 3}
{"id": "eqasc_validation_1374", "prediction": "all x.(Infancy(x) -> (RapidGrowthAfterBirth(x) & FastestGrowthAfterBirth(x)))", "score": 3}
{"id": "eqasc_validation_1374", "prediction": "all x.(Infancy(x) -> (MostRapidGrowthAfterBirth(x)))", "score": 4}
{"id": "eqasc_validation_1374", "prediction": "all x.(Infancy(x) -> (RapidGrowthAfterBirth(x) & MostRapidAfterBirth(x)))", "score": 3}
{"id": "eqasc_validation_1375", "prediction": "all x.((Baby(x) & RapidGrowthPeriod(x)) -> LearnsMost(x))", "score": 0}
{"id": "eqasc_validation_1375", "prediction": "all x.((Baby(x) & RapidGrowthPeriod(x)) -> LearnsMostDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1375", "prediction": "all x y.((Baby(x) & RapidGrowthPeriod(y)) -> LearnsMost(x,y))", "score": 0}
{"id": "eqasc_validation_1375", "prediction": "all x.(Baby(x) -> LearnsMostDuringRapidGrowthPeriod(x))", "score": 0}
{"id": "eqasc_validation_1375", "prediction": "all x y.((Baby(x) & RapidGrowthPeriod(y)) -> LearnsMostDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1375", "prediction": "all x.((Babie(x) & RapidGrowthPeriod(x)) -> LearnsMost(x))", "score": 0}
{"id": "eqasc_validation_1375", "prediction": "all x.(Baby(x) & RapidGrowthPeriod(x)) -> LearnsMost(x))", "score": -1}
{"id": "eqasc_validation_1375", "prediction": "all x y z.((Baby(x) & RapidGrowthPeriod(y) & RapidGrowthPeriod(z)) -> LearnsMost(x,y,z))", "score": 0}
{"id": "eqasc_validation_1375", "prediction": "all x.((Baby(x) & RapidGrowthPeriod(x)) -> LearnsMostDuring(x))", "score": 0}
{"id": "eqasc_validation_1375", "prediction": "all x y.((Babie(x) & RapidGrowthPeriod(y)) -> LearnsMost(x,y))", "score": 0}
{"id": "eqasc_validation_1375", "prediction": "all x y z.((Baby(x) & RapidGrowthPeriod(y) & RapidGrowthPeriod(z)) -> LearnsMostDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1375", "prediction": "all x.((Babie(x) & RapidGrowthPeriod(x)) -> LearnsMostDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1375", "prediction": "all x.(Baby(x) & RapidGrowthPeriod(x)) -> LearnsMostDuring(x,y))", "score": -1}
{"id": "eqasc_validation_1375", "prediction": "all x.((Baby(x) & RapidGrowth(x)) -> LearnsMost(x))", "score": 0}
{"id": "eqasc_validation_1375", "prediction": "all x y z.((Baby(x) & RapidGrowthPeriod(y) & RapidGrowthPeriod(z)) -> LearnsMost(x,y))", "score": 0}
{"id": "eqasc_validation_1376", "prediction": "all x.(Baby(x) -> BornWithLowBirthWeight(x))", "score": 0}
{"id": "eqasc_validation_1376", "prediction": "exists x.(Baby(x) & BornWithLowBirthWeight(x))", "score": 0}
{"id": "eqasc_validation_1376", "prediction": "all x.((Baby(x) & BornWithLowBirthWeight(x)) -> BornWithLowBirthWeight(x))", "score": 0}
{"id": "eqasc_validation_1376", "prediction": "all x.(Baby(x) -> LowBirthWeight(x))", "score": 0}
{"id": "eqasc_validation_1376", "prediction": "all x.((Birth(x) & BornWithLowBirthWeight(x)) -> BornWithLowBirthWeight(x))", "score": 0}
{"id": "eqasc_validation_1376", "prediction": "all x.((Baby(x) & LowBirthWeight(x)) -> BornWith(x,y))", "score": 0}
{"id": "eqasc_validation_1376", "prediction": "all x y.((Baby(x) & LowBirthWeight(y)) -> BornWith(x,y))", "score": 0}
{"id": "eqasc_validation_1376", "prediction": "all x.((Baby(x) & LowBirthWeight(x)) -> BornWith(x))", "score": 0}
{"id": "eqasc_validation_1376", "prediction": "all x.(Baby(x) -> (BirthWithLowBirthWeight(x)))", "score": 0}
{"id": "eqasc_validation_1376", "prediction": "all x.(Baby(x) -> (BornWithLowBirthWeight(x)))", "score": 0}
{"id": "eqasc_validation_1376", "prediction": "all x.((Birth(x) & LowBirthWeight(x)) -> BornWith(x,y))", "score": 0}
{"id": "eqasc_validation_1376", "prediction": "exists x.(Baby(x) & LowBirthWeight(x))", "score": 0}
{"id": "eqasc_validation_1376", "prediction": "exists x.(Birth(x) & BornWithLowBirthWeight(x))", "score": 0}
{"id": "eqasc_validation_1376", "prediction": "all x.((Baby(x) & BornWithLowBirthWeight(x)) -> BornWithLowWeight(x))", "score": 0}
{"id": "eqasc_validation_1376", "prediction": "all x.(Baby(x) -> BornWithLowBirthWight(x))", "score": 0}
{"id": "eqasc_validation_1376", "prediction": "all x.((Baby(x) & BornWithLowBirthWeight(x)) -> OftenBornWithLowBirthWeight(x))", "score": 0}
{"id": "eqasc_validation_1377", "prediction": "all x.(Infancy(x) -> (RapidGrowthAfterBirth(x) & Born(x)))", "score": 0}
{"id": "eqasc_validation_1377", "prediction": "all x.(Infancy(x) -> (RapidGrowthAfterBirth(x) & Born(x) & MostRapidGrowthAfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1377", "prediction": "all x.(Infancy(x) -> (RapidGrowth(x) & Born(x)))", "score": 0}
{"id": "eqasc_validation_1377", "prediction": "all x.(Infancy(x) -> (RapidGrowthAfterBirth(x) & MostRapidGrowthAfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1377", "prediction": "all x.(Infancy(x) -> (MostRapidGrowthAfterBirth(x) & Born(x)))", "score": 0}
{"id": "eqasc_validation_1377", "prediction": "all x.(Infancy(x) -> (RapidGrowthAfterBirth(x) & Born(x) & -RapidGrowthAfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1377", "prediction": "all x.(Infancy(x) -> (RapidGrowthBeforeBirth(x) & Born(x)))", "score": 0}
{"id": "eqasc_validation_1377", "prediction": "all x.(Infancy(x) -> (RapidGrowthAfterBeingBirth(x) & Born(x)))", "score": 0}
{"id": "eqasc_validation_1377", "prediction": "all x y.((Infancy(x) & Born(y)) -> MostRapidGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_1377", "prediction": "all x.(Infancy(x) -> MostRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1377", "prediction": "all x.(Infancy(x) -> (RapidGrowth(x) & Born(x) & MostRapidGrowth(x)))", "score": 0}
{"id": "eqasc_validation_1377", "prediction": "all x.(Infancy(x) -> (PeriodOfRapidGrowthAfterBirth(x) & Born(x)))", "score": 0}
{"id": "eqasc_validation_1377", "prediction": "all x y.((Infancy(x) & Born(y)) -> (RapidGrowth(x,y) & MostRapidGrowth(x,y)))", "score": 0}
{"id": "eqasc_validation_1377", "prediction": "all x.(Infancy(x) -> (RapidGrowth(x) & Born(x) & Born(x)))", "score": 0}
{"id": "eqasc_validation_1378", "prediction": "all x.(Learning(x) -> Infancy(x))", "score": 0}
{"id": "eqasc_validation_1378", "prediction": "all x.(Learning(x) -> InInfancy(x))", "score": 0}
{"id": "eqasc_validation_1378", "prediction": "all x.(Learning(x) -> InFancy(x))", "score": 0}
{"id": "eqasc_validation_1378", "prediction": "all x.(Learning(x) -> StartsInInfancy(x))", "score": 0}
{"id": "eqasc_validation_1378", "prediction": "all x y.((Learning(x) & Infancy(y)) -> StartsIn(x,y))", "score": 0}
{"id": "eqasc_validation_1378", "prediction": "all x y.((Learning(x) & Infancy(y)) -> BeginsIn(x,y))", "score": 0}
{"id": "eqasc_validation_1378", "prediction": "all x.((Learning(x) & Infancy(x)) -> StartsIn(x,Infancy))", "score": 0}
{"id": "eqasc_validation_1378", "prediction": "all x.(Learning(x) -> EmbracesInInfancy(x))", "score": 0}
{"id": "eqasc_validation_1378", "prediction": "all x y.((Learning(x) & Infancy(y)) -> BeginningIn(x,y))", "score": 0}
{"id": "eqasc_validation_1378", "prediction": "all x y.((Learning(x) & Infancy(y)) -> Begins(x,y))", "score": 0}
{"id": "eqasc_validation_1378", "prediction": "all x y.((Infancy(x) & Infancy(y)) -> Learning(x,y))", "score": 0}
{"id": "eqasc_validation_1378", "prediction": "all x.((Learning(x) & Infancy(x)) -> BeginsIn(x,Infancy))", "score": 0}
{"id": "eqasc_validation_1378", "prediction": "all x y.((Infancy(x) & Learning(y)) -> BeginsIn(x,y))", "score": 0}
{"id": "eqasc_validation_1378", "prediction": "all x y.((Infancy(x) & Learning(y)) -> StartsIn(x,y))", "score": 0}
{"id": "eqasc_validation_1378", "prediction": "all x y.((Learning(x) & Infancy(y)) -> Beginning(x,y))", "score": 0}
{"id": "eqasc_validation_1379", "prediction": "all x.((Birth(x) & Learning(x)) -> Starts(x))", "score": 0}
{"id": "eqasc_validation_1379", "prediction": "all x.((Birth(x) & Learning(x)) -> Begins(x))", "score": 0}
{"id": "eqasc_validation_1379", "prediction": "all x.((Birth(x) & Learning(x)) -> Beginning(x))", "score": 0}
{"id": "eqasc_validation_1379", "prediction": "all x y.((Birth(x) & Learning(y)) -> Begins(x,y))", "score": 0}
{"id": "eqasc_validation_1379", "prediction": "all x y.((Birth(x) & Learning(y)) -> Starts(x,y))", "score": 0}
{"id": "eqasc_validation_1379", "prediction": "all x.((Birth(x) & Learning(y)) -> Begins(x,y))", "score": 0}
{"id": "eqasc_validation_1379", "prediction": "all x.((Birth(x) & Birth(x)) -> Learning(x))", "score": 0}
{"id": "eqasc_validation_1379", "prediction": "all x.((Birth(x) & Learning(x)) -> AfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1379", "prediction": "all x.((Birth(x) & Learning(y)) -> Starts(x,y))", "score": 0}
{"id": "eqasc_validation_1379", "prediction": "all x.((Birth(x) & Learns(x)) -> Starts(x))", "score": 0}
{"id": "eqasc_validation_1379", "prediction": "all x.((Birth(x) & Learns(x)) -> Begins(x))", "score": 0}
{"id": "eqasc_validation_1379", "prediction": "all x y.((Birth(x) & Learning(y)) -> Beginning(x,y))", "score": 0}
{"id": "eqasc_validation_1379", "prediction": "all x y.((Birth(x) & Birth(y)) -> Learning(x,y))", "score": 0}
{"id": "eqasc_validation_1379", "prediction": "all x.((Birth(x) & Learning(x)) -> Embraces(x))", "score": 0}
{"id": "eqasc_validation_1379", "prediction": "all x.((Birth(x) & Learning(x)) -> Embrace(x))", "score": 0}
{"id": "eqasc_validation_1379", "prediction": "all x.(Birth(x) -> Learning(x))", "score": 0}
{"id": "eqasc_validation_1380", "prediction": "all x.((Baby(x) & VeryYoung(x)) -> (CoSleeping(x) & ConvenientForFeedingSchedules(x)))", "score": 0}
{"id": "eqasc_validation_1380", "prediction": "all x.((Baby(x) & VeryYoung(x)) -> (CoSleeping(x) & VeryConvenientForFeedingSchedules(x)))", "score": 0}
{"id": "eqasc_validation_1380", "prediction": "all x.((Baby(x) & VeryYoung(x)) -> VeryConvenientForFeedingSchedules(x))", "score": 0}
{"id": "eqasc_validation_1380", "prediction": "all x.((Baby(x) & VeryYoung(x)) -> CoSleepingConvenientForFeedingSchedules(x))", "score": 0}
{"id": "eqasc_validation_1380", "prediction": "all x.((Baby(x) & VeryYoung(x)) -> (CoSleeping(x) & Infancy(x) & ConvenientForFeedingSchedules(x)))", "score": 10}
{"id": "eqasc_validation_1380", "prediction": "all x.((Baby(x) & VeryYoung(x)) -> ConvenientForFeedingSchedules(x))", "score": 0}
{"id": "eqasc_validation_1380", "prediction": "all x.((Baby(x) & VeryYoung(x)) -> (CoSleeping(x) & Infancy(x) & VeryConvenientForFeedingSchedules(x)))", "score": 10}
{"id": "eqasc_validation_1380", "prediction": "all x.((Baby(x) & VeryYoung(x)) -> (CoSleeping(x) & Infancy(x)))", "score": 10}
{"id": "eqasc_validation_1380", "prediction": "all x.((Baby(x) & VeryYoung(x)) -> CoSleeping(x))", "score": 0}
{"id": "eqasc_validation_1380", "prediction": "all x y.((Baby(x) & Infancy(y)) -> (CoSleeping(x,y) & ConvenientForFeedingSchedules(x)))", "score": 0}
{"id": "eqasc_validation_1380", "prediction": "all x y.((Baby(x) & Infancy(y)) -> (CoSleeping(x,y) & VeryConvenientForFeedingSchedules(x)))", "score": 0}
{"id": "eqasc_validation_1380", "prediction": "all x.((Baby(x) & VeryYoung(x)) -> (CoSleeping(x) | FeedingSchedules(x)))", "score": 0}
{"id": "eqasc_validation_1380", "prediction": "all x.((Baby(x) & VeryYoung(x)) -> (CoSleeping(x) & FeedingSchedules(x)))", "score": 0}
{"id": "eqasc_validation_1380", "prediction": "all x y.((Baby(x) & Infancy(y)) -> (CoSleeping(x,y) & ConvenientForFeedingSchedules(x,y)))", "score": 0}
{"id": "eqasc_validation_1380", "prediction": "all x y.((Baby(x) & Infancy(y)) -> (CoSleeping(x,y) & VeryConvenientForFeedingSchedules(x,y)))", "score": 0}
{"id": "eqasc_validation_1380", "prediction": "all x.((Baby(x) & VeryYoung(x)) -> ConvenientCoSleeping(x))", "score": 0}
{"id": "eqasc_validation_1381", "prediction": "all x.((Baby(x) & VeryYoung(x)) -> MostRapidGrowthAfterBirth(x))", "score": 9}
{"id": "eqasc_validation_1381", "prediction": "all x.((Birth(x) & VeryYoung(x)) -> MostRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1381", "prediction": "all x.((Baby(x) & VeryYoung(x)) -> RapidGrowthAfterBirth(x))", "score": 21}
{"id": "eqasc_validation_1381", "prediction": "all x.((Birth(x) & VeryYoung(x)) -> RapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1381", "prediction": "all x.((Baby(x) & VeryYoung(x)) -> HasRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1381", "prediction": "all x.((Birth(x) & VeryYoung(x)) -> HasRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1381", "prediction": "all x.((Bird(x) & VeryYoung(x)) -> MostRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1381", "prediction": "all x.((Baby(x) & VeryYoung(x)) -> PeriodOfRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1381", "prediction": "all x.((Birth(x) & VeryYoung(x)) -> PeriodOfRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1381", "prediction": "all x.((Baby(x) & Young(x)) -> MostRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1381", "prediction": "all x.((Birth(x) & Young(x)) -> MostRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1381", "prediction": "all x.((Birth(x) & VeryYoung(x)) -> FastestGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1381", "prediction": "all x y.((Baby(x) & VeryYoung(x)) -> MostRapidGrowthAfterBirth(x,y))", "score": 0}
{"id": "eqasc_validation_1381", "prediction": "all x y.((Baby(x) & VeryYoung(x)) -> MostRapidGrowthAfterBirth(y))", "score": 0}
{"id": "eqasc_validation_1381", "prediction": "all x.((Birth(x) & VeryYoung(x)) -> FastGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1381", "prediction": "all x y.((Birth(x) & VeryYoung(x)) -> MostRapidGrowthAfterBirth(x,y))", "score": 0}
{"id": "eqasc_validation_1382", "prediction": "all x.(Baby(x) -> (RapidGrowthAfterBirth(x) & MostRapidGrowthAfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1382", "prediction": "all x.((Baby(x) & FastestGrowthAfterBirth(x)) -> InPeriodOfRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1382", "prediction": "all x.((Baby(x) & MostRapidGrowthAfterBirth(x)) -> InPeriodOfRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1382", "prediction": "all x.((Birth(x) & MostRapidGrowthAfterBirth(x)) -> InPeriodOfRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1382", "prediction": "all x.((Baby(x) & MostRapidGrowthAfterBirth(x)) -> InPeriodOfGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1382", "prediction": "all x.(Baby(x) -> (RapidGrowthAfterBirth(x) & AfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1382", "prediction": "all x y.((Baby(x) & Birth(y)) -> MostRapidGrowthAfterBirth(x,y))", "score": 0}
{"id": "eqasc_validation_1382", "prediction": "all x.((Baby(x) & MostRapidGrowthAfterBirth(x)) -> MostRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1382", "prediction": "all x.(Baby(x) -> (RapidGrowthAfterBirth(x) & -RapidGrowthAfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1382", "prediction": "all x.((Baby(x) & MostRapidGrowthAfterBirth(x)) -> InPeriodOfFastGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1382", "prediction": "all x y.((Baby(x) & Birth(y)) -> (RapidGrowthAfterBirth(x,y) & MostRapidGrowthAfterBirth(x,y)))", "score": 0}
{"id": "eqasc_validation_1382", "prediction": "all x y.((Baby(x) & Birth(y)) -> MostRapidGrowthAfter(x,y))", "score": 0}
{"id": "eqasc_validation_1382", "prediction": "all x.((Birth(x) & MostRapidGrowthAfterBirth(x)) -> InPeriodOfGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1382", "prediction": "all x.((Birth(x) & MostRapidGrowthAfterBirth(x)) -> InPeriodOfFastGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1382", "prediction": "all x.((Baby(x) & MostRapidGrowthAfterBirth(x)) -> InPastOfGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1382", "prediction": "all x.(Baby(x) -> MostRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1383", "prediction": "all x.((Baby(x) & Baby(x)) -> MostRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1383", "prediction": "all x.((Birth(x) & Baby(x)) -> MostRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1383", "prediction": "all x.((Baby(x) & Baby(x)) -> RapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1383", "prediction": "all x.((Birth(x) & Baby(x)) -> RapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1383", "prediction": "all x.((PeriodOfRapidGrowthAfterBirth(x) & Baby(x)) -> Baby(x))", "score": 0}
{"id": "eqasc_validation_1383", "prediction": "all x.((PeriodOfRapidGrowthAfterBirth(x) & Baby(x)) -> MostRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1383", "prediction": "all x y.((Baby(x) & Baby(y)) -> MostRapidGrowthAfterBirth(x,y))", "score": 0}
{"id": "eqasc_validation_1383", "prediction": "all x y.((PeriodOfRapidGrowthAfterBirth(x) & Baby(y)) -> MostRapidGrowthAfterBirth(x,y))", "score": 0}
{"id": "eqasc_validation_1383", "prediction": "all x.((RapidGrowthAfterBirth(x) & Baby(x)) -> Baby(x))", "score": 0}
{"id": "eqasc_validation_1383", "prediction": "all x.(RapidGrowthAfterBirth(x) -> Baby(x))", "score": 0}
{"id": "eqasc_validation_1383", "prediction": "all x.((BirthBirth(x) & Baby(x)) -> MostRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1383", "prediction": "all x.((PeriodOfRapidGrowthAfterBirth(x) & Baby(x)) -> PeriodOfRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1383", "prediction": "all x.((PeriodOfRapidGrowthAfterBirth(x) & Baby(x)) -> RapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1383", "prediction": "all x.(RapidGrowthAfterBirth(x) -> (Baby(x) & Baby(x)))", "score": 0}
{"id": "eqasc_validation_1383", "prediction": "all x y.((PeriodOfRapidGrowthAfterBirth(x) & Baby(y)) -> Baby(x))", "score": 0}
{"id": "eqasc_validation_1383", "prediction": "all x y.((Birth(x) & Baby(y)) -> MostRapidGrowthAfterBirth(x,y))", "score": 0}
{"id": "eqasc_validation_1384", "prediction": "all x.(Infancy(x) -> HasThreeStages(x))", "score": 0}
{"id": "eqasc_validation_1384", "prediction": "All x.(Infancy(x) -> HasThreeStages(x))", "score": -1}
{"id": "eqasc_validation_1384", "prediction": "all x.(Infancy(x) -> HasTwoStages(x))", "score": 0}
{"id": "eqasc_validation_1384", "prediction": "all x y.((Infancy(x) & Stage(y)) -> HasThree(x,y))", "score": 0}
{"id": "eqasc_validation_1384", "prediction": "all x y.((Infancy(x) & Stage(y)) -> HasThreeStages(x,y))", "score": 0}
{"id": "eqasc_validation_1384", "prediction": "all x.(Infancy(x) -> (HasThreeStages(x)))", "score": 0}
{"id": "eqasc_validation_1384", "prediction": "all x y.((Infancy(x) & Stage(y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_1384", "prediction": "All x.(Infancy(x) -> HasTwoStages(x))", "score": -1}
{"id": "eqasc_validation_1384", "prediction": "all x.(Infancy(x) -> HasStages(x,3))", "score": 0}
{"id": "eqasc_validation_1384", "prediction": "all x y.((Infancy(x) & Stage(y)) -> HasStage(x,y))", "score": 0}
{"id": "eqasc_validation_1384", "prediction": "all x.(Infancy(x) -> ThereTwoStages(x))", "score": 0}
{"id": "eqasc_validation_1384", "prediction": "all x y.((Infancy(x) & Stage(y)) -> HasTwoStages(x,y))", "score": 0}
{"id": "eqasc_validation_1384", "prediction": "all x.(Infancy(x) -> HasThirdStages(x))", "score": 0}
{"id": "eqasc_validation_1384", "prediction": "all x.(Infancy(x) -> ThreeStages(x))", "score": 0}
{"id": "eqasc_validation_1384", "prediction": "all x y.((Infancy(x) & Stage(y)) -> HasTwo(x,y))", "score": 0}
{"id": "eqasc_validation_1385", "prediction": "all x.((Stage(x) & AfterBirth(x)) -> MostRapidGrowthInLife(x))", "score": 0}
{"id": "eqasc_validation_1385", "prediction": "all x.((Stage(x) & AfterBirth(x)) -> RapidGrowthInLife(x))", "score": 0}
{"id": "eqasc_validation_1385", "prediction": "all x.((Stage(x) & AfterBirth(x)) -> MostRapidGrowth(x))", "score": 0}
{"id": "eqasc_validation_1385", "prediction": "all x.((Stage(x) & AfterBirth(x)) -> FastestGrowthInLife(x))", "score": 0}
{"id": "eqasc_validation_1385", "prediction": "all x.((Stage(x) & AfterBirth(x)) -> RapidGrowth(x))", "score": 0}
{"id": "eqasc_validation_1385", "prediction": "all x.((StageAfterBirth(x) & StageAfterBirth(x)) -> MostRapidGrowthInLife(x))", "score": 0}
{"id": "eqasc_validation_1385", "prediction": "all x.((Stage(x) & Birth(x)) -> MostRapidGrowthInLife(x))", "score": 0}
{"id": "eqasc_validation_1385", "prediction": "all x y.((Stage(x) & Stage(y) & AfterBirth(x,y)) -> MostRapidGrowthInLife(x))", "score": 0}
{"id": "eqasc_validation_1385", "prediction": "all x y.((Stage(x) & Stage(y) & AfterBirth(x,y)) -> MostRapidGrowthInLife(x,y))", "score": 0}
{"id": "eqasc_validation_1385", "prediction": "all x.((StageAfterBirth(x) & StageAfterBirth(x)) -> RapidGrowthInLife(x))", "score": 0}
{"id": "eqasc_validation_1385", "prediction": "all x y.((Stage(x) & Stage(y) & AfterBirth(x,y)) -> RapidGrowthInLife(x))", "score": 0}
{"id": "eqasc_validation_1385", "prediction": "all x y.((Stage(x) & Stage(y) & AfterBirth(x)) -> MostRapidGrowthInLife(x,y))", "score": 0}
{"id": "eqasc_validation_1385", "prediction": "all x y.((Stage(x) & Birth(y)) -> MostRapidGrowthInLife(x,y))", "score": 0}
{"id": "eqasc_validation_1385", "prediction": "all x y.((Stage(x) & Stage(y) & AfterBirth(x,y)) -> RapidGrowthInLife(x,y))", "score": 0}
{"id": "eqasc_validation_1385", "prediction": "all x y.((Stage(x) & Stage(y)) -> MostRapidGrowthInLife(x,y))", "score": 0}
{"id": "eqasc_validation_1385", "prediction": "all x.((Stage(x) & Birth(x)) -> RapidGrowthInLife(x))", "score": 0}
{"id": "eqasc_validation_1386", "prediction": "all x.((Infancy(x) | EarlyChildhood(x)) -> (RapidGrowth(x) & RapidDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_1386", "prediction": "all x.((Infancy(x) & EarlyChildhood(x)) -> (RapidGrowth(x) & RapidDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_1386", "prediction": "all x.((Infancy(x) | EarlyChildren(x)) -> (RapidGrowth(x) & RapidDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_1386", "prediction": "all x y.((Infancy(x) & EarlyChildhood(y)) -> (RapidGrowth(x) & RapidDevelopment(y)))", "score": 0}
{"id": "eqasc_validation_1386", "prediction": "all x.((Infancy(x) | EarlyCrowding(x)) -> (RapidGrowth(x) & RapidDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_1386", "prediction": "all x y.((Infancy(x) & EarlyChildhood(y)) -> (RapidGrowth(x) & RapidDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_1386", "prediction": "all x.((Infancy(x) | EarlyCrowdhood(x)) -> (RapidGrowth(x) & RapidDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_1386", "prediction": "all x.((Infancy(x) & EarlyChildren(x)) -> (RapidGrowth(x) & RapidDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_1386", "prediction": "all x.((Infancy(x) & EarlyCrowdhood(x)) -> (RapidGrowth(x) & RapidDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_1386", "prediction": "all x y.((Infancy(x) & EarlyChildhood(y)) -> (RapidGrowth(x,y) & RapidDevelopment(x,y)))", "score": 0}
{"id": "eqasc_validation_1386", "prediction": "all x.((Infancy(x) | EarlyCrowdbirth(x)) -> (RapidGrowth(x) & RapidDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_1386", "prediction": "all x.((Infancy(x) | EarlyChildhood(x)) -> RapidGrowthAndDevelopment(x))", "score": 0}
{"id": "eqasc_validation_1386", "prediction": "all x.((Infancy(x) & EarlyCrowding(x)) -> (RapidGrowth(x) & RapidDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_1386", "prediction": "all x.(Infancy(x) & EarlyChildhood(x)) -> (RapidGrowth(x) & RapidDevelopment(x)))", "score": -1}
{"id": "eqasc_validation_1386", "prediction": "all x y.((Infancy(x) & EarlyCrowdhood(y)) -> (RapidGrowth(x) & RapidDevelopment(y)))", "score": 0}
{"id": "eqasc_validation_1386", "prediction": "all x y.((Infancy(x) & EarlyCrowdhood(y)) -> (RapidGrowth(x) & RapidDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_1387", "prediction": "all x.((Childhood(x) & RapidDevelopment(x)) -> RapidDevelopment(x))", "score": 0}
{"id": "eqasc_validation_1387", "prediction": "all x y.((Childhood(x) & Childhood(y)) -> RapidDevelopment(x,y))", "score": 0}
{"id": "eqasc_validation_1387", "prediction": "all x.((Crowd(x) & Childhood(x)) -> RapidDevelopment(x))", "score": 0}
{"id": "eqasc_validation_1387", "prediction": "all x y.((Children(x) & Childhood(y)) -> RapidDevelopment(x,y))", "score": 0}
{"id": "eqasc_validation_1387", "prediction": "all x y.((Crowd(x) & Childhood(y)) -> RapidDevelopment(x,y))", "score": 0}
{"id": "eqasc_validation_1387", "prediction": "all x.((Children(x) & Childhood(x)) -> RapidDevelopment(x))", "score": 0}
{"id": "eqasc_validation_1387", "prediction": "all x y.((Child(x) & Childhood(y)) -> RapidDevelopment(x,y))", "score": 0}
{"id": "eqasc_validation_1387", "prediction": "all x y z.((Children(x) & Childhood(y) & Childhood(z)) -> RapidDevelopment(x,y,z))", "score": 0}
{"id": "eqasc_validation_1387", "prediction": "all x y z.((Childhood(x) & Childhood(y) & Childhood(z)) -> RapidDevelopment(x,y,z))", "score": 0}
{"id": "eqasc_validation_1387", "prediction": "all x.((Childhood(x) & Childhood(x)) -> RapidDevelopment(x))", "score": 0}
{"id": "eqasc_validation_1387", "prediction": "all x.((Development(x) & RapidInChildhood(x)) -> RapidInChildhood(x))", "score": 0}
{"id": "eqasc_validation_1387", "prediction": "all x.((Childhood(x) & RapidDevelopment(x,Childhood)) -> RapidDevelopment(x,Childhood))", "score": 0}
{"id": "eqasc_validation_1387", "prediction": "all x.((Crowdhood(x) & Childhood(x)) -> RapidDevelopment(x))", "score": 0}
{"id": "eqasc_validation_1387", "prediction": "all x.((Crown(x) & Childhood(x)) -> RapidDevelopment(x))", "score": 0}
{"id": "eqasc_validation_1387", "prediction": "all x y.((Childhood(x) & Child(y)) -> RapidDevelopment(x,y))", "score": 0}
{"id": "eqasc_validation_1387", "prediction": "all x.((Childhood(x) & RapidDevelopment(x)) -> RapidDevelopment(x,Childhood(x))", "score": -1}
{"id": "eqasc_validation_1388", "prediction": "all x y.((Development(x) & Growth(y)) -> (GetBetter(x) & GetBigger(y)))", "score": 0}
{"id": "eqasc_validation_1388", "prediction": "(all x.(Development(x) -> Better(x)) & all y.(Growth(y) -> Bigger(y)))", "score": 0}
{"id": "eqasc_validation_1388", "prediction": "all x y.((Development(x) & Growth(y)) -> (Growth(x) & Better(x) & Bigger(y)))", "score": 0}
{"id": "eqasc_validation_1388", "prediction": "(all x.(Development(x) -> GetBetter(x)) & all y.(Growth(y) -> GetBigger(y)))", "score": 0}
{"id": "eqasc_validation_1388", "prediction": "all x y.((Development(x) & Growth(y)) -> (GetsBetter(x) & GetsBigger(y)))", "score": 0}
{"id": "eqasc_validation_1388", "prediction": "all x.((Development(x) -> Better(x)) & (Growth(x) -> Bigger(x)))", "score": 0}
{"id": "eqasc_validation_1388", "prediction": "all x y.((Development(x) & Growth(y)) -> (GainBetter(x) & GrowBigger(y)))", "score": 0}
{"id": "eqasc_validation_1388", "prediction": "all x y.((Development(x) & Growth(y)) -> (GoesBetter(x) & GoesBigger(y)))", "score": 0}
{"id": "eqasc_validation_1388", "prediction": "all x.((Development(x) -> GetBetter(x)) & (Growth(x) -> GetBigger(x)))", "score": 0}
{"id": "eqasc_validation_1388", "prediction": "all x y.((Development(x) & Growth(y)) -> (GetBetter(x) | GetBigger(y)))", "score": 0}
{"id": "eqasc_validation_1388", "prediction": "(all x.(Development(x) -> Better(x)) & all y.(Growth(y) -> Bigger(y))))", "score": -1}
{"id": "eqasc_validation_1388", "prediction": "all x y.((Development(x) & Growth(y)) -> (MeetsBetter(x) & MeetsBigger(y)))", "score": 0}
{"id": "eqasc_validation_1388", "prediction": "all x y.((Development(x) & Growth(y)) -> (Growth(x,y) & Better(x) & Bigger(y)))", "score": 0}
{"id": "eqasc_validation_1388", "prediction": "all x y z.((Development(x) & Growth(y) & Better(x)) -> Bigger(y))", "score": 0}
{"id": "eqasc_validation_1388", "prediction": "all x.((Development(x) -> Better(x)) & Growth(x) -> Bigger(x))", "score": 0}
{"id": "eqasc_validation_1388", "prediction": "all x y.((Development(x) & Growth(y)) -> (GetBetter(x) & GetBetter(y)))", "score": 0}
{"id": "eqasc_validation_1389", "prediction": "all x.(Infancy(x) -> (RapidlyGrowingBiggerAfterBirth(x) & AfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1389", "prediction": "all x.(Infancy(x) -> (RapidlyGivingBiggerAfterBirth(x) & AfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1389", "prediction": "all x.(Infancy(x) -> (RapidlyGettingBiggerAfterBirth(x) & AfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1389", "prediction": "all x.(Infancy(x) -> (MostRapidlyGettingBiggerAfterBirth(x) & AfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1389", "prediction": "all x.(Infancy(x) -> (RapidlyGetsBiggerAfterBirth(x) & AfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1389", "prediction": "all x.(Infancy(x) -> (RapidlyGivingBiggerAfterBirth(x) & AfterBirth(x) & AfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1389", "prediction": "all x.(Infancy(x) -> (RapidlyGrowingBiggerAfterBirth(x) & AfterBirth(x) & AfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1389", "prediction": "all x y.((Infancy(x) & Birth(y)) -> MostRapidlyGettingBiggerAfterBirth(x,y))", "score": 0}
{"id": "eqasc_validation_1389", "prediction": "all x.(Infancy(x) -> (RapidlyGettingBiggerAfterBirth(x) & AfterBirth(x) & AfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1389", "prediction": "all x.(Infancy(x) -> (RapidlyGetsBiggerAfterBirth(x) & AfterBirth(x) & AfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1389", "prediction": "all x.(Infancy(x) -> (MostRapidlyGettingBiggerAfterBirth(x) & AfterBirth(x) & AfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1389", "prediction": "all x y.((Infancy(x) & Birth(y)) -> MostRapidlyGettingBiggerAfter(x,y))", "score": 0}
{"id": "eqasc_validation_1389", "prediction": "all x y.((Infancy(x) & Birth(y)) -> MostRapidlyGivingBiggerAfter(x,y))", "score": 0}
{"id": "eqasc_validation_1390", "prediction": "all x.(Infant(x) -> BirthToOneYear(x))", "score": 0}
{"id": "eqasc_validation_1390", "prediction": "all x.(Infant(x) -> BirthToYear(x))", "score": 0}
{"id": "eqasc_validation_1390", "prediction": "all x.(Infant(x) -> (BirthToOneYear(x)))", "score": 0}
{"id": "eqasc_validation_1390", "prediction": "all x.(Infant(x) -> BornToOneYear(x))", "score": 0}
{"id": "eqasc_validation_1390", "prediction": "all x y.((Infant(x) & Year(y)) -> BirthTo(x,y))", "score": 0}
{"id": "eqasc_validation_1390", "prediction": "all x y.((Infant(x) & Year(y)) -> Birth(x,y))", "score": 0}
{"id": "eqasc_validation_1390", "prediction": "all x.(Infant(x) -> BirthTo(x,y))", "score": 0}
{"id": "eqasc_validation_1390", "prediction": "all x y.((Infant(x) & Year(y)) -> BornTo(x,y))", "score": 0}
{"id": "eqasc_validation_1390", "prediction": "all x.(Infant(x) -> (BirthToYear(x)))", "score": 0}
{"id": "eqasc_validation_1390", "prediction": "all x.(Infant(x) -> (BirthToYear(x) | BirthToYear(x)))", "score": 0}
{"id": "eqasc_validation_1390", "prediction": "all x.(Infant(x) -> (BirthToOneYear(x) | BirthToOneYear(x)))", "score": 0}
{"id": "eqasc_validation_1390", "prediction": "all x.(Infant(x) -> (BirthTo(x,y) & OneYear(y)))", "score": 0}
{"id": "eqasc_validation_1390", "prediction": "all x.(Infant(x) -> (BirthToYear(x) & BirthToYear(x)))", "score": 0}
{"id": "eqasc_validation_1390", "prediction": "all x.(Infant(x) -> Birth(x,y))", "score": 0}
{"id": "eqasc_validation_1390", "prediction": "all x.((Infant(x) & BirthToOneYear(x)) -> BirthToOneYear(x))", "score": 0}
{"id": "eqasc_validation_1391", "prediction": "all x.((PeriodOfRapidGrowth(x) & FirstYear(x)) -> MostRapidGrowth(x))", "score": 0}
{"id": "eqasc_validation_1391", "prediction": "all x.(RapidGrowthPeriod(x) -> FirstYear(x))", "score": 0}
{"id": "eqasc_validation_1391", "prediction": "all x y.((PeriodOfRapidGrowth(x) & FirstYear(y)) -> MostRapidGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_1391", "prediction": "all x y.((PeriodOfRapidGrowth(x) & Year(y)) -> FirstYear(x,y))", "score": 0}
{"id": "eqasc_validation_1391", "prediction": "all x.((PeriodOfRapidGrowth(x) & FirstYear(x)) -> MostRapidGrowthPeriod(x))", "score": 0}
{"id": "eqasc_validation_1391", "prediction": "all x.(RapidGrowthPeriod(x) -> (FirstYear(x) & MostRapidGrowth(x)))", "score": 0}
{"id": "eqasc_validation_1391", "prediction": "all x.((PeriodOfRapidGrowth(x) & FirstYearOfGrowth(x)) -> MostRapidGrowth(x))", "score": 0}
{"id": "eqasc_validation_1391", "prediction": "all x y.((PeriodOfRapidGrowth(x) & Year(y)) -> FirstYearOfRapidGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_1391", "prediction": "all x y.((PeriodOfRapidGrowth(x) & FirstYear(y)) -> MostRapidGrowth(x))", "score": 0}
{"id": "eqasc_validation_1391", "prediction": "all x y.((PeriodOfRapidGrowth(x) & Year(y)) -> FirstYear(x))", "score": 0}
{"id": "eqasc_validation_1391", "prediction": "all x y.((Period(x) & MostRapidGrowth(y)) -> FirstYear(x,y))", "score": 0}
{"id": "eqasc_validation_1391", "prediction": "all x y.((PeriodOfRapidGrowth(x) & Year(y)) -> FirstYear(y))", "score": 0}
{"id": "eqasc_validation_1391", "prediction": "all x.((PeriodOfRapidGrowth(x) & FirstYear(x)) -> RapidGrowth(x))", "score": 0}
{"id": "eqasc_validation_1391", "prediction": "all x y.((PeriodOfRapidGrowth(x) & Year(y)) -> FirstYearOfRapidGrowth(x))", "score": 0}
{"id": "eqasc_validation_1391", "prediction": "all x.((PeriodOfRapidGrowth(x) & FirstYear(x)) -> FastestGrowth(x))", "score": 0}
{"id": "eqasc_validation_1391", "prediction": "all x.(RapidGrowth(x) -> FirstYear(x))", "score": 0}
{"id": "eqasc_validation_1392", "prediction": "all x.((Infant(x) | Child(x) | Teen(x)) -> HighNutritionNeeds(x))", "score": 0}
{"id": "eqasc_validation_1392", "prediction": "all x.((Infant(x) | Child(x) | Teen(x)) -> HighNutritionNeedsToFuelRapidGrowth(x))", "score": 0}
{"id": "eqasc_validation_1392", "prediction": "all x.((Infant(x) | Child(x) | Teen(x)) -> (RelativelyHighNutritionNeeds(x) & FuelsRapidGrowth(x)))", "score": 0}
{"id": "eqasc_validation_1392", "prediction": "all x.((Infant(x) | Child(x) | Teen(x)) -> RelativelyHighNutritionNeeds(x))", "score": 0}
{"id": "eqasc_validation_1392", "prediction": "all x.((Infant(x) | Child(x) | Teen(x)) -> (RelativelyHighNutritionNeeds(x) & FuelRapidGrowth(x)))", "score": 0}
{"id": "eqasc_validation_1392", "prediction": "all x.((Infant(x) | Child(x) | Teen(x)) -> (HighNutritionNeeds(x) & FuelsRapidGrowth(x)))", "score": 0}
{"id": "eqasc_validation_1392", "prediction": "all x.((Infant(x) | Child(x) | Teen(x)) -> HasRelativelyHighNutritionNeeds(x))", "score": 0}
{"id": "eqasc_validation_1392", "prediction": "all x.((Infant(x) | Child(x) | Teen(x)) -> RelativelyHighNutritionNeedsToFuelRapidGrowth(x))", "score": 0}
{"id": "eqasc_validation_1392", "prediction": "all x.((Infant(x) | Child(x) | Teen(x)) -> (HighNutritionNeeds(x) & FuelRapidGrowth(x)))", "score": 0}
{"id": "eqasc_validation_1392", "prediction": "all x.((Infant(x) | Child(x) | Teen(x)) -> HasRelativelyHighNutritionNeedsToFuelRapidGrowth(x))", "score": 0}
{"id": "eqasc_validation_1392", "prediction": "all x y z.((Infant(x) & Child(y) & Teen(z)) -> (RelativelyHighNutritionNeeds(x,y) & FuelsRapidGrowth(x,z)))", "score": 0}
{"id": "eqasc_validation_1392", "prediction": "all x y z.((Infant(x) & Child(y) & Teen(z)) -> (RelativelyHighNutritionNeeds(x,y,z) & FuelsRapidGrowth(x,z)))", "score": 0}
{"id": "eqasc_validation_1392", "prediction": "all x y.((Infant(x) | Child(y) | Teen(y)) -> (RelativelyHighNutritionNeeds(x,y) & FuelsRapidGrowth(x,y)))", "score": 0}
{"id": "eqasc_validation_1392", "prediction": "all x y z.((Infant(x) & Child(y) & Teen(z)) -> (RelativelyHighNutritionNeeds(x,y,z) & FuelsRapidGrowth(x)))", "score": 0}
{"id": "eqasc_validation_1392", "prediction": "all x y z.((Infant(x) | Child(y) | Teen(z)) -> (RelativelyHighNutritionNeeds(x,y) & FuelsRapidGrowth(x,z)))", "score": 0}
{"id": "eqasc_validation_1392", "prediction": "all x y.((Infant(x) | Child(x) | Teen(y)) -> (RelativelyHighNutritionNeeds(x,y) & FuelsRapidGrowth(x,y)))", "score": 0}
{"id": "eqasc_validation_1393", "prediction": "all x.((Infant(x) & HighNutrition(x)) -> FuelsGrowth(x))", "score": 0}
{"id": "eqasc_validation_1393", "prediction": "all x.(HighNutrition(x) -> FuelsInfantGrowth(x))", "score": 0}
{"id": "eqasc_validation_1393", "prediction": "all x.((Infant(x) & NeedsHighNutrition(x)) -> FuelsGrowth(x))", "score": 0}
{"id": "eqasc_validation_1393", "prediction": "all x y.((Infant(x) & Infant(y)) -> NeedsHighNutrition(x,y))", "score": 0}
{"id": "eqasc_validation_1393", "prediction": "all x y.((Infant(x) & Infant(y)) -> HighNutrition(x,y))", "score": 0}
{"id": "eqasc_validation_1393", "prediction": "all x.((Infant(x) & HighNutrition(x)) -> NeededToFuelGrowth(x))", "score": 0}
{"id": "eqasc_validation_1393", "prediction": "all x y.((Infant(x) & Infant(y)) -> HighNutritionNeededToFuelGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_1393", "prediction": "all x y.((Infant(x) & Infant(y) & NeedsHighNutrition(x,y)) -> FuelsGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_1393", "prediction": "all x.((Infant(x) & HighNutrition(x)) -> FuelGrowth(x))", "score": 0}
{"id": "eqasc_validation_1393", "prediction": "all x y.((Infant(x) & Infant(y)) -> HighNutrition(x))", "score": 0}
{"id": "eqasc_validation_1393", "prediction": "all x y.((Infant(x) & Infant(y)) -> HighNutritionNeeds(x,y))", "score": 0}
{"id": "eqasc_validation_1393", "prediction": "all x.((Infant(x) & HighNutrient(x)) -> FuelsGrowth(x))", "score": 0}
{"id": "eqasc_validation_1393", "prediction": "all x y z.((Infant(x) & Nutrition(y) & Growth(z)) -> NeededToFuel(x,y,z))", "score": 0}
{"id": "eqasc_validation_1393", "prediction": "all x y.((Infant(x) & Infant(y) & HighNutrition(x)) -> FuelsGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_1393", "prediction": "all x y.((Infant(x) & Infant(y)) -> HighNutritionNeeded(x,y))", "score": 0}
{"id": "eqasc_validation_1393", "prediction": "all x y.((Infant(x) & HighNutrition(y)) -> FuelsGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_1394", "prediction": "all x.((Birth(x) & BirthCertificate(x)) -> WrittenUpToRecordBirth(x))", "score": 0}
{"id": "eqasc_validation_1394", "prediction": "all x.((Person(x) & Born(x)) -> WrittenBirthCertificate(x))", "score": 0}
{"id": "eqasc_validation_1394", "prediction": "all x.(Birth(x) -> WrittenUpBirthCertificate(x))", "score": 0}
{"id": "eqasc_validation_1394", "prediction": "all x.(Birth(x) -> exists y.(BirthCertificate(y) & WrittenUp(x,y)))", "score": 0}
{"id": "eqasc_validation_1394", "prediction": "all x.(Birth(x) -> exists y.(BirthCertificate(y) & WrittenUp(y)))", "score": 0}
{"id": "eqasc_validation_1394", "prediction": "all x.((Person(x) & Born(x)) -> WrittenUpBirthCertificate(x))", "score": 0}
{"id": "eqasc_validation_1394", "prediction": "all x y.((Person(x) & Born(x)) -> BirthCertificate(y))", "score": 0}
{"id": "eqasc_validation_1394", "prediction": "all x.(Birth(x) -> (WrittenBirthCertificate(x) & RecordsBirth(x)))", "score": 0}
{"id": "eqasc_validation_1394", "prediction": "all x y.((Birth(x) & Person(y)) -> WrittenUpBirthCertificate(x,y))", "score": 0}
{"id": "eqasc_validation_1394", "prediction": "all x.(Birth(x) -> exists y.(BirthCertificate(y) & WrittenUp(y,x)))", "score": 0}
{"id": "eqasc_validation_1394", "prediction": "all x y.((Person(x) & Born(x) & BirthCertificate(y)) -> WrittenUpToRecordBirth(y,x))", "score": 0}
{"id": "eqasc_validation_1394", "prediction": "all x y.((Person(x) & Born(x) & BirthCertificate(y)) -> WrittenUpToRecordBirth(x,y))", "score": 0}
{"id": "eqasc_validation_1394", "prediction": "all x.((Person(x) & Born(x)) -> exists y.(BirthCertificate(y) & WrittenUp(y)))", "score": 0}
{"id": "eqasc_validation_1394", "prediction": "all x.((Person(x) & Born(x)) -> BirthCertificate(x))", "score": 0}
{"id": "eqasc_validation_1394", "prediction": "all x.(Birth(x) -> exists y.(BirthCertificate(y) & WrittenUpToRecordBirth(y,x)))", "score": 0}
{"id": "eqasc_validation_1394", "prediction": "all x.(Birth(x) -> WrittenBirthCertificate(x))", "score": 0}
{"id": "eqasc_validation_1395", "prediction": "all x.(Infancy(x) -> (RapidGrowthAfterBirth(x) & Born(x)))", "score": 0}
{"id": "eqasc_validation_1395", "prediction": "all x.(Infancy(x) -> (RapidGrowth(x) & Born(x)))", "score": 0}
{"id": "eqasc_validation_1395", "prediction": "all x.(Infancy(x) -> (RapidGrowthAfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1395", "prediction": "all x.(Infancy(x) -> MostRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1395", "prediction": "all x.(Infancy(x) -> RapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1395", "prediction": "all x.(Infancy(x) -> (RapidGrowthAfterBirth(x) & MostRapidGrowthAfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1395", "prediction": "all x.(Infancy(x) -> (RapidGrowthAfterBirth(x) & -RapidGrowthAfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1395", "prediction": "all x.(Infancy(x) -> FastestGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1395", "prediction": "all x.(Infancy(x) -> (MostRapidGrowthAfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1395", "prediction": "all x y.((Infancy(x) & Born(y)) -> MostRapidGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_1395", "prediction": "all x.(Infancy(x) -> (RapidGrowthBeforeBirth(x) & Born(x)))", "score": 0}
{"id": "eqasc_validation_1395", "prediction": "all x y.((Infancy(x) & Birth(y)) -> MostRapidGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_1395", "prediction": "all x.(Infancy(x) -> MostRapidGrowthAfterBeingBirth(x))", "score": 0}
{"id": "eqasc_validation_1396", "prediction": "all x.(Communication(x) -> StartsInInfancy(x))", "score": 0}
{"id": "eqasc_validation_1396", "prediction": "all x.(Communication(x) -> InFancy(x))", "score": 0}
{"id": "eqasc_validation_1396", "prediction": "all x.(Communication(x) -> Infancy(x))", "score": 5}
{"id": "eqasc_validation_1396", "prediction": "all x.(Communication(x) -> InInfancy(x))", "score": 0}
{"id": "eqasc_validation_1396", "prediction": "all x y.((Communication(x) & Infancy(y)) -> StartsIn(x,y))", "score": 0}
{"id": "eqasc_validation_1396", "prediction": "all x y.((Communication(x) & Infancy(y)) -> BeginsIn(x,y))", "score": 0}
{"id": "eqasc_validation_1396", "prediction": "all x.((Communication(x) & Infancy(x)) -> StartsIn(x,Infancy))", "score": 0}
{"id": "eqasc_validation_1396", "prediction": "all x y.((Communication(x) & Infancy(y)) -> Begins(x,y))", "score": 0}
{"id": "eqasc_validation_1396", "prediction": "all x y.((Communication(x) & Infancy(y)) -> Starts(x,y))", "score": 0}
{"id": "eqasc_validation_1396", "prediction": "all x.(Communication(x) -> EmbracesInInfancy(x))", "score": 0}
{"id": "eqasc_validation_1396", "prediction": "all x.((Communication(x) & Infancy(x)) -> Begins(x))", "score": 0}
{"id": "eqasc_validation_1396", "prediction": "all x.((Communication(x) & Infancy(x)) -> StartsIn(x,y))", "score": 0}
{"id": "eqasc_validation_1396", "prediction": "all x.((Communication(x) & Infancy(x)) -> BeginsIn(x,Infancy))", "score": 0}
{"id": "eqasc_validation_1397", "prediction": "all x y.((Communication(x) & Birth(y)) -> MostRapidGrowthAfterBirth(x,y))", "score": 0}
{"id": "eqasc_validation_1397", "prediction": "all x.(Communication(x) -> (StartsInRapidGrowthAfterBirth(x) & MostRapidGrowthAfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1397", "prediction": "all x y.((Communication(x) & Birth(y)) -> MostRapidGrowth(x,y))", "score": 1}
{"id": "eqasc_validation_1397", "prediction": "all x.((Communication(x) & MostRapidGrowthAfterBirth(x)) -> MostRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1397", "prediction": "all x y.((Communication(x) & Birth(y)) -> MostRapidGrowthAfter(x,y))", "score": 1}
{"id": "eqasc_validation_1397", "prediction": "all x.(Communication(x) -> MostRapidGrowthAfterBirth(x))", "score": 3}
{"id": "eqasc_validation_1397", "prediction": "all x y.((Communication(x) & MostRapidGrowthAfterBirth(y)) -> StartsIn(x,y))", "score": 0}
{"id": "eqasc_validation_1397", "prediction": "all x y.((Communication(x) & MostRapidGrowthAfterBirth(y)) -> StartsInPeriodOf(x,y))", "score": 0}
{"id": "eqasc_validation_1397", "prediction": "all x.((Communication(x) & MostRapidGrowthAfterBirth(x)) -> StartsIn(x))", "score": 0}
{"id": "eqasc_validation_1397", "prediction": "all x y.((Communication(x) & Birth(y) & MostRapidGrowthAfterBirth(x,y)) -> StartsInPeriodOf(x,y))", "score": 0}
{"id": "eqasc_validation_1397", "prediction": "all x y z.((Communication(x) & Birth(y) & MostRapidGrowthAfterBirth(z)) -> StartsInPeriodOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1397", "prediction": "all x.((Communication(x) & MostRapidGrowthAfterBirth(x)) -> StartsIn(x,RapidGrowthAfterBirth(x))", "score": -1}
{"id": "eqasc_validation_1397", "prediction": "all x y.((Communication(x) & Birth(y) & MostRapidGrowthAfterBirth(x,y)) -> StartsIn(x,y))", "score": 0}
{"id": "eqasc_validation_1397", "prediction": "all x y z.((Communication(x) & Birth(y) & MostRapidGrowthAfterBirth(z)) -> StartsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1397", "prediction": "all x y.((Communication(x) & MostRapidGrowthAfterBirth(y)) -> StartsInPeriod(x,y))", "score": 0}
{"id": "eqasc_validation_1397", "prediction": "all x.((Communication(x) & MostRapidGrowthAfterBirth(x)) -> StartsInPeriod(x))", "score": 0}
{"id": "eqasc_validation_1398", "prediction": "all x.(RapidGrowth(x) -> RapidAdvancement(x))", "score": 2}
{"id": "eqasc_validation_1398", "prediction": "all x y.((RapidGrowth(x) & RapidAdvancement(y)) -> RapidGrowth(x))", "score": 0}
{"id": "eqasc_validation_1398", "prediction": "all x.(RapidGrowth(x) -> RapidAcquisition(x))", "score": 1}
{"id": "eqasc_validation_1398", "prediction": "all x.(RapidGrowth(x) -> RapidAccroissement(x))", "score": 0}
{"id": "eqasc_validation_1398", "prediction": "all x.(RapidGrowth(x) -> RapidProgression(x))", "score": 0}
{"id": "eqasc_validation_1398", "prediction": "all x y.((RapidGrowth(x) & RapidAdvancement(y)) -> RapidGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_1398", "prediction": "all x.((RapidGrowth(x) & RapidAdvancement(x)) -> RapidGrowth(x))", "score": 0}
{"id": "eqasc_validation_1398", "prediction": "all x.(RapidGrowth(x) -> RapidAccession(x))", "score": 0}
{"id": "eqasc_validation_1398", "prediction": "all x.(RapidGrowth(x) -> RapidAccompanion(x))", "score": 0}
{"id": "eqasc_validation_1398", "prediction": "all x.(RapidGrowth(x) -> RapidAvancment(x))", "score": 0}
{"id": "eqasc_validation_1398", "prediction": "all x y.((RapidGrowth(x) & RapidAdvancement(y)) -> Rapid(x))", "score": 0}
{"id": "eqasc_validation_1398", "prediction": "all x.(RapidGrowth(x) -> RapidAccommodation(x))", "score": 0}
{"id": "eqasc_validation_1398", "prediction": "all x y.((RapidGrowth(x) & RapidAdvancement(y)) -> Rapid(x,y))", "score": 0}
{"id": "eqasc_validation_1398", "prediction": "all x.(RapidGrowth(x) -> RapidAccompaniation(x))", "score": 0}
{"id": "eqasc_validation_1399", "prediction": "all x.(Infancy(x) -> MostRapidAdvancement(x))", "score": 0}
{"id": "eqasc_validation_1399", "prediction": "all x.(Infancy(x) -> (RapidAdvancement(x) & MostRapidAdvancement(x)))", "score": 0}
{"id": "eqasc_validation_1399", "prediction": "all x.(Infancy(x) -> (RapidAdvancement(x) & Infancy(x)))", "score": 1}
{"id": "eqasc_validation_1399", "prediction": "all x.(Infancy(x) -> RapidAdvancement(x))", "score": 1}
{"id": "eqasc_validation_1399", "prediction": "all x y.((Infancy(x) & Acceleration(y)) -> MostRapid(x,y))", "score": 0}
{"id": "eqasc_validation_1399", "prediction": "all x.(Infancy(x) -> (RapidAcquisition(x) & MostRapidAcquisition(x)))", "score": 0}
{"id": "eqasc_validation_1399", "prediction": "all x y.((Infancy(x) & Advancement(y)) -> MostRapid(x,y))", "score": 0}
{"id": "eqasc_validation_1399", "prediction": "all x.(Infancy(x) -> MostRapidAcquisition(x))", "score": 0}
{"id": "eqasc_validation_1399", "prediction": "all x.(Infancy(x) -> (RapidAcquisition(x) & Infancy(x)))", "score": 1}
{"id": "eqasc_validation_1399", "prediction": "all x.(Infancy(x) -> MostRapidAdvancementPeriod(x))", "score": 0}
{"id": "eqasc_validation_1399", "prediction": "all x.(Infancy(x) -> (RapidAdvancement(x) & MostRapidProgression(x)))", "score": 0}
{"id": "eqasc_validation_1399", "prediction": "all x y.((Infancy(x) & MostRapidAdvancement(y)) -> PeriodOf(x,y))", "score": 0}
{"id": "eqasc_validation_1399", "prediction": "all x.(Infancy(x) -> (MostRapidAdvancement(x) & Infancy(x)))", "score": 0}
{"id": "eqasc_validation_1399", "prediction": "all x.(Infancy(x) -> (RapidAdvancement(x) & MostInfancy(x)))", "score": 0}
{"id": "eqasc_validation_1400", "prediction": "all x y.((Food(x) & SalivaryGlands(y) & MoistenedBy(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1400", "prediction": "all x.((Food(x) & MoistenedBySaliva(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1400", "prediction": "all x y.((Food(x) & SalivaryGlands(y) & MoistenedBy(x,y)) -> EasyToCheek(x))", "score": 0}
{"id": "eqasc_validation_1400", "prediction": "all x.((Food(x) & MoistenedBySaline(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1400", "prediction": "all x y.((Food(x) & SalivaryGlands(y) & MoisturizedBy(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1400", "prediction": "all x y.((Food(x) & Saliva(y) & MoistenedBy(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1400", "prediction": "all x.((Food(x) & MoistenedBySavoryGlands(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1400", "prediction": "all x.((Food(x) & MoisturizedBySaliva(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1400", "prediction": "all x y.((Food(x) & SalivaryGlands(y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1400", "prediction": "all x.((Food(x) & MoistenedBySalineGlands(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1400", "prediction": "all x.((Food(x) & MoisturedBySaliva(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1400", "prediction": "all x y.((Food(x) & SalivaryGlands(y)) -> MoistenedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1400", "prediction": "all x.((Food(x) & MoistenedBySaliva(x)) -> EasyToCheek(x))", "score": 0}
{"id": "eqasc_validation_1400", "prediction": "all x y.((Food(x) & SalivaryGlands(y)) -> EasierToCheek(x,y))", "score": 0}
{"id": "eqasc_validation_1400", "prediction": "all x.((Food(x) & MoisturizedBySaline(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1400", "prediction": "all x y.((Food(x) & SalivaryGlands(y) & MoistenedBy(x,y)) -> EasierToCheek(x,y))", "score": 0}
{"id": "eqasc_validation_1401", "prediction": "all x y.((SalivaryGland(x) & OralCavity(y)) -> SalivaryGlandCancer(x))", "score": 0}
{"id": "eqasc_validation_1401", "prediction": "all x.(SalivaryGlandCancer(x) -> SalivaryGland(x))", "score": 0}
{"id": "eqasc_validation_1401", "prediction": "all x.(SalivaryGlandCancer(x) -> (SalivaryGland(x) & LocatedThroughoutOralCavity(x)))", "score": 0}
{"id": "eqasc_validation_1401", "prediction": "all x y z.((SalivaryGland(x) & SalivaryGland(y) & OralCavity(z)) -> LocatedThroughout(x,y,z))", "score": 0}
{"id": "eqasc_validation_1401", "prediction": "all x y.((SalivaryGland(x) & OralCavity(y)) -> SalivaryGlandCancer(x,y))", "score": 0}
{"id": "eqasc_validation_1401", "prediction": "all x.(SalivaryGlandCancerous(x) -> SalivaryGland(x))", "score": 0}
{"id": "eqasc_validation_1401", "prediction": "all x y.((SalivaryGland(x) & OralCavity(y)) -> LocatedThroughout(x,y))", "score": 0}
{"id": "eqasc_validation_1401", "prediction": "all x y.((SalivaryGland(x) & OralCavity(y)) -> SalivaryGland(x,y))", "score": 0}
{"id": "eqasc_validation_1401", "prediction": "all x.(SalivaryGlandCancer(x) -> (SalivaryGland(x) & OralCavity(x)))", "score": 0}
{"id": "eqasc_validation_1401", "prediction": "all x.(SalivaryGlandCancer(x) -> LocatedThroughoutOralCavity(x))", "score": 0}
{"id": "eqasc_validation_1401", "prediction": "all x.(SalivaryGlandCancerSalivaryGlands(x) -> LocatedThroughoutOralCavity(x))", "score": 0}
{"id": "eqasc_validation_1401", "prediction": "all x y.((SalivaryGlandCancer(x) & OralCavity(y)) -> SalivaryGland(x,y))", "score": 0}
{"id": "eqasc_validation_1401", "prediction": "all x y.((SalivaryGlands(x) & OralCavity(y)) -> LocatedThroughout(x,y))", "score": 0}
{"id": "eqasc_validation_1402", "prediction": "all x y.((Food(x) & OralCavity(y) & MoistenedBySaline(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1402", "prediction": "all x.((Food(x) & MoistenedBySaline(x) & OralCavity(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1402", "prediction": "all x y z.((Food(x) & Saliva(y) & OralCavity(z) & MoistenedBy(x,y,z)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1402", "prediction": "all x y.((Food(x) & OralCavity(y) & MoistenedBySavor(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1402", "prediction": "all x y.((Food(x) & OralCavity(y) & MoistenedBySaft(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1402", "prediction": "all x y.((Food(x) & OralCavity(y) & MoistenedBySaliva(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1402", "prediction": "all x y z.((Food(x) & Saliva(y) & OralCavity(z) & MoistenedBy(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1402", "prediction": "all x y.((Food(x) & OralCavity(y) & MoisturizedBySaline(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1402", "prediction": "all x.((Food(x) & MoistenedBySaft(x) & OralCavity(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1402", "prediction": "all x y z.((Food(x) & Saliva(y) & OralCavity(z) & MoistenedBy(x,y) & MoistenedBy(x,z)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1402", "prediction": "all x.((Food(x) & MoistenedBySavor(x) & OralCavity(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1402", "prediction": "all x y z.((Food(x) & Saliva(y) & OralCavity(z) & MoistenedBy(x,y) & MoistenedBy(y,z)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1402", "prediction": "all x y.((Food(x) & OralCavity(y) & MoistenedBySaline(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1402", "prediction": "all x y z.((Food(x) & Saliva(y) & OralCavity(z) & MoisturizedBy(x,y) & MoisturizedBy(x,z)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1402", "prediction": "all x y.((Food(x) & OralCavity(y) & MoistenedBySaline(x,y)) -> EasyToCheek(x))", "score": 0}
{"id": "eqasc_validation_1402", "prediction": "all x y z.((Food(x) & Saliva(y) & OralCavity(z) & MoisturizedBy(x,y) & MoisturizedBy(y,z)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1403", "prediction": "FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)))))))(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo", "score": -1}
{"id": "eqasc_validation_1403", "prediction": "all x.(FavoriteFood(x) -> Steak(x))", "score": 0}
{"id": "eqasc_validation_1403", "prediction": "FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)))))))(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo", "score": -1}
{"id": "eqasc_validation_1403", "prediction": "FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)))))))(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo", "score": -1}
{"id": "eqasc_validation_1403", "prediction": "FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)))))))(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)))))(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Fa", "score": -1}
{"id": "eqasc_validation_1403", "prediction": "FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)))))))(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo", "score": -1}
{"id": "eqasc_validation_1403", "prediction": "FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)))))))(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo))))", "score": -1}
{"id": "eqasc_validation_1403", "prediction": "FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)))))))(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)Favo", "score": -1}
{"id": "eqasc_validation_1403", "prediction": "FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)))))))(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo))))))))", "score": -1}
{"id": "eqasc_validation_1403", "prediction": "FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)))))))(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo))))", "score": -1}
{"id": "eqasc_validation_1403", "prediction": "FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)))))))(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)Favo", "score": -1}
{"id": "eqasc_validation_1403", "prediction": "FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)))))))(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo))))", "score": -1}
{"id": "eqasc_validation_1403", "prediction": "FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)))))))(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)Favo", "score": -1}
{"id": "eqasc_validation_1403", "prediction": "FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)))))))(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo))))))))", "score": -1}
{"id": "eqasc_validation_1403", "prediction": "FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)))))))(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)Favo(Favo", "score": -1}
{"id": "eqasc_validation_1403", "prediction": "FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(FavoriteFood(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo)))))))(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo(Favo))))))))", "score": -1}
{"id": "eqasc_validation_1404", "prediction": "all x y.((Steak(x) & SalivaryGlands(y) & MoistenedBy(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1404", "prediction": "all x.((Steak(x) & MoistenedBySaline(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1404", "prediction": "all x.((Steak(x) & MoistenedBySaliva(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1404", "prediction": "all x.((Steak(x) & MoistenedBySaliva(x) & FromSalivaryGlands(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1404", "prediction": "all x.((Steak(x) & MoistenedBySaline(x) & SalivaryGlands(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1404", "prediction": "all x y z.((Steak(x) & Saliva(y) & SalivaryGlands(z) & MoistenedBy(x,y,z)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1404", "prediction": "all x y.((Steak(x) & Saliva(y) & MoistenedBy(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1404", "prediction": "all x.((Steak(x) & MoisturizedBySaline(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1404", "prediction": "all x y.((Steak(x) & SalivaryGlands(y) & MoisturizedBy(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1404", "prediction": "all x.((Steak(x) & MoistenedBySaline(x) & FromSalineGlands(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1404", "prediction": "all x y z.((Steak(x) & Saliva(y) & SalivaryGlands(z)) -> (EasierToCheek(x) & MoistenedBy(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1404", "prediction": "all x.((Steak(x) & MoisturizedBySaliva(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1404", "prediction": "all x y z.((Steak(x) & Saliva(y) & SalivaryGlands(z) & MoisturizedBy(x,y,z)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1404", "prediction": "all x.((Steak(x) & MoistenedBySavor(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1404", "prediction": "all x y.((Steak(x) & SalivaryGlands(y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1404", "prediction": "all x y.((Steak(x) & SalivaryGlands(y) & MoistenedBy(x,y)) -> EasyToCheek(x))", "score": 0}
{"id": "eqasc_validation_1405", "prediction": "all x y.((Food(x) & Mouth(y)) -> (Enters(x,y) & PartiallyBrokenDownBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1405", "prediction": "all x.(Food(x) -> (EntersMouth(x) & PartiallyBrokenDownByChoosing(x) & PartiallyBrokenDownByEnzymes(x)))", "score": 0}
{"id": "eqasc_validation_1405", "prediction": "all x y.((Food(x) & Mouth(y)) -> (Enters(x,y) & PartiallyBreakdown(x,y)))", "score": 0}
{"id": "eqasc_validation_1405", "prediction": "all x y.((Food(x) & Mouth(y)) -> (Enters(x,y) & PartiallyBrokenDownByChoosing(x) & PartiallyBrokenDownByEnzymes(x)))", "score": 0}
{"id": "eqasc_validation_1405", "prediction": "all x.(Food(x) -> (EntersMouth(x) & PartiallyBrokenDownByChoosing(x) & PartiallyBrokenDownByEnzymesInSaline(x)))", "score": 0}
{"id": "eqasc_validation_1405", "prediction": "all x y.((Food(x) & Mouth(y)) -> (Enters(x,y) & PartiallyBrokenDownByChoosing(x) & PartiallyBrokenDownByEnzymes(x,y)))", "score": 0}
{"id": "eqasc_validation_1405", "prediction": "all x y.((Food(x) & Mouth(y)) -> (Enters(x,y) & BrokenDownBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1405", "prediction": "all x.(Food(x) -> (EntersMouth(x) & BreaksDownByChoosing(x) & BreaksDownByEnzymes(x)))", "score": 0}
{"id": "eqasc_validation_1405", "prediction": "all x y.((Food(x) & Mouth(y)) -> (Enters(x,y) & BreaksDownBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1405", "prediction": "all x.(Food(x) -> (EntersMouth(x) & BrokenDownByChoosing(x) & BrokenDownByEnzymes(x)))", "score": 0}
{"id": "eqasc_validation_1405", "prediction": "all x y.((Food(x) & Mouth(y) & Enters(x,y)) -> (BreaksDownByChoosing(x) & BreaksDownByEnzymes(x)))", "score": 0}
{"id": "eqasc_validation_1405", "prediction": "all x y z.((Food(x) & Mouth(y) & Chewing(z)) -> (Enters(x,y) & BreaksDownBy(x,z) & EnzymesInSaline(x)))", "score": 0}
{"id": "eqasc_validation_1405", "prediction": "all x y.((Food(x) & Mouth(y) & Enters(x,y)) -> (BreaksDownByChoosing(x) & BreaksDownByEnzymes(x,y)))", "score": 0}
{"id": "eqasc_validation_1405", "prediction": "all x.(Food(x) -> (EntersMouth(x) & PartiallyBrokenDownByChoosing(x) & PartiallyBrokenDownByEnzymesInSaft(x)))", "score": 0}
{"id": "eqasc_validation_1405", "prediction": "all x y.((Food(x) & Mouth(y)) -> (Enters(x,y) & PartiallyBrokenDownBy(x,y) & Chewing(x) & EnzymesInSaline(x)))", "score": 0}
{"id": "eqasc_validation_1405", "prediction": "all x y.((Food(x) & Mouth(y)) -> (Enters(x,y) & PartiallyBrokenDownBy(x,y) & Chewing(y) & EnzymesInSaline(y)))", "score": 0}
{"id": "eqasc_validation_1406", "prediction": "all x.((Food(x) & EnzymesInMouth(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1406", "prediction": "all x y.((Food(x) & Enzyme(y) & InMouth(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1406", "prediction": "all x y.((Food(x) & EnzymeInMouth(y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1406", "prediction": "all x y z.((Food(x) & Enzyme(y) & Mouth(z)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1406", "prediction": "all x.((Food(x) & EnzymesInMouth(x)) -> EasyToCheek(x))", "score": 0}
{"id": "eqasc_validation_1406", "prediction": "all x y.((Food(x) & EnzymeInMouth(y)) -> EasierToCheek(x,y))", "score": 0}
{"id": "eqasc_validation_1406", "prediction": "all x y z.((Food(x) & Enzyme(y) & Mouth(z)) -> EasierToCheek(x,y,z))", "score": 0}
{"id": "eqasc_validation_1406", "prediction": "all x y z.((Food(x) & Enzyme(y) & Mouth(z) & InMouth(x,y,z)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1406", "prediction": "all x y.((Food(x) & EnzymesInMouth(y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1406", "prediction": "all x y.((Food(x) & Enzyme(y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1406", "prediction": "all x y.((Food(x) & Enzyme(y) & InMouth(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1406", "prediction": "all x y z.((Food(x) & EnzymeInMouth(y) & EnzymeInMouth(z)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1406", "prediction": "all x.((Food(x) & EnzymesInMouth(x)) -> EasierToChew(x))", "score": 0}
{"id": "eqasc_validation_1406", "prediction": "all x y z.((Food(x) & Enzyme(y) & Mouth(z)) -> (EasierToCheek(x) & EnzymesInMouth(y,z)))", "score": 0}
{"id": "eqasc_validation_1406", "prediction": "all x y.((Food(x) & Enzyme(y) & InMouth(x,y)) -> EasierToCheek(x,y))", "score": 0}
{"id": "eqasc_validation_1406", "prediction": "all x y z.((Food(x) & Enzyme(y) & Mouth(z) & EnzymesInMouth(y,z)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1407", "prediction": "all x.(Saline(x) -> ContainsDigestiveEnzymes(x))", "score": 0}
{"id": "eqasc_validation_1407", "prediction": "all x y.((Sulfur(x) & DigestiveEnzymes(y)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_1407", "prediction": "all x y.((Saline(x) & DigestiveEnzymes(y)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_1407", "prediction": "all x y.((Sulfate(x) & DigestiveEnzymes(y)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_1407", "prediction": "all x.(Sulfur(x) -> ContainsDigestiveEnzymes(x))", "score": 0}
{"id": "eqasc_validation_1407", "prediction": "all x y.((Saliva(x) & DigestiveEnzymes(y)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_1407", "prediction": "all x y.((Sulfur(x) & DigestiveEnzyme(y)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_1407", "prediction": "all x.(Sulfate(x) -> ContainsDigestiveEnzymes(x))", "score": 0}
{"id": "eqasc_validation_1407", "prediction": "all x.(Sulfur(x) -> DigestiveEnzymes(x))", "score": 0}
{"id": "eqasc_validation_1407", "prediction": "all x.(Sauce(x) -> ContainsDigestiveEnzymes(x))", "score": 0}
{"id": "eqasc_validation_1407", "prediction": "all x.(Saline(x) -> (ContainsDigestiveEnzymes(x)))", "score": 0}
{"id": "eqasc_validation_1407", "prediction": "all x.(Saliva(x) -> ContainsDigestiveEnzymes(x))", "score": 0}
{"id": "eqasc_validation_1407", "prediction": "all x.(Savory(x) -> ContainsDigestiveEnzymes(x))", "score": 0}
{"id": "eqasc_validation_1407", "prediction": "(all x.(Sulfur(x) -> DigestiveEnzymes(x)))", "score": 0}
{"id": "eqasc_validation_1407", "prediction": "(all x.(Saline(x) -> DigestiveEnzymes(x)))", "score": 0}
{"id": "eqasc_validation_1407", "prediction": "all x.(Saline(x) -> DigestiveEnzymes(x))", "score": 0}
{"id": "eqasc_validation_1408", "prediction": "all x.((Food(x) & DigestiveEnzymes(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1408", "prediction": "all x y.((Food(x) & DigestiveEnzymes(y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1408", "prediction": "all x y z.((Food(x) & DigestiveEnzymes(y) & DigestiveEnzymes(z)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1408", "prediction": "all x y.((Food(x) & DigestiveEnzymes(y)) -> EasierToCheek(x,y))", "score": 0}
{"id": "eqasc_validation_1408", "prediction": "all x y z.((Food(x) & DigestiveEnzymes(y) & DigestiveEnzymes(z)) -> EasierToCheek(x,y,z))", "score": 0}
{"id": "eqasc_validation_1408", "prediction": "all x.((Food(x) & DigestiveEnzymes(x)) -> EasyToCheek(x))", "score": 0}
{"id": "eqasc_validation_1408", "prediction": "all x y.((Food(x) & DigestiveEnzymes(y)) -> EasierToCheekDueTo(x,y))", "score": 0}
{"id": "eqasc_validation_1408", "prediction": "all x y z.((Food(x) & DigestiveEnzyme(y) & DigestiveEnzyme(z)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1408", "prediction": "all x.((Food(x) & DigestiveEnzymes(x)) -> EasierToChew(x))", "score": 0}
{"id": "eqasc_validation_1408", "prediction": "all x y z.((Food(x) & DigestiveEnzymes(y) & DigestiveEnzyme(z)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1408", "prediction": "all x y z.((Food(x) & DigestiveEnzymes(y) & DigestiveEnzymes(z)) -> EasierToCheekDueTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_1408", "prediction": "all x y z.((Food(x) & DigestiveEnzymes(y) & DigestiveEnzymes(z)) -> EasierToCheek(x,y))", "score": 0}
{"id": "eqasc_validation_1408", "prediction": "all x y z.((Food(x) & DigestiveEnzyme(y) & DigestiveEnzyme(z)) -> EasierToCheek(x,y,z))", "score": 0}
{"id": "eqasc_validation_1408", "prediction": "all x y z.((Food(x) & DigestiveEnzymes(y) & DigestiveEnzymes(z)) -> EasierToChew(x))", "score": 0}
{"id": "eqasc_validation_1408", "prediction": "all x.((Food(x) & DigestiveEnzymes(x)) -> EasierToChoose(x))", "score": 0}
{"id": "eqasc_validation_1408", "prediction": "all x y z.((Food(x) & DigestiveEnzymes(y) & DigestiveEnzymes(z)) -> EasyToCheek(x))", "score": 0}
{"id": "eqasc_validation_1409", "prediction": "all x.(SalivaryGlands(x) -> FoundInMouth(x))", "score": 0}
{"id": "eqasc_validation_1409", "prediction": "all x y.((SalivaryGlands(x) & Mouth(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_validation_1409", "prediction": "all x y z.((SalivaryGlands(x) & Mouth(y) & Mouth(z)) -> FoundIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1409", "prediction": "all x y z.((SalivaryGlands(x) & Mouth(y) & Mouth(z)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_validation_1409", "prediction": "all x y.((SalivaryGlens(x) & Mouth(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_validation_1409", "prediction": "all x y z.((SalivaryGlands(x) & Mouth(y) & Mouth(z) & FoundIn(x,y,z)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_validation_1409", "prediction": "all x y z.((SalivaryGlands(x) & Mouth(y) & Oral(z)) -> FoundIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1409", "prediction": "all x y z.((SalivaryGlands(x) & Mouth(y) & Mouth(z) & FoundIn(x,y)) -> FoundIn(x,z))", "score": 0}
{"id": "eqasc_validation_1409", "prediction": "all x y.((SalivaryGum(x) & Mouth(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_validation_1409", "prediction": "all x y z.((SalivaryGlands(x) & Mouth(y) & Mouth(z) & FoundIn(x,y,z)) -> FoundIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1409", "prediction": "all x y z.((SalivaryGlands(x) & Mouth(y) & Mouth(z) & FoundIn(x,y,z)) -> SalivaryGlands(x))", "score": 0}
{"id": "eqasc_validation_1409", "prediction": "all x y z.((SalivaryGlands(x) & Mouth(y) & Mush(z)) -> FoundIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1409", "prediction": "all x y z.((SalivaryGlands(x) & Mouth(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_validation_1409", "prediction": "all x y z.((SalivaryGlands(x) & Mouth(y) & Mouth(z)) -> FoundIn(x,z))", "score": 0}
{"id": "eqasc_validation_1409", "prediction": "all x y.((Glands(x) & Mouth(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_validation_1410", "prediction": "all x.((Food(x) & MoistenedBySaliva(x) & FoundInMouth(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1410", "prediction": "all x.((Food(x) & MoistenedBySaline(x) & FoundInMouth(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1410", "prediction": "all x.((Food(x) & MoistenedBySaliva(x) & FoundInMouthGlands(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1410", "prediction": "all x.((Food(x) & MoistenedBySulfur(x) & FoundInMouth(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1410", "prediction": "all x.((Food(x) & MoisturizedBySaliva(x) & FoundInMouth(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1410", "prediction": "all x.((Food(x) & MoistenedBySaline(x) & FoundInMouthGlands(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1410", "prediction": "all x.((Food(x) & MoisturizedBySulfur(x) & FoundInMouth(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1410", "prediction": "all x.((Food(x) & MoisturedBySaliva(x) & FoundInMouth(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1410", "prediction": "all x y z.((Food(x) & Saliva(y) & GlandsInMouth(z) & MoistenedBy(x,y,z)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1410", "prediction": "all x y z.((Food(x) & Saliva(y) & GlandsInMouth(z)) -> MoistenedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1410", "prediction": "all x.((Food(x) & MoistenedBySaliva(x) & FoundInMouth(x)) -> EasyToCheek(x))", "score": 0}
{"id": "eqasc_validation_1410", "prediction": "all x y z.((Food(x) & Saliva(y) & GlandsInMouth(z) & MoistenedBy(x,y,z)) -> EasyToCheek(x))", "score": 0}
{"id": "eqasc_validation_1410", "prediction": "all x.(EasierToCheek(x) -> (Food(x) & MoistenedBySaline(x) & FromGlandsInMouth(x)))", "score": 0}
{"id": "eqasc_validation_1410", "prediction": "all x.((Food(x) & MoistenedBySaliva(x) & FoundInMouth(x)) -> EasierToChew(x))", "score": 0}
{"id": "eqasc_validation_1410", "prediction": "all x y z.((Food(x) & Saliva(y) & GlandsInMouth(z) & MoistenedBy(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1410", "prediction": "all x.((Food(x) & MoistenedBySaliva(x) & FoundInMouthGlands(x)) -> EasyToCheek(x))", "score": 0}
{"id": "eqasc_validation_1411", "prediction": "all x.(BirdFood(x) -> BrainFood(x))", "score": 0}
{"id": "eqasc_validation_1411", "prediction": "all x.(BodyFood(x) -> BrainFood(x))", "score": 0}
{"id": "eqasc_validation_1411", "prediction": "all x.(BrainFood(x) -> BrainFood(x))", "score": 0}
{"id": "eqasc_validation_1411", "prediction": "all x.(BloodFood(x) -> BrainFood(x))", "score": 0}
{"id": "eqasc_validation_1411", "prediction": "all x.(Blood(x) -> BrainFood(x))", "score": 0}
{"id": "eqasc_validation_1411", "prediction": "all x.(Bloodfood(x) -> BrainFood(x))", "score": 0}
{"id": "eqasc_validation_1411", "prediction": "all x.(Breakfast(x) -> BrainFood(x))", "score": 0}
{"id": "eqasc_validation_1411", "prediction": "all x.(BoneFood(x) -> BrainFood(x))", "score": 0}
{"id": "eqasc_validation_1411", "prediction": "all x.(BirdFood(x) -> (Bagel(x) & BrainFood(x)))", "score": 0}
{"id": "eqasc_validation_1411", "prediction": "all x.(BuncleFood(x) -> BrainFood(x))", "score": 0}
{"id": "eqasc_validation_1411", "prediction": "all x.(Board(x) -> BrainFood(x))", "score": 0}
{"id": "eqasc_validation_1411", "prediction": "all x.(BerryFood(x) -> BrainFood(x))", "score": 0}
{"id": "eqasc_validation_1411", "prediction": "all x.(BirthFood(x) -> BrainFood(x))", "score": 0}
{"id": "eqasc_validation_1411", "prediction": "all x.(Bullet(x) -> BrainFood(x))", "score": 0}
{"id": "eqasc_validation_1411", "prediction": "all x.(BirdFood(x) -> (Bagels(x) & BrainFood(x)))", "score": 0}
{"id": "eqasc_validation_1412", "prediction": "all x.(Bagel(x) -> (EasierToCheek(x) & MoistenedBySaliva(x)))", "score": 0}
{"id": "eqasc_validation_1412", "prediction": "all x.(Bagel(x) -> (EasierToCheek(x) & MoistenedBySaline(x)))", "score": 0}
{"id": "eqasc_validation_1412", "prediction": "all x y.((Bagel(x) & SalivaryGlands(y)) -> MoistenedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1412", "prediction": "all x y.((Bagel(x) & SalivaryGlands(y) & MoistenedBy(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1412", "prediction": "all x.((Bagel(x) & MoistenedBySaliva(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1412", "prediction": "all x y.((Bagel(x) & SalivaryGlands(y)) -> (EasierToCheek(x,y) & MoistenedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1412", "prediction": "all x.(Bagel(x) -> (EasierToCheek(x) & MoistenedBySalineGlands(x)))", "score": 0}
{"id": "eqasc_validation_1412", "prediction": "all x y.((Bagel(x) & SalivaryGlands(y)) -> (EasierToCheek(x) & MoistenedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1412", "prediction": "all x y.((Bagel(x) & SalivaryGlands(y) & MoistenedBy(x,y)) -> EasyToCheek(x))", "score": 0}
{"id": "eqasc_validation_1412", "prediction": "all x.((Bagel(x) & MoisturizedBySaliva(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1412", "prediction": "all x.((Bagel(x) & MoistenedBySaline(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1412", "prediction": "all x.((Bagel(x) & MoistenedBySaliva(x)) -> EasyToCheek(x))", "score": 0}
{"id": "eqasc_validation_1412", "prediction": "all x.((Bagel(x) & MoisturizedBySaline(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1412", "prediction": "all x y.((Bagel(x) & Saliva(y)) -> MoistenedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1412", "prediction": "all x.(Bagel(x) -> (EasierToCheek(x) & MoistenedBySaliva(x) & FromSalivaryGlands(x)))", "score": 0}
{"id": "eqasc_validation_1412", "prediction": "all x.(Bagel(x) -> (EasierToCheek(x) & MoistenedBySavor(x)))", "score": 0}
{"id": "eqasc_validation_1413", "prediction": "all x y z.((Feed(x) & Saliva(y) & Mouth(z)) -> (MixedWith(x,y,z) & MakesMoistBolus(x) & CanBeEasilySneaked(x)))", "score": 0}
{"id": "eqasc_validation_1413", "prediction": "all x y z.((Feed(x) & Saliva(y) & Mouth(z)) -> (MixedWith(x,y,z) & MakesMoistBolus(x) & CanBeEasilySnucked(x)))", "score": 0}
{"id": "eqasc_validation_1413", "prediction": "all x y z.((Feed(x) & Saliva(y) & Mouth(z)) -> (MixedWith(x,y,z) & MakesMoistBbolus(x) & CanBeEasilySnucked(x)))", "score": 0}
{"id": "eqasc_validation_1413", "prediction": "all x y z.((Feed(x) & Saliva(y) & Mouth(z)) -> (MixedWith(x,y,z) & MakesMoistBbolus(x) & CanBeEasilySneaked(x)))", "score": 0}
{"id": "eqasc_validation_1413", "prediction": "all x y z.((Feed(x) & Saliva(y) & Mouth(z) & MixedWith(x,y,z)) -> MakesMoistBolus(x))", "score": 0}
{"id": "eqasc_validation_1413", "prediction": "all x y z.((Feed(x) & Saliva(y) & Mouth(z)) -> (MixedWith(x,y,z) & MakesMoistBbolus(x) & CanBeEasilySnoughed(x)))", "score": 0}
{"id": "eqasc_validation_1413", "prediction": "all x y z.((Feed(x) & Saliva(y) & Mouth(z)) -> (MixedWith(x,y,z) & MakesMoistBolus(x) & CanBeEasilySnaped(x)))", "score": 0}
{"id": "eqasc_validation_1413", "prediction": "all x y z.((Feed(x) & Saliva(y) & Mouth(z) & MixedWith(x,y,z)) -> MoistBolus(x))", "score": 0}
{"id": "eqasc_validation_1413", "prediction": "all x y z.((Feed(x) & Saliva(y) & Mouth(z)) -> (MixedWith(x,y,z) & MakesMoistBolus(x) & EasyToSnake(x)))", "score": 0}
{"id": "eqasc_validation_1413", "prediction": "all x y z.((Feed(x) & Saliva(y) & Mouth(z)) -> (MixedWith(x,y,z) & MakesMoistBolus(x) & CanBeEasilySnoughed(x)))", "score": 0}
{"id": "eqasc_validation_1413", "prediction": "all x y z.((Feed(x) & Saliva(y) & Mouth(z)) -> (MixedWith(x,y,z) & MakesMoistBolus(x) & CanBeEasilySnorted(x)))", "score": 0}
{"id": "eqasc_validation_1413", "prediction": "all x y z.((Feed(x) & Saliva(y) & Mouth(z)) -> (MixedWith(x,y,z) & MakesMoistBbolus(x) & EasyToSnake(x)))", "score": 0}
{"id": "eqasc_validation_1413", "prediction": "all x y z.((Feed(x) & Saliva(y) & Mouth(z)) -> (MixedWith(x,y,z) & MakesMoistBbolus(x) & CanBeEasilySnapped(x)))", "score": 0}
{"id": "eqasc_validation_1413", "prediction": "all x y z.((Feed(x) & Saliva(y) & Mouth(z)) -> (MixedWith(x,y,z) & MakesMoistBbolus(x) & CanBeEasilySnaped(x)))", "score": 0}
{"id": "eqasc_validation_1413", "prediction": "all x y z.((Feed(x) & Saliva(y) & Mouth(z)) -> (MixedWith(x,y,z) & MakesMoistBbolus(x) & CanBeEasilySnorted(x)))", "score": 0}
{"id": "eqasc_validation_1413", "prediction": "all x y z.((Feed(x) & Saliva(y) & Mouth(z)) -> (MixedWith(x,y,z) & MakesMoistBolus(x) & CanBeEasilySneezed(x)))", "score": 0}
{"id": "eqasc_validation_1414", "prediction": "all x.(Bulus(x) -> MoistenedFood(x))", "score": 0}
{"id": "eqasc_validation_1414", "prediction": "all x.(Bolus(x) -> MoistenedFood(x))", "score": 0}
{"id": "eqasc_validation_1414", "prediction": "all x.(Bbolus(x) -> MoistenedFood(x))", "score": 0}
{"id": "eqasc_validation_1414", "prediction": "all x y.((Bolus(x) & Food(y)) -> Moistened(x,y))", "score": 0}
{"id": "eqasc_validation_1414", "prediction": "all x y.((Bbolus(x) & Food(y)) -> Moistened(x,y))", "score": 0}
{"id": "eqasc_validation_1414", "prediction": "all x.(bolus(x) -> MoistenedFood(x))", "score": 0}
{"id": "eqasc_validation_1414", "prediction": "all x.(Blood(x) -> MoistenedFood(x))", "score": 0}
{"id": "eqasc_validation_1414", "prediction": "all x y.((Bolus(x) & MoistenedFood(y)) -> MoistenedFood(x,y))", "score": 0}
{"id": "eqasc_validation_1414", "prediction": "all x y.((Bbolus(x) & MoistenedFood(y)) -> MoistenedFood(x,y))", "score": 0}
{"id": "eqasc_validation_1414", "prediction": "all x y.((Bulus(x) & Food(y)) -> Moistened(x,y))", "score": 0}
{"id": "eqasc_validation_1414", "prediction": "all x y.((Bolus(x) & Food(y)) -> MoistenedFood(x,y))", "score": 0}
{"id": "eqasc_validation_1414", "prediction": "all x y.((Bbolus(x) & Food(y)) -> MoistenedFood(x,y))", "score": 0}
{"id": "eqasc_validation_1414", "prediction": "all x.(Bulus(x) -> (MoistenedFood(x) & MoistenedFood(x)))", "score": 0}
{"id": "eqasc_validation_1414", "prediction": "all x y.((Bolus(x) & MoistenedFood(y)) -> MoistenedFood(x))", "score": 0}
{"id": "eqasc_validation_1414", "prediction": "all x y.((Bbolus(x) & MoistenedFood(y)) -> MoistenedFood(x))", "score": 0}
{"id": "eqasc_validation_1415", "prediction": "all x y.((Saliva(x) & Rumen(y)) -> ContributesMoreThan70Percent(x,y))", "score": 0}
{"id": "eqasc_validation_1415", "prediction": "all x.(Saliva(x) -> ContributesMoreThan(x,70))", "score": 0}
{"id": "eqasc_validation_1415", "prediction": "all x.(Saliva(x) -> ContributesMoreThan70PercentLiquidInRumen(x))", "score": 0}
{"id": "eqasc_validation_1415", "prediction": "all x y.((Saliva(x) & Rumen(y)) -> ContributesMoreThan(x,y))", "score": 0}
{"id": "eqasc_validation_1415", "prediction": "all x y.((Saliva(x) & Rumen(y)) -> ContributesMoreThan70PercentLiquid(x,y))", "score": 0}
{"id": "eqasc_validation_1415", "prediction": "all x.(Saliva(x) -> ContributesMoreThan70PercentLiquid(x))", "score": 0}
{"id": "eqasc_validation_1415", "prediction": "all x y.((Saliva(x) & Rumen(y)) -> ContributesMoreThan(x,70))", "score": 0}
{"id": "eqasc_validation_1415", "prediction": "all x y z.((Saliva(x) & Rumen(y) & Liquid(z)) -> ContributesMoreThan(x,y,z))", "score": 0}
{"id": "eqasc_validation_1415", "prediction": "all x y z.((Saliva(x) & Rumen(y) & Liquid(z)) -> ContributesMoreThan70Percent(x,y,z))", "score": 0}
{"id": "eqasc_validation_1415", "prediction": "all x y z.((Saliva(x) & Rumen(y) & Liquid(z)) -> ContributesMoreThan70Percent(x,z))", "score": 0}
{"id": "eqasc_validation_1415", "prediction": "all x.(Saliva(x) -> ContributesMoreThan70Percent(x))", "score": 0}
{"id": "eqasc_validation_1415", "prediction": "all x.(Saliva(x) -> (ContributesMoreThan70PercentLiquid(x) & InRumen(x)))", "score": 0}
{"id": "eqasc_validation_1415", "prediction": "all x y z.((Saliva(x) & Rumen(y) & Liquid(z)) -> ContributesTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_1415", "prediction": "all x y.((Saliva(x) & Rumen(y)) -> ContributesMoreThan70PercentOfLiquid(x,y))", "score": 0}
{"id": "eqasc_validation_1415", "prediction": "all x.(Saliva(x) -> ContributesMoreThan70PercentOfLiquidInRumen(x))", "score": 0}
{"id": "eqasc_validation_1415", "prediction": "all x.(Saliva(x) -> ContributesMoreThan70PercentOfLiquid(x))", "score": 0}
{"id": "eqasc_validation_1416", "prediction": "all x.((Food(x) & MoistenedByLiquid(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1416", "prediction": "all x.((Food(x) & MoisturedByLiquid(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1416", "prediction": "all x.((Food(x) & MoisturizedByLiquid(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1416", "prediction": "all x y.((Food(x) & Liquid(y) & MoistenedBy(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1416", "prediction": "all x y.((Food(x) & Liquid(y) & MoisturizedBy(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1416", "prediction": "all x y.((Food(x) & Liquid(y)) -> (EasierToCheek(x) & MoistenedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1416", "prediction": "all x.((Food(x) & MoistenedByLiquids(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1416", "prediction": "all x.((Food(x) & MoisturedByLiquids(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1416", "prediction": "all x y.((Food(x) & Liquid(y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1416", "prediction": "all x.((Food(x) & MoisturizedByLiquids(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1416", "prediction": "all x y.((Food(x) & Liquid(y)) -> (EasierToCheek(x) & MoisturizedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1416", "prediction": "all x y.((Food(x) & Liquid(y)) -> (EasierToCheek(x) & MoisturedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1416", "prediction": "all x y.((Food(x) & Liquid(y) & Moisture(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1416", "prediction": "all x y z.((Food(x) & Liquid(y) & Moisture(z) & Moisture(z)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1416", "prediction": "all x y z.((Food(x) & Liquid(y) & Moisture(z)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1416", "prediction": "all x.((Food(x) & MoistenedByLiquid(x)) -> EasyToCheek(x))", "score": 0}
{"id": "eqasc_validation_1417", "prediction": "all x.(Milk(x) -> NutritiousFluid(x))", "score": 0}
{"id": "eqasc_validation_1417", "prediction": "all x.(Milk(x) -> NutritiousFlour(x))", "score": 0}
{"id": "eqasc_validation_1417", "prediction": "all x.((Milk(x) & NutritiousFluid(x)) -> Nutritious(x))", "score": 0}
{"id": "eqasc_validation_1417", "prediction": "all x.((Milk(x) & NutritiousFluid(x)) -> NutritiousFluid(x))", "score": 0}
{"id": "eqasc_validation_1417", "prediction": "all x y.((Milk(x) & Fluid(y)) -> Nutritious(x,y))", "score": 0}
{"id": "eqasc_validation_1417", "prediction": "all x y.((Milk(x) & NutritiousFluid(y)) -> Nutritious(x,y))", "score": 0}
{"id": "eqasc_validation_1417", "prediction": "all x y.((Milk(x) & NutritiousFluid(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_1417", "prediction": "exists x.(Milk(x) & NutritiousFluid(x))", "score": 0}
{"id": "eqasc_validation_1417", "prediction": "all x y.((Milk(x) & NutritiousFluid(y)) -> Milk(x))", "score": 0}
{"id": "eqasc_validation_1417", "prediction": "all x y.((Milk(x) & NutritiousFluid(y)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_1417", "prediction": "All x.(Milk(x) -> NutritiousFluid(x))", "score": -1}
{"id": "eqasc_validation_1417", "prediction": "all x y.((Milk(x) & NutritiousFluid(y)) -> Nutritious(x))", "score": 0}
{"id": "eqasc_validation_1417", "prediction": "all x y.((Milk(x) & Fluid(y)) -> Nutritious(x))", "score": 0}
{"id": "eqasc_validation_1417", "prediction": "all x.(Milk(x) -> NutritiousFloid(x))", "score": 0}
{"id": "eqasc_validation_1417", "prediction": "all x y.((Milk(x) & NutritiousFluid(y)) -> NutritiousFluid(x))", "score": 0}
{"id": "eqasc_validation_1418", "prediction": "all x.(CowsMilk(x) -> DesignedForBabyCows(x))", "score": 0}
{"id": "eqasc_validation_1418", "prediction": "all x y.((CowsMilk(x) & Cow(y)) -> DesignedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1418", "prediction": "all x.(CowsMilk(x) -> (DesignedForBabyCows(x) & CowsMilk(x)))", "score": 0}
{"id": "eqasc_validation_1418", "prediction": "all x.((CowsMilk(x) & Cow(y)) -> DesignedForBabyCows(x,y))", "score": 0}
{"id": "eqasc_validation_1418", "prediction": "all x y.((CowsMilk(x) & Cow(y)) -> DesignedForBabyCows(x,y))", "score": 0}
{"id": "eqasc_validation_1418", "prediction": "all x.(CowsMilk(x) -> (DesignedForBabyCows(x) & DesignedForBabyCows(x)))", "score": 0}
{"id": "eqasc_validation_1418", "prediction": "all x y.((CowsMilk(x) & BabyCow(y)) -> DesignedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1418", "prediction": "all x.((CowsMilk(x) & CowsMilk(x)) -> DesignedForBabyCows(x))", "score": 0}
{"id": "eqasc_validation_1418", "prediction": "all x.(Cow'sMilk(x) -> DesignedForBabyCows(x))", "score": 0}
{"id": "eqasc_validation_1419", "prediction": "all x.(Cow(x) -> MakesNutritiousFluid(x))", "score": 0}
{"id": "eqasc_validation_1419", "prediction": "all x y.((Cow(x) & Cow(y)) -> MakesNutritiousFluid(x,y))", "score": 0}
{"id": "eqasc_validation_1419", "prediction": "all x y.((Cow(x) & Fluid(y)) -> MakesNutritious(x,y))", "score": 0}
{"id": "eqasc_validation_1419", "prediction": "all x y.((Cow(x) & NutritiousFluid(y)) -> Makes(x,y))", "score": 0}
{"id": "eqasc_validation_1419", "prediction": "all x y.((Cow(x) & Milk(y)) -> MakesNutritiousFluid(x,y))", "score": 0}
{"id": "eqasc_validation_1419", "prediction": "all x y z.((Cow(x) & NutritiousFluid(y) & Cow(z)) -> Makes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1419", "prediction": "all x y z.((Cow(x) & Fluid(y) & Fluid(z)) -> MakesNutritious(x,y,z))", "score": 0}
{"id": "eqasc_validation_1419", "prediction": "all x.(Cow(x) -> MakesNourishingFluid(x))", "score": 0}
{"id": "eqasc_validation_1419", "prediction": "all x y z.((Cow(x) & NutritiousFluid(y) & Fluid(z)) -> Makes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1419", "prediction": "all x.(Cow(x) -> (MakesNutritiousFluid(x) & MakesNutritiousFluid(x)))", "score": 0}
{"id": "eqasc_validation_1419", "prediction": "all x y.((Cow(x) & Cow(y)) -> MakesNourishingFluid(x,y))", "score": 0}
{"id": "eqasc_validation_1419", "prediction": "all x.(Cow(x) -> (MakesNutritiousFluid(x) & MakesFluid(x)))", "score": 0}
{"id": "eqasc_validation_1419", "prediction": "all x y z.((Cow(x) & Fluid(y) & Fluid(z)) -> MakesNutritious(x,y))", "score": 0}
{"id": "eqasc_validation_1420", "prediction": "all x.((Fluids(x) & PreventsDehydration(x) & NutritiousDiet(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1420", "prediction": "all x.((Fluid(x) & PreventsDehydration(x) & NutritiousDiet(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1420", "prediction": "all x.((Fluids(x) & PreventDehydration(x) & NutritiousDiet(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1420", "prediction": "all x.((Fluids(x) & Dehydration(x) & NutritiousDiet(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1420", "prediction": "all x.((Fluids(x) & DehydrationPrevention(x) & NutritiousDiet(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1420", "prediction": "all x.((Fluids(x) & PreventionOfDehydration(x) & NutritiousDiet(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1420", "prediction": "all x y.((Fluid(x) & PreventsDehydration(x) & NutritiousDiet(y)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1420", "prediction": "all x.((Fluid(x) & Dehydration(x) & NutritiousDiet(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1420", "prediction": "all x.((Flour(x) & PreventsDehydration(x) & NutritiousDiet(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1420", "prediction": "all x.((Fluids(x) & PreventsDehydration(x) & NutritiousDiet(x)) -> AlsoImportant(x))", "score": 0}
{"id": "eqasc_validation_1420", "prediction": "all x y.((Fluid(x) & Dehydration(y) & NutritiousDiet(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1420", "prediction": "all x.((Fluids(x) & -Dehydration(x) & NutritiousDiet(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1420", "prediction": "all x.((Floss(x) & PreventsDehydration(x) & NutritiousDiet(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1420", "prediction": "all x.(Fluids(x) -> (PreventsDehydration(x) & NutritiousDiet(x)))", "score": 0}
{"id": "eqasc_validation_1420", "prediction": "all x.((Fluids(x) & PreventsDehydration(x) & NutritionalDiet(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1420", "prediction": "all x.((FluidsToPreventDehydration(x) & NutritiousDiet(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1421", "prediction": "all x.(Milk(x) -> (Nutritious(x) & PreventsDehydration(x)))", "score": 0}
{"id": "eqasc_validation_1421", "prediction": "all x.(Milk(x) -> (Naturally(x) & PreventsDehydration(x)))", "score": 0}
{"id": "eqasc_validation_1421", "prediction": "all x.(Milk(x) -> (Natural(x) & PreventsDehydration(x)))", "score": 0}
{"id": "eqasc_validation_1421", "prediction": "all x.(Milk(x) -> (Nourishing(x) & PreventsDehydration(x)))", "score": 0}
{"id": "eqasc_validation_1421", "prediction": "all x y.((Milk(x) & Dehydration(y)) -> (Nutritious(x) & Prevents(x,y)))", "score": 0}
{"id": "eqasc_validation_1421", "prediction": "all x.(Milk(x) -> (NaturallyGood(x) & PreventsDehydration(x)))", "score": 0}
{"id": "eqasc_validation_1421", "prediction": "all x.((Milk(x) & Nutritious(x) & PreventsDehydration(x)) -> Nutritious(x))", "score": 0}
{"id": "eqasc_validation_1421", "prediction": "all x y.((Milk(x) & Nutritious(x) & PreventsDehydration(y)) -> Nutritious(x))", "score": 0}
{"id": "eqasc_validation_1421", "prediction": "all x y.((Milk(x) & Nutritious(x) & Dehydration(y)) -> Prevents(x,y))", "score": 0}
{"id": "eqasc_validation_1421", "prediction": "All x.(Milk(x) -> (Nutritious(x) & PreventsDehydration(x)))", "score": -1}
{"id": "eqasc_validation_1421", "prediction": "all x.(Milk(x) -> (NaturallyNutritious(x) & PreventsDehydration(x)))", "score": 0}
{"id": "eqasc_validation_1421", "prediction": "all x.(Milk(x) -> (Nutritious(x) & -Dehydration(x)))", "score": 0}
{"id": "eqasc_validation_1421", "prediction": "exists x.(Milk(x) & Nutritious(x) & PreventsDehydration(x))", "score": 0}
{"id": "eqasc_validation_1421", "prediction": "all x y.((Milk(x) & Dehydration(y)) -> (Nutritious(x,y) & Prevents(x,y)))", "score": 0}
{"id": "eqasc_validation_1422", "prediction": "all x.(FluidMilk(x) -> (FortifiedWithVitaminD(x) & RichInCalcium(x)))", "score": 0}
{"id": "eqasc_validation_1422", "prediction": "all x y.((FluidMilk(x) & VitaminD(y)) -> (FortifiedWith(x,y) & RichInCalcium(x)))", "score": 0}
{"id": "eqasc_validation_1422", "prediction": "all x.(FlowerMilk(x) -> (FortifiedWithVitaminD(x) & RichInCalcium(x)))", "score": 0}
{"id": "eqasc_validation_1422", "prediction": "all x y z.((FluidMilk(x) & VitaminD(y) & Calcium(z)) -> (FortifiedWith(x,y) & RichIn(x,z)))", "score": 0}
{"id": "eqasc_validation_1422", "prediction": "all x.(FlourMilk(x) -> (FortifiedWithVitaminD(x) & RichInCalcium(x)))", "score": 0}
{"id": "eqasc_validation_1422", "prediction": "all x.(FlourishMilk(x) -> (FortifiedWithVitaminD(x) & RichInCalcium(x)))", "score": 0}
{"id": "eqasc_validation_1422", "prediction": "all x y.((FluidMilk(x) & VitaminD(y)) -> (Fortified(x,y) & RichInCalcium(x)))", "score": 0}
{"id": "eqasc_validation_1422", "prediction": "all x.(FluidMilk(x) -> (FortifiedWith(x,VitaminD) & RichInCalcium(x)))", "score": 0}
{"id": "eqasc_validation_1422", "prediction": "all x.(FloidMilk(x) -> (FortifiedWithVitaminD(x) & RichInCalcium(x)))", "score": 0}
{"id": "eqasc_validation_1422", "prediction": "all x.((FluidMilk(x) & FortifiedWithVitaminD(x) & RichInCalcium(x)) -> FortifiedWith(x,VitaminD))", "score": 0}
{"id": "eqasc_validation_1422", "prediction": "all x.((FluidMilk(x) & FortifiedWithVitaminD(x) & RichInCalcium(x)) -> FortifiedWithVitaminD(x))", "score": 0}
{"id": "eqasc_validation_1422", "prediction": "all x.((FluidMilk(x) & FortifiedWithVitaminD(x) & RichInCalcium(x)) -> FortifiedWithCalcium(x))", "score": 0}
{"id": "eqasc_validation_1422", "prediction": "all x.((FluidMilk(x) & FortifiedWithVitaminD(x) & RichInCalcium(x)) -> FortifiedWith(x))", "score": 0}
{"id": "eqasc_validation_1422", "prediction": "all x.((FluidMilk(x) & FortifiedWithVitaminD(x) & RichInCalcium(x)) -> FortifiedWithCaffeine(x))", "score": 0}
{"id": "eqasc_validation_1422", "prediction": "all x.((Milk(x) & FortifiedWithVitaminD(x) & RichInCalcium(x)) -> Fluid(x))", "score": 0}
{"id": "eqasc_validation_1423", "prediction": "all x.((Milk(x) & VitaminD(x) & Calcium(x)) -> Nutritious(x))", "score": 0}
{"id": "eqasc_validation_1423", "prediction": "all x y.((Milk(x) & VitaminD(y) & Calcium(y)) -> Nutritious(x))", "score": 0}
{"id": "eqasc_validation_1423", "prediction": "all x.((Milk(x) & HasVitaminD(x) & HasCalcium(x)) -> Nutritious(x))", "score": 0}
{"id": "eqasc_validation_1423", "prediction": "all x y z.((Milk(x) & VitaminD(y) & Calcium(z)) -> Nutritious(x))", "score": 0}
{"id": "eqasc_validation_1423", "prediction": "all x.(Milk(x) -> (Nutritious(x) & VitaminD(x) & Calcium(x)))", "score": 0}
{"id": "eqasc_validation_1423", "prediction": "all x.((Milk(x) & Nutritious(x)) -> (HasVitaminD(x) & HasCalcium(x)))", "score": 0}
{"id": "eqasc_validation_1423", "prediction": "all x.((Milk(x) & Nutritious(x)) -> (VitaminD(x) & Calcium(x)))", "score": 0}
{"id": "eqasc_validation_1423", "prediction": "all x y.((Milk(x) & VitaminD(y) & Calcium(y)) -> Nutritious(x,y))", "score": 0}
{"id": "eqasc_validation_1423", "prediction": "all x y z.((Milk(x) & VitaminD(y) & Calcium(z) & Has(x,y) & Has(x,z)) -> Nutritious(x))", "score": 0}
{"id": "eqasc_validation_1423", "prediction": "all x y.((Milk(x) & VitaminD(y) & Calcium(z)) -> Nutritious(x))", "score": 0}
{"id": "eqasc_validation_1423", "prediction": "all x y z.((Milk(x) & VitaminD(y) & Calcium(z)) -> (Nutritious(x) & Has(x,y) & Has(x,z)))", "score": 0}
{"id": "eqasc_validation_1423", "prediction": "all x y z.((Milk(x) & VitaminD(y) & Calcium(z) & Has(x,y)) -> Nutritious(x))", "score": 0}
{"id": "eqasc_validation_1423", "prediction": "all x y z.((Milk(x) & VitaminD(y) & Calcium(z)) -> Nutritious(x,y,z))", "score": 0}
{"id": "eqasc_validation_1423", "prediction": "all x.((Milk(x) & HasVitaminD(x) & Calcium(x)) -> Nutritious(x))", "score": 0}
{"id": "eqasc_validation_1424", "prediction": "all x y.((BreastMilk(x) & Newborn(y)) -> IdealNutrition(x,y))", "score": 0}
{"id": "eqasc_validation_1424", "prediction": "all x.((BreastMilk(x) & Newborn(y)) -> IdealNutrition(x,y))", "score": 0}
{"id": "eqasc_validation_1424", "prediction": "all x.((BreastMilk(x) & Newborn(x)) -> IdealNutrition(x))", "score": 0}
{"id": "eqasc_validation_1424", "prediction": "all x.(BreastMilk(x) -> IdealNutritionForNewborn(x))", "score": 0}
{"id": "eqasc_validation_1424", "prediction": "all x y z.((BreastMilk(x) & Newborn(y) & Newborn(z)) -> IdealNutrition(x,y,z))", "score": 0}
{"id": "eqasc_validation_1424", "prediction": "all x y.((BreastMilk(x) & Newborn(y)) -> IdealNutrient(x,y))", "score": 0}
{"id": "eqasc_validation_1424", "prediction": "all x y.((BreastMilk(x) & Newborn(y)) -> IdealNutritional(x,y))", "score": 0}
{"id": "eqasc_validation_1424", "prediction": "all x.(BreastMilk(x) -> IdealNutrition(x))", "score": 0}
{"id": "eqasc_validation_1424", "prediction": "all x y.((BreastMilk(x) & Newborn(y) & IdealNutrition(x,y)) -> BreastMilk(x))", "score": 0}
{"id": "eqasc_validation_1424", "prediction": "all x.((BreastMilk(x) & Newborn(x)) -> IdealNutrition(x,y))", "score": 0}
{"id": "eqasc_validation_1424", "prediction": "all x y.((BreastMilk(x) & Newborn(y)) -> IdealNutritionFor(x,y))", "score": 0}
{"id": "eqasc_validation_1424", "prediction": "all x y.((BreastMilk(x) & Newborn(y) & IdealNutrition(x,y)) -> BreastMilk(x,y))", "score": 0}
{"id": "eqasc_validation_1424", "prediction": "all x.((BreastMilk(x) & Neonatal(y)) -> IdealNutrition(x,y))", "score": 0}
{"id": "eqasc_validation_1424", "prediction": "all x.((BreastMilk(x) & Newborn(y)) -> IdealNutrient(x,y))", "score": 0}
{"id": "eqasc_validation_1425", "prediction": "all x y.((Newborn(x) & Breast(y)) -> GetsNutritionFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1425", "prediction": "all x y z.((Newborn(x) & Breast(y) & Breast(z)) -> GetsNutritionFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1425", "prediction": "all x.(Newborn(x) -> GetsNutritionFromBreasts(x))", "score": 0}
{"id": "eqasc_validation_1425", "prediction": "all x y.((Nature(x) & Breast(y)) -> GetsNutritionFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1425", "prediction": "all x y z.((Newborn(x) & Breasts(y) & Breasts(z)) -> GetsNutritionFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1425", "prediction": "all x.((Newborn(x) & Breast(y)) -> GetsNutritionFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1425", "prediction": "all x y.((Newborn(x) & Breasts(y)) -> GetsNutritionFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1425", "prediction": "all x.(Newborn(x) -> (GetsNutritionFromBreasts(x) & Breasts(x)))", "score": 0}
{"id": "eqasc_validation_1425", "prediction": "all x y z.((Nature(x) & Breast(y) & Breast(z)) -> GetsNutritionFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1425", "prediction": "all x.(Newborn(x) -> (GetsNutritionFromBreasts(x) & FromBreasts(x)))", "score": 0}
{"id": "eqasc_validation_1425", "prediction": "all x y.((Natal(x) & Breast(y)) -> GetsNutritionFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1425", "prediction": "all x.((Newborn(x) & Breast(x)) -> GetsNutritionFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1425", "prediction": "all x y z.((Newborn(x) & Breasts(y) & Breast(z)) -> GetsNutritionFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1425", "prediction": "all x.(Nature(x) -> GetsNutritionFromBreasts(x))", "score": 0}
{"id": "eqasc_validation_1425", "prediction": "all x.((Newborn(x) & Breasts(x)) -> GetsNutritionFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1425", "prediction": "all x.(Nature(x) -> (GetsNutritionFromBreasts(x) & Breasts(x)))", "score": 0}
{"id": "eqasc_validation_1426", "prediction": "all x y.((Milk(x) & Cow(y)) -> ComesFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1426", "prediction": "all x y z.((Milk(x) & Cow(y) & Cow(z)) -> ComesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1426", "prediction": "all x.(Milk(x) -> Cow(x))", "score": 0}
{"id": "eqasc_validation_1426", "prediction": "all x.(Milk(x) -> ComesFromCows(x))", "score": 0}
{"id": "eqasc_validation_1426", "prediction": "all x.(Milk(x) -> ComesFrom(x,Cows))", "score": 0}
{"id": "eqasc_validation_1426", "prediction": "all x y z.((Milk(x) & Cow(y) & Cow(z)) -> ComesFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1426", "prediction": "All x y.((Milk(x) & Cow(y)) -> ComesFrom(x,y))", "score": -1}
{"id": "eqasc_validation_1426", "prediction": "all x y z.((Milk(x) & Cow(y) & Milk(z)) -> ComesFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1426", "prediction": "all x y z.((Milk(x) & Cow(y) & Cow(z)) -> (ComesFrom(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1426", "prediction": "all x y z.((Milk(x) & Cow(y) & Cow(z)) -> (ComesFrom(x,y) & ComesFrom(x,z)))", "score": 0}
{"id": "eqasc_validation_1426", "prediction": "all x.(Milk(x) -> ComesFromCow(x))", "score": 0}
{"id": "eqasc_validation_1426", "prediction": "all x y.((Milk(x) & Cow(y)) -> (ComesFrom(x,y)))", "score": 0}
{"id": "eqasc_validation_1426", "prediction": "all x y.((Milk(x) & Cow(y)) -> CameFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1426", "prediction": "all x y z.((Milk(x) & Cow(y) & Cow(z)) -> (ComesFrom(x,y) | ComesFrom(x,z)))", "score": 0}
{"id": "eqasc_validation_1427", "prediction": "all x.(MilkShake(x) -> HasMilk(x))", "score": 0}
{"id": "eqasc_validation_1427", "prediction": "all x.(MilkShakes(x) -> HasMilk(x))", "score": 0}
{"id": "eqasc_validation_1427", "prediction": "all x y.((MilkShake(x) & Milk(y)) -> HasMilk(x,y))", "score": 0}
{"id": "eqasc_validation_1427", "prediction": "all x y.((MilkShake(x) & Milk(y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_1427", "prediction": "exists x.(MilkShake(x) & HasMilk(x))", "score": 0}
{"id": "eqasc_validation_1427", "prediction": "all x.(MilkShake(x) -> Milk(x))", "score": 0}
{"id": "eqasc_validation_1427", "prediction": "(all x.(MilkShake(x) -> HasMilk(x)))", "score": 0}
{"id": "eqasc_validation_1427", "prediction": "all x.(Shake(x) -> HasMilk(x))", "score": 0}
{"id": "eqasc_validation_1427", "prediction": "all x y.((MilkShake(x) & Milk(y)) -> HasMilk(x))", "score": 0}
{"id": "eqasc_validation_1428", "prediction": "all x.(Milkshake(x) -> NutritiousFluid(x))", "score": 0}
{"id": "eqasc_validation_1428", "prediction": "all x y.((Milkshake(x) & Fluid(y)) -> Nutritious(x,y))", "score": 0}
{"id": "eqasc_validation_1428", "prediction": "all x.(Milkshake(x) -> (NutritiousFluid(x) & NutritiousFluid(x)))", "score": 0}
{"id": "eqasc_validation_1428", "prediction": "all x y z.((Milkshake(x) & Fluid(y) & Fluid(z)) -> Nutritious(x,y,z))", "score": 0}
{"id": "eqasc_validation_1428", "prediction": "all x.(MilkShakes(x) -> NutritiousFluid(x))", "score": 0}
{"id": "eqasc_validation_1428", "prediction": "all x y z.((Milkshake(x) & NutritiousFluid(y) & Fluid(z)) -> (Milkshake(x) & NutritiousFluid(y) & NutritiousFluid(z)))", "score": 0}
{"id": "eqasc_validation_1428", "prediction": "all x y.((Milkshake(x) & Fluid(y)) -> Nutritious(x))", "score": 0}
{"id": "eqasc_validation_1428", "prediction": "all x y.((Milkshake(x) & Fluid(y)) -> NutritiousFluid(x,y))", "score": 0}
{"id": "eqasc_validation_1428", "prediction": "all x y.((Milkshake(x) & NutritiousFluid(y)) -> Milkshake(x))", "score": 0}
{"id": "eqasc_validation_1428", "prediction": "all x y.((Milkshake(x) & NutritiousFluid(y)) -> (Milkshake(x) & NutritiousFluid(x)))", "score": 0}
{"id": "eqasc_validation_1428", "prediction": "all x y.((Milkshake(x) & NutritiousFluid(y)) -> (Milkshake(x) & NutritiousFluid(y)))", "score": 0}
{"id": "eqasc_validation_1428", "prediction": "all x y.((Milkshake(x) & NutritiousFluid(y)) -> (Milkshake(x) & NutritiousFluid(x) & NutritiousFluid(y)))", "score": 0}
{"id": "eqasc_validation_1428", "prediction": "all x.((Milkshake(x) & NutritiousFluid(x)) -> Milkshake(x))", "score": 0}
{"id": "eqasc_validation_1428", "prediction": "all x.(Milkshake(x) -> (NutritiousFluid(x) & NutritiousFluid(x) & Milkshake(x)))", "score": 0}
{"id": "eqasc_validation_1428", "prediction": "all x y.((Milkshake(x) & NutritiousFluid(y)) -> (Milkshake(x) & NutritiousFluid(x) & NutritiousFluid(x)))", "score": 0}
{"id": "eqasc_validation_1428", "prediction": "all x.(Milkshake(x) -> (NutritiousFluid(x) & Milkshake(x)))", "score": 0}
{"id": "eqasc_validation_1429", "prediction": "all x.(Cow(x) -> ProducesNutritiousFluid(x))", "score": 0}
{"id": "eqasc_validation_1429", "prediction": "all x y.((Cow(x) & Cow(y)) -> ProducesNutritiousFluid(x,y))", "score": 0}
{"id": "eqasc_validation_1429", "prediction": "all x y.((Cow(x) & NutritiousFluid(y)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_validation_1429", "prediction": "all x y z.((Cow(x) & NutritiousFluid(y) & Cow(z)) -> Produces(x,y,z))", "score": 0}
{"id": "eqasc_validation_1429", "prediction": "all x y.((Cow(x) & CowFluid(y)) -> ProducesNutritiousFluid(x,y))", "score": 0}
{"id": "eqasc_validation_1429", "prediction": "all x.((Cow(x) & ProducesNutritiousFluid(x)) -> ProducesFluid(x))", "score": 0}
{"id": "eqasc_validation_1429", "prediction": "all x y.((Cow(x) & CowFluid(y)) -> ProducesNutritious(x,y))", "score": 0}
{"id": "eqasc_validation_1429", "prediction": "all x.(Cow(x) -> ProducesNourishingFluid(x))", "score": 0}
{"id": "eqasc_validation_1429", "prediction": "all x y.((Cow(x) & Fluid(y)) -> ProducesNutritious(x,y))", "score": 0}
{"id": "eqasc_validation_1429", "prediction": "all x y z.((Cow(x) & Fluid(y) & Fluid(z)) -> ProducesNutritious(x,y,z))", "score": 0}
{"id": "eqasc_validation_1429", "prediction": "all x.(Cow(x) -> (ProducesNutritiousFluid(x) & ProducesFluid(x)))", "score": 0}
{"id": "eqasc_validation_1429", "prediction": "all x y.((Cow(x) & NutritiousFluid(y)) -> Produce(x,y))", "score": 0}
{"id": "eqasc_validation_1429", "prediction": "all x.((Cow(x) & NutritiousFluid(x)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_validation_1430", "prediction": "all x.(Milk(x) -> PreventsDehydration(x))", "score": 0}
{"id": "eqasc_validation_1430", "prediction": "all x y.((Milk(x) & Dehydration(y)) -> Prevents(x,y))", "score": 0}
{"id": "eqasc_validation_1430", "prediction": "all x y z.((Milk(x) & Dehydration(y) & Dehydration(z)) -> Prevents(x,y,z))", "score": 0}
{"id": "eqasc_validation_1430", "prediction": "all x y z.((Milk(x) & Dehydration(y) & Dehydration(z)) -> Prevents(x,y))", "score": 0}
{"id": "eqasc_validation_1430", "prediction": "all x y.((Milk(x) & Dehydration(y) & Prevents(x,y)) -> Prevents(x,y))", "score": 0}
{"id": "eqasc_validation_1430", "prediction": "all x.((Milk(x) & PreventsDehydration(x)) -> Milk(x))", "score": 0}
{"id": "eqasc_validation_1430", "prediction": "all x y z.((Milk(x) & Dehydration(y) & Dehydration(z) & Prevents(x,y,z)) -> Prevents(x,y,z))", "score": 0}
{"id": "eqasc_validation_1430", "prediction": "all x.((Milk(x) & PreventsDehydration(x)) -> PreventsDehydration(x))", "score": 0}
{"id": "eqasc_validation_1430", "prediction": "all x y z.((Milk(x) & Dehydration(y) & Dehydration(z) & Prevents(x,y,z)) -> Prevents(x,y))", "score": 0}
{"id": "eqasc_validation_1430", "prediction": "all x y z.((Milk(x) & Dehydration(y) & Dehydratation(z)) -> Prevents(x,y,z))", "score": 0}
{"id": "eqasc_validation_1430", "prediction": "all x y z.((Milk(x) & Dehydration(y) & Dehydration(z) & Prevents(x,y)) -> Prevents(x,z))", "score": 0}
{"id": "eqasc_validation_1430", "prediction": "all x y z.((Milk(x) & Dehydration(y) & Dehydration(z)) -> Prevents(x,z))", "score": 0}
{"id": "eqasc_validation_1430", "prediction": "all x y.((Milk(x) & Dehydration(y)) -> -Prevents(x,y))", "score": 0}
{"id": "eqasc_validation_1430", "prediction": "all x y z.((Milk(x) & Dehydration(y) & Disease(z)) -> Prevents(x,y,z))", "score": 0}
{"id": "eqasc_validation_1430", "prediction": "all x y z.((Milk(x) & Dehydration(y) & Alcohol(z)) -> Prevents(x,y,z))", "score": 0}
{"id": "eqasc_validation_1430", "prediction": "All x.(Milk(x) -> PreventsDehydration(x))", "score": -1}
{"id": "eqasc_validation_1431", "prediction": "all x y.((Birth(x) & Offspring(y)) -> FollowedByParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_1431", "prediction": "all x y.((Birth(x) & ParentalCare(y)) -> FollowedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1431", "prediction": "all x y z.((Birth(x) & ParentalCare(y) & Offspring(z)) -> FollowedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1431", "prediction": "all x y.((Birth(x) & Offspring(y)) -> FollowsParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_1431", "prediction": "all x y z.((Birth(x) & ParentalCare(y) & Offspring(z)) -> Follows(x,y,z))", "score": 0}
{"id": "eqasc_validation_1431", "prediction": "all x.((Birth(x) & ParentalCare(x)) -> FollowedBy(x,Offspring))", "score": 0}
{"id": "eqasc_validation_1431", "prediction": "all x y.((Birth(x) & ParentalCare(y)) -> Follows(x,y))", "score": 0}
{"id": "eqasc_validation_1431", "prediction": "all x y.((Birth(x) & Offspring(y)) -> FollowedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1431", "prediction": "all x y z.((Birth(x) & Offspring(y) & ParentalCare(z)) -> FollowedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1431", "prediction": "all x y.((Birth(x) & Offspring(y)) -> ParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_1431", "prediction": "all x y.((Birth(x) & Offspring(y)) -> (ParentalCare(x,y) & FollowedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1431", "prediction": "all x y z.((Birth(x) & ParentalCare(y) & Offspring(z)) -> FollowsBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_1431", "prediction": "all x.(Birth(x) -> FollowedByParentalCare(x))", "score": 0}
{"id": "eqasc_validation_1431", "prediction": "all x y.((Birth(x) & ParentalCare(y)) -> FollowsBirth(x,y))", "score": 0}
{"id": "eqasc_validation_1431", "prediction": "all x y z.((Birth(x) & ParentalCare(y) & Offspring(z)) -> FollowedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1431", "prediction": "all x.((Birth(x) & ParentalCare(x)) -> FollowedBy(x,offspring))", "score": 0}
{"id": "eqasc_validation_1432", "prediction": "all x y.((Parent(x) & Child(y)) -> TakesCareOf(x,y))", "score": 0}
{"id": "eqasc_validation_1432", "prediction": "all x y z.((Parent(x) & Child(y) & Child(z)) -> TakesCareOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1432", "prediction": "all x y.((Parent(x) & Child(y)) -> TakesCare(x,y))", "score": 0}
{"id": "eqasc_validation_1432", "prediction": "all x y z.((Parent(x) & Child(y) & Child(z)) -> TakesCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_1432", "prediction": "all x.(Parent(x) -> TakesCareOfChildren(x))", "score": 0}
{"id": "eqasc_validation_1432", "prediction": "all x y z.((Parent(x) & Child(y) & Child(z) & TakesCareOf(x,y,z)) -> TakesCareOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1432", "prediction": "all x y z.((Parent(x) & Child(y) & Parent(z)) -> TakesCareOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1432", "prediction": "all x y z.((Parent(x) & Child(y) & Children(z)) -> TakesCareOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1432", "prediction": "all x y z.((Parent(x) & Child(y) & Child(z) & TakesCare(x,y,z)) -> TakesCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_1432", "prediction": "all x y.((Parent(x) & Child(y) & TakesCareOf(x,y)) -> TakesCareOf(x,y))", "score": 0}
{"id": "eqasc_validation_1432", "prediction": "all x y z.((Parent(x) & Child(y) & Child(z) & TakesCare(x,y,z)) -> TakesCareOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1432", "prediction": "all x y z.((Parent(x) & Child(y) & Child(z)) -> TakesCareOf(x,y))", "score": 0}
{"id": "eqasc_validation_1432", "prediction": "all x y z w.((Parent(x) & Child(y) & Child(z)) -> TakesCareOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1432", "prediction": "all x y z.((Parent(x) & Child(y) & Child(z) & TakesCareOf(x,y,z)) -> TakesCareOf(x,y))", "score": 0}
{"id": "eqasc_validation_1432", "prediction": "all x y z w.((Parent(x) & Child(y) & Child(z) & Child(w)) -> TakesCareOf(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_1432", "prediction": "all x y.((Parent(x) & Child(y) & TakesCare(x,y)) -> TakesCare(x,y))", "score": 0}
{"id": "eqasc_validation_1433", "prediction": "all x y.((Birth(x) & ParentalNourishment(y)) -> FollowedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1433", "prediction": "all x y.((Birth(x) & ParentalNavigation(y)) -> FollowedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1433", "prediction": "all x y z.((Birth(x) & ParentalNavigation(y) & ParentalNavigation(z)) -> FollowedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1433", "prediction": "all x y z.((Birth(x) & ParentalNourishment(y) & ParentalNourishment(z)) -> FollowedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1433", "prediction": "all x.((Birth(x) & ParentalNourishment(x)) -> FollowedBy(x,ParentalNourishment))", "score": 0}
{"id": "eqasc_validation_1433", "prediction": "all x.((Birth(x) & ParentalNavigation(x)) -> FollowedBy(x,ParentalNavigation))", "score": 0}
{"id": "eqasc_validation_1433", "prediction": "all x y z.((Birth(x) & ParentalNourishment(y) & Parent(z)) -> FollowedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1433", "prediction": "all x y.((Birth(x) & ParentalNourishment(y)) -> FollowsBy(x,y))", "score": 0}
{"id": "eqasc_validation_1433", "prediction": "all x y z.((Birth(x) & ParentalNourishment(y) & Child(z)) -> FollowedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1433", "prediction": "all x.((Birth(x) & ParentalNourishment(x)) -> FollowsBirth(x))", "score": 0}
{"id": "eqasc_validation_1433", "prediction": "all x y.((Birth(x) & ParentalNourishment(y)) -> MayBeFocusedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1433", "prediction": "all x y z.((Birth(x) & ParentalNavigation(y) & ParentalNavigation(z)) -> Follows(x,y,z))", "score": 0}
{"id": "eqasc_validation_1433", "prediction": "all x y z.((Birth(x) & ParentalNavigation(y) & Parent(z)) -> FollowedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1433", "prediction": "all x y z.((Birth(x) & ParentalNourishment(y) & ParentalNourishment(z)) -> Follows(x,y,z))", "score": 0}
{"id": "eqasc_validation_1433", "prediction": "all x y.((Birth(x) & ParentalNavigation(y)) -> MayBeFocusedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1433", "prediction": "all x.((Birth(x) & ParentalNourishment(x)) -> FollowedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1434", "prediction": "all x y.((Bird(x) & Mammal(y) & Monogamous(x)) -> (CareForOffspring(x,y) | CareForOffspring(x,y)))", "score": 0}
{"id": "eqasc_validation_1434", "prediction": "all x y.((MomgamousSpecies(x) & MonogamousSpecies(y)) -> (CareForOffspring(x,y) | CareForOffspring(x,y)))", "score": 0}
{"id": "eqasc_validation_1434", "prediction": "all x y.((Bird(x) & Mammal(y) & Monogamous(x,y)) -> (CareForOffspring(x,y) | CareForOffspring(x,y)))", "score": 0}
{"id": "eqasc_validation_1434", "prediction": "all x y.((MonogamousSpecies(x) & MonogamousSpecies(y)) -> (CareForOffspring(x,y) | CareForOffspring(x,y)))", "score": 0}
{"id": "eqasc_validation_1434", "prediction": "all x y.((Bird(x) & Mammal(y) & Monogamous(x,y)) -> CaresForOffspring(x,y))", "score": 0}
{"id": "eqasc_validation_1434", "prediction": "all x y.((Bird(x) & Mammal(y) & Monogamous(x)) -> CaresForOffspring(x,y))", "score": 0}
{"id": "eqasc_validation_1434", "prediction": "all x y.((Bird(x) & Mammal(y) & MonogamousSpecies(x,y)) -> (CareForOffspring(x,y) | CareForOffspring(x,y)))", "score": 0}
{"id": "eqasc_validation_1434", "prediction": "all x.((MomgamousSpecies(x) & MonogamousSpecies(x)) -> (CareForOffspring(x) | CareForOffspring(x)))", "score": 0}
{"id": "eqasc_validation_1434", "prediction": "all x y.((Bird(x) & Mammal(y) & MonogamousSpecies(x,y)) -> CaresForOffspring(x,y))", "score": 0}
{"id": "eqasc_validation_1434", "prediction": "all x y z.((Bird(x) & Mammal(y) & MonogamousSpecies(z) & MonogamousSpecies(z)) -> CaresForOffspring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1434", "prediction": "all x.((Bird(x) | Mammal(x)) -> (CareForOffspring(x) | CareForOffspring(x)))", "score": 0}
{"id": "eqasc_validation_1434", "prediction": "all x y.((Bird(x) & Mammal(y) & Monogamous(x,y)) -> (CareForOffspring(x) | CareForOffspring(x)))", "score": 0}
{"id": "eqasc_validation_1434", "prediction": "all x y.((Bird(x) & Mammal(y) & Monogamous(x)) -> (CareForOffspring(x,y) | CaregiversForOffspring(x,y)))", "score": 0}
{"id": "eqasc_validation_1434", "prediction": "all x y z.((Bird(x) & Mammal(y) & MonogamousSpecies(z)) -> (CareForOffspring(x,y) | CareForOffspring(x,z)))", "score": 0}
{"id": "eqasc_validation_1434", "prediction": "all x y.((Bird(x) & Mammal(y)) -> (Parent(x,y) & Parent(x,y)))", "score": 0}
{"id": "eqasc_validation_1434", "prediction": "all x y.((Bird(x) & Mammal(y) & Monogamous(x,y)) -> (CareForOffspring(x,y) | CaregiversForOffspring(x,y)))", "score": 0}
{"id": "eqasc_validation_1435", "prediction": "all x y.((ParentalCareAfterBirth(x) & ManogamousSpecies(y)) -> (HandledBy(x,y) & HandledBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1435", "prediction": "all x y.((ParentalCareAfterBirth(x) & ManogamousSpecies(y)) -> (HandledByParents(x,y) & HandledByParents(x,y)))", "score": 0}
{"id": "eqasc_validation_1435", "prediction": "all x y.((ParentalCareAfterBirth(x) & ManogamousSpecies(y)) -> HandledBy(x,y))", "score": 0}
{"id": "eqasc_validation_1435", "prediction": "all x y z.((ParentalCareAfterBirth(x) & ManogamousSpecies(y) & Parent(z)) -> (HandledBy(z,y) & HandledBy(z,y)))", "score": 0}
{"id": "eqasc_validation_1435", "prediction": "all x y.((ParentalCare(x) & ManogamousSpecies(y)) -> (HandledBy(x,y) & HandledBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1435", "prediction": "all x y.((ParentalCareAfterBirth(x) & ManogamousSpecies(y)) -> (HandledByParent(x,y) & HandledByParent(x,y)))", "score": 0}
{"id": "eqasc_validation_1435", "prediction": "all x.((ParentalCareAfterBirth(x) & ManogamousSpecies(x)) -> HandledByParents(x))", "score": 0}
{"id": "eqasc_validation_1435", "prediction": "all x y.((ParentalCareAfterBirth(x) & ManogamousSpecies(y)) -> HandledByParents(x,y))", "score": 0}
{"id": "eqasc_validation_1435", "prediction": "all x y z.((ParentalCareAfterBirth(x) & ManogamousSpecies(y) & Parent(z)) -> (HandledBy(x,z) & HandledBy(x,z)))", "score": 0}
{"id": "eqasc_validation_1435", "prediction": "all x y z.((ParentalCare(x) & ManogamousSpecies(y) & Parent(z)) -> (HandledBy(z,y) & HandledBy(z,y)))", "score": 0}
{"id": "eqasc_validation_1435", "prediction": "all x y.((ParentalCarePeriodAfterBirth(x) & ManogamousSpecies(y)) -> (HandledBy(x,y) & HandledBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1435", "prediction": "all x y.((ParentalCareAfterBirth(x) & ManogamousSpecies(y)) -> HandledByParent(x,y))", "score": 0}
{"id": "eqasc_validation_1435", "prediction": "all x y z.((ParentalCareAfterBirth(x) & ManogamousSpecies(y) & Parent(z)) -> (HandledBy(x,y,z) & HandledBy(x,z)))", "score": 0}
{"id": "eqasc_validation_1435", "prediction": "all x y.((ParentalCarePeriodAfterBirth(x) & ManogamousSpecies(y)) -> HandledBy(x,y))", "score": 0}
{"id": "eqasc_validation_1435", "prediction": "all x y z.((ParentalCare(x) & ManogamousSpecies(y) & Parent(z)) -> (HandledBy(x,y,z) & HandledBy(x,z)))", "score": 0}
{"id": "eqasc_validation_1435", "prediction": "all x y.((ParentalCareAfterBirth(x) & ManogamousSpecies(y)) -> (HandledBy(x,y) & HandledBy(x,z)))", "score": 0}
{"id": "eqasc_validation_1436", "prediction": "all x.((Child(x) & Offspring(x) & ImmatureOffspring(x)) -> Ambiguous(x))", "score": 0}
{"id": "eqasc_validation_1436", "prediction": "all x y.((Child(x) & Offspring(y)) -> Ambiguous(x,y))", "score": 0}
{"id": "eqasc_validation_1436", "prediction": "all x.((Child(x) & Offspring(x)) -> Ambiguous(x))", "score": 0}
{"id": "eqasc_validation_1436", "prediction": "all x y z.((Child(x) & Offspring(y) & ImmatureOffspring(z)) -> Ambiguous(x,y,z))", "score": 0}
{"id": "eqasc_validation_1436", "prediction": "all x y.((Child(x) & Offspring(y) & ImmatureOffspring(y)) -> Ambiguous(x,y))", "score": 0}
{"id": "eqasc_validation_1436", "prediction": "all x.((Child(x) & 'Offspring(x) & ImmatureOffspring(x)) -> Ambiguous(x))", "score": 0}
{"id": "eqasc_validation_1436", "prediction": "all x y.((Child(x) & Offspring(y) & ImmatureOffspring(x)) -> Ambiguous(x,y))", "score": 0}
{"id": "eqasc_validation_1436", "prediction": "all x.((Child(x) & Offspring(x)) | ImmatureOffspring(x)) -> Ambiguous(x))", "score": -1}
{"id": "eqasc_validation_1436", "prediction": "all x.((Child(x) & (Offspring(x) | ImmatureOffspring(x))) -> Ambiguous(x))", "score": 0}
{"id": "eqasc_validation_1436", "prediction": "all x.((Child(x) & Offspring(x) & ImmuneOffspring(x)) -> Ambiguous(x))", "score": 0}
{"id": "eqasc_validation_1436", "prediction": "all x y z.((Child(x) & Offspring(y) & ImmatureOffspring(z)) -> Ambiguous(x,y))", "score": 0}
{"id": "eqasc_validation_1437", "prediction": "all x y.((Birth(x) & ParentalCare(y)) -> FollowedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1437", "prediction": "all x y z.((Birth(x) & ParentalCare(y) & Child(z)) -> FollowedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1437", "prediction": "all x y.((Birth(x) & ParentalCare(y)) -> Follows(x,y))", "score": 0}
{"id": "eqasc_validation_1437", "prediction": "all x y z.((Birth(x) & ParentalCare(y) & Child(z)) -> Follows(x,y,z))", "score": 0}
{"id": "eqasc_validation_1437", "prediction": "all x y.((Birth(x) & Child(y)) -> FollowedByParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_1437", "prediction": "all x y.((Birth(x) & ParentalCare(y)) -> Followed(x,y))", "score": 0}
{"id": "eqasc_validation_1437", "prediction": "all x.((Birth(x) & ParentalCare(x)) -> FollowedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1437", "prediction": "all x y.((Birth(x) & ParentalCare(y)) -> FollowsBirth(x,y))", "score": 0}
{"id": "eqasc_validation_1437", "prediction": "all x.((Birth(x) & ParentalCare(x)) -> FollowedBy(x,child))", "score": 0}
{"id": "eqasc_validation_1437", "prediction": "all x y.((Birth(x) & Child(y)) -> FollowsParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_1437", "prediction": "all x.(Birth(x) -> FollowedByParentalCare(x))", "score": 0}
{"id": "eqasc_validation_1437", "prediction": "all x y.((Birth(x) & Child(y)) -> ParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_1437", "prediction": "all x.((Birth(x) & ParentalCare(x)) -> FollowedBy(x))", "score": 0}
{"id": "eqasc_validation_1437", "prediction": "all x y.((Birth(x) & ParentalCare(y,x)) -> FollowedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1437", "prediction": "all x.((Birth(x) & ParentalCare(x)) -> Followed(x))", "score": 0}
{"id": "eqasc_validation_1437", "prediction": "all x.((Birth(x) & ParentalCare(x)) -> FollowsBirth(x))", "score": 0}
{"id": "eqasc_validation_1438", "prediction": "all x.(HumanBirth(x) -> RarestOfAllBirths(x))", "score": 0}
{"id": "eqasc_validation_1438", "prediction": "all x.(HumanBirth(x) -> RarestOfBirths(x))", "score": 0}
{"id": "eqasc_validation_1438", "prediction": "all x y.((HumanBirth(x) & Birth(y)) -> Rarest(x,y))", "score": 0}
{"id": "eqasc_validation_1438", "prediction": "all x y.((HumanBirth(x) & Birth(y)) -> RarestOfAll(x,y))", "score": 0}
{"id": "eqasc_validation_1438", "prediction": "all x y.((HumanBirth(x) & Birth(y)) -> RarestOf(x,y))", "score": 0}
{"id": "eqasc_validation_1438", "prediction": "all x y.((HumanBirth(x) & Birth(y)) -> RarestOfAllBirths(x,y))", "score": 0}
{"id": "eqasc_validation_1438", "prediction": "all x.(HumanBirth(x) -> RarestBirth(x))", "score": 0}
{"id": "eqasc_validation_1438", "prediction": "all x.(HumanBirth(x) -> Rarest(x))", "score": 0}
{"id": "eqasc_validation_1438", "prediction": "all x y z.((HumanBirth(x) & Birth(y) & Birth(z)) -> Rarest(x,y,z))", "score": 0}
{"id": "eqasc_validation_1438", "prediction": "all x y z.((HumanBirth(x) & Birth(y) & Birth(z)) -> RarestOfAll(x,y,z))", "score": 0}
{"id": "eqasc_validation_1438", "prediction": "all x y z.((HumanBirth(x) & Birth(y) & Birth(z)) -> RarestOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1438", "prediction": "all x y.((HumanBirth(x) & Birth(y)) -> RarestOfBirths(x,y))", "score": 0}
{"id": "eqasc_validation_1438", "prediction": "all x.(HumanBirth(x) -> RarestOfBirth(x))", "score": 0}
{"id": "eqasc_validation_1438", "prediction": "all x.(HumanBirth(x) -> RarestOfOtherBirths(x))", "score": 0}
{"id": "eqasc_validation_1439", "prediction": "all x y.((Human(x) & Offspring(y)) -> HasParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_1439", "prediction": "all x y.((Human(x) & Offspring(y)) -> HasParentalCarePeriod(x,y))", "score": 0}
{"id": "eqasc_validation_1439", "prediction": "all x y z.((Human(x) & Offspring(y) & ParentalCare(z)) -> HasPeriodOfCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_1439", "prediction": "all x y z.((Human(x) & Offspring(y) & ParentalCare(z)) -> HasParentalCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_1439", "prediction": "all x y.((Human(x) & Offspring(y) & HasParentalCare(x,y)) -> HasParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_1439", "prediction": "all x y z.((Human(x) & Offspring(y) & ParentalCare(z)) -> HasPeriodOfParentalCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_1439", "prediction": "all x.(Human(x) -> HasParentalCareOfOffspring(x))", "score": 0}
{"id": "eqasc_validation_1439", "prediction": "all x y z.((Human(x) & Offspring(y) & ParentalCare(z)) -> HasPeriodOfOffspringCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_1439", "prediction": "all x.(Human(x) -> HasParentalCare(x))", "score": 0}
{"id": "eqasc_validation_1439", "prediction": "all x y z.((Human(x) & Offspring(y) & ParentalCare(z)) -> HasPeriodOfPaternalCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_1439", "prediction": "all x y.((Human(x) & Offspring(y)) -> (HasParentalCare(x,y) & HasParentalCare(x,y)))", "score": 0}
{"id": "eqasc_validation_1439", "prediction": "all x y z.((Human(x) & Offspring(y) & ParentalCare(z)) -> Has(x,y,z))", "score": 0}
{"id": "eqasc_validation_1439", "prediction": "all x y z.((Human(x) & Offspring(y) & ParentalCare(z)) -> HasPaternalCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_1439", "prediction": "all x y.((Human(x) & Offspring(y)) -> PeriodOfParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_1439", "prediction": "all x y z.((Human(x) & Offspring(y) & Child(z)) -> HasParentalCare(x,y,z))", "score": 0}
{"id": "eqasc_validation_1439", "prediction": "all x y.((Human(x) & Offspring(y)) -> HasPaternalCare(x,y))", "score": 0}
{"id": "eqasc_validation_1440", "prediction": "all x.(Female(x) -> GivesBirthToSingleBaby(x))", "score": 0}
{"id": "eqasc_validation_1440", "prediction": "all x y.((Female(x) & SingleBirth(y)) -> GivesBirthTo(x,y))", "score": 0}
{"id": "eqasc_validation_1440", "prediction": "all x y.((Female(x) & SingleBaby(y)) -> GivesBirthTo(x,y))", "score": 0}
{"id": "eqasc_validation_1440", "prediction": "all x.(Female(x) -> GivesBirthToSingleBirth(x))", "score": 0}
{"id": "eqasc_validation_1440", "prediction": "all x y z.((Female(x) & SingleBirth(y) & Baby(z)) -> GivesBirthTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_1440", "prediction": "all x y.((Female(x) & SingleBirth(y)) -> GivesBirth(x,y))", "score": 0}
{"id": "eqasc_validation_1440", "prediction": "all x.((Female(x) & SingleBirth(x)) -> GivesBirthTo(x,y))", "score": 0}
{"id": "eqasc_validation_1440", "prediction": "all x y z.((Female(x) & Baby(y) & Baby(z)) -> GivesBirthTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_1440", "prediction": "all x y z.((Female(x) & SingleBaby(y) & Baby(z)) -> GivesBirthTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_1440", "prediction": "all x y.((Female(x) & Baby(y)) -> GivesBirthTo(x,y))", "score": 0}
{"id": "eqasc_validation_1440", "prediction": "all x y z.((Female(x) & Baby(y) & Single(z)) -> GivesBirthTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_1440", "prediction": "all x y.((Female(x) & SingleBirth(y)) -> GiveBirthTo(x,y))", "score": 0}
{"id": "eqasc_validation_1440", "prediction": "all x y.((Female(x) & SingleBaby(y)) -> GivesBirth(x,y))", "score": 0}
{"id": "eqasc_validation_1440", "prediction": "all x y z.((Female(x) & SingleBirth(y) & Baby(z)) -> GivesBirthTo(x,y))", "score": 0}
{"id": "eqasc_validation_1440", "prediction": "all x y z.((Female(x) & SingleBirth(y) & Baby(z)) -> GivesBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_1440", "prediction": "all x.(Female(x) -> GiveBirthToSingleBaby(x))", "score": 0}
{"id": "eqasc_validation_1441", "prediction": "all x.(Baby(x) -> (Offspring(x) & Most likelyHasParentalCare(x)))", "score": -1}
{"id": "eqasc_validation_1441", "prediction": "all x.(Baby(x) -> (Offspring(x) & MostLikelyHasParentalCare(x)))", "score": 0}
{"id": "eqasc_validation_1441", "prediction": "all x.(Baby(x) -> (Offspring(x) & ProbablyHasParentalCare(x)))", "score": 0}
{"id": "eqasc_validation_1441", "prediction": "all x.(Baby(x) -> (Offspring(x) & MostlikelyHasParentalCare(x)))", "score": 0}
{"id": "eqasc_validation_1441", "prediction": "all x.(Baby(x) -> (Offspring(x) & Most LikelyHasParentalCare(x)))", "score": -1}
{"id": "eqasc_validation_1441", "prediction": "all x.(Birth(x) -> (Offspring(x) & Most likelyHasParentalCare(x)))", "score": -1}
{"id": "eqasc_validation_1441", "prediction": "all x.(Birth(x) -> (Offspring(x) & MostLikelyHasParentalCare(x)))", "score": 0}
{"id": "eqasc_validation_1441", "prediction": "all x.(Baby(x) -> (Offspring(x) & HasParentalCare(x)))", "score": 0}
{"id": "eqasc_validation_1441", "prediction": "all x y z.((Bird(x) & Offspring(y) & ParentalCare(z)) -> (Offspring(x,y) & MostLikelyHasParentalCare(x,z)))", "score": 0}
{"id": "eqasc_validation_1441", "prediction": "all x y z.((Baby(x) & Offspring(y) & ParentalCare(z)) -> (Offspring(x,y) & MostLikelyHasParentalCare(x,z)))", "score": 0}
{"id": "eqasc_validation_1441", "prediction": "all x y z.((Bird(x) & Offspring(y) & ParentalCare(z)) -> (Offspring(x,y) & MostLikelyHasParentalCare(y,z)))", "score": 0}
{"id": "eqasc_validation_1441", "prediction": "all x y z.((Baby(x) & Offspring(y) & ParentalCare(z)) -> (Offspring(x,y) & MostLikelyHasParentalCare(y,z)))", "score": 0}
{"id": "eqasc_validation_1441", "prediction": "all x y.((Baby(x) & Offspring(y)) -> (Offspring(x,y) & Most likelyHasParentalCare(y)))", "score": -1}
{"id": "eqasc_validation_1441", "prediction": "all x y.((Bird(x) & Offspring(y)) -> (Offspring(x,y) & Most likelyHasParentalCare(y)))", "score": -1}
{"id": "eqasc_validation_1442", "prediction": "all x y.((Birth(x) & Child(y)) -> Unique(x,y))", "score": 0}
{"id": "eqasc_validation_1442", "prediction": "all x y.((Birth(x) & Child(y) & Born(y)) -> Unique(x,y))", "score": 0}
{"id": "eqasc_validation_1442", "prediction": "all x y.((Birth(x) & Child(y) & Born(x,y)) -> Unique(x,y))", "score": 0}
{"id": "eqasc_validation_1442", "prediction": "all x.((Birth(x) & Child(x)) -> Unique(x))", "score": 0}
{"id": "eqasc_validation_1442", "prediction": "all x y z.((Birth(x) & Child(y) & Born(z)) -> Unique(x,y,z))", "score": 0}
{"id": "eqasc_validation_1442", "prediction": "all x y.((Birth(x) & Child(y) & Born(x)) -> Unique(x,y))", "score": 0}
{"id": "eqasc_validation_1442", "prediction": "all x.(Birth(x) -> UniqueAsChild(x))", "score": 0}
{"id": "eqasc_validation_1442", "prediction": "all x.(Birth(x) -> Unique(x))", "score": 0}
{"id": "eqasc_validation_1442", "prediction": "all x y.((Birth(x) & Child(y) & Born(x,y)) -> Unique(x))", "score": 0}
{"id": "eqasc_validation_1442", "prediction": "all x.((Birth(x) & Child(x) & Born(x)) -> Unique(x))", "score": 0}
{"id": "eqasc_validation_1442", "prediction": "all x.(Birth(x) -> (Unique(x) & Child(x) & Born(x)))", "score": 0}
{"id": "eqasc_validation_1442", "prediction": "all x y.((Birth(x) & Child(y) & Born(y,x)) -> Unique(x,y))", "score": 0}
{"id": "eqasc_validation_1442", "prediction": "all x y z.((Birth(x) & Child(y) & Child(z)) -> Unique(x,y,z))", "score": 0}
{"id": "eqasc_validation_1442", "prediction": "all x y z.((Birth(x) & Child(y) & Born(z)) -> Unique(x,y))", "score": 0}
{"id": "eqasc_validation_1442", "prediction": "all x y.((Birth(x) & Child(y)) -> UniqueAs(x,y))", "score": 0}
{"id": "eqasc_validation_1442", "prediction": "all x.((Birth(x) & Born(x)) -> Unique(x))", "score": 0}
{"id": "eqasc_validation_1443", "prediction": "all x y.((Child(x) & Born(x)) -> ParentsTakeCareOf(y,x))", "score": 0}
{"id": "eqasc_validation_1443", "prediction": "all x.((Child(x) & Born(x)) -> ParentsTakeCareOf(x,y))", "score": 0}
{"id": "eqasc_validation_1443", "prediction": "all x y.((Child(x) & Born(x)) -> ParentsTakeCareOf(x,y))", "score": 0}
{"id": "eqasc_validation_1443", "prediction": "all x y z.((Child(x) & Born(x) & Parent(y) & Child(z)) -> TakesCareOf(y,z))", "score": 0}
{"id": "eqasc_validation_1443", "prediction": "all x y.((Child(x) & Born(x) & Parent(y)) -> TakesCareOf(y,x))", "score": 0}
{"id": "eqasc_validation_1443", "prediction": "all x y.((Child(x) & Born(y)) -> ParentsTakeCareOf(x,y))", "score": 0}
{"id": "eqasc_validation_1443", "prediction": "all x y z.((Child(x) & Born(y) & Parent(z)) -> TakesCareOf(z,y))", "score": 0}
{"id": "eqasc_validation_1443", "prediction": "all x y.((Child(x) & Born(x)) -> TakesCareOf(x,y))", "score": 0}
{"id": "eqasc_validation_1443", "prediction": "all x.((Child(x) & Born(x)) -> ParentsTakeCareOf(x,x))", "score": 0}
{"id": "eqasc_validation_1443", "prediction": "all x y.((Child(x) & Born(x)) -> TakesCareOf(y,x))", "score": 0}
{"id": "eqasc_validation_1443", "prediction": "all x y z.((Child(x) & Born(y) & Parent(z)) -> TakesCareOf(z,x))", "score": 0}
{"id": "eqasc_validation_1443", "prediction": "all x y.((Child(x) & Born(x,y)) -> ParentsTakeCareOf(x,y))", "score": 0}
{"id": "eqasc_validation_1443", "prediction": "all x y z.((Child(x) & Born(x) & Parent(y) & Child(z)) -> TakesCareOf(y,x,z))", "score": 0}
{"id": "eqasc_validation_1443", "prediction": "all x y.((Child(x) & Born(y)) -> TakesCareOf(x,y))", "score": 0}
{"id": "eqasc_validation_1443", "prediction": "all x y z.((Child(x) & Born(x) & Parent(y) & Child(z)) -> TakesCareOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1443", "prediction": "all x y.((Child(x) & Born(x)) -> (ParentsTakeCareOf(y,x)))", "score": 0}
{"id": "eqasc_validation_1444", "prediction": "all x y z.((Child(x) & Born(x) & Offspring(y) & ParentalCare(z)) -> FollowedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1444", "prediction": "all x y.((Child(x) & Born(x) & Offspring(y)) -> FollowedByParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_1444", "prediction": "all x y z.((Child(x) & Born(x) & Offspring(y) & ParentalCare(z)) -> Follows(x,y,z))", "score": 0}
{"id": "eqasc_validation_1444", "prediction": "all x y.((Child(x) & Born(x)) -> FollowedByParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_1444", "prediction": "all x y.((Child(x) & Born(x) & Offspring(y)) -> FollowsParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_1444", "prediction": "all x y z.((Child(x) & Born(x) & Offspring(y) & ParentalCare(z)) -> MayBeSuspended(x,y,z))", "score": 0}
{"id": "eqasc_validation_1444", "prediction": "all x y.((Child(x) & Born(x) & Offspring(y)) -> MayBeSustainedByParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_1444", "prediction": "all x y z.((Child(x) & Born(x) & Offspring(y) & PeriodOfParentalCare(z)) -> FollowedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1444", "prediction": "all x y.((Child(x) & Born(x)) -> (PeriodOfParentalCare(y) & Offspring(x,y)))", "score": 0}
{"id": "eqasc_validation_1444", "prediction": "all x y z.((Child(x) & Born(x) & Offspring(y) & ParentalCare(z)) -> MayBeFocused(x,y,z))", "score": 0}
{"id": "eqasc_validation_1444", "prediction": "all x.((Child(x) & Born(x)) -> FollowedByParentalCare(x))", "score": 0}
{"id": "eqasc_validation_1444", "prediction": "all x y.((Child(x) & Born(x)) -> (PeriodOfParentalCare(x,y) & Offspring(y)))", "score": 0}
{"id": "eqasc_validation_1444", "prediction": "all x y.((Child(x) & Born(x) & Offspring(y)) -> MayBeSuedeByParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_1444", "prediction": "all x y.((Child(x) & Born(x) & Offspring(y)) -> FollowsParentalCarePeriod(x,y))", "score": 0}
{"id": "eqasc_validation_1444", "prediction": "all x y.((Child(x) & Born(x) & Offspring(y)) -> MayBeSuspendedByParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_1444", "prediction": "all x y z.((Child(x) & Born(x) & Offspring(y) & ParentalCare(z)) -> FollowedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1445", "prediction": "all x y.((Scale(x) & Weight(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1445", "prediction": "all x y.((Scale(x) & Weight(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1445", "prediction": "all x y.((Scale(x) & Scale(y)) -> MeasuresWeight(x,y))", "score": 0}
{"id": "eqasc_validation_1445", "prediction": "all x y z.((Scale(x) & Weight(y) & Scale(z)) -> UsedForMeasuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1445", "prediction": "all x y.((Scale(x) & Scale(y)) -> UsedForMeasuringWeight(x,y))", "score": 0}
{"id": "eqasc_validation_1445", "prediction": "all x y z.((Scale(x) & Weight(y) & Scale(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1445", "prediction": "all x y z.((Scale(x) & Weight(y) & Weight(z)) -> UsedForMeasuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1445", "prediction": "all x y z.((Scale(x) & Weight(y) & Weight(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1445", "prediction": "all x.(Scale(x) -> UsedForMeasuringWeight(x))", "score": 0}
{"id": "eqasc_validation_1445", "prediction": "all x.(Scale(x) -> MeasuresWeight(x))", "score": 0}
{"id": "eqasc_validation_1445", "prediction": "all x y.((Scales(x) & Scale(y)) -> MeasuresWeight(x,y))", "score": 0}
{"id": "eqasc_validation_1445", "prediction": "all x y.((Scales(x) & Weight(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1445", "prediction": "all x y z.((Scales(x) & Weight(y) & Scale(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1445", "prediction": "all x.(Scales(x) -> UsedForMeasuringWeight(x))", "score": 0}
{"id": "eqasc_validation_1445", "prediction": "all x y.((Scene(x) & Scale(y)) -> MeasuresWeight(x,y))", "score": 0}
{"id": "eqasc_validation_1445", "prediction": "all x.(Scales(x) -> MeasuresWeight(x))", "score": 0}
{"id": "eqasc_validation_1446", "prediction": "all x.(Result(x) -> MeasuredInPounds(x))", "score": 0}
{"id": "eqasc_validation_1446", "prediction": "all x.(Result(x) -> MeasurableInPounds(x))", "score": 0}
{"id": "eqasc_validation_1446", "prediction": "all x.(Result(x) -> MeasuringInPounds(x))", "score": 0}
{"id": "eqasc_validation_1446", "prediction": "all x.(Results(x) -> MeasuredInPounds(x))", "score": 0}
{"id": "eqasc_validation_1446", "prediction": "all x y.((Result(x) & Pound(y)) -> MeasuredIn(x,y))", "score": 0}
{"id": "eqasc_validation_1446", "prediction": "all x.(ResultsMeasuredInPounds(x) -> MeasuredInPounds(x))", "score": 0}
{"id": "eqasc_validation_1446", "prediction": "all x.(Result(x) -> MeasuringPounds(x))", "score": 0}
{"id": "eqasc_validation_1446", "prediction": "all x.(Results(x) -> MeasurableInPounds(x))", "score": 0}
{"id": "eqasc_validation_1446", "prediction": "all x y.((Result(x) & Weight(y)) -> MeasuredIn(x,y))", "score": 0}
{"id": "eqasc_validation_1446", "prediction": "all x.(Results(x) -> MeasuringInPounds(x))", "score": 0}
{"id": "eqasc_validation_1447", "prediction": "all x y.((Scale(x) & Weight(y)) -> DeterminesInPounds(x,y))", "score": 0}
{"id": "eqasc_validation_1447", "prediction": "all x.(Scale(x) -> DeterminesWeightInPounds(x))", "score": 0}
{"id": "eqasc_validation_1447", "prediction": "all x y z.((Scale(x) & Weight(y) & Pounds(z)) -> DeterminesInPounds(x,y,z))", "score": 0}
{"id": "eqasc_validation_1447", "prediction": "all x y.((Scale(x) & WeightInPounds(y)) -> DeterminesInPounds(x,y))", "score": 0}
{"id": "eqasc_validation_1447", "prediction": "all x y z.((Scale(x) & Weight(y) & Pound(z)) -> DeterminesInPounds(x,y,z))", "score": 0}
{"id": "eqasc_validation_1447", "prediction": "all x y.((Scale(x) & WeightInPounds(y)) -> Determines(x,y))", "score": 0}
{"id": "eqasc_validation_1447", "prediction": "all x y z.((Scale(x) & WeightInPounds(y) & WeightInPounds(z)) -> Determines(x,y,z))", "score": 0}
{"id": "eqasc_validation_1447", "prediction": "all x y z.((Scale(x) & Weight(y) & Pounds(z)) -> Determines(x,y,z))", "score": 0}
{"id": "eqasc_validation_1447", "prediction": "all x.(Scale(x) -> (DeterminesWeightInPounds(x) & InPounds(x)))", "score": 0}
{"id": "eqasc_validation_1447", "prediction": "all x y.((Scale(x) & Weight(y)) -> DeterminedInPounds(x,y))", "score": 0}
{"id": "eqasc_validation_1447", "prediction": "all x y z.((Scale(x) & WeightInPounds(y) & WeightInPounds(z)) -> DeterminesInPounds(x,y,z))", "score": 0}
{"id": "eqasc_validation_1447", "prediction": "all x y z.((Scale(x) & Weight(y) & Pound(z)) -> Determines(x,y,z))", "score": 0}
{"id": "eqasc_validation_1447", "prediction": "all x y z.((Scale(x) & Weight(y) & Pounds(z)) -> DeterminedInPounds(x,y,z))", "score": 0}
{"id": "eqasc_validation_1447", "prediction": "all x.(Scale(x) -> (DeterminesWeightInPounds(x) & WeightInPounds(x)))", "score": 0}
{"id": "eqasc_validation_1447", "prediction": "all x y.((Scale(x) & Weight(y) & InPounds(x,y)) -> DeterminesInPounds(x,y))", "score": 0}
{"id": "eqasc_validation_1447", "prediction": "all x y.((Scale(x) & Weight(y)) -> Determines(x,y))", "score": 0}
{"id": "eqasc_validation_1448", "prediction": "all x y.((Dimension(x) & Weight(y)) -> (InInches(x) & InPounds(y)))", "score": 0}
{"id": "eqasc_validation_1448", "prediction": "(all x.(Dimension(x) -> InInches(x)) & all y.(Weight(y) -> InPounds(y)))", "score": 0}
{"id": "eqasc_validation_1448", "prediction": "all x y.((Dimensional(x) & Weight(y)) -> (InInches(x) & InPounds(y)))", "score": 0}
{"id": "eqasc_validation_1448", "prediction": "(all x.(Dimension(x) -> InInch(x)) & all y.(Weight(y) -> InPounds(y)))", "score": 0}
{"id": "eqasc_validation_1448", "prediction": "all x y.((Dimension(x) & Weight(y)) -> (InInch(x) & InPounds(y)))", "score": 0}
{"id": "eqasc_validation_1448", "prediction": "all x y.((Dimension(x) & Weight(y)) -> (InInches(x) | InPounds(y)))", "score": 0}
{"id": "eqasc_validation_1448", "prediction": "(all x.(Dimensional(x) -> InInches(x)) & all y.(Weight(y) -> InPounds(y)))", "score": 0}
{"id": "eqasc_validation_1448", "prediction": "all x y.((Dimension(x) & Weight(y)) -> (InInch(x) & InPound(y)))", "score": 0}
{"id": "eqasc_validation_1448", "prediction": "(all x.(Dimension(x) -> InInches(x)) & all y.(Weight(y) -> InPounds(y))))", "score": -1}
{"id": "eqasc_validation_1448", "prediction": "all x y.((Dimension(x) & Weight(y)) -> (InInches(x) | WeightsInPounds(y)))", "score": 0}
{"id": "eqasc_validation_1448", "prediction": "all x.(Dimension(x) -> (InInches(x) & WeightsInPounds(x)))", "score": 0}
{"id": "eqasc_validation_1448", "prediction": "all x.((Dimension(x) & Weight(x)) -> (InInches(x) & InPounds(x)))", "score": 0}
{"id": "eqasc_validation_1448", "prediction": "(all x.(Dimension(x) -> InInches(x)) & (Weight(x) -> InPounds(x)))", "score": 0}
{"id": "eqasc_validation_1448", "prediction": "(all x.(Dimension(x) -> InInch(x)) & all y.(Weight(y) -> InPound(y)))", "score": 0}
{"id": "eqasc_validation_1448", "prediction": "all x y.((Dimension(x) & Weight(y)) -> (InInches(x) & InPfunds(y)))", "score": 0}
{"id": "eqasc_validation_1448", "prediction": "all x y.((Dimensional(x) & Weight(y)) -> (InInch(x) & InPounds(y)))", "score": 0}
{"id": "eqasc_validation_1449", "prediction": "all x.(Scale(x) -> MeasuresPounds(x))", "score": 0}
{"id": "eqasc_validation_1449", "prediction": "all x y.((Scale(x) & Scale(y)) -> MeasuresPounds(x,y))", "score": 0}
{"id": "eqasc_validation_1449", "prediction": "all x y.((Scale(x) & Weight(y)) -> MeasuresPounds(x,y))", "score": 0}
{"id": "eqasc_validation_1449", "prediction": "all x y z.((Scale(x) & Pound(y) & Scale(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1449", "prediction": "all x y z.((Scale(x) & Pound(y) & Scale(z)) -> MeasuresPounds(x,y,z))", "score": 0}
{"id": "eqasc_validation_1449", "prediction": "all x y.((Scale(x) & Pound(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1449", "prediction": "all x.(Scales(x) -> MeasuresPounds(x))", "score": 0}
{"id": "eqasc_validation_1449", "prediction": "all x y.((Scale(x) & Weight(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1449", "prediction": "all x y z.((Scale(x) & Pound(y) & Weight(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1449", "prediction": "all x y.((Scale(x) & MeasuresPounds(x,y)) -> MeasuresPounds(x,y))", "score": 0}
{"id": "eqasc_validation_1449", "prediction": "all x y z.((Scale(x) & Pound(y) & Scale(z)) -> MeasuresPounds(x,y))", "score": 0}
{"id": "eqasc_validation_1449", "prediction": "all x y z.((Scale(x) & Pound(y) & Scale(z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1449", "prediction": "all x y z.((Scale(x) & Pound(y) & Pound(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1449", "prediction": "all x y.((Scale(x) & MeasuresPounds(y)) -> MeasuresPounds(x,y))", "score": 0}
{"id": "eqasc_validation_1449", "prediction": "all x y.((Scale(x) & Scale(y)) -> MeasuresPounds(y,x))", "score": 0}
{"id": "eqasc_validation_1449", "prediction": "all x y.((Scale(x) & MeasuresPounds(x)) -> MeasuresPounds(x,y))", "score": 0}
{"id": "eqasc_validation_1450", "prediction": "All x.(WeaningWeight(x) -> ExpressedInPounds(x))", "score": -1}
{"id": "eqasc_validation_1450", "prediction": "All x.(WeaningWeight(x) -> expressedInPounds(x))", "score": -1}
{"id": "eqasc_validation_1450", "prediction": "All x.(WeaningWeight(x) -> (ExpressedInPounds(x)))", "score": -1}
{"id": "eqasc_validation_1450", "prediction": "All x.(WeaningWeight(x) -> ExpressesInPounds(x))", "score": -1}
{"id": "eqasc_validation_1450", "prediction": "All x y.((WeaningWeight(x) & Weight(y)) -> ExpressedInPounds(x,y))", "score": -1}
{"id": "eqasc_validation_1450", "prediction": "WeaningWeight(w) -> (ExpressedInPounds(w) & WeaningWeight(w)))", "score": -1}
{"id": "eqasc_validation_1450", "prediction": "WeaningWeight(WeaningWeight) -> expressedInPounds(WeaningWeight))", "score": -1}
{"id": "eqasc_validation_1450", "prediction": "All x.(WearingWeight(x) -> ExpressedInPounds(x))", "score": -1}
{"id": "eqasc_validation_1450", "prediction": "WeaningWeight(w) -> ExpressedInPounds(w))", "score": -1}
{"id": "eqasc_validation_1450", "prediction": "WeaningWeight(w) -> expressedInPounds(w))", "score": -1}
{"id": "eqasc_validation_1450", "prediction": "All x y.((WeaningWeight(x) & Weight(y)) -> ExpressedInPounds(x))", "score": -1}
{"id": "eqasc_validation_1450", "prediction": "All x y.((WeaningWeight(x) & Weight(y)) -> (ExpressedInPounds(x,y)))", "score": -1}
{"id": "eqasc_validation_1450", "prediction": "All x y.((WeaningWeight(x) & Weight(y)) -> expressedInPounds(x,y))", "score": -1}
{"id": "eqasc_validation_1451", "prediction": "all x.(Scale(x) -> MeasuresPounds(x))", "score": 0}
{"id": "eqasc_validation_1451", "prediction": "all x.(Scale(x) -> UsedForMeasuringPounds(x))", "score": 0}
{"id": "eqasc_validation_1451", "prediction": "all x.(Scales(x) -> MeasuresPounds(x))", "score": 0}
{"id": "eqasc_validation_1451", "prediction": "all x y.((Scale(x) & Pound(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1451", "prediction": "all x.(Scales(x) -> UsedForMeasuringPounds(x))", "score": 0}
{"id": "eqasc_validation_1451", "prediction": "all x y.((Scale(x) & Pound(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1451", "prediction": "all x.(Scene(x) -> UsedForMeasuringPounds(x))", "score": 0}
{"id": "eqasc_validation_1451", "prediction": "all x.(Scene(x) -> MeasuresPounds(x))", "score": 0}
{"id": "eqasc_validation_1451", "prediction": "all x y.((Scene(x) & Pound(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1451", "prediction": "all x.(Scave(x) -> UsedForMeasuringPounds(x))", "score": 0}
{"id": "eqasc_validation_1451", "prediction": "all x y.((Scales(x) & Pound(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1451", "prediction": "all x y.((Scales(x) & Pound(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1451", "prediction": "all x y.((Scale(x) & Pfund(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1451", "prediction": "all x y.((Scene(x) & Pound(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1451", "prediction": "all x y.((Scale(x) & Pfund(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1451", "prediction": "all x.(Scales(x) -> MeasurePounds(x))", "score": 0}
{"id": "eqasc_validation_1452", "prediction": "all x.(Weight(x) -> InGrams(x))", "score": 0}
{"id": "eqasc_validation_1452", "prediction": "all x.(Weight(x) -> InGas(x))", "score": 0}
{"id": "eqasc_validation_1452", "prediction": "all x.(Weight(x) -> InGms(x))", "score": 0}
{"id": "eqasc_validation_1452", "prediction": "all x.(Weight(x) -> InGems(x))", "score": 0}
{"id": "eqasc_validation_1452", "prediction": "all x.(Weight(x) -> InGasms(x))", "score": 0}
{"id": "eqasc_validation_1452", "prediction": "all x.(Weight(x) -> InGlobes(x))", "score": 0}
{"id": "eqasc_validation_1452", "prediction": "all x.(Weight(x) -> InGrooves(x))", "score": 0}
{"id": "eqasc_validation_1452", "prediction": "all x.(Weight(x) -> (InGrams(x)))", "score": 0}
{"id": "eqasc_validation_1452", "prediction": "all x.(Weight(x) -> InGazette(x))", "score": 0}
{"id": "eqasc_validation_1452", "prediction": "all x.(Weight(x) -> InGrms(x))", "score": 0}
{"id": "eqasc_validation_1452", "prediction": "all x.(Weight(x) -> InGasoons(x))", "score": 0}
{"id": "eqasc_validation_1452", "prediction": "all x.(Weight(x) -> Ingrams(x))", "score": 0}
{"id": "eqasc_validation_1452", "prediction": "all x.(Weight(x) -> InGramo(x))", "score": 0}
{"id": "eqasc_validation_1452", "prediction": "all x.(Weight(x) -> InGm(x))", "score": 0}
{"id": "eqasc_validation_1452", "prediction": "all x.(Weight(x) -> InGasos(x))", "score": 0}
{"id": "eqasc_validation_1452", "prediction": "all x.(Weight(x) -> InGram(x))", "score": 0}
{"id": "eqasc_validation_1453", "prediction": "all x y.((Scale(x) & Grams(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1453", "prediction": "all x y z.((Scale(x) & Grams(y) & Grams(z)) -> UsedForMeasuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1453", "prediction": "all x y z.((Scale(x) & Grams(y) & Grams(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1453", "prediction": "all x y.((Scale(x) & Grams(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1453", "prediction": "all x y z.((Scales(x) & Grams(y) & Grams(z)) -> UsedForMeasuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1453", "prediction": "all x y z.((Scales(x) & Grams(y) & Grams(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1453", "prediction": "all x y.((Scales(x) & Grams(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1453", "prediction": "all x y.((Scales(x) & Grams(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1453", "prediction": "all x y z.((Scale(x) & Gram(y) & Gram(z)) -> UsedForMeasuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1453", "prediction": "all x y.((Scale(x) & Gram(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1453", "prediction": "all x.(Scale(x) -> UsedForMeasuringGrams(x))", "score": 0}
{"id": "eqasc_validation_1453", "prediction": "all x.(Scales(x) -> UsedForMeasuringGrams(x))", "score": 0}
{"id": "eqasc_validation_1453", "prediction": "all x y z.((Scale(x) & Grams(y) & Grams(z) & Measures(x,y,z)) -> Scale(x))", "score": 0}
{"id": "eqasc_validation_1453", "prediction": "all x y.((Scale(x) & GramMeasurement(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1453", "prediction": "all x y z.((Scale(x) & Grams(y) & Grams(z)) -> Measuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1453", "prediction": "all x y z.((Scale(x) & Gram(y) & Gram(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1454", "prediction": "all x y.((Object(x) & Weight(y)) -> ForceOfGravity(x,y))", "score": 0}
{"id": "eqasc_validation_1454", "prediction": "all x y.((Object(x) & Weight(y)) -> ForceOfGravityOn(x,y))", "score": 0}
{"id": "eqasc_validation_1454", "prediction": "all x y.((Object(x) & Weight(y)) -> GravityForce(x,y))", "score": 0}
{"id": "eqasc_validation_1454", "prediction": "all x.((Object(x) & Weight(x)) -> ForceOfGravityOn(x,y))", "score": 0}
{"id": "eqasc_validation_1454", "prediction": "all x.((Object(x) & Weight(x)) -> ForceOfGravity(x))", "score": 0}
{"id": "eqasc_validation_1454", "prediction": "all x y.((Object(x) & Weight(x,y)) -> ForceOfGravity(x,y))", "score": 0}
{"id": "eqasc_validation_1454", "prediction": "all x y.((Object(x) & Weight(y)) -> (ForceOfGravity(x,y) & On(x,y)))", "score": 0}
{"id": "eqasc_validation_1454", "prediction": "all x y.((Object(x) & Weight(x,y)) -> ForceOfGravityOn(x,y))", "score": 0}
{"id": "eqasc_validation_1454", "prediction": "all x y.((Object(x) & Weight(y)) -> ForceOfGravity(y,x))", "score": 0}
{"id": "eqasc_validation_1454", "prediction": "all x y.((Object(x) & Object(y)) -> GravityForce(x,y))", "score": 0}
{"id": "eqasc_validation_1454", "prediction": "all x y.((Object(x) & Weight(y)) -> ForgeOfGravity(x,y))", "score": 0}
{"id": "eqasc_validation_1454", "prediction": "all x y.((Object(x) & Weight(y)) -> GravitationalForce(x,y))", "score": 0}
{"id": "eqasc_validation_1454", "prediction": "all x y z.((Object(x) & Weight(y) & Gravity(z)) -> ForceOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1454", "prediction": "all x y.((Object(x) & Object(y)) -> Weight(x,y))", "score": 0}
{"id": "eqasc_validation_1454", "prediction": "all x y z.((Object(x) & Weight(y) & Gravity(z)) -> ForceOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1454", "prediction": "all x.(ObjectsWeight(x) -> ForceOfGravity(x))", "score": 0}
{"id": "eqasc_validation_1455", "prediction": "all x.(Scales(x) -> MeasuresForceOfGravity(x))", "score": 0}
{"id": "eqasc_validation_1455", "prediction": "all x y.((Scene(x) & Scale(y)) -> MeasuresForceOfGravity(x,y))", "score": 0}
{"id": "eqasc_validation_1455", "prediction": "all x y.((Scale(x) & Gravity(y)) -> MeasuresForceOfGravity(x,y))", "score": 0}
{"id": "eqasc_validation_1455", "prediction": "all x y.((Scales(x) & Gravity(y)) -> MeasuresForceOfGravity(x,y))", "score": 0}
{"id": "eqasc_validation_1455", "prediction": "all x y.((Scene(x) & Gravity(y)) -> MeasuresForceOfGravity(x,y))", "score": 0}
{"id": "eqasc_validation_1455", "prediction": "all x y.((Scales(x) & MeasuresForceOfGravity(x,y)) -> UsedForMeasuringForceOfGravity(x,y))", "score": 0}
{"id": "eqasc_validation_1455", "prediction": "all x y.((Scene(x) & MeasuresForceOfGravity(x,y)) -> Scale(x))", "score": 0}
{"id": "eqasc_validation_1455", "prediction": "all x y.((Scales(x) & MeasuresForceOfGravity(x,y)) -> Scale(x))", "score": 0}
{"id": "eqasc_validation_1455", "prediction": "all x y.((Scale(x) & MeasuresForceOfGravity(x,y)) -> Scale(x))", "score": 0}
{"id": "eqasc_validation_1455", "prediction": "all x y.((Scales(x) & MeasuresForceOfGravity(x,y)) -> UsedForMeasuringForceOfGravity(x))", "score": 0}
{"id": "eqasc_validation_1455", "prediction": "all x.(Scale(x) -> MeasuresForceOfGravity(x))", "score": 0}
{"id": "eqasc_validation_1455", "prediction": "all x y.((Scales(x) & Gravity(y)) -> MeasuresForce(x,y))", "score": 0}
{"id": "eqasc_validation_1455", "prediction": "all x y z.((Scales(x) & Gravity(y) & Gravity(z)) -> MeasuresForceOfGravity(x,y,z))", "score": 0}
{"id": "eqasc_validation_1455", "prediction": "all x y z.((Scale(x) & Gravity(y) & Gravity(z)) -> MeasuresForceOfGravity(x,y,z))", "score": 0}
{"id": "eqasc_validation_1455", "prediction": "all x y z.((Scales(x) & Gravity(y) & Gravity(z)) -> MeasuresFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1455", "prediction": "all x y.((Scene(x) & Scale(y)) -> MeasuresForceOfGravity(y,x))", "score": 0}
{"id": "eqasc_validation_1456", "prediction": "all x.(Weight(x) -> InKg(x))", "score": 0}
{"id": "eqasc_validation_1456", "prediction": "all x.(Weight(x) -> Kilogram(x))", "score": 0}
{"id": "eqasc_validation_1456", "prediction": "all x.(Weight(x) -> InKilograms(x))", "score": 0}
{"id": "eqasc_validation_1456", "prediction": "all x.(Weight(x) -> Kilograms(x))", "score": 0}
{"id": "eqasc_validation_1456", "prediction": "all x.(Weight(x) -> (InKilograms(x)))", "score": 0}
{"id": "eqasc_validation_1456", "prediction": "all x.(Weight(x) -> InKgs(x))", "score": 0}
{"id": "eqasc_validation_1456", "prediction": "all x.(Weight(x) -> WeightInKilograms(x))", "score": 0}
{"id": "eqasc_validation_1456", "prediction": "all x.(Weight(x) -> (InKg(x)))", "score": 0}
{"id": "eqasc_validation_1456", "prediction": "all x.(Weight(x) -> InKg.(x)))", "score": -1}
{"id": "eqasc_validation_1456", "prediction": "all x.(Weight(x) -> InKilogrammes(x))", "score": 0}
{"id": "eqasc_validation_1456", "prediction": "all x.(Weight(x) -> inKg(x))", "score": 0}
{"id": "eqasc_validation_1456", "prediction": "all x.(Weight(x) -> InKilogram(x))", "score": 0}
{"id": "eqasc_validation_1456", "prediction": "all x.(Weight(x) -> WeightInKg(x))", "score": 0}
{"id": "eqasc_validation_1456", "prediction": "all x.(Weight(x) -> InKg.(x))", "score": -1}
{"id": "eqasc_validation_1456", "prediction": "all x.(Way(x) -> InKg(x))", "score": 0}
{"id": "eqasc_validation_1457", "prediction": "all x.(Scale(x) -> MeasuresKg(x))", "score": 0}
{"id": "eqasc_validation_1457", "prediction": "all x y.((Scale(x) & Kilogram(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1457", "prediction": "all x.(Scales(x) -> MeasuresKg(x))", "score": 0}
{"id": "eqasc_validation_1457", "prediction": "all x y.((Scale(x) & Kilogram(y)) -> CanMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1457", "prediction": "all x y z.((Scale(x) & Kilogram(y) & Scale(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1457", "prediction": "all x y.((Scales(x) & Kilogram(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1457", "prediction": "all x y.((Scene(x) & Kilogram(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1457", "prediction": "all x y.((Scales(x) & Kilograms(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1457", "prediction": "all x y z.((Scales(x) & Kilogram(y) & Scale(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1457", "prediction": "all x y.((Scale(x) & Kilograms(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1457", "prediction": "all x y z.((Scale(x) & Kilogram(y) & Scale(z)) -> CanMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1457", "prediction": "all x y z.((Scene(x) & Kilogram(y) & Scale(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1457", "prediction": "all x y z.((Scale(x) & Kilogram(y) & Kilogram(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1457", "prediction": "all x y z.((Scale(x) & Kilogram(y) & Scale(z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1457", "prediction": "all x y z.((Scales(x) & Kilograms(y) & Scale(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1457", "prediction": "all x.(Scale(x) -> MeasuresKilograms(x))", "score": 0}
{"id": "eqasc_validation_1458", "prediction": "all x.(Weight(x) -> InPounds(x))", "score": 0}
{"id": "eqasc_validation_1458", "prediction": "all x.(Weight(x) -> WeightInPounds(x))", "score": 0}
{"id": "eqasc_validation_1458", "prediction": "all x.(Weight(x) -> (InPounds(x)))", "score": 0}
{"id": "eqasc_validation_1458", "prediction": "all x.(WeightInPounds(x) -> WeightInPounds(x))", "score": 0}
{"id": "eqasc_validation_1458", "prediction": "all x.(Weight(x) -> Pounds(x))", "score": 0}
{"id": "eqasc_validation_1458", "prediction": "all x.(Weight(x) -> IsInPounds(x))", "score": 0}
{"id": "eqasc_validation_1458", "prediction": "all x.(Weight(x) -> inPounds(x))", "score": 0}
{"id": "eqasc_validation_1458", "prediction": "all x.(Weight(x) -> InPfunds(x))", "score": 0}
{"id": "eqasc_validation_1458", "prediction": "all x.(Weight(x) -> InPound(x))", "score": 0}
{"id": "eqasc_validation_1458", "prediction": "all x.(Weight(x) -> InLowers(x))", "score": 0}
{"id": "eqasc_validation_1458", "prediction": "all x.(Weight(x) -> InPoids(x))", "score": 0}
{"id": "eqasc_validation_1458", "prediction": "(all x.(Weight(x) -> InPounds(x)))", "score": 0}
{"id": "eqasc_validation_1458", "prediction": "all x.(Weight(x) -> (Pounds(x)))", "score": 0}
{"id": "eqasc_validation_1458", "prediction": "all x.(Weight(x) -> Poids(x))", "score": 0}
{"id": "eqasc_validation_1459", "prediction": "all x y.((Scale(x) & Pound(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1459", "prediction": "all x y.((Scale(x) & Pound(y)) -> MeasuresPounds(x,y))", "score": 0}
{"id": "eqasc_validation_1459", "prediction": "all x y.((Scale(x) & Weight(y)) -> MeasuresPounds(x,y))", "score": 0}
{"id": "eqasc_validation_1459", "prediction": "all x.(Scale(x) -> UsedForMeasuringPounds(x))", "score": 0}
{"id": "eqasc_validation_1459", "prediction": "all x y.((Scale(x) & Weight(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1459", "prediction": "all x y.((Scale(x) & Pound(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1459", "prediction": "all x.(Scale(x) -> MeasuresPounds(x))", "score": 0}
{"id": "eqasc_validation_1459", "prediction": "all x y z.((Scale(x) & Pound(y) & Weight(z)) -> UsedForMeasuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1459", "prediction": "all x y z.((Scale(x) & Pound(y) & Pound(z)) -> UsedForMeasuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1459", "prediction": "all x y z.((Scale(x) & Pound(y) & Weight(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1459", "prediction": "all x y.((Scale(x) & Pounds(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1459", "prediction": "all x y z.((Scale(x) & Pound(y) & Pound(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1459", "prediction": "all x y.((Scale(x) & Weight(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1459", "prediction": "all x y z.((Scale(x) & Pound(y) & Pound(z)) -> MeasuresPounds(x,y,z))", "score": 0}
{"id": "eqasc_validation_1459", "prediction": "all x y.((Scale(x) & Weight(y)) -> UsedForMeasuringPounds(x,y))", "score": 0}
{"id": "eqasc_validation_1459", "prediction": "all x.(Scales(x) -> MeasuresPounds(x))", "score": 0}
{"id": "eqasc_validation_1460", "prediction": "all x y z.((Object(x) & Weight(y) & Grams(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1460", "prediction": "all x y.((Object(x) & Weight(y)) -> MeasuresInGrams(x,y))", "score": 0}
{"id": "eqasc_validation_1460", "prediction": "all x.(MeasuresObjectsWeightInGrams(x) -> MeasuresWeightInGrams(x))", "score": 0}
{"id": "eqasc_validation_1460", "prediction": "all x y z.((Object(x) & Weight(y) & Grams(z)) -> MeasuresIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1460", "prediction": "all x y.((Object(x) & Weight(y)) -> MeasuresInGems(x,y))", "score": 0}
{"id": "eqasc_validation_1460", "prediction": "all x y.((MeasureObject(x) & Weight(y)) -> MeasuresInGrams(x,y))", "score": 0}
{"id": "eqasc_validation_1460", "prediction": "all x.(MeasuresObjectsWeightInGems(x) -> MeasuresWeightInGems(x))", "score": 0}
{"id": "eqasc_validation_1460", "prediction": "all x.(MeasuresObjectsWeightInGrams(x) -> WeightInGrams(x))", "score": 0}
{"id": "eqasc_validation_1460", "prediction": "all x y z.((Object(x) & Weight(y) & Grams(z)) -> Measure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1460", "prediction": "all x y.((Object(x) & Weight(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1460", "prediction": "all x y.((Object(x) & Weight(y)) -> Measure(x,y))", "score": 0}
{"id": "eqasc_validation_1460", "prediction": "all x y.((MeasureObject(x) & Weight(y)) -> MeasuresInGems(x,y))", "score": 0}
{"id": "eqasc_validation_1460", "prediction": "all x.(MeasuresObjectsWeightInGems(x) -> WeightInGems(x))", "score": 0}
{"id": "eqasc_validation_1460", "prediction": "all x.(MeasuresObjectsWeight(x) -> InGems(x))", "score": 0}
{"id": "eqasc_validation_1460", "prediction": "all x.(MeasuresObjectsWeight(x) -> InGrams(x))", "score": 0}
{"id": "eqasc_validation_1460", "prediction": "all x.(MeasuresWeightInGrams(x) -> MeasuresObjects(x))", "score": 0}
{"id": "eqasc_validation_1461", "prediction": "all x.(Larva(x) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1461", "prediction": "all x.(LanceletLarvae(x) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1461", "prediction": "all x.(LanceletLarva(x) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1461", "prediction": "all x.(Larvae(x) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1461", "prediction": "all x.(Lancelet(x) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1461", "prediction": "all x y.((Larva(x) & Lancelet(y)) -> FreeSwimming(x,y))", "score": 0}
{"id": "eqasc_validation_1461", "prediction": "all x.(LangleletLarvae(x) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1461", "prediction": "all x y.((Larva(x) & Lancelet(y)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1461", "prediction": "all x y.((Larvae(x) & Lancelet(y)) -> FreeSwimming(x,y))", "score": 0}
{"id": "eqasc_validation_1461", "prediction": "all x y.((Larvae(x) & Lancelet(y)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1461", "prediction": "all x y.((Larvae(x) & Lancelet(y)) -> FreeSwimming(y))", "score": 0}
{"id": "eqasc_validation_1461", "prediction": "all x.(LarvaeLancelet(x) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1461", "prediction": "all x.(LarvaeLakelet(x) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1461", "prediction": "all x.(Language(x) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1461", "prediction": "all x y.((Larva(x) & Lancelet(y)) -> FreeSwimming(y))", "score": 0}
{"id": "eqasc_validation_1462", "prediction": "all x.(Lancelet(x) -> (SmallFishlikeAnimal(x) & TaperedBody(x)))", "score": 0}
{"id": "eqasc_validation_1462", "prediction": "all x.(Lancelet(x) -> (SmallFishlike(x) & TaperedBody(x)))", "score": 0}
{"id": "eqasc_validation_1462", "prediction": "all x.(Lancelet(x) -> (SmallFishlikeAnimal(x) & HasTapedBody(x)))", "score": 0}
{"id": "eqasc_validation_1462", "prediction": "all x.(Lakelet(x) -> (SmallFishlikeAnimal(x) & TaperedBody(x)))", "score": 0}
{"id": "eqasc_validation_1462", "prediction": "all x.(Lancelet(x) -> (SmallFishlike(x) & HasTapedBody(x)))", "score": 0}
{"id": "eqasc_validation_1462", "prediction": "all x.(Lancelet(x) -> (SmallFishlikeAnimal(x) & HasTaperedBody(x)))", "score": 0}
{"id": "eqasc_validation_1462", "prediction": "all x.(Lakelet(x) -> (SmallFishlike(x) & TaperedBody(x)))", "score": 0}
{"id": "eqasc_validation_1462", "prediction": "all x.(Lancelet(x) -> (SmallFishlikeAnimal(x) & TaperedBodies(x)))", "score": 0}
{"id": "eqasc_validation_1462", "prediction": "all x.(Lancelet(x) -> (SmallFish(x) & TaperedBody(x)))", "score": 0}
{"id": "eqasc_validation_1463", "prediction": "all x.((Larvae(x) & SmallFishlikeAnimal(x) & TaperedBody(x)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1463", "prediction": "all x y.((Larvae(x) & SmallFishlikeAnimal(y) & TaperedBody(y)) -> FreeSwimming(x,y))", "score": 0}
{"id": "eqasc_validation_1463", "prediction": "all x y.((Larvae(x) & SmallFishlikeAnimal(y) & TaperedBody(y)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1463", "prediction": "all x.((Larvae(x) & Larvae(x) & SmallFishlikeAnimal(x) & TaperedBody(x)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1463", "prediction": "all x.((Larvae(x) & SmallFishlikeAnimals(x) & TaperedBody(x)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1463", "prediction": "all x y z.((Larvae(x) & SmallFishlikeAnimal(y) & TaperedBody(z) & SmallFishlikeAnimal(y) & HasTapedBody(y,z)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1463", "prediction": "all x y z.((Larvae(x) & SmallFishlikeAnimal(y) & TaperedBody(z) & SmallFishlikeAnimal(y) & TaperedBody(z)) -> FreeSwimming(x,y,z))", "score": 0}
{"id": "eqasc_validation_1463", "prediction": "all x.((Larvale(x) & SmallFishlikeAnimal(x) & TaperedBody(x)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1463", "prediction": "all x y.((Larvae(x) & SmallFishlikeAnimal(y) & TaperedBody(x)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1463", "prediction": "all x y.((Larvae(x) & SmallFishlikeAnimal(y) & TaperedBody(y) & SmallFishlikeAnimal(y)) -> FreeSwimming(x,y))", "score": 0}
{"id": "eqasc_validation_1463", "prediction": "all x y z.((Larvae(x) & SmallFishlikeAnimal(y) & TaperedBody(z) & SmallFishlikeAnimal(y) & TaperedBody(y,z)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1463", "prediction": "all x y.((Larvae(x) & SmallFishlikeAnimal(y) & TaperedBody(y) & SmallFishlikeAnimal(y)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1463", "prediction": "all x y z.((Larvae(x) & SmallFishlikeAnimal(y) & TaperedBody(z) & SmallFishlikeAnimal(y) & TaperedBody(y)) -> FreeSwimming(x,y,z))", "score": 0}
{"id": "eqasc_validation_1463", "prediction": "all x.((Larvae(x) & SmallFishlikeAnimal(x) & HasTapedBody(x)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1464", "prediction": "all x.((Water(x) & Flows(x)) -> (DiveIn(x) & SwimThrough(x)))", "score": 0}
{"id": "eqasc_validation_1464", "prediction": "all x.(WaterFlows(x) -> (DiveIn(x) & SwimThrough(x)))", "score": 0}
{"id": "eqasc_validation_1464", "prediction": "all x.((Water(x) & WaterFlows(x)) -> (DiveIn(x) & SwimThrough(x)))", "score": 0}
{"id": "eqasc_validation_1464", "prediction": "all x.(WaterFlow(x) -> (DiveIn(x) & SwimThrough(x)))", "score": 0}
{"id": "eqasc_validation_1464", "prediction": "all x.((WaterFlows(x) & DiveIn(x) & SwimThrough(x)) -> WaterFlows(x))", "score": 0}
{"id": "eqasc_validation_1464", "prediction": "all x.((Water(x) & Flows(x)) -> (DiveIn(x) & SwimsThrough(x)))", "score": 0}
{"id": "eqasc_validation_1464", "prediction": "all x y.((Water(x) & Water(y)) -> (Flows(x,y) & DivesIn(x,y) & SwimsThrough(x,y)))", "score": 0}
{"id": "eqasc_validation_1464", "prediction": "all x.((WaterFlows(x) & DivingIn(x) & SwimsThrough(x)) -> WaterFlows(x))", "score": 0}
{"id": "eqasc_validation_1464", "prediction": "all x y.((Water(x) & WaterFlows(x)) -> (DiveIn(y) & SwimThrough(y)))", "score": 0}
{"id": "eqasc_validation_1464", "prediction": "all x.(Water(x) -> (Flows(x) & DiveIn(x) & SwimsThrough(x)))", "score": 0}
{"id": "eqasc_validation_1464", "prediction": "all x y.((Water(x) & WaterFlow(y)) -> (DiveIn(x,y) & SwimThrough(x,y)))", "score": 0}
{"id": "eqasc_validation_1464", "prediction": "all x y.((Water(x) & Water(y)) -> (Flows(x,y) & DiveIn(x,y) & SwimsThrough(x,y)))", "score": 0}
{"id": "eqasc_validation_1464", "prediction": "all x.(Water(x) -> (Flows(x) & DivingIn(x) & SwimsThrough(x)))", "score": 0}
{"id": "eqasc_validation_1464", "prediction": "all x.((Water(x) & Flows(x)) -> (DiveIn(x) & Swim(x)))", "score": 0}
{"id": "eqasc_validation_1464", "prediction": "all x.(Water(x) -> (Flows(x) & DivesIn(x) & SwimsThrough(x)))", "score": 0}
{"id": "eqasc_validation_1465", "prediction": "all x.(LanceletLarvae(x) -> LivesInWater(x))", "score": 0}
{"id": "eqasc_validation_1465", "prediction": "all x y.((LanceletLarvae(x) & Water(y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_1465", "prediction": "all x y z.((LanceletLarvae(x) & Water(y) & Water(z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1465", "prediction": "all x.(LanceletLarvaeLiveInWater(x) -> LarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvae", "score": -1}
{"id": "eqasc_validation_1465", "prediction": "all x.(LanceletLarvaeLiveInWater(x) -> LanceletLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvae", "score": -1}
{"id": "eqasc_validation_1465", "prediction": "all x.(LanceletLarvaeLiveInWater(x) -> LarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvae", "score": -1}
{"id": "eqasc_validation_1465", "prediction": "all x.(LanceletLarvaeLiveInWater(x) -> LarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvae", "score": -1}
{"id": "eqasc_validation_1465", "prediction": "all x.(LanceletLarvaeLiveInWater(x) -> LarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvae", "score": -1}
{"id": "eqasc_validation_1465", "prediction": "all x.(LanceletLarvaeLiveInWater(x) -> LanceletLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvae", "score": -1}
{"id": "eqasc_validation_1465", "prediction": "all x.(LanceletLarvaeLiveInWater(x) -> LarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeL", "score": -1}
{"id": "eqasc_validation_1465", "prediction": "all x.(LanceletLarvaeLiveInWater(x) -> LarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaesInWater(x)", "score": -1}
{"id": "eqasc_validation_1465", "prediction": "all x.(LanceletLarvaeLiveInWater(x) -> LarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLivingInWater(x))", "score": 0}
{"id": "eqasc_validation_1465", "prediction": "all x.(LanceletLarvaeLiveInWater(x) -> LarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLivingInWater(x))", "score": 0}
{"id": "eqasc_validation_1465", "prediction": "all x.(LanceletLarvaeLiveInWater(x) -> LanceletLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvae", "score": -1}
{"id": "eqasc_validation_1465", "prediction": "all x.(LanceletLarvaeLiveInWater(x) -> LarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLivingInWater(x)))", "score": -1}
{"id": "eqasc_validation_1465", "prediction": "all x.(LanceletLarvaeLiveInWater(x) -> LarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvaeLarvae", "score": -1}
{"id": "eqasc_validation_1466", "prediction": "all x.((SmallFishlikeAnimal(x) & TaperedBody(x)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1466", "prediction": "all x.((SmallFishLikeAnimal(x) & TaperedBody(x)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1466", "prediction": "all x y.((SmallFishlikeAnimal(x) & TaperedBody(x) & SmallFishlikeAnimal(y) & TaperedBody(x)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1466", "prediction": "all x.((Animal(x) & SmallFishlike(x) & TaperedBody(x)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1466", "prediction": "all x y.((SmallFishlikeAnimal(x) & TaperedBody(y) & Has(x,y)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1466", "prediction": "all x y z.((SmallFishlikeAnimal(x) & TaperedBody(y) & SmallFishlikeAnimal(z) & TaperedBody(z)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1466", "prediction": "all x y z.((SmallFishlikeAnimal(x) & TaperedBody(y) & SmallFishlikeAnimal(z) & Has(x,y) & TaperedBody(z)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1466", "prediction": "all x y.((SmallFishlikeAnimal(x) & TaperedBody(x) & SmallFishlikeAnimal(y) & TaperedBody(y)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1466", "prediction": "all x y.((SmallFishlikeAnimal(x) & TaperedBody(x) & Has(x,y)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1466", "prediction": "all x.((SmallFish(x) & TaperedBody(x)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1466", "prediction": "all x y.((SmallFishlikeAnimal(x) & TaperedBody(x) & SmallFishlikeAnimal(x) & TaperedBody(x)) -> FreeSwimming(y))", "score": 0}
{"id": "eqasc_validation_1466", "prediction": "all x y.((SmallFishlikeAnimal(x) & TaperedBody(x)) -> FreeSwimming(y))", "score": 0}
{"id": "eqasc_validation_1466", "prediction": "all x y z.((SmallFishlikeAnimal(x) & TaperedBody(y) & SmallFishlikeAnimal(z) & TaperedBody(z)) -> FreeSwimming(x,y,z))", "score": 0}
{"id": "eqasc_validation_1466", "prediction": "all x y z.((SmallFishlikeAnimal(x) & TaperedBody(y) & SmallFishlikeAnimal(x) & TaperedBody(z)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1466", "prediction": "all x y.((SmallFishlikeAnimal(x) & TaperedBody(x) & SmallFishlikeAnimal(x) & TaperedBody(y)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1466", "prediction": "all x y.((SmallFishlikeAnimal(x) & TaperedBody(x) & SmallFishlike(x) & TaperedBody(y)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1467", "prediction": "all x.((EggsFertilized(x) & FreeSwimmingLarvae(x)) -> Develops(x))", "score": 0}
{"id": "eqasc_validation_1467", "prediction": "all x.((EggsFertilized(x) & Larvae(x)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1467", "prediction": "all x.((EggsFertilized(x) & FreeSwimmingLarvae(x)) -> Develop(x))", "score": 0}
{"id": "eqasc_validation_1467", "prediction": "all x.(FertilizedEggs(x) -> FreeSwimmingLarvae(x))", "score": 0}
{"id": "eqasc_validation_1467", "prediction": "all x.((Eggs(x) & Fertilized(x)) -> FreeSwimmingLarvae(x))", "score": 0}
{"id": "eqasc_validation_1467", "prediction": "all x.((EggsFertilized(x) & LarvaeDevelop(x)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1467", "prediction": "all x.((EggsFertilized(x) & LarvaeFreeSwimming(x)) -> Develops(x))", "score": 0}
{"id": "eqasc_validation_1467", "prediction": "all x.((EggsFertile(x) & FreeSwimmingLarvae(x)) -> Develops(x))", "score": 0}
{"id": "eqasc_validation_1467", "prediction": "all x.((EggsFertilized(x) & LarvaeDevelops(x)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1467", "prediction": "all x.((Egg(x) & Fertilized(x)) -> FreeSwimmingLarvae(x))", "score": 0}
{"id": "eqasc_validation_1467", "prediction": "all x.((EggsFertilized(x) & LarvaeFreeSwimming(x)) -> Develop(x))", "score": 0}
{"id": "eqasc_validation_1467", "prediction": "all x.((EggsFertilized(x) & Larvae(y)) -> FreeSwimming(y))", "score": 0}
{"id": "eqasc_validation_1467", "prediction": "all x.(FertilizedEggs(x) -> DevelopsFreeSwimmingLarvae(x))", "score": 0}
{"id": "eqasc_validation_1467", "prediction": "all x.(Fertile(x) -> FreeSwimmingLarvae(x))", "score": 0}
{"id": "eqasc_validation_1467", "prediction": "all x.(FertilizedEggs(x) -> FreeSwimmingLarvaeDevelops(x))", "score": 0}
{"id": "eqasc_validation_1467", "prediction": "all x.((Eggs(x) & Fertilized(x)) -> FreeSwimmingLarvaeDevelops(x))", "score": 0}
{"id": "eqasc_validation_1468", "prediction": "all x.((LanceletEggs(x) & Fertilized(x)) -> DevelopsSoCanNavigateInWater(x))", "score": 0}
{"id": "eqasc_validation_1468", "prediction": "all x.((LanceletEggs(x) & Fertilized(x)) -> DevelopsToNavigateInWater(x))", "score": 0}
{"id": "eqasc_validation_1468", "prediction": "all x y z.((LanceletEgg(x) & Fertilized(x) & Water(y) & Water(z)) -> DevelopsSoCanNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_1468", "prediction": "all x.((LanceletEggs(x) & Fertile(x)) -> DevelopsSoCanNavigateInWater(x))", "score": 0}
{"id": "eqasc_validation_1468", "prediction": "all x.((LanceletEgg(x) & Fertilized(x)) -> DevelopsSoCanNavigateInWater(x))", "score": 0}
{"id": "eqasc_validation_1468", "prediction": "all x y z.((LanceletEgg(x) & Fertilized(x) & Water(y) & Water(z)) -> DevelopsToNavigateIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1468", "prediction": "all x y z.((LanceletEgg(x) & Fertilized(x) & Water(y) & Water(z)) -> DevelopsSoCanNavigateIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1468", "prediction": "all x.((LanceletEggs(x) & Fertile(x)) -> DevelopsToNavigateInWater(x))", "score": 0}
{"id": "eqasc_validation_1468", "prediction": "all x y.((LanceletEgg(x) & Fertilized(x) & Water(y)) -> DevelopsSoCanNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_1468", "prediction": "all x.(FertilizedLanceletEggs(x) -> DevelopsSoCanNavigateInWater(x))", "score": 0}
{"id": "eqasc_validation_1468", "prediction": "all x.((LanceletEggs(x) & Fertilized(x)) -> CanNavigateInWater(x))", "score": 0}
{"id": "eqasc_validation_1468", "prediction": "all x.((LanceletEggs(x) & Fertilized(x)) -> DevelopsSo(x))", "score": 0}
{"id": "eqasc_validation_1468", "prediction": "all x y z.((LanceletEgg(x) & Fertilized(x) & Water(y) & Water(z)) -> DevelopsToNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_1468", "prediction": "all x y.((LanceletEgg(x) & Fertilized(x)) -> DevelopsSoCanNavigateInWater(x,y))", "score": 0}
{"id": "eqasc_validation_1468", "prediction": "all x y.((LanceletEgg(x) & Fertile(x) & Water(y)) -> DevelopsSoCanNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_1468", "prediction": "all x y z.((LanceletEgg(x) & Fertilized(x) & Water(y) & Water(z)) -> CanNavigate(x,y,z))", "score": 0}
{"id": "eqasc_validation_1469", "prediction": "all x y.((Human(x) & Puberty(y)) -> SexuallyMature(x,y))", "score": 4}
{"id": "eqasc_validation_1469", "prediction": "all x y.((Human(x) & Puberty(y)) -> BecomesSexuallyMature(x,y))", "score": 0}
{"id": "eqasc_validation_1469", "prediction": "all x y.((Human(x) & Puberty(y)) -> (BecomesSexuallyMature(x,y)))", "score": 0}
{"id": "eqasc_validation_1469", "prediction": "all x.(Puberty(x) -> (BecomesSexuallyMature(x) & Human(x)))", "score": 1}
{"id": "eqasc_validation_1469", "prediction": "all x.(Puperty(x) -> (BecomesSexuallyMature(x) & Human(x)))", "score": 0}
{"id": "eqasc_validation_1469", "prediction": "all x.(Puberty(x) -> HumansBecomeSexuallyMature(x))", "score": 0}
{"id": "eqasc_validation_1469", "prediction": "all x.(Puperhood(x) -> (BecomesSexuallyMature(x) & Human(x)))", "score": 0}
{"id": "eqasc_validation_1469", "prediction": "all x y.((Human(x) & Puberty(y)) -> SexuallyMature(y))", "score": 1}
{"id": "eqasc_validation_1469", "prediction": "all x.(Puperty(x) -> HumansBecomeSexuallyMature(x))", "score": 0}
{"id": "eqasc_validation_1469", "prediction": "all x.(Puperhood(x) -> HumansBecomeSexuallyMature(x))", "score": 0}
{"id": "eqasc_validation_1469", "prediction": "all x.(Pupberty(x) -> (BecomesSexuallyMature(x) & Human(x)))", "score": 0}
{"id": "eqasc_validation_1469", "prediction": "all x.((Human(x) & Puberty(x)) -> SexuallyMature(x))", "score": 1}
{"id": "eqasc_validation_1469", "prediction": "all x.(Puberty(x) -> (BecomesSexuallyMature(x) & Humans(x)))", "score": 0}
{"id": "eqasc_validation_1469", "prediction": "all x.(Puperty(x) -> (BecomesSexuallyMature(x) & Humans(x)))", "score": 0}
{"id": "eqasc_validation_1470", "prediction": "all x.((Bird(x) & Age(x,12)) -> EntersPuberty(x))", "score": 0}
{"id": "eqasc_validation_1470", "prediction": "all x y.((Bird(x) & Puberty(y)) -> EntersAt(x,y))", "score": 0}
{"id": "eqasc_validation_1470", "prediction": "all x y.((Boy(x) & Puberty(y)) -> EntersAt(x,y))", "score": 0}
{"id": "eqasc_validation_1470", "prediction": "all x.(Bird(x) -> EntersPubertyAtAge(x,12))", "score": 0}
{"id": "eqasc_validation_1470", "prediction": "all x.((Bird(x) & Age(x,12)) -> EntersPupilhood(x))", "score": 0}
{"id": "eqasc_validation_1470", "prediction": "all x.(Boy(x) -> EntersPubertyAtAge(x,12))", "score": 0}
{"id": "eqasc_validation_1470", "prediction": "all x.(Boy(x) -> EntersPupilhoodAtAge(x,12))", "score": 0}
{"id": "eqasc_validation_1470", "prediction": "all x.(Boy(x) -> EntersPubertyAt(x,12))", "score": 0}
{"id": "eqasc_validation_1470", "prediction": "all x.(Bird(x) -> EntersPubertyAt(x,12))", "score": 0}
{"id": "eqasc_validation_1470", "prediction": "all x.((Boy(x) & Age(x,12)) -> EntersPuberty(x))", "score": 0}
{"id": "eqasc_validation_1470", "prediction": "all x.(Bird(x) -> EntersPupilhoodAtAge(x,12))", "score": 0}
{"id": "eqasc_validation_1470", "prediction": "all x.(Boy(x) -> EntersPubertyAtAbout12YearsOfAge(x))", "score": 0}
{"id": "eqasc_validation_1470", "prediction": "all x.(Boy(x) -> EntersPupilhoodAt(x,12))", "score": 0}
{"id": "eqasc_validation_1470", "prediction": "all x.((Boy(x) & Age(x,12)) -> EntersPupilhood(x))", "score": 0}
{"id": "eqasc_validation_1470", "prediction": "all x.(Boy(x) -> EntersPupilhoodAtAbout12YearsOfAge(x))", "score": 0}
{"id": "eqasc_validation_1470", "prediction": "all x.(Bird(x) -> EntersPupilhoodAt(x,12))", "score": 0}
{"id": "eqasc_validation_1471", "prediction": "all x.((Boy(x) & Age(x,12)) -> SexuallyMature(x))", "score": 0}
{"id": "eqasc_validation_1471", "prediction": "all x.((Boy(x) & 12YearsOfAge(x)) -> SexuallyMature(x))", "score": 0}
{"id": "eqasc_validation_1471", "prediction": "all x.((Bird(x) & Age(x,12)) -> SexuallyMature(x))", "score": 0}
{"id": "eqasc_validation_1471", "prediction": "all x.((Boy(x) & 12YearsOld(x)) -> SexuallyMature(x))", "score": 0}
{"id": "eqasc_validation_1471", "prediction": "all x.((Boys(x) & Age(x,12)) -> SexuallyMature(x))", "score": 0}
{"id": "eqasc_validation_1471", "prediction": "all x.((Bird(x) & 12YearsOld(x)) -> SexuallyMature(x))", "score": 0}
{"id": "eqasc_validation_1471", "prediction": "all x.((Bird(x) & 12YearsOfAge(x)) -> SexuallyMature(x))", "score": 0}
{"id": "eqasc_validation_1471", "prediction": "all x.((Boys(x) & 12YearsOfAge(x)) -> SexuallyMature(x))", "score": 0}
{"id": "eqasc_validation_1471", "prediction": "all x.((Boy(x) & SexuallyMature(x)) -> 12YearsOfAge(x))", "score": 0}
{"id": "eqasc_validation_1471", "prediction": "all x.((Boy(x) & BecomesSexuallyMature(x)) -> 12YearsOfAge(x))", "score": 0}
{"id": "eqasc_validation_1471", "prediction": "all x.((Boy(x) & SexuallyMature(x,12)) -> BoysBecomeSexuallyMature(x))", "score": 0}
{"id": "eqasc_validation_1471", "prediction": "all x.((Boys(x) & SexuallyMature(x)) -> 12YearsOfAge(x))", "score": 0}
{"id": "eqasc_validation_1471", "prediction": "all x.((Boy(x) & SexuallyMature(x,12)) -> BoysBecomeMature(x))", "score": 0}
{"id": "eqasc_validation_1471", "prediction": "all x.((Boy(x) & BecomesSexuallyMature(x)) -> 12YearsOld(x))", "score": 0}
{"id": "eqasc_validation_1471", "prediction": "all x.((Boy(x) & SexuallyMature(x,12)) -> Boy(x))", "score": 0}
{"id": "eqasc_validation_1471", "prediction": "all x.((Boy(x) & SexuallyMature(x) & Age(x,12)) -> BoysBecomeMature(x))", "score": 0}
{"id": "eqasc_validation_1472", "prediction": "all x.(WetDream(x) -> SignOfPuberty(x))", "score": 0}
{"id": "eqasc_validation_1472", "prediction": "all x y.((WetDream(x) & Puberty(y)) -> SignOf(x,y))", "score": 0}
{"id": "eqasc_validation_1472", "prediction": "all x.((WetDream(x) & Puberty(x)) -> SignOf(x,puberty))", "score": 0}
{"id": "eqasc_validation_1472", "prediction": "all x.(WetDream(x) -> Puberty(x))", "score": 0}
{"id": "eqasc_validation_1472", "prediction": "all x.(WetDream(x) -> SignOfPupilhood(x))", "score": 0}
{"id": "eqasc_validation_1472", "prediction": "all x.(WetDream(x) -> PubertySign(x))", "score": 0}
{"id": "eqasc_validation_1472", "prediction": "all x.(WetDream(x) -> SignOfPupitery(x))", "score": 0}
{"id": "eqasc_validation_1472", "prediction": "all x.(WetDream(x) -> SignOfPuperhood(x))", "score": 0}
{"id": "eqasc_validation_1472", "prediction": "all x.((WetDream(x) & Puberty(x)) -> SignOf(x,y))", "score": 0}
{"id": "eqasc_validation_1472", "prediction": "all x.((WetDream(x) & Puberty(x)) -> SignOf(x,Puberty))", "score": 0}
{"id": "eqasc_validation_1472", "prediction": "all x.(WetDawn(x) -> SignOfPuberty(x))", "score": 0}
{"id": "eqasc_validation_1472", "prediction": "all x.((WetDream(x) & Puberty(x)) -> SignOf(x,Pupilhood))", "score": 0}
{"id": "eqasc_validation_1472", "prediction": "all x.(WetDawn(x) -> SignOfPupilhood(x))", "score": 0}
{"id": "eqasc_validation_1472", "prediction": "all x.((WetDream(x) & Puberty(x)) -> Sign(x))", "score": 0}
{"id": "eqasc_validation_1472", "prediction": "all x.(WetDance(x) -> SignOfPuberty(x))", "score": 0}
{"id": "eqasc_validation_1472", "prediction": "all x.(WetD dreams(x) -> SignOfPuberty(x))", "score": -1}
{"id": "eqasc_validation_1473", "prediction": "all x.(WetDream(x) -> SignOfSexuallyMaturity(x))", "score": 0}
{"id": "eqasc_validation_1473", "prediction": "all x y.((WetDream(x) & SexualMaturity(y)) -> SignOf(x,y))", "score": 0}
{"id": "eqasc_validation_1473", "prediction": "all x y z.((WetDream(x) & SexualMaturity(y) & SexualMaturity(z)) -> SignOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1473", "prediction": "all x.(WetDream(x) -> (SignOfSexuallyMaturity(x) & SignOfSexuallyMaturity(x)))", "score": 0}
{"id": "eqasc_validation_1473", "prediction": "all x y.((WetDream(x) & SexualMaturity(y)) -> SignOfMaturity(x,y))", "score": 0}
{"id": "eqasc_validation_1473", "prediction": "all x.((WetDream(x) & SexualMaturity(x)) -> SignOfMaturity(x))", "score": 0}
{"id": "eqasc_validation_1473", "prediction": "all x.(WetDream(x) -> SexualMaturity(x))", "score": 0}
{"id": "eqasc_validation_1473", "prediction": "all x.(WetDream(x) -> (SignOfSexuallyMaturity(x) & SignOfMaturity(x)))", "score": 0}
{"id": "eqasc_validation_1473", "prediction": "all x y z.((WetDream(x) & SexualMaturity(y) & SexualMaturity(z)) -> SignOfMaturity(x,y,z))", "score": 0}
{"id": "eqasc_validation_1473", "prediction": "all x y.((WetDawn(x) & SexualMaturity(y)) -> SignOf(x,y))", "score": 0}
{"id": "eqasc_validation_1473", "prediction": "all x y.((WetDream(x) & SexualMaturity(y)) -> SignOfSexuallyMaturity(x,y))", "score": 0}
{"id": "eqasc_validation_1473", "prediction": "all x.(WetD dreams(x) -> SignOfSexuallyMaturity(x))", "score": -1}
{"id": "eqasc_validation_1473", "prediction": "all x.(WetDawn(x) -> SignOfSexuallyMaturity(x))", "score": 0}
{"id": "eqasc_validation_1473", "prediction": "all x.(WetDreams(x) -> SignOfSexuallyMaturity(x))", "score": 0}
{"id": "eqasc_validation_1473", "prediction": "all x y.((WetDream(x) & SexualMaturity(y) & SignOf(x,y)) -> SignOf(x,y))", "score": 0}
{"id": "eqasc_validation_1473", "prediction": "all x.((WetDream(x) & SexualMaturity(x)) -> SignOf(x,sexualMaturity))", "score": 0}
{"id": "eqasc_validation_1474", "prediction": "all x.((Human(x) & Adolescence(x)) -> SexuallyMature(x))", "score": 2}
{"id": "eqasc_validation_1474", "prediction": "all x y.((Human(x) & Adolescence(y)) -> SexuallyMature(x,y))", "score": 1}
{"id": "eqasc_validation_1474", "prediction": "all x y z.((Human(x) & Adolescence(y) & Adolescence(z)) -> SexuallyMature(x,y,z))", "score": 0}
{"id": "eqasc_validation_1474", "prediction": "all x y.((Human(x) & Adolescence(y)) -> SexuallyMatureDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1474", "prediction": "all x y.((Human(x) & Adolescence(y) & SexuallyMature(x,y)) -> SexuallyMature(x,y))", "score": 0}
{"id": "eqasc_validation_1474", "prediction": "all x y z.((Human(x) & Adolescence(y) & Adolescence(z)) -> SexuallyMature(x,y))", "score": 1}
{"id": "eqasc_validation_1474", "prediction": "all x.((Human(x) & Adolescence(y)) -> SexuallyMature(x,y))", "score": 1}
{"id": "eqasc_validation_1474", "prediction": "all x y z.((Human(x) & Adolescence(y) & Adolescence(z)) -> (BecomesSexuallyMature(x,y) & Adolescence(x,z)))", "score": 0}
{"id": "eqasc_validation_1474", "prediction": "all x y.((Human(x) & Adolescence(y)) -> SexuallyMatureIn(x,y))", "score": 0}
{"id": "eqasc_validation_1474", "prediction": "all x.((Human(x) & Adolescence(x)) -> BecomesSexuallyMature(x))", "score": 1}
{"id": "eqasc_validation_1474", "prediction": "all x.(Human(x) -> (BecomesSexuallyMature(x) & Adolescence(x)))", "score": 0}
{"id": "eqasc_validation_1474", "prediction": "all x y z.((Human(x) & Adolescence(y) & Adolescence(z)) -> BecomesSexuallyMature(x,y,z))", "score": 0}
{"id": "eqasc_validation_1474", "prediction": "all x.(Human(x) -> SexuallyMatureDuringAdolescence(x))", "score": 0}
{"id": "eqasc_validation_1474", "prediction": "all x.((Human(x) & Adolescence(x) & SexuallyMature(x)) -> SexuallyMature(x))", "score": 0}
{"id": "eqasc_validation_1474", "prediction": "all x y.((Human(x) & Adolescent(y)) -> SexuallyMature(x,y))", "score": 1}
{"id": "eqasc_validation_1474", "prediction": "all x.((Human(x) & Adolescence(x)) -> SexuallyMatureDuring(x,adolescence))", "score": 0}
{"id": "eqasc_validation_1475", "prediction": "all x.((Growth(x) & Puberty(x)) -> StopsWith(x,puberty))", "score": 0}
{"id": "eqasc_validation_1475", "prediction": "all x.((Growth(x) & Puberty(x)) -> UsuallyStopsWith(x,puberty))", "score": 0}
{"id": "eqasc_validation_1475", "prediction": "all x y.((Growth(x) & Puberty(y)) -> UsuallyStopsWith(x,y))", "score": 0}
{"id": "eqasc_validation_1475", "prediction": "all x.((Growth(x) & Puberty(x)) -> Stops(x))", "score": 0}
{"id": "eqasc_validation_1475", "prediction": "all x.((Growth(x) & Puberty(x)) -> -GrowthWithPuberty(x))", "score": 0}
{"id": "eqasc_validation_1475", "prediction": "all x.((Growth(x) & Puberty(x)) -> UsuallyCloses(x))", "score": 0}
{"id": "eqasc_validation_1475", "prediction": "all x y.((Growth(x) & Puberty(y)) -> StopsWith(x,y))", "score": 0}
{"id": "eqasc_validation_1475", "prediction": "all x.((Growth(x) & Puberty(x)) -> UsuallyStops(x))", "score": 0}
{"id": "eqasc_validation_1475", "prediction": "all x y.((Growth(x) & Puberty(y)) -> UsuallyClosesWith(x,y))", "score": 0}
{"id": "eqasc_validation_1475", "prediction": "all x.((Growth(x) & Puberty(x)) -> UsuallyClosesWith(x,puberty))", "score": 0}
{"id": "eqasc_validation_1475", "prediction": "all x.((Growth(x) & Puberty(x)) -> -Growth(x))", "score": 0}
{"id": "eqasc_validation_1475", "prediction": "all x.((Growth(x) & Puberty(x)) -> -GrowthWith(x,puberty))", "score": 0}
{"id": "eqasc_validation_1475", "prediction": "all x.((Growth(x) & Puberty(y)) -> UsuallyStopsWith(x,y))", "score": 0}
{"id": "eqasc_validation_1475", "prediction": "all x.((Growth(x) & Puberty(x)) -> EndsWith(x,puberty))", "score": 0}
{"id": "eqasc_validation_1475", "prediction": "all x.(Growth(x) -> Puberty(x))", "score": 0}
{"id": "eqasc_validation_1475", "prediction": "all x.((Growth(x) & Puberty(y)) -> StopsWith(x,y))", "score": 0}
{"id": "eqasc_validation_1476", "prediction": "all x.((Human(x) & SexuallyMature(x)) -> GrowthStops(x))", "score": 0}
{"id": "eqasc_validation_1476", "prediction": "all x.((Human(x) & SexuallyMature(x)) -> GrowthChance(x))", "score": 0}
{"id": "eqasc_validation_1476", "prediction": "all x.((Human(x) & SexuallyMature(x)) -> GrowthCloses(x))", "score": 0}
{"id": "eqasc_validation_1476", "prediction": "all x.((Human(x) & SexuallyMature(x)) -> GrowthPeriod(x))", "score": 0}
{"id": "eqasc_validation_1476", "prediction": "all x.((Human(x) & SexuallyMature(x)) -> GrowthChances(x))", "score": 0}
{"id": "eqasc_validation_1476", "prediction": "all x.((Human(x) & SexuallyMature(x)) -> GrowthCancels(x))", "score": 0}
{"id": "eqasc_validation_1476", "prediction": "all x.((Human(x) & SexuallyMature(x)) -> GrowthEnds(x))", "score": 0}
{"id": "eqasc_validation_1476", "prediction": "all x.((Human(x) & SexuallyMature(x)) -> GrowthContinues(x))", "score": 0}
{"id": "eqasc_validation_1476", "prediction": "all x y.((Human(x) & SexuallyMature(y)) -> GrowthStops(x,y))", "score": 0}
{"id": "eqasc_validation_1476", "prediction": "all x y.((Human(x) & SexuallyMature(y)) -> GrowthChance(x,y))", "score": 0}
{"id": "eqasc_validation_1476", "prediction": "all x.((Human(x) & SexuallyMature(x)) -> GrowthPermits(x))", "score": 0}
{"id": "eqasc_validation_1476", "prediction": "all x.((Human(x) & SexuallyMature(x)) -> GrowthPeriods(x))", "score": 0}
{"id": "eqasc_validation_1476", "prediction": "all x.((Human(x) & SexuallyMature(x)) -> GrowthCancel(x))", "score": 0}
{"id": "eqasc_validation_1476", "prediction": "all x.((Human(x) & SexuallyMature(x)) -> GrowthOccurs(x))", "score": 0}
{"id": "eqasc_validation_1476", "prediction": "all x.((Human(x) & SexuallyMature(x)) -> UsuallyGrowthCancels(x))", "score": 0}
{"id": "eqasc_validation_1476", "prediction": "all x y.((Human(x) & SexuallyMature(y)) -> UsuallyGrowthCancels(x,y))", "score": 0}
{"id": "eqasc_validation_1477", "prediction": "all x y.((Breast(x) & Human(y) & SexuallyMature(x,y)) -> DevelopsDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1477", "prediction": "all x y.((Breast(x) & Human(y) & SexuallyMature(y)) -> DevelopsDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1477", "prediction": "all x y z.((Breast(x) & Human(y) & SexuallyMature(z)) -> DevelopsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1477", "prediction": "all x y.((Breast(x) & Human(y)) -> SexuallyMature(x,y))", "score": 0}
{"id": "eqasc_validation_1477", "prediction": "all x y.((Breast(x) & Human(y) & SexuallyMature(x)) -> DevelopsDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1477", "prediction": "all x y.((Breast(x) & Human(y) & SexuallyMature(x,y)) -> DevelopsDuringPeriod(x,y))", "score": 0}
{"id": "eqasc_validation_1477", "prediction": "all x y.((Breast(x) & Human(y) & SexuallyMature(y)) -> DevelopsDuringPeriod(x,y))", "score": 0}
{"id": "eqasc_validation_1477", "prediction": "all x y z.((Breast(x) & Human(y) & SexuallyMature(z)) -> DevelopsDuringPeriod(x,y,z))", "score": 0}
{"id": "eqasc_validation_1477", "prediction": "all x y.((Brust(x) & Human(y) & SexuallyMature(x,y)) -> DevelopsDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1477", "prediction": "all x y.((Brust(x) & Human(y) & SexuallyMature(y)) -> DevelopsDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1477", "prediction": "all x y.((Breast(x) & Human(y) & SexuallyMature(z)) -> DevelopsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1477", "prediction": "all x y.((Breast(x) & Human(y) & SexuallyMature(x)) -> DevelopsDuringPeriod(x,y))", "score": 0}
{"id": "eqasc_validation_1477", "prediction": "all x y z.((Brust(x) & Human(y) & SexuallyMature(z)) -> DevelopsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1477", "prediction": "all x y.((Breast(x) & Human(y) & SexuallyMature(z)) -> DevelopsDuringPeriod(x,y,z))", "score": 0}
{"id": "eqasc_validation_1477", "prediction": "all x y.((Breast(x) & Human(y) & SexuallyMature(y,x)) -> DevelopsDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1477", "prediction": "all x y z.((Breast(x) & Human(y) & SexuallyMature(z)) -> DevelopsDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1478", "prediction": "all x.((Breast(x) & Human(x) & SexuallyMature(x)) -> Develops(x))", "score": 0}
{"id": "eqasc_validation_1478", "prediction": "all x y.((Breast(x) & Human(y) & SexuallyMature(y)) -> Develops(x,y))", "score": 0}
{"id": "eqasc_validation_1478", "prediction": "all x.((Breast(x) & Human(x)) -> SexuallyMature(x))", "score": 0}
{"id": "eqasc_validation_1478", "prediction": "all x.((Breast(x) & Human(y) & SexuallyMature(y)) -> Develops(x,y))", "score": 0}
{"id": "eqasc_validation_1478", "prediction": "all x y.((Breast(x) & Human(y) & SexuallyMature(x,y)) -> Develops(x,y))", "score": 0}
{"id": "eqasc_validation_1478", "prediction": "all x.((Human(x) & SexuallyMature(x)) -> Breast(x))", "score": 0}
{"id": "eqasc_validation_1478", "prediction": "all x y.((Breast(x) & Human(y)) -> SexuallyMature(x,y))", "score": 0}
{"id": "eqasc_validation_1478", "prediction": "all x.((Breast(x) & HumanBecomesSexuallyMature(x)) -> Develops(x))", "score": 0}
{"id": "eqasc_validation_1478", "prediction": "all x y.((Breast(x) & Human(y) & SexuallyMature(x)) -> Develops(x,y))", "score": 0}
{"id": "eqasc_validation_1478", "prediction": "all x.((Breast(x) & Human(y)) -> SexuallyMature(x))", "score": 0}
{"id": "eqasc_validation_1478", "prediction": "all x y z.((Breast(x) & Human(y) & SexuallyMature(z)) -> Develops(x,y,z))", "score": 0}
{"id": "eqasc_validation_1478", "prediction": "all x.((Breast(x) & HumansBecomeSexuallyMature(x)) -> Develops(x))", "score": 0}
{"id": "eqasc_validation_1478", "prediction": "all x.((Breast(x) & Human(y) & SexuallyMature(x)) -> Develops(x,y))", "score": 0}
{"id": "eqasc_validation_1478", "prediction": "all x.((Breast(x) & Human(y)) -> SexuallyMature(x,y))", "score": 0}
{"id": "eqasc_validation_1478", "prediction": "all x.((Breast(x) & Human(y) & SexuallyMature(z)) -> Develops(x,y,z))", "score": 0}
{"id": "eqasc_validation_1478", "prediction": "all x y.((Breast(x) & Human(y) & SexuallyMature(y)) -> Develop(x,y))", "score": 0}
{"id": "eqasc_validation_1479", "prediction": "all x y.((Adolescent(x) & Puberty(y)) -> HighestNutritionalDemand(x,y))", "score": 0}
{"id": "eqasc_validation_1479", "prediction": "all x.((Adolescent(x) & BeforePuberty(x)) -> HighestNutritionalDemand(x))", "score": 0}
{"id": "eqasc_validation_1479", "prediction": "all x y z.((Adolescent(x) & Puberty(y) & Infancy(z)) -> HighestNutritionalDemand(x,y,z))", "score": 0}
{"id": "eqasc_validation_1479", "prediction": "all x.((Adolescent(x) & Puberty(x)) -> HighestNutritionalDemand(x))", "score": 0}
{"id": "eqasc_validation_1479", "prediction": "all x y.((Adolescent(x) & Puberty(y)) -> ExperiencesHighestNutritionalDemand(x,y))", "score": 0}
{"id": "eqasc_validation_1479", "prediction": "all x y.((Adolescent(x) & Infancy(y)) -> HighestNutritionalDemand(x,y))", "score": 0}
{"id": "eqasc_validation_1479", "prediction": "all x y.((Adolescent(x) & Puberty(y)) -> HighestNutritionalDemandSinceInfancy(x,y))", "score": 0}
{"id": "eqasc_validation_1479", "prediction": "all x.((Adolescent(x) & Infancy(x)) -> HighestNutritionalDemand(x))", "score": 0}
{"id": "eqasc_validation_1479", "prediction": "all x.((Adolescent(x) & HighestNutritionalDemand(x)) -> BeforePuberty(x))", "score": 0}
{"id": "eqasc_validation_1479", "prediction": "all x y z.((Adolescent(x) & Puberty(y) & Infancy(z)) -> HighestNutritionalDemand(x,y))", "score": 0}
{"id": "eqasc_validation_1479", "prediction": "all x.((Adolescent(x) & PriorToPuberty(x)) -> HighestNutritionalDemand(x))", "score": 0}
{"id": "eqasc_validation_1479", "prediction": "all x.((Adolescent(x) & BeforePuberty(x)) -> HighestNutritionalDemand(x,Infancy))", "score": 0}
{"id": "eqasc_validation_1479", "prediction": "all x.((Adolescent(x) & BeforePuberty(x)) -> HighestNutritionalDemand(x,infancy))", "score": 0}
{"id": "eqasc_validation_1479", "prediction": "all x.((Adolescent(x) & BeforePupilhood(x)) -> HighestNutritionalDemand(x))", "score": 0}
{"id": "eqasc_validation_1479", "prediction": "all x.((Adolescent(x) & AfterPuberty(x)) -> HighestNutritionalDemand(x))", "score": 0}
{"id": "eqasc_validation_1479", "prediction": "all x.(Adolescent(x) -> (HighestNutritionalDemand(x) & Infancy(x)))", "score": 0}
{"id": "eqasc_validation_1480", "prediction": "all x y.((Adolescent(x) & SexualMaturity(y)) -> HighestNutritionalDemand(x,y))", "score": 0}
{"id": "eqasc_validation_1480", "prediction": "all x.((Adolescent(x) & SexualMaturity(x)) -> HighestNutritionalDemand(x))", "score": 0}
{"id": "eqasc_validation_1480", "prediction": "all x y z.((Adolescent(x) & SexualMaturity(y) & Infancy(z)) -> HighestNutritionalDemand(x,y,z))", "score": 0}
{"id": "eqasc_validation_1480", "prediction": "all x.((Adolescent(x) & SexualMaturity(x)) -> HighestNutritionalDemandFromInfancy(x))", "score": 0}
{"id": "eqasc_validation_1480", "prediction": "all x y.((Adolescent(x) & SexualMaturity(y)) -> (HighestNutritionalDemand(x,y) | HighestNutritionalDemand(x,y)))", "score": 0}
{"id": "eqasc_validation_1480", "prediction": "all x y.((Adolescent(x) & SexualMaturity(y)) -> (HighestNutritionalDemand(x,y) & Infancy(y)))", "score": 0}
{"id": "eqasc_validation_1480", "prediction": "all x y.((Adolescent(x) & SexualMaturity(y)) -> (HighestNutritionalDemand(x,y) & Infancy(x)))", "score": 0}
{"id": "eqasc_validation_1480", "prediction": "all x y.((Adolescent(x) & SexualMaturity(y)) -> HighestNutritionalDemandFromInfancy(x,y))", "score": 0}
{"id": "eqasc_validation_1480", "prediction": "all x.((Adolescent(x) & SexualMaturity(x)) -> HighestNutritionalDemand(x,infancy))", "score": 0}
{"id": "eqasc_validation_1480", "prediction": "all x y z.((Adolescent(x) & SexualMaturity(y) & Infancy(z)) -> HighestNutritionalDemand(x,y))", "score": 0}
{"id": "eqasc_validation_1480", "prediction": "all x.((Adolescent(x) & SexualMaturity(x)) -> HighestNutritionalDemandSinceInfancy(x))", "score": 0}
{"id": "eqasc_validation_1480", "prediction": "all x.((Adolescent(x) & SexualMaturity(x)) -> (HighestNutritionalDemand(x) & Infancy(x)))", "score": 0}
{"id": "eqasc_validation_1480", "prediction": "all x y.((Adolescent(x) & SexualMaturity(y)) -> (HighestNutritionalDemand(x,y) & SinceInfancy(x)))", "score": 0}
{"id": "eqasc_validation_1480", "prediction": "all x y.((Adolescent(x) & SexualMaturity(y)) -> ExperiencesHighestNutritionalDemand(x,y))", "score": 0}
{"id": "eqasc_validation_1480", "prediction": "all x.((Adolescent(x) & SexualMaturity(x)) -> HighestNutritionalDemand(x,Infancy))", "score": 0}
{"id": "eqasc_validation_1480", "prediction": "all x y.((Adolescent(x) & SexualMaturity(y)) -> (HighestNutritionalDemand(x,y) & Infancy(x,y)))", "score": 0}
{"id": "eqasc_validation_1481", "prediction": "all x.(CircleGraph(x) -> DisplaysPercents(x))", "score": 0}
{"id": "eqasc_validation_1481", "prediction": "all x y.((CircleGraph(x) & Percent(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1481", "prediction": "all x y.((CircleGraph(x) & Percent(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1481", "prediction": "all x y z.((CircleGraph(x) & Percent(y) & Percent(z)) -> Displays(x,y,z))", "score": 0}
{"id": "eqasc_validation_1481", "prediction": "all x.((CircleGraph(x) & DisplaysPercents(x)) -> CanBeUsedToDisplayPercents(x))", "score": 0}
{"id": "eqasc_validation_1481", "prediction": "all x.(CircleGraph(x) -> (DisplaysPercents(x) & DisplaysPercents(x)))", "score": 0}
{"id": "eqasc_validation_1481", "prediction": "all x y z.((CircleGraph(x) & Percent(y) & Percent(z)) -> CanDisplay(x,y,z))", "score": 0}
{"id": "eqasc_validation_1481", "prediction": "all x.(CircleGraph(x) -> CanDisplayPercents(x))", "score": 0}
{"id": "eqasc_validation_1481", "prediction": "all x y.((CircleGraph(x) & Percent(y)) -> DisplaysPercents(x,y))", "score": 0}
{"id": "eqasc_validation_1481", "prediction": "all x y.((CircleGraph(x) & Percents(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1481", "prediction": "all x y.((CircleGraph(x) & Percent(y) & Displays(x,y)) -> CanBeUsedToDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1481", "prediction": "all x y.((CircleGraph(x) & Percent(y)) -> CanDisplayPercents(x,y))", "score": 0}
{"id": "eqasc_validation_1481", "prediction": "all x y.((CircleGraph(x) & Percents(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1481", "prediction": "all x y.((CircleGraph(x) & Percent(y)) -> CanBeUsedToDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1481", "prediction": "all x.((CircleGraph(x) & DisplayPercents(x)) -> CanBeUsedToDisplayPercents(x))", "score": 0}
{"id": "eqasc_validation_1481", "prediction": "all x.(CircleGraph(x) -> CanBeUsedToDisplayPercents(x))", "score": 0}
{"id": "eqasc_validation_1482", "prediction": "all x.(Fraction(x) -> (ExpressedAsPercent(x) | ExpressedAsPercent(x)))", "score": 0}
{"id": "eqasc_validation_1482", "prediction": "all x.(Fraction(x) -> (ExpressedAsPercent(x) & -ExpressedAsPercent(x)))", "score": 0}
{"id": "eqasc_validation_1482", "prediction": "all x y.((Fraction(x) & Percent(y)) -> ExpressedAs(x,y))", "score": 0}
{"id": "eqasc_validation_1482", "prediction": "all x.(Fraction(x) -> (ExpressedAsPercent(x)))", "score": 0}
{"id": "eqasc_validation_1482", "prediction": "all x.(Fraction(x) -> (ExpressedAsPercent(x) | -ExpressedAsPercent(x)))", "score": 0}
{"id": "eqasc_validation_1482", "prediction": "all x y.((Fraction(x) & Percent(y)) -> Expresses(x,y))", "score": 0}
{"id": "eqasc_validation_1482", "prediction": "all x.(Fraction(x) -> (ExpressedAsPercent(x) | ExpressedByPercent(x)))", "score": 0}
{"id": "eqasc_validation_1482", "prediction": "all x.(Freaction(x) -> (ExpressedAsPercent(x) | ExpressedAsPercent(x)))", "score": 0}
{"id": "eqasc_validation_1482", "prediction": "all x y.((Fraction(x) & Percent(y)) -> Expression(x,y))", "score": 0}
{"id": "eqasc_validation_1482", "prediction": "all x.(Fraction(x) -> (ExpressedAsPercent(x) | (ExpressedAsPercent(x) & -ExpressedAsPercent(x)))))", "score": -1}
{"id": "eqasc_validation_1482", "prediction": "all x y.((Fraction(x) & Percent(y)) -> SometimesExpressedAs(x,y))", "score": 0}
{"id": "eqasc_validation_1482", "prediction": "all x y.((Fraction(x) & (Percent(y) | Percent(y))) -> ExpressedAs(x,y))", "score": 0}
{"id": "eqasc_validation_1482", "prediction": "all x.(Fraction(x) -> (ExpressedAsPercent(x) & -ExpressedAsPercent(x) & -ExpressedAsPercent(x)))", "score": 0}
{"id": "eqasc_validation_1482", "prediction": "all x.(Fraction(x) -> (ExpressedAsPercent(x) & Sometimes(x)))", "score": 0}
{"id": "eqasc_validation_1482", "prediction": "all x.(Freaction(x) -> (ExpressedAsPercent(x) & -ExpressedAsPercent(x)))", "score": 0}
{"id": "eqasc_validation_1483", "prediction": "all x y.((CircleGraph(x) & Fraction(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1483", "prediction": "all x y z.((CircleGraph(x) & Fraction(y) & Fraction(z)) -> CanDisplay(x,y,z))", "score": 0}
{"id": "eqasc_validation_1483", "prediction": "all x y.((CircleGraph(x) & Fraction(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1483", "prediction": "all x.(CircleGraph(x) -> DisplaysFractions(x))", "score": 0}
{"id": "eqasc_validation_1483", "prediction": "all x y.((CircleGraph(x) & Fractions(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1483", "prediction": "all x y z.((CircleGraph(x) & Fraction(y) & Fraction(z)) -> Displays(x,y,z))", "score": 0}
{"id": "eqasc_validation_1483", "prediction": "all x.(CircleGraph(x) -> CanDisplayFractions(x))", "score": 0}
{"id": "eqasc_validation_1483", "prediction": "all x y.((CircleGraph(x) & Fraction(y)) -> CanBeDisplayed(x,y))", "score": 0}
{"id": "eqasc_validation_1483", "prediction": "all x y.((CircleGraph(x) & Fraction(y)) -> CanBeUsedToDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1483", "prediction": "all x.(CircleGraph(x) -> CanBeUsedToDisplayFractions(x))", "score": 0}
{"id": "eqasc_validation_1483", "prediction": "all x.(CircleGraph(x) -> (DisplaysFractions(x) & DisplaysFractions(x)))", "score": 0}
{"id": "eqasc_validation_1483", "prediction": "all x y z.((CircleGraph(x) & Fraction(y) & Fraction(z)) -> CanBeDisplayed(x,y,z))", "score": 0}
{"id": "eqasc_validation_1483", "prediction": "all x y z.((CircleGraph(x) & Fractions(y) & Fractions(z)) -> CanDisplay(x,y,z))", "score": 0}
{"id": "eqasc_validation_1483", "prediction": "all x.((CircleGraph(x) & DisplaysFractions(x)) -> CanBeUsedToDisplayFractions(x))", "score": 0}
{"id": "eqasc_validation_1483", "prediction": "all x y z.((CircleGraph(x) & Fraction(y) & Fraction(z)) -> CanBeUsedToDisplay(x,y,z))", "score": 0}
{"id": "eqasc_validation_1483", "prediction": "all x y.((CircleGraph(x) & Fractions(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1484", "prediction": "all x y.((PieChart(x) & PieChart(y)) -> (ShowsProportions(x,y) | ShowsParts(x,y)))", "score": 0}
{"id": "eqasc_validation_1484", "prediction": "all x.(PieChart(x) -> (ShowsProportions(x) | ShowsPartsOfWhole(x)))", "score": 0}
{"id": "eqasc_validation_1484", "prediction": "all x.(PieChart(x) -> (ShowsPotentials(x) | ShowsPartsOfWhole(x)))", "score": 0}
{"id": "eqasc_validation_1484", "prediction": "all x y.((PieChart(x) & PieChart(y)) -> (ShowsPotentials(x,y) | ShowsParts(x,y)))", "score": 0}
{"id": "eqasc_validation_1484", "prediction": "all x y.((PieChart(x) & PieChart(y)) -> (ShowsProportions(y,x) | ShowsParts(y,x)))", "score": 0}
{"id": "eqasc_validation_1484", "prediction": "all x y.((PieChart(x) & PieChart(y)) -> (ShowsPercentage(x,y) | ShowsParts(x,y)))", "score": 0}
{"id": "eqasc_validation_1484", "prediction": "all x y.((PieChart(x) & PieChart(y)) -> (ShowsPotentials(y,x) | ShowsParts(y,x)))", "score": 0}
{"id": "eqasc_validation_1484", "prediction": "all x.(PieChart(x) -> (Pie Chart(x) & (ShowsProportions(x) | ShowsPartsOfWhole(x))))", "score": -1}
{"id": "eqasc_validation_1484", "prediction": "all x.(PieChart(x) -> (Pie Chart(x) & (ShowsProportions(x) | ShowsParts(x))))", "score": -1}
{"id": "eqasc_validation_1484", "prediction": "all x.(PieChart(x) -> (ShowsProportions(x) | ShowsParts(x)))", "score": 0}
{"id": "eqasc_validation_1484", "prediction": "all x.(PieChart(x) -> (Pie Chart(x) & (ShowsPercentage(x) | ShowsParts(x))))", "score": -1}
{"id": "eqasc_validation_1484", "prediction": "all x y.((PieChart(x) & PieChart(y)) -> (ShowsPercentageOrPartsOfWhole(x,y)))", "score": 0}
{"id": "eqasc_validation_1484", "prediction": "all x.(PieChart(x) -> (ShowsPotentials(x) | ShowsParts(x)))", "score": 0}
{"id": "eqasc_validation_1484", "prediction": "all x y.((PieChart(x) & PieChart(y)) -> (ShowsPotentials(y,x) | ShowsPartsOfWhole(y,x)))", "score": 0}
{"id": "eqasc_validation_1484", "prediction": "all x y.((PieChart(x) & PieChart(y)) -> (ShowsProportions(y,x) | ShowsPartsOfWhole(y,x)))", "score": 0}
{"id": "eqasc_validation_1484", "prediction": "all x y.((PieChart(x) & PieChart(y)) -> (ShowsPercentage(x,y) | ShowsPartsOf(x,y)))", "score": 0}
{"id": "eqasc_validation_1485", "prediction": "all x.(PieChart(x) -> (CircleGraph(x) & CircleGraph(x)))", "score": 0}
{"id": "eqasc_validation_1485", "prediction": "all x.(PieChart(x) -> CircleGraph(x))", "score": 0}
{"id": "eqasc_validation_1485", "prediction": "all x.(PieChart(x) -> (CircleGraph(x) & Graph(x)))", "score": 0}
{"id": "eqasc_validation_1485", "prediction": "all x.(PieChart(x) -> (CircleGraph(x) | CircleGraph(x)))", "score": 0}
{"id": "eqasc_validation_1485", "prediction": "all x.(PieChart(x) -> (CircleGraph(x) & CircularGraph(x)))", "score": 0}
{"id": "eqasc_validation_1485", "prediction": "all x.(PieChart(x) -> (CircleGraph(x) & CircleGraph(x) & CircleGraph(x)))", "score": 0}
{"id": "eqasc_validation_1485", "prediction": "all x.(PieChart(x) -> (CircleGraph(x) & Chart(x)))", "score": 0}
{"id": "eqasc_validation_1485", "prediction": "all x y.((PieChart(x) & CircleGraph(y)) -> (CircleGraph(x) & CircleGraph(y)))", "score": 0}
{"id": "eqasc_validation_1485", "prediction": "all x y.((PieChart(x) & CircleGraph(y)) -> (CircleGraph(x) & CircleGraph(x)))", "score": 0}
{"id": "eqasc_validation_1485", "prediction": "all x y.((PieChart(x) & CircleGraph(y)) -> CircleGraph(x))", "score": 0}
{"id": "eqasc_validation_1485", "prediction": "all x.(PieChart(x) -> (CircleGraph(x) & RectangleGraph(x)))", "score": 0}
{"id": "eqasc_validation_1485", "prediction": "all x.(PieChart(x) -> (CircleGraph(x) & SquareGraph(x)))", "score": 0}
{"id": "eqasc_validation_1485", "prediction": "all x.(PieChart(x) -> (CircleGraph(x) & TriangleGraph(x)))", "score": 0}
{"id": "eqasc_validation_1485", "prediction": "all x y.((PieChart(x) & CircleGraph(y)) -> CircleGraph(x,y))", "score": 0}
{"id": "eqasc_validation_1485", "prediction": "all x y z.((PieChart(x) & CircleGraph(y) & CircleGraph(z)) -> CircleGraph(x,y,z))", "score": 0}
{"id": "eqasc_validation_1486", "prediction": "all x.(Percent(x) -> DecimalFraction(x))", "score": 0}
{"id": "eqasc_validation_1486", "prediction": "all x.(Percent(x) -> DecimalFruit(x))", "score": 0}
{"id": "eqasc_validation_1486", "prediction": "all x y.((Percent(x) & DecimalFraction(y)) -> DecimalFraction(x,y))", "score": 0}
{"id": "eqasc_validation_1486", "prediction": "all x y.((Percent(x) & DecimalFraction(y)) -> DecimalFraction(x))", "score": 0}
{"id": "eqasc_validation_1486", "prediction": "all x y.((Percent(x) & DecimalFruit(y)) -> DecimalFruit(x,y))", "score": 0}
{"id": "eqasc_validation_1486", "prediction": "all x.(Percent(x) -> (DecimalFraction(x) & DecimalFraction(x)))", "score": 0}
{"id": "eqasc_validation_1486", "prediction": "all x y.((Percent(x) & DecimalFraction(y)) -> Decimal(x,y))", "score": 0}
{"id": "eqasc_validation_1486", "prediction": "all x.(Pencent(x) -> DecimalFraction(x))", "score": 0}
{"id": "eqasc_validation_1486", "prediction": "all x.((Percent(x) & DecimalFraction(x)) -> DecimalFraction(x))", "score": 0}
{"id": "eqasc_validation_1486", "prediction": "all x y.((Percent(x) & DecimalFruit(y)) -> DecimalFruit(x))", "score": 0}
{"id": "eqasc_validation_1486", "prediction": "all x y.((Percent(x) & DecimalFraction(y)) -> Decimal(x))", "score": 0}
{"id": "eqasc_validation_1486", "prediction": "all x.(Percent(x) -> (DecimalFraction(x) | DecimalFraction(x)))", "score": 0}
{"id": "eqasc_validation_1486", "prediction": "all x y.((Percent(x) & DecimalFruit(y)) -> Decimal(x,y))", "score": 0}
{"id": "eqasc_validation_1486", "prediction": "all x.(Percent(x) -> DecimalFragment(x))", "score": 0}
{"id": "eqasc_validation_1487", "prediction": "all x y.((CircleGraph(x) & DecimalFraction(y)) -> Shows(x,y))", "score": 0}
{"id": "eqasc_validation_1487", "prediction": "all x y z.((CircleGraph(x) & DecimalFraction(y) & DecimalFraction(z)) -> Shows(x,y,z))", "score": 0}
{"id": "eqasc_validation_1487", "prediction": "all x.(CircleGraph(x) -> (ShowsDecimalFractions(x) & ShowsDecimalFractions(x)))", "score": 0}
{"id": "eqasc_validation_1487", "prediction": "all x y.((CircleGraph(x) & DecimalFraction(y)) -> CanShow(x,y))", "score": 0}
{"id": "eqasc_validation_1487", "prediction": "all x.(CircleGraph(x) -> ShowsDecimalFractions(x))", "score": 0}
{"id": "eqasc_validation_1487", "prediction": "all x.(CircleGraph(x) -> (ShowDecimalFractions(x) & ShowDecimalFractions(x)))", "score": 0}
{"id": "eqasc_validation_1487", "prediction": "all x y z.((CircleGraph(x) & DecimalFraction(y) & DecimalFraction(z)) -> CanShow(x,y,z))", "score": 0}
{"id": "eqasc_validation_1487", "prediction": "all x y.((CircleGraph(x) & DecimalFraction(y)) -> CanBeUsedToShow(x,y))", "score": 0}
{"id": "eqasc_validation_1487", "prediction": "all x y z.((CircleGraph(x) & DecimalFraction(y) & DecimalFraction(z)) -> CanBeUsedToShow(x,y,z))", "score": 0}
{"id": "eqasc_validation_1487", "prediction": "all x.(CircleGraph(x) -> (ShowsDecimalFractions(x) | ShowsDecimalFractions(x)))", "score": 0}
{"id": "eqasc_validation_1487", "prediction": "all x.(CircleGraph(x) -> (ShowDecimalFractions(x) | ShowDecimalFractions(x)))", "score": 0}
{"id": "eqasc_validation_1487", "prediction": "all x y z.((CircleGraph(x) & DecimalFraction(y) & DecimalFraction(z)) -> UsedToShow(x,y,z))", "score": 0}
{"id": "eqasc_validation_1487", "prediction": "all x y z.((CircleGraph(x) & DecimalFraction(y) & DecimalFraction(z) & Shows(x,y,z)) -> CanBeUsedToShow(x,y,z))", "score": 0}
{"id": "eqasc_validation_1487", "prediction": "all x y z.((CircleGraph(x) & DecimalFraction(y) & DecimalFraction(z)) -> Shows(x,y))", "score": 0}
{"id": "eqasc_validation_1487", "prediction": "all x y.((CircleGraph(x) & DecimalFraction(y)) -> UsedToShow(x,y))", "score": 0}
{"id": "eqasc_validation_1487", "prediction": "all x.(CircleGraph(x) -> (CanShowDecimalFractions(x) & ShowDecimalFractions(x)))", "score": 0}
{"id": "eqasc_validation_1488", "prediction": "all x.(DataValue(x) -> ConvertedToPercentValue(x))", "score": 0}
{"id": "eqasc_validation_1488", "prediction": "all x.(DataValue(x) -> CanBeConvertedToPercentValue(x))", "score": 0}
{"id": "eqasc_validation_1488", "prediction": "all x y.((DataValue(x) & PercentValue(y)) -> Convertible(x,y))", "score": 0}
{"id": "eqasc_validation_1488", "prediction": "all x.(DataValue(x) -> ConvertsToPercentValue(x))", "score": 0}
{"id": "eqasc_validation_1488", "prediction": "all x y.((DataValue(x) & PercentValue(y)) -> ConvertedTo(x,y))", "score": 0}
{"id": "eqasc_validation_1488", "prediction": "all x.(DataValue(x) -> ConvertibleToPercentValue(x))", "score": 0}
{"id": "eqasc_validation_1488", "prediction": "all x.(DataValue(x) -> (ConvertsToPercentValue(x)))", "score": 0}
{"id": "eqasc_validation_1488", "prediction": "all x.(DataValue(x) -> CanConvertToPercentValue(x))", "score": 0}
{"id": "eqasc_validation_1488", "prediction": "all x y.((DataValue(x) & PercentValue(y)) -> ConvertsTo(x,y))", "score": 0}
{"id": "eqasc_validation_1488", "prediction": "all x.(DataValue(x) -> (ConvertedToPercentValue(x)))", "score": 0}
{"id": "eqasc_validation_1488", "prediction": "all x y.((DataValue(x) & PercentValue(y)) -> Convertable(x,y))", "score": 0}
{"id": "eqasc_validation_1488", "prediction": "all x.(DataValue(x) -> (ConvertedToPercentValue(x) | ConvertedToPercentValue(x)))", "score": 0}
{"id": "eqasc_validation_1488", "prediction": "all x y.((DataValue(x) & PercentValue(y)) -> CanConvert(x,y))", "score": 0}
{"id": "eqasc_validation_1488", "prediction": "all x y.((DataValue(x) & PercentValue(y)) -> CanBeConvertedTo(x,y))", "score": 0}
{"id": "eqasc_validation_1488", "prediction": "all x y.((DataValue(x) & PercentValue(y)) -> ConvertibleTo(x,y))", "score": 0}
{"id": "eqasc_validation_1488", "prediction": "all x.(DataValue(x) -> ConvertedToPercentValues(x))", "score": 0}
{"id": "eqasc_validation_1489", "prediction": "all x.(CircleGraph(x) -> DisplaysDataValues(x))", "score": 0}
{"id": "eqasc_validation_1489", "prediction": "all x.(CircleGraph(x) -> CanDisplayDataValues(x))", "score": 0}
{"id": "eqasc_validation_1489", "prediction": "all x.(CircleGraph(x) -> DisplayDataValues(x))", "score": 0}
{"id": "eqasc_validation_1489", "prediction": "all x y.((CircleGraph(x) & DataValue(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1489", "prediction": "all x.(CircleGraph(x) -> CanBeUsedToDisplayDataValues(x))", "score": 0}
{"id": "eqasc_validation_1489", "prediction": "all x y.((CircleGraph(x) & DataValue(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1489", "prediction": "all x y z.((CircleGraph(x) & DataValue(y) & DataValue(z)) -> Displays(x,y,z))", "score": 0}
{"id": "eqasc_validation_1489", "prediction": "all x y z.((CircleGraph(x) & DataValue(y) & DataValue(z)) -> CanDisplay(x,y,z))", "score": 0}
{"id": "eqasc_validation_1489", "prediction": "all x.(CircleGraph(x) -> UsedToDisplayDataValues(x))", "score": 0}
{"id": "eqasc_validation_1489", "prediction": "all x y z.((CircleGraph(x) & DataValue(y) & DataValue(z)) -> Display(x,y,z))", "score": 0}
{"id": "eqasc_validation_1489", "prediction": "all x y.((CircleGraph(x) & DataValues(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1489", "prediction": "all x y.((CircleGraph(x) & DataValue(y)) -> Display(x,y))", "score": 0}
{"id": "eqasc_validation_1489", "prediction": "all x.((CircleGraph(x) & DisplayDataValues(x)) -> CanBeUsedToDisplayDataValues(x))", "score": 0}
{"id": "eqasc_validation_1489", "prediction": "all x y.((CircleGraph(x) & DataValue(y)) -> CanBeUsedToDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1489", "prediction": "all x y.((CircleGraph(x) & DataValues(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1490", "prediction": "all x.((CircleGraph(x) | PieGraph(x)) -> (UsesCircle(x) & DividedIntoSections(x) & ShowsData(x)))", "score": 0}
{"id": "eqasc_validation_1490", "prediction": "all x.(CircleGraph(x) -> (UsesCircle(x) | UsesPieGraph(x)) & DividedIntoSections(x) & ShowsData(x)))", "score": -1}
{"id": "eqasc_validation_1490", "prediction": "all x.(CircleGraph(x) -> (UsesCircle(x) | UsesPieGraph(x)) & ShowsData(x)))", "score": -1}
{"id": "eqasc_validation_1490", "prediction": "all x.(CircleGraph(x) -> (UsesCircle(x) | UsesPieGraph(x)) & DividedIntoSections(x)))", "score": -1}
{"id": "eqasc_validation_1490", "prediction": "all x.(CircleGraph(x) -> (CircleGraph(x) | PieGraph(x)) & UsesCircle(x) & DividedIntoSections(x)))", "score": -1}
{"id": "eqasc_validation_1490", "prediction": "all x.(CircleGraph(x) -> (CircleGraph(x) | PieGraph(x)) & UsesCircle(x) & DividedIntoSections(x) & ShowsData(x)))", "score": -1}
{"id": "eqasc_validation_1490", "prediction": "all x.((CircleGraph(x) | PieGraph(x)) -> (UsesCircle(x) & DividedIntoSections(x)))", "score": 0}
{"id": "eqasc_validation_1490", "prediction": "all x.(CircleGraph(x) -> (UsesCircle(x) & DividedIntoSections(x) & ShowsData(x)))", "score": 0}
{"id": "eqasc_validation_1490", "prediction": "all x.(CircleGraph(x) -> ((CircleGraph(x) | PieGraph(x)) & UsesCircle(x) & DividedIntoSections(x)))", "score": 0}
{"id": "eqasc_validation_1490", "prediction": "all x.((CircleGraph(x) | PieGraph(x))) -> (UsesCircle(x) & DividedIntoSections(x) & ShowsData(x)))", "score": -1}
{"id": "eqasc_validation_1490", "prediction": "all x.(CircleGraph(x) -> ((CircleGraph(x) | PieGraph(x))) & UsesCircle(x) & DividedIntoSections(x)))", "score": -1}
{"id": "eqasc_validation_1490", "prediction": "all x.(CircleGraph(x) -> ((CircleGraph(x) | PieGraph(x)) & UsesCircle(x) & DividedIntoSections(x)) & ShowsData(x)))", "score": -1}
{"id": "eqasc_validation_1490", "prediction": "all x.(CircleGraph(x) -> (Circle(x) | PieGraph(x)) & UsesCircle(x) & DividedIntoSections(x) & ShowsData(x)))", "score": -1}
{"id": "eqasc_validation_1490", "prediction": "all x y.((CircleGraph(x) | PieGraph(y)) -> (UsesCircle(x,y) & DividedIntoSections(x) & ShowsData(x)))", "score": 0}
{"id": "eqasc_validation_1490", "prediction": "all x y.((CircleGraph(x) | PieGraph(y)) -> (UsesCircle(x,y) & DividedIntoSections(x)))", "score": 0}
{"id": "eqasc_validation_1490", "prediction": "all x.(CircleGraph(x) -> ((CircleGraph(x) | PieGraph(x)) & UsesCircle(x)) & DividedIntoSections(x)))", "score": -1}
{"id": "eqasc_validation_1491", "prediction": "all x.((Percentage(x) & ShowData(x)) -> CanBeUsedToShowData(x))", "score": 0}
{"id": "eqasc_validation_1491", "prediction": "all x.(Percentage(x) -> ShowData(x))", "score": 0}
{"id": "eqasc_validation_1491", "prediction": "all x y.((Percentage(x) & Data(y)) -> Shows(x,y))", "score": 0}
{"id": "eqasc_validation_1491", "prediction": "all x.(Percentage(x) -> CanBeUsedToShowData(x))", "score": 0}
{"id": "eqasc_validation_1491", "prediction": "all x y.((Percentage(x) & Data(y)) -> CanShow(x,y))", "score": 0}
{"id": "eqasc_validation_1491", "prediction": "all x y.((Percentage(x) & Data(y)) -> CanBeUsedToShow(x,y))", "score": 0}
{"id": "eqasc_validation_1491", "prediction": "all x y z.((Percentage(x) & Data(y) & Data(z) & Shows(x,y,z)) -> CanBeUsedToShow(x,y,z))", "score": 0}
{"id": "eqasc_validation_1491", "prediction": "all x y.((Percentage(x) & Data(y) & Shows(x,y)) -> CanBeUsedToShow(x,y))", "score": 0}
{"id": "eqasc_validation_1491", "prediction": "all x y z.((Percentage(x) & Data(y) & Data(z)) -> Shows(x,y,z))", "score": 0}
{"id": "eqasc_validation_1491", "prediction": "all x y z.((Percentage(x) & Data(y) & Data(z)) -> CanBeUsedToShow(x,y,z))", "score": 0}
{"id": "eqasc_validation_1491", "prediction": "all x.(Percentage(x) -> ShowsData(x))", "score": 0}
{"id": "eqasc_validation_1491", "prediction": "all x y z.((Percentage(x) & Data(y) & Data(z)) -> CanShow(x,y,z))", "score": 0}
{"id": "eqasc_validation_1491", "prediction": "all x y.((Percentage(x) & Data(y)) -> ShowData(x,y))", "score": 0}
{"id": "eqasc_validation_1491", "prediction": "all x.(Percentage(x) -> CanShowData(x))", "score": 0}
{"id": "eqasc_validation_1491", "prediction": "all x y z.((Percentage(x) & Data(y) & Data(z) & UsedToShow(x,y,z)) -> CanBeUsedToShow(x,y,z))", "score": 0}
{"id": "eqasc_validation_1491", "prediction": "all x y.((Percentage(x) & Data(y)) -> CanBeShown(x,y))", "score": 0}
{"id": "eqasc_validation_1492", "prediction": "all x.((CircleGraph(x) & PieChart(x)) -> MakesDataInList(x))", "score": 0}
{"id": "eqasc_validation_1492", "prediction": "all x.((CircleGraph(x) & PieChart(x)) -> MakesOfDataInList(x))", "score": 0}
{"id": "eqasc_validation_1492", "prediction": "all x y z.((CircleGraph(x) & PieChart(y) & List(z)) -> MakesOfData(x,y,z))", "score": 0}
{"id": "eqasc_validation_1492", "prediction": "all x y.((CircleGraph(x) & List(y)) -> Makes(x,y))", "score": 0}
{"id": "eqasc_validation_1492", "prediction": "all x y.((CircleGraph(x) & List(y)) -> (MakesCircleGraph(x,y) & MakesPieChart(x,y)))", "score": 0}
{"id": "eqasc_validation_1492", "prediction": "all x.((CircleGraph(x) & PieChart(x)) -> MakesOfData(x))", "score": 0}
{"id": "eqasc_validation_1492", "prediction": "all x y z.((CircleGraph(x) & PieChart(y) & DataInList(z)) -> Makes(x,y))", "score": 0}
{"id": "eqasc_validation_1492", "prediction": "all x.((CircleGraph(x) & PieChart(x)) -> ProducesDataInList(x))", "score": 0}
{"id": "eqasc_validation_1492", "prediction": "all x y.((CircleGraph(x) & List(y)) -> (MakesCircleGraph(x,y) & AlsoKnownAsPieChart(x,y)))", "score": 0}
{"id": "eqasc_validation_1492", "prediction": "all x y z.((CircleGraph(x) & PieChart(y) & List(z)) -> MakesOfDataInList(x,y,z))", "score": 0}
{"id": "eqasc_validation_1492", "prediction": "all x y z.((CircleGraph(x) & PieChart(y) & DataInList(z)) -> Makes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1492", "prediction": "all x y.((CircleGraph(x) & List(y)) -> (MakesCircleGraph(x) & MakesPieChart(x)))", "score": 0}
{"id": "eqasc_validation_1492", "prediction": "all x y z.((CircleGraph(x) & PipChart(y) & List(z)) -> MakesOfData(x,y,z))", "score": 0}
{"id": "eqasc_validation_1492", "prediction": "all x y z.((CircleGraph(x) & PieChart(y) & List(z)) -> Makes(x,y))", "score": 0}
{"id": "eqasc_validation_1492", "prediction": "all x y z.((CircleGraph(x) & PieChart(y) & List(z)) -> Makes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1492", "prediction": "all x y.((CircleGraph(x) & List(y)) -> (MakesCircleGraph(x,y) & AlsoKnownAsPieChart(x)))", "score": 0}
{"id": "eqasc_validation_1493", "prediction": "all x.(PieChart(x) -> DisplaysPercents(x))", "score": 0}
{"id": "eqasc_validation_1493", "prediction": "all x.(PieChart(x) -> (DisplaysPercents(x) & DisplaysPercents(x)))", "score": 0}
{"id": "eqasc_validation_1493", "prediction": "all x.((PieChart(x) & DisplaysPercents(x)) -> CanBeUsedToDisplayPercents(x))", "score": 0}
{"id": "eqasc_validation_1493", "prediction": "all x y.((PieChart(x) & Percent(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1493", "prediction": "all x.((PieChart(x) & DisplayPercents(x)) -> CanBeUsedToDisplayPercents(x))", "score": 0}
{"id": "eqasc_validation_1493", "prediction": "all x y z.((PieChart(x) & Percent(y) & Percent(z)) -> Displays(x,y,z))", "score": 0}
{"id": "eqasc_validation_1493", "prediction": "all x.(PieChart(x) -> DisplayPercents(x))", "score": 0}
{"id": "eqasc_validation_1493", "prediction": "all x y.((PieChart(x) & Percent(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1493", "prediction": "all x.(PieChart(x) -> CanDisplayPercents(x))", "score": 0}
{"id": "eqasc_validation_1493", "prediction": "all x y.((PieChart(x) & Percent(y)) -> DisplaysPercents(x,y))", "score": 0}
{"id": "eqasc_validation_1493", "prediction": "all x y.((PieChart(x) & Percents(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1493", "prediction": "all x y z.((PieChart(x) & Percent(y) & Percent(z)) -> CanDisplay(x,y,z))", "score": 0}
{"id": "eqasc_validation_1493", "prediction": "all x y.((PieChart(x) & DisplaysPercents(y)) -> CanBeUsedToDisplayPercents(x,y))", "score": 0}
{"id": "eqasc_validation_1493", "prediction": "all x.(PieChart(x) -> (DisplaysPercents(x) | DisplaysPercents(x)))", "score": 0}
{"id": "eqasc_validation_1493", "prediction": "all x y.((PieChart(x) & PieChart(y)) -> DisplaysPercents(x,y))", "score": 0}
{"id": "eqasc_validation_1493", "prediction": "all x y.((PieChart(x) & Percents(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1494", "prediction": "all x.(CircleGraph(x) -> DisplaysDecimalFractions(x))", "score": 0}
{"id": "eqasc_validation_1494", "prediction": "all x y.((CircleGraph(x) & DecimalFraction(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1494", "prediction": "all x.(CircleGraph(x) -> (DisplaysDecimalFractions(x) & DisplaysDecimalFractions(x)))", "score": 0}
{"id": "eqasc_validation_1494", "prediction": "all x y z.((CircleGraph(x) & DecimalFraction(y) & DecimalFraction(z)) -> Displays(x,y,z))", "score": 0}
{"id": "eqasc_validation_1494", "prediction": "all x y.((CircleGraph(x) & DecimalFraction(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1494", "prediction": "all x y z.((CircleGraph(x) & DecimalFraction(y) & DecimalFraction(z)) -> CanDisplay(x,y,z))", "score": 0}
{"id": "eqasc_validation_1494", "prediction": "all x.(CircleGraph(x) -> CanDisplayDecimalFractions(x))", "score": 0}
{"id": "eqasc_validation_1494", "prediction": "all x.(CircleGraph(x) -> DisplayDecimalFractions(x))", "score": 0}
{"id": "eqasc_validation_1494", "prediction": "all x.(CircleGraph(x) -> CanBeUsedToDisplayDecimalFractions(x))", "score": 0}
{"id": "eqasc_validation_1494", "prediction": "all x y.((CircleGraph(x) & DecimalFraction(y) & Displays(x,y)) -> CanBeUsedToDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1494", "prediction": "all x.(CircleGraph(x) -> (DisplaysDecimalFractions(x) | DisplaysDecimalFractions(x)))", "score": 0}
{"id": "eqasc_validation_1494", "prediction": "all x y.((CircleGraph(x) & DecimalFractions(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1494", "prediction": "all x y z.((CircleGraph(x) & DecimalFraction(y) & DecimalFraction(z) & Displays(x,y,z)) -> CanBeUsedToDisplay(x,y,z))", "score": 0}
{"id": "eqasc_validation_1494", "prediction": "all x y.((CircleGraph(x) & DecimalFraction(y)) -> CanBeUsedToDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1494", "prediction": "all x y z.((CircleGraph(x) & DecimalFraction(y) & DecimalFraction(z)) -> Display(x,y,z))", "score": 0}
{"id": "eqasc_validation_1494", "prediction": "all x y z.((CircleGraph(x) & DecimalFraction(y) & DecimalFraction(z) & Displays(x,y,z)) -> CanBeUsedToDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1495", "prediction": "all x y.((CircleGraph(x) & DecimalFraction(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1495", "prediction": "all x y.((CircleGraph(x) & DecimalFraction(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1495", "prediction": "all x.(CircleGraph(x) -> DisplaysDecimalFractions(x))", "score": 0}
{"id": "eqasc_validation_1495", "prediction": "all x y z.((CircleGraph(x) & DecimalFraction(y) & DecimalFraction(z)) -> Displays(x,y,z))", "score": 0}
{"id": "eqasc_validation_1495", "prediction": "all x.(CircleGraph(x) -> (DisplaysDecimalFractions(x) & DisplaysDecimalFractions(x)))", "score": 0}
{"id": "eqasc_validation_1495", "prediction": "all x y z.((CircleGraph(x) & DecimalFraction(y) & DecimalFraction(z)) -> CanDisplay(x,y,z))", "score": 0}
{"id": "eqasc_validation_1495", "prediction": "all x y.((CircleGraph(x) & DecimalFraction(y) & Displays(x,y)) -> CanBeUsedToDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1495", "prediction": "all x y z.((CircleGraph(x) & DecimalFraction(y) & DecimalFraction(z) & Displays(x,y,z)) -> CanBeUsedToDisplay(x,y,z))", "score": 0}
{"id": "eqasc_validation_1495", "prediction": "all x y.((CircleGraph(x) & DecimalFractions(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1495", "prediction": "all x.(CircleGraph(x) -> DisplayDecimalFractions(x))", "score": 0}
{"id": "eqasc_validation_1495", "prediction": "all x y.((CircleGraph(x) & DecimalFractions(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1495", "prediction": "all x.(CircleGraph(x) -> CanDisplayDecimalFractions(x))", "score": 0}
{"id": "eqasc_validation_1495", "prediction": "all x y.((CircleGraph(x) & DecimalFraction(y)) -> CanBeUsedToDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1495", "prediction": "all x y z.((CircleGraph(x) & DecimalFraction(y) & DecimalFraction(z)) -> Display(x,y,z))", "score": 0}
{"id": "eqasc_validation_1495", "prediction": "all x y z.((CircleGraph(x) & DecimalFractions(y) & DecimalFractions(z)) -> Displays(x,y,z))", "score": 0}
{"id": "eqasc_validation_1495", "prediction": "all x y z.((CircleGraph(x) & DecimalFraction(y) & DecimalFraction(z) & Displays(x,y,z)) -> CanBeUsedToDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1496", "prediction": "all x.((Line(x) | Bar(x) | Circle(x) | PictorialGraph(x)) -> GoodApplication(x))", "score": 0}
{"id": "eqasc_validation_1496", "prediction": "all x.((Line(x) | Bar(x) | Circle(x) | PictorialGraph(x)) -> GoodResponse(x))", "score": 0}
{"id": "eqasc_validation_1496", "prediction": "all x.((Line(x) | Bar(x) | Circle(x) | PictorialGraph(x)) -> Good(x))", "score": 0}
{"id": "eqasc_validation_1496", "prediction": "all x.((Line(x) | Bar(x) | Circle(x) | PictorialGraph(x)) -> GoodAnswer(x))", "score": 0}
{"id": "eqasc_validation_1496", "prediction": "(GoodApplication(Line) & GoodApplication(Bar) & GoodApplication(Circle) & GoodApplication(PictorialGraph))", "score": 0}
{"id": "eqasc_validation_1496", "prediction": "all x.(GoodApplication(x) -> (Line(x) | Bar(x) | Circle(x) | PictorialGraph(x)))", "score": 0}
{"id": "eqasc_validation_1496", "prediction": "(GoodResponse(Line) & GoodResponse(Bar) & GoodResponse(Circle) & GoodResponse(PictorialGraph))", "score": 0}
{"id": "eqasc_validation_1496", "prediction": "all x.((Line(x) | Bar(x) | Circle(x) | PictorialGraph(x)) -> GoodExecutive(x))", "score": 0}
{"id": "eqasc_validation_1496", "prediction": "all x.((Line(x) | Bar(x) | Circle(x) | PictorialGraph(x)) -> GoodApplications(x))", "score": 0}
{"id": "eqasc_validation_1496", "prediction": "all x.((Line(x) | Bar(x) | Circle(x) | PictorialGraph(x)) -> GoodQuote(x))", "score": 0}
{"id": "eqasc_validation_1496", "prediction": "all x.((Line(x) | Bar(x) | Circle(x) | PictorialGraph(x)) -> GoodExecution(x))", "score": 0}
{"id": "eqasc_validation_1496", "prediction": "all x.((Line(x) | Bar(x) | Circle(x) | PictorialGraph(x)) -> GoodAnswers(x))", "score": 0}
{"id": "eqasc_validation_1496", "prediction": "(GoodResponse(Line) & GoodResponse(Bar) & GoodResponse(Circle) & GoodResponse(PictorialGraphs))", "score": 0}
{"id": "eqasc_validation_1496", "prediction": "all x.(GoodAnswer(x) -> (Line(x) | Bar(x) | Circle(x) | PictorialGraph(x)))", "score": 0}
{"id": "eqasc_validation_1496", "prediction": "(GoodApplication(Line) | GoodApplication(Bar) | GoodApplication(Circle) | GoodApplication(PictorialGraph))", "score": 0}
{"id": "eqasc_validation_1497", "prediction": "all x.(Bar(x) -> (Graph(x) & Graph(x)))", "score": 0}
{"id": "eqasc_validation_1497", "prediction": "all x.(Bar(x) -> (Graph(x) & TypeOfGraph(x)))", "score": 0}
{"id": "eqasc_validation_1497", "prediction": "all x.(Bar(x) -> (Graph(x) & HasGraph(x)))", "score": 0}
{"id": "eqasc_validation_1497", "prediction": "all x.(Bar(x) -> Graph(x))", "score": 0}
{"id": "eqasc_validation_1497", "prediction": "all x.(Bar(x) -> (Graph(x) & Graph(x) & Graph(x)))", "score": 0}
{"id": "eqasc_validation_1497", "prediction": "all x.(Bar(x) -> (Graph(x) | Graph(x)))", "score": 0}
{"id": "eqasc_validation_1497", "prediction": "all x.(Bar(x) -> (Graph(x) & IsGraph(x)))", "score": 0}
{"id": "eqasc_validation_1497", "prediction": "all x.(Bar(x) -> (Graphic(x) & Graph(x)))", "score": 0}
{"id": "eqasc_validation_1497", "prediction": "all x.(Bar(x) -> (Graph(x) & FormsGraph(x)))", "score": 0}
{"id": "eqasc_validation_1497", "prediction": "all x.(Bar(x) -> (Graph(x) & Chart(x)))", "score": 0}
{"id": "eqasc_validation_1497", "prediction": "all x.(Bar(x) -> (Graph(x) & LikeGraph(x)))", "score": 0}
{"id": "eqasc_validation_1497", "prediction": "all x.(Bar(x) -> (Graph(x) & InGraph(x)))", "score": 0}
{"id": "eqasc_validation_1497", "prediction": "all x.(Bar(x) -> TypeOfGraph(x))", "score": 0}
{"id": "eqasc_validation_1498", "prediction": "all x y z.((Resident(x) & Black(x) & Asian(y) & Latino(z)) -> (SeventeenPercent(x) & FourPercent(y) & ThreePercent(z)))", "score": 0}
{"id": "eqasc_validation_1498", "prediction": "all x y z.((Resident(x) & Black(x) & Asian(y) & Latino(z)) -> (SeventeenPercent(x) & FourPercent(x) & ThreePercent(x)))", "score": 0}
{"id": "eqasc_validation_1498", "prediction": "all x y z.((Resident(x) & Black(x) & Asian(y) & Latino(z)) -> (SeventeenPercent(x,y) & FourPercent(x,z) & ThreePercent(x,z)))", "score": 0}
{"id": "eqasc_validation_1498", "prediction": "all x y z.((Resident(x) & Black(x) & Asian(y) & Latino(z)) -> (SeventeenPercent(x) & FourPercent(x,y) & ThreePercent(x,z)))", "score": 0}
{"id": "eqasc_validation_1498", "prediction": "all x y z.((Resident(x) & Black(y) & Asian(z)) -> (SeventeenPercent(x,y) & FourPercent(x,z) & ThreePercent(x,z)))", "score": 0}
{"id": "eqasc_validation_1498", "prediction": "all x y z.((Resident(x) & Black(y) & Asian(z)) -> (SeventeenPercent(x,y) & FourPercent(x,z) & ThreePercent(x,y)))", "score": 0}
{"id": "eqasc_validation_1498", "prediction": "all x y z.((Resident(x) & Black(x) & Asian(y) & Latino(z)) -> (SeventeenPercent(x) | FourPercent(y) & ThreePercent(z)))", "score": 0}
{"id": "eqasc_validation_1498", "prediction": "all x y z.((Resident(x) & Black(x) & Asian(y) & Latino(z)) -> (SeventeenPercent(x,y) & FourPercent(x,z) & ThreePercent(x,y)))", "score": 0}
{"id": "eqasc_validation_1498", "prediction": "all x y z.((Resident(x) & Black(x) & Asian(y) & Latino(z)) -> (SeventeenPercent(x) | FourPercent(x) | ThreePercent(x)))", "score": 0}
{"id": "eqasc_validation_1498", "prediction": "all x y z.((Resident(x) & Black(x) & Asian(y) & Latino(z)) -> (SeventeenPercent(x) | FourPercent(x,y) | ThreePercent(x,z)))", "score": 0}
{"id": "eqasc_validation_1498", "prediction": "all x y z.((Resident(x) & Black(x) & Asian(y) & Latino(z)) -> (SeventeenPercent(x,y) | FourPercent(x,z) | ThreePercent(x,z)))", "score": 0}
{"id": "eqasc_validation_1498", "prediction": "all x y z.((Resident(x) & Black(x) & Asian(y) & Latino(z)) -> (SeventeenPercent(x) | FourPercent(x,y) & ThreePercent(x,z)))", "score": 0}
{"id": "eqasc_validation_1498", "prediction": "all x y z.((Resident(x) & Black(y) & Asian(z)) -> (SeventeenPercent(x) & FourPercent(x) & ThreePercent(x) & Latino(x)))", "score": 0}
{"id": "eqasc_validation_1498", "prediction": "all x y z.((Resident(x) & Black(x) & Asian(y) & Latino(z)) -> (SeventeenPercent(x) & FourPercent(y) & ThreePercent(y)))", "score": 0}
{"id": "eqasc_validation_1498", "prediction": "all x y z.((Resident(x) & Black(x) & Asian(y) & Latino(z)) -> (SeventeenPercent(x) & FourPercent(x) & ThreePercent(z)))", "score": 0}
{"id": "eqasc_validation_1498", "prediction": "all x y z.((Resident(x) & Black(x) & Asian(y) & Latino(z)) -> (SeventeenPercent(x) & FourPercent(z) & ThreePercent(z)))", "score": 0}
{"id": "eqasc_validation_1499", "prediction": "all x.(CircleGraph(x) -> (DisplaysBlackResidents(x) & DisplaysAsianResidents(x) & DisplaysLatinoResidents(x)))", "score": 0}
{"id": "eqasc_validation_1499", "prediction": "all x.(CircleGraph(x) -> (DisplaysBlackResidents(x) | DisplaysAsianResidents(x) | DisplaysLatinoResidents(x)))", "score": 0}
{"id": "eqasc_validation_1499", "prediction": "all x y.((CircleGraph(x) & Black(y) & Asian(y) & Latino(y)) -> DisplaysResidents(x,y))", "score": 0}
{"id": "eqasc_validation_1499", "prediction": "all x y.((CircleGraph(x) & BlackResidents(y) & AsianResidents(y) & LatinoResidents(y)) -> DisplaysResidents(x,y))", "score": 0}
{"id": "eqasc_validation_1499", "prediction": "all x y z.((CircleGraph(x) & BlackResident(y) & AsianResident(z) & LatinoResident(z)) -> DisplaysNumberOfResidents(x,y,z))", "score": 0}
{"id": "eqasc_validation_1499", "prediction": "all x y.((CircleGraph(x) & BlackResidents(y) & AsianResidents(y) & LatinoResidents(y)) -> DisplaysNumberOfResidents(x,y))", "score": 0}
{"id": "eqasc_validation_1499", "prediction": "all x y.((CircleGraph(x) & BlackResident(y) & AsianResident(y) & LatinoResident(y)) -> DisplaysNumberOfResidents(x,y))", "score": 0}
{"id": "eqasc_validation_1499", "prediction": "all x.(CircleGraph(x) -> DisplaysBlackResidents(x)) & DisplaysAsianResidents(x) & DisplaysLatinoResidents(x))", "score": -1}
{"id": "eqasc_validation_1499", "prediction": "all x y.((CircleGraph(x) & BlackResident(y) & AsianResident(y) & LatinoResident(y)) -> DisplaysResidents(x,y))", "score": 0}
{"id": "eqasc_validation_1499", "prediction": "all x y.((CircleGraph(x) & Residents(y) & Black(y) & Asian(y) & Latino(y)) -> DisplaysNumberOfResidents(x,y))", "score": 0}
{"id": "eqasc_validation_1499", "prediction": "all x y z.((CircleGraph(x) & BlackResident(y) & AsianResident(z) & LatinoResident(y)) -> DisplaysNumberOfResidents(x,y,z))", "score": 0}
{"id": "eqasc_validation_1499", "prediction": "all x y z.((CircleGraph(x) & BlackResident(y) & AsianResident(z) & LatinoResident(z)) -> DisplaysResidents(x,y,z))", "score": 0}
{"id": "eqasc_validation_1499", "prediction": "all x.(CircleGraph(x) -> (DisplaysBlackResidents(x) & DisplaysAsianResidents(x) & DisplaysLanguageResidents(x)))", "score": 0}
{"id": "eqasc_validation_1499", "prediction": "all x y z.((CircleGraph(x) & Black(y) & Asian(z) & Latino(z)) -> DisplaysResidents(x,y,z))", "score": 0}
{"id": "eqasc_validation_1499", "prediction": "all x y.((CircleGraph(x) & BlackResidents(y) & AsianResidents(y) & LatinoResidents(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1499", "prediction": "all x y.((CircleGraph(x) & Residents(y) & Black(y) & Asian(y) & Latino(y)) -> DisplaysResidents(x,y))", "score": 0}
{"id": "eqasc_validation_1500", "prediction": "all x.(Percent(x) -> CanBeWrittenAsFractions(x))", "score": 0}
{"id": "eqasc_validation_1500", "prediction": "all x.(Percent(x) -> CanBeWrittenAsFractures(x))", "score": 0}
{"id": "eqasc_validation_1500", "prediction": "all x.(Percent(x) -> CanBeWrittenAsFraction(x))", "score": 0}
{"id": "eqasc_validation_1500", "prediction": "all x.(Percent(x) -> WrittenAsFractions(x))", "score": 0}
{"id": "eqasc_validation_1500", "prediction": "all x.(Percent(x) -> CanWriteAsFractions(x))", "score": 0}
{"id": "eqasc_validation_1500", "prediction": "all x.(Percent(x) -> CanBeWrittenAsFragments(x))", "score": 0}
{"id": "eqasc_validation_1500", "prediction": "all x.(Percent(x) -> CanBeWrittenAsFruits(x))", "score": 0}
{"id": "eqasc_validation_1500", "prediction": "all x.(Percent(x) -> WrittenAsFraction(x))", "score": 0}
{"id": "eqasc_validation_1500", "prediction": "all x.(Percent(x) -> CanWrittenAsFractions(x))", "score": 0}
{"id": "eqasc_validation_1500", "prediction": "all x.(Percent(x) -> (WrittenAsFractions(x)))", "score": 0}
{"id": "eqasc_validation_1500", "prediction": "all x.(Percent(x) -> WritenAsFractions(x))", "score": 0}
{"id": "eqasc_validation_1500", "prediction": "all x.(Percent(x) -> CanWriteAsFraction(x))", "score": 0}
{"id": "eqasc_validation_1500", "prediction": "all x.(Percent(x) -> CanWriteAsFractures(x))", "score": 0}
{"id": "eqasc_validation_1500", "prediction": "all x.(Percent(x) -> WrittenAsFractures(x))", "score": 0}
{"id": "eqasc_validation_1501", "prediction": "all x y.((CircleGraph(x) & Fraction(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1501", "prediction": "all x y.((CircleGraph(x) & Fraction(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1501", "prediction": "all x y z.((CircleGraph(x) & Fraction(y) & Fraction(z)) -> CanDisplay(x,y,z))", "score": 0}
{"id": "eqasc_validation_1501", "prediction": "all x.(CircleGraph(x) -> DisplaysFractions(x))", "score": 0}
{"id": "eqasc_validation_1501", "prediction": "all x.(CircleGraph(x) -> (DisplaysFractions(x) & DisplaysFractions(x)))", "score": 0}
{"id": "eqasc_validation_1501", "prediction": "all x y z.((CircleGraph(x) & Fraction(y) & Fraction(z)) -> Displays(x,y,z))", "score": 0}
{"id": "eqasc_validation_1501", "prediction": "all x.(CircleGraph(x) -> CanBeUsedToDisplayFractions(x))", "score": 0}
{"id": "eqasc_validation_1501", "prediction": "all x.(CircleGraph(x) -> CanDisplayFractions(x))", "score": 0}
{"id": "eqasc_validation_1501", "prediction": "all x y.((CircleGraph(x) & Fraction(y)) -> CanBeUsedToDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1501", "prediction": "all x y z.((CircleGraph(x) & Fraction(y) & Fraction(z) & Displays(x,y,z)) -> CanBeUsedToDisplay(x,y,z))", "score": 0}
{"id": "eqasc_validation_1501", "prediction": "all x.((CircleGraph(x) & DisplayFractions(x)) -> CanBeUsedToDisplayFractions(x))", "score": 0}
{"id": "eqasc_validation_1501", "prediction": "all x y z.((CircleGraph(x) & Fraction(y) & Fraction(z)) -> CanBeUsedToDisplay(x,y,z))", "score": 0}
{"id": "eqasc_validation_1501", "prediction": "all x.(CircleGraph(x) -> DisplayFractions(x))", "score": 0}
{"id": "eqasc_validation_1501", "prediction": "all x y.((CircleGraph(x) & Fractions(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1501", "prediction": "all x y.((CircleGraph(x) & Fraction(y)) -> (Displays(x,y) & Displays(x,y)))", "score": 0}
{"id": "eqasc_validation_1501", "prediction": "all x y z.((CircleGraph(x) & Fraction(y) & Fraction(z)) -> CanBeDisplayed(x,y,z))", "score": 0}
{"id": "eqasc_validation_1502", "prediction": "all x.(Percent(x) -> PartsPerSixty(x))", "score": 0}
{"id": "eqasc_validation_1502", "prediction": "all x.(Percent(x) -> PartsPerSixt(x))", "score": 0}
{"id": "eqasc_validation_1502", "prediction": "all x.(Percent(x) -> PartsPerSix(x))", "score": 0}
{"id": "eqasc_validation_1502", "prediction": "all x.(Percent(x) -> PartPerSixty(x))", "score": 0}
{"id": "eqasc_validation_1502", "prediction": "all x y.((Percent(x) & PartsPerSixt(y)) -> PartsPerSixt(x,y))", "score": 0}
{"id": "eqasc_validation_1502", "prediction": "all x.(Percent(x) -> PartsPer100(x))", "score": 0}
{"id": "eqasc_validation_1502", "prediction": "all x y.((Percent(x) & PartPerSixt(y)) -> PartPerSixt(x,y))", "score": 0}
{"id": "eqasc_validation_1502", "prediction": "all x y.((Percent(x) & PartsPerSixt(y)) -> Percent(x,y))", "score": 0}
{"id": "eqasc_validation_1502", "prediction": "all x y.((Percent(x) & PartsPerSix(y)) -> PartsPerSix(x,y))", "score": 0}
{"id": "eqasc_validation_1502", "prediction": "all x y.((Percent(x) & PartsPerSixt(y)) -> PartPerSixt(x,y))", "score": 0}
{"id": "eqasc_validation_1502", "prediction": "all x.(Percent(x) -> PartsPerSeven(x))", "score": 0}
{"id": "eqasc_validation_1502", "prediction": "all x.(Percent(x) -> PartsPerTen(x))", "score": 0}
{"id": "eqasc_validation_1502", "prediction": "all x y.((Percent(x) & PartsPerSixt(y)) -> PartsPerSixt(x))", "score": 0}
{"id": "eqasc_validation_1502", "prediction": "all x y.((Percent(x) & PartsPerSixt(y)) -> Percent(x))", "score": 0}
{"id": "eqasc_validation_1503", "prediction": "all x.(CircleGraph(x) -> (DisplaysPartsPerSixty(x) & DisplaysPartsPerSixty(x)))", "score": 0}
{"id": "eqasc_validation_1503", "prediction": "all x y.((CircleGraph(x) & PartPerSix(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1503", "prediction": "all x.(CircleGraph(x) -> DisplaysPartsPerSixty(x))", "score": 0}
{"id": "eqasc_validation_1503", "prediction": "all x y.((CircleGraph(x) & PartPerSixt(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1503", "prediction": "all x y.((CircleGraph(x) & PartsPerSixt(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1503", "prediction": "all x y.((CircleGraph(x) & PartsPer100(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1503", "prediction": "all x y.((CircleGraph(x) & PartPerSixty(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1503", "prediction": "all x y.((CircleGraph(x) & PartsPerSixty(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1503", "prediction": "all x y.((CircleGraph(x) & PartPerSix(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1503", "prediction": "all x y.((CircleGraph(x) & PartsPerSixt(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1503", "prediction": "all x y.((CircleGraph(x) & PartsPer100(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1503", "prediction": "all x.(CircleGraph(x) -> (DisplaysPartsPer100(x) & DisplaysPartsPer100(x)))", "score": 0}
{"id": "eqasc_validation_1503", "prediction": "all x y.((CircleGraph(x) & PartPerSixt(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1503", "prediction": "all x y.((CircleGraph(x) & PartsPerSixty(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1503", "prediction": "all x y.((CircleGraph(x) & PartPerSixty(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1503", "prediction": "all x.(CircleGraph(x) -> DisplaysPiecesPerSixty(x))", "score": 0}
{"id": "eqasc_validation_1504", "prediction": "all x.(DisplayScreen(x) -> ShowsAll(x))", "score": 0}
{"id": "eqasc_validation_1504", "prediction": "all x y.((DisplayScreen(x) & DisplayScreen(y)) -> ShowsAll(x,y))", "score": 0}
{"id": "eqasc_validation_1504", "prediction": "all x.(DisplayScreen(x) -> ShowsItAll(x))", "score": 0}
{"id": "eqasc_validation_1504", "prediction": "all x y.((DisplayScreen(x) & DisplayScreen(y)) -> Shows(x,y))", "score": 0}
{"id": "eqasc_validation_1504", "prediction": "all x y.((DisplayScreen(x) & Shows(x,y)) -> Shows(x,y))", "score": 0}
{"id": "eqasc_validation_1504", "prediction": "all x.(DisplayScreen(x) -> Shows(x,y))", "score": 0}
{"id": "eqasc_validation_1504", "prediction": "all x y.((DisplayScreen(x) & Display(y)) -> ShowsAll(x,y))", "score": 0}
{"id": "eqasc_validation_1504", "prediction": "All x.(DisplayScreen(x) -> ShowsAll(x))", "score": -1}
{"id": "eqasc_validation_1504", "prediction": "all x y.((DisplayScreen(x) & Display(y)) -> Shows(x,y))", "score": 0}
{"id": "eqasc_validation_1504", "prediction": "all x y.((DisplayScreen(x) & ShowsAll(x,y)) -> ShowsAll(x,y))", "score": 0}
{"id": "eqasc_validation_1504", "prediction": "all x y.((DisplayScreen(x) & DisplayScreen(y)) -> ShowsItAll(x,y))", "score": 0}
{"id": "eqasc_validation_1504", "prediction": "all x y.((DisplayScreen(x) & User(y)) -> ShowsAll(x,y))", "score": 0}
{"id": "eqasc_validation_1504", "prediction": "all x y.((DisplayScreen(x) & User(y)) -> Shows(x,y))", "score": 0}
{"id": "eqasc_validation_1504", "prediction": "all x y.((DisplayScreen(x) & ShowsAll(y)) -> ShowsAll(x,y))", "score": 0}
{"id": "eqasc_validation_1504", "prediction": "all x y.((DisplayScreen(x) & Shows(x,y)) -> Shows(y,x))", "score": 0}
{"id": "eqasc_validation_1504", "prediction": "all x y.((DisplayScreen(x) & ShowsAll(x,y)) -> Shows(x,y))", "score": 0}
{"id": "eqasc_validation_1505", "prediction": "all x.(CircleGraph(x) -> ShowsPercents(x))", "score": 0}
{"id": "eqasc_validation_1505", "prediction": "all x y.((CircleGraph(x) & Percent(y)) -> Shows(x,y))", "score": 0}
{"id": "eqasc_validation_1505", "prediction": "all x y z.((CircleGraph(x) & Percent(y) & Percent(z)) -> Shows(x,y,z))", "score": 0}
{"id": "eqasc_validation_1505", "prediction": "all x y.((CircleGraph(x) & Percent(y)) -> CanShow(x,y))", "score": 0}
{"id": "eqasc_validation_1505", "prediction": "all x y.((CircleGraph(x) & Percents(y)) -> Shows(x,y))", "score": 0}
{"id": "eqasc_validation_1505", "prediction": "all x y z.((CircleGraph(x) & Percent(y) & Percent(z)) -> CanShow(x,y,z))", "score": 0}
{"id": "eqasc_validation_1505", "prediction": "all x y.((CircleGraph(x) & Percent(y)) -> ShowsPercents(x,y))", "score": 0}
{"id": "eqasc_validation_1505", "prediction": "all x y.((CircleGraph(x) & Percent(y)) -> CanShowPercents(x,y))", "score": 0}
{"id": "eqasc_validation_1505", "prediction": "all x y.((CircleGraph(x) & Percents(y)) -> CanShow(x,y))", "score": 0}
{"id": "eqasc_validation_1505", "prediction": "all x y.((CircleGraph(x) & Percent(y)) -> CanShowPercent(x,y))", "score": 0}
{"id": "eqasc_validation_1505", "prediction": "all x y z.((CircleGraph(x) & Percents(y) & Percents(z)) -> Shows(x,y,z))", "score": 0}
{"id": "eqasc_validation_1505", "prediction": "all x.(CircleGraph(x) -> CanShowPercents(x))", "score": 0}
{"id": "eqasc_validation_1505", "prediction": "all x y.((CircleGraph(x) & Percent(y)) -> ShowsPercent(x,y))", "score": 0}
{"id": "eqasc_validation_1505", "prediction": "all x y z.((CircleGraph(x) & Percents(y) & Percents(z)) -> CanShow(x,y,z))", "score": 0}
{"id": "eqasc_validation_1505", "prediction": "all x.((CircleGraph(x) & ShowsPercents(x)) -> CanBeUsedToShowPercents(x))", "score": 0}
{"id": "eqasc_validation_1505", "prediction": "all x.(CircleGraph(x) -> (ShowsPercents(x) & ShowsPercents(x)))", "score": 0}
{"id": "eqasc_validation_1506", "prediction": "all x y.((Compass(x) & Direction(y)) -> DeterminesDirection(x,y))", "score": 3}
{"id": "eqasc_validation_1506", "prediction": "all x.(Compass(x) -> DeterminesDirection(x))", "score": 6}
{"id": "eqasc_validation_1506", "prediction": "all x y z.((Compass(x) & Direction(y) & Direction(z)) -> Determines(x,y,z))", "score": 3}
{"id": "eqasc_validation_1506", "prediction": "all x y z.((Compass(x) & Direction(y) & Direction(z)) -> DeterminesDirection(x,y,z))", "score": 3}
{"id": "eqasc_validation_1506", "prediction": "all x y.((Compass(x) & Direction(y)) -> Determines(x,y))", "score": 6}
{"id": "eqasc_validation_1506", "prediction": "all x y z.((Compass(x) & Direction(y) & Direction(z)) -> DeterminedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1506", "prediction": "all x y.((Compass(x) & Direction(y) & DeterminesDirection(x,y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1506", "prediction": "all x y.((Compass(x) & Direction(y)) -> DeterminedForDirection(x,y))", "score": 3}
{"id": "eqasc_validation_1506", "prediction": "all x y z.((Compass(x) & Direction(y) & Direction(z) & Determines(x,y,z)) -> Compass(x))", "score": 0}
{"id": "eqasc_validation_1506", "prediction": "all x y.((Compass(x) & Direction(y)) -> UsedForDetermining(x,y))", "score": 3}
{"id": "eqasc_validation_1506", "prediction": "all x y z.((Compass(x) & Direction(y) & Direction(z)) -> DeterminedForDirection(x,y,z))", "score": 3}
{"id": "eqasc_validation_1506", "prediction": "all x y z.((Compass(x) & Direction(y) & Direction(z)) -> DeterminedFor(x,y,z))", "score": 3}
{"id": "eqasc_validation_1506", "prediction": "all x y.((Compass(x) & Direction(y)) -> DeterminedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1506", "prediction": "all x y z.((Compass(x) & Direction(y) & Direction(z)) -> Determined(x,y,z))", "score": 3}
{"id": "eqasc_validation_1506", "prediction": "all x y z.((Compass(x) & Direction(y) & Direction(z)) -> Determines(x,y))", "score": 6}
{"id": "eqasc_validation_1506", "prediction": "all x y z.((Compass(x) & Direction(y) & Direction(z)) -> UsedForDetermining(x,y,z))", "score": 3}
{"id": "eqasc_validation_1507", "prediction": "all x.(CompassNeedle(x) -> LineUpWithMagneticFields(x))", "score": 0}
{"id": "eqasc_validation_1507", "prediction": "all x.(CompassNeedle(x) -> LinesUpWithMagneticFields(x))", "score": 0}
{"id": "eqasc_validation_1507", "prediction": "all x y.((CompassNeedle(x) & MagneticField(y)) -> LinesUp(x,y))", "score": 0}
{"id": "eqasc_validation_1507", "prediction": "all x y.((CompassNeedle(x) & MagneticField(y)) -> LinesUpWith(x,y))", "score": 0}
{"id": "eqasc_validation_1507", "prediction": "all x y.((CompassNeedle(x) & MagneticField(y)) -> LineUp(x,y))", "score": 0}
{"id": "eqasc_validation_1507", "prediction": "all x y z.((CompassNeedle(x) & MagneticField(y) & MagneticField(z)) -> LinesUp(x,y,z))", "score": 0}
{"id": "eqasc_validation_1507", "prediction": "all x y z.((CompassNeedle(x) & MagneticField(y) & MagneticField(z)) -> LinesUpWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1507", "prediction": "all x.(CompassNeedle(x) -> LineUpWithMagneticField(x))", "score": 0}
{"id": "eqasc_validation_1507", "prediction": "all x.(CompassNeedle(x) -> LineUpMagneticFields(x))", "score": 0}
{"id": "eqasc_validation_1507", "prediction": "all x y z.((CompassNeedle(x) & MagneticField(y) & MagneticField(z)) -> LineUp(x,y,z))", "score": 0}
{"id": "eqasc_validation_1507", "prediction": "all x y z.((CompassNeedle(x) & MagneticField(y) & MagnetField(z)) -> LinesUp(x,y,z))", "score": 0}
{"id": "eqasc_validation_1507", "prediction": "all x y.((CompassNeedle(x) & MagneticField(y)) -> LineUpWith(x,y))", "score": 0}
{"id": "eqasc_validation_1507", "prediction": "all x y z.((CompassNeedle(x) & MagneticField(y) & MagnetField(z)) -> LinesUpWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1507", "prediction": "all x.(CompassNeedle(x) -> LinesUpWithMagneticField(x))", "score": 0}
{"id": "eqasc_validation_1508", "prediction": "all x.(MagneticField(x) -> DeterminesDirection(x))", "score": 0}
{"id": "eqasc_validation_1508", "prediction": "all x.(MagneticField(x) -> DetermineDirection(x))", "score": 0}
{"id": "eqasc_validation_1508", "prediction": "all x y.((MagneticField(x) & Direction(y)) -> Determines(x,y))", "score": 0}
{"id": "eqasc_validation_1508", "prediction": "all x y.((MagneticField(x) & Direction(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1508", "prediction": "all x y.((MagneticField(x) & Direction(y)) -> UsedForDetermining(x,y))", "score": 0}
{"id": "eqasc_validation_1508", "prediction": "all x y z.((MagneticField(x) & Direction(y) & Direction(z)) -> Determines(x,y,z))", "score": 0}
{"id": "eqasc_validation_1508", "prediction": "all x y.((MagneticField(x) & Direction(y)) -> Determined(x,y))", "score": 0}
{"id": "eqasc_validation_1508", "prediction": "all x y z.((MagneticField(x) & Direction(y) & Direction(z)) -> Determined(x,y,z))", "score": 0}
{"id": "eqasc_validation_1508", "prediction": "all x y.((MagneticField(x) & Direction(y)) -> DeterminedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1508", "prediction": "all x y z.((MagneticField(x) & Direction(y) & Direction(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1508", "prediction": "all x y.((MagneticField(x) & Direction(y)) -> DeterminedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1508", "prediction": "all x.(MagneticField(x) -> DeterminedDirection(x))", "score": 0}
{"id": "eqasc_validation_1508", "prediction": "all x y z.((MagneticField(x) & Direction(y) & Direction(z)) -> Determines(x,y))", "score": 0}
{"id": "eqasc_validation_1508", "prediction": "all x y z.((MagneticField(x) & Direction(y) & Direction(z)) -> DeterminedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1508", "prediction": "all x y z.((MagneticField(x) & Direction(y) & Direction(z)) -> DeterminedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1509", "prediction": "all x y.((Magnet(x) & Direction(y)) -> DeterminesDirection(x,y))", "score": 0}
{"id": "eqasc_validation_1509", "prediction": "all x y.((Magnet(x) & Direction(y)) -> CanBeUsedToDetermine(x,y))", "score": 0}
{"id": "eqasc_validation_1509", "prediction": "all x y z.((Magnet(x) & Direction(y) & Direction(z)) -> CanBeUsedToDetermine(x,y,z))", "score": 0}
{"id": "eqasc_validation_1509", "prediction": "all x.(Magnet(x) -> DetermineDirection(x))", "score": 0}
{"id": "eqasc_validation_1509", "prediction": "all x y z.((Magnet(x) & Direction(y) & Direction(z)) -> Determines(x,y,z))", "score": 0}
{"id": "eqasc_validation_1509", "prediction": "all x y z.((Magnet(x) & Direction(y) & Direction(z)) -> DeterminesDirection(x,y,z))", "score": 0}
{"id": "eqasc_validation_1509", "prediction": "all x y z.((Magnet(x) & Direction(y) & Direction(z)) -> Determine(x,y,z))", "score": 0}
{"id": "eqasc_validation_1509", "prediction": "all x.(Magnet(x) -> CanBeUsedToDetermineDirection(x))", "score": 0}
{"id": "eqasc_validation_1509", "prediction": "all x y.((Magnet(x) & Direction(y)) -> Determine(x,y))", "score": 0}
{"id": "eqasc_validation_1509", "prediction": "all x y z.((Magnet(x) & Direction(y) & Direction(z)) -> CanDetermine(x,y,z))", "score": 0}
{"id": "eqasc_validation_1509", "prediction": "all x.(Magnet(x) -> (UsedToDetermineDirection(x) & DetermineDirection(x)))", "score": 0}
{"id": "eqasc_validation_1509", "prediction": "all x y.((Magnet(x) & Direction(y)) -> CanDetermine(x,y))", "score": 0}
{"id": "eqasc_validation_1509", "prediction": "all x y.((Magnet(x) & Direction(y)) -> Determines(x,y))", "score": 0}
{"id": "eqasc_validation_1509", "prediction": "all x y z.((Magnet(x) & Direction(y) & Direction(z)) -> CanBeUsedToDetermine(x,y))", "score": 0}
{"id": "eqasc_validation_1509", "prediction": "all x.(Magnet(x) -> (CanBeUsedToDetermineDirection(x) & DetermineDirection(x)))", "score": 0}
{"id": "eqasc_validation_1509", "prediction": "all x.(Magnet(x) -> (DetermineDirection(x) | DetermineDirection(x)))", "score": 0}
{"id": "eqasc_validation_1510", "prediction": "all x.((Distance(x) & Direction(x)) -> GPSBasedNavigation(x))", "score": 0}
{"id": "eqasc_validation_1510", "prediction": "all x.(GPSBasedNavigation(x) -> (Distance(x) & Direction(x)))", "score": 0}
{"id": "eqasc_validation_1510", "prediction": "all x.(GPS(x) -> (Distance(x) & Direction(x)))", "score": 0}
{"id": "eqasc_validation_1510", "prediction": "all x y.((GPSBasedNavigation(x) & Distance(y) & Direction(y)) -> Foundation(x,y))", "score": 0}
{"id": "eqasc_validation_1510", "prediction": "all x.(Gps(x) -> (Distance(x) & Direction(x)))", "score": 0}
{"id": "eqasc_validation_1510", "prediction": "all x.((GPSBasedNavigation(x) & Distance(x) & Direction(x)) -> Foundation(x))", "score": 0}
{"id": "eqasc_validation_1510", "prediction": "all x.((Gps(x) & Distance(x) & Direction(x)) -> GPSBasedNavigation(x))", "score": 0}
{"id": "eqasc_validation_1510", "prediction": "all x y.((GPSBasedNavigation(x) & Distance(y) & Direction(y)) -> Fundament(x,y))", "score": 0}
{"id": "eqasc_validation_1510", "prediction": "all x.( GPSBasedNavigation(x) -> (Distance(x) & Direction(x)))", "score": 0}
{"id": "eqasc_validation_1510", "prediction": "all x.((Distance(x) | Direction(x)) -> GPSBasedNavigation(x))", "score": 0}
{"id": "eqasc_validation_1510", "prediction": "all x y.((GPSBasedNavigation(x) & Distance(y) & Direction(y)) -> FundamentOf(x,y))", "score": 0}
{"id": "eqasc_validation_1510", "prediction": "all x.(GpsBasedNavigation(x) -> (Distance(x) & Direction(x)))", "score": 0}
{"id": "eqasc_validation_1510", "prediction": "all x y.((GPSBasedNavigation(x) & Distance(y) & Direction(z)) -> Foundation(x,y,z))", "score": 0}
{"id": "eqasc_validation_1510", "prediction": "all x.((GPSBasedNavigation(x) & Distance(x) & Direction(x)) -> Fundament(x))", "score": 0}
{"id": "eqasc_validation_1510", "prediction": "all x y.((GPSBasedNavigation(x) & Distance(y) & Direction(y)) -> Foundation(x))", "score": 0}
{"id": "eqasc_validation_1511", "prediction": "all x.(Compass(x) -> UsedForNavigation(x))", "score": 0}
{"id": "eqasc_validation_1511", "prediction": "all x y.((Compass(x) & Navigation(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1511", "prediction": "all x y z.((Compass(x) & Navigation(y) & Navigation(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1511", "prediction": "all x y z.((Compass(x) & Navigation(y) & Navigation(z)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1511", "prediction": "all x y z.((Compass(x) & Navigation(y) & Navigation(z)) -> UsedForNavigation(x,y,z))", "score": 0}
{"id": "eqasc_validation_1511", "prediction": "all x y.((Compass(x) & Navigation(y)) -> UsedForNavigation(x,y))", "score": 0}
{"id": "eqasc_validation_1511", "prediction": "all x y z.((Compass(x) & Navigation(y) & Navigation(z)) -> UsesFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1511", "prediction": "all x y.((Compass(x) & Navigation(y) & UsedFor(x,y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1511", "prediction": "all x y z w.((Compass(x) & Navigation(y) & Navigation(z) & Navigation(w)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1511", "prediction": "all x y z.((Compass(x) & Navigation(y) & Navigation(z)) -> UsedFor(x,z))", "score": 0}
{"id": "eqasc_validation_1511", "prediction": "all x y z w.((Compass(x) & Navigation(y) & Navigation(z) & Navigation(w)) -> UsedFor(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_1511", "prediction": "all x y z w.((Compass(x) & Navigation(y) & Navigation(z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1511", "prediction": "all x y z.((Compass(x) & Navigation(y) & Navigation(z) & UsedFor(x,y,z)) -> UsedFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1512", "prediction": "all x.(Direction(x) -> 16PointCompassScale(x))", "score": 0}
{"id": "eqasc_validation_1512", "prediction": "all x y.((Direction(x) & CompassScale(y)) -> GivenOn(x,y))", "score": 0}
{"id": "eqasc_validation_1512", "prediction": "all x.(Direction(x) -> 16PointCompassScales(x))", "score": 0}
{"id": "eqasc_validation_1512", "prediction": "all x.(Direction(x) -> GivenOnCompassScale(x,16))", "score": 0}
{"id": "eqasc_validation_1512", "prediction": "all x.(Direction(x) -> CompassScale(x,16))", "score": 0}
{"id": "eqasc_validation_1512", "prediction": "all x y.((Direction(x) & CompassScale(y) & 16Point(y)) -> GivenOn(x,y))", "score": 0}
{"id": "eqasc_validation_1512", "prediction": "all x y.((Direction(x) & CompassScale(y) & 16PointScale(x,y)) -> Given(x,y))", "score": 0}
{"id": "eqasc_validation_1512", "prediction": "all x y.((Direction(x) & CompassScale(y) & 16PointScale(x,y)) -> GivenOn(x,y))", "score": 0}
{"id": "eqasc_validation_1512", "prediction": "all x y.((Direction(x) & CompassScale(y) & 16Point(x,y)) -> GivenOn(x,y))", "score": 0}
{"id": "eqasc_validation_1512", "prediction": "all x y.((Direction(x) & CompassScale(y) & 16Point(y)) -> Given(x,y))", "score": 0}
{"id": "eqasc_validation_1512", "prediction": "all x y.((Direction(x) & CompassScale(y) & 16PointScale(x,y)) -> Gives(x,y))", "score": 0}
{"id": "eqasc_validation_1512", "prediction": "all x y.((Direction(x) & CompassScale(y) & 16Point(x,y)) -> Given(x,y))", "score": 0}
{"id": "eqasc_validation_1512", "prediction": "all x y.((Direction(x) & CompassScale(y) & 16PointScale(y)) -> Given(x,y))", "score": 0}
{"id": "eqasc_validation_1512", "prediction": "all x y.((Direction(x) & CompassScale(y) & 16PointScale(y)) -> GivenOn(x,y))", "score": 0}
{"id": "eqasc_validation_1512", "prediction": "all x y.((Direction(x) & CompassScale(y) & 16Point(x,y)) -> Gives(x,y))", "score": 0}
{"id": "eqasc_validation_1512", "prediction": "all x y.((Direction(x) & CompassScale(y) & 16Point(y)) -> Gives(x,y))", "score": 0}
{"id": "eqasc_validation_1513", "prediction": "all x.(Compass(x) -> DeterminesSixDifferentPoints(x))", "score": 0}
{"id": "eqasc_validation_1513", "prediction": "all x.(Compass(x) -> CanDetermineSixDifferentPoints(x))", "score": 0}
{"id": "eqasc_validation_1513", "prediction": "all x.(Compass(x) -> DeterminesDifferentPoints(x,16))", "score": 0}
{"id": "eqasc_validation_1513", "prediction": "all x.(Compass(x) -> DeterminesSixPoints(x))", "score": 0}
{"id": "eqasc_validation_1513", "prediction": "all x y.((Compass(x) & Point(y)) -> Determines(x,y))", "score": 0}
{"id": "eqasc_validation_1513", "prediction": "all x.(Compass(x) -> CanDetermineDifferentPoints(x,16))", "score": 0}
{"id": "eqasc_validation_1513", "prediction": "all x.(Compass(x) -> CanDetermineSixPoints(x))", "score": 0}
{"id": "eqasc_validation_1513", "prediction": "all x.(Compass(x) -> CanDeterminePoints(x,16))", "score": 0}
{"id": "eqasc_validation_1513", "prediction": "all x.(Compass(x) -> Determines16DifferentPoints(x))", "score": 0}
{"id": "eqasc_validation_1513", "prediction": "all x y.((Compass(x) & Point(y)) -> Determines(x,y,16))", "score": 0}
{"id": "eqasc_validation_1513", "prediction": "all x y.((Compass(x) & Point(y)) -> CanDetermine(x,y))", "score": 0}
{"id": "eqasc_validation_1513", "prediction": "all x.(Compass(x) -> DeterminesPoints(x,16))", "score": 0}
{"id": "eqasc_validation_1514", "prediction": "all x.(Navigation(x) -> (Compass(x) & -Compass(x)))", "score": 0}
{"id": "eqasc_validation_1514", "prediction": "all x.(Navigation(x) -> CompassOnly(x))", "score": 0}
{"id": "eqasc_validation_1514", "prediction": "all x.(Navigation(x) -> (Compass(x) | Compass(x)))", "score": 15}
{"id": "eqasc_validation_1514", "prediction": "all x.(Navigation(x) -> (Compass(x) & -Compass(x) & -Compass(x)))", "score": 0}
{"id": "eqasc_validation_1514", "prediction": "all x.(Navigate(x) -> (Compass(x) & -Compass(x)))", "score": 0}
{"id": "eqasc_validation_1514", "prediction": "all x.(Navigation(x) -> (Compass(x) & -Compass(x) & -Compass(x) & -Compass(x)))", "score": 0}
{"id": "eqasc_validation_1514", "prediction": "all x.(Navigation(x) -> (Compass(x) & -Compass(x) & -Compass(x) & -Compass(x) & -Compass(x)))", "score": 0}
{"id": "eqasc_validation_1514", "prediction": "all x.(Navigation(x) -> (Compass(x) & Only(x)))", "score": 15}
{"id": "eqasc_validation_1514", "prediction": "all x.(Navigation(x) -> (Compass(x) & -Compass(x) & -Compass(x) & -Compass(x) & -Compass(x) & -Compass(x)))", "score": 0}
{"id": "eqasc_validation_1514", "prediction": "all x.(Navigation(x) -> (Compass(x) & -Compass(x) & -Compass(x) & -Compass(x) & -Compass(x) & -Compass(x) & -Compass(x)))", "score": 0}
{"id": "eqasc_validation_1514", "prediction": "all x.(Navigation(x) -> (Compass(x) & -Compass(x) & -Compass(x) & -Compass(x) & -Compass(x) & -Compass(x) & -Compass(x) & -Compass(x)))", "score": 0}
{"id": "eqasc_validation_1514", "prediction": "all x y.((Navigation(x) & Compass(y)) -> DoneBy(x,y))", "score": 0}
{"id": "eqasc_validation_1514", "prediction": "all x.(Navigation(x) -> Compass(x))", "score": 15}
{"id": "eqasc_validation_1514", "prediction": "all x y.((Compass(x) & Navigation(y)) -> DoneBy(x,y))", "score": 0}
{"id": "eqasc_validation_1514", "prediction": "all x.(Navigation(x) -> DoesByCompass(x))", "score": 0}
{"id": "eqasc_validation_1515", "prediction": "all x.(Navigation(x) -> DeterminesDirection(x))", "score": 3}
{"id": "eqasc_validation_1515", "prediction": "all x y.((Navigation(x) & Direction(y)) -> Determines(x,y))", "score": 6}
{"id": "eqasc_validation_1515", "prediction": "all x y z.((Navigation(x) & Direction(y) & Direction(z)) -> Determines(x,y,z))", "score": 3}
{"id": "eqasc_validation_1515", "prediction": "all x y.((Navigation(x) & Direction(y)) -> DeterminesDirection(x,y))", "score": 3}
{"id": "eqasc_validation_1515", "prediction": "all x y z.((Navigation(x) & Direction(y) & Direction(z)) -> DeterminedFor(x,y,z))", "score": 3}
{"id": "eqasc_validation_1515", "prediction": "all x y.((Navigation(x) & Direction(y)) -> DeterminedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1515", "prediction": "all x.(Navigation(x) -> (DeterminesDirection(x) & DeterminesDirection(x)))", "score": 3}
{"id": "eqasc_validation_1515", "prediction": "all x y z.((Navigation(x) & Direction(y) & Direction(z)) -> Determines(x,y))", "score": 6}
{"id": "eqasc_validation_1515", "prediction": "all x y.((Navigation(x) & Direction(y)) -> DeterminedForDirection(x,y))", "score": 3}
{"id": "eqasc_validation_1515", "prediction": "all x y.((Navigation(x) & Direction(y)) -> UsedForDetermining(x,y))", "score": 3}
{"id": "eqasc_validation_1515", "prediction": "all x y z.((Navigation(x) & Direction(y) & Direction(z)) -> DeterminesDirection(x,y,z))", "score": 3}
{"id": "eqasc_validation_1515", "prediction": "all x y z.((Navigation(x) & Direction(y) & Direction(z)) -> UsedForDetermining(x,y,z))", "score": 3}
{"id": "eqasc_validation_1515", "prediction": "all x y z.((Navigation(x) & Direction(y) & Direction(z)) -> Determined(x,y,z))", "score": 3}
{"id": "eqasc_validation_1515", "prediction": "all x.(Navigation(x) -> (UsedForDeterminingDirection(x) & DeterminesDirection(x)))", "score": 0}
{"id": "eqasc_validation_1515", "prediction": "all x y z.((Navigation(x) & Direction(y) & Direction(z)) -> DeterminedForDirection(x,y,z))", "score": 3}
{"id": "eqasc_validation_1516", "prediction": "all x y.((SatelliteTechnology(x) & Weather(y)) -> Predicts(x,y))", "score": 8}
{"id": "eqasc_validation_1516", "prediction": "all x y z.((SatelliteTechnology(x) & Weather(y) & Weather(z)) -> Predicts(x,y,z))", "score": 3}
{"id": "eqasc_validation_1516", "prediction": "all x.(SatelliteTechnology(x) -> PredictsWeather(x))", "score": 0}
{"id": "eqasc_validation_1516", "prediction": "all x y.((SatelliteTechnology(x) & Weather(y)) -> UsedForPredicting(x,y))", "score": 4}
{"id": "eqasc_validation_1516", "prediction": "all x y.((SatelliteTechnology(x) & Weather(y)) -> PredictsWeather(x,y))", "score": 0}
{"id": "eqasc_validation_1516", "prediction": "all x y z.((SatelliteTechnology(x) & Weather(y) & Weather(z)) -> UsedForPredicting(x,y,z))", "score": 0}
{"id": "eqasc_validation_1516", "prediction": "all x y z.((SatelliteTechnology(x) & Weather(y) & Weather(z)) -> PredictsWeather(x,y,z))", "score": 0}
{"id": "eqasc_validation_1516", "prediction": "all x y.((SatelliteTechnologie(x) & Weather(y)) -> Predicts(x,y))", "score": 4}
{"id": "eqasc_validation_1516", "prediction": "all x.(SatelliteTechnology(x) -> UsedForPredictingWeather(x))", "score": 0}
{"id": "eqasc_validation_1516", "prediction": "all x y z.((SatelliteTechnologie(x) & Weather(y) & Weather(z)) -> Predicts(x,y,z))", "score": 0}
{"id": "eqasc_validation_1516", "prediction": "all x y z.((SatelliteTechnology(x) & Weather(y) & Weather(z)) -> Prediction(x,y,z))", "score": 0}
{"id": "eqasc_validation_1516", "prediction": "all x.(SatelliteTechnologie(x) -> PredictsWeather(x))", "score": 0}
{"id": "eqasc_validation_1516", "prediction": "all x y.((SatelliteTechnology(x) & Weather(y)) -> Prediction(x,y))", "score": 4}
{"id": "eqasc_validation_1516", "prediction": "all x y z.((SatelliteTechnology(x) & Weather(y) & Weather(z)) -> PredictsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1516", "prediction": "all x y.((SatelliteTechnology(x) & Weather(y)) -> UsedForPrediction(x,y))", "score": 0}
{"id": "eqasc_validation_1516", "prediction": "all x y z.((SatelliteTechnology(x) & Weather(y) & Weather(z)) -> Predicts(x,y))", "score": 8}
{"id": "eqasc_validation_1517", "prediction": "all x y.((Meteorologist(x) & SatelliteTechnology(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1517", "prediction": "all x.(Meteorologist(x) -> UsesSatelliteTechnology(x))", "score": 0}
{"id": "eqasc_validation_1517", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & SatelliteTechnology(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1517", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & SatelliteTechnology(z)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1517", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & Meteorologist(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1517", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & Meteorology(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1517", "prediction": "all x.(Meteorologist(x) -> (UsesSatelliteTechnology(x) & UsesSatelliteTechnology(x)))", "score": 0}
{"id": "eqasc_validation_1517", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & Meteorologist(z)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1517", "prediction": "all x y.((Meteorologist(x) & SatelliteTechnology(y) & Uses(x,y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1517", "prediction": "all x y z w.((Meteorologist(x) & SatelliteTechnology(y) & SatelliteTechnology(z) & Meteorologist(w)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1517", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & Satellite(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1517", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & SatelliteTechnology(z) & Uses(x,y)) -> Uses(x,z))", "score": 0}
{"id": "eqasc_validation_1517", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & SatelliteTechnology(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1517", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & Meteorology(z)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1517", "prediction": "all x y z w.((Meteorologist(x) & SatelliteTechnology(y) & SatelliteTechnology(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1517", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & Meteorologist(z) & Uses(x,y)) -> Uses(x,z))", "score": 0}
{"id": "eqasc_validation_1518", "prediction": "all x.(Meteorologist(x) -> UsesSatelliteTechnology(x))", "score": 0}
{"id": "eqasc_validation_1518", "prediction": "all x y.((Meteorologist(x) & SatelliteTechnology(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1518", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & SatelliteTechnology(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1518", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & Satellite(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1518", "prediction": "all x.(Meteorologist(x) -> UsesSatelliteTechnique(x))", "score": 0}
{"id": "eqasc_validation_1518", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & SatelliteTechnology(z)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1518", "prediction": "all x y.((Meteorologist(x) & Satellite(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1518", "prediction": "all x.(Meteorologist(x) -> UsesSatelliteTechnologie(x))", "score": 0}
{"id": "eqasc_validation_1518", "prediction": "all x y.((Meteorologist(x) & SatelliteTechnology(y)) -> Use(x,y))", "score": 0}
{"id": "eqasc_validation_1518", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & Satellite(z)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1518", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & SatelliteTechnology(z)) -> Use(x,y,z))", "score": 0}
{"id": "eqasc_validation_1518", "prediction": "all x y.((Meteorologist(x) & SatelliteTechnologie(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1518", "prediction": "all x.(Meteorologist(x) -> UseSatelliteTechnology(x))", "score": 0}
{"id": "eqasc_validation_1518", "prediction": "all x y.((Meteorologist(x) & SatelliteTechnology(y) & Uses(x,y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1518", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & SatelliteTechnology(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1519", "prediction": "all x.(SatelliteTechnology(x) -> UsedByMeteologists(x))", "score": 0}
{"id": "eqasc_validation_1519", "prediction": "all x y.((SatelliteTechnology(x) & Meteologist(y)) -> CanUse(x,y))", "score": 0}
{"id": "eqasc_validation_1519", "prediction": "all x y.((SatelliteTechnology(x) & Meteologist(y)) -> UsedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1519", "prediction": "all x.(SatelliteTechnology(x) -> CanBeUsedByMeteologists(x))", "score": 0}
{"id": "eqasc_validation_1519", "prediction": "all x y z.((SatelliteTechnology(x) & Meteologist(y) & Meteorologist(z)) -> CanUse(x,y,z))", "score": 0}
{"id": "eqasc_validation_1519", "prediction": "all x y.((SatelliteTechnology(x) & Meteologist(y)) -> CanBeUsed(x,y))", "score": 0}
{"id": "eqasc_validation_1519", "prediction": "all x y.((SatelliteTechnology(x) & Meteologist(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1519", "prediction": "all x y.((SatelliteTechnology(x) & Meteorologist(y)) -> CanUse(x,y))", "score": 0}
{"id": "eqasc_validation_1519", "prediction": "all x.(SatelliteTechnologie(x) -> UsedByMeteologists(x))", "score": 0}
{"id": "eqasc_validation_1519", "prediction": "all x y.((SatelliteTechnology(x) & Meteologist(y)) -> CanBeUsedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1519", "prediction": "all x y z.((SatelliteTechnology(x) & Meteologist(y) & Meteorologist(z)) -> UsedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1520", "prediction": "all x y.((Meteorologist(x) & SatelliteTechnology(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1520", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & SatelliteTechnology(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1520", "prediction": "all x.(Meteorologist(x) -> UsesSatelliteTechnology(x))", "score": 0}
{"id": "eqasc_validation_1520", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & SatelliteTechnology(z)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1520", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & Meteorologist(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1520", "prediction": "all x y.((Meteorologist(x) & SatelliteTechnology(y) & Uses(x,y)) -> MeteorologistUses(x,y))", "score": 0}
{"id": "eqasc_validation_1520", "prediction": "all x y z w.((Meteorologist(x) & SatelliteTechnology(y) & SatelliteTechnology(z) & Meteorologist(w)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1520", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & SatelliteTechnology(z) & Uses(x,y)) -> MeteorologistUses(x,z))", "score": 0}
{"id": "eqasc_validation_1520", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & SatelliteTechnology(z) & Uses(x,y,z)) -> MeteorologistUses(x,y))", "score": 0}
{"id": "eqasc_validation_1520", "prediction": "all x y z w.((Meteorologist(x) & SatelliteTechnology(y) & SatelliteTechnology(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1520", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & Meteorologist(z)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1520", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & Satellite(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1520", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & SatelliteTechnology(z) & Uses(x,y,z)) -> MeteorologistUses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1520", "prediction": "all x y z.((Meteoorologist(x) & SatelliteTechnology(y) & SatelliteTechnology(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1520", "prediction": "all x y z.((Meteorologist(x) & SatelliteTechnology(y) & SatelliteTechnology(z) & Uses(x,y)) -> Uses(x,z))", "score": 0}
{"id": "eqasc_validation_1520", "prediction": "all x.(Meteorologist(x) -> (UsesSatelliteTechnology(x) & UsesSatelliteTechnology(x)))", "score": 0}
{"id": "eqasc_validation_1521", "prediction": "all x.((Rain(x) | Shine(x)) -> Weather(x))", "score": 7}
{"id": "eqasc_validation_1521", "prediction": "(exists x.(Weather(x) & (Rain(x) | Shine(x))))", "score": 0}
{"id": "eqasc_validation_1521", "prediction": "all x.(Weather(x) -> (Rain(x) | Shine(x)))", "score": 0}
{"id": "eqasc_validation_1521", "prediction": "all x.((Weather(x) & (Rain(x) | Shine(x))) -> Weather(x))", "score": 0}
{"id": "eqasc_validation_1521", "prediction": "exists x.(Weather(x) & (Rain(x) | Shine(x)))", "score": 0}
{"id": "eqasc_validation_1521", "prediction": "all x y.((Rain(x) | Shine(x)) -> Weather(y))", "score": 8}
{"id": "eqasc_validation_1521", "prediction": "(exists x.(Rain(x) | Shine(x)) & Weather(x))", "score": 8}
{"id": "eqasc_validation_1521", "prediction": "(exists x.(Weather(x) & Weather(x)) & (Rain(x) | Shine(x)))", "score": 0}
{"id": "eqasc_validation_1521", "prediction": "(exists x.(Weather(x) & Rain(x)) | exists y.(Shine(y) & Weather(y))))", "score": -1}
{"id": "eqasc_validation_1521", "prediction": "(exists x.(Weather(x) & Rain(x)) | exists y.(Weather(y) & Weather(y))))", "score": -1}
{"id": "eqasc_validation_1521", "prediction": "all x.(Weather(x) -> ((Rain(x) | Shine(x)) | Weather(x)))", "score": 0}
{"id": "eqasc_validation_1521", "prediction": "((Rain(Rain) | Shine(Rain))) -> Weather(Rain))", "score": -1}
{"id": "eqasc_validation_1521", "prediction": "(exists x.(Weather(x) & (Rain(x) | Shine(x))) & Weather(x))", "score": 8}
{"id": "eqasc_validation_1521", "prediction": "all x.(Weather(x) -> ((Rain(x) | Shine(x)) & Weather(x)))", "score": 0}
{"id": "eqasc_validation_1521", "prediction": "((Rain(Rain) | Shine(Rain))) -> Weather(Rain)) & Weather(Shine) -> Weather(Rain))", "score": -1}
{"id": "eqasc_validation_1521", "prediction": "all x.(Weather(x) -> ((Rain(x) | Shine(x)) | (Rain(x) | Shine(x)))))", "score": -1}
{"id": "eqasc_validation_1522", "prediction": "all x y.((SatelliteTechnology(x) & (Rain(y) | Shine(y))) -> Predicts(x,y))", "score": 8}
{"id": "eqasc_validation_1522", "prediction": "all x.(SatelliteTechnology(x) -> (PredictsRainOrShine(x) & PredictsRainOrShine(x)))", "score": 0}
{"id": "eqasc_validation_1522", "prediction": "all x.(SatelliteTechnology(x) -> (PredictsRain(x) | PredictsShine(x)))", "score": 0}
{"id": "eqasc_validation_1522", "prediction": "all x y.((SatelliteTechnology(x) & (Rain(y) | Shine(y))) -> UsedForPredicting(x,y))", "score": 4}
{"id": "eqasc_validation_1522", "prediction": "all x.(SatelliteTechnologie(x) -> (PredictsRainOrShine(x) & PredictsRainOrShine(x)))", "score": 0}
{"id": "eqasc_validation_1522", "prediction": "all x y z.((SatelliteTechnology(x) & (Rain(y) | Shine(y))) -> Predicts(x,y))", "score": 8}
{"id": "eqasc_validation_1522", "prediction": "all x.(SatelliteTechnology(x) -> (PredictsRainOrShine(x) | PredictsRainOrShine(x)))", "score": 0}
{"id": "eqasc_validation_1522", "prediction": "all x y z.((SatelliteTechnology(x) & (Rain(y) | Shine(y))) -> Predicts(x,y,z))", "score": 3}
{"id": "eqasc_validation_1522", "prediction": "all x y.((SatelliteTechnologie(x) & (Rain(y) | Shine(y))) -> Predicts(x,y))", "score": 4}
{"id": "eqasc_validation_1522", "prediction": "all x.(SatelliteTechnology(x) -> PredictsRainOrShine(x))", "score": 0}
{"id": "eqasc_validation_1522", "prediction": "all x.(SatelliteTechnologie(x) -> (PredictsRain(x) | PredictsShine(x)))", "score": 0}
{"id": "eqasc_validation_1522", "prediction": "all x.(SatelliteTechnology(x) -> (PredictsRainOrShine(x) & UsedForPredictingRainOrShine(x)))", "score": 0}
{"id": "eqasc_validation_1522", "prediction": "all x y.((SatelliteTechnology(x) & (Rain(y) | Shine(y))) -> Prediction(x,y))", "score": 4}
{"id": "eqasc_validation_1522", "prediction": "all x y.((SatelliteTechnology(x) & RainOrShine(y)) -> Predicts(x,y))", "score": 0}
{"id": "eqasc_validation_1522", "prediction": "all x.((SatelliteTechnology(x) & PredictsRainOrShine(x)) -> UsedForPredictingRainOrShine(x))", "score": 0}
{"id": "eqasc_validation_1522", "prediction": "all x.(SatelliteTechnology(x) -> (PredictsRainOrShine(x) & UsesSatelliteTechnology(x)))", "score": 0}
{"id": "eqasc_validation_1523", "prediction": "all x y.((Weather(x) & Day(y)) -> LikeOutside(x,y))", "score": 0}
{"id": "eqasc_validation_1523", "prediction": "all x y.((Weather(x) & Day(y)) -> Outside(x,y))", "score": 0}
{"id": "eqasc_validation_1523", "prediction": "all x.(Weather(x) -> OutsideDay(x))", "score": 0}
{"id": "eqasc_validation_1523", "prediction": "all x.(Weather(x) -> OutsideEachDay(x))", "score": 0}
{"id": "eqasc_validation_1523", "prediction": "all x y z.((Weather(x) & Day(y) & Day(z)) -> LikeOutside(x,y,z))", "score": 0}
{"id": "eqasc_validation_1523", "prediction": "all x y z.((Weather(x) & Day(y) & Day(z)) -> Outside(x,y,z))", "score": 0}
{"id": "eqasc_validation_1523", "prediction": "all x.(Weather(x) -> OutsideEveryDay(x))", "score": 0}
{"id": "eqasc_validation_1523", "prediction": "all x.(Weather(x) -> Outside(x))", "score": 0}
{"id": "eqasc_validation_1523", "prediction": "all x.(Weather(x) -> LikeOutsideEveryDay(x))", "score": 0}
{"id": "eqasc_validation_1523", "prediction": "all x.(Weather(x) -> LikeOutside(x))", "score": 0}
{"id": "eqasc_validation_1523", "prediction": "all x y.((Weather(x) & Day(y) & Outside(x,y)) -> Like(x,y))", "score": 0}
{"id": "eqasc_validation_1523", "prediction": "all x y z.((Weather(x) & Day(y) & Day(z) & Outside(x,y,z)) -> Like(x,y,z))", "score": 0}
{"id": "eqasc_validation_1523", "prediction": "all x.(Weather(x) -> LikeOutsideEachDay(x))", "score": 0}
{"id": "eqasc_validation_1523", "prediction": "all x.(Weather(x) -> WhatIsOutside(x))", "score": 0}
{"id": "eqasc_validation_1523", "prediction": "all x y z.((Weather(x) & Day(y) & Day(z) & Outside(x,y)) -> Like(x,z))", "score": 0}
{"id": "eqasc_validation_1523", "prediction": "all x y.((Weather(x) & Day(y)) -> WhatIsOutside(x,y))", "score": 0}
{"id": "eqasc_validation_1524", "prediction": "all x y z.((SatelliteTechnology(x) & OutsideDay(y) & OutsideDay(z)) -> Predicts(x,y,z))", "score": 0}
{"id": "eqasc_validation_1524", "prediction": "all x y.((SatelliteTechnology(x) & OutsideDay(y)) -> Predicts(x,y))", "score": 0}
{"id": "eqasc_validation_1524", "prediction": "all x y z.((SatelliteTechnology(x) & OutsideDay(y) & OutsideDay(z)) -> UsedForPredicting(x,y,z))", "score": 0}
{"id": "eqasc_validation_1524", "prediction": "all x y z.((SatelliteTechnology(x) & Day(y) & Day(z)) -> PredictsOutside(x,y,z))", "score": 0}
{"id": "eqasc_validation_1524", "prediction": "all x y.((SatelliteTechnology(x) & Day(y)) -> PredictsOutside(x,y))", "score": 0}
{"id": "eqasc_validation_1524", "prediction": "all x y.((SatelliteTechnology(x) & OutsideDay(y)) -> UsedForPredicting(x,y))", "score": 0}
{"id": "eqasc_validation_1524", "prediction": "all x y.((SatelliteTechnology(x) & OutsideDay(y)) -> PredictsWhatIsOutside(x,y))", "score": 0}
{"id": "eqasc_validation_1524", "prediction": "all x y.((SatelliteTechnology(x) & OutsideDay(y)) -> PredictsOutsideDay(x,y))", "score": 0}
{"id": "eqasc_validation_1524", "prediction": "all x y z.((SatelliteTechnology(x) & OutsideDay(y) & OutsideDay(z)) -> PredictsOutsideDay(x,y,z))", "score": 0}
{"id": "eqasc_validation_1524", "prediction": "all x.(SatelliteTechnology(x) -> PredictsOutsideDay(x))", "score": 0}
{"id": "eqasc_validation_1524", "prediction": "all x y z.((SatelliteTechnology(x) & OutsideDay(y) & OutsideDay(z)) -> PredictsWhatIsOutside(x,y,z))", "score": 0}
{"id": "eqasc_validation_1524", "prediction": "all x y z.((SatelliteTechnology(x) & Outside(y) & Day(z)) -> Predicts(x,y,z))", "score": 0}
{"id": "eqasc_validation_1524", "prediction": "all x y.((SatelliteTechnology(x) & Outside(y)) -> PredictsWhatIsOutside(x,y))", "score": 0}
{"id": "eqasc_validation_1524", "prediction": "all x y z.((SatelliteTechnology(x) & Outside(y) & Day(z)) -> PredictsWhatIsOutside(x,y,z))", "score": 0}
{"id": "eqasc_validation_1524", "prediction": "all x y z.((SatelliteTechnology(x) & Outside(y) & Day(z)) -> PredictsOutside(x,y,z))", "score": 0}
{"id": "eqasc_validation_1524", "prediction": "all x.(SatelliteTechnology(x) -> PredictsOutsideEachDay(x))", "score": 0}
{"id": "eqasc_validation_1525", "prediction": "all x y z.((Technology(x) & Meteorologist(y) & Tornado(z)) -> HelpsDetect(x,y,z))", "score": 0}
{"id": "eqasc_validation_1525", "prediction": "all x y.((Technology(x) & Meteorologist(y)) -> HelpsDetectTornadoes(x,y))", "score": 0}
{"id": "eqasc_validation_1525", "prediction": "all x y.((Technology(x) & Meteorologist(y)) -> HelpedDetectTornadoes(x,y))", "score": 0}
{"id": "eqasc_validation_1525", "prediction": "all x y z.((Technology(x) & Meteorologist(y) & Tornado(z)) -> HelpedDetect(x,y,z))", "score": 0}
{"id": "eqasc_validation_1525", "prediction": "all x y z.((Technology(x) & Meteorologist(y) & Tornado(z)) -> HasHelpedDetect(x,y,z))", "score": 0}
{"id": "eqasc_validation_1525", "prediction": "all x y.((Meteorologist(x) & Tornado(y)) -> HelpsDetect(x,y))", "score": 0}
{"id": "eqasc_validation_1525", "prediction": "all x y.((Technology(x) & Meteorologist(y)) -> HasDetectedTornadoes(x,y))", "score": 0}
{"id": "eqasc_validation_1525", "prediction": "all x y.((Technology(x) & Meteorologist(y)) -> HelpsDetectTornadoes(y,x))", "score": 0}
{"id": "eqasc_validation_1525", "prediction": "all x y z.((Meteorologist(x) & Tornado(y) & Technology(z)) -> HelpsDetect(x,y,z))", "score": 0}
{"id": "eqasc_validation_1525", "prediction": "all x.((Technology(x) & Meteorologist(y)) -> HelpsDetectTornadoes(x,y))", "score": 0}
{"id": "eqasc_validation_1525", "prediction": "all x.((Technology(x) & Meteorologist(x)) -> DetectsTornadoes(x))", "score": 0}
{"id": "eqasc_validation_1525", "prediction": "all x y.((Meteorologist(x) & Tornado(y)) -> HelpedDetect(x,y))", "score": 0}
{"id": "eqasc_validation_1525", "prediction": "all x.((Technology(x) & Meteorologist(x)) -> HelpsDetectTornadoes(x))", "score": 0}
{"id": "eqasc_validation_1525", "prediction": "all x y.((Technology(x) & Meteorologist(y)) -> DetectsTornadoes(y))", "score": 0}
{"id": "eqasc_validation_1526", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Tornado(z)) -> UsesToDetect(x,y,z))", "score": 0}
{"id": "eqasc_validation_1526", "prediction": "all x y.((Meteorologist(x) & Satellite(y)) -> UsesToDetectTornadoes(x,y))", "score": 0}
{"id": "eqasc_validation_1526", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Tornado(z)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1526", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Tornado(z)) -> UsesForDetection(x,y,z))", "score": 0}
{"id": "eqasc_validation_1526", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Tornado(z)) -> (Uses(x,y) & Detects(x,z)))", "score": 0}
{"id": "eqasc_validation_1526", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Tornado(z) & Uses(x,y)) -> Detects(x,z))", "score": 0}
{"id": "eqasc_validation_1526", "prediction": "all x y z w.((Meteorologist(x) & Satellite(y) & Tornado(z) & Satellite(w)) -> UsesToDetect(x,y,z,w))", "score": 0}
{"id": "eqasc_validation_1526", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Tornado(z)) -> UsedToDetect(x,y,z))", "score": 0}
{"id": "eqasc_validation_1526", "prediction": "all x y z w.((Meteorologist(x) & Satellite(y) & Tornado(z) & Satellite(w)) -> UsesToDetect(x,y,z))", "score": 0}
{"id": "eqasc_validation_1526", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Tornado(z) & UsesToDetect(x,y,z)) -> UsesToDetect(x,y,z))", "score": 0}
{"id": "eqasc_validation_1526", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Tornado(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1526", "prediction": "all x y.((Meteorologist(x) & Satellite(y) & UsesToDetectTornadoes(x,y)) -> UsesToDetectTornadoes(x,y))", "score": 0}
{"id": "eqasc_validation_1526", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Tornado(z)) -> (UsesToDetect(x,y,z) & Uses(x,y)))", "score": 0}
{"id": "eqasc_validation_1527", "prediction": "all x y.((Barometer(x) & AirPressure(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1527", "prediction": "all x y z.((Barometer(x) & AirPressure(y) & AirPressure(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1527", "prediction": "all x.(Barometer(x) -> MeasuresAirPressure(x))", "score": 0}
{"id": "eqasc_validation_1527", "prediction": "all x y.((Barometer(x) & AirPressure(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1527", "prediction": "all x y z.((Barometer(x) & AirPressure(y) & AirPressure(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1527", "prediction": "all x y z.((Barometer(x) & AirPressure(y) & AirPressure(z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1527", "prediction": "all x y z.((Barometer(x) & AirPressure(y) & Pressure(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1527", "prediction": "all x y.((Barometer(x) & AirPressure(y) & Measures(x,y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1527", "prediction": "all x y z.((Barometer(x) & AirPressure(y) & AirPressure(z)) -> Measure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1527", "prediction": "all x y z.((Barometer(x) & AirPressure(y) & AirPressure(z) & Measures(x,y,z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1527", "prediction": "all x y.((Barometer(x) & AirPressure(y)) -> MeasuresAirPressure(x,y))", "score": 0}
{"id": "eqasc_validation_1527", "prediction": "all x y z.((Barometer(x) & AirPressure(y) & AirPressure(z) & Measures(x,y,z)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1527", "prediction": "all x y z.((Barometer(x) & AirPressure(y) & AirPressure(z) & Measures(x,y,z)) -> Barometer(x))", "score": 0}
{"id": "eqasc_validation_1527", "prediction": "all x y z.((Barometer(x) & AirPressure(y) & AirPressure(z)) -> Measured(x,y,z))", "score": 0}
{"id": "eqasc_validation_1527", "prediction": "all x.(Barometer(x) -> UsedToMeasureAirPressure(x))", "score": 0}
{"id": "eqasc_validation_1527", "prediction": "all x y z.((Barometer(x) & AirPressure(y) & AirPressure(z) & Measures(x,y)) -> UsedToMeasure(x,z))", "score": 0}
{"id": "eqasc_validation_1528", "prediction": "all x.(AirPressurePressure(x) -> ActsOnUnitArea(x))", "score": 0}
{"id": "eqasc_validation_1528", "prediction": "all x y.((AirPressure(x) & UnitArea(y)) -> ForceAgingOn(x,y))", "score": 0}
{"id": "eqasc_validation_1528", "prediction": "all x y.((AirPressurePressure(x) & UnitArea(y)) -> ActsOn(x,y))", "score": 0}
{"id": "eqasc_validation_1528", "prediction": "all x.(AirPressurePressure(x) -> AgingOnUnitArea(x))", "score": 0}
{"id": "eqasc_validation_1528", "prediction": "all x y z.((AirPressure(x) & UnitArea(y) & Force(z)) -> ActsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1528", "prediction": "all x y.((AirPressure(x) & UnitArea(y)) -> ActsOn(x,y))", "score": 0}
{"id": "eqasc_validation_1528", "prediction": "all x y z.((AirPressurePressure(x) & UnitArea(y) & Force(z)) -> ActsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1528", "prediction": "all x y.((AirPressurePressure(x) & UnitArea(y)) -> ForceAgingOn(x,y))", "score": 0}
{"id": "eqasc_validation_1528", "prediction": "all x.(AirPressurePressure(x) -> ForceAgingOnUnitArea(x))", "score": 0}
{"id": "eqasc_validation_1528", "prediction": "all x y.((AirPressurePressure(x) & UnitArea(y)) -> AgingForce(x,y))", "score": 0}
{"id": "eqasc_validation_1528", "prediction": "all x.(AirPressurePressure(x) -> exists y.(UnitArea(y) & ActsOn(x,y))))", "score": -1}
{"id": "eqasc_validation_1528", "prediction": "all x y.((AirPressure(x) & UnitArea(y)) -> ForceActioningOn(x,y))", "score": 0}
{"id": "eqasc_validation_1528", "prediction": "all x.(AirPressurePressure(x) -> AffectsUnitArea(x))", "score": 0}
{"id": "eqasc_validation_1528", "prediction": "all x y.((AirPressure(x) & UnitArea(y)) -> AgingForce(x,y))", "score": 0}
{"id": "eqasc_validation_1528", "prediction": "all x y z.((AirPressure(x) & UnitArea(y) & Force(z)) -> AgingOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1529", "prediction": "all x y.((Barometer(x) & UnitArea(y)) -> MeasuresForce(x,y))", "score": 0}
{"id": "eqasc_validation_1529", "prediction": "all x y.((Barometer(x) & UnitArea(y)) -> MeasuresForceAction(x,y))", "score": 0}
{"id": "eqasc_validation_1529", "prediction": "all x y z.((Barometer(x) & UnitArea(y) & Force(z)) -> MeasuresOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1529", "prediction": "all x y z.((Barometer(x) & UnitArea(y) & Force(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1529", "prediction": "all x.(Barometer(x) -> MeasuresForceActionOnUnitArea(x))", "score": 0}
{"id": "eqasc_validation_1529", "prediction": "all x y z.((Barometer(x) & UnitArea(y) & UnitArea(z)) -> MeasuresForce(x,y,z))", "score": 0}
{"id": "eqasc_validation_1529", "prediction": "all x y.((Barometer(x) & UnitArea(y)) -> MeasuresForceActionOn(x,y))", "score": 0}
{"id": "eqasc_validation_1529", "prediction": "all x y z.((Barometer(x) & UnitArea(y) & Force(z)) -> Measures(x,z))", "score": 0}
{"id": "eqasc_validation_1529", "prediction": "all x y z.((Barometer(x) & UnitArea(y) & UnitArea(z)) -> MeasuresForceAction(x,y,z))", "score": 0}
{"id": "eqasc_validation_1529", "prediction": "all x.(Barometer(x) -> MeasuresForceOnUnitArea(x))", "score": 0}
{"id": "eqasc_validation_1529", "prediction": "all x y z.((Barometer(x) & UnitArea(y) & Force(z)) -> MeasuresForce(x,y,z))", "score": 0}
{"id": "eqasc_validation_1529", "prediction": "all x y.((Barometer(x) & UnitArea(y)) -> MeasuresForceActingOn(x,y))", "score": 0}
{"id": "eqasc_validation_1529", "prediction": "all x y.((Barometer(x) & UnitArea(y)) -> MeasuresForceOn(x,y))", "score": 0}
{"id": "eqasc_validation_1529", "prediction": "all x y.((Barometer(x) & UnitArea(y) & MeasuresForce(x,y)) -> MeasuresForce(x,y))", "score": 0}
{"id": "eqasc_validation_1529", "prediction": "all x y z.((Barometer(x) & UnitArea(y) & ForceAction(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1529", "prediction": "all x.(Barometer(x) -> MeasuresForce(x))", "score": 0}
{"id": "eqasc_validation_1530", "prediction": "all x.(AirPressure(x) -> MeasuresWeightOfAir(x))", "score": 0}
{"id": "eqasc_validation_1530", "prediction": "all x y.((AirPressure(x) & Air(y)) -> MeasuresWeight(x,y))", "score": 0}
{"id": "eqasc_validation_1530", "prediction": "all x.(AirPressure(x) -> MeasuresAirWeight(x))", "score": 0}
{"id": "eqasc_validation_1530", "prediction": "all x y z.((AirPressure(x) & Air(y) & Weight(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1530", "prediction": "all x.(AirPressure(x) -> MeasuresWeight(x))", "score": 0}
{"id": "eqasc_validation_1530", "prediction": "all x y z.((AirPressure(x) & Air(y) & Air(z)) -> MeasuresWeight(x,y,z))", "score": 0}
{"id": "eqasc_validation_1530", "prediction": "all x.(AirPressure(x) -> MeasuresWorthOfAir(x))", "score": 0}
{"id": "eqasc_validation_1530", "prediction": "all x.(AirPressure(x) -> MeasuresAirWight(x))", "score": 0}
{"id": "eqasc_validation_1530", "prediction": "all x y.((AirPressure(x) & Air(y)) -> WeightMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1530", "prediction": "all x.(AirPressure(x) -> WeightOfAir(x))", "score": 0}
{"id": "eqasc_validation_1530", "prediction": "all x y z.((AirPressure(x) & Air(y) & Weight(z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1530", "prediction": "all x y.((AirPressure(x) & Air(y)) -> MeasuresWight(x,y))", "score": 0}
{"id": "eqasc_validation_1531", "prediction": "all x.(Barometer(x) -> MeasuresWeightOfAir(x))", "score": 0}
{"id": "eqasc_validation_1531", "prediction": "all x y.((Barometer(x) & Air(y)) -> MeasuresWeight(x,y))", "score": 0}
{"id": "eqasc_validation_1531", "prediction": "all x.(Barometer(x) -> MeasuresAirWeight(x))", "score": 0}
{"id": "eqasc_validation_1531", "prediction": "all x y z.((Barometer(x) & Air(y) & Weight(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1531", "prediction": "all x y z.((Barometer(x) & Air(y) & Air(z)) -> MeasuresWeight(x,y,z))", "score": 0}
{"id": "eqasc_validation_1531", "prediction": "all x.(Barometer(x) -> MeasuresAirWight(x))", "score": 0}
{"id": "eqasc_validation_1531", "prediction": "all x y z.((Barometer(x) & Air(y) & Weight(z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1531", "prediction": "all x.(Barometer(x) -> MeasuresWeight(x))", "score": 0}
{"id": "eqasc_validation_1531", "prediction": "all x.(Barometer(x) -> MeasuresWheightOfAir(x))", "score": 0}
{"id": "eqasc_validation_1531", "prediction": "all x.(Barometer(x) -> MeasuresWathOfAir(x))", "score": 0}
{"id": "eqasc_validation_1531", "prediction": "all x.(Barometer(x) -> MeasuresWorthOfAir(x))", "score": 0}
{"id": "eqasc_validation_1531", "prediction": "all x.(Barometer(x) -> MeasuresAirWaight(x))", "score": 0}
{"id": "eqasc_validation_1531", "prediction": "all x.(Barometer(x) -> MeasuresWordOfAir(x))", "score": 0}
{"id": "eqasc_validation_1532", "prediction": "all x y.((Barometer(x) & AtmosphericPressure(y)) -> MeasuredBy(x,y))", "score": 0}
{"id": "eqasc_validation_1532", "prediction": "all x.(AtmosphericPressure(x) -> MeasuredByBarometer(x))", "score": 0}
{"id": "eqasc_validation_1532", "prediction": "all x y.((AtmosphericPressure(x) & Barometer(y)) -> MeasuredBy(x,y))", "score": 0}
{"id": "eqasc_validation_1532", "prediction": "all x y z.((AtmosphericPressure(x) & Barometer(y) & Barometer(z)) -> MeasuredBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1532", "prediction": "all x.(AtmosphericPressure(x) -> MeasurableByBarometer(x))", "score": 0}
{"id": "eqasc_validation_1532", "prediction": "all x y.((Barometer(x) & AtmosphericPressure(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1532", "prediction": "all x y z.((AtmosphericPressure(x) & Barometer(y) & Barometer(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1532", "prediction": "all x y z.((Barometer(x) & AtmosphericPressure(y) & Barometer(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1532", "prediction": "all x y z.((Barometer(x) & AtmosphericPressure(y) & Barometer(z)) -> MeasuredBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1532", "prediction": "all x y.((Barometer(x) & AtmosphericPressure(y)) -> MeasuresBy(x,y))", "score": 0}
{"id": "eqasc_validation_1532", "prediction": "all x.(AtmosphericPressure(x) -> MeasuringByBarometer(x))", "score": 0}
{"id": "eqasc_validation_1532", "prediction": "all x y.((Barometer(x) & Barometer(y)) -> MeasuresAtmosphericPressure(x,y))", "score": 0}
{"id": "eqasc_validation_1533", "prediction": "all x.(Barometer(x) -> GaugesAtmosphericPressure(x))", "score": 0}
{"id": "eqasc_validation_1533", "prediction": "all x y.((Barometer(x) & AtmosphericPressure(y)) -> Gauges(x,y))", "score": 0}
{"id": "eqasc_validation_1533", "prediction": "all x y z.((Barometer(x) & AtmosphericPressure(y) & AtmosphericPressure(z)) -> Gauges(x,y,z))", "score": 0}
{"id": "eqasc_validation_1533", "prediction": "all x y.((Barometer(x) & AtmosphericPressure(y)) -> GaugesAtmosphericPressure(x,y))", "score": 0}
{"id": "eqasc_validation_1533", "prediction": "all x y z.((Barometer(x) & AtmosphericPressure(y) & AtmosphericPressure(z)) -> Gauges(x,y))", "score": 0}
{"id": "eqasc_validation_1533", "prediction": "all x.(Barometer(x) -> (GasesAtmosphericPressure(x) & GaugesAtmosphericPressure(x)))", "score": 0}
{"id": "eqasc_validation_1533", "prediction": "all x.(Barometer(x) -> MeasuresAtmosphericPressure(x))", "score": 0}
{"id": "eqasc_validation_1533", "prediction": "all x y z.((Barometer(x) & AtmosphericPressure(y) & AmbientPressure(z)) -> Gauges(x,y,z))", "score": 0}
{"id": "eqasc_validation_1533", "prediction": "all x.(Barometer(x) -> (GaugesAtmosphericPressure(x) & MeasuresAtmosphericPressure(x)))", "score": 0}
{"id": "eqasc_validation_1533", "prediction": "all x y z.((Barometer(x) & AtmosphericPressure(y) & AtmosphericPressure(z)) -> GaugesAtmosphericPressure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1533", "prediction": "all x y z.((Barometer(x) & AtmosphericPressure(y) & AtmosphericPressure(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1533", "prediction": "all x y.((Barometer(x) & AtmosphericPressure(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1533", "prediction": "all x y z.((Barometer(x) & AtmosphericPressure(y) & Temperature(z)) -> Gauges(x,y,z))", "score": 0}
{"id": "eqasc_validation_1533", "prediction": "all x.(Barometer(x) -> (GaugesAtmosphericPressure(x) & GaugesAtmosphericPressure(x)))", "score": 0}
{"id": "eqasc_validation_1533", "prediction": "all x y.((Barometer(x) & AtmosphericPressure(y)) -> MeasuresAtmosphericPressure(x,y))", "score": 0}
{"id": "eqasc_validation_1533", "prediction": "all x y z.((Barometer(x) & AtmosphericPressure(y) & Pressure(z)) -> Gauges(x,y,z))", "score": 0}
{"id": "eqasc_validation_1534", "prediction": "all x y.((Air(x) & Barometer(y)) -> DeterminesWeight(x,y))", "score": 0}
{"id": "eqasc_validation_1534", "prediction": "all x.((Air(x) & Barometer(x)) -> DeterminesWeight(x))", "score": 0}
{"id": "eqasc_validation_1534", "prediction": "all x y.((Air(x) & Barometer(y)) -> DeterminesWeightWith(x,y))", "score": 0}
{"id": "eqasc_validation_1534", "prediction": "all x y.((Air(x) & Barometer(y)) -> DeterminesWeight(y,x))", "score": 0}
{"id": "eqasc_validation_1534", "prediction": "all x y.((Air(x) & Barometer(y)) -> WeightDeterminedWith(x,y))", "score": 0}
{"id": "eqasc_validation_1534", "prediction": "all x y.((Barometer(x) & Air(y)) -> DeterminesWeight(x,y))", "score": 0}
{"id": "eqasc_validation_1534", "prediction": "all x y z.((Air(x) & Barometer(y) & Weight(z)) -> DeterminedWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1534", "prediction": "all x y.((Air(x) & Barometer(y)) -> WeightDetermination(x,y))", "score": 0}
{"id": "eqasc_validation_1534", "prediction": "all x y.((Air(x) & Barometer(y)) -> WeightDetermined(x,y))", "score": 0}
{"id": "eqasc_validation_1534", "prediction": "all x y.((Air(x) & Barometer(y)) -> DeterminedWeight(x,y))", "score": 0}
{"id": "eqasc_validation_1534", "prediction": "all x y z.((Air(x) & Barometer(y) & Air(z)) -> DeterminesWeight(y,z))", "score": 0}
{"id": "eqasc_validation_1534", "prediction": "all x y.((Air(x) & Barometer(y)) -> CanDetermineWeight(x,y))", "score": 0}
{"id": "eqasc_validation_1534", "prediction": "all x y z.((Air(x) & Barometer(y) & Air(z)) -> DeterminesWeightWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1534", "prediction": "all x y z.((Air(x) & Barometer(y) & Weight(z)) -> CanBeDeterminedWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1534", "prediction": "all x y z.((Air(x) & Barometer(y) & Weight(z)) -> DeterminedWith(y,z))", "score": 0}
{"id": "eqasc_validation_1534", "prediction": "all x y z.((Air(x) & Barometer(y) & Air(z)) -> DeterminesWeight(x,y,z))", "score": 0}
{"id": "eqasc_validation_1535", "prediction": "all x.(Barometer(x) -> MeasuresAirPressure(x))", "score": 0}
{"id": "eqasc_validation_1535", "prediction": "all x y.((Barometer(x) & Air(y)) -> MeasuresWeight(x,y))", "score": 0}
{"id": "eqasc_validation_1535", "prediction": "All x.(Barometer(x) -> MeasuresAirPressure(x))", "score": -1}
{"id": "eqasc_validation_1535", "prediction": "All x y.((Barometer(x) & Air(y)) -> MeasuresWeight(x,y))", "score": -1}
{"id": "eqasc_validation_1535", "prediction": "all x y.((Barometer(x) & AirPressure(y)) -> MeasuresWeight(x,y))", "score": 0}
{"id": "eqasc_validation_1535", "prediction": "all x y.((Barometer(x) & Air(y)) -> MeasuresWeightOfAir(x,y))", "score": 0}
{"id": "eqasc_validation_1535", "prediction": "all x.(Barometer(x) -> MeasuresAirWeight(x))", "score": 0}
{"id": "eqasc_validation_1535", "prediction": "All x y.((Barometer(x) & Air(y)) -> MeasuresWeightOfAir(x,y))", "score": -1}
{"id": "eqasc_validation_1535", "prediction": "all x.(Barometer(x) -> MeasuresWeightOfAir(x))", "score": 0}
{"id": "eqasc_validation_1535", "prediction": "all x.(Barometer(x) -> MeasuresAirPosition(x))", "score": 0}
{"id": "eqasc_validation_1535", "prediction": "AirPressure(Barometer) -MeasuresWeightOfAir(Barometer)", "score": -1}
{"id": "eqasc_validation_1535", "prediction": "all x y.((Barometer(x) & AirPressure(y)) -> MeasuresWeightOfAir(x,y))", "score": 0}
{"id": "eqasc_validation_1535", "prediction": "All x.(Barometer(x) -> MeasuresAirWeight(x))", "score": -1}
{"id": "eqasc_validation_1535", "prediction": "All x.(Barometer(x) -> MeasuresAirPosition(x))", "score": -1}
{"id": "eqasc_validation_1536", "prediction": "all x y.((Barometer(x) & Air(y)) -> MeasuresWeight(x,y))", "score": 0}
{"id": "eqasc_validation_1536", "prediction": "all x y z.((Barometer(x) & Air(y) & Air(z)) -> MeasuresWeight(x,y,z))", "score": 0}
{"id": "eqasc_validation_1536", "prediction": "all x y.((Barometer(x) & Air(y)) -> MeasuresWeightOfAir(x,y))", "score": 0}
{"id": "eqasc_validation_1536", "prediction": "all x y z.((Barometer(x) & Air(y) & Air(z)) -> MeasuresWeightOfAir(x,y,z))", "score": 0}
{"id": "eqasc_validation_1536", "prediction": "all x y z.((Barometer(x) & Air(y) & Air(z)) -> MeasuresWeightOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1536", "prediction": "all x y z.((Barometer(x) & Air(y) & Weight(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1536", "prediction": "all x y.((Barometer(x) & Air(y) & MeasuresWeight(x,y)) -> UsedToMeasureWeight(x,y))", "score": 0}
{"id": "eqasc_validation_1536", "prediction": "all x y z.((Barometer(x) & Air(y) & Air(z)) -> MeasuresWeight(x,y))", "score": 0}
{"id": "eqasc_validation_1536", "prediction": "all x y z.((Barometer(x) & Air(y) & Air(z) & MeasuresWeight(x,y,z)) -> MeasuresWeight(x,y,z))", "score": 0}
{"id": "eqasc_validation_1536", "prediction": "all x y z.((Barometer(x) & Air(y) & Air(z)) -> UsedToMeasureWeight(x,y,z))", "score": 0}
{"id": "eqasc_validation_1536", "prediction": "all x y z.((Barometer(x) & Air(y) & Air(z) & MeasuresWeight(x,y,z)) -> UsedToMeasureWeight(x,y,z))", "score": 0}
{"id": "eqasc_validation_1536", "prediction": "all x y z.((Barometer(x) & Air(y) & Air(z)) -> MeasuresWeightOfAir(x,y))", "score": 0}
{"id": "eqasc_validation_1536", "prediction": "all x.(Barometer(x) -> MeasuresAirWeight(x))", "score": 0}
{"id": "eqasc_validation_1536", "prediction": "all x y z.((Barometer(x) & Air(y) & Air(z) & MeasuresWeight(x,y,z)) -> MeasuresWeightOfAir(x,y,z))", "score": 0}
{"id": "eqasc_validation_1536", "prediction": "all x.(Barometer(x) -> MeasuresWeightOfAir(x))", "score": 0}
{"id": "eqasc_validation_1537", "prediction": "all x y.((AirPressure(x) & UnitOfArea(y)) -> ForceOfAirAgainst(x,y))", "score": 0}
{"id": "eqasc_validation_1537", "prediction": "all x.(AirPressure(x) -> ForceOfAirAgainstUnitOfArea(x))", "score": 0}
{"id": "eqasc_validation_1537", "prediction": "all x y z.((AirPressure(x) & AirUnit(y) & Area(z)) -> ForceAgainst(x,y,z))", "score": 0}
{"id": "eqasc_validation_1537", "prediction": "all x y.((AirPressure(x) & UnitOfArea(y)) -> ForceOfAir(x,y))", "score": 0}
{"id": "eqasc_validation_1537", "prediction": "all x y.((AirPressure(x) & AirUnit(y)) -> ForceAgainst(x,y))", "score": 0}
{"id": "eqasc_validation_1537", "prediction": "all x y z.((AirPressure(x) & AirUnitOfArea(y) & UnitOfArea(z)) -> ForceAgainst(x,y,z))", "score": 0}
{"id": "eqasc_validation_1537", "prediction": "all x y z.((AirPressure(x) & Air(y) & UnitOfArea(z)) -> ForceAgainst(x,y,z))", "score": 0}
{"id": "eqasc_validation_1537", "prediction": "all x y z.((AirPressure(x) & AirUnitOfArea(y) & UnitOfArea(z)) -> ForceOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1537", "prediction": "all x y.((AirPressure(x) & AirUnitOfArea(y)) -> ForceAgainst(x,y))", "score": 0}
{"id": "eqasc_validation_1537", "prediction": "all x.(AirPressure(x) -> (ForceOfAir(x) & UnitOfArea(x)))", "score": 0}
{"id": "eqasc_validation_1537", "prediction": "all x.(AirPressure(x) -> (ForceOfAir(x) & AgainstUnitOfArea(x)))", "score": 0}
{"id": "eqasc_validation_1537", "prediction": "all x y z.((AirPressure(x) & AirUnitOfArea(y) & UnitOfArea(z)) -> ForceOfAgainst(x,y,z))", "score": 0}
{"id": "eqasc_validation_1537", "prediction": "all x y.((AirPressure(x) & AirUnit(y)) -> ForceAgainstUnitOfArea(x,y))", "score": 0}
{"id": "eqasc_validation_1538", "prediction": "all x y z.((Barometer(x) & Air(y) & UnitOfArea(z)) -> MeasuresForceAgainstUnitOfArea(x,y,z))", "score": 0}
{"id": "eqasc_validation_1538", "prediction": "all x y z.((Barometer(x) & Air(y) & Area(z)) -> MeasuresForceAgainstUnitOfArea(x,y,z))", "score": 0}
{"id": "eqasc_validation_1538", "prediction": "all x y.((Barometer(x) & UnitOfArea(y)) -> MeasuresAirForceAgainstUnitOfArea(x,y))", "score": 0}
{"id": "eqasc_validation_1538", "prediction": "all x y z.((Barometer(x) & Air(y) & UnitOfArea(z)) -> MeasuresForceAgainst(x,y,z))", "score": 0}
{"id": "eqasc_validation_1538", "prediction": "all x y z.((Barometer(x) & AirForce(y) & UnitOfArea(z)) -> MeasuresAgainst(x,y,z))", "score": 0}
{"id": "eqasc_validation_1538", "prediction": "all x y z.((Barometer(x) & Air(y) & Area(z)) -> MeasuresForceAgainst(x,y,z))", "score": 0}
{"id": "eqasc_validation_1538", "prediction": "all x y z.((Barometer(x) & AirForce(y) & UnitOfArea(z)) -> MeasuresAgainstAgainst(x,y,z))", "score": 0}
{"id": "eqasc_validation_1538", "prediction": "all x y.((Barometer(x) & UnitOfArea(y)) -> MeasuresForceOfAir(x,y))", "score": 0}
{"id": "eqasc_validation_1538", "prediction": "all x y.((Barometer(x) & UnitOfArea(y)) -> MeasuresAirForce(x,y))", "score": 0}
{"id": "eqasc_validation_1538", "prediction": "all x y.((Barometer(x) & UnitOfArea(y)) -> MeasuresForceOfAirAgainstUnitOfArea(x,y))", "score": 0}
{"id": "eqasc_validation_1538", "prediction": "all x y z.((Barometer(x) & AirForce(y) & UnitOfArea(z)) -> MeasuresForceAgainstUnitOfArea(x,y,z))", "score": 0}
{"id": "eqasc_validation_1538", "prediction": "all x y z.((Barometer(x) & AirForce(y) & AreaUnit(z)) -> MeasuresAgainst(x,y,z))", "score": 0}
{"id": "eqasc_validation_1538", "prediction": "all x y z.((Barometer(x) & ForceOfAir(y) & UnitOfArea(z)) -> MeasuresAgainst(x,y,z))", "score": 0}
{"id": "eqasc_validation_1538", "prediction": "all x y.((Barometer(x) & UnitOfArea(y)) -> MeasuresForceOfAirAgainst(x,y))", "score": 0}
{"id": "eqasc_validation_1538", "prediction": "all x y z.((Barometer(x) & Air(y) & Area(z)) -> MeasuresForceAgainstUnit(x,y,z))", "score": 0}
{"id": "eqasc_validation_1538", "prediction": "all x y z.((Barometer(x) & Airforce(y) & UnitOfArea(z)) -> MeasuresAgainst(x,y,z))", "score": 0}
{"id": "eqasc_validation_1539", "prediction": "all x y.((Barometer(x) & Air(y)) -> MeasuresWeight(x,y))", "score": 0}
{"id": "eqasc_validation_1539", "prediction": "all x.(Barometer(x) -> MeasuresAirWeight(x))", "score": 0}
{"id": "eqasc_validation_1539", "prediction": "all x y z.((Barometer(x) & Air(y) & Weight(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1539", "prediction": "all x.(Barometer(x) -> MeasuresWeightOfAir(x))", "score": 0}
{"id": "eqasc_validation_1539", "prediction": "all x y z.((Barometer(x) & Air(y) & Air(z)) -> MeasuresWeight(x,y,z))", "score": 0}
{"id": "eqasc_validation_1539", "prediction": "all x.(Barometer(x) -> MeasuresAirWight(x))", "score": 0}
{"id": "eqasc_validation_1539", "prediction": "all x y z.((Barometer(x) & Air(y) & Weight(z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1539", "prediction": "all x y z.((Barometer(x) & Air(y) & Weight(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1539", "prediction": "all x y.((Barometer(x) & Air(y)) -> UsedToMeasureWeight(x,y))", "score": 0}
{"id": "eqasc_validation_1539", "prediction": "all x y.((Barometer(x) & Air(y) & MeasuresWeight(x,y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1539", "prediction": "all x.(Barometer(x) -> MeasuresAirWord(x))", "score": 0}
{"id": "eqasc_validation_1539", "prediction": "all x y.((Barometer(x) & Air(y) & MeasuresWeight(x,y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1539", "prediction": "all x y z.((Barometer(x) & Air(y) & Weight(z)) -> Measure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1539", "prediction": "all x.(Barometer(x) -> MeasuresAirWaight(x))", "score": 0}
{"id": "eqasc_validation_1540", "prediction": "all x.((Uses(x) & ElementalMercury(x)) -> (UsedInThermometers(x) | UsedInBarometers(x) | UsedInPressureSensingDevices(x)))", "score": 0}
{"id": "eqasc_validation_1540", "prediction": "all x.(ElementalMercury(x) -> (UsedInThermometers(x) | UsedInBarometers(x) | UsedInPressureSensingDevices(x)))", "score": 0}
{"id": "eqasc_validation_1540", "prediction": "all x.(ElementaryMercury(x) -> (UsedInThermometers(x) | UsedInBarometers(x) | UsedInPressureSensingDevices(x)))", "score": 0}
{"id": "eqasc_validation_1540", "prediction": "all x.((Uses(x) & ElementalMercury(x)) -> (UsedInThermometers(x) & UsedInBarometers(x) & UsedInPressureSensingDevices(x)))", "score": 0}
{"id": "eqasc_validation_1540", "prediction": "all x.(ElementalMercury(x) -> (UsedInThermometers(x) & UsedInBarometers(x) & UsedInPressureSensingDevices(x)))", "score": 0}
{"id": "eqasc_validation_1540", "prediction": "all x.(ElementaryMercury(x) -> (UsedInThermometers(x) & UsedInBarometers(x) & UsedInPressureSensingDevices(x)))", "score": 0}
{"id": "eqasc_validation_1540", "prediction": "all x.((Uses(x) & ElementalMercer(x)) -> (UsedInThermometers(x) | UsedInBarometers(x) | UsedInPressureSensingDevices(x)))", "score": 0}
{"id": "eqasc_validation_1540", "prediction": "all x.((ElementalMercury(x) & Thermometer(x) & Barometer(x) & PressureSensingDevice(x)) -> UsedIn(x,y))", "score": 0}
{"id": "eqasc_validation_1540", "prediction": "all x.((ElementaryMercury(x) & Thermometer(x) & Barometer(x) & PressureSensingDevice(x)) -> UsedIn(x,y))", "score": 0}
{"id": "eqasc_validation_1540", "prediction": "all x y z.((ElementaryMercury(x) & Thermometer(y) & Barometer(z) & PressureSensingDevice(x)) -> UsedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1540", "prediction": "all x.((ElementalMercury(x) & (Thermometer(x) | Barometer(x) | PressureSensingDevice(x))) -> UsedIn(x,y))", "score": 0}
{"id": "eqasc_validation_1540", "prediction": "all x.((ElementaryMercury(x) & (Thermometer(x) | Barometer(x) | PressureSensingDevice(x))) -> UsedIn(x,y))", "score": 0}
{"id": "eqasc_validation_1540", "prediction": "all x.((Uses(x) & ElementalMercury(x)) -> (UsedInThermometers(x) | UsedInBarometers(x) | UsedInPressureSensers(x)))", "score": 0}
{"id": "eqasc_validation_1540", "prediction": "all x.(ElementalMercury(x) -> (UsedInThermometers(x) | UsedInBarometers(x) | UsedInPressureSensers(x)))", "score": 0}
{"id": "eqasc_validation_1541", "prediction": "all x.(ElementaryMercury(x) -> MeasuresAirPressure(x))", "score": 0}
{"id": "eqasc_validation_1541", "prediction": "all x y.((ElementalMercury(x) & AirPressure(y)) -> MeasuresAirPressure(x,y))", "score": 0}
{"id": "eqasc_validation_1541", "prediction": "all x y z.((ElementalMercury(x) & AirPressure(y) & AirPressure(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1541", "prediction": "all x y.((ElementalMercury(x) & AirPressure(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1541", "prediction": "all x y z.((ElementaryMercury(x) & AirPressure(y) & AirPressure(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1541", "prediction": "all x.(ElementalMercury(x) -> MeasuresAirPressure(x))", "score": 0}
{"id": "eqasc_validation_1541", "prediction": "all x.(ElementaryMercuryHelpsMeasureAirPressure(x) -> MeasuresAirPressure(x))", "score": 0}
{"id": "eqasc_validation_1541", "prediction": "all x y.((ElementaryMercury(x) & AirPressure(y)) -> MeasuresAirPressure(x,y))", "score": 0}
{"id": "eqasc_validation_1541", "prediction": "all x y.((ElementalMercury(x) & AirPressure(y)) -> HelpsMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1541", "prediction": "all x y.((ElementaryMercury(x) & AirPressure(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1541", "prediction": "all x.(ElementalMercuryHelpsMeasureAirPressure(x) -> MeasuresAirPressure(x))", "score": 0}
{"id": "eqasc_validation_1541", "prediction": "all x.((ElementalMercury(x) & MeasuresAirPressure(x)) -> ElementalMercuryHelpsMeasureAirPressure(x))", "score": 0}
{"id": "eqasc_validation_1541", "prediction": "all x.((ElementaryMercury(x) & MeasuresAirPressure(x)) -> ElementalMercuryHelpsMeasureAirPressure(x))", "score": 0}
{"id": "eqasc_validation_1541", "prediction": "all x y.((ElementaryMercury(x) & AirPressure(y)) -> HelpsMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1542", "prediction": "all x.(SafetyGoggles(x) -> (ProtectsEyes(x) & DuringExperiments(x)))", "score": 0}
{"id": "eqasc_validation_1542", "prediction": "all x y z.((SafetyGoggles(x) & Eyes(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1542", "prediction": "all x y.((SafetyGoggles(x) & Experiment(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1542", "prediction": "all x y.((SecurityGoggles(x) & Experiment(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1542", "prediction": "all x.(SafetyGoggles(x) -> (ProtectsEyesDuringExperiments(x) & DuringExperiments(x)))", "score": 0}
{"id": "eqasc_validation_1542", "prediction": "all x y z.((SecurityGoggles(x) & Eyes(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1542", "prediction": "all x.(SecurityGoggles(x) -> (ProtectsEyes(x) & DuringExperiments(x)))", "score": 0}
{"id": "eqasc_validation_1542", "prediction": "all x y z.((SafetyGoggles(x) & Eyes(y) & Experiment(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1542", "prediction": "all x.(SafetyGloes(x) -> (ProtectsEyes(x) & DuringExperiments(x)))", "score": 0}
{"id": "eqasc_validation_1542", "prediction": "all x y.((SafetyGoggles(x) & Experiment(y)) -> (ProtectsEyes(x,y) & DuringExperiment(x,y)))", "score": 0}
{"id": "eqasc_validation_1542", "prediction": "all x.(SafetyGoggles(x) -> (ProtectsEyes(x) & DuringExperiment(x)))", "score": 0}
{"id": "eqasc_validation_1542", "prediction": "all x y.((SafetyGoggles(x) & Eyes(y)) -> ProtectsDuringExperiments(x,y))", "score": 0}
{"id": "eqasc_validation_1542", "prediction": "all x y z.((SafetyGoggles(x) & Eyes(y) & Experiment(z)) -> ProtectedDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1542", "prediction": "all x y.((SafetyGoggles(x) & Experiment(y)) -> ProtectsEyesDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1542", "prediction": "all x y z.((SafetyGoggles(x) & Eye(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1542", "prediction": "all x y.((SecurityGoggles(x) & Experiment(y)) -> (ProtectsEyes(x,y) & DuringExperiment(x,y)))", "score": 0}
{"id": "eqasc_validation_1543", "prediction": "all x.((Product(x) & EyeIrritating(x)) -> WearGoggles(x))", "score": 0}
{"id": "eqasc_validation_1543", "prediction": "all x.((Product(x) & EyeIrrigant(x)) -> WearGoggles(x))", "score": 0}
{"id": "eqasc_validation_1543", "prediction": "all x.((Product(x) & EyeIrritating(x)) -> WearGggles(x))", "score": 0}
{"id": "eqasc_validation_1543", "prediction": "all x.((Product(x) & EyeIrritating(x)) -> WearsGoggles(x))", "score": 0}
{"id": "eqasc_validation_1543", "prediction": "all x.((Product(x) & EyeIrrigator(x)) -> WearGoggles(x))", "score": 0}
{"id": "eqasc_validation_1543", "prediction": "all x.((Product(x) & EyeIrritatant(x)) -> WearGoggles(x))", "score": 0}
{"id": "eqasc_validation_1543", "prediction": "all x.((Product(x) & EyeIrrigation(x)) -> WearGoggles(x))", "score": 0}
{"id": "eqasc_validation_1543", "prediction": "all x.((Product(x) & EyeIrrigant(x)) -> WearGggles(x))", "score": 0}
{"id": "eqasc_validation_1543", "prediction": "all x.((Product(x) & EyeIrritating(x)) -> WearGlasses(x))", "score": 0}
{"id": "eqasc_validation_1543", "prediction": "all x.((Product(x) & EyeIrritator(x)) -> WearGoggles(x))", "score": 0}
{"id": "eqasc_validation_1543", "prediction": "all x.((Product(x) & EyeIrrigant(x)) -> WearsGoggles(x))", "score": 0}
{"id": "eqasc_validation_1543", "prediction": "all x.((Product(x) & EyeIrritating(x)) -> WearGooples(x))", "score": 0}
{"id": "eqasc_validation_1543", "prediction": "all x.((Product(x) & EyeIrritating(x)) -> WearsGggles(x))", "score": 0}
{"id": "eqasc_validation_1543", "prediction": "all x.((Product(x) & EyeIrritating(x)) -> WearsGlasses(x))", "score": 0}
{"id": "eqasc_validation_1543", "prediction": "all x.((Product(x) & EyeIrritating(x)) -> WearGowns(x))", "score": 0}
{"id": "eqasc_validation_1543", "prediction": "all x.((Product(x) & EyeIrritating(x)) -> WearGalls(x))", "score": 0}
{"id": "eqasc_validation_1544", "prediction": "all x y.((Goggles(x) & Irritating(y)) -> ProtectsAgainst(x,y))", "score": 0}
{"id": "eqasc_validation_1544", "prediction": "all x y.((Goggles(x) & Irritating(y)) -> CanProtectAgainst(x,y))", "score": 0}
{"id": "eqasc_validation_1544", "prediction": "all x y z.((Goggles(x) & Irritating(y) & Irritating(z)) -> ProtectsAgainst(x,y,z))", "score": 0}
{"id": "eqasc_validation_1544", "prediction": "all x y.((Goggle(x) & Irritating(y)) -> ProtectsAgainst(x,y))", "score": 0}
{"id": "eqasc_validation_1544", "prediction": "all x y z.((Goggles(x) & Irritating(y) & Irritating(z)) -> CanProtectAgainst(x,y,z))", "score": 0}
{"id": "eqasc_validation_1544", "prediction": "all x.(Goggles(x) -> ProtectsAgainstIrritatings(x))", "score": 0}
{"id": "eqasc_validation_1544", "prediction": "all x y.((Goggles(x) & Irritatant(y)) -> ProtectsAgainst(x,y))", "score": 0}
{"id": "eqasc_validation_1544", "prediction": "all x y z.((Goggle(x) & Irritating(y) & Irritating(z)) -> ProtectsAgainst(x,y,z))", "score": 0}
{"id": "eqasc_validation_1544", "prediction": "all x y.((Goggle(x) & Irritating(y)) -> CanProtectAgainst(x,y))", "score": 0}
{"id": "eqasc_validation_1544", "prediction": "all x y z.((Goggle(x) & Irritating(y) & Irritating(z)) -> CanProtectAgainst(x,y,z))", "score": 0}
{"id": "eqasc_validation_1544", "prediction": "all x.(Goggles(x) -> ProtectAgainstIrritatings(x))", "score": 0}
{"id": "eqasc_validation_1544", "prediction": "all x.(Goggles(x) -> (ProtectsAgainstIrritatings(x) & Irritatings(x)))", "score": 0}
{"id": "eqasc_validation_1544", "prediction": "all x y.((Goggles(x) & Irritatant(y)) -> CanProtectAgainst(x,y))", "score": 0}
{"id": "eqasc_validation_1544", "prediction": "all x y z.((Goggles(x) & Irritatant(y) & Irritating(z)) -> ProtectsAgainst(x,y,z))", "score": 0}
{"id": "eqasc_validation_1544", "prediction": "all x y z.((Goggles(x) & Irritating(y) & Irritating(z)) -> CanProtect(x,y,z))", "score": 0}
{"id": "eqasc_validation_1544", "prediction": "all x.(Goggles(x) -> CanProtectAgainstIrritatings(x))", "score": 0}
{"id": "eqasc_validation_1545", "prediction": "all x.((Eye(x) & AtBack(x)) -> Retina(x))", "score": 0}
{"id": "eqasc_validation_1545", "prediction": "all x.((InsideEye(x) & AtBack(x)) -> Retina(x))", "score": 0}
{"id": "eqasc_validation_1545", "prediction": "all x.((Eye(x) & InsideEye(x) & AtBack(x)) -> Retina(x))", "score": 0}
{"id": "eqasc_validation_1545", "prediction": "all x.((Eye(x) & Back(x)) -> Retina(x))", "score": 0}
{"id": "eqasc_validation_1545", "prediction": "all x y.((Eye(x) & Eye(y) & Inside(x,y) & AtBack(x)) -> Retina(x))", "score": 0}
{"id": "eqasc_validation_1545", "prediction": "all x.((Eye(x) & Inside(x) & AtBack(x)) -> Retina(x))", "score": 0}
{"id": "eqasc_validation_1545", "prediction": "all x y.((Eye(x) & Eye(y) & AtBack(x,y)) -> Retina(x))", "score": 0}
{"id": "eqasc_validation_1545", "prediction": "all x y z.((Eye(x) & Eye(y) & Retina(z)) -> (Inside(x,y) & AtBack(x,z)))", "score": 0}
{"id": "eqasc_validation_1545", "prediction": "all x.((Eye(x) & Eye(x) & AtBack(x)) -> Retina(x))", "score": 0}
{"id": "eqasc_validation_1545", "prediction": "all x.(InsideEye(x) & AtBack(x) -> Retina(x))", "score": 0}
{"id": "eqasc_validation_1545", "prediction": "all x y.((Eye(x) & Eye(y) & AtBack(x)) -> Retina(x))", "score": 0}
{"id": "eqasc_validation_1545", "prediction": "all x y z.((Eye(x) & Eye(y) & Eye(z) & Inside(x,y) & AtBack(x,z)) -> Retina(x))", "score": 0}
{"id": "eqasc_validation_1545", "prediction": "all x.((Eye(x) & Eye(x) & Eye(x) & Eye(x) & Eye(x) & Eye(x) & Eye(x)) -> Retina(x))", "score": 0}
{"id": "eqasc_validation_1545", "prediction": "all x.((Eye(x) & Eye(x) & Eye(x) & Eye(x) & Eye(x) & Eye(x)) -> Retina(x))", "score": 0}
{"id": "eqasc_validation_1545", "prediction": "all x y z.((Eye(x) & Eye(y) & Eye(z) & Inside(x,y) & AtBack(y,z)) -> Retina(x))", "score": 0}
{"id": "eqasc_validation_1545", "prediction": "all x y.((Eye(x) & Eye(y) & Inside(x,y) & AtBack(x,y)) -> Retina(x))", "score": 0}
{"id": "eqasc_validation_1546", "prediction": "all x.(SafetyGoggles(x) -> (ProtectsRetina(x) & DuringExperiments(x)))", "score": 0}
{"id": "eqasc_validation_1546", "prediction": "all x y.((SafetyGoggles(x) & Experiment(y)) -> ProtectsRetina(x,y))", "score": 0}
{"id": "eqasc_validation_1546", "prediction": "all x y.((SafetyGoggles(x) & Experiment(y)) -> (ProtectsRetina(x,y) & During(x,y)))", "score": 0}
{"id": "eqasc_validation_1546", "prediction": "all x.(SecurityGoggles(x) -> (ProtectsRetina(x) & DuringExperiments(x)))", "score": 0}
{"id": "eqasc_validation_1546", "prediction": "all x y.((SecurityGoggles(x) & Experiment(y)) -> ProtectsRetina(x,y))", "score": 0}
{"id": "eqasc_validation_1546", "prediction": "all x y.((SafetyGoggles(x) & Experiment(y)) -> (ProtectsRetina(x,y) & DuringExperiment(x,y)))", "score": 0}
{"id": "eqasc_validation_1546", "prediction": "all x y z.((SafetyGoggles(x) & Retina(y) & Experiment(z)) -> ProtectsRetinal(x,y,z))", "score": 0}
{"id": "eqasc_validation_1546", "prediction": "all x y z.((SafetyGoggles(x) & Retina(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1546", "prediction": "all x.(SafetyGloes(x) -> (ProtectsRetina(x) & DuringExperiments(x)))", "score": 0}
{"id": "eqasc_validation_1546", "prediction": "all x y z.((SafetyGoggles(x) & Retina(y) & Experiment(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1546", "prediction": "all x y z.((SafetyGoggles(x) & Experiment(y) & Retina(z)) -> ProtectsRetinal(x,y,z))", "score": 0}
{"id": "eqasc_validation_1546", "prediction": "all x y.((SafetyGoggles(x) & Experiment(y)) -> ProtectsRetinal(x,y))", "score": 0}
{"id": "eqasc_validation_1546", "prediction": "all x.(SafetyGoggles(x) -> (ProtectsRetinalRetina(x) & DuringExperiments(x)))", "score": 0}
{"id": "eqasc_validation_1546", "prediction": "all x.(SafetyGoggles(x) -> (ProtectsRetinaDuringExperiments(x) & DuringExperiments(x)))", "score": 0}
{"id": "eqasc_validation_1546", "prediction": "all x y z.((SafetyGoggles(x) & Retina(y) & Experiment(z)) -> ProtectsRetina(x,y,z))", "score": 0}
{"id": "eqasc_validation_1547", "prediction": "all x.((Flexible(x) & (Eyeglasses(x) | Goggles(x))) -> Better(x))", "score": 0}
{"id": "eqasc_validation_1547", "prediction": "all x.((Fiber(x) & (Eyeglasses(x) | Goggles(x))) -> Better(x))", "score": 0}
{"id": "eqasc_validation_1547", "prediction": "all x.((Flexible(x) & (Earglasses(x) | Goggles(x))) -> Better(x))", "score": 0}
{"id": "eqasc_validation_1547", "prediction": "all x.((Flexible(x) & (Early(x) | Goggles(x))) -> Better(x))", "score": 0}
{"id": "eqasc_validation_1547", "prediction": "all x.((Fiber(x) & (Earglasses(x) | Goggles(x))) -> Better(x))", "score": 0}
{"id": "eqasc_validation_1547", "prediction": "all x.((Flexible(x) & (Eyes(x) | Goggles(x))) -> Better(x))", "score": 0}
{"id": "eqasc_validation_1547", "prediction": "all x.((FiberPlasticEyeglasses(x) | FirmPlasticGoggles(x)) -> Better(x))", "score": 0}
{"id": "eqasc_validation_1547", "prediction": "all x.((Fiber(x) & (Early(x) | Goggles(x))) -> Better(x))", "score": 0}
{"id": "eqasc_validation_1547", "prediction": "all x.((FiberPolymerEyeglasses(x) | FirmPolymerGoggles(x)) -> Better(x))", "score": 0}
{"id": "eqasc_validation_1547", "prediction": "all x.((Fiber(x) & (Eyes(x) | Goggles(x))) -> Better(x))", "score": 0}
{"id": "eqasc_validation_1547", "prediction": "all x.((FiberPolymerEyeglasses(x) | FirmPlasticGoggles(x)) -> Better(x))", "score": 0}
{"id": "eqasc_validation_1547", "prediction": "all x y.((Flexible(x) & (Eyeglasses(y) | Goggles(y))) -> Better(x,y))", "score": 0}
{"id": "eqasc_validation_1547", "prediction": "all x y.((Flexible(x) & (Eyeglasses(y) | Goggles(y))) -> Better(x))", "score": 0}
{"id": "eqasc_validation_1547", "prediction": "all x.((FernPlastic(x) & (Early(x) | Goggles(x))) -> Better(x))", "score": 0}
{"id": "eqasc_validation_1547", "prediction": "all x y.((Flexible(x) & (Earglasses(y) | Goggles(y))) -> Better(x,y))", "score": 0}
{"id": "eqasc_validation_1547", "prediction": "all x y.((Flexible(x) & (Earglasses(y) | Goggles(y))) -> Better(x))", "score": 0}
{"id": "eqasc_validation_1548", "prediction": "all x y.((Plastic(x) & Experiment(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1548", "prediction": "all x y.((Plastic(x) & Experiement(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1548", "prediction": "all x.((Plastic(x) & Experiment(x)) -> ProtectsEyes(x))", "score": 0}
{"id": "eqasc_validation_1548", "prediction": "all x y z.((Plastic(x) & Eyes(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1548", "prediction": "all x y z.((Plastic(x) & Eye(y) & Experiment(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1548", "prediction": "all x y z.((Plastic(x) & Eyes(y) & Experiment(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1548", "prediction": "all x y z.((Plastic(x) & Eye(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1548", "prediction": "all x y.((Plastic(x) & Experiment(y) & ProtectsEyes(x,y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1548", "prediction": "all x y z.((Plastic(x) & Eyes(y) & Experiement(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1548", "prediction": "all x y z.((Plastic(x) & Eyes(y) & Experiement(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1548", "prediction": "all x y.((Plastic(x) & Experiment(y)) -> ProtectsEyesDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1548", "prediction": "all x.((Plastic(x) & Experiement(x)) -> ProtectsEyes(x))", "score": 0}
{"id": "eqasc_validation_1548", "prediction": "all x y z.((Plastic(x) & Eye(y) & Experiement(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1548", "prediction": "all x y z.((Plastic(x) & Eye(y) & Experiement(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1548", "prediction": "all x.((Plastic(x) & Experiment(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1548", "prediction": "all x y.((Plastic(x) & Experiement(y)) -> ProtectsEyesDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1549", "prediction": "all x.((ConcentratedAcids(x) & ConcentratedAlkalis(x)) -> FaceShield(x))", "score": 0}
{"id": "eqasc_validation_1549", "prediction": "all x.((ConcentratedAcids(x) & ConcentratedAlkalis(x)) -> NeededInAdditionToGoggles(x))", "score": 0}
{"id": "eqasc_validation_1549", "prediction": "all x.((ConcentratedAcids(x) & ConcentratedAlkalis(x)) -> NeedsFaceShield(x))", "score": 0}
{"id": "eqasc_validation_1549", "prediction": "all x.((ConcentratedAcids(x) & ConcentratedAlkalis(x)) -> (FaceShield(x) & Goggles(x)))", "score": 0}
{"id": "eqasc_validation_1549", "prediction": "all x.((ConcentratedAcids(x) | ConcentratedAlkalis(x)) -> FaceShield(x))", "score": 0}
{"id": "eqasc_validation_1549", "prediction": "all x.((ConcentratedAcids(x) & Alkalis(x)) -> FaceShield(x))", "score": 0}
{"id": "eqasc_validation_1549", "prediction": "all x.((ConcentratedAcidsAndAlkalis(x) & FaceShield(x)) -> NeededInAdditionToGoggles(x))", "score": 0}
{"id": "eqasc_validation_1549", "prediction": "all x.((ConcentratedAcids(x) & ConcentratedAlkalis(x)) -> (FaceShield(x) & InAdditionToGoggles(x)))", "score": 0}
{"id": "eqasc_validation_1549", "prediction": "all x.((ConcentratedAcids(x) & ConcentratedAlkalis(x)) -> (FaceShield(x) & AddedToGoggles(x)))", "score": 0}
{"id": "eqasc_validation_1549", "prediction": "all x.((ConcentratedAcids(x) & ConcentratedAlkalis(x)) -> NeededFaceShield(x))", "score": 0}
{"id": "eqasc_validation_1549", "prediction": "all x.((ConcentratedAcids(x) & ConcentratedAlkalis(x)) -> FaceShelled(x))", "score": 0}
{"id": "eqasc_validation_1550", "prediction": "all x y.((Acid(x) & Experiment(y)) -> CanHarmEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1550", "prediction": "all x y.((Acid(x) & Experiment(y)) -> HarmsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1550", "prediction": "all x.((Acid(x) & Experiment(x)) -> HarmsEyes(x))", "score": 0}
{"id": "eqasc_validation_1550", "prediction": "all x.((Acid(x) & Experiment(x)) -> CanHarmEyes(x))", "score": 0}
{"id": "eqasc_validation_1550", "prediction": "all x y.((Acid(x) & Experiment(y)) -> (HarmsEyes(x,y) & DuringExperiment(x,y)))", "score": 0}
{"id": "eqasc_validation_1550", "prediction": "all x y.((Acid(x) & Experiment(y)) -> (HarmsEyes(x,y) & During(x,y)))", "score": 0}
{"id": "eqasc_validation_1550", "prediction": "all x y.((Acid(x) & Experiment(y) & CanHarmEyes(x,y)) -> CanHarmEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1550", "prediction": "all x y.((Acid(x) & Experiment(y)) -> (HarmsEyes(x,y) & DuringExperiment(y)))", "score": 0}
{"id": "eqasc_validation_1550", "prediction": "all x y z.((Acid(x) & Experiment(y) & Eye(z)) -> CanHarm(x,y,z))", "score": 0}
{"id": "eqasc_validation_1550", "prediction": "all x y z.((Acid(x) & Eye(y) & Experiment(z)) -> CanHarm(x,y,z))", "score": 0}
{"id": "eqasc_validation_1550", "prediction": "all x.((Acids(x) & Experiment(x)) -> HarmsEyes(x))", "score": 0}
{"id": "eqasc_validation_1550", "prediction": "all x y z.((Acid(x) & Eyes(y) & Experiment(z)) -> CanHarm(x,y,z))", "score": 0}
{"id": "eqasc_validation_1550", "prediction": "all x y z.((Acid(x) & Experiment(y) & Eyes(z)) -> CanHarm(x,y,z))", "score": 0}
{"id": "eqasc_validation_1550", "prediction": "all x.((Acids(x) & Experiment(x)) -> CanHarmEyes(x))", "score": 0}
{"id": "eqasc_validation_1550", "prediction": "all x y.((Acid(x) & Experiment(y)) -> (HarmsEyes(x,y) & DuringExperiment(x)))", "score": 0}
{"id": "eqasc_validation_1550", "prediction": "all x y z.((Acid(x) & Experiment(y) & Eye(z)) -> Harms(x,y,z))", "score": 0}
{"id": "eqasc_validation_1551", "prediction": "all x.(LabExperiment(x) -> GroupProject(x))", "score": 0}
{"id": "eqasc_validation_1551", "prediction": "all x y.((LabExperiment(x) & GroupProject(y)) -> GroupProject(x))", "score": 0}
{"id": "eqasc_validation_1551", "prediction": "all x y.((LabExperiment(x) & GroupProject(y)) -> GroupProject(x,y))", "score": 0}
{"id": "eqasc_validation_1551", "prediction": "all x y.((LabExperiment(x) & Project(y)) -> GroupProject(x,y))", "score": 0}
{"id": "eqasc_validation_1551", "prediction": "all x y.((LabExperiment(x) & GroupProject(y)) -> Project(x,y))", "score": 0}
{"id": "eqasc_validation_1551", "prediction": "all x y.((LabExperiment(x) & Project(y)) -> GroupProject(x))", "score": 0}
{"id": "eqasc_validation_1551", "prediction": "all x y z.((LabExperiment(x) & GroupProject(y) & Project(z)) -> GroupProject(x,y,z))", "score": 0}
{"id": "eqasc_validation_1551", "prediction": "all x y.((LabExperiment(x) & GroupProject(y)) -> IsGroupProject(x,y))", "score": 0}
{"id": "eqasc_validation_1551", "prediction": "all x y.((LabExperiment(x) & GroupProject(y)) -> -GroupProject(x))", "score": 0}
{"id": "eqasc_validation_1551", "prediction": "all x y.((LabExperiment(x) & GroupProject(y)) -> CreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1551", "prediction": "all x y.((LabExperiment(x) & GroupProject(y)) -> (GroupProject(x) & GroupProject(y)))", "score": 0}
{"id": "eqasc_validation_1551", "prediction": "all x y.((LabExperiment(x) & GroupProject(y)) -> -GroupProject(x,y))", "score": 0}
{"id": "eqasc_validation_1551", "prediction": "all x y z.((LabExperiment(x) & GroupProject(y) & GroupProject(z)) -> GroupProject(x,y,z))", "score": 0}
{"id": "eqasc_validation_1551", "prediction": "all x y.((LabExperiment(x) & Project(y)) -> Group(x,y))", "score": 0}
{"id": "eqasc_validation_1551", "prediction": "all x.(LabExpect(x) -> GroupProject(x))", "score": 0}
{"id": "eqasc_validation_1552", "prediction": "all x y.((SafetyGoggles(x) & Lab(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1552", "prediction": "all x.(SafetyGoggles(x) -> ProtectsEyesInLab(x))", "score": 0}
{"id": "eqasc_validation_1552", "prediction": "all x y.((SafetyGoggles(x) & Lab(y)) -> ProtectsEyesInLab(x,y))", "score": 0}
{"id": "eqasc_validation_1552", "prediction": "all x y.((SecurityGoggles(x) & Lab(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1552", "prediction": "all x.(SafetyGoggles(x) -> (ProtectsEyes(x) & InLab(x)))", "score": 0}
{"id": "eqasc_validation_1552", "prediction": "all x y.((SafetyGear(x) & Lab(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1552", "prediction": "all x.(SafetyGoggles(x) -> ProtectsEyes(x))", "score": 0}
{"id": "eqasc_validation_1552", "prediction": "all x y z.((SafetyGoggles(x) & Lab(y) & Eyes(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1552", "prediction": "all x y.((SecurityGoggles(x) & Lab(y)) -> ProtectsEyesInLab(x,y))", "score": 0}
{"id": "eqasc_validation_1552", "prediction": "all x y z.((SafetyGoggles(x) & Lab(y) & Eye(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1552", "prediction": "all x y z.((SafetyGoggles(x) & Eyes(y) & Lab(z)) -> ProtectsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1552", "prediction": "all x y z.((SafetyGoggles(x) & Eyes(y) & Lab(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1552", "prediction": "all x y z.((SafetyGoggles(x) & Lab(y) & Eyes(z)) -> ProtectsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1552", "prediction": "all x y z.((SafetyGoggles(x) & Lab(y) & Eye(z)) -> ProtectsIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1552", "prediction": "all x y z.((SafetyGoggles(x) & Lab(y) & Eyes(z)) -> ProtectedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1552", "prediction": "all x y.((SafetyGoggles(x) & Lab(y)) -> UsedToProtectEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1553", "prediction": "all x.((Goggles(x) | SafetyGlassesWithSideshields(x)) -> Recommended(x))", "score": 0}
{"id": "eqasc_validation_1553", "prediction": "all x.((Goggles(x) | SafetyGlasses(x) & Sideshields(x)) -> Recommended(x))", "score": 0}
{"id": "eqasc_validation_1553", "prediction": "all x.((Goggles(x) | SafetyGlasses(x) & HasSideshields(x)) -> Recommended(x))", "score": 0}
{"id": "eqasc_validation_1553", "prediction": "all x.((Goggles(x) | SafetyGlasses(x) & Sideshield(x)) -> Recommended(x))", "score": 0}
{"id": "eqasc_validation_1553", "prediction": "all x.((Goggles(x) | SafetyGlasses(x) & HasSideshield(x)) -> Recommended(x))", "score": 0}
{"id": "eqasc_validation_1553", "prediction": "all x.((Goggles(x) | SafetyGlasses(x)) -> HasSideshields(x))", "score": 0}
{"id": "eqasc_validation_1553", "prediction": "all x.((Gggles(x) | SafetyGlassesWithSideshields(x)) -> Recommended(x))", "score": 0}
{"id": "eqasc_validation_1553", "prediction": "all x.((Goggles(x) | SafetyGlasses(x) | Sideshields(x)) -> Recommended(x))", "score": 0}
{"id": "eqasc_validation_1553", "prediction": "all x.((Goggles(x) | SafetyGlasses(x)) -> HasSideshield(x))", "score": 0}
{"id": "eqasc_validation_1553", "prediction": "all x.(Recommended(x) -> (Goggles(x) | SafetyGlassesWithSideshields(x)))", "score": 0}
{"id": "eqasc_validation_1553", "prediction": "all x.((Goggles(x) | SafetyGlassesWithSideshields(x)) -> Recommendation(x))", "score": 0}
{"id": "eqasc_validation_1553", "prediction": "all x.((Gggles(x) | SafetyGlasses(x) & Sideshields(x)) -> Recommended(x))", "score": 0}
{"id": "eqasc_validation_1553", "prediction": "all x.((Goggles(x) | SafetyGlasses(x) & Sideshields(x)) -> Recommendation(x))", "score": 0}
{"id": "eqasc_validation_1553", "prediction": "all x.((Goggles(x) | SafetyGlassesWithSideshield(x)) -> Recommended(x))", "score": 0}
{"id": "eqasc_validation_1553", "prediction": "all x.((Goggles(x) | SafetyGlasses(x)) -> Sideshields(x))", "score": 0}
{"id": "eqasc_validation_1553", "prediction": "all x.((Glasses(x) | SafetyGlassesWithSideshields(x)) -> Recommended(x))", "score": 0}
{"id": "eqasc_validation_1554", "prediction": "all x.((Glasses(x) & HasSideshields(x)) -> RecommendedForProtectingEyes(x))", "score": 0}
{"id": "eqasc_validation_1554", "prediction": "all x.((Glasses(x) & HasSideshields(x)) -> RecommendedForProtectingEyesDuringExperiments(x))", "score": 0}
{"id": "eqasc_validation_1554", "prediction": "all x.((Glasses(x) & Sideshields(x)) -> RecommendedForProtectingEyes(x))", "score": 0}
{"id": "eqasc_validation_1554", "prediction": "all x.((Glasses(x) & Sideshields(x)) -> RecommendedForProtectingEyesDuringExperiments(x))", "score": 0}
{"id": "eqasc_validation_1554", "prediction": "all x.((GlassesWithSideshields(x) & RecommendedForExperiments(x)) -> ProtectsEyes(x))", "score": 0}
{"id": "eqasc_validation_1554", "prediction": "all x.((Glasses(x) & HasSideshields(x)) -> RecommendedForProtectionOfEyes(x))", "score": 0}
{"id": "eqasc_validation_1554", "prediction": "all x y.((Glasses(x) & Sideshields(y)) -> RecommendedForProtectingEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1554", "prediction": "all x.((GlassesWithSideshields(x) & RecommendedForExperiments(x)) -> ProtectsEyesDuringExperiments(x))", "score": 0}
{"id": "eqasc_validation_1554", "prediction": "all x.((Glasses(x) & HasSideshields(x)) -> RecommendedForExperiments(x))", "score": 0}
{"id": "eqasc_validation_1554", "prediction": "all x.((Glasses(x) & HasSideshields(x)) -> RecommendedForProtectionOfEyesDuringExperiments(x))", "score": 0}
{"id": "eqasc_validation_1554", "prediction": "all x y.((Glasses(x) & Sideshields(x)) -> RecommendedForProtectingEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1554", "prediction": "all x.((Glasses(x) & Sideshields(x)) -> RecommendedForExperiments(x))", "score": 0}
{"id": "eqasc_validation_1554", "prediction": "all x.((Glasses(x) & Sideshield(x)) -> RecommendedForProtectingEyes(x))", "score": 0}
{"id": "eqasc_validation_1554", "prediction": "all x.((Glasses(x) & HasSideshields(x)) -> RecommendedForProtectingEyesDuringExperimentation(x))", "score": 0}
{"id": "eqasc_validation_1554", "prediction": "all x.((Glasses(x) & HasSideshields(x)) -> RecommendedForEyes(x))", "score": 0}
{"id": "eqasc_validation_1554", "prediction": "all x.((Glasses(x) & Sideshields(x)) -> RecommendedForProtectionOfEyes(x))", "score": 0}
{"id": "eqasc_validation_1555", "prediction": "all x.(SafetyGoggles(x) -> MandatoryInLaboratory(x))", "score": 0}
{"id": "eqasc_validation_1555", "prediction": "all x y.((SafetyGoggles(x) & Laboratory(y)) -> Mandatory(x,y))", "score": 0}
{"id": "eqasc_validation_1555", "prediction": "all x.(SafetyGear(x) -> MandatoryInLaboratory(x))", "score": 0}
{"id": "eqasc_validation_1555", "prediction": "all x y.((SafetyGoggles(x) & Laboratory(y)) -> MandatoryIn(x,y))", "score": 0}
{"id": "eqasc_validation_1555", "prediction": "all x.(SecurityGoggles(x) -> MandatoryInLaboratory(x))", "score": 0}
{"id": "eqasc_validation_1555", "prediction": "all x y.((SafetyGear(x) & Laboratory(y)) -> Mandatory(x,y))", "score": 0}
{"id": "eqasc_validation_1555", "prediction": "all x y.((SecurityGoggles(x) & Laboratory(y)) -> Mandatory(x,y))", "score": 0}
{"id": "eqasc_validation_1555", "prediction": "all x.(SafetyGlobe(x) -> MandatoryInLaboratory(x))", "score": 0}
{"id": "eqasc_validation_1555", "prediction": "all x.((SafetyGoggles(x) & Laboratory(x)) -> Mandatory(x))", "score": 0}
{"id": "eqasc_validation_1555", "prediction": "all x y z.((SafetyGoggles(x) & Laboratory(y) & Laboratory(z)) -> Mandatory(x,y,z))", "score": 0}
{"id": "eqasc_validation_1555", "prediction": "all x y.((SafetyGear(x) & Laboratory(y)) -> MandatoryIn(x,y))", "score": 0}
{"id": "eqasc_validation_1555", "prediction": "all x y.((SecurityGoggles(x) & Laboratory(y)) -> MandatoryIn(x,y))", "score": 0}
{"id": "eqasc_validation_1555", "prediction": "all x.(SafetyGloes(x) -> MandatoryInLaboratory(x))", "score": 0}
{"id": "eqasc_validation_1555", "prediction": "all x y z.((SafetyGoggles(x) & Laboratory(y) & Lab(z)) -> Mandatory(x,y,z))", "score": 0}
{"id": "eqasc_validation_1555", "prediction": "all x.(SafetyGown(x) -> MandatoryInLaboratory(x))", "score": 0}
{"id": "eqasc_validation_1556", "prediction": "all x.(Experiment(x) -> PerformedInLaboratory(x))", "score": 0}
{"id": "eqasc_validation_1556", "prediction": "all x y.((Experiment(x) & Laboratory(y)) -> PerformedIn(x,y))", "score": 0}
{"id": "eqasc_validation_1556", "prediction": "all x y z.((Experiment(x) & Laboratory(y) & Laboratory(z)) -> PerformedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1556", "prediction": "all x y.((Experiment(x) & Laborator(y)) -> PerformedIn(x,y))", "score": 0}
{"id": "eqasc_validation_1556", "prediction": "all x y.((Experiment(x) & Lab(y)) -> PerformedIn(x,y))", "score": 0}
{"id": "eqasc_validation_1556", "prediction": "all x y z.((Experiment(x) & Laboratory(y) & Experiment(z)) -> PerformedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1556", "prediction": "all x y.((Experiment(x) & Laboratory(y)) -> Performed(x,y))", "score": 0}
{"id": "eqasc_validation_1556", "prediction": "all x y z.((Experiment(x) & Laboratory(y) & Lab(z)) -> PerformedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1556", "prediction": "all x y z.((Experiment(x) & Lab(y) & Laboratory(z)) -> PerformedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1556", "prediction": "all x y z.((Experiment(x) & Laborator(y) & Laboratory(z)) -> PerformedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1556", "prediction": "all x y z.((Experiment(x) & Laboratory(y) & Laborator(z)) -> PerformedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1556", "prediction": "all x y z.((Experiment(x) & Laboratory(y) & Laboratory(z)) -> PerformedIn(x,y))", "score": 0}
{"id": "eqasc_validation_1556", "prediction": "all x.(Experiment(x) -> PerformsInLaboratory(x))", "score": 0}
{"id": "eqasc_validation_1556", "prediction": "all x y z.((Experiment(x) & Laboratory(y) & Laboratory(z)) -> Performed(x,y,z))", "score": 0}
{"id": "eqasc_validation_1556", "prediction": "all x y z.((Experiment(x) & Laborator(y) & Lab(z)) -> PerformedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1556", "prediction": "all x y z.((Experiment(x) & Lab(y) & Lab(z)) -> PerformedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1557", "prediction": "all x.((HomeProtectiveEquipment(x) & EyesSafetyGoggles(x)) -> Recommended(x))", "score": 0}
{"id": "eqasc_validation_1557", "prediction": "all x.(HomeProtectiveEquipment(x) -> EyesSafetyGoggles(x))", "score": 0}
{"id": "eqasc_validation_1557", "prediction": "all x.((HomeProtectiveEquipment(x) & EyesSafetyGears(x)) -> Recommended(x))", "score": 0}
{"id": "eqasc_validation_1557", "prediction": "all x.(HomeProtectiveEquipment(x) -> RecommendedEyesSafetyGoggles(x))", "score": 0}
{"id": "eqasc_validation_1557", "prediction": "all x.((HomeProtectiveEquipment(x) & EyesSafetyGggles(x)) -> Recommended(x))", "score": 0}
{"id": "eqasc_validation_1557", "prediction": "all x.(HomeProtectiveEquipment(x) -> EyesSafetyGogglesRecommended(x))", "score": 0}
{"id": "eqasc_validation_1557", "prediction": "All x.((HomeProtectiveEquipment(x) & EyesSafetyGoggles(x)) -> Recommended(x))", "score": -1}
{"id": "eqasc_validation_1557", "prediction": "All x.(HomeProtectiveEquipment(x) -> EyesSafetyGoggles(x))", "score": -1}
{"id": "eqasc_validation_1557", "prediction": "all x.(HomeProtectiveEquipment(x) -> EyesSafetyGears(x))", "score": 0}
{"id": "eqasc_validation_1557", "prediction": "all x y.((HomeProtectiveEquipment(x) & EyesSafetyGoggles(y)) -> Recommended(x,y))", "score": 0}
{"id": "eqasc_validation_1557", "prediction": "all x y.((HomeProtectiveEquipment(x) & EyesSafetyGoggles(y)) -> Recommended(x))", "score": 0}
{"id": "eqasc_validation_1557", "prediction": "all x.((HomeProtectiveEquipment(x) & EyesSafetyGoggles(x)) -> Recommendation(x))", "score": 0}
{"id": "eqasc_validation_1557", "prediction": "all x.(HomeProtectiveEquipment(x) -> RecommendedEyesSafetyGears(x))", "score": 0}
{"id": "eqasc_validation_1557", "prediction": "all x y.((HomeProtectiveEquipment(x) & EyesSafetyGears(y)) -> Recommended(x))", "score": 0}
{"id": "eqasc_validation_1557", "prediction": "all x y.((HomeProtectiveEquipment(x) & EyesSafetyGears(y)) -> Recommended(x,y))", "score": 0}
{"id": "eqasc_validation_1557", "prediction": "All x.(HomeProtectiveEquipment(x) -> RecommendedEyesSafetyGoggles(x))", "score": -1}
{"id": "eqasc_validation_1558", "prediction": "all x y.((ProtectiveEquipment(x) & Experiment(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1558", "prediction": "all x y.((ProtectiveEquipment(x) & Experiement(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1558", "prediction": "all x y z.((ProtectiveEquipment(x) & Eyes(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1558", "prediction": "all x y z.((ProtectiveEquipment(x) & Eyes(y) & Experiement(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1558", "prediction": "all x y z.((ProtectiveEquipment(x) & Eye(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1558", "prediction": "all x y z.((ProtectiveEquipment(x) & Eyes(y) & Experiment(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1558", "prediction": "all x.(ProtectiveEquipment(x) -> (ProtectsEyes(x) & DuringExperiements(x)))", "score": 0}
{"id": "eqasc_validation_1558", "prediction": "all x y z.((ProtectiveEquipment(x) & Eyes(y) & Experiement(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1558", "prediction": "all x y z.((ProtectiveEquipment(x) & Eye(y) & Experiement(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1558", "prediction": "all x y z.((ProtectiveEquipment(x) & Eye(y) & Experiment(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1558", "prediction": "all x y.((ProtectiveEquipment(x) & Experiment(y)) -> (ProtectsEyes(x,y) & ProtectsEyes(x,y)))", "score": 0}
{"id": "eqasc_validation_1558", "prediction": "all x.(ProtectiveEquipment(x) -> (ProtectsEyes(x) & DuringExperiments(x)))", "score": 0}
{"id": "eqasc_validation_1558", "prediction": "all x y.((ProtectiveEquipment(x) & Eyes(y) & Experiement(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1558", "prediction": "all x y.((ProtectiveEquipment(x) & Experiment(y)) -> ProtectsEyesDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1558", "prediction": "all x y z.((ProtectiveEquipment(x) & Eye(y) & Experiement(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1558", "prediction": "all x y z.((ProtectiveEquipment(x) & Eyes(y) & Experiment(z)) -> ProtectiveEquipment(x,y,z))", "score": 0}
{"id": "eqasc_validation_1559", "prediction": "all x.(Protection(x) -> (Simple(x) & Safe(x) & Inexpensive(x)))", "score": 0}
{"id": "eqasc_validation_1559", "prediction": "all x.(Protection(x) -> (Simple(x) & Safe(x) & Cheap(x)))", "score": 0}
{"id": "eqasc_validation_1559", "prediction": "all x.(Protection(x) -> (Simple(x) & Safe(x) & Affordable(x)))", "score": 0}
{"id": "eqasc_validation_1559", "prediction": "all x.(Protection(x) -> (Simple(x) & Safe(x) & Costly(x)))", "score": 0}
{"id": "eqasc_validation_1559", "prediction": "all x.(Protect(x) -> (Simple(x) & Safe(x) & Inexpensive(x)))", "score": 0}
{"id": "eqasc_validation_1559", "prediction": "all x.(Protection(x) -> (Simple(x) & Safe(x) & Incomparable(x)))", "score": 0}
{"id": "eqasc_validation_1559", "prediction": "all x.(Protect(x) -> (Simple(x) & Safe(x) & Cheap(x)))", "score": 0}
{"id": "eqasc_validation_1559", "prediction": "all x.(Protection(x) -> (Simple(x) & Safe(x) & -Inexpensive(x)))", "score": 0}
{"id": "eqasc_validation_1559", "prediction": "all x.(Protection(x) -> (Simple(x) & Safe(x) & Friendly(x)))", "score": 0}
{"id": "eqasc_validation_1559", "prediction": "all x.(Protect(x) -> (Simple(x) & Safe(x) & Affordable(x)))", "score": 0}
{"id": "eqasc_validation_1559", "prediction": "all x.(Protection(x) -> (Simple(x) & Safe(x) & Invaluable(x)))", "score": 0}
{"id": "eqasc_validation_1559", "prediction": "all x.(Protect(x) -> (Simple(x) & Safe(x) & Costly(x)))", "score": 0}
{"id": "eqasc_validation_1559", "prediction": "all x.(Protection(x) -> (Simple(x) & Safe(x) & ExpenseFree(x)))", "score": 0}
{"id": "eqasc_validation_1559", "prediction": "all x.(Protection(x) -> (Simple(x) & Safe(x) & -Incremental(x)))", "score": 0}
{"id": "eqasc_validation_1559", "prediction": "all x.(Protection(x) -> (Simple(x) & Safe(x) & EasilyObtainable(x) & Costly(x)))", "score": 0}
{"id": "eqasc_validation_1560", "prediction": "all x y.((SecurityGoggles(x) & Experiment(y)) -> KeepsEyesSafe(x,y))", "score": 0}
{"id": "eqasc_validation_1560", "prediction": "all x.(SafetyGoggles(x) -> KeepsEyesSafe(x))", "score": 0}
{"id": "eqasc_validation_1560", "prediction": "all x y.((SafetyGoggles(x) & Experiment(y)) -> KeepsEyesSafe(x,y))", "score": 0}
{"id": "eqasc_validation_1560", "prediction": "all x.(SafetyGoggles(x) -> (KeepsEyesSafe(x) & DuringExperiments(x)))", "score": 0}
{"id": "eqasc_validation_1560", "prediction": "all x y z.((SafetyGoggles(x) & Eyes(y) & Experiment(z)) -> KeepsSafe(x,y,z))", "score": 0}
{"id": "eqasc_validation_1560", "prediction": "all x y z.((SecurityGoggles(x) & Eyes(y) & Experiment(z)) -> KeepsSafe(x,y,z))", "score": 0}
{"id": "eqasc_validation_1560", "prediction": "all x y.((SafetyGoggles(x) & Experiment(y)) -> UsedToKeepEyesSafe(x,y))", "score": 0}
{"id": "eqasc_validation_1560", "prediction": "all x.(SafetyGoggles(x) -> UsedToKeepEyesSafe(x))", "score": 0}
{"id": "eqasc_validation_1560", "prediction": "all x.(SafetyGoggles(x) -> KeepsEyesSafeDuringExperiments(x))", "score": 0}
{"id": "eqasc_validation_1560", "prediction": "all x.(SecurityGoggles(x) -> KeepsEyesSafe(x))", "score": 0}
{"id": "eqasc_validation_1560", "prediction": "all x y.((SecurityGoggles(x) & Experiment(y)) -> UsedToKeepEyesSafe(x,y))", "score": 0}
{"id": "eqasc_validation_1560", "prediction": "all x.(SafetyGoggles(x) -> (UsedToKeepEyesSafe(x) & DuringExperiments(x)))", "score": 0}
{"id": "eqasc_validation_1560", "prediction": "all x.(SecurityGoggles(x) -> (KeepsEyesSafe(x) & DuringExperiments(x)))", "score": 0}
{"id": "eqasc_validation_1560", "prediction": "all x y.((SafetyGear(x) & Experiment(y)) -> KeepsEyesSafe(x,y))", "score": 0}
{"id": "eqasc_validation_1560", "prediction": "all x y z.((SafetyGoggles(x) & Eyes(y) & Experiment(z)) -> UsedToKeepSafe(x,y,z))", "score": 0}
{"id": "eqasc_validation_1560", "prediction": "all x y.((SafetyGoggles(x) & Eyes(y)) -> KeepsSafe(x,y))", "score": 0}
{"id": "eqasc_validation_1561", "prediction": "all x y.((Eye(x) & Eye(y)) -> (SymbolicalSensitiveOrgan(x) & ProbablyMostImportant(x,y)))", "score": 0}
{"id": "eqasc_validation_1561", "prediction": "all x.(EyesEyes(x) -> (SymbolicalSensitiveOrgan(x) & ProbablyMostImportant(x)))", "score": 0}
{"id": "eqasc_validation_1561", "prediction": "all x.(EyesEyes(x) -> (SymbolicSensitiveOrgan(x) & ProbablyMostImportant(x)))", "score": 0}
{"id": "eqasc_validation_1561", "prediction": "all x.(Eyes(x) -> (SymbolicalSensitiveOrgan(x) & Eyes(x)))", "score": 0}
{"id": "eqasc_validation_1561", "prediction": "all x.(Eyes(x) & Eyes(x)) -> (SymbolicSensitiveOrgan(x) & ProbablyMostImportant(x)))", "score": -1}
{"id": "eqasc_validation_1561", "prediction": "all x.((Eye(x) & Eyes(x)) -> (SymbolicalSensitiveOrgan(x) & ProbablyMostImportant(x)))", "score": 0}
{"id": "eqasc_validation_1561", "prediction": "all x y.((Eye(x) & Eye(y)) -> (SymbolicSensitiveOrgan(x) & ProbablyMostImportant(x,y)))", "score": 0}
{"id": "eqasc_validation_1561", "prediction": "all x.(Eye(x) -> Eyes(x))", "score": 0}
{"id": "eqasc_validation_1561", "prediction": "all x y.((Eye(x) & Eyes(y)) -> (SymbolicalSensitiveOrgan(x) & ProbablyMostImportant(x,y)))", "score": 0}
{"id": "eqasc_validation_1561", "prediction": "all x.(EyesEyes(x) -> (SymbolicalSensitiveOrgan(x) & MostImportant(x)))", "score": 0}
{"id": "eqasc_validation_1561", "prediction": "all x y.((Eye(x) & Eye(y)) -> (SymbolicalSensitiveOrgan(x) & MostImportant(x,y)))", "score": 0}
{"id": "eqasc_validation_1561", "prediction": "all x.(EyesEyes(x) -> (SymbolicSensitiveOrgan(x) & MostImportant(x)))", "score": 0}
{"id": "eqasc_validation_1561", "prediction": "all x.(Eyes(x) & Eyes(x)) -> (SymbolicSensitiveOrgan(x) & MostImportant(x)))", "score": -1}
{"id": "eqasc_validation_1561", "prediction": "all x y.((Eye(x) & Eye(y)) -> (SymbolicalSensitiveOrgan(x,y) & ProbablyMostImportant(x,y)))", "score": 0}
{"id": "eqasc_validation_1561", "prediction": "all x.(Eyes(x) -> (SympatheticOrgan(x) & Eyes(x)))", "score": 0}
{"id": "eqasc_validation_1562", "prediction": "all x y.((SensoryOrgan(x) & Experiment(y)) -> CanBeProtectedBySafetyGoggles(x,y))", "score": 0}
{"id": "eqasc_validation_1562", "prediction": "all x y z.((SensoryOrgan(x) & SafetyGoggles(y) & Experiment(z)) -> CanBeProtectedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1562", "prediction": "all x y.((SensitiveOrgan(x) & Experiment(y)) -> CanBeProtectedBySafetyGoggles(x,y))", "score": 0}
{"id": "eqasc_validation_1562", "prediction": "all x y z.((SensoryOrgan(x) & SafetyGoggles(y) & Experiment(z)) -> ProtectedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1562", "prediction": "all x.((SensoryOrgan(x) & Experiment(x)) -> CanBeProtectedBySafetyGoggles(x))", "score": 0}
{"id": "eqasc_validation_1562", "prediction": "all x y z.((SensitiveOrgan(x) & SafetyGoggles(y) & Experiment(z)) -> CanBeProtectedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1562", "prediction": "all x y z.((SensoryOrgan(x) & Experiment(y) & SafetyGoggles(z)) -> CanBeProtectedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1562", "prediction": "all x y.((SensoryOrgan(x) & Experiment(y)) -> (ProtectsBySafetyGoggles(x,y) & DuringExperiment(x,y)))", "score": 0}
{"id": "eqasc_validation_1562", "prediction": "all x y.((SensoryOrgan(x) & Experiment(y)) -> (ProtectsBySafetyGoggles(x,y) & During(x,y)))", "score": 0}
{"id": "eqasc_validation_1562", "prediction": "all x.((SensitiveOrgan(x) & Experiment(x)) -> CanBeProtectedBySafetyGoggles(x))", "score": 0}
{"id": "eqasc_validation_1562", "prediction": "all x y z.((SensoryOrgan(x) & Experiment(y) & SafetyGoggles(z)) -> ProtectedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1562", "prediction": "all x y.((SensitiveOrgan(x) & Experiment(y)) -> (ProtectsBySafetyGoggles(x,y) & During(x,y)))", "score": 0}
{"id": "eqasc_validation_1562", "prediction": "all x y.((SensitiveOrgan(x) & Experiment(y)) -> (ProtectsBySafetyGoggles(x,y) & DuringExperiment(x,y)))", "score": 0}
{"id": "eqasc_validation_1562", "prediction": "all x y.((SensoryOrgan(x) & Experiment(y)) -> ProtectedBySafetyGoggles(x,y))", "score": 0}
{"id": "eqasc_validation_1562", "prediction": "all x y z.((SensoryOrgan(x) & SafetyGoggles(y) & Experiment(z)) -> (Protects(x,y,z) & During(x,z)))", "score": 0}
{"id": "eqasc_validation_1562", "prediction": "all x y.((SensoryOrgan(x) & Experiment(y)) -> (ProtectsBySafetyGoggles(x,y) & DuringExperiment(y)))", "score": 0}
{"id": "eqasc_validation_1563", "prediction": "all x.((Laboratory(x) & ProtectsEyes(x)) -> Mandatory(x))", "score": 0}
{"id": "eqasc_validation_1563", "prediction": "all x.((Laboratory(x) & ProtectionForEyes(x)) -> Mandatory(x))", "score": 0}
{"id": "eqasc_validation_1563", "prediction": "all x y.((Laboratory(x) & Eyes(y)) -> MandatoryProtection(x,y))", "score": 0}
{"id": "eqasc_validation_1563", "prediction": "all x.((Laboratory(x) & EyeProtection(x)) -> Mandatory(x))", "score": 0}
{"id": "eqasc_validation_1563", "prediction": "all x y.((Laboratory(x) & EyeProtection(y)) -> Mandatory(x,y))", "score": 0}
{"id": "eqasc_validation_1563", "prediction": "all x y.((Laboratory(x) & Laboratory(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1563", "prediction": "all x y.((Laboratory(x) & Laboratory(y)) -> ProtectionForEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1563", "prediction": "all x y.((Laboratory(x) & Eye(y)) -> MandatoryProtection(x,y))", "score": 0}
{"id": "eqasc_validation_1563", "prediction": "all x.(Eyes(x) -> MandatoryInLaboratory(x))", "score": 0}
{"id": "eqasc_validation_1563", "prediction": "all x.((Eyes(x) & Laboratory(x)) -> MandatoryProtection(x))", "score": 0}
{"id": "eqasc_validation_1563", "prediction": "all x.(ProtectionForEyes(x) -> MandatoryInLaboratory(x))", "score": 0}
{"id": "eqasc_validation_1563", "prediction": "all x.(ProtectsEyes(x) -> MandatoryInLaboratory(x))", "score": 0}
{"id": "eqasc_validation_1563", "prediction": "all x y.((Laboratory(x) & Eyes(y)) -> Protects(x,y))", "score": 0}
{"id": "eqasc_validation_1563", "prediction": "all x y.((Laboratory(x) & Laboratory(y)) -> EyeProtectionMajority(x,y))", "score": 0}
{"id": "eqasc_validation_1563", "prediction": "all x y.((Laboratory(x) & Laboratory(y)) -> EyeProtection(x,y))", "score": 0}
{"id": "eqasc_validation_1563", "prediction": "all x y.((Laboratory(x) & Eyes(y)) -> MandatoryProtect(x,y))", "score": 0}
{"id": "eqasc_validation_1564", "prediction": "exists x.(ScienceExperiment(x) & Dangerous(x))", "score": 0}
{"id": "eqasc_validation_1564", "prediction": "exists x.(ScienceExperiment(x) & CanBeDangerous(x))", "score": 0}
{"id": "eqasc_validation_1564", "prediction": "exists x.(ScientificExperiment(x) & Dangerous(x))", "score": 0}
{"id": "eqasc_validation_1564", "prediction": "exists x.(ScientificExperiment(x) & CanBeDangerous(x))", "score": 0}
{"id": "eqasc_validation_1564", "prediction": "exists x.(ScienceExperiment(x) & -Dangerous(x))", "score": 0}
{"id": "eqasc_validation_1564", "prediction": "exists x.(ScientificExperiment(x) & -Dangerous(x))", "score": 0}
{"id": "eqasc_validation_1564", "prediction": "exists x.(ScienceExperiment(x) & (Dangerous(x) | -Dangerous(x)))", "score": 0}
{"id": "eqasc_validation_1564", "prediction": "exists x.(ScienceExperiment(x) & (Dangerous(x) | Dangerous(x)))", "score": 0}
{"id": "eqasc_validation_1564", "prediction": "exists x.(ScienceExperiment(x) & OftenDangerous(x))", "score": 0}
{"id": "eqasc_validation_1564", "prediction": "exists x.(ScienceExperiment(x) & CanBeDanger(x))", "score": 0}
{"id": "eqasc_validation_1564", "prediction": "exists x.(ScientificExperiment(x) & OftenDangerous(x))", "score": 0}
{"id": "eqasc_validation_1564", "prediction": "exists x.(ScientificExperiment(x) & (Dangerous(x) | -Dangerous(x)))", "score": 0}
{"id": "eqasc_validation_1564", "prediction": "exists x.(ScientificExperiment(x) & (Dangerous(x) | Dangerous(x)))", "score": 0}
{"id": "eqasc_validation_1564", "prediction": "exists x.(ScientificExperiment(x) & CanBeDanger(x))", "score": 0}
{"id": "eqasc_validation_1564", "prediction": "exists x.(ScienceExperiment(x) & (Dangerous(x) | -Dangerous(x))))", "score": -1}
{"id": "eqasc_validation_1564", "prediction": "exists x.(ScientificExperiment(x) & (Dangerous(x) | -Dangerous(x))))", "score": -1}
{"id": "eqasc_validation_1565", "prediction": "all x y.((SafetyGoggles(x) & Eyes(y)) -> ProtectsFromDangerousThings(x,y))", "score": 0}
{"id": "eqasc_validation_1565", "prediction": "all x.(SafetyGoggles(x) -> ProtectsEyesFromDangerousThings(x))", "score": 0}
{"id": "eqasc_validation_1565", "prediction": "all x y z.((SafetyGoggles(x) & Eyes(y) & DangerousThing(z)) -> ProtectsFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1565", "prediction": "all x y.((SecurityGoggles(x) & Eyes(y)) -> ProtectsFromDangerousThings(x,y))", "score": 0}
{"id": "eqasc_validation_1565", "prediction": "all x y.((SafetyGoggles(x) & Eye(y)) -> ProtectsFromDangerousThings(x,y))", "score": 0}
{"id": "eqasc_validation_1565", "prediction": "all x y z.((SafetyGoggles(x) & Eye(y) & DangerousThing(z)) -> ProtectsFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1565", "prediction": "all x.(SafetyGoggles(x) -> (ProtectsEyesFromDangerousThings(x) & ProtectsEyesFromDangerousThings(x)))", "score": 0}
{"id": "eqasc_validation_1565", "prediction": "all x.(SafetyGoggles(x) -> (ProtectsEyesFromDangerousThings(x) & UsesToProtectEyesFromDangerousThings(x)))", "score": 0}
{"id": "eqasc_validation_1565", "prediction": "all x y z.((SecurityGoggles(x) & Eyes(y) & DangerousThing(z)) -> ProtectsFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1565", "prediction": "all x y z.((SafetyGoggles(x) & Eyes(y) & DangerousThings(z)) -> ProtectsFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_1565", "prediction": "all x y.((SafetyGoggles(x) & Eyes(y)) -> (ProtectsFromDangerousThings(x,y) & ProtectsFromDangerousThings(x,y)))", "score": 0}
{"id": "eqasc_validation_1565", "prediction": "all x.(SafetyGoggles(x) -> (ProtectsEyesFromDangerousThings(x) & EyesFromDangerousThings(x)))", "score": 0}
{"id": "eqasc_validation_1565", "prediction": "all x y.((SecurityGoggles(x) & Eye(y)) -> ProtectsFromDangerousThings(x,y))", "score": 0}
{"id": "eqasc_validation_1565", "prediction": "all x y.((SafetyGoggles(x) & Eyes(y)) -> (ProtectsFromDangerousThings(x,y) | ProtectsFromDangerousThings(x,y)))", "score": 0}
{"id": "eqasc_validation_1565", "prediction": "all x.(SecurityGoggles(x) -> ProtectsEyesFromDangerousThings(x))", "score": 0}
{"id": "eqasc_validation_1565", "prediction": "all x.(SafetyGloes(x) -> ProtectsEyesFromDangerousThings(x))", "score": 0}
{"id": "eqasc_validation_1566", "prediction": "all x.((SafetyGlasses(x) & Goggles(x)) -> ProtectsEyes(x))", "score": 0}
{"id": "eqasc_validation_1566", "prediction": "all x.((SecurityGlasses(x) & Goggles(x)) -> ProtectsEyes(x))", "score": 0}
{"id": "eqasc_validation_1566", "prediction": "all x y.((SafetyGlasses(x) & Goggles(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1566", "prediction": "all x y.((SecurityGlasses(x) & Goggles(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1566", "prediction": "all x.(SafetyGlassesAndGoggles(x) -> ProtectsEyes(x))", "score": 0}
{"id": "eqasc_validation_1566", "prediction": "all x.((SafetyGlasses(x) & SafetyGoggles(x)) -> ProtectsEyes(x))", "score": 0}
{"id": "eqasc_validation_1566", "prediction": "all x.((SecurityGlasses(x) & SafetyGoggles(x)) -> ProtectsEyes(x))", "score": 0}
{"id": "eqasc_validation_1566", "prediction": "all x y.((SafetyGlass(x) & Goggles(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1566", "prediction": "all x.((SecurityGlasses(x) | Goggles(x)) -> ProtectsEyes(x))", "score": 0}
{"id": "eqasc_validation_1566", "prediction": "all x.((SafetyGlasses(x) | Goggles(x)) -> ProtectsEyes(x))", "score": 0}
{"id": "eqasc_validation_1566", "prediction": "all x y.((SecurityGlass(x) & Goggles(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1566", "prediction": "all x.(SecurityGlassesAndGoggles(x) -> ProtectsEyes(x))", "score": 0}
{"id": "eqasc_validation_1566", "prediction": "all x y z.((SafetyGlass(x) & Goggles(y) & Eye(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1566", "prediction": "all x y.((SafetyGlasses(x) & SafetyGoggles(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1566", "prediction": "all x.((SecurityGlasses(x) | SafetyGoggles(x)) -> ProtectsEyes(x))", "score": 0}
{"id": "eqasc_validation_1566", "prediction": "all x y.((SafetyGlasses(x) & Goggles(y)) -> ProtectsEyes(x))", "score": 0}
{"id": "eqasc_validation_1567", "prediction": "all x.(SafetyGlasses(x) -> (ProtectsEyes(x) & DuringExperiments(x)))", "score": 0}
{"id": "eqasc_validation_1567", "prediction": "all x y z.((SafetyGlasses(x) & Eyes(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1567", "prediction": "all x y z.((SecurityGlasses(x) & Eyes(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1567", "prediction": "all x.(SecurityGlasses(x) -> (ProtectsEyes(x) & DuringExperiments(x)))", "score": 0}
{"id": "eqasc_validation_1567", "prediction": "all x y.((SecurityGlasses(x) & Experiment(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1567", "prediction": "all x y.((SecurityGlasses(x) & Experiment(y)) -> (ProtectsEyes(x,y) & DuringExperiment(x,y)))", "score": 0}
{"id": "eqasc_validation_1567", "prediction": "all x y.((SafetyGlasses(x) & Eyes(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1567", "prediction": "all x y.((SafetyGlasses(x) & Experiment(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1567", "prediction": "all x.(SafetyGlasses(x) -> (ProtectsEyesDuringExperiments(x) & DuringExperiments(x)))", "score": 0}
{"id": "eqasc_validation_1567", "prediction": "all x y z.((SafetyGlasses(x) & Eyes(y) & Experiment(z)) -> ProtectedDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1567", "prediction": "all x.(SafetyGlasses(x) -> (ProtectsEyes(x) & DuringExperiment(x)))", "score": 0}
{"id": "eqasc_validation_1567", "prediction": "all x y.((SecurityGlasses(x) & Eyes(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1567", "prediction": "all x y.((SafetyGlasses(x) & Experiment(y)) -> (ProtectsEyes(x,y) & DuringExperiment(x,y)))", "score": 0}
{"id": "eqasc_validation_1567", "prediction": "all x y z.((SafetyGlasses(x) & Eyes(y) & Experiment(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1567", "prediction": "all x y z.((SafetyGlass(x) & Eyes(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1567", "prediction": "all x y z.((SecurityGlasses(x) & Eyes(y) & Experiment(z)) -> ProtectedDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1568", "prediction": "all x y.((LargerPupil(x) & LargerCorea(y)) -> PermitsMoreLight(x,y))", "score": 0}
{"id": "eqasc_validation_1568", "prediction": "all x y.((LargerPupil(x) & LargerCornea(y)) -> PermitsMoreLight(x,y))", "score": 0}
{"id": "eqasc_validation_1568", "prediction": "all x y.((LargerPupil(x) & LargerCorea(y)) -> PermitsMoreLightToEnter(x,y))", "score": 0}
{"id": "eqasc_validation_1568", "prediction": "all x.((LargerPupil(x) & LargerCorea(x)) -> PermitsMoreLight(x))", "score": 0}
{"id": "eqasc_validation_1568", "prediction": "all x.((LargerPupil(x) & LargerCornea(x)) -> PermitsMoreLight(x))", "score": 0}
{"id": "eqasc_validation_1568", "prediction": "all x y.((LargerPupil(x) & LargerCornea(y)) -> PermitsMoreLightToEnter(x,y))", "score": 0}
{"id": "eqasc_validation_1568", "prediction": "all x y z.((LargerPupil(x) & LargerCorea(y) & Cornea(z)) -> PermitsMoreLight(x,y,z))", "score": 0}
{"id": "eqasc_validation_1568", "prediction": "all x y z.((LargerPupil(x) & LargerCorea(y) & Cornea(z)) -> PermitsMoreLight(x,z))", "score": 0}
{"id": "eqasc_validation_1568", "prediction": "all x y z.((LargerPupil(x) & LargerCorea(y) & Cornea(z)) -> PermitsMoreLightToEnter(x,y,z))", "score": 0}
{"id": "eqasc_validation_1568", "prediction": "all x.((LargerPupil(x) & LargerCorea(x)) -> PermitsMoreLightToEnter(x))", "score": 0}
{"id": "eqasc_validation_1568", "prediction": "all x y.((LargerPupill(x) & LargerCorea(y)) -> PermitsMoreLight(x,y))", "score": 0}
{"id": "eqasc_validation_1568", "prediction": "all x.((LargerPupil(x) & LargerCornea(x)) -> PermitsMoreLightToEnter(x))", "score": 0}
{"id": "eqasc_validation_1568", "prediction": "all x.((LargerPupil(x) & LargerCoreas(x)) -> PermitsMoreLight(x))", "score": 0}
{"id": "eqasc_validation_1568", "prediction": "all x.(LargerPupil(x) & LargerCorea(x)) -> PermitsMoreLight(x))", "score": -1}
{"id": "eqasc_validation_1568", "prediction": "all x y.((LargerPupil(x) & LargerCoreas(y)) -> PermitsMoreLight(x,y))", "score": 0}
{"id": "eqasc_validation_1568", "prediction": "all x y.((LargerPupil(x) & LargerCorea(y)) -> PermitsMoreLightToEnterEye(x,y))", "score": 0}
{"id": "eqasc_validation_1569", "prediction": "all x y z.((SafetyGoggles(x) & Pupil(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1569", "prediction": "all x y z.((SafetyGoggles(x) & Pupils(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1569", "prediction": "all x.(SafetyGoggles(x) -> (ProtectsPupils(x) & DuringExperiments(x)))", "score": 0}
{"id": "eqasc_validation_1569", "prediction": "all x y.((SafetyGoggles(x) & Pupils(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1569", "prediction": "all x y.((SafetyGoggles(x) & Pupils(y)) -> ProtectsDuringExperiments(x,y))", "score": 0}
{"id": "eqasc_validation_1569", "prediction": "all x y z.((SecurityGoggles(x) & Pupils(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1569", "prediction": "all x y z.((SecurityGoggles(x) & Pupil(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1569", "prediction": "all x y.((SafetyGoggles(x) & Pupil(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1569", "prediction": "all x y z.((SafetyGoggles(x) & Pupil(y) & Experiment(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1569", "prediction": "all x y z.((SafetyGoggles(x) & Pupils(y) & Experiment(z)) -> Protects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1569", "prediction": "all x y.((SafetyGoggles(x) & Pupil(y)) -> ProtectsDuringExperiment(x,y))", "score": 0}
{"id": "eqasc_validation_1569", "prediction": "all x y z.((SafetyGoggle(x) & Pupil(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1569", "prediction": "all x y.((SafetyGoggles(x) & Pupil(y)) -> ProtectsDuringExperiments(x,y))", "score": 0}
{"id": "eqasc_validation_1569", "prediction": "all x y.((SafetyGoggles(x) & Pupils(y)) -> ProtectsDuringExperiment(x,y))", "score": 0}
{"id": "eqasc_validation_1569", "prediction": "all x y z.((SafetyGloe(x) & Pupil(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1569", "prediction": "all x y.((SecurityGoggles(x) & Pupils(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1570", "prediction": "all x.(Goggles(x) -> WornToProtectEyes(x))", "score": 0}
{"id": "eqasc_validation_1570", "prediction": "all x y.((Goggles(x) & Eyes(y)) -> WornToProtect(x,y))", "score": 0}
{"id": "eqasc_validation_1570", "prediction": "all x y.((Goggles(x) & Eye(y)) -> WornToProtect(x,y))", "score": 0}
{"id": "eqasc_validation_1570", "prediction": "all x y.((Goggle(x) & Eye(y)) -> WornToProtect(x,y))", "score": 0}
{"id": "eqasc_validation_1570", "prediction": "all x.(Goggles(x) -> (WornToProtectEyes(x) & WearedToProtectEyes(x)))", "score": 0}
{"id": "eqasc_validation_1570", "prediction": "all x.(Goggles(x) -> (WornToProtectEyes(x) & WornToProtectEyes(x)))", "score": 0}
{"id": "eqasc_validation_1570", "prediction": "all x.(Goggle(x) -> WornToProtectEyes(x))", "score": 0}
{"id": "eqasc_validation_1570", "prediction": "all x.(Goggles(x) -> WearedToProtectEyes(x))", "score": 0}
{"id": "eqasc_validation_1570", "prediction": "all x y.((Goggle(x) & Eyes(y)) -> WornToProtect(x,y))", "score": 0}
{"id": "eqasc_validation_1570", "prediction": "all x.(Goggles(x) -> (WornToProtectEyes(x) | WornToProtectEyes(x)))", "score": 0}
{"id": "eqasc_validation_1570", "prediction": "all x.(Gggles(x) -> WornToProtectEyes(x))", "score": 0}
{"id": "eqasc_validation_1570", "prediction": "all x.(Goggles(x) -> (WornToProtectEyes(x)))", "score": 0}
{"id": "eqasc_validation_1570", "prediction": "all x.(Goggles(x) -> (WornToProtectEyes(x) & WearableToProtectEyes(x)))", "score": 0}
{"id": "eqasc_validation_1570", "prediction": "all x.(Goggles(x) -> WearableToProtectEyes(x))", "score": 0}
{"id": "eqasc_validation_1571", "prediction": "all x.(Goggles(x) -> ForProtection(x))", "score": 0}
{"id": "eqasc_validation_1571", "prediction": "all x y.((Goggles(x) & Goggles(y)) -> ForProtection(x,y))", "score": 0}
{"id": "eqasc_validation_1571", "prediction": "all x y z.((Goggles(x) & Goggles(y) & Goggles(z)) -> ForProtection(x,y,z))", "score": 0}
{"id": "eqasc_validation_1571", "prediction": "all x y.((Goggle(x) & Goggles(y)) -> ForProtection(x,y))", "score": 0}
{"id": "eqasc_validation_1571", "prediction": "all x.(Gggles(x) -> ForProtection(x))", "score": 0}
{"id": "eqasc_validation_1571", "prediction": "all x.(Goggles(x) -> (ForProtection(x) & ForProtection(x)))", "score": 0}
{"id": "eqasc_validation_1571", "prediction": "all x y.((Goggles(x) & Goggles(y)) -> ForProtection(x))", "score": 0}
{"id": "eqasc_validation_1571", "prediction": "all x y.((Goggles(x) & Protective(y)) -> ForProtection(x,y))", "score": 0}
{"id": "eqasc_validation_1571", "prediction": "all x y z.((Goggles(x) & Goggles(y) & Protection(z)) -> ForProtection(x,y,z))", "score": 0}
{"id": "eqasc_validation_1571", "prediction": "all x y z.((Goggles(x) & Goggles(y) & Goggles(z)) -> (ForProtection(x,y,z) & ForProtection(y,z)))", "score": 0}
{"id": "eqasc_validation_1571", "prediction": "all x.(Goope(x) -> ForProtection(x))", "score": 0}
{"id": "eqasc_validation_1571", "prediction": "all x y z.((Goggles(x) & Goggles(y) & Goggles(z)) -> ForProtection(x,y))", "score": 0}
{"id": "eqasc_validation_1571", "prediction": "all x y z.((Goggles(x) & Goggles(y) & Goggles(z)) -> (ForProtection(x,y) & ForProtection(y,z)))", "score": 0}
{"id": "eqasc_validation_1571", "prediction": "all x y z.((Goggles(x) & Goggles(y) & Goggles(z)) -> (ForProtection(x,y,z) & ForProtection(x,y)))", "score": 0}
{"id": "eqasc_validation_1571", "prediction": "all x y z.((Goggles(x) & Goggles(y) & Goggles(z)) -> (ForProtection(x,y) & ForProtection(x,z)))", "score": 0}
{"id": "eqasc_validation_1572", "prediction": "all x.(Cnidarian(x) -> (Invertebrate(x) & (Jellyfish(x) | Coral(x))))", "score": 35}
{"id": "eqasc_validation_1572", "prediction": "all x.(Cnidarian(x) -> (Invertebrate(x) & (Jellyfish(x) | Corals(x))))", "score": 30}
{"id": "eqasc_validation_1572", "prediction": "all x.(Cnidarian(x) -> (Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x)))", "score": 21}
{"id": "eqasc_validation_1572", "prediction": "all x.(Cnidarian(x) -> (Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x)))", "score": 21}
{"id": "eqasc_validation_1572", "prediction": "all x.(Cnidarian(x) -> (Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x)))", "score": 21}
{"id": "eqasc_validation_1572", "prediction": "all x.(Cnidarian(x) -> (Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x)))", "score": 21}
{"id": "eqasc_validation_1572", "prediction": "all x.(Cnidarian(x) -> (Invertebrate(x) & Invertebrate(x) & (Jellyfish(x) | Coral(x))))", "score": 35}
{"id": "eqasc_validation_1572", "prediction": "all x.(Cnidarian(x) -> (Invertebrate(x) & Jellyfish(x) & Coral(x)))", "score": 35}
{"id": "eqasc_validation_1572", "prediction": "all x.(Cnidarian(x) -> (Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x)))", "score": 21}
{"id": "eqasc_validation_1572", "prediction": "all x.(Cnidarian(x) -> (Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x)))", "score": 21}
{"id": "eqasc_validation_1572", "prediction": "all x.(Cnidarian(x) -> (Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x)))", "score": 21}
{"id": "eqasc_validation_1572", "prediction": "all x.(Cnidarian(x) -> (Invertebrate(x) & Invertebrate(x) & Jellyfish(x) & Coral(x)))", "score": 35}
{"id": "eqasc_validation_1572", "prediction": "all x y.((Cnidarian(x) & (Jellyfish(y) | Coral(y))) -> Invertebrate(x))", "score": 14}
{"id": "eqasc_validation_1572", "prediction": "all x.(Cnidarian(x) -> (Invertebrate(x) & (Jerkyfish(x) | Coral(x))))", "score": 21}
{"id": "eqasc_validation_1572", "prediction": "all x.(Cnidarian(x) -> (Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Jellyfish(x) & Coral(x)))", "score": 35}
{"id": "eqasc_validation_1573", "prediction": "all x.(Cnidarian(x) -> AquaticAnimal(x))", "score": 0}
{"id": "eqasc_validation_1573", "prediction": "all x.(Cnidarian(x) -> (AquaticAnimal(x) & AquaticAnimal(x)))", "score": 0}
{"id": "eqasc_validation_1573", "prediction": "all x y.((Cnidarian(x) & AquaticAnimal(y)) -> AquaticAnimal(x))", "score": 0}
{"id": "eqasc_validation_1573", "prediction": "all x.(Cnidarian(x) -> (AquaticAnimal(x) | AquaticAnimal(x)))", "score": 0}
{"id": "eqasc_validation_1573", "prediction": "all x.(Cnidarian(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_1573", "prediction": "all x.(Cnidarian(x) -> (AquaticAnimal(x) & CompletelyAquatic(x)))", "score": 0}
{"id": "eqasc_validation_1573", "prediction": "all x y.((Cnidarian(x) & AquaticAnimal(y)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_1573", "prediction": "all x.(Cnidarian(x) -> (AquaticAnimal(x) & TotallyAquatic(x)))", "score": 0}
{"id": "eqasc_validation_1573", "prediction": "all x y.((Cnidarian(x) & AquaticAnimal(y)) -> CompletelyAnimal(x,y))", "score": 0}
{"id": "eqasc_validation_1573", "prediction": "all x y.((Cnidarian(x) & AquaticAnimal(y)) -> AquaticAnimal(x,y))", "score": 0}
{"id": "eqasc_validation_1573", "prediction": "all x y.((Cnidarian(x) & AquaticAnimal(y)) -> Completely(x,y))", "score": 0}
{"id": "eqasc_validation_1573", "prediction": "all x.(Cnidarian(x) -> (AquaticAnimal(x) & -AquaticAnimal(x)))", "score": 0}
{"id": "eqasc_validation_1573", "prediction": "all x.(Cnidarian(x) -> TotallyAquaticAnimal(x))", "score": 0}
{"id": "eqasc_validation_1573", "prediction": "all x y.((Cnidarian(x) & AquaticAnimal(y)) -> Animal(x,y))", "score": 0}
{"id": "eqasc_validation_1574", "prediction": "all x.(Jellyfish(x) -> AquaticInvertebrate(x))", "score": 0}
{"id": "eqasc_validation_1574", "prediction": "all x.(Jellowfish(x) -> AquaticInvertebrate(x))", "score": 0}
{"id": "eqasc_validation_1574", "prediction": "all x y.((Jellyfish(x) & AquaticInvertebrate(y)) -> Invertebrate(x))", "score": 0}
{"id": "eqasc_validation_1574", "prediction": "all x y.((Jellyfish(x) & AquaticInvertebrate(y)) -> AquaticInvertebrate(x))", "score": 0}
{"id": "eqasc_validation_1574", "prediction": "all x y.((Jellyfish(x) & AquaticInvertebrate(y)) -> Invertebrate(x,y))", "score": 0}
{"id": "eqasc_validation_1574", "prediction": "all x y z.((Jellyfish(x) & AquaticInvertebrate(y) & Invertebrate(z)) -> (AquaticInvertebrate(x) & Invertebrate(y) & Invertebrate(z)))", "score": 0}
{"id": "eqasc_validation_1574", "prediction": "all x y z.((Jellyfish(x) & AquaticInvertebrate(y) & AquaticInvertebrate(z)) -> (AquaticInvertebrate(x) & AquaticInvertebrate(y) & AquaticInvertebrate(z)))", "score": 0}
{"id": "eqasc_validation_1574", "prediction": "all x y.((Jellyfish(x) & AquaticInvertebrate(y)) -> (AquaticInvertebrate(x) & AquaticInvertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1574", "prediction": "all x y.((Jellyfish(x) & AquaticInvertebrate(y)) -> (AquaticInvertebrate(x) & AquaticInvertebrate(y)))", "score": 0}
{"id": "eqasc_validation_1574", "prediction": "all x y z.((Jellyfish(x) & AquaticInvertebrate(y) & AquaticInvertebrate(z)) -> (AquaticInvertebrate(x) & Invertebrate(y) & Invertebrate(z)))", "score": 0}
{"id": "eqasc_validation_1574", "prediction": "all x y z.((Jellyfish(x) & AquaticInvertebrate(y) & AquaticInvertebrate(z)) -> (AquaticInvertebrate(x) & AquaticInvertebrate(y)))", "score": 0}
{"id": "eqasc_validation_1574", "prediction": "all x y z.((Jellyfish(x) & AquaticInvertebrate(y) & AquaticInvertebrate(z)) -> (AquaticInvertebrate(x) | AquaticInvertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1574", "prediction": "all x y z.((Jellyfish(x) & AquaticInvertebrate(y) & Invertebrate(z)) -> (AquaticInvertebrate(x) & Invertebrate(y)))", "score": 0}
{"id": "eqasc_validation_1574", "prediction": "all x.((Jellyfish(x) & AquaticInvertebrate(x)) -> Invertebrate(x))", "score": 0}
{"id": "eqasc_validation_1574", "prediction": "all x.(Jellyfish(x) -> (AquaticInvertebrate(x) & Invertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1575", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) & (Jellyfish(x) | Coral(x))))", "score": 0}
{"id": "eqasc_validation_1575", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) & (Jellyfish(x) | Corals(x))))", "score": 0}
{"id": "eqasc_validation_1575", "prediction": "all x.(Coelenterates(x) -> (Invertebrate(x) & (Jellyfish(x) | Coral(x))))", "score": 0}
{"id": "eqasc_validation_1575", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) & Invertebrate(x) & (Jellyfish(x) | Coral(x))))", "score": 0}
{"id": "eqasc_validation_1575", "prediction": "all x y.((Coelenterate(x) & (Jellyfish(y) | Coral(y))) -> Invertebrate(x))", "score": 0}
{"id": "eqasc_validation_1575", "prediction": "all x.(Coelenterates(x) -> (Invertebrate(x) & (Jellyfish(x) | Corals(x))))", "score": 0}
{"id": "eqasc_validation_1575", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) | Invertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1575", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1575", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1575", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1575", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1575", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) & Jellyfish(x) & Coral(x)))", "score": 0}
{"id": "eqasc_validation_1575", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) & Invertebrate(x) & (Jellyfish(x) | Corals(x))))", "score": 0}
{"id": "eqasc_validation_1575", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) & (J jellyfish(x) | Coral(x))))", "score": -1}
{"id": "eqasc_validation_1575", "prediction": "all x y.((Coelenterate(x) & (Jellyfish(y) | Coral(y))) -> Invertebrate(x,y))", "score": 0}
{"id": "eqasc_validation_1576", "prediction": "all x.(Invertebrate(x) -> (-Vertebrae(x) | -Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1576", "prediction": "all x.(Invertebrate(x) -> (-Vertebrae(x) & -Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1576", "prediction": "all x.(Invertebrates(x) -> (-Vertebrae(x) | -Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1576", "prediction": "all x.(Invertebrates(x) -> (-Vertebrae(x) & -Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1576", "prediction": "all x.(Invertebrate(x) -> (NoVertebrae(x) | NoBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1576", "prediction": "all x.(Invertebrate(x) -> (-Vertebrae(x) | NoBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1576", "prediction": "all x.(Invertebrates(x) -> (NoVertebrae(x) | NoBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1576", "prediction": "all x.(Invertebrate(x) -> (-Vertebrae(x) | Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1576", "prediction": "all x.(Invertebrate(x) -> (NoVertebrae(x) & NoBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1576", "prediction": "all x.(Invertebrates(x) -> (-Vertebrae(x) | NoBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1576", "prediction": "all x.(Invertebrate(x) -> (NoVertebrae(x) & -HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1576", "prediction": "all x.(Invertebrates(x) -> (NoVertebrae(x) & NoBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1576", "prediction": "all x.(Invertebrates(x) -> (-Vertebrae(x) | Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1576", "prediction": "all x.(Invertebrate(x) -> (HasNoVertebrae(x) | HasNoBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1576", "prediction": "all x.(Invertebrate(x) -> (NoVertebrae(x) & -Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1576", "prediction": "all x.(Invertebrate(x) -> (-HasVertebrae(x) | HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1577", "prediction": "all x.((Jellyfish(x) | Coral(x)) -> (-Vertebrae(x) & -Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1577", "prediction": "all x.((Jellyfish(x) | Coral(x)) -> (-Vertebrae(x) | -Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1577", "prediction": "all x y.((Jellyfish(x) & Coral(y)) -> (-Vertebrae(x) & -Backbone(y)))", "score": 0}
{"id": "eqasc_validation_1577", "prediction": "all x y.((Jellyfish(x) & Coral(y)) -> (-Vertebrae(x) | -Backbone(y)))", "score": 0}
{"id": "eqasc_validation_1577", "prediction": "all x.((Jellyfish(x) & Coral(x)) -> (-Vertebrae(x) & -Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1577", "prediction": "all x y.((Jellyfish(x) & Coral(y)) -> (-Vertebrae(x) | -Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1577", "prediction": "all x y.((Jellyfish(x) & Coral(y)) -> (-Vertebrae(x) & -Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1577", "prediction": "all x.((Jellyfish(x) | Coral(x)) -> (-Vertebrae(x) | NoBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1577", "prediction": "all x y.((Jellyfish(x) & Coral(y)) -> (-Vertebrae(x) | NoBackbone(y)))", "score": 0}
{"id": "eqasc_validation_1577", "prediction": "all x.((Jellyfish(x) & Coral(x)) -> (-Vertebrae(x) | -Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1577", "prediction": "all x y.((Jellyfish(x) | Coral(x)) -> (-Vertebrae(y) | -Backbone(y)))", "score": 0}
{"id": "eqasc_validation_1577", "prediction": "all x y.((Jellyfish(x) | Coral(y)) -> (-Vertebrae(x) & -Backbone(y)))", "score": 0}
{"id": "eqasc_validation_1577", "prediction": "all x y.((Jellyfish(x) & Coral(y)) -> (-Vertebrae(x,y) | -Backbone(x,y)))", "score": 0}
{"id": "eqasc_validation_1577", "prediction": "all x.((Jellyfish(x) | Coral(x)) -> -(Vertebrae(x) | Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1577", "prediction": "all x.(Jellyfish(x) | Coral(x)) -> (-Vertebrae(x) & -Backbone(x)))", "score": -1}
{"id": "eqasc_validation_1577", "prediction": "all x y.((Jellyfish(x) | Coral(x)) -> (-Vertebrae(y) & -Backbone(y)))", "score": 0}
{"id": "eqasc_validation_1578", "prediction": "all x.(Invertebrate(x) -> (Animal(x) & -Backbone(x)))", "score": 42}
{"id": "eqasc_validation_1578", "prediction": "all x.(Invertebrate(x) -> Animal(x) & -Backbone(x))", "score": 42}
{"id": "eqasc_validation_1578", "prediction": "all x.(Invertebrates(x) -> (Animal(x) & -Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1578", "prediction": "all x.(Invertebrate(x) -> (Animal(x) & -Backbones(x)))", "score": 42}
{"id": "eqasc_validation_1578", "prediction": "all x.(Invertebrate(x) -> Animal(x) & -HasBackbone(x))", "score": 28}
{"id": "eqasc_validation_1578", "prediction": "all x.(Invertebrate(x) -> AnimalWithoutBackbone(x))", "score": 0}
{"id": "eqasc_validation_1578", "prediction": "all x.(Invertebrate(x) -> (Animal(x) & -HasBackbone(x)))", "score": 28}
{"id": "eqasc_validation_1578", "prediction": "all x.(Invertebrates(x) -> Animal(x) & -Backbone(x))", "score": 0}
{"id": "eqasc_validation_1578", "prediction": "all x.(Invertebrate(x) -> Animal(x))", "score": 0}
{"id": "eqasc_validation_1578", "prediction": "all x.(Invertebrate(x) -> Animal(x) & -Backbones(x))", "score": 42}
{"id": "eqasc_validation_1578", "prediction": "all x.(Invertebrate(x) -> -Backbone(x))", "score": 42}
{"id": "eqasc_validation_1578", "prediction": "all x.(Invertebrates(x) -> (Animal(x) & -Backbones(x)))", "score": 0}
{"id": "eqasc_validation_1578", "prediction": "all x.(Invertebrate(x) -> -HasBackbone(x))", "score": 28}
{"id": "eqasc_validation_1578", "prediction": "all x.(Invertebrates(x) -> Animal(x) & -HasBackbone(x))", "score": 0}
{"id": "eqasc_validation_1579", "prediction": "all x.(Cnidarian(x) -> -HasBackbone(x))", "score": 42}
{"id": "eqasc_validation_1579", "prediction": "all x.(Cnidarian(x) -> -Backbone(x))", "score": 42}
{"id": "eqasc_validation_1579", "prediction": "all x y.((Cnidarian(x) & Cnidarian(y)) -> -HasBackbone(x,y))", "score": 0}
{"id": "eqasc_validation_1579", "prediction": "all x.(Cnidarian(x) -> (-Backbone(x) & Cnidarian(x)))", "score": 42}
{"id": "eqasc_validation_1579", "prediction": "all x.(Cnidarian(x) -> (-Backbone(x) & -Backbone(x)))", "score": 42}
{"id": "eqasc_validation_1579", "prediction": "all x.(Cnidarian(x) -> (HasNoBackbone(x) & -HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1579", "prediction": "all x y z.((Cnidarian(x) & Cnidarian(y) & Backbone(z)) -> -HasBackbone(x,y,z))", "score": 0}
{"id": "eqasc_validation_1579", "prediction": "all x.(Cnidarian(x) -> (-HasBackbone(x) & -HasBackbone(x)))", "score": 42}
{"id": "eqasc_validation_1579", "prediction": "all x.(Cnidarian(x) -> -Backbones(x))", "score": 28}
{"id": "eqasc_validation_1579", "prediction": "all x y.((Cnidarian(x) & Cnidarian(y)) -> -Backbone(x,y))", "score": 0}
{"id": "eqasc_validation_1579", "prediction": "all x.(Cnidarian(x) -> (-Backbones(x) & Cnidarian(x)))", "score": 28}
{"id": "eqasc_validation_1579", "prediction": "all x.(Cnidarian(x) -> (-Backbones(x) & -Backbones(x)))", "score": 28}
{"id": "eqasc_validation_1579", "prediction": "all x.(Cnidarian(x) -> (-Backbone(x) | Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1579", "prediction": "all x.(Cnidarian(x) -> -HasBackbones(x))", "score": 0}
{"id": "eqasc_validation_1579", "prediction": "all x y.((Cnidarian(x) & Cnidarian(y)) -> (-Backbone(x,y) & -Backbone(y)))", "score": 0}
{"id": "eqasc_validation_1579", "prediction": "all x y.((Cnidarian(x) & Cnidarian(y)) -> -Backbones(x,y))", "score": 0}
{"id": "eqasc_validation_1580", "prediction": "all x.(Jellyfish(x) -> HydrostaticSkeleton(x))", "score": 0}
{"id": "eqasc_validation_1580", "prediction": "all x.(Jellyfish(x) -> HasHydrostaticSkeleton(x))", "score": 0}
{"id": "eqasc_validation_1580", "prediction": "all x y.((Jellyfish(x) & HydrostaticSkeleton(y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_1580", "prediction": "all x.(Jellyfish(x) -> (HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x)))", "score": 0}
{"id": "eqasc_validation_1580", "prediction": "all x.(Jellyfish(x) -> (HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x)))", "score": 0}
{"id": "eqasc_validation_1580", "prediction": "all x.(Jellyfish(x) -> (HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x)))", "score": 0}
{"id": "eqasc_validation_1580", "prediction": "all x.(Jellyfish(x) -> (HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x))", "score": -1}
{"id": "eqasc_validation_1580", "prediction": "all x.(Jellyfish(x) -> (HydrostaticSkeleton(x) & HasHydrostaticSkeleton(x) & HasHydrostaticSkeleton(x) & HasHydrostaticSkeleton(x) & HasHydrostaticSkeleton(x) & HasHydrostaticSkeleton(x) & HasHydrostaticSkeleton(x)))", "score": 0}
{"id": "eqasc_validation_1580", "prediction": "all x.(Jellyfish(x) -> (HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x))", "score": -1}
{"id": "eqasc_validation_1580", "prediction": "all x.(Jellyfish(x) -> (HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x)))", "score": 0}
{"id": "eqasc_validation_1580", "prediction": "all x.(Jellyfish(x) -> (HydrostaticSkeleton(x) & HasHydrostaticSkeleton(x) & HasHydrostaticSkeleton(x) & HasHydrostaticSkeleton(x) & HasHydrostaticSkeleton(x) & HasHydrostaticSkeleton(x)))", "score": 0}
{"id": "eqasc_validation_1580", "prediction": "all x.(Jellyfish(x) -> (HydrostaticSkeleton(x) & HasHydrostaticSkeleton(x)))", "score": 0}
{"id": "eqasc_validation_1580", "prediction": "all x.(Jellyfish(x) -> (HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) -> HydrostaticSkeleton(x))", "score": -1}
{"id": "eqasc_validation_1580", "prediction": "all x.(Jellyfish(x) -> (HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x)))", "score": 0}
{"id": "eqasc_validation_1580", "prediction": "all x.(Jellyfish(x) -> (HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x)))", "score": 0}
{"id": "eqasc_validation_1580", "prediction": "all x.(Jellyfish(x) -> (HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x) & HydrostaticSkeleton(x))))", "score": -1}
{"id": "eqasc_validation_1581", "prediction": "all x.(Cnidarian(x) -> (Radial(x) & Tentacled(x) & LivesInSeas(x)))", "score": 0}
{"id": "eqasc_validation_1581", "prediction": "all x.(Cnidarian(x) -> (RadialTentacled(x) & LivesInSeas(x)))", "score": 0}
{"id": "eqasc_validation_1581", "prediction": "all x.(Cnidarian(x) -> (Animal(x) & Radial(x) & Tentacled(x) & LivesInSeas(x)))", "score": 0}
{"id": "eqasc_validation_1581", "prediction": "all x.(Cnidarian(x) -> (RadialAnimal(x) & Tentacled(x) & LivesInSeas(x)))", "score": 0}
{"id": "eqasc_validation_1581", "prediction": "all x.(Cnidarian(x) -> (RadialTentacledAnimal(x) & LivesInSeas(x)))", "score": 0}
{"id": "eqasc_validation_1581", "prediction": "all x.(Cnidarian(x) -> (Radial(x) & Tentacled(x) & LivesMostlyInSeas(x)))", "score": 0}
{"id": "eqasc_validation_1581", "prediction": "all x.(Cnidarian(x) -> (Rotary(x) & Tentacled(x) & LivesInSeas(x)))", "score": 0}
{"id": "eqasc_validation_1582", "prediction": "all x.((Jellyfish(x) | Coral(x)) -> (Radial(x) & Tentacled(x) & LivesInSeas(x)))", "score": 0}
{"id": "eqasc_validation_1582", "prediction": "all x.((Jellyfish(x) | Coral(x)) -> (RadialTentacledAnimal(x) & LivesInSeas(x)))", "score": 0}
{"id": "eqasc_validation_1582", "prediction": "all x.((Jellyfish(x) | Coral(x)) -> (RadialTentacled(x) & LivesInSeas(x)))", "score": 0}
{"id": "eqasc_validation_1582", "prediction": "all x.((Jellyfish(x) | Coral(x)) -> (RadialAnimal(x) & Tentacled(x) & LivesInSeas(x)))", "score": 0}
{"id": "eqasc_validation_1582", "prediction": "all x.((Jellyfish(x) | Coral(x)) -> (Rotal(x) & Tentacled(x) & LivesInSeas(x)))", "score": 0}
{"id": "eqasc_validation_1582", "prediction": "all x y.((Jellyfish(x) & Coral(y)) -> (Radial(x) & Tentacled(x) & LivesInSeas(x)))", "score": 0}
{"id": "eqasc_validation_1582", "prediction": "all x.((Jellyfish(x) | Coral(x)) -> (Rotary(x) & Tentacled(x) & LivesInSeas(x)))", "score": 0}
{"id": "eqasc_validation_1582", "prediction": "all x.((Jellyfish(x) | Coral(x)) -> (Radial(x) & Tentacled(x) & LivesMostlyInSeas(x)))", "score": 0}
{"id": "eqasc_validation_1582", "prediction": "all x.((Jellyfish(x) | Corals(x)) -> (RadialTentacledAnimal(x) & LivesInSeas(x)))", "score": 0}
{"id": "eqasc_validation_1582", "prediction": "all x y.((Jellyfish(x) & Coral(y)) -> (RadialTentacledAnimal(x) & LivesInSeas(x)))", "score": 0}
{"id": "eqasc_validation_1582", "prediction": "all x y.((Jellyfish(x) & Coral(y)) -> (Radial(x) & Tentacled(x) & LivesInSeas(y)))", "score": 0}
{"id": "eqasc_validation_1583", "prediction": "all x.(Jellyfish(x) -> (Aquatic(x) & Aquatic(x)))", "score": 0}
{"id": "eqasc_validation_1583", "prediction": "all x.(Jellyfish(x) -> (Aquatic(x) & Aquatic(x) & Aquatic(x)))", "score": 0}
{"id": "eqasc_validation_1583", "prediction": "all x.(Jellyfish(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_1583", "prediction": "all x.(Jellyfish(x) -> (Aquatic(x) & TotallyAquatic(x)))", "score": 0}
{"id": "eqasc_validation_1583", "prediction": "all x.(Jellyfish(x) -> (Aquatic(x) & Aquatic(x) & Aquatic(x) & Aquatic(x)))", "score": 0}
{"id": "eqasc_validation_1583", "prediction": "all x.(Jellyfish(x) -> (Aquatic(x) | Aquatic(x)))", "score": 0}
{"id": "eqasc_validation_1583", "prediction": "all x.(Jellyfish(x) -> (Aquatic(x) & Aquatic(x) & TotallyAquatic(x)))", "score": 0}
{"id": "eqasc_validation_1583", "prediction": "all x.(Jellyfish(x) -> (Aquatic(x) & Aquatic(x) & Aquatic(x) & Aquatic(x) & Aquatic(x)))", "score": 0}
{"id": "eqasc_validation_1583", "prediction": "all x.(Jellyfish(x) -> (AquaticJellyfish(x) & AquaticJellyfish(x)))", "score": 0}
{"id": "eqasc_validation_1583", "prediction": "all x.(Jellyfish(x) -> (Aquatic(x) & Aquatic(x) & CompletelyAquatic(x)))", "score": 0}
{"id": "eqasc_validation_1583", "prediction": "all x y.((Jellyfish(x) & Aquatic(y)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_1583", "prediction": "all x.(Jellyfish(x) -> (Aquatic(x) & Aquatic(x) & ContainsAquatic(x)))", "score": 0}
{"id": "eqasc_validation_1583", "prediction": "all x.(Jellyfish(x) -> (Aquatic(x) & CompletelyAquatic(x)))", "score": 0}
{"id": "eqasc_validation_1583", "prediction": "all x.(Jellyfish(x) -> (AquaticJellyfish(x) & AquaticJellyfish(x) & AquaticJellyfish(x)))", "score": 0}
{"id": "eqasc_validation_1583", "prediction": "all x.(Jellyfish(x) -> (Aquatic(x) & Aquatic(x) & Sealed(x)))", "score": 0}
{"id": "eqasc_validation_1583", "prediction": "all x.(Jellyfish(x) -> (Aquatic(x) & Aquatic(x) & -Aquatic(x)))", "score": 0}
{"id": "eqasc_validation_1584", "prediction": "all x.(Invertebrate(x) -> (Animal(x) & -Spine(x) & -Backbone(x)))", "score": 14}
{"id": "eqasc_validation_1584", "prediction": "all x.(Invertebrate(x) -> (Animal(x) & -HasSpine(x) & -HasBackbone(x)))", "score": 13}
{"id": "eqasc_validation_1584", "prediction": "all x.(Invertebrate(x) -> (Animal(x) & -HasSpines(x) & -HasBackbone(x)))", "score": 13}
{"id": "eqasc_validation_1584", "prediction": "all x.(Invertebrate(x) -> (Animal(x) & -Spines(x) & -Backbone(x)))", "score": 14}
{"id": "eqasc_validation_1584", "prediction": "all x.(Invertebrate(x) -> (Animal(x) & -(Spine(x) | Backbone(x)))))", "score": -1}
{"id": "eqasc_validation_1584", "prediction": "all x.(Invertebrate(x) -> (Animal(x) & NoSpine(x) & -HasBackbone(x)))", "score": 13}
{"id": "eqasc_validation_1584", "prediction": "all x.(Invertebrate(x) -> (Animal(x) & -(HasSpine(x) | HasBackbone(x))))", "score": 13}
{"id": "eqasc_validation_1584", "prediction": "all x.(Invertebrate(x) -> (Animal(x) & NoSpines(x) & -HasBackbone(x)))", "score": 13}
{"id": "eqasc_validation_1585", "prediction": "all x.((Cnidarian(x) & (Jellyfish(x) | Coral(x))) -> NoBackbone(x))", "score": 0}
{"id": "eqasc_validation_1585", "prediction": "all x.((Cnidarian(x) & (Jellyfish(x) | Corals(x))) -> NoBackbone(x))", "score": 0}
{"id": "eqasc_validation_1585", "prediction": "all x.((Cnidarian(x) & (Jellyfish(x) | Coral(x))) -> -HasBackbone(x))", "score": 30}
{"id": "eqasc_validation_1585", "prediction": "all x.((Cnidarian(x) & (Jellyfish(x) | Corals(x))) -> -HasBackbone(x))", "score": 5}
{"id": "eqasc_validation_1585", "prediction": "all x.((Cnidarian(x) & (Jellyfish(x) | Coral(x))) -> -Backbone(x))", "score": 12}
{"id": "eqasc_validation_1585", "prediction": "all x.((Cnidarian(x) & (Jellyfish(x) | Corals(x))) -> -Backbone(x))", "score": 2}
{"id": "eqasc_validation_1585", "prediction": "all x y.((Cnidarian(x) & (Jellyfish(y) | Coral(y))) -> -HasBackbone(x,y))", "score": 0}
{"id": "eqasc_validation_1585", "prediction": "all x y.((Cnidarian(x) & (Jellyfish(y) | Coral(y))) -> -HasBackbone(x))", "score": 30}
{"id": "eqasc_validation_1585", "prediction": "all x.(Cnidarian(x) -> (Jellyfish(x) | Coral(x)) & -HasBackbone(x)))", "score": -1}
{"id": "eqasc_validation_1585", "prediction": "all x y.((Cnidarian(x) & (Jellyfish(y) | Coral(y))) -> NoBackbone(x))", "score": 0}
{"id": "eqasc_validation_1585", "prediction": "all x y.((Cnidarian(x) & (Jellyfish(y) | Coral(y))) -> -Backbone(x))", "score": 12}
{"id": "eqasc_validation_1585", "prediction": "all x y.((Cnidarian(x) & (Jellyfish(y) | Coral(y))) -> -Backbone(x,y))", "score": 0}
{"id": "eqasc_validation_1585", "prediction": "all x.(Cnidarian(x) -> ((Jellyfish(x) | Corals(x)) & -Backbone(x)))", "score": 2}
{"id": "eqasc_validation_1585", "prediction": "all x.(Cnidarian(x) -> (Jellyfish(x) | Corals(x)) & -HasBackbone(x)))", "score": -1}
{"id": "eqasc_validation_1585", "prediction": "all x y.((Cnidarian(x) & (Jellyfish(y) | Corals(y))) -> -HasBackbone(x,y))", "score": 0}
{"id": "eqasc_validation_1585", "prediction": "all x y.((Cnidarian(x) & (Jellyfish(y) | Coral(y))) -> NoBackbone(x,y))", "score": 0}
{"id": "eqasc_validation_1586", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) & (Jellyfish(x) | Coral(x))))", "score": 0}
{"id": "eqasc_validation_1586", "prediction": "all x.(Coelenterates(x) -> (Invertebrate(x) & (Jellyfish(x) | Coral(x))))", "score": 0}
{"id": "eqasc_validation_1586", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) & (Jellyfish(x) | Corals(x))))", "score": 0}
{"id": "eqasc_validation_1586", "prediction": "all x.(Coelenterates(x) -> (Invertebrate(x) & (Jellyfish(x) | Corals(x))))", "score": 0}
{"id": "eqasc_validation_1586", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) & Invertebrate(x) & (Jellyfish(x) | Coral(x))))", "score": 0}
{"id": "eqasc_validation_1586", "prediction": "all x.(Coelenterates(x) -> (Invertebrate(x) & Invertebrate(x) & (Jellyfish(x) | Coral(x))))", "score": 0}
{"id": "eqasc_validation_1586", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) & Invertebrate(x) & (Jellyfish(x) | Corals(x))))", "score": 0}
{"id": "eqasc_validation_1586", "prediction": "all x y.((Coelenterate(x) & (Jellyfish(y) | Coral(y))) -> Invertebrate(x))", "score": 0}
{"id": "eqasc_validation_1586", "prediction": "all x.(Coelenterates(x) -> (Invertebrate(x) & Invertebrate(x) & (Jellyfish(x) | Corals(x))))", "score": 0}
{"id": "eqasc_validation_1586", "prediction": "all x y z.((Coelenterate(x) & Jellyfish(y) & Coral(z)) -> (Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1586", "prediction": "all x y z.((Coelenterate(x) & Jellyfish(y) & Coral(z)) -> (Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1586", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Jellyfish(x) & Coral(x)))", "score": 0}
{"id": "eqasc_validation_1586", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Jellyfish(x) & Coral(x)))", "score": 0}
{"id": "eqasc_validation_1586", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Invertebrate(x) & Jellyfish(x) & Coral(x)))", "score": 0}
{"id": "eqasc_validation_1587", "prediction": "all x.((Anenome(x) | Coral(x)) -> Invertebrate(x))", "score": 0}
{"id": "eqasc_validation_1587", "prediction": "all x y.((Anenome(x) & Coral(y)) -> Invertebrate(x))", "score": 0}
{"id": "eqasc_validation_1587", "prediction": "all x y.((Anenome(x) & Coral(y)) -> (Invertebrate(x) | Invertebrate(y)))", "score": 0}
{"id": "eqasc_validation_1587", "prediction": "all x.(Invertebrate(x) -> (Anenome(x) | Coral(x)))", "score": 0}
{"id": "eqasc_validation_1587", "prediction": "all x y.((Anenome(x) & Coral(y)) -> (Invertebrate(x) & Invertebrate(y)))", "score": 0}
{"id": "eqasc_validation_1587", "prediction": "all x.((Anenome(x) & Coral(x)) -> Invertebrate(x))", "score": 0}
{"id": "eqasc_validation_1587", "prediction": "all x y z.((Anenome(x) & Coral(y) & Invertebrate(z)) -> (Invertebrate(x) | Invertebrate(y)))", "score": 0}
{"id": "eqasc_validation_1587", "prediction": "all x.((Anenome(x) | Coral(x)) -> Invertebrates(x))", "score": 0}
{"id": "eqasc_validation_1587", "prediction": "all x y z.((Anenome(x) & Coral(y) & Invertebrate(z)) -> (Invertebrate(x) & Invertebrate(y)))", "score": 0}
{"id": "eqasc_validation_1587", "prediction": "all x y.((Anenome(x) | Coral(y)) -> Invertebrate(x))", "score": 0}
{"id": "eqasc_validation_1587", "prediction": "all x.((Anesome(x) | Coral(x)) -> Invertebrate(x))", "score": 0}
{"id": "eqasc_validation_1587", "prediction": "all x y.((Anenome(x) & Coral(y)) -> (Invertebrate(x) & Invertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1587", "prediction": "all x.((Anemoe(x) | Coral(x)) -> Invertebrate(x))", "score": 0}
{"id": "eqasc_validation_1587", "prediction": "all x y z.((Anenome(x) & Coral(y) & Invertebrate(z)) -> (Invertebrate(x,y) & Invertebrate(y)))", "score": 0}
{"id": "eqasc_validation_1587", "prediction": "all x.((Anemo(x) | Coral(x)) -> Invertebrate(x))", "score": 0}
{"id": "eqasc_validation_1588", "prediction": "all x y.((Anemometer(x) & WindSpeed(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1588", "prediction": "all x y z.((Anemometer(x) & WindSpeed(y) & WindSpeed(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1588", "prediction": "all x y.((Anemometer(x) & WindSpeed(y)) -> MeasuresWindSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_1588", "prediction": "all x.(Anemometer(x) -> MeasuresWindSpeed(x))", "score": 0}
{"id": "eqasc_validation_1588", "prediction": "all x y z.((Anemometer(x) & WindSpeed(y) & WindSpeed(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1588", "prediction": "all x y z.((Anemometer(x) & WindSpeed(y) & WindSpeed(z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1588", "prediction": "all x y z.((Anesmometer(x) & WindSpeed(y) & WindSpeed(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1588", "prediction": "all x y.((Anemometer(x) & WindSpeed(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1588", "prediction": "all x y.((Anemometer(x) & WindSpeed(y) & Measures(x,y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1588", "prediction": "all x y z.((Anemometer(x) & WindSpeed(y) & WindSpeed(z) & Measures(x,y,z)) -> Anemometer(x))", "score": 0}
{"id": "eqasc_validation_1588", "prediction": "all x y z.((Anemometer(x) & WindSpeed(y) & WindSpeed(z)) -> Measured(x,y,z))", "score": 0}
{"id": "eqasc_validation_1588", "prediction": "all x y z.((Anemometer(x) & WindSpeed(y) & WindSpeed(z)) -> Measure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1588", "prediction": "all x y z.((Anemometer(x) & WindSpeed(y) & WindSpeed(z) & Measures(x,y,z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1589", "prediction": "all x.((WindSpeedExceeds73(x)) -> Hurricane(x))", "score": 0}
{"id": "eqasc_validation_1589", "prediction": "all x.((WindSpeedExceeds(x,73)) -> Hurricane(x))", "score": 0}
{"id": "eqasc_validation_1589", "prediction": "all x.((WindSpeedExceeds(x,73)) -> UpgradedToHurricane(x))", "score": 0}
{"id": "eqasc_validation_1589", "prediction": "all x.((WindSpeedExceeds73(x)) -> UpgradedToHurricane(x))", "score": 0}
{"id": "eqasc_validation_1589", "prediction": "all x.((WindSpeed(x,73)) -> UpgradedToHurricane(x))", "score": 0}
{"id": "eqasc_validation_1589", "prediction": "all x.((WindSpeedExceedsThirty(x) & Hurricane(x)) -> UpgradedTo(x))", "score": 0}
{"id": "eqasc_validation_1589", "prediction": "all x.((WindSpeedExceeds73(x) & Hurricane(x)) -> UpgradedTo(x))", "score": 0}
{"id": "eqasc_validation_1589", "prediction": "all x.((WindSpeed(x,73) & WindSpeedExceeds(x,73)) -> Hurricane(x))", "score": 0}
{"id": "eqasc_validation_1589", "prediction": "all x.((Storm(x) & WindSpeedExceeds73(x)) -> UpgradedToHurricane(x))", "score": 0}
{"id": "eqasc_validation_1589", "prediction": "all x.((WindSpeedExceeds73mph(x)) -> Hurricane(x))", "score": 0}
{"id": "eqasc_validation_1589", "prediction": "all x.((WindSpeedExceeds73mph(x)) -> UpgradedToHurricane(x))", "score": 0}
{"id": "eqasc_validation_1589", "prediction": "all x.((WindSpeedExceedsThirty(x) & Hurricane(x)) -> Upgraded(x))", "score": 0}
{"id": "eqasc_validation_1589", "prediction": "all x.((WindSpeedExceedsThirty(x)) -> UpgradedToHurricane(x))", "score": 0}
{"id": "eqasc_validation_1589", "prediction": "all x.((WindSpeedExceedsThirty(x)) -> Hurricane(x))", "score": 0}
{"id": "eqasc_validation_1589", "prediction": "all x.((WindSpeedExceedsThirty(x) & Storm(x)) -> UpgradedToHurricane(x))", "score": 0}
{"id": "eqasc_validation_1589", "prediction": "all x.((WindSpeedExceeds73(x) & Hurricane(x)) -> Upgraded(x))", "score": 0}
{"id": "eqasc_validation_1590", "prediction": "all x y.((Hurricane(x) & Anemometer(y) & ReadingAbove(y,73)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1590", "prediction": "all x y.((Hurricane(x) & Anemometer(y) & ReadingAbove73mph(y)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1590", "prediction": "all x y z.((Hurricane(x) & Anemometer(y) & Reading(z) & Above73mph(y,z)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1590", "prediction": "all x y.((Hurricane(x) & Anemometer(y) & ReadingAbove73mph(y,x)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1590", "prediction": "all x y z.((Hurricane(x) & Anemometer(y) & Reading(z) & Above(z,73)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1590", "prediction": "all x y.((Hurricane(x) & Anemometer(y) & ReadingAboveThirtymph(y)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1590", "prediction": "all x y z.((Hurricane(x) & Anemometer(y) & Reading(z) & Above(y,73)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1590", "prediction": "all x y.((Hurricane(x) & Anemometer(y) & ReadingAbove73MPH(y)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1590", "prediction": "all x.(Hurricane(x) -> (Occurs(x) & AnemometerShowsReadingAbove73mph(x)))", "score": 0}
{"id": "eqasc_validation_1590", "prediction": "all x y z.((Hurricane(x) & Anemometer(y) & Reading(z) & Above73mph(z)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1590", "prediction": "all x y z.((Hurricane(x) & Anemometer(y) & Reading(z) & Above(y,z)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1590", "prediction": "all x y.((Hurricane(x) & Anaemometer(y) & ReadingAbove(y,73)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1590", "prediction": "all x.(Hurricane(x) -> (OccursWhenAnemometerShowsReadingAbove73mph(x)))", "score": 0}
{"id": "eqasc_validation_1590", "prediction": "all x y z.((Hurricane(x) & Anemometer(y) & ReadingAbove(y,73) & Above(y,73)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1590", "prediction": "all x y.((Hurricane(x) & Anemometer(y) & Above(y,73)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1591", "prediction": "all x y.((WindSpeed(x) & Anemometer(y)) -> GaugedWith(x,y))", "score": 0}
{"id": "eqasc_validation_1591", "prediction": "all x.(WindSpeed(x) -> GaugedWithAnemometer(x))", "score": 0}
{"id": "eqasc_validation_1591", "prediction": "all x y.((WindSpeed(x) & Anemometer(y)) -> Gauge(x,y))", "score": 0}
{"id": "eqasc_validation_1591", "prediction": "all x y z.((WindSpeed(x) & Anemometer(y) & WindSpeed(z)) -> GaugedWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1591", "prediction": "all x y.((WindSpeed(x) & Anemometer(y)) -> Gauged(x,y))", "score": 0}
{"id": "eqasc_validation_1591", "prediction": "all x y.((WindSpeed(x) & Anemometer(y)) -> Gauges(x,y))", "score": 0}
{"id": "eqasc_validation_1591", "prediction": "all x y.((WindSpeed(x) & Anemometer(y)) -> Gaugeable(x,y))", "score": 0}
{"id": "eqasc_validation_1591", "prediction": "all x y z.((WindSpeed(x) & Anemometer(y) & WindSpeed(z)) -> Gauge(x,y,z))", "score": 0}
{"id": "eqasc_validation_1591", "prediction": "all x y z.((WindSpeed(x) & Anemometer(y) & WindSpeed(z)) -> Gauged(x,y,z))", "score": 0}
{"id": "eqasc_validation_1591", "prediction": "all x y.((WindSpeed(x) & Anemometer(y)) -> GaugesWith(x,y))", "score": 0}
{"id": "eqasc_validation_1591", "prediction": "all x y z.((WindSpeed(x) & Anemometer(y) & WindSpeed(z)) -> GaugedWith(y,z))", "score": 0}
{"id": "eqasc_validation_1591", "prediction": "all x y.((WindSpeed(x) & Anemometer(y)) -> Gauging(x,y))", "score": 0}
{"id": "eqasc_validation_1592", "prediction": "all x y.((Anemometer(x) & Wind(y)) -> Gauges(x,y))", "score": 0}
{"id": "eqasc_validation_1592", "prediction": "all x y z.((Anemometer(x) & Wind(y) & Wind(z)) -> Gauges(x,y,z))", "score": 0}
{"id": "eqasc_validation_1592", "prediction": "all x.(Anemometer(x) -> (GainWind(x) & GaugeWind(x)))", "score": 0}
{"id": "eqasc_validation_1592", "prediction": "all x.(Anemometer(x) -> GaugesWind(x))", "score": 0}
{"id": "eqasc_validation_1592", "prediction": "all x.((Anemometer(x) & Wind(y)) -> Gauges(x,y))", "score": 0}
{"id": "eqasc_validation_1592", "prediction": "all x.(Anemometer(x) -> (GatheringWind(x) | GaugingWind(x)))", "score": 0}
{"id": "eqasc_validation_1592", "prediction": "all x y z.((Anemometer(x) & Wind(y) & Wind(z)) -> Gauges(x,y))", "score": 0}
{"id": "eqasc_validation_1592", "prediction": "all x y.((Anesmometer(x) & Wind(y)) -> Gauges(x,y))", "score": 0}
{"id": "eqasc_validation_1592", "prediction": "all x.(Anemometer(x) -> (GaugesWind(x) & GaugesWind(x)))", "score": 0}
{"id": "eqasc_validation_1592", "prediction": "all x.(Anemometer(x) -> (GanesWind(x) & GaugesWind(x)))", "score": 0}
{"id": "eqasc_validation_1592", "prediction": "all x.(Anemometer(x) -> (GainWind(x) & GaugesWind(x)))", "score": 0}
{"id": "eqasc_validation_1593", "prediction": "all x.((WindSpeed(x) & TornadoSeverity(x)) -> EstimatedByDamage(x))", "score": 0}
{"id": "eqasc_validation_1593", "prediction": "all x y.((WindSpeed(x) & Tornado(y)) -> (EstimatedByDamage(x,y) & EstimatedBySeverity(x,y)))", "score": 0}
{"id": "eqasc_validation_1593", "prediction": "all x y.((WindSpeed(x) & Tornado(y)) -> (EstimatedByDamage(x) & EstimatedBySeverity(x,y)))", "score": 0}
{"id": "eqasc_validation_1593", "prediction": "all x y z.((WindSpeed(x) & Tornado(y) & Damage(z)) -> (EstimatedBy(x,y) & EstimatedBy(x,z)))", "score": 0}
{"id": "eqasc_validation_1593", "prediction": "all x y z.((WindSpeed(x) & Tornado(y) & Damage(z)) -> (EstimatedBy(x,y,z) & EstimatedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1593", "prediction": "all x y z.((WindSpeed(x) & Tornado(y) & Damage(z)) -> (EstimatedBy(x,y,z) & EstimatedBy(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1593", "prediction": "all x y.((WindSpeed(x) & Tornado(y)) -> (EstimatedBy(x,y) & EstimatedBy(x,y)))", "score": 0}
{"id": "eqasc_validation_1593", "prediction": "all x y.((WindSpeed(x) & Tornado(y)) -> EstimatedByDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1593", "prediction": "all x y.((WindSpeed(x) & Tornado(y) & Damage(z)) -> EstimatedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1593", "prediction": "all x y z.((WindSpeed(x) & Tornado(y) & Damage(z)) -> EstimatedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1593", "prediction": "all x y.((Tornado(x) & WindSpeed(y) & Severity(y)) -> EstimatedByDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1593", "prediction": "all x y.((WindSpeed(x) & Tornado(y)) -> (EstimatedByDamage(x,y) | EstimatedBySeverity(x,y)))", "score": 0}
{"id": "eqasc_validation_1593", "prediction": "all x y z.((WindSpeed(x) & Tornado(y) & Damage(z)) -> (EstimatedBy(x,y,z) & EstimatedBy(x,z)))", "score": 0}
{"id": "eqasc_validation_1593", "prediction": "all x y.((WindSpeed(x) & Tornado(y) & Damage(y)) -> EstimatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1593", "prediction": "all x.(Tornado(x) -> (WindSpeed(x) & Severity(x) & CausedDamage(x)))", "score": 0}
{"id": "eqasc_validation_1593", "prediction": "all x y.((WindSpeed(x) & Tornado(y)) -> (EstimatedByDamage(x) & EstimatedBySeverity(x)))", "score": 0}
{"id": "eqasc_validation_1594", "prediction": "all x y.((Anemometer(x) & Wind(y)) -> EstimatesDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1594", "prediction": "all x.(Anemometer(x) -> EstimatesWindDamage(x))", "score": 0}
{"id": "eqasc_validation_1594", "prediction": "all x y z.((Anemometer(x) & Wind(y) & Wind(z)) -> EstimatesDamage(x,y,z))", "score": 0}
{"id": "eqasc_validation_1594", "prediction": "all x y z.((Anemometer(x) & Wind(y) & Damage(z)) -> Estimates(x,y,z))", "score": 0}
{"id": "eqasc_validation_1594", "prediction": "all x y.((Anesmometer(x) & Wind(y)) -> EstimatesDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1594", "prediction": "all x y.((Anemometer(x) & Wind(y)) -> EstimatedDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1594", "prediction": "all x.(Anemometer(x) -> EstimatesDamageByWind(x))", "score": 0}
{"id": "eqasc_validation_1594", "prediction": "all x.((Anemometer(x) & Wind(y)) -> EstimatesDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1594", "prediction": "all x y z.((Anemometer(x) & Wind(y) & Damage(z)) -> EstimatedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1594", "prediction": "all x.(Anemometer(x) -> EstimatesDamage(x))", "score": 0}
{"id": "eqasc_validation_1594", "prediction": "all x y.((Anemometer(x) & Wind(y)) -> EstimateDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1595", "prediction": "all x.(Hurricane(x) -> WindSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_1595", "prediction": "all x.(Hurricane(x) -> WindSpeedAtLeast(x,74))", "score": 0}
{"id": "eqasc_validation_1595", "prediction": "all x.(Hurricane(x) -> WindSpeedAtLeast74(x))", "score": 0}
{"id": "eqasc_validation_1595", "prediction": "all x.(Hurricane(x) -> WindSpeed(x,74))", "score": 0}
{"id": "eqasc_validation_1595", "prediction": "all x.(Hurricane(x) -> WindSpeedAtLeast74mph(x))", "score": 0}
{"id": "eqasc_validation_1595", "prediction": "all x y.((Hurricane(x) & WindSpeed(y)) -> WindSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_1595", "prediction": "all x.(Hurricane(x) -> WindSpeedAtLeast74Ph(x))", "score": 0}
{"id": "eqasc_validation_1595", "prediction": "all x y.((Hurricane(x) & WindSpeed(y)) -> WindSpeedAtLeast(x,y))", "score": 0}
{"id": "eqasc_validation_1595", "prediction": "all x.(Hurricane(x) -> HasWindSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_1595", "prediction": "all x y.((Hurricane(x) & WindSpeed(y)) -> WindSpeedAtLeast74(x,y))", "score": 0}
{"id": "eqasc_validation_1595", "prediction": "all x.(Hurricane(x) -> WindSpeed(x,AtLeast,74))", "score": 0}
{"id": "eqasc_validation_1595", "prediction": "all x.(Hurricane(x) -> WindSpeed(x,at(x,74))", "score": -1}
{"id": "eqasc_validation_1595", "prediction": "all x.(Hurricane(x) -> WindSpeed(x,atLeast,74))", "score": 0}
{"id": "eqasc_validation_1595", "prediction": "all x.(Hurricane(x) -> WindSpeedOfAtLeast74mph(x))", "score": 0}
{"id": "eqasc_validation_1595", "prediction": "all x.(Hurricane(x) -> WindSpeedOfAtLeast(x,74))", "score": 0}
{"id": "eqasc_validation_1596", "prediction": "all x.(Anemometer(x) -> MeasuresHurricane(x))", "score": 0}
{"id": "eqasc_validation_1596", "prediction": "all x y.((Anemometer(x) & Hurricane(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1596", "prediction": "all x.(Anemometer(x) -> (MeasuresHurricane(x) & MeasuresHurricane(x)))", "score": 0}
{"id": "eqasc_validation_1596", "prediction": "all x.(Anemometer(x) -> (MeasuresHurricane(x) | MeasuresHurricane(x)))", "score": 0}
{"id": "eqasc_validation_1596", "prediction": "all x y.((Anemometer(x) & Hurricane(y)) -> CanMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1596", "prediction": "all x y z.((Anemometer(x) & Hurricane(y) & Hurricane(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1596", "prediction": "all x y z.((Anemometer(x) & Hurricane(y) & Hurricane(z)) -> CanMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1596", "prediction": "all x.(Anemometer(x) -> CanMeasureHurricane(x))", "score": 0}
{"id": "eqasc_validation_1596", "prediction": "all x.(Anemometer(x) -> (MeasuresHurricane(x) & CanMeasureHurricane(x)))", "score": 0}
{"id": "eqasc_validation_1597", "prediction": "all x.(Anemometer(x) -> MeasuresWindForce(x))", "score": 0}
{"id": "eqasc_validation_1597", "prediction": "all x.(Anemometer(x) -> (MeasuresWindForce(x) & MeasuresWindForce(x)))", "score": 0}
{"id": "eqasc_validation_1597", "prediction": "all x.((Device(x) & MeasuresWindForce(x)) -> Anemometer(x))", "score": 0}
{"id": "eqasc_validation_1597", "prediction": "all x y.((Anemometer(x) & Wind(y)) -> MeasuresForce(x,y))", "score": 0}
{"id": "eqasc_validation_1597", "prediction": "all x.(Anemometer(x) -> MeasuresForceOfWind(x))", "score": 0}
{"id": "eqasc_validation_1597", "prediction": "all x.(Anemometer(x) -> (MeasuresWindForce(x) & WindForce(x)))", "score": 0}
{"id": "eqasc_validation_1597", "prediction": "all x.(Anemometer(x) -> (MetsWindForce(x) & MeasuresWindForce(x)))", "score": 0}
{"id": "eqasc_validation_1597", "prediction": "all x.(Anemometer(x) -> (MeasuresWindForce(x) | MeasuresWindForce(x)))", "score": 0}
{"id": "eqasc_validation_1598", "prediction": "all x y.((WindForce(x) & WindSpeed(y)) -> MeasuresSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_1598", "prediction": "all x y.((Wind(x) & WindForce(y)) -> MeasureSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_1598", "prediction": "all x y.((WindForce(x) & Wind(y)) -> MeasureSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_1598", "prediction": "all x y.((Wind(x) & Wind(y)) -> MeasureSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_1598", "prediction": "all x y z.((WindForce(x) & WindSpeed(y) & WindSpeed(z)) -> MeasuresSpeed(x,y,z))", "score": 0}
{"id": "eqasc_validation_1598", "prediction": "all x y.((Wind(x) & Force(y)) -> MeasureSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_1598", "prediction": "all x y.((Wind(x) & WindForce(y)) -> MeasuresSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_1598", "prediction": "all x y z.((WindForce(x) & Wind(y) & Speed(z)) -> MeasuresSpeed(x,y,z))", "score": 0}
{"id": "eqasc_validation_1598", "prediction": "all x y.((WindForce(x) & WindSpeed(y)) -> CanBeMeasured(x,y))", "score": 0}
{"id": "eqasc_validation_1598", "prediction": "all x y.((Wind(x) & Force(y)) -> MeasuresSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_1598", "prediction": "all x y.((WindForce(x) & Wind(y)) -> MeasuresSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_1598", "prediction": "all x y z.((Wind(x) & Force(y) & WindSpeed(z)) -> MeasuresSpeed(x,y,z))", "score": 0}
{"id": "eqasc_validation_1598", "prediction": "all x.((WindForce(x) & WindSpeed(x)) -> MeasuresSpeed(x))", "score": 0}
{"id": "eqasc_validation_1598", "prediction": "all x y z.((Wind(x) & Force(y) & WindSpeed(z)) -> MeasuresSpeed(y,z))", "score": 0}
{"id": "eqasc_validation_1598", "prediction": "all x y z.((Wind(x) & Force(y) & Speed(z)) -> MeasuresSpeed(x,y,z))", "score": 0}
{"id": "eqasc_validation_1598", "prediction": "all x y z.((Wind(x) & Force(y) & Wind(z)) -> MeasuresSpeed(x,y,z))", "score": 0}
{"id": "eqasc_validation_1599", "prediction": "all x y.((Anemometer(x) & Hurricane(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1599", "prediction": "all x y z.((Anemometer(x) & Hurricane(y) & Hurricane(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1599", "prediction": "all x y z.((Anemometer(x) & Hurricane(y) & Hurricane(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1599", "prediction": "all x y.((Anemometer(x) & Hurricane(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1599", "prediction": "all x y z.((Anesmometer(x) & Hurricane(y) & Hurricane(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1599", "prediction": "all x y z.((Anemometer(x) & Hurricane(y) & Hurricane(z) & Measures(x,y,z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1599", "prediction": "all x y.((Anesmometer(x) & Hurricane(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1599", "prediction": "all x y z.((Anemometer(x) & Hurricane(y) & Hurricane(z)) -> Measure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1599", "prediction": "all x y.((Anemometer(x) & Hurricane(y) & Measures(x,y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1599", "prediction": "all x.(Anemometer(x) -> MeasuresHurricane(x))", "score": 0}
{"id": "eqasc_validation_1599", "prediction": "all x y z w.((Anemometer(x) & Hurricane(y) & Hurricane(z) & Measures(x,y,z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1600", "prediction": "all x.((Anemometer(x) & Vane(x)) -> TopOfStation(x))", "score": 0}
{"id": "eqasc_validation_1600", "prediction": "all x y.((Anemometer(x) & Vane(y)) -> TopOfStation(x,y))", "score": 0}
{"id": "eqasc_validation_1600", "prediction": "all x y.((Anemometer(x) & Vane(y)) -> AtTopOfStation(x,y))", "score": 0}
{"id": "eqasc_validation_1600", "prediction": "all x y.((Anemometer(x) & Vane(y)) -> TopOfStation(x))", "score": 0}
{"id": "eqasc_validation_1600", "prediction": "all x.((Anemometer(x) & Vane(x)) -> AtTopOfStation(x))", "score": 0}
{"id": "eqasc_validation_1600", "prediction": "all x.(Anemometer(x) & Vane(x)) -> TopOfStation(x))", "score": -1}
{"id": "eqasc_validation_1600", "prediction": "all x y z.((Anemometer(x) & Vane(y) & Station(z)) -> (AtTopOf(x,z) & AtTopOf(y,z)))", "score": 0}
{"id": "eqasc_validation_1600", "prediction": "all x y.((Anemometer(x) & Vane(y)) -> (AtTopOfStation(x,y) & AtTopOfStation(x,y)))", "score": 0}
{"id": "eqasc_validation_1600", "prediction": "all x.((Anesmometer(x) & Vane(x)) -> TopOfStation(x))", "score": 0}
{"id": "eqasc_validation_1600", "prediction": "all x y.((Anesmometer(x) & Vane(y)) -> TopOfStation(x,y))", "score": 0}
{"id": "eqasc_validation_1601", "prediction": "all x y.((Device(x) & Station(y) & PlacedAtTopOf(x,y)) -> MeasuresWind(x))", "score": 0}
{"id": "eqasc_validation_1601", "prediction": "all x y z.((Device(x) & Station(y) & Station(z) & MeasuresWind(x)) -> PlacedAtTopOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1601", "prediction": "all x y.((Device(x) & Station(y) & MeasuresWind(x,y)) -> PlacedAtTopOf(x,y))", "score": 0}
{"id": "eqasc_validation_1601", "prediction": "all x y.((Device(x) & Station(y) & MeasuresWind(x,y)) -> PlacedAtTopOfStation(x,y))", "score": 0}
{"id": "eqasc_validation_1601", "prediction": "all x y z.((Device(x) & Station(y) & Station(z) & MeasuresWind(x,y)) -> PlacedAtTopOf(x,z))", "score": 0}
{"id": "eqasc_validation_1601", "prediction": "all x y.((Device(x) & Station(y) & MeasuresWind(x)) -> PlacedAtTopOf(x,y))", "score": 0}
{"id": "eqasc_validation_1601", "prediction": "all x y z.((Device(x) & Station(y) & Station(z) & MeasuresWind(x,y,z)) -> PlacedAtTopOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1601", "prediction": "all x y.((Device(x) & Station(y)) -> MeasuresWind(x,y))", "score": 0}
{"id": "eqasc_validation_1601", "prediction": "all x y.((Device(x) & Station(y) & MeasuresWind(x)) -> PlacedAtTopOfStation(x,y))", "score": 0}
{"id": "eqasc_validation_1601", "prediction": "all x y z.((Device(x) & Station(y) & Station(z)) -> MeasuresWind(x,y,z))", "score": 0}
{"id": "eqasc_validation_1601", "prediction": "all x y z.((Device(x) & Station(y) & Station(z) & MeasuresWind(x)) -> PlacedAtTopOfStation(x,y,z))", "score": 0}
{"id": "eqasc_validation_1601", "prediction": "all x.((Device(x) & MeasuresWind(x)) -> PlacedAtTopOfStation(x))", "score": 0}
{"id": "eqasc_validation_1601", "prediction": "all x y.((Device(x) & Station(y) & PlacedAtTopOf(x,y)) -> MeasuresWind(x,y))", "score": 0}
{"id": "eqasc_validation_1601", "prediction": "all x y z.((Device(x) & Station(y) & Station(z) & MeasuresWind(x,y,z)) -> PlacedAtTopOfStation(x,y,z))", "score": 0}
{"id": "eqasc_validation_1601", "prediction": "all x y z.((Device(x) & Station(y) & Station(z) & MeasuresWind(x,y)) -> PlacedAtTopOfStation(x,z))", "score": 0}
{"id": "eqasc_validation_1601", "prediction": "all x y z.((Device(x) & Station(y) & Station(z) & MeasuresWind(x,z)) -> PlacedAtTopOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1602", "prediction": "all x.(Hurricane(x) -> (HasFiveCategories(x) & DependsOnWindSpeed(x)))", "score": 0}
{"id": "eqasc_validation_1602", "prediction": "all x.(Hurricane(x) -> (HasCategory(x,5) & DependsOnWindSpeed(x)))", "score": 0}
{"id": "eqasc_validation_1602", "prediction": "all x y.((Hurricane(x) & WindSpeed(y)) -> HasCategories(x,y))", "score": 0}
{"id": "eqasc_validation_1602", "prediction": "all x.(Hurricane(x) -> (HasFourCategories(x) & DependsOnWindSpeed(x)))", "score": 0}
{"id": "eqasc_validation_1602", "prediction": "all x y.((Hurricane(x) & WindSpeed(y)) -> HasCategory(x,y))", "score": 0}
{"id": "eqasc_validation_1602", "prediction": "all x.(Hurricane(x) -> HasFiveCategories(x))", "score": 0}
{"id": "eqasc_validation_1602", "prediction": "all x.(Hurricane(x) -> (HasCategories(x,5) & DependsOnWindSpeed(x)))", "score": 0}
{"id": "eqasc_validation_1602", "prediction": "all x.(Hurricane(x) -> (HasCategory(x,y) & DependsOnWindSpeed(y)))", "score": 0}
{"id": "eqasc_validation_1602", "prediction": "all x y z.((Hurricane(x) & WindSpeed(y) & WindSpeed(z)) -> HasCategory(x,y,z))", "score": 0}
{"id": "eqasc_validation_1602", "prediction": "all x y z.((Hurricane(x) & WindSpeed(y) & WindSpeed(z)) -> HasCategories(x,y,z))", "score": 0}
{"id": "eqasc_validation_1602", "prediction": "all x.(Hurricane(x) -> (HasCategory(x,y) & WindSpeed(y)))", "score": 0}
{"id": "eqasc_validation_1602", "prediction": "all x y.((Hurricane(x) & WindSpeed(y)) -> (HasCategory(x,y) & DependsOn(x,y)))", "score": 0}
{"id": "eqasc_validation_1602", "prediction": "all x.(Hurricane(x) -> (HasFiveCategories(x) & WindSpeed(x)))", "score": 0}
{"id": "eqasc_validation_1602", "prediction": "all x.(Hurricane(x) -> HasFiveCategoriesDependingOnWindSpeed(x))", "score": 0}
{"id": "eqasc_validation_1602", "prediction": "all x.(Hurricane(x) -> (HasCategory(x,y) & DependsOnWindSpeed(x)))", "score": 0}
{"id": "eqasc_validation_1603", "prediction": "all x y.((Anemometer(x) & HurricaneCategory(y)) -> Determines(x,y))", "score": 0}
{"id": "eqasc_validation_1603", "prediction": "all x.(Anemometer(x) -> DeterminesHurricaneCategory(x))", "score": 0}
{"id": "eqasc_validation_1603", "prediction": "all x y z.((Anemometer(x) & HurricaneCategory(y) & HurricaneCategory(z)) -> Determines(x,y,z))", "score": 0}
{"id": "eqasc_validation_1603", "prediction": "all x y.((Anesmometer(x) & HurricaneCategory(y)) -> Determines(x,y))", "score": 0}
{"id": "eqasc_validation_1603", "prediction": "all x y z.((Anemometer(x) & HurricaneCategory(y) & Category(z)) -> Determines(x,y,z))", "score": 0}
{"id": "eqasc_validation_1603", "prediction": "all x.(Anemometer(x) -> (UsedToDetermineHurricaneCategory(x) & DeterminesHurricaneCategory(x)))", "score": 0}
{"id": "eqasc_validation_1603", "prediction": "all x.(Anemometer(x) -> (DeterminesHurricaneCategory(x) & HurricaneCategory(x)))", "score": 0}
{"id": "eqasc_validation_1603", "prediction": "all x.(Anemometer(x) -> (UsedToDetermineHurricaneCategory(x) & HurricaneCategory(x)))", "score": 0}
{"id": "eqasc_validation_1603", "prediction": "all x.(Anemometer(x) -> (UsedToDetermineHurricaneCategory(x) & DetermineHurricaneCategory(x)))", "score": 0}
{"id": "eqasc_validation_1604", "prediction": "all x.(Bacteria(x) -> (DiverseOrganism(x) & AbundantOrganism(x)))", "score": 0}
{"id": "eqasc_validation_1604", "prediction": "all x.(Bacteria(x) -> (DiverseAndAbundantOrganisms(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1604", "prediction": "all x y.((Bacteria(x) & Earth(y)) -> (Diverse(x,y) & Abundant(x,y)))", "score": 0}
{"id": "eqasc_validation_1604", "prediction": "all x.(Bacteria(x) -> (Diverse(x) & Abundant(x)))", "score": 0}
{"id": "eqasc_validation_1604", "prediction": "all x.(Bacteria(x) -> (DiverseAndAbundantOrganism(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1604", "prediction": "all x.(Bacteria(x) -> (DiverseOrganisms(x) & AbundantOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_1604", "prediction": "all x y.((Bacteria(x) & Earth(y)) -> (DiverseOrganism(x,y) & AbundantOrganism(x,y)))", "score": 0}
{"id": "eqasc_validation_1604", "prediction": "all x.(Bacteria(x) -> (Diverse(x) & Abundant(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1604", "prediction": "all x.(Bacteria(x) -> (DiverseAndAbundantOfOrganisms(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1604", "prediction": "all x.(Bacteria(x) -> (DiverseOrganism(x) & Abundant(x)))", "score": 0}
{"id": "eqasc_validation_1604", "prediction": "all x.(Bacteria(x) -> (DiverseGroupOfOrganisms(x) & AbundantGroupOfOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_1604", "prediction": "all x.(Bacteria(x) -> (DiverseOrganism(x) & AbundantOrganism(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1604", "prediction": "all x y.((Bacteria(x) & Earth(y)) -> (Diverse(x) & Abundant(x)))", "score": 1}
{"id": "eqasc_validation_1604", "prediction": "all x.(Bacteria(x) -> (DiverseOfOrganisms(x) & Abundant(x)))", "score": 0}
{"id": "eqasc_validation_1604", "prediction": "all x y.((Bacteria(x) & Earth(y)) -> (Diverse(x) & Abundant(x,y)))", "score": 0}
{"id": "eqasc_validation_1605", "prediction": "all x.(Organization(x) -> LifeForm(x))", "score": 0}
{"id": "eqasc_validation_1605", "prediction": "all x.(Organism(x) -> LifeForm(x))", "score": 0}
{"id": "eqasc_validation_1605", "prediction": "all x y.((Organization(x) & LifeForm(y)) -> LifeForm(x,y))", "score": 0}
{"id": "eqasc_validation_1605", "prediction": "all x y.((Organization(x) & LifeForm(y)) -> LifeForm(x))", "score": 0}
{"id": "eqasc_validation_1605", "prediction": "all x.exists y.(Organization(x) & LifeForm(y))", "score": 0}
{"id": "eqasc_validation_1605", "prediction": "all x.exists y.(Organization(x) & LifeForm(y)) -> LifeForm(x,y))", "score": -1}
{"id": "eqasc_validation_1605", "prediction": "exists x.(Organization(x) & LifeForm(x))", "score": 0}
{"id": "eqasc_validation_1605", "prediction": "all x.exists y.(Organization(x) & LifeForm(y) & CreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1605", "prediction": "all x.exists y.(Organization(x) & LifeForm(y) & LifeForm(x,y))", "score": 0}
{"id": "eqasc_validation_1605", "prediction": "all x.((Organization(x) & LifeForm(x)) -> LifeForm(x))", "score": 0}
{"id": "eqasc_validation_1605", "prediction": "all x.exists y.(Organization(x) & LifeForm(y)) -> LifeForm(x))", "score": -1}
{"id": "eqasc_validation_1605", "prediction": "all x.exists y.(Organism(x) & LifeForm(y))", "score": 0}
{"id": "eqasc_validation_1605", "prediction": "all x.exists y.((Organization(x) & LifeForm(y)) -> LifeForm(x,y))", "score": 0}
{"id": "eqasc_validation_1605", "prediction": "all x.exists y.(Organism(x) & LifeForm(y)) -> LifeForm(x,y))", "score": -1}
{"id": "eqasc_validation_1606", "prediction": "all x y.((Bacteria(x) & Earth(y)) -> (Diverse(x,y) & Abundant(x,y)))", "score": 0}
{"id": "eqasc_validation_1606", "prediction": "all x.(Bacteria(x) -> (DiverseLifeForm(x) & AbundantLifeForm(x)))", "score": 0}
{"id": "eqasc_validation_1606", "prediction": "all x.(Bacteria(x) -> (DiverseAndAbundantLifeForm(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1606", "prediction": "all x.(Bacteria(x) -> (Diverse(x) & Abundant(x)))", "score": 0}
{"id": "eqasc_validation_1606", "prediction": "all x.(Bacteria(x) -> (Diverse(x) & Abundant(x) & LifeForm(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1606", "prediction": "all x.(Bacteria(x) -> (Diverse(x) & Abundant(x) & LifeForm(x)))", "score": 0}
{"id": "eqasc_validation_1606", "prediction": "all x.(Bacteria(x) -> (Diverse(x) & Abundant(x) & LifeFormOnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1606", "prediction": "all x.(Bacteria(x) -> (Diverse(x) & Abundant(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1606", "prediction": "all x.(Bacteria(x) -> (DiverseAndAbundantLifeGroup(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1606", "prediction": "all x y.((Bacteria(x) & Earth(y)) -> (Diverse(x) & Abundant(x)))", "score": 0}
{"id": "eqasc_validation_1606", "prediction": "all x.(Bacteria(x) -> (DiverseLife(x) & AbundantLife(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1606", "prediction": "all x.(Bacteria(x) -> (DiverseLifeForm(x) & AbundantLifeForm(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1606", "prediction": "all x y.((Bacteria(x) & Earth(y)) -> (Diverse(x) & Abundant(x,y)))", "score": 0}
{"id": "eqasc_validation_1606", "prediction": "all x.(Bacteria(x) -> (DiverseGroupOfLife(x) & AbundantGroupOfLife(x)))", "score": 0}
{"id": "eqasc_validation_1606", "prediction": "all x.(Bacteria(x) -> (DiverseAndAbundantLife(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1606", "prediction": "all x.(Bacteria(x) -> (DiverseLife(x) & AbundantLife(x)))", "score": 0}
{"id": "eqasc_validation_1607", "prediction": "all x.(Earth(x) -> Planet(x))", "score": 0}
{"id": "eqasc_validation_1607", "prediction": "All x.(Earth(x) -> Planet(x))", "score": -1}
{"id": "eqasc_validation_1607", "prediction": "all x y.((Earth(x) & Planet(y)) -> Planet(x,y))", "score": 0}
{"id": "eqasc_validation_1607", "prediction": "all x y.((Earth(x) & Planet(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_1607", "prediction": "all x y.((Earth(x) & Planet(y)) -> Earth(x))", "score": 0}
{"id": "eqasc_validation_1607", "prediction": "exists x.(Earth(x) & Planet(x))", "score": 0}
{"id": "eqasc_validation_1607", "prediction": "all x.(Earth(x) -> OurPlanet(x))", "score": 0}
{"id": "eqasc_validation_1607", "prediction": "all x.((Earth(x) & Planet(x)) -> Planet(x))", "score": 0}
{"id": "eqasc_validation_1607", "prediction": "all x y.((Earth(x) & Planet(y)) -> WePlanet(x,y))", "score": 0}
{"id": "eqasc_validation_1607", "prediction": "all x y.((Earth(x) & Planet(y)) -> Earth(x,y))", "score": 0}
{"id": "eqasc_validation_1607", "prediction": "all x y.((Earth(x) & Planet(y)) -> OurPlanet(x,y))", "score": 0}
{"id": "eqasc_validation_1607", "prediction": "((Earth(Earth) & Planet(Earth)) -> Planet(Earth))", "score": 0}
{"id": "eqasc_validation_1607", "prediction": "(All x.(Earth(x) -> Planet(x)))", "score": -1}
{"id": "eqasc_validation_1607", "prediction": "all x y.((Earth(x) & Planet(y)) -> IsPlanet(x,y))", "score": 0}
{"id": "eqasc_validation_1607", "prediction": "all x y.((Earth(x) & Planet(y)) -> Planet(x))", "score": 0}
{"id": "eqasc_validation_1608", "prediction": "all x.(Bacteria(x) -> (DiverseAndAbundantOrganisms(x) & OnPlanet(x)))", "score": 0}
{"id": "eqasc_validation_1608", "prediction": "all x.(Bacteria(x) -> (DiverseOrganism(x) & AbundantOrganism(x) & OnPlanet(x)))", "score": 0}
{"id": "eqasc_validation_1608", "prediction": "all x.(Bacteria(x) -> (DiverseOrganism(x) & AbundantOrganism(x)))", "score": 0}
{"id": "eqasc_validation_1608", "prediction": "all x.(Bacteria(x) -> (DiverseOrganisms(x) & AbundantOrganisms(x) & OnPlanet(x)))", "score": 0}
{"id": "eqasc_validation_1608", "prediction": "all x.(Bacteria(x) -> (DiverseAndAbundantOrganism(x) & OnPlanet(x)))", "score": 0}
{"id": "eqasc_validation_1608", "prediction": "all x.(Bacteria(x) -> (DiverseOrganisms(x) & AbundantOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_1608", "prediction": "all x.(Bacteria(x) -> (DiverseAndAbundantOrganisms(x) & OnPlanet(x) & OnPlanet(x)))", "score": 0}
{"id": "eqasc_validation_1608", "prediction": "all x.(Bacteria(x) -> (Diverse(x) & Abundant(x) & OnPlanet(x)))", "score": 0}
{"id": "eqasc_validation_1608", "prediction": "all x.(Bacteria(x) -> (DiverseGroupOfOrganisms(x) & AbundantGroupOfOrganisms(x) & OnPlanet(x)))", "score": 0}
{"id": "eqasc_validation_1608", "prediction": "all x.(Bacteria(x) -> (DiverseAndAbundantOrganismsOnPlanet(x) & OnPlanet(x)))", "score": 0}
{"id": "eqasc_validation_1608", "prediction": "all x.(Bacteria(x) -> (DiverseGroupOfOrganisms(x) & AbundantGroupOfOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_1608", "prediction": "all x.(Bacteria(x) -> (DiverseOrganism(x) & AbundantOrganism(x) & OnPlanet(x) & OnPlanet(x)))", "score": 0}
{"id": "eqasc_validation_1608", "prediction": "all x.(Bacteria(x) -> (DiverseAndAbundantGroupOfOrganisms(x) & OnPlanet(x)))", "score": 0}
{"id": "eqasc_validation_1609", "prediction": "all x.(Earth(x) -> WorldOfWater(x))", "score": 0}
{"id": "eqasc_validation_1609", "prediction": "all x.(Earth(x) -> WaterWorld(x))", "score": 0}
{"id": "eqasc_validation_1609", "prediction": "all x y.((Earth(x) & Water(y)) -> WorldOf(x,y))", "score": 0}
{"id": "eqasc_validation_1609", "prediction": "exists x.(Earth(x) & WorldOfWater(x))", "score": 1}
{"id": "eqasc_validation_1609", "prediction": "all x y.((Earth(x) & WorldOfWater(y)) -> Water(x))", "score": 0}
{"id": "eqasc_validation_1609", "prediction": "all x.((Earth(x) & WorldOfWater(x)) -> Water(x))", "score": 0}
{"id": "eqasc_validation_1609", "prediction": "all x y.((Earth(x) & Water(y)) -> World(x,y))", "score": 0}
{"id": "eqasc_validation_1609", "prediction": "all x.((Earth(x) & WorldOfWater(x)) -> WorldOfWater(x))", "score": 0}
{"id": "eqasc_validation_1609", "prediction": "all x y.((Earth(x) & WorldOfWater(y)) -> WaterWorld(x))", "score": 0}
{"id": "eqasc_validation_1609", "prediction": "all x y.((Earth(x) & WorldOfWater(y)) -> WorldOfWater(x))", "score": 0}
{"id": "eqasc_validation_1609", "prediction": "all x y.((Earth(x) & WorldOfWater(y)) -> Water(x,y))", "score": 0}
{"id": "eqasc_validation_1609", "prediction": "all x.((Earth(x) & WorldOfWater(x)) -> WaterWorld(x))", "score": 0}
{"id": "eqasc_validation_1609", "prediction": "all x.(Earth(x) -> (WorldOfWater(x)))", "score": 0}
{"id": "eqasc_validation_1609", "prediction": "all x y.((Earth(x) & WorldOfWater(x)) -> Water(y))", "score": 0}
{"id": "eqasc_validation_1610", "prediction": "all x.(Bacteria(x) -> (DiverseOrganism(x) & AbundantOrganism(x)))", "score": 0}
{"id": "eqasc_validation_1610", "prediction": "all x.(Bacteria(x) -> (DiverseAndAbundantOrganisms(x) & InWorld(x)))", "score": 0}
{"id": "eqasc_validation_1610", "prediction": "all x y.((Bacteria(x) & Organism(y)) -> (Diverse(x,y) & Abundant(x,y)))", "score": 0}
{"id": "eqasc_validation_1610", "prediction": "all x.(Bacteria(x) -> (Diverse(x) & Abundant(x)))", "score": 1}
{"id": "eqasc_validation_1610", "prediction": "all x.(Bacteria(x) -> (DiverseAndAbundantOrganism(x) & InWorld(x)))", "score": 0}
{"id": "eqasc_validation_1610", "prediction": "all x.(Bacteria(x) -> (DiverseOrganisms(x) & AbundantOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_1610", "prediction": "all x.(Bacteria(x) -> (DiverseGroupOfOrganisms(x) & AbundantGroupOfOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_1610", "prediction": "all x.(Bacteria(x) -> (DiverseOfOrganisms(x) & AbundantOfOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_1610", "prediction": "all x.(Bacteria(x) -> (Diverse(x) & Abundant(x) & InWorld(x)))", "score": 0}
{"id": "eqasc_validation_1610", "prediction": "all x.(Bacteria(x) -> (DiverseOrganism(x) & Abundant(x)))", "score": 0}
{"id": "eqasc_validation_1610", "prediction": "all x.(Bacteria(x) -> (Diverse(x) & Abundant(x) & Organism(x)))", "score": 0}
{"id": "eqasc_validation_1610", "prediction": "all x.(Bacteria(x) -> (DiverseOrganism(x) & AbundantOrganism(x) & InWorld(x)))", "score": 0}
{"id": "eqasc_validation_1610", "prediction": "all x y.((Bacteria(x) & Organism(y)) -> (Diverse(y) & Abundant(y)))", "score": 0}
{"id": "eqasc_validation_1610", "prediction": "all x.(Bacteria(x) -> (DiverseOfOrganisms(x) & Abundant(x)))", "score": 0}
{"id": "eqasc_validation_1611", "prediction": "all x.(ProkaryoticCell(x) -> (DiverseAndAbundantOrganisms(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1611", "prediction": "all x.(ProkaryoticCells(x) -> (DiverseAndAbundantOrganisms(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1611", "prediction": "all x.(ProkaryoticCell(x) -> (DiverseOrganism(x) & AbundantOrganism(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1611", "prediction": "all x.(ProkaryoticCell(x) -> (DiverseOrganism(x) & AbundantOrganism(x)))", "score": 0}
{"id": "eqasc_validation_1611", "prediction": "all x.(ProkaryoticCell(x) -> (DiverseAndAbundantOrganism(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1611", "prediction": "all x.(ProkaryoticCells(x) -> (DiverseOrganism(x) & AbundantOrganism(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1611", "prediction": "all x.(ProkaryoticCells(x) -> (DiverseOrganism(x) & AbundantOrganism(x)))", "score": 0}
{"id": "eqasc_validation_1611", "prediction": "all x y.((ProkaryoticCell(x) & Earth(y)) -> (Diverse(x,y) & Abundant(x,y)))", "score": 0}
{"id": "eqasc_validation_1611", "prediction": "all x.(ProkaryoticCell(x) -> (DiverseOrganisms(x) & AbundantOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_1611", "prediction": "all x.(ProkaryoticCell(x) -> (Diverse(x) & Abundant(x) & Organism(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1611", "prediction": "all x.(ProkaryoticCell(x) -> (DiverseOrganisms(x) & AbundantOrganisms(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1611", "prediction": "all x.(ProkaryoticCells(x) -> (DiverseAndAbundantOrganism(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1611", "prediction": "all x.(ProkaryoticCells(x) -> (DiverseOrganisms(x) & AbundantOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_1611", "prediction": "all x.(ProkaryoticCell(x) -> (DiverseAndAbundantOrganismsOnEarth(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1611", "prediction": "all x.(ProkaryoticCells(x) -> (DiverseOrganisms(x) & AbundantOrganisms(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1612", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & Shell(z)) -> UsesForHome(x,y,z))", "score": 1}
{"id": "eqasc_validation_1612", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & Shell(z)) -> UsesForHomes(x,y,z))", "score": 1}
{"id": "eqasc_validation_1612", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y)) -> UsesShell(x,y))", "score": 1}
{"id": "eqasc_validation_1612", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y)) -> UsesShellForHome(x,y))", "score": 0}
{"id": "eqasc_validation_1612", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y)) -> UsesShellsForHomes(x,y))", "score": 0}
{"id": "eqasc_validation_1612", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y)) -> UsesShellForHomes(x,y))", "score": 0}
{"id": "eqasc_validation_1612", "prediction": "all x y z.((HermitCrab(x) & Shell(y) & DeadSnail(z)) -> UsesForHome(x,y,z))", "score": 1}
{"id": "eqasc_validation_1612", "prediction": "all x y z.((HermitCrab(x) & Shell(y) & DeadSnail(z)) -> UsesForHomes(x,y,z))", "score": 1}
{"id": "eqasc_validation_1612", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y)) -> UsesForHomes(x,y))", "score": 0}
{"id": "eqasc_validation_1612", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & Shell(z)) -> UsesFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1612", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y)) -> UsesForHome(x,y))", "score": 0}
{"id": "eqasc_validation_1612", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y)) -> UsesCellsForHomes(x,y))", "score": 0}
{"id": "eqasc_validation_1612", "prediction": "all x y z.((HermitCrab(x) & DeadSnake(y) & Shell(z)) -> UsesForHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1612", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & Shell(z) & UsesForHome(x,y,z)) -> UsesForHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1612", "prediction": "all x y z.((HermitCrab(x) & DeadSnake(y) & Shell(z)) -> UsesForHomes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1612", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & Shell(z)) -> UsesForHome(x,y))", "score": 1}
{"id": "eqasc_validation_1613", "prediction": "all x.(Student(x) -> (LivesAtHome(x) | LivesInGroupHome(x)))", "score": 0}
{"id": "eqasc_validation_1613", "prediction": "all x.(Student(x) -> (LivesAtHome(x) | LivesInGroupHomes(x)))", "score": 0}
{"id": "eqasc_validation_1613", "prediction": "all x.(Student(x) -> (LivesAtHome(x) | LivesInGroupHouses(x)))", "score": 0}
{"id": "eqasc_validation_1613", "prediction": "all x y.((Student(x) & (Home(y) | GroupHome(y))) -> LivesAt(x,y))", "score": 0}
{"id": "eqasc_validation_1613", "prediction": "all x.(Student(x) -> (LivesAtHome(x) | LivesInGroupHouse(x)))", "score": 0}
{"id": "eqasc_validation_1613", "prediction": "all x.(Student(x) -> (exists y.(Home(y) & LivesAt(x,y)) | exists z.(GroupHome(z) & LivesAt(x,z)))))", "score": -1}
{"id": "eqasc_validation_1613", "prediction": "all x y.((Student(x) & Student(y)) -> (LivesAtHome(x,y) | LivesInGroupHome(x,y)))", "score": 0}
{"id": "eqasc_validation_1613", "prediction": "all x y z.((Student(x) & Home(y) & GroupHome(z)) -> (LivesAt(x,y) | LivesIn(x,z)))", "score": 0}
{"id": "eqasc_validation_1613", "prediction": "all x.(Student(x) -> (exists y.(Home(y) & LivesAt(x,y))) | exists z.(GroupHome(z) & LivesAt(x,z)))))", "score": -1}
{"id": "eqasc_validation_1613", "prediction": "all x y.((Student(x) & Home(y)) | GroupHome(x,y)) -> LivesAt(x,y))", "score": -1}
{"id": "eqasc_validation_1613", "prediction": "all x y.((Student(x) & Student(y)) -> (LivesAtHome(x,y) | LivesInGroupHomes(x,y)))", "score": 0}
{"id": "eqasc_validation_1613", "prediction": "all x y z.((Student(x) & Home(y) & GroupHome(z)) -> (LivesAt(x,y) | LivesIn(x,z))))", "score": -1}
{"id": "eqasc_validation_1613", "prediction": "all x y.((Student(x) & (Home(y) | GroupHome(y))) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_1613", "prediction": "all x.(Student(x) -> (exists y.(Home(y) & LivesAt(x,y)) | exists z.(GroupHouse(z) & LivesAt(x,z)))))", "score": -1}
{"id": "eqasc_validation_1613", "prediction": "all x y.((Student(x) & Student(y)) -> (LivesAtHome(x,y) | LivesInGroupHouses(x,y)))", "score": 0}
{"id": "eqasc_validation_1613", "prediction": "all x y z.((Student(x) & Home(y) & GroupHome(z)) -> (LivesAtHome(x,y) | LivesInGroupHome(x,z)))", "score": 0}
{"id": "eqasc_validation_1614", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y)) -> UsesAsPlaceToLive(x,y))", "score": 0}
{"id": "eqasc_validation_1614", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & Shell(z)) -> UsesAsPlaceToLive(x,y,z))", "score": 0}
{"id": "eqasc_validation_1614", "prediction": "all x.(HermitCrab(x) -> UsesDeadSnailShells(x))", "score": 0}
{"id": "eqasc_validation_1614", "prediction": "all x y z.((HermitsCrab(x) & DeadSnail(y) & Shell(z)) -> UsesAsPlaceToLive(x,y,z))", "score": 0}
{"id": "eqasc_validation_1614", "prediction": "all x.(HermitCrab(x) -> (UsesDeadSnailShells(x) & LivesIn(x)))", "score": 0}
{"id": "eqasc_validation_1614", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y)) -> UsesPlaceToLive(x,y))", "score": 0}
{"id": "eqasc_validation_1614", "prediction": "all x y.((HermitsCrab(x) & DeadSnail(y)) -> UsesAsPlaceToLive(x,y))", "score": 0}
{"id": "eqasc_validation_1614", "prediction": "all x.(HermitCrab(x) -> UsesDeadSnails(x))", "score": 0}
{"id": "eqasc_validation_1614", "prediction": "all x.(HermitCrab(x) -> (UsesDeadSnails(x) & LivesIn(x)))", "score": 0}
{"id": "eqasc_validation_1614", "prediction": "all x.(HermitCrab(x) -> UsesDeadSnailShellsAsPlaceToLive(x))", "score": 0}
{"id": "eqasc_validation_1614", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1614", "prediction": "all x.(HermitCrab(x) -> UsesDeadSnailsShells(x))", "score": 0}
{"id": "eqasc_validation_1614", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & Shell(z)) -> UsesPlaceToLive(x,y,z))", "score": 0}
{"id": "eqasc_validation_1614", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & Shell(z)) -> UsesAsPlaceToLive(x,z))", "score": 0}
{"id": "eqasc_validation_1614", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y) & Uses(x,y)) -> PlaceToLive(x))", "score": 0}
{"id": "eqasc_validation_1614", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y)) -> UsesCellsAsPlaceToLive(x,y))", "score": 0}
{"id": "eqasc_validation_1615", "prediction": "all x.(Crab(x) -> Scavenger(x))", "score": 0}
{"id": "eqasc_validation_1615", "prediction": "all x.(Crab(x) -> (Scavenger(x) | HermitCrab(x)))", "score": 0}
{"id": "eqasc_validation_1615", "prediction": "all x y.((Crab(x) & HermitCrab(y)) -> Scavenger(x))", "score": 0}
{"id": "eqasc_validation_1615", "prediction": "all x y.((Crab(x) & Scavenger(y)) -> (HermitCrab(x) | HermitCrab(y)))", "score": 0}
{"id": "eqasc_validation_1615", "prediction": "all x.(Crab(x) -> (Scavenger(x) & HermitCrab(x)))", "score": 6}
{"id": "eqasc_validation_1615", "prediction": "all x y z.((Crab(x) & Scavenger(y) & HermitCrab(z)) -> Scavenger(x))", "score": 0}
{"id": "eqasc_validation_1615", "prediction": "all x y z.((Crab(x) & Scavenger(y) & HermitCrab(z)) -> Scavenger(x,y,z))", "score": 0}
{"id": "eqasc_validation_1615", "prediction": "all x y.((Crab(x) & Scavenger(x)) -> (HermitCrab(y) | HermitCrab(y)))", "score": 0}
{"id": "eqasc_validation_1615", "prediction": "all x y.((Crab(x) & HermitCrab(y)) -> Scavenger(x,y))", "score": 0}
{"id": "eqasc_validation_1615", "prediction": "all x y z.((Crab(x) & Scavenger(y) & HermitCrab(z)) -> Scavenger(x,y))", "score": 0}
{"id": "eqasc_validation_1615", "prediction": "all x y.((Crab(x) & Scavenger(y)) -> (HermitCrab(x) | HermitCrab(x)))", "score": 0}
{"id": "eqasc_validation_1615", "prediction": "all x y z.((Crab(x) & Scavenger(y) & (HermitCrab(z) | HermitCrab(z))) -> Scavenger(x,y,z))", "score": 0}
{"id": "eqasc_validation_1615", "prediction": "all x y z.((Crab(x) & Scavenger(y) & (HermitCrab(z) | HermitCrab(z))) -> Scavenger(x))", "score": 0}
{"id": "eqasc_validation_1615", "prediction": "all x y.((Crab(x) & Scavenger(y)) -> (Scavenger(x) | HermitCrab(y)))", "score": 0}
{"id": "eqasc_validation_1615", "prediction": "all x y.((Crab(x) & Scavenger(x) & HermitCrab(y)) -> Scavenger(x))", "score": 0}
{"id": "eqasc_validation_1615", "prediction": "all x y z.((Crab(x) & Scavenger(y) & (HermitCrab(z) | HermitCrab(z))) -> Scavenger(x,y))", "score": 0}
{"id": "eqasc_validation_1616", "prediction": "exists x y z.(Scavenger(x) & Shell(y) & DeadSnail(z) & UsesForHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1616", "prediction": "exists x y z.(Scavenger(x) & DeadSnail(y) & Shell(z) & UsesForHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1616", "prediction": "exists x y.(Scavenger(x) & Shell(y) & DeadSnail(y) & UsesForHome(x,y))", "score": 0}
{"id": "eqasc_validation_1616", "prediction": "exists x y z.(Scavenger(x) & Shell(y) & DeadSnail(z) & Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1616", "prediction": "exists x y.(Scavenger(x) & Shell(y) & DeadSnail(z) & UsesForHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1616", "prediction": "exists x y z.(Scavenger(x) & Shell(y) & DeadSnail(z) & UsesForHomes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1616", "prediction": "exists x y z.(Scavenger(x) & Shell(y) & DeadSnail(z) & UsesForHome(x,z))", "score": 0}
{"id": "eqasc_validation_1616", "prediction": "exists x y.(Scavenger(x) & DeadSnail(y) & UsesShell(x,y))", "score": 0}
{"id": "eqasc_validation_1616", "prediction": "exists x y z.(Scavenger(x) & Shell(y) & DeadSnake(z) & UsesForHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1616", "prediction": "exists x y z.((Scavenger(x) & DeadSnail(y) & Shell(z)) -> UsesForHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1616", "prediction": "exists x y z.(Scavenger(x) & DeadSnail(y) & Shell(z) & UsesForHomes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1616", "prediction": "exists x y z.(Scavenger(x) & DeadSnake(y) & Shell(z) & UsesForHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1616", "prediction": "exists x y.(Scavenger(x) & Shell(y) & DeadSnail(z) & UsesForHome(x,z))", "score": 0}
{"id": "eqasc_validation_1616", "prediction": "exists x y.(Scavenger(x) & Shell(y) & DeadSnail(y) & Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1616", "prediction": "exists x.(Scavenger(x) & UsesShellsOfDeadSnails(x) & ForHomes(x))", "score": 0}
{"id": "eqasc_validation_1616", "prediction": "exists x y.(Scavenger(x) & Shell(y) & DeadSnail(z) & Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1617", "prediction": "all x.(Gastropod(x) -> (Snake(x) | Slug(x)))", "score": 0}
{"id": "eqasc_validation_1617", "prediction": "all x.(Gastropod(x) -> (Snail(x) | Slug(x)))", "score": 0}
{"id": "eqasc_validation_1617", "prediction": "all x.(Gastropod(x) -> (Snail(x) & Slug(x)))", "score": 0}
{"id": "eqasc_validation_1617", "prediction": "all x.(Gastropod(x) -> (Snake(x) & Slug(x)))", "score": 0}
{"id": "eqasc_validation_1617", "prediction": "all x.(Gastropod(x) -> (Snails(x) | Slugs(x)))", "score": 0}
{"id": "eqasc_validation_1617", "prediction": "all x y.((Gastropod(x) & Snail(y)) -> (Snail(x) | Slug(x)))", "score": 0}
{"id": "eqasc_validation_1617", "prediction": "all x y.((Gastropod(x) & Snake(y)) -> (Snail(x) | Slug(y)))", "score": 0}
{"id": "eqasc_validation_1617", "prediction": "all x y.((Gastropod(x) & Snail(y)) -> (Snake(x) | Slug(x)))", "score": 0}
{"id": "eqasc_validation_1617", "prediction": "all x.(Gastropod(x) -> (Snails(x) & Slugs(x)))", "score": 0}
{"id": "eqasc_validation_1617", "prediction": "all x y.((Gastropod(x) & Snake(y)) -> (Snake(x) | Slug(y)))", "score": 0}
{"id": "eqasc_validation_1617", "prediction": "all x y.((Gastropod(x) & Snake(y)) -> (Snake(x) | Slug(x)))", "score": 0}
{"id": "eqasc_validation_1617", "prediction": "all x y.((Gastropod(x) & Snail(y)) -> (Snail(x) | Slug(y)))", "score": 0}
{"id": "eqasc_validation_1618", "prediction": "all x y z.((HermitCrab(x) & Shell(y) & Gastropod(z)) -> UsesForHomes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1618", "prediction": "all x y z.((HermitCrab(x) & Shell(y) & Gastropod(z)) -> UsesForHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1618", "prediction": "all x y.((HermitCrab(x) & Gastropod(y)) -> UsesShell(x,y))", "score": 0}
{"id": "eqasc_validation_1618", "prediction": "all x y.((HermitCrab(x) & Gastropod(y)) -> UsesShellForHomes(x,y))", "score": 0}
{"id": "eqasc_validation_1618", "prediction": "all x y.((HermitCrab(x) & Gastropod(y)) -> UsesShellForHome(x,y))", "score": 0}
{"id": "eqasc_validation_1618", "prediction": "all x y.((HermitCrab(x) & Shell(y)) -> UsesForHomes(x,y))", "score": 0}
{"id": "eqasc_validation_1618", "prediction": "all x y z.((HermitCrab(x) & Shell(y) & Gastropod(z) & UsesForHome(x,y,z)) -> UsesForHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1618", "prediction": "all x y.((HermitCrab(x) & Shell(y) & Gastropod(y)) -> UsesForHomes(x,y))", "score": 0}
{"id": "eqasc_validation_1618", "prediction": "all x y z.((HermitCrab(x) & Shell(y) & Gastropod(z)) -> Uses(x,y,z))", "score": 0}
{"id": "eqasc_validation_1618", "prediction": "all x y z.((HermitCrab(x) & Shell(y) & Gastropod(z)) -> UsesFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1618", "prediction": "all x y.((HermitCrab(x) & Gastropod(y)) -> UsesShellsForHomes(x,y))", "score": 0}
{"id": "eqasc_validation_1618", "prediction": "all x y.((HermitCrab(x) & Shell(y) & Gastropod(z)) -> UsesForHomes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1618", "prediction": "all x y z.((HermitCrab(x) & Gastropod(y) & Shell(z)) -> UsesForHomes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1618", "prediction": "all x y.((HermitCrab(x) & Shell(y)) -> UsesForHome(x,y))", "score": 0}
{"id": "eqasc_validation_1618", "prediction": "all x y z.((HermitCrab(x) & Shell(y) & Gastropod(z) & Uses(x,y,z)) -> UsesForHomes(x,y,z))", "score": 0}
{"id": "eqasc_validation_1618", "prediction": "all x.(HermitCrab(x) -> (UsesShellsOfGastropods(x) & ForHomes(x)))", "score": 0}
{"id": "eqasc_validation_1619", "prediction": "all x.(Crab(x) -> (UsesShellsOfDeadSnails(x) & Scavenger(x)))", "score": 0}
{"id": "eqasc_validation_1619", "prediction": "all x y z.((Crab(x) & Shell(y) & DeadSnail(z) & UsesForHome(x,y,z)) -> Scavenger(x))", "score": 0}
{"id": "eqasc_validation_1619", "prediction": "all x y z.((Crab(x) & Shell(y) & DeadSnail(z)) -> (UsesForHome(x,y,z) & Scavenger(x)))", "score": 1}
{"id": "eqasc_validation_1619", "prediction": "all x y.((Crab(x) & DeadSnail(y)) -> (UsesShells(x,y) & Scavenger(x)))", "score": 0}
{"id": "eqasc_validation_1619", "prediction": "all x y z.((Crab(x) & Shell(y) & DeadSnail(z)) -> (UsesForHomes(x,y,z) & Scavenger(x)))", "score": 1}
{"id": "eqasc_validation_1619", "prediction": "all x y z.((Crab(x) & DeadSnail(y) & Shell(z)) -> (UsesForHome(x,y,z) & Scavenger(x)))", "score": 1}
{"id": "eqasc_validation_1619", "prediction": "all x.(Crab(x) -> (UsesShellsOfDeadSnailsForHomes(x) & Scavenger(x)))", "score": 0}
{"id": "eqasc_validation_1619", "prediction": "all x y z.((Crab(x) & DeadSnail(y) & Shell(z) & UsesForHome(x,y,z)) -> Scavenger(x))", "score": 0}
{"id": "eqasc_validation_1619", "prediction": "all x y z.((Crab(x) & DeadSnail(y) & Shell(z)) -> (UsesForHomes(x,y,z) & Scavenger(x)))", "score": 1}
{"id": "eqasc_validation_1619", "prediction": "all x y z.((Crab(x) & DeadSnail(y) & Shell(z)) -> (UsesForHome(x,y) & Scavenger(x)))", "score": 1}
{"id": "eqasc_validation_1619", "prediction": "all x y.((Crab(x) & DeadSnail(y)) -> (UsesShell(x,y) & Scavenger(x)))", "score": 1}
{"id": "eqasc_validation_1619", "prediction": "all x y z.((Crab(x) & DeadSnail(y) & Shell(z)) -> (UsesForHomes(x,y) & Scavenger(x)))", "score": 0}
{"id": "eqasc_validation_1619", "prediction": "all x y z.((Crab(x) & DeadSnail(y) & Shell(z)) -> (UsesForHome(x,y) & Scavenger(x,z)))", "score": 0}
{"id": "eqasc_validation_1619", "prediction": "all x.(Crab(x) -> (UsesShellsOfDeadSnail(x) & Scavenger(x)))", "score": 0}
{"id": "eqasc_validation_1619", "prediction": "all x y z.((Crab(x) & DeadSnail(y) & Shell(z)) -> (UsesForHomes(x,y) & Scavenger(x,z)))", "score": 0}
{"id": "eqasc_validation_1620", "prediction": "all x.(HermitCrab(x) -> FindsShells(x))", "score": 0}
{"id": "eqasc_validation_1620", "prediction": "all x y.((HermitCrab(x) & Shell(y)) -> Finds(x,y))", "score": 0}
{"id": "eqasc_validation_1620", "prediction": "all x.(HermitCrab(x) -> FindsShell(x))", "score": 0}
{"id": "eqasc_validation_1620", "prediction": "all x y z.((HermitCrab(x) & Shell(y) & Shell(z)) -> Finds(x,y,z))", "score": 0}
{"id": "eqasc_validation_1620", "prediction": "all x y z.((HermitCrab(x) & Shell(y) & Shell(z)) -> Finds(x,y))", "score": 0}
{"id": "eqasc_validation_1620", "prediction": "all x.((HermitCrab(x) & Shell(y)) -> Finds(x,y))", "score": 0}
{"id": "eqasc_validation_1620", "prediction": "all x.(HermitCrab(x) -> FindsShels(x))", "score": 0}
{"id": "eqasc_validation_1620", "prediction": "all x y z.((HermitCrab(x) & Shell(y) & Shell(z)) -> Find(x,y,z))", "score": 0}
{"id": "eqasc_validation_1620", "prediction": "all x y.((HermitCrab(x) & Shell(y)) -> Find(x,y))", "score": 0}
{"id": "eqasc_validation_1620", "prediction": "all x y z.((HermitCrab(x) & Shell(y) & Shell(z) & Finds(x,y)) -> Finds(x,z))", "score": 0}
{"id": "eqasc_validation_1620", "prediction": "all x y z.((HermitCrab(x) & Shell(y) & Shell(z) & Finds(x,y,z)) -> Finds(x,y,z))", "score": 0}
{"id": "eqasc_validation_1620", "prediction": "all x y z.((HermitCrab(x) & Shell(y) & Shell(z) & Finds(x,y,z)) -> Finds(x,y))", "score": 0}
{"id": "eqasc_validation_1620", "prediction": "all x y z.((HermitCrab(x) & Shell(y)) -> Finds(x,y))", "score": 0}
{"id": "eqasc_validation_1620", "prediction": "all x.(HermitCrab(x) -> FindShells(x))", "score": 0}
{"id": "eqasc_validation_1620", "prediction": "all x y.((HermitCrab(x) & Shell(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_validation_1621", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y)) -> FindsToUseAsHome(x,y))", "score": 0}
{"id": "eqasc_validation_1621", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & DeadSnail(z)) -> FindsToUseAsHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1621", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & Snail(z)) -> FindsToUseAsHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1621", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & DeadSnail(z)) -> FindsForHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1621", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y)) -> FindsForHome(x,y))", "score": 0}
{"id": "eqasc_validation_1621", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & Snail(z)) -> FindsForHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1621", "prediction": "all x.(HermitCrab(x) -> (FindsDeadSnails(x) & UsesAsHome(x)))", "score": 0}
{"id": "eqasc_validation_1621", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & HermitCrab(z)) -> FindsToUseAsHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1621", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & Home(z)) -> FindsToUseAsHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1621", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y)) -> FindsToUseAsHomes(x,y))", "score": 0}
{"id": "eqasc_validation_1621", "prediction": "all x.(HermitCrab(x) -> (FindsDeadSnails(x) & UsesAsHomes(x)))", "score": 0}
{"id": "eqasc_validation_1621", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & DeadSnail(z)) -> FindsAndUsesAsHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1621", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y) & Finds(x,y)) -> UsesAsHome(x,y))", "score": 0}
{"id": "eqasc_validation_1621", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & Snail(z) & Finds(x,y)) -> UsesAsHome(x,z))", "score": 0}
{"id": "eqasc_validation_1621", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & HermitCrab(z)) -> FindsForHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1621", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y)) -> Finds(x,y))", "score": 0}
{"id": "eqasc_validation_1622", "prediction": "all x.(HermitCrab(x) -> UnusualHome(x))", "score": 0}
{"id": "eqasc_validation_1622", "prediction": "all x.(HermitCrab(x) -> UnusualHomes(x))", "score": 0}
{"id": "eqasc_validation_1622", "prediction": "all x.(HermitCrab(x) -> UnusuallyHouses(x))", "score": 0}
{"id": "eqasc_validation_1622", "prediction": "all x.(HermitCrab(x) -> UnusuallyHasHome(x))", "score": 0}
{"id": "eqasc_validation_1622", "prediction": "all x.(HermitCrab(x) -> HasUnusualHomes(x))", "score": 0}
{"id": "eqasc_validation_1622", "prediction": "all x.(HermitCrab(x) -> HasUnusuallyHouses(x))", "score": 0}
{"id": "eqasc_validation_1622", "prediction": "all x y.((HermitCrab(x) & Home(y)) -> Unusual(x,y))", "score": 0}
{"id": "eqasc_validation_1622", "prediction": "all x.(HermitCrab(x) -> UniqueHome(x))", "score": 0}
{"id": "eqasc_validation_1622", "prediction": "all x y.((HermitCrab(x) & Home(y)) -> Unusual(x))", "score": 0}
{"id": "eqasc_validation_1622", "prediction": "all x y.((HermitCrab(x) & Home(y)) -> UnusuallyHas(x,y))", "score": 0}
{"id": "eqasc_validation_1622", "prediction": "all x.(HermitCrab(x) -> UnusuallyHasHomes(x))", "score": 0}
{"id": "eqasc_validation_1622", "prediction": "all x.(HermitCrab(x) -> HasUnusuallyHomes(x))", "score": 0}
{"id": "eqasc_validation_1622", "prediction": "all x.(HermitCrab(x) -> UnusualHouses(x))", "score": 0}
{"id": "eqasc_validation_1622", "prediction": "all x.(HermitCrab(x) -> UnusuallyHomes(x))", "score": 0}
{"id": "eqasc_validation_1622", "prediction": "all x y.((HermitCrab(x) & Home(y)) -> UnusuallyHouses(x,y))", "score": 0}
{"id": "eqasc_validation_1622", "prediction": "all x.(HermitCrab(x) -> UnusuallyHouse(x))", "score": 0}
{"id": "eqasc_validation_1623", "prediction": "all x.((DeadSnailShell(x) & UnusualHome(x)) -> DeadSnailShell(x))", "score": 0}
{"id": "eqasc_validation_1623", "prediction": "all x.((DeadSnailShell(x) & UnusuallyHome(x)) -> UnusualHome(x))", "score": 0}
{"id": "eqasc_validation_1623", "prediction": "all x.((SnailShell(x) & Dead(x)) -> UnusualHome(x))", "score": 0}
{"id": "eqasc_validation_1623", "prediction": "all x.((DeadSnailShell(x) & UnusuallyHouse(x)) -> UnusualHome(x))", "score": 0}
{"id": "eqasc_validation_1623", "prediction": "all x.((DeadSnailShell(x) & UnusuallyHome(x)) -> DeadSnailShell(x))", "score": 0}
{"id": "eqasc_validation_1623", "prediction": "all x.(DeadSnailShell(x) -> UnusualHome(x))", "score": 0}
{"id": "eqasc_validation_1623", "prediction": "all x.((SnailShell(x) & Dead(x)) -> UnusuallyHome(x))", "score": 0}
{"id": "eqasc_validation_1623", "prediction": "all x.((DeadSnailShell(x) & UnusualHome(x)) -> (DeadSnailShell(x) & UnusualHome(x)))", "score": 0}
{"id": "eqasc_validation_1623", "prediction": "all x.(DeadSnailShell(x) -> UnusuallyHome(x))", "score": 0}
{"id": "eqasc_validation_1623", "prediction": "all x.((DeadSnailShell(x) & UnusualHome(x)) -> UnusualHome(x))", "score": 0}
{"id": "eqasc_validation_1623", "prediction": "all x.((DeadSnailShell(x) & UnusualHome(x)) -> (DeadSnailShell(x) | UnusualHome(x)))", "score": 0}
{"id": "eqasc_validation_1623", "prediction": "all x y z.((DeadSnailShell(x) & Snail(y) & Home(z)) -> UnusualHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1623", "prediction": "all x y z.((DeadSnailShell(x) & Snail(y) & Home(z)) -> UnusuallyHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1623", "prediction": "all x.((DeadSnailShell(x) & UnusuallyHome(x)) -> Dead(x))", "score": 0}
{"id": "eqasc_validation_1623", "prediction": "all x.((DeadSnailShell(x) & UnusualHome(x)) -> Dead(x))", "score": 0}
{"id": "eqasc_validation_1623", "prediction": "all x.((SnailShell(x) & Dead(x)) -> UnusuallyHouse(x))", "score": 0}
{"id": "eqasc_validation_1624", "prediction": "all x.(HermitCrab(x) -> (LivesInShell(x) & Scavenger(x)))", "score": 0}
{"id": "eqasc_validation_1624", "prediction": "all x.(HermitCrab(x) -> (LivesInShells(x) & Scavenger(x)))", "score": 0}
{"id": "eqasc_validation_1624", "prediction": "all x y.((HermitCrab(x) & Shell(y)) -> (LivesIn(x,y) & Scavenger(x)))", "score": 0}
{"id": "eqasc_validation_1624", "prediction": "all x y z.((HermitCrab(x) & Shell(y) & Scavenger(z)) -> (LivesIn(x,y) & Scavenger(x)))", "score": 0}
{"id": "eqasc_validation_1624", "prediction": "all x y z.((HermitCrab(x) & Shell(y) & Scavenger(z)) -> (LivesIn(x,y) & Scavenger(x,z)))", "score": 0}
{"id": "eqasc_validation_1624", "prediction": "all x.(HermitCrab(x) -> (LivesInShelled(x) & Scavenger(x)))", "score": 0}
{"id": "eqasc_validation_1624", "prediction": "all x.(HermitCrab(x) -> (LivesInShels(x) & Scavenger(x)))", "score": 0}
{"id": "eqasc_validation_1624", "prediction": "all x y z.((HermitCrab(x) & Shell(y) & Scavenger(z)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_1624", "prediction": "all x.(HermitCrab(x) -> (LivingInShells(x) & Scavenger(x)))", "score": 0}
{"id": "eqasc_validation_1624", "prediction": "all x.(HermitCrab(x) -> (LivingInShell(x) & Scavenger(x)))", "score": 0}
{"id": "eqasc_validation_1624", "prediction": "all x y z.((HermitCrab(x) & Shell(y) & Scavenger(z)) -> (LivesIn(x,y) & Scavenger(z)))", "score": 0}
{"id": "eqasc_validation_1624", "prediction": "all x.(HermitCrab(x) -> (LiveInShell(x) & Scavenger(x)))", "score": 0}
{"id": "eqasc_validation_1625", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y)) -> ScavengerFor(x,y))", "score": 0}
{"id": "eqasc_validation_1625", "prediction": "all x.(HermitCrab(x) -> (Scavenger(x) & ForDeadSnails(x)))", "score": 0}
{"id": "eqasc_validation_1625", "prediction": "all x.(HermitCrab(x) -> (ScavengerForDeadSnails(x) & ScavengerForDeadSnails(x)))", "score": 0}
{"id": "eqasc_validation_1625", "prediction": "all x y.((HermitCrab(x) & DeadSnake(y)) -> ScavengerFor(x,y))", "score": 0}
{"id": "eqasc_validation_1625", "prediction": "all x.(HermitCrab(x) -> (ScavengerForDeadSnails(x) & ForDeadSnails(x)))", "score": 0}
{"id": "eqasc_validation_1625", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y)) -> Scavenger(x,y))", "score": 0}
{"id": "eqasc_validation_1625", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & DeadSnail(z)) -> ScavengerFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1625", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & Snail(z)) -> ScavengerFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1625", "prediction": "all x y z.((HermitCrab(x) & Snail(y) & DeadSnail(z)) -> ScavengerFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1625", "prediction": "all x.(HermitCrab(x) -> (ScavengerForDeadSnails(x) | ScavengerForDeadSnails(x)))", "score": 0}
{"id": "eqasc_validation_1625", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & DeadSnail(z)) -> Scavenger(x,y,z))", "score": 0}
{"id": "eqasc_validation_1625", "prediction": "all x y.((HermitCrab(x) & DeadSnake(y)) -> Scavenger(x,y))", "score": 0}
{"id": "eqasc_validation_1625", "prediction": "all x y z.((HermitCrab(x) & Snail(y) & Dead(z)) -> ScavengerFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1625", "prediction": "all x.(HermitCrab(x) -> ScavengerForDeadSnails(x))", "score": 0}
{"id": "eqasc_validation_1625", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & Snail(z)) -> Scavenger(x,y,z))", "score": 0}
{"id": "eqasc_validation_1626", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> (DecreasesTemperatureByBlockingSunlight(x,y)))", "score": 0}
{"id": "eqasc_validation_1626", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> DecreasesTemperatureByBlockingSunlight(x,y))", "score": 0}
{"id": "eqasc_validation_1626", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> (DecreasesTemperature(x,y) & BlocksSun(x,y)))", "score": 0}
{"id": "eqasc_validation_1626", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> DecreasesTemperatureByBlockingSun(x,y))", "score": 0}
{"id": "eqasc_validation_1626", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> (DecreasesTemperatureByBlockingSun(x,y)))", "score": 0}
{"id": "eqasc_validation_1626", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> (DecreasesTemperature(x,y) & BlocksSunlight(x,y)))", "score": 0}
{"id": "eqasc_validation_1626", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> (DecreasesTemperature(x,y) & BlocksSunlight(x)))", "score": 0}
{"id": "eqasc_validation_1626", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y) & BlocksSun(x,y)) -> DecreasesTemperatureByBlockingSun(x,y))", "score": 0}
{"id": "eqasc_validation_1626", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> (DecreasesTemperature(x,y) & BlocksSun(x)))", "score": 0}
{"id": "eqasc_validation_1626", "prediction": "all x.((VolcanicAsh(x) & Atmosphere(x)) -> (DecreasesTemperature(x) & BlocksSun(x)))", "score": 0}
{"id": "eqasc_validation_1626", "prediction": "all x y z.((VolcanicAsh(x) & Atmosphere(y) & Sun(z)) -> DecreasesTemperatureByBlocking(x,y,z))", "score": 0}
{"id": "eqasc_validation_1626", "prediction": "all x y z.((VolcanicAsh(x) & Atmosphere(y) & Sun(z)) -> (DecreasesTemperatureByBlocking(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1626", "prediction": "all x.((VolcanicAsh(x) & Atmosphere(x)) -> DecreasesTemperatureByBlockingSun(x))", "score": 0}
{"id": "eqasc_validation_1626", "prediction": "all x y z.((VolcanicAsh(x) & Atmosphere(y) & Sun(z)) -> (DecreasesTemperature(x,y) & BlocksSun(x,z)))", "score": 0}
{"id": "eqasc_validation_1626", "prediction": "all x.((VolcanicAsh(x) & Atmosphere(x)) -> DecreasesTemperatureByBlockingSunlight(x))", "score": 0}
{"id": "eqasc_validation_1626", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> (DecreasesTemperature(x) & BlocksSun(x)))", "score": 0}
{"id": "eqasc_validation_1627", "prediction": "all x.(Aerosol(x) -> (Dust(x) | VolcanicAsh(x) | Smoke(x)))", "score": 0}
{"id": "eqasc_validation_1627", "prediction": "all x.((Aerosol(x) & Dust(x) & VolcanicAsh(x) & Smoke(x)) -> Aerosol(x))", "score": 0}
{"id": "eqasc_validation_1627", "prediction": "all x.((Aerosol(x) & (Dust(x) | VolcanicAsh(x) | Smoke(x))) -> Aerosol(x))", "score": 0}
{"id": "eqasc_validation_1627", "prediction": "exists x.(Aerosol(x) & (Dust(x) | VolcanicAsh(x) | Smoke(x)))", "score": 0}
{"id": "eqasc_validation_1627", "prediction": "all x.(Airsol(x) -> (Dust(x) | VolcanicAsh(x) | Smoke(x)))", "score": 0}
{"id": "eqasc_validation_1627", "prediction": "all x.((Airsol(x) & Dust(x) & VolcanicAsh(x) & Smoke(x)) -> Aerosol(x))", "score": 0}
{"id": "eqasc_validation_1627", "prediction": "all x.((Aerosol(x) & Dust(x)) | VolcanicAsh(x) | Smoke(x)) -> Aerosol(x))", "score": -1}
{"id": "eqasc_validation_1627", "prediction": "exists x.(Aerosol(x) & Dust(x) & VolcanicAsh(x) & Smoke(x))", "score": 0}
{"id": "eqasc_validation_1627", "prediction": "all x.(Aerosol(x) -> (Dum(x) | VolcanicAsh(x) | Smoke(x)))", "score": 0}
{"id": "eqasc_validation_1627", "prediction": "all x.(Aerosol(x) -> ((Dust(x) | VolcanicAsh(x) | Smoke(x))))", "score": 0}
{"id": "eqasc_validation_1627", "prediction": "all x.((Aerosol(x) & Dust(x) & VolcanicAsh(x)) -> Smoke(x))", "score": 0}
{"id": "eqasc_validation_1627", "prediction": "(exists x.(Aerosol(x) & Dust(x)) & exists y.(VolcanicAsh(y) & Smoke(y))))", "score": -1}
{"id": "eqasc_validation_1627", "prediction": "all x.((Airsol(x) & Dust(x)) | VolcanicAsh(x) | Smoke(x)) -> Aerosol(x))", "score": -1}
{"id": "eqasc_validation_1628", "prediction": "exists x.(Aerosol(x) & CanDecreaseTemperaturesByBlockingSun(x))", "score": 0}
{"id": "eqasc_validation_1628", "prediction": "exists x.(Aerosol(x) & CanDecreaseTemperatures(x) & BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1628", "prediction": "exists x.(Aerosol(x) & CanDecreaseTemperaturesByBlockingSunlight(x))", "score": 0}
{"id": "eqasc_validation_1628", "prediction": "exists x.(Aerosol(x) & CanDecreaseTemperature(x) & BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1628", "prediction": "exists x.(Aerosol(x) & CanDecreaseTemperatureByBlockingSun(x))", "score": 0}
{"id": "eqasc_validation_1628", "prediction": "exists x.(Airsol(x) & CanDecreaseTemperaturesByBlockingSun(x))", "score": 0}
{"id": "eqasc_validation_1628", "prediction": "exists x y.(Aerosol(x) & Aerosol(y) & CanDecreaseTemperaturesByBlockingSun(x,y))", "score": 0}
{"id": "eqasc_validation_1628", "prediction": "exists x.(Aerosol(x) & DecreaseTemperaturesByBlockingSun(x))", "score": 0}
{"id": "eqasc_validation_1628", "prediction": "exists x.(Aerosol(x) & CanDecreaseTemperatures(x) & BlocksSunlight(x))", "score": 0}
{"id": "eqasc_validation_1628", "prediction": "exists x.(Aerosol(x) & DecreasesTemperaturesByBlockingSun(x))", "score": 0}
{"id": "eqasc_validation_1628", "prediction": "exists x.(Aerosol(x) & CanDecreaseTemperatures(x) & BlockSun(x))", "score": 0}
{"id": "eqasc_validation_1628", "prediction": "exists x.(Aerosol(x) & DecreasesTemperatures(x) & BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1628", "prediction": "exists x.(Aerosol(x) & (DecreasesTemperatures(x) | BlocksSun(x)))", "score": 0}
{"id": "eqasc_validation_1628", "prediction": "exists x.(Aerosol(x) & BlocksSun(x) & CanDecreaseTemperatures(x))", "score": 0}
{"id": "eqasc_validation_1628", "prediction": "exists x.(Airsol(x) & CanDecreaseTemperatures(x) & BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1628", "prediction": "exists x.(Aerosol(x) & DecreasesTemperaturesByBlockingSunlight(x))", "score": 0}
{"id": "eqasc_validation_1629", "prediction": "all x.((EruptiveProduct(x) & HawaiianVolcano(x)) -> SpreadsWideRangeOfTemperatures(x))", "score": 0}
{"id": "eqasc_validation_1629", "prediction": "all x y.((EruptiveProduct(x) & HawaiianVolcano(y)) -> SpreadsWideRangeOfTemperatures(x,y))", "score": 0}
{"id": "eqasc_validation_1629", "prediction": "all x y.((EruptiveProduct(x) & HawaiianVolcano(y)) -> (SpansWideRangeOfTemperatures(x,y)))", "score": 0}
{"id": "eqasc_validation_1629", "prediction": "all x.((HawaiianVolcano(x) & EruptiveProduct(x)) -> SpreadsWideRangeOfTemperatures(x))", "score": 0}
{"id": "eqasc_validation_1629", "prediction": "all x.((HawaiianVolcano(x) & EruptiveProducts(x)) -> SpreadsWideRangeOfTemperatures(x))", "score": 0}
{"id": "eqasc_validation_1629", "prediction": "all x.((EruptiveProducts(x) & HawaiianVolcano(x)) -> SpreadsWideRangeOfTemperatures(x))", "score": 0}
{"id": "eqasc_validation_1629", "prediction": "all x y z.((EruptiveProduct(x) & HawaiianVolcano(y) & Temperature(z)) -> SpreadsWideRange(x,y,z))", "score": 0}
{"id": "eqasc_validation_1629", "prediction": "all x y.((HawaiianVolcano(x) & EruptiveProduct(y)) -> (SpansWideRangeOfTemperatures(y)))", "score": 0}
{"id": "eqasc_validation_1629", "prediction": "all x.((EruptiveProducts(x) & HawaiianVolcanoes(x)) -> SpreadsWideRangeOfTemperatures(x))", "score": 0}
{"id": "eqasc_validation_1629", "prediction": "all x.((EruptiveProduct(x) & HawaiianVolcano(x)) -> SpansWideRangeOfTemperatures(x))", "score": 0}
{"id": "eqasc_validation_1629", "prediction": "all x.(EruptiveProductsOfHawaiianVolcanoes(x) -> SpreadsWideRangeOfTemperatures(x))", "score": 0}
{"id": "eqasc_validation_1629", "prediction": "all x.((EruptiveProduct(x) & HawaiianVolcano(x)) -> WideRangeOfTemperatures(x))", "score": 0}
{"id": "eqasc_validation_1629", "prediction": "all x y.((HawaiianVolcano(x) & EruptiveProduct(y)) -> SpreadsWideRangeOfTemperatures(x,y))", "score": 0}
{"id": "eqasc_validation_1629", "prediction": "all x y.((HawaiianVolcano(x) & EruptiveProduct(y)) -> SpreadsWideRangeOfTemperatures(y))", "score": 0}
{"id": "eqasc_validation_1629", "prediction": "all x y z.((EruptiveProduct(x) & HawaiianVolcano(y) & TemperatureRange(z)) -> SpreadsWideRange(x,y,z))", "score": 0}
{"id": "eqasc_validation_1629", "prediction": "all x y.((HawaiianVolcano(x) & EruptiveProduct(y)) -> (SpansWideRangeOfTemperatures(x,y)))", "score": 0}
{"id": "eqasc_validation_1630", "prediction": "all x y.((EruptiveProduct(x) & Sun(y)) -> Blocks(x,y))", "score": 0}
{"id": "eqasc_validation_1630", "prediction": "all x y z.((EruptiveProduct(x) & Sun(y) & Sun(z)) -> Blocks(x,y,z))", "score": 0}
{"id": "eqasc_validation_1630", "prediction": "all x.(EruptiveProduct(x) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1630", "prediction": "all x.(EruptiveProducts(x) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1630", "prediction": "all x.((EruptiveProduct(x) & BlocksSun(x)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1630", "prediction": "all x.((EruptiveProduct(x) & BlockSun(x)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1630", "prediction": "all x y.((EruptiveProduct(x) & Sun(y)) -> BlocksSun(x,y))", "score": 0}
{"id": "eqasc_validation_1630", "prediction": "all x.((Product(x) & Eruptive(x)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1630", "prediction": "all x y z.((EruptiveProduct(x) & Sun(y) & Sun(z)) -> Blocks(x,y))", "score": 0}
{"id": "eqasc_validation_1630", "prediction": "all x y z.((EruptiveProduct(x) & Sun(y) & Sun(z)) -> BlocksSun(x,y,z))", "score": 0}
{"id": "eqasc_validation_1630", "prediction": "all x.((EruptiveProduct(x) & BlockSun(x)) -> BlockSun(x))", "score": 0}
{"id": "eqasc_validation_1630", "prediction": "all x y.((EruptiveProduct(x) & Sun(y)) -> BlockSun(x,y))", "score": 0}
{"id": "eqasc_validation_1630", "prediction": "all x y z.((EruptiveProduct(x) & Sun(y) & Sun(z) & Blocks(x,y,z)) -> Blocks(x,y,z))", "score": 0}
{"id": "eqasc_validation_1630", "prediction": "all x.(EruptiveProductsBlockSun(x) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1630", "prediction": "all x y z.((EruptiveProduct(x) & Sun(y) & Sun(z) & Blocks(x,y,z)) -> Blocks(x,y))", "score": 0}
{"id": "eqasc_validation_1630", "prediction": "all x y.((EruptiveProduct(x) & Sun(y) & Blocks(x,y)) -> Blocks(x,y))", "score": 0}
{"id": "eqasc_validation_1631", "prediction": "all x y.((Cloud(x) & Sun(y)) -> (Increases(x,y) & Blocks(x,y)))", "score": 0}
{"id": "eqasc_validation_1631", "prediction": "all x y.((Cloud(x) & Sun(y) & Increases(x,y)) -> TemperaturesDrop(x))", "score": 0}
{"id": "eqasc_validation_1631", "prediction": "all x y.((Cloud(x) & Sun(y) & Increases(x,y)) -> TemperatureDrop(x))", "score": 0}
{"id": "eqasc_validation_1631", "prediction": "all x y.((Cloud(x) & Sun(y) & Increases(x,y)) -> DropsTemperatures(x))", "score": 0}
{"id": "eqasc_validation_1631", "prediction": "all x y.((Cloud(x) & Sun(y) & Increased(x,y)) -> TemperatureDrop(x))", "score": 0}
{"id": "eqasc_validation_1631", "prediction": "all x y z.((Cloud(x) & Sun(y) & Temperature(z)) -> (Increases(x,y) & Blocks(x,y) & Drops(z)))", "score": 0}
{"id": "eqasc_validation_1631", "prediction": "all x y z.((Cloud(x) & Sun(y) & Temperature(z)) -> (Increases(x,y) & Blocks(x,z) & Drops(x,z)))", "score": 0}
{"id": "eqasc_validation_1631", "prediction": "all x y.((Cloud(x) & Sun(y) & Increases(x,y)) -> TemperatureDrops(x))", "score": 0}
{"id": "eqasc_validation_1631", "prediction": "all x y.((Cloud(x) & Sun(y)) -> (Increases(x,y) & Blocks(x,y) & TemperaturesDrop(x)))", "score": 0}
{"id": "eqasc_validation_1631", "prediction": "all x y.((Cloud(x) & Sun(y)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_validation_1631", "prediction": "all x y.((Cloud(x) & Sun(y)) -> (Increases(x,y) & Blocks(x,y) & DropsTemperatures(x)))", "score": 0}
{"id": "eqasc_validation_1631", "prediction": "all x y z.((Cloud(x) & Sun(y) & Temperature(z)) -> (Increases(x,y) & Blocks(x,y) & Drops(x,z)))", "score": 0}
{"id": "eqasc_validation_1631", "prediction": "all x y.((Cloud(x) & Sun(y) & Increased(x,y)) -> DropsTemperatures(x))", "score": 0}
{"id": "eqasc_validation_1631", "prediction": "all x y.((Cloud(x) & Sun(y) & Increases(x,y)) -> TemperaturesDrop(x,y))", "score": 0}
{"id": "eqasc_validation_1631", "prediction": "all x.((Cloud(x) & CloudBlocksSun(x)) -> TemperaturesDrop(x))", "score": 0}
{"id": "eqasc_validation_1631", "prediction": "all x y z.((Cloud(x) & Sun(y) & Temperature(z)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_validation_1632", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> IncreasesClouds(x,y))", "score": 0}
{"id": "eqasc_validation_1632", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> (IncreasesClouds(x,y) & BlocksSun(x,y)))", "score": 0}
{"id": "eqasc_validation_1632", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> IncreasesCloudsBlockingSun(x,y))", "score": 0}
{"id": "eqasc_validation_1632", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> (IncreasesClouds(x,y) & BlocksSun(x)))", "score": 0}
{"id": "eqasc_validation_1632", "prediction": "all x.(VolcanicAsh(x) -> (IncreasesClouds(x) & BlocksSun(x)))", "score": 0}
{"id": "eqasc_validation_1632", "prediction": "all x y z.((VolcanicAsh(x) & Atmosphere(y) & Cloud(z) & BlocksSun(z)) -> Increases(x,y,z))", "score": 0}
{"id": "eqasc_validation_1632", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> (IncreasesClouds(x,y) & BlocksSun(y)))", "score": 0}
{"id": "eqasc_validation_1632", "prediction": "all x y z.((VolcanicAsh(x) & Atmosphere(y) & Cloud(z)) -> (Increases(x,z) & BlocksSun(z)))", "score": 0}
{"id": "eqasc_validation_1632", "prediction": "all x.(VolcanicAsh(x) -> IncreasesClouds(x))", "score": 0}
{"id": "eqasc_validation_1632", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> IncreasesCloudsBlockSun(x,y))", "score": 0}
{"id": "eqasc_validation_1632", "prediction": "all x y z.((VolcanicAsh(x) & Atmosphere(y) & Cloud(z)) -> Increases(x,y,z))", "score": 0}
{"id": "eqasc_validation_1632", "prediction": "all x y z.((VolcanicAsh(x) & Atmosphere(y) & Cloud(z) & BlockSun(z)) -> Increases(x,y,z))", "score": 0}
{"id": "eqasc_validation_1632", "prediction": "all x.((VolcanicAsh(x) & Atmosphere(x)) -> (IncreasesClouds(x) & BlocksSun(x)))", "score": 0}
{"id": "eqasc_validation_1632", "prediction": "all x.((VolcanicAsh(x) & Atmosphere(x)) -> IncreasesClouds(x))", "score": 0}
{"id": "eqasc_validation_1632", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y) & IncreasesClouds(x,y)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1632", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y) & IncreasesClouds(x,y)) -> BlocksSun(x,y))", "score": 0}
{"id": "eqasc_validation_1633", "prediction": "all x.((VolcanicAsh(x) & SpewedIntoAtmosphere(x)) -> BlocksSunRadiation(x))", "score": 0}
{"id": "eqasc_validation_1633", "prediction": "all x.((VolcanicAsh(x) & SpewedIntoAtmosphere(x)) -> BlocksRadiation(x))", "score": 0}
{"id": "eqasc_validation_1633", "prediction": "all x.((VolcanicAsh(x) & SpewedIntoAtmosphere(x)) -> (BlocksSunRadiation(x) & CoolsAir(x)))", "score": 0}
{"id": "eqasc_validation_1633", "prediction": "all x.(VolcanicAsh(x) -> (SpewedIntoAtmosphere(x) & BlocksSunRadiation(x) & CoolsAir(x)))", "score": 0}
{"id": "eqasc_validation_1633", "prediction": "all x y.((VolcanicAsh(x) & SpewedIntoAtmosphere(x)) -> BlocksRadiation(x,y))", "score": 0}
{"id": "eqasc_validation_1633", "prediction": "all x.(VolcanicAsh(x) -> (SpewedIntoAtmosphere(x) & BlocksRadiation(x) & CoolsAir(x)))", "score": 0}
{"id": "eqasc_validation_1633", "prediction": "all x y.((VolcanicAsh(x) & SpewedIntoAtmosphere(x)) -> BlocksSunRadiation(x,y))", "score": 0}
{"id": "eqasc_validation_1633", "prediction": "all x y.((VolcanicAsh(x) & SpewedIntoAtmosphere(x)) -> (BlocksSunRadiation(x) & CoolsAir(x)))", "score": 0}
{"id": "eqasc_validation_1633", "prediction": "all x.((VolcanicAsh(x) & SpewedIntoAtmosphere(x)) -> (BlocksRadiation(x) & CoolsAir(x)))", "score": 0}
{"id": "eqasc_validation_1633", "prediction": "all x y.((VolcanicAsh(x) & SpewedIntoAtmosphere(x)) -> (BlocksSunRadiation(x,y) & CoolsAir(y)))", "score": 0}
{"id": "eqasc_validation_1633", "prediction": "all x y.((VolcanicAsh(x) & SpewedIntoAtmosphere(x)) -> (BlocksSunRadiation(x) & CoolsAir(y)))", "score": 0}
{"id": "eqasc_validation_1633", "prediction": "all x y.((VolcanicAsh(x) & SpewedIntoAtmosphere(x)) -> (BlocksRadiation(x,y) & CoolsAir(y)))", "score": 0}
{"id": "eqasc_validation_1633", "prediction": "all x.((VolcanicAsh(x) & SpewedIntoAtmosphere(x)) -> BlocksSunRadiationCoolingAir(x))", "score": 0}
{"id": "eqasc_validation_1633", "prediction": "all x y.((VolcanicAsh(x) & SpewedIntoAtmosphere(x) & Sun(y)) -> BlocksRadiation(x,y))", "score": 0}
{"id": "eqasc_validation_1633", "prediction": "all x.((VolcanicAsh(x) & SpewedIntoAtmosphere(x)) -> BlocksSunRadiation(x) & CoolsAir(x))", "score": 0}
{"id": "eqasc_validation_1633", "prediction": "all x y.((VolcanicAsh(x) & SpewedIntoAtmosphere(x)) -> (BlocksSunRadiation(x,y) & CoolsAir(x,y)))", "score": 0}
{"id": "eqasc_validation_1634", "prediction": "all x.(VolcanicAsh(x) -> (BlocksSun(x) & CoolsAir(x)))", "score": 0}
{"id": "eqasc_validation_1634", "prediction": "all x y z.((VolcanicAsh(x) & Sun(y) & Air(z)) -> (Blocks(x,y) & Cools(x,z)))", "score": 0}
{"id": "eqasc_validation_1634", "prediction": "all x y.((VolcanicAsh(x) & Sun(y)) -> (Blocks(x,y) & CoolsAir(x)))", "score": 0}
{"id": "eqasc_validation_1634", "prediction": "all x y z.((VolcanicAsh(x) & Sun(y) & Air(z)) -> (BlocksSun(x,y) & CoolsAir(x,z)))", "score": 0}
{"id": "eqasc_validation_1634", "prediction": "all x y.((VolcanicAsh(x) & Sun(y)) -> (Blocks(x,y) & CoolsAir(x,y)))", "score": 0}
{"id": "eqasc_validation_1634", "prediction": "all x y.((VolcanicAsh(x) & Sun(y)) -> BlocksAndCoolsAir(x,y))", "score": 0}
{"id": "eqasc_validation_1634", "prediction": "all x y z.((VolcanicAsh(x) & Sun(y) & Air(z)) -> BlocksAndCools(x,y,z))", "score": 0}
{"id": "eqasc_validation_1634", "prediction": "all x y.((VolcanicAsh(x) & Sun(y)) -> (BlocksSun(x,y) & CoolsAir(x,y)))", "score": 0}
{"id": "eqasc_validation_1634", "prediction": "all x y z.((VolcanicAsh(x) & Sun(y) & Air(z) & Blocks(x,y)) -> Cools(x,z))", "score": 0}
{"id": "eqasc_validation_1634", "prediction": "all x y z.((VolcanicAsh(x) & Sun(y) & Air(z)) -> (Blocks(x,y) | Cools(x,z)))", "score": 0}
{"id": "eqasc_validation_1634", "prediction": "all x y z w.((VolcanicAsh(x) & Sun(y) & Air(z) & Blocks(x,y)) -> Cools(x,z))", "score": 0}
{"id": "eqasc_validation_1634", "prediction": "all x y.((VolcanicAsh(x) & Sun(y)) -> (BlocksSun(x,y) & CoolsAir(x)))", "score": 0}
{"id": "eqasc_validation_1634", "prediction": "all x y z w.((VolcanicAsh(x) & Sun(y) & Air(z)) -> (Blocks(x,y) & Cools(x,z)))", "score": 0}
{"id": "eqasc_validation_1634", "prediction": "all x y z.((VolcanicAsh(x) & Sun(y) & Air(z)) -> BlocksAndColds(x,y,z))", "score": 0}
{"id": "eqasc_validation_1634", "prediction": "all x y.((VolcanicAsh(x) & Sun(y) & Air(z)) -> (Blocks(x,y) & Cools(x,z)))", "score": 0}
{"id": "eqasc_validation_1634", "prediction": "all x y.((VolcanicAsh(x) & Sun(y)) -> BlocksAndColdsAir(x,y))", "score": 0}
{"id": "eqasc_validation_1635", "prediction": "all x.(VolcanicAsh(x) -> ConsistsOfFineDustyParticles(x))", "score": 0}
{"id": "eqasc_validation_1635", "prediction": "all x.(VolcanicAsh(x) -> FineDustyParticles(x))", "score": 0}
{"id": "eqasc_validation_1635", "prediction": "all x.((VolcanicAsh(x) & FineDustyParticles(x)) -> ConsistsOf(x,y))", "score": 0}
{"id": "eqasc_validation_1635", "prediction": "all x y.((VolcanicAsh(x) & FineDustyParticles(y)) -> ConsistsOf(x,y))", "score": 0}
{"id": "eqasc_validation_1635", "prediction": "all x.(VolcanicAsh(x) -> (FineDustyParticles(x) & ConsistsOf(x,y)))", "score": 0}
{"id": "eqasc_validation_1635", "prediction": "all x.(VolcanicAsh(x) -> (ContainsFineDustyParticles(x)))", "score": 0}
{"id": "eqasc_validation_1635", "prediction": "all x.(VolcanicAsh(x) -> (FineDustyParticles(x) & Contains(x,y)))", "score": 0}
{"id": "eqasc_validation_1635", "prediction": "all x y.((VolcanicAsh(x) & Fine(y) & Dusty(y)) -> ConsistsOf(x,y))", "score": 0}
{"id": "eqasc_validation_1635", "prediction": "all x.(VolcanicAsh(x) -> (FineDustyParticles(x) | FineParticles(x)))", "score": 0}
{"id": "eqasc_validation_1635", "prediction": "all x.(VolcanicAsh(x) -> (ConsistsOfFineDustyParticles(x)))", "score": 0}
{"id": "eqasc_validation_1635", "prediction": "all x.(VolcanicAsh(x) -> (FineDustyParticles(x) & FineParticles(x)))", "score": 0}
{"id": "eqasc_validation_1635", "prediction": "all x.(VolcanicAsh(x) -> exists y.(Fine(y) & Dusty(y) & ConsistsOf(x,y)))", "score": 0}
{"id": "eqasc_validation_1635", "prediction": "all x.(VolcanicAsh(x) -> (FineDustyParticles(x) & Fine(x)))", "score": 0}
{"id": "eqasc_validation_1635", "prediction": "all x.(VolcanicAsh(x) -> (Fine(x) & Dusty(x)))", "score": 0}
{"id": "eqasc_validation_1636", "prediction": "all x y.((FineDustyParticles(x) & Atmosphere(y)) -> DecreasesTemperatureByBlockingSunlight(x,y))", "score": 0}
{"id": "eqasc_validation_1636", "prediction": "all x y.((FineDustyParticles(x) & Atmosphere(y) & BlocksSun(x,y)) -> DecreasesTemperatureByBlockingSun(x,y))", "score": 0}
{"id": "eqasc_validation_1636", "prediction": "all x y.((FineDustyParticles(x) & Atmosphere(y)) -> (DecreasesTemperatureByBlockingSunlight(x,y)))", "score": 0}
{"id": "eqasc_validation_1636", "prediction": "all x y.((FineDustyParticles(x) & Atmosphere(y)) -> (DecreasesTemperature(x,y) & BlocksSun(x,y)))", "score": 0}
{"id": "eqasc_validation_1636", "prediction": "all x y.((FineDustyParticles(x) & Atmosphere(y) & BlocksSun(x)) -> DecreasesTemperatureByBlockingSun(x,y))", "score": 0}
{"id": "eqasc_validation_1636", "prediction": "all x y z.((FineDustyParticles(x) & Atmosphere(y) & Sun(z)) -> DecreasesTemperatureByBlocking(x,y,z))", "score": 0}
{"id": "eqasc_validation_1636", "prediction": "all x y.((FineDustyParticles(x) & Atmosphere(y) & BlocksSun(x,y)) -> DecreasesTemperatureByBlockingSun(x))", "score": 0}
{"id": "eqasc_validation_1636", "prediction": "all x y.((FineD dustyParticles(x) & Atmosphere(y) & BlocksSun(x,y)) -> DecreasesTemperatureByBlockingSun(x,y))", "score": -1}
{"id": "eqasc_validation_1636", "prediction": "all x.((FineDustyParticles(x) & Atmosphere(x) & BlocksSun(x)) -> DecreasesTemperatureByBlockingSun(x))", "score": 0}
{"id": "eqasc_validation_1636", "prediction": "all x y.((FineDustyParticles(x) & Atmosphere(y)) -> (DecreasesTemperature(x,y) & BlocksSun(x)))", "score": 0}
{"id": "eqasc_validation_1636", "prediction": "all x y.((FineDustyParticles(x) & Atmosphere(y)) -> DecreasesTemperatureByBlockingSunlight(x))", "score": 0}
{"id": "eqasc_validation_1636", "prediction": "all x.((FineDustyParticles(x) & Atmosphere(x)) -> DecreasesTemperatureByBlockingSunlight(x))", "score": 0}
{"id": "eqasc_validation_1636", "prediction": "all x y.((FineDustyParticles(x) & Atmosphere(y)) -> DecreasesTemperatureByBlockingSun(x,y))", "score": 0}
{"id": "eqasc_validation_1636", "prediction": "all x y.((FineDustyParticles(x) & Atmosphere(y)) -> (DecreasesTemperature(x,y) & BlocksSunlight(x)))", "score": 0}
{"id": "eqasc_validation_1636", "prediction": "all x y.((FineDustyParticles(x) & Atmosphere(y)) -> (DecreasesTemperature(x,y) & BlocksSunlight(x,y)))", "score": 0}
{"id": "eqasc_validation_1636", "prediction": "all x y.((FineDustyParticles(x) & Atmosphere(y)) -> (DecreasesTemperatureByBlockingSunlight(x)))", "score": 0}
{"id": "eqasc_validation_1637", "prediction": "all x y.((Atmosphere(x) & Object(y)) -> AirAround(x,y))", "score": 0}
{"id": "eqasc_validation_1637", "prediction": "all x y z.((Atmosphere(x) & Object(y) & Space(z)) -> AirAround(x,y,z))", "score": 0}
{"id": "eqasc_validation_1637", "prediction": "all x.(Atmosphere(x) -> (AirAroundObject(x) & InSpace(x)))", "score": 0}
{"id": "eqasc_validation_1637", "prediction": "all x.(Atmosphere(x) -> AirAroundObject(x))", "score": 0}
{"id": "eqasc_validation_1637", "prediction": "all x.(Atmosphere(x) -> exists y.(Object(y) & InSpace(x,y))))", "score": -1}
{"id": "eqasc_validation_1637", "prediction": "all x y.((Atmosphere(x) & Object(y)) -> AirAroundInSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1637", "prediction": "all x y.((Atmosphere(x) & SpaceObject(y)) -> AirAround(x,y))", "score": 0}
{"id": "eqasc_validation_1637", "prediction": "all x y.((Atmosphere(x) & Space(y)) -> AirAround(x,y))", "score": 0}
{"id": "eqasc_validation_1637", "prediction": "all x y.((Atmosphere(x) & Object(y) & InSpace(x,y)) -> AirAround(x,y))", "score": 0}
{"id": "eqasc_validation_1637", "prediction": "all x.(Atmosphere(x) -> exists y.(Object(y) & Space(y) & AirAround(x,y)))", "score": 0}
{"id": "eqasc_validation_1637", "prediction": "all x y z.((Atmosphere(x) & Object(y) & Space(z)) -> AirAroundIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_1637", "prediction": "all x y z.((Atmosphere(x) & Object(y) & Space(z)) -> AirAround(x,y))", "score": 0}
{"id": "eqasc_validation_1637", "prediction": "all x.(Atmosphere(x) -> AirAroundObjectInSpace(x))", "score": 0}
{"id": "eqasc_validation_1637", "prediction": "all x.(Atmosphere(x) -> exists y.(Object(y) & InSpace(y) & AirAround(x,y)))", "score": 0}
{"id": "eqasc_validation_1638", "prediction": "all x y.((VolcanicAsh(x) & AirAroundEarth(y)) -> DecreasesTemperatureByBlockingSun(x,y))", "score": 0}
{"id": "eqasc_validation_1638", "prediction": "all x y.((VolcanicAsh(x) & AirAroundEarth(y)) -> DecreasesTemperatureByBlockingSunlight(x,y))", "score": 0}
{"id": "eqasc_validation_1638", "prediction": "all x y.((VolcanicAsh(x) & AirAroundEarth(y)) -> (DecreasesTemperatureByBlockingSunlight(x,y)))", "score": 0}
{"id": "eqasc_validation_1638", "prediction": "all x y.((VolcanicAsh(x) & AirAroundEarth(y) & BlocksSun(x,y)) -> DecreasesTemperatureByBlockingSun(x,y))", "score": 0}
{"id": "eqasc_validation_1638", "prediction": "all x y.((VolcanicAsh(x) & AirAroundEarth(y)) -> (DecreasesTemperature(x,y) & BlocksSun(x,y)))", "score": 0}
{"id": "eqasc_validation_1638", "prediction": "all x y.((VolcanicAsh(x) & AirAroundEarth(y)) -> (DecreasesTemperatureByBlockingSun(x,y)))", "score": 0}
{"id": "eqasc_validation_1638", "prediction": "all x.((VolcanicAsh(x) & AirAroundEarth(x)) -> DecreasesTemperatureByBlockingSun(x))", "score": 0}
{"id": "eqasc_validation_1638", "prediction": "all x y z.((VolcanicAsh(x) & AirAroundEarth(y) & Earth(z)) -> (DecreasesTemperatureByBlockingSun(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1638", "prediction": "all x y.((VolcanicAsh(x) & AirAroundEarth(y)) -> (DecreasesTemperature(x,y) & BlocksSun(x)))", "score": 0}
{"id": "eqasc_validation_1638", "prediction": "all x.((VolcanicAsh(x) & AirAroundEarth(x) & BlocksSun(x)) -> DecreasesTemperatureByBlockingSun(x))", "score": 0}
{"id": "eqasc_validation_1638", "prediction": "all x y z.((VolcanicAsh(x) & AirAroundEarth(y) & Earth(z)) -> (DecreasesTemperatureByBlockingSunlight(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1638", "prediction": "all x y z.((VolcanicAsh(x) & AirAroundEarth(y) & Earth(z)) -> DecreasesTemperatureByBlockingSun(x,y,z))", "score": 0}
{"id": "eqasc_validation_1638", "prediction": "all x y z.((VolcanicAsh(x) & AirAroundEarth(y) & Earth(z)) -> DecreasesTemperatureByBlockingSunlight(x,y,z))", "score": 0}
{"id": "eqasc_validation_1638", "prediction": "all x y.((VolcanicAsh(x) & AirAroundEarth(y)) -> (DecreasesTemperature(x) & BlocksSun(x)))", "score": 0}
{"id": "eqasc_validation_1638", "prediction": "all x y z.((VolcanicAsh(x) & AirAroundEarth(y) & Earth(z)) -> (DecreasesTemperature(x,z) & BlocksSun(x,z)))", "score": 0}
{"id": "eqasc_validation_1638", "prediction": "all x y.((VolcanicAsh(x) & AirAroundEarth(y)) -> (DecreasesTemperature(x,y) & BlocksSunlight(x,y)))", "score": 0}
{"id": "eqasc_validation_1639", "prediction": "all x.(SmallTemperatureVariations(x) -> HasMajorEffectsOnNaturalEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1639", "prediction": "all x.(SmallTemperatureVariations(x) -> CanHaveMajorEffectsOnNaturalEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1639", "prediction": "all x.(SmallTemperatureVariations(x) -> HasMoreEffectsOnNaturalEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1639", "prediction": "all x y.((SmallTemperatureVariation(x) & NaturalEcosystem(y)) -> HasMajorEffects(x,y))", "score": 0}
{"id": "eqasc_validation_1639", "prediction": "all x.(SmallTemperatureVariation(x) -> HasMajorEffectsOnNaturalEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1639", "prediction": "all x y.((SmallTemperatureVariation(x) & NaturalEcosystem(y)) -> HasMajorEffect(x,y))", "score": 0}
{"id": "eqasc_validation_1639", "prediction": "all x y.((SmallTemperatureVariation(x) & NaturalEcosystem(y)) -> HasMoreEffects(x,y))", "score": 0}
{"id": "eqasc_validation_1639", "prediction": "all x y.((SmallTemperatureVariations(x) & NaturalEcosystem(y)) -> HasMajorEffects(x,y))", "score": 0}
{"id": "eqasc_validation_1639", "prediction": "all x y.((SmallTemperatureVariation(x) & NaturalEcosystem(y)) -> CanHaveMajorEffects(x,y))", "score": 0}
{"id": "eqasc_validation_1639", "prediction": "all x.(SmallTemperatureVariations(x) -> MajorEffectsOnNaturalEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1639", "prediction": "all x.(SmallTemperatureVariation(x) -> CanHaveMajorEffectsOnNaturalEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1639", "prediction": "all x y.((SmallTemperatureVariation(x) & NaturalEcosystem(y)) -> MajorEffect(x,y))", "score": 0}
{"id": "eqasc_validation_1639", "prediction": "all x y.((SmallTemperatureVariations(x) & NaturalEcosystem(y)) -> HasMoreEffects(x,y))", "score": 0}
{"id": "eqasc_validation_1639", "prediction": "all x y.((SmallTemperatureVariations(x) & NaturalEcosystem(y)) -> CanHaveMajorEffects(x,y))", "score": 0}
{"id": "eqasc_validation_1639", "prediction": "all x.(SmallTemperatureVariation(x) -> HasMoreEffectsOnNaturalEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1639", "prediction": "all x y.((SmallTemperatureVariations(x) & NaturalEcosystem(y)) -> HasMajorEffect(x,y))", "score": 0}
{"id": "eqasc_validation_1640", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> CanHaveMajorEffectsOnNaturalEcosystems(x,y))", "score": 0}
{"id": "eqasc_validation_1640", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> HasMajorEffectsOnNaturalEcosystems(x,y))", "score": 0}
{"id": "eqasc_validation_1640", "prediction": "all x.((VolcanicAsh(x) & Atmosphere(x)) -> CanHaveMajorEffectsOnNaturalEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1640", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> CanHaveMoreEffectsOnNaturalEcosystems(x,y))", "score": 0}
{"id": "eqasc_validation_1640", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> HasMoreEffectsOnNaturalEcosystems(x,y))", "score": 0}
{"id": "eqasc_validation_1640", "prediction": "all x.((VolcanicAsh(x) & Atmosphere(x)) -> HasMajorEffectsOnNaturalEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1640", "prediction": "all x.((VolcanicAsh(x) & InAtmosphere(x)) -> CanHaveMajorEffectsOnNaturalEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1640", "prediction": "all x.((VolcanicAsh(x) & Atmosphere(x)) -> HasMoreEffectsOnNaturalEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1640", "prediction": "all x.((VolcanicAsh(x) & InAtmosphere(x)) -> HasMajorEffectsOnNaturalEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1640", "prediction": "all x.((VolcanicAsh(x) & Atmosphere(x)) -> CanHaveMoreEffectsOnNaturalEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1640", "prediction": "all x.((VolcanicAsh(x) & InAtmosphere(x)) -> HasMoreEffectsOnNaturalEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1640", "prediction": "all x.((VolcanicAsh(x) & InAtmosphere(x)) -> CanHaveMoreEffectsOnNaturalEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1640", "prediction": "all x y z.((VolcanicAsh(x) & Atmosphere(y) & NaturalEcosystem(z)) -> CanHaveMajorEffects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1640", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> CanHaveMajorEffects(x,y))", "score": 0}
{"id": "eqasc_validation_1640", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> CanHaveMajorEffectsOnNaturalEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1640", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> MajorEffectsOnNaturalEcosystems(x,y))", "score": 0}
{"id": "eqasc_validation_1641", "prediction": "all x.(Supersaturation(x) -> CommonStateForAtmosphericHazeParticles(x))", "score": 0}
{"id": "eqasc_validation_1641", "prediction": "all x y.((Supersaturation(x) & AtmosphericHazeParticle(y)) -> CommonState(x,y))", "score": 0}
{"id": "eqasc_validation_1641", "prediction": "all x.(Supersaturation(x) -> CommonStateForAtmosphericHaze(x))", "score": 0}
{"id": "eqasc_validation_1641", "prediction": "all x y.((Supersaturation(x) & AtmosphericHazeParticles(y)) -> CommonState(x,y))", "score": 0}
{"id": "eqasc_validation_1641", "prediction": "all x y.((Supersaturation(x) & AtmosphericHaze(y)) -> CommonState(x,y))", "score": 0}
{"id": "eqasc_validation_1641", "prediction": "all x y.((Supersaturation(x) & AtmosphericHazeParticle(y)) -> CommonStateFor(x,y))", "score": 0}
{"id": "eqasc_validation_1641", "prediction": "all x y.((Supersaturation(x) & AtmosphericHaze(y)) -> CommonStateFor(x,y))", "score": 0}
{"id": "eqasc_validation_1641", "prediction": "all x y.((Supersaturation(x) & AtmosphericHazeParticles(y)) -> CommonStateFor(x,y))", "score": 0}
{"id": "eqasc_validation_1641", "prediction": "all x y z.((Supersaturation(x) & AtmosphericHazeParticle(y) & AtmosphericHazeParticle(z)) -> CommonState(x,y,z))", "score": 0}
{"id": "eqasc_validation_1641", "prediction": "all x.(Supersaturation(x) -> CommonStateForAtmosphericHaseParticles(x))", "score": 0}
{"id": "eqasc_validation_1641", "prediction": "all x.((Supersaturation(x) & AtmosphericHazeParticles(x)) -> CommonState(x))", "score": 0}
{"id": "eqasc_validation_1641", "prediction": "all x.(Supersaturation(x) -> CommonState(x))", "score": 0}
{"id": "eqasc_validation_1641", "prediction": "all x y z.((Supersaturation(x) & AtmosphericHazeParticle(y) & AtmosphericHazeParticle(z)) -> CommonStateFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1641", "prediction": "all x y z.((Supersaturation(x) & AtmosphericHaze(y) & Particle(z)) -> CommonState(x,y,z))", "score": 0}
{"id": "eqasc_validation_1641", "prediction": "all x y z.((Supersaturation(x) & AtmosphericHazeParticle(y) & AtmosphericHaze(z)) -> CommonState(x,y,z))", "score": 0}
{"id": "eqasc_validation_1642", "prediction": "all x.(Haze(x) -> (DecreasesTemperature(x) & BlocksSun(x)))", "score": 0}
{"id": "eqasc_validation_1642", "prediction": "all x y.((Haze(x) & Sun(y)) -> DecreasesTemperatureByBlocking(x,y))", "score": 0}
{"id": "eqasc_validation_1642", "prediction": "all x y.((Haze(x) & Sun(y)) -> (DecreasesTemperature(x,y) & BlocksSun(x,y)))", "score": 0}
{"id": "eqasc_validation_1642", "prediction": "all x y.((Haze(x) & Sun(y)) -> (DecreasesTemperatureByBlocking(x,y)))", "score": 0}
{"id": "eqasc_validation_1642", "prediction": "all x y.((Haze(x) & Sun(y)) -> (DecreasesTemperature(x,y) & BlocksSun(x)))", "score": 0}
{"id": "eqasc_validation_1642", "prediction": "all x.(Haze(x) -> (DecreasesTemperatureByBlockingSun(x) & BlocksSun(x)))", "score": 0}
{"id": "eqasc_validation_1642", "prediction": "all x y.((Haze(x) & Sun(y)) -> (DecreasesTemperature(x,y) & Blocks(x,y)))", "score": 0}
{"id": "eqasc_validation_1642", "prediction": "all x y.((Haze(x) & Sun(y) & Blocks(x,y)) -> DecreasesTemperatureByBlocking(x,y))", "score": 0}
{"id": "eqasc_validation_1642", "prediction": "all x.(Haze(x) -> (DecreasesTemperatureByBlockingSun(x)))", "score": 0}
{"id": "eqasc_validation_1642", "prediction": "all x y.((Haze(x) & Sun(y)) -> (DecreasesTemperature(x) & BlocksSun(x)))", "score": 0}
{"id": "eqasc_validation_1642", "prediction": "all x y.((Haze(x) & Sun(y)) -> (DecreasesTemperature(x) & BlocksSun(x,y)))", "score": 0}
{"id": "eqasc_validation_1642", "prediction": "all x y.((Haze(x) & Sun(y)) -> (DecreasesTemperature(x) & Blocks(x,y)))", "score": 0}
{"id": "eqasc_validation_1642", "prediction": "all x y.((Haze(x) & Sun(y)) -> ReducesTemperatureByBlocking(x,y))", "score": 0}
{"id": "eqasc_validation_1642", "prediction": "all x y.((Haze(x) & Sun(y) & Blocks(x,y)) -> DecreasesTemperature(x))", "score": 0}
{"id": "eqasc_validation_1642", "prediction": "all x.(Haze(x) -> (DecreasesTemperature(x) & BlocksSunlight(x)))", "score": 0}
{"id": "eqasc_validation_1642", "prediction": "all x y.((Haze(x) & Sun(y)) -> (DecreasesTemperature(x) & BlocksTemperature(x,y)))", "score": 0}
{"id": "eqasc_validation_1643", "prediction": "all x y.((AshCloud(x) & Aircraft(y)) -> ParticularProblem(x,y))", "score": 0}
{"id": "eqasc_validation_1643", "prediction": "all x.(AshCloud(x) -> ParticularProblemForAircraft(x))", "score": 0}
{"id": "eqasc_validation_1643", "prediction": "all x.(AshCloud(x) -> AircraftProblem(x))", "score": 0}
{"id": "eqasc_validation_1643", "prediction": "all x y z.((AshCloud(x) & Aircraft(y) & Aircraft(z)) -> ParticularProblem(x,y,z))", "score": 0}
{"id": "eqasc_validation_1643", "prediction": "all x.(AshCloud(x) -> (ProblemForAircraft(x) | ProblemForAircraft(x)))", "score": 0}
{"id": "eqasc_validation_1643", "prediction": "all x.(AshCloud(x) -> ProblemForAircraft(x))", "score": 0}
{"id": "eqasc_validation_1643", "prediction": "all x.(AshCloud(x) -> EspeciallyProblemForAircraft(x))", "score": 0}
{"id": "eqasc_validation_1643", "prediction": "all x.(AshCloud(x) -> SpecificallyProblemForAircraft(x))", "score": 0}
{"id": "eqasc_validation_1643", "prediction": "all x y.((AshCloud(x) & Aircraft(y)) -> ParticularProblemFor(x,y))", "score": 0}
{"id": "eqasc_validation_1643", "prediction": "all x y.((AshCloud(x) & Aircraft(y)) -> SpecialProblem(x,y))", "score": 0}
{"id": "eqasc_validation_1643", "prediction": "all x y.((AshCloud(x) & Aircraft(y)) -> Problem(x,y))", "score": 0}
{"id": "eqasc_validation_1643", "prediction": "all x y z.((AshCloud(x) & Aircraft(y) & Aeroplane(z)) -> ParticularProblem(x,y,z))", "score": 0}
{"id": "eqasc_validation_1643", "prediction": "all x.(AshCloud(x) -> (ProblemForAircraft(x) & ParticularForAircraft(x)))", "score": 0}
{"id": "eqasc_validation_1643", "prediction": "all x.(AshCloud(x) -> SpecialProblemForAircraft(x))", "score": 0}
{"id": "eqasc_validation_1643", "prediction": "all x.(AshCloud(x) -> (ProblemForAircraft(x) & ParticularProblemForAircraft(x)))", "score": 0}
{"id": "eqasc_validation_1643", "prediction": "all x.(AshCloud(x) -> (ProblemForAircraft(x) | ParticularProblemForAircraft(x)))", "score": 0}
{"id": "eqasc_validation_1644", "prediction": "all x y.((VolcanicCloud(x) & Aircraft(y)) -> ParticularProblem(x,y))", "score": 0}
{"id": "eqasc_validation_1644", "prediction": "all x.(VolcanicCloudsInAtmosphere(x) -> ParticularProblemForAircraft(x))", "score": 0}
{"id": "eqasc_validation_1644", "prediction": "all x.(VolcanicClouds(x) -> ParticularProblemForAircraft(x))", "score": 0}
{"id": "eqasc_validation_1644", "prediction": "all x.((VolcanicClouds(x) & Atmosphere(x)) -> ParticularProblemForAircraft(x))", "score": 0}
{"id": "eqasc_validation_1644", "prediction": "all x.((VolcanicCloud(x) & Atmosphere(x)) -> ParticularProblemForAircraft(x))", "score": 0}
{"id": "eqasc_validation_1644", "prediction": "all x.(VolcanicClouds(x) -> AircraftProblem(x))", "score": 0}
{"id": "eqasc_validation_1644", "prediction": "all x y z.((VolcanicCloud(x) & Aircraft(y) & Atmosphere(z)) -> ParticularProblem(x,y,z))", "score": 0}
{"id": "eqasc_validation_1644", "prediction": "all x y.((VolcanicClouds(x) & Aircraft(y)) -> ParticularProblem(x,y))", "score": 0}
{"id": "eqasc_validation_1644", "prediction": "all x y.((VolcanicCloud(x) & Aircraft(y)) -> Problem(x,y))", "score": 0}
{"id": "eqasc_validation_1644", "prediction": "all x y.((VolcanicCloud(x) & Aircraft(y)) -> SpecialProblem(x,y))", "score": 0}
{"id": "eqasc_validation_1644", "prediction": "all x.(VolcanicCloudsInAtmosphere(x) -> AircraftProblem(x))", "score": 0}
{"id": "eqasc_validation_1644", "prediction": "all x y.((VolcanicCloud(x) & Aircraft(y)) -> ParticularProblemFor(x,y))", "score": 0}
{"id": "eqasc_validation_1644", "prediction": "all x y z.((VolcanicCloud(x) & Aircraft(y) & Atmosphere(z)) -> ParticularProblem(x,y))", "score": 0}
{"id": "eqasc_validation_1644", "prediction": "all x.((VolcanicClouds(x) & Atmosphere(x)) -> AircraftProblem(x))", "score": 0}
{"id": "eqasc_validation_1644", "prediction": "all x y.((VolcanicCloud(x) & Aeroplane(y)) -> ParticularProblem(x,y))", "score": 0}
{"id": "eqasc_validation_1644", "prediction": "all x.((VolcanicClouds(x) & Aircraft(x)) -> ParticularProblem(x))", "score": 0}
{"id": "eqasc_validation_1645", "prediction": "all x.(ConeVolcano(x) -> (ThickLava(x) & MuchAsh(x)))", "score": 0}
{"id": "eqasc_validation_1645", "prediction": "all x.(ConeVolcano(x) -> (HasThickLava(x) & HasMuchAsh(x)))", "score": 0}
{"id": "eqasc_validation_1645", "prediction": "all x.(ConeVolcano(x) -> (AssociatedWithThickLava(x) & AssociatedWithMuchAsh(x)))", "score": 0}
{"id": "eqasc_validation_1645", "prediction": "all x.(ConeVolcano(x) -> (AssociatesThickLava(x) & AssociatesMuchAsh(x)))", "score": 0}
{"id": "eqasc_validation_1645", "prediction": "all x.(ConeVolcano(x) -> (AssociateWithThickLava(x) & AssociateWithMuchAsh(x)))", "score": 0}
{"id": "eqasc_validation_1645", "prediction": "all x.(ConeVolcano(x) -> (AssociatesWithThickLava(x) & AssociatesWithMuchAsh(x)))", "score": 0}
{"id": "eqasc_validation_1645", "prediction": "all x y.((ConeVolcano(x) & Lava(y)) -> (Thick(y) & MuchAsh(y)))", "score": 0}
{"id": "eqasc_validation_1645", "prediction": "all x.(ConeVolcano(x) -> (AssociatedWithThickLava(x) & AssociatesWithMuchAsh(x)))", "score": 0}
{"id": "eqasc_validation_1645", "prediction": "all x y z.((ConeVolcano(x) & Lava(y) & Ash(z)) -> (Thick(y) & Much(z)))", "score": 0}
{"id": "eqasc_validation_1645", "prediction": "all x.(ConeVolcano(x) -> (AssociatesThickLava(x) & AssociatesWithMuchAsh(x)))", "score": 0}
{"id": "eqasc_validation_1645", "prediction": "all x.((Volcano(x) & ThickLava(x) & MuchAsh(x)) -> Cone(x))", "score": 0}
{"id": "eqasc_validation_1645", "prediction": "all x y.((ConeVolcano(x) & Lava(y)) -> (Thick(x,y) & MuchAsh(x)))", "score": 0}
{"id": "eqasc_validation_1645", "prediction": "all x.(ConeVolcano(x) -> (LavaThick(x) & AshMuch(x)))", "score": 0}
{"id": "eqasc_validation_1645", "prediction": "all x.(ConeVolcano(x) -> (HasThickLava(x) & HasMoreAsh(x)))", "score": 0}
{"id": "eqasc_validation_1645", "prediction": "all x.(ConeVolcano(x) -> (LightLava(x) & MuchAsh(x)))", "score": 0}
{"id": "eqasc_validation_1646", "prediction": "all x y.((ConeVolcano(x) & Earth(y)) -> LowersTemperature(x,y))", "score": 0}
{"id": "eqasc_validation_1646", "prediction": "all x y z.((ConeVolcano(x) & Earth(y) & Earth(z)) -> LowersTemperature(x,y,z))", "score": 0}
{"id": "eqasc_validation_1646", "prediction": "all x y.((ConeVolcano(x) & Earth(y)) -> CanLowerTemperature(x,y))", "score": 0}
{"id": "eqasc_validation_1646", "prediction": "all x.(ConeVolcano(x) -> LowersTemperatureOfEarth(x))", "score": 0}
{"id": "eqasc_validation_1646", "prediction": "all x y.((ConeVolcano(x) & Earth(y)) -> LowerTemperature(x,y))", "score": 0}
{"id": "eqasc_validation_1646", "prediction": "all x y z.((ConeVolcano(x) & Earth(y) & Earth(z)) -> CanLowerTemperature(x,y,z))", "score": 0}
{"id": "eqasc_validation_1646", "prediction": "all x y.((ConeVolcano(x) & Earth(y) & LowerTemperature(x,y)) -> CanLowerTemperature(x,y))", "score": 0}
{"id": "eqasc_validation_1646", "prediction": "all x.(ConeVolcano(x) -> LowersTemperature(x))", "score": 0}
{"id": "eqasc_validation_1646", "prediction": "all x y z.((ConeVolcano(x) & Earth(y) & Earth(z)) -> LowerTemperature(x,y,z))", "score": 0}
{"id": "eqasc_validation_1646", "prediction": "all x y.((ConeVolcano(x) & Earth(y)) -> (LowersTemperature(x,y) | LowersTemperature(x,y)))", "score": 0}
{"id": "eqasc_validation_1646", "prediction": "all x y z.((ConeVolcano(x) & Earth(y) & Earth(z) & LowerTemperature(x,y,z)) -> CanLowerTemperature(x,y,z))", "score": 0}
{"id": "eqasc_validation_1646", "prediction": "all x y z.((ConeVolcano(x) & Earth(y) & EarthTemperature(z)) -> Lowers(x,y,z))", "score": 0}
{"id": "eqasc_validation_1646", "prediction": "all x y z.((ConeVolcano(x) & Earth(y) & Earth(z)) -> LowersTemperature(x,y))", "score": 0}
{"id": "eqasc_validation_1646", "prediction": "all x.(ConeVolcano(x) -> LowerTemperatureOfEarth(x))", "score": 0}
{"id": "eqasc_validation_1646", "prediction": "all x y.((ConeVolcano(x) & Earth(y)) -> (LowerTemperature(x,y) | LowerTemperature(x,y)))", "score": 0}
{"id": "eqasc_validation_1646", "prediction": "all x y z.((ConeVolcano(x) & Earth(y) & Earth(z)) -> (CanLowerTemperature(x,y,z) & LowerTemperature(x,y)))", "score": 0}
{"id": "eqasc_validation_1647", "prediction": "all x.((Viel(x) & TinyParticlesFromVolcanicEruption(x)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1647", "prediction": "all x.((Viel(x) & TinyParticles(x) & VolcanicEruption(x)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1647", "prediction": "all x.((Veil(x) & TinyParticlesFromVolcanicEruption(x)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1647", "prediction": "all x.((Veil(x) & TinyParticles(x) & VolcanicEruption(x)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1647", "prediction": "all x y.((Viel(x) & TinyParticles(x) & VolcanicEruption(y)) -> BlocksSun(x,y))", "score": 0}
{"id": "eqasc_validation_1647", "prediction": "all x.((Vulel(x) & TinyParticles(x) & VolcanicEruption(x)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1647", "prediction": "all x.((Vulel(x) & TinyParticlesFromVolcanicEruption(x)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1647", "prediction": "all x.((Viel(x) & TinyParticles(x) & FromVolcanicEruption(x)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1647", "prediction": "all x.((VielOfTinyParticles(x) & VolcanicEruption(x)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1647", "prediction": "all x.((Vulcan(x) & TinyParticles(x) & VolcanicEruption(x)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1647", "prediction": "all x.((Vule(x) & TinyParticles(x) & VolcanicEruption(x)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1647", "prediction": "all x.((Vulture(x) & TinyParticles(x) & VolcanicEruption(x)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1647", "prediction": "all x.((Vulture(x) & TinyParticlesFromVolcanicEruption(x)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1647", "prediction": "all x.((Vule(x) & TinyParticlesFromVolcanicEruption(x)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1647", "prediction": "all x.((Vulcan(x) & TinyParticlesFromVolcanicEruption(x)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1647", "prediction": "all x y.((Viel(x) & TinyParticles(x) & VolcanicEruption(y)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1648", "prediction": "all x y.((Volcano(x) & Sun(y)) -> Blocks(x,y))", "score": 0}
{"id": "eqasc_validation_1648", "prediction": "all x y z.((Volcano(x) & Sun(y) & Sun(z)) -> Blocks(x,y,z))", "score": 0}
{"id": "eqasc_validation_1648", "prediction": "all x y z.((Volcano(x) & Sun(y) & Sun(z)) -> CanBlock(x,y,z))", "score": 0}
{"id": "eqasc_validation_1648", "prediction": "all x y.((Volcano(x) & Sun(y)) -> CanBlock(x,y))", "score": 0}
{"id": "eqasc_validation_1648", "prediction": "all x.(Volcano(x) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1648", "prediction": "all x y.((Volcano(x) & Sun(y)) -> BlockSun(x,y))", "score": 0}
{"id": "eqasc_validation_1648", "prediction": "all x y.((Volcano(x) & Sun(y)) -> BlocksSun(x,y))", "score": 0}
{"id": "eqasc_validation_1648", "prediction": "all x y z.((Volcano(x) & Sun(y) & Sun(z)) -> BlocksSun(x,y,z))", "score": 0}
{"id": "eqasc_validation_1648", "prediction": "all x y z.((Volcano(x) & Sun(y) & Sun(z)) -> BlockSun(x,y,z))", "score": 0}
{"id": "eqasc_validation_1648", "prediction": "all x y z.((Volcano(x) & Sun(y) & Sun(z)) -> Blocks(x,y))", "score": 0}
{"id": "eqasc_validation_1648", "prediction": "all x.(Volcano(x) -> CanBlockSun(x))", "score": 0}
{"id": "eqasc_validation_1648", "prediction": "all x y z.((Volcano(x) & Sun(y) & Sun(z)) -> Block(x,y,z))", "score": 0}
{"id": "eqasc_validation_1648", "prediction": "all x y.((Volcano(x) & Sun(y)) -> Block(x,y))", "score": 0}
{"id": "eqasc_validation_1648", "prediction": "all x y z.((Volcano(x) & Sun(y) & Sun(z) & Blocks(x,y,z)) -> CanBlock(x,y,z))", "score": 0}
{"id": "eqasc_validation_1648", "prediction": "all x y z.((Volcano(x) & Sun(y) & Sun(z) & Blocks(x,y,z)) -> Blocks(x,y,z))", "score": 0}
{"id": "eqasc_validation_1648", "prediction": "all x y z.((Volcano(x) & Sun(y) & Sun(z) & Blocks(x,y,z)) -> Blocks(x,y))", "score": 0}
{"id": "eqasc_validation_1649", "prediction": "all x.(BlackSand(x) -> VolcanicAsh(x))", "score": 0}
{"id": "eqasc_validation_1649", "prediction": "all x y.((BlackSand(x) & VolcanicAsh(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_1649", "prediction": "all x y.((BlackSand(x) & VolcanicAsh(y)) -> VolcanicAsh(x))", "score": 0}
{"id": "eqasc_validation_1649", "prediction": "All x.(BlackSand(x) -> VolcanicAsh(x))", "score": -1}
{"id": "eqasc_validation_1649", "prediction": "all x y z.((BlackSand(x) & VolcanicAsh(y) & VolcanicAsh(z)) -> Is(x,y,z))", "score": 0}
{"id": "eqasc_validation_1649", "prediction": "all x.(BlackSand(x) -> VulcanicAsh(x))", "score": 0}
{"id": "eqasc_validation_1649", "prediction": "all x y.((BlackSand(x) & VolcanicAsh(y)) -> VolcanicAsh(x,y))", "score": 0}
{"id": "eqasc_validation_1649", "prediction": "all x y.((BlackSand(x) & VolcanicAsh(y)) -> VulcanicAsh(x))", "score": 0}
{"id": "eqasc_validation_1649", "prediction": "all x y z.((BlackSand(x) & VolcanicAsh(y) & VolcanicAsh(z)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_1649", "prediction": "all x y z.((BlackSand(x) & VolcanicAsh(y) & VolcanicAsh(z)) -> VolcanicAsh(x,y,z))", "score": 0}
{"id": "eqasc_validation_1649", "prediction": "all x y.((BlackSand(x) & VolcanicAsh(y)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_validation_1649", "prediction": "all x y.((BlackSand(x) & VolcanicAsh(y)) -> LocatedIn(x,y))", "score": 0}
{"id": "eqasc_validation_1649", "prediction": "all x y.((BlackSand(x) & VolcanicAsh(y)) -> Becomes(x,y))", "score": 0}
{"id": "eqasc_validation_1649", "prediction": "all x y.((BlackSand(x) & VolcanicAsh(y)) -> IsAsh(x,y))", "score": 0}
{"id": "eqasc_validation_1649", "prediction": "all x y z.((BlackSand(x) & VolcanicAsh(y) & VolcanicAsh(z)) -> VolcanicAsh(x))", "score": 0}
{"id": "eqasc_validation_1650", "prediction": "all x.(BlackSand(x) -> BlocksOutSun(x))", "score": 0}
{"id": "eqasc_validation_1650", "prediction": "all x y.((BlackSand(x) & Sun(y)) -> BlocksOut(x,y))", "score": 0}
{"id": "eqasc_validation_1650", "prediction": "all x y z.((BlackSand(x) & Sun(y) & Sun(z)) -> BlocksOut(x,y,z))", "score": 0}
{"id": "eqasc_validation_1650", "prediction": "all x y.((BlackSand(x) & Sun(y)) -> BlocksOutSun(x,y))", "score": 0}
{"id": "eqasc_validation_1650", "prediction": "all x.(BlackSand(x) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1650", "prediction": "all x y z.((BlackSand(x) & Sun(y) & Sun(z) & BlocksOut(x,y,z)) -> BlocksOut(x,y,z))", "score": 0}
{"id": "eqasc_validation_1650", "prediction": "all x y z.((BlackSand(x) & Sun(y) & Sun(z)) -> BlocksOutSun(x,y,z))", "score": 0}
{"id": "eqasc_validation_1650", "prediction": "all x y z.((BlackSand(x) & Sun(y) & Sun(z)) -> CanBlockOut(x,y,z))", "score": 0}
{"id": "eqasc_validation_1650", "prediction": "all x y.((BlackSand(x) & Sun(y) & BlocksOut(x,y)) -> BlocksOut(x,y))", "score": 0}
{"id": "eqasc_validation_1650", "prediction": "all x y z.((BlackSand(x) & Sun(y) & Sun(z)) -> BlocksOut(x,y))", "score": 0}
{"id": "eqasc_validation_1650", "prediction": "all x y z.((BlackSand(x) & Sun(y) & Sun(z) & BlocksOut(x,y,z)) -> BlocksOut(x,y))", "score": 0}
{"id": "eqasc_validation_1650", "prediction": "all x y.((BlackSand(x) & Sun(y)) -> CanBlockOut(x,y))", "score": 0}
{"id": "eqasc_validation_1650", "prediction": "all x y z.((BlackSand(x) & Sun(y) & Sun(z) & BlocksOut(x,y,z)) -> CanBlockOut(x,y,z))", "score": 0}
{"id": "eqasc_validation_1650", "prediction": "all x.(BlackSand(x) -> BlocksOutSunlight(x))", "score": 0}
{"id": "eqasc_validation_1650", "prediction": "all x y z w.((BlackSand(x) & Sun(y) & Sun(z) & BlocksOut(x,y,z)) -> BlocksOut(x,w))", "score": 0}
{"id": "eqasc_validation_1650", "prediction": "all x y z w.((BlackSand(x) & Sun(y) & Sun(z)) -> BlocksOut(x,y,z))", "score": 0}
{"id": "eqasc_validation_1651", "prediction": "all x.((FineDustyParticles(x) & EruptedFromVolcanoes(x)) -> DecreasesTemperatureByBlockingSunlight(x))", "score": 0}
{"id": "eqasc_validation_1651", "prediction": "all x.((FineDustyParticles(x) & EruptedFromVolcanoes(x)) -> (DecreasesTemperatureByBlockingSunlight(x)))", "score": 0}
{"id": "eqasc_validation_1651", "prediction": "all x.((FineDustyParticles(x) & EruptedFromVolcanoes(x)) -> (DecreasesTemperature(x) & BlocksSun(x)))", "score": 0}
{"id": "eqasc_validation_1651", "prediction": "all x.((FineDustyParticles(x) & EruptedFromVolcanos(x)) -> DecreasesTemperatureByBlockingSunlight(x))", "score": 0}
{"id": "eqasc_validation_1651", "prediction": "all x.((FineDustyParticles(x) & EruptedFromVolcanoes(x)) -> (DecreasesTemperature(x) & BlocksSunlight(x)))", "score": 0}
{"id": "eqasc_validation_1651", "prediction": "all x y.((FineDustyParticles(x) & EruptedFromVolcanoes(x)) -> DecreasesTemperatureByBlockingSunlight(x))", "score": 0}
{"id": "eqasc_validation_1651", "prediction": "all x y.((FineDustyParticles(x) & EruptedFromVolcanoes(x) & Volcano(y)) -> DecreasesTemperatureByBlockingSunlight(x,y))", "score": 0}
{"id": "eqasc_validation_1651", "prediction": "all x y.((FineDustyParticles(x) & EruptedFromVolcanoes(x)) -> (DecreasesTemperatureByBlockingSunlight(x)))", "score": 0}
{"id": "eqasc_validation_1651", "prediction": "all x.((FineDustyParticles(x) & EruptedFromVolcanos(x)) -> (DecreasesTemperatureByBlockingSunlight(x)))", "score": 0}
{"id": "eqasc_validation_1651", "prediction": "all x y.((FineDustyParticles(x) & EruptedFromVolcano(x) & Volcano(y)) -> DecreasesTemperatureByBlockingSunlight(x,y))", "score": 0}
{"id": "eqasc_validation_1651", "prediction": "all x y z.((FineDustyParticles(x) & Volcano(y) & EruptedFrom(x,y) & Volcano(z)) -> (DecreasesTemperature(x) & BlocksSun(x)))", "score": 0}
{"id": "eqasc_validation_1651", "prediction": "all x y.((FineDustyParticles(x) & EruptedFromVolcanoes(x) & Volcano(y)) -> DecreasesTemperatureByBlockingSunlight(x))", "score": 0}
{"id": "eqasc_validation_1651", "prediction": "all x y.((FineDustyParticles(x) & EruptedFromVolcanoes(x) & Volcano(y)) -> (DecreasesTemperatureByBlockingSunlight(x)))", "score": 0}
{"id": "eqasc_validation_1651", "prediction": "all x y z.((FineDustyParticles(x) & EruptedFromVolcano(x) & Volcano(y) & Sun(z)) -> (DecreasesTemperatureByBlocking(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1651", "prediction": "all x y.((FineDustyParticles(x) & EruptedFromVolcanoes(x) & Volcano(y)) -> (DecreasesTemperatureByBlockingSunlight(x,y)))", "score": 0}
{"id": "eqasc_validation_1651", "prediction": "all x y z.((FineDustyParticles(x) & Volcano(y) & EruptedFrom(x,y) & Volcano(z)) -> (DecreasesTemperatureByBlockingSunlight(x)))", "score": 0}
{"id": "eqasc_validation_1652", "prediction": "all x y.((Seismograph(x) & Earthquake(y)) -> MeasuresSize(x,y))", "score": 0}
{"id": "eqasc_validation_1652", "prediction": "all x y z.((Seismograph(x) & Earthquake(y) & Earthquake(z)) -> MeasuresSize(x,y,z))", "score": 0}
{"id": "eqasc_validation_1652", "prediction": "all x.(Seismograph(x) -> MeasuresSizeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_1652", "prediction": "all x y.((Seismograph(x) & Earthquake(y)) -> MeasuresSizeOf(x,y))", "score": 0}
{"id": "eqasc_validation_1652", "prediction": "all x y.((Seismograph(x) & Earthquake(y)) -> UsedForMeasuringSize(x,y))", "score": 0}
{"id": "eqasc_validation_1652", "prediction": "all x y z.((Seismograph(x) & Earthquake(y) & Earthquake(z)) -> MeasuresSizeOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1652", "prediction": "all x y z.((Seismograph(x) & Earthquake(y) & Earthquake(z)) -> UsedForMeasuringSize(x,y,z))", "score": 0}
{"id": "eqasc_validation_1652", "prediction": "all x y z.((Seismograph(x) & Earthquake(y) & Earthquake(z) & MeasuresSize(x,y,z)) -> Seismograph(x))", "score": 0}
{"id": "eqasc_validation_1652", "prediction": "all x.(Seismograph(x) -> UsedForMeasuringSizeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_1652", "prediction": "all x.(Seismograph(x) -> (MeasuresSizeOfEarthquake(x) & MeasuresSizeOfEarthquake(x)))", "score": 0}
{"id": "eqasc_validation_1652", "prediction": "all x y z.((Seismograph(x) & Earthquake(y) & Earthquake(z)) -> MeasureSize(x,y,z))", "score": 0}
{"id": "eqasc_validation_1652", "prediction": "all x y.((Seismograph(x) & Earthquake(y)) -> MeasureSize(x,y))", "score": 0}
{"id": "eqasc_validation_1652", "prediction": "all x y.((Seismograph(x) & Earthquake(y)) -> MeasuresSizeOfEarthquake(x,y))", "score": 0}
{"id": "eqasc_validation_1652", "prediction": "all x y.((Seismograph(x) & Earthquake(y) & MeasuresSize(x,y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1652", "prediction": "all x y z.((Seismograph(x) & Earthquake(y) & MeasuresSize(x,y)) -> Seismograph(x))", "score": 0}
{"id": "eqasc_validation_1652", "prediction": "all x y z.((Seismograph(x) & Earthquake(y) & Earthquake(z)) -> MeasuresSize(x,y))", "score": 0}
{"id": "eqasc_validation_1653", "prediction": "all x.(Seismograph(x) -> DetectsFaultMovements(x))", "score": 0}
{"id": "eqasc_validation_1653", "prediction": "all x.(Seismograph(x) -> DetectFaultMovements(x))", "score": 0}
{"id": "eqasc_validation_1653", "prediction": "all x y.((Seismograph(x) & FaultMovement(y)) -> Detects(x,y))", "score": 0}
{"id": "eqasc_validation_1653", "prediction": "all x.(Seismograph(x) -> (DetectsFaultMovements(x) & DetectsFaultMovements(x)))", "score": 0}
{"id": "eqasc_validation_1653", "prediction": "all x.(Seismograph(x) -> DetectionOfFaultMovements(x))", "score": 0}
{"id": "eqasc_validation_1653", "prediction": "all x.(Seismograph(x) -> CanDetectFaultMovements(x))", "score": 0}
{"id": "eqasc_validation_1653", "prediction": "all x.(Seismograph(x) -> WillDetectFaultMovements(x))", "score": 0}
{"id": "eqasc_validation_1653", "prediction": "all x.(Seismograph(x) -> (DetectsFaultMovements(x)))", "score": 0}
{"id": "eqasc_validation_1653", "prediction": "all x y.((Seismograph(x) & FaultMovements(y)) -> Detects(x,y))", "score": 0}
{"id": "eqasc_validation_1653", "prediction": "all x.(Seismograph(x) -> FindsFaultMovements(x))", "score": 0}
{"id": "eqasc_validation_1653", "prediction": "all x.(Seismograph(x) -> (DetectsFaultMovements(x) | DetectsFaultMovements(x)))", "score": 0}
{"id": "eqasc_validation_1653", "prediction": "all x.(Seismograph(x) -> (DetectFaultMovements(x) & DetectFaultMovements(x)))", "score": 0}
{"id": "eqasc_validation_1653", "prediction": "all x y.((Seismograph(x) & FaultMovement(y)) -> CanDetect(x,y))", "score": 0}
{"id": "eqasc_validation_1653", "prediction": "all x.(Seismograph(x) -> (DetectsFaultMovements(x) & FaultMovements(x)))", "score": 0}
{"id": "eqasc_validation_1654", "prediction": "all x.(Magnitude(x) -> MeasuresEarthquakeSize(x))", "score": 0}
{"id": "eqasc_validation_1654", "prediction": "all x y.((Magnitude(x) & EarthquakeSize(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1654", "prediction": "all x.(Magnitude(x) -> EarthquakeSize(x))", "score": 0}
{"id": "eqasc_validation_1654", "prediction": "all x.(Magnitude(x) -> MeasureOfEarthquakeSize(x))", "score": 0}
{"id": "eqasc_validation_1654", "prediction": "all x.(Magnitude(x) -> (MeasuresEarthquakeSize(x)))", "score": 0}
{"id": "eqasc_validation_1654", "prediction": "(MeasuresEarthquakeSize(Magnitude) & MeasuresEarthquakeSize(Magnitude))", "score": 0}
{"id": "eqasc_validation_1654", "prediction": "all x y.((Magnitude(x) & Earthquake(y)) -> MeasuresSize(x,y))", "score": 0}
{"id": "eqasc_validation_1654", "prediction": "all x.(Magnitude(x) -> (EarthquakeSize(x) & MeasuresSize(x)))", "score": 0}
{"id": "eqasc_validation_1654", "prediction": "all x y.((Magnitude(x) & EarthquakeSize(y)) -> MeasuresSize(x,y))", "score": 0}
{"id": "eqasc_validation_1654", "prediction": "all x.(Magnitude(x) -> (MeasuresEarthquakeSize(x) & MeasuresEarthquakeSize(x)))", "score": 0}
{"id": "eqasc_validation_1654", "prediction": "all x y.((Magnitude(x) & EarthquakeSize(y)) -> Measure(x,y))", "score": 0}
{"id": "eqasc_validation_1654", "prediction": "all x.(MeasuresEarthquakeSize(x) -> Magnitude(x))", "score": 0}
{"id": "eqasc_validation_1654", "prediction": "all x.(Magnitude(x) -> (EarthquakeSize(x) & Measures(x,EarthquakeSize)))", "score": 0}
{"id": "eqasc_validation_1654", "prediction": "all x.(Magnitude(x) -> EarthquakeSizeMeasure(x))", "score": 0}
{"id": "eqasc_validation_1655", "prediction": "all x.(Seismograph(x) -> MeasuresMagnitudeOfEarthquakes(x))", "score": 0}
{"id": "eqasc_validation_1655", "prediction": "all x y.((Seismograph(x) & Earthquake(y)) -> MeasuresMagnitude(x,y))", "score": 0}
{"id": "eqasc_validation_1655", "prediction": "all x y z.((Seismograph(x) & Earthquake(y) & Earthquake(z)) -> MeasuresMagnitude(x,y,z))", "score": 0}
{"id": "eqasc_validation_1655", "prediction": "all x y.((Seismograph(x) & Earthquake(y)) -> MeasuresMagnitudeOf(x,y))", "score": 0}
{"id": "eqasc_validation_1655", "prediction": "all x y z.((Seismograph(x) & Earthquake(y) & Earthquake(z)) -> MeasuresMagnitudeOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1655", "prediction": "all x y.((Seismograph(x) & Earthquake(y)) -> MeasuresMagnitudeOfEarthquakes(x,y))", "score": 0}
{"id": "eqasc_validation_1655", "prediction": "all x y z.((Seismograph(x) & Earthquake(y) & MeasuresMagnitude(x,y)) -> MeasuresMagnitude(x,z))", "score": 0}
{"id": "eqasc_validation_1655", "prediction": "all x y z.((Seismograph(x) & Earthquake(y) & Earthquake(z)) -> MeasuresMagnitude(x,y))", "score": 0}
{"id": "eqasc_validation_1655", "prediction": "all x.(Seismograph(x) -> (MeasuresMagnitudeOfEarthquakes(x) & MeasuresMagnitudeOfEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_1655", "prediction": "all x y z.((Seismograph(x) & Earthquake(y) & Earthquake(z) & MeasuresMagnitude(x,y,z)) -> MeasuresMagnitude(x,y,z))", "score": 0}
{"id": "eqasc_validation_1655", "prediction": "all x y z.((Seismograph(x) & Earthquake(y) & Magnitude(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1655", "prediction": "all x y z.((Seismograph(x) & Earthquake(y) & Earthquake(z) & MeasuresMagnitude(x,y)) -> MeasuresMagnitude(x,z))", "score": 0}
{"id": "eqasc_validation_1655", "prediction": "all x y.((Seismograph(x) & Earthquake(y) & MeasuresMagnitude(x,y)) -> MeasuresMagnitude(x,y))", "score": 0}
{"id": "eqasc_validation_1655", "prediction": "all x y z.((Seismograph(x) & Earthquake(y) & Earthquake(z) & MeasuresMagnitude(x,y,z)) -> MeasuresMagnitude(x,y))", "score": 0}
{"id": "eqasc_validation_1656", "prediction": "all x y.((Earthquake(x) & RichterMagnitudeScale(y)) -> MeasuresSizeOfEarthquakes(x,y))", "score": 0}
{"id": "eqasc_validation_1656", "prediction": "all x.(Earthquake(x) -> (MeasuredByJerryMagnitudeScale(x) & MeasuresSizeOfEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_1656", "prediction": "all x.(Earthquake(x) -> (MeasuredByRiverMagnitudeScale(x) & MeasuresSizeOfEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_1656", "prediction": "all x.(Earthquake(x) -> (MeasuredByJerryMagnitudeScales(x) & MeasuresSizeOfEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_1656", "prediction": "all x y z.((Earthquake(x) & RichterMagnitudeScale(y) & Earthquake(z)) -> MeasuredBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1656", "prediction": "all x.(Earthquake(x) -> (MeasuredByJerryMagnitudeScene(x) & MeasuresSizeOfEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_1656", "prediction": "all x y.((Earthquake(x) & RichterMagnitudeScene(y)) -> MeasuresSizeOfEarthquakes(x,y))", "score": 0}
{"id": "eqasc_validation_1656", "prediction": "all x y.((Earthquake(x) & RichterMagnitudeScale(y)) -> MeasuresSize(x,y))", "score": 0}
{"id": "eqasc_validation_1656", "prediction": "all x y.((Earthquake(x) & RichterMagnitudeScale(y) & MeasuresSizeOfEarthquakes(x,y)) -> MeasuredBy(x,y))", "score": 0}
{"id": "eqasc_validation_1656", "prediction": "all x y.((Earthquake(x) & RichterMagnitudeScale(y) & MeasuresSizeOfEarthquakes(x,y)) -> CommonlyMeasuredBy(x,y))", "score": 0}
{"id": "eqasc_validation_1656", "prediction": "all x y z.((Earthquake(x) & RichterMagnitudeScale(y) & Earthquake(z)) -> MeasuresSize(x,y,z))", "score": 0}
{"id": "eqasc_validation_1656", "prediction": "all x y z.((Earthquake(x) & RichterMagnitudeScale(y) & Earthquake(z)) -> MeasuresSize(y,z))", "score": 0}
{"id": "eqasc_validation_1656", "prediction": "all x y.((Earthquake(x) & RichterMagnitudeScale(y)) -> MeasuredBy(x,y))", "score": 0}
{"id": "eqasc_validation_1656", "prediction": "all x y.((Earthquake(x) & RichterGravityScale(y)) -> MeasuresSizeOfEarthquakes(x,y))", "score": 0}
{"id": "eqasc_validation_1657", "prediction": "all x y.((Seismograph(x) & RichterMagnitudeScale(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1657", "prediction": "all x y.((Seismograph(x) & RichterMagnitudeScale(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1657", "prediction": "all x y z.((Seismograph(x) & RichterMagnitudeScale(y) & RichterMagnitudeScale(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1657", "prediction": "all x y z.((Seismograph(x) & RichterMagnitudeScale(y) & Scale(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1657", "prediction": "all x y z.((Seismograph(x) & RichterMagnitudeScale(y) & RichterMagnitudeScale(z)) -> UsedForMeasuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1657", "prediction": "all x y.((Seismograph(x) & RichterMagnitudeScene(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1657", "prediction": "all x y.((Seismograph(x) & RichterMagnitudeScene(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1657", "prediction": "all x y z.((Seismograph(x) & RichterMagnitudeScale(y) & Scale(z)) -> UsedForMeasuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1657", "prediction": "all x y.((Seismograph(x) & RichterMagnitudeScale(y)) -> MeasuresMeasurement(x,y))", "score": 0}
{"id": "eqasc_validation_1657", "prediction": "all x y z.((Seismograph(x) & RichterMagnitudeScale(y) & RichterMagnitude(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1657", "prediction": "all x y z.((Seismograph(x) & RichterMagnitudeScene(y) & RichterMagnitudeScene(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1657", "prediction": "all x y z.((Seismograph(x) & RichterMagnitudeScale(y) & RichterMagnitude(z)) -> UsedForMeasuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1657", "prediction": "all x y z.((Seismograph(x) & RichterMagnitudeScene(y) & RichterMagnitudeScene(z)) -> UsedForMeasuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1657", "prediction": "all x y z.((Seismograph(x) & RichterMagnitudeScale(y) & RichterScale(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1657", "prediction": "all x y.((Seismograph(x) & RichterMajorityScale(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1657", "prediction": "all x y z.((Seismograph(x) & RichterMagnitude(y) & Scale(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1658", "prediction": "all x y z.((Earthquake(x) & City(y) & Size(z) & OccursNear(x,y,z)) -> PotentialForDamageGreat(x))", "score": 0}
{"id": "eqasc_validation_1658", "prediction": "all x y.((Earthquake(x) & City(y) & OccursNear(x,y)) -> PotentialForDamageGreat(x))", "score": 0}
{"id": "eqasc_validation_1658", "prediction": "all x.((Earthquake(x) & NearCity(x) & AnySize(x)) -> GreatPotentialForDamage(x))", "score": 0}
{"id": "eqasc_validation_1658", "prediction": "all x y.((Earthquake(x) & City(y) & Near(x,y)) -> GreatPotentialForDamage(x))", "score": 0}
{"id": "eqasc_validation_1658", "prediction": "all x y.((Earthquake(x) & City(y) & OccursNear(x,y)) -> GreatPotentialForDamage(x))", "score": 0}
{"id": "eqasc_validation_1658", "prediction": "all x y z.((Earthquake(x) & City(y) & Size(z) & OccursNear(x,y,z)) -> GreatPotentialForDamage(x))", "score": 0}
{"id": "eqasc_validation_1658", "prediction": "all x y.((Earthquake(x) & City(y) & LocatedNear(x,y)) -> GreatPotentialForDamage(x))", "score": 0}
{"id": "eqasc_validation_1658", "prediction": "all x.((Earthquake(x) & NearCity(x) & AnySize(x)) -> PotentialForDamageGreat(x))", "score": 0}
{"id": "eqasc_validation_1658", "prediction": "all x y z.((Earthquake(x) & City(y) & Size(z)) -> (OccursNear(x,y,z) & PotentialForDamageGreat(x)))", "score": 0}
{"id": "eqasc_validation_1658", "prediction": "all x y z.((Earthquake(x) & City(y) & Size(z)) -> (OccursNear(x,y,z) & PotentialForDamage(x)))", "score": 0}
{"id": "eqasc_validation_1658", "prediction": "all x.((Earthquake(x) & NearCity(x) & OfAnySize(x)) -> PotentialForDamageGreat(x))", "score": 0}
{"id": "eqasc_validation_1658", "prediction": "all x.(Earthquake(x) -> (OccursNearCity(x) & AnySize(x) & PotentialForDamage(x)))", "score": 0}
{"id": "eqasc_validation_1658", "prediction": "all x.((Earthquake(x) & NearAnySize(x)) -> PotentialForDamageGreat(x))", "score": 0}
{"id": "eqasc_validation_1658", "prediction": "all x y.((Earthquake(x) & City(y) & AnySize(y)) -> PotentialForDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1658", "prediction": "all x y.((Earthquake(x) & City(y) & LocatedNear(x,y)) -> PotentialForDamageGreat(x))", "score": 0}
{"id": "eqasc_validation_1658", "prediction": "all x y z.((Earthquake(x) & City(y) & Size(z) & OccursNear(x,y,z)) -> PotentialForDamage(x))", "score": 0}
{"id": "eqasc_validation_1659", "prediction": "all x.(Seismograph(x) -> MeasuresSizeOfDamage(x))", "score": 0}
{"id": "eqasc_validation_1659", "prediction": "all x y.((Seismograph(x) & Event(y)) -> MeasuresSizeOfDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1659", "prediction": "all x y z.((Seismograph(x) & Damage(y) & Event(z)) -> MeasuresSize(x,y,z))", "score": 0}
{"id": "eqasc_validation_1659", "prediction": "all x y.((Seismograph(x) & Occurrence(y)) -> MeasuresSizeOfDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1659", "prediction": "all x y.((Seismograph(x) & Damage(y)) -> MeasuresSize(x,y))", "score": 0}
{"id": "eqasc_validation_1659", "prediction": "all x y z.((Seismograph(x) & Damage(y) & Event(z)) -> MeasuresSizeOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1659", "prediction": "all x y.((Seismograph(x) & Incident(y)) -> MeasuresSizeOfDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1659", "prediction": "all x y.((Seismograph(x) & Occurs(y)) -> MeasuresSizeOfDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1659", "prediction": "all x y z.((Seismograph(x) & Damage(y) & Event(z)) -> MeasuresSizeOfDamage(x,y,z))", "score": 0}
{"id": "eqasc_validation_1659", "prediction": "all x.(Seismograph(x) -> MeasuresDamageSize(x))", "score": 0}
{"id": "eqasc_validation_1659", "prediction": "all x y z.((Seismograph(x) & Damage(y) & Occurrence(z)) -> MeasuresSize(x,y,z))", "score": 0}
{"id": "eqasc_validation_1659", "prediction": "all x y.((Seismograph(x) & Damage(y)) -> MeasuresSizeOf(x,y))", "score": 0}
{"id": "eqasc_validation_1659", "prediction": "all x y.((Seismograph(x) & Odd(y)) -> MeasuresSizeOfDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1659", "prediction": "all x y z.((Seismograph(x) & Damage(y) & occurrence(z)) -> MeasuresSize(x,y,z))", "score": 0}
{"id": "eqasc_validation_1659", "prediction": "all x y z.((Seismograph(x) & Damage(y) & Occurrence(z)) -> MeasuresSizeOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1659", "prediction": "all x y.((Seismograph(x) & Event(y)) -> MeasuresDamageSize(x,y))", "score": 0}
{"id": "eqasc_validation_1660", "prediction": "all x.((EarthquakeDamage(x) & CausedBy(x,Earthquake)) -> Emense(x))", "score": 0}
{"id": "eqasc_validation_1660", "prediction": "all x.(EarthquakeDamage(x) -> Emense(x))", "score": 0}
{"id": "eqasc_validation_1660", "prediction": "all x.((Damage(x) & CausedByEarthquakes(x)) -> Emense(x))", "score": 0}
{"id": "eqasc_validation_1660", "prediction": "all x.((EarthquakeDamage(x) & CausedBy(x,Earthquake)) -> Emmense(x))", "score": 0}
{"id": "eqasc_validation_1660", "prediction": "all x.((Earthquake(x) & Damage(x)) -> Emense(x))", "score": 0}
{"id": "eqasc_validation_1660", "prediction": "all x.(EarthquakeDamage(x) -> Emmense(x))", "score": 0}
{"id": "eqasc_validation_1660", "prediction": "all x.((Damage(x) & CausedByEarthquakes(x)) -> Emmense(x))", "score": 0}
{"id": "eqasc_validation_1660", "prediction": "all x.((EarthquakeDamage(x) & CausedBy(x,Earthquakes)) -> Emense(x))", "score": 0}
{"id": "eqasc_validation_1660", "prediction": "all x.((Damage(x) & CausedByEarthquake(x)) -> Emense(x))", "score": 0}
{"id": "eqasc_validation_1660", "prediction": "all x.((Earthquake(x) & CausedBy(x,Earthquake)) -> Emense(x))", "score": 0}
{"id": "eqasc_validation_1660", "prediction": "all x.((EarthquakeDamage(x) & CausedBy(x,Earthquakes)) -> Emmense(x))", "score": 0}
{"id": "eqasc_validation_1660", "prediction": "all x.((Earthquake(x) & Damage(x)) -> Emmense(x))", "score": 0}
{"id": "eqasc_validation_1660", "prediction": "all x.((Earthquake(x) & CausedBy(x,Earthquake)) -> Emmense(x))", "score": 0}
{"id": "eqasc_validation_1660", "prediction": "all x.((EarthquakeDamage(x) & CausedBy(x,Earthquake)) -> Extreme(x))", "score": 0}
{"id": "eqasc_validation_1661", "prediction": "all x.(Seismograph(x) -> PreventsDamage(x))", "score": 0}
{"id": "eqasc_validation_1661", "prediction": "all x.(Seismograph(x) -> CanPreventDamage(x))", "score": 0}
{"id": "eqasc_validation_1661", "prediction": "all x y.((Seismograph(x) & Damage(y)) -> Prevents(x,y))", "score": 0}
{"id": "eqasc_validation_1661", "prediction": "all x.(Seismograph(x) -> PreventDamage(x))", "score": 0}
{"id": "eqasc_validation_1661", "prediction": "all x y.((Seismograph(x) & Damage(y)) -> CanPrevent(x,y))", "score": 0}
{"id": "eqasc_validation_1661", "prediction": "all x y z.((Seismograph(x) & Damage(y) & Damage(z)) -> Prevents(x,y,z))", "score": 0}
{"id": "eqasc_validation_1661", "prediction": "all x y z.((Seismograph(x) & Damage(y) & Damage(z)) -> CanPrevent(x,y,z))", "score": 0}
{"id": "eqasc_validation_1661", "prediction": "all x.(Seismograph(x) -> (PreventsDamage(x) & Seismograph(x)))", "score": 0}
{"id": "eqasc_validation_1661", "prediction": "all x y.((Seismograph(x) & Damage(y)) -> PreventsDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1661", "prediction": "all x y.((Seismograph(x) & Seismometer(y)) -> PreventsDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1661", "prediction": "all x.(Seismograph(x) -> (PreventsDamage(x) & PreventsDamage(x)))", "score": 0}
{"id": "eqasc_validation_1661", "prediction": "all x y.((Seismograph(x) & Damage(y) & Prevents(x,y)) -> CanPrevent(x,y))", "score": 0}
{"id": "eqasc_validation_1661", "prediction": "all x y z.((Seismograph(x) & Damage(y) & Damage(z)) -> PreventsDamage(x,y,z))", "score": 0}
{"id": "eqasc_validation_1661", "prediction": "all x.((Seismograph(x) & PreventsDamage(x)) -> Seismograph(x))", "score": 0}
{"id": "eqasc_validation_1661", "prediction": "all x.((Seismograph(x) & PreventsDamage(x)) -> CanPreventDamage(x))", "score": 0}
{"id": "eqasc_validation_1661", "prediction": "all x y.((Seismograph(x) & Seismograph(y)) -> PreventsDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1662", "prediction": "all x.(JürgenMagnitude(x) -> MeasuresSizeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_1662", "prediction": "all x.(JürgenerMagnitude(x) -> MeasuresSizeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_1662", "prediction": "all x.(RiverMagnitude(x) -> MeasuresSizeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_1662", "prediction": "all x.(RiverMeasurement(x) -> MeasuresSizeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_1662", "prediction": "all x y.((JürgenerMeasurement(x) & Earthquake(y)) -> MeasuresSize(x,y))", "score": 0}
{"id": "eqasc_validation_1662", "prediction": "all x.(RiverMajority(x) -> MeasuresSizeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_1662", "prediction": "all x y.((Jürgen(x) & Earthquake(y)) -> MeasuresSize(x,y))", "score": 0}
{"id": "eqasc_validation_1662", "prediction": "all x.(JürgensMagnitude(x) -> MeasuresSizeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_1662", "prediction": "all x.(Jürgenmagnitude(x) -> MeasuresSizeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_1662", "prediction": "all x.(JürgenMeasuresSizeOfEarthquake(x) -> RichterMagnitude(x))", "score": 0}
{"id": "eqasc_validation_1662", "prediction": "all x.(JürgenMajority(x) -> MeasuresSizeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_1662", "prediction": "all x.(JürgenMeasurement(x) -> MeasuresSizeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_1662", "prediction": "all x.(RichterMagnitude(x) -> MeasuresSizeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_1662", "prediction": "all x.(JürgenerMeasurement(x) -> MeasuresSizeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_1662", "prediction": "all x.(JürgenMeasuresSizeOfEarthquake(x) -> RichterMeasuresSizeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_1663", "prediction": "all x y.((Seismograph(x) & RichterMagnitude(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1663", "prediction": "all x y.((Seismograph(x) & RichterMagnitude(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1663", "prediction": "all x y z.((Seismograph(x) & RichterMagnitude(y) & RichterMagnitude(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1663", "prediction": "all x y z.((Seismograph(x) & RichterMagnitude(y) & RichterMagnitude(z)) -> UsedForMeasuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1663", "prediction": "all x y.((Seismograph(x) & RichterMajority(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1663", "prediction": "all x y.((Seismograph(x) & RichterMagnitude(y)) -> MeasuresMeasurement(x,y))", "score": 0}
{"id": "eqasc_validation_1663", "prediction": "all x.(Seismograph(x) -> UsedForMeasuringJerryMagnitude(x))", "score": 0}
{"id": "eqasc_validation_1663", "prediction": "all x y.((Seismograph(x) & RichterMagnitude(y) & Measures(x,y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1663", "prediction": "all x y.((Seismograph(x) & RichterMajority(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1663", "prediction": "all x y z.((Seismograph(x) & RichterMagnitude(y) & RichterMagnitude(z) & Measures(x,y,z)) -> Seismograph(x))", "score": 0}
{"id": "eqasc_validation_1663", "prediction": "all x y z.((Seismograph(x) & RichterMagnitude(y) & RichterMagnitude(z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1663", "prediction": "all x y z.((Seismograph(x) & RichterMagnitude(y) & RichterMagnitude(z)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_validation_1663", "prediction": "all x y z.((Seismograph(x) & RichterMagnitude(y) & RichterMagnitude(z)) -> MeasuresMeasurement(x,y,z))", "score": 0}
{"id": "eqasc_validation_1663", "prediction": "all x y z.((Seismograph(x) & RichterMagnitude(y) & RichterMagnitude(z)) -> Measuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1663", "prediction": "all x.(Seismograph(x) -> MeasuresJerryMagnitude(x))", "score": 0}
{"id": "eqasc_validation_1663", "prediction": "all x y z.((Seismograph(x) & RichterMagnitude(y) & RichterMajority(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1664", "prediction": "all x.(Earthquake(x) -> MinorTermor(x))", "score": 0}
{"id": "eqasc_validation_1664", "prediction": "all x.(Earthquake(x) -> MinorTremor(x))", "score": 0}
{"id": "eqasc_validation_1664", "prediction": "all x.(Earthquake(x) -> (MinorTermor(x) | MinorTermor(x)))", "score": 0}
{"id": "eqasc_validation_1664", "prediction": "all x.(Earthquake(x) -> MinorTermors(x))", "score": 0}
{"id": "eqasc_validation_1664", "prediction": "all x.(Earthquake(x) -> (MinimalTermor(x) | MinorTermor(x)))", "score": 0}
{"id": "eqasc_validation_1664", "prediction": "all x.(Earthquake(x) -> (MinorTremor(x) | MinorTremor(x)))", "score": 0}
{"id": "eqasc_validation_1664", "prediction": "all x.(Earthquake(x) -> (MinimalTremor(x) | MinorTremor(x)))", "score": 0}
{"id": "eqasc_validation_1664", "prediction": "all x.(Earthquake(x) -> MinorTear(x))", "score": 0}
{"id": "eqasc_validation_1664", "prediction": "all x.(Earthquake(x) -> MajorTermor(x))", "score": 0}
{"id": "eqasc_validation_1664", "prediction": "all x.(Earthquake(x) -> (MinorTremor(x) | MinorTermor(x)))", "score": 0}
{"id": "eqasc_validation_1664", "prediction": "all x.(Earthquake(x) -> (MinimalTermor(x) & -MinimalTermor(x)))", "score": 0}
{"id": "eqasc_validation_1664", "prediction": "all x.(Earthquake(x) -> MinimalTermor(x))", "score": 0}
{"id": "eqasc_validation_1664", "prediction": "all x.(Earthquake(x) -> (MinorTermor(x) & -MinorTermor(x)))", "score": 0}
{"id": "eqasc_validation_1664", "prediction": "all x.(Earthquake(x) -> (MinorTermor(x) | MajorTermor(x)))", "score": 0}
{"id": "eqasc_validation_1664", "prediction": "all x.(Earthquake(x) -> (MinimalTremor(x) | MinorTermor(x)))", "score": 0}
{"id": "eqasc_validation_1665", "prediction": "all x y.((Seismograph(x) & Tremor(y)) -> MeasuresSize(x,y))", "score": 0}
{"id": "eqasc_validation_1665", "prediction": "all x y.((Seismograph(x) & Tremor(y)) -> MeasuresSizeOf(x,y))", "score": 0}
{"id": "eqasc_validation_1665", "prediction": "all x.(Seismograph(x) -> MeasuresSizeOfTermors(x))", "score": 0}
{"id": "eqasc_validation_1665", "prediction": "all x y z.((Seismograph(x) & Tremor(y) & Tremor(z)) -> MeasuresSize(x,y,z))", "score": 0}
{"id": "eqasc_validation_1665", "prediction": "all x.(Seismograph(x) -> MeasuresSizeOfTremors(x))", "score": 0}
{"id": "eqasc_validation_1665", "prediction": "all x y.((Seismograph(x) & Tremor(y)) -> UsedForMeasuringSize(x,y))", "score": 0}
{"id": "eqasc_validation_1665", "prediction": "all x y.((Seismograph(x) & Tremor(y)) -> MeasuresSizeOfTremors(x,y))", "score": 0}
{"id": "eqasc_validation_1665", "prediction": "all x y z.((Seismograph(x) & Tremor(y) & Tremor(z)) -> MeasuresSizeOf(x,y,z))", "score": 0}
{"id": "eqasc_validation_1665", "prediction": "all x y.((Seismograph(x) & Tremor(y)) -> MeasuresSizeOfTermors(x,y))", "score": 0}
{"id": "eqasc_validation_1665", "prediction": "all x y.((Seismograph(x) & Tremor(y)) -> MeasuresSizeOfTremor(x,y))", "score": 0}
{"id": "eqasc_validation_1665", "prediction": "all x y.((Seismograph(x) & Tremors(y)) -> MeasuresSize(x,y))", "score": 0}
{"id": "eqasc_validation_1665", "prediction": "all x y z.((Seismograph(x) & Tremor(y) & Tremor(z)) -> UsedForMeasuringSize(x,y,z))", "score": 0}
{"id": "eqasc_validation_1665", "prediction": "all x y z.((Seismograph(x) & Tremor(y) & MeasuresSize(x,y)) -> UsedFor(x,z))", "score": 0}
{"id": "eqasc_validation_1665", "prediction": "all x y.((Seismograph(x) & Tremor(y)) -> MeasuresSizeOfSize(x,y))", "score": 0}
{"id": "eqasc_validation_1665", "prediction": "all x.(Seismograph(x) -> UsedForMeasuringSizeOfTermors(x))", "score": 0}
{"id": "eqasc_validation_1665", "prediction": "all x.(Seismograph(x) -> UsedForMeasuringSizeOfTremors(x))", "score": 0}
{"id": "eqasc_validation_1666", "prediction": "all x y.((Waves(x) & Earthquake(y)) -> DoDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1666", "prediction": "all x y.((Waves(x) & Earthquake(y)) -> DoseDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1666", "prediction": "all x.((Waves(x) & Earthquake(x)) -> DoDamage(x))", "score": 0}
{"id": "eqasc_validation_1666", "prediction": "all x y z.((Waves(x) & Earthquake(y) & Wave(z)) -> DoseDamage(x,y,z))", "score": 0}
{"id": "eqasc_validation_1666", "prediction": "all x y.((Waves(x) & Earthquake(y)) -> DoesDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1666", "prediction": "all x y.((Waves(x) & Earthquake(y)) -> Dosage(x,y))", "score": 0}
{"id": "eqasc_validation_1666", "prediction": "all x.((Waves(x) & DuringEarthquake(x)) -> DoDamage(x))", "score": 0}
{"id": "eqasc_validation_1666", "prediction": "all x.((Waves(x) & Earthquake(x)) -> DoseDamage(x))", "score": 0}
{"id": "eqasc_validation_1666", "prediction": "all x.((Waves(x) & DoDamageDuringEarthquakes(x)) -> DoDamageDuringEarthquakes(x))", "score": 0}
{"id": "eqasc_validation_1666", "prediction": "all x y z.((Waves(x) & Earthquake(y) & Wave(z)) -> DoseDamage(x,z))", "score": 0}
{"id": "eqasc_validation_1666", "prediction": "all x.((Waves(x) & DuringEarthquakes(x)) -> DoDamage(x))", "score": 0}
{"id": "eqasc_validation_1666", "prediction": "all x y.((Waves(x) & Earthquake(y)) -> DosingDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1666", "prediction": "all x y.((Waves(x) & Earthquake(y)) -> DoTheDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1666", "prediction": "all x.(Waves(x) -> DoDamageDuringEarthquakes(x))", "score": 0}
{"id": "eqasc_validation_1666", "prediction": "all x y z.((Waves(x) & Earthquake(y) & Wave(z)) -> DoesDamage(x,y,z))", "score": 0}
{"id": "eqasc_validation_1666", "prediction": "all x y.((Waves(x) & Earthquake(y)) -> DoDamageDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1667", "prediction": "all x.(Seismograph(x) -> MeasuresWaves(x))", "score": 0}
{"id": "eqasc_validation_1667", "prediction": "all x y.((Seismograph(x) & Wave(y)) -> MeasuresAndDoesDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1667", "prediction": "all x.(Seismograph(x) -> MeasuresWavesDoingDamage(x))", "score": 0}
{"id": "eqasc_validation_1667", "prediction": "all x y.((Seismograph(x) & Wave(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1667", "prediction": "all x.(Seismograph(x) -> MeasuresWavesThatDoDamage(x))", "score": 0}
{"id": "eqasc_validation_1667", "prediction": "all x.(Seismograph(x) -> (MeasuresWaves(x) & DoseDamage(x)))", "score": 0}
{"id": "eqasc_validation_1667", "prediction": "all x.(Seismograph(x) -> MeasuresWavesDoDamage(x))", "score": 0}
{"id": "eqasc_validation_1667", "prediction": "all x.(Seismograph(x) -> (MeasuresWaves(x) & DoesDamage(x)))", "score": 0}
{"id": "eqasc_validation_1667", "prediction": "all x.(Seismograph(x) -> MeasuresWavesAndDoesDamage(x))", "score": 0}
{"id": "eqasc_validation_1667", "prediction": "all x y z.((Seismograph(x) & Wave(y) & Damage(z)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1667", "prediction": "all x y z.((Seismograph(x) & Wave(y) & Damage(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1667", "prediction": "all x.((Seismograph(x) & MeasuresWaves(x)) -> DoseDamage(x))", "score": 0}
{"id": "eqasc_validation_1667", "prediction": "all x.(Seismograph(x) -> (MeasuresWaves(x) & DosDamage(x)))", "score": 0}
{"id": "eqasc_validation_1667", "prediction": "all x.(Seismograph(x) -> MeasuresWells(x))", "score": 0}
{"id": "eqasc_validation_1667", "prediction": "all x y.((Seismograph(x) & Wave(y)) -> MeasuresDoingDamage(x,y))", "score": 0}
{"id": "eqasc_validation_1668", "prediction": "all x.(Spot(x) -> HasCollarCells(x))", "score": 0}
{"id": "eqasc_validation_1668", "prediction": "all x.(Sponges(x) -> HasCollarCells(x))", "score": 0}
{"id": "eqasc_validation_1668", "prediction": "all x.(Spoonge(x) -> HasCollarCells(x))", "score": 0}
{"id": "eqasc_validation_1668", "prediction": "all x.(Spot(x) -> HasCollarCell(x))", "score": 0}
{"id": "eqasc_validation_1668", "prediction": "all x.(Sponge(x) -> HasCollarCells(x))", "score": 0}
{"id": "eqasc_validation_1668", "prediction": "all x.(Spot(x) -> (HasCollarCells(x) & SpecializedCells(x)))", "score": 0}
{"id": "eqasc_validation_1668", "prediction": "all x.(Sponges(x) -> (HasCollarCells(x) & SpecializedCells(x)))", "score": 0}
{"id": "eqasc_validation_1668", "prediction": "all x.(Sponges(x) -> HasSpecializedCells(x))", "score": 0}
{"id": "eqasc_validation_1668", "prediction": "all x.(Spot(x) -> HasSpecializedCells(x))", "score": 0}
{"id": "eqasc_validation_1668", "prediction": "all x.(Spoonge(x) -> HasSpecializedCells(x))", "score": 0}
{"id": "eqasc_validation_1668", "prediction": "all x.(Sponges(x) -> HasCollarCell(x))", "score": 0}
{"id": "eqasc_validation_1668", "prediction": "all x y.((Spot(x) & CollarCell(y)) -> SpecializedCell(x,y))", "score": 0}
{"id": "eqasc_validation_1668", "prediction": "all x.(Spot(x) -> (HasCollarCell(x) & SpecializedCell(x)))", "score": 0}
{"id": "eqasc_validation_1668", "prediction": "all x.(Sponge(x) -> HasSpecializedCells(x))", "score": 0}
{"id": "eqasc_validation_1668", "prediction": "all x.(Spoonge(x) -> HasCollarCell(x))", "score": 0}
{"id": "eqasc_validation_1668", "prediction": "all x.(Spoonge(x) -> HasSpecializedCells(x,CollarCells))", "score": 0}
{"id": "eqasc_validation_1669", "prediction": "all x.(CollarCell(x) -> (PicksUpPlanktonicFood(x) & StartsDigestiveProcess(x)))", "score": 0}
{"id": "eqasc_validation_1669", "prediction": "all x.(CollarCell(x) -> (PickUpPlanktonicFood(x) & StartDigestiveProcess(x)))", "score": 0}
{"id": "eqasc_validation_1669", "prediction": "all x y.((CollarCell(x) & PlanktonicFood(y)) -> PicksUpAndStartsDigestiveProcess(x,y))", "score": 0}
{"id": "eqasc_validation_1669", "prediction": "all x y z.((CollarCell(x) & PlanktonicFood(y) & DigestiveProcess(z)) -> PicksUpAndStarts(x,y,z))", "score": 0}
{"id": "eqasc_validation_1669", "prediction": "all x.(CollarCell(x) -> (PickupPlanktonicFood(x) & StartDigestiveProcess(x)))", "score": 0}
{"id": "eqasc_validation_1669", "prediction": "all x y.((CollarCell(x) & PlanktonicFood(y)) -> (PicksUp(x,y) & StartsDigestiveProcess(x)))", "score": 0}
{"id": "eqasc_validation_1669", "prediction": "all x.(CollarCell(x) -> PicksUpPlanktonicFoodAndStartsDigestiveProcess(x))", "score": 0}
{"id": "eqasc_validation_1669", "prediction": "all x.(CollarCell(x) -> (picksUpPlanktonicFood(x) & StartsDigestiveProcess(x)))", "score": 0}
{"id": "eqasc_validation_1669", "prediction": "all x y z.((CollarCell(x) & PlanktonicFood(y) & DigestiveProcess(z)) -> (PicksUp(x,y) & Starts(x,z)))", "score": 0}
{"id": "eqasc_validation_1669", "prediction": "all x y.((CollarCell(x) & PlanktonicFood(y)) -> (PicksUp(x,y) & StartsDigestiveProcess(x,y)))", "score": 0}
{"id": "eqasc_validation_1669", "prediction": "all x y.((SpecialCell(x) & CollarCell(y)) -> (PicksUpPlanktonicFood(x,y) & StartsDigestiveProcess(x,y)))", "score": 0}
{"id": "eqasc_validation_1669", "prediction": "all x y.((CollarCell(x) & PlanktonicFood(y)) -> (PicksUp(x,y) & DigestiveProcess(x)))", "score": 0}
{"id": "eqasc_validation_1669", "prediction": "all x.(CollarCell(x) -> (PickupsPlanktonicFood(x) & StartsDigestiveProcess(x)))", "score": 0}
{"id": "eqasc_validation_1669", "prediction": "all x y z.((CollarCell(x) & PlanktonicFood(y) & DigestiveProcess(z)) -> PicksUpAndStartsProcess(x,y,z))", "score": 0}
{"id": "eqasc_validation_1669", "prediction": "all x y.((SpecialCell(x) & CollarCell(y)) -> (PickUpPlanktonicFood(x,y) & StartDigestiveProcess(x,y)))", "score": 0}
{"id": "eqasc_validation_1669", "prediction": "all x.(CollarCell(x) -> (PickUpPlanktonicFood(x) & StartsDigestiveProcess(x)))", "score": 0}
{"id": "eqasc_validation_1670", "prediction": "all x.(Spot(x) -> (HasSpecializedCells(x) & PicksUpPlanktonicFood(x) & DigestsPlanktonicFood(x)))", "score": 0}
{"id": "eqasc_validation_1670", "prediction": "all x.(Sponges(x) -> (HasSpecializedCells(x) & PicksUpPlanktonicFood(x) & DigestsPlanktonicFood(x)))", "score": 0}
{"id": "eqasc_validation_1670", "prediction": "all x y z.((Spot(x) & PlanktonicFood(y) & PlanktonicFood(z)) -> HasSpecializedCellsToPickUpToDigest(x,y,z))", "score": 0}
{"id": "eqasc_validation_1670", "prediction": "all x y z.((Spot(x) & PlanktonicFood(y) & PlanktonicFood(z)) -> HasSpecializedCellsToPickUp(x,y,z))", "score": 0}
{"id": "eqasc_validation_1670", "prediction": "all x y.((Spot(x) & PlanktonicFood(y)) -> HasSpecializedCells(x,y))", "score": 0}
{"id": "eqasc_validation_1670", "prediction": "all x y z.((Spot(x) & PlanktonicFood(y) & PlanktonicFood(z)) -> HasSpecializedCellsToPickUpAndDigest(x,y,z))", "score": 0}
{"id": "eqasc_validation_1670", "prediction": "all x.(Spot(x) -> (HasSpecializedCells(x) & PickUpPlanktonicFood(x) & DigestsPlanktonicFood(x)))", "score": 0}
{"id": "eqasc_validation_1670", "prediction": "all x.(Sponges(x) -> (HasSpecializedCells(x) & PickUpPlanktonicFood(x) & DigestsPlanktonicFood(x)))", "score": 0}
{"id": "eqasc_validation_1670", "prediction": "all x y.((Spot(x) & PlanktonicFood(y)) -> HasSpecializedCellsToPickUp(x,y))", "score": 0}
{"id": "eqasc_validation_1670", "prediction": "all x y z.((Spot(x) & PlanktonicFood(y) & PlanktonicFood(z)) -> HasSpecializedCells(x,y,z))", "score": 0}
{"id": "eqasc_validation_1670", "prediction": "all x y z.((Spot(x) & PlanktonicFood(y) & PlanktonicFood(z)) -> HasSpecializedCells(x))", "score": 0}
{"id": "eqasc_validation_1670", "prediction": "all x y z.((Sponges(x) & PlanktonicFood(y) & PlanktonicFood(z)) -> HasSpecializedCellsToPickUpToDigest(x,y,z))", "score": 0}
{"id": "eqasc_validation_1670", "prediction": "all x.(Spot(x) -> (SpecializedCells(x) & PickUpPlanktonicFood(x) & DigestsPlanktonicFood(x)))", "score": 0}
{"id": "eqasc_validation_1670", "prediction": "all x.(Sponges(x) -> (SpecializedCells(x) & PickUpPlanktonicFood(x) & DigestsPlanktonicFood(x)))", "score": 0}
{"id": "eqasc_validation_1670", "prediction": "all x y z.((Spot(x) & PlanktonicFood(y) & PlanktonicFood(z) & SpecializedCells(x)) -> PicksUpToDigest(x,y,z))", "score": 0}
{"id": "eqasc_validation_1670", "prediction": "all x y z.((Spoonge(x) & PlanktonicFood(y) & PlanktonicFood(z)) -> HasSpecializedCellsToPickUpToDigest(x,y,z))", "score": 0}
{"id": "eqasc_validation_1671", "prediction": "all x.(Sponges(x) -> (TrapsFood(x) & DigestsFood(x) & SpecializedCells(x)))", "score": 0}
{"id": "eqasc_validation_1671", "prediction": "all x y.((Sponges(x) & Food(y)) -> (Traps(x,y) & Digests(x,y) & SpecializedCells(x)))", "score": 0}
{"id": "eqasc_validation_1671", "prediction": "all x y.((Spoonge(x) & Food(y)) -> (Traps(x,y) & Digests(x,y) & SpecializedCells(x)))", "score": 0}
{"id": "eqasc_validation_1671", "prediction": "all x.(Spoonge(x) -> (TrapsFood(x) & DigestsFood(x) & SpecializedCells(x)))", "score": 0}
{"id": "eqasc_validation_1671", "prediction": "all x.(Sponges(x) -> (TrapsFood(x) & DigestsFoodWithSpecializedCells(x)))", "score": 0}
{"id": "eqasc_validation_1671", "prediction": "all x y.((Spot(x) & Food(y)) -> (Traps(x,y) & Digests(x,y) & SpecializedCells(x)))", "score": 0}
{"id": "eqasc_validation_1671", "prediction": "all x y.((Sponges(x) & Food(y)) -> (Traps(x,y) & DigestsWithSpecializedCells(x,y)))", "score": 0}
{"id": "eqasc_validation_1671", "prediction": "all x y z.((Sponges(x) & Food(y) & SpecializedCells(z)) -> (Traps(x,y) & Digests(x,z)))", "score": 0}
{"id": "eqasc_validation_1671", "prediction": "all x y.((Spoonge(x) & Food(y)) -> (Traps(x,y) & DigestsWithSpecializedCells(x,y)))", "score": 0}
{"id": "eqasc_validation_1671", "prediction": "all x y z.((Spoonge(x) & Food(y) & SpecializedCells(z)) -> (Traps(x,y) & Digests(x,z)))", "score": 0}
{"id": "eqasc_validation_1671", "prediction": "all x y.((Sponges(x) & Food(y)) -> (Traps(x,y) & DigestsWithSpecializedCells(x)))", "score": 0}
{"id": "eqasc_validation_1671", "prediction": "all x y z.((Sponges(x) & Food(y) & SpecializedCells(z)) -> (Traps(x,y) & DigestsWith(x,z)))", "score": 0}
{"id": "eqasc_validation_1671", "prediction": "all x y z.((Spoonge(x) & Food(y) & SpecializedCells(z)) -> (Traps(x,y) & DigestsWith(x,z)))", "score": 0}
{"id": "eqasc_validation_1671", "prediction": "all x y.((Spoonge(x) & Food(y)) -> (Traps(x,y) & DigestsWithSpecializedCells(x)))", "score": 0}
{"id": "eqasc_validation_1671", "prediction": "all x y.((Spoonge(x) & Food(y)) -> (Traps(x,y) & Digests(x,y) & SpecializedCells(x,y)))", "score": 0}
{"id": "eqasc_validation_1671", "prediction": "all x y.((Sponges(x) & Food(y)) -> (Traps(x,y) & Digests(x,y) & SpecializedCells(x,y)))", "score": 0}
{"id": "eqasc_validation_1672", "prediction": "all x.((Spicule(x) | AmoeboidCell(x) | CollarCell(x)) -> SeaAnemone(x))", "score": 0}
{"id": "eqasc_validation_1672", "prediction": "all x y z.((Spicule(x) & AmoeboidCell(y) & CollarCell(z)) -> SeaAnemone(x))", "score": 0}
{"id": "eqasc_validation_1672", "prediction": "all x.((Spice(x) | AmoeboidCell(x) | CollarCell(x)) -> SeaAnemone(x))", "score": 0}
{"id": "eqasc_validation_1672", "prediction": "all x.(Spicule(x) | AmoeboidCell(x) | CollarCell(x)) -> SeaAnemone(x))", "score": -1}
{"id": "eqasc_validation_1672", "prediction": "all x y z.((Spicule(x) & AmoeboidCell(y) & CollarCell(z)) -> (CharacteristicOfSeaAnemones(x) & CharacteristicOfSeaAnemones(x)))", "score": 0}
{"id": "eqasc_validation_1672", "prediction": "all x y.((Spicule(x) & AmoeboidCell(y) & CollarCell(x)) -> SeaAnemone(x))", "score": 0}
{"id": "eqasc_validation_1672", "prediction": "all x y z.((Spicule(x) & AmoeboidCell(y) & CollarCell(z)) -> (CharacteristicOfSeaAnemone(x) & CharacteristicOfSeaAnemone(x)))", "score": 0}
{"id": "eqasc_validation_1672", "prediction": "all x y z.((Spicule(x) & AmoeboidCell(y) & CollarCell(z)) -> (CaracteristicOfSeaAnemones(x) & CharacteristicOfSeaAnemones(x)))", "score": 0}
{"id": "eqasc_validation_1672", "prediction": "all x.((Spicules(x) | AmoeboidCells(x) | CollarCells(x)) -> SeaAnemone(x))", "score": 0}
{"id": "eqasc_validation_1672", "prediction": "all x y z.((Spicule(x) & AmoeboidCell(y) & CollarCell(z)) -> (CaracteristicOfSeaAnemone(x) & CharacteristicOfSeaAnemone(x)))", "score": 0}
{"id": "eqasc_validation_1672", "prediction": "all x.(Spicule(x) & AmoeboidCell(x) & CollarCell(x)) -> SeaAnemone(x))", "score": -1}
{"id": "eqasc_validation_1672", "prediction": "all x.((Spicule(x) | Amoeboid(x) | CollarCell(x)) -> SeaAnemone(x))", "score": 0}
{"id": "eqasc_validation_1672", "prediction": "all x.(Spicules(x) | AmoeboidCells(x) | CollarCells(x)) -> SeaAnemone(x))", "score": -1}
{"id": "eqasc_validation_1673", "prediction": "all x y.((Spot(x) & SeaAnemone(y)) -> SimilarSpecializedCells(x,y))", "score": 0}
{"id": "eqasc_validation_1673", "prediction": "all x y.((Sponges(x) & SeaAnemone(y)) -> SimilarSpecializedCells(x,y))", "score": 0}
{"id": "eqasc_validation_1673", "prediction": "all x y.((Spoonge(x) & SeaAnemone(y)) -> SimilarSpecializedCells(x,y))", "score": 0}
{"id": "eqasc_validation_1673", "prediction": "all x y.((Spot(x) & SeaAnemone(y)) -> (SameSpecializedCells(x,y) & SimilarSpecializedCells(x,y)))", "score": 0}
{"id": "eqasc_validation_1673", "prediction": "all x y.((Spote(x) & SeaAnemone(y)) -> SimilarSpecializedCells(x,y))", "score": 0}
{"id": "eqasc_validation_1673", "prediction": "all x y.((Spotch(x) & SeaAnemone(y)) -> SimilarSpecializedCells(x,y))", "score": 0}
{"id": "eqasc_validation_1673", "prediction": "all x y.((Spot(x) & SeaAnemone(y)) -> HasSpecializedCells(x,y))", "score": 0}
{"id": "eqasc_validation_1673", "prediction": "all x.(Sponges(x) & SeaAnemones(x)) -> SimilarSpecializedCells(x))", "score": -1}
{"id": "eqasc_validation_1673", "prediction": "all x y.((Sponge(x) & SeaAnemone(y)) -> SimilarSpecializedCells(x,y))", "score": 0}
{"id": "eqasc_validation_1673", "prediction": "all x y.((Spot(x) & SeaAnemone(y)) -> (HasSpecializedCells(x,y) & HasSpecializedCells(x,y)))", "score": 0}
{"id": "eqasc_validation_1673", "prediction": "all x y.((Spot(x) & SeaAnemone(y)) -> (SameSpecializedCell(x,y) & SimilarSpecializedCell(x,y)))", "score": 0}
{"id": "eqasc_validation_1673", "prediction": "all x y.((Spot(x) & SeaAnemone(y)) -> (SameSpecializedCells(x,y) & SimilarSpecializedCells(y,x)))", "score": 0}
{"id": "eqasc_validation_1673", "prediction": "all x y.((Spot(x) & SeaAnemone(y)) -> (HasSpecializedCells(x,y) & HasSpecializedCells(y,x)))", "score": 0}
{"id": "eqasc_validation_1674", "prediction": "all x y z.((Flagellum(x) & CollarCell(y) & Food(z)) -> CausesCurrentToPassOver(x,y,z))", "score": 0}
{"id": "eqasc_validation_1674", "prediction": "all x y z.((Flagellum(x) & CollarCell(y) & Food(z)) -> (CausesCurrentToPassOver(x,y) & Collects(x,z)))", "score": 0}
{"id": "eqasc_validation_1674", "prediction": "all x y z.((Flagellum(x) & CollarCell(y) & Food(z)) -> (CausesCurrentToPass(x,y) & Collects(x,z)))", "score": 0}
{"id": "eqasc_validation_1674", "prediction": "all x.((FlagellumOfCollarCell(x) & CurrentPassesOverCollar(x)) -> FoodCollected(x))", "score": 0}
{"id": "eqasc_validation_1674", "prediction": "all x y.((Flagellum(x) & CollarCell(y)) -> (CurrentPassesOverCollar(x,y) & FoodCollected(x,y)))", "score": 0}
{"id": "eqasc_validation_1674", "prediction": "all x y.((Flagellum(x) & CollarCell(y)) -> (CurrentPassesOver(x,y) & FoodCollected(x)))", "score": 0}
{"id": "eqasc_validation_1674", "prediction": "all x y z.((Flagellum(x) & CollarCell(y) & Food(z)) -> (CausesCurrentToPassOver(x,y) & Collects(y,z)))", "score": 0}
{"id": "eqasc_validation_1674", "prediction": "all x y z.((FlagellumOfCollarCell(x) & Current(y) & Food(z)) -> CausesToPassOverCollarAndCollects(x,y,z))", "score": 0}
{"id": "eqasc_validation_1674", "prediction": "all x y z.((Flagellum(x) & CollarCell(y) & Food(z)) -> (CausesCurrentToPassOver(x,y) & Collects(z,y)))", "score": 0}
{"id": "eqasc_validation_1674", "prediction": "all x y z.((Flagellum(x) & CollarCell(y) & Food(z)) -> (CausesCurrentToPass(x,y) & Collects(z,y)))", "score": 0}
{"id": "eqasc_validation_1674", "prediction": "all x y z.((Flagellum(x) & CollarCell(y) & Food(z)) -> (CausesCurrentToPass(x,y) & Collects(y,z)))", "score": 0}
{"id": "eqasc_validation_1674", "prediction": "all x y z.((Flagellum(x) & CollarCell(y) & Food(z)) -> (CausesCurrent(x,y) & PassesOver(y,z)))", "score": 0}
{"id": "eqasc_validation_1674", "prediction": "all x y.((Flagellum(x) & CollarCell(y)) -> (CausesCurrentToPass(x,y) & FoodCollected(x)))", "score": 0}
{"id": "eqasc_validation_1674", "prediction": "all x y.((Flagellum(x) & CollarCell(y)) -> (CausesCurrentToPassOver(x,y) & FoodCollected(x)))", "score": 0}
{"id": "eqasc_validation_1674", "prediction": "all x y z.((Flagellum(x) & CollarCell(y) & Food(z)) -> CausesCurrentToPassOver(x,y))", "score": 0}
{"id": "eqasc_validation_1674", "prediction": "all x y z.((Flagellum(x) & CollarCell(y) & Food(z)) -> CausesCurrentToPass(x,y,z))", "score": 0}
{"id": "eqasc_validation_1675", "prediction": "all x.(Spot(x) -> (UsesSpecializedCells(x) & HasFlagellum(x) & CollectsFood(x)))", "score": 0}
{"id": "eqasc_validation_1675", "prediction": "all x.(Sponges(x) -> (UsesSpecializedCells(x) & HasFlagellum(x) & CollectsFood(x)))", "score": 0}
{"id": "eqasc_validation_1675", "prediction": "all x.(Sponge(x) -> (UsesSpecializedCells(x) & HasFlagellum(x) & CollectsFood(x)))", "score": 0}
{"id": "eqasc_validation_1675", "prediction": "all x.(Spoonge(x) -> (UsesSpecializedCells(x) & HasFlagellum(x) & CollectsFood(x)))", "score": 0}
{"id": "eqasc_validation_1675", "prediction": "all x.(Sponges(x) -> (UsesSpecializedCellsWithFlagellum(x) & CollectsFood(x)))", "score": 0}
{"id": "eqasc_validation_1675", "prediction": "all x.(Sponge(x) -> (UsesSpecializedCellsWithFlagellum(x) & CollectsFood(x)))", "score": 0}
{"id": "eqasc_validation_1675", "prediction": "all x.(Spot(x) -> (UsesSpecializedCellsWithFlagellum(x) & CollectsFood(x)))", "score": 0}
{"id": "eqasc_validation_1675", "prediction": "all x.(Spoonge(x) -> (UsesSpecializedCellsWithFlagellum(x) & CollectsFood(x)))", "score": 0}
{"id": "eqasc_validation_1675", "prediction": "all x y z.((Sponge(x) & SpecializedCell(y) & Flagellum(z)) -> CollectsFood(x,y,z))", "score": 0}
{"id": "eqasc_validation_1675", "prediction": "all x y z.((Spot(x) & SpecializedCell(y) & Flagellum(z)) -> CollectsFood(x,y,z))", "score": 0}
{"id": "eqasc_validation_1675", "prediction": "all x.(Spot(x) -> UsesSpecializedCellsWithFlagellum(x))", "score": 0}
{"id": "eqasc_validation_1675", "prediction": "all x.(Sponges(x) -> UsesSpecializedCellsWithFlagellum(x))", "score": 0}
{"id": "eqasc_validation_1675", "prediction": "all x.(Spot(x) -> (UsesSpecializedCells(x) & HasFlagellum(x)))", "score": 0}
{"id": "eqasc_validation_1675", "prediction": "all x.(Sponge(x) -> UsesSpecializedCellsWithFlagellum(x))", "score": 0}
{"id": "eqasc_validation_1675", "prediction": "all x.(Sponges(x) -> (UsesSpecializedCells(x) & HasFlagellum(x)))", "score": 0}
{"id": "eqasc_validation_1675", "prediction": "all x.(Sponge(x) -> (UsesSpecializedCells(x) & HasFlagellum(x)))", "score": 0}
{"id": "eqasc_validation_1676", "prediction": "all x.(Spot(x) -> (Asymetrical(x) & HasSpecialCells(x)))", "score": 0}
{"id": "eqasc_validation_1676", "prediction": "all x.(Spot(x) -> (Asymetrical(x) & ManySpecialTypesOfCells(x)))", "score": 0}
{"id": "eqasc_validation_1676", "prediction": "all x.(Spot(x) -> (Asymetrical(x) & ManySpecialCells(x)))", "score": 0}
{"id": "eqasc_validation_1676", "prediction": "all x.(Spoonge(x) -> (Asymetrical(x) & ManySpecialTypesOfCells(x)))", "score": 0}
{"id": "eqasc_validation_1676", "prediction": "all x.(Spoonge(x) -> (Asymetrical(x) & HasSpecialCells(x)))", "score": 0}
{"id": "eqasc_validation_1676", "prediction": "all x.(Spot(x) -> (Asymetrical(x) & HasSpecialCellTypes(x)))", "score": 0}
{"id": "eqasc_validation_1676", "prediction": "all x.(Spot(x) -> (Asymetrical(x) & HasSpecialTypesOfCells(x)))", "score": 0}
{"id": "eqasc_validation_1676", "prediction": "all x.(Spoonge(x) -> (Asymetrical(x) & ManySpecialCells(x)))", "score": 0}
{"id": "eqasc_validation_1676", "prediction": "all x.(Spot(x) -> (Asymetrical(x) & ManySpecialCellTypes(x)))", "score": 0}
{"id": "eqasc_validation_1676", "prediction": "all x.(Spot(x) -> (Asymetrical(x) & exists y.(SpecialCell(y) & Has(x,y))))", "score": 0}
{"id": "eqasc_validation_1676", "prediction": "all x.(Spoonge(x) -> (Asymetrical(x) & HasSpecialCellTypes(x)))", "score": 0}
{"id": "eqasc_validation_1676", "prediction": "all x.(Spoonge(x) -> (Asymetrical(x) & ManySpecialCellTypes(x)))", "score": 0}
{"id": "eqasc_validation_1676", "prediction": "all x.(Sponge(x) -> (Asymetrical(x) & HasSpecialCells(x)))", "score": 0}
{"id": "eqasc_validation_1676", "prediction": "all x.(Sponges(x) -> (Asymetrical(x) & HasSpecialCells(x)))", "score": 0}
{"id": "eqasc_validation_1676", "prediction": "all x.(Spot(x) -> (Asymetrical(x) & exists y.(SpecialCell(y) & Has(x,y)))))", "score": -1}
{"id": "eqasc_validation_1676", "prediction": "all x.(Sponges(x) -> (Asymetrical(x) & ManySpecialCells(x)))", "score": 0}
{"id": "eqasc_validation_1677", "prediction": "all x.(Sponges(x) -> (Asymmetrical(x) & HasCollarCells(x)))", "score": 0}
{"id": "eqasc_validation_1677", "prediction": "all x.(Sponge(x) -> (Asymmetrical(x) & HasCollarCells(x)))", "score": 0}
{"id": "eqasc_validation_1677", "prediction": "all x.(Spot(x) -> (Asymmetrical(x) & HasCollarCells(x)))", "score": 0}
{"id": "eqasc_validation_1677", "prediction": "all x.(Spoonge(x) -> (Asymmetrical(x) & HasCollarCells(x)))", "score": 0}
{"id": "eqasc_validation_1677", "prediction": "all x.(Sponges(x) -> (Asymmetrical(x) & CollarCells(x)))", "score": 0}
{"id": "eqasc_validation_1677", "prediction": "all x.(Sponges(x) -> (Asymmetric(x) & HasCollarCells(x)))", "score": 0}
{"id": "eqasc_validation_1677", "prediction": "all x.(Sponge(x) -> (Asymmetrical(x) & CollarCells(x)))", "score": 0}
{"id": "eqasc_validation_1677", "prediction": "all x.(Spot(x) -> (Asymmetrical(x) & CollarCells(x)))", "score": 0}
{"id": "eqasc_validation_1677", "prediction": "all x.(Sponge(x) -> (Asymmetric(x) & HasCollarCells(x)))", "score": 0}
{"id": "eqasc_validation_1677", "prediction": "all x.(Spot(x) -> (Asymmetric(x) & HasCollarCells(x)))", "score": 0}
{"id": "eqasc_validation_1677", "prediction": "all x.(Spoonge(x) -> (Asymmetrical(x) & CollarCells(x)))", "score": 0}
{"id": "eqasc_validation_1677", "prediction": "all x.(Spong(x) -> (Asymmetrical(x) & HasCollarCells(x)))", "score": 0}
{"id": "eqasc_validation_1677", "prediction": "all x y.((Spot(x) & Asymmetrical(x) & CollarCells(y)) -> Sponges(x))", "score": 0}
{"id": "eqasc_validation_1677", "prediction": "all x y.((Sponge(x) & Asymmetrical(x) & CollarCells(y)) -> Asymmetrical(x))", "score": 0}
{"id": "eqasc_validation_1678", "prediction": "all x y.((CollarCell(x) & Sponge(y)) -> ProducesConstantFlowOfWater(x,y))", "score": 0}
{"id": "eqasc_validation_1678", "prediction": "all x y.((CollarCell(x) & Sponge(y)) -> ProducesConstantFlowOfWaterInto(x,y))", "score": 0}
{"id": "eqasc_validation_1678", "prediction": "all x.(CollarCell(x) -> ProducesConstantFlowOfWaterIntoSponge(x))", "score": 0}
{"id": "eqasc_validation_1678", "prediction": "all x y z.((CollarCell(x) & Sponge(y) & Water(z)) -> ProducesConstantFlowInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_1678", "prediction": "all x y z.((CollarCell(x) & Sponge(y) & Water(z)) -> ProducesConstantFlow(x,y,z))", "score": 0}
{"id": "eqasc_validation_1678", "prediction": "all x.(CollarCell(x) -> ProducesConstantFlowOfWater(x))", "score": 0}
{"id": "eqasc_validation_1678", "prediction": "all x y z.((CollarCell(x) & Sponge(y) & Water(z)) -> ProducesConstantFlow(x,z))", "score": 0}
{"id": "eqasc_validation_1678", "prediction": "all x y z.((CollarCell(x) & Sponge(y) & WaterFlow(z)) -> ProducesConstantFlow(x,y,z))", "score": 0}
{"id": "eqasc_validation_1678", "prediction": "all x y.((CollarCell(x) & Sponge(y)) -> ConstantFlowOfWater(x,y))", "score": 0}
{"id": "eqasc_validation_1678", "prediction": "all x y.((ColarCell(x) & Sponge(y)) -> ProducesConstantFlowOfWater(x,y))", "score": 0}
{"id": "eqasc_validation_1678", "prediction": "all x y z.((CollarCell(x) & Sponge(y) & WaterFlow(z)) -> ProducesConstantFlowInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_1678", "prediction": "all x y.((CollarCell(x) & Sponge(y)) -> ProducesConstantWaterFlow(x,y))", "score": 0}
{"id": "eqasc_validation_1678", "prediction": "all x y.((CollarCell(x) & Sponge(y)) -> ConstantFlowOfWaterInto(x,y))", "score": 0}
{"id": "eqasc_validation_1678", "prediction": "all x y z.((CollarCell(x) & Water(y) & Sponge(z)) -> ProducesConstantFlow(x,y,z))", "score": 0}
{"id": "eqasc_validation_1678", "prediction": "all x y z.((ColarCell(x) & Sponge(y) & Water(z)) -> ProducesConstantFlowInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_1679", "prediction": "all x.(Sponge(x) -> (SpecializedWorkHorse(x) & ProducesConstantFlowOfWater(x)))", "score": 0}
{"id": "eqasc_validation_1679", "prediction": "all x.(Sponge(x) -> (HasSpecializedWorkHorse(x) & ProducesConstantFlowOfWater(x)))", "score": 0}
{"id": "eqasc_validation_1679", "prediction": "all x y.((Sponge(x) & Sponge(y)) -> (SpecializedWorkHorse(x) & ProducesConstantFlowOfWater(x,y)))", "score": 0}
{"id": "eqasc_validation_1679", "prediction": "all x y.((Sponge(x) & SpecializedWorkHorse(y)) -> ProducesConstantFlowOfWater(x,y))", "score": 0}
{"id": "eqasc_validation_1679", "prediction": "all x y.((Sponge(x) & Sponge(y)) -> (SpecializedWorkHorse(x,y) & ProducesConstantFlowOfWater(x,y)))", "score": 0}
{"id": "eqasc_validation_1679", "prediction": "all x.(Sponge(x) -> (HasSpecializedWorkHorses(x) & ProducesConstantFlowOfWater(x)))", "score": 0}
{"id": "eqasc_validation_1679", "prediction": "all x.(Sponge(x) -> (HasSpecializedWorkHorse(x) & ProducesConstantFlowOfWaterToSponge(x)))", "score": 0}
{"id": "eqasc_validation_1679", "prediction": "all x.(Sponge(x) -> (SpecializedWorkHorse(x) & ProducesConstantFlowOfWaterToSponge(x)))", "score": 0}
{"id": "eqasc_validation_1679", "prediction": "all x y.((Sponge(x) & SpecializedWorkHorse(y)) -> ProducesConstantFlowOfWaterTo(x,y))", "score": 0}
{"id": "eqasc_validation_1679", "prediction": "all x y z.((Sponge(x) & SpecializedWorkHorse(y) & Sponge(z)) -> ProducesConstantFlowOfWater(x,y,z))", "score": 0}
{"id": "eqasc_validation_1679", "prediction": "all x y.((Sponge(x) & SpecializedWorkHorse(y)) -> ProducesConstantFlowOfWater(y,x))", "score": 0}
{"id": "eqasc_validation_1679", "prediction": "all x y z.((Sponge(x) & SpecializedWorkHorse(y) & Sponge(z)) -> ProducesConstantFlowOfWater(y,z))", "score": 0}
{"id": "eqasc_validation_1679", "prediction": "all x.(Sponge(x) -> (SpecializedWorkHorse(x) & ProducesConstantWaterFlow(x)))", "score": 0}
{"id": "eqasc_validation_1679", "prediction": "all x y.((Sponge(x) & SpecializedWorkHorse(y)) -> ProducesConstantFlowOfWaterTo(y,x))", "score": 0}
{"id": "eqasc_validation_1679", "prediction": "all x y.((Sponge(x) & SpecializedWorkHorse(y) & ProducesConstantFlowOfWater(x,y)) -> Sponge(x))", "score": 0}
{"id": "eqasc_validation_1680", "prediction": "all x y.((Medicine(x) & Person(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 3}
{"id": "eqasc_validation_1680", "prediction": "all x y z.((Medicine(x) & Person(y) & Sick(z)) -> UsedForCuring(x,y,z))", "score": 3}
{"id": "eqasc_validation_1680", "prediction": "all x y.((Medicine(x) & Person(y) & Sick(y)) -> Cures(x,y))", "score": 3}
{"id": "eqasc_validation_1680", "prediction": "all x y z.((Medicine(x) & Person(y) & Sick(z) & UsedForCuring(x,y,z)) -> UsedForCuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1680", "prediction": "all x y.((Medicine(x) & Person(y) & Sick(y)) -> UsedForCurring(x,y))", "score": 2}
{"id": "eqasc_validation_1680", "prediction": "all x y.((Medicine(x) & Patient(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 2}
{"id": "eqasc_validation_1680", "prediction": "all x y.((Medicine(x) & People(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 3}
{"id": "eqasc_validation_1680", "prediction": "all x y.((Medicine(x) & Person(y) & Sick(y)) -> Curing(x,y))", "score": 3}
{"id": "eqasc_validation_1680", "prediction": "all x y.((Medicine(x) & Person(y) & Sick(y) & UsedForCuring(x,y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1680", "prediction": "all x y.((Medicine(x) & Person(y) & Sick(y)) -> UsedForCuringWhenSick(x,y))", "score": 2}
{"id": "eqasc_validation_1680", "prediction": "all x y.((Medicine(x) & Person(y) & Sick(y)) -> Cure(x,y))", "score": 0}
{"id": "eqasc_validation_1680", "prediction": "all x y z.((Medicine(x) & Person(y) & Sick(z) & UsedForCuring(x,y,z)) -> Curing(x,y,z))", "score": 0}
{"id": "eqasc_validation_1680", "prediction": "all x y z.((Medicine(x) & Person(y) & Sick(z) & UsedForCuring(x,y)) -> UsedForCuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1680", "prediction": "all x y.((Doctor(x) & Person(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1680", "prediction": "all x y.((Medicine(x) & Person(y) & Sick(y)) -> UsedForCuringWhen(x,y))", "score": 0}
{"id": "eqasc_validation_1681", "prediction": "all x.(Herb(x) -> (Medicine(x) & Aid(x)))", "score": 8}
{"id": "eqasc_validation_1681", "prediction": "all x.(Herb(x) -> (Medicine(x) | Aid(x)))", "score": 0}
{"id": "eqasc_validation_1681", "prediction": "all x.(Herb(x) -> (Medicine(x) & Aids(x)))", "score": 8}
{"id": "eqasc_validation_1681", "prediction": "all x.(Herb(x) -> (Medication(x) & Aid(x)))", "score": 0}
{"id": "eqasc_validation_1681", "prediction": "all x.(Herb(x) -> (Medication(x) | Aid(x)))", "score": 0}
{"id": "eqasc_validation_1681", "prediction": "all x y.((Herb(x) & Medicine(y)) -> Aid(x,y))", "score": 0}
{"id": "eqasc_validation_1681", "prediction": "all x.(Herb(x) -> (Medicine(x) | Aids(x)))", "score": 0}
{"id": "eqasc_validation_1681", "prediction": "all x y.((Herb(x) & Medicine(y)) -> Aid(x))", "score": 0}
{"id": "eqasc_validation_1681", "prediction": "all x.(Herb(x) -> (Medium(x) & Aid(x)))", "score": 0}
{"id": "eqasc_validation_1681", "prediction": "all x y.((Herb(x) & Medicine(y) & Aid(y)) -> (Medicine(x,y) & Aid(x,y)))", "score": 0}
{"id": "eqasc_validation_1681", "prediction": "all x y.((Herb(x) & Medicine(y) & Aid(y)) -> (Medicine(x) & Aid(x)))", "score": 0}
{"id": "eqasc_validation_1681", "prediction": "all x y.((Herb(x) & Medicine(y) & Aid(y)) -> (Medicine(x,y) | Aid(x,y)))", "score": 0}
{"id": "eqasc_validation_1681", "prediction": "all x y.((Herb(x) & Medicine(y)) -> Aids(x,y))", "score": 0}
{"id": "eqasc_validation_1682", "prediction": "all x y.((Herb(x) & Person(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 2}
{"id": "eqasc_validation_1682", "prediction": "all x y z.((Herb(x) & Person(y) & Sick(z)) -> UsedForCuring(x,y,z))", "score": 2}
{"id": "eqasc_validation_1682", "prediction": "all x y.((Herb(x) & People(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 2}
{"id": "eqasc_validation_1682", "prediction": "all x y.((Herb(x) & Person(y) & Sick(y)) -> UsedForCurring(x,y))", "score": 2}
{"id": "eqasc_validation_1682", "prediction": "all x y.((Herb(x) & Patient(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 2}
{"id": "eqasc_validation_1682", "prediction": "all x y.((Herb(x) & Person(y) & Sick(y)) -> UsedForCuringWhenSick(x,y))", "score": 2}
{"id": "eqasc_validation_1682", "prediction": "all x y.((Herb(x) & Person(y) & Sick(y)) -> Cures(x,y))", "score": 2}
{"id": "eqasc_validation_1682", "prediction": "all x y z.((Herb(x) & Person(y) & Sick(z) & UsedForCuring(x,y,z)) -> UsedForCuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1682", "prediction": "all x y.((Herb(x) & Person(y) & Sick(y)) -> CuredFor(x,y))", "score": 0}
{"id": "eqasc_validation_1682", "prediction": "all x y.((Herb(x) & Person(y) & Sick(y)) -> Curing(x,y))", "score": 2}
{"id": "eqasc_validation_1682", "prediction": "all x y z.((Herb(x) & Person(y) & Sick(z) & UsesForCuring(x,y,z)) -> UsedForCuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1682", "prediction": "all x y z.((Herb(x) & Person(y) & Sick(z)) -> Cures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1682", "prediction": "all x y.((Herb(x) & Sick(y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1682", "prediction": "all x y z.((Herb(x) & Person(y) & Sick(z)) -> UsedForCurring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1682", "prediction": "all x y.((Herb(x) & Person(y) & Sick(y)) -> Cured(x,y))", "score": 0}
{"id": "eqasc_validation_1682", "prediction": "all x y z.((Herb(x) & Person(y) & Sick(z)) -> UsedForCuringWhenSick(x,y,z))", "score": 0}
{"id": "eqasc_validation_1683", "prediction": "all x.(Drug(x) -> SmallMedicine(x))", "score": 0}
{"id": "eqasc_validation_1683", "prediction": "all x.(Drug(x) -> SmallMedium(x))", "score": 0}
{"id": "eqasc_validation_1683", "prediction": "all x.(Doctor(x) -> SmallMedicine(x))", "score": 0}
{"id": "eqasc_validation_1683", "prediction": "all x.(Drogen(x) -> SmallMedicine(x))", "score": 0}
{"id": "eqasc_validation_1683", "prediction": "all x.(Medicine(x) -> Small(x))", "score": 0}
{"id": "eqasc_validation_1683", "prediction": "all x y.((Drug(x) & SmallMedicine(y)) -> Is(x,y))", "score": 0}
{"id": "eqasc_validation_1683", "prediction": "all x y.((Drug(x) & SmallMedicine(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1683", "prediction": "all x.((Drug(x) & SmallMedicine(x)) -> Drug(x))", "score": 0}
{"id": "eqasc_validation_1683", "prediction": "all x.(Doping(x) -> SmallMedicine(x))", "score": 0}
{"id": "eqasc_validation_1683", "prediction": "all x.(Dope(x) -> SmallMedicine(x))", "score": 0}
{"id": "eqasc_validation_1683", "prediction": "all x y.((Drug(x) & SmallMedicine(y)) -> SmallMedicine(x))", "score": 0}
{"id": "eqasc_validation_1683", "prediction": "all x.(Drug(x) -> SmallMedication(x))", "score": 0}
{"id": "eqasc_validation_1683", "prediction": "all x y.((Drug(x) & SmallMedicine(y)) -> AvailableIn(x,y))", "score": 0}
{"id": "eqasc_validation_1683", "prediction": "all x.(Dopamine(x) -> SmallMedicine(x))", "score": 0}
{"id": "eqasc_validation_1683", "prediction": "all x y.((Drug(x) & SmallMedicine(y)) -> Drug(x))", "score": 0}
{"id": "eqasc_validation_1684", "prediction": "all x y.((Drug(x) & Person(y) & Sick(y)) -> CanCure(x,y))", "score": 0}
{"id": "eqasc_validation_1684", "prediction": "all x y z.((Drug(x) & Person(y) & Sick(z)) -> CanCure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1684", "prediction": "all x y.((Drug(x) & Person(y) & Sick(y)) -> CanCures(x,y))", "score": 0}
{"id": "eqasc_validation_1684", "prediction": "all x y.((Drug(x) & Person(y) & Sick(y)) -> Cures(x,y))", "score": 0}
{"id": "eqasc_validation_1684", "prediction": "all x y z.((Drug(x) & Person(y) & Sick(z) & Cures(x,y,z)) -> CanCure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1684", "prediction": "all x y z.((Drug(x) & Person(y) & Sick(z) & CanCure(x,y,z)) -> CanCure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1684", "prediction": "all x y.((Drug(x) & Person(y) & Sick(y) & CanCure(x,y)) -> CanCure(x,y))", "score": 0}
{"id": "eqasc_validation_1684", "prediction": "all x y.((Drug(x) & Person(y) & Sick(y)) -> CanCureWhenSick(x,y))", "score": 0}
{"id": "eqasc_validation_1684", "prediction": "all x y z.((Drug(x) & Person(y) & Sick(z) & Cures(x,y)) -> CanCure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1684", "prediction": "all x y.((Doctor(x) & Person(y) & Sick(y)) -> CanCure(x,y))", "score": 0}
{"id": "eqasc_validation_1684", "prediction": "all x y z.((Drug(x) & Person(y) & Sick(z) & Cures(x,y,z)) -> CanCure(x,y))", "score": 0}
{"id": "eqasc_validation_1684", "prediction": "all x y.((Drug(x) & Person(y) & Sick(y,x)) -> CanCure(x,y))", "score": 0}
{"id": "eqasc_validation_1684", "prediction": "all x y z.((Drug(x) & Person(y) & Sick(z) & CanCure(x,y)) -> CanCure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1684", "prediction": "all x y z.((Drug(x) & Person(y) & Sick(z) & CanCure(x,y,z)) -> CanCure(x,y))", "score": 0}
{"id": "eqasc_validation_1684", "prediction": "all x y.((Drug(x) & Patient(y) & Sick(y)) -> CanCure(x,y))", "score": 0}
{"id": "eqasc_validation_1684", "prediction": "all x y.((Drug(x) & People(y) & Sick(y)) -> CanCure(x,y))", "score": 0}
{"id": "eqasc_validation_1685", "prediction": "all x.((Patient(x) & LooksSick(x)) -> Sick(x))", "score": 0}
{"id": "eqasc_validation_1685", "prediction": "all x.(LooksSick(x) -> Sick(x))", "score": 0}
{"id": "eqasc_validation_1685", "prediction": "all x.(LooksSick(x) -> PatientSick(x))", "score": 0}
{"id": "eqasc_validation_1685", "prediction": "all x.(Sick(x) -> Patient(x))", "score": 0}
{"id": "eqasc_validation_1685", "prediction": "all x.((Patient(x) & LooksSick(x)) -> IsSick(x))", "score": 0}
{"id": "eqasc_validation_1685", "prediction": "all x y.((Patient(x) & LooksSick(x)) -> Sick(x))", "score": 0}
{"id": "eqasc_validation_1685", "prediction": "all x y.((Patient(x) & LooksSick(x)) -> Sick(y))", "score": 0}
{"id": "eqasc_validation_1685", "prediction": "all x.((Patient(x) & LooksSick(x)) -> PatientSick(x))", "score": 0}
{"id": "eqasc_validation_1685", "prediction": "all x.(LooksSick(x) -> PatientIsSick(x))", "score": 0}
{"id": "eqasc_validation_1685", "prediction": "all x.(LooksSick(x) -> IsSick(x))", "score": 0}
{"id": "eqasc_validation_1685", "prediction": "all x y.((Patient(x) & LooksSick(x) & Patient(y)) -> Sick(y))", "score": 0}
{"id": "eqasc_validation_1685", "prediction": "all x.((Patient(x) & LooksSick(x)) -> -Patient(x))", "score": 0}
{"id": "eqasc_validation_1685", "prediction": "all x.((Patient(x) & Sick(x)) -> Sick(x))", "score": 0}
{"id": "eqasc_validation_1685", "prediction": "all x.((Patient(x) & LooksSick(x)) -> -Sick(x))", "score": 0}
{"id": "eqasc_validation_1685", "prediction": "all x.((Patient(x) & LooksSick(x)) -> Sail(x))", "score": 0}
{"id": "eqasc_validation_1685", "prediction": "all x.(SeesSick(x) -> Sick(x))", "score": 0}
{"id": "eqasc_validation_1686", "prediction": "all x y.((Medicine(x) & Patient(y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1686", "prediction": "all x.(Medicine(x) -> UsedForCuringPatients(x))", "score": 0}
{"id": "eqasc_validation_1686", "prediction": "all x y.((Medicine(x) & Patient(y)) -> Cure(x,y))", "score": 0}
{"id": "eqasc_validation_1686", "prediction": "all x y z.((Medicine(x) & Patient(y) & Patient(z)) -> UsedForCuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1686", "prediction": "all x y.((Medicine(x) & Patient(y)) -> Cures(x,y))", "score": 0}
{"id": "eqasc_validation_1686", "prediction": "all x.(Medicine(x) -> CuresPatients(x))", "score": 0}
{"id": "eqasc_validation_1686", "prediction": "all x y.((Medicine(x) & Patient(y)) -> Cured(x,y))", "score": 0}
{"id": "eqasc_validation_1686", "prediction": "all x y.((Medicine(x) & Patient(y)) -> UsedForCurring(x,y))", "score": 0}
{"id": "eqasc_validation_1686", "prediction": "all x y z.((Medicine(x) & Patient(y) & Patient(z)) -> Cure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1686", "prediction": "all x y.((Medicine(x) & Patient(y)) -> Curing(x,y))", "score": 0}
{"id": "eqasc_validation_1686", "prediction": "all x y z.((Medicine(x) & Patient(y) & Patient(z)) -> Curing(x,y,z))", "score": 0}
{"id": "eqasc_validation_1686", "prediction": "all x y z.((Medicine(x) & Patient(y) & Patient(z)) -> Cures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1686", "prediction": "all x y z.((Medicine(x) & Patient(y) & Patient(z)) -> UsedForCurring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1686", "prediction": "all x y z.((Medicine(x) & Patient(y) & Patient(z)) -> Cured(x,y,z))", "score": 0}
{"id": "eqasc_validation_1686", "prediction": "all x.(Medicine(x) -> CuringPatients(x))", "score": 0}
{"id": "eqasc_validation_1686", "prediction": "all x.(Medicine(x) -> UsedForCurringPatients(x))", "score": 0}
{"id": "eqasc_validation_1687", "prediction": "all x.((Medicine(x) & FormOfPill(x)) -> SwallowPillWhole(x))", "score": 0}
{"id": "eqasc_validation_1687", "prediction": "all x.((Medicine(x) & InFormOfPill(x)) -> SwallowPillWhole(x))", "score": 0}
{"id": "eqasc_validation_1687", "prediction": "all x.((Medicine(x) & Pill(x)) -> SwallowWhole(x))", "score": 0}
{"id": "eqasc_validation_1687", "prediction": "all x.((Medicine(x) & Pill(x)) -> SwallowPillWhole(x))", "score": 0}
{"id": "eqasc_validation_1687", "prediction": "all x.((Medicine(x) & FormOfPill(x)) -> SwallowPillWhipped(x))", "score": 0}
{"id": "eqasc_validation_1687", "prediction": "all x.((Medicine(x) & InPill(x)) -> SwallowPillWhole(x))", "score": 0}
{"id": "eqasc_validation_1687", "prediction": "all x.((Medicine(x) & InFormOfPill(x)) -> SwallowPillWhipped(x))", "score": 0}
{"id": "eqasc_validation_1687", "prediction": "all x.((Medication(x) & FormOfPill(x)) -> SwallowPillWhole(x))", "score": 0}
{"id": "eqasc_validation_1687", "prediction": "all x.((Medication(x) & InFormOfPill(x)) -> SwallowPillWhole(x))", "score": 0}
{"id": "eqasc_validation_1687", "prediction": "all x.((Medicine(x) & FormOfPill(x)) -> SwallowPillWheel(x))", "score": 0}
{"id": "eqasc_validation_1687", "prediction": "all x.((Medicine(x) & Pill(x)) -> SwallowsWhole(x))", "score": 0}
{"id": "eqasc_validation_1687", "prediction": "all x.((Medicine(x) & InFormOfPill(x)) -> SwallowPillWheel(x))", "score": 0}
{"id": "eqasc_validation_1687", "prediction": "all x.((Medicine(x) & FormOfPill(x)) -> SwallowPillWhich(x))", "score": 0}
{"id": "eqasc_validation_1687", "prediction": "all x.((Medicine(x) & InFormOfPill(x)) -> SwallowPillWhich(x))", "score": 0}
{"id": "eqasc_validation_1687", "prediction": "all x.((Medication(x) & Pill(x)) -> SwallowWhole(x))", "score": 0}
{"id": "eqasc_validation_1687", "prediction": "all x.((Medicine(x) & FormOfPill(x)) -> SwallowWhole(x))", "score": 0}
{"id": "eqasc_validation_1688", "prediction": "all x y.((Pill(x) & Person(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1688", "prediction": "all x y.((Pill(x) & People(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1688", "prediction": "all x.((Sick(x) & SwallowingPillsWhole(x)) -> UsedForCuringPeople(x))", "score": 0}
{"id": "eqasc_validation_1688", "prediction": "all x y.((Pill(x) & Sick(y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1688", "prediction": "all x.((Sick(x) & SwallowingPillsWhole(x)) -> UsedForCuring(x))", "score": 0}
{"id": "eqasc_validation_1688", "prediction": "all x y.((Pill(x) & Person(y) & Sick(y)) -> UsesForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1688", "prediction": "all x.((Pill(x) & Sick(x)) -> UsedForCuringPeople(x))", "score": 0}
{"id": "eqasc_validation_1688", "prediction": "all x y z.((Pill(x) & Person(y) & Sick(z)) -> UsedForCuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1688", "prediction": "all x y.((Pill(x) & Sick(y)) -> UsedForCuringPeople(x,y))", "score": 0}
{"id": "eqasc_validation_1688", "prediction": "all x.((Pill(x) & Sick(x)) -> UsedForCuring(x))", "score": 0}
{"id": "eqasc_validation_1688", "prediction": "all x y.((Pill(x) & Person(y) & Sick(y)) -> UsedForCuringWhenSick(x,y))", "score": 0}
{"id": "eqasc_validation_1688", "prediction": "all x.((Sick(x) & SwallowsPillsWhole(x)) -> UsedForCuringPeople(x))", "score": 0}
{"id": "eqasc_validation_1688", "prediction": "all x y.((Pill(x) & Person(y) & Sick(y)) -> UsedForCurring(x,y))", "score": 0}
{"id": "eqasc_validation_1688", "prediction": "all x.((Sick(x) & SwallowingPillsWhole(x)) -> UsedForCuringPerson(x))", "score": 0}
{"id": "eqasc_validation_1689", "prediction": "all x y z.((PrescriptionMedication(x) & NonPrescriptionMedication(y) & Supplies(z)) -> OrderedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1689", "prediction": "all x y z.((Prescription(x) & NonPrescription(x) & Medicine(y) & Supplies(z)) -> OrderedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1689", "prediction": "all x y z.((Prescription(x) & NonPrescription(y) & Medicine(z) & Supplies(z)) -> OrderedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1689", "prediction": "all x y.((Prescription(x) & NonPrescription(x)) -> OrderedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1689", "prediction": "all x y.((PrescriptionMedication(x) & NonPrescriptionMedication(y) & OrderedBy(x,y)) -> Physician(x))", "score": 0}
{"id": "eqasc_validation_1689", "prediction": "all x y z.((PrescriptionMedication(x) & NonPrescriptionMedication(y) & Supply(z)) -> OrderedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1689", "prediction": "all x y.((PrescriptionMedication(x) & NonPrescriptionMedication(y)) -> OrderedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1689", "prediction": "all x y.((Medicine(x) & Physician(y) & OrderedBy(x,y)) -> (Prescription(x) | NonPrescription(x)))", "score": 0}
{"id": "eqasc_validation_1689", "prediction": "all x y z.((Prescription(x) & NonPrescription(x) & Medicine(y) & Supplies(z) & OrderedBy(x,y,z)) -> Physician(x))", "score": 0}
{"id": "eqasc_validation_1689", "prediction": "all x y.((Prescription(x) & NonPrescription(x)) -> OrderedBy(y,x))", "score": 0}
{"id": "eqasc_validation_1689", "prediction": "all x y z.((Prescription(x) & NonPrescription(x) & Medicine(y) & Supply(z)) -> OrderedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1689", "prediction": "all x y z.((Prescription(x) & NonPrescription(y) & Medicine(z) & Supply(z)) -> OrderedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1689", "prediction": "all x y z.((PrescriptionMedication(x) & NonPrescriptionMedication(y) & Supplies(z) & OrderedBy(x,y,z)) -> Physician(x))", "score": 0}
{"id": "eqasc_validation_1689", "prediction": "all x y z.((Prescription(x) & NonPrescription(x) & Medicine(y) & Supplies(z) & OrderedBy(y,x)) -> Physician(x))", "score": 0}
{"id": "eqasc_validation_1689", "prediction": "all x y z.((Prescription(x) & NonPrescription(y) & Medicine(z) & Supplies(z) & OrderedBy(x,y,z)) -> Physician(x))", "score": 0}
{"id": "eqasc_validation_1689", "prediction": "all x y z.((Prescription(x) & NonPrescription(x) & Medicine(y) & Supplies(z)) -> OrderedBy(y,x))", "score": 0}
{"id": "eqasc_validation_1690", "prediction": "all x y.((Pharmacist(x) & Person(y) & Sick(y)) -> WritesPrescription(x,y))", "score": 0}
{"id": "eqasc_validation_1690", "prediction": "all x y.((Pharmacist(x) & Person(y) & Sick(y)) -> WritesPrescriptions(x,y))", "score": 0}
{"id": "eqasc_validation_1690", "prediction": "all x y.((PhD(x) & Person(y) & Sick(y)) -> WritesPrescription(x,y))", "score": 0}
{"id": "eqasc_validation_1690", "prediction": "all x y z.((Pharmacist(x) & Person(y) & Sick(z)) -> WritesPrescription(x,y,z))", "score": 0}
{"id": "eqasc_validation_1690", "prediction": "all x y.((Physician(x) & Person(y) & Sick(y)) -> WritesPrescription(x,y))", "score": 0}
{"id": "eqasc_validation_1690", "prediction": "all x.((Pharmacist(x) & PersonSick(x)) -> WritesPrescription(x))", "score": 0}
{"id": "eqasc_validation_1690", "prediction": "all x y.((Phlebotist(x) & Person(y) & Sick(y)) -> WritesPrescription(x,y))", "score": 0}
{"id": "eqasc_validation_1690", "prediction": "all x y.((Pharmacist(x) & Patient(y) & Sick(y)) -> WritesPrescription(x,y))", "score": 0}
{"id": "eqasc_validation_1690", "prediction": "all x y.((Doctor(x) & Person(y) & Sick(y)) -> WritesPrescription(x,y))", "score": 0}
{"id": "eqasc_validation_1690", "prediction": "all x y z.((Pharmacist(x) & Person(y) & Sick(z)) -> WritesPrescriptions(x,y,z))", "score": 0}
{"id": "eqasc_validation_1690", "prediction": "all x y.((PhD(x) & Person(y) & Sick(y)) -> WritesPrescriptions(x,y))", "score": 0}
{"id": "eqasc_validation_1690", "prediction": "all x y.((Physician(x) & Person(y) & Sick(y)) -> WritesPrescriptions(x,y))", "score": 0}
{"id": "eqasc_validation_1690", "prediction": "all x.((Pharmacist(x) & PersonSick(x)) -> WritesPrescriptions(x))", "score": 0}
{"id": "eqasc_validation_1690", "prediction": "all x y z.((Pharmacist(x) & Person(y) & Sick(z)) -> WritesPrescription(x,y))", "score": 0}
{"id": "eqasc_validation_1690", "prediction": "all x y.((Phlebotist(x) & Person(y) & Sick(y)) -> WritesPrescriptions(x,y))", "score": 0}
{"id": "eqasc_validation_1690", "prediction": "all x y z.((PhD(x) & Person(y) & Sick(z)) -> WritesPrescription(x,y,z))", "score": 0}
{"id": "eqasc_validation_1691", "prediction": "all x.(Person(x) -> (GetsSick(x) & GetsBetter(x)))", "score": 0}
{"id": "eqasc_validation_1691", "prediction": "all x.(People(x) -> (GetsSick(x) & GetsBetter(x)))", "score": 0}
{"id": "eqasc_validation_1691", "prediction": "(all x.(Person(x) -> GetsSick(x)) & all y.(Person(y) -> GetsBetter(y)))", "score": 0}
{"id": "eqasc_validation_1691", "prediction": "exists x.(Person(x) & GetsSick(x) & GetsBetter(x))", "score": 0}
{"id": "eqasc_validation_1691", "prediction": "all x.((Person(x) & Sick(x)) -> Better(x))", "score": 0}
{"id": "eqasc_validation_1691", "prediction": "all x y.((Person(x) & Person(y)) -> (GetsSick(x) & GetsBetter(y)))", "score": 0}
{"id": "eqasc_validation_1691", "prediction": "all x.(Person(x) -> (GivesSick(x) & GetsBetter(x)))", "score": 0}
{"id": "eqasc_validation_1691", "prediction": "(all x.(Person(x) -> Sick(x)) & all y.(Person(y) -> Better(y)))", "score": 0}
{"id": "eqasc_validation_1691", "prediction": "all x.(Person(x) -> (Sick(x) & Better(x)))", "score": 0}
{"id": "eqasc_validation_1691", "prediction": "all x.((Person(x) & GetsSick(x)) -> GetsBetter(x))", "score": 0}
{"id": "eqasc_validation_1691", "prediction": "(all x.(Person(x) -> GetsSick(x)) & all y.(Person(y) -> GetsBetter(y))))", "score": -1}
{"id": "eqasc_validation_1691", "prediction": "(all x.(Person(x) -> Sick(x)) & all y.(Person(y) -> Better(y))))", "score": -1}
{"id": "eqasc_validation_1691", "prediction": "all x.(Person(x) -> (GetsSick(x) & Better(x)))", "score": 0}
{"id": "eqasc_validation_1691", "prediction": "all x.((People(x) & Sick(x)) -> Better(x))", "score": 0}
{"id": "eqasc_validation_1691", "prediction": "exists x.(Person(x) & Sick(x) & Better(x))", "score": 0}
{"id": "eqasc_validation_1691", "prediction": "all x.(People(x) -> (Sick(x) & Better(x)))", "score": 0}
{"id": "eqasc_validation_1692", "prediction": "all x y.((Medicine(x) & Person(y)) -> UsedForBetter(x,y))", "score": 0}
{"id": "eqasc_validation_1692", "prediction": "all x y.((Medicine(x) & Person(y)) -> UsedForGettingBetter(x,y))", "score": 0}
{"id": "eqasc_validation_1692", "prediction": "all x y.((Medicine(x) & Person(y)) -> GetsBetter(x,y))", "score": 0}
{"id": "eqasc_validation_1692", "prediction": "all x.(Medicine(x) -> GetsPeopleBetter(x))", "score": 0}
{"id": "eqasc_validation_1692", "prediction": "all x y.((Medicine(x) & Patient(y)) -> UsedForBetter(x,y))", "score": 0}
{"id": "eqasc_validation_1692", "prediction": "all x.(Medicine(x) -> UsedForGettingPeopleBetter(x))", "score": 0}
{"id": "eqasc_validation_1692", "prediction": "all x.(Medicine(x) -> (UsedForGettingPeopleBetter(x)))", "score": 0}
{"id": "eqasc_validation_1692", "prediction": "all x y.((Medicine(x) & Patient(y)) -> UsedForGettingBetter(x,y))", "score": 0}
{"id": "eqasc_validation_1692", "prediction": "all x y.((Medicine(x) & Patient(y)) -> GetsBetter(x,y))", "score": 0}
{"id": "eqasc_validation_1692", "prediction": "all x y.((Medicine(x) & Person(y)) -> Improved(x,y))", "score": 0}
{"id": "eqasc_validation_1692", "prediction": "all x y.((Medicine(x) & People(y)) -> UsedForBetter(x,y))", "score": 0}
{"id": "eqasc_validation_1692", "prediction": "all x y.((Medicine(x) & Person(y)) -> GettingBetter(x,y))", "score": 0}
{"id": "eqasc_validation_1692", "prediction": "all x.(Medicine(x) -> (GetsPeopleBetter(x)))", "score": 0}
{"id": "eqasc_validation_1692", "prediction": "all x y.((Medicine(x) & Person(y)) -> UsedForBettering(x,y))", "score": 0}
{"id": "eqasc_validation_1692", "prediction": "all x y.((Medicine(x) & People(y)) -> UsedForGettingBetter(x,y))", "score": 0}
{"id": "eqasc_validation_1692", "prediction": "all x y.((Medicine(x) & Person(y)) -> UsedForGetsBetter(x,y))", "score": 0}
{"id": "eqasc_validation_1693", "prediction": "all x.((Child(x) & (Hungry(x) | Sick(x))) -> (NeedsFood(x) & NeedsMedication(x)))", "score": 0}
{"id": "eqasc_validation_1693", "prediction": "all x.((Child(x) & (Hungry(x) | Sick(x))) -> (NeedsFood(x) & NeedsMedicine(x)))", "score": 0}
{"id": "eqasc_validation_1693", "prediction": "all x.((Child(x) & (Hungry(x) | Sick(x))) -> NeededFoodAndMedicine(x))", "score": 0}
{"id": "eqasc_validation_1693", "prediction": "all x.((Child(x) & Hungry(x)) | Sick(x)) -> (NeedsFood(x) & NeedsMedication(x)))", "score": -1}
{"id": "eqasc_validation_1693", "prediction": "all x.((Child(x) & Hungry(x) | Sick(x)) -> (NeedsFood(x) & NeedsMedication(x)))", "score": 0}
{"id": "eqasc_validation_1693", "prediction": "all x.((Child(x) & Hungry(x)) | Sick(x)) -> (NeedsFood(x) & NeedsMedicine(x)))", "score": -1}
{"id": "eqasc_validation_1693", "prediction": "all x.((Child(x) & (Hungry(x) | Sick(x))) -> NeedsFoodAndMedicine(x))", "score": 0}
{"id": "eqasc_validation_1693", "prediction": "all x.((Child(x) & Hungry(x) & Sick(x)) -> (NeedsFood(x) & NeedsMedication(x)))", "score": 0}
{"id": "eqasc_validation_1693", "prediction": "all x.((Child(x) & Hungry(x) | Sick(x)) -> (NeedsFood(x) & NeedsMedicine(x)))", "score": 0}
{"id": "eqasc_validation_1693", "prediction": "all x.(Hungry(x) | Sick(x)) -> (NeedsFood(x) & NeedsMedication(x)))", "score": -1}
{"id": "eqasc_validation_1693", "prediction": "all x.((Child(x) & (Hungry(x) | Sick(x))) -> NeededFood(x) & NeededMedication(x))", "score": 0}
{"id": "eqasc_validation_1693", "prediction": "all x.((Child(x) & Hungry(x) & Sick(x)) -> (NeedsFood(x) & NeedsMedicine(x)))", "score": 0}
{"id": "eqasc_validation_1693", "prediction": "all x y.((Child(x) & (Hungry(x) | Sick(x))) -> (NeedsFood(x) & NeedsMedication(x)))", "score": 0}
{"id": "eqasc_validation_1693", "prediction": "all x.((Child(x) & (Hungry(x) | Sick(x))) -> NeededFoodAndMedication(x))", "score": 0}
{"id": "eqasc_validation_1693", "prediction": "all x.((Child(x) & (Hungry(x) | Sick(x))) -> (NeedsFood(x) | NeedsMedication(x)))", "score": 0}
{"id": "eqasc_validation_1693", "prediction": "all x.((Child(x) & (Hungry(x) | Sick(x))) -> (NeedFood(x) & NeedMedication(x)))", "score": 0}
{"id": "eqasc_validation_1694", "prediction": "all x.((Child(x) & Sick(x)) -> NeedsFood(x))", "score": 0}
{"id": "eqasc_validation_1694", "prediction": "all x.(SickChild(x) -> NeedsFood(x))", "score": 0}
{"id": "eqasc_validation_1694", "prediction": "all x y.((Child(x) & Sick(x)) -> NeedsFood(x,y))", "score": 0}
{"id": "eqasc_validation_1694", "prediction": "all x y.((SickChild(x) & Child(y)) -> NeedsFood(x,y))", "score": 0}
{"id": "eqasc_validation_1694", "prediction": "all x y.((Child(x) & Sick(y)) -> NeedsFood(x,y))", "score": 0}
{"id": "eqasc_validation_1694", "prediction": "all x y.((Child(x) & Sick(x) & NeedsFood(y)) -> NeedsFood(x,y))", "score": 0}
{"id": "eqasc_validation_1694", "prediction": "all x y.((Child(x) & Sick(x) & NeedsFood(x,y)) -> NeedsFood(x,y))", "score": 0}
{"id": "eqasc_validation_1694", "prediction": "all x y z.((SickChild(x) & Food(y) & Food(z)) -> Needs(x,y,z))", "score": 0}
{"id": "eqasc_validation_1694", "prediction": "all x.((SickChild(x) & NeedsFood(x)) -> NeedsFood(x))", "score": 0}
{"id": "eqasc_validation_1694", "prediction": "all x y.((SickChild(x) & NeedsFood(x,y)) -> NeedsFood(x,y))", "score": 0}
{"id": "eqasc_validation_1694", "prediction": "all x y.((Child(x) & Sick(x)) -> NeedsFood(x))", "score": 0}
{"id": "eqasc_validation_1694", "prediction": "all x y.((SickChild(x) & NeedsFood(y)) -> NeedsFood(x,y))", "score": 0}
{"id": "eqasc_validation_1694", "prediction": "all x y.((SickChild(x) & Sick(y)) -> NeedsFood(x,y))", "score": 0}
{"id": "eqasc_validation_1694", "prediction": "all x y.((Child(x) & Sick(x) & NeedsFood(x,y)) -> NeedsFood(y))", "score": 0}
{"id": "eqasc_validation_1694", "prediction": "all x.((Child(x) & NeedsFood(x)) -> Sick(x))", "score": 0}
{"id": "eqasc_validation_1694", "prediction": "all x y z.((SickChild(x) & Food(y) & Food(z)) -> NeedsFood(x,y,z))", "score": 0}
{"id": "eqasc_validation_1695", "prediction": "all x.(BotanicalMedicine(x) -> (ManyPlantSubstances(x) & PowerfulMedication(x)))", "score": 0}
{"id": "eqasc_validation_1695", "prediction": "all x.(BotanicalMedicine(x) -> (ManyPlantSubstances(x) & PowerfulMedicine(x)))", "score": 0}
{"id": "eqasc_validation_1695", "prediction": "all x.((PlantSubstance(x) & BotanicalMedicine(x)) -> PowerfulMedicine(x))", "score": 0}
{"id": "eqasc_validation_1695", "prediction": "all x.(BotanicalMedicine(x) -> (ManyPlantSubstances(x) & PowerfulMedications(x)))", "score": 0}
{"id": "eqasc_validation_1695", "prediction": "all x.(BotanicalMedicine(x) -> PowerfulMedicine(x))", "score": 0}
{"id": "eqasc_validation_1695", "prediction": "all x.(BotanicalMedicine(x) -> (PlantSubstance(x) & PowerfulMedication(x)))", "score": 0}
{"id": "eqasc_validation_1695", "prediction": "all x.(BotanicalMedicine(x) -> (MostPlantSubstances(x) & PowerfulMedication(x)))", "score": 0}
{"id": "eqasc_validation_1695", "prediction": "all x.((PlantSubstance(x) & BotanicalMedicine(x)) -> PowerfulMedication(x))", "score": 0}
{"id": "eqasc_validation_1695", "prediction": "all x y.((PlantSubstance(x) & PlantSubstance(y)) -> PowerfulMedication(x,y))", "score": 0}
{"id": "eqasc_validation_1695", "prediction": "all x.(BotanicalMedicine(x) -> (PlantSubstance(x) & PowerfulMedicine(x)))", "score": 0}
{"id": "eqasc_validation_1695", "prediction": "all x y.((PlantSubstance(x) & PlantSubstance(y)) -> PowerfulMedication(x))", "score": 0}
{"id": "eqasc_validation_1695", "prediction": "all x.((PlantSubstance(x) & BotanicalMedication(x)) -> PowerfulMedication(x))", "score": 0}
{"id": "eqasc_validation_1695", "prediction": "all x y.((PlantSubstance(x) & PlantSubstance(y)) -> PowerfulMedicine(x))", "score": 0}
{"id": "eqasc_validation_1695", "prediction": "all x.(BotanicalMedicine(x) -> (PowerfulMedicine(x) | PowerfulMedicine(x)))", "score": 0}
{"id": "eqasc_validation_1696", "prediction": "all x y.((PlantSubstance(x) & Person(y) & Sick(y)) -> PowerfulCures(x,y))", "score": 0}
{"id": "eqasc_validation_1696", "prediction": "all x y.((PlantSubstance(x) & Person(y) & Sick(y)) -> PowerfulCuresFor(x,y))", "score": 0}
{"id": "eqasc_validation_1696", "prediction": "all x y.((PlantSubstance(x) & Person(y) & Sick(y)) -> PowerfulCure(x,y))", "score": 0}
{"id": "eqasc_validation_1696", "prediction": "all x y z.((PlantSubstance(x) & Person(y) & Sick(z)) -> PowerfulCuresFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1696", "prediction": "all x y z.((PlantSubstance(x) & Person(y) & Sick(z)) -> PowerfulCures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1696", "prediction": "all x y z.((PlantSubstance(x) & Person(y) & Sick(z)) -> PowerfulCure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1696", "prediction": "all x y.((PlantSubstance(x) & Person(y) & Sick(y)) -> PowerfulCureFor(x,y))", "score": 0}
{"id": "eqasc_validation_1696", "prediction": "all x y.((PlantSubstance(x) & Person(y) & Sick(y)) -> (PowerfulCures(x,y)))", "score": 0}
{"id": "eqasc_validation_1696", "prediction": "all x y z.((PlantSubstance(x) & Person(y) & Sick(z)) -> (PowerfulCures(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1696", "prediction": "all x.((PlantSubstance(x) & Person(x) & Sick(x)) -> PowerfulCures(x))", "score": 0}
{"id": "eqasc_validation_1696", "prediction": "all x y z.((PlantSubstance(x) & Person(y) & Sick(z) & Sick(y)) -> PowerfulCures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1696", "prediction": "all x y z.((PlantSubstance(x) & Person(y) & Sick(z) & Sick(y)) -> PowerfulCuresFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1696", "prediction": "all x y.((PlantSubstance(x) & People(y) & Sick(y)) -> PowerfulCures(x,y))", "score": 0}
{"id": "eqasc_validation_1696", "prediction": "all x y z.((PlantSubstance(x) & Person(y) & Sick(z)) -> (PowerfulCuresFor(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1696", "prediction": "all x y z.((PlantSubstance(x) & Person(y) & Sick(z)) -> (PowerfulCure(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1696", "prediction": "all x y z.((PlantSubstance(x) & Person(y) & Person(z) & Sick(y)) -> PowerfulCuresFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1697", "prediction": "all x.(Baby(x) -> MOSTInquisitiveOfPeople(x))", "score": 0}
{"id": "eqasc_validation_1697", "prediction": "all x y.((Baby(x) & Person(y)) -> MOSTInquisitive(x,y))", "score": 0}
{"id": "eqasc_validation_1697", "prediction": "ALL x.(Baby(x) -> MOSTInquisitiveOfPeople(x))", "score": -1}
{"id": "eqasc_validation_1697", "prediction": "all x.(Baby(x) -> (MOSTInquisitiveOfPeople(x)))", "score": 0}
{"id": "eqasc_validation_1697", "prediction": "all x.(Baby(x) -> MOSTInquisitive(x))", "score": 0}
{"id": "eqasc_validation_1697", "prediction": "all x.(Baby(x) -> MostInquisitiveOfPeople(x))", "score": 0}
{"id": "eqasc_validation_1697", "prediction": "all x.(Baby(x) -> InquisitiveOfPeople(x))", "score": 0}
{"id": "eqasc_validation_1697", "prediction": "all x y.((Baby(x) & Person(y)) -> MostInquisitive(x,y))", "score": 0}
{"id": "eqasc_validation_1697", "prediction": "all x.(Babie(x) -> MOSTInquisitiveOfPeople(x))", "score": 0}
{"id": "eqasc_validation_1697", "prediction": "all x.(Baby(x) -> TheMOSTInquisitiveOfPeople(x))", "score": 0}
{"id": "eqasc_validation_1697", "prediction": "all x.(Baby(x) -> MOSTInquisitiveOfPerson(x))", "score": 0}
{"id": "eqasc_validation_1697", "prediction": "all x.(Baby(x) -> (MOSTInquisitive(x) & Person(x)))", "score": 4}
{"id": "eqasc_validation_1697", "prediction": "all x.(Baby(x) -> (MOSTInquisitive(x) & People(x)))", "score": 1}
{"id": "eqasc_validation_1697", "prediction": "all x y.((Baby(x) & Person(y)) -> MOSTInquisitiveOf(x,y))", "score": 0}
{"id": "eqasc_validation_1698", "prediction": "all x y.((Medicine(x) & Baby(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 2}
{"id": "eqasc_validation_1698", "prediction": "all x y.((Medicine(x) & Baby(y) & Sick(y)) -> CuredBy(x,y))", "score": 0}
{"id": "eqasc_validation_1698", "prediction": "all x y.((Medicine(x) & Baby(y) & Sick(y)) -> Cures(x,y))", "score": 1}
{"id": "eqasc_validation_1698", "prediction": "all x y z.((Medicine(x) & Baby(y) & Sick(z)) -> UsedForCuring(x,y,z))", "score": 1}
{"id": "eqasc_validation_1698", "prediction": "all x y.((Medicine(x) & Babies(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1698", "prediction": "all x y.((Medicine(x) & Baby(y) & Sick(y)) -> Curing(x,y))", "score": 1}
{"id": "eqasc_validation_1698", "prediction": "all x y z.((Medicine(x) & Baby(y) & Sick(z)) -> Curing(x,y,z))", "score": 0}
{"id": "eqasc_validation_1698", "prediction": "all x y.((Medicine(x) & Baby(y) & Sick(y)) -> CuredFor(x,y))", "score": 0}
{"id": "eqasc_validation_1698", "prediction": "all x y z.((Medicine(x) & Baby(y) & Sick(z)) -> CuredBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1699", "prediction": "all x.(Antibiotic(x) -> (PowerfulMedicine(x) & UsedToTreatBacterialInfections(x)))", "score": 0}
{"id": "eqasc_validation_1699", "prediction": "all x.(Antibiotic(x) -> (PowerfulMedicine(x) & TreatsBacterialInfections(x)))", "score": 0}
{"id": "eqasc_validation_1699", "prediction": "all x y.((Antibiotic(x) & BacterialInfection(y)) -> Treats(x,y))", "score": 0}
{"id": "eqasc_validation_1699", "prediction": "all x.(Antibiotic(x) -> (PowerfulMedicine(x) & UsedToTreatBacteria(x)))", "score": 0}
{"id": "eqasc_validation_1699", "prediction": "all x.(Antibiotic(x) -> (PowerfulMedication(x) & UsedToTreatBacterialInfections(x)))", "score": 0}
{"id": "eqasc_validation_1699", "prediction": "all x.(Antibiotic(x) -> (PowerfulMedication(x) & TreatsBacterialInfections(x)))", "score": 0}
{"id": "eqasc_validation_1699", "prediction": "all x y.((Antibiotic(x) & BacterialInfection(y)) -> UsedToTreat(x,y))", "score": 0}
{"id": "eqasc_validation_1699", "prediction": "all x.(Antibiotic(x) -> (PowerfulMedicine(x) & TreatsBacteria(x)))", "score": 0}
{"id": "eqasc_validation_1699", "prediction": "all x.(Antibiotic(x) -> (PositiveMedication(x) & TreatsBacterialInfections(x)))", "score": 0}
{"id": "eqasc_validation_1699", "prediction": "all x.(Antibiotic(x) -> (PositiveMedicine(x) & UsedToTreatBacterialInfections(x)))", "score": 0}
{"id": "eqasc_validation_1699", "prediction": "all x.(Antibiotic(x) -> (PositiveMedication(x) & UsedToTreatBacterialInfections(x)))", "score": 0}
{"id": "eqasc_validation_1699", "prediction": "all x y.((Antibiotic(x) & BacterialInfection(y)) -> (PowerfulMedicine(x) & UsedToTreat(x,y)))", "score": 0}
{"id": "eqasc_validation_1699", "prediction": "all x.(Antibiotic(x) -> (PowerfulMedication(x) & UsedToTreatBacteria(x)))", "score": 0}
{"id": "eqasc_validation_1699", "prediction": "all x.(Antibiotic(x) -> (PowerfulMedicine(x) & UsedToTreatBacteriaInfections(x)))", "score": 0}
{"id": "eqasc_validation_1699", "prediction": "all x.(Antibiotic(x) -> (PowerfulMedicine(x) & TreatsBacteriaInfections(x)))", "score": 0}
{"id": "eqasc_validation_1699", "prediction": "all x.(Antibiotic(x) -> (PowerfulMedicine(x) & TreatBacterialInfections(x)))", "score": 0}
{"id": "eqasc_validation_1700", "prediction": "all x y z.((Antibiotic(x) & Person(y) & BacterialInfection(z)) -> CanCure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1700", "prediction": "all x y.((Antibiotic(x) & Person(y) & SickWithBacterialInfections(y)) -> CanCure(x,y))", "score": 0}
{"id": "eqasc_validation_1700", "prediction": "all x y.((Antibiotic(x) & Person(y)) -> CanCureBacterialInfections(x,y))", "score": 0}
{"id": "eqasc_validation_1700", "prediction": "all x y z.((Antibiotic(x) & Sick(y) & BacterialInfection(z)) -> CanCure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1700", "prediction": "all x y.((Antibiotic(x) & Person(y) & SickWithBacteriaInfections(y)) -> CanCure(x,y))", "score": 0}
{"id": "eqasc_validation_1700", "prediction": "all x y.((Antibiotic(x) & Person(y) & SickWithBacteria(y)) -> CanCure(x,y))", "score": 0}
{"id": "eqasc_validation_1700", "prediction": "all x y z.((Antibiotic(x) & Person(y) & BacterialInfection(z) & SickWith(y,z)) -> CanCure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1700", "prediction": "all x y.((Antibiotic(x) & Sick(y) & BacterialInfection(y)) -> CanCure(x,y))", "score": 0}
{"id": "eqasc_validation_1700", "prediction": "all x y z.((Antibiotic(x) & Person(y) & BacterialInfection(z) & Sick(y)) -> CanCure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1700", "prediction": "all x y z.((Antibiotic(x) & Person(y) & BacterialInfection(z) & Sick(y,z)) -> CanCure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1700", "prediction": "all x y z.((Antibiotic(x) & Person(y) & BacterialInfection(z)) -> CanCures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1700", "prediction": "all x y z.((Antibiotic(x) & Patient(y) & BacterialInfection(z)) -> CanCure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1700", "prediction": "all x y z.((Antibiotic(x) & Person(y) & BacterialInfection(z)) -> CanCureWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1700", "prediction": "all x y.((Antibiotic(x) & Person(y) & SickWithBacterialInfection(y)) -> CanCure(x,y))", "score": 0}
{"id": "eqasc_validation_1700", "prediction": "all x y.((Antibiotic(x) & SickWithBacteria(y)) -> CanCure(x,y))", "score": 0}
{"id": "eqasc_validation_1700", "prediction": "all x y.((Antibiotic(x) & Person(y) & SickWithBacteriaInfection(y)) -> CanCure(x,y))", "score": 0}
{"id": "eqasc_validation_1701", "prediction": "all x.(Person(x) -> HumanFamily(x))", "score": 0}
{"id": "eqasc_validation_1701", "prediction": "all x.(Person(x) -> BelongsToHumanFamily(x))", "score": 0}
{"id": "eqasc_validation_1701", "prediction": "all x.(BelongsToHumanFamily(x) -> HumanFamily(x))", "score": 0}
{"id": "eqasc_validation_1701", "prediction": "all x.(BelongsToHumanFamily(x) -> BelongsToHumanFamily(x))", "score": 0}
{"id": "eqasc_validation_1701", "prediction": "all x.exists y.(Person(x) & HumanFamily(y) & BelongsTo(x,y))", "score": 0}
{"id": "eqasc_validation_1701", "prediction": "all x y.((Person(x) & HumanFamily(y)) -> BelongsTo(x,y))", "score": 0}
{"id": "eqasc_validation_1701", "prediction": "all x.(HasHumanFamily(x) -> BelongsTo(x,HumanFamily))", "score": 0}
{"id": "eqasc_validation_1701", "prediction": "all x.((Person(x) & HumanFamily(x)) -> BelongsTo(x,y))", "score": 0}
{"id": "eqasc_validation_1701", "prediction": "all x.(Human(x) -> BelongsToFamily(x))", "score": 0}
{"id": "eqasc_validation_1701", "prediction": "all x.(BelongsToHumanFamily(x) -> BelongsToFamily(x))", "score": 0}
{"id": "eqasc_validation_1701", "prediction": "all x.(BelongsToHumanFamily(x) -> Human(x))", "score": 0}
{"id": "eqasc_validation_1701", "prediction": "all x.exists y.(HumanFamily(x) & Human(y) & BelongsTo(x,y))", "score": 0}
{"id": "eqasc_validation_1701", "prediction": "all x.(People(x) -> BelongsToHumanFamily(x))", "score": 0}
{"id": "eqasc_validation_1701", "prediction": "all x.(Human(x) -> BelongsTo(x,HumanFamily))", "score": 0}
{"id": "eqasc_validation_1701", "prediction": "all x.(HumanFamily(x) -> BelongsTo(x,HumanFamily))", "score": 0}
{"id": "eqasc_validation_1701", "prediction": "all x.(People(x) -> HumanFamily(x))", "score": 0}
{"id": "eqasc_validation_1702", "prediction": "all x y.((Medicine(x) & Human(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1702", "prediction": "all x y z.((Medicine(x) & Human(y) & Sick(z)) -> UsedForCuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1702", "prediction": "all x y.((Medicine(x) & Human(y) & Sick(y)) -> Cures(x,y))", "score": 0}
{"id": "eqasc_validation_1702", "prediction": "all x y.((Medicine(x) & Human(y) & Sick(y)) -> Curing(x,y))", "score": 0}
{"id": "eqasc_validation_1702", "prediction": "all x y.((Medicine(x) & Human(y) & Sick(y)) -> CuredFor(x,y))", "score": 0}
{"id": "eqasc_validation_1702", "prediction": "all x y z.((Medicine(x) & Human(y) & Sick(z)) -> Curing(x,y,z))", "score": 0}
{"id": "eqasc_validation_1702", "prediction": "all x y.((Medicine(x) & Human(y) & Sick(y)) -> Cure(x,y))", "score": 0}
{"id": "eqasc_validation_1702", "prediction": "all x y z.((Medicine(x) & Human(y) & Sick(z)) -> Cures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1702", "prediction": "all x y.((Medicine(x) & Human(y) & Sick(y)) -> UsedForCurring(x,y))", "score": 0}
{"id": "eqasc_validation_1702", "prediction": "all x y.((Medicine(x) & Human(y) & Sick(y)) -> CuredForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1702", "prediction": "all x.((Medicine(x) & Sick(x)) -> UsedForCuringHumans(x))", "score": 0}
{"id": "eqasc_validation_1702", "prediction": "all x y.((Medicine(x) & Human(y) & Sick(y)) -> Cured(x,y))", "score": 0}
{"id": "eqasc_validation_1702", "prediction": "all x y z.((Medicine(x) & Human(y) & Sick(z)) -> CuredFor(x,y,z))", "score": 0}
{"id": "eqasc_validation_1702", "prediction": "all x y.((Medicine(x) & Human(y) & Sick(y)) -> UsedForCuringWhenSick(x,y))", "score": 0}
{"id": "eqasc_validation_1702", "prediction": "all x y z.((Medicine(x) & Human(y) & Sick(z)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1703", "prediction": "all x.((Medicine(x) & Ibuprofen(x)) -> (CalmsInflammation(x) & EasesPain(x)))", "score": 0}
{"id": "eqasc_validation_1703", "prediction": "all x.((Medication(x) & Ibuprofen(x)) -> (CalmsInflammation(x) & EasesPain(x)))", "score": 0}
{"id": "eqasc_validation_1703", "prediction": "all x.((Medicine(x) & Ibuprofen(x)) -> (CalmInflammation(x) & EasePain(x)))", "score": 0}
{"id": "eqasc_validation_1703", "prediction": "all x.((Medication(x) & Ibuprofen(x)) -> (CalmInflammation(x) & EasePain(x)))", "score": 0}
{"id": "eqasc_validation_1703", "prediction": "all x.((Medicine(x) & Ibuprofen(x)) -> (CalmsInflammation(x) & EnlesPain(x)))", "score": 0}
{"id": "eqasc_validation_1703", "prediction": "all x y.((Medicine(x) & Ibuprofen(y)) -> (CalmsInflammation(x) & EasesPain(x)))", "score": 0}
{"id": "eqasc_validation_1703", "prediction": "all x.((Medium(x) & Ibuprofen(x)) -> (CalmsInflammation(x) & EasesPain(x)))", "score": 0}
{"id": "eqasc_validation_1703", "prediction": "all x.((Medication(x) & Ibuprofen(x)) -> (CalmsInflammation(x) & EnlesPain(x)))", "score": 0}
{"id": "eqasc_validation_1703", "prediction": "all x y.((Medicine(x) & Ibuprofen(y)) -> (CalmsInflammation(x,y) & EasesPain(x,y)))", "score": 0}
{"id": "eqasc_validation_1703", "prediction": "all x y.((Medication(x) & Ibuprofen(y)) -> (CalmsInflammation(x) & EasesPain(x)))", "score": 0}
{"id": "eqasc_validation_1703", "prediction": "all x.(Ibuprofen(x) -> (CalmsInflammation(x) & EasesPain(x)))", "score": 0}
{"id": "eqasc_validation_1703", "prediction": "all x.((Medicine(x) & Ibuprofen(x)) -> (CalmsInflammation(x) & EliminatesPain(x)))", "score": 0}
{"id": "eqasc_validation_1703", "prediction": "all x.((Medicine(x) & Ibuprofen(x)) -> (CalmsInflammation(x) & ElementsPain(x)))", "score": 0}
{"id": "eqasc_validation_1703", "prediction": "all x y.((Medicine(x) & Ibuprofen(x)) -> (CalmsInflammation(x) & EasesPain(x)))", "score": 0}
{"id": "eqasc_validation_1703", "prediction": "all x.((Medicine(x) & Ibuprofen(x)) -> (ClairsInflammation(x) & EasesPain(x)))", "score": 0}
{"id": "eqasc_validation_1703", "prediction": "all x.((Medicine(x) & Ibuprofen(x)) -> (CalmsInflammation(x) & EnoughPain(x)))", "score": 0}
{"id": "eqasc_validation_1704", "prediction": "all x y.((Ibuprofen(x) & Person(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1704", "prediction": "all x y z.((Ibuprofen(x) & Person(y) & Sick(z)) -> UsedForCuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1704", "prediction": "all x.((Ibuprofen(x) & Sick(x)) -> UsedForCuringPeople(x))", "score": 0}
{"id": "eqasc_validation_1704", "prediction": "all x y.((Ibuprofen(x) & Person(y) & Sick(y)) -> Cures(x,y))", "score": 0}
{"id": "eqasc_validation_1704", "prediction": "all x y.((Ibuprofen(x) & People(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1704", "prediction": "all x.((Ibuprofen(x) & Person(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1704", "prediction": "all x y.((Ibuprofen(x) & Person(y) & Sick(y)) -> UsedForCurring(x,y))", "score": 0}
{"id": "eqasc_validation_1704", "prediction": "all x y.((Buprofen(x) & Person(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1704", "prediction": "all x.((Ibuprofen(x) & Sick(x)) -> UsedForCuring(x))", "score": 0}
{"id": "eqasc_validation_1704", "prediction": "all x y.((Ibuprofen(x) & Person(y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1704", "prediction": "all x y.((Ibuprofen(x) & Patient(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1704", "prediction": "all x y.((Ibuprofen(x) & Person(y) & Sick(y)) -> UsedForCuringWhenSick(x,y))", "score": 0}
{"id": "eqasc_validation_1704", "prediction": "all x y.((Ibuprofen(x) & Person(y) & Sick(y)) -> Cure(x,y))", "score": 0}
{"id": "eqasc_validation_1704", "prediction": "all x.((Ibuprofen(x) & Person(x) & Sick(x)) -> UsedForCuring(x))", "score": 0}
{"id": "eqasc_validation_1704", "prediction": "all x y.((Ibuprofen(x) & Person(y) & Sick(y)) -> Curing(x,y))", "score": 0}
{"id": "eqasc_validation_1704", "prediction": "all x.((Ibuprofen(x) & PeopleSick(x)) -> UsedForCuring(x))", "score": 0}
{"id": "eqasc_validation_1705", "prediction": "all x.(Person(x) -> (GetsSick(x) & Dies(x)))", "score": 0}
{"id": "eqasc_validation_1705", "prediction": "all x.(People(x) -> (GetsSick(x) & Dies(x)))", "score": 0}
{"id": "eqasc_validation_1705", "prediction": "all x.(Person(x) -> (GetsSick(x) & Die(x)))", "score": 0}
{"id": "eqasc_validation_1705", "prediction": "all x.(Person(x) -> (GivesSick(x) & Dies(x)))", "score": 0}
{"id": "eqasc_validation_1705", "prediction": "exists x.(Person(x) & GetsSick(x) & Dies(x))", "score": 0}
{"id": "eqasc_validation_1705", "prediction": "all x.((Person(x) & GetsSick(x) & Dies(x)) -> GetsSick(x))", "score": 0}
{"id": "eqasc_validation_1705", "prediction": "all x.(Person(x) -> (GivesSick(x) & Die(x)))", "score": 0}
{"id": "eqasc_validation_1705", "prediction": "all x.(Popular(x) -> (GetsSick(x) & Dies(x)))", "score": 0}
{"id": "eqasc_validation_1705", "prediction": "all x.(Person(x) -> (Sick(x) & Die(x)))", "score": 0}
{"id": "eqasc_validation_1705", "prediction": "all x.(Person(x) -> (GetSick(x) & Die(x)))", "score": 0}
{"id": "eqasc_validation_1705", "prediction": "all x.(People(x) -> (GivesSick(x) & Dies(x)))", "score": 0}
{"id": "eqasc_validation_1705", "prediction": "all x.(People(x) -> (GetsSick(x) & Die(x)))", "score": 0}
{"id": "eqasc_validation_1705", "prediction": "all x.(Person(x) -> GetsSick(x) & Dies(x))", "score": 0}
{"id": "eqasc_validation_1705", "prediction": "all x.((Person(x) & GetsSick(x)) -> Dies(x))", "score": 0}
{"id": "eqasc_validation_1705", "prediction": "all x y.((Person(x) & Sick(y)) -> Die(x))", "score": 0}
{"id": "eqasc_validation_1706", "prediction": "all x y.((Medicine(x) & Person(y)) -> PreventsDeath(x,y))", "score": 0}
{"id": "eqasc_validation_1706", "prediction": "all x y.((Medicine(x) & Person(y)) -> CanPreventDeath(x,y))", "score": 0}
{"id": "eqasc_validation_1706", "prediction": "all x y.((Medicine(x) & Person(y)) -> PreventsDying(x,y))", "score": 0}
{"id": "eqasc_validation_1706", "prediction": "all x y.((Medicine(x) & Person(y)) -> CanPreventDying(x,y))", "score": 0}
{"id": "eqasc_validation_1706", "prediction": "all x y z.((Medicine(x) & Person(y) & Dying(z)) -> PreventsFromDying(x,y,z))", "score": 0}
{"id": "eqasc_validation_1706", "prediction": "all x y z.((Medicine(x) & Person(y) & Death(z)) -> PreventsFromDying(x,y,z))", "score": 0}
{"id": "eqasc_validation_1706", "prediction": "all x.(Medicine(x) -> PreventsDeath(x))", "score": 0}
{"id": "eqasc_validation_1706", "prediction": "all x y z.((Medicine(x) & Person(y) & Dying(z)) -> CanPrevent(x,y,z))", "score": 0}
{"id": "eqasc_validation_1706", "prediction": "all x y.((Medicine(x) & Person(y)) -> PreventsDaily(x,y))", "score": 0}
{"id": "eqasc_validation_1706", "prediction": "all x y z.((Medicine(x) & Person(y) & Disease(z)) -> PreventsDeath(x,y,z))", "score": 0}
{"id": "eqasc_validation_1706", "prediction": "all x y z.((Medicine(x) & Person(y) & Disease(z)) -> PreventsFromDying(x,y,z))", "score": 0}
{"id": "eqasc_validation_1706", "prediction": "all x y z.((Medicine(x) & Person(y) & Death(z)) -> CanPrevent(x,y,z))", "score": 0}
{"id": "eqasc_validation_1706", "prediction": "all x y.((Doctor(x) & Person(y)) -> PreventsDeath(x,y))", "score": 0}
{"id": "eqasc_validation_1706", "prediction": "all x y z.((Medicine(x) & Person(y) & Disease(z)) -> CanPrevent(x,y,z))", "score": 0}
{"id": "eqasc_validation_1706", "prediction": "all x y z.((Medicine(x) & Person(y) & Dying(z)) -> PreventsDeath(x,y,z))", "score": 0}
{"id": "eqasc_validation_1706", "prediction": "all x y z.((Medicine(x) & Person(y) & Disease(z)) -> CanPreventFromDying(x,y,z))", "score": 0}
{"id": "eqasc_validation_1707", "prediction": "all x.(Fingernail(x) -> (PreventsInjury(x) & FormsProtectivePlates(x)))", "score": 1}
{"id": "eqasc_validation_1707", "prediction": "all x y.((Fingernail(x) & Finger(y)) -> (PreventsInjury(x,y) & FormsProtectivePlates(x,y)))", "score": 3}
{"id": "eqasc_validation_1707", "prediction": "all x.(Fingernail(x) -> (PreventsInjury(x) & FormsProtectivePlates(x) & OverEndsOfFingers(x)))", "score": 1}
{"id": "eqasc_validation_1707", "prediction": "all x y.((Fingernail(x) & Finger(y)) -> PreventsInjury(x,y))", "score": 1}
{"id": "eqasc_validation_1707", "prediction": "all x.(Fingernail(x) -> (PreventsInjury(x) & FormsProtectivePlates(x) & OverFingersEnds(x)))", "score": 2}
{"id": "eqasc_validation_1707", "prediction": "all x y.((Fingernail(x) & Finger(y)) -> PreventsInjuryByFormingProtectivePlates(x,y))", "score": 1}
{"id": "eqasc_validation_1707", "prediction": "all x y.((Fingernail(x) & Finger(y)) -> (PreventsInjury(x,y) & FormsProtectivePlates(x)))", "score": 1}
{"id": "eqasc_validation_1707", "prediction": "all x.(Fingernail(x) -> (PreventsInjury(x) & FormsProtectivePlates(x) & OverFingers(x)))", "score": 1}
{"id": "eqasc_validation_1707", "prediction": "all x.(Fingernail(x) -> (PreventInjury(x) & FormProtectivePlates(x)))", "score": 0}
{"id": "eqasc_validation_1707", "prediction": "all x y.((Fingernail(x) & Finger(y)) -> (PreventsInjury(x,y) & FormsProtectivePlatesOverEnds(x,y)))", "score": 1}
{"id": "eqasc_validation_1707", "prediction": "all x y.((Fingernail(x) & Finger(y)) -> (PreventsInjuries(x,y) & FormsProtectivePlates(x,y)))", "score": 0}
{"id": "eqasc_validation_1707", "prediction": "all x.(Fingernail(x) -> (PreventsInjury(x) & FormsProtectivePlates(x) & OverEdgesOfFingers(x)))", "score": 1}
{"id": "eqasc_validation_1707", "prediction": "all x.(Fingernail(x) -> (PreventsInjuries(x) & FormsProtectivePlates(x)))", "score": 0}
{"id": "eqasc_validation_1708", "prediction": "all x.(Fingernail(x) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1708", "prediction": "all x.(Fingernail(x) -> (MadeOfKeratin(x) & MadeOfKeratin(x)))", "score": 0}
{"id": "eqasc_validation_1708", "prediction": "all x.(Fingernail(x) -> (MadeOfKeratin(x) | MadeOfKeratin(x)))", "score": 0}
{"id": "eqasc_validation_1708", "prediction": "all x y.((Fingernail(x) & Keratin(y)) -> MadeOf(x,y))", "score": 0}
{"id": "eqasc_validation_1708", "prediction": "all x.(Fingersnail(x) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1708", "prediction": "all x.(Fingernail(x) -> (MadeOfKeratin(x)))", "score": 0}
{"id": "eqasc_validation_1708", "prediction": "all x.(Fingersnail(x) -> (MadeOfKeratin(x) & MadeOfKeratin(x)))", "score": 0}
{"id": "eqasc_validation_1708", "prediction": "all x.(Fingersnail(x) -> (MadeOfKeratin(x) | MadeOfKeratin(x)))", "score": 0}
{"id": "eqasc_validation_1708", "prediction": "all x.(Fingernail(x) -> (MadeOfKeratin(x) & -MadeOfKeratin(x)))", "score": 0}
{"id": "eqasc_validation_1708", "prediction": "(MadeOfKeratin(fingernail) & MadeOfKeratin(fingernail))", "score": 0}
{"id": "eqasc_validation_1709", "prediction": "all x.(Keratin(x) -> (PreventsInjury(x) & FormsProtectingPlates(x) & OverFingersEnds(x)))", "score": 0}
{"id": "eqasc_validation_1709", "prediction": "all x y.((Keratin(x) & Finger(y)) -> PreventsInjuryByFormingProtectingPlates(x,y))", "score": 0}
{"id": "eqasc_validation_1709", "prediction": "all x.(Keratin(x) -> (PreventsInjury(x) & FormsProtectingPlates(x) & OverEndsOfFingers(x)))", "score": 0}
{"id": "eqasc_validation_1709", "prediction": "all x y.((Keratin(x) & Finger(y)) -> PreventsInjury(x,y))", "score": 0}
{"id": "eqasc_validation_1709", "prediction": "all x.(Keratin(x) -> PreventsInjuryByFormingProtectingPlates(x))", "score": 0}
{"id": "eqasc_validation_1709", "prediction": "all x y.((Keratin(x) & Finger(y)) -> (PreventsInjury(x,y) & FormsProtectingPlates(x,y)))", "score": 0}
{"id": "eqasc_validation_1709", "prediction": "all x.(Keratin(x) -> (PreventsInjury(x) & FormsProtectingPlates(x)))", "score": 0}
{"id": "eqasc_validation_1709", "prediction": "all x.(Keratin(x) -> (PreventsInjury(x) & ProtectsPlates(x) & OverFingersEnds(x)))", "score": 0}
{"id": "eqasc_validation_1709", "prediction": "all x y.((Keratin(x) & Finger(y)) -> PreventsInjuriesByFormingProtectingPlates(x,y))", "score": 0}
{"id": "eqasc_validation_1709", "prediction": "all x.(Keratin(x) -> PreventsInjury(x))", "score": 0}
{"id": "eqasc_validation_1709", "prediction": "all x y z.((Keratin(x) & Injuries(y) & Finger(z)) -> PreventsByFormingProtectingPlates(x,y,z))", "score": 0}
{"id": "eqasc_validation_1709", "prediction": "all x.(Keratin(x) -> (PreventsInjuries(x) & FormsProtectingPlates(x) & OverFingersEnds(x)))", "score": 0}
{"id": "eqasc_validation_1709", "prediction": "all x.(Keratin(x) -> (PreventsInjury(x) & FormsProtectivePlates(x) & OverFingersEnds(x)))", "score": 0}
{"id": "eqasc_validation_1709", "prediction": "all x.(Keratin(x) -> (PreventsInjury(x) & FormsProtectingPlates(x) & OverEdgesOfFingers(x)))", "score": 0}
{"id": "eqasc_validation_1709", "prediction": "all x y.((Keratin(x) & Finger(y)) -> (PreventsInjury(x,y) & ProtectsPlates(x,y)))", "score": 0}
{"id": "eqasc_validation_1709", "prediction": "all x y.((Keratin(x) & Finger(y)) -> (PreventsInjury(x) & FormsProtectingPlates(x,y)))", "score": 0}
{"id": "eqasc_validation_1710", "prediction": "all x.((MadeOfKeratin(x) & PreventsInjury(x)) -> FormsProtectivePlates(x))", "score": 0}
{"id": "eqasc_validation_1710", "prediction": "all x.((MadeOfKeratin(x) & PreventsInjury(x) & FormsProtectivePlates(x)) -> PreventsInjury(x))", "score": 0}
{"id": "eqasc_validation_1710", "prediction": "all x.((Keratin(x) & MadeOf(x)) -> PreventsInjuryByFormingProtectivePlates(x))", "score": 0}
{"id": "eqasc_validation_1710", "prediction": "all x.((MadeOfKeratin(x) & PreventsInjury(x) & FormsProtectivePlates(x)) -> PreventsInjuryByFormingProtectivePlates(x))", "score": 0}
{"id": "eqasc_validation_1710", "prediction": "all x y z.((MadeOfKeratin(x) & Injury(y) & ProtectivePlate(z)) -> PreventsByForming(x,y,z))", "score": 0}
{"id": "eqasc_validation_1710", "prediction": "all x.((MadeOfKeratin(x) & PreventsInjuryByFormingProtectivePlates(x)) -> PreventsInjuryByFormingProtectivePlates(x))", "score": 0}
{"id": "eqasc_validation_1710", "prediction": "all x.(MadeOfKeratin(x) -> PreventsInjuryByFormingProtectivePlates(x))", "score": 0}
{"id": "eqasc_validation_1710", "prediction": "all x.((MadeOfKeratin(x) & ProtectivePlates(x)) -> PreventsInjuryByForming(x))", "score": 0}
{"id": "eqasc_validation_1710", "prediction": "all x.((MadeOfKeratin(x) & PreventsInjury(x) & FormsProtectivePlates(x)) -> PreventsInjuryByFormingPlates(x))", "score": 0}
{"id": "eqasc_validation_1710", "prediction": "all x y.((MadeOfKeratin(x) & ProtectivePlate(y)) -> PreventsInjuryByForming(x,y))", "score": 0}
{"id": "eqasc_validation_1710", "prediction": "all x.((MadeOfKeratin(x) & PreventsInjuryByFormingProtectivePlates(x)) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1710", "prediction": "all x.((MadeOfKeratin(x) & ProtectivePlates(x)) -> PreventsInjury(x))", "score": 0}
{"id": "eqasc_validation_1710", "prediction": "all x y.((MadeOfKeratin(x) & MadeOfKeratin(x)) -> PreventsInjuryByFormingProtectivePlates(x))", "score": 0}
{"id": "eqasc_validation_1710", "prediction": "all x.((MadeOfKeratin(x) & PreventsInjury(x) & FormsProtectivePlates(x)) -> PreventsInjuryByProtectingPlates(x))", "score": 0}
{"id": "eqasc_validation_1710", "prediction": "all x y.((MadeOfKeratin(x) & MadeOfKeratin(x)) -> PreventsInjuryByFormingProtectivePlates(x,y))", "score": 0}
{"id": "eqasc_validation_1710", "prediction": "all x.((Keratin(x) & PreventsInjury(x)) -> FormsProtectivePlates(x))", "score": 0}
{"id": "eqasc_validation_1711", "prediction": "all x.((Keratin(x) & FormsOverFingers(x)) -> PreventsInjury(x))", "score": 0}
{"id": "eqasc_validation_1711", "prediction": "all x y.((Keratin(x) & FingerEnds(y)) -> PreventsInjury(x,y))", "score": 0}
{"id": "eqasc_validation_1711", "prediction": "all x.((Keratin(x) & FormsOverEndsOfFingers(x)) -> PreventsInjury(x))", "score": 0}
{"id": "eqasc_validation_1711", "prediction": "all x y.((Keratin(x) & Finger(y) & FormsOverEnds(x,y)) -> PreventsInjury(x,y))", "score": 0}
{"id": "eqasc_validation_1711", "prediction": "all x y.((Keratin(x) & Finger(y) & FormsOverEnds(x,y)) -> PreventsInjury(x))", "score": 0}
{"id": "eqasc_validation_1711", "prediction": "all x y.((Keratin(x) & FingerEnds(y) & FormsOver(x,y)) -> PreventsInjury(x))", "score": 0}
{"id": "eqasc_validation_1711", "prediction": "all x y.((Keratin(x) & Finger(y)) -> PreventsInjury(x,y))", "score": 0}
{"id": "eqasc_validation_1711", "prediction": "all x y.((Keratin(x) & FingerEnds(y) & FormsOver(x,y)) -> PreventsInjury(x,y))", "score": 0}
{"id": "eqasc_validation_1711", "prediction": "all x y z.((Keratin(x) & Finger(y) & Finger(z) & FormsOverEnds(x,y,z)) -> PreventsInjury(x))", "score": 0}
{"id": "eqasc_validation_1711", "prediction": "all x y z.((Keratin(x) & Finger(y) & Finger(z)) -> PreventsInjury(x,y,z))", "score": 0}
{"id": "eqasc_validation_1711", "prediction": "all x.((Keratin(x) & FormsOverFingersEnds(x)) -> PreventsInjury(x))", "score": 0}
{"id": "eqasc_validation_1711", "prediction": "all x y.((Keratin(x) & EndsOfFingers(y)) -> PreventsInjury(x,y))", "score": 0}
{"id": "eqasc_validation_1711", "prediction": "all x y z.((Keratin(x) & Finger(y) & Finger(z) & FormsOverEnds(x,y)) -> PreventsInjury(x,z))", "score": 0}
{"id": "eqasc_validation_1711", "prediction": "all x y.((Keratin(x) & Fingers(y) & FormsOverEnds(x,y)) -> PreventsInjury(x,y))", "score": 0}
{"id": "eqasc_validation_1711", "prediction": "all x y z.((Keratin(x) & FingerEnds(y) & Fingers(z)) -> PreventsInjury(x,y,z))", "score": 0}
{"id": "eqasc_validation_1711", "prediction": "all x y z.((Keratin(x) & FingerEnds(y) & Fingers(z) & FormsOver(x,y,z)) -> PreventsInjury(x))", "score": 0}
{"id": "eqasc_validation_1712", "prediction": "all x.(Person(x) -> HasFingersnails(x))", "score": 0}
{"id": "eqasc_validation_1712", "prediction": "all x.(Person(x) -> HasFingersnail(x))", "score": 0}
{"id": "eqasc_validation_1712", "prediction": "all x.(Person(x) -> HasFingernails(x))", "score": 0}
{"id": "eqasc_validation_1712", "prediction": "all x y.((Person(x) & Fingernail(y)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_1712", "prediction": "all x.exists y.(Person(x) & Fingernail(y) & Has(x,y))", "score": 0}
{"id": "eqasc_validation_1712", "prediction": "all x.(Person(x) -> HasFingernail(x))", "score": 0}
{"id": "eqasc_validation_1712", "prediction": "all x.((Person(x) & Fingernail(x)) -> Has(x,y))", "score": 0}
{"id": "eqasc_validation_1712", "prediction": "all x.(Person(x) -> Fingernail(x))", "score": 13}
{"id": "eqasc_validation_1712", "prediction": "all x.(Human(x) -> HasFingersnails(x))", "score": 0}
{"id": "eqasc_validation_1712", "prediction": "all x.(Person(x) -> HasFingenail(x))", "score": 0}
{"id": "eqasc_validation_1712", "prediction": "all x.(Person(x) -> HasFingenails(x))", "score": 0}
{"id": "eqasc_validation_1712", "prediction": "exists x.(Person(x) & Fingernail(x))", "score": 0}
{"id": "eqasc_validation_1712", "prediction": "all x.exists y.(Person(x) & Fingernail(y))", "score": 0}
{"id": "eqasc_validation_1712", "prediction": "all x.((Person(x) & Fingernail(x)) -> Has(x))", "score": 0}
{"id": "eqasc_validation_1713", "prediction": "all x y.((Person(x) & Finger(y)) -> PreventsInjuryByFormingProtectivePlates(x,y))", "score": 1}
{"id": "eqasc_validation_1713", "prediction": "all x y.((Person(x) & Finger(y)) -> (PreventsInjury(x,y) & FormsProtectivePlates(x,y)))", "score": 1}
{"id": "eqasc_validation_1713", "prediction": "all x y.((Person(x) & Finger(y) & FormsProtectivePlates(x,y)) -> PreventsInjury(x,y))", "score": 1}
{"id": "eqasc_validation_1713", "prediction": "all x y.((Person(x) & Person(y)) -> (PreventsInjury(x,y) & FormsProtectivePlates(x,y)))", "score": 0}
{"id": "eqasc_validation_1713", "prediction": "all x y.((Person(x) & Person(y)) -> PreventsInjuryByFormingProtectivePlates(x,y))", "score": 0}
{"id": "eqasc_validation_1713", "prediction": "all x.((Person(x) & FormsProtectivePlates(x) & OverFingersEnds(x)) -> PreventsInjury(x))", "score": 1}
{"id": "eqasc_validation_1713", "prediction": "all x y z.((Person(x) & ProtectivePlate(y) & Finger(z)) -> PreventsInjuryByForming(x,y,z))", "score": 0}
{"id": "eqasc_validation_1713", "prediction": "all x y.((Person(x) & Finger(y)) -> PreventsInjury(x,y))", "score": 4}
{"id": "eqasc_validation_1713", "prediction": "all x y.((Person(x) & Finger(y) & FormsProtectivePlates(x,y)) -> PreventsInjury(x))", "score": 0}
{"id": "eqasc_validation_1713", "prediction": "all x.((Person(x) & FormsProtectivePlates(x)) -> PreventsInjury(x))", "score": 5}
{"id": "eqasc_validation_1713", "prediction": "all x y z.((Person(x) & ProtectivePlate(y) & Finger(z)) -> PreventsInjury(x,y,z))", "score": 0}
{"id": "eqasc_validation_1713", "prediction": "all x y.((Person(x) & Finger(y) & FormsProtectivePlates(x,y)) -> PreventsInjuryByForming(x,y))", "score": 0}
{"id": "eqasc_validation_1713", "prediction": "all x y.((Person(x) & ProtectivePlate(y)) -> PreventsInjuryByForming(x,y))", "score": 0}
{"id": "eqasc_validation_1713", "prediction": "all x y.((Person(x) & Person(y)) -> (PreventsInjury(x,y) & FormsProtectivePlates(x) & OverFingersEnds(x)))", "score": 0}
{"id": "eqasc_validation_1713", "prediction": "all x y.((Person(x) & ProtectivePlate(y)) -> PreventsInjury(x,y))", "score": 0}
{"id": "eqasc_validation_1713", "prediction": "all x y.((Person(x) & Person(y)) -> (PreventsInjury(x,y) & FormsProtectivePlates(x) & OverFingersEnds(x,y)))", "score": 0}
{"id": "eqasc_validation_1714", "prediction": "all x.((FingernailExamination(x) & Smooth(x) & WellShaped(x)) -> Healthy(x))", "score": 0}
{"id": "eqasc_validation_1714", "prediction": "all x.(HealthyFingernailExamination(x) -> (Smooth(x) & WellShaped(x)))", "score": 0}
{"id": "eqasc_validation_1714", "prediction": "all x.(FingernailExamination(x) -> (Smooth(x) & WellShaped(x)))", "score": 0}
{"id": "eqasc_validation_1714", "prediction": "all x.((Fingernail(x) & Smooth(x) & WellShaped(x)) -> Healthy(x))", "score": 0}
{"id": "eqasc_validation_1714", "prediction": "all x.(HealthyFingernail(x) -> (Smooth(x) & WellShaped(x)))", "score": 0}
{"id": "eqasc_validation_1714", "prediction": "all x.(HealthyFingernailExamination(x) -> (Smooth(x) & WellShapen(x)))", "score": 0}
{"id": "eqasc_validation_1715", "prediction": "all x.(ProtectivePlate(x) -> (Smooth(x) & WellShaped(x)))", "score": 0}
{"id": "eqasc_validation_1715", "prediction": "all x.((ProtectivePlate(x) & OverFingersEnds(x)) -> (Smooth(x) & WellShaped(x)))", "score": 0}
{"id": "eqasc_validation_1715", "prediction": "all x y.((ProtectivePlate(x) & Finger(y)) -> (Smooth(x) & WellShaped(x)))", "score": 0}
{"id": "eqasc_validation_1715", "prediction": "all x.((ProtectivePlate(x) & OverFingers(x)) -> (Smooth(x) & WellShaped(x)))", "score": 0}
{"id": "eqasc_validation_1715", "prediction": "all x y.((ProtectivePlate(x) & FingerEnds(y)) -> (Smooth(x) & WellShaped(x)))", "score": 0}
{"id": "eqasc_validation_1715", "prediction": "all x.(ProtectivePlate(x) -> (Shaped(x) & WellShaped(x)))", "score": 0}
{"id": "eqasc_validation_1715", "prediction": "all x.((ProtectivePlate(x) & EndsOfFingers(x)) -> (Smooth(x) & WellShaped(x)))", "score": 0}
{"id": "eqasc_validation_1715", "prediction": "all x.(ProtectivePlate(x) -> (ShapedEndsOfFingers(x) & WellShaped(x)))", "score": 0}
{"id": "eqasc_validation_1715", "prediction": "all x.((ProtectivePlate(x) & OverFingersEnds(x)) -> (Shaped(x) & WellShaped(x)))", "score": 0}
{"id": "eqasc_validation_1715", "prediction": "all x y.((ProtectivePlate(x) & FingerEnd(y)) -> (Smooth(x) & WellShaped(x)))", "score": 0}
{"id": "eqasc_validation_1715", "prediction": "all x.((ProtectivePlate(x) & OverFingersEnds(x)) -> (Smooth(x) & WellShapened(x)))", "score": 0}
{"id": "eqasc_validation_1715", "prediction": "all x y.((ProtectivePlate(x) & Finger(y)) -> (Smooth(x,y) & WellShaped(x,y)))", "score": 0}
{"id": "eqasc_validation_1715", "prediction": "all x y.((ProtectivePlate(x) & Finger(y)) -> (Smooth(x,y) & WellShaped(x)))", "score": 0}
{"id": "eqasc_validation_1716", "prediction": "all x.(Keratin(x) -> (PreventsInjury(x) & FormsProtectivePlates(x)))", "score": 0}
{"id": "eqasc_validation_1716", "prediction": "all x y.((Keratin(x) & Finger(y)) -> PreventsInjury(x,y))", "score": 0}
{"id": "eqasc_validation_1716", "prediction": "all x y.((Keratin(x) & Finger(y)) -> PreventsInjuryByFormingProtectivePlates(x,y))", "score": 0}
{"id": "eqasc_validation_1716", "prediction": "all x.(Keratin(x) -> (PreventsInjury(x) & FormsProtectivePlates(x) & OverFingersEnds(x)))", "score": 0}
{"id": "eqasc_validation_1716", "prediction": "all x y.((Keratin(x) & Finger(y)) -> (PreventsInjury(x,y) & FormsProtectivePlates(x,y)))", "score": 0}
{"id": "eqasc_validation_1716", "prediction": "all x.(Keratin(x) -> PreventsInjury(x))", "score": 0}
{"id": "eqasc_validation_1716", "prediction": "all x.(Keratin(x) -> PreventsInjuryByFormingProtectivePlates(x))", "score": 0}
{"id": "eqasc_validation_1716", "prediction": "all x.(Keratin(x) -> (PreventsInjury(x) & FormsProtectivePlates(x) & OverFingers(x)))", "score": 0}
{"id": "eqasc_validation_1716", "prediction": "all x.(Keratin(x) -> (PreventsInjury(x) & FormsProtectivePlates(x) & OverEndsOfFingers(x)))", "score": 0}
{"id": "eqasc_validation_1716", "prediction": "all x y.((Keratin(x) & Finger(y) & FormsProtectivePlates(x,y)) -> PreventsInjury(x,y))", "score": 0}
{"id": "eqasc_validation_1716", "prediction": "all x y.((Keratin(x) & Finger(y) & FormsProtectivePlates(x,y)) -> PreventsInjury(x))", "score": 0}
{"id": "eqasc_validation_1716", "prediction": "all x y.((Keratin(x) & Finger(y)) -> PreventsInjuriesByFormingProtectivePlates(x,y))", "score": 0}
{"id": "eqasc_validation_1716", "prediction": "all x y.((Keratin(x) & Finger(y)) -> (PreventsInjury(x,y) & FormsProtectivePlates(x)))", "score": 0}
{"id": "eqasc_validation_1716", "prediction": "all x.(Keratin(x) -> (PreventsInjury(x) & FormsProtectivePlates(x) & OverEdgesOfFingers(x)))", "score": 0}
{"id": "eqasc_validation_1716", "prediction": "all x.(Keratin(x) -> (PreventsInjury(x) & FormsProtectivePlatesOverFingers(x)))", "score": 0}
{"id": "eqasc_validation_1716", "prediction": "all x y.((Keratin(x) & Finger(y)) -> PreventsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1717", "prediction": "all x.(Keratin(x) -> (PreventsInjury(x) & FormsProtectivePlates(x)))", "score": 0}
{"id": "eqasc_validation_1717", "prediction": "all x y.((Keratin(x) & Finger(y)) -> PreventsInjury(x,y))", "score": 0}
{"id": "eqasc_validation_1717", "prediction": "all x y.((Keratin(x) & Finger(y)) -> PreventsInjuryByFormingProtectivePlates(x,y))", "score": 0}
{"id": "eqasc_validation_1717", "prediction": "all x.(Keratin(x) -> (PreventsInjury(x) & FormsProtectivePlates(x) & OverFingersEnds(x)))", "score": 0}
{"id": "eqasc_validation_1717", "prediction": "all x y.((Keratin(x) & Finger(y)) -> (PreventsInjury(x,y) & FormsProtectivePlates(x,y)))", "score": 0}
{"id": "eqasc_validation_1717", "prediction": "all x.(Keratin(x) -> (PreventsInjury(x) & FormsProtectivePlates(x) & OverFingers(x)))", "score": 0}
{"id": "eqasc_validation_1717", "prediction": "all x.(Keratin(x) -> PreventsInjury(x))", "score": 0}
{"id": "eqasc_validation_1717", "prediction": "all x.(Keratin(x) -> (PreventsInjury(x) & FormsProtectivePlates(x) & OverEndsOfFingers(x)))", "score": 0}
{"id": "eqasc_validation_1717", "prediction": "all x.(Keratin(x) -> PreventsInjuryByFormingProtectivePlates(x))", "score": 0}
{"id": "eqasc_validation_1717", "prediction": "all x y.((Keratin(x) & Finger(y) & FormsProtectivePlates(x,y)) -> PreventsInjury(x,y))", "score": 0}
{"id": "eqasc_validation_1717", "prediction": "all x y.((Keratin(x) & Finger(y) & FormsProtectivePlates(x,y)) -> PreventsInjury(x))", "score": 0}
{"id": "eqasc_validation_1717", "prediction": "all x y z.((Keratin(x) & Injuries(y) & Finger(z)) -> PreventsByFormingProtectivePlates(x,y,z))", "score": 0}
{"id": "eqasc_validation_1717", "prediction": "all x y.((Keratin(x) & Finger(y)) -> PreventsInjuriesByFormingProtectivePlates(x,y))", "score": 0}
{"id": "eqasc_validation_1717", "prediction": "all x y.((Keratin(x) & Finger(y)) -> (PreventsInjury(x,y) & FormsProtectivePlates(x)))", "score": 0}
{"id": "eqasc_validation_1717", "prediction": "all x y.((Keratin(x) & Finger(y)) -> PreventsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1717", "prediction": "all x.(Keratin(x) -> (PreventsInjury(x) & FormsProtectivePlates(x) & OverEdgesOfFingers(x)))", "score": 0}
{"id": "eqasc_validation_1718", "prediction": "all x.(Fingernail(x) -> BrittleWithAge(x))", "score": 0}
{"id": "eqasc_validation_1718", "prediction": "all x.((Fingernail(x) & Age(x)) -> Brittle(x))", "score": 0}
{"id": "eqasc_validation_1718", "prediction": "all x y.((Fingernail(x) & Age(y)) -> Brittle(x,y))", "score": 0}
{"id": "eqasc_validation_1718", "prediction": "all x.((Fingersnail(x) & Age(x)) -> Brittle(x))", "score": 0}
{"id": "eqasc_validation_1718", "prediction": "all x.(Fingersnail(x) -> BrittleWithAge(x))", "score": 0}
{"id": "eqasc_validation_1718", "prediction": "all x y.((Fingernail(x) & Age(y)) -> BrittleWith(x,y))", "score": 0}
{"id": "eqasc_validation_1718", "prediction": "all x.((Fingernail(x) & Age(x)) -> MoreBrittle(x))", "score": 0}
{"id": "eqasc_validation_1718", "prediction": "all x.(Fingernail(x) -> MoreBrittleWithAge(x))", "score": 0}
{"id": "eqasc_validation_1718", "prediction": "all x y.((Fingernail(x) & Age(y)) -> Brittle(x))", "score": 0}
{"id": "eqasc_validation_1718", "prediction": "all x y.((Fingernail(x) & Age(y)) -> MoreBrittle(x,y))", "score": 0}
{"id": "eqasc_validation_1719", "prediction": "all x.((ProtectivePlate(x) & EndsOfFingers(x)) -> BrittleWithAge(x))", "score": 0}
{"id": "eqasc_validation_1719", "prediction": "all x y.((ProtectivePlate(x) & FingerEnds(y)) -> BrittleWithAge(x,y))", "score": 0}
{"id": "eqasc_validation_1719", "prediction": "all x.((ProtectivePlate(x) & OverFingersEnds(x)) -> BrittleWithAge(x))", "score": 0}
{"id": "eqasc_validation_1719", "prediction": "all x.((ProtectivePlates(x) & EndsOfFingers(x)) -> BrittleWithAge(x))", "score": 0}
{"id": "eqasc_validation_1719", "prediction": "all x.((ProtectivePlate(x) & EndOfFingers(x)) -> BrittleWithAge(x))", "score": 0}
{"id": "eqasc_validation_1719", "prediction": "all x y.((ProtectivePlate(x) & FingerEnds(y) & Age(x)) -> BrittleWithAge(x,y))", "score": 0}
{"id": "eqasc_validation_1719", "prediction": "all x y.((ProtectivePlate(x) & Finger(y) & EndsOfFingers(x,y)) -> BrittleWithAge(x))", "score": 0}
{"id": "eqasc_validation_1719", "prediction": "all x y.((ProtectivePlate(x) & FingerEnds(y)) -> BrittleWithAge(x))", "score": 0}
{"id": "eqasc_validation_1719", "prediction": "all x y.((ProtectivePlate(x) & FingerEnds(y) & Age(x)) -> Brittle(x,y))", "score": 0}
{"id": "eqasc_validation_1719", "prediction": "all x y.((ProtectivePlate(x) & FingerEnds(y) & Age(x)) -> BrittleWith(x,y))", "score": 0}
{"id": "eqasc_validation_1719", "prediction": "all x y.((ProtectivePlate(x) & Finger(y) & EndsOfFingers(x,y)) -> BrittleWithAge(x,y))", "score": 0}
{"id": "eqasc_validation_1719", "prediction": "all x.((ProtectivePlate(x) & EndsOfFingers(x) & Age(x)) -> BrittleWithAge(x))", "score": 0}
{"id": "eqasc_validation_1719", "prediction": "all x y.((ProtectivePlate(x) & FingerEnds(y) & Age(x)) -> Brittle(x))", "score": 0}
{"id": "eqasc_validation_1719", "prediction": "all x.((ProtectivePlate(x) & EndsOfFingers(x) & Age(x)) -> Brittle(x))", "score": 0}
{"id": "eqasc_validation_1719", "prediction": "all x y z.((ProtectivePlate(x) & FingerEnds(y) & FingerEnds(z)) -> BrittleWithAge(x,y,z))", "score": 0}
{"id": "eqasc_validation_1719", "prediction": "all x y.((ProtectivePlate(x) & Finger(y)) -> BrittleWithAge(x,y))", "score": 0}
{"id": "eqasc_validation_1720", "prediction": "all x.((ProtectivePlates(x) & EndsOfFingers(x)) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1720", "prediction": "all x.(ProtectivePlates(x) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1720", "prediction": "all x.(ProtectivePlates(x) -> (MadeOfKeratin(x) & OverFingersEnds(x)))", "score": 0}
{"id": "eqasc_validation_1720", "prediction": "all x.((ProtectivePlates(x) & OverFingersEnds(x)) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1720", "prediction": "all x y.((ProtectivePlate(x) & FingerEnds(y)) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1720", "prediction": "all x.((ProtectivePlate(x) & EndsOfFingers(x)) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1720", "prediction": "all x.(ProtectivePlates(x) -> (MadeOfKeratin(x) & OverEndsOfFingers(x)))", "score": 0}
{"id": "eqasc_validation_1720", "prediction": "all x y.((ProtectivePlate(x) & FingerEnds(y) & MadeOfKeratin(x)) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1720", "prediction": "all x y.((ProtectivePlate(x) & FingerEnds(y)) -> MadeOfKeratin(x,y))", "score": 0}
{"id": "eqasc_validation_1720", "prediction": "all x y.((ProtectivePlate(x) & Finger(y) & EndsOf(x,y)) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1720", "prediction": "all x.(ProtectivePlatesOverFingers(x) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1720", "prediction": "all x y.((ProtectivePlates(x) & FingerEnds(y)) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1720", "prediction": "all x y.((ProtectivePlates(x) & FingerEnds(y) & MadeOfKeratin(x)) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1720", "prediction": "all x.(ProtectivePlates(x) -> (MadeOfKeratin(x) & EndsOfFingers(x)))", "score": 0}
{"id": "eqasc_validation_1720", "prediction": "all x y z.((ProtectivePlate(x) & FingerEnds(y) & FingerEnds(z)) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1720", "prediction": "all x y.((ProtectivePlate(x) & FingerEnds(y) & MadeOfKeratin(x)) -> MadeOfKeratin(x,y))", "score": 0}
{"id": "eqasc_validation_1721", "prediction": "all x.(Stopwatch(x) -> MeasuresTime(x))", "score": 0}
{"id": "eqasc_validation_1721", "prediction": "all x y.((Stopwatch(x) & Time(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1721", "prediction": "all x y z.((Stopwatch(x) & Time(y) & Time(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1721", "prediction": "all x y.((Stopwatch(x) & MeasureTime(y)) -> UsedToMeasureTime(x,y))", "score": 0}
{"id": "eqasc_validation_1721", "prediction": "all x y.((Stopwatch(x) & Time(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1721", "prediction": "all x y.((Stopwatch(x) & MeasuresTime(x,y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1721", "prediction": "all x y.((Stopwatch(x) & MeasuresTime(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1721", "prediction": "all x.(Stopwatch(x) -> UsedToMeasureTime(x))", "score": 0}
{"id": "eqasc_validation_1721", "prediction": "all x y z.((Stopwatch(x) & MeasureTime(y) & Time(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1721", "prediction": "all x y z.((Stopwatch(x) & Time(y) & Time(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1721", "prediction": "all x y z.((Stopwatch(x) & MeasuresTime(y) & Time(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1721", "prediction": "all x y.((Stopwatch(x) & Time(y) & Measures(x,y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1721", "prediction": "all x y.((Stopwatch(x) & MeasuresTime(x,y)) -> UsedToMeasureTime(x,y))", "score": 0}
{"id": "eqasc_validation_1721", "prediction": "all x y.((Stopwatch(x) & MeasuresTime(y)) -> UsedToMeasureTime(x,y))", "score": 0}
{"id": "eqasc_validation_1721", "prediction": "all x y.((Stopwatch(x) & Time(y)) -> MeasuresTime(x,y))", "score": 0}
{"id": "eqasc_validation_1721", "prediction": "all x y.((Stopwatch(x) & MeasuresTime(x)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1722", "prediction": "all x.(Stopwatch(x) -> MeasuresSeconds(x))", "score": 0}
{"id": "eqasc_validation_1722", "prediction": "all x.(Stopwatch(x) -> UsedToMeasureSeconds(x))", "score": 0}
{"id": "eqasc_validation_1722", "prediction": "all x y.((Stopwatch(x) & Second(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1722", "prediction": "all x.(Stopwatch(x) -> MeasureSeconds(x))", "score": 0}
{"id": "eqasc_validation_1722", "prediction": "all x y.((Stopwatch(x) & Second(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1722", "prediction": "all x y z.((Stopwatch(x) & Second(y) & Second(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1722", "prediction": "all x y.((Stopwatch(x) & Second(y)) -> Measure(x,y))", "score": 0}
{"id": "eqasc_validation_1722", "prediction": "all x y z.((Stopwatch(x) & Second(y) & Second(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1722", "prediction": "all x.(Stopwatch(x) -> (MeasuresSeconds(x) & MeasuresSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1722", "prediction": "all x y z.((Stopwatch(x) & Second(y) & Second(z)) -> Measure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1722", "prediction": "all x y.((Stopwatch(x) & Seconds(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1722", "prediction": "all x y.((Stopwatch(x) & Session(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1722", "prediction": "all x.(Stopwatch(x) -> UsedForMeasureSeconds(x))", "score": 0}
{"id": "eqasc_validation_1722", "prediction": "all x.(Stopwatch(x) -> (MeasuresSeconds(x) & UsedToMeasureSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1723", "prediction": "all x.(ReactionTime(x) -> (MeasuredWithStopwatch(x) & InMinutesAndSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1723", "prediction": "all x.(ReactionTime(x) -> (MeasuredWithStopwatch(x) & InMinutes(x) & InSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1723", "prediction": "all x y.((Stopwatch(x) & ReactionTime(y)) -> MeasuredInMinutesAndSeconds(x,y))", "score": 0}
{"id": "eqasc_validation_1723", "prediction": "all x.((ReactionTime(x) & Stopwatch(x)) -> MeasuredInMinutesAndSeconds(x))", "score": 0}
{"id": "eqasc_validation_1723", "prediction": "all x.((ReactionTime(x) & Stopwatch(x)) -> (MeasuredInMinutes(x) & MeasuredInSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1723", "prediction": "all x y.((Stopwatch(x) & ReactionTime(y)) -> (MeasuredInMinutes(x,y) & MeasuredInSeconds(x,y)))", "score": 0}
{"id": "eqasc_validation_1723", "prediction": "all x y z.((ReactionTime(x) & Stopwatch(y) & Minutes(z) & Seconds(z)) -> MeasuredWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1723", "prediction": "all x y z.((Stopwatch(x) & ReactionTime(y) & Minutes(z) & Seconds(z)) -> MeasuredWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1723", "prediction": "all x y z.((ReactionTime(x) & Stopwatch(y) & Minute(z) & Second(z)) -> MeasuredWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1723", "prediction": "all x y.((ReactionTime(x) & Stopwatch(y)) -> MeasuredInMinutesAndSeconds(x,y))", "score": 0}
{"id": "eqasc_validation_1723", "prediction": "all x.((ReactionTime(x) & Stopwatch(y)) -> MeasuredInMinutesAndSeconds(x,y))", "score": 0}
{"id": "eqasc_validation_1723", "prediction": "all x y z.((Stopwatch(x) & ReactionTime(y) & Minute(z) & Second(z)) -> MeasuredWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1724", "prediction": "all x.(Stopwatch(x) -> MeasuresMinutes(x))", "score": 0}
{"id": "eqasc_validation_1724", "prediction": "all x y.((Stopwatch(x) & Minutes(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1724", "prediction": "all x y z.((Stopwatch(x) & Minutes(y) & Minutes(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1724", "prediction": "all x.(Stopwatch(x) -> MeasureMinutes(x))", "score": 0}
{"id": "eqasc_validation_1724", "prediction": "all x.((Stopwatch(x) & MeasuresMinutes(x)) -> CanMeasureMinutes(x))", "score": 0}
{"id": "eqasc_validation_1724", "prediction": "all x.(Stopwatch(x) -> CanMeasureMinutes(x))", "score": 0}
{"id": "eqasc_validation_1724", "prediction": "all x y.((Stopwatch(x) & Minute(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1724", "prediction": "all x.(Stopwatch(x) -> (MeasuresMinutes(x) & MeasuresMinutes(x)))", "score": 0}
{"id": "eqasc_validation_1724", "prediction": "all x y.((Stopwatch(x) & Minutes(y)) -> CanMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1724", "prediction": "all x y z.((Stopwatch(x) & Minute(y) & Minute(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1724", "prediction": "all x.((Stopwatch(x) & MeasuresMinutes(x)) -> MeasuresMinutes(x))", "score": 0}
{"id": "eqasc_validation_1724", "prediction": "all x y z.((Stopwatch(x) & Minutes(y) & Minutes(z)) -> CanMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1724", "prediction": "all x y.((Stopwatch(x) & Minutes(y) & Measures(x,y)) -> CanMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1724", "prediction": "all x y.((Stopwatch(x) & Minutes(y) & Measures(x,y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1724", "prediction": "all x y.((Stopwatch(x) & Minutes(y)) -> Measure(x,y))", "score": 0}
{"id": "eqasc_validation_1724", "prediction": "all x y z.((Stopwatch(x) & Minutes(y) & Minutes(z)) -> Measure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1725", "prediction": "all x.(Stopwatch(x) -> (MeasuresMinutes(x) & MeasuresSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1725", "prediction": "all x.(Stopwatch(x) -> (MeasuresMinutes(x) | MeasuresSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1725", "prediction": "all x.(Stopwatch(x) -> (MeasuresMinutesAndSeconds(x) & MeasuresMinutesAndSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1725", "prediction": "all x y z.((Stopwatch(x) & Minutes(y) & Seconds(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1725", "prediction": "all x y.((Stopwatch(x) & Minutes(y) & Seconds(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1725", "prediction": "all x y z.((Stopwatch(x) & Minute(y) & Second(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1725", "prediction": "all x.(Stopwatch(x) -> MeasuresMinutesAndSeconds(x))", "score": 0}
{"id": "eqasc_validation_1725", "prediction": "all x.(Stopwatch(x) -> (MeasuresMinutes(x) & MeasuresSeconds(x) & MeasuresMinutes(x) & MeasuresSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1725", "prediction": "all x y.((Stopwatch(x) & Minute(y) & Second(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1725", "prediction": "all x.(Stopwatch(x) -> (MeasureMinutes(x) & MeasureSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1725", "prediction": "all x y.((Stopwatch(x) & Minutes(y)) -> MeasuresSeconds(x,y))", "score": 0}
{"id": "eqasc_validation_1725", "prediction": "all x.(Stopwatch(x) -> (MeasuresMeasuresMinutes(x) & MeasuresSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1725", "prediction": "all x.(Stopwatch(x) -> (MeasuresMinutesAndSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1725", "prediction": "all x y.((Stopwatch(x) & Minutes(y) & Seconds(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1725", "prediction": "all x.(Stopwatch(x) -> (MeasuresMinutesAndSeconds(x) & MeasuresMinutes(x) & MeasuresSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1726", "prediction": "all x.(Stopwatch(x) -> MeasuresSeconds(x))", "score": 0}
{"id": "eqasc_validation_1726", "prediction": "all x.(Stopwatch(x) -> UsedToMeasureSeconds(x))", "score": 0}
{"id": "eqasc_validation_1726", "prediction": "all x y.((Stopwatch(x) & Second(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1726", "prediction": "all x.(Stopwatch(x) -> MeasureSeconds(x))", "score": 0}
{"id": "eqasc_validation_1726", "prediction": "all x y.((Stopwatch(x) & Second(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1726", "prediction": "all x y.((Stopwatch(x) & Seconds(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1726", "prediction": "all x y z.((Stopwatch(x) & Second(y) & Second(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1726", "prediction": "all x y.((Stopwatch(x) & Seconds(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1726", "prediction": "all x y z.((Stopwatch(x) & Second(y) & Second(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1726", "prediction": "all x y.((Stopwatch(x) & Session(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1726", "prediction": "all x y.((Stopwatch(x) & Second(y)) -> Measure(x,y))", "score": 0}
{"id": "eqasc_validation_1726", "prediction": "all x.(Stopwatch(x) -> UsedForMeasureSeconds(x))", "score": 0}
{"id": "eqasc_validation_1726", "prediction": "all x y z.((Stopwatch(x) & Second(y) & Second(z)) -> Measure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1727", "prediction": "all x.(TimeInSeconds(x) -> (AvailableWithTimes(x) | AvailableWithItimes(x)))", "score": 0}
{"id": "eqasc_validation_1727", "prediction": "all x.(TimeInSeconds(x) -> (exists y.(Time(y) & AvailableWith(x,y)) | exists z.(Time(z) & AvailableWith(x,z)))))", "score": -1}
{"id": "eqasc_validation_1727", "prediction": "all x.(TimeInSeconds(x) -> (availableWithTimes(x) | AvailableWithItimes(x)))", "score": 0}
{"id": "eqasc_validation_1727", "prediction": "all x y.((Time(x) & (Time(y) | Itime(y))) -> AvailableWith(x,y))", "score": 0}
{"id": "eqasc_validation_1727", "prediction": "all x y.((Time(x) & (Time(y) | Itimes(y))) -> AvailableWith(x,y))", "score": 0}
{"id": "eqasc_validation_1727", "prediction": "all x.(TimeInSeconds(x) -> (AvailableWithTime(x) | AvailableWithItimes(x)))", "score": 0}
{"id": "eqasc_validation_1727", "prediction": "all x.(TimeInSeconds(x) -> (exists y.(Time(y) & AvailableWith(x,y))) | exists z.(Time(z) & AvailableWith(x,z)))))", "score": -1}
{"id": "eqasc_validation_1727", "prediction": "all x.(TimeInSeconds(x) -> (exists y.(Time(y) & AvailableWith(x,y)) | exists z.(Itime(z) & AvailableWith(x,z)))))", "score": -1}
{"id": "eqasc_validation_1727", "prediction": "all x.(TimeInSeconds(x) -> (exists y.(Time(y) & AvailableWith(x,y)) | exists z.(Itimes(z) & AvailableWith(x,z)))))", "score": -1}
{"id": "eqasc_validation_1727", "prediction": "all x.(Time(x) -> (AvailableWithTimes(x) | AvailableWithItimes(x)))", "score": 0}
{"id": "eqasc_validation_1727", "prediction": "all x.(Time(x) -> (AvailableWithTime(x) | AvailableWithItimes(x)))", "score": 0}
{"id": "eqasc_validation_1727", "prediction": "all x.(TimeInSeconds(x) -> (exists y.(Time(y) & AvailableWith(y,x)) | exists z.(Time(z) & AvailableWith(z,x)))))", "score": -1}
{"id": "eqasc_validation_1727", "prediction": "all x.(Time(x) -> (Time(x) | Itimes(x)))", "score": 0}
{"id": "eqasc_validation_1727", "prediction": "all x.(TimeInSeconds(x) -> (exists y.(Time(y) & AvailableWith(x,y))) | exists z.(Time(z) & AvailableWith(x,z))))", "score": -1}
{"id": "eqasc_validation_1727", "prediction": "all x.(Time(x) -> (TimeInSeconds(x) | TimeInSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1727", "prediction": "all x.(TimeInSeconds(x) -> (exists y.(Time(y) & AvailableWith(x,y))) | exists z.(Itime(z) & AvailableWith(x,z)))))", "score": -1}
{"id": "eqasc_validation_1728", "prediction": "all x.(Stopwatch(x) -> MeasuresSeconds(x))", "score": 0}
{"id": "eqasc_validation_1728", "prediction": "all x y.((Stopwatch(x) & Seconds(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1728", "prediction": "all x y z.((Stopwatch(x) & Seconds(y) & Seconds(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1728", "prediction": "all x.(Stopwatch(x) -> UsedToMeasureSeconds(x))", "score": 0}
{"id": "eqasc_validation_1728", "prediction": "all x y.((Stopwatch(x) & Time(y)) -> MeasuresSeconds(x,y))", "score": 0}
{"id": "eqasc_validation_1728", "prediction": "all x y z.((Stopwatch(x) & Second(y) & Second(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1728", "prediction": "all x y.((Stopwatch(x) & Seconds(y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1728", "prediction": "all x y z.((Stopwatch(x) & Seconds(y) & Seconds(z)) -> UsedToMeasure(x,y,z))", "score": 0}
{"id": "eqasc_validation_1728", "prediction": "all x y.((Stopwatch(x) & Second(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1728", "prediction": "all x y z.((Stopwatch(x) & Seconds(y) & Moments(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1728", "prediction": "all x.(Stopwatch(x) -> MeasureSeconds(x))", "score": 0}
{"id": "eqasc_validation_1728", "prediction": "all x.((Stopwatch(x) & MeasuresSeconds(x)) -> UsedToMeasureSeconds(x))", "score": 0}
{"id": "eqasc_validation_1728", "prediction": "all x y z.((Stopwatch(x) & Seconds(y) & Time(z)) -> Measures(x,y,z))", "score": 0}
{"id": "eqasc_validation_1728", "prediction": "all x y.((Stopwatch(x) & MeasuresSeconds(x,y)) -> UsedToMeasureSeconds(x,y))", "score": 0}
{"id": "eqasc_validation_1728", "prediction": "all x y.((Stopwatch(x) & MeasuresSeconds(x,y)) -> UsedToMeasure(x,y))", "score": 0}
{"id": "eqasc_validation_1728", "prediction": "all x y.((Stopwatch(x) & MeasuresSeconds(y)) -> UsedToMeasureSeconds(x,y))", "score": 0}
{"id": "eqasc_validation_1729", "prediction": "all x.(Time(x) -> (MeasuredWithClock(x) | MeasuredWithWatch(x)))", "score": 0}
{"id": "eqasc_validation_1729", "prediction": "all x.(Time(x) -> (MeasuresWithClock(x) | MeasuresWithWatch(x)))", "score": 0}
{"id": "eqasc_validation_1729", "prediction": "all x y.((Time(x) & (Clock(y) | Watch(y))) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1729", "prediction": "all x.(Time(x) -> (MeasuredWith(x,Clock) | MeasuredWith(x,Watch)))", "score": 0}
{"id": "eqasc_validation_1729", "prediction": "all x.(Time(x) -> (MeasuredWith(x,clock) | MeasuredWith(x,watch)))", "score": 0}
{"id": "eqasc_validation_1729", "prediction": "all x y.((Time(x) & (Clock(y) | Watch(y))) -> MeasuredWith(x,y))", "score": 0}
{"id": "eqasc_validation_1729", "prediction": "all x y.((Time(x) & (Clock(y) | Watch(y))) -> Measured(x,y))", "score": 0}
{"id": "eqasc_validation_1729", "prediction": "all x y.((Time(x) & (Clock(y) | Watch(y))) -> MeasuresWith(x,y))", "score": 0}
{"id": "eqasc_validation_1729", "prediction": "all x.(Time(x) -> (MeasuresWith(x,Clock) | MeasuresWith(x,Watch)))", "score": 0}
{"id": "eqasc_validation_1729", "prediction": "all x.(Time(x) -> (Measures(x,Clock) | Measures(x,Watch)))", "score": 0}
{"id": "eqasc_validation_1729", "prediction": "all x y.((Time(x) & (Clock(y) | Watch(y))) -> Measurable(x,y))", "score": 0}
{"id": "eqasc_validation_1730", "prediction": "all x y.((Time(x) & Watch(y)) -> KeepsWith(x,y))", "score": 0}
{"id": "eqasc_validation_1730", "prediction": "all x y z.((Time(x) & Watch(y) & Watch(z)) -> KeepsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1730", "prediction": "all x y.((Time(x) & Watch(y)) -> KeepingWith(x,y))", "score": 0}
{"id": "eqasc_validation_1730", "prediction": "all x y z.((Time(x) & Watch(y) & Watch(z)) -> KeepingWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1730", "prediction": "all x y.((Time(x) & Watch(y)) -> HeldWith(x,y))", "score": 0}
{"id": "eqasc_validation_1730", "prediction": "all x y z.((Time(x) & Watch(y) & Watch(z)) -> HeldWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1730", "prediction": "all x y z.((Time(x) & Watch(y) & Time(z)) -> KeepsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1730", "prediction": "all x y z.((Time(x) & Watch(y) & Watch(z)) -> (KeepsWith(x,y,z) & Watch(w)))", "score": 0}
{"id": "eqasc_validation_1730", "prediction": "all x y z.((Time(x) & Watch(y) & Watch(z)) -> KeepsWithWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1730", "prediction": "all x y.((Time(x) & Watch(y)) -> (KeepsWith(x,y) & KeepsWith(x,y)))", "score": 0}
{"id": "eqasc_validation_1730", "prediction": "all x y z.((Time(x) & Watch(y) & Watch(z)) -> (KeepsWith(x,y,z) & Watch(y)))", "score": 0}
{"id": "eqasc_validation_1730", "prediction": "all x y z.((Time(x) & Watch(y) & Watch(z)) -> RemainsWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1730", "prediction": "all x y z.((Time(x) & Watch(y) & Watch(z)) -> RetainedWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1730", "prediction": "all x y.((Time(x) & Watch(y) & KeepsWith(x,y)) -> KeepsWith(x,y))", "score": 0}
{"id": "eqasc_validation_1730", "prediction": "all x.(Time(x) -> KeepsWithWatch(x))", "score": 0}
{"id": "eqasc_validation_1730", "prediction": "all x y.((Time(x) & Watch(y)) -> ConservedWith(x,y))", "score": 0}
{"id": "eqasc_validation_1731", "prediction": "all x.(Timing(x) -> Punctuality(x))", "score": 0}
{"id": "eqasc_validation_1731", "prediction": "all x.(Timing(x) -> TheEssenceOfPunctuality(x))", "score": 0}
{"id": "eqasc_validation_1731", "prediction": "all x y.((Timing(x) & Punctuality(y)) -> Essence(x,y))", "score": 0}
{"id": "eqasc_validation_1731", "prediction": "all x.((Timing(x) & Punctuality(x)) -> Essence(x))", "score": 0}
{"id": "eqasc_validation_1731", "prediction": "all x.(Time(x) -> Punctuality(x))", "score": 0}
{"id": "eqasc_validation_1731", "prediction": "all x.(Timing(x) -> IdenticalToPunctuality(x))", "score": 0}
{"id": "eqasc_validation_1731", "prediction": "all x.(Timing(x) -> PrecisePunctuality(x))", "score": 0}
{"id": "eqasc_validation_1731", "prediction": "all x.(Timing(x) -> EssenceOfPunctuality(x))", "score": 0}
{"id": "eqasc_validation_1731", "prediction": "all x.(Timing(x) -> EssentialOfPunctuality(x))", "score": 0}
{"id": "eqasc_validation_1731", "prediction": "all x.(Timing(x) -> PurposeOfPunctuality(x))", "score": 0}
{"id": "eqasc_validation_1731", "prediction": "all x.(Timing(x) -> (EssenceOfPunctuality(x)))", "score": 0}
{"id": "eqasc_validation_1731", "prediction": "all x.(Timing(x) -> PunctualityEssence(x))", "score": 0}
{"id": "eqasc_validation_1731", "prediction": "all x.((Timing(x) & Punctuality(x)) -> Essence(x,y))", "score": 0}
{"id": "eqasc_validation_1731", "prediction": "all x.(Timing(x) -> IsPunctuality(x))", "score": 0}
{"id": "eqasc_validation_1731", "prediction": "all x.((Timing(x) & Punctuality(y)) -> Essence(x,y))", "score": 0}
{"id": "eqasc_validation_1732", "prediction": "all x y.((Stopwatch(x) & Person(y)) -> HelpsBePunctual(x,y))", "score": 0}
{"id": "eqasc_validation_1732", "prediction": "all x y z.((Stopwatch(x) & Person(y) & Punctual(z)) -> HelpsBePunctual(x,y,z))", "score": 0}
{"id": "eqasc_validation_1732", "prediction": "all x y z.((Stopwatch(x) & Person(y) & Person(z)) -> HelpsBePunctual(x,y,z))", "score": 0}
{"id": "eqasc_validation_1732", "prediction": "all x y z.((Stopwatch(x) & Person(y) & Time(z)) -> HelpsBePunctual(x,y,z))", "score": 0}
{"id": "eqasc_validation_1732", "prediction": "all x y.((Stopwatch(x) & Person(y)) -> UsedToHelpBePunctual(x,y))", "score": 0}
{"id": "eqasc_validation_1732", "prediction": "all x y z.((Stopwatch(x) & Person(y) & Punctual(z)) -> HelpsBe(x,y,z))", "score": 0}
{"id": "eqasc_validation_1732", "prediction": "all x y.((Stopwatch(x) & Person(y) & UsedToHelpBePunctual(x,y)) -> HelpsBePunctual(x,y))", "score": 0}
{"id": "eqasc_validation_1732", "prediction": "all x y z.((Stopwatch(x) & Person(y) & Period(z)) -> HelpsBePunctual(x,y,z))", "score": 0}
{"id": "eqasc_validation_1732", "prediction": "all x y z.((Stopwatch(x) & Person(y) & Punctual(z)) -> HelpsBePunctual(x,y))", "score": 0}
{"id": "eqasc_validation_1732", "prediction": "all x y z.((Stopwatch(x) & Person(y) & Time(z)) -> HelpsBePunctual(x,y))", "score": 0}
{"id": "eqasc_validation_1732", "prediction": "all x y.((Stopwatch(x) & Person(y)) -> (HelpsBePunctual(x,y) & HelpsBePunctual(x,y)))", "score": 0}
{"id": "eqasc_validation_1732", "prediction": "all x y z.((Stopwatch(x) & Person(y) & Date(z)) -> HelpsBePunctual(x,y,z))", "score": 0}
{"id": "eqasc_validation_1732", "prediction": "all x y z.((Stopwatch(x) & Person(y) & Punctual(z)) -> UsedToHelpBePunctual(x,y,z))", "score": 0}
{"id": "eqasc_validation_1732", "prediction": "all x.(Stopwatch(x) -> HelpsPeopleBePunctual(x))", "score": 0}
{"id": "eqasc_validation_1732", "prediction": "all x y.((Stopwatch(x) & People(y)) -> HelpsBePunctual(x,y))", "score": 0}
{"id": "eqasc_validation_1732", "prediction": "all x y z.((Stopwatch(x) & Person(y) & Punctual(z)) -> UsedToHelpBe(x,y,z))", "score": 0}
{"id": "eqasc_validation_1733", "prediction": "all x.(KinneyFailure(x) -> MayBeTreatedWithDialysis(x))", "score": 0}
{"id": "eqasc_validation_1733", "prediction": "all x.(KidneyFailure(x) -> MayBeTreatedWithDialysis(x))", "score": 2}
{"id": "eqasc_validation_1733", "prediction": "all x.(KinneyFailure(x) -> (TreatmentWithDialysis(x)))", "score": 0}
{"id": "eqasc_validation_1733", "prediction": "all x.(KinneyFailure(x) -> CanBeTreatedWithDialysis(x))", "score": 0}
{"id": "eqasc_validation_1733", "prediction": "all x.(KidneyFailure(x) -> (TreatmentWithDialysis(x)))", "score": 4}
{"id": "eqasc_validation_1733", "prediction": "all x.(KinneyFailure(x) -> MayTreatWithDialysis(x))", "score": 0}
{"id": "eqasc_validation_1733", "prediction": "all x.(KidneyFailure(x) -> CanBeTreatedWithDialysis(x))", "score": 0}
{"id": "eqasc_validation_1733", "prediction": "all x y.((KidneyFailure(x) & Dialysis(y)) -> MayBeTreated(x,y))", "score": 2}
{"id": "eqasc_validation_1733", "prediction": "all x.(KinneyFailure(x) -> (TreatmentWithDialysis(x) | TreatmentWithDialysis(x)))", "score": 0}
{"id": "eqasc_validation_1733", "prediction": "all x.(KidneyFailure(x) -> (TreatmentWithDialysis(x) | TreatmentWithDialysis(x)))", "score": 4}
{"id": "eqasc_validation_1733", "prediction": "all x.(KinneyFailure(x) -> (Treatment(x,Dialysis) | Treatment(x,Dialysis)))", "score": 0}
{"id": "eqasc_validation_1733", "prediction": "all x y.((KinneyFailure(x) & Dialysis(y)) -> MayBeTreated(x,y))", "score": 0}
{"id": "eqasc_validation_1733", "prediction": "all x y.((KidneyFailure(x) & Dialysis(y)) -> CanBeTreated(x,y))", "score": 0}
{"id": "eqasc_validation_1733", "prediction": "all x.(KidneyFailure(x) -> MayTreatWithDialysis(x))", "score": 0}
{"id": "eqasc_validation_1733", "prediction": "all x y.((KidneyFailure(x) & Dialysis(y)) -> MayBeTreatedWith(x,y))", "score": 2}
{"id": "eqasc_validation_1733", "prediction": "all x y.((KidneyFailure(x) & Dialysis(y)) -> MayTreat(x,y))", "score": 2}
{"id": "eqasc_validation_1734", "prediction": "all x.(Dialysis(x) -> (CleaningBloodWithArtificialKneel(x)))", "score": 0}
{"id": "eqasc_validation_1734", "prediction": "all x y.((Dialysis(x) & ArtificialKneel(y)) -> CleansBloodWith(x,y))", "score": 0}
{"id": "eqasc_validation_1734", "prediction": "all x y.((Dialysis(x) & ArtificialKneel(y)) -> CleansBlood(x,y))", "score": 0}
{"id": "eqasc_validation_1734", "prediction": "all x y.((Dialysis(x) & ArtificialKnee(y)) -> CleansBloodWith(x,y))", "score": 0}
{"id": "eqasc_validation_1734", "prediction": "all x y.((Dialysis(x) & ArtificialKnee(y)) -> CleansBlood(x,y))", "score": 0}
{"id": "eqasc_validation_1734", "prediction": "all x y z.((Dialysis(x) & ArtificialKneel(y) & Blood(z)) -> CleansWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1734", "prediction": "all x y z.((Dialysis(x) & ArtificialKnee(y) & Blood(z)) -> CleansWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1734", "prediction": "all x.(Dialysis(x) -> CleansBloodWithArtificialKneel(x))", "score": 0}
{"id": "eqasc_validation_1734", "prediction": "all x.(Dialysis(x) -> (CleansBloodWithArtificialKneel(x) & CleansBloodWithArtificialKneel(x)))", "score": 0}
{"id": "eqasc_validation_1734", "prediction": "all x.(Dialysis(x) -> (CleaningBlood(x) & ArtificialKneel(x)))", "score": 0}
{"id": "eqasc_validation_1734", "prediction": "all x.(Dialysis(x) -> (CleansBloodWithArtificialKneel(x)))", "score": 0}
{"id": "eqasc_validation_1734", "prediction": "all x y z.((Dialysis(x) & Blood(y) & ArtificialKnee(z)) -> CleansWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1734", "prediction": "all x.(Dialysis(x) -> (CleaningBloodWithArtificialKneel(x) & CleansBloodWithArtificialKneel(x)))", "score": 0}
{"id": "eqasc_validation_1734", "prediction": "all x.(Dialysis(x) -> (CleaningBloodWithArtificialKnee(x) & ArtificialKneel(x)))", "score": 0}
{"id": "eqasc_validation_1734", "prediction": "all x y.((Dialysis(x) & ArtificialKneep(y)) -> CleansBloodWith(x,y))", "score": 0}
{"id": "eqasc_validation_1735", "prediction": "all x.(KidneyFailure(x) -> (CanBeTreatedByCleaningBloodWithArtificialKidney(x)))", "score": 0}
{"id": "eqasc_validation_1735", "prediction": "all x.(KinneyFailure(x) -> (CanBeTreatedByCleaningBloodWithArtificialKind(x)))", "score": 0}
{"id": "eqasc_validation_1735", "prediction": "all x.(KinneyFailure(x) -> (CleaningBloodWithArtificialKind(x) & KidneyFailure(x)))", "score": 0}
{"id": "eqasc_validation_1735", "prediction": "all x y.((KidneyFailure(x) & ArtificialKidney(y)) -> (CleaningBloodWithArtificialKidney(x,y)))", "score": 0}
{"id": "eqasc_validation_1735", "prediction": "all x.(KinneyFailure(x) -> (CanBeTreatedByCleaningBloodWithArtificialKneep(x)))", "score": 0}
{"id": "eqasc_validation_1735", "prediction": "all x.(KinneyFailure(x) -> (CleaningBloodWithArtificialKind(x)))", "score": 0}
{"id": "eqasc_validation_1735", "prediction": "all x.(KidneyFailure(x) -> (CanBeTreatedByCleaningBloodWithArtificialKind(x)))", "score": 0}
{"id": "eqasc_validation_1735", "prediction": "all x.(KinneyFailure(x) -> (CleaningBloodWithArtificialKneep(x) & KidneyFailure(x)))", "score": 0}
{"id": "eqasc_validation_1735", "prediction": "all x.(KinneyFailure(x) -> (CanBeTreatedByCleaningBloodWithArtificialKnee(x)))", "score": 0}
{"id": "eqasc_validation_1735", "prediction": "all x.(KidneyFailure(x) -> (CleaningBloodWithArtificialKidney(x)))", "score": 0}
{"id": "eqasc_validation_1735", "prediction": "all x y.((KidneyFailure(x) & ArtificialKidney(y)) -> (CleaningBlood(x,y) & ArtificialKidney(x)))", "score": 0}
{"id": "eqasc_validation_1735", "prediction": "all x.(KidneyFailure(x) -> (CanBeTreatedByCleaningBloodWithArtificialKneep(x)))", "score": 0}
{"id": "eqasc_validation_1735", "prediction": "all x y.((KidneyFailure(x) & ArtificialKidney(y)) -> (CleaningBlood(x,y) & UsesArtificialKidney(x)))", "score": 0}
{"id": "eqasc_validation_1735", "prediction": "all x y.((KidneyFailure(x) & ArtificialKidney(y)) -> (CleaningBloodWithArtificialKidney(x) & Treats(x,y)))", "score": 0}
{"id": "eqasc_validation_1735", "prediction": "all x y.((KidneyFailure(x) & ArtificialKidney(y)) -> (CleaningBlood(x,y) & UsingArtificialKidney(x)))", "score": 0}
{"id": "eqasc_validation_1735", "prediction": "all x y.((KidneyFailure(x) & ArtificialKidney(y)) -> (CleaningBloodWithArtificialKidney(x) & Treatment(x,y)))", "score": 0}
{"id": "eqasc_validation_1736", "prediction": "all x y.((KneepFailure(x) & WayOfCleaningBlood(y)) -> MayBeTreatedWith(x,y))", "score": 0}
{"id": "eqasc_validation_1736", "prediction": "all x y.((KneepFailure(x) & WayOfCleaningBlood(y)) -> MayBeTreated(x,y))", "score": 0}
{"id": "eqasc_validation_1736", "prediction": "all x y z.((KneephFailure(x) & WayOfCleaningBlood(y) & Blood(z)) -> MayBeTreatedWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1736", "prediction": "all x y z.((KneephFailure(x) & WayOfCleaningBlood(y) & Blood(z)) -> MayBeTreated(x,y,z))", "score": 0}
{"id": "eqasc_validation_1736", "prediction": "all x y z.((KneepFailure(x) & WayOfCleaningBlood(y) & Blood(z)) -> MayBeTreatedWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1736", "prediction": "all x y z.((KneepFailure(x) & WayOfCleaningBlood(y) & Blood(z)) -> MayBeTreated(x,y,z))", "score": 0}
{"id": "eqasc_validation_1736", "prediction": "all x.((KneepFailure(x) & CleansBlood(x)) -> MayBeTreated(x))", "score": 0}
{"id": "eqasc_validation_1736", "prediction": "all x y.((KneeFailure(x) & WayOfCleaningBlood(y)) -> MayBeTreatedWith(x,y))", "score": 0}
{"id": "eqasc_validation_1736", "prediction": "all x.((KneepFailure(x) & WayOfCleaningBlood(x)) -> MayBeTreated(x))", "score": 0}
{"id": "eqasc_validation_1736", "prediction": "all x y.((KneepFailure(x) & WayOfCleaningBlood(x)) -> MayBeTreatedWith(x,y))", "score": 0}
{"id": "eqasc_validation_1736", "prediction": "all x y.((KneeFailure(x) & WayOfCleaningBlood(y)) -> MayBeTreated(x,y))", "score": 0}
{"id": "eqasc_validation_1736", "prediction": "all x y.((KneepFailure(x) & MethodOfCleaningBlood(y)) -> MayBeTreatedWith(x,y))", "score": 0}
{"id": "eqasc_validation_1736", "prediction": "all x y.((KneepFailure(x) & WayOfCleaningBlood(x)) -> MayBeTreated(x,y))", "score": 0}
{"id": "eqasc_validation_1736", "prediction": "all x y.((KneepFailure(x) & MethodOfCleaningBlood(y)) -> MayBeTreated(x,y))", "score": 0}
{"id": "eqasc_validation_1736", "prediction": "all x y z.((KneephFailure(x) & WayOfCleaningBlood(y) & Blood(z)) -> MayTreat(x,y,z))", "score": 0}
{"id": "eqasc_validation_1736", "prediction": "all x.((KneepFailure(x) & CleansBlood(x)) -> MayBeTreatedWith(x,y))", "score": 0}
{"id": "eqasc_validation_1737", "prediction": "all x.(Dialysis(x) -> FiltersBlood(x))", "score": 0}
{"id": "eqasc_validation_1737", "prediction": "all x y.((Dialysis(x) & Blood(y)) -> Filters(x,y))", "score": 0}
{"id": "eqasc_validation_1737", "prediction": "all x.(Dialysis(x) -> (ProcedureToFilterBlood(x)))", "score": 0}
{"id": "eqasc_validation_1737", "prediction": "all x.(Dialysis(x) -> (FilterBlood(x) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_validation_1737", "prediction": "all x.(Dialysis(x) -> (FilterBlood(x) & FilterBlood(x)))", "score": 0}
{"id": "eqasc_validation_1737", "prediction": "all x.(Dialysis(x) -> (FiltsBlood(x) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_validation_1737", "prediction": "all x y z.((Dialysis(x) & Blood(y) & Blood(z)) -> Filters(x,y,z))", "score": 0}
{"id": "eqasc_validation_1737", "prediction": "all x.(Dialysis(x) -> (FilterBlood(x) | FilterBlood(x)))", "score": 0}
{"id": "eqasc_validation_1737", "prediction": "all x.(Dialysis(x) -> (Procedure(x) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_validation_1737", "prediction": "all x.(Dialysis(x) -> FilterBlood(x))", "score": 0}
{"id": "eqasc_validation_1737", "prediction": "all x.(Dialysis(x) -> (ProcedureToFilterBlood(x) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_validation_1737", "prediction": "all x y.((Dialysis(x) & Blood(y)) -> Filter(x,y))", "score": 0}
{"id": "eqasc_validation_1737", "prediction": "all x.(Dialysis(x) -> (FilterBlood(x) & FiltrateBlood(x)))", "score": 0}
{"id": "eqasc_validation_1737", "prediction": "all x.(Dialysis(x) -> exists y.(Blood(y) & Filters(x,y))))", "score": -1}
{"id": "eqasc_validation_1738", "prediction": "all x.(KinneyFailure(x) -> (TreatmentWithProcedure(x) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_validation_1738", "prediction": "all x.(KinneyFailure(x) -> (TreatsWithProcedure(x) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_validation_1738", "prediction": "all x.(KinneyFailure(x) -> (ProcedureToFilterBlood(x)))", "score": 0}
{"id": "eqasc_validation_1738", "prediction": "all x.(KinneyFailure(x) -> (TreatmentToFilterBlood(x)))", "score": 0}
{"id": "eqasc_validation_1738", "prediction": "all x.(KinneyFailure(x) -> MayBeTreatedWithProcedureToFilterBlood(x))", "score": 0}
{"id": "eqasc_validation_1738", "prediction": "all x y.((KinneyFailure(x) & Procedure(y)) -> FiltersBlood(x,y))", "score": 0}
{"id": "eqasc_validation_1738", "prediction": "all x y.((KidneyFailure(x) & Procedure(y)) -> FiltersBlood(x,y))", "score": 0}
{"id": "eqasc_validation_1738", "prediction": "all x.(KidneyFailure(x) -> (TreatmentWithProcedure(x) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_validation_1738", "prediction": "all x.(KinneyFailure(x) -> (Treatment(x) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_validation_1738", "prediction": "all x.(KinneyFailure(x) -> (Treatment(x) & FilterBlood(x)))", "score": 0}
{"id": "eqasc_validation_1738", "prediction": "all x.(KinneyFailure(x) -> (Procedure(x) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_validation_1738", "prediction": "all x y.((KinneyFailure(x) & Procedure(y)) -> FiltersBlood(y))", "score": 0}
{"id": "eqasc_validation_1738", "prediction": "all x y.((KidneyFailure(x) & Procedure(y)) -> FiltersBlood(y))", "score": 0}
{"id": "eqasc_validation_1738", "prediction": "all x.(KidneyFailure(x) -> (TreatmentToFilterBlood(x)))", "score": 0}
{"id": "eqasc_validation_1738", "prediction": "all x y.((KinneyFailure(x) & Procedure(y)) -> FilterBlood(x,y))", "score": 0}
{"id": "eqasc_validation_1738", "prediction": "all x y.((KidneyFailure(x) & Procedure(y)) -> FilterBlood(x,y))", "score": 0}
{"id": "eqasc_validation_1739", "prediction": "all x.((Kidney(x) | RenalFailure(x)) -> InabilityToDoJob(x))", "score": 0}
{"id": "eqasc_validation_1739", "prediction": "all x.((Kinney(x) | RenalFailure(x)) -> InabilityToDoJob(x))", "score": 0}
{"id": "eqasc_validation_1739", "prediction": "all x y.((Kidney(x) | RenalFailure(x)) -> InabilityToDoJob(y))", "score": 0}
{"id": "eqasc_validation_1739", "prediction": "all x.(KinneyFailure(x) -> InabilityToDoJob(x))", "score": 0}
{"id": "eqasc_validation_1739", "prediction": "all x.(KinneyFailure(x) -> (InabilityToDoJob(x) & Kidney(x)))", "score": 0}
{"id": "eqasc_validation_1739", "prediction": "all x.(KinneyFailure(x) -> (InabilityToDoJob(x) | InabilityToDoJob(x)))", "score": 0}
{"id": "eqasc_validation_1739", "prediction": "all x.(KidneyFailure(x) -> InabilityToDoJob(x))", "score": 0}
{"id": "eqasc_validation_1739", "prediction": "all x.(Kinney(x) -> (InabilityToDoJob(x) | InabilityToDoJob(x)))", "score": 0}
{"id": "eqasc_validation_1739", "prediction": "all x y.((Kinney(x) | RenalFailure(x)) -> InabilityToDoJob(y))", "score": 0}
{"id": "eqasc_validation_1739", "prediction": "all x.(Kinney(x) -> (InabilityToDoJob(x) & KidneyFailure(x)))", "score": 0}
{"id": "eqasc_validation_1739", "prediction": "all x.(Kinney(x) -> (InabilityToDoJob(x) & Kidney(x)))", "score": 0}
{"id": "eqasc_validation_1739", "prediction": "all x.(KidneyFailure(x) -> (InabilityToDoJob(x) & Kidney(x)))", "score": 0}
{"id": "eqasc_validation_1739", "prediction": "all x.(KidneyFailure(x) -> (InabilityToDoJob(x) | InabilityToDoJob(x)))", "score": 0}
{"id": "eqasc_validation_1739", "prediction": "all x.(Kinney(x) | RenalFailure(x)) -> InabilityToDoJob(x))", "score": -1}
{"id": "eqasc_validation_1739", "prediction": "all x y.((Kidney(x) | RenalFailure(x)) -> InabilityToDoJob(x,y))", "score": 0}
{"id": "eqasc_validation_1739", "prediction": "all x y.((Kidney(x) | RenalFailure(x)) -> InabilityToDoJob(x))", "score": 0}
{"id": "eqasc_validation_1740", "prediction": "all x y z.((Dialysis(x) & Patient(y) & RenalFailure(z)) -> UsedToTreat(x,y,z))", "score": 0}
{"id": "eqasc_validation_1740", "prediction": "all x y.((Dialysis(x) & Patient(y) & RenalFailure(y)) -> UsedToTreat(x,y))", "score": 0}
{"id": "eqasc_validation_1740", "prediction": "all x y.((Dialysis(x) & Patient(y)) -> UsedToTreat(x,y))", "score": 0}
{"id": "eqasc_validation_1740", "prediction": "all x y z.((Dialysis(x) & Patient(y) & RenalFailure(z)) -> Treats(x,y,z))", "score": 0}
{"id": "eqasc_validation_1740", "prediction": "all x y.((Dialysis(x) & Patient(y) & KidneyFailure(y)) -> UsedToTreat(x,y))", "score": 0}
{"id": "eqasc_validation_1740", "prediction": "all x y.((Dialysis(x) & Patient(y)) -> TreatsRenalFailure(x,y))", "score": 0}
{"id": "eqasc_validation_1740", "prediction": "all x.(Dialysis(x) -> (TreatsPatientsWithRenalFailure(x)))", "score": 0}
{"id": "eqasc_validation_1740", "prediction": "all x.(Dialysis(x) -> TreatsPatientsWithRenalFailure(x))", "score": 0}
{"id": "eqasc_validation_1740", "prediction": "all x.(Dialysis(x) -> TreatsRenalFailure(x))", "score": 0}
{"id": "eqasc_validation_1740", "prediction": "all x y.((Dialysis(x) & Patient(y)) -> TreatsRetinalFailure(x,y))", "score": 0}
{"id": "eqasc_validation_1740", "prediction": "all x y.((Dialysis(x) & Patient(y)) -> (Treats(x,y) & HasRenalFailure(y)))", "score": 0}
{"id": "eqasc_validation_1740", "prediction": "all x y.((Dialysis(x) & Patient(y)) -> TreatsWithRenalFailure(x,y))", "score": 0}
{"id": "eqasc_validation_1740", "prediction": "all x y z.((Dialysis(x) & Patient(y) & RenalFailure(z)) -> Treat(x,y,z))", "score": 0}
{"id": "eqasc_validation_1740", "prediction": "all x.(Dialysis(x) -> TreatsRelevantFailure(x))", "score": 0}
{"id": "eqasc_validation_1740", "prediction": "all x y z.((Dialysis(x) & Patient(y) & RenalFailure(z)) -> Treatment(x,y,z))", "score": 0}
{"id": "eqasc_validation_1741", "prediction": "all x y.((KinneyFailure(x) & Procedure(y)) -> (Treats(x,y) & FiltersBlood(y)))", "score": 0}
{"id": "eqasc_validation_1741", "prediction": "all x.(KinneyFailure(x) -> (TreatmentWithProcedure(x) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_validation_1741", "prediction": "all x.(KinneyFailure(x) -> (TreatsWithProcedure(x) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_validation_1741", "prediction": "all x.(KinneyFailure(x) -> (TreatmentWithProcedureToFilterBlood(x)))", "score": 0}
{"id": "eqasc_validation_1741", "prediction": "all x.(KinneyFailure(x) -> (TreatsWithProcedureToFilterBlood(x)))", "score": 0}
{"id": "eqasc_validation_1741", "prediction": "all x y z.((KinneyFailure(x) & Procedure(y) & Blood(z)) -> (Treats(x,y,z) & Filters(y,z)))", "score": 0}
{"id": "eqasc_validation_1741", "prediction": "all x y z.((KidneyFailure(x) & Procedure(y) & Blood(z)) -> (Treats(x,y,z) & Filters(y,z)))", "score": 0}
{"id": "eqasc_validation_1741", "prediction": "all x.(KinneyFailure(x) -> MayBeTreatedWithProcedureToFilterBlood(x))", "score": 0}
{"id": "eqasc_validation_1741", "prediction": "all x.(KinneyFailure(x) -> (ProcedureToFilterBlood(x)))", "score": 0}
{"id": "eqasc_validation_1741", "prediction": "all x.(KinneyFailure(x) -> (TreatmentToFilterBlood(x) & KidneyFailure(x)))", "score": 0}
{"id": "eqasc_validation_1741", "prediction": "all x y.((KinneyFailure(x) & Procedure(y)) -> (Treats(x,y) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_validation_1741", "prediction": "all x y z.((KinneyFailure(x) & Procedure(y) & Blood(z)) -> (Treats(x,y) & Filters(y,z)))", "score": 0}
{"id": "eqasc_validation_1741", "prediction": "all x y.((KinneyFailure(x) & Procedure(y) & FiltersBlood(y)) -> MayBeTreatedWith(x,y))", "score": 0}
{"id": "eqasc_validation_1741", "prediction": "all x y z.((KidneyFailure(x) & Procedure(y) & Blood(z)) -> (Treats(x,y) & Filters(y,z)))", "score": 0}
{"id": "eqasc_validation_1741", "prediction": "all x y.((KinneyFailure(x) & Procedure(y) & FiltersBlood(y)) -> MayBeTreated(x,y))", "score": 0}
{"id": "eqasc_validation_1741", "prediction": "all x y z.((KinneyFailure(x) & Procedure(y) & Blood(z)) -> (Treats(y,z) & Filters(y,z)))", "score": 0}
{"id": "eqasc_validation_1742", "prediction": "all x.(Dialysis(x) -> (NecessaryToFilterBlood(x) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_validation_1742", "prediction": "all x.(Dialysis(x) -> (NecessaryToFilterBlood(x) | NecessaryToFilterBlood(x)))", "score": 0}
{"id": "eqasc_validation_1742", "prediction": "all x.(Dialysis(x) -> (NecessaryForFilteringBlood(x) | NecessaryForFilteringBlood(x)))", "score": 0}
{"id": "eqasc_validation_1742", "prediction": "all x.(Dialysis(x) -> (NecessaryToFilterBlood(x) & FilterBlood(x)))", "score": 0}
{"id": "eqasc_validation_1742", "prediction": "all x y.((Dialysis(x) & Blood(y)) -> (NecessaryToFilter(x,y) | NecessaryToFilter(x,y)))", "score": 0}
{"id": "eqasc_validation_1742", "prediction": "all x.(Dialysis(x) -> (NecessaryForFilteringBlood(x) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_validation_1742", "prediction": "all x.(Dialysis(x) -> (NecessaryToFilterBlood(x) & -NecessaryToFilterBlood(x)))", "score": 0}
{"id": "eqasc_validation_1742", "prediction": "all x y.((Dialysis(x) & Blood(y)) -> (NecessaryForFiltering(x,y) | NecessaryForFiltering(x,y)))", "score": 0}
{"id": "eqasc_validation_1742", "prediction": "all x y.((Dialysis(x) & Blood(y)) -> (NecessaryToFilter(x,y) & Filters(x,y)))", "score": 0}
{"id": "eqasc_validation_1742", "prediction": "all x y z.((Dialysis(x) & Blood(y) & Blood(z)) -> (NecessaryToFilter(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1742", "prediction": "all x y.((Dialysis(x) & Blood(y)) -> Filters(x,y))", "score": 0}
{"id": "eqasc_validation_1742", "prediction": "all x y z.((Dialysis(x) & Blood(y) & Blood(z)) -> (NecessaryToFilter(x,y,z) & Filters(x,y)))", "score": 0}
{"id": "eqasc_validation_1742", "prediction": "all x y.((Dialysis(x) & Blood(y)) -> (NecessaryToFilter(x,y)))", "score": 0}
{"id": "eqasc_validation_1742", "prediction": "all x y z.((Dialysis(x) & Blood(y) & Blood(z)) -> (NecessaryToFilter(x,y,z) & Filters(x,y,z)))", "score": 0}
{"id": "eqasc_validation_1743", "prediction": "all x y.((KneepFailure(x) & Procedure(y)) -> (Treats(x,y) & FiltersBlood(y)))", "score": 0}
{"id": "eqasc_validation_1743", "prediction": "all x y.((KneeFailure(x) & Procedure(y)) -> (Treats(x,y) & FiltersBlood(y)))", "score": 0}
{"id": "eqasc_validation_1743", "prediction": "all x y.((KneephFailure(x) & Procedure(y)) -> (Treats(x,y) & FiltersBlood(y)))", "score": 0}
{"id": "eqasc_validation_1743", "prediction": "all x.(KneeFailure(x) -> (TreatsWithProcedure(x) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_validation_1743", "prediction": "all x y z.((KneephFailure(x) & Procedure(y) & Blood(z)) -> (Treats(x,y,z) & Filters(y,z)))", "score": 0}
{"id": "eqasc_validation_1743", "prediction": "all x y.((KneefFailure(x) & Procedure(y)) -> (Treats(x,y) & FiltersBlood(y)))", "score": 0}
{"id": "eqasc_validation_1743", "prediction": "all x.(KneeFailure(x) -> (TreatmentWithProcedure(x) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_validation_1743", "prediction": "all x y z.((KneephFailure(x) & Procedure(y) & Blood(z)) -> (Treats(x,y) & Filters(y,z)))", "score": 0}
{"id": "eqasc_validation_1743", "prediction": "all x.(KneeFailure(x) -> (TreatsWithProcedureToFilterBlood(x)))", "score": 0}
{"id": "eqasc_validation_1743", "prediction": "all x y z.((KneephFailure(x) & Procedure(y) & Blood(z)) -> (Treats(y,z) & Filters(y,z)))", "score": 0}
{"id": "eqasc_validation_1743", "prediction": "all x.(KneeFailure(x) -> MayBeTreatedWithProcedureToFilterBlood(x))", "score": 0}
{"id": "eqasc_validation_1743", "prediction": "all x y z.((KneephFailure(x) & Procedure(y) & Blood(z) & Filters(y,z)) -> MayBeTreatedWith(x,y,z))", "score": 0}
{"id": "eqasc_validation_1743", "prediction": "all x.((KneepFailure(x) & FilterBlood(x)) -> MayBeTreated(x))", "score": 0}
{"id": "eqasc_validation_1743", "prediction": "all x y.((KneeFailure(x) & Procedure(y) & FiltersBlood(y)) -> MayBeTreatedWith(x,y))", "score": 0}
{"id": "eqasc_validation_1743", "prediction": "all x y z.((KneephFailure(x) & Procedure(y) & Blood(z) & Filters(y,z)) -> MayBeTreated(x,y,z))", "score": 0}
{"id": "eqasc_validation_1743", "prediction": "all x y.((KneepFailure(x) & Procedure(y) & FiltersBlood(y)) -> MayBeTreatedWith(x,y))", "score": 0}
{"id": "eqasc_validation_1744", "prediction": "all x.(Dialysis(x) -> CleansBlood(x))", "score": 0}
{"id": "eqasc_validation_1744", "prediction": "all x.(Dialysis(x) -> (MechanicalProcessOfCleaningBlood(x)))", "score": 0}
{"id": "eqasc_validation_1744", "prediction": "all x y.((Dialysis(x) & Blood(y)) -> Cleans(x,y))", "score": 0}
{"id": "eqasc_validation_1744", "prediction": "all x.(Dialysis(x) -> CleaningBlood(x))", "score": 0}
{"id": "eqasc_validation_1744", "prediction": "all x.(Dialysis(x) -> (MechanicalProcessOfCleaning(x) & Blood(x)))", "score": 0}
{"id": "eqasc_validation_1744", "prediction": "all x.(Dialysis(x) -> (MechanicalProcess(x) & CleansBlood(x)))", "score": 0}
{"id": "eqasc_validation_1744", "prediction": "all x.(Dialysis(x) -> (MechanicalProcessOfCleaningBlood(x) & CleansBlood(x)))", "score": 0}
{"id": "eqasc_validation_1744", "prediction": "all x y.((Dialysis(x) & Blood(y)) -> CleaningProcess(x,y))", "score": 0}
{"id": "eqasc_validation_1744", "prediction": "all x y z.((Dialysis(x) & Blood(y) & Blood(z)) -> Cleans(x,y,z))", "score": 0}
{"id": "eqasc_validation_1744", "prediction": "all x y z.((Dialysis(x) & Blood(y) & MechanicalProcess(z)) -> Cleans(x,y,z))", "score": 0}
{"id": "eqasc_validation_1744", "prediction": "all x y.((Dialysis(x) & Blood(y)) -> Cleaning(x,y))", "score": 0}
{"id": "eqasc_validation_1744", "prediction": "all x y.((Dialysis(x) & Blood(y)) -> (MechanicalProcess(x,y) & Cleans(x,y)))", "score": 0}
{"id": "eqasc_validation_1745", "prediction": "all x.(KinneyFailure(x) -> MayBeTreatedByMechanicalProcessOfCleaningBlood(x))", "score": 0}
{"id": "eqasc_validation_1745", "prediction": "all x.(KidneyFailure(x) -> MayBeTreatedByMechanicalProcessOfCleaningBlood(x))", "score": 0}
{"id": "eqasc_validation_1745", "prediction": "all x y.((KidneyFailure(x) & MechanicalProcessOfCleaningBlood(y)) -> MayBeTreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1745", "prediction": "all x y.((KinneyFailure(x) & MechanicalProcessOfCleaningBlood(y)) -> MayBeTreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1745", "prediction": "all x y z.((KidneyFailure(x) & MechanicalProcess(y) & Blood(z)) -> MayBeTreatedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1745", "prediction": "all x y.((KidneyFailure(x) & MechanicalProcessOfCleaning(y)) -> MayBeTreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1745", "prediction": "all x y.((KidneyFailure(x) & MechanicalProcessOfCleaningBlood(y)) -> MayBeTreated(x,y))", "score": 0}
{"id": "eqasc_validation_1745", "prediction": "all x y z.((KinneyFailure(x) & MechanicalProcess(y) & Blood(z)) -> MayBeTreatedBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_1745", "prediction": "all x y.((KidneyFailure(x) & MechanicalProcessOfCleaning(x,y)) -> MayBeTreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1745", "prediction": "all x.(KinneyFailure(x) -> (MechanicalProcessOfCleaningBlood(x) & MayBeTreatedBy(x)))", "score": 0}
{"id": "eqasc_validation_1745", "prediction": "all x.(KinneyFailure(x) -> (MechanicalProcessOfCleaningBlood(x) & Treats(x,y)))", "score": 0}
{"id": "eqasc_validation_1745", "prediction": "all x y.((KinneyFailure(x) & MechanicalProcessOfCleaning(y)) -> MayBeTreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1745", "prediction": "all x y.((KinneyFailure(x) & MechanicalProcessOfCleaningBlood(y)) -> MayBeTreated(x,y))", "score": 0}
{"id": "eqasc_validation_1745", "prediction": "all x.(KinneyFailure(x) -> (MechanicalProcessOfCleaningBlood(x) & MayBeTreated(x)))", "score": 0}
{"id": "eqasc_validation_1745", "prediction": "all x y.((KidneyFailure(x) & MechanicalProcessOfCleaningBlood(x)) -> MayBeTreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1745", "prediction": "all x y.((KinneyFailure(x) & MechanicalProcess(y)) -> MayBeTreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1746", "prediction": "all x.(DiabeticKneelDisease(x) & KidneyFailure(x) & DiabetesRelatedKneelProblems(x))", "score": 0}
{"id": "eqasc_validation_1746", "prediction": "all x.(DiabeticKindDisease(x) & KidneyFailure(x) & DiabetesRelatedKneepProblems(x))", "score": 0}
{"id": "eqasc_validation_1746", "prediction": "all x.(DiabeticKneelDisease(x) & KidneyFailure(x) & DiabetesRelatedKneemProblems(x))", "score": 0}
{"id": "eqasc_validation_1746", "prediction": "all x y z.((DiabeticKneelDisease(x) & KidneyFailure(y) & DiabetesRelatedKneelProblem(z)) -> (DiabeticKneelDisease(x) & KidneyFailure(y) & DiabetesRelatedKneelProblem(z)))", "score": 0}
{"id": "eqasc_validation_1746", "prediction": "all x y z.((DiabeticKneelDisease(x) & KidneyFailure(y) & DiabetesRelatedKneemProblem(z)) -> (DiabeticKneelDisease(x) & KidneyFailure(y) & DiabetesRelatedKneemProblem(z)))", "score": 0}
{"id": "eqasc_validation_1746", "prediction": "all x.(DiabeticKinneyDisease(x) & KidneyFailure(x) & DiabetesRelatedKneepProblems(x))", "score": 0}
{"id": "eqasc_validation_1746", "prediction": "all x y z.((DiabeticKneelDisease(x) & KidneyFailure(y) & DiabetesRelatedKneelProblem(z)) -> (DiabeticKneelDisease(x) & KidneyFailure(y) & OtherDiabeticKneelProblems(z)))", "score": 0}
{"id": "eqasc_validation_1746", "prediction": "all x y z.((DiabeticKneelDisease(x) & KidneyFailure(y) & DiabetesRelatedKneemProblem(z)) -> (DiabeticKneelDisease(x) & KidneyFailure(y) & OtherDiabeticKneemProblems(z)))", "score": 0}
{"id": "eqasc_validation_1746", "prediction": "all x y z.((DiabeticKneelDisease(x) & KidneyFailure(y) & DiabetesRelatedKneelProblems(z)) -> (DiabeticKneelDisease(x) & KidneyFailure(y) & DiabetesRelatedKneelProblems(z)))", "score": 0}
{"id": "eqasc_validation_1746", "prediction": "all x.(DiabeticKneelDisease(x) & KidneyFailure(x) & OtherDiabeticKneelProblems(x))", "score": 0}
{"id": "eqasc_validation_1746", "prediction": "all x.(DiabeticKneepDisease(x) & KidneyFailure(x) & DiabetesRelatedKneepProblems(x))", "score": 0}
{"id": "eqasc_validation_1746", "prediction": "all x y z.((DiabeticKneelDisease(x) & KidneyFailure(y) & DiabetesRelatedKneemProblems(z)) -> (DiabeticKneelDisease(x) & KidneyFailure(y) & DiabetesRelatedKneemProblems(z)))", "score": 0}
{"id": "eqasc_validation_1746", "prediction": "all x y z.((DiabeticKneelDisease(x) & KidneyFailure(y) & DiabetesRelatedKneelProblems(z)) -> (DiabeticKneelDisease(x) & KidneyFailure(y) & OtherDiabeticKneelProblems(z)))", "score": 0}
{"id": "eqasc_validation_1746", "prediction": "all x y z.((DiabeticKneelDisease(x) & KidneyFailure(y) & DiabetesRelatedKneelProblem(z)) -> (DiabeticKneelDisease(x) | KidneyFailure(y) | DiabetesRelatedKneelProblem(z)))", "score": 0}
{"id": "eqasc_validation_1746", "prediction": "all x y z.((DiabeticKneelDisease(x) & KidneyFailure(y) & DiabetesRelatedKneemProblems(z)) -> (DiabeticKneelDisease(x) & KidneyFailure(y) & OtherDiabeticKneemProblems(z)))", "score": 0}
{"id": "eqasc_validation_1746", "prediction": "all x y z.((DiabeticKneelDisease(x) & KidneyFailure(y) & DiabetesRelatedKneemProblem(z)) -> (DiabeticKneelDisease(x) | KidneyFailure(y) | DiabetesRelatedKneemProblem(z)))", "score": 0}
{"id": "eqasc_validation_1747", "prediction": "all x.(DiabeticEffect(x) -> CanBeTreatedWithDialysis(x))", "score": 0}
{"id": "eqasc_validation_1747", "prediction": "all x.((DiabeticEffect(x) & Dialysis(x)) -> CanBeTreated(x))", "score": 0}
{"id": "eqasc_validation_1747", "prediction": "all x.((DiabeticEffect(x) & Dialysis(x)) -> Treatable(x))", "score": 0}
{"id": "eqasc_validation_1747", "prediction": "all x.(DiabeticEffect(x) -> TreatableWithDialysis(x))", "score": 0}
{"id": "eqasc_validation_1747", "prediction": "all x.(DiabeticEffect(x) -> TreatedWithDialysis(x))", "score": 0}
{"id": "eqasc_validation_1747", "prediction": "all x.(Diabetes(x) -> CanBeTreatedWithDialysis(x))", "score": 0}
{"id": "eqasc_validation_1747", "prediction": "all x y.((DiabeticEffect(x) & Dialysis(y)) -> CanBeTreated(x,y))", "score": 0}
{"id": "eqasc_validation_1747", "prediction": "all x y.((DiabeticEffect(x) & Dialysis(y)) -> Treatable(x,y))", "score": 0}
{"id": "eqasc_validation_1747", "prediction": "all x.(DiabeticEffect(x) -> CanTreatWithDialysis(x))", "score": 0}
{"id": "eqasc_validation_1747", "prediction": "all x.((DiabeticEffect(x) & Dialysis(x)) -> Treats(x))", "score": 0}
{"id": "eqasc_validation_1747", "prediction": "all x.((DiabeticEffect(x) & Dialysis(x)) -> Treatment(x))", "score": 0}
{"id": "eqasc_validation_1747", "prediction": "all x.((DiabeticEffect(x) & Dialysis(x)) -> Treated(x))", "score": 0}
{"id": "eqasc_validation_1747", "prediction": "all x y.((DiabeticEffect(x) & Dialysis(y)) -> CanTreat(x,y))", "score": 0}
{"id": "eqasc_validation_1747", "prediction": "all x.((DiabeticEffect(x) & Dialysis(x)) -> Treats(x,y))", "score": 0}
{"id": "eqasc_validation_1748", "prediction": "all x.(KinneyFailure(x) -> DeathSentence(x))", "score": 0}
{"id": "eqasc_validation_1748", "prediction": "all x.(KidneyFailure(x) -> DeathSentence(x))", "score": 0}
{"id": "eqasc_validation_1748", "prediction": "all x.(KinneyFailure(x) -> DeathSentencing(x))", "score": 0}
{"id": "eqasc_validation_1748", "prediction": "all x.(KinneyFailure(x) -> DeathSpeech(x))", "score": 0}
{"id": "eqasc_validation_1748", "prediction": "all x.(KinneyFailure(x) -> DeathSection(x))", "score": 0}
{"id": "eqasc_validation_1748", "prediction": "all x.(KidneyFailure(x) -> DeathSentencing(x))", "score": 0}
{"id": "eqasc_validation_1748", "prediction": "all x.(KinneyFailure(x) -> DeathSentee(x))", "score": 0}
{"id": "eqasc_validation_1748", "prediction": "all x y.((KinneyFailure(x) & DeathSentence(y)) -> KidneyFailure(x))", "score": 0}
{"id": "eqasc_validation_1748", "prediction": "all x y.((KinneyFailure(x) & DeathSentence(y)) -> KidneyFailure(x,y))", "score": 0}
{"id": "eqasc_validation_1748", "prediction": "all x.(KinneyFailure(x) -> DeathPenalty(x))", "score": 0}
{"id": "eqasc_validation_1748", "prediction": "all x.(KinneyFailure(x) -> DeathPension(x))", "score": 0}
{"id": "eqasc_validation_1748", "prediction": "all x.(KidneyFailure(x) -> DeathSection(x))", "score": 0}
{"id": "eqasc_validation_1748", "prediction": "all x.(KidneyFailure(x) -> DeathSpeech(x))", "score": 0}
{"id": "eqasc_validation_1748", "prediction": "all x.(KinneyFailure(x) -> DeathPence(x))", "score": 0}
{"id": "eqasc_validation_1749", "prediction": "all x.(LackOfDialysis(x) -> MayLeadToDeath(x))", "score": 0}
{"id": "eqasc_validation_1749", "prediction": "all x.((LackOfDialysis(x)) -> MayLeadToDeath(x))", "score": 0}
{"id": "eqasc_validation_1749", "prediction": "all x.((LackOfDialysis(x) & LeadsToDeath(x)) -> MayLeadToDeath(x))", "score": 0}
{"id": "eqasc_validation_1749", "prediction": "all x y.((LackOfDialysis(x) & Death(y)) -> MayLeadTo(x,y))", "score": 0}
{"id": "eqasc_validation_1749", "prediction": "all x.((LackOfDialysis(x) & MayLeadToDeath(x)) -> MayLeadToDeath(x))", "score": 0}
{"id": "eqasc_validation_1749", "prediction": "all x.((LackOfDialysis(x) & Death(x)) -> MayLeadTo(x))", "score": 0}
{"id": "eqasc_validation_1749", "prediction": "all x.(LackOfDialysis(x) -> LeadsToDeath(x))", "score": 0}
{"id": "eqasc_validation_1749", "prediction": "exists x.(LackOfDialysis(x) & MayLeadToDeath(x))", "score": 0}
{"id": "eqasc_validation_1749", "prediction": "all x.(LeafOfDialysis(x) -> MayLeadToDeath(x))", "score": 0}
{"id": "eqasc_validation_1749", "prediction": "all x.((LackOfDialysis(x) & MayLeadToDeath(x)) -> CanLeadToDeath(x))", "score": 0}
{"id": "eqasc_validation_1749", "prediction": "all x.((LackOfDialysis(x) & LeadsToDeath(x)) -> CanLeadToDeath(x))", "score": 0}
{"id": "eqasc_validation_1749", "prediction": "all x.(LackOfDialysis(x) -> MayLeadToDaily(x))", "score": 0}
{"id": "eqasc_validation_1749", "prediction": "all x.((LackOfDialysis(x) & LeadsToDeath(x)) -> LeadsToDeath(x))", "score": 0}
{"id": "eqasc_validation_1749", "prediction": "all x.((LackOfDialysis(x) & Death(x)) -> MayLeadTo(x,y))", "score": 0}
{"id": "eqasc_validation_1749", "prediction": "all x.(LackOfDialysis(x) -> MayLeadToDisaster(x))", "score": 0}
{"id": "eqasc_validation_1750", "prediction": "all x.(KinneyFailure(x) -> (CleaningBloodWithArtificialKneel(x)))", "score": 0}
{"id": "eqasc_validation_1750", "prediction": "all x.(KidneyFailure(x) -> (CleaningBloodWithArtificialKneel(x)))", "score": 0}
{"id": "eqasc_validation_1750", "prediction": "all x.(KinneyFailure(x) -> (CleaningBloodWithArtificialKind(x)))", "score": 0}
{"id": "eqasc_validation_1750", "prediction": "all x.(KinneyFailure(x) -> (CleaningBloodWithArtificialKnee(x)))", "score": 0}
{"id": "eqasc_validation_1750", "prediction": "all x.(KinneyFailure(x) -> (CleanBlood(x) & ArtificialKneel(x)))", "score": 0}
{"id": "eqasc_validation_1750", "prediction": "all x.(KidneyFailure(x) -> (CleaningBloodWithArtificialKind(x)))", "score": 0}
{"id": "eqasc_validation_1750", "prediction": "all x.(KidneyFailure(x) -> (CleanBlood(x) & ArtificialKneel(x)))", "score": 0}
{"id": "eqasc_validation_1750", "prediction": "all x.(KidneyFailure(x) -> (CleaningBloodWithArtificialKnee(x)))", "score": 0}
{"id": "eqasc_validation_1750", "prediction": "all x.(KinneyFailure(x) -> (CleanBlood(x) & UseArtificialKneel(x)))", "score": 0}
{"id": "eqasc_validation_1750", "prediction": "all x.(KidneyFailure(x) -> (CleanBlood(x) & UseArtificialKneel(x)))", "score": 0}
{"id": "eqasc_validation_1750", "prediction": "all x.(KinneyFailure(x) -> (CleaningBlood(x) & ArtificialKneel(x)))", "score": 0}
{"id": "eqasc_validation_1750", "prediction": "all x.(KinneyFailure(x) -> (CleanBloodWithArtificialKneel(x)))", "score": 0}
{"id": "eqasc_validation_1750", "prediction": "all x.(KidneyFailure(x) -> (CleaningBlood(x) & ArtificialKneel(x)))", "score": 0}
{"id": "eqasc_validation_1750", "prediction": "all x.(KinneyFailure(x) -> (CanBeTreatedByCleaningBloodWithArtificialKneel(x)))", "score": 0}
{"id": "eqasc_validation_1750", "prediction": "all x.(KinneyFailure(x) -> (CleanBloodWithArtificialKnee(x)))", "score": 0}
{"id": "eqasc_validation_1750", "prediction": "all x.(KinneyFailure(x) -> (CanBeTreatedByCleaningBloodWithArtificialKind(x)))", "score": 0}
{"id": "eqasc_validation_1751", "prediction": "all x.(RenalFailure(x) -> KidneyFailure(x))", "score": 8}
{"id": "eqasc_validation_1751", "prediction": "all x.(RenalFailure(x) -> MeansKneepFailure(x))", "score": 0}
{"id": "eqasc_validation_1751", "prediction": "all x y.((RenalFailure(x) & KidneyFailure(y)) -> Means(x,y))", "score": 0}
{"id": "eqasc_validation_1751", "prediction": "all x.(RentalFailure(x) -> KidneyFailure(x))", "score": 0}
{"id": "eqasc_validation_1751", "prediction": "all x.(RenalFailure(x) -> (KneepFailure(x) | KidneyFailure(x)))", "score": 0}
{"id": "eqasc_validation_1751", "prediction": "all x.((RenalFailure(x) & KidneyFailure(x)) -> RenalFailure(x))", "score": 0}
{"id": "eqasc_validation_1751", "prediction": "all x.((RenalFailure(x) & KidneyFailure(x)) -> Means(x,y))", "score": 0}
{"id": "eqasc_validation_1751", "prediction": "all x.(RenalFailure(x) -> CausesKneepFailure(x))", "score": 0}
{"id": "eqasc_validation_1751", "prediction": "all x.(RenalFailure(x) -> (KneepFailure(x) & KidneyFailure(x)))", "score": 8}
{"id": "eqasc_validation_1751", "prediction": "all x.((RenalFailure(x) & KidneyFailure(x)) -> Means(x))", "score": 0}
{"id": "eqasc_validation_1751", "prediction": "all x.(RenalFailure(x) -> RenalFailure(x))", "score": 0}
{"id": "eqasc_validation_1752", "prediction": "all x.(RenalFailure(x) -> (TreatmentWithDialysis(x) | TreatmentWithDialysis(x)))", "score": 4}
{"id": "eqasc_validation_1752", "prediction": "all x y.((RenalFailure(x) & Dialysis(y)) -> MayBeTreatedWith(x,y))", "score": 2}
{"id": "eqasc_validation_1752", "prediction": "all x.((RenalFailure(x) & Dialysis(x)) -> MayBeTreatedWith(x,Dialysis))", "score": 0}
{"id": "eqasc_validation_1752", "prediction": "all x y.((RenalFailure(x) & Dialysis(y)) -> MayTreatWith(x,y))", "score": 0}
{"id": "eqasc_validation_1752", "prediction": "all x.((RenalFailure(x) & Dialysis(x)) -> MayTreatWith(x,Dialysis))", "score": 0}
{"id": "eqasc_validation_1752", "prediction": "all x.((RenalFailure(x) & Dialysis(x)) -> MayBeTreated(x))", "score": 0}
{"id": "eqasc_validation_1752", "prediction": "all x.(RenalFailure(x) -> (TreatmentWithDialysis(x) & TreatmentWithDialysis(x)))", "score": 4}
{"id": "eqasc_validation_1752", "prediction": "all x y.((RenalFailure(x) & Dialysis(y)) -> MayBeTreated(x,y))", "score": 2}
{"id": "eqasc_validation_1752", "prediction": "all x.(RenalFailure(x) -> MayBeTreatedWithDialysis(x))", "score": 2}
{"id": "eqasc_validation_1752", "prediction": "all x.(RenalFailure(x) -> (Dialysis(x) | Dialysis(x)))", "score": 0}
{"id": "eqasc_validation_1752", "prediction": "all x y.((RenalFailure(x) & Dialysis(y)) -> MayTreat(x,y))", "score": 2}
{"id": "eqasc_validation_1752", "prediction": "all x.((RenalFailure(x) & Dialysis(x)) -> CanBeTreatedWith(x,Dialysis))", "score": 0}

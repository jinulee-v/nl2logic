{"id": "eqasc_train_0", "prediction": "all x y.((Bead(x) & Water(y)) -> FormedByWaterVaporCondensing(x,y))", "score": 0}
{"id": "eqasc_train_1", "prediction": "all x.(Cloud(x) -> MadeOfWaterVapor(x))", "score": 0}
{"id": "eqasc_train_2", "prediction": "all x.((Bead(x) & Water(x)) -> FormedByClouds(x))", "score": 0}
{"id": "eqasc_train_3", "prediction": "all x.(Condensation(x) -> ChangeOfWaterVaporToLiquid(x))", "score": 0}
{"id": "eqasc_train_4", "prediction": "all x.((Vapor(x) & Liquid(x)) -> LeavesBeadsOfWater(x))", "score": 0}
{"id": "eqasc_train_5", "prediction": "all x.(WaterVapor(x) -> Steam(x))", "score": 0}
{"id": "eqasc_train_6", "prediction": "all x.(Steam(x) -> FormsBeadsOfWater(x))", "score": 0}
{"id": "eqasc_train_7", "prediction": "all x.(Water(x) -> MadeUpOfH2OMolecules(x))", "score": 0}
{"id": "eqasc_train_8", "prediction": "all x.(H2oBead(x) -> FormedByH2oVaporCondensing(x))", "score": 0}
{"id": "eqasc_train_9", "prediction": "all x.((Bead(x) & H2o(x)) -> FormedByVaporCondensing(x))", "score": 0}
{"id": "eqasc_train_10", "prediction": "all x y.((WaterVaporCondensation(x) & AirMolecule(y)) -> EnergyInFormOfHeat(x,y))", "score": 0}
{"id": "eqasc_train_11", "prediction": "all x y.((WaterVaporCondensesHeatEnergy(x) & AirMolecules(y)) -> GoesTo(x,y))", "score": 0}
{"id": "eqasc_train_12", "prediction": "all x.((Water(x) & Liquid(x)) -> Liquid(x))", "score": 0}
{"id": "eqasc_train_13", "prediction": "all x y.((Bead(x) & Liquid(y)) -> FormedByVaporCondensing(x,y))", "score": 0}
{"id": "eqasc_train_14", "prediction": "all x.(CondensationOfWaterVapor(x) -> ChillingSeason(x))", "score": 0}
{"id": "eqasc_train_15", "prediction": "all x y.((Bead(x) & Water(y)) -> FormedDuringChildingSeason(x,y))", "score": 0}
{"id": "eqasc_train_16", "prediction": "all x y.((Moisture(x) & Air(y)) -> (BuildsUpIn(x,y) & CondensesWhereCold(x)))", "score": 0}
{"id": "eqasc_train_17", "prediction": "all x.(WaterBead(x) -> FormsOnColdSurfaces(x))", "score": 0}
{"id": "eqasc_train_18", "prediction": "all x y.((DehydratingFood(x) & Food(y)) -> UsedForPreserving(x,y))", "score": 0}
{"id": "eqasc_train_19", "prediction": "all x.(Dehydration(x) -> PreservesFoodsByRemovingMoisture(x))", "score": 0}
{"id": "eqasc_train_20", "prediction": "all x.((RemovesMoisture(x) & Food(y)) -> Preserves(x,y))", "score": 0}
{"id": "eqasc_train_21", "prediction": "all x y.((Food(x) & Salting(y)) -> Preserves(x,y))", "score": 0}
{"id": "eqasc_train_22", "prediction": "all x.((Food(x) & (Dehydration(x) | Salt(x))) -> Saves(x))", "score": 0}
{"id": "eqasc_train_23", "prediction": "all x y.((Food(x) & (Salt(y) | SaturatedSaltBrine(y))) -> InfusesIntoTissue(x,y))", "score": 0}
{"id": "eqasc_train_24", "prediction": "all x y.((Food(x) & Salting(y)) -> Preserves(x,y))", "score": 0}
{"id": "eqasc_train_25", "prediction": "all x.(Preservative(x) -> Preservative(x))", "score": 0}
{"id": "eqasc_train_26", "prediction": "all x.(DehydratingFood(x) -> PreventsSpoilage(x))", "score": 0}
{"id": "eqasc_train_27", "prediction": "all x.(Dehydration(x) -> RemovesWater(x))", "score": 0}
{"id": "eqasc_train_28", "prediction": "all x.(RemovesWater(x) -> PreservesFood(x))", "score": 0}
{"id": "eqasc_train_29", "prediction": "all x.(Blueberry(x) -> RetainsAntioxidantBenefitsAfterDehydration(x))", "score": 0}
{"id": "eqasc_train_30", "prediction": "all x.(Blueberry(x) -> (EatenAsPreservedFood(x) & AntioxidantBenefits(x)))", "score": 0}
{"id": "eqasc_train_31", "prediction": "all x.((CutFlower(x) & CommercialFloristPreservative(x)) -> LastsLonger(x))", "score": 0}
{"id": "eqasc_train_32", "prediction": "all x.(DehydratingFood(x) -> LastsLonger(x))", "score": 0}
{"id": "eqasc_train_33", "prediction": "exists x.(Food(x) & (Dehydrated(x) | Dried(x)))", "score": 0}
{"id": "eqasc_train_34", "prediction": "all x.(BeefJerky(x) -> Preserved(x))", "score": 0}
{"id": "eqasc_train_35", "prediction": "all x.((Food(x) & (SlowOven(x) | Dehydrator(x))) -> Dehydrated(x))", "score": 0}
{"id": "eqasc_train_36", "prediction": "all x.((Food(x) & Drying(x)) -> PreservedBy(x,y))", "score": 0}
{"id": "eqasc_train_37", "prediction": "all x y.((Oven(x) & SlowCookingFood(y)) -> Preserves(x,y))", "score": 0}
{"id": "eqasc_train_38", "prediction": "all x y.((Food(x) & SlowOven(y)) -> PreservedIn(x,y))", "score": 0}
{"id": "eqasc_train_39", "prediction": "all x.((NescoFoodDehydrator(x) & -TrayRotation(x) & PatentedAirFlowSystem(x)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_train_40", "prediction": "all x y.((Nesco(x) & Nesco(y)) -> UsedForPreservingFood(x,y))", "score": 0}
{"id": "eqasc_train_41", "prediction": "all x.(Reproduction(x) -> GivesRiseToOffspring(x))", "score": 0}
{"id": "eqasc_train_42", "prediction": "all x.((StartsGivingBirth(x) & GivesBirthToBirth(x)) -> GivesBirthToBirth(x,2) & GivesBirthToBirthToFour(x))", "score": 0}
{"id": "eqasc_train_43", "prediction": "all x y.((Reproduction(x) & LivingThing(y)) -> GivesBirthToBaby(y,x))", "score": 0}
{"id": "eqasc_train_44", "prediction": "all x y z.((Parent(x) & Offspring(y) & Gene(z)) -> Transmits(x,z))", "score": 0}
{"id": "eqasc_train_45", "prediction": "all x y.((Reproduction(x) & Gene(y)) -> InvolvesTransmission(x,y))", "score": 0}
{"id": "eqasc_train_46", "prediction": "all x.(HumanOffspring(x) -> CompletelyImmobile(x))", "score": 0}
{"id": "eqasc_train_47", "prediction": "all x.(ReproductionResultsInCompletelyImmobileHuman(x))", "score": 0}
{"id": "eqasc_train_48", "prediction": "all x.(Plant(x) -> OldestLivingThing(x))", "score": 0}
{"id": "eqasc_train_49", "prediction": "all x y.((Plant(x) & Plant(y)) -> GivesRiseToOffspring(x,y))", "score": 0}
{"id": "eqasc_train_50", "prediction": "all x.(Sex(x) -> EqualsReproduction(x))", "score": 0}
{"id": "eqasc_train_51", "prediction": "all x.(Sex(x) -> GivesRiseToOffspring(x))", "score": 0}
{"id": "eqasc_train_52", "prediction": "all x y.((Person(x) & Person(y)) -> (WantsChildren(x,y) & HasChildren(x,y)))", "score": 0}
{"id": "eqasc_train_53", "prediction": "all x.(Reproduction(x) -> (ProcessByLivingThings(x) & ProducesChildren(x)))", "score": 0}
{"id": "eqasc_train_54", "prediction": "all x y.((Gene(x) & Parent(y)) -> PassedToOffspring(x,y))", "score": 0}
{"id": "eqasc_train_55", "prediction": "all x.(Reproduction(x) -> GenesPassed(x))", "score": 0}
{"id": "eqasc_train_56", "prediction": "all x.(Sex(x) -> ForReproduction(x))", "score": 0}
{"id": "eqasc_train_57", "prediction": "all x y.((Sex(x) & Offspring(y)) -> GivesRiseTo(x,y))", "score": 0}
{"id": "eqasc_train_58", "prediction": "all x y.((Sex(x) & LivingThing(y)) -> GivesRiseToOffspring(y,x))", "score": 0}
{"id": "eqasc_train_59", "prediction": "all x.(Seed(x) -> (Offspring(x) | Children(x)))", "score": 0}
{"id": "eqasc_train_60", "prediction": "all x.(LivingThing(x) -> UsesReproductionToHaveChildren(x))", "score": 0}
{"id": "eqasc_train_61", "prediction": "all x y z.((DigestiveSystem(x) & Food(y) & Nutrients(z)) -> BreaksIntoForBody(x,y,z))", "score": 0}
{"id": "eqasc_train_62", "prediction": "all x.(Stomach(x) -> PartOfDigestiveSystem(x))", "score": 0}
{"id": "eqasc_train_63", "prediction": "all x y.((Stomach(x) & Body(y)) -> BreaksFoodIntoNutrients(x,y))", "score": 0}
{"id": "eqasc_train_64", "prediction": "all x.(Nutrient(x) -> FuelForBody(x))", "score": 0}
{"id": "eqasc_train_65", "prediction": "all x y.((DigestiveSystem(x) & Food(y)) -> BreaksIntoFuel(x,y))", "score": 0}
{"id": "eqasc_train_66", "prediction": "all x.(Nutrients(x) -> Functions(x))", "score": 0}
{"id": "eqasc_train_67", "prediction": "all x.((Body(x) & DigestiveSystem(x)) -> Needs(x,DigestiveSystem))", "score": 0}
{"id": "eqasc_train_68", "prediction": "all x.(Pancreas(x) -> PartOfDigestiveSystem(x))", "score": 0}
{"id": "eqasc_train_69", "prediction": "all x.(Pancreas(x) -> BreaksFoodIntoNutrients(x))", "score": 0}
{"id": "eqasc_train_70", "prediction": "all x.(Catabolism(x) -> BreakingDownOfFood(x))", "score": 0}
{"id": "eqasc_train_71", "prediction": "all x y z.((DigestiveSystem(x) & Catabolism(y) & Nutrients(z)) -> UsesToProduce(x,y,z))", "score": 0}
{"id": "eqasc_train_72", "prediction": "all x.(Meat(x) -> NutrientDenseFood(x))", "score": 0}
{"id": "eqasc_train_73", "prediction": "all x y z.((DigestiveSystem(x) & Meat(y) & Nutrients(z)) -> BreaksInto(x,y,z))", "score": 0}
{"id": "eqasc_train_74", "prediction": "all x.(RawProtein(x) -> (ProvidesNutrientsForRegenerationOfCells(x) & PromotesHealing(x) & PromotesYouth(x) & PromotesLongevity(x)))", "score": 0}
{"id": "eqasc_train_75", "prediction": "all x y.((DigestiveSystem(x) & Body(y)) -> ProvidesRegenerationOfCells(x,y))", "score": 0}
{"id": "eqasc_train_76", "prediction": "all x.(ProperDigestion(x) -> VitalForNutrientAbsorption(x))", "score": 0}
{"id": "eqasc_train_77", "prediction": "all x y.((Digestion(x) & Body(y)) -> AbsorbsFood(x,y))", "score": 0}
{"id": "eqasc_train_78", "prediction": "all x.(Nutrient(x) -> (Needs(x,y) & BodyGrows(y) & Needs(x,z) & Healthy(z)))", "score": 0}
{"id": "eqasc_train_79", "prediction": "all x y.((Body(x) & DigestiveSystem(y)) -> (Needs(x,y) & Grows(x) & RemainsHealthy(x)))", "score": 0}
{"id": "eqasc_train_80", "prediction": "all x.(Tapeworm(x) -> (-DigestiveSystem(x) & ReproductiveSystem(x)))", "score": 0}
{"id": "eqasc_train_81", "prediction": "all x.((Tapeworm(x) & -Has(x)) -> BreaksFoodIntoNutrients(x))", "score": 0}
{"id": "eqasc_train_82", "prediction": "all x y.((Eats(x) & Feeds(x) & Body(y)) -> EnablesGrowth(x,y))", "score": 0}
{"id": "eqasc_train_83", "prediction": "all x y.((DigestiveSystem(x) & Body(y)) -> EnablesGrowth(x,y))", "score": 0}
{"id": "eqasc_train_84", "prediction": "all x.(Nutrient(x) -> Iron(x))", "score": 0}
{"id": "eqasc_train_85", "prediction": "all x y z.((DigestiveSystem(x) & Food(y) & Body(z)) -> BreaksIntoIron(x,y,z))", "score": 0}
{"id": "eqasc_train_86", "prediction": "all x.(PlactusFemale(x) -> LaysEggsInBurrow(x))", "score": 0}
{"id": "eqasc_train_87", "prediction": "exists x.(Species(x) & DigsBurrowsInGround(x))", "score": 0}
{"id": "eqasc_train_88", "prediction": "all x.(PlatypusFemale(x) -> LaysEggsInGround(x))", "score": 0}
{"id": "eqasc_train_89", "prediction": "all x.((EggsHave(x) & Hen(x)) -> LeavesNestSite(x))", "score": 0}
{"id": "eqasc_train_90", "prediction": "all x.(PlutypusFemale(x) -> (NestsInBurrow(x) & WaitsForHackering(x)))", "score": 0}
{"id": "eqasc_train_91", "prediction": "all x.(Burrow(x) -> ConstructedInSoftSoil(x))", "score": 0}
{"id": "eqasc_train_92", "prediction": "all x.(PlactusFemale(x) -> LaysEggsInHomes(x))", "score": 0}
{"id": "eqasc_train_93", "prediction": "all x.(Monotreme(x) -> (Plutypus(x) | Echidna(x)))", "score": 0}
{"id": "eqasc_train_94", "prediction": "all x.(Echidna(x) -> LaysEggs(x))", "score": 0}
{"id": "eqasc_train_95", "prediction": "(EggLayingMammal(Placypus)", "score": -1}
{"id": "eqasc_train_96", "prediction": "exists x.(Mammal(x) & LaysEggsInBurrow(x))", "score": 0}
{"id": "eqasc_train_97", "prediction": "all x.((Burrow(x) & DignifiedByBadgers(x)) -> ImportantInManyAreas(x))", "score": 0}
{"id": "eqasc_train_98", "prediction": "all x.(PlactusFemale(x) -> LaysEggsInDugOutArea(x))", "score": 0}
{"id": "eqasc_train_99", "prediction": "all x.(Monotreme(x) -> LaysEggsInBurrow(x))", "score": 0}
{"id": "eqasc_train_100", "prediction": "all x.(Monotreme(x) -> LaysEggs(x))", "score": 0}
{"id": "eqasc_train_101", "prediction": "all x.(Platypus(x) -> (Mammal(x) & Bizarre(x) & LaysEggs(x)))", "score": 0}
{"id": "eqasc_train_102", "prediction": "all x.(Mammal(x) -> -LaysEggs(x))", "score": 0}
{"id": "eqasc_train_103", "prediction": "all x.(Mollusk(x) -> HasShell(x))", "score": 1}
{"id": "eqasc_train_104", "prediction": "all x.(Body(x) -> CoveredWithProtectiveShellOfBonyArmor(x))", "score": 0}
{"id": "eqasc_train_105", "prediction": "all x.(Mollusk(x) -> ProtectiveOfBonyArmor(x))", "score": 0}
{"id": "eqasc_train_106", "prediction": "all x.(Mussels(x) -> BivalveMollusk(x))", "score": 0}
{"id": "eqasc_train_107", "prediction": "all x.(Muschel(x) -> HasShell(x))", "score": 0}
{"id": "eqasc_train_108", "prediction": "all x.(Mollusk(x) -> (Invertebrate(x) & -Exception(x)))", "score": 0}
{"id": "eqasc_train_109", "prediction": "exists x.(Invertebrate(x) & HasShell(x))", "score": 0}
{"id": "eqasc_train_110", "prediction": "all x.((Cam(x) | Oyster(x) | Snail(x)) -> Mollusk(x))", "score": 3}
{"id": "eqasc_train_111", "prediction": "all x.(Oyster(x) -> HasShell(x))", "score": 1}
{"id": "eqasc_train_112", "prediction": "all x.(Mollusk(x) -> SoftBodyInvertebrate(x))", "score": 0}
{"id": "eqasc_train_113", "prediction": "all x.(SoftBodyInvertebrate(x) -> HasShell(x))", "score": 0}
{"id": "eqasc_train_114", "prediction": "all x.(Cephalopod(x) -> MarineMollusk(x))", "score": 0}
{"id": "eqasc_train_115", "prediction": "all x.(Cephalopod(x) -> HasShell(x))", "score": 0}
{"id": "eqasc_train_116", "prediction": "all x.(CoralReef(x) & Shell(x)) -> MadeOfCalciumCarbonate(x))", "score": -1}
{"id": "eqasc_train_117", "prediction": "all x.(Mollusk(x) -> ContainsCalciumCarbonate(x))", "score": 0}
{"id": "eqasc_train_118", "prediction": "all x.(Mollusk(x) -> HasSoftBody(x))", "score": 0}
{"id": "eqasc_train_119", "prediction": "all x.(Shell(x) -> ProtectsSoftBody(x))", "score": 0}
{"id": "eqasc_train_120", "prediction": "all x.(Mussel(x) -> HasShell(x))", "score": 0}
{"id": "eqasc_train_121", "prediction": "all x.(Molllusk(x) -> SecondLargestInvertebrateGroup(x))", "score": 0}
{"id": "eqasc_train_122", "prediction": "all x.((InvertebrateGroup(x) & SecondLargest(x)) -> HasShells(x))", "score": 0}
{"id": "eqasc_train_123", "prediction": "all x.(GoldenSnail(x) -> Survivalist(x))", "score": 0}
{"id": "eqasc_train_124", "prediction": "all x.(Snail(x) -> HasShell(x))", "score": 0}
{"id": "eqasc_train_125", "prediction": "all x.(MechanicalWeathering(x) -> (RocksBreakdownByMechanicalMeans(x) & BrokenDownByMechanicalMeans(x)))", "score": 0}
{"id": "eqasc_train_126", "prediction": "all x.(PysicalWeathering(x) -> MechanicalBreakdownOfRocks(x))", "score": 0}
{"id": "eqasc_train_127", "prediction": "all x.(PhysicalWeathering(x) -> (RocksBreakdown(x) & ByMeans(x)))", "score": 0}
{"id": "eqasc_train_128", "prediction": "all x.(Water(x) -> MechanicalWeatheringForce(x))", "score": 0}
{"id": "eqasc_train_129", "prediction": "all x y.((Water(x) & Rock(y)) -> BreaksDown(x,y))", "score": 0}
{"id": "eqasc_train_130", "prediction": "all x y.((Water(x) & Rock(y)) -> Weathers(x,y))", "score": 0}
{"id": "eqasc_train_131", "prediction": "all x.(MechanicalWeathering(x) -> ProducesDetritus(x))", "score": 0}
{"id": "eqasc_train_132", "prediction": "all x.((Rock(x) & BrokenDown(x)) -> Detritus(x))", "score": 0}
{"id": "eqasc_train_133", "prediction": "all x.(IceWedging(x) -> MechanicalWeathering(x))", "score": 0}
{"id": "eqasc_train_134", "prediction": "all x y.((Rock(x) & IceWedging(y)) -> BreakableFrom(x,y))", "score": 0}
{"id": "eqasc_train_135", "prediction": "all x.(Sediment(x) -> (MadeOf(x,y) & BrokenDownFromRocks(x)))", "score": 0}
{"id": "eqasc_train_136", "prediction": "all x y.((MechanicalWeathering(x) & Sediment(y)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_train_137", "prediction": "all x.(Sediment(x) -> (RocksWeatheredMechanically(x) & WeatheredMechanically(x)))", "score": 0}
{"id": "eqasc_train_138", "prediction": "all x.(Erosion(x) -> (Weathering(x) | BreakingDown(x)))", "score": 0}
{"id": "eqasc_train_139", "prediction": "all x.(Erosion(x) -> (RocksBreakdownMechanically(x) & BrokenDownMechanically(x)))", "score": 0}
{"id": "eqasc_train_140", "prediction": "all x y.((Rock(x) & Water(y)) -> BreaksDownBy(x,y))", "score": 0}
{"id": "eqasc_train_141", "prediction": "all x.(Echinoderm(x) -> (UniqueWaterVascularSystem(x) & TubeFeet(x)))", "score": 1}
{"id": "eqasc_train_142", "prediction": "all x.(Echinoderm(x) -> (Crinoids(x) | Blastoidoids(x)))", "score": 0}
{"id": "eqasc_train_143", "prediction": "all x.(Blastoids(x) -> (UniqueWaterVascularSystem(x) & TubeFeet(x)))", "score": 0}
{"id": "eqasc_train_144", "prediction": "all x.(StarfishArm(x) -> LinedWithTubeFeet(x))", "score": 0}
{"id": "eqasc_train_145", "prediction": "all x.(Starfish(x) -> (Echinoderm(x) & UniqueWaterVascularSystem(x)))", "score": 0}
{"id": "eqasc_train_146", "prediction": "all x.(Echinoderm(x) -> RepresentedByStarfish(x))", "score": 0}
{"id": "eqasc_train_147", "prediction": "all x.(Starfish(x) -> (UniqueWaterVascularSystem(x) & TubeFeet(x)))", "score": 0}
{"id": "eqasc_train_148", "prediction": "all x.(Echinoderm(x) -> Echinoids(x))", "score": 0}
{"id": "eqasc_train_149", "prediction": "all x.(Echinoid(x) -> TubeFeet(x))", "score": 0}
{"id": "eqasc_train_150", "prediction": "all x.(Echinoderm(x) -> HydraulicSystemOfLocomotion(x))", "score": 0}
{"id": "eqasc_train_151", "prediction": "all x.(Echinoderm(x) -> (HasHydrodynamicSystem(x) & HasTubeFeet(x)))", "score": 0}
{"id": "eqasc_train_152", "prediction": "all x.(Starfish(x) -> Echinoderm(x))", "score": 0}
{"id": "eqasc_train_153", "prediction": "all x.(StarfishArm(x) -> ContainsPartOfWaterVascularSystem(x))", "score": 0}
{"id": "eqasc_train_154", "prediction": "all x.(Echinoderm(x) -> Deuterostome(x))", "score": 0}
{"id": "eqasc_train_155", "prediction": "all x.(Deuterostome(x) -> (WaterVascularSystem(x) & TubeFeet(x)))", "score": 0}
{"id": "eqasc_train_156", "prediction": "all x.((Starfish(x) | SeaUrchin(x)) -> Echinoderm(x))", "score": 5}
{"id": "eqasc_train_157", "prediction": "all x.(SeaUrchin(x) -> (UniqueWaterVascularSystem(x) & TubeFeet(x)))", "score": 1}
{"id": "eqasc_train_158", "prediction": "all x.(SeaStar(x) -> UsesHundredsOfTubeFeet(x))", "score": 0}
{"id": "eqasc_train_159", "prediction": "all x y.((SeaStar(x) & WaterVascularSystem(y)) -> UsesUniqueWaterVascular(x,y))", "score": 0}
{"id": "eqasc_train_160", "prediction": "all x.(Echinoid(x) -> UniqueWaterVascularSystem(x,tubeFeet))", "score": 0}
{"id": "eqasc_train_161", "prediction": "all x.((Eye(x) & RestOfBody(x)) -> VascularSystem(x))", "score": 0}
{"id": "eqasc_train_162", "prediction": "all x y z.((Echinoderm(x) & Eye(y) & TubeFoot(z)) -> (Connection(x,y,z) & InEchinoderm(x)))", "score": 0}
{"id": "eqasc_train_163", "prediction": "all x y.((Climate(x) & Area(y)) -> AverageWeather(x,y))", "score": 0}
{"id": "eqasc_train_164", "prediction": "Climate Indonesia's climate is definitely tropical.", "score": -1}
{"id": "eqasc_train_165", "prediction": "all x.(IndonesianWeather(x) -> Tropical(x))", "score": 0}
{"id": "eqasc_train_166", "prediction": "all x.(SimulatingClimate(x) -> ObserveClimate(x))", "score": 0}
{"id": "eqasc_train_167", "prediction": "all x y.((Place(x) & Place(y)) -> ObservesAverageWeather(x,y))", "score": 0}
{"id": "eqasc_train_168", "prediction": "(DryClimate(Jordan) & HotClimate(Jordan))", "score": 0}
{"id": "eqasc_train_169", "prediction": "all x.(Jordan(x) -> (AverageWeather(x) & Dry(x) & Hot(x)))", "score": 0}
{"id": "eqasc_train_170", "prediction": "all x y.((SatelliteMeteorology(x) & EarthOrbitingSatellite(y)) -> MeasuresWeatherBySensors(x,y))", "score": 0}
{"id": "eqasc_train_171", "prediction": "all x.(Climate(x) -> CanBeAnnalyzedWithSatellite(x))", "score": 0}
{"id": "eqasc_train_172", "prediction": "all x.(BloomTime(x) -> DependsOnWeather(x))", "score": 0}
{"id": "eqasc_train_173", "prediction": "all x y.((BloomTime(x) & Area(y)) -> DependsOnClimate(x,y))", "score": 0}
{"id": "eqasc_train_174", "prediction": "all x.(Weather(x) -> (CirculationOfEarthsAtmosphere(x)))", "score": 0}
{"id": "eqasc_train_175", "prediction": "all x.(Climate(x) -> (AverageCirculationOfEarthsAtmosphere(x) & LongPeriodOfTime(x)))", "score": 0}
{"id": "eqasc_train_176", "prediction": "(Choices(YahooWeather) | Choice(CNNWeather) | Choice(RainOrShine) | Choice(WeatherChannel)))", "score": -1}
{"id": "eqasc_train_177", "prediction": "all x y z.((Climate(x) & (Rain(y) | SunShine(y)) & Area(z)) -> AverageOverLongPeriodOfTime(x,y,z))", "score": 0}
{"id": "eqasc_train_178", "prediction": "(all x.(Climate(x) -> LooksAtLongTermAverages(x)))", "score": 0}
{"id": "eqasc_train_179", "prediction": "all x y z.((Climate(x) & Area(y) & LongTermAverage(z)) -> LooksAt(x,z))", "score": 0}
{"id": "eqasc_train_180", "prediction": "Climate Taiwan's climate is subtropical.", "score": -1}
{"id": "eqasc_train_181", "prediction": "all x y.((AverageWeather(x) & LongPeriodOfTime(y) & InTaiwan(x,y)) -> Subtropical(x))", "score": 0}
{"id": "eqasc_train_182", "prediction": "all x.(Epoca(x) -> (PeriodOfTime(x) & EventsOccur(x)))", "score": 0}
{"id": "eqasc_train_183", "prediction": "all x y.((Climate(x) & Area(y) & DuringEpoca(x,y)) -> AverageWeather(x,y))", "score": 0}
{"id": "eqasc_train_184", "prediction": "Eilat is the safestPlaceInArea(e)", "score": -1}
{"id": "eqasc_train_185", "prediction": "all x y.((Climate(x) & Place(y)) -> AverageWeather(x,y))", "score": 0}
{"id": "eqasc_train_186", "prediction": "all x.(LoudNoise(x) -> CanCauseAnimalsToStartle(x))", "score": 0}
{"id": "eqasc_train_187", "prediction": "all x.((Animal(x) & Startled(x)) -> (RunsAway(x) & ShortLeaps(x) & LowCries(x)))", "score": 0}
{"id": "eqasc_train_188", "prediction": "all x.(LoudNoise(x) -> CanCauseAnimalsToRun(x))", "score": 0}
{"id": "eqasc_train_189", "prediction": "all x.((Fireworks(x) & MakeLoudNoise(x)) -> Firecracker(x))", "score": 0}
{"id": "eqasc_train_190", "prediction": "all x y.((Firecracker(x) & Animal(y)) -> CausesStartle(x,y))", "score": 0}
{"id": "eqasc_train_191", "prediction": "(all x.((HighwayEngine(x) & 4,000Rpm(x)) -> PlentyLoud(x)))", "score": -1}
{"id": "eqasc_train_192", "prediction": "all x y.((Engine(x) & Animal(y)) -> CausesStartle(x,y))", "score": 0}
{"id": "eqasc_train_193", "prediction": "all x.(Thunder(x) -> RichSourceOfLoudness(x))", "score": 0}
{"id": "eqasc_train_194", "prediction": "all x y.((Thunder(x) & Animal(y)) -> CausesStarting(x,y))", "score": 0}
{"id": "eqasc_train_195", "prediction": "all x.((Animal(x) & (UnannouncedApproach(x) | SuspiciousMovement(x) | LoudNoise(x))) -> Startled(x))", "score": 0}
{"id": "eqasc_train_196", "prediction": "all x.((Animal(x) & SuspiciousMovement(x)) -> StartledBy(x))", "score": 0}
{"id": "eqasc_train_197", "prediction": "all x.(Baby(x) -> FrightenedByLoudNoise(x))", "score": 0}
{"id": "eqasc_train_198", "prediction": "all x.((Animal(x) & FearnByNoise(x)) -> FrightenedByNoise(x))", "score": 0}
{"id": "eqasc_train_199", "prediction": "all x.(Gunshot(x) -> StartlesQuiet(x))", "score": 0}
{"id": "eqasc_train_200", "prediction": "all x y.((Gunshot(x) & Animal(y)) -> CausesLoudNoise(x,y))", "score": 0}
{"id": "eqasc_train_201", "prediction": "all x.((Hamster(x) & Startled(x) & Ill(x)) -> DeliversQuiteBit(x))", "score": 0}
{"id": "eqasc_train_202", "prediction": "all x y.((LoudNoise(x) & Hamster(y)) -> (DeliversQuiteBite(y)))", "score": 0}
{"id": "eqasc_train_203", "prediction": "all x.((FlatSpots(x) & RailCarWheels(x)) -> LoudBanggingNoise(x))", "score": 0}
{"id": "eqasc_train_204", "prediction": "all x y.((FlatSpot(x) & RailCarWheels(y)) -> CanCauseAnimalsToStartle(x,y))", "score": 0}
{"id": "eqasc_train_205", "prediction": "all x.((OutOfOddly(x) & StartlesAndSpooksAnimals(x)) -> UnusualAndDangerousBehaviors(x))", "score": 0}
{"id": "eqasc_train_206", "prediction": "all x.(LoudNoise(x) -> CanCauseAnimalsToBecomeDangerous(x))", "score": 0}
{"id": "eqasc_train_207", "prediction": "all x.(Mammal(x) -> Animal(x))", "score": 0}
{"id": "eqasc_train_208", "prediction": "all x.(LoudNoise(x) -> CausesMammalStartle(x))", "score": 0}
{"id": "eqasc_train_209", "prediction": "all x.(Thunder(x) -> (SimpleLoudEmittingSound(x) & FollowsLightningBall(x)))", "score": 0}
{"id": "eqasc_train_210", "prediction": "all x y.((Thunder(x) & Animal(y)) -> CanStartle(x,y))", "score": 0}
{"id": "eqasc_train_211", "prediction": "all x.(InjuredAnimal(x) -> VeryDangerous(x))", "score": 0}
{"id": "eqasc_train_212", "prediction": "all x.(LoudNoise(x) -> CanBeDangerous(x))", "score": 0}
{"id": "eqasc_train_213", "prediction": "all x y.((Snort(x) & StartledAnimal(y)) -> EmittedBy(x,y))", "score": 0}
{"id": "eqasc_train_214", "prediction": "all x.((LoudNoise(x) & Animal(y)) -> CanMakeSnort(x,y))", "score": 0}
{"id": "eqasc_train_215", "prediction": "all x y.((LoudNoise(x) & Animal(y)) -> CanSnort(x,y))", "score": 0}
{"id": "eqasc_train_216", "prediction": "all x.(Gun(x) -> (Loud(x) & Folk(x) & PainfulSound(x)))", "score": 0}
{"id": "eqasc_train_217", "prediction": "all x y.((Gun(x) & Animal(y)) -> CausesStartle(x,y))", "score": 0}
{"id": "eqasc_train_218", "prediction": "all x y.((Nervous(x) & Skin(y)) -> FeelsHeatAndPressure(x,y))", "score": 0}
{"id": "eqasc_train_219", "prediction": "all x.((Shoes(x) & TightFilling(x)) -> (IncreasesPressureOnSkin(x) & ExacerbatesPain(x)))", "score": 0}
{"id": "eqasc_train_220", "prediction": "all x y.((Nerve(x) & Skin(y)) -> FeelsHeatAndPain(x,y))", "score": 0}
{"id": "eqasc_train_221", "prediction": "all x y.((FirmHugs(x) & PillowPile(y) & HiddenUnder(x,y)) -> DeepTouchPressureInput(x))", "score": 0}
{"id": "eqasc_train_222", "prediction": "all x y.((Body(x) & Nerve(y)) -> MeasuresSensorInputToSkin(x,y))", "score": 0}
{"id": "eqasc_train_223", "prediction": "all x.(SensitiveNervousEnding(x) -> InInvolvedInSensitiveReception(x))", "score": 0}
{"id": "eqasc_train_224", "prediction": "all x y.((SensorySystem(x) & Heat(y)) -> UsedInFeeling(x,y))", "score": 0}
{"id": "eqasc_train_225", "prediction": "all x.(NervousEnding(x) -> (AllowsPain(x) & AllowsPressure(x) & AllowsHeat(x) & AllowsCold(x)))", "score": 0}
{"id": "eqasc_train_226", "prediction": "all x.((NervousEnding(x) & Cold(x)) -> Feels(x))", "score": 0}
{"id": "eqasc_train_227", "prediction": "all x.(Epidermal(x) -> (RelatingToUpperLayerOfCells(x) | OnSkin(x) | Wherever(x)))", "score": 0}
{"id": "eqasc_train_228", "prediction": "all x y.((Nervous(x) & EpidermalLayer(y)) -> FeelsHeatAndPressure(x,y))", "score": 0}
{"id": "eqasc_train_229", "prediction": "all x y z.((SensoryNeuron(x) & NerveRing(y) & SensoryOrgan(z)) -> RunsAnteriorly(x,y,z))", "score": 0}
{"id": "eqasc_train_230", "prediction": "all x y.((SensitiveNeuron(x) & Skin(y)) -> FeelsHeatAndPressure(x,y))", "score": 0}
{"id": "eqasc_train_231", "prediction": "all x.(Epidermis(x) -> FormsOutermostSurfaceOfSkin(x))", "score": 0}
{"id": "eqasc_train_232", "prediction": "all x y.((Nervine(x) & Epidermis(y)) -> FeelsHeatAndPressure(x,y))", "score": 0}
{"id": "eqasc_train_233", "prediction": "all x.((PeripheralNervous(x) & MadeOfBundlesOfNervousFibers(x)) -> LivingTelephoneWires(x))", "score": 0}
{"id": "eqasc_train_234", "prediction": "all x y.((BundleOfFibers(x) & Skin(y)) -> FeelsHeatAndPressure(x,y))", "score": 0}
{"id": "eqasc_train_235", "prediction": "all x.(Nervous(x) -> TransmitsInformationElectrically(x))", "score": 0}
{"id": "eqasc_train_236", "prediction": "all x.((SensationOfHeat(x) & FeelingPressure(x)) -> TransmittedElectrically(x))", "score": 0}
{"id": "eqasc_train_237", "prediction": "all x.(Fog(x) -> (FormedByWaterVaporCondensing(x) & InAir(x)))", "score": 0}
{"id": "eqasc_train_238", "prediction": "all x.(WaterVapor(x) -> RisesIntoAtmosphere(x))", "score": 0}
{"id": "eqasc_train_239", "prediction": "all x.((RisingAtmosphere(x) & CondenseIntoFog(x)) -> CondenseIntoFog(x))", "score": 0}
{"id": "eqasc_train_240", "prediction": "all x.((Fog(x) & Haze(x)) -> Forms(x))", "score": 0}
{"id": "eqasc_train_241", "prediction": "all x.(Haze(x) -> (WaterVaporCondensesInAir(x) & InAir(x)))", "score": 0}
{"id": "eqasc_train_242", "prediction": "all x.((WaterVapor(x) & CondensesInAir(x) & NearGround(x)) -> Fog(x))", "score": 0}
{"id": "eqasc_train_243", "prediction": "all x y.((Fog(x) & Ground(y)) -> FormsNear(x,y))", "score": 0}
{"id": "eqasc_train_244", "prediction": "(ComponentsOfWater(H2O) & 2.)", "score": -1}
{"id": "eqasc_train_245", "prediction": "all x.(Fog(x) -> (FormedByH2oVaporCondensing(x) & InAir(x)))", "score": 0}
{"id": "eqasc_train_246", "prediction": "all x.((Driving(x) & Fog(x)) -> (Obstacle(x) | Hindrance(x)) & MakesObscured(x)))", "score": -1}
{"id": "eqasc_train_247", "prediction": "all x.(HadrancesToDriving(x) -> (WaterVaporCondensing(x) & InAir(x)))", "score": 0}
{"id": "eqasc_train_248", "prediction": "all x.(Fog(x) -> (WaterVaporCondensesIntoParticles(x) & AirTemperaturesCool(x)))", "score": 0}
{"id": "eqasc_train_249", "prediction": "all x.(Fog(x) -> CondensedWaterVapor(x))", "score": 0}
{"id": "eqasc_train_250", "prediction": "all x.((Fog(x) & Steam(x)) -> Analogous(x))", "score": 0}
{"id": "eqasc_train_251", "prediction": "all x.(HotterWater(x) -> DenserFog(x))", "score": 0}
{"id": "eqasc_train_252", "prediction": "hotvapor(hot) makes the haze denser(haze))", "score": -1}
{"id": "eqasc_train_253", "prediction": "all x.((AirCools(x) & WaterVapor(x)) -> Condenses(x))", "score": 0}
{"id": "eqasc_train_254", "prediction": "all x.((Fog(x) & CoolsAir(x)) -> FormedWhen(x,y))", "score": 0}
{"id": "eqasc_train_255", "prediction": "all x.((SanFrancisco(x) & CulturalTolerance(x) & FrequentFog(x)) -> Tolerates(x))", "score": 0}
{"id": "eqasc_train_256", "prediction": "all x y.((SanFrancisco(x) & SanFrankfort(y)) -> FormedByWaterVaporCondensingInAir(x,y))", "score": 0}
{"id": "eqasc_train_257", "prediction": "all x.(Fog(x) -> (LowClouds(x) & WaterVaporCooling(x) & Condenses(x)))", "score": 0}
{"id": "eqasc_train_258", "prediction": "all x y.((WaterVapor(x) & Air(y)) -> CoolsDown(x,y))", "score": 0}
{"id": "eqasc_train_259", "prediction": "all x y z.((Water(x) & Freezes(x) & Water(y) & Water(z)) -> Expands(y,z))", "score": 0}
{"id": "eqasc_train_260", "prediction": "all x y.((Water(x) & Rock(y) & Freezes(x)) -> PushesOut(x,y))", "score": 0}
{"id": "eqasc_train_261", "prediction": "all x y.((FrozenWater(x) & Rock(y)) -> BreaksRock(x,y))", "score": 0}
{"id": "eqasc_train_262", "prediction": "all x.(WaterPipe(x) -> (Freeze(x) | Burst(x)))", "score": 0}
{"id": "eqasc_train_263", "prediction": "all x y.((Water(x) & Pipe(y)) -> Bursts(x,y))", "score": 0}
{"id": "eqasc_train_264", "prediction": "all x.(Water(x) -> FreezesAtZeroDegreesCelsius(x))", "score": 0}
{"id": "eqasc_train_265", "prediction": "all x.((Water(x) & ZeroDegreesCelsius(x)) -> Expands(x))", "score": 0}
{"id": "eqasc_train_266", "prediction": "all x.(Ice(x) -> FrozenWater(x))", "score": 0}
{"id": "eqasc_train_267", "prediction": "all x.(Ice(x) -> Expands(x))", "score": 0}
{"id": "eqasc_train_268", "prediction": "all x.((Water(x) & Cooled(x)) -> FreezesIntoIce(x))", "score": 0}
{"id": "eqasc_train_269", "prediction": "all x.((Water(x) & Cold(x)) -> Expands(x))", "score": 0}
{"id": "eqasc_train_270", "prediction": "all x.((Water(x) & CoolingTo32Degrees(x)) -> ExpandsToIce(x))", "score": 0}
{"id": "eqasc_train_271", "prediction": "all x y.((Water(x) & Ice(y) & Under32Degrees(x,y)) -> FreezesInto(x,y))", "score": 0}
{"id": "eqasc_train_272", "prediction": "all x.(WaterDensity(x) -> DeterminedByTemperature(x))", "score": 0}
{"id": "eqasc_train_273", "prediction": "all x.((Freezes(x) & DensityChange(x)) -> Changes(x))", "score": 0}
{"id": "eqasc_train_274", "prediction": "all x y.((Pipe(x) & Water(y) & LowTemperature(z)) -> CanBurst(x))", "score": 0}
{"id": "eqasc_train_275", "prediction": "all x.(Beet(x) -> ToleratesMildFreezes(x))", "score": 0}
{"id": "eqasc_train_276", "prediction": "all x.(Beet(x) -> ToleratesMildWaterExpansions(x))", "score": 0}
{"id": "eqasc_train_277", "prediction": "all x.(Mollusk(x) -> (HasCirculatorySystem(x) & (PumpsBlood(x) | PumpsBlood(x))))", "score": 3}
{"id": "eqasc_train_278", "prediction": "all x.((Arthropod(x) & Mollusk(x)) -> OpenCirculatorySystem(x))", "score": 0}
{"id": "eqasc_train_279", "prediction": "all x.(Arthropod(x) -> OpenCirculatorySystem(x))", "score": 0}
{"id": "eqasc_train_280", "prediction": "all x.(Squid(x) -> Mollusk(x))", "score": 7}
{"id": "eqasc_train_281", "prediction": "all x.(Squid(x) -> (HasCirculatorySystem(x) & (PumpsBlood(x) | PumpsBlood(x))))", "score": 1}
{"id": "eqasc_train_282", "prediction": "all x.(Abalone(x) -> (Shellfish(x) | Mollusk(x)))", "score": 0}
{"id": "eqasc_train_283", "prediction": "all x.(Shellfish(x) -> (CirculatorySystem(x) & (Heart(x) | Heart(x)) & PumpsBlood(x))))", "score": -1}
{"id": "eqasc_train_284", "prediction": "all x y z.((Blood(x) & Heart(y) & BloodVessel(z)) -> PumpedBy(x,y,z))", "score": 0}
{"id": "eqasc_train_285", "prediction": "all x.(Mollusk(x) -> (HasCirculatorySystem(x) & (HasOneHeart(x) | HasTwoHearts(x)) & MovesBloodIntoVessels(x)))", "score": 0}
{"id": "eqasc_train_286", "prediction": "all x.(Squid(x) -> (HasCirculatorySystem(x) & PumpsBlood(x)))", "score": 1}
{"id": "eqasc_train_287", "prediction": "all x.(Clam(x) -> (Mollusk(x) & (LivesInSea(x) | LivesInFreshwater(x))))", "score": 0}
{"id": "eqasc_train_288", "prediction": "all x.(Clamm(x) -> (CirculatorySystem(x) & (Heart(x) | Heart(x)) & PumpsBlood(x))))", "score": -1}
{"id": "eqasc_train_289", "prediction": "all x.(Abalone(x) -> (CirculatorySystem(x) & (Heart(x) | Heart(x)) & PumpsBlood(x))))", "score": -1}
{"id": "eqasc_train_290", "prediction": "all x.(Mollusk(x) -> (SimpleHeart(x) & PumpsBlood(x)))", "score": 0}
{"id": "eqasc_train_291", "prediction": "all x.(Mollusk(x) -> (HasHeart(x) & CirculatesBlood(x)))", "score": 0}
{"id": "eqasc_train_292", "prediction": "all x.(Muschel(x) -> CirculatorySystem(x))", "score": 0}
{"id": "eqasc_train_293", "prediction": "all x.(Squid(x) -> (CirculatorySystem(x) & (Heart(x) | Heart(x)) & PumpsBlood(x))))", "score": -1}
{"id": "eqasc_train_294", "prediction": "all x.(Mollusk(x) -> HasSimpleHeart(x))", "score": 0}
{"id": "eqasc_train_295", "prediction": "all x.(Squid(x) -> HasCirculatorySystem(x))", "score": 1}
{"id": "eqasc_train_296", "prediction": "all x.(Clam(x) -> (CirculatorySystem(x) & (Heart(x) | Heart(x))))", "score": 0}
{"id": "eqasc_train_297", "prediction": "all x.(Smoking(x) -> CausesDirectDamageToLungs(x))", "score": 0}
{"id": "eqasc_train_298", "prediction": "all x.(Smoking(x) -> (Inhalation(x) & Exhalation(x) & BurningTobacco(x)))", "score": 0}
{"id": "eqasc_train_299", "prediction": "all x.((Fumes(x) & Inhales(x) & Exhales(x)) -> CausesDirectLungDamage(x))", "score": 0}
{"id": "eqasc_train_300", "prediction": "all x.((LungDamage(x) & Experienced(x)) -> ReducedCapacity(x))", "score": 0}
{"id": "eqasc_train_301", "prediction": "all x.(Smoking(x) -> ReducesRespiratorySystemCapacity(x))", "score": 0}
{"id": "eqasc_train_302", "prediction": "all x.(Smoking(x) -> (CausesIrreversibleLungDamage(x) & BreaksAirSacs(x)))", "score": 0}
{"id": "eqasc_train_303", "prediction": "all x.(Smoking(x) -> CausesDirectDamageToAirSacs(x))", "score": 0}
{"id": "eqasc_train_304", "prediction": "all x y.((Smoke(x) & Cigarette(y)) -> (ContainsTar(x,y) & SticksToCilia(x,y)))", "score": 0}
{"id": "eqasc_train_305", "prediction": "all x.(Tar(x) -> CausesDamageToLungs(x))", "score": 0}
{"id": "eqasc_train_306", "prediction": "exists x.(Person(x) & SmokesCigarettes(x))", "score": 0}
{"id": "eqasc_train_307", "prediction": "all x y.((Cigarette(x) & Lung(y)) -> CausesDirectDamageTo(x,y))", "score": 0}
{"id": "eqasc_train_308", "prediction": "all x.(Mammal(x) -> (WarmBlooded(x) & UsesLungsForRespiration(x) & HasFourLegs(x)))", "score": 0}
{"id": "eqasc_train_309", "prediction": "all x.(Smoking(x) -> CausesDamageWhenRespiration(x))", "score": 0}
{"id": "eqasc_train_310", "prediction": "all x.(Smoking(x) -> CausesLungCancer(x))", "score": 0}
{"id": "eqasc_train_311", "prediction": "all x.(Cancer(x) -> CausedBySmoking(x))", "score": 0}
{"id": "eqasc_train_312", "prediction": "all x.(Emphysema(x) -> PermanentLungDamage(x))", "score": 0}
{"id": "eqasc_train_313", "prediction": "all x.(Smoking(x) -> CausesEmphysema(x))", "score": 0}
{"id": "eqasc_train_314", "prediction": "all x.(Smoking(x) -> HabitForming(x))", "score": 0}
{"id": "eqasc_train_315", "prediction": "all x y.((Cigarette(x) & Lung(y)) -> CausesDirectDamageTo(x,y))", "score": 0}
{"id": "eqasc_train_316", "prediction": "all x.(CigarSmoking(x) -> OnRise(x))", "score": 0}
{"id": "eqasc_train_317", "prediction": "all x.(Cigar(x) -> CausesDirectDamageToLungs(x))", "score": 0}
{"id": "eqasc_train_318", "prediction": "all x y.((TransportationTechnology(x) & Person(y)) -> UsedForMoving(x,y))", "score": 0}
{"id": "eqasc_train_319", "prediction": "all x.(Transportation(x) -> (Trailer(x) | Raft(x)))", "score": 0}
{"id": "eqasc_train_320", "prediction": "all x.(Raft(x) -> (Movement(x) & Person(x)))", "score": 0}
{"id": "eqasc_train_321", "prediction": "all x y.((TransportationTechnology(x) & Vehicle(y)) -> BuiltAround(x,y))", "score": 0}
{"id": "eqasc_train_322", "prediction": "all x.(Vehicle(x) -> UsedForMovingPeople(x))", "score": 0}
{"id": "eqasc_train_323", "prediction": "all x.(BusBusTransportation(x) -> Nearby(x))", "score": 0}
{"id": "eqasc_train_324", "prediction": "all x.(Bus(x) -> (MovingPeople(x) & UsedFor(x,y)))", "score": 0}
{"id": "eqasc_train_325", "prediction": "all x.((Technology(x) & MoreImmediatelyFacilitable(x)) -> MaglevTrain(x))", "score": 0}
{"id": "eqasc_train_326", "prediction": "all x.(MaglevTrain(x) -> UsedForMovingPeople(x))", "score": 0}
{"id": "eqasc_train_327", "prediction": "all x.((Transportation(x) & CityBus(x)) -> Transports(x))", "score": 0}
{"id": "eqasc_train_328", "prediction": "all x.(CityBus(x) -> UsedForMovingPeople(x))", "score": 0}
{"id": "eqasc_train_329", "prediction": "all x.(PublicTransportation(x) -> MovesPeople(x))", "score": 0}
{"id": "eqasc_train_330", "prediction": "all x y.((Transportation(x) & MovingThings(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_train_331", "prediction": "all x.(ModelRaketry(x) -> ExcitingForTravelTechnology(x))", "score": 0}
{"id": "eqasc_train_332", "prediction": "all x.(ModelRaketry(x) -> (StudiesMovements(x) & StudiesMovements(x)))", "score": 0}
{"id": "eqasc_train_333", "prediction": "all x.(KineticEnergy(x) -> EnergyOfMovingObjects(x))", "score": 0}
{"id": "eqasc_train_334", "prediction": "all x.(TransportationTechnology(x) -> RequiresKineticEnergy(x))", "score": 0}
{"id": "eqasc_train_335", "prediction": "all x.(BusTransportation(x) -> CanBeAgreed(x))", "score": 0}
{"id": "eqasc_train_336", "prediction": "all x.(Bus(x) -> MovesPeople(x))", "score": 0}
{"id": "eqasc_train_337", "prediction": "all x.(SupersonicTransport(x) -> ViableTransportation(x))", "score": 0}
{"id": "eqasc_train_338", "prediction": "all x y.((Technology(x) & Person(y)) -> MovedAtSupersonicSpeeds(y,x))", "score": 0}
{"id": "eqasc_train_339", "prediction": "all x.((Bus(x) | Train(x)) -> ExcellentModeOfTransportation(x))", "score": 0}
{"id": "eqasc_train_340", "prediction": "all x y.((Train(x) & Person(y)) -> UsedForMoving(x,y))", "score": 0}
{"id": "eqasc_train_341", "prediction": "all x.(Technology(x) -> (PermitsSpaceTravel(x) & PermitsTransportation(x)))", "score": 0}
{"id": "eqasc_train_342", "prediction": "all x y.((SpaceTravel(x) & Person(y)) -> UsedForMoving(x,y))", "score": 0}
{"id": "eqasc_train_343", "prediction": "all x.(Car(x) -> (KillsPeople(x) | TransportsPeople(x)))", "score": 0}
{"id": "eqasc_train_344", "prediction": "all x.(Car(x) -> TransportationTechnology(x))", "score": 0}
{"id": "eqasc_train_345", "prediction": "all x.(PublicTransportation(x) -> MovesMassiveAmountsOfPeople(x))", "score": 0}
{"id": "eqasc_train_346", "prediction": "all x y.((PublicTransportation(x) & LargeAmountsOfPeople(y)) -> Transports(x,y))", "score": 0}
{"id": "eqasc_train_347", "prediction": "all x.(People(x) -> MeansHumanBeings(x))", "score": 0}
{"id": "eqasc_train_348", "prediction": "all x.(Human(x) -> UsesTransportationTechnologyToMoveAround(x))", "score": 0}
{"id": "eqasc_train_349", "prediction": "all x y.((Ruler(x) & Object(y)) -> MeasuresLengthOf(x,y))", "score": 0}
{"id": "eqasc_train_350", "prediction": "all x.(Length(x) -> MeasuresDistance(x))", "score": 0}
{"id": "eqasc_train_351", "prediction": "all x.(Ruler(x) -> UsedForMeasuringDistance(x))", "score": 0}
{"id": "eqasc_train_352", "prediction": "all x.(Ruler(x) -> (DividedIntoInches(x) & DividedIntoFractionsOfInches(x)))", "score": 0}
{"id": "eqasc_train_353", "prediction": "all x.(Length(x) -> MeasuredInInches(x))", "score": 0}
{"id": "eqasc_train_354", "prediction": "all x.(Length(x) -> IndicatesBufferSize(x))", "score": 0}
{"id": "eqasc_train_355", "prediction": "all x.(Ruler(x) -> IndicatesSize(x))", "score": 0}
{"id": "eqasc_train_356", "prediction": "all x.(Length(x) -> (MeasuredInInches(x) | MeasuredInFractionsOfInches(x)))", "score": 0}
{"id": "eqasc_train_357", "prediction": "all x.(Meter(x) -> ExpressesLengthMeasurement(x))", "score": 0}
{"id": "eqasc_train_358", "prediction": "all x.(Ruler(x) -> MeasuresInMeters(x))", "score": 0}
{"id": "eqasc_train_359", "prediction": "Length RopeLengthsMeasuredInMeters(rope)", "score": -1}
{"id": "eqasc_train_360", "prediction": "all x y.((Ruler(x) & Object(y)) -> MeasuresMeters(x,y))", "score": 0}
{"id": "eqasc_train_361", "prediction": "all x y.((Object(x) & Inches(y) & FractionsOfInches(x,y)) -> MeasuresLength(x,y))", "score": 0}
{"id": "eqasc_train_362", "prediction": "all x.(Perimeter(x) -> TotalLengthAroundObject(x))", "score": 0}
{"id": "eqasc_train_363", "prediction": "all x y.((Ruler(x) & Object(y)) -> MeasuresPerimeter(x,y))", "score": 0}
{"id": "eqasc_train_364", "prediction": "all x.((Ruler(x) & MeasureLengthOfShadow(x)) -> MeasureLengthOfShadow(x))", "score": 0}
{"id": "eqasc_train_365", "prediction": "all x y.((Shadow(x) & Ruler(y)) -> MeasuresBy(x,y))", "score": 0}
{"id": "eqasc_train_366", "prediction": "all x.(Tunicate(x) -> BarrelShape(x))", "score": 1}
{"id": "eqasc_train_367", "prediction": "all x.(Tunicat(x) -> (DifferentAppearance(x,adult) & DifferentAppearance(x,larva)))", "score": 0}
{"id": "eqasc_train_368", "prediction": "all x.(Tunicat(x) -> (DifferentAppearance(x) & BarrelShape(x)))", "score": 0}
{"id": "eqasc_train_369", "prediction": "all x.(Tunicat(x) -> (MarineOrganism(x) & CoveredWithGelatinousTunica(x)))", "score": 0}
{"id": "eqasc_train_370", "prediction": "all x.(SeaSquirt(x) -> (BarrelShaped(x) & BarrelShaped(x)))", "score": 0}
{"id": "eqasc_train_371", "prediction": "all x.(AdultSeaSquirt(x) -> (BarrelShaped(x) & BarrelShaped(x)))", "score": 0}
{"id": "eqasc_train_372", "prediction": "all x.(SeaSquirt(x) -> BestKnownTunicate(x))", "score": 0}
{"id": "eqasc_train_373", "prediction": "all x.(BluebellTunicate(x) -> Pretty(x))", "score": 0}
{"id": "eqasc_train_374", "prediction": "all x.(Bluebell(x) -> (BarrelShaped(x) & BarrelShaped(x)))", "score": 0}
{"id": "eqasc_train_375", "prediction": "all x.(TulipBulb(x) -> Tunicated(x))", "score": 0}
{"id": "eqasc_train_376", "prediction": "all x.(TulipBulb(x) -> (BarrelShaped(x) & HasBarrelShape(x)))", "score": 0}
{"id": "eqasc_train_377", "prediction": "all x.(Bulbs(x) -> (Tunicate(x) | NonTunicate(x)))", "score": 0}
{"id": "eqasc_train_378", "prediction": "all x.(Bulbs(x) -> (BarrelShaped(x) | BarrelShaped(x)))", "score": 0}
{"id": "eqasc_train_379", "prediction": "all x.(Urochordate(x) -> Tunicate(x))", "score": 1}
{"id": "eqasc_train_380", "prediction": "all x.(Urochordate(x) -> BarrelShape(x))", "score": 1}
{"id": "eqasc_train_381", "prediction": "all x y.((Pollination(x) & Pollinator(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_train_382", "prediction": "all x.(BeePollination(x) -> BountifulCranberryHarvest(x))", "score": 0}
{"id": "eqasc_train_383", "prediction": "all x.(CranberryHill(x) -> RequiresBees(x))", "score": 0}
{"id": "eqasc_train_384", "prediction": "all x.(Bee(x) -> RequiresPollenTransfer(x))", "score": 0}
{"id": "eqasc_train_385", "prediction": "all x.(Bee(x) -> Pollinates(x))", "score": 0}
{"id": "eqasc_train_386", "prediction": "all x.(Bee(x) -> EssentialRequirementForCranberryProduction(x))", "score": 0}
{"id": "eqasc_train_387", "prediction": "All x.(Requirements(x) -> SeeNeeds(x))", "score": -1}
{"id": "eqasc_train_388", "prediction": "all x y.((Pollination(x) & Pollinator(y)) -> Needs(x,y))", "score": 0}
{"id": "eqasc_train_389", "prediction": "all x.(Bee(x) -> EffectivePollinators(x))", "score": 0}
{"id": "eqasc_train_390", "prediction": "all x.(Bee(x) -> (RequiredForSpreadingFlowerSeeds(x) & Effective(x)))", "score": 0}
{"id": "eqasc_train_391", "prediction": "all x.(Plant(x) -> (InsectPollinated(x) | WindPollinated(x)))", "score": 0}
{"id": "eqasc_train_392", "prediction": "all x.(Plant(x) -> (RequiresInsects(x) | RequiresWind(x)))", "score": 0}
{"id": "eqasc_train_393", "prediction": "exists x.(PlantSpecies(x) & RequiresFlooding(x))", "score": 0}
{"id": "eqasc_train_394", "prediction": "exists x.(PlantSpecies(x) & PollinatesThroughFlooding(x))", "score": 0}
{"id": "eqasc_train_395", "prediction": "all x y.((Wind(x) & Plant(y)) -> RequirementForReproduction(x,y))", "score": 0}
{"id": "eqasc_train_396", "prediction": "all x.(Insect(x) -> PollinatesFlowers(x))", "score": 0}
{"id": "eqasc_train_397", "prediction": "all x.(Flower(x) -> RequiresInsects(x))", "score": 0}
{"id": "eqasc_train_398", "prediction": "all x.(TRH(x) -> (StimulatesPituitaryGlands(x) & ProducesThyroidStimulatingHormone(x)))", "score": 0}
{"id": "eqasc_train_399", "prediction": "all x.(ProlactinRelease(x) -> StimulatesThroatHydrogen(x))", "score": 0}
{"id": "eqasc_train_400", "prediction": "all x.(TRH(x) -> StimulatesProlactinRelease(x))", "score": 0}
{"id": "eqasc_train_401", "prediction": "all x.(ThyroidHydrogen(x) -> StimulatesMetabolicActivity(x))", "score": 0}
{"id": "eqasc_train_402", "prediction": "all x y.((TRH(x) & PituitaryGlands(y)) -> StimulatesToProduceGrowth(x,y))", "score": 0}
{"id": "eqasc_train_403", "prediction": "all x.(ThyroidHormone(x) -> RegulatesMetabolicRate(x))", "score": 0}
{"id": "eqasc_train_404", "prediction": "all x y.((PituitaryGlands(x) & Body(y)) -> RegulatesMetabolicRate(x,y))", "score": 0}
{"id": "eqasc_train_405", "prediction": "all x.(Hypothyroidism(x) -> IncreasedTSHLevel(x))", "score": 0}
{"id": "eqasc_train_406", "prediction": "all x.(HigherTRHStimulation(x) -> Hypothyroidism(x))", "score": 0}
{"id": "eqasc_train_407", "prediction": "all x.(PituitaryGlands(x) -> MasterGlandsOfBody(x))", "score": 0}
{"id": "eqasc_train_408", "prediction": "all x.(MasterGlandsOfBody(x) -> (ProducesThyroidStimulatingHormone(x) | ProducesThyroidStimulatingHormone(x)))", "score": 0}
{"id": "eqasc_train_409", "prediction": "all x.(ThyroidHormone(x) -> RegulatesTRHSynthesis(x))", "score": 0}
{"id": "eqasc_train_410", "prediction": "all x.(TSH(x) -> RegulatesByPituitaryGlands(x))", "score": 0}
{"id": "eqasc_train_411", "prediction": "all x.((Hyperthyroidism(x) & LowTSHLevels(x)) -> OccursIn(x,Hyperthyroidism))", "score": 0}
{"id": "eqasc_train_412", "prediction": "all x.(Hyperthyroidism(x) -> (LessProductionOfThyroidStimulatingHydrogen(x) & LessThyroidStimulatingHydrogen(x)))", "score": 0}
{"id": "eqasc_train_413", "prediction": "all x y.((ProlactinRelease(x) & PituitaryGlands(y)) -> StimulatesToProduceThyroidStimulatingHydrogen(x,y))", "score": 0}
{"id": "eqasc_train_414", "prediction": "all x.(ThyroidGlen(x) -> MaintainsStructuralIntegrity(x))", "score": 0}
{"id": "eqasc_train_415", "prediction": "all x.(Thyroid(x) -> StimulatesPituitaryGlands(x))", "score": 0}
{"id": "eqasc_train_416", "prediction": "all x.(PlantReproduction(x) -> RequiresPollen(x))", "score": 0}
{"id": "eqasc_train_417", "prediction": "all x.((Honeybee(x) | Bee(x)) -> TransfersPollen(x))", "score": 0}
{"id": "eqasc_train_418", "prediction": "all x.(PlantReproduction(x) -> RequiresHoneybees(x))", "score": 0}
{"id": "eqasc_train_419", "prediction": "all x y z.((Bee(x) & Plant(y) & Plant(z) & CollectsNectar(x,y) & CollectsPollen(x,z)) -> CarriesPollen(x,y,z))", "score": 0}
{"id": "eqasc_train_420", "prediction": "all x.(PlantReproduction(x) -> RequiresBees(x))", "score": 0}
{"id": "eqasc_train_421", "prediction": "all x.(Pollen(x) -> OriginatesFromPlants(x))", "score": 0}
{"id": "eqasc_train_422", "prediction": "all x.(ReproductionRequiresPollen(x) -> RequiresPollen(x))", "score": 0}
{"id": "eqasc_train_423", "prediction": "all x.((HayFever(x) | PollenAllergy(x)) -> MostPrevalentAllergy(x))", "score": 0}
{"id": "eqasc_train_424", "prediction": "all x y.((PlantReproduction(x) & Plant(y)) -> (Requires(x,y) & CausesAllergies(x)))", "score": 0}
{"id": "eqasc_train_425", "prediction": "all x y.((PlantReproduction(x) & PlantReproduction(y)) -> (Requires(x,y) & CausesAllergies(x)))", "score": 0}
{"id": "eqasc_train_426", "prediction": "all x.(Bee(x) -> (FeedsOnNectar(x) & FeedsOnPollen(x)))", "score": 0}
{"id": "eqasc_train_427", "prediction": "all x.(PlantReproduction(x) -> (RequiresBees(x) & RequiresNectar(x)))", "score": 0}
{"id": "eqasc_train_428", "prediction": "all x.(Fern(x) -> VascularPlant(x))", "score": 0}
{"id": "eqasc_train_429", "prediction": "all x.(FernReproduction(x) -> RequiresPollen(x))", "score": 0}
{"id": "eqasc_train_430", "prediction": "all x.(HayFever(x) -> (AllergicToPollens(x) | AllergicToMolds(x)))", "score": 0}
{"id": "eqasc_train_431", "prediction": "all x.(HayFever(x) -> (CausedByPlantReproduction(x) & PlantReproduction(x)))", "score": 0}
{"id": "eqasc_train_432", "prediction": "all x.(Insect(x) -> RequiresForPollenTransfer(x))", "score": 0}
{"id": "eqasc_train_433", "prediction": "all x.(PlantReproduction(x) -> RequiresInsects(x))", "score": 0}
{"id": "eqasc_train_434", "prediction": "all x.(PollenGrain(x) -> ContainsMaleGametes(x))", "score": 0}
{"id": "eqasc_train_435", "prediction": "all x.(PlantReproduction(x) -> RequiresGametes(x))", "score": 0}
{"id": "eqasc_train_436", "prediction": "all x.(SmokingTobacco(x) -> DecreasesStamina(x))", "score": 0}
{"id": "eqasc_train_437", "prediction": "all x.((Murmur(x) & (DecreasedStamina(x) | StuntedGrowth(x))) -> Significant(x))", "score": 0}
{"id": "eqasc_train_438", "prediction": "all x.(SmokingTobacco(x) -> CausesMurmur(x))", "score": 0}
{"id": "eqasc_train_439", "prediction": "all x.(AddedBenefit(x) -> (IncreasedStamina(x) & IncreasedAerobicCapacity(x)))", "score": 0}
{"id": "eqasc_train_440", "prediction": "all x.(SmokingTobacco(x) -> DecreasesAerobicCapacity(x))", "score": 0}
{"id": "eqasc_train_441", "prediction": "all x.(Athlete(x) -> PhysicalStamina(x))", "score": 0}
{"id": "eqasc_train_442", "prediction": "all x.(Smoking(x) -> HarmsAthletes(x))", "score": 0}
{"id": "eqasc_train_443", "prediction": "all x.(TobaccoCompany(x) -> MakesCigarettes(x))", "score": 0}
{"id": "eqasc_train_444", "prediction": "all x.(SmokingCigarettes(x) -> DecreasesStamina(x))", "score": 0}
{"id": "eqasc_train_445", "prediction": "all x.(Athlete(x) -> (PromotesStamina(x) & PromotesEndurance(x)))", "score": 0}
{"id": "eqasc_train_446", "prediction": "all x.(SmokingTobacco(x) -> DecreasesAthleticAbility(x))", "score": 0}
{"id": "eqasc_train_447", "prediction": "all x.(Tobacco(x) -> (SmokedInPipes(x) | SmokedInCigarettes(x) | SmokedInBidis(x)))", "score": 0}
{"id": "eqasc_train_448", "prediction": "all x.(SmokingPipes(x) -> DecreasesStamina(x))", "score": 0}
{"id": "eqasc_train_449", "prediction": "all x.(Smoke(x) -> HarmfulToLungs(x))", "score": 0}
{"id": "eqasc_train_450", "prediction": "all x.(Tobacco(x) -> HarmfulToLungs(x))", "score": 0}
{"id": "eqasc_train_451", "prediction": "all x.(Tobacco(x) -> GrownForCigaretteFactories(x))", "score": 0}
{"id": "eqasc_train_452", "prediction": "all x.(SmokingCigarettes(x) -> DecreasesStamina(x))", "score": 0}
{"id": "eqasc_train_453", "prediction": "all x.((GoodCigar(x) | QualityCigar(x)) -> ContainsTobacco(x))", "score": 0}
{"id": "eqasc_train_454", "prediction": "all x.(SmokingCigars(x) -> DecreasesStamina(x))", "score": 0}
{"id": "eqasc_train_455", "prediction": "all x.((ManualDexterity(x) & PhysicalStamina(x)) -> Vital(x))", "score": 0}
{"id": "eqasc_train_456", "prediction": "all x.(SmokingTobacco(x) -> DecreasesManualDexterity(x))", "score": 0}
{"id": "eqasc_train_457", "prediction": "all x.(LowGradeAnemia(x) -> (Develops(x) & LeadsToFatigue(x) & DecreasedStamina(x) & Worst(x)))", "score": 0}
{"id": "eqasc_train_458", "prediction": "all x.(SmokingTobacco(x) -> (LowGradeAnemia(x) & LowStamina(x)))", "score": 0}
{"id": "eqasc_train_459", "prediction": "all x.(Cigarette(x) -> DecreasesStamina(x))", "score": 0}
{"id": "eqasc_train_460", "prediction": "all x y.((TobaccoSmoke(x) & Breathing(x,y)) -> HarmfulToHealth(y))", "score": 0}
{"id": "eqasc_train_461", "prediction": "all x.(SecondhandSmoke(x) -> DecreasesStamina(x))", "score": 0}
{"id": "eqasc_train_462", "prediction": "all x.((EnergyLevel(x) & HighStamina(x) & DecreasedRecoveryTimeFromFatigue(x)) -> GoesUp(x))", "score": 0}
{"id": "eqasc_train_463", "prediction": "all x y.((SmokingTobacco(x) & Fatigue(y)) -> IncreasesTimeToRecoverFrom(x,y))", "score": 0}
{"id": "eqasc_train_464", "prediction": "all x.(Tobacco(x) -> SmokedInCigarettes(x))", "score": 0}
{"id": "eqasc_train_465", "prediction": "all x.(Cigarette(x) -> DecreasesStamina(x))", "score": 0}
{"id": "eqasc_train_466", "prediction": "all x.(TobaccoConsumption(x) -> (ConsumedInCigarettes(x) & -ConsumedInCigarettes(x)))", "score": 0}
{"id": "eqasc_train_467", "prediction": "all x.(Tobacco(x) -> (IncludesCigarettes(x) | IncludesCigars(x) | IncludesChoosingTobacco(x)))", "score": 0}
{"id": "eqasc_train_468", "prediction": "all x y.((Image(x) & Mirror(y) & ReflectsLight(x,y)) -> FormedByReflectingLight(x,y))", "score": 0}
{"id": "eqasc_train_469", "prediction": "all x.(Light(x) -> AllEyesCanSee(x))", "score": 0}
{"id": "eqasc_train_470", "prediction": "all x.(Mirror(x) -> CanBeSeenWithEyes(x))", "score": 0}
{"id": "eqasc_train_471", "prediction": "all x.(Light(x) -> MadeOfPhotons(x))", "score": 0}
{"id": "eqasc_train_472", "prediction": "all x y.((Image(x) & Mirror(y) & ReflectsPhotons(x,y)) -> FormedByReflectingPhotons(x,y))", "score": 0}
{"id": "eqasc_train_473", "prediction": "all x.(Water(x) -> (PerfectMirror(x) & ReflectsColorsUnchanged(x)))", "score": 0}
{"id": "eqasc_train_474", "prediction": "all x y.((Image(x) & Water(y)) -> FormedByReflectingLight(x,y))", "score": 0}
{"id": "eqasc_train_475", "prediction": "all x.(Light(x) -> (TravelsInRails(x) | TravelsInBeams(x)))", "score": 0}
{"id": "eqasc_train_476", "prediction": "all x y.((Image(x) & Mirror(y)) -> (FormedByReflectingRaysOrBeams(x,y)))", "score": 0}
{"id": "eqasc_train_477", "prediction": "all x.(Reflectance(x) -> (LightOut(x) & LightIn(x)))", "score": 0}
{"id": "eqasc_train_478", "prediction": "all x y.((Image(x) & Mirror(y)) -> (FormedByRatioOfLightOutToLightIn(x,y)))", "score": 0}
{"id": "eqasc_train_479", "prediction": "all x y.((Reflection(x) & ReflectiveSurface(y)) -> BouncingOfLightOff(x,y))", "score": 0}
{"id": "eqasc_train_480", "prediction": "all x y.((Image(x) & Reflection(y)) -> (FormedByLightBbouncingOffSurface(x,y)))", "score": 0}
{"id": "eqasc_train_481", "prediction": "all x.(Light(x) -> VisibleElectromagneticEnergy(x))", "score": 0}
{"id": "eqasc_train_482", "prediction": "all x y.((Image(x) & Mirror(y)) -> FormedByReflectingElectromagneticEnergy(x,y))", "score": 0}
{"id": "eqasc_train_483", "prediction": "all x.(IndirectLight(x) -> (RefractedLight(x) | ReflectedLight(x)))", "score": 0}
{"id": "eqasc_train_484", "prediction": "all x y.((MirrorImage(x) & IndirectLight(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_train_485", "prediction": "all x.((Mirror(x) & Telescope(x)) -> ReflectsLightWaves(x))", "score": 0}
{"id": "eqasc_train_486", "prediction": "all x y.((Waves(x) & Mirror(y)) -> ReflectedBy(x,y))", "score": 0}
{"id": "eqasc_train_487", "prediction": "all x y.((Seed(x) & Animal(y) & SticksToFur(x,y)) -> TransportedBy(x,y))", "score": 0}
{"id": "eqasc_train_488", "prediction": "all x y.((Seed(x) & AnimalHunt(y)) -> DisseminatedByTransport(x,y))", "score": 0}
{"id": "eqasc_train_489", "prediction": "all x y.((Seed(x) & Animal(y)) -> DisseminatedByStickingToFur(x,y))", "score": 0}
{"id": "eqasc_train_490", "prediction": "all x y.((GelatinousCoating(x) & Wet(y)) -> HelpsSeedsStickToFurAndClothing(x,y))", "score": 0}
{"id": "eqasc_train_491", "prediction": "all x.(GelatinousCoating(x) -> HelpsTransportSeeds(x))", "score": 0}
{"id": "eqasc_train_492", "prediction": "all x.(Mango(x) -> (PropagatedVegetatively(x) & BySeeds(x)))", "score": 0}
{"id": "eqasc_train_493", "prediction": "all x y.((Animal(x) & Mango(y)) -> Propagates(x,y))", "score": 0}
{"id": "eqasc_train_494", "prediction": "all x y.((SeedPod(x) & Seed(y)) -> (TransportedByFloodwater(x) | EatenByAnimals(x) & SpreadInManure(x)))", "score": 0}
{"id": "eqasc_train_495", "prediction": "all x.((Seed(x) & StuckToAnimalFur(x)) -> CanSpread(x))", "score": 0}
{"id": "eqasc_train_496", "prediction": "all x.(Rabbit(x) -> (BrownSummerFur(x) & GreyerFur(x)))", "score": 0}
{"id": "eqasc_train_497", "prediction": "all x y.((Seed(x) & Rabbit(y) & SticksTo(x,y)) -> TransportedBy(x,y))", "score": 0}
{"id": "eqasc_train_498", "prediction": "all x.((Burrs(x) | OtherSeeds(x)) -> (HasTinyBars(x) & HooksOnToCatFur(x)))", "score": 0}
{"id": "eqasc_train_499", "prediction": "all x y.((Burr(x) & Animal(y) & SticksToFur(x,y)) -> BurrsTransportedBy(x,y))", "score": 0}
{"id": "eqasc_train_500", "prediction": "all x y.((Seed(x) & Mammal(y) & SticksToFur(x,y)) -> MammalTransportsSeed(x,y))", "score": 0}
{"id": "eqasc_train_501", "prediction": "all x y.((Bird(x) & Wind(y)) -> (MainTransporterOfBerries(x,y) & PrimaryTransporterOfSeeds(x,y)))", "score": 0}
{"id": "eqasc_train_502", "prediction": "all x.(Bird(x) -> (CarriesSeedsInFeathers(x) | CarriesSeedsInFeathers(x)))", "score": 0}
{"id": "eqasc_train_503", "prediction": "all x.(Plant(x) -> GrowsFromSeeds(x))", "score": 0}
{"id": "eqasc_train_504", "prediction": "all x y.((AnimalFur(x) & Plant(y)) -> CanHelpGrow(x,y))", "score": 0}
{"id": "eqasc_train_505", "prediction": "all x.(Budgerigar(x) -> (CracksSeed(x) & EatsKernel(x) & LeavesHusk(x)))", "score": 0}
{"id": "eqasc_train_506", "prediction": "all x y.((Kernel(x) & Animal(y) & SticksToFur(x,y)) -> TransportedBy(x,y))", "score": 0}
{"id": "eqasc_train_507", "prediction": "all x.((Animal(x) & HasFur(x)) -> HelpsTreesDisperseSeeds(x))", "score": 0}
{"id": "eqasc_train_508", "prediction": "all x.(AnimalFur(x) -> HelpsTreeDispersion(x))", "score": 0}
{"id": "eqasc_train_509", "prediction": "all x y.((Condensation(x) & Gas(y) & Liquid(y)) -> ChangesByReducingHeatEnergy(x,y))", "score": 0}
{"id": "eqasc_train_510", "prediction": "all x.(Cloud(x) -> (CondensationOfWaterVapor(x) & FormsBy(x,WaterVapor)))", "score": 0}
{"id": "eqasc_train_511", "prediction": "all x y.((WaterVapor(x) & Gas(y) & ChangesIntoLiquid(y,x)) -> ReducesHeatEnergy(x))", "score": 0}
{"id": "eqasc_train_512", "prediction": "all x.(Heat(x) -> KineticEnergy(x))", "score": 0}
{"id": "eqasc_train_513", "prediction": "all x y.((Condensation(x) & Gas(y) & Liquid(y)) -> ChangesByReducingKineticEnergy(x,y))", "score": 0}
{"id": "eqasc_train_514", "prediction": "all x.(Condensation(x) -> WaterFromAir(x))", "score": 0}
{"id": "eqasc_train_515", "prediction": "all x y z.((Water(x) & Gas(y) & Air(z)) -> ChangesToLiquid(x,y,z))", "score": 0}
{"id": "eqasc_train_516", "prediction": "all x.(Condensation(x) -> (ReverseOfVaporization(x) | ChangeFromLiquidToGas(x)))", "score": 0}
{"id": "eqasc_train_517", "prediction": "all x y.((HeatEnergy(x) & HeatEnergy(y)) -> Vaporization(x))", "score": 0}
{"id": "eqasc_train_518", "prediction": "all x.(Vaporization(x) -> CreatesCondensation(x))", "score": 0}
{"id": "eqasc_train_519", "prediction": "all x y.((Water(x) & Air(y) & Gas(y) & ReducesHeatEnergy(x,y)) -> ChangesToLiquid(x))", "score": 0}
{"id": "eqasc_train_520", "prediction": "all x.(Condensing(x) -> (Gas(x) & TurnsIntoLiquid(x)))", "score": 0}
{"id": "eqasc_train_521", "prediction": "all x y.((GasCondenser(x) & HeatReduced(y)) -> Condenses(x,y))", "score": 0}
{"id": "eqasc_train_522", "prediction": "all x y.((Evaporation(x) & Condensation(y)) -> (AbsorbsHeat(x) & ReleasesHeat(y)))", "score": 0}
{"id": "eqasc_train_523", "prediction": "all x y.((Evaporation(x) & Heat(y)) -> Absorbs(x,y))", "score": 0}
{"id": "eqasc_train_524", "prediction": "all x.(LightEnergy(x) -> ConvertedToHeatEnergy(x))", "score": 0}
{"id": "eqasc_train_525", "prediction": "all x.(DecreasingLight(x) -> (CoolerTemperatures(x) & MoreCondensation(x)))", "score": 0}
{"id": "eqasc_train_526", "prediction": "all x.(Temperature(x) -> HeatEnergyMeasure(x))", "score": 0}
{"id": "eqasc_train_527", "prediction": "all x y z.((Condensation(x) & Gas(y) & Liquid(z)) -> (ChangesFromTo(x,y,z) & ReducesTemperature(x)))", "score": 0}
{"id": "eqasc_train_528", "prediction": "all x y z.((Solution(x) & Substance(y) & Substance(z) & DissolvedIn(y,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_train_529", "prediction": "all x.(Solvent(x) -> (Substance(x) & Liquid(x) & DissolvesSubstances(x)))", "score": 0}
{"id": "eqasc_train_530", "prediction": "all x.(Solution(x) -> DissolvedSolvents(x))", "score": 0}
{"id": "eqasc_train_531", "prediction": "all x y.((Water(x) & DissolvedSubstance(y)) -> (AsSolvent(x) & AsSolute(y)))", "score": 0}
{"id": "eqasc_train_532", "prediction": "all x y z.((Solution(x) & Solute(y) & Solvent(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_train_533", "prediction": "all x.((DissolvedSubstance(x) & OceanWater(x)) -> (Limestone(x)))", "score": 0}
{"id": "eqasc_train_534", "prediction": "all x.((Limestone(x) & DissolvedInOceanWater(x)) -> FormedSolution(x))", "score": 0}
{"id": "eqasc_train_535", "prediction": "all x.(Salinity(x) -> (SaltsDissolvedInWater(x)))", "score": 0}
{"id": "eqasc_train_536", "prediction": "all x.(SalineSolution(x) -> AddsSaltToWater(x))", "score": 0}
{"id": "eqasc_train_537", "prediction": "all x.(HomogeneousMixture(x) -> Solution(x))", "score": 0}
{"id": "eqasc_train_538", "prediction": "all x y.((Substance(x) & Substance(y) & DissolvesIn(x,y)) -> HomogenousMixture(x))", "score": 0}
{"id": "eqasc_train_539", "prediction": "all x.(Substance(x) -> (existsAsSolid(x) | ExistsAsLiquid(x) | ExistsAsGas(x)))", "score": 0}
{"id": "eqasc_train_540", "prediction": "all x y z.((Solution(x) & Solid(y) & Liquid(z) & Gas(y) & Solid(z) & Liquid(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_train_541", "prediction": "all x y z.((Solvent(x) & Solvent(y) & Solute(z) & Dissolves(y,z)) -> Formed(x))", "score": 0}
{"id": "eqasc_train_542", "prediction": "all x.(WhiteVincent(x) -> 5PercentAcidSolution(x))", "score": 0}
{"id": "eqasc_train_543", "prediction": "all x y.((WhiteVincent(x) & Substance(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_train_544", "prediction": "all x.(UnsaturatedSolution(x) -> DiluteSolution(x))", "score": 0}
{"id": "eqasc_train_545", "prediction": "all x.(Dilution(x) -> exists y.(Substance(y) & Dissolved(x,y)))", "score": 0}
{"id": "eqasc_train_546", "prediction": "all x y.((Carbon(x) & Organism(y) & Atmosphere(y)) -> CyclesQuickly(x,y))", "score": 0}
{"id": "eqasc_train_547", "prediction": "all x.(Carbon(x) -> EssentialComponentOfLivingOrganisms(x))", "score": 0}
{"id": "eqasc_train_548", "prediction": "all x.((Atmosphere(x) & LivingOrganism(x)) -> EssentialTo(x,livingOrganisms))", "score": 0}
{"id": "eqasc_train_549", "prediction": "all x.(Deforestation(x) -> DisruptsCarbonCycle(x))", "score": 0}
{"id": "eqasc_train_550", "prediction": "all x y.((Deforestation(x) & Organism(y)) -> DisruptsCycle(x,y))", "score": 0}
{"id": "eqasc_train_551", "prediction": "all x.(Atmosphere(x) -> BlankOfAirAroundEarth(x))", "score": 0}
{"id": "eqasc_train_552", "prediction": "all x y z.((Carbon(x) & Organism(y) & BlankOfAir(z)) -> CyclesQuickly(x,y,z))", "score": 0}
{"id": "eqasc_train_553", "prediction": "all x y z.((Deforestation(x) & Organism(y) & Atmosphere(z)) -> (Disrupts(x,y) & Disrupts(x,z)))", "score": 0}
{"id": "eqasc_train_554", "prediction": "all x.((LivingThing(x) & NeedsWater(x) & NeedsCarbonDioxide(x) & NeedsNitrogen(x)) -> NeededBy(x,livingThing))", "score": 0}
{"id": "eqasc_train_555", "prediction": "all x y.((Atmosphere(x) & LivingThing(y)) -> NeededBy(x,y))", "score": 0}
{"id": "eqasc_train_556", "prediction": "all x.(CarbonDioxide(x) -> ControlledByCarbonCycle(x))", "score": 0}
{"id": "eqasc_train_557", "prediction": "all x y z.((Organism(x) & Atmosphere(y) & CarbonDioxide(z)) -> ControlledBetween(x,z))", "score": 0}
{"id": "eqasc_train_558", "prediction": "all x.(OrganicMolecule(x) -> InvolvesCarbon(x))", "score": 0}
{"id": "eqasc_train_559", "prediction": "all x y z.((OrganicMolecule(x) & Organism(y) & Atmosphere(z)) -> CyclesRapidly(x,y,z))", "score": 0}
{"id": "eqasc_train_560", "prediction": "all x y z.((CarbonDioxide(x) & Organism(y) & Atmosphere(z)) -> (ControledByCarbonCircle(x) & TransferredBetween(x,y,z)))", "score": 0}
{"id": "eqasc_train_561", "prediction": "all x y.((Animal(x) & Animal(y)) -> (CausesAnimalsToFight(x,y) & MembersOfOwnSpecies(y)))", "score": 0}
{"id": "eqasc_train_562", "prediction": "all x.(MaleAnimal(x) -> CommonInNature(x))", "score": 0}
{"id": "eqasc_train_563", "prediction": "all x y.((Male(x) & Male(y)) -> FightsOwnSpecies(x,y))", "score": 0}
{"id": "eqasc_train_564", "prediction": "all x y.((MockFight(x) & Animal(y)) -> (TeachesInteraction(x,y) & InteractsWith(x,y)))", "score": 0}
{"id": "eqasc_train_565", "prediction": "all x y.((Competition(x) & Animal(y)) -> Interacts(x,y))", "score": 0}
{"id": "eqasc_train_566", "prediction": "all x.(Gorilla(x) -> (FightsForDomination(x) & Resources(x)))", "score": 0}
{"id": "eqasc_train_567", "prediction": "all x y.((Competition(x) & Gorilla(y)) -> MayDominateResources(x,y))", "score": 0}
{"id": "eqasc_train_568", "prediction": "all x.(Human(x) -> Animal(x))", "score": 1}
{"id": "eqasc_train_569", "prediction": "all x y.((Human(x) & Human(y)) -> (ChallengesFight(x,y) & CausesFight(x,y)))", "score": 0}
{"id": "eqasc_train_570", "prediction": "all x.((Habitat(x) & Healthy(x)) -> (CompeteForResources(x) & Coexist(x)))", "score": 0}
{"id": "eqasc_train_571", "prediction": "all x y.((Species(x) & CompetesForResources(x,y)) -> MayCauseFighting(x,y))", "score": 0}
{"id": "eqasc_train_572", "prediction": "all x.(Competition(x) -> (CompeteForFood(x) & CompeteForShelter(x)))", "score": 0}
{"id": "eqasc_train_573", "prediction": "all x y.((Animal(x) & Animal(y)) -> (FightsTowards(x,y) | (FightsTowards(y,x) | Against(y,x)))))", "score": -1}
{"id": "eqasc_train_574", "prediction": "all x.(Lion(x) -> (PantheraLeo(x) & MemberOfSpecies(x)))", "score": 0}
{"id": "eqasc_train_575", "prediction": "all x y.((Lion(x) & Lion(y)) -> (CausesFight(x,y) | CausesFight(x,y)))", "score": 0}
{"id": "eqasc_train_576", "prediction": "all x y z.((Species(x) & Genus(y) & Family(z)) -> (PropertyOf(x,y) & PropertyOf(x,z)))", "score": 0}
{"id": "eqasc_train_577", "prediction": "all x y.((Competition(x) & Animal(y)) -> (CausesFight(y,x) & MembersOfGenusProperty(y,x)))", "score": 0}
{"id": "eqasc_train_578", "prediction": "all x.(NestSite(x) -> (Fierce(x) & CommonFighting(x)))", "score": 0}
{"id": "eqasc_train_579", "prediction": "all x y.((FierceFightingForNestSites(x) & Animal(y)) -> (FightsTowardsMemberOfOwnSpecies(y) & MembersOfOwnSpecies(y)))", "score": 0}
{"id": "eqasc_train_580", "prediction": "all x.((Competition(x) & ResourceScarce(x)) -> (Fierce(x) & Scarce(x)))", "score": 0}
{"id": "eqasc_train_581", "prediction": "all x y.((SharpResources(x) & Animal(y)) -> (FightsTowardsMembersOfOwnSpecies(y,x) | Animal(y,x)))", "score": 0}
{"id": "eqasc_train_582", "prediction": "all x.(Virus(x) -> (Small(x) & CanBeSeenWithElectronMicroscope(x)))", "score": 0}
{"id": "eqasc_train_583", "prediction": "all x.((Virus(x) & DNA(x)) -> RNAVirus(x))", "score": 0}
{"id": "eqasc_train_584", "prediction": "all x.((HIV(x) & Small(x)) -> CanBeSeenWithElectronMicroscope(x))", "score": 0}
{"id": "eqasc_train_585", "prediction": "all x y.((Camera(x) & Microscope(y) & TunedWith(x,y)) -> FocusesOn(x,y))", "score": 0}
{"id": "eqasc_train_586", "prediction": "all x.(Virus(x) -> (Small(x) & CanBeSeenByFocusingLens(x)))", "score": 0}
{"id": "eqasc_train_587", "prediction": "all x.(ElectronMicroscope(x) -> NeededToSeeViruses(x))", "score": 0}
{"id": "eqasc_train_588", "prediction": "all x.(Virus(x) -> (CanBeSeenWithMicroscope(x) & -CanBeSeenWithMicroscope(x)))", "score": 0}
{"id": "eqasc_train_589", "prediction": "all x.(ElectronMicroscope(x) -> DevelopedInGermany(x))", "score": 0}
{"id": "eqasc_train_590", "prediction": "all x.(Virus(x) -> (Small(x) & CanBeSeenWithDevice(x) & DevelopedInGermany(x)))", "score": 0}
{"id": "eqasc_train_591", "prediction": "all x y.((Object(x) & Electron(y) & IlluminatedBy(x,y)) -> ElectronMicroscope(x))", "score": 0}
{"id": "eqasc_train_592", "prediction": "all x.(Virus(x) -> IlluminatesElectrons(x))", "score": 0}
{"id": "eqasc_train_593", "prediction": "all x.(Virus(x) -> (Small(x) & NanometerSize(x)))", "score": 0}
{"id": "eqasc_train_594", "prediction": "all x.((Object(x) & NanometerSize(x)) -> CanBeSeenWithElectronMicroscope(x))", "score": 0}
{"id": "eqasc_train_595", "prediction": "exists x.(SmallpoxVirus(x) & MaintainedInLaboratory(x))", "score": 0}
{"id": "eqasc_train_596", "prediction": "all x.(SmallPox(x) -> (Small(x) & CanBeSeenWithElectronMicroscope(x)))", "score": 0}
{"id": "eqasc_train_597", "prediction": "all x.(Virus(x) -> (StudiesByRadiography(x) & UsesElectronMicroscope(x)))", "score": 0}
{"id": "eqasc_train_598", "prediction": "all x y.((Radiography(x) & Viral(y)) -> UsedToStudy(x,y))", "score": 0}
{"id": "eqasc_train_599", "prediction": "all x.(MicroscopeColorFilter(x) -> MicroscopicLens(x))", "score": 0}
{"id": "eqasc_train_600", "prediction": "all x.(Virus(x) -> (Small(x) & CanBeSeenWithElectronLens(x)))", "score": 0}
{"id": "eqasc_train_601", "prediction": "all x.(Virus(x) -> TobaccoMosaicVirus(x))", "score": 0}
{"id": "eqasc_train_602", "prediction": "all x.(TobaccoMosaic(x) -> (Small(x) & CanBeSeenWithElectronMicroscope(x)))", "score": 0}
{"id": "eqasc_train_603", "prediction": "all x y.((Plant(x) & Plant(y)) -> (WaxyLeaves(x) & UsedForStoringWater(x,y)))", "score": 0}
{"id": "eqasc_train_604", "prediction": "all x.(WaxyLeaves(x) -> KeepsPlantFromDryingOut(x))", "score": 0}
{"id": "eqasc_train_605", "prediction": "all x y.((Leaves(x) & Plant(y) & KeepsFromDryingOut(x,y)) -> UsedForStoringWater(x,y))", "score": 0}
{"id": "eqasc_train_606", "prediction": "all x.(Leaves(x) -> (Waxy(x) & PreventsDrying(x)))", "score": 0}
{"id": "eqasc_train_607", "prediction": "all x.(SemiAridClimate(x) -> (PlantsStoreWater(x) & StoreWater(x)))", "score": 0}
{"id": "eqasc_train_608", "prediction": "all x.(Plant(x) -> (HasAdaptations(x) & (ConservesWater(x) | StoresWater(x))))", "score": 0}
{"id": "eqasc_train_609", "prediction": "all x y.((Plant(x) & Plant(y)) -> (WaxyLeaves(x) & WaterConservation(y)))", "score": 0}
{"id": "eqasc_train_610", "prediction": "all x.(Kalanchoe(x) -> (WaxyLeaves(x) & ThickLeaves(x) & DarkGreenLeaves(x)))", "score": 0}
{"id": "eqasc_train_611", "prediction": "all x.(Kalenchoe(x) -> UsesLeavesToStoreWater(x))", "score": 0}
{"id": "eqasc_train_612", "prediction": "all x.(Leaves(x) -> (Long(x) & Oval(x) & Waxy(x)))", "score": 0}
{"id": "eqasc_train_613", "prediction": "all x.(Leaves(x) -> StoresWater(x))", "score": 0}
{"id": "eqasc_train_614", "prediction": "all x.(Cactus(x) -> (WaxyCoating(x) & HelpsPlantConserveMoisture(x) & DesertClimate(x)))", "score": 0}
{"id": "eqasc_train_615", "prediction": "all x.(Cactus(x) -> (StoresWater(x) & WaxyLeaves(x)))", "score": 0}
{"id": "eqasc_train_616", "prediction": "all x.(Orchid(x) -> (FleshyPods(x) & WaxyLeaves(x) & StoresWater(x)))", "score": 0}
{"id": "eqasc_train_617", "prediction": "all x.(Orchid(x) -> KeepsWaterInLeaves(x))", "score": 0}
{"id": "eqasc_train_618", "prediction": "all x.(Bromeliad(x) -> (GroupOfPlants(x) & StiffWaxyLeaves(x) & CupShapedBody(x)))", "score": 0}
{"id": "eqasc_train_619", "prediction": "all x.(Bromeliad(x) -> StoresWaterInWaxyLeaves(x))", "score": 0}
{"id": "eqasc_train_620", "prediction": "all x.(Leaves(x) -> (WaxyLayer(x) & Cuticle(x) & PreventsWaterLoss(x)))", "score": 0}
{"id": "eqasc_train_621", "prediction": "all x y.((Leaves(x) & Cuticle(y)) -> (CoveredWith(x,y) & StoresWaterInPlants(x)))", "score": 0}
{"id": "eqasc_train_622", "prediction": "all x.(ChemicalReaction(x) -> RequiresActivationEnergy(x))", "score": 4}
{"id": "eqasc_train_623", "prediction": "all x.(ActivationEnergy(x) -> (InputEnergy(x) & ReactionStarted(x)))", "score": 0}
{"id": "eqasc_train_624", "prediction": "all x.(ChemicalReaction(x) -> RequiresInitialEnergyInput(x))", "score": 0}
{"id": "eqasc_train_625", "prediction": "all x.(ActivationEnergy(x) -> OvercomesEnergyBarrier(x))", "score": 0}
{"id": "eqasc_train_626", "prediction": "all x.((OvercomingEnergyBarrier(x) & ChemicalReaction(x)) -> Starts(x,ChemicalReaction))", "score": 0}
{"id": "eqasc_train_627", "prediction": "all x.(Fire(x) -> ChemicalReaction(x))", "score": 2}
{"id": "eqasc_train_628", "prediction": "all x.(Fire(x) -> RequiresActivationEnergy(x))", "score": 1}
{"id": "eqasc_train_629", "prediction": "all x.(Fire(x) -> RequiresActivationEnergy(x))", "score": 1}
{"id": "eqasc_train_630", "prediction": "all x.(Heat(x) -> Energy(x))", "score": 0}
{"id": "eqasc_train_631", "prediction": "all x.(ChemicalReaction(x) -> RequiresHeat(x))", "score": 0}
{"id": "eqasc_train_632", "prediction": "all x.(ChemicalChange(x) -> ChemicalReaction(x))", "score": 1}
{"id": "eqasc_train_633", "prediction": "all x.(ChemicalChange(x) -> RequiresActivationEnergy(x))", "score": 1}
{"id": "eqasc_train_634", "prediction": "all x.(ChemicalChange(x) -> ChemicalReaction(x))", "score": 1}
{"id": "eqasc_train_635", "prediction": "all x.(ActivationEnergy(x) -> ChemicalChange(x))", "score": 0}
{"id": "eqasc_train_636", "prediction": "all x.(ChemicalReaction(x) -> OvercomesEnergyBarrier(x))", "score": 0}
{"id": "eqasc_train_637", "prediction": "all x.(Enzyme(x) -> (Catalyst(x) & SpeedUpReactions(x) & DecreaseActivationEnergy(x)))", "score": 0}
{"id": "eqasc_train_638", "prediction": "all x.(Enzyme(x) -> MakesChemicalReactionsEasierToGetStarted(x))", "score": 0}
{"id": "eqasc_train_639", "prediction": "all x.(Catalyst(x) -> LowersActivationEnergy(x))", "score": 0}
{"id": "eqasc_train_640", "prediction": "all x.(Catalyst(x) -> HelpsChemicalReactionsToGetStarted(x))", "score": 0}
{"id": "eqasc_train_641", "prediction": "all x.(Catalyst(x) -> LowersActivationEnergy(x))", "score": 0}
{"id": "eqasc_train_642", "prediction": "all x y.((Catalyst(x) & ChemicalReaction(y)) -> LowersEnergyCost(x,y))", "score": 0}
{"id": "eqasc_train_643", "prediction": "all x.(ChemicalChange(x) -> RequiresActivationEnergy(x))", "score": 1}
{"id": "eqasc_train_644", "prediction": "all x.(ChemicalEquation(x) -> DefinesChemicalReactions(x))", "score": 0}
{"id": "eqasc_train_645", "prediction": "all x.(ChemicalEquation(x) -> (DepictsActivationEnergy(x) & RequiresActivationEnergy(x)))", "score": 0}
{"id": "eqasc_train_646", "prediction": "all x y.((Catalyst(x) & ChemicalReaction(y)) -> LowersInput(x,y))", "score": 0}
{"id": "eqasc_train_647", "prediction": "all x.(Amphibian(x) -> (TrueTetrapod(x) | VertebratesWithFourLimbs(x)))", "score": 1}
{"id": "eqasc_train_648", "prediction": "all x.(Tetrapod(x) -> (OfOldest(x) & MostComplete(x)))", "score": 0}
{"id": "eqasc_train_649", "prediction": "all x.(Ancathosteg(x) -> HasFourLimbs(x))", "score": 0}
{"id": "eqasc_train_650", "prediction": "all x.((Vertebrate(x) & MoreAdvancedThanFish(x)) -> (HasFourLimbs(x) & HasUpToFiveFingersOrToes(x)))", "score": 0}
{"id": "eqasc_train_651", "prediction": "all x y.((Amphibian(x) & Fish(y) & HasFourLimbs(x)) -> MoreAdvanced(x,y))", "score": 0}
{"id": "eqasc_train_652", "prediction": "all x.(Bullfrog(x) -> EatsAmphibians(x))", "score": 0}
{"id": "eqasc_train_653", "prediction": "all x.(Bullfrog(x) -> (Creature(x) & TrueTetrapod(x)))", "score": 0}
{"id": "eqasc_train_654", "prediction": "all x.(Frog(x) -> Amphibian(x))", "score": 0}
{"id": "eqasc_train_655", "prediction": "all x.(Frog(x) -> Tetrapod(x))", "score": 0}
{"id": "eqasc_train_656", "prediction": "all x.(Frog(x) -> Amphibian(x))", "score": 7}
{"id": "eqasc_train_657", "prediction": "all x.(Frog(x) -> (Vertebrate(x) & FourLimbs(x)))", "score": 0}
{"id": "eqasc_train_658", "prediction": "(all x.(Frog(x) -> Amphibian(x)) & all y.(Duck(y) -> Aes(y)))", "score": 1}
{"id": "eqasc_train_659", "prediction": "all x.(Frog(x) -> (TrueTetrapod(x) | VertebratesWithFourLimbs(x)))", "score": 1}
{"id": "eqasc_train_660", "prediction": "all x.((Animal(x) & HasBackbone(x)) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_train_661", "prediction": "all x.(Amphibian(x) -> (FirstTrueAnimal(x) & HasBackbones(x,4) & HasFourLimbs(x)))", "score": 0}
{"id": "eqasc_train_662", "prediction": "all x y.((Tetrapod(x) & Skull(y)) -> ReliesOnStructure(x,y))", "score": 0}
{"id": "eqasc_train_663", "prediction": "all x.(Amphibian(x) -> (ClassifiedBySkull(x) & BasedOnSkull(x)))", "score": 0}
{"id": "eqasc_train_664", "prediction": "all x.(Tetrapod(x) -> Monophyletic(x))", "score": 0}
{"id": "eqasc_train_665", "prediction": "all x.(Amphibian(x) -> (Monophyletic(x) & FourLimbs(x)))", "score": 0}
{"id": "eqasc_train_666", "prediction": "all x.((Animal(x) & FrogFamily(x)) -> TrueTetrapod(x))", "score": 0}
{"id": "eqasc_train_667", "prediction": "all x y.((Object(x) & ReflectsLightTowardsEye(x)) -> CanBeSeen(x,y))", "score": 0}
{"id": "eqasc_train_668", "prediction": "all x.((Eye(x) & -Light(x)) -> -ConnectsToObject(x))", "score": 0}
{"id": "eqasc_train_669", "prediction": "all x.((Object(x) & -Light(x)) -> -CanBeSeen(x))", "score": 0}
{"id": "eqasc_train_670", "prediction": "all x.(Mirror(x) -> ReflectsLight(x))", "score": 0}
{"id": "eqasc_train_671", "prediction": "all x y.((Mirror(x) & Object(y)) -> ReflectsTowardsEye(x,y))", "score": 0}
{"id": "eqasc_train_672", "prediction": "all x.(Eyes(x) -> (DetectsLight(x) & OrganizedIntoImages(x) & FallOnRetina(x)))", "score": 0}
{"id": "eqasc_train_673", "prediction": "all x y.((Object(x) & Light(y) & Images(z) & FallOnRetina(x,y,z)) -> Seen(x))", "score": 0}
{"id": "eqasc_train_674", "prediction": "all x.(Object(x) -> ScatteredLight(x))", "score": 0}
{"id": "eqasc_train_675", "prediction": "all x y.((ScatteredLightObject(x) & Eye(y)) -> ReflectsLightTowards(x,y))", "score": 0}
{"id": "eqasc_train_676", "prediction": "all x.(Light(x) -> Sun(x))", "score": 0}
{"id": "eqasc_train_677", "prediction": "all x.((ReflectsSunTowardsEye(x)) -> CanBeSeen(x))", "score": 0}
{"id": "eqasc_train_678", "prediction": "all x.(Light(x) -> FocusedOnRetina(x))", "score": 0}
{"id": "eqasc_train_679", "prediction": "all x.((Object(x) & FocussedOnRetina(x)) -> CanBeSeen(x))", "score": 0}
{"id": "eqasc_train_680", "prediction": "all x.(Moonlight(x) -> (Sunlight(x) & ReflectedOffMoon(x)))", "score": 0}
{"id": "eqasc_train_681", "prediction": "all x y.((Light(x) & Moon(y) & Eyes(y)) -> Sun(x))", "score": 0}
{"id": "eqasc_train_682", "prediction": "all x.(Light(x) -> MadeUpOfPhotons(x))", "score": 0}
{"id": "eqasc_train_683", "prediction": "all x.((ReflectsPhotonsTowardsEye(x)) -> CanBeSeen(x))", "score": 0}
{"id": "eqasc_train_684", "prediction": "all x y.((Object(x) & ReflectsPhotonsTowardsEye(x)) -> CanBeSeen(x,y))", "score": 0}
{"id": "eqasc_train_685", "prediction": "all x.((ReflectsRaysOrBeamsTowardsEye(x)) -> CanBeSeen(x))", "score": 0}
{"id": "eqasc_train_686", "prediction": "all x y.((WhiteObject(x) & DarkObject(y)) -> ReflectsMore(x,y))", "score": 0}
{"id": "eqasc_train_687", "prediction": "all x.(WhiteObject(x) -> CanBeSeenMore(x))", "score": 0}
{"id": "eqasc_train_688", "prediction": "all x.(Echinoderm(x) -> LacksCentralizedNervousSystem(x))", "score": 1}
{"id": "eqasc_train_689", "prediction": "all x.(Echinoderm(x) -> (Starfish(x) | SeaUrchin(x) | SeaCucumber(x)))", "score": 0}
{"id": "eqasc_train_690", "prediction": "all x y.((Starfish(x) | SeaUrchin(x) | SeaCucumber(y)) -> -CentralizedNervousSystem(x))", "score": 0}
{"id": "eqasc_train_691", "prediction": "all x.(Starfish(x) -> LacksCentralizedNervousSystem(x))", "score": 0}
{"id": "eqasc_train_692", "prediction": "all x.(Starfish(x) -> -CentralizedNervousSystem(x))", "score": 0}
{"id": "eqasc_train_693", "prediction": "all x.((AnimalExperiment(x) & CentralNervousSystemToxin(x)) -> Toxin(x))", "score": 0}
{"id": "eqasc_train_694", "prediction": "all x.(Echinoderm(x) -> ResistantToToxics(x))", "score": 0}
{"id": "eqasc_train_695", "prediction": "all x.(Starfish(x) -> LacksCentralizedNervousSystem(x))", "score": 0}
{"id": "eqasc_train_696", "prediction": "all x.(SeaUrchin(x) -> (LacksCentralizedNervousSystem(x) & -CentralizedNervousSystem(x)))", "score": 0}
{"id": "eqasc_train_697", "prediction": "all x.((SandDollar(x) | SeaBird(x)) -> Echinoderm(x))", "score": 1}
{"id": "eqasc_train_698", "prediction": "all x.(SandDollar(x) -> LacksCentralizedNervousSystem(x))", "score": 1}
{"id": "eqasc_train_699", "prediction": "exists x.(Deuterostome(x) & LacksCentralizedNervousSystem(x))", "score": 0}
{"id": "eqasc_train_700", "prediction": "all x.(Echinoid(x) -> LacksCentralizedNervousSystem(x))", "score": 0}
{"id": "eqasc_train_701", "prediction": "all x y.((Individual(x) & Population(y)) -> MovesIntoOrOutOf(x,y))", "score": 0}
{"id": "eqasc_train_702", "prediction": "all x.(Gene(x) -> SpecificTreatments(x))", "score": 0}
{"id": "eqasc_train_703", "prediction": "all x y.((Population(x) & Population(y)) -> (AffectsTraits(x,y) & MovesIntoOrOutOf(x,y)))", "score": 0}
{"id": "eqasc_train_704", "prediction": "all x.(GeneFlow(x) -> DecreasesDifferensitivities(x))", "score": 0}
{"id": "eqasc_train_705", "prediction": "all x y.((Individual(x) & Population(y) & MovesIntoOrOutOf(x,y)) -> DecreasedDifferenciation(x))", "score": 0}
{"id": "eqasc_train_706", "prediction": "all x y.((GeneFlow(x) & Population(y)) -> IncreasesGeneticVariation(x,y))", "score": 0}
{"id": "eqasc_train_707", "prediction": "all x y.((GeneticVariation(x) & PopulationMovement(y)) -> IncreasedWithIncreased(x,y))", "score": 0}
{"id": "eqasc_train_708", "prediction": "all x.(CommunityHealth(x) -> (FocusesOnHealthOfPopulationsOrGroups(x)))", "score": 0}
{"id": "eqasc_train_709", "prediction": "all x y.((Individual(x) & Community(y)) -> MovesIntoOrOutOf(x,y))", "score": 0}
{"id": "eqasc_train_710", "prediction": "all x.(Person(x) -> (Individual(x) & DifferentNeeds(x)))", "score": 0}
{"id": "eqasc_train_711", "prediction": "all x y.((GeneFlow(x) & Population(y)) -> (MovesInto(x,y) | MovesOut(x,y)))", "score": 0}
{"id": "eqasc_train_712", "prediction": "all x.((GeneticDiversity(x) & SmallPopulation(x) & SmallGeneFlow(x)) -> Maintains(x,y))", "score": 0}
{"id": "eqasc_train_713", "prediction": "all x y.((Individual(x) & Population(y) & MovesIntoOrOutOf(x,y)) -> GeneticDiversityMaintained(x))", "score": 0}
{"id": "eqasc_train_714", "prediction": "all x y.((DecreaseInDifferenciation(x) & Individual(y) & MovesInAndOutOfPopulation(y,x)) -> TendentToOccur(x,y))", "score": 0}
{"id": "eqasc_train_715", "prediction": "all x y.((InternalMigration(x) & Country(y)) -> DefinesMovements(x,y))", "score": 0}
{"id": "eqasc_train_716", "prediction": "all x.(GeneFlow(x) -> Migrates(x))", "score": 0}
{"id": "eqasc_train_717", "prediction": "all x y.((Population(x) & Species(y)) -> SubsetOf(x,y))", "score": 0}
{"id": "eqasc_train_718", "prediction": "all x y.((GeneFlow(x) & Individual(y) & SubsetOfSpecies(y)) -> (MovesIntoOrOutOfSubset(y,x)))", "score": 0}
{"id": "eqasc_train_719", "prediction": "all x.(GeneFlow(x) -> Unidirectional(x))", "score": 0}
{"id": "eqasc_train_720", "prediction": "all x y.((Individual(x) & Population(y) & MovesIntoOrOutOf(x,y)) -> Unidirectional(x))", "score": 0}
{"id": "eqasc_train_721", "prediction": "all x y.((GeneFlow(x) & Population(y)) -> (MovementOfAlleles(x,y) & InOrOutOf(x,y)))", "score": 0}
{"id": "eqasc_train_722", "prediction": "all x y.((Allele(x) & Population(y) & MovesInto(x,y)) -> MovementOfAllelesIn(x,y))", "score": 0}
{"id": "eqasc_train_723", "prediction": "all x.(CoralReef(x) -> (ProvidesFood(x) & ProvidesShelter(x)))", "score": 2}
{"id": "eqasc_train_724", "prediction": "all x.((Animal(x) & LivesInOcean(x)) -> VitalSalinity(x))", "score": 0}
{"id": "eqasc_train_725", "prediction": "all x y.((CoralReef(x) & Animal(y) & RequiresSalinity(y)) -> ProvidesFoodAndShelter(x,y))", "score": 0}
{"id": "eqasc_train_726", "prediction": "all x.(Food(x) -> GivesEnergy(x))", "score": 0}
{"id": "eqasc_train_727", "prediction": "all x y.((CoralReef(x) & OceanOrganism(y)) -> (ProvidesEnergy(x,y) & ProvidesShelter(x,y)))", "score": 0}
{"id": "eqasc_train_728", "prediction": "all x.(Ocean(x) -> ImportantToLifeOnEarth(x))", "score": 0}
{"id": "eqasc_train_729", "prediction": "all x.(CoralReef(x) -> ImportantToEarth(x))", "score": 0}
{"id": "eqasc_train_730", "prediction": "all x.(CoralReef(x) -> PredominantlyCalcite(x))", "score": 0}
{"id": "eqasc_train_731", "prediction": "all x.(Calcite(x) -> (ProvidesFood(x) & ProvidesShelter(x)))", "score": 0}
{"id": "eqasc_train_732", "prediction": "all x.(CoralReef(x) -> FringeSurface(x))", "score": 0}
{"id": "eqasc_train_733", "prediction": "all x y z.((OceanOrganism(x) & Food(y) & Shelter(z)) -> FindsNearSurfaceline(x,y,z))", "score": 0}
{"id": "eqasc_train_734", "prediction": "all x.(CoralReef(x) -> exists y.(PatchReef(y) & PatchReef(x,y)))", "score": 0}
{"id": "eqasc_train_735", "prediction": "all x.(PatchReef(x) -> (ProvidesFood(x) & ProvidesShelter(x)))", "score": 0}
{"id": "eqasc_train_736", "prediction": "all x.(CoralReef(x) -> Threatened(x))", "score": 0}
{"id": "eqasc_train_737", "prediction": "all x.(Reef(x) -> Threatened(x))", "score": 0}
{"id": "eqasc_train_738", "prediction": "all x.((OceanOrganism(x) & -Fish(x) & (Manatee(x) | Clam(x))) -> PoetrySubject(x))", "score": 0}
{"id": "eqasc_train_739", "prediction": "all x.(CoralReef(x) -> (ProvidesFood(x) & ProvidesShelter(x)))", "score": 1}
{"id": "eqasc_train_740", "prediction": "all x.(Organism(x) | LivingBeing(x)) -> Living(x))", "score": -1}
{"id": "eqasc_train_741", "prediction": "all x.(CoralReef(x) -> (ProvidesFood(x) & ProvidesShelter(x)))", "score": 1}
{"id": "eqasc_train_742", "prediction": "all x y.((Human(x) & Ocean(y)) -> DependsOnLifeSupportSystems(x,y))", "score": 0}
{"id": "eqasc_train_743", "prediction": "all x y.((CoralReef(x) & Human(y)) -> ProvidesSupportFor(x,y))", "score": 0}
{"id": "eqasc_train_744", "prediction": "all x.(CoralReef(x) -> (CoralReef(x) & WarmShallowWater(x)))", "score": 0}
{"id": "eqasc_train_745", "prediction": "all x y.((WarmSeasonalWater(x) & OceanOrganism(y)) -> (ProvidesFood(x,y) & ProvidesShelter(x,y)))", "score": 0}
{"id": "eqasc_train_746", "prediction": "all x.(CoralReef(x) -> NurseriesOcean(x))", "score": 0}
{"id": "eqasc_train_747", "prediction": "all x y.((Nursery(x) & Ocean(y)) -> (ProvidesFood(x,y) & ProvidesShelter(x,y)))", "score": 0}
{"id": "eqasc_train_748", "prediction": "all x.(CoralReef(x) -> FormedFromCoralSkeletons(x))", "score": 0}
{"id": "eqasc_train_749", "prediction": "all x y.((Skeleton(x) & OceanOrganism(y)) -> ProvidesFoodAndShelter(x,y))", "score": 0}
{"id": "eqasc_train_750", "prediction": "exists x.(Fish(x) & (Clownfish(x) | Clawfish(x)) & SpendsMostOfLifeInAndAroundCoralReefs(x))", "score": 0}
{"id": "eqasc_train_751", "prediction": "all x y.((Clownfish(x) & Coral(y)) -> SeeksShelterIn(x,y))", "score": 0}
{"id": "eqasc_train_752", "prediction": "all x.(ReefBuildingCoral(x) -> Hermatypic(x))", "score": 0}
{"id": "eqasc_train_753", "prediction": "all x.(HermatypicOrganism(x) -> (ProvidesFood(x) & ProvidesShelter(x)))", "score": 0}
{"id": "eqasc_train_754", "prediction": "all x y.((RenewableResources(x) & RenewableResources(y) & GeneratesPower(x,y)) -> ReducesGreenhouseGases(x))", "score": 0}
{"id": "eqasc_train_755", "prediction": "all x.(Wind(x) -> RenewableEnergySource(x))", "score": 0}
{"id": "eqasc_train_756", "prediction": "all x y.((Wind(x) & GreenhouseGas(y)) -> Reduces(x,y))", "score": 0}
{"id": "eqasc_train_757", "prediction": "all x.((SolarPower(x) | WindPower(x) | Recycling(x)) -> RenewableResource(x))", "score": 0}
{"id": "eqasc_train_758", "prediction": "all x.((SolarPower(x) & ReducesGreenhouseGases(x)) -> Uses(x,SolarPower))", "score": 0}
{"id": "eqasc_train_759", "prediction": "all x.(CarbonDioxide(x) -> GreenhouseGas(x))", "score": 0}
{"id": "eqasc_train_760", "prediction": "all x y.((RenewableResources(x) & RenewableResources(y) & GeneratesPower(x,y)) -> ReducesCarbonDioxide(x))", "score": 0}
{"id": "eqasc_train_761", "prediction": "all x.(SolarEnergy(x) -> RenewableResource(x))", "score": 0}
{"id": "eqasc_train_762", "prediction": "all x.((UsesSolarEnergy(x) & GeneratesPower(x)) -> ReducesGreenhouseGases(x))", "score": 0}
{"id": "eqasc_train_763", "prediction": "all x.(NuclearPowerGenerationPlant(x) -> -EmitsGreenhouseGases(x))", "score": 0}
{"id": "eqasc_train_764", "prediction": "all x.(NuclearPowerPlant(x) -> ReducesGreenhouseGases(x))", "score": 0}
{"id": "eqasc_train_765", "prediction": "all x.(RenewableResource(x) -> (Water(x) | Timber(x) | Wind(x)))", "score": 0}
{"id": "eqasc_train_766", "prediction": "all x.(Chlorofluorocarbon(x) -> GreenhouseGas(x))", "score": 0}
{"id": "eqasc_train_767", "prediction": "all x.((RenewableResources(x) & Uses(x,y)) -> ReducesChlorophyllofluorocarbons(x))", "score": 0}
{"id": "eqasc_train_768", "prediction": "all x.(Hydropower(x) -> RenewableResource(x))", "score": 0}
{"id": "eqasc_train_769", "prediction": "all x.((Hydropower(x) & GreenhouseGases(x)) -> Reduces(x,y))", "score": 0}
{"id": "eqasc_train_770", "prediction": "all x y.((Mammal(x) & Animal(y)) -> LearnsBehavior(x,y))", "score": 0}
{"id": "eqasc_train_771", "prediction": "all x.(Human(x) -> Mammal(x))", "score": 2}
{"id": "eqasc_train_772", "prediction": "all x.(Playing(x) -> LearnsHowToBehave(x))", "score": 0}
{"id": "eqasc_train_773", "prediction": "all x.(ServiceAnimal(x) -> TrainedToBehaveInPublicSettings(x))", "score": 0}
{"id": "eqasc_train_774", "prediction": "all x y.((Mammal(x) & Playing(x)) -> TrainedToBeProperly(x,y))", "score": 0}
{"id": "eqasc_train_775", "prediction": "all x.(Dog(x) -> LearnsSocialRulesThroughPlay(x))", "score": 0}
{"id": "eqasc_train_776", "prediction": "all x.(Dog(x) -> TrainedOnBehaviorThroughPlay(x))", "score": 0}
{"id": "eqasc_train_777", "prediction": "all x y.((Zoo(x) & Animal(y)) -> (TrainsIn(x,y) & LearnsIn(y,x)))", "score": 0}
{"id": "eqasc_train_778", "prediction": "all x y.((Zoo(x) & Animal(y)) -> (TrainingIn(x,y) & PlayingIn(y,z)))", "score": 0}
{"id": "eqasc_train_779", "prediction": "SecondStage, LearnsHowToBeAssertive(Stage)", "score": -1}
{"id": "eqasc_train_780", "prediction": "all x.(Playing(x) -> (Mammal(x) & Animal(x) & LearnsAssertive(x)))", "score": 0}
{"id": "eqasc_train_781", "prediction": "all x.(Playing(x) -> ReallyFun(x))", "score": 0}
{"id": "eqasc_train_782", "prediction": "all x.(HasFun(x) -> MammalLearnsToBeBehave(x))", "score": 0}
{"id": "eqasc_train_783", "prediction": "all x.(SeaLion(x) -> TouchableMammal(x))", "score": 0}
{"id": "eqasc_train_784", "prediction": "all x.(SeaLion(x) -> LearnsBehavior(x))", "score": 0}
{"id": "eqasc_train_785", "prediction": "all x.((Dolphin(x) | Whale(x)) -> Mammal(x))", "score": 0}
{"id": "eqasc_train_786", "prediction": "all x.(Dolphin(x) -> LearnsBehavior(x))", "score": 0}
{"id": "eqasc_train_787", "prediction": "all x.(Animal(x) -> (Organism(x) & IngestiveMetabolism(x)))", "score": 0}
{"id": "eqasc_train_788", "prediction": "all x.((Organism(x) & IngestioniveMetabolism(x)) -> LearnsBehavior(x))", "score": 0}
{"id": "eqasc_train_789", "prediction": "all x.(Dog(x) -> Mammal(x))", "score": 0}
{"id": "eqasc_train_790", "prediction": "all x.(Playing(x) -> DogLearnsHowToBehave(x))", "score": 0}
{"id": "eqasc_train_791", "prediction": "all x.(Opossum(x) -> (Marsupial(x) & Mammal(x)))", "score": 0}
{"id": "eqasc_train_792", "prediction": "all x.(Opossum(x) -> LearnsBehavior(x))", "score": 0}
{"id": "eqasc_train_793", "prediction": "all x.(Cat(x) -> (Mammal(x) & ShedDog(x) & WagTail(x)))", "score": 0}
{"id": "eqasc_train_794", "prediction": "all x.(Playing(x) -> LearnsBehavior(x))", "score": 0}
{"id": "eqasc_train_795", "prediction": "all x.(Playing(x) -> DogLearnsBehavior(x))", "score": 0}
{"id": "eqasc_train_796", "prediction": "all x.(InvolvementInPlay(x) -> (TakesTime(x) & TakesEnergy(x)))", "score": 0}
{"id": "eqasc_train_797", "prediction": "all x.((Animal(x) & LearnsBehavior(x)) -> (Time(x) & Energy(x)))", "score": 0}
{"id": "eqasc_train_798", "prediction": "all x.((Exercise(x) & Play(x)) -> Fun(x))", "score": 0}
{"id": "eqasc_train_799", "prediction": "all x y.((Exercise(x) & Animal(y)) -> CanTeachHowToBehave(x,y))", "score": 0}
{"id": "eqasc_train_800", "prediction": "all x.(BoredAnimal(x) -> Plays(x))", "score": 0}
{"id": "eqasc_train_801", "prediction": "all x.(Animal(x) -> Borrowed(x))", "score": 0}
{"id": "eqasc_train_802", "prediction": "all x y.((Gravity(x) & Object(y) & HasMass(y)) -> PulledDownOnPlanet(x,y))", "score": 0}
{"id": "eqasc_train_803", "prediction": "all x.(Asteroids(x) -> (VariouslyShapedMass(x) & (Rock(x) | Metal(x) | Ice(x))))", "score": 0}
{"id": "eqasc_train_804", "prediction": "all x y.((Asteroids(x) & Jupiter(y)) -> PulledDownByGravity(x,y))", "score": 0}
{"id": "eqasc_train_805", "prediction": "(all x.(RollerCoaster(x) -> WorksWithGravity(x)))", "score": 0}
{"id": "eqasc_train_806", "prediction": "all x y.((RollerCoaster(x) & Object(y) & HasMass(y) & PulledDownOnPlanet(x,y)) -> WorksSame(x))", "score": 0}
{"id": "eqasc_train_807", "prediction": "all x.(Weight(x) -> MeasurmentOfGravityOnMass(x))", "score": 0}
{"id": "eqasc_train_808", "prediction": "all x y.((Object(x) & Gravity(y) & PulledDownBy(x,y)) -> WeightMeasured(x))", "score": 0}
{"id": "eqasc_train_809", "prediction": "all x.(Earth(x) -> LivingPlanet(x))", "score": 0}
{"id": "eqasc_train_810", "prediction": "all x y.((Gravity(x) & Object(y) & HasMass(y)) -> PulledDownOnEarth(x,y))", "score": 0}
{"id": "eqasc_train_811", "prediction": "(RedPlanet(Mars))", "score": 0}
{"id": "eqasc_train_812", "prediction": "all x y.((Gravity(x) & Object(y) & HasMass(y)) -> PulledDownOnMars(x,y))", "score": 0}
{"id": "eqasc_train_813", "prediction": "GravityDefinedByNathanolo(x)", "score": 0}
{"id": "eqasc_train_814", "prediction": "all x y.((Force(x) & Newton(y)) -> CausesObjectsToBePulledDownOnPlanet(x,y))", "score": 0}
{"id": "eqasc_train_815", "prediction": "all x.(Astronomy(x) -> (ScientificStudyOfStarsPlanetsAndCelestialBodies(x)))", "score": 0}
{"id": "eqasc_train_816", "prediction": "all x y.((Gravity(x) & CelestialBody(y)) -> PullsDown(x,y))", "score": 0}
{"id": "eqasc_train_817", "prediction": "all x.(Rock(x) -> HasMass(x))", "score": 0}
{"id": "eqasc_train_818", "prediction": "all x y.((Gravity(x) & Planet(y)) -> CausesRocksToBePulledDownOn(x,y))", "score": 0}
{"id": "eqasc_train_819", "prediction": "Planet Mars Mars (Planet(Mars) & FourthPlanetFromSun(Mars) & MostLike(Mars,Earth))", "score": -1}
{"id": "eqasc_train_820", "prediction": "all x y.((Gravity(x) & Object(y) & HasMass(y)) -> PulledDownToMars(x,y))", "score": 0}
{"id": "eqasc_train_821", "prediction": "all x.(Weight(x) -> (ProductOfMass(x) & AccelerationDueToGravity(x)))", "score": 0}
{"id": "eqasc_train_822", "prediction": "all x y.((Weight(x) & Gravity(y) & PullsObject(x,y)) -> DeterminedBy(x,y))", "score": 0}
{"id": "eqasc_train_823", "prediction": "all x y.((ElectricStove(x) & ElectricalEnergy(y)) -> TransformsToHeatEnergy(x,y))", "score": 0}
{"id": "eqasc_train_824", "prediction": "all x y.((ElectricalStove(x) & Facility(y)) -> (Cooking(x,y) | Cooking(x,y)))", "score": 0}
{"id": "eqasc_train_825", "prediction": "all x y.((Cooking(x) & ElectricalEnergy(y)) -> TransformsToHeatEnergy(x,y))", "score": 0}
{"id": "eqasc_train_826", "prediction": "all x y.((Stove(x) & Water(y)) -> TakesEnergyToBoil(x,y))", "score": 0}
{"id": "eqasc_train_827", "prediction": "all x.(ElectricStove(x) -> BoilWater(x))", "score": 0}
{"id": "eqasc_train_828", "prediction": "all x.(ElectricalEnergy(x) -> EnergyAssociatedWithElectronsFlow(x))", "score": 0}
{"id": "eqasc_train_829", "prediction": "all x y.((ElectricStove(x) & ElectronFlow(y)) -> TransformsToHeat(x,y))", "score": 0}
{"id": "eqasc_train_830", "prediction": "all x y.((Electricity(x) | ElectricalEnergy(x)) -> ProducedAtPowerPlant(y))", "score": 0}
{"id": "eqasc_train_831", "prediction": "all x.(ElectricStove(x) -> TransformsElectricityToHeat(x))", "score": 0}
{"id": "eqasc_train_832", "prediction": "all x.((ElectricStove(x) & Uses(x,y)) -> MatchPanSizeToCookingElement(x,y))", "score": 0}
{"id": "eqasc_train_833", "prediction": "all x y.((HeatEnergy(x) & Pan(y)) -> CooksWith(x,y))", "score": 0}
{"id": "eqasc_train_834", "prediction": "all x.(Heat(x) -> (ProducedByFriction(x) | (ProducedByMechanicalEnergy(x) | ProducedByChemicalEnergy(x) | ProducedByElectricalEnergy(x))))", "score": 0}
{"id": "eqasc_train_835", "prediction": "all x.(ElectricStove(x) -> TransformsElectricalEnergyIntoFriction(x))", "score": 0}
{"id": "eqasc_train_836", "prediction": "all x.(KineticEnergy(x) -> (EnergyOfMovement(x) & HeatEnergy(x) & LightEnergy(x)))", "score": 0}
{"id": "eqasc_train_837", "prediction": "all x.(ElectricStove(x) -> TransformsElectricalEnergyToKineticEnergy(x))", "score": 0}
{"id": "eqasc_train_838", "prediction": "all x.(ElectricMotor(x) -> ConvertsElectricalEnergyToMechanicalEnergy(x))", "score": 0}
{"id": "eqasc_train_839", "prediction": "all x y.((ElectricMotor(x) & ElectricStove(y)) -> TransformsElectricity(x,y))", "score": 0}
{"id": "eqasc_train_840", "prediction": "all x.(Heat(x) -> MolecularKineticEnergy(x))", "score": 0}
{"id": "eqasc_train_841", "prediction": "all x.(ElectricStove(x) -> TransformsElectricalEnergyToMolecularKineticEnergy(x))", "score": 0}
{"id": "eqasc_train_842", "prediction": "all x.(Plant(x) -> (ResponsesToDailyCycles(x) & RespondsToSeasonalCycles(x) & RespondsToDisease(x)))", "score": 0}
{"id": "eqasc_train_843", "prediction": "all x.(PlantDisease(x) -> CausedByBacteria(x))", "score": 0}
{"id": "eqasc_train_844", "prediction": "all x.(Plant(x) -> (ResponsesToSeasonalCycles(x) & RespondsToDailyCycles(x) & RespondsToBacteria(x)))", "score": 0}
{"id": "eqasc_train_845", "prediction": "all x.(Temperature(x) -> FollowsSeasonalCycle(x))", "score": 0}
{"id": "eqasc_train_846", "prediction": "all x.(Plant(x) -> RespondsToTemperature(x))", "score": 0}
{"id": "eqasc_train_847", "prediction": "all x.(Plant(x) -> BushType(x))", "score": 0}
{"id": "eqasc_train_848", "prediction": "all x.(Bush(x) -> (ResponsesToDailyAndSeasonalCycles(x) & RespondsToDisease(x)))", "score": 0}
{"id": "eqasc_train_849", "prediction": "all x.(Bamboo(x) -> (Vibrant(x) & Rugged(x)))", "score": 0}
{"id": "eqasc_train_850", "prediction": "all x.(Bamboo(x) -> (ResponseToDailyAndSeasonalCycles(x) & RespondToDisease(x)))", "score": 0}
{"id": "eqasc_train_851", "prediction": "all x.(GreenBeansPlanting(x) -> ContinuesToBePlanted(x))", "score": 0}
{"id": "eqasc_train_852", "prediction": "all x.(GreenBeans(x) -> (ResponsesToDailyCycles(x) & RespondsToSeasonalCycles(x) & RespondsToDisease(x)))", "score": 0}
{"id": "eqasc_train_853", "prediction": "all x.((Plant(x) & WaterStress(x)) -> RespondsTo(x,y))", "score": 0}
{"id": "eqasc_train_854", "prediction": "all x.(WaterStress(x) -> (DailyCycles(x) | SeasonalCycles(x)))", "score": 0}
{"id": "eqasc_train_855", "prediction": "all x.(FloweringPlant(x) -> Flower(x))", "score": 0}
{"id": "eqasc_train_856", "prediction": "all x.(Flower(x) -> (ResponsesToDailyAndSeasonalCycles(x) & RespondsToDisease(x)))", "score": 0}
{"id": "eqasc_train_857", "prediction": "all x.(Cactus(x) -> (SucculentPlant(x) & UsuallyReferredTo(x,separately)))", "score": 0}
{"id": "eqasc_train_858", "prediction": "all x.(Cactus(x) -> (ResponsesToDailyAndSeasonalCycles(x) & RespondsToDisease(x)))", "score": 0}
{"id": "eqasc_train_859", "prediction": "all x.(GreenManure(x) -> (DisruptsPlantDiseaseCycles(x) | SupressesNematodes(x)))", "score": 0}
{"id": "eqasc_train_860", "prediction": "all x y z.((Plant(x) & GreenManure(y) & PlantDisease(z)) -> RespondsToDisrupts(x,y,z))", "score": 0}
{"id": "eqasc_train_861", "prediction": "all x.(Cell(x) -> (VariatesSize(x) & VariatesShape(x) & Small(x)))", "score": 0}
{"id": "eqasc_train_862", "prediction": "all x.(Embryo(x) -> (Small(x) & RequiresMicroscope(x)))", "score": 0}
{"id": "eqasc_train_863", "prediction": "all x.((Cell(x) & RequiresMicroscope(x)) -> CanBeSeen(x))", "score": 0}
{"id": "eqasc_train_864", "prediction": "all x.(Cell(x) -> MicroscopicSize(x))", "score": 0}
{"id": "eqasc_train_865", "prediction": "all x.(Cell(x) -> (VariatesShape(x) & Microscopic(x)))", "score": 0}
{"id": "eqasc_train_866", "prediction": "all x.(Neuron(x) -> (Cell(x) & SimilarToCell(x)))", "score": 0}
{"id": "eqasc_train_867", "prediction": "all x.(Neuron(x) -> VerySmallSize(x))", "score": 0}
{"id": "eqasc_train_868", "prediction": "all x.(Cell(x) -> (TooSmallToBeSeenWithoutMicroscope(x)))", "score": 0}
{"id": "eqasc_train_869", "prediction": "all x.(Cell(x) -> (VariatesSize(x) & VariatesShape(x) & -CanBeSeenWithoutMicroscope(x)))", "score": 0}
{"id": "eqasc_train_870", "prediction": "all x.(Microscope(x) -> (AquaticInvertebrate(x) & Small(x)))", "score": 0}
{"id": "eqasc_train_871", "prediction": "all x.(Microscope(x) -> (SeeCells(x) & Uses(x,y)))", "score": 0}
{"id": "eqasc_train_872", "prediction": "all x.(Cell(x) -> (VariatesSize(x) & VariatesShape(x) & VisibleWithMicroscope(x)))", "score": 0}
{"id": "eqasc_train_873", "prediction": "all x.(Bacteria(x) -> (SingleCellMicroorganism(x) & Small(x) & CanBeSeenWithMicroscope(x)))", "score": 0}
{"id": "eqasc_train_874", "prediction": "all x.(Cell(x) -> (VariatesSize(x) & VariatesShape(x) & CanBeSeenWithMicroscope(x)))", "score": 0}
{"id": "eqasc_train_875", "prediction": "all x.(Lymphocyte(x) -> SmallCell(x))", "score": 0}
{"id": "eqasc_train_876", "prediction": "all x.(Lymphocyte(x) -> Small(x))", "score": 0}
{"id": "eqasc_train_877", "prediction": "all x.(Cell(x) -> (VariatesInForms(x) & VariatesInFunctions(x)))", "score": 0}
{"id": "eqasc_train_878", "prediction": "all x.(Cell(x) -> (Size(x) & Shape(x) & FormsAndFunctions(x)))", "score": 0}
{"id": "eqasc_train_879", "prediction": "all x.(Atom(x) -> (TinyParticle(x) & TooSmallToSee(x)))", "score": 0}
{"id": "eqasc_train_880", "prediction": "all x.(Cell(x) -> (VariatesSize(x) & VariatesShape(x) & Tiny(x)))", "score": 0}
{"id": "eqasc_train_881", "prediction": "all x.(Bacteria(x) -> SingleCelled(x))", "score": 0}
{"id": "eqasc_train_882", "prediction": "all x.(Bacteria(x) -> VerySmall(x))", "score": 0}
{"id": "eqasc_train_883", "prediction": "all x.(Cell(x) -> FundamentalUnitOfLife(x))", "score": 0}
{"id": "eqasc_train_884", "prediction": "all x.(FundamentalUnitOfLife(x) -> (VariatesInSize(x) & VariatesInShape(x) & Small(x)))", "score": 0}
{"id": "eqasc_train_885", "prediction": "all x.(Cell(x) -> (MicroscopicalSize(x) & RequiresMicroscope(x)))", "score": 0}
{"id": "eqasc_train_886", "prediction": "all x.(Microscope(x) -> (SeeSmallThings(x) & UsedToSeeSmallThings(x)))", "score": 0}
{"id": "eqasc_train_887", "prediction": "all x.(PlantBody(x) -> Cell(x))", "score": 0}
{"id": "eqasc_train_888", "prediction": "all x.(BasicUnit(x) -> (VariatesInSize(x) & VariatesInShape(x) & VerySmall(x)))", "score": 0}
{"id": "eqasc_train_889", "prediction": "all x.(Cell(x) -> (VariatesInShape(x) & Microscopic(x)))", "score": 0}
{"id": "eqasc_train_890", "prediction": "all x.(Coral(x) -> (SectsExoskeleton(x) & BuildsUpToCoralReef(x)))", "score": 0}
{"id": "eqasc_train_891", "prediction": "all x.(CoralReef(x) -> (CoralReef(x) & Rainforest(x)))", "score": 0}
{"id": "eqasc_train_892", "prediction": "all x y z.((Coral(x) & Exoskeleton(y) & Sea(z)) -> (Secretes(x,y) & BuildsUpToBecomeDwarfs(x,z)))", "score": 0}
{"id": "eqasc_train_893", "prediction": "all x.(Atoll(x) -> Reef(x))", "score": 0}
{"id": "eqasc_train_894", "prediction": "all x.(Atoll(x) -> (Corals(x) & SecretedExoskeleton(x)))", "score": 0}
{"id": "eqasc_train_895", "prediction": "all x.((Coral(x) | Invertebrates(x)) -> DelicateCreature(x))", "score": 0}
{"id": "eqasc_train_896", "prediction": "exists x y.(Invertebrate(x) & SecretesExoskeleton(x) & BuildsUpToReef(x))", "score": 0}
{"id": "eqasc_train_897", "prediction": "all x.(Coral(x) -> (CalciumCarbonate(x) & CaroteneTrade(x)))", "score": 0}
{"id": "eqasc_train_898", "prediction": "all x.(CalciumCarbonate(x) -> Reef(x))", "score": 0}
{"id": "eqasc_train_899", "prediction": "all x.(CoralReef(x) -> (MadeUpOfExoskeletons(x) & CoralPolyp(x)))", "score": 0}
{"id": "eqasc_train_900", "prediction": "all x.(CoralPolyp(x) -> FormsReefs(x))", "score": 0}
{"id": "eqasc_train_901", "prediction": "(GoodExamples(BubblyCoral) & EleganceCoral(EuphylliaCoral))", "score": 0}
{"id": "eqasc_train_902", "prediction": "all x.((Organism(x) & Frogspawn(x)) -> (SectsExoskeleton(x) & BuildsUpToReef(x)))", "score": 0}
{"id": "eqasc_train_903", "prediction": "all x.(Exoskeleton(x) -> ExternalFramework(x))", "score": 0}
{"id": "eqasc_train_904", "prediction": "all x y.((Coral(x) & Coral(y)) -> (SecratesExternalFramework(x,y) & BuildsUpToBecomeCoralReef(x)))", "score": 0}
{"id": "eqasc_train_905", "prediction": "all x y.((Fisherfolk(x) & CoralReef(y)) -> (HomeToFish(y) & WaitingToBeCaught(y)))", "score": 0}
{"id": "eqasc_train_906", "prediction": "all x y.((Coral(x) & Coral(y)) -> SecretesExoskeleton(x,y))", "score": 0}
{"id": "eqasc_train_907", "prediction": "all x.((CoralReef(x) & GreatBarrierReef(x)) -> -Exception(x))", "score": 0}
{"id": "eqasc_train_908", "prediction": "all x.(GreatBarrierReef(x) -> FormedByExoskeletons(x))", "score": 0}
{"id": "eqasc_train_909", "prediction": "all x.(Coral(x) -> (MadeOfExoskeletonsOfTinyMarineAnimals(x) & Polyps(x)))", "score": 0}
{"id": "eqasc_train_910", "prediction": "all x y.((CoralReef(x) & Polyp(y)) -> (MadeUpOfExoskeletons(x,y) & MillionsOfTinyPolyps(x)))", "score": 0}
{"id": "eqasc_train_911", "prediction": "all x.(Insect(x) -> HasHardOuterCovering(x))", "score": 0}
{"id": "eqasc_train_912", "prediction": "all x.(Coral(x) -> (SectsHardOuterCoating(x) & BuildsUpToCoralReef(x)))", "score": 0}
{"id": "eqasc_train_913", "prediction": "all x.(HardCoral(x) -> BuildsBySectatingCalciumCarbonateSkeletons(x))", "score": 0}
{"id": "eqasc_train_914", "prediction": "all x.(Coral(x) -> (ConstructsExoskeleton(x) & SecretesCalciumCarbonate(x)))", "score": 0}
{"id": "eqasc_train_915", "prediction": "all x y.((Plant(x) & RequiresLessWater(x) & Drought(y)) -> SurvivesIn(x,y))", "score": 0}
{"id": "eqasc_train_916", "prediction": "all x y.((Flood(x) & Drought(y)) -> (OverabundanceOfRainfall(x) & LackOfRainfall(y)))", "score": 0}
{"id": "eqasc_train_917", "prediction": "all x y.((Plant(x) & RequiresLessWater(x) & LackOfRainfall(y)) -> SurvivesFromLackOfRainfall(x,y))", "score": 0}
{"id": "eqasc_train_918", "prediction": "all x.(Plant(x) -> (HeatTolerant(x) & DroughtTolerant(x)))", "score": 0}
{"id": "eqasc_train_919", "prediction": "all x.((Plant(x) & ToleratesLessWater(x)) -> CanTolerateLessWater(x))", "score": 0}
{"id": "eqasc_train_920", "prediction": "all x.((Cactus(x) | Succulent(x)) -> CanGoWithoutWater(x))", "score": 0}
{"id": "eqasc_train_921", "prediction": "all x y.((Cactus(x) & Drought(y)) -> SurvivesIn(x,y))", "score": 0}
{"id": "eqasc_train_922", "prediction": "all x.((ShrubBed(x) | GroundCover(x)) -> (RequiresLessWater(x) & ProvidesMoreVariety(x)))", "score": 0}
{"id": "eqasc_train_923", "prediction": "all x.(ShrubBed(x) -> (NeedsLessWater(x) & SurvivesInDrought(x)))", "score": 0}
{"id": "eqasc_train_924", "prediction": "all x.(Cactus(x) -> LikelyToSurviveInDrought(x))", "score": 0}
{"id": "eqasc_train_925", "prediction": "all x y.((Plant(x) & RequiresLessWater(x)) -> (Survives(x,y) & HeatTolerent(x,y)))", "score": 0}
{"id": "eqasc_train_926", "prediction": "all x.(Drought(x) -> -WaterUnderFence(x))", "score": 0}
{"id": "eqasc_train_927", "prediction": "all x y.((Plant(x) & RequiresLessWater(x) & Fence(y) & -WaterUnderFence(x,y)) -> Survives(x,y))", "score": 0}
{"id": "eqasc_train_928", "prediction": "exists x.(Plant(x) & ExceptionallyTolerantOfDrought(x))", "score": 0}
{"id": "eqasc_train_929", "prediction": "exists x.(Vegetation(x) & RequiresLessWater(x) & ToleratesLackOfWater(x))", "score": 0}
{"id": "eqasc_train_930", "prediction": "all x.(MeteorologicalDrought(x) -> DryConditionsRelatedToClimate(x))", "score": 0}
{"id": "eqasc_train_931", "prediction": "all x y.((Plant(x) & RequiresLessWater(x)) -> SurvivesDryConditions(x))", "score": 0}
{"id": "eqasc_train_932", "prediction": "all x y.((ProducingThrust(x) & Thrust(y)) -> CausesMovement(x,y))", "score": 0}
{"id": "eqasc_train_933", "prediction": "all x.(Spacecraft(x) -> MovesWithGasJets(x))", "score": 0}
{"id": "eqasc_train_934", "prediction": "all x.(Spacecraft(x) -> (PropelledByThrust(x) & PropelledByThrust(x)))", "score": 0}
{"id": "eqasc_train_935", "prediction": "all x.(Airplane(x) -> (CreatesThruth(x) & (UsesPropellers(x) | UsesJetEngines(x) | UsesRockets(x))))", "score": 0}
{"id": "eqasc_train_936", "prediction": "exists x.(Airplane(x) & UsesPropellers(x))", "score": 0}
{"id": "eqasc_train_937", "prediction": "all x.(Engine(x) -> GeneratesThrust(x))", "score": 0}
{"id": "eqasc_train_938", "prediction": "all x y.((Engine(x) & Engine(y)) -> CausesMovement(x,y))", "score": 0}
{"id": "eqasc_train_939", "prediction": "all x.(Engine(x) -> NeededToProvidesThruthForForwardMotion(x))", "score": 0}
{"id": "eqasc_train_940", "prediction": "all x.((CausingMovement(x) & NeedsEngine(x)) -> CanCauseMovement(x))", "score": 0}
{"id": "eqasc_train_941", "prediction": "all x y.((OppositeForce(x) & Rocket(y)) -> CausesThruth(x,y))", "score": 0}
{"id": "eqasc_train_942", "prediction": "all x y.((OppositeForce(x) & Force(y)) -> CausesMovement(x,y))", "score": 0}
{"id": "eqasc_train_943", "prediction": "all x.(ElectricRaket(x) -> (Efficient(x) & LowThrust(x)))", "score": 0}
{"id": "eqasc_train_944", "prediction": "all x y.((Rocket(x) & Something(y)) -> CausesToMove(x,y))", "score": 0}
{"id": "eqasc_train_945", "prediction": "all x.(Engine(x) -> (SpinsUp(x) & ProducesThruth(x)))", "score": 0}
{"id": "eqasc_train_946", "prediction": "all x.(Engine(x) -> Produces(x,6000))", "score": 0}
{"id": "eqasc_train_947", "prediction": "all x.(Raket(x) -> (GeneratesThruth(x) & IgnitesFuel(x) & IgnitesOxidiser(x)))", "score": 0}
{"id": "eqasc_train_948", "prediction": "all x y z.((IgnitesFuel(x) & Oxidizer(y) & Rocket(z)) -> Moves(z))", "score": 0}
{"id": "eqasc_train_949", "prediction": "all x.(Impulsion(x) -> (Thrust(x) & ReleaseOfStoredEnergy(x) & Engages(x)))", "score": 0}
{"id": "eqasc_train_950", "prediction": "all x.(ProducesImprovement(x) -> CausesMovement(x))", "score": 0}
{"id": "eqasc_train_951", "prediction": "all x y.((Pesticide(x) & Plant(y)) -> (ProtectsByKillingInsects(x,y) & KillsInsects(x,y)))", "score": 0}
{"id": "eqasc_train_952", "prediction": "all x.((PesticideReliance(x) & Excessive(x)) -> (KillsFriendlyInsects(x) & KillsPredators(x)))", "score": 0}
{"id": "eqasc_train_953", "prediction": "all x y.((Pesticide(x) & Plant(y)) -> ProtectsByKillingPredators(x,y))", "score": 0}
{"id": "eqasc_train_954", "prediction": "all x.(Insect(x) -> EatsCrops(x))", "score": 0}
{"id": "eqasc_train_955", "prediction": "all x y.((Pesticide(x) & Crop(y)) -> ProtectsFromPests(x,y))", "score": 0}
{"id": "eqasc_train_956", "prediction": "all x.((Pesticide(x) & ContainsDDT(x)) -> DangerousPesticide(x))", "score": 0}
{"id": "eqasc_train_957", "prediction": "all x.(DDT(x) -> (ProtectsPlants(x) & KillsInsects(x)))", "score": 0}
{"id": "eqasc_train_958", "prediction": "all x.(Insect(x) -> (HasThreeBodyParts(x) & DistinctHead(x) & DistinctThorax(x) & DistinctAbdomen(x)))", "score": 0}
{"id": "eqasc_train_959", "prediction": "all x y z.((Pesticide(x) & Plant(y) & Head(z) & Thorax(z) & Abdoment(z)) -> Kills(x,y,z))", "score": 0}
{"id": "eqasc_train_960", "prediction": "all x y.((Plant(x) & Animal(y)) -> (PoisonedByHerbicides(x) | PoisonedByPesticides(y)))", "score": 0}
{"id": "eqasc_train_961", "prediction": "all x y.((Plant(x) & Herbicide(y)) -> Hurts(x,y))", "score": 0}
{"id": "eqasc_train_962", "prediction": "all x.((Pesticide(x) & DDT(x)) -> OfPreoccupation(x))", "score": 0}
{"id": "eqasc_train_963", "prediction": "all x y.((DDT(x) & Plant(y)) -> (ProtectsByKillingInsects(x,y) & KillsInsects(x,y)))", "score": 0}
{"id": "eqasc_train_964", "prediction": "all x.(SmallAnimal(x) -> HarmedByPesticides(x))", "score": 0}
{"id": "eqasc_train_965", "prediction": "all x y.((Plant(x) & SmallAnimal(y)) -> (Protects(x,y) & OftenHasExpense(x,y)))", "score": 0}
{"id": "eqasc_train_966", "prediction": "all x.(Pesticide(x) -> (TreatsBeneficialInsects(x) & PollinatesFlowers(x) & PreysOnHarmfulInsects(x)))", "score": 0}
{"id": "eqasc_train_967", "prediction": "all x y.((Pesticide(x) & Plant(y)) -> (Protects(x,y) & KillsBeneficialPollinators(x)))", "score": 0}
{"id": "eqasc_train_968", "prediction": "all x y.((Herbicide(x) & Plant(y)) -> Poison(x,y))", "score": 0}
{"id": "eqasc_train_969", "prediction": "all x.(PesticideUse(x) -> (RequiresExcessPesticides(x) | RequiresEmptyPesticideContainers(x)))", "score": 0}
{"id": "eqasc_train_970", "prediction": "all x.((RequiresSpecialDepotage(x) & ProtectsPlantsByKillingInsects(x)) -> UsedForProtectingPlants(x))", "score": 0}
{"id": "eqasc_train_971", "prediction": "all x y.((Animal(x) & Animal(y)) -> (StayingWarm(x) & PositiveImpactOnSurvival(x,y)))", "score": 0}
{"id": "eqasc_train_972", "prediction": "all x.((Insulation(x) & WarmAirWarm(x)) -> Effective(x))", "score": 0}
{"id": "eqasc_train_973", "prediction": "all x.((Insulation(x) & PositiveImpactOnSurvival(x)) -> Effective(x))", "score": 0}
{"id": "eqasc_train_974", "prediction": "all x y.((Person(x) & Blanket(y)) -> CoversUpToStayWarm(x,y))", "score": 0}
{"id": "eqasc_train_975", "prediction": "all x y.((Bluff(x) & Animal(y)) -> PositiveImpactOnSurvival(x,y))", "score": 0}
{"id": "eqasc_train_976", "prediction": "all x.((Animal(x) & LivesInForest(x)) -> SoftWarmFur(x))", "score": 0}
{"id": "eqasc_train_977", "prediction": "all x y.((Fur(x) & ForestAnimal(y)) -> PositiveImpactOnSurvival(x,y))", "score": 0}
{"id": "eqasc_train_978", "prediction": "all x y.((Hot(x) & Human(y)) -> PositiveImpactOnSurvival(x,y))", "score": 0}
{"id": "eqasc_train_979", "prediction": "all x.((NeedsToConserveEnergy(x) & StaysWarm(x)) -> NeedsToConserveEnergy(x))", "score": 0}
{"id": "eqasc_train_980", "prediction": "all x y.((Animal(x) & ConservingEnergy(x)) -> PositiveImpactOnSurvival(x,y))", "score": 0}
{"id": "eqasc_train_981", "prediction": "all x.(FurryAnimal(x) -> (GrowsThickerCoats(x) & KeepsWarmInWinter(x)))", "score": 0}
{"id": "eqasc_train_982", "prediction": "all x.(FurryAnimal(x) -> (GrowsThickerCoats(x) & PositiveImpactOnSurvival(x)))", "score": 0}
{"id": "eqasc_train_983", "prediction": "all x.((ColdWeather(x) & DressWarmly(x) & WarmUpLonger(x)) -> DressWarmly(x))", "score": 0}
{"id": "eqasc_train_984", "prediction": "all x.((Animal(x) & DressForColdWeather(x)) -> DressForColdWeather(x))", "score": 0}
{"id": "eqasc_train_985", "prediction": "all x.((Animal(x) & Survives(x)) -> (DevelopsImmunity(x) & CarrierForLife(x)))", "score": 0}
{"id": "eqasc_train_986", "prediction": "all x y.((Animal(x) & Animal(y)) -> (StayingWarm(x) & PositiveImpactOnCarrier(y,x)))", "score": 0}
{"id": "eqasc_train_987", "prediction": "all x.((Hydration(x) & Warm(x)) -> Proper(x))", "score": 0}
{"id": "eqasc_train_988", "prediction": "all x.(Hydration(x) -> NeededForSurvival(x))", "score": 0}
{"id": "eqasc_train_989", "prediction": "all x.(ArcticAnimal(x) -> (HasLayersOfFat(x) & HasThickCoatsOfFur(x) & KeepsWarmInFrozenArcticClimate(x)))", "score": 0}
{"id": "eqasc_train_990", "prediction": "all x y.((FatLayer(x) & ArcticAnimal(y)) -> HelpsSurvive(x,y))", "score": 0}
{"id": "eqasc_train_991", "prediction": "all x.((ThickFurCoat(x) & 4InchesOfFat(x)) -> BearStaysWarm(x))", "score": 0}
{"id": "eqasc_train_992", "prediction": "all x y.((Fur(x) & Fat(y)) -> PositiveImpactOnSurvival(x,y))", "score": 0}
{"id": "eqasc_train_993", "prediction": "all x.(AdaptiveTreatment(x) -> (ImprovesChanceOfSurviving(x) & ImprovesChanceOfReproducing(x)))", "score": 0}
{"id": "eqasc_train_994", "prediction": "all x.((Animal(x) & StaysWarm(x)) -> PositiveImpactOnChancesForReproduction(x))", "score": 0}
{"id": "eqasc_train_995", "prediction": "all x.(Man(x) -> (Animal(x) & PrimaryInstinctsOfSurvival(x)))", "score": 0}
{"id": "eqasc_train_996", "prediction": "all x.(Warmth(x) -> PositiveImpactOnMansSurvival(x))", "score": 0}
{"id": "eqasc_train_997", "prediction": "all x y z.((Human(x) & Animal(y) & Location(z) & Disturbs(x,y) & MovesToDifferentLocation(y,z)) -> MovesToDifferentLocation(y,z))", "score": 0}
{"id": "eqasc_train_998", "prediction": "all x.((Animal(x) & HumanDisturbance(x)) -> FirstToDispear(x))", "score": 0}
{"id": "eqasc_train_999", "prediction": "all x y.((Animal(x) & Location(y) & Disturbation(z)) -> Disappears(x,z))", "score": 0}
{"id": "eqasc_train_1000", "prediction": "exists x.(Animal(x) & HideUnderground(x))", "score": 0}
{"id": "eqasc_train_1001", "prediction": "all x y.((Prey(x) & Disturbed(y)) -> HideUnderground(x,y))", "score": 0}
{"id": "eqasc_train_1002", "prediction": "all x.(Animal(x) -> -SurvivesInNewLocation(x))", "score": 0}
{"id": "eqasc_train_1003", "prediction": "all x y.((Human(x) & Animal(y) & Disturbs(x,y)) -> MayNotSurvive(x,y))", "score": 0}
{"id": "eqasc_train_1004", "prediction": "all x y.((WhaleWatchingCompany(x) & WhaleWatchingCompany(y)) -> (TakesClientsToOtherAnimals(x,y) & CausesDisturbance(x,y)))", "score": 0}
{"id": "eqasc_train_1005", "prediction": "all x y.((Whale(x) & WhaleWatchingBoat(y)) -> MovesToNewLocation(x,y))", "score": 0}
{"id": "eqasc_train_1006", "prediction": "all x y.((ControllingDevelopment(x) & RiverBank(y) & Watershed(z)) -> ControlsHumanDisturbances(x,y,z))", "score": 0}
{"id": "eqasc_train_1007", "prediction": "all x y.((Human(x) & Animal(y)) -> CausesMovement(x,y))", "score": 0}
{"id": "eqasc_train_1008", "prediction": "all x.(Bear(x) -> IntelligentAnimal(x))", "score": 0}
{"id": "eqasc_train_1009", "prediction": "all x y.((Human(x) & Bear(y) & Disturbs(x,y)) -> MovesToDifferentLocation(x,y))", "score": 0}
{"id": "eqasc_train_1010", "prediction": "all x.(Animal(x) -> DifferentHabitatRequirements(x))", "score": 0}
{"id": "eqasc_train_1011", "prediction": "all x y.((Human(x) & Animal(y) & Disturbs(x,y)) -> RequiresMovingHabitat(x,y))", "score": 0}
{"id": "eqasc_train_1012", "prediction": "all x y.((AnimalGroup(x) & Place(y)) -> MovesFromTo(x,y))", "score": 0}
{"id": "eqasc_train_1013", "prediction": "all x y.((Human(x) & Creature(y) & Disturbs(x,y)) -> Migrates(x,y))", "score": 0}
{"id": "eqasc_train_1014", "prediction": "all x.(HumanBeing(x) -> SelfAware(x))", "score": 0}
{"id": "eqasc_train_1015", "prediction": "all x y.((SelfAware(x) & Animal(y) & DisturbsInLocation(x,y)) -> MovesToDifferentLocation(x,y))", "score": 0}
{"id": "eqasc_train_1016", "prediction": "all x y z.((Evaporation(x) & Solute(y) & Solvent(z)) -> SeparatesInSolution(x,y,z))", "score": 1}
{"id": "eqasc_train_1017", "prediction": "all x y.((SaltWater(x) & Salt(y)) -> (Solute(y) & Solvent(y)))", "score": 0}
{"id": "eqasc_train_1018", "prediction": "all x y.((Evaporation(x) & Salt(y)) -> SeparatesFromWater(x,y))", "score": 0}
{"id": "eqasc_train_1019", "prediction": "all x y.((Evaporation(x) & Water(y)) -> RemovesSalt(x,y))", "score": 0}
{"id": "eqasc_train_1020", "prediction": "all x.(Boiling(x) -> VeryRapidEvaporation(x))", "score": 0}
{"id": "eqasc_train_1021", "prediction": "all x y z.((Boiling(x) & Solute(y) & Solvent(z)) -> SeparatesInSolution(x,y,z))", "score": 1}
{"id": "eqasc_train_1022", "prediction": "all x.(SolventWater(x) -> ExcellentSolventWater(x))", "score": 0}
{"id": "eqasc_train_1023", "prediction": "all x y.((Evaporation(x) & Solute(y)) -> SeparatesFromWater(x,y))", "score": 0}
{"id": "eqasc_train_1024", "prediction": "all x.(TableSalt(x) -> EvaporatedSaltProduct(x))", "score": 0}
{"id": "eqasc_train_1025", "prediction": "all x y z.((Solute(x) & Solvent(y) & Solvent(z) & SeparatesInSolution(x,y,z)) -> CreatesTableSalt(x))", "score": 0}
{"id": "eqasc_train_1026", "prediction": "all x.(AqueousSolution(x) -> HasWaterAsSolvent(x))", "score": 0}
{"id": "eqasc_train_1027", "prediction": "all x y z.((Evaporation(x) & Solute(y) & Water(z)) -> SeparatesInAqueousSolution(x,y,z))", "score": 0}
{"id": "eqasc_train_1028", "prediction": "all x.(SolventPaint(x) -> UsesOrganicSolvents(x))", "score": 0}
{"id": "eqasc_train_1029", "prediction": "all x y z.((Evaporation(x) & Solute(y) & VolatileVehicle(z)) -> SeparatesFrom(x,y,z))", "score": 0}
{"id": "eqasc_train_1030", "prediction": "all x.((Energy(x) & Heat(x)) -> CausesEvaporation(x))", "score": 0}
{"id": "eqasc_train_1031", "prediction": "all x y z.((Heat(x) & Solute(y) & Solvent(z)) -> SeparatesInSolution(x,y,z))", "score": 0}
{"id": "eqasc_train_1032", "prediction": "all x.((Liquid(x) & Drys(x)) -> Evaporation(x))", "score": 0}
{"id": "eqasc_train_1033", "prediction": "all x y.((LiquidDrying(x) & Solute(y)) -> SeparatesFromSolvent(x,y))", "score": 0}
{"id": "eqasc_train_1034", "prediction": "all x.((Solvent(x) & SeparatedFromSolution(x)) -> LikelyToDamagePlants(x))", "score": 0}
{"id": "eqasc_train_1035", "prediction": "all x.(Evaporation(x) -> DamagesPlants(x))", "score": 0}
{"id": "eqasc_train_1036", "prediction": "all x y z.((Gasoline(x) & Paints(y) & Solvents(z)) -> (Evaporates(x,y) & ReleasesReactiveOrganicCompounds(x)))", "score": 0}
{"id": "eqasc_train_1037", "prediction": "all x.((Gasoline(x) & Separates(x)) -> ReleasesOrganicCompounds(x))", "score": 0}
{"id": "eqasc_train_1038", "prediction": "all x.((HeatingLiquids(x) & AllowsSaturatedGasToReduceEvaporation(x)) -> MadeEasier(x))", "score": 0}
{"id": "eqasc_train_1039", "prediction": "all x y.((HeatingLiquid(x) & Solute(y)) -> SeparatesFromSolvent(x,y))", "score": 0}
{"id": "eqasc_train_1040", "prediction": "all x.(Sample(x) -> (SegregatedByMission(x) & SeparateGlovebox(x)))", "score": 0}
{"id": "eqasc_train_1041", "prediction": "all x y.((Evaporation(x) & Solute(y)) -> SegregatesInSolution(x,y))", "score": 0}
{"id": "eqasc_train_1042", "prediction": "all x.(Boiling(x) -> (Evaporation(x) & OccursThroughoutLiquid(x)))", "score": 1}
{"id": "eqasc_train_1043", "prediction": "all x.(Residence(x) -> (Separate(x) & FarApart(x)))", "score": 0}
{"id": "eqasc_train_1044", "prediction": "all x y.((Solute(x) & Solvent(y)) -> MovesApartFrom(x,y))", "score": 0}
{"id": "eqasc_train_1045", "prediction": "all x y.((Animal(x) & Sweats(x)) -> BodyWaterDecreases(y))", "score": 0}
{"id": "eqasc_train_1046", "prediction": "all x.(Dehydration(x) -> LossOfTotalBodyWater(x))", "score": 0}
{"id": "eqasc_train_1047", "prediction": "all x.((Animal(x) & Sweating(x)) -> Dehydrated(x))", "score": 0}
{"id": "eqasc_train_1048", "prediction": "all x y.((Animal(x) & Sweats(x)) -> CanCauseDehydration(y))", "score": 0}
{"id": "eqasc_train_1049", "prediction": "all x y.((Animal(x) & Sweat(x)) -> (EvaporationOfSweat(x,y) & TakesAwayBodyHeat(y) & CoolsAnimal(x)))", "score": 0}
{"id": "eqasc_train_1050", "prediction": "all x.(Sweeping(x) -> TakesAwayBodyHeat(x))", "score": 0}
{"id": "eqasc_train_1051", "prediction": "all x.(Sweat(x) -> (ExcessiveExertion(x) & ExcessiveExertion(x) & ExcessiveExertion(x)))", "score": 0}
{"id": "eqasc_train_1052", "prediction": "all x.(ExcessiveExertion(x) -> DecreasesBodylyWater(x))", "score": 0}
{"id": "eqasc_train_1053", "prediction": "all x.(Dehydration(x) -> RemovesWater(x))", "score": 0}
{"id": "eqasc_train_1054", "prediction": "all x y.((Animal(x) & Sweats(x)) -> Dehydrated(y))", "score": 0}
{"id": "eqasc_train_1055", "prediction": "all x.(Human(x) -> Animal(x))", "score": 0}
{"id": "eqasc_train_1056", "prediction": "all x y.((Human(x) & Sweats(x,y)) -> BodyWaterDecreases(x))", "score": 0}
{"id": "eqasc_train_1057", "prediction": "all x.(SweatGlands(x) -> (HelpsRegulateBodyTemperature(x) & ReleasesWaterAndSalt(x)))", "score": 0}
{"id": "eqasc_train_1058", "prediction": "all x y.((Animal(x) & BodyTemperature(y) & ReleasesWater(x,y)) -> BodyWaterDecreases(x,y))", "score": 0}
{"id": "eqasc_train_1059", "prediction": "all x.((Sweat(x) | Perspiration(x)) -> AnannoyanceWithGlasses(x))", "score": 0}
{"id": "eqasc_train_1060", "prediction": "all x.(Perspires(x) -> BodyWaterDecreases(x))", "score": 0}
{"id": "eqasc_train_1061", "prediction": "all x.((EvaporationOfWater(x) & Sweating(x)) -> CoolsBody(x))", "score": 0}
{"id": "eqasc_train_1062", "prediction": "all x.(Animal(x) -> SweatsToCool(x))", "score": 0}
{"id": "eqasc_train_1063", "prediction": "all x.(Lion(x) -> ScaryAnimal(x))", "score": 0}
{"id": "eqasc_train_1064", "prediction": "all x.((Lion(x) & Sweats(x)) -> BodyWaterDecreases(x))", "score": 0}
{"id": "eqasc_train_1065", "prediction": "all x.(Sweat(x) -> CoolsSkinDown(x))", "score": 0}
{"id": "eqasc_train_1066", "prediction": "all x.((Animal(x) & BodyWater(y)) -> CoolsDownByDecreasing(x,y))", "score": 0}
{"id": "eqasc_train_1067", "prediction": "exists x.(Animal(x) & Sweat(x) & exists y.(Animal(y) & Pant(y)) & exists z.(Animal(z) & Licker(z))))", "score": -1}
{"id": "eqasc_train_1068", "prediction": "all x.(AnimalPanting(x) -> DecreasedBodyWater(x))", "score": 0}
{"id": "eqasc_train_1069", "prediction": "all x.(Human(x) -> GroupAnimal(x))", "score": 0}
{"id": "eqasc_train_1070", "prediction": "all x y.((Human(x) & Sweating(y)) -> ReducesBodyWater(y,x))", "score": 0}
{"id": "eqasc_train_1071", "prediction": "all x.(Human(x) -> Animal(x))", "score": 0}
{"id": "eqasc_train_1072", "prediction": "all x y.((Human(x) & Human(y) & Sweats(x,y)) -> BodyWaterDecreases(y))", "score": 0}
{"id": "eqasc_train_1073", "prediction": "all x.(Dog(x) -> (SweatsFromBottoms(x) & -Pangs(x)))", "score": 0}
{"id": "eqasc_train_1074", "prediction": "all x.(Dog(x) -> CanExitBodylyWaterThroughBottomsOfFeet(x))", "score": 0}
{"id": "eqasc_train_1075", "prediction": "all x.(Animal(x) -> (DevelopedSweatingOrPanning(x) & GetsExtraHeat(x)))", "score": 0}
{"id": "eqasc_train_1076", "prediction": "all x.((Animal(x) & GetsRidOfExtraHeat(x)) -> MakesBodylyWaterDecrease(x))", "score": 0}
{"id": "eqasc_train_1077", "prediction": "all x.(Sweating(x) -> ReducesBodyHeat(x))", "score": 0}
{"id": "eqasc_train_1078", "prediction": "all x y.((Animal(x) & BodyHeat(y)) -> ReducesBodyWater(x,y))", "score": 0}
{"id": "eqasc_train_1079", "prediction": "all x.(Virus(x) -> (ContainsDNA(x) & -ContainsMuchOther(x)))", "score": 0}
{"id": "eqasc_train_1080", "prediction": "all x.(DNA(x) -> GeneticFingerprint(x))", "score": 0}
{"id": "eqasc_train_1081", "prediction": "all x.(Virus(x) -> (ContainsGeneticMaterial(x) & -ContainsMuchOther(x)))", "score": 0}
{"id": "eqasc_train_1082", "prediction": "all x.(DNA(x) -> DeoxyribonucleicAcid(x))", "score": 0}
{"id": "eqasc_train_1083", "prediction": "all x.(Virus(x) -> (ContainsDeoxyribonucleicAcid(x) & -ContainsDeoxyribonucleicAcid(x)))", "score": 0}
{"id": "eqasc_train_1084", "prediction": "all x.(DNA(x) -> ShortForDeoxyribonucleicAcid(x))", "score": 0}
{"id": "eqasc_train_1085", "prediction": "all x.(Virus(x) -> (ContainsDeoxyribonucleicAcid(x) & -ContainsDeoxyribonucleicAcid(x)))", "score": 0}
{"id": "eqasc_train_1086", "prediction": "all x.(DNA(x) -> AbbreviationForDeoxyribonucleicAcid(x))", "score": 0}
{"id": "eqasc_train_1087", "prediction": "all x.(DNAStructure(x) -> DNAStructure(x))", "score": 0}
{"id": "eqasc_train_1088", "prediction": "all x.(Virus(x) -> (ContainsRightHandDoppelHelixOfPolynucleotides(x) & -ContainsMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfMuchOfM-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-M-", "score": -1}
{"id": "eqasc_train_1089", "prediction": "all x.(DNA(x) -> CanReproduce(x))", "score": 0}
{"id": "eqasc_train_1090", "prediction": "all x.(Virus(x) -> CanReproduce(x))", "score": 0}
{"id": "eqasc_train_1091", "prediction": "all x.(DNA(x) -> EncodedInformation(x))", "score": 0}
{"id": "eqasc_train_1092", "prediction": "all x.(Virus(x) -> (ContainsEncodedInformation(x) & -ContainsEncodedInformation(x)))", "score": 0}
{"id": "eqasc_train_1093", "prediction": "all x.(Virus(x) -> (ContainsDeosyribonucleicAcid(x) & -ContainsDeosyribonucleicAcid(x)))", "score": 0}
{"id": "eqasc_train_1094", "prediction": "all x.(DNA(x) -> ContainsGeneticInformationForLife(x))", "score": 0}
{"id": "eqasc_train_1095", "prediction": "all x.(Virus(x) -> (ContainsGeneticInformation(x) & -ContainsGeneticInformation(x)))", "score": 0}
{"id": "eqasc_train_1096", "prediction": "all x.(HIVVirus(x) -> ContainsRNA(x))", "score": 0}
{"id": "eqasc_train_1097", "prediction": "(Influenza(x) | Rabies(x) | HIV(x) | HerpesVirus(x)))", "score": -1}
{"id": "eqasc_train_1098", "prediction": "all x.(HIV(x) -> ContainsDNA(x))", "score": 0}
{"id": "eqasc_train_1099", "prediction": "all x.(Smallpox(x) -> (ContainsDNA(x) & -ContainsDNA(x)))", "score": 0}
{"id": "eqasc_train_1100", "prediction": "all x.(Principle(x) -> (DifferentFromBacteria(x) | DifferentFromViruses(x)))", "score": 0}
{"id": "eqasc_train_1101", "prediction": "all x.(DNA(x) -> -InPrions(x))", "score": 0}
{"id": "eqasc_train_1102", "prediction": "all x.(DNA(x) -> Deoxyribonucleicacid(x))", "score": 0}
{"id": "eqasc_train_1103", "prediction": "all x.(Virus(x) -> (ContainsDeoxyribonucleicacid(x) & -ContainsMuchOther(x)))", "score": 0}
{"id": "eqasc_train_1104", "prediction": "all x.(Virus(x) -> (ConsistsOfRNAOrDNA(x) & ProteinCoat(x)))", "score": 0}
{"id": "eqasc_train_1105", "prediction": "all x.(Virus(x) -> HasRNA(x))", "score": 0}
{"id": "eqasc_train_1106", "prediction": "all x.(Virus(x) -> CausesSickness(x))", "score": 0}
{"id": "eqasc_train_1107", "prediction": "all x.((Germs(x) & CausesPeopleToGetSick(x)) -> (ContainsDNA(x) & -ContainsMuchOther(x)))", "score": 0}
{"id": "eqasc_train_1108", "prediction": "all x.(MicrobialFuelCell(x) -> ConvertsChemicalEnergyToElectricalEnergy(x))", "score": 0}
{"id": "eqasc_train_1109", "prediction": "all x.(Computer(x) -> RunsOnElectricity(x))", "score": 0}
{"id": "eqasc_train_1110", "prediction": "all x.(FuelCell(x) -> PowerComputers(x))", "score": 0}
{"id": "eqasc_train_1111", "prediction": "all x.(Power(x) -> InvolvesElectricalEnergy(x))", "score": 0}
{"id": "eqasc_train_1112", "prediction": "all x.(MicrobialFuelCell(x) -> ConvertsChemicalEnergyToPower(x))", "score": 0}
{"id": "eqasc_train_1113", "prediction": "all x.(FuelCell(x) -> (Device(x) & ConvertsHydrogenToElectricity(x)))", "score": 0}
{"id": "eqasc_train_1114", "prediction": "all x.(MicrobialCell(x) -> TransformsHydrogenToElectricalEnergy(x))", "score": 0}
{"id": "eqasc_train_1115", "prediction": "all x.(ElectricGenerator(x) -> ConvertsMechanicalEnergyToElectricEnergy(x))", "score": 0}
{"id": "eqasc_train_1116", "prediction": "all x y.((MicrobialFuelCell(x) & ElectricGenerator(y)) -> (CreatesElectricity(x) & CreatesElectricity(y)))", "score": 0}
{"id": "eqasc_train_1117", "prediction": "all x.(Food(x) -> ChemicalEnergy(x))", "score": 0}
{"id": "eqasc_train_1118", "prediction": "all x y.((MicrobialFuelCell(x) & Food(y)) -> ConvertsToElectricalEnergy(x,y))", "score": 0}
{"id": "eqasc_train_1119", "prediction": "all x y.((ElectricalEnergy(x) & ElectricMotor(y)) -> (ConvertsIntoKineticEnergy(x,y) & ConvertsIntoHeatEnergy(x,y)))", "score": 0}
{"id": "eqasc_train_1120", "prediction": "all x y z.((MicrobialFuelCell(x) & ChemicalEnergy(y) & KineticEnergy(z)) -> ConvertsTo(x,y,z))", "score": 0}
{"id": "eqasc_train_1121", "prediction": "all x.(Electricity(x) -> KineticEnergy(x))", "score": 0}
{"id": "eqasc_train_1122", "prediction": "all x y.((MicrobialFuelCell(x) & ChemicalEnergy(y)) -> ConvertsToKineticEnergy(x,y))", "score": 0}
{"id": "eqasc_train_1123", "prediction": "all x y.((MicrobialFuelCell(x) & ChemicalEnergy(y)) -> ConvertsToElectrons(x,y))", "score": 0}
{"id": "eqasc_train_1124", "prediction": "all x y.((Leaves(x) & DeciduousTree(y)) -> ChangesColorInAutumn(x,y))", "score": 1}
{"id": "eqasc_train_1125", "prediction": "all x.(BroadLeavedTree(x) -> Deciduous(x))", "score": 0}
{"id": "eqasc_train_1126", "prediction": "all x y.((BroadLeavedTree(x) & Leaves(y)) -> ChangesColorInAutumn(x,y))", "score": 0}
{"id": "eqasc_train_1127", "prediction": "all x y z.((Leaves(x) & Snow(y) & Spring(z)) -> (ChangesColor(x) & Falls(y) & BringsBackGreenery(z)))", "score": 0}
{"id": "eqasc_train_1128", "prediction": "all x y z.((Autumn(x) & Snow(y) & Spring(z)) -> (OccursBefore(x,y) & BringsBackGreenery(z,y)))", "score": 0}
{"id": "eqasc_train_1129", "prediction": "all x.(DeciduousTree(x) -> (Oak(x) | Elm(x) | Beech(x)))", "score": 0}
{"id": "eqasc_train_1130", "prediction": "all x y.((Leaves(x) & OakTree(y)) -> ChangesColorInAutumn(x,y))", "score": 0}
{"id": "eqasc_train_1131", "prediction": "all x.(MulberryTree(x) -> Deciduous(x))", "score": 0}
{"id": "eqasc_train_1132", "prediction": "all x.(MulberryTree(x) -> ChangesColorInAutumn(x))", "score": 0}
{"id": "eqasc_train_1133", "prediction": "all x.(PeachleafWillow(x) -> DeciduousTree(x))", "score": 1}
{"id": "eqasc_train_1134", "prediction": "all x.((PeachleafWillow(x) & AutumnSeason(x)) -> ChangesColorsInAutumn(x))", "score": 0}
{"id": "eqasc_train_1135", "prediction": "all x.((DeciduousTree(x) & LosesLeaves(x)) -> FallColors(x))", "score": 0}
{"id": "eqasc_train_1136", "prediction": "all x.((DeciduousTree(x) & LosesLeavesInAutumn(x)) -> Fall(x))", "score": 0}
{"id": "eqasc_train_1137", "prediction": "all x.(Autumn(x) -> (WarmSummerDaysFade(x) & CoolerWeather(x)))", "score": 0}
{"id": "eqasc_train_1138", "prediction": "all x.(DeciduousTree(x) -> (HasLeaves(x) & ChangesColorWhenSummerFades(x)))", "score": 0}
{"id": "eqasc_train_1139", "prediction": "all x y.((Leaves(x) & PeachleafWillow(y)) -> ChangesColorInAutumn(x,y))", "score": 1}
{"id": "eqasc_train_1140", "prediction": "all x.(DeciduousTree(x) -> (Oak(x) | Elm(x) | Ash(x) | Maple(x) | Birch(x)))", "score": 0}
{"id": "eqasc_train_1141", "prediction": "all x y.((Leaves(x) & Oak(y)) -> ChangesColorInAutumn(x,y))", "score": 0}
{"id": "eqasc_train_1142", "prediction": "all x.(DouglasFir(x) -> HasFfirCones(x))", "score": 0}
{"id": "eqasc_train_1143", "prediction": "all x.(Conifer(x) -> -ChangeColorWithSeason(x))", "score": 0}
{"id": "eqasc_train_1144", "prediction": "all x y.((Prism(x) & Light(y)) -> UsedForRefracting(x,y))", "score": 0}
{"id": "eqasc_train_1145", "prediction": "all x.(Light(x) -> ContainsEnergy(x))", "score": 0}
{"id": "eqasc_train_1146", "prediction": "all x.(Prism(x) -> UsedForRefractingEnergy(x))", "score": 0}
{"id": "eqasc_train_1147", "prediction": "all x.(Light(x) -> (Wavelength(x) & Photon(x)))", "score": 0}
{"id": "eqasc_train_1148", "prediction": "all x y.((Prism(x) & Wavelength(y)) -> UsedForRefracting(x,y))", "score": 0}
{"id": "eqasc_train_1149", "prediction": "all x y.((Light(x) & Prism(y) & PassesThrough(x,y)) -> (Refracted(x) | DividedIntoColors(x)))", "score": 0}
{"id": "eqasc_train_1150", "prediction": "all x y.((RefractedLight(x) & ColorSpectrum(y)) -> SeparatedInto(x,y))", "score": 0}
{"id": "eqasc_train_1151", "prediction": "all x.(Refraction(x) -> BendingLightRays(x))", "score": 0}
{"id": "eqasc_train_1152", "prediction": "all x.(Prism(x) -> BendLight(x))", "score": 0}
{"id": "eqasc_train_1153", "prediction": "all x.(Refraction(x) -> BendingOfRayOfLight(x))", "score": 0}
{"id": "eqasc_train_1154", "prediction": "all x.(Prism(x) -> BendsRayOfLight(x))", "score": 0}
{"id": "eqasc_train_1155", "prediction": "all x.(GlassPrism(x) -> Heavy(x))", "score": 0}
{"id": "eqasc_train_1156", "prediction": "all x.(Glass(x) -> UsedForRefractingLight(x))", "score": 0}
{"id": "eqasc_train_1157", "prediction": "all x.(Prism(x) -> (RefractsRays(x) | RefractsBeams(x)))", "score": 0}
{"id": "eqasc_train_1158", "prediction": "all x y.((GlassPrism(x) & Mirror(y)) -> MainipulatesLightRays(x,y))", "score": 0}
{"id": "eqasc_train_1159", "prediction": "all x.(Prism(x) -> RefractLight(x))", "score": 0}
{"id": "eqasc_train_1160", "prediction": "all x.(Prism(x) -> BendsLightRays(x))", "score": 0}
{"id": "eqasc_train_1161", "prediction": "all x y z.((Prism(x) & Light(y) & Color(z)) -> SplitsInto(x,y,z))", "score": 0}
{"id": "eqasc_train_1162", "prediction": "all x.(Prism(x) -> SolidGeometricShape(x))", "score": 0}
{"id": "eqasc_train_1163", "prediction": "all x.((SolidGeometricShape(x) & UsedForRefractingLight(x)) -> UsedForRefractingLight(x))", "score": 0}
{"id": "eqasc_train_1164", "prediction": "all x.(Refraction(x) -> (BloodingOfLight(x) & CausedBySpeedChange(x) & PassesThroughDifferentMedia(x)))", "score": 0}
{"id": "eqasc_train_1165", "prediction": "all x y.((SpeedOfLight(x) & PassesFromAirIntoPrism(x,y)) -> SpeedOfLightChange(x))", "score": 0}
{"id": "eqasc_train_1166", "prediction": "all x.(SolidGeometricShape(x) -> CanRefractLight(x))", "score": 0}
{"id": "eqasc_train_1167", "prediction": "all x y.((Rest(x) & Health(y)) -> PositiveImpact(x,y))", "score": 0}
{"id": "eqasc_train_1168", "prediction": "all x.((Breath(x) & Food(x) & ProperRest(x)) -> PrimaryToHealth(x))", "score": 0}
{"id": "eqasc_train_1169", "prediction": "all x.(Food(x) -> PositiveImpactOnHealth(x))", "score": 0}
{"id": "eqasc_train_1170", "prediction": "all x.(Sleep(x) -> (ProvidesRelaxation(x) & ProvidesRelaxation(x) & ProvidesRelaxation(x)))", "score": 0}
{"id": "eqasc_train_1171", "prediction": "all x.(Sleep(x) -> (ProvidesRelaxation(x) & PositiveImpactOnHealth(x)))", "score": 0}
{"id": "eqasc_train_1172", "prediction": "all x.(Rest(x) -> (IncludesSleep(x) & IncludesSitting(x) & IncludesResting(x)))", "score": 0}
{"id": "eqasc_train_1173", "prediction": "all x.(Sleeping(x) -> PositiveImpactOnHealth(x))", "score": 0}
{"id": "eqasc_train_1174", "prediction": "all x.(Sleep(x) -> PositiveImpactOnHealth(x))", "score": 0}
{"id": "eqasc_train_1175", "prediction": "all x.(Bull(x) -> SitsDownToRest(x))", "score": 0}
{"id": "eqasc_train_1176", "prediction": "all x.(SittingDown(x) -> PositiveImpactOnHealth(x))", "score": 0}
{"id": "eqasc_train_1177", "prediction": "all x.(Aid(x) -> (Sleep(x) & Rest(x)))", "score": 0}
{"id": "eqasc_train_1178", "prediction": "all x.(Sleep(x) -> PositiveImpactOnHealth(x))", "score": 0}
{"id": "eqasc_train_1179", "prediction": "all x.(Relaxation(x) -> (PrerequisiteToRelaxation(x) & PrerequisiteToGoodSleep(x)))", "score": 0}
{"id": "eqasc_train_1180", "prediction": "all x.((Relaxation(x) & PositiveImpactOnHealth(x)) -> Prerequisite(x))", "score": 0}
{"id": "eqasc_train_1181", "prediction": "all x.((SleepPattern(x) & RestfulSleep(x)) -> EnhancesAndSupports(x))", "score": 0}
{"id": "eqasc_train_1182", "prediction": "all x.(Sleep(x) -> PositiveImpactOnHealth(x))", "score": 0}
{"id": "eqasc_train_1183", "prediction": "all x y.((Relaxation(x) & Meditation(y)) -> (RetainsBody(x) & RestsMind(y)))", "score": 0}
{"id": "eqasc_train_1184", "prediction": "all x y.((Relaxation(x) & Body(y)) -> PositiveImpactOnHealth(x,y))", "score": 0}
{"id": "eqasc_train_1185", "prediction": "all x.(BottomLine(x) -> (IndicatesAtRest(x) | IndicatesSleep(x)))", "score": 0}
{"id": "eqasc_train_1186", "prediction": "all x.(Health(x) -> EssentialToQualityLife(x))", "score": 0}
{"id": "eqasc_train_1187", "prediction": "all x.((Rest(x) & QualityOfLife(x)) -> EssentialToQualityOfLife(x))", "score": 0}
{"id": "eqasc_train_1188", "prediction": "all x.((Health(x) & Rest(x)) -> Important(x))", "score": 0}
{"id": "eqasc_train_1189", "prediction": "all x.((Rest(x) & Important(x)) -> Important(x))", "score": 1}
{"id": "eqasc_train_1190", "prediction": "all x y z.((Fossil(x) & WaterAnimalOrPlant(y) & Place(z) & FoundIn(x,y,z)) -> UsedToBeCoveredByWater(z))", "score": 0}
{"id": "eqasc_train_1191", "prediction": "all x.(Mountain(x) -> GoodPlaceToFindFossil(x))", "score": 0}
{"id": "eqasc_train_1192", "prediction": "all x y.((PrehistoricSharkTooth(x) & HighInMountains(x)) -> LandOfUnderwater(y))", "score": 0}
{"id": "eqasc_train_1193", "prediction": "all x.((Fossil(x) & (DepositsWind(x) | DepositsWater(x))) -> Formed(x))", "score": 0}
{"id": "eqasc_train_1194", "prediction": "all x y.((Fossil(x) & Animal(y) & Plant(y)) -> FormedWithSediment(x,y))", "score": 0}
{"id": "eqasc_train_1195", "prediction": "all x.(Barnacle(x) -> LivesInWater(x))", "score": 0}
{"id": "eqasc_train_1196", "prediction": "all x y z.((Fossil(x) & Barnacle(y) & Place(z) & FoundIn(x,y,z)) -> UsedToBeCoveredByWater(x,z))", "score": 0}
{"id": "eqasc_train_1197", "prediction": "all x.((GastropodShell(x) & MarineAnimal(x)) -> PreservedAsFossil(x))", "score": 0}
{"id": "eqasc_train_1198", "prediction": "all x y z.((AncientGastropodShell(x) & Place(y) & FoundIn(x,y)) -> UsedToBeCoveredByWater(y))", "score": 0}
{"id": "eqasc_train_1199", "prediction": "all x.(MarineFossil(x) -> FoundInInsideOfContinent(x))", "score": 0}
{"id": "eqasc_train_1200", "prediction": "all x y.((MarineFossil(x) & InteriorOfContinent(y)) -> UsedToBeCoveredByWater(x,y))", "score": 0}
{"id": "eqasc_train_1201", "prediction": "all x.(Fish(x) -> (DiverseGroupOfAnimals(x) & LivesInWater(x) & BreathesInWater(x)))", "score": 0}
{"id": "eqasc_train_1202", "prediction": "all x y.((Fossil(x) & Fish(y) & FoundInPlace(x,y)) -> UsedToBeCoveredByWater(y))", "score": 0}
{"id": "eqasc_train_1203", "prediction": "all x.(Fossil(x) -> PrehistoricLife(x))", "score": 0}
{"id": "eqasc_train_1204", "prediction": "all x y z.((RemainsOfPrehistoricLife(x) & Place(y) & Water(z)) -> UsedToBeCoveredBy(y,z))", "score": 0}
{"id": "eqasc_train_1205", "prediction": "all x.((Graptolites(x) & DeepWaterDeposits(x)) -> DominantFossil(x))", "score": 0}
{"id": "eqasc_train_1206", "prediction": "all x y z.((Graptolites(x) & Place(y) & Water(z)) -> UsedToBeCoveredBy(y,z))", "score": 0}
{"id": "eqasc_train_1207", "prediction": "all x.(CommonFossil(x) -> (PlantFossil(x) & Fern(x)))", "score": 0}
{"id": "eqasc_train_1208", "prediction": "all x.(FernFossil(x) -> (Places(x) & CoveredInWater(x)))", "score": 0}
{"id": "eqasc_train_1209", "prediction": "all x.(Permineralization(x) -> (FossilFormed(x) & SecondType(x)))", "score": 0}
{"id": "eqasc_train_1210", "prediction": "all x y z.((WaterAnimalOrPlant(x) & Permineralization(y) & Place(z) & FoundIn(x,z)) -> UsedToBeCoveredByWater(z))", "score": 0}
{"id": "eqasc_train_1211", "prediction": "all x y.((Coal(x) & CoalFirePowerStation(y)) -> ProducesElectricityByBurning(x,y))", "score": 0}
{"id": "eqasc_train_1212", "prediction": "all x.(SwampVegetation(x) -> (CompressedToFormCoal(x)))", "score": 0}
{"id": "eqasc_train_1213", "prediction": "all x y.((SwampVegetation(x) & PowerStation(y)) -> ProducesElectricityByBurning(x,y))", "score": 0}
{"id": "eqasc_train_1214", "prediction": "(FossilFuel(Petroleum) & LikeCoal(Petroleum))", "score": 0}
{"id": "eqasc_train_1215", "prediction": "all x y.((FossilFuel(x) & Energy(y)) -> ProducesByBurning(x,y))", "score": 0}
{"id": "eqasc_train_1216", "prediction": "all x.(Heat(x) -> BurningProcess(x))", "score": 0}
{"id": "eqasc_train_1217", "prediction": "all x.(Coal(x) -> (ProducesElectricity(x) & HeatsUpInCoalFirePowerStations(x)))", "score": 0}
{"id": "eqasc_train_1218", "prediction": "all x.(CoalFiredPowerStation(x) -> (CausesAcidRain(x) & ContributesToGlobalWarming(x)))", "score": 0}
{"id": "eqasc_train_1219", "prediction": "exists x.(ElectricityProduction(x) & CausesAcidRain(x) & ContributesToGlobalWarming(x))", "score": 0}
{"id": "eqasc_train_1220", "prediction": "all x.((SolidRefinedCoal(x) & EasyToTransport(x) & UsedInCoalBurningEquipment(x)) -> SolidRefinedCoal(x))", "score": 0}
{"id": "eqasc_train_1221", "prediction": "all x.((SolidMaterials(x) & UsedToProduceElectricityByBurningInPowerStations(x)) -> TransportedFirst(x))", "score": 0}
{"id": "eqasc_train_1222", "prediction": "all x.(Electricity(x) -> MovesElectrons(x))", "score": 0}
{"id": "eqasc_train_1223", "prediction": "all x y.((Coal(x) & ElectricMovement(y)) -> UsedToProduce(x,y))", "score": 0}
{"id": "eqasc_train_1224", "prediction": "all x.(FossilFuel(x) -> (Coal(x) | Oil(x) | NaturalGases(x)))", "score": 0}
{"id": "eqasc_train_1225", "prediction": "all x y.((FossilFuel(x) & Electricity(y)) -> UsedToProduce(x,y))", "score": 0}
{"id": "eqasc_train_1226", "prediction": "all x.((CoalFiredPowerPlant(x) & ContributesToGlobalWarming(x)) -> ContributesToGlobalWarming(x))", "score": 0}
{"id": "eqasc_train_1227", "prediction": "all x.((ProducesElectricityByBurningCoal(x) & ContributesToGlobalWarming(x)) -> ContributesToGlobalWarming(x))", "score": 0}
{"id": "eqasc_train_1228", "prediction": "all x.(Electricity(x) -> Energy(x))", "score": 0}
{"id": "eqasc_train_1229", "prediction": "all x y.((Coal(x) & CoalFirePowerStation(y)) -> ProducesEnergyByBurning(x,y))", "score": 0}
{"id": "eqasc_train_1230", "prediction": "all x.(CoalMine(x) -> OperatedWithoutElectricity(x))", "score": 0}
{"id": "eqasc_train_1231", "prediction": "all x.(Mine(x) -> ProducesCoal(x))", "score": 0}
{"id": "eqasc_train_1232", "prediction": "all x.(CoalFiredPowerStation(x) -> InherentlyModular(x))", "score": 0}
{"id": "eqasc_train_1233", "prediction": "all x y.((Coal(x) & Electricity(y) & BurnedInInherentlyModularStations(x,y)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_train_1234", "prediction": "(all x.(Coal(x) -> AncientlyBurnedPlants(x)) & all y.(Petroleum(y) -> Animals(y)))", "score": 0}
{"id": "eqasc_train_1235", "prediction": "all x.((AncientlyBurnedPlant(x) & CanProduceElectricity(x)) -> CanProduceElectricity(x))", "score": 0}
{"id": "eqasc_train_1236", "prediction": "all x.((Electricity(x) & ProducedByBurningCoal(x)) -> InUnitedStates(x))", "score": 0}
{"id": "eqasc_train_1237", "prediction": "all x.((Electricity(x) & MadeInCoalPowerStations(x)) -> MostInUnitedStates(x))", "score": 0}
{"id": "eqasc_train_1238", "prediction": "all x y.((Animal(x) & Body(y)) -> (Thirst(x) & RealizesReplenishment(x,y)))", "score": 0}
{"id": "eqasc_train_1239", "prediction": "all x.(Body(x) -> (NeedsHydration(x) & Water(x)))", "score": 0}
{"id": "eqasc_train_1240", "prediction": "all x.(Animal(x) -> (UsesThirst(x) & RealizesBodyNeedsHydration(x)))", "score": 0}
{"id": "eqasc_train_1241", "prediction": "all x.(Dehydration(x) -> Thirst(x))", "score": 0}
{"id": "eqasc_train_1242", "prediction": "all x.(Animal(x) -> NeedsReplenishmentOfWater(x))", "score": 0}
{"id": "eqasc_train_1243", "prediction": "all x.(Water(x) -> BestThirstQuencher(x))", "score": 0}
{"id": "eqasc_train_1244", "prediction": "all x y.((Animal(x) & Animal(y) & NeedsToHydrate(x,y)) -> BestWater(x))", "score": 0}
{"id": "eqasc_train_1245", "prediction": "all x.((Plant(x) | Animal(x)) -> NeedsWaterToSurvive(x))", "score": 0}
{"id": "eqasc_train_1246", "prediction": "all x y.((Thirst(x) & Animal(y)) -> HelpsSurvive(x,y))", "score": 0}
{"id": "eqasc_train_1247", "prediction": "all x y.((Water(x) & Cell(y)) -> Hydrates(x,y))", "score": 0}
{"id": "eqasc_train_1248", "prediction": "all x.(Thirst(x) -> (UsedToMakeAnimalsRealize(x) & HydratesCells(x)))", "score": 0}
{"id": "eqasc_train_1249", "prediction": "all x.(Dehydration(x) -> (IncreasedThirst(x) & IncreasedWaterConsumption(x)))", "score": 0}
{"id": "eqasc_train_1250", "prediction": "all x.(Dehydration(x) -> (NeedsReplenishmentOfBodylyWater(x) & Animal(x)))", "score": 0}
{"id": "eqasc_train_1251", "prediction": "all x y.((Human(x) & Thirst(y)) -> (RequiresBodylyWater(x,y) & RequiresBodylyWater(x,y)))", "score": 0}
{"id": "eqasc_train_1252", "prediction": "all x.((Symptom(x) & Dehydration(x)) -> (Thirst(x) & Fatigue(x) & Headache(x) & Dizziness(x) & DarkScantUrine(x)))", "score": 0}
{"id": "eqasc_train_1253", "prediction": "all x.((Animal(x) & Dehydrated(x)) -> NeedsReplenishmentOfBodyWater(x))", "score": 0}
{"id": "eqasc_train_1254", "prediction": "all x.(Animal(x) -> (ExperiencesHunger(x) & ExperiencesThirst(x) & ExperiencesFear(x) & ExperiencesSickness(x) & ExperiencesInjury(x) & ExperiencesStrongMaternalInstincts(x)))", "score": 0}
{"id": "eqasc_train_1255", "prediction": "all x.(Organism(x) -> (UsesThirst(x) & ConsumesWater(x)))", "score": 0}
{"id": "eqasc_train_1256", "prediction": "all x.((Animal(x) & Cow(x)) -> Today(x))", "score": 0}
{"id": "eqasc_train_1257", "prediction": "all x y.((Thirst(x) & Cow(y)) -> (RequiresBodyWater(y,x) & Reminds(y,x)))", "score": 0}
{"id": "eqasc_train_1258", "prediction": "all x.((StrongThirst(x) & Persistent(x)) -> SignOfDehydration(x))", "score": 0}
{"id": "eqasc_train_1259", "prediction": "all x.((Animal(x) & Dehydration(x)) -> NeedsReplenishmentOfBodyWater(x))", "score": 0}
{"id": "eqasc_train_1260", "prediction": "all x.(Chicken(x) -> NoisyAnimal(x))", "score": 0}
{"id": "eqasc_train_1261", "prediction": "all x y.((Thirst(x) & Chicken(y)) -> (RequiresBodyWater(y,x) & RequiresBodyWater(y,x)))", "score": 0}
{"id": "eqasc_train_1262", "prediction": "all x.((Water(x) & NaturalWaterBody(x)) -> Drinkable(x))", "score": 0}
{"id": "eqasc_train_1263", "prediction": "all x y.((Animal(x) & NaturalDrinkableSource(y)) -> (Thirst(x) & RealizesReplenishment(x,y)))", "score": 0}
{"id": "eqasc_train_1264", "prediction": "all x.((BodyFluids(x) & (AdequateWater(x) | NonCaffeinatedBeverage(x))) -> Refills(x))", "score": 0}
{"id": "eqasc_train_1265", "prediction": "all x.((Drinking(x) & -CarbonatedBeverage(x)) -> RenewsFluids(x))", "score": 0}
{"id": "eqasc_train_1266", "prediction": "all x.((H2O(x) & Water(x)) -> (HasTwoAtomsOfHydrogenStuckToOneAtomOfOxygen(x)))", "score": 0}
{"id": "eqasc_train_1267", "prediction": "all x y.((Animal(x) & Thirst(y)) -> RequiresReplenishmentO(x,y))", "score": 0}
{"id": "eqasc_train_1268", "prediction": "all x.(Athlete(x) -> WaitsForSenseOfThirst(x))", "score": 0}
{"id": "eqasc_train_1269", "prediction": "all x y.((Animal(x) & Signal(y) & TimeToDrink(x,y)) -> ReproducesBodyWater(x,y))", "score": 0}
{"id": "eqasc_train_1270", "prediction": "all x.(Pollen(x) -> (TinyGrains(x) & MaleGametesOfPlants(x)))", "score": 0}
{"id": "eqasc_train_1271", "prediction": "all x y.((Flower(x) & Plant(y)) -> (SexOrgan(x,y) & HoldsGameteProducingSystem(x,y)))", "score": 0}
{"id": "eqasc_train_1272", "prediction": "all x y z.((Pollen(x) & TinyGrains(y) & Flower(z)) -> (ConsistsOf(x,y) & HeldBy(x,z)))", "score": 0}
{"id": "eqasc_train_1273", "prediction": "all x.((Animal(x) & ReproducesSexCells(x)) -> (ProducesGametes(x)))", "score": 0}
{"id": "eqasc_train_1274", "prediction": "all x.(Pollen(x) -> (TinyGrains(x) & MaleSexCell(x)))", "score": 0}
{"id": "eqasc_train_1275", "prediction": "all x.(Gamete(x) -> (Ovar(x) | Spermatozoa(x)))", "score": 0}
{"id": "eqasc_train_1276", "prediction": "all x y.((TinyGrainsOfPollen(x) & Plant(y)) -> (Ovar(x) | Spermatozoa(x)))", "score": 0}
{"id": "eqasc_train_1277", "prediction": "all x.(HaploidPlant(x) -> ProducesGametes(x))", "score": 0}
{"id": "eqasc_train_1278", "prediction": "all x y.((Pollen(x) & Haplopod(y)) -> MadeBy(x,y))", "score": 0}
{"id": "eqasc_train_1279", "prediction": "all x.(PollenGrain(x) -> ComesFromSeedBearingPlants(x))", "score": 0}
{"id": "eqasc_train_1280", "prediction": "all x.(PollenSeed(x) -> (ComesFromMaleGametes(x) & Plant(x)))", "score": 0}
{"id": "eqasc_train_1281", "prediction": "all x.(Bee(x) -> CollectsPollen(x))", "score": 0}
{"id": "eqasc_train_1282", "prediction": "all x y.((Bee(x) & TinyGrains(y)) -> Collects(x,y))", "score": 0}
{"id": "eqasc_train_1283", "prediction": "all x y.((Bee(x) & Flower(y)) -> UsesPollenAsFood(x,y))", "score": 0}
{"id": "eqasc_train_1284", "prediction": "all x y.((Bee(x) & Plant(y)) -> UsesMaleGametes(x,y))", "score": 0}
{"id": "eqasc_train_1285", "prediction": "all x y z.((Bee(x) & TinyGrain(y) & Plant(z)) -> (Collects(x,y) & MaleGamete(x,z)))", "score": 0}
{"id": "eqasc_train_1286", "prediction": "all x.(MaleGamete(x) -> Sperm(x))", "score": 0}
{"id": "eqasc_train_1287", "prediction": "all x y.((Pollen(x) & Plant(y)) -> (ContainsTinyGrains(x,y) & SpermOfPlants(x,y)))", "score": 0}
{"id": "eqasc_train_1288", "prediction": "all x.(MaleGamete(x) -> Sperm(x))", "score": 1}
{"id": "eqasc_train_1289", "prediction": "all x.(Pollen(x) -> (TinyGrains(x) & SpermOfPlants(x)))", "score": 0}
{"id": "eqasc_train_1290", "prediction": "all x.(Pollen(x) -> ComesFromHaploidPlants(x))", "score": 0}
{"id": "eqasc_train_1291", "prediction": "all x.(Fish(x) -> (CirculatorySystem(x) & TwoChamberedHeart(x)))", "score": 0}
{"id": "eqasc_train_1292", "prediction": "all x.(Bird(x) -> HasFourChamberedHeart(x))", "score": 0}
{"id": "eqasc_train_1293", "prediction": "all x y.((Bird(x) & Fish(y)) -> (DifferentHeartCirculatorySystems(x,y) & DifferentHeartCirculatorySystems(y)))", "score": 0}
{"id": "eqasc_train_1294", "prediction": "all x.(Fish(x) -> BackbonedAquaticAnimal(x))", "score": 0}
{"id": "eqasc_train_1295", "prediction": "exists x.(BackbonedAquaticAnimal(x) & CirculatorySystem(x) & TwoChamberedHeart(x))", "score": 0}
{"id": "eqasc_train_1296", "prediction": "all x.(Trout(x) -> VersatileFish(x))", "score": 0}
{"id": "eqasc_train_1297", "prediction": "all x.(Trout(x) -> (CirculatorySystem(x) & TwoChamberedHeart(x)))", "score": 0}
{"id": "eqasc_train_1298", "prediction": "all x.(Fish(x) -> (Includes(x,bass) | Includes(x,salmon)))", "score": 0}
{"id": "eqasc_train_1299", "prediction": "all x.(Salmon(x) -> (CirculatorySystem(x) & TwoChamberedHeart(x)))", "score": 0}
{"id": "eqasc_train_1300", "prediction": "all x.(Fish(x) -> UltimateAquaticOrganism(x))", "score": 0}
{"id": "eqasc_train_1301", "prediction": "all x.((AquaticOrganism(x) & CirculatorySystem(x) & TwoChamberedHeart(x)) -> Ultimate(x))", "score": 0}
{"id": "eqasc_train_1302", "prediction": "all x.(Heart(x) -> DividedIntoTwoChambers(x))", "score": 0}
{"id": "eqasc_train_1303", "prediction": "all x.(Fish(x) -> (CirculatorySystem(x) & Heart(x) & Divided(x)))", "score": 0}
{"id": "eqasc_train_1304", "prediction": "all x.(Mammal(x) -> HasFourChamberedHeart(x))", "score": 0}
{"id": "eqasc_train_1305", "prediction": "all x y.((MammalHeart(x) & FishHeart(y)) -> TwoMoreSections(x,y))", "score": 0}
{"id": "eqasc_train_1306", "prediction": "all x.((Fish(x) & Tuna(x)) -> HighProteinFood(x))", "score": 0}
{"id": "eqasc_train_1307", "prediction": "all x.(Tuna(x) -> (CirculatorySystem(x) & TwoChamberedHeart(x)))", "score": 0}
{"id": "eqasc_train_1308", "prediction": "all x.(FishSpecies(x) -> (Salmon(x) | Trout(x)))", "score": 0}
{"id": "eqasc_train_1309", "prediction": "all x.((Salmon(x) | Trout(x)) -> (CirculatorySystem(x) & TwoChamberedHeart(x)))", "score": 0}
{"id": "eqasc_train_1310", "prediction": "exists x.(Virus(x) & CausesCancer(x))", "score": 0}
{"id": "eqasc_train_1311", "prediction": "all x.(Cancer(x) -> Kills(x))", "score": 0}
{"id": "eqasc_train_1312", "prediction": "exists x.(Virus(x) & Kills(x))", "score": 0}
{"id": "eqasc_train_1313", "prediction": "all x.(Cancer(x) -> (UncontrolledGrowth(x) & SpreadOfAnomalyCells(x)))", "score": 0}
{"id": "eqasc_train_1314", "prediction": "exists x.(Virus(x) & CausesUncontrolledGrowthAndSpreadOfAnomalyCells(x))", "score": 0}
{"id": "eqasc_train_1315", "prediction": "all x.(LungCancer(x) -> (FormationOfTumorsInLung(x)))", "score": 0}
{"id": "eqasc_train_1316", "prediction": "exists x.(Virus(x) & MalignantTumor(x))", "score": 0}
{"id": "eqasc_train_1317", "prediction": "all x.(Cancer(x) -> MutationInCells(x))", "score": 0}
{"id": "eqasc_train_1318", "prediction": "exists x.(Virus(x) & MutatesCells(x))", "score": 0}
{"id": "eqasc_train_1319", "prediction": "all x.(Leukemia(x) -> CancerOfBlood(x))", "score": 0}
{"id": "eqasc_train_1320", "prediction": "exists x.(Virus(x) & CanCauseLeukemia(x))", "score": 0}
{"id": "eqasc_train_1321", "prediction": "all x.(SkinCancer(x) -> CanKill(x))", "score": 0}
{"id": "eqasc_train_1322", "prediction": "exists x.(Virus(x) & CanKill(x))", "score": 0}
{"id": "eqasc_train_1323", "prediction": "all x.(OncogenicVirus(x) -> (Virus(x) & LinkedToCancer(x)))", "score": 0}
{"id": "eqasc_train_1324", "prediction": "all x y.((OncogenicViral(x) & Disease(y)) -> LinkedTo(x,y))", "score": 0}
{"id": "eqasc_train_1325", "prediction": "all x.(HasPapillomavirus(x) -> (Virus(x) & NameOfGroup(x)))", "score": 0}
{"id": "eqasc_train_1326", "prediction": "all x.(HPV(x) -> CausesCancer(x))", "score": 0}
{"id": "eqasc_train_1327", "prediction": "exists x.(Cancer(x) & Fatal(x))", "score": 0}
{"id": "eqasc_train_1328", "prediction": "exists x.(Virus(x) & CanBeFail(x))", "score": 0}
{"id": "eqasc_train_1329", "prediction": "all x.(Cancer(x) -> RequiresAccumulationOfMutations(x))", "score": 0}
{"id": "eqasc_train_1330", "prediction": "exists x.(Virus(x) & CausesMutation(x))", "score": 0}
{"id": "eqasc_train_1331", "prediction": "all x.(HumanPapillomavirusVaccine(x) -> aimedAtCervicCancer(x))", "score": 0}
{"id": "eqasc_train_1332", "prediction": "all x y.((Vaccine(x) & Virus(y)) -> ProtectsAgainstCervicalCancer(x,y))", "score": 0}
{"id": "eqasc_train_1333", "prediction": "all x.(CervicalCancer(x) -> CausedByVirus(x))", "score": 0}
{"id": "eqasc_train_1334", "prediction": "all x.(Virus(x) -> CervicalCancer(x))", "score": 0}
{"id": "eqasc_train_1335", "prediction": "all x.(HepatitisBVirus(x) -> CausesLiverCancer(x))", "score": 0}
{"id": "eqasc_train_1336", "prediction": "all x.(HepatitisB(x) -> FormsLiverCancerous(x))", "score": 0}
{"id": "eqasc_train_1337", "prediction": "all x.(Cancer(x) -> AnomalyGrowthOfCells(x))", "score": 0}
{"id": "eqasc_train_1338", "prediction": "exists x.(Virus(x) & CausesAnomalyCellGrowth(x))", "score": 0}
{"id": "eqasc_train_1339", "prediction": "all x.(Cancer(x) -> UncontrolledCellDividection(x))", "score": 0}
{"id": "eqasc_train_1340", "prediction": "exists x.(Virus(x) & CanCauseUncontrolledCellDivision(x))", "score": 0}
{"id": "eqasc_train_1341", "prediction": "all x.((Leukaemia(x) | Lymphoma(x)) -> CancerOfBlood(x))", "score": 0}
{"id": "eqasc_train_1342", "prediction": "exists x.(Virus(x) & CanCauseLymphoma(x))", "score": 0}
{"id": "eqasc_train_1343", "prediction": "all x.(Protist(x) -> HasMotility(x))", "score": 0}
{"id": "eqasc_train_1344", "prediction": "all x.((Specimen(x) & Drys(x)) -> MotilityLoss(x))", "score": 0}
{"id": "eqasc_train_1345", "prediction": "all x.((Protist(x) & -DriesSpecimen(x)) -> CanMove(x))", "score": 0}
{"id": "eqasc_train_1346", "prediction": "all x.(Protist(x) -> LéasedOrganism(x))", "score": 0}
{"id": "eqasc_train_1347", "prediction": "all x.(LayeredOrganism(x) -> HasMotility(x))", "score": 0}
{"id": "eqasc_train_1348", "prediction": "all x.(Motility(x) -> (Full(x) & Smooth(x)))", "score": 0}
{"id": "eqasc_train_1349", "prediction": "all x.(Protist(x) -> (Full(x) & Smooth(x)))", "score": 0}
{"id": "eqasc_train_1350", "prediction": "all x.(Protist(x) -> (SingleCellled(x) & Microorganism(x) & Amoebae(x)))", "score": 0}
{"id": "eqasc_train_1351", "prediction": "all x.(Amoeba(x) -> HasMotility(x))", "score": 0}
{"id": "eqasc_train_1352", "prediction": "all x.(Animal(x) -> (Motile(x) & MovesAtSomePointInLifeCycle(x)))", "score": 0}
{"id": "eqasc_train_1353", "prediction": "all x.(Protist(x) -> (AffordsMovement(x) & MovesAtSomePointInLife(x)))", "score": 0}
{"id": "eqasc_train_1354", "prediction": "all x.(Protist(x) -> (SingleCelledOrganism(x) & Organism(x)))", "score": 0}
{"id": "eqasc_train_1355", "prediction": "all x.(SingleCellledOrganism(x) -> HasMotility(x))", "score": 0}
{"id": "eqasc_train_1356", "prediction": "all x.(SingleCelledOrganism(x) -> Motile(x))", "score": 0}
{"id": "eqasc_train_1357", "prediction": "all x.(SingleCellledOrganism(x) -> HasMotility(x))", "score": 0}
{"id": "eqasc_train_1358", "prediction": "all x.(Protist(x) -> SimplestOfEukaryotes(x))", "score": 0}
{"id": "eqasc_train_1359", "prediction": "all x.((Eukaryote(x) & Simplest(x)) -> HasMotility(x))", "score": 0}
{"id": "eqasc_train_1360", "prediction": "all x.(SspermMotility(x) -> AbilityToMove(x))", "score": 0}
{"id": "eqasc_train_1361", "prediction": "all x.(Protist(x) -> CanMove(x))", "score": 0}
{"id": "eqasc_train_1362", "prediction": "all x.(Protist(x) -> CanMove(x))", "score": 0}
{"id": "eqasc_train_1363", "prediction": "all x y.((Skin(x) & Body(y)) -> ProtectsFromHarmfulSubstances(x,y))", "score": 0}
{"id": "eqasc_train_1364", "prediction": "all x.(Acid(x) -> HarmfulToTissue(x))", "score": 0}
{"id": "eqasc_train_1365", "prediction": "all x.(Skin(x) -> ProtectsFromAcids(x))", "score": 0}
{"id": "eqasc_train_1366", "prediction": "all x.(Skin(x) -> ProtectiveOrgan(x))", "score": 0}
{"id": "eqasc_train_1367", "prediction": "all x y.((ProtectiveOrgan(x) & Body(y)) -> ProtectsFromHarmfulSubstances(x,y))", "score": 0}
{"id": "eqasc_train_1368", "prediction": "all x.(Contamination(x) -> (UnintendedPresenceOfHarmfulSubstancesOrMicroorganisms(x) & InFood(x)))", "score": 0}
{"id": "eqasc_train_1369", "prediction": "all x.(Skin(x) -> ProtectsFromContamination(x))", "score": 0}
{"id": "eqasc_train_1370", "prediction": "all x.(Skin(x) -> LargestOrgan(x))", "score": 0}
{"id": "eqasc_train_1371", "prediction": "all x y.((Body(x) & Body(y)) -> ProtectsFromHarmfulSubstances(x,y))", "score": 0}
{"id": "eqasc_train_1372", "prediction": "all x.(Skin(x) -> (Epidermis(x) & Dermis(x)))", "score": 0}
{"id": "eqasc_train_1373", "prediction": "all x y.((Epidermis(x) & Dermis(y)) -> ProtectsFromHarmfulSubstances(x,y))", "score": 0}
{"id": "eqasc_train_1374", "prediction": "all x y.((Skin(x) & HarmfulSubstance(y)) -> HelpsKeepOut(x,y))", "score": 0}
{"id": "eqasc_train_1375", "prediction": "all x y.((Organ(x) & Body(y)) -> ProtectsFromHarmfulSubstances(x,y))", "score": 0}
{"id": "eqasc_train_1376", "prediction": "all x.((Eyes(x) | Skin(x)) -> CriticalOrgan(x))", "score": 0}
{"id": "eqasc_train_1377", "prediction": "all x y.((CriticalOrgan(x) & Body(y)) -> ProtectsFromHarmfulSubstances(x,y))", "score": 0}
{"id": "eqasc_train_1378", "prediction": "all x.(NaturalToxic(x) -> Harmful(x))", "score": 0}
{"id": "eqasc_train_1379", "prediction": "all x y.((Skin(x) & Toxics(y)) -> ProtectsFrom(x,y))", "score": 0}
{"id": "eqasc_train_1380", "prediction": "all x.(Pollution(x) -> ReleaseOfHarmfulSubstances(x))", "score": 0}
{"id": "eqasc_train_1381", "prediction": "all x y.((Skin(x) & Body(y)) -> ProtectsFromPollution(x,y))", "score": 0}
{"id": "eqasc_train_1382", "prediction": "all x.(Sunlight(x) -> HarmfulToSkin(x))", "score": 0}
{"id": "eqasc_train_1383", "prediction": "all x y.((Skin(x) & Sunlight(y)) -> ProtectsFrom(x,y))", "score": 0}
{"id": "eqasc_train_1384", "prediction": "all x y.((Windmill(x) & WindEnergy(y)) -> ConvertsToElectricity(x,y))", "score": 0}
{"id": "eqasc_train_1385", "prediction": "all x.(ElectricField(x) -> CreatedByVoltage(x))", "score": 0}
{"id": "eqasc_train_1386", "prediction": "all x.(Windmill(x) -> CreatesVibration(x))", "score": 0}
{"id": "eqasc_train_1387", "prediction": "all x.(MechanicalEnergy(x) -> EnergyOfMovingObjects(x))", "score": 0}
{"id": "eqasc_train_1388", "prediction": "all x y z.((Windmill(x) & WindEnergy(y) & Electricity(z)) -> ConvertsTo(x,y,z))", "score": 0}
{"id": "eqasc_train_1389", "prediction": "all x.(Computer(x) -> (UsesElectricity(x) & UsesSiliconChips(x)))", "score": 0}
{"id": "eqasc_train_1390", "prediction": "all x y.((Windmill(x) & Computer(y)) -> ProvidesEnergyTo(x,y))", "score": 0}
{"id": "eqasc_train_1391", "prediction": "all x.(Windmill(x) -> OperatedByWindpower(x))", "score": 0}
{"id": "eqasc_train_1392", "prediction": "all x.(Windpower(x) -> ConvertsEnergyToElectricity(x))", "score": 0}
{"id": "eqasc_train_1393", "prediction": "all x.(Windmill(x) -> MakesWindEnergyFromMoving(x))", "score": 0}
{"id": "eqasc_train_1394", "prediction": "all x.(WindSpeed(x) -> ImportantForWindEnergy(x))", "score": 0}
{"id": "eqasc_train_1395", "prediction": "all x y z.((Windmill(x) & Wind(y) & Electricity(z)) -> ConvertsTo(x,y,z))", "score": 0}
{"id": "eqasc_train_1396", "prediction": "all x y.((Machine(x) & WindPower(y)) -> ConvertsWindEnergyToElectricity(x,y))", "score": 0}
{"id": "eqasc_train_1397", "prediction": "all x.(Windmill(x) -> (TapsIntoWindEnergy(x) & (UsesSails(x) | UsesVane(x))))", "score": 0}
{"id": "eqasc_train_1398", "prediction": "all x.(Windmill(x) -> (UsesVane(x) & ConvertsEnergy(x)))", "score": 0}
{"id": "eqasc_train_1399", "prediction": "all x.((Windmill(x) & WindTurbine(x)) -> GeneratesElectricity(x))", "score": 0}
{"id": "eqasc_train_1400", "prediction": "all x.(WindTurbine(x) -> (ConvertsWindEnergy(x) & UsesMechanicalEnergy(x)))", "score": 0}
{"id": "eqasc_train_1401", "prediction": "all x.(Animal(x) -> Heterotroph(x))", "score": 2}
{"id": "eqasc_train_1402", "prediction": "all x.(Animal(x) -> (LivesByIngestion(x) & DigestsFood(x) & WithinSpecializedCavities(x)))", "score": 0}
{"id": "eqasc_train_1403", "prediction": "all x.(Heterotroph(x) -> LivesByDigestingFood(x))", "score": 0}
{"id": "eqasc_train_1404", "prediction": "all x.(Cat(x) -> Animal(x))", "score": 8}
{"id": "eqasc_train_1405", "prediction": "all x.(Cat(x) -> Heterotroph(x))", "score": 2}
{"id": "eqasc_train_1406", "prediction": "all x.(HeterotrophicBacteria(x) -> DeriveEnergyFromBreakdownOfOrganicMolecules(x))", "score": 0}
{"id": "eqasc_train_1407", "prediction": "all x.(Animal(x) -> DeriveEnergyFromBreakdownOfOrganicMolecules(x))", "score": 0}
{"id": "eqasc_train_1408", "prediction": "all x.(Fish(x) -> Heterotrophic(x))", "score": 0}
{"id": "eqasc_train_1409", "prediction": "all x.(Fish(x) -> Animal(x))", "score": 0}
{"id": "eqasc_train_1410", "prediction": "all x.(Protein(x) -> EssentialNutrientForHeterotrophs(x))", "score": 0}
{"id": "eqasc_train_1411", "prediction": "all x.(Protein(x) -> EssentialNutrientForAnimals(x))", "score": 0}
{"id": "eqasc_train_1412", "prediction": "all x.(Human(x) -> HeterotrophicEukaryote(x))", "score": 0}
{"id": "eqasc_train_1413", "prediction": "all x.(Human(x) -> Eukyarote(x))", "score": 0}
{"id": "eqasc_train_1414", "prediction": "all x.(Heterotrophic(x) -> FeedsByOthers(x))", "score": 0}
{"id": "eqasc_train_1415", "prediction": "all x.(Animal(x) -> Feed(x,y))", "score": 0}
{"id": "eqasc_train_1416", "prediction": "all x.(Consumer(x) -> Heterotroph(x))", "score": 0}
{"id": "eqasc_train_1417", "prediction": "all x.(Animal(x) -> Consumer(x))", "score": 0}
{"id": "eqasc_train_1418", "prediction": "all x.(Protein(x) -> EssentialNutrientForAnimals(x))", "score": 0}
{"id": "eqasc_train_1419", "prediction": "all x.(Animal(x) -> Protein(x))", "score": 0}
{"id": "eqasc_train_1420", "prediction": "all x.(HeterotrophicGrowth(x) -> (Slow(x) & Inefficient(x)))", "score": 0}
{"id": "eqasc_train_1421", "prediction": "all x.(Animal(x) -> (SlowGrowth(x) & InefficientGrowth(x)))", "score": 0}
{"id": "eqasc_train_1422", "prediction": "all x.(Alligator(x) -> ColdBlooded(x))", "score": 0}
{"id": "eqasc_train_1423", "prediction": "all x.(Alligator(x) -> Heterotroph(x))", "score": 0}
{"id": "eqasc_train_1424", "prediction": "all x y z.((Delta(x) & Sediment(y) & River(z) & DepositionAtMouth(x,y,z)) -> FormedByWaterFanningOut(x))", "score": 0}
{"id": "eqasc_train_1425", "prediction": "all x.(Delta(x) -> (FanShapedDepositsOfSediment(x) & FormsWhereCurrentsSlowAtMouth(x)))", "score": 0}
{"id": "eqasc_train_1426", "prediction": "all x.((FanShapedDepositsOfSediment(x) & MouthOfRiver(x)) -> FormsAt(x,y))", "score": 0}
{"id": "eqasc_train_1427", "prediction": "all x.(Delta(x) -> (Culinary(x) & HasLargeRiver(x)))", "score": 0}
{"id": "eqasc_train_1428", "prediction": "all x y.((River(x) & Coastline(y)) -> (FanOut(x) & DepositSediment(x)))", "score": 0}
{"id": "eqasc_train_1429", "prediction": "all x.(Sand(x) -> ClasticSediment(x))", "score": 0}
{"id": "eqasc_train_1430", "prediction": "all x y z.((Delta(x) & Sand(y) & River(z) & DepositionAtMouth(x,y,z)) -> FormedByWaterFanningOut(x))", "score": 0}
{"id": "eqasc_train_1431", "prediction": "all x.((Delta(x) | Estuary(x)) -> ImportantHabitat(x))", "score": 0}
{"id": "eqasc_train_1432", "prediction": "all x y.((Habitat(x) & River(y) & DepositionOfSediment(x,y) & FanningOutWater(x,y)) -> Important(x))", "score": 0}
{"id": "eqasc_train_1433", "prediction": "exists x.(Water(x) & Ganges(x) & Current(x,Saraswati))", "score": 0}
{"id": "eqasc_train_1434", "prediction": "all x.(Ganges(x) -> (HasDeltas(x) & FormedBySediment(x) & DeposesAtMouthByWater(x)))", "score": 0}
{"id": "eqasc_train_1435", "prediction": "all x.(Erosion(x) -> (WearsDownExposures(x) & DepositsSedimentInLevelPlaces(x)))", "score": 0}
{"id": "eqasc_train_1436", "prediction": "all x.(Delta(x) -> FormedByErosion(x))", "score": 0}
{"id": "eqasc_train_1437", "prediction": "all x.(River(x) -> ProvidesWaterSupply(x))", "score": 0}
{"id": "eqasc_train_1438", "prediction": "all x y.((Delta(x) & WaterSupply(y)) -> FormedByDepositionOfSedimentAtMouthFanningOut(x,y))", "score": 0}
{"id": "eqasc_train_1439", "prediction": "all x.((Sediment(x) & Deposited(x)) -> BuriedByMoreSediments(x))", "score": 0}
{"id": "eqasc_train_1440", "prediction": "all x.(Delta(x) -> (LeadsToGraduateBoiling(x) & MoreSediments(x)))", "score": 0}
{"id": "eqasc_train_1441", "prediction": "all x y.((River(x) & Slows(x)) -> (Desert(y) & WideFan(y) & Delta(y)))", "score": 0}
{"id": "eqasc_train_1442", "prediction": "all x y.((River(x) & Slow(x)) -> SedimentDroppedByWater(y))", "score": 0}
{"id": "eqasc_train_1443", "prediction": "all x.(AlluvialDeposit(x) -> (FormsDelta(x) & RiverFlowsIntoLakeOrOcean(x)))", "score": 0}
{"id": "eqasc_train_1444", "prediction": "all x.(AlluvialDeposits(x) -> FanOutIntoOcean(x))", "score": 0}
{"id": "eqasc_train_1445", "prediction": "all x.(DeltaGreekSymbol(x) -> LooksAlikeTriangle(x))", "score": 0}
{"id": "eqasc_train_1446", "prediction": "all x y.((DepositionOfSediment(x) & MouthOfRiver(y) & WaterFanningOut(x)) -> GreekLetter(x))", "score": 0}
{"id": "eqasc_train_1447", "prediction": "all x y.((Water(x) & Light(y)) -> CausesRefraction(x,y))", "score": 0}
{"id": "eqasc_train_1448", "prediction": "all x y.((Water(x) & LightRay(y)) -> CausesBoundness(x,y))", "score": 0}
{"id": "eqasc_train_1449", "prediction": "all x y.((Light(x) & DropOfWaterOrPrism(y)) -> (Bends(x,y) | RefractedInside(x,y)))", "score": 0}
{"id": "eqasc_train_1450", "prediction": "all x y.((Light(x) & WaterDroplet(y)) -> BentInside(x,y))", "score": 0}
{"id": "eqasc_train_1451", "prediction": "all x.(Rainbow(x) -> (FormedBySunlight(x) & RefractedThroughRaindrops(x)))", "score": 0}
{"id": "eqasc_train_1452", "prediction": "all x.(Rainbow(x) -> (FormedByLight(x) & PassesThroughWater(x)))", "score": 0}
{"id": "eqasc_train_1453", "prediction": "all x.(RefractedLight(x) -> CanBeDeceptive(x))", "score": 0}
{"id": "eqasc_train_1454", "prediction": "all x.(Water(x) -> Deceptive(x))", "score": 0}
{"id": "eqasc_train_1455", "prediction": "all x.(Refraction(x) -> (Blooding(x) & CausedByChangeSpeed(x)))", "score": 0}
{"id": "eqasc_train_1456", "prediction": "all x.(Water(x) -> CanChangeSpeedOfLight(x))", "score": 0}
{"id": "eqasc_train_1457", "prediction": "all x y.((Water(x) & RayOfLight(y)) -> CausesBbendingOf(x,y))", "score": 0}
{"id": "eqasc_train_1458", "prediction": "all x.(Water(x) -> IncludesLiquids(x))", "score": 0}
{"id": "eqasc_train_1459", "prediction": "all x.(Liquid(x) -> CausesRefractionOfLight(x))", "score": 0}
{"id": "eqasc_train_1460", "prediction": "all x.(Halos(x) -> ProducedByRefractionOfLight(x))", "score": 0}
{"id": "eqasc_train_1461", "prediction": "all x.((Water(x) & CausesHalos(x)) -> CausesHalos(x))", "score": 0}
{"id": "eqasc_train_1462", "prediction": "all x.(Water(x) -> (CompoundOfHydrogen(x) & CompoundOfOxygen(x)))", "score": 0}
{"id": "eqasc_train_1463", "prediction": "all x.((Compound(x) & Hydrogen(x) & Oxygen(x)) -> CausesRefractionOfLight(x))", "score": 0}
{"id": "eqasc_train_1464", "prediction": "all x.(DNA(x) -> FoundInChromosomes(x))", "score": 0}
{"id": "eqasc_train_1465", "prediction": "all x y.((Gene(x) & Chromosome(y)) -> (LivesOn(x,chromosome) & LivesIn(y,cell)))", "score": 0}
{"id": "eqasc_train_1466", "prediction": "all x.(DNA(x) -> FoundInCells(x))", "score": 0}
{"id": "eqasc_train_1467", "prediction": "all x.(DeoxyribonucleicAcid(x) -> FoundInChromosomes(x))", "score": 0}
{"id": "eqasc_train_1468", "prediction": "all x.(DeoxyribonucleicAcid(x) -> FoundInChromosomes(x))", "score": 0}
{"id": "eqasc_train_1469", "prediction": "all x.(Chromosome(x) -> (GroupingOfCoiledStringsOfDNA(x) & ContainsManyGenes(x)))", "score": 0}
{"id": "eqasc_train_1470", "prediction": "all x.(DNA(x) -> ComesInCoiledStrings(x))", "score": 0}
{"id": "eqasc_train_1471", "prediction": "all x.(DNACondenses(x) -> FormsChromosomes(x))", "score": 0}
{"id": "eqasc_train_1472", "prediction": "all x y.((GeneticMaterial(x) & GenecticMaterial(y)) -> (CompressedToFormChromosomes(x,y)))", "score": 0}
{"id": "eqasc_train_1473", "prediction": "all x.(Chromosome(x) -> Duplicates(x))", "score": 0}
{"id": "eqasc_train_1474", "prediction": "all x y.((DNA(x) & Duplicates(x,y)) -> FoundToDuplicate(x,y))", "score": 0}
{"id": "eqasc_train_1475", "prediction": "all x.(DNA(x) -> FoundInCoiledGenes(x))", "score": 0}
{"id": "eqasc_train_1476", "prediction": "all x y.((Chromosome(x) & Cell(y)) -> FoundInNucleus(x,y))", "score": 0}
{"id": "eqasc_train_1477", "prediction": "all x y.((DNA(x) & Cell(y)) -> FoundInNucleus(x,y))", "score": 0}
{"id": "eqasc_train_1478", "prediction": "all x y.((DNA(x) & Cell(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_train_1479", "prediction": "all x y.((Chromosome(x) & Cell(y)) -> LocatedInNucleus(x,y))", "score": 0}
{"id": "eqasc_train_1480", "prediction": "all x y.((DNA(x) & Cell(y)) -> FoundInNucleus(x,y))", "score": 0}
{"id": "eqasc_train_1481", "prediction": "all x.(Gene(x) -> (PartOfChromosomes(x) & CodedForOnDNAStrings(x)))", "score": 0}
{"id": "eqasc_train_1482", "prediction": "all x y.((DNA(x) & CodedGene(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_train_1483", "prediction": "exists x.(Virus(x) & LivesInDormantState(x))", "score": 0}
{"id": "eqasc_train_1484", "prediction": "all x.((ChickpoxEpisode(x) & Virus(x)) -> DormantInBody(x))", "score": 0}
{"id": "eqasc_train_1485", "prediction": "all x.(Chickenpox(x) -> CanStayDormantInBrain(x))", "score": 0}
{"id": "eqasc_train_1486", "prediction": "all x.(ChickenPox(x) -> LivesInInactiveState(x))", "score": 0}
{"id": "eqasc_train_1487", "prediction": "all x.(Hibernation(x) -> DormantSleepLike(x))", "score": 0}
{"id": "eqasc_train_1488", "prediction": "exists x.(Virus(x) & LivesInHibernation(x))", "score": 0}
{"id": "eqasc_train_1489", "prediction": "all x.(ViralInfection(x) -> exists y.(Virus(y) & LivesInBody(x,y)))", "score": 0}
{"id": "eqasc_train_1490", "prediction": "exists x.(ViralInfection(x) & LivesInDormantState(x))", "score": 0}
{"id": "eqasc_train_1491", "prediction": "all x.((Chickenpox(x) & EffectedBy(x,Chickenpox)) -> Dormant(x))", "score": 0}
{"id": "eqasc_train_1492", "prediction": "all x.(InfluenzaVirus(x) -> Seasonal(x))", "score": 0}
{"id": "eqasc_train_1493", "prediction": "all x.(Influenza(x) -> (LivesInDormantState(x) & InsideBody(x)))", "score": 0}
{"id": "eqasc_train_1494", "prediction": "all x.(HerpesVirus(x) -> (-LeavesBody(x) & LaysDormant(x)))", "score": 0}
{"id": "eqasc_train_1495", "prediction": "all x.(Herpes(x) -> LivesInDormantState(x))", "score": 0}
{"id": "eqasc_train_1496", "prediction": "all x.(Human(x) -> HasBody(x))", "score": 0}
{"id": "eqasc_train_1497", "prediction": "exists x.(Virus(x) & LivesInDormantState(x) & InsideHumans(x))", "score": 0}
{"id": "eqasc_train_1498", "prediction": "all x.((Fern(x) & Dormant(x)) -> Hibernating(x))", "score": 0}
{"id": "eqasc_train_1499", "prediction": "exists x.(Virus(x) & HibernatingState(x))", "score": 0}
{"id": "eqasc_train_1500", "prediction": "all x.(Virus(x) -> (Smaller(x) & MultiplyInBody(x)))", "score": 0}
{"id": "eqasc_train_1501", "prediction": "exists x.(HarmfulOrganism(x) & LivesInDormantState(x) & MultipliesInsideCells(x))", "score": 0}
{"id": "eqasc_train_1502", "prediction": "all x y.((Cold(x) & Flu(y)) -> (BodyResponseToVirus(x,y)))", "score": 0}
{"id": "eqasc_train_1503", "prediction": "exists x.(Virus(x) & DormantState(x) & ColdAndFluSymptoms(x))", "score": 0}
{"id": "eqasc_train_1504", "prediction": "all x.(Virus(x) -> (InfectsCells(x) & -HasLifeCharacteristics(x)))", "score": 0}
{"id": "eqasc_train_1505", "prediction": "exists x.(Agent(x) & InfectsCells(x) & LivesInDormantState(x))", "score": 0}
{"id": "eqasc_train_1506", "prediction": "all x.((Dendrobium(x) & (Inactive(x) | Dormant(x))) -> RequiresLittleOrNoFertilizer(x))", "score": 0}
{"id": "eqasc_train_1507", "prediction": "exists x.(Virus(x) & LivesInInactiveState(x))", "score": 0}
{"id": "eqasc_train_1508", "prediction": "all x.(TrueInfluenza(x) -> CausedByInfluenzaVirus(x))", "score": 0}
{"id": "eqasc_train_1509", "prediction": "all x.(Invertebrate(x) -> NervousSystem(x))", "score": 8}
{"id": "eqasc_train_1510", "prediction": "all x.(Invertebrate(x) -> Animal(x) & -Backbone(x))", "score": 0}
{"id": "eqasc_train_1511", "prediction": "all x.((Animal(x) & -Backbone(x)) -> NervousSystem(x))", "score": 0}
{"id": "eqasc_train_1512", "prediction": "all x.((Jellyfish(x) | Insect(x)) -> Invertebrate(x))", "score": 6}
{"id": "eqasc_train_1513", "prediction": "all x.(Jellyfish(x) -> NervousSystem(x))", "score": 3}
{"id": "eqasc_train_1514", "prediction": "all x.(Insect(x) -> (Invertebrate(x) & MostCommon(x)))", "score": 4}
{"id": "eqasc_train_1515", "prediction": "all x.(Insect(x) -> NervousSystem(x))", "score": 2}
{"id": "eqasc_train_1516", "prediction": "all x.(Insect(x) -> NervousSystem(x))", "score": 1}
{"id": "eqasc_train_1517", "prediction": "all x.(Octopus(x) -> IntelligentInvertebrate(x))", "score": 0}
{"id": "eqasc_train_1518", "prediction": "all x.(Octopus(x) -> NervousSystem(x))", "score": 0}
{"id": "eqasc_train_1519", "prediction": "all x.(Invertebrates(x) -> (LargestNumberOfSpecies(x) & Invertebrates(x)))", "score": 0}
{"id": "eqasc_train_1520", "prediction": "all x.(Insect(x) -> NervousSystem(x))", "score": 0}
{"id": "eqasc_train_1521", "prediction": "all x.(Jellyfish(x) -> NervousSystem(x))", "score": 1}
{"id": "eqasc_train_1522", "prediction": "all x.(Jellyfish(x) -> NervousSystem(x))", "score": 1}
{"id": "eqasc_train_1523", "prediction": "all x.(AfferentInformation(x) -> InboundToNervousSystem(x))", "score": 0}
{"id": "eqasc_train_1524", "prediction": "all x.(Invertebrate(x) -> (HasAfferentInformationInbound(x) & Invertebrate(x)))", "score": 0}
{"id": "eqasc_train_1525", "prediction": "all x.(NarcoticAnalgesic(x) -> ActsOnCentralNervousSystem(x))", "score": 0}
{"id": "eqasc_train_1526", "prediction": "all x y.((NarcoticAnalgesic(x) & Invertebrate(y)) -> ActsOnToRelievePain(x,y))", "score": 0}
{"id": "eqasc_train_1527", "prediction": "all x.(Person(x) -> SurvivesWithoutWater(x))", "score": 0}
{"id": "eqasc_train_1528", "prediction": "all x.((Person(x) & -AmpleWaterSupply(x)) -> Dehydrated(x))", "score": 0}
{"id": "eqasc_train_1529", "prediction": "all x.((Person(x) & SurvivesDehydration(x)) -> FewDays(x))", "score": 0}
{"id": "eqasc_train_1530", "prediction": "all x.(Water(x) -> H20(x))", "score": 0}
{"id": "eqasc_train_1531", "prediction": "all x.((Person(x) & CanSurviveWithoutH20(x)) -> CanSurviveWithoutH20(x))", "score": 0}
{"id": "eqasc_train_1532", "prediction": "all x.((FoodShortage(x) & WaterShortage(x)) -> (LeadsToDiseases(x) & ManySickPeople(x) & ManySickAnimals(x)))", "score": 0}
{"id": "eqasc_train_1533", "prediction": "all x.((BodyGoesWithoutRequirements(x) & Person(x)) -> EventuallyGetsSickAfterTwoDays(x))", "score": 0}
{"id": "eqasc_train_1534", "prediction": "all x.(Water(x) -> BestFluidForHydration(x))", "score": 0}
{"id": "eqasc_train_1535", "prediction": "all x.((Person(x) & SurvivesWithoutHydration(x)) -> CanSurviveWithoutHydration(x))", "score": 0}
{"id": "eqasc_train_1536", "prediction": "all x.(DrinkingWater(x) -> JustHasToHave(x))", "score": 0}
{"id": "eqasc_train_1537", "prediction": "all x.((Person(x) & SurvivesWithoutDrinking(x)) -> SurvivesWithoutDrinking(x))", "score": 0}
{"id": "eqasc_train_1538", "prediction": "all x.((Person(x) & SurvivesWithoutH2o(x)) -> SurvivesWithoutH2o(x))", "score": 0}
{"id": "eqasc_train_1539", "prediction": "all x.((Person(x) & SurvivesWithoutH20(x)) -> CanSurviveWithoutH20(x))", "score": 0}
{"id": "eqasc_train_1540", "prediction": "all x.((Person(x) & SurvivesWithoutH2O(x)) -> SurvivesWithoutH2O(x))", "score": 0}
{"id": "eqasc_train_1541", "prediction": "all x.((Person(x) & DrinksWater(x,200000)) -> DrinksWater(x,200000))", "score": 0}
{"id": "eqasc_train_1542", "prediction": "all x.((People(x) & SurvivesWithoutDrinking(x)) -> CanSurviveWithoutDrinking(x))", "score": 0}
{"id": "eqasc_train_1543", "prediction": "all x.(Man(x) -> DependsOnWater(x))", "score": 0}
{"id": "eqasc_train_1544", "prediction": "all x.(Men(x) -> NeedsWaterToLive(x))", "score": 0}
{"id": "eqasc_train_1545", "prediction": "all x.(Water(x) -> (CombinesHydrogen(x) & CombinesOxygen(x)))", "score": 0}
{"id": "eqasc_train_1546", "prediction": "all x.((Person(x) & SurvivesWithoutHydrogen(x) & SurvivesWithOxygen(x)) -> SurvivesWithHydrogen(x))", "score": 0}
{"id": "eqasc_train_1547", "prediction": "all x.((BottledWater(x) & ConsumedLastYear(x)) -> Bottled(x))", "score": 0}
{"id": "eqasc_train_1548", "prediction": "all x.(Water(x) -> ControlsBodyTemperature(x))", "score": 0}
{"id": "eqasc_train_1549", "prediction": "all x.((Person(x) & SurvivesOnlyFiveDays(x) & -ControlsTemperature(x)) -> CanSurviveOnlyFiveDays(x))", "score": 0}
{"id": "eqasc_train_1550", "prediction": "all x.(Person(x) -> HumanFamily(x))", "score": 0}
{"id": "eqasc_train_1551", "prediction": "all x.(Human(x) -> SurvivesWithoutWater(x))", "score": 0}
{"id": "eqasc_train_1552", "prediction": "all x.(Earth(x) -> WaterPlanet(x))", "score": 0}
{"id": "eqasc_train_1553", "prediction": "all x y.((Person(x) & Earth(y)) -> Survives(x,y))", "score": 0}
{"id": "eqasc_train_1554", "prediction": "all x.(EarthsWater(x) -> Liquid(x))", "score": 0}
{"id": "eqasc_train_1555", "prediction": "all x.((Person(x) & SurvivesWithoutLiquids(x)) -> CanSurviveWithoutLiquids(x))", "score": 0}
{"id": "eqasc_train_1556", "prediction": "all x.(Muscle(x) -> CanContract(x))", "score": 0}
{"id": "eqasc_train_1557", "prediction": "all x.(MuscleSize(x) -> LiftsHeavyWeights(x))", "score": 0}
{"id": "eqasc_train_1558", "prediction": "all x.(Contracting(x) -> LiftsHeavyWeights(x))", "score": 0}
{"id": "eqasc_train_1559", "prediction": "all x.(Contraction(x) -> Movement(x))", "score": 0}
{"id": "eqasc_train_1560", "prediction": "all x.(Muscle(x) -> CanMove(x))", "score": 0}
{"id": "eqasc_train_1561", "prediction": "all x.(SmoothMuscle(x) -> InvoluntaryMuscle(x))", "score": 0}
{"id": "eqasc_train_1562", "prediction": "all x.((Smooth(x) & CanBe(x)) -> CanContract(x))", "score": 0}
{"id": "eqasc_train_1563", "prediction": "all x y.((Qlibw(x) & Grape(y)) -> (PressAs(x,y) & Contract(x) & Squeeze(x)))", "score": 0}
{"id": "eqasc_train_1564", "prediction": "all x.(Muscle(x) -> CanSqueeze(x))", "score": 0}
{"id": "eqasc_train_1565", "prediction": "all x.((QuadricepsContraction(x) & LegRaise(x)) -> BeginsImmediately(x))", "score": 0}
{"id": "eqasc_train_1566", "prediction": "all x.(Quadriceps(x) -> Muscle(x))", "score": 0}
{"id": "eqasc_train_1567", "prediction": "all x.((Muscle(x) & UpperArm(x) & Biceps(x)) -> FlexArm(x))", "score": 0}
{"id": "eqasc_train_1568", "prediction": "all x.(Biceps(x) -> CanContract(x))", "score": 0}
{"id": "eqasc_train_1569", "prediction": "all x.(Contracted(x) -> (TricepsFemoris(x) & PullsThighForward(x) & ExtendsShank(x)))", "score": 0}
{"id": "eqasc_train_1570", "prediction": "all x.((Muscle(x) & TricepsFemoris(x)) -> UsedToMoveBones(x))", "score": 0}
{"id": "eqasc_train_1571", "prediction": "all x.(ArmDay(x) -> (HitsBicep(x) & Hitstricep(x) & HitsForearm(x)))", "score": 0}
{"id": "eqasc_train_1572", "prediction": "all x.(triceps(x) -> CanContract(x))", "score": 0}
{"id": "eqasc_train_1573", "prediction": "all x.(Bone(x) -> WorksWithMuscles(x))", "score": 0}
{"id": "eqasc_train_1574", "prediction": "all x.(Contraction(x) -> EnablesBonesToPerformMovement(x))", "score": 0}
{"id": "eqasc_train_1575", "prediction": "all x y z.((Hemisphere(x) & TiltedAwayFromSun(x,y) & Sun(z)) -> ReceivesLessDirectSunlight(x,z))", "score": 0}
{"id": "eqasc_train_1576", "prediction": "all x.((LessDirectSunlight(x) & ColderWeather(x)) -> ColderWeather(x))", "score": 0}
{"id": "eqasc_train_1577", "prediction": "all x y.((Hemisphere(x) & TiltedAwayFromSun(x)) -> ColderWeather(y))", "score": 0}
{"id": "eqasc_train_1578", "prediction": "all x.(Plant(x) -> UsesDirectLightEnergyFromSun(x))", "score": 0}
{"id": "eqasc_train_1579", "prediction": "all x y.((Plant(x) & Hemisphere(y) & TiltedAwayFromSun(y,x)) -> MoreDifficultyGrowing(x,y))", "score": 0}
{"id": "eqasc_train_1580", "prediction": "all x y.((NorthernHemispheric(x) & SouthernHemispheric(y)) -> (LessDirectSunlight(x) & MoreDirectSunlight(y)))", "score": 0}
{"id": "eqasc_train_1581", "prediction": "all x y z.((Hemisphere(x) & Sun(y) & Winter(z)) -> TiltedAwayFrom(x,y,z))", "score": 0}
{"id": "eqasc_train_1582", "prediction": "(all x.((Summer(x) & NorthernHemisphere(x)) -> TiltedTowardsSun(x)) & all y.((Winter(y) & Earth(y)) -> TiltedAway(y)))", "score": 0}
{"id": "eqasc_train_1583", "prediction": "all x y.((NorthernHemisphere(x) & Winter(y)) -> LessDirectSunlight(x,y))", "score": 0}
{"id": "eqasc_train_1584", "prediction": "all x y.((NorthernHemisphere(x) & Sun(y)) -> TiltedAway(x,y))", "score": 0}
{"id": "eqasc_train_1585", "prediction": "all x y.((NorthernHemisphere(x) & Winter(y)) -> LessSunInWinter(x,y))", "score": 0}
{"id": "eqasc_train_1586", "prediction": "all x.((Forest(x) & LessSunlight(x)) -> (Cooler(x) & Wetter(x)))", "score": 0}
{"id": "eqasc_train_1587", "prediction": "all x.((Hemisphere(x) & TiltsAwayFromSun(x)) -> (BecomesColder(x) & Wetter(x)))", "score": 0}
{"id": "eqasc_train_1588", "prediction": "all x y.((Tilt(x) & NorthernHemisphere(y) & Increases(x,y)) -> ReceivesLessHeat(y))", "score": 0}
{"id": "eqasc_train_1589", "prediction": "all x.((Winter(x) & LessSunlight(x)) -> Winter(x))", "score": 0}
{"id": "eqasc_train_1590", "prediction": "all x.(Sunlight(x) -> PureEnergy(x))", "score": 0}
{"id": "eqasc_train_1591", "prediction": "all x y z.((Hemisphere(x) & TiltedAwayFromSun(x,y) & Sun(y)) -> ReceivesLessDirectEnergy(x,z))", "score": 0}
{"id": "eqasc_train_1592", "prediction": "all x.(Star(x) -> (Sun(x) & Sun(x)))", "score": 0}
{"id": "eqasc_train_1593", "prediction": "all x y.((Hemisphere(x) & TiltedAway(x) & Star(y)) -> LessDirectSunlight(x,y))", "score": 0}
{"id": "eqasc_train_1594", "prediction": "all x.(Sunlight(x) -> (DeliveredInSmallPackagesOfEnergy(x) & Photons(x)))", "score": 0}
{"id": "eqasc_train_1595", "prediction": "all x y.((Hemisphere(x) & TiltedAwayFromSun(x,y)) -> ReceivesLessPhotons(x,y))", "score": 0}
{"id": "eqasc_train_1596", "prediction": "all x y.((Axis(x) & PointedTowardsSun(x)) -> MoreLightFallsOnHemisphere(y))", "score": 0}
{"id": "eqasc_train_1597", "prediction": "all x.((Hemisphere(x) & PointsAway(x)) -> ReceivesLessSunlight(x))", "score": 0}
{"id": "eqasc_train_1598", "prediction": "Sun(Sun) -> NearestStar(Sun))", "score": -1}
{"id": "eqasc_train_1599", "prediction": "all x y.((HemisphericHemisphere(x) & TiltedAwayFromNearestStar(x,y)) -> ReceivesLessDirectSunlight(x))", "score": 0}
{"id": "eqasc_train_1600", "prediction": "all x y.((River(x) & Stream(y)) -> Larger(x,y))", "score": 0}
{"id": "eqasc_train_1601", "prediction": "(QuadrantRiver(RiverEuphrates)", "score": -1}
{"id": "eqasc_train_1602", "prediction": "all x y.((Euphrates(x) & Stream(y)) -> LargerThan(x,y))", "score": 0}
{"id": "eqasc_train_1603", "prediction": "all x y.((SmallStream(x) & LargerStream(y)) -> (Joins(x,y) & JoinedBy(x,y)))", "score": 0}
{"id": "eqasc_train_1604", "prediction": "all x y.((Stream(x) & River(y)) -> Joins(x,y))", "score": 0}
{"id": "eqasc_train_1605", "prediction": "all x.(River(x) -> (DividedInto(x,River) | DividedInto(x,Stream)))", "score": 0}
{"id": "eqasc_train_1606", "prediction": "all x.(LargeWaterways(x) -> CanBeDividedIntoSmallerStreams(x))", "score": 0}
{"id": "eqasc_train_1607", "prediction": "all x.(Estuary(x) -> (MeetsRiver(x) & MeetsOcean(x)))", "score": 0}
{"id": "eqasc_train_1608", "prediction": "all x y.((Estuary(x) & Stream(y)) -> LargerThan(x,y))", "score": 0}
{"id": "eqasc_train_1609", "prediction": "all x y.((Euphrates(x) & Stream(y)) -> Larger(x,y))", "score": 0}
{"id": "eqasc_train_1610", "prediction": "all x y.((Stream(x) & BodyOfWater(y)) -> FlowsInto(x,y))", "score": 0}
{"id": "eqasc_train_1611", "prediction": "all x y.((River(x) & Stream(y)) -> MoreWater(x,y))", "score": 0}
{"id": "eqasc_train_1612", "prediction": "(Riverside(secondhalf) & SmallStreamCrossing(secondhalf) & StandingWater(secondhalf))", "score": 0}
{"id": "eqasc_train_1613", "prediction": "all x y.((River(x) & SmallWaterCrossing(y)) -> Larger(x,y))", "score": 0}
{"id": "eqasc_train_1614", "prediction": "all x.(FreshWaterRiver(x) -> RunsIntoSea(x))", "score": 0}
{"id": "eqasc_train_1615", "prediction": "all x.(Stream(x) -> (SmallerBodyOfWater(x) & SmallerBodyOfWater(x)))", "score": 0}
{"id": "eqasc_train_1616", "prediction": "all x.(Watershed(x) -> (Crater(x) | Stream(x) | River(x)))", "score": 0}
{"id": "eqasc_train_1617", "prediction": "all x.(River(x) -> Watershred(x))", "score": 0}
{"id": "eqasc_train_1618", "prediction": "all x.(Snow(x) -> (Melts(x) & Reproduces(x,River) & Reproduces(x,Lake)))", "score": 0}
{"id": "eqasc_train_1619", "prediction": "all x y.((MetallingSnow(x) & Stream(y)) -> LargerThan(x,y))", "score": 0}
{"id": "eqasc_train_1620", "prediction": "all x.(MountainStreamWater(x) -> Drinkable(x))", "score": 0}
{"id": "eqasc_train_1621", "prediction": "all x y.((River(x) & MountainSource(y)) -> LargerThan(x,y))", "score": 0}
{"id": "eqasc_train_1622", "prediction": "all x.(River(x) -> Watershed(x))", "score": 0}
{"id": "eqasc_train_1623", "prediction": "all x y.((Fish(x) & District(y)) -> (AvailableInRivers(x,y) & AvailableInLakes(x,y)))", "score": 0}
{"id": "eqasc_train_1624", "prediction": "all x y.((Habitat(x) & Fish(y) & LivesInLargeQuantities(x,y)) -> LargerThanStreams(x))", "score": 0}
{"id": "eqasc_train_1625", "prediction": "all x y.((TectonicPlate(x) & TectonicPlate(y) & PushedTogether(x,y)) -> CausesEarthquakes(x))", "score": 0}
{"id": "eqasc_train_1626", "prediction": "all x.((MantleConvection(x) & OnEarth(x)) -> (CausesPlateTectonics(x) | CausesVolcanism(x) | CausesEarthquakes(x)))", "score": 0}
{"id": "eqasc_train_1627", "prediction": "all x.(MantleConvection(x) -> CausesEarthquakes(x))", "score": 0}
{"id": "eqasc_train_1628", "prediction": "all x.(PlateTectonics(x) -> DriftingOfContinents(x))", "score": 0}
{"id": "eqasc_train_1629", "prediction": "all x.((Continent(x) & Drifting(x)) -> CausesEarthquakes(x))", "score": 0}
{"id": "eqasc_train_1630", "prediction": "all x.(Earthquake(x) -> (DoesEmbarrassingDamage(x) & (CausesInjury(x) | CausesDeath(x))))", "score": 0}
{"id": "eqasc_train_1631", "prediction": "all x.((TectonicPlate(x) & PushedTogether(x)) -> CausesEmbarrassmentalDamage(x))", "score": 0}
{"id": "eqasc_train_1632", "prediction": "all x.((TectonicActivity(x) & PlateTectonics(x)) -> (OccursAtOrNearPlateMargins(x)))", "score": 0}
{"id": "eqasc_train_1633", "prediction": "all x.(Earthquake(x) -> (OccursAtOrNearPlateMargins(x)))", "score": 0}
{"id": "eqasc_train_1634", "prediction": "all x.(Earthquake(x) -> LongPreceededByTectonicShifts(x))", "score": 0}
{"id": "eqasc_train_1635", "prediction": "all x y.((Plate(x) & Plate(y)) -> CausesEarthquake(x,y))", "score": 0}
{"id": "eqasc_train_1636", "prediction": "all x.(TectonicPlate(x) -> (ContinentalCrust(x) & OceanicCrust(x)))", "score": 0}
{"id": "eqasc_train_1637", "prediction": "all x.((Crust(x) & PushedTogether(x)) -> CausesEarthquakes(x))", "score": 0}
{"id": "eqasc_train_1638", "prediction": "all x.(Earthquake(x) -> CausesMassiveDamage(x))", "score": 0}
{"id": "eqasc_train_1639", "prediction": "all x.((TectonicPlates(x) & PushedTogether(x)) -> CausesMassiveDamage(x))", "score": 0}
{"id": "eqasc_train_1640", "prediction": "exists x.(TectonicPlate(x) & MakesUpEarthsCrust(x) & ConstantStateOfProcess(x))", "score": 0}
{"id": "eqasc_train_1641", "prediction": "all x.((PartsOfEarthsCrust(x) & PushedTogether(x)) -> CausesEarthquakes(x))", "score": 0}
{"id": "eqasc_train_1642", "prediction": "all x.(PlateTectonics(x) -> (MovementOfEarthSurface(x) & ReflectsLargeScaleConvectionOfUpperMantle(x)))", "score": 0}
{"id": "eqasc_train_1643", "prediction": "all x.(Earthquake(x) -> (MovementInUpperMantle(x) & CausesMovementInMantle(x)))", "score": 0}
{"id": "eqasc_train_1644", "prediction": "all x y.((Earthquake(x) & SanFrancisco(y)) -> CausesMoreDamage(x,y))", "score": 0}
{"id": "eqasc_train_1645", "prediction": "all x.(SanFrancisco(x) -> HasTectonicPlates(x))", "score": 0}
{"id": "eqasc_train_1646", "prediction": "all x.(PlateTectonics(x) -> EarthsPlatesMovement(x))", "score": 0}
{"id": "eqasc_train_1647", "prediction": "all x y.((Earth(x) & Earth(y) & ConstantMovement(x,y) & PushedTogether(x)) -> CausesEarthquakes(x))", "score": 0}
{"id": "eqasc_train_1648", "prediction": "all x.((EarthquakeTermor(x) & VolcanicActivity(x)) -> Frequent(x))", "score": 0}
{"id": "eqasc_train_1649", "prediction": "all x.((TectonicPlates(x) & PushedTogether(x)) -> CausesTermors(x))", "score": 0}
{"id": "eqasc_train_1650", "prediction": "all x.(Earthquake(x) -> DisposesBridges(x))", "score": 0}
{"id": "eqasc_train_1651", "prediction": "all x y.((TectonicPlate(x) & TectonicPlate(y) & PushedTogether(x)) -> DisruptsBridges(x))", "score": 0}
{"id": "eqasc_train_1652", "prediction": "all x.((Plumbing(x) & Earthquake(x)) -> Damaged(x))", "score": 0}
{"id": "eqasc_train_1653", "prediction": "all x.((TectonicPlate(x) & PushedTogether(x)) -> DamagesPlumbing(x))", "score": 0}
{"id": "eqasc_train_1654", "prediction": "all x y.((Landslide(x) & Earthquake(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_train_1655", "prediction": "all x.(Landslide(x) -> (CausedByTectonicPlates(x) & CausedByTectonicPlates(x)))", "score": 0}
{"id": "eqasc_train_1656", "prediction": "all x.(Earthquake(x) -> HitsSanFernando(x))", "score": 0}
{"id": "eqasc_train_1657", "prediction": "all x y.((TectonicPlates(x) & TectonicPlates(y) & PushedTogether(x,y)) -> HitsSanFernando(x))", "score": 0}
{"id": "eqasc_train_1658", "prediction": "all x.(Prokaryote(x) -> (SingleCelledOrganism(x) & -Nucleus(x)))", "score": 0}
{"id": "eqasc_train_1659", "prediction": "all x.((Bacteria(x) | Archaebacteria(x)) -> Prokaryote(x))", "score": 0}
{"id": "eqasc_train_1660", "prediction": "all x.((Bacteria(x) | Archaebacteria(x)) -> (SingleCellledOrganism(x) & -Nucleus(x)))", "score": 0}
{"id": "eqasc_train_1661", "prediction": "all x.(Prokaryote(x) -> (Microscopic(x) & Bacteria(x)))", "score": 0}
{"id": "eqasc_train_1662", "prediction": "all x.(Bacteria(x) -> (SingleLeavedOrganism(x) & -HasNucleus(x)))", "score": 0}
{"id": "eqasc_train_1663", "prediction": "exists x.(Bacteria(x) & -Nucleus(x))", "score": 0}
{"id": "eqasc_train_1664", "prediction": "all x.(Bacteria(x) -> Prokaryote(x))", "score": 0}
{"id": "eqasc_train_1665", "prediction": "all x.(Bacteria(x) -> (SingleCelledOrganism(x) & LacksNucleus(x)))", "score": 0}
{"id": "eqasc_train_1666", "prediction": "all x.(Prokaryote(x) -> (-MembraneBoundOrganelles(x) & BacteriaProkaryoticOrganism(x)))", "score": 0}
{"id": "eqasc_train_1667", "prediction": "all x.(Bacteria(x) -> (-MembraneBoundOrganelles(x) & -Nucleus(x)))", "score": 0}
{"id": "eqasc_train_1668", "prediction": "all x.(Nucleus(x) -> Genes(x))", "score": 0}
{"id": "eqasc_train_1669", "prediction": "all x.(Prokaryote(x) -> LacksGenes(x))", "score": 0}
{"id": "eqasc_train_1670", "prediction": "all x.(Bacteria(x) -> Prokaryote(x))", "score": 1}
{"id": "eqasc_train_1671", "prediction": "all x.(Bacteria(x) -> (SingledCelledOrganism(x) & -Nucleus(x)))", "score": 0}
{"id": "eqasc_train_1672", "prediction": "all x.(Organism(x) -> LivingThing(x))", "score": 0}
{"id": "eqasc_train_1673", "prediction": "all x.(Prokaryote(x) -> (SingleLeaved(x) & -Nucleus(x)))", "score": 0}
{"id": "eqasc_train_1674", "prediction": "all x.(Bacteria(x) -> (SingleCelledOrganism(x) & -HasNucleus(x)))", "score": 0}
{"id": "eqasc_train_1675", "prediction": "all x.((RidingBike(x) & -CausesPollution(x)) -> -CausesPollution(x))", "score": 0}
{"id": "eqasc_train_1676", "prediction": "all x.(AirPollution(x) -> MajorThreatToHealth(x))", "score": 0}
{"id": "eqasc_train_1677", "prediction": "all x.(RidingBike(x) -> -MajorThreatToHealth(x))", "score": 0}
{"id": "eqasc_train_1678", "prediction": "all x y.((CityEmployee(x) & Bicycle(y)) -> (UsesOnJob(x,y) & SavesEnergy(x) & ReducesAirPollution(x)))", "score": 0}
{"id": "eqasc_train_1679", "prediction": "all x y.((Bike(x) & Bike(y)) -> SavesEnergy(x,y))", "score": 0}
{"id": "eqasc_train_1680", "prediction": "all x.(ScientificConsensus(x) -> CausesGlobalWarming(x))", "score": 0}
{"id": "eqasc_train_1681", "prediction": "all x.((RidingBike(x) & -GlobalWarming(x)) -> -GlobalWarming(x))", "score": 0}
{"id": "eqasc_train_1682", "prediction": "all x.(AirPollution(x) -> (CausesDiseases(x) & HarmsCrops(x)))", "score": 0}
{"id": "eqasc_train_1683", "prediction": "all x.(RidingBike(x) -> (-CausesDiseases(x) & -HarmsCrops(x)))", "score": 0}
{"id": "eqasc_train_1684", "prediction": "all x.(Bicycle(x) -> (GoodForExercise(x) & -ProducesPollution(x)))", "score": 0}
{"id": "eqasc_train_1685", "prediction": "all x.(RidingBike(x) -> (GoodExercise(x) & -ProducesHarmfulGases(x)))", "score": 0}
{"id": "eqasc_train_1686", "prediction": "all x.((VisualPollution(x) & Littering(x)) -> Pollution(x))", "score": 0}
{"id": "eqasc_train_1687", "prediction": "all x.(RidingBike(x) -> -CausesLitter(x))", "score": 0}
{"id": "eqasc_train_1688", "prediction": "all x.((Habitat(x) & Pollution(x)) -> DegradedBy(x))", "score": 0}
{"id": "eqasc_train_1689", "prediction": "all x.(RidingBike(x) -> -DegradeHabitat(x))", "score": 0}
{"id": "eqasc_train_1690", "prediction": "all x.(Pollutant(x) -> (ReleasedAsGases(x) | ReleasedAsParticles(x)))", "score": 0}
{"id": "eqasc_train_1691", "prediction": "all x.((RidingBike(x) & -ReleasesParticles(x)) -> -ReleasesParticles(x))", "score": 0}
{"id": "eqasc_train_1692", "prediction": "all x.(Pollution(x) -> (SpoisesEnvironment(x)))", "score": 0}
{"id": "eqasc_train_1693", "prediction": "all x y.((Bike(x) & Environment(y)) -> -Spoises(x,y))", "score": 0}
{"id": "eqasc_train_1694", "prediction": "all x.(CarbonMonoxide(x) -> AirPollutant(x))", "score": 0}
{"id": "eqasc_train_1695", "prediction": "all x.((RidingBike(x) & -ReleasesCarbonMonoxide(x)) -> -ReleasesCarbonMonoxide(x))", "score": 0}
{"id": "eqasc_train_1696", "prediction": "all x.((RidingBike(x) & -CausesCarbonMonoxide(x)) -> -CausesCarbonMonoxide(x))", "score": 0}
{"id": "eqasc_train_1697", "prediction": "all x y.((Sun(x) & Sun(y)) -> CausesWaterToEvaporateMoreQuickly(x,y))", "score": 0}
{"id": "eqasc_train_1698", "prediction": "(all x.(HighHumidity(x) -> CausesMildew(x)) & (DryHeat(x) & DirectSunlight(x)) -> CausesDryingAndCracking(x)))", "score": -1}
{"id": "eqasc_train_1699", "prediction": "all x y.((Sun(x) & Water(y)) -> CausesEvaporationMore(x,y))", "score": 0}
{"id": "eqasc_train_1700", "prediction": "all x.(Summer(x) -> (SunHigher(x) & ProvidesDirectConcentratedHeating(x)))", "score": 0}
{"id": "eqasc_train_1701", "prediction": "all x.((Water(x) & Summer(x)) -> EvaporatesMoreQuickly(x))", "score": 0}
{"id": "eqasc_train_1702", "prediction": "all x y.((Star(x) & Water(y) & AddsHeat(x,y)) -> CausesWaterToEvaporateMoreQuickly(x,y))", "score": 0}
{"id": "eqasc_train_1703", "prediction": "all x y.((Day(x) & Earth(y)) -> HeatedBySun(y,x))", "score": 0}
{"id": "eqasc_train_1704", "prediction": "all x y.((Day(x) & Night(y)) -> WaterEvaporatesMoreQuickly(x,y))", "score": 0}
{"id": "eqasc_train_1705", "prediction": "all x y.((Sun(x) & Water(y) & Heats(x,y)) -> ChangesToGas(x))", "score": 0}
{"id": "eqasc_train_1706", "prediction": "all x y.((Sun(x) & Water(y)) -> ChangesToGasByAddition(x,y))", "score": 0}
{"id": "eqasc_train_1707", "prediction": "all x.(Evaporation(x) -> ChangeOfLiquidWaterToVapor(x))", "score": 0}
{"id": "eqasc_train_1708", "prediction": "all x y.((Heat(x) & Water(y)) -> TurnsIntoVapor(x,y))", "score": 0}
{"id": "eqasc_train_1709", "prediction": "all x y z.((Energy(x) & Sun(y) & Ocean(z)) -> EvaporatesWaterToMakeClouds(x,y,z))", "score": 0}
{"id": "eqasc_train_1710", "prediction": "all x.(Cloud(x) -> (MadeFromOceanWater(x) & PowerOfSunlight(x)))", "score": 0}
{"id": "eqasc_train_1711", "prediction": "all x.(Energy(x) -> UsedToEvaporateWater(x))", "score": 0}
{"id": "eqasc_train_1712", "prediction": "all x.(Sun(x) -> ProvidesEnergy(x))", "score": 0}
{"id": "eqasc_train_1713", "prediction": "all x y.((Sun(x) & Heat(y)) -> CreatesVaporMoreQuickly(x,y))", "score": 0}
{"id": "eqasc_train_1714", "prediction": "all x.(IceCrystal(x) -> ResistsEvaporation(x))", "score": 0}
{"id": "eqasc_train_1715", "prediction": "all x.(IceCrystal(x) -> ResistsSunHeat(x))", "score": 0}
{"id": "eqasc_train_1716", "prediction": "all x.(WarmFront(x) -> (CausesCloudyWeather(x) & CausesRainyWeather(x)))", "score": 0}
{"id": "eqasc_train_1717", "prediction": "all x.((WarmAir(x) & ColdAirArea(x)) -> WarmFront(x))", "score": 0}
{"id": "eqasc_train_1718", "prediction": "all x y.((WarmAir(x) & ColdAir(y)) -> (CausesCloudyWeather(x) & CausesRainyWeather(x)))", "score": 0}
{"id": "eqasc_train_1719", "prediction": "all x.((WarmAir(x) & ColdAir(x)) -> WarmFront(x))", "score": 0}
{"id": "eqasc_train_1720", "prediction": "all x y.((WarmAir(x) & ColdAir(y)) -> (AdvancesOn(x,y) & CloudyAndRainyWeather(x)))", "score": 0}
{"id": "eqasc_train_1721", "prediction": "all x y.((Wind(x) & Sky(y) & Passes(x)) -> (Calm(x) & Clear(y) & PartiallyCloudy(y)))", "score": 0}
{"id": "eqasc_train_1722", "prediction": "all x.(WarmFront(x) -> CausesStorms(x))", "score": 0}
{"id": "eqasc_train_1723", "prediction": "all x y.((WarmAir(x) & ColdAir(y)) -> (CausesCloudyWeather(x) & CausesRainyWeather(x)))", "score": 0}
{"id": "eqasc_train_1724", "prediction": "all x.((AnnualDesertPlant(x) & RainyYear(x)) -> GerminatesGrowsAndFlowsQuickly(x))", "score": 0}
{"id": "eqasc_train_1725", "prediction": "all x y.((WetWeather(x) & Plant(y)) -> HelpsGerminate(x,y))", "score": 0}
{"id": "eqasc_train_1726", "prediction": "all x.(StratusCloud(x) -> WarmFront(x))", "score": 0}
{"id": "eqasc_train_1727", "prediction": "all x.(StratusCloud(x) -> (CloudyWeather(x) & RainyWeather(x)))", "score": 0}
{"id": "eqasc_train_1728", "prediction": "all x.(Hormone(x) -> (ChemicalMessager(x) & ControlsManyBodyFunctions(x)))", "score": 0}
{"id": "eqasc_train_1729", "prediction": "all x.(SteroidHormone(x) -> LongestActingHormone(x))", "score": 0}
{"id": "eqasc_train_1730", "prediction": "all x.(Steroid(x) -> (ChemicalMessager(x) & ControlsManyBodyFunctions(x)))", "score": 0}
{"id": "eqasc_train_1731", "prediction": "all x.(HormonalImbalance(x) -> CausesDepression(x))", "score": 0}
{"id": "eqasc_train_1732", "prediction": "all x.((ChemicalMessenger(x) & ControlBodyFunctions(x)) -> CausesDepression(x))", "score": 0}
{"id": "eqasc_train_1733", "prediction": "all x.(Vitamin(x) -> (Catalyst(x) & InChemicalReactions(x)))", "score": 0}
{"id": "eqasc_train_1734", "prediction": "all x.(Hormone(x) -> (ChemicalMessenger(x) & Catalyst(x) & InBody(x)))", "score": 0}
{"id": "eqasc_train_1735", "prediction": "all x.(Neurotransmitter(x) -> ChemicalMessenger(x))", "score": 0}
{"id": "eqasc_train_1736", "prediction": "all x y.((Hormone(x) & Neurotransmitter(y)) -> (BehavesInCommonWeapons(x,y) & BehavesInCommonWeapons(x,y)))", "score": 0}
{"id": "eqasc_train_1737", "prediction": "all x.(GrowthHydrogen(x) -> AntiAgingHydrogen(x))", "score": 0}
{"id": "eqasc_train_1738", "prediction": "all x y.((ChemicalMessager(x) & AntiAging(y)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_train_1739", "prediction": "(SlowsBodyFunctions(SlowsBreathing(SlowsHeartRate(SlowsBreathing(SlowsBreathing(SlowsBreathing(SlowsHeartRate))", "score": -1}
{"id": "eqasc_train_1740", "prediction": "all x.(Hydrogens(x) -> ControlsHeartRate(x))", "score": 0}
{"id": "eqasc_train_1741", "prediction": "all x.(Hormone(x) -> FunctionalClassOfChemicals(x))", "score": 0}
{"id": "eqasc_train_1742", "prediction": "all x.(Hormone(x) -> FunctionalMessenger(x))", "score": 0}
{"id": "eqasc_train_1743", "prediction": "exists x.(Hydrogen(x) & Protein(x))", "score": 0}
{"id": "eqasc_train_1744", "prediction": "all x.((ChemicalMessager(x) & ControlsBodyFunctions(x)) -> Protein(x))", "score": 0}
{"id": "eqasc_train_1745", "prediction": "all x.(BodyFunction(x) -> Interrelated(x))", "score": 0}
{"id": "eqasc_train_1746", "prediction": "all x.(Hydrogen(x) -> Interrelated(x))", "score": 0}
{"id": "eqasc_train_1747", "prediction": "all x y.((Hormone(x) & EndocrineSystem(y)) -> (Produced(x,y) & Released(x,y)))", "score": 0}
{"id": "eqasc_train_1748", "prediction": "all x y.((EndocrineSystem(x) & ChemicalMessenger(y)) -> Releases(x,y))", "score": 0}
{"id": "eqasc_train_1749", "prediction": "all x y.((Soil(x) & Looseness(x)) -> PositiveImpactOnRootsGrowth(y))", "score": 0}
{"id": "eqasc_train_1750", "prediction": "all x.(Mulch(x) -> (HelpsToKeepSoilSurfacesLoose(x) & ReceptiveToWaterAbsorption(x)))", "score": 0}
{"id": "eqasc_train_1751", "prediction": "all x.((Soil(x) & ReceptiveToWaterAbsorption(x)) -> PositiveImpactOnRootsGrowth(x))", "score": 0}
{"id": "eqasc_train_1752", "prediction": "all x.((RootGrowth(x) & PlantGrowth(x)) -> ExtremelyImportantToGrowth(x))", "score": 0}
{"id": "eqasc_train_1753", "prediction": "all x.(LooseSoil(x) -> HelpsPlantsGrow(x))", "score": 0}
{"id": "eqasc_train_1754", "prediction": "all x.((AirExchange(x) & RootZone(x)) -> EssentialForRootGrowth(x))", "score": 0}
{"id": "eqasc_train_1755", "prediction": "all x.(LooseSoil(x) -> (IncreasedAirExchange(x) & EssentialForPlants(x)))", "score": 0}
{"id": "eqasc_train_1756", "prediction": "all x.(Root(x) -> GathersPlantNutrients(x))", "score": 0}
{"id": "eqasc_train_1757", "prediction": "all x.(LoosenessOfSoil(x) -> PositiveImpactOnPlantNutrients(x))", "score": 0}
{"id": "eqasc_train_1758", "prediction": "all x.(DeepBurrowingEarthworm(x) -> (ImprovesSoilPorosity(x) & ImprovesWaterMovement(x) & ImprovesPlantRootGrowth(x)))", "score": 0}
{"id": "eqasc_train_1759", "prediction": "all x.(DeepBurrowingEarthworm(x) -> ImprovesLoosenessOfSoilForRootGrowth(x))", "score": 0}
{"id": "eqasc_train_1760", "prediction": "all x.((BabyPlant(x) & LargeRoots(x)) -> GrowsFaster(x))", "score": 0}
{"id": "eqasc_train_1761", "prediction": "all x y.((SoilLooseness(x) & BabyPlant(y)) -> PositiveImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_1762", "prediction": "all x.(SandySoil(x) -> (FeltsGritty(x) & FeelsLoose(x)))", "score": 0}
{"id": "eqasc_train_1763", "prediction": "all x.((Plant(x) & SandySoil(x)) -> BeneficialRootGrowth(x))", "score": 0}
{"id": "eqasc_train_1764", "prediction": "all x.(TreeRoot(x) -> (StabilizesSoil(x) & PreventsSoilErosion(x)))", "score": 0}
{"id": "eqasc_train_1765", "prediction": "all x.(Tree(x) -> MakesSoilStable(x))", "score": 0}
{"id": "eqasc_train_1766", "prediction": "all x.(Root(x) -> (BasicToGrowth(x) & BasicToDevelopment(x) & BasicToExpansion(x)))", "score": 0}
{"id": "eqasc_train_1767", "prediction": "all x.(LooseSoil(x) -> (HelpsPlantGrow(x) & HelpsPlantDevelop(x) & HelpsPlantExpand(x)))", "score": 0}
{"id": "eqasc_train_1768", "prediction": "all x.((SoilLoose(x) | Wet(x)) -> EasyPull(x))", "score": 0}
{"id": "eqasc_train_1769", "prediction": "all x.((Plant(x) & SoilWet(x)) -> RootsGrowthInSoilEasilyPulled(x))", "score": 0}
{"id": "eqasc_train_1770", "prediction": "all x.(Pinions(x) -> (ToleratesDroughtAndAlkalineSoil(x) & PrefersLooseAndWellDrainedSoils(x)))", "score": 0}
{"id": "eqasc_train_1771", "prediction": "all x y.((WellDrainedSoil(x) & Plant(y)) -> PositiveImpactOnRootsGrowth(x,y))", "score": 0}
{"id": "eqasc_train_1772", "prediction": "all x.(FertileSoil(x) -> (Loose(x) & Absorbent(x) & PleasantSmelling(x)))", "score": 0}
{"id": "eqasc_train_1773", "prediction": "all x y.((PlantRoots(x) & FertileSoil(y)) -> PositivelyImpactsGrowth(x,y))", "score": 0}
{"id": "eqasc_train_1774", "prediction": "all x.((TopDressing(x) & (Dirt(x) | Compost(x))) -> ImprovesSoil(x))", "score": 0}
{"id": "eqasc_train_1775", "prediction": "all x y.((LoosenessOfDirtOrCompost(x) & Plant(y)) -> PositiveImpactOnRootsGrowth(x,y))", "score": 0}
{"id": "eqasc_train_1776", "prediction": "all x.(Root(x) -> (Vines(x) & Arteries(x)))", "score": 0}
{"id": "eqasc_train_1777", "prediction": "all x y.((Soil(x) & Plant(y) & Loose(x)) -> PositiveImpactOnVinesAndArteriesGrowth(x,y))", "score": 0}
{"id": "eqasc_train_1778", "prediction": "all x.(Orchid(x) -> RewardsIndoorPlants(x))", "score": 0}
{"id": "eqasc_train_1779", "prediction": "all x y.((SoilLooseness(x) & Orchid(y)) -> PositiveImpactOnRootGrowth(x,y))", "score": 0}
{"id": "eqasc_train_1780", "prediction": "all x.((Soil(x) | Dirt(x)) -> (HighInSilica(x) & HighInAluminum(x)))", "score": 0}
{"id": "eqasc_train_1781", "prediction": "all x.(LoosenessOfDirt(x) -> PositiveImpactOnRootsGrowth(x))", "score": 0}
{"id": "eqasc_train_1782", "prediction": "all x.(Glucose(x) -> UsedForEnergy(x))", "score": 0}
{"id": "eqasc_train_1783", "prediction": "all x.(HumanMuscleCell(x) -> ProducesEnergyForContractionFromGlucose(x))", "score": 0}
{"id": "eqasc_train_1784", "prediction": "all x.(Human(x) -> ReceivesEnergyFromGlucose(x))", "score": 0}
{"id": "eqasc_train_1785", "prediction": "all x.(Food(x) -> ConvertedToGlucose(x))", "score": 0}
{"id": "eqasc_train_1786", "prediction": "all x y.((Organism(x) & Food(y)) -> UsedForEnergy(y,x))", "score": 0}
{"id": "eqasc_train_1787", "prediction": "all x.(Glucose(x) -> Sugar(x))", "score": 0}
{"id": "eqasc_train_1788", "prediction": "all x y.((Sugar(x) & Organism(y)) -> UsedForEnergy(x,y))", "score": 0}
{"id": "eqasc_train_1789", "prediction": "All x.(BloodSugarGlucose(x) -> Sugar(x))", "score": -1}
{"id": "eqasc_train_1790", "prediction": "all x y.((BloodSugar(x) & Organism(y)) -> UsedForEnergyByCells(x,y))", "score": 0}
{"id": "eqasc_train_1791", "prediction": "all x y.((Food(x) & Organism(y)) -> UsedForEnergyByCells(x,y))", "score": 0}
{"id": "eqasc_train_1792", "prediction": "all x.(Glucose(x) -> ConvertedToGlucose(x))", "score": 0}
{"id": "eqasc_train_1793", "prediction": "all x y.((ConvertedSugar(x) & Organism(y)) -> UsedForEnergyByCells(x,y))", "score": 0}
{"id": "eqasc_train_1794", "prediction": "all x y.((Food(x) & Cell(y)) -> ConvertedToEnergy(x,y))", "score": 0}
{"id": "eqasc_train_1795", "prediction": "all x y.((Sugar(x) & Organism(y)) -> UsedForEnergyByCells(x,y))", "score": 0}
{"id": "eqasc_train_1796", "prediction": "all x.(Sugar(x) -> UsedForEnergy(x))", "score": 0}
{"id": "eqasc_train_1797", "prediction": "all x.(GlucoseMetabolism(x) -> (UsesGlucose(x) | StoresGlucose(x)))", "score": 0}
{"id": "eqasc_train_1798", "prediction": "all x.(Cell(x) -> StoresGlucose(x))", "score": 0}
{"id": "eqasc_train_1799", "prediction": "all x.((Carbohydrate(x) & EnergyFromCarbohydrates(x)) -> ConvertedToGlucose(x))", "score": 0}
{"id": "eqasc_train_1800", "prediction": "all x.(Carbohydrate(x) -> ConvertedToGlucose(x))", "score": 0}
{"id": "eqasc_train_1801", "prediction": "all x.((HoursOfNoGlucoseIngestion(x) & FatsAndProteins(x)) -> CanBeUsedForEnergy(x))", "score": 0}
{"id": "eqasc_train_1802", "prediction": "all x y.((Fat(x) & Protein(y)) -> (UsedForEnergy(x,y) & UsedForEnergy(x,y)))", "score": 0}
{"id": "eqasc_train_1803", "prediction": "all x.((Glucose(x) & BodyUsesForFuel(x)) -> StoredAsGlycogen(x))", "score": 0}
{"id": "eqasc_train_1804", "prediction": "all x.(Sugar(x) -> UsedForEnergy(x))", "score": 0}
{"id": "eqasc_train_1805", "prediction": "all x.(Cell(x) -> (ProgrammedToDivide(x) & SetNumberOfTimes(x)))", "score": 0}
{"id": "eqasc_train_1806", "prediction": "all x.(ViroMedCell(x) -> PassedLimitedNumberOfTimes(x))", "score": 0}
{"id": "eqasc_train_1807", "prediction": "all x.(Cell(x) -> LimitedNumberOfDivides(x))", "score": 0}
{"id": "eqasc_train_1808", "prediction": "all x.(Mitosis(x) -> (Division(x) & CellsDivision(x)))", "score": 0}
{"id": "eqasc_train_1809", "prediction": "all x y.((Cell(x) & Mitosis(y)) -> ProgrammedToGoThrough(x,y))", "score": 0}
{"id": "eqasc_train_1810", "prediction": "all x.(Apoptosis(x) -> ProgramedCellDeath(x))", "score": 0}
{"id": "eqasc_train_1811", "prediction": "all x.(Dividend(x) -> exists y.(Time(y) & Happens(x,y))))", "score": -1}
{"id": "eqasc_train_1812", "prediction": "all x.(CellDividend(x) -> Mitosis(x))", "score": 0}
{"id": "eqasc_train_1813", "prediction": "all x.(Mitosis(x) -> OccursSetNumberOfTimes(x))", "score": 0}
{"id": "eqasc_train_1814", "prediction": "all x.(Cell(x) -> (ReproducesAsexually(x) & ByDividing(x)))", "score": 0}
{"id": "eqasc_train_1815", "prediction": "all x.(Cell(x) -> ReproducesOnly(x))", "score": 0}
{"id": "eqasc_train_1816", "prediction": "all x.(Cell(x) -> (ProgrammedToReproduce(x) & SetNumberOfTimes(x)))", "score": 0}
{"id": "eqasc_train_1817", "prediction": "all x.(Parts(x) -> HasDivision(x))", "score": 0}
{"id": "eqasc_train_1818", "prediction": "all x.(Cell(x) -> (ProgrammedToSplitIntoParts(x) & SetNumberOfTimes(x)))", "score": 0}
{"id": "eqasc_train_1819", "prediction": "all x.(EggCell(x) -> DividesIntoManyCells(x))", "score": 0}
{"id": "eqasc_train_1820", "prediction": "all x.(EggCell(x) -> PerformsDividence(x))", "score": 0}
{"id": "eqasc_train_1821", "prediction": "all x y.((Cell(x) & NumberOfTimes(y)) -> (Division(x,y) & Apoptosis(x)))", "score": 0}
{"id": "eqasc_train_1822", "prediction": "all x.(Roundworm(x) -> MakesUpPhylumNematoda(x))", "score": 0}
{"id": "eqasc_train_1823", "prediction": "all x.((Puppies(x) | Kittens(x)) -> HasRoundworms(x))", "score": 0}
{"id": "eqasc_train_1824", "prediction": "all x.(Nematoda(x) -> InfestsPuppiesAndKittens(x))", "score": 0}
{"id": "eqasc_train_1825", "prediction": "all x.(Nematoda(x) -> exists y.(ReproductiveSystem(y) & Within(x,y)))", "score": 0}
{"id": "eqasc_train_1826", "prediction": "all x y.((Roundworm(x) & Roundworm(y)) -> (ReproductiveSystem(x,y) | ReproductiveSystem(x,y)))", "score": 0}
{"id": "eqasc_train_1827", "prediction": "all x.((Nematoda(x) | Rotifera(x)) -> ContributesToSoils(x))", "score": 0}
{"id": "eqasc_train_1828", "prediction": "all x.(Roundworm(x) -> MakesImportantContributionsToSoils(x))", "score": 0}
{"id": "eqasc_train_1829", "prediction": "all x.(RangeOfReproductiveSystems(x) -> OccursInRoundworms(x))", "score": 0}
{"id": "eqasc_train_1830", "prediction": "all x.(Roundworm(x) -> ContributesToSoils(x))", "score": 0}
{"id": "eqasc_train_1831", "prediction": "all x.(Turtle(x) -> HasRoundworms(x))", "score": 0}
{"id": "eqasc_train_1832", "prediction": "all x.(Turtle(x) -> InfectedWithNematoda(x))", "score": 0}
{"id": "eqasc_train_1833", "prediction": "all x.(Nematode(x) -> MicroscopicalRoundworm(x))", "score": 0}
{"id": "eqasc_train_1834", "prediction": "all x y.((Nematode(x) & Phylum(y)) -> MakesUp(x,y))", "score": 0}
{"id": "eqasc_train_1835", "prediction": "all x y.((Roundworm(x) & Soil(y)) -> ContributesTo(x,y))", "score": 0}
{"id": "eqasc_train_1836", "prediction": "all x.(Roundworm(x) -> CompleteDigestiveTracks(x))", "score": 0}
{"id": "eqasc_train_1837", "prediction": "all x.(Nematoda(x) -> CompleteDigestiveTracks(x))", "score": 0}
{"id": "eqasc_train_1838", "prediction": "all x.(Nematode(x) -> (MicroscopicWworm(x) & ApartFromPhylumNematoda(x)))", "score": 0}
{"id": "eqasc_train_1839", "prediction": "all x.(Nematode(x) -> SimpleRoundworm(x))", "score": 0}
{"id": "eqasc_train_1840", "prediction": "all x.(Nematode(x) -> InPhylumNematoda(x))", "score": 0}
{"id": "eqasc_train_1841", "prediction": "all x y.((Toaster(x) & ElectricalEnergy(y)) -> ConvertsToHeatEnergy(x,y))", "score": 0}
{"id": "eqasc_train_1842", "prediction": "all x y.((ElectricGenerator(x) & Toaster(y)) -> CanCreateEnergy(x,y))", "score": 0}
{"id": "eqasc_train_1843", "prediction": "all x y.((HeatingCoil(x) & Toaster(y)) -> Requires120VAC(x,y))", "score": 0}
{"id": "eqasc_train_1844", "prediction": "all x.(HeatingCoil(x) -> ConvertsElectricalEnergyToHeatEnergy(x))", "score": 0}
{"id": "eqasc_train_1845", "prediction": "all x.((Energy(x) & People(x)) -> (UsedForHeating(x) | UsedForLighting(x) | UsedForCooking(x)))", "score": 0}
{"id": "eqasc_train_1846", "prediction": "all x.(Toaster(x) -> (ConvertsElectricalEnergy(x) & LightsAndCooks(x)))", "score": 0}
{"id": "eqasc_train_1847", "prediction": "all x.(Heat(x) -> Temperature(x))", "score": 0}
{"id": "eqasc_train_1848", "prediction": "all x.(Toaster(x) -> (ConvertsElectricalEnergyToIncreasedTemperature(x) & Toasting(x)))", "score": 0}
{"id": "eqasc_train_1849", "prediction": "all x.(ToastingBread(x) -> (Sweeter(x) & Crunchier(x)))", "score": 0}
{"id": "eqasc_train_1850", "prediction": "all x y z.((Toaster(x) & ElectricalEnergy(y) & HeatEnergy(z)) -> ConvertsToMakeBreadSweeterAndCruncherier(x,y,z))", "score": 0}
{"id": "eqasc_train_1851", "prediction": "all x.(ToastingBread(x) -> CreatesCarcinogens(x))", "score": 0}
{"id": "eqasc_train_1852", "prediction": "all x.(ElectricalEnergy(x) -> CanCreateCarcinogens(x))", "score": 0}
{"id": "eqasc_train_1853", "prediction": "all x.(Heat(x) -> (Energy(x) & MeasurableInJules(x)))", "score": 0}
{"id": "eqasc_train_1854", "prediction": "all x.(Toaster(x) -> (ConvertsElectricalEnergyToJules(x) & Toasts(x)))", "score": 0}
{"id": "eqasc_train_1855", "prediction": "all x.(Toast(x) -> BornOfBread(x))", "score": 0}
{"id": "eqasc_train_1856", "prediction": "all x y z.((ElectricalEnergy(x) & HeatEnergy(y) & Bread(z)) -> ConvertedToToCook(x,y,z))", "score": 0}
{"id": "eqasc_train_1857", "prediction": "all x y.((Toaster(x) & ElectricalEnergy(y)) -> ConvertsToKineticEnergy(x,y))", "score": 0}
{"id": "eqasc_train_1858", "prediction": "all x.(Annelid(x) -> (worm(x) & Earthworm(x)))", "score": 0}
{"id": "eqasc_train_1859", "prediction": "all x.(Annelid(x) -> HasSegmentedBody(x))", "score": 0}
{"id": "eqasc_train_1860", "prediction": "all x.(Wworm(x) -> (HasBodySegmented(x) & HasBodySegmented(x)))", "score": 0}
{"id": "eqasc_train_1861", "prediction": "all x.(Mole(x) -> EatsEarthworms(x))", "score": 0}
{"id": "eqasc_train_1862", "prediction": "all x y.((Mole(x) & Annelid(y)) -> Eats(x,y))", "score": 0}
{"id": "eqasc_train_1863", "prediction": "all x.(Earthworm(x) -> (TrunkForPlants(x) & FantasticForSoil(x)))", "score": 0}
{"id": "eqasc_train_1864", "prediction": "all x.(Annelid(x) -> FantasticForPlants(x))", "score": 0}
{"id": "eqasc_train_1865", "prediction": "all x.(Wworm(x) -> SegmentedBody(x))", "score": 0}
{"id": "eqasc_train_1866", "prediction": "all x.(Earthworm(x) -> SegmentedBody(x))", "score": 0}
{"id": "eqasc_train_1867", "prediction": "all x.(Annelid(x) -> (Earthworm(x) | Leeches(x)))", "score": 0}
{"id": "eqasc_train_1868", "prediction": "all x.(Leeches(x) -> Worm(x))", "score": 0}
{"id": "eqasc_train_1869", "prediction": "all x.(Earthworm(x) -> InvalubleForSoilHealth(x))", "score": 0}
{"id": "eqasc_train_1870", "prediction": "all x.(Annelid(x) -> (ImportantForSoilHealth(x) & InvaluableForSoilHealth(x)))", "score": 0}
{"id": "eqasc_train_1871", "prediction": "all x.(Earthworm(x) -> Segmented(x))", "score": 0}
{"id": "eqasc_train_1872", "prediction": "all x.((Worm(x) & Earthworm(x)) -> Segmented(x))", "score": 0}
{"id": "eqasc_train_1873", "prediction": "all x.(Earthworm(x) -> SegmentedBody(x))", "score": 0}
{"id": "eqasc_train_1874", "prediction": "all x.(Earthworm(x) -> HasFiveHearts(x))", "score": 0}
{"id": "eqasc_train_1875", "prediction": "all x.((Animal(x) & HasFiveHearts(x)) -> Anannelid(x))", "score": 0}
{"id": "eqasc_train_1876", "prediction": "all x.(Earthworm(x) -> (HasBodySegmented(x) & Segmented(x)))", "score": 0}
{"id": "eqasc_train_1877", "prediction": "all x.(Annelid(x) -> (AbsoluteCapacityToRegrowSegments(x) & BreakOffSegments(x)))", "score": 0}
{"id": "eqasc_train_1878", "prediction": "EarthwormJim, greatestSoilMunchinsAnnelidFansiteRelocated(EarthwormJim)", "score": -1}
{"id": "eqasc_train_1879", "prediction": "all x.(Earthworm(x) -> (SoilEating(x) & RegrowSegments(x) & BreakOff(x)))", "score": 0}
{"id": "eqasc_train_1880", "prediction": "all x.(Earthworm(x) -> InPhylumAnnelids(x))", "score": 0}
{"id": "eqasc_train_1881", "prediction": "all x.(Earthworm(x) -> (AbsoluteCapacityToRegrowSegments(x) & BreakOffSegments(x)))", "score": 0}
{"id": "eqasc_train_1882", "prediction": "all x.((Jellyfish(x) | Flatworm(x) | AnnelidWworm(x)) -> ModernExample(x))", "score": 0}
{"id": "eqasc_train_1883", "prediction": "all x.(Jellyfish(x) -> CanRegrowSegments(x))", "score": 0}
{"id": "eqasc_train_1884", "prediction": "all x y.((Earthworm(x) & Segment(y)) -> (Regrows(x,y) & BreaksOff(y)))", "score": 0}
{"id": "eqasc_train_1885", "prediction": "all x y.((Earthworm(x) & Segment(y)) -> Regrows(x,y))", "score": 0}
{"id": "eqasc_train_1886", "prediction": "all x.(Earthworm(x) -> (AbsoluteCapacityToRegrowSegments(x) & BreakOffSegments(x)))", "score": 0}
{"id": "eqasc_train_1887", "prediction": "all x.(Leeches(x) -> (AbsoluteCapacityToRegrowSegments(x) & BreakOffSegments(x)))", "score": 0}
{"id": "eqasc_train_1888", "prediction": "all x.(Earthworm(x) -> RegrowSegments(x))", "score": 0}
{"id": "eqasc_train_1889", "prediction": "all x.(Earthworm(x) -> RegrowsBreakenedOffSegments(x))", "score": 0}
{"id": "eqasc_train_1890", "prediction": "all x.(Leeches(x) -> (RegrowSegments(x) & BreakOffSegments(x)))", "score": 0}
{"id": "eqasc_train_1891", "prediction": "all x.(Annelid(x) -> ClosedCirculatorySystems(x))", "score": 0}
{"id": "eqasc_train_1892", "prediction": "all x.((Animal(x) & Segmented(x)) -> CanClosedCirculatorySystems(x))", "score": 0}
{"id": "eqasc_train_1893", "prediction": "all x y z.((AirMass(x) & EarthSurface(y) & Movement(z) & Over(z)) -> CausesWeatherChanges(x,y,z))", "score": 0}
{"id": "eqasc_train_1894", "prediction": "all x y.((Mountain(x) & IncomingAirMass(y) & Strike(x,y)) -> MakesOwnWeather(x,y))", "score": 0}
{"id": "eqasc_train_1895", "prediction": "all x.(Mountain(x) -> (InfluencesLocalWeatherChanges(x) & MakesOwnWeather(x)))", "score": 0}
{"id": "eqasc_train_1896", "prediction": "all x.(Earth(x) -> Planet(x))", "score": 1}
{"id": "eqasc_train_1897", "prediction": "all x y.((AirMass(x) & PlanetSurface(y) & MovesOver(x,y)) -> CausesWeatherChanges(x,y))", "score": 0}
{"id": "eqasc_train_1898", "prediction": "all x.((AirMass(x) & Meets(x)) -> FrontFormation(x))", "score": 0}
{"id": "eqasc_train_1899", "prediction": "all x.((Front(x) & LocalWeatherChange(x)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_train_1900", "prediction": "all x.(Weather(x) -> ConditionOfAtmosphere(x))", "score": 0}
{"id": "eqasc_train_1901", "prediction": "all x y.((AirMass(x) & EarthSurface(y)) -> CausesLocalChanges(x,y))", "score": 0}
{"id": "eqasc_train_1902", "prediction": "all x.(Weather(x) -> MeasurableChangeInAtmosphere(x))", "score": 0}
{"id": "eqasc_train_1903", "prediction": "all x y z.((AirMass(x) & EarthSurface(y) & Movement(x,y)) -> ChangesAtmosphere(x,z))", "score": 0}
{"id": "eqasc_train_1904", "prediction": "all x.(AirMassMovement(x) -> InfluencedByMountainBarriers(x))", "score": 0}
{"id": "eqasc_train_1905", "prediction": "all x.(MountainBarrier(x) -> InfluencesLocalWeatherChanges(x))", "score": 0}
{"id": "eqasc_train_1906", "prediction": "all x.(AirMassBoundaries(x) -> FrontalZone(x))", "score": 0}
{"id": "eqasc_train_1907", "prediction": "all x y z.((MovementFrontalZones(x) & EarthSurface(y) & EarthSurface(z)) -> CausesLocalWeatherChanges(x,y,z))", "score": 0}
{"id": "eqasc_train_1908", "prediction": "all x.((Earth(x) & RockyWorld(x)) -> (Alive(x) & Active(x)))", "score": 0}
{"id": "eqasc_train_1909", "prediction": "all x y z.((AirMass(x) & Surface(y) & Movement(z) & Over(x,y)) -> CausesWeatherChanges(x,y))", "score": 0}
{"id": "eqasc_train_1910", "prediction": "all x.(Weather(x) -> AffectsDistributionLocally(x))", "score": 0}
{"id": "eqasc_train_1911", "prediction": "all x y.((AirMass(x) & AirMass(y)) -> (AffectsDistributionLocally(x,y) | AffectsDistributionLocally(x,y)))", "score": 0}
{"id": "eqasc_train_1912", "prediction": "all x.((Altitude(x) & WeatherSystem(x)) -> ChangesAirPressure(x))", "score": 0}
{"id": "eqasc_train_1913", "prediction": "all x y.((AirMovement(x) & AirPressure(y)) -> CausesDifferences(x,y))", "score": 0}
{"id": "eqasc_train_1914", "prediction": "all x.((SevereWeatherPattern(x) & HighWinds(x)) -> LocalizedDamage(x))", "score": 0}
{"id": "eqasc_train_1915", "prediction": "all x y.((AirMass(x) & AirMass(y)) -> CausesLocalizedDamage(x,y))", "score": 0}
{"id": "eqasc_train_1916", "prediction": "all x.(Front(x) -> DefinesBoundariesBetweenAirMasses(x))", "score": 0}
{"id": "eqasc_train_1917", "prediction": "all x y.((Front(x) & WeatherChange(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_train_1918", "prediction": "exists x.(Animal(x) & FurGrowsThickerForWarmInWinter(x))", "score": 0}
{"id": "eqasc_train_1919", "prediction": "all x.(Mammal(x) -> (Animal(x) & (BirthWithFur(x) | BornWithHair(x))))", "score": 0}
{"id": "eqasc_train_1920", "prediction": "all x.(Mammal(x) -> (BirthWithFur(x) & GrowsThickerForWarmth(x)))", "score": 0}
{"id": "eqasc_train_1921", "prediction": "all x.((HollowFur(x) & Winter(x)) -> AbsorbsHeatAsSun(x))", "score": 0}
{"id": "eqasc_train_1922", "prediction": "all x y.((HollowFur(x) & Animal(y)) -> KeepsWarm(x,y))", "score": 0}
{"id": "eqasc_train_1923", "prediction": "all x.(FurSeal(x) -> (GrowsThickUndercoat(x) & Insulation(x)))", "score": 0}
{"id": "eqasc_train_1924", "prediction": "all x.(FurSeal(x) -> StaysWarmInWinter(x))", "score": 0}
{"id": "eqasc_train_1925", "prediction": "all x.((AnimalFur(x) & Thicker(x) & Abundant(x)) -> WinterMonths(x))", "score": 0}
{"id": "eqasc_train_1926", "prediction": "all x.((AnimalFur(x) & Winter(x)) -> AbundantForWarmth(x))", "score": 0}
{"id": "eqasc_train_1927", "prediction": "all x.((Temperature(x) & Winter(x)) -> CanBeBrutal(x))", "score": 0}
{"id": "eqasc_train_1928", "prediction": "all x y.((Animal(x) & Fur(y)) -> KeepsSafeFromBrutalTemperatures(x,y))", "score": 0}
{"id": "eqasc_train_1929", "prediction": "all x.(PolarBear(x) -> GrowsFurToSurviveInCold(x))", "score": 0}
{"id": "eqasc_train_1930", "prediction": "all x.(PolarBear(x) -> (HasThickFur(x) & StaysWarmInWinter(x)))", "score": 0}
{"id": "eqasc_train_1931", "prediction": "all x.(Mammal(x) -> (HasHair(x) & HasFur(x)))", "score": 0}
{"id": "eqasc_train_1932", "prediction": "exists x.(Animal(x) & GrowsThicker(x) & StaysWarmInWinter(x))", "score": 0}
{"id": "eqasc_train_1933", "prediction": "all x.(AlpacaFur(x) -> SoftestFur(x))", "score": 0}
{"id": "eqasc_train_1934", "prediction": "all x.(Alpaca(x) -> KeepsWarmNaturallyInWinter(x))", "score": 0}
{"id": "eqasc_train_1935", "prediction": "all x.(Mammal(x) -> HasFur(x))", "score": 0}
{"id": "eqasc_train_1936", "prediction": "all x.(Mammal(x) -> UsesFurToStayWarm(x))", "score": 0}
{"id": "eqasc_train_1937", "prediction": "(all x.(Winter(x) -> Snow(x)) & all y.(Winter(y) -> Christmas(y)))", "score": 0}
{"id": "eqasc_train_1938", "prediction": "all x y.((Animal(x) & NorthernHemisphere(y)) -> GrowsThickerForWarm(x,y))", "score": 0}
{"id": "eqasc_train_1939", "prediction": "all x.(Mammal(x) -> (WarmBlooded(x) & (CoveredWithHair(x) | CoveredWithFur(x))))", "score": 0}
{"id": "eqasc_train_1940", "prediction": "exists x.(Animal(x) & WarmBlooded(x) & StaysWarmInWinter(x))", "score": 0}
{"id": "eqasc_train_1941", "prediction": "all x.(Winter(x) -> ColdestSeason(x))", "score": 0}
{"id": "eqasc_train_1942", "prediction": "exists x.(Animal(x) & FurGrowsThickerForWarmInColdestSeason(x))", "score": 0}
{"id": "eqasc_train_1943", "prediction": "all x y.((Habitat(x) & Animal(y) & CannotSupport(x,y)) -> MovesToAnotherArea(x))", "score": 0}
{"id": "eqasc_train_1944", "prediction": "all x.(Shelter(x) -> (FourthRequirement(x) & FinalRequirement(x)))", "score": 0}
{"id": "eqasc_train_1945", "prediction": "all x.((Shelter(x) & -SupportsAnimals(x)) -> AnimalsMove(x))", "score": 0}
{"id": "eqasc_train_1946", "prediction": "all x.(HabitatDestruction(x) -> MajorThreatToWildfowl(x))", "score": 0}
{"id": "eqasc_train_1947", "prediction": "all x.((Wildfowl(x) & TerritoriesDestroyed(x)) -> MovesToArea(x,y))", "score": 0}
{"id": "eqasc_train_1948", "prediction": "all x y.((Fire(x) & Koala(y)) -> BurntHabitat(x,y))", "score": 0}
{"id": "eqasc_train_1949", "prediction": "all x y.((Koala(x) & Fire(y) & ImpactedBy(x,y)) -> MovesToArea(x,y))", "score": 0}
{"id": "eqasc_train_1950", "prediction": "all x.((Habitat(x) & -SupportsHumans(x)) -> MovesToAnotherArea(x))", "score": 0}
{"id": "eqasc_train_1951", "prediction": "all x.(Habitat(x) -> (DestroyedForAgriculture(x)))", "score": 0}
{"id": "eqasc_train_1952", "prediction": "all x y z.((Animal(x) & Animal(y) & Area(z) & HomeArea(y)) -> MovesToArea(x,y,z))", "score": 0}
{"id": "eqasc_train_1953", "prediction": "all x.(Bear(x) -> PowerfulAnimal(x))", "score": 0}
{"id": "eqasc_train_1954", "prediction": "all x y.((Habitat(x) & -SupportsBears(x)) -> MovesToAnotherArea(y))", "score": 0}
{"id": "eqasc_train_1955", "prediction": "all x.(Animal(x) -> (DependsOnPlants(x) & Food(x) & Habitat(x)))", "score": 0}
{"id": "eqasc_train_1956", "prediction": "all x y.((Creature(x) & Habitat(y) & LittleFood(x)) -> MovesTo(x,y))", "score": 0}
{"id": "eqasc_train_1957", "prediction": "all x.(Cow(x) -> SocialAnimal(x))", "score": 0}
{"id": "eqasc_train_1958", "prediction": "all x y.((Habitat(x) & -SupportsCows(x)) -> MovesToAnotherArea(y))", "score": 0}
{"id": "eqasc_train_1959", "prediction": "all x y.((Environmentalist(x) & ForestRoad(y)) -> (AddsToErosion(x,y) & DestroysHabitat(x,y) & AffectsAnimalMigration(x,y)))", "score": 0}
{"id": "eqasc_train_1960", "prediction": "all x y.((Animal(x) & ForestRoad(y) & AddsToErosion(y,x)) -> MovesToArea(x,y))", "score": 0}
{"id": "eqasc_train_1961", "prediction": "all x.(Relocation(x) -> (RequiresMovingFamily(x) & RequiresMovingLifestyle(x)))", "score": 0}
{"id": "eqasc_train_1962", "prediction": "all x y.((Habitat(x) & Animal(y) & CannotSupport(x,y)) -> RelocationRequired(x))", "score": 0}
{"id": "eqasc_train_1963", "prediction": "all x.(WildlifeHabitat(x) -> (ContainsFoodPlots(x) & ContainsShrubs(x) & ContainsNutSeedings(x)))", "score": 0}
{"id": "eqasc_train_1964", "prediction": "all x y.((Animal(x) & Area(y) & -CanGetFood(x,y)) -> MovesToArea(x,y))", "score": 0}
{"id": "eqasc_train_1965", "prediction": "all x.(AnimalSpecies(x) -> Unique(x))", "score": 0}
{"id": "eqasc_train_1966", "prediction": "all x y.((Habitat(x) & Species(y) & CannotSupport(x,y)) -> MovesToArea(x,y))", "score": 0}
{"id": "eqasc_train_1967", "prediction": "all x.(ForestHabitat(x) -> Destroyed(x))", "score": 0}
{"id": "eqasc_train_1968", "prediction": "all x y.((Forest(x) & ForestDestroyed(x)) -> AnimalsMoveToAnotherArea(y))", "score": 0}
{"id": "eqasc_train_1969", "prediction": "all x.(Road(x) -> (ResultsInHabitatLoss(x) & ResultsInHabitatFragmentation(x)))", "score": 0}
{"id": "eqasc_train_1970", "prediction": "all x y z.((Road(x) & Animal(y) & Area(z)) -> MovesTo(y,z))", "score": 0}
{"id": "eqasc_train_1971", "prediction": "all x.(Animal(x) -> (MovesAround(x) & EatsPlantsOrAnimals(x)))", "score": 0}
{"id": "eqasc_train_1972", "prediction": "all x y.((Habitat(x) & -SupportsAnimals(x)) -> -CanEatPlantsOrAnimals(y))", "score": 0}
{"id": "eqasc_train_1973", "prediction": "all x.(Mating(x) -> PreceedsCourtship(x))", "score": 0}
{"id": "eqasc_train_1974", "prediction": "all x.(Bird(x) -> PerformsElaborateCourtshipDances(x))", "score": 0}
{"id": "eqasc_train_1975", "prediction": "all x y.((Bird(x) & Bird(y)) -> PerformsDancesBeforeMatching(x,y))", "score": 0}
{"id": "eqasc_train_1976", "prediction": "(AdditionalTopics(mating) & Nesting(n) & Reproduction(n))", "score": 0}
{"id": "eqasc_train_1977", "prediction": "all x.(Reproduction(x) -> (PreceedsCourtship(x) & PreceedsCourtship(x)))", "score": 0}
{"id": "eqasc_train_1978", "prediction": "all x y.((Male(x) & Female(y)) -> MixToMate(x,y))", "score": 0}
{"id": "eqasc_train_1979", "prediction": "all x y z.((Male(x) & Female(y) & Courtship(z)) -> (EngagesIn(x,y,z) & EngagesIn(y,z)))", "score": 0}
{"id": "eqasc_train_1980", "prediction": "all x.(CourtshipPattern(x) -> VariatesWithSpecies(x))", "score": 0}
{"id": "eqasc_train_1981", "prediction": "all x.(MatchingPattern(x) -> (VariatesWithSpecies(x) & VariatesWithSpecies(x)))", "score": 0}
{"id": "eqasc_train_1982", "prediction": "all x y z.((BlackRooster(x) & WhiteHen(y) & Offspring(z)) -> (Mate(x,y) & Gray(z)))", "score": 0}
{"id": "eqasc_train_1983", "prediction": "all x.(Courtship(x) -> CanResultInOffspring(x))", "score": 0}
{"id": "eqasc_train_1984", "prediction": "all x.(MooseCourtship(x) -> StartsInAutumn(x))", "score": 0}
{"id": "eqasc_train_1985", "prediction": "all x y.((Moose(x) & Mating(y)) -> (OccursAfterAutumn(y,x) & InMoose(x,y)))", "score": 0}
{"id": "eqasc_train_1986", "prediction": "all x y.((Friendship(x) & Courtship(y)) -> (Preceeds(x,y) & Preceeds(x,y)))", "score": 0}
{"id": "eqasc_train_1987", "prediction": "all x.(Friendship(x) -> ComesBeforeMating(x))", "score": 0}
{"id": "eqasc_train_1988", "prediction": "all x.((Mating(x) & Courtship(x)) -> LateApril(x))", "score": 0}
{"id": "eqasc_train_1989", "prediction": "all x.(Mating(x) -> MatingStartsInSpring(x))", "score": 0}
{"id": "eqasc_train_1990", "prediction": "all x.((Coupulation(x) & MatingSeason(x)) -> (StartsEarly(x) & StopsWhenNesting(x)))", "score": 0}
{"id": "eqasc_train_1991", "prediction": "all x.(Coupulation(x) -> PreceedsCourtship(x))", "score": 0}
{"id": "eqasc_train_1992", "prediction": "all x.(InsectPheromone(x) -> (AttractsMates(x) & Reproduction(x)))", "score": 0}
{"id": "eqasc_train_1993", "prediction": "all x y.((Insect(x) & Pheromone(y)) -> UsesForCourtship(x,y))", "score": 0}
{"id": "eqasc_train_1994", "prediction": "all x y.((Pig(x) & Mate(y)) -> (Finds(x,y) & MatesForLife(x)))", "score": 0}
{"id": "eqasc_train_1995", "prediction": "all x.(Pigeon(x) -> HasCourtship(x))", "score": 0}
{"id": "eqasc_train_1996", "prediction": "all x.((Flirting(x) & CourtshipRitual(x)) -> EssentialToModernRelationships(x))", "score": 0}
{"id": "eqasc_train_1997", "prediction": "all x y.((Mating(x) & Relationship(y)) -> PreceedsFlicking(x,y))", "score": 0}
{"id": "eqasc_train_1998", "prediction": "all x.(MooseMating(x) -> HappensAroundAutumn(x))", "score": 0}
{"id": "eqasc_train_1999", "prediction": "all x.(Courtship(x) -> SimilarAcrossSpecies(x))", "score": 0}
{"id": "eqasc_train_2000", "prediction": "all x.(Mating(x) -> SimilarAcrossSpecies(x))", "score": 0}
{"id": "eqasc_train_2001", "prediction": "all x.(Doorbell(x) -> ConvertsElectricalEnergyToSound(x))", "score": 0}
{"id": "eqasc_train_2002", "prediction": "all x.(PerceptionOfSound(x) -> Wave(x))", "score": 0}
{"id": "eqasc_train_2003", "prediction": "all x.(Doorbell(x) -> ConvertsElectricalEnergyToWave(x))", "score": 0}
{"id": "eqasc_train_2004", "prediction": "all x y.((SoundWaves(x) & Eardrum(y) & Hits(x,y)) -> EardrumStartsToVibrate(x))", "score": 0}
{"id": "eqasc_train_2005", "prediction": "all x.(Doorbell(x) -> RingMakesEardrumVibrate(x))", "score": 0}
{"id": "eqasc_train_2006", "prediction": "all x.((DoorChime(x) & Beat(x)) -> Sounds(x))", "score": 0}
{"id": "eqasc_train_2007", "prediction": "all x y.((Doorbell(x) & ElectricalEnergy(y)) -> ConvertsToChime(x,y))", "score": 0}
{"id": "eqasc_train_2008", "prediction": "all x.(Speaker(x) -> ConvertsElectricalEnergyToSoundWaves(x))", "score": 0}
{"id": "eqasc_train_2009", "prediction": "all x.(Doorbell(x) -> (ConvertsElectricalEnergy(x) & UsesSpeakers(x)))", "score": 0}
{"id": "eqasc_train_2010", "prediction": "all x y.((Doorbell(x) & ElectricalEnergy(y)) -> ConvertsToWaves(x,y))", "score": 0}
{"id": "eqasc_train_2011", "prediction": "all x y.((AlertingDevice(x) & Person(y) & (RingsDoorbell(x) | AlarmClockSounds(x) | TelephoneRings(x))) -> Informs(x,y))", "score": 0}
{"id": "eqasc_train_2012", "prediction": "all x y.((AlertingDevice(x) & Person(y) & ConvertsElectricalEnergyToSound(x,y)) -> Informs(x,y))", "score": 0}
{"id": "eqasc_train_2013", "prediction": "all x.(UnwantedSound(x) -> Noise(x))", "score": 0}
{"id": "eqasc_train_2014", "prediction": "all x.(Doorbell(x) -> ConvertsElectricalEnergyToNoise(x))", "score": 0}
{"id": "eqasc_train_2015", "prediction": "all x.(Hearing(x) -> PerceivesSound(x))", "score": 0}
{"id": "eqasc_train_2016", "prediction": "all x y.((Doorbell(x) & ElectricalEnergy(y)) -> ConvertsToWhatWeHear(x,y))", "score": 0}
{"id": "eqasc_train_2017", "prediction": "all x.((Light(x) | Sound(x)) -> Wave(x))", "score": 0}
{"id": "eqasc_train_2018", "prediction": "all x.(Doorbell(x) -> ConvertsElectricalEnergyToWaves(x))", "score": 0}
{"id": "eqasc_train_2019", "prediction": "all x.(Battery(x) -> ConvertsChemicalEnergyToElectricalEnergy(x))", "score": 0}
{"id": "eqasc_train_2020", "prediction": "all x.(Doorbell(x) -> ConvertsChemicalEnergyToSound(x))", "score": 0}
{"id": "eqasc_train_2021", "prediction": "all x y.((Doorbell(x) & KineticEnergy(y)) -> ConvertsToSound(x,y))", "score": 0}
{"id": "eqasc_train_2022", "prediction": "all x y.((Earthquake(x) & Ground(y)) -> CausesToShake(x,y))", "score": 0}
{"id": "eqasc_train_2023", "prediction": "all x.(Seismometer(x) -> MeasuresEarthquakes(x))", "score": 0}
{"id": "eqasc_train_2024", "prediction": "all x.(Seismometer(x) -> MeasuresShakingOfGround(x))", "score": 0}
{"id": "eqasc_train_2025", "prediction": "all x.((Damage(x) & ManMadeStructures(x) & GroundFailure(x) & FeelingShaking(x)) -> Damage(x))", "score": 0}
{"id": "eqasc_train_2026", "prediction": "all x y.((Earthquake(x) & ManMadeStructures(y)) -> CausesDamage(x,y))", "score": 0}
{"id": "eqasc_train_2027", "prediction": "all x.(Earthquake(x) -> (MovementInEarthCrust(x) & MovesInEarthCrust(x)))", "score": 0}
{"id": "eqasc_train_2028", "prediction": "all x y.((MovementsInEarthsCrust(x) & Ground(y)) -> CausesGroundToShake(y,x))", "score": 0}
{"id": "eqasc_train_2029", "prediction": "all x.(Earthquake(x) -> CausedByFaultMovement(x))", "score": 0}
{"id": "eqasc_train_2030", "prediction": "all x.(FaultMovement(x) -> CausesGroundToShake(x))", "score": 0}
{"id": "eqasc_train_2031", "prediction": "all x.(Earthquake(x) -> CausedByTectonicPlateMovement(x))", "score": 0}
{"id": "eqasc_train_2032", "prediction": "all x y.((TectonicPlates(x) & MovementOf(x,y)) -> CausesGroundToShake(x))", "score": 0}
{"id": "eqasc_train_2033", "prediction": "all x.(Earthquake(x) -> ShakingOfCrust(x))", "score": 0}
{"id": "eqasc_train_2034", "prediction": "all x y.((Earthquake(x) & Crumb(y)) -> Affects(x,y))", "score": 0}
{"id": "eqasc_train_2035", "prediction": "all x y.((SeismicWaves(x) & Earthquake(y)) -> ProducedBy(x,y))", "score": 0}
{"id": "eqasc_train_2036", "prediction": "all x y.((SeismicWaves(x) & Ground(y)) -> CausesToShake(x,y))", "score": 0}
{"id": "eqasc_train_2037", "prediction": "all x.((TectonicPlate(x) & MovementOf(x,tectonicPlates)) -> CausesGroundToShake(x))", "score": 0}
{"id": "eqasc_train_2038", "prediction": "all x.(Earthquake(x) -> VeryLethal(x))", "score": 0}
{"id": "eqasc_train_2039", "prediction": "all x.(GroundShaking(x) -> VeryLethal(x))", "score": 0}
{"id": "eqasc_train_2040", "prediction": "all x.(Landslide(x) -> TriggersByShakingEarthquakes(x))", "score": 0}
{"id": "eqasc_train_2041", "prediction": "all x y.((Landslide(x) & Earthquake(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_train_2042", "prediction": "exists x.(Parasite(x) & KillsHost(x) & -(Parasite(x) & KillsHost(x))))", "score": -1}
{"id": "eqasc_train_2043", "prediction": "all x.(Human(x) -> PotentialHost(x))", "score": 0}
{"id": "eqasc_train_2044", "prediction": "exists x y z.(Parasite(x) & Human(y) & Parasite(z) & Kill(x,y) & -Kill(x,z))", "score": 0}
{"id": "eqasc_train_2045", "prediction": "all x.(Human(x) -> UnforgivableHostOfLethalParasite(x))", "score": 0}
{"id": "eqasc_train_2046", "prediction": "(all x.(DeadlyParasite(x) -> KillHuman(x)) & exists y.(DeadlyParasite(y) & -KillHuman(y))))", "score": -1}
{"id": "eqasc_train_2047", "prediction": "all x y.((Nutrient(x) & Host(y)) -> AbsorbedThroughBodySurface(x,y))", "score": 0}
{"id": "eqasc_train_2048", "prediction": "all x.(Parasite(x) -> GetsNutrientsFromBody(x))", "score": 0}
{"id": "eqasc_train_2049", "prediction": "all x.(Leeches(x) -> ExternalParasite(x))", "score": 0}
{"id": "eqasc_train_2050", "prediction": "exists x.(Leeche(x) & KillsHost(x) & -MostLeeches(x))", "score": 0}
{"id": "eqasc_train_2051", "prediction": "all x y.((Pathogen(x) & Host(y)) -> InducesDisease(x,y))", "score": 0}
{"id": "eqasc_train_2052", "prediction": "exists x.(Parasite(x) & Kills(x) & -MostParasite(x))", "score": 0}
{"id": "eqasc_train_2053", "prediction": "all x.(Tapeworm(x) -> InternalParasiteOfVertebrate(x))", "score": 0}
{"id": "eqasc_train_2054", "prediction": "all x.(Tapeworm(x) -> (-KillsHost(x) & Host(x)))", "score": 0}
{"id": "eqasc_train_2055", "prediction": "all x.(Parasite(x) -> (HarmfulToHost(x) | BeneficialToHumans(x)))", "score": 0}
{"id": "eqasc_train_2056", "prediction": "exists x.(Parasite(x) & BeneficialToHumans(x))", "score": 0}
{"id": "eqasc_train_2057", "prediction": "all x.(Parasite(x) -> (Organism(x) & LivesOffHost(x)))", "score": 0}
{"id": "eqasc_train_2058", "prediction": "exists x y.(Organism(x) & Organism(y) & LivesOffHost(x,y) & -LivesOffHost(y))", "score": 0}
{"id": "eqasc_train_2059", "prediction": "all x.(Killing(x) -> Death(x))", "score": 0}
{"id": "eqasc_train_2060", "prediction": "exists x.(Parasite(x) & CausesDeathOfHost(x))", "score": 0}
{"id": "eqasc_train_2061", "prediction": "exists x.(Parasite(x) & Worm(x))", "score": 0}
{"id": "eqasc_train_2062", "prediction": "exists x.(Wworm(x) & KillsHost(x))", "score": 0}
{"id": "eqasc_train_2063", "prediction": "all x.(Tapeworm(x) -> (Flukes(x) & Parasitic(x)))", "score": 0}
{"id": "eqasc_train_2064", "prediction": "all x.(Tapeworm(x) -> (-KillsHost(x) & Host(x)))", "score": 0}
{"id": "eqasc_train_2065", "prediction": "all x.((DeadInWar(x) & American(x)) -> KilledBy(x,Americans))", "score": 0}
{"id": "eqasc_train_2066", "prediction": "exists x.(Parasite(x) & MakesHostDie(x) & -MakesHostDie(x))", "score": 0}
{"id": "eqasc_train_2067", "prediction": "all x.(Parasite(x) -> (Lungworm(x) | GIParasite(x)))", "score": 0}
{"id": "eqasc_train_2068", "prediction": "all x.(Lungworm(x) -> KillsHost(x))", "score": 0}
{"id": "eqasc_train_2069", "prediction": "all x.(Parasite(x) -> (ThrivesOnTissues(x) & InLivingHost(x)))", "score": 0}
{"id": "eqasc_train_2070", "prediction": "all x y.((Parasite(x) & LivingOrganism(y)) -> ThrivesOnTissue(x,y))", "score": 0}
{"id": "eqasc_train_2071", "prediction": "all x.(VibratingMatter(x) -> CanCauseSound(x))", "score": 0}
{"id": "eqasc_train_2072", "prediction": "all x y.((Molecule(x) & Energy(y)) -> VibratesMoreVibrantly(x,y))", "score": 0}
{"id": "eqasc_train_2073", "prediction": "all x y.((EnergyStriking(x,y) & Molecule(y)) -> CanCauseSound(x,y))", "score": 0}
{"id": "eqasc_train_2074", "prediction": "all x.((Intensity(x) | LoudnessOfSound(x)) -> MeasuredInDecibels(x))", "score": 0}
{"id": "eqasc_train_2075", "prediction": "all x.((Matter(x) & VibrantIntensity(x)) -> MeasuredInDecibels(x))", "score": 0}
{"id": "eqasc_train_2076", "prediction": "all x.(Guitar(x) -> ProducesSoundThroughMechanicalVibrationOfStrings(x))", "score": 0}
{"id": "eqasc_train_2077", "prediction": "all x.(GuitarStringsVibrates(x) -> Vibrates(x))", "score": 0}
{"id": "eqasc_train_2078", "prediction": "all x.(Matter(x) -> EmitsVibrations(x))", "score": 0}
{"id": "eqasc_train_2079", "prediction": "all x.(Matter(x) -> EmitsSound(x))", "score": 0}
{"id": "eqasc_train_2080", "prediction": "all x.((WavesPassEars(x) & SoundDetected(x)) -> WavesPassEars(x))", "score": 0}
{"id": "eqasc_train_2081", "prediction": "all x.(VibratingMatter(x) -> CausesEarsToDetect(x))", "score": 0}
{"id": "eqasc_train_2082", "prediction": "all x.(Music(x) -> (Sound(x) | Energy(x)))", "score": 0}
{"id": "eqasc_train_2083", "prediction": "all x.(VibratingMatter(x) -> CausesMusicThroughEnergy(x))", "score": 0}
{"id": "eqasc_train_2084", "prediction": "all x.(Word(x) -> (GroovySound(x) & HeardThroughEar(x)))", "score": 0}
{"id": "eqasc_train_2085", "prediction": "all x.(MatterVibrating(x) -> CanBeHeardThroughEar(x))", "score": 0}
{"id": "eqasc_train_2086", "prediction": "all x.(Cocoa(x) -> ReceivesSoundThroughEars(x))", "score": 0}
{"id": "eqasc_train_2087", "prediction": "all x.(MatterVibrating(x) -> Causes(x,Ears))", "score": 0}
{"id": "eqasc_train_2088", "prediction": "all x.(SoundWaves(x) -> Vibrate(x))", "score": 0}
{"id": "eqasc_train_2089", "prediction": "all x.(Waves(x) -> Vibrate(x))", "score": 0}
{"id": "eqasc_train_2090", "prediction": "all x.(SoundWaves(x) -> MechanicalWaves(x))", "score": 0}
{"id": "eqasc_train_2091", "prediction": "all x.(VibratingMatter(x) -> CausesMechanicalWaves(x))", "score": 0}
{"id": "eqasc_train_2092", "prediction": "all x.(Matter(x) -> MadeOfMolecules(x))", "score": 0}
{"id": "eqasc_train_2093", "prediction": "all x.(VibratingMolecules(x) -> CanCauseSound(x))", "score": 0}
{"id": "eqasc_train_2094", "prediction": "all x.(Sound(x) -> WaveInAir(x))", "score": 0}
{"id": "eqasc_train_2095", "prediction": "all x y.((Matter(x) & Vibrating(x)) -> CausesWaveInAir(x,y))", "score": 0}
{"id": "eqasc_train_2096", "prediction": "all x.(OverexposureToSound(x) -> DamagesHearing(x))", "score": 0}
{"id": "eqasc_train_2097", "prediction": "all x.((OverexposureToVibratingMatter(x) & DamagesHearing(x)) -> CanDamageHearing(x))", "score": 0}
{"id": "eqasc_train_2098", "prediction": "all x.(Sound(x) -> MovesAsHeadOfDrum(x))", "score": 0}
{"id": "eqasc_train_2099", "prediction": "all x.(Drum(x) -> VibratingMovement(x))", "score": 0}
{"id": "eqasc_train_2100", "prediction": "all x.(Cartilage(x) -> (ToughTissue(x) & ContainsCollagen(x)))", "score": 0}
{"id": "eqasc_train_2101", "prediction": "all x.(Collagen(x) -> ContributesToMeatToughness(x))", "score": 0}
{"id": "eqasc_train_2102", "prediction": "all x.(Cartilage(x) -> ContributesToMeatToughness(x))", "score": 0}
{"id": "eqasc_train_2103", "prediction": "all x.(CollagenTissue(x) -> (MadeByCollagenFibres(x) & ConnectedByBridges(x)))", "score": 0}
{"id": "eqasc_train_2104", "prediction": "all x.(Cartilage(x) -> (ToughTissue(x) & MadeByFibers(x) & ConnectedByBridges(x)))", "score": 0}
{"id": "eqasc_train_2105", "prediction": "all x.((CartilageCell(x) & InMatureCartilagin(x)) -> Chondrocyte(x))", "score": 0}
{"id": "eqasc_train_2106", "prediction": "all x.(Chendrocyte(x) -> ContainsProtein(x,Collagen))", "score": 0}
{"id": "eqasc_train_2107", "prediction": "all x.(Protein(x) -> ContributesToMeatToughness(x))", "score": 0}
{"id": "eqasc_train_2108", "prediction": "all x.(Shark(x) -> HasCartillageSkeleton(x))", "score": 0}
{"id": "eqasc_train_2109", "prediction": "all x.(Shark(x) -> (HasSkeleton(x) & ContainsCollagen(x)))", "score": 0}
{"id": "eqasc_train_2110", "prediction": "all x.(CollagenFilm(x) -> (ComesTogether(x) & FormsCollagen(x) & FormsCollagen(x)))", "score": 0}
{"id": "eqasc_train_2111", "prediction": "all x.(Cartilage(x) -> (ToughTissue(x) & MadeUpOfFibers(x)))", "score": 0}
{"id": "eqasc_train_2112", "prediction": "all x y.((Shark(x) & Skeleton(y)) -> (MadeOfToughTissue(y) & ContainsProteinCollagen(x)))", "score": 0}
{"id": "eqasc_train_2113", "prediction": "all x y.((Membrane(x) & CricoidCartillage(y)) -> AttachedTo(x,y))", "score": 0}
{"id": "eqasc_train_2114", "prediction": "all x.(Crocoid(x) -> (ToughTissue(x) & ContainsCollagen(x)))", "score": 0}
{"id": "eqasc_train_2115", "prediction": "all x.(Chondroblast(x) -> MakesCartilage(x))", "score": 0}
{"id": "eqasc_train_2116", "prediction": "all x.(Chondroblast(x) -> LeadsToCollagen(x))", "score": 0}
{"id": "eqasc_train_2117", "prediction": "all x.(Cartilage(x) -> (ComposedOfFruitousCollagen(x) & InAmorphousGel(x)))", "score": 0}
{"id": "eqasc_train_2118", "prediction": "all x.(Collagen(x) -> Fibrous(x))", "score": 0}
{"id": "eqasc_train_2119", "prediction": "all x.(Acid(x) -> HelpsDissolveCollagen(x))", "score": 0}
{"id": "eqasc_train_2120", "prediction": "all x.(Acid(x) -> HelpsDissolveCartilagin(x))", "score": 0}
{"id": "eqasc_train_2121", "prediction": "all x y.((Ethologist(x) & Animal(y)) -> StudiesInNaturalEnvironment(x,y))", "score": 0}
{"id": "eqasc_train_2122", "prediction": "all x.(Environment(x) -> ReflectsNativeHabitat(x))", "score": 0}
{"id": "eqasc_train_2123", "prediction": "all x y.((Ethologist(x) & Animal(y)) -> StudiesBehaviorInHabitat(x,y))", "score": 0}
{"id": "eqasc_train_2124", "prediction": "all x.(Ethologist(x) -> StudiesAnimalBehavior(x))", "score": 0}
{"id": "eqasc_train_2125", "prediction": "all x y.((AnimalBehaviorist(x) & Animal(y)) -> StudiesInNaturalEnvironment(x,y))", "score": 0}
{"id": "eqasc_train_2126", "prediction": "all x y z.((AnimalBehaviorist(x) & Animal(y) & NaturalEnvironment(z)) -> StudiesIn(x,y,z))", "score": 0}
{"id": "eqasc_train_2127", "prediction": "all x.(Ethology(x) -> StudiesBehavior(x))", "score": 0}
{"id": "eqasc_train_2128", "prediction": "all x y.((Ethologist(x) & Ethology(y)) -> Learns(x,y))", "score": 0}
{"id": "eqasc_train_2129", "prediction": "all x.(Ethologist(x) -> (StudiesAnimalsInNaturalHabitats(x) & StudiesAnimalsInNaturalHabitats(x)))", "score": 0}
{"id": "eqasc_train_2130", "prediction": "exists x.(Scientist(x) & StudiesAnimalBehavior(x))", "score": 0}
{"id": "eqasc_train_2131", "prediction": "all x.(Monkey(x) -> SocialAnimal(x))", "score": 0}
{"id": "eqasc_train_2132", "prediction": "all x y.((Ethologist(x) & Monkey(y)) -> Studies(x,y))", "score": 0}
{"id": "eqasc_train_2133", "prediction": "all x.(Animal(x) -> BehavesAccordingToInstinct(x))", "score": 0}
{"id": "eqasc_train_2134", "prediction": "all x y z.((Ethologist(x) & Animal(y) & NaturalEnvironment(z)) -> StudiesInstincts(x,y,z))", "score": 0}
{"id": "eqasc_train_2135", "prediction": "all x.(Animal(x) -> (Wild(x) & Dangerous(x)))", "score": 0}
{"id": "eqasc_train_2136", "prediction": "all x.(Ethologist(x) -> HasDangerousJob(x))", "score": 0}
{"id": "eqasc_train_2137", "prediction": "all x.(Habitat(x) -> exists y.(Organism(y) & LivesIn(x,y)))", "score": 0}
{"id": "eqasc_train_2138", "prediction": "all x y.((Ethologist(x) & Animal(y)) -> StudiesAnimalBehavior(x,y))", "score": 0}
{"id": "eqasc_train_2139", "prediction": "all x y z.((Student(x) & Ecosystem(y) & Animal(z)) -> TakesFieldTripToObserveHomes(x,y,z))", "score": 0}
{"id": "eqasc_train_2140", "prediction": "all x y z.((Ethologist(x) & Animal(y) & Ecosystem(z)) -> StudiesAnimalBehaviorInHome(x,y,z))", "score": 0}
{"id": "eqasc_train_2141", "prediction": "all x y.((AnimalBehavioralStudy(x) & Animal(y)) -> (StudiesAnimalBehavior(x,y) & NaturalEnvironment(y)))", "score": 0}
{"id": "eqasc_train_2142", "prediction": "all x y.((Ethologist(x) & Animal(y)) -> StudiesAnimalBehavior(x,y))", "score": 0}
{"id": "eqasc_train_2143", "prediction": "all x.(Ethologist(x) -> (CapturesObservations(x) & (Videotape(x) | AudioTape(x))))", "score": 0}
{"id": "eqasc_train_2144", "prediction": "all x.((Scientist(x) & StudiesAnimalBehavior(x)) -> (UsesVideotape(x) | UsesAudioTape(x)))", "score": 0}
{"id": "eqasc_train_2145", "prediction": "all x y z.((Scientist(x) & Animal(y) & Animal(z)) -> StudiesBehavior(x,y,z))", "score": 0}
{"id": "eqasc_train_2146", "prediction": "all x.(Germ(x) -> NaturalPartOfEnvironment(x))", "score": 0}
{"id": "eqasc_train_2147", "prediction": "all x y.((Ethologist(x) & Animal(y)) -> StudiesAnimalBehaviorAroundGerms(x,y))", "score": 0}
{"id": "eqasc_train_2148", "prediction": "all x.(Environment(x) -> AnimalHome(x))", "score": 0}
{"id": "eqasc_train_2149", "prediction": "all x y.((Ethologist(x) & Animal(y)) -> StudiesInHome(x,y))", "score": 0}
{"id": "eqasc_train_2150", "prediction": "all x.(Organism(x) -> RequiresEnergyForGrowth(x))", "score": 1}
{"id": "eqasc_train_2151", "prediction": "all x.(Growth(x) -> EnergyConsuming(x))", "score": 0}
{"id": "eqasc_train_2152", "prediction": "all x.(Organism(x) -> RequiresLotOfEnergyToGrow(x))", "score": 0}
{"id": "eqasc_train_2153", "prediction": "all x.(Food(x) -> ContainsEnergy(x))", "score": 0}
{"id": "eqasc_train_2154", "prediction": "all x.(Organism(x) -> RequiresFoodForGrowth(x))", "score": 0}
{"id": "eqasc_train_2155", "prediction": "all x.(Organism(x) -> (DifferentGrowthRequirements(x) & DifferentGrowthRate(x)))", "score": 0}
{"id": "eqasc_train_2156", "prediction": "all x.(Organism(x) -> RequiresDifferentEnergy(x))", "score": 0}
{"id": "eqasc_train_2157", "prediction": "all x.(Human(x) -> ComplexOrganism(x))", "score": 0}
{"id": "eqasc_train_2158", "prediction": "all x.(Human(x) -> RequiresEnergyForGrowth(x))", "score": 0}
{"id": "eqasc_train_2159", "prediction": "all x.(Food(x) -> SourceOfEnergy(x))", "score": 0}
{"id": "eqasc_train_2160", "prediction": "all x y.((Organism(x) & Food(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_train_2161", "prediction": "all x.(Fish(x) -> RequiresEnergyForGrowth(x))", "score": 0}
{"id": "eqasc_train_2162", "prediction": "all x.(Growth(x) -> ExpandedRapidly(x))", "score": 0}
{"id": "eqasc_train_2163", "prediction": "all x.(Organism(x) -> RequiresEnergyForRapidExpansion(x))", "score": 0}
{"id": "eqasc_train_2164", "prediction": "all x.((Plant(x) | Animal(x)) -> Organism(x))", "score": 2}
{"id": "eqasc_train_2165", "prediction": "all x.(Plant(x) -> RequiresEnergyForGrowth(x))", "score": 1}
{"id": "eqasc_train_2166", "prediction": "all x.(HealthyOrganization(x) -> PartOfPersonalGrowth(x))", "score": 0}
{"id": "eqasc_train_2167", "prediction": "all x.(Organism(x) -> RequiresEnergyForHealthyPerson(x))", "score": 0}
{"id": "eqasc_train_2168", "prediction": "all x.(Organism(x) -> (GainEnergy(x) & (Assimilation(x) | Absorption(x))))", "score": 0}
{"id": "eqasc_train_2169", "prediction": "all x.(Organism(x) -> RequiresFoodForGrowth(x))", "score": 0}
{"id": "eqasc_train_2170", "prediction": "all x.(Plant(x) -> GetsEnergyFromSun(x))", "score": 0}
{"id": "eqasc_train_2171", "prediction": "all x.(Plant(x) -> NeedsSun(x))", "score": 0}
{"id": "eqasc_train_2172", "prediction": "all x y z.((Blood(x) & Viscera(y) & Organs(z) & Tissues(z)) -> (FlowsTo(x,y) & ForGrowth(x) & ForMetabolism(x)))", "score": 0}
{"id": "eqasc_train_2173", "prediction": "all x.(Organism(x) -> RequiresEnergyForBloodFlow(x))", "score": 0}
{"id": "eqasc_train_2174", "prediction": "all x y.((Organism(x) & HydrothermalVent(y)) -> ClustersAround(x,y))", "score": 1}
{"id": "eqasc_train_2175", "prediction": "exists x.(Organism(x) & LivingNearHydrothermalVents(x) & FormsCloseAssociations(x))", "score": 0}
{"id": "eqasc_train_2176", "prediction": "all x y.((Cluster(x) & HydrothermalVent(y)) -> FormsAround(x,y))", "score": 0}
{"id": "eqasc_train_2177", "prediction": "all x y.((HotWaterVent(x) & OceanFloor(y)) -> FormsInsideCracks(x,y))", "score": 0}
{"id": "eqasc_train_2178", "prediction": "all x.(Organism(x) -> ClustersAroundCracksInOceanFloor(x))", "score": 0}
{"id": "eqasc_train_2179", "prediction": "(LargestOcean(x) & OnEarth(x))", "score": 0}
{"id": "eqasc_train_2180", "prediction": "all x y.((Organism(x) & HydrothermalVent(y)) -> ClustersAround(x,y))", "score": 1}
{"id": "eqasc_train_2181", "prediction": "all x.((Animal(x) & UnderwaterHydrothermalVent(x)) -> Unique(x))", "score": 0}
{"id": "eqasc_train_2182", "prediction": "all x.(Organism(x) -> (OnOceanFloor(x) & Unique(x)))", "score": 0}
{"id": "eqasc_train_2183", "prediction": "all x.(HydrothermalVent(x) -> (PoweredByHeat(x) & SubmarineVolcano(x)))", "score": 0}
{"id": "eqasc_train_2184", "prediction": "all x y.((Organism(x) & SubmarineVolcano(y)) -> ClustersAroundHeat(x,y))", "score": 0}
{"id": "eqasc_train_2185", "prediction": "all x.(LargeLudlow(x) -> FoundInOceanFloor(x))", "score": 0}
{"id": "eqasc_train_2186", "prediction": "all x y z.((Organism(x) & HydrothermalVent(y) & Lobster(z)) -> ClustersAround(x,y,z))", "score": 0}
{"id": "eqasc_train_2187", "prediction": "all x.(HydrothermalVent(x) -> (FissuresInOceanFloor(x) & LeaksHotAcidicWater(x)))", "score": 0}
{"id": "eqasc_train_2188", "prediction": "all x y.((Organism(x) & Fissure(y) & OceanFloor(y)) -> (ClustersAround(x,y) & LeaksHotAcidicWater(x)))", "score": 0}
{"id": "eqasc_train_2189", "prediction": "all x y.((Organism(x) & HydrothermalVent(y) & PacificFloor(x)) -> ClustersAround(x,y))", "score": 0}
{"id": "eqasc_train_2190", "prediction": "all x.(Organism(x) -> (ClustersAroundHotWater(x) & InsideCracksInOceanFloor(x)))", "score": 0}
{"id": "eqasc_train_2191", "prediction": "all x y.((Chimney(x) & HydrothermalVent(y)) -> Tops(x,y))", "score": 0}
{"id": "eqasc_train_2192", "prediction": "all x y.((Organism(x) & OceanFloor(y)) -> ClustersAroundChips(x,y))", "score": 0}
{"id": "eqasc_train_2193", "prediction": "all x y z.((Organism(x) & OceanFloorFormation(y) & SubmarineVolcano(z)) -> (ClustersAround(x,y) & PoweredByHeat(x,z)))", "score": 0}
{"id": "eqasc_train_2194", "prediction": "all x.((Bacteria(x) & FoundAtHydrothermalVents(x)) -> OfGreatInterest(x))", "score": 0}
{"id": "eqasc_train_2195", "prediction": "all x.(Bacteria(x) -> OnOceanFloor(x))", "score": 0}
{"id": "eqasc_train_2196", "prediction": "all x.(Sediment(x) -> FormedByWeathering(x))", "score": 1}
{"id": "eqasc_train_2197", "prediction": "all x.(Sand(x) -> Weathered(x))", "score": 0}
{"id": "eqasc_train_2198", "prediction": "all x.(Sediment(x) -> (OriginatesFromWeathering(x) & OriginatesFromErosion(x)))", "score": 0}
{"id": "eqasc_train_2199", "prediction": "all x.(Sediment(x) -> FormedByErosion(x))", "score": 0}
{"id": "eqasc_train_2200", "prediction": "all x.((LooseDirt(x) | Sediments(x)) -> AgriculturalPollution(x))", "score": 0}
{"id": "eqasc_train_2201", "prediction": "all x.(LoosDirt(x) -> FormedByWeathering(x))", "score": 0}
{"id": "eqasc_train_2202", "prediction": "all x.((Sand(x) | Mud(x)) -> Sediment(x))", "score": 1}
{"id": "eqasc_train_2203", "prediction": "all x.(Sand(x) -> FormedByWeathering(x))", "score": 1}
{"id": "eqasc_train_2204", "prediction": "all x.(Sediment(x) -> (MadeOfRocks(x) & MadeOfDirt(x) & MadeOfEarth(x)))", "score": 0}
{"id": "eqasc_train_2205", "prediction": "all x.(Weathering(x) -> (BreaksDownRocks(x) & BreaksDownDirt(x) & BreaksDownEarth(x) & CreatesSubstance(x)))", "score": 0}
{"id": "eqasc_train_2206", "prediction": "all x.(Rock(x) -> Weathering(x))", "score": 0}
{"id": "eqasc_train_2207", "prediction": "all x.(Sediment(x) -> FormedByBreakingDownRocks(x))", "score": 0}
{"id": "eqasc_train_2208", "prediction": "all x.(ChemicalWeathering(x) -> CausedByWater(x))", "score": 0}
{"id": "eqasc_train_2209", "prediction": "all x.(Sediment(x) -> FormedByWater(x))", "score": 0}
{"id": "eqasc_train_2210", "prediction": "all x.(Exfoliation(x) -> (MechanicalWeathering(x) & OccursInGranite(x)))", "score": 0}
{"id": "eqasc_train_2211", "prediction": "all x.(Sediment(x) -> FormedByExfoliation(x))", "score": 0}
{"id": "eqasc_train_2212", "prediction": "all x.(SedimentaryRock(x) -> MadeFromSediment(x))", "score": 0}
{"id": "eqasc_train_2213", "prediction": "all x.(SedimentaryRock(x) -> FormedByWeathering(x))", "score": 0}
{"id": "eqasc_train_2214", "prediction": "all x.(Ribosome(x) -> (SmallOrganelle(x) & ProteinsMade(x)))", "score": 0}
{"id": "eqasc_train_2215", "prediction": "all x.(Ribosome(x) -> AssembledInNucleus(x))", "score": 0}
{"id": "eqasc_train_2216", "prediction": "all x y.((Protein(x) & Nucleus(y)) -> AssembledIn(x,y))", "score": 0}
{"id": "eqasc_train_2217", "prediction": "all x.(Antibiotic(x) -> AffectsRibosome(x))", "score": 0}
{"id": "eqasc_train_2218", "prediction": "all x y.((Antibiotic(x) & SmallOrganelles(y)) -> Affects(x,y))", "score": 0}
{"id": "eqasc_train_2219", "prediction": "all x y.((SmallOrganelles(x) & Protein(y) & Makes(x,y)) -> AssembledInNucleus(x))", "score": 0}
{"id": "eqasc_train_2220", "prediction": "all x y.((Protein(x) & Nucleus(y)) -> MadeInside(x,y))", "score": 0}
{"id": "eqasc_train_2221", "prediction": "all x.(Protein(x) -> AssembledOnFloatingRibosomes(x))", "score": 0}
{"id": "eqasc_train_2222", "prediction": "all x.(Protein(x) -> AssembledOnSmallFloatingOrganelles(x))", "score": 0}
{"id": "eqasc_train_2223", "prediction": "all x.((Cell(x) & -MembraneBoundOrganelles(x)) -> (Prokaryotic(x) | Bacteria(x)))", "score": 0}
{"id": "eqasc_train_2224", "prediction": "all x.(Bacteria(x) -> LacksRribosomes(x))", "score": 0}
{"id": "eqasc_train_2225", "prediction": "all x.(CellOrganelle(x) -> Hypertrophic(x))", "score": 0}
{"id": "eqasc_train_2226", "prediction": "all x.(Ribosome(x) -> Hypertrophic(x))", "score": 0}
{"id": "eqasc_train_2227", "prediction": "all x y.((Ribosome(x) & Ribosome(y) & -Translating(x)) -> CompetedWith(x,y))", "score": 0}
{"id": "eqasc_train_2228", "prediction": "all x y.((Organelle(x) & Protein(y)) -> TranslatedIn(x,y))", "score": 0}
{"id": "eqasc_train_2229", "prediction": "all x y.((Antibiotic(x) & SmallOrganelle(y) & ProteinsMade(y)) -> Affects(x,y))", "score": 0}
{"id": "eqasc_train_2230", "prediction": "all x.(Bacteria(x) -> -ContainsOrganelles(x))", "score": 0}
{"id": "eqasc_train_2231", "prediction": "all x.(Bacteria(x) -> -HasRibosomes(x))", "score": 0}
{"id": "eqasc_train_2232", "prediction": "all x y z.((Earth(x) & Sun(y) & Earth(z) & RevolvingAround(x,y,z)) -> CausesSeasonsChange(x,y,z))", "score": 0}
{"id": "eqasc_train_2233", "prediction": "all x.((Leaves(x) & (Gold(x) | Scarlet(x) | Auburn(x))) -> HeraldsSeasonalChange(x))", "score": 0}
{"id": "eqasc_train_2234", "prediction": "all x y.((Earth(x) & Sun(y)) -> OrbitalMotion(x,y))", "score": 0}
{"id": "eqasc_train_2235", "prediction": "all x.((DaylightChange(x) & Seasons(x)) -> ActiveEarthChanges(x))", "score": 0}
{"id": "eqasc_train_2236", "prediction": "all x y.((Earth(x) & Sun(y) & RevolvingAround(x,y)) -> CausesDaylightChanges(x))", "score": 0}
{"id": "eqasc_train_2237", "prediction": "all x.(Weather(x) -> ChangesFromSeasonToSeason(x))", "score": 0}
{"id": "eqasc_train_2238", "prediction": "all x y.((Earth(x) & Sun(y)) -> CausesWeatherChange(x,y))", "score": 0}
{"id": "eqasc_train_2239", "prediction": "all x y.((Season(x) & EarthAxisTilted(x) & EarthRevolvesAround(y,x)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_train_2240", "prediction": "all x.(Tilt(x) -> CausesSeasons(x))", "score": 0}
{"id": "eqasc_train_2241", "prediction": "all x y.((Earth(x) & Sun(y)) -> CreatesSeasons(x,y))", "score": 0}
{"id": "eqasc_train_2242", "prediction": "all x y.((Season(x) & EarthsRevolution(y)) -> SeasonChange(x,y))", "score": 0}
{"id": "eqasc_train_2243", "prediction": "all x.((Weather(x) & Seasons(x)) -> (SeasonalChanges(x) & Weather(x)))", "score": 0}
{"id": "eqasc_train_2244", "prediction": "all x y.((Weather(x) & Plant(y) & Animal(y)) -> (ChangesWeather(x,y) & Affects(x,y)))", "score": 0}
{"id": "eqasc_train_2245", "prediction": "all x.(Winter(x) -> HorribleSeason(x))", "score": 0}
{"id": "eqasc_train_2246", "prediction": "all x y.((Earth(x) & Sun(y) & RevolvingAround(x,y)) -> CausesWinter(x))", "score": 0}
{"id": "eqasc_train_2247", "prediction": "all x.(Biodiversity(x) -> (IncreasesProductivity(x) & IncreasesStability(x)))", "score": 2}
{"id": "eqasc_train_2248", "prediction": "all x.(Ecosystem(x) -> (IncludesOrganisms(x) & IncludesHabitat(x)))", "score": 0}
{"id": "eqasc_train_2249", "prediction": "all x y z.((Biodiversity(x) & Organism(y) & Habitat(z)) -> (IncreasesProductivity(x,y) & IncreasesStability(x,z)))", "score": 0}
{"id": "eqasc_train_2250", "prediction": "all x.(Biodiversity(x) -> GeneticDiversity(x))", "score": 0}
{"id": "eqasc_train_2251", "prediction": "all x.(GeneticDiversity(x) -> (IncreasesProductivity(x) & IncreasesStability(x)))", "score": 0}
{"id": "eqasc_train_2252", "prediction": "all x.(Biodiversity(x) -> ContributesToEcosystemComplexity(x))", "score": 0}
{"id": "eqasc_train_2253", "prediction": "all x.(Ecosystem(x) -> (IncreasesProductivity(x) & IncreasesStability(x)))", "score": 0}
{"id": "eqasc_train_2254", "prediction": "all x.(Ecotourism(x) -> (ConserveBiodiversity(x) & HelpsConserveBiodiversity(x)))", "score": 0}
{"id": "eqasc_train_2255", "prediction": "all x.(Ecotourism(x) -> IncreasesStabilityOfEcosystems(x))", "score": 0}
{"id": "eqasc_train_2256", "prediction": "all x.(Island(x) -> DelicatelyBalancedEcosystem(x))", "score": 0}
{"id": "eqasc_train_2257", "prediction": "all x.(Biodiversity(x) -> (IncreasesStability(x) & IncreasesProductivity(x)))", "score": 1}
{"id": "eqasc_train_2258", "prediction": "all x.(MarineEcosystem(x) -> (StabilizerOfGlobalSystems(x) & Climate(x)))", "score": 0}
{"id": "eqasc_train_2259", "prediction": "all x.(Biodiversity(x) -> (IncreasesProductivity(x) & IncreasesStability(x)))", "score": 1}
{"id": "eqasc_train_2260", "prediction": "all x.(Biodiversity(x) -> (IncrediblyPowerfulForce(x) & KeepsSpeciesEvolving(x)))", "score": 0}
{"id": "eqasc_train_2261", "prediction": "all x y.((Force(x) & KeepsSpeciesEvolving(x)) -> (IncreasesProductivity(x) & IncreasesStability(x) & Ecosystems(y)))", "score": 0}
{"id": "eqasc_train_2262", "prediction": "all x.((Biodiversity(x) & Ecosystem(x)) -> ComplexSystem(x))", "score": 0}
{"id": "eqasc_train_2263", "prediction": "all x.(Biodiversity(x) -> ComplexSystem(x))", "score": 0}
{"id": "eqasc_train_2264", "prediction": "all x.(Ocean(x) -> LargestEcosystem(x))", "score": 0}
{"id": "eqasc_train_2265", "prediction": "all x y z.((Biodiversity(x) & Ocean(y) & Productivity(z) & Stability(z)) -> Increases(x,y,z))", "score": 0}
{"id": "eqasc_train_2266", "prediction": "all x.(Amphibian(x) -> (HasSenseOrgans(x) & SmellsChemicals(x) & TastesChemicals(x)))", "score": 0}
{"id": "eqasc_train_2267", "prediction": "all x.(Amphibian(x) -> (UsesSmell(x) & UsesHearing(x) & HuntsPrey(x)))", "score": 0}
{"id": "eqasc_train_2268", "prediction": "all x.(Amphibian(x) -> (HasSenseOrgans(x) & HelpsHuntPrey(x)))", "score": 0}
{"id": "eqasc_train_2269", "prediction": "all x.(Frog(x) -> (HasSenseOrgans(x) & HasSenseOrgans(x) & SmellsAndTastesChemicals(x)))", "score": 0}
{"id": "eqasc_train_2270", "prediction": "all x.(Lizard(x) -> UsesTongueAsSenseOrgan(x))", "score": 0}
{"id": "eqasc_train_2271", "prediction": "all x.(Lizard(x) -> CanUseTongue(x))", "score": 0}
{"id": "eqasc_train_2272", "prediction": "all x.(Amphibian(x) -> (HasImmuneCells(x) & Organ(x)))", "score": 0}
{"id": "eqasc_train_2273", "prediction": "all x.(Amphibian(x) -> (HasImmuneCells(x) & ArrangedToSmellAndTasteChemicals(x)))", "score": 0}
{"id": "eqasc_train_2274", "prediction": "all x.((Frog(x) | Toad(x) | Salamander(x)) -> Amphibian(x))", "score": 2}
{"id": "eqasc_train_2275", "prediction": "all x y z.((Frog(x) | Toad(y) | Salamander(z)) -> HasSenseOrgan(x,y))", "score": 0}
{"id": "eqasc_train_2276", "prediction": "all x.(Bullfrog(x) -> (SmellsChemicals(x) & TastesChemicals(x) & ThroughSenseOrgans(x)))", "score": 0}
{"id": "eqasc_train_2277", "prediction": "all x.(Salamander(x) -> Amphibian(x))", "score": 0}
{"id": "eqasc_train_2278", "prediction": "all x.(Salamander(x) -> (HasSenseOrgans(x) & SmellsAndTastesChemicals(x)))", "score": 0}
{"id": "eqasc_train_2279", "prediction": "all x.((Smell(x) & Taste(x)) -> ChemicalSensingSystem(x))", "score": 0}
{"id": "eqasc_train_2280", "prediction": "all x.(Amphibian(x) -> HasChemicalSensingSystem(x))", "score": 0}
{"id": "eqasc_train_2281", "prediction": "all x.(Frog(x) -> DurableAmphibian(x))", "score": 0}
{"id": "eqasc_train_2282", "prediction": "all x.(Frog(x) -> (DurableCreature(x) & CanSmellChemicals(x) & CanTasteChemicals(x)))", "score": 0}
{"id": "eqasc_train_2283", "prediction": "all x y z.((Microscope(x) & Biologist(y) & SmallThing(z)) -> (Sees(x,y,z) & MakesAppearBigger(y,z)))", "score": 0}
{"id": "eqasc_train_2284", "prediction": "all x y.((Biologist(x) & Microscope(y)) -> (Uses(x,y) & StudiesSmallThings(x) & -AimedToUnaidedEye(x)))", "score": 0}
{"id": "eqasc_train_2285", "prediction": "all x y.((Biologist(x) & SmallThing(y) & -AidEye(y)) -> Studies(x,y))", "score": 0}
{"id": "eqasc_train_2286", "prediction": "all x.(Object(x) -> MagnifiedToSeeSmallDetails(x))", "score": 0}
{"id": "eqasc_train_2287", "prediction": "all x.(Microscope(x) -> (SeeDetails(x) & MagnifiesObjects(x)))", "score": 0}
{"id": "eqasc_train_2288", "prediction": "all x.(Bacteria(x) -> VerySmall(x))", "score": 0}
{"id": "eqasc_train_2289", "prediction": "all x y.((Biologist(x) & Microscope(y)) -> UsesToSee(x,y))", "score": 0}
{"id": "eqasc_train_2290", "prediction": "exists x.(Person(x) & LeeuwenhoekInventsMicroscope(x))", "score": 0}
{"id": "eqasc_train_2291", "prediction": "all x y z.((InventedByLeeuwenhoek(x) & Biologist(y) & SmallThing(z) & SeesBy(y,z)) -> MakesAppearBigger(y,z))", "score": 0}
{"id": "eqasc_train_2292", "prediction": "all x.(Bacteria(x) -> (TooSmallToBeSeenWithoutMicroscope(x)))", "score": 0}
{"id": "eqasc_train_2293", "prediction": "all x y.((Biologist(x) & Microscope(y)) -> NeedsToMakeBacteriaAppearBigger(x,y))", "score": 0}
{"id": "eqasc_train_2294", "prediction": "all x y.((Microscope(x) & Biologist(y)) -> (SeesBacteria(x,y) & MakesBacteriaAppearBigger(y,x)))", "score": 0}
{"id": "eqasc_train_2295", "prediction": "all x.(Biologist(x) -> StudiesLivingCreatures(x))", "score": 0}
{"id": "eqasc_train_2296", "prediction": "all x y.((Microscope(x) & LivingCreature(y)) -> MakesAppearBigger(x,y))", "score": 0}
{"id": "eqasc_train_2297", "prediction": "all x.((Microscope(x) | Telescope(x)) -> UsesLenses(x))", "score": 0}
{"id": "eqasc_train_2298", "prediction": "all x y z.((Lense(x) & Biologist(y) & SmallThing(z)) -> (UsedToSee(x,y,z) & MakesAppearBigger(y,z)))", "score": 0}
{"id": "eqasc_train_2299", "prediction": "all x.(Bioaerosol(x) -> (SmallLivingOrganism(x) | FragmentsOfLivingThings(x)))", "score": 0}
{"id": "eqasc_train_2300", "prediction": "all x y.((Microscope(x) & Biologist(y) & SeesBioaerosols(x,y)) -> MakesAppearsBigger(y,x))", "score": 0}
{"id": "eqasc_train_2301", "prediction": "all x.(Mite(x) -> (AlmostMicroscopically(x) & (HandLens(x) | MagnifyingGlass(x))))", "score": 0}
{"id": "eqasc_train_2302", "prediction": "all x.((HandLens(x) | MagnifyingGlasses(x)) -> SeesSmallThings(x))", "score": 0}
{"id": "eqasc_train_2303", "prediction": "all x.(TemperatureChange(x) -> CausesPhaseChange(x))", "score": 0}
{"id": "eqasc_train_2304", "prediction": "all x.(PhaseChange(x) -> PotentialEnergyChange(x))", "score": 0}
{"id": "eqasc_train_2305", "prediction": "all x.(TemperatureChange(x) -> CanCausePotentialEnergyChange(x))", "score": 0}
{"id": "eqasc_train_2306", "prediction": "all x.(Melting(x) -> (ChangeOfPhase(x) & SolidToLiquid(x)))", "score": 0}
{"id": "eqasc_train_2307", "prediction": "all x.(TemperatureChange(x) -> CausesMelting(x))", "score": 0}
{"id": "eqasc_train_2308", "prediction": "all x.((Water(x) & Liquid(x)) -> GasTransformation(x))", "score": 0}
{"id": "eqasc_train_2309", "prediction": "all x.(TemperatureChange(x) -> TransformsWaterFromLiquidToGas(x))", "score": 0}
{"id": "eqasc_train_2310", "prediction": "all x.((ClimateChange(x) & TemperatureRise(x)) -> PotentialEffects(x))", "score": 0}
{"id": "eqasc_train_2311", "prediction": "all x.(ClimateChange(x) -> PhaseChange(x))", "score": 0}
{"id": "eqasc_train_2312", "prediction": "all x y.((Solid(x) & TemperatureChange(y)) -> MeltsIntoLiquid(x,y))", "score": 0}
{"id": "eqasc_train_2313", "prediction": "all x.(PhaseChange(x) -> TransfersEnergyInAtmosphere(x))", "score": 0}
{"id": "eqasc_train_2314", "prediction": "all x.(TemperatureChange(x) -> CausesTransferringEnergy(x))", "score": 0}
{"id": "eqasc_train_2315", "prediction": "all x.(PhaseChange(x) -> ChangeOfState(x))", "score": 0}
{"id": "eqasc_train_2316", "prediction": "all x.(TemperatureChange(x) -> CausesChangeOfState(x))", "score": 0}
{"id": "eqasc_train_2317", "prediction": "all x.(Temperature(x) -> ChangeOfState(x))", "score": 0}
{"id": "eqasc_train_2318", "prediction": "all x.((Water(x) & ColdInducedPhaseChange(x) & ProducesIce(x)) -> ExpandsIce(x))", "score": 0}
{"id": "eqasc_train_2319", "prediction": "all x y.((TemperatureChange(x) & Water(y)) -> CanCauseToChangeToIce(x,y))", "score": 0}
{"id": "eqasc_train_2320", "prediction": "all x.(Temperature(x) -> (RelativeDegreeOfHeat(x) | RelativeDegreeOfCold(x)))", "score": 0}
{"id": "eqasc_train_2321", "prediction": "all x.((Heat(x) | Cold(x)) -> CausesPhaseChange(x))", "score": 0}
{"id": "eqasc_train_2322", "prediction": "all x.(Temperature(x) -> ChangesWithSeasons(x))", "score": 0}
{"id": "eqasc_train_2323", "prediction": "all x.(Season(x) -> CausesPhaseChange(x))", "score": 0}
{"id": "eqasc_train_2324", "prediction": "all x.(GlobalWarming(x) -> ChangeOfEarthsTemperature(x))", "score": 0}
{"id": "eqasc_train_2325", "prediction": "all x.(GlobalWarming(x) -> PhaseChange(x))", "score": 0}
{"id": "eqasc_train_2326", "prediction": "all x.((EmissionOfSulfurDioxide(x) & AcidRain(x)) -> CausesAcidRain(x))", "score": 0}
{"id": "eqasc_train_2327", "prediction": "all x.(AcidRain(x) -> EffectsForestEcosystems(x))", "score": 0}
{"id": "eqasc_train_2328", "prediction": "all x.(Ecosystem(x) -> DamagedBySulfurDioxide(x))", "score": 0}
{"id": "eqasc_train_2329", "prediction": "all x.(SulfurDioxide(x) -> ConvertedToSulfuricAcid(x))", "score": 0}
{"id": "eqasc_train_2330", "prediction": "all x.(Emissions(x) -> CausesAcidRain(x))", "score": 0}
{"id": "eqasc_train_2331", "prediction": "(SulfurDioxide(SO2) -> SulfurDioxide(SO2))", "score": 0}
{"id": "eqasc_train_2332", "prediction": "all x.((EmissionOfSo2(x) & AcidRain(x)) -> Causes(x,acidrain))", "score": 0}
{"id": "eqasc_train_2333", "prediction": "all x.((Sulfur(x) & BurnedCoal(x)) -> SulfurDioxide(x))", "score": 0}
{"id": "eqasc_train_2334", "prediction": "all x.(BurningCoal(x) -> CausesAcidRain(x))", "score": 0}
{"id": "eqasc_train_2335", "prediction": "all x.(PollutedRain(x) -> AcidRain(x))", "score": 0}
{"id": "eqasc_train_2336", "prediction": "all x.(SulfurDioxide(x) -> CausesPollution(x))", "score": 0}
{"id": "eqasc_train_2337", "prediction": "all x.(AcidRAIN(x) -> (Polluted(x) & HarmfulToEnvironment(x)))", "score": 0}
{"id": "eqasc_train_2338", "prediction": "all x.(EmissionOfSulfurDioxide(x) -> CausesPollutionToEnvironment(x))", "score": 0}
{"id": "eqasc_train_2339", "prediction": "all x.(Scrubber(x) -> SignificantlyReducesEmissionsOfSulfurDioxide(x))", "score": 0}
{"id": "eqasc_train_2340", "prediction": "all x.(Scrubber(x) -> ReducesAcidRain(x))", "score": 0}
{"id": "eqasc_train_2341", "prediction": "(HydrogenEggs(SulfurDioxide) & Asthmatics(SulfurDioxide) & HighlyReactive(SulfurDioxide) & SmellsAlikeRottenEggs(SulfurDioxide))", "score": 0}
{"id": "eqasc_train_2342", "prediction": "all x y.((Emission(x) & SmellsAlikeRottenEggs(x)) -> CausesAcidRain(y))", "score": 0}
{"id": "eqasc_train_2343", "prediction": "all x.(EruptingVolcano(x) -> EmitsSulfurDioxide(x))", "score": 0}
{"id": "eqasc_train_2344", "prediction": "all x.(EruptingVolcano(x) -> CausesAcidRain(x))", "score": 0}
{"id": "eqasc_train_2345", "prediction": "all x.(SulfurDioxide(x) -> (CombustibleOil(x) & CombustibleCoal(x)))", "score": 0}
{"id": "eqasc_train_2346", "prediction": "all x y.((CombustionOfOil(x) & AcidRain(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_train_2347", "prediction": "all x.(Cell(x) -> -SurvivesWithoutOxygen(x))", "score": 0}
{"id": "eqasc_train_2348", "prediction": "all x.(Cell(x) -> BasicBuildingBlockOfLife(x))", "score": 0}
{"id": "eqasc_train_2349", "prediction": "all x.((BasicBuildingBlocksOfLife(x) & -SurviveWithoutOxygen(x)) -> -SurviveWithoutOxygen(x))", "score": 0}
{"id": "eqasc_train_2350", "prediction": "all x.(Life(x) -> ResponsibleForOxygen(x))", "score": 0}
{"id": "eqasc_train_2351", "prediction": "all x.((Cell(x) & -Atmosphere(x)) -> -SurvivesWithoutAtmosphere(x))", "score": 0}
{"id": "eqasc_train_2352", "prediction": "all x.(Plant(x) -> BreathesOxygenIntoAtmosphere(x))", "score": 0}
{"id": "eqasc_train_2353", "prediction": "all x y.((Cell(x) & Plant(y) & BreathesIntoAtmosphere(x,y)) -> -SurvivesWithoutPlants(x,y))", "score": 0}
{"id": "eqasc_train_2354", "prediction": "all x.(Air(x) -> ContainsOxygen(x))", "score": 0}
{"id": "eqasc_train_2355", "prediction": "all x y.((Air(x) & Cell(y)) -> HelpsSurvive(x,y))", "score": 0}
{"id": "eqasc_train_2356", "prediction": "all x.((Bacteria(x) & RequiresOxygen(x)) -> Aerobic(x))", "score": 0}
{"id": "eqasc_train_2357", "prediction": "all x.(Cell(x) -> Aerobic(x))", "score": 0}
{"id": "eqasc_train_2358", "prediction": "all x.(Plant(x) -> (StabilizesSoils(x) & OxygenatesAtmosphere(x)))", "score": 0}
{"id": "eqasc_train_2359", "prediction": "all x.((Cell(x) & Plant(y) & RenewsAtmosphere(x,y)) -> -SurvivesWithoutReplenishment(x,y))", "score": 0}
{"id": "eqasc_train_2360", "prediction": "all x.(Cell(x) -> UnitOfFunction(x))", "score": 0}
{"id": "eqasc_train_2361", "prediction": "all x.(LivingThing(x) -> -SurvivesWithoutOxygen(x))", "score": 0}
{"id": "eqasc_train_2362", "prediction": "all x.(Survival(x) -> (Live(x) & Live(x)))", "score": 0}
{"id": "eqasc_train_2363", "prediction": "all x.(Cell(x) -> -LivesWithoutOxygen(x))", "score": 0}
{"id": "eqasc_train_2364", "prediction": "(Molecule(O2) & Oxygen(O2))", "score": 0}
{"id": "eqasc_train_2365", "prediction": "all x.(Cell(x) -> -SurvivesWithoutO2.(Cell(x)))", "score": -1}
{"id": "eqasc_train_2366", "prediction": "all x y.((Ssperm(x) & Egg(y) & InsideArchegonium(x)) -> SwimsTo(x,y))", "score": 0}
{"id": "eqasc_train_2367", "prediction": "all x y z.((MaleGamete(x) & Egg(y) & Archegonium(z)) -> SwimsToInside(x,y,z)) FertilizationOccurs(x))", "score": -1}
{"id": "eqasc_train_2368", "prediction": "all x y.((ConceptionOccursInFemale(x) & Sperm(y)) -> FertilizesEgg(y))", "score": 0}
{"id": "eqasc_train_2369", "prediction": "all x y z.((Ssperm(x) & Egg(y) & Sperm(z) & Enters(x,y)) -> ConceptionOccurs(x))", "score": 0}
{"id": "eqasc_train_2370", "prediction": "all x.(Pregnancy(x) -> FertileEgg(x))", "score": 0}
{"id": "eqasc_train_2371", "prediction": "all x y.((Ssperm(x) & Egg(y) & Archegonium(z)) -> SwimsTo(x,y,z))", "score": 0}
{"id": "eqasc_train_2372", "prediction": "all x.(Fertilized(x) -> ImplantsEggInUterus(x))", "score": 0}
{"id": "eqasc_train_2373", "prediction": "all x y z.((Egg(x) & Sperm(y) & Sperm(z) & ImplantsInUterus(x,y,z)) -> SwimToEgg(x,y))", "score": 0}
{"id": "eqasc_train_2374", "prediction": "all x.((Egg(x) & Sperm(x)) -> FusesAndJoins(x))", "score": 0}
{"id": "eqasc_train_2375", "prediction": "all x y.((Egg(x) & Sperm(y) & SwimsTo(x,y)) -> CanFuse(x,y))", "score": 0}
{"id": "eqasc_train_2376", "prediction": "all x.(SspermNucleus(x) -> ReleasedIntoArchegonium(x))", "score": 0}
{"id": "eqasc_train_2377", "prediction": "all x y.((SspermNucleus(x) & Egg(y)) -> Enters(x,y))", "score": 0}
{"id": "eqasc_train_2378", "prediction": "all x.((Egg(x) & Fertilized(x)) -> ComplexProcessOfReproduction(x))", "score": 0}
{"id": "eqasc_train_2379", "prediction": "all x y.((Ssperm(x) & Egg(y) & Archegonium(z)) -> SwimsToInside(x,y,z))", "score": 0}
{"id": "eqasc_train_2380", "prediction": "all x.(Archegonium(x) -> SecretesSuccrose(x))", "score": 0}
{"id": "eqasc_train_2381", "prediction": "all x y z.((Succrose(x) & Sperm(y) & Egg(z)) -> AttractsToForFertilization(x,y,z))", "score": 0}
{"id": "eqasc_train_2382", "prediction": "all x.(FertilizedEgg(x) -> (ImplantsInUterus(x) & CausesPregnancy(x)))", "score": 0}
{"id": "eqasc_train_2383", "prediction": "all x y.((Ssperm(x) & Egg(y) & Archegonium(z)) -> SwimsTo(x,y,z))", "score": 0}
{"id": "eqasc_train_2384", "prediction": "all x y.((Male(x) & Female(y)) -> (Sperm(x) & Egg(y)))", "score": 0}
{"id": "eqasc_train_2385", "prediction": "all x y.((MaleGamete(x) & Egg(y)) -> SwimsTo(x,y))", "score": 0}
{"id": "eqasc_train_2386", "prediction": "all x.(Archegonium(x) -> ContainsSingleEgg(x))", "score": 0}
{"id": "eqasc_train_2387", "prediction": "all x y.((Ssperm(x) & SingleEgg(y) & EmbedInProthallus(x,y)) -> FertilizationOccurs(x))", "score": 0}
{"id": "eqasc_train_2388", "prediction": "all x y.((SspermCell(x) & EggCell(y) & Fertilizes(x,y)) -> (Fertile(x,y) | Fertile(x,y)))", "score": 0}
{"id": "eqasc_train_2389", "prediction": "all x y z.((Sperm(x) & Egg(y) & Archegonium(z)) -> (SwimsTo(x,y) & FormsZygote(x,z)))", "score": 0}
{"id": "eqasc_train_2390", "prediction": "all x.(Archegonium(x) -> FlaskShape(x))", "score": 0}
{"id": "eqasc_train_2391", "prediction": "all x y z.((Ssperm(x) & Egg(y) & FlaskShapeOrgan(z)) -> SwimsTo(x,y,z)) FertilizationOccurs(x))", "score": -1}
{"id": "eqasc_train_2392", "prediction": "all x y.((FlagellatedSsperm(x) & Archegonium(y)) -> NeedsWater(x))", "score": 0}
{"id": "eqasc_train_2393", "prediction": "all x.(Fertilization(x) -> RequiresWater(x))", "score": 0}
{"id": "eqasc_train_2394", "prediction": "all x y.((BrightObject(x) & Eyes(y)) -> NegativeImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_2395", "prediction": "all x.(Outside(x) -> BrightSun(x))", "score": 0}
{"id": "eqasc_train_2396", "prediction": "all x.(LookingAtSun(x) -> NegativeImpactOnEyes(x))", "score": 0}
{"id": "eqasc_train_2397", "prediction": "all x y.((Sun(x) & Eyes(y)) -> NegativeImpact(x,y))", "score": 0}
{"id": "eqasc_train_2398", "prediction": "all x.(BrightSun(x) -> WorksBest(x))", "score": 0}
{"id": "eqasc_train_2399", "prediction": "all x.(LooksAtSun(x) -> NegativeImpactOnEyes(x))", "score": 0}
{"id": "eqasc_train_2400", "prediction": "all x.(Sunglasses(x) -> ProtectsFromGlareOffRiverSurfaces(x))", "score": 0}
{"id": "eqasc_train_2401", "prediction": "all x.(Sunglasses(x) -> (ProtectsAgainstBrightObjects(x) & ProtectsAgainstGlareOffRiverSurfaces(x)))", "score": 0}
{"id": "eqasc_train_2402", "prediction": "all x.(LooksAtSun(x) -> NegativeImpactOnEyes(x))", "score": 0}
{"id": "eqasc_train_2403", "prediction": "all x y.((IntenseLight(x) & Sun(y) & Imager(z)) -> BurnsDamaging(x,z))", "score": 0}
{"id": "eqasc_train_2404", "prediction": "all x y.((BrightObject(x) & Retina(y)) -> NegativeImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_2405", "prediction": "all x.(LooksAtSun(x) -> NegativeImpactOnEyes(x))", "score": 0}
{"id": "eqasc_train_2406", "prediction": "all x.(UltravioletRadiation(x) -> (DamagesEyeLens(x) & DamagesRetina(x)))", "score": 0}
{"id": "eqasc_train_2407", "prediction": "all x.((BrightObject(x) & LooksAt(x,y)) -> DamagesRetina(x))", "score": 0}
{"id": "eqasc_train_2408", "prediction": "all x y.((LookingAtSun(x) & Eyes(y)) -> NegativeImpact(x,y))", "score": 0}
{"id": "eqasc_train_2409", "prediction": "all x.(BrightObject(x) -> Star(x))", "score": 0}
{"id": "eqasc_train_2410", "prediction": "all x y.((Star(x) & Eye(y)) -> NegativelyImpacts(x,y))", "score": 0}
{"id": "eqasc_train_2411", "prediction": "all x.((Eye(x) | DentalDisorder(x)) -> CausesHeadaches(x))", "score": 0}
{"id": "eqasc_train_2412", "prediction": "all x.((LookingAtBrightObjects(x) & CanCauseHeadaches(x)) -> CanCauseHeadaches(x))", "score": 0}
{"id": "eqasc_train_2413", "prediction": "all x y.((Organism(x) & Organims(y) & PreventsHeatTransfer(x,y)) -> KeepsWarm(x,y))", "score": 0}
{"id": "eqasc_train_2414", "prediction": "all x.(BodyHeat(x) -> CapturedInHaircoat(x))", "score": 0}
{"id": "eqasc_train_2415", "prediction": "all x y.((Organism(x) & Organism(y)) -> HelpsKeepWarm(x,y))", "score": 0}
{"id": "eqasc_train_2416", "prediction": "all x.(Hat(x) -> InsulationAgainstConvectiveHeatTransfer(x))", "score": 0}
{"id": "eqasc_train_2417", "prediction": "all x.(WearsHat(x) -> Insulation(x))", "score": 0}
{"id": "eqasc_train_2418", "prediction": "(all x.(Fur(x) | Feather(x)) -> HoldsHeatIn(x)) & exists y.(BodyHeat(y) & -EscapesHeat(y)))", "score": -1}
{"id": "eqasc_train_2419", "prediction": "all x y.((Fur(x) & Organism(y)) -> CausesToKeepWarm(x,y))", "score": 0}
{"id": "eqasc_train_2420", "prediction": "all x.(Leaves(x) -> KeepsAnimalsWarm(x))", "score": 0}
{"id": "eqasc_train_2421", "prediction": "all x y.((Leaves(x) & Animal(y)) -> StopsTransferOfHeat(x,y))", "score": 0}
{"id": "eqasc_train_2422", "prediction": "all x.(Leaves(x) -> KeepsAnimalsWarm(x))", "score": 0}
{"id": "eqasc_train_2423", "prediction": "all x y.((Leaves(x) & Animal(y)) -> PreventsHeatTransfer(x,y))", "score": 0}
{"id": "eqasc_train_2424", "prediction": "all x.(OrganicWoodenBooties(x) -> (SweetHandKnitBooties(x) & KeepsLittleFeetWarm(x)))", "score": 0}
{"id": "eqasc_train_2425", "prediction": "all x y.((HandKnitBooty(x) & Organism(y)) -> PreventsHeatTransfer(x,y))", "score": 0}
{"id": "eqasc_train_2426", "prediction": "all x.(AdultHuman(x) -> DiploidOrganism(x))", "score": 0}
{"id": "eqasc_train_2427", "prediction": "all x y.((PreventsHeatTransfer(x) & Human(y)) -> KeepsWarm(y,x))", "score": 0}
{"id": "eqasc_train_2428", "prediction": "all x.(Heat(x) -> ManifestationOfEnergy(x))", "score": 0}
{"id": "eqasc_train_2429", "prediction": "all x y.((Organism(x) & Organism(y) & PreventsTransferOfEnergy(x,y)) -> KeepsWarm(x,y))", "score": 0}
{"id": "eqasc_train_2430", "prediction": "all x.(Radiation(x) -> Warming(x,BobsFace))", "score": 0}
{"id": "eqasc_train_2431", "prediction": "all x y.((Radiation(x) & Human(y)) -> KeepsWarm(x,y))", "score": 0}
{"id": "eqasc_train_2432", "prediction": "all x y z.((PreventsHeatTransfer(x) & Animal(y) & Body(z)) -> KeepsWarm(y,z))", "score": 0}
{"id": "eqasc_train_2433", "prediction": "all x.(Sweat(x) -> (CoolsBody(x) & PreventsInternalHeat(x)))", "score": 0}
{"id": "eqasc_train_2434", "prediction": "all x y.((Sweating(x) & Body(y)) -> IncreasesHeatTransfer(x,y))", "score": 0}
{"id": "eqasc_train_2435", "prediction": "all x.((ArcticFox(x) & CoolWeather(x)) -> WarmUpByThickFur(x))", "score": 0}
{"id": "eqasc_train_2436", "prediction": "all x y.((Fur(x) & Organism(y)) -> PreventsHeatTransfer(x,y))", "score": 0}
{"id": "eqasc_train_2437", "prediction": "all x y.((Animal(x) & Fur(y) & Feather(y)) -> KeepsWarmDuringHarshWinter(x,y))", "score": 0}
{"id": "eqasc_train_2438", "prediction": "all x y.((Animal(x) & Fur(y) & Feather(y)) -> HelpsPreventHeatTransfer(x,y))", "score": 0}
{"id": "eqasc_train_2439", "prediction": "all x.(Dirt(x) -> KeepsAnimalsWarm(x))", "score": 0}
{"id": "eqasc_train_2440", "prediction": "all x y.((Dirt(x) & Organism(y)) -> PreventsHeatTransfer(x,y))", "score": 0}
{"id": "eqasc_train_2441", "prediction": "all x.(Heat(x) -> MeasuresTransferableEnergy(x))", "score": 0}
{"id": "eqasc_train_2442", "prediction": "all x y.((Organism(x) & PreventsTransferOfEnergy(x,y)) -> KeepsWarm(x))", "score": 0}
{"id": "eqasc_train_2443", "prediction": "all x y.((WebbedFeet(x) & AquaticAnimal(y)) -> MovesFasterThroughWater(x,y))", "score": 0}
{"id": "eqasc_train_2444", "prediction": "all x.(Duck(x) -> (HasWebbedFeet(x) & DesignedForSwimming(x)))", "score": 0}
{"id": "eqasc_train_2445", "prediction": "all x.((Feet(x) & DesignedForSwimming(x)) -> UsedForMovingFaster(x))", "score": 0}
{"id": "eqasc_train_2446", "prediction": "all x.(Duck(x) -> WebbingOnFeet(x))", "score": 0}
{"id": "eqasc_train_2447", "prediction": "all x.(Duck(x) -> MovesFast(x))", "score": 0}
{"id": "eqasc_train_2448", "prediction": "all x.((AquaticAnimal(x) & MovingThroughWater(x)) -> Aerodynamics(x))", "score": 0}
{"id": "eqasc_train_2449", "prediction": "all x y.((AquaticAnimal(x) & Water(y) & InWater(x,y)) -> UsesWebbedFeet(x,y))", "score": 0}
{"id": "eqasc_train_2450", "prediction": "all x.(Duck(x) -> HasWebbedFeet(x))", "score": 0}
{"id": "eqasc_train_2451", "prediction": "all x.(Duck(x) -> (MoveFaster(x) & Water(x) & Feet(x)))", "score": 0}
{"id": "eqasc_train_2452", "prediction": "all x.(Duck(x) -> AquaticBird(x))", "score": 0}
{"id": "eqasc_train_2453", "prediction": "all x y.((WebbedFeet(x) & Duck(y)) -> MovesFasterThroughWater(x,y))", "score": 0}
{"id": "eqasc_train_2454", "prediction": "all x.(Duck(x) -> (MovesFast(x) & SpecializedFeet(x) & Water(x)))", "score": 0}
{"id": "eqasc_train_2455", "prediction": "all x.(Beaver(x) -> AquaticAnimal(x))", "score": 2}
{"id": "eqasc_train_2456", "prediction": "all x.(Beaver(x) -> UsesWebbedFeetToMoveThroughWater(x))", "score": 0}
{"id": "eqasc_train_2457", "prediction": "all x.(Animal(x) -> (MovesAround(x) & SeekingPrey(x)))", "score": 0}
{"id": "eqasc_train_2458", "prediction": "all x y.((WebbedFeet(x) & AquaticAnimal(y)) -> HelpsCatchesPrey(x,y))", "score": 0}
{"id": "eqasc_train_2459", "prediction": "all x.(Feet(x) -> (Webbed(x) & ServesAsRudder(x)))", "score": 0}
{"id": "eqasc_train_2460", "prediction": "all x.(AquaticAnimal(x) -> UsesFeetAsRudder(x))", "score": 0}
{"id": "eqasc_train_2461", "prediction": "all x y.((Lung(x) & LandAnimal(y)) -> UsedForBreathingAir(x,y))", "score": 0}
{"id": "eqasc_train_2462", "prediction": "all x.(LandAnimal(x) -> HasFourLimbs(x))", "score": 0}
{"id": "eqasc_train_2463", "prediction": "all x y.((Lung(x) & Animal(y) & HasFourLimbs(y)) -> UsedForBreathingAir(x,y))", "score": 0}
{"id": "eqasc_train_2464", "prediction": "all x.(AfricanElephant(x) -> LandAnimal(x))", "score": 0}
{"id": "eqasc_train_2465", "prediction": "all x.(AfricanElephant(x) -> HasLungs(x))", "score": 0}
{"id": "eqasc_train_2466", "prediction": "all x.(Elephant(x) -> LargestAnimalOnLand(x))", "score": 0}
{"id": "eqasc_train_2467", "prediction": "all x y.((Lung(x) & Elephant(y)) -> UsedForBreathingAir(x,y))", "score": 0}
{"id": "eqasc_train_2468", "prediction": "all x.(Mammal(x) -> (Animal(x) & HasLungs(x) & BreathesAir(x)))", "score": 0}
{"id": "eqasc_train_2469", "prediction": "all x.(Mammal(x) -> BreathesWithLungs(x))", "score": 0}
{"id": "eqasc_train_2470", "prediction": "all x.(Life(x) -> (Breath(x) & BreathHealing(x)))", "score": 0}
{"id": "eqasc_train_2471", "prediction": "all x y.((LandAnimal(x) & Lung(y)) -> UsesForLife(x,y))", "score": 0}
{"id": "eqasc_train_2472", "prediction": "all x.(Lungs(x) -> SmallSack(x))", "score": 0}
{"id": "eqasc_train_2473", "prediction": "all x.(Alveoli(x) -> BreathesAir(x))", "score": 0}
{"id": "eqasc_train_2474", "prediction": "all x.(Elephant(x) -> LargestLandAnimal(x))", "score": 0}
{"id": "eqasc_train_2475", "prediction": "all x.(Fungus(x) -> (GetsOrganicCompounds(x) & FromDeadOrganisms(x)))", "score": 0}
{"id": "eqasc_train_2476", "prediction": "all x.(Fungus(x) -> (Yeast(y) | Mold(y) | FleshyFungus(x)))", "score": 0}
{"id": "eqasc_train_2477", "prediction": "all x.(Mold(x) -> (GetsOrganicCompound(x) & FromDeadOrganisms(x)))", "score": 0}
{"id": "eqasc_train_2478", "prediction": "all x.((Mold(x) | Yeast(x)) -> Fungus(x))", "score": 0}
{"id": "eqasc_train_2479", "prediction": "all x y z.((Mold(x) & OrganicCompound(y) & DeadOrganism(z)) -> GetsFrom(x,y,z))", "score": 0}
{"id": "eqasc_train_2480", "prediction": "all x y.((Fungus(x) & Bacteria(y)) -> FeedsOnDeadFibers(x,y))", "score": 0}
{"id": "eqasc_train_2481", "prediction": "all x y.((Bacteria(x) & Organism(y)) -> FeedsOn(x,y))", "score": 0}
{"id": "eqasc_train_2482", "prediction": "all x.(Protein(x) -> ComplexOrganicCompound(x))", "score": 0}
{"id": "eqasc_train_2483", "prediction": "all x.(Fungus(x) -> GetProteinsFromDeadOrganisms(x))", "score": 0}
{"id": "eqasc_train_2484", "prediction": "all x.(Fungus(x) -> (DecomposesDeadOrganicMatter(x) & (Leaves(x) | Wood(x) | Feces(x))))", "score": 0}
{"id": "eqasc_train_2485", "prediction": "all x y.((Fungus(x) & DeadMatter(y)) -> Eats(x,y))", "score": 0}
{"id": "eqasc_train_2486", "prediction": "all x.((Mushroom(x) | Mold(x)) -> Fungus(x))", "score": 0}
{"id": "eqasc_train_2487", "prediction": "all x y.((Mushroom(x) & DeadOrganism(y)) -> CanGetOrganicCompoundsFrom(x,y))", "score": 0}
{"id": "eqasc_train_2488", "prediction": "all x.(Mold(x) -> MicroscopicFungus(x))", "score": 0}
{"id": "eqasc_train_2489", "prediction": "all x.(Mold(x) -> (GetsOrganicCompounds(x) & FromDeadOrganisms(x)))", "score": 0}
{"id": "eqasc_train_2490", "prediction": "all x y.((Bacteria(x) | Fungi(x) | Plant(x)) -> (BreaksDownOrganicCompounds(x) | ExtractsMetals(x)))", "score": 0}
{"id": "eqasc_train_2491", "prediction": "all x y.((OrganicCompound(x) & Plant(y)) -> BrokenDownBy(x,y))", "score": 0}
{"id": "eqasc_train_2492", "prediction": "all x.((Mould(x) | Yeast(x) | Rust(x) | Smut(x) | Mildew(x) | Mushroom(x)) -> Fungus(x))", "score": 0}
{"id": "eqasc_train_2493", "prediction": "all x y.((Mildew(x) & DeadOrganism(y)) -> GetsOrganicCompoundsFrom(x,y))", "score": 0}
{"id": "eqasc_train_2494", "prediction": "all x.(Fungus(x) -> (Heterotroph(x) & UtilizesOrganicMatter(x)))", "score": 0}
{"id": "eqasc_train_2495", "prediction": "all x y.((Heterotroph(x) & OrganicCompound(y)) -> UtilizesDeadOrganisms(x,y))", "score": 0}
{"id": "eqasc_train_2496", "prediction": "all x.(ShelfFungus(x) -> (FoundOnDeadTrees(x) & FoundOnDecayingTrees(x)))", "score": 0}
{"id": "eqasc_train_2497", "prediction": "exists x.(Fungus(x) & LivesOnDecayingTrees(x))", "score": 0}
{"id": "eqasc_train_2498", "prediction": "all x.(Decomposer(x) -> (DecaysDeadOrganisms(x) | DecaysWastes(x)))", "score": 0}
{"id": "eqasc_train_2499", "prediction": "all x.(Fungus(x) -> (GetsOrganicCompoundsFromDecomposers(x) & Decomposers(x)))", "score": 0}
{"id": "eqasc_train_2500", "prediction": "all x.(Fungus(x) -> ObligatoryHeterotroph(x))", "score": 0}
{"id": "eqasc_train_2501", "prediction": "all x.((Hydrotroph(x) & Obligatory(x)) -> GetsOrganicCompoundsFromDeadOrganisms(x))", "score": 0}
{"id": "eqasc_train_2502", "prediction": "all x.(Heterotroph(x) -> (GetsFoodByEatingLivingThings(x)))", "score": 0}
{"id": "eqasc_train_2503", "prediction": "all x y.((Fish(x) & LivingThing(y)) -> Eats(x,y))", "score": 0}
{"id": "eqasc_train_2504", "prediction": "all x.(Animal(x) -> (Heterotroph(x) | OtherFeeder(x)))", "score": 0}
{"id": "eqasc_train_2505", "prediction": "all x.(Animal(x) -> (GetsFood(x) & EatsLivingThings(x)))", "score": 0}
{"id": "eqasc_train_2506", "prediction": "all x.(Animal(x) -> Heterotrophic(x))", "score": 0}
{"id": "eqasc_train_2507", "prediction": "all x.(Animal(x) -> (GetsFoodByEatingLivingThings(x) & EatsLivingThings(x)))", "score": 0}
{"id": "eqasc_train_2508", "prediction": "all x.(Animal(x) -> (EatsLivingThings(x) & GetsFood(x)))", "score": 0}
{"id": "eqasc_train_2509", "prediction": "all x y.((Animal(x) & LivingThing(y)) -> GetsFoodByEating(x,y))", "score": 0}
{"id": "eqasc_train_2510", "prediction": "all x.(GreatEgret(x) -> Heterotroph(x))", "score": 0}
{"id": "eqasc_train_2511", "prediction": "all x.(GreatEgret(x) -> (GetsFoodByEatingOtherLivings(x)))", "score": 0}
{"id": "eqasc_train_2512", "prediction": "all x.(Fish(x) -> (GetsFoodByEatingLivingThings(x) & EatsLivingThings(x)))", "score": 0}
{"id": "eqasc_train_2513", "prediction": "all x y.((Fish(x) & LivingThing(y)) -> GetsFoodByEating(x,y))", "score": 0}
{"id": "eqasc_train_2514", "prediction": "exists x.(Arthropod(x) & ExcretoryStructure(x))", "score": 0}
{"id": "eqasc_train_2515", "prediction": "all x.(Insect(x) -> Arthropod(x))", "score": 3}
{"id": "eqasc_train_2516", "prediction": "exists x.(Insect(x) & ExcrectoryStructure(x))", "score": 0}
{"id": "eqasc_train_2517", "prediction": "all x.(Arthropod(x) -> MemberOfPhylumArthropoda(x))", "score": 0}
{"id": "eqasc_train_2518", "prediction": "all x.(PhylumArthropoda(x) -> HasSpecialExcretoryStructures(x))", "score": 0}
{"id": "eqasc_train_2519", "prediction": "all x.(Crustacean(x) -> (Arthropod(x) & LikeInsects(x)))", "score": 0}
{"id": "eqasc_train_2520", "prediction": "all x.((Crustacean(x) | Insect(x)) -> HasSpecialExcretoryStructures(x))", "score": 0}
{"id": "eqasc_train_2521", "prediction": "all x.(Insect(x) -> Arthropod(x))", "score": 1}
{"id": "eqasc_train_2522", "prediction": "all x.(Insect(x) -> HasSpecialExcretoryStructures(x))", "score": 0}
{"id": "eqasc_train_2523", "prediction": "exists x.(Insect(x) & HasSpecialExcretoryStructures(x))", "score": 0}
{"id": "eqasc_train_2524", "prediction": "all x.(Arthropod(x) -> ContainsJointedAppendages(x))", "score": 0}
{"id": "eqasc_train_2525", "prediction": "exists x.(Animal(x) & JointedAppendages(x) & ExcretoryStructure(x))", "score": 0}
{"id": "eqasc_train_2526", "prediction": "all x y.((Ant(x) & Lobster(y)) -> Arthropod(x))", "score": 0}
{"id": "eqasc_train_2527", "prediction": "all x.(Lobster(x) -> HasSpecialExcretoryStructures(x))", "score": 0}
{"id": "eqasc_train_2528", "prediction": "exists x.(Insect(x) & HasSpecialExcretoryStructures(x))", "score": 0}
{"id": "eqasc_train_2529", "prediction": "all x.(TerrestrialArthropod(x) -> (ExcretorySystem(x) & ConservesWater(x) & EliminatesWaste(x)))", "score": 0}
{"id": "eqasc_train_2530", "prediction": "exists x.(Animal(x) & ExcretoryStructures(x) & ConservesWater(x) & ElminatesWaste(x))", "score": 0}
{"id": "eqasc_train_2531", "prediction": "all x.(Plant(x) -> MajorProducerInTerrestrialBiomes(x))", "score": 0}
{"id": "eqasc_train_2532", "prediction": "exists x.(DesertBiome(x) & DifferentTypes(x))", "score": 0}
{"id": "eqasc_train_2533", "prediction": "all x y.((Plant(x) & Desert(y)) -> MajorProducerInDesert(x,y))", "score": 0}
{"id": "eqasc_train_2534", "prediction": "all x.(Biome(x) -> GlobalEcosystem(x))", "score": 0}
{"id": "eqasc_train_2535", "prediction": "all x y.((Plant(x) & TerrestrialEcosystem(y)) -> MajorProducerIn(x,y))", "score": 0}
{"id": "eqasc_train_2536", "prediction": "all x y.((Plant(x) & Consumer(y)) -> Omnivore(x))", "score": 0}
{"id": "eqasc_train_2537", "prediction": "all x y.((Consumer(x) & TerrestrialBiome(y)) -> Omnivore(x,y))", "score": 0}
{"id": "eqasc_train_2538", "prediction": "all x.(TerrestrialBiome(x) -> (DefinitedByPlantLife(x)))", "score": 0}
{"id": "eqasc_train_2539", "prediction": "all x y.((Plant(x) & Biome(y)) -> (MainProducer(x,y) & DefinishedByPlantLife(x)))", "score": 0}
{"id": "eqasc_train_2540", "prediction": "all x.(GreenPlant(x) -> FoodProducer(x))", "score": 0}
{"id": "eqasc_train_2541", "prediction": "all x y.((Plant(x) & TerrestrialBiome(y)) -> ProvidesFoodFor(x,y))", "score": 0}
{"id": "eqasc_train_2542", "prediction": "all x.(Plant(x) -> (MainProducerInTerrestrialGlobalEcosystems(x) & MajorProducerInTerrestrialGlobalEcosystems(x)))", "score": 0}
{"id": "eqasc_train_2543", "prediction": "all x.(Grass(x) -> DistinctivePlant(x))", "score": 0}
{"id": "eqasc_train_2544", "prediction": "all x.(Grass(x) -> ProducerInTerrestrialBiomes(x))", "score": 0}
{"id": "eqasc_train_2545", "prediction": "all x.(TerrestrialBiomeDistribution(x) -> (InfluencedByTemperature(x) & InfluencedByPrecipitation(x)))", "score": 0}
{"id": "eqasc_train_2546", "prediction": "all x.(Plant(x) -> (ProducerInTemperature(x) & ProducerInPrecipitation(x)))", "score": 0}
{"id": "eqasc_train_2547", "prediction": "all x.(Bamboo(x) -> MajorProducerInTerrestrialBiomes(x))", "score": 0}
{"id": "eqasc_train_2548", "prediction": "all x.(Biome(x) -> (Ecosystem(x) & MakesUpLand(x)))", "score": 0}
{"id": "eqasc_train_2549", "prediction": "all x y.((Plant(x) & Land(y)) -> (ProducerOfEcosystems(x,y) & MakesUpLand(x,y)))", "score": 0}
{"id": "eqasc_train_2550", "prediction": "all x.(ElectricDevice(x) -> RequiresElectricalEnergy(x))", "score": 0}
{"id": "eqasc_train_2551", "prediction": "all x.(Computer(x) -> (ElectronicDevice(x) & DealsInPulsesOfElectricity(x)))", "score": 0}
{"id": "eqasc_train_2552", "prediction": "all x.(Computer(x) -> RequiresElectricalEnergy(x))", "score": 0}
{"id": "eqasc_train_2553", "prediction": "all x y.((ElectricalField(x) & ElectricalDevice(y) & Television(y)) -> ResultsFrom(x,y))", "score": 0}
{"id": "eqasc_train_2554", "prediction": "all x.(Television(x) -> RequiresElectricalEnergy(x))", "score": 0}
{"id": "eqasc_train_2555", "prediction": "all x.((Device(x) & (PDA(x) | Phone(x) | Pager(x))) -> Device(x))", "score": 0}
{"id": "eqasc_train_2556", "prediction": "all x.(PDA(x) -> RequiresElectricalEnergy(x))", "score": 0}
{"id": "eqasc_train_2557", "prediction": "all x.(ElectricDevice(x) -> RequiresFlowOfElectrons(x))", "score": 0}
{"id": "eqasc_train_2558", "prediction": "all x.(ElectricDevice(x) -> RequiresPowerPlant(x))", "score": 0}
{"id": "eqasc_train_2559", "prediction": "all x.(OrdinaryPhone(x) -> MobileDevice(x))", "score": 0}
{"id": "eqasc_train_2560", "prediction": "all x.(Phone(x) -> RequiresElectricalEnergy(x))", "score": 0}
{"id": "eqasc_train_2561", "prediction": "all x.(LieDetector(x) -> (ElectricalDevice(x) | MechanicalDevice(x)))", "score": 0}
{"id": "eqasc_train_2562", "prediction": "all x.(LieDetector(x) -> RequiresElectricalEnergy(x))", "score": 0}
{"id": "eqasc_train_2563", "prediction": "all x.(Device(x) -> RequiresKineticEnergy(x))", "score": 0}
{"id": "eqasc_train_2564", "prediction": "all x.(Earthworm(x) -> (ImportantDepositFeeder(x) & HelpsFormSoil(x) & EnrichSoil(x)))", "score": 0}
{"id": "eqasc_train_2565", "prediction": "all x.(Annelid(x) -> EnrichSoil(x))", "score": 0}
{"id": "eqasc_train_2566", "prediction": "all x.(DepositFeeder(x) -> (IngestsSediment(x) & ExtractsFoodParticles(x)))", "score": 0}
{"id": "eqasc_train_2567", "prediction": "all x y.((Earthworm(x) & Sediment(y)) -> (Ingests(x,y) & ExtractsFoodParticlesFromSoil(x)))", "score": 0}
{"id": "eqasc_train_2568", "prediction": "all x.(Earthworm(x) -> Hermaphrodite(x))", "score": 0}
{"id": "eqasc_train_2569", "prediction": "all x.(Hermaphrodite(x) -> (ImportantDepositFeeder(x) & HelpsFormSoil(x) & HelpsEnrichSoil(x)))", "score": 0}
{"id": "eqasc_train_2570", "prediction": "all x.(Earthworm(x) -> (CaseyEarthworms(x) & Invertebrate(x)))", "score": 0}
{"id": "eqasc_train_2571", "prediction": "all x.(Invertebrate(x) -> DepositFeeder(x))", "score": 0}
{"id": "eqasc_train_2572", "prediction": "all x.(DepositFeeder(x) -> (IngestsSediment(x) & ExtractsFood(x)))", "score": 0}
{"id": "eqasc_train_2573", "prediction": "all x.(Earthworm(x) -> (IngestsSediment(x) & HelpsFormSoil(x) & HelpsEnrichSoil(x)))", "score": 0}
{"id": "eqasc_train_2574", "prediction": "all x.(GoodSoil(x) -> GrowsGoodPlants(x))", "score": 0}
{"id": "eqasc_train_2575", "prediction": "all x y.((Earthworm(x) & Plant(y)) -> HelpsGrow(x,y))", "score": 0}
{"id": "eqasc_train_2576", "prediction": "all x y z.((Earthworm(x) & Sediment(y) & Soil(z)) -> (Ingests(x,y) & GetsFoodParticles(x,z) & EnrichesSoil(x,z)))", "score": 0}
{"id": "eqasc_train_2577", "prediction": "all x.(Earthworm(x) -> (FamiliarDecomposer(x) | FamiliarDecomposer(x)))", "score": 0}
{"id": "eqasc_train_2578", "prediction": "all x.(Decomposer(x) -> (HelpsFormSoil(x) & EnrichSoil(x)))", "score": 0}
{"id": "eqasc_train_2579", "prediction": "all x y.((Earthworm(x) & Sediment(y)) -> (Ingests(x,y) & ExtractsFoodParticles(x) & EnrichesSoil(x)))", "score": 0}
{"id": "eqasc_train_2580", "prediction": "all x.(Tullip(x) -> (PerformsBestInSandyOrganicallyEnrichedSoil(x)))", "score": 0}
{"id": "eqasc_train_2581", "prediction": "all x.(Earthworm(x) -> (ImportantDepositFeeder(x) & HelpsFormOrganicMaterial(x) & HelpsAddOrganicMaterialToSoil(x)))", "score": 0}
{"id": "eqasc_train_2582", "prediction": "all x y.((Forest(x) & Plant(y)) -> (UsesSunlight(y) & UsesSoilNutrients(y)))", "score": 0}
{"id": "eqasc_train_2583", "prediction": "all x.(Earthworm(x) -> (TreasonableForPlants(x) & ImportantDepositFeeder(x)))", "score": 0}
{"id": "eqasc_train_2584", "prediction": "all x y.((Earthworm(x) & Sediment(y)) -> (Ingests(x,y) & ExtractsFoodParticles(x) & HelpsFormSoil(x) & EnrichSoil(x)))", "score": 0}
{"id": "eqasc_train_2585", "prediction": "all x.(Earth(x) -> (SitsForSoil(x) | StandsForDust(x) | StandsForGround(x)))", "score": 0}
{"id": "eqasc_train_2586", "prediction": "all x.(Earthworm(x) -> (ImportantDepositFeeder(x) & HelpsFormAndEnrichEarth(x)))", "score": 0}
{"id": "eqasc_train_2587", "prediction": "all x.(Earthworm(x) -> ImportantForPlants(x))", "score": 0}
{"id": "eqasc_train_2588", "prediction": "all x.(Vinaigrette(x) -> CausesHarmToEyes(x))", "score": 0}
{"id": "eqasc_train_2589", "prediction": "Ingredients: HabaneroPeppers, Vinegar,Salt,CiderVinegar.", "score": -1}
{"id": "eqasc_train_2590", "prediction": "all x.(Ingredient(x) -> (MildEyeIrritating(x) & MildEyeIrritating(x)))", "score": 0}
{"id": "eqasc_train_2591", "prediction": "all x.(Eyes(x) -> (FragilePartOfFace(x) & Eyes(x) & SurroundingArea(x)))", "score": 0}
{"id": "eqasc_train_2592", "prediction": "all x.(Vinaigar(x) -> CausesHarmToFragilePartOfFace(x))", "score": 0}
{"id": "eqasc_train_2593", "prediction": "all x.(Vinegar(x) -> (WeakAcid(x,3.5) & PH(x,5)))", "score": -1}
{"id": "eqasc_train_2594", "prediction": "all x.(Acid(x) -> CausesHarmToEyes(x))", "score": 0}
{"id": "eqasc_train_2595", "prediction": "all x.(DillPickle(x) -> AbsorbsVinaigrette(x))", "score": 0}
{"id": "eqasc_train_2596", "prediction": "all x.(DillPickle(x) -> CausesHarmToEyes(x))", "score": 0}
{"id": "eqasc_train_2597", "prediction": "all x.(Vinegar(x) -> DiluteAcid(x))", "score": 0}
{"id": "eqasc_train_2598", "prediction": "all x.(AceticAcid(x) -> CausesHarmToEyes(x))", "score": 0}
{"id": "eqasc_train_2599", "prediction": "all x.((Bacteria(x) & TurnsAlcoholIntoAceticAcid(x)) -> MainComponentOfVinaigore(x))", "score": 0}
{"id": "eqasc_train_2600", "prediction": "all x.(AceticAcid(x) -> CausesHarmToEyes(x))", "score": 0}
{"id": "eqasc_train_2601", "prediction": "all x.((Vinegar(x) | BatteryAcid(x) | Wine(x)) -> Acid(x))", "score": 0}
{"id": "eqasc_train_2602", "prediction": "all x.(Acid(x) -> CausesHarmToEyes(x))", "score": 0}
{"id": "eqasc_train_2603", "prediction": "all x.(Human(x) -> SeesWithEyes(x))", "score": 0}
{"id": "eqasc_train_2604", "prediction": "all x.(Vinaigrette(x) -> CanHarmHumanSight(x))", "score": 0}
{"id": "eqasc_train_2605", "prediction": "all x.(Acid(x) -> CausesHarmToEyes(x))", "score": 0}
{"id": "eqasc_train_2606", "prediction": "all x.((Eye(x) & Eye(x) & Eye(x) & Eye(x) & Eye(x) & Eye(x) & Eye(x) & Eye(x)) -> Retina(x))", "score": 0}
{"id": "eqasc_train_2607", "prediction": "all x.(Vinaigrette(x) -> CausesHarmToRetinal(x))", "score": 0}
{"id": "eqasc_train_2608", "prediction": "all x.(RiceVinegar(x) -> MadeFromFermentedRice(x))", "score": 0}
{"id": "eqasc_train_2609", "prediction": "all x.((MadeFromFermentedRice(x) & MadeFromFermentedRice(x)) -> CausesHarmToEyes(x))", "score": 0}
{"id": "eqasc_train_2610", "prediction": "all x.((Vinaigrette(x) & WearProtectiveEyeShields(x)) -> Wears(x))", "score": 0}
{"id": "eqasc_train_2611", "prediction": "all x.((WearShield(x) & AvoidHarmingEyes(x)) -> WearsShield(x))", "score": 0}
{"id": "eqasc_train_2612", "prediction": "all x.(Hair(x) -> (Fiber(x) & FoundInMammals(x)))", "score": 0}
{"id": "eqasc_train_2613", "prediction": "all x.(Human(x) -> HasHair(x))", "score": 0}
{"id": "eqasc_train_2614", "prediction": "all x.(Mammal(x) -> (Vertebrate(x) & (HasFur(x) | HasHair(x))))", "score": 1}
{"id": "eqasc_train_2615", "prediction": "all x.(Mammal(x) -> Vertebrate(x))", "score": 1}
{"id": "eqasc_train_2616", "prediction": "all x.(Mammal(x) -> (HasFur(x) | HasHair(x)))", "score": 0}
{"id": "eqasc_train_2617", "prediction": "all x.(Fur(x) -> (Fiber(x) & FoundInMammals(x)))", "score": 0}
{"id": "eqasc_train_2618", "prediction": "all x.(Bat(x) -> (HasHair(x) & AllMammal(x) & StaysWarm(x)))", "score": 0}
{"id": "eqasc_train_2619", "prediction": "all x y.((Mammal(x) & Mammal(y)) -> (FibersOn(x,y) & KeepsWarm(x,y)))", "score": 0}
{"id": "eqasc_train_2620", "prediction": "all x y.((Hair(x) & Keratin(y)) -> (MadeOf(x,y) & ContainsLotsOf(x,y)))", "score": 0}
{"id": "eqasc_train_2621", "prediction": "all x.(Mammal(x) -> ContainsKeratin(x))", "score": 0}
{"id": "eqasc_train_2622", "prediction": "all x.(Hair(x) -> GrowsFromHairBulb(x))", "score": 0}
{"id": "eqasc_train_2623", "prediction": "all x y.((Fiber(x) & FoundInMammals(x) & Bulb(y) & UnderSkin(y)) -> GrowsFrom(x,y))", "score": 0}
{"id": "eqasc_train_2624", "prediction": "all x.(Mammal(x) -> (HasFur(x) | HasHair(x)))", "score": 0}
{"id": "eqasc_train_2625", "prediction": "all x.(Fur(x) -> UniqueToMammals(x))", "score": 0}
{"id": "eqasc_train_2626", "prediction": "all x.(Mammal(x) -> (HasHair(x) & WarmBlooded(x) & NutriteYoungWithMilk(x)))", "score": 0}
{"id": "eqasc_train_2627", "prediction": "all x.(HairyAnimal(x) -> (NourishesYoungWithMilk(x) & YoungWithMilk(x)))", "score": 0}
{"id": "eqasc_train_2628", "prediction": "all x.(Animal(x) -> (Mammal(x) | Reptile(x) | Bird(x)))", "score": 0}
{"id": "eqasc_train_2629", "prediction": "all x.(Hair(x) -> (Fiber(x) & -FindsInReptilesOrBirds(x)))", "score": 0}
{"id": "eqasc_train_2630", "prediction": "all x.(Mammal(x) -> WarmBlooded(x))", "score": 0}
{"id": "eqasc_train_2631", "prediction": "all x.(Hair(x) -> (Fiber(x) & FoundInWarmBloodedAnimals(x)))", "score": 0}
{"id": "eqasc_train_2632", "prediction": "all x.(Bat(x) -> (Mammal(x) & Flies(x)))", "score": 0}
{"id": "eqasc_train_2633", "prediction": "all x.(Bat(x) -> (HasHair(x) & Fiber(x)))", "score": 0}
{"id": "eqasc_train_2634", "prediction": "all x.(BEAR(x) -> (BigFurryMammal(x) & Mammal(x)))", "score": 0}
{"id": "eqasc_train_2635", "prediction": "all x.(Bear(x) -> HasHair(x))", "score": 0}
{"id": "eqasc_train_2636", "prediction": "all x.((Hair(x) | Fiber(x)) -> ShedsEasily(x))", "score": 0}
{"id": "eqasc_train_2637", "prediction": "all x.(EasilyShedFibers(x) -> FoundInMammals(x))", "score": 0}
{"id": "eqasc_train_2638", "prediction": "all x.(Hair(x) -> AuburnRed(x))", "score": 0}
{"id": "eqasc_train_2639", "prediction": "all x.((Auburn(x) -> Fiber(x)) & FoundInMammals(x))", "score": 0}
{"id": "eqasc_train_2640", "prediction": "all x y.((SebaceousGlands(x) & HairFollicles(y)) -> ProtectsSkinOfMammals(x,y))", "score": 0}
{"id": "eqasc_train_2641", "prediction": "all x y.((FilmFollicle(x) & Mammal(y)) -> ProtectsSkin(x,y))", "score": 0}
{"id": "eqasc_train_2642", "prediction": "all x y.((CarEngine(x) & Gasoline(y)) -> ConvertsToMotionAndHeat(x,y))", "score": 1}
{"id": "eqasc_train_2643", "prediction": "all x.(InternalCombustionEngine(x) -> CreatesFriction(x))", "score": 0}
{"id": "eqasc_train_2644", "prediction": "all x.(CarEngine(x) -> ConvertsGasolineToFriction(x))", "score": 0}
{"id": "eqasc_train_2645", "prediction": "all x.(Combustion(x) -> OxidationReaction(x))", "score": 0}
{"id": "eqasc_train_2646", "prediction": "all x y.((CarEngine(x) & Gasoline(y)) -> ConvertsToMotionAndHeat(x,y))", "score": 1}
{"id": "eqasc_train_2647", "prediction": "all x.((Car(x) & Gasoline(x)) -> OperatesOn(x,FossilFuel))", "score": 0}
{"id": "eqasc_train_2648", "prediction": "all x.(CarEngine(x) -> UsesFossilFuel(x))", "score": 0}
{"id": "eqasc_train_2649", "prediction": "all x.(GasolineVapor(x) -> HighlyCombustible(x))", "score": 0}
{"id": "eqasc_train_2650", "prediction": "all x.(CarEngine(x) -> ConvertsCombustibleVaporsToMotion(x))", "score": 0}
{"id": "eqasc_train_2651", "prediction": "all x.((Material(x) & CombustibleLiquid(x)) -> ClassifiedAs(x,CombustibleLiquid))", "score": 0}
{"id": "eqasc_train_2652", "prediction": "all x y.((CarEngine(x) & Gasoline(y)) -> UsesAsLiquidFuel(x,y))", "score": 0}
{"id": "eqasc_train_2653", "prediction": "all x.(InternalCombustionEngine(x) -> BurnsFuelAndAirMixture(x))", "score": 0}
{"id": "eqasc_train_2654", "prediction": "all x.(CarEngine(x) -> (BurnsFuel(x) & BurnsAir(x) & CreatesMotion(x)))", "score": 0}
{"id": "eqasc_train_2655", "prediction": "all x.(Oxygen(x) -> AidToCombustion(x))", "score": 0}
{"id": "eqasc_train_2656", "prediction": "all x y.((Oxygen(x) & CarEngine(y)) -> (AidToConvertGasoline(x,y) & MotionAndHeat(y)))", "score": 0}
{"id": "eqasc_train_2657", "prediction": "all x.(Gasoline(x) -> MadeUpOfHydrogens(x))", "score": 0}
{"id": "eqasc_train_2658", "prediction": "all x y.((CarEngine(x) & Fuel(y)) -> ConvertsToMotion(x,y))", "score": 0}
{"id": "eqasc_train_2659", "prediction": "all x.((GasolineEngine(x) | DieselEngine(x)) -> -CompleteCombustion(x))", "score": 0}
{"id": "eqasc_train_2660", "prediction": "all x.(Car(x) -> -ConvertsGasolineToMotion(x))", "score": 0}
{"id": "eqasc_train_2661", "prediction": "all x.(Flashlight(x) -> (RequiresElectricitySource(x) & ProducesLight(x)))", "score": 2}
{"id": "eqasc_train_2662", "prediction": "all x y.((Battery(x) & (Watch(y) | Toy(y) | Flashlight(y))) -> ConnectedTo(x,y))", "score": 0}
{"id": "eqasc_train_2663", "prediction": "all x.(Flashlight(x) -> RequiresBatteries(x))", "score": 0}
{"id": "eqasc_train_2664", "prediction": "all x.(GoodLighting(x) -> (HelpsSeeStepsDown(x) | HelpsSeeRubsOrObstacles(x)))", "score": 0}
{"id": "eqasc_train_2665", "prediction": "all x.(Flashlight(x) -> HelpsPeopleSee(x))", "score": 0}
{"id": "eqasc_train_2666", "prediction": "all x.(ElectricEnergy(x) -> StoredInBatteries(x))", "score": 0}
{"id": "eqasc_train_2667", "prediction": "all x.(Flashlight(x) -> RequiresBatteries(x))", "score": 0}
{"id": "eqasc_train_2668", "prediction": "all x.(Flashlight(x) -> (PoweredByBatteries(x) & ProducesLight(x)))", "score": 0}
{"id": "eqasc_train_2669", "prediction": "all x.(ElectricalEnergy(x) -> Energy(x))", "score": 0}
{"id": "eqasc_train_2670", "prediction": "all x.(Flashlight(x) -> RequiresEnergySource(x))", "score": 0}
{"id": "eqasc_train_2671", "prediction": "all x.(Battery(x) -> BetterSourceOfDCElectricity(x))", "score": 0}
{"id": "eqasc_train_2672", "prediction": "all x.(Flashlight(x) -> RequiresBatteries(x))", "score": 0}
{"id": "eqasc_train_2673", "prediction": "all x.(Electricity(x) -> (Batteries(x) | ACCurrent(x)))", "score": 0}
{"id": "eqasc_train_2674", "prediction": "all x.(Flashlight(x) -> (UsesBatteries(x) & ProducesLight(x)))", "score": 0}
{"id": "eqasc_train_2675", "prediction": "all x y.((Flashlight(x) & RemoteControlledCar(y)) -> GetsEnergyFromBatteries(x,y))", "score": 0}
{"id": "eqasc_train_2676", "prediction": "all x.(Car(x) -> UsesElectricity(x))", "score": 0}
{"id": "eqasc_train_2677", "prediction": "all x.(Flashlight(x) -> HelpsSeeBetter(x))", "score": 0}
{"id": "eqasc_train_2678", "prediction": "all x y.((Child(x) & SourceOfElectricity(y)) -> SeesBetterWith(x,y))", "score": 0}
{"id": "eqasc_train_2679", "prediction": "all x.(ElectricPowerSource(x) -> OrdinaryBatteries(x))", "score": 0}
{"id": "eqasc_train_2680", "prediction": "all x.(Flashlight(x) -> RequiresBattery(x))", "score": 0}
{"id": "eqasc_train_2681", "prediction": "all x.((Lantern(x) | Flashlight(x)) -> UsedForCamping(x))", "score": 0}
{"id": "eqasc_train_2682", "prediction": "all x.(Lantern(x) -> (RequiresElectricitySource(x) & ProducesLight(x)))", "score": 0}
{"id": "eqasc_train_2683", "prediction": "all x.(Flashlight(x) -> SafestEmergencyLightingSource(x))", "score": 0}
{"id": "eqasc_train_2684", "prediction": "all x.(EmergencyLightingSource(x) -> RequiresElectricitySource(x))", "score": 0}
{"id": "eqasc_train_2685", "prediction": "all x.(Battery(x) -> (HandyPowerSource(x) & -HandyPowerSource(x)))", "score": 0}
{"id": "eqasc_train_2686", "prediction": "all x.(Flashlight(x) -> RequiresBattery(x))", "score": 0}
{"id": "eqasc_train_2687", "prediction": "all x.(Battery(x) -> TestedWithFlashlight(x))", "score": 0}
{"id": "eqasc_train_2688", "prediction": "all x.(Battery(x) -> (SourceOfElectricity(x) & ProducesLight(x)))", "score": 0}
{"id": "eqasc_train_2689", "prediction": "all x.(Flashlight(x) -> RequiresElectricitySource(x))", "score": 1}
{"id": "eqasc_train_2690", "prediction": "all x.(Light(x) -> Energy(x))", "score": 0}
{"id": "eqasc_train_2691", "prediction": "all x.(Flashlight(x) -> RequiresElectricitySource(x))", "score": 1}
{"id": "eqasc_train_2692", "prediction": "all x y.((Eukaryote(x) & Prokaryote(y)) -> MoreComplexCellDividend(x,y))", "score": 1}
{"id": "eqasc_train_2693", "prediction": "all x.(AsexualCellDividend(x) -> Mitosis(x))", "score": 0}
{"id": "eqasc_train_2694", "prediction": "all x y.((Eukaryote(x) & Prokaryote(y)) -> MoreComplex(x,y))", "score": 0}
{"id": "eqasc_train_2695", "prediction": "all x.(Plant(x) -> Eukaryote(x))", "score": 2}
{"id": "eqasc_train_2696", "prediction": "all x y.((Plant(x) & Prokaryote(y)) -> MoreComplexCellDividend(x,y))", "score": 1}
{"id": "eqasc_train_2697", "prediction": "all x.(Mitosis(x) -> CellDividection(x))", "score": 0}
{"id": "eqasc_train_2698", "prediction": "all x y.((Eukaryote(x) & Prokaryote(y)) -> MoreComplex(x,y))", "score": 0}
{"id": "eqasc_train_2699", "prediction": "all x y.((Eukaryote(x) & Prokaryote(y)) -> ComplexMitosis(x,y))", "score": 0}
{"id": "eqasc_train_2700", "prediction": "all x y.((Prokaryote(x) & Eukaryote(y)) -> (Smaller(x,y) & Simpler(x,y)))", "score": 0}
{"id": "eqasc_train_2701", "prediction": "all x.((CellDivision(x) & SmallerSimpleCells(x)) -> LessComplex(x))", "score": 0}
{"id": "eqasc_train_2702", "prediction": "all x y.((Eukaryote(x) & Prokaryote(y)) -> MoreComplexMitosis(x,y))", "score": 0}
{"id": "eqasc_train_2703", "prediction": "all x y.((Eukaryote(x) & Prokaryote(y)) -> MovesMoreFaster(x,y))", "score": 0}
{"id": "eqasc_train_2704", "prediction": "all x.((Organism(x) & FasterMovement(x)) -> MoreComplexCellDividend(x))", "score": 0}
{"id": "eqasc_train_2705", "prediction": "all x.(CellDividend(x) -> CellsReproducing(x))", "score": 0}
{"id": "eqasc_train_2706", "prediction": "all x y.((Eukaryote(x) & Prokaryote(y)) -> MoreComplexCellsReproducing(x,y))", "score": 0}
{"id": "eqasc_train_2707", "prediction": "all x y.((Plant(x) & Plant(y)) -> (MoreComplexCellDividence(x,y) & MoreComplexCellDividence(x,y)))", "score": 0}
{"id": "eqasc_train_2708", "prediction": "all x y.((CellDividend(x) & Population(y)) -> LeadsToGrowthOfCells(x,y))", "score": 0}
{"id": "eqasc_train_2709", "prediction": "all x y.((LeadsToGrowth(x) & Eukaryote(y)) -> MoreComplex(x,y))", "score": 0}
{"id": "eqasc_train_2710", "prediction": "all x.(Glass(x) -> CausesRefractionOfLight(x))", "score": 0}
{"id": "eqasc_train_2711", "prediction": "all x.(ElectromagneticSpectrum(x) -> DifferentWavelengthsOfLight(x))", "score": 0}
{"id": "eqasc_train_2712", "prediction": "all x y.((Glass(x) & Light(y)) -> CausesSpreadOutIntoSpectrum(x,y))", "score": 0}
{"id": "eqasc_train_2713", "prediction": "all x.(Mirror(x) -> PlateGlass(x))", "score": 0}
{"id": "eqasc_train_2714", "prediction": "all x.(Mirror(x) -> CausesRefractionOfLight(x))", "score": 0}
{"id": "eqasc_train_2715", "prediction": "all x.((Light(x) & -SenseOfVision(x)) -> -SenseOfVision(x))", "score": 0}
{"id": "eqasc_train_2716", "prediction": "all x.(Glass(x) -> CausesSenseOfVision(x))", "score": 0}
{"id": "eqasc_train_2717", "prediction": "all x.(Prism(x) -> RoundPieceOfGlass(x))", "score": 0}
{"id": "eqasc_train_2718", "prediction": "all x.(Prism(x) -> CausesRefractionOfLight(x))", "score": 0}
{"id": "eqasc_train_2719", "prediction": "all x.(Glass(x) -> BendsLight(x))", "score": 0}
{"id": "eqasc_train_2720", "prediction": "all x.(Glass(x) -> CausesBobbingOfLightRays(x))", "score": 0}
{"id": "eqasc_train_2721", "prediction": "all x.(Glass(x) -> CausesBbendingOfLightRays(x))", "score": 0}
{"id": "eqasc_train_2722", "prediction": "all x.(Glass(x) -> CausesBbendingOfLight(x))", "score": 0}
{"id": "eqasc_train_2723", "prediction": "all x.(Glass(x) -> CanCauseHalos(x))", "score": 0}
{"id": "eqasc_train_2724", "prediction": "all x.(Amphibian(x) -> (BreathesWithGills(x) & BreathesWithLungs(x)))", "score": 0}
{"id": "eqasc_train_2725", "prediction": "(all x.(Frog(x) -> Amphibian(x)) & all y.(Iguana(y) -> Reptile(y)))", "score": 0}
{"id": "eqasc_train_2726", "prediction": "all x.(Frog(x) -> (BreathesWithGills(x) & Larvae(x) & BreathesWithLungs(x) & Adults(x)))", "score": 0}
{"id": "eqasc_train_2727", "prediction": "all x.(Frog(x) -> (BreathesWithGills(x) & Larvae(x) & BreathesWithLungs(x)))", "score": 0}
{"id": "eqasc_train_2728", "prediction": "all x.(Frog(x) -> (BreathesWithGills(x) & Larvae(x) & BreathesWithLungs(x)))", "score": 0}
{"id": "eqasc_train_2729", "prediction": "all x.(Amphibian(x) -> StartsLifeInWater(x))", "score": 0}
{"id": "eqasc_train_2730", "prediction": "all x y.((Animal(x) & BeginningLifeInWater(x) & Water(y)) -> (BreathesWithGills(x) & MovesAround(x) & BreathesWithLungs(x)))", "score": 0}
{"id": "eqasc_train_2731", "prediction": "all x.(Frog(x) -> (BreathesWithGills(x) & Larvae(x) & BreathesWithLungs(x)))", "score": 0}
{"id": "eqasc_train_2732", "prediction": "all x.(Salamander(x) -> (BreathesWithGills(x) & Larvae(x) & BreathesWithLungs(x) & Adults(x)))", "score": 0}
{"id": "eqasc_train_2733", "prediction": "all x.(Frog(x) -> (BreathesWithGills(x) & Larvae(x) & BreathesWithLungs(x)))", "score": 0}
{"id": "eqasc_train_2734", "prediction": "all x.(Frog(x) -> (ColdBloodedVertebrate(x) & BreathesWithGillsAsLarvae(x) & BreathesWithLungsAsAdults(x)))", "score": 0}
{"id": "eqasc_train_2735", "prediction": "all x.(AdultFrog(x) -> (HasLungs(x) & HasTeeth(x)))", "score": 0}
{"id": "eqasc_train_2736", "prediction": "all x.(AdultFrog(x) -> (HasTeeth(x) & BreathesWithGills(x)))", "score": 0}
{"id": "eqasc_train_2737", "prediction": "all x.(Shivering(x) -> (ManyMusclesContract(x) & LittleBitAllAtOne(x)))", "score": 0}
{"id": "eqasc_train_2738", "prediction": "all x.(ColdResponse(x) -> Shivering(x))", "score": 0}
{"id": "eqasc_train_2739", "prediction": "all x.((Muscle(x) & Cold(x)) -> ContractsAtOneTime(x))", "score": 0}
{"id": "eqasc_train_2740", "prediction": "all x.(Shivering(x) -> HeatsBody(x))", "score": 0}
{"id": "eqasc_train_2741", "prediction": "all x y.((Muscle(x) & Muscle(y) & ContractsAtMoment(x,y) & HeatsBody(x)) -> HeatsBody(x))", "score": 0}
{"id": "eqasc_train_2742", "prediction": "all x.(Shivering(x) -> ProvidesHeatGeneratedByMuscleContraction(x))", "score": 0}
{"id": "eqasc_train_2743", "prediction": "all x.(MusclesContracting(x) -> ProvidesHeat(x))", "score": 0}
{"id": "eqasc_train_2744", "prediction": "all x y.((ExpositionToCold(x) & MuscleFiber(y)) -> InducesContraction(x,y))", "score": 0}
{"id": "eqasc_train_2745", "prediction": "all x y.((HeatProduction(x) & Shivering(y) & NonShiveringThermogenesis(x)) -> Increased(x,y))", "score": 0}
{"id": "eqasc_train_2746", "prediction": "all x.((Muscle(x) & ContractsLittleBit(x)) -> HeatProduction(x))", "score": 0}
{"id": "eqasc_train_2747", "prediction": "all x.(Shivering(x) -> CausesMuscleContractionsToWarmBody(x))", "score": 0}
{"id": "eqasc_train_2748", "prediction": "all x.((Contraction(x) & CausedByShivering(x)) -> GeneratesWarmth(x))", "score": 0}
{"id": "eqasc_train_2749", "prediction": "all x.((Muscle(x) & ContractsLittleBit(x) & AllAtOneTime(x)) -> IncreasedHeatProduction(x))", "score": 0}
{"id": "eqasc_train_2750", "prediction": "all x.(Bird(x) -> (UsesShivering(x) & ShortTermAdjustmentToCold(x)))", "score": 0}
{"id": "eqasc_train_2751", "prediction": "all x y.((Muscle(x) & Cold(y) & ShortTermAdjustment(x,y)) -> ContractsAtLast(x,y))", "score": 0}
{"id": "eqasc_train_2752", "prediction": "all x y.((Muscle(x) & Muscle(y) & ContractsLittleBit(x,y)) -> HeatProduced(x))", "score": 0}
{"id": "eqasc_train_2753", "prediction": "all x.(HoneyBee(x) -> (GeneratesHeat(x) & ConsumesHoney(x) & ShiversMuscles(x)))", "score": 0}
{"id": "eqasc_train_2754", "prediction": "all x.(HoneyBee(x) -> CanShiver(x))", "score": 0}
{"id": "eqasc_train_2755", "prediction": "all x.((InvoluntaryContractions(x) & Shivering(x)) -> ProducesHeat(x))", "score": 0}
{"id": "eqasc_train_2756", "prediction": "all x y.((Muscle(x) & Muscle(y) & ContractsLittleBit(x,y)) -> ProducesHeat(x))", "score": 0}
{"id": "eqasc_train_2757", "prediction": "all x y.((Exercise(x) & Body(y)) -> IncreasesStrength(x,y))", "score": 0}
{"id": "eqasc_train_2758", "prediction": "all x.(Exercise(x) -> (IncreasesMuscleStrength(x) & IncreasesFlexibility(x)))", "score": 1}
{"id": "eqasc_train_2759", "prediction": "all x.(Exercise(x) -> IncreasesFlexibility(x))", "score": 1}
{"id": "eqasc_train_2760", "prediction": "all x.(StrengthTraining(x) -> (IncreasesBoneStrength(x) & InOlderAdults(x)))", "score": 0}
{"id": "eqasc_train_2761", "prediction": "all x.((OlderAdult(x) & ExerciseInOlderAdults(x)) -> StrongerBones(x))", "score": 0}
{"id": "eqasc_train_2762", "prediction": "all x.((Alan(x) & Runs(x) & Rollerblades(x)) -> Exercise(x))", "score": 0}
{"id": "eqasc_train_2763", "prediction": "all x y.((Running(x) & Body(y)) -> IncreasesStrength(x,y))", "score": 0}
{"id": "eqasc_train_2764", "prediction": "all x.((Kick(x) | Punch(x)) -> ImportantToHealthyBody(x))", "score": 0}
{"id": "eqasc_train_2765", "prediction": "all x.(Exercise(x) -> (IsStrong(x) & IsHealthy(x)))", "score": 0}
{"id": "eqasc_train_2766", "prediction": "all x.(Exercise(x) -> (MoreThanRunning(x) & MoreThanLifting(x)))", "score": 0}
{"id": "eqasc_train_2767", "prediction": "all x y.((Running(x) & Lifting(y)) -> IncreasesStrength(x,y))", "score": 0}
{"id": "eqasc_train_2768", "prediction": "all x.(Strength(x) -> IncreasedByResistanceActivities(x))", "score": 0}
{"id": "eqasc_train_2769", "prediction": "all x.(ResistanceActivity(x) -> Exercise(x))", "score": 0}
{"id": "eqasc_train_2770", "prediction": "all x.(Exercise(x) -> (HelpsChangeGlucose(x) & MovesIntoMuscles(x)))", "score": 0}
{"id": "eqasc_train_2771", "prediction": "all x y.((Glucose(x) & Muscle(y)) -> IncreasesStrength(x,y))", "score": 0}
{"id": "eqasc_train_2772", "prediction": "all x.(ResistanceExercise(x) -> WeightLiftingExercise(x))", "score": 0}
{"id": "eqasc_train_2773", "prediction": "all x y.((WeightLifting(x) & Body(y)) -> IncreasesStrength(x,y))", "score": 0}
{"id": "eqasc_train_2774", "prediction": "all x.(WeightLifting(x) -> AnaerobicExercise(x))", "score": 0}
{"id": "eqasc_train_2775", "prediction": "all x.(WeightLifting(x) -> IncreasesStrength(x))", "score": 0}
{"id": "eqasc_train_2776", "prediction": "all x.((Strength(x) & Flexibility(x)) -> Toned(x))", "score": 0}
{"id": "eqasc_train_2777", "prediction": "all x.(Exercise(x) -> (IncreasesFlexibility(x) & IncreasesMuscleTongue(x)))", "score": 0}
{"id": "eqasc_train_2778", "prediction": "all x.(Yoga(x) -> GentleFormOfExercise(x))", "score": 0}
{"id": "eqasc_train_2779", "prediction": "all x.(Yoga(x) -> IncreasesBodyStrength(x))", "score": 0}
{"id": "eqasc_train_2780", "prediction": "all x.((DailyExercise(x) & WeightLifting(x)) -> Necessity(x))", "score": 0}
{"id": "eqasc_train_2781", "prediction": "all x.(WeightLifting(x) -> IncreasesStrength(x))", "score": 0}
{"id": "eqasc_train_2782", "prediction": "all x.(IsometricExercise(x) -> (SustainedContractionOfLargeMuscles(x) & WeightLifting(x)))", "score": 0}
{"id": "eqasc_train_2783", "prediction": "all x y.((SustainedContractionOfLargeMuscles(x) & Body(y)) -> IncreasesStrength(x,y))", "score": 0}
{"id": "eqasc_train_2784", "prediction": "all x.(Exercise(x) -> PromotesMoreMitochondria(x))", "score": 0}
{"id": "eqasc_train_2785", "prediction": "all x y.((MoreMitochondria(x) & Body(y)) -> IncreasesStrength(x,y))", "score": 0}
{"id": "eqasc_train_2786", "prediction": "all x.(Bacteria(x) -> CanCausePeopleToBecomeIll(x))", "score": 0}
{"id": "eqasc_train_2787", "prediction": "all x.(Person(x) -> DiesOfIllnesses(x))", "score": 0}
{"id": "eqasc_train_2788", "prediction": "all x.(Bacteria(x) -> CausesPeopleToDie(x))", "score": 0}
{"id": "eqasc_train_2789", "prediction": "all x.((ProperlyAndFrequentlyWashingHands(x) & HandlingFood(x)) -> EliminatesBacteria(x))", "score": 0}
{"id": "eqasc_train_2790", "prediction": "all x y.((ProperHandWashing(x) & Person(y)) -> CanHelpFromGettingIll(y))", "score": 0}
{"id": "eqasc_train_2791", "prediction": "all x.((Person(x) & (Ill(x) | Injured(x))) -> TurnsToDoctor(x))", "score": 0}
{"id": "eqasc_train_2792", "prediction": "all x y.((Bacteria(x) & Doctor(y)) -> CausesTurnTo(x,y))", "score": 0}
{"id": "eqasc_train_2793", "prediction": "all x.((Bacteria(x) & Food(x)) -> CausesIllness(x))", "score": 0}
{"id": "eqasc_train_2794", "prediction": "all x.(Food(x) -> CausesIllness(x))", "score": 0}
{"id": "eqasc_train_2795", "prediction": "all x.(Fever(x) -> SymptomOfIllness(x))", "score": 0}
{"id": "eqasc_train_2796", "prediction": "all x y.((Bacteria(x) & Person(y)) -> CanCauseFever(x,y))", "score": 0}
{"id": "eqasc_train_2797", "prediction": "all x.((Person(x) & (InfectiousIllness(x) | Operation(x))) -> SlowRecovery(x))", "score": 0}
{"id": "eqasc_train_2798", "prediction": "all x.(Bacteria(x) -> (Infectious(x) & CausesNeedToRecovery(x)))", "score": 0}
{"id": "eqasc_train_2799", "prediction": "all x.((Bacteria(x) | Viral(x) | Parasite(x)) -> CausesSickness(x))", "score": 0}
{"id": "eqasc_train_2800", "prediction": "all x.(Parasite(x) -> CausesIllness(x))", "score": 0}
{"id": "eqasc_train_2801", "prediction": "all x.(Leptospirosis(x) -> CorkscrewShapedBacteria(x))", "score": 0}
{"id": "eqasc_train_2802", "prediction": "all x.(Leptospirosis(x) -> CanCausePeopleToBecomeIll(x))", "score": 0}
{"id": "eqasc_train_2803", "prediction": "all x.(Poultry(x) -> (NotoriousSourceOfBacteria(x) & CausesIllness(x)))", "score": 0}
{"id": "eqasc_train_2804", "prediction": "all x y.((Poultry(x) & Person(y)) -> MakesIll(x,y))", "score": 0}
{"id": "eqasc_train_2805", "prediction": "all x.((SeriousIllness(x) & NeedsHospitalization(x)) -> UnusuallyUncommon(x))", "score": 0}
{"id": "eqasc_train_2806", "prediction": "all x.(Bacteria(x) -> CanCauseHospitalization(x))", "score": 0}
{"id": "eqasc_train_2807", "prediction": "all x.((Bacteria(x) & CausesDisease(x)) -> Pathogen(x))", "score": 0}
{"id": "eqasc_train_2808", "prediction": "all x.(FallsIll(x) -> (Pathogen(x) | Pathogen(x)))", "score": 0}
{"id": "eqasc_train_2809", "prediction": "all x.((Oyster(x) & FullyCooking(x)) -> KillsBacteria(x))", "score": 0}
{"id": "eqasc_train_2810", "prediction": "all x.((Oyster(x) & FullyCooking(x)) -> PreventsIllness(x))", "score": 0}
{"id": "eqasc_train_2811", "prediction": "all x y.((Healthy(x) & Sick(y)) -> (BecomesIll(x) & Dies(y)))", "score": 0}
{"id": "eqasc_train_2812", "prediction": "all x.(Bacteria(x) -> CausesPeopleToDie(x))", "score": 0}
{"id": "eqasc_train_2813", "prediction": "all x.((Sick(x) & Illness(x)) -> ProgressesAtGreaterSpeed(x))", "score": 0}
{"id": "eqasc_train_2814", "prediction": "all x.(Bacteria(x) -> CanCausePeopleToBecomeSick(x))", "score": 0}
{"id": "eqasc_train_2815", "prediction": "all x.((ResistantBacteria(x) & Person(x)) -> CanGetSick(x))", "score": 0}
{"id": "eqasc_train_2816", "prediction": "all x.(ResistantGerms(x) -> CausesIllness(x))", "score": 0}
{"id": "eqasc_train_2817", "prediction": "all x.(Microorganism(x) -> (Fungus(x) | Bacteria(x)))", "score": 0}
{"id": "eqasc_train_2818", "prediction": "all x.(CommonMicroorganism(x) -> CausesIllness(x))", "score": 0}
{"id": "eqasc_train_2819", "prediction": "all x.(Temperature(x) -> (FallsFromLowerToHigherAltitudes(x)))", "score": 0}
{"id": "eqasc_train_2820", "prediction": "all x.(Temperature(x) -> RecordedInDegreesCelsius(x))", "score": 0}
{"id": "eqasc_train_2821", "prediction": "all x y.((Degree(x) & Altitude(y) & LowerToHigher(x,y)) -> FallsFrom(x,y))", "score": 0}
{"id": "eqasc_train_2822", "prediction": "all x y.((Mountain(x) & HigherAltitude(y)) -> CoolerTemperature(x,y))", "score": 0}
{"id": "eqasc_train_2823", "prediction": "all x y.((Mountain(x) & Mountain(y)) -> TemperatureFallsFromLowerToHigher(x,y))", "score": 0}
{"id": "eqasc_train_2824", "prediction": "all x.(Mountain(x) -> LowerTemperatures(x))", "score": 0}
{"id": "eqasc_train_2825", "prediction": "all x y.((MountainClimber(x) & Altitude(y)) -> (Breathes(x,y) & ScalesPeaks(x)))", "score": 0}
{"id": "eqasc_train_2826", "prediction": "all x y.((TemperatureFalls(x) & ScalingMountain(y)) -> FallsWhenScalingMountain(x,y))", "score": 0}
{"id": "eqasc_train_2827", "prediction": "all x.(TemperatureValue(x) -> DegreeCelsius(x))", "score": 0}
{"id": "eqasc_train_2828", "prediction": "all x y.((DegreesCelsius(x) & Altitude(y)) -> FallsFromLowerToHigher(x,y))", "score": 0}
{"id": "eqasc_train_2829", "prediction": "all x.(Lift(x) -> DecreasesWithAltitude(x))", "score": 0}
{"id": "eqasc_train_2830", "prediction": "all x.(LowerTemperature(x) -> AlignsWithLowerLifts(x))", "score": 0}
{"id": "eqasc_train_2831", "prediction": "all x.(Heat(x) -> Temperature(x))", "score": 0}
{"id": "eqasc_train_2832", "prediction": "all x y.((Heat(x) & Altitude(y)) -> FallsFrom(x,y))", "score": 0}
{"id": "eqasc_train_2833", "prediction": "all x.((Weather(x) & Warm(x)) -> TemperatureRise(x))", "score": 0}
{"id": "eqasc_train_2834", "prediction": "all x y.((WarmWeather(x) & Altitude(y)) -> FallsFromLowerToHigher(x,y))", "score": 0}
{"id": "eqasc_train_2835", "prediction": "all x.(Temperature(x) -> (VariatesWithAltitude(x) & VariatesWithSeason(x)))", "score": 0}
{"id": "eqasc_train_2836", "prediction": "all x.(Temperature(x) -> VariableDependingOnSeason(x))", "score": 0}
{"id": "eqasc_train_2837", "prediction": "all x.(Salamander(x) -> UseSenseOfSmellToFindMate(x))", "score": 0}
{"id": "eqasc_train_2838", "prediction": "all x y.((Amphibian(x) & Amphibian(y)) -> UsesSenseOfSmellToFindMate(x,y))", "score": 0}
{"id": "eqasc_train_2839", "prediction": "all x.(Odor(x) -> (Sensation(x) | Stimulation(x) | Perception(x)))", "score": 0}
{"id": "eqasc_train_2840", "prediction": "all x y.((Salamander(x) & Mate(y)) -> FindsByPerceivingOdors(x,y))", "score": 0}
{"id": "eqasc_train_2841", "prediction": "all x.(Olfaction(x) -> SmellSense(x))", "score": 0}
{"id": "eqasc_train_2842", "prediction": "all x.(Salamander(x) -> UsesOlfactionToFindMate(x))", "score": 0}
{"id": "eqasc_train_2843", "prediction": "all x.((Salamander(x) | Frog(x) | Toad(x)) -> Amphibian(x))", "score": 0}
{"id": "eqasc_train_2844", "prediction": "all x y.((Amphibian(x) & Mate(y)) -> UsesSenseOfSmellToFind(x,y))", "score": 0}
{"id": "eqasc_train_2845", "prediction": "exists x.(Amphibian(x) & UseSenseOfSmell(x) & FindMate(x))", "score": 0}
{"id": "eqasc_train_2846", "prediction": "all x y z.((Food(x) & Mate(y) & Water(z)) -> (Survive(x) & Reproduce(y) & Drink(z)))", "score": 0}
{"id": "eqasc_train_2847", "prediction": "all x.(Salamander(x) -> AssistsSenseOfSmell(x))", "score": 0}
{"id": "eqasc_train_2848", "prediction": "all x.(Salamander(x) -> Amphibian(x))", "score": 0}
{"id": "eqasc_train_2849", "prediction": "exists x.(Amphibian(x) & UseSenseOfSmell(x))", "score": 0}
{"id": "eqasc_train_2850", "prediction": "all x.(Salamander(x) -> (ReliesOnExtremeSenseOfSmell(x) & FindsPrey(x)))", "score": 0}
{"id": "eqasc_train_2851", "prediction": "all x y.((Salamander(x) & Prey(y)) -> UsesSmellToFind(x,y))", "score": 0}
{"id": "eqasc_train_2852", "prediction": "all x.((Path(x) & SexualUnion(x)) -> (Match(x) | Matched(x)))", "score": 0}
{"id": "eqasc_train_2853", "prediction": "all x.(Salamander(x) -> (FindsSexualPartner(x) & TasteOfSmell(x)))", "score": 0}
{"id": "eqasc_train_2854", "prediction": "all x y z.((Tree(x) & Falls(x) & Sunlight(y) & Plant(z)) -> SunlightAvailableToSurroundingPlants(y,z))", "score": 0}
{"id": "eqasc_train_2855", "prediction": "all x.((Plant(x) & NeedsSunlight(x) & NeedsWarmth(x)) -> Grows(x))", "score": 0}
{"id": "eqasc_train_2856", "prediction": "all x.((Tree(x) & Falls(x)) -> SunlightAvailable(x))", "score": 0}
{"id": "eqasc_train_2857", "prediction": "all x.(Oak(x) -> Tree(x))", "score": 1}
{"id": "eqasc_train_2858", "prediction": "all x y.((Oak(x) & Falls(x)) -> SunlightAvailableToSurroundingPlants(y))", "score": 0}
{"id": "eqasc_train_2859", "prediction": "all x y z.((BigTree(x) & SmallPlant(y) & Sunlight(z) & Falls(x)) -> (SunlightShinesOn(y,z) & Grows(y)))", "score": 0}
{"id": "eqasc_train_2860", "prediction": "all x y.((Plant(x) & Tree(y) & Fall(y)) -> GrowsBetter(x,y))", "score": 0}
{"id": "eqasc_train_2861", "prediction": "all x.(LargePineTree(x) -> ProvidesGoodShade(x))", "score": 0}
{"id": "eqasc_train_2862", "prediction": "all x y.((Pine(x) & Falls(x)) -> SunlightAvailableToSurroundingPlants(y))", "score": 0}
{"id": "eqasc_train_2863", "prediction": "all x.(SmallPlant(x) -> GrowsInShadeUnderTrees(x))", "score": 0}
{"id": "eqasc_train_2864", "prediction": "all x.((Tree(x) & Falls(x)) -> ShadedAreasNowHasSunlight(x))", "score": 0}
{"id": "eqasc_train_2865", "prediction": "all x.(Plant(x) -> UsesSunlightForPhotosynthesis(x))", "score": 0}
{"id": "eqasc_train_2866", "prediction": "all x y z.((Tree(x) & Falls(x) & Photosythesis(y) & Plant(z)) -> MoreAccessibleTo(y,z))", "score": 0}
{"id": "eqasc_train_2867", "prediction": "all x y.((EncroachingTree(x) & Orchid(y)) -> RobsOfSunlight(x,y))", "score": 0}
{"id": "eqasc_train_2868", "prediction": "all x y.((Orchid(x) & Tree(y) & Falls(y,x)) -> MoreLight(x))", "score": 0}
{"id": "eqasc_train_2869", "prediction": "all x y z.((Tree(x) & Falls(x) & Plant(y) & Tree(z)) -> HelpsGrow(x,y,z))", "score": 0}
{"id": "eqasc_train_2870", "prediction": "all x.(OakTree(x) -> FoundThroughout(x))", "score": 0}
{"id": "eqasc_train_2871", "prediction": "all x y.((Oak(x) & Falls(x)) -> SunlightAvailableToSurroundingPlants(y))", "score": 0}
{"id": "eqasc_train_2872", "prediction": "all x.(Tree(x) -> (CutsForFirewood(x) & CutsForHomes(x)))", "score": 0}
{"id": "eqasc_train_2873", "prediction": "all x y.((Firewood(x) & Homes(y)) -> AllowsSunlightToBecomeAvailableToSurroundingPlants(x,y))", "score": 0}
{"id": "eqasc_train_2874", "prediction": "all x.(Recycling(x) -> PositiveImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_2875", "prediction": "all x.(Recycling(x) -> ReuseOfMaterial(x))", "score": 0}
{"id": "eqasc_train_2876", "prediction": "all x.(ReuseOfMaterials(x) -> PositiveImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_2877", "prediction": "all x.(Organism(x) -> LivesInEnvironment(x))", "score": 0}
{"id": "eqasc_train_2878", "prediction": "all x y.((Recycling(x) & Organism(y)) -> PositiveImpactOnWhereLives(x,y))", "score": 0}
{"id": "eqasc_train_2879", "prediction": "all x.(PlasticBag(x) -> (Recyclable(x) & Reusable(x)))", "score": 0}
{"id": "eqasc_train_2880", "prediction": "all x.(ReusingPlasticBags(x) -> PositiveImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_2881", "prediction": "all x.(Environment(x) -> exists y.(Living(y) & Place(x,y))))", "score": -1}
{"id": "eqasc_train_2882", "prediction": "all x y.((Recycling(x) & Something(y)) -> PositiveImpactOnWhereLifeLives(x,y))", "score": 0}
{"id": "eqasc_train_2883", "prediction": "all x.(Geoscientist(x) -> (CaregiversOfEarthsResources(x) & CaretakersOfEnvironment(x)))", "score": 0}
{"id": "eqasc_train_2884", "prediction": "all x.(Recycling(x) -> PositiveImpactOnEarth(x))", "score": 0}
{"id": "eqasc_train_2885", "prediction": "all x.(Recycling(x) -> ReusesThings(x))", "score": 0}
{"id": "eqasc_train_2886", "prediction": "all x y.((ReusingThings(x) & Environment(y)) -> PositiveImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_2887", "prediction": "all x.((Reuse(x) & Recycling(x)) -> ConvertsWasteToUsefulProducts(x))", "score": 0}
{"id": "eqasc_train_2888", "prediction": "all x.(ConvertsWasteIntoUsefulProducts(x) -> PositiveImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_2889", "prediction": "all x.(Steel(x) -> (Recycled(x) & Recyclable(x)))", "score": 0}
{"id": "eqasc_train_2890", "prediction": "exists x.(SteelProduct(x) & PositiveImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_2891", "prediction": "all x.( YardWaste(x) -> (Recyclable(x) & EasyToRecycle(x)))", "score": 0}
{"id": "eqasc_train_2892", "prediction": "all x.((GardenWaste(x) & GoodForEnvironment(x)) -> GoodForEnvironment(x))", "score": 0}
{"id": "eqasc_train_2893", "prediction": "all x.(PaperBag(x) -> Recyclable(x))", "score": 0}
{"id": "eqasc_train_2894", "prediction": "all x.(PaperBag(x) -> PositiveImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_2895", "prediction": "all x.(Newsprint(x) -> (RecycledIntoNewPaper(x) & RecycledIntoNewCartoon(x) & RecycledIntoNewInsulationMaterial(x)))", "score": 0}
{"id": "eqasc_train_2896", "prediction": "all x y.((MakingCardiolFromNewsprint(x) & Environment(y)) -> PositiveImpactOnEnvironment(x,y))", "score": 0}
{"id": "eqasc_train_2897", "prediction": "all x.((UsesSteel(x) & PositiveImpactOnEnvironment(x)) -> PositiveImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_2898", "prediction": "all x y.((Chlorophyll(x) & Plant(y)) -> AbsorbsLightEnergy(x,y))", "score": 0}
{"id": "eqasc_train_2899", "prediction": "all x.(Chlorophyll(x) -> OxygenProducer(x))", "score": 0}
{"id": "eqasc_train_2900", "prediction": "all x.(Plant(x) -> AbsorbsLightEnergy(x))", "score": 0}
{"id": "eqasc_train_2901", "prediction": "all x.(Sun(x) -> EmitsLightEnergy(x))", "score": 0}
{"id": "eqasc_train_2902", "prediction": "all x y.((Chlorophyll(x) & Sunlight(y)) -> AbsorbsEnergyFrom(x,y))", "score": 0}
{"id": "eqasc_train_2903", "prediction": "all x.(Chlorophyll(x) -> (Pigment(x) & MakesPlantsGreen(x)))", "score": 0}
{"id": "eqasc_train_2904", "prediction": "all x.((Soemthing(x) & MakesPlantsGreen(x)) -> AbsorbsLightEnergyByPlants(x))", "score": 0}
{"id": "eqasc_train_2905", "prediction": "all x.(Chlorophyll(x) -> GreenColoringMatterOfPlantLeaves(x))", "score": 0}
{"id": "eqasc_train_2906", "prediction": "all x y.((GreenColoring(x) & Leaves(y)) -> AbsorbsLight(x,y))", "score": 0}
{"id": "eqasc_train_2907", "prediction": "all x.((AbsorptionOfLightEnergy(x) & Photosynthesis(x)) -> EssentialIn(x,y))", "score": 0}
{"id": "eqasc_train_2908", "prediction": "all x.(Chlorophyll(x) -> UsedForPhotosynthesis(x))", "score": 0}
{"id": "eqasc_train_2909", "prediction": "all x y.((Chlorophyll(x) & Bulbs(y)) -> AbsorbsLightEnergy(x,y))", "score": 0}
{"id": "eqasc_train_2910", "prediction": "all x.(Chlorophyll(x) -> ComplexMolecule(x))", "score": 0}
{"id": "eqasc_train_2911", "prediction": "all x y.((ComplexMolecule(x) & Plant(y)) -> AbsorbsLightEnergy(x,y))", "score": 0}
{"id": "eqasc_train_2912", "prediction": "all x.(Fungus(x) -> -ContainsChlorophyll(x))", "score": 0}
{"id": "eqasc_train_2913", "prediction": "all x.(Fungus(x) -> -AbsorbsLightEnergy(x))", "score": 0}
{"id": "eqasc_train_2914", "prediction": "all x.(Fungus(x) -> -Chlorophyll(x))", "score": 0}
{"id": "eqasc_train_2915", "prediction": "all x.(Fungus(x) -> -AbsorbsLightEnergy(x))", "score": 0}
{"id": "eqasc_train_2916", "prediction": "all x.(Drought(x) -> (DecreasesPrecipitation(x) & DecreasesPrecipitation(x)))", "score": 0}
{"id": "eqasc_train_2917", "prediction": "all x.(DroughtCondition(x) -> FireCondition(x))", "score": 0}
{"id": "eqasc_train_2918", "prediction": "all x y.((DecreaseInPrecipitation(x) & FireConditions(y)) -> ResultsInFireConditions(x,y))", "score": 0}
{"id": "eqasc_train_2919", "prediction": "all x.(Drought(x) -> (CausesFamine(x) & ContributesToDecentralization(x) & ContributesToUnrest(x)))", "score": 0}
{"id": "eqasc_train_2920", "prediction": "all x.(DecreaseInPrecipitation(x) -> CanCauseFamine(x))", "score": 0}
{"id": "eqasc_train_2921", "prediction": "all x.(Drought(x) -> LotsOfPeopleDie(x))", "score": 0}
{"id": "eqasc_train_2922", "prediction": "all x.(DecreasesPrecipitation(x) -> CanDie(x))", "score": 0}
{"id": "eqasc_train_2923", "prediction": "all x.(Drought(x) -> ReducedWaterSupply(x))", "score": 0}
{"id": "eqasc_train_2924", "prediction": "all x.((PrecipitationAmount(x) & Decreased(x)) -> ReducedWaterSupply(x))", "score": 0}
{"id": "eqasc_train_2925", "prediction": "all x.(Drought(x) -> (DecreasesAvailability(x) & DecreasesAbondance(x)))", "score": 0}
{"id": "eqasc_train_2926", "prediction": "all x.((PrecipitationDecreases(x) & FoodSupply(x)) -> FoodSupplyDecreases(x))", "score": 0}
{"id": "eqasc_train_2927", "prediction": "exists x.(Research(x) & ReportsAcidPrecipitation(x))", "score": 0}
{"id": "eqasc_train_2928", "prediction": "all x.((CropProductivityDecreasesDuringDrought(x)) -> Drought(x))", "score": 0}
{"id": "eqasc_train_2929", "prediction": "all x.((Flood(x) | Drought(x)) -> DesertLifeRealities(x))", "score": 0}
{"id": "eqasc_train_2930", "prediction": "all x.(Desert(x) -> (DecreasedPrecipitation(x) & DecreasedPrecipitation(x)))", "score": 0}
{"id": "eqasc_train_2931", "prediction": "all x.(Precipitation(x) -> FallsAsSnow(x))", "score": 0}
{"id": "eqasc_train_2932", "prediction": "-SnowCausesDrought(-SnowCausesDrought(-SnowCausesDrought(-SnowCausesDrought(-SnowCausesDrought(-SnowCausesDrought(-SnowCausesDrought(-SnowCausesDrought(-SnowCausesDrought(-SnowCausesDrought(-SnowCausesDrought(-SnowCausesDrought(-SnowCausesDrought(-SnowCausesDrought(-SnowCausesDrought(-SnowCausesDrought(-SnowCausesDrought(-SnowCausesDrought(-SnowCausesDrought(SnowCausesDrought)Drought)Drought)Drought)Drought)Drought)Drought)Drought)", "score": -1}
{"id": "eqasc_train_2933", "prediction": "all x.((Drought(x) | Rain(x)) -> (AffectsHarvest(x) & AffectsPlanning(x)))", "score": 0}
{"id": "eqasc_train_2934", "prediction": "all x.((NotEnoughPrecipitation(x) & Harvest(x)) -> NegativelyAffects(x,Harvest))", "score": 0}
{"id": "eqasc_train_2935", "prediction": "all x.((Animal(x) & RequiresWarmth(x)) -> Survival(x))", "score": 0}
{"id": "eqasc_train_2936", "prediction": "all x.((Light(x) | Heat(x) | Warmth(x)) -> BasicNecessityForSurvival(x))", "score": 0}
{"id": "eqasc_train_2937", "prediction": "all x.(Heat(x) -> NeededForSurvivalOfAnimals(x))", "score": 0}
{"id": "eqasc_train_2938", "prediction": "all x.(Vegetation(x) -> (RequiredByAnimals(x) & ForWarmth(x) & ForSecurity(x)))", "score": 0}
{"id": "eqasc_train_2939", "prediction": "all x y.((Vegetation(x) & Animal(y)) -> HelpsSurvive(x,y))", "score": 0}
{"id": "eqasc_train_2940", "prediction": "all x.(Wollie(x) -> (MadeOfFur(x) & WornForWarmth(x)))", "score": 0}
{"id": "eqasc_train_2941", "prediction": "exists x.(Animal(x) & NeedsFur(x))", "score": 0}
{"id": "eqasc_train_2942", "prediction": "all x.((Fur(x) & -Blumber(x)) -> EssentialForSurvival(x))", "score": 0}
{"id": "eqasc_train_2943", "prediction": "all x.((Animal(x) & RequiresFur(x)) -> EssentialForWarmth(x))", "score": 0}
{"id": "eqasc_train_2944", "prediction": "all x.(Dog(x) -> Animal(x))", "score": 2}
{"id": "eqasc_train_2945", "prediction": "all x.(Dog(x) -> RequiresWarmthForSurvival(x))", "score": 0}
{"id": "eqasc_train_2946", "prediction": "all x.(Bird(x) -> HuddlesTogetherForWarmth(x))", "score": 0}
{"id": "eqasc_train_2947", "prediction": "all x.(Bird(x) -> HuddlesTogetherForSurvival(x))", "score": 0}
{"id": "eqasc_train_2948", "prediction": "all x y.((Vegetation(x) & Animal(y)) -> HelpsSurvive(x,y))", "score": 0}
{"id": "eqasc_train_2949", "prediction": "all x.(Cub(x) -> (BirthInWinter(x) & NestleInMothersFur(x) & ForWarmth(x) & ForNursing(x)))", "score": 0}
{"id": "eqasc_train_2950", "prediction": "all x y.((Fur(x) & Animal(y)) -> AidsInSurvival(x,y))", "score": 0}
{"id": "eqasc_train_2951", "prediction": "all x y.((Bird(x) & Boy(y)) -> ProducesHeat(x,y))", "score": 0}
{"id": "eqasc_train_2952", "prediction": "all x y.((Animal(x) & Body(y)) -> RequiresHeatForSurvival(x,y))", "score": 0}
{"id": "eqasc_train_2953", "prediction": "all x.(Cow(x) -> RequiresWarmthForSurvival(x))", "score": 0}
{"id": "eqasc_train_2954", "prediction": "all x.(Animal(x) -> ActsThroughInstinctsForSurvival(x))", "score": 0}
{"id": "eqasc_train_2955", "prediction": "all x y z.((Animal(x) & Instinct(y) & Instinct(z)) -> (ActsOn(x,y) & StaysAlive(x) & Warmth(x)))", "score": 0}
{"id": "eqasc_train_2956", "prediction": "all x.((Individual(x) & BestSurvivalAlleles(x)) -> SurvivesWithLargestHazard(x))", "score": 0}
{"id": "eqasc_train_2957", "prediction": "all x.(Animal(x) -> RequiresAllelesForWarmth(x))", "score": 0}
{"id": "eqasc_train_2958", "prediction": "all x.(ElectronTransport(x) -> FinalStageOfAerobicRespiration(x))", "score": 0}
{"id": "eqasc_train_2959", "prediction": "all x.(AerobicRespiration(x) -> (UsesOxygen(x) & ReleasesCarbon(x)))", "score": 0}
{"id": "eqasc_train_2960", "prediction": "all x y.((ElectronTransport(x) & Process(y)) -> (UsesOxygen(x) & ReleasesCarbon(x)))", "score": 0}
{"id": "eqasc_train_2961", "prediction": "all x.(ElectronTransport(x) -> Waterfall(x))", "score": 0}
{"id": "eqasc_train_2962", "prediction": "all x y.((Transportation(x) & Waterfall(y)) -> FinalStageOfAerobicRespiration(x,y))", "score": 0}
{"id": "eqasc_train_2963", "prediction": "all x.(AerobicRespiration(x) -> RequiresOxygen(x))", "score": 0}
{"id": "eqasc_train_2964", "prediction": "all x.(ElectronTransport(x) -> InvolvesOxygen(x))", "score": 0}
{"id": "eqasc_train_2965", "prediction": "all x.(AerobicRespiration(x) -> exists y.(Oxygen(y) & PresenceOf(x,y))))", "score": -1}
{"id": "eqasc_train_2966", "prediction": "all x.(ElectronTransport(x) -> exists y.(Oxygen(y) & PresenceOf(x,y))))", "score": -1}
{"id": "eqasc_train_2967", "prediction": "(FinalProjectDue(x) & Last(x))", "score": 0}
{"id": "eqasc_train_2968", "prediction": "all x.(ElectronTransport(x) -> AerobicRespirationStage(x))", "score": 0}
{"id": "eqasc_train_2969", "prediction": "all x.(ElectronTransport(x) -> RequiresOxygen(x))", "score": 0}
{"id": "eqasc_train_2970", "prediction": "all x y.((Breathing(x) & AerobicRespiration(y)) -> (GetsOxygenIntoBody(x) & OccursAtCellularLevel(y)))", "score": 0}
{"id": "eqasc_train_2971", "prediction": "all x y z.((CellularLevel(x) & FinalStageOfBreathingOxygen(y) & ElectronTransport(z)) -> (BreathingOxygen(x) & ElectronTransport(x,z)))", "score": 0}
{"id": "eqasc_train_2972", "prediction": "all x.((LongDistanceRunning(x) | Swimming(x) | Bicycling(x) | AerobicActivity(x)) -> ReliesOnEndurance(x))", "score": 0}
{"id": "eqasc_train_2973", "prediction": "all x.(LongDistanceRunning(x) -> InvolvesElectronTransport(x))", "score": 0}
{"id": "eqasc_train_2974", "prediction": "all x.(AerobicRespiration(x) -> (OxidativeProcess(x) & UsesOxygenAsElectronAcCEPTor(x)))", "score": 0}
{"id": "eqasc_train_2975", "prediction": "all x y.((Oxygen(x) & Respiration(y)) -> UsedAsElectronAcCEPTor(x,y))", "score": 0}
{"id": "eqasc_train_2976", "prediction": "all x y.((Sweat(x) & Skin(y)) -> (Wets(x,y) & Evaporates(x,y)))", "score": 0}
{"id": "eqasc_train_2977", "prediction": "all x y.((Evaporation(x) & Skin(y)) -> (Cools(x,y) & ReducesBodyTemperature(x)))", "score": 0}
{"id": "eqasc_train_2978", "prediction": "all x y z.((Sweat(x) & Skin(y) & BodyTemperature(z)) -> WetsToReduce(x,y,z))", "score": 0}
{"id": "eqasc_train_2979", "prediction": "all x.(Sweat(x) -> (MadeOfSalt(x) & MadeOfWater(x)))", "score": 0}
{"id": "eqasc_train_2980", "prediction": "all x y.((Water(x) & Salt(y)) -> (WetsSkin(x) & Evaporates(y) & CoolsBody(y)))", "score": 0}
{"id": "eqasc_train_2981", "prediction": "all x.(Skin(x) -> (Hot(x) & Red(x) & WetWithSweat(x)))", "score": 0}
{"id": "eqasc_train_2982", "prediction": "all x y.((Body(x) & Body(y) & CooledAfterEvaporation(x) & WetSkin(y)) -> (Hot(y) & Red(y)))", "score": 0}
{"id": "eqasc_train_2983", "prediction": "all x y.((SweatGlands(x) & Skin(y)) -> (ReleasesFromSweatGlands(x,y) & Evaporates(x,y)))", "score": 0}
{"id": "eqasc_train_2984", "prediction": "all x.(Skin(x) -> CooledByEvaporation(x))", "score": 0}
{"id": "eqasc_train_2985", "prediction": "(Fig.4-23Sweat(Fig) & ContainsWater(Fig) & ContainsSalt(Fig) & ContainsLacticAcid(Fig) & ContainsVit(Fig))", "score": -1}
{"id": "eqasc_train_2986", "prediction": "all x y.((EvaporationOfWater(x) & Body(y)) -> Cools(x,y))", "score": 0}
{"id": "eqasc_train_2987", "prediction": "all x.(Diaphoresis(x) -> (FancyMedicalTermForPerspiration(x) | FancyMedicalTermForSweeping(x)))", "score": 0}
{"id": "eqasc_train_2988", "prediction": "all x y.((Perspiration(x) & Skin(y)) -> (Wets(x,y) & Evaporates(x,y)))", "score": 0}
{"id": "eqasc_train_2989", "prediction": "all x y.((EvaporationOfWater(x) & Skin(y)) -> CoolsBody(x,y))", "score": 0}
{"id": "eqasc_train_2990", "prediction": "all x.(HighHumidity(x) -> InterferesWithEvaporationOfSweat(x))", "score": 0}
{"id": "eqasc_train_2991", "prediction": "all x.(HighHumidity(x) -> InterferesWithCooling(x))", "score": 0}
{"id": "eqasc_train_2992", "prediction": "all x.((Body(x) & Sweats(x)) -> Cools(x))", "score": 0}
{"id": "eqasc_train_2993", "prediction": "all x y.((Body(x) & WetnessEvaporates(x) & Skin(y)) -> Cools(x))", "score": 0}
{"id": "eqasc_train_2994", "prediction": "all x.(Perspiration(x) -> exists y.(SweatGlands(y) & InAverageHumanBody(x,y)))", "score": 0}
{"id": "eqasc_train_2995", "prediction": "all x y.((Perspiration(x) & Skin(y)) -> (Wets(x,y) & Evaporates(x,y) & CoolsBody(x)))", "score": 0}
{"id": "eqasc_train_2996", "prediction": "all x.(Evaporation(x) -> (Liquid(x) & TurnsIntoGas(x)))", "score": 0}
{"id": "eqasc_train_2997", "prediction": "all x y.((Sweat(x) & Gas(y)) -> CoolsBody(x,y))", "score": 0}
{"id": "eqasc_train_2998", "prediction": "all x.(Sweat(x) -> (Water(x) & Salt(x) & SomeUrea(x)))", "score": 0}
{"id": "eqasc_train_2999", "prediction": "all x.((Urea(x) & CoolsBody(x)) -> CoolsBody(x))", "score": 0}
{"id": "eqasc_train_3000", "prediction": "all x y z.((Salt(x) & Water(y) & Skin(z) & Wets(x,z)) -> CoolsBody(x))", "score": 0}
{"id": "eqasc_train_3001", "prediction": "all x y.((Mirror(x) & Mirror(y)) -> UsedForReflectingLight(x,y))", "score": 0}
{"id": "eqasc_train_3002", "prediction": "all x.(Mirror(x) -> ReflectsVisibleEnergy(x))", "score": 0}
{"id": "eqasc_train_3003", "prediction": "all x.(Mirror(x) -> (ReflectsRays(x) | ReflectsBeams(x)))", "score": 0}
{"id": "eqasc_train_3004", "prediction": "all x.(Light(x) -> (Reflected(x) | Absorbed(x)))", "score": 0}
{"id": "eqasc_train_3005", "prediction": "all x.(Mirror(x) -> (-Refracts(x) & -AbsorbsLight(x)))", "score": 0}
{"id": "eqasc_train_3006", "prediction": "all x y.((MillionsOfTinyMirrors(x) & ProjectorScreen(y)) -> (MovesToReflectLight(x,y) & CreatesImage(x,y)))", "score": 0}
{"id": "eqasc_train_3007", "prediction": "all x.(Mirror(x) -> CreatesImageThroughReflection(x))", "score": 0}
{"id": "eqasc_train_3008", "prediction": "all x y.((WavesOfLight(x) & Mirror(y)) -> BounceOff(x,y))", "score": 0}
{"id": "eqasc_train_3009", "prediction": "all x y.((Image(x) & Mirrors(y) & LightBounces(x,y)) -> FormedIn(x,y))", "score": 0}
{"id": "eqasc_train_3010", "prediction": "all x y.((Mirror(x) & Image(y)) -> UsedForReflecting(x,y))", "score": 0}
{"id": "eqasc_train_3011", "prediction": "all x y z.((Camera(x) & Lens(y) & Mirror(z)) -> (Enters(x,y) & ReflectsUpward(z,x)))", "score": 0}
{"id": "eqasc_train_3012", "prediction": "all x.(Camera(x) -> NeedsMirrorToRedirectLight(x))", "score": 0}
{"id": "eqasc_train_3013", "prediction": "all x.(FloatGlass(x) & ReflectiveGlass(x) & LaminatedGlass(x) & MirroredFloatGlass(x))", "score": 0}
{"id": "eqasc_train_3014", "prediction": "all x.(ReflectiveGlass(x) -> UsedForReflectingLight(x))", "score": 0}
{"id": "eqasc_train_3015", "prediction": "all x.(LED(x) -> IdealLightSource(x))", "score": 0}
{"id": "eqasc_train_3016", "prediction": "all x y.((Mirror(x) & LED(y)) -> UsedForReflecting(x,y))", "score": 0}
{"id": "eqasc_train_3017", "prediction": "all x.(MirrorMaterial(x) -> (Quarz(x) | NickelPlaidAluminum(x)))", "score": 0}
{"id": "eqasc_train_3018", "prediction": "all x.((Quarz(x) | NickelPlaidAluminum(x)) -> ReflectsLight(x))", "score": 0}
{"id": "eqasc_train_3019", "prediction": "all x.(Sunlight(x) -> WhiteLight(x))", "score": 0}
{"id": "eqasc_train_3020", "prediction": "all x y.((Mirror(x) & Sunlight(y)) -> Reflects(x,y))", "score": 0}
{"id": "eqasc_train_3021", "prediction": "all x.(Bivalves(x) -> (FeedsOnPlankton(x) & FeedsOnNonLivingOrganicMatter(x)))", "score": 0}
{"id": "eqasc_train_3022", "prediction": "all x.((Chamber(x) | Oyster(x)) -> Bivalves(x))", "score": 0}
{"id": "eqasc_train_3023", "prediction": "all x y z.((Clam(x) & Oyster(y) & Plankton(z)) -> (FeedsOn(x,z) & FeedsOn(y,z)))", "score": 0}
{"id": "eqasc_train_3024", "prediction": "all x.((Scallop(x) | Oyster(x) | Clam(x)) -> Bivalves(x))", "score": 0}
{"id": "eqasc_train_3025", "prediction": "all x.(Climate(x) -> (FeedsOnPlankton(x) & FeedsOnNonlivingOrganicMatter(x)))", "score": 0}
{"id": "eqasc_train_3026", "prediction": "all x.(Muschel(x) -> (FeedsOnPlankton(x) & FeedsOnNonLivingOrganicMatter(x)))", "score": 0}
{"id": "eqasc_train_3027", "prediction": "all x.((Animal(x) & LivesOnRockySurfaces(x)) -> EatsPlankton(x))", "score": 0}
{"id": "eqasc_train_3028", "prediction": "all x.((Animal(x) & LivesOnRockySurfaces(x)) -> EatsNonlivingOrganicMatter(x))", "score": 0}
{"id": "eqasc_train_3029", "prediction": "all x.(Muschel(x) -> FeedsOnNonLivingOrganicMatter(x))", "score": 0}
{"id": "eqasc_train_3030", "prediction": "all x y.((Clam(x) & Oyster(y)) -> (FeedsOnPlankton(x) & FeedsOnNonlivingOrganicMatter(x)))", "score": 0}
{"id": "eqasc_train_3031", "prediction": "all x.(Mussel(x) -> (EatsPlankton(x) & EatsNonlivingOrganicMatter(x)))", "score": 0}
{"id": "eqasc_train_3032", "prediction": "all x.(Bivalve(x) -> VeryCommon(x))", "score": 0}
{"id": "eqasc_train_3033", "prediction": "all x.(Mullusc(x) -> (FeedsOnPlankton(x) & FeedsOnNonLivingOrganicMatter(x)))", "score": 0}
{"id": "eqasc_train_3034", "prediction": "all x.(Muschel(x) -> (FeedsOnPlankton(x) & FeedsOnNonLivingOrganicMatter(x)))", "score": 0}
{"id": "eqasc_train_3035", "prediction": "all x.(BivalvedArthropod(x) -> Common(x))", "score": 0}
{"id": "eqasc_train_3036", "prediction": "all x.(Arthropod(x) -> FeedsOnPlankton(x))", "score": 0}
{"id": "eqasc_train_3037", "prediction": "all x.(Clam(x) -> (FeedsOnPlankton(x) & FeedsOnNonlivingOrganicMatter(x)))", "score": 0}
{"id": "eqasc_train_3038", "prediction": "all x.(HeadHair(x) -> PreventsHeatLoss(x))", "score": 0}
{"id": "eqasc_train_3039", "prediction": "all x.(HeatLoss(x) -> Head(x))", "score": 0}
{"id": "eqasc_train_3040", "prediction": "all x.((Hair(x) & LosesHeat(x,90)) -> Hair(x))", "score": 0}
{"id": "eqasc_train_3041", "prediction": "all x.(Hypothermia(x) -> (BodyLosesHeatFasterRate(x) & CanBeProduced(x)))", "score": 0}
{"id": "eqasc_train_3042", "prediction": "all x.(HeadHair(x) -> HelpsPreventHypothermia(x))", "score": 0}
{"id": "eqasc_train_3043", "prediction": "all x.(Hat(x) -> HeatLossOnBody(x))", "score": 0}
{"id": "eqasc_train_3044", "prediction": "all x y.((Hat(x) & Body(y) & LosesHair(x,y)) -> PreventsHeatLoss(x,y))", "score": 0}
{"id": "eqasc_train_3045", "prediction": "all x.((LossOfBodyHeat(x) & Exposure(x)) -> Hypothermia(x))", "score": 0}
{"id": "eqasc_train_3046", "prediction": "all x.(HeadHair(x) -> ImportantInPreventingHypothermia(x))", "score": 0}
{"id": "eqasc_train_3047", "prediction": "all x.((Hair(x) & CreatedByLivingFollicles(x) & InScape(x)) -> Dead(x))", "score": 0}
{"id": "eqasc_train_3048", "prediction": "all x.((LivingFolliclesInScapula(x) & PreventsHeatLoss(x)) -> ParticularlyImportantInPreventingHeatLoss(x))", "score": 0}
{"id": "eqasc_train_3049", "prediction": "all x.(Insulation(x) -> (PreventsHeatLoss(x,Winter) & PreventsHeatGain(x,Summer)))", "score": 0}
{"id": "eqasc_train_3050", "prediction": "all x.(HeadHair(x) -> Insulation(x))", "score": 0}
{"id": "eqasc_train_3051", "prediction": "all x y.((BodyHeat(x) & ColdConditions(y)) -> EscapesFromHead(x,y))", "score": 0}
{"id": "eqasc_train_3052", "prediction": "all x.((HeadHair(x) & ColdConditions(x)) -> ImportantIn(x,HeadHair))", "score": 0}
{"id": "eqasc_train_3053", "prediction": "all x.(Alopecia(x) -> HairLoss(x))", "score": 0}
{"id": "eqasc_train_3054", "prediction": "all x.(Alopecia(x) -> CausesHeatLossFromBody(x))", "score": 0}
{"id": "eqasc_train_3055", "prediction": "all x.(HeadHair(x) -> PreventsEnergyLoss(x))", "score": 0}
{"id": "eqasc_train_3056", "prediction": "all x.(Bighorn(x) -> (HasHollowHair(x) & TrapsBodyHeat(x)))", "score": 0}
{"id": "eqasc_train_3057", "prediction": "all x.((BighornsHollowHair(x) & PreventsHeatLoss(x)) -> HollowHair(x))", "score": 0}
{"id": "eqasc_train_3058", "prediction": "all x.(Hair(x) -> ComposedOfKeratin(x))", "score": 0}
{"id": "eqasc_train_3059", "prediction": "all x.(Keratin(x) -> PreventsHeatLoss(x))", "score": 0}
{"id": "eqasc_train_3060", "prediction": "all x y.((Species(x) & -ProducesOffspring(x,y)) -> ProbablyExtinct(x))", "score": 0}
{"id": "eqasc_train_3061", "prediction": "all x.(ExtinctSpecies(x) -> (GoingForever(x)))", "score": 0}
{"id": "eqasc_train_3062", "prediction": "all x.((MembersOfSpecies(x) & -ProduceOffspring(x)) -> GoesForever(x))", "score": 0}
{"id": "eqasc_train_3063", "prediction": "all x.(PassengerPigeon(x) -> Extinct(x))", "score": 0}
{"id": "eqasc_train_3064", "prediction": "all x.(PassengerPigeon(x) -> -ProducesEnoughOffspring(x))", "score": 0}
{"id": "eqasc_train_3065", "prediction": "all x.(MassExtinction(x) -> (AffectsBiologicalDiversity(x) & WhateverCause(x)))", "score": 0}
{"id": "eqasc_train_3066", "prediction": "all x y.((Species(x) & -ProducesOffspring(x,y)) -> FfectsBiologicalDiversity(x))", "score": 0}
{"id": "eqasc_train_3067", "prediction": "all x.(ExtinctAnimal(x) -> (DodoBird(x) | SaberToothedTiger(x)))", "score": 0}
{"id": "eqasc_train_3068", "prediction": "all x.(DodoBird(x) -> -ProducesOffspring(x))", "score": 0}
{"id": "eqasc_train_3069", "prediction": "all x.((AvianSpecies(x) & CommonAcrossLargeRanges(x)) -> LessLikelyToBecomeExtinct(x))", "score": 0}
{"id": "eqasc_train_3070", "prediction": "all x.((AvianSpecies(x) & ProducesOffspring(x)) -> LessLikelyToEndUpExtinct(x))", "score": 0}
{"id": "eqasc_train_3071", "prediction": "all x.((Animal(x) & Extinct(x)) -> GoesForever(x))", "score": 0}
{"id": "eqasc_train_3072", "prediction": "all x y.((Species(x) & -ProducesOffspring(x,y)) -> ProbablyGoedForever(x))", "score": 0}
{"id": "eqasc_train_3073", "prediction": "all x y.((Geese(x) & Duck(y)) -> (Species(x) & Species(y)))", "score": 0}
{"id": "eqasc_train_3074", "prediction": "all x.((Geese(x) & SuddenlyCannotProduceOffspring(x)) -> Extinct(x))", "score": 0}
{"id": "eqasc_train_3075", "prediction": "all x.((MateWithFemales(x) & -ProducesOffspring(x)) -> FemalesMateWithFemales(x))", "score": 0}
{"id": "eqasc_train_3076", "prediction": "all x y.((Species(x) & -MateWithFemales(x)) -> Extinct(y))", "score": 0}
{"id": "eqasc_train_3077", "prediction": "all x.(Root(x) -> (GrowsLength(x) & GrowsWidth(x) & PrimaryMeristem(x) & SecondaryMeristem(x)))", "score": 0}
{"id": "eqasc_train_3078", "prediction": "all x.(Plant(x) -> HasRoots(x))", "score": 0}
{"id": "eqasc_train_3079", "prediction": "all x.(Plant(x) -> (HasPrimaryMeristem(x) & HasSecondaryMeristem(x)))", "score": 0}
{"id": "eqasc_train_3080", "prediction": "all x.(Meristem(x) -> (FoundInRoots(x) & FoundInShoes(x)))", "score": 0}
{"id": "eqasc_train_3081", "prediction": "all x y z.((Root(x) & Root(y) & Shoot(z)) -> (GrowsInLengthAndWidth(x,y) & FromRootsAndShoots(x,z)))", "score": 0}
{"id": "eqasc_train_3082", "prediction": "all x.(VascularCambium(x) -> PrimaryMeristem(x))", "score": 0}
{"id": "eqasc_train_3083", "prediction": "all x.(Root(x) -> (GrowsLength(x) & GrowsWidth(x) & FromVascularCambium(x)))", "score": 0}
{"id": "eqasc_train_3084", "prediction": "all x.(Meristem(x) -> SelfOrganizing(x))", "score": 0}
{"id": "eqasc_train_3085", "prediction": "all x.(Root(x) -> SelfOrganizing(x))", "score": 0}
{"id": "eqasc_train_3086", "prediction": "all x.((Carrot(x) | Beet(x)) -> Root(x))", "score": 0}
{"id": "eqasc_train_3087", "prediction": "all x y.((Carrot(x) & Beet(y)) -> (GrowsLength(x,y) & GrowsWidth(x,y)))", "score": 0}
{"id": "eqasc_train_3088", "prediction": "all x y.((Plant(x) & Growth(y)) -> (ConconfinedToMeristems(x,y)))", "score": 0}
{"id": "eqasc_train_3089", "prediction": "all x.(Plant(x) -> HasRoots(x))", "score": 0}
{"id": "eqasc_train_3090", "prediction": "all x.(PrimaryGrowth(x) -> (ActivityOfLatinalMeristems(x) & PrimaryGrowth(x)))", "score": 0}
{"id": "eqasc_train_3091", "prediction": "all x.(Root(x) -> (GrowsInLength(x) & GrowsInWidth(x) & ActivityOfLatlateralLocations(x)))", "score": 0}
{"id": "eqasc_train_3092", "prediction": "all x.(Tree(x) -> HasRoots(x))", "score": 0}
{"id": "eqasc_train_3093", "prediction": "all x.(Tree(x) -> (HasPrimaryMeristem(x) & HasSecondaryMeristem(x)))", "score": 0}
{"id": "eqasc_train_3094", "prediction": "all x.(MeristemGrowth(x) -> (ProducesPrimordia(x) & DevelopsAtMeristemPeriphery(x)))", "score": 0}
{"id": "eqasc_train_3095", "prediction": "all x y.((Root(x) & Primordia(y)) -> (GrowsInLength(x,y) & GrowsInWidth(x,y)))", "score": 0}
{"id": "eqasc_train_3096", "prediction": "all x.(GirthGrowth(x) -> (CausedBySecondaryMeristems(x)))", "score": 0}
{"id": "eqasc_train_3097", "prediction": "all x.(Root(x) -> (GrowsLength(x) & GrowsGirth(x) & CausedByMeristems(x)))", "score": 0}
{"id": "eqasc_train_3098", "prediction": "all x y z.((Kid(x) & Tree(y) & City(z)) -> (SeesUndergroundRootSystems(x,y) & SeesAerialViewOfPlants(x,z)))", "score": 0}
{"id": "eqasc_train_3099", "prediction": "all x.(UndergroundSystem(x) -> (GrowsInWidth(x) & GrowsInLength(x)))", "score": 0}
{"id": "eqasc_train_3100", "prediction": "all x.(Ethanol(x) -> (ProducedByAlcoholicFermentation(x) & ProducesGlucoseInCornOrOtherPlants(x)))", "score": 0}
{"id": "eqasc_train_3101", "prediction": "all x.(Plant(x) -> (UsesSunEnergy(x) & TransformsCarbonDioxideGasAndWater(x) & ProducesGlucose(x)))", "score": 0}
{"id": "eqasc_train_3102", "prediction": "all x.(EthanolProduction(x) -> ReliantOnSunsEnergy(x))", "score": 0}
{"id": "eqasc_train_3103", "prediction": "all x.(Fermentation(x) -> ChemicalChange(x,Sugar,Alcohol))", "score": 0}
{"id": "eqasc_train_3104", "prediction": "all x y.((Ethanol(x) & Sugar(y)) -> (ProducedFrom(x,y) & ChangedIntoAlcohol(x)))", "score": 0}
{"id": "eqasc_train_3105", "prediction": "all x.(Car(x) -> (RunsOnPetrol(x) | RunsOnPetrol(x) | RunsOnEthanol(x)))", "score": 0}
{"id": "eqasc_train_3106", "prediction": "all x.(Car(x) -> (RunsOnAlcoholicFermentation(x) & (InCorn(x) | InPlants(x))))", "score": 0}
{"id": "eqasc_train_3107", "prediction": "all x.(Ethanol(x) -> DepressesNeuronalExcitability(x))", "score": 0}
{"id": "eqasc_train_3108", "prediction": "all x y.((AlcoholicFermentation(x) & GlucoseInCornOrOtherPlants(y)) -> DepressesNeuronalExcitability(x,y))", "score": 0}
{"id": "eqasc_train_3109", "prediction": "all x.(Ethanol(x) -> AlternativeFuel(x))", "score": 0}
{"id": "eqasc_train_3110", "prediction": "all x.((Corn(x) & AlternativeFuel(x)) -> CanBeUsedAs(x,Corn))", "score": 0}
{"id": "eqasc_train_3111", "prediction": "(TransportationFuel(Ethanol) & TransportationFuel(Ethanol))", "score": 0}
{"id": "eqasc_train_3112", "prediction": "all x.(TransportationFuel(x) -> (AlcoholicFermentationOfGlucose(x) & ProducedBy(x,Corn,OtherPlants)))", "score": 0}
{"id": "eqasc_train_3113", "prediction": "(Iowa(Ethanol) & ImportantToIowa(Ethanol))", "score": 0}
{"id": "eqasc_train_3114", "prediction": "all x.(Corn(x) -> ImportantToIowa(x))", "score": 0}
{"id": "eqasc_train_3115", "prediction": "Ethanol (Biofuel(e) & Widespread(e))", "score": -1}
{"id": "eqasc_train_3116", "prediction": "all x.((Biofuel(x) & AlcoholicFermentation(x) & ProducedBy(x,Glucose,Corn,OtherPlants)) -> WidelyUsed(x))", "score": 0}
{"id": "eqasc_train_3117", "prediction": "all x.(Ethanol(x) -> GrainAlcohol(x))", "score": 0}
{"id": "eqasc_train_3118", "prediction": "all x.(GrainAlcohol(x) -> (ProducedByFermentationOfGlucose(x) & (InCorn(x) | InOtherPlants(x))))", "score": 0}
{"id": "eqasc_train_3119", "prediction": "all x.(Ethanol(x) -> MadeOfCorn(x))", "score": 0}
{"id": "eqasc_train_3120", "prediction": "all x.(Fermentation(x) -> CanBeUsedToMakeFuel(x))", "score": 0}
{"id": "eqasc_train_3121", "prediction": "all x.(Glucose(x) -> BodyFuel(x))", "score": 0}
{"id": "eqasc_train_3122", "prediction": "all x.(Ethanol(x) -> (ProducedByAlcoholicFermentation(x) & SugarInCornOrOtherPlants(x)))", "score": 0}
{"id": "eqasc_train_3123", "prediction": "all x.((AlcoholicFuel(x) & Methanol(x) & Ethanol(x)) -> UsedInCars(x))", "score": 0}
{"id": "eqasc_train_3124", "prediction": "all x y.((Fuel(x) & Corn(y)) -> UsedInCars(x,y))", "score": 0}
{"id": "eqasc_train_3125", "prediction": "all x.(Alcohol(x) -> (IncludesEthanol(x) | IncludesMethanol(x)))", "score": 0}
{"id": "eqasc_train_3126", "prediction": "all x.(Alcohol(x) -> CanMakeMethanol(x))", "score": 0}
{"id": "eqasc_train_3127", "prediction": "all x.(Ethanol(x) -> (DomesticallyProduced(x) & RenewableFuel(x)))", "score": 0}
{"id": "eqasc_train_3128", "prediction": "all x y.((AlcoholicFermentation(x) & SugarInCorn(y)) -> ProducesRenewableFuel(x,y))", "score": 0}
{"id": "eqasc_train_3129", "prediction": "all x.(CornSugar(x) -> PrimarilyGlucose(x))", "score": 0}
{"id": "eqasc_train_3130", "prediction": "all x.(Ethanol(x) -> (ProducedByAlcoholicFermentation(x) & SugarInCorn(x)))", "score": 0}
{"id": "eqasc_train_3131", "prediction": "all x y.((ScrapingOneselfOnContaminatedObject(x) & ScrapingOnContaminatedObject(y)) -> MayCauseInfection(x,y))", "score": 0}
{"id": "eqasc_train_3132", "prediction": "all x.(Infection(x) -> CausesMeningitis(x))", "score": 0}
{"id": "eqasc_train_3133", "prediction": "all x.(Meningitis(x) -> (CausesByScrapingOnContaminatedObject(x)))", "score": 0}
{"id": "eqasc_train_3134", "prediction": "all x.(Infection(x) -> InvasionByBacteria(x))", "score": 0}
{"id": "eqasc_train_3135", "prediction": "all x y.((Scraping(x) & ContaminatedObject(y)) -> MayCauseBacteriaInvasion(x,y))", "score": 0}
{"id": "eqasc_train_3136", "prediction": "all x.(Infection(x) -> CausesDeath(x))", "score": 0}
{"id": "eqasc_train_3137", "prediction": "all x.(ScrapingOneself(x) -> CausesDeath(x))", "score": 0}
{"id": "eqasc_train_3138", "prediction": "all x.((InfectedBlood(x) & ContaminatedNeedles(x)) -> Contact(x))", "score": 0}
{"id": "eqasc_train_3139", "prediction": "all x y.((ScrapingOneselfOnInfectedNeedle(x) & InfectedNeedle(y)) -> MayCauseInfection(x,y))", "score": 0}
{"id": "eqasc_train_3140", "prediction": "all x.(ScapingOneself(x) -> CausesDeath(x))", "score": 0}
{"id": "eqasc_train_3141", "prediction": "all x.(Germ(x) -> (ContaminatesSurfaces(x) & ContaminatesObjects(x)))", "score": 0}
{"id": "eqasc_train_3142", "prediction": "all x.((Scraping(x) & (Surface(x) | Thing(x)) & HasGerms(x)) -> MayCauseInfection(x))", "score": 0}
{"id": "eqasc_train_3143", "prediction": "all x.(Abscess(x) -> (InfectedArea(x) & SwollenWithPus(x)))", "score": 0}
{"id": "eqasc_train_3144", "prediction": "all x y.((ScrapingOnContaminatedObject(x) & ScrapingOn(x,y)) -> MayCauseSwollenArea(x))", "score": 0}
{"id": "eqasc_train_3145", "prediction": "all x.(Infection(x) -> (ContaminatedWounds(x) & Occurs(x)))", "score": 0}
{"id": "eqasc_train_3146", "prediction": "all x.(Scraping(x) -> MayLeadToContaminatedWounds(x))", "score": 0}
{"id": "eqasc_train_3147", "prediction": "all x.((Tear(x) | Scrape(x) | Cut(x)) -> Wound(x))", "score": 0}
{"id": "eqasc_train_3148", "prediction": "all x y.((Wound(x) & ContaminatedObject(y)) -> MayCauseInfection(x,y))", "score": 0}
{"id": "eqasc_train_3149", "prediction": "all x y.((ScrapingOneselfOnContaminatedObject(x) & Bacteria(y)) -> MayCauseInvasionOfBodyByInvasion(x,y))", "score": 0}
{"id": "eqasc_train_3150", "prediction": "exists x.(Infection(x) & LeadsToDisease(x))", "score": 0}
{"id": "eqasc_train_3151", "prediction": "all x y.((ScrapingOneselfOnContaminatedObject(x) & Object(y)) -> MayLeadToDisease(x,y))", "score": 0}
{"id": "eqasc_train_3152", "prediction": "all x.(Infection(x) -> CommonCauseOfDeath(x))", "score": 0}
{"id": "eqasc_train_3153", "prediction": "all x y.((ScrapingOneselfOnContaminatedObject(x) & ScrapingOnContaminatedObject(y)) -> MayCauseDeath(x,y))", "score": 0}
{"id": "eqasc_train_3154", "prediction": "all x.(Infection(x) -> LeadsToDeath(x))", "score": 0}
{"id": "eqasc_train_3155", "prediction": "all x.(Infection(x) -> CausesDeath(x))", "score": 0}
{"id": "eqasc_train_3156", "prediction": "all x.((ScrapingOnContaminatedObject(x) & ScrapingOnContaminatedObject(x)) -> MayCauseDeath(x))", "score": 0}
{"id": "eqasc_train_3157", "prediction": "all x y.((ScrapingOneselfOnContaminatedObject(x) & ScrapingOnContaminatedObject(y)) -> MayCauseDeath(x,y))", "score": 0}
{"id": "eqasc_train_3158", "prediction": "all x.(Infection(x) -> MajorPathToUltimateAmputation(x))", "score": 0}
{"id": "eqasc_train_3159", "prediction": "all x y.((ScrapingOnContaminatedObject(x) & DefectedObject(y)) -> CanLeadToLimbAmputation(x,y))", "score": 0}
{"id": "eqasc_train_3160", "prediction": "all x.(Lipid(x) -> (ConsistsOfFattyAcids(x) | ContainsOtherMolecules(x)))", "score": 0}
{"id": "eqasc_train_3161", "prediction": "all x.(Fat(x) -> Lipid(x))", "score": 0}
{"id": "eqasc_train_3162", "prediction": "all x.(Fat(x) -> (FattyAcids(x) & (ContainsMolecules(x) | ContainsMolecules(x))))", "score": 0}
{"id": "eqasc_train_3163", "prediction": "all x.(Lipid(x) -> (Fat(x) & CirculatesInBlood(x)))", "score": 0}
{"id": "eqasc_train_3164", "prediction": "all x.((Fat(x) & CirculatesInBlood(x)) -> ContainsOtherMolecules(x))", "score": 0}
{"id": "eqasc_train_3165", "prediction": "all x.(FattyAcid(x) -> BuildingBlockOfLipids(x))", "score": 0}
{"id": "eqasc_train_3166", "prediction": "all x.((BuildingBlocksOfLipids(x) & ContainsMolecules(x)) -> MayContainMolecules(x))", "score": 0}
{"id": "eqasc_train_3167", "prediction": "all x.(Lipid(x) -> MajorComponentOfCellMembrane(x))", "score": 0}
{"id": "eqasc_train_3168", "prediction": "all x.(CellMembrane(x) -> ConsistsOfFattyAcids(x))", "score": 0}
{"id": "eqasc_train_3169", "prediction": "all x.(Bacteria(x) -> (CapableOfGrowthOnFatherAcids(x) & CapableOfGrowthOnLipids(x)))", "score": 0}
{"id": "eqasc_train_3170", "prediction": "all x.(Bacteria(x) -> GrowsOnFattyAcids(x))", "score": 0}
{"id": "eqasc_train_3171", "prediction": "all x.(Lipid(x) -> (HydrophobicMolecule(x) & Diverse(x)))", "score": 0}
{"id": "eqasc_train_3172", "prediction": "all x.((Molecule(x) & DiverseHydrophobic(x)) -> (FattyAcids(x) & ContainsFats(x)))", "score": 0}
{"id": "eqasc_train_3173", "prediction": "all x.(Lipid(x) -> (ComposedOfCarbon(x) & ComposedOfOxygen(x) & ComposedOfHydrogen(x)))", "score": 0}
{"id": "eqasc_train_3174", "prediction": "all x.((Carbon(x) | Oxygen(x) | Hydrogen(x)) -> CanBeCombinedWithFatherAcids(x))", "score": 0}
{"id": "eqasc_train_3175", "prediction": "all x.(Fat(x) -> Lipoprotein(x))", "score": 0}
{"id": "eqasc_train_3176", "prediction": "all x.(Fat(x) -> (Fats(x) & Fats(x) & Fats(x) & Fats(x) & Fats(x) & Fats(x) & Fats(x)))", "score": 0}
{"id": "eqasc_train_3177", "prediction": "all x.(BiologicalMembrane(x) -> ContainsLipids(x))", "score": 0}
{"id": "eqasc_train_3178", "prediction": "all x.(BiologicalMembrane(x) -> (HasLipids(x) & MainConstituent(x) & ConsistsOfFatherAcids(x)))", "score": 0}
{"id": "eqasc_train_3179", "prediction": "all x.(Heat(x) -> ChangesStateOfMatter(x))", "score": 0}
{"id": "eqasc_train_3180", "prediction": "all x.((StateOfMatter(x) & Changed(x)) -> ChangeOfState(x))", "score": 0}
{"id": "eqasc_train_3181", "prediction": "all x.(Heat(x) -> ChangeOfState(x))", "score": 0}
{"id": "eqasc_train_3182", "prediction": "all x.(Heat(x) -> PresentInMatter(x))", "score": 0}
{"id": "eqasc_train_3183", "prediction": "all x y.((Matter(x) & State(y)) -> LikelyToExchange(x,y))", "score": 0}
{"id": "eqasc_train_3184", "prediction": "all x.(IncreaseOfHeat(x) -> IncreaseOfRarityInMatter(x))", "score": 0}
{"id": "eqasc_train_3185", "prediction": "all x.(TemperatureChange(x) -> StateOfMatter(x))", "score": 0}
{"id": "eqasc_train_3186", "prediction": "all x.(Liquid(x) -> OneStateOfMatter(x))", "score": 0}
{"id": "eqasc_train_3187", "prediction": "all x y.((Heat(x) & Stuff(y)) -> ChangesToLiquid(x,y))", "score": 0}
{"id": "eqasc_train_3188", "prediction": "all x.(Fire(x) -> MakesHeat(x))", "score": 0}
{"id": "eqasc_train_3189", "prediction": "all x.(Fire(x) -> ChangesStateOfMatter(x))", "score": 0}
{"id": "eqasc_train_3190", "prediction": "all x.(Matter(x) -> (exists inSolidState(x) | exists inLiquidState(x) | exists inGasState(x)) & CanChangeForms(x)))", "score": -1}
{"id": "eqasc_train_3191", "prediction": "all x y.((Heat(x) & Liquid(y)) -> ChangesToGas(x,y))", "score": 0}
{"id": "eqasc_train_3192", "prediction": "all x y.((Substance(x) & Heat(y)) -> CanChangeToLiquid(x,y))", "score": 0}
{"id": "eqasc_train_3193", "prediction": "all x.(Heat(x) -> (Warm(x) | Cold(x)))", "score": 0}
{"id": "eqasc_train_3194", "prediction": "all x.((Cold(x) & Warm(x)) -> ChangesStateOfMatter(x))", "score": 0}
{"id": "eqasc_train_3195", "prediction": "all x.(Temperature(x) -> ChangesStateOfMatter(x))", "score": 0}
{"id": "eqasc_train_3196", "prediction": "all x.((Plasma(x) & FourthStateOfMatter(x)) -> CanBeCreatedOnEarth(x))", "score": 0}
{"id": "eqasc_train_3197", "prediction": "all x.(Plasma(x) -> (CreatedWithHeat(x) & CreatedWithHeat(x)))", "score": 0}
{"id": "eqasc_train_3198", "prediction": "all x.(Gas(x) -> (StateOfMatter(x) & StateOfMatter(x)))", "score": 0}
{"id": "eqasc_train_3199", "prediction": "all x y.((Heat(x) & State(y) & HasThreeStates(x,y)) -> CanChange(x,y))", "score": 0}
{"id": "eqasc_train_3200", "prediction": "all x y z.((BodyOfWater(x) & ReceivesMoreWater(x,y) & CanHold(y,z)) -> FloodOccurs(x))", "score": 0}
{"id": "eqasc_train_3201", "prediction": "all x y.((HeavyRain(x) & System(y)) -> OverflowsIntoNearestWaterBody(y,x))", "score": 0}
{"id": "eqasc_train_3202", "prediction": "all x y.((HeavyRain(x) & Flood(y)) -> CanOccur(x,y))", "score": 0}
{"id": "eqasc_train_3203", "prediction": "all x y.((RainWater(x) & River(y)) -> (ReachesFaster(x,y) & CausesFlooding(x)))", "score": 0}
{"id": "eqasc_train_3204", "prediction": "all x y.((Rain(x) & River(y)) -> CausesToFlood(x,y))", "score": 0}
{"id": "eqasc_train_3205", "prediction": "all x.(WaterBody(x) -> (IncludesRiver(x) | IncludesRiver(x) | IncludesRiver(x) | IncludesRiver(x) | IncludesRiver(x) | IncludesRiver(x) | IncludesRiver(x) | IncludesLake(x) | IncludesPool(x)))", "score": 0}
{"id": "eqasc_train_3206", "prediction": "all x y.((River(x) & River(y) & ReceivesMoreWater(x,y)) -> Flood(x))", "score": 0}
{"id": "eqasc_train_3207", "prediction": "all x y.((Flood(x) & Flood(y)) -> (Lethal(x) & Devastating(y)))", "score": 0}
{"id": "eqasc_train_3208", "prediction": "all x.((BodyOfWater(x) & ReceivesMoreWater(x) & CanHold(x)) -> (Death(x) | Devastation(x)))", "score": 0}
{"id": "eqasc_train_3209", "prediction": "all x.(Lake(x) -> (LargeBodyOfInlandWater(x) & InlandWater(x)))", "score": 0}
{"id": "eqasc_train_3210", "prediction": "all x y.((Lake(x) & Lake(y) & ReceivesTooMuchWater(x,y)) -> FloodOccurs(x))", "score": 0}
{"id": "eqasc_train_3211", "prediction": "all x y.((Flooding(x) & Crop(y)) -> CanWipeOut(x,y))", "score": 0}
{"id": "eqasc_train_3212", "prediction": "all x y.((BodyOfWater(x) & ReceivesMoreWater(x,y) & CanHold(x,y)) -> CanDestroyCrops(x))", "score": 0}
{"id": "eqasc_train_3213", "prediction": "all x.((BodyOfWater(x) & ReceivesMoreWaterThanCanHold(x)) -> (Lethal(x) & Devastating(x)))", "score": 0}
{"id": "eqasc_train_3214", "prediction": "all x y.((Spore(x) & FloodWater(y)) -> WashedIntoField(x,y))", "score": 0}
{"id": "eqasc_train_3215", "prediction": "all x y.((BodyOfWater(x) & ReceivesMoreWater(x,y) & CanHold(x,y)) -> WashedIntoField(x))", "score": 0}
{"id": "eqasc_train_3216", "prediction": "all x.((Water(x) & FloodingOccurs(x)) -> SeeksLowerLevel(x))", "score": 0}
{"id": "eqasc_train_3217", "prediction": "all x.((Water(x) & Floods(x)) -> FlowsToLowerLevel(x))", "score": 0}
{"id": "eqasc_train_3218", "prediction": "all x.(FloodProbability(x) -> BasedOnPastFloods(x))", "score": 0}
{"id": "eqasc_train_3219", "prediction": "all x.((ProbabilityOfReceivingMoreWater(x)) -> BasedOnPast(x))", "score": 0}
{"id": "eqasc_train_3220", "prediction": "all x.(SedimentaryRock(x) -> FormedByDeposition(x))", "score": 5}
{"id": "eqasc_train_3221", "prediction": "all x.(SedimentaryRock(x) -> Sandstone(x))", "score": 0}
{"id": "eqasc_train_3222", "prediction": "all x.(Sandstone(x) -> FormedByDeposition(x))", "score": 0}
{"id": "eqasc_train_3223", "prediction": "all x.(Limestone(x) -> SedimentaryRock(x))", "score": 4}
{"id": "eqasc_train_3224", "prediction": "all x.(Limestone(x) -> FormedByDeposition(x))", "score": 1}
{"id": "eqasc_train_3225", "prediction": "all x.(Limestone(x) -> FormedByDeposition(x))", "score": 2}
{"id": "eqasc_train_3226", "prediction": "all x.(Soil(x) -> (Sand(x) | Clay(x) | OrganicDeposits(x)))", "score": 0}
{"id": "eqasc_train_3227", "prediction": "all x.(SedimentaryRock(x) -> (FormedBySoil(x) & FormedBySand(x) & FormedByClay(x) & FormedByOrganicMaterials(x)))", "score": 0}
{"id": "eqasc_train_3228", "prediction": "all x.(Sandstone(x) -> SedimentaryRock(x))", "score": 1}
{"id": "eqasc_train_3229", "prediction": "all x.(Sandstone(x) -> FormedByDeposition(x))", "score": 1}
{"id": "eqasc_train_3230", "prediction": "all x.(Limestone(x) -> FormedByDeposition(x))", "score": 1}
{"id": "eqasc_train_3231", "prediction": "all x.(SedimentaryRock(x) -> (Weathered(x) & Eroded(x) & FormsNewGenerationOfSedimentaryRocks(x)))", "score": 0}
{"id": "eqasc_train_3232", "prediction": "all x.((Rock(x) & FormedByDeposition(x)) -> ErodedToFormNewGeneration(x))", "score": 0}
{"id": "eqasc_train_3233", "prediction": "all x y.((Deposit(x) & River(y)) -> (AccumulationOfSediment(x,y) & DepositedAtMouth(x,y)))", "score": 0}
{"id": "eqasc_train_3234", "prediction": "all x.(River(x) -> FormsSedimentaryRocks(x))", "score": 0}
{"id": "eqasc_train_3235", "prediction": "all x.(Sandstone(x) -> FormedByDeposition(x))", "score": 0}
{"id": "eqasc_train_3236", "prediction": "all x y.((LongTail(x) & Animal(y)) -> MovesThroughWater(x,y))", "score": 0}
{"id": "eqasc_train_3237", "prediction": "all x.(Shark(x) -> UsesTailToMove(x))", "score": 0}
{"id": "eqasc_train_3238", "prediction": "all x.(Shark(x) -> HasTail(x))", "score": 0}
{"id": "eqasc_train_3239", "prediction": "all x y.((LongTail(x) & Animal(y)) -> MovesThroughH2o(x,y))", "score": 0}
{"id": "eqasc_train_3240", "prediction": "all x.(ThresherShark(x) -> TailFinsAsLongAsBody(x))", "score": 0}
{"id": "eqasc_train_3241", "prediction": "all x.(Fin(x) -> (MovesThroughWater(x) & RestOfBody(x)))", "score": 0}
{"id": "eqasc_train_3242", "prediction": "all x.(Swimming(x) -> (SpecialTypeOfMoving(x) & MovingInOrThroughWater(x)))", "score": 0}
{"id": "eqasc_train_3243", "prediction": "all x y.((LongTail(x) & Animal(y)) -> CanBeUsedForSwimming(x,y))", "score": 0}
{"id": "eqasc_train_3244", "prediction": "all x.(ThresherShark(x) -> (LongTailedSubtropicalFish(x) & SwimsAlongSurface(x)))", "score": 0}
{"id": "eqasc_train_3245", "prediction": "all x.(ThresherShark(x) -> MovesThroughWater(x))", "score": 0}
{"id": "eqasc_train_3246", "prediction": "all x.(LongTail(x) -> CanSwimThroughWater(x))", "score": 0}
{"id": "eqasc_train_3247", "prediction": "all x.(Crocodile(x) -> SwimsWithTail(x))", "score": 0}
{"id": "eqasc_train_3248", "prediction": "all x.(Crocodile(x) -> MovesThroughWater(x))", "score": 0}
{"id": "eqasc_train_3249", "prediction": "all x.(TailFin(x) -> (Long(x) & Sweeped(x)))", "score": 0}
{"id": "eqasc_train_3250", "prediction": "all x y.((TailFin(x) & Animal(y)) -> SweepsThroughWater(x,y))", "score": 0}
{"id": "eqasc_train_3251", "prediction": "all x.(Shark(x) -> (MovesThroughWaterWithTail(x) & HasTail(x)))", "score": 0}
{"id": "eqasc_train_3252", "prediction": "all x y.((Water(x) & River(y)) -> RemainsInCurrent(x,y))", "score": 0}
{"id": "eqasc_train_3253", "prediction": "all x y.((LongTail(x) & Animal(y)) -> HelpsNavigateThroughRiver(x,y))", "score": 0}
{"id": "eqasc_train_3254", "prediction": "all x.(Salamander(x) -> (LongTail(x) & UsedForSwimming(x)))", "score": 0}
{"id": "eqasc_train_3255", "prediction": "all x.(Salamander(x) -> SwimsThroughWater(x))", "score": 0}
{"id": "eqasc_train_3256", "prediction": "all x y.((MaleTortoise(x) & FemaleTortoise(y)) -> (LongTail(x) & ShortFatTail(y)))", "score": 0}
{"id": "eqasc_train_3257", "prediction": "all x.(Tortoise(x) -> MovesThroughWater(x))", "score": 0}
{"id": "eqasc_train_3258", "prediction": "all x.(Salamander(x) -> (MovesThroughWater(x) & Water(x)))", "score": 0}
{"id": "eqasc_train_3259", "prediction": "all x.(Digestion(x) -> BreaksDownFoodIntoComponents(x))", "score": 0}
{"id": "eqasc_train_3260", "prediction": "all x y.((Food(x) & SmallIntestine(y)) -> DigestsAndAbsorbsIn(x,y))", "score": 0}
{"id": "eqasc_train_3261", "prediction": "all x y.((Food(x) & SmallIntestine(y)) -> DigestsIn(x,y))", "score": 0}
{"id": "eqasc_train_3262", "prediction": "all x.(DigestiveEnzymes(x) -> NecessaryForCompleteDigestion(x))", "score": 0}
{"id": "eqasc_train_3263", "prediction": "all x y.((Enzyme(x) & Food(y)) -> BreaksDownIntoComponents(x,y))", "score": 0}
{"id": "eqasc_train_3264", "prediction": "all x.(HealthStartsInStomach(x) -> Digestive(x))", "score": 0}
{"id": "eqasc_train_3265", "prediction": "all x y.((Stomach(x) & Food(y)) -> BreaksDownIntoComponents(x,y))", "score": 0}
{"id": "eqasc_train_3266", "prediction": "all x.(Saliva(x) -> BreaksDownFood(x))", "score": 0}
{"id": "eqasc_train_3267", "prediction": "all x.(Digestion(x) -> InvolvesSaline(x))", "score": 0}
{"id": "eqasc_train_3268", "prediction": "all x.(FoodProtein(x) -> (ChangesIntoEnergy(x) | ChangesIntoHeat(x)) & (UsedByBody(x) | AbsorbedByBody(x))))", "score": -1}
{"id": "eqasc_train_3269", "prediction": "all x.(Digestion(x) -> BreaksDownFoodProteinsIntoEnergyOrHeat(x))", "score": 0}
{"id": "eqasc_train_3270", "prediction": "-HasSalvia(x) -> BlocksDigestion(x))", "score": -1}
{"id": "eqasc_train_3271", "prediction": "all x.(LackOfSaline(x) -> HemmingsBreakdownOfFoodIntoComponents(x))", "score": 0}
{"id": "eqasc_train_3272", "prediction": "all x y z.((Enzyme(x) & Food(y) & Body(z)) -> BreaksDownSoBodyCanAbsorb(x,y,z))", "score": 0}
{"id": "eqasc_train_3273", "prediction": "all x y.((Food(x) & SmallIntestine(y)) -> AbsorbedIn(x,y))", "score": 0}
{"id": "eqasc_train_3274", "prediction": "all x y.((Nutrient(x) & Intestine(y)) -> (AbsorbedBy(x,y) & CoatedWalls(x) & FewerNutrientsAbsorbed(x)))", "score": 0}
{"id": "eqasc_train_3275", "prediction": "all x.(Digestion(x) -> BreaksDownFoodIntoNutrients(x))", "score": 0}
{"id": "eqasc_train_3276", "prediction": "all x.((Fish(x) | Rice(x)) -> StapleFood(x))", "score": 0}
{"id": "eqasc_train_3277", "prediction": "all x y.((Rice(x) & Body(y) & BreaksDownIntoComponents(x,y)) -> Digestion(x))", "score": 0}
{"id": "eqasc_train_3278", "prediction": "all x y.((Smallintestine(x) & Digestion(y)) -> HappensIn(y,x))", "score": 0}
{"id": "eqasc_train_3279", "prediction": "all x y.((Ssperm(x) & Male(y)) -> SwimsFromTo(x,y))", "score": 0}
{"id": "eqasc_train_3280", "prediction": "all x.(Endocrinology(x) -> (StudiesOrgans(x) & ProducesHydrogens(x) & InvolvesFertility(x) & InvolvesReproduction(x)))", "score": 0}
{"id": "eqasc_train_3281", "prediction": "all x y.((Ssperm(x) & Organ(y) & ProducesHormones(y,x)) -> SwimsFrom(x,y))", "score": 0}
{"id": "eqasc_train_3282", "prediction": "all x y.((MaleGamete(x) & Male(y)) -> SwimsFromTo(x,y))", "score": 0}
{"id": "eqasc_train_3283", "prediction": "all x y.((Fertilization(x) & Sperm(y)) -> PenetrationOfEgg(x,y))", "score": 0}
{"id": "eqasc_train_3284", "prediction": "all x y z.((Ssperm(x) & Male(y) & Female(z)) -> SwimsFromTo(x,y,z))", "score": 0}
{"id": "eqasc_train_3285", "prediction": "all x.(Ssperm(x) -> SwimsWithTail(x))", "score": 0}
{"id": "eqasc_train_3286", "prediction": "all x.((MovesWithTail(x) & MaleToFemaleReproductiveOrgans(x)) -> SwimsForFertilization(x))", "score": 0}
{"id": "eqasc_train_3287", "prediction": "all x.(WordForFemale(x) -> (FemaleOfAnyAge(x)))", "score": 0}
{"id": "eqasc_train_3288", "prediction": "all x y.((Ssperm(x) & Men(y)) -> SwimsToReproductiveOrgans(x,y))", "score": 0}
{"id": "eqasc_train_3289", "prediction": "all x.((Spore(x) | Egg(x)) -> Gamete(x))", "score": 0}
{"id": "eqasc_train_3290", "prediction": "all x y.((MaleGamete(x) & FemaleOrgan(y)) -> SwimsToForFertilization(x,y))", "score": 0}
{"id": "eqasc_train_3291", "prediction": "all x y.((MaleGamete(x) & Male(y)) -> SwimsFromTo(x,y))", "score": 0}
{"id": "eqasc_train_3292", "prediction": "all x y z.((Ssperm(x) & Male(y) & Female(z)) -> SwimsFromTo(x,y,z))", "score": 0}
{"id": "eqasc_train_3293", "prediction": "all x.(FertilizationOccurs(x) -> (FertilizedEggs(x) | FertileEggs(x)))", "score": 0}
{"id": "eqasc_train_3294", "prediction": "all x y.((Ssperm(x) & Male(y) & Female(y)) -> SwimsFromTo(x,y))", "score": 0}
{"id": "eqasc_train_3295", "prediction": "all x y.((Gamete(x) & Sperm(y) & Egg(y)) -> ProducedByMitosis(x,y))", "score": 0}
{"id": "eqasc_train_3296", "prediction": "all x y z.((Gamete(x) & Male(y) & Female(z)) -> SwimsFromForFertilityOrgansForFertility(x,y,z))", "score": 0}
{"id": "eqasc_train_3297", "prediction": "all x y z.((Ssperm(x) & Male(y) & Female(z)) -> SwimsFromTo(x,y,z))", "score": 0}
{"id": "eqasc_train_3298", "prediction": "all x y.((MulticellularOrganism(x) & Egg(y) & Fertilization(x,y)) -> InitiatedBy(x,y))", "score": 0}
{"id": "eqasc_train_3299", "prediction": "all x y.((Organism(x) & FemaleOrgan(y)) -> EggFertilization(x,y))", "score": 0}
{"id": "eqasc_train_3300", "prediction": "all x.(Semen(x) -> CarrierForSperm(x))", "score": 0}
{"id": "eqasc_train_3301", "prediction": "all x y z.((Semen(x) & Male(y) & Female(z)) -> GoesFromToForFertilityOrgans(x,y,z))", "score": 0}
{"id": "eqasc_train_3302", "prediction": "all x y.((SlowSsperm(x) & MaleInfertility(y)) -> LeadingCause(x,y))", "score": 0}
{"id": "eqasc_train_3303", "prediction": "all x.(SlowSsperm(x) -> -SwimFast(x))", "score": 0}
{"id": "eqasc_train_3304", "prediction": "all x.((Body(x) & Stomach(x) & ReproductiveOrgans(x)) -> Within(x,y))", "score": 0}
{"id": "eqasc_train_3305", "prediction": "all x y.((Ssperm(x) & MaleOrgan(y)) -> SwimsFromTo(x,y))", "score": 0}
{"id": "eqasc_train_3306", "prediction": "all x.(Chloroplast(x) -> (Organelle(x) & FoundInCells(x) & FoundInPlantsAndAlgae(x)))", "score": 0}
{"id": "eqasc_train_3307", "prediction": "all x.(Chloroplast(x) -> (Organelle(x) & FoundInBambooCells(x)))", "score": 0}
{"id": "eqasc_train_3308", "prediction": "all x.(Chloroplast(x) -> Organelle(x))", "score": 0}
{"id": "eqasc_train_3309", "prediction": "all x y.((Chlorophyll(x) & PlantCell(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_train_3310", "prediction": "all x.(Chloroplast(x) -> ServesAsPhotosynthesisSite(x))", "score": 0}
{"id": "eqasc_train_3311", "prediction": "all x y.((Plant(x) & AlgaeCell(y)) -> PhotosynthesisSite(x,y))", "score": 0}
{"id": "eqasc_train_3312", "prediction": "all x.(Bubble(x) -> ContainsChlorophylls(x))", "score": 0}
{"id": "eqasc_train_3313", "prediction": "all x.(Photosynthesis(x) -> exists y.(Organelle(y) & Chlorophyll(y)))", "score": 0}
{"id": "eqasc_train_3314", "prediction": "all x y z.((Algae(x) & Plant(y) & Algae(z)) -> PhotosynthesisOccursIn(x,y,z))", "score": 0}
{"id": "eqasc_train_3315", "prediction": "all x.(GreenAlgae(x) -> SimplestGreenPlant(x))", "score": 0}
{"id": "eqasc_train_3316", "prediction": "all x.(Chloroplast(x) -> (Organelle(x) & FoundInCellsOfSimplestOfGreenPlants(x)))", "score": 0}
{"id": "eqasc_train_3317", "prediction": "all x.(Chloroplast(x) -> ContainsPhotosyntheticPigments(x))", "score": 0}
{"id": "eqasc_train_3318", "prediction": "all x.(Organelle(x) -> ContainsPhotosynethicPigments(x))", "score": 0}
{"id": "eqasc_train_3319", "prediction": "all x.(PhotosynthesisSite(x) -> (Organelles(x) & FoundInCellsOfPlantsAndAlgae(x)))", "score": 0}
{"id": "eqasc_train_3320", "prediction": "all x y.((Pigment(x) & Algae(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_train_3321", "prediction": "all x y.((Organelle(x) & Plant(y) & Algae(y)) -> (ContainsPhotosyntheticPigments(x) & FoundInCells(x,y)))", "score": 0}
{"id": "eqasc_train_3322", "prediction": "all x.(Moss(x) -> NonvascularPlant(x))", "score": 0}
{"id": "eqasc_train_3323", "prediction": "all x.(Chloroplast(x) -> (Organelle(x) & FoundInCellsOfMosses(x)))", "score": 0}
{"id": "eqasc_train_3324", "prediction": "all x y.((Animal(x) & Animal(y)) -> CanUseSoundForCommunication(x,y))", "score": 0}
{"id": "eqasc_train_3325", "prediction": "all x.(SharingInformation(x) -> CommunicationGame(x))", "score": 0}
{"id": "eqasc_train_3326", "prediction": "all x y.((Animal(x) & Sound(y)) -> ShareInformation(x,y))", "score": 0}
{"id": "eqasc_train_3327", "prediction": "all x.(Animal(x) -> LocalizesSound(x))", "score": 0}
{"id": "eqasc_train_3328", "prediction": "all x.(Animal(x) -> LocatesSoundWithEars(x))", "score": 0}
{"id": "eqasc_train_3329", "prediction": "all x y.((Individual(x) & Organism(y)) -> Communicates(x,y))", "score": 0}
{"id": "eqasc_train_3330", "prediction": "all x y.((Animal(x) & Sound(y)) -> UsesToFindMate(x,y))", "score": 0}
{"id": "eqasc_train_3331", "prediction": "all x.(Coyote(x) -> CommunicatesByHowling(x))", "score": 0}
{"id": "eqasc_train_3332", "prediction": "all x.(Howling(x) -> UsedByCoyotes(x))", "score": 0}
{"id": "eqasc_train_3333", "prediction": "all x.(Sound(x) -> (Vibrates(x) | MovesBackAndForth(x)))", "score": 0}
{"id": "eqasc_train_3334", "prediction": "all x.(Animal(x) -> (UsesVocalCriffs(x) & Communicate(x)))", "score": 0}
{"id": "eqasc_train_3335", "prediction": "all x.(Barking(x) -> DogsCommunicate(x))", "score": 0}
{"id": "eqasc_train_3336", "prediction": "all x.(Dog(x) -> Bark(x))", "score": 0}
{"id": "eqasc_train_3337", "prediction": "all x y.((Animal(x) & Sound(y)) -> ReliesOnToCommunicate(x,y))", "score": 0}
{"id": "eqasc_train_3338", "prediction": "all x.(Species(x) -> ReliesOnSound(x))", "score": 0}
{"id": "eqasc_train_3339", "prediction": "exists x.(Insect(x) & CommunicatesWithSounds(x))", "score": 0}
{"id": "eqasc_train_3340", "prediction": "all x y.((Insect(x) & Sound(y)) -> UsesToTalk(x,y))", "score": 0}
{"id": "eqasc_train_3341", "prediction": "all x.((Snarl(x) | Bark(x)) -> MakesSound(x))", "score": 0}
{"id": "eqasc_train_3342", "prediction": "exists x.(Animal(x) & CommunicatesThroughBarks(x) & CommunicatesThroughSnarls(x))", "score": 0}
{"id": "eqasc_train_3343", "prediction": "all x.(Sound(x) -> VibrationInAir(x))", "score": 0}
{"id": "eqasc_train_3344", "prediction": "all x y.((Vibration(x) & Air(y)) -> CanBeUsedForCommunication(x,y))", "score": 0}
{"id": "eqasc_train_3345", "prediction": "all x.(Goat(x) -> FourLeggedAnimal(x))", "score": 0}
{"id": "eqasc_train_3346", "prediction": "all x y.((Girl(x) & Goat(y)) -> CanUseSoundForCommunication(x,y))", "score": 0}
{"id": "eqasc_train_3347", "prediction": "all x.(Orangutan(x) -> HasVocalRepertoire(x,13))", "score": 0}
{"id": "eqasc_train_3348", "prediction": "all x.(Orangutan(x) -> CanVocalizeForCommunication(x))", "score": 0}
{"id": "eqasc_train_3349", "prediction": "all x.(SoundVibration(x) -> DifferentFrequency(x))", "score": 0}
{"id": "eqasc_train_3350", "prediction": "all x.(Vibration(x) -> UsedForCommunication(x))", "score": 0}
{"id": "eqasc_train_3351", "prediction": "all x.(Mammal(x) -> UsesSoundForCommunication(x))", "score": 0}
{"id": "eqasc_train_3352", "prediction": "all x y.((MechanicalWaves(x) & Animal(y)) -> CanBeUsedForCommunication(x,y))", "score": 0}
{"id": "eqasc_train_3353", "prediction": "all x.(Animal(x) -> UsesSoundInSophisticWeapons(x))", "score": 0}
{"id": "eqasc_train_3354", "prediction": "all x.(AnimalCommunication(x) -> Sorptuous(x))", "score": 0}
{"id": "eqasc_train_3355", "prediction": "all x.(Stove(x) -> (UsedForCooking(x) & GeneratesHeat(x)))", "score": 2}
{"id": "eqasc_train_3356", "prediction": "all x y.((Waitth(x) & Staff(y) & Machinery(z)) -> HeatsAir(x,y))", "score": 0}
{"id": "eqasc_train_3357", "prediction": "all x.(Stove(x) -> UsedForCooking(x))", "score": 1}
{"id": "eqasc_train_3358", "prediction": "all x.(Cooking(x) -> (UsedForCooking(x) | UsedForCooking(x)))", "score": 0}
{"id": "eqasc_train_3359", "prediction": "all x.(Gas(x) -> GeneratesHeat(x))", "score": 0}
{"id": "eqasc_train_3360", "prediction": "all x.(Bacteria(x) -> DissectedByCookingHeat(x))", "score": 0}
{"id": "eqasc_train_3361", "prediction": "all x.((CookingOnStove(x) & Stove(x)) -> DisruptsBacteria(x))", "score": 0}
{"id": "eqasc_train_3362", "prediction": "all x.(Gas(x) -> (SourceOfEnergy(x) & HeatsWater(x) & HeatsStove(x)))", "score": 0}
{"id": "eqasc_train_3363", "prediction": "all x.(Stove(x) -> CooksWithGas(x))", "score": 0}
{"id": "eqasc_train_3364", "prediction": "all x.(Fire(x) -> (GeneratesHeat(x) & GeneratesLight(x)))", "score": 0}
{"id": "eqasc_train_3365", "prediction": "all x.(Stove(x) -> UsesFireForCooking(x))", "score": 0}
{"id": "eqasc_train_3366", "prediction": "all x y.((Potato(x) & Kale(y)) -> Cooks(x,y))", "score": 0}
{"id": "eqasc_train_3367", "prediction": "all x y.((Stove(x) & Potato(y)) -> (Prepares(x,y) & GeneratesHeat(x,y)))", "score": 0}
{"id": "eqasc_train_3368", "prediction": "all x.(WoodStove(x) -> (ForCooking(x) | ForHeating(x)))", "score": 0}
{"id": "eqasc_train_3369", "prediction": "all x.(Wood(x) -> CanBeUsedForCooking(x))", "score": 0}
{"id": "eqasc_train_3370", "prediction": "all x.(Cooking(x) -> MakesFoodPlasable(x))", "score": 0}
{"id": "eqasc_train_3371", "prediction": "all x y.((GeneratingHeat(x) & Food(y)) -> MakesPastable(x,y))", "score": 0}
{"id": "eqasc_train_3372", "prediction": "all x.(Generation(x) -> MakingOfElectricity(x))", "score": 0}
{"id": "eqasc_train_3373", "prediction": "all x.(Stove(x) -> UsedForCooking(x))", "score": 1}
{"id": "eqasc_train_3374", "prediction": "all x.(WoodBoilingStove(x) -> (ProvidesHeat(x) & ProvidesHeat(x) & ProvidesHeat(x) & ProvidesHeat(x) & ProvidesHeat(x) & ProvidesHeat(x) & ProvidesHeat(x) & ProvidesHeat(x) & ProvidesHeat(x) & ProvidesHeat(x) & Cooking(x)))", "score": 0}
{"id": "eqasc_train_3375", "prediction": "all x.(WoodBurningStove(x) -> CreatesHeatForWarmth(x))", "score": 0}
{"id": "eqasc_train_3376", "prediction": "all x.(Fire(x) -> IntenseHeat(x))", "score": 4}
{"id": "eqasc_train_3377", "prediction": "all x.(Stove(x) -> (UsedForCooking(x) & GeneratesFire(x)))", "score": 0}
{"id": "eqasc_train_3378", "prediction": "all x.(MetabolicReation(x) -> GeneratesHeat(x))", "score": 0}
{"id": "eqasc_train_3379", "prediction": "all x.(Stove(x) -> HeatsByMetabolicReaction(x))", "score": 0}
{"id": "eqasc_train_3380", "prediction": "all x.(Animal(x) -> AdaptsToColdTemperatures(x))", "score": 1}
{"id": "eqasc_train_3381", "prediction": "all x.(Cat(x) -> AdaptsToColdTemperatures(x))", "score": 1}
{"id": "eqasc_train_3382", "prediction": "all x.((Contact(x) & ColdTemperature(x)) -> CausesFrostbite(x))", "score": 0}
{"id": "eqasc_train_3383", "prediction": "all x.(Animal(x) -> (AdaptsToAvoidFrostbite(x) & -ImmediateFrostbite(x)))", "score": 0}
{"id": "eqasc_train_3384", "prediction": "all x.(ExtremeTemperature(x) -> KillsAnimals(x))", "score": 0}
{"id": "eqasc_train_3385", "prediction": "all x.(Animal(x) -> AdaptsToAvoidDeath(x))", "score": 0}
{"id": "eqasc_train_3386", "prediction": "all x.(Temperature(x) -> (Moderate(x) & COLD(x)))", "score": 0}
{"id": "eqasc_train_3387", "prediction": "all x.(Animal(x) -> AdaptsToCoolnessInWinter(x))", "score": 0}
{"id": "eqasc_train_3388", "prediction": "all x.(Reindeer(x) -> WellSuitedForArcticCold(x))", "score": 0}
{"id": "eqasc_train_3389", "prediction": "all x y.((Reindeer(x) & ArcticTemperature(y)) -> AdaptsTo(x,y))", "score": 0}
{"id": "eqasc_train_3390", "prediction": "all x.(Cow(x) -> AdaptsToColdTemperatures(x))", "score": 0}
{"id": "eqasc_train_3391", "prediction": "all x.((ColdWetWeather(x) & -FreezingTemperatures(x)) -> Hypothermia(x))", "score": 0}
{"id": "eqasc_train_3392", "prediction": "all x y.((Animal(x) & ColdWetWeather(y)) -> AdaptsTo(x,y))", "score": 0}
{"id": "eqasc_train_3393", "prediction": "(all x.(Winter(x) -> VeryCold(x)))", "score": 0}
{"id": "eqasc_train_3394", "prediction": "all x.(Winter(x) -> CanAdapt(x))", "score": 0}
{"id": "eqasc_train_3395", "prediction": "all x.(AdaptationLivingThing(x) -> AdaptsToEnvironment(x))", "score": 0}
{"id": "eqasc_train_3396", "prediction": "all x.(Animal(x) -> LivingThing(x))", "score": 0}
{"id": "eqasc_train_3397", "prediction": "all x.(Sasquatch(x) -> EarthTypeAnimal(x))", "score": 0}
{"id": "eqasc_train_3398", "prediction": "all x.(Sasquatch(x) -> AdaptsToColdTemperatures(x))", "score": 0}
{"id": "eqasc_train_3399", "prediction": "all x y.((Reindeer(x) & ArcticTemperatures(y)) -> AdaptsTo(x,y))", "score": 0}
{"id": "eqasc_train_3400", "prediction": "all x.(Virus(x) -> -Cell(x))", "score": 0}
{"id": "eqasc_train_3401", "prediction": "all x.(Rabie(x) -> -Cell(x))", "score": 0}
{"id": "eqasc_train_3402", "prediction": "all x.(InfluenzaVirus(x) -> Orthomyxovirus(x))", "score": 0}
{"id": "eqasc_train_3403", "prediction": "all x.(InfluenzaOrthomyxovirus(x) -> -Cell(x))", "score": 0}
{"id": "eqasc_train_3404", "prediction": "all x.(Herpes(x) -> -Cell(x))", "score": 0}
{"id": "eqasc_train_3405", "prediction": "all x.(PlantCell(x) -> (SurroundedByCellMembrane(x) & SurroundedByCellWall(x)))", "score": 0}
{"id": "eqasc_train_3406", "prediction": "all x.(Virus(x) -> (-HasWalls(x) & -HasMembranes(x)))", "score": 0}
{"id": "eqasc_train_3407", "prediction": "all x.(Virus(x) -> SimplestOrganism(x))", "score": 0}
{"id": "eqasc_train_3408", "prediction": "all x.(Cell(x) -> -SimplestOrganism(x))", "score": 0}
{"id": "eqasc_train_3409", "prediction": "all x.(Virus(x) -> (SmallerAgentOfDisease(x) & SmallestAgentOfDisease(x)))", "score": 0}
{"id": "eqasc_train_3410", "prediction": "all x.((SmallestAgentOfDisease(x) & -Cell(x)) -> -SmallestAgentOfDisease(x))", "score": 0}
{"id": "eqasc_train_3411", "prediction": "all x.(Virus(x) -> DifficultToClassify(x))", "score": 0}
{"id": "eqasc_train_3412", "prediction": "all x.((DifficultToClassify(x) & -Cell(x)) -> -Cell(x))", "score": 1}
{"id": "eqasc_train_3413", "prediction": "all x.(Smallpox(x) -> -Cell(x))", "score": 0}
{"id": "eqasc_train_3414", "prediction": "all x.(Tissue(x) -> MadeOfCells(x))", "score": 0}
{"id": "eqasc_train_3415", "prediction": "all x.(Virus(x) -> -Tissue(x))", "score": 0}
{"id": "eqasc_train_3416", "prediction": "all x.(SmallestAgentOfDisease(x) -> -Cells(x))", "score": 0}
{"id": "eqasc_train_3417", "prediction": "all x.(InfluenzaVirus(x) -> Mutate(x))", "score": 0}
{"id": "eqasc_train_3418", "prediction": "all x.(Influenza(x) -> -Cell(x))", "score": 0}
{"id": "eqasc_train_3419", "prediction": "all x.(TobaccoMosque(x) -> -MadeUpOfCells(x))", "score": 0}
{"id": "eqasc_train_3420", "prediction": "all x y.((Object(x) & Material(y) & MadeOf(x,y)) -> HasPropertiesOf(x,y))", "score": 0}
{"id": "eqasc_train_3421", "prediction": "all x.(Object(x) -> MadeOfDifferentMaterial(x))", "score": 0}
{"id": "eqasc_train_3422", "prediction": "all x y.((Object(x) & Material(y)) -> ShareProperties(x,y))", "score": 0}
{"id": "eqasc_train_3423", "prediction": "all x.(Asteroid(x) -> (RockLikeObject(x) & IrregularShape(x)))", "score": 0}
{"id": "eqasc_train_3424", "prediction": "all x y.((Asteroid(x) & MadeOf(x,y) & Material(y)) -> HasPropertiesOf(x,y))", "score": 0}
{"id": "eqasc_train_3425", "prediction": "all x y.((AppearanceNode(x) & (Color(y) | MaterialProperties(y) | TextureMaps(y))) -> AffectsAppearance(x,y))", "score": 0}
{"id": "eqasc_train_3426", "prediction": "all x y.((Object(x) & Material(y) & MadeWith(x,y)) -> (Appearance(x,y) & Texture(x,y) & Color(x,y)))", "score": 0}
{"id": "eqasc_train_3427", "prediction": "all x.(Metal(x) -> VersatileMaterial(x))", "score": 0}
{"id": "eqasc_train_3428", "prediction": "all x.((Object(x) & MadeOfMetal(x)) -> HasPropertiesOfMetal(x))", "score": 0}
{"id": "eqasc_train_3429", "prediction": "(all x.(Cuivre(x) -> DurableMaterial(x)))", "score": 0}
{"id": "eqasc_train_3430", "prediction": "all x.((Frame(x) & MadeOfCopper(x)) -> HasPropertiesOfCopper(x))", "score": 0}
{"id": "eqasc_train_3431", "prediction": "all x.(Object(x) -> (HasMass(x) & HasDensity(x) & HasMaterialProperties(x)))", "score": 0}
{"id": "eqasc_train_3432", "prediction": "all x y.((MadeOf(x,y) & Material(y)) -> (HasMass(x,y) & HasDensity(x,y)))", "score": 0}
{"id": "eqasc_train_3433", "prediction": "all x.(StandardKnifeBladeMaterial(x) -> HeatTreatedStainlessSteel(x))", "score": 0}
{"id": "eqasc_train_3434", "prediction": "all x.((Object(x) & MadeOfStainlessSteel(x)) -> HasStainlessSteelProperties(x))", "score": 0}
{"id": "eqasc_train_3435", "prediction": "all x y.((Property(x) & Object(y)) -> Characteristics(x,y))", "score": 0}
{"id": "eqasc_train_3436", "prediction": "all x y.((MadeOf(x,y) & Material(y)) -> HasCharacteristicsOf(x,y))", "score": 0}
{"id": "eqasc_train_3437", "prediction": "all x.(Gold(x) -> DenseMaterial(x))", "score": 0}
{"id": "eqasc_train_3438", "prediction": "all x.((Object(x) & MadeOutOfGold(x)) -> Dense(x))", "score": 0}
{"id": "eqasc_train_3439", "prediction": "all x.((Heading(x) & MaterialsResearch(x) & Materials(x) & CeramicMaterials(x) & CompositeMaterials(x)) -> Heading(x))", "score": 0}
{"id": "eqasc_train_3440", "prediction": "all x y.((Object(x) & MadeOfCeramic(x)) -> HasPropertiesOfCeramic(x,y))", "score": 0}
{"id": "eqasc_train_3441", "prediction": "all x.(Object(x) -> ItemInRealWorld(x))", "score": 0}
{"id": "eqasc_train_3442", "prediction": "all x y.((Item(x) & Material(y) & MadeOf(x,y)) -> HasPropertiesOf(x,y))", "score": 0}
{"id": "eqasc_train_3443", "prediction": "all x.(Property(x) -> (SeparateObjectsOrMaterials(x) | SortGroup(x)))", "score": 0}
{"id": "eqasc_train_3444", "prediction": "all x.(Item(x) -> Material(x))", "score": 0}
{"id": "eqasc_train_3445", "prediction": "all x.(Toxicity(x) -> InherentPropertyOfMaterial(x))", "score": 0}
{"id": "eqasc_train_3446", "prediction": "all x y.((Object(x) & Toxicity(y)) -> (inheritedFromProperties(x,y) & ObjectProperties(x,y)))", "score": 0}
{"id": "eqasc_train_3447", "prediction": "all x.((Object(x) & MadeFromIron(x) & MadeFromSteel(x)) -> Magnetism(x))", "score": 0}
{"id": "eqasc_train_3448", "prediction": "all x.((MadeWithIron(x) & MagnetismProperty(x)) -> HasMagnetism(x))", "score": 0}
{"id": "eqasc_train_3449", "prediction": "all x.((Object(x) & MadeOfMetal(x)) -> HasPropertiesOfMetal(x))", "score": 0}
{"id": "eqasc_train_3450", "prediction": "all x.(StrengthOfMaterials(x) -> StudiesPropertiesOfMaterials(x))", "score": 0}
{"id": "eqasc_train_3451", "prediction": "all x.(Object(x) -> HasStrength(x))", "score": 0}
{"id": "eqasc_train_3452", "prediction": "all x.(Drug(x) -> (ChemicalSubstance(x) & Material(x)))", "score": 0}
{"id": "eqasc_train_3453", "prediction": "all x.((Object(x) & MadeOfDrug(x)) -> HasPropertiesOfDrug(x))", "score": 0}
{"id": "eqasc_train_3454", "prediction": "all x.(Caffeine(x) -> StimulantCentralNervousSystem(x))", "score": 0}
{"id": "eqasc_train_3455", "prediction": "all x.(Coffee(x) -> ExcellentSourceOfCaffeine(x))", "score": 0}
{"id": "eqasc_train_3456", "prediction": "all x.(Coffee(x) -> StimulantCentralNervousSystem(x))", "score": 0}
{"id": "eqasc_train_3457", "prediction": "all x y.((Coffee(x) & CentralNervousSystem(y)) -> Stimulates(x,y))", "score": 0}
{"id": "eqasc_train_3458", "prediction": "all x.(Stimulants(x) -> (CausesOverheating(x) & CausesDehydration(x)))", "score": 0}
{"id": "eqasc_train_3459", "prediction": "all x.(Caffeine(x) -> CausesDehydration(x))", "score": 0}
{"id": "eqasc_train_3460", "prediction": "all x.(OverStimulation(x) -> CausesSleepProblems(x))", "score": 0}
{"id": "eqasc_train_3461", "prediction": "all x.((Caffeine(x) & SleepProblems(x)) -> TooMuch(x))", "score": 0}
{"id": "eqasc_train_3462", "prediction": "all x y.((Caffeine(x) & Saccharose(y)) -> StimulatesSerotonin(x,y))", "score": 0}
{"id": "eqasc_train_3463", "prediction": "all x.(Saccharide(x) -> StimulantCentralNervousSystem(x))", "score": 0}
{"id": "eqasc_train_3464", "prediction": "all x.(Cocaine(x) -> (Stimulant(x) & IncreasesHeartRate(x) & IncreasesBloodPressure(x)))", "score": 0}
{"id": "eqasc_train_3465", "prediction": "all x y.((Caffeine(x) & User(y)) -> (IncreasesHeartRate(y,x) & IncreasesBloodPressure(y,x)))", "score": 0}
{"id": "eqasc_train_3466", "prediction": "all x y.((Men(x) & Stimulant(y)) -> (SeeksExcitement(x,y) & AffordableResults(x)))", "score": 0}
{"id": "eqasc_train_3467", "prediction": "all x.(Caffeine(x) -> ExcitesCentralNervousSystem(x))", "score": 0}
{"id": "eqasc_train_3468", "prediction": "(Stimulant(Nitrogen) & LikeCaffeine(Nitrogen))", "score": 0}
{"id": "eqasc_train_3469", "prediction": "all x y.((Nitrogen(x) & CentralNervousSystem(y)) -> Affects(x,y))", "score": 0}
{"id": "eqasc_train_3470", "prediction": "all x.(Caffeine(x) -> (Stimulant(x) & ConstrictsBloodVessels(x)))", "score": 1}
{"id": "eqasc_train_3471", "prediction": "all x.(Caffeine(x) -> ConstrictsBloodVessels(x))", "score": 1}
{"id": "eqasc_train_3472", "prediction": "all x y.((WaterVaporCooling(x) & WaterVapor(y)) -> CausesWaterVaporCondense(x,y))", "score": 0}
{"id": "eqasc_train_3473", "prediction": "all x.(WaterVaporCooling(x) -> CausesCloudsToForm(x))", "score": 0}
{"id": "eqasc_train_3474", "prediction": "all x.(Lens(x) -> AntiFogCoated(x))", "score": 0}
{"id": "eqasc_train_3475", "prediction": "all x y.((WaterVaporCooling(x) & Lens(y)) -> CausesFog(x,y))", "score": 0}
{"id": "eqasc_train_3476", "prediction": "all x.(Castle(x) -> (ColdAir(x) & Refrigerated(x) & For48Hours(x)))", "score": 0}
{"id": "eqasc_train_3477", "prediction": "all x y.((WaterVaporChilding(x) & WaterVapor(y)) -> CausesWaterVaporCondense(x,y))", "score": 0}
{"id": "eqasc_train_3478", "prediction": "all x y.((HeatEnergy(x) & WaterVapor(y) & AirCondenses(x)) -> Released(x,y))", "score": 0}
{"id": "eqasc_train_3479", "prediction": "all x.(WaterVaporCooling(x) -> ReleasesHeatEnergy(x))", "score": 0}
{"id": "eqasc_train_3480", "prediction": "all x y.((CoolerAir(x) & WarmerAir(y)) -> (HoldsLessWaterVapor(x,y) & CondensesAsCloudsOrRain(x)))", "score": 0}
{"id": "eqasc_train_3481", "prediction": "all x.(WaterVaporCooling(x) -> (CausesClouds(x) | CausesRain(x)))", "score": 0}
{"id": "eqasc_train_3482", "prediction": "all x.(Cloud(x) -> FormedByWaterVapor(x))", "score": 0}
{"id": "eqasc_train_3483", "prediction": "all x.(WaterVaporCondenses(x) -> EnergyReleased(x))", "score": 0}
{"id": "eqasc_train_3484", "prediction": "all x y.((WaterVaporCooling(x) & WaterVapor(y)) -> CausesWaterVaporToReleaseEnergy(x,y))", "score": 0}
{"id": "eqasc_train_3485", "prediction": "all x.(Vapor(x) -> (Condenses(x) & Falls(x) & SeepsIntoGround(x)))", "score": 0}
{"id": "eqasc_train_3486", "prediction": "all x.(WaterVaporCooling(x) -> (CausesWaterToFall(x) & SeepsIntoGround(x)))", "score": 0}
{"id": "eqasc_train_3487", "prediction": "all x.((H2oVaporCooling(x) & CausesH2oVaporCondense(x)) -> CausesCondense(x))", "score": 0}
{"id": "eqasc_train_3488", "prediction": "all x.((WaterVapor(x) & Cools(x)) -> CondensesToFormClouds(x))", "score": 0}
{"id": "eqasc_train_3489", "prediction": "all x y.((Cloud(x) & Vapor(y)) -> Cools(y))", "score": 0}
{"id": "eqasc_train_3490", "prediction": "all x.(Cell(x) -> (BasicUnit(x) & Structure(x) & Function(x) & LivingThing(x)))", "score": 2}
{"id": "eqasc_train_3491", "prediction": "all x.(Protein(x) -> NeededForCellBuilding(x))", "score": 0}
{"id": "eqasc_train_3492", "prediction": "all x.(LivingThing(x) -> NeedsProtein(x))", "score": 0}
{"id": "eqasc_train_3493", "prediction": "all x.(Cell(x) -> (BasicUnit(x) & Structure(x) & Function(x) & Organism(x)))", "score": 0}
{"id": "eqasc_train_3494", "prediction": "all x.((Human(x) | Angel(x) | Animal(x)) -> Finite(x))", "score": 0}
{"id": "eqasc_train_3495", "prediction": "all x.(Cell(x) -> BasicUnitOfHumans(x))", "score": 0}
{"id": "eqasc_train_3496", "prediction": "all x.(Biology(x) -> ScienceOfLivingThings(x))", "score": 0}
{"id": "eqasc_train_3497", "prediction": "all x.(Biology(x) -> (ScienceOfCells(x) & ThingsWithCells(x)))", "score": 0}
{"id": "eqasc_train_3498", "prediction": "all x.(Cell(x) -> (BasicUnit(x) & Structure(x) & Function(x)))", "score": 1}
{"id": "eqasc_train_3499", "prediction": "all x.(LivingThing(x) -> (Animal(x) | Plant(x)))", "score": 0}
{"id": "eqasc_train_3500", "prediction": "all x.(Cell(x) -> (MakesUpStructure(x) & MakesUpFunction(x) & OfPlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_train_3501", "prediction": "all x.(Cell(x) -> (BasicUnit(x) & StructureAndFunctionOfOrganisms(x)))", "score": 0}
{"id": "eqasc_train_3502", "prediction": "all x.(Physiology(x) -> StudiesLivingThings(x))", "score": 0}
{"id": "eqasc_train_3503", "prediction": "all x.(Physiology(x) -> StudiesCells(x))", "score": 0}
{"id": "eqasc_train_3504", "prediction": "all x.(Cell(x) -> UsesGlucoseForEnergy(x))", "score": 0}
{"id": "eqasc_train_3505", "prediction": "all x.(LivingThing(x) -> UsesGlucoseForEnergy(x))", "score": 0}
{"id": "eqasc_train_3506", "prediction": "all x.(Tiger(x) -> LargestOfLivingCats(x))", "score": 0}
{"id": "eqasc_train_3507", "prediction": "all x.(Cell(x) -> (BasicUnit(x) & StructureAndFunctionOfTigers(x)))", "score": 0}
{"id": "eqasc_train_3508", "prediction": "all x.(Organism(x) -> (LivingThing(x) | SomethingAlive(x)))", "score": 0}
{"id": "eqasc_train_3509", "prediction": "all x.(Cell(x) -> (BasicUnit(x) & Structure(x) & Function(x) & Organism(x)))", "score": 0}
{"id": "eqasc_train_3510", "prediction": "all x.((OrganicMaterial(x) | LivingThing(x)) -> Biodegradable(x))", "score": 1}
{"id": "eqasc_train_3511", "prediction": "all x.(Cell(x) -> (BasicUnit(x) & Biodegradable(x)))", "score": 1}
{"id": "eqasc_train_3512", "prediction": "all x.(Respiration(x) -> (LifeFunction(x) & CarriedOnByLivingThings(x)))", "score": 0}
{"id": "eqasc_train_3513", "prediction": "all x.(Cell(x) -> RespirationUnit(x))", "score": 0}
{"id": "eqasc_train_3514", "prediction": "all x.(OsteogenicCellType(x) -> Indicates(x))", "score": 0}
{"id": "eqasc_train_3515", "prediction": "all x.(Osteogenic(x) -> (BasicUnits(x) & StructureAndFunctionOfLivingThings(x)))", "score": 0}
{"id": "eqasc_train_3516", "prediction": "all x y.((Microorganism(x) & Food(y)) -> CausesToSpoil(x,y))", "score": 0}
{"id": "eqasc_train_3517", "prediction": "all x.(Bacteria(x) -> exists y.(Microorganism(y) & Microorganism(x,y)))", "score": 0}
{"id": "eqasc_train_3518", "prediction": "all x.(Bacteria(x) -> CausesFoodToSpoil(x))", "score": 0}
{"id": "eqasc_train_3519", "prediction": "all x.((American(x) & MillionsOf(x)) -> GetsSickFromBadFood(x))", "score": 0}
{"id": "eqasc_train_3520", "prediction": "all x y.((Microorganism(x) & Human(y)) -> CanMakeSick(x,y))", "score": 0}
{"id": "eqasc_train_3521", "prediction": "all x.(Food(x) -> (Moldy(x) | Spotty(x)))", "score": 0}
{"id": "eqasc_train_3522", "prediction": "all x y.((Microorganism(x) & Food(y)) -> CausesToMold(x,y))", "score": 0}
{"id": "eqasc_train_3523", "prediction": "all x.((SpoiledFood(x) & Eaten(x)) -> FoodPoisoning(x))", "score": 0}
{"id": "eqasc_train_3524", "prediction": "all x.(Microorganism(x) -> CausesFoodPoisoning(x))", "score": 0}
{"id": "eqasc_train_3525", "prediction": "all x.((Eats(x) & Food(x)) -> CausesSeriousSickness(x))", "score": 0}
{"id": "eqasc_train_3526", "prediction": "all x.(Microorganism(x) -> (CausesEdibleSpoilage(x) & CausesSeriousSickness(x)))", "score": 0}
{"id": "eqasc_train_3527", "prediction": "all x.(Microorganism(x) -> CausesFoodPoisoning(x))", "score": 0}
{"id": "eqasc_train_3528", "prediction": "all x.(Irradiation(x) -> KillsMicroorganisms(x))", "score": 0}
{"id": "eqasc_train_3529", "prediction": "all x y.((Irradiation(x) & Microorganism(y)) -> Kills(x,y))", "score": 0}
{"id": "eqasc_train_3530", "prediction": "all x.((Microorganism(x) & ThreatToFoodAndWaterSafety(x)) -> Bacteria(x))", "score": 0}
{"id": "eqasc_train_3531", "prediction": "all x.(Bacteria(x) -> CausesFoodToSpoil(x))", "score": 0}
{"id": "eqasc_train_3532", "prediction": "all x.(Chromosome(x) -> (ContainsGenes(x) & CodesProteins(x)))", "score": 0}
{"id": "eqasc_train_3533", "prediction": "all x.(Chromosome(x) -> (ComposedOfDNA(x) & ComposedOfProteins(x)))", "score": 0}
{"id": "eqasc_train_3534", "prediction": "all x.(GenesCodeProteins(x) -> CodesProteins(x))", "score": 0}
{"id": "eqasc_train_3535", "prediction": "all x.(Gene(x) -> ArrangedInGeneClusters(x))", "score": 0}
{"id": "eqasc_train_3536", "prediction": "all x.(Chromosome(x) -> ContainsClusters(x))", "score": 0}
{"id": "eqasc_train_3537", "prediction": "all x.(Chromosome(x) | Institution(x))", "score": 0}
{"id": "eqasc_train_3538", "prediction": "all x y.((Gene(x) & Gene(y) & CodesProteins(x,y)) -> InformationContainedIn(x,y))", "score": 0}
{"id": "eqasc_train_3539", "prediction": "all x y.((Gene(x) & DNAString(y)) -> CodedOn(x,y))", "score": 0}
{"id": "eqasc_train_3540", "prediction": "all x.(Cell(x) -> ContainsCode(x))", "score": 0}
{"id": "eqasc_train_3541", "prediction": "all x.(Bundle(x) -> ContainsGenes(x))", "score": 0}
{"id": "eqasc_train_3542", "prediction": "(Identified(Gene) & Gene(Gene) & BRCA2(Gene))", "score": 0}
{"id": "eqasc_train_3543", "prediction": "all x.(Chromosome(x) -> ContainsBRCA2.", "score": -1}
{"id": "eqasc_train_3544", "prediction": "all x.(Protein(x) -> (BuildsBodyTissue(x) & RepairsBodyTissue(x)))", "score": 0}
{"id": "eqasc_train_3545", "prediction": "all x.(Chromosome(x) -> (ContainsGenes(x) & CodesForBodyTissue(x)))", "score": 0}
{"id": "eqasc_train_3546", "prediction": "all x.(DNA(x) -> (Code(x) | Recipe(x)) & ForProteinManufacturing(x)))", "score": -1}
{"id": "eqasc_train_3547", "prediction": "all x.(Chromosome(x) -> ContainsRecipeForProteinManufacturing(x))", "score": 0}
{"id": "eqasc_train_3548", "prediction": "all x.((InformationOnDNA(x) & Gene(x)) -> OrganizedInto(x,y))", "score": 0}
{"id": "eqasc_train_3549", "prediction": "all x.((DNACode(x) & Protein(x)) -> Codes(x,y))", "score": 0}
{"id": "eqasc_train_3550", "prediction": "all x.(Wetland(x) -> ExtremelyImportantBiome(x))", "score": 0}
{"id": "eqasc_train_3551", "prediction": "all x.(Wetland(x) -> ExtremelyImportantEcosystem(x))", "score": 0}
{"id": "eqasc_train_3552", "prediction": "all x.(Biome(x) -> MajorHabitat(x))", "score": 0}
{"id": "eqasc_train_3553", "prediction": "all x.(Wetland(x) -> (ExtremelyImportant(x) & MajorWorldHabitat(x)))", "score": 0}
{"id": "eqasc_train_3554", "prediction": "all x.(Wetland(x) -> ExtremelyImportantGlobalEcosystem(x))", "score": 0}
{"id": "eqasc_train_3555", "prediction": "all x.((Marshes(x) | Swamps(x)) -> Wetland(x))", "score": 0}
{"id": "eqasc_train_3556", "prediction": "all x.((Marshes(x) | Swamps(x)) -> Biome(x))", "score": 0}
{"id": "eqasc_train_3557", "prediction": "all x.(Wetland(x) -> (ExtremelyImportant(x) & MajorHabitat(x)))", "score": 0}
{"id": "eqasc_train_3558", "prediction": "all x.(RoseateSpokenbill(x) -> (FrequentFreshWaterWetlands(x) & FrequentBrackishWaterWetlands(x) & FrequentSaltwaterWaterWetlands(x) & FrequentMangroveIslands(x)))", "score": 0}
{"id": "eqasc_train_3559", "prediction": "all x.(SpoonbillHabitat(x) -> ExtremelyImportantBiome(x))", "score": 0}
{"id": "eqasc_train_3560", "prediction": "all x y.((Animal(x) & Vegetation(y) & FoundInBiomes(x,y)) -> LivesOn(x,y))", "score": 0}
{"id": "eqasc_train_3561", "prediction": "all x.(Animal(x) -> LivingInWetland(x))", "score": 0}
{"id": "eqasc_train_3562", "prediction": "all x.(PalustrineWetland(x) -> (Marshes(x) | Bogs(x) | Swamps(x)))", "score": 0}
{"id": "eqasc_train_3563", "prediction": "all x.((Marshes(x) | Bogs(x) | Swamps(x)) -> Biome(x))", "score": 0}
{"id": "eqasc_train_3564", "prediction": "all x.(Biome(x) -> (Environment(x) & HasThingsInCommon(x)))", "score": 0}
{"id": "eqasc_train_3565", "prediction": "all x.(Wetland(x) -> ExtremelyImportantEnvironment(x))", "score": 0}
{"id": "eqasc_train_3566", "prediction": "all x.((Wetland(x) & GreatLakesWetland(x)) -> Function(x))", "score": 0}
{"id": "eqasc_train_3567", "prediction": "all x.(GreatLake(x) -> (ExtremelyImportantBiome(x) & ImportantBiome(x)))", "score": 0}
{"id": "eqasc_train_3568", "prediction": "all x y.((Sight(x) & Eye(y)) -> (SensesLight(x) & Organ(y) & SenseLight(y)))", "score": 0}
{"id": "eqasc_train_3569", "prediction": "all x.((Bird(x) & InterpretsMessages(x)) -> CompletedSightProcess(x))", "score": 0}
{"id": "eqasc_train_3570", "prediction": "all x.(SensingLight(x) -> RequiresBrain(x))", "score": 0}
{"id": "eqasc_train_3571", "prediction": "all x.(Light(x) -> (StimulatesEyeRetina(x) & ResultsInSight(x)))", "score": 0}
{"id": "eqasc_train_3572", "prediction": "all x.(Sight(x) -> (LightStimulatesRetinal(x) & StimulatesRetinal(x)))", "score": 0}
{"id": "eqasc_train_3573", "prediction": "all x.(Light(x) -> (PartOfSpectrum(x) & EyeSenses(x)))", "score": 0}
{"id": "eqasc_train_3574", "prediction": "all x.(Eyes(x) -> (DetectsImages(x) & SeesLight(x)))", "score": 0}
{"id": "eqasc_train_3575", "prediction": "all x.(Color(x) -> UseSenseOfSight(x))", "score": 0}
{"id": "eqasc_train_3576", "prediction": "all x y.((Eyes(x) & Color(y)) -> CanSense(x,y))", "score": 0}
{"id": "eqasc_train_3577", "prediction": "all x.(Eye(x) -> (Organ(x) & CanSensePhotons(x)))", "score": 0}
{"id": "eqasc_train_3578", "prediction": "all x.(Sight(x) -> InvolvesRetina(x))", "score": 0}
{"id": "eqasc_train_3579", "prediction": "all x.(Eye(x) -> (Organ(x) & NeedsToSeeLight(x) & CreatesVision(x)))", "score": 0}
{"id": "eqasc_train_3580", "prediction": "all x y.((Light(x) & Eye(y)) -> (Enters(x,y) & FocusedOn(x,y)))", "score": 0}
{"id": "eqasc_train_3581", "prediction": "all x y.((Sight(x) & Light(y) & AllowsImageFocusedOnRetina(x,y)) -> CanSee(x))", "score": 0}
{"id": "eqasc_train_3582", "prediction": "all x.(Vision(x) -> StartsWithSight(x))", "score": 0}
{"id": "eqasc_train_3583", "prediction": "all x y.((Vision(x) & Eye(y)) -> (SensesLight(x) & OrganSensesLight(y)))", "score": 0}
{"id": "eqasc_train_3584", "prediction": "all x.(LossOfSight(x) -> (TotalPermanentLossOfSight(x) & Eye(x)))", "score": 0}
{"id": "eqasc_train_3585", "prediction": "all x.(Sight(x) -> (SensesLight(x) & LossOfSight(x)))", "score": 0}
{"id": "eqasc_train_3586", "prediction": "all x.(Sight(x) -> (OrganizedImages(x) & FallOnRetina(x)))", "score": 0}
{"id": "eqasc_train_3587", "prediction": "all x y.((Light(x) & Eye(y)) -> (Enters(x,y) & FormsImages(x)))", "score": 0}
{"id": "eqasc_train_3588", "prediction": "all x.(Sight(x) -> (SeeImages(x) & ThroughEye(x)))", "score": 0}
{"id": "eqasc_train_3589", "prediction": "all x y z.((Sight(x) & Eye(y) & Ray(z)) -> (Senses(x,z) | Sense(y,z)))", "score": 0}
{"id": "eqasc_train_3590", "prediction": "all x.(OzoneDepletion(x) -> HigherUVRadiation(x))", "score": 0}
{"id": "eqasc_train_3591", "prediction": "all x.((SolarUVRadiation(x) & MiddleOfDay(x)) -> Highest(x))", "score": 0}
{"id": "eqasc_train_3592", "prediction": "all x.(OzoneDepletion(x) -> HighestRadiationLevelsDuringMiddleOfDay(x))", "score": 0}
{"id": "eqasc_train_3593", "prediction": "all x.(Ozone(x) -> AbsorbsUVRadiation(x))", "score": 0}
{"id": "eqasc_train_3594", "prediction": "all x.((Ozone(x) & LessOzone(x)) -> MoreUVLight(x))", "score": 0}
{"id": "eqasc_train_3595", "prediction": "all x.((IncreaseInUVRadiation(x) & SkinCancer(x)) -> RisksUp(x))", "score": 0}
{"id": "eqasc_train_3596", "prediction": "all x.(OzoneDepletion(x) -> IncreasesRiskForSkinCancer(x))", "score": 0}
{"id": "eqasc_train_3597", "prediction": "all x.(Child(x) -> AtRiskForUVRadiation(x))", "score": 0}
{"id": "eqasc_train_3598", "prediction": "all x.(OzoneDepletion(x) -> PutsChildrenAtRisk(x))", "score": 0}
{"id": "eqasc_train_3599", "prediction": "all x y.((Bird(x) & Tree(y)) -> (LivesOn(x,Earth) & LivesOn(y,Earth)))", "score": 0}
{"id": "eqasc_train_3600", "prediction": "all x y.((OzoneDepletion(x) & Bird(y) & Tree(y)) -> HigherUvRadiation(x,y))", "score": 0}
{"id": "eqasc_train_3601", "prediction": "FastFacts(85) -> DiscoversHoleInOzoneLayer(scientists,Atmosphere))", "score": -1}
{"id": "eqasc_train_3602", "prediction": "all x y.((UVRadiation(x) & Earth(y) & AtmosphericHole(x)) -> HigherLevels(x,y))", "score": 0}
{"id": "eqasc_train_3603", "prediction": "all x.(Ozone(x) -> (Oxygen(x) & AbsorbsDamagingUVRadiation(x)))", "score": 0}
{"id": "eqasc_train_3604", "prediction": "all x.(Ozone(x) -> MadeOfOxygen(x))", "score": 0}
{"id": "eqasc_train_3605", "prediction": "all x.(OzoneDepletion(x) -> IncreasesRisksForSkinCancer(x))", "score": 0}
{"id": "eqasc_train_3606", "prediction": "all x.(Ozone(x) -> NaturalComponentOfAtmosphere(x))", "score": 0}
{"id": "eqasc_train_3607", "prediction": "all x.(AtmosphericDepletion(x) -> HigherUVRadiation(x))", "score": 0}
{"id": "eqasc_train_3608", "prediction": "all x.(OzoneDepletionInStratosphere(x) -> GlobalProblem(x))", "score": 0}
{"id": "eqasc_train_3609", "prediction": "all x.(StratosphereComposition(x) -> CausesHigherUVRadiation(x))", "score": 0}
{"id": "eqasc_train_3610", "prediction": "all x.(Ozone(x) -> ChemicallyRepresentedAsO3.(Ozone(x)))", "score": -1}
{"id": "eqasc_train_3611", "prediction": "all x.((O3Depletion(x) & HigherUVRadiation(x)) -> ReachingEarth(x))", "score": 0}
{"id": "eqasc_train_3612", "prediction": "all x.(UVRadiation(x) -> (CausesDNADamage(x) & CausesMutation(x)))", "score": 0}
{"id": "eqasc_train_3613", "prediction": "all x.(OzoneDepletion(x) -> (HigherDNADamage(x) & HigherMutationLevels(x)))", "score": 0}
{"id": "eqasc_train_3614", "prediction": "all x.(UVRadiation(x) -> IncreasesRiskOfSkinCancer(x))", "score": 0}
{"id": "eqasc_train_3615", "prediction": "all x.(OzoneDepletion(x) -> IncreasesRiskOfSkinCancer(x))", "score": 0}
{"id": "eqasc_train_3616", "prediction": "all x.(FlowingWater(x) -> SlowlyDissolvesCarbonInSedimentaryRock(x))", "score": 0}
{"id": "eqasc_train_3617", "prediction": "all x.((River(x) | Stream(x)) -> (FreshFlowingWater(x) & BodyOfWater(x)))", "score": 0}
{"id": "eqasc_train_3618", "prediction": "all x y.((River(x) & Stream(y)) -> (SlowlyDissolvesCarbon(x,y) & SedimentaryRock(y)))", "score": 0}
{"id": "eqasc_train_3619", "prediction": "all x.(FlowingWater(x) -> CanSlowlyDissolveCarbonInLimestone(x))", "score": 0}
{"id": "eqasc_train_3620", "prediction": "all x y.((Water(x) & Sky(y)) -> (FallsFrom(x,y) & FlowsDownhill(x)))", "score": 0}
{"id": "eqasc_train_3621", "prediction": "all x y.((Water(x) & MovingDownhillDueToGravity(x)) -> DissolvesCarbonInSedimentaryRock(x))", "score": 0}
{"id": "eqasc_train_3622", "prediction": "all x y.((FlowingWater(x) & Sandstone(y)) -> SlowlyDissolvesCarbon(x,y))", "score": 0}
{"id": "eqasc_train_3623", "prediction": "all x y.((FlyingWater(x) & Limestone(y)) -> SlowlyDissolvesCarbon(x,y))", "score": 0}
{"id": "eqasc_train_3624", "prediction": "all x.((Water(x) & Moves(x)) | Water(x)) -> Force(x))", "score": -1}
{"id": "eqasc_train_3625", "prediction": "all x y.((ForceOfWater(x) & Moves(x)) -> SlowlyDissolvesCarbonInSedimentaryRock(x))", "score": 0}
{"id": "eqasc_train_3626", "prediction": "all x.(Limestone(x) -> (OrganicSedimentaryRock(x) & SedimentaryRock(x)))", "score": 0}
{"id": "eqasc_train_3627", "prediction": "all x.(River(x) -> LongFlowingWater(x))", "score": 0}
{"id": "eqasc_train_3628", "prediction": "all x y.((River(x) & SedimentaryRock(y)) -> SlowlyDissolvesCarbon(x,y))", "score": 0}
{"id": "eqasc_train_3629", "prediction": "all x y.((NeutralAtom(x) & NeutralAtom(y) & LosesElectron(x,y)) -> (NegativeCharge(y) & Formed(y)))", "score": 0}
{"id": "eqasc_train_3630", "prediction": "all x.(NegativeCharge(x) -> AttractedToPositiveCharge(x))", "score": 0}
{"id": "eqasc_train_3631", "prediction": "all x.((NeutralAtom(x) & LosesElectron(x)) -> AttractedToPositiveCharges(x))", "score": 0}
{"id": "eqasc_train_3632", "prediction": "all x.((Atom(x) | Molecule(x)) -> Ion(x))", "score": 0}
{"id": "eqasc_train_3633", "prediction": "all x y.((Atom(x) & Atom(y) & LosesElectron(x,y)) -> FormsIon(x))", "score": 0}
{"id": "eqasc_train_3634", "prediction": "all x.(NegativeCharge(x) -> (RepelsNegativeCharge(x) & AttractsPositiveCharge(x)))", "score": 0}
{"id": "eqasc_train_3635", "prediction": "all x y.((NeutralAtom(x) & LosesElectron(x)) -> AttractsPositiveCharges(x))", "score": 0}
{"id": "eqasc_train_3636", "prediction": "all x.(Ion(x) -> NeutralAtom(x))", "score": 0}
{"id": "eqasc_train_3637", "prediction": "all x.((Ion(x) & LosesElectron(x)) -> NegativeCharge(x))", "score": 0}
{"id": "eqasc_train_3638", "prediction": "all x y.((Ion(x) & Ion(y) & LoseElectron(x,y)) -> (Atom(x) & NegativeCharge(x)))", "score": 0}
{"id": "eqasc_train_3639", "prediction": "all x.(Ion(x) -> (Atom(x) | GroupOfAtoms(x) & CarriesPositiveOrNegativeElectricalCharge(x)))", "score": 0}
{"id": "eqasc_train_3640", "prediction": "all x y.((Ion(x) & NeutralAtom(y) & LosesElectron(y,x)) -> Formed(x))", "score": 0}
{"id": "eqasc_train_3641", "prediction": "all x.((IceCrystal(x) & Formed(x)) -> NegativeCharge(x))", "score": 0}
{"id": "eqasc_train_3642", "prediction": "all x y.((IceCrystal(x) & NeutralAtom(y) & LosesElectron(y,x)) -> Formed(x))", "score": 0}
{"id": "eqasc_train_3643", "prediction": "all x.((Atom(x) & LosesElectron(x)) -> Positive(x))", "score": 0}
{"id": "eqasc_train_3644", "prediction": "all x.(Atom(x) -> (Negative(x) | Negative(x)))", "score": 0}
{"id": "eqasc_train_3645", "prediction": "all x.(Anion(x) -> NegativelyChargedAtom(x))", "score": 0}
{"id": "eqasc_train_3646", "prediction": "all x y.((NeutralAtom(x) & LosesElectron(x)) -> AnionFormation(y))", "score": 0}
{"id": "eqasc_train_3647", "prediction": "all x.(Atom(x) -> SlightestUnitOfElements(x))", "score": 0}
{"id": "eqasc_train_3648", "prediction": "all x y.((SmallestUnit(x) & Element(y) & Neutral(x,y) & LosesElectron(x,y)) -> NegativeChargeFormation(x))", "score": 0}
{"id": "eqasc_train_3649", "prediction": "all x y.((NeutralAtom(x) & LosesElectron(x)) -> AttractedToPositiveCharges(y))", "score": 0}
{"id": "eqasc_train_3650", "prediction": "all x.((BrainCell(x) & OxygenSupplyCutOff(x)) -> DiesQuickly(x))", "score": 0}
{"id": "eqasc_train_3651", "prediction": "all x.((Body(x) & WithoutProperBrainFunctioning(x)) -> Dies(x))", "score": 0}
{"id": "eqasc_train_3652", "prediction": "all x.((Body(x) & -Oxygen(x)) -> Dies(x))", "score": 0}
{"id": "eqasc_train_3653", "prediction": "all x.((OxygenSupplyCutOff(x) & Brain(x)) -> CanOccur(x))", "score": 0}
{"id": "eqasc_train_3654", "prediction": "all x.((BrainCell(x) & Stroke(x)) -> DiesQuickly(x))", "score": 0}
{"id": "eqasc_train_3655", "prediction": "all x.(Blood(x) -> CarriesOxygenToBrain(x))", "score": 0}
{"id": "eqasc_train_3656", "prediction": "all x.((BrainCell(x) & BloodCutOff(x)) -> DiesQuickly(x))", "score": 0}
{"id": "eqasc_train_3657", "prediction": "all x y.((Lungs(x) & Blood(y)) -> SupplyOxygen(x,y))", "score": 0}
{"id": "eqasc_train_3658", "prediction": "all x.((BrainCell(x) & BloodSupplyCutOff(x)) -> DiesQuickly(x))", "score": 0}
{"id": "eqasc_train_3659", "prediction": "all x.((BrainCell(x) & HeartStopsPumpingOxygen(x)) -> Dies(x))", "score": 0}
{"id": "eqasc_train_3660", "prediction": "all x.(HeartStoppingPumping(x) -> CutsOffOxygenToCells(x))", "score": 0}
{"id": "eqasc_train_3661", "prediction": "all x.((BrainCell(x) & AirSupplyCutOff(x)) -> DiesQuickly(x))", "score": 0}
{"id": "eqasc_train_3662", "prediction": "all x.(Neuron(x) -> NerveCell(x))", "score": 0}
{"id": "eqasc_train_3663", "prediction": "all x.((Neuron(x) & OxygenSupplyCutOff(x)) -> DiesQuickly(x))", "score": 0}
{"id": "eqasc_train_3664", "prediction": "all x.(BrainAtrophy(x) -> (ShrunkBrainMatter(x) & (DyingBrainCells(x) | DeadBrainCells(x))))", "score": 0}
{"id": "eqasc_train_3665", "prediction": "all x.(BrainAtrophy(x) -> (LackOfOxygen(x) & CausedBy(x)))", "score": 0}
{"id": "eqasc_train_3666", "prediction": "all x.(AstroglialCell(x) -> CommonCellInBrainTissue(x))", "score": 0}
{"id": "eqasc_train_3667", "prediction": "all x.((AstroglialCell(x) & OxygenSupplyCutOff(x)) -> Dies(x))", "score": 0}
{"id": "eqasc_train_3668", "prediction": "all x.((BrainCell(x) & BloodSupplyCutOff(x)) -> DiesQuickly(x))", "score": 0}
{"id": "eqasc_train_3669", "prediction": "all x.((Person(x) & Orgasm(x) & CutOffFromOxygen(x)) -> HighlyIntensified(x))", "score": 0}
{"id": "eqasc_train_3670", "prediction": "all x y.((Person(x) & Orgasm(y)) -> (HighlyIntense(y) & NoOxygen(y) & BrainCellsDie(x)))", "score": 0}
{"id": "eqasc_train_3671", "prediction": "all x y.((Wind(x) & Rain(y)) -> CausesErosion(x,y))", "score": 0}
{"id": "eqasc_train_3672", "prediction": "all x.(StormSurge(x) -> (Wind(x) & Rain(x)))", "score": 0}
{"id": "eqasc_train_3673", "prediction": "all x.(StormSurges(x) -> CausesErosion(x))", "score": 0}
{"id": "eqasc_train_3674", "prediction": "all x.(Erosion(x) -> (WeavingAwayOfEarthOrRock(x)))", "score": 0}
{"id": "eqasc_train_3675", "prediction": "all x y.((Wind(x) & Rock(y)) -> CausesWearingAway(x,y))", "score": 0}
{"id": "eqasc_train_3676", "prediction": "all x.(Abrasion(x) -> (ParticleByParticleErosion(x)))", "score": 0}
{"id": "eqasc_train_3677", "prediction": "all x y.((Wind(x) & Rain(y)) -> CausesAbrasion(x,y))", "score": 0}
{"id": "eqasc_train_3678", "prediction": "all x y z.((Wind(x) & Water(y) & Sunlight(z)) -> ContributesToErosionProcess(x,y,z))", "score": 0}
{"id": "eqasc_train_3679", "prediction": "all x y.((Wind(x) & Rain(y)) -> (ContributesToChangeLandscape(x) & ChangesLandscape(y)))", "score": 0}
{"id": "eqasc_train_3680", "prediction": "all x.(AlluvialAquifer(x) -> ErosionResult(x))", "score": 0}
{"id": "eqasc_train_3681", "prediction": "all x.(AlluvialAquifer(x) -> (CreatedByWind(x) & CreatedByRain(x)))", "score": 0}
{"id": "eqasc_train_3682", "prediction": "all x.((Beach(x) & MajorErosion(x)) -> Occurs(x))", "score": 0}
{"id": "eqasc_train_3683", "prediction": "all x y.((Wind(x) & Rain(y)) -> CausesLossOfBeaches(x,y))", "score": 0}
{"id": "eqasc_train_3684", "prediction": "all x.(SoilErosion(x) -> NaturalProcess(x))", "score": 0}
{"id": "eqasc_train_3685", "prediction": "all x y.((Wind(x) & Rain(y)) -> NaturalProcess(x))", "score": 0}
{"id": "eqasc_train_3686", "prediction": "exists x.(Mountain(x) & CausedByErosion(x))", "score": 0}
{"id": "eqasc_train_3687", "prediction": "exists x.(Mountain(x) & CausedByWind(x) & CausedByRain(x))", "score": 0}
{"id": "eqasc_train_3688", "prediction": "all x.((Water(x) & Rain(x)) -> MostEffectiveAgentOfErosion(x))", "score": 0}
{"id": "eqasc_train_3689", "prediction": "all x.(Water(x) -> CausesErosionMostEffectively(x))", "score": 0}
{"id": "eqasc_train_3690", "prediction": "all x.(SoilErosion(x) -> (NaturalProcess(x) | NaturalProcess(x)))", "score": 0}
{"id": "eqasc_train_3691", "prediction": "all x y z.((Wind(x) & Rain(y) & SoilMovement(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_train_3692", "prediction": "all x.(Intron(x) -> (-CodesProteins(x)))", "score": 1}
{"id": "eqasc_train_3693", "prediction": "(all x.(Prokaryote(x) -> LacksIntrons(x)) & all y.(Eukaryote(y) -> ContainsIntrons(y)))", "score": 0}
{"id": "eqasc_train_3694", "prediction": "all x.(Prokaryote(x) -> (LacksRegions(x) & -CodesProteins(x)))", "score": 0}
{"id": "eqasc_train_3695", "prediction": "exists x.(Protein(x) & Protein(x))", "score": 0}
{"id": "eqasc_train_3696", "prediction": "exists x.(Intron(x) & Intron(x))", "score": 0}
{"id": "eqasc_train_3697", "prediction": "all x.(Intron(x) -> RemovedByRNASplicing(x))", "score": 0}
{"id": "eqasc_train_3698", "prediction": "all x.((Region(x) & -CodesProteins(x)) -> RemovedByRNASplicing(x))", "score": 0}
{"id": "eqasc_train_3699", "prediction": "all x y.((Intron(x) & Eukaryote(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_train_3700", "prediction": "all x.(Eukaryote(x) -> (HasRegions(x) & -CodesProteins(x)))", "score": 0}
{"id": "eqasc_train_3701", "prediction": "(all x.(Prokaryote(x) -> LacksRegions(x)) & all y.(Eukaryote(y) -> HasRegions(y)))", "score": 0}
{"id": "eqasc_train_3702", "prediction": "all x.(Area(x) -> RectangularRegionOfCells(x))", "score": 0}
{"id": "eqasc_train_3703", "prediction": "all x.(Intron(x) -> (-CodesProteins(x)))", "score": 1}
{"id": "eqasc_train_3704", "prediction": "all x y z.((Body(x) & Body(y) & Body(z) & Hot(x)) -> (Sweat(y) & ProducedToCool(y,z)))", "score": 0}
{"id": "eqasc_train_3705", "prediction": "all x.(Sweat(x) -> (Product(x) & CausesMoistureAccumulation(x)))", "score": 0}
{"id": "eqasc_train_3706", "prediction": "all x.((Body(x) & Hot(x)) -> MoistureAccumulatesOnSkin(x))", "score": 0}
{"id": "eqasc_train_3707", "prediction": "all x.(Sweat(x) -> CoolHydration(x))", "score": 0}
{"id": "eqasc_train_3708", "prediction": "all x.((Hot(x) & CoolHydration(x)) -> Helps(x))", "score": 0}
{"id": "eqasc_train_3709", "prediction": "all x.(SweatGlands(x) -> ProducesMoreSweat(x))", "score": 0}
{"id": "eqasc_train_3710", "prediction": "all x y.((Body(x) & Hot(x)) -> (ComingFromGlands(x,y) & ProducedToCool(y)))", "score": 0}
{"id": "eqasc_train_3711", "prediction": "all x.(Sweat(x) -> (EvaporatesFromSkin(x) & CoolsSkin(x)))", "score": 0}
{"id": "eqasc_train_3712", "prediction": "all x.((Body(x) & UsesEvaporation(x)) -> CoolsDown(x))", "score": 0}
{"id": "eqasc_train_3713", "prediction": "all x.((Exercise(x) | Fever(x) | Heat(x)) -> CausesTemperatureToRise(x))", "score": 0}
{"id": "eqasc_train_3714", "prediction": "all x y z.((Sweat(x) & Exercise(y) & Fever(z)) -> ProducesToCoolPeople(x,y,z))", "score": 0}
{"id": "eqasc_train_3715", "prediction": "all x.((Body(x) & Ill(x)) -> (GetsWarmer(x) | GetsHot(x)))", "score": 0}
{"id": "eqasc_train_3716", "prediction": "all x.((IllWithFever(x) & BodyProducesSweat(x)) -> IllWithFever(x))", "score": 0}
{"id": "eqasc_train_3717", "prediction": "all x.((Athlete(x) & ExcessiveSweatLoss(x)) -> RisksDehydration(x))", "score": 0}
{"id": "eqasc_train_3718", "prediction": "all x.((Athlete(x) & Hot(x)) -> CanGetDehydrated(x))", "score": 0}
{"id": "eqasc_train_3719", "prediction": "all x.(Human(x) -> (UsesEvaporationOfWater(x) & UsesSweat(x) & CoolsBody(x)))", "score": 0}
{"id": "eqasc_train_3720", "prediction": "all x y.((Evaporation(x) & Body(y)) -> Cools(x,y))", "score": 0}
{"id": "eqasc_train_3721", "prediction": "all x y.((Body(x) & Hot(x)) -> Evaporation(y))", "score": 0}
{"id": "eqasc_train_3722", "prediction": "all x.(Walked(x) & Sweated(x) & Sweated(x))", "score": 0}
{"id": "eqasc_train_3723", "prediction": "all x.(Walking(x) -> CausesBodyToBecomeHot(x))", "score": 0}
{"id": "eqasc_train_3724", "prediction": "all x y.((AddingSaltToSolid(x) & Solid(y)) -> DecreasesFreezingPoint(x,y))", "score": 0}
{"id": "eqasc_train_3725", "prediction": "all x.(Solute(x) -> (DecreasesFreezingPoint(x) | DecreasesCrystallizationPoint(x)))", "score": 0}
{"id": "eqasc_train_3726", "prediction": "all x.((Salt(x) & AddedToWater(x)) -> ActsAsSolute(x))", "score": 0}
{"id": "eqasc_train_3727", "prediction": "all x.(Ice(x) -> SolidFormOfWater(x))", "score": 0}
{"id": "eqasc_train_3728", "prediction": "all x y.((AddingSaltToIce(x) & Ice(y)) -> DecreasesFreezingPoint(x,y))", "score": 0}
{"id": "eqasc_train_3729", "prediction": "all x.((Salt(x) & LowersFreezingPoint(x)) -> Deicer(x))", "score": 0}
{"id": "eqasc_train_3730", "prediction": "all x.((Salt(x) & DecreasesTemperature(x) & MeltsIce(x)) -> Deicer(x))", "score": 0}
{"id": "eqasc_train_3731", "prediction": "all x.(Salt(x) -> NaCl(x))", "score": 0}
{"id": "eqasc_train_3732", "prediction": "all x y.((AddsNaCl(x) & Solid(y)) -> DecreasesFreezingPoint(x,y))", "score": 0}
{"id": "eqasc_train_3733", "prediction": "all x.(Salt(x) -> (SodiumChloride(x)))", "score": 0}
{"id": "eqasc_train_3734", "prediction": "all x y.((AddsSodiumChloride(x) & Solid(y)) -> DecreasesFreezingPoint(x,y))", "score": 0}
{"id": "eqasc_train_3735", "prediction": "all x.(WaterDensity(x) -> (DecreasesWithTemperature(x) & IncreasesWithSaltContent(x)))", "score": 0}
{"id": "eqasc_train_3736", "prediction": "all x.(SaltContent(x) -> IncreasesMeltingPointsOfSolids(x))", "score": 0}
{"id": "eqasc_train_3737", "prediction": "all x.(Salt(x) -> Salt(x))", "score": 0}
{"id": "eqasc_train_3738", "prediction": "all x y.((AddsSodium(x) & Solid(y)) -> DecreasesFreezingPoint(x,y))", "score": 0}
{"id": "eqasc_train_3739", "prediction": "all x.(FreezingPointDepression(x) -> ColligativeProperty(x))", "score": 0}
{"id": "eqasc_train_3740", "prediction": "all x y.((Salt(x) & Solid(y)) -> EffectsColligativeProperties(x,y))", "score": 0}
{"id": "eqasc_train_3741", "prediction": "all x y.((Seawater(x) & Seawater(y)) -> Freezes(x,y))", "score": 0}
{"id": "eqasc_train_3742", "prediction": "all x y.((Salt(x) & Seawater(y) & FreezesAtFreezingPoint(x,y)) -> ExpelledFrom(x,y))", "score": 0}
{"id": "eqasc_train_3743", "prediction": "all x y.((Greenhouse(x) & Plant(y)) -> ProtectsByWarming(x,y))", "score": 0}
{"id": "eqasc_train_3744", "prediction": "all x.(HobbyGreenhouse(x) -> (SmallGlassHouse(x) | FiberglassBuilding(x)))", "score": 0}
{"id": "eqasc_train_3745", "prediction": "all x y.((Building(x) & Plant(y) & (Glass(x) | Fiberglass(x))) -> ProtectsByWarming(x,y))", "score": 0}
{"id": "eqasc_train_3746", "prediction": "all x y.((PlantedSeed(x) & WarmGreenhouse(y)) -> PlacedIn(x,y))", "score": 0}
{"id": "eqasc_train_3747", "prediction": "all x y.((Greenhouse(x) & Plant(y)) -> Protects(x,y))", "score": 0}
{"id": "eqasc_train_3748", "prediction": "all x y.((Greenhouse(x) & Plant(y)) -> ProtectsByRivingTemperature(x,y))", "score": 0}
{"id": "eqasc_train_3749", "prediction": "all x y.((PlantedSeed(x) & Greenhouse(y)) -> CanBeProtectedIn(x,y))", "score": 0}
{"id": "eqasc_train_3750", "prediction": "(WellKnownPlant(x) & MesquiteBust(x))", "score": 0}
{"id": "eqasc_train_3751", "prediction": "all x y.((Greenhouse(x) & Bush(y)) -> ProtectsByWarming(x,y))", "score": 0}
{"id": "eqasc_train_3752", "prediction": "all x.((WarmOutside(x) & Plant(x) & Pest(x)) -> GrowFaster(x))", "score": 0}
{"id": "eqasc_train_3753", "prediction": "all x y.((Greenhouse(x) & Plant(y)) -> MakesGrowFaster(x,y))", "score": 0}
{"id": "eqasc_train_3754", "prediction": "all x y.((Energy(x) & Sun(y)) -> (KeepsEarthWarm(x,y) & EnablesPlantsToGrow(x)))", "score": 0}
{"id": "eqasc_train_3755", "prediction": "all x y.((Greenhouse(x) & Plant(y)) -> ProtectsUsingSunEnergy(x,y))", "score": 0}
{"id": "eqasc_train_3756", "prediction": "all x.(Plant(x) -> EarthsProducer(x))", "score": 0}
{"id": "eqasc_train_3757", "prediction": "all x.(Greenhouse(x) -> ProtectsProducersByWarming(x))", "score": 0}
{"id": "eqasc_train_3758", "prediction": "all x.(Angiosperm(x) -> FloweringPlant(x))", "score": 0}
{"id": "eqasc_train_3759", "prediction": "all x y.((Greenhouse(x) & Angiosperm(y)) -> ProtectsByWarming(x,y))", "score": 0}
{"id": "eqasc_train_3760", "prediction": "(all x.((ColdWeather(x) & ColdWeather(x)) -> RetainsHeat(x)) & ((Heat(x) & WarmWeather(x)) -> ReflectsHeat(x)))", "score": 0}
{"id": "eqasc_train_3761", "prediction": "all x y.((Greenhouse(x) & Plant(y)) -> ProtectsByRetainingHeat(x,y))", "score": 0}
{"id": "eqasc_train_3762", "prediction": "all x.(FlowerSize(x) -> VariableByPlant(x))", "score": 0}
{"id": "eqasc_train_3763", "prediction": "all x y.((Greenhouse(x) & Flower(y)) -> ProtectsByWarming(x,y))", "score": 0}
{"id": "eqasc_train_3764", "prediction": "all x.((LotsOfRain(x) & WarmClimate(x)) -> GrowsWell(x))", "score": 0}
{"id": "eqasc_train_3765", "prediction": "all x y.((Greenhouse(x) & Plant(y)) -> HelpsGrowWell(x,y))", "score": 0}
{"id": "eqasc_train_3766", "prediction": "all x y.((Greenhouse(x) & Orchid(y)) -> Protects(x,y))", "score": 0}
{"id": "eqasc_train_3767", "prediction": "all x.(Temperature(x) -> (Warm(x) | Hot(x)))", "score": 0}
{"id": "eqasc_train_3768", "prediction": "all x y.((Greenhouse(x) & Plant(y)) -> ProtectsByKeepingTemperature(x,y))", "score": 0}
{"id": "eqasc_train_3769", "prediction": "all x.(WarmTemperatures(x) -> (HelpedPlantGrowth(x) & HelpedPlantSizing(x)))", "score": 0}
{"id": "eqasc_train_3770", "prediction": "all x y.((Greenhouse(x) & Plant(y)) -> HelpsGrowth(x,y))", "score": 0}
{"id": "eqasc_train_3771", "prediction": "all x y.((GreenhouseGas(x) & Greenhouse(y)) -> ActsAsGlassIn(x,y))", "score": 0}
{"id": "eqasc_train_3772", "prediction": "all x y.((Glass(x) & Plant(y)) -> KeepsWarm(x,y))", "score": 0}
{"id": "eqasc_train_3773", "prediction": "all x.(Flower(x) -> MajorGreenhouseCrop(x))", "score": 0}
{"id": "eqasc_train_3774", "prediction": "all x.(Flower(x) -> (MainCrop(x) & NeedsProtection(x) & KeepsCropWarm(x)))", "score": 0}
{"id": "eqasc_train_3775", "prediction": "all x.((Characteristic(x) & EncodedInDNA(x)) -> GeneticTreatment(x))", "score": 0}
{"id": "eqasc_train_3776", "prediction": "all x y.((DNA(x) & ProteinSequence(y)) -> EncodesInformation(x,y))", "score": 0}
{"id": "eqasc_train_3777", "prediction": "all x.(ProteinSequenceInformation(x) -> DNAInformation(x))", "score": 0}
{"id": "eqasc_train_3778", "prediction": "all x.(Chromosome(x) -> (ContainsGenes(x) & EncodedAsSubsectionOfDNAChain(x)))", "score": 0}
{"id": "eqasc_train_3779", "prediction": "all x.(Chromosome(x) -> (ContainsCharacteristics(x) & WithinDNAChain(x)))", "score": 0}
{"id": "eqasc_train_3780", "prediction": "all x.((EyeColor(x) & Human(x)) -> GeneticTrait(x))", "score": 0}
{"id": "eqasc_train_3781", "prediction": "all x y.((Human(x) & EyeColor(y)) -> DeterminedFromInformationEncodedInDNA(x,y))", "score": 0}
{"id": "eqasc_train_3782", "prediction": "all x y z.((DNA(x) & Parent(y) & Offspring(z)) -> TransmitsCharacteristics(x,y,z))", "score": 0}
{"id": "eqasc_train_3783", "prediction": "all x y z.((DNA(x) & Parent(y) & Offspring(z)) -> PassesTab(x,y,z))", "score": 0}
{"id": "eqasc_train_3784", "prediction": "all x.((Characteristics(x) & EncodedInDeoxyribonucleicAcid(x)) -> GeneticTreatment(x))", "score": 0}
{"id": "eqasc_train_3785", "prediction": "all x y.((Human(x) & EyeColor(y)) -> EncodedInDNA(y,x))", "score": 0}
{"id": "eqasc_train_3786", "prediction": "all x.(Intelligence(x) -> GeneticallyEarnedTrait(x))", "score": 0}
{"id": "eqasc_train_3787", "prediction": "all x.(Intelligence(x) -> (Characteristic(x) & EncodedInDNA(x)))", "score": 0}
{"id": "eqasc_train_3788", "prediction": "all x.(Intelligence(x) -> EncodedInDNA(x))", "score": 0}
{"id": "eqasc_train_3789", "prediction": "all x.(EyeColor(x) -> (HumanCharacteristic(x) & EncodedInDNA(x)))", "score": 0}
{"id": "eqasc_train_3790", "prediction": "all x.(ObservableCharacteristic(x) -> Phenotype(x))", "score": 0}
{"id": "eqasc_train_3791", "prediction": "all x.((Phenomenon(x) & EncodedInDNA(x)) -> GeneticTreatment(x))", "score": 0}
{"id": "eqasc_train_3792", "prediction": "all x.((Rock(x) & InteractsWithWind(x) & LongPeriodsOfTime(x)) -> Weathering(x))", "score": 0}
{"id": "eqasc_train_3793", "prediction": "all x y.((RockWeathering(x) & Erosion(y)) -> (ProducesContinuousStreamOfSediments(x,y) & LaysDownInLayers(x,y)))", "score": 0}
{"id": "eqasc_train_3794", "prediction": "all x y.((Rock(x) & Wind(y) & InteractsWith(x,y)) -> ProducesSediments(x))", "score": 0}
{"id": "eqasc_train_3795", "prediction": "all x y z.((Rock(x) & Wind(y) & Water(z)) -> WeatheredBy(x,y,z))", "score": 0}
{"id": "eqasc_train_3796", "prediction": "all x.((Rock(x) & InteractsWithWind(x)) -> (CreatesSoil(x) & CreatesSand(x)))", "score": 0}
{"id": "eqasc_train_3797", "prediction": "all x y.((Rock(x) & Water(y)) -> WeatheringCausedBy(x,y))", "score": 0}
{"id": "eqasc_train_3798", "prediction": "all x.(Hurricane(x) -> MadeOfWind(x))", "score": 0}
{"id": "eqasc_train_3799", "prediction": "all x.(Hurricane(x) -> CausesWeathering(x))", "score": 0}
{"id": "eqasc_train_3800", "prediction": "all x.((Water(x) | Wind(x)) -> WearsAwayBitsOfRock(x))", "score": 0}
{"id": "eqasc_train_3801", "prediction": "all x y.((Erosion(x) & LongPeriod(y)) -> CausesWeathering(x,y))", "score": 0}
{"id": "eqasc_train_3802", "prediction": "all x.(Landscape(x) -> (AlteredByClimate(x) & AlteredByWeather(x)))", "score": 0}
{"id": "eqasc_train_3803", "prediction": "all x.((Rock(x) & InteractsWithWind(x)) -> LandscapeAltered(x))", "score": 0}
{"id": "eqasc_train_3804", "prediction": "all x.(WeatheredRock(x) -> Saprolite(x))", "score": 0}
{"id": "eqasc_train_3805", "prediction": "all x.((Rocks(x) & InteractWithWind(x) & LongPeriodsOfTime(x)) -> CausesSaprolite(x))", "score": 0}
{"id": "eqasc_train_3806", "prediction": "all x.((Rock(x) & UndergoesErosion(x) & UndergoesWeathering(x)) -> BreaksDownToFormSediments(x))", "score": 0}
{"id": "eqasc_train_3807", "prediction": "all x.((Rock(x) & InteractsWithWind(x) & LongPeriodsOfTime(x)) -> FormsSediment(x))", "score": 0}
{"id": "eqasc_train_3808", "prediction": "all x.(RocksWeather(x) -> DifferentRate(x))", "score": 0}
{"id": "eqasc_train_3809", "prediction": "all x y.((Wind(x) & Rock(y)) -> Affects(x,y))", "score": 0}
{"id": "eqasc_train_3810", "prediction": "all x.(Limestone(x) -> FormedByCalcite(x))", "score": 0}
{"id": "eqasc_train_3811", "prediction": "all x.((Limestone(x) & InteractsWithWind(x) & LongPeriodsOfTime(x)) -> CausesWeathering(x))", "score": 0}
{"id": "eqasc_train_3812", "prediction": "all x.(Sand(x) -> WeatheredFragmentsOfQuarz(x))", "score": 0}
{"id": "eqasc_train_3813", "prediction": "all x y.((Rock(x) & InteractionWithWind(x) & LongPeriodsOfTime(y)) -> Sand(x))", "score": 0}
{"id": "eqasc_train_3814", "prediction": "all x.(ViolentWeather(x) -> CanAlternateLandscape(x))", "score": 0}
{"id": "eqasc_train_3815", "prediction": "all x y.((Rock(x) & Wind(y) & InteractsWith(x,y)) -> CanAlternateLandscape(x))", "score": 0}
{"id": "eqasc_train_3816", "prediction": "all x y.((Rock(x) & Bedrock(y)) -> (Breakage(x,y) & Weathering(x,y)))", "score": 0}
{"id": "eqasc_train_3817", "prediction": "all x.(SmallerRock(x) -> (InteractionOfBedrockAndWind(x) & LongPeriodsOfTime(x)))", "score": 0}
{"id": "eqasc_train_3818", "prediction": "all x y.((Wind(x) & Rock(y)) -> GrindsDown(x,y))", "score": 0}
{"id": "eqasc_train_3819", "prediction": "all x y.((Weathering(x) & Rock(y)) -> GrindsDown(x,y))", "score": 0}
{"id": "eqasc_train_3820", "prediction": "all x.(PassiveImmunity(x) -> SurvivesInBodyFlours(x))", "score": 0}
{"id": "eqasc_train_3821", "prediction": "all x.(BoosterShot(x) -> NeededPeriodicallyToBuildUpPassiveImmunity(x))", "score": 0}
{"id": "eqasc_train_3822", "prediction": "all x y.((BoosterShot(x) & Antibodies(y) & -SurviveInBodyFluids(y)) -> Needed(x,y))", "score": 0}
{"id": "eqasc_train_3823", "prediction": "all x.(AntibodyLevel(x) -> DecreasesWithTime(x))", "score": 0}
{"id": "eqasc_train_3824", "prediction": "all x.(PassiveImmunity(x) -> DiminishesWithTime(x))", "score": 0}
{"id": "eqasc_train_3825", "prediction": "all x.(Immunization(x) -> (Active(x) | Passive(x)))", "score": 0}
{"id": "eqasc_train_3826", "prediction": "all x y.((Immunization(x) & BodyFluid(y)) -> PutsAntibodiesIn(x,y))", "score": 0}
{"id": "eqasc_train_3827", "prediction": "all x y.((Antibodies(x) & Patient(y)) -> AdministeredInPassiveImmunization(x,y))", "score": 0}
{"id": "eqasc_train_3828", "prediction": "all x y.((Antibodies(x) & Patient(y)) -> (AdministeredForProtection(x,y) & SurvivesInBodyFluids(x,y)))", "score": 0}
{"id": "eqasc_train_3829", "prediction": "all x y.((Pregnant(x) & Pregnant(y)) -> (ImmunizationProducesActiveImmunity(x,y) & ImmunizationProducesPassiveImmunity(x,y)))", "score": 0}
{"id": "eqasc_train_3830", "prediction": "all x y.((Pregnant(x) & Woman(y)) -> PassesAntibodiesToFetus(y,x))", "score": 0}
{"id": "eqasc_train_3831", "prediction": "all x.(Antibody(x) -> Gammaglobulin(x))", "score": 0}
{"id": "eqasc_train_3832", "prediction": "all x.(PassiveImmunity(x) -> SurvivesInBodyFluids(x))", "score": 0}
{"id": "eqasc_train_3833", "prediction": "all x.(BreastMilk(x) -> ContainsAntibodies(x))", "score": 0}
{"id": "eqasc_train_3834", "prediction": "all x.(BreastMilk(x) -> MakesPassiveImmunity(x))", "score": 0}
{"id": "eqasc_train_3835", "prediction": "all x.((Body(x) & Blood(x)) -> Fluid(x))", "score": 0}
{"id": "eqasc_train_3836", "prediction": "all x.(PassiveImmunity(x) -> (SurvivesInBlood(x) & AntibodiesSurviveInBlood(x)))", "score": 0}
{"id": "eqasc_train_3837", "prediction": "all x.(Bertfeeding(x) -> (ProvidesPassiveActiveImmunity(x) & ProbablyLongLastingActiveImmunity(x)))", "score": 0}
{"id": "eqasc_train_3838", "prediction": "all x.((Bittling(x) & SurvivesInBodyFluids(x)) -> ProvidesLasts(x))", "score": 0}
{"id": "eqasc_train_3839", "prediction": "all x.((FactorsInBodyFluidHealth(x) & Potassium(x) & Soda(x)) -> BodyFluidBalance(x))", "score": 0}
{"id": "eqasc_train_3840", "prediction": "all x y.((PassiveImmunity(x) & Antibodies(y) & ContainsKaproate(y) & ContainsSodium(y)) -> LastsAtLeastAsSurvival(x,y))", "score": 0}
{"id": "eqasc_train_3841", "prediction": "all x.(Antibody(x) -> (Protein(x) & AttachesToAntigen(x)))", "score": 0}
{"id": "eqasc_train_3842", "prediction": "all x y.((PassiveImmunity(x) & Proteins(y) & AttachToAntigen(y,x)) -> SurvivesInBodyFluids(x,y))", "score": 0}
{"id": "eqasc_train_3843", "prediction": "all x.(Stalactite(x) -> FormedByDeposition(x))", "score": 0}
{"id": "eqasc_train_3844", "prediction": "all x.(Caves(x) -> (YearlyStalactites(x) | YoungStalagmites(x)))", "score": 0}
{"id": "eqasc_train_3845", "prediction": "all x y.((Cave(x) & Cave(y)) -> CausesFormationsIn(x,y))", "score": 0}
{"id": "eqasc_train_3846", "prediction": "all x.(Stalactite(x) -> FormedFromDripsOfWater(x))", "score": 0}
{"id": "eqasc_train_3847", "prediction": "all x.(Stalactite(x) -> (DepositsFromDripsOfWater(x) & FromDripsOfWater(x)))", "score": 0}
{"id": "eqasc_train_3848", "prediction": "all x.(SmallStalactite(x) -> PredominatesOnCaveRoof(x))", "score": 0}
{"id": "eqasc_train_3849", "prediction": "all x.(CaveRoof(x) -> FormedByDeposition(x))", "score": 0}
{"id": "eqasc_train_3850", "prediction": "all x.((Stalactite(x) | Stallagmite(x)) -> CommonSpeceothem(x))", "score": 0}
{"id": "eqasc_train_3851", "prediction": "all x.(Speleothem(x) -> FormedByDeposition(x))", "score": 0}
{"id": "eqasc_train_3852", "prediction": "all x.((LimestoneCave(x) & DisplaysStalactites(x)) -> Displays(x))", "score": 0}
{"id": "eqasc_train_3853", "prediction": "all x.(LimestoneCave(x) -> FormedByDepositions(x))", "score": 0}
{"id": "eqasc_train_3854", "prediction": "all x.(Cave(x) -> (HasStalagmites(x) & HasStalactites(x)))", "score": 0}
{"id": "eqasc_train_3855", "prediction": "all x.(Chrissospilia(x) -> FormedByDeposition(x))", "score": 0}
{"id": "eqasc_train_3856", "prediction": "all x y.((Sediment(x) & (Clay(x) | Sand(x))) -> DeposesByWater(x))", "score": 0}
{"id": "eqasc_train_3857", "prediction": "all x y z.((Stalactite(x) & Sediment(y) & Water(z)) -> (FormedBy(x,y) & (Clay(y) | Sand(y))))", "score": 0}
{"id": "eqasc_train_3858", "prediction": "all x.(Soil(x) -> (Sand(x) | Clay(x) | Limestone(x) | OrganicDeposits(x)))", "score": 0}
{"id": "eqasc_train_3859", "prediction": "all x.((Soil(x) | Sand(x) | Clay(x) | Limestone(x)) -> FormsStalactites(x))", "score": 0}
{"id": "eqasc_train_3860", "prediction": "all x.(TidalEnergy(x) -> ProducesElectricity(x))", "score": 0}
{"id": "eqasc_train_3861", "prediction": "all x.(Electricity(x) -> TravelsInCurrents(x))", "score": 0}
{"id": "eqasc_train_3862", "prediction": "all x.(TidalEnergy(x) -> ProducesCurrents(x))", "score": 0}
{"id": "eqasc_train_3863", "prediction": "all x.(TidalEnergyScheme(x) -> (CapturesWaterAtHighTide(x) & ReleasesWaterAtLowTide(x)))", "score": 0}
{"id": "eqasc_train_3864", "prediction": "all x.(CapturingWaterAtHighTide(x) -> ProducesElectricity(x))", "score": 0}
{"id": "eqasc_train_3865", "prediction": "all x.(Electricity(x) -> ElectronsInMotion(x))", "score": 0}
{"id": "eqasc_train_3866", "prediction": "all x.(TidalEnergy(x) -> ProducesElectronsInMotion(x))", "score": 0}
{"id": "eqasc_train_3867", "prediction": "all x.(TidalEnergy(x) -> Renewable(x))", "score": 0}
{"id": "eqasc_train_3868", "prediction": "all x y.((RenewableEnergy(x) & Electricity(y)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_train_3869", "prediction": "all x.(OceanThermal(x) -> (EnergyDerivedFromWaves(x) & EnergyDerivedFromTidalWaves(x)))", "score": 0}
{"id": "eqasc_train_3870", "prediction": "all x.(OceanThermalEnergy(x) -> ProducesElectricity(x))", "score": 0}
{"id": "eqasc_train_3871", "prediction": "all x.((TidalInletInformation(x) & Meaningful(x) & NewJersey(x)) -> RelativelyScarce(x))", "score": 0}
{"id": "eqasc_train_3872", "prediction": "all x y.((Inlet(x) & LargeWaterBody(y) & NewJersey(y)) -> ProducesElectricity(x,y))", "score": 0}
{"id": "eqasc_train_3873", "prediction": "all x.(Waves(x) -> ProducesElectricity(x))", "score": 0}
{"id": "eqasc_train_3874", "prediction": "all x.(TidalEnergy(x) -> (OldestFormOfEnergy(x) & UsedByHumans(x)))", "score": 0}
{"id": "eqasc_train_3875", "prediction": "all x.((OldestEnergy(x) & UsedByHumans(x)) -> ProducesElectricity(x))", "score": 0}
{"id": "eqasc_train_3876", "prediction": "all x.(Spike(x) -> (ForcefulTidalWaves(x) & ElectricCurrent(x)))", "score": 0}
{"id": "eqasc_train_3877", "prediction": "all x.(Spike(x) -> (TidalEnergy(x) & ComesFrom(x,TidalEnergy)))", "score": 0}
{"id": "eqasc_train_3878", "prediction": "all x.(OceanThermal(x) -> (ProducesElectricity(x) & OceanThermal(x)))", "score": 0}
{"id": "eqasc_train_3879", "prediction": "all x.(TidalCave(x) -> (FormedByEnergy(x) & RisingTide(x) & FallingTide(x)))", "score": 0}
{"id": "eqasc_train_3880", "prediction": "all x.(TidalCaves(x) -> ProducesElectricity(x))", "score": 0}
{"id": "eqasc_train_3881", "prediction": "all x y.((Gill(x) & Gill(y)) -> (ConvertsOxygenInWaterToOxygenInBlood(x)))", "score": 0}
{"id": "eqasc_train_3882", "prediction": "all x.(SharkGills(x) -> RemovesOxygenFromWater(x))", "score": 0}
{"id": "eqasc_train_3883", "prediction": "all x.(Shark(x) -> (Breathing(x) & UsesGills(x) & ConvertsOxygenInBlood(x)))", "score": 0}
{"id": "eqasc_train_3884", "prediction": "all x.(Shark(x) -> BreathesUnderWater(x))", "score": 0}
{"id": "eqasc_train_3885", "prediction": "all x y.((Shark(x) & Gills(y)) -> UsesToBreathe(x,y))", "score": 0}
{"id": "eqasc_train_3886", "prediction": "all x.(Fish(x) -> BreathesThroughGills(x))", "score": 0}
{"id": "eqasc_train_3887", "prediction": "all x y.((Fish(x) & Gills(y)) -> GetsOxygenInWater(x,y))", "score": 0}
{"id": "eqasc_train_3888", "prediction": "all x.(Shark(x) -> BreathesUsingGills(x))", "score": 0}
{"id": "eqasc_train_3889", "prediction": "all x.(Shark(x) -> (ConvertsOxygenWithGills(x) & HasGills(x)))", "score": 0}
{"id": "eqasc_train_3890", "prediction": "all x y.((Person(x) & Breathing(y)) -> (Confused(x,y) & Breathing(x) & Breathing(x)))", "score": 0}
{"id": "eqasc_train_3891", "prediction": "all x y.((Gill(x) & Gill(y) & ConvertsOxygenInWaterToOxygenInBlood(x,y)) -> Respiration(x))", "score": 0}
{"id": "eqasc_train_3892", "prediction": "all x.(Hemoglobin(x) -> TransportsOxygenInBlood(x))", "score": 0}
{"id": "eqasc_train_3893", "prediction": "all x y.((Gill(x) & OxygenInWater(y) & ConvertsToHemoglobin(x,y)) -> Breathing(x))", "score": 0}
{"id": "eqasc_train_3894", "prediction": "all x.(Fish(x) -> HasGills(x))", "score": 0}
{"id": "eqasc_train_3895", "prediction": "all x y.((Fish(x) & OxygenInWater(y) & OxygenInBlood(x)) -> ConvertsTo(x,y))", "score": 0}
{"id": "eqasc_train_3896", "prediction": "all x y.((GillSlit(x) & Fish(y)) -> FormsGills(x,y))", "score": 0}
{"id": "eqasc_train_3897", "prediction": "all x y z.((Fish(x) & Oxygen(y) & Water(z)) -> ConvertsToOxygen(x,y,z))", "score": 0}
{"id": "eqasc_train_3898", "prediction": "all x.(Fish(x) -> (ConvertsOxygenInWater(x) & ProducesOxygenInBlood(x)))", "score": 0}
{"id": "eqasc_train_3899", "prediction": "all x.((MuscleFast(x) & MuscleFibersShorter(x)) -> MuscleContraction(x))", "score": 0}
{"id": "eqasc_train_3900", "prediction": "all x y.((Muscle(x) & MuscleFibers(y) & Stretched(x) & Contracted(y)) -> InjuryOccurs(x))", "score": 0}
{"id": "eqasc_train_3901", "prediction": "all x y.((Muscle(x) & Fibers(y) & Stretched(x) & Shorter(y)) -> InjuryOccurs(x))", "score": 0}
{"id": "eqasc_train_3902", "prediction": "all x.((BicepContraction(x) & FibersGetShorter(x)) -> ObtainedByContraction(x))", "score": 0}
{"id": "eqasc_train_3903", "prediction": "all x.(Muscle(x) -> (BundlesOfFibers(x) & CanContract(x)))", "score": 0}
{"id": "eqasc_train_3904", "prediction": "all x.((BundlesOfFibers(x) & Fibers(y) & Shorter(y)) -> ContractionOf(x,y))", "score": 0}
{"id": "eqasc_train_3905", "prediction": "all x.(Fibre(x) -> (OrientedDiagonally(x) & Fiber(x)))", "score": 0}
{"id": "eqasc_train_3906", "prediction": "all x y.((MuscleContraction(x) & DiagonallyOrientedPartOfMuscle(y) & Shorter(y)) -> Occurs(x,y))", "score": 0}
{"id": "eqasc_train_3907", "prediction": "all x.(Muscle(x) -> (Contract(x) & Relax(x)))", "score": 0}
{"id": "eqasc_train_3908", "prediction": "all x.((MuscleFast(x) & MuscleFibersGetLonger(x)) -> MuscleRelaxation(x))", "score": 0}
{"id": "eqasc_train_3909", "prediction": "all x.(Movement(x) -> ConstrictionOfMuscles(x))", "score": 0}
{"id": "eqasc_train_3910", "prediction": "all x.(Movement(x) -> (MuscleFibersGetShorter(x)))", "score": 0}
{"id": "eqasc_train_3911", "prediction": "all x.(Exercise(x) -> CausesMusclesToContrain(x))", "score": 0}
{"id": "eqasc_train_3912", "prediction": "all x y.((MuscleFilm(x) & Exercise(y)) -> Shorter(x,y))", "score": 0}
{"id": "eqasc_train_3913", "prediction": "all x y.((WeightLifting(x) & LargeMuscle(y)) -> ShortensFibers(x,y))", "score": 0}
{"id": "eqasc_train_3914", "prediction": "all x y.((Exercise(x) & MuscleFiber(y)) -> CausesShorterMuscleFibers(x,y))", "score": 0}
{"id": "eqasc_train_3915", "prediction": "all x.(Contraction(x) -> StraightensLeg(x))", "score": 0}
{"id": "eqasc_train_3916", "prediction": "all x y.((Leg(x) & MuscleFibers(y) & Shorter(y)) -> Straightens(x))", "score": 0}
{"id": "eqasc_train_3917", "prediction": "all x.(MuscleActivation(x) -> PrerequisiteForMuscleContraction(x))", "score": 0}
{"id": "eqasc_train_3918", "prediction": "all x y.((Muscle(x) & Fiber(y) & Fiber(z)) -> (Activates(x,y) & FibersShorter(y,z)))", "score": 0}
{"id": "eqasc_train_3919", "prediction": "all x.(Phytoplankton(x) -> (Bacteria(x) & Algae(x) & UsesSunlightToMakeFood(x)))", "score": 1}
{"id": "eqasc_train_3920", "prediction": "all x.(Plant(x) -> (UsesEnergyFromSunlight(x) & MakesFood(x)))", "score": 0}
{"id": "eqasc_train_3921", "prediction": "all x.(Phytoplankton(x) -> (MakesFoodFromSunlight(x) & Smart(x)))", "score": 0}
{"id": "eqasc_train_3922", "prediction": "all x.((CoastalWater(x) & RichInPhytoplankton(x)) -> Green(x))", "score": 0}
{"id": "eqasc_train_3923", "prediction": "all x.((Bacteria(x) | Algae(x)) -> (MakesCoastalWatersGreen(x) & UsesSunlightToMakeFood(x)))", "score": 0}
{"id": "eqasc_train_3924", "prediction": "all x.(Coupepod(x) -> FeedsOnPhytoplankton(x))", "score": 0}
{"id": "eqasc_train_3925", "prediction": "all x y.((Cophepod(x) & Bacteria(y) & Algae(z)) -> FeedsOn(x,y,z))", "score": 0}
{"id": "eqasc_train_3926", "prediction": "all x.(Coupepod(x) -> (FeedsOnBacteria(x) & FeedsOnAlgae(x) & UsesSunlight(x)))", "score": 0}
{"id": "eqasc_train_3927", "prediction": "all x y.((Fish(x) & Fish(y) & FeedsOnPhytoplankton(x,y)) -> DrawnToPhytoplanktonRichWaters(x))", "score": 0}
{"id": "eqasc_train_3928", "prediction": "all x y.((Fish(x) & Algae(y)) -> FeedsOn(x,y))", "score": 0}
{"id": "eqasc_train_3929", "prediction": "all x.(PlanktonicPlant(x) -> Phytoplankton(x))", "score": 1}
{"id": "eqasc_train_3930", "prediction": "all x.(PlanktonicPlant(x) -> (Bacteria(x) & Algae(x) & UsesSunlightToMakeFood(x)))", "score": 1}
{"id": "eqasc_train_3931", "prediction": "all x.(Coupepod(x) -> (FeedsOnBacteria(x) & FeedsOnAlgae(x)))", "score": 0}
{"id": "eqasc_train_3932", "prediction": "all x.((Phytoplankton(x) | Bacteria(x)) -> (Algae(x) & UsesSunlight(x)))", "score": 0}
{"id": "eqasc_train_3933", "prediction": "all x.(Phytoplankton(x) -> (PlantPlankton(x) & NeedsSunlight(x) & PlantsOnLand(x)))", "score": 0}
{"id": "eqasc_train_3934", "prediction": "all x.(PlantPlanton(x) -> NeedsSunlightToMakeFood(x))", "score": 0}
{"id": "eqasc_train_3935", "prediction": "all x y.((Sunlight(x) & Algae(y)) -> BeamsDownOn(x,y))", "score": 0}
{"id": "eqasc_train_3936", "prediction": "all x.(Phytoplankton(x) -> UsesSunlightBeamsToMakeFood(x))", "score": 0}
{"id": "eqasc_train_3937", "prediction": "all x y.((Gases(x) & BurningCoal(x) & Oil(y) & DissolvingInWater(x)) -> CausesAcidRain(x))", "score": 0}
{"id": "eqasc_train_3938", "prediction": "all x.(AcidRain(x) -> (CausedByBurningOil(x) & CausedByBurningCoal(x)))", "score": 0}
{"id": "eqasc_train_3939", "prediction": "all x.((BurningOil(x) & AcidRain(x)) -> CanCause(x,acidRain))", "score": 0}
{"id": "eqasc_train_3940", "prediction": "all x y.((AcidRain(x) & Tree(y)) -> Kills(x,y))", "score": 0}
{"id": "eqasc_train_3941", "prediction": "all x y.((Gases(x) & BurningCoal(x) & Oil(y) & DissolvingInWater(x)) -> KillsTrees(x))", "score": 0}
{"id": "eqasc_train_3942", "prediction": "all x.(AcidRain(x) -> CanDestroySoil(x))", "score": 0}
{"id": "eqasc_train_3943", "prediction": "all x.((Gases(x) & BurningCoal(x) & Oil(x) & DissolvingInWater(x)) -> CanDestroySoil(x))", "score": 0}
{"id": "eqasc_train_3944", "prediction": "all x.((CoalFiredPowerPlant(x) & ContributesToAcidRain(x)) -> ContributesToRain(x))", "score": 0}
{"id": "eqasc_train_3945", "prediction": "all x.(PowerPlant(x) -> CanCauseAcidRain(x))", "score": 0}
{"id": "eqasc_train_3946", "prediction": "all x.(AcidRain(x) -> (Bad(x) & CanHaveEnvironment(x)))", "score": 0}
{"id": "eqasc_train_3947", "prediction": "all x y.((Gas(x) & BurningCoal(x) & Oil(y) & DissolvingInWater(x)) -> CanHaveEnvironment(x))", "score": 0}
{"id": "eqasc_train_3948", "prediction": "all x.(AcidRain(x) -> ComesFromPollutedClouds(x))", "score": 0}
{"id": "eqasc_train_3949", "prediction": "all x y.((Gase(x) & BurningCoal(x) & Oil(y) & DissolvingInWater(x)) -> PollutedRain(x))", "score": 0}
{"id": "eqasc_train_3950", "prediction": "all x.(AcidRain(x) -> (HarmPlantLife(x) & KillPlants(x)))", "score": 0}
{"id": "eqasc_train_3951", "prediction": "all x y.((Gases(x) & BurningCoal(x) & OilDissolvingInWater(x)) -> HarmPlantLife(y))", "score": 0}
{"id": "eqasc_train_3952", "prediction": "all x.((Vapor(x) | Gas(x)) -> Molecule(x))", "score": 0}
{"id": "eqasc_train_3953", "prediction": "all x y.((Vapors(x) & BurningCoalAndOil(x) & DissolvingInWater(x)) -> CausesAcidRain(x))", "score": 0}
{"id": "eqasc_train_3954", "prediction": "all x.(CoalFiredPlant(x) -> (PowerStation(x) & BurnsCoal(x) & GeneratesElectricity(x)))", "score": 0}
{"id": "eqasc_train_3955", "prediction": "all x y.((PowerStation(x) & GeneratesElectricity(x)) -> ProducesGasesInAtmosphere(y))", "score": 0}
{"id": "eqasc_train_3956", "prediction": "all x.(AcidRain(x) -> HarmfulRain(x))", "score": 0}
{"id": "eqasc_train_3957", "prediction": "all x.((Gases(x) & BurningCoal(x) & DissolvingInWater(x)) -> Harmful(x))", "score": 0}
{"id": "eqasc_train_3958", "prediction": "all x.(AcidRain(x) -> (Precipitation(x) & pH(x,5.7) | Lower(x)))", "score": -1}
{"id": "eqasc_train_3959", "prediction": "all x.((GasesFromBurningCoal(x) & CausesPrecipitation(x,PhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP", "score": -1}
{"id": "eqasc_train_3960", "prediction": "all x.(Acid(x) -> (Compound(x) & CanDonateProton(x)))", "score": 0}
{"id": "eqasc_train_3961", "prediction": "all x y.((Compound(x) & BurningCoal(x) & OilDissolvingInWater(x)) -> CausesProtonRain(x))", "score": 0}
{"id": "eqasc_train_3962", "prediction": "all x.(Gene(x) -> ContainsInstructions(x))", "score": 0}
{"id": "eqasc_train_3963", "prediction": "all x y.((DNA(x) & Protein(y)) -> (ContainsInstructions(x) & CarriesOutInstructions(y)))", "score": 0}
{"id": "eqasc_train_3964", "prediction": "all x y.((Protein(x) & DNA(y) & CarriedByGenes(x,y)) -> HasInstructions(x,y))", "score": 0}
{"id": "eqasc_train_3965", "prediction": "all x.(Allel(x) -> AlternateGene(x))", "score": 0}
{"id": "eqasc_train_3966", "prediction": "all x.(Allele(x) -> (ContainsInstructionsForAlternativeVersions(x) & SameSingleProtein(x)))", "score": 0}
{"id": "eqasc_train_3967", "prediction": "all x.(Gene(x) -> (BloodsForProteinConstruction(x)))", "score": 0}
{"id": "eqasc_train_3968", "prediction": "all x.(Gene(x) -> ContainsBlueprints(x))", "score": 0}
{"id": "eqasc_train_3969", "prediction": "all x.(Gene(x) -> (Bloodprint(x) & MakesProteins(x)))", "score": 0}
{"id": "eqasc_train_3970", "prediction": "all x y.((Thing(x) & ArrangedInClusters(x) & SingleProtein(y)) -> ContainsInstructions(x,y))", "score": 0}
{"id": "eqasc_train_3971", "prediction": "all x.(Gene(x) -> (MadeOfDNA(x) & SubstratOfHereditaryInformation(x)))", "score": 0}
{"id": "eqasc_train_3972", "prediction": "all x.(DNA(x) -> ContainsInstructionsForSingleProtein(x))", "score": 0}
{"id": "eqasc_train_3973", "prediction": "all x.(Gene(x) -> HeredityUnit(x))", "score": 0}
{"id": "eqasc_train_3974", "prediction": "all x.(HerdityUnit(x) -> ContainsInstructionsForSingleProtein(x))", "score": 0}
{"id": "eqasc_train_3975", "prediction": "all x.(Gene(x) -> (Molecule(x) & ContainsInstructions(x) & CorrectWorking(x)))", "score": 0}
{"id": "eqasc_train_3976", "prediction": "all x.(Gene(x) -> (Molecule(x) & ContainsSingleProtein(x)))", "score": 0}
{"id": "eqasc_train_3977", "prediction": "all x y.((Animal(x) & Animal(y)) -> (UsedForAdjustingToHotTemperatures(x,y)))", "score": 0}
{"id": "eqasc_train_3978", "prediction": "all x y.((Animal(x) & HighHumidity(x) & HotTemperature(y)) -> InterferesWithAdaptation(x,y))", "score": 0}
{"id": "eqasc_train_3979", "prediction": "all x.(Skin(x) -> (HelpsControlTemperature(x) & AdjustsBloodFlow(x) & EvaporatesSweat(x)))", "score": 0}
{"id": "eqasc_train_3980", "prediction": "all x y.((Animal(x) & Skin(y)) -> HelpsAdaptToHotTemperatures(y,x))", "score": 0}
{"id": "eqasc_train_3981", "prediction": "all x y.((Animal(x) & Animal(y)) -> (UsedForAdaptingToHeat(x,y)))", "score": 0}
{"id": "eqasc_train_3982", "prediction": "all x.(Perspiration(x) -> (ProducedBySweatGlands(x) & SecretedThroughPorouses(x)))", "score": 0}
{"id": "eqasc_train_3983", "prediction": "all x y.((Animal(x) & Animal(y)) -> (UsedForAdaptingToHotTemperatures(x,y)))", "score": 0}
{"id": "eqasc_train_3984", "prediction": "all x y.((Animal(x) & Animal(y)) -> (UsedForAdaptingToHotTemperatures(x,y) & UsedForAdaptingToHotTemperatures(x,y)))", "score": 0}
{"id": "eqasc_train_3985", "prediction": "all x.(Human(x) -> Animal(x))", "score": 1}
{"id": "eqasc_train_3986", "prediction": "all x y.((Human(x) & Human(y)) -> (UsedForAdaptingToHotTemperatures(x,y)))", "score": 0}
{"id": "eqasc_train_3987", "prediction": "all x.((Animal(x) & WarmBlooded(x)) -> (ControlsBodyTemperature(x) & (Sweeps(x) | Panting(x))))", "score": 0}
{"id": "eqasc_train_3988", "prediction": "all x.(Human(x) -> (AdjustsBodyTemperature(x) & Sweating(x)))", "score": 0}
{"id": "eqasc_train_3989", "prediction": "all x.((Animal(x) & KeepsCoolInHotWeather(x)) -> Sweating(x))", "score": 0}
{"id": "eqasc_train_3990", "prediction": "all x y.((Animal(x) & Animal(y)) -> SweatingToCoolOff(x,y))", "score": 0}
{"id": "eqasc_train_3991", "prediction": "all x y.((Control(x) & Animal(y)) -> AdjustsToRegulateTemperatureAndHumidity(x,y))", "score": 0}
{"id": "eqasc_train_3992", "prediction": "all x.(Sweat(x) -> AdjustsControlsToRegulateTemperature(x))", "score": 0}
{"id": "eqasc_train_3993", "prediction": "all x y z.((Earth(x) & Earth(y) & Earth(z) & TiltedOnAxis(x,y)) -> ReceivesLessEnergyFromSun(x,z))", "score": 0}
{"id": "eqasc_train_3994", "prediction": "all x.((Energy(x) & ProducedBySun(x) & Heat(x) & Light(x)) -> SolarEnergy(x))", "score": 0}
{"id": "eqasc_train_3995", "prediction": "all x y.((Earth(x) & TiltedOnAxis(x,y)) -> (ReceivesLessHeat(x) & LessLight(y)))", "score": 0}
{"id": "eqasc_train_3996", "prediction": "all x y.((Energy(x) & Sun(y)) -> DrivesWeatherSystem(x,y))", "score": 0}
{"id": "eqasc_train_3997", "prediction": "all x.(TiltedOnAxis(x) -> CausesSolarEnergyToDriveWeatherSystem(x))", "score": 0}
{"id": "eqasc_train_3998", "prediction": "all x.(Season(x) -> VariationsInSunEnergy(x))", "score": 0}
{"id": "eqasc_train_3999", "prediction": "all x.(Season(x) -> EarthTiltedOnAxis(x))", "score": 0}
{"id": "eqasc_train_4000", "prediction": "all x.(TiltedAwayFromSun(x) -> Winter(x))", "score": 0}
{"id": "eqasc_train_4001", "prediction": "all x y.((EarthSide(x) & Earth(y) & ReceivesLessEnergyFromSun(x,y)) -> WinterEvent(x))", "score": 0}
{"id": "eqasc_train_4002", "prediction": "all x.(Plant(x) -> (ObtainsEnergyFromSun(x)))", "score": 0}
{"id": "eqasc_train_4003", "prediction": "all x y.((Earth(x) & TiltedOnAxis(x,y)) -> PlantsReceiveLessEnergy(x,y))", "score": 0}
{"id": "eqasc_train_4004", "prediction": "all x y.((Winter(x) & Earth(y)) -> TiltedAwayFromSun(y,x))", "score": 0}
{"id": "eqasc_train_4005", "prediction": "all x.(Winter(x) -> (TiltedAwayFromSun(x) & ReceivesLessEnergy(x)))", "score": 0}
{"id": "eqasc_train_4006", "prediction": "all x y z.((Season(x) & Earth(y) & Earth(z)) -> (ReceivesLessEnergyFromSun(y,z) & ReceivesLessEnergyFromSun(y,z)))", "score": 0}
{"id": "eqasc_train_4007", "prediction": "all x.(SolarEnergy(x) -> Power(x))", "score": 0}
{"id": "eqasc_train_4008", "prediction": "all x y.((EarthSide(x) & EarthSide(y)) -> ReceivesLessSolarPowerFromSun(x,y))", "score": 0}
{"id": "eqasc_train_4009", "prediction": "all x.(Mutations(x) -> (ChangesChromosomeStructure(x) | ChangesSingleNucleotide(x)))", "score": 0}
{"id": "eqasc_train_4010", "prediction": "all x.(Nucleotide(x) -> BuildingBlockOfDNA(x))", "score": 0}
{"id": "eqasc_train_4011", "prediction": "all x.(Mutation(x) -> ChangesStructureOfBuildingBlocksOfDNA(x))", "score": 0}
{"id": "eqasc_train_4012", "prediction": "all x.(DNA(x) -> MadeUpOfNucleotides(x))", "score": 0}
{"id": "eqasc_train_4013", "prediction": "all x.(Mutations(x) -> ChangesDNA(x))", "score": 0}
{"id": "eqasc_train_4014", "prediction": "all x.(SNP(x) -> InvolvesPolymorphismsAtSingleNucleotideLevel(x))", "score": 0}
{"id": "eqasc_train_4015", "prediction": "all x.(Mutations(x) -> (ChangesStructureOfChromosome(x) | CausesSNPs(x)))", "score": 0}
{"id": "eqasc_train_4016", "prediction": "all x.(MutagenChemical(x) -> CausesMutation(x))", "score": 0}
{"id": "eqasc_train_4017", "prediction": "all x y.((MutagenChemical(x) & Nucleotide(y)) -> ChangesStructure(x,y))", "score": 0}
{"id": "eqasc_train_4018", "prediction": "all x.(Mutations(x) -> ChangesDNAStructure(x))", "score": 0}
{"id": "eqasc_train_4019", "prediction": "all x.(Mutations(x) -> ChangesInGeneticInformation(x))", "score": 0}
{"id": "eqasc_train_4020", "prediction": "all x.(AlterationsInGeneticInformation(x) -> (ChromosomeStructure(x) | SingleNucleotideStructure(x)))", "score": 0}
{"id": "eqasc_train_4021", "prediction": "all x.((Genes(x) & MutationsOnYChromosome(x)) -> InvolvedInMaleGeneticInfertility(x))", "score": 0}
{"id": "eqasc_train_4022", "prediction": "all x y.((ChangesInStructureOfYChromosome(x) & MaleInfertility(y)) -> InvolvedInInfertility(x,y))", "score": 0}
{"id": "eqasc_train_4023", "prediction": "all x.(Mutation(x) -> BeneficialToOrganism(x))", "score": 0}
{"id": "eqasc_train_4024", "prediction": "all x y.((Chromosome(x) & Organism(y)) -> CanChangeStructure(x,y))", "score": 0}
{"id": "eqasc_train_4025", "prediction": "all x.(ChromomosomalAnomaly(x) -> CanBeExaminedByChromomosomeAnalysis(x))", "score": 0}
{"id": "eqasc_train_4026", "prediction": "all x.(Mutations(x) -> DetectedByAnalysisOnGeneAnomalies(x))", "score": 0}
{"id": "eqasc_train_4027", "prediction": "all x.(Animal(x) -> (CommunicatesWithSounds(x) | CommunicatesWithChemicals(x) | CommunicatesWithVisualCues(x)))", "score": 1}
{"id": "eqasc_train_4028", "prediction": "all x.(Pheromone(x) -> (ProducedByAnimals(x) & AllowsCommunication(x)))", "score": 0}
{"id": "eqasc_train_4029", "prediction": "all x y.((Animal(x) & Pheromone(y)) -> CommunicatesWith(x,y))", "score": 0}
{"id": "eqasc_train_4030", "prediction": "all x.(Cat(x) -> (CommunicatesWithSounds(x) | CommunicatesWithChemicals(x) | CommunicatesWithVisualCues(x)))", "score": 1}
{"id": "eqasc_train_4031", "prediction": "all x.(Communication(x) -> (RequiresIdea(x) & RequiresMessage(x)))", "score": 0}
{"id": "eqasc_train_4032", "prediction": "all x.(Animal(x) -> (SharesSounds(x) | SharesChemicals(x) | SharesVisualCues(x)))", "score": 0}
{"id": "eqasc_train_4033", "prediction": "all x.(Communication(x) -> (ExchangeOfInformation(x) & ExchangeOfIdeas(x) & ExchangeOfEmotions(x)))", "score": 0}
{"id": "eqasc_train_4034", "prediction": "all x.(Animal(x) -> (ExchangesInformationWithSounds(x) | ExchangesInformationWithChemicals(x) | ExchangesInformationWithVisualCues(x)))", "score": 0}
{"id": "eqasc_train_4035", "prediction": "all x.((Bat(x) | Owl(x)) -> NocturnalAnimal(x))", "score": 0}
{"id": "eqasc_train_4036", "prediction": "all x.(Bat(x) -> CommunicatesWithSounds(x))", "score": 0}
{"id": "eqasc_train_4037", "prediction": "all x.(Animal(x) -> (CommunicatesWithVisualCues(x) | CommunicatesWithChemicals(x) | CommunicatesWithWaves(x)))", "score": 0}
{"id": "eqasc_train_4038", "prediction": "all x.((AnimalCommunication(x) & ProperlyHumanCommunication(x)) -> (Abstract(x) & Linguistic(x)))", "score": 0}
{"id": "eqasc_train_4039", "prediction": "all x.(Human(x) -> CommunicatesLinguistically(x))", "score": 0}
{"id": "eqasc_train_4040", "prediction": "all x.(Cow(x) -> (CommunicatesWithSounds(x) | CommunicatesWithChemicals(x) | CommunicatesWithVisualCues(x)))", "score": 0}
{"id": "eqasc_train_4041", "prediction": "all x.(Monkey(x) -> WildAnimal(x))", "score": 0}
{"id": "eqasc_train_4042", "prediction": "all x.(Monkey(x) -> (CommunicatesWithSounds(x) | CommunicatesWithChemicals(x) | CommunicatesWithVisualCues(x)))", "score": 0}
{"id": "eqasc_train_4043", "prediction": "all x.(CatCat(x) -> (Animal(x) & GreatPet(x)))", "score": 0}
{"id": "eqasc_train_4044", "prediction": "all x.(Cat(x) -> (CommunicatesWithSounds(x) | CommunicatesWithChemicals(x) | CommunicatesWithVisualCues(x)))", "score": 0}
{"id": "eqasc_train_4045", "prediction": "all x.(Cow(x) -> (CommunicatesWithSounds(x) | CommunicatesWithChemicals(x) | CommunicatesWithVisualCues(x)))", "score": 0}
{"id": "eqasc_train_4046", "prediction": "all x.(Human(x) -> -CommunicatesWithChemicals(x))", "score": 0}
{"id": "eqasc_train_4047", "prediction": "all x.(SandDune(x) -> (FormedByWindTransportingAndDepositingSand(x) & FormedByWind(x)))", "score": 0}
{"id": "eqasc_train_4048", "prediction": "all x.(Sand(x) -> (MovesThroughStorms(x) & MovesThroughWind(x)))", "score": 0}
{"id": "eqasc_train_4049", "prediction": "all x y.((SandDune(x) & Storm(y)) -> (FormedBy(x,y) & TransportsAndDepositsSand(x)))", "score": 0}
{"id": "eqasc_train_4050", "prediction": "all x.(DesertDunes(x) -> AmazingDiversityOfForms(x))", "score": 0}
{"id": "eqasc_train_4051", "prediction": "all x.(Desert(x) -> (Location(x) & WindTransport(x) & DepositsSand(x)))", "score": 0}
{"id": "eqasc_train_4052", "prediction": "all x y.((AeolianErosion(x) & Sand(y) & Desert(z)) -> PartiallyResponsibleForSandDunes(x,y,z))", "score": 0}
{"id": "eqasc_train_4053", "prediction": "all x y.((Wind(x) & Erosion(y)) -> CreatesFormationsInDesert(x,y))", "score": 0}
{"id": "eqasc_train_4054", "prediction": "all x.(WindErosion(x) -> (Movement(x) & Deposition(x) & SoilParticles(x) & Wind(x)))", "score": 0}
{"id": "eqasc_train_4055", "prediction": "all x.(SandDune(x) -> (FormedByWindErosion(x) & FormedByWindErosion(x)))", "score": 0}
{"id": "eqasc_train_4056", "prediction": "all x.(Wind(x) -> CausedByPressureDifferences(x))", "score": 0}
{"id": "eqasc_train_4057", "prediction": "all x.(SandDune(x) -> FormedByPressureDifferences(x))", "score": 0}
{"id": "eqasc_train_4058", "prediction": "all x.(SandDune(x) -> ProvidesHabitatForRarePlantSpecies(x))", "score": 0}
{"id": "eqasc_train_4059", "prediction": "all x y.((Habitat(x) & RarePlantSpecies(y)) -> (FormedByWind(x,y) & TransportsAndDepositsSand(x)))", "score": 0}
{"id": "eqasc_train_4060", "prediction": "all x.(DuneGrass(x) -> VeryImportantToSandDunePreservation(x))", "score": 0}
{"id": "eqasc_train_4061", "prediction": "all x.(DuneGrass(x) -> PreventsErosion(x))", "score": 0}
{"id": "eqasc_train_4062", "prediction": "all x y.((Vegetation(x) & Sand(y)) -> Stabilizes(x,y))", "score": 0}
{"id": "eqasc_train_4063", "prediction": "all x.((Vegetation(x) & Sand(x)) -> LessLikelySandDunes(x))", "score": 0}
{"id": "eqasc_train_4064", "prediction": "all x y z.((BurriedUnderSoilAndMud(x) & Peat(y) & Coal(z) & ExtremeHeatAndPressure(x) & Swamp(y) & LongPeriodOfTime(y)) -> ChangesIntoCoal(x,y,z))", "score": 0}
{"id": "eqasc_train_4065", "prediction": "all x.(Swamp(x) -> Wetland(x))", "score": 0}
{"id": "eqasc_train_4066", "prediction": "all x y z.((BurnedUnderSoilAndMud(x) & Peat(y) & Coal(z) & ExtremeHeatAndPressure(x) & Wetland(x) & LongPeriodOfTime(x)) -> ChangesIntoCoal(y,z))", "score": 0}
{"id": "eqasc_train_4067", "prediction": "all x.(Coal(x) -> FossilPeat(x))", "score": 0}
{"id": "eqasc_train_4068", "prediction": "all x.((Fossil(x) & TurnsIntoCoal(x)) -> OverTime(x))", "score": 0}
{"id": "eqasc_train_4069", "prediction": "(all x.(Marble(x) -> UsedForSculptures(x)) & all y.(Coal(y) -> UsedForFuelAndEnergy(y)))", "score": 0}
{"id": "eqasc_train_4070", "prediction": "all x y.((BurnedUnderMud(x) & Soil(y)) -> (ChangesPatIntoFuel(x) & BuriedUnderMud(x) & ChangesSoilIntoFuel(y)))", "score": 0}
{"id": "eqasc_train_4071", "prediction": "all x y.((Wetland(x) & BuriedUnderSoil(x) & BuriedUnderMud(x)) -> (ChangesPeatIntoCoal(y) & InWetland(x,y)))", "score": 0}
{"id": "eqasc_train_4072", "prediction": "all x.(PeatMoss(x) -> (OrganicMatter(x) & MixesWithSoil(x) & FormsPeat(x)))", "score": 0}
{"id": "eqasc_train_4073", "prediction": "all x y.((OrganicMatter(x) & BuriedUnderMush(x)) -> ChangesPeatIntoCoal(y))", "score": 0}
{"id": "eqasc_train_4074", "prediction": "all x.(DeadPlant(x) -> ProvidesPeatMoss(x))", "score": 0}
{"id": "eqasc_train_4075", "prediction": "all x y.((Plant(x) & BuriedUnderSoil(x) & BuriedUnderMod(x)) -> ChangesIntoCoal(x,y))", "score": 0}
{"id": "eqasc_train_4076", "prediction": "all x.((Vegetation(x) & CompressedIntoCoal(x)) -> LongPeriodsOfTime(x))", "score": 0}
{"id": "eqasc_train_4077", "prediction": "all x.(Alligator(x) -> LivesInSwamps(x))", "score": 0}
{"id": "eqasc_train_4078", "prediction": "all x.(Alligator(x) -> TurnsIntoCoal(x))", "score": 0}
{"id": "eqasc_train_4079", "prediction": "all x.(Fen(x) -> FormsNonAcidPeat(x))", "score": 0}
{"id": "eqasc_train_4080", "prediction": "all x y.((Fen(x) & BurriedUnderSoil(x) & BurriedUnderMod(x)) -> ChangesFenFormation(y))", "score": 0}
{"id": "eqasc_train_4081", "prediction": "all x y z.((BurnedUnderSoilAndMud(x) & Peat(y) & Coal(z) & ExtremeHeatAndPressure(x)) -> ChangesIntoCoal(y,z))", "score": 0}
{"id": "eqasc_train_4082", "prediction": "all x.(PlantReproduction(x) -> RequiresPollination(x))", "score": 0}
{"id": "eqasc_train_4083", "prediction": "all x.(Pollination(x) -> RequiresWind(x))", "score": 0}
{"id": "eqasc_train_4084", "prediction": "all x.((Insect(x) | Hummingbird(x)) -> PrimaryPollinators(x))", "score": 0}
{"id": "eqasc_train_4085", "prediction": "all x.(PlantReproduction(x) -> (RequiresInsects(x) & RequiresHummingbirds(x)))", "score": 0}
{"id": "eqasc_train_4086", "prediction": "all x.(CroaberryFlower(x) -> RequiresBeeVisitationForPollination(x))", "score": 0}
{"id": "eqasc_train_4087", "prediction": "all x.(CranberryReproduction(x) -> RequiresBeeVisitation(x))", "score": 0}
{"id": "eqasc_train_4088", "prediction": "all x.(Plant(x) -> PollinatedByBees(x))", "score": 0}
{"id": "eqasc_train_4089", "prediction": "all x y.((Bee(x) & Plant(y)) -> AidsReproduction(x,y))", "score": 0}
{"id": "eqasc_train_4090", "prediction": "all x.(Perennial(x) -> PlantedOutsideInSpring(x))", "score": 0}
{"id": "eqasc_train_4091", "prediction": "all x.(PerennialReproduction(x) -> RequiresPollination(x))", "score": 0}
{"id": "eqasc_train_4092", "prediction": "all x.(Pollination(x) -> (AccompaniedByBees(x)))", "score": 0}
{"id": "eqasc_train_4093", "prediction": "all x.(Bee(x) -> (UsefulForPlantReproduction(x) & PlantReproduction(x)))", "score": 0}
{"id": "eqasc_train_4094", "prediction": "all x.(Bee(x) -> EssentialForCropPollination(x))", "score": 0}
{"id": "eqasc_train_4095", "prediction": "all x.(Bee(x) -> EssentialForCropReproduction(x))", "score": 0}
{"id": "eqasc_train_4096", "prediction": "all x y.((Plant(x) & Bat(y)) -> (ReliesOn(x,y) & SpreadsSeeds(x) & PollinatesFlowers(x)))", "score": 0}
{"id": "eqasc_train_4097", "prediction": "all x y.((PlantReproduction(x) & Bat(y)) -> RequiresSpreadSeeds(y,x))", "score": 0}
{"id": "eqasc_train_4098", "prediction": "all x.(OrchidReproduction(x) -> RequiresPollination(x))", "score": 0}
{"id": "eqasc_train_4099", "prediction": "all x.(Bee(x) -> PollinationNecessaryFor(x,y))", "score": 0}
{"id": "eqasc_train_4100", "prediction": "all x.(PlantReproduction(x) -> RequiresBees(x))", "score": 0}
{"id": "eqasc_train_4101", "prediction": "all x.(HoneyBee(x) -> (ProvidesHoney(x) & PollinatesCrops(x)))", "score": 0}
{"id": "eqasc_train_4102", "prediction": "all x.(Pollination(x) -> (IntricateSeriesOfEvents(x) & EndsInPlantReproduction(x)))", "score": 0}
{"id": "eqasc_train_4103", "prediction": "all x y.((Pollination(x) & Plant(y)) -> IntricateSeriesOfEventsLeadsToPropagation(x,y))", "score": 0}
{"id": "eqasc_train_4104", "prediction": "all x.(InsectVisitor(x) -> (RequiredForPollination(x) & MixedMatingSystem(x)))", "score": 0}
{"id": "eqasc_train_4105", "prediction": "all x.(PlantReproduction(x) -> RequiresInsect(x))", "score": 0}
{"id": "eqasc_train_4106", "prediction": "all x.(Insect(x) -> NaturalPollinators(x))", "score": 0}
{"id": "eqasc_train_4107", "prediction": "all x.(PlantReproductionRequiresInsects(x) -> RequiresInsects(x))", "score": 0}
{"id": "eqasc_train_4108", "prediction": "all x.(Pollination(x) -> (Flies(x) | Wasps(x) | Bees(x)))", "score": 0}
{"id": "eqasc_train_4109", "prediction": "all x y.((PlantReproduction(x) & Wasp(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_train_4110", "prediction": "all x.(Insect(x) -> PollinatesPlants(x))", "score": 0}
{"id": "eqasc_train_4111", "prediction": "all x y.((Insect(x) & Plant(y)) -> HelpsReproduce(x,y))", "score": 0}
{"id": "eqasc_train_4112", "prediction": "all x.(AngiospermReproduction(x) -> RequiresPollination(x))", "score": 0}
{"id": "eqasc_train_4113", "prediction": "all x y.((BoilingWood(x) & Heat(y)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_train_4114", "prediction": "all x.(AirPollution(x) -> CreatedByBurning(x))", "score": 0}
{"id": "eqasc_train_4115", "prediction": "all x.(ProducesHeat(x) -> CausesAirPollution(x))", "score": 0}
{"id": "eqasc_train_4116", "prediction": "all x.(BirchTree(x) -> (Deciduous(x) & BurnsHot(x) & BurnsFast(x) & SoapedWithOilOrKerosene(x)))", "score": 0}
{"id": "eqasc_train_4117", "prediction": "all x.(BerchTree(x) -> WoodUsedToProduceHeat(x))", "score": 0}
{"id": "eqasc_train_4118", "prediction": "all x.(InteriorWood(x) -> (Berry(x) | Spruce(x) | Pine(x)))", "score": 0}
{"id": "eqasc_train_4119", "prediction": "all x y.((BoilingSpruce(x) & Pruce(y)) -> ProducesHeat(x,y))", "score": 0}
{"id": "eqasc_train_4120", "prediction": "all x.(Food(x) -> (CookedBySteam(x) & CookedByHeat(x)))", "score": 0}
{"id": "eqasc_train_4121", "prediction": "all x y.((BoilingWood(x) & Food(y)) -> Cooks(x,y))", "score": 0}
{"id": "eqasc_train_4122", "prediction": "all x.((Wood(x) & WoodBurningStove(x)) -> Cut(x))", "score": 0}
{"id": "eqasc_train_4123", "prediction": "all x y.((Wood(x) & Stove(y)) -> HasToBeCutToBeUsedIn(x,y))", "score": 0}
{"id": "eqasc_train_4124", "prediction": "all x y.((BurningWood(x) & KineticEnergy(y)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_train_4125", "prediction": "all x.(BoilingWood(x) -> ProducesKineticEnergy(x))", "score": 0}
{"id": "eqasc_train_4126", "prediction": "all x.((Wood(x) & BurnedForCooking(x)) -> Cooking(x))", "score": 0}
{"id": "eqasc_train_4127", "prediction": "all x y.((Hotter(x) & AirConditioning(y)) -> KeepsBuildingComfortable(x,y))", "score": 0}
{"id": "eqasc_train_4128", "prediction": "all x y.((BurningWood(x) & Building(y)) -> UsedToKeepComfortable(x,y))", "score": 0}
{"id": "eqasc_train_4129", "prediction": "all x y.((Heat(x) & Water(y)) -> (Addition(x,Heat) & Increase(y,Temperature)))", "score": 0}
{"id": "eqasc_train_4130", "prediction": "all x y.((BoilingWood(x) & Temperature(y)) -> IncreasesTemperature(x,y))", "score": 0}
{"id": "eqasc_train_4131", "prediction": "all x.((CombustionRelated(x) & MotorVehicles(x) & WoodBurning(x) & OpenBurning(x) & IndustrialProcesses(x)) -> CombustionRelated(x))", "score": 0}
{"id": "eqasc_train_4132", "prediction": "all x y.((Combustion(x) & Heat(y)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_train_4133", "prediction": "all x.(Wood(x) -> (Pine(x) | Oak(x)))", "score": 0}
{"id": "eqasc_train_4134", "prediction": "all x y.((BoilingOak(x) & Heat(y)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_train_4135", "prediction": "all x y.((Pan(x) & Stove(y)) -> UsedForCookingFood(x,y))", "score": 0}
{"id": "eqasc_train_4136", "prediction": "all x.((Food(x) & HumanEats(x)) -> (Cooked(x) & Recooked(x) & WarmedUp(x)))", "score": 0}
{"id": "eqasc_train_4137", "prediction": "all x y.((Human(x) & Pan(y)) -> (Uses(x,y) & CooksOnStove(x) & Eats(x)))", "score": 0}
{"id": "eqasc_train_4138", "prediction": "all x.(Bacteria(x) -> DissectedByHeat(x))", "score": 0}
{"id": "eqasc_train_4139", "prediction": "all x.(Pan(x) -> (DisruptsBacteria(x) & CooksFood(x)))", "score": 0}
{"id": "eqasc_train_4140", "prediction": "all x.((Egg(x) & InFryingPan(x)) -> Cooked(x))", "score": 0}
{"id": "eqasc_train_4141", "prediction": "all x.(Egg(x) -> CanBeCookedOnStove(x))", "score": 0}
{"id": "eqasc_train_4142", "prediction": "all x.(PanSauce(x) -> (MadeFromPanJuices(x) & (CookedMeat(x) | CookedFish(x))))", "score": 0}
{"id": "eqasc_train_4143", "prediction": "all x y.((Stove(x) & CooksMeats(x) & CooksFish(x)) -> (OnStove(y) & CooksMeats(y) & CooksFish(y)))", "score": 0}
{"id": "eqasc_train_4144", "prediction": "all x y.((MicrowaveOven(x) & Stove(y)) -> ProducesLittleHeat(x,y))", "score": 0}
{"id": "eqasc_train_4145", "prediction": "all x y.((Food(x) & Microwave(y) & LessHeat(x,y)) -> CookedIn(x,y))", "score": 0}
{"id": "eqasc_train_4146", "prediction": "all x.((Oven(x) | Stove(x) | Microwave(x)) -> (KeepsFoodWarm(x) | HeatsFoodUp(x)))", "score": 0}
{"id": "eqasc_train_4147", "prediction": "all x.(Pan(x) -> (KeepsFoodWarm(x) | HeatsFoodUp(x)))", "score": 0}
{"id": "eqasc_train_4148", "prediction": "all x y.((Pan(x) & Heat(x,y)) -> AddsCookingOil(x,y))", "score": 0}
{"id": "eqasc_train_4149", "prediction": "all x y.((CookingOil(x) & Food(y)) -> HeatsFood(x,y))", "score": 0}
{"id": "eqasc_train_4150", "prediction": "all x.(Wood(x) -> (BurnedIn(x,Fireplaces) | BurnedIn(x,Stoves) | BurnedIn(x,InsertStoves)))", "score": 0}
{"id": "eqasc_train_4151", "prediction": "all x y.((Wood(x) & Food(y)) -> BurnedForCooking(x,y))", "score": 0}
{"id": "eqasc_train_4152", "prediction": "all x.((Food(x) & (Chicken(x) | Potatoes(x))) -> Recommended(x))", "score": 0}
{"id": "eqasc_train_4153", "prediction": "all x y.((Chicken(x) & Potato(y)) -> (CookedInPan(x,y) & CookedInStove(x,y)))", "score": 0}
{"id": "eqasc_train_4154", "prediction": "all x.((Pan(x) & MadeOfMetal(x)) -> (UsedInOven(x) | UsedUnderBroiler(x)))", "score": 0}
{"id": "eqasc_train_4155", "prediction": "all x.(Metal(x) -> UsedForCookingFood(x))", "score": 0}
{"id": "eqasc_train_4156", "prediction": "all x.(Fire(x) -> PutsOffHeat(x))", "score": 0}
{"id": "eqasc_train_4157", "prediction": "all x y.((Pan(x) & Food(y) & PutsOverFire(x,y)) -> Cooks(x,y))", "score": 0}
{"id": "eqasc_train_4158", "prediction": "all x.(CookedFood(x) -> EasierToDigest(x))", "score": 0}
{"id": "eqasc_train_4159", "prediction": "all x y.((Pan(x) & Stove(y)) -> UsedOnToMakeFoodEasierToDigest(x,y))", "score": 0}
{"id": "eqasc_train_4160", "prediction": "all x.(Stove(x) -> (SourceOfManyAccidents(x) & InKitchen(x)))", "score": 0}
{"id": "eqasc_train_4161", "prediction": "all x.(Pan(x) -> (CooksFood(x) & HeatsFoodInPan(x) & ManyAccidentsInKitchen(x)))", "score": 0}
{"id": "eqasc_train_4162", "prediction": "all x.(HealthfulMeal(x) -> EatsGrainFood(x))", "score": 0}
{"id": "eqasc_train_4163", "prediction": "all x.(Pan(x) -> (CookingMeals(x) & HeatingOnStove(x)))", "score": 0}
{"id": "eqasc_train_4164", "prediction": "all x.(GasolineLawnMower(x) -> ConvertsGasolineToMotion(x))", "score": 0}
{"id": "eqasc_train_4165", "prediction": "all x y.((GasolineLawnMower(x) & Car(y)) -> BadEmissions(x,y))", "score": 0}
{"id": "eqasc_train_4166", "prediction": "all x y.((GasolineMower(x) & Gasoline(y)) -> (Converts(x,y) & BadAsCars(x)))", "score": 0}
{"id": "eqasc_train_4167", "prediction": "all x.((SmallEngine(x) & (Landscaping(x) | LawnMower(x))) -> PollutesAtHighRate(x))", "score": 0}
{"id": "eqasc_train_4168", "prediction": "all x.((ConvertsGasoline(x) & Motion(x)) -> CausesPollution(x))", "score": 0}
{"id": "eqasc_train_4169", "prediction": "all x.((Oil(x) | Gasoline(x)) -> FossilFuel(x))", "score": 0}
{"id": "eqasc_train_4170", "prediction": "all x y.((LawnMower(x) & FossilFuels(y)) -> ConvertsToMotion(x,y))", "score": 0}
{"id": "eqasc_train_4171", "prediction": "all x.((Diesel(x) | Gasoline(x)) -> Chemical(x))", "score": 0}
{"id": "eqasc_train_4172", "prediction": "all x y.((LawnMower(x) & Chemicals(y)) -> ConvertsToMotion(x,y))", "score": 0}
{"id": "eqasc_train_4173", "prediction": "all x y.((Machine(x) & LawnMower(y)) -> (MowsDesertsForests(x) & CutsGrass(y)))", "score": 0}
{"id": "eqasc_train_4174", "prediction": "all x y.((Gasoline(x) & Machine(y)) -> ConvertedToGrass(x,y))", "score": 0}
{"id": "eqasc_train_4175", "prediction": "all x y.((Blender(x) | Mixer(x) | LawnMower(x)) -> ConvertsElectricalEnergyToMechanicalMotion(x))", "score": 0}
{"id": "eqasc_train_4176", "prediction": "all x.(GasolineLawnMower(x) -> UsesGasolineToGetMechanicalMotion(x))", "score": 0}
{"id": "eqasc_train_4177", "prediction": "all x.(Gasoline(x) -> MotorFuel(x))", "score": 0}
{"id": "eqasc_train_4178", "prediction": "all x.(LawnMower(x) -> UsesMotor(x))", "score": 0}
{"id": "eqasc_train_4179", "prediction": "all x.(LawnMower(x) -> (ConvertsFossilFuels(x) & Motion(x)))", "score": 0}
{"id": "eqasc_train_4180", "prediction": "all x.(Mower(x) -> (PoweredByGasolineDrivenCombustionEngine(x)))", "score": 0}
{"id": "eqasc_train_4181", "prediction": "all x.(GasolineDrivenCombustionEngine(x) -> ConvertsGasolineToMotion(x))", "score": 0}
{"id": "eqasc_train_4182", "prediction": "all x.(Movement(x) -> ThoughtInMotion(x))", "score": 0}
{"id": "eqasc_train_4183", "prediction": "all x.(GasolineLawnMower(x) -> ConvertsGasolineToMovement(x))", "score": 0}
{"id": "eqasc_train_4184", "prediction": "all x y.((GasolineMower(x) & Car(y)) -> HasAsMoreEmission(x,y))", "score": 0}
{"id": "eqasc_train_4185", "prediction": "all x.(RangeOfMotion(x) -> (NaturalDistance(x) & NaturalDirectionOfMovement(x)))", "score": 0}
{"id": "eqasc_train_4186", "prediction": "all x.(GasolineLawnMower(x) -> ConvertsGasolineToMovement(x))", "score": 0}
{"id": "eqasc_train_4187", "prediction": "all x y.((LawnMower(x) & Hydrocarbons(y)) -> ConvertsToMotion(x,y))", "score": 0}
{"id": "eqasc_train_4188", "prediction": "all x.(Motion(x) | Move(x) | Movement(x))", "score": 0}
{"id": "eqasc_train_4189", "prediction": "all x y.((GasolineLawnMower(x) & Gasoline(y)) -> ConvertsToChangeOfPosition(x,y))", "score": 0}
{"id": "eqasc_train_4190", "prediction": "all x.(Animal(x) -> KingdomOfMulticellularEukaryotes(x))", "score": 0}
{"id": "eqasc_train_4191", "prediction": "all x.(Human(x) -> MulticellularEukaryote(x))", "score": 0}
{"id": "eqasc_train_4192", "prediction": "all x.(Human(x) -> AnimalKingdom(x))", "score": 0}
{"id": "eqasc_train_4193", "prediction": "all x.(Eukaryote(x) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_4194", "prediction": "all x.(Animal(x) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_4195", "prediction": "all x.(Invertebrate(x) -> AnimalKingdom(x))", "score": 0}
{"id": "eqasc_train_4196", "prediction": "all x.(MulticellularEukaryote(x) -> Invertebrate(x))", "score": 0}
{"id": "eqasc_train_4197", "prediction": "all x.(Human(x) -> Animal(x))", "score": 0}
{"id": "eqasc_train_4198", "prediction": "all x.((Plant(x) | Animal(x)) -> Multicellular(x))", "score": 0}
{"id": "eqasc_train_4199", "prediction": "all x.(Eukaryote(x) -> HasManyOrganelles(x))", "score": 0}
{"id": "eqasc_train_4200", "prediction": "all x.(Animal(x) -> ManyOrganelles(x))", "score": 0}
{"id": "eqasc_train_4201", "prediction": "all x.(Animal(x) -> (Diploid(x) | Eukaryotic(x) | Multicellular(x)))", "score": 0}
{"id": "eqasc_train_4202", "prediction": "all x.(Animal(x) -> KingdomOfDiploidEukaryotes(x))", "score": 0}
{"id": "eqasc_train_4203", "prediction": "all x.(Eukaryote(x) -> Complex(x))", "score": 0}
{"id": "eqasc_train_4204", "prediction": "all x.(MulticellularOrganism(x) -> HasManyOrganelles(x))", "score": 0}
{"id": "eqasc_train_4205", "prediction": "all x.(Horse(x) -> DomesticAnimal(x))", "score": 0}
{"id": "eqasc_train_4206", "prediction": "all x.(Horse(x) -> (MulticellularEukaryote(x) & Eukaryote(x)))", "score": 0}
{"id": "eqasc_train_4207", "prediction": "all x.(Invertebrate(x) -> MakesMajorityOfAnimalKingdome(x))", "score": 0}
{"id": "eqasc_train_4208", "prediction": "all x.(Invertebrate(x) -> MakesUpMajorityOfMulticellularEukaryotes(x))", "score": 0}
{"id": "eqasc_train_4209", "prediction": "all x y.((Star(x) & NuclearReactions(y)) -> CausesStarsToProduceLight(x,y))", "score": 0}
{"id": "eqasc_train_4210", "prediction": "all x.(Star(x) -> (GeneratesLight(x) & GeneratesHeat(x) & NuclearFusion(x)))", "score": 0}
{"id": "eqasc_train_4211", "prediction": "all x y.((Fusion(x) & Star(y)) -> CausesEmittingLight(x,y))", "score": 0}
{"id": "eqasc_train_4212", "prediction": "(all x.(Sun(x) -> Star(x)))", "score": 0}
{"id": "eqasc_train_4213", "prediction": "all x y.((NuclearReactionsInSun(x) & Sun(y)) -> CausesSunToProduceLight(x,y))", "score": 0}
{"id": "eqasc_train_4214", "prediction": "all x.(IntenseBrightLight(x) -> ProducesGlare(x))", "score": 0}
{"id": "eqasc_train_4215", "prediction": "all x.((NuclearReaction(x) & Star(x)) -> ProducesBrightGlares(x))", "score": 0}
{"id": "eqasc_train_4216", "prediction": "JuneSummerTriangle(3) & BrightStarsLightUpSummerSky(3))", "score": -1}
{"id": "eqasc_train_4217", "prediction": "all x y.((Star(x) & NuclearReaction(y)) -> BrightensSummerSky(x,y))", "score": 0}
{"id": "eqasc_train_4218", "prediction": "all x.(Neutrinos(x) -> exists y.(NuclearReaction(y) & ProducedIn(x,y))))", "score": -1}
{"id": "eqasc_train_4219", "prediction": "all x.(Neutrinos(x) -> CausesStarsToProduceLight(x))", "score": 0}
{"id": "eqasc_train_4220", "prediction": "all x y.((Star(x) & NuclearReactions(y)) -> CausesStarsToProduceEnergy(x,y))", "score": 0}
{"id": "eqasc_train_4221", "prediction": "all x.(Earth(x) -> OrbitsStar(x,Sun))", "score": 0}
{"id": "eqasc_train_4222", "prediction": "all x y.((NuclearReaction(x) & Earth(y)) -> ProvidesLight(x,y))", "score": 0}
{"id": "eqasc_train_4223", "prediction": "all x y.((Star(x) & NuclearReaction(y)) -> ProducesPhotons(x,y))", "score": 0}
{"id": "eqasc_train_4224", "prediction": "all x.(NuclearReaction(x) -> ConvertsMassToEnergy(x))", "score": 0}
{"id": "eqasc_train_4225", "prediction": "all x y.((ConvertsMassToEnergy(x) & Star(y)) -> ProducesLight(y,x))", "score": 0}
{"id": "eqasc_train_4226", "prediction": "all x.(Star(x) -> ConvertsMassToEnergy(x))", "score": 0}
{"id": "eqasc_train_4227", "prediction": "all x y.((Cell(x) & Acids(y) & Bases(y)) -> SecretesToMaintainProperPH(x,y))", "score": 0}
{"id": "eqasc_train_4228", "prediction": "all x.(EnzymeSystemsEfficient(x) -> pHDependant(x))", "score": 0}
{"id": "eqasc_train_4229", "prediction": "all x y z.((Cell(x) & Acids(y) & Bases(z)) -> SecretesAndMaintainsEnzymeSystemEfficient(x,y,z))", "score": 0}
{"id": "eqasc_train_4230", "prediction": "all x y.((Enzyme(x) & Bacteria(y)) -> BreaksDownProteins(x,y))", "score": 0}
{"id": "eqasc_train_4231", "prediction": "all x y z.((Cell(x) & Acid(y) & Protein(z)) -> SecretesToBreakDown(x,y,z))", "score": 0}
{"id": "eqasc_train_4232", "prediction": "all x.(Enzyme(x) -> (BiologicalCatalyst(x) & Biological(x)))", "score": 0}
{"id": "eqasc_train_4233", "prediction": "all x y z.((Cell(x) & Acids(y) & Bases(z)) -> SecretesToMaintainProperPH(x,y,z))", "score": 0}
{"id": "eqasc_train_4234", "prediction": "all x.(Phosphatase(x) -> (Enzyme(x) & RemovesPhosphates(x)))", "score": 0}
{"id": "eqasc_train_4235", "prediction": "all x y.((Cell(x) & Acids(y) & Bases(y)) -> SecretesToKeepProperPH(x,y))", "score": 0}
{"id": "eqasc_train_4236", "prediction": "all x.((Acid(x) | Base(x)) -> Electrolyte(x))", "score": 0}
{"id": "eqasc_train_4237", "prediction": "all x y.((Cell(x) & Electrolyte(y)) -> SecretesToMaintainProperPH(x,y))", "score": 0}
{"id": "eqasc_train_4238", "prediction": "(all x.(HumanEnzyme(x) -> OptimalPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP", "score": -1}
{"id": "eqasc_train_4239", "prediction": "all x y z.((Cell(x) & Acids(y) & Bases(z)) -> SecretesToMaintainHumanEnzymes(x,y,z))", "score": 0}
{"id": "eqasc_train_4240", "prediction": "all x.(EnzymeMechanism(x) -> (BiologicalCatalyst(x) & Enzyme(x)))", "score": 0}
{"id": "eqasc_train_4241", "prediction": "all x y z.((BiologicalCatalyst(x) & Cell(y) & Acids(z)) -> SecretesBases(y,z))", "score": 0}
{"id": "eqasc_train_4242", "prediction": "all x.(Aggression(x) -> (IntendedToCauseHarm(x) | IntendedToCausePain(x)))", "score": 0}
{"id": "eqasc_train_4243", "prediction": "all x.(AggressiveBehavior(x) -> TerritorialAggression(x))", "score": 0}
{"id": "eqasc_train_4244", "prediction": "all x.(TerritorialAggressionCausesHarm(x) -> TerritorialAggressionCausesHarm(x))", "score": 0}
{"id": "eqasc_train_4245", "prediction": "all x.(DogAggression(x) -> (IntimidatesOrHarmsAnimal(x) | IntimidatesAnimal(x)))", "score": 0}
{"id": "eqasc_train_4246", "prediction": "all x.(AggressiveDog(x) -> IntendsToCauseHarm(x))", "score": 0}
{"id": "eqasc_train_4247", "prediction": "all x.(Curse(x) -> (IntendedToCauseHarm(x) & Person(x)))", "score": 0}
{"id": "eqasc_train_4248", "prediction": "all x.(Cursed(x) -> Aggression(x))", "score": 0}
{"id": "eqasc_train_4249", "prediction": "all x.(AggressiveDog(x) -> LearnsAggressive(x))", "score": 0}
{"id": "eqasc_train_4250", "prediction": "all x.(Dog(x) -> (CanLearnBehavior(x) & (CausesHarm(x) | CausesPain(x))))", "score": 0}
{"id": "eqasc_train_4251", "prediction": "all x.(Aggression(x) -> (Aggression(x) & Violence(x)))", "score": 0}
{"id": "eqasc_train_4252", "prediction": "all x.((Behavior(x) & IntendedToCauseHarmOrPain(x)) -> Violence(x))", "score": 0}
{"id": "eqasc_train_4253", "prediction": "all x.(Abuse(x) -> (CausesIntentionalPain(x) | CausesIntentionalHarm(x)))", "score": 0}
{"id": "eqasc_train_4254", "prediction": "all x.(Aggression(x) -> (IntentionallyAbusive(x) & Behavior(x)))", "score": 0}
{"id": "eqasc_train_4255", "prediction": "all x.(Dog(x) -> (Aggressive(x) & Sturdy(x) & Willful(x)))", "score": 0}
{"id": "eqasc_train_4256", "prediction": "all x.(Dog(x) -> (CausesHarm(x) | CausesPain(x)))", "score": 0}
{"id": "eqasc_train_4257", "prediction": "all x.(Aggression(x) -> (BehaviorallyIntentional(x) & (IntimidateAnimal(x) | HarmAnimal(x))))", "score": 0}
{"id": "eqasc_train_4258", "prediction": "all x.(Aggression(x) -> HarmsOthers(x))", "score": 0}
{"id": "eqasc_train_4259", "prediction": "all x.(MakingSeason(x) -> Aggressive(x))", "score": 0}
{"id": "eqasc_train_4260", "prediction": "all x.(Male(x) -> (IntendsToCauseHarm(x) | IntendsToCausePain(x)))", "score": 0}
{"id": "eqasc_train_4261", "prediction": "all x.(AggressiveChild(x) -> GrowsIntoAggressiveAdult(x))", "score": 0}
{"id": "eqasc_train_4262", "prediction": "all x y z.((Adult(x) & Child(y) & Adult(z)) -> (IntendsToCauseHarm(z) | IntendsToCausePain(z)))", "score": 0}
{"id": "eqasc_train_4263", "prediction": "all x.((Jump(x) | Bite(x) | Growl(x)) -> Aggressive(x))", "score": 0}
{"id": "eqasc_train_4264", "prediction": "all x.(Animal(x) -> (Jumps(x) & Bites(x) & Growls(x) & CausesHarmOrPain(x)))", "score": 0}
{"id": "eqasc_train_4265", "prediction": "all x.((VerbalViolence(x) & HostileAggression(x)) -> Violence(x))", "score": 0}
{"id": "eqasc_train_4266", "prediction": "all x.((VerbalViolence(x) & (IntendedToCauseHarm(x) | IntendedToCausePain(x))) -> Behavior(x))", "score": 0}
{"id": "eqasc_train_4267", "prediction": "all x.((PainInPresent(x) & ExperiencedAsIll(x)) -> Ill(x))", "score": 0}
{"id": "eqasc_train_4268", "prediction": "all x.(Aggression(x) -> (Body(x) & IntendedToCauseIllness(x)))", "score": 0}
{"id": "eqasc_train_4269", "prediction": "all x.(Pain(x) -> ExcellentDeterrent(x))", "score": 0}
{"id": "eqasc_train_4270", "prediction": "all x.(Aggression(x) -> Deterrent(x))", "score": 0}
{"id": "eqasc_train_4271", "prediction": "all x.(Aggression(x) -> (IncludesBehaviors(x) & IntendedToHaveOthers(x)))", "score": 0}
{"id": "eqasc_train_4272", "prediction": "all x.(Aggression(x) -> (BehaviorMeaningToHailOthers(x) & MeantToHailOthers(x)))", "score": 0}
{"id": "eqasc_train_4273", "prediction": "all x.(Macaque(x) -> AgressiveBehavior(x))", "score": 0}
{"id": "eqasc_train_4274", "prediction": "all x.(Macaque(x) -> (IntentionToCauseHarm(x) | IntentionToCausePain(x)))", "score": 0}
{"id": "eqasc_train_4275", "prediction": "all x.(Endospore(x) -> (FoundInSoil(x) & FoundInWater(x)))", "score": 0}
{"id": "eqasc_train_4276", "prediction": "all x.((EndosporeFormingBacteria(x) & UniqueRestingCell(x)) -> Endospore(x))", "score": 0}
{"id": "eqasc_train_4277", "prediction": "all x.(BacterialRestingCell(x) -> (FoundInSoil(x) | FoundInWater(x)))", "score": 0}
{"id": "eqasc_train_4278", "prediction": "exists x.(Bacteria(x) & FormsResistantCells(x))", "score": 0}
{"id": "eqasc_train_4279", "prediction": "all x.((Bacteria(x) & FormsResistantCells(x)) -> (FoundInSoilAndWater(x) & CommonlyFoundInSoilAndWater(x)))", "score": 0}
{"id": "eqasc_train_4280", "prediction": "all x y.((Bacteria(x) & Bacteria(y) & Inside(x,y)) -> Endospore(x))", "score": 0}
{"id": "eqasc_train_4281", "prediction": "all x.(Bacteria(x) -> (FoundInSoil(x) | FoundInWater(x)))", "score": 0}
{"id": "eqasc_train_4282", "prediction": "exists x.(Bacteria(x) & SpecializedDormancyStructure(x) & Endospore(x))", "score": 0}
{"id": "eqasc_train_4283", "prediction": "all x.(DormantBacteria(x) -> (FoundInSoilAndWater(x) & CommonlyFoundInSoilAndWater(x)))", "score": 0}
{"id": "eqasc_train_4284", "prediction": "all x y.((Exospore(x) & Endospore(y)) -> ProducedBy(x,y))", "score": 0}
{"id": "eqasc_train_4285", "prediction": "all x.(Cyanobacteria(x) -> (FoundInSoilAndWater(x) & CommonlyFoundInSoilAndWater(x)))", "score": 0}
{"id": "eqasc_train_4286", "prediction": "all x.(Endospore(x) -> ReproductionMeaning(x))", "score": 0}
{"id": "eqasc_train_4287", "prediction": "all x.(Reproduction(x) -> (FoundInSoil(x) | FoundInWater(x)))", "score": 0}
{"id": "eqasc_train_4288", "prediction": "all x.(Endospore(x) -> RestingStateOfBacteria(x))", "score": 0}
{"id": "eqasc_train_4289", "prediction": "all x.(Bacteria(x) -> FoundInSoil(x))", "score": 0}
{"id": "eqasc_train_4290", "prediction": "all x.(Bactilus(x) -> (AncientGenusOfBacteria(x) & FormsEndospores(x)))", "score": 0}
{"id": "eqasc_train_4291", "prediction": "exists x.(Bacteria(x) & FormsGeneticMaterials(x) & InSoilAndWater(x))", "score": 0}
{"id": "eqasc_train_4292", "prediction": "all x y.((Bacteria(x) & Soil(y) & Water(y)) -> RestingState(x,y))", "score": 0}
{"id": "eqasc_train_4293", "prediction": "all x y.((Object(x) & Kicked(x)) -> ForceExertedOn(y,x))", "score": 1}
{"id": "eqasc_train_4294", "prediction": "all x.(KickedBall(x) -> (StruckByPlayerFootOrLegBelowKnee(x)))", "score": 0}
{"id": "eqasc_train_4295", "prediction": "all x.((Object(x) & StrangledByFoot(x)) -> ForceExertedOn(x,y))", "score": 0}
{"id": "eqasc_train_4296", "prediction": "all x.(Force(x) -> MeasuredInNewtons(x))", "score": 0}
{"id": "eqasc_train_4297", "prediction": "all x y.((Object(x) & Kicked(x)) -> MeasurementOfNewtons(y))", "score": 0}
{"id": "eqasc_train_4298", "prediction": "all x.((SoccerBall(x) & Kicked(x)) -> Compressed(x))", "score": 0}
{"id": "eqasc_train_4299", "prediction": "all x y.((SoccerBall(x) & Force(y)) -> Compresses(y,x))", "score": 0}
{"id": "eqasc_train_4300", "prediction": "all x.((Object(x) & AtRest(x)) -> NeedsForce(x))", "score": 0}
{"id": "eqasc_train_4301", "prediction": "all x y.((Object(x) & Kicking(x,y)) -> CausesMovement(x,y))", "score": 0}
{"id": "eqasc_train_4302", "prediction": "all x y.((Force(x) & Object(y) & ExertedOn(x,y)) -> EnergyTransfer(x,y))", "score": 0}
{"id": "eqasc_train_4303", "prediction": "all x y.((Object(x) & Kicked(x)) -> EnergyTransfer(y))", "score": 0}
{"id": "eqasc_train_4304", "prediction": "all x.(Object(x) -> (Sphere(x) | Pyramid(x) | CarTire(x) | Elaphant(x)))", "score": 0}
{"id": "eqasc_train_4305", "prediction": "all x y z.((CarTire(x) & Kicked(x) & ForceExertedOn(y) & Tire(z)) -> ForceExpired(x,z))", "score": 0}
{"id": "eqasc_train_4306", "prediction": "all x y.((Object(x) & Acceleration(y)) -> ProportionalToForce(x,y))", "score": 0}
{"id": "eqasc_train_4307", "prediction": "all x.((Object(x) & Kicked(x)) -> ExperiencesAcceleration(x))", "score": 0}
{"id": "eqasc_train_4308", "prediction": "all x.(KineticEnergy(x) -> ConvertedToForce(x))", "score": 0}
{"id": "eqasc_train_4309", "prediction": "all x y.((KineticEnergy(x) & KickedObject(y)) -> ExertedOn(x,y))", "score": 0}
{"id": "eqasc_train_4310", "prediction": "all x.((Air(x) & FreeToMove(x)) -> VeryRapidlyReactsToForces(x))", "score": 0}
{"id": "eqasc_train_4311", "prediction": "all x y.((Object(x) & Kicked(x)) -> VeryRapidlyReacts(x))", "score": 0}
{"id": "eqasc_train_4312", "prediction": "all x y.((Kicking(x) & Object(y)) -> TransfersEnergyTo(x,y))", "score": 0}
{"id": "eqasc_train_4313", "prediction": "all x y.((SoccerBall(x) & ForceExertedOn(x,y)) -> Compresses(x,y))", "score": 0}
{"id": "eqasc_train_4314", "prediction": "all x.(ControlBox(x) -> Object(x))", "score": 1}
{"id": "eqasc_train_4315", "prediction": "all x y.((ControlBox(x) & Kicked(x)) -> ForceExertedOn(y,x))", "score": 1}
{"id": "eqasc_train_4316", "prediction": "all x.(Reproduction(x) -> GivesRiseToOffspring(x))", "score": 0}
{"id": "eqasc_train_4317", "prediction": "all x.(Sex(x) -> OrganismsGiveRiseToOffspring(x))", "score": 0}
{"id": "eqasc_train_4318", "prediction": "all x.(Fetus(x) -> (LatinForOffspring(x) | LatinForYoungOne(x)))", "score": 0}
{"id": "eqasc_train_4319", "prediction": "all x.(Reproduction(x) -> GivesRiseToYoung(x))", "score": 0}
{"id": "eqasc_train_4320", "prediction": "all x y.((Darwin's TheoryOfEvolution(x) & Offspring(y)) -> DependsOnMoreThanNeedToMaintainSpecies(x,y))", "score": -1}
{"id": "eqasc_train_4321", "prediction": "all x y.((Species(x) & Reproduction(y)) -> NeededToMaintain(y,x))", "score": 0}
{"id": "eqasc_train_4322", "prediction": "all x.(Flower(x) -> ReproductiveOrgan(x))", "score": 0}
{"id": "eqasc_train_4323", "prediction": "all x y.((Plant(x) & Offspring(y) & Flowers(y)) -> ProducesWith(x,y))", "score": 0}
{"id": "eqasc_train_4324", "prediction": "all x y.((Female(x) & SixMonthGestation(x) & SingleOffspring(y)) -> GivesBirthTo(x,y))", "score": 0}
{"id": "eqasc_train_4325", "prediction": "all x y.((Organism(x) & Organism(y) & GesturesOffspring(x,y)) -> Reproduction(x))", "score": 0}
{"id": "eqasc_train_4326", "prediction": "all x.(Organism(x) -> GivesRiseToChildren(x))", "score": 0}
{"id": "eqasc_train_4327", "prediction": "all x.(Life(x) -> Reproduction(x))", "score": 0}
{"id": "eqasc_train_4328", "prediction": "all x.((Organism(x) & GivesRiseToOffspring(x)) -> LifeContinues(x))", "score": 0}
{"id": "eqasc_train_4329", "prediction": "all x y.((LowEnergyOffspring(x) & Generation(y)) -> UsedAsParent(x,y))", "score": 0}
{"id": "eqasc_train_4330", "prediction": "all x.(Reproduction(x) -> GivesRisesToNextGeneration(x))", "score": 0}
{"id": "eqasc_train_4331", "prediction": "all x.(Reproduction(x) -> (Sexual(x) & InternalFertilization(x)))", "score": 0}
{"id": "eqasc_train_4332", "prediction": "all x y.((Organism(x) & Organism(y)) -> FertilizationAllowsRiseToOffspring(x,y))", "score": 0}
{"id": "eqasc_train_4333", "prediction": "all x y z.((Plant(x) & Animal(y) & Plant(z)) -> GivesRiseToOffspring(x,y,z))", "score": 0}
{"id": "eqasc_train_4334", "prediction": "all x y.((Human(x) & Offspring(y)) -> GivesRiseTo(x,y))", "score": 0}
{"id": "eqasc_train_4335", "prediction": "all x.(Mutations(x) -> VariationsInOffspring(x))", "score": 0}
{"id": "eqasc_train_4336", "prediction": "all x.(Mutations(x) -> ReproductionProcess(x))", "score": 0}
{"id": "eqasc_train_4337", "prediction": "all x y.((AutomobileEngine(x) & ChemicalEnergy(y)) -> TransformsIntoMechanicalEnergy(x,y))", "score": 0}
{"id": "eqasc_train_4338", "prediction": "all x.(MechanicalEnergy(x) -> (MechanicalEnergy(x) & MovingObject(x)))", "score": 0}
{"id": "eqasc_train_4339", "prediction": "all x.(AutomobileEngine(x) -> TransformsChemicalEnergyToMovingObjects(x))", "score": 0}
{"id": "eqasc_train_4340", "prediction": "all x y.((Engine(x) & Piston(y)) -> ConvertsEnergyToMove(x,y))", "score": 0}
{"id": "eqasc_train_4341", "prediction": "all x y.((Energy(x) & Piston(y)) -> Moves(x,y))", "score": 0}
{"id": "eqasc_train_4342", "prediction": "all x.(Automobile(x) -> ChangesChemicalEnergyIntoMotion(x))", "score": 0}
{"id": "eqasc_train_4343", "prediction": "all x.((ClassicExemple(x) & 4.1L CadillacEngine(x)) -> ClassicExemple(x))", "score": -1}
{"id": "eqasc_train_4344", "prediction": "all x.((Camera(x) & MadeBy(x,Camera)) -> TransformsChemicalEnergyToMechanicalEnergy(x))", "score": 0}
{"id": "eqasc_train_4345", "prediction": "all x.(AutomobileEngine(x) -> TransformsChemicalEnergyIntoMovingObjects(x))", "score": 0}
{"id": "eqasc_train_4346", "prediction": "all x.(Car(x) -> (V-8Engine(x) & Functional(x)))", "score": -1}
{"id": "eqasc_train_4347", "prediction": "all x.(Car(x) -> TransformsChemicalEnergyIntoMechanicalEnergy(x))", "score": 0}
{"id": "eqasc_train_4348", "prediction": "all x.(MechanicalEnergy(x) -> (KineticEnergy(x) & PotentialEnergy(x)))", "score": 0}
{"id": "eqasc_train_4349", "prediction": "all x.(AutomobileEngine(x) -> (WorksBySummingKineticEnergy(x) & WorksBySummingPotentialEnergy(x)))", "score": 0}
{"id": "eqasc_train_4350", "prediction": "all x.(Gasoline(x) -> MixOfChemicals(x))", "score": 0}
{"id": "eqasc_train_4351", "prediction": "all x.(Automobile(x) -> UsesGasolineForEnergy(x))", "score": 0}
{"id": "eqasc_train_4352", "prediction": "all x.(ChemicalEnergy(x) -> StoredInMolecules(x))", "score": 0}
{"id": "eqasc_train_4353", "prediction": "all x y.((Automobile(x) & Molecule(y)) -> UsesEnergyStoredIn(x,y))", "score": 0}
{"id": "eqasc_train_4354", "prediction": "all x y z.((AutomobileEngine(x) & ChemicalEnergy(y) & MovingObject(z)) -> TransformsToEnergy(x,y,z))", "score": 0}
{"id": "eqasc_train_4355", "prediction": "all x.((MarineEngine(x) & VeryFewExceptions(x)) -> MarineEngine(x))", "score": 0}
{"id": "eqasc_train_4356", "prediction": "all x y.((MarineEngine(x) & ChemicalEnergy(y)) -> TransformsIntoMechanicalEnergy(x,y))", "score": 0}
{"id": "eqasc_train_4357", "prediction": "all x.(RocketEngine(x) -> ReactionEngine(x))", "score": 0}
{"id": "eqasc_train_4358", "prediction": "all x.(MechanicalEnergy(x) -> PowersRockets(x))", "score": 0}
{"id": "eqasc_train_4359", "prediction": "all x.(AutomobileEngine(x) -> MostEfficientRange(x))", "score": 0}
{"id": "eqasc_train_4360", "prediction": "all x.(Engine(x) -> (TransformsChemicalEnergyToMechanicalEnergy(x) & HasRangeWhereEfficient(x)))", "score": 0}
{"id": "eqasc_train_4361", "prediction": "all x y.((WaterVaporCondensing(x) & Cloud(y)) -> CausesRain(x,y))", "score": 0}
{"id": "eqasc_train_4362", "prediction": "all x y z.((WaterVapor(x) & Gas(y) & Liquid(z)) -> TurnsIntoRain(x,y,z))", "score": 0}
{"id": "eqasc_train_4363", "prediction": "all x.((Plant(x) & Withers(x) & DiesForLackOfRain(x)) -> LackOfRain(x))", "score": 0}
{"id": "eqasc_train_4364", "prediction": "all x.((WaterVapor(x) & -CondensesIntoClouds(x)) -> (Wither(x) & Die(x)))", "score": 0}
{"id": "eqasc_train_4365", "prediction": "all x.(Rain(x) -> LiquidPrecipitation(x))", "score": 0}
{"id": "eqasc_train_4366", "prediction": "all x y.((WaterVaporCondensing(x) & Cloud(y)) -> CausesLiquidPrecipitation(x,y))", "score": 0}
{"id": "eqasc_train_4367", "prediction": "all x.(Rain(x) -> Precipitation(x))", "score": 0}
{"id": "eqasc_train_4368", "prediction": "all x y.((WaterVaporCondensing(x) & Cloud(y)) -> CausesPrecipitation(x,y))", "score": 0}
{"id": "eqasc_train_4369", "prediction": "all x.((WaterVaporCondenses(x) & SufficientCooling(x)) -> Clouds(x))", "score": 0}
{"id": "eqasc_train_4370", "prediction": "all x y.((WaterVapor(x) & Cool(y)) -> (TurnsIntoClouds(x) & TurnsIntoRain(x)))", "score": 0}
{"id": "eqasc_train_4371", "prediction": "all x.((Raining(x) & BarometerStable(x)) -> PredictsRain(x))", "score": 0}
{"id": "eqasc_train_4372", "prediction": "all x.(WaterVapor(x) -> CanBeDetectedByBarometer(x))", "score": 0}
{"id": "eqasc_train_4373", "prediction": "all x.((HeavyRain(x) | ThunderStorm(x)) -> CausesFlashFloods(x))", "score": 0}
{"id": "eqasc_train_4374", "prediction": "all x y.((WaterVaporCondensing(x) & Cloud(y)) -> CausesFlashFloods(x,y))", "score": 0}
{"id": "eqasc_train_4375", "prediction": "all x.(WaterVapor(x) -> GasInAir(x))", "score": 0}
{"id": "eqasc_train_4376", "prediction": "all x y z.((Gas(x) & AirCondensing(y) & Cloud(z) & CondensesIn(x,y,z)) -> CausesRain(x))", "score": 0}
{"id": "eqasc_train_4377", "prediction": "all x y.((Rain(x) & Soil(y)) -> Moistens(x,y))", "score": 0}
{"id": "eqasc_train_4378", "prediction": "all x y.((WaterVaporCondensing(x) & Clouds(y)) -> CausesSoilToMoisten(x,y))", "score": 0}
{"id": "eqasc_train_4379", "prediction": "all x.(Humidity(x) -> WaterVapor(x))", "score": 0}
{"id": "eqasc_train_4380", "prediction": "all x y.((Cloud(x) & Cloud(y)) -> SimilarToHumidity(x,y))", "score": 0}
{"id": "eqasc_train_4381", "prediction": "all x y.((AnimalSpecies(x) & AnimalSpecies(y) & Harms(x,y)) -> NegativeImpactOnPopulationSize(x,y))", "score": 0}
{"id": "eqasc_train_4382", "prediction": "all x.((HabitatLoss(x) & Hunting(x)) -> DecliningPopulations(x))", "score": 0}
{"id": "eqasc_train_4383", "prediction": "all x y.((AnimalSpecies(x) & HabitatLoss(x) & Hunting(y)) -> CausesHarm(x,y))", "score": 0}
{"id": "eqasc_train_4384", "prediction": "all x.(Pollution(x) -> (HarmfulToAnimalOrPlant(x) | HarmfulToSpecies(x)))", "score": 0}
{"id": "eqasc_train_4385", "prediction": "all x.(Pollution(x) -> HarmfulToPopulationSize(x))", "score": 0}
{"id": "eqasc_train_4386", "prediction": "all x.((Plant(x) | Animal(x)) -> (ManifestsInSmallPopulationSize(x) | ManifestsInReducedPopulationSize(x)))", "score": 0}
{"id": "eqasc_train_4387", "prediction": "all x y.((Species(x) & Rare(x)) -> IncreasesHarmExponentially(x,y))", "score": 0}
{"id": "eqasc_train_4388", "prediction": "all x y.((Pesticide(x) & Species(y)) -> NegativeImpactOnPopulationSize(x,y))", "score": 0}
{"id": "eqasc_train_4389", "prediction": "exists x.(Hunting(x) & CanImpactAnimalPopulations(x))", "score": 0}
{"id": "eqasc_train_4390", "prediction": "all x y.((Hunting(x) & SpeciesPopulation(y)) -> CanHarm(x,y))", "score": 0}
{"id": "eqasc_train_4391", "prediction": "all x y.((PopulationPopulation(x) & Species(y)) -> ComposesIndividuals(x,y))", "score": 0}
{"id": "eqasc_train_4392", "prediction": "all x y.((AnimalSpecies(x) & AnimalSpecies(y) & Harms(x,y)) -> NegativeImpactOnIndividuals(x,y))", "score": 0}
{"id": "eqasc_train_4393", "prediction": "all x.(HasNegativeImpactOnPopulationSize(x) -> HarmingDogs(x))", "score": 0}
{"id": "eqasc_train_4394", "prediction": "all x.(Population(x) -> (GroupOfIndividuals(x) & SameSpecies(x)))", "score": 0}
{"id": "eqasc_train_4395", "prediction": "all x y.((AnimalSpecies(x) & AnimalSpecies(y) & Harms(x,y)) -> NegativeImpactOnSize(x,y))", "score": 0}
{"id": "eqasc_train_4396", "prediction": "exists x.(AmoebaSpecies(x) & HarmfulParasite(x))", "score": 0}
{"id": "eqasc_train_4397", "prediction": "all x.(Amoeba(x) -> NegativelyImpactsSpecies(x))", "score": 0}
{"id": "eqasc_train_4398", "prediction": "all x.(Population(x) -> SubUnitOfSpecies(x))", "score": 0}
{"id": "eqasc_train_4399", "prediction": "all x y.((AnimalSpecies(x) & AnimalSpecies(y)) -> (Harms(x,y) & NegativeImpactOnSubunits(x,y)))", "score": 0}
{"id": "eqasc_train_4400", "prediction": "all x.(PopulationSize(x) -> -BelongsToGeneticVariation(x))", "score": 0}
{"id": "eqasc_train_4401", "prediction": "all x y.((AnimalSpecies(x) & AnimalSpecies(y) & Harms(x,y)) -> -BearingOnGeneticVariation(x,y))", "score": 0}
{"id": "eqasc_train_4402", "prediction": "all x.(Species(x) -> DifferentOrganisms(x))", "score": 0}
{"id": "eqasc_train_4403", "prediction": "all x y.((Animal(x) & Animal(y) & Harms(x,y)) -> NegativeImpactOnPopulationSize(x,y))", "score": 0}
{"id": "eqasc_train_4404", "prediction": "all x y.((People(x) & HabitatDestruction(y) & Pollution(y)) -> HarmfulToWildlife(x,y))", "score": 0}
{"id": "eqasc_train_4405", "prediction": "all x y.((Pollution(x) & Species(y)) -> NegativeImpactOnPopulationSize(x,y))", "score": 0}
{"id": "eqasc_train_4406", "prediction": "all x.((Animal(x) & CosmeticTesting(x)) -> Harmed(x))", "score": 0}
{"id": "eqasc_train_4407", "prediction": "all x y.((Species(x) & CosmeticTesting(y)) -> NegativeImpactOnPopulationSize(y,x))", "score": 0}
{"id": "eqasc_train_4408", "prediction": "all x.(HotWeather(x) -> (CausesHarmfulBacteriaGrowth(x) & InFeeders(x)))", "score": 0}
{"id": "eqasc_train_4409", "prediction": "all x y.((Weather(x) & Species(y)) -> NegativeImpactOnPopulationSize(x,y))", "score": 0}
{"id": "eqasc_train_4410", "prediction": "all x.(Egg(x) -> RequiresWarmthToSurvive(x))", "score": 0}
{"id": "eqasc_train_4411", "prediction": "all x y.((Egg(x) & Egg(y)) -> (GrowsByShedding(x,y) | GrowsByShedding(x,y)))", "score": 0}
{"id": "eqasc_train_4412", "prediction": "all x y.((Embryo(x) & Shell(y) & Inside(x,y)) -> RequiresWarmthToSurvive(x))", "score": 0}
{"id": "eqasc_train_4413", "prediction": "all x.((Sunlight(x) & Warmth(x)) -> (IncubationOfEggs(x) & SuccessfulHatchOfFresh(x)))", "score": 0}
{"id": "eqasc_train_4414", "prediction": "all x y.((Incubator(x) & Egg(y)) -> HelpsSurvive(x,y))", "score": 0}
{"id": "eqasc_train_4415", "prediction": "all x.(Survival(x) -> (NaturalReaction(x) & StayingAlive(x)))", "score": 0}
{"id": "eqasc_train_4416", "prediction": "all x.(Egg(x) -> RequiresWarmthToStayAlive(x))", "score": 0}
{"id": "eqasc_train_4417", "prediction": "all x.((Egg(x) & RequiresIncubation(x)) -> Survives(x))", "score": 0}
{"id": "eqasc_train_4418", "prediction": "all x.(Egg(x) -> DependsOnBodyWarmthToIncubate(x))", "score": 0}
{"id": "eqasc_train_4419", "prediction": "all x.(Egg(x) -> NeedsIncubation(x))", "score": 0}
{"id": "eqasc_train_4420", "prediction": "all x.(Incubation(x) -> RequiresWarmth(x))", "score": 0}
{"id": "eqasc_train_4421", "prediction": "all x y z.((Frog(x) & Egg(y) & Sun(z)) -> (Lays(x,y) & WarmthFrom(x,z) & MakesEggsHave(x,y)))", "score": 0}
{"id": "eqasc_train_4422", "prediction": "all x.((Egg(x) & Survives(x)) -> Hatches(x))", "score": 0}
{"id": "eqasc_train_4423", "prediction": "(all x.(Oil(x) -> ProvidesHeating(x)) & all y.(Gasoline(y) -> ProvidesTransportation(y)))", "score": 0}
{"id": "eqasc_train_4424", "prediction": "all x.(Egg(x) -> RequiresHeatToSurvive(x))", "score": 0}
{"id": "eqasc_train_4425", "prediction": "all x y.((Sun(x) & Egg(y)) -> KeepsWarm(x,y))", "score": 0}
{"id": "eqasc_train_4426", "prediction": "all x y.((Egg(x) & FemaleSexCell(y)) -> (ProducedInOvules(x,y) & InsideOvary(x)))", "score": 0}
{"id": "eqasc_train_4427", "prediction": "all x.(FemaleSexCell(x) -> RequiresWarmthToSurvive(x))", "score": 0}
{"id": "eqasc_train_4428", "prediction": "all x.((Living(x) & Surviving(x)) -> Thing(x))", "score": 0}
{"id": "eqasc_train_4429", "prediction": "all x.(Egg(x) -> RequiresWarmthToLive(x))", "score": 0}
{"id": "eqasc_train_4430", "prediction": "all x.(Egg(x) -> IndicatesEggsInOvaries(x))", "score": 0}
{"id": "eqasc_train_4431", "prediction": "all x y.((Ovarian(x) & Ovarian(y)) -> WarmInside(x,y))", "score": 0}
{"id": "eqasc_train_4432", "prediction": "all x y.((FrogEgg(x) & SunHeat(x)) -> (HelpsSurvive(x,y) & HelpsHaveTadpole(y)))", "score": 0}
{"id": "eqasc_train_4433", "prediction": "all x.((GiftPlant(x) & Heat(x) & Warmth(x)) -> Helps(x,y))", "score": 0}
{"id": "eqasc_train_4434", "prediction": "all x.(Egg(x) -> RequiresHeatToSurvive(x))", "score": 0}
{"id": "eqasc_train_4435", "prediction": "all x y.((Egg(x) & Rattlesnake(y)) -> (Entwicking(y) & NäheredBy(y,y)))", "score": 0}
{"id": "eqasc_train_4436", "prediction": "all x.((Rainforest(x) & DevelopsRainforest(x)) -> RequiresWarmthToSurvive(x))", "score": 0}
{"id": "eqasc_train_4437", "prediction": "all x.((EggLayingMammal(x) & Monotreme(x)) -> Laying(x))", "score": 0}
{"id": "eqasc_train_4438", "prediction": "all x.(Monotreme(x) -> RequiresWarmthForIncubation(x))", "score": 0}
{"id": "eqasc_train_4439", "prediction": "all x.(Human(x) -> (ComesFromEggs(x) & -ComesFromShells(x) & Ovum(x)))", "score": 0}
{"id": "eqasc_train_4440", "prediction": "exists x.(Ovum(x) & RequiresWarmth(x))", "score": 0}
{"id": "eqasc_train_4441", "prediction": "exists x.(Flower(x) & Fruit(x))", "score": 3}
{"id": "eqasc_train_4442", "prediction": "all x.(Fruit(x) -> AdaptationForSeedDispersal(x))", "score": 1}
{"id": "eqasc_train_4443", "prediction": "exists x.(Flower(x) & AdaptationForSeedDispersal(x))", "score": 1}
{"id": "eqasc_train_4444", "prediction": "all x.((Fruit(x) | Flower(x) | Leave(x)) -> Edible(x))", "score": 1}
{"id": "eqasc_train_4445", "prediction": "all x y.((Flower(x) & Leave(y)) -> (Edible(x) & Edible(y)))", "score": 1}
{"id": "eqasc_train_4446", "prediction": "all x.(AppleTree(x) -> ProducesAppleFruit(x))", "score": 0}
{"id": "eqasc_train_4447", "prediction": "exists x.(Flower(x) & Apple(x))", "score": 0}
{"id": "eqasc_train_4448", "prediction": "all x.((FruitEatingBat(x) & FindsFoodBySmell(x,ripeningFruit)) -> Eats(x,ripeningFruit))", "score": 0}
{"id": "eqasc_train_4449", "prediction": "exists x.(Flower(x) & Bat(x))", "score": 0}
{"id": "eqasc_train_4450", "prediction": "all x y.((CucumberFruit(x) & Insect(y) & CarriesPollenToFemaleFlower(y)) -> Produced(x,y))", "score": 0}
{"id": "eqasc_train_4451", "prediction": "all x y.((CucumberFlower(x) & Insect(y)) -> PollinatedBy(x,y))", "score": 0}
{"id": "eqasc_train_4452", "prediction": "all x.(Fern(x) -> (-HasFlowers(x) & -HasFruits(x) & -HasSeeds(x)))", "score": 0}
{"id": "eqasc_train_4453", "prediction": "exists x.(Plant(x) & -HasFlowers(x))", "score": 0}
{"id": "eqasc_train_4454", "prediction": "all x.(Fruit(x) -> Edible(x))", "score": 1}
{"id": "eqasc_train_4455", "prediction": "exists x.(Flower(x) & Edible(x))", "score": 1}
{"id": "eqasc_train_4456", "prediction": "all x.(Fruit(x) -> (Fruit(x) & FruitJuice(x) & ProvidesVitaminC(x) & ProvidesPotassium(x)))", "score": 1}
{"id": "eqasc_train_4457", "prediction": "exists x.(Flower(x) & ProvidesVitaminC(x))", "score": 1}
{"id": "eqasc_train_4458", "prediction": "all x.(Insect(x) -> (LivesInLargeColony(x) & ComplexSocialBehaviors(x)))", "score": 0}
{"id": "eqasc_train_4459", "prediction": "all x.(HoneyBee(x) -> (PerennialInsect(x) & HasColonies(x,y) & SurvivesMoreThanOneYear(x)))", "score": 0}
{"id": "eqasc_train_4460", "prediction": "all x y.((Insect(x) & InteractionsLaterThanOneYear(x,y)) -> ComplexSocialBehaviors(x))", "score": 0}
{"id": "eqasc_train_4461", "prediction": "all x.(Ant(x) -> SocialInsect(x))", "score": 0}
{"id": "eqasc_train_4462", "prediction": "all x.(Ant(x) -> (LivesInLargeColony(x) & ComplexSocialBehaviors(x)))", "score": 0}
{"id": "eqasc_train_4463", "prediction": "all x.(Ant(x) -> (SocialInsect(x) & LivesInColony(x)))", "score": 0}
{"id": "eqasc_train_4464", "prediction": "all x.(Ant(x) -> ComplexSocialBehavior(x))", "score": 0}
{"id": "eqasc_train_4465", "prediction": "all x.((Ant(x) | Butterfly(x)) -> Insect(x))", "score": 0}
{"id": "eqasc_train_4466", "prediction": "all x.(Ant(x) -> (LivesInLargeColony(x) & LargeColony(x)))", "score": 0}
{"id": "eqasc_train_4467", "prediction": "exists x.(Beetle(x) & CoexistInInsectColonies(x))", "score": 0}
{"id": "eqasc_train_4468", "prediction": "exists x.(Beetle(x) & ComplexSocialBehaviors(x))", "score": 0}
{"id": "eqasc_train_4469", "prediction": "all x.(Ant(x) -> ComplexSocialBehaviors(x))", "score": 0}
{"id": "eqasc_train_4470", "prediction": "all x.(Insect(x) -> HasSixLegs(x))", "score": 0}
{"id": "eqasc_train_4471", "prediction": "all x.((Creature(x) & SixLegs(x)) -> MayLiveInLargeColony(x))", "score": 0}
{"id": "eqasc_train_4472", "prediction": "all x.(Insect(x) -> HasWings(x))", "score": 0}
{"id": "eqasc_train_4473", "prediction": "all x.((Arthropod(x) & HasWings(x)) -> (LivesInLargeColony(x) & ComplexSocialBehaviors(x)))", "score": 0}
{"id": "eqasc_train_4474", "prediction": "all x.(Ant(x) -> (SocialInsect(x) & LivesInColony(x)))", "score": 0}
{"id": "eqasc_train_4475", "prediction": "all x.(Ant(x) -> ComplexBehaviors(x))", "score": 0}
{"id": "eqasc_train_4476", "prediction": "all x.(Insect(x) -> ArthropodSubdivision(x))", "score": 0}
{"id": "eqasc_train_4477", "prediction": "all x.(Arthropod(x) -> (LivesInLargeColony(x) & ComplexSocialBehaviors(x)))", "score": 0}
{"id": "eqasc_train_4478", "prediction": "all x.(HoneyBee(x) -> (Insect(x) & LivesInHive(x) & MakesHoney(x)))", "score": 0}
{"id": "eqasc_train_4479", "prediction": "all x.(Bee(x) -> (LivesInLargeColony(x) & ComplexSocialBehaviors(x)))", "score": 0}
{"id": "eqasc_train_4480", "prediction": "all x.(FireAnt(x) -> SocialInsect(x))", "score": 0}
{"id": "eqasc_train_4481", "prediction": "all x y.((FireAnt(x) & LargeColony(y)) -> MayLiveIn(x,y))", "score": 0}
{"id": "eqasc_train_4482", "prediction": "all x.(InsectColony(x) -> (Family(x) & CloseRelative(x)))", "score": 0}
{"id": "eqasc_train_4483", "prediction": "all x.(Insect(x) -> (HasMoreSocialBehaviors(x) & AllFamilyMembersCloseRelatives(x)))", "score": 0}
{"id": "eqasc_train_4484", "prediction": "all x.((Bee(x) | Insect(x)) -> Agent(x))", "score": 0}
{"id": "eqasc_train_4485", "prediction": "all x.(Bee(x) -> (LivesInLargeColony(x) & ComplexSocialBehaviors(x)))", "score": 0}
{"id": "eqasc_train_4486", "prediction": "all x.(Termite(x) -> SocialInsect(x))", "score": 0}
{"id": "eqasc_train_4487", "prediction": "all x.(Termite(x) -> Social(x))", "score": 0}
{"id": "eqasc_train_4488", "prediction": "all x.(SocialBehavior(x) -> SocialRelationships(x))", "score": 0}
{"id": "eqasc_train_4489", "prediction": "all x.(Insect(x) -> (LivesInLargeColony(x) & ComplexSocialRelationships(x)))", "score": 0}
{"id": "eqasc_train_4490", "prediction": "all x y.((Soil(x) & Decomposition(y)) -> IncreasesNutrients(y,x))", "score": 0}
{"id": "eqasc_train_4491", "prediction": "all x.(Soil(x) -> (ProvidesNutrients(x) & ProvidesMoisture(x) & FundamentalToLife(x)))", "score": 0}
{"id": "eqasc_train_4492", "prediction": "all x.(Decomposition(x) -> (IncreasesPlantGrowth(x) & FundamentalToLife(x)))", "score": 0}
{"id": "eqasc_train_4493", "prediction": "all x.(Moisture(x) -> NeededForBacteriaDecomposition(x))", "score": 0}
{"id": "eqasc_train_4494", "prediction": "all x y.((Bacteria(x) & Soil(y)) -> IncreasesNutrients(x,y))", "score": 0}
{"id": "eqasc_train_4495", "prediction": "all x.(Loam(x) -> BestSoilType(x))", "score": 0}
{"id": "eqasc_train_4496", "prediction": "all x y.((Decomposition(x) & Loam(y)) -> IncreasesNutrients(x,y))", "score": 0}
{"id": "eqasc_train_4497", "prediction": "all x.(OrganicMatter(x) -> (PlantResidue(x) & AnimalResidue(x) & InSoil(x) & AtVariousStagesOfDecomposition(x)))", "score": 0}
{"id": "eqasc_train_4498", "prediction": "all x y.((PlantResidue(x) & AnimalResidue(y)) -> IncreasesNutrientsInSoil(x,y))", "score": 0}
{"id": "eqasc_train_4499", "prediction": "all x.(SoilOrganism(x) -> (ResponsibleForDecomposition(x) & ResponsibleForNutrientCycling(x)))", "score": 0}
{"id": "eqasc_train_4500", "prediction": "all x.(Organism(x) -> IncreasesNutrientsInSoil(x))", "score": 0}
{"id": "eqasc_train_4501", "prediction": "all x.(Plant(x) -> (GrowsInNutrientRichSoil(x) & AbsorbsNutrients(x)))", "score": 0}
{"id": "eqasc_train_4502", "prediction": "all x y.((Decomposition(x) & Plant(y)) -> HelpsGrow(x,y))", "score": 0}
{"id": "eqasc_train_4503", "prediction": "all x.((Bacteria(x) | Fungi(x)) -> Decomposition(x))", "score": 0}
{"id": "eqasc_train_4504", "prediction": "all x y.((Fungus(x) & Soil(y)) -> IncreasesNutrients(x,y))", "score": 0}
{"id": "eqasc_train_4505", "prediction": "all x.(SoilNutrient(x) -> Cations(x))", "score": 0}
{"id": "eqasc_train_4506", "prediction": "all x y.((Decomposition(x) & Soil(y)) -> IncreasesAmountOfCations(x,y))", "score": 0}
{"id": "eqasc_train_4507", "prediction": "all x.(ConservingResources(x) -> PositiveImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_4508", "prediction": "all x.(RecycledProduct(x) -> ConservesResources(x))", "score": 0}
{"id": "eqasc_train_4509", "prediction": "all x.(RecycledProduct(x) -> PositiveImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_4510", "prediction": "all x.(UseOfResources(x) -> (AffectsEnvironment(x) & Pollution(x)))", "score": 0}
{"id": "eqasc_train_4511", "prediction": "all x y.((ConservingResources(x) & Resource(y)) -> LowersPollution(x,y))", "score": 0}
{"id": "eqasc_train_4512", "prediction": "all x.(Recycling(x) -> ConservesNaturalResources(x))", "score": 0}
{"id": "eqasc_train_4513", "prediction": "all x.(Recycling(x) -> PositiveImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_4514", "prediction": "all x.(Recycling(x) -> (SaversEnergy(x) & ConservesNaturalResources(x) & HelpsProtectEnvironment(x)))", "score": 0}
{"id": "eqasc_train_4515", "prediction": "all x.(Recycling(x) -> PositiveImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_4516", "prediction": "all x.(Human(x) -> (MeetsNeedsAndWants(x) & UsesResourcesInNaturalEnvironment(x)))", "score": 0}
{"id": "eqasc_train_4517", "prediction": "all x.(Human(x) -> NegativeImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_4518", "prediction": "all x.((CreatingWoodFreePaper(x) & -CuttingDownTrees(x)) -> -RequiresChoppingDownTrees(x))", "score": 0}
{"id": "eqasc_train_4519", "prediction": "all x y.((Player(x) & Lumberjack(y)) -> CutsDownTrees(x,y))", "score": 0}
{"id": "eqasc_train_4520", "prediction": "all x.((CreatingWoodFreePaper(x) & -RequiresLumberjacks(x)) -> -RequiresLumberjacks(x))", "score": 0}
{"id": "eqasc_train_4521", "prediction": "all x.(PaperMedia(x) -> PrintsOnPaper(x))", "score": 0}
{"id": "eqasc_train_4522", "prediction": "all x y.((PrintedMedia(x) & Tree(y)) -> RequiresCuttingDown(x,y))", "score": 0}
{"id": "eqasc_train_4523", "prediction": "all x.(Deforestation(x) -> (CropsDownForests(x) | BurnsTrees(x)))", "score": 0}
{"id": "eqasc_train_4524", "prediction": "all x.((CreatingWoodFreePaper(x) & -RequiresDeforestation(x)) -> -RequiresDeforestation(x))", "score": 0}
{"id": "eqasc_train_4525", "prediction": "all x.(HempPaper(x) -> SuperiorToWoodPaper(x))", "score": 0}
{"id": "eqasc_train_4526", "prediction": "all x.(HempPaper(x) -> -RequiresCuttingDownTrees(x))", "score": 0}
{"id": "eqasc_train_4527", "prediction": "all x.((CreatingWoodFreePaper(x) & -CuttingDownOaks(x)) -> -RequiresCuttingDownOaks(x))", "score": 0}
{"id": "eqasc_train_4528", "prediction": "all x.((CreatingWoodFreePaper(x) & -RequiresDeforestation(x)) -> -RequiresDeforestation(x))", "score": 0}
{"id": "eqasc_train_4529", "prediction": "all x y.((Rainforest(x) & Tree(y)) -> (DestroyedByLogging(x) & CutDown(y)))", "score": 0}
{"id": "eqasc_train_4530", "prediction": "all x y.((LoggingDownTrees(x) & Rainforest(y)) -> Disrupts(x,y))", "score": 0}
{"id": "eqasc_train_4531", "prediction": "all x y.((NonWoodFibre(x) & Paper(y)) -> PulpedFor(x,y))", "score": 0}
{"id": "eqasc_train_4532", "prediction": "all x y.((PulpingFibres(x) & Paper(y)) -> -RequiresCuttingDownTrees(x,y))", "score": 0}
{"id": "eqasc_train_4533", "prediction": "all x.((FreesheetPaper(x) & -Coated(x)) -> FreeOfMechanicalWoodPulp(x))", "score": 0}
{"id": "eqasc_train_4534", "prediction": "all x.((FreesheetPaper(x) & -Coated(x)) -> -RequiresCuttingDownTrees(x))", "score": 0}
{"id": "eqasc_train_4535", "prediction": "all x.((Tree(x) & CutDown(x)) -> DisagreesLife(x))", "score": 0}
{"id": "eqasc_train_4536", "prediction": "all x.((CreateWoodFreePaper(x) & -DestroyWoodFreePaper(x)) -> -DestroyWoodFreePaper(x))", "score": 0}
{"id": "eqasc_train_4537", "prediction": "all x.(Immunity(x) -> ImmunizationResults(x))", "score": 0}
{"id": "eqasc_train_4538", "prediction": "all x.(Result(x) -> (Damaging(x) | Desastrous(x)))", "score": 0}
{"id": "eqasc_train_4539", "prediction": "all x.(LackOfImmunization(x) -> (Damaging(x) | Desastrous(x)))", "score": 0}
{"id": "eqasc_train_4540", "prediction": "all x.((ImmuneCell(x) & OxygenDeprivation(x)) -> CausesImmuneStability(x))", "score": 0}
{"id": "eqasc_train_4541", "prediction": "all x y.((Cell(x) & OxygenDeprivation(y)) -> Weakness(x,y))", "score": 0}
{"id": "eqasc_train_4542", "prediction": "all x.(Vaccination(x) -> Effective(x))", "score": 0}
{"id": "eqasc_train_4543", "prediction": "all x y.((Organism(x) & Disease(y) & -SusceptibleTo(x,y)) -> CanResultFromVaccines(x))", "score": 0}
{"id": "eqasc_train_4544", "prediction": "all x.(Immunization(x) -> AllShotsRequired(x))", "score": 0}
{"id": "eqasc_train_4545", "prediction": "all x.(ResistanceToDisease(x) -> GetsShots(x))", "score": 0}
{"id": "eqasc_train_4546", "prediction": "all x.(Results(x) -> UnderlinesBenefitsOfVaccinationPolicy(x))", "score": 0}
{"id": "eqasc_train_4547", "prediction": "all x.(VaccinationPolicy(x) -> BenefitsToImmunity(x))", "score": 0}
{"id": "eqasc_train_4548", "prediction": "all x.((SeriousSideEffects(x) & Vaccination(x)) -> ExtremelyRare(x))", "score": 0}
{"id": "eqasc_train_4549", "prediction": "all x.(Vaccination(x) -> (LeadsToImmunity(x) & RarelyWithSeriousSideEffects(x)))", "score": 0}
{"id": "eqasc_train_4550", "prediction": "all x.(Effect(x) -> (ResultOrOutcomeOfCause(x)))", "score": 0}
{"id": "eqasc_train_4551", "prediction": "all x.(Immunization(x) -> CausesImmunity(x))", "score": 0}
{"id": "eqasc_train_4552", "prediction": "all x.(Cell(x) -> (MicroscopicalBuildingBlock(x) & Organism(x)))", "score": 0}
{"id": "eqasc_train_4553", "prediction": "all x.(LivingBeing(x) -> Organism(x))", "score": 0}
{"id": "eqasc_train_4554", "prediction": "all x.(Cell(x) -> (MicroscopicBuildingBlock(x) & LivingBeing(x)))", "score": 0}
{"id": "eqasc_train_4555", "prediction": "all x.(CoralReef(x) -> (LimestoneFormation(x) & ComposedOfTinySeaOrganismsAndRemains(x)))", "score": 0}
{"id": "eqasc_train_4556", "prediction": "all x.((Cell(x) & MicroscopicBuildingBlocks(x) & CoralReef(x)) -> Cells(x))", "score": 0}
{"id": "eqasc_train_4557", "prediction": "all x.(Cell(x) -> (Small(x) & CanBeSeenUnderMicroscope(x)))", "score": 0}
{"id": "eqasc_train_4558", "prediction": "all x.(Cell(x) -> (Small(x) & BuildingBlock(x)))", "score": 0}
{"id": "eqasc_train_4559", "prediction": "all x.(Life(x) -> LivingOrganism(x))", "score": 0}
{"id": "eqasc_train_4560", "prediction": "all x.(Cell(x) -> (MicroscopicBuildingBlocksOfLife(x) & BuildsLife(x)))", "score": 0}
{"id": "eqasc_train_4561", "prediction": "all x.(Organism(x) -> (Produces(x,Organism) | Produces(x,Organism)))", "score": 0}
{"id": "eqasc_train_4562", "prediction": "all x.(Cell(x) -> (MicroscopicBuildingBlock(x) & Human(x)))", "score": 0}
{"id": "eqasc_train_4563", "prediction": "all x.(Protein(x) -> BuildingBlock(x))", "score": 0}
{"id": "eqasc_train_4564", "prediction": "all x y.((Protein(x) & Organism(y)) -> BuildingBlock(x,y))", "score": 0}
{"id": "eqasc_train_4565", "prediction": "all x.(Cell(x) -> (MicroscopicBuildingBlocks(x) & LivingBeings(x)))", "score": 0}
{"id": "eqasc_train_4566", "prediction": "all x y.((Brick(x) & Atom(y)) -> BuildingBlock(x,y))", "score": 0}
{"id": "eqasc_train_4567", "prediction": "all x.(Cell(x) -> (MicroscopicBuildingBricks(x) & Organism(x)))", "score": 0}
{"id": "eqasc_train_4568", "prediction": "all x.(OrganicMolecule(x) -> (BasicBuildingBlocks(x) & LivingOrganisms(x)))", "score": 0}
{"id": "eqasc_train_4569", "prediction": "all x y.((Cell(x) & Organism(y)) -> (MicroscopePart(x,y) & OrganicMolecule(x,y)))", "score": 0}
{"id": "eqasc_train_4570", "prediction": "all x.(Cell(x) -> (MicroscopicalBuildingBlock(x) & Fish(x)))", "score": 0}
{"id": "eqasc_train_4571", "prediction": "all x.(Plant(x) -> ComplexOrganism(x))", "score": 0}
{"id": "eqasc_train_4572", "prediction": "all x.(Cell(x) -> (MicroscopicalBuildingBlock(x) & Plant(x)))", "score": 0}
{"id": "eqasc_train_4573", "prediction": "all x.(Cell(x) -> (MicroscopicBlock(x) & BuldingBlock(x) & PlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_train_4574", "prediction": "all x.(Molecule(x) -> BuildingBlock(x))", "score": 0}
{"id": "eqasc_train_4575", "prediction": "all x y.((Molecule(x) & Cell(y)) -> Builds(x,y))", "score": 0}
{"id": "eqasc_train_4576", "prediction": "all x.(Life(x) -> (ReliesOnNarrowRangeOfPH(x) | ReliesOnAcidity(x)))", "score": 0}
{"id": "eqasc_train_4577", "prediction": "all x.(Organism(x) -> HasLifeSpan(x))", "score": 0}
{"id": "eqasc_train_4578", "prediction": "all x.(Organism(x) -> ReliesOnRelativelyNarrowRangeOfAcidity(x))", "score": 0}
{"id": "eqasc_train_4579", "prediction": "all x.(Organism(x) -> HasLifeCycle(x))", "score": 0}
{"id": "eqasc_train_4580", "prediction": "all x.(Organism(x) -> ReliesOnRelativeNarrowRangeOfAcidity(x))", "score": 0}
{"id": "eqasc_train_4581", "prediction": "all x y.((BiochemicalReaction(x) & Enzyme(y) & VeryNarrowRangesOfOptimalPHValues(y)) -> CatalyzedBy(x,y))", "score": 0}
{"id": "eqasc_train_4582", "prediction": "all x.(Life(x) -> ReliesOnRelativelyNarrowEnvironment(x))", "score": 0}
{"id": "eqasc_train_4583", "prediction": "all x.(Organism(x) -> ReliesOnRelativelyNarrowRangeOfAcidity(x))", "score": 0}
{"id": "eqasc_train_4584", "prediction": "all x.((Acid(x) | Base(x)) -> PartOfEverydayLife(x))", "score": 0}
{"id": "eqasc_train_4585", "prediction": "all x.(Base(x) -> ReliedOnForLife(x))", "score": 0}
{"id": "eqasc_train_4586", "prediction": "all x.((PhPhP) & (Higher(x) | Lower(x))) -> EndangeredAquaticLife(x))", "score": -1}
{"id": "eqasc_train_4587", "prediction": "all x.((AquaticLife(x) & (HigherAcidity(x) | LowerAcidity(x))) -> Endangered(x))", "score": 0}
{"id": "eqasc_train_4588", "prediction": "all x.(HumanLife(x) -> DependentLife(x))", "score": 0}
{"id": "eqasc_train_4589", "prediction": "all x.(Human(x) -> ReliesOnRelativelyNarrowRangeOfAcidity(x))", "score": 0}
{"id": "eqasc_train_4590", "prediction": "all x.(Acid(x) -> LowPH(x))", "score": 0}
{"id": "eqasc_train_4591", "prediction": "all x.(Life(x) -> ReliesOnRelativelyNarrowRangeOfLowPHs(x))", "score": 0}
{"id": "eqasc_train_4592", "prediction": "all x.(PrecambrianLife(x) -> (RestrictedToBacteria(x) & RestrictedToAlgae(x)))", "score": 0}
{"id": "eqasc_train_4593", "prediction": "all x.(Bacteria(x) -> ReliesOnRelativelyNarrowRangeOfPH(x))", "score": 0}
{"id": "eqasc_train_4594", "prediction": "all x.(Acidity(x) -> (MeasuredWith(x,PhP) | MeasuredWith(x,PhPhPhPhStrips)))", "score": 0}
{"id": "eqasc_train_4595", "prediction": "all x.(Life(x) -> ReliesOnRelativelyNarrowRangeOfSomething(x))", "score": 0}
{"id": "eqasc_train_4596", "prediction": "all x.(PlantLife(x) -> Increased(x))", "score": 0}
{"id": "eqasc_train_4597", "prediction": "all x.((Plant(x) & NarrowPHRange(x)) -> ReliesOn(x,y))", "score": 0}
{"id": "eqasc_train_4598", "prediction": "all x y.((Soil(x) & Rock(y)) -> FormedByEroding(x,y))", "score": 0}
{"id": "eqasc_train_4599", "prediction": "all x y.((River(x) & Rock(y)) -> Erodes(x,y))", "score": 0}
{"id": "eqasc_train_4600", "prediction": "all x.(Soil(x) -> FormedByRivers(x))", "score": 0}
{"id": "eqasc_train_4601", "prediction": "all x y z.((Water(x) & Rock(y) & Soil(z)) -> CanMakeFrom(x,y,z))", "score": 0}
{"id": "eqasc_train_4602", "prediction": "all x y z.((River(x) & Rock(y) & Soil(z)) -> TurnsInto(x,y,z))", "score": 0}
{"id": "eqasc_train_4603", "prediction": "all x.(River(x) -> AidsInSoilFormation(x))", "score": 0}
{"id": "eqasc_train_4604", "prediction": "all x.((Rock(x) & Sandstone(x) & Shale(x)) -> Rock(x))", "score": 0}
{"id": "eqasc_train_4605", "prediction": "all x.((SandstoneEroding(x) & FormsSoil(x)) -> SandstoneEroding(x))", "score": 0}
{"id": "eqasc_train_4606", "prediction": "all x.(Rock(x) -> ErosionInNature(x))", "score": 0}
{"id": "eqasc_train_4607", "prediction": "all x.(Soil(x) -> FormedByBreakdownOfRock(x))", "score": 0}
{"id": "eqasc_train_4608", "prediction": "all x.((Rock(x) & Eroding(x)) -> Breakdown(x))", "score": 0}
{"id": "eqasc_train_4609", "prediction": "all x y.((Soil(x) & River(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_train_4610", "prediction": "all x.(Soil(x) -> (FormedByRiver(x) & FlowsOverRocks(x)))", "score": 0}
{"id": "eqasc_train_4611", "prediction": "all x.(EndocrineHormone(x) -> TravelsThroughoutBodyInBlood(x))", "score": 0}
{"id": "eqasc_train_4612", "prediction": "all x y.((Hormone(x) & Body(y)) -> PumpedInto(x,y))", "score": 0}
{"id": "eqasc_train_4613", "prediction": "all x y.((Adrenaline(x) & Body(y)) -> TravelsInBlood(x,y))", "score": 0}
{"id": "eqasc_train_4614", "prediction": "all x.(Puperty(x) -> (LeadsToHydrogeneticChanges(x) & LeadsToSexualChanges(x)))", "score": 0}
{"id": "eqasc_train_4615", "prediction": "all x y.((Puperty(x) & SexualChange(y)) -> (LeadsTo(x,y) & TravelsThroughoutBody(x) & InBlood(x)))", "score": 0}
{"id": "eqasc_train_4616", "prediction": "all x.(Hormone(x) -> (ChemicalMessager(x) & EndocrineSystem(x)))", "score": 0}
{"id": "eqasc_train_4617", "prediction": "all x y.((ChemicalMessager(x) & Body(y)) -> TravelsInBlood(x,y))", "score": 0}
{"id": "eqasc_train_4618", "prediction": "all x.(EndocrineGlands(x) -> SecretesIntoBlood(x))", "score": 0}
{"id": "eqasc_train_4619", "prediction": "all x.(EndocrineGlands(x) -> SecretesIntoBloodstream(x))", "score": 0}
{"id": "eqasc_train_4620", "prediction": "all x.(DeficienciesInEndocrineSystem(x) -> SourceOfImpotence(x))", "score": 0}
{"id": "eqasc_train_4621", "prediction": "all x.(LackOfHormonesInBlood(x) -> CausesImpotence(x))", "score": 0}
{"id": "eqasc_train_4622", "prediction": "all x y.((Hormone(x) & EndocrineSystem(y)) -> (ProducedBy(x,y) & ChemicalMessenger(x) & TargetsOrgans(x)))", "score": 0}
{"id": "eqasc_train_4623", "prediction": "all x y.((Breathing(x) & HormoneFlow(y)) -> AffectsThroughEndocrineSystem(x,y))", "score": 0}
{"id": "eqasc_train_4624", "prediction": "all x y.((Breathing(x) & Hormone(y)) -> AllowsTravel(x,y))", "score": 0}
{"id": "eqasc_train_4625", "prediction": "all x y.((Glands(x) & Hormone(y)) -> Secretes(x,y))", "score": 0}
{"id": "eqasc_train_4626", "prediction": "all x.((BodyFunction(x) & ControlledByHormones(x)) -> ReleasedFromEndocrineGlands(x))", "score": 0}
{"id": "eqasc_train_4627", "prediction": "all x y.((BodyFunction(x) & Hormone(y)) -> (ControlledBy(x,y) & TravelsThroughBlood(y)))", "score": 0}
{"id": "eqasc_train_4628", "prediction": "all x.(EndocrineCell(x) -> SecretesHormones(x))", "score": 0}
{"id": "eqasc_train_4629", "prediction": "all x y.((Cell(x) & SecretesHormones(x)) -> TravelsThroughoutBodyInBlood(x,y))", "score": 0}
{"id": "eqasc_train_4630", "prediction": "all x.(Tourist(x) -> exists y.(Place(y) & Travel(x,y)))", "score": 0}
{"id": "eqasc_train_4631", "prediction": "all x y.((EndocrineHormone(x) & Body(y)) -> MovesThroughBlood(x,y))", "score": 0}
{"id": "eqasc_train_4632", "prediction": "(all x.(Blood(x) -> RunsAlikeWater(x)))", "score": 0}
{"id": "eqasc_train_4633", "prediction": "all x.(EndocrineHormone(x) -> (TravelsIn(x,Water) & RunsIn(x,Water)))", "score": 0}
{"id": "eqasc_train_4634", "prediction": "all x.((Gene(x) & LocatedOnSameChromosome(x)) -> LinkedGene(x))", "score": 0}
{"id": "eqasc_train_4635", "prediction": "all x.(Gene(x) & Chromosome(x)) -> exists inPair(x))", "score": -1}
{"id": "eqasc_train_4636", "prediction": "all x y.((Gene(x) & Gene(y) & Pair(y)) -> Linked(x,y))", "score": 0}
{"id": "eqasc_train_4637", "prediction": "all x y.((Gene(x) & Gene(y)) -> (LinkedTo(x,y) & FormsChromosomes(x)))", "score": 0}
{"id": "eqasc_train_4638", "prediction": "all x y.((Gene(x) & Gene(y)) -> LinksToFormChain(x,y))", "score": 0}
{"id": "eqasc_train_4639", "prediction": "all x.((Chromosome(x) | ChromosomeLink(x)) -> Wonderful(x))", "score": 0}
{"id": "eqasc_train_4640", "prediction": "all x.(Gene(x) -> CanBeLocatedOn(x,wonderful))", "score": 0}
{"id": "eqasc_train_4641", "prediction": "all x.(LinkedGene(x) -> inheritedTogether(x))", "score": 0}
{"id": "eqasc_train_4642", "prediction": "all x.((Gene(x) & SameChromosome(x)) -> inheritedTogether(x))", "score": 0}
{"id": "eqasc_train_4643", "prediction": "all x.(Chromosome(x) -> LinearDNAMolecule(x))", "score": 0}
{"id": "eqasc_train_4644", "prediction": "all x.((Gene(x) & LocatedOnSameDNAMolecule(x)) -> LinkedGene(x))", "score": 0}
{"id": "eqasc_train_4645", "prediction": "all x.((Gene(x) & LocationOnSameChromosome(x)) -> InheritedTogether(x))", "score": 0}
{"id": "eqasc_train_4646", "prediction": "all x.(Gene(x) -> BasicUnitOfHeriditaryInformation(x))", "score": 0}
{"id": "eqasc_train_4647", "prediction": "all x.(Chromosome(x) -> ContainsBasicUnitsOfHeriditaryInformation(x))", "score": 0}
{"id": "eqasc_train_4648", "prediction": "all x y.((Gene(x) & Chromosome(y) & LocatedOn(x,y)) -> ChainedTogether(x,y))", "score": 0}
{"id": "eqasc_train_4649", "prediction": "all x.((Epilepsy(x) | SplayLeg(x)) -> LinksWithViennaWhiteGene(x))", "score": 0}
{"id": "eqasc_train_4650", "prediction": "all x.((Epilepsy(x) & SplayLeg(x)) -> SameChromosome(x))", "score": 0}
{"id": "eqasc_train_4651", "prediction": "all x.(Chromosome(x) -> (Molecular(x) & DNAComplexed(x) & Proteins(x)))", "score": 0}
{"id": "eqasc_train_4652", "prediction": "all x.((Gene(x) & LocatedOnSameMoleculesOfDNAComplexedWithProteins(x)) -> LinkedGene(x))", "score": 0}
{"id": "eqasc_train_4653", "prediction": "all x.((Gene(x) & LocationOnSameChromosome(x)) -> Inherite(x))", "score": 0}
{"id": "eqasc_train_4654", "prediction": "all x y z.((Energy(x) & FoodChainOrWeb(y) & (LowerThrombosis(z) | HigherThrombosis(z))) -> PassedUp(x,y,z))", "score": 0}
{"id": "eqasc_train_4655", "prediction": "all x y.((OrganicCompound(x) & Herbivore(y) & Carnivore(y)) -> (PassedThroughFoodChain(x,y) & PassedThroughFoodChain(x,y)))", "score": 0}
{"id": "eqasc_train_4656", "prediction": "all x y.((Carbon(x) & OrganicCompound(y)) -> (PassedThroughFoodWeb(x,y) & FromHerbivoresToCarnivores(x)))", "score": 0}
{"id": "eqasc_train_4657", "prediction": "all x.(Calories(x) -> UnitOfEnergy(x))", "score": 0}
{"id": "eqasc_train_4658", "prediction": "all x y z.((Calories(x) & FoodChainOrWeb(y) & (LowerThrombosis(z) | HigherThrombosis(z))) -> PassedUp(x,y,z))", "score": 0}
{"id": "eqasc_train_4659", "prediction": "all x.((Animal(x) & Consumer(x)) -> HigherTropicalLevel(x))", "score": 0}
{"id": "eqasc_train_4660", "prediction": "all x y z.((Energy(x) & FoodChainOrWeb(y) & Producer(z) & Consumer(z)) -> PassedUp(x,y,z))", "score": 0}
{"id": "eqasc_train_4661", "prediction": "all x.(Plant(x) -> FirstTropicalLevel(x))", "score": 0}
{"id": "eqasc_train_4662", "prediction": "all x y.((Energy(x) & FoodChain(y)) -> PassedUp(x,y))", "score": 0}
{"id": "eqasc_train_4663", "prediction": "all x.(Plant(x) -> (FootOfFoodChain(x) | BottomOfWeb(x)))", "score": 0}
{"id": "eqasc_train_4664", "prediction": "all x y.((Consumed(x) & Plant(y)) -> EnergyPassedUpFromLowerToHigherTropicalLevels(y,x))", "score": 0}
{"id": "eqasc_train_4665", "prediction": "all x y z.((Resource(x) & Food(y) & (LowerThrombosis(z) | HigherThrombosis(z))) -> PassedUpChainOrWeb(x,y,z))", "score": 0}
{"id": "eqasc_train_4666", "prediction": "all x.(Autotroph(x) -> FoodChainBase(x))", "score": 0}
{"id": "eqasc_train_4667", "prediction": "all x y z.((Autotroph(x) & HigherTropicalLevel(y) & Autotroph(z)) -> EnergyPassedUp(x,y,z))", "score": 0}
{"id": "eqasc_train_4668", "prediction": "all x.(TropicalLevel(x) -> (LessBiomass(x) & LossOfEnergyContent(x)))", "score": 0}
{"id": "eqasc_train_4669", "prediction": "all x y.((Energy(x) & EnergyLevel(y) & GoesUp(x,y)) -> EnergyDecreases(x))", "score": 0}
{"id": "eqasc_train_4670", "prediction": "all x.(ChemicalEnergy(x) -> FoodNutrients(x))", "score": 0}
{"id": "eqasc_train_4671", "prediction": "all x y.((Nutrients(x) & FoodChainOrWeb(y)) -> PassedUp(x,y))", "score": 0}
{"id": "eqasc_train_4672", "prediction": "all x.(Fission(x) -> (AnimalDividesIntoTwoParts(x)))", "score": 0}
{"id": "eqasc_train_4673", "prediction": "all x.(ProkaryoticCell(x) -> DividesByBinaryFission(x))", "score": 0}
{"id": "eqasc_train_4674", "prediction": "all x.(ProkaryoticCell(x) -> DividesIntoTwoParts(x))", "score": 0}
{"id": "eqasc_train_4675", "prediction": "all x.(Euglenoids(x) -> (Eukaryote(x) & ReproducesByFission(x)))", "score": 0}
{"id": "eqasc_train_4676", "prediction": "all x.(Euglenoids(x) -> ReproducesByDividingIntoTwoParts(x))", "score": 0}
{"id": "eqasc_train_4677", "prediction": "all x.((Fungus(x) & (ReproducesByFission(x) | ReproducesByBadding(x))) -> Yeast(x))", "score": 0}
{"id": "eqasc_train_4678", "prediction": "all x.(Yeast(x) -> DividesIntoTwoParts(x))", "score": 0}
{"id": "eqasc_train_4679", "prediction": "all x.((Nucleus(x) & BreaksIntoLighterElements(x)) -> Fission(x))", "score": 0}
{"id": "eqasc_train_4680", "prediction": "all x y.((Animal(x) & Animal(y) & DividesIntoTwoParts(x,y)) -> BreaksUpIntoLighterElements(x,y))", "score": 0}
{"id": "eqasc_train_4681", "prediction": "all x.((AnimalCellMitosis(x) & ActualStages(x)) -> ViewedAt(x,AnimalCellMitosis))", "score": 0}
{"id": "eqasc_train_4682", "prediction": "all x y.((Fission(x) & Mitosis(y)) -> TakesPlaceDuring(x,y))", "score": 0}
{"id": "eqasc_train_4683", "prediction": "all x.(Fission(x) -> (ReleasesEnergy(x) & ReleasesNeutrons(x)))", "score": 0}
{"id": "eqasc_train_4684", "prediction": "all x y.((Animal(x) & Animal(y) & DividesIntoTwoParts(x,y)) -> (Energy(x) & Neutrons(x) & Released(y,x)))", "score": 0}
{"id": "eqasc_train_4685", "prediction": "all x.((Isotope(x) & CapableOfFission(x)) -> FissileIsotope(x))", "score": 0}
{"id": "eqasc_train_4686", "prediction": "all x.(FissileIsotope(x) -> (DividedIntoTwoParts(x) & CapableOfDividingIntoTwoParts(x)))", "score": 0}
{"id": "eqasc_train_4687", "prediction": "all x.(Flagellate(x) -> ReproducesByBinaryFission(x))", "score": 0}
{"id": "eqasc_train_4688", "prediction": "all x.(Flagellate(x) -> ReproducesByDividingIntoTwoParts(x))", "score": 0}
{"id": "eqasc_train_4689", "prediction": "all x.(AsexualReproduction(x) -> (Fragmentation(x) | Budding(x) | Fission(x)))", "score": 0}
{"id": "eqasc_train_4690", "prediction": "all x.(AsexualReproduction(x) -> (AnimalDividesIntoTwoParts(x)))", "score": 0}
{"id": "eqasc_train_4691", "prediction": "all x.(Nucleotide(x) -> BindsToForm(x,Polynucleotide))", "score": 0}
{"id": "eqasc_train_4692", "prediction": "all x.(Nucleotide(x) -> (MakingNucleicAcids(x) & Monomer(x)))", "score": 0}
{"id": "eqasc_train_4693", "prediction": "all x y.((Molecule(x) & MakesNucleicAcids(x)) -> BindToForm(x,y))", "score": 0}
{"id": "eqasc_train_4694", "prediction": "all x.((RNA(x) & LikeDNA(x)) -> Polynucleotide(x))", "score": 0}
{"id": "eqasc_train_4695", "prediction": "all x y.((Nucleotide(x) & Nucleotide(y)) -> BindToFormDNA(x,y))", "score": 0}
{"id": "eqasc_train_4696", "prediction": "all x y.((Nucleotide(x) & Nucleotide(y)) -> BindToFormRNA(x,y))", "score": 0}
{"id": "eqasc_train_4697", "prediction": "all x.(DNAString(x) -> LongPolynucleotideChain(x))", "score": 0}
{"id": "eqasc_train_4698", "prediction": "all x.((DNAString(x) & Polynucleotide(x)) -> Polynucleotide(x))", "score": 0}
{"id": "eqasc_train_4699", "prediction": "all x.((Protein(x) | Polynucleotide(x)) -> ThermodynamicallyInstabil(x))", "score": 0}
{"id": "eqasc_train_4700", "prediction": "all x y.((Nucleotide(x) & Nucleotide(y)) -> BindToFormChain(x,y))", "score": 0}
{"id": "eqasc_train_4701", "prediction": "all x.(Polynucleotide(x) -> BuildingBlocksOfDNA(x))", "score": 0}
{"id": "eqasc_train_4702", "prediction": "all x y.((Nucleotide(x) & Nucleotide(y)) -> BindToForm(x,y))", "score": 0}
{"id": "eqasc_train_4703", "prediction": "all x.((BuildingBlocksOfDNA(x) & BindToFormChain(x)) -> Polynucleotide(x))", "score": 0}
{"id": "eqasc_train_4704", "prediction": "all x.((Mutation(x) & LeadsToCancer(x)) -> OccursInGenes(x))", "score": 0}
{"id": "eqasc_train_4705", "prediction": "all x.(CausesGeneMutations(x) -> Carcinogen(x))", "score": 0}
{"id": "eqasc_train_4706", "prediction": "all x y.((Carcinogen(x) & Gene(y) & ControlsCellCycle(y)) -> LeadsToCancer(x,y))", "score": 0}
{"id": "eqasc_train_4707", "prediction": "all x.(FreeRadical(x) -> (MutulatesGenes(x) & (LeadsToCancer(x) | LeadsToCellDeath(x))))", "score": 0}
{"id": "eqasc_train_4708", "prediction": "all x y.((FreeRadian(x) & CellDeath(y)) -> (OccursInGenes(x,y) & ControlsCellCycle(x)))", "score": 0}
{"id": "eqasc_train_4709", "prediction": "all x.(Mitosis(x) -> CellCycle(x))", "score": 0}
{"id": "eqasc_train_4710", "prediction": "all x.((Mutations(x) & LeadsToCancer(x)) -> OccursInGenesAidingInMitosis(x))", "score": 0}
{"id": "eqasc_train_4711", "prediction": "all x.(Radiation(x) -> (DestroysCells(x) & CausesGeneticMutation(x)))", "score": 0}
{"id": "eqasc_train_4712", "prediction": "all x.(Radiation(x) -> CanCauseCancer(x))", "score": 0}
{"id": "eqasc_train_4713", "prediction": "all x.(Radiation(x) -> CausesMutation(x))", "score": 0}
{"id": "eqasc_train_4714", "prediction": "all x y.((Radiation(x) & Gene(y) & ControlsCellCycle(y)) -> CanAffect(x,y))", "score": 0}
{"id": "eqasc_train_4715", "prediction": "all x y.((Cell(x) & Mutation(y)) -> (OccursInGenes(y,x) & ControlsCellCycle(y)))", "score": 0}
{"id": "eqasc_train_4716", "prediction": "all x.((Gene(x) & ControlsCellCycle(x)) -> FoundInCancerousCells(x))", "score": 0}
{"id": "eqasc_train_4717", "prediction": "all x y.((Mutation(x) & Gene(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_train_4718", "prediction": "all x y.((Mutation(x) & Leukemia(y)) -> (OccursInGenes(x,y) & ControlsCellCycle(x)))", "score": 0}
{"id": "eqasc_train_4719", "prediction": "all x.((Cell(x) & (UndergoesMeiosis(x) | UndergoesMitosis(x))) -> MutationsCanBeHeritaged(x))", "score": 0}
{"id": "eqasc_train_4720", "prediction": "all x.(Cancer(x) -> (CanBeHeritaged(x) & CanBeEarned(x)))", "score": 0}
{"id": "eqasc_train_4721", "prediction": "all x.(CellDividend(x) -> (OrganismsGrow(x) & OrganismsRepair(x)))", "score": 0}
{"id": "eqasc_train_4722", "prediction": "all x.(Cell(x) -> RequiresProtein(x))", "score": 0}
{"id": "eqasc_train_4723", "prediction": "all x.(Organism(x) -> RequiresProtein(x))", "score": 0}
{"id": "eqasc_train_4724", "prediction": "all x.(CellDividend(x) -> CellDividend(x))", "score": 0}
{"id": "eqasc_train_4725", "prediction": "all x y z.((Cell(x) & Organism(y) & Method(z) & GrowsAndRepairs(y,z)) -> Reproduces(x,y,z))", "score": 0}
{"id": "eqasc_train_4726", "prediction": "all x y.((Organism(x) & Organism(y)) -> (Grows(x,y) & Repairs(x,y)))", "score": 0}
{"id": "eqasc_train_4727", "prediction": "all x.(Mitosis(x) -> (GrowsOrganisms(x) & RepairsOrganisms(x)))", "score": 0}
{"id": "eqasc_train_4728", "prediction": "all x y.((Human(x) & CellDivision(y)) -> (Grows(x,y) & Repairs(x,y)))", "score": 0}
{"id": "eqasc_train_4729", "prediction": "all x.(Mitosis(x) -> (GrowsOrganisms(x) & RepairsOrganisms(x)))", "score": 0}
{"id": "eqasc_train_4730", "prediction": "all x.(Organism(x) -> GrowsUpToReresembleParents(x))", "score": 0}
{"id": "eqasc_train_4731", "prediction": "all x y.((CellDividend(x) & Organism(y)) -> LeadsToGrowth(x,y))", "score": 0}
{"id": "eqasc_train_4732", "prediction": "all x.(Plant(x) -> AmazinglyAdaptableOrganism(x))", "score": 0}
{"id": "eqasc_train_4733", "prediction": "all x y.((Plant(x) & Plant(y)) -> (Grows(x,y) & Repairs(x,y)))", "score": 0}
{"id": "eqasc_train_4734", "prediction": "all x.(Mitosis(x) -> (Organism(x) & Grows(x) & Repairs(x)))", "score": 0}
{"id": "eqasc_train_4735", "prediction": "all x.((Division(x) & RequiredMitosis(x)) -> Requires(x,Division))", "score": 0}
{"id": "eqasc_train_4736", "prediction": "all x.(Organism(x) -> (Grows(x) & Repairs(x) & ThroughMitosis(x)))", "score": 0}
{"id": "eqasc_train_4737", "prediction": "all x.(Virus(x) -> InfectsBacteria(x))", "score": 0}
{"id": "eqasc_train_4738", "prediction": "all x.(RhizobiumBacteria(x) -> (NativeSoilBacteria(x) & -Pathogenic(x)))", "score": 0}
{"id": "eqasc_train_4739", "prediction": "all x y.((Virus(x) & Rhizobium(y)) -> Infects(x,y))", "score": 0}
{"id": "eqasc_train_4740", "prediction": "all x.(InfectedBird(x) -> SpreadsBacteriaInDrops(x))", "score": 0}
{"id": "eqasc_train_4741", "prediction": "all x y.((Virus(x) & Bacteria(y)) -> SpreadsThroughDroppings(x,y))", "score": 0}
{"id": "eqasc_train_4742", "prediction": "all x.((Bacteria(x) & LacksClearlyDefinedNucleus(x) & LacksSubcellularOrganelles(x)) -> Prokaryotes(x))", "score": 0}
{"id": "eqasc_train_4743", "prediction": "all x y.((Virus(x) & Prokaryote(y)) -> Infects(x,y))", "score": 0}
{"id": "eqasc_train_4744", "prediction": "all x.((SimplestKnownOrganism(x) & InfectsBacteria(x)) -> InfectsBacteria(x))", "score": 0}
{"id": "eqasc_train_4745", "prediction": "all x y.((Antibiotic(x) & GoodBacteria(y) & BadBacteria(z)) -> Kills(x,y,z))", "score": 0}
{"id": "eqasc_train_4746", "prediction": "all x y.((Virus(x) & Antibiotic(y)) -> Infects(x,y))", "score": 0}
{"id": "eqasc_train_4747", "prediction": "all x.(Child(x) -> InfectedWithVirus(x))", "score": 0}
{"id": "eqasc_train_4748", "prediction": "all x.(Child(x) -> (InfectedWithVirus(x) & InfectedWithBacteria(x)))", "score": 0}
{"id": "eqasc_train_4749", "prediction": "all x.(Phage(x) -> (InfectsBacteria(x) | InfectsBacteria(x)))", "score": 0}
{"id": "eqasc_train_4750", "prediction": "all x y.((Bacteria(x) & Bacteria(y)) -> Infects(x,y))", "score": 0}
{"id": "eqasc_train_4751", "prediction": "all x.(Bacteria(x) -> (Good(x) | Bad(x)))", "score": 0}
{"id": "eqasc_train_4752", "prediction": "all x.(Virus(x) -> (InfectsGoodTypes(x) | InfectsBadTypes(x)))", "score": 0}
{"id": "eqasc_train_4753", "prediction": "all x.(InfluenzaVirus(x) -> Restless(x))", "score": 0}
{"id": "eqasc_train_4754", "prediction": "all x.(Influenza(x) -> InfectsBacteria(x))", "score": 0}
{"id": "eqasc_train_4755", "prediction": "all x.(Plant(x) -> (ReleasesOxygen(x,Day) & -ReleasesOxygen(x,Night)))", "score": 2}
{"id": "eqasc_train_4756", "prediction": "all x.(Bush(x) -> (ReleasesOxygen(x,Day) & -ReleasesOxygen(x,Night)))", "score": 0}
{"id": "eqasc_train_4757", "prediction": "all x.((Plant(x) & SleepAtNight(x)) -> AltersPosition(x))", "score": 0}
{"id": "eqasc_train_4758", "prediction": "all x.(Plant(x) -> (ReleasesOxygen(x) & AltersPositionToSleep(x)))", "score": 0}
{"id": "eqasc_train_4759", "prediction": "all x.((Day(x) & SunOut(x)) -> SunOut(x))", "score": 0}
{"id": "eqasc_train_4760", "prediction": "all x y.((Plant(x) & SunOut(y)) -> ReleasesOxygen(x,y))", "score": 0}
{"id": "eqasc_train_4761", "prediction": "all x.(Algae(x) -> (ProducesOxygen(x) & Day(x) & Photosynthesis(x)))", "score": 0}
{"id": "eqasc_train_4762", "prediction": "all x.(Plant(x) -> (PhotosynthesizesDuringDay(x) & -PhotosynthesizesDuringNight(x)))", "score": 0}
{"id": "eqasc_train_4763", "prediction": "all x.(Fern(x) -> SeedlessVascularPlant(x))", "score": 0}
{"id": "eqasc_train_4764", "prediction": "all x.(Fern(x) -> (ReleasesOxygen(x) & -ReleasesOxygen(x) & Day(x) & -Night(x)))", "score": 0}
{"id": "eqasc_train_4765", "prediction": "all x.(Plant(x) -> Tree(x))", "score": 0}
{"id": "eqasc_train_4766", "prediction": "all x.(Tree(x) -> (ReleasesOxygen(x,Day) & -ReleasesOxygen(x,Night)))", "score": 0}
{"id": "eqasc_train_4767", "prediction": "all x.(Plant(x) -> (BluePine(x) | Hemlock(x) | Spruce(x) | Oak(x)))", "score": 0}
{"id": "eqasc_train_4768", "prediction": "all x.(BluePine(x) -> (ReleasesOxygen(x) & -ReleasesOxygen(x) & Day(x) & -Night(x)))", "score": 0}
{"id": "eqasc_train_4769", "prediction": "all x.(Bulbs(x) -> (PlantedOverYears(x) & (Tulips(x) | Daffodils(x))))", "score": 0}
{"id": "eqasc_train_4770", "prediction": "all x.(Tulp(x) -> (ReleasesOxygen(x) & Day(x) & -Night(x)))", "score": 0}
{"id": "eqasc_train_4771", "prediction": "all x.(OxygenExchange(x) -> NeededForPlantRespiration(x))", "score": 0}
{"id": "eqasc_train_4772", "prediction": "all x.(PlantRespiration(x) -> (OccursDuringDay(x) & -OccursDuringNight(x)))", "score": 0}
{"id": "eqasc_train_4773", "prediction": "all x.(OrangeTree(x) -> Plant(x))", "score": 2}
{"id": "eqasc_train_4774", "prediction": "all x.(OrangeTree(x) -> (ReleasesOxygen(x,Day) & -ReleasesOxygen(x,Night)))", "score": 1}
{"id": "eqasc_train_4775", "prediction": "all x.(FishhookCactus(x) -> Plant(x))", "score": 1}
{"id": "eqasc_train_4776", "prediction": "all x.(FishhookCactus(x) -> (ReleasesOxygen(x,Day) & -ReleasesOxygen(x,Night)))", "score": 1}
{"id": "eqasc_train_4777", "prediction": "all x y.((Oxygen(x) & Body(y)) -> NeededInOrganic(x,y))", "score": 0}
{"id": "eqasc_train_4778", "prediction": "all x.(Plant(x) -> (HelpsBodyLive(x) & -HelpsBodyLive(x) & -HelpsBodyLive(x) & -HelpsBodyLive(x) & -HelpsBodyLive(x) & -HelpsBodyLive(x) & -HelpsBodyLive(x) & -HelpsBodyLive(x)))", "score": 0}
{"id": "eqasc_train_4779", "prediction": "all x y z.((Melting(x) & Solid(y) & Liquid(z)) -> (ChangesFromTo(x,y,z) & AddsHeatEnergy(x)))", "score": 0}
{"id": "eqasc_train_4780", "prediction": "all x y.((Sun(x) & Earth(y)) -> StoresHeatEnergy(x,y))", "score": 0}
{"id": "eqasc_train_4781", "prediction": "all x y.((Solid(x) & Liquid(y)) -> Melts(x,y))", "score": 0}
{"id": "eqasc_train_4782", "prediction": "all x.(IceSculpture(x) -> MeltsAway(x))", "score": 0}
{"id": "eqasc_train_4783", "prediction": "all x.(IceSculpture(x) -> TurnsToLiquidFromHeatEnergy(x))", "score": 0}
{"id": "eqasc_train_4784", "prediction": "all x.((Substance(x) & Melts(x)) -> ChangesPhase(x,Solid,Liquid))", "score": 0}
{"id": "eqasc_train_4785", "prediction": "all x y.((Solid(x) & Solid(y)) -> (AddsHeatEnergy(x,y)))", "score": 0}
{"id": "eqasc_train_4786", "prediction": "all x y z.((Melting(x) & Solid(y) & Liquid(z)) -> (ChangesFromTo(x,y,z) & IncreasesTemperature(x)))", "score": 0}
{"id": "eqasc_train_4787", "prediction": "all x.(Fire(x) -> (GivesHeatEnergy(x) & GivesLight(x)))", "score": 0}
{"id": "eqasc_train_4788", "prediction": "all x y.((Fire(x) & SolidIce(y)) -> CanChangeToLiquidWater(x,y))", "score": 0}
{"id": "eqasc_train_4789", "prediction": "all x y.((Melting(x) & Ice(y) & Water(y)) -> (Changes(x,y) & AddsHeatEnergy(x)))", "score": 0}
{"id": "eqasc_train_4790", "prediction": "all x y.((Melting(x) & Heat(y)) -> (ChangesPhasesWith(x,y) & MeasuredInJules(x)))", "score": 0}
{"id": "eqasc_train_4791", "prediction": "all x.((Energy(x) & MeltsIce(x)) -> Needed(x))", "score": 0}
{"id": "eqasc_train_4792", "prediction": "all x y.((Ice(x) & Solid(y) & Liquid(x)) -> Changes(x,y))", "score": 0}
{"id": "eqasc_train_4793", "prediction": "all x.(Melting(x) -> PhaseChange(x))", "score": 3}
{"id": "eqasc_train_4794", "prediction": "all x y z.((PhaseChange(x) & Solid(y) & Liquid(z)) -> ChangesUsingHeatEnergy(x,y,z))", "score": 0}
{"id": "eqasc_train_4795", "prediction": "all x.((Plant(x) & RequiresNutrients(x)) -> Grows(x))", "score": 0}
{"id": "eqasc_train_4796", "prediction": "all x.(Fertilizer(x) -> AddsNutrientsToSoil(x))", "score": 0}
{"id": "eqasc_train_4797", "prediction": "all x y.((Fertilizer(x) & Plant(y)) -> HelpsGrow(x,y))", "score": 0}
{"id": "eqasc_train_4798", "prediction": "all x.(Bamboo(x) -> RequiresNutrientsToGrow(x))", "score": 0}
{"id": "eqasc_train_4799", "prediction": "all x.(Potassium(x) -> (EssentialNutrient(x) & ForPlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_train_4800", "prediction": "all x.((Plant(x) & RequiresKapium(x)) -> Grows(x))", "score": 0}
{"id": "eqasc_train_4801", "prediction": "all x.(Legume(x) -> TypicalOfTypeOfPlant(x))", "score": 0}
{"id": "eqasc_train_4802", "prediction": "all x.(Legumes(x) -> RequiresNutrientsToGrow(x))", "score": 0}
{"id": "eqasc_train_4803", "prediction": "all x.(Bush(x) -> RequiresNutrientsToGrow(x))", "score": 0}
{"id": "eqasc_train_4804", "prediction": "all x.(NutrientDensity(x) -> NutrientToCalorieRatio(x))", "score": 0}
{"id": "eqasc_train_4805", "prediction": "all x.(Plant(x) -> RequiresFoodSupply(x))", "score": 0}
{"id": "eqasc_train_4806", "prediction": "all x.(CarbonDioxide(x) -> PlantNutrient(x))", "score": 0}
{"id": "eqasc_train_4807", "prediction": "all x.(Plant(x) -> RequiresCarbonDioxide(x))", "score": 0}
{"id": "eqasc_train_4808", "prediction": "all x.((Plant(x) & GrownIn(x,roses)) -> GrownIn(x,roses))", "score": 0}
{"id": "eqasc_train_4809", "prediction": "all x.(Rose(x) -> RequiresNutrientsToGrow(x))", "score": 0}
{"id": "eqasc_train_4810", "prediction": "all x.(Orchid(x) -> RequiresNutrientsToGrow(x))", "score": 0}
{"id": "eqasc_train_4811", "prediction": "all x.((Plant(x) & Infested(x)) -> (Maple(x) | Poplar(x) | Basswood(x) | Elm(x)))", "score": 0}
{"id": "eqasc_train_4812", "prediction": "all x.(Elm(x) -> RequiresNutrientsToGrow(x))", "score": 0}
{"id": "eqasc_train_4813", "prediction": "all x.(FoodPotash(x) -> EssentialPlantNutrient(x))", "score": 0}
{"id": "eqasc_train_4814", "prediction": "all x.((Plant(x) & RequiresPotash(x)) -> Grows(x))", "score": 0}
{"id": "eqasc_train_4815", "prediction": "all x.(Nutrient(x) -> (NaturallyPresentInSoil(x) & (Minerals(x) | Elements(x))))", "score": 0}
{"id": "eqasc_train_4816", "prediction": "all x y.((Plant(x) & Soil(y)) -> RequiresToGrow(x,y))", "score": 0}
{"id": "eqasc_train_4817", "prediction": "all x.(Plant(x) -> RequiresRichSoil(x))", "score": 0}
{"id": "eqasc_train_4818", "prediction": "all x.(Plant(x) -> RequiresCarbonDioxide(x))", "score": 0}
{"id": "eqasc_train_4819", "prediction": "all x.(PlantNutrient(x) -> (Phosphorus(x) | Nitrogen(x)))", "score": 0}
{"id": "eqasc_train_4820", "prediction": "all x y.((Plant(x) & Phosphor(y) & Nitrogen(y)) -> RequiresToGrow(x,y))", "score": 0}
{"id": "eqasc_train_4821", "prediction": "all x.(MaleDog(x) -> UsesPheromonesInUrine(x))", "score": 0}
{"id": "eqasc_train_4822", "prediction": "all x.(Pheromone(x) -> (Hormone(x) & StimulatesSexualReactions(x) & ThroughSmell(x)))", "score": 0}
{"id": "eqasc_train_4823", "prediction": "all x.(Dog(x) -> (UsesSmell(x) & MarksTerritory(x)))", "score": 0}
{"id": "eqasc_train_4824", "prediction": "all x.(Pheromone(x) -> NaturalAphrodisiac(x))", "score": 0}
{"id": "eqasc_train_4825", "prediction": "all x.((Dog(x) & Male(x)) -> UsesNaturalAphrodisiacsInUrine(x))", "score": 0}
{"id": "eqasc_train_4826", "prediction": "all x.(Pheromone(x) -> SubCategoryOfSemiochemicals(x))", "score": 0}
{"id": "eqasc_train_4827", "prediction": "all x.(MaleDog(x) -> UsesSemiochemicalsInUrine(x))", "score": 0}
{"id": "eqasc_train_4828", "prediction": "all x.(Animal(x) -> EmitsPheromonesToMate(x))", "score": 0}
{"id": "eqasc_train_4829", "prediction": "all x y.((MaleDog(x) & Territories(y)) -> MarksTerritory(x,y))", "score": 0}
{"id": "eqasc_train_4830", "prediction": "all x.(Male(x) -> UsesUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUsedUUsedUseUUsedUUseUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU", "score": -1}
{"id": "eqasc_train_4831", "prediction": "all x y.((Dog(x) & Male(y)) -> UsesPheromonesInUrineMarkings(x,y))", "score": 0}
{"id": "eqasc_train_4832", "prediction": "all x.(Coyote(x) -> (MaintainsTerritory(x) & MarksWithUrine(x)))", "score": 0}
{"id": "eqasc_train_4833", "prediction": "all x.((Dog(x) & Male(x)) -> UsesPheromonesInUrine(x))", "score": 0}
{"id": "eqasc_train_4834", "prediction": "all x y.((Male(x) & Female(y)) -> ProducesPheromones(x,y))", "score": 0}
{"id": "eqasc_train_4835", "prediction": "all x.((MaleDog(x) & AttractsFemales(x)) -> MarksTerritory(x))", "score": 0}
{"id": "eqasc_train_4836", "prediction": "all x.(MaleDog(x) -> UsesChemicalsToMarkTerritory(x))", "score": 0}
{"id": "eqasc_train_4837", "prediction": "all x.(MaleDog(x) -> UsesNaturalAphrodisiacsInUrine(x))", "score": 0}
{"id": "eqasc_train_4838", "prediction": "all x y.((Dog(x) & Urination(y)) -> ScentMarker(x,y))", "score": 0}
{"id": "eqasc_train_4839", "prediction": "all x.(MaleDog(x) -> MarksTerritoryWithScentMarker(x))", "score": 0}
{"id": "eqasc_train_4840", "prediction": "all x.(Pheromone(x) -> (ProducedByInsects(x) & Communicate(x)))", "score": 0}
{"id": "eqasc_train_4841", "prediction": "all x.(Dog(x) -> (UsesChemicalsInUrine(x) & MarksTerritory(x)))", "score": 0}
{"id": "eqasc_train_4842", "prediction": "all x.(Pheromone(x) -> VolatileSubstance(x))", "score": 0}
{"id": "eqasc_train_4843", "prediction": "all x.(MaleDog(x) -> UsesVolatileSubstancesInUrine(x))", "score": 0}
{"id": "eqasc_train_4844", "prediction": "all x y.((Cytokinesis(x) & Eukaryote(y) & Prokaryote(y)) -> FinalStageOfCellDividence(x,y))", "score": 0}
{"id": "eqasc_train_4845", "prediction": "all x.(Cytokinesis(x) -> FinalStageOfMitosis(x))", "score": 0}
{"id": "eqasc_train_4846", "prediction": "all x.(Cytoplasma(x) -> Cytokinis(x))", "score": 0}
{"id": "eqasc_train_4847", "prediction": "all x y.((Eukaryote(x) & Eukaryote(y)) -> CellDividend(x,y))", "score": 0}
{"id": "eqasc_train_4848", "prediction": "all x.(Cytokinesis(x) -> FinalStageOfMitosis(x))", "score": 0}
{"id": "eqasc_train_4849", "prediction": "all x.(CellDividend(x) -> InvolvesMitosis(x))", "score": 0}
{"id": "eqasc_train_4850", "prediction": "all x y.((Cytokinesis(x) & Eukaryote(y) & Prokaryote(y)) -> FinalStageOfMitosis(x,y))", "score": 0}
{"id": "eqasc_train_4851", "prediction": "all x y.((Cytokinesis(x) & CellBody(y)) -> SplitsIntoTwoCells(y,x))", "score": 0}
{"id": "eqasc_train_4852", "prediction": "all x y.((CellBody(x) & Eukaryote(y)) -> SplitsIntoTwoCells(x,y))", "score": 0}
{"id": "eqasc_train_4853", "prediction": "all x y.((Eukaryote(x) & Prokaryote(y)) -> (SplittingIntoTwoCells(x,y) & FinalStageOfCellDividence(x,y)))", "score": 0}
{"id": "eqasc_train_4854", "prediction": "all x.(Cytokinesis(x) -> (Cytokinesis(x) & TelophaseOfMitosis(x)))", "score": 0}
{"id": "eqasc_train_4855", "prediction": "all x y.((CytoplasmicDiversity(x) & Eukaryote(y) & Prokaryote(y)) -> FinalStageOfCellDiversity(x,y))", "score": 0}
{"id": "eqasc_train_4856", "prediction": "all x y.((Ctyokinesis(x) & Eukaryote(y) & Bacteria(y)) -> CellDivisionFinalStage(x,y))", "score": 0}
{"id": "eqasc_train_4857", "prediction": "all x.(Cytokinesis(x) -> CellDivision(x))", "score": 0}
{"id": "eqasc_train_4858", "prediction": "Cytokinesis (DaughterCell(x) & Formed(x))", "score": -1}
{"id": "eqasc_train_4859", "prediction": "all x y z.((DaughterCell(x) & Eukaryote(y) & Prokaryote(z)) -> (FormedInFinalStageOfCellDividence(x,y,z) & (Eukaryote(y) | Prokaryote(y))))", "score": 0}
{"id": "eqasc_train_4860", "prediction": "all x y.((Cytoplasma(x) & Eukaryote(y) & Prokaryote(y)) -> CellDividence(x,y))", "score": 0}
{"id": "eqasc_train_4861", "prediction": "all x.(ConventionalMyosin(x) -> RequiresForCytokinisis(x))", "score": 0}
{"id": "eqasc_train_4862", "prediction": "all x.(ConventionalMyosin(x) -> RequiresForFinalStageOfCellDividetion(x))", "score": 0}
{"id": "eqasc_train_4863", "prediction": "all x.((Bacteria(x) | Cyanobacteria(x)) -> ProkaryoticOrganism(x))", "score": 0}
{"id": "eqasc_train_4864", "prediction": "all x.(Bacteria(x) -> UndergoesCytokinesis(x))", "score": 0}
{"id": "eqasc_train_4865", "prediction": "all x.(Animal(x) -> RequiresWaterForSurvival(x))", "score": 2}
{"id": "eqasc_train_4866", "prediction": "all x y.((Water(x) & Ocean(y)) -> FillsToSeaLevel(x,y))", "score": 0}
{"id": "eqasc_train_4867", "prediction": "all x.(Animal(x) -> RequiresFluid(x))", "score": 0}
{"id": "eqasc_train_4868", "prediction": "all x.((NoWater(x) & Drought(x)) -> Drought(x))", "score": 0}
{"id": "eqasc_train_4869", "prediction": "all x.(Drought(x) -> NegativelyImpactsAnimalSurvival(x))", "score": 0}
{"id": "eqasc_train_4870", "prediction": "all x.(Human(x) -> RequiresWaterForSurvival(x))", "score": 1}
{"id": "eqasc_train_4871", "prediction": "all x.(Bear(x) -> (Common(x) & Irrefutable(x)))", "score": 0}
{"id": "eqasc_train_4872", "prediction": "all x.(Bear(x) -> (RequiresWater(x) & SurvivesWith(x)))", "score": 0}
{"id": "eqasc_train_4873", "prediction": "all x.((Animal(x) & Hydration(x)) -> Survives(x))", "score": 0}
{"id": "eqasc_train_4874", "prediction": "all x.(Cat(x) -> RequiresWaterForSurvival(x))", "score": 1}
{"id": "eqasc_train_4875", "prediction": "all x.((WaterScarce(x) & Animals(x) & Plants(x)) -> Dies(x))", "score": 0}
{"id": "eqasc_train_4876", "prediction": "all x.(Plant(x) -> DiesWithoutWater(x))", "score": 0}
{"id": "eqasc_train_4877", "prediction": "all x.((Hydrogen(x) & Oxygen(x)) -> CreatesWater(x))", "score": 0}
{"id": "eqasc_train_4878", "prediction": "all x.(Animal(x) -> (RequiresHydrogen(x) & RequiresOxygen(x)))", "score": 0}
{"id": "eqasc_train_4879", "prediction": "all x.(Water(x) -> (KeyToLife(x) & KeyToSurvival(x)))", "score": 1}
{"id": "eqasc_train_4880", "prediction": "all x.(Water(x) -> KeyToLife(x))", "score": 1}
{"id": "eqasc_train_4881", "prediction": "all x.(Duck(x) -> StrangeAnimal(x))", "score": 0}
{"id": "eqasc_train_4882", "prediction": "all x.(Duck(x) -> RequiresWaterForSurvival(x))", "score": 0}
{"id": "eqasc_train_4883", "prediction": "(FavoriteAnimal(Alice) & Giraffe(Alice))", "score": 0}
{"id": "eqasc_train_4884", "prediction": "all x.(Giraffe(x) -> RequiresWaterForSurvival(x))", "score": 0}
{"id": "eqasc_train_4885", "prediction": "all x.(Mollisk(x) -> (Invertebrate(x) & CommonSnail(x)))", "score": 0}
{"id": "eqasc_train_4886", "prediction": "all x.(Invertebrate(x) -> (Animal(x) & -Spine(x) & -Backbone(x)))", "score": 0}
{"id": "eqasc_train_4887", "prediction": "all x.(Snail(x) -> -HasBackbone(x))", "score": 0}
{"id": "eqasc_train_4888", "prediction": "all x.(Gastropod(x) -> (Snake(x) | Slug(x)))", "score": 0}
{"id": "eqasc_train_4889", "prediction": "all x.(Molllusk(x) -> (Invertebrate(x) & Gastropod(x)))", "score": 0}
{"id": "eqasc_train_4890", "prediction": "all x.(Mollusk(x) -> ComesFromEggs(x))", "score": 0}
{"id": "eqasc_train_4891", "prediction": "all x.(CommonSnake(x) -> ComesFromEggs(x))", "score": 0}
{"id": "eqasc_train_4892", "prediction": "all x.(Slug(x) -> (Slug(x) & CommonGardenPest(x) & -Snail(x)))", "score": 0}
{"id": "eqasc_train_4893", "prediction": "all x.(Mollusk(x) -> (Invertebrate(x) & CommonGardenPest(x) & HasShell(x)))", "score": 0}
{"id": "eqasc_train_4894", "prediction": "all x.(Mullusk(x) -> (InDiama(x) & (Snail(x) | Clam(x))))", "score": 0}
{"id": "eqasc_train_4895", "prediction": "all x.(Cam(x) -> Mollusk(x))", "score": 0}
{"id": "eqasc_train_4896", "prediction": "all x.((Snake(x) & Decollate(x)) -> Common(x))", "score": 0}
{"id": "eqasc_train_4897", "prediction": "all x.(DecollateSnail(x) -> Mollusk(x))", "score": 0}
{"id": "eqasc_train_4898", "prediction": "all x.(Abalone(x) -> MarineSnake(x))", "score": 0}
{"id": "eqasc_train_4899", "prediction": "all x.(Molllusk(x) -> (Invertebrate(x) & Abalone(x)))", "score": 0}
{"id": "eqasc_train_4900", "prediction": "all x.(Mollusk(x) -> (BilaterallySymetrical(x) & Protonostome(x)))", "score": 0}
{"id": "eqasc_train_4901", "prediction": "all x.(CommonSnake(x) -> (BilaterallySymmetric(x) & Protonostome(x)))", "score": 0}
{"id": "eqasc_train_4902", "prediction": "all x.(Invertebrate(x) -> -Backbone(x))", "score": 0}
{"id": "eqasc_train_4903", "prediction": "all x.(Mollusk(x) -> -HasBackbone(x))", "score": 0}
{"id": "eqasc_train_4904", "prediction": "all x.(Abalone(x) -> (Invertebrate(x) & CommonSnail(x)))", "score": 0}
{"id": "eqasc_train_4905", "prediction": "all x.(Snail(x) -> ProtectedByHardShell(x))", "score": 0}
{"id": "eqasc_train_4906", "prediction": "exists x.(Invertebrate(x) & ProtectedByHardShell(x))", "score": 0}
{"id": "eqasc_train_4907", "prediction": "all x.(Invertebrate(x) -> (LacksBackbone(x) | LacksSpinalColumn(x)))", "score": 0}
{"id": "eqasc_train_4908", "prediction": "all x.(Mollusk(x) -> (LacksBackbone(x) | LacksSpinalColumn(x)))", "score": 0}
{"id": "eqasc_train_4909", "prediction": "all x.(Mollusk(x) -> (SoftBody(x) & LikeSnail(x)))", "score": 0}
{"id": "eqasc_train_4910", "prediction": "all x.(Amphibian(x) -> (PermeableSkin(x) & AbsorbsSubstances(x)))", "score": 3}
{"id": "eqasc_train_4911", "prediction": "all x.(NaturalToxin(x) -> (PoisonousSubstance(x) & (Bacteria(x) | Plant(x) | Animal(x))))", "score": 0}
{"id": "eqasc_train_4912", "prediction": "all x.(Amphibian(x) -> (PermeableSkin(x) & AbsorbsToxins(x) & (Bacteria(x) | Plant(x) | Animal(x))))", "score": 0}
{"id": "eqasc_train_4913", "prediction": "all x.(Chemical(x) -> (ToxicToPermeableAmphibianSkin(x)))", "score": 0}
{"id": "eqasc_train_4914", "prediction": "all x.(Amphibian(x) -> AbsorbsChemicalsEasily(x))", "score": 0}
{"id": "eqasc_train_4915", "prediction": "exists x.(Substance(x) & HarmfulToBody(x) & BlocksBiologicalSystems(x))", "score": 0}
{"id": "eqasc_train_4916", "prediction": "all x.(Amphibian(x) -> (PermeableSkin(x) & CanHarm(x)))", "score": 0}
{"id": "eqasc_train_4917", "prediction": "all x.(Frog(x) -> PermeableSkin(x))", "score": 1}
{"id": "eqasc_train_4918", "prediction": "all x.(Frog(x) -> (PermeableSkin(x) & AbsorbsSubstancesFromEnvironment(x)))", "score": 0}
{"id": "eqasc_train_4919", "prediction": "all x.(AmphibianSkin(x) -> (LacksHair(x) | LacksScales(x)))", "score": 0}
{"id": "eqasc_train_4920", "prediction": "all x.(Amphibian(x) -> -HasHair(x))", "score": 0}
{"id": "eqasc_train_4921", "prediction": "all x.(Frog(x) -> (PermeableSkin(x) & AbsorbsSubstances(x)))", "score": 1}
{"id": "eqasc_train_4922", "prediction": "all x.((Toad(x) | Frog(x)) -> Amphibian(x))", "score": 1}
{"id": "eqasc_train_4923", "prediction": "all x.(Toad(x) -> (PermeableSkin(x) & AbsorbsSubstancesFromEnvironment(x)))", "score": 0}
{"id": "eqasc_train_4924", "prediction": "all x.(Frog(x) -> (PermeableSkin(x) & AbsorbsSubstances(x)))", "score": 1}
{"id": "eqasc_train_4925", "prediction": "all x.(Amphibian(x) -> (HasLungs(x) & BreathesThroughSkin(x)))", "score": 0}
{"id": "eqasc_train_4926", "prediction": "all x.(PermeableSkin(x) -> AbsorbsAirToBreathe(x))", "score": 0}
{"id": "eqasc_train_4927", "prediction": "all x.((Project(x) & StartsLifeInWater(x)) -> HasPermeableSkin(x))", "score": 0}
{"id": "eqasc_train_4928", "prediction": "all x.(Lymphocyte(x) -> KeyCell(x))", "score": 1}
{"id": "eqasc_train_4929", "prediction": "all x.(Blymphocyte(x) -> ProducesAntibodies(x))", "score": 0}
{"id": "eqasc_train_4930", "prediction": "all x.((KeyCell(x) & ImmuneResponse(x)) -> ProducesAntibodies(x))", "score": 0}
{"id": "eqasc_train_4931", "prediction": "all x.(Allergie(x) -> ImmuneSystemResponse(x))", "score": 0}
{"id": "eqasc_train_4932", "prediction": "all x.(Lymphocyte(x) -> (KeyCell(x) & InvolvedInAllergies(x)))", "score": 0}
{"id": "eqasc_train_4933", "prediction": "all x.(Lymphocyte(x) -> ProducedInBoneMarrow(x))", "score": 0}
{"id": "eqasc_train_4934", "prediction": "all x y.((KeyCell(x) & ImmuneResponse(y)) -> ProducedInBoneMarrow(x,y))", "score": 0}
{"id": "eqasc_train_4935", "prediction": "all x.(AllergyAttack(x) -> ImmunalResponse(x))", "score": 0}
{"id": "eqasc_train_4936", "prediction": "all x.(Lymphocyte(x) -> (KeyCell(x) & InvolvedInAllergyAttacks(x)))", "score": 0}
{"id": "eqasc_train_4937", "prediction": "all x.(Lymphocyte(x) -> KeyCell(x))", "score": 1}
{"id": "eqasc_train_4938", "prediction": "all x.(ImmuneResponse(x) -> ProducesAntibodies(x))", "score": 0}
{"id": "eqasc_train_4939", "prediction": "all x.(Antibodies(x) -> SynthesizedByLymphocytes(x))", "score": 0}
{"id": "eqasc_train_4940", "prediction": "all x y.((Antibodies(x) & KeyCell(y) & ImmuneResponse(x,y)) -> SynthesizedBy(x,y))", "score": 0}
{"id": "eqasc_train_4941", "prediction": "all x.(Antibodies(x) -> InvolvedInImmuneResponse(x))", "score": 0}
{"id": "eqasc_train_4942", "prediction": "all x y.((Lymphocyte(x) & AllergyAttack(y)) -> KeyCell(x,y))", "score": 0}
{"id": "eqasc_train_4943", "prediction": "all x y.((Plant(x) & Water(y)) -> RequiresForSurvival(x,y))", "score": 0}
{"id": "eqasc_train_4944", "prediction": "all x.(Plant(x) -> RequiresWaterToLive(x))", "score": 0}
{"id": "eqasc_train_4945", "prediction": "all x.(Bamboo(x) -> RequiresWaterForSurvival(x))", "score": 0}
{"id": "eqasc_train_4946", "prediction": "all x.(Legumes(x) -> RequiresWaterForSurvival(x))", "score": 0}
{"id": "eqasc_train_4947", "prediction": "all x.(Plant(x) -> RequiresCellHydration(x))", "score": 0}
{"id": "eqasc_train_4948", "prediction": "all x.(Bush(x) -> RequiresWaterForSurvival(x))", "score": 0}
{"id": "eqasc_train_4949", "prediction": "all x.((Plant(x) & -Rain(x) & -Watering(x)) -> Dies(x))", "score": 0}
{"id": "eqasc_train_4950", "prediction": "all x.(OutdoorPlant(x) -> RequiresRain(x))", "score": 0}
{"id": "eqasc_train_4951", "prediction": "all x.(LifeLongLearning(x) -> (-LuxuryForLittle(x) & SurvivalSkillForAll(x)))", "score": 0}
{"id": "eqasc_train_4952", "prediction": "all x.(Plant(x) -> RequiresWaterForLifeLongLearning(x))", "score": 0}
{"id": "eqasc_train_4953", "prediction": "all x.((Plant(x) & RequiresCompoundOfHydrogen(x) & RequiresCompoundOfOxygen(x)) -> Survival(x))", "score": 0}
{"id": "eqasc_train_4954", "prediction": "all x.(Water(x) -> (ContainsHydrogen(x) & ContainsOxygen(x)))", "score": 0}
{"id": "eqasc_train_4955", "prediction": "all x.(Plant(x) -> RequiresHydrogen(x))", "score": 0}
{"id": "eqasc_train_4956", "prediction": "all x.(LackOfMoistureInAir(x) -> LowRainfall(x))", "score": 0}
{"id": "eqasc_train_4957", "prediction": "all x.(Humidity(x) -> MoistureInAir(x))", "score": 0}
{"id": "eqasc_train_4958", "prediction": "all x.(LackOfHumidityInAir(x) -> LowRainfall(x))", "score": 0}
{"id": "eqasc_train_4959", "prediction": "all x.(Drought(x) -> CausedByLessThanNormalRainfall(x))", "score": 0}
{"id": "eqasc_train_4960", "prediction": "all x.(LackOfMoistureInAir(x) -> CausesDrought(x))", "score": 0}
{"id": "eqasc_train_4961", "prediction": "all x.((EnoughMoistureInClouds(x) & Rain(x)) -> Produced(x))", "score": 0}
{"id": "eqasc_train_4962", "prediction": "all x.((Cloud(x) & LacksWater(x)) -> ReducesRainfall(x))", "score": 0}
{"id": "eqasc_train_4963", "prediction": "all x.(Rainfall(x) -> Precipitation(x))", "score": 0}
{"id": "eqasc_train_4964", "prediction": "all x.(LackOfMoistureInAir(x) -> LowPrecipitation(x))", "score": 0}
{"id": "eqasc_train_4965", "prediction": "all x.((Area(x) & ModerateRainfall(x) & LowRainfall(x)) -> DroughtProne(x))", "score": 0}
{"id": "eqasc_train_4966", "prediction": "all x.(DroughtProneArea(x) -> LackOfMoistureInAir(x))", "score": 0}
{"id": "eqasc_train_4967", "prediction": "all x.((Plant(x) & Wither(x) & DieFromVoiceOfMoisture(x)) -> WitherAndDieFromVoiceOfMoisture(x))", "score": 0}
{"id": "eqasc_train_4968", "prediction": "all x.((Damage(x) & MoistureStress(x)) -> Intensified(x))", "score": 0}
{"id": "eqasc_train_4969", "prediction": "all x.((LowRainfall(x) & Drought(x)) -> IntenseDamage(x))", "score": 0}
{"id": "eqasc_train_4970", "prediction": "all x y.((Rainfall(x) & Evaporation(y)) -> (ContributesToMoisture(x) & RemovesMoisture(y)))", "score": 0}
{"id": "eqasc_train_4971", "prediction": "all x y.((Evaporation(x) & Moisture(y)) -> Lowers(x,y))", "score": 0}
{"id": "eqasc_train_4972", "prediction": "all x.(LackOfHumidity(x) -> LowRainfall(x))", "score": 0}
{"id": "eqasc_train_4973", "prediction": "all x.(Cloud(x) -> (MadeOfMoisture(x) & WaterEvaporating(x)))", "score": 0}
{"id": "eqasc_train_4974", "prediction": "all x.(LackOfWaterInAir(x) -> LowRainfall(x))", "score": 0}
{"id": "eqasc_train_4975", "prediction": "all x.(LackOfHumidity(x) -> LowRainfall(x))", "score": 0}
{"id": "eqasc_train_4976", "prediction": "all x.(Precipitation(x) -> Rainfall(x))", "score": 0}
{"id": "eqasc_train_4977", "prediction": "all x.(LowMoistureInAir(x) -> CanCausePlantsToDie(x))", "score": 0}
{"id": "eqasc_train_4978", "prediction": "all x.(Macroevolution(x) -> EvolutionOverGeologicTimeAboveSpeciesLevel(x))", "score": 0}
{"id": "eqasc_train_4979", "prediction": "all x.(SpeciationEvent(x) -> Macroevolution(x))", "score": 0}
{"id": "eqasc_train_4980", "prediction": "all x y.((SpeciationEvent(x) & Species(y)) -> ShowsEvolution(x,y))", "score": 0}
{"id": "eqasc_train_4981", "prediction": "(all x.(GeologicTime(x) -> VerySlow(x)))", "score": 0}
{"id": "eqasc_train_4982", "prediction": "all x.(Macroevolution(x) -> (SlowEvolution(x) & AboveSpeciesLevel(x)))", "score": 0}
{"id": "eqasc_train_4983", "prediction": "all x.((Species(x) & AboveNamed(x)) -> UsedMedically(x))", "score": 0}
{"id": "eqasc_train_4984", "prediction": "all x.(Macroevolution(x) -> EvolutionOverGeologicTime(x))", "score": 0}
{"id": "eqasc_train_4985", "prediction": "all x.(GeologicTimeLine(x) -> (ExpressedInEpoches(x) & ExpressedInPeriods(x)))", "score": 0}
{"id": "eqasc_train_4986", "prediction": "all x.(Macroevolution(x) -> EvolutionOverEarsAboveSpeciesLevel(x))", "score": 0}
{"id": "eqasc_train_4987", "prediction": "all x y z.((Geologist(x) & TimeUnit(y) & Era(z)) -> BreaksInto(x,y,z))", "score": 0}
{"id": "eqasc_train_4988", "prediction": "all x.(Macroevolution(x) -> EvolutionOverEarsAboveSpeciesLevel(x))", "score": 0}
{"id": "eqasc_train_4989", "prediction": "all x.((Microevolution(x) & Macroevolution(x)) -> Example(x))", "score": 0}
{"id": "eqasc_train_4990", "prediction": "all x.(Microevolution(x) -> HappensOverTime(x))", "score": 0}
{"id": "eqasc_train_4991", "prediction": "all x y.((Date(x) & Era(y) & Period(y)) -> ProvidedFor(x,y))", "score": 0}
{"id": "eqasc_train_4992", "prediction": "all x y.((Macroevolution(x) & AboveLevelOfSpecies(x,y)) -> EvolutionOverErasAndPeriods(x))", "score": 0}
{"id": "eqasc_train_4993", "prediction": "all x.(Species(x) -> exists y.(InterbreedingPopulation(y) & Group(x,y)))", "score": 0}
{"id": "eqasc_train_4994", "prediction": "all x.(Macroevolution(x) -> EvolutionOverGeologicTime(x))", "score": 0}
{"id": "eqasc_train_4995", "prediction": "all x.(Evolution(x) -> OccursOverGeologicTime(x))", "score": 0}
{"id": "eqasc_train_4996", "prediction": "all x.(Macroevolution(x) -> HappenedOverGeologicPeriods(x))", "score": 0}
{"id": "eqasc_train_4997", "prediction": "exists x.(IsolatedFossil(x) & HeldUpAsEvidenceOfMacroevolution(x))", "score": 0}
{"id": "eqasc_train_4998", "prediction": "all x y.((Fossil(x) & Species(y)) -> ShowsEvolutionOverGeologicTimeAboveLevel(x,y))", "score": 0}
{"id": "eqasc_train_4999", "prediction": "all x.((Mutation(x) & Mutation(x)) -> EvolutionOccurs(x))", "score": 0}
{"id": "eqasc_train_5000", "prediction": "all x.(Macroevolution(x) -> InvolvesMutation(x))", "score": 0}
{"id": "eqasc_train_5001", "prediction": "all x.(Macroevolution(x) -> MoreThanRepeatedRoundsOfMicroevolution(x))", "score": 0}
{"id": "eqasc_train_5002", "prediction": "all x y.((Evolution(x) & GeologicTime(y) & AboveLevel(x,y)) -> MoreThanRepeatedRoundsOfMicroevolution(x))", "score": 0}
{"id": "eqasc_train_5003", "prediction": "all x y.((Evolution(x) & GeologicTime(y) & AboveSpeciesLevel(x,y)) -> IncludesSpeciationEvents(x))", "score": 0}
{"id": "eqasc_train_5004", "prediction": "all x.(Macroevolution(x) -> ChangeFromSpeciesToSpecies(x))", "score": 0}
{"id": "eqasc_train_5005", "prediction": "all x y.((Species(x) & Species(y)) -> EvolutionOverGeologicTime(x,y))", "score": 0}
{"id": "eqasc_train_5006", "prediction": "all x.(Macroevolution(x) -> EvolutionOverGeologicTime(x))", "score": 0}
{"id": "eqasc_train_5007", "prediction": "all x y.((Airplane(x) & Person(y)) -> MovesAcrossBodyOfWater(x,y))", "score": 0}
{"id": "eqasc_train_5008", "prediction": "all x.(Airplane(x) -> (Boeing747(x) & TakeOff(x) & LandOnAirport(x)))", "score": 0}
{"id": "eqasc_train_5009", "prediction": "all x y.((Boat(x) & Boeing747(y)) -> MovesPeopleAcrossBodyOfWater(x,y))", "score": 0}
{"id": "eqasc_train_5010", "prediction": "all x.(Airplane(x) -> (AirTravel(x) & FastestTravel(x) & ProbablyBestForLongDistances(x)))", "score": 0}
{"id": "eqasc_train_5011", "prediction": "all x.(AirTravel(x) -> MovesPeopleAcrossBodyOfWater(x))", "score": 0}
{"id": "eqasc_train_5012", "prediction": "all x y.((Person(x) & Airplane(y)) -> FliesSafely(x,y))", "score": 0}
{"id": "eqasc_train_5013", "prediction": "all x y z.((Airplane(x) & Human(y) & BodyOfWater(z)) -> TransportsMillionsOfMoves(x,y,z))", "score": 0}
{"id": "eqasc_train_5014", "prediction": "all x.(JetAirplane(x) -> TakesFlight(x))", "score": 0}
{"id": "eqasc_train_5015", "prediction": "all x.(Jet(x) -> UsedForMovingPeople(x))", "score": 0}
{"id": "eqasc_train_5016", "prediction": "all x.(Airplane(x) -> (ResponsibleForAirPollution(x) & ResponsibleForNoise(x) & ResponsibleForWaterPollution(x)))", "score": 0}
{"id": "eqasc_train_5017", "prediction": "all x y.((Airplane(x) & Environment(y)) -> Pollutes(x,y))", "score": 0}
{"id": "eqasc_train_5018", "prediction": "all x.(Ocean(x) -> (LargeBodyOfSaltWater(x) & SeparatesDepositsOfLand(x)))", "score": 0}
{"id": "eqasc_train_5019", "prediction": "all x y.((Airplane(x) & SaltWater(y)) -> MovesPeople(x,y))", "score": 0}
{"id": "eqasc_train_5020", "prediction": "all x.(Airplane(x) -> FliesThroughCloud(x))", "score": 0}
{"id": "eqasc_train_5021", "prediction": "all x y.((MovingPeopleAcrossBodyOfWater(x) & Cloud(y)) -> CanFlyThrough(x,y))", "score": 0}
{"id": "eqasc_train_5022", "prediction": "all x.(Island(x) -> SurroundedByWater(x))", "score": 0}
{"id": "eqasc_train_5023", "prediction": "all x y z.((Person(x) & Airplane(y) & Island(z)) -> MovedTo(x,y,z))", "score": 0}
{"id": "eqasc_train_5024", "prediction": "all x.(Ocean(x) -> (VastBodyOfSaltWater(x)))", "score": 0}
{"id": "eqasc_train_5025", "prediction": "all x y.((Airplane(x) & Ocean(y)) -> MovesPeopleAcross(x,y))", "score": 0}
{"id": "eqasc_train_5026", "prediction": "all x.(JetAirplane(x) -> BurnsFuel(x))", "score": 0}
{"id": "eqasc_train_5027", "prediction": "all x y z.((Fuel(x) & Person(y) & BodyOfWater(z)) -> BurnedToMoveAcross(x,y,z))", "score": 0}
{"id": "eqasc_train_5028", "prediction": "all x.((Airplane(x) | Car(x)) -> EquippedWithEngine(x))", "score": 0}
{"id": "eqasc_train_5029", "prediction": "all x y.((Transportation(x) & EquippedWithEngines(x)) -> UsedForMovingPeopleAcrossBodyOfWater(x,y))", "score": 0}
{"id": "eqasc_train_5030", "prediction": "all x.(Consult(x) -> (HighFlyingJetAirplane(x) & MadeBy(x,y)))", "score": 0}
{"id": "eqasc_train_5031", "prediction": "all x y.((Jet(x) & Person(y)) -> UsedForMoving(x,y))", "score": 0}
{"id": "eqasc_train_5032", "prediction": "all x.(Kid(x) -> FascinatedWithAirplanes(x))", "score": 0}
{"id": "eqasc_train_5033", "prediction": "all x y.((Kid(x) & Person(y)) -> FascinatedWithMovingPeople(x,y))", "score": 0}
{"id": "eqasc_train_5034", "prediction": "all x.(Airplane(x) -> UsesGasTurbine(x))", "score": 0}
{"id": "eqasc_train_5035", "prediction": "all x y.((GasTurbine(x) & Person(y)) -> MovesAcrossBodyOfWater(x,y))", "score": 0}
{"id": "eqasc_train_5036", "prediction": "all x.(Ecosystem(x) -> GetsEnergyFromSunlight(x))", "score": 0}
{"id": "eqasc_train_5037", "prediction": "all x y.((Earth(x) & Sunlight(y)) -> HeatsAtmosphere(x,y))", "score": 0}
{"id": "eqasc_train_5038", "prediction": "all x.(Ecosystem(x) -> GetsEnergyFromHeatInAtmosphere(x))", "score": 0}
{"id": "eqasc_train_5039", "prediction": "all x y.((Organism(x) & Habitat(y)) -> (GetsEnergyFromSunlight(x,y) & GetsEnergyFromSunlight(x,y)))", "score": 0}
{"id": "eqasc_train_5040", "prediction": "all x.(Sunlight(x) -> (ElectromagneticEnergy(x) & ElectromagneticEnergy(x)))", "score": 0}
{"id": "eqasc_train_5041", "prediction": "all x.(Ecosystem(x) -> (GetsEnergyFromElectromagneticEnergy(x) & ElectromagneticEnergy(x)))", "score": 0}
{"id": "eqasc_train_5042", "prediction": "all x.(LifeLiving(x) -> InteractsInEcosystems(x))", "score": 0}
{"id": "eqasc_train_5043", "prediction": "all x.((LivingThing(x) & Interacting(x)) -> GetsEnergyFromSunlight(x))", "score": 0}
{"id": "eqasc_train_5044", "prediction": "all x.(SunlightGreenPlant(x) -> RequiresSunlight(x))", "score": 0}
{"id": "eqasc_train_5045", "prediction": "all x.(Plant(x) -> PartOfEcosystem(x))", "score": 0}
{"id": "eqasc_train_5046", "prediction": "all x y.((Sunlight(x) & Plant(y)) -> TurnedIntoEnergy(x,y))", "score": 0}
{"id": "eqasc_train_5047", "prediction": "all x.(Ecosystem(x) -> NeedsPlants(x))", "score": 0}
{"id": "eqasc_train_5048", "prediction": "all x.((Lake(x) | River(x)) -> ComplexEcosystem(x))", "score": 0}
{"id": "eqasc_train_5049", "prediction": "all x.(Lake(x) -> GetsEnergyFromSunlight(x))", "score": 0}
{"id": "eqasc_train_5050", "prediction": "all x.(Plant(x) -> UsesSunlightToMakeEnergy(x))", "score": 0}
{"id": "eqasc_train_5051", "prediction": "all x y.((Ecosystem(x) & Plant(y)) -> GetsEnergyFrom(x,y))", "score": 0}
{"id": "eqasc_train_5052", "prediction": "all x.(Ecosystem(x) -> (GetsEnergyFromElectromagnetism(x) & Electromagnetism(x)))", "score": 0}
{"id": "eqasc_train_5053", "prediction": "all x.(Plant(x) -> (ExhibitsPhototropism(x) | GrowsTowardsLightSource(x)))", "score": 0}
{"id": "eqasc_train_5054", "prediction": "all x.(Stem(x) -> PositivelyPhototropic(x))", "score": 0}
{"id": "eqasc_train_5055", "prediction": "all x y.((Stem(x) & LightSource(y)) -> GrowsTowards(x,y))", "score": 0}
{"id": "eqasc_train_5056", "prediction": "all x.(Electricity(x) -> (ProducesLight(x) & ProducesHeat(x)))", "score": 0}
{"id": "eqasc_train_5057", "prediction": "all x y.((Plant(x) & ElectricitySource(y)) -> MayGrowTowards(x,y))", "score": 0}
{"id": "eqasc_train_5058", "prediction": "all x.(Bamboo(x) -> ExhibitsPhototropism(x))", "score": 0}
{"id": "eqasc_train_5059", "prediction": "all x.((LightSource(x) & Sun(x) & MostArtificialLights(x)) -> ProducesUnpolarizedLight(x))", "score": 0}
{"id": "eqasc_train_5060", "prediction": "all x.(Plant(x) -> (ExhibitsPhototropism(x) | GrowsTowardsSunOrArtificialLight(x)))", "score": 0}
{"id": "eqasc_train_5061", "prediction": "all x.((Plant(x) & -Light(x)) -> Dies(x))", "score": 0}
{"id": "eqasc_train_5062", "prediction": "all x.((Plant(x) & -ExhibitsPhototropism(x)) -> Dies(x))", "score": 0}
{"id": "eqasc_train_5063", "prediction": "all x.(GreenPlant(x) -> UsesLightAsPrimaryEnergySource(x))", "score": 0}
{"id": "eqasc_train_5064", "prediction": "all x.(Phototropism(x) -> GrowsTowardsEnergyOfLight(x))", "score": 0}
{"id": "eqasc_train_5065", "prediction": "all x.(Legumes(x) -> GrowsTowardsLightSource(x))", "score": 0}
{"id": "eqasc_train_5066", "prediction": "all x.(Stem(x) -> GrowsTowardsLight(x))", "score": 0}
{"id": "eqasc_train_5067", "prediction": "all x.(Sun(x) -> BrilliantWhiteLightSource(x))", "score": 0}
{"id": "eqasc_train_5068", "prediction": "all x.(Plant(x) -> (ExhibitsPhototropism(x) | GrowsTowardsSun(x)))", "score": 0}
{"id": "eqasc_train_5069", "prediction": "all x.(Plant(x) -> (ShowsPhototropism(x) | GrowsTowardsSun(x)))", "score": 0}
{"id": "eqasc_train_5070", "prediction": "all x.(Root(x) -> NegativelyPhototropic(x))", "score": 0}
{"id": "eqasc_train_5071", "prediction": "all x y.((Root(x) & LightSource(y)) -> GrowsAwayFrom(x,y))", "score": 0}
{"id": "eqasc_train_5072", "prediction": "all x.((PottedPlant(x) & Season(x)) -> (Chrysanthemum(x) | Daisy(x) | Cyclomen(x)))", "score": 0}
{"id": "eqasc_train_5073", "prediction": "all x.(Daisy(x) -> ExhibitsPhototropism(x))", "score": 0}
{"id": "eqasc_train_5074", "prediction": "all x y.((Rain(x) & Erosion(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_train_5075", "prediction": "all x.(SoilErosion(x) -> (SoilWashed(x) | SoilBlownAway(x)))", "score": 0}
{"id": "eqasc_train_5076", "prediction": "all x y.((Rain(x) & Soil(y)) -> (CausesToBeWashed(x,y) | CausesToBeBlownAway(x,y)))", "score": 0}
{"id": "eqasc_train_5077", "prediction": "all x.(Erosion(x) -> (SculptsLandscape(x) & CreatesFantasticRockFormations(x)))", "score": 0}
{"id": "eqasc_train_5078", "prediction": "all x.(Rain(x) -> (CausesRockFormations(x) & SculptsLandscapes(x)))", "score": 0}
{"id": "eqasc_train_5079", "prediction": "all x.(Erosion(x) -> (BreaksApart(x) & MovesRocksAndSoil(x)))", "score": 0}
{"id": "eqasc_train_5080", "prediction": "all x y z.((Rain(x) & Rock(y) & Soil(z)) -> (CausesBreakingApart(x,y) & CausesMoving(x,z)))", "score": 0}
{"id": "eqasc_train_5081", "prediction": "all x.(LiquidPrecipitation(x) -> CausesErosion(x))", "score": 0}
{"id": "eqasc_train_5082", "prediction": "all x.(Precipitation(x) -> CausesErosion(x))", "score": 0}
{"id": "eqasc_train_5083", "prediction": "all x.(ErosionOfDunes(x) -> (ErosionOfBeach(x) & ErosionOfIsland(x)))", "score": 0}
{"id": "eqasc_train_5084", "prediction": "all x.(Rain(x) -> CanDestroyDunes(x))", "score": 0}
{"id": "eqasc_train_5085", "prediction": "all x y.((Rain(x) & Flood(y)) -> (ComesWith(x,y) & Comes(x,y)))", "score": 0}
{"id": "eqasc_train_5086", "prediction": "all x.(Rain(x) -> CausesLandslides(x))", "score": 0}
{"id": "eqasc_train_5087", "prediction": "(all x.(Landslide(x) -> Frequent(x)) & all y.(Erosion(y) -> Severe(y)))", "score": 0}
{"id": "eqasc_train_5088", "prediction": "all x y.((Rain(x) & LandLoss(y)) -> CausesLandslides(x,y))", "score": 0}
{"id": "eqasc_train_5089", "prediction": "all x.((Erosion(x) | Landslides(x)) -> Common(x))", "score": 0}
{"id": "eqasc_train_5090", "prediction": "all x.(Rain(x) -> CanLeadToLandslides(x))", "score": 0}
{"id": "eqasc_train_5091", "prediction": "all x.(ErosionOfRock(x) -> MakesNutrientsAvailable(x))", "score": 0}
{"id": "eqasc_train_5092", "prediction": "all x y.((Rain(x) & Nutrients(y)) -> CausesToBeAvailable(x,y))", "score": 0}
{"id": "eqasc_train_5093", "prediction": "all x.(Sediment(x) -> (SusceptibleToErosion(x) & Wind(x) & Rain(x)))", "score": 0}
{"id": "eqasc_train_5094", "prediction": "all x.(ExposedSoil(x) -> SusceptibleToDamageFromRain(x))", "score": 0}
{"id": "eqasc_train_5095", "prediction": "all x.(MoldSpore(x) -> NegativeImpactOnRespiratorySystem(x))", "score": 0}
{"id": "eqasc_train_5096", "prediction": "all x.(Sinusitis(x) -> PartOfUpperRespiratorySystem(x))", "score": 0}
{"id": "eqasc_train_5097", "prediction": "all x y.((MoldSpore(x) & Body(y)) -> NegativeImpactOnSinus(x,y))", "score": 0}
{"id": "eqasc_train_5098", "prediction": "all x.(MoldSpore(x) -> Microscopic(x))", "score": 0}
{"id": "eqasc_train_5099", "prediction": "all x.(MicroscopicOrganism(x) -> NegativeImpactOnRespiratorySystem(x))", "score": 0}
{"id": "eqasc_train_5100", "prediction": "all x y.((MoldSpore(x) & MoldSpore(y)) -> NegativeImpactOnSinus(x,y))", "score": 0}
{"id": "eqasc_train_5101", "prediction": "all x y.((Pulmonologist(x) & Lung(y)) -> Treats(x,y))", "score": 0}
{"id": "eqasc_train_5102", "prediction": "all x y.((Pulmonologist(x) & MoldSpore(y)) -> TreatsIssues(x,y))", "score": 0}
{"id": "eqasc_train_5103", "prediction": "all x y.((Pulmonologist(x) & Lung(y)) -> Treats(x,y))", "score": 0}
{"id": "eqasc_train_5104", "prediction": "all x y.((Pulmonologist(x) & MoldSpore(y)) -> TreatsNegativeImpact(x,y))", "score": 0}
{"id": "eqasc_train_5105", "prediction": "all x.(BreathingTree(x) -> RespiratorySystem(x))", "score": 0}
{"id": "eqasc_train_5106", "prediction": "all x.(MoldSpores(x) -> HardToBreathe(x))", "score": 0}
{"id": "eqasc_train_5107", "prediction": "all x.(Mildew(x) & MoldSpore(x))", "score": 0}
{"id": "eqasc_train_5108", "prediction": "all x.(Mildew(x) -> CanAffectRespiratorySystem(x))", "score": 0}
{"id": "eqasc_train_5109", "prediction": "all x y.((Mold(x) & Spore(y)) -> (ThrivesIn(x,y) & WaterDamagedFurniture(x) & ThrivesIn(x,y)))", "score": 0}
{"id": "eqasc_train_5110", "prediction": "all x.((Cafe(x) & WaterDamaged(x)) -> NegativeImpactOnRespiratorySystem(x))", "score": 0}
{"id": "eqasc_train_5111", "prediction": "all x.((RespiratorySystem(x) & Lungs(x) & Trachea(x) & Nash(x) & Cell(x)) -> MajorComponents(x))", "score": 0}
{"id": "eqasc_train_5112", "prediction": "all x.(MoldSpore(x) -> NegativeImpactOnLungs(x))", "score": 0}
{"id": "eqasc_train_5113", "prediction": "all x.(BlueMold(x) -> (Fungus(x) & SpreadByWindBornSpores(x)))", "score": 0}
{"id": "eqasc_train_5114", "prediction": "all x.((Fungus(x) & SpreadByWind(x)) -> NegativeImpactOnRespiratorySystem(x))", "score": 0}
{"id": "eqasc_train_5115", "prediction": "all x.(RespiratorySymptom(x) -> (DifficultBreathing(x) & Wheezing(x) & Stridor(x)))", "score": 0}
{"id": "eqasc_train_5116", "prediction": "all x.(MoldSpore(x) -> NegativeImpactOnBreathing(x))", "score": 0}
{"id": "eqasc_train_5117", "prediction": "all x y.((RespiratorySystem(x) & Body(y)) -> SuppliesOxygen(x,y))", "score": 0}
{"id": "eqasc_train_5118", "prediction": "all x.(MoldSpore(x) -> NegativeImpactOnSurvival(x))", "score": 0}
{"id": "eqasc_train_5119", "prediction": "all x.(Insect(x) -> (HasHeart(x) & HasRespiratorySystem(x)))", "score": 0}
{"id": "eqasc_train_5120", "prediction": "all x.(MoldSpore(x) -> NegativeImpactOnBreathing(x))", "score": 0}
{"id": "eqasc_train_5121", "prediction": "all x y.((MoldSpore(x) & HumanBody(y)) -> Treats(x,y))", "score": 0}
{"id": "eqasc_train_5122", "prediction": "all x.(Spot(x) -> DistributedByWind(x))", "score": 0}
{"id": "eqasc_train_5123", "prediction": "all x.(Wind(x) -> NegativeImpactOnRespiratorySystem(x))", "score": 0}
{"id": "eqasc_train_5124", "prediction": "all x y.((RubberBandSnapping(x) & RubberBand(y)) -> CausesParticlesToVibrate(x,y))", "score": 0}
{"id": "eqasc_train_5125", "prediction": "all x.(Sound(x) -> TravelsByVibration(x))", "score": 0}
{"id": "eqasc_train_5126", "prediction": "all x.((RubberBand(x) & Snaps(x)) -> CausesSound(x))", "score": 0}
{"id": "eqasc_train_5127", "prediction": "all x.(Sound(x) -> CreatedByVibrations(x))", "score": 0}
{"id": "eqasc_train_5128", "prediction": "all x y.((RubberBandSnapping(x) & Particle(y)) -> CausesSound(x,y))", "score": 0}
{"id": "eqasc_train_5129", "prediction": "all x.(Vibration(x) -> (CauseOfNoise(x) & LeadsToWear(x) & LeadsToFatigue(x)))", "score": 0}
{"id": "eqasc_train_5130", "prediction": "all x y.((SnappingRubberBand(x) & RubberBand(y)) -> CausesNoise(x,y))", "score": 0}
{"id": "eqasc_train_5131", "prediction": "all x y.((Heat(x) & Material(y)) -> CausesMoleculesToVibrate(x,y))", "score": 0}
{"id": "eqasc_train_5132", "prediction": "all x y.((RubberBandSnapping(x) & RubberBand(y)) -> CausesHeat(x,y))", "score": 0}
{"id": "eqasc_train_5133", "prediction": "all x.(SoundWaves(x) -> VibrationInMatter(x))", "score": 0}
{"id": "eqasc_train_5134", "prediction": "all x y z.((RubberBandSnapping(x) & ParticlesInRubberBand(y) & SoundWaves(z)) -> Causes(x,y,z))", "score": 0}
{"id": "eqasc_train_5135", "prediction": "all x.(Vibration(x) -> FrequencyWave(x))", "score": 0}
{"id": "eqasc_train_5136", "prediction": "all x y.((RubberBandSnapping(x) & RubberBandSnapping(y)) -> CausesFrequencyWave(x,y))", "score": 0}
{"id": "eqasc_train_5137", "prediction": "all x.(Elastic(x) -> (RubberBand(x) & ConnectsUpperAndLowerBraces(x)))", "score": 0}
{"id": "eqasc_train_5138", "prediction": "all x.(ElectricSnapping(x) -> CausesParticlesToVibrate(x))", "score": 0}
{"id": "eqasc_train_5139", "prediction": "all x.(Convection(x) -> (TransmissionOfHeat(x) & MassMovementOfHeatedParticles(x)))", "score": 0}
{"id": "eqasc_train_5140", "prediction": "all x y.((RubberBandSnapping(x) & RubberBandSnapping(y)) -> HeatsUp(x,y))", "score": 0}
{"id": "eqasc_train_5141", "prediction": "all x.((RubberBand(x) & StretchedTooThin(x)) -> Snaps(x))", "score": 0}
{"id": "eqasc_train_5142", "prediction": "all x.((RubberBand(x) & StretchedTooThin(x)) -> HasVibration(x))", "score": 0}
{"id": "eqasc_train_5143", "prediction": "all x.((Piano(x) | Instrument(x)) -> ProducesDampFocusedVibrations(x))", "score": 0}
{"id": "eqasc_train_5144", "prediction": "all x y z.((RubberBandSnapping(x) & RubberBand(y) & Piano(z)) -> CausesParticlesToDoWhatPianoDoes(y,z))", "score": 0}
{"id": "eqasc_train_5145", "prediction": "all x y z.((RubberBandSnapping(x) & ParticlesInRubberBand(y) & RubberBand(z)) -> CausesCreationOfSound(x,y,z))", "score": 0}
{"id": "eqasc_train_5146", "prediction": "all x.(RubberBand(x) -> AvailableInLaboratory(x))", "score": 0}
{"id": "eqasc_train_5147", "prediction": "all x.((AvailableInLaboratory(x) & ParticlesInLaboratory(x)) -> VibrateWhenSnapping(x))", "score": 0}
{"id": "eqasc_train_5148", "prediction": "all x y.((ElasticBand(x) & StretchedTooThin(y)) -> Vibrate(x))", "score": 0}
{"id": "eqasc_train_5149", "prediction": "all x y.((RubberBandSnapping(x) & RubberBand(y)) -> CausesToHeat(x,y))", "score": 0}
{"id": "eqasc_train_5150", "prediction": "all x.(Evolution(x) -> ChangeInCharacteristicsOfLivingThings(x))", "score": 0}
{"id": "eqasc_train_5151", "prediction": "all x y.((Microevolution(x) & Organism(y)) -> AdaptsToEnvironment(x,y))", "score": 0}
{"id": "eqasc_train_5152", "prediction": "all x y.((Organism(x) & EnvironmentChange(y)) -> AdaptsTo(x,y))", "score": 0}
{"id": "eqasc_train_5153", "prediction": "all x.(PhysicalCharacteristics(x) -> (GeneticTreatment(x) & inheritedFromParents(x)))", "score": 0}
{"id": "eqasc_train_5154", "prediction": "all x.(Evolution(x) -> ChangeInGeneticTreatmentsOfLivingThings(x))", "score": 0}
{"id": "eqasc_train_5155", "prediction": "all x.(Characteristic(x) -> (Shape(x) | Color(x) | Size(x) | Texture(x)))", "score": 0}
{"id": "eqasc_train_5156", "prediction": "all x y.((Evolution(x) & LivingThing(y)) -> ChangesTraitsOverTime(x,y))", "score": 0}
{"id": "eqasc_train_5157", "prediction": "(all x.(BiologicalEvolution(x) -> Slow(x)) & all y.(CorporateEvolution(y) -> Fast(y)))", "score": 0}
{"id": "eqasc_train_5158", "prediction": "all x.((Causes(x) & LivingThing(x)) -> Slow(x))", "score": 0}
{"id": "eqasc_train_5159", "prediction": "all x.(Environment(x) -> CausesAdaptation(x))", "score": 0}
{"id": "eqasc_train_5160", "prediction": "all x.(Environment(x) -> CausesEvolution(x))", "score": 0}
{"id": "eqasc_train_5161", "prediction": "all x.(Evolution(x) -> Adaptation(x))", "score": 0}
{"id": "eqasc_train_5162", "prediction": "all x y z.((AdaptationProcess(x) & LivingThing(y) & Time(z)) -> ChangeInCharacteristicsOverTime(x,y,z))", "score": 0}
{"id": "eqasc_train_5163", "prediction": "all x.(Tree(x) -> LargestOfLivingThings(x))", "score": 0}
{"id": "eqasc_train_5164", "prediction": "all x y.((Evolution(x) & Tree(y)) -> ChangesCharacteristicsOverTime(x,y))", "score": 0}
{"id": "eqasc_train_5165", "prediction": "all x y z.((Evolution(x) & Organism(y) & Time(z)) -> ChangeInCharacteristicsOverTime(x,y,z))", "score": 0}
{"id": "eqasc_train_5166", "prediction": "all x.(Evolution(x) -> ReliesOnRawnChanceActs(x))", "score": 0}
{"id": "eqasc_train_5167", "prediction": "all x y.((Mutation(x) & LivingThing(y)) -> ChangesCharacteristicsOverTime(x,y))", "score": 0}
{"id": "eqasc_train_5168", "prediction": "all x.(Evolution(x) -> StudiesLivingThingsWithTime(x))", "score": 0}
{"id": "eqasc_train_5169", "prediction": "all x y.((Evolution(x) & Time(y)) -> StudiesCharacteristics(x,y))", "score": 0}
{"id": "eqasc_train_5170", "prediction": "all x y.((Electricity(x) & ElectricalDevice(y)) -> UsedAsEnergySource(x,y))", "score": 0}
{"id": "eqasc_train_5171", "prediction": "all x.(Sunlight(x) -> ConvertedToElectricity(x))", "score": 0}
{"id": "eqasc_train_5172", "prediction": "all x.(Sunlight(x) -> EnergySource(x))", "score": 0}
{"id": "eqasc_train_5173", "prediction": "all x y.((Electricity(x) & Television(y)) -> UsedAsEnergySource(x,y))", "score": 0}
{"id": "eqasc_train_5174", "prediction": "all x.((Device(x) & PluggedIntoElectricalOutlets(x)) -> CommunicatesWithOtherDevices(x))", "score": 0}
{"id": "eqasc_train_5175", "prediction": "all x y.((Electricity(x) & ElectricalOutlet(y)) -> UsedAsEnergySource(x,y))", "score": 0}
{"id": "eqasc_train_5176", "prediction": "all x.(Computer(x) -> (ElectronicDevice(x) & ElectricalTerms(x)))", "score": 0}
{"id": "eqasc_train_5177", "prediction": "all x y.((Electricity(x) & Computer(y)) -> UsedForEnergy(x,y))", "score": 0}
{"id": "eqasc_train_5178", "prediction": "all x.(ElectricalEngineer(x) -> (WorksOnPowerPlants(x) & WorksOnComputers(x) & WorksOnElectricalDevices(x)))", "score": 0}
{"id": "eqasc_train_5179", "prediction": "all x.(Computer(x) -> UsesElectricityAsEnergySource(x))", "score": 0}
{"id": "eqasc_train_5180", "prediction": "all x.((Device(x) & (Pager(x) | CellPhone(x))) -> -Banned(x))", "score": 0}
{"id": "eqasc_train_5181", "prediction": "all x y.((Pager(x) & Pager(y)) -> UsesElectricityAsEnergySource(x,y))", "score": 0}
{"id": "eqasc_train_5182", "prediction": "all x.(ElectricalSource(x) -> PotentialHazard(x))", "score": 0}
{"id": "eqasc_train_5183", "prediction": "all x.(Electricity(x) -> Hazard(x))", "score": 0}
{"id": "eqasc_train_5184", "prediction": "all x.(Electricity(x) -> (MovesWellThroughWires(x) & MovesWellThroughWater(x)))", "score": 0}
{"id": "eqasc_train_5185", "prediction": "all x y.((EnergySource(x) & Device(y)) -> MovesWellThroughWiresAndWater(x,y))", "score": 0}
{"id": "eqasc_train_5186", "prediction": "all x y.((BreathingMask(x) & HarmfulParticles(y)) -> KeepsFromEnteringRespiratorySystem(x,y))", "score": 0}
{"id": "eqasc_train_5187", "prediction": "all x y.((Inhaled(x) & Particles(y)) -> (LocatesInRespiratorySystem(y,x) & CausesOrAggravatesHealthProblems(y)))", "score": 0}
{"id": "eqasc_train_5188", "prediction": "all x.(BreathingMask(x) -> (KeepsHarmfulParticlesInhaled(x) & CausesHealthProblems(x)))", "score": 0}
{"id": "eqasc_train_5189", "prediction": "all x.((Mold(x) & GrowsInHouse(x)) -> EmitsParticles(x))", "score": 0}
{"id": "eqasc_train_5190", "prediction": "all x.(BreathingMask(x) -> KeepsMoldFromEnteringRespiratorySystem(x))", "score": 0}
{"id": "eqasc_train_5191", "prediction": "all x.(Oxygen(x) -> (EntersRespiratorySystem(x) & ThroughMouth(x) & ThroughNasal(x)))", "score": 0}
{"id": "eqasc_train_5192", "prediction": "all x.(BreathingMaske(x) -> (KeepsHarmfulParticlesFromEntering(x) & KeepsParticlesFromEntering(x)))", "score": 0}
{"id": "eqasc_train_5193", "prediction": "all x.(SulfateParticle(x) -> IrritatesLowerRespiratorySystem(x))", "score": 0}
{"id": "eqasc_train_5194", "prediction": "all x.(BreathingMask(x) -> KeepsOutSulfateParticles(x))", "score": 0}
{"id": "eqasc_train_5195", "prediction": "all x.(Smoke(x) -> HarmfulToRespiratorySystem(x))", "score": 0}
{"id": "eqasc_train_5196", "prediction": "all x y.((BreathingMask(x) & Smoke(y)) -> KeepsOutOfRespiratorySystem(x,y))", "score": 0}
{"id": "eqasc_train_5197", "prediction": "all x.(RespiratoryDefense(x) -> ImmuneSystem(x))", "score": 0}
{"id": "eqasc_train_5198", "prediction": "all x y.((ImmuneSystem(x) & Body(y)) -> DefenseAgainstHarmfulParticles(x,y))", "score": 0}
{"id": "eqasc_train_5199", "prediction": "all x.((Particle(x) & Smaller(x)) -> EntersRespiratorySystem(x))", "score": 0}
{"id": "eqasc_train_5200", "prediction": "all x.(BreathingMask(x) -> KeepsSmallerParticlesOutOfLungs(x))", "score": 0}
{"id": "eqasc_train_5201", "prediction": "all x.(Aerosol(x) -> (TinyParticles(x) & SuspendedInAir(x)))", "score": 0}
{"id": "eqasc_train_5202", "prediction": "all x y.((BreathingMask(x) & Aerosol(y)) -> KeepsFromEnteringRespiratorySystem(x,y))", "score": 0}
{"id": "eqasc_train_5203", "prediction": "all x y.((BreathingMask(x) & HarmfulParticles(y)) -> KeepsFromEnteringLungs(x,y))", "score": 0}
{"id": "eqasc_train_5204", "prediction": "all x.(AirPollution(x) -> (BuildupOfHarmfulGasesAndParticles(x) & InAir(x)))", "score": 0}
{"id": "eqasc_train_5205", "prediction": "all x.(BreathingMask(x) -> (KeepsAirPollution(x) & FromRespiratorySystem(x)))", "score": 0}
{"id": "eqasc_train_5206", "prediction": "all x.(Allergie(x) -> (ReactionOfImmuneSystemToHarmfulParticles(x) & InAir(x)))", "score": 0}
{"id": "eqasc_train_5207", "prediction": "all x.(BreathingMask(x) -> PreventsAllergyReaction(x))", "score": 0}
{"id": "eqasc_train_5208", "prediction": "all x.((Behavior(x) & ImprovesFitness(x)) -> IncreasesThroughNaturalSelection(x))", "score": 0}
{"id": "eqasc_train_5209", "prediction": "all x y.((Animal(x) & Animal(y)) -> (AbilityToSurvive(x,y) & AbilityToReproduce(x,y)))", "score": 0}
{"id": "eqasc_train_5210", "prediction": "all x y.((Behaviors(x) & Behaviors(y) & ImprovesTraits(x,y) & Animal(y) & SurvivesAndReproduces(x,y)) -> NaturalSelectionIncreases(x,y))", "score": 0}
{"id": "eqasc_train_5211", "prediction": "all x.(Darwinism(x) -> (SelectionTheory(x) & Striking(x)))", "score": 0}
{"id": "eqasc_train_5212", "prediction": "all x.((Behaviors(x) & ImproveFitness(x) & Darwinism(x)) -> IncreasesByIncrease(x))", "score": 0}
{"id": "eqasc_train_5213", "prediction": "all x.(Adaptation(x) -> NaturalSelection(x))", "score": 0}
{"id": "eqasc_train_5214", "prediction": "all x.((Behavior(x) & ImprovesFitness(x)) -> IncreasesThroughAdaptation(x))", "score": 0}
{"id": "eqasc_train_5215", "prediction": "all x.(NaturalSelection(x) -> EvolutionMechanism(x))", "score": 0}
{"id": "eqasc_train_5216", "prediction": "all x y.((EvolutionProcess(x) & Behavior(y)) -> IncreasesAndImprovesFitness(x,y))", "score": 0}
{"id": "eqasc_train_5217", "prediction": "all x.(AdaptationTreatment(x) -> (ContributesToIndividualFitness(x) & ContributesToAnimalGeneticResources(x)))", "score": 0}
{"id": "eqasc_train_5218", "prediction": "all x.(Behavior(x) -> ImprovesAnimalGeneticResources(x))", "score": 0}
{"id": "eqasc_train_5219", "prediction": "all x.((Behavior(x) & ImprovesFitness(x)) -> IncreasesThroughEvolution(x))", "score": 0}
{"id": "eqasc_train_5220", "prediction": "all x.((Behaviors(x) & ImproveFitness(x)) -> IncreasesThroughEvolution(x))", "score": 0}
{"id": "eqasc_train_5221", "prediction": "all x.(OrganismBehavior(x) -> Evolutionary(x))", "score": 0}
{"id": "eqasc_train_5222", "prediction": "all x.(Organism(x) -> EvolutionResult(x))", "score": 0}
{"id": "eqasc_train_5223", "prediction": "all x.(NaturalSelection(x) -> DifferentialReproduction(x))", "score": 0}
{"id": "eqasc_train_5224", "prediction": "all x.((Behavior(x) & ImprovesFitness(x)) -> IncreasesThroughDifferentialReproduction(x))", "score": 0}
{"id": "eqasc_train_5225", "prediction": "all x.(Cell(x) -> (exists y.(DNAMutation(y) & Fixes(x,y))))", "score": 0}
{"id": "eqasc_train_5226", "prediction": "all x.(Mutation(x) -> (OccursIn(x,DDNA) | OccursIn(x,GeneticMaterial)))", "score": 0}
{"id": "eqasc_train_5227", "prediction": "all x.(GeneticMaterial(x) -> HasMutation(x))", "score": 0}
{"id": "eqasc_train_5228", "prediction": "(DamagedDNA(DamagedDNA) & Duplicated(DamagedDNA)) -> CausesMutation(DamagedDNA))", "score": -1}
{"id": "eqasc_train_5229", "prediction": "all x.(Cell(x) -> (HasMultipleRepairMechanisms(x) & FixesDamagedDNA(x)))", "score": 0}
{"id": "eqasc_train_5230", "prediction": "all x.((DNADamage(x) & Mutations(x) & Cancer(x)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_train_5231", "prediction": "all x y.((Cell(x) & Cancer(y)) -> HasMultipleRepairMechanisms(x,y))", "score": 0}
{"id": "eqasc_train_5232", "prediction": "all x.(DNAExcisionRepair(x) -> MajorCellularResponseToDNADamage(x))", "score": 0}
{"id": "eqasc_train_5233", "prediction": "all x y.((Excision(x) & DnaMutation(y)) -> CanFix(x,y))", "score": 0}
{"id": "eqasc_train_5234", "prediction": "all x.(Cell(x) -> (exists y.(DeoxyribonucleicAcid(y) & Requires(x,y))))", "score": 0}
{"id": "eqasc_train_5235", "prediction": "all x.(GeneticMutations(x) -> GeneticMutationsOccur(x))", "score": 0}
{"id": "eqasc_train_5236", "prediction": "all x.(Cell(x) -> HasRepairMechanisms(x))", "score": 0}
{"id": "eqasc_train_5237", "prediction": "all x.(DNADamage(x) -> Mutation(x))", "score": 0}
{"id": "eqasc_train_5238", "prediction": "all x y.((Cell(x) & DNA(y)) -> HasMultipleRepairMechanisms(x,y))", "score": 0}
{"id": "eqasc_train_5239", "prediction": "all x.(Cell(x) -> (exists y.(RepairMechanism(y) & Repairs(x,y))))", "score": 0}
{"id": "eqasc_train_5240", "prediction": "all x.(Cell(x) -> (exists y.(RepairMechanism(y) & DamagedDNADuplication(y)) & Has(x,y))))", "score": -1}
{"id": "eqasc_train_5241", "prediction": "all x.(Virus(x) -> Nonliving(x))", "score": 0}
{"id": "eqasc_train_5242", "prediction": "all x.(Human(x) -> (AcquiresInfectionFromContact(x,infectedAnimals) | AcquiresInfectionFromContact(x,caskets) | AcquiresInfectionFromContact(x,nonlivingMaterial)))", "score": 0}
{"id": "eqasc_train_5243", "prediction": "all x y.((Virus(x) & InfectedAnimal(y)) -> AcquiredFromContact(x,y))", "score": 0}
{"id": "eqasc_train_5244", "prediction": "all x.((Virus(x) & LikeHIV(x)) -> BallShape(x))", "score": 0}
{"id": "eqasc_train_5245", "prediction": "all x.((HIV(x) & NonLiving(x)) -> NonLiving(x))", "score": 0}
{"id": "eqasc_train_5246", "prediction": "all x.((SmallestAgentOfDisease(x) & Nonliving(x)) -> Nonliving(x))", "score": 1}
{"id": "eqasc_train_5247", "prediction": "all x.(InfluenzaVirus(x) -> (NegativeStringRNAVirus(x) & SegmentedGenome(x)))", "score": 0}
{"id": "eqasc_train_5248", "prediction": "all x.(Influenza(x) -> Nonliving(x))", "score": 0}
{"id": "eqasc_train_5249", "prediction": "all x.(Virus(x) -> (Acellular(x) & LivesOnMaterialsOfOtherLife(x)))", "score": 0}
{"id": "eqasc_train_5250", "prediction": "all x.(AcellularOrganism(x) -> NeedsLivingHost(x))", "score": 0}
{"id": "eqasc_train_5251", "prediction": "all x.(Herpes(x) -> Nonliving(x))", "score": 0}
{"id": "eqasc_train_5252", "prediction": "all x.((Matter(x) & Living(x) & Nonliving(x)) -> MadeUpOfAtoms(x))", "score": 0}
{"id": "eqasc_train_5253", "prediction": "all x.(Virus(x) -> MadeUpOfAtoms(x))", "score": 0}
{"id": "eqasc_train_5254", "prediction": "all x.((InfluenzaOrthovirus(x) & NonLiving(x)) -> (InfluenzaOrthovirus(x) & NonLiving(x)))", "score": 0}
{"id": "eqasc_train_5255", "prediction": "all x.(Smallpox(x) -> Nonliving(x))", "score": 0}
{"id": "eqasc_train_5256", "prediction": "all x.(Virus(x) -> MadeUpOfAtoms(x))", "score": 0}
{"id": "eqasc_train_5257", "prediction": "all x.((Agent(x) & Smallest(x)) -> Nonliving(x))", "score": 0}
{"id": "eqasc_train_5258", "prediction": "all x.((VariolaMajor(x) & CausesSmallpox(x)) -> PotentialBioterrorismAgent(x))", "score": 0}
{"id": "eqasc_train_5259", "prediction": "all x.(Smallpox(x) -> (NonlivingCause(x) & UsuallyCause(x,Smallpox)))", "score": 0}
{"id": "eqasc_train_5260", "prediction": "all x.((SimplestOrganism(x) & Known(x)) -> Nonliving(x))", "score": 0}
{"id": "eqasc_train_5261", "prediction": "all x.(Monotreme(x) -> (Mammal(x) & LaysEggs(x)))", "score": 0}
{"id": "eqasc_train_5262", "prediction": "all x.(Platypus(x) -> ReproducesByLayingEggs(x))", "score": 0}
{"id": "eqasc_train_5263", "prediction": "all x.(Echidna(x) -> (EggLayingMammal(x) & LikePlatypus(x)))", "score": 0}
{"id": "eqasc_train_5264", "prediction": "all x.(Platypus(x) -> Monotreme(x))", "score": 0}
{"id": "eqasc_train_5265", "prediction": "all x.((Egg(x) & ReadyToHave(x)) -> Hatches(x))", "score": 0}
{"id": "eqasc_train_5266", "prediction": "all x.((YoungOfMonotreme(x) & Hatched(x)) -> Hatched(x))", "score": 0}
{"id": "eqasc_train_5267", "prediction": "all x.(Plactus(x) -> (Mammal(x) & LaysEggs(x)))", "score": 0}
{"id": "eqasc_train_5268", "prediction": "all x.(Plactus(x) -> Monotreme(x))", "score": 0}
{"id": "eqasc_train_5269", "prediction": "all x.(Plutypuse(x) -> ReproducesByLayingEggs(x))", "score": 0}
{"id": "eqasc_train_5270", "prediction": "all x.(Echidna(x) -> ReproducesByLayingEggs(x))", "score": 0}
{"id": "eqasc_train_5271", "prediction": "all x.(Monotreme(x) -> (Duckbill(x) & Platypus(x)))", "score": 0}
{"id": "eqasc_train_5272", "prediction": "all x.(DuckbillPlatypus(x) -> (Mammal(x) & LaysEggs(x)))", "score": 0}
{"id": "eqasc_train_5273", "prediction": "all x y.((Mammal(x) & Mammal(y)) -> (Plutypus(x) | Echidna(x)) & LaysEggs(x)))", "score": -1}
{"id": "eqasc_train_5274", "prediction": "all x.(Echidna(x) -> (Monotreme(x) | EggLayingMammal(x)))", "score": 0}
{"id": "eqasc_train_5275", "prediction": "all x.(Echidna(x) -> ReproducesByLayingEggs(x))", "score": 0}
{"id": "eqasc_train_5276", "prediction": "all x.((Mammal(x) & FemaleMonotreme(x)) -> -HasTeats(x))", "score": 0}
{"id": "eqasc_train_5277", "prediction": "all x.(FemaleMonotreme(x) -> (ReproducesByLayingEggs(x) & -HasTeats(x)))", "score": 0}
{"id": "eqasc_train_5278", "prediction": "all x.((CellWalls(x) & Relax(x)) -> DilationOccurs(x))", "score": 0}
{"id": "eqasc_train_5279", "prediction": "all x.(Dilation(x) -> Uncomfortable(x))", "score": 0}
{"id": "eqasc_train_5280", "prediction": "all x.((CellWalls(x) & Relax(x)) -> Uncomfortable(x))", "score": 0}
{"id": "eqasc_train_5281", "prediction": "all x y z.((BloodVessel(x) & Skin(y) & BloodFlow(z)) -> (Dilates(x) & Increases(z) & Relaxes(z)))", "score": 0}
{"id": "eqasc_train_5282", "prediction": "all x.(CellWall(x) -> (Relax(x) & IncreaseFlowOfBlood(x)))", "score": 0}
{"id": "eqasc_train_5283", "prediction": "all x.(PlantCell(x) -> EncasedByCellWall(x))", "score": 0}
{"id": "eqasc_train_5284", "prediction": "all x y.((Encasing(x) & PlantCell(y) & Relaxes(x,y)) -> DilationOccurs(x))", "score": 0}
{"id": "eqasc_train_5285", "prediction": "all x.(Dilatation(x) -> (WidesCervix(x) & UsesProgressivelyWideMetalRods(x)))", "score": 0}
{"id": "eqasc_train_5286", "prediction": "all x.((CellWallsRelaxation(x) & CellWallsRelaxation(x)) -> Widens(x))", "score": 0}
{"id": "eqasc_train_5287", "prediction": "all x.((OxygenLevelDecreases(x) & BloodVessels(x)) -> DilatationOccurs(x))", "score": 0}
{"id": "eqasc_train_5288", "prediction": "all x.(DecreasedOxygenLevels(x) -> (DilatesBloodVessels(x) & RelaxesCellWalls(x)))", "score": 0}
{"id": "eqasc_train_5289", "prediction": "all x.(Relaxation(x) -> (PromotesRelaxation(x) & EasesTension(x)))", "score": 0}
{"id": "eqasc_train_5290", "prediction": "all x.((CellWallTension(x) & Eased(x)) -> Dilation(x))", "score": 0}
{"id": "eqasc_train_5291", "prediction": "all x y.((Larger(x) & Dilated(x) & Smaller(y) & Contracted(y)) -> MoreAttractive(x,y))", "score": 0}
{"id": "eqasc_train_5292", "prediction": "all x y.((Pupil(x) & CellWallsRelax(y)) -> Larger(x,y))", "score": 0}
{"id": "eqasc_train_5293", "prediction": "all x.((BloodFlow(x) & VitaminE(x)) -> (Dilates(x) | Expands(x))))", "score": -1}
{"id": "eqasc_train_5294", "prediction": "all x.((CellWalls(x) & Relax(x)) -> Expand(x))", "score": 0}
{"id": "eqasc_train_5295", "prediction": "all x.(Aneurysm(x) -> DilationOfBloodVessel(x))", "score": 0}
{"id": "eqasc_train_5296", "prediction": "all x.(Aneurysm(x) -> (CausedByRelaxation(x) & CellWallsOfBloodVessels(x)))", "score": 0}
{"id": "eqasc_train_5297", "prediction": "all x.(Aneurysm(x) -> (Dilation(x) | Bubble(x)) & OccursInWallOfArtery(x)))", "score": -1}
{"id": "eqasc_train_5298", "prediction": "all x.(Artery(x) -> RelaxedByDilation(x))", "score": 0}
{"id": "eqasc_train_5299", "prediction": "all x.(CellWall(x) -> (RigidStructure(x) & SurroundsPlantCell(x)))", "score": 0}
{"id": "eqasc_train_5300", "prediction": "all x.((RigidStructure(x) & SurroundsPlantCell(x)) -> Relaxes(x))", "score": 0}
{"id": "eqasc_train_5301", "prediction": "all x y.((Loosely(x) & LegMuscle(y)) -> (EaseUp(y) & RelaxShoulders(y)))", "score": 0}
{"id": "eqasc_train_5302", "prediction": "all x.((CellWalls(x) & EaseUp(x)) -> DilationOccurs(x))", "score": 0}
{"id": "eqasc_train_5303", "prediction": "all x.(Animal(x) -> -CellWalls(x))", "score": 0}
{"id": "eqasc_train_5304", "prediction": "all x y.((Cell(x) & Animal(y) & -HasRelaxations(y)) -> DilationOccurs(x,y))", "score": 0}
{"id": "eqasc_train_5305", "prediction": "all x.((DecreaseInLightIntensity(x) & CausesDilationOfPupils(x)) -> CausesDilationOfPupils(x))", "score": 0}
{"id": "eqasc_train_5306", "prediction": "all x.(DecreasedLightIntensity(x) -> CellWallsRelax(x))", "score": 0}
{"id": "eqasc_train_5307", "prediction": "all x.(Aneurism(x) -> DilationOfBloodVessels(x))", "score": 0}
{"id": "eqasc_train_5308", "prediction": "all x.((CellWalls(x) & Relax(x)) -> Neurisms(x))", "score": 0}
{"id": "eqasc_train_5309", "prediction": "all x y.((Fire(x) & Oxygen(y)) -> RequiresToBurn(x,y))", "score": 0}
{"id": "eqasc_train_5310", "prediction": "all x.(VacuumOfSpace(x) -> -OxygenToBurn(x))", "score": 0}
{"id": "eqasc_train_5311", "prediction": "all x.(Fire(x) -> -BurnsInVacuumOfSpace(x))", "score": 0}
{"id": "eqasc_train_5312", "prediction": "all x.(Fire(x) -> (RequiresOxygen(x) & RequiresAir(x)))", "score": 0}
{"id": "eqasc_train_5313", "prediction": "all x y.((Fire(x) & Air(y)) -> NeedsToBurn(x,y))", "score": 0}
{"id": "eqasc_train_5314", "prediction": "all x.((Fire(x) & Space(x)) -> -PossibleIn(x,Space))", "score": 0}
{"id": "eqasc_train_5315", "prediction": "(-GaseousOxygen(Moon) & BoneDry(Moon))", "score": 0}
{"id": "eqasc_train_5316", "prediction": "all x.(Fire(x) -> -BurnsNaturallyAboveMoonSurface(x))", "score": 0}
{"id": "eqasc_train_5317", "prediction": "all x.(Oxygen(x) -> (HasEightProtons(x) & HasEightElectrons(x)))", "score": 0}
{"id": "eqasc_train_5318", "prediction": "all x.((Fire(x) & RequiresExactEightProtons(x)) -> Burns(x))", "score": 0}
{"id": "eqasc_train_5319", "prediction": "all x.(Combustion(x) -> Burning(x))", "score": 0}
{"id": "eqasc_train_5320", "prediction": "all x y.((Fire(x) & Oxygen(y)) -> RequiresToCombust(x,y))", "score": 0}
{"id": "eqasc_train_5321", "prediction": "all x.(Building(x) -> DismantledByFire(x))", "score": 0}
{"id": "eqasc_train_5322", "prediction": "all x y.((Building(x) & Building(y)) -> Burns(x,y))", "score": 0}
{"id": "eqasc_train_5323", "prediction": "all x.((OxygenEnrichedAir(x) & CombustibleMaterials(x)) -> FireHazard(x))", "score": 0}
{"id": "eqasc_train_5324", "prediction": "all x.((Oxygen(x) & Present(x)) -> GreaterBurnRate(x))", "score": 0}
{"id": "eqasc_train_5325", "prediction": "all x.((OxygenRemoved(x) & FireSmothered(x)) -> Removed(x))", "score": 0}
{"id": "eqasc_train_5326", "prediction": "all x y.((Fire(x) & Fire(y) & CutsOffRequired(x,y)) -> Smothers(x,y))", "score": 0}
{"id": "eqasc_train_5327", "prediction": "all x.((Photosynthesis(x) & ByProductOf(x,Oxygen)) -> Produces(x,Oxygen))", "score": 0}
{"id": "eqasc_train_5328", "prediction": "all x.(Fire(x) -> RequiresByProductOfPhotosynthesis(x))", "score": 0}
{"id": "eqasc_train_5329", "prediction": "all x y.((Smoke(x) & Fire(y)) -> (ContainsHeat(x,y) & ContainsProductsOfBurning(x,y)))", "score": 0}
{"id": "eqasc_train_5330", "prediction": "all x.(Smoke(x) -> ProductOfOxygenBurned(x))", "score": 0}
{"id": "eqasc_train_5331", "prediction": "all x y.((CreatingPaper(x) & Tree(y)) -> RequiresCuttingDown(x,y))", "score": 0}
{"id": "eqasc_train_5332", "prediction": "all x.(CreatingPaper(x) -> DisruptsRainforests(x))", "score": 0}
{"id": "eqasc_train_5333", "prediction": "all x y.((Deforestation(x) & Tree(y) & CutDownInRainforest(y,x)) -> TakesPlace(x,y))", "score": 0}
{"id": "eqasc_train_5334", "prediction": "all x.(CreatingPaper(x) -> CanLeadToDeforestation(x))", "score": 0}
{"id": "eqasc_train_5335", "prediction": "all x.(SavesTrees(x) -> StopsGlobalWarming(x))", "score": 0}
{"id": "eqasc_train_5336", "prediction": "all x.((ReductionsInPaperProduction(x) & StopGlobalWarming(x)) -> ReducesInPaperProduction(x))", "score": 0}
{"id": "eqasc_train_5337", "prediction": "all x.(Tree(x) -> GrowsToBeCutDown(x))", "score": 0}
{"id": "eqasc_train_5338", "prediction": "all x.(Tree(x) -> GrowsForPaper(x))", "score": 0}
{"id": "eqasc_train_5339", "prediction": "all x.(Tree(x) -> (Epiphyte(x) & HostTree(x)))", "score": 0}
{"id": "eqasc_train_5340", "prediction": "all x.(Ephphyte(x) -> (LeadsToPaperProduction(x) & ProducesPaper(x)))", "score": 0}
{"id": "eqasc_train_5341", "prediction": "all x.(Tree(x) -> (CleansAir(x) & CoolsAir(x)))", "score": 0}
{"id": "eqasc_train_5342", "prediction": "all x.(CreatingPaper(x) -> MakesAirDirtier(x))", "score": 0}
{"id": "eqasc_train_5343", "prediction": "all x.(CreatingPaper(x) -> MayCauseDestroyingLife(x))", "score": 0}
{"id": "eqasc_train_5344", "prediction": "all x.(PulpedWood(x) -> UsedToMakePaper(x))", "score": 0}
{"id": "eqasc_train_5345", "prediction": "all x.(PulpedWood(x) -> RequiresCuttingDownTrees(x))", "score": 0}
{"id": "eqasc_train_5346", "prediction": "all x.(Zooplankton(x) -> (TinyAnimal(x) & FeedsOnPhytoplankton(x)))", "score": 0}
{"id": "eqasc_train_5347", "prediction": "all x y z.((AnimalPlankton(x) & PlantPlankton(y) & AnimalPlankton(z)) -> FeedsOnPlankton(x,y,z))", "score": 0}
{"id": "eqasc_train_5348", "prediction": "all x.(MinutePlant(x) -> Phytoplankton(x))", "score": 0}
{"id": "eqasc_train_5349", "prediction": "all x y.((Zooplankton(x) & MinutePlant(y)) -> FeedsOn(x,y))", "score": 0}
{"id": "eqasc_train_5350", "prediction": "all x.(Zooplankton(x) -> (TinyAnimal(x) & FeedsOnMinutePlants(x)))", "score": 0}
{"id": "eqasc_train_5351", "prediction": "all x.(MicroscopicAnimal(x) -> Zooplankton(x))", "score": 0}
{"id": "eqasc_train_5352", "prediction": "all x.(Zooplankton(x) -> Microscopic(x))", "score": 0}
{"id": "eqasc_train_5353", "prediction": "all x.(Zooplankton(x) -> Crustacean(x))", "score": 0}
{"id": "eqasc_train_5354", "prediction": "all x.(Crustacean(x) -> (TinyCrustacean(x) & FeedsOnPhytoplankton(x)))", "score": 0}
{"id": "eqasc_train_5355", "prediction": "all x.(Zooplankton(x) -> (TinyAnimal(x) & FeedsOnPlanktonicPlanktonicPlants(x)))", "score": 0}
{"id": "eqasc_train_5356", "prediction": "exists x.(Crustacean(x) & FeedsOnPhytoplankton(x))", "score": 0}
{"id": "eqasc_train_5357", "prediction": "all x.(Copepod(x) -> TinyAnimal(x))", "score": 0}
{"id": "eqasc_train_5358", "prediction": "all x y.((Scientist(x) & OceanOrganism(y) & Zooplankton(y)) -> HarborsChleraBacteria(x,y))", "score": 0}
{"id": "eqasc_train_5359", "prediction": "all x y.((TinyOceanOrganism(x) & Phytoplankton(y)) -> FeedsOn(x,y))", "score": 0}
{"id": "eqasc_train_5360", "prediction": "all x.((Fish(x) | Animal(x)) -> EatsZooplankton(x))", "score": 0}
{"id": "eqasc_train_5361", "prediction": "all x y z.((Fish(x) & Animal(y) & TinyAnimal(z) & FeedsOn(z,Phytoplankton)) -> Eats(x,y,z))", "score": 0}
{"id": "eqasc_train_5362", "prediction": "all x.(Diatom(x) -> PredominantPhytoplankton(x))", "score": 0}
{"id": "eqasc_train_5363", "prediction": "all x.(Zooplankton(x) -> (TinyAnimal(x) & FeedsOnDiatoms(x)))", "score": 0}
{"id": "eqasc_train_5364", "prediction": "all x y.((TectonicPlate(x) & Movement(y)) -> CausesVolcanicEruption(x,y))", "score": 0}
{"id": "eqasc_train_5365", "prediction": "all x.((Earthquake(x) | VolcanicEruption(x)) -> CausesTsunamis(x))", "score": 0}
{"id": "eqasc_train_5366", "prediction": "all x.(TectonicPlate(x) -> CausesTsunamis(x))", "score": 0}
{"id": "eqasc_train_5367", "prediction": "all x.(PlateTechtonics(x) -> (MovementOfEarthSectionsOrPlates(x) & ConvectionalForcesBelowSurface(x)))", "score": 0}
{"id": "eqasc_train_5368", "prediction": "all x y.((SectionsOfEarthMoving(x) & VolcanicEruption(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_train_5369", "prediction": "all x.(VolcanicEruption(x) -> CausesTsunamis(x))", "score": 0}
{"id": "eqasc_train_5370", "prediction": "all x.((TectonicPlate(x) & MovementOf(x,tectonicPlates)) -> CausesTsunamis(x))", "score": 0}
{"id": "eqasc_train_5371", "prediction": "all x.(SanAndreas(x) -> (TransformFault(x) & MarksBoundary(x) & BetweenNorthAmericanAndPacificPlates(x)))", "score": 0}
{"id": "eqasc_train_5372", "prediction": "all x y z.((MovementOfTwoThings(x) & SanAndreas(y) & SanAndreas(z) & ComesTogether(x,y,z)) -> CausesVolcanicEruptions(x))", "score": 0}
{"id": "eqasc_train_5373", "prediction": "all x y z.((VolcanicEruption(x) & City(y) & Region(z)) -> (Disrupted(x,y) | Disrupted(x,z) | Disrupted(x,z)))", "score": 0}
{"id": "eqasc_train_5374", "prediction": "all x y.((TectonicPlate(x) & City(y)) -> CanDestroy(x,y))", "score": 0}
{"id": "eqasc_train_5375", "prediction": "all x.(VolcanicEruption(x) -> CausesShortTermCooling(x))", "score": 0}
{"id": "eqasc_train_5376", "prediction": "all x.((TectonicPlateMovement(x) & CausesShortTermCooling(x)) -> EarthsClimate(x))", "score": 0}
{"id": "eqasc_train_5377", "prediction": "all x y.((LargeVolcanicEruption(x) & EarthAverageTemperature(y)) -> (Decreases(x,y) & Reduces(x,y)))", "score": 0}
{"id": "eqasc_train_5378", "prediction": "all x y.((TectonicPlate(x) & Earth(y)) -> LowersAverageTemperature(x,y))", "score": 0}
{"id": "eqasc_train_5379", "prediction": "all x.(VolcanicEruption(x) -> Predictable(x))", "score": 0}
{"id": "eqasc_train_5380", "prediction": "all x.(TectonicPlate(x) -> PredictableMovement(x))", "score": 0}
{"id": "eqasc_train_5381", "prediction": "all x y.((Earthquake(x) & VolcanicEruption(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_train_5382", "prediction": "all x.((DebrisFlow(x) & AssociatedVolcanicEruptions(x)) -> Destructive(x))", "score": 0}
{"id": "eqasc_train_5383", "prediction": "all x.(TectonicPlateMovement(x) -> LeadsToDebrisFlows(x))", "score": 0}
{"id": "eqasc_train_5384", "prediction": "all x.(PhaseChange(x) -> -ChangeMass(x))", "score": 3}
{"id": "eqasc_train_5385", "prediction": "all x.(Melting(x) -> -ChangeMass(x))", "score": 1}
{"id": "eqasc_train_5386", "prediction": "all x.(Melts(x) -> -ChangeMass(x))", "score": 0}
{"id": "eqasc_train_5387", "prediction": "all x.(Mass(x) -> -ChangesDuringMelting(x))", "score": 0}
{"id": "eqasc_train_5388", "prediction": "all x.(Melting(x) -> -ChangeMass(x))", "score": 2}
{"id": "eqasc_train_5389", "prediction": "all x.(Weight(x) -> (ProductOfGravity(x) & ProductOfMass(x)))", "score": 0}
{"id": "eqasc_train_5390", "prediction": "all x.(PhaseChange(x) -> -ChangeWeight(x))", "score": 0}
{"id": "eqasc_train_5391", "prediction": "all x.(MassAmountOfMatter(x) -> Contains(x))", "score": 0}
{"id": "eqasc_train_5392", "prediction": "all x.(PhaseChange(x) -> -ChangesAmountOfMatter(x))", "score": 0}
{"id": "eqasc_train_5393", "prediction": "all x.(Particle(x) -> (HasMass(x) & Energy(x)))", "score": 0}
{"id": "eqasc_train_5394", "prediction": "all x.(PhaseChange(x) -> -ChangesEnergy(x))", "score": 0}
{"id": "eqasc_train_5395", "prediction": "all x.(PhaseChange(x) -> -ChangesEnergy(x))", "score": 0}
{"id": "eqasc_train_5396", "prediction": "all x.(Weight(x) -> Mass(x))", "score": 0}
{"id": "eqasc_train_5397", "prediction": "all x.(PhaseChange(x) -> -ChangeWeight(x))", "score": 0}
{"id": "eqasc_train_5398", "prediction": "all x.((Melting(x) | Freezing(x) | Condensation(x) | Evaporation(x)) -> PhaseChange(x))", "score": 0}
{"id": "eqasc_train_5399", "prediction": "all x.(MeltingMatter(x) -> -ChangeMass(x))", "score": 0}
{"id": "eqasc_train_5400", "prediction": "all x y z.((Energy(x) & Building(y) & HeatingSystem(z)) -> HeatsBy(x,y,z))", "score": 0}
{"id": "eqasc_train_5401", "prediction": "all x y.((Radiators(x) & Building(y)) -> Heats(x,y))", "score": 0}
{"id": "eqasc_train_5402", "prediction": "all x y.((Radiators(x) & Building(y)) -> HeatsByHeatingSystem(x,y))", "score": 0}
{"id": "eqasc_train_5403", "prediction": "all x y.((Oil(x) & Building(y)) -> Heats(x,y))", "score": 0}
{"id": "eqasc_train_5404", "prediction": "exists x.(ColdClimate(x) & ColdClimate(x) & UsesHeat(x) & UsesSlowHeat(x))", "score": 0}
{"id": "eqasc_train_5405", "prediction": "all x y.((Human(x) & ColdClimate(y)) -> UsesEnergy(x,y))", "score": 0}
{"id": "eqasc_train_5406", "prediction": "all x.(GeothermalEnergy(x) -> (UsedForHeating(x) & UsedForCooling(x)))", "score": 0}
{"id": "eqasc_train_5407", "prediction": "all x.(GeothermalEnergy(x) -> HeatsBuilding(x))", "score": 0}
{"id": "eqasc_train_5408", "prediction": "all x.(HeatingSystem(x) -> Gas(x))", "score": 0}
{"id": "eqasc_train_5409", "prediction": "all x y.((Energy(x) & Building(y) & Gas(z)) -> UsedForHeating(x,y,z))", "score": 0}
{"id": "eqasc_train_5410", "prediction": "all x y.((Radiator(x) & Oil(y)) -> HeatsBuildings(x,y))", "score": 0}
{"id": "eqasc_train_5411", "prediction": "all x y.((Architect(x) & Building(y)) -> Builds(x,y))", "score": 0}
{"id": "eqasc_train_5412", "prediction": "all x y.((Architect(x) & Structure(y)) -> Creates(x,y))", "score": 0}
{"id": "eqasc_train_5413", "prediction": "all x.(FacultyOffice(x) -> InBuilding(x))", "score": 0}
{"id": "eqasc_train_5414", "prediction": "all x y.((Energy(x) & Office(y)) -> Heats(x,y))", "score": 0}
{"id": "eqasc_train_5415", "prediction": "all x.(PassiveSolarThermalEnergy(x) -> HeatsBuildingsUsingDirectSunlight(x))", "score": 0}
{"id": "eqasc_train_5416", "prediction": "all x y.((DirectSunlight(x) & Building(y)) -> Heats(x,y))", "score": 0}
{"id": "eqasc_train_5417", "prediction": "all x.(System(x) -> (Control(x) & HeatProducer(x) & HeatExchanger(x) & HeatDistributor(x)))", "score": 0}
{"id": "eqasc_train_5418", "prediction": "all x y z.((Building(x) & Production(y) & Exchange(z) & DistributionOfEnergy(x,y,z)) -> RegulatesTemperatures(x))", "score": 0}
{"id": "eqasc_train_5419", "prediction": "all x.(SolarEnergy(x) -> EnergyInSunRails(x))", "score": 0}
{"id": "eqasc_train_5420", "prediction": "all x y.((SunRain(x) & Building(y)) -> HeatsByHeatingSystem(x,y))", "score": 0}
{"id": "eqasc_train_5421", "prediction": "all x.((Energy(x) & UsedForHeating(x)) -> MostCommonlyUsedFormOfEnergy(x))", "score": 0}
{"id": "eqasc_train_5422", "prediction": "all x.(HeatingBuildings(x) -> VeryCommonProductionOfEnergy(x))", "score": 0}
{"id": "eqasc_train_5423", "prediction": "all x.(Heterotroph(x) -> (LivingThing(x) & -MakesOwnFood(x)))", "score": 0}
{"id": "eqasc_train_5424", "prediction": "all x y.((Heterotroph(x) & Organism(y)) -> GetsOrganicMolecules(x,y))", "score": 0}
{"id": "eqasc_train_5425", "prediction": "all x.(Food(x) -> ContainsOrganicMolecules(x))", "score": 0}
{"id": "eqasc_train_5426", "prediction": "all x.((LivingThing(x) & -CanMakeOwnFood(x)) -> NeedsProtein(x))", "score": 0}
{"id": "eqasc_train_5427", "prediction": "all x.(Animal(x) -> (Heterotrophic(x) & ObtainsFoodFromPlants(x)))", "score": 0}
{"id": "eqasc_train_5428", "prediction": "all x y.((Animal(x) & Plant(y)) -> (ObtainsFoodFrom(x,y) & -MakesOwnFood(x,y)))", "score": 0}
{"id": "eqasc_train_5429", "prediction": "all x.(Animal(x) -> (LivingThing(x) & -CanMakeOwnFood(x)))", "score": 0}
{"id": "eqasc_train_5430", "prediction": "all x.(Mammal(x) -> (DependsOnVegetation(x) & Food(x) & Shelter(x)))", "score": 0}
{"id": "eqasc_train_5431", "prediction": "all x.(Mammal(x) -> Heterotroph(x))", "score": 0}
{"id": "eqasc_train_5432", "prediction": "all x.(Fish(x) -> -MakesOwnFood(x))", "score": 0}
{"id": "eqasc_train_5433", "prediction": "all x.(Fungus(x) -> (LivingThing(x) & -CanMakeOwnFood(x)))", "score": 0}
{"id": "eqasc_train_5434", "prediction": "all x.(Animal(x) -> -MakesOwnFood(x))", "score": 0}
{"id": "eqasc_train_5435", "prediction": "all x.(Fish(x) -> -MakesOwnFood(x))", "score": 0}
{"id": "eqasc_train_5436", "prediction": "all x.(Animal(x) -> RequiresEnergyToMove(x))", "score": 1}
{"id": "eqasc_train_5437", "prediction": "all x y.((Animal(x) & Plant(y)) -> EatsToMakeEnergy(x,y))", "score": 0}
{"id": "eqasc_train_5438", "prediction": "all x.(Animal(x) -> RequiresEatingPlants(x))", "score": 0}
{"id": "eqasc_train_5439", "prediction": "all x.(Food(x) -> ProvidesEnergy(x))", "score": 0}
{"id": "eqasc_train_5440", "prediction": "all x.(Animal(x) -> RequiresFoodToMove(x))", "score": 0}
{"id": "eqasc_train_5441", "prediction": "all x.(Dog(x) -> RequiresEnergyToMove(x))", "score": 1}
{"id": "eqasc_train_5442", "prediction": "all x.(Animal(x) -> RequiresFoodToMove(x))", "score": 0}
{"id": "eqasc_train_5443", "prediction": "all x.((Animal(x) & Moves(x)) -> BurnsEnergy(x))", "score": 0}
{"id": "eqasc_train_5444", "prediction": "all x.(BurningEnergy(x) -> AllowsAnimalMovement(x))", "score": 0}
{"id": "eqasc_train_5445", "prediction": "all x.((Moves(x) | Runs(x)) -> LegsBreaklyMove(x))", "score": 0}
{"id": "eqasc_train_5446", "prediction": "all x.((Animal(x) & RequiresEnergy(x)) -> Runs(x))", "score": 0}
{"id": "eqasc_train_5447", "prediction": "all x.(Animal(x) -> GetsEnergyFromFood(x))", "score": 0}
{"id": "eqasc_train_5448", "prediction": "all x.(Animal(x) -> RequiresFoodToMove(x))", "score": 0}
{"id": "eqasc_train_5449", "prediction": "all x y.((Nectar(x) & Plant(y)) -> AttractsPollinators(x,y))", "score": 0}
{"id": "eqasc_train_5450", "prediction": "all x.(Bee(x) -> Pollinator(x))", "score": 0}
{"id": "eqasc_train_5451", "prediction": "all x y.((Plant(x) & Bee(y)) -> AttractsWithNectar(x,y))", "score": 0}
{"id": "eqasc_train_5452", "prediction": "all x.(Bird(x) -> EnthralledToSeekNectar(x))", "score": 0}
{"id": "eqasc_train_5453", "prediction": "all x.(Bird(x) -> Pollinator(x))", "score": 0}
{"id": "eqasc_train_5454", "prediction": "all x y.((Nectar(x) & ShallowNectarCup(y) & FlowerBase(y)) -> SecretedIn(x,y))", "score": 0}
{"id": "eqasc_train_5455", "prediction": "all x y.((SecretedInShallowCup(x) & Plant(y)) -> AttractsPollinators(y))", "score": 0}
{"id": "eqasc_train_5456", "prediction": "Nectar Nectar is the sugary liquid produced by many flowers.", "score": -1}
{"id": "eqasc_train_5457", "prediction": "all x.(Flower(x) -> (ProducesSugaryLiquid(x) & AttractsPollinators(x)))", "score": 0}
{"id": "eqasc_train_5458", "prediction": "all x.((Bee(x) & HoneyBee(x)) -> PrimaryPollinators(x))", "score": 0}
{"id": "eqasc_train_5459", "prediction": "all x y.((Nectar(x) & Bee(y)) -> AttractsToPlants(x,y))", "score": 0}
{"id": "eqasc_train_5460", "prediction": "all x.(Bee(x) -> PrimaryPollinatorsOfFennel(x))", "score": 0}
{"id": "eqasc_train_5461", "prediction": "all x y.((Nectar(x) & Plant(y)) -> AttractsBees(x,y))", "score": 0}
{"id": "eqasc_train_5462", "prediction": "all x y.((Nectar(x) & Bee(y)) -> AttractsToPlants(x,y))", "score": 0}
{"id": "eqasc_train_5463", "prediction": "all x.(Bee(x) -> Pollinator(x))", "score": 0}
{"id": "eqasc_train_5464", "prediction": "all x y.((Nectar(x) & Plant(y)) -> AttractsBees(x,y))", "score": 0}
{"id": "eqasc_train_5465", "prediction": "all x y.((Butterfly(x) & Plant(y) & FeedsOnNectar(x,y)) -> Pollinates(x,y))", "score": 0}
{"id": "eqasc_train_5466", "prediction": "all x y.((Butterfly(x) & Plant(y)) -> Pollinates(x,y))", "score": 0}
{"id": "eqasc_train_5467", "prediction": "all x.(Insect(x) -> Pollinator(x))", "score": 0}
{"id": "eqasc_train_5468", "prediction": "all x y.((Nectar(x) & Insect(y)) -> Attracts(x,y))", "score": 0}
{"id": "eqasc_train_5469", "prediction": "all x.(Bird(x) -> FloweringPlantPollinators(x))", "score": 0}
{"id": "eqasc_train_5470", "prediction": "all x y.((Nectar(x) & Bird(y)) -> AttractsToFloweringPlants(x,y))", "score": 0}
{"id": "eqasc_train_5471", "prediction": "all x.(Pollination(x) -> EssentialForFruitProduction(x))", "score": 0}
{"id": "eqasc_train_5472", "prediction": "all x.(Nectar(x) -> EssentialForFruitProduction(x))", "score": 0}
{"id": "eqasc_train_5473", "prediction": "all x y.((Plant(x) & Bee(y) & Color(x,y)) -> Attracts(x,y))", "score": 0}
{"id": "eqasc_train_5474", "prediction": "all x y.((Plant(x) & Bee(y) & ColorOfFlowers(x,y)) -> Attracts(x,y))", "score": 0}
{"id": "eqasc_train_5475", "prediction": "all x y.((PrehistoricLivingRemains(x) & HeatAndPressure(x)) -> NaturalGas(y))", "score": 0}
{"id": "eqasc_train_5476", "prediction": "all x.((PrehistoricPlant(x) & TurnsIntoLightOilsAndGas(x)) -> TurnsInto(x,y))", "score": 0}
{"id": "eqasc_train_5477", "prediction": "all x y.((Plant(x) & Heat(y) & Pressure(z)) -> TurnsIntoGas(x,y,z))", "score": 0}
{"id": "eqasc_train_5478", "prediction": "all x.((Dinosaur(x) & PrehistoricCreature(x)) -> PrehistoricAnimal(x))", "score": 0}
{"id": "eqasc_train_5479", "prediction": "all x y.((Dinosaur(x) & Heat(y) & Pressure(y)) -> ChangesRemainsIntoNaturalGas(x,y))", "score": 0}
{"id": "eqasc_train_5480", "prediction": "all x.(NaturalGas(x) -> CleanestOfFossilFuels(x))", "score": 0}
{"id": "eqasc_train_5481", "prediction": "all x y.((Heat(x) & Pressure(y)) -> (CreatesFossilFuels(x,y) & OutOfDeadPrehistoricBeings(x)))", "score": 0}
{"id": "eqasc_train_5482", "prediction": "all x y.((Fossil(x) & Heat(y) & Pressure(y)) -> NaturalGas(x,y))", "score": 0}
{"id": "eqasc_train_5483", "prediction": "all x.(NaturalGas(x) -> FossilFuel(x))", "score": 0}
{"id": "eqasc_train_5484", "prediction": "all x y.((Fossil(x) & Heat(y) & Pressure(y)) -> HeatAndPressureChangesIntoFossilFuel(x,y))", "score": 0}
{"id": "eqasc_train_5485", "prediction": "all x.(PrehistoricLifeEvidence(x) -> (DinosaurFootprints(x) & FoundInCoalMines(x)))", "score": 0}
{"id": "eqasc_train_5486", "prediction": "all x y.((Rock(x) & Heat(y) & Pressure(z)) -> Metamorphizes(x,y,z))", "score": 0}
{"id": "eqasc_train_5487", "prediction": "all x y.((RockMetamorphizing(x) & PrehistoricLivingThing(y)) -> ChangesRemainsIntoNaturalGas(x,y))", "score": 0}
{"id": "eqasc_train_5488", "prediction": "all x.(Plant(x) -> (GrowsRoots(x) & AbsorbsWaterAndMinerals(x)))", "score": 0}
{"id": "eqasc_train_5489", "prediction": "all x y z.((Bush(x) & Roots(y) & Soil(z)) -> GrowsIntoToAbsorbWaterAndMinerals(x,y,z))", "score": 0}
{"id": "eqasc_train_5490", "prediction": "all x.(Anchor(x) -> (AbsorbsWater(x) & AbsorbsMinerals(x)))", "score": 0}
{"id": "eqasc_train_5491", "prediction": "all x.(Plant(x) -> (HasAnchors(x) & GoesDownIntoSoil(x) & SoaksUpWaterAndMinerals(x)))", "score": 0}
{"id": "eqasc_train_5492", "prediction": "all x y.((PlantRoot(x) & Soil(y)) -> StabilizesAgainstErosion(x,y))", "score": 0}
{"id": "eqasc_train_5493", "prediction": "all x y.((Plant(x) & Minerals(y) & Water(y)) -> PreventsSoilErosion(x,y))", "score": 0}
{"id": "eqasc_train_5494", "prediction": "all x.(Mineral(x) -> InorganicElement(x))", "score": 0}
{"id": "eqasc_train_5495", "prediction": "all x y.((Plant(x) & Roots(y)) -> GrowsIntoSoilToAbsorbInorganicElements(x,y))", "score": 0}
{"id": "eqasc_train_5496", "prediction": "all x y.((Fertilizer(x) & Root(y)) -> SupplementsWithNutrientsDrawnFromSoil(x,y))", "score": 0}
{"id": "eqasc_train_5497", "prediction": "all x y.((Fertilizer(x) & Soil(y)) -> SupplementsNutrients(x,y))", "score": 0}
{"id": "eqasc_train_5498", "prediction": "all x y.((Bamboo(x) & Roots(y)) -> GrowsIntoSoilToAbsorbWaterAndMinerals(x,y))", "score": 0}
{"id": "eqasc_train_5499", "prediction": "all x y.((Roots(x) & Soil(y)) -> TransferredTo(x,y))", "score": 0}
{"id": "eqasc_train_5500", "prediction": "all x.((Roots(x) & RootsDevelop(x)) -> AbsorbsWaterAndMinerals(x))", "score": 0}
{"id": "eqasc_train_5501", "prediction": "all x.(Green(x) -> Producer(x))", "score": 0}
{"id": "eqasc_train_5502", "prediction": "all x y.((Producer(x) & Roots(y)) -> GrowsIntoSoilToAbsorbWaterAndMinerals(x,y))", "score": 0}
{"id": "eqasc_train_5503", "prediction": "all x y.((Beet(x) | Carrot(y)) -> RootOfPlant(x,y))", "score": 0}
{"id": "eqasc_train_5504", "prediction": "all x.(Carrot(x) -> (GrowsDownIntoSoil(x) & AbsorbsWaterAndMinerals(x)))", "score": 0}
{"id": "eqasc_train_5505", "prediction": "all x.(Grass(x) -> (BasicPlant(x) & Root(x) & Stem(x) & Flower(x)))", "score": 0}
{"id": "eqasc_train_5506", "prediction": "all x.(Grass(x) -> (HasRoot(x) & AbsorbsWater(x)))", "score": 0}
{"id": "eqasc_train_5507", "prediction": "all x y z.((AnimalOrPlant(x) & Place(y) & FoundIn(x,y)) -> UsedToLiveIn(x,z))", "score": 0}
{"id": "eqasc_train_5508", "prediction": "all x.(Fossil(x) -> (RemainsOfAncientPlantAndAnimal(x) | TracesOfActivities(x)))", "score": 0}
{"id": "eqasc_train_5509", "prediction": "all x y z.((Plant(x) & Animal(y) & Remains(z)) -> (FoundWhereUsedToLive(z) & FoundWhereUsedToLive(z)))", "score": 0}
{"id": "eqasc_train_5510", "prediction": "all x y.((Plant(x) & Animal(y)) -> FoundInHabitat(x,y))", "score": 0}
{"id": "eqasc_train_5511", "prediction": "all x y.((Animal(x) & Plant(y) & Habitat(z)) -> FoundIn(x,y,z))", "score": 0}
{"id": "eqasc_train_5512", "prediction": "all x.(Fossil(x) -> PreservedEvidenceOfPastLife(x))", "score": 0}
{"id": "eqasc_train_5513", "prediction": "all x y.((PastLifeEvidence(x) & PlantOrAnimal(y)) -> LivedInPlace(y,x))", "score": 0}
{"id": "eqasc_train_5514", "prediction": "all x.(Fossil(x) -> (PreservedOriginalRemains(x) | PreservedEvidence(x)))", "score": 0}
{"id": "eqasc_train_5515", "prediction": "all x y z.((PreservedRemains(x) & Animal(y) & Place(z) & FoundIn(y,z)) -> UsedToLiveIn(y,z))", "score": 0}
{"id": "eqasc_train_5516", "prediction": "all x.(Fossil(x) -> Bone(x))", "score": 0}
{"id": "eqasc_train_5517", "prediction": "all x y z.((AnimalBones(x) & Place(y) & FoundIn(x,y)) -> UsedToLiveThere(z))", "score": 0}
{"id": "eqasc_train_5518", "prediction": "all x y z.((AnimalOrPlant(x) & Place(y) & RemainsFoundIn(x,y) & Place(z)) -> UsedToLiveIn(x,z))", "score": 0}
{"id": "eqasc_train_5519", "prediction": "all x.(Dinosaur(x) -> PopularFossil(x))", "score": 0}
{"id": "eqasc_train_5520", "prediction": "all x.(Dinosaur(x) -> (RemainsOf(x,Dinosaur) & UsedToLive(x)))", "score": 0}
{"id": "eqasc_train_5521", "prediction": "all x.(Wetland(x) -> ImportantHabitatForAnimals(x))", "score": 0}
{"id": "eqasc_train_5522", "prediction": "all x.(Fossil(x) -> (FoundInWetland(x) | FoundInWetland(x)))", "score": 0}
{"id": "eqasc_train_5523", "prediction": "all x.(Fossil(x) -> (RemainsOrTracesOfOnceLivingOrganisms(x)))", "score": 0}
{"id": "eqasc_train_5524", "prediction": "all x y.((Organism(x) & Organism(y)) -> LivedIn(x,y))", "score": 0}
{"id": "eqasc_train_5525", "prediction": "all x.(FrozenFossilAnimal(x) -> FoundInPermafrost(x))", "score": 0}
{"id": "eqasc_train_5526", "prediction": "all x y.((FrozenFossil(x) & Permafrost(y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_train_5527", "prediction": "all x y.((Animal(x) & Animal(y)) -> ConservesEnergy(x,y))", "score": 0}
{"id": "eqasc_train_5528", "prediction": "all x.(EnergyConservation(x) -> ImportantSurvivalTrait(x))", "score": 0}
{"id": "eqasc_train_5529", "prediction": "exists x.(Animal(x) & Hibernation(x) & ImportantSurvivalTrait(x))", "score": 0}
{"id": "eqasc_train_5530", "prediction": "all x.(Animal(x) -> HibernatesInWinter(x))", "score": 0}
{"id": "eqasc_train_5531", "prediction": "all x.((Animal(x) & Winter(x)) -> ConservesEnergy(x))", "score": 0}
{"id": "eqasc_train_5532", "prediction": "all x.(Squirrel(x) -> BestAnimal(x))", "score": 0}
{"id": "eqasc_train_5533", "prediction": "all x y.((Squirrel(x) & Squirrel(y)) -> ConservesEnergy(x,y))", "score": 0}
{"id": "eqasc_train_5534", "prediction": "all x.((Animal(x) & SleepsThroughWinter(x)) -> Hibernate(x))", "score": 0}
{"id": "eqasc_train_5535", "prediction": "all x.(Animal(x) -> SleepsThroughWinter(x))", "score": 0}
{"id": "eqasc_train_5536", "prediction": "all x.(Hibernation(x) -> SleepLike(x))", "score": 0}
{"id": "eqasc_train_5537", "prediction": "all x y.((Animal(x) & Animal(y)) -> SleepLikeState(x,y))", "score": 0}
{"id": "eqasc_train_5538", "prediction": "all x.((Bear(x) & Hibernates(x)) -> EntersDeepSleep(x))", "score": 0}
{"id": "eqasc_train_5539", "prediction": "all x.(Bear(x) -> (EntersDeepSleep(x) & ConservesEnergy(x)))", "score": 0}
{"id": "eqasc_train_5540", "prediction": "all x.(Hibernation(x) -> UsedForConservingHeat(x))", "score": 0}
{"id": "eqasc_train_5541", "prediction": "all x.(Bear(x) -> UsesFatAsEnergy(x))", "score": 0}
{"id": "eqasc_train_5542", "prediction": "all x.(Bear(x) -> (Hibernates(x) & ConservesEnergy(x)))", "score": 0}
{"id": "eqasc_train_5543", "prediction": "all x.(Hibernation(x) -> ImportantSurvivalTrait(x))", "score": 0}
{"id": "eqasc_train_5544", "prediction": "all x y.((ElectricalCurrent(x) & Wire(y) & RunningThrough(x,y)) -> CausesWireToHeatUp(x,y))", "score": 0}
{"id": "eqasc_train_5545", "prediction": "all x.(HeatsUpWire(x) -> (DamageInsulation(x) | CauseFire(x)))", "score": 0}
{"id": "eqasc_train_5546", "prediction": "all x y.((ElectricalCurrent(x) & Wire(y) & RunningThrough(x,y)) -> (DamageInsulation(x) | CauseFire(x)))", "score": 0}
{"id": "eqasc_train_5547", "prediction": "all x.(RawCoal(x) -> CanBeBurnedToProduceElectricity(x))", "score": 0}
{"id": "eqasc_train_5548", "prediction": "all x y.((Coal(x) & Wire(y)) -> HeatsUp(y,x))", "score": 0}
{"id": "eqasc_train_5549", "prediction": "all x y.((ElectricalCurrent(x) & Wire(y) & RunningThrough(x,y)) -> (DamageInsulation(x) | CauseFire(x)))", "score": 0}
{"id": "eqasc_train_5550", "prediction": "all x.(Cuircon(x) -> (UsedInWires(x) & UsedInWires(x)))", "score": 0}
{"id": "eqasc_train_5551", "prediction": "all x y.((ElectricalCurrent(x) & Copper(y) & RunningThrough(x,y)) -> HeatsUp(x))", "score": 0}
{"id": "eqasc_train_5552", "prediction": "all x.(ElectricalCurrent(x) -> (FlowOfElectrons(x)))", "score": 0}
{"id": "eqasc_train_5553", "prediction": "all x y z.((FlowOfElectrons(x) & Wire(y) & Wire(z) & RunsThrough(x,y,z)) -> CausesHeatUp(y,z))", "score": 0}
{"id": "eqasc_train_5554", "prediction": "all x.((TotalCurrent(x) & JouleHeating(x)) -> Solved(x))", "score": 0}
{"id": "eqasc_train_5555", "prediction": "all x y.((ElectricalCurrent(x) & Wire(y) & RunsThrough(x,y)) -> CausesIncreaseInJules(x))", "score": 0}
{"id": "eqasc_train_5556", "prediction": "all x.(ElectricalResistance(x) -> ProducesHeat(x))", "score": 0}
{"id": "eqasc_train_5557", "prediction": "all x y.((Resistance(x) & Circuit(y)) -> CausesHeat(x,y))", "score": 0}
{"id": "eqasc_train_5558", "prediction": "all x.((Wire(x) & MovedAcrossMagneticField(x)) -> CreatesElectricCurrent(x))", "score": 0}
{"id": "eqasc_train_5559", "prediction": "all x y.((Wire(x) & MagneticField(y) & MovingAcross(x,y)) -> HeatsUp(x))", "score": 0}
{"id": "eqasc_train_5560", "prediction": "all x.(HighCurrent(x) -> (AllowsTooMuchPower(x) | AllowsTooMuchElectricalEnergy(x)))", "score": 0}
{"id": "eqasc_train_5561", "prediction": "all x y.((HighCurrent(x) & Wire(y)) -> WastesEnergyByHeating(x,y))", "score": 0}
{"id": "eqasc_train_5562", "prediction": "all x y.((KineticEnergy(x) & RunningThroughWire(x,y)) -> CausesWireToHeatUp(x,y))", "score": 0}
{"id": "eqasc_train_5563", "prediction": "all x.((WarmingOfWire(x) & TooMuchHeating(x)) -> FireHazard(x))", "score": 0}
{"id": "eqasc_train_5564", "prediction": "all x y.((ElectricalCurrent(x) & Wire(y) & RunningThrough(x,y)) -> CausesFireHazard(x))", "score": 0}
{"id": "eqasc_train_5565", "prediction": "all x y.((BuildingHousingDevelopment(x) & AnimalHabitat(y)) -> RequiresReplacement(x,y))", "score": 0}
{"id": "eqasc_train_5566", "prediction": "all x.(LossOfWetlandHabitat(x) -> EndangeredPlantAndAnimalSpecies(x))", "score": 0}
{"id": "eqasc_train_5567", "prediction": "all x.(BuildingHousingDevelopment(x) -> (EndangeringPlantAndAnimalSpecies(x) & OftenRequiresEndangeringAnimalSpecies(x)))", "score": 0}
{"id": "eqasc_train_5568", "prediction": "all x.(Food(x) -> (InvitationForStormAnimals(x) & InvitationForNeighborhoodPets(x) & InvitationForWildlife(x)))", "score": 0}
{"id": "eqasc_train_5569", "prediction": "all x y.((BuildingHousingDevelopment(x) & Strays(y) & WildlifeHabitats(y)) -> RequiresReplacement(x,y))", "score": 0}
{"id": "eqasc_train_5570", "prediction": "all x.(Habitat(x) -> (HairyNeckedWombat(x) & Terrestrial(x) & BuildsBurrows(x)))", "score": 0}
{"id": "eqasc_train_5571", "prediction": "all x y.((BuildingHousingDevelopment(x) & Burrow(y)) -> RequiresReplacement(x,y))", "score": 0}
{"id": "eqasc_train_5572", "prediction": "all x.(HabitatDestruction(x) -> (PrimaryCauseOfExtinction(x) | PrimaryThreatOfExtinction(x)))", "score": 0}
{"id": "eqasc_train_5573", "prediction": "all x.(BuildingHousingDevelopments(x) -> MayCauseExtinction(x))", "score": 0}
{"id": "eqasc_train_5574", "prediction": "all x y.((BuildingHousingDevelopment(x) & AnimalBurrow(y)) -> RequiresReplacement(x,y))", "score": 0}
{"id": "eqasc_train_5575", "prediction": "all x y.((Habitat(x) & Animal(y) & DependsOn(y,x)) -> Disappears(x))", "score": 0}
{"id": "eqasc_train_5576", "prediction": "all x y.((BuildingHousingDevelopments(x) & AnimalSurvival(y)) -> Hurts(x,y))", "score": 0}
{"id": "eqasc_train_5577", "prediction": "all x.(HabitatMartens(x) -> (ConiferousForest(x) & PrimeHabitat(x)))", "score": 0}
{"id": "eqasc_train_5578", "prediction": "all x y.((BuildingHousingDevelopment(x) & ForestHome(y)) -> RequiresReplacement(x,y))", "score": 0}
{"id": "eqasc_train_5579", "prediction": "all x y z.((Developer(x) & HousingTract(y) & House(z)) -> (Plans(x,y) & BuildsOnPaper(x,z)))", "score": 0}
{"id": "eqasc_train_5580", "prediction": "all x y.((Developer(x) & HousingTract(y)) -> (Plans(x,y) & RequiresReplacingAnimalHabitats(x)))", "score": 0}
{"id": "eqasc_train_5581", "prediction": "all x.(Animal(x) -> LivesInHabitat(x))", "score": 0}
{"id": "eqasc_train_5582", "prediction": "all x y.((BuildingHousingDevelopment(x) & Animal(y)) -> RequiresReplacement(x,y))", "score": 0}
{"id": "eqasc_train_5583", "prediction": "all x.(Salmon(x) -> (Habitat(x) & (Freshwater(x) | Estuarine(x) | Marine(x))))", "score": 0}
{"id": "eqasc_train_5584", "prediction": "all x y.((HousingDevelopment(x) & Salmon(y)) -> -BuiltOverTerritory(x,y))", "score": 0}
{"id": "eqasc_train_5585", "prediction": "all x.(HIV(x) -> (InfectsHelperT Cells(x) & DisruptsHelperT Cells(x)))", "score": -1}
{"id": "eqasc_train_5586", "prediction": "all x.(T-HelperCell(x) -> Lymphocyte(x))", "score": -1}
{"id": "eqasc_train_5587", "prediction": "all x y.((HIV(x) & Lymphocyte(y)) -> (Infects(x,y) & Disrupts(x,y)))", "score": 0}
{"id": "eqasc_train_5588", "prediction": "all x.((AntibodiesToHIV(x) & Present(x)) -> HIVPositive(x))", "score": 0}
{"id": "eqasc_train_5589", "prediction": "all x y.((Antibodies(x) & HelperTCell(y)) -> (Infects(x,y) & Disrupts(x,y)))", "score": 0}
{"id": "eqasc_train_5590", "prediction": "all x.((HIV(x) & AttacksTCells(x)) -> ParalyzesImmuneSystem(x))", "score": 0}
{"id": "eqasc_train_5591", "prediction": "all x.(HIVAttacksImmuneSystem(x) -> AttacksImmuneSystem(x))", "score": 0}
{"id": "eqasc_train_5592", "prediction": "all x.(T cell(x) -> TLymphocyte(x))", "score": -1}
{"id": "eqasc_train_5593", "prediction": "all x.(T lymphocyte(x) -> (Infected(x) & DissectedByHIV(x)))", "score": -1}
{"id": "eqasc_train_5594", "prediction": "all x.(HelperT Cells(x) -> Brain(x))", "score": -1}
{"id": "eqasc_train_5595", "prediction": "all x y.((HIV(x) & Brain(y)) -> (Infects(x,y) & Disrupts(x,y)))", "score": 0}
{"id": "eqasc_train_5596", "prediction": "all x.(HIV(x) -> (Infects(x) & DisruptsImmuneResponse(x)))", "score": 0}
{"id": "eqasc_train_5597", "prediction": "all x.((HIV(x) & HumanImmunodeficiencyVirus(x)) -> Retrovirus(x))", "score": 0}
{"id": "eqasc_train_5598", "prediction": "all x.(HumanImmunodeficiencyVirus(x) -> (InfectsHelperTCells(x) & DetroysHelperTcells(x)))", "score": 0}
{"id": "eqasc_train_5599", "prediction": "all x.(HelperTcell(x) -> CriticalLinkInImmuneSystem(x))", "score": 0}
{"id": "eqasc_train_5600", "prediction": "all x.(HIV(x) -> DamagesImmuneSystem(x))", "score": 0}
{"id": "eqasc_train_5601", "prediction": "all x.(Aids(x) -> EndStageOfHIVInfection(x))", "score": 0}
{"id": "eqasc_train_5602", "prediction": "all x y.((AIDS(x) & HelperTCell(y)) -> InfectsAndDestroys(x,y))", "score": 0}
{"id": "eqasc_train_5603", "prediction": "LetsMeetTheHIV(x) -> HIV(x))", "score": -1}
{"id": "eqasc_train_5604", "prediction": "all x.(Virus(x) -> (InfectsHelperTCells(x) & DisruptsHelperTCells(x)))", "score": 0}
{"id": "eqasc_train_5605", "prediction": "all x.(Scientist(x) -> CausesAIDS(x))", "score": 0}
{"id": "eqasc_train_5606", "prediction": "all x.(AIDS(x) -> (InfectsHelperTCells(x) & DisruptsHelperTcells(x)))", "score": 0}
{"id": "eqasc_train_5607", "prediction": "all x y.((VibrationReflex(x) & Stomach(y)) -> RemovesToxicMaterial(x,y))", "score": 0}
{"id": "eqasc_train_5608", "prediction": "all x.(Lead(x) -> Toxic(x))", "score": 0}
{"id": "eqasc_train_5609", "prediction": "all x.(VibrationReflex(x) -> RemovesLeadFromStomach(x))", "score": 0}
{"id": "eqasc_train_5610", "prediction": "all x.((Vomiting(x) & TurnsHead(x)) -> ExpelledVitus(x))", "score": 0}
{"id": "eqasc_train_5611", "prediction": "all x.(Vitus(x) -> (ExpelledToRemoveToxicMaterials(x) & Absorbed(x)))", "score": 0}
{"id": "eqasc_train_5612", "prediction": "all x.(Vibration(x) -> (ControlledByVibrationCenter(x) & InBrain(x)))", "score": 0}
{"id": "eqasc_train_5613", "prediction": "all x y.((TowingUpCenterOfBrain(x) & ToxicMaterial(y)) -> RemovesFromStomach(x,y))", "score": 0}
{"id": "eqasc_train_5614", "prediction": "all x.(Overdose(x) -> CausesVitamining(x))", "score": 0}
{"id": "eqasc_train_5615", "prediction": "all x.(Overdose(x) -> MustBeRemovedFromStomach(x))", "score": 0}
{"id": "eqasc_train_5616", "prediction": "all x.(Rabbit(x) -> (LacksVibrationReflex(x) & PhysicallyIncapableOfRegurgitation(x)))", "score": 0}
{"id": "eqasc_train_5617", "prediction": "all x.(Rabbit(x) -> (IncapableOfRegurgitation(x) & -RemovesToxicMaterial(x) & AbsorbsToxicMaterial(x)))", "score": 0}
{"id": "eqasc_train_5618", "prediction": "all x.(Nicotine(x) -> ExcitesVibrationReflex(x))", "score": 0}
{"id": "eqasc_train_5619", "prediction": "all x y.((Nicotine(x) & VomitingReflex(y)) -> RemovesToxicMaterial(x,y))", "score": 0}
{"id": "eqasc_train_5620", "prediction": "all x y.((Sonar(x) & Object(y)) -> FindsLocation(x,y))", "score": 0}
{"id": "eqasc_train_5621", "prediction": "all x.(Periscope(x) -> (Useful(x) & DespiteSonar(x) & Useful(x) & ElectronicSensors(x) & ModernSubmarine(x)))", "score": 0}
{"id": "eqasc_train_5622", "prediction": "all x.(Periscope(x) -> (FindsLocationOfObjects(x) & LocatesObjects(x)))", "score": 0}
{"id": "eqasc_train_5623", "prediction": "all x y.((Sonar(x) & Ocean(y)) -> BouncesSoundWavesOffBottom(x,y))", "score": 0}
{"id": "eqasc_train_5624", "prediction": "all x y.((BooncingSoundWaves(x) & Ocean(y)) -> LocatesObject(x,y))", "score": 0}
{"id": "eqasc_train_5625", "prediction": "all x.(Echolocation(x) -> SimilarToSonar(x))", "score": 0}
{"id": "eqasc_train_5626", "prediction": "all x y.((Echolocation(x) & Object(y)) -> FindsLocation(x,y))", "score": 0}
{"id": "eqasc_train_5627", "prediction": "all x.(SurfaceShip(x) -> UsesSonarToLocateAndTrackSubmarines(x))", "score": 0}
{"id": "eqasc_train_5628", "prediction": "all x y.((Ship(x) & Sonar(y)) -> UsesToFindSubmarines(x,y))", "score": 0}
{"id": "eqasc_train_5629", "prediction": "all x.(Bat(x) -> (UsesEcholocation(x) & LikeSonar(x)))", "score": 0}
{"id": "eqasc_train_5630", "prediction": "all x y.((Echolocation(x) & Bat(y)) -> (UsedBy(x,y) & FindsLocationOfObject(x,y)))", "score": 0}
{"id": "eqasc_train_5631", "prediction": "all x y z.((Submarine(x) & Sonar(y) & Submarine(z)) -> (Uses(x,y) & FindsObjects(x,z)))", "score": 0}
{"id": "eqasc_train_5632", "prediction": "all x.(Sonar(x) -> (FindsSubmarines(x) & UsedToFindSubmarines(x)))", "score": 0}
{"id": "eqasc_train_5633", "prediction": "all x y.((Object(x) & Soundwave(y) & BouncedOffBottomOfOcean(x,y)) -> CanBeLocatedBy(x,y))", "score": 0}
{"id": "eqasc_train_5634", "prediction": "all x.(Position(x) -> exists y.(Location(y) & LocatedIn(x,y)))", "score": 0}
{"id": "eqasc_train_5635", "prediction": "all x y.((Sonar(x) & Object(y)) -> FindsPosition(x,y))", "score": 0}
{"id": "eqasc_train_5636", "prediction": "all x y.((BooncingSoundWavesOffBottomOcean(x) & Ocean(y)) -> FindsLocationsOfObjects(x,y))", "score": 0}
{"id": "eqasc_train_5637", "prediction": "all x.(Dolphin(x) -> AmazingSonarCapabilities(x))", "score": 0}
{"id": "eqasc_train_5638", "prediction": "all x y.((Dolphin(x) & Object(y)) -> CanFindLocation(x,y))", "score": 0}
{"id": "eqasc_train_5639", "prediction": "all x.(SonarDevice(x) -> UsesSoundWavesToFindThings(x))", "score": 0}
{"id": "eqasc_train_5640", "prediction": "all x y.((SoundWaves(x) & Object(y)) -> Locates(x,y))", "score": 0}
{"id": "eqasc_train_5641", "prediction": "all x.(ActiveSonar(x) -> (TransmitsAcousticEnergy(x) & DetectsTargetsByEcholocation(x)))", "score": 0}
{"id": "eqasc_train_5642", "prediction": "all x y.((Echolocation(x) & Object(y)) -> UsedToFind(x,y))", "score": 0}
{"id": "eqasc_train_5643", "prediction": "all x y.((DNA(x) & RNA(y)) -> (ContainsGeneticInstructions(x) & HelpsAssembleProteins(y)))", "score": 0}
{"id": "eqasc_train_5644", "prediction": "all x.(DNA(x) -> StoreOfGeneticInformation(x))", "score": 0}
{"id": "eqasc_train_5645", "prediction": "all x.(DNAStoresInformation(x) -> StoresInformation(x))", "score": 0}
{"id": "eqasc_train_5646", "prediction": "all x.(DeoxyribonucleicAcid(x) -> ContainsGeneticInstructions(x))", "score": 0}
{"id": "eqasc_train_5647", "prediction": "all x y.((RNAMolecule(x) & DNAMessage(y)) -> DeliversToProteinManufacturingAssemblyLine(x,y))", "score": 0}
{"id": "eqasc_train_5648", "prediction": "all x y.((DNAMessage(x) & Protein(y)) -> ManufacturedByRNA(x,y))", "score": 0}
{"id": "eqasc_train_5649", "prediction": "all x.(Azathioprine(x) -> InterferesWithDNAAndRNASynthesis(x))", "score": 0}
{"id": "eqasc_train_5650", "prediction": "all x.(Azathioprine(x) -> InterferesWithProteinAssembly(x))", "score": 0}
{"id": "eqasc_train_5651", "prediction": "all x.((DNA(x) | RNA(x)) -> (PolymerOfNucleotides(x)))", "score": 0}
{"id": "eqasc_train_5652", "prediction": "all x y.((Polymer(x) & Nucleotide(y)) -> HelpsAssembleProteins(x,y))", "score": 0}
{"id": "eqasc_train_5653", "prediction": "all x.(GeneticMemory(x) -> Erased(x))", "score": 0}
{"id": "eqasc_train_5654", "prediction": "all x.(DNA(x) -> ContainsEarnedInstructions(x))", "score": 0}
{"id": "eqasc_train_5655", "prediction": "all x y.((RNAPolymerase(x) & RNANucleotide(y)) -> Joins(x,y))", "score": 0}
{"id": "eqasc_train_5656", "prediction": "all x y.((DNA(x) & Protein(y) & Polymerase(x)) -> ContainsGeneticInstructions(x,y))", "score": 0}
{"id": "eqasc_train_5657", "prediction": "(all x.(DNA(x) -> MakesRNA(x)) & all y.(RNA(y) -> MakesProtein(y)))", "score": 0}
{"id": "eqasc_train_5658", "prediction": "all x y z.((DNA(x) & RNA(y) & Assembly(z)) -> Makes(x,y))", "score": 0}
{"id": "eqasc_train_5659", "prediction": "all x.(Cell(x) -> (RNAMachine(x) & HasProteins(x)))", "score": 1}
{"id": "eqasc_train_5660", "prediction": "all x.(Cell(x) -> HasProteins(x))", "score": 1}
{"id": "eqasc_train_5661", "prediction": "all x.(DNA(x) -> GeneticMaterialResponsibleForHerdity(x))", "score": 0}
{"id": "eqasc_train_5662", "prediction": "all x y.((GeneticMaterial(x) & Heredity(y)) -> ContainsInstructionsForProteins(x,y))", "score": 0}
{"id": "eqasc_train_5663", "prediction": "all x.(Rain(x) -> (RibonucleicAcid(x) & ConstituentOfLivingCells(x) & ConstituentOfManyViruses(x)))", "score": 0}
{"id": "eqasc_train_5664", "prediction": "all x.(RibonucleicAcidHelpsAssembleProteins(x) -> HelpsAssembleProteins(x))", "score": 0}
{"id": "eqasc_train_5665", "prediction": "all x.((Protein(x) & Enzyme(x)) -> RequiresForLife(x))", "score": 0}
{"id": "eqasc_train_5666", "prediction": "all x.(Dna(x) -> RequiresForLife(x))", "score": 0}
{"id": "eqasc_train_5667", "prediction": "all x y.((DeoxyribonucleicAcid(x) & Protein(y)) -> (ContainsInstructions(x,y) & HelpsAssemble(x,y)))", "score": 0}
{"id": "eqasc_train_5668", "prediction": "all x.((RNAHybrid(x) & DetectedByLumenometer(x)) -> DetectedBy(x,y))", "score": 0}
{"id": "eqasc_train_5669", "prediction": "all x.(Lumenometer(x) -> (DetectsHybrids(x) & HelpsAssembleProteins(x)))", "score": 0}
{"id": "eqasc_train_5670", "prediction": "all x.(DNA(x) -> GeneticMaterialOfCells(x))", "score": 0}
{"id": "eqasc_train_5671", "prediction": "all x.(Cell(x) -> ContainsGeneticInstructions(x))", "score": 0}
{"id": "eqasc_train_5672", "prediction": "all x.((RNA(x) & AssemblesDiverseProteins(x)) -> Evolutionary(x))", "score": 0}
{"id": "eqasc_train_5673", "prediction": "all x y z.((DNA(x) & Protein(y) & GeneticInstruction(z)) -> (Contains(x,y) & ProductOfEvolution(x)))", "score": 0}
{"id": "eqasc_train_5674", "prediction": "all x.(Altein(x) -> (Protein(x) & FoundInBodyTissuesAndFluids(x)))", "score": 0}
{"id": "eqasc_train_5675", "prediction": "all x y z.((DNA(x) & RNA(y) & Albumin(z)) -> WorksToCreate(x,y,z))", "score": 0}
{"id": "eqasc_train_5676", "prediction": "all x y.((Rings(x) & TreeTrunk(y)) -> EstimatesAge(x,y))", "score": 0}
{"id": "eqasc_train_5677", "prediction": "all x.(Dendrochronologist(x) -> StudiesTreeRingGrowth(x))", "score": 0}
{"id": "eqasc_train_5678", "prediction": "all x y.((Dendrochronologist(x) & Tree(y)) -> EstimatesAge(x,y))", "score": 0}
{"id": "eqasc_train_5679", "prediction": "all x.(TreeRing(x) -> RecordSeasons(x))", "score": 0}
{"id": "eqasc_train_5680", "prediction": "all x y.((Season(x) & TreeTrunk(y)) -> SeenIn(x,y))", "score": 0}
{"id": "eqasc_train_5681", "prediction": "all x.(TreeRing(x) -> (ExaminedToLearnForestAge(x) & LearnForestGrowthRate(x)))", "score": 0}
{"id": "eqasc_train_5682", "prediction": "all x y z.((Rings(x) & Tree(y) & Forest(z)) -> DeterminedGrowthRate(x,y,z))", "score": 0}
{"id": "eqasc_train_5683", "prediction": "(AgeOfPineTrees(AGE) & Years(AGE))", "score": 0}
{"id": "eqasc_train_5684", "prediction": "all x y.((Rings(x) & TreeTrunk(y)) -> EstimatesYearsOld(x,y))", "score": 0}
{"id": "eqasc_train_5685", "prediction": "all x.(TreeRing(x) -> DatesCascadiaEarthquake(x,1700))", "score": 0}
{"id": "eqasc_train_5686", "prediction": "all x y.((EstimatingAgeOfTrees(x) & EarthquakeHistory(y)) -> UsedInReviewing(x,y))", "score": 0}
{"id": "eqasc_train_5687", "prediction": "all x.((Tree(x) & TrunkCircumference(x) & TreeHeight(x)) -> AgeEstimatedFrom(x,y))", "score": 0}
{"id": "eqasc_train_5688", "prediction": "all x.((Tree(x) & YoungTree(x)) -> (ConcordsCircumference(x) & CorrespondsToRings(x)))", "score": 0}
{"id": "eqasc_train_5689", "prediction": "all x.((TreeRing(x) & EstimatesGrowthRate(x)) -> TreeRings(x))", "score": 0}
{"id": "eqasc_train_5690", "prediction": "all x.((TreeAge(x) & Scion(x) & Nutrition(x) & AffectsOverallHealth(x)) -> (AffectsRootstockResistance(x) | AffectsSusceptibilityToPhytophthora(x)))", "score": 0}
{"id": "eqasc_train_5691", "prediction": "all x y z.((Ring(x) & Scion(y) & Nutrition(z)) -> AffectsOverallHealthOfTree(x,y,z))", "score": 0}
{"id": "eqasc_train_5692", "prediction": "all x y.((ThermalInsulator(x) & ThermalInsulator(y)) -> SlowsTransferOfHeat(x,y))", "score": 0}
{"id": "eqasc_train_5693", "prediction": "all x.(ThermalInsulator(x) -> SlowsTransferOfEnergy(x))", "score": 0}
{"id": "eqasc_train_5694", "prediction": "all x.(Convection(x) -> TransfersHeatInFluids(x))", "score": 0}
{"id": "eqasc_train_5695", "prediction": "all x.(ThermalInsulator(x) -> SlowsConvectionInFluids(x))", "score": 0}
{"id": "eqasc_train_5696", "prediction": "all x.(Ice(x) -> GoodThermalInsulator(x))", "score": 0}
{"id": "eqasc_train_5697", "prediction": "all x y.((Ice(x) & HeatTransfer(y)) -> Slows(x,y))", "score": 0}
{"id": "eqasc_train_5698", "prediction": "all x.(Insulation(x) -> BlocksConductionOfHeat(x))", "score": 0}
{"id": "eqasc_train_5699", "prediction": "all x.(Insulation(x) -> PreventsConduction(x))", "score": 0}
{"id": "eqasc_train_5700", "prediction": "all x y.((HeatTransferFluid(x) & SolarCollector(y)) -> ProtectsFromFreezingInColdWeather(x,y))", "score": 0}
{"id": "eqasc_train_5701", "prediction": "all x.(ThermalInsulator(x) -> ProtectsFromFreezing(x))", "score": 0}
{"id": "eqasc_train_5702", "prediction": "all x y.((Ice(x) & HeatTransfer(y)) -> SlowsTransfer(x,y))", "score": 0}
{"id": "eqasc_train_5703", "prediction": "all x y.((Ice(x) & HeatTransfer(y)) -> SlowsTransfer(x,y))", "score": 0}
{"id": "eqasc_train_5704", "prediction": "all x.((Material(x) & (Glass(x) | Wood(x))) -> (ElectricalInsulator(x) | ThermalInsulator(x)))", "score": 0}
{"id": "eqasc_train_5705", "prediction": "all x.(Glass(x) -> SlowsTransferOfHeat(x))", "score": 0}
{"id": "eqasc_train_5706", "prediction": "all x y z.((Fanning(x) & Fire(y) & Oxygen(z)) -> IncreasesNear(x,y,z))", "score": 0}
{"id": "eqasc_train_5707", "prediction": "all x y.((Bellows(x) & Furnace(y)) -> FannedFire(x,y))", "score": 0}
{"id": "eqasc_train_5708", "prediction": "all x y.((Bellows(x) & Fire(y)) -> IncreasesOxygenNear(x,y))", "score": 0}
{"id": "eqasc_train_5709", "prediction": "all x.(Fire(x) -> NeedsOxygenInAir(x))", "score": 0}
{"id": "eqasc_train_5710", "prediction": "all x y.((Fire(x) & Fire(y)) -> KeepsFireBurning(x,y))", "score": 0}
{"id": "eqasc_train_5711", "prediction": "all x.(Fire(x) -> NeedsOxygen(x))", "score": 0}
{"id": "eqasc_train_5712", "prediction": "all x y.((Fire(x) & Fire(y)) -> FanningHelpsContinueBurning(x,y))", "score": 0}
{"id": "eqasc_train_5713", "prediction": "all x y.((Fire(x) & Fire(y)) -> Fanning(x,y))", "score": 0}
{"id": "eqasc_train_5714", "prediction": "all x.(Fan(x) -> BlowsAboveOche(x))", "score": 0}
{"id": "eqasc_train_5715", "prediction": "all x y.((BlowingOn(x,y) & Fire(y)) -> IncreasesOxygenNear(x,y))", "score": 0}
{"id": "eqasc_train_5716", "prediction": "all x.(Oxygen(x) -> (ShortSupply(x) & FireConsumesOxygen(x)))", "score": 0}
{"id": "eqasc_train_5717", "prediction": "all x y z.((Fanning(x) & Flame(y) & Air(z)) -> HelpsConsume(x,y,z))", "score": 0}
{"id": "eqasc_train_5718", "prediction": "all x y.((Fire(x) & Fire(y) & Fanning(x,y)) -> KeepsFireBurning(x,y))", "score": 0}
{"id": "eqasc_train_5719", "prediction": "all x.(Fire(x) -> CombustionReaction(x))", "score": 0}
{"id": "eqasc_train_5720", "prediction": "all x y z.((Fanning(x) & CombustionReaction(y) & Oxygen(z)) -> IncreasesNear(x,y,z))", "score": 0}
{"id": "eqasc_train_5721", "prediction": "all x.(Air(x) -> FansFire(x))", "score": 0}
{"id": "eqasc_train_5722", "prediction": "all x.(Air(x) -> IncreasesOxygenNearFire(x))", "score": 0}
{"id": "eqasc_train_5723", "prediction": "all x y.((Fire(x) & Fire(y)) -> FanningHelpsContinueBurn(x,y))", "score": 0}
{"id": "eqasc_train_5724", "prediction": "all x y.((StrongWind(x) & Fire(y)) -> IncreasesConcentrationOfOxygen(x,y))", "score": 0}
{"id": "eqasc_train_5725", "prediction": "all x y.((Fire(x) & Wind(y)) -> (Avoids(x,y) & KeepsOxygenFromFire(x)))", "score": 0}
{"id": "eqasc_train_5726", "prediction": "all x.(Air(x) -> SourceOfOxygen(x))", "score": 0}
{"id": "eqasc_train_5727", "prediction": "all x y z.((Fanning(x) & Fire(y) & AirNear(z)) -> IncreasesAirNear(x,y,z))", "score": 0}
{"id": "eqasc_train_5728", "prediction": "all x.(Fire(x) -> (NeedsFuel(x) & NeedsOxygen(x)))", "score": 0}
{"id": "eqasc_train_5729", "prediction": "all x y.((Fire(x) & Fanning(x,y)) -> IncreasesFuel(y))", "score": 0}
{"id": "eqasc_train_5730", "prediction": "all x.(PressureReceptor(x) -> FoundInSkin(x))", "score": 2}
{"id": "eqasc_train_5731", "prediction": "all x.(Animal(x) -> HasSkin(x))", "score": 0}
{"id": "eqasc_train_5732", "prediction": "all x.(Animal(x) -> HasPressureReceptors(x))", "score": 0}
{"id": "eqasc_train_5733", "prediction": "all x.(PressureReceptor(x) -> (FoundInEpidermis(x) | FoundInDemis(x)))", "score": 0}
{"id": "eqasc_train_5734", "prediction": "all x.(PainReceptor(x) -> FreeNervousEnding(x))", "score": 0}
{"id": "eqasc_train_5735", "prediction": "all x y.((NervousEnding(x) & Skin(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_train_5736", "prediction": "exists x.(Receptor(x) & FreeNervousEnding(x))", "score": 0}
{"id": "eqasc_train_5737", "prediction": "all x y.((NervousEnding(x) & Skin(y)) -> Free(x,y))", "score": 0}
{"id": "eqasc_train_5738", "prediction": "all x.(Vertebrate(x) -> (TemperatureSensor(x) & LocatedInSkin(x) & LocatedInHypothalamus(x)))", "score": 0}
{"id": "eqasc_train_5739", "prediction": "all x y.((Animal(x) & Animal(y)) -> (TemperatureSensor(x,y) & PressureSensor(x,y)))", "score": 0}
{"id": "eqasc_train_5740", "prediction": "all x.((Receptor(x) & Skin(x)) -> (HeatReceptor(x) | ColdReceptor(x)))", "score": 0}
{"id": "eqasc_train_5741", "prediction": "all x y z.((Skin(x) & Skin(y) & Skin(z)) -> (Pressure(x) & Heat(x) & ColdPoints(x)))", "score": 0}
{"id": "eqasc_train_5742", "prediction": "all x.(SensoryReceptor(x) -> (StructureSpecializedToDetectStimulus(x)))", "score": 0}
{"id": "eqasc_train_5743", "prediction": "all x.(SpecializedToDetectStimulus(x) -> FoundPrimarilyInSkin(x))", "score": 0}
{"id": "eqasc_train_5744", "prediction": "all x.(PacinnianCorpuscle(x) -> PressureReceptor(x))", "score": 2}
{"id": "eqasc_train_5745", "prediction": "all x.(PacinnianCorpuscle(x) -> FoundInSkin(x))", "score": 2}
{"id": "eqasc_train_5746", "prediction": "all x y.((SkinPressureReceptor(x) & Foot(y)) -> (Annotates(x,y) | (Annotates(x,y) & Chair(y))))", "score": 0}
{"id": "eqasc_train_5747", "prediction": "all x y.((ReceptorsOnEpidermis(x) & Epidermis(y)) -> (DetectsPressure(x,y) & AnnouncesToFeetOrButtocks(x,y)))", "score": 0}
{"id": "eqasc_train_5748", "prediction": "all x y.((Oil(x) & Sediment(y) & Algae(z)) -> FormedByLayers(x,y))", "score": 0}
{"id": "eqasc_train_5749", "prediction": "all x.((SedimentBurial(x) & IncreasesTemperature(x)) -> CausesSedimentsToIncrease(x))", "score": 0}
{"id": "eqasc_train_5750", "prediction": "all x y.((Oil(x) & Algae(y) & Decomposing(y)) -> FormedByBoiling(x,y))", "score": 0}
{"id": "eqasc_train_5751", "prediction": "all x.(Oil(x) -> (FormedBySediment(x) & PushesDownOnSimpleGreenPlants(x)))", "score": 0}
{"id": "eqasc_train_5752", "prediction": "all x.((Algae(x) & Dies(x)) -> UsesOxygenToDecompose(x))", "score": 0}
{"id": "eqasc_train_5753", "prediction": "all x y.((Oil(x) & Sediment(y) & DeadOxygenatedAlgae(y)) -> ComesFromMixingWith(x,y))", "score": 0}
{"id": "eqasc_train_5754", "prediction": "all x.((Algae(x) & Dies(x)) -> Decomposes(x))", "score": 0}
{"id": "eqasc_train_5755", "prediction": "all x.((SedimentLayer(x) & PushesOnDeadAlgae(x)) -> OilForms(x))", "score": 0}
{"id": "eqasc_train_5756", "prediction": "all x.(EarthySediment(x) -> (FineParticlesOfRockAndSoil(x) & SuspendedInWater(x) & CarriedByWater(x)))", "score": 0}
{"id": "eqasc_train_5757", "prediction": "all x y.((Oil(x) & FineParticles(y) & Algae(z)) -> FormedByPressingDownOn(x,y,z))", "score": 0}
{"id": "eqasc_train_5758", "prediction": "all x.((Algae(x) & Dies(x)) -> DecomposedByBacteria(x))", "score": 0}
{"id": "eqasc_train_5759", "prediction": "all x.(Oil(x) -> (FormedBySediment(x) & FormedByBacteria(x)))", "score": 0}
{"id": "eqasc_train_5760", "prediction": "all x.((FossilFuel(x) & (Coal(x) | Oil(x))) -> AncientBiomassFuel(x))", "score": 0}
{"id": "eqasc_train_5761", "prediction": "all x.(FossilFuel(x) -> (FormedBySedimentLayer(x) & PushesDownOnDecomposingAlgae(x)))", "score": 0}
{"id": "eqasc_train_5762", "prediction": "all x.(Oil(x) -> (FormedBySedimentLayer(x) & PushesDownOnBacteria(x)))", "score": 0}
{"id": "eqasc_train_5763", "prediction": "all x.(SecondaryMeristem(x) -> (LocatedInVascularTissues(x) & LocatedAroundVascularTissues(x)))", "score": 0}
{"id": "eqasc_train_5764", "prediction": "all x.((PlantGrowth(x) & (Width(x) | Girth(x))) -> EmitsFromInsideAndAroundVascularTissues(x))", "score": 0}
{"id": "eqasc_train_5765", "prediction": "all x.(VascularTissue(x) -> ConductingTissue(x))", "score": 0}
{"id": "eqasc_train_5766", "prediction": "all x y.((SecondaryMeristem(x) & ConductingTissueType(y)) -> (LocatedInAndAround(x,y) & ConductingTissueType(x)))", "score": 0}
{"id": "eqasc_train_5767", "prediction": "all x.(SecondaryMeristem(x) -> (MakesStemOrRootGrowLargerInDiameter(x)))", "score": 0}
{"id": "eqasc_train_5768", "prediction": "all x y.((VascularTissue(x) & (Stem(y) | Root(y))) -> GrowsLargerInDiameter(x,y))", "score": 0}
{"id": "eqasc_train_5769", "prediction": "all x y.((PlantCellType(x) & Meristem(y)) -> RisesByMitosis(x,y))", "score": 0}
{"id": "eqasc_train_5770", "prediction": "all x y.((PlantCell(x) & VascularTissue(y) & CreatedByMitosis(x,y)) -> CreatedByMitosis(x,y))", "score": 0}
{"id": "eqasc_train_5771", "prediction": "all x.(PlantTissue(x) -> ProducedFromMeristems(x))", "score": 0}
{"id": "eqasc_train_5772", "prediction": "all x.(Plant(x) -> HasVascularTissues(x))", "score": 0}
{"id": "eqasc_train_5773", "prediction": "all x.(Leaves(x) -> LacksVascularTissues(x))", "score": 0}
{"id": "eqasc_train_5774", "prediction": "all x.(Leaves(x) -> LacksSecondaryMeristem(x))", "score": 0}
{"id": "eqasc_train_5775", "prediction": "all x.(SecondaryMeristem(x) -> DevelopsAfterPrimaryMeristem(x))", "score": 0}
{"id": "eqasc_train_5776", "prediction": "all x.((DevelopsAfterPrimaryMeristems(x) & LocatedInVascularTissues(x)) -> LocatedAroundVascularTissues(x))", "score": 0}
{"id": "eqasc_train_5777", "prediction": "all x.(SecondaryGrowth(x) -> OccursInLatinalMeristems(x))", "score": 0}
{"id": "eqasc_train_5778", "prediction": "all x y.((Area(x) & SecondaryGrowth(y)) -> (LocatedInVascularTissues(x,y) & LocatedAroundVascularTissues(x,y)))", "score": 0}
{"id": "eqasc_train_5779", "prediction": "all x y.((VascularTissue(x) & VascularTissue(y)) -> Meristem(x))", "score": 0}
{"id": "eqasc_train_5780", "prediction": "all x.(Bird(x) -> (EvolvedFromBipedalDinosaurs(x) & Theropods(x)))", "score": 0}
{"id": "eqasc_train_5781", "prediction": "all x.(Bird(x) -> (EvolvedFromReptileScales(x)))", "score": 0}
{"id": "eqasc_train_5782", "prediction": "all x y.((Feathers(x) & ReptileScales(y) & BipedalDinosaur(x)) -> EvolvedFromScales(x,y))", "score": 0}
{"id": "eqasc_train_5783", "prediction": "all x.(Dromaeosaur(x) -> PartOfTheropod(x))", "score": 0}
{"id": "eqasc_train_5784", "prediction": "all x y.((Bird(x) & Dromaeosaur(y)) -> EvolvedFrom(x,y))", "score": 0}
{"id": "eqasc_train_5785", "prediction": "all x.(Feather(x) -> HighlyProbableInAdvancedBirdLikeTheropods(x))", "score": 0}
{"id": "eqasc_train_5786", "prediction": "all x y.((Feather(x) & BipedalDinosaur(y)) -> HighlyProbableInEvolution(x,y))", "score": 0}
{"id": "eqasc_train_5787", "prediction": "all x.(Bird(x) -> (Animal(x) & HasFeathers(x)))", "score": 2}
{"id": "eqasc_train_5788", "prediction": "all x.((Animal(x) & HasFeathers(x)) -> CanEvolveFromTheropods(x))", "score": 0}
{"id": "eqasc_train_5789", "prediction": "all x.(Hawk(x) -> Bird(x))", "score": 0}
{"id": "eqasc_train_5790", "prediction": "all x y.((Hawk(x) & BipedalDinosaur(y)) -> EvolvedFrom(x,y))", "score": 0}
{"id": "eqasc_train_5791", "prediction": "all x y.((Bird(x) & BipedalDinosaur(y) & IncludesDromaeosaurs(x)) -> EvolvedFrom(x,y))", "score": 0}
{"id": "eqasc_train_5792", "prediction": "all x.(Dromaeosaur(x) -> (Dinosaur(x) & Evolutionary(x) & Bird(x)))", "score": 0}
{"id": "eqasc_train_5793", "prediction": "all x y.((Bid(x) & BipedalDinosaur(y)) -> (EvolvedFrom(x,y) & Dromaeosaur(x)))", "score": 0}
{"id": "eqasc_train_5794", "prediction": "all x.((Theropod(x) & Propubic(x)) -> Pelvic(x))", "score": 0}
{"id": "eqasc_train_5795", "prediction": "all x.(Bird(x) -> HasPropubicPales(x))", "score": 0}
{"id": "eqasc_train_5796", "prediction": "all x.((Automobile(x) & Operating(x)) -> RequiresFossilFuels(x))", "score": 0}
{"id": "eqasc_train_5797", "prediction": "all x.(FossilFuelPollution(x) -> (CausesAsthma(x) & CausesLungProblems(x) & EspeciallyForChildrenAndAlteresters(x)))", "score": 0}
{"id": "eqasc_train_5798", "prediction": "all x y.((Automobile(x) & Child(y)) -> CanContributeToAsthma(x,y))", "score": 0}
{"id": "eqasc_train_5799", "prediction": "all x.(FossilFuel(x) -> NonRenewable(x))", "score": 0}
{"id": "eqasc_train_5800", "prediction": "all x y.((Automobile(x) & Operating(x,y)) -> RequiresNonRenewableResource(x))", "score": 0}
{"id": "eqasc_train_5801", "prediction": "all x.((Car(x) | Automobile(x)) -> Synonym(x))", "score": 0}
{"id": "eqasc_train_5802", "prediction": "all x y.((Car(x) & Car(y)) -> RequiresFossilFuels(x,y))", "score": 0}
{"id": "eqasc_train_5803", "prediction": "all x.(Car(x) -> (Automobile(x) | Automobile(x)))", "score": 0}
{"id": "eqasc_train_5804", "prediction": "all x.(Automobile(x) -> RequiresEnergyPollutionFromGasoline(x))", "score": 0}
{"id": "eqasc_train_5805", "prediction": "all x.(GlobalWarming(x) -> CausedByFossilFuelUse(x))", "score": 0}
{"id": "eqasc_train_5806", "prediction": "all x y.((Automobile(x) & Operates(x,y)) -> ContributesToGlobalWarming(x))", "score": 0}
{"id": "eqasc_train_5807", "prediction": "all x.(FossilFuel(x) -> FiniteResource(x))", "score": 0}
{"id": "eqasc_train_5808", "prediction": "all x.(Automobile(x) -> RequiresFiniteResource(x))", "score": 0}
{"id": "eqasc_train_5809", "prediction": "all x.((FossilFuel(x) & FormedInEarthFromPlantOrAnimalRemains(x)) -> Fuel(x))", "score": 0}
{"id": "eqasc_train_5810", "prediction": "all x.((Automobile(x) & Operates(x)) -> RequiresAnimalRemains(x))", "score": 0}
{"id": "eqasc_train_5811", "prediction": "all x y.((Automobile(x) & FossilFuelBurning(y)) -> GeneratesSulphurDioxide(x,y))", "score": 0}
{"id": "eqasc_train_5812", "prediction": "all x y.((Automobile(x) & Operating(x)) -> CreatesGasesByBurningFuel(x,y))", "score": 0}
{"id": "eqasc_train_5813", "prediction": "all x y.((DistractedWhileDriving(x) & Person(y)) -> CanCrashCar(y))", "score": 0}
{"id": "eqasc_train_5814", "prediction": "all x.(CellPhone(x) -> DistractionToDriving(x))", "score": 0}
{"id": "eqasc_train_5815", "prediction": "all x.((CellPhone(x) & Driving(x)) -> CanCauseCrashes(x))", "score": 0}
{"id": "eqasc_train_5816", "prediction": "exists x.(Child(x) & DrivesToDistraction(x))", "score": 0}
{"id": "eqasc_train_5817", "prediction": "all x y.((Child(x) & Driver(y)) -> CausesCrash(x,y))", "score": 0}
{"id": "eqasc_train_5818", "prediction": "all x.((Cellphone(x) & -(Cellphone(x) & Wheel(x))) -> Distraction(x))", "score": 0}
{"id": "eqasc_train_5819", "prediction": "all x.(Cellphone(x) -> CausesCrash(x))", "score": 0}
{"id": "eqasc_train_5820", "prediction": "all x.((EatingInCar(x) & DrinkingInCar(x)) -> MajorDistraction(x))", "score": 0}
{"id": "eqasc_train_5821", "prediction": "all x y.((Eating(x) & Drinking(y)) -> CausesCrash(x,y))", "score": 0}
{"id": "eqasc_train_5822", "prediction": "all x y.((Car(x) & Crash(y)) -> (ProhibitivelyExpensed(x) & InsuranceRatesSkyrocket(x)))", "score": 0}
{"id": "eqasc_train_5823", "prediction": "all x.((Distracted(x) & Driving(x)) -> InsuranceRatesSkyrocket(x))", "score": 0}
{"id": "eqasc_train_5824", "prediction": "all x y.((CellPhone(x) & Person(y)) -> CanCrashCar(x,y))", "score": 0}
{"id": "eqasc_train_5825", "prediction": "all x y.((CellPhone(x) & Driving(y)) -> CausesCrash(x,y))", "score": 0}
{"id": "eqasc_train_5826", "prediction": "all x y.((CellPhone(x) & Driver(y)) -> CanCrash(x,y))", "score": 0}
{"id": "eqasc_train_5827", "prediction": "all x y.((CellPhone(x) & Person(y)) -> CanCrashCar(x,y))", "score": 0}
{"id": "eqasc_train_5828", "prediction": "all x.(CarCrashes(x) -> LeadingCauseOfDeath(x))", "score": 0}
{"id": "eqasc_train_5829", "prediction": "all x.(DistractedDriving(x) -> CausesDeath(x))", "score": 0}
{"id": "eqasc_train_5830", "prediction": "all x y.((Car(x) & Person(y)) -> (Crash(x) & Die(y) & SlowDown(y)))", "score": 0}
{"id": "eqasc_train_5831", "prediction": "all x y.((DistractedWhileDriving(x) & Person(y)) -> CausesDisaster(x,y))", "score": 0}
{"id": "eqasc_train_5832", "prediction": "all x y.((CarCrashes(x) & Child(y) & BirthToAge(y,x)) -> LeadingCauseOfDeath(x,y))", "score": 0}
{"id": "eqasc_train_5833", "prediction": "all x.((Distracted(x) & Driving(x)) -> LeadsCauseOfDeath(x))", "score": 0}
{"id": "eqasc_train_5834", "prediction": "all x.(Fungus(x) -> (LackChlorophyll(x) & -MakeFoodByPhotosynthesis(x)))", "score": 0}
{"id": "eqasc_train_5835", "prediction": "(LikesMushroom(much) & LacksChlorophyll(m) & NonPhotosynthetic(m))", "score": 0}
{"id": "eqasc_train_5836", "prediction": "all x.(Mushroom(x) -> (NonPhotosynthetic(x) & -CanMakeFoodToGrow(x)))", "score": 0}
{"id": "eqasc_train_5837", "prediction": "all x.(SolarEnergy(x) -> AbsorbedByChlorophyll(x))", "score": 0}
{"id": "eqasc_train_5838", "prediction": "all x.(Fungus(x) -> (-AbsorbsSolarEnergy(x) & -MakesFoodByPhotosynthesis(x)))", "score": 0}
{"id": "eqasc_train_5839", "prediction": "all x.(Fungus(x) -> DecomposesDeadPlantAndAnimalMatter(x))", "score": 0}
{"id": "eqasc_train_5840", "prediction": "all x.((Fungus(x) & -Photosynthesis(x)) -> DecomposesDeadOrganisms(x))", "score": 0}
{"id": "eqasc_train_5841", "prediction": "all x.(Mushroom(x) -> Fungus(x))", "score": 0}
{"id": "eqasc_train_5842", "prediction": "all x y.((Mushroom(x) & Plant(y)) -> (LacksChlorophyll(x) & -MakesFoodByPhotosynthesis(x)))", "score": 0}
{"id": "eqasc_train_5843", "prediction": "all x.(Fungus(x) -> (LacksChlorophyll(x) & NonPhotosynthetic(x)))", "score": 1}
{"id": "eqasc_train_5844", "prediction": "all x.(Fungus(x) -> (NonPhotosynthetic(x) & NonPhotosynthetic(x)))", "score": 1}
{"id": "eqasc_train_5845", "prediction": "all x.(Mold(x) -> LacksChlorophyll(x))", "score": 0}
{"id": "eqasc_train_5846", "prediction": "all x.(Fungus(x) -> (MulticellularOrganism(x) & AbsorbsFoodMoleculeByMolecule(x)))", "score": 0}
{"id": "eqasc_train_5847", "prediction": "all x.(Fungus(x) -> (LacksChlorophyll(x) & AbsorbsNutritionMoleculeByMolecule(x)))", "score": 0}
{"id": "eqasc_train_5848", "prediction": "all x.(Mushroom(x) -> Fungus(x))", "score": 0}
{"id": "eqasc_train_5849", "prediction": "all x.(Mushroom(x) -> LacksChlorophyll(x))", "score": 0}
{"id": "eqasc_train_5850", "prediction": "all x.(Fungus(x) -> (LacksChlorophyll(x) & -MakesFoodByPhotosynthesis(x)))", "score": 0}
{"id": "eqasc_train_5851", "prediction": "all x.(Plant(x) -> (RequiresSunlight(x) & RequiresCarbonDioxide(x) & RequiresWater(x)))", "score": 0}
{"id": "eqasc_train_5852", "prediction": "all x.(Fungus(x) -> -(MakesFoodWithSunlight(x) & Sunlight(x)))", "score": 0}
{"id": "eqasc_train_5853", "prediction": "all x.(Yeast(x) -> LacksClorophyll(x))", "score": 0}
{"id": "eqasc_train_5854", "prediction": "all x.(Migrant(x) -> TravelsLongDistances(x))", "score": 1}
{"id": "eqasc_train_5855", "prediction": "all x.(BanSnake(x) -> NeotropicalMigrator(x))", "score": 0}
{"id": "eqasc_train_5856", "prediction": "all x.(BanSnake(x) -> TravelsLongDistances(x))", "score": 0}
{"id": "eqasc_train_5857", "prediction": "all x.(InsectivorousBird(x) -> LargestGroupOfMigrants(x))", "score": 0}
{"id": "eqasc_train_5858", "prediction": "all x.(InsectivorousBird(x) -> TravelsLongDistances(x))", "score": 0}
{"id": "eqasc_train_5859", "prediction": "all x.(MigrantBird(x) -> Leaves(x))", "score": 0}
{"id": "eqasc_train_5860", "prediction": "all x.(Bird(x) -> TravelsLongDistances(x))", "score": 0}
{"id": "eqasc_train_5861", "prediction": "DistanceFinder FindsDistanceBetweenPlaces(x)", "score": -1}
{"id": "eqasc_train_5862", "prediction": "all x y.((Migrant(x) & Place(y)) -> TravelsBetween(x,y))", "score": 0}
{"id": "eqasc_train_5863", "prediction": "all x.((Bird(x) & (Sparrow(x) | Warbler(x))) -> (NocturnalMigrant(x) & TravelsAtNight(x)))", "score": 0}
{"id": "eqasc_train_5864", "prediction": "all x.(Warbler(x) -> (Nocturnal(x) & TravelsLongDistancesAtNight(x)))", "score": 0}
{"id": "eqasc_train_5865", "prediction": "all x.(MigrantBird(x) -> Arrives(x))", "score": 0}
{"id": "eqasc_train_5866", "prediction": "all x.(Bird(x) -> TravelsLongDistances(x))", "score": 0}
{"id": "eqasc_train_5867", "prediction": "all x.(Manatee(x) -> MigrantSpecies(x))", "score": 0}
{"id": "eqasc_train_5868", "prediction": "all x.(Manatee(x) -> MigratesLongDistances(x))", "score": 0}
{"id": "eqasc_train_5869", "prediction": "all x.(Manatee(x) -> TravelsLongDistances(x))", "score": 0}
{"id": "eqasc_train_5870", "prediction": "all x.(Manatee(x) -> TravelsLongDistances(x))", "score": 0}
{"id": "eqasc_train_5871", "prediction": "exists x.(Butterfly(x) & Kew(x) & Sedentary(x) & Migrant(x))", "score": 1}
{"id": "eqasc_train_5872", "prediction": "exists x.(Butterfly(x) & TravelsLongDistances(x))", "score": 1}
{"id": "eqasc_train_5873", "prediction": "all x.(LongDistanceTravel(x) -> BestToFly(x))", "score": 0}
{"id": "eqasc_train_5874", "prediction": "all x.(Migrant(x) -> (FliesLongDistances(x) & FlysLongDistances(x)))", "score": 0}
{"id": "eqasc_train_5875", "prediction": "all x.(Whale(x) -> TravelsLongDistances(x))", "score": 0}
{"id": "eqasc_train_5876", "prediction": "all x.((Migrant(x) & Whale(x)) -> TravelsLonger(x))", "score": 0}
{"id": "eqasc_train_5877", "prediction": "all x y.((Porcupine(x) & Predator(y) & ThreateningBehavior(x,y)) -> ExtendsQuills(x,y))", "score": 0}
{"id": "eqasc_train_5878", "prediction": "all x y.((Fisher(x) & Porcupine(y)) -> SpecializedPredator(x,y))", "score": 0}
{"id": "eqasc_train_5879", "prediction": "all x y.((Porcupine(x) & Fisher(y) & DisplaysThreatingBehavior(x,y)) -> ExtendsQuills(x))", "score": 0}
{"id": "eqasc_train_5880", "prediction": "all x.(Aggression(x) -> (Active(x) & Harmful(x) & Offensive(x) & ThreatensAll(x) & BenefitsNone(x)))", "score": 0}
{"id": "eqasc_train_5881", "prediction": "all x.((Predator(x) & Aggression(x)) -> CausesPupinToExtendQuills(x))", "score": 0}
{"id": "eqasc_train_5882", "prediction": "all x.(Fisher(x) -> (Predator(x) & CanEatPupins(x)))", "score": 0}
{"id": "eqasc_train_5883", "prediction": "all x y.((Fisher(x) & Fisher(y) & ThreateningBehavior(x,y)) -> CanExtendQuills(x,y))", "score": 0}
{"id": "eqasc_train_5884", "prediction": "all x.(Porcupine(x) -> (InflatesSpines(x) & ExtendsSpines(x) & DefenseMechanism(x)))", "score": 0}
{"id": "eqasc_train_5885", "prediction": "all x.(Porcupine(x) -> (CanUseQuillsAsDefenseMechanism(x)))", "score": 0}
{"id": "eqasc_train_5886", "prediction": "all x.(PorcupineQuill(x) -> ExceptionallyPoorly(x))", "score": 0}
{"id": "eqasc_train_5887", "prediction": "all x y.((Porcupine(x) & Predator(y) & ThreateningBehavior(x,y)) -> CausesPain(x,y))", "score": 0}
{"id": "eqasc_train_5888", "prediction": "all x y.((Puffer(x) & Porcupine(y)) -> (SmoothSkinned(x) & (HasSpines(y) | HasQuills(y))))", "score": 0}
{"id": "eqasc_train_5889", "prediction": "all x.((Porcupine(x) & Threatened(x)) -> ExtendsSpines(x))", "score": 0}
{"id": "eqasc_train_5890", "prediction": "all x.(TornantBehavior(x) -> Painful(x))", "score": 0}
{"id": "eqasc_train_5891", "prediction": "all x.(Porcupine(x) -> RodentFamily(x))", "score": 0}
{"id": "eqasc_train_5892", "prediction": "all x y.((Rodent(x) & Predator(y) & ThreateningBehavior(x,y)) -> ExtendsQuills(x,y))", "score": 0}
{"id": "eqasc_train_5893", "prediction": "all x y.((Predator(x) & Prey(y)) -> (Kills(x,y) & Eats(x,y)))", "score": 0}
{"id": "eqasc_train_5894", "prediction": "all x y.((Porcupine(x) & ThreatOfEating(x)) -> ExtendsQuills(x,y))", "score": 0}
{"id": "eqasc_train_5895", "prediction": "all x.((Torning(x) | Intimidating(x)) -> -Banned(x))", "score": 0}
{"id": "eqasc_train_5896", "prediction": "all x.((Porcupine(x) & Intimidated(x)) -> ExtendsQuills(x))", "score": 0}
{"id": "eqasc_train_5897", "prediction": "all x.(Sponges(x) -> SourceOfFood(x))", "score": 1}
{"id": "eqasc_train_5898", "prediction": "all x.(Spot(x) -> KeystoneSpecies(x))", "score": 0}
{"id": "eqasc_train_5899", "prediction": "all x.(KeystoneSpecies(x) -> SourceOfFood(x))", "score": 0}
{"id": "eqasc_train_5900", "prediction": "all x.((Food(x) & Eaten(x)) -> Nutritious(x))", "score": 0}
{"id": "eqasc_train_5901", "prediction": "all x.(Sponge(x) -> SourceOfNutrition(x))", "score": 0}
{"id": "eqasc_train_5902", "prediction": "all x.((Fish(x) | MarineAnimal(x)) -> Abounds(x))", "score": 0}
{"id": "eqasc_train_5903", "prediction": "all x.(Sponges(x) -> SourceOfFood(x))", "score": 1}
{"id": "eqasc_train_5904", "prediction": "all x.(Spot(x) -> (LivesOnBottomOfOceans(x) | LivesOnBottomOfRivers(x) | LivesOnBottomOfStreams(x)))", "score": 0}
{"id": "eqasc_train_5905", "prediction": "all x y.((SpeciesOfFish(x) & Ocean(y)) -> FindsFoodOnBottomOf(x,y))", "score": 0}
{"id": "eqasc_train_5906", "prediction": "all x.(CoralReef(x) -> (HomeTo(x,y) & (Fish(y) | Sponge(y) | Algae(y) | Mollusk(y))))", "score": 0}
{"id": "eqasc_train_5907", "prediction": "all x.(CoralReef(x) -> HomeToManyFish(x))", "score": 0}
{"id": "eqasc_train_5908", "prediction": "all x.(Sponge(x) -> AttachedToOceanFloor(x))", "score": 0}
{"id": "eqasc_train_5909", "prediction": "all x.((Organism(x) & AttachedToOceanFloor(x)) -> SourceOfFoodForManySpeciesOfFish(x))", "score": 0}
{"id": "eqasc_train_5910", "prediction": "all x.(SeaTurtle(x) -> (EatsSponges(x) | EatsMarineWheels(x) | EatsMolluscs(x)))", "score": 0}
{"id": "eqasc_train_5911", "prediction": "all x y.((SeaTurtle(x) & Fish(y)) -> (SharesFoodSources(x,y) & SharesFoodSources(y,x)))", "score": 0}
{"id": "eqasc_train_5912", "prediction": "all x.(SeaSponge(x) -> Animal(x))", "score": 0}
{"id": "eqasc_train_5913", "prediction": "all x.((Animal(x) & PhylumPorifera(x)) -> SourceOfFoodForFishSpecies(x))", "score": 0}
{"id": "eqasc_train_5914", "prediction": "all x.(Sponge(x) -> Sessile(x))", "score": 0}
{"id": "eqasc_train_5915", "prediction": "all x.(SessileOrganism(x) -> SourceOfFood(x))", "score": 0}
{"id": "eqasc_train_5916", "prediction": "all x.(Oncogene(x) -> PromotesDivisionOfCellsWithDamagedDNA(x))", "score": 0}
{"id": "eqasc_train_5917", "prediction": "all x.((Carcinogenic(x) | Oncogenic(x)) -> CausesCancer(x))", "score": 0}
{"id": "eqasc_train_5918", "prediction": "all x.(CarnivorogenicSubstance(x) -> PromotesDivisionOfCellsWithDamagedDNA(x))", "score": 0}
{"id": "eqasc_train_5919", "prediction": "all x y.((Oncogene(x) & Cell(y) & DamagedParts(y)) -> PromotesDivision(x,y))", "score": 0}
{"id": "eqasc_train_5920", "prediction": "all x.(Oncogene(x) -> (PromotesDivisionOfCells(x) & DamagedDeoxyribonucleicAcid(x)))", "score": 0}
{"id": "eqasc_train_5921", "prediction": "all x y.((Oncogene(x) & Cell(y) & DamagedDeoxyribonucleicAcid(y)) -> PromotesDivision(x,y))", "score": 0}
{"id": "eqasc_train_5922", "prediction": "all x.(Oncogene(x) -> (Gene(x) & CausesCancerousChange(x)))", "score": 0}
{"id": "eqasc_train_5923", "prediction": "all x y.((Cancer(x) & Cell(y) & DamagedDNA(y)) -> PromotesDivision(x,y))", "score": 0}
{"id": "eqasc_train_5924", "prediction": "all x y.((Oncogene(x) & Cell(y) & Mutation(y)) -> PromotesDivision(x,y))", "score": 0}
{"id": "eqasc_train_5925", "prediction": "all x.(Oncogene(x) -> PromotesDividence(x))", "score": 0}
{"id": "eqasc_train_5926", "prediction": "all x.((Gene(x) & PromotesDividence(x)) -> DamagedDNA(x))", "score": 0}
{"id": "eqasc_train_5927", "prediction": "all x.(Oncogene(x) -> TurnsOnCellGrowth(x))", "score": 0}
{"id": "eqasc_train_5928", "prediction": "all x y.((CellGrowth(x) & Cell(y) & DamagedDNA(y)) -> PromotesDivision(x,y))", "score": 0}
{"id": "eqasc_train_5929", "prediction": "all x y.((ThermalConductor(x) & ExposedToHeat(x)) -> MayBecomeHot(x))", "score": 0}
{"id": "eqasc_train_5930", "prediction": "all x.(Copper(x) -> GreatThermalConductor(x))", "score": 0}
{"id": "eqasc_train_5931", "prediction": "all x y.((Cuircon(x) & SourceOfHeat(y) & ExposedTo(x,y)) -> MayBecomeHot(x))", "score": 0}
{"id": "eqasc_train_5932", "prediction": "all x y.((Sun(x) & Planet(y)) -> Heats(x,y))", "score": 0}
{"id": "eqasc_train_5933", "prediction": "all x y.((ThermalConductor(x) & ExposedToSun(x)) -> MayBecomeHot(y))", "score": 0}
{"id": "eqasc_train_5934", "prediction": "all x.(Metal(x) -> (GoodConductorOfHeat(x) | ThermalConductorOfHeat(x)))", "score": 0}
{"id": "eqasc_train_5935", "prediction": "all x.((Metal(x) & ExposedToHeat(x)) -> MayBecomeHot(x))", "score": 0}
{"id": "eqasc_train_5936", "prediction": "all x.((Cuircon(x) & ExposedToHeat(x)) -> Hot(x))", "score": 0}
{"id": "eqasc_train_5937", "prediction": "all x.(DomesticWater(x) -> HeatsBySolarThermalWaterHeater(x))", "score": 0}
{"id": "eqasc_train_5938", "prediction": "all x y.((ThermalConductor(x) & Water(y)) -> ChangesTemperature(x,y))", "score": 0}
{"id": "eqasc_train_5939", "prediction": "all x.((Cuircone(x) & ExposedToHeat(x)) -> Hot(x))", "score": 0}
{"id": "eqasc_train_5940", "prediction": "all x.((Cuir(x) & ExposedToHeat(x)) -> MayBecomeHot(x))", "score": 0}
{"id": "eqasc_train_5941", "prediction": "all x y.((Copper(x) & HeatSource(y) & ExposedTo(x,y)) -> MayBecomeHot(x))", "score": 0}
{"id": "eqasc_train_5942", "prediction": "all x y.((Cuircon(x) & SourceOfHeat(y) & ExposedTo(x,y)) -> MayEasilyBecomeHot(x))", "score": 0}
{"id": "eqasc_train_5943", "prediction": "all x y.((ChemicalSplashing(x) & Human(y)) -> CausesHarmTo(x,y))", "score": 0}
{"id": "eqasc_train_5944", "prediction": "all x.(GravityBodylyHarm(x) -> (LivingInjuries(x) | ChallengingInjuries(x)))", "score": 0}
{"id": "eqasc_train_5945", "prediction": "all x.(ChemicalSplashing(x) -> CausesLivingInjuries(x))", "score": 0}
{"id": "eqasc_train_5946", "prediction": "all x.(ChemicalWaffen(x) -> ToxicChemicals(x))", "score": 0}
{"id": "eqasc_train_5947", "prediction": "all x.((ToxicMaterial(x) & SplashOnHuman(x)) -> CanCauseHarm(x))", "score": 0}
{"id": "eqasc_train_5948", "prediction": "all x.((GardeningChemicals(x) & PaintingSupplies(x)) -> (EasyToSplash(x) & EasyToSplash(x)))", "score": 0}
{"id": "eqasc_train_5949", "prediction": "all x y.((Gardening(x) & Painting(y)) -> CausesHarmToHumans(x,y))", "score": 0}
{"id": "eqasc_train_5950", "prediction": "all x.(ChemicalSplashGoggles(x) -> ProvidesMaximalProtectionFromSplashes(x))", "score": 0}
{"id": "eqasc_train_5951", "prediction": "all x.(Goggles(x) -> PreventsHarmToHumans(x))", "score": 0}
{"id": "eqasc_train_5952", "prediction": "exists x.(Pain(x) & Harmful(x))", "score": 0}
{"id": "eqasc_train_5953", "prediction": "all x y.((ChemicalSplashing(x) & Human(y)) -> CausesPain(x,y))", "score": 0}
{"id": "eqasc_train_5954", "prediction": "exists x.(SurgicalNitrileGlove(x) & OffersLimitedSplashProtection(x))", "score": 0}
{"id": "eqasc_train_5955", "prediction": "exists x.(SurgicalNitrileGlove(x) & HelpsPreventHarmToHumans(x))", "score": 0}
{"id": "eqasc_train_5956", "prediction": "all x y.((ChemicalSplashing(x) & Animal(y)) -> CausesHarm(x,y))", "score": 0}
{"id": "eqasc_train_5957", "prediction": "all x y.((ChemicalSplashing(x) & Human(y)) -> CausesPainTo(x,y))", "score": 0}
{"id": "eqasc_train_5958", "prediction": "all x.(ChemicalSplashGoggles(x) -> Advised(x))", "score": 0}
{"id": "eqasc_train_5959", "prediction": "all x.(Goggles(x) -> PreventsHarmToHumans(x))", "score": 0}
{"id": "eqasc_train_5960", "prediction": "all x.(SulfuricAcid(x) -> HighlyCorrosiveChemical(x))", "score": 0}
{"id": "eqasc_train_5961", "prediction": "all x.(SulfuricAcidSplashing(x) -> CausesHarmToHumans(x))", "score": 0}
{"id": "eqasc_train_5962", "prediction": "all x.(Man(x) -> Human(x))", "score": 0}
{"id": "eqasc_train_5963", "prediction": "all x.(ChemicalSplashing(x) -> CausesHarmToMan(x))", "score": 0}
{"id": "eqasc_train_5964", "prediction": "all x.(Ozone(x) -> (HarmfulToHumans(x) & HarmfulToCrops(x)))", "score": 0}
{"id": "eqasc_train_5965", "prediction": "all x.(Chemical(x) -> CanHarmCrops(x))", "score": 0}
{"id": "eqasc_train_5966", "prediction": "all x.(ChemicalSplash(x) -> Dangerous(x))", "score": 0}
{"id": "eqasc_train_5967", "prediction": "all x.(Chemical(x) -> DangerousToEyes(x))", "score": 0}
{"id": "eqasc_train_5968", "prediction": "all x.(HumanEmbryo(x) -> FullyHuman(x))", "score": 0}
{"id": "eqasc_train_5969", "prediction": "all x.(ChemicalSplashing(x) -> CanHarmEmbryos(x))", "score": 0}
{"id": "eqasc_train_5970", "prediction": "all x.(Toxin(x) -> (Chemical(x) & ExtremelyPoisonous(x)))", "score": 0}
{"id": "eqasc_train_5971", "prediction": "all x.(ToxinSplashing(x) -> CausesHarmToHumans(x))", "score": 0}
{"id": "eqasc_train_5972", "prediction": "all x.(CausesCancer(x) -> (CausesCancer(x) & ProducesMutationInDNA(x)))", "score": 0}
{"id": "eqasc_train_5973", "prediction": "all x.(Asbestos(x) -> Carcinogen(x))", "score": 0}
{"id": "eqasc_train_5974", "prediction": "all x.(Asbestos(x) -> CausesCancerByProducingMutationInDNA(x))", "score": 0}
{"id": "eqasc_train_5975", "prediction": "all x.(Asbestos(x) -> DangerousCarcinogen(x))", "score": 0}
{"id": "eqasc_train_5976", "prediction": "all x.(Asbestos(x) -> CausesCancer(x))", "score": 0}
{"id": "eqasc_train_5977", "prediction": "all x.((CausesDNAChanges(x) & Mutagen(x)) | PotentialCarcinogen(x))", "score": 0}
{"id": "eqasc_train_5978", "prediction": "all x.(Mutagen(x) -> CausesMutagens(x))", "score": 0}
{"id": "eqasc_train_5979", "prediction": "all x.(Cancer(x) -> CausesDeath(x))", "score": 0}
{"id": "eqasc_train_5980", "prediction": "all x.(CausesDeath(x) -> Carcinogen(x))", "score": 0}
{"id": "eqasc_train_5981", "prediction": "all x.(JetFuel(x) -> Carcinogen(x))", "score": 0}
{"id": "eqasc_train_5982", "prediction": "all x.(JetFuel(x) -> CausesCancerByProducingMutationsInDNA(x))", "score": 0}
{"id": "eqasc_train_5983", "prediction": "all x y.((JetFuel(x) & Organism(y)) -> Mutates(x,y))", "score": 0}
{"id": "eqasc_train_5984", "prediction": "all x.(Mutations(x) -> ChangesInDNASequence(x))", "score": 0}
{"id": "eqasc_train_5985", "prediction": "all x.(CausesCancer(x) -> (CausesCancer(x) & ProducesDNAChanges(x)))", "score": 0}
{"id": "eqasc_train_5986", "prediction": "all x.(CausesCancer(x) -> (CausesCancer(x) & ProducesMutationInDexyribonucleinAcid(x)))", "score": 0}
{"id": "eqasc_train_5987", "prediction": "all x.(Smoke(x) -> FullOfCarcinogens(x))", "score": 0}
{"id": "eqasc_train_5988", "prediction": "all x.(Smoke(x) -> CausesCancerByProducingMutationsInDNA(x))", "score": 0}
{"id": "eqasc_train_5989", "prediction": "all x.(LungCancer(x) -> DeadliestOfAllCancers(x))", "score": 0}
{"id": "eqasc_train_5990", "prediction": "all x y.((CausesMutation(x) & DNAArea(y)) -> (CausesMutation(x,y) & CausesMutation(x,y)))", "score": 0}
{"id": "eqasc_train_5991", "prediction": "all x.((CausesCancer(x) & ProducesMutation(x,deoxyribonucleicAcid)) -> MostCarcinogensCausesCancer(x))", "score": 0}
{"id": "eqasc_train_5992", "prediction": "all x y.((TapeMeasure(x) & TapeMeasure(y)) -> MeasuresLength(x,y))", "score": 0}
{"id": "eqasc_train_5993", "prediction": "all x.(Measurement(x) -> TakenInInches(x))", "score": 0}
{"id": "eqasc_train_5994", "prediction": "all x.(Length(x) -> MeasuredInInches(x))", "score": 0}
{"id": "eqasc_train_5995", "prediction": "all x y.((TapeMeasure(x) & TapeMeasure(y)) -> MeasuresDistance(x,y))", "score": 0}
{"id": "eqasc_train_5996", "prediction": "all x.(Meter(x) -> MeasuresLength(x))", "score": 0}
{"id": "eqasc_train_5997", "prediction": "all x.(TapeMeasure(x) -> MeasuresMeters(x))", "score": 0}
{"id": "eqasc_train_5998", "prediction": "all x.(TapeMeasure(x) -> MeasuresDistance(x))", "score": 0}
{"id": "eqasc_train_5999", "prediction": "all x.(TapeMeasure(x) -> MeasuresDistance(x))", "score": 0}
{"id": "eqasc_train_6000", "prediction": "all x.(Length(x) -> GivenInCentrics(x))", "score": 0}
{"id": "eqasc_train_6001", "prediction": "all x.(TapeMeasure(x) -> ReportsCentrices(x))", "score": 0}
{"id": "eqasc_train_6002", "prediction": "all x.(TapeMeasure(x) -> MeasuresDistance(x))", "score": 0}
{"id": "eqasc_train_6003", "prediction": "all x y.((Measure(x) & Measure(y)) -> DeterminesLength(x,y))", "score": 0}
{"id": "eqasc_train_6004", "prediction": "all x.((TapeMeasure(x) & Room(y)) -> FindDimensions(x,y))", "score": 0}
{"id": "eqasc_train_6005", "prediction": "all x y.((MeasureLength(x) & Room(y)) -> FindDimensions(x,y))", "score": 0}
{"id": "eqasc_train_6006", "prediction": "all x.(LinearMeasure(x) -> (DeterminesDistances(x) | DeterminesLengths(x) | DeterminesWides(x) | DeterminesThicknesses(x)))", "score": 0}
{"id": "eqasc_train_6007", "prediction": "all x.(TapeMeasure(x) -> MeasuresDistances(x))", "score": 0}
{"id": "eqasc_train_6008", "prediction": "all x.(Square(x) -> SideLength(x))", "score": 0}
{"id": "eqasc_train_6009", "prediction": "all x y.((TapeMeasure(x) & Square(y)) -> MeasuresSideOf(x,y))", "score": 0}
{"id": "eqasc_train_6010", "prediction": "all x.((BaseUnit(x) & MetricSystem(x)) -> Meter(x))", "score": 0}
{"id": "eqasc_train_6011", "prediction": "all x y.((TapeMeasure(x) & Measures(x,y)) -> UsesBaseUnit(x,y))", "score": 0}
{"id": "eqasc_train_6012", "prediction": "all x.(Length(x) -> Long(x))", "score": 0}
{"id": "eqasc_train_6013", "prediction": "all x y.((TapeMeasure(x) & Measure(y)) -> UsedToSeeHowLong(x,y))", "score": 0}
{"id": "eqasc_train_6014", "prediction": "all x.(TapeMeasure(x) -> MeasuresHowLong(x))", "score": 0}
{"id": "eqasc_train_6015", "prediction": "all x.(Length(x) -> InInches(x))", "score": 0}
{"id": "eqasc_train_6016", "prediction": "all x y.((TapeMeasure(x) & TapeMeasure(y)) -> MeasuresInches(x,y))", "score": 0}
{"id": "eqasc_train_6017", "prediction": "all x y.((MeasuresLength(x) & MeasuresLength(y)) -> (Meter(x) & Land(y) & Hectare(y)))", "score": 0}
{"id": "eqasc_train_6018", "prediction": "all x y.((TapeMeasure(x) & Meter(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_train_6019", "prediction": "all x.(Size(x) -> TotalLength(x))", "score": 0}
{"id": "eqasc_train_6020", "prediction": "all x y.((TapeMeasure(x) & Size(y)) -> MeasuresAllSizes(x,y))", "score": 0}
{"id": "eqasc_train_6021", "prediction": "all x.((Animal(x) & RequiresNutrients(x)) -> Survival(x))", "score": 0}
{"id": "eqasc_train_6022", "prediction": "all x y.((Animal(x) & Human(y)) -> EatsPlants(x,y))", "score": 0}
{"id": "eqasc_train_6023", "prediction": "all x y z.((Animal(x) & Human(y) & Plant(z)) -> (NeedsToEat(x,z) & Survives(x,z)))", "score": 0}
{"id": "eqasc_train_6024", "prediction": "all x.(Human(x) -> RequiresNutrientsForSurvival(x))", "score": 0}
{"id": "eqasc_train_6025", "prediction": "all x.(Water(x) -> (ImportantNutrient(x) & ImportantForAnimals(x) & ImportantForHumans(x)))", "score": 0}
{"id": "eqasc_train_6026", "prediction": "all x.(Animal(x) -> RequiresWaterForSurvival(x))", "score": 0}
{"id": "eqasc_train_6027", "prediction": "all x.(Food(x) -> IdealNutrientSource(x))", "score": 0}
{"id": "eqasc_train_6028", "prediction": "all x.((Animal(x) & RequiresFood(x)) -> Survival(x))", "score": 0}
{"id": "eqasc_train_6029", "prediction": "all x.(Animal(x) -> RequiresPlantsForSurvival(x))", "score": 0}
{"id": "eqasc_train_6030", "prediction": "all x.(Animal(x) -> AcquiresNutrientsByIngestion(x))", "score": 0}
{"id": "eqasc_train_6031", "prediction": "all x.(Animal(x) -> UsesIngestionToSurvive(x))", "score": 0}
{"id": "eqasc_train_6032", "prediction": "all x y.((Animal(x) & Animal(y)) -> DigestionIsImportantForSurvival(x,y))", "score": 0}
{"id": "eqasc_train_6033", "prediction": "all x y.((Animal(x) & Potassium(y)) -> ImportantForSurvival(x,y))", "score": 0}
{"id": "eqasc_train_6034", "prediction": "all x y.((Hydropower(x) & River(y)) -> Damms(x,y))", "score": 0}
{"id": "eqasc_train_6035", "prediction": "(FirstDamOnColoradoRiverBelowGrandCanyon(HooverDam) & BuiltBetween1931And1935(HooverDam))", "score": 0}
{"id": "eqasc_train_6036", "prediction": "all x.(HooverDam(x) -> ProducesHydropower(x))", "score": 0}
{"id": "eqasc_train_6037", "prediction": "all x.(River(x) -> DammedToCreateReservoirsAndHydroelectricPower(x))", "score": 0}
{"id": "eqasc_train_6038", "prediction": "all x.((ByproductOfHydropower(x) & Resevoir(x)) -> Hydropower(x))", "score": 0}
{"id": "eqasc_train_6039", "prediction": "all x y.((Scientist(x) & Dam(y)) -> DevastatesRivers(x,y))", "score": 0}
{"id": "eqasc_train_6040", "prediction": "all x.(Hydropower(x) -> DevastateRivers(x))", "score": 0}
{"id": "eqasc_train_6041", "prediction": "all x.(Hydropower(x) -> (RenewableEconomicSourceOfElectricity(x) & EconomicSourceOfElectricity(x)))", "score": 0}
{"id": "eqasc_train_6042", "prediction": "all x y.((RenewableEconomicSourceOfElectricity(x) & River(y) & Damms(x,y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_train_6043", "prediction": "all x y.((Stream(x) & River(y)) -> (CrossedOnRocks(x) | CrossedOnBeaverDams(x) | CrossedOnFallenTrees(x) | CrossedByWading(x)))", "score": 0}
{"id": "eqasc_train_6044", "prediction": "all x y.((Hydropower(x) & Beaver(y)) -> DammsStreamsWithFallenTrees(y,x))", "score": 0}
{"id": "eqasc_train_6045", "prediction": "all x.((SourceOfEnergy(x) & Hydropower(x)) -> SourceOfEnergy(x))", "score": 0}
{"id": "eqasc_train_6046", "prediction": "all x y.((River(x) & Damming(x,y)) -> SourceOfEnergy(x))", "score": 0}
{"id": "eqasc_train_6047", "prediction": "all x y.((River(x) & Damming(x,y)) -> ProvidesRenewableResource(x))", "score": 0}
{"id": "eqasc_train_6048", "prediction": "all x y.((Dam(x) & River(y) & Creek(y)) -> HelpsPreventFloods(x,y))", "score": 0}
{"id": "eqasc_train_6049", "prediction": "all x.(Hydropower(x) -> RequiresHelpingPreventFloods(x))", "score": 0}
{"id": "eqasc_train_6050", "prediction": "all x y.((Hydropower(x) & River(y)) -> RequiresDevastating(x,y))", "score": 0}
{"id": "eqasc_train_6051", "prediction": "all x y.((ConservingWater(x) & DryEnvironment(y)) -> CanBeUsedForSurvival(x,y))", "score": 0}
{"id": "eqasc_train_6052", "prediction": "all x y.((DesertPlant(x) & HotDryDesertEnvironment(y)) -> AdaptsTo(x,y))", "score": 0}
{"id": "eqasc_train_6053", "prediction": "all x y.((DesertPlant(x) & Desert(y)) -> ConservesWaterToSurvive(x,y))", "score": 0}
{"id": "eqasc_train_6054", "prediction": "all x.(Desert(x) -> DryArea(x))", "score": 0}
{"id": "eqasc_train_6055", "prediction": "all x.(ConservingWater(x) -> CanBeUsedForSurvivalInDesert(x))", "score": 0}
{"id": "eqasc_train_6056", "prediction": "all x.(Desert(x) -> (Hot(x) & Dry(x)))", "score": 0}
{"id": "eqasc_train_6057", "prediction": "all x y.((ConservingWater(x) & Desert(y)) -> CanBeUsedForSurvival(x,y))", "score": 0}
{"id": "eqasc_train_6058", "prediction": "all x.(Plant(x) -> SurvivesWithWater(x))", "score": 0}
{"id": "eqasc_train_6059", "prediction": "all x.(Plant(x) -> ConservesWater(x))", "score": 0}
{"id": "eqasc_train_6060", "prediction": "all x.(Camel(x) -> ConservesWater(x))", "score": 0}
{"id": "eqasc_train_6061", "prediction": "all x.(Camel(x) -> (HasWater(x) & Survives(x)))", "score": 0}
{"id": "eqasc_train_6062", "prediction": "all x.(WaterConservation(x) -> (SavesMoney(x) & SavesEnergy(x)))", "score": 0}
{"id": "eqasc_train_6063", "prediction": "all x.((SavingWater(x) & DryEnvironment(x)) -> UsedForSurvival(x))", "score": 0}
{"id": "eqasc_train_6064", "prediction": "all x.(Survival(x) -> (ContinuationOfIndividualLife(x) & ConsistentOfSpeciesLife(x)))", "score": 0}
{"id": "eqasc_train_6065", "prediction": "all x.(ConservingWater(x) -> CanBeUsedForContinuationOfLife(x))", "score": 0}
{"id": "eqasc_train_6066", "prediction": "all x.(SwissWidewest(x) -> (SemiDesert(x) & VeryDry(x)))", "score": 0}
{"id": "eqasc_train_6067", "prediction": "all x y.((ConservingWater(x) & Desert(y)) -> CanBeUsedForSurvival(x,y))", "score": 0}
{"id": "eqasc_train_6068", "prediction": "all x.(Desert(x) -> (VeryDry(x) & VeryDry(x)))", "score": 0}
{"id": "eqasc_train_6069", "prediction": "all x.(Cactus(x) -> WaterConservation(x))", "score": 0}
{"id": "eqasc_train_6070", "prediction": "all x.(Cactus(x) -> SurvivesInDryEnvironment(x))", "score": 0}
{"id": "eqasc_train_6071", "prediction": "all x.(Camel(x) -> SurvivesInDryEnvironment(x))", "score": 0}
{"id": "eqasc_train_6072", "prediction": "all x.(Cactus(x) -> (CorrugatedStems(x) & ExpandsQuickly(x) & WaterBecomesAvailable(x)))", "score": 0}
{"id": "eqasc_train_6073", "prediction": "all x y.((Cactus(x) & ExpandableStems(x)) -> HelpsSurviveInDryEnvironments(x,y))", "score": 0}
{"id": "eqasc_train_6074", "prediction": "all x.((Plant(x) & UniqueLeafAdaptations(x)) -> ConservesWater(x))", "score": 0}
{"id": "eqasc_train_6075", "prediction": "all x y.((UniqueLeafAdaptation(x) & Plant(y)) -> EnabledSurvivalInDryEnvironments(y))", "score": 0}
{"id": "eqasc_train_6076", "prediction": "all x.((Climate(x) & TooDry(x)) -> (Arid(x) & Inhospitable(x)))", "score": 0}
{"id": "eqasc_train_6077", "prediction": "all x y.((ConservingWater(x) & AridLocales(y)) -> CanBeUsedForSurvival(x,y))", "score": 0}
{"id": "eqasc_train_6078", "prediction": "all x.((Water(x) & Soda(y)) -> Follows(x,y))", "score": 0}
{"id": "eqasc_train_6079", "prediction": "all x.((Salt(x) & DryEnvironment(x)) -> CanBeUsedForSurvival(x))", "score": 0}
{"id": "eqasc_train_6080", "prediction": "all x y z.((Producer(x) & CarbonDioxide(y) & Water(z) & SolarEnergy(x)) -> ConvertsToCarbohydrates(x,y,z))", "score": 0}
{"id": "eqasc_train_6081", "prediction": "all x.((Photosynthesis(x) | CellularRespiration(x)) -> LifeSupportingPlantProcess(x))", "score": 0}
{"id": "eqasc_train_6082", "prediction": "all x.((PlantProcess(x) & CarbonDioxide(x) & Water(x) & SolarEnergy(x)) -> Carbohydrates(x))", "score": 0}
{"id": "eqasc_train_6083", "prediction": "all x y.((PrimaryProducer(x) & SolarEnergy(y)) -> ConvertsToChemicalEnergy(x,y))", "score": 0}
{"id": "eqasc_train_6084", "prediction": "all x y z.((PrimaryProducer(x) & Photosynthesis(y) & ChemicalEnergy(z)) -> UtilizesFor(x,y,z))", "score": 0}
{"id": "eqasc_train_6085", "prediction": "all x.(GreenPlant(x) -> Producer(x))", "score": 0}
{"id": "eqasc_train_6086", "prediction": "all x y z.((Plant(x) & CarbonDioxide(y) & Water(z) & SolarEnergy(x)) -> Photosynthesis(x))", "score": 0}
{"id": "eqasc_train_6087", "prediction": "all x.(Photosynthesis(x) -> ConversionOfElectromagneticEnergyToStoredChemicalEnergy(x))", "score": 0}
{"id": "eqasc_train_6088", "prediction": "all x y z.((ConversionOfElectromagneticEnergy(x) & Carbohydrates(y) & EletromagneticEnergy(z)) -> CreatesStoredChemicalEnergy(x,y,z))", "score": 0}
{"id": "eqasc_train_6089", "prediction": "all x.(Producer(x) -> (Organism(x) & (GreenPlant(x) | GreenPlant(x)) & ConvertsLightEnergy(x)))", "score": 0}
{"id": "eqasc_train_6090", "prediction": "all x.(GreenPlant(x) -> (ConvertsCarbonDioxideWaterSolarEnergy(x) & CarbonDioxideWaterSolarEnergyToCarbohydrates(x) & ForCarbohydrates(x)))", "score": 0}
{"id": "eqasc_train_6091", "prediction": "all x.(LeafCell(x) -> ProducesSugarByPhotosynthesis(x))", "score": 0}
{"id": "eqasc_train_6092", "prediction": "all x y.((Sugar(x) & LeafCell(y)) -> ProducedByProducers(x,y))", "score": 0}
{"id": "eqasc_train_6093", "prediction": "all x.(Chloroplast(x) -> PhotosynthesisSite(x))", "score": 0}
{"id": "eqasc_train_6094", "prediction": "all x y z.((Chlorophyll(x) & Producer(y) & CarbonDioxide(z) & Water(z) & SolarEnergy(z)) -> ConvertsToCarbohydrates(y,z))", "score": 0}
{"id": "eqasc_train_6095", "prediction": "(all x.(Fish(x) -> Consumer(x)) & all y.(Plant(y) -> Producer(y)))", "score": 0}
{"id": "eqasc_train_6096", "prediction": "all x.(Photosynthesis(x) -> (ConvertsCarbonDioxideWaterSolarEnergy(x) & CarbonDioxideWaterSolarEnergy(x)))", "score": 0}
{"id": "eqasc_train_6097", "prediction": "all x y.((Plant(x) & Carbohydrate(y)) -> Creates(x,y))", "score": 0}
{"id": "eqasc_train_6098", "prediction": "all x.(Photosynthesis(x) -> (ConvertsCarbonDioxideWaterSolarEnergy(x) & CarbonDioxideWaterSolarEnergy(x) & Carbohydrates(x)))", "score": 0}
{"id": "eqasc_train_6099", "prediction": "all x.(Photosynthesis(x) -> (GreenPlantsConvertFromCarbonDioxideWaterSolarEnergy(x) & CarbonDioxideWaterSolarEnergy(x) & CarbohydratesForSelf(x)))", "score": 0}
{"id": "eqasc_train_6100", "prediction": "all x.(Photosynthesis(x) -> (ProducesFood(x) & ProducesOxygen(x) & InGreenPlants(x)))", "score": 0}
{"id": "eqasc_train_6101", "prediction": "all x.(PhotosyntheticPlant(x) -> ConvertsSolarEnergyToChemicalBondEnergy(x))", "score": 0}
{"id": "eqasc_train_6102", "prediction": "all x y.((Photosynthesis(x) & SolarEnergy(y)) -> ConvertsToChemicalBondEnergy(x,y))", "score": 0}
{"id": "eqasc_train_6103", "prediction": "all x.(Water(x) -> (Photosynthesis(x) | Respiration(x)))", "score": 0}
{"id": "eqasc_train_6104", "prediction": "all x.(EnergyConversion(x) -> ReleasesWater(x))", "score": 0}
{"id": "eqasc_train_6105", "prediction": "all x.(Photosynthesis(x) -> ChiefFunctionOfLeaves(x))", "score": 0}
{"id": "eqasc_train_6106", "prediction": "all x.(Plant(x) -> RequiresLeaves(x))", "score": 0}
{"id": "eqasc_train_6107", "prediction": "all x y.((Virus(x) & LivingOrganism(y)) -> InfectsAndLivesInCells(x,y))", "score": 0}
{"id": "eqasc_train_6108", "prediction": "all x.(Infection(x) -> (Infection(x) & CausedByInvasionOfVirusOrMicroorganism(x)))", "score": 0}
{"id": "eqasc_train_6109", "prediction": "all x y.((Microorganism(x) & LivingOrganism(y)) -> CausesIllnessInCells(x,y))", "score": 0}
{"id": "eqasc_train_6110", "prediction": "all x.(Virus(x) -> (InfectsCells(x) & LivesInCells(x)))", "score": 0}
{"id": "eqasc_train_6111", "prediction": "all x.(Yeast(x) -> LivingOrganism(x))", "score": 0}
{"id": "eqasc_train_6112", "prediction": "all x y.((Virus(x) & Yay(y)) -> (Infects(x,y) & LivesInCells(x,y)))", "score": 0}
{"id": "eqasc_train_6113", "prediction": "all x y.((Virus(x) & Human(y)) -> InfectsAndLivesInCells(x,y))", "score": 0}
{"id": "eqasc_train_6114", "prediction": "all x.((PathogenicOrganism(x) & LivesInsideCells(x)) -> HasSnapAdaptation(x))", "score": 0}
{"id": "eqasc_train_6115", "prediction": "all x.(Virus(x) -> PathogenicOrganism(x))", "score": 0}
{"id": "eqasc_train_6116", "prediction": "all x y.((Virus(x) & Animal(y)) -> Infects(x,y))", "score": 0}
{"id": "eqasc_train_6117", "prediction": "all x.(Plant(x) -> ComplexLivingOrganism(x))", "score": 0}
{"id": "eqasc_train_6118", "prediction": "all x y.((Virus(x) & Plant(y)) -> (Infects(x,y) & LivesInCell(x,y)))", "score": 0}
{"id": "eqasc_train_6119", "prediction": "all x y.((Influenza(x) & LivingOrganism(y)) -> (Infects(x,y) & LivesInCells(x,y)))", "score": 0}
{"id": "eqasc_train_6120", "prediction": "all x.((Virus(x) & Nonenveloped(x)) -> ReleasedByLysing(x))", "score": 0}
{"id": "eqasc_train_6121", "prediction": "all x.(InfectionByViruses(x) -> (LeadsToLysing(x) & LeadsToRelease(x)))", "score": 0}
{"id": "eqasc_train_6122", "prediction": "all x.(Mammal(x) -> (GeneratesLittleBurstsOfHeat(x) & Shivers(x)))", "score": 2}
{"id": "eqasc_train_6123", "prediction": "all x.(Mammal(x) -> GeneratesLittleBurstsOfEnergyByShivering(x))", "score": 0}
{"id": "eqasc_train_6124", "prediction": "all x.(PolarBear(x) -> Mammal(x))", "score": 1}
{"id": "eqasc_train_6125", "prediction": "all x.(PolarBear(x) -> GeneratesHeatByShivering(x))", "score": 0}
{"id": "eqasc_train_6126", "prediction": "all x.(Shivering(x) -> (CostsBird(x) & DepletesEnergyStores(x)))", "score": 0}
{"id": "eqasc_train_6127", "prediction": "all x.(Mammal(x) -> (GeneratesHeat(x) & DepletesEnergyStores(x)))", "score": 0}
{"id": "eqasc_train_6128", "prediction": "all x.(Human(x) -> (GeneratesLittleBurstsOfHeat(x) & Shivers(x)))", "score": 1}
{"id": "eqasc_train_6129", "prediction": "all x.(Heat(x) -> (MuscleAction(x) & Shivering(x)))", "score": 0}
{"id": "eqasc_train_6130", "prediction": "all x.(Mammal(x) -> GeneratesHeatWithMuscles(x))", "score": 0}
{"id": "eqasc_train_6131", "prediction": "all x.((IntenseShivering(x) & SeverePain(x)) -> NaturalBodyReflexesToColdWater(x))", "score": 0}
{"id": "eqasc_train_6132", "prediction": "all x.(Mammal(x) -> (GeneratesLittleBurstsOfHeat(x) & UsesNaturalBodyReflexesToColdWater(x)))", "score": 0}
{"id": "eqasc_train_6133", "prediction": "all x.(Mammal(x) -> UsesThermogenesisForHeat(x))", "score": 0}
{"id": "eqasc_train_6134", "prediction": "all x.((Mammal(x) & ColdWeather(x) & WarmBlooded(x)) -> Active(x))", "score": 0}
{"id": "eqasc_train_6135", "prediction": "all x.((WarmBlooded(x) & Cold(x)) -> StaysActive(x))", "score": 0}
{"id": "eqasc_train_6136", "prediction": "all x.(Mammal(x) -> (GeneratesLittleBurstsOfHeat(x) & MuscleContractions(x)))", "score": 0}
{"id": "eqasc_train_6137", "prediction": "all x.(Mammal(x) -> (GeneratesLittleBurstsOfHeat(x) & MuscleContractions(x)))", "score": 0}
{"id": "eqasc_train_6138", "prediction": "all x.(Mammal(x) -> GeneratesHeatByMuscleAction(x))", "score": 0}
{"id": "eqasc_train_6139", "prediction": "all x.((InabilityToShiver(x) | InabilityToReactToCold(x)) -> ContributesToHypothermia(x))", "score": 0}
{"id": "eqasc_train_6140", "prediction": "all x.(Mammal(x) -> (GeneratesLittleBurstsOfHeat(x) & ReactsToCold(x)))", "score": 0}
{"id": "eqasc_train_6141", "prediction": "all x.(PolarBear(x) -> (GeneratesLittleBurstsOfHeat(x) & Shivers(x)))", "score": 1}
{"id": "eqasc_train_6142", "prediction": "all x y.((IceWedging(x) & Ice(y)) -> (CausesRocksToCrack(y,x) & ExpandsInOpenings(y,x)))", "score": 0}
{"id": "eqasc_train_6143", "prediction": "all x.((OrdinaryIceRoad(x) & CracksInducedByTraffic(x)) -> Damaged(x))", "score": 0}
{"id": "eqasc_train_6144", "prediction": "all x.(IceWedging(x) -> CausesSevereDamage(x))", "score": 0}
{"id": "eqasc_train_6145", "prediction": "all x y.((Ice(x) & Rock(y) & ExpandsInOpenings(x,y)) -> MechanicalWeathering(x))", "score": 0}
{"id": "eqasc_train_6146", "prediction": "all x y.((Water(x) & CracksOfRocks(y)) -> (Freezes(x,y) & Expands(x,y)))", "score": 0}
{"id": "eqasc_train_6147", "prediction": "all x.(IceWedging(x) -> (WaterFreezes(x) & Expands(x)))", "score": 0}
{"id": "eqasc_train_6148", "prediction": "all x.((IceWedging(x) & MoistButColdClimate(x)) -> ExtremelyEffective(x))", "score": 0}
{"id": "eqasc_train_6149", "prediction": "all x y z.((MoistClimate(x) & ColdClimate(y) & Rock(z) & IceExpanding(z)) -> CracksBy(z,y))", "score": 0}
{"id": "eqasc_train_6150", "prediction": "all x.((Water(x) & FreezesIntoIce(x)) -> Expands(x))", "score": 0}
{"id": "eqasc_train_6151", "prediction": "all x y.((Water(x) & Rock(y)) -> CausesCrack(x,y))", "score": 0}
{"id": "eqasc_train_6152", "prediction": "all x.(FreezingWater(x) -> (ExpandsCrackingAndBreakingRocks(x)))", "score": 0}
{"id": "eqasc_train_6153", "prediction": "all x.(IceWedging(x) -> (FreezesWater(x) & ExpandsAndBreaksRocks(x)))", "score": 0}
{"id": "eqasc_train_6154", "prediction": "all x y.((MechanicalWeathering(x) & Rock(y)) -> CausesToCrack(x,y))", "score": 0}
{"id": "eqasc_train_6155", "prediction": "all x y z.((Ice(x) & Rock(y) & Opening(z) & CausesToCrack(x,y,z)) -> MechanicalWeathering(x))", "score": 0}
{"id": "eqasc_train_6156", "prediction": "all x y.((IceCausesRocksToCrack(x) & ExpandsInOpenings(x)) -> MechanicalWeathering(x))", "score": 0}
{"id": "eqasc_train_6157", "prediction": "all x.(MarineSpecies(x) -> LivesInShallowCoastalWaters(x))", "score": 0}
{"id": "eqasc_train_6158", "prediction": "all x.(KillerWhale(x) -> (PrefersShallow(x) & PrefersColder(x)))", "score": 0}
{"id": "eqasc_train_6159", "prediction": "all x.(KillerWhale(x) -> MarineSpecies(x))", "score": 0}
{"id": "eqasc_train_6160", "prediction": "all x.(MarineDolphin(x) -> (EndangeredByFishingNets(x) | EndangeredBySpeedboats(x) | EndangeredByPollution(x)))", "score": 0}
{"id": "eqasc_train_6161", "prediction": "all x.(Dolphin(x) -> (LivesInShallowCoastalWaters(x) & MostlyInShallowCoastalWaters(x)))", "score": 0}
{"id": "eqasc_train_6162", "prediction": "all x.(MarineOrganism(x) -> LivesNearSurface(x))", "score": 0}
{"id": "eqasc_train_6163", "prediction": "all x.(Organism(x) -> LivesInShallowCoastalWaters(x))", "score": 0}
{"id": "eqasc_train_6164", "prediction": "all x.(MarineSpecies(x) -> UsedForMedicalResearch(x))", "score": 0}
{"id": "eqasc_train_6165", "prediction": "all x y.((Organism(x) & FoundInShallowCoastalWaters(x)) -> UsedForMedicalResearch(y))", "score": 0}
{"id": "eqasc_train_6166", "prediction": "all x.(MarineTurtle(x) -> EndangeredSpecies(x))", "score": 0}
{"id": "eqasc_train_6167", "prediction": "exists x.(Turtle(x) & LivesInShallowCoastalWaters(x))", "score": 0}
{"id": "eqasc_train_6168", "prediction": "exists x.(MarineAlgaeSpecies(x) & (Toxic(x) | Harmful(x)))", "score": 0}
{"id": "eqasc_train_6169", "prediction": "all x.(Algae(x) -> exists y.(ShallowCoastalWater(y) & LivesIn(x,y)))", "score": 0}
{"id": "eqasc_train_6170", "prediction": "all x.(Species(x) -> (Aquatic(x) | Marine(x)))", "score": 0}
{"id": "eqasc_train_6171", "prediction": "all x.(AquaticSpecies(x) -> LivesInShallowCoastalWaters(x))", "score": 0}
{"id": "eqasc_train_6172", "prediction": "all x.(MarineScience(x) -> (StudyOfSea(x) & StudiesSea(x)))", "score": 0}
{"id": "eqasc_train_6173", "prediction": "all x.(SeaSpecies(x) -> LivesInShallowCoastalWaters(x))", "score": 0}
{"id": "eqasc_train_6174", "prediction": "all x.(Seahorse(x) -> (InhabitsShallowCoastalWaters(x) & (SeagrassBeds(x) | CoralReefs(x) | MangroveSwamps(x))))", "score": 0}
{"id": "eqasc_train_6175", "prediction": "all x.(Seahorse(x) -> MarineSpecies(x))", "score": 0}
{"id": "eqasc_train_6176", "prediction": "all x.(CoastalWater(x) -> TeemWithLife(x))", "score": 0}
{"id": "eqasc_train_6177", "prediction": "all x y.((MarineSpecies(x) & Area(y) & TeemingWithLife(y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_train_6178", "prediction": "all x.(Brachiopod(x) -> (StrictlyMarine(x) & FoundInShallowSeas(x)))", "score": 0}
{"id": "eqasc_train_6179", "prediction": "all x.(Brachiopod(x) -> LivesInShallowCoastalWaters(x))", "score": 0}
{"id": "eqasc_train_6180", "prediction": "all x.((Water(x) & Channel(x)) -> (Clear(x) & Shallow(x)))", "score": 0}
{"id": "eqasc_train_6181", "prediction": "all x.(CoastalWater(x) -> Calmer(x))", "score": 0}
{"id": "eqasc_train_6182", "prediction": "all x.(CoastalZone(x) -> (SituatedShallowBanks(x) & RichInFish(x)))", "score": 0}
{"id": "eqasc_train_6183", "prediction": "all x y.((MarineSpecies(x) & Water(y) & RichInFish(y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_train_6184", "prediction": "all x.((Warm(x) | Still(x) | Shallow(x)) -> Preferred(x))", "score": 0}
{"id": "eqasc_train_6185", "prediction": "all x.(MarineSpecies(x) -> LivesInWarmWaters(x))", "score": 0}
{"id": "eqasc_train_6186", "prediction": "all x y.((Bike(x) & Bicycle(y)) -> (PushingOnPedals(x,y) & CausesBikeToMove(x,y)))", "score": 0}
{"id": "eqasc_train_6187", "prediction": "all x.((OvercomesInertia(x) & MovesForward(x)) -> Difficult(x))", "score": 0}
{"id": "eqasc_train_6188", "prediction": "all x.(PushingOnPedals(x) -> OvercomesInertia(x))", "score": 0}
{"id": "eqasc_train_6189", "prediction": "all x.(Force(x) -> (Push(x) | Pull(x)))", "score": 0}
{"id": "eqasc_train_6190", "prediction": "all x y.((Bike(x) & Bicycle(y)) -> CausesMovement(x,y))", "score": 0}
{"id": "eqasc_train_6191", "prediction": "all x.(KineticFriction(x) -> ResistanceOnMovingObject(x))", "score": 0}
{"id": "eqasc_train_6192", "prediction": "all x y.((Bike(x) & PushingOnPedals(x,y)) -> KineticFriction(x))", "score": 0}
{"id": "eqasc_train_6193", "prediction": "all x.(BikeShoes(x) -> AllowsRiderToPullDuringPedalStroke(x))", "score": 0}
{"id": "eqasc_train_6194", "prediction": "all x y.((Bike(x) & Bicycle(y)) -> (PressingWithStrokes(x,y) & CausesBikeToMove(x,y)))", "score": 0}
{"id": "eqasc_train_6195", "prediction": "(all x.(BikeCommuting(x) -> Green(x)) & all y.(BikeCommuting(y) -> Difficult(y)))", "score": 0}
{"id": "eqasc_train_6196", "prediction": "all x.(GreenCommuting(x) -> (PutsPedals(x) & PushesPedals(x)))", "score": 0}
{"id": "eqasc_train_6197", "prediction": "all x y.((RikingBike(x) & HumanPower(y)) -> TurnPedals(x,y))", "score": 0}
{"id": "eqasc_train_6198", "prediction": "all x y.((HumanPower(x) & Bike(y)) -> CausesMovement(x,y))", "score": 0}
{"id": "eqasc_train_6199", "prediction": "all x.((Bicycle(x) | Tricycle(x)) -> Decorated(x))", "score": 0}
{"id": "eqasc_train_6200", "prediction": "all x y.((Tricycle(x) & Tricycle(y)) -> (PutsOnPedals(x,y) & CausesMovement(x,y)))", "score": 0}
{"id": "eqasc_train_6201", "prediction": "all x.(Bicycle(x) -> (ParksInBicycleArea(x) & LockedSecurly(x)))", "score": 0}
{"id": "eqasc_train_6202", "prediction": "all x y.((Bicycle(x) & Bicycle(y)) -> (PushingOnPedals(x,y) & CausesMovement(x,y)))", "score": 0}
{"id": "eqasc_train_6203", "prediction": "all x.((Bike(x) & Schwinn(x)) -> CarryingToPosition(x,y))", "score": 0}
{"id": "eqasc_train_6204", "prediction": "all x y.((Schwinn(x) & PushingOnPedals(x,y)) -> Moves(x))", "score": 0}
{"id": "eqasc_train_6205", "prediction": "all x.(Speed(x) -> (Pedaling(x) & PushingBackOnPedals(x)))", "score": 0}
{"id": "eqasc_train_6206", "prediction": "all x y.((Bike(x) & Bicycle(y)) -> ControlsSpeed(x,y))", "score": 0}
{"id": "eqasc_train_6207", "prediction": "all x y.((Wheel(x) & Floor(y)) -> ReducesFrictionToHelpCarsMove(x,y))", "score": 0}
{"id": "eqasc_train_6208", "prediction": "all x y.((Bike(x) & PushingOnPedals(x,y)) -> CausesFrictionReduction(x))", "score": 0}
{"id": "eqasc_train_6209", "prediction": "all x y.((Producer(x) & Food(y)) -> MakesFromInorganicMolecules(x,y))", "score": 0}
{"id": "eqasc_train_6210", "prediction": "all x.((SmallInorganicMolecule(x) & EconomicallyAttractive(x)) -> (CO(x) | H2(x)))", "score": 0}
{"id": "eqasc_train_6211", "prediction": "all x y z.((Producer(x) & Food(y) & CO(z) & H2(z)) -> MakesFrom(x,y,z))", "score": 0}
{"id": "eqasc_train_6212", "prediction": "all x.(Autotroph(x) -> (AbsorbsSunlightEnergy(x) & TransfersInorganicMineralNutrients(x) & IntoOrganicMolecules(x)))", "score": 0}
{"id": "eqasc_train_6213", "prediction": "all x y.((Producer(x) & Sunlight(y)) -> MakesIntoFood(x,y))", "score": 0}
{"id": "eqasc_train_6214", "prediction": "all x.(Plant(x) -> MakesFoodFromInorganicMolecules(x))", "score": 0}
{"id": "eqasc_train_6215", "prediction": "all x y.((GreenPlant(x) & InorganicMolecule(y)) -> MakesFoodFrom(x,y))", "score": 0}
{"id": "eqasc_train_6216", "prediction": "all x.(Autotroph(x) -> Producer(x))", "score": 0}
{"id": "eqasc_train_6217", "prediction": "all x.(Autotroph(x) -> MakesFoodFromInorganicMolecules(x))", "score": 0}
{"id": "eqasc_train_6218", "prediction": "all x y.((OrganicMolecule(x) & InorganicMolecule(y)) -> Decomposition(x))", "score": 0}
{"id": "eqasc_train_6219", "prediction": "all x.(Decomposition(x) -> HelpsProducersMakeFood(x))", "score": 0}
{"id": "eqasc_train_6220", "prediction": "all x.(PrimaryProducer(x) -> MakesLowerTropicalLevel(x))", "score": 0}
{"id": "eqasc_train_6221", "prediction": "all x.((TropicalLevel(x) & Lowest(x)) -> MakesFoodFromInorganicMolecules(x))", "score": 0}
{"id": "eqasc_train_6222", "prediction": "all x y.((Plant(x) & InorganicMolecule(y)) -> MakesFoodFrom(x,y))", "score": 0}
{"id": "eqasc_train_6223", "prediction": "all x.(Plant(x) -> Producer(x))", "score": 0}
{"id": "eqasc_train_6224", "prediction": "all x.(GreenPlant(x) -> MakesFoodFromInorganicMolecules(x))", "score": 0}
{"id": "eqasc_train_6225", "prediction": "all x y.((Organism(x) & Food(y)) -> PositiveImpactOnHealth(x,y))", "score": 0}
{"id": "eqasc_train_6226", "prediction": "all x.((FoodDistributionStopped(x) & TensOfMillions(x)) -> FacesStarvation(x))", "score": 0}
{"id": "eqasc_train_6227", "prediction": "all x.(Starvation(x) -> NegativeImpactOnOrgnaismHealth(x))", "score": 0}
{"id": "eqasc_train_6228", "prediction": "all x y.((ChemicalEnergy(x) & Organism(y)) -> PositiveImpactOnHealth(x,y))", "score": 0}
{"id": "eqasc_train_6229", "prediction": "all x y.((Bird(x) | Animal(y)) -> Eats(x,y))", "score": 0}
{"id": "eqasc_train_6230", "prediction": "all x.(Eating(x) -> PositiveImpactOnOrganismsHealth(x))", "score": 0}
{"id": "eqasc_train_6231", "prediction": "all x.(Food(x) -> DifferentNutrients(x))", "score": 0}
{"id": "eqasc_train_6232", "prediction": "all x y.((Nutrients(x) & Organism(y)) -> PositiveImpactOnHealth(x,y))", "score": 0}
{"id": "eqasc_train_6233", "prediction": "all x y.((Plant(x) & Plant(y)) -> PositiveImpactOnHealth(x,y))", "score": 0}
{"id": "eqasc_train_6234", "prediction": "all x.(Food(x) -> (ProvidesEnergy(x) & ProvidesHealth(x)))", "score": 0}
{"id": "eqasc_train_6235", "prediction": "all x y.((Food(x) & Organism(y)) -> ProvidesEnergy(x,y))", "score": 0}
{"id": "eqasc_train_6236", "prediction": "all x.(Bread(x) -> DailyFood(x))", "score": 0}
{"id": "eqasc_train_6237", "prediction": "all x y.((BreadDaily(x) & Organism(y)) -> PositiveImpactOnHealth(x,y))", "score": 0}
{"id": "eqasc_train_6238", "prediction": "all x y.((FastFoodRestaurant(x) & Food(y)) -> PublishedNutrientContent(x,y))", "score": 0}
{"id": "eqasc_train_6239", "prediction": "all x y.((NutrientContent(x) & Organism(y)) -> PositiveImpactOnHealth(x,y))", "score": 0}
{"id": "eqasc_train_6240", "prediction": "all x.(Plant(x) -> SensitiveOrganism(x))", "score": 0}
{"id": "eqasc_train_6241", "prediction": "all x.(People(x) -> EatsFood(x))", "score": 0}
{"id": "eqasc_train_6242", "prediction": "all x y.((Eating(x) & Organism(y)) -> PositiveImpactOnHealth(x,y))", "score": 0}
{"id": "eqasc_train_6243", "prediction": "all x y.((Animal(x) & Plant(y)) -> EatsForFood(x,y))", "score": 0}
{"id": "eqasc_train_6244", "prediction": "all x y.((EatingPlants(x) & Animal(y)) -> PositiveImpactOnHealth(x,y))", "score": 0}
{"id": "eqasc_train_6245", "prediction": "all x.(Edible(x) -> Food(x))", "score": 0}
{"id": "eqasc_train_6246", "prediction": "all x y.((EdibleThing(x) & Organism(y)) -> PositiveImpactOnHealth(x,y))", "score": 0}
{"id": "eqasc_train_6247", "prediction": "all x.(Wing(x) -> (PartOfExoskeleton(x) & AttachedToThorax(x)))", "score": 0}
{"id": "eqasc_train_6248", "prediction": "all x.(Wing(x) -> ExternalFramework(x))", "score": 0}
{"id": "eqasc_train_6249", "prediction": "all x.(Insect(x) -> (ConsistsOfHead(x) & ConsistsOfThorax(x) & ConsistsOfAbdomen(x)))", "score": 0}
{"id": "eqasc_train_6250", "prediction": "all x y.((Wing(x) & Insect(y)) -> AttachedToExoskeleton(x,y))", "score": 0}
{"id": "eqasc_train_6251", "prediction": "all x.(Insect(x) -> (HasLegs(x,6) & HasHead(x) & HasThorax(x) & HasAbdomen(x)))", "score": 0}
{"id": "eqasc_train_6252", "prediction": "all x.(Insect(x) -> HasExoskeleton(x))", "score": 0}
{"id": "eqasc_train_6253", "prediction": "all x.(HasHead(x) -> HasThorax(x))", "score": 0}
{"id": "eqasc_train_6254", "prediction": "all x.(Wing(x) -> (PartOfExoskeleton(x) & AttachedBehindHead(x)))", "score": 0}
{"id": "eqasc_train_6255", "prediction": "all x.(InsectWing(x) -> AttachedToDorsalSideOfThorax(x))", "score": 0}
{"id": "eqasc_train_6256", "prediction": "all x y.((Insect(x) & Wings(y)) -> AttachedToDorsalSide(y,x))", "score": 0}
{"id": "eqasc_train_6257", "prediction": "all x.(Insect(x) -> HasExoskeleton(x))", "score": 0}
{"id": "eqasc_train_6258", "prediction": "all x y.((Wing(x) & Insect(y)) -> AttachedToThorax(x,y))", "score": 0}
{"id": "eqasc_train_6259", "prediction": "all x.(Insect(x) -> (HasHeads(x) & HasAbdomens(x) & HasThoraxes(x) & HasAntennae(x) & HasSixLegs(x) & HasWings(x)))", "score": 0}
{"id": "eqasc_train_6260", "prediction": "all x.(Insect(x) -> (HasWings(x) & PartOfExoskeleton(x)))", "score": 0}
{"id": "eqasc_train_6261", "prediction": "all x.(Wing(x) -> (PartOfDorsalSide(x) & Insect(x)))", "score": 0}
{"id": "eqasc_train_6262", "prediction": "all x.(Spiracle(x) -> (LocatedOnAbdomen(x) & LocatedOnThorax(x)))", "score": 0}
{"id": "eqasc_train_6263", "prediction": "all x y.((Wing(x) & Spire(y)) -> ShareLocation(x,y))", "score": 0}
{"id": "eqasc_train_6264", "prediction": "all x.(Butterfly(x) -> (BasksToHeatWingMuscles(x) & ForFlight(x)))", "score": 0}
{"id": "eqasc_train_6265", "prediction": "all x y.((Butterfly(x) & Exoskeleton(y)) -> (InstrumentsOfFlight(x,y) & PartOfExoskeleton(x) & AttachedToThorax(x)))", "score": 0}
{"id": "eqasc_train_6266", "prediction": "all x.(Animal(x) -> (CompeteForTerritory(x) | CompeteForWater(x) | CompeteForFood(x) | CompeteForMates(x)))", "score": 3}
{"id": "eqasc_train_6267", "prediction": "all x.(Cat(x) -> (CompeteForTerritory(x) | CompeteForWater(x) | CompeteForFood(x) | CompeteForMates(x)))", "score": 1}
{"id": "eqasc_train_6268", "prediction": "all x.((Animal(x) | Plant(x)) -> (CompetesForEnergy(x) & CompetesForWater(x) & CompetesForSpace(x)))", "score": 0}
{"id": "eqasc_train_6269", "prediction": "all x.(Animal(x) -> CompetesForTerritory(x))", "score": 0}
{"id": "eqasc_train_6270", "prediction": "all x.(LivingBeing(x) -> NeedsFood(x))", "score": 0}
{"id": "eqasc_train_6271", "prediction": "all x y.((Animal(x) & Animal(y)) -> CompetesToLive(x,y))", "score": 0}
{"id": "eqasc_train_6272", "prediction": "all x.(LargerAnimal(x) -> (DominatesInCompetition(x) & (ForFood(x) | ForMatingPartners(x) | ForNestingSpace(x))))", "score": 0}
{"id": "eqasc_train_6273", "prediction": "all x.(LargerAnimal(x) -> PredominanceInCompetitionForTerritory(x))", "score": 0}
{"id": "eqasc_train_6274", "prediction": "all x.(Lion(x) -> Animal(x))", "score": 1}
{"id": "eqasc_train_6275", "prediction": "all x.(Lion(x) -> (CompeteForTerritory(x) | CompeteForWater(x) | CompeteForFood(x) | CompeteForMates(x)))", "score": 1}
{"id": "eqasc_train_6276", "prediction": "all x.(Alligator(x) -> (CompeteForTerritory(x) | CompeteForWater(x) | CompeteForFood(x) | CompeteForMates(x)))", "score": 0}
{"id": "eqasc_train_6277", "prediction": "all x.(MakingDuck(x) -> (LooksForMate(x) | LooksForPartner(x)))", "score": 0}
{"id": "eqasc_train_6278", "prediction": "all x.(Animal(x) -> (CompeteForTerritory(x) | CompeteForWater(x) | CompeteForFood(x) | CompeteForPartners(x)))", "score": 0}
{"id": "eqasc_train_6279", "prediction": "all x.((Animal(x) & (Lion(x) | Tiger(x))) -> Fighting(x))", "score": 0}
{"id": "eqasc_train_6280", "prediction": "all x.(Tiger(x) -> (CompetesForTerritory(x) | CompetesForWater(x) | CompetesForFood(x) | CompetesForMates(x)))", "score": 0}
{"id": "eqasc_train_6281", "prediction": "all x.(Bird(x) -> (CompeteForTerritory(x) | CompeteForWater(x) | CompeteForFood(x) | CompeteForMates(x)))", "score": 1}
{"id": "eqasc_train_6282", "prediction": "all x.(Pig(x) -> IntelligentAnimal(x))", "score": 0}
{"id": "eqasc_train_6283", "prediction": "all x.(Pig(x) -> (CompeteForTerritory(x) | CompeteForWater(x) | CompeteForFood(x) | CompeteForMates(x)))", "score": 0}
{"id": "eqasc_train_6284", "prediction": "all x.(WildAnimal(x) -> HabitualCreature(x))", "score": 0}
{"id": "eqasc_train_6285", "prediction": "all x.(HabitualCreature(x) -> (CompeteForTerritory(x) | CompeteForWater(x) | CompeteForFood(x) | CompeteForMates(x)))", "score": 0}
{"id": "eqasc_train_6286", "prediction": "all x y.((Force(x) & Object(y)) -> CausesSpeedToIncrease(x,y))", "score": 0}
{"id": "eqasc_train_6287", "prediction": "all x y.((KineticEnergy(x) & MovingBody(y)) -> VariatesAsSquareOfSpeed(x,y))", "score": 0}
{"id": "eqasc_train_6288", "prediction": "all x y.((ApplyingForce(x) & MovingObject(y) & DirectionOfTravel(x,y)) -> IncreasesKineticEnergy(x,y))", "score": 0}
{"id": "eqasc_train_6289", "prediction": "all x.((Pulling(x) | Pushing(x)) -> ForcefulMotion(x))", "score": 0}
{"id": "eqasc_train_6290", "prediction": "all x y.((Object(x) & PullingAndPressing(x)) -> IncreasesSpeed(x,y))", "score": 0}
{"id": "eqasc_train_6291", "prediction": "all x.(Speed(x) -> FastObjectMoving(x))", "score": 0}
{"id": "eqasc_train_6292", "prediction": "all x.(Force(x) -> IncreasesFastMovement(x))", "score": 0}
{"id": "eqasc_train_6293", "prediction": "all x.(Speeding(x) -> (Dangerous(x) & IncreasesStress(x)))", "score": 0}
{"id": "eqasc_train_6294", "prediction": "all x.(Force(x) -> (CausesObjectsToSpeedUp(x) & Dangerous(x)))", "score": 0}
{"id": "eqasc_train_6295", "prediction": "all x.((Velocity(x) | Speed(x)) -> LooksAt(x,y))", "score": 0}
{"id": "eqasc_train_6296", "prediction": "all x y.((Object(x) & Force(y)) -> IncreasesVelocity(x,y))", "score": 0}
{"id": "eqasc_train_6297", "prediction": "all x.(Speed(x) -> MagnitudeOfVelocity(x))", "score": 0}
{"id": "eqasc_train_6298", "prediction": "all x y.((Object(x) & Force(y)) -> MagnitudeOfVelocityIncrease(x,y))", "score": 0}
{"id": "eqasc_train_6299", "prediction": "all x.(ExcessiveSpeed(x) -> Dangerous(x))", "score": 0}
{"id": "eqasc_train_6300", "prediction": "all x.(Force(x) -> CanBeDangerous(x))", "score": 0}
{"id": "eqasc_train_6301", "prediction": "all x.((SpeedIncreased(x) & UpliftForceIncreased(x)) -> Increased(x))", "score": 0}
{"id": "eqasc_train_6302", "prediction": "all x y.((Accuracy(x) & Object(y)) -> UpliftForceIncrease(x,y))", "score": 0}
{"id": "eqasc_train_6303", "prediction": "all x.(Acceleration(x) -> (IncreaseInSpeedOrVelocity(x) & OverPeriodOfTime(x)))", "score": 0}
{"id": "eqasc_train_6304", "prediction": "all x y.((Force(x) & Object(y)) -> CausesAcceleration(x,y))", "score": 0}
{"id": "eqasc_train_6305", "prediction": "all x y.((Frog(x) & Frog(y)) -> (UsedForBreathingAir(x,y) & BreathesAir(x,y)))", "score": 0}
{"id": "eqasc_train_6306", "prediction": "all x.(Frog(x) -> (BreathesWithLungs(x) & BreathesWithSkin(x)))", "score": 1}
{"id": "eqasc_train_6307", "prediction": "all x.(Frog(x) -> BreathesWithLungs(x))", "score": 1}
{"id": "eqasc_train_6308", "prediction": "all x.(Frog(x) -> (CoveredWithSkin(x) & PorousToAir(x)))", "score": 0}
{"id": "eqasc_train_6309", "prediction": "all x.(Frog(x) -> BreathesThroughSkin(x))", "score": 0}
{"id": "eqasc_train_6310", "prediction": "all x.(Frog(x) -> (Breathes(x) & AbsorbsWater(x) & ShedsSkin(x)))", "score": 0}
{"id": "eqasc_train_6311", "prediction": "all x.(Frog(x) -> (AbsorbsWater(x) & AbsorbsAir(x) & ThroughSkin(x)))", "score": 0}
{"id": "eqasc_train_6312", "prediction": "all x.(Toad(x) -> Frog(x))", "score": 0}
{"id": "eqasc_train_6313", "prediction": "all x y.((Skin(x) & Toad(y)) -> UsedForBreathingAir(x,y))", "score": 0}
{"id": "eqasc_train_6314", "prediction": "all x.(Frog(x) -> (BelongsToClassAmphibia(x) & ReliesOnMoisture(x) & BreathesReproducesSurvives(x)))", "score": 0}
{"id": "eqasc_train_6315", "prediction": "all x.(Frog(x) -> NeedsSkinToSurvive(x))", "score": 0}
{"id": "eqasc_train_6316", "prediction": "all x y.((Frog(x) & Lungs(y)) -> UsesToBreatheAir(x,y))", "score": 0}
{"id": "eqasc_train_6317", "prediction": "all x.(Frog(x) -> Tadpole(x))", "score": 0}
{"id": "eqasc_train_6318", "prediction": "all x y.((Skin(x) & Tadpole(y)) -> UsedForBreathingAir(x,y))", "score": 0}
{"id": "eqasc_train_6319", "prediction": "exists x.(Bat(x) & EatsMeat(x) & EatsFish(x) & EatsFrogs(x))", "score": 0}
{"id": "eqasc_train_6320", "prediction": "all x y z.((Skin(x) & Air(y) & Bat(z)) -> (UsedForBreathing(x,y) & EatenBy(x,z)))", "score": 0}
{"id": "eqasc_train_6321", "prediction": "all x.((Frog(x) & Apathetic(x)) -> Sick(x))", "score": 0}
{"id": "eqasc_train_6322", "prediction": "all x.(Sickness(x) -> CausedBySkinBreathingProblems(x))", "score": 0}
{"id": "eqasc_train_6323", "prediction": "all x y.((Frog(x) & Frog(y)) -> (UsedForBreathingOxygen(x,y) & BreathesOxygen(y)))", "score": 0}
{"id": "eqasc_train_6324", "prediction": "all x.(Cruple(x) -> (ChangeShapeFromSmoothToCompactedByPhysicalForce(x)))", "score": 0}
{"id": "eqasc_train_6325", "prediction": "all x y.((Foil(x) & Foil(y)) -> (Crumple(x,y) & CarefullyReopen(x,y)))", "score": 0}
{"id": "eqasc_train_6326", "prediction": "all x.(Foil(x) -> ScrunchedUpByPhysicalForce(x))", "score": 0}
{"id": "eqasc_train_6327", "prediction": "all x.(Foil(x) -> (ChangesSmooth(x) & ChangesCompactedByPhysicalForce(x)))", "score": 0}
{"id": "eqasc_train_6328", "prediction": "all x.((Cellophane(x) | PaperCrunched(x)) -> BallSize(x))", "score": 0}
{"id": "eqasc_train_6329", "prediction": "all x.((Paper(x) & Smooth(x) & PhysicalForce(x)) -> CanEasilyChangeShapes(x))", "score": 0}
{"id": "eqasc_train_6330", "prediction": "all x.((Density(x) & Depth(x) & Compaction(x) & ProgressiveCementation(x)) -> Increases(x))", "score": 0}
{"id": "eqasc_train_6331", "prediction": "all x.(Cruple(x) -> (DensityIncreasesByPhysicalForce(x) & PhysicalForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForceForForceForForceForFor", "score": -1}
{"id": "eqasc_train_6332", "prediction": "all x y.((CrupleZone(x) & Bumper(y)) -> (Weaker(x) & PoorerPerforming(y)))", "score": 0}
{"id": "eqasc_train_6333", "prediction": "all x.(Bumper(x) -> (ChangeShape(x) & Smooth(x) & PhysicalForce(x)))", "score": 0}
{"id": "eqasc_train_6334", "prediction": "all x.(Apple(x) -> Crumples(x))", "score": 0}
{"id": "eqasc_train_6335", "prediction": "all x.(Apple(x) -> (ChangeShapeFromSmoothToCompactedByPhysicalForce(x)))", "score": 0}
{"id": "eqasc_train_6336", "prediction": "all x.((Paper(x) & SmoothShape(x) & PhysicalForceCompact(x)) -> ChangesShapeFromToCompacted(x))", "score": 0}
{"id": "eqasc_train_6337", "prediction": "all x.(Paper(x) -> (CrunchedIntoGeneralShape(x) & Tied(x)))", "score": 0}
{"id": "eqasc_train_6338", "prediction": "all x.((Gamete(x) & Fertilization(x)) -> ProducesDiploidZygote(x))", "score": 0}
{"id": "eqasc_train_6339", "prediction": "all x y z.((Ssperm(x) & EggNucleus(y) & DiploidZygoticNucleus(z)) -> CombinesToForm(x,y,z))", "score": 0}
{"id": "eqasc_train_6340", "prediction": "all x y.((Ssperm(x) & EggNucleus(y)) -> FertilizesGametes(x))", "score": 0}
{"id": "eqasc_train_6341", "prediction": "all x.(FertilizationOfOvum(x) -> ProducesDiploidZygote(x))", "score": 0}
{"id": "eqasc_train_6342", "prediction": "all x y.((FertilizationOfSsperm(x) & DiploidZygote(y)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_train_6343", "prediction": "all x.(Zygote(x) -> (Diploid(x) & UndergoesCellDividetion(x) & BecomesEmbryo(x)))", "score": 0}
{"id": "eqasc_train_6344", "prediction": "all x y.((Fertilization(x) & Gamete(y)) -> ProducesCellDividection(x,y))", "score": 0}
{"id": "eqasc_train_6345", "prediction": "all x.(FemaleGamete(x) -> Egg(x))", "score": 0}
{"id": "eqasc_train_6346", "prediction": "all x.((FertilizationOfEggs(x) & ProducesDiploidZygote(x)) -> ProducesZygote(x))", "score": 0}
{"id": "eqasc_train_6347", "prediction": "all x y.((FertilizationOfGametes(x) & Gamete(y)) -> (Produces(x,y) & BecomesEmbryo(x)))", "score": 0}
{"id": "eqasc_train_6348", "prediction": "all x y.((Gamete(x) & Fertilization(x) & Gamete(y)) -> UndergoesCellDividetionToBecomeEmbryo(x,y))", "score": 0}
{"id": "eqasc_train_6349", "prediction": "all x y.((Fertilization(x) & Ovar(y) & Spermatozoa(y)) -> ProducesDiploidZygote(x,y))", "score": 0}
{"id": "eqasc_train_6350", "prediction": "all x.(SexualReproduction(x) -> (RequiresGametes(x) & Fertilization(x)))", "score": 0}
{"id": "eqasc_train_6351", "prediction": "all x.(SexualReproduction(x) -> ProducesDiploidZygote(x))", "score": 0}
{"id": "eqasc_train_6352", "prediction": "all x.(DiploidZygote(x) -> FormsMulticellularEmbryo(x))", "score": 0}
{"id": "eqasc_train_6353", "prediction": "all x y.((Gamete(x) & Fertilization(x) & Venturir(y)) -> MulticellularEmbryo(x,y))", "score": 0}
{"id": "eqasc_train_6354", "prediction": "all x.(Reproduction(x) -> ProducesDiploidZygote(x))", "score": 0}
{"id": "eqasc_train_6355", "prediction": "all x.(Bacteria(x) -> CausesFoodPoisoning(x))", "score": 0}
{"id": "eqasc_train_6356", "prediction": "all x.((Bacteria(x) & Food(x)) -> ResponsibleForIllness(x))", "score": 0}
{"id": "eqasc_train_6357", "prediction": "all x.(Botulism(x) -> (FoodPoisoning(x) & ProducedByBacteria(x)))", "score": 0}
{"id": "eqasc_train_6358", "prediction": "all x.(Bacteria(x) -> CausesBotulism(x))", "score": 0}
{"id": "eqasc_train_6359", "prediction": "all x.(Bacteria(x) -> GrowsBestAtRoomTemperature(x))", "score": 0}
{"id": "eqasc_train_6360", "prediction": "all x.((StoresFoodAtRoomTemperature(x) & RoomTemperature(x)) -> FoodPoisoning(x))", "score": 0}
{"id": "eqasc_train_6361", "prediction": "all x.(FoodPoisoning(x) -> SeriousIllness(x))", "score": 0}
{"id": "eqasc_train_6362", "prediction": "all x.(Bacteria(x) -> CausesSeriousIllness(x))", "score": 0}
{"id": "eqasc_train_6363", "prediction": "(Examples: EColiBacteria(x) & HantaVirus(x))", "score": -1}
{"id": "eqasc_train_6364", "prediction": "all x.(EColi(x) -> CausesFoodPoisoning(x))", "score": 0}
{"id": "eqasc_train_6365", "prediction": "all x.(Vibration(x) -> FoodPoisoning(x))", "score": 0}
{"id": "eqasc_train_6366", "prediction": "all x.(Vibration(x) -> (RelatedToBacteria(x) & HasBacteria(x)))", "score": 0}
{"id": "eqasc_train_6367", "prediction": "all x.(RawJuice(x) -> ContainsDangerousBacteria(x))", "score": 0}
{"id": "eqasc_train_6368", "prediction": "all x.(RawJuice(x) -> CanCauseFoodPoisoning(x))", "score": 0}
{"id": "eqasc_train_6369", "prediction": "all x.(Coal(x) -> (GeneratesHeatByBurning(x) & BurnsCoal(x)))", "score": 0}
{"id": "eqasc_train_6370", "prediction": "all x.(Coal(x) -> BurnedToProduceElectricity(x))", "score": 0}
{"id": "eqasc_train_6371", "prediction": "all x.(Coal(x) -> (GeneratesHeat(x) & GeneratesElectricity(x)))", "score": 0}
{"id": "eqasc_train_6372", "prediction": "all x y.((Coal(x) & Lignite(y)) -> LithifiedRemains(x,y))", "score": 0}
{"id": "eqasc_train_6373", "prediction": "all x y.((LithifiedRemains(x) & Plant(y)) -> GeneratesHeatByBurning(x,y))", "score": 0}
{"id": "eqasc_train_6374", "prediction": "all x.(CoalBurning(x) -> (CausesAirPollution(x) & GeneratesCarcinogens(x)))", "score": 0}
{"id": "eqasc_train_6375", "prediction": "all x.(HeatingWithCoal(x) -> CausesAirPollution(x))", "score": 0}
{"id": "eqasc_train_6376", "prediction": "all x.((CoalBurned(x) & (ProvidesHeat(x) | GeneratesElectricity(x))) -> GivenOff(x))", "score": 0}
{"id": "eqasc_train_6377", "prediction": "all x.((CoalBurning(x) & CO2GiftOff(x)) -> CoalBurning(x))", "score": 0}
{"id": "eqasc_train_6378", "prediction": "all x.(FossilFuel(x) -> (GeneratesHeatByBurning(x) & Uses(x,FossilFuels)))", "score": 0}
{"id": "eqasc_train_6379", "prediction": "all x.(Coal(x) -> (FormsFromDeadPlants(x) & Compacted(x)))", "score": 0}
{"id": "eqasc_train_6380", "prediction": "all x.(ComactedDeadPlant(x) -> GeneratesHeatByBurning(x))", "score": 0}
{"id": "eqasc_train_6381", "prediction": "all x.((DeadPlant(x) & GeneratesHeat(x)) -> CanGenerateHeat(x))", "score": 0}
{"id": "eqasc_train_6382", "prediction": "all x y.((Coal(x) & ChemicalEnergy(x) & StoredIn(x,y)) -> ReleasedAsHeatEnergy(x))", "score": 0}
{"id": "eqasc_train_6383", "prediction": "all x.(Coal(x) -> ReleasesHeatEnergy(x))", "score": 0}
{"id": "eqasc_train_6384", "prediction": "all x.(Gasoline(x) -> (ExtremelyFlammable(x) & Explodes(x) & Burns(x)))", "score": 0}
{"id": "eqasc_train_6385", "prediction": "all x.(Coal(x) -> (GeneratesHeat(x) & CanBlast(x)))", "score": 0}
{"id": "eqasc_train_6386", "prediction": "all x.(DeadVegetation(x) -> (Sits(x) & BecomesPat(x) & PrecursorOfCoal(x)))", "score": 0}
{"id": "eqasc_train_6387", "prediction": "all x y.((DeadVegetation(x) & Burned(x)) -> GeneratesHeat(x,y))", "score": 0}
{"id": "eqasc_train_6388", "prediction": "all x.((Food(x) & HeatGeneratedInternally(x)) -> CookedBy(x,y))", "score": 0}
{"id": "eqasc_train_6389", "prediction": "all x y.((Coal(x) & Food(y)) -> Cooks(x,y))", "score": 0}
{"id": "eqasc_train_6390", "prediction": "all x.(Heat(x) -> (ComesOutTop(x) & (Cooking(x) | SpaceHeating(x))))", "score": 0}
{"id": "eqasc_train_6391", "prediction": "all x.(Coal(x) -> CooksFood(x))", "score": 0}
{"id": "eqasc_train_6392", "prediction": "all x.(Coal(x) -> ArrivesAtPowerStationCoalHandlingArea(x))", "score": 0}
{"id": "eqasc_train_6393", "prediction": "all x y.((PowerStation(x) & PowerStation(y)) -> (GeneratesHeatByBurning(x,y)))", "score": 0}
{"id": "eqasc_train_6394", "prediction": "all x.((Coal(x) & Burned(x)) -> ReleasesMercury(x))", "score": 0}
{"id": "eqasc_train_6395", "prediction": "exists x.(Method(x) & GeneratesHeat(x) & ReleasesMercury(x))", "score": 0}
{"id": "eqasc_train_6396", "prediction": "all x y.((Fat(x) & Animal(y)) -> KeepsWarm(x,y))", "score": 0}
{"id": "eqasc_train_6397", "prediction": "exists x.(Animal(x) & Hibernates(x) & LivesOnStoredFat(x))", "score": 0}
{"id": "eqasc_train_6398", "prediction": "all x.(Animal(x) -> UsesFatToStoreEnergy(x))", "score": 0}
{"id": "eqasc_train_6399", "prediction": "all x.(Human(x) -> NewAnimal(x))", "score": 0}
{"id": "eqasc_train_6400", "prediction": "all x y.((Fat(x) & Human(y)) -> KeepsWarm(x,y))", "score": 0}
{"id": "eqasc_train_6401", "prediction": "all x.(Fat(x) -> (ProvidesWarmth(x) & ProvidesSecurity(x)))", "score": 0}
{"id": "eqasc_train_6402", "prediction": "all x.((LayerOfFat(x) & Underskin(x)) -> ProvidesInsulation(x))", "score": 0}
{"id": "eqasc_train_6403", "prediction": "all x.(Animal(x) -> HasInsulation(x))", "score": 0}
{"id": "eqasc_train_6404", "prediction": "all x y.((Fat(x) & Bear(y)) -> ProtectsFromCold(x,y))", "score": 0}
{"id": "eqasc_train_6405", "prediction": "all x.(Pig(x) -> (Fat(x) & Short(x)))", "score": 0}
{"id": "eqasc_train_6406", "prediction": "all x.(Pig(x) -> Warm(x))", "score": 0}
{"id": "eqasc_train_6407", "prediction": "all x.(Food(x) -> Fat(x))", "score": 0}
{"id": "eqasc_train_6408", "prediction": "all x.(Animal(x) -> NeedsFoodToKeepWarm(x))", "score": 0}
{"id": "eqasc_train_6409", "prediction": "all x.(Fat(x) -> ProvidesEnergy(x))", "score": 0}
{"id": "eqasc_train_6410", "prediction": "all x.(Energy(x) -> KeepsAnimalsWarm(x))", "score": 0}
{"id": "eqasc_train_6411", "prediction": "all x.((Plant(x) & ShedsLeavesSeasonally(x)) -> DeciduousPlant(x))", "score": 0}
{"id": "eqasc_train_6412", "prediction": "all x.(GinkgoBiloba(x) -> Deciduous(x))", "score": 0}
{"id": "eqasc_train_6413", "prediction": "all x.(GinkgoBiloba(x) -> ShedsLeavesSeasonally(x))", "score": 0}
{"id": "eqasc_train_6414", "prediction": "all x.(Tree(x) -> (Deciduous(x) & ShedsLeavesInDrySeason(x)))", "score": 0}
{"id": "eqasc_train_6415", "prediction": "all x.(Plant(x) -> ShedsLeavesInDrySeason(x))", "score": 0}
{"id": "eqasc_train_6416", "prediction": "all x.(BoardBerch(x) -> DeciduousShrub(x))", "score": 0}
{"id": "eqasc_train_6417", "prediction": "all x.(BoodBerch(x) -> ShedsLeavesSeasonally(x))", "score": 0}
{"id": "eqasc_train_6418", "prediction": "all x.(MulberryTree(x) -> ShedsLeavesSeasonally(x))", "score": 0}
{"id": "eqasc_train_6419", "prediction": "all x.(GinkgoBiloba(x) -> ShedsLeavesSeasonally(x))", "score": 0}
{"id": "eqasc_train_6420", "prediction": "all x.(Tree(x) -> (InKingdomPlantae(x) & Plants(x)))", "score": 0}
{"id": "eqasc_train_6421", "prediction": "all x.((MemberOfKingdomPlantae(x) & ShedsLeavesSeasonally(x)) -> Deciduous(x))", "score": 0}
{"id": "eqasc_train_6422", "prediction": "all x.(Grapevine(x) -> WoodyDeciduousPlant(x))", "score": 0}
{"id": "eqasc_train_6423", "prediction": "all x.(Grapevine(x) -> (ShedsLeavesSeasonally(x) & Plant(x)))", "score": 0}
{"id": "eqasc_train_6424", "prediction": "all x.(MulberryTree(x) -> SeasonallyShedsLeaves(x))", "score": 0}
{"id": "eqasc_train_6425", "prediction": "all x.(Vine(x) -> (PerennialDeciduousClimbingPlant(x) & ClimbingPlant(x)))", "score": 0}
{"id": "eqasc_train_6426", "prediction": "all x.(Vine(x) -> ShedsLeavesSeasonally(x))", "score": 0}
{"id": "eqasc_train_6427", "prediction": "all x.(Grapevine(x) -> ShedsLeavesSeasonally(x))", "score": 0}
{"id": "eqasc_train_6428", "prediction": "all x.(ShadeTree(x) -> Deciduous(x))", "score": 0}
{"id": "eqasc_train_6429", "prediction": "exists x.(ShadeTree(x) & ShedLeaves(x))", "score": 0}
{"id": "eqasc_train_6430", "prediction": "all x.(Vine(x) -> ShedsLeavesSeasonally(x))", "score": 0}
{"id": "eqasc_train_6431", "prediction": "all x.(GinkgoBiloba(x) -> ShedsLeavesSeasonally(x))", "score": 0}
{"id": "eqasc_train_6432", "prediction": "all x.(LemmonsWillow(x) -> DeciduousShrub(x))", "score": 0}
{"id": "eqasc_train_6433", "prediction": "all x.((Plant(x) & ShedsLeavesSeasonally(x)) -> LemmonsWillow(x))", "score": 0}
{"id": "eqasc_train_6434", "prediction": "all x.(Grapevine(x) -> (Woody(x) & ShedsLeavesSeasonally(x)))", "score": 0}
{"id": "eqasc_train_6435", "prediction": "all x.(LoosenessOfSoil(x) -> IncreasesOxygenInSoil(x))", "score": 0}
{"id": "eqasc_train_6436", "prediction": "all x.((Soil(x) & OxygenInSoil(x)) -> VitalForHealthyRoots(x))", "score": 0}
{"id": "eqasc_train_6437", "prediction": "all x.(LoosenessOfSoil(x) -> IncreasesOddsOfHealthyRoots(x))", "score": 0}
{"id": "eqasc_train_6438", "prediction": "all x.((Plant(x) & -OxygenInSoil(x)) -> Dies(x))", "score": 0}
{"id": "eqasc_train_6439", "prediction": "all x.((Plant(x) & -LoosenessInSoil(x)) -> MayDie(x))", "score": 0}
{"id": "eqasc_train_6440", "prediction": "all x.((SoilLooseness(x) & VitalForHealthyRoots(x)) -> VitalForHealthyRoots(x))", "score": 0}
{"id": "eqasc_train_6441", "prediction": "all x.(LoosenessOfSoil(x) -> VitalForHealthyRoots(x))", "score": 0}
{"id": "eqasc_train_6442", "prediction": "all x.((SoilLoos(x) & CultivationEasier(x)) -> Easy(x))", "score": 0}
{"id": "eqasc_train_6443", "prediction": "all x.((Soil(x) & MoreOxygen(x)) -> EasierToCultivate(x))", "score": 0}
{"id": "eqasc_train_6444", "prediction": "all x y.((Soil(x) & Soil(y)) -> HelpsPlantsSurvive(x,y))", "score": 0}
{"id": "eqasc_train_6445", "prediction": "all x.(SoilOxygenEffectsOnRootDevelopment(x) -> -SoilOxygenEffectsOnRootDevelopment(x))", "score": 0}
{"id": "eqasc_train_6446", "prediction": "all x.(RootDevelopment(x) -> DependsOnLoosnessOfDirt(x))", "score": 0}
{"id": "eqasc_train_6447", "prediction": "all x.(Arterie(x) -> CarriesOxygenRichBlood(x))", "score": 0}
{"id": "eqasc_train_6448", "prediction": "all x.((EnergyLevel(x) & LackOxygenRichRedBloodCells(x)) -> Plummets(x))", "score": 0}
{"id": "eqasc_train_6449", "prediction": "all x.(Arteries(x) -> NeededToMaintainEnergyLevels(x))", "score": 0}
{"id": "eqasc_train_6450", "prediction": "all x.((Arteries(x) | Veins(x)) -> BloodVessel(x))", "score": 0}
{"id": "eqasc_train_6451", "prediction": "all x.(BloodVessel(x) -> CarriesOxygen(x))", "score": 0}
{"id": "eqasc_train_6452", "prediction": "all x.(Arteries(x) -> (TurnsIntoSmallerArtery(x) & Arterioles(x)))", "score": 0}
{"id": "eqasc_train_6453", "prediction": "all x.(Arteriole(x) -> (SmallTunnel(x) & CarriesOxygenRichBlood(x)))", "score": 0}
{"id": "eqasc_train_6454", "prediction": "all x.(ArterialBloodPressure(x) -> ConductsBloodAwayFromHeart(x))", "score": 0}
{"id": "eqasc_train_6455", "prediction": "all x.((Blood(x) & Heart(x)) -> OxygenRich(x))", "score": 0}
{"id": "eqasc_train_6456", "prediction": "all x.(Smoking(x) -> (ConstrictsArteries(x) & IncreasesClotting(x) & BlocksArteries(x)))", "score": 0}
{"id": "eqasc_train_6457", "prediction": "all x y.((Smoking(x) & OxygenRichBlood(y)) -> InterferesWithTransport(x,y))", "score": 0}
{"id": "eqasc_train_6458", "prediction": "all x.(OxygenRichBlood(x) -> BrightRed(x))", "score": 0}
{"id": "eqasc_train_6459", "prediction": "all x.(Arterie(x) -> (CarriesBrightRed(x) & CarriesBrightRed(x)))", "score": 0}
{"id": "eqasc_train_6460", "prediction": "all x.(Blood(x) -> LiquidOrgan(x))", "score": 0}
{"id": "eqasc_train_6461", "prediction": "all x.(Arterie(x) -> CarriesOxygenRichLiquid(x))", "score": 0}
{"id": "eqasc_train_6462", "prediction": "all x.(Artery(x) -> CarriesBrightRedBlood(x))", "score": 0}
{"id": "eqasc_train_6463", "prediction": "all x.(BrightRedFluidBlood(x) -> (Exception(x) & Recorded(x)))", "score": 0}
{"id": "eqasc_train_6464", "prediction": "all x.(Arterie(x) -> CarriesBrightRedFluid(x))", "score": 0}
{"id": "eqasc_train_6465", "prediction": "all x.(O2(x) -> RequiresOxygen(x))", "score": 0}
{"id": "eqasc_train_6466", "prediction": "all x.(Arterie(x) -> CarriesBloodFullO2(x))", "score": 0}
{"id": "eqasc_train_6467", "prediction": "all x y.((BloodClot(x) & Artery(y) & Blocks(x,y)) -> CarriesOxygenatedBloodToBrain(x))", "score": 0}
{"id": "eqasc_train_6468", "prediction": "all x.(Stroke(x) -> (CloggedArteries(x) & PreventsOxygenatedBloodFromReachingBrain(x)))", "score": 0}
{"id": "eqasc_train_6469", "prediction": "all x.((Person(x) & -HasBloodSupply(x)) -> InDangerousOfDying(x))", "score": 0}
{"id": "eqasc_train_6470", "prediction": "all x.((Person(x) & -Oxygen(x)) -> CanDie(x))", "score": 0}
{"id": "eqasc_train_6471", "prediction": "all x.(Arterie(x) -> CarriesBlood(x))", "score": 0}
{"id": "eqasc_train_6472", "prediction": "all x.((BreathesBlood(x) & BringsBloodAwayFromHeart(x)) -> CarriesOxygenRichBlood(x))", "score": 0}
{"id": "eqasc_train_6473", "prediction": "all x.(OxygenRichBlood(x) -> CriticalForErectileHealth(x))", "score": 0}
{"id": "eqasc_train_6474", "prediction": "all x.(Arterie(x) -> CriticalForErectileHealth(x))", "score": 0}
{"id": "eqasc_train_6475", "prediction": "all x.(Arteriole(x) -> CarriesOxygenRichBlood(x))", "score": 0}
{"id": "eqasc_train_6476", "prediction": "all x.(Arterie(x) -> CarriesBlood(x))", "score": 0}
{"id": "eqasc_train_6477", "prediction": "all x.(OxygenRichBlood(x) -> CarriedAwayFromHeart(x))", "score": 0}
{"id": "eqasc_train_6478", "prediction": "all x.(Arterie(x) -> RegulatesBloodPressure(x))", "score": 0}
{"id": "eqasc_train_6479", "prediction": "all x.(Arteries(x) -> PressureRegulated(x))", "score": 0}
{"id": "eqasc_train_6480", "prediction": "all x.(FreshwaterBiome(x) -> (HasWater(x) & (ContainsLittleSalt(x) | ContainsNoSalt(x))))", "score": 0}
{"id": "eqasc_train_6481", "prediction": "all x.((FreshwaterGlobalEcosystem(x) & Water(x)) -> (LittleOrNoSalt(x) | -LittleOrNoSalt(x)))", "score": 0}
{"id": "eqasc_train_6482", "prediction": "all x.((FreshwaterEcosystem(x) & Water(x)) -> (LittleSalt(x) | NoSalt(x)))", "score": 0}
{"id": "eqasc_train_6483", "prediction": "exists x.(FreshwaterLake(x) & Nearby(x))", "score": 0}
{"id": "eqasc_train_6484", "prediction": "all x.(Lake(x) -> (LittleSalt(x) | NoSalt(x)))", "score": 0}
{"id": "eqasc_train_6485", "prediction": "all x.(Estuary(x) -> (DisplaysMarineBiomes(x) & DisplaysFreshwaterBiomes(x)))", "score": 0}
{"id": "eqasc_train_6486", "prediction": "all x.(FreshwaterEnvironment(x) -> (LittleSalt(x) & -LittleSalt(x)))", "score": 0}
{"id": "eqasc_train_6487", "prediction": "all x.(FreshwaterBiome(x) -> (ContainsLittleSodium(x) | ContainsNoSodium(x)))", "score": 0}
{"id": "eqasc_train_6488", "prediction": "all x.(Salinity(x) -> MeasuresSaltsInWater(x))", "score": 0}
{"id": "eqasc_train_6489", "prediction": "all x.(FreshwaterBiome(x) -> VeryLowSalinity(x))", "score": 0}
{"id": "eqasc_train_6490", "prediction": "all x.(Terrain(x) -> FreshwaterTurtle(x))", "score": 0}
{"id": "eqasc_train_6491", "prediction": "all x.(Terrain(x) -> (LivesInWater(x) & (LittleSalt(x) | NoSalt(x))))", "score": 0}
{"id": "eqasc_train_6492", "prediction": "all x.(FreshwaterBiome(x) -> (SufferedFromPollution(x) & MainlyPollution(x)))", "score": 0}
{"id": "eqasc_train_6493", "prediction": "all x.((Biome(x) & Pollution(x)) -> (ContainsLittleOrNoSalt(x)))", "score": 0}
{"id": "eqasc_train_6494", "prediction": "all x.(CellularRespiration(x) -> (ConvertsOxygenAndCarbohydrates(x) & CarbonDioxideWaterEnergy(x)))", "score": 0}
{"id": "eqasc_train_6495", "prediction": "all x.((Person(x) & -EnoughOxygenCellRespiration(x)) -> (Reduced(x) & Tired(x) & LackingEnergy(x)))", "score": 0}
{"id": "eqasc_train_6496", "prediction": "all x.(Person(x) -> (Tense(x) & LacksEnergy(x) & -CellularRespiration(x)))", "score": 0}
{"id": "eqasc_train_6497", "prediction": "all x.(Lymphocyte(x) -> (Bcell(x) | Tcell(x) | NKCell(x)))", "score": 0}
{"id": "eqasc_train_6498", "prediction": "all x.(Lymphocyte(x) -> (UsesRespiration(x) & ConvertsOxygenAndCarbohydrates(x) & CarbonDioxideWaterEnergy(x)))", "score": 0}
{"id": "eqasc_train_6499", "prediction": "all x.(CellularRespiration(x) -> RequirementForLife(x))", "score": 0}
{"id": "eqasc_train_6500", "prediction": "all x.((Cell(x) & ConvertsOxygenAndCarbohydrates(x) & CarbonDioxideWaterEnergy(x)) -> RequirementForLife(x))", "score": 0}
{"id": "eqasc_train_6501", "prediction": "all x.((Cell(x) & ConvertsOxygenAndCarbohydrates(x) & CarbonDioxideWaterEnergy(x)) -> RequirementForLife(x))", "score": 0}
{"id": "eqasc_train_6502", "prediction": "all x.((Cell(x) & OxygenConversion(x) & CarbohydratesConversion(x)) -> (CarbonDioxideWaterEnergy(x)))", "score": 0}
{"id": "eqasc_train_6503", "prediction": "all x.(CellularRespiration(x) -> InvolvesEnzymeMediatedReactions(x))", "score": 0}
{"id": "eqasc_train_6504", "prediction": "all x y z.((EnzymeMediatedReaction(x) & Cell(y) & OxygenAndCarbohydrates(z) & ConvertsFromToCarbonDioxideWaterAndEnergy(y,z)) -> (ConvertsToCarbonDioxideWaterAndEnergy(y,z) & ConvertsToEnergy(y,x)))", "score": 0}
{"id": "eqasc_train_6505", "prediction": "all x.(CellularRespiration(x) -> OccursInMitochondria(x))", "score": 0}
{"id": "eqasc_train_6506", "prediction": "all x y z.((Cell(x) & Oxygen(y) & Carbohydrates(z) & CarbonDioxide(x) & Water(x) & Energy(x)) -> ConvertsTo(x,y,z))", "score": 0}
{"id": "eqasc_train_6507", "prediction": "all x.(Chemically(x) -> OppositeOfPhotosynthesis(x))", "score": 0}
{"id": "eqasc_train_6508", "prediction": "all x y.((ChemicalOpponentOfPhotosynthesis(x) & CellsConvertOxygenAndCarbs(y) & CarbonDioxideWaterEnergy(x)) -> Photosynthesis(x))", "score": 0}
{"id": "eqasc_train_6509", "prediction": "all x y.((Magnet(x) & CoilOfCuirdWire(y) & MovingIn(x,y)) -> CausesElectricCurrent(x))", "score": 0}
{"id": "eqasc_train_6510", "prediction": "all x y.((Magnet(x) & CoilOfCuid(y) & MovingIn(x,y)) -> CausesFlowOfElectrons(x))", "score": 0}
{"id": "eqasc_train_6511", "prediction": "all x y.((Magnet(x) & CoilOfCuirdWire(y) & MovingIn(x,y)) -> CausesFlowOfElectrons(x))", "score": 0}
{"id": "eqasc_train_6512", "prediction": "all x.(ElectricCurrent(x) -> ElectricChargeFlow(x))", "score": 0}
{"id": "eqasc_train_6513", "prediction": "all x y.((Magnet(x) & CoilOfCuirdWire(y) & MovingIn(x,y)) -> CausesFlowOfElectricCharge(x))", "score": 0}
{"id": "eqasc_train_6514", "prediction": "all x y.((Electricity(x) & Copper(y)) -> PassedThrough(x,y))", "score": 0}
{"id": "eqasc_train_6515", "prediction": "all x.(CuivreMagnetized(x) -> CanBeMagnetized(x))", "score": 0}
{"id": "eqasc_train_6516", "prediction": "all x y.((Core(x) & Electricity(y)) -> MagnetizedBy(x,y))", "score": 0}
{"id": "eqasc_train_6517", "prediction": "all x.(Echinoderm(x) -> UsesPheromonesToCommunicate(x))", "score": 0}
{"id": "eqasc_train_6518", "prediction": "all x y.((Starfish(x) & Pheromone(y)) -> UsesToCommunicate(x,y))", "score": 0}
{"id": "eqasc_train_6519", "prediction": "all x.(ScentMark(x) -> ContainsPheromones(x))", "score": 0}
{"id": "eqasc_train_6520", "prediction": "all x.(Echinoderm(x) -> UsesScentToCommunicate(x))", "score": 0}
{"id": "eqasc_train_6521", "prediction": "all x.(Echinoid(x) -> UsesPheremonesToCommunicate(x))", "score": 0}
{"id": "eqasc_train_6522", "prediction": "all x.(Starfish(x) -> UsesPheromonesToCommunicate(x))", "score": 0}
{"id": "eqasc_train_6523", "prediction": "all x y.((Deuterostome(x) & Deuterostome(y)) -> UsesPheromonesToCommunicate(x,y))", "score": 0}
{"id": "eqasc_train_6524", "prediction": "all x.(Echinoderm(x) -> (Marine(x) & Benthic(x)))", "score": 0}
{"id": "eqasc_train_6525", "prediction": "all x y.((MarineSpecies(x) & BenthicSpecies(y)) -> UsesPheromonesToCommunicate(x,y))", "score": 0}
{"id": "eqasc_train_6526", "prediction": "all x.(AscothoracicanBarnacle(x) -> (AttachToEchinoderms(x) | AttachToCorals(x)))", "score": 0}
{"id": "eqasc_train_6527", "prediction": "all x y.((Coral(x) & Pheromone(y)) -> UsesToCommunicate(x,y))", "score": 0}
{"id": "eqasc_train_6528", "prediction": "all x.(Echinoderm(x) -> (Starfish(x) | SeaUrchin(x)))", "score": 0}
{"id": "eqasc_train_6529", "prediction": "all x y.((Starfish(x) & Pheromone(y)) -> UsesToCommunicate(x,y))", "score": 0}
{"id": "eqasc_train_6530", "prediction": "all x.(Starfish(x) -> UsesPheromonesToCommunicate(x))", "score": 0}
{"id": "eqasc_train_6531", "prediction": "all x y.((Echinoderm(x) & Mollusc(y)) -> UsesAdhesives(x,y))", "score": 0}
{"id": "eqasc_train_6532", "prediction": "all x.(Echinoderm(x) -> EmploysAdhesivesToGripSurfaces(x))", "score": 0}
{"id": "eqasc_train_6533", "prediction": "all x y.((Deuterostome(x) & Pheromone(y)) -> UsesToCommunicate(x,y))", "score": 0}
{"id": "eqasc_train_6534", "prediction": "all x y.((Flower(x) & Spore(y)) -> ProducesAndDevelopsIntoGametophytes(x,y))", "score": 0}
{"id": "eqasc_train_6535", "prediction": "all x.(Tulip(x) -> HeavyFlower(x))", "score": 0}
{"id": "eqasc_train_6536", "prediction": "all x.(Tulips(x) -> (ProducesSpores(x) & DevelopsIntoGametophytes(x)))", "score": 0}
{"id": "eqasc_train_6537", "prediction": "all x.(Rose(x) -> BeautifulFlower(x))", "score": 0}
{"id": "eqasc_train_6538", "prediction": "all x y.((Rose(x) & Spore(y)) -> ProducesAndDevelopsIntoGametophytes(x,y))", "score": 0}
{"id": "eqasc_train_6539", "prediction": "all x.(Gametophyte(x) -> Haploid(x))", "score": 0}
{"id": "eqasc_train_6540", "prediction": "all x y.((Flower(x) & Spore(y)) -> ProducesAndDevelopsIntoHaploloidEntities(x,y))", "score": 0}
{"id": "eqasc_train_6541", "prediction": "all x.(Pollen(x) -> GametophyteGenerationOfSeedPlants(x))", "score": 0}
{"id": "eqasc_train_6542", "prediction": "all x y z.((Flower(x) & Spore(y) & SeedPlant(z)) -> (Produces(x,y) & DevelopsInto(x,z)))", "score": 0}
{"id": "eqasc_train_6543", "prediction": "all x y.((Tulips(x) & Spore(y)) -> ProducesAndDevelopsIntoGametophytes(x,y))", "score": 0}
{"id": "eqasc_train_6544", "prediction": "all x.((Fern(x) & -HasFlowers(x) & HasSeeds(x)) -> ReproducesThroughSpores(x))", "score": 0}
{"id": "eqasc_train_6545", "prediction": "all x.(Fern(x) -> ReproducesWithSpores(x))", "score": 0}
{"id": "eqasc_train_6546", "prediction": "all x y.((FernGametophyte(x) & Moss(y)) -> (UnisexualGametophyte(x,y) & BisexualGametophyte(x,y)))", "score": 0}
{"id": "eqasc_train_6547", "prediction": "all x y.((Flower(x) & Spore(y)) -> (Produces(x,y) & Bisexual(y)))", "score": 0}
{"id": "eqasc_train_6548", "prediction": "all x.(Gametophyte(x) -> exists y.(Protonnema(y) & EmergesFrom(x,y)))", "score": 0}
{"id": "eqasc_train_6549", "prediction": "all x y.((Flower(x) & Protonnema(y)) -> ProducesSporesFrom(x,y))", "score": 0}
{"id": "eqasc_train_6550", "prediction": "(InterestingFlower(x) & Orchid(x))", "score": 0}
{"id": "eqasc_train_6551", "prediction": "all x.(Orchid(x) -> (ProducesSpores(x) & DevelopsIntoGametophytes(x)))", "score": 0}
{"id": "eqasc_train_6552", "prediction": "all x.(Gametophyte(x) -> (Photosynthetic(x) & HeartShaped(x)))", "score": 0}
{"id": "eqasc_train_6553", "prediction": "all x.(Flower(x) -> (ProducesSpores(x) & DevelopsHeartShape(x)))", "score": 0}
{"id": "eqasc_train_6554", "prediction": "all x.(Daffodil(x) -> NiceFlower(x))", "score": 0}
{"id": "eqasc_train_6555", "prediction": "all x y.((Daffodil(x) & Spore(y)) -> ProducesAndDevelopsIntoGametophytes(x,y))", "score": 0}
{"id": "eqasc_train_6556", "prediction": "all x.(Ribosome(x) -> (StructureInCytoplasm(x) & ProteinsMadeIn(x)))", "score": 0}
{"id": "eqasc_train_6557", "prediction": "all x y.((Ribosome(x) & Prokaryote(y)) -> (Larger(x) & DistinctFromRibosome(x,y)))", "score": 0}
{"id": "eqasc_train_6558", "prediction": "all x.(Prokaryote(x) -> CanMakeProteins(x))", "score": 0}
{"id": "eqasc_train_6559", "prediction": "all x.((Life(x) & -Protein(x)) -> Impossible(x))", "score": 0}
{"id": "eqasc_train_6560", "prediction": "all x.((LifeWithoutRribosomes(x) & -Ribosomes(x)) -> Impossible(x))", "score": 0}
{"id": "eqasc_train_6561", "prediction": "all x y.((Antibiotic(x) & MolecularStructure(y)) -> Affects(x,y))", "score": 0}
{"id": "eqasc_train_6562", "prediction": "all x y.((Ribosome(x) & Organelle(y)) -> Duplicates(x,y))", "score": 0}
{"id": "eqasc_train_6563", "prediction": "all x.(Protein(x) -> MadeInOrganelles(x))", "score": 0}
{"id": "eqasc_train_6564", "prediction": "all x.(RoughEndoplasmicReticulum(x) -> HasRibosomesAttachedD(x))", "score": 0}
{"id": "eqasc_train_6565", "prediction": "all x y.((Structure(x) & ProteinMaking(x)) -> RoughEndoplasmicReticulum(y))", "score": 0}
{"id": "eqasc_train_6566", "prediction": "all x y.((Protein(x) & Organelle(y)) -> MadeIn(x,y))", "score": 0}
{"id": "eqasc_train_6567", "prediction": "all x y z.((Protein(x) & Organelle(y) & Cytoplasm(z)) -> MadeIn(x,y,z))", "score": 0}
{"id": "eqasc_train_6568", "prediction": "all x.((Nucleus(x) & Outside(x)) -> Cytoplasm(x))", "score": 0}
{"id": "eqasc_train_6569", "prediction": "all x.(Ribosome(x) -> (OutsideNucleus(x) & ProteinsMade(x)))", "score": 0}
{"id": "eqasc_train_6570", "prediction": "all x.((Bound(x) | FreeRibosome(x)) -> (StructurallyIdentical(x) & Interchangeable(x)))", "score": 0}
{"id": "eqasc_train_6571", "prediction": "all x y.((Bound(x) & Free(x)) -> (InCytoplasm(y) & ProteinsMadeIn(y)))", "score": 0}
{"id": "eqasc_train_6572", "prediction": "all x.(NdoplasmicReticulum(x) -> MembraneAttachableToRibosomes(x))", "score": 0}
{"id": "eqasc_train_6573", "prediction": "all x.(EndoplasmicReticulum(x) -> (MembraneStructure(x) & AttachedInCytoplasm(x) & ProteinsMadeInCytoplasm(x)))", "score": 0}
{"id": "eqasc_train_6574", "prediction": "all x.(Roundworm(x) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_6575", "prediction": "all x.(Nematode(x) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_6576", "prediction": "all x.(SexualReproduction(x) -> (CombinationOfEggAndSsperm(x) & FormsLarvae(x)))", "score": 0}
{"id": "eqasc_train_6577", "prediction": "all x.(Roundworm(x) -> (ReproducesByCombiningEggAndSsperm(x) & FormsLarvae(x)))", "score": 0}
{"id": "eqasc_train_6578", "prediction": "all x.(Roundworm(x) -> MakesUpNematoda(x))", "score": 0}
{"id": "eqasc_train_6579", "prediction": "all x.(Nematoda(x) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_6580", "prediction": "all x.((Puppies(x) | Kittens(x)) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_6581", "prediction": "all x.(Roundworm(x) -> ComparativelyLarge(x))", "score": 0}
{"id": "eqasc_train_6582", "prediction": "all x y.((Egg(x) & Egg(y)) -> UsedToReproduce(x,y))", "score": 0}
{"id": "eqasc_train_6583", "prediction": "all x.(Nematode(x) -> MillimeterSizeRoundworm(x))", "score": 0}
{"id": "eqasc_train_6584", "prediction": "all x.(PhylumNematoda(x) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_6585", "prediction": "all x.(SexualReproduction(x) -> (InvolvesKaryogamy(x) & InvolvesMeiosis(x)))", "score": 0}
{"id": "eqasc_train_6586", "prediction": "all x.(Roundworm(x) -> (ReproducesUsingKaryogamy(x) & ReproducesUsingMeiosis(x)))", "score": 0}
{"id": "eqasc_train_6587", "prediction": "all x.(Nematode(x) -> (Microscopic(x) & TrueRoundworm(x)))", "score": 0}
{"id": "eqasc_train_6588", "prediction": "all x.(Nematode(x) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_6589", "prediction": "all x.(Fertilisation(x) -> KeyFeatureOfSexualReproduction(x))", "score": 0}
{"id": "eqasc_train_6590", "prediction": "all x.(Fertilisation(x) -> KeyFeatureOfRoundwormReproduction(x))", "score": 0}
{"id": "eqasc_train_6591", "prediction": "all x.(Nematode(x) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_6592", "prediction": "all x.(Roundworm(x) -> ReproducesByLayingEggs(x))", "score": 0}
{"id": "eqasc_train_6593", "prediction": "all x.(Roundworm(x) -> (HasOffspring(x) & LaysEggs(x)))", "score": 0}
{"id": "eqasc_train_6594", "prediction": "all x y.((LivingThing(x) & TooCold(x)) -> Dies(y))", "score": 0}
{"id": "eqasc_train_6595", "prediction": "all x.((StudyByBiologists(x) & TooCold(x)) -> Dies(x))", "score": 0}
{"id": "eqasc_train_6596", "prediction": "all x.(Hypothermia(x) -> (DropInNormalCoreTemperature(x) & OverexposureToCold(x)))", "score": 0}
{"id": "eqasc_train_6597", "prediction": "all x.((LivingThing(x) & Hypothermia(x)) -> Die(x))", "score": 0}
{"id": "eqasc_train_6598", "prediction": "all x.((Organism(x) & TooCold(x)) -> CanDie(x))", "score": 0}
{"id": "eqasc_train_6599", "prediction": "all x.((Plant(x) | Animal(x)) -> (Lives(x) & Dies(x) & Decomposes(x) & Recycled(x)))", "score": 0}
{"id": "eqasc_train_6600", "prediction": "all x.((Thing(x) & TooCold(x)) -> (Dies(x) & Decomposes(x) & Recylced(x)))", "score": 0}
{"id": "eqasc_train_6601", "prediction": "all x.(LivingThing(x) -> (Animal(x) | Plant(x)) & ConsistsOfLivingCells(x)))", "score": -1}
{"id": "eqasc_train_6602", "prediction": "all x y.((Animal(x) | Plant(y)) & TooCold(x)) -> Die(x,y))", "score": -1}
{"id": "eqasc_train_6603", "prediction": "all x y.((Year(x) & Alaska(y) & TemperatureAboveFreezing(y)) -> DiesFromHypothermia(x,y))", "score": 0}
{"id": "eqasc_train_6604", "prediction": "all x.((Person(x) & TooCold(x)) -> Hypothermia(x))", "score": 0}
{"id": "eqasc_train_6605", "prediction": "all x y.((Plant(x) & TooCold(x)) -> Die(y))", "score": 0}
{"id": "eqasc_train_6606", "prediction": "(all x.((Bird(x) & -AdequateCalories(x)) -> DieFromCold(x)))", "score": 0}
{"id": "eqasc_train_6607", "prediction": "all x.((Bird(x) & LacksFood(x)) -> Dies(x))", "score": 0}
{"id": "eqasc_train_6608", "prediction": "all x.(Sweating(x) -> ReducesBodyHeat(x))", "score": 0}
{"id": "eqasc_train_6609", "prediction": "all x.((Person(x) & Age(x) & ActivityLevel(x)) -> PerspiresOrSweats(x))", "score": 0}
{"id": "eqasc_train_6610", "prediction": "all x.(Perspiration(x) -> ReducesBodyHeat(x))", "score": 0}
{"id": "eqasc_train_6611", "prediction": "all x.(ExcessivePerspiration(x) -> SweatGlandsActive(x))", "score": 0}
{"id": "eqasc_train_6612", "prediction": "all x.(Perspiration(x) -> ReducesBodyHeat(x))", "score": 0}
{"id": "eqasc_train_6613", "prediction": "all x.((ExcessiveSweating(x) & Dehydration(x)) -> Common(x))", "score": 0}
{"id": "eqasc_train_6614", "prediction": "all x.(ExcessiveCoolingOfBodyHeat(x) -> Dehydration(x))", "score": 0}
{"id": "eqasc_train_6615", "prediction": "all x.((BodyFluids(x) & Fever(x) & Sweating(x)) -> Lost(x))", "score": 0}
{"id": "eqasc_train_6616", "prediction": "all x.(Fever(x) -> DehydratesAsSweat(x))", "score": 0}
{"id": "eqasc_train_6617", "prediction": "all x.((HighBodyHeat(x) & PredatoryActivity(x)) -> NecessaryForMaximum(x))", "score": 0}
{"id": "eqasc_train_6618", "prediction": "all x y.((Sweating(x) & PredatoryActivity(y)) -> ReducesHeat(x,y))", "score": 0}
{"id": "eqasc_train_6619", "prediction": "all x.(CausesBodyHeatLoss(x) -> (Perspiration(x) | Sweating(x)))", "score": 0}
{"id": "eqasc_train_6620", "prediction": "all x.(Perspiration(x) -> ReducesBodyHeat(x))", "score": 0}
{"id": "eqasc_train_6621", "prediction": "all x.(SaltwaterExcretion(x) -> ReducesBodyHeat(x))", "score": 0}
{"id": "eqasc_train_6622", "prediction": "all x.(Human(x) -> (Sweat(x) & Perspiration(x) & TastesSalty(x)))", "score": 0}
{"id": "eqasc_train_6623", "prediction": "all x.(Shivering(x) -> ProducesHeatInBody(x))", "score": 0}
{"id": "eqasc_train_6624", "prediction": "all x.((Sweating(x) | Shivering(x)) -> DifferentEffectsOnCoreTemperatures(x))", "score": 0}
{"id": "eqasc_train_6625", "prediction": "all x.(Clothing(x) -> ReducesEfficiencyOfSweeping(x))", "score": 0}
{"id": "eqasc_train_6626", "prediction": "all x.(Clothing(x) -> HasImpactOnEffectiveSweepingToCoolBody(x))", "score": 0}
{"id": "eqasc_train_6627", "prediction": "all x.(HeatCrop(x) -> CausedBySweeping(x))", "score": 0}
{"id": "eqasc_train_6628", "prediction": "all x.(Sweating(x) -> CausesCrops(x))", "score": 0}
{"id": "eqasc_train_6629", "prediction": "all x y.((Sweat(x) & Body(y)) -> (CoolsByEvaporation(x,y) & RemovesHeatFromSurface(x,y)))", "score": 0}
{"id": "eqasc_train_6630", "prediction": "all x y.((Sweating(x) & Body(y)) -> CoolsByEvaporation(x,y))", "score": 0}
{"id": "eqasc_train_6631", "prediction": "all x.(Carbon(x) -> MayBeStoredInSedimentaryRock(x))", "score": 0}
{"id": "eqasc_train_6632", "prediction": "exists x.(Carbon(x) & StoredInLimestone(x))", "score": 0}
{"id": "eqasc_train_6633", "prediction": "all x.(Marble(x) -> CarbonateRock(x))", "score": 0}
{"id": "eqasc_train_6634", "prediction": "all x y.((Carbon(x) & Marble(y)) -> MayBeStoredIn(x,y))", "score": 0}
{"id": "eqasc_train_6635", "prediction": "all x.((Carbon(x) & StoredInLimestone(x)) -> MillionOfYears(x))", "score": 0}
{"id": "eqasc_train_6636", "prediction": "all x.(Carbon(x) -> EssentialElementForPlantAndAnimalLife(x))", "score": 0}
{"id": "eqasc_train_6637", "prediction": "all x.((PlantLife(x) | AnimalLife(x)) -> DependsOnSedimentaryRock(x))", "score": 0}
{"id": "eqasc_train_6638", "prediction": "all x.(Carbon(x) -> MayBeStoredInLimestone(x))", "score": 0}
{"id": "eqasc_train_6639", "prediction": "all x.(Limestone(x) -> (Rock(x) & ComposedOfCalcium(x) & ComposedOfCarbon(x) & ComposedOfOxygen(x)))", "score": 0}
{"id": "eqasc_train_6640", "prediction": "all x.(Limestone(x) -> ContainsCarbon(x))", "score": 0}
{"id": "eqasc_train_6641", "prediction": "all x.(Carbon(x) -> FuelSource(x))", "score": 0}
{"id": "eqasc_train_6642", "prediction": "all x.(FuelSource(x) -> MayBeStoredInSedimentaryRock(x))", "score": 0}
{"id": "eqasc_train_6643", "prediction": "all x.(Carbon(x) -> MayBeStoredInSandstone(x))", "score": 0}
{"id": "eqasc_train_6644", "prediction": "all x.(Forest(x) -> NaturalStoreOfCarbon(x))", "score": 0}
{"id": "eqasc_train_6645", "prediction": "all x.(Forest(x) -> NaturallyKeepsCarbon(x))", "score": 0}
{"id": "eqasc_train_6646", "prediction": "all x.(Limestone(x) -> SedimentaryRock(x))", "score": 0}
{"id": "eqasc_train_6647", "prediction": "all x y.((Carbon(x) & Limestone(y)) -> MayBeStoredIn(x,y))", "score": 0}
{"id": "eqasc_train_6648", "prediction": "all x.(CarbonSink(x) -> StorageArea(x,Carbon))", "score": 0}
{"id": "eqasc_train_6649", "prediction": "all x.(CoalSink(x) -> CanBeStoredInSedimentaryRock(x))", "score": 0}
{"id": "eqasc_train_6650", "prediction": "all x y.((Balance(x) & Object(y)) -> MeasuresMass(x,y))", "score": 0}
{"id": "eqasc_train_6651", "prediction": "all x.(BeamBalance(x) -> (MeasuresUnknownMass(x) & ComparesKnownMasses(x)))", "score": 0}
{"id": "eqasc_train_6652", "prediction": "all x y.((Seesaw(x) & Object(y)) -> MeasuresMass(x,y))", "score": 0}
{"id": "eqasc_train_6653", "prediction": "all x.(Bear(x) -> (ProportionallyWeighted(x) & UseOnBalance(x) & MeasurementDiscoveries(x)))", "score": 0}
{"id": "eqasc_train_6654", "prediction": "all x.(Bear(x) -> (ProportionallyWeightedOnBalance(x) & MassDiscovery(x)))", "score": 0}
{"id": "eqasc_train_6655", "prediction": "(BaseUnitOfMass(x) & Gram(x))", "score": 0}
{"id": "eqasc_train_6656", "prediction": "all x.(Balance(x) -> MeasuresInGrams(x))", "score": 0}
{"id": "eqasc_train_6657", "prediction": "all x y.((Balance(x) & Object(y)) -> MeasuresGas(x,y))", "score": 0}
{"id": "eqasc_train_6658", "prediction": "all x.(Balancing(x) -> ConnotesScales(x))", "score": 0}
{"id": "eqasc_train_6659", "prediction": "all x y.((Scale(x) & Object(y)) -> MeasuresMass(x,y))", "score": 0}
{"id": "eqasc_train_6660", "prediction": "all x y.((Balance(x) & Object(y)) -> MeasuresAmountOfMatter(x,y))", "score": 0}
{"id": "eqasc_train_6661", "prediction": "all x y.((UnitOfMeasurment(x) & Balance(y)) -> (Gas(x,y) & Grams(x)))", "score": 0}
{"id": "eqasc_train_6662", "prediction": "all x.(MassUnit(x) -> Kilogram(x))", "score": 0}
{"id": "eqasc_train_6663", "prediction": "all x y.((Balance(x) & Object(y) & MeasuredInKg(x,y)) -> MeasuresAspect(x,y))", "score": 0}
{"id": "eqasc_train_6664", "prediction": "all x.(Object(x) -> NoMassAtAtom(x,absoluteZero))", "score": 0}
{"id": "eqasc_train_6665", "prediction": "all x.((Object(x) & AbsoluteZero(x)) -> -MeasuredByBalance(x))", "score": 0}
{"id": "eqasc_train_6666", "prediction": "all x.(Mass(x) -> MeasuredByDifference(x))", "score": 0}
{"id": "eqasc_train_6667", "prediction": "all x.(Balance(x) -> IndicatesMass(x))", "score": 0}
{"id": "eqasc_train_6668", "prediction": "all x y.((Earth(x) & TiltedOnRotatingAxis(x,y)) -> Seasons(x))", "score": 0}
{"id": "eqasc_train_6669", "prediction": "all x y.((Season(x) & Planet(y)) -> CausedByTilt(x,y))", "score": 0}
{"id": "eqasc_train_6670", "prediction": "all x y.((Planet(x) & Planet(y)) -> (Orbit(x,y) & Tip(x,y)))", "score": 0}
{"id": "eqasc_train_6671", "prediction": "all x y.((Earth(x) & TiltedOnRotatingAxis(x,y)) -> CausesDaylightChanges(x))", "score": 0}
{"id": "eqasc_train_6672", "prediction": "all x.(Autumn(x) -> BeautifulSeason(x))", "score": 0}
{"id": "eqasc_train_6673", "prediction": "all x y.((Earth(x) & TiltedOnRotatingAxis(x)) -> Autumn(y))", "score": 0}
{"id": "eqasc_train_6674", "prediction": "(Season(Spring) & Season(Summer) & Season(Autumn) & Season(Winter))", "score": 0}
{"id": "eqasc_train_6675", "prediction": "all x y.((Earth(x) & TiltedOnRotatingAxis(x,y)) -> CausesWinter(x))", "score": 0}
{"id": "eqasc_train_6676", "prediction": "all x.((Weather(x) & Seasons(x)) -> (AffectsPlants(x) & AffectsAnimals(x)))", "score": 0}
{"id": "eqasc_train_6677", "prediction": "all x.((Earth(x) & TiltedOnRotatingAxis(x)) -> CausesWeatherChanges(x))", "score": 0}
{"id": "eqasc_train_6678", "prediction": "all x.((Latitude(x) & Season(x)) -> CausesTemperatureVariations(x))", "score": 0}
{"id": "eqasc_train_6679", "prediction": "all x y.((Earth(x) & TiltedOnRotatingAxis(x,y)) -> CausesYearlyTemperatureVariations(x))", "score": 0}
{"id": "eqasc_train_6680", "prediction": "all x.(WeatherChange(x) -> (TiltInRotatingAxis(x) & EarthsRotatingAxis(x)))", "score": 0}
{"id": "eqasc_train_6681", "prediction": "all x.((Spring(x) | Summer(x) | Autumn(x) | Winter(x)) -> SeasonOfYear(x))", "score": 0}
{"id": "eqasc_train_6682", "prediction": "all x.(TiltedOnRotatingAxis(x) -> (CausesSpring(x) | CausesSummer(x) | CausesAutumn(x) | CausesWinter(x)))", "score": 0}
{"id": "eqasc_train_6683", "prediction": "all x.(TiltedOnRotatingAxis(x) -> (CausesSpring(x) | CausesSummer(x) | CausesAutumn(x) | CausesWinter(x)))", "score": 0}
{"id": "eqasc_train_6684", "prediction": "all x y z.((Earth(x) & Spring(y) & Summer(z) & Autumn(z) & Winter(z)) -> (TiltedOnRotatingAxis(x,y) & CausedBy(x,z)))", "score": 0}
{"id": "eqasc_train_6685", "prediction": "all x.(Season(x) -> ChangesTemperature(x))", "score": 0}
{"id": "eqasc_train_6686", "prediction": "all x y.((Earth(x) & TiltedOnRotatingAxis(x,y)) -> CausesTemperatureChanges(x))", "score": 0}
{"id": "eqasc_train_6687", "prediction": "all x.(Summer(x) -> BoldSeason(x))", "score": 0}
{"id": "eqasc_train_6688", "prediction": "all x y.((Earth(x) & TiltedOnRotatingAxis(x,y)) -> CausesSummer(x))", "score": 0}
{"id": "eqasc_train_6689", "prediction": "all x.((Lighthouse(x) & Tilted(x) & LeaningIntoSea(x)) -> October10(x))", "score": 0}
{"id": "eqasc_train_6690", "prediction": "all x.((Earth(x) & LeaningOnRotatingAxis(x)) -> CausesSeasons(x))", "score": 0}
{"id": "eqasc_train_6691", "prediction": "all x.(TiltedOnRotatingAxis(x) -> WeatherChange(x))", "score": 0}
{"id": "eqasc_train_6692", "prediction": "all x.(LakeLevel(x) -> (ChangeSeasonally(x) | ChangeAnnually(x)))", "score": 0}
{"id": "eqasc_train_6693", "prediction": "all x.(TiltedOnRotatingAxis(x) -> CausesLakeLevelChanges(x))", "score": 0}
{"id": "eqasc_train_6694", "prediction": "all x.(SeasonalAffectiveDisorder(x) -> (DepressiveCondition(x) & CausedBySeasonalChanges(x)))", "score": 0}
{"id": "eqasc_train_6695", "prediction": "all x.(TiltOfEarthRotation(x) -> CausesDepression(x))", "score": 0}
{"id": "eqasc_train_6696", "prediction": "all x y.((Sugar(x) & Food(y)) -> CausesToTasteSweet(x,y))", "score": 0}
{"id": "eqasc_train_6697", "prediction": "all x.((Sweet(x) & TooMany(x)) -> (CausesToothDecay(x) & UnhealthyGums(x)))", "score": 0}
{"id": "eqasc_train_6698", "prediction": "all x.(Sugar(x) -> (CausesToothDecay(x) & UnhealthyGums(x)))", "score": 0}
{"id": "eqasc_train_6699", "prediction": "all x.((Saccharide(x) & SimpleSugarUnit(x)) -> Monosaccharide(x))", "score": 0}
{"id": "eqasc_train_6700", "prediction": "all x.(Monosaccharide(x) -> CausesFoodToTasteSweet(x))", "score": 0}
{"id": "eqasc_train_6701", "prediction": "all x.((SugarSource(x) & Good(x)) -> (Sugar(x) | Glucose(x) | Honey(x) | Sweets(x)))", "score": 0}
{"id": "eqasc_train_6702", "prediction": "all x.(Honey(x) -> HasSugar(x))", "score": 0}
{"id": "eqasc_train_6703", "prediction": "all x.(Honey(x) -> MadeUpOfNaturalSugar(x))", "score": 0}
{"id": "eqasc_train_6704", "prediction": "all x y.((Honey(x) & Food(y)) -> CausesToTasteSweet(x,y))", "score": 0}
{"id": "eqasc_train_6705", "prediction": "all x.(FavoriteFood(x) -> (Cakes(x) | Noodles(x) | Rice(x) | Eggs(x) | Fruits(x)))", "score": 0}
{"id": "eqasc_train_6706", "prediction": "all x y.((Sugar(x) & Cake(y)) -> CausesToTasteSweet(x,y))", "score": 0}
{"id": "eqasc_train_6707", "prediction": "all x y.((Tongue(x) & Food(y)) -> (DeterminesTaste(x,y) & DecidesSweetOrBitter(x)))", "score": 0}
{"id": "eqasc_train_6708", "prediction": "all x y.((Tongue(x) & SweetFood(y)) -> DeterminesFlavor(x,y))", "score": 0}
{"id": "eqasc_train_6709", "prediction": "all x y.((Child(x) & Food(y) & ContainsSugar(x,y)) -> NaturallyDrawnToSweetness(x,y))", "score": 0}
{"id": "eqasc_train_6710", "prediction": "all x y.((Child(x) & Food(y)) -> TastesSweet(x,y))", "score": 0}
{"id": "eqasc_train_6711", "prediction": "all x.(MolassesSugar(x) -> DarkestSugarOfAll(x))", "score": 0}
{"id": "eqasc_train_6712", "prediction": "all x.(Molasses(x) -> CausesFoodToTasteSweet(x))", "score": 0}
{"id": "eqasc_train_6713", "prediction": "all x.((Sugar(x) | Sugar(x) | Milk(x)) -> SweetChocolate(x))", "score": 0}
{"id": "eqasc_train_6714", "prediction": "all x.(Chocolate(x) -> MadeFromSugar(x))", "score": 0}
{"id": "eqasc_train_6715", "prediction": "all x.(RegularSugar(x) -> (Succrose(x)))", "score": 0}
{"id": "eqasc_train_6716", "prediction": "all x y.((Sucrose(x) & Food(y)) -> CausesToTasteSweet(x,y))", "score": 0}
{"id": "eqasc_train_6717", "prediction": "all x.(Fruit(x) -> (Delicious(x) & VerySweet(x)))", "score": 0}
{"id": "eqasc_train_6718", "prediction": "all x.(Sugar(x) -> InFruit(x))", "score": 0}
{"id": "eqasc_train_6719", "prediction": "all x.((SugaryFood(x) & Sweet(x)) -> Tentivating(x))", "score": 0}
{"id": "eqasc_train_6720", "prediction": "all x y.((Sugar(x) & Food(y)) -> CausesToTasteTricking(x,y))", "score": 0}
{"id": "eqasc_train_6721", "prediction": "all x.(Glucose(x) -> TastesSweet(x))", "score": 0}
{"id": "eqasc_train_6722", "prediction": "all x.(Cane(x) -> Sugar(x))", "score": 0}
{"id": "eqasc_train_6723", "prediction": "all x.(Cane(x) -> CausesFoodToTasteSweet(x))", "score": 0}
{"id": "eqasc_train_6724", "prediction": "all x.((Cake(x) | Cookie(x)) -> TastesSweet(x))", "score": 0}
{"id": "eqasc_train_6725", "prediction": "all x y.((Sugar(x) & Cookie(y)) -> CausesFlavorToBeSweet(x,y))", "score": 0}
{"id": "eqasc_train_6726", "prediction": "all x.((TraditionalWise(x) & EatingSweetFoods(x)) -> CausesDiabetes(x))", "score": 0}
{"id": "eqasc_train_6727", "prediction": "all x.(Sugar(x) -> CausesDiabetes(x))", "score": 0}
{"id": "eqasc_train_6728", "prediction": "all x y.((Object(x) & Hit(y)) -> CausesParticlesToVibrate(x,y))", "score": 0}
{"id": "eqasc_train_6729", "prediction": "all x.((ElectricalParticle(x) & Material(x)) -> (Vibrate(x) & Accelerate(x)))", "score": 0}
{"id": "eqasc_train_6730", "prediction": "all x y.((Object(x) & Hitting(x,y)) -> CausesParticlesToAccelerate(x,y))", "score": 0}
{"id": "eqasc_train_6731", "prediction": "all x y.((Hiting(x,y) & Object(y)) -> MovesElectricParticles(x,y))", "score": 0}
{"id": "eqasc_train_6732", "prediction": "all x y z.((Geoffrey(x) & Gong(y) & Place(z)) -> (StopsToHit(x,y,z) & TestsResonance(x)))", "score": 0}
{"id": "eqasc_train_6733", "prediction": "all x.(Gong(x) -> ResonanceComesFromVibratingParticles(x))", "score": 0}
{"id": "eqasc_train_6734", "prediction": "all x.(Frequency(x) -> MeasurableRateOfVibration(x))", "score": 0}
{"id": "eqasc_train_6735", "prediction": "all x y.((Object(x) & Hit(y)) -> CausesFrequencyChange(x,y))", "score": 0}
{"id": "eqasc_train_6736", "prediction": "all x.((VibratingObject(x) & CreatesSoundEnergy(x)) -> CreatesSoundEnergy(x))", "score": 0}
{"id": "eqasc_train_6737", "prediction": "all x y.((Object(x) & Hit(y)) -> CausesParticlesToCreateSoundEnergy(x,y))", "score": 0}
{"id": "eqasc_train_6738", "prediction": "all x.(Ball(x) -> HitWithBat(x))", "score": 0}
{"id": "eqasc_train_6739", "prediction": "all x y z.((Battery(x) & Ball(y) & Particles(z)) -> CausesToVibrate(x,y,z))", "score": 0}
{"id": "eqasc_train_6740", "prediction": "all x.(Lightening(x) -> AttractedToMetalObjects(x))", "score": 0}
{"id": "eqasc_train_6741", "prediction": "all x.((Metal(x) & Hit(x)) -> CausesParticlesToVibrate(x))", "score": 0}
{"id": "eqasc_train_6742", "prediction": "all x.(Sound(x) -> CausedByVibrations(x))", "score": 0}
{"id": "eqasc_train_6743", "prediction": "all x y.((Object(x) & Hit(y)) -> CausesSounds(x,y))", "score": 0}
{"id": "eqasc_train_6744", "prediction": "all x.(RockParticle(x) -> VibrateBackAndForward(x))", "score": 0}
{"id": "eqasc_train_6745", "prediction": "all x y.((Rock(x) & Hitting(x,y)) -> CausesVibration(x))", "score": 0}
{"id": "eqasc_train_6746", "prediction": "all x.((ParticlesInCoal(x) | ParticlesInLampFilmFilm(x)) -> Vibrate(x))", "score": 0}
{"id": "eqasc_train_6747", "prediction": "all x y.((Object(x) & Hitting(x,y)) -> Hot(y))", "score": 0}
{"id": "eqasc_train_6748", "prediction": "all x y.((Object(x) & Hit(y)) -> CausesFrequencyWaves(x,y))", "score": 0}
{"id": "eqasc_train_6749", "prediction": "all x y.((Earth(x) & Sun(y)) -> CausesSeasonsToChange(x,y))", "score": 0}
{"id": "eqasc_train_6750", "prediction": "all x.((Earth(x) & Sun(x)) -> CausesWeatherChanges(x))", "score": 0}
{"id": "eqasc_train_6751", "prediction": "all x.((Day(x) & Hour(x)) -> SeasonalChange(x))", "score": 0}
{"id": "eqasc_train_6752", "prediction": "all x y.((Earth(x) & Sun(y)) -> CausesDaysToChange(x,y))", "score": 0}
{"id": "eqasc_train_6753", "prediction": "all x y.((Tilting(x) & EarthSeasons(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_train_6754", "prediction": "all x y.((Earth(x) & Sun(y)) -> CausesWeatherChanges(x,y))", "score": 0}
{"id": "eqasc_train_6755", "prediction": "all x y.((EarthOrbitingStar(x) & Season(y)) -> CausesSeasonsToChange(x,y))", "score": 0}
{"id": "eqasc_train_6756", "prediction": "all x.(Year(x) -> HasFourSeasons(x))", "score": 0}
{"id": "eqasc_train_6757", "prediction": "all x y.((Earth(x) & Sun(y) & Orbits(x,y)) -> CausesChange(x,y))", "score": 0}
{"id": "eqasc_train_6758", "prediction": "all x.(Summer(x) -> QuickChangedWeatherPatterns(x))", "score": 0}
{"id": "eqasc_train_6759", "prediction": "all x.((Earth(x) & OrbitsSun(x)) -> CausesQuickChangeWeatherPatterns(x))", "score": 0}
{"id": "eqasc_train_6760", "prediction": "all x.(Season(x) -> EarthTilt(x))", "score": 0}
{"id": "eqasc_train_6761", "prediction": "all x y.((Season(x) & OrbitalTilt(y)) -> Happens(x,y))", "score": 0}
{"id": "eqasc_train_6762", "prediction": "all x.((ClimateChange(x) & Season(y)) -> ExplainedByTiltOfRotationAxis(x,y))", "score": 0}
{"id": "eqasc_train_6763", "prediction": "all x y.((Direction(x) & EarthTilted(x) & Sun(y)) -> CausesClimateChange(x,y))", "score": 0}
{"id": "eqasc_train_6764", "prediction": "all x.(ThickFur(x) -> CanBeUsedForWarming(x))", "score": 0}
{"id": "eqasc_train_6765", "prediction": "all x.(SnowLeopard(x) -> (HasThickDenseFur(x) & HasDenseFur(x)))", "score": 0}
{"id": "eqasc_train_6766", "prediction": "all x.(SnowLeopardsCoat(x) -> (KeepsWarm(x) & UsesForWarm(x)))", "score": 0}
{"id": "eqasc_train_6767", "prediction": "all x.(SnowLeopardCoat(x) -> (KeepsWarm(x) & UsesForWarm(x)))", "score": 0}
{"id": "eqasc_train_6768", "prediction": "all x.(Bear(x) -> (HasThickFur(x) & ProtectsFromCold(x)))", "score": 0}
{"id": "eqasc_train_6769", "prediction": "all x.(Sheep(x) -> (Mammal(x) & ThickWoollyFur(x) & HoofedFeet(x)))", "score": 0}
{"id": "eqasc_train_6770", "prediction": "all x.(Sheep(x) -> (HasWoolyFur(x) & KeepsWarm(x)))", "score": 0}
{"id": "eqasc_train_6771", "prediction": "all x.(Mammal(x) -> (WarmBlood(x) & (Fur(x) | Hair(x)) & BreathesAir(x)))", "score": 0}
{"id": "eqasc_train_6772", "prediction": "all x.(Mammal(x) -> KeepsWarmWithHair(x))", "score": 0}
{"id": "eqasc_train_6773", "prediction": "all x.(Sheep(x) -> (KeepsWarm(x) & Sheep(x)))", "score": 0}
{"id": "eqasc_train_6774", "prediction": "all x.(Otter(x) -> (ThickFurCoat(x) & HasWhiskers(x)))", "score": 0}
{"id": "eqasc_train_6775", "prediction": "all x.(Otter(x) -> NeedsCoat(x))", "score": 0}
{"id": "eqasc_train_6776", "prediction": "all x.(Fox(x) -> WarmUpWithFur(x))", "score": 0}
{"id": "eqasc_train_6777", "prediction": "all x.((Body(x) & Warm(x)) -> MinimizedHeatProduction(x))", "score": 0}
{"id": "eqasc_train_6778", "prediction": "all x.(ThickFur(x) -> MinimizesHeatProduction(x))", "score": 0}
{"id": "eqasc_train_6779", "prediction": "all x.(Mammal(x) -> (HasHair(x) | HasFur(x)))", "score": 0}
{"id": "eqasc_train_6780", "prediction": "all x.(Mammal(x) -> HasBodyCovering(x))", "score": 0}
{"id": "eqasc_train_6781", "prediction": "all x.(WhiteFur(x) -> WarmerThanColoredFur(x))", "score": 0}
{"id": "eqasc_train_6782", "prediction": "all x.((Animal(x) & Thick(x) & White(x)) -> WarmestCoat(x))", "score": 0}
{"id": "eqasc_train_6783", "prediction": "all x.(CarpetBeetleLarvae(x) -> (FeedsOnKeratin(x) & FeedsOnChitin(x) & (FindsInWood(x) | FindsInFur(x) | FindsInFeathers(x))))", "score": 0}
{"id": "eqasc_train_6784", "prediction": "all x.(Keratin(x) -> KeepsWarm(x))", "score": 0}
{"id": "eqasc_train_6785", "prediction": "all x.(ThickHair(x) -> KeepsWarm(x))", "score": 0}
{"id": "eqasc_train_6786", "prediction": "all x.((FatLayer(x) & FurCoatRemoved(x)) -> NeededToKeepWarm(x))", "score": 0}
{"id": "eqasc_train_6787", "prediction": "all x.((Animal(x) & -ThickFur(x)) -> ReliesOnFatLayer(x))", "score": 0}
{"id": "eqasc_train_6788", "prediction": "all x.(Bear(x) -> CoveredWithHeavyFur(x))", "score": 0}
{"id": "eqasc_train_6789", "prediction": "all x.(Bear(x) -> KeepsWarm(x))", "score": 0}
{"id": "eqasc_train_6790", "prediction": "all x.(OttersFur(x) -> ThickestFur(x))", "score": 0}
{"id": "eqasc_train_6791", "prediction": "all x.(Otter(x) -> (UsedToMakeClothing(x) & KeepsWarm(x)))", "score": 0}
{"id": "eqasc_train_6792", "prediction": "all x.(Pelt(x) -> (Skin(x) & FurAttached(x)))", "score": 0}
{"id": "eqasc_train_6793", "prediction": "all x.(ThickPelt(x) -> KeepsWarm(x))", "score": 0}
{"id": "eqasc_train_6794", "prediction": "all x.(Aging(x) -> CellsLoseAbilityToDivide(x))", "score": 0}
{"id": "eqasc_train_6795", "prediction": "all x.(Death(x) -> AttributesToOldAgeInfirmities(x))", "score": 0}
{"id": "eqasc_train_6796", "prediction": "all x y.((Cell(x) & Cell(y) & LosesAbilityToDivide(x,y)) -> DeathOccurs(x))", "score": 0}
{"id": "eqasc_train_6797", "prediction": "all x.(Cell(x) -> (ProducesMoreCells(x) & DividesIntoTwoCells(x)))", "score": 0}
{"id": "eqasc_train_6798", "prediction": "all x.(Aging(x) -> (LessCellsProduced(x) & LessCellsProduced(x)))", "score": 0}
{"id": "eqasc_train_6799", "prediction": "all x.(CellDamage(x) -> Ageing(x))", "score": 0}
{"id": "eqasc_train_6800", "prediction": "all x.((Cell(x) & LosesAbilityToDivide(x)) -> Damaged(x))", "score": 0}
{"id": "eqasc_train_6801", "prediction": "all x y.((Aging(x) & Mitosis(y)) -> Stops(x,y))", "score": 0}
{"id": "eqasc_train_6802", "prediction": "all x.(Aging(x) -> MitosisStops(x))", "score": 0}
{"id": "eqasc_train_6803", "prediction": "all x.((Cell(x) & Divides(x)) -> LosesPortionsOfTelomeres(x))", "score": 0}
{"id": "eqasc_train_6804", "prediction": "all x.(Aging(x) -> CellsLoseTelomeres(x))", "score": 0}
{"id": "eqasc_train_6805", "prediction": "all x y.((Aging(x) & Mitosis(y) & SlowsForGood(y,x)) -> AgingOccurs(x))", "score": 0}
{"id": "eqasc_train_6806", "prediction": "all x.((Illness(x) | Aging(x) | Death(x)) -> Inevitable(x))", "score": 0}
{"id": "eqasc_train_6807", "prediction": "all x.((Cell(x) & LosingAbilityToDivide(x)) -> Inevitable(x))", "score": 0}
{"id": "eqasc_train_6808", "prediction": "all x.(Gerontology(x) -> (StudiesAgingProcess(x) & StudiesOldAge(x)))", "score": 0}
{"id": "eqasc_train_6809", "prediction": "all x.((Cell(x) & LosesAbilityToDivide(x)) -> Old(x))", "score": 0}
{"id": "eqasc_train_6810", "prediction": "all x y.((Aging(x) & LossOfMitosis(y)) -> Occurs(x,y))", "score": 0}
{"id": "eqasc_train_6811", "prediction": "all x.(Evolution(x) -> (OccursInResponseToChange(x) & InEnvironment(x)))", "score": 0}
{"id": "eqasc_train_6812", "prediction": "all x.((Environment(x) & Changes(x)) -> Changes(x))", "score": 0}
{"id": "eqasc_train_6813", "prediction": "all x.(Evolution(x) -> (OccursInResponseToChange(x) & InLife(x)))", "score": 0}
{"id": "eqasc_train_6814", "prediction": "all x.(Extinction(x) -> (NaturalPartOfEvolution(x) | ProcessOfEvolution(x)))", "score": 0}
{"id": "eqasc_train_6815", "prediction": "all x y.((Extinction(x) & EnvironmentChange(y)) -> OccursInResponseTo(x,y))", "score": 0}
{"id": "eqasc_train_6816", "prediction": "all x y.((Evolution(x) & NativeHabitat(y)) -> OccursInResponseToChange(x,y))", "score": 0}
{"id": "eqasc_train_6817", "prediction": "all x.(Evolution(x) -> ChangesPatternOfLifeForms(x))", "score": 0}
{"id": "eqasc_train_6818", "prediction": "all x.((Lifeform(x) & EnvironmentChange(x)) -> ChangesPattern(x))", "score": 0}
{"id": "eqasc_train_6819", "prediction": "all x.(NaturalSelection(x) -> MainMechanismOfEvolution(x))", "score": 0}
{"id": "eqasc_train_6820", "prediction": "all x y.((NaturalSelection(x) & EnvionmentChange(y)) -> OccursInResponseTo(x,y))", "score": 0}
{"id": "eqasc_train_6821", "prediction": "all x y.((BiologicalEvolution(x) & Species(y)) -> ChangesInSuccessfulGenerations(x,y))", "score": 0}
{"id": "eqasc_train_6822", "prediction": "all x y.((Species(x) & Generation(y) & EnvironmentChange(x,y)) -> ChangesInSuccessfulGenerationsOfSpecies(x,y))", "score": 0}
{"id": "eqasc_train_6823", "prediction": "all x.(Animal(x) -> (ReactsInstinctivelyToChange(x) & InEnvironment(x)))", "score": 0}
{"id": "eqasc_train_6824", "prediction": "all x y.((Animal(x) & HabitatChange(y)) -> EvolutionOccursIn(x,y))", "score": 0}
{"id": "eqasc_train_6825", "prediction": "all x.(Organism(x) -> AdaptsToEnvironmentChanges(x))", "score": 0}
{"id": "eqasc_train_6826", "prediction": "all x.(AdaptingOrganisms(x) -> Evolution(x))", "score": 0}
{"id": "eqasc_train_6827", "prediction": "all x.(ClimateChange(x) -> (SignificantImpactOnEnvironment(x) & SignificantImpactOnHumanSociety(x)))", "score": 0}
{"id": "eqasc_train_6828", "prediction": "all x.(ClimateChange(x) -> SignificantEvolutionaryResponse(x))", "score": 0}
{"id": "eqasc_train_6829", "prediction": "all x.(Speciation(x) -> ExtensionOfEvolution(x))", "score": 0}
{"id": "eqasc_train_6830", "prediction": "all x y.((Speciation(x) & EnvironmentChange(y)) -> OccursInResponseTo(x,y))", "score": 0}
{"id": "eqasc_train_6831", "prediction": "all x y.((BiologicalEvolution(x) & Population(y)) -> ChangesGeneticCharacteristicsOverTime(x,y))", "score": 0}
{"id": "eqasc_train_6832", "prediction": "all x y.((GeneticCharacteristicsChange(x) & EnvironmentChange(y)) -> OccursInResponseToChange(x,y))", "score": 0}
{"id": "eqasc_train_6833", "prediction": "all x.(CellDividend(x) -> CausesGrowth(x))", "score": 0}
{"id": "eqasc_train_6834", "prediction": "all x.(Mitosis(x) -> CausesGrowth(x))", "score": 0}
{"id": "eqasc_train_6835", "prediction": "all x y.((CellMitosis(x) & Organism(y)) -> CausesGrowth(x,y))", "score": 0}
{"id": "eqasc_train_6836", "prediction": "all x.(Cancer(x) -> (UncontrolledCellDividetion(x) & UncontrolledGrowth(x)))", "score": 0}
{"id": "eqasc_train_6837", "prediction": "all x.(CellDividend(x) -> Uncontrolled(x))", "score": 0}
{"id": "eqasc_train_6838", "prediction": "all x.(Mitosis(x) -> (SimpleCellDividection(x) & SingleCellDividection(x)))", "score": 0}
{"id": "eqasc_train_6839", "prediction": "all x.(Mitosis(x) -> CausesGrowth(x))", "score": 0}
{"id": "eqasc_train_6840", "prediction": "all x.(Organism(x) -> (Growth(x) & Development(x)))", "score": 0}
{"id": "eqasc_train_6841", "prediction": "all x.(CellDividend(x) -> CausesOrganismsToGrow(x))", "score": 0}
{"id": "eqasc_train_6842", "prediction": "all x.(CellDividend(x) -> (NecessaryForGrowth(x) & NecessaryForRepair(x) & NecessaryForRepair(x) & NecessaryForRepair(x) & NecessaryForReproduction(x)))", "score": 0}
{"id": "eqasc_train_6843", "prediction": "all x.(CellSplitting(x) -> NecessaryForGrowth(x))", "score": 0}
{"id": "eqasc_train_6844", "prediction": "all x.(CellDivision(x) -> (RelativelySlow(x) & RequiresLotOfEnergy(x)))", "score": 0}
{"id": "eqasc_train_6845", "prediction": "all x.((Growth(x) & RequiresLotOfEnergy(x)) -> RequiresLotOfEnergy(x))", "score": 0}
{"id": "eqasc_train_6846", "prediction": "all x.(Cytology(x) -> CellDivision(x))", "score": 0}
{"id": "eqasc_train_6847", "prediction": "all x.(Growth(x) -> (Cancerous(x) | Desastrous(x) | Healthy(x)))", "score": 0}
{"id": "eqasc_train_6848", "prediction": "all x.(CellDividend(x) -> Cancerous(x))", "score": 0}
{"id": "eqasc_train_6849", "prediction": "all x.(Growth(x) -> SizeOfTissue(x))", "score": 0}
{"id": "eqasc_train_6850", "prediction": "all x.(CellDivision(x) -> CausesTissueGasBerger(x))", "score": 0}
{"id": "eqasc_train_6851", "prediction": "all x.(Tumor(x) -> AnomalyGrowth(x))", "score": 0}
{"id": "eqasc_train_6852", "prediction": "all x.(AbnormalCellDividend(x) -> CausesTumors(x))", "score": 0}
{"id": "eqasc_train_6853", "prediction": "all x.((Cell(x) & Growth(x)) -> NormalReproduction(x))", "score": 0}
{"id": "eqasc_train_6854", "prediction": "all x y.((CellDividend(x) & Reproduction(y)) -> LeadsTo(x,y))", "score": 0}
{"id": "eqasc_train_6855", "prediction": "all x.(CellDividend(x) -> ProducesDaughterCellsEqualSize(x))", "score": 0}
{"id": "eqasc_train_6856", "prediction": "all x y.((ProducingDaughterCells(x) & DaughterCellsEqualSize(x)) -> CausesGrowth(y))", "score": 0}
{"id": "eqasc_train_6857", "prediction": "all x.(Centriole(x) -> ParticipatesInCellDividend(x))", "score": 0}
{"id": "eqasc_train_6858", "prediction": "all x.(Centriole(x) -> RequiresForGrowth(x))", "score": 0}
{"id": "eqasc_train_6859", "prediction": "all x.(Cancer(x) -> CausesGrowth(x))", "score": 0}
{"id": "eqasc_train_6860", "prediction": "all x.(Coral(x) -> FormsLargeColony(x))", "score": 1}
{"id": "eqasc_train_6861", "prediction": "all x.(WarmTropicalWater(x) -> UnrivaledEnthusiasms(x))", "score": 0}
{"id": "eqasc_train_6862", "prediction": "all x y.((Coral(x) & WarmWater(y)) -> FormsIn(x,y))", "score": 0}
{"id": "eqasc_train_6863", "prediction": "all x.(Coral(x) -> (TinyFlowerLike(x) & LivesInColony(x)))", "score": 0}
{"id": "eqasc_train_6864", "prediction": "all x.(FlowerLikeAnimal(x) -> LivesInShallowTropicalWater(x))", "score": 0}
{"id": "eqasc_train_6865", "prediction": "all x.(CoralCommunity(x) -> FoundInWarmWaters(x))", "score": 0}
{"id": "eqasc_train_6866", "prediction": "all x.(SwitchTropicalWater(x) -> Warm(x))", "score": 0}
{"id": "eqasc_train_6867", "prediction": "all x y.((HardCoralColony(x) & CoralReef(y)) -> Forms(x,y))", "score": 0}
{"id": "eqasc_train_6868", "prediction": "all x.(Reef(x) -> FormsInShallowTropicalWater(x))", "score": 0}
{"id": "eqasc_train_6869", "prediction": "all x.(TropicalFish(x) -> RequiresWarmWater(x))", "score": 0}
{"id": "eqasc_train_6870", "prediction": "all x y.((Coral(x) & DeepWarmWaterway(y)) -> FormsLargeColony(x,y))", "score": 0}
{"id": "eqasc_train_6871", "prediction": "all x.(Coral(x) -> CalciteShell(x))", "score": 0}
{"id": "eqasc_train_6872", "prediction": "all x.(CalciteShell(x) -> FormsLargeColoniesInShallowTropicalWater(x))", "score": 0}
{"id": "eqasc_train_6873", "prediction": "exists x.(SeaFish(x) & LivesInTropicalWater(x) & WaterWarm(x))", "score": 0}
{"id": "eqasc_train_6874", "prediction": "all x.(Coral(x) -> FormsLargeColoniesInWarmWater(x))", "score": 0}
{"id": "eqasc_train_6875", "prediction": "all x.(CoralReef(x) -> (FoundInWarmClearShallowWaters(x) & FoundInTropicalOceans(x)))", "score": 0}
{"id": "eqasc_train_6876", "prediction": "all x y.((Coral(x) & WarmShallowWater(y)) -> FormsLargeColony(x,y))", "score": 0}
{"id": "eqasc_train_6877", "prediction": "all x.(Water(x) -> (SwitchAtSurface(x) & GradualDependening(x)))", "score": 0}
{"id": "eqasc_train_6878", "prediction": "all x.(Coral(x) -> FormsLargeColony(x))", "score": 1}
{"id": "eqasc_train_6879", "prediction": "all x.(Coral(x) -> PolypStage(x))", "score": 0}
{"id": "eqasc_train_6880", "prediction": "all x.(PolypStage(x) -> FormsLargeColoniesInShallowTropicalWater(x))", "score": 0}
{"id": "eqasc_train_6881", "prediction": "all x y.((Exoskeleton(x) & Accumulated(x)) -> FormsInShallowTropicalWater(x,y))", "score": 0}
{"id": "eqasc_train_6882", "prediction": "all x.((Animal(x) & CalciteShells(x)) -> FormsLargeColoniesInShallowTropicalWater(x))", "score": 0}
{"id": "eqasc_train_6883", "prediction": "all x.(ShallowTropicalWater(x) -> RemarkablePlace(x))", "score": 0}
{"id": "eqasc_train_6884", "prediction": "all x y z.((Coral(x) & Colony(y) & Place(z)) -> FormsLargeColony(x,y,z))", "score": 0}
{"id": "eqasc_train_6885", "prediction": "all x.((Animal(x) & RequiresNutrients(x)) -> GrowAndHeal(x))", "score": 0}
{"id": "eqasc_train_6886", "prediction": "all x.(Animal(x) -> RequiresIngestion(x))", "score": 0}
{"id": "eqasc_train_6887", "prediction": "all x.(Human(x) -> (RequiresNutrients(x) & Grows(x) & Heals(x)))", "score": 0}
{"id": "eqasc_train_6888", "prediction": "all x y z.((Animal(x) & Plant(y) & Plant(z)) -> EatsToGrow(x,y,z))", "score": 0}
{"id": "eqasc_train_6889", "prediction": "all x y.((Animal(x) & Animal(y)) -> EssentialPotassium(x,y))", "score": 0}
{"id": "eqasc_train_6890", "prediction": "all x.((Animal(x) & RequiresFood(x)) -> GrowsAndHeals(x))", "score": 0}
{"id": "eqasc_train_6891", "prediction": "all x.(Dog(x) -> (RequiresNutrients(x) & Grows(x) & Heals(x)))", "score": 0}
{"id": "eqasc_train_6892", "prediction": "all x.(Food(x) -> (ContainsNutrients(x) & ProvidesNecessaryEnergy(x) & ProvidesEssentialNutrients(x)))", "score": 0}
{"id": "eqasc_train_6893", "prediction": "all x y.((Microbe(x) & Animal(y)) -> ProvidesNutrients(x,y))", "score": 0}
{"id": "eqasc_train_6894", "prediction": "all x.(Animal(x) -> (RequiresMicrobes(x) & Grows(x) & Heals(x)))", "score": 0}
{"id": "eqasc_train_6895", "prediction": "all x.((Nutrient(x) & PromotesHealing(x)) -> (VitaminC(x) | Zinc(x) | Copper(x) | VitaminA(x) | BVitamin(x)))", "score": 0}
{"id": "eqasc_train_6896", "prediction": "all x.(VitaminC(x) -> HelpsAnimalsHeal(x))", "score": 0}
{"id": "eqasc_train_6897", "prediction": "all x y.((Microbe(x) & Animal(y)) -> (HelpsGrow(x,y) & HelpsHeal(x,y)))", "score": 0}
{"id": "eqasc_train_6898", "prediction": "all x.(Touch(x) -> (DetectsTexture(x) & UsesTouch(x)))", "score": 0}
{"id": "eqasc_train_6899", "prediction": "all x y.((Hand(x) & Cup(y) & Touches(x,y)) -> Touching(x))", "score": 0}
{"id": "eqasc_train_6900", "prediction": "all x.(Hand(x) -> CanDetectTexture(x))", "score": 0}
{"id": "eqasc_train_6901", "prediction": "all x.((Piece(x) & MakingPhysicalContact(x)) -> Touching(x))", "score": 0}
{"id": "eqasc_train_6902", "prediction": "all x.(PhysicalContact(x) -> CanDetectTexture(x))", "score": 0}
{"id": "eqasc_train_6903", "prediction": "all x.(Skin(x) -> (RichlySuppliedWithNervous(x) & EnablesPerceptionOfPain(x) & EnablesPerceptionOfTouch(x) & EnablesPerceptionOfHeat(x) & EnablesPerceptionOfCold(x)))", "score": 0}
{"id": "eqasc_train_6904", "prediction": "all x y.((Nerve(x) & Texture(y)) -> Feels(x,y))", "score": 0}
{"id": "eqasc_train_6905", "prediction": "all x.(SenseOfTouch(x) -> PerceivedPressureOnSkin(x))", "score": 0}
{"id": "eqasc_train_6906", "prediction": "all x y.((Skin(x) & PressureOnSkin(y)) -> CanDetectTexture(x,y))", "score": 0}
{"id": "eqasc_train_6907", "prediction": "all x.(Fingers(x) -> CanTouch(x))", "score": 0}
{"id": "eqasc_train_6908", "prediction": "all x.(Fingers(x) -> (DetectsTexture(x) & Fingers(x)))", "score": 0}
{"id": "eqasc_train_6909", "prediction": "Texture: Rough, Smooth.", "score": -1}
{"id": "eqasc_train_6910", "prediction": "all x y.((Touch(x) & Object(y)) -> (DetectsSmoothness(x,y) & DetectsSmoothness(x,y)))", "score": 0}
{"id": "eqasc_train_6911", "prediction": "all x y.((NervousEnding(x) & Dermis(y)) -> SourceOfSenseOfTouch(x,y))", "score": 0}
{"id": "eqasc_train_6912", "prediction": "all x y.((NervineEnding(x) & Dermis(y)) -> CanDetectTexture(x,y))", "score": 0}
{"id": "eqasc_train_6913", "prediction": "all x.((Skin(x) & LargestOrgan(x)) -> TouchIsExtremelyImportant(x))", "score": 0}
{"id": "eqasc_train_6914", "prediction": "all x.((Organ(x) & LargestInBody(x)) -> CanDetectTexture(x))", "score": 0}
{"id": "eqasc_train_6915", "prediction": "Touch is the earliest of the five senses to develop.", "score": -1}
{"id": "eqasc_train_6916", "prediction": "all x.(DetectTexture(x) -> earliestSenseToDevelops(x))", "score": 0}
{"id": "eqasc_train_6917", "prediction": "all x.(Texture(x) -> (Soft(x) | Fuzzy(x) | Rough(x) | Smooth(x) | Bumpy(x) | Hard(x) | Slick(x)))", "score": 0}
{"id": "eqasc_train_6918", "prediction": "all x.(Touch(x) -> (DetectsFookyFoot(x) & UsesTouch(x)))", "score": 0}
{"id": "eqasc_train_6919", "prediction": "all x.(Plant(x) -> (LifeCycle(x) & AlterationOfGenerations(x)))", "score": 0}
{"id": "eqasc_train_6920", "prediction": "all x.(AlternationOfGenerations(x) -> (IncludesSexualPhase(x) & AlternatesAsexualPhase(x)))", "score": 0}
{"id": "eqasc_train_6921", "prediction": "all x.(Plant(x) -> (HasCharacteristicLifeCycle(x) & IncludesSexualReproduction(x) & IncludesAsexualReproduction(x)))", "score": 0}
{"id": "eqasc_train_6922", "prediction": "all x.(Bush(x) -> (LifeCycle(x) & AlterationOfGenerations(x)))", "score": 0}
{"id": "eqasc_train_6923", "prediction": "all x.((Fern(x) & Bryophyta(x)) -> AlternationOfGeneration(x))", "score": 0}
{"id": "eqasc_train_6924", "prediction": "all x.(Fern(x) -> Plant(x))", "score": 0}
{"id": "eqasc_train_6925", "prediction": "all x.(Fern(x) -> ShadePlant(x))", "score": 0}
{"id": "eqasc_train_6926", "prediction": "all x.(Fern(x) -> (CharacteristicLifeCycle(x) & AlterationOfGenerations(x)))", "score": 0}
{"id": "eqasc_train_6927", "prediction": "all x.(Tree(x) -> (Plant(x) | Redwood(x)))", "score": 0}
{"id": "eqasc_train_6928", "prediction": "all x.(Redwood(x) -> HasCharacteristicLifeCycle(x))", "score": 0}
{"id": "eqasc_train_6929", "prediction": "all x.(Plant(x) -> (HasChlorophyll(x) & AlterationOfGenerations(x)))", "score": 0}
{"id": "eqasc_train_6930", "prediction": "all x.(Plant(x) -> (HasChlorophyll(x) & CharacteristicLifeCycle(x)))", "score": 0}
{"id": "eqasc_train_6931", "prediction": "all x.(Orchid(x) -> (CharacteristicLifeCycle(x) & AlterationOfGenerations(x)))", "score": 0}
{"id": "eqasc_train_6932", "prediction": "all x.((Plant(x) | Animal(x)) -> (Birth(x) & Growth(x) & Reproduction(x) & Death(x)))", "score": 0}
{"id": "eqasc_train_6933", "prediction": "all x.(Plant(x) -> (HasCharacteristicLifeCycle(x) & DetailsBirthGrowthReproductionAndDeath(x)))", "score": 0}
{"id": "eqasc_train_6934", "prediction": "all x.(KaufmannianaTulips(x) -> SmallPlant(x))", "score": 0}
{"id": "eqasc_train_6935", "prediction": "all x.(Tulips(x) -> (CharacteristicLifeCycle(x) & AlterationOfGenerations(x)))", "score": 0}
{"id": "eqasc_train_6936", "prediction": "all x.((LifeCyclesOfOrganisms(x) & Reproduction(x)) -> CharacteristicOfLivingSystems(x))", "score": 0}
{"id": "eqasc_train_6937", "prediction": "all x.(Plant(x) -> (Reproduces(x) & AlterationOfGenerations(x)))", "score": 0}
{"id": "eqasc_train_6938", "prediction": "all x.(Plant(x) -> DifferentLifeCycles(x))", "score": 0}
{"id": "eqasc_train_6939", "prediction": "all x.(Plant(x) -> (DifferentChangesInLife(x) & AlterationOfGenerations(x)))", "score": 0}
{"id": "eqasc_train_6940", "prediction": "all x.(Descendant(x) -> IncludesGenerations(x))", "score": 0}
{"id": "eqasc_train_6941", "prediction": "all x.(Plant(x) -> (LifeCycle(x) & AlterationOfDescended(x)))", "score": 0}
{"id": "eqasc_train_6942", "prediction": "all x.(Goldenrod(x) -> GeneratesActivity(x))", "score": 0}
{"id": "eqasc_train_6943", "prediction": "all x.(GoldenrodLifeCycle(x) -> AlterationOfGenerations(x))", "score": 0}
{"id": "eqasc_train_6944", "prediction": "all x.(Bamboo(x) -> MostUsefulPlant(x))", "score": 0}
{"id": "eqasc_train_6945", "prediction": "all x.(Bamboo(x) -> (LifeCycle(x) & AlterationOfGenerations(x)))", "score": 0}
{"id": "eqasc_train_6946", "prediction": "exists x.(Plant(x) & FruitTree(x))", "score": 0}
{"id": "eqasc_train_6947", "prediction": "all x.(Tree(x) -> (LifeCycle(x) & AlterationOfGenerations(x)))", "score": 0}
{"id": "eqasc_train_6948", "prediction": "all x y.((Infection(x) & BodyTissue(y)) -> CausesSwelling(x,y))", "score": 0}
{"id": "eqasc_train_6949", "prediction": "all x y.((InvasionOfBody(x) & Bacteria(y)) -> CausesBodyTissuesToSwell(x,y))", "score": 0}
{"id": "eqasc_train_6950", "prediction": "all x.(Joint(x) -> SwellsPainfully(x))", "score": 0}
{"id": "eqasc_train_6951", "prediction": "all x.(Infection(x) -> CausesJoinPain(x))", "score": 0}
{"id": "eqasc_train_6952", "prediction": "all x.(Bacteria(x) -> CanCauseInfection(x))", "score": 0}
{"id": "eqasc_train_6953", "prediction": "all x.(Bacteria(x) -> CausesSwelling(x))", "score": 0}
{"id": "eqasc_train_6954", "prediction": "all x.(HIVInfection(x) -> ChronicLifelongInfection(x))", "score": 0}
{"id": "eqasc_train_6955", "prediction": "all x.(HIV(x) -> CausesBodylyTissuesToSwell(x))", "score": 0}
{"id": "eqasc_train_6956", "prediction": "all x.(Doctor(x) -> TissueSwellingEdema(x))", "score": 0}
{"id": "eqasc_train_6957", "prediction": "all x.(Infection(x) -> CausesEdema(x))", "score": 0}
{"id": "eqasc_train_6958", "prediction": "all x.(ConnectiveTissue(x) -> (CommonNetwork(x) & ForBodylySystemsAndEnergyPathways(x)))", "score": 0}
{"id": "eqasc_train_6959", "prediction": "all x y.((Infection(x) & ConnectiveTissue(y)) -> CausesSwelling(x,y))", "score": 0}
{"id": "eqasc_train_6960", "prediction": "all x.((Abscess(x) | Swelling(x)) -> (InfectionInTooth(x) | InfectionInGum(x)))", "score": 0}
{"id": "eqasc_train_6961", "prediction": "all x y.((Abcess(x) & Teeth(y)) -> CausesSwelling(x,y))", "score": 0}
{"id": "eqasc_train_6962", "prediction": "all x.(Bacteria(x) -> CausesBodylyTissuesToSwell(x))", "score": 0}
{"id": "eqasc_train_6963", "prediction": "all x.(Infection(x) -> CausesEdemaInBodylyTissues(x))", "score": 0}
{"id": "eqasc_train_6964", "prediction": "all x y.((Inflammation(x) & Tissues(y) & LineAirways(x,y)) -> (Swells(x) & ProducesExtraOrThickMucus(x)))", "score": 0}
{"id": "eqasc_train_6965", "prediction": "all x.(Infection(x) -> CausesInflammation(x))", "score": 0}
{"id": "eqasc_train_6966", "prediction": "all x.(Aneurysm(x) -> (SwellingInBloodVessel(x) & InBloodVessel(x)))", "score": 0}
{"id": "eqasc_train_6967", "prediction": "all x.(Infection(x) -> CanCauseAneurysm(x))", "score": 0}
{"id": "eqasc_train_6968", "prediction": "all x.(Antihistamine(x) -> (ReducesSwelling(x) & InMucousMembrane(x) & InSoftTissues(x)))", "score": 0}
{"id": "eqasc_train_6969", "prediction": "all x.(Antihistamine(x) -> CanHelpWithInfections(x))", "score": 0}
{"id": "eqasc_train_6970", "prediction": "all x.(Boiling(x) -> (LiquidsHeatedAboveBoilingPoint(x) & HeatsAboveBoilingPoint(x)))", "score": 0}
{"id": "eqasc_train_6971", "prediction": "all x y.((Boiling(x) & Liquid(y)) -> ConvertsToGas(x,y))", "score": 0}
{"id": "eqasc_train_6972", "prediction": "all x y.((Liquid(x) & Gas(y) & HeatsAbovePoint(x,y)) -> Converts(x,y))", "score": 0}
{"id": "eqasc_train_6973", "prediction": "all x y.((HeatingLiquids(x) & TemperatureAbove(x,y)) -> ConvertsToGas(x))", "score": 0}
{"id": "eqasc_train_6974", "prediction": "all x.(BoilingWater(x) -> CausesBurns(x))", "score": 0}
{"id": "eqasc_train_6975", "prediction": "all x.(HeatingWater(x) -> CanCauseBurns(x))", "score": 0}
{"id": "eqasc_train_6976", "prediction": "all x y.((GasBubble(x) & BoilingLakeSurface(y)) -> BurstsOver(x,y))", "score": 0}
{"id": "eqasc_train_6977", "prediction": "all x.((GasBolt(x) & HeatsLiquids(x)) -> Bursts(x))", "score": 0}
{"id": "eqasc_train_6978", "prediction": "all x.(Evaporation(x) -> Boiling(x))", "score": 0}
{"id": "eqasc_train_6979", "prediction": "all x.(Evaporation(x) -> (LiquidsHeatedAboveEvaporationPoint(x) & HeatsAboveEvaporationPoint(x)))", "score": 0}
{"id": "eqasc_train_6980", "prediction": "all x.(VaporPressure(x) -> LiquidBoiling(x))", "score": 0}
{"id": "eqasc_train_6981", "prediction": "all x.(VaporPressure(x) -> (LiquidsHeated(x) & Heats(x)))", "score": 0}
{"id": "eqasc_train_6982", "prediction": "(CelsiusScale(Celsius) -> (FreezingPoint(Celsius) & -Celsius(Celsius)))", "score": 0}
{"id": "eqasc_train_6983", "prediction": "all x.((Water(x) & HeatedAbove100Degrees(x)) -> Boils(x))", "score": 0}
{"id": "eqasc_train_6984", "prediction": "all x y.((Liquid(x) & Liquid(y)) -> (Heating(x,y) & CausesBurns(x)))", "score": 0}
{"id": "eqasc_train_6985", "prediction": "all x.((PressureReduced(x) & BoilingPointDiminished(x)) -> Reduced(x))", "score": 0}
{"id": "eqasc_train_6986", "prediction": "all x.((LiquidBoil(x) & ReducedPressure(x)) -> LessHeatingRequired(x))", "score": 0}
{"id": "eqasc_train_6987", "prediction": "all x.(BoilingPoint(x) -> AffectedByPressure(x))", "score": 0}
{"id": "eqasc_train_6988", "prediction": "all x.((LiquidsHeated(x) & PressureAffected(x)) -> Heats(x))", "score": 0}
{"id": "eqasc_train_6989", "prediction": "all x y.((Car(x) & Car(y)) -> CausesPollution(x,y))", "score": 0}
{"id": "eqasc_train_6990", "prediction": "all x.(Car(x) -> HurtsEnvironment(x))", "score": 0}
{"id": "eqasc_train_6991", "prediction": "all x.((Animal(x) & Pollution(x)) -> KilledEveryDay(x))", "score": 0}
{"id": "eqasc_train_6992", "prediction": "all x.((Car(x) & Uses(x,y)) -> KillsAnimalsEveryDay(y))", "score": 0}
{"id": "eqasc_train_6993", "prediction": "all x.((Vodge(x) & TopEuropeanCarBrand(x)) -> SoldInAmerica(x))", "score": 0}
{"id": "eqasc_train_6994", "prediction": "all x.(Volkswagen(x) -> CausesPollution(x))", "score": 0}
{"id": "eqasc_train_6995", "prediction": "all x.(EnvironmentalPollution(x) -> MoreIllHealth(x))", "score": 0}
{"id": "eqasc_train_6996", "prediction": "all x.((Car(x) & Uses(x)) -> MoreIllHealth(x))", "score": 0}
{"id": "eqasc_train_6997", "prediction": "all x.(Pollution(x) -> DamagedExcessOfContaminants(x))", "score": 0}
{"id": "eqasc_train_6998", "prediction": "all x y.((Car(x) & Environment(y)) -> (Damages(x,y) & CausesExcessOfContaminants(x)))", "score": 0}
{"id": "eqasc_train_6999", "prediction": "all x.((Car(x) & HarmfulEmissions(x)) -> GiantHolesInOzoneLayer(x))", "score": 0}
{"id": "eqasc_train_7000", "prediction": "all x y.((Pollution(x) & Ozone(y)) -> ResponsibleForHoles(x,y))", "score": 0}
{"id": "eqasc_train_7001", "prediction": "all x.(AcidRain(x) -> CausedByPollution(x))", "score": 0}
{"id": "eqasc_train_7002", "prediction": "all x.(Car(x) -> CausesAcidRain(x))", "score": 0}
{"id": "eqasc_train_7003", "prediction": "all x.((Car(x) & Uses(x)) -> MajorThreatToHealth(x))", "score": 0}
{"id": "eqasc_train_7004", "prediction": "all x.(ToyotaCar(x) -> (CarForPast(x) & CarForFuture(x)))", "score": 0}
{"id": "eqasc_train_7005", "prediction": "all x.(Toyota(x) -> CausesPollution(x))", "score": 0}
{"id": "eqasc_train_7006", "prediction": "all x y.((MuscleContraction(x) & Sperm(y) & PropelsFromEpididymes(x,y)) -> Ejaculation(x))", "score": 0}
{"id": "eqasc_train_7007", "prediction": "all x y.((MuscleContraction(x) & MaleGamete(y) & FromEpididyme(x,y)) -> Ejaculation(x))", "score": 0}
{"id": "eqasc_train_7008", "prediction": "all x.((Men(x) & Orgasm(x)) -> (CirculatesInEjaculationOfSemen(x) & ContainsMillionsOfSsperm(x)))", "score": 0}
{"id": "eqasc_train_7009", "prediction": "all x.((Men(x) & ClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxClimaxCli", "score": -1}
{"id": "eqasc_train_7010", "prediction": "all x.(Ejaculation(x) -> AllowsReproduction(x))", "score": 0}
{"id": "eqasc_train_7011", "prediction": "all x y.((PropellingSspermFromEpididymes(x) & Male(y)) -> AllowsReproduction(x,y))", "score": 0}
{"id": "eqasc_train_7012", "prediction": "all x.(Ejaculation(x) -> ExpulsionOfSemen(x))", "score": 0}
{"id": "eqasc_train_7013", "prediction": "all x y.((ExpulsionOfSemen(x) & MuscleContractions(y) & PropelsSpore(y,x)) -> Epididyme(y))", "score": 0}
{"id": "eqasc_train_7014", "prediction": "all x.(MuscleContraction(x) -> CausesEjaculation(x))", "score": 0}
{"id": "eqasc_train_7015", "prediction": "all x.(Bacteria(x) -> CausesEpidymitis(x))", "score": 0}
{"id": "eqasc_train_7016", "prediction": "all x.((Ssperm(x) & InhibitedByBacteria(x)) -> Ejaculation(x))", "score": 0}
{"id": "eqasc_train_7017", "prediction": "all x.((MuscleContractions(x) & MaleGamete(y)) -> Ejaculation(x))", "score": 0}
{"id": "eqasc_train_7018", "prediction": "all x y z.((Ejaculation(x) & MusclesAround(y,z) & ProstateGlands(z) & Penis(z)) -> Contracts(x))", "score": 0}
{"id": "eqasc_train_7019", "prediction": "all x y.((MusclesAroundProstateGyne(x) & Contract(x)) -> PropelledFromEpidiymes(y))", "score": 0}
{"id": "eqasc_train_7020", "prediction": "all x.(Ejaculation(x) -> SympatheticFunction(x))", "score": 0}
{"id": "eqasc_train_7021", "prediction": "all x y.((SympatheticFunction(x) & MuscleContractions(y) & PropelsSpore(x,y)) -> FromEpididymes(x))", "score": 0}
{"id": "eqasc_train_7022", "prediction": "all x.(Egg(x) -> FertilizedBySsperm(x))", "score": 0}
{"id": "eqasc_train_7023", "prediction": "all x.(Egg(x) -> FertilizedAfterEjaculation(x))", "score": 0}
{"id": "eqasc_train_7024", "prediction": "all x.((MaleOrgasm(x) & Ejaculation(x)) -> Inhibited(x))", "score": 0}
{"id": "eqasc_train_7025", "prediction": "all x.((Male(x) & HasOrgasm(x)) -> MuscleContractionsProperSpermFromEpididymes(x))", "score": 0}
{"id": "eqasc_train_7026", "prediction": "all x.(Flower(x) -> AttractsAnimalPollinators(x))", "score": 0}
{"id": "eqasc_train_7027", "prediction": "all x.((Insect(x) | Bat(x) | Bird(x) | Animal(x)) -> Pollinator(x))", "score": 0}
{"id": "eqasc_train_7028", "prediction": "all x y.((Flower(x) & Bird(y)) -> AttractsForPollination(x,y))", "score": 0}
{"id": "eqasc_train_7029", "prediction": "all x y.((Flower(x) & Bee(y)) -> Attracts(x,y))", "score": 0}
{"id": "eqasc_train_7030", "prediction": "all x y.((Flower(x) & Insect(y)) -> Attracts(x,y))", "score": 0}
{"id": "eqasc_train_7031", "prediction": "all x.(Flower(x) -> AttractsBees(x))", "score": 0}
{"id": "eqasc_train_7032", "prediction": "(all x.(Insect(x) -> CommonPollinators(x)) & all y.(Bee(y) -> CommonPollinators(y)))", "score": 0}
{"id": "eqasc_train_7033", "prediction": "all x y.((Flower(x) & Bee(y)) -> Attracts(x,y))", "score": 0}
{"id": "eqasc_train_7034", "prediction": "all x y.((Flower(x) & Bird(y)) -> Attracts(x,y))", "score": 0}
{"id": "eqasc_train_7035", "prediction": "all x.(Gladioluse(x) -> (SpectacularCutFlower(x) & Flowers(x)))", "score": 0}
{"id": "eqasc_train_7036", "prediction": "all x.(Gladioluse(x) -> AttractsPollinators(x))", "score": 0}
{"id": "eqasc_train_7037", "prediction": "all x.((Animal(x) & (Butterfly(x) | Honeybee(x) | Wasp(x) | Moth(x) | Mouse(x))) -> PollinatesPlants(x))", "score": 0}
{"id": "eqasc_train_7038", "prediction": "all x y.((Flower(x) & Mouse(y)) -> Attracts(x,y))", "score": 0}
{"id": "eqasc_train_7039", "prediction": "all x.((Animal(x) & RequiresAir(x)) -> Survival(x))", "score": 0}
{"id": "eqasc_train_7040", "prediction": "all x.(Oxygen(x) -> InAir(x))", "score": 0}
{"id": "eqasc_train_7041", "prediction": "all x.(Animal(x) -> NeedsOxygenForSurvival(x))", "score": 0}
{"id": "eqasc_train_7042", "prediction": "all x y.((Animal(x) & Plant(y)) -> (BreathedIn(x,y) & RestoredToAir(x,y)))", "score": 0}
{"id": "eqasc_train_7043", "prediction": "all x.(Animal(x) -> ReliesOnPlantsForSurvival(x))", "score": 0}
{"id": "eqasc_train_7044", "prediction": "(-Atmosphere(Moon) & -Air(Moon))", "score": 0}
{"id": "eqasc_train_7045", "prediction": "all x.((Animal(x) & Moon(y) & -SurvivesOn(x,y)) -> -SurvivesWithoutAssistance(x,y))", "score": 0}
{"id": "eqasc_train_7046", "prediction": "all x.(Animal(x) -> RequiresOxygenForBreathing(x))", "score": 0}
{"id": "eqasc_train_7047", "prediction": "all x.(Mammal(x) -> RequiresBreathingForSurvival(x))", "score": 0}
{"id": "eqasc_train_7048", "prediction": "all x.(Air(x) -> ImportantComponent(x))", "score": 0}
{"id": "eqasc_train_7049", "prediction": "all x.(Animal(x) -> RequiresOxygenForSurvival(x))", "score": 0}
{"id": "eqasc_train_7050", "prediction": "all x.((Animal(x) & RequiresOxygen(x)) -> Survival(x))", "score": 0}
{"id": "eqasc_train_7051", "prediction": "all x.(LongTermSurvival(x) -> DependsOnOutsideAir(x))", "score": 0}
{"id": "eqasc_train_7052", "prediction": "all x.(AnimalLongTermSurvival(x) -> RequiresBreathing(x))", "score": 0}
{"id": "eqasc_train_7053", "prediction": "all x.(Animal(x) -> UsesOxygenToBreathe(x))", "score": 0}
{"id": "eqasc_train_7054", "prediction": "all x.(AirRequiredForBreathing(x) -> Breathing(x))", "score": 0}
{"id": "eqasc_train_7055", "prediction": "all x y.((Animal(x) & Lung(y)) -> (RequiresLungs(x,y) & Breathes(x,y) & Survives(x,y)))", "score": 0}
{"id": "eqasc_train_7056", "prediction": "all x.(Air(x) -> (Nitrogen(x) & Oxygen(x)))", "score": 0}
{"id": "eqasc_train_7057", "prediction": "all x.(Animal(x) -> (RequiresOxygen(x) & RequiresNitrogen(x)))", "score": 0}
{"id": "eqasc_train_7058", "prediction": "all x.(Plant(x) -> HelpsMakeOxygenForAir(x))", "score": 0}
{"id": "eqasc_train_7059", "prediction": "all x.(Animal(x) -> RequiresPlantsForSurvival(x))", "score": 0}
{"id": "eqasc_train_7060", "prediction": "all x.(Air(x) -> (Oxygen(x) & Nitrogen(x)))", "score": 0}
{"id": "eqasc_train_7061", "prediction": "all x.((Animal(x) & RequiresOxygen(x) & RequiresNitrogen(x)) -> Survival(x))", "score": 0}
{"id": "eqasc_train_7062", "prediction": "all x.((Oxygen(x) & Air(x) & Breathes(x)) -> ProducedByPlants(x))", "score": 0}
{"id": "eqasc_train_7063", "prediction": "all x y.((Animal(x) & Plant(y)) -> RequiresToSurvive(x,y))", "score": 0}
{"id": "eqasc_train_7064", "prediction": "all x.(Flagella(x) -> HelpsProkaryotesMove(x))", "score": 0}
{"id": "eqasc_train_7065", "prediction": "all x.(Prokaryote(x) -> Unicellular(x))", "score": 0}
{"id": "eqasc_train_7066", "prediction": "all x.(UnicellularOrganism(x) -> MovesWithFlagella(x))", "score": 0}
{"id": "eqasc_train_7067", "prediction": "all x y.((Flagella(x) & Bacteria(y)) -> HelpsMove(x,y))", "score": 0}
{"id": "eqasc_train_7068", "prediction": "exists x.(Species(x) & SwimsByFlagella(x))", "score": 0}
{"id": "eqasc_train_7069", "prediction": "all x y.((Prokaryote(x) & Bacteria(y)) -> MovesBySwimming(x,y))", "score": 0}
{"id": "eqasc_train_7070", "prediction": "all x.((Cilia(x) | Flagella(x)) -> Microtubules(x))", "score": 0}
{"id": "eqasc_train_7071", "prediction": "all x y.((Microtubule(x) & Prokaryote(y)) -> HelpsMove(x,y))", "score": 0}
{"id": "eqasc_train_7072", "prediction": "all x.(Flagella(x) -> (ElongatedCilia(x) & (MovesLikeWhip(x) | MovesLikeTail(x))))", "score": 0}
{"id": "eqasc_train_7073", "prediction": "all x.(Cilia(x) -> HelpsProkaryotesMove(x))", "score": 0}
{"id": "eqasc_train_7074", "prediction": "all x.(Bacteria(x) -> ProkaryoteCell(x))", "score": 0}
{"id": "eqasc_train_7075", "prediction": "all x y.((Flagella(x) & Bacteria(y)) -> HelpsMove(x,y))", "score": 0}
{"id": "eqasc_train_7076", "prediction": "all x.(Cilia(x) -> ShortFlagella(x))", "score": 0}
{"id": "eqasc_train_7077", "prediction": "all x y.((Cilia(x) & Prokaryote(y)) -> HelpsMove(x,y))", "score": 0}
{"id": "eqasc_train_7078", "prediction": "all x.(Flagella(x) -> (LongFilm(x) & MadeUpOfProteinFlagellin(x)))", "score": 0}
{"id": "eqasc_train_7079", "prediction": "all x.(LongFilm(x) -> HelpsProkaryotesMove(x))", "score": 0}
{"id": "eqasc_train_7080", "prediction": "all x.(Flagella(x) -> HairLikeProjectionsFromSurfaceOfCells(x))", "score": 0}
{"id": "eqasc_train_7081", "prediction": "all x y.((Cell(x) & Prokaryote(y)) -> HairLikeProjectionsFromSurface(x,y))", "score": 0}
{"id": "eqasc_train_7082", "prediction": "all x.((Flagella(x) & Cilina(x)) -> SimilarStructure(x))", "score": 0}
{"id": "eqasc_train_7083", "prediction": "all x y.((Cilia(x) & Prokaryote(y)) -> HelpsMove(x,y))", "score": 0}
{"id": "eqasc_train_7084", "prediction": "all x.(Microtubule(x) -> HelpsProkaryotesMove(x))", "score": 0}
{"id": "eqasc_train_7085", "prediction": "all x.(Cilia(x) -> HelpsInMovement(x))", "score": 0}
{"id": "eqasc_train_7086", "prediction": "all x.(Flagella(x) -> ComposedOfProtein(x))", "score": 0}
{"id": "eqasc_train_7087", "prediction": "all x y.((ProteinHelpProkaryote(x) & Prokaryote(y)) -> Moves(x,y))", "score": 0}
{"id": "eqasc_train_7088", "prediction": "all x.(Cilia(x) -> (StructurallySame(x) & ShortFlagella(x)))", "score": 0}
{"id": "eqasc_train_7089", "prediction": "all x.(Prokaryote(x) -> HasCilia(x))", "score": 0}
{"id": "eqasc_train_7090", "prediction": "all x.(Ssperm(x) -> HasFlagella(x))", "score": 0}
{"id": "eqasc_train_7091", "prediction": "all x y.((Ssperm(x) & Prokaryote(y)) -> CanHelpMove(x,y))", "score": 0}
{"id": "eqasc_train_7092", "prediction": "all x y z.((Cavern(x) & CarbonicAcid(y) & Groundwater(z) & SeepsThroughRockAndDissolvesLimestone(x)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_train_7093", "prediction": "all x.(Caves(x) -> (ErosionByAcidSolutions(x) & Forms(x)))", "score": 0}
{"id": "eqasc_train_7094", "prediction": "all x.(Cave(x) -> MadeByChemicalsInGroundwater(x))", "score": 0}
{"id": "eqasc_train_7095", "prediction": "all x.((CarbonDioxide(x) & DissolvedInRainwater(x)) -> FormsCarbonicAcid(x))", "score": 0}
{"id": "eqasc_train_7096", "prediction": "all x y.((Cavern(x) & CarbonDioxide(y) & CarbonicAcid(z)) -> MadeFromDissolvingInto(x,y,z))", "score": 0}
{"id": "eqasc_train_7097", "prediction": "all x.((CarbonDioxide(x) & InWater(x)) -> CreatesCarbonicAcid(x))", "score": 0}
{"id": "eqasc_train_7098", "prediction": "all x y z.((Cavern(x) & CarbonDioxide(y) & Groundwater(z) & SeepsThroughRockAndDissolvesLimestone(x)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_train_7099", "prediction": "all x.(Cavern(x) -> (EternalRoom(x) & CharacterizedBy(x)))", "score": 0}
{"id": "eqasc_train_7100", "prediction": "all x y z.((Room(x) & CarbonicAcid(y) & Groundwater(z) & SeepsThroughRockAndDissolvesLimestone(x)) -> FormsEvergreenRooms(x))", "score": 0}
{"id": "eqasc_train_7101", "prediction": "all x.((UndergroundCave(x) & UndergroundCavern(x)) -> ExcitingAdventure(x))", "score": 0}
{"id": "eqasc_train_7102", "prediction": "all x y.((UndergroundCave(x) & CarbonicAcid(y) & SeepsThroughRock(x) & DissolvesLimestone(x)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_train_7103", "prediction": "all x.(Limestone(x) -> (GreyRock(x) & MadeOfCalcite(x)))", "score": 0}
{"id": "eqasc_train_7104", "prediction": "all x.((Cavern(x) & CalciteDissolved(x)) -> Formed(x))", "score": 0}
{"id": "eqasc_train_7105", "prediction": "all x.(LimestoneCave(x) -> (AcidsAttack(x) & DissolveCalcite(x)))", "score": 0}
{"id": "eqasc_train_7106", "prediction": "all x.(Cavern(x) -> (FormedFromLimestone(x) & FormedFromLimestone(x)))", "score": 0}
{"id": "eqasc_train_7107", "prediction": "all x.((Water(x) & CarbonDioxide(x)) -> CarbonicAcid(x))", "score": 0}
{"id": "eqasc_train_7108", "prediction": "all x y.((CarbonDioxide(x) & Groundwater(y)) -> CreatesCaverns(x,y))", "score": 0}
{"id": "eqasc_train_7109", "prediction": "all x.((Cave(x) & ContainsConnectingRooms(x)) -> Cavern(x))", "score": 0}
{"id": "eqasc_train_7110", "prediction": "all x.(Cave(x) -> (FormedByCarbonicAcid(x) & SeepsThroughRock(x) & DissolvesLimestone(x)))", "score": 0}
{"id": "eqasc_train_7111", "prediction": "all x.(Cave(x) -> Secret(x))", "score": 0}
{"id": "eqasc_train_7112", "prediction": "all x y z.((HuntedCave(x) & CarbonicAcid(y) & Groundwater(z) & SeepsThroughRockAndDissolvesLimestone(x)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_train_7113", "prediction": "all x y.((PlantsTrees(x) & Ecosystem(y)) -> PositiveImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_7114", "prediction": "all x.(PlantsTrees(x) -> (PositiveImpactOnOrganisms(x) & PositiveImpactOnHabitat(x)))", "score": 0}
{"id": "eqasc_train_7115", "prediction": "exists x.(Tree(x) & Maple(x))", "score": 0}
{"id": "eqasc_train_7116", "prediction": "all x y.((PlantsMaple(x) & Ecosystem(y)) -> PositiveImpact(x,y))", "score": 0}
{"id": "eqasc_train_7117", "prediction": "all x.(Ecosystem(x) -> ContainsManyHabitats(x))", "score": 0}
{"id": "eqasc_train_7118", "prediction": "all x y.((PlantsTrees(x) & Habitat(y)) -> PositiveImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_7119", "prediction": "all x.(Tree(x) -> ProducesOxygen(x))", "score": 0}
{"id": "eqasc_train_7120", "prediction": "all x.(Oxygen(x) -> PositiveImpactOnEcosystem(x))", "score": 0}
{"id": "eqasc_train_7121", "prediction": "all x.((Squirrel(x) & ImportantJob(x)) -> PlantTrees(x))", "score": 0}
{"id": "eqasc_train_7122", "prediction": "all x.(Squirrel(x) -> PositiveEffectOnEcosystem(x))", "score": 0}
{"id": "eqasc_train_7123", "prediction": "all x y.((DestructionOfTrees(x) & PollutionOfAir(y)) -> CutsWithPace(x))", "score": 0}
{"id": "eqasc_train_7124", "prediction": "all x y.((AirPollution(x) & Ecosystem(y)) -> StopsPositiveEffect(x,y))", "score": 0}
{"id": "eqasc_train_7125", "prediction": "all x.(Human(x) -> LivesInEcosystems(x))", "score": 0}
{"id": "eqasc_train_7126", "prediction": "all x y.((PlantsTrees(x) & Human(y)) -> PositiveImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_7127", "prediction": "all x y.((ForestEcosystem(x) & (Tree(y) | Microbe(y))) -> RemovesPollutants(x,y))", "score": 0}
{"id": "eqasc_train_7128", "prediction": "all x.(PlantsTrees(x) -> RemovesPollutants(x))", "score": 0}
{"id": "eqasc_train_7129", "prediction": "all x.(Bird(x) -> ImportantComponentOfEcosystems(x))", "score": 0}
{"id": "eqasc_train_7130", "prediction": "all x y.((PlantsTrees(x) & Bird(y)) -> PositiveImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_7131", "prediction": "all x.(WildlifeEcosystem(x) -> Advantageous(x))", "score": 0}
{"id": "eqasc_train_7132", "prediction": "all x.(PlantsTrees(x) -> PositiveImpactOnWildlife(x))", "score": 0}
{"id": "eqasc_train_7133", "prediction": "all x.(Forest(x) -> PineTree(x))", "score": 0}
{"id": "eqasc_train_7134", "prediction": "all x y.((Pine(x) & Ecosystem(y)) -> PositiveImpact(x,y))", "score": 0}
{"id": "eqasc_train_7135", "prediction": "all x.(IndividualForest(x) -> ComplexEcosystem(x))", "score": 0}
{"id": "eqasc_train_7136", "prediction": "all x y.((PlantsTrees(x) & Forest(y)) -> PositiveImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_7137", "prediction": "all x.(Biodiversity(x) -> EncouragesHealthierEcosystem(x))", "score": 0}
{"id": "eqasc_train_7138", "prediction": "all x.(PlantingTrees(x) -> PositiveImpactOnBiodiversity(x))", "score": 0}
{"id": "eqasc_train_7139", "prediction": "all x.(Tunicate(x) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_7140", "prediction": "all x.(SeaSquirt(x) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_7141", "prediction": "all x.(SexualReproduction(x) -> (Requires(x,male) & Requires(x,female)))", "score": 0}
{"id": "eqasc_train_7142", "prediction": "all x y.((Tunicate(x) & Gametes(y)) -> ReproducesUsing(x,y))", "score": 0}
{"id": "eqasc_train_7143", "prediction": "all x.(Tunicate(x) -> (SeaCreature(x) & EncasedByToughMembranes(x) & ReminiscentOfTunics(x)))", "score": 0}
{"id": "eqasc_train_7144", "prediction": "all x y.((SeaCreature(x) & EncasedByToughMembrane(x)) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_7145", "prediction": "all x.(Bulbs(x) -> (ReproducesSexually(x) | ReproducesNonSexually(x)))", "score": 0}
{"id": "eqasc_train_7146", "prediction": "all x.(Bulb(x) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_7147", "prediction": "all x.(SeaSquirt(x) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_7148", "prediction": "all x y.((ImmuneResponse(x) & Pathogen(y) & ProducesMemoryCells(x,y)) -> ActiveImmunity(x))", "score": 0}
{"id": "eqasc_train_7149", "prediction": "all x.(Pathogen(x) -> (Disease(x) & KillsInsects(x)))", "score": 0}
{"id": "eqasc_train_7150", "prediction": "all x y.((ActiveImmunity(x) & Insect(y)) -> PreventsFromBeingTamed(x,y))", "score": 0}
{"id": "eqasc_train_7151", "prediction": "all x.(MemoryCell(x) -> PersistsInCirculation(x))", "score": 0}
{"id": "eqasc_train_7152", "prediction": "all x.(ActiveImmunity(x) -> PersistsInDiverseDifferences(x))", "score": 0}
{"id": "eqasc_train_7153", "prediction": "all x.(Vaccination(x) -> ActiveAcquiredImmunity(x))", "score": 0}
{"id": "eqasc_train_7154", "prediction": "all x y.((Vaccination(x) & Pathogen(y)) -> InvolvesBodyResponseTo(x,y)) ProducesMemoryCells(x))", "score": -1}
{"id": "eqasc_train_7155", "prediction": "all x.(WeakerImmuneSystem(x) -> MoreLikelyToGetSickFromContaminatedFoods(x))", "score": 0}
{"id": "eqasc_train_7156", "prediction": "all x y.((MemoryCell(x) & Person(y)) -> HelpsKeepFromGettingSick(x,y))", "score": 0}
{"id": "eqasc_train_7157", "prediction": "all x.(MemoryCell(x) -> ImmunologicalMemoryBase(x))", "score": 0}
{"id": "eqasc_train_7158", "prediction": "all x y z.((ActiveImmunity(x) & ImmuneResponseToPathogen(y) & Pathogen(z) & ProducesBaseOfImmunologicalMemory(x,z)) -> ImmuneResponseToPathogen(x))", "score": 0}
{"id": "eqasc_train_7159", "prediction": "all x y.((IntracellularPathogen(x) & CellMediatedImmuneResponse(y)) -> EvadesActivation(x,y))", "score": 0}
{"id": "eqasc_train_7160", "prediction": "all x y.((IntracellularPathogen(x) & Cell(y) & EvadesActivation(x,y)) -> ActiveImmunity(x))", "score": 0}
{"id": "eqasc_train_7161", "prediction": "all x.(Pathogen(x) -> (Germ(x) & CausesDisease(x)))", "score": 0}
{"id": "eqasc_train_7162", "prediction": "all x y.((ImmuneResponse(x) & Germ(y) & ProducesMemoryCells(x,y)) -> ActiveImmunity(x))", "score": 0}
{"id": "eqasc_train_7163", "prediction": "all x.((Parasite(x) & CausesHarm(x)) -> Pathogen(x))", "score": 0}
{"id": "eqasc_train_7164", "prediction": "all x.((Parasite(x) & ProducesMemoryCells(x)) -> ActiveImmunityResults(x))", "score": 0}
{"id": "eqasc_train_7165", "prediction": "all x y z.((VaccinationResult(x) & ImmuneResponseToPathogen(y) & Pathogen(z) & ProducesMemoryCells(x,z)) -> ImmuneResponseToPathogen(x,y,z))", "score": 0}
{"id": "eqasc_train_7166", "prediction": "all x.(Insulin(x) -> (Hydrogen(x) & HelpsAbsorbSugar(x)))", "score": 0}
{"id": "eqasc_train_7167", "prediction": "all x.(Diabetes(x) -> (ReductionInIndividual(x) | ResistanceToIndividual(x)))", "score": 0}
{"id": "eqasc_train_7168", "prediction": "all x.(Diabetes(x) -> (ReductionOfHormone(x) & HelpsAbsorbSugar(x)))", "score": 0}
{"id": "eqasc_train_7169", "prediction": "all x.(Insulin(x) -> (Hydrogen(x) & HelpsAbsorbGlucose(x)))", "score": 0}
{"id": "eqasc_train_7170", "prediction": "all x.(Diabetes(x) -> LackOfInsulin(x))", "score": 0}
{"id": "eqasc_train_7171", "prediction": "all x.(Diabetes(x) -> (LackOfHydrogen(x) & HelpsAbsorbSugar(x)))", "score": 0}
{"id": "eqasc_train_7172", "prediction": "all x.(HelpsIndividualRegulatesBloodSugar(x) -> HelpsIndividualRegulatesBloodSugar(x))", "score": 0}
{"id": "eqasc_train_7173", "prediction": "all x y.((Sugar(x) & Insulin(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_train_7174", "prediction": "all x.((InsulinDeficiency(x) | NonResponsiveToIndividual(x)) -> CauseOfDiabetes(x))", "score": 0}
{"id": "eqasc_train_7175", "prediction": "all x y.((Hormone(x) & HelpsAbsorbSugar(x,y) & Blood(y)) -> Diabetes(x))", "score": 0}
{"id": "eqasc_train_7176", "prediction": "all x.((Individual(x) & ProducedByPancreas(x)) -> Insulin(x))", "score": 0}
{"id": "eqasc_train_7177", "prediction": "all x y.((Pancreas(x) & Hormone(y)) -> ProducesHelpsAbsorbSugar(x,y))", "score": 0}
{"id": "eqasc_train_7178", "prediction": "exists x.(Tissue(x) & (Muscle(x) | Muscle(x)) & RequiresIndole(x))", "score": 0}
{"id": "eqasc_train_7179", "prediction": "all x y.((Insulin(x) & Muscle(y)) -> HelpsGetSugar(x,y))", "score": 0}
{"id": "eqasc_train_7180", "prediction": "all x.((Insulin(x) | Glucagon(x)) -> ProducedByPancreas(x))", "score": 0}
{"id": "eqasc_train_7181", "prediction": "all x y.((Pancreas(x) & Blood(y)) -> AbsorbsSugar(x,y))", "score": 0}
{"id": "eqasc_train_7182", "prediction": "all x.(Hormone(x) -> (ControlsCellActivities(x) & ImportantForHomeostasis(x)))", "score": 0}
{"id": "eqasc_train_7183", "prediction": "all x.(Homeostasis(x) -> ChemicalEquilibrium(x))", "score": 0}
{"id": "eqasc_train_7184", "prediction": "all x.(Hormone(x) -> ChemicalEquilibrium(x))", "score": 0}
{"id": "eqasc_train_7185", "prediction": "all x y.((Hormone(x) & CellActivity(y)) -> (Controls(x,y) & ImportantInChemicalEquilibrium(x)))", "score": 0}
{"id": "eqasc_train_7186", "prediction": "all x.(Illness(x) -> DelayInHomeostasis(x))", "score": 0}
{"id": "eqasc_train_7187", "prediction": "all x.(Hormone(x) -> (ControlsManyCellActivities(x) & ImportantForIllness(x)))", "score": 0}
{"id": "eqasc_train_7188", "prediction": "all x.(Homeostasis(x) -> MediatedByHormones(x))", "score": 0}
{"id": "eqasc_train_7189", "prediction": "all x.(Homeostasis(x) -> MediatesCellActivities(x))", "score": 0}
{"id": "eqasc_train_7190", "prediction": "all x.(GrowthHormone(x) -> (Important(x) & DecreasesWithAging(x)))", "score": 0}
{"id": "eqasc_train_7191", "prediction": "all x y.((Hormone(x) & CellAging(y)) -> Affects(x,y))", "score": 0}
{"id": "eqasc_train_7192", "prediction": "all x.(TemperatureRegulation(x) -> Homeostasis(x))", "score": 0}
{"id": "eqasc_train_7193", "prediction": "all x.(Hormone(x) -> ImportantForTemperatureRegulation(x))", "score": 0}
{"id": "eqasc_train_7194", "prediction": "all x y.((Hormone(x) & CellActivity(y)) -> (Controls(x,y) & ImportantForChemicalEquilibrium(x)))", "score": 0}
{"id": "eqasc_train_7195", "prediction": "all x y.((Hormone(x) & Bloodstream(y)) -> TravelsToCells(x,y))", "score": 0}
{"id": "eqasc_train_7196", "prediction": "all x y.((Bloodstream(x) & Molecule(y)) -> AllowsTravel(x,y))", "score": 0}
{"id": "eqasc_train_7197", "prediction": "all x.(Homeostasis(x) -> CentralThemeOfPhysiology(x))", "score": 0}
{"id": "eqasc_train_7198", "prediction": "all x y.((Hormone(x) & CellActivity(y)) -> (Controls(x,y) & ImportantToTheme(x,y)))", "score": 0}
{"id": "eqasc_train_7199", "prediction": "all x y.((LivingThing(x) & LivingThing(y) & RecessiveTreatment(x,y)) -> CausesOffspringToHaveRecessiveTreatment(x,y))", "score": 0}
{"id": "eqasc_train_7200", "prediction": "all x.(Freckle(x) -> AutosomalRecessiveTrait(x))", "score": 0}
{"id": "eqasc_train_7201", "prediction": "all x y.((LivingThing(x) & LivingThing(y) & HasFreckles(x,y)) -> HasFreckles(x,y))", "score": 0}
{"id": "eqasc_train_7202", "prediction": "exists x.(Caracteristic(x) & Recessive(x))", "score": 0}
{"id": "eqasc_train_7203", "prediction": "all x y.((LivingThing(x) & LivingThing(y) & BlueEyes(x)) -> BlueEyesOffspring(x))", "score": 0}
{"id": "eqasc_train_7204", "prediction": "all x.(WhiteEyeColor(x) -> RecessiveTrait(x))", "score": 0}
{"id": "eqasc_train_7205", "prediction": "all x y.((LivingThing(x) & LivingThing(y) & WhiteEyes(x)) -> WhiteEyes(y))", "score": 0}
{"id": "eqasc_train_7206", "prediction": "all x y.((LivingThing(x) & LivingThing(y) & WhiteEyeColor(x) & Crossing(x,y)) -> WhiteEyeColorOffspring(x))", "score": 0}
{"id": "eqasc_train_7207", "prediction": "all x.(AutosomalRecessive(x) -> PatternOfInheritanceOfGeneticTrait(x))", "score": 0}
{"id": "eqasc_train_7208", "prediction": "all x y.((Offspring(x) & Parent(y)) -> HasRecessiveGenetics(x,y))", "score": 0}
{"id": "eqasc_train_7209", "prediction": "all x.(Albinism(x) -> (InHumans(x) & SimpleRecessiveTrait(x)))", "score": 0}
{"id": "eqasc_train_7210", "prediction": "all x.(Albino(x) -> (Man(x) & Woman(x) & OffspringAlbino(x)))", "score": 0}
{"id": "eqasc_train_7211", "prediction": "all x.(MutualTreatment(x) -> Recessive(x))", "score": 0}
{"id": "eqasc_train_7212", "prediction": "all x y.((LivingThing(x) & LivingThing(y) & CrossingWithMutuantTreatment(x,y)) -> CausesOffspringToHaveMutuantTreatment(x,y))", "score": 0}
{"id": "eqasc_train_7213", "prediction": "all x.((Parent(x) & HasFreckles(x)) -> MayHaveOffspringWith(x,Freckles))", "score": 0}
{"id": "eqasc_train_7214", "prediction": "all x y.((Organism(x) & Organism(y) & HasRecessiveTreatment(x,y)) -> CausesOffspringToHaveRecessiveTreatment(x,y))", "score": 0}
{"id": "eqasc_train_7215", "prediction": "all x y.((LivingThing(x) & LivingThing(y) & CrossingWithFreckles(x,y)) -> CausesOffspringToHaveFreckles(x,y))", "score": 0}
{"id": "eqasc_train_7216", "prediction": "all x.((EarLobs(x) & Attached(x)) -> RecessiveTrait(x))", "score": 0}
{"id": "eqasc_train_7217", "prediction": "all x y.((LivingThing(x) & LivingThing(y) & HasAttachedEarLobs(x,y)) -> HasAttachedEarLobs(x,y))", "score": 0}
{"id": "eqasc_train_7218", "prediction": "all x y.((LivingThing(x) & LivingThing(y) & CrossingWithFreckles(x,y)) -> HasFrecklesOffspring(x))", "score": 0}
{"id": "eqasc_train_7219", "prediction": "all x.(SexHormone(x) -> (ChemicalMessager(x) & ControlsSexualDevelopment(x) & ControlsReproduction(x)))", "score": 1}
{"id": "eqasc_train_7220", "prediction": "all x.(Estrogen(x) -> FemaleSexHormone(x))", "score": 0}
{"id": "eqasc_train_7221", "prediction": "all x.(Estrogen(x) -> (ControlsSexualDevelopment(x) & ControlsReproduction(x)))", "score": 0}
{"id": "eqasc_train_7222", "prediction": "all x.(Androgen(x) -> MaleSexHormone(x))", "score": 0}
{"id": "eqasc_train_7223", "prediction": "all x.(Androgen(x) -> (ChemicalMessager(x) & ControlsSexualDevelopment(x) & ControlsReproduction(x)))", "score": 0}
{"id": "eqasc_train_7224", "prediction": "all x.(SexHormone(x) -> ControlsSexualDevelopment(x))", "score": 0}
{"id": "eqasc_train_7225", "prediction": "all x.(SexHormone(x) -> ChemicalMessager(x))", "score": 1}
{"id": "eqasc_train_7226", "prediction": "all x y z.((ChemicalMessenger(x) & NerveBranche(y) & NerveBranche(z)) -> CarriesSignals(x,y,z))", "score": 0}
{"id": "eqasc_train_7227", "prediction": "all x.(SexHormone(x) -> (CarriesSignals(x) & ControlsSexualDevelopment(x) & ControlsReproduction(x)))", "score": 0}
{"id": "eqasc_train_7228", "prediction": "all x.(Androgen(x) -> (ChemicalMessager(x) & ControlsSexualDevelopment(x) & ControlsReproduction(x)))", "score": 0}
{"id": "eqasc_train_7229", "prediction": "all x.(Androgen(x) -> ChemicalMessenger(x))", "score": 0}
{"id": "eqasc_train_7230", "prediction": "all x y.((Androgen(x) & Male(y)) -> (ControlsSexualDevelopment(x,y) & ControlsReproduction(x,y)))", "score": 0}
{"id": "eqasc_train_7231", "prediction": "all x.(Androgen(x) -> ChemicalMessenger(x))", "score": 0}
{"id": "eqasc_train_7232", "prediction": "all x.(Vertebrates(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_train_7233", "prediction": "all x.(Vertebrate(x) -> (HasBackbone(x) | HasVertebralColumn(x)))", "score": 0}
{"id": "eqasc_train_7234", "prediction": "all x.(Vertebrates(x) -> (Animal(x) & HasVertebralColumn(x)))", "score": 0}
{"id": "eqasc_train_7235", "prediction": "all x.(Human(x) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_train_7236", "prediction": "all x.(Human(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_train_7237", "prediction": "all x.(Vertebrate(x) -> HasSpinalColumn(x))", "score": 0}
{"id": "eqasc_train_7238", "prediction": "all x.(Jaw(x) -> AppearsInVertebrate(x))", "score": 0}
{"id": "eqasc_train_7239", "prediction": "all x y.((Animal(x) & Jaw(y) & HasBackbone(x,y)) -> AppearsIn(x,y))", "score": 0}
{"id": "eqasc_train_7240", "prediction": "all x.(TrunkMuscle(x) -> (AbdominalWall(x) & Thorax(x) & Backbone(x) & PelvicCavity(x)))", "score": 0}
{"id": "eqasc_train_7241", "prediction": "all x.(Vertebrates(x) -> (Animal(x) & HasTrunkMuscles(x)))", "score": 0}
{"id": "eqasc_train_7242", "prediction": "all x.(Frog(x) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_train_7243", "prediction": "all x.(Frog(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_train_7244", "prediction": "all x.(Invertebrate(x) -> (-Vertebrae(x) | -Backbone(x)))", "score": 0}
{"id": "eqasc_train_7245", "prediction": "exists x.(Animal(x) & -Vertebrae(x))", "score": 0}
{"id": "eqasc_train_7246", "prediction": "all x.(Vertebrates(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_train_7247", "prediction": "all x.(Vertebrates(x) -> (Animal(x) & SpinalColumnInSkeleton(x)))", "score": 0}
{"id": "eqasc_train_7248", "prediction": "all x.(Bird(x) -> WarmBloodedVertebrate(x))", "score": 0}
{"id": "eqasc_train_7249", "prediction": "all x.(Bird(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_train_7250", "prediction": "all x.(Human(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_train_7251", "prediction": "all x.(HighPressureSystem(x) -> CausesClearWeather(x))", "score": 0}
{"id": "eqasc_train_7252", "prediction": "all x.(Desert(x) -> (OccursInHighAtmosphericPressure(x) & InHighAtmosphericPressure(x)))", "score": 0}
{"id": "eqasc_train_7253", "prediction": "all x.(Desert(x) -> (ClearWeather(x) & ClearWeather(x)))", "score": 0}
{"id": "eqasc_train_7254", "prediction": "all x.(HighPressure(x) -> (FairWeather(x) & DryWeather(x)))", "score": 0}
{"id": "eqasc_train_7255", "prediction": "all x y.((ClearWeather(x) & DryConditions(y)) -> LeadsTo(x,y))", "score": 0}
{"id": "eqasc_train_7256", "prediction": "all x.(HighPressureArea(x) -> ProducesFairWeather(x))", "score": 0}
{"id": "eqasc_train_7257", "prediction": "all x.(FairWeather(x) -> CausesClearWeather(x))", "score": 0}
{"id": "eqasc_train_7258", "prediction": "all x.(WindyWeather(x) -> (DispersedPollution(x) & ClearedAway(x)))", "score": 0}
{"id": "eqasc_train_7259", "prediction": "all x.(HighPressureSystem(x) -> CausesPollutionToDisperse(x))", "score": 0}
{"id": "eqasc_train_7260", "prediction": "all x.((Weather(x) & Clear(x)) -> GoodVisibility(x))", "score": 0}
{"id": "eqasc_train_7261", "prediction": "all x.(HighPressureSystem(x) -> CausesGoodVisibility(x))", "score": 0}
{"id": "eqasc_train_7262", "prediction": "all x.(HighPressure(x) -> (FallingAir(x) & MinimizesCloudFormation(x)))", "score": 0}
{"id": "eqasc_train_7263", "prediction": "all x y.((FallingAirPressure(x) & Cloud(y)) -> Minimizes(x,y))", "score": 0}
{"id": "eqasc_train_7264", "prediction": "all x.(HighPressureSystem(x) -> CausesGoodVisibility(x))", "score": 0}
{"id": "eqasc_train_7265", "prediction": "all x.(HighPressureSystem(x) -> CausesGoodVisibility(x))", "score": 0}
{"id": "eqasc_train_7266", "prediction": "all x.(HighBarometricPressure(x) -> ClearWeather(x))", "score": 0}
{"id": "eqasc_train_7267", "prediction": "all x.(BarometricPressure(x) -> MakesClearWeather(x))", "score": 0}
{"id": "eqasc_train_7268", "prediction": "all x.(Sailplane(x) -> FlyInClearWeather(x))", "score": 0}
{"id": "eqasc_train_7269", "prediction": "all x.(HighPressureSystem(x) -> AllowsSailplaneToFly(x))", "score": 0}
{"id": "eqasc_train_7270", "prediction": "all x.((BermudaHighPressureSystem(x) & FrequentSummerVisitor(x)) -> HighPressure(x))", "score": 0}
{"id": "eqasc_train_7271", "prediction": "all x y.((Bermuda(x) & SomethingFrom(x,y)) -> CausesClearWeather(x))", "score": 0}
{"id": "eqasc_train_7272", "prediction": "(Fog(f) & ClearAndCalmWeather(f))", "score": 0}
{"id": "eqasc_train_7273", "prediction": "all x.(HighPressureSystem(x) -> CausesCalmWeatherConditions(x))", "score": 0}
{"id": "eqasc_train_7274", "prediction": "all x.(Cyclone(x) -> (OppositeOfHighPressure(x) | OppositeOfAnticyclone(x)))", "score": 0}
{"id": "eqasc_train_7275", "prediction": "all x.(Anticyclone(x) -> CausesClearWeather(x))", "score": 0}
{"id": "eqasc_train_7276", "prediction": "all x.(ClearWeather(x) -> CausedBySinkingAir(x))", "score": 0}
{"id": "eqasc_train_7277", "prediction": "all x.(HighPressureSystem(x) -> SinkingAir(x))", "score": 0}
{"id": "eqasc_train_7278", "prediction": "all x.(HighPressureSystem(x) -> BringsCalmWeather(x))", "score": 0}
{"id": "eqasc_train_7279", "prediction": "all x.(HighPressureSystem(x) -> MakesCleanDays(x))", "score": 0}
{"id": "eqasc_train_7280", "prediction": "all x.((BloodPhPhP) & (TooFast(x) | TooSlow(x))) -> Unbalanced(x))", "score": -1}
{"id": "eqasc_train_7281", "prediction": "all x.(Mammal(x) -> BreathesWithLungs(x))", "score": 0}
{"id": "eqasc_train_7282", "prediction": "all x.((Lungs(x) & (WorkingTooFast(x) | WorkingTooSlow(x))) -> Unbalanced(x))", "score": 0}
{"id": "eqasc_train_7283", "prediction": "all x.(AerobicActivity(x) -> (CausesDeepBreathing(x) & FastHeartRate(x)))", "score": 0}
{"id": "eqasc_train_7284", "prediction": "all x.((BloodPhP) & AerobicActivities(x)) -> Unbalanced(x))", "score": -1}
{"id": "eqasc_train_7285", "prediction": "All x.(Hyperventilating(x) -> (BreathesTooDeeply(x) & BreathesTooFast(x)))", "score": -1}
{"id": "eqasc_train_7286", "prediction": "all x.((Hyperventilating(x) & BloodPhP(x)) -> Unbalanced(x))", "score": 0}
{"id": "eqasc_train_7287", "prediction": "all x.((DyingChild(x) & (SlowRespiration(x) | LongPeriodsWithoutBreath(x))) -> CommonIn(x,DyingChild))", "score": 0}
{"id": "eqasc_train_7288", "prediction": "all x.((Respiration(x) & (TooFast(x) | TooSlow(x))) -> Unbalanced(x))", "score": 0}
{"id": "eqasc_train_7289", "prediction": "all x.(Alkalosis(x) -> BloodPHAbove(x,7))", "score": 0}
{"id": "eqasc_train_7290", "prediction": "all x.((RateOfBreathing(x) & (TooFast(x) | TooSlow(x))) -> Alkalosis(x))", "score": 0}
{"id": "eqasc_train_7291", "prediction": "all x.((HasNormalPH(x) & HumanBlood(x)) -> MaintainedAt(x,7.4))", "score": -1}
{"id": "eqasc_train_7292", "prediction": "all x.((NormalHumanBlood(x) & (TooFast(x) | TooSlow(x))) -> Unbalanced(x))", "score": 0}
{"id": "eqasc_train_7293", "prediction": "all x.((BloodPhP) & BloodPhP(x)) -> (RegulatesBindingOfOxygen(x) & RegulatesReleaseOfOxygen(x)))", "score": -1}
{"id": "eqasc_train_7294", "prediction": "all x.((CriticalForRegulatingOxygenFromHemoglobin(x) & (TooFast(x) | TooSlow(x))) -> Unbalanced(x))", "score": 0}
{"id": "eqasc_train_7295", "prediction": "all x.((BloodAcidity(x) & (TooFast(x) | TooSlow(x))) -> Unbalanced(x))", "score": 0}
{"id": "eqasc_train_7296", "prediction": "all x.(Breathing(x) -> (RegulatedToKeepAsNormalAsPh(x) & NormalAsPo2(x)))", "score": 0}
{"id": "eqasc_train_7297", "prediction": "all x y.((Breathing(x) & BloodAcidity(y)) -> Regulated(x,y))", "score": 0}
{"id": "eqasc_train_7298", "prediction": "all x.(BloodFlowRegulatedByBreathing(x) -> RegulatesBreathing(x))", "score": 0}
{"id": "eqasc_train_7299", "prediction": "all x.((Compound(x) & Unbalanced(x)) -> (Unbalanced(x) & Unstabilized(x)))", "score": 0}
{"id": "eqasc_train_7300", "prediction": "all x.((BloodPhPhP) & (TooFast(x) | TooSlow(x))) -> Unstable(x))", "score": -1}
{"id": "eqasc_train_7301", "prediction": "all x.(Pesticide(x) -> CausesPollution(x))", "score": 0}
{"id": "eqasc_train_7302", "prediction": "all x y.((Biologist(x) & Animal(y)) -> HarmsLightPollution(x,y))", "score": 0}
{"id": "eqasc_train_7303", "prediction": "all x.(Pesticide(x) -> HarmsAnimals(x))", "score": 0}
{"id": "eqasc_train_7304", "prediction": "all x.(Pesticide(x) -> MoreIllness(x))", "score": 0}
{"id": "eqasc_train_7305", "prediction": "all x.(AirPollution(x) -> (RiskOfDeath(x) & RiskOfDisease(x)))", "score": 0}
{"id": "eqasc_train_7306", "prediction": "all x.(Pesticide(x) -> (RaisesRiskOfDeath(x) & RaisesRiskOfDisease(x)))", "score": 0}
{"id": "eqasc_train_7307", "prediction": "all x.(Pesticide(x) -> (Agent(x) & UsedToControlPests(x)))", "score": 0}
{"id": "eqasc_train_7308", "prediction": "all x.((Agent(x) & ControlsPests(x)) -> CanCausePollution(x))", "score": 0}
{"id": "eqasc_train_7309", "prediction": "all x.(Pesticide(x) -> ChemicalPoison(x))", "score": 0}
{"id": "eqasc_train_7310", "prediction": "all x.(ChemicalPoison(x) -> CausesPollution(x))", "score": 0}
{"id": "eqasc_train_7311", "prediction": "all x.(AirPollution(x) -> HarmsEcosystem(x))", "score": 0}
{"id": "eqasc_train_7312", "prediction": "all x.(Pesticide(x) -> CanHarmEcosystem(x))", "score": 0}
{"id": "eqasc_train_7313", "prediction": "all x y.((Pesticide(x) & Environment(y)) -> CausesReleaseOfHarmfulSubstances(x,y))", "score": 0}
{"id": "eqasc_train_7314", "prediction": "all x.(Pollution(x) -> (HasAnimalPopulations(x) | HasPlantPopulations(x)))", "score": 0}
{"id": "eqasc_train_7315", "prediction": "all x.(Pesticide(x) -> CanHitPlantPopulations(x))", "score": 0}
{"id": "eqasc_train_7316", "prediction": "all x.((Pesticide(x) & Cranberry(x)) -> PollutesWater(x))", "score": 0}
{"id": "eqasc_train_7317", "prediction": "all x.(Cranberry(x) -> CausesPollution(x))", "score": 0}
{"id": "eqasc_train_7318", "prediction": "all x.((ThermalPollution(x) & Severe(x)) -> CanBeDismantled(x))", "score": 0}
{"id": "eqasc_train_7319", "prediction": "all x.(Pesticide(x) -> CausesDestructionOfEcosystems(x))", "score": 0}
{"id": "eqasc_train_7320", "prediction": "all x y.((Biodiversity(x) & Pole(y)) -> IncreasesFromToEquator(x,y))", "score": 0}
{"id": "eqasc_train_7321", "prediction": "all x y.((EcosystemComplexity(x) & Pole(y)) -> IncreasesFromToEquator(x,y))", "score": 0}
{"id": "eqasc_train_7322", "prediction": "all x y.((Biodiversity(x) & Habitat(y)) -> NumberOfOrganisms(x,y))", "score": 0}
{"id": "eqasc_train_7323", "prediction": "all x y z.((Organism(x) & Habitat(y) & Pole(z) & Equator(z)) -> IncreasesFromTo(x,y,z))", "score": 0}
{"id": "eqasc_train_7324", "prediction": "all x y.((Organism(x) & Habitat(y)) -> IncreasesFromPolesToEquator(x,y))", "score": 0}
{"id": "eqasc_train_7325", "prediction": "all x.(Biodiversity(x) -> DiversityOfLife(x))", "score": 0}
{"id": "eqasc_train_7326", "prediction": "all x y z.((Pole(x) & Equator(y) & DiversityOfLife(z)) -> (IncreasesFromPolesToEquator(x,z)))", "score": 0}
{"id": "eqasc_train_7327", "prediction": "all x.(SoilBiodiversity(x) -> ReflectsLivingOrganismsInSoil(x))", "score": 0}
{"id": "eqasc_train_7328", "prediction": "all x y z.((MixOfLivingOrganisms(x) & Pole(y) & Equator(z)) -> IncreasesFromTo(x,y,z))", "score": 0}
{"id": "eqasc_train_7329", "prediction": "all x y z.((EcosystemComplexity(x) & Pole(y) & Equator(z)) -> (IncreasesFromPolesToEquator(x,y,z)))", "score": 0}
{"id": "eqasc_train_7330", "prediction": "all x.(Biodiversity(x) -> (IncreasesTowardsEquator(x) & DecreasesTowardsPoles(x)))", "score": 0}
{"id": "eqasc_train_7331", "prediction": "all x y.((Biodiversity(x) & Pole(y)) -> DecreasesTowards(x,y))", "score": 0}
{"id": "eqasc_train_7332", "prediction": "all x.(Rainforest(x) -> NearEquator(x))", "score": 0}
{"id": "eqasc_train_7333", "prediction": "all x y.((Pole(x) & Rainforest(y)) -> IncreasesBiodiversity(x,y))", "score": 0}
{"id": "eqasc_train_7334", "prediction": "all x y z.((Pole(x) & Equator(y) & Complexity(z)) -> (IncreasesFromPolesToEquator(x,z) & -IncreasesFromPolesToEquator(x,y)))", "score": 0}
{"id": "eqasc_train_7335", "prediction": "all x.(Polyp(x) -> ReproducesAsexually(x))", "score": 0}
{"id": "eqasc_train_7336", "prediction": "all x.(Coral(x) -> SinglePolyp(x))", "score": 0}
{"id": "eqasc_train_7337", "prediction": "all x.(Coral(x) -> ReproducesAsexually(x))", "score": 0}
{"id": "eqasc_train_7338", "prediction": "all x.(Cnidarian(x) -> (HasBodyForm(x,medusa) & HasBodyForm(x,polyp)))", "score": 0}
{"id": "eqasc_train_7339", "prediction": "all x.(Cnidarian(x) -> CanReproduceAsexually(x))", "score": 0}
{"id": "eqasc_train_7340", "prediction": "all x.(AsexualReproduction(x) -> exists y.(Distinct(y) & OccursIn(x,y))))", "score": -1}
{"id": "eqasc_train_7341", "prediction": "all x.(Polyp(x) -> (ReproducesVariousDifferentWays(x) & VariousWays(x)))", "score": 0}
{"id": "eqasc_train_7342", "prediction": "all x.(Polyp(x) -> (BeneficialGrowth(x) & InColon(x)))", "score": 0}
{"id": "eqasc_train_7343", "prediction": "all x y.((BeneficialGrowths(x) & Colon(y)) -> ReproducesAsexually(x,y))", "score": 0}
{"id": "eqasc_train_7344", "prediction": "all x.(CoralPolyp(x) -> UnitedIntoColony(x))", "score": 0}
{"id": "eqasc_train_7345", "prediction": "all x.(CoralColony(x) -> ReproducesAsexually(x))", "score": 0}
{"id": "eqasc_train_7346", "prediction": "all x.(Reef(x) -> (BuiltBy(x,y) & TickyOrganism(y) & Polyps(y)))", "score": 0}
{"id": "eqasc_train_7347", "prediction": "all x y.((Reef(x) & Organism(y)) -> (BuiltBy(x,y) & ReproducesAsexually(y)))", "score": 0}
{"id": "eqasc_train_7348", "prediction": "all x.((Plant(x) & AsexualReproduction(x)) -> -GameteFusion(x))", "score": 0}
{"id": "eqasc_train_7349", "prediction": "all x.(Polyp(x) -> ReproducesWithoutGameteFusion(x))", "score": 0}
{"id": "eqasc_train_7350", "prediction": "all x.(Polyp(x) -> ReproducesByAsexualBadding(x))", "score": 0}
{"id": "eqasc_train_7351", "prediction": "all x.(Polyp(x) -> (Budding(x) & Reproduce(x)))", "score": 0}
{"id": "eqasc_train_7352", "prediction": "all x.(Polyp(x) -> -UsesGameteFusion(x))", "score": 0}
{"id": "eqasc_train_7353", "prediction": "all x.(Plant(x) -> (DetectsDailyCycleOfLightAndDarkness(x) & RespondsToDailyCycleOfDarkness(x)))", "score": 0}
{"id": "eqasc_train_7354", "prediction": "all x.(DiurnalCycle(x) -> (DailyCycle(x,Light) & DailyCycle(x,Darkness)))", "score": 0}
{"id": "eqasc_train_7355", "prediction": "all x.(Plant(x) -> (DetectsDiurnalCycles(x) & RespondsToDiurnalCycles(x)))", "score": 0}
{"id": "eqasc_train_7356", "prediction": "all x.(Plant(x) -> SensitiveToLight(x))", "score": 0}
{"id": "eqasc_train_7357", "prediction": "all x.((Plant(x) & SensitiveToDarkness(x)) -> SensitiveToDarkness(x))", "score": 0}
{"id": "eqasc_train_7358", "prediction": "all x.(DailyCycle(x) -> CausedByRotationOfEarth(x))", "score": 0}
{"id": "eqasc_train_7359", "prediction": "all x y.((Plant(x) & Earth(y)) -> (Detects(x,y) & RespondsToRotation(x,y)))", "score": 0}
{"id": "eqasc_train_7360", "prediction": "all x.(Flower(x) -> PlantedInBetweenFruitPlantings(x))", "score": 0}
{"id": "eqasc_train_7361", "prediction": "all x.(Flower(x) -> (DetectsLight(x) & DetectsDarkness(x)))", "score": 0}
{"id": "eqasc_train_7362", "prediction": "all x.(Bush(x) -> (DetectsAndResponsesToDailyCycleOfLightAndDarkness(x) & DailyCycleOfDarkness(x)))", "score": 0}
{"id": "eqasc_train_7363", "prediction": "all x y.((Bamboo(x) & DailyCycleOfLightAndDarkness(y)) -> (DetectsAndResponsesTo(x,y) & DailyCycleOf(x,y)))", "score": 0}
{"id": "eqasc_train_7364", "prediction": "all x.(CircadianRhythms(x) -> (AdaptedForLight(x) & AdaptedForDark(x)))", "score": 0}
{"id": "eqasc_train_7365", "prediction": "all x.((Plant(x) & Light(x) & Dark(x)) -> (Detects(x,y) & CircadianRhythm(y)))", "score": 0}
{"id": "eqasc_train_7366", "prediction": "all x y.((Plant(x) & DiurnalCycle(y)) -> (Detects(x,y) & RespondsTo(x,y)))", "score": 0}
{"id": "eqasc_train_7367", "prediction": "all x.(Daisy(x) -> (DetectsLight(x) & RespondsToDailyCycle(x) & DailyCycleOfDarkness(x)))", "score": 0}
{"id": "eqasc_train_7368", "prediction": "all x.(FloweringCycle(x) -> FewerHoursOfLight(x))", "score": 0}
{"id": "eqasc_train_7369", "prediction": "all x y z.((Plant(x) & DailyCycle(y) & Flowering(z) & HoursLess(z)) -> (DetectsAndResponses(x,y) & During(x,z)))", "score": 0}
{"id": "eqasc_train_7370", "prediction": "all x y.((SolarPanel(x) & Sunlight(y)) -> ConvertsToElectricity(x,y))", "score": 0}
{"id": "eqasc_train_7371", "prediction": "all x.(Sunlight(x) -> MoreConcentratedEnergyNearEquator(x))", "score": 0}
{"id": "eqasc_train_7372", "prediction": "all x y.((SolarPanel(x) & Equator(y)) -> WorksWellNear(x,y))", "score": 0}
{"id": "eqasc_train_7373", "prediction": "all x.((Car(x) & OperatesUsingElectricity(x)) -> CleanestOnMarket(x))", "score": 0}
{"id": "eqasc_train_7374", "prediction": "exists x.(Car(x) & CanOperateCleanlyOnSunlight(x))", "score": 0}
{"id": "eqasc_train_7375", "prediction": "all x.(Laser(x) -> PoweredByElectricity(x))", "score": 0}
{"id": "eqasc_train_7376", "prediction": "all x.(SolarPanel(x) -> PowerLasers(x))", "score": 0}
{"id": "eqasc_train_7377", "prediction": "all x.(Sunlight(x) -> (ComposedOfPhotons(x) | ComposedOfParticlesOfSolarEnergy(x)))", "score": 0}
{"id": "eqasc_train_7378", "prediction": "all x.(SolarPanel(x) -> ConvertsPhotonsToElectricity(x))", "score": 0}
{"id": "eqasc_train_7379", "prediction": "all x.(GreenPlant(x) -> (UsesChlorophyll(x) & CapturesSunlightEnergy(x) & ConvertsToFood(x)))", "score": 0}
{"id": "eqasc_train_7380", "prediction": "all x y.((GreenPlant(x) & SolarPanel(y)) -> CapturesEnergyFromSun(x,y))", "score": 0}
{"id": "eqasc_train_7381", "prediction": "all x.(ElectricPower(x) -> MeasuredInWatts(x))", "score": 0}
{"id": "eqasc_train_7382", "prediction": "all x y.((SolarPanel(x) & Sunlight(y)) -> ConvertsToWatts(x,y))", "score": 0}
{"id": "eqasc_train_7383", "prediction": "all x y.((SolarEnergy(x) & PhotovoltaicArray(y)) -> ConvertsToElectricity(x,y))", "score": 0}
{"id": "eqasc_train_7384", "prediction": "all x y.((PhotovoltaicArray(x) & Sunlight(y)) -> ConvertsToElectricity(x,y))", "score": 0}
{"id": "eqasc_train_7385", "prediction": "all x y.((SolarPanel(x) & Photon(y)) -> ConvertsToElectricity(x,y))", "score": 0}
{"id": "eqasc_train_7386", "prediction": "all x y z.((SolarPanel(x) & Sunlight(y) & Electron(z)) -> ConvertsTo(x,y,z))", "score": 0}
{"id": "eqasc_train_7387", "prediction": "all x.(UVLight(x) -> CausesSunburn(x))", "score": 0}
{"id": "eqasc_train_7388", "prediction": "all x.(Sunburn(x) -> RiskFactorForSkinCancer(x))", "score": 0}
{"id": "eqasc_train_7389", "prediction": "all x.(UltravioletLight(x) -> CausesSkinCancer(x))", "score": 0}
{"id": "eqasc_train_7390", "prediction": "all x y.((Sun(x) & UltravioletLight(y)) -> EmittedBy(x,y))", "score": 0}
{"id": "eqasc_train_7391", "prediction": "all x.(Sun(x) -> CausesSunburn(x))", "score": 0}
{"id": "eqasc_train_7392", "prediction": "all x.(SunburnSymptom(x) -> (SkinRedness(x) & Pain(x) & PossibleSwelling(x) & Blisters(x) & Fever(x) & Headaches(x)))", "score": 0}
{"id": "eqasc_train_7393", "prediction": "all x.(UVLight(x) -> (CausesSkinRednessAndPain(x) & PossibleSwellingBlistersFeverHeadaches(x)))", "score": 0}
{"id": "eqasc_train_7394", "prediction": "all x.(Sunburn(x) -> (Poisonous(x) & Dangerous(x)))", "score": 0}
{"id": "eqasc_train_7395", "prediction": "all x.(UltravioletLight(x) -> CanBeDangerous(x))", "score": 0}
{"id": "eqasc_train_7396", "prediction": "all x.(UltravioletRay(x) -> PowerfulAtElevation(x))", "score": 0}
{"id": "eqasc_train_7397", "prediction": "all x.(SunburnRisk(x) -> HigherAtElevation(x))", "score": 0}
{"id": "eqasc_train_7398", "prediction": "all x.(SeriousSkinCancer(x) -> CausedBySunburnsInChildren(x))", "score": 0}
{"id": "eqasc_train_7399", "prediction": "all x.((ExpositionToUVLight(x) & Childhood(x)) -> CausesSkinCancer(x))", "score": 0}
{"id": "eqasc_train_7400", "prediction": "all x.(Sunburn(x) -> (PrematureAging(x) & SkinCancers(x)))", "score": 0}
{"id": "eqasc_train_7401", "prediction": "all x.(UltravioletLight(x) -> CausesSkinCancer(x))", "score": 0}
{"id": "eqasc_train_7402", "prediction": "all x.(Sunburn(x) -> (CausesSkinToBecomeRed(x) & PainfulToTouch(x)))", "score": 0}
{"id": "eqasc_train_7403", "prediction": "all x.(UltravioletLight(x) -> (CausesSkinToBecomeRed(x) & PainfulToTouch(x)))", "score": 0}
{"id": "eqasc_train_7404", "prediction": "all x.(UVLight(x) -> (Positive(x) & Dangerous(x)))", "score": 0}
{"id": "eqasc_train_7405", "prediction": "all x y.((ExtremeHeat(x) & ExtremePressureChangeRock(y)) -> MetamorphicRock(x))", "score": 0}
{"id": "eqasc_train_7406", "prediction": "all x.(Marble(x) -> MetamorphicRock(x))", "score": 0}
{"id": "eqasc_train_7407", "prediction": "all x y.((ExtremeHeat(x) & ExtremePressureChange(y)) -> Marble(x))", "score": 0}
{"id": "eqasc_train_7408", "prediction": "all x.(Marble(x) -> (FormedFromHeat(x) & FormedFromPressure(x)))", "score": 0}
{"id": "eqasc_train_7409", "prediction": "all x.(MetamorphicRock(x) -> (MostCommonRock(x) & FoundInGreets(x)))", "score": 0}
{"id": "eqasc_train_7410", "prediction": "all x.(Greyat(x) -> (CreatedByExtremeHeat(x) & CreatedByExtremePressure(x)))", "score": 0}
{"id": "eqasc_train_7411", "prediction": "all x.(Marble(x) -> MetamorphicRock(x))", "score": 0}
{"id": "eqasc_train_7412", "prediction": "all x y.((ExtremeHeat(x) & PressureChangeRock(y)) -> Marble(x))", "score": 0}
{"id": "eqasc_train_7413", "prediction": "all x.(Slate(x) -> MetamorphicRock(x))", "score": 0}
{"id": "eqasc_train_7414", "prediction": "all x y.((ExtremeHeat(x) & ExtremePressure(y)) -> ChangesRockIntoSlate(x))", "score": 0}
{"id": "eqasc_train_7415", "prediction": "all x.(ExtremeHeat(x) & ExtremePressure(x)) -> CreatesSlate(x))", "score": -1}
{"id": "eqasc_train_7416", "prediction": "all x.(Slate(x) -> MetamorphicRock(x))", "score": 0}
{"id": "eqasc_train_7417", "prediction": "all x y z.((ExtremeHeat(x) & Pressure(y) & Rock(z) & ExtremeHeat(z) & PressureChange(x,z)) -> Slate(x))", "score": 0}
{"id": "eqasc_train_7418", "prediction": "all x.(GneissRock(x) -> (GneissRock(x) & Metamorphic(x)))", "score": 0}
{"id": "eqasc_train_7419", "prediction": "all x y.((ExtremeHeat(x) & ExtremePressureChange(x) & Rock(y)) -> Gneiss(y))", "score": 0}
{"id": "eqasc_train_7420", "prediction": "all x.(MetamorphicRock(x) -> (MetamorphicRock(x) & FormedByPressure(x) & FormedByHeat(x)))", "score": 0}
{"id": "eqasc_train_7421", "prediction": "all x.(ExtremeHeatAndPressure(x) -> Rock(x))", "score": 0}
{"id": "eqasc_train_7422", "prediction": "all x.(Heat(x) -> ComesFromCore(x))", "score": 0}
{"id": "eqasc_train_7423", "prediction": "all x y.((EarthsCore(x) & EarthsCore(y)) -> CreatesMetamorphicRock(x,y))", "score": 0}
{"id": "eqasc_train_7424", "prediction": "all x.(Slate(x) -> (FormedWithExtremeHeat(x) & FormedWithExtremePressure(x)))", "score": 0}
{"id": "eqasc_train_7425", "prediction": "all x.((ExtremeHeat(x) & ExtremePressure(x)) -> CreatesMarble(x))", "score": 0}
{"id": "eqasc_train_7426", "prediction": "all x.(ExtremeHeat(x) & ExtremePressure(x)) -> CanChangeRockIntoSlate(x))", "score": -1}
{"id": "eqasc_train_7427", "prediction": "all x.(Marble(x) -> MetamorphicRock(x))", "score": 0}
{"id": "eqasc_train_7428", "prediction": "all x.(Marble(x) -> (FormedFromExtremeHeat(x) & FormedFromExtremePressure(x)))", "score": 0}
{"id": "eqasc_train_7429", "prediction": "all x.((SedimentaryRock(x) & (Heat(x) | Pressure(x) | OtherForces(x))) -> ChangesIntoDifferentForm(x))", "score": 0}
{"id": "eqasc_train_7430", "prediction": "all x.(SedimentaryRock(x) -> (SedimentaryRock(x) & MetamorphicRock(x) & WithForce(x)))", "score": 0}
{"id": "eqasc_train_7431", "prediction": "all x y.((ExtremeHeat(x) & ExtremePressure(y)) -> ChangesRockIntoMarble(x,y))", "score": 0}
{"id": "eqasc_train_7432", "prediction": "all x.(Cancer(x) -> (Disease(x) & CellCycleNoLikely(x)))", "score": 0}
{"id": "eqasc_train_7433", "prediction": "all x.(Cancer(x) -> (Disease(x) & OccursWhenMitosisNoLikelyRegulated(x)))", "score": 0}
{"id": "eqasc_train_7434", "prediction": "all x.(Cancer(x) -> DefectInRegulationOfCellCycle(x))", "score": 0}
{"id": "eqasc_train_7435", "prediction": "all x.(Cancer(x) -> (DefectOccursWhenRegulationOfCycles(x) & -RegulatesCycles(x)))", "score": 0}
{"id": "eqasc_train_7436", "prediction": "all x.(Cancer(x) -> CanResultInDeath(x))", "score": 0}
{"id": "eqasc_train_7437", "prediction": "all x.((CellCycle(x) & -Regulated(x)) -> CellCycleDeath(x))", "score": 0}
{"id": "eqasc_train_7438", "prediction": "all x.((TumorSuppressorProtein(x) & RegulatesCellCycle(x)) -> p53(x))", "score": -1}
{"id": "eqasc_train_7439", "prediction": "all x.(Cancer(x) -> (Disease(x) & TumorSuppresorProteins(x) & StopFunctioning(x)))", "score": 0}
{"id": "eqasc_train_7440", "prediction": "all x.(MetastaticCancer(x) -> CancerSpread(x))", "score": 0}
{"id": "eqasc_train_7441", "prediction": "all x.((Disease(x) & Metastic(x)) -> CellCycleNoLikelyRegulated(x))", "score": 0}
{"id": "eqasc_train_7442", "prediction": "all x.((CellCycle(x) & Unregulated(x)) -> Death(x))", "score": 0}
{"id": "eqasc_train_7443", "prediction": "(all x.(Leukemia(x) | Lymphoma(x)) -> Cancer(x))", "score": 0}
{"id": "eqasc_train_7444", "prediction": "all x.(Leukemia(x) -> (Disease(x) & CellCycleNoLikely(x)))", "score": 0}
{"id": "eqasc_train_7445", "prediction": "all x.(BrainTumor(x) -> FastestGrowingCancer(x))", "score": 0}
{"id": "eqasc_train_7446", "prediction": "all x.((BrainTumor(x) & CellCycleNoLike(x)) -> Occurs(x))", "score": 0}
{"id": "eqasc_train_7447", "prediction": "exists x.(Cancer(x) & Erased(x))", "score": 0}
{"id": "eqasc_train_7448", "prediction": "exists x.(Disease(x) & CanBeHeritaged(x))", "score": 0}
{"id": "eqasc_train_7449", "prediction": "all x.(Cancer(x) -> EmotionallyDevastatingDisease(x))", "score": 0}
{"id": "eqasc_train_7450", "prediction": "all x.((Disease(x) & CellCycleNoLikelyRegulated(x)) -> EmotionallyDevastating(x))", "score": 0}
{"id": "eqasc_train_7451", "prediction": "all x.(P16(x) -> RegulatorOfCellDividendCycle(x))", "score": 0}
{"id": "eqasc_train_7452", "prediction": "all x.(Cancer(x) -> (Disease(x) & GenesStopFunctioning(x,P16)))", "score": 0}
{"id": "eqasc_train_7453", "prediction": "all x.(Cancer(x) -> CausedByMutation(x))", "score": 0}
{"id": "eqasc_train_7454", "prediction": "all x.((CellCycle(x) & -Regulated(x)) -> CanResultInMutation(x))", "score": 0}
{"id": "eqasc_train_7455", "prediction": "all x y.((MeasuringCup(x) & Substance(y)) -> MeasuresVolume(x,y))", "score": 0}
{"id": "eqasc_train_7456", "prediction": "all x.(Liquid(x) -> MeasuredAccuratelyByVolume(x))", "score": 0}
{"id": "eqasc_train_7457", "prediction": "all x.(Cup(x) -> (NotesAccurateVolumeOfLiquids(x) & Uses(x)))", "score": 0}
{"id": "eqasc_train_7458", "prediction": "all x.(Water(x) -> Substance(x))", "score": 0}
{"id": "eqasc_train_7459", "prediction": "all x y.((MeasuringCup(x) & WaterVolume(y)) -> Determines(x,y))", "score": 0}
{"id": "eqasc_train_7460", "prediction": "all x y.((MeasuringCup(x) & Liquid(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_train_7461", "prediction": "all x y.((Substance(x) & Mass(y)) -> DensityMeasure(x,y))", "score": 0}
{"id": "eqasc_train_7462", "prediction": "all x y.((MeasuringCup(x) & Substance(y)) -> MeasuresDensity(x,y))", "score": 0}
{"id": "eqasc_train_7463", "prediction": "all x.(MeasuringCup(x) -> MeasuresLiquidsAccurately(x))", "score": 0}
{"id": "eqasc_train_7464", "prediction": "(OrganicSubstance(Sugar) & -(OrganicSubstance(Sugar) & Flour(Sugar)) & Crystalizes(Sugar))", "score": 0}
{"id": "eqasc_train_7465", "prediction": "all x.((MeasuresSugarVolume(x) & UsesMeasuringCup(x)) -> MeasuresSugarVolume(x))", "score": 0}
{"id": "eqasc_train_7466", "prediction": "all x.(Volume(x) -> (TakesUpSpace(x) & ObjectOrSubstance(x)))", "score": 0}
{"id": "eqasc_train_7467", "prediction": "all x.(MeasuringCup(x) -> MeasuresSpace(x))", "score": 0}
{"id": "eqasc_train_7468", "prediction": "all x.((DryIngredient(x) & GraduateMeasuringCupSet(x)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_train_7469", "prediction": "all x.(Graduation(x) -> MeasuresVolumeOfSubstances(x))", "score": 0}
{"id": "eqasc_train_7470", "prediction": "all x y.((MeasuringCup(x) & MeasurementCup(y)) -> PoursDifferentAmountsOfWater(x,y))", "score": 0}
{"id": "eqasc_train_7471", "prediction": "all x.((VolumeOfWater(x) & WaterAmount(x)) -> DeterminesAmountOfWater(x))", "score": 0}
{"id": "eqasc_train_7472", "prediction": "all x.(VolumeMeasured(x) -> VitalCapacity(x))", "score": 0}
{"id": "eqasc_train_7473", "prediction": "all x y.((MeasuringCup(x) & VitalCapacity(y)) -> UsedForMeasuring(x,y))", "score": 0}
{"id": "eqasc_train_7474", "prediction": "all x y.((Object(x) & Fluid(y)) -> DisplacesVolumeIn(x,y))", "score": 0}
{"id": "eqasc_train_7475", "prediction": "all x y.((MeasuringCup(x) & Object(y)) -> MeasuresDisplacement(x,y))", "score": 0}
{"id": "eqasc_train_7476", "prediction": "all x.(Macroevolution(x) -> OccursOverGeologicTimeAboveSpeciesLevel(x))", "score": 0}
{"id": "eqasc_train_7477", "prediction": "all x y z.((Species(x) & Species(y) & GeologicTime(z)) -> ChangesOverGeologicTime(x,y,z))", "score": 0}
{"id": "eqasc_train_7478", "prediction": "all x.(Macroevolution(x) -> (OccursAboveSpecies(x) & VerySlowly(x)))", "score": 0}
{"id": "eqasc_train_7479", "prediction": "all x.(SpeciationEvent(x) -> OccursOverGeologicTimeAboveSpecies(x))", "score": 0}
{"id": "eqasc_train_7480", "prediction": "all x y z.((Species(x) & Species(y) & GeologicTime(z) & ChangeFromTo(x,y,z)) -> OccursOverGeologicTimeAboveLevel(x,y,z))", "score": 0}
{"id": "eqasc_train_7481", "prediction": "all x y.((SpeciationEvent(x) & GeologicTime(y)) -> OccursAboveLevelOfSpecies(x,y))", "score": 0}
{"id": "eqasc_train_7482", "prediction": "all x y.((Macroevolution(x) & Era(y)) -> OccursOver(x,y))", "score": 0}
{"id": "eqasc_train_7483", "prediction": "all x.(Macroevolution(x) -> (OccursOverGeologicTime(x) & LevelOfGenusOrAboveGenus(x)))", "score": 0}
{"id": "eqasc_train_7484", "prediction": "all x.(Macroevolution(x) -> AddsNewGenesWithSpecialCapabilities(x))", "score": 0}
{"id": "eqasc_train_7485", "prediction": "all x y z.((Gene(x) & Gene(y) & SpecialCapability(z) & AddsGenes(x,y,z)) -> OccursOverGeologicTimeAboveSpeciesLevel(x,y,z))", "score": 0}
{"id": "eqasc_train_7486", "prediction": "all x.(GeologicTime(x) -> CanBeDividedIntoTwoEons(x))", "score": 0}
{"id": "eqasc_train_7487", "prediction": "all x.(Macroevolution(x) -> OccursOverEons(x))", "score": 0}
{"id": "eqasc_train_7488", "prediction": "all x.((Macroevolution(x) & Spectiation(x)) -> MajorAreaOfInterest(x))", "score": 0}
{"id": "eqasc_train_7489", "prediction": "all x y.((Species(x) & GeologicTime(y)) -> OccursAboveLevelOfSpecies(x,y))", "score": 0}
{"id": "eqasc_train_7490", "prediction": "all x.(Macroevolution(x) -> ExtrapolatedOverLongerPeriods(x))", "score": 0}
{"id": "eqasc_train_7491", "prediction": "all x y.((Microevolution(x) & Species(y)) -> ExtrapolatedOverGeologicTime(x,y))", "score": 0}
{"id": "eqasc_train_7492", "prediction": "exists x.(Family(x) & RivalsPiperaceae(x) & ForSpeciesDifficulties(x))", "score": 0}
{"id": "eqasc_train_7493", "prediction": "all x.(Macroevolution(x) -> OccursInTaxonomicalLevel(x))", "score": 0}
{"id": "eqasc_train_7494", "prediction": "all x y.((Object(x) & Fluid(y) & MoreDenseThan(x,y)) -> SinksIn(x,y))", "score": 1}
{"id": "eqasc_train_7495", "prediction": "all x y.((Waves(x) & Fluid(y) & Density(y)) -> CreatedAtBoundary(x,y))", "score": 0}
{"id": "eqasc_train_7496", "prediction": "all x y z.((Object(x) & Density(y) & Density(z)) -> SinksBetweenBoundaries(x,y,z))", "score": 0}
{"id": "eqasc_train_7497", "prediction": "all x.(Weight(x) -> (ForceOfGravity(x) & OnObject(x)))", "score": 0}
{"id": "eqasc_train_7498", "prediction": "all x.((Object(x) & WeighsMoreThanFluid(x)) -> CausesSink(x))", "score": 0}
{"id": "eqasc_train_7499", "prediction": "all x.((Ice(x) & -Dense(x)) -> Floats(x))", "score": 0}
{"id": "eqasc_train_7500", "prediction": "all x.(Ice(x) -> -SinksInWater(x))", "score": 0}
{"id": "eqasc_train_7501", "prediction": "all x.(SpecificGravity(x) -> DensityRelated(x))", "score": 0}
{"id": "eqasc_train_7502", "prediction": "all x.(Density(x) -> (Sink(x) | Float(x)))", "score": 0}
{"id": "eqasc_train_7503", "prediction": "all x.(Water(x) -> BestFluid(x))", "score": 0}
{"id": "eqasc_train_7504", "prediction": "all x y.((Object(x) & Water(y) & MoreDenseThanWater(x,y)) -> SinksAsOfGravity(x,y))", "score": 0}
{"id": "eqasc_train_7505", "prediction": "all x y.((Oil(x) & Water(y)) -> LessDense(x,y))", "score": 0}
{"id": "eqasc_train_7506", "prediction": "all x y z.((Water(x) & Oil(y) & Gravity(z)) -> SinksIn(x,y,z))", "score": 0}
{"id": "eqasc_train_7507", "prediction": "all x.(Seed(x) -> SinksInWater(x))", "score": 0}
{"id": "eqasc_train_7508", "prediction": "all x.(Seed(x) -> DenseThanWater(x))", "score": 0}
{"id": "eqasc_train_7509", "prediction": "all x.((Object(x) & LessDenseThanFluid(x)) -> Buoyant(x))", "score": 0}
{"id": "eqasc_train_7510", "prediction": "all x.(DecreasingDensityOfSomething(x) -> IncreasesBuoyancy(x))", "score": 0}
{"id": "eqasc_train_7511", "prediction": "all x.(Theme(x) -> DealsWithSinkingTitanic(x))", "score": 0}
{"id": "eqasc_train_7512", "prediction": "(DenseerTitanic(Titanic) & DenseerTitanic(Titanic))", "score": 0}
{"id": "eqasc_train_7513", "prediction": "all x.((NeoconnonLawOfGravity(x) & -ExtremelyAccurate(x)) -> ExtremelyAccurate(x))", "score": 0}
{"id": "eqasc_train_7514", "prediction": "all x y.((Object(x) & Fluid(y) & MoreDenseThan(x,y)) -> SinksIn(x,y))", "score": 1}
{"id": "eqasc_train_7515", "prediction": "all x.((ImmuneSystem(x) & -WorkingProperly(x)) -> Immunodeficiency(x))", "score": 0}
{"id": "eqasc_train_7516", "prediction": "all x.((HIV(x) & ImmuneSystem(x)) -> -WorksProperly(x))", "score": 0}
{"id": "eqasc_train_7517", "prediction": "all x.(WorkItem(x) -> BreakedDownByYearOfEffort(x))", "score": 0}
{"id": "eqasc_train_7518", "prediction": "all x.(Immunodeficiency(x) -> BreaksDownImmuneSystem(x))", "score": 0}
{"id": "eqasc_train_7519", "prediction": "exists x.(Cancer(x) & CausesImmunodeficiency(x))", "score": 0}
{"id": "eqasc_train_7520", "prediction": "all x.(Cancer(x) -> (CausesImmuneSystemToNotWorkProperly(x) & ManyCancers(x)))", "score": 0}
{"id": "eqasc_train_7521", "prediction": "all x.(Merchandise(x) -> ((-Works(x) | Broken(x))))", "score": 0}
{"id": "eqasc_train_7522", "prediction": "all x.((ImmuneSystemBroken(x) & BrokenImmuneSystem(x)) -> ImmunodeficiencyOccurrence(x))", "score": 0}
{"id": "eqasc_train_7523", "prediction": "all x.((Malnutrition(x) & LackOfProtein(x)) -> CanCauseAcquiredImmunodeficiency(x))", "score": 0}
{"id": "eqasc_train_7524", "prediction": "all x.((Malnutrition(x) & ImmuneSystem(x) & -WorkingProperly(x)) -> CausedBy(x,malnutrition))", "score": 0}
{"id": "eqasc_train_7525", "prediction": "all x.((Person(x) & HealthyImmuneSystem(x)) -> GetsWellOnOwn(x))", "score": 0}
{"id": "eqasc_train_7526", "prediction": "all x y.((Immunodeficiency(x) & Person(y)) -> TakesLongerToGetWell(y,x))", "score": 0}
{"id": "eqasc_train_7527", "prediction": "all x.(Immunodeficiency(x) -> Treatment(x))", "score": 0}
{"id": "eqasc_train_7528", "prediction": "all x y.((Treatment(x) & ImmuneSystem(y) & -WorkingProperly(y)) -> Available(x))", "score": 0}
{"id": "eqasc_train_7529", "prediction": "all x.(IronDeficiency(x) -> (CausesAnemia(x) & WeakensImmuneSystem(x)))", "score": 0}
{"id": "eqasc_train_7530", "prediction": "all x.(LowIron(x) -> CausesImmunodeficiency(x))", "score": 0}
{"id": "eqasc_train_7531", "prediction": "all x.(Cancer(x) -> CausesImmuneSystemToNotWork(x))", "score": 0}
{"id": "eqasc_train_7532", "prediction": "all x.(HeavyRain(x) -> CausesFlooding(x))", "score": 0}
{"id": "eqasc_train_7533", "prediction": "all x y.((Drought(x) & HeavyRain(y)) -> (CausesWaterTableToDrop(x) & CausesWaterTableToRise(y)))", "score": 0}
{"id": "eqasc_train_7534", "prediction": "all x.((Water(x) & Flooding(x)) -> RisesWith(x,y))", "score": 0}
{"id": "eqasc_train_7535", "prediction": "all x.(Flood(x) -> (DestroyProperty(x) & KillPeople(x)))", "score": 0}
{"id": "eqasc_train_7536", "prediction": "all x.(HeavyRain(x) -> KillsPeople(x))", "score": 0}
{"id": "eqasc_train_7537", "prediction": "all x.(Home(x) -> (Flooded(x) | InDangerOfFlooding(x)))", "score": 0}
{"id": "eqasc_train_7538", "prediction": "all x.(HeavyRain(x) -> DamagesHomes(x))", "score": 0}
{"id": "eqasc_train_7539", "prediction": "all x.(FloodWater(x) -> (DamagesHomes(x) & DamagesBuildings(x)))", "score": 0}
{"id": "eqasc_train_7540", "prediction": "all x y.((HeavyRain(x) & Home(y)) -> Damages(x,y))", "score": 0}
{"id": "eqasc_train_7541", "prediction": "all x.(HeavyRain(x) -> (CausesDeadlyEvents(x) & CausesDevastatingEvents(x)))", "score": 0}
{"id": "eqasc_train_7542", "prediction": "all x.(HurricaneRain(x) -> (CausesLandslides(x) & CausesFlashFloods(x)))", "score": 0}
{"id": "eqasc_train_7543", "prediction": "all x.(Flooding(x) -> CausesLandslides(x))", "score": 0}
{"id": "eqasc_train_7544", "prediction": "all x.(HeavyRain(x) -> CausesErosion(x))", "score": 0}
{"id": "eqasc_train_7545", "prediction": "all x.(Flooding(x) -> CausesErosion(x))", "score": 0}
{"id": "eqasc_train_7546", "prediction": "all x.(FloodWater(x) -> RisesRapidly(x))", "score": 0}
{"id": "eqasc_train_7547", "prediction": "all x y.((HeavyRain(x) & Water(y)) -> CausesRiseRapidly(x,y))", "score": 0}
{"id": "eqasc_train_7548", "prediction": "exists x.(Hurricane(x) & ProducesTorrentialRain(x))", "score": 0}
{"id": "eqasc_train_7549", "prediction": "all x.(Hurricane(x) -> (CausesFlooding(x) & CausesFlooding(x)))", "score": 0}
{"id": "eqasc_train_7550", "prediction": "all x.(HeavyRain(x) -> Lethal(x))", "score": 0}
{"id": "eqasc_train_7551", "prediction": "all x.(HeavyRain(x) -> (CausesDeadly(x) & Devastating(x)))", "score": 0}
{"id": "eqasc_train_7552", "prediction": "all x.(HeavyRain(x) -> (CausesErosion(x) & CausesLandslides(x)))", "score": 0}
{"id": "eqasc_train_7553", "prediction": "all x.(FloodWater(x) -> HighLevelsOfBacteria(x))", "score": 0}
{"id": "eqasc_train_7554", "prediction": "all x.(HeavyRain(x) -> HighLevelsOfBacteria(x))", "score": 0}
{"id": "eqasc_train_7555", "prediction": "all x.(Landslide(x) -> CausedByRain(x))", "score": 0}
{"id": "eqasc_train_7556", "prediction": "all x.(Flooding(x) -> CausesMuchOfHurricaneDamage(x))", "score": 0}
{"id": "eqasc_train_7557", "prediction": "all x y.((HeavyRain(x) & Hurricane(y)) -> CausesMuchOfDamage(x,y))", "score": 0}
{"id": "eqasc_train_7558", "prediction": "all x.(Flooding(x) -> (CausesErosionProblems(x) & Problematic(x)))", "score": 0}
{"id": "eqasc_train_7559", "prediction": "all x.(HeavyRain(x) -> CausesErosion(x))", "score": 0}
{"id": "eqasc_train_7560", "prediction": "all x.((Organism(x) & LivesInMarineBiome(x)) -> AdaptedToSaltInWater(x))", "score": 0}
{"id": "eqasc_train_7561", "prediction": "all x.((Organism(x) & LivesInMarineBiome(x)) -> AdaptedToSodiumInWater(x))", "score": 0}
{"id": "eqasc_train_7562", "prediction": "all x.((Organism(x) & LivesInMarineBiome(x)) -> AdaptedToSalinity(x))", "score": 0}
{"id": "eqasc_train_7563", "prediction": "all x.(SaltWater(x) -> MoreBuoyant(x))", "score": 0}
{"id": "eqasc_train_7564", "prediction": "all x.((Organism(x) & LivesInMarineBiomes(x)) -> MustAdaptToBuoyancy(x))", "score": 0}
{"id": "eqasc_train_7565", "prediction": "all x.(MarineLife(x) -> (Diverse(x) & Abundant(x) & (TinyPlankton(x) | BlueWhale(x))))", "score": 0}
{"id": "eqasc_train_7566", "prediction": "all x.(BlueWhale(x) -> MustAdaptToSaltInWater(x))", "score": 0}
{"id": "eqasc_train_7567", "prediction": "all x.(Seal(x) -> LivesInSaltWater(x))", "score": 0}
{"id": "eqasc_train_7568", "prediction": "all x.(Seal(x) -> MustAdaptToSaltWater(x))", "score": 0}
{"id": "eqasc_train_7569", "prediction": "(FamiliarBiomeExample(x) & Tundra(x) & Desert(x) & Chaparral(x) & OpenOcean(x))", "score": 0}
{"id": "eqasc_train_7570", "prediction": "all x.((Organism(x) & LivesInOcean(x)) -> AdaptedToSaltWater(x))", "score": 0}
{"id": "eqasc_train_7571", "prediction": "all x.(SodiumChloride(x) | CommonSalt(x)) -> ChemicalCompoundNaCl(x))", "score": -1}
{"id": "eqasc_train_7572", "prediction": "all x y.((Organism(x) & MarineBiome(y) & LivingIn(x,y)) -> AdaptsChemicalCompoundNaCl(x))", "score": 0}
{"id": "eqasc_train_7573", "prediction": "all x y z.((TinyMarineOrganism(x) & Baleen(y) & Whale(z)) -> (CapturedBy(x,y) & SwallowedBy(x,z)))", "score": 0}
{"id": "eqasc_train_7574", "prediction": "all x.(Whale(x) -> (AdaptedToSalt(x) & InWater(x)))", "score": 0}
{"id": "eqasc_train_7575", "prediction": "exists x.(Crab(x) & (MainlyMarine(x) | LivesInFreshWater(x) | LivesOnLand(x)))", "score": 0}
{"id": "eqasc_train_7576", "prediction": "exists x.(Crab(x) & AdaptedToSaltWater(x))", "score": 0}
{"id": "eqasc_train_7577", "prediction": "all x.(MarineBiology(x) -> (StudiesOrganisms(x) & HappensToBeMarine(x)))", "score": 0}
{"id": "eqasc_train_7578", "prediction": "all x y.((MarineBiology(x) & Creature(y) & LivesInWaterBiomes(y)) -> Studies(x,y))", "score": 0}
{"id": "eqasc_train_7579", "prediction": "all x.((Animal(x) & LivesInMarineBiome(x)) -> SeaTiger(x))", "score": 0}
{"id": "eqasc_train_7580", "prediction": "all x.(SeaTiger(x) -> AdaptsToSalt(x))", "score": 0}
{"id": "eqasc_train_7581", "prediction": "all x.((Organism(x) & LivesInEstuaries(x)) -> AdaptedToSaltInWater(x))", "score": 0}
{"id": "eqasc_train_7582", "prediction": "all x.(Ocean(x) -> SaltWaterHabitat(x))", "score": 0}
{"id": "eqasc_train_7583", "prediction": "all x.((Organism(x) & LivesInMarineBiomes(x)) -> AdaptedToOceans(x))", "score": 0}
{"id": "eqasc_train_7584", "prediction": "all x.(Water(x) -> (SaltWater(x) & InOceans(x)))", "score": 0}
{"id": "eqasc_train_7585", "prediction": "all x.((Organism(x) & LivesInMarineBiome(x)) -> AdaptedToMostOfWater(x))", "score": 0}
{"id": "eqasc_train_7586", "prediction": "all x.((LivingBeing(x) & LivesInMarineBiome(x)) -> AdaptedToSaltInWater(x))", "score": 0}
{"id": "eqasc_train_7587", "prediction": "all x.(Salinity(x) -> MeasuresSaltInWater(x))", "score": 0}
{"id": "eqasc_train_7588", "prediction": "all x.((Organism(x) & LivesInMarineBiome(x)) -> MustAdaptToSalinity(x))", "score": 0}
{"id": "eqasc_train_7589", "prediction": "all x.(Climate(x) -> (InfluencesPlantGrowth(x) & InfluencesBiodiversity(x) & InfluencesAdaptationsOfLandOrganisms(x)))", "score": 0}
{"id": "eqasc_train_7590", "prediction": "all x y.((Climate(x) & Organism(y)) -> InfluencesMicroEvolvement(x,y))", "score": 0}
{"id": "eqasc_train_7591", "prediction": "all x.(AquaticBiodiversity(x) -> Decreased(x))", "score": 0}
{"id": "eqasc_train_7592", "prediction": "all x y.((Climate(x) & Plant(y) & AquaticEnvironment(z)) -> Influences(x,y,z))", "score": 0}
{"id": "eqasc_train_7593", "prediction": "all x y.((Climate(x) & Bush(y)) -> Influences(x,y))", "score": 0}
{"id": "eqasc_train_7594", "prediction": "all x.(Climate(x) -> DeterminedByTemperature(x))", "score": 0}
{"id": "eqasc_train_7595", "prediction": "all x.(Temperature(x) -> (InfluencesPlantGrowth(x) & InfluencesBiodiversity(x) & InfluencesAdaptions(x)))", "score": 0}
{"id": "eqasc_train_7596", "prediction": "all x.(Temperature(x) -> (InfluencesPlantGrowth(x) & InfluencesBiodiversity(x) & InfluencesAdaptationsOfLandOrganisms(x)))", "score": 0}
{"id": "eqasc_train_7597", "prediction": "all x.(GlobalWarming(x) -> PartOfClimateChange(x))", "score": 0}
{"id": "eqasc_train_7598", "prediction": "all x.(GlobalWarming(x) -> (InfluencesPlantGrowth(x) & InfluencesBiodiversity(x) & InfluencesAdaptationsOfLandOrganisms(x)))", "score": 0}
{"id": "eqasc_train_7599", "prediction": "all x y.((Climate(x) & Place(y)) -> AverageWeatherCourse(x,y))", "score": 0}
{"id": "eqasc_train_7600", "prediction": "all x.(Weather(x) -> (InfluencesPlantGrowth(x) & InfluencesBiodiversity(x) & InfluencesAdaptationsOfLandOrganisms(x)))", "score": 0}
{"id": "eqasc_train_7601", "prediction": "all x.(Biodiversity(x) -> IncreasesBeautyOfPlanet(x))", "score": 0}
{"id": "eqasc_train_7602", "prediction": "all x y.((Climate(x) & Planet(y)) -> InfluencesBeauty(x,y))", "score": 0}
{"id": "eqasc_train_7603", "prediction": "all x.(DesertAnimal(x) -> (AdaptedToVegetation(x) & AdaptedToClimate(x)))", "score": 0}
{"id": "eqasc_train_7604", "prediction": "all x y.((DesertAnimal(x) & DryClimate(y)) -> AdjustsTo(x,y))", "score": 0}
{"id": "eqasc_train_7605", "prediction": "all x.(ForestCommunity(x) -> (InfluencesClimate(x) & InfluencesSoil(x)))", "score": 0}
{"id": "eqasc_train_7606", "prediction": "all x y z.((ForestCommunity(x) & PlantGrowth(y) & Biodiversity(z) & LandOrganism(w)) -> InfluencesAndAdaptations(x,y,z,w))", "score": 0}
{"id": "eqasc_train_7607", "prediction": "all x.(ClimateForest(x) -> StabilizesClimate(x))", "score": 0}
{"id": "eqasc_train_7608", "prediction": "all x.(Forest(x) -> (Stabilizes(x) & InfluencesPlantGrowth(x)))", "score": 0}
{"id": "eqasc_train_7609", "prediction": "all x.(Reptile(x) -> (GoodEyesight(x) & KeenSenseOfSmell(x)))", "score": 4}
{"id": "eqasc_train_7610", "prediction": "all x.(Lizard(x) -> Reptile(x))", "score": 3}
{"id": "eqasc_train_7611", "prediction": "exists x.(Lizard(x) & GoodEyesight(x) & KeenSenseOfSmell(x))", "score": 0}
{"id": "eqasc_train_7612", "prediction": "all x.(Lizard(x) -> (GoodEyesight(x) & KeenSenseOfSmell(x)))", "score": 1}
{"id": "eqasc_train_7613", "prediction": "all x.(BadEyesight(x) -> SensationOfSmell(x))", "score": 0}
{"id": "eqasc_train_7614", "prediction": "all x.((Reptile(x) & BadEyesight(x)) -> SmellsHigher(x))", "score": 0}
{"id": "eqasc_train_7615", "prediction": "all x.((Crocodile(x) | Snake(x) | Lizard(x)) -> Reptile(x))", "score": 1}
{"id": "eqasc_train_7616", "prediction": "all x.(Lizard(x) -> (GoodEyesight(x) & KeenSenseOfSmell(x)))", "score": 1}
{"id": "eqasc_train_7617", "prediction": "all x.(Geckos(x) -> Reptile(x))", "score": 2}
{"id": "eqasc_train_7618", "prediction": "all x.(Geckos(x) -> (GoodEyesight(x) & KeenSenseOfSmell(x)))", "score": 1}
{"id": "eqasc_train_7619", "prediction": "all x.(Reptile(x) -> (IncludesCrocodiles(x)))", "score": 0}
{"id": "eqasc_train_7620", "prediction": "all x.(Crocodile(x) -> (GoodEyesight(x) & KeenSenseOfSmell(x)))", "score": 0}
{"id": "eqasc_train_7621", "prediction": "all x y.((Olfaction(x) & Gummentation(y)) -> (SenseOfSmell(x) & TasteOfTaste(y)))", "score": 0}
{"id": "eqasc_train_7622", "prediction": "all x.(Reptile(x) -> GoodOlfaction(x))", "score": 0}
{"id": "eqasc_train_7623", "prediction": "all x.(Geckos(x) -> GoodEyesight(x))", "score": 1}
{"id": "eqasc_train_7624", "prediction": "all x.(Snake(x) -> LunglessReptile(x))", "score": 0}
{"id": "eqasc_train_7625", "prediction": "all x.(Snake(x) -> (GoodEyesight(x) & KeenSenseOfSmell(x)))", "score": 0}
{"id": "eqasc_train_7626", "prediction": "all x.(Bat(x) -> (GoodEyesight(x) & ReliesOnVision(x)))", "score": 0}
{"id": "eqasc_train_7627", "prediction": "all x.(Reptile(x) -> (ReliesOnVision(x) & LongDistanceOrientation(x)))", "score": 0}
{"id": "eqasc_train_7628", "prediction": "all x.(Reptilia(x) -> ContainsOver7800Entries(x))", "score": 0}
{"id": "eqasc_train_7629", "prediction": "all x.((Animal(x) & Reptilia(x)) -> (GoodEyesight(x) & KeenSenseOfSmell(x)))", "score": 0}
{"id": "eqasc_train_7630", "prediction": "all x y.((Moon(x) & Earth(y) & RevolvingAround(x,y)) -> CausesPhasesOfMoon(x,y))", "score": 0}
{"id": "eqasc_train_7631", "prediction": "all x.(MoonPhase(x) -> CausedByShadowFromEarth(x))", "score": 0}
{"id": "eqasc_train_7632", "prediction": "all x y z.((Earth(x) & Sun(y) & Moon(z)) -> (GivesBetween(x,y,z) & CreatesShadow(x)))", "score": 0}
{"id": "eqasc_train_7633", "prediction": "all x.(Moon(x) -> (RelativePositions(x,Earth) & RelativePositions(x,Moon) & RelativePositions(x,Sun)))", "score": 0}
{"id": "eqasc_train_7634", "prediction": "all x y.((MoonPhase(x) & Sun(y)) -> DependsOn(x,y))", "score": 0}
{"id": "eqasc_train_7635", "prediction": "all x.(Tide(x) -> (Cyclic(x) & FollowsPhasesOfMoon(x)))", "score": 0}
{"id": "eqasc_train_7636", "prediction": "all x y.((Tide(x) & Moon(y) & Earth(y)) -> OccursInWater(x,y))", "score": 0}
{"id": "eqasc_train_7637", "prediction": "all x.(Tide(x) -> (CalculatesMoonPhases(x) & CalculatesTideCoefficients(x)))", "score": 0}
{"id": "eqasc_train_7638", "prediction": "all x y z.((Moon(x) & Earth(y) & Moon(z)) -> RevolvingAround(x,z))", "score": 0}
{"id": "eqasc_train_7639", "prediction": "(all x.(Earth(x) -> RevolvesAround(x,Sun)) & all y.(Moon(y) -> RevolvesAround(y,Earth)))", "score": 0}
{"id": "eqasc_train_7640", "prediction": "all x y.((Moon(x) & Earth(y)) -> RotatesAround(x,y))", "score": 0}
{"id": "eqasc_train_7641", "prediction": "all x y.((Moon(x) & Earth(y)) -> CausedByDifferentLight(x,y))", "score": 0}
{"id": "eqasc_train_7642", "prediction": "all x y.((Moon(x) & Earth(y)) -> CausesDifferentLightReflectsOff(x,y))", "score": 0}
{"id": "eqasc_train_7643", "prediction": "all x y.((Phase(x) & Moon(y)) -> DifferentShapesFromEarth(x,y))", "score": 0}
{"id": "eqasc_train_7644", "prediction": "all x y.((Moon(x) & Earth(y) & RevolvingAround(x,y)) -> CausesDifferentShapesToAppear(x,y))", "score": 0}
{"id": "eqasc_train_7645", "prediction": "all x.((Moon(x) & NewMoon(x)) -> DiscussionOfPhases(x))", "score": 0}
{"id": "eqasc_train_7646", "prediction": "all x y z.((Moon(x) & Earth(y) & Moon(z) & RevolvingAround(x,z)) -> CausesNewMoon(x,y))", "score": 0}
{"id": "eqasc_train_7647", "prediction": "all x y.((Ship(x) & Person(y)) -> MovesAcrossBodyOfWater(x,y))", "score": 0}
{"id": "eqasc_train_7648", "prediction": "all x.(Ocean(x) -> LargeBodyOfWater(x))", "score": 0}
{"id": "eqasc_train_7649", "prediction": "all x y z.((Ship(x) & Person(y) & Ocean(z)) -> MovesAcross(x,y,z))", "score": 0}
{"id": "eqasc_train_7650", "prediction": "all x.(Boat(x) -> (TransportsPeople(x) | TransportsGoods(x)))", "score": 0}
{"id": "eqasc_train_7651", "prediction": "all x y z.((Ship(x) & Person(y) & Good(z)) -> Transports(x,y,z))", "score": 0}
{"id": "eqasc_train_7652", "prediction": "all x y.((Ship(x) & Ocean(y)) -> UsedForMovingPeople(x,y))", "score": 0}
{"id": "eqasc_train_7653", "prediction": "all x y.((Ship(x) & Ocean(y)) -> MovesPeopleAcross(x,y))", "score": 0}
{"id": "eqasc_train_7654", "prediction": "all x.((Water(x) & Abundant(x)) -> (CallsForTravel(x) & CallsForTrade(x) & ProtectsShipsFromDangers(x)))", "score": 0}
{"id": "eqasc_train_7655", "prediction": "all x.(Ship(x) -> (UsedForTravel(x) & UsedForTrade(x)))", "score": 0}
{"id": "eqasc_train_7656", "prediction": "all x y.((Transportation(x) & Person(y)) | Things(y)) -> MovesFromPlaceToPlace(x,y))", "score": -1}
{"id": "eqasc_train_7657", "prediction": "all x.(Ship(x) -> WaterTransportation(x))", "score": 0}
{"id": "eqasc_train_7658", "prediction": "all x.(Bridge(x) -> (Structure(x) & BuiltToCrossBodyOfWater(x)))", "score": 0}
{"id": "eqasc_train_7659", "prediction": "all x.((Bridge(x) & ShortDistance(x)) -> ReplacesShip(x))", "score": 0}
{"id": "eqasc_train_7660", "prediction": "all x y.((Hurricane(x) & ShippingLanes(y) & Reef(y)) -> (SpatchesTreasures(x,y) & ScattersCrews(x,y)))", "score": 0}
{"id": "eqasc_train_7661", "prediction": "all x y.((MovingPeopleAcrossBodyOfWaters(x) & Hurricane(y)) -> Avoids(x,y))", "score": 0}
{"id": "eqasc_train_7662", "prediction": "all x y.((Current(x) & LargeBodyOfWater(y)) -> FlowsAcross(x,y))", "score": 0}
{"id": "eqasc_train_7663", "prediction": "all x y.((Ship(x) & Person(y)) -> MovesFromContinentToContinent(x,y))", "score": 0}
{"id": "eqasc_train_7664", "prediction": "all x y.((Freezing(x) & Liquid(y) & Solid(y)) -> (ReducesHeatEnergy(x,y) & ChangesFromTo(x,y)))", "score": 0}
{"id": "eqasc_train_7665", "prediction": "all x.((Liquid(x) & ChangeToSolidState(x)) -> Freezes(x))", "score": 0}
{"id": "eqasc_train_7666", "prediction": "all x.((Liquid(x) & Solid(x)) -> Frozen(x))", "score": 0}
{"id": "eqasc_train_7667", "prediction": "all x.(Ice(x) -> ColdFrozenLiquid(x))", "score": 0}
{"id": "eqasc_train_7668", "prediction": "all x.(Ice(x) -> ReducesHeatEnergy(x))", "score": 0}
{"id": "eqasc_train_7669", "prediction": "all x y.((Freezing(x) & Liquid(y) & Solid(y)) -> Changes(x,y))", "score": 0}
{"id": "eqasc_train_7670", "prediction": "all x.((SolidIce(x) & MeltedIntoLiquidWater(x)) -> MeltsInto(x,liquidWater))", "score": 0}
{"id": "eqasc_train_7671", "prediction": "all x.(ReducingHeatEnergy(x) -> TurnsWaterIntoIce(x))", "score": 0}
{"id": "eqasc_train_7672", "prediction": "all x.(LiquidWater(x) -> (HoldsHeatEnergy(x) & ResistsStateChange(x)))", "score": 0}
{"id": "eqasc_train_7673", "prediction": "all x.((HeatEnergy(x) & Liquid(x)) -> (Faster(x) & TurnsIntoSolid(x)))", "score": 0}
{"id": "eqasc_train_7674", "prediction": "all x.((Water(x) | Heat(x) | FreezingCold(x)) -> DamagesItems(x))", "score": 0}
{"id": "eqasc_train_7675", "prediction": "all x y.((ReducingHeatEnergy(x) & Item(y)) -> Damages(x,y))", "score": 0}
{"id": "eqasc_train_7676", "prediction": "all x y.((CooledWater(x) & Liquid(y)) -> TurnsIntoSolid(x,y))", "score": 0}
{"id": "eqasc_train_7677", "prediction": "all x.((Ice(x) & Freezes(x)) -> ReleasesHeatEnergy(x))", "score": 0}
{"id": "eqasc_train_7678", "prediction": "all x.((Water(x) & LosesHeatEnergy(x)) -> Ice(x))", "score": 0}
{"id": "eqasc_train_7679", "prediction": "all x.(Frostbite(x) -> FreezingOfBodyParts(x))", "score": 0}
{"id": "eqasc_train_7680", "prediction": "all x.((ReducesHeatEnergy(x) & BodyParts(x)) -> Frostbite(x))", "score": 0}
{"id": "eqasc_train_7681", "prediction": "all x.((Liquid(x) & Solid(x)) -> SolidificationOrFreezing(x))", "score": 0}
{"id": "eqasc_train_7682", "prediction": "all x y.((Liquid(x) & Solid(y)) -> (ReducesHeatEnergy(x,y) & Solidifies(x,y)))", "score": 0}
{"id": "eqasc_train_7683", "prediction": "all x.((IceFreezing(x) & Liquid(x) & Solid(x)) -> ReleasesHeat(x))", "score": 0}
{"id": "eqasc_train_7684", "prediction": "all x y z.((ElectricalCircuit(x) & ElectricalCircuit(y) & WorkingProperly(x) & ElectricalCurrent(z)) -> RunsThrough(x,y,z))", "score": 0}
{"id": "eqasc_train_7685", "prediction": "all x.(ElectricCircuit(x) -> PathOfElectricCurrent(x))", "score": 0}
{"id": "eqasc_train_7686", "prediction": "all x y.((ElectricalCircuit(x) & Path(y)) -> CanWorkProperly(x,y))", "score": 0}
{"id": "eqasc_train_7687", "prediction": "all x.(Computer(x) -> (RunsOnElectricCircuits(x) & RunsOnWires(x)))", "score": 0}
{"id": "eqasc_train_7688", "prediction": "all x.((ElectricalCircuit(x) & WorkingProperly(x)) -> ComputerRuns(x))", "score": 0}
{"id": "eqasc_train_7689", "prediction": "all x y.((Circuit(x) & WorkingProperly(x)) -> (FlowOfElectrons(y) & RunsThrough(y,x)))", "score": 0}
{"id": "eqasc_train_7690", "prediction": "all x.(Electricity(x) -> TravelsInCircuit(x))", "score": 0}
{"id": "eqasc_train_7691", "prediction": "all x y.((Current(x) & Circuit(y)) -> RunsThrough(x,y))", "score": 0}
{"id": "eqasc_train_7692", "prediction": "all x.(ElectricalCircuit(x) -> RequiresCompleteLoop(x))", "score": 0}
{"id": "eqasc_train_7693", "prediction": "all x y z.((Electricity(x) & Loop(y) & Circuit(z)) -> CompletesToWork(x,y,z))", "score": 0}
{"id": "eqasc_train_7694", "prediction": "all x y.((ElectricalPower(x) & Circuit(y)) -> (Equal(x,y) & ProductOfCurrentAndVoltage(x,y)))", "score": 0}
{"id": "eqasc_train_7695", "prediction": "all x y.((ElectricalPower(x) & Circuit(y) & RunsThrough(x,y)) -> WorksProperly(x,y))", "score": 0}
{"id": "eqasc_train_7696", "prediction": "all x y.((ElectricCurrent(x) & Tumor(y)) -> BurnsAway(x,y))", "score": 0}
{"id": "eqasc_train_7697", "prediction": "all x y.((Tumor(x) & ElectricalCircuit(y) & WorkingProperly(y)) -> BurnedAway(x,y))", "score": 0}
{"id": "eqasc_train_7698", "prediction": "all x.(ElectricChargeInMotion(x) -> ElectricCurrent(x))", "score": 0}
{"id": "eqasc_train_7699", "prediction": "all x.((Circuit(x) & WorkingProperly(x)) -> ChargeInMotionRuns(x))", "score": 0}
{"id": "eqasc_train_7700", "prediction": "all x.((WiringFinished(x) & TestCircuits(x)) -> ProperConnections(x))", "score": 0}
{"id": "eqasc_train_7701", "prediction": "all x.((WiringFinished(x) & ElectricalCurrentRuns(x)) -> Completed(x))", "score": 0}
{"id": "eqasc_train_7702", "prediction": "all x.(ElectricalCurrent(x) -> ElectricChargeFlow(x))", "score": 0}
{"id": "eqasc_train_7703", "prediction": "all x y z.((ElectricalCircuit(x) & ElectricalCircuit(y) & WorkingProperly(x) & ElectricCharge(z)) -> RunsThrough(x,y,z))", "score": 0}
{"id": "eqasc_train_7704", "prediction": "all x.((Circuit(x) & Compactor(x) & MadeWithDiscreteTransistors(x)) -> Compactor(x))", "score": 0}
{"id": "eqasc_train_7705", "prediction": "all x.((Comparator(x) & MadeWithDiscreteTransistors(x)) -> RunsElectricalCurrent(x))", "score": 0}
{"id": "eqasc_train_7706", "prediction": "all x.(ElectricShock(x) -> PassageOfElectricCurrent(x))", "score": 0}
{"id": "eqasc_train_7707", "prediction": "all x.((ElectricalCircuit(x) & WorkingProperly(x)) -> CanShock(x))", "score": 0}
{"id": "eqasc_train_7708", "prediction": "all x y z.((ElectricCharge(x) & Circuit(y) & Circuit(z)) -> FlowsIn(x,y,z))", "score": 0}
{"id": "eqasc_train_7709", "prediction": "all x.(Stream(x) -> (StartsWithRunoff(x) | SeepsOutOfSpring(x)))", "score": 0}
{"id": "eqasc_train_7710", "prediction": "all x y.((Stream(x) & Spring(y)) -> (StartsWithRunoff(x,y) | SeepsOutWithH2o(x,y)))", "score": 0}
{"id": "eqasc_train_7711", "prediction": "all x.((GroundWater(x) & Streams(x)) -> (ReducedReplenishmentOfGroundWater(x) & AffectsStreams(x)))", "score": 0}
{"id": "eqasc_train_7712", "prediction": "all x y.((Water(x) & Runoff(y)) -> (RunoffAsSprings(x,y) & RefreshGroundWater(x)))", "score": 0}
{"id": "eqasc_train_7713", "prediction": "all x y.((HeavyRain(x) & Runoff(y)) -> CausedStreamsToRiseRapidly(x,y))", "score": 0}
{"id": "eqasc_train_7714", "prediction": "all x y.((HeavyRain(x) & Runoff(y)) -> CausesSeepingOut(x,y))", "score": 0}
{"id": "eqasc_train_7715", "prediction": "all x.(Sulfur(x) -> NativeInNearbyNeighborhood(x))", "score": 0}
{"id": "eqasc_train_7716", "prediction": "all x y.((Stream(x) & BodyOfWater(y) & SulfurOccurs(x)) -> (StartsWithRunoff(x) | SeepsOut(x)))", "score": 0}
{"id": "eqasc_train_7717", "prediction": "all x.(Flood(x) -> (OccursInSpring(x) & SnowmeltRunoff(x)))", "score": 0}
{"id": "eqasc_train_7718", "prediction": "all x.(SnowmeltFeedStream(x) -> SnowmeltFeedStream(x))", "score": 0}
{"id": "eqasc_train_7719", "prediction": "all x.((Lake(x) | Stream(x)) -> DrinkingWaterSource(x))", "score": 0}
{"id": "eqasc_train_7720", "prediction": "all x y.((WaterSeepingOut(x) & Spring(y)) -> SourceOfDrinkingWater(x,y))", "score": 0}
{"id": "eqasc_train_7721", "prediction": "all x.(Rain(x) -> DirectRunoff(x))", "score": 0}
{"id": "eqasc_train_7722", "prediction": "all x.(Stream(x) -> (MayStartWithRain(x) | MayStartWithRain(x)))", "score": 0}
{"id": "eqasc_train_7723", "prediction": "all x.(Water(x) -> Precipitation(x))", "score": 0}
{"id": "eqasc_train_7724", "prediction": "all x.(Stream(x) -> (StartsWithPrecipitation(x) & Precipitation(x)))", "score": 0}
{"id": "eqasc_train_7725", "prediction": "all x.(Stream(x) -> SequenceOfCharacters(x))", "score": 0}
{"id": "eqasc_train_7726", "prediction": "all x y.((SequenceOfCharacters(x) & Spring(y)) -> (StartsWithRunoff(x,y) | SeepsOutWater(x,y)))", "score": 0}
{"id": "eqasc_train_7727", "prediction": "all x y.((FierceEmotion(x) & NearStream(y)) -> RecordsStream(x,y))", "score": 0}
{"id": "eqasc_train_7728", "prediction": "all x y.((RunoffOrWaterSeepingOut(x) & Spring(y) & FeatherEmotion(y)) -> CanRecord(x,y))", "score": 0}
{"id": "eqasc_train_7729", "prediction": "all x.(Stream(x) -> (StartsWithRunoff(x) | SeepsOut(x)))", "score": 0}
{"id": "eqasc_train_7730", "prediction": "all x.((BodyOfWater(x) & SmallerBodyOfWater(x)) -> MayStartWithRunoff(x))", "score": 0}
{"id": "eqasc_train_7731", "prediction": "all x y.((Shelter(x) & Animal(y)) -> UsedForProtectionAgainstWeather(x,y))", "score": 0}
{"id": "eqasc_train_7732", "prediction": "all x.((ProtectiveEnvironment(x) & SupportiveEnvironment(x)) -> Needed(x))", "score": 0}
{"id": "eqasc_train_7733", "prediction": "all x y.((Animal(x) & Weather(y)) -> ProtectiveSupportiveEnvironment(x,y))", "score": 0}
{"id": "eqasc_train_7734", "prediction": "all x.(Tree(x) -> (ProvidesShelter(x) & ProvidesFood(x)))", "score": 0}
{"id": "eqasc_train_7735", "prediction": "all x y.((Tree(x) & Animal(y)) -> ProvidesProtectionAgainstWeather(x,y))", "score": 0}
{"id": "eqasc_train_7736", "prediction": "all x.(ShelterFromWeather(x) -> Critical(x))", "score": 0}
{"id": "eqasc_train_7737", "prediction": "all x y.((Weather(x) & Animal(y)) -> Kills(x,y))", "score": 0}
{"id": "eqasc_train_7738", "prediction": "all x.(AcidRain(x) -> (HarmfulToPlants(x) & HarmfulToAnimals(x)))", "score": 0}
{"id": "eqasc_train_7739", "prediction": "all x y.((Shelter(x) & Creature(y)) -> ProtectsFromHarmfulRain(x,y))", "score": 0}
{"id": "eqasc_train_7740", "prediction": "all x.((Cave(x) | RockOverhang(x)) -> ProvidesShelter(x))", "score": 0}
{"id": "eqasc_train_7741", "prediction": "all x y.((RockOverhang(x) & Animal(y)) -> ProtectsAgainstWeather(x,y))", "score": 0}
{"id": "eqasc_train_7742", "prediction": "all x.(Weather(x) -> (Hurricane(x) | Hurricane(x)))", "score": 0}
{"id": "eqasc_train_7743", "prediction": "all x.(Shelter(x) -> UsedInProtection(x))", "score": 0}
{"id": "eqasc_train_7744", "prediction": "all x.(Snake(x) -> (SeeksShelterFromWinterWeather(x) & HoldsUpInDen(x)))", "score": 0}
{"id": "eqasc_train_7745", "prediction": "all x y.((Snake(x) & Shelter(y)) -> ProtectsInWinter(x,y))", "score": 0}
{"id": "eqasc_train_7746", "prediction": "all x.((Daytime(x) | HotWeather(x)) -> SeekShelter(x))", "score": 0}
{"id": "eqasc_train_7747", "prediction": "all x y.((Animal(x) & Shelter(y) & HotTemperatures(y)) -> UsesIn(x,y))", "score": 0}
{"id": "eqasc_train_7748", "prediction": "all x.(Animal(x) -> UsesSpongesForShelter(x))", "score": 0}
{"id": "eqasc_train_7749", "prediction": "all x y.((Sponge(x) & Animal(y)) -> UsedForProtection(x,y))", "score": 0}
{"id": "eqasc_train_7750", "prediction": "all x.(CactusStem(x) -> UsedForStoringWater(x))", "score": 0}
{"id": "eqasc_train_7751", "prediction": "all x.(Photosynthesis(x) -> GreenSurfaceOfCactus(x))", "score": 0}
{"id": "eqasc_train_7752", "prediction": "all x y.((Cactus(x) & Water(y)) -> StoresWherePhotosynthesisOccurs(x,y))", "score": 0}
{"id": "eqasc_train_7753", "prediction": "all x.((Drinks(x) & Drinks(x)) -> Hydration(x))", "score": 0}
{"id": "eqasc_train_7754", "prediction": "all x.(CactusStem(x) -> CanBeUsedForHydration(x))", "score": 0}
{"id": "eqasc_train_7755", "prediction": "(ScientificNameForWater(H2O) & Water(Water))", "score": 0}
{"id": "eqasc_train_7756", "prediction": "all x y.((CactusStem(x) & CactusStem(y)) -> StoresH2o(x,y))", "score": 0}
{"id": "eqasc_train_7757", "prediction": "all x.(CactusStem(x) -> UsedForStoringH20(x))", "score": 0}
{"id": "eqasc_train_7758", "prediction": "all x.((Cactus(x) & ProperWatering(x)) -> SuccessfulGrowth(x))", "score": 0}
{"id": "eqasc_train_7759", "prediction": "all x.(Cactus(x) -> SavesProperWater(x))", "score": 0}
{"id": "eqasc_train_7760", "prediction": "all x.(SaguaroCactus(x) -> GrowsSlowly(x))", "score": 0}
{"id": "eqasc_train_7761", "prediction": "all x y.((Saguaro(x) & Saguaro(y)) -> StoresWaterInStem(x,y))", "score": 0}
{"id": "eqasc_train_7762", "prediction": "all x.(CactusSpecies(x) -> GrowsInHotDryDeserts(x))", "score": 0}
{"id": "eqasc_train_7763", "prediction": "all x.((Plant(x) & GrowsInHotDeserts(x) & DryDesert(x)) -> StoresWaterInStem(x))", "score": 0}
{"id": "eqasc_train_7764", "prediction": "all x.(Water(x) -> (H2O(x) | Water(x)))", "score": 0}
{"id": "eqasc_train_7765", "prediction": "all x.(CactusStem(x) -> UsedForStoringH2O(x))", "score": 0}
{"id": "eqasc_train_7766", "prediction": "all x y.((RainStop(x) & Cactus(y) & DrinkWater(y)) -> Fat(y))", "score": 0}
{"id": "eqasc_train_7767", "prediction": "all x y.((RainStops(x) & Stem(y) & UsedForStoringWater(y)) -> Fat(y))", "score": 0}
{"id": "eqasc_train_7768", "prediction": "all x.(Liquid(x) -> Water(x))", "score": 0}
{"id": "eqasc_train_7769", "prediction": "all x.(CactusStem(x) -> UsedForStoringLiquids(x))", "score": 0}
{"id": "eqasc_train_7770", "prediction": "all x y.((Cactus(x) & Rainfall(y)) -> StoresMoistureInSpongyStemOrRootSystem(x,y))", "score": 0}
{"id": "eqasc_train_7771", "prediction": "all x.(CactusStem(x) -> ReservesMoisture(x))", "score": 0}
{"id": "eqasc_train_7772", "prediction": "all x.(Cactus(x) -> (StoresWater(x) & ServesAsOwnReservoir(x) & SurvivesLongDroughts(x)))", "score": 0}
{"id": "eqasc_train_7773", "prediction": "all x.(CactusStem(x) -> HoldsWaterToSurviveDroughts(x))", "score": 0}
{"id": "eqasc_train_7774", "prediction": "all x y.((Animal(x) & Cactus(y)) -> EatsToGetWater(x,y))", "score": 0}
{"id": "eqasc_train_7775", "prediction": "all x y z.((Animal(x) & Plant(y) & Stem(z)) -> EatsToGetHydrified(x,y,z))", "score": 0}
{"id": "eqasc_train_7776", "prediction": "all x.((CactusPlant(x) & FromMexico(x)) -> Striking(x))", "score": 0}
{"id": "eqasc_train_7777", "prediction": "all x.((GrowsInMexico(x) & GrowsInMexico(x)) -> CanBeUsedForStoringWater(x))", "score": 0}
{"id": "eqasc_train_7778", "prediction": "exists x.(Plant(x) & (Cactus(x) | Cactus(x))) -> HasWaterStorageSystem(x))", "score": -1}
{"id": "eqasc_train_7779", "prediction": "exists x.(Plant(x) & HasWaterStorageSystem(x))", "score": 0}
{"id": "eqasc_train_7780", "prediction": "all x y.((CactusStem(x) & Conservation(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_train_7781", "prediction": "all x.(PlasmaCell(x) -> (ActivatedBCell(x) & SecretesAntibodies(x)))", "score": 0}
{"id": "eqasc_train_7782", "prediction": "all x.(Antibodies(x) -> KillsBacteria(x))", "score": 0}
{"id": "eqasc_train_7783", "prediction": "all x y.((PlasmaCell(x) & Bacteria(y)) -> Kills(x,y))", "score": 0}
{"id": "eqasc_train_7784", "prediction": "all x.(PlasmaCell(x) -> (ActivatedBCell(x) & SecretesGammaglobulins(x)))", "score": 0}
{"id": "eqasc_train_7785", "prediction": "all x.(PlasmaCell(x) -> (ActivatedBCell(x) & SecretesGammaglobulins(x)))", "score": 0}
{"id": "eqasc_train_7786", "prediction": "all x.(Antibody(x) -> ActsAsWarrior(x))", "score": 0}
{"id": "eqasc_train_7787", "prediction": "all x.(PlasmaCell(x) -> (ActivatedBCell(x) & SecretesWarriors(x)))", "score": 0}
{"id": "eqasc_train_7788", "prediction": "all x.(Antibodies(x) -> (BodyMan(x) & FightingInfection(x)))", "score": 0}
{"id": "eqasc_train_7789", "prediction": "all x y.((PlasmaCell(x) & Body(y)) -> AllowsFightingInfection(x,y))", "score": 0}
{"id": "eqasc_train_7790", "prediction": "all x.(Antibody(x) -> ProducedToFightAntigens(x))", "score": 0}
{"id": "eqasc_train_7791", "prediction": "all x y.((PlasmaCell(x) & AntigenFighter(y)) -> Secretes(x,y))", "score": 0}
{"id": "eqasc_train_7792", "prediction": "all x.(Antibody(x) -> ProducedByPlasmaCells(x))", "score": 0}
{"id": "eqasc_train_7793", "prediction": "all x y.((Antibodies(x) & ActiveBCell(y)) -> ProducedByActivatedBCells(x,y))", "score": 0}
{"id": "eqasc_train_7794", "prediction": "all x.(ActivatedBCell(x) -> SecretesAntibodies(x))", "score": 0}
{"id": "eqasc_train_7795", "prediction": "all x.(PlasmaCell(x) -> (MatureBlymphocyte(x) & PlasmaCell(x)))", "score": 0}
{"id": "eqasc_train_7796", "prediction": "all x.((B-lymphocyte(x) & MatureForm(x)) -> SecretesAntibodies(x))", "score": -1}
{"id": "eqasc_train_7797", "prediction": "all x.(Cell(x) -> HasPlasmaMembrane(x))", "score": 0}
{"id": "eqasc_train_7798", "prediction": "all x.(Membrane(x) -> (MadeOfPlasma(x) & MadeOfPlasma(x)))", "score": 0}
{"id": "eqasc_train_7799", "prediction": "all x.(Antibody(x) -> ManufacturedByImmuneSystem(x))", "score": 0}
{"id": "eqasc_train_7800", "prediction": "all x.(PlasmaCell(x) -> (ActivatedBCell(x) & SecretesImmuneSystemMolecules(x)))", "score": 0}
{"id": "eqasc_train_7801", "prediction": "all x.(Antibody(x) -> ProteinMolecule(x))", "score": 0}
{"id": "eqasc_train_7802", "prediction": "all x.(PlasmaCell(x) -> (ActivatedBCell(x) & SecretesProteinMolecules(x)))", "score": 0}
{"id": "eqasc_train_7803", "prediction": "all x.(Precipitation(x) -> WindwardSideOfMountainRange(x))", "score": 0}
{"id": "eqasc_train_7804", "prediction": "all x y.((Rain(x) & WindwardSide(y)) -> FallsOnMountainRange(x,y))", "score": 0}
{"id": "eqasc_train_7805", "prediction": "all x.((ErosionRapid(x) & -(HighMountainRange(x) | ExtensiveForelandThrust(x))) -> -Develops(x))", "score": 0}
{"id": "eqasc_train_7806", "prediction": "all x y.((Precipitation(x) & WindwardSide(y) & ExtensiveForelandThrust(x)) -> FallsOnExtensiveForelandThrust(x,y))", "score": 0}
{"id": "eqasc_train_7807", "prediction": "all x y.((MoistAir(x) & Mountain(y)) -> ForciblyFormedUp(x,y))", "score": 0}
{"id": "eqasc_train_7808", "prediction": "all x y.((MoistAir(x) & Mountain(y)) -> FallsOnWindwardSide(x,y))", "score": 0}
{"id": "eqasc_train_7809", "prediction": "all x y.((WindwardSide(x) & Peninsula(y)) -> WindiestSide(x,y))", "score": 0}
{"id": "eqasc_train_7810", "prediction": "all x y.((MountainousPeninsula(x) & WindiestSide(x,y)) -> MostPrecipitation(x))", "score": 0}
{"id": "eqasc_train_7811", "prediction": "all x y.((Sheep(x) & Paddock(y)) -> FavorsWindwardSide(x,y))", "score": 0}
{"id": "eqasc_train_7812", "prediction": "all x y.((Sheep(x) & Mountain(y) & MorePrecipitation(y)) -> Favors(x,y))", "score": 0}
{"id": "eqasc_train_7813", "prediction": "all x.(Rainfall(x) -> (AtTropicals(x) & WindwardSideOfMountains(x)))", "score": 0}
{"id": "eqasc_train_7814", "prediction": "all x.(Rainfall(x) -> FallsOnWindwardSide(x))", "score": 0}
{"id": "eqasc_train_7815", "prediction": "all x.(Snow(x) -> Precipitation(x))", "score": 0}
{"id": "eqasc_train_7816", "prediction": "all x y.((SnowFalls(x) & WindwardSide(y)) -> MountainRange(x,y))", "score": 0}
{"id": "eqasc_train_7817", "prediction": "all x.((SmplePrecipitation(x) & IncludesFog(x)) -> EssentialForGrowth(x))", "score": 0}
{"id": "eqasc_train_7818", "prediction": "all x y.((MountainRange(x) & WindwardSide(y)) -> GrowthOccurs(x,y))", "score": 0}
{"id": "eqasc_train_7819", "prediction": "all x y.((Rain(x) & WindwardSide(y)) -> FallsOn(x,y))", "score": 0}
{"id": "eqasc_train_7820", "prediction": "all x.(Vein(x) -> CarriesDeoxygenatedBlood(x))", "score": 0}
{"id": "eqasc_train_7821", "prediction": "all x.(DeoxygenatedBlood(x) -> HeavyWithCarbonDioxide(x))", "score": 0}
{"id": "eqasc_train_7822", "prediction": "all x.(Vein(x) -> (CarriesBlood(x) & HeavyWithCarbonDioxide(x)))", "score": 0}
{"id": "eqasc_train_7823", "prediction": "all x.(Vessel(x) -> CarriesDeoxygenatedBlood(x))", "score": 0}
{"id": "eqasc_train_7824", "prediction": "all x y.((Vine(x) & Heart(y)) -> CarriesBlood(x,y))", "score": 0}
{"id": "eqasc_train_7825", "prediction": "all x.((Blood(x) & Heart(x)) -> Deoxygenated(x))", "score": 0}
{"id": "eqasc_train_7826", "prediction": "all x.(Arterie(x) -> CarriesBlood(x))", "score": 0}
{"id": "eqasc_train_7827", "prediction": "all x.(Vein(x) -> (CarriesBlood(x) & HeavyWithCarbonDioxide(x)))", "score": 0}
{"id": "eqasc_train_7828", "prediction": "all x.((BloodVessel(x) & DeoxygenatedBlood(x)) -> Carries(x,deoxygenatedBlood))", "score": 0}
{"id": "eqasc_train_7829", "prediction": "all x y.((OxygenatedBlood(x) & DeoxygenatedBlood(y)) -> (Red(x) & Blue(y)))", "score": 0}
{"id": "eqasc_train_7830", "prediction": "all x.(Vein(x) -> CarriesBlueBlood(x))", "score": 0}
{"id": "eqasc_train_7831", "prediction": "all x.(Vein(x) -> CarriesBloodToHeart(x))", "score": 0}
{"id": "eqasc_train_7832", "prediction": "all x.(DeoxygenatedBloodCarriedToHeart(x) -> CarriedToHeart(x))", "score": 0}
{"id": "eqasc_train_7833", "prediction": "all x y.((Blood(x) & Heart(y)) -> ReturnsByVines(x,y))", "score": 0}
{"id": "eqasc_train_7834", "prediction": "all x y.((Heart(x) & Veins(y)) -> SupplyedBy(x,y))", "score": 0}
{"id": "eqasc_train_7835", "prediction": "all x.(Blood(x) -> CarriesBloodCells(x))", "score": 0}
{"id": "eqasc_train_7836", "prediction": "all x.(Vein(x) -> CarriesCells(x))", "score": 0}
{"id": "eqasc_train_7837", "prediction": "all x.(Vein(x) -> PushesBloodTowardsHeart(x))", "score": 0}
{"id": "eqasc_train_7838", "prediction": "all x.(DeoxygenatedBlood(x) -> CarriedTowardsHeart(x))", "score": 0}
{"id": "eqasc_train_7839", "prediction": "all x.(Vessel(x) -> CarriesDeoxygenatedBlood(x))", "score": 0}
{"id": "eqasc_train_7840", "prediction": "all x y.((HighTemperature(x) & Object(y)) -> Combust(y))", "score": 0}
{"id": "eqasc_train_7841", "prediction": "all x.((FineDropletsOfWater(x) & Combustion(x)) -> ExplodesIntoSteam(x))", "score": 0}
{"id": "eqasc_train_7842", "prediction": "all x.(HighTemperature(x) -> CanCauseObjectsToExplose(x))", "score": 0}
{"id": "eqasc_train_7843", "prediction": "all x.(NearSun(x) -> (Temperature(x) & VeryHigh(x)))", "score": 0}
{"id": "eqasc_train_7844", "prediction": "all x y.((Object(x) & NearSun(x) & NearSun(y)) -> CanCombust(x,y))", "score": 0}
{"id": "eqasc_train_7845", "prediction": "all x.(Combustion(x) -> RequiresOxygen(x))", "score": 0}
{"id": "eqasc_train_7846", "prediction": "all x y.((HighTemperature(x) & PresenceOfOxygen(y)) -> CausesBurn(x,y))", "score": 0}
{"id": "eqasc_train_7847", "prediction": "all x.(Dioxin(x) -> ByproductOfCombustion(x))", "score": 0}
{"id": "eqasc_train_7848", "prediction": "all x.(HighTemperature(x) -> CausesDioxins(x))", "score": 0}
{"id": "eqasc_train_7849", "prediction": "(all x.(Combustion(x) -> Power(x)))", "score": 0}
{"id": "eqasc_train_7850", "prediction": "all x.((Temperature(x) & Higher(x)) -> PoweredReaction(x))", "score": 0}
{"id": "eqasc_train_7851", "prediction": "all x.(Incineration(x) -> VeryHighTemperatures(x))", "score": 0}
{"id": "eqasc_train_7852", "prediction": "all x y.((Incineration(x) & Object(y)) -> CausesCombust(x,y))", "score": 0}
{"id": "eqasc_train_7853", "prediction": "all x.(Combustion(x) -> GeneratesToxicFumes(x))", "score": 0}
{"id": "eqasc_train_7854", "prediction": "all x.(HighTemperature(x) -> CanCauseToxicFumes(x))", "score": 0}
{"id": "eqasc_train_7855", "prediction": "all x.(HighTemperatures(x) -> CausesOxidationReaction(x))", "score": 0}
{"id": "eqasc_train_7856", "prediction": "all x.((CombustionOfFuel(x) & AirPollution(x)) -> MainCause(x))", "score": 0}
{"id": "eqasc_train_7857", "prediction": "all x.(HighTemperatures(x) -> CausesAirPollution(x))", "score": 0}
{"id": "eqasc_train_7858", "prediction": "all x.((NaturalPredators(x) & -NaturalPredators(x)) -> IncreasesPopulationSize(x))", "score": 0}
{"id": "eqasc_train_7859", "prediction": "all x.(Population(x) -> LimitedByPredation(x))", "score": 0}
{"id": "eqasc_train_7860", "prediction": "all x.((Predation(x) & -PredationIncreasesSize(x)) -> -PredationIncreasesSize(x))", "score": 0}
{"id": "eqasc_train_7861", "prediction": "all x.(PopulationSize(x) -> (FunctionOfNatality(x) & FunctionOfMortality(x)))", "score": 0}
{"id": "eqasc_train_7862", "prediction": "all x.(NaturalPredators(x) -> CauseOfMortality(x))", "score": 0}
{"id": "eqasc_train_7863", "prediction": "all x.(Population(x) -> (ProducesMoreOffspring(x) & EnvironmentCanSupport(x)))", "score": 0}
{"id": "eqasc_train_7864", "prediction": "all x.((NaturalPredator(x) & -NaturalPredator(x)) -> IncreasesPotentialToProduceMoreOffspring(x))", "score": 0}
{"id": "eqasc_train_7865", "prediction": "all x.(Koala(x) -> -NaturalPredator(x))", "score": 0}
{"id": "eqasc_train_7866", "prediction": "all x.(Koala(x) -> IncreasedPopulationSize(x))", "score": 0}
{"id": "eqasc_train_7867", "prediction": "all x.(PopulationSize(x) -> PredictsExtinctionProbability(x))", "score": 0}
{"id": "eqasc_train_7868", "prediction": "all x.((NaturalPredator(x) & -NaturalPredator(x)) -> ReducesProbabilityOfExtinction(x))", "score": 0}
{"id": "eqasc_train_7869", "prediction": "all x.((Organism(x) & PopulationSizeIncreases(x)) -> BetterAdapted(x))", "score": 0}
{"id": "eqasc_train_7870", "prediction": "all x.((Organism(x) & -NaturalPredators(x)) -> BetterAdapted(x))", "score": 0}
{"id": "eqasc_train_7871", "prediction": "all x.((NewBird(x) & PopulationIncrease(x)) -> ThousandOf(x))", "score": 0}
{"id": "eqasc_train_7872", "prediction": "all x.((NaturalPredator(x) & -NaturalPredator(x)) -> TausendsOfNewBirds(x))", "score": 0}
{"id": "eqasc_train_7873", "prediction": "all x.((IncreaseInPopulation(x) & IncreaseInExpenses(x)) -> IncreaseInExpenses(x))", "score": 0}
{"id": "eqasc_train_7874", "prediction": "all x.((NaturalPredator(x) & -NaturalPredator(x)) -> IncreasesExpenses(x))", "score": 0}
{"id": "eqasc_train_7875", "prediction": "all x.(Nephron(x) -> (StructuralUnit(x) & FunctionalUnit(x)))", "score": 0}
{"id": "eqasc_train_7876", "prediction": "all x y.((Blood(x) & Kidney(y)) -> FilteredIn(x,y))", "score": 0}
{"id": "eqasc_train_7877", "prediction": "all x.(Nephron(x) -> FiltersBlood(x))", "score": 0}
{"id": "eqasc_train_7878", "prediction": "all x.(Nephron(x) -> (StructuralUnit(x) & FunctionalUnit(x) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_train_7879", "prediction": "all x.(Nephron(x) -> (ContainsSystemOfBloodVessels(x) & ContainsSystemOfTumules(x)))", "score": 0}
{"id": "eqasc_train_7880", "prediction": "all x.(Knee(x) -> (ContainsSystemOfBloodVessels(x) & ContainsSystemOfTumules(x)))", "score": 0}
{"id": "eqasc_train_7881", "prediction": "all x y.((Nephron(x) & Fluid(y)) -> ReachesCollectingDuct(x,y))", "score": 0}
{"id": "eqasc_train_7882", "prediction": "all x y.((Nephrons(x) & Kidneys(y)) -> CollectsIntoDucts(x,y))", "score": 0}
{"id": "eqasc_train_7883", "prediction": "all x y.((Mammal(x) & Nephron(y)) -> FormsUrineIn(x,y))", "score": 0}
{"id": "eqasc_train_7884", "prediction": "all x.(Mammal(x) -> FormsUrineInKneel(x))", "score": 0}
{"id": "eqasc_train_7885", "prediction": "all x.(Nephron(x) -> HasGlimmerulus(x))", "score": 0}
{"id": "eqasc_train_7886", "prediction": "all x.(Glimmerulus(x) -> PartOfKneelStructure(x))", "score": 0}
{"id": "eqasc_train_7887", "prediction": "all x.((KneeFunction(x) & Normal(x)) -> RemovedCreatinine(x))", "score": 0}
{"id": "eqasc_train_7888", "prediction": "all x.(Nephron(x) -> RemovesCreatinineFromBody(x))", "score": 0}
{"id": "eqasc_train_7889", "prediction": "all x.(Knee(x) -> ManufacturesUrine(x))", "score": 0}
{"id": "eqasc_train_7890", "prediction": "all x.(Nephron(x) -> (StructuralUnit(x) & FunctionalUnit(x) & Organ(x) & ManufacturesUrine(x)))", "score": 0}
{"id": "eqasc_train_7891", "prediction": "all x.((Thing(x) & HasGlimmerulus(x)) -> StructuralUnitsOfKnees(x))", "score": 0}
{"id": "eqasc_train_7892", "prediction": "all x y.((Nephron(x) & (Diabetes(y) | HighBloodPressure(y))) -> DamageCaused(x,y))", "score": 0}
{"id": "eqasc_train_7893", "prediction": "all x y.((Damage(x) & StructuralUnits(y) & Kidneys(z)) -> CausedByHighBloodPressure(x,y,z))", "score": 0}
{"id": "eqasc_train_7894", "prediction": "all x.(Nephron(x) -> (StructuralUnit(x) & FunctionalUnit(x) & Organ(x) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_train_7895", "prediction": "all x.(Nephron(x) -> (ConsistsOfVascularComponents(x) & ConsistsOfTumulusComponents(x)))", "score": 0}
{"id": "eqasc_train_7896", "prediction": "all x y.((Knee(x) & VascularComponents(y) & TubularComponents(x)) -> StructuralAndFunctionalUnits(x,y))", "score": 0}
{"id": "eqasc_train_7897", "prediction": "all x.(Nephron(x) -> FiltersBlood(x))", "score": 0}
{"id": "eqasc_train_7898", "prediction": "all x.((Soil(x) & Permeable(x)) -> WaterFlowsEasilyThrough(x))", "score": 0}
{"id": "eqasc_train_7899", "prediction": "all x.((Soil(x) & HighPermeability(x)) -> (WaterFlowsFreshly(x) & MayCauseChemicalsToLeach(x)))", "score": 0}
{"id": "eqasc_train_7900", "prediction": "all x.((Soil(x) & Permeable(x)) -> MayCauseChemicalsToLeach(x))", "score": 0}
{"id": "eqasc_train_7901", "prediction": "all x.((Soil(x) & Permeable(x)) -> EasilyFlowsThroughSoil(x))", "score": 0}
{"id": "eqasc_train_7902", "prediction": "all x.((IncreaseInPermeability(x) & FormationAndExpansionOfIce(x)) -> InSoil(x))", "score": 0}
{"id": "eqasc_train_7903", "prediction": "all x y.((IceFormingAndExpandingInSoil(x) & Soil(y)) -> AllowsWaterToFlowThrough(x,y))", "score": 0}
{"id": "eqasc_train_7904", "prediction": "all x.((Soil(x) & Permeable(x)) -> (CompoundOfHydrogen(x) & CompoundOfOxygen(x) & EasilyFlowsThroughSoil(x)))", "score": 0}
{"id": "eqasc_train_7905", "prediction": "all x.(SandySoil(x) -> Permeable(x))", "score": 0}
{"id": "eqasc_train_7906", "prediction": "all x.(Water(x) -> EasilyFlowsThroughSandySoils(x))", "score": 0}
{"id": "eqasc_train_7907", "prediction": "all x.((SepticDrainfield(x) & SlowPermeability(x)) -> PoorSecurity(x))", "score": 0}
{"id": "eqasc_train_7908", "prediction": "all x.(SepticSystem(x) -> (RequiresSoil(x) & WaterFlowsThroughEasily(x)))", "score": 0}
{"id": "eqasc_train_7909", "prediction": "all x.(Permeability(x) -> AffectedByManySoilCharacteristics(x))", "score": 0}
{"id": "eqasc_train_7910", "prediction": "all x.(WaterFlowThroughSoil(x) -> Variable(x))", "score": 0}
{"id": "eqasc_train_7911", "prediction": "all x.(VolcanicSoil(x) -> Permeable(x))", "score": 0}
{"id": "eqasc_train_7912", "prediction": "all x.(Water(x) -> FlowsEasilyThroughVolcanicSoil(x))", "score": 0}
{"id": "eqasc_train_7913", "prediction": "all x.(GourdinSoil(x) -> SlowPermeability(x))", "score": 0}
{"id": "eqasc_train_7914", "prediction": "all x y.((Water(x) & Gourdin(y)) -> EasilyFlowsThrough(x,y))", "score": 0}
{"id": "eqasc_train_7915", "prediction": "all x.((CrossPollination(x) & IncreasesGeneticDiversity(x)) -> IncreasesGeneticDiversity(x))", "score": 0}
{"id": "eqasc_train_7916", "prediction": "all x.((CrossPollination(x) & IncreasesBiodiversity(x)) -> IncreasesBiodiversity(x))", "score": 0}
{"id": "eqasc_train_7917", "prediction": "all x.(GeneticDiversity(x) -> Biodiversity(x))", "score": 0}
{"id": "eqasc_train_7918", "prediction": "all x y.((Hummingbird(x) & Plant(y)) -> IncreasesGeneticDiversity(x,y))", "score": 0}
{"id": "eqasc_train_7919", "prediction": "all x.(CrossPollination(x) -> GeneFlow(x))", "score": 0}
{"id": "eqasc_train_7920", "prediction": "all x y.((GeneFlow(x) & PlantSpecies(y) & SimilarSpecies(x,y)) -> IncreasesGeneticDiversity(x))", "score": 0}
{"id": "eqasc_train_7921", "prediction": "all x.(Evolution(x) -> RequiresGeneticDiversity(x))", "score": 0}
{"id": "eqasc_train_7922", "prediction": "all x.(Evolution(x) -> RequiresCrossPollination(x))", "score": 0}
{"id": "eqasc_train_7923", "prediction": "all x.((CrossPollination(x) & IncreasesEvolution(x)) -> IncreasesEvolution(x))", "score": 0}
{"id": "eqasc_train_7924", "prediction": "all x y.((CrossPollination(x) & Evolution(y)) -> IncreasesRequired(x,y))", "score": 0}
{"id": "eqasc_train_7925", "prediction": "all x y.((Condensing(x) & Gas(y)) -> (ChangesFromToLiquid(x,y) & ReducesHeatEnergy(x)))", "score": 0}
{"id": "eqasc_train_7926", "prediction": "all x.(LowerEnergy(x) -> LowerTemperature(x))", "score": 0}
{"id": "eqasc_train_7927", "prediction": "all x y.((Condensing(x) & Gas(y)) -> (ChangesToLiquid(x,y) & LowersTemperature(x)))", "score": 0}
{"id": "eqasc_train_7928", "prediction": "all x.(Condensation(x) -> ReleasesLatentHeat(x))", "score": 0}
{"id": "eqasc_train_7929", "prediction": "all x y z.((Gas(x) & Liquid(y) & Condensation(z)) -> ChangesInto(x,y,z))", "score": 0}
{"id": "eqasc_train_7930", "prediction": "all x.((Gas(x) & CondensesToFormLiquid(x)) -> AbsorbsHeat(x))", "score": 0}
{"id": "eqasc_train_7931", "prediction": "all x y.((ReducingHeat(x) & Gas(y)) -> ChangesIntoLiquid(x,y))", "score": 0}
{"id": "eqasc_train_7932", "prediction": "all x.(Cloud(x) -> Condensation(x))", "score": 0}
{"id": "eqasc_train_7933", "prediction": "all x y.((Cloud(x) & Gas(y)) -> (ChangesFromToLiquid(x,y) & ReducesHeatEnergy(x)))", "score": 0}
{"id": "eqasc_train_7934", "prediction": "all x.(Heat(x) -> EnergyOfMolecules(x))", "score": 0}
{"id": "eqasc_train_7935", "prediction": "all x y.((Condensing(x) & Gas(y)) -> ChangesToLiquid(x,y))", "score": 0}
{"id": "eqasc_train_7936", "prediction": "all x y.((Boiling(x) & Liquid(y)) -> ChangeOfState(x,y)) & (Condensation(x) -> ReverseChange(x)))", "score": -1}
{"id": "eqasc_train_7937", "prediction": "all x.(Condensing(x) -> OppositeChangeOfStateToBoiling(x))", "score": 0}
{"id": "eqasc_train_7938", "prediction": "all x.((Water(x) & ColdEnd(x)) -> CondensesOn(x,y))", "score": 0}
{"id": "eqasc_train_7939", "prediction": "all x.(Water(x) -> (Gas(x) | Liquid(x)))", "score": 0}
{"id": "eqasc_train_7940", "prediction": "all x.(Condensation(x) -> (InvolvesMolecules(x) & JoinsWithWater(x)))", "score": 0}
{"id": "eqasc_train_7941", "prediction": "all x y.((Gas(x) & Liquid(y) & ReducedHeatEnergy(x)) -> MoleculesJoining(x,y))", "score": 0}
{"id": "eqasc_train_7942", "prediction": "all x y.((Vaporization(x) & Gas(y) & Liquid(y)) -> ChangesByReducingHeatEnergy(x,y))", "score": 0}
{"id": "eqasc_train_7943", "prediction": "all x.(ChangesWaterVaporToLiquid(x) -> ReducesHeatEnergy(x))", "score": 0}
{"id": "eqasc_train_7944", "prediction": "all x y.((WaterVapor(x) & Gas(y)) -> CanChangeToLiquid(x,y))", "score": 0}
{"id": "eqasc_train_7945", "prediction": "all x.(Condensation(x) -> (WaterVaporChange(x) & LiquidWater(x)))", "score": 0}
{"id": "eqasc_train_7946", "prediction": "all x y.((ReducingHeatEnergy(x) & Vapor(y)) -> ChangesIntoWater(x,y))", "score": 0}
{"id": "eqasc_train_7947", "prediction": "all x.(HeatEnergy(x) -> MeasuredInCalories(x))", "score": 0}
{"id": "eqasc_train_7948", "prediction": "all x y.((Calories(x) & Gas(y)) -> LeavesEnergyToFormLiquid(x,y))", "score": 0}
{"id": "eqasc_train_7949", "prediction": "all x.((Plant(x) & RequiresWater(x)) -> GrowsWith(x))", "score": 0}
{"id": "eqasc_train_7950", "prediction": "all x y.((Plant(x) & Water(y)) -> AbsorbedByRoots(x,y))", "score": 0}
{"id": "eqasc_train_7951", "prediction": "all x y.((Roots(x) & Plant(y)) -> HelpsGrow(x,y))", "score": 0}
{"id": "eqasc_train_7952", "prediction": "all x.(Pansy(x) -> (PerennialPlant(x) & LivesLongerThanOneGrowingSeason(x)))", "score": 0}
{"id": "eqasc_train_7953", "prediction": "all x.((Plant(x) & RequiresWater(x)) -> LivesLonger(x))", "score": 0}
{"id": "eqasc_train_7954", "prediction": "all x.((Vegetation(x) & -GetsEnoughWater(x)) -> (Withers(x) & Dies(x)))", "score": 0}
{"id": "eqasc_train_7955", "prediction": "all x.(Rain(x) -> MakesPlantsGrowTall(x))", "score": 0}
{"id": "eqasc_train_7956", "prediction": "all x y.((Rain(x) & Plant(y)) -> HelpsThrive(x,y))", "score": 0}
{"id": "eqasc_train_7957", "prediction": "all x.((Flower(x) & GrowsFromBulbs(x)) -> PrefersCoolWater(x))", "score": 0}
{"id": "eqasc_train_7958", "prediction": "all x.((Plant(x) & RequiresBulbs(x)) -> (Grows(x) & Flowers(x)))", "score": 0}
{"id": "eqasc_train_7959", "prediction": "all x.(Fern(x) -> RequiresWaterToGrow(x))", "score": 0}
{"id": "eqasc_train_7960", "prediction": "all x y.((Plant(x) & Water(y)) -> NeededToKeepGrowing(x,y))", "score": 0}
{"id": "eqasc_train_7961", "prediction": "all x.(Plant(x) -> RequiresWaterToDevelops(x))", "score": 0}
{"id": "eqasc_train_7962", "prediction": "all x.((Seed(x) & Planted(x)) -> Watered(x))", "score": 0}
{"id": "eqasc_train_7963", "prediction": "all x.(Seed(x) -> NeedsWater(x))", "score": 0}
{"id": "eqasc_train_7964", "prediction": "all x.(Bamboo(x) -> RequiresWaterToGrow(x))", "score": 0}
{"id": "eqasc_train_7965", "prediction": "(MolecularFormation(H2) & ForWater(H2))", "score": 0}
{"id": "eqasc_train_7966", "prediction": "all x.((Plant(x) & RequiresH2O(x)) -> Grows(x))", "score": 0}
{"id": "eqasc_train_7967", "prediction": "all x.(FloweringPlant(x) -> Appears(x))", "score": 0}
{"id": "eqasc_train_7968", "prediction": "all x.(Flower(x) -> RequiresWaterToGrow(x))", "score": 0}
{"id": "eqasc_train_7969", "prediction": "all x y.((Water(x) & Plant(y)) -> CarriesNutrients(x,y))", "score": 0}
{"id": "eqasc_train_7970", "prediction": "all x.(Plant(x) -> RequiresNutrientsToGrow(x))", "score": 0}
{"id": "eqasc_train_7971", "prediction": "all x.(FungusSpore(x) -> (DevelopsIntoNewHaploidIndividuals(x) & -Fertilized(x)))", "score": 0}
{"id": "eqasc_train_7972", "prediction": "all x.(Bacteria(x) -> Haploid(x))", "score": 0}
{"id": "eqasc_train_7973", "prediction": "all x.(FungusSpore(x) -> (DevelopsIntoBacteria(x) & -Fertilized(x)))", "score": 0}
{"id": "eqasc_train_7974", "prediction": "all x y.((MushroomSpore(x) & Spore(y)) -> (CanDevelopsIntoNewHaploidIndividuals(x,y) & -Fertilized(y)))", "score": 0}
{"id": "eqasc_train_7975", "prediction": "all x.(HaploidCell(x) -> MultipliesAsexually(x))", "score": 0}
{"id": "eqasc_train_7976", "prediction": "all x.(FungusSpore(x) -> CanMultiplyThroughMitosis(x))", "score": 0}
{"id": "eqasc_train_7977", "prediction": "all x.(Mushroom(x) -> (FleshyFungus(x) & ReproducesThroughSexualMating(x) & Spores(x)))", "score": 0}
{"id": "eqasc_train_7978", "prediction": "all x.(Mushroom(x) -> (CanDevelopsIntoNewHaploidIndividuals(x) & -Fertilized(x)))", "score": 0}
{"id": "eqasc_train_7979", "prediction": "all x.(Fungus(x) -> ReproducesByReleaseOfSpores(x))", "score": 0}
{"id": "eqasc_train_7980", "prediction": "all x y.((ReleaseOfSpores(x) & Reproduction(y)) -> (DevelopsIntoNewHaploidIndividuals(x,y) & -Fertilized(x)))", "score": 0}
{"id": "eqasc_train_7981", "prediction": "all x.(Fungus(x) -> (Filmous(x) & Multicellular(x) & Haplopod(x)))", "score": 2}
{"id": "eqasc_train_7982", "prediction": "all x.(Fungus(x) -> Multicellular(x))", "score": 2}
{"id": "eqasc_train_7983", "prediction": "all x.((Candidat(x) | Aspergillus(x)) -> Fungus(x))", "score": 0}
{"id": "eqasc_train_7984", "prediction": "all x.((Spore(x) & Candida(x) & Aspergillus(x)) -> CanDevelopIntoNewHaploidIndividuals(x))", "score": 0}
{"id": "eqasc_train_7985", "prediction": "all x.(MoldSpore(x) -> (DevelopsIntoNewHaploidIndividuals(x) & -Fertilized(x)))", "score": 0}
{"id": "eqasc_train_7986", "prediction": "all x y z.((FaultingOfRock(x) & EarthsCrust(y) & EarthsCrust(z)) -> CausesEarthquakes(x))", "score": 0}
{"id": "eqasc_train_7987", "prediction": "all x.(Earthquake(x) -> CanCauseTsunami(x))", "score": 0}
{"id": "eqasc_train_7988", "prediction": "all x.(FaultingRock(x) -> CausesTsunami(x))", "score": 0}
{"id": "eqasc_train_7989", "prediction": "all x.((Fault(x) & CracksInEarthsCrust(x) & (Move(x) | Slip(x))) -> ProducesEarthquakes(x))", "score": 0}
{"id": "eqasc_train_7990", "prediction": "all x.(Earthquake(x) -> (FaultsMove(x) & HappensWhen(x,y)))", "score": 0}
{"id": "eqasc_train_7991", "prediction": "all x y.((FaultingInEarthsCrust(x) & EarthsCrust(y)) -> CanCauseTsunami(x,y))", "score": 0}
{"id": "eqasc_train_7992", "prediction": "all x.(EarthquakeTremor(x) -> (Mild(x) | Moderate(x)) & FrequentOccursInParkAndPreserve(x)))", "score": -1}
{"id": "eqasc_train_7993", "prediction": "all x.(FaultingOfRock(x) -> CausesTermors(x))", "score": 0}
{"id": "eqasc_train_7994", "prediction": "all x.((FaultMovement(x) & Crumb(x)) -> ResponsibleForEarthquakes(x))", "score": 0}
{"id": "eqasc_train_7995", "prediction": "all x.((Earthquake(x) | Volcano(x)) -> ViolentProofOfShiftingCrust(x))", "score": 0}
{"id": "eqasc_train_7996", "prediction": "all x y.((FaultingRock(x) & Earth(y)) -> CausesShiftingCrust(x,y))", "score": 0}
{"id": "eqasc_train_7997", "prediction": "all x.(Earthquake(x) -> CausedByMovementsOnFaults(x))", "score": 0}
{"id": "eqasc_train_7998", "prediction": "all x.(FaultMovement(x) -> FormsEarthquakes(x))", "score": 0}
{"id": "eqasc_train_7999", "prediction": "all x y.((Rock(x) & EarthCrust(y)) -> FaultingIn(x,y))", "score": 0}
{"id": "eqasc_train_8000", "prediction": "all x.(ThrustFault(x) -> (CompressionalForces(x) & EarthsCrust(x)))", "score": 0}
{"id": "eqasc_train_8001", "prediction": "all x.(CompressionalForce(x) -> CausesEarthquakes(x))", "score": 0}
{"id": "eqasc_train_8002", "prediction": "all x.(EarthquakeTremor(x) -> (ShattersWindowGlass(x) & MilesFromEpicenter(x)))", "score": 0}
{"id": "eqasc_train_8003", "prediction": "all x y z.((FaultingOfRock(x) & EarthsCrust(y) & EarthsCrust(z)) -> (ShattersGlassWindows(x,y,z) & ForMiles(x)))", "score": 0}
{"id": "eqasc_train_8004", "prediction": "all x.(Earthquake(x) -> ShakingSuddenGround(x))", "score": 0}
{"id": "eqasc_train_8005", "prediction": "all x y.((FaultingRock(x) & EarthsCrust(y)) -> CausesSuddenShakingOfGround(x,y))", "score": 0}
{"id": "eqasc_train_8006", "prediction": "all x.((Earthquake(x) | Tremor(x)) -> CommonInYellowstone(x))", "score": 0}
{"id": "eqasc_train_8007", "prediction": "all x y z.((Rock(x) & EarthsCrust(y) & EarthsCrust(z)) -> CausesTremors(x,y,z))", "score": 0}
{"id": "eqasc_train_8008", "prediction": "all x.(Fault(x) -> (ProducedByStress(x) & (CompressRocks(x) | ExtendRocks(x))))", "score": 0}
{"id": "eqasc_train_8009", "prediction": "all x.((StressInEarthsCrust(x) & CausesEarthquakes(x)) -> CausesEarthquakes(x))", "score": 0}
{"id": "eqasc_train_8010", "prediction": "all x.(FaultZone(x) -> (Plate(x) & InEarth(x) & Slide(x) & Collide(x)))", "score": 0}
{"id": "eqasc_train_8011", "prediction": "all x y z.((Plate(x) & Earth(y) & Plate(z) & Collide(x,y)) -> CausesEarthquakes(x))", "score": 0}
{"id": "eqasc_train_8012", "prediction": "all x.(FaultingOfRock(x) -> (EarthsCrust(x) & VeryLethal(x)))", "score": 0}
{"id": "eqasc_train_8013", "prediction": "all x.(Earthquake(x) -> (GeneratesPWaves(x) & GeneratesSWaves(x) & TravelsThroughoutEarth(x)))", "score": 0}
{"id": "eqasc_train_8014", "prediction": "all x y.((PWaves(x) & SWaves(y)) -> (TracedBackToFaulting(x,y) & EarthsCrust(x)))", "score": 0}
{"id": "eqasc_train_8015", "prediction": "all x y z.((Valley(x) & River(y) & River(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_train_8016", "prediction": "all x y.((Euphrates(x) & Valley(y)) -> Forms(x,y))", "score": 0}
{"id": "eqasc_train_8017", "prediction": "all x.(River(x) -> FlowsInWildlife(x))", "score": 0}
{"id": "eqasc_train_8018", "prediction": "all x.(Valley(x) -> FormedByFlowingInWildlife(x))", "score": 0}
{"id": "eqasc_train_8019", "prediction": "all x.(River(x) -> (CausesErosion(x) & TransportsWeather(x) & TransportsSoil(x)))", "score": 0}
{"id": "eqasc_train_8020", "prediction": "all x.(Valley(x) -> (FormedByErosion(x) & Erosion(x)))", "score": 0}
{"id": "eqasc_train_8021", "prediction": "all x.(Canyon(x) -> (FormedAsConsequenceOfRiverErosion(x)))", "score": 0}
{"id": "eqasc_train_8022", "prediction": "all x.(Valley(x) -> FormedByErosion(x))", "score": 0}
{"id": "eqasc_train_8023", "prediction": "all x.(FastFlowingRiver(x) -> (PicksUpMorePebbles(x) & PicksUpMoreSand(x) & CausesErosion(x)))", "score": 0}
{"id": "eqasc_train_8024", "prediction": "all x.(Valley(x) -> FormedByErosion(x))", "score": 0}
{"id": "eqasc_train_8025", "prediction": "all x.(ValleyFloor(x) -> OldLakeBeds(x))", "score": 0}
{"id": "eqasc_train_8026", "prediction": "all x.(LakeBed(x) -> (FormedByFlowingRiver(x) & OftenFormedBy(x)))", "score": 0}
{"id": "eqasc_train_8027", "prediction": "(Examples: NapaValley(x) & SonomaValley(x))", "score": -1}
{"id": "eqasc_train_8028", "prediction": "all x y z.((Napa(x) & Sonoma(y) & River(z)) -> (FormedBy(x,z) & Flowing(z)))", "score": 0}
{"id": "eqasc_train_8029", "prediction": "(all x.(Spring(x) -> FlowsRiver(x)))", "score": 0}
{"id": "eqasc_train_8030", "prediction": "all x y.((Spring(x) & Output(y)) -> CanFormValley(x,y))", "score": 0}
{"id": "eqasc_train_8031", "prediction": "all x y z.((Water(x) & Rock(y) & Valley(z)) -> (Erodes(x,y) & FlowsOver(y,z) & CreatesValley(z)))", "score": 0}
{"id": "eqasc_train_8032", "prediction": "all x.(Playing(x) -> (Mammal(x) | Animal(x)) & LearnsBehavior(x)))", "score": -1}
{"id": "eqasc_train_8033", "prediction": "all x.(Game(x) -> (ForFun(x) & ToPlay(x) & FolksAreFun(x)))", "score": 0}
{"id": "eqasc_train_8034", "prediction": "all x.((GamesForFun(x) & Mammal(x) & Animal(x)) -> LearnsBehavior(x))", "score": 0}
{"id": "eqasc_train_8035", "prediction": "all x.(Mammal(x) -> (IncludesDogs(x) | IncludesCats(x) | IncludesHorses(x)))", "score": 0}
{"id": "eqasc_train_8036", "prediction": "all x.(Playing(x) -> DogsLearnBehavior(x))", "score": 0}
{"id": "eqasc_train_8037", "prediction": "all x y.((Seal(x) & Human(y)) -> Mammal(x))", "score": 0}
{"id": "eqasc_train_8038", "prediction": "all x.(Playing(x) -> (ManyMeets(x) & LearnsBehavior(x)))", "score": 0}
{"id": "eqasc_train_8039", "prediction": "all x.(Mammal(x) -> (Lion(x) | Bear(x) | Dog(x) | Horse(x) | Cattle(x) | Antelope(x)))", "score": 0}
{"id": "eqasc_train_8040", "prediction": "all x.(Lion(x) -> Plays(x))", "score": 0}
{"id": "eqasc_train_8041", "prediction": "all x.(Animal(x) -> (BehaviorsInVarietyOfModes(x) & EnhancesSurvival(x) & EnhancesReproduction(x)))", "score": 0}
{"id": "eqasc_train_8042", "prediction": "all x.(Animal(x) -> LearnsToBehaveToIncreaseSurvivalChances(x))", "score": 0}
{"id": "eqasc_train_8043", "prediction": "all x.(Pug(x) -> (Mammal(x) & MammalShed(x)))", "score": 1}
{"id": "eqasc_train_8044", "prediction": "all x.(Pug(x) -> LearnsBehavior(x))", "score": 0}
{"id": "eqasc_train_8045", "prediction": "all x.(Child(x) -> (LearnsThroughPlay(x) & LearnsInOtherWays(x)))", "score": 0}
{"id": "eqasc_train_8046", "prediction": "all x.((Child(x) | Animal(x)) -> LearnsInManyMeasures(x))", "score": 0}
{"id": "eqasc_train_8047", "prediction": "all x.(Playing(x) -> LearnsBehavior(x))", "score": 0}
{"id": "eqasc_train_8048", "prediction": "all x.((Person(x) & ComplexInteraction(x)) -> BehavesAsResult(x))", "score": 0}
{"id": "eqasc_train_8049", "prediction": "all x y z.((Playing(x) & Mammal(y) & Animal(z)) -> ComplexInteraction(x,y,z))", "score": 0}
{"id": "eqasc_train_8050", "prediction": "all x.(Acting(x) -> Behaving(x))", "score": 0}
{"id": "eqasc_train_8051", "prediction": "all x.(Playing(x) -> (Mammal(x) | Animal(x)) & LearnsHowToAct(x)))", "score": -1}
{"id": "eqasc_train_8052", "prediction": "all x.((Animal(x) & Learning(x) & Memory(x)) -> (Survive(x) & Thrive(x)))", "score": 0}
{"id": "eqasc_train_8053", "prediction": "all x.(Playing(x) -> (AnimalImprovesSurvivalAndThrive(x) & AnimalImprovesSurvivalAndThrive(x)))", "score": 0}
{"id": "eqasc_train_8054", "prediction": "all x.((Puppie(x) | Kitten(x)) -> CuriousAnimal(x))", "score": 0}
{"id": "eqasc_train_8055", "prediction": "all x.(Kitten(x) -> (LearnsBehaviorThroughPlay(x) & ThroughPlay(x)))", "score": 0}
{"id": "eqasc_train_8056", "prediction": "all x.(Dog(x) -> LikesToPlayFetch(x))", "score": 0}
{"id": "eqasc_train_8057", "prediction": "all x.(Fetch(x) -> DogLearnsHowToBehave(x))", "score": 0}
{"id": "eqasc_train_8058", "prediction": "all x.(Whale(x) -> AquaticMammal(x))", "score": 0}
{"id": "eqasc_train_8059", "prediction": "all x y.((Whale(x) & Whale(y)) -> LearnsBehavior(x,y))", "score": 0}
{"id": "eqasc_train_8060", "prediction": "all x.(Mammal(x) -> (LearnsByHavingFun(x) & BehavesByHavingFun(x)))", "score": 0}
{"id": "eqasc_train_8061", "prediction": "all x y.((Planet(x) & TooHot(x)) -> -SustainsLife(y))", "score": 0}
{"id": "eqasc_train_8062", "prediction": "all x.((Planet(x) & TooCloseToStar(x)) -> TooHotForLiquidWater(x))", "score": 0}
{"id": "eqasc_train_8063", "prediction": "all x y.((Planet(x) & Star(y) & TooCloseTo(x,y)) -> -SustainsLife(x,y))", "score": 0}
{"id": "eqasc_train_8064", "prediction": "all x.((InnerPlanet(x) & Venus(x)) -> SeeringHeatOfSun(x))", "score": 0}
{"id": "eqasc_train_8065", "prediction": "all x.((Venus(x) & TooHotToSupportLife(x)) -> TooHotToSupportLife(x))", "score": 0}
{"id": "eqasc_train_8066", "prediction": "all x.((Venus(x) & RunawayGreenhouseEffect(x)) -> Hot(x))", "score": 0}
{"id": "eqasc_train_8067", "prediction": "all x.((Venus(x) & RunawayGreenhouseEffect(x)) -> UnlikelyToSupportLife(x))", "score": 0}
{"id": "eqasc_train_8068", "prediction": "Venus is the HottestPlanet(x)", "score": -1}
{"id": "eqasc_train_8069", "prediction": "all x.(Venus(x) -> -SupportsLife(x))", "score": 0}
{"id": "eqasc_train_8070", "prediction": "all x.((InnerPlanet(x) & CloseToStar(x)) -> TooHot(x))", "score": 0}
{"id": "eqasc_train_8071", "prediction": "all x y.((Planet(x) & Star(y) & TooCloseTo(x,y)) -> -SustainLife(x))", "score": 0}
{"id": "eqasc_train_8072", "prediction": "all x.((Sustainable(x) & Organic(x)) -> BalancedEcosystems(x))", "score": 0}
{"id": "eqasc_train_8073", "prediction": "all x.((Planet(x) & TooHot(x)) -> -BalancedEcosystem(x))", "score": 0}
{"id": "eqasc_train_8074", "prediction": "all x.((GlobalWarming(x) & HumanEmissionsOfHeatTrappingGases(x)) -> ChangesPlanetsClimate(x))", "score": 0}
{"id": "eqasc_train_8075", "prediction": "all x.(GlobalWarmingContinues(x) -> Earth MayNo longerSupportLife(x))", "score": -1}
{"id": "eqasc_train_8076", "prediction": "all x.((Mars(x) & TooHot(x)) -> -SupportsLife(x))", "score": 0}
{"id": "eqasc_train_8077", "prediction": "all x.(Mercury(x) -> (CloseToSun(x) & ExtremelyHot(x)))", "score": 0}
{"id": "eqasc_train_8078", "prediction": "all x y.((Planet(x) & Sun(y) & TooCloseTo(x,y)) -> -SustainLife(x,y))", "score": 0}
{"id": "eqasc_train_8079", "prediction": "all x y.((Sunlight(x) & Atmosphere(y)) -> HeatsSurface(x,y))", "score": 0}
{"id": "eqasc_train_8080", "prediction": "all x.((Sunlight(x) & TooMuchSunlight(x)) -> -SustainsLife(x))", "score": 0}
{"id": "eqasc_train_8081", "prediction": "all x y.((Exercise(x) & Human(y)) -> PositiveImpactOnHealth(x,y))", "score": 0}
{"id": "eqasc_train_8082", "prediction": "all x.(RegularExercise(x) -> SleepPromoter(x))", "score": 0}
{"id": "eqasc_train_8083", "prediction": "all x.(Sleep(x) -> GoodForHumanHealth(x))", "score": 0}
{"id": "eqasc_train_8084", "prediction": "all x.(Exercise(x) -> BuildsMuscle(x))", "score": 0}
{"id": "eqasc_train_8085", "prediction": "all x.(Muscle(x) -> PositiveImpactOnHumanHealth(x))", "score": 0}
{"id": "eqasc_train_8086", "prediction": "all x.(Prevention(x) -> (KeyToHealth(x) & KeyToLensity(x) & KeyToReproduction(x)))", "score": 0}
{"id": "eqasc_train_8087", "prediction": "all x.(Exercise(x) -> (PositiveImpactOnHumanLensity(x) & PositiveImpactOnReproduction(x)))", "score": 0}
{"id": "eqasc_train_8088", "prediction": "all x y.((Weightlifting(x) & Human(y)) -> PositiveImpactOnHealth(x,y))", "score": 0}
{"id": "eqasc_train_8089", "prediction": "all x.(Workout(x) -> (IntellectualExercise(x) | PhysicalExercise(x)))", "score": 0}
{"id": "eqasc_train_8090", "prediction": "all x y.((Workout(x) & Human(y)) -> PositiveImpactOnHealth(x,y))", "score": 0}
{"id": "eqasc_train_8091", "prediction": "all x.(Movement(x) -> Exercise(x))", "score": 0}
{"id": "eqasc_train_8092", "prediction": "all x.(Movement(x) -> PositiveImpactOnHumanHealth(x))", "score": 0}
{"id": "eqasc_train_8093", "prediction": "all x.(Exercise(x) -> PositiveImpactOnHealth(x))", "score": 0}
{"id": "eqasc_train_8094", "prediction": "all x.((Running(x) | Exercise(x)) -> Thrilling(x))", "score": 0}
{"id": "eqasc_train_8095", "prediction": "all x.(Running(x) -> PositiveEffectOnHumanHealth(x))", "score": 0}
{"id": "eqasc_train_8096", "prediction": "all x.(EnduranceExercise(x) -> (Cycling(x) | Running(x) | Swimming(x)))", "score": 0}
{"id": "eqasc_train_8097", "prediction": "all x y.((Swimming(x) & Human(y)) -> PositiveImpactOnHealth(x,y))", "score": 0}
{"id": "eqasc_train_8098", "prediction": "all x.(Exercise(x) -> (Movement(x) & DesignedToWorkMuscleOrMuscles(x)))", "score": 0}
{"id": "eqasc_train_8099", "prediction": "all x y.((Movement(x) & (WorksMuscle(x,y) | PositiveImpactOnHumanHealth(x,y))) -> WorksMuscle(x,y))", "score": 0}
{"id": "eqasc_train_8100", "prediction": "all x.((Exercise(x) & ModerateExercise(x) & Walking(x)) -> Recommended(x))", "score": 0}
{"id": "eqasc_train_8101", "prediction": "all x y.((Walking(x) & Human(y)) -> PositiveImpactOnHealth(x,y))", "score": 0}
{"id": "eqasc_train_8102", "prediction": "all x y.((Glucose(x) & Muscles(y)) -> PositiveImpactOnHealth(x,y))", "score": 0}
{"id": "eqasc_train_8103", "prediction": "all x.(Sport(x) -> GoodFormOfExercise(x))", "score": 0}
{"id": "eqasc_train_8104", "prediction": "all x y.((Sport(x) & Human(y)) -> PositiveImpactOnHealth(x,y))", "score": 0}
{"id": "eqasc_train_8105", "prediction": "all x.(Exercise(x) -> CriticalToBoneHealth(x))", "score": 0}
{"id": "eqasc_train_8106", "prediction": "all x.((Bone(x) & Exercise(x)) -> KeepsHealthy(x))", "score": 0}
{"id": "eqasc_train_8107", "prediction": "all x y.((Community(x) & Population(y)) -> ConsistsOfSpecies(x,y))", "score": 0}
{"id": "eqasc_train_8108", "prediction": "all x.(Biodiversity(x) -> (NumberOfSpecies(x) & NumberOfSpecies(x) & NumberOfSpecies(x)))", "score": 0}
{"id": "eqasc_train_8109", "prediction": "all x.(Community(x) -> (exists y.(Population(y) & Biodiverse(y)) & ConsistsOf(x,y))))", "score": -1}
{"id": "eqasc_train_8110", "prediction": "all x.(Herons(x) -> IndicatesWetlandCommunities(x))", "score": 0}
{"id": "eqasc_train_8111", "prediction": "all x y z.((Wetland(x) & Heron(y) & Species(z)) -> (Population(x,y) & Population(x,z)))", "score": 0}
{"id": "eqasc_train_8112", "prediction": "all x.(Human(x) -> DomesticatedSpecies(x))", "score": 0}
{"id": "eqasc_train_8113", "prediction": "all x y.((Community(x) & HumanPopulation(y)) -> ConsistsOfPopulations(x,y))", "score": 0}
{"id": "eqasc_train_8114", "prediction": "all x.(Species(x) -> CanSplitIntoTwoSpecies(x))", "score": 0}
{"id": "eqasc_train_8115", "prediction": "all x y.((Community(x) & Population(y)) -> (ConsistsOf(x,y) & Population(x,y) & SplitsIntoTwo(x)))", "score": 0}
{"id": "eqasc_train_8116", "prediction": "all x.(Species(x) -> GeneticDiversity(x))", "score": 0}
{"id": "eqasc_train_8117", "prediction": "all x.(Community(x) -> (PopulationsOfGeneticDiverse(x) & GeneticDiverse(x)))", "score": 0}
{"id": "eqasc_train_8118", "prediction": "all x y.((Community(x) & Animal(y)) -> exists z.(Population(z) & Animal(z) & Population(x,z))))", "score": -1}
{"id": "eqasc_train_8119", "prediction": "all x.(Animal(x) -> CommonToManySpecies(x))", "score": 0}
{"id": "eqasc_train_8120", "prediction": "all x y.((Community(x) & Animal(y)) -> ConsistsOfPopulations(x,y))", "score": 0}
{"id": "eqasc_train_8121", "prediction": "all x.(WorksTogether(x) -> BoundedToSucceed(x))", "score": 0}
{"id": "eqasc_train_8122", "prediction": "all x y.((Population(x) & Population(y) & WorksTogether(x,y)) -> CanSucceed(x,y))", "score": 0}
{"id": "eqasc_train_8123", "prediction": "all x y.((Eyes(x) & Animal(y) & SensingLight(x,y)) -> UsedForSeenBy(x,y))", "score": 0}
{"id": "eqasc_train_8124", "prediction": "all x.(NocturnalAnimal(x) -> LightSensitiveEyes(x))", "score": 0}
{"id": "eqasc_train_8125", "prediction": "all x.(NocturnalAnimal(x) -> (SensitiveEyes(x) & UsedForSeeing(x)))", "score": 0}
{"id": "eqasc_train_8126", "prediction": "all x.(Vision(x) -> OutTheEyes(x))", "score": 0}
{"id": "eqasc_train_8127", "prediction": "all x.(Vision(x) -> UsedForSeeing(x))", "score": 0}
{"id": "eqasc_train_8128", "prediction": "all x.(Monkey(x) -> UsesEyesToSenseLight(x))", "score": 0}
{"id": "eqasc_train_8129", "prediction": "all x y.((Light(x) & Eye(y)) -> EntersThroughPupil(x,y))", "score": 0}
{"id": "eqasc_train_8130", "prediction": "all x y.((Pupil(x) & Animal(y) & SensingLight(x,y)) -> UsedForSeenBy(x,y))", "score": 0}
{"id": "eqasc_train_8131", "prediction": "all x y.((Eyes(x) & Pig(y) & SensingLight(x,y)) -> UsedForSeenBy(x,y))", "score": 0}
{"id": "eqasc_train_8132", "prediction": "all x.(Wolf(x) -> (UsesTeeth(x) & UsesFeet(x) & UsesEyes(x) & UsesNase(x) & UsesEars(x)))", "score": 0}
{"id": "eqasc_train_8133", "prediction": "all x.(Wolf(x) -> HuntsBySensesLight(x))", "score": 0}
{"id": "eqasc_train_8134", "prediction": "all x.(Mammal(x) -> (Animal(x) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_train_8135", "prediction": "all x.(Mammal(x) -> UsesEyesToSenseLight(x))", "score": 0}
{"id": "eqasc_train_8136", "prediction": "all x.(Bobcat(x) -> (EatsMousesVolesSquirrelsRabbitsDeer(x)))", "score": 0}
{"id": "eqasc_train_8137", "prediction": "all x.(Vole(x) -> (UsesEyes(x) & SenseLight(x) & CanSee(x)))", "score": 0}
{"id": "eqasc_train_8138", "prediction": "all x.((Fire(x) | Light(x)) -> PerceivedThroughSenseOfVision(x))", "score": 0}
{"id": "eqasc_train_8139", "prediction": "all x y.((Eyes(x) & Animal(y)) -> UsedForSeeingBySenseOfVision(x,y))", "score": 0}
{"id": "eqasc_train_8140", "prediction": "all x y.((Eyes(x) & Goat(y) & SensingLight(x,y)) -> UsedForSeenBy(x,y))", "score": 0}
{"id": "eqasc_train_8141", "prediction": "all x.(InfraredLight(x) -> InvisibleToEye(x))", "score": 0}
{"id": "eqasc_train_8142", "prediction": "all x.(Animal(x) -> -SeesInfraredLight(x))", "score": 0}
{"id": "eqasc_train_8143", "prediction": "all x.(VisibleAndInvisibleLight(x) -> EnergyInFormOfElectromagneticWaves(x))", "score": 0}
{"id": "eqasc_train_8144", "prediction": "all x y.((Eye(x) & Animal(y)) -> SensingElectromagneticWaves(x,y))", "score": 0}
{"id": "eqasc_train_8145", "prediction": "all x.(LightWaves(x) -> ElectromagneticWaves(x))", "score": 0}
{"id": "eqasc_train_8146", "prediction": "all x y.((Eyes(x) & Animal(y) & SensingElectromagneticWaves(x,y)) -> UsedForSeenBy(x,y))", "score": 0}
{"id": "eqasc_train_8147", "prediction": "all x.(IncreasingHeat(x) -> ThermalExpansion(x))", "score": 0}
{"id": "eqasc_train_8148", "prediction": "all x.((TemperatureIncrease(x) & HeatFlowIntoSystem(x)) -> IncreaseInTemperature(x))", "score": 0}
{"id": "eqasc_train_8149", "prediction": "all x y.((FlowOfHeat(x) & System(y)) -> CausesThermalExpansion(x,y))", "score": 0}
{"id": "eqasc_train_8150", "prediction": "all x.(ThemejorityOfSeaLevelRise(x) -> ThermalExpansion(x))", "score": 0}
{"id": "eqasc_train_8151", "prediction": "all x.(SeaLevelRise(x) -> IncreasedHeat(x))", "score": 0}
{"id": "eqasc_train_8152", "prediction": "all x y.((Fire(x) & ThermalExpansion(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_train_8153", "prediction": "all x.((Gasket(x) & ThermalExpansion(x)) -> IncreasesMisalignmentProblem(x))", "score": 0}
{"id": "eqasc_train_8154", "prediction": "all x.((Gasket(x) & IncreasesHeat(x)) -> IncreasesMisalignmentProblems(x))", "score": 0}
{"id": "eqasc_train_8155", "prediction": "all x.(ThermalExpansion(x) -> CanCauseSeriousProblems(x))", "score": 0}
{"id": "eqasc_train_8156", "prediction": "all x.(IncreasingHeat(x) -> CausesSeriousProblems(x))", "score": 0}
{"id": "eqasc_train_8157", "prediction": "all x.(Heating(x) -> TooHot(x))", "score": 0}
{"id": "eqasc_train_8158", "prediction": "all x.((Object(x) & Hot(x)) -> ThermalExpansion(x))", "score": 0}
{"id": "eqasc_train_8159", "prediction": "all x.(Fire(x) -> HeatsUpwards(x))", "score": 0}
{"id": "eqasc_train_8160", "prediction": "all x y.((Fire(x) & Object(y) & Underside(x,y)) -> CausesThermalExpansion(x,y))", "score": 0}
{"id": "eqasc_train_8161", "prediction": "all x.(Heat(x) -> CausedByMolecules(x))", "score": 0}
{"id": "eqasc_train_8162", "prediction": "all x.(Molecule(x) -> CausesThermalExpansion(x))", "score": 0}
{"id": "eqasc_train_8163", "prediction": "all x.((ThermalFossilFasturing(x) & ThermalExpansionDamage(x)) -> SignificantlyDifferent(x,y))", "score": 0}
{"id": "eqasc_train_8164", "prediction": "all x.(Expansion(x) -> CausesFatigue(x))", "score": 0}
{"id": "eqasc_train_8165", "prediction": "all x y.((SeaLevel(x) & Ocean(y) & Glacier(z)) -> (ProjectsToRise(x,y) & ThermalExpansion(x,z) & Melting(x,z)))", "score": 0}
{"id": "eqasc_train_8166", "prediction": "all x.(Heat(x) -> SeaLevelRise(x))", "score": 0}
{"id": "eqasc_train_8167", "prediction": "all x.(ThermalBurn(x) -> CausedByExpositionToHeat(x))", "score": 0}
{"id": "eqasc_train_8168", "prediction": "all x.(ThermalExpansion(x) -> CausesBurns(x))", "score": 0}
{"id": "eqasc_train_8169", "prediction": "all x.(LiquidProtein(x) -> HeatsHotAirBalloons(x))", "score": 0}
{"id": "eqasc_train_8170", "prediction": "all x y.((LiquidProtein(x) & HotAirBalloon(y)) -> Expands(x,y))", "score": 0}
{"id": "eqasc_train_8171", "prediction": "all x.(Motion(x) -> IncreasesBodyHeat(x))", "score": 0}
{"id": "eqasc_train_8172", "prediction": "all x.(Motion(x) -> ThermalExpansion(x))", "score": 0}
{"id": "eqasc_train_8173", "prediction": "all x.(Fish(x) -> (CentralizedNervousSystem(x) & HasBrain(x)))", "score": 2}
{"id": "eqasc_train_8174", "prediction": "all x.(Fish(x) -> Swims(x))", "score": 0}
{"id": "eqasc_train_8175", "prediction": "all x.((Creature(x) & CanSwim(x)) -> CentralizedNervousSystem(x) & HasBrain(x))", "score": 0}
{"id": "eqasc_train_8176", "prediction": "all x.(Salmon(x) -> (CentralizedNervousSystem(x) & Brain(x)))", "score": 0}
{"id": "eqasc_train_8177", "prediction": "all x.(Brain(x) -> (ImportantTasks(x) & Thinking(x)))", "score": 0}
{"id": "eqasc_train_8178", "prediction": "all x.(Fish(x) -> Thinks(x))", "score": 0}
{"id": "eqasc_train_8179", "prediction": "all x.((Bass(x) | Salmon(x)) -> (CentralizedNervousSystem(x) & HasBrain(x)))", "score": 0}
{"id": "eqasc_train_8180", "prediction": "all x.(Fish(x) -> (Bass(x) | Crappie(x) | Catfish(x)))", "score": 0}
{"id": "eqasc_train_8181", "prediction": "all x.(Crappie(x) -> (CentralizedNervousSystem(x) & HasBrain(x)))", "score": 0}
{"id": "eqasc_train_8182", "prediction": "all x.(Fish(x) -> (IncludesTrout(x) | IncludesOtherFish(x)))", "score": 0}
{"id": "eqasc_train_8183", "prediction": "all x.(Trout(x) -> (CentralizedNervousSystem(x) & HasBrain(x)))", "score": 0}
{"id": "eqasc_train_8184", "prediction": "all x.(Bass(x) -> (CentralizedNervousSystem(x) & Brain(x)))", "score": 0}
{"id": "eqasc_train_8185", "prediction": "all x.(Amphetamine(x) -> StimulatesCentralNervousSystem(x))", "score": 0}
{"id": "eqasc_train_8186", "prediction": "all x.(Fish(x) -> StimulatesWithAmphetamines(x))", "score": 0}
{"id": "eqasc_train_8187", "prediction": "all x.(Reptile(x) -> (HasBrain(x) & HasNervousSystem(x)))", "score": 1}
{"id": "eqasc_train_8188", "prediction": "all x.((Fish(x) | Reptile(x)) -> HasBrain(x))", "score": 1}
{"id": "eqasc_train_8189", "prediction": "all x.(Shark(x) -> Fish(x))", "score": 1}
{"id": "eqasc_train_8190", "prediction": "all x.(Shark(x) -> (CentralizedNervousSystem(x) & HasBrain(x)))", "score": 1}
{"id": "eqasc_train_8191", "prediction": "all x.(Vertebrates(x) -> (DefinitedNervousSystem(x) & DevelopedNervousSystem(x)))", "score": 0}
{"id": "eqasc_train_8192", "prediction": "all x.(Fish(x) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_train_8193", "prediction": "all x.(EarthwormBurrow(x) -> (HelpsAerateSoil(x) & GoodForPlants(x)))", "score": 0}
{"id": "eqasc_train_8194", "prediction": "all x y.((Aeration(x) & Soil(y)) -> (BreaksUp(x,y) & AllowsWaterToPenetrate(x,y)))", "score": 0}
{"id": "eqasc_train_8195", "prediction": "all x.(EarthwormBurrow(x) -> (AllowsWaterToPenetrateSoil(x) & GoodForPlants(x)))", "score": 0}
{"id": "eqasc_train_8196", "prediction": "all x.(Dirt(x) -> MisplacedSoil(x))", "score": 0}
{"id": "eqasc_train_8197", "prediction": "all x.(EarthwormBurrow(x) -> (HelpsAerateDirt(x) & GoodForPlants(x)))", "score": 0}
{"id": "eqasc_train_8198", "prediction": "all x y.((Aeration(x) & Soil(y)) -> ChangesChemistry(x,y))", "score": 0}
{"id": "eqasc_train_8199", "prediction": "all x y.((Earthworm(x) & Soil(y)) -> ChangesChemistry(x,y))", "score": 0}
{"id": "eqasc_train_8200", "prediction": "all x y.((Insect(x) & Earthworm(y)) -> (MixingSoil(x,y) & AeratingSoil(x,y)))", "score": 0}
{"id": "eqasc_train_8201", "prediction": "all x y.((Earthworm(x) & Soil(y)) -> MixSoil(x,y))", "score": 0}
{"id": "eqasc_train_8202", "prediction": "all x.((GrowingPlants(x) & Container(x)) -> GoodDrainage(x))", "score": 0}
{"id": "eqasc_train_8203", "prediction": "all x y z.((EarthwormBurrow(x) & Soil(y) & Plant(z)) -> (HelpsAerate(x,y) & EssentialForGrowing(x,z)))", "score": 0}
{"id": "eqasc_train_8204", "prediction": "all x.(Earthworm(x) -> HelpsSoilsBreathe(x))", "score": 0}
{"id": "eqasc_train_8205", "prediction": "all x y.((AeratingSoil(x) & Soil(y)) -> HelpsBreathe(x,y))", "score": 0}
{"id": "eqasc_train_8206", "prediction": "all x y.((Decomposer(x) & Soil(y)) -> (HelpsAerate(x,y) & GoodForPlants(x)))", "score": 0}
{"id": "eqasc_train_8207", "prediction": "all x.(Earthworm(x) -> (CrawlsThroughSoil(x) & (EatsSediments(x) | EatsDirt(x))))", "score": 0}
{"id": "eqasc_train_8208", "prediction": "all x y z.((Earthworm(x) & Dirt(y) & Plant(z)) -> (Eats(x,y) & GoodFor(x,z)))", "score": 0}
{"id": "eqasc_train_8209", "prediction": "all x y.((Earthworm(x) & SoilOrganism(y)) -> KeepsSoilHealthy(x,y))", "score": 0}
{"id": "eqasc_train_8210", "prediction": "all x y.((Organism(x) & Soil(y)) -> Aerate(x,y))", "score": 0}
{"id": "eqasc_train_8211", "prediction": "all x.(Species(x) -> ConstructsBurrows(x))", "score": 0}
{"id": "eqasc_train_8212", "prediction": "all x y.((Earthworm(x) & Construction(y)) -> (HelpsAerateSoil(x,y) & GoodForPlants(y)))", "score": 0}
{"id": "eqasc_train_8213", "prediction": "all x.(Aerating(x) -> GetsAirIntoWine(x))", "score": 0}
{"id": "eqasc_train_8214", "prediction": "all x.(EarthwormBurrow(x) -> (HelpsGetAirIntoSoil(x) & GoodForPlants(x)))", "score": 0}
{"id": "eqasc_train_8215", "prediction": "all x.(Earthworm(x) -> GoodForDaisies(x))", "score": 0}
{"id": "eqasc_train_8216", "prediction": "all x.(AnnelidBurrow(x) -> (HelpsAerateSoil(x) & GoodForPlants(x)))", "score": 0}
{"id": "eqasc_train_8217", "prediction": "all x y z.((Burrow(x) & SomethingWithFiveHearts(y) & Soil(z)) -> HelpsAerate(x,y,z))", "score": 0}
{"id": "eqasc_train_8218", "prediction": "all x.((InsulatedMaterial(x) & KeepsWarm(x)) -> CanBeUsedForKeepingWarm(x))", "score": 0}
{"id": "eqasc_train_8219", "prediction": "all x.(BuildingInsulation(x) -> (CelluloseMaterial(x) & MadeOfGroundComputerPaper(x) & MadeOfCartoonBoxes(x)))", "score": 0}
{"id": "eqasc_train_8220", "prediction": "all x.(CelluloseMaterial(x) -> KeepsHomeWarm(x))", "score": 0}
{"id": "eqasc_train_8221", "prediction": "all x.((Hydrothermia(x) & StayWarm(x) & StayDry(x)) -> Avoids(x,Hydrothermia))", "score": 0}
{"id": "eqasc_train_8222", "prediction": "all x.(InsulatedMaterial(x) -> HelpsPreventHypothermia(x))", "score": 0}
{"id": "eqasc_train_8223", "prediction": "all x.(WarmChain(x) -> KeyToNewbornSurvival(x))", "score": 0}
{"id": "eqasc_train_8224", "prediction": "all x.((InsulatedMaterial(x) & NewbornSurvival(x)) -> KeyToSurvival(x))", "score": 0}
{"id": "eqasc_train_8225", "prediction": "all x.((Wool(x) & InsulatedFleece(x)) -> Good(x))", "score": 0}
{"id": "eqasc_train_8226", "prediction": "all x.(Wool(x) -> (KeepsWarm(x) & UsesWool(x)))", "score": 0}
{"id": "eqasc_train_8227", "prediction": "all x.((Coat(x) | Blanket(x)) -> KeepsWarm(x))", "score": 0}
{"id": "eqasc_train_8228", "prediction": "all x.((Coat(x) | Blanket(x)) -> InsulatingMaterial(x))", "score": 0}
{"id": "eqasc_train_8229", "prediction": "all x.(Bird(x) -> WastesBodyHeat(x))", "score": 0}
{"id": "eqasc_train_8230", "prediction": "all x.((InsulatedMaterial(x) & PreventsWasteOfBodyHeat(x)) -> CanBeUsedToPreventWasteOfHeat(x))", "score": 0}
{"id": "eqasc_train_8231", "prediction": "all x.(Insulator(x) -> PreventsHeatFlow(x))", "score": 0}
{"id": "eqasc_train_8232", "prediction": "all x.((Material(x) & PreventsHeatFlow(x)) -> KeepsWarm(x))", "score": 0}
{"id": "eqasc_train_8233", "prediction": "all x.((Hair(x) & (Warm(x) | Cool(x))) -> NaturalInsulator(x))", "score": 0}
{"id": "eqasc_train_8234", "prediction": "all x.(Hair(x) -> HelpsKeepWarm(x))", "score": 0}
{"id": "eqasc_train_8235", "prediction": "all x y.((Sunlight(x) & Ground(y)) -> HeatsAndWarmsUp(x,y))", "score": 0}
{"id": "eqasc_train_8236", "prediction": "all x.(InsulatedMaterial(x) -> CanBeUsedForKeepingHeat(x))", "score": 0}
{"id": "eqasc_train_8237", "prediction": "all x.(Insulation(x) -> (StoresHeat(x) & HasHeatStore(x)))", "score": 0}
{"id": "eqasc_train_8238", "prediction": "all x.(StoreHeat(x) -> KeepsWarm(x))", "score": 0}
{"id": "eqasc_train_8239", "prediction": "all x.((ImportantToKeepWarmDuringWinter(x) & ImportantToKeepSafe(x)) -> KeepWarmDuringWinter(x))", "score": 0}
{"id": "eqasc_train_8240", "prediction": "all x.(IsolatedMaterial(x) -> ImportantInWinterSeason(x))", "score": 0}
{"id": "eqasc_train_8241", "prediction": "all x y.((GuardHair(x) & Mammal(y)) -> (ProtectsFur(x) & Insulates(x,y)))", "score": 0}
{"id": "eqasc_train_8242", "prediction": "all x.(Fur(x) -> (KeepsWarm(x) & UsesForWarm(x)))", "score": 0}
{"id": "eqasc_train_8243", "prediction": "all x.((Cup(x) & Insulated(x) & HasCover(x)) -> GreatForKeepingBeveragesWarm(x))", "score": 0}
{"id": "eqasc_train_8244", "prediction": "all x.((Cup(x) & Insulated(x)) -> KeepsLiquidsFullOfWarmth(x))", "score": 0}
{"id": "eqasc_train_8245", "prediction": "all x.(FoamTypeInsulation(x) -> RequiresOverlayBoardInsulation(x))", "score": 0}
{"id": "eqasc_train_8246", "prediction": "all x.(FoamMaterial(x) -> KeepsWarm(x))", "score": 0}
{"id": "eqasc_train_8247", "prediction": "all x.(Snow(x) -> ExcellentInsulatingMaterial(x))", "score": 0}
{"id": "eqasc_train_8248", "prediction": "all x.(Snow(x) -> (KeepsWarm(x) & UsesSnowForWarm(x)))", "score": 0}
{"id": "eqasc_train_8249", "prediction": "all x y.((Carpooling(x) & Car(y)) -> DecreasesAmountOfCars(x,y))", "score": 0}
{"id": "eqasc_train_8250", "prediction": "all x.(Car(x) -> SignificantSourceOfAirPollution(x))", "score": 0}
{"id": "eqasc_train_8251", "prediction": "all x.(Carpooling(x) -> ReducesAirPollution(x))", "score": 0}
{"id": "eqasc_train_8252", "prediction": "all x.(Carpool(x) -> ArrangesToConserveFuel(x))", "score": 0}
{"id": "eqasc_train_8253", "prediction": "all x y.((Car(x) & Car(y) & Used(x,y)) -> ConservesFuel(x,y))", "score": 0}
{"id": "eqasc_train_8254", "prediction": "all x.(CarCrashes(x) -> (CreatesTrafficCongestion(x) & DisruptsTravel(x)))", "score": 0}
{"id": "eqasc_train_8255", "prediction": "all x.(Carpooling(x) -> (DecreasesAmountOfCars(x) & ReducesTrafficCongestion(x)))", "score": 0}
{"id": "eqasc_train_8256", "prediction": "all x.((Car(x) | GasolineBurningEngine(x)) -> LargeSourceOfEmissions(x))", "score": 0}
{"id": "eqasc_train_8257", "prediction": "all x.(Carpooling(x) -> DecreasesEmissions(x))", "score": 0}
{"id": "eqasc_train_8258", "prediction": "all x y.((Car(x) & Car(y) & UsedToTravel(x,y)) -> DecreasesAmountOfCars(x,y))", "score": 0}
{"id": "eqasc_train_8259", "prediction": "all x.((Carpool(x) | Vanpool(x)) -> CanSaveTime(x))", "score": 0}
{"id": "eqasc_train_8260", "prediction": "all x y.((Vanpool(x) & Car(y)) -> DecreasesAmountOfCars(x,y))", "score": 0}
{"id": "eqasc_train_8261", "prediction": "all x.((Ozone(x) & Car(x)) -> CreatesSmog(x))", "score": 0}
{"id": "eqasc_train_8262", "prediction": "all x.(Carpooling(x) -> DecreasesSmog(x))", "score": 0}
{"id": "eqasc_train_8263", "prediction": "all x.(LessTravel(x) -> (LeadsToLessCarEmissions(x) & LessPlanetPollution(x)))", "score": 0}
{"id": "eqasc_train_8264", "prediction": "all x.(Carpooling(x) -> (LessEmissions(x) & LessPollution(x)))", "score": 0}
{"id": "eqasc_train_8265", "prediction": "all x.((Car(x) & Fewer(x)) -> LessPollution(x))", "score": 0}
{"id": "eqasc_train_8266", "prediction": "all x.(Carpooling(x) -> LessPollution(x))", "score": 0}
{"id": "eqasc_train_8267", "prediction": "all x.(Carpooling(x) -> (CutsCongestion(x) & CutsPollution(x)))", "score": 0}
{"id": "eqasc_train_8268", "prediction": "all x y.((DecreasingCars(x) & Cars(y)) -> CutsDownOnPollution(x,y))", "score": 0}
{"id": "eqasc_train_8269", "prediction": "all x.(FemaleMonotreme(x) -> (LacksUterus(x) & LacksVagina(x)))", "score": 0}
{"id": "eqasc_train_8270", "prediction": "all x.(FemalePlutus(x) -> (LacksUterus(x) & LacksVagina(x)))", "score": 0}
{"id": "eqasc_train_8271", "prediction": "all x.(Platypus(x) -> (Echidna(x) & Monotreme(x)))", "score": 0}
{"id": "eqasc_train_8272", "prediction": "all x.(Platypus(x) -> (LacksUterus(x) & LacksVaginal(x)))", "score": 0}
{"id": "eqasc_train_8273", "prediction": "all x.((Plutosis(x) | Echidna(x)) -> (LacksUterus(x) & LacksVagina(x)))", "score": 0}
{"id": "eqasc_train_8274", "prediction": "all x.(Baby(x) -> (DeliveredFromUterus(x) & ThroughVagina(x)))", "score": 0}
{"id": "eqasc_train_8275", "prediction": "all x.(FemaleMonotreme(x) -> -ProvidesBabyBirth(x))", "score": 0}
{"id": "eqasc_train_8276", "prediction": "all x.(Platypus(x) -> LacksUterus(x))", "score": 0}
{"id": "eqasc_train_8277", "prediction": "all x.(Echidna(x) -> (LacksUterus(x) & LacksVagina(x)))", "score": 0}
{"id": "eqasc_train_8278", "prediction": "all x.(Echidna(x) -> (LacksUterus(x) & LacksVagina(x)))", "score": 0}
{"id": "eqasc_train_8279", "prediction": "all x.((FemalePlatypus(x) & FemaleEchindna(x)) -> (-Uterus(x) & -Vagina(x)))", "score": 0}
{"id": "eqasc_train_8280", "prediction": "all x.(Monotreme(x) -> (Mammal(x) & LaysEggs(x)))", "score": 0}
{"id": "eqasc_train_8281", "prediction": "exists x.(FemaleMammal(x) & -HasUterus(x))", "score": 0}
{"id": "eqasc_train_8282", "prediction": "all x.(Duckbill(x) -> (Female(x) & Duckbill(x) & LacksUterus(x) & LacksVagina(x)))", "score": 0}
{"id": "eqasc_train_8283", "prediction": "all x.(Wiring(x) -> RequiresElectricalConductor(x))", "score": 0}
{"id": "eqasc_train_8284", "prediction": "all x.((Tree(x) & (Metal(x) | Aluminum(x))) -> ConductorOfElectricity(x))", "score": 0}
{"id": "eqasc_train_8285", "prediction": "all x.(Wiring(x) -> (RequiresMetal(x) | RequiresAluminum(x)))", "score": 0}
{"id": "eqasc_train_8286", "prediction": "all x.(CuirconductorOfElectricity(x) -> GoodConductorOfElectricity(x))", "score": 0}
{"id": "eqasc_train_8287", "prediction": "all x.(Cuir(x) -> UsedInWiring(x))", "score": 0}
{"id": "eqasc_train_8288", "prediction": "all x y.((Wire(x) & ElectricSource(y)) -> ConnectedTo(x,y))", "score": 0}
{"id": "eqasc_train_8289", "prediction": "all x.(Electricity(x) -> UsesElectricalConductor(x))", "score": 0}
{"id": "eqasc_train_8290", "prediction": "all x.(Conductor(x) -> CarriesElectricity(x))", "score": 0}
{"id": "eqasc_train_8291", "prediction": "all x.(Wiring(x) -> NeedsCarryingElectricity(x))", "score": 0}
{"id": "eqasc_train_8292", "prediction": "all x.(Conductor(x) -> (CarriesEnergyCurrent(x) & RequiresWiring(x)))", "score": 0}
{"id": "eqasc_train_8293", "prediction": "all x.((Metal(x) & CopperWire(x)) -> GoodConductorForCarryingElectricCurrent(x))", "score": 0}
{"id": "eqasc_train_8294", "prediction": "all x y z.((Wiring(x) & Conductor(y) & Copper(z)) -> RequiresToCarryCurrent(x,y,z))", "score": 0}
{"id": "eqasc_train_8295", "prediction": "all x.(Metal(x) -> ConductorOfElectricity(x))", "score": 0}
{"id": "eqasc_train_8296", "prediction": "all x.(Wiring(x) -> RequiresMetal(x))", "score": 0}
{"id": "eqasc_train_8297", "prediction": "all x.(ElectricalConductor(x) -> (MadeOf(x,Copper) | MadeOf(x,Gold)))", "score": 0}
{"id": "eqasc_train_8298", "prediction": "all x.(Wiring(x) -> (Requires(x,Copper) | Requires(x,Gold)))", "score": 0}
{"id": "eqasc_train_8299", "prediction": "all x.(CuirconductorOfElectricity(x) -> Excellent(x))", "score": 0}
{"id": "eqasc_train_8300", "prediction": "all x.(Wiring(x) -> CanBeDoneWithCopper(x))", "score": 0}
{"id": "eqasc_train_8301", "prediction": "all x.(Cuirconductor(x) -> MuchBetterConductor(x))", "score": 0}
{"id": "eqasc_train_8302", "prediction": "all x.(Wiring(x) -> RequiresCopper(x))", "score": 0}
{"id": "eqasc_train_8303", "prediction": "all x.(Metal(x) -> ConductorOfElectricity(x))", "score": 0}
{"id": "eqasc_train_8304", "prediction": "all x.(Wiring(x) -> RequiresMetals(x))", "score": 0}
{"id": "eqasc_train_8305", "prediction": "all x.(Wiring(x) -> (Requires(x,Cuir) | Requires(x,Gold)))", "score": 0}
{"id": "eqasc_train_8306", "prediction": "all x.(GroundWire(x) -> ExtraConductor(x))", "score": 0}
{"id": "eqasc_train_8307", "prediction": "all x.(Ground(x) -> CanBeUsedAsConductor(x))", "score": 0}
{"id": "eqasc_train_8308", "prediction": "all x.(Insulator(x) -> OppositeOfConductor(x))", "score": 0}
{"id": "eqasc_train_8309", "prediction": "all x.(Wiring(x) -> RequiresOppositeOfInsulator(x))", "score": 0}
{"id": "eqasc_train_8310", "prediction": "all x.(Gold(x) -> ExcellentConductorOfElectricity(x))", "score": 0}
{"id": "eqasc_train_8311", "prediction": "all x.(Wiring(x) -> MadeOfGold(x))", "score": 0}
{"id": "eqasc_train_8312", "prediction": "all x y.((Cell(x) & Tissue(y)) -> (OrganizedInto(x,y) & FormsOrgan(y)))", "score": 1}
{"id": "eqasc_train_8313", "prediction": "all x.(Tissue(x) -> (MuscleTissue(x) | NerveTissue(x)))", "score": 0}
{"id": "eqasc_train_8314", "prediction": "all x.(Muscle(x) -> ContainsCells(x))", "score": 0}
{"id": "eqasc_train_8315", "prediction": "all x y z.((Cell(x) & Tissue(y) & Skin(z)) -> (Forms(x,y) & Forms(y,z)))", "score": 0}
{"id": "eqasc_train_8316", "prediction": "all x.(Tissue(x) -> (GroupedToForm(x) & Organ(x)))", "score": 0}
{"id": "eqasc_train_8317", "prediction": "all x y.((Cell(x) & Tissue(y)) -> OrganizedInto(x,y))", "score": 1}
{"id": "eqasc_train_8318", "prediction": "all x.(AnimalOrgan(x) -> (Kneeps(x) | Hearts(x)))", "score": 0}
{"id": "eqasc_train_8319", "prediction": "all x y z.((Cell(x) & Tissue(y) & Kidney(z)) -> (GroupedInto(x,y) & Forms(y,z)))", "score": 0}
{"id": "eqasc_train_8320", "prediction": "all x.(Bacteria(x) -> OneCelledOrganism(x))", "score": 0}
{"id": "eqasc_train_8321", "prediction": "all x.(Bacteria(x) -> (HasOneCell(x) & -HasTissue(x)))", "score": 0}
{"id": "eqasc_train_8322", "prediction": "all x y.((Tissue(x) & Organism(y)) -> CombinesToForm(x,y))", "score": 0}
{"id": "eqasc_train_8323", "prediction": "all x y z.((Cell(x) & Tissue(y) & Organ(z)) -> (OrganizedInto(x,y) & CombinesInto(y,z)))", "score": 0}
{"id": "eqasc_train_8324", "prediction": "all x.((MainOrgan(x) & (Knees(x) | Liver(x))) -> Grows(x))", "score": 0}
{"id": "eqasc_train_8325", "prediction": "all x.(Cell(x) -> FormsLiver(x))", "score": 0}
{"id": "eqasc_train_8326", "prediction": "all x.(StemCell(x) -> (Cell(x) & ManyTissues(x) & ManyOrgans(x)))", "score": 0}
{"id": "eqasc_train_8327", "prediction": "all x y.((StemCell(x) & Organ(y)) -> CanOrganizeInto(x,y))", "score": 0}
{"id": "eqasc_train_8328", "prediction": "all x.(Neuron(x) -> CellOfNervousTissue(x))", "score": 0}
{"id": "eqasc_train_8329", "prediction": "all x y.((Neuron(x) & NerveTissue(y)) -> MakesUp(x,y))", "score": 0}
{"id": "eqasc_train_8330", "prediction": "all x.((Organ(x) & (Stomach(x) | Liver(x))) -> Develops(x))", "score": 0}
{"id": "eqasc_train_8331", "prediction": "all x y.((Cell(x) & Tissue(y)) -> (FormedInto(x,y) & FormsLiver(y)))", "score": 0}
{"id": "eqasc_train_8332", "prediction": "all x.(Ant(x) -> CommunicatesWithPheromones(x))", "score": 0}
{"id": "eqasc_train_8333", "prediction": "all x y.((Ant(x) & Colony(y)) -> CommunicatesInPheremonTrails(x,y))", "score": 0}
{"id": "eqasc_train_8334", "prediction": "all x y.((Ant(x) & Colony(y)) -> CommunicatesWith(x,y))", "score": 0}
{"id": "eqasc_train_8335", "prediction": "all x y.((Ant(x) & Semiochemical(y)) -> CommunicatesWith(x,y))", "score": 0}
{"id": "eqasc_train_8336", "prediction": "all x.(Pheromone(x) -> FoundInInsects(x))", "score": 0}
{"id": "eqasc_train_8337", "prediction": "all x y.((Insect(x) & Chemical(y)) -> CommunicatesWith(x,y))", "score": 0}
{"id": "eqasc_train_8338", "prediction": "all x.(Pheromone(x) -> InsectHormone(x))", "score": 0}
{"id": "eqasc_train_8339", "prediction": "all x y.((Ant(x) & Hormone(y)) -> CommunicatesWith(x,y))", "score": 0}
{"id": "eqasc_train_8340", "prediction": "all x y.((Ant(x) & Antenna(y)) -> UsesReceptorsToFollowRecruitmentPheromoneTrails(x,y))", "score": 0}
{"id": "eqasc_train_8341", "prediction": "all x y z.((Insect(x) & Chemicals(y) & Antenna(z)) -> CommunicatesWith(x,y,z))", "score": 0}
{"id": "eqasc_train_8342", "prediction": "all x y.((Ant(x) & PheromoneTrail(y)) -> Leaves(x,y))", "score": 0}
{"id": "eqasc_train_8343", "prediction": "all x.(Ant(x) -> (LeavesChemicalTrails(x) & Communicates(x)))", "score": 0}
{"id": "eqasc_train_8344", "prediction": "all x.(Pheromone(x) -> (StinkyChemicalsExcreptFromGlands(x) & ThroughoutAntsBody(x)))", "score": 0}
{"id": "eqasc_train_8345", "prediction": "all x.(Ant(x) -> CommunicatesViaChemicalsExcrewedByBody(x))", "score": 0}
{"id": "eqasc_train_8346", "prediction": "all x y.((Ant(x) & Ante(y)) -> CommunicatesWith(x,y))", "score": 0}
{"id": "eqasc_train_8347", "prediction": "all x.(Ant(x) -> ExtremeImportanceInInsectWorld(x))", "score": 0}
{"id": "eqasc_train_8348", "prediction": "exists x.(Insect(x) & CommunicatesWith(x,pheromones))", "score": 0}
{"id": "eqasc_train_8349", "prediction": "all x.(Pheromone(x) -> (SniffyScent(x) & EmittedByAnimals(x) & MatingSeason(x)))", "score": 0}
{"id": "eqasc_train_8350", "prediction": "all x y.((Ant(x) & Scent(y)) -> CommunicatesWith(x,y))", "score": 0}
{"id": "eqasc_train_8351", "prediction": "all x.(HoneypotAnt(x) -> ClassifiedInGenusMyrmecocystus(x))", "score": 0}
{"id": "eqasc_train_8352", "prediction": "all x.((Member(x) & MyrmecocystusGenus(x)) -> CommunicatesThroughPheromones(x))", "score": 0}
{"id": "eqasc_train_8353", "prediction": "all x y z.((Ant(x) & Colony(y) & PheremonTraits(z)) -> CommunicatesWith(x,y,z))", "score": 0}
{"id": "eqasc_train_8354", "prediction": "all x.(LeafCutterAnt(x) -> RedAnt(x))", "score": 0}
{"id": "eqasc_train_8355", "prediction": "all x y.((LeafCutter(x) & Chemical(y)) -> CommunicatesWith(x,y))", "score": 0}
{"id": "eqasc_train_8356", "prediction": "all x y.((Ant(x) & Trail(y)) -> UsesToCommunicate(x,y))", "score": 0}
{"id": "eqasc_train_8357", "prediction": "all x y z.((River(x) & Floods(x) & River(y) & FloodPlains(z)) -> DepositsSoilIn(y,z))", "score": 0}
{"id": "eqasc_train_8358", "prediction": "all x y.((River(x) & Plain(y)) -> (BecomesSilted(x) & Flooded(y)))", "score": 0}
{"id": "eqasc_train_8359", "prediction": "all x y.((River(x) & Flooded(x) & River(y)) -> Silted(x))", "score": 0}
{"id": "eqasc_train_8360", "prediction": "all x.(SoilErosion(x) -> (HarmsFarmAndGrazingLands(x) & IncreasesFloodingAndDesertification(x)))", "score": 0}
{"id": "eqasc_train_8361", "prediction": "all x.((River(x) & Floods(x)) -> HarmsFarmAndGrazingLands(x))", "score": 0}
{"id": "eqasc_train_8362", "prediction": "all x.(Soil(x) -> ComposedOfSilicateMinerals(x))", "score": 0}
{"id": "eqasc_train_8363", "prediction": "all x y z.((River(x) & Flood(y) & SilicateMinerals(z) & DepositsInFloodPlains(x,z)) -> Flood(z))", "score": 0}
{"id": "eqasc_train_8364", "prediction": "all x.(Mineral(x) -> (ConstituentOfRocks(x) | ConstituentOfSediments(x) | ConstituentOfSoils(x)))", "score": 0}
{"id": "eqasc_train_8365", "prediction": "all x y z.((River(x) & Floods(x) & River(y) & FloodPlains(z)) -> DepositsMineralsIn(y,z))", "score": 0}
{"id": "eqasc_train_8366", "prediction": "all x.((River(x) & Full(x)) -> (FloodsIntoFloodPlaza(x) & LeavesFertileSoil(x)))", "score": 0}
{"id": "eqasc_train_8367", "prediction": "all x y z.((Plains(x) & Flood(y) & Soil(z)) -> GetsFrom(x,y,z))", "score": 0}
{"id": "eqasc_train_8368", "prediction": "(MajorRiver(river) & ColoradoRiver(river))", "score": 0}
{"id": "eqasc_train_8369", "prediction": "all x y z.((ColoradoFlood(x) & Soil(y) & FloodPlains(z)) -> DepositsIn(x,y,z))", "score": 0}
{"id": "eqasc_train_8370", "prediction": "all x.((River(x) & Mightiest(x)) -> Amazon(x))", "score": 0}
{"id": "eqasc_train_8371", "prediction": "all x y z.((Amazon(x) & Flood(y) & Soil(z)) -> DepositsInFloodPlains(x,z))", "score": 0}
{"id": "eqasc_train_8372", "prediction": "all x.(CashionSoil(x) -> OnFloodPlains(x))", "score": 0}
{"id": "eqasc_train_8373", "prediction": "all x y.((River(x) & Floods(x)) -> CashionSoil(y))", "score": 0}
{"id": "eqasc_train_8374", "prediction": "all x.(FloodPlatte(x) -> Marshy(x))", "score": 0}
{"id": "eqasc_train_8375", "prediction": "all x y z.((River(x) & Floods(x) & Soil(y) & MarshyAreas(z)) -> DepositsIn(x,y,z))", "score": 0}
{"id": "eqasc_train_8376", "prediction": "all x.(LargeStream(x) -> River(x))", "score": 0}
{"id": "eqasc_train_8377", "prediction": "all x y z.((LargeStream(x) & Floods(x) & Soil(y) & FloodPlains(z)) -> DepositsIn(x,y,z))", "score": 0}
{"id": "eqasc_train_8378", "prediction": "(Examples(River(Nile) & Stream(Colorado))", "score": -1}
{"id": "eqasc_train_8379", "prediction": "all x y.((Nile(x) & Flood(y)) -> DepositsSoilInFloodPlains(x,y))", "score": 0}
{"id": "eqasc_train_8380", "prediction": "all x.(Hurricane(x) -> (CausesLocalFlooding(x) | CausesFlashFlooding(x) | CausesCoastalFlooding(x)))", "score": 0}
{"id": "eqasc_train_8381", "prediction": "all x y.((Hurricane(x) & Plain(y)) -> CanDepositSoil(x,y))", "score": 0}
{"id": "eqasc_train_8382", "prediction": "all x.((River(x) | Creek(x)) -> LeavesFloodPlains(x))", "score": 0}
{"id": "eqasc_train_8383", "prediction": "all x y z.((Crater(x) & Plain(y) & Soil(z)) -> DepositsIn(x,y,z))", "score": 0}
{"id": "eqasc_train_8384", "prediction": "all x.(Plant(x) -> GrowsInSoil(x))", "score": 0}
{"id": "eqasc_train_8385", "prediction": "all x y.((FloodingRiver(x) & Plant(y)) -> HelpsGrow(x,y))", "score": 0}
{"id": "eqasc_train_8386", "prediction": "all x.(Flatworm(x) -> BelongsToPhylumPlatyhelminthes(x))", "score": 0}
{"id": "eqasc_train_8387", "prediction": "all x.(Flatworm(x) -> (Parasitic(x) & FreeLiving(x) & FreshWater(x)))", "score": 0}
{"id": "eqasc_train_8388", "prediction": "all x.(PhylumPlatyhelminthe(x) -> Parasitic(x))", "score": 0}
{"id": "eqasc_train_8389", "prediction": "all x.(ParasiticFlatworm(x) -> CloseAssociationWithHosts(x))", "score": 0}
{"id": "eqasc_train_8390", "prediction": "all x.((Organism(x) & PhylumPlatyhelminthes(x)) -> CloseAssociationWithHosts(x))", "score": 0}
{"id": "eqasc_train_8391", "prediction": "all x.(Flatworm(x) -> HasBrains(x))", "score": 0}
{"id": "eqasc_train_8392", "prediction": "exists x.(Somethign(x) & PhylumPlatyhelminthes(x) & HasBrain(x))", "score": 0}
{"id": "eqasc_train_8393", "prediction": "all x.(Flatworm(x) | (Flukes(x) | Tapeworms(x) | Turbellarians(x))))", "score": -1}
{"id": "eqasc_train_8394", "prediction": "all x.(Flatworm(x) -> (Flukes(x) | Tapeworms(x) | Turbellarians(x)))", "score": 0}
{"id": "eqasc_train_8395", "prediction": "all x.(Tapeworm(x) -> BelongsToPhylumPlatyhelminthes(x))", "score": 0}
{"id": "eqasc_train_8396", "prediction": "all x.(Flatworm(x) -> BilaterallySymmetric(x))", "score": 0}
{"id": "eqasc_train_8397", "prediction": "all x.(PhylumPlatyhelminthes(x) -> BilateralSymmetry(x))", "score": 0}
{"id": "eqasc_train_8398", "prediction": "all x.((Wworm(x) & BilaterallySymmetric(x)) -> PhylumPlatyhelminthes(x))", "score": 0}
{"id": "eqasc_train_8399", "prediction": "all x.(Platyhelminthes(x) -> BilaterallySymmetricPhylum(x))", "score": 0}
{"id": "eqasc_train_8400", "prediction": "all x y.((EarthSurface(x) & UnevenHeating(x,y)) -> WindCause(x))", "score": 0}
{"id": "eqasc_train_8401", "prediction": "all x.(Wind(x) -> DamagesCrops(x))", "score": 0}
{"id": "eqasc_train_8402", "prediction": "all x.((UnevenHeating(x) & EarthSurface(x)) -> DamagesCrops(x))", "score": 0}
{"id": "eqasc_train_8403", "prediction": "all x.(Wind(x) -> (DestroysHomes(x) & DestroysBusinesses(x)))", "score": 0}
{"id": "eqasc_train_8404", "prediction": "all x.(UnevenHeatingOfEarthSurface(x) -> CausesDestructionToHomesAndBusinesses(x))", "score": 0}
{"id": "eqasc_train_8405", "prediction": "all x y.((UnevenHeating(x) & EarthSurface(y)) -> CausesHurricane(x,y))", "score": 0}
{"id": "eqasc_train_8406", "prediction": "exists x.(LocalWind(x) & (SeaBreath(x) | LandBreath(x) | Monsoon(x)))", "score": 0}
{"id": "eqasc_train_8407", "prediction": "all x.(Breeze(x) -> (UnevenHeatingOfEarthSurface(x) & CausedBy(x,y)))", "score": 0}
{"id": "eqasc_train_8408", "prediction": "all x.(WIND(x) -> (MovementOfAtmosphericAir(x) & OnPlanet(x)))", "score": 0}
{"id": "eqasc_train_8409", "prediction": "all x.((UnevenHeating(x) & EarthSurface(x)) -> CausesMovementOfAtmosphericAir(x))", "score": 0}
{"id": "eqasc_train_8410", "prediction": "all x y.((Wind(x) & Building(y)) -> (CausesDamage(x,y) & BringsDownPowerLines(x)))", "score": 0}
{"id": "eqasc_train_8411", "prediction": "all x.(UnevenHeatingOfEarthSurface(x) -> CausesDamageToBuildings(x))", "score": 0}
{"id": "eqasc_train_8412", "prediction": "all x y.((Wind(x) & Air(y)) -> (MovementOf(x,y) & Invisible(y)))", "score": 0}
{"id": "eqasc_train_8413", "prediction": "all x y z.((UnevenHeating(x) & EarthSurface(y) & Air(z)) -> CausesMovementOf(x,y,z))", "score": 0}
{"id": "eqasc_train_8414", "prediction": "all x.((WindLess(x) & Kite(x)) -> HasProblemsFlying(x))", "score": 0}
{"id": "eqasc_train_8415", "prediction": "all x y.((Kite(x) & EarthSurface(y)) -> UnevenHeating(x,y))", "score": 0}
{"id": "eqasc_train_8416", "prediction": "all x.(ExtremelyHighWinds(x) -> CausesExtensiveDamage(x))", "score": 0}
{"id": "eqasc_train_8417", "prediction": "all x.(UnevenHeatingOfEarthSurface(x) -> CausesExtensiveDamage(x))", "score": 0}
{"id": "eqasc_train_8418", "prediction": "all x.(Wind(x) -> AirMoving(x))", "score": 0}
{"id": "eqasc_train_8419", "prediction": "all x.(UnevenHeatingOfEarthSurface(x) -> CausesMovingAir(x))", "score": 0}
{"id": "eqasc_train_8420", "prediction": "all x y.((Wind(x) & Sun(y)) -> HeatsAir(x,y))", "score": 0}
{"id": "eqasc_train_8421", "prediction": "all x y.((Wind(x) & Sun(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_train_8422", "prediction": "all x.(GeothermalHeat(x) -> WarmHeat(x))", "score": 0}
{"id": "eqasc_train_8423", "prediction": "all x.(UnevenWarmingOfEarthSurface(x) -> CausesWind(x))", "score": 0}
{"id": "eqasc_train_8424", "prediction": "all x.(ChinookWind(x) -> (Warm(x) & Dry(x)))", "score": 0}
{"id": "eqasc_train_8425", "prediction": "all x.(UnevenHeatingOfEarthSurface(x) -> Chinook(x))", "score": 0}
{"id": "eqasc_train_8426", "prediction": "exists x.(Wind(x) & Destructive(x))", "score": 0}
{"id": "eqasc_train_8427", "prediction": "all x y.((EarthSurface(x) & UnevenHeating(x,y)) -> CausesDestruction(x))", "score": 0}
{"id": "eqasc_train_8428", "prediction": "all x y.((WindBelt(x) & EarthSurface(y)) -> UnevenHeating(x,y))", "score": 0}
{"id": "eqasc_train_8429", "prediction": "all x.(UnevenHeatingBySun(x) -> CausesWind(x))", "score": 0}
{"id": "eqasc_train_8430", "prediction": "all x y.((Stem(x) & Plant(y)) -> StoresWater(x,y))", "score": 0}
{"id": "eqasc_train_8431", "prediction": "all x y.((Stem(x) & Plant(y)) -> SupportStructure(x,y))", "score": 0}
{"id": "eqasc_train_8432", "prediction": "all x y.((SupportStructure(x) & Plant(y)) -> (StoresWater(x,y) & ForSomePlants(x,y)))", "score": 0}
{"id": "eqasc_train_8433", "prediction": "all x y.((Stem(x) & Plant(y)) -> HelpsSurvive(x,y))", "score": 0}
{"id": "eqasc_train_8434", "prediction": "all x y z.((Rain(x) & Roots(y) & Plant(z)) -> (AbsorbsWaterQuickly(y,x) & StoresWaterInStems(z,x)))", "score": 0}
{"id": "eqasc_train_8435", "prediction": "all x.(Plant(x) -> (StoresWater(x) & AbsorbsWaterQuickly(x)))", "score": 0}
{"id": "eqasc_train_8436", "prediction": "exists x.(Plant(x) & NeedsStem(x))", "score": 0}
{"id": "eqasc_train_8437", "prediction": "all x.(Stem(x) -> (CarriesWater(x) & CarriesNutrients(x)))", "score": 0}
{"id": "eqasc_train_8438", "prediction": "all x y.((Stem(x) & Plant(y)) -> HoldsNutrientsIn(x,y))", "score": 0}
{"id": "eqasc_train_8439", "prediction": "all x y.((Plant(x) & SupportStructure(y)) -> StoresWater(y))", "score": 0}
{"id": "eqasc_train_8440", "prediction": "exists x.(Plant(x) & StoresWater(x) & AbsorbsWaterWithRoots(x))", "score": 0}
{"id": "eqasc_train_8441", "prediction": "all x.(Stem(x) -> FibrousMaterial(x))", "score": 0}
{"id": "eqasc_train_8442", "prediction": "exists x.(Plant(x) & StoresWaterInFilm(x))", "score": 0}
{"id": "eqasc_train_8443", "prediction": "all x.(Fern(x) -> (UsesStems(x) & StoresWater(x)))", "score": 0}
{"id": "eqasc_train_8444", "prediction": "exists x.(Plant(x) & StoresWaterInTreesAndStems(x))", "score": 0}
{"id": "eqasc_train_8445", "prediction": "all x.(Plant(x) -> StoresWaterInTrunk(x))", "score": 0}
{"id": "eqasc_train_8446", "prediction": "all x y.((Plant(x) & SupportStructure(y)) -> StoresWater(y))", "score": 0}
{"id": "eqasc_train_8447", "prediction": "all x y.((Stem(x) & Plant(y)) -> StoresH2o(x,y))", "score": 0}
{"id": "eqasc_train_8448", "prediction": "all x.((SeasonalFloweringPlant(x) & Plant(y)) -> Planted(x,y))", "score": 0}
{"id": "eqasc_train_8449", "prediction": "exists x.(Flower(x) & UsesStems(x))", "score": 0}
{"id": "eqasc_train_8450", "prediction": "all x y.((River(x) & Lake(y)) -> DammingCanCauseToForm(x,y))", "score": 0}
{"id": "eqasc_train_8451", "prediction": "all x.(Beaver(x) -> (KnowsHowToCutWood(x) & KnowsHowToBuildDams(x)))", "score": 0}
{"id": "eqasc_train_8452", "prediction": "all x y.((Beaver(x) & Lake(y)) -> CanCreate(x,y))", "score": 0}
{"id": "eqasc_train_8453", "prediction": "all x.(WaterSki(x) -> LakeMohaveNorthOfDavisDamp(x))", "score": 0}
{"id": "eqasc_train_8454", "prediction": "all x y z.((River(x) & Damming(x,y) & River(y)) -> (OpensNewAreasForWaterSkiing(z) & OpensNewAreasForWaterSkiing(z)))", "score": 0}
{"id": "eqasc_train_8455", "prediction": "all x.(Beaver(x) -> (LivesOnSide(x) & CreatesDams(x)))", "score": 0}
{"id": "eqasc_train_8456", "prediction": "all x y.((Beaver(x) & Lake(y)) -> CausesToForm(x,y))", "score": 0}
{"id": "eqasc_train_8457", "prediction": "-SpillwayAtLakeTahoeDam(x)", "score": 0}
{"id": "eqasc_train_8458", "prediction": "all x y.((Springway(x) & Lake(y)) -> CanAffectLevel(x,y))", "score": 0}
{"id": "eqasc_train_8459", "prediction": "all x.(Beaver(x) -> BuildsDam(x))", "score": 0}
{"id": "eqasc_train_8460", "prediction": "all x.(Beaver(x) -> HelpsLakeForm(x))", "score": 0}
{"id": "eqasc_train_8461", "prediction": "all x y.((River(x) & Dam(y)) -> AltersTotal(x,y))", "score": 0}
{"id": "eqasc_train_8462", "prediction": "all x y.((Dam(x) & Lake(y)) -> CanForm(x,y))", "score": 0}
{"id": "eqasc_train_8463", "prediction": "all x y.((WaterPooling(x) & Depression(y)) -> FormsLake(x,y))", "score": 0}
{"id": "eqasc_train_8464", "prediction": "all x y.((River(x) & Damming(x,y)) -> CausesWaterPooling(x,y))", "score": 0}
{"id": "eqasc_train_8465", "prediction": "all x.(Beaver(x) -> CausesLakeFormation(x))", "score": 0}
{"id": "eqasc_train_8466", "prediction": "all x y.((Beaver(x) & Dam(y)) -> (Builds(x,y) & CreatesPond(x)))", "score": 0}
{"id": "eqasc_train_8467", "prediction": "all x y z.((Beaver(x) & Pond(y) & Lake(z)) -> CausesFormation(x,y,z))", "score": 0}
{"id": "eqasc_train_8468", "prediction": "all x.(Dam(x) -> GeneratesElectricity(x))", "score": 0}
{"id": "eqasc_train_8469", "prediction": "all x.((GeneratesElectricity(x) & LakeForms(x)) -> CausesFormation(x))", "score": 0}
{"id": "eqasc_train_8470", "prediction": "all x y.((Beaver(x) & Lake(y)) -> CausesToForm(x,y))", "score": 0}
{"id": "eqasc_train_8471", "prediction": "all x.(Lake(x) -> (FreshWater(x) & CoolWater(x) & TransparentWater(x)))", "score": 0}
{"id": "eqasc_train_8472", "prediction": "all x y.((River(x) & Damming(x,y)) -> CausesFreshWater(y))", "score": 0}
{"id": "eqasc_train_8473", "prediction": "all x y.((Object(x) & Sharpening(x,y)) -> ChangeShape(x,y))", "score": 0}
{"id": "eqasc_train_8474", "prediction": "all x.((House(x) & (CookingPot(x) | Knife(x))) -> MetalObject(x))", "score": 0}
{"id": "eqasc_train_8475", "prediction": "all x y.((Knife(x) & Sharpening(x,y)) -> ChangeShape(y))", "score": 0}
{"id": "eqasc_train_8476", "prediction": "all x.(ElectricSharpener(x) -> (RemovesTooMuchMetal(x) & CausesWaves(x)))", "score": 0}
{"id": "eqasc_train_8477", "prediction": "all x.((Object(x) & RemovesMaterial(x)) -> ChangesShape(x))", "score": 0}
{"id": "eqasc_train_8478", "prediction": "(ChangedShape(family) & ChangedLook(family))", "score": 0}
{"id": "eqasc_train_8479", "prediction": "all x y.((Object(x) & Sharpening(x,y)) -> ChangesLook(x,y))", "score": 0}
{"id": "eqasc_train_8480", "prediction": "All x.(Form(x) -> ShapeOfObjects(x))", "score": -1}
{"id": "eqasc_train_8481", "prediction": "all x y.((Object(x) & Sharpening(x) & Sharpening(y)) -> ChangeForm(x,y))", "score": 0}
{"id": "eqasc_train_8482", "prediction": "(SwissArmyKnife(x) & ContainsOtherObjects(x))", "score": 0}
{"id": "eqasc_train_8483", "prediction": "all x y.((Item(x) & Sharpening(x) & Item(y)) -> ChangeShape(y,x))", "score": 0}
{"id": "eqasc_train_8484", "prediction": "all x.(Stone(x) -> IncorporatesRopeForSharpeningPointedObjects(x))", "score": 0}
{"id": "eqasc_train_8485", "prediction": "all x.(Stone(x) -> CanBeReshaped(x))", "score": 0}
{"id": "eqasc_train_8486", "prediction": "all x y.((Generator(x) & KineticEnergy(y)) -> ConvertsToElectricalEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8487", "prediction": "all x.(ElectricLamp(x) -> ProducesLightByElectricEnergy(x))", "score": 0}
{"id": "eqasc_train_8488", "prediction": "all x y.((Generator(x) & KineticEnergy(y)) -> ConvertsToLight(x,y))", "score": 0}
{"id": "eqasc_train_8489", "prediction": "all x.(KineticEnergy(x) -> EnergyInMotion(x))", "score": 0}
{"id": "eqasc_train_8490", "prediction": "all x y.((Motion(x) & Generator(y)) -> ConvertsToElectricalEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8491", "prediction": "all x.(Generator(x) -> StoresEnergyInBatteries(x))", "score": 0}
{"id": "eqasc_train_8492", "prediction": "all x.(GasGeneratorTurbine(x) -> (TurbinePieceOfGasGenerator(x) & PoweredBy(x,GasGenerator)))", "score": 0}
{"id": "eqasc_train_8493", "prediction": "all x.(Gas(x) -> ConvertibleToElectricalEnergy(x))", "score": 0}
{"id": "eqasc_train_8494", "prediction": "all x.(Energy(x) -> BurnsFossilFuel(x))", "score": 0}
{"id": "eqasc_train_8495", "prediction": "all x y.((Generator(x) & FossilFuel(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_train_8496", "prediction": "all x.(Generator(x) -> ProducesElectricity(x))", "score": 0}
{"id": "eqasc_train_8497", "prediction": "all x.(KineticEnergy(x) -> ConvertibleToElectricity(x))", "score": 0}
{"id": "eqasc_train_8498", "prediction": "all x y.((Water(x) & Dam(y)) -> (PotentialEnergy(x,y) & CanConvertToKineticEnergy(x,y)))", "score": 0}
{"id": "eqasc_train_8499", "prediction": "all x y z.((Generator(x) & Dam(y) & Water(z)) -> TurnsIntoElectricalEnergy(x,z))", "score": 0}
{"id": "eqasc_train_8500", "prediction": "all x.(KineticEnergy(x) -> EnergyOfMovement(x))", "score": 0}
{"id": "eqasc_train_8501", "prediction": "all x y.((Generator(x) & Movement(y)) -> CreatesElectricalEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8502", "prediction": "all x.(kWh(x) -> ElectricityUnit(x))", "score": 0}
{"id": "eqasc_train_8503", "prediction": "all x.(Generator(x) -> ConvertsKineticEnergyTokWh(x))", "score": 0}
{"id": "eqasc_train_8504", "prediction": "all x.(Electricity(x) -> PowerfulEnergySource(x))", "score": 0}
{"id": "eqasc_train_8505", "prediction": "all x.(Generator(x) -> (ConvertsKineticEnergy(x) & PowerfulEnergySource(x)))", "score": 0}
{"id": "eqasc_train_8506", "prediction": "all x y.((ElectricalEnergy(x) & Headlight(y)) -> ConvertedToLightEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8507", "prediction": "all x y z.((Generator(x) & KineticEnergy(y) & Headlight(z)) -> ConvertsTo(x,y,z))", "score": 0}
{"id": "eqasc_train_8508", "prediction": "all x.(Grass(x) -> SupplyesMostOfFood(x))", "score": 0}
{"id": "eqasc_train_8509", "prediction": "all x.(Grass(x) -> (ImportantFoodSource(x) & ForPeople(x) & ForAnimals(x)))", "score": 0}
{"id": "eqasc_train_8510", "prediction": "all x y.((Grass(x) & Animal(y)) -> SuppliesFoodSource(x,y))", "score": 0}
{"id": "eqasc_train_8511", "prediction": "all x.(Grass(x) -> (Wheat(x) | WildOat(x)))", "score": 0}
{"id": "eqasc_train_8512", "prediction": "all x y.((Wheat(x) & Person(y)) -> SuppliesFood(x,y))", "score": 0}
{"id": "eqasc_train_8513", "prediction": "all x.(Grass(x) -> ImportantFoodForWaterfowl(x))", "score": 0}
{"id": "eqasc_train_8514", "prediction": "all x y.((Waterfowl(x) & Food(y)) -> (Waterfowl(x) & Food(y) & ConsumedByPeople(x,y)))", "score": 0}
{"id": "eqasc_train_8515", "prediction": "all x.(Wheat(x) -> (GrassTypePlant(x) & -GrassTypePlant(x)))", "score": 0}
{"id": "eqasc_train_8516", "prediction": "all x.(Wheat(x) -> (Plant(x) & ConsumedByPeople(x)))", "score": 0}
{"id": "eqasc_train_8517", "prediction": "all x.(Rice(x) -> MemberOfGrassFamily(x))", "score": 0}
{"id": "eqasc_train_8518", "prediction": "all x y.((Rice(x) & MostPeople(y)) -> ConsumedBy(x,y))", "score": 0}
{"id": "eqasc_train_8519", "prediction": "all x.(Grass(x) -> (SuppliesEnergy(x) & UsedByPeople(x)))", "score": 0}
{"id": "eqasc_train_8520", "prediction": "all x.((Grasse(x) | HerbaceousPlant(x)) -> PreferredFood(x))", "score": 0}
{"id": "eqasc_train_8521", "prediction": "all x y.((HerbaceousPlant(x) & Food(y)) -> SupplysFood(x,y))", "score": 0}
{"id": "eqasc_train_8522", "prediction": "all x y.((Wheat(x) & WildOat(y)) -> (SuppliesMostOfFood(x,y) & ConsumedByPeople(x,y)))", "score": 0}
{"id": "eqasc_train_8523", "prediction": "all x.(Plant(x) -> SupplyesMostOfFood(x))", "score": 0}
{"id": "eqasc_train_8524", "prediction": "all x.(Sugarcane(x) -> (Grass(x) & ProvidesWorldSugar(x)))", "score": 0}
{"id": "eqasc_train_8525", "prediction": "all x y.((Plant(x) & Sugarcane(y)) -> SupplyesMostOfFood(x,y))", "score": 0}
{"id": "eqasc_train_8526", "prediction": "all x y.((Greenhouse(x) & Plant(y)) -> ProtectsFromCold(x,y))", "score": 0}
{"id": "eqasc_train_8527", "prediction": "all x.(Greenhouse(x) -> HumidAir(x))", "score": 0}
{"id": "eqasc_train_8528", "prediction": "all x.((Plant(x) & ImportantFor(x,Plants)) -> (Protection(x) & Humidity(x)))", "score": 0}
{"id": "eqasc_train_8529", "prediction": "all x.(Greenhouse(x) -> MadeOfGlass(x))", "score": 0}
{"id": "eqasc_train_8530", "prediction": "all x.(Glass(x) -> ProtectsFromCold(x))", "score": 0}
{"id": "eqasc_train_8531", "prediction": "all x.(Greenhouse(x) -> (MadeWith(x,glass) | MadeWith(x,fibreglass) | MadeWith(x,polyethylene) | MadeWith(x,vinyl)))", "score": 0}
{"id": "eqasc_train_8532", "prediction": "all x.((MadeOf(x,glass) | MadeOf(x,fibreglass) | MadeOf(x,polyethylene) | MadeOf(x,vinyl)) -> ProtectsPlantsFromCold(x))", "score": 0}
{"id": "eqasc_train_8533", "prediction": "all x.((TooCold(x) & Plant(y)) -> (Freezes(y) & Dies(y)))", "score": 0}
{"id": "eqasc_train_8534", "prediction": "all x y.((Greenhouse(x) & Plant(y)) -> KeepsFromDying(x,y))", "score": 0}
{"id": "eqasc_train_8535", "prediction": "all x.((TooCold(x) & Plant(x)) -> (Freeze(x) & Die(x)))", "score": 0}
{"id": "eqasc_train_8536", "prediction": "all x.(Greenhouse(x) -> (ProtectsPlantsFromFreezing(x) & ProtectsPlantsFromDieting(x)))", "score": 0}
{"id": "eqasc_train_8537", "prediction": "all x.(Blizzard(x) -> (HeavySnows(x) & VeryColdTemperatures(x) & HighWinds(x)))", "score": 0}
{"id": "eqasc_train_8538", "prediction": "all x y.((Greenhouse(x) & Plant(y)) -> ProtectsFromBlizzards(x,y))", "score": 0}
{"id": "eqasc_train_8539", "prediction": "all x y.((Greenhouse(x) & Plant(y)) -> ProtectsFromDeath(x,y))", "score": 0}
{"id": "eqasc_train_8540", "prediction": "all x.(Plant(x) -> (GrownInGreenhouses(x) & ProtectedFromWildButterflies(x)))", "score": 0}
{"id": "eqasc_train_8541", "prediction": "all x y.((Plant(x) & ColdCold(y)) -> GrownWhereProtectedFrom(x,y))", "score": 0}
{"id": "eqasc_train_8542", "prediction": "all x.(Flower(x) -> BeautifulPlant(x))", "score": 0}
{"id": "eqasc_train_8543", "prediction": "all x y.((Greenhouse(x) & Flower(y)) -> ProtectsFromCold(x,y))", "score": 0}
{"id": "eqasc_train_8544", "prediction": "all x y.((Greenhouse(x) & Orchid(y)) -> ProtectsFromCold(x,y))", "score": 0}
{"id": "eqasc_train_8545", "prediction": "all x.(GreenhousePlant(x) -> GrowsHealthier(x))", "score": 0}
{"id": "eqasc_train_8546", "prediction": "all x.((Plant(x) & ProtectedFromCold(x)) -> GrowsHealthier(x))", "score": 0}
{"id": "eqasc_train_8547", "prediction": "all x.(Molecule(x) -> (ExpandsWithHeat(x) & ContractsWithCold(x)))", "score": 0}
{"id": "eqasc_train_8548", "prediction": "all x y.((Greenhouse(x) & Plant(y)) -> ProtectsFromContractingMolecules(x,y))", "score": 0}
{"id": "eqasc_train_8549", "prediction": "all x y.((Greenhouse(x) & Flower(y)) -> ProtectsFromCold(x,y))", "score": 0}
{"id": "eqasc_train_8550", "prediction": "all x.((Bulbs(x) & PlantedInPots(x)) -> ParticularlySusceptibleToColdDamage(x))", "score": 0}
{"id": "eqasc_train_8551", "prediction": "all x y.((BulbsInPots(x) & Greenhouse(y)) -> CanBeProtectedFromColdDamage(x,y))", "score": 0}
{"id": "eqasc_train_8552", "prediction": "all x.(Plant(x) -> (RaisesFromSeed(x) & SowsInColdGreenhouse(x)))", "score": 0}
{"id": "eqasc_train_8553", "prediction": "all x y.((Greenhouse(x) & Plant(y)) -> HelpsGrowEasily(x,y))", "score": 0}
{"id": "eqasc_train_8554", "prediction": "all x y.((Plant(x) & ColdSensitive(y)) -> ProtectsFromWind(x,y))", "score": 0}
{"id": "eqasc_train_8555", "prediction": "all x y.((Greenhouse(x) & Plant(y)) -> ProtectsFromWind(x,y))", "score": 0}
{"id": "eqasc_train_8556", "prediction": "all x y.((Greenhouse(x) & GlassRoof(y)) -> CreatesWarmth(y))", "score": 0}
{"id": "eqasc_train_8557", "prediction": "all x y.((Glass(x) & Plant(y)) -> ProtectsFromCold(x,y))", "score": 0}
{"id": "eqasc_train_8558", "prediction": "all x.(Gymnosperm(x) -> (VascularPlant(x) & ProducesSeedsInCones(x)))", "score": 1}
{"id": "eqasc_train_8559", "prediction": "all x.(Plant(x) -> (ReproducesBySeeds(x) & ReproducesByRhizomes(x)))", "score": 0}
{"id": "eqasc_train_8560", "prediction": "all x y.((Gymnosperm(x) & Cone(y)) -> UsesToReproduce(x,y))", "score": 0}
{"id": "eqasc_train_8561", "prediction": "all x.(Gymnosperm(x) -> Evergreen(x))", "score": 0}
{"id": "eqasc_train_8562", "prediction": "all x.(Evergreen(x) -> (VascularPlant(x) & ProducesSeedsInCones(x)))", "score": 0}
{"id": "eqasc_train_8563", "prediction": "all x.(Softwood(x) -> (Gymnosperm(x) & Gymnosperm(x)))", "score": 1}
{"id": "eqasc_train_8564", "prediction": "all x.(Softwood(x) -> (VascularPlant(x) & ProducesSeedsInCones(x)))", "score": 1}
{"id": "eqasc_train_8565", "prediction": "all x.(Cypress(x) -> (SeedBearingPlant(x) | Gymnosperm(x)))", "score": 0}
{"id": "eqasc_train_8566", "prediction": "all x.(Cypress(x) -> ProducesSeedsInCones(x))", "score": 0}
{"id": "eqasc_train_8567", "prediction": "all x.(Evergreen(x) -> (VascularPlant(x) & ProducesSeedsInCones(x)))", "score": 0}
{"id": "eqasc_train_8568", "prediction": "all x.(Evergreen(x) -> (VascularPlant(x) & ProducesSeedsInCones(x)))", "score": 0}
{"id": "eqasc_train_8569", "prediction": "all x.(Conifer(x) -> (ProtectsSeedsInCone(x) & Often(x)))", "score": 0}
{"id": "eqasc_train_8570", "prediction": "all x.(Gymnosperm(x) -> ProducesConifers(x))", "score": 0}
{"id": "eqasc_train_8571", "prediction": "all x y.((KillingMicroorganisms(x) & Food(y)) -> ExtendedShelfLife(x,y))", "score": 0}
{"id": "eqasc_train_8572", "prediction": "all x.(IrradiatingFood(x) -> (ExtendsShelfLife(x) & RemovesMicroorganisms(x)))", "score": 0}
{"id": "eqasc_train_8573", "prediction": "all x.((Cooking(x) & Thorough(x)) -> KillsMicroorganismsInFood(x))", "score": 0}
{"id": "eqasc_train_8574", "prediction": "all x.((Cooking(x) & Thorough(x)) -> ExtendedShelfLife(x))", "score": 0}
{"id": "eqasc_train_8575", "prediction": "all x.(Cooking(x) -> KillsMicroorganisms(x))", "score": 0}
{"id": "eqasc_train_8576", "prediction": "all x y.((CookingFood(x) & Food(y)) -> ExtendedShelfLife(x,y))", "score": 0}
{"id": "eqasc_train_8577", "prediction": "all x y.((Irradiation(x) & Food(y)) -> ExtendedShelfLife(x,y))", "score": 0}
{"id": "eqasc_train_8578", "prediction": "all x.(Cooking(x) -> ExtendedShelfLifeOfFood(x))", "score": 0}
{"id": "eqasc_train_8579", "prediction": "all x.(Sterilization(x) -> KillsViableMicroorganisms(x))", "score": 0}
{"id": "eqasc_train_8580", "prediction": "all x y.((Food(x) & Food(y)) -> Sterilization(x,y))", "score": 0}
{"id": "eqasc_train_8581", "prediction": "all x.(Irradiation(x) -> ExtendedShelfLifeOfFood(x))", "score": 0}
{"id": "eqasc_train_8582", "prediction": "all x y.((Irradiation(x) & Food(y)) -> ExtendedShelfLife(x,y))", "score": 0}
{"id": "eqasc_train_8583", "prediction": "all x y.((KillingBacteria(x) & Food(y)) -> ExtendedShelfLife(x,y))", "score": 0}
{"id": "eqasc_train_8584", "prediction": "all x y.((Cloud(x) & WaterVapor(y)) -> (FormedBy(x,y) & WaterVapor(y) & RisesIntoColderRegionsOfAtmosphere(y) & Condenses(x)))", "score": 0}
{"id": "eqasc_train_8585", "prediction": "all x.(CloudCover(x) & Precipitation(x)) -> CausesTemperatureFluctuations(x))", "score": -1}
{"id": "eqasc_train_8586", "prediction": "all x y.((WaterVapor(x) & ColderRegions(y) & Condensing(x)) -> CausesTemperatureFluctuations(x))", "score": 0}
{"id": "eqasc_train_8587", "prediction": "all x y.((WaterVapor(x) & Cloud(y)) -> (Condenses(x,y) & Forms(x,y)))", "score": 0}
{"id": "eqasc_train_8588", "prediction": "all x.((Cloud(x) & Formed(x)) -> Precipitation(x))", "score": 0}
{"id": "eqasc_train_8589", "prediction": "all x y.((Vapor(x) & Water(y)) -> ChangesInto(x,y))", "score": 0}
{"id": "eqasc_train_8590", "prediction": "all x y z.((Moisture(x) & Cloud(y) & Rain(z)) -> (RisesInto(x,y) & TurnsInto(x,z)))", "score": 0}
{"id": "eqasc_train_8591", "prediction": "all x.(Steam(x) -> (WaterVapor(x) & ProducedByEvaporation(x)))", "score": 0}
{"id": "eqasc_train_8592", "prediction": "all x y.((Cloud(x) & EvaporatingIntoColderRegions(y) & Condensing(x)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_train_8593", "prediction": "all x.(WarmAirCools(x) -> (FormsRainClouds(x) & CumulonimbusClouds(x) | Thunderclouds(x)))", "score": 0}
{"id": "eqasc_train_8594", "prediction": "all x y.((Rain(x) & RisingWaterVapor(y)) -> DevelopsFrom(x,y))", "score": 0}
{"id": "eqasc_train_8595", "prediction": "all x.(Water(x) -> (EvaporatesIntoWaterVapor(x) & RisesIntoAtmosphere(x)))", "score": 0}
{"id": "eqasc_train_8596", "prediction": "all x.(Cloud(x) -> (WaterEvaporatesIntoColderRegions(x) & Condenses(x)))", "score": 0}
{"id": "eqasc_train_8597", "prediction": "ALL x.(Evaporation(x) -> (WaterChangesIntoVapor(x) & RisesIntoAir(x)))", "score": -1}
{"id": "eqasc_train_8598", "prediction": "all x y.((Evaporation(x) & Atmosphere(y)) -> CausesCloudFormation(x,y))", "score": 0}
{"id": "eqasc_train_8599", "prediction": "all x y.((Cloud(x) & Vapor(y)) -> (FormedBy(x,y) & H2oVapor(y) & RisesIntoColderRegionsOfAtmosphere(y) & Condenses(x)))", "score": 0}
{"id": "eqasc_train_8600", "prediction": "all x y.((Cloud(x) & Drop(y)) -> FallsOut(y,x))", "score": 0}
{"id": "eqasc_train_8601", "prediction": "all x y.((WaterVapor(x) & Rain(y)) -> FallsAs(x,y))", "score": 0}
{"id": "eqasc_train_8602", "prediction": "all x.(Condensation(x) -> ReleasesEnergyIntoAtmosphere(x))", "score": 0}
{"id": "eqasc_train_8603", "prediction": "all x.(Cloud(x) -> (WaterVaporReleasesEnergy(x) & ReleasesEnergy(x)))", "score": 0}
{"id": "eqasc_train_8604", "prediction": "all x y.((Petal(x) & Flower(y)) -> AttractsPollinatorsTo(x,y))", "score": 0}
{"id": "eqasc_train_8605", "prediction": "all x y z.((Petal(x) & Flower(y) & Flies(z) & Wasps(z) & Bees(z)) -> AttractsTo(x,y,z))", "score": 0}
{"id": "eqasc_train_8606", "prediction": "all x y.((Bee(x) & Flower(y)) -> AttractedToPetals(x,y))", "score": 0}
{"id": "eqasc_train_8607", "prediction": "all x y.((Petal(x) & Flower(y)) -> AttractsBeesTo(x,y))", "score": 0}
{"id": "eqasc_train_8608", "prediction": "all x y.((Petal(x) & Bee(y)) -> AttractsToFlower(x,y))", "score": 0}
{"id": "eqasc_train_8609", "prediction": "(all x.(Pollination(x) -> Honeybee(x)) & all y.(WindPollination(y) -> Limited(y)))", "score": 0}
{"id": "eqasc_train_8610", "prediction": "all x y z.((Petal(x) & Honeybee(y) & Flower(z)) -> AttractsTo(x,y,z))", "score": 0}
{"id": "eqasc_train_8611", "prediction": "all x.(KiwifruitFlower(x) -> PollinatedByBees(x))", "score": 0}
{"id": "eqasc_train_8612", "prediction": "all x y.((Petal(x) & Bee(y)) -> AttractsToFlowers(x,y))", "score": 0}
{"id": "eqasc_train_8613", "prediction": "all x.((DaisyLeaves(x) & WhitePetals(x)) -> UsedInSalads(x))", "score": 0}
{"id": "eqasc_train_8614", "prediction": "all x.((Daisy(x) & Has(x)) -> AttractsPollinators(x))", "score": 0}
{"id": "eqasc_train_8615", "prediction": "all x.(Hummingbird(x) -> Pollinator(x))", "score": 0}
{"id": "eqasc_train_8616", "prediction": "all x y.((Petal(x) & Hybrid(y)) -> AttractsTo(x,y))", "score": 0}
{"id": "eqasc_train_8617", "prediction": "all x.(Petal(x) -> (GreatForPotpourri(x) | GreatForRosePetalJelly(x)))", "score": 0}
{"id": "eqasc_train_8618", "prediction": "all x y.((Potpourri(x) & GreatFor(x,y)) -> AttractsPollinatorsToFlower(x,y))", "score": 0}
{"id": "eqasc_train_8619", "prediction": "all x.(Moss(x) -> CausesChemicalWeathering(x))", "score": 0}
{"id": "eqasc_train_8620", "prediction": "all x.(ChemicalWeathering(x) -> ChemicalDisintigrationOfRocks(x))", "score": 0}
{"id": "eqasc_train_8621", "prediction": "all x.(Moss(x) -> CausesChemicalBreakdownOfRocks(x))", "score": 0}
{"id": "eqasc_train_8622", "prediction": "all x y.((ChemicalWeathering(x) & Rock(y)) -> CausesChangesInMinerals(x,y))", "score": 0}
{"id": "eqasc_train_8623", "prediction": "all x y.((Moss(x) & Rock(y)) -> CausesChemicalChangesInMinerals(x,y))", "score": 0}
{"id": "eqasc_train_8624", "prediction": "all x.(Bryophyte(x) -> (Moss(x) | Liverwort(x) | Hornwort(x)))", "score": 0}
{"id": "eqasc_train_8625", "prediction": "all x.(Bryophyte(x) -> CausesChemicalWeathering(x))", "score": 0}
{"id": "eqasc_train_8626", "prediction": "all x.(Moss(x) -> (FloweringPlant(x) & GrowsInClumps(x)))", "score": 0}
{"id": "eqasc_train_8627", "prediction": "all x.((FlowerlessPlant(x) & CausesChemicalWeathering(x)) -> FlowerlessPlant(x))", "score": 0}
{"id": "eqasc_train_8628", "prediction": "all x.(Moss(x) -> CausesChemicalDisintigrationOfRocks(x))", "score": 0}
{"id": "eqasc_train_8629", "prediction": "all x.(Mos(x) -> CausesChemicalDisintegrationOfRocks(x))", "score": 0}
{"id": "eqasc_train_8630", "prediction": "all x.(Moss(x) -> (LacksRoots(x) & LacksStems(x)))", "score": 0}
{"id": "eqasc_train_8631", "prediction": "all x.((Plant(x) & LacksRoots(x) & LacksStems(x)) -> ChemicalWeathering(x))", "score": 0}
{"id": "eqasc_train_8632", "prediction": "all x.((Moss(x) & CompletelyDried(x)) -> Dead(x))", "score": 0}
{"id": "eqasc_train_8633", "prediction": "all x.(Dryness(x) -> PreventsChemicalWeathering(x))", "score": 0}
{"id": "eqasc_train_8634", "prediction": "all x.(Moss(x) -> CausesChemicalDisintigrationOfRocks(x))", "score": 0}
{"id": "eqasc_train_8635", "prediction": "all x y.((Moss(x) & Rock(y)) -> CausesDisintegration(x,y))", "score": 0}
{"id": "eqasc_train_8636", "prediction": "all x.((FlowerlessPlant(x) & CausesChemicalWeathering(x)) -> FlowerlessPlant(x))", "score": 0}
{"id": "eqasc_train_8637", "prediction": "all x.((ChemicalWeathering(x) & TropicalEnvironment(x)) -> StrongestIn(x,y))", "score": 0}
{"id": "eqasc_train_8638", "prediction": "all x.(Moss(x) -> StrongestInTropicalEnviornments(x))", "score": 0}
{"id": "eqasc_train_8639", "prediction": "all x y.((Substance(x) & Substance(y) & ReactsWith(x,y)) -> ChemicalBond(x))", "score": 1}
{"id": "eqasc_train_8640", "prediction": "all x.(Substance(x) -> ComposedOfMolecules(x))", "score": 0}
{"id": "eqasc_train_8641", "prediction": "all x y.((Molecule(x) & Molecule(y)) -> ReactsWith(x,y))", "score": 0}
{"id": "eqasc_train_8642", "prediction": "all x.(ChemicalBond(x) -> Vibrate(x))", "score": 1}
{"id": "eqasc_train_8643", "prediction": "all x y.((Substance(x) & Substance(y) & ReactsWith(x,y)) -> Vibrate(x))", "score": 1}
{"id": "eqasc_train_8644", "prediction": "all x y.((Solvent(x) & Solvent(y) & ReactsWith(x,y)) -> ChemicalBondsForm(x))", "score": 0}
{"id": "eqasc_train_8645", "prediction": "all x.(ChemicalBonding(x) -> (SharesElectrons(x) | TransfersElectrons(x)))", "score": 0}
{"id": "eqasc_train_8646", "prediction": "all x.((ShareOfElectrons(x) & Bond(x)) -> FormsBond(x))", "score": 0}
{"id": "eqasc_train_8647", "prediction": "all x.(Substance(x) -> (ReactsByShareingElectrons(x)))", "score": 0}
{"id": "eqasc_train_8648", "prediction": "all x y.((Substance(x) & Substance(y) & ReactsWith(x,y)) -> TransfersElectrons(x))", "score": 0}
{"id": "eqasc_train_8649", "prediction": "all x y.((Vinegar(x) & BakingSoda(y) & MixedTogether(x)) -> ReactsChemicallyToCreateCarbonDioxideGas(x))", "score": 0}
{"id": "eqasc_train_8650", "prediction": "all x y z.((Vinegar(x) & BakingSoda(y) & Vinegar(z) & BakingSoda(z)) -> ChemicalBondsForm(x,y,z))", "score": 0}
{"id": "eqasc_train_8651", "prediction": "all x.(Paper(x) -> FormedByChemicalBondingOfFibers(x))", "score": 0}
{"id": "eqasc_train_8652", "prediction": "all x y.((Paper(x) & Substance(y) & ReactsWith(x,y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_train_8653", "prediction": "all x y.((Substance(x) & Substance(y) & ReactsWith(x,y)) -> SharesTransferOfElectrons(x,y))", "score": 0}
{"id": "eqasc_train_8654", "prediction": "all x.((CellPhone(x) & UsesCellPhone(x)) -> CausesDistractedPeople(x))", "score": 0}
{"id": "eqasc_train_8655", "prediction": "all x.((AggressiveDriving(x) & DistractedDriver(x)) -> RapidlyEmergencyIntoLethalSituation(x))", "score": 0}
{"id": "eqasc_train_8656", "prediction": "all x.((CellPhone(x) & Driving(x)) -> LethalSituation(x))", "score": 0}
{"id": "eqasc_train_8657", "prediction": "all x.(VideoPhone(x) -> PossibleWithIphone(x))", "score": 0}
{"id": "eqasc_train_8658", "prediction": "all x.((UsesIphone(x) & CausesDistractedPeople(x)) -> DistractedPeople(x))", "score": 0}
{"id": "eqasc_train_8659", "prediction": "all x.((DrivesWithCellPhone(x)) -> Dangerous(x))", "score": 0}
{"id": "eqasc_train_8660", "prediction": "all x.((DistractedDriving(x) & Phone(x)) -> Dangerous(x))", "score": 0}
{"id": "eqasc_train_8661", "prediction": "all x y.((Samsung(x) & CellPhone(y) & SupportsVoiceDialing(y)) -> Sells(x,y))", "score": 0}
{"id": "eqasc_train_8662", "prediction": "all x y.((Samsung(x) & Person(y)) -> CanBecomeDistracted(x,y))", "score": 0}
{"id": "eqasc_train_8663", "prediction": "exists x.(Expert(x) & Claims(x,cellPhones) & InCars(x))", "score": 0}
{"id": "eqasc_train_8664", "prediction": "all x.((DistractedInCars(x) & Driving(x)) -> Dangerous(x))", "score": 0}
{"id": "eqasc_train_8665", "prediction": "all x.((Parent(x) & DistractedWhileDriving(x)) -> MoreLikelyAccidents(x))", "score": 0}
{"id": "eqasc_train_8666", "prediction": "all x.((CellPhoneUseWhileDriving(x) & IncreasesChanceOfAccident(x)) -> IncreasesChanceOfAccident(x))", "score": 0}
{"id": "eqasc_train_8667", "prediction": "(-all x.((Driver(x) & Distracted(x)) -> DrivesFaster(x)))", "score": 0}
{"id": "eqasc_train_8668", "prediction": "all x.((CellPhone(x) & People(y)) -> DriveFaster(y))", "score": 0}
{"id": "eqasc_train_8669", "prediction": "all x.((Person(x) & Distracted(x)) -> Hazard(x))", "score": 0}
{"id": "eqasc_train_8670", "prediction": "all x.(CellPhone(x) -> Hazardous(x))", "score": 0}
{"id": "eqasc_train_8671", "prediction": "all x.(CellPhone(x) -> Has(x,y))", "score": 0}
{"id": "eqasc_train_8672", "prediction": "all x.((Everyone(x) & CanBecomeDistracted(x)) -> Distracted(x))", "score": 0}
{"id": "eqasc_train_8673", "prediction": "all x.(Person(x) -> HomoSapiens(x))", "score": 0}
{"id": "eqasc_train_8674", "prediction": "all x.((CellPhone(x) & Uses(x,CellPhone)) -> Distracted(x))", "score": 0}
{"id": "eqasc_train_8675", "prediction": "all x y.((Lodge(x) & CellPhone(y)) -> CommunicationsWithOutsideWorld(x,y))", "score": 0}
{"id": "eqasc_train_8676", "prediction": "all x y.((Communication(x) & OutsideWorld(y)) -> Distracted(x,y))", "score": 0}
{"id": "eqasc_train_8677", "prediction": "all x.(Distraction(x) -> Dangerous(x))", "score": 0}
{"id": "eqasc_train_8678", "prediction": "all x.((CellPhone(x) & Uses(x,y)) -> CanCausePersonalToBecomeDangerous(x))", "score": 0}
{"id": "eqasc_train_8679", "prediction": "all x.(ExposedToWind(x) -> CausesErosionOfSoil(x))", "score": 0}
{"id": "eqasc_train_8680", "prediction": "all x.(Desertifcation(x) -> (Overgrazing(x) | SoilErosion(x) | ProlongedDrought(x) | ClimateChange(x)))", "score": 0}
{"id": "eqasc_train_8681", "prediction": "all x.((ExposedToWind(x) & Desertifcation(x)) -> CanCause(x,Desertifcation))", "score": 0}
{"id": "eqasc_train_8682", "prediction": "all x.(Desertification(x) -> InvolvesSoilErosion(x))", "score": 0}
{"id": "eqasc_train_8683", "prediction": "all x.(ExposedToWind(x) -> CanCauseDesertification(x))", "score": 0}
{"id": "eqasc_train_8684", "prediction": "all x.(Hurricane(x) -> CausesErosionOfSoil(x))", "score": 0}
{"id": "eqasc_train_8685", "prediction": "all x.(Erosion(x) -> (DetachmentAndMovementOfSoilMaterials(x) & (Wind(x) | Water(x))))", "score": 0}
{"id": "eqasc_train_8686", "prediction": "all x.(ExposedToWind(x) -> (CausesSoilDetach(x) & CausesSoilMovement(x)))", "score": 0}
{"id": "eqasc_train_8687", "prediction": "all x.((Soil(x) & ExposedToWind(x)) -> (CanDetach(x) & CanMove(x)))", "score": 0}
{"id": "eqasc_train_8688", "prediction": "all x y.((WaterErosion(x) & WindErosion(y)) -> SimilarConsequences(x,y))", "score": 0}
{"id": "eqasc_train_8689", "prediction": "all x y.((Water(x) & Wind(y)) -> SimilarConsequencesOnSoil(x,y))", "score": 0}
{"id": "eqasc_train_8690", "prediction": "all x.(SoilErosion(x) -> (DisturbanceOfLandSurface(x) & CausesSoilErosion(x)))", "score": 0}
{"id": "eqasc_train_8691", "prediction": "all x y.((ExposedToWind(x) & LandSurface(y)) -> CausesDisturbance(x,y))", "score": 0}
{"id": "eqasc_train_8692", "prediction": "all x.(Soil(x) -> Dirt(x))", "score": 0}
{"id": "eqasc_train_8693", "prediction": "all x.(ExposedToWind(x) -> CausesErosionOfDirt(x))", "score": 0}
{"id": "eqasc_train_8694", "prediction": "all x.((BareDrySoil(x) & WindErosion(x)) -> RemovesSignificantTopsoil(x))", "score": 0}
{"id": "eqasc_train_8695", "prediction": "all x.(ErosiveEffect(x) -> DrySoil(x))", "score": 0}
{"id": "eqasc_train_8696", "prediction": "all x.(Landscape(x) -> ScarredBySevereSoilErosion(x))", "score": 0}
{"id": "eqasc_train_8697", "prediction": "all x.((ExposedToWind(x) & Landscape(x)) -> CausesScarring(x))", "score": 0}
{"id": "eqasc_train_8698", "prediction": "all x.(Destruction(x) -> (SurfaceWeathering(x) | Erosion(x) | etc.))", "score": -1}
{"id": "eqasc_train_8699", "prediction": "all x.(ExposedToWind(x) -> CausesDestructionOfSoil(x))", "score": 0}
{"id": "eqasc_train_8700", "prediction": "all x.(Erosion(x) -> NaturalWearingAway(x))", "score": 0}
{"id": "eqasc_train_8701", "prediction": "all x.(ExposedToWind(x) -> NaturalWearingAwayOfSoil(x))", "score": 0}
{"id": "eqasc_train_8702", "prediction": "all x.(SoilErosion(x) -> CausesDecreasedCropYields(x))", "score": 0}
{"id": "eqasc_train_8703", "prediction": "all x y.((Soil(x) & Wind(y)) -> (ExposedTo(x,y) & CausesCropYieldsToDecrease(x)))", "score": 0}
{"id": "eqasc_train_8704", "prediction": "all x.(WestWind(x) -> LandBreeze(x))", "score": 0}
{"id": "eqasc_train_8705", "prediction": "all x.(ExposedToBreathes(x) -> CausesErosionOfSoil(x))", "score": 0}
{"id": "eqasc_train_8706", "prediction": "all x.((ExpositionToWater(x) & CausesErosion(x)) -> CausesErosion(x))", "score": 0}
{"id": "eqasc_train_8707", "prediction": "all x y.((WindErosion(x) & WindBarrier(y)) -> SlowedBy(x,y))", "score": 0}
{"id": "eqasc_train_8708", "prediction": "all x.(Tree(x) -> BlocksErosion(x))", "score": 0}
{"id": "eqasc_train_8709", "prediction": "all x.((SoilLosse(x) & Erosion(x)) -> (DamagingToWaterSupplies(x) & DamagesBay(x)))", "score": 0}
{"id": "eqasc_train_8710", "prediction": "all x.((ExposedToWind(x) & DamagesWaterSupplies(x)) -> CanDamageWaterSupplies(x))", "score": 0}
{"id": "eqasc_train_8711", "prediction": "all x y.((Light(x) & Eye(y)) -> EntersThroughOpening(x,y))", "score": 0}
{"id": "eqasc_train_8712", "prediction": "all x.(Dilation(x) -> VerySensitiveToSunlight(x))", "score": 0}
{"id": "eqasc_train_8713", "prediction": "all x y.((Dilation(x) & Pupil(y)) -> MakesSensitive(x,y))", "score": 0}
{"id": "eqasc_train_8714", "prediction": "all x y.((Eye(x) & Eye(y)) -> (LightEnters(x,y) & Pupil(x) & (MadeLarger(y) | MadeSmaller(y))))", "score": 0}
{"id": "eqasc_train_8715", "prediction": "all x y z.((Pupil(x) & Light(y) & Pupil(z)) -> (LightEnters(y,z) & (Larger(z) | Smaller(z)))))", "score": -1}
{"id": "eqasc_train_8716", "prediction": "all x.(Pupil(x) -> JustBehind(x,y))", "score": 0}
{"id": "eqasc_train_8717", "prediction": "all x y.((Light(x) & Eye(y) & OpeningInFrontOfLens(x,y)) -> EntersThrough(x,y))", "score": 0}
{"id": "eqasc_train_8718", "prediction": "all x y.((Photon(x) & Eye(y)) -> EntersThroughPupil(x,y))", "score": 0}
{"id": "eqasc_train_8719", "prediction": "all x.(Pupil(x) -> (ReactiveToLight(x) & ReactiveToAccommodation(x)))", "score": 0}
{"id": "eqasc_train_8720", "prediction": "all x y z.((Light(x) & Eye(y) & Opening(z) & ReactiveToLight(z) & ReactiveToAccommodation(z)) -> EntersThrough(x,y,z))", "score": 0}
{"id": "eqasc_train_8721", "prediction": "all x.(Eyes(x) -> (SeesAhead(x) & SeesBalance(x)))", "score": 0}
{"id": "eqasc_train_8722", "prediction": "all x.(Light(x) -> UsedForSeeingAhead(x))", "score": 0}
{"id": "eqasc_train_8723", "prediction": "all x y.((ElectromagneticEnergy(x) & Eye(y)) -> EntersThroughOpening(x,y))", "score": 0}
{"id": "eqasc_train_8724", "prediction": "all x.(Light(x) -> EssentialToVision(x))", "score": 0}
{"id": "eqasc_train_8725", "prediction": "all x y.((Vision(x) & Pupil(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_train_8726", "prediction": "all x y.((Pupil(x) & Light(y) & GoesThrough(x,y)) -> (Iris(x) & (Larger(x) | Smaller(x))))", "score": 0}
{"id": "eqasc_train_8727", "prediction": "all x.(StrongLight(x) -> PupilSmaller(x))", "score": 0}
{"id": "eqasc_train_8728", "prediction": "all x y.((Pupil(x) & StrongStimulation(y) & ReactsTo(x,y)) -> Smaller(x))", "score": 0}
{"id": "eqasc_train_8729", "prediction": "all x y.((LightRange(x) & Retina(y)) -> FocussedOn(x,y))", "score": 0}
{"id": "eqasc_train_8730", "prediction": "all x y.((Rays(x) & ShinedAtEyes(x)) -> EntersPupil(y))", "score": 0}
{"id": "eqasc_train_8731", "prediction": "all x y.((ElectricalInsulator(x) & ElectricalInsulator(y)) -> SlowsTransferOfElectricity(x,y))", "score": 0}
{"id": "eqasc_train_8732", "prediction": "all x.(Plastic(x) -> InsulatorOfElectricity(x))", "score": 0}
{"id": "eqasc_train_8733", "prediction": "all x.(Plastic(x) -> SlowsTransferOfElectricity(x))", "score": 0}
{"id": "eqasc_train_8734", "prediction": "all x.(Plastic(x) -> SlowsTransferOfElectricity(x))", "score": 0}
{"id": "eqasc_train_8735", "prediction": "Moreover, the coating is excellent electricallyinsulator.", "score": -1}
{"id": "eqasc_train_8736", "prediction": "all x y.((Coating(x) & ElectricityTransfer(y)) -> SlowsTransfer(x,y))", "score": 0}
{"id": "eqasc_train_8737", "prediction": "all x.(Tire(x) -> ElectricalInsulator(x))", "score": 0}
{"id": "eqasc_train_8738", "prediction": "all x.(Tire(x) -> SlowsTransferOfElectricity(x))", "score": 0}
{"id": "eqasc_train_8739", "prediction": "all x.(Plastic(x) -> SlowsTransferOfElectricity(x))", "score": 0}
{"id": "eqasc_train_8740", "prediction": "all x.(Sulfur(x) -> GoodElectricalInsulator(x))", "score": 0}
{"id": "eqasc_train_8741", "prediction": "all x.(Sulfur(x) -> SlowsTransferOfElectricity(x))", "score": 0}
{"id": "eqasc_train_8742", "prediction": "all x y.((Flashlight(x) & ChemicalEnergy(y)) -> ConvertsToLightEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8743", "prediction": "all x.((Flashlight(x) & HasBatteries(x)) -> Functions(x))", "score": 0}
{"id": "eqasc_train_8744", "prediction": "all x y.((ChemicalEnergy(x) & LightEnergy(y)) -> RequiresBatteries(x))", "score": 0}
{"id": "eqasc_train_8745", "prediction": "all x y z.((Student(x) & Battery(y) & FlashlightBulb(z)) -> (ChangedElectricalEnergy(x,y,z) & ChangedElectricalEnergy(x,z) & ChangedElectricalEnergy(x,z)))", "score": 0}
{"id": "eqasc_train_8746", "prediction": "all x.(Flashlight(x) -> UtilizesBatteriesToStoreChemicalEnergy(x))", "score": 0}
{"id": "eqasc_train_8747", "prediction": "all x y.((LightEnergy(x) & HeatEnergy(y)) -> (BecomesHeatEnergy(x) & BecomesLightEnergy(y)))", "score": 0}
{"id": "eqasc_train_8748", "prediction": "all x.(ChemicalEnergy(x) -> HeatEnergy(x))", "score": 0}
{"id": "eqasc_train_8749", "prediction": "all x.(Battery(x) -> StoreOfChemicalEnergy(x))", "score": 0}
{"id": "eqasc_train_8750", "prediction": "all x.(Flashlight(x) -> (GetsEnergyFromBatteries(x) & FromBatteries(x)))", "score": 0}
{"id": "eqasc_train_8751", "prediction": "all x.(Jule(x) -> (EnergyUsedByFlashlight(x) & TurnedOnForOneSecond(x)))", "score": 0}
{"id": "eqasc_train_8752", "prediction": "all x.(Flashlight(x) -> UsesJules(x))", "score": 0}
{"id": "eqasc_train_8753", "prediction": "all x.(Light(x) -> (ElectromagneticEnergy(x) & Waves(x)))", "score": 0}
{"id": "eqasc_train_8754", "prediction": "all x.(Flashlight(x) -> EmitsLightWaves(x))", "score": 0}
{"id": "eqasc_train_8755", "prediction": "all x y.((Work(x) & Energy(y)) -> ConvertsInto(x,y))", "score": 0}
{"id": "eqasc_train_8756", "prediction": "all x.(Flashlight(x) -> Works(x))", "score": 0}
{"id": "eqasc_train_8757", "prediction": "all x.((Man(x) & NamedDavidMisell(x)) -> InventsFlashlight(x))", "score": 0}
{"id": "eqasc_train_8758", "prediction": "all x y.((InventedByDavidMisell(x) & ChemicalEnergy(y)) -> ConvertsToLightEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8759", "prediction": "all x.((Plant(x) & RequiresSunlight(x)) -> GrowsWith(x,y))", "score": 0}
{"id": "eqasc_train_8760", "prediction": "all x.((Plant(x) & NeedsPhotons(x)) -> Grows(x))", "score": 0}
{"id": "eqasc_train_8761", "prediction": "all x.(Photosynthesis(x) -> (Plants(x) & exists y.(LifeForm(y) & UsesSunlight(x,y))))", "score": 0}
{"id": "eqasc_train_8762", "prediction": "all x.((Plant(x) & RequiresPhotosynthesis(x)) -> Grows(x))", "score": 0}
{"id": "eqasc_train_8763", "prediction": "all x y.((Plant(x) & Plant(y)) -> (NeedsAir(x) & NeedsAir(y)))", "score": 0}
{"id": "eqasc_train_8764", "prediction": "all x.(Grass(x) -> (NeedsAir(x) & NeedsSunlight(x)))", "score": 0}
{"id": "eqasc_train_8765", "prediction": "all x.(Vineyard(x) -> (VerticallyTrellised(x) & LowToGround(x) & IncreasesSunlightExposure(x)))", "score": 0}
{"id": "eqasc_train_8766", "prediction": "all x.(Vineyard(x) -> (VerticallyTrellised(x) & PromotesPlantGrowth(x)))", "score": 0}
{"id": "eqasc_train_8767", "prediction": "FRUITS (TypeOfPlant(x))", "score": 0}
{"id": "eqasc_train_8768", "prediction": "all x.(Fruit(x) -> RequiresSunlightToGrow(x))", "score": 0}
{"id": "eqasc_train_8769", "prediction": "all x y.((Sunlight(x) & Earth(y)) -> TakesAboutEightMinutes(x,y))", "score": 0}
{"id": "eqasc_train_8770", "prediction": "all x.((Plant(x) & Requires(x,8)) -> TakesEightMinutesToTravelToGrow(x))", "score": 0}
{"id": "eqasc_train_8771", "prediction": "all x y.((Sunlight(x) & Day(y)) -> WarmsSoil(x,y))", "score": 0}
{"id": "eqasc_train_8772", "prediction": "all x.((Plant(x) & Day(x)) -> GrowsDuring(x,Day))", "score": 0}
{"id": "eqasc_train_8773", "prediction": "all x.((Plant(x) & Avoids(x)) -> (FastGrowingVine(x) & CanTakeOverAreaInNoTime(x)))", "score": 0}
{"id": "eqasc_train_8774", "prediction": "all x.(Plant(x) -> (RequiresSunlight(x) & TakesOverArea(x)))", "score": 0}
{"id": "eqasc_train_8775", "prediction": "all x.(Sunlight(x) -> MadeOutOfEnergy(x))", "score": 0}
{"id": "eqasc_train_8776", "prediction": "all x.((VegetablePlant(x) & FullSunlight(x)) -> GrowsBetter(x))", "score": 0}
{"id": "eqasc_train_8777", "prediction": "all x.(Vegetable(x) -> RequiresSunlightToGrow(x))", "score": 0}
{"id": "eqasc_train_8778", "prediction": "all x.(Plant(x) -> (Lives(x) & GrowsByPhotosynthesis(x)))", "score": 0}
{"id": "eqasc_train_8779", "prediction": "all x y.((Plant(x) & Sunlight(y)) -> RequiresForPhotosynthesis(x,y))", "score": 0}
{"id": "eqasc_train_8780", "prediction": "all x.(Wheat(x) -> RequiresSunlightToGrow(x))", "score": 0}
{"id": "eqasc_train_8781", "prediction": "all x.(Sunlight(x) -> ElectromagneticEnergy(x))", "score": 0}
{"id": "eqasc_train_8782", "prediction": "all x.(Plant(x) -> RequiresElectromagneticEnergy(x))", "score": 0}
{"id": "eqasc_train_8783", "prediction": "all x y.((Laser(x) & Light(y)) -> UsedForProducing(x,y))", "score": 0}
{"id": "eqasc_train_8784", "prediction": "all x.(Laser(x) -> ProducesEnergy(x))", "score": 0}
{"id": "eqasc_train_8785", "prediction": "all x.((Laser(x) & Powerful(x) & HighConcentration(x)) -> (BurnSkin(x) | CutSkin(x)))", "score": 0}
{"id": "eqasc_train_8786", "prediction": "all x y.((Light(x) & Skin(y)) -> Burns(x,y))", "score": 0}
{"id": "eqasc_train_8787", "prediction": "all x.(LaserLight(x) -> Polarized(x))", "score": 0}
{"id": "eqasc_train_8788", "prediction": "all x.(Laser(x) -> Polarized(x))", "score": 0}
{"id": "eqasc_train_8789", "prediction": "all x.(Light(x) -> IlluminatesBlackness(x))", "score": 0}
{"id": "eqasc_train_8790", "prediction": "all x.(Laser(x) -> (UsedToIlluminate(x) & Illuminates(x)))", "score": 0}
{"id": "eqasc_train_8791", "prediction": "all x y.((Light(x) & Darkness(y)) -> Discovers(x,y))", "score": 0}
{"id": "eqasc_train_8792", "prediction": "all x.(Laser(x) -> (Produces(x) & Discovers(x) & HiddenInDarkness(x)))", "score": 0}
{"id": "eqasc_train_8793", "prediction": "all x y.((RaysOfLight(x) & Ground(y)) -> ShinesOn(x,y))", "score": 0}
{"id": "eqasc_train_8794", "prediction": "all x.(Laser(x) -> CanMakeRay(x))", "score": 0}
{"id": "eqasc_train_8795", "prediction": "all x.(Laser(x) -> (ProducesCoherentLight(x) & Laser(x)))", "score": 0}
{"id": "eqasc_train_8796", "prediction": "all x.(Laser(x) -> (ProducesCoherentBeam(x) & Laser(x)))", "score": 0}
{"id": "eqasc_train_8797", "prediction": "all x.(Laser(x) -> (ProducesRaysOrBeams(x) & ProducesBeams(x)))", "score": 0}
{"id": "eqasc_train_8798", "prediction": "all x.(Laser(x) -> CanProduceRays(x))", "score": 0}
{"id": "eqasc_train_8799", "prediction": "all x.(Laser(x) -> ProducesElectromagneticEnergy(x))", "score": 0}
{"id": "eqasc_train_8800", "prediction": "all x.(Animal(x) -> UsesSaturatedFattyAcidsToStoreEnergy(x))", "score": 1}
{"id": "eqasc_train_8801", "prediction": "all x.((Hibernation(x) & StoredEnergy(x)) -> UsesSlowly(x))", "score": 0}
{"id": "eqasc_train_8802", "prediction": "all x y.((Animal(x) & SaturatedFattyAcids(y)) -> SlowlyConsumes(x,y))", "score": 0}
{"id": "eqasc_train_8803", "prediction": "all x.(PotentialEnergy(x) -> (Stable(x) & StoredEnergy(x)))", "score": 0}
{"id": "eqasc_train_8804", "prediction": "all x y.((Animal(x) & SaturatedFattyAcids(y)) -> CreatesStablePotentialEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8805", "prediction": "all x.(KillerWhale(x) -> SocialAnimal(x))", "score": 0}
{"id": "eqasc_train_8806", "prediction": "all x.(KillerWhale(x) -> UsesSaturatedFattyAcids(x))", "score": 0}
{"id": "eqasc_train_8807", "prediction": "all x.(FattyAcid(x) -> BuildingBlockOfFats(x))", "score": 0}
{"id": "eqasc_train_8808", "prediction": "all x.(Animal(x) -> UsesFatsToStoreEnergy(x))", "score": 0}
{"id": "eqasc_train_8809", "prediction": "all x.(FattyAcid(x) -> (AbundantEnergySource(x) & InCells(x)))", "score": 0}
{"id": "eqasc_train_8810", "prediction": "all x y.((Animal(x) & BodyCell(y)) -> StoresEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8811", "prediction": "all x.((FattyAcids(x) & Glucose(x)) -> PrimaryEnergySource(x))", "score": 0}
{"id": "eqasc_train_8812", "prediction": "all x.(Animal(x) -> UsesGlucoseForEnergy(x))", "score": 0}
{"id": "eqasc_train_8813", "prediction": "all x.(Cat(x) -> UsesSaturatedFattyAcidsToStoreEnergy(x))", "score": 1}
{"id": "eqasc_train_8814", "prediction": "all x.(Animal(x) -> StoresExcessEnergyAsFat(x))", "score": 0}
{"id": "eqasc_train_8815", "prediction": "all x.(SaturatedFattyAcid(x) -> StoresExcessEnergy(x))", "score": 0}
{"id": "eqasc_train_8816", "prediction": "all x.(PotentialEnergy(x) -> EnergyStored(x))", "score": 0}
{"id": "eqasc_train_8817", "prediction": "all x y.((Animal(x) & SaturatedFattyAcids(y)) -> UsesToBecomeEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8818", "prediction": "all x y.((Cow(x) & Cow(y)) -> UsesSaturatedFattyAcidsToStoreEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8819", "prediction": "all x.(Dog(x) -> UsesSaturatedFattyAcids(x))", "score": 0}
{"id": "eqasc_train_8820", "prediction": "all x.(Dolphin(x) -> UniqueAnimal(x))", "score": 0}
{"id": "eqasc_train_8821", "prediction": "all x.(Dolphin(x) -> UsesSaturatedFattyAcids(x))", "score": 0}
{"id": "eqasc_train_8822", "prediction": "all x.(Hair(x) -> (Insulates(x) & Protects(x)))", "score": 0}
{"id": "eqasc_train_8823", "prediction": "all x.(Hair(x) -> GrowsFromHairFollicles(x))", "score": 0}
{"id": "eqasc_train_8824", "prediction": "all x y.((Follicles(x) & Skin(y)) -> (Insulates(x,y) & Protects(x,y)))", "score": 0}
{"id": "eqasc_train_8825", "prediction": "all x.(Hair(x) -> (Insulates(x) & KeepsBodyWarm(x) & InLargeVarietyOfClimates(x)))", "score": 0}
{"id": "eqasc_train_8826", "prediction": "all x y.((Hair(x) & Body(y)) -> (KeepsWarm(x,y) & ProtectsInClimate(x,y)))", "score": 0}
{"id": "eqasc_train_8827", "prediction": "all x.((LongHair(x) & MulletStyle(x)) -> VeryDifferent(x))", "score": 0}
{"id": "eqasc_train_8828", "prediction": "all x.((WearnedLong(x) | WornAsMullet(x)) -> (Insulation(x) & Protection(x)))", "score": 0}
{"id": "eqasc_train_8829", "prediction": "all x y.((Hair(x) & LivingCells(y) & HairFollicles(y)) -> ProducedBy(x,y))", "score": 0}
{"id": "eqasc_train_8830", "prediction": "all x y.((LivingCells(x) & Follicles(y)) -> (Insulates(x,y) & ProtectsBody(x,y)))", "score": 0}
{"id": "eqasc_train_8831", "prediction": "all x.(Hair(x) -> ComposedOfKeratin(x))", "score": 0}
{"id": "eqasc_train_8832", "prediction": "all x.(ProteinKeratin(x) -> (Insulates(x) & Protects(x)))", "score": 0}
{"id": "eqasc_train_8833", "prediction": "all x.(ProtectiveHair(x) -> GrowsBetweenToes(x))", "score": 0}
{"id": "eqasc_train_8834", "prediction": "all x.(Toe(x) -> InsulatedByHair(x))", "score": 0}
{"id": "eqasc_train_8835", "prediction": "all x.((LeanBodyMass(x) & BodyFat(x)) -> DerivedFromTotalBodyWater(x))", "score": 0}
{"id": "eqasc_train_8836", "prediction": "all x.(Hair(x) -> -Fat(x))", "score": 0}
{"id": "eqasc_train_8837", "prediction": "all x.(Mammal(x) -> HasHair(x))", "score": 0}
{"id": "eqasc_train_8838", "prediction": "all x.(Mammal(x) -> (HasInsulation(x) & ProtectsBody(x)))", "score": 0}
{"id": "eqasc_train_8839", "prediction": "all x y.((Hair(x) & HairFollicle(y) & DeadProteins(y) & SkinCells(z)) -> BuiltBy(x,y))", "score": 0}
{"id": "eqasc_train_8840", "prediction": "all x y.((Follicle(x) & DeadProtein(y)) -> (Insulates(x,y) & ProtectsBody(x,y)))", "score": 0}
{"id": "eqasc_train_8841", "prediction": "all x y.((String(x) & String(y)) -> Vibrate(x,y))", "score": 0}
{"id": "eqasc_train_8842", "prediction": "all x.((MakesNoise(x) & Vibrating(x)) -> Vibrating(x))", "score": 0}
{"id": "eqasc_train_8843", "prediction": "all x y.((String(x) & Plucking(x,y)) -> MakesNoise(x,y))", "score": 0}
{"id": "eqasc_train_8844", "prediction": "all x y z.((PluckingString(x) & Guitar(y) & Guitar(z)) -> CreatesSound(x,y,z))", "score": 0}
{"id": "eqasc_train_8845", "prediction": "all x.((Harp(x) | Guitar(x) | Harpsichord(x)) -> PluckedStringedInstrument(x))", "score": 0}
{"id": "eqasc_train_8846", "prediction": "all x y.((Guitar(x) & Guitar(y)) -> (Strumming(x,y) & CausesVibration(x,y)))", "score": 0}
{"id": "eqasc_train_8847", "prediction": "all x.(Sound(x) -> (VibratingAir(x) & Wave(x)))", "score": 0}
{"id": "eqasc_train_8848", "prediction": "all x y.((String(x) & Plucking(x,y)) -> CreatesSoundWaves(x))", "score": 0}
{"id": "eqasc_train_8849", "prediction": "all x y.((Sound(x) & VibratingStrings(y)) -> ProvidesSoundInStringedInstruments(y))", "score": 0}
{"id": "eqasc_train_8850", "prediction": "all x y.((String(x) & String(y)) -> CanMakeSoundInStringedInstruments(x,y))", "score": 0}
{"id": "eqasc_train_8851", "prediction": "all x y.((Strings(x) & Guitar(y) & Vibrates(x,y)) -> TransmitVibrationsToSaddle(x))", "score": 0}
{"id": "eqasc_train_8852", "prediction": "all x y.((Plucking(x) & Saddle(y)) -> Vibrates(x,y))", "score": 0}
{"id": "eqasc_train_8853", "prediction": "all x.(NylonString(x) -> SoftestSoundOnGuitar(x))", "score": 0}
{"id": "eqasc_train_8854", "prediction": "all x.(Guitar(x) -> (MakesSoundWithVibration(x) & Vibration(x)))", "score": 0}
{"id": "eqasc_train_8855", "prediction": "all x.(Melting(x) -> (SolidsHeatedAboveMeltingPoint(x) & SolidsHeatedAboveMeltingPoint(x)))", "score": 0}
{"id": "eqasc_train_8856", "prediction": "all x y.((MoltedOrDissolvedInWater(x) & CrystalLattice(y)) -> (Disrupted(y) & IonsMoveFreely(y)))", "score": 0}
{"id": "eqasc_train_8857", "prediction": "all x.((SolidsHeated(x) & IonsMoveFreely(x)) -> Dissolving(x))", "score": 0}
{"id": "eqasc_train_8858", "prediction": "all x.(SofterMeltPointWax(x) -> ProducesEvenBurningCandle(x))", "score": 0}
{"id": "eqasc_train_8859", "prediction": "all x y.((Heat(x) & Candle(y)) -> (AllowsBurn(x,y) & AllowsWaxMelt(x,y)))", "score": 0}
{"id": "eqasc_train_8860", "prediction": "all x y.((Ice(x) & Water(y)) -> MeltsInto(x,y))", "score": 0}
{"id": "eqasc_train_8861", "prediction": "all x y.((Ice(x) & AboveMeltingPoint(x,y)) -> ChangesIntoWater(x))", "score": 0}
{"id": "eqasc_train_8862", "prediction": "all x.((RoomTemperatureBelowMeltingPoint(x)) -> SolidSubstance(x))", "score": 0}
{"id": "eqasc_train_8863", "prediction": "all x.((Object(x) & BelowSolidsMeltingTemperature(x)) -> Solid(x))", "score": 0}
{"id": "eqasc_train_8864", "prediction": "all x.(IceCube(x) -> MeltsInLiquidWater(x))", "score": 0}
{"id": "eqasc_train_8865", "prediction": "all x.((IceCubes(x) & Heated(x)) -> TurnsIntoLiquidWater(x))", "score": 0}
{"id": "eqasc_train_8866", "prediction": "all x.(ColloidSystem(x) -> (SuspensionOfSolidMatter(x) & InLiquids(x)))", "score": 0}
{"id": "eqasc_train_8867", "prediction": "all x y.((ColloidSystem(x) & ColloidalSystem(y) & HeatsAboveMeltingPoint(x,y)) -> Melting(x))", "score": 0}
{"id": "eqasc_train_8868", "prediction": "all x.((Ice(x) & HeatedAboveMeltingPoint(x)) -> Melting(x))", "score": 0}
{"id": "eqasc_train_8869", "prediction": "all x.(Ice(x) -> (Solid(x) & Cold(x) & Hard(x)))", "score": 0}
{"id": "eqasc_train_8870", "prediction": "all x.((Ice(x) & HeatedAboveMeltingPoint(x)) -> MeltingOf(x))", "score": 0}
{"id": "eqasc_train_8871", "prediction": "all x.(IgneousRock(x) -> (HeatedToMeltingPoint(x) & FormsMagma(x)))", "score": 0}
{"id": "eqasc_train_8872", "prediction": "all x.(MeltingRock(x) -> FormsMagma(x))", "score": 0}
{"id": "eqasc_train_8873", "prediction": "all x.(Hurricane(x) -> ConvertsHeatEnergyToMechanicalEnergy(x))", "score": 0}
{"id": "eqasc_train_8874", "prediction": "all x.(Hurricane(x) -> ContainsThreevefulEnergy(x))", "score": 0}
{"id": "eqasc_train_8875", "prediction": "all x.(Hurricane(x) -> ConvertsLargeAmountOfHeat(x))", "score": 0}
{"id": "eqasc_train_8876", "prediction": "(LastHurricane(Hurricane) & (Hurricane(Hurricane) | Hurricane(Hurricane)))", "score": 0}
{"id": "eqasc_train_8877", "prediction": "(Energy(Andrew) & Energy(Fran))", "score": 0}
{"id": "eqasc_train_8878", "prediction": "all x.(Hurricane(x) -> TropicalCyclone(x))", "score": 0}
{"id": "eqasc_train_8879", "prediction": "all x.(TropicalCyclone(x) -> ConvertsHeatEnergyToMechanicalEnergy(x))", "score": 0}
{"id": "eqasc_train_8880", "prediction": "all x.(Hurricane(x) -> CausesSevereDamage(x))", "score": 0}
{"id": "eqasc_train_8881", "prediction": "all x.(MechanicalEnergy(x) -> CausesSevereDamage(x))", "score": 0}
{"id": "eqasc_train_8882", "prediction": "all x.(TropicalCyclone(x) -> ConvertsHeatEnergyToMechanicalEnergy(x))", "score": 0}
{"id": "eqasc_train_8883", "prediction": "all x.(Hurricane(x) -> CategorizedBySaffirSimpsonScale(x))", "score": 0}
{"id": "eqasc_train_8884", "prediction": "all x y.((SaffirSimpsonScale(x) & HeatEnergy(y)) -> ConvertsToMechanicalEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8885", "prediction": "all x y.((ChemicalWeathering(x) & IronInRock(y)) -> CausesOxidation(x,y))", "score": 0}
{"id": "eqasc_train_8886", "prediction": "all x.((Iron(x) & Oxidizes(x)) -> Rusts(x))", "score": 0}
{"id": "eqasc_train_8887", "prediction": "all x.(ChemicalWeathering(x) -> CausesIronToRust(x))", "score": 0}
{"id": "eqasc_train_8888", "prediction": "all x.(IronOxygen(x) -> GivesRoseyRedColorToSedimentaryRocks(x))", "score": 0}
{"id": "eqasc_train_8889", "prediction": "all x y.((ChemicalWeathering(x) & SedimentaryRock(y)) -> GivesRoshyRedColor(x,y))", "score": 0}
{"id": "eqasc_train_8890", "prediction": "all x.(Asteroids(x) -> (MadeOfRock(x) | MadeOfIron(x)))", "score": 0}
{"id": "eqasc_train_8891", "prediction": "all x y.((ChemicalWeathering(x) & Asteroids(y)) -> CausesIronOxidation(x,y))", "score": 0}
{"id": "eqasc_train_8892", "prediction": "all x y.((ChemicalWeathering(x) & Iron(y)) -> CausesToRrust(x,y))", "score": 0}
{"id": "eqasc_train_8893", "prediction": "all x.(OxidationOfIronMinerals(x) -> RednessOfRocks(x))", "score": 0}
{"id": "eqasc_train_8894", "prediction": "all x y.((ChemicalWeathering(x) & Rock(y) & ContainsIron(y)) -> CausesRedness(x,y))", "score": 0}
{"id": "eqasc_train_8895", "prediction": "Fe is the periodicSymbolForIron(x)", "score": -1}
{"id": "eqasc_train_8896", "prediction": "all x y.((ChemicalWeathering(x) & Rock(y)) -> CausesFEOxidation(x,y))", "score": 0}
{"id": "eqasc_train_8897", "prediction": "all x.(Oxides(x) -> (Oxides(x) & Oxygen(x)))", "score": 0}
{"id": "eqasc_train_8898", "prediction": "all x y z.((ChemicalWeathering(x) & IronInRock(y) & Oxygen(z)) -> CombinesWith(x,y,z))", "score": 0}
{"id": "eqasc_train_8899", "prediction": "all x.(ChemicalWeathering(x) -> VerySlowInGranite(x))", "score": 0}
{"id": "eqasc_train_8900", "prediction": "all x.((IronOxidation(x) & Granite(x)) -> VerySlow(x))", "score": 0}
{"id": "eqasc_train_8901", "prediction": "all x.((IronOxygen(x) & (Red(x) | Orange(x) | Brown(x))) -> Produced(x))", "score": 0}
{"id": "eqasc_train_8902", "prediction": "all x.(ChemicalWeathering(x) -> (CausesIronToTurn(x,brown) | CausesIronToTurn(x,red) | CausesIronToTurn(x,orange)))", "score": 0}
{"id": "eqasc_train_8903", "prediction": "all x.(Rust(x) -> OxidizedIron(x))", "score": 0}
{"id": "eqasc_train_8904", "prediction": "all x.(ChemicalWeathering(x) -> CausesRust(x))", "score": 0}
{"id": "eqasc_train_8905", "prediction": "all x.((IronOxidizes(x) & ProducesIronOxid(x)) -> Rust(x))", "score": 0}
{"id": "eqasc_train_8906", "prediction": "all x y z.((ChemicalWeathering(x) & Iron(y) & Rock(z)) -> CausesRust(x,y,z))", "score": 0}
{"id": "eqasc_train_8907", "prediction": "all x.((HotWeather(x) & Oxidation(x)) -> OccursRapidly(x))", "score": 0}
{"id": "eqasc_train_8908", "prediction": "all x.((IronOxidation(x) & Hot(x)) -> MoreOccurs(x))", "score": 0}
{"id": "eqasc_train_8909", "prediction": "all x y.((ChemicalDisintegrationOfRocks(x) & IronInRock(y)) -> Oxidizes(x,y))", "score": 0}
{"id": "eqasc_train_8910", "prediction": "all x.(LowRainfall(x) -> SlowChemicalWeatheringOfRock(x))", "score": 0}
{"id": "eqasc_train_8911", "prediction": "all x.(LowRainfall(x) -> LeadsToOxidationOfIronInRock(x))", "score": 0}
{"id": "eqasc_train_8912", "prediction": "all x y.((ChemicalDisintegrationOfRocks(x) & IronInRock(y)) -> CausesOxidation(x,y))", "score": 0}
{"id": "eqasc_train_8913", "prediction": "all x y.((AlteredWallRock(x) & Pyrite(y)) -> (OxidizedToLimonite(y) | OxidizedToGeothite(y) | OxidizedToHematite(y)))", "score": 0}
{"id": "eqasc_train_8914", "prediction": "all x y z.((ChemicalWeathering(x) & Pyrite(y) & Limonite(z) & Geothite(z) & Hematite(z)) -> ChangesTo(x,y,z))", "score": 0}
{"id": "eqasc_train_8915", "prediction": "all x.(Limestone(x) -> (CommonRockType(x) & CommonRockType(x)))", "score": 0}
{"id": "eqasc_train_8916", "prediction": "all x y z.((ChemicalWeathering(x) & Iron(y) & Limestone(z)) -> CausesOxidation(x,y,z))", "score": 0}
{"id": "eqasc_train_8917", "prediction": "all x y z.((Colder(x) & Warmer(y) & Touches(x,y) & Warmer(z)) -> ThermalConductionOccurs(x))", "score": 0}
{"id": "eqasc_train_8918", "prediction": "all x y.((Glacier(x) & WarmerArea(y)) -> (MeltsIce(x) & DepositsSediments(x)))", "score": 0}
{"id": "eqasc_train_8919", "prediction": "all x y.((Glacier(x) & ThermalConduction(y)) -> Melts(x,y))", "score": 0}
{"id": "eqasc_train_8920", "prediction": "all x y.((ThermalConduction(x) & Center(y)) -> RemovesHeat(x,y))", "score": 0}
{"id": "eqasc_train_8921", "prediction": "all x y.((Colder(x) & Warmer(y)) -> Touches(x,y))", "score": 0}
{"id": "eqasc_train_8922", "prediction": "all x.((HeatSinkMaterial(x) & HighThermalConductivity(x)) -> ChosenFor(x,y))", "score": 0}
{"id": "eqasc_train_8923", "prediction": "all x.(HeatSink(x) -> (DesignedToBeCooler(x) & InContactWith(x)))", "score": 0}
{"id": "eqasc_train_8924", "prediction": "all x.(Cabbage(x) -> CoolerThanCucumber(x))", "score": 0}
{"id": "eqasc_train_8925", "prediction": "all x y.((Cabbage(x) & Cucumber(y) & Touches(x,y)) -> ThermalConductionOccurs(x))", "score": 0}
{"id": "eqasc_train_8926", "prediction": "all x y.((Cooler(x) & Warmer(y)) -> Touches(x,y)) HeatRemovedFromCenter(x))", "score": -1}
{"id": "eqasc_train_8927", "prediction": "all x y.((Heat(x) & WarmerObject(y)) -> CoolerObject(y))", "score": 0}
{"id": "eqasc_train_8928", "prediction": "all x y.((Heat(x) & CoolerObject(y) & ThermalConduction(x)) -> FlowsTo(x,y))", "score": 0}
{"id": "eqasc_train_8929", "prediction": "all x.((ThermalConductivity(x) & SedimentType(x)) -> Variable(x))", "score": 0}
{"id": "eqasc_train_8930", "prediction": "all x y.((Cooler(x) & Warmer(y)) -> ConductivityVariatesWithSedimentType(x,y))", "score": 0}
{"id": "eqasc_train_8931", "prediction": "all x.((ThermalConductivity(x) & Compaction(x)) -> Increases(x))", "score": 0}
{"id": "eqasc_train_8932", "prediction": "all x.((Conduction(x) & Compaction(x)) -> Increased(x))", "score": 0}
{"id": "eqasc_train_8933", "prediction": "all x.(HeatTransfer(x) -> (Conduction(x) | Convection(x) | Radiation(x)))", "score": 0}
{"id": "eqasc_train_8934", "prediction": "all x y z.((HeatTransfer(x) & Warmer(y) & Cooler(z)) -> HeatTransfer(x,y,z))", "score": 0}
{"id": "eqasc_train_8935", "prediction": "all x y.((Friction(x) & Object(y)) -> CausesToLoseEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8936", "prediction": "all x y.((Object(x) & NonElasticSurface(y)) -> LosesKineticEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8937", "prediction": "all x y.((Mass(x) & Friction(y) & -Friction(y)) -> LosesEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8938", "prediction": "all x.(Friction(x) -> DecreaseOfSpeed(x))", "score": 0}
{"id": "eqasc_train_8939", "prediction": "all x.(DeclineOfSpeed(x) -> LosingEnergy(x))", "score": 0}
{"id": "eqasc_train_8940", "prediction": "all x.((Object(x) & (Toaster(x) | Bathtub(x) | Car(x) | Fork(x))) -> Confusing(x))", "score": 0}
{"id": "eqasc_train_8941", "prediction": "all x y.((Car(x) & Car(y)) -> (LosesEnergy(x,y) & CausesFriction(x,y)))", "score": 0}
{"id": "eqasc_train_8942", "prediction": "all x.((Electron(x) & LessEnergy(x)) -> SlowsDown(x))", "score": 0}
{"id": "eqasc_train_8943", "prediction": "all x y.((Friction(x) & Object(y)) -> SlowsDown(x,y))", "score": 0}
{"id": "eqasc_train_8944", "prediction": "all x y.((Word(x) & Car(y)) -> (RefersToObject(x,y) & Class(x,y)))", "score": 0}
{"id": "eqasc_train_8945", "prediction": "all x y.((Car(x) & Friction(y)) -> LosesEnergy(y,x))", "score": 0}
{"id": "eqasc_train_8946", "prediction": "all x.(Object(x) -> exists y.(Thing(y) & Object(x,y))))", "score": -1}
{"id": "eqasc_train_8947", "prediction": "all x.(Friction(x) -> CausesLossEnergy(x))", "score": 0}
{"id": "eqasc_train_8948", "prediction": "all x.(Friction(x) -> GeneratesHeat(x))", "score": 0}
{"id": "eqasc_train_8949", "prediction": "all x y.((GeneratingHeat(x) & Object(y)) -> LosesEnergy(y))", "score": 0}
{"id": "eqasc_train_8950", "prediction": "all x y.((FrictionalProcess(x) & Wave(y)) -> ConvertsEnergyToHeat(x,y))", "score": 0}
{"id": "eqasc_train_8951", "prediction": "all x y.((Heat(x) & Heat(y)) -> EnergyLoss(x,y))", "score": 0}
{"id": "eqasc_train_8952", "prediction": "Dear Ashlee, HeatInReentryPhaseDueToFriction(x) -> (Ashlee(x) & Spacecraft(x) & Air(x)))", "score": -1}
{"id": "eqasc_train_8953", "prediction": "all x.((Spacecraft(x) & ReenteringAtmosphere(x)) -> LosesEnergy(x))", "score": 0}
{"id": "eqasc_train_8954", "prediction": "(all x.(Pressure(x) -> CausesFriction(x)) & all y.(Friction(y) -> CausesHeat(y)))", "score": 0}
{"id": "eqasc_train_8955", "prediction": "all x y.((Object(x) & Pressure(y)) -> CausesToLoseEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8956", "prediction": "all x.(ReducesHeatFrictionBuildUp(x) -> ReducesHeatFriction(x))", "score": 0}
{"id": "eqasc_train_8957", "prediction": "all x y.((HeatBuildUp(x) & Object(y)) -> LosesEnergy(y))", "score": 0}
{"id": "eqasc_train_8958", "prediction": "all x.((Surface(x) & RubsTogether(x)) -> FrictionOccurs(x))", "score": 0}
{"id": "eqasc_train_8959", "prediction": "all x y.((Surface(x) & Surface(y) & RubbingTogether(x,y)) -> LosesEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8960", "prediction": "all x.(Friction(x) -> DissipatesEnergy(x))", "score": 0}
{"id": "eqasc_train_8961", "prediction": "all x y.((OpposingForce(x) & Force(y)) -> DissipatesEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8962", "prediction": "all x.((Substance(x) & RubsTogether(x)) -> Friction(x))", "score": 0}
{"id": "eqasc_train_8963", "prediction": "all x y.((Substance(x) & Substance(y) & RubbingTogether(x,y)) -> CausesObjectToLoseEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8964", "prediction": "all x.((ByproductsOfFriction(x) & Friction(x)) -> AgenciesAgainstMotion(x))", "score": 0}
{"id": "eqasc_train_8965", "prediction": "all x y.((Force(x) & Motion(y)) -> CausesLossEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8966", "prediction": "all x.(Lubricating(x) -> (ReducesFriction(x) & PreventsHeatDamage(x)))", "score": 0}
{"id": "eqasc_train_8967", "prediction": "all x y.((Lubrication(x) & Object(y)) -> PreventsLosingEnergy(x,y))", "score": 0}
{"id": "eqasc_train_8968", "prediction": "all x.(SlimeMold(x) -> (FungusLikeProtist(x) & FoundOnRoastingLogsAndCompost(x)))", "score": 0}
{"id": "eqasc_train_8969", "prediction": "all x.(SlimeMold(x) -> NonParasitic(x))", "score": 0}
{"id": "eqasc_train_8970", "prediction": "all x.(NonparasiticProtist(x) -> (LivesOnDecayingTrees(x) & FungusLike(x)))", "score": 0}
{"id": "eqasc_train_8971", "prediction": "all x.(Decomposition(x) & Composting(x))", "score": 0}
{"id": "eqasc_train_8972", "prediction": "all x.(SlimeMold(x) -> (FungusLikeProtist(x) & FoundOnRottingLogs(x) & FoundOnDecomposedMatter(x)))", "score": 0}
{"id": "eqasc_train_8973", "prediction": "all x.(SlimeMold(x) -> (FungusLikeSingleCellledOrganism(x) & SingleCellledOrganism(x)))", "score": 0}
{"id": "eqasc_train_8974", "prediction": "all x.(SludgeCompost(x) -> (HighInNutrients(x) & HighInNutrients(x)))", "score": 0}
{"id": "eqasc_train_8975", "prediction": "all x.(SlimeMold(x) -> (FoundOnRottingLogs(x) & FoundOnNutrientRichAreas(x)))", "score": 0}
{"id": "eqasc_train_8976", "prediction": "all x.((MatureLog(x) & AppearanceOfMushrooms(x)) -> ObscissiveSignOfMatureLogs(x))", "score": 0}
{"id": "eqasc_train_8977", "prediction": "all x.(Mushroom(x) -> FoundOnCompost(x))", "score": 0}
{"id": "eqasc_train_8978", "prediction": "all x.(TrueSlimeMold(x) -> MucusLikeOrganism(x))", "score": 0}
{"id": "eqasc_train_8979", "prediction": "all x.(MucusOrganism(x) -> (FoundOnRotatingLogs(x) | FoundOnCompost(x)))", "score": 0}
{"id": "eqasc_train_8980", "prediction": "all x.(SlimeMold(x) -> (NauseousFungus(x) & SlimeMold(x)))", "score": 0}
{"id": "eqasc_train_8981", "prediction": "all x.(NauseousFungus(x) -> (FoundOnRottingLogs(x) | FoundOnCompost(x)))", "score": 0}
{"id": "eqasc_train_8982", "prediction": "all x.(Protist(x) -> (Unicellular(x) & Eukaryotic(x)))", "score": 0}
{"id": "eqasc_train_8983", "prediction": "all x.(SlimeMold(x) -> Unicellular(x))", "score": 0}
{"id": "eqasc_train_8984", "prediction": "all x.((Tree(x) & Cut(x)) -> Log(x))", "score": 0}
{"id": "eqasc_train_8985", "prediction": "all x.(SlimeMold(x) -> (FungusLikeProtist(x) & FoundOnRoastingTreesAndCompost(x)))", "score": 0}
{"id": "eqasc_train_8986", "prediction": "all x.(SlimeMold(x) -> (ReproduceBySpores(x) & LikeFungi(x)))", "score": 0}
{"id": "eqasc_train_8987", "prediction": "all x y.((Organism(x) & RottenLog(y) & Compost(y)) -> ReproducesBySpores(x,y))", "score": 0}
{"id": "eqasc_train_8988", "prediction": "all x.(MethaneGas(x) -> (ProducedByRoastingCompost(x) & ProducedByRoastingTrash(x) & ProducedByRoastingHumanWaste(x)))", "score": 0}
{"id": "eqasc_train_8989", "prediction": "all x.(MethaneGas(x) -> ProducedBySlimeMolds(x))", "score": 0}
{"id": "eqasc_train_8990", "prediction": "all x.(SlimeMold(x) -> LéasedOrganism(x))", "score": 0}
{"id": "eqasc_train_8991", "prediction": "all x.(FuligoSeptica(x) -> CausesSlimeMold(x))", "score": 0}
{"id": "eqasc_train_8992", "prediction": "all x.(FuligoSeptica(x) -> CausesFungusOnRottingCompost(x))", "score": 0}
{"id": "eqasc_train_8993", "prediction": "all x.((Animal(x) | Plant(x) | Fungus(x) | Protist(x)) -> Eukaryote(x))", "score": 0}
{"id": "eqasc_train_8994", "prediction": "all x.((SlimeMold(x) & FoundOnRoastingLogs(x)) -> Eukaryote(x))", "score": 0}
{"id": "eqasc_train_8995", "prediction": "all x.(Protist(x) -> (SingleLeavedOrganism(x) & ContainsOrganelles(x)))", "score": 0}
{"id": "eqasc_train_8996", "prediction": "all x.(SlimeMold(x) -> (FungusLike(x) & SingleLeavedOrganism(x)))", "score": 0}
{"id": "eqasc_train_8997", "prediction": "all x y z.((Water(x) & SeedCoat(y) & Root(z) & ForceAgainst(x,y) & SeedCoat(z)) -> CausesRootEmergenceFrom(z,y))", "score": 0}
{"id": "eqasc_train_8998", "prediction": "all x y.((Seed(x) & Watered(x)) -> (GrowsIntoHabitableRoot(x) & SpoutsFlowers(y)))", "score": 0}
{"id": "eqasc_train_8999", "prediction": "all x y.((Flower(x) & Seed(y)) -> EmergesFromRootsFromCoat(x,y))", "score": 0}
{"id": "eqasc_train_9000", "prediction": "all x.(NewSprout(x) -> EmergesFromRoots(x))", "score": 0}
{"id": "eqasc_train_9001", "prediction": "all x y.((WaterForce(x) & SeedCoat(y)) -> CausesSpokenRoots(x,y))", "score": 0}
{"id": "eqasc_train_9002", "prediction": "all x y.((WaterForce(x) & RootSpoken(y)) -> HelpsSpoken(x,y))", "score": 0}
{"id": "eqasc_train_9003", "prediction": "all x.(Tree(x) -> (UsesOsmosis(x) & ForcesWaterUpwards(x)))", "score": 0}
{"id": "eqasc_train_9004", "prediction": "all x y.((OsmosisOfWater(x) & Root(y)) -> EnablesEmergenceFromSeed(x,y))", "score": 0}
{"id": "eqasc_train_9005", "prediction": "all x y z.((H2o(x) & SeedCoat(y) & Root(z) & SeedCoat(z)) -> CausesEmergenceFrom(z,y,z))", "score": 0}
{"id": "eqasc_train_9006", "prediction": "all x y.((H2O(x) & SeedCoat(y)) -> CausesRootEmergenceFromSeed(x,y))", "score": 0}
{"id": "eqasc_train_9007", "prediction": "all x.(Acorn(x) -> (Seed(x,OakTree) & Seed(x,OakTree)))", "score": 0}
{"id": "eqasc_train_9008", "prediction": "all x y z.((Water(x) & Root(y) & Acorn(z)) -> CausesEmergenceFrom(y,z))", "score": 0}
{"id": "eqasc_train_9009", "prediction": "all x.(HeavyWetSoil(x) -> (DecouragesHealthyRootGrowth(x) & EncouragesRootRoots(x)))", "score": 0}
{"id": "eqasc_train_9010", "prediction": "all x y.((WaterForce(x) & SeedCoat(y) & HeavyWetSoils(x)) -> CausesGrowthToEmergeFromSeed(x,y))", "score": 0}
{"id": "eqasc_train_9011", "prediction": "all x.(Germination(x) -> DependsOnSeedCoat(x))", "score": 0}
{"id": "eqasc_train_9012", "prediction": "all x y z.((WaterForce(x) & Root(y) & Root(z)) -> CausesGerminationWithEmergenceOfRoot(x,y,z))", "score": 0}
{"id": "eqasc_train_9013", "prediction": "all x y.((SeedlingRoot(x) | SeedlingRadicle(y)) -> EmergesFromSeedCoat(x,y))", "score": 0}
{"id": "eqasc_train_9014", "prediction": "all x y.((WaterForce(x) & SeedCoat(y) & CausesGermination(x,y)) -> CausesGermination(x,y))", "score": 0}
{"id": "eqasc_train_9015", "prediction": "all x.(Force(x) -> (Push(x) | Pull(x)))", "score": 0}
{"id": "eqasc_train_9016", "prediction": "all x.((PushOrPullOfWater(x) & SeedCoat(x)) -> RootEmerges(x))", "score": 0}
{"id": "eqasc_train_9017", "prediction": "all x.(Waves(x) -> FormedFromWindAgainstWater(x))", "score": 0}
{"id": "eqasc_train_9018", "prediction": "all x y.((WavesAgainstSeedCoat(x) & Root(y)) -> CausesRootEmergenceFromSeed(x,y))", "score": 0}
{"id": "eqasc_train_9019", "prediction": "all x.(Gamete(x) -> (UniteInFertilization(x) & FormsDiploidZygote(x)))", "score": 0}
{"id": "eqasc_train_9020", "prediction": "all x.((Gamete(x) & Mating(x)) -> Zygot(x))", "score": 0}
{"id": "eqasc_train_9021", "prediction": "all x y.((Gamete(x) & Zygote(y)) -> MatesInto(x,y))", "score": 0}
{"id": "eqasc_train_9022", "prediction": "all x.(Gamete(x) -> (UniteInFertilization(x) & BecomesEmbryo(x)))", "score": 0}
{"id": "eqasc_train_9023", "prediction": "all x y z.((Ovum(x) & Spermatozoa(y) & Fertilization(z) & UnitesIn(x,y,z)) -> FormsDiploidZygote(x))", "score": 0}
{"id": "eqasc_train_9024", "prediction": "all x.(Gamete(x) -> (HaploidEgg(x) | HaploidSpore(x)) & FuseToFormZygote(x)))", "score": -1}
{"id": "eqasc_train_9025", "prediction": "all x.(DiploidZygotes(x) -> (HaploidSperm(x) & HaploidEgg(x)))", "score": 0}
{"id": "eqasc_train_9026", "prediction": "all x.(HaploidGamete(x) -> UnitesToFormDiploidZygote(x))", "score": 0}
{"id": "eqasc_train_9027", "prediction": "all x.(Gamete(x) -> TurnsIntoDiploidZygotes(x))", "score": 0}
{"id": "eqasc_train_9028", "prediction": "all x.(Mitosis(x) -> ProducesDiploteCells(x))", "score": 0}
{"id": "eqasc_train_9029", "prediction": "all x.(Gamete(x) -> (UniteInFertilization(x) & BeginMitosis(x)))", "score": 0}
{"id": "eqasc_train_9030", "prediction": "all x y z.((Sperm(x) & Egg(y) & Fertilization(z)) -> (UniteInFertilization(x,y,z) & FormsDiploidZygote(x)))", "score": 0}
{"id": "eqasc_train_9031", "prediction": "all x.((Sperm(x) & Ovar(x)) -> Gametes(x))", "score": 0}
{"id": "eqasc_train_9032", "prediction": "all x y z.((Sperm(x) & Ovum(y) & DiploidZygote(z)) -> (Underlies(x,y,z) & Forms(x,z)))", "score": 0}
{"id": "eqasc_train_9033", "prediction": "all x.(Syngamy(x) -> ProducesDiploidZygote(x))", "score": 0}
{"id": "eqasc_train_9034", "prediction": "all x.(Syngamy(x) -> OccursInGametes(x))", "score": 0}
{"id": "eqasc_train_9035", "prediction": "all x y.((Syngamy(x) & Gamete(y) & Fertilization(y)) -> UnitesInFertilization(y,x))", "score": 0}
{"id": "eqasc_train_9036", "prediction": "all x y.((Gamete(x) & Fertilization(x) & Venturir(y)) -> MulticellularEmbryo(x,y))", "score": 0}
{"id": "eqasc_train_9037", "prediction": "all x y.((AbsorbingEnergy(x) & Object(y)) -> CausesToHeat(y,x))", "score": 0}
{"id": "eqasc_train_9038", "prediction": "all x.(DarkColor(x) -> AbsorbsLightEnergy(x))", "score": 0}
{"id": "eqasc_train_9039", "prediction": "all x y.((DarkColor(x) & Object(y)) -> CausesHeat(x,y))", "score": 0}
{"id": "eqasc_train_9040", "prediction": "all x.(CrystalBall(x) -> SpecialUseAsRitualObject(x))", "score": 0}
{"id": "eqasc_train_9041", "prediction": "all x y.((CrystalBall(x) & EnergyAbsorbing(x)) -> Heats(y))", "score": 0}
{"id": "eqasc_train_9042", "prediction": "all x.(Light(x) -> (Energy(x) & Absorbed(x) & TurnedIntoHeat(x)))", "score": 0}
{"id": "eqasc_train_9043", "prediction": "all x y.((LightEnergy(x) & Object(y)) -> WarmUp(y))", "score": 0}
{"id": "eqasc_train_9044", "prediction": "all x.(BlackObject(x) -> BestHeatAbsorber(x))", "score": 0}
{"id": "eqasc_train_9045", "prediction": "all x.(BlackObject(x) -> BestAtHeating(x))", "score": 0}
{"id": "eqasc_train_9046", "prediction": "all x.((Metal(x) & Heats(x)) -> Expands(x))", "score": 0}
{"id": "eqasc_train_9047", "prediction": "all x y.((AbsorbingEnergy(x) & MetalObject(y)) -> CausesExpansion(x,y))", "score": 0}
{"id": "eqasc_train_9048", "prediction": "all x.(LatentHeat(x) -> CausesChange(x))", "score": 0}
{"id": "eqasc_train_9049", "prediction": "all x.(AbsorbingEnergy(x) -> ChangesState(x))", "score": 0}
{"id": "eqasc_train_9050", "prediction": "all x.(Car(x) -> (GroupVehicles(x) & GroupGroundObjects(x)))", "score": 0}
{"id": "eqasc_train_9051", "prediction": "all x y.((AbsorbingEnergy(x) & Car(y)) -> CausesHeat(y,x))", "score": 0}
{"id": "eqasc_train_9052", "prediction": "all x.(Ice(x) -> AbsorbsHeatAsMelts(x))", "score": 0}
{"id": "eqasc_train_9053", "prediction": "all x.((Ice(x) & Heated(x)) -> Melts(x))", "score": 0}
{"id": "eqasc_train_9054", "prediction": "all x y.((Energy(x) & Ecosystem(y)) -> EntersAsSunlight(x,y))", "score": 0}
{"id": "eqasc_train_9055", "prediction": "all x y.((Sunlight(x) & Object(y)) -> Absorbs(x,y))", "score": 1}
{"id": "eqasc_train_9056", "prediction": "all x y.((Sunlight(x) & Atmosphere(y)) -> (ShinesThrough(x,y) & AbsorbedBy(x,y)))", "score": 0}
{"id": "eqasc_train_9057", "prediction": "all x y.((Sunlight(x) & EarthSurface(y)) -> Heats(x,y))", "score": 0}
{"id": "eqasc_train_9058", "prediction": "all x y.((Student(x) & Magnet(y)) -> TestsEffectOnMetalObjects(x,y))", "score": 0}
{"id": "eqasc_train_9059", "prediction": "all x y.((Metal(x) & Energy(y)) -> Absorbs(x,y))", "score": 0}
{"id": "eqasc_train_9060", "prediction": "all x.(AbsorbingEnergy(x) -> CausesMoleculesEnergy(x))", "score": 0}
{"id": "eqasc_train_9061", "prediction": "all x.((NoRadiationEnergyAbsorbed(x)) -> -Damage(x))", "score": 0}
{"id": "eqasc_train_9062", "prediction": "all x y.((RadiationEnergy(x) & Object(y)) -> Heats(y))", "score": 0}
{"id": "eqasc_train_9063", "prediction": "all x y.((AbsorbingEnergy(x) & Metal(y)) -> CausesExpansion(x,y))", "score": 0}
{"id": "eqasc_train_9064", "prediction": "all x.(Food(x) -> HasEnergyIn(x))", "score": 0}
{"id": "eqasc_train_9065", "prediction": "all x y.((Food(x) & Food(y)) -> Absorbs(x,y))", "score": 0}
{"id": "eqasc_train_9066", "prediction": "all x y.((Animal(x) & LivesUnderGround(x) & WildFire(y)) -> ProtectedFrom(x,y))", "score": 0}
{"id": "eqasc_train_9067", "prediction": "all x.(Marmot(x) -> LivesInUndergroundBurrows(x))", "score": 0}
{"id": "eqasc_train_9068", "prediction": "all x y.((Marmot(x) & UndergroundBurrow(y)) -> ProtectedFromWildFire(x,y))", "score": 0}
{"id": "eqasc_train_9069", "prediction": "all x.(MoleRat(x) -> (LivesUnderGround(x) & -HasFur(x) & -HasEyes(x)))", "score": 0}
{"id": "eqasc_train_9070", "prediction": "all x.(MoleRat(x) -> ProtectedInWildFire(x))", "score": 0}
{"id": "eqasc_train_9071", "prediction": "all x.(Fire(x) -> (CausesSeriousInjury(x) & CausesDeath(x) & LossOfEquipmentAndFacilities(x)))", "score": 0}
{"id": "eqasc_train_9072", "prediction": "all x.((LivesUnderground(x) & HelpsAnimalsPreventDeath(x)) -> CanHelpAnimalsPreventDeath(x))", "score": 0}
{"id": "eqasc_train_9073", "prediction": "all x y.((Fire(x) & Ecosystem(y)) -> ElementalPart(x,y))", "score": 0}
{"id": "eqasc_train_9074", "prediction": "all x.((Animal(x) & LivingUnderground(x)) -> ProtectedFromElementalPartOfEcosystem(x))", "score": 0}
{"id": "eqasc_train_9075", "prediction": "all x.(Mole(x) -> exists y.(Tunnel(y) & FoundIn(x,y))))", "score": -1}
{"id": "eqasc_train_9076", "prediction": "all x.(Mole(x) -> ProtectedFromWildFires(x))", "score": 0}
{"id": "eqasc_train_9077", "prediction": "all x.(Mole(x) -> ProtectedFromWildFire(x))", "score": 0}
{"id": "eqasc_train_9078", "prediction": "all x.(Marmot(x) -> (ProtectedFromWildFire(x) & Underground(x)))", "score": 0}
{"id": "eqasc_train_9079", "prediction": "all x.(WildFire(x) -> RagesInCalifornia(x))", "score": 0}
{"id": "eqasc_train_9080", "prediction": "all x.((Animal(x) & LivesUnderGround(x) & California(x)) -> ProtectedFromNaturalDisasters(x))", "score": 0}
{"id": "eqasc_train_9081", "prediction": "all x.(WildAnimal(x) -> DealsWithFireRemarkablyWell(x))", "score": 0}
{"id": "eqasc_train_9082", "prediction": "all x.((Animal(x) & LivingUnderGround(x)) -> DealsWithFireRemarkablyWell(x))", "score": 0}
{"id": "eqasc_train_9083", "prediction": "all x.(Fire(x) -> ChemicalReaction(x))", "score": 0}
{"id": "eqasc_train_9084", "prediction": "all x y.((Animal(x) & LivesUnderGround(x)) -> ProtectedFromWildCombustion(x,y))", "score": 0}
{"id": "eqasc_train_9085", "prediction": "all x y.((Mole(x) & Tunnel(y)) -> ConstructsInGround(x,y))", "score": 0}
{"id": "eqasc_train_9086", "prediction": "all x y.((Mole(x) & Tunnel(y)) -> WildFireProtectedFrom(x,y))", "score": 0}
{"id": "eqasc_train_9087", "prediction": "exists x.(Animal(x) & (Mole(x) | Earthworm(x))) & SpendsLifeUnderground(x))", "score": -1}
{"id": "eqasc_train_9088", "prediction": "all x y.((Mole(x) & WildFire(y)) -> ResidesBelowSurface(x,y))", "score": 0}
{"id": "eqasc_train_9089", "prediction": "all x.(FireHeat(x) -> CanKill(x))", "score": 0}
{"id": "eqasc_train_9090", "prediction": "all x.((LivingUnderground(x) & KeepsAnimalsFromTreating(x)) -> KeepsAnimalsFromBeingTreated(x))", "score": 0}
{"id": "eqasc_train_9091", "prediction": "all x.(PrairieDog(x) -> LivesInUndergroundBurrows(x))", "score": 0}
{"id": "eqasc_train_9092", "prediction": "all x.(PrairieDog(x) -> ProtectedFromWildFire(x))", "score": 0}
{"id": "eqasc_train_9093", "prediction": "all x.(Squirrel(x) -> (LivesInBurrows(x) & -LivesInTrees(x)))", "score": 0}
{"id": "eqasc_train_9094", "prediction": "all x y.((Squirrel(x) & WildFire(y)) -> ProtectedByBurrows(x,y))", "score": 0}
{"id": "eqasc_train_9095", "prediction": "all x.(Shrew(x) -> (LivesOnOrUnderGround(x) & SearchesForFood(x)))", "score": 0}
{"id": "eqasc_train_9096", "prediction": "all x.(Shrew(x) -> ProtectedFromWildFire(x))", "score": 0}
{"id": "eqasc_train_9097", "prediction": "all x.(Erosion(x) -> CanCauseLandslide(x))", "score": 0}
{"id": "eqasc_train_9098", "prediction": "all x.((Erosion(x) & UnimpededFlowOfWater(x)) -> UnintentionalChange(x))", "score": 0}
{"id": "eqasc_train_9099", "prediction": "all x y.((FlowOfWater(x) & Landslide(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_train_9100", "prediction": "all x.(Landslide(x) -> Destructive(x))", "score": 0}
{"id": "eqasc_train_9101", "prediction": "all x.(Erosion(x) -> CausesDestruction(x))", "score": 0}
{"id": "eqasc_train_9102", "prediction": "all x y.((Flood(x) & Landslide(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_train_9103", "prediction": "all x.(Landslide(x) -> IndicatesInstabileTerrain(x))", "score": 0}
{"id": "eqasc_train_9104", "prediction": "all x.(Erosion(x) -> CanCauseInstabilityTerrain(x))", "score": 0}
{"id": "eqasc_train_9105", "prediction": "all x.(SevereWindErosion(x) -> Results(x))", "score": 0}
{"id": "eqasc_train_9106", "prediction": "all x.(SevereWind(x) -> CanCauseLandslide(x))", "score": 0}
{"id": "eqasc_train_9107", "prediction": "all x.(Landslide(x) -> (CerrateLargeCrevasses(x) & RerouteStreamsAndRivers(x) & CausesFlashFloods(x)))", "score": 0}
{"id": "eqasc_train_9108", "prediction": "all x.(Erosion(x) -> CausesCravesses(x))", "score": 0}
{"id": "eqasc_train_9109", "prediction": "all x.(UnrestrictedLoggingPractice(x) -> (LeadsToErosion(x) & LeadsToLandslides(x) & LeadsToFlooding(x)))", "score": 0}
{"id": "eqasc_train_9110", "prediction": "all x.(Logging(x) -> CausesLandslides(x))", "score": 0}
{"id": "eqasc_train_9111", "prediction": "all x.(Landslides(x) -> TriggersSeismicVibration(x))", "score": 0}
{"id": "eqasc_train_9112", "prediction": "all x.(Erosion(x) -> (CausesSeismicVibrations(x) & TriggersMechanisms(x)))", "score": 0}
{"id": "eqasc_train_9113", "prediction": "all x.((Plant(x) & RequiresPhotosynthesis(x)) -> Grows(x))", "score": 0}
{"id": "eqasc_train_9114", "prediction": "all x.(Sun(x) -> ReleasesEnergy(x))", "score": 0}
{"id": "eqasc_train_9115", "prediction": "all x y.((Sun(x) & Plant(y)) -> ReleasesEnergy(x,y))", "score": 0}
{"id": "eqasc_train_9116", "prediction": "all x.(Bamboo(x) -> RequiresPhotosynthesisToGrow(x))", "score": 0}
{"id": "eqasc_train_9117", "prediction": "all x.(Photosynthesis(x) -> GivesEnergy(x))", "score": 0}
{"id": "eqasc_train_9118", "prediction": "all x.((Plant(x) & RequiresEnergy(x)) -> Grows(x))", "score": 0}
{"id": "eqasc_train_9119", "prediction": "all x.(Leaves(x) -> PhotosynthesisSite(x))", "score": 0}
{"id": "eqasc_train_9120", "prediction": "all x.((Plant(x) & RequiresLeaves(x)) -> Grows(x))", "score": 0}
{"id": "eqasc_train_9121", "prediction": "all x.(Legumes(x) -> RequiresPhotosynthesis(x))", "score": 0}
{"id": "eqasc_train_9122", "prediction": "all x.((Carbohydrate(x) & InPlants(x)) -> FormedByPhotosynthesis(x))", "score": 0}
{"id": "eqasc_train_9123", "prediction": "all x y.((Carbohydrate(x) & Plant(y)) -> FormedIn(x,y))", "score": 0}
{"id": "eqasc_train_9124", "prediction": "all x.(Photosynthesis(x) -> RequiresChlorophyll(x))", "score": 0}
{"id": "eqasc_train_9125", "prediction": "all x.((Plant(x) & RequiresChlorophyll(x)) -> GrowsWith(x,y))", "score": 0}
{"id": "eqasc_train_9126", "prediction": "all x.(Hexazinone(x) -> InhibitsPhotosynthesis(x))", "score": 0}
{"id": "eqasc_train_9127", "prediction": "all x y.((Hexazinone(x) & Plant(y)) -> InhibitsGrowth(x,y))", "score": 0}
{"id": "eqasc_train_9128", "prediction": "all x y z.((Season(x) & SeasonChange(y) & Daylight(z)) -> ChangesAmount(z))", "score": 0}
{"id": "eqasc_train_9129", "prediction": "all x.(ChangesWeatherEffectsAndDaylightTimes(x) -> ChangesWeatherEffectsAndDaylightTimes(x))", "score": 0}
{"id": "eqasc_train_9130", "prediction": "all x y.((Season(x) & WeatherEffects(y)) -> SeasonChange(x))", "score": 0}
{"id": "eqasc_train_9131", "prediction": "all x.((CausesSeasons(x) & ChangesAngleOfSun(x)) -> Season(x))", "score": 0}
{"id": "eqasc_train_9132", "prediction": "all x y.((ChangeAngleOfSun(x) & Sun(y)) -> ChangesDaylight(x,y))", "score": 0}
{"id": "eqasc_train_9133", "prediction": "all x y.((TiltOfEarthsAxis(x) & SeasonalChange(y)) -> (A) HoursOfDarkness(y) & (B)IntensityOfSolarRadiation(y))))", "score": -1}
{"id": "eqasc_train_9134", "prediction": "all x y.((Season(x) & Earth(y) & AxisOfRotationTilted(x,y)) -> SeasonChange(x,y))", "score": 0}
{"id": "eqasc_train_9135", "prediction": "all x y.((Season(x) & EarthAxis(y) & Tip(x,y)) -> Orbit(x,y))", "score": 0}
{"id": "eqasc_train_9136", "prediction": "all x.((AmountOfDarkness(x) & EarthsAxisTilt(x)) -> ChangesBasedOnTilt(x))", "score": 0}
{"id": "eqasc_train_9137", "prediction": "all x.((Winter(x) | Fall(x)) -> BestSeasonalChange(x))", "score": 0}
{"id": "eqasc_train_9138", "prediction": "all x y.((Fall(x) & Winter(y)) -> DifferentDaylightAmount(x,y))", "score": 0}
{"id": "eqasc_train_9139", "prediction": "all x.((Soybean(x) & LongDarkHours(x)) -> FloweringActivated(x))", "score": 0}
{"id": "eqasc_train_9140", "prediction": "all x.(SeasonalChange(x) -> AffectsFloweringOfSoybeans(x))", "score": 0}
{"id": "eqasc_train_9141", "prediction": "all x.((Darkness(x) & StrongerSun(x)) -> More(x))", "score": 0}
{"id": "eqasc_train_9142", "prediction": "all x y.((SeasonChange(x) & SeasonChange(y)) -> BringsStrongerSun(x,y))", "score": 0}
{"id": "eqasc_train_9143", "prediction": "all x.(Daylight(x) -> (MaxMax(x) & Summer(x)))", "score": 0}
{"id": "eqasc_train_9144", "prediction": "all x y.((SeasonChange(x) & SeasonChange(y)) -> HoursChange(x,y))", "score": 0}
{"id": "eqasc_train_9145", "prediction": "all x.(LungCancer(x) -> CausedByTobaccoSmoke(x))", "score": 0}
{"id": "eqasc_train_9146", "prediction": "all x.(LungCancer(x) -> (CausedByExpositionToCigarettes(x) & OftenCausedByIsotopes(x)))", "score": 0}
{"id": "eqasc_train_9147", "prediction": "all x.(TobaccoSmoke(x) -> (ConsistsOfSolidParticles(x) & ConsistsOfGases(x)))", "score": 0}
{"id": "eqasc_train_9148", "prediction": "all x.(LungCancer(x) -> (ExposedToSolidParticles(x) & ExposedToGases(x)))", "score": 0}
{"id": "eqasc_train_9149", "prediction": "all x.(TobaccoSmoke(x) -> VeryLethal(x))", "score": 0}
{"id": "eqasc_train_9150", "prediction": "all x.(TobaccoSmokeExposure(x) -> Lethal(x))", "score": 0}
{"id": "eqasc_train_9151", "prediction": "all x.((Patient(x) & LungCancer(x)) -> HasEmphysema(x))", "score": 0}
{"id": "eqasc_train_9152", "prediction": "all x.(Enphysema(x) -> CausedByTobaccoSmoke(x))", "score": 0}
{"id": "eqasc_train_9153", "prediction": "all x y.((TobaccoSmoke(x) & ExposedTo(x,y)) -> CausesTumors(x))", "score": 0}
{"id": "eqasc_train_9154", "prediction": "all x.(TobaccoSmoke(x) -> ContainsTar(x))", "score": 0}
{"id": "eqasc_train_9155", "prediction": "all x.(LungCancer(x) -> (CausedByExpositionToTar(x) & MostOfFast(x)))", "score": 0}
{"id": "eqasc_train_9156", "prediction": "all x.((SmokeTobaccoSmoke(x) & (DirectlyInhaled(x) | PassivelyInhaled(x))) -> WorsensAsthma(x))", "score": 0}
{"id": "eqasc_train_9157", "prediction": "all x.(LungCancer(x) -> (DirectInhalation(x) | PassiveInhalation(x)))", "score": 0}
{"id": "eqasc_train_9158", "prediction": "all x.(Smoking(x) -> IncreasesRiskForLungCancer(x))", "score": 0}
{"id": "eqasc_train_9159", "prediction": "all x.(Smoking(x) -> IncreasesCancerRisk(x))", "score": 0}
{"id": "eqasc_train_9160", "prediction": "all x.(HigherTobaccoTaxes(x) -> (ReducesSmoking(x) & ReducesSmokingRelatedSickness(x)))", "score": 0}
{"id": "eqasc_train_9161", "prediction": "all x.(HigherTobaccoTaxes(x) -> ReducesLungCancerRate(x))", "score": 0}
{"id": "eqasc_train_9162", "prediction": "all x.(SecondhandSmoke(x) -> EnvironmentalTobaccoSmoke(x))", "score": 0}
{"id": "eqasc_train_9163", "prediction": "all x.(LungCancer(x) -> CausedBySecondhandSmoke(x))", "score": 0}
{"id": "eqasc_train_9164", "prediction": "all x.(LungCancer(x) -> (CausedByExpositionToCigarettes(x) & CausedByExpositionToCigars(x)))", "score": 0}
{"id": "eqasc_train_9165", "prediction": "all x.(LungCancer(x) -> (ContinuesToKill(x) & ModernTherapies(x)))", "score": 0}
{"id": "eqasc_train_9166", "prediction": "all x.(TobaccoSmoke(x) -> CanKill(x))", "score": 0}
{"id": "eqasc_train_9167", "prediction": "all x.(LungCancer(x) -> (SmokingConsequence(x) & ForMost(x)))", "score": 0}
{"id": "eqasc_train_9168", "prediction": "all x.(LungCancer(x) -> (ConsequenceOfTobaccoFumes(x) & ContainsTobaccoFumes(x)))", "score": 0}
{"id": "eqasc_train_9169", "prediction": "all x.(Cigarette(x) -> CausesLungCancer(x))", "score": 0}
{"id": "eqasc_train_9170", "prediction": "all x.(LungCancer(x) -> CausedByCigarettes(x))", "score": 0}
{"id": "eqasc_train_9171", "prediction": "all x.(LungCancer(x) -> GodzillaOfCancers(x))", "score": 0}
{"id": "eqasc_train_9172", "prediction": "all x.(GodzillaOfCancers(x) -> CausedByTobaccoSmoke(x))", "score": 0}
{"id": "eqasc_train_9173", "prediction": "all x.(Mammal(x) -> BreathesWithDiaphragm(x))", "score": 0}
{"id": "eqasc_train_9174", "prediction": "all x y.((Diaphragm(x) & MovesDown(x)) -> AirPulledIntoLungs(y))", "score": 0}
{"id": "eqasc_train_9175", "prediction": "all x.(Mammal(x) -> (BreathesByPullingAir(x) & BreathesByPullingAir(x)))", "score": 0}
{"id": "eqasc_train_9176", "prediction": "all x y.((Human(x) & Diaphragm(y)) -> BreathesWithHelp(x,y))", "score": 0}
{"id": "eqasc_train_9177", "prediction": "all x.((Person(x) & StopsBreathing(x)) -> Die(x))", "score": 0}
{"id": "eqasc_train_9178", "prediction": "all x y.((Mammal(x) & Diaphragm(y)) -> PreventsDeath(x,y))", "score": 0}
{"id": "eqasc_train_9179", "prediction": "all x.(Mammal(x) -> HasDiaphragm(x))", "score": 0}
{"id": "eqasc_train_9180", "prediction": "all x y.((Respiration(x) & Diaphragm(y)) -> AidedBy(x,y))", "score": 0}
{"id": "eqasc_train_9181", "prediction": "all x.(Pug(x) -> (BreathesWithDiaphragm(x) & HelpsBreatheWithDiaphragm(x)))", "score": 0}
{"id": "eqasc_train_9182", "prediction": "all x.(CommonDolphin(x) -> Mammal(x))", "score": 0}
{"id": "eqasc_train_9183", "prediction": "all x.(Dolphin(x) -> BreathesWithDiaphragm(x))", "score": 0}
{"id": "eqasc_train_9184", "prediction": "all x.(Hiccup(x) -> (ResultOfSpasmsOfDiaphragm(x)))", "score": 0}
{"id": "eqasc_train_9185", "prediction": "exists x.(Mammal(x) & Hiccup(x))", "score": 0}
{"id": "eqasc_train_9186", "prediction": "all x.(Birth(x) -> (UsesDiaphragm(x) & RelaxesLungs(x)))", "score": 0}
{"id": "eqasc_train_9187", "prediction": "all x.(Mammal(x) -> BreathesByRelaxingLungs(x))", "score": 0}
{"id": "eqasc_train_9188", "prediction": "all x.(Hiccup(x) -> (CausedByInvoluntarySpasms(x) & DiaphragmMuscleBehindLungs(x)))", "score": 0}
{"id": "eqasc_train_9189", "prediction": "all x.(Mammal(x) -> BreathesWithMuscleBelowLungs(x))", "score": 0}
{"id": "eqasc_train_9190", "prediction": "all x.(BreathingStomachMuscles(x) -> PressAgainstDiaphragmResistance(x))", "score": 0}
{"id": "eqasc_train_9191", "prediction": "all x.(Mammal(x) -> (BreathesWithHelpOfPressesAgainstStomachMuscles(x)))", "score": 0}
{"id": "eqasc_train_9192", "prediction": "all x y z.((Weathering(x) & Rock(y) & Whole(z) & Larger(z) & SmallerPiece(z)) -> BreaksDownByWeather(x,y,z))", "score": 0}
{"id": "eqasc_train_9193", "prediction": "all x.(IgneousRock(x) -> (MadeFromLava(x) & Hardens(x)))", "score": 0}
{"id": "eqasc_train_9194", "prediction": "all x y z.((Weathering(x) & Lava(y) & Lava(z)) -> BreaksDown(x,y,z))", "score": 0}
{"id": "eqasc_train_9195", "prediction": "all x.((Rock(x) & Weathered(x) & Eroded(x)) -> BreaksDownIntoSmallerRocksAndMinerals(x))", "score": 0}
{"id": "eqasc_train_9196", "prediction": "all x y.((Weathering(x) & Rock(y)) -> ErodingIntoMinerals(x,y))", "score": 0}
{"id": "eqasc_train_9197", "prediction": "all x.((Climate(x) & Freeze(x) & Thaw(x)) -> PromotesMechanicalWeathering(x))", "score": 0}
{"id": "eqasc_train_9198", "prediction": "all x y.((Rock(x) & LargerWhole(y) & Thawing(x)) -> BreaksDownIntoSmallerPieces(x,y))", "score": 0}
{"id": "eqasc_train_9199", "prediction": "all x.(SiltForm(x) -> WeatheringOfRocks(x))", "score": 0}
{"id": "eqasc_train_9200", "prediction": "all x y.((Silt(x) & Rock(y)) -> BreaksDown(y,x))", "score": 0}
{"id": "eqasc_train_9201", "prediction": "all x.(Basalt(x) -> (Volcanic(x) & Microcrystalline(x)))", "score": 0}
{"id": "eqasc_train_9202", "prediction": "all x y z.((Basalt(x) & Weather(y) & Basalt(z) & Larger(x,z)) -> Weathering(x))", "score": 0}
{"id": "eqasc_train_9203", "prediction": "all x.(Soil(x) -> WeatheredRocks(x))", "score": 0}
{"id": "eqasc_train_9204", "prediction": "all x.(Soil(x) -> (MadeFromRocks(x) & BreakingDown(x)))", "score": 0}
{"id": "eqasc_train_9205", "prediction": "all x y.((Erosion(x) & Rock(y)) -> BreaksDown(x,y))", "score": 0}
{"id": "eqasc_train_9206", "prediction": "all x.(Weathering(x) -> ErosionDownRocks(x))", "score": 0}
{"id": "eqasc_train_9207", "prediction": "all x.(TrashCollector(x) -> (WorksInAllWeather(x) & Rain(x) & Snow(x)))", "score": 0}
{"id": "eqasc_train_9208", "prediction": "all x y.((Rain(x) & Snow(y)) -> BreaksDownRocksFromLargerWholeIntoSmallerPieces(x,y))", "score": 0}
{"id": "eqasc_train_9209", "prediction": "all x y.((Weathering(x) & Surface(y)) -> (ErodedAway(y) & ExposesIgneousRock(y)))", "score": 0}
{"id": "eqasc_train_9210", "prediction": "all x.(Eroding(x) -> BreaksDownRocksFromLargerWholeIntoSmallerRocks(x))", "score": 0}
{"id": "eqasc_train_9211", "prediction": "all x.((MassiveBlast(x) & TinyRock(x)) -> InfluencesSoundAndPathOfWater(x))", "score": 0}
{"id": "eqasc_train_9212", "prediction": "all x y.((Weathering(x) & Boulder(y)) -> BreaksDownByWeather(x,y))", "score": 0}
{"id": "eqasc_train_9213", "prediction": "all x.(LargerValue(x) -> CreatesBiggerBrushes(x))", "score": 0}
{"id": "eqasc_train_9214", "prediction": "all x y z.((Weathering(x) & Rock(y) & Whole(z) & BiggerToSmallerToSmallerTotal(y,z)) -> BreaksDownByWeather(x,y,z))", "score": 0}
{"id": "eqasc_train_9215", "prediction": "all x.(UnconsolidatedRock(x) -> (Rock(x) & Gravel(x)))", "score": 0}
{"id": "eqasc_train_9216", "prediction": "all x y.((Weathering(x) & Gravel(y)) -> BreaksDownFromLargerIntoSmallerPieces(y,x))", "score": 0}
{"id": "eqasc_train_9217", "prediction": "all x.(WeatherEvent(x) -> InvolvesRain(x))", "score": 0}
{"id": "eqasc_train_9218", "prediction": "all x y.((Rain(x) & Rock(y)) -> BreaksDownIntoSmallerPieces(x,y))", "score": 0}
{"id": "eqasc_train_9219", "prediction": "all x y.((Rock(x) & MechanicalForce(y)) -> BreaksDown(x,y))", "score": 0}
{"id": "eqasc_train_9220", "prediction": "all x y.((Erosion(x) & Rock(y)) -> BreaksDownIntoSoil(x,y))", "score": 0}
{"id": "eqasc_train_9221", "prediction": "all x.(Cancer(x) -> (Disease(x) & CellsDivideOutOfControl(x)))", "score": 0}
{"id": "eqasc_train_9222", "prediction": "all x.(Cancer(x) -> (DiseaseFamily(x) & CharacterizedByCells(x) & ReplicatesTooRapidly(x)))", "score": 0}
{"id": "eqasc_train_9223", "prediction": "all x.(Cancer(x) -> ReplicatesOutOfControl(x))", "score": 0}
{"id": "eqasc_train_9224", "prediction": "all x.(Cancer(x) -> DiseaseOfBodyCells(x))", "score": 0}
{"id": "eqasc_train_9225", "prediction": "all x.(Cancer(x) -> DivisibleCells(x))", "score": 0}
{"id": "eqasc_train_9226", "prediction": "all x.(Cancer(x) -> LeadingCauseOfDeath(x))", "score": 0}
{"id": "eqasc_train_9227", "prediction": "all x.(LeadingCauseOfDeath(x) -> (Disease(x) & CellsDivisionOutOfControl(x)))", "score": 0}
{"id": "eqasc_train_9228", "prediction": "all x y.((Disease(x) & CellsDivision(y) & OutOfControl(y)) -> CausesDeath(x,y))", "score": 0}
{"id": "eqasc_train_9229", "prediction": "all x.(Mutation(x) -> (LeadsToDisease(x) & CellsDivideOutOfControl(x)))", "score": 0}
{"id": "eqasc_train_9230", "prediction": "all x.(CancerCell(x) -> (Grows(x) & DividesRapidly(x) & OutOfControl(x)))", "score": 0}
{"id": "eqasc_train_9231", "prediction": "all x.(Cancer(x) -> (Disease(x) & CellsGrow(x) & CellsDivisionRapidly(x)))", "score": 0}
{"id": "eqasc_train_9232", "prediction": "all x.((Cancer(x) & Commonest(x)) -> (Cancers(x,Breast) & Cancers(x,Bowel) & Cancers(x,Prostate)))", "score": 0}
{"id": "eqasc_train_9233", "prediction": "all x.((AffectedByDisease(x) & CellsDivisionOutOfControl(x)) -> (Lung(x) | Breast(x) | Prostate(x)))", "score": 0}
{"id": "eqasc_train_9234", "prediction": "all x.(Leukemia(x) -> (DiseaseIn whichCellsDivideOutOfControl(x) & CellsDistributeOutOfControl(x)))", "score": -1}
{"id": "eqasc_train_9235", "prediction": "all x.(Chemotherapy(x) -> WorksOnCells(x))", "score": 0}
{"id": "eqasc_train_9236", "prediction": "all x.(Cancer(x) -> (Disease(x) & CellsSplit(x) & Chemotherapy(x) & StopsMildering(x)))", "score": 0}
{"id": "eqasc_train_9237", "prediction": "all x.(Cancer(x) -> DiseaseOfAging(x))", "score": 0}
{"id": "eqasc_train_9238", "prediction": "all x y.((Aging(x) & Cell(y)) -> CausesToDivision(x,y))", "score": 0}
{"id": "eqasc_train_9239", "prediction": "all x.((GeneDamage(x) & SpecificTypesOfDamage(x)) -> CellStartsDivisionOutOfControl(x))", "score": 0}
{"id": "eqasc_train_9240", "prediction": "all x.((Cancer(x) | Tumors(x)) -> CauseOfGeneDamage(x))", "score": 0}
{"id": "eqasc_train_9241", "prediction": "exists x.(Insect(x) & CanDetectSound(x))", "score": 0}
{"id": "eqasc_train_9242", "prediction": "all x y.((EarsDetectVibratingAir(x) & Brain(y)) -> SendsSignals(x,y))", "score": 0}
{"id": "eqasc_train_9243", "prediction": "exists x.(Inset(x) & CanDetectVibratingAir(x))", "score": 0}
{"id": "eqasc_train_9244", "prediction": "all x.(SoundWaves(x) -> CompressionalWaves(x))", "score": 0}
{"id": "eqasc_train_9245", "prediction": "exists x.(Insect(x) & CanDetectCompressionalWaves(x))", "score": 0}
{"id": "eqasc_train_9246", "prediction": "all x.(Aphid(x) -> (SoftBodyInsect(x) & HasRelativelyLongLegs(x) & HasAntennae(x)))", "score": 0}
{"id": "eqasc_train_9247", "prediction": "all x y.((Aphid(x) & Antelope(y)) -> UsesToDetectSound(x,y))", "score": 0}
{"id": "eqasc_train_9248", "prediction": "all x.(Insect(x) -> HasSixLegs(x))", "score": 1}
{"id": "eqasc_train_9249", "prediction": "all x.((Animal(x) & HasSixLegs(x)) -> CanDetectSound(x))", "score": 0}
{"id": "eqasc_train_9250", "prediction": "all x.(Insect(x) -> Has2Antennae(x))", "score": 0}
{"id": "eqasc_train_9251", "prediction": "all x.(Insect(x) -> HasAppendages(x,2))", "score": 0}
{"id": "eqasc_train_9252", "prediction": "all x.(Insect(x) -> HasTwoFeelersOrAntennae(x))", "score": 0}
{"id": "eqasc_train_9253", "prediction": "exists x.(Insect(x) & Feeler(x) & UsesToDetectSound(x))", "score": 0}
{"id": "eqasc_train_9254", "prediction": "all x.(Insect(x) -> (HasChemicalReceptors(x) & (Antennae(x) | Legs(x) | Foots(x))))", "score": 0}
{"id": "eqasc_train_9255", "prediction": "all x.(Insect(x) -> (DetectsChemicals(x) & WithFeet(x)))", "score": 0}
{"id": "eqasc_train_9256", "prediction": "all x.(Sound(x) -> CausedByVibrationalEnergy(x))", "score": 0}
{"id": "eqasc_train_9257", "prediction": "exists x.(Insect(x) & CanUseAntennaeToDetectVibrationalEnergy(x))", "score": 0}
{"id": "eqasc_train_9258", "prediction": "all x.((Ant(x) | Butterfly(x)) -> HasAntennae(x))", "score": 0}
{"id": "eqasc_train_9259", "prediction": "all x.(Butterfly(x) -> CanDetectSound(x))", "score": 0}
{"id": "eqasc_train_9260", "prediction": "all x.(Sporangia(x) -> (ProducesSpores(x) & DevelopsIntoTinyHeartShapedGametophytes(x)))", "score": 0}
{"id": "eqasc_train_9261", "prediction": "all x.(Gametophyte(x) -> HasHaploidCells(x))", "score": 0}
{"id": "eqasc_train_9262", "prediction": "all x.(Sporengia(x) -> ProducesHaplodyloidCells(x))", "score": 0}
{"id": "eqasc_train_9263", "prediction": "all x y.((AsexualReproduction(x) & Spore(y)) -> ProducedInStormedSporangia(y))", "score": 0}
{"id": "eqasc_train_9264", "prediction": "all x y.((AsexualReproduction(x) & Spore(y)) -> DevelopsIntoTinyHeartShapedGametophytes(x))", "score": 0}
{"id": "eqasc_train_9265", "prediction": "all x.(Sporengia(x) -> (ProducesSpores(x) & DevelopsIntoTinyPhotosynthetics(x)))", "score": 0}
{"id": "eqasc_train_9266", "prediction": "all x.((Gametophyte(x) & ExtantGenre(x)) -> (Green(x) & Photosynthetic(x) & LongBridalShapedTthallus(x)))", "score": 0}
{"id": "eqasc_train_9267", "prediction": "all x y.((Sporagium(x) & Spore(y)) -> (ProducesSpores(x,y) & DevelopsIntoGreenPhotosyntheticGametophytes(x)))", "score": 0}
{"id": "eqasc_train_9268", "prediction": "all x.(Sporagia(x) -> (ProducesSpores(x) & Haploid(x)))", "score": 0}
{"id": "eqasc_train_9269", "prediction": "all x.(Sporangia(x) -> ThereAreSixSpores(x))", "score": 0}
{"id": "eqasc_train_9270", "prediction": "all x.(Spore(x) -> DevelopsIntoGametophytes(x))", "score": 0}
{"id": "eqasc_train_9271", "prediction": "all x.(AsexualReproduction(x) -> (BySporangia(x) | ByConidia(x)))", "score": 0}
{"id": "eqasc_train_9272", "prediction": "all x y.((SporeEnclosure(x) & AsexualReproduction(y)) -> ProducesHeartShapedGametophytes(x,y))", "score": 0}
{"id": "eqasc_train_9273", "prediction": "all x.(Amphibian(x) -> (ComplexCirculatorySystem(x) & ThreeChamberedHeart(x)))", "score": 7}
{"id": "eqasc_train_9274", "prediction": "all x.((Frog(x) | Toad(x) | Salamander(x)) -> (ComplexCirculatorySystem(x) & ThreeChamberedHeart(x)))", "score": 1}
{"id": "eqasc_train_9275", "prediction": "all x y z.((Blood(x) & Heart(y) & Body(z)) -> PumpedAround(x,y,z))", "score": 0}
{"id": "eqasc_train_9276", "prediction": "all x.(Amphibian(x) -> PumpsBloodInComplexManner(x))", "score": 0}
{"id": "eqasc_train_9277", "prediction": "all x.(Frog(x) -> (ComplexCirculatorySystem(x) & ThreeChamberedHeart(x)))", "score": 2}
{"id": "eqasc_train_9278", "prediction": "all x.(Frog(x) -> (ThreeChamberedHeart(x) & TwoAtria(x) & SingleVentricle(x)))", "score": 0}
{"id": "eqasc_train_9279", "prediction": "all x.(Frog(x) -> Amphibian(x))", "score": 0}
{"id": "eqasc_train_9280", "prediction": "all x.(Frog(x) -> ThreeChamberedHeart(x))", "score": 1}
{"id": "eqasc_train_9281", "prediction": "all x.(Salamander(x) -> (ComplexCirculatorySystem(x) & ThreeChamberedHeart(x)))", "score": 1}
{"id": "eqasc_train_9282", "prediction": "all x.(Toad(x) -> (ComplexCirculatorySystem(x) & ThreeChamberedHeart(x)))", "score": 1}
{"id": "eqasc_train_9283", "prediction": "all x.(Frog(x) -> (ComplexCirculatorySystem(x) & ThreeChamberedHeart(x)))", "score": 1}
{"id": "eqasc_train_9284", "prediction": "all x y.((Object(x) & DroppedIntoWater(x)) -> CausesVibrationsInWater(x,y))", "score": 0}
{"id": "eqasc_train_9285", "prediction": "all x y.((Object(x) & DroppedIntoWater(x)) -> CausesFrequencyWavesInWater(x,y))", "score": 0}
{"id": "eqasc_train_9286", "prediction": "all x.((LatalLineSystem(x) & FoundInFish(x)) -> DetectsVibrationsInWater(x))", "score": 0}
{"id": "eqasc_train_9287", "prediction": "all x y.((Object(x) & DroppingInWater(x,y)) -> DisturbsFish(y))", "score": 0}
{"id": "eqasc_train_9288", "prediction": "all x y.((SoundVibration(x) & PondRipple(y)) -> Comparable(x,y))", "score": 0}
{"id": "eqasc_train_9289", "prediction": "all x y.((Object(x) & DroppedIntoWater(x)) -> CausesRipples(x,y))", "score": 0}
{"id": "eqasc_train_9290", "prediction": "all x.(LakeWater(x) -> VisiblyDisturbed(x))", "score": 0}
{"id": "eqasc_train_9291", "prediction": "all x y.((Object(x) & Lake(y) & DropsInto(x,y)) -> CausesVibrations(x))", "score": 0}
{"id": "eqasc_train_9292", "prediction": "all x y.((Object(x) & DroppedIntoLiquid(x)) -> CausesVibrationsInLiquid(x,y))", "score": 0}
{"id": "eqasc_train_9293", "prediction": "all x y.((Fish(x) & Lure(y)) -> AttractedByVibration(x,y))", "score": 0}
{"id": "eqasc_train_9294", "prediction": "all x y.((Object(x) & Water(y) & DropsInto(x,y)) -> AttractsFish(x))", "score": 0}
{"id": "eqasc_train_9295", "prediction": "all x y z.((Animal(x) & ChemicalEnergy(y) & MechanicalEnergy(z)) -> Moves(x,y,z))", "score": 0}
{"id": "eqasc_train_9296", "prediction": "all x.(MechanicalEnergy(x) -> PutsInMotion(x))", "score": 0}
{"id": "eqasc_train_9297", "prediction": "all x y.((Animal(x) & Moves(x)) -> ChemicalEnergyConverted(x))", "score": 0}
{"id": "eqasc_train_9298", "prediction": "all x y.((Human(x) & Moves(x)) -> ConvertedToMechanicalEnergy(y))", "score": 0}
{"id": "eqasc_train_9299", "prediction": "all x.(KineticEnergy(x) -> EnergyAssociatedWithMotion(x))", "score": 0}
{"id": "eqasc_train_9300", "prediction": "all x.(Animal(x) -> Moves(x))", "score": 0}
{"id": "eqasc_train_9301", "prediction": "all x.(DigestiveProcess(x) -> (MechanicalMechanisms(x) & ChemicalMechanisms(x) & EnzymaticMechanisms(x)))", "score": 0}
{"id": "eqasc_train_9302", "prediction": "all x y.((Animal(x) & Animal(y)) -> DigestionMoves(x,y))", "score": 0}
{"id": "eqasc_train_9303", "prediction": "all x.(Manatee(x) -> SlowMovingAnimal(x))", "score": 0}
{"id": "eqasc_train_9304", "prediction": "all x.(Manatee(x) -> ConvertsChemicalEnergyToMechanicalEnergy(x))", "score": 0}
{"id": "eqasc_train_9305", "prediction": "all x.(Bat(x) -> (Animal(x) & FliesAtNight(x)))", "score": 0}
{"id": "eqasc_train_9306", "prediction": "all x y.((Bat(x) & Fly(x)) -> ConvertsEnergyToMechanicalEnergy(y))", "score": 0}
{"id": "eqasc_train_9307", "prediction": "all x y.((Dog(x) & Moves(x)) -> ConvertsChemicalEnergyToMechanicalEnergy(y))", "score": 0}
{"id": "eqasc_train_9308", "prediction": "all x.(MechanicalEnergy(x) -> ElectricalEnergy(x))", "score": 0}
{"id": "eqasc_train_9309", "prediction": "all x.(Animal(x) -> CanChangeMovementToElectricalEnergy(x))", "score": 0}
{"id": "eqasc_train_9310", "prediction": "all x y.((Cow(x) & Cow(y)) -> (ChemicalEnergyConvertedToMechanicalEnergy(x,y)))", "score": 0}
{"id": "eqasc_train_9311", "prediction": "all x y.((Starch(x) & KineticEnergy(y)) -> ConvertedToChemicalEnergy(x,y))", "score": 0}
{"id": "eqasc_train_9312", "prediction": "all x y z.((Animal(x) & Moves(x) & KineticEnergyInStarch(y) & MechanicalEnergy(z)) -> ConvertedTo(y,z))", "score": 0}
{"id": "eqasc_train_9313", "prediction": "all x y.((ChemicalBond(x) & BrokenByAnimals(x)) -> (EnergyRelease(y) & Work(y) & Heat(y)))", "score": 0}
{"id": "eqasc_train_9314", "prediction": "all x y.((ChemicalBond(x) & MechanicalEnergy(y) & Creature(z)) -> ConvertedTo(x,y,z))", "score": 0}
{"id": "eqasc_train_9315", "prediction": "all x.(Echinoderm(x) -> HasRadialSymmetry(x))", "score": 1}
{"id": "eqasc_train_9316", "prediction": "all x.((Animal(x) & RadialSymmetry(x)) -> LivesInWater(x))", "score": 0}
{"id": "eqasc_train_9317", "prediction": "all x.(Echinoderm(x) -> LivesInWater(x))", "score": 0}
{"id": "eqasc_train_9318", "prediction": "all x.((AdultStarfish(x) & RadialSymmetry(x)) -> HasRadialSymmetry(x))", "score": 0}
{"id": "eqasc_train_9319", "prediction": "all x.(Echinoderm(x) -> (SpinySkinnedAnimal(x) & FoundInMarineEnvironments(x)))", "score": 0}
{"id": "eqasc_train_9320", "prediction": "all x.((AdultSpinySkinnedAnimal(x) & FoundInMarineEnvironments(x)) -> RadialSymmetry(x))", "score": 0}
{"id": "eqasc_train_9321", "prediction": "all x.(Starfish(x) -> HasRadialSymmetry(x))", "score": 1}
{"id": "eqasc_train_9322", "prediction": "all x.((Animal(x) & RadialSymmetry(x)) -> (LacksAnteriorEnd(x) & LacksPosteriorEnd(x)))", "score": 0}
{"id": "eqasc_train_9323", "prediction": "all x.(Echinoderm(x) -> (LacksAnteriorEnd(x) & LacksPosteriorEnd(x)))", "score": 0}
{"id": "eqasc_train_9324", "prediction": "all x.((AdultSeaUrchin(x) & RadialSymmetry(x)) -> Has(x,AdultSeaUrchin))", "score": 0}
{"id": "eqasc_train_9325", "prediction": "all x.(Echinoderm(x) -> LivesInWater(x))", "score": 0}
{"id": "eqasc_train_9326", "prediction": "all x.(SeaUrchin(x) -> HasRadialSymmetry(x))", "score": 0}
{"id": "eqasc_train_9327", "prediction": "all x.(SeaUrchin(x) -> (Echinoderm(x) & Starfish(x)))", "score": 0}
{"id": "eqasc_train_9328", "prediction": "all x.(AdultSeaUrchin(x) -> HasRadialSymmetry(x))", "score": 0}
{"id": "eqasc_train_9329", "prediction": "all x.(AdultStarfish(x) -> HasRadialSymmetry(x))", "score": 0}
{"id": "eqasc_train_9330", "prediction": "all x.(Deuterostome(x) -> HasRadialSymmetry(x))", "score": 0}
{"id": "eqasc_train_9331", "prediction": "all x y z.((Plant(x) & Grows(x) & LeafSize(y) & Plant(z)) -> (SizeOfLeaves(y,z) & MayIncrease(z,y)))", "score": 0}
{"id": "eqasc_train_9332", "prediction": "all x.(Leaves(x) -> HelpsCarryOnPhotosynthesis(x))", "score": 0}
{"id": "eqasc_train_9333", "prediction": "all x y z.((Plant(x) & Grows(x) & Photosynthesis(y) & Grows(z)) -> Increases(y,z))", "score": 0}
{"id": "eqasc_train_9334", "prediction": "all x.(Light(x) -> MakesPlantsGrowTall(x))", "score": 0}
{"id": "eqasc_train_9335", "prediction": "all x y.((Light(x) & Plant(y)) -> IncreasesLeaves(x,y))", "score": 0}
{"id": "eqasc_train_9336", "prediction": "all x y.((Perennial(x) & Grows(x)) -> (SizeOfLeaves(y) & MayIncrease(y)))", "score": 0}
{"id": "eqasc_train_9337", "prediction": "all x.(Oak(x) -> Plant(x))", "score": 2}
{"id": "eqasc_train_9338", "prediction": "all x y z.((Oak(x) & Grows(x) & Oak(y) & LeafSize(z)) -> (SizeOfLeaves(y,z) & MayIncrease(y,z)))", "score": 0}
{"id": "eqasc_train_9339", "prediction": "all x.((Growth(x) & FoodSizeIncreased(x)) -> Grows(x))", "score": 0}
{"id": "eqasc_train_9340", "prediction": "all x.((Plant(x) & (Size(x) | FoodAmount(x))) -> LeafSizeIncrease(x))", "score": 0}
{"id": "eqasc_train_9341", "prediction": "all x y.((Leaves(x) & Plant(y)) -> (PhotosyntheticOrgan(x,y) | PhotosyntheticOrgan(x,y)))", "score": 0}
{"id": "eqasc_train_9342", "prediction": "all x.((Plant(x) & Grows(x)) -> PhotosyntheticOrgans(x))", "score": 0}
{"id": "eqasc_train_9343", "prediction": "all x.(Leaves(x) -> PhotosynthesisSite(x))", "score": 0}
{"id": "eqasc_train_9344", "prediction": "all x y z.((Plant(x) & Grows(x) & Photosynthesis(y) & Grows(z)) -> Increases(y,z))", "score": 0}
{"id": "eqasc_train_9345", "prediction": "all x y.((Fern(x) & Grows(x)) -> (SizeOfLeaves(y) & MayIncrease(y)))", "score": 0}
{"id": "eqasc_train_9346", "prediction": "all x.(Leaves(x) -> PrimaryPhotosyntheticOrgan(x))", "score": 0}
{"id": "eqasc_train_9347", "prediction": "all x y z.((Plant(x) & Grows(x) & PhotosyntheticOrgans(y) & Plant(z)) -> (SizeIncreases(y,z) & IncreasesSize(z,y)))", "score": 0}
{"id": "eqasc_train_9348", "prediction": "exists x.(LightBulb(x) & ConvertsElectricityToLightAndHeatEnergy(x))", "score": 0}
{"id": "eqasc_train_9349", "prediction": "all x.(HouseholdLightBulb(x) -> (EvacuatedGlassEnclosure(x) & HasWires(x) & LeadsToTungstenFilm(x)))", "score": 0}
{"id": "eqasc_train_9350", "prediction": "exists x.(GlassEnclosure(x) & ConvertsElectricityToLightAndHeatEnergy(x))", "score": 0}
{"id": "eqasc_train_9351", "prediction": "all x.((LightBulb(x) & GeneratesLight(x)) -> WastedEnergy(x))", "score": 0}
{"id": "eqasc_train_9352", "prediction": "all x.((Bulb(x) & HeatEnergy(x)) -> Wasted(x))", "score": 0}
{"id": "eqasc_train_9353", "prediction": "all x.(HalogenLightBulb(x) -> GeneratesHeat(x))", "score": 0}
{"id": "eqasc_train_9354", "prediction": "all x.(HalogenBulb(x) -> ConvertsElectricityToHeat(x))", "score": 0}
{"id": "eqasc_train_9355", "prediction": "exists x.(LightBulb(x) & ConvertsEnergyToLightAndHeatEnergy(x))", "score": 0}
{"id": "eqasc_train_9356", "prediction": "all x.(LightBulbs(x) -> (IncandescentBulbsAtFrontDesk(x) & AvailableAtFrontDesk(x)))", "score": 0}
{"id": "eqasc_train_9357", "prediction": "all x.(Incandescent(x) -> (ConvertsElectricityToLightAndHeatEnergy(x) & ConvertsElectricityToHeatAndLightEnergy(x)))", "score": 0}
{"id": "eqasc_train_9358", "prediction": "all x.(Electricity(x) -> RequiresMovementOfElectricalCharges(x))", "score": 0}
{"id": "eqasc_train_9359", "prediction": "exists x.(LightBulb(x) & ProcessesChargeMovement(x))", "score": 0}
{"id": "eqasc_train_9360", "prediction": "all x.(ConventionalLightBulb(x) -> (GeneratesLight(x) & HeatsFilm(x)))", "score": 0}
{"id": "eqasc_train_9361", "prediction": "all x.(Filament(x) -> UsesHeatEnergyToIlluminate(x))", "score": 0}
{"id": "eqasc_train_9362", "prediction": "all x.(CFL(x) -> (WastesLittleElectricalEnergy(x) & GeneratesUnnecessaryHeat(x)))", "score": 0}
{"id": "eqasc_train_9363", "prediction": "exists x.(LightBulb(x) & WastesLittleEnergy(x) & GeneratesUnnecessaryHeat(x))", "score": 0}
{"id": "eqasc_train_9364", "prediction": "all x.(HeatEnergy(x) -> EnergyInSubstance(x))", "score": 0}
{"id": "eqasc_train_9365", "prediction": "exists x.(LightBulb(x) & ConvertsElectricityToLight(x) & EnergyInSubstance(x))", "score": 0}
{"id": "eqasc_train_9366", "prediction": "all x.(LightSource(x) -> (UltraBright(x) & UnbreakableLEDBulb(x)))", "score": 0}
{"id": "eqasc_train_9367", "prediction": "all x.(LED(x) -> (ConvertsElectricityToLightAndHeatEnergy(x) & ConvertsElectricityToHeatAndLightEnergy(x)))", "score": 0}
{"id": "eqasc_train_9368", "prediction": "all x.(Aging(x) -> AssociatesWithDeathOfCells(x))", "score": 0}
{"id": "eqasc_train_9369", "prediction": "all x.(CellDeath(x) -> Natural(x))", "score": 0}
{"id": "eqasc_train_9370", "prediction": "all x.(Aging(x) -> Natural(x))", "score": 0}
{"id": "eqasc_train_9371", "prediction": "all x.(Smoking(x) -> AcceleratesAgingProcess(x))", "score": 0}
{"id": "eqasc_train_9372", "prediction": "all x y.((Smoking(x) & Cell(y)) -> AcceleratesDeath(x,y))", "score": 0}
{"id": "eqasc_train_9373", "prediction": "all x.((Telomere(x) & TooShort(x)) -> CellDies(x))", "score": 0}
{"id": "eqasc_train_9374", "prediction": "all x.(Aging(x) -> ShortTelomeres(x))", "score": 0}
{"id": "eqasc_train_9375", "prediction": "all x.(FruitBrowning(x) -> (EarlyCellAging(x) & EarlyCellDeath(x)))", "score": 0}
{"id": "eqasc_train_9376", "prediction": "all x.(FruitBrowning(x) -> AssociatedWithAging(x))", "score": 0}
{"id": "eqasc_train_9377", "prediction": "all x.(Apoptosis(x) -> CellDeath(x))", "score": 0}
{"id": "eqasc_train_9378", "prediction": "all x.(Aging(x) -> AssociatedWithApoptosis(x))", "score": 0}
{"id": "eqasc_train_9379", "prediction": "all x.(Apoptosis(x) -> NaturalPartOfAging(x))", "score": 0}
{"id": "eqasc_train_9380", "prediction": "all x.((CellDeath(x) & Occurs(x)) -> Infarction(x))", "score": 0}
{"id": "eqasc_train_9381", "prediction": "all x.(Aging(x) -> Infarction(x))", "score": 0}
{"id": "eqasc_train_9382", "prediction": "all x.((WasteAccumulates(x) & CellAges(x) & CellDies(x)) -> Aggregates(x))", "score": 0}
{"id": "eqasc_train_9383", "prediction": "all x y z.((Waste(x) & Cell(y) & Cell(z)) -> (Accumulates(x,y) & Dies(y,z)))", "score": 0}
{"id": "eqasc_train_9384", "prediction": "all x.(Telomere(x) -> (Degrades(x) & CellsDivision(x) & ShorteningCausesCellDeath(x)))", "score": 0}
{"id": "eqasc_train_9385", "prediction": "all x.(Aging(x) -> DegradingTelomeres(x))", "score": 0}
{"id": "eqasc_train_9386", "prediction": "all x.(OldCell(x) -> HasShortTelomeres(x))", "score": 0}
{"id": "eqasc_train_9387", "prediction": "all x y.((Switch(x) & ElectricalCircuit(y)) -> StartsFlowOfCurrent(x,y))", "score": 0}
{"id": "eqasc_train_9388", "prediction": "all x.(ElectricPower(x) -> ReadyToUseAtFlipOfSwitch(x))", "score": 0}
{"id": "eqasc_train_9389", "prediction": "all x.(CurrentFlow(x) -> GivesElectricPower(x))", "score": 0}
{"id": "eqasc_train_9390", "prediction": "all x y z.((SwitchClosed(x) & Electricity(y) & Wires(z) & Switch(z)) -> (FlowsThrough(y,z) & LightsUpBulb(y,z)))", "score": 0}
{"id": "eqasc_train_9391", "prediction": "all x y.((FlowOfElectricalCurrent(x) & LightBulb(y)) -> Powers(x,y))", "score": 0}
{"id": "eqasc_train_9392", "prediction": "all x.((SwitchOpen(x) & ElectricityFlows(x) & LightOn(x)) -> Open(x))", "score": 0}
{"id": "eqasc_train_9393", "prediction": "all x y.((Light(x) & SwitchOpen(y) & CurrentFlow(x)) -> TurnsOn(x))", "score": 0}
{"id": "eqasc_train_9394", "prediction": "all x y.((Switch(x) & ElectricalCircuit(y)) -> StartsFlowOfElectricCharge(x,y))", "score": 0}
{"id": "eqasc_train_9395", "prediction": "all x.(ElectricalCircuit(x) -> HasFuses(x))", "score": 0}
{"id": "eqasc_train_9396", "prediction": "all x y.((Switch(x) & Object(y) & HasFuses(y)) -> StartsFlowOfCurrent(x,y))", "score": 0}
{"id": "eqasc_train_9397", "prediction": "all x.((ElectricalPower(x) & Lights(x)) -> CanBeSwitchedOn(x))", "score": 0}
{"id": "eqasc_train_9398", "prediction": "all x y.((Light(x) & ElectricalCircuit(y) & CurrentFlow(x,y)) -> On(x))", "score": 0}
{"id": "eqasc_train_9399", "prediction": "all x.(Switch(x) -> (MovedUpForOn(x) & MovedDownForOff(x)))", "score": 0}
{"id": "eqasc_train_9400", "prediction": "all x y.((ElectricalCircuit(x) & ElectricalCircuit(y)) -> (FlowOfCurrentMovedUpAndDown(x,y)))", "score": 0}
{"id": "eqasc_train_9401", "prediction": "all x.((Circuit(x) & Complete(x)) -> ElectricityFlows(x))", "score": 0}
{"id": "eqasc_train_9402", "prediction": "all x y.((Switch(x) & ElectricalCircuit(y)) -> Completes(x,y))", "score": 0}
{"id": "eqasc_train_9403", "prediction": "all x.(ElectricalCircuit(x) -> (CircuitousPath(x) & Wire(x) & Devices(x)))", "score": 0}
{"id": "eqasc_train_9404", "prediction": "all x y z.((Switch(x) & CurrentFlow(y) & DevicePath(z)) -> StartsFlowInPathOfDevices(x,y,z))", "score": 0}
{"id": "eqasc_train_9405", "prediction": "exists x.(System(x) & HasAdditionalConnection(x))", "score": 0}
{"id": "eqasc_train_9406", "prediction": "all x y.((Doorbell(x) & ElectricalCircuit(y)) -> StartsFlowOfCurrent(x,y))", "score": 0}
{"id": "eqasc_train_9407", "prediction": "all x y.((ElectricalSwitch(x) & Wire(y)) -> DirectsCurrentTo(x,y))", "score": 0}
{"id": "eqasc_train_9408", "prediction": "all x.(Switch(x) -> DirectsCurrent(x))", "score": 0}
{"id": "eqasc_train_9409", "prediction": "all x y.((Tree(x) & Ecosystem(y)) -> NegativeImpact(x,y))", "score": 0}
{"id": "eqasc_train_9410", "prediction": "all x y.((CuttingDownTrees(x) & Animal(y) & NaturalHabitat(z)) -> NegativeImpactOnHomes(x,y,z))", "score": 0}
{"id": "eqasc_train_9411", "prediction": "all x y.((Logging(x) & Ecosystem(y)) -> NegativeImpact(x,y))", "score": 0}
{"id": "eqasc_train_9412", "prediction": "all x.((Tree(x) & UncontrolledCutting(x)) -> FuelFuel(x))", "score": 0}
{"id": "eqasc_train_9413", "prediction": "all x y.((UncontrolledUseOfTreesForFuel(x) & Ecosystem(y)) -> NegativeImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_9414", "prediction": "all x y.((Rainforest(x) & Deforestation(y)) -> NegativeImpactOnEcosystem(y))", "score": 0}
{"id": "eqasc_train_9415", "prediction": "all x y.((CuttingDownOaks(x) & Ecosystem(y)) -> NegativeImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_9416", "prediction": "all x.(Tree(x) -> (ProvidesHabitat(x) & ForBirds(x) & ForAnimals(x)))", "score": 0}
{"id": "eqasc_train_9417", "prediction": "all x y.((Habitat(x) & Ecosystem(y)) -> NegativeImpact(x,y))", "score": 0}
{"id": "eqasc_train_9418", "prediction": "all x.(Ecosystem(x) -> LivingCommunity(x))", "score": 0}
{"id": "eqasc_train_9419", "prediction": "all x y.((CuttingDownTrees(x) & LivingCommunity(y)) -> NegativeImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_9420", "prediction": "all x.(Plant(x) -> IncludesTree(x))", "score": 0}
{"id": "eqasc_train_9421", "prediction": "all x.(CuttingDownPlants(x) -> NegativeImpactOnEcosystem(x))", "score": 0}
{"id": "eqasc_train_9422", "prediction": "all x.((Ecosystem(x) & Healthy(x)) -> Healthy(x))", "score": 0}
{"id": "eqasc_train_9423", "prediction": "all x y.((Tree(x) & Humankind(y)) -> NegativeImpactOnHealth(x,y))", "score": 0}
{"id": "eqasc_train_9424", "prediction": "all x.(Ecosystem(x) -> (Desert(x) | TropicalJungle(x) | Ocean(x) | Pond(x)))", "score": 0}
{"id": "eqasc_train_9425", "prediction": "all x y.((CutteringDeadTrees(x) & Jungle(y)) -> NegativeImpact(x,y))", "score": 0}
{"id": "eqasc_train_9426", "prediction": "all x y.((Tree(x) & Forest(y)) -> (CutDownIn(x,y) & SentToPaperMill(x)))", "score": 0}
{"id": "eqasc_train_9427", "prediction": "all x y.((PaperMill(x) & Product(y)) -> NegativeImpactOnEcosystem(y))", "score": 0}
{"id": "eqasc_train_9428", "prediction": "all x.(Logger(x) -> CarelessInCuttingDownTrees(x))", "score": 0}
{"id": "eqasc_train_9429", "prediction": "all x y.((Logger(x) & Ecosystem(y)) -> NegativeImpact(x,y))", "score": 0}
{"id": "eqasc_train_9430", "prediction": "all x.(OakTree(x) -> Strong(x))", "score": 0}
{"id": "eqasc_train_9431", "prediction": "all x y.((CuttingDownOaks(x) & Ecosystem(y)) -> NegativeImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_9432", "prediction": "all x.((Tree(x) & (Cut(x) | Burnt(x))) -> CarbonRelease(x))", "score": 0}
{"id": "eqasc_train_9433", "prediction": "all x y.((ReleasingCarbon(x) & Atmosphere(y)) -> NegativeImpactOnEcosystem(x,y))", "score": 0}
{"id": "eqasc_train_9434", "prediction": "all x.(BlackSpruce(x) -> DominantTreeSpecies(x))", "score": 0}
{"id": "eqasc_train_9435", "prediction": "all x y.((CuttingDownBlackSpruces(x) & Ecosystem(y)) -> NegativeImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_9436", "prediction": "all x.(Plant(x) -> LivesOnEarth(x))", "score": 0}
{"id": "eqasc_train_9437", "prediction": "all x.(Photosynthesis(x) -> FoundOnEarth(x))", "score": 0}
{"id": "eqasc_train_9438", "prediction": "all x.((BigTree(x) | LittleFlowersPlant(x)) -> (OfAll y.((BigTree(y) & Where(y)) | Where(y))))", "score": -1}
{"id": "eqasc_train_9439", "prediction": "all x y.((Tree(x) | Flower(y)) -> LivesAbout(x,y))", "score": 0}
{"id": "eqasc_train_9440", "prediction": "all x.(Plant(x) -> Producer(x))", "score": 0}
{"id": "eqasc_train_9441", "prediction": "all x y.((Producer(x) & Producer(y)) -> LivesJustAboutEverywhereOnEarth(x,y))", "score": 0}
{"id": "eqasc_train_9442", "prediction": "all x.(Air(x) -> InEarthsAtmosphere(x))", "score": 0}
{"id": "eqasc_train_9443", "prediction": "all x.(Plant(x) -> LivesInAtmosphere(x))", "score": 0}
{"id": "eqasc_train_9444", "prediction": "all x.(Epiphyte(x) -> (Plant(x) & LivesOnPlant(x)))", "score": 0}
{"id": "eqasc_train_9445", "prediction": "all x.(Epiphyt(x) -> LivesOnEarth(x))", "score": 0}
{"id": "eqasc_train_9446", "prediction": "all x.(Plant(x) -> (Innovative(x) & Adaptable(x)))", "score": 0}
{"id": "eqasc_train_9447", "prediction": "all x.(VegetativeLives(x) -> (Innovative(x) & Adaptive(x)))", "score": 0}
{"id": "eqasc_train_9448", "prediction": "all x.(Plant(x) -> LivesOnPlanet(x))", "score": 0}
{"id": "eqasc_train_9449", "prediction": "all x.(Snake(x) -> LivesAlmostEverywhereOnEarth(x))", "score": 0}
{"id": "eqasc_train_9450", "prediction": "all x.(Plant(x) -> LivesAboutAnywhereSnake(x))", "score": 0}
{"id": "eqasc_train_9451", "prediction": "all x.(GreenProducer(x) -> LivesOnEarth(x))", "score": 0}
{"id": "eqasc_train_9452", "prediction": "all x.((Population(x) & Virus(x)) -> -GrowsThroughCellDiviction(x))", "score": 0}
{"id": "eqasc_train_9453", "prediction": "all x.((Viral(x) & HIV(x)) -> NeedsHost(x))", "score": 0}
{"id": "eqasc_train_9454", "prediction": "all x.((Population(x) & Population(x) & -CellDivision(x)) -> -GrowsThroughCellDivision(x))", "score": 0}
{"id": "eqasc_train_9455", "prediction": "all x.(Virus(x) -> CauseOfManyDiseases(x))", "score": 0}
{"id": "eqasc_train_9456", "prediction": "all x.(Disease(x) -> -CausedByCells(x))", "score": 0}
{"id": "eqasc_train_9457", "prediction": "all x.(Prokaryote(x) -> (Multiply(x) & SimpleCellDividend(x) & (FormsClones(x) | FormsExactCopies(x))))", "score": 0}
{"id": "eqasc_train_9458", "prediction": "all x.(Virus(x) -> -Prokaryote(x))", "score": 0}
{"id": "eqasc_train_9459", "prediction": "all x.((Population(x) & Viral(x)) -> -GrowsThroughMitosis(x))", "score": 0}
{"id": "eqasc_train_9460", "prediction": "all x.(InfluenzaVirus(x) -> ChangesOfFrequently(x))", "score": 0}
{"id": "eqasc_train_9461", "prediction": "all x.(Influenza(x) -> -GrowsThroughCellDivision(x))", "score": 0}
{"id": "eqasc_train_9462", "prediction": "all x.(InfluenzaVirus(x) -> ChangesConstantly(x))", "score": 0}
{"id": "eqasc_train_9463", "prediction": "all x.(Cancer(x) -> UnregulatedCellDividection(x))", "score": 0}
{"id": "eqasc_train_9464", "prediction": "all x.(Cancer(x) -> -CausedByViruses(x))", "score": 0}
{"id": "eqasc_train_9465", "prediction": "all x.(Cell(x) -> (BasicUnit(x) & EveryLivingOrganism(x) & BinaryDividend(x)))", "score": 0}
{"id": "eqasc_train_9466", "prediction": "all x.(Virus(x) -> -ProliferatesBinaryDividend(x))", "score": 0}
{"id": "eqasc_train_9467", "prediction": "all x.(Influenza(x) -> CausedByViruses(x))", "score": 0}
{"id": "eqasc_train_9468", "prediction": "all x.((Population(x) & CauseOfInfluenza(x)) -> -GrowsThroughCellDiviction(x))", "score": 0}
{"id": "eqasc_train_9469", "prediction": "all x.((Population(x) & HIV(x)) -> -GrowsThroughCellDividection(x))", "score": 0}
{"id": "eqasc_train_9470", "prediction": "all x.(Virus(x) -> ParasiteOfCells(x))", "score": 0}
{"id": "eqasc_train_9471", "prediction": "all x.((Population(x) & Virus(x) & -GrowsThroughDivision(x)) -> Parasite(x))", "score": 0}
{"id": "eqasc_train_9472", "prediction": "all x.(Pollination(x) -> FertilizationStepInSexualReproduction(x))", "score": 0}
{"id": "eqasc_train_9473", "prediction": "all x.(PollenGrain(x) -> (SmallMaleReproductiveBody(x) & FertilizesFemaleFlowers(x)))", "score": 0}
{"id": "eqasc_train_9474", "prediction": "all x y.((PollenGrain(x) & Plant(y)) -> (SmallMaleReproductiveBody(x,y) & PollinatesFemaleFlowers(x)))", "score": 0}
{"id": "eqasc_train_9475", "prediction": "all x y.((Honeybee(x) & Plant(y)) -> HelpsFertilize(x,y))", "score": 0}
{"id": "eqasc_train_9476", "prediction": "all x.(Honeybee(x) -> ImportantForPlantReproduction(x))", "score": 0}
{"id": "eqasc_train_9477", "prediction": "all x.(Bee(x) -> PollinationEssential(x))", "score": 0}
{"id": "eqasc_train_9478", "prediction": "all x.(Bee(x) -> (EssentialForFertilization(x) & InSexualReproduction(x)))", "score": 0}
{"id": "eqasc_train_9479", "prediction": "all x y.((Pollination(x) & PollenGrain(y)) -> TransferToStigma(x,y))", "score": 0}
{"id": "eqasc_train_9480", "prediction": "all x y.((TransferOfPollenGrains(x) & Stigma(y)) -> FertilizationStep(x,y))", "score": 0}
{"id": "eqasc_train_9481", "prediction": "all x.(CleanPlant(x) -> HealthyPlant(x))", "score": 0}
{"id": "eqasc_train_9482", "prediction": "all x.(Pollination(x) -> (FertilizationStep(x) & HealthyWhenClean(x)))", "score": 0}
{"id": "eqasc_train_9483", "prediction": "all x.(InsectPollinators(x) -> (LearnsAboutPollination(x) & WhyInsectPollinatorsImportantInGarden(x)))", "score": 0}
{"id": "eqasc_train_9484", "prediction": "all x y.((Insect(x) & Plant(y)) -> ImportantInFertilizationStep(x,y))", "score": 0}
{"id": "eqasc_train_9485", "prediction": "all x.(Fertilization(x) -> CriticalTiming(x))", "score": 0}
{"id": "eqasc_train_9486", "prediction": "all x.(PollinationTime(x) -> CriticalStepInSexualReproduction(x))", "score": 0}
{"id": "eqasc_train_9487", "prediction": "all x y.((Pollination(x) & Photosynthesis(y)) -> FertilizationStep(x,y))", "score": 0}
{"id": "eqasc_train_9488", "prediction": "all x y z.((ElectricityFlowsTo(x,y) & LightBulb(z) & LightBulb(x)) -> TurnsOn(x,z))", "score": 0}
{"id": "eqasc_train_9489", "prediction": "all x y.((ElectricCurrent(x) & Lightbulb(y)) -> CanTurnOn(x,y))", "score": 0}
{"id": "eqasc_train_9490", "prediction": "all x.((Room(x) & EnoughLight(x)) -> SeesClearly(x))", "score": 0}
{"id": "eqasc_train_9491", "prediction": "all x y.((ElectricityFlowsToBulb(x) & Room(y)) -> Visible(y))", "score": 0}
{"id": "eqasc_train_9492", "prediction": "all x.((LightBulb(x) & UsesEnergy(x)) -> Heat(x))", "score": 0}
{"id": "eqasc_train_9493", "prediction": "all x y.((ElectricityFlowsToLightBulb(x) & Heat(y)) -> Heat(x))", "score": 0}
{"id": "eqasc_train_9494", "prediction": "all x y.((EnergyFlowsTo(x,y) & LightBulb(y)) -> TurnsOn(x,y))", "score": 0}
{"id": "eqasc_train_9495", "prediction": "all x y.((ElectronFlow(x) & LightBulb(y) & LightBulb(y)) -> TurnsOn(y))", "score": 0}
{"id": "eqasc_train_9496", "prediction": "all x.(PowerOutage(x) -> TotalInterruptionOfElectricalPower(x))", "score": 0}
{"id": "eqasc_train_9497", "prediction": "all x y.((PowerOutage(x) & LightBulb(y)) -> CanGoOff(x,y))", "score": 0}
{"id": "eqasc_train_9498", "prediction": "all x.((Material(x) & ControlsFlowOfElectricity(x)) -> Resistor(x))", "score": 0}
{"id": "eqasc_train_9499", "prediction": "all x y.((Resistors(x) & LightBulb(y)) -> CanPreventFromTurningOn(x,y))", "score": 0}
{"id": "eqasc_train_9500", "prediction": "all x.(CoalFiredElectricGeneration(x) -> LowCostSourceOfElectricity(x))", "score": 0}
{"id": "eqasc_train_9501", "prediction": "all x y.((GeneratedFromCoal(x) & LightBulb(y)) -> TurnsOn(y))", "score": 0}
{"id": "eqasc_train_9502", "prediction": "all x y.((Refrigerator(x) & Food(y)) -> UsedForKeepingFreshForLongPeriod(x,y))", "score": 0}
{"id": "eqasc_train_9503", "prediction": "all x.(Refrigerator(x) -> MajorUserOfElectricity(x))", "score": 0}
{"id": "eqasc_train_9504", "prediction": "all x.((KeepsFoodFresh(x) & LongPeriodOfTime(x)) -> RequiresLotOfElectricity(x))", "score": 0}
{"id": "eqasc_train_9505", "prediction": "all x.(FreshFood(x) -> Good(x))", "score": 0}
{"id": "eqasc_train_9506", "prediction": "all x.(Refrigerator(x) -> KeepsFoodGood(x))", "score": 0}
{"id": "eqasc_train_9507", "prediction": "all x.((Air(x) | Heat(x) | Light(x)) -> CausesDriedFoodToSpoil(x))", "score": 0}
{"id": "eqasc_train_9508", "prediction": "all x.(Refrigerator(x) -> (ProtectionFromAirHeatAndLight(x) & ProtectsFromHeatAndLight(x)))", "score": 0}
{"id": "eqasc_train_9509", "prediction": "all x.(Refrigerator(x) -> TooCold(x))", "score": 0}
{"id": "eqasc_train_9510", "prediction": "all x y.((Cold(x) & Food(y)) -> KeepsFresh(x,y))", "score": 0}
{"id": "eqasc_train_9511", "prediction": "all x.(ColdTemperature(x) -> (KeepsFoodFresh(x) & InhibitsGrowthOfMostBacteria(x)))", "score": 0}
{"id": "eqasc_train_9512", "prediction": "all x.(Refrigerator(x) -> InhibitsGrowthOfMostBacteria(x))", "score": 0}
{"id": "eqasc_train_9513", "prediction": "all x.(Refrigeration(x) -> SlowsGrowthOfBacteriaMoldsAndMicroorganisms(x))", "score": 0}
{"id": "eqasc_train_9514", "prediction": "all x y.((SlowingGrowthOfBacteria(x) & Food(y)) -> KeepsFresh(x,y))", "score": 0}
{"id": "eqasc_train_9515", "prediction": "all x.(ColdTemperature(x) -> HelpsFoodStayFreshLonger(x))", "score": 0}
{"id": "eqasc_train_9516", "prediction": "all x.(Refrigerator(x) -> KeepsFoodCold(x))", "score": 0}
{"id": "eqasc_train_9517", "prediction": "all x.(KitchenAppliance(x) -> Refrigerator(x))", "score": 0}
{"id": "eqasc_train_9518", "prediction": "all x.(KitchenAppliance(x) -> (KeepsFoodFresh(x) & LongPeriodOfTime(x)))", "score": 0}
{"id": "eqasc_train_9519", "prediction": "all x.(FavoriteFood(x) -> Chicken(x))", "score": 0}
{"id": "eqasc_train_9520", "prediction": "all x y.((Refrigerator(x) & Chicken(y)) -> UsedForKeepingFresh(x,y))", "score": 0}
{"id": "eqasc_train_9521", "prediction": "all x.((KeepsFoodFresh(x) & LongPeriodOfTime(x)) -> MajorUserOfElectricity(x))", "score": 0}
{"id": "eqasc_train_9522", "prediction": "all x.((People(x) & ConsumesFood(x) & ColdFromRefrigeration(x)) -> Consumes(x,y))", "score": 0}
{"id": "eqasc_train_9523", "prediction": "all x y.((Cold(x) & Food(y)) -> KeepsFreshForLongPeriod(x,y))", "score": 0}
{"id": "eqasc_train_9524", "prediction": "all x.((BacteriaFoodPoisoning(x) & HotFood(x) & ColdFood(x)) -> Prevents(x,poisoning))", "score": 0}
{"id": "eqasc_train_9525", "prediction": "all x.(Refrigerator(x) -> (HelpsPreventColdFood(x) & GrowsPoisonousBacteria(x)))", "score": 0}
{"id": "eqasc_train_9526", "prediction": "all x.(Invertebrate(x) -> MoreComplexNervousSystem(x))", "score": 2}
{"id": "eqasc_train_9527", "prediction": "all x.(Cephalopod(x) -> (AdvancedNervousSystem(x) & Invertebrate(x)))", "score": 0}
{"id": "eqasc_train_9528", "prediction": "all x.(Cephalopod(x) -> ComplexNervousSystem(x))", "score": 0}
{"id": "eqasc_train_9529", "prediction": "all x.((Animal(x) & -Backbone(x)) -> ComplexNervousSystem(x))", "score": 0}
{"id": "eqasc_train_9530", "prediction": "all x.(ComplexLivingCreature(x) -> OrganizedByNervousSystem(x))", "score": 0}
{"id": "eqasc_train_9531", "prediction": "all x.(Invertebrate(x) -> ComplexLivingCreature(x))", "score": 0}
{"id": "eqasc_train_9532", "prediction": "all x.(Coral(x) -> MoreComplexNervousSystem(x))", "score": 0}
{"id": "eqasc_train_9533", "prediction": "all x.(Insect(x) -> ComplexNervousSystem(x))", "score": 0}
{"id": "eqasc_train_9534", "prediction": "all x.((Animal(x) & -Backbone(x)) -> MoreComplexNervousSystem(x))", "score": 0}
{"id": "eqasc_train_9535", "prediction": "all x.(Cephalopod(x) -> (WellDevelopedNervousSystem(x) & ComplexBrainsCapableOfLearning(x)))", "score": 0}
{"id": "eqasc_train_9536", "prediction": "all x.(Invertebrate(x) -> HasBrainCapableOfLearning(x))", "score": 0}
{"id": "eqasc_train_9537", "prediction": "all x.((Animal(x) & -Backbone(x)) -> MoreComplexNervousSystem(x))", "score": 0}
{"id": "eqasc_train_9538", "prediction": "all x.(Insect(x) -> (ComplexNervousSystem(x) & Insect(x) & MoreComplexNervousSystem(x)))", "score": 0}
{"id": "eqasc_train_9539", "prediction": "all x.(Insect(x) -> MoreComplexNervousSystem(x))", "score": 1}
{"id": "eqasc_train_9540", "prediction": "all x.(Jellyfish(x) -> MoreComplexNervousSystem(x))", "score": 1}
{"id": "eqasc_train_9541", "prediction": "all x.((Animal(x) & -Backbone(x)) -> ComplexNervousSystem(x))", "score": 0}
{"id": "eqasc_train_9542", "prediction": "all x.(ThyroidHormone(x) -> IncreasesMetabolismInCells(x))", "score": 0}
{"id": "eqasc_train_9543", "prediction": "all x.(ThyroidHydrogen(x) -> MadeByThyroidGlobe(x))", "score": 0}
{"id": "eqasc_train_9544", "prediction": "all x y.((ThyroidGum(x) & Cell(y)) -> IncreasesMetabolismInBody(x,y))", "score": 0}
{"id": "eqasc_train_9545", "prediction": "all x.(ThyroidHormone(x) -> RegulatesMetabolism(x))", "score": 0}
{"id": "eqasc_train_9546", "prediction": "all x y.((Metabolism(x) & Hormone(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_train_9547", "prediction": "all x.(CellMetabolism(x) -> HeatProduction(x))", "score": 0}
{"id": "eqasc_train_9548", "prediction": "all x y.((ThyroidHormone(x) & Cell(y)) -> IncreasesHeatProduction(x,y))", "score": 0}
{"id": "eqasc_train_9549", "prediction": "all x.(ThyroidHormone(x) -> MadeByThyroidGlobe(x))", "score": 0}
{"id": "eqasc_train_9550", "prediction": "all x y.((ThyroidGum(x) & ChemicalSubstance(y)) -> IncreasesMetabolism(x,y))", "score": 0}
{"id": "eqasc_train_9551", "prediction": "all x y.((ThyroidSuppressor(x) & PituitaryGlands(y)) -> (StimulatesThyroidGlands(x,y) & ProducesHormones(x,y)))", "score": 0}
{"id": "eqasc_train_9552", "prediction": "all x y.((PituitaryGlands(x) & Hormones(y)) -> ReleasesAndAffectsMetabolism(x,y))", "score": 0}
{"id": "eqasc_train_9553", "prediction": "all x.(Hyperthyroidism(x) -> OveractiveThyroidGum(x))", "score": 0}
{"id": "eqasc_train_9554", "prediction": "all x.(Hyperthyroidism(x) -> IncreasesMetabolismInCells(x))", "score": 0}
{"id": "eqasc_train_9555", "prediction": "all x.(HasDifferentMetabolism(x) -> DifferentMetabolism(x))", "score": 0}
{"id": "eqasc_train_9556", "prediction": "all x y.((ThyroidHormone(x) & Person(y)) -> EffectsDifferently(x,y))", "score": 0}
{"id": "eqasc_train_9557", "prediction": "all x.(ThyroidHydrogen(x) -> MadeByThyroidGlandsInNeck(x))", "score": 0}
{"id": "eqasc_train_9558", "prediction": "all x y.((ThyroidGlobe(x) & Neck(y)) -> IncreasesMetabolismInCells(x,y))", "score": 0}
{"id": "eqasc_train_9559", "prediction": "all x.(ChronicStress(x) -> IncreasesThyroidHormoneProduction(x))", "score": 0}
{"id": "eqasc_train_9560", "prediction": "all x y.((ChronicStress(x) & Cell(y)) -> IncreasesMetabolismRate(x,y))", "score": 0}
{"id": "eqasc_train_9561", "prediction": "all x.(Metabolism(x) -> SumOfChemicalProcesses(x))", "score": 0}
{"id": "eqasc_train_9562", "prediction": "all x y.((ThyroidHormone(x) & LivingOrganismCell(y)) -> IncreasesChemicalProcesses(x,y))", "score": 0}
{"id": "eqasc_train_9563", "prediction": "all x.(MetabolicRate(x) -> FoodBurnedForEnergy(x))", "score": 0}
{"id": "eqasc_train_9564", "prediction": "all x.(ThyroidHormone(x) -> IncreasesEnergyConsumption(x))", "score": 0}
{"id": "eqasc_train_9565", "prediction": "all x.(Metabolism(x) -> ConvertsFoodToEnergy(x))", "score": 0}
{"id": "eqasc_train_9566", "prediction": "all x.(ThyroidHormone(x) -> IncreasesConversionOfFoodToEnergy(x))", "score": 0}
{"id": "eqasc_train_9567", "prediction": "all x.(Thyroxine(x) -> (ThyroidHormone(x) & ArylIodide(x)))", "score": 0}
{"id": "eqasc_train_9568", "prediction": "all x.(Thyroxine(x) -> IncreasesMetabolismRate(x))", "score": 0}
{"id": "eqasc_train_9569", "prediction": "all x.(Thyroxine(x) -> IncreasesMetabolism(x))", "score": 0}
{"id": "eqasc_train_9570", "prediction": "all x.(ThyroidHormone(x) -> ProducedByThyroidGlobe(x))", "score": 0}
{"id": "eqasc_train_9571", "prediction": "all x y z.((Glen(x) & Hormone(y) & Cell(z)) -> ProducesIn(x,y,z))", "score": 0}
{"id": "eqasc_train_9572", "prediction": "all x.(GravesDisease(x) -> (ThyroidGlands(x) & OverproducesThyroidHormone(x)))", "score": 0}
{"id": "eqasc_train_9573", "prediction": "all x.(GravesDisease(x) -> IncreasesMetabolismRateInCells(x))", "score": 0}
{"id": "eqasc_train_9574", "prediction": "all x.(Excretion(x) -> (RemovesWastes(x) & RemovesExcessWater(x)))", "score": 0}
{"id": "eqasc_train_9575", "prediction": "all x.((WaterRemoved(x) & Waste(x)) -> (SemiSolidMass(x) & PreparedForExcretion(x)))", "score": 0}
{"id": "eqasc_train_9576", "prediction": "all x y.((ExcessWater(x) & SemiSolidMassOfWaste(y)) -> RemovedFromBody(x,y))", "score": 0}
{"id": "eqasc_train_9577", "prediction": "all x.(Organism(x) -> ExcretesWastes(x))", "score": 0}
{"id": "eqasc_train_9578", "prediction": "all x.(Organism(x) -> RemovesWasteFromBody(x))", "score": 0}
{"id": "eqasc_train_9579", "prediction": "all x.(Ketone(x) -> (Exhaled(x) & ExcretedInUrine(x)))", "score": 0}
{"id": "eqasc_train_9580", "prediction": "all x.(Urination(x) -> (RemovesWastes(x) & RemovesExcessWater(x)))", "score": 0}
{"id": "eqasc_train_9581", "prediction": "all x.(Excretion(x) -> OccursInFeces(x))", "score": 0}
{"id": "eqasc_train_9582", "prediction": "all x y.((Feces(x) & Body(y)) -> RemovesWastesAndExcessWater(x,y))", "score": 0}
{"id": "eqasc_train_9583", "prediction": "all x.(ExcretionRoute(x) -> InFeces(x))", "score": 0}
{"id": "eqasc_train_9584", "prediction": "all x.(Feces(x) -> (RemovesWastes(x) & RemovesExcessWater(x)))", "score": 0}
{"id": "eqasc_train_9585", "prediction": "all x.(Zinc(x) -> LeavesInWastes(x))", "score": 0}
{"id": "eqasc_train_9586", "prediction": "all x.(Zinc(x) -> LeavesBodyThroughExcretion(x))", "score": 0}
{"id": "eqasc_train_9587", "prediction": "all x.(SolidWaste(x) -> Feces(x))", "score": 0}
{"id": "eqasc_train_9588", "prediction": "all x y.((Excretion(x) & Body(y)) -> RemovesFecesAndExcessWater(x,y))", "score": 0}
{"id": "eqasc_train_9589", "prediction": "all x y.((Excretion(x) & Drug(y)) -> Eliminates(x,y))", "score": 0}
{"id": "eqasc_train_9590", "prediction": "all x y.((Body(x) & Body(y)) -> EliminatesWastesAndExcessWater(x,y))", "score": 0}
{"id": "eqasc_train_9591", "prediction": "all x.(Parasite(x) -> ExcretesToxicWastes(x))", "score": 0}
{"id": "eqasc_train_9592", "prediction": "all x.(Parasite(x) -> RemovesWasteFromBody(x))", "score": 0}
{"id": "eqasc_train_9593", "prediction": "all x.(Alcohol(x) -> (IncreasesDegradation(x) & IncreasesExcretion(x)))", "score": 0}
{"id": "eqasc_train_9594", "prediction": "all x.(Alcohol(x) -> IncreasesRemovalOfWastesAndExcessWater(x))", "score": 0}
{"id": "eqasc_train_9595", "prediction": "all x y.((Excretion(x) & Body(y)) -> RemovesExcessH2O(x,y))", "score": 0}
{"id": "eqasc_train_9596", "prediction": "all x.(Producer(x) -> (Organism(x) & ProducesFoodFor(x,self) & ProducesFoodFor(x,otherOrganisms)))", "score": 0}
{"id": "eqasc_train_9597", "prediction": "all x.(Plant(x) -> (Organism(x) & MakesFoodFor(x,self) & MakesFoodFor(x,otherOrganisms)))", "score": 0}
{"id": "eqasc_train_9598", "prediction": "all x.(Plant(x) -> MakesOwnFood(x))", "score": 0}
{"id": "eqasc_train_9599", "prediction": "all x.(Plant(x) -> Producer(x))", "score": 0}
{"id": "eqasc_train_9600", "prediction": "all x.(Human(x) -> CanProduce(x))", "score": 0}
{"id": "eqasc_train_9601", "prediction": "all x y.((Human(x) & Organism(y)) -> ProvidesFoodFor(x,y))", "score": 0}
{"id": "eqasc_train_9602", "prediction": "all x y.((GreenPlant(x) & Organism(y)) -> ProvidesFoodFor(x,y))", "score": 0}
{"id": "eqasc_train_9603", "prediction": "all x y.((Plant(x) & Organism(y)) -> MakesFoodFor(x,y))", "score": 0}
{"id": "eqasc_train_9604", "prediction": "all x.(Tree(x) -> (Large(x) & HeavyProducer(x)))", "score": 0}
{"id": "eqasc_train_9605", "prediction": "all x y.((Tree(x) & Organism(y)) -> (MakesFoodFor(x,y) & For(x,y)))", "score": 0}
{"id": "eqasc_train_9606", "prediction": "all x y.((GreenPlant(x) & Organism(y)) -> (MakesFoodFor(x,y) & For(x,y)))", "score": 0}
{"id": "eqasc_train_9607", "prediction": "all x.(GreenPlant(x) -> (Organism(x) & MakesFoodFor(x,self) & MakesFoodFor(x,otherOrganisms)))", "score": 0}
{"id": "eqasc_train_9608", "prediction": "all x.(Producer(x) -> FoodChainBase(x))", "score": 0}
{"id": "eqasc_train_9609", "prediction": "all x y.((FoodChain(x) & Organism(y)) -> ProvidesFood(x,y))", "score": 0}
{"id": "eqasc_train_9610", "prediction": "all x.(Autotroph(x) -> (Organism(x) & CanMakeOwnFood(x)))", "score": 0}
{"id": "eqasc_train_9611", "prediction": "all x.(Autotroph(x) -> (Producer(x) & ProducesFoodFor(x) & ProducesFoodFor(x)))", "score": 0}
{"id": "eqasc_train_9612", "prediction": "all x.(GreenPlant(x) -> (Organism(x) & MakesFoodForOtherOrganisms(x)))", "score": 0}
{"id": "eqasc_train_9613", "prediction": "all x.(Parasite(x) -> (Organism(x) & ObtainsFoodFromLivingOrganisms(x)))", "score": 0}
{"id": "eqasc_train_9614", "prediction": "all x y z.((Parasite(x) & Producer(y) & Food(z)) -> (ObtainsFoodFrom(x,y) & ProducesFoodFor(y,z)))", "score": 0}
{"id": "eqasc_train_9615", "prediction": "all x.(Predator(x) -> (Organism(x) & EatsOrganisms(x)))", "score": 0}
{"id": "eqasc_train_9616", "prediction": "all x y.((Producer(x) & Predator(y)) -> (ProvidesFood(x,y) & ProvidesFood(x,y)))", "score": 0}
{"id": "eqasc_train_9617", "prediction": "all x.(Root(x) -> (HasPrimaryMeristems(x) & HasSecondaryMeristems(x) & GrowthInLengthAndWidth(x)))", "score": 0}
{"id": "eqasc_train_9618", "prediction": "all x y.((Root(x) & Plant(y)) -> AnchorsIntoGround(x,y))", "score": 0}
{"id": "eqasc_train_9619", "prediction": "all x.((Plant(x) & Anchor(x)) -> (HasPrimaryAndSecondaryMeristems(x) & HasLengthAndWidthIntoGround(x)))", "score": 0}
{"id": "eqasc_train_9620", "prediction": "all x.(Growth(x) -> exists y.(Meristem(y) & OccursIn(x,y)))", "score": 0}
{"id": "eqasc_train_9621", "prediction": "all x.((Root(x) & -Lengthens(x) & -Wides(x)) -> -Lengthens(x) & Widens(x))", "score": 0}
{"id": "eqasc_train_9622", "prediction": "all x.(Plant(x) -> HasMeristemsForGrowth(x))", "score": 0}
{"id": "eqasc_train_9623", "prediction": "all x.(Meristem(x) -> ZoneOfIntenseActivity(x))", "score": 0}
{"id": "eqasc_train_9624", "prediction": "all x.(Root(x) -> ZoneOfIntenseActivity(x))", "score": 0}
{"id": "eqasc_train_9625", "prediction": "all x.(PrimaryRoot(x) -> (TapRoot(x) | Turnips(x)))", "score": 0}
{"id": "eqasc_train_9626", "prediction": "all x.(Turnips(x) -> (HasPrimaryMeristems(x) & HasSecondaryMeristems(x) & GrowthInLengthAndWidth(x)))", "score": 0}
{"id": "eqasc_train_9627", "prediction": "all x.(Meristem(x) -> IndeterminateGrowth(x))", "score": 0}
{"id": "eqasc_train_9628", "prediction": "all x.((RootsGrowth(x) & IndeterminateGrowth(x)) -> (LengthGrowth(x) & WidthGrowth(x)))", "score": 0}
{"id": "eqasc_train_9629", "prediction": "all x y.((Plant(x) & PrimaryMeristem(y) & SecondaryMeristem(y)) -> (HasMeristem(x,y) & HasMeristem(x,y) & GrowsInLengthAndWidth(x)))", "score": 0}
{"id": "eqasc_train_9630", "prediction": "all x.((Meristem(x) & Bisection(x)) -> Regeneration(x))", "score": 0}
{"id": "eqasc_train_9631", "prediction": "all x.(Root(x) -> (HasParts(x) & RegenerationAfterBisection(x)))", "score": 0}
{"id": "eqasc_train_9632", "prediction": "all x.((Shrub(x) | Tree(x) | Bush(x)) -> PowerfullyRootedPlant(x))", "score": 0}
{"id": "eqasc_train_9633", "prediction": "all x.(Bubble(x) -> (HasPrimaryMeristem(x) & HasSecondaryMeristem(x)))", "score": 0}
{"id": "eqasc_train_9634", "prediction": "all x.(Size(x) -> (MeasuredByWidth(x) & MeasuredByLength(x)))", "score": 0}
{"id": "eqasc_train_9635", "prediction": "all x.(Root(x) -> (HasPrimaryMeristems(x) & HasSecondaryMeristems(x) & GrowthInSize(x)))", "score": 0}
{"id": "eqasc_train_9636", "prediction": "all x.(Root(x) -> DifferentMeristems(x))", "score": 0}
{"id": "eqasc_train_9637", "prediction": "all x.(AxillaryBudMeristem(x) -> MakesBranches(x))", "score": 0}
{"id": "eqasc_train_9638", "prediction": "all x y.((Root(x) & Branch(y)) -> TurnsInto(x,y))", "score": 0}
{"id": "eqasc_train_9639", "prediction": "all x y.((Water(x) & Soil(y)) -> AbsorbedByRoots(x,y))", "score": 0}
{"id": "eqasc_train_9640", "prediction": "all x.((PlantPart(x) & AbsorbsWater(x)) -> HasPrimaryAndSecondaryMeristems(x))", "score": 0}
{"id": "eqasc_train_9641", "prediction": "all x.(Ruler(x) -> MeasuresLength(x))", "score": 0}
{"id": "eqasc_train_9642", "prediction": "all x y.((RootGrowth(x) & PrimaryAndSecondaryMeristems(y)) -> MeasuresWithRuler(x,y))", "score": 0}
{"id": "eqasc_train_9643", "prediction": "all x.(Nitrogen(x) -> (FoundInProteins(x) | FoundInNucleicAcids(x) | FoundInChlorophyll(x)))", "score": 0}
{"id": "eqasc_train_9644", "prediction": "all x.(ExcessNitrogen(x) -> (LushGrowth(x) & LatePlants(x)))", "score": 0}
{"id": "eqasc_train_9645", "prediction": "all x y.((Protein(x) & NucleicAcid(y) & Chlorophyll(x)) -> (LushGrowth(x) & LatePlant(x)))", "score": 0}
{"id": "eqasc_train_9646", "prediction": "all x.(Chloroplast(x) -> (ManufacturesChlorophyll(x) & Chlorophyll(x)))", "score": 0}
{"id": "eqasc_train_9647", "prediction": "all x.(Chloroplast(x) -> ManufacturesNitrogen(x))", "score": 0}
{"id": "eqasc_train_9648", "prediction": "all x.(Molecule(x) -> (Protein(x) | NucleicAcid(x)))", "score": 0}
{"id": "eqasc_train_9649", "prediction": "all x.(Nitrogen(x) -> FoundInMolecules(x))", "score": 0}
{"id": "eqasc_train_9650", "prediction": "all x.((LifeWithoutNitrogen(x) & -Nitrogen(x)) -> Impossible(x))", "score": 0}
{"id": "eqasc_train_9651", "prediction": "all x y.((Plant(x) & Plant(y)) -> AbsorbsNitrogen(x,y))", "score": 0}
{"id": "eqasc_train_9652", "prediction": "all x y z.((ChemicalElement(x) & SymbolN(x) & AtomicNumber7(x) & Chlorophyll(y) & AbsorbedInCycle(z)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_train_9653", "prediction": "all x.(Lawn(x) -> EatsNitrogen(x))", "score": 0}
{"id": "eqasc_train_9654", "prediction": "all x.(Lawn(x) -> (EatsProteins(x) & EatsNucleicAcids(x) & EatsChlorophyll(x)))", "score": 0}
{"id": "eqasc_train_9655", "prediction": "all x.(Nitrogen(x) -> (Gas(x) & Colorless(x) & Odorless(x) & InertElement(x)))", "score": 0}
{"id": "eqasc_train_9656", "prediction": "all x y.((Gas(x) & Protein(y)) -> (Colorless(x) & Odorless(x)))", "score": 0}
{"id": "eqasc_train_9657", "prediction": "HighNitrogen(HighNitrogen) -> CausesRapidGrowth(HighNitrogen))", "score": -1}
{"id": "eqasc_train_9658", "prediction": "all x.(RapidGrowth(x) -> (FoundInProteins(x) | FoundInNucleicAcids(x) | FoundInChlorophyll(x)))", "score": 0}
{"id": "eqasc_train_9659", "prediction": "all x.(DNA(x) -> AssembledFromNucleicAcids(x))", "score": 0}
{"id": "eqasc_train_9660", "prediction": "all x y.((Nitrogen(x) & DNA(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_train_9661", "prediction": "all x.(LargeAmountsOfNitrogen(x) -> (FoundNaturallyInAirAndSoil(x) & FoundInLivingOrganisms(x)))", "score": 0}
{"id": "eqasc_train_9662", "prediction": "all x y z.((Protein(x) & NucleicAcids(y) & Chlorophyll(z)) -> (FoundNaturallyInAirAndSoil(x) & FoundNaturallyInLivingOrganisms(x)))", "score": 0}
{"id": "eqasc_train_9663", "prediction": "all x.(Chlorophyll(x) -> GivesGreenColor(x))", "score": 0}
{"id": "eqasc_train_9664", "prediction": "all x y.((Nitrogen(x) & Plant(y)) -> GreenColor(y))", "score": 0}
{"id": "eqasc_train_9665", "prediction": "all x y.((IrradiatingFood(x) & Microorganism(y)) -> Kills(x,y))", "score": 0}
{"id": "eqasc_train_9666", "prediction": "all x.((Food(x) & IrradiatedUsingRadioactiveGammaRaySources(x)) -> (RadioactiveCobalt-60(x) | RadioactiveCobalt60(x))))", "score": -1}
{"id": "eqasc_train_9667", "prediction": "all x y.((RadioactiveGammaRaySource(x) & Microorganism(y)) -> CanBeKilled(x,y))", "score": 0}
{"id": "eqasc_train_9668", "prediction": "all x y.((Cooking(x) & Irradiation(y)) -> (Disminishes(x,y) | Eliminates(x,y)))", "score": 0}
{"id": "eqasc_train_9669", "prediction": "all x.(CookingFood(x) -> KillsOrganismsAndVitamins(x))", "score": 0}
{"id": "eqasc_train_9670", "prediction": "all x.((BacterialMicroorganism(x) & E-coliFoodPoisoning(x)) -> RepresentativeOfBiologicalFactors(x))", "score": -1}
{"id": "eqasc_train_9671", "prediction": "all x y.((IrradiatingFood(x) & EColibacteria(y)) -> Kills(x,y))", "score": 0}
{"id": "eqasc_train_9672", "prediction": "all x y.((Fermentation(x) & Microorganism(y)) -> InLargeintestine(x,y))", "score": 0}
{"id": "eqasc_train_9673", "prediction": "all x y.((IrradiatingFood(x) & Food(y)) -> KillsFermentation(x,y))", "score": 0}
{"id": "eqasc_train_9674", "prediction": "all x.(Microorganism(x) -> (InFood(x) & ResponsibleForSpoilage(x)))", "score": 0}
{"id": "eqasc_train_9675", "prediction": "all x y.((IrradiatingFood(x) & Food(y)) -> PreventsSpoilage(x,y))", "score": 0}
{"id": "eqasc_train_9676", "prediction": "all x.(Bacteria(x) -> Microorganism(x))", "score": 0}
{"id": "eqasc_train_9677", "prediction": "all x y.((IrradiatingFood(x) & Bacteria(y)) -> KillsInFood(x,y))", "score": 0}
{"id": "eqasc_train_9678", "prediction": "all x.(FoodIrradiation(x) -> AddressesGrowingPreoccupationsWithFoodSafety(x))", "score": 0}
{"id": "eqasc_train_9679", "prediction": "all x.(KillingMicroorganismInFood(x) -> ImportantToFoodSafety(x))", "score": 0}
{"id": "eqasc_train_9680", "prediction": "all x.(FoodIrradiation(x) -> (ImprovesFoodSafety(x) & KillsPathogenicMicroorganisms(x)))", "score": 0}
{"id": "eqasc_train_9681", "prediction": "all x.(IrradiatedFood(x) -> ImprovesFoodSafety(x))", "score": 0}
{"id": "eqasc_train_9682", "prediction": "all x.(FoodIrradiation(x) -> BlazinglyHighTech(x))", "score": 0}
{"id": "eqasc_train_9683", "prediction": "all x y.((BlazinglyHighTechMethod(x) & Food(y)) -> KillsMicroorganisms(x,y))", "score": 0}
{"id": "eqasc_train_9684", "prediction": "all x.(FoodBorneIllness(x) -> (Sickness(x) & ResultsFromEatingFoods(x) & ContaminatedWithHarmfulBacteriaAndMicroorganisms(x)))", "score": 0}
{"id": "eqasc_train_9685", "prediction": "all x y.((IrradiatingFood(x) & Illness(y)) -> Prevents(x,y))", "score": 0}
{"id": "eqasc_train_9686", "prediction": "exists x.(Microorganism(x) & CausesMeatToSpoil(x))", "score": 0}
{"id": "eqasc_train_9687", "prediction": "all x.(IrradiatingFood(x) -> PreventsSpoilage(x))", "score": 0}
{"id": "eqasc_train_9688", "prediction": "all x.(Irradiation(x) -> CausesChemicalChanges(x))", "score": 0}
{"id": "eqasc_train_9689", "prediction": "all x y.((ChemicalChange(x) & Microorganism(y)) -> KillsInFood(x,y))", "score": 0}
{"id": "eqasc_train_9690", "prediction": "all x y.((Storm(x) & BodyOfWater(y)) -> CausesIncreaseInWater(x,y))", "score": 0}
{"id": "eqasc_train_9691", "prediction": "all x.(WaterElevation(x) -> (RapidAccroissement(x) & SevereLocalFlooding(x)))", "score": 0}
{"id": "eqasc_train_9692", "prediction": "all x.(Storm(x) -> (CausesFlooding(x) & CausesFlooding(x)))", "score": 0}
{"id": "eqasc_train_9693", "prediction": "all x.(Hurricane(x) -> KillerStorm(x))", "score": 0}
{"id": "eqasc_train_9694", "prediction": "all x y.((Hurricane(x) & BodyOfWater(y)) -> CausesToIncreaseWater(x,y))", "score": 0}
{"id": "eqasc_train_9695", "prediction": "all x.((Water(x) & (FlowsIntoStormDrains(x) | FlowsIntoSewers(x))) -> EndsUpInNearestWaterBody(x))", "score": 0}
{"id": "eqasc_train_9696", "prediction": "all x y.((Rainwater(x) & WaterBody(y) & Nearest(x,y)) -> IncreasesWater(x,y))", "score": 0}
{"id": "eqasc_train_9697", "prediction": "all x.(BombCyclone(x) -> (IntenseStorm(x) & OftenHybridStorm(x)))", "score": 0}
{"id": "eqasc_train_9698", "prediction": "all x y.((BombCyclone(x) & BodyOfWater(y)) -> CausesIncreaseInWater(x,y))", "score": 0}
{"id": "eqasc_train_9699", "prediction": "all x y.((Storm(x) & Lake(y)) -> CausesAmountToIncrease(x,y))", "score": 0}
{"id": "eqasc_train_9700", "prediction": "more than 500 homes damaged by floodwaters.", "score": -1}
{"id": "eqasc_train_9701", "prediction": "all x y.((Storm(x) & Flooding(y)) -> CausesHomeDamage(x,y))", "score": 0}
{"id": "eqasc_train_9702", "prediction": "all x y.((Rain(x) & Lake(y)) -> IncreasesDepth(x,y))", "score": 0}
{"id": "eqasc_train_9703", "prediction": "all x y.((Storm(x) & Lake(y)) -> MakesDepthGreater(x,y))", "score": 0}
{"id": "eqasc_train_9704", "prediction": "all x.(Storm(x) -> CausesLakeIncrease(x))", "score": 0}
{"id": "eqasc_train_9705", "prediction": "all x y.((Storm(x) & Lake(y)) -> Increases(y,x))", "score": 0}
{"id": "eqasc_train_9706", "prediction": "all x.(Pneumonia(x) -> (Infection(x) | Injury(x)))", "score": 1}
{"id": "eqasc_train_9707", "prediction": "all x.((FluidBuildsUpWithinLungTissue(x)) -> Pneumonia(x))", "score": 0}
{"id": "eqasc_train_9708", "prediction": "all x.(LungTissue(x) -> (Infection(x) | Injury(x)))", "score": 0}
{"id": "eqasc_train_9709", "prediction": "all x.(CommonBacterialPneumonia(x) -> (CausedByStreptococcus(x) | CausedByKlebsiella(x)))", "score": 0}
{"id": "eqasc_train_9710", "prediction": "all x y.((InjuryOfLungs(x) & BacterialInfection(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_train_9711", "prediction": "all x.(InfectionOfLungs(x) -> (CausedByBacteria(x) | CausedByViruses(x) | CausedByFungi(x)))", "score": 0}
{"id": "eqasc_train_9712", "prediction": "all x.(Pneumonia(x) -> (CausedByViruses(x) | CausedByInjury(x)))", "score": 0}
{"id": "eqasc_train_9713", "prediction": "all x.(LegionnairesDisease(x) -> Pneumonia(x))", "score": 1}
{"id": "eqasc_train_9714", "prediction": "all x.(LegionnairesDisease(x) -> (Infection(x) | Injury(x)))", "score": 1}
{"id": "eqasc_train_9715", "prediction": "all x.((SmokeInhalation(x) & ThermalLungInjury(x)) -> CausesDirectLungInjury(x))", "score": 0}
{"id": "eqasc_train_9716", "prediction": "all x.(Pneumonia(x) -> (Infection(x) | SmokeInhalation(x)))", "score": 0}
{"id": "eqasc_train_9717", "prediction": "all x.((ViralPneumonia(x) & BacterialPneumonia(x)) -> MilderThan(x,bacterialPneumonia))", "score": 0}
{"id": "eqasc_train_9718", "prediction": "all x y.((ViralDisease(x) & BacterialDisease(y)) -> (CausedByInjuryOfLungs(x) & CausedByInjuryOfLungs(x)))", "score": 0}
{"id": "eqasc_train_9719", "prediction": "all x.(Mammal(x) -> BreathesAirWithLungs(x))", "score": 0}
{"id": "eqasc_train_9720", "prediction": "all x.(Pneumonia(x) -> (InfectionOrInjuryOfOrgans(x) & BreathesAir(x)))", "score": 0}
{"id": "eqasc_train_9721", "prediction": "all x.(LungInjuries(x) -> BronchodilatoryTreatment(x))", "score": 0}
{"id": "eqasc_train_9722", "prediction": "all x.(Pneumonia(x) -> CanBeTreatedWithBronchodilatoryTreatment(x))", "score": 0}
{"id": "eqasc_train_9723", "prediction": "all x.(Death(x) -> AttributedToPneumonia(x))", "score": 0}
{"id": "eqasc_train_9724", "prediction": "all x.((Infection(x) | InjuryOfLungs(x)) -> CanResultInDeath(x))", "score": 0}
{"id": "eqasc_train_9725", "prediction": "all x.(StreptococcalPneumonia(x) -> CausedByStaphylococcusPneumoniae(x))", "score": 0}
{"id": "eqasc_train_9726", "prediction": "all x.(Streptococcus(x) -> CanInfectLungs(x))", "score": 0}
{"id": "eqasc_train_9727", "prediction": "all x.((PneumocystisCarniii(x) & PneumocystisCarniii(x)) -> Occurs(x))", "score": 0}
{"id": "eqasc_train_9728", "prediction": "all x.(OpportunisticInfection(x) -> (InfectionOrInjuryOfLungs(x)))", "score": 0}
{"id": "eqasc_train_9729", "prediction": "all x y.((Poison(x) & LivingThing(y)) -> CausesHarmTo(x,y))", "score": 1}
{"id": "eqasc_train_9730", "prediction": "all x.(Bird(x) -> (LivingThing(x) & HasIntroductionValue(x)))", "score": 1}
{"id": "eqasc_train_9731", "prediction": "all x y.((Poison(x) & Bird(y)) -> CausesHarmTo(x,y))", "score": 1}
{"id": "eqasc_train_9732", "prediction": "all x.(Human(x) -> (AffectedByEnvironment(x) | AffectedByEnvironment(x)))", "score": 0}
{"id": "eqasc_train_9733", "prediction": "all x y.((Poison(x) & Human(y)) -> CausesHarmTo(x,y))", "score": 0}
{"id": "eqasc_train_9734", "prediction": "all x.((LivingThing(x) & Die(x)) -> RapidDecay(x))", "score": 0}
{"id": "eqasc_train_9735", "prediction": "all x.(Poison(x) -> (CausesThingsToDie(x) & RapidlyDecay(x)))", "score": 0}
{"id": "eqasc_train_9736", "prediction": "all x.((Toxin(x) | Poison(x)) -> Stress(x))", "score": 0}
{"id": "eqasc_train_9737", "prediction": "all x.(Stress(x) -> CausesHarmToLivingThings(x))", "score": 0}
{"id": "eqasc_train_9738", "prediction": "all x.((Snake(x) & LivesInSwamp(x)) -> Poisonous(x))", "score": 0}
{"id": "eqasc_train_9739", "prediction": "all x y.((Snake(x) & LivingThing(y)) -> CausesHarmTo(x,y))", "score": 0}
{"id": "eqasc_train_9740", "prediction": "all x.(LeadPoisoning(x) -> CommonPoisoning(x))", "score": 0}
{"id": "eqasc_train_9741", "prediction": "all x y.((Lead(x) & LivingThing(y)) -> CausesHarmTo(x,y))", "score": 0}
{"id": "eqasc_train_9742", "prediction": "all x.(Poisoning(x) -> ParalyticShellfishPoisoning(x))", "score": 0}
{"id": "eqasc_train_9743", "prediction": "all x.(ParalyticShellfish(x) -> CausesHarmToLivingThings(x))", "score": 0}
{"id": "eqasc_train_9744", "prediction": "all x.(Poison(x) -> (CarbonMonoxide(x) | Cyanide(x)))", "score": 0}
{"id": "eqasc_train_9745", "prediction": "all x y.((Cyanide(x) & LivingThing(y)) -> CausesHarmTo(x,y))", "score": 0}
{"id": "eqasc_train_9746", "prediction": "all x.(ToxicFoodPoisoning(x) -> (EatsPoisonousPlants(x) & Causes(x,y)))", "score": 0}
{"id": "eqasc_train_9747", "prediction": "all x.(ToxicFood(x) -> CausesHarmToLivingThings(x))", "score": 0}
{"id": "eqasc_train_9748", "prediction": "all x.(Rattlesnake(x) -> InjectsPoisonousVenom(x))", "score": 0}
{"id": "eqasc_train_9749", "prediction": "all x y.((Venom(x) & LivingThing(y)) -> CausesHarmTo(x,y))", "score": 0}
{"id": "eqasc_train_9750", "prediction": "all x.(Disinfectant(x) -> (ContainsOrganicSolvents(x) & Flammable(x) & Poisonous(x)))", "score": 0}
{"id": "eqasc_train_9751", "prediction": "all x.(Disinfectant(x) -> (ContainsSolvents(x) & CanHarmLivingThings(x)))", "score": 0}
{"id": "eqasc_train_9752", "prediction": "exists x.(Plant(x) & LethalPoisonous(x))", "score": 0}
{"id": "eqasc_train_9753", "prediction": "exists x.(Plant(x) & CausesHarmToLivingThings(x))", "score": 0}
{"id": "eqasc_train_9754", "prediction": "all x.(ArsenicCompound(x) -> Poisonous(x))", "score": 0}
{"id": "eqasc_train_9755", "prediction": "all x.(ArsenicCompound(x) -> CausesHarmToLivingThings(x))", "score": 0}
{"id": "eqasc_train_9756", "prediction": "all x.(Arsenic(x) -> CausesHarmToLivingThings(x))", "score": 0}
{"id": "eqasc_train_9757", "prediction": "all x y.((EvaporationOfSweet(x) & BodyHeat(y)) -> UsesEnergy(x,y))", "score": 0}
{"id": "eqasc_train_9758", "prediction": "all x.(Animal(x) -> InefficientEnergyConverter(x))", "score": 0}
{"id": "eqasc_train_9759", "prediction": "all x.(Animal(x) -> (ProducesBodyHeat(x) & DissipatedBySweat(x)))", "score": 0}
{"id": "eqasc_train_9760", "prediction": "all x.((Sweat(x) & ComesInContactWithSkin(x)) -> CooledAsSweatEvaporates(x))", "score": 0}
{"id": "eqasc_train_9761", "prediction": "all x y.((Sweat(x) & Skin(y)) -> EvaporatesHeatFrom(x,y))", "score": 0}
{"id": "eqasc_train_9762", "prediction": "all x y.((EvaporationOfPerspiration(x) & BodyHeat(y)) -> (UsesEnergy(x) & ComesFrom(x,y)))", "score": 0}
{"id": "eqasc_train_9763", "prediction": "all x.(SweatGlands(x) -> PumpsPerspirationThroughPoors(x))", "score": 0}
{"id": "eqasc_train_9764", "prediction": "all x.(Perspiration(x) -> (ComesThroughPoors(x) & EvaporatedByEnergyFromBodyHeat(x)))", "score": 0}
{"id": "eqasc_train_9765", "prediction": "all x y.((EnergyLeavesFromBodyHeat(x) & SweatComesInContactWithSkin(y)) -> EnergyLeavesFromBodyHeat(x,y))", "score": 0}
{"id": "eqasc_train_9766", "prediction": "all x.(KineticEnergy(x) -> ComesFromHeat(x))", "score": 0}
{"id": "eqasc_train_9767", "prediction": "all x.(EvaporationOfSweet(x) -> UsesKineticEnergyFromBody(x))", "score": 0}
{"id": "eqasc_train_9768", "prediction": "all x.(Energy(x) -> BodyFuel(x))", "score": 0}
{"id": "eqasc_train_9769", "prediction": "all x.((SweatEvaporated(x) & BodyFuel(x)) -> Used(x))", "score": 0}
{"id": "eqasc_train_9770", "prediction": "all x y.((EvaporationOfSweat(x) & Food(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_train_9771", "prediction": "all x.((SweatEvaporated(x) & Air(x)) -> ProvidesAdditionalCooling(x))", "score": 0}
{"id": "eqasc_train_9772", "prediction": "all x y.((Cooling(x) & BodyHeat(y)) -> UsesEnergy(x))", "score": 0}
{"id": "eqasc_train_9773", "prediction": "Heat (Exercising(Body) -> CreatesExcessHeat(Body))", "score": -1}
{"id": "eqasc_train_9774", "prediction": "all x y z.((EvaporationOfSweet(x) & Energy(y) & Exercise(z)) -> (Uses(x,y) & ComesFrom(y,z)))", "score": 0}
{"id": "eqasc_train_9775", "prediction": "all x.(HumidityInterference(x) -> Sweat(x))", "score": 0}
{"id": "eqasc_train_9776", "prediction": "all x y.((River(x) & Erosion(y)) -> (BecomesDeeper(x,y) & Wider(x,y)))", "score": 0}
{"id": "eqasc_train_9777", "prediction": "all x.(Erosion(x) -> (LossOfSoil(x) & CausedByRain(x) & CausedByWind(x)))", "score": 0}
{"id": "eqasc_train_9778", "prediction": "all x y.((River(x) & Wind(y) & Rain(y)) -> (BecomesDeeper(x,y) & Wider(x,y)))", "score": 0}
{"id": "eqasc_train_9779", "prediction": "all x y.((Erosion(x) & Canyon(y)) -> Forms(x,y))", "score": 0}
{"id": "eqasc_train_9780", "prediction": "all x y z.((River(x) & Canyon(y) & Deeper(z)) -> CutsWide(x,y,z))", "score": 0}
{"id": "eqasc_train_9781", "prediction": "all x y.((Canyon(x) & River(y)) -> (FormedAs(x,y) & DeeperAndWider(y)))", "score": 0}
{"id": "eqasc_train_9782", "prediction": "all x y.((River(x) & Canyon(y)) -> Forms(x,y))", "score": 0}
{"id": "eqasc_train_9783", "prediction": "all x y.((Wind(x) & Water(y)) -> (CanDeepen(x,y) & CanWiden(x,y)))", "score": 0}
{"id": "eqasc_train_9784", "prediction": "all x.(LessSoil(x) -> LostToErosion(x))", "score": 0}
{"id": "eqasc_train_9785", "prediction": "all x y.((River(x) & River(y)) -> (SoilLoss(x,y) & Deeper(y) & Wider(y)))", "score": 0}
{"id": "eqasc_train_9786", "prediction": "all x.((Weathering(x) & Erosion(x)) -> ShapesToday(x))", "score": 0}
{"id": "eqasc_train_9787", "prediction": "all x y.((River(x) & Weathering(y)) -> (BecomesDeeper(x,y) & Wider(x,y)))", "score": 0}
{"id": "eqasc_train_9788", "prediction": "all x.(Erosion(x) -> AltersConstituentsCarriedByWater(x))", "score": 0}
{"id": "eqasc_train_9789", "prediction": "all x y.((River(x) & Deeper(x) & Wider(x)) -> AltersConstituentsCarriedByWater(y))", "score": 0}
{"id": "eqasc_train_9790", "prediction": "all x.(Erosion(x) -> (WorksOfWind(x) & WorksOfWater(x) & WorksOfTime(x)))", "score": 0}
{"id": "eqasc_train_9791", "prediction": "all x y z.((WorkOfWindWaterTime(x) & River(y) & River(z)) -> (BecomesDeeper(y,z) & Wider(z)))", "score": 0}
{"id": "eqasc_train_9792", "prediction": "all x.((Water(x) & NileRiver(x)) -> ImportantToEgypt(x))", "score": 0}
{"id": "eqasc_train_9793", "prediction": "all x.(Erosion(x) -> (DegreesNile(x) & WiderNile(x)))", "score": 0}
{"id": "eqasc_train_9794", "prediction": "(MajorRiver(River) -> (Severn(River) | Thames(River) | Trent(River)))", "score": 0}
{"id": "eqasc_train_9795", "prediction": "all x.(Erosion(x) -> (MakingThamesDeeper(x) & MakingThamesWide(x)))", "score": 0}
{"id": "eqasc_train_9796", "prediction": "all x.(FertileTopsoil(x) -> LostInErosion(x))", "score": 0}
{"id": "eqasc_train_9797", "prediction": "all x y.((River(x) & Deepening(x)) -> LossOfTopsoil(y))", "score": 0}
{"id": "eqasc_train_9798", "prediction": "all x.(Erosion(x) -> (MovementOfSoil(x) & Water(x)))", "score": 0}
{"id": "eqasc_train_9799", "prediction": "all x y.((WaterMovingSoil(x) & River(y)) -> CausesToBeFermier(x,y))", "score": 0}
{"id": "eqasc_train_9800", "prediction": "all x y.((ClearingOfLand(x) & River(y)) -> LeadsToErosion(x,y))", "score": 0}
{"id": "eqasc_train_9801", "prediction": "all x y.((River(x) & ClearingLand(x)) -> Wider(x,y))", "score": 0}
{"id": "eqasc_train_9802", "prediction": "(LongestRiverInAfrica(NILE) & -LongestRiverInAfrica(NILE))", "score": 0}
{"id": "eqasc_train_9803", "prediction": "all x.(Eroded(x) -> NileDegreesAndWider(x))", "score": 0}
{"id": "eqasc_train_9804", "prediction": "all x.(LightBulb(x) -> RequiresElectricalEnergyToProduceLight(x))", "score": 0}
{"id": "eqasc_train_9805", "prediction": "all x y.((Electricity(x) & LightBulb(y) & UsesToProduceLight(x,y)) -> Heat(x))", "score": 0}
{"id": "eqasc_train_9806", "prediction": "all x.(LightBulb(x) -> RequiresEnergyToProduceLight(x))", "score": 0}
{"id": "eqasc_train_9807", "prediction": "all x.((BlackNumber(x) & WhiteBackground(x)) -> (EasierToSeeInDarkness(x) | EasierToSeeInBrightLight(x)))", "score": 0}
{"id": "eqasc_train_9808", "prediction": "all x.(Bulb(x) -> RequiresElectricalEnergy(x))", "score": 0}
{"id": "eqasc_train_9809", "prediction": "all x.((UseForElectricHeat(x) & InRegularLightBulbs(x)) -> UseForElectricHeat(x))", "score": 0}
{"id": "eqasc_train_9810", "prediction": "all x y.((LightBulb(x) & LightBulb(y)) -> UsesEnergyIn(x,y))", "score": 0}
{"id": "eqasc_train_9811", "prediction": "all x y.((LightBulb(x) & PowerPlant(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_train_9812", "prediction": "all x.(LightBulb(x) -> RequiresFlowOfElectrons(x))", "score": 0}
{"id": "eqasc_train_9813", "prediction": "all x.((TrackLighting(x) & BrightensSpace(x)) -> Additional(x))", "score": 0}
{"id": "eqasc_train_9814", "prediction": "all x.((Bulb(x) & ElectricalEnergy(x)) -> BrightensOverallSpace(x))", "score": 0}
{"id": "eqasc_train_9815", "prediction": "all x.(LightBulb(x) -> Heat(x))", "score": 0}
{"id": "eqasc_train_9816", "prediction": "all x.(LightBulb(x) -> UsesHeat(x))", "score": 0}
{"id": "eqasc_train_9817", "prediction": "all x.(Light(x) -> PartOfElectromagneticSpectrum(x))", "score": 0}
{"id": "eqasc_train_9818", "prediction": "all x.(Bulb(x) -> RequiresElectricalEnergy(x))", "score": 0}
{"id": "eqasc_train_9819", "prediction": "all x.(EnergySavingLightBulb(x) -> FluorescentLightBulb(x))", "score": 0}
{"id": "eqasc_train_9820", "prediction": "all x.((ElectricalEnergy(x) & UsedToProduceLight(x)) -> EnergySaving(x))", "score": 0}
{"id": "eqasc_train_9821", "prediction": "all x y.((PowerPlant(x) & Energy(y)) -> MakesElectricity(x,y))", "score": 0}
{"id": "eqasc_train_9822", "prediction": "all x.(Light(x) -> ElectromagneticRadiation(x))", "score": 0}
{"id": "eqasc_train_9823", "prediction": "all x.(Bulb(x) -> RequiresElectricalEnergy(x))", "score": 0}
{"id": "eqasc_train_9824", "prediction": "all x.(Coal(x) -> (UsedForPowerPlants(x) & CreatesElectricity(x)))", "score": 0}
{"id": "eqasc_train_9825", "prediction": "all x y.((Coal(x) & LightBulb(y)) -> Powers(x,y))", "score": 0}
{"id": "eqasc_train_9826", "prediction": "all x.((SolarPoweredLight(x) & UsesLEDBulbs(x)) -> ProvidesEfficientLight(x) & ProvidesMostHoursOfLight(x))", "score": 0}
{"id": "eqasc_train_9827", "prediction": "all x.((SolarPoweredLEDLight(x) & RequiresElectricalEnergy(x)) -> ProducesLightAtNight(x))", "score": 0}
{"id": "eqasc_train_9828", "prediction": "all x.(LightQuanta(x) -> Photon(x))", "score": 0}
{"id": "eqasc_train_9829", "prediction": "all x.(Lightbulb(x) -> RequiresElectricalEnergyToProducePhotons(x))", "score": 0}
{"id": "eqasc_train_9830", "prediction": "all x.(Ray(x) -> TranslatesAsLight(x))", "score": 0}
{"id": "eqasc_train_9831", "prediction": "all x.(Bulb(x) -> RequiresElectricalEnergy(x))", "score": 0}
{"id": "eqasc_train_9832", "prediction": "all x.(Ribosome(x) -> SiteWhereProteinsMade(x))", "score": 0}
{"id": "eqasc_train_9833", "prediction": "all x.(Ribosome(x) -> (ConsistsOfRibosomalRNA(x) & ConsistsOfProteins(x)))", "score": 0}
{"id": "eqasc_train_9834", "prediction": "all x.(Ribosome(x) -> HasRNA(x))", "score": 0}
{"id": "eqasc_train_9835", "prediction": "all x.(FunctionalProtein(x) -> Enzyme(x))", "score": 0}
{"id": "eqasc_train_9836", "prediction": "all x.(Ribosome(x) -> EnzymeMakingSite(x))", "score": 0}
{"id": "eqasc_train_9837", "prediction": "all x.(EndoplasmicReticulum(x) -> (Membrane(x) & AttachedToSites(x) & ProteinsMadeInSites(x)))", "score": 0}
{"id": "eqasc_train_9838", "prediction": "all x.(Ribosome(x) -> (ConsistsOfRNA(x) & ConsistsOfProteins(x)))", "score": 0}
{"id": "eqasc_train_9839", "prediction": "all x.(Ribosome(x) -> ContainsRNA(x))", "score": 0}
{"id": "eqasc_train_9840", "prediction": "all x y.((Site(x) & Protein(y)) -> (MadeOf(x,y) & ContainsRNA(x) & MadeOf(x,y)))", "score": 0}
{"id": "eqasc_train_9841", "prediction": "all x y.((Protein(x) & Nucleus(y)) -> MadeInside(x,y))", "score": 0}
{"id": "eqasc_train_9842", "prediction": "all x.(SoyProtein(x) -> CompleteProtein(x))", "score": 0}
{"id": "eqasc_train_9843", "prediction": "all x.(Soy(x) -> ContainsRibosomes(x))", "score": 0}
{"id": "eqasc_train_9844", "prediction": "all x.(Biomolecule(x) -> (AminoAcids(x) | Proteins(x) | Enzymes(x) | Vitamins(x) | Hormones(x)))", "score": 0}
{"id": "eqasc_train_9845", "prediction": "all x.(Ribosome(x) -> SiteWhereBiomoleculesMade(x))", "score": 0}
{"id": "eqasc_train_9846", "prediction": "all x.((LightBulb(x) & TurnedOn(x)) -> ConvertsElectricalEnergyToLightEnergy(x))", "score": 0}
{"id": "eqasc_train_9847", "prediction": "all x.(Photon(x) -> LightEnergyPackage(x))", "score": 0}
{"id": "eqasc_train_9848", "prediction": "all x y.((Bulb(x) & ElectricalEnergy(y)) -> ConvertsToPhotons(x,y))", "score": 0}
{"id": "eqasc_train_9849", "prediction": "all x.((UltravioletEnergy(x) & TooMuch(x)) -> MayCauseSkinCancer(x))", "score": 0}
{"id": "eqasc_train_9850", "prediction": "exists x.(LightBulb(x) & LightBulb(x) & CausesSkinCancer(x))", "score": 0}
{"id": "eqasc_train_9851", "prediction": "all x y.((Denver(x) & TrafficSignalLight(y)) -> ConvertedToEnergySavingBulbs(y))", "score": 0}
{"id": "eqasc_train_9852", "prediction": "all x y.((TrafficSignal(x) & ElectricalEnergy(y) & TurnedOn(x)) -> ConvertsToLightEnergy(x,y))", "score": 0}
{"id": "eqasc_train_9853", "prediction": "all x.(LightBulb(x) -> RatedInWatts(x))", "score": 0}
{"id": "eqasc_train_9854", "prediction": "all x y.((ElectricalEnergy(x) & LightEnergy(y)) -> ConvertsTo(x,y))", "score": 0}
{"id": "eqasc_train_9855", "prediction": "all x.(Lamp(x) -> (ConvertsElectricalEnergy(x) & (ElectromagneticRadiation(x) | Light(x))))", "score": 0}
{"id": "eqasc_train_9856", "prediction": "all x.((LightBulb(x) & TurnedOn(x)) -> EmitsElectromagneticRadiation(x))", "score": 0}
{"id": "eqasc_train_9857", "prediction": "all x y.((ElectricalEnergy(x) & HeatEnergy(y)) -> ConvertedTo(x,y))", "score": 0}
{"id": "eqasc_train_9858", "prediction": "all x.(FluidescentLightBulb(x) -> UsesHalfEnergyOfStandardBulbs(x))", "score": 0}
{"id": "eqasc_train_9859", "prediction": "all x.(FlourescentBulb(x) -> UsesLessElectricEnergy(x))", "score": 0}
{"id": "eqasc_train_9860", "prediction": "all x.((LightBulb(x) & TurnedOn(x)) -> EmitsPhotons(x))", "score": 0}
{"id": "eqasc_train_9861", "prediction": "all x.((LightBulb(x) & ConvertsElectricalEnergy(x)) -> UsesHeat(x))", "score": 0}
{"id": "eqasc_train_9862", "prediction": "all x y.((LightBulb(x) & Electricity(y)) -> ChangesIntoHeat(x,y))", "score": 0}
{"id": "eqasc_train_9863", "prediction": "all x.(Light(x) -> RadiantEnergy(x))", "score": 0}
{"id": "eqasc_train_9864", "prediction": "all x y.((Bulb(x) & TurnedOn(y)) -> ConvertsElectricalEnergyToRadiationEnergy(x,y))", "score": 0}
{"id": "eqasc_train_9865", "prediction": "all x.(Yeast(x) -> ReproducesAsexuallyByBadding(x))", "score": 0}
{"id": "eqasc_train_9866", "prediction": "all x.(Yeast(x) -> (ReproducesByFormingSpores(x) | ReproducesByBadding(x)))", "score": 0}
{"id": "eqasc_train_9867", "prediction": "all x.(Yeast(x) -> (ReproducesAsexually(x) & FormsSpores(x)))", "score": 0}
{"id": "eqasc_train_9868", "prediction": "all x.(Yeast(x) -> (SimpleEukaryote(x) & SimpleEukaryote(x)))", "score": 0}
{"id": "eqasc_train_9869", "prediction": "all x y.((Eukaryote(x) & Simple(x) & Budding(y)) -> ReproducesAsexually(x,y))", "score": 0}
{"id": "eqasc_train_9870", "prediction": "all x.(Yeast(x) -> (SmallSingleCelledPlant(x) & Plant(x)))", "score": 0}
{"id": "eqasc_train_9871", "prediction": "all x y.((SmallSingleCelledPlant(x) & SmallSingleCelledPlant(y)) -> ReproducesAsexuallyByBadding(x,y))", "score": 0}
{"id": "eqasc_train_9872", "prediction": "all x.((Yeast(x) & (SaccharomycesCereviceae(x) | Yeast(x))) -> Fungus(x))", "score": 0}
{"id": "eqasc_train_9873", "prediction": "all x.(Fungus(x) -> ReproducesAsexuallyByBadding(x))", "score": 0}
{"id": "eqasc_train_9874", "prediction": "all x.(Yeast(x) -> (ReproducesByFormingSpores(x) & ReproducesByBadding(x)))", "score": 0}
{"id": "eqasc_train_9875", "prediction": "all x y.((Yeast(x) & Spore(y)) -> UsesToReproduce(x,y))", "score": 0}
{"id": "eqasc_train_9876", "prediction": "all x.(Yeast(x) -> (OvalUnicellularFungus(x) & ReproduceByBadding(x)))", "score": 0}
{"id": "eqasc_train_9877", "prediction": "all x.((Fungus(x) & Oval(x) & Unicellular(x)) -> ReproducesAsexuallyByBadding(x))", "score": 0}
{"id": "eqasc_train_9878", "prediction": "all x y.((Yeast(x) & Fungus(x)) -> UsedByBakersToMakeTraditionalBread(y))", "score": 0}
{"id": "eqasc_train_9879", "prediction": "all x.(BreadBakingFungus(x) -> ReproducesAsexuallyByBubbing(x))", "score": 0}
{"id": "eqasc_train_9880", "prediction": "all x.(Yeast(x) -> (LivingMicroscopicalFungus(x) & Fungus(x)))", "score": 0}
{"id": "eqasc_train_9881", "prediction": "exists x.(Fungus(x) & ReproduceAsexually(x) & BuddingBadding(x))", "score": 0}
{"id": "eqasc_train_9882", "prediction": "all x.(Eukaryote(x) -> ReproducesByBadding(x))", "score": 0}
{"id": "eqasc_train_9883", "prediction": "all x y.((CancerCell(x) & NormalCell(y)) -> (DivisionsMoreOften(x,y) & GrowsOutOfControl(x)))", "score": 0}
{"id": "eqasc_train_9884", "prediction": "all x.(Mutation(x) -> CausesOutOfControlGrowth(x))", "score": 0}
{"id": "eqasc_train_9885", "prediction": "all x.(CancerCell(x) -> (GrowsOutOfControl(x) & DevelopsIntoTumor(x)))", "score": 0}
{"id": "eqasc_train_9886", "prediction": "all x y.((CancerCell(x) & NormalCell(y)) -> (Divisions(x,y) & OftenDevelopsIntoTumors(x)))", "score": 0}
{"id": "eqasc_train_9887", "prediction": "all x.((CancerCell(x) & Divides(x)) -> TwoNewCancerCellsForm(x))", "score": 0}
{"id": "eqasc_train_9888", "prediction": "all x.(CancerCell(x) -> FormsNewCellsOutOfControl(x))", "score": 0}
{"id": "eqasc_train_9889", "prediction": "all x.(CancerCell(x) -> MalignantCell(x))", "score": 0}
{"id": "eqasc_train_9890", "prediction": "all x y.((MalignantCell(x) & NormalCell(y)) -> DividesMoreOftenThan(x,y))", "score": 0}
{"id": "eqasc_train_9891", "prediction": "all x.((Cell(x) & Homeless(x)) -> CancerCell(x))", "score": 0}
{"id": "eqasc_train_9892", "prediction": "all x.(HomelessCell(x) -> GrowsOutOfControl(x))", "score": 0}
{"id": "eqasc_train_9893", "prediction": "all x y.((Chemotherapy(x) & Radiotherapy(y)) -> TargetsRapidlyDivisioningCancerCells(x,y))", "score": 0}
{"id": "eqasc_train_9894", "prediction": "all x y.((Chemotherapy(x) & Cell(y)) -> Targets(x,y))", "score": 0}
{"id": "eqasc_train_9895", "prediction": "all x y z.((Cell(x) & Cell(y) & Cell(z) & DividesMoreOftenThanNormal(y,z) & GrowsOutOfControl(x)) -> CellDeathOccurs(x))", "score": 0}
{"id": "eqasc_train_9896", "prediction": "all x.(CancerCell(x) -> (Anomaly(x) & DividesWithoutControlOrOrder(x)))", "score": 0}
{"id": "eqasc_train_9897", "prediction": "all x.(CancerCell(x) -> AnomalyCells(x))", "score": 0}
{"id": "eqasc_train_9898", "prediction": "all x y.((Chemotherapy(x) & Radiotherapy(y)) -> (TargetCellsDivision(x,y) & OutOfControl(y)))", "score": 0}
{"id": "eqasc_train_9899", "prediction": "all x.(CancerMitosis(x) -> OutOfControl(x))", "score": 0}
{"id": "eqasc_train_9900", "prediction": "all x.(Lymphoma(x) -> (CellsDivision(x) & GrowsOutOfControl(x)))", "score": 0}
{"id": "eqasc_train_9901", "prediction": "all x y z.((MutatedCell(x) & NormalCell(y) & MutatedCell(z)) -> (DivisionsMoreOften(x,y) & GrowsOutOfControl(x,z)))", "score": 0}
{"id": "eqasc_train_9902", "prediction": "all x.(Mitosis(x) -> (Division(x) & Cell(x)))", "score": 0}
{"id": "eqasc_train_9903", "prediction": "all x y.((CancerCell(x) & NormalCell(y)) -> PerformsMoreOften(x,y))", "score": 0}
{"id": "eqasc_train_9904", "prediction": "all x y z.((Season(x) & Season(y) & Season(z) & Summer(y) & Fall(z)) -> DaylightDecrease(x,y,z))", "score": 0}
{"id": "eqasc_train_9905", "prediction": "all x.((SymptomsOfDepressiveIllness(x) & DecreasedDaylight(x)) -> Worsens(x))", "score": 0}
{"id": "eqasc_train_9906", "prediction": "all x y.((Season(x) & Season(y) & Summer(x) & Fall(y)) -> WorsenSymptomsOfDepressiveIllnesses(x,y))", "score": 0}
{"id": "eqasc_train_9907", "prediction": "all x.((Days(x) & DaylightHours(x)) -> (Colder(x) & Decreased(x)))", "score": 0}
{"id": "eqasc_train_9908", "prediction": "all x y.((SeasonChange(x) & Season(y) & SummerChange(x,y)) -> DaysBecomeColder(x))", "score": 0}
{"id": "eqasc_train_9909", "prediction": "all x.((Fall(x) & ColderDays(x)) -> ColderDays(x))", "score": 0}
{"id": "eqasc_train_9910", "prediction": "all x.(Season(x) -> CausedByTiltOfEarthAxis(x))", "score": 0}
{"id": "eqasc_train_9911", "prediction": "all x y.((Daylight(x) & EarthsAxis(y)) -> CausedByTilt(x,y))", "score": 0}
{"id": "eqasc_train_9912", "prediction": "(all x.(Daylight(x) -> Shorter(x)) & all y.(Sun(y) -> Cooler(y)))", "score": 0}
{"id": "eqasc_train_9913", "prediction": "all x y z.((Season(x) & Season(y) & Season(z) & Summer(y) & Fall(z)) -> DecreasesLight(x,y,z))", "score": 0}
{"id": "eqasc_train_9914", "prediction": "all x.((Summer(x) & NorthernHemisphere(x)) -> TiltedTowardsSun(x))", "score": 0}
{"id": "eqasc_train_9915", "prediction": "all x y.((NorthPole(x) & SeasonallyChangesTilt(x,y) & Sun(y)) -> DecreasedDaylight(x))", "score": 0}
{"id": "eqasc_train_9916", "prediction": "all x.(Season(x) -> EarthsDistanceChange(x))", "score": 0}
{"id": "eqasc_train_9917", "prediction": "all x y.((ChangeOfEarthsDistanceFromSun(x) & EarthsDistance(y)) -> DecreasesDaylight(x,y))", "score": 0}
{"id": "eqasc_train_9918", "prediction": "all x.((Autumn(x) | Fall(x)) -> NearlyOver(x))", "score": 0}
{"id": "eqasc_train_9919", "prediction": "all x y.((Season(x) & Season(y) & Summer(x) & Autumn(y)) -> DecreasedDaylight(x))", "score": 0}
{"id": "eqasc_train_9920", "prediction": "all x.(Darkness(x) -> LargeUVComponent(x))", "score": 0}
{"id": "eqasc_train_9921", "prediction": "all x y.((Season(x) & Season(y) & Summer(x) & Fall(y)) -> UVDecrease(x,y))", "score": 0}
{"id": "eqasc_train_9922", "prediction": "all x.((Daylight(x) & Sunlight(x)) -> NecessaryTo(x))", "score": 0}
{"id": "eqasc_train_9923", "prediction": "all x y z.((Season(x) & Season(y) & Season(z) & Summer(y) & Fall(z)) -> DecreasesSunlightAmount(x,y,z))", "score": 0}
{"id": "eqasc_train_9924", "prediction": "all x y.((Dark(x) & Daylight(y)) -> BreaksAndIlluminedBySun(y,x))", "score": 0}
{"id": "eqasc_train_9925", "prediction": "all x y.((SeasonChange(x) & Season(y) & Summer(x) & Fall(y)) -> IlluminedBySun(x,y))", "score": 0}
{"id": "eqasc_train_9926", "prediction": "(all x.(Winter(x) -> ShortDaylight(x)) & all y.(Summer(y) -> ShortNightHours(y)))", "score": 0}
{"id": "eqasc_train_9927", "prediction": "all x.(Summer(x) -> ShortNights(x))", "score": 0}
{"id": "eqasc_train_9928", "prediction": "all x.(Sheep(x) -> (NaturalSeasonalBrewer(x) & RespondsToDecreasingDarkness(x)))", "score": 0}
{"id": "eqasc_train_9929", "prediction": "all x y.((Season(x) & Season(y) & Summer(x) & Fall(y)) -> BreedsMore(x,y))", "score": 0}
{"id": "eqasc_train_9930", "prediction": "all x.(Summer(x) -> (Hot(x) & Humid(x)))", "score": 0}
{"id": "eqasc_train_9931", "prediction": "all x y.((Season(x) & Season(y) & HotHumidWeather(x,y)) -> DecreasedDaylight(x))", "score": 0}
{"id": "eqasc_train_9932", "prediction": "all x.((HydrogenBond(x) & Freezes(x)) -> WaterExpands(x))", "score": 0}
{"id": "eqasc_train_9933", "prediction": "all x y.((HydrogenBond(x) & Freezes(y)) -> CausesH2oToExpand(x,y))", "score": 0}
{"id": "eqasc_train_9934", "prediction": "all x y.((HydrogenBond(x) & Ice(y)) -> CausesExpansionAsFormed(x,y))", "score": 0}
{"id": "eqasc_train_9935", "prediction": "all x.((HydrogenBond(x) & Freezes(x)) -> CausesH20ToExpand(x))", "score": 0}
{"id": "eqasc_train_9936", "prediction": "all x.(Water(x) -> MakesStrongHydrogenBonds(x))", "score": 0}
{"id": "eqasc_train_9937", "prediction": "all x y.((Water(x) & StrongBonds(y)) -> SticksTogether(x,y))", "score": 0}
{"id": "eqasc_train_9938", "prediction": "all x y.((HydrogenBond(x) & Frozen(y)) -> CausesH2OMoleculesToExpand(x,y))", "score": 0}
{"id": "eqasc_train_9939", "prediction": "all x y.((HydrogenBond(x) & Water(y) & Ice(y)) -> CausesWaterToExpand(x,y))", "score": 0}
{"id": "eqasc_train_9940", "prediction": "all x.(Frostbite(x) -> FreezingTissue(x))", "score": 0}
{"id": "eqasc_train_9941", "prediction": "all x.(HydrogenBonds(x) -> CausesFrostbiteOfTissue(x))", "score": 0}
{"id": "eqasc_train_9942", "prediction": "all x.(HydrogenBond(x) -> Electrostatic(x))", "score": 0}
{"id": "eqasc_train_9943", "prediction": "all x.((ElectrostaticOrigin(x) & PrimarilyElectrostatic(x)) -> WaterExpandsWhenFreezes(x))", "score": 0}
{"id": "eqasc_train_9944", "prediction": "all x.(Electrostatic(x) -> CausesWaterToExpand(x))", "score": 0}
{"id": "eqasc_train_9945", "prediction": "all x.(FreezingWater(x) -> ExpandsWithThreedingForce(x))", "score": 0}
{"id": "eqasc_train_9946", "prediction": "all x y.((HydrogenBond(x) & Substance(y) & Freezes(y)) -> CausesThreevelessForce(x,y))", "score": 0}
{"id": "eqasc_train_9947", "prediction": "all x.(Deuterium(x) -> (HeavyHydrogen(x) & (IsotopeOfHydrogen(x) | HydrogenAtom(x) & NeutronAdded(x))))", "score": 0}
{"id": "eqasc_train_9948", "prediction": "all x.((Bonds(x) & Heavy(x) & Deuterium(x)) -> WaterExpandsWhenFreezes(x))", "score": 0}
{"id": "eqasc_train_9949", "prediction": "all x y.((Sunlight(x) & Rain(y)) -> CausesRainbow(x,y))", "score": 0}
{"id": "eqasc_train_9950", "prediction": "all x.((Light(x) & BrokenIntoManyPieces(x)) -> Rainbow(x))", "score": 0}
{"id": "eqasc_train_9951", "prediction": "all x y.((Sunlight(x) & Rain(y)) -> (CausesLightToBeBrokenInto(x,y)))", "score": 0}
{"id": "eqasc_train_9952", "prediction": "all x.(ColdFront(x) -> BringsInRain(x))", "score": 0}
{"id": "eqasc_train_9953", "prediction": "all x.(ColdFront(x) -> CanCauseRainbow(x))", "score": 0}
{"id": "eqasc_train_9954", "prediction": "all x.((Rainbow(x) & CharmingExampleOfCrystallicDispersion(x)) -> Rainbow(x))", "score": 0}
{"id": "eqasc_train_9955", "prediction": "all x.((Sunlight(x) | Rain(x)) -> CausesCrystallicDispersion(x))", "score": 0}
{"id": "eqasc_train_9956", "prediction": "all x y.((WhiteLight(x) & Prism(y) & Hits(x,y)) -> SevenRainbowColors(x))", "score": 0}
{"id": "eqasc_train_9957", "prediction": "all x y.((Sunlight(x) & Rain(y)) -> (CausesSevenColors(x,y) & CausesSevenColors(x,y)))", "score": 0}
{"id": "eqasc_train_9958", "prediction": "all x.(Rainbow(x) -> Pretty(x))", "score": 0}
{"id": "eqasc_train_9959", "prediction": "all x.((Sunlight(x) & Rain(x)) -> Pretty(x))", "score": 0}
{"id": "eqasc_train_9960", "prediction": "all x y.((Sunlight(x) & Rain(y)) -> CausesCyclicalDispersion(x,y))", "score": 0}
{"id": "eqasc_train_9961", "prediction": "all x.(Desert(x) -> VeryLittleRain(x))", "score": 0}
{"id": "eqasc_train_9962", "prediction": "all x.(Rare(x) -> Rainbow(x))", "score": 0}
{"id": "eqasc_train_9963", "prediction": "all x.(Storm(x) -> Rainbow(x))", "score": 0}
{"id": "eqasc_train_9964", "prediction": "all x y.((Sunlight(x) & Storm(y)) -> BreaksThroughRain(x,y))", "score": 0}
{"id": "eqasc_train_9965", "prediction": "all x y.((Raindrop(x) & Rainbow(y)) -> RefractsLightInto(x,y))", "score": 0}
{"id": "eqasc_train_9966", "prediction": "all x y.((Sunlight(x) & Rain(y)) -> (CausesLightToRefract(x,y) & CausesLightToRefract(x,y)))", "score": 0}
{"id": "eqasc_train_9967", "prediction": "all x.((SunlightPassedThroughPrism(x)) -> RainbowProduced(x))", "score": 0}
{"id": "eqasc_train_9968", "prediction": "all x y.((Prism(x) & Rainbow(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_train_9969", "prediction": "all x.(Rainbow(x) -> (CausedByInternalReflection(x) & CausedByRefraction(x) & SunlightOrMoonlightInsideRaindrops(x)))", "score": 0}
{"id": "eqasc_train_9970", "prediction": "all x.(Rainbow(x) -> MadeBySunlightReflectionsInRaindrops(x))", "score": 0}
{"id": "eqasc_train_9971", "prediction": "all x.(LiquidPrecipitation(x) -> MeasuredWithRainGauge(x))", "score": 0}
{"id": "eqasc_train_9972", "prediction": "all x.((Sunlight(x) & LiquidPrecipitation(x)) -> CanCauseRainbow(x))", "score": 0}
{"id": "eqasc_train_9973", "prediction": "all x.(Rain(x) -> ComesFromClouds(x))", "score": 0}
{"id": "eqasc_train_9974", "prediction": "all x y.((Sunlight(x) & Clouds(y)) -> CausesRainbow(x,y))", "score": 0}
{"id": "eqasc_train_9975", "prediction": "all x.(Rainbow(x) -> ImportantSymbolToNavajoPeople(x))", "score": 0}
{"id": "eqasc_train_9976", "prediction": "all x y.((Sunlight(x) & Rain(y)) -> (CausesSymbol(x,y) & ImportantToNavajoPeople(x)))", "score": 0}
{"id": "eqasc_train_9977", "prediction": "all x y.((Sunlight(x) & Rain(y)) -> CausesCyclicalDispersion(x,y))", "score": 0}
{"id": "eqasc_train_9978", "prediction": "all x.(RainWater(x) -> (ContainsSmallParticulates(x) & ContainsAcid(x)))", "score": 0}
{"id": "eqasc_train_9979", "prediction": "all x y z.((Sunlight(x) & Water(y) & SmallParticulates(z) & Contains(y,z)) -> CausesRainbow(x))", "score": 0}
{"id": "eqasc_train_9980", "prediction": "all x y.((BentLight(x) & Rainbow(y)) -> SeparatesIntoColors(x,y))", "score": 0}
{"id": "eqasc_train_9981", "prediction": "all x y.((Sunlight(x) & Rain(y)) -> (BentLightSeparation(x,y) & Colors(x,y)))", "score": 0}
{"id": "eqasc_train_9982", "prediction": "all x.(MarineBiome(x) -> exists y.(SaltWater(y) & FoundIn(x,y))))", "score": -1}
{"id": "eqasc_train_9983", "prediction": "all x.(Ocean(x) -> (LargeBodyOfSaltWater(x)))", "score": 0}
{"id": "eqasc_train_9984", "prediction": "all x.(MarineBiome(x) -> exists y.(LargeBodyOfSaltWater(y) & FoundIn(x,y)))", "score": 0}
{"id": "eqasc_train_9985", "prediction": "all x y.((SeaTiger(x) & SaltWater(y)) -> FoundInOcean(x,y))", "score": 0}
{"id": "eqasc_train_9986", "prediction": "all x.(CoralReef(x) -> (MarineBiome(x) & UniqueToTropicalSeas(x)))", "score": 0}
{"id": "eqasc_train_9987", "prediction": "all x.(CoralReef(x) -> (FoundInSaltWater(x) & FoundInOcean(x)))", "score": 0}
{"id": "eqasc_train_9988", "prediction": "all x.(SeaTiger(x) -> LivesInSaltWater(x))", "score": 0}
{"id": "eqasc_train_9989", "prediction": "all x y.((FreshwaterBiome(x) & Estuary(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_train_9990", "prediction": "all x.(Pacific(x) -> HasMarineBiomes(x))", "score": 0}
{"id": "eqasc_train_9991", "prediction": "(East is AtlanticOcean(x) & ToEast(x))", "score": -1}
{"id": "eqasc_train_9992", "prediction": "all x.(MarineBiome(x) -> FoundInAtlantic(x))", "score": 0}
{"id": "eqasc_train_9993", "prediction": "all x.(CoralReef(x) -> (FoundInSaltWaterOfOcean(x) & FoundInOcean(x)))", "score": 0}
{"id": "eqasc_train_9994", "prediction": "all x.(MarineBiome(x) -> FindsInPacific(x))", "score": 0}
{"id": "eqasc_train_9995", "prediction": "all x y.((GlobalMarineEcosystem(x) & Ocean(y)) -> (FoundInSaltWater(x,y) & FoundInSaltWater(x,y)))", "score": 0}
{"id": "eqasc_train_9996", "prediction": "all x.(SeaTiger(x) -> FoundInSaltWaterOcean(x))", "score": 0}
{"id": "eqasc_train_9997", "prediction": "all x.(Organism(x) -> UsesLipidsToStoreEnergy(x))", "score": 1}
{"id": "eqasc_train_9998", "prediction": "all x.(FATS(x) -> (Lipids(x) & VitalNutrient(x)))", "score": 0}
{"id": "eqasc_train_9999", "prediction": "all x.(Organism(x) -> UsesFatsToStoreEnergy(x))", "score": 0}
{"id": "eqasc_train_10000", "prediction": "all x y.((Plant(x) | Animal(y)) -> UsesLipidsToStoreEnergy(x,y))", "score": 0}
{"id": "eqasc_train_10001", "prediction": "all x y.((Human(x) & Lipids(y)) -> UsesToStoreEnergy(x,y))", "score": 0}
{"id": "eqasc_train_10002", "prediction": "all x.(Fat(x) -> Lipid(x))", "score": 0}
{"id": "eqasc_train_10003", "prediction": "all x.(Organism(x) -> (UsesFat(x) & StoresEnergy(x)))", "score": 0}
{"id": "eqasc_train_10004", "prediction": "all x.(Animal(x) -> UsesLipidsToStoreEnergy(x))", "score": 1}
{"id": "eqasc_train_10005", "prediction": "all x.(Organism(x) -> UsesFatToStoreEnergy(x))", "score": 0}
{"id": "eqasc_train_10006", "prediction": "all x.(Fish(x) -> UsesLipidsToStoreEnergy(x))", "score": 0}
{"id": "eqasc_train_10007", "prediction": "all x.(Organism(x) -> (UsesCarbon(x) & UsesOxygen(x) & UsesHydrogen(x)))", "score": 0}
{"id": "eqasc_train_10008", "prediction": "all x.(Triglyceride(x) -> StorageFormOfEnergy(x))", "score": 0}
{"id": "eqasc_train_10009", "prediction": "all x y.((Organism(x) & Lipids(y)) -> UsesTriglycerides(x,y))", "score": 0}
{"id": "eqasc_train_10010", "prediction": "all x.((CyclesOfFreezingAndThawingWater(x) & IceWedging(x)) -> CausesIceWedging(x))", "score": 0}
{"id": "eqasc_train_10011", "prediction": "all x.((Weathering(x) & (WaterWedging(x) | IceWedging(x))) -> AssistsIn(x,weather,wedging))", "score": 0}
{"id": "eqasc_train_10012", "prediction": "all x y.((Weathering(x) & Cycle(y)) -> ComesFrom(x,y))", "score": 0}
{"id": "eqasc_train_10013", "prediction": "all x.((Rock(x) & PressureOfInnumerableWedgesOfIce(x)) -> Cracks(x))", "score": 0}
{"id": "eqasc_train_10014", "prediction": "all x.((CyclesOfFreezingAndThawingWater(x)) -> CanCrackRocks(x))", "score": 0}
{"id": "eqasc_train_10015", "prediction": "all x.((CyclesOfFreezingAndThawingWater(x) & CausesMechanicalWeathering(x)) -> CausesMechanicalWeathering(x))", "score": 0}
{"id": "eqasc_train_10016", "prediction": "all x.((Cycle(x) & FreezingWater(x) & ThawingWater(x)) -> DamagedRoads(x))", "score": 0}
{"id": "eqasc_train_10017", "prediction": "all x.((CyclesOfFreezingAndThawing(x) & H2o(x)) -> CausesIceWedging(x))", "score": 0}
{"id": "eqasc_train_10018", "prediction": "all x.((IceWedge(x) & CommonInHighColdLatitudes(x)) -> ForcesSoilParticlesTogether(x))", "score": 0}
{"id": "eqasc_train_10019", "prediction": "all x y.((Cycle(x) & HighColdLatitude(y) & ColdLatitude(z)) -> (FreezingAndThawingWater(x) & ForcesSoilParticles(x)))", "score": 0}
{"id": "eqasc_train_10020", "prediction": "all x.((CyclesOfFreezingAndThawingWater(x)) -> MechanicalWeathering(x))", "score": 0}
{"id": "eqasc_train_10021", "prediction": "all x.((Cycle(x) & FreezingWater(x) & ThawingWater(x)) -> MechanicalWeathering(x))", "score": 0}
{"id": "eqasc_train_10022", "prediction": "all x.(Ice(x) -> (Frozen(x) | Thawed(x)) & UniformRate(x)))", "score": -1}
{"id": "eqasc_train_10023", "prediction": "all x.(IceWedging(x) -> (exists y.(Rate(y) & HappensAt(x,y)))))", "score": -1}
{"id": "eqasc_train_10024", "prediction": "all x.((TemperatureChange(x) & IceWedging(x)) -> MakeSoil(x))", "score": 0}
{"id": "eqasc_train_10025", "prediction": "all x.((Cycle(x) & FreezingWater(x) & ThawingWater(x)) -> MakesSoil(x))", "score": 0}
{"id": "eqasc_train_10026", "prediction": "all x.((CyclesOfFreezingAndThawingWater(x) & CausesMechanicalWeathering(x)) -> MechanicalWeathering(x))", "score": 0}
{"id": "eqasc_train_10027", "prediction": "all x.((CyclesOfFreezingAndThawingWater(x) & CausesMechanicalWeathering(x)) -> CausesMechanicalWeathering(x))", "score": 0}
{"id": "eqasc_train_10028", "prediction": "all x.((Cycle(x) & FreezingWater(x) & ThawingWater(x)) -> MechanicalWeathering(x))", "score": 0}
{"id": "eqasc_train_10029", "prediction": "all x.(Biomass(x) -> (TotalMassOfOrganisms(x) & AtTropicalLevel(x)))", "score": 0}
{"id": "eqasc_train_10030", "prediction": "all x.((Biomass(x) & Carbon(x)) -> FourtyPercent(x))", "score": 0}
{"id": "eqasc_train_10031", "prediction": "all x y.((TropicalLevel(x) & Organism(y) & FourtyPercent(x,y)) -> Carbon(x))", "score": 0}
{"id": "eqasc_train_10032", "prediction": "all x.(TrophicLevel(x) -> (OrganismsPositionInFoodChain(x)))", "score": 0}
{"id": "eqasc_train_10033", "prediction": "all x.(Biomass(x) -> (TotalMassOfOrganisms(x) & OnFoodChain(x)))", "score": 0}
{"id": "eqasc_train_10034", "prediction": "all x.(Organism(x) -> (MadeOutOfCarbon(x) & MostlyMadeOutOfCarbon(x)))", "score": 0}
{"id": "eqasc_train_10035", "prediction": "all x.(Biomass(x) -> (OrganicMatter(x) & Biomass(x) & BurnedInIncinerator(x) & ProducesEnergy(x)))", "score": 0}
{"id": "eqasc_train_10036", "prediction": "all x y.((Organism(x) & TotalMass(x,y) & ThrombosicLevel(y)) -> CanBeBurnedInIncinerator(x))", "score": 0}
{"id": "eqasc_train_10037", "prediction": "all x.(Stage(x) -> TrophicLevel(x))", "score": 0}
{"id": "eqasc_train_10038", "prediction": "all x.(Biomass(x) -> (TotalMassOfOrganisms(x) & InEnvironmentalStage(x)))", "score": 0}
{"id": "eqasc_train_10039", "prediction": "all x y z.((Producer(x) & PrimaryConsumer(y) & TrophosicLevel(z)) -> (MakesUp(x,z) & MakesUp(y,z)))", "score": 0}
{"id": "eqasc_train_10040", "prediction": "all x.(Biomass(x) -> (TotalMassOfPrimaryConsumers(x) & PrimaryConsumers(x)))", "score": 0}
{"id": "eqasc_train_10041", "prediction": "all x.((Biomass(x) & FoodChain(x)) -> TrophicLevel(x))", "score": 0}
{"id": "eqasc_train_10042", "prediction": "all x.(LivingThing(x) -> Organism(x))", "score": 0}
{"id": "eqasc_train_10043", "prediction": "all x.(Biomass(x) -> (TotalMassOfLivingThings(x) & AtTropicalLevel(x)))", "score": 0}
{"id": "eqasc_train_10044", "prediction": "all x.(Herbivore(x) -> (TropicalLevel(x) & GrazesOnPlants(x)))", "score": 0}
{"id": "eqasc_train_10045", "prediction": "all x y.((Biomass(x) & Organism(y) & Herbivore(y)) -> TotalMassOnLevel(x,y))", "score": 0}
{"id": "eqasc_train_10046", "prediction": "all x.((Step(x) & FoodChain(x)) -> TrophicLevel(x))", "score": 0}
{"id": "eqasc_train_10047", "prediction": "all x.(Biomass(x) -> (TotalMassOfOrganisms(x) & StepInFoodChain(x)))", "score": 0}
{"id": "eqasc_train_10048", "prediction": "all x.(Arthropod(x) -> Insect(x))", "score": 3}
{"id": "eqasc_train_10049", "prediction": "all x.(Arthropod(x) -> (DoesAllWithLegs(x) | DoesAllWithModifiedLegs(x)))", "score": 0}
{"id": "eqasc_train_10050", "prediction": "all x.(Insect(x) -> (DoesAllWithLegs(x) | DoesAllWithModifiedLegs(x)))", "score": 0}
{"id": "eqasc_train_10051", "prediction": "all x.(Arthropod(x) -> HasSixLegs(x))", "score": 1}
{"id": "eqasc_train_10052", "prediction": "all x.(Insect(x) -> (SmallAnimal(x) & SixLegs(x)))", "score": 1}
{"id": "eqasc_train_10053", "prediction": "all x.(Arthropod(x) -> (SmallAnimal(x) & SixLegs(x)))", "score": 1}
{"id": "eqasc_train_10054", "prediction": "all x.(Arthropod(x) -> EatenSeasonally(x))", "score": 0}
{"id": "eqasc_train_10055", "prediction": "all x.(Insect(x) -> Eaten(x))", "score": 0}
{"id": "eqasc_train_10056", "prediction": "all x.(Arthropod(x) -> (HasJointedSegmentedExoskeleton(x) & HasSegmentedExoskeleton(x)))", "score": 0}
{"id": "eqasc_train_10057", "prediction": "all x.(Insect(x) -> (JointedSegmentedExoskeleton(x) & JointedExoskeleton(x)))", "score": 0}
{"id": "eqasc_train_10058", "prediction": "all x.(Insect(x) -> JointedSegmentedExoskeleton(x))", "score": 0}
{"id": "eqasc_train_10059", "prediction": "all x.(Arthropod(x) -> (Animal(x) & ExternalSkeleton(x) & JointedLegs(x)))", "score": 0}
{"id": "eqasc_train_10060", "prediction": "all x.((Animal(x) & ExternalSkeleton(x) & JointedLegs(x)) -> Insect(x))", "score": 0}
{"id": "eqasc_train_10061", "prediction": "exists x.(Invertebrate(x) & Arthropod(x))", "score": 1}
{"id": "eqasc_train_10062", "prediction": "exists x.(Invertebrate(x) & Insect(x))", "score": 1}
{"id": "eqasc_train_10063", "prediction": "all x.(Arthropod(x) -> LargestAnimalGroup(x))", "score": 0}
{"id": "eqasc_train_10064", "prediction": "all x.(Animal(x) -> (Insect(x) & LargestGroupOfAnimals(x)))", "score": 0}
{"id": "eqasc_train_10065", "prediction": "all x.(Animal(x) -> Insect(x))", "score": 0}
{"id": "eqasc_train_10066", "prediction": "all x.(Scorpodon(x) -> DistinctiveArthropod(x))", "score": 0}
{"id": "eqasc_train_10067", "prediction": "all x.(Scorpion(x) -> (Insect(x) & Insect(x)))", "score": 0}
{"id": "eqasc_train_10068", "prediction": "all x.(Fly(x) -> (Insect(x) & HasTwoWings(x)))", "score": 0}
{"id": "eqasc_train_10069", "prediction": "all x.(Fly(x) -> (Arthropod(x) & HasTwoWings(x)))", "score": 0}
{"id": "eqasc_train_10070", "prediction": "all x y.((Organism(x) & TooHot(x)) -> MayDie(y))", "score": 0}
{"id": "eqasc_train_10071", "prediction": "all x.((HeatExhaustion(x) & PreceedsHeatStoke(x)) -> WarningBodyTooHot(x))", "score": 0}
{"id": "eqasc_train_10072", "prediction": "all x y.((HeatShotStroke(x) & Organism(y)) -> CanCauseDeath(x,y))", "score": 0}
{"id": "eqasc_train_10073", "prediction": "all x.((Death(x) & DeathProcess(x)) -> FinalPhaseOfLife(x))", "score": 0}
{"id": "eqasc_train_10074", "prediction": "all x y.((Organism(x) & TooHot(x)) -> MayExperienceDeath(y))", "score": 0}
{"id": "eqasc_train_10075", "prediction": "all x.((Dehydration(x) & HotSun(x)) -> ConstantDanger(x))", "score": 0}
{"id": "eqasc_train_10076", "prediction": "all x y.((Organism(x) & Dehydrates(x)) -> MayDie(y))", "score": 0}
{"id": "eqasc_train_10077", "prediction": "all x.(Bacteria(x) -> SingleCellOrganism(x))", "score": 0}
{"id": "eqasc_train_10078", "prediction": "all x.((Bacteria(x) & TooHot(x)) -> MayDie(x))", "score": 0}
{"id": "eqasc_train_10079", "prediction": "all x.(HotSun(x) -> BleachFlowers(x))", "score": 0}
{"id": "eqasc_train_10080", "prediction": "all x.((Sun(x) & TooMuch(x)) -> KillsFlowers(x))", "score": 0}
{"id": "eqasc_train_10081", "prediction": "all x.(Bacteria(x) -> AdaptableOrganism(x))", "score": 0}
{"id": "eqasc_train_10082", "prediction": "all x.((Bacteria(x) & TooHot(x)) -> MayDie(x))", "score": 0}
{"id": "eqasc_train_10083", "prediction": "all x.((Organ(x) & -CanFunction(x)) -> DeathOccurs(x))", "score": 0}
{"id": "eqasc_train_10084", "prediction": "all x.(Overheating(x) -> CanCauseBodyToStopFunctioning(x))", "score": 0}
{"id": "eqasc_train_10085", "prediction": "all x y.((HumanHairDryer(x) & Dog(y)) -> (TooHotForSkin(x,y) & (Overheat(x,y) | Burn(x,y))))", "score": 0}
{"id": "eqasc_train_10086", "prediction": "all x y.((Organism(x) & Overheats(x)) -> MayDie(y))", "score": 0}
{"id": "eqasc_train_10087", "prediction": "all x.(Child(x) -> (SunMakesThingsGrow(x) & SunIsHot(x)))", "score": 0}
{"id": "eqasc_train_10088", "prediction": "all x y.((Organism(x) & Sun(y) & SpendsTooMuchTimeIn(x,y)) -> CanMakeOrganismDie(x))", "score": 0}
{"id": "eqasc_train_10089", "prediction": "all x y.((Animal(x) & Plant(y) & Dies(x)) -> CompletesCycle(x,y))", "score": 0}
{"id": "eqasc_train_10090", "prediction": "all x.((Organism(x) & TooHot(x)) -> CompletesCycle(x))", "score": 0}
{"id": "eqasc_train_10091", "prediction": "all x.((Plant(x) & HotWeather(x)) -> CollapsesAndDies(x))", "score": 0}
{"id": "eqasc_train_10092", "prediction": "all x.((Plant(x) & TooHot(x)) -> CanCollapse(x))", "score": 0}
{"id": "eqasc_train_10093", "prediction": "all x.(VertebrateAcdote(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_train_10094", "prediction": "all x.(Lizard(x) -> (Acrylic(x) & Human(x)))", "score": 0}
{"id": "eqasc_train_10095", "prediction": "all x.(Lizard(x) -> (HasBackbone(x) & HumanBackbone(x)))", "score": 0}
{"id": "eqasc_train_10096", "prediction": "all x.(Reptile(x) -> (Vertebrate(x) & Chordate(x)))", "score": 4}
{"id": "eqasc_train_10097", "prediction": "all x.(Reptile(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_train_10098", "prediction": "all x.(Bird(x) -> (ClassOfCylindrates(x) | ClassOfVertebratePhylum(x)))", "score": 0}
{"id": "eqasc_train_10099", "prediction": "all x.(VertebrateAcdote(x) -> HasVertebrae(x))", "score": 0}
{"id": "eqasc_train_10100", "prediction": "all x.(Reptile(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_train_10101", "prediction": "all x.(Bird(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_train_10102", "prediction": "all x.(Acordate(x) -> (HasBackbone(x) & HasJaws(x)))", "score": 0}
{"id": "eqasc_train_10103", "prediction": "all x.(Strength(x) -> (CorrelatesWithSpinalCord(x) & CorrelatesWithNervous(x) & CorrelatesWithBackbone(x)))", "score": 0}
{"id": "eqasc_train_10104", "prediction": "all x.(VertebrateAcdotes(x) -> (HasSpinalCord(x) & HasNerves(x)))", "score": 0}
{"id": "eqasc_train_10105", "prediction": "all x.(VertebrateAcdote(x) -> HasSpinalColumn(x))", "score": 0}
{"id": "eqasc_train_10106", "prediction": "all x.(Chordate(x) -> (IncludesFish(x) | IncludesAmphibians(x) | IncludesReptiles(x) | IncludesBirds(x) | IncludesMammals(x)))", "score": 0}
{"id": "eqasc_train_10107", "prediction": "all x y z.((Fish(x) & Amphibian(y) & Reptile(z) & Bird(z) & Mammal(x)) -> HasBackbone(x,y,z))", "score": 0}
{"id": "eqasc_train_10108", "prediction": "all x.((Population(x) & SuddenlySmaller(x)) -> BottleneckEffect(x))", "score": 0}
{"id": "eqasc_train_10109", "prediction": "all x y.((SevereDrought(x) & RuralPopulation(y)) -> Urbanizes(x,y))", "score": 0}
{"id": "eqasc_train_10110", "prediction": "all x.(SevereDrought(x) -> (CausesBlockneckEffect(x) | BottleneckEffect(x)))", "score": 0}
{"id": "eqasc_train_10111", "prediction": "all x.((Blockneck(x) & Unpredictable(x)) -> -Effects(x))", "score": 0}
{"id": "eqasc_train_10112", "prediction": "all x y.((Population(x) & Population(y) & SuddenlySmoothlySmaller(x,y)) -> UnpredictableResults(x))", "score": 0}
{"id": "eqasc_train_10113", "prediction": "all x.(BoutleneckEffect(x) -> PrecursorToExtinction(x))", "score": 0}
{"id": "eqasc_train_10114", "prediction": "all x y.((Fire(x) & Population(y)) -> CausesTemporaryDecline(x,y))", "score": 0}
{"id": "eqasc_train_10115", "prediction": "all x y.((Animal(x) & Fire(y) & BottleneckEffect(x,y)) -> CanOccurIn(x,y))", "score": 0}
{"id": "eqasc_train_10116", "prediction": "all x.(Animal(x) | Plant(x))", "score": 0}
{"id": "eqasc_train_10117", "prediction": "all x.((AnimalOrPlantGroup(x) & MuchSmaller(x)) -> BottleneckEffect(x))", "score": 0}
{"id": "eqasc_train_10118", "prediction": "all x.((GeographicalVariation(x) & RandomGeneticDrift(x) & PopulationBlocknecks(x) & founderEffect(x)) -> Reduced(x))", "score": 0}
{"id": "eqasc_train_10119", "prediction": "all x.((Population(x) & SuddenlySmaller(x)) -> ReducedGeneticVariation(x))", "score": 0}
{"id": "eqasc_train_10120", "prediction": "all x.((FishingPressure(x) & SmallerHumanPopulation(x)) -> RelativelyLow(x))", "score": 0}
{"id": "eqasc_train_10121", "prediction": "all x y.((Human(x) & Fish(y)) -> BottleneckEffectOccursIn(x,y))", "score": 0}
{"id": "eqasc_train_10122", "prediction": "all x.(Population(x) -> LargeGroupOfIndividuals(x))", "score": 0}
{"id": "eqasc_train_10123", "prediction": "all x y.((LargeGroup(x) & Individual(y) & SuddenlyGetsMuchSmaller(x,y)) -> BottleneckEffectOccurs(x))", "score": 0}
{"id": "eqasc_train_10124", "prediction": "all x.((Population(x) & SubsequentlySmaller(x)) -> UnpredictableEffects(x))", "score": 0}
{"id": "eqasc_train_10125", "prediction": "all x.(Population(x) -> NumberOfPeople(x))", "score": 0}
{"id": "eqasc_train_10126", "prediction": "all x.((People(x) & SuddenlySmaller(x)) -> BottleneckEffect(x))", "score": 0}
{"id": "eqasc_train_10127", "prediction": "all x.((PopulationGrowth(x) & ExternalMigration(x)) -> Reduced(x))", "score": 0}
{"id": "eqasc_train_10128", "prediction": "all x.((BoutleneckEffect(x) & ExternalMigration(x)) -> Occurs(x))", "score": 0}
{"id": "eqasc_train_10129", "prediction": "all x y.((Boiling(x) & Liquid(y)) -> ChangesToGasByAdditionOfHeatEnergy(x,y))", "score": 0}
{"id": "eqasc_train_10130", "prediction": "all x.(Water(x) -> (HeatedToBoilingPoint(x) & ChangesToSteam(x)))", "score": 0}
{"id": "eqasc_train_10131", "prediction": "all x y.((Boiling(x) & Liquid(y)) -> ChangesIntoSteam(x,y))", "score": 0}
{"id": "eqasc_train_10132", "prediction": "all x.(Boiling(x) -> (AdditionalHeatEnergy(x) & Evaporation(x)))", "score": 0}
{"id": "eqasc_train_10133", "prediction": "all x y.((Boiling(x) & Water(y)) -> ChangesToGasByAdditionOfHeatEnergy(x,y))", "score": 0}
{"id": "eqasc_train_10134", "prediction": "all x.((Soup(x) & BringToBoil(x)) -> SmootherFlavor(x))", "score": 0}
{"id": "eqasc_train_10135", "prediction": "all x.(CookingSoup(x) -> (ChangeFromLiquidToGas(x) & AddsHeatEnergy(x)))", "score": 0}
{"id": "eqasc_train_10136", "prediction": "all x.(BoilingWater(x) -> ProducesSteam(x))", "score": 0}
{"id": "eqasc_train_10137", "prediction": "all x.((AdditionOfHeatEnergy(x) & Water(x)) -> Steam(x))", "score": 0}
{"id": "eqasc_train_10138", "prediction": "all x y.((Gas(x) & Water(y)) -> (Heats(x,y) & TurnsIntoGas(x,y)))", "score": 0}
{"id": "eqasc_train_10139", "prediction": "all x y.((Boiling(x) & Liquid(y)) -> ChangesToGas(x,y))", "score": 0}
{"id": "eqasc_train_10140", "prediction": "all x y.((Boiling(x) & Liquid(y)) -> ConvertsToVapor(x,y))", "score": 0}
{"id": "eqasc_train_10141", "prediction": "all x.((Blown(x) & ViolentEvolution(x)) -> (ChangeFromLiquidToGas(x) & AddsHeatEnergy(x)))", "score": 0}
{"id": "eqasc_train_10142", "prediction": "all x.(Propane(x) -> (Liquid(x) | Gas(x)))", "score": 0}
{"id": "eqasc_train_10143", "prediction": "all x y.((Propanel(x) & Heat(y)) -> (AddedTo(x,y) & ChangeProperties(x,y)))", "score": 0}
{"id": "eqasc_train_10144", "prediction": "all x y.((Boiling(x) & Liquid(y)) -> Gas(x,y))", "score": 0}
{"id": "eqasc_train_10145", "prediction": "all x.(HeatedGas(x) -> GasExpands(x))", "score": 0}
{"id": "eqasc_train_10146", "prediction": "all x.(Heated(x) -> (Expands(x) & DensityDecreases(x)))", "score": 0}
{"id": "eqasc_train_10147", "prediction": "all x y.((Gas(x) & Heated(x)) -> DensityDecreases(y))", "score": 0}
{"id": "eqasc_train_10148", "prediction": "all x.(Chlorine(x) -> GreenCrossGas(x))", "score": 0}
{"id": "eqasc_train_10149", "prediction": "all x.(HeatedChlorine(x) -> Expands(x))", "score": 0}
{"id": "eqasc_train_10150", "prediction": "all x.(Candle(x) -> (HeatedByGasSpaceHeat(x) | HeatedByGasFurnace(x)))", "score": 0}
{"id": "eqasc_train_10151", "prediction": "all x y z.((Gas(x) & Furnace(y) & Cottage(z)) -> ExpandsAfterFurnaceInto(x,y,z))", "score": 0}
{"id": "eqasc_train_10152", "prediction": "all x.(NitrogenGas(x) -> AbundantGas(x))", "score": 0}
{"id": "eqasc_train_10153", "prediction": "all x.((Nitrogen(x) & HeatsHeated(x)) -> Expands(x))", "score": 0}
{"id": "eqasc_train_10154", "prediction": "all x y.((IncreaseInTemperature(x) & Gas(y)) -> CausesExpansion(x,y))", "score": 0}
{"id": "eqasc_train_10155", "prediction": "all x.(Temperature(x) -> AffectsGas(x))", "score": 0}
{"id": "eqasc_train_10156", "prediction": "all x.((Galaxies(x) & MoreSpaceBetween(x,2)) -> MoreSpaceToExpand(x))", "score": 0}
{"id": "eqasc_train_10157", "prediction": "all x.(HeatedGas(x) -> TakesUpMoreSpace(x))", "score": 0}
{"id": "eqasc_train_10158", "prediction": "all x y.((NitrogenHeated(x) & Heats(y)) -> Expands(x,y))", "score": 0}
{"id": "eqasc_train_10159", "prediction": "all x.(HydrogenChloride(x) -> Gas(x))", "score": 0}
{"id": "eqasc_train_10160", "prediction": "all x.(HeatedHydrogenChloride(x) -> Expands(x))", "score": 0}
{"id": "eqasc_train_10161", "prediction": "all x.(HeatedGas(x) -> DensityDecreases(x))", "score": 0}
{"id": "eqasc_train_10162", "prediction": "all x.(Algae(x) -> DiverseLifeCycles(x))", "score": 1}
{"id": "eqasc_train_10163", "prediction": "all x.(AlgaeOnTurfPlantPathology(x) -> PrimitiveGreenPlant(x))", "score": 0}
{"id": "eqasc_train_10164", "prediction": "all x.(PrimaryGreenPlant(x) -> (VariableLifeCycles(x) & PrimitiveGreenPlant(x)))", "score": 0}
{"id": "eqasc_train_10165", "prediction": "all x.(Algae(x) -> CapableOfReproduction(x))", "score": 0}
{"id": "eqasc_train_10166", "prediction": "all x.((GreenPlant(x) & Simplest(x)) -> VariableLifeCycles(x))", "score": 0}
{"id": "eqasc_train_10167", "prediction": "all x.((GreenPlant(x) & Simplest(x)) -> HasVarietyCycles(x))", "score": 0}
{"id": "eqasc_train_10168", "prediction": "all x.(Desmid(x) -> (GreenAlgae(x) & Chlorophyta(x)))", "score": 0}
{"id": "eqasc_train_10169", "prediction": "all x.(Desmid(x) -> DiverseLifeCycles(x))", "score": 0}
{"id": "eqasc_train_10170", "prediction": "exists x.(RedAlgae(x) & EatenByHumans(x))", "score": 0}
{"id": "eqasc_train_10171", "prediction": "all x.((EatenByHumans(x) & HasVarietyInLifeCycles(x)) -> DiverseLifeCycles(x))", "score": 0}
{"id": "eqasc_train_10172", "prediction": "all x.(Diatome(x) -> (SingleLeavedAlgae(x) & Algae(x)))", "score": 1}
{"id": "eqasc_train_10173", "prediction": "all x.(Diatome(x) -> DiverseLifeCycles(x))", "score": 1}
{"id": "eqasc_train_10174", "prediction": "exists x.(GreenAlgae(x) & Plant(x))", "score": 0}
{"id": "eqasc_train_10175", "prediction": "exists x.(Plant(x) & VariableLifeCycle(x))", "score": 0}
{"id": "eqasc_train_10176", "prediction": "all x.(Plant(x) -> VariableLifeCycles(x))", "score": 0}
{"id": "eqasc_train_10177", "prediction": "(all x.(Fish(x) -> EatsAlgae(x)))", "score": 0}
{"id": "eqasc_train_10178", "prediction": "all x y.((Fish(x) & Food(y) & DiverseLifeCycles(y)) -> Eats(x,y))", "score": 0}
{"id": "eqasc_train_10179", "prediction": "all x.(GreenAlgae(x) -> Haplotype(x))", "score": 0}
{"id": "eqasc_train_10180", "prediction": "all x.(Algae(x) -> Haploid(x))", "score": 0}
{"id": "eqasc_train_10181", "prediction": "all x y.((Algae(x) & AquaticPlant(y)) -> (EatenBy(x,y) & Invertebrate(x) & Fish(x)))", "score": 0}
{"id": "eqasc_train_10182", "prediction": "exists x.(AquaticOrganism(x) & EatenByFish(x) & DiverseLifeCycles(x))", "score": 0}
{"id": "eqasc_train_10183", "prediction": "all x.(Coccolithophorid(x) -> MemberOfAlgae(x))", "score": 0}
{"id": "eqasc_train_10184", "prediction": "all x.(Coccolithophorid(x) -> HasVarietyOfLifeCycles(x))", "score": 0}
{"id": "eqasc_train_10185", "prediction": "exists x.(Virus(x) & EnvelopeOfPhospholipidsAndProteins(x))", "score": 0}
{"id": "eqasc_train_10186", "prediction": "all x.(Phospholipid(x) -> BodyFat(x))", "score": 0}
{"id": "eqasc_train_10187", "prediction": "exists x.(Virus(x) & HasEnvelopeOfBodyFatsAndProteins(x))", "score": 0}
{"id": "eqasc_train_10188", "prediction": "exists x.(Virus(x) & HasEnvelopeOfFatsAndProteins(x))", "score": 0}
{"id": "eqasc_train_10189", "prediction": "all x.(Protein(x) -> (Coat(x,virus) | -Coat(x,virus)))", "score": 0}
{"id": "eqasc_train_10190", "prediction": "exists x.(Virus(x) & HasCoatingOfPhospholipids(x))", "score": 0}
{"id": "eqasc_train_10191", "prediction": "all x.(EnvelopedVirus(x) -> MakesOwnMembrane(x))", "score": 0}
{"id": "eqasc_train_10192", "prediction": "exists x.(Virus(x) & MakesOwnMembrane(x))", "score": 0}
{"id": "eqasc_train_10193", "prediction": "all x.(Virus(x) -> EnvelopedBySameMembrane(x))", "score": 0}
{"id": "eqasc_train_10194", "prediction": "all x.(Virus(x) -> SimilarMembrane(x))", "score": 0}
{"id": "eqasc_train_10195", "prediction": "all x.(IntrinsicProtein(x) -> EmbedInPhospholipid(x))", "score": 0}
{"id": "eqasc_train_10196", "prediction": "exists x.(Virus(x) & HasIntroductionProteins(x))", "score": 0}
{"id": "eqasc_train_10197", "prediction": "all x.(Virus(x) -> StrangeLifeForm(x))", "score": 0}
{"id": "eqasc_train_10198", "prediction": "exists x.(ScaryLifeForm(x) & EnvelopeOfPhospholipidsAndProteins(x))", "score": 0}
{"id": "eqasc_train_10199", "prediction": "all x.(Phospholipase(x) -> DegradesPhospholipids(x))", "score": 0}
{"id": "eqasc_train_10200", "prediction": "exists x.(Virus(x) & HasEnvelopeOfEnzymesAndProteins(x))", "score": 0}
{"id": "eqasc_train_10201", "prediction": "exists x.(Virus(x) & EnclosedByEnvelope(x))", "score": 0}
{"id": "eqasc_train_10202", "prediction": "exists x.(Virus(x) & EnclosedBy(x,phospholipids) & Fat(x) & Molecules(x))", "score": 0}
{"id": "eqasc_train_10203", "prediction": "all x y.((Mutation(x) & GenePool(y)) -> CreatesNewGeneticVariation(x,y))", "score": 0}
{"id": "eqasc_train_10204", "prediction": "all x y.((GeneticVariations(x) & GenePool(y)) -> BeneficialToOrganisms(x,y))", "score": 0}
{"id": "eqasc_train_10205", "prediction": "all x.(GeneticVariation(x) -> NaturalSelectionBase(x))", "score": 0}
{"id": "eqasc_train_10206", "prediction": "all x.(Mutation(x) -> NaturalSelection(x))", "score": 0}
{"id": "eqasc_train_10207", "prediction": "all x.(GeneticVariation(x) -> RawMaterialForEvolution(x))", "score": 0}
{"id": "eqasc_train_10208", "prediction": "all x y.((GenePool(x) & Mutation(y)) -> RawMaterialForEvolution(x,y))", "score": 0}
{"id": "eqasc_train_10209", "prediction": "all x.(Biodiversity(x) -> GeneticVariationOfLife(x))", "score": 0}
{"id": "eqasc_train_10210", "prediction": "all x.(Mutation(x) -> CreatesBiodiversity(x))", "score": 0}
{"id": "eqasc_train_10211", "prediction": "all x.(Adult(x) -> ReflectsGenes(x))", "score": 0}
{"id": "eqasc_train_10212", "prediction": "all x y.((Mutation(x) & AdultGenotype(y)) -> CreatesNewGeneticVariation(x,y))", "score": 0}
{"id": "eqasc_train_10213", "prediction": "all x.(Mutations(x) -> (RandomChangesInGeneticInformation(x) & Organism(x)))", "score": 0}
{"id": "eqasc_train_10214", "prediction": "all x y.((Organism(x) & RandomChangesInGeneticInformation(x,y)) -> CreatesNewGeneticVariation(x))", "score": 0}
{"id": "eqasc_train_10215", "prediction": "all x.(Mutation(x) -> Evolution(x))", "score": 0}
{"id": "eqasc_train_10216", "prediction": "all x.(Fertilization(x) -> IncreasesGeneticVariation(x))", "score": 0}
{"id": "eqasc_train_10217", "prediction": "all x y.((Mutation(x) & Fertilization(y)) -> SimilarEffectsOnGenePool(x,y))", "score": 0}
{"id": "eqasc_train_10218", "prediction": "all x.(InfluenzaVirus(x) -> CanAchieveNewGeneticVariation(x))", "score": 0}
{"id": "eqasc_train_10219", "prediction": "all x.(Mutation(x) -> NaturalSelectionBase(x))", "score": 0}
{"id": "eqasc_train_10220", "prediction": "all x.(Mutations(x) -> (CausesRandomChanges(x) & Genes(x)))", "score": 0}
{"id": "eqasc_train_10221", "prediction": "all x y.((RandomChangesInGenes(x) & GenePool(y)) -> CreatesNewGeneticVariationInGenePool(x,y))", "score": 0}
{"id": "eqasc_train_10222", "prediction": "FrequencyOfMutations(Mutations) -> RareEvent(Mutations))", "score": -1}
{"id": "eqasc_train_10223", "prediction": "all x y.((GeneticVariation(x) & GenePool(y)) -> RareEvent(x))", "score": 0}
{"id": "eqasc_train_10224", "prediction": "all x.(Arthropod(x) -> LargestPhylumOfInvertebrates(x))", "score": 1}
{"id": "eqasc_train_10225", "prediction": "all x.(Insect(x) -> (Invertebrate(x) & Invertebrate(x)))", "score": 0}
{"id": "eqasc_train_10226", "prediction": "all x.(Insect(x) -> LargestPhylumOfInvertibrates(x))", "score": 0}
{"id": "eqasc_train_10227", "prediction": "all x.(Insect(x) -> InPhylumArthropoda(x))", "score": 0}
{"id": "eqasc_train_10228", "prediction": "all x.(Insect(x) -> Arthropod(x))", "score": 0}
{"id": "eqasc_train_10229", "prediction": "all x.(Arthropod(x) -> -HasBackbone(x))", "score": 0}
{"id": "eqasc_train_10230", "prediction": "all x.(Arthropod(x) -> (LargestPhylum(x) & -Backbone(x)))", "score": 0}
{"id": "eqasc_train_10231", "prediction": "all x.(Arthropod(x) -> (LargestPhylumOfAnimals(x) & -Backbone(x)))", "score": 0}
{"id": "eqasc_train_10232", "prediction": "all x.(Arthropod(x) -> Animal(x))", "score": 0}
{"id": "eqasc_train_10233", "prediction": "all x.(Insect(x) -> LargestPhylumOfInvertebrates(x))", "score": 1}
{"id": "eqasc_train_10234", "prediction": "all x.((Object(x) & InSunlight(x)) -> AbsorbsSolarEnergy(x))", "score": 0}
{"id": "eqasc_train_10235", "prediction": "all x.((Object(x) & Color(x)) -> DeterminesAbsorbsSolarEnergy(x))", "score": 0}
{"id": "eqasc_train_10236", "prediction": "all x.((Object(x) & Color(x)) -> DeterminesAffectedBySunlight(x))", "score": 0}
{"id": "eqasc_train_10237", "prediction": "all x.(SolarEnergy(x) -> HeatsSurface(x))", "score": 0}
{"id": "eqasc_train_10238", "prediction": "all x.((Object(x) & InSunlight(x)) -> HeatsUp(x))", "score": 0}
{"id": "eqasc_train_10239", "prediction": "all x.(SolarPanel(x) -> AbsorbsEnergyFromSun(x))", "score": 0}
{"id": "eqasc_train_10240", "prediction": "all x.(SolarPanel(x) -> AbsorbsSunlight(x))", "score": 0}
{"id": "eqasc_train_10241", "prediction": "all x.(Leaves(x) -> AbsorbsSunlight(x))", "score": 0}
{"id": "eqasc_train_10242", "prediction": "all x.(Leaves(x) -> AbsorbsSolarEnergy(x))", "score": 0}
{"id": "eqasc_train_10243", "prediction": "all x.((SolarEnergy(x) & ReachesEarthSurface(x)) -> (Absorbed(x) & Reradiated(x)))", "score": 0}
{"id": "eqasc_train_10244", "prediction": "all x.((Object(x) & InSunlight(x)) -> (AbsorbsEnergy(x) & ReradiatesHeat(x)))", "score": 0}
{"id": "eqasc_train_10245", "prediction": "(SymbolicalObject(x) & BadgeOnHat(x,Dinteville))", "score": 0}
{"id": "eqasc_train_10246", "prediction": "all x y.((Badge(x) & InSunlight(x)) -> AbsorbsSolarEnergy(x,y))", "score": 0}
{"id": "eqasc_train_10247", "prediction": "all x y.((SolarEnergy(x) & Sun(y)) -> (Provides(x,y) & Collects(x,y)))", "score": 0}
{"id": "eqasc_train_10248", "prediction": "all x.(SolarPanel(x) -> (InSunlight(x) & ProducesPower(x)))", "score": 0}
{"id": "eqasc_train_10249", "prediction": "all x.((Object(x) & InSunlight(x)) -> AbsorbsHeat(x))", "score": 0}
{"id": "eqasc_train_10250", "prediction": "all x.(HealingRequiresRest(x) -> RequiresRestraint(x))", "score": 0}
{"id": "eqasc_train_10251", "prediction": "all x.(HealingRequiresSleep(x) -> RequiresSleep(x))", "score": 0}
{"id": "eqasc_train_10252", "prediction": "all x.((FullDay(x) & RelaxToSoundAndRelaxation(x) & CoolFreshMountainAir(x)) -> RelaxTo(x))", "score": 0}
{"id": "eqasc_train_10253", "prediction": "all x.(Healing(x) -> SoundSleep(x))", "score": 0}
{"id": "eqasc_train_10254", "prediction": "all x.((Healing(x) & CellRegeneration(x)) -> Follows(x))", "score": 0}
{"id": "eqasc_train_10255", "prediction": "all x.(CellRegenerationRequiresResistantResistance(x) -> RequiresResistance(x))", "score": 0}
{"id": "eqasc_train_10256", "prediction": "all x.(Sleep(x) -> AllowsJoinsToRest(x))", "score": 0}
{"id": "eqasc_train_10257", "prediction": "all x.(Healing(x) -> (RequiresSleep(x) & RequiresSitting(x)))", "score": 0}
{"id": "eqasc_train_10258", "prediction": "all x.(Recovery(x) -> (TakesTime(x) & TakesRerest(x) & TakesGoodNutrition(x)))", "score": 0}
{"id": "eqasc_train_10259", "prediction": "all x.(HealingRequiresTime(x) -> RequiresTime(x))", "score": 0}
{"id": "eqasc_train_10260", "prediction": "all x.(Rerest(x) -> EssentialToTissueHealing(x))", "score": 0}
{"id": "eqasc_train_10261", "prediction": "all x.(Tissue(x) -> BetterWithRest(x))", "score": 0}
{"id": "eqasc_train_10262", "prediction": "all x.(Lavender(x) -> InducesRelaxingSleep(x))", "score": 0}
{"id": "eqasc_train_10263", "prediction": "all x.(Lavender(x) -> InducesHealing(x))", "score": 0}
{"id": "eqasc_train_10264", "prediction": "all x.(Healing(x) -> RequiresEnergy(x))", "score": 0}
{"id": "eqasc_train_10265", "prediction": "all x.((Energy(x) & Rest(x)) -> Requires(x,Requires(x,Requires(x,Requires(x,Requires(x,Requires(x,Requires(x,Requires(x,Requires(x,Requires(x,Requires(x,Requires(x,Requires(x,Requires(x,Requires(x,Requires(x,Requires(x,Requires(x,Requires))))", "score": -1}
{"id": "eqasc_train_10266", "prediction": "all x y.((Season(x) & Environment(y)) -> CausesChange(x,y))", "score": 1}
{"id": "eqasc_train_10267", "prediction": "all x y.((WildlifeHabitat(x) & Animal(y)) -> NativeEnvironment(x,y))", "score": 0}
{"id": "eqasc_train_10268", "prediction": "all x y.((Season(x) & Animal(y)) -> CausesChangeToNativeHabitat(x,y))", "score": 0}
{"id": "eqasc_train_10269", "prediction": "all x.(Summer(x) -> (Hot(x) & Wet(x)))", "score": 0}
{"id": "eqasc_train_10270", "prediction": "all x.(Summer(x) -> CanCauseChangeToEnvironment(x))", "score": 0}
{"id": "eqasc_train_10271", "prediction": "all x.(Season(x) -> CausedByPrecessionOfEarthsAxis(x))", "score": 0}
{"id": "eqasc_train_10272", "prediction": "all x y.((Environment(x) & EarthsAxis(y)) -> Precession(x,y))", "score": 0}
{"id": "eqasc_train_10273", "prediction": "all x y.((Weather(x) & Environment(y)) -> CausesChange(x,y))", "score": 0}
{"id": "eqasc_train_10274", "prediction": "all x y.((Winter(x) & Environment(y)) -> CausesChange(x,y))", "score": 0}
{"id": "eqasc_train_10275", "prediction": "all x.(Ecosystem(x) -> (Environment(x) & AllMembersOfEnvironment(x)))", "score": 1}
{"id": "eqasc_train_10276", "prediction": "all x y.((Season(x) & Ecosystem(y)) -> CausesChange(x,y))", "score": 1}
{"id": "eqasc_train_10277", "prediction": "all x y.((SeasonalVariations(x) & RandomChangesInEnvironment(x)) -> (AffectsLifeHistory(y) & AffectsStocks(y)))", "score": 0}
{"id": "eqasc_train_10278", "prediction": "all x y.((EnvironmentalChange(x) & Species(y)) -> AffectsLifeHistory(x,y))", "score": 0}
{"id": "eqasc_train_10279", "prediction": "all x y.((Season(x) & NativeHabitat(y)) -> CausesChange(x,y))", "score": 0}
{"id": "eqasc_train_10280", "prediction": "exists x.(Plant(x) & (PoisonIvy(x) | PoisonIvy(x)))", "score": 0}
{"id": "eqasc_train_10281", "prediction": "all x.(PoisonIvy(x) -> RequiresSunlightForPhotosynthesis(x))", "score": 0}
{"id": "eqasc_train_10282", "prediction": "all x.((Plant(x) & RequiresSunlight(x)) -> (Living(x) | Growing(x)))", "score": 0}
{"id": "eqasc_train_10283", "prediction": "all x y.((Photosynthesis(x) & Plant(y)) -> StoresEnergy(x,y))", "score": 0}
{"id": "eqasc_train_10284", "prediction": "all x y.((Plant(x) & Sunlight(y)) -> RequiresToStoreEnergy(x,y))", "score": 0}
{"id": "eqasc_train_10285", "prediction": "all x y.((Plant(x) & Photon(y)) -> RequiresForPhotosynthesis(x,y))", "score": 0}
{"id": "eqasc_train_10286", "prediction": "all x.(Leaves(x) -> RequiresSunlight(x))", "score": 0}
{"id": "eqasc_train_10287", "prediction": "all x.(Plant(x) -> FeedsThroughPhotosynthesis(x))", "score": 0}
{"id": "eqasc_train_10288", "prediction": "all x.(Plant(x) -> RequiresSunlight(x))", "score": 0}
{"id": "eqasc_train_10289", "prediction": "all x.(Fern(x) -> SeedlessPlant(x))", "score": 0}
{"id": "eqasc_train_10290", "prediction": "all x.(Fern(x) -> (RequiresSunlight(x) & Photosynthesis(x)))", "score": 0}
{"id": "eqasc_train_10291", "prediction": "all x y.((Photosynthesis(x) & Sun(y)) -> (OccursUsing(x,y) & CreatesOwnEnergy(x,y)))", "score": 0}
{"id": "eqasc_train_10292", "prediction": "all x y.((Sunlight(x) & Plant(y)) -> CreatesEnergy(x,y))", "score": 0}
{"id": "eqasc_train_10293", "prediction": "all x.(Photosynthesis(x) -> MakesFood(x))", "score": 0}
{"id": "eqasc_train_10294", "prediction": "all x y.((Plant(x) & Sunlight(y)) -> RequiresToMakeFood(x,y))", "score": 0}
{"id": "eqasc_train_10295", "prediction": "all x y z.((Organism(x) & Chromosomes(y) & GeneticTreatments(z)) -> (InformationInChromosomes(x,y) & GenericTreatments(z) & PassedToOffspring(x,z)))", "score": 0}
{"id": "eqasc_train_10296", "prediction": "all x.(Chromosome(x) -> GeneticInformation(x))", "score": 0}
{"id": "eqasc_train_10297", "prediction": "all x.(Chromosome(x) -> (UnitOfInformation(x) & CausesTraitsToBePassedToOffspring(x)))", "score": 0}
{"id": "eqasc_train_10298", "prediction": "all x.(Intelligence(x) -> (ComesFromChromosomes(x) & PassedDown(x)))", "score": 0}
{"id": "eqasc_train_10299", "prediction": "all x.(PhysicalTreatment(x) & exists y.(BehavioralTreatment(y) & DeterminedByGeneticMaking(x,y)))", "score": 0}
{"id": "eqasc_train_10300", "prediction": "all x y z.((Organism(x) & Chromosome(y) & Offspring(z)) -> (DeterminesPhysicalCharacteristics(x,y) & DeterminesBehavioralCharacteristics(x,z)))", "score": 0}
{"id": "eqasc_train_10301", "prediction": "all x.(DNA(x) -> CarriesInformation(x))", "score": 0}
{"id": "eqasc_train_10302", "prediction": "all x y z.((DNA(x) & Organism(y) & Offspring(z)) -> CausesGeneticTreatmentsToBePassedDownTo(x,y,z))", "score": 0}
{"id": "eqasc_train_10303", "prediction": "all x y z.((GeneticTreatment(x) & Offspring(y) & Chromosome(z)) -> PassedThrough(x,y,z))", "score": 0}
{"id": "eqasc_train_10304", "prediction": "all x y.((Genetics(x) & Generation(y)) -> (PassedDown(x,y) | inherited(x,y)))", "score": 0}
{"id": "eqasc_train_10305", "prediction": "all x y.((Organism(x) & Chromosome(y)) -> (PassedDown(x,y) | Erased(x,y)))", "score": 0}
{"id": "eqasc_train_10306", "prediction": "all x.((DNA(x) & ContainsGeneticCode(x)) -> BasicBuildingBlockOfChromosomes(x))", "score": 0}
{"id": "eqasc_train_10307", "prediction": "all x y.((DNA(x) & Offspring(y)) -> CausesGeneticTreatmentsToEarn(y,x))", "score": 0}
{"id": "eqasc_train_10308", "prediction": "all x.(FASChild(x) -> OffspringOfChronicAlcoholic(x))", "score": 0}
{"id": "eqasc_train_10309", "prediction": "all x y.((Organism(x) & Chromosome(y) & InformationInChromosome(x,y)) -> GeneticTreatmentsPassedToChildren(x,y))", "score": 0}
{"id": "eqasc_train_10310", "prediction": "all x.(Offspring(x) -> AppearsInLitters(x))", "score": 0}
{"id": "eqasc_train_10311", "prediction": "all x y.((Organism(x) & InformationInChromosomes(x,y)) -> GeneticTreatmentsPassedDownToLitches(x,y))", "score": 0}
{"id": "eqasc_train_10312", "prediction": "all x.((Family(x) & HasChildren(x)) -> AverageNumberOfOffspring(x,1.8))", "score": -1}
{"id": "eqasc_train_10313", "prediction": "all x y.((Organism(x) & ChromosomeInformation(x,y)) -> GeneticTreatmentsPassedToChildren(x,y))", "score": 0}
{"id": "eqasc_train_10314", "prediction": "all x.(DNA(x) -> CarrierOfInformationOfInheritance(x))", "score": 0}
{"id": "eqasc_train_10315", "prediction": "all x y z.((DNA(x) & Organism(y) & Offspring(z)) -> CausesGeneticTreatmentsToBePassedDownTo(x,y,z))", "score": 0}
{"id": "eqasc_train_10316", "prediction": "all x.(Man(x) -> (LivingBeing(x) | Organism(x)))", "score": 0}
{"id": "eqasc_train_10317", "prediction": "all x y.((InformationInChromosomes(x) & Man(y)) -> CausesGeneticTreatmentsToBePassedToOffspring(x,y))", "score": 0}
{"id": "eqasc_train_10318", "prediction": "all x.(Sleepwalking(x) -> GeneticallyElegibleTrait(x))", "score": 0}
{"id": "eqasc_train_10319", "prediction": "all x y.((Sleepwalking(x) & Organism(y)) -> CausedByInformation(x,y))", "score": 0}
{"id": "eqasc_train_10320", "prediction": "all x y.((InsectBite(x) & LivingThing(y)) -> CausesHarmTo(x,y))", "score": 0}
{"id": "eqasc_train_10321", "prediction": "all x y.((InsectBite(x) & Organism(y)) -> CausesHarmTo(x,y))", "score": 0}
{"id": "eqasc_train_10322", "prediction": "all x.(AntBite(x) -> CausesHarmToLivingThings(x))", "score": 0}
{"id": "eqasc_train_10323", "prediction": "all x.(Pesticide(x) -> (KillsInsects(x) & KillsDiseasePathogens(x)))", "score": 0}
{"id": "eqasc_train_10324", "prediction": "all x y.((Pesticide(x) & LivingThing(y)) -> PreventsHarm(x,y))", "score": 0}
{"id": "eqasc_train_10325", "prediction": "all x.(Iguana(x) -> (LikeDogs(x) & LikePeople(x) & LikeLivingThings(x)))", "score": 0}
{"id": "eqasc_train_10326", "prediction": "all x.(InsectBit(x) -> CausesHarmToPeople(x))", "score": 0}
{"id": "eqasc_train_10327", "prediction": "all x.(InsectBite(x) -> PoisoningSource(x))", "score": 0}
{"id": "eqasc_train_10328", "prediction": "all x y.((PoisonousSubstance(x) & LivingThing(y)) -> CausesHarmTo(x,y))", "score": 0}
{"id": "eqasc_train_10329", "prediction": "all x.(Poisoning(x) -> HarmToLivingThings(x))", "score": 0}
{"id": "eqasc_train_10330", "prediction": "exists x.(AssassinBite(x) & CausesAllergy(x) & LifeThreateningReaction(x))", "score": 0}
{"id": "eqasc_train_10331", "prediction": "all x.(AssassinBeast(x) -> CausesHarmToHumans(x))", "score": 0}
{"id": "eqasc_train_10332", "prediction": "all x.(InsectRepellent(x) -> UsedAgainstFleaBits(x))", "score": 0}
{"id": "eqasc_train_10333", "prediction": "all x y.((Repellent(x) & FleaBite(y)) -> StopsHarm(x,y))", "score": 0}
{"id": "eqasc_train_10334", "prediction": "all x.(Mosquito(x) -> BitePeople(x))", "score": 0}
{"id": "eqasc_train_10335", "prediction": "all x.(Mosquito(x) -> (Female(x) & CanHarmLivingThings(x)))", "score": 0}
{"id": "eqasc_train_10336", "prediction": "all x.(Sandbar(x) -> (FormedByWater(x) & MovesSedimentDownstream(x)))", "score": 0}
{"id": "eqasc_train_10337", "prediction": "all x y.((Sandbar(x) & WoodyDebris(y)) -> (ProvidesValuableHabitat(x,y) & AquaticSpecies(x)))", "score": 0}
{"id": "eqasc_train_10338", "prediction": "all x y.((Habitat(x) & AquaticSpecies(y)) -> (FormedByWater(x,y) & MovesSedimentDownstream(x)))", "score": 0}
{"id": "eqasc_train_10339", "prediction": "exists x.(Sediment(x) & NaturalErosion(x))", "score": 0}
{"id": "eqasc_train_10340", "prediction": "all x.(Sandbar(x) -> FormedByNaturalErosion(x))", "score": 0}
{"id": "eqasc_train_10341", "prediction": "all x.(BareSandbar(x) -> IdealSpotForNewStandsOfCottonwood(x))", "score": 0}
{"id": "eqasc_train_10342", "prediction": "all x.((Habitat(x) & IdealForNewStandsOfCottonwood(x)) -> RequiresSediment(x))", "score": 0}
{"id": "eqasc_train_10343", "prediction": "all x y.((ShorelineCurrent(x) & Sealed(y)) -> (CarriesSediments(x,y) & BuildsSandbarsAndSpits(x)))", "score": 0}
{"id": "eqasc_train_10344", "prediction": "all x y.((Current(x) & Sediment(y)) -> MovesDownstream(x,y))", "score": 0}
{"id": "eqasc_train_10345", "prediction": "all x.(Sandbar(x) -> PreferredNestingHabitat(x))", "score": 0}
{"id": "eqasc_train_10346", "prediction": "all x y.((Water(x) & Sediment(y) & MovingDownstream(x,y)) -> NestingHabitat(x))", "score": 0}
{"id": "eqasc_train_10347", "prediction": "all x.((Sediment(x) & MovedDownstreamByWater(x)) -> NestingHabitat(x))", "score": 0}
{"id": "eqasc_train_10348", "prediction": "all x.(MineralSediment(x) -> Normal(x))", "score": 0}
{"id": "eqasc_train_10349", "prediction": "all x.(Sandbar(x) -> (FormedByWater(x) & MovingMineralsDownstream(x)))", "score": 0}
{"id": "eqasc_train_10350", "prediction": "all x.((NativeSpecies(x) & Crane(x)) -> (UsesOpenWater(x) & UsesBarrenSandbars(x)))", "score": 0}
{"id": "eqasc_train_10351", "prediction": "all x y.((Crane(x) & Formation(y) & Water(z)) -> RoostsOn(x,y,z))", "score": 0}
{"id": "eqasc_train_10352", "prediction": "all x y.((Rock(x) & Sediment(y)) -> PushedAlongRiver(x,y))", "score": 0}
{"id": "eqasc_train_10353", "prediction": "all x y.((Sandbar(x) & River(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_train_10354", "prediction": "exists x.(Precipitation(x) & FallsOnLand(x) & SoaksIntoGround(x))", "score": 0}
{"id": "eqasc_train_10355", "prediction": "exists x.(Rain(x) & FallsOnLand(x) & SoaksIntoGround(x) & Groundwater(x))", "score": 0}
{"id": "eqasc_train_10356", "prediction": "exists x.(Snow(x) & FallsOnLand(x) & SoaksIntoGround(x) & Groundwater(x))", "score": 0}
{"id": "eqasc_train_10357", "prediction": "all x.(StagnantWater(x) -> BreedingGroundForMouses(x))", "score": 0}
{"id": "eqasc_train_10358", "prediction": "all x.((Precipitation(x) & FallsOnLand(x)) -> (SoakIn(x) & BreedingPlaceForMoskitoes(x)))", "score": 0}
{"id": "eqasc_train_10359", "prediction": "all x y.((Well(x) & Spring(y)) -> (DrillsInto(x,Groundwater) & FeedsBy(y,Groundwater)))", "score": 0}
{"id": "eqasc_train_10360", "prediction": "all x y.((Spring(x) & Precipitation(y) & SoaksIntoGround(y)) -> CanFeedFrom(x,y))", "score": 0}
{"id": "eqasc_train_10361", "prediction": "all x.((Rain(x) & FallsOnLand(x)) -> (SoaksIntoGround(x) & BecomesGroundwater(x)))", "score": 0}
{"id": "eqasc_train_10362", "prediction": "all x.((Well(x) | Spring(x)) -> SupplyedByGroundwater(x))", "score": 0}
{"id": "eqasc_train_10363", "prediction": "exists x.(Precipitation(x) & FallsOnLand(x) & SoaksIntoGround(x) & SoaksIntoWellsAndSprings(x))", "score": 0}
{"id": "eqasc_train_10364", "prediction": "all x.(Rain(x) -> Precipitation(x))", "score": 0}
{"id": "eqasc_train_10365", "prediction": "all x y z.((Rain(x) & Groundwater(y) & Groundwater(z)) -> (SoaksInto(x,y) & Groundwater(y)))", "score": 0}
{"id": "eqasc_train_10366", "prediction": "all x.((Hail(x) | Rain(x) | Sleet(x) | Snow(x)) -> Precipitation(x))", "score": 0}
{"id": "eqasc_train_10367", "prediction": "all x.((Hail(x) & FallsOnLand(x)) -> (SoaksIntoGround(x) & Groundwater(x)))", "score": 0}
{"id": "eqasc_train_10368", "prediction": "all x.(Well(x) -> UsedAsGroundwaterSource(x))", "score": 0}
{"id": "eqasc_train_10369", "prediction": "all x y z.((Well(x) & Precipitation(y) & Land(z) & FallsOn(y,z)) -> SoaksInto(x,y,z))", "score": 0}
{"id": "eqasc_train_10370", "prediction": "all x.(AutumnalPool(x) -> FillsWithRisingGroundwater(x))", "score": 0}
{"id": "eqasc_train_10371", "prediction": "exists x.(Precipitation(x) & FallsOnLand(x) & FillsAutumnalPools(x))", "score": 0}
{"id": "eqasc_train_10372", "prediction": "all x.(Rainbow(x) -> (FormedByRefractionOfLight(x) & SeparatesLightIntoAllColors(x)))", "score": 0}
{"id": "eqasc_train_10373", "prediction": "all x.(WaterVapor(x) -> BendsLight(x))", "score": 0}
{"id": "eqasc_train_10374", "prediction": "all x.(Rainbow(x) -> (FormedByWaterVapor(x) & FormedByWaterVapor(x)))", "score": 0}
{"id": "eqasc_train_10375", "prediction": "all x y.((LightWavesStrikePrism(x) & RaysOfLight(y)) -> (Refract(y) | Bend(y)))", "score": 0}
{"id": "eqasc_train_10376", "prediction": "all x.(Prism(x) -> CanFormRainbow(x))", "score": 0}
{"id": "eqasc_train_10377", "prediction": "all x.((Storm(x) & Rainbow(x)) -> Appears(x))", "score": 0}
{"id": "eqasc_train_10378", "prediction": "all x y.((Storm(x) & Storm(y)) -> RefractionOfLight(x,y))", "score": 0}
{"id": "eqasc_train_10379", "prediction": "all x.(Rainbow(x) -> (HasColors(x) & WaterRefractsLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLightLight", "score": -1}
{"id": "eqasc_train_10380", "prediction": "all x.(Rainbow(x) -> (WaterRefractsLight(x) & FormedBy(x,Water)))", "score": 0}
{"id": "eqasc_train_10381", "prediction": "all x y.((Rainbow(x) & Light(y)) -> (FormedFrom(x,y) & HitsWater(x) & RefractsDifferentWavelengths(x)))", "score": 0}
{"id": "eqasc_train_10382", "prediction": "all x.(CrystallicDispersion(x) -> (FormedByRefractionOfLight(x) & SeparatesLightIntoAllColors(x)))", "score": 0}
{"id": "eqasc_train_10383", "prediction": "all x.(Rainbow(x) -> (FormedByPassingLight(x) & ThroughPrism(x)))", "score": 0}
{"id": "eqasc_train_10384", "prediction": "all x.(Rainbow(x) -> (GiftedAsEverydayExampleOfSpectrum(x)))", "score": 0}
{"id": "eqasc_train_10385", "prediction": "all x.(Spectrum(x) -> (FormedByRefractionOfLight(x) & SeparatesLightIntoAllColors(x)))", "score": 0}
{"id": "eqasc_train_10386", "prediction": "all x.(Rainbow(x) -> (OpticalPhenomenon(x) & DueToDiffractionOfLightWaves(x)))", "score": 0}
{"id": "eqasc_train_10387", "prediction": "all x y.((Rainbow(x) & Color(y)) -> FormedByDiffraction(x,y))", "score": 0}
{"id": "eqasc_train_10388", "prediction": "all x.(Rainbow(x) -> RaindropsRefractSunlight(x))", "score": 0}
{"id": "eqasc_train_10389", "prediction": "all x y.((Sunlight(x) & Rainbow(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_train_10390", "prediction": "all x.(Refraction(x) -> BendingOfLight(x))", "score": 0}
{"id": "eqasc_train_10391", "prediction": "all x y.((Rainbow(x) & Light(y)) -> (FormedByBbending(x,y) & SeparatesLightIntoAllColors(x)))", "score": 0}
{"id": "eqasc_train_10392", "prediction": "all x.(Rainbow(x) -> FormedByBbendingOfLight(x))", "score": 0}
{"id": "eqasc_train_10393", "prediction": "all x y.((Color(x) & Wavelength(y)) -> Same(x,y))", "score": 0}
{"id": "eqasc_train_10394", "prediction": "all x.(Rainbow(x) -> (FormedByRefractionOfLight(x) & SeparatesLightIntoAllDifferentWavelengths(x)))", "score": 0}
{"id": "eqasc_train_10395", "prediction": "all x.(Rainbow(x) -> FormedByBbendingOfLight(x))", "score": 0}
{"id": "eqasc_train_10396", "prediction": "all x y.((LightRay(x) & Lens(y)) -> ComesIn(x,y))", "score": 0}
{"id": "eqasc_train_10397", "prediction": "all x y.((Rainbow(x) & Rays(y)) -> FormedByRefraction(x,y))", "score": 0}
{"id": "eqasc_train_10398", "prediction": "all x y.((Electricity(x) & Building(y)) -> UsedForHeating(x,y))", "score": 0}
{"id": "eqasc_train_10399", "prediction": "all x.(ElectricPower(x) -> CleanPower(x))", "score": 0}
{"id": "eqasc_train_10400", "prediction": "all x.(CleanPower(x) -> UsedForHeatingBuildings(x))", "score": 0}
{"id": "eqasc_train_10401", "prediction": "all x.(NuclearFission(x) -> GeneratesElectricity(x))", "score": 0}
{"id": "eqasc_train_10402", "prediction": "all x y.((NuclearFission(x) & Building(y)) -> Heats(x,y))", "score": 0}
{"id": "eqasc_train_10403", "prediction": "all x y.((Hospital(x) & Building(y)) -> IncorporatesTechnicalSystems(x,y))", "score": 0}
{"id": "eqasc_train_10404", "prediction": "all x y.((Electricity(x) & Hospital(y)) -> Heats(x,y))", "score": 0}
{"id": "eqasc_train_10405", "prediction": "all x.(Heating(x) -> ElectricConvectorRadiators(x))", "score": 0}
{"id": "eqasc_train_10406", "prediction": "all x y.((Radiators(x) & Building(y)) -> Heats(x,y))", "score": 0}
{"id": "eqasc_train_10407", "prediction": "all x.(Energy(x) -> UsedForHeatingBuildings(x))", "score": 0}
{"id": "eqasc_train_10408", "prediction": "all x.(Energy(x) -> UsedForHeatingBuildings(x))", "score": 0}
{"id": "eqasc_train_10409", "prediction": "all x.((Electron(x) & InMotion(x)) -> UsedForHeatingBuildings(x))", "score": 0}
{"id": "eqasc_train_10410", "prediction": "all x y.((Electricity(x) & Human(y)) -> HelpsLiveInColdClimates(x,y))", "score": 0}
{"id": "eqasc_train_10411", "prediction": "all x.(Electricity(x) -> (CreatedWithTurbineGenerator(x)))", "score": 0}
{"id": "eqasc_train_10412", "prediction": "all x.(Building(x) -> HeatsWithTurbineGenerators(x))", "score": 0}
{"id": "eqasc_train_10413", "prediction": "all x.((Plant(x) & RequiresSeedDispersal(x)) -> RequiresReproduction(x))", "score": 0}
{"id": "eqasc_train_10414", "prediction": "all x.(Grain(x) -> (Seed(x) & Planted(x)))", "score": 0}
{"id": "eqasc_train_10415", "prediction": "all x y.((Plant(x) & Grains(y)) -> ReproductionDependsOn(x,y))", "score": 0}
{"id": "eqasc_train_10416", "prediction": "all x y.((Seed(x) & Animal(y)) -> DispersedBy(x,y))", "score": 0}
{"id": "eqasc_train_10417", "prediction": "all x.(PlantReproduction(x) -> RequiresAnimals(x))", "score": 0}
{"id": "eqasc_train_10418", "prediction": "all x.((SunflowerSeed(x) | Seed(x)) -> PlantsAtHouse(x))", "score": 0}
{"id": "eqasc_train_10419", "prediction": "all x.(Sunflower(x) -> RequiresSeedDispersal(x))", "score": 0}
{"id": "eqasc_train_10420", "prediction": "all x.(Plant(x) -> (DependsOnBirds(x) & Pollination(x) & SeedDispersal(x)))", "score": 0}
{"id": "eqasc_train_10421", "prediction": "all x y.((Plant(x) & Bird(y)) -> PollinatedBy(x,y))", "score": 0}
{"id": "eqasc_train_10422", "prediction": "all x.(Rodents(x) -> (SeedConsumer(x) & SeedDisperser(x)))", "score": 0}
{"id": "eqasc_train_10423", "prediction": "all x y z.((Plant(x) & Rodent(y) & Requires(x,y) & Reproduction(z)) -> Requires(x,z))", "score": 0}
{"id": "eqasc_train_10424", "prediction": "all x.((SpermatophytePlant(x) & ReproducesBySeeds(x)) -> SpermatophytePlant(x))", "score": 0}
{"id": "eqasc_train_10425", "prediction": "all x.(Spermatophyte(x) -> RequiresSeedsToBeDispersed(x))", "score": 0}
{"id": "eqasc_train_10426", "prediction": "all x.(Seed(x) -> DispersedByAnimals(x))", "score": 0}
{"id": "eqasc_train_10427", "prediction": "all x y.((Plant(x) & Animal(y)) -> RequiresForReproduction(x,y))", "score": 0}
{"id": "eqasc_train_10428", "prediction": "all x.(Flower(x) -> ProducesSeedsForReproduction(x))", "score": 0}
{"id": "eqasc_train_10429", "prediction": "all x.(Flower(x) -> RequiresDispersalForReproduction(x))", "score": 0}
{"id": "eqasc_train_10430", "prediction": "all x y.((Plant(x) & Fruit(y)) -> RequiresForReproduction(x,y))", "score": 0}
{"id": "eqasc_train_10431", "prediction": "all x.(ReproductiveInvestment(x) -> (MeasuredSeedMass(x) & MeasuredSamaraSize(x) & MeasuredDispersalAbility(x)))", "score": 0}
{"id": "eqasc_train_10432", "prediction": "all x.(Plant(x) -> (RequiresInvestment(x) & RequiresSeedMass(x) & RequiresSize(x) & RequiresDispersal(x)))", "score": 0}
{"id": "eqasc_train_10433", "prediction": "all x.(SeedDispersal(x) -> EnablesPlantsToProduceOffspring(x))", "score": 0}
{"id": "eqasc_train_10434", "prediction": "all x.(Mammal(x) -> (ConservesHeat(x) & (Hair(x) | Fur(x))))", "score": 0}
{"id": "eqasc_train_10435", "prediction": "all x y.((Human(x) & Hair(y)) -> ConservesHeatWithHair(x,y))", "score": 0}
{"id": "eqasc_train_10436", "prediction": "all x.(Coyote(x) -> FurBearingMammal(x))", "score": 0}
{"id": "eqasc_train_10437", "prediction": "all x.(Coyote(x) -> (ConservesBodyHeat(x) & Fur(x)))", "score": 0}
{"id": "eqasc_train_10438", "prediction": "all x.(Haircoat(x) -> ConservesHeatInMammals(x))", "score": 0}
{"id": "eqasc_train_10439", "prediction": "all x.(Monkey(x) -> Mammal(x))", "score": 0}
{"id": "eqasc_train_10440", "prediction": "all x.(Mammal(x) -> (ConservesBodyHeat(x) & (Hair(x) | Fur(x))))", "score": 0}
{"id": "eqasc_train_10441", "prediction": "all x.(Mammal(x) -> (Hair(x) | Fur(x)))", "score": 0}
{"id": "eqasc_train_10442", "prediction": "all x.(Mammal(x) -> ConservesBodyHeat(x))", "score": 0}
{"id": "eqasc_train_10443", "prediction": "all x.(Mammal(x) -> (Squirrel(x) | Muskrat(x) | Oppositum(x) | Deer(x)))", "score": 0}
{"id": "eqasc_train_10444", "prediction": "all x.(Deer(x) -> (ConservesBodyHeat(x) & Fur(x)))", "score": 0}
{"id": "eqasc_train_10445", "prediction": "all x.(Mammal(x) -> (ConservesEnergy(x) & (Hair(x) | Fur(x))))", "score": 0}
{"id": "eqasc_train_10446", "prediction": "all x.(Mammal(x) -> GeneratesInternalHeat(x))", "score": 0}
{"id": "eqasc_train_10447", "prediction": "all x.(Animal(x) -> (MakesHeatWithMetabolism(x) & Metabolism(x)))", "score": 0}
{"id": "eqasc_train_10448", "prediction": "all x.(Dog(x) -> ConservesBodyHeatWithFur(x))", "score": 0}
{"id": "eqasc_train_10449", "prediction": "all x.(Heat(x) -> EmittedEnergy(x))", "score": 0}
{"id": "eqasc_train_10450", "prediction": "all x.(Mammal(x) -> (ConservesBodyEnergy(x) & (Hair(x) | Fur(x))))", "score": 0}
{"id": "eqasc_train_10451", "prediction": "all x.(Mammal(x) -> (KeepsWarmWithHairOrFur(x) | KeepsWarmWithFur(x)))", "score": 0}
{"id": "eqasc_train_10452", "prediction": "all x.(Goat(x) -> (Small(x) & -Predatory(x)))", "score": 0}
{"id": "eqasc_train_10453", "prediction": "all x.(Goat(x) -> (ConservesHeat(x) & (Hair(x) | Fur(x))))", "score": 0}
{"id": "eqasc_train_10454", "prediction": "all x.(Bat(x) -> (Mammal(x) & HasWings(x)))", "score": 0}
{"id": "eqasc_train_10455", "prediction": "all x.(Bat(x) -> (ConservesBodyHeat(x) & Fur(x)))", "score": 0}
{"id": "eqasc_train_10456", "prediction": "all x.(Mammal(x) -> (Rabbit(x) | Fox(x) | Coyote(x)))", "score": 0}
{"id": "eqasc_train_10457", "prediction": "all x.(Fox(x) -> (ConservesHeat(x) & (Hair(x) | Fur(x))))", "score": 0}
{"id": "eqasc_train_10458", "prediction": "(MadeOfKeratin(Hair) & MadeOfKeratin(Feathers))", "score": 0}
{"id": "eqasc_train_10459", "prediction": "all x.(Mammal(x) -> (ConservesBodyHeat(x) & HasKeratin(x)))", "score": 0}
{"id": "eqasc_train_10460", "prediction": "all x.(HairFollicle(x) -> (ProducesHair(x) & VariousThickness(x) & VariousColors(x)))", "score": 0}
{"id": "eqasc_train_10461", "prediction": "all x.(Mammal(x) -> (ConservesBodyHeat(x) & HasFollicles(x) & ProducesThickness(x) & ProducesColors(x)))", "score": 0}
{"id": "eqasc_train_10462", "prediction": "all x y.((Energy(x) & Ecosystem(y)) -> (Introduces(x,y) & (Sunlight(y) | ChemicalCompounds(y))))", "score": 0}
{"id": "eqasc_train_10463", "prediction": "all x y z.((Organism(x) & Organism(y) & Habitat(z) & (Sunlight(x) | ChemicalCompounds(x))) -> EntersEnergy(x,y,z))", "score": 0}
{"id": "eqasc_train_10464", "prediction": "all x.(SolarEnergy(x) -> CleanEnergy(x))", "score": 0}
{"id": "eqasc_train_10465", "prediction": "all x.(SolarLight(x) -> EntersEcosystems(x))", "score": 0}
{"id": "eqasc_train_10466", "prediction": "all x.((Energy(x) & EntersBiomes(x)) -> (Sunlight(x) | ChemicalCompounds(x)))", "score": 0}
{"id": "eqasc_train_10467", "prediction": "all x.(Sunlight(x) -> SourceOfLight(x))", "score": 0}
{"id": "eqasc_train_10468", "prediction": "all x.(Nature(x) -> (exists y.(Ecosystem(y) & ConsistsOf(x,y))) & DependsOnEnergy(x)))", "score": -1}
{"id": "eqasc_train_10469", "prediction": "all x.(EnergyRequirements(x) -> (RequiredForGrowth(x) & RequiredForMaintenance(x)))", "score": 0}
{"id": "eqasc_train_10470", "prediction": "all x y.((Ecosystem(x) & Sunlight(y)) -> UsesForGrowth(x,y))", "score": 0}
{"id": "eqasc_train_10471", "prediction": "all x.((Sun(x) & Sunlight(x)) -> Day(x))", "score": 0}
{"id": "eqasc_train_10472", "prediction": "all x y.((Energy(x) & Ecosystem(y)) -> EntersFromSun(x,y))", "score": 0}
{"id": "eqasc_train_10473", "prediction": "all x.(Compound(x) | Molecule(x))", "score": 0}
{"id": "eqasc_train_10474", "prediction": "all x y.((Energy(x) & Ecosystem(y)) -> (EnteredInSunlight(x,y) | EntersInCombinationsOfElements(x,y)))", "score": 0}
{"id": "eqasc_train_10475", "prediction": "all x.(Energy(x) -> BasicNecessityOfEcosystem(x))", "score": 0}
{"id": "eqasc_train_10476", "prediction": "all x y.((Ecosystem(x) & BasicNecessity(y) & EntersInSunlight(x,y)) -> EntersInSunlight(x,y))", "score": 0}
{"id": "eqasc_train_10477", "prediction": "all x.(Sunlight(x) -> (EnergyReleasedFromFusionReactions(x) & InSun(x)))", "score": 0}
{"id": "eqasc_train_10478", "prediction": "all x.(Ecosystem(x) -> UsesFusionAsEnergy(x))", "score": 0}
{"id": "eqasc_train_10479", "prediction": "all x y z.((Ocean(x) & Ocean(y) & (Sunlight(z) | ChemicalCompounds(z))) -> Enters(x,y,z))", "score": 0}
{"id": "eqasc_train_10480", "prediction": "all x y z.((Energy(x) & Ecosystem(y) & Photon(z)) -> EntersInFormOf(x,y,z))", "score": 0}
{"id": "eqasc_train_10481", "prediction": "all x.(Oxygen(x) -> TransportedByBlood(x))", "score": 0}
{"id": "eqasc_train_10482", "prediction": "all x y z.((Muscle(x) & Contraction(y) & BodyPart(z)) -> (ProducesHeat(x,y) & TransportedByBlood(x,z)))", "score": 0}
{"id": "eqasc_train_10483", "prediction": "all x y.((BodyPart(x) & BodyPart(y)) -> (TransportsOxygen(x) & TransportsHeat(x)))", "score": 0}
{"id": "eqasc_train_10484", "prediction": "all x y.((Breathing(x) & Circulation(y)) -> AllowsOxygenTransportation(x,y))", "score": 0}
{"id": "eqasc_train_10485", "prediction": "all x.(Breathing(x) -> ProvidesSubstanceTransportedByBlood(x))", "score": 0}
{"id": "eqasc_train_10486", "prediction": "all x.((Blood(x) & LifeInBlood(x)) -> TypifiesLife(x))", "score": 0}
{"id": "eqasc_train_10487", "prediction": "all x.(Oxygen(x) -> TypifiesLife(x))", "score": 0}
{"id": "eqasc_train_10488", "prediction": "all x.(Blood(x) -> TransportedThroughVins(x))", "score": 0}
{"id": "eqasc_train_10489", "prediction": "all x.(Oxygen(x) -> TransportedThroughVines(x))", "score": 0}
{"id": "eqasc_train_10490", "prediction": "all x.(ActiveBrainsAndMuscles(x) -> (RequiresMoreOxygen(x) & RequiresMoreNutrients(x)))", "score": 0}
{"id": "eqasc_train_10491", "prediction": "all x y.((Substance(x) & ActiveMuscle(y)) -> TransportedByBlood(x,y))", "score": 0}
{"id": "eqasc_train_10492", "prediction": "all x.(Oxygen(x) -> TransportedByHydrogen(x))", "score": 0}
{"id": "eqasc_train_10493", "prediction": "all x.(Oxygen(x) -> (TransportedByHydrogen(x) & TransportedByHydrogen(x)))", "score": 0}
{"id": "eqasc_train_10494", "prediction": "all x.(BloodGlucose(x) -> FeedsCells(x))", "score": 0}
{"id": "eqasc_train_10495", "prediction": "all x y.((Oxygen(x) & Glucose(y)) -> TransportedInBody(x,y))", "score": 0}
{"id": "eqasc_train_10496", "prediction": "all x y.((CompletesCircuit(x) & Circuit(y)) -> CausesElectricityFlow(x,y))", "score": 0}
{"id": "eqasc_train_10497", "prediction": "all x y z.((Electricity(x) & ElectricMotor(y) & Fan(z)) -> (FlowsThrough(x,y) & CausesBladesToTurn(x,z)))", "score": 0}
{"id": "eqasc_train_10498", "prediction": "all x y.((CompletesCircuit(x) & Fan(y)) -> CausesBladesToTurn(y,x))", "score": 0}
{"id": "eqasc_train_10499", "prediction": "all x.((Circuit(x) & Completes(x)) -> TouchWireToBattery(x))", "score": 0}
{"id": "eqasc_train_10500", "prediction": "all x y.((Electricity(x) & Wire(y) & TouchesBattery(y,x)) -> Flows(x))", "score": 0}
{"id": "eqasc_train_10501", "prediction": "all x y.((CompletesCircuit(x) & Circuit(y)) -> CausesElectronsToFlow(x,y))", "score": 0}
{"id": "eqasc_train_10502", "prediction": "all x.((ElectricCurrent(x) & Flowing(x)) -> ProducesPower(x))", "score": 0}
{"id": "eqasc_train_10503", "prediction": "all x y.((Circuit(x) & Completed(y)) -> ProducesPower(x,y))", "score": 0}
{"id": "eqasc_train_10504", "prediction": "all x y.((Current(x) & Circuit(y)) -> Follows(x,y))", "score": 0}
{"id": "eqasc_train_10505", "prediction": "all x.(Electricity(x) -> GivesOpenerShock(x))", "score": 0}
{"id": "eqasc_train_10506", "prediction": "all x y.((CompletedCircuit(x) & Person(y)) -> CanGiveShock(y,x))", "score": 0}
{"id": "eqasc_train_10507", "prediction": "all x.((Animal(x) & MakesContactWithFence(x)) -> CircuitComplete(x))", "score": 0}
{"id": "eqasc_train_10508", "prediction": "all x y.((Animal(x) & ElectricFence(y) & Contacts(x,y)) -> AllowsElectricityFlow(x,y))", "score": 0}
{"id": "eqasc_train_10509", "prediction": "all x y.((Consumer(x) & Food(y)) -> (TakesInByEatingProducers(x,y) | TakesInByLivingThings(x,y)))", "score": 0}
{"id": "eqasc_train_10510", "prediction": "all x.(Herbivore(x) -> (EatProducers(x) & FirstOrderConsumer(x)))", "score": 0}
{"id": "eqasc_train_10511", "prediction": "all x.(Herbivore(x) -> (EatsProducers(x) | EatsLivingThings(x)))", "score": 0}
{"id": "eqasc_train_10512", "prediction": "all x.(Producer(x) -> GainsInSurplus(x))", "score": 0}
{"id": "eqasc_train_10513", "prediction": "all x y.((Consumer(x) & Food(y) & GainsSurplus(x,y)) -> TakesIn(x,y))", "score": 0}
{"id": "eqasc_train_10514", "prediction": "all x.(Human(x) -> ConsumerInFoodWebs(x))", "score": 0}
{"id": "eqasc_train_10515", "prediction": "all x y.((Human(x) & (EatingProducer(y) | LivingThing(y))) -> TakesInFood(x,y))", "score": 0}
{"id": "eqasc_train_10516", "prediction": "all x y.((Decomposer(x) & Producer(y)) -> ProducesNutrients(x,y))", "score": 0}
{"id": "eqasc_train_10517", "prediction": "all x y.((Decomposer(x) & Organism(y)) -> (MakesNutrients(x,y) & FoodForConsumers(x)))", "score": 0}
{"id": "eqasc_train_10518", "prediction": "all x.(FoodFoodPoisoning(x) -> Avoidable(x))", "score": 0}
{"id": "eqasc_train_10519", "prediction": "all x.((Consumer(x) & -Eats(x)) -> AvoidsPoisoning(x))", "score": 0}
{"id": "eqasc_train_10520", "prediction": "all x.(Scavenger(x) -> (Consumer(x) & WaitsForPreyToDie(x)))", "score": 0}
{"id": "eqasc_train_10521", "prediction": "all x y.((Scavenger(x) & Prey(y)) -> TakesInFoodByEating(x,y))", "score": 0}
{"id": "eqasc_train_10522", "prediction": "all x.(Animal(x) -> Consumer(x))", "score": 0}
{"id": "eqasc_train_10523", "prediction": "all x y.((Animal(x) & (EatsProducers(x) | EatsLivingThings(x))) -> TakesInFood(x,y))", "score": 0}
{"id": "eqasc_train_10524", "prediction": "all x.(Animal(x) -> (Consumer(x) | FeedsOnPrimaryProducers(x) | FeedsOnOtherConsumers(x)))", "score": 0}
{"id": "eqasc_train_10525", "prediction": "all x y z.((Animal(x) & Food(y) & Producor(z)) -> TakesInByEatingOrLivingThing(x,y,z))", "score": 0}
{"id": "eqasc_train_10526", "prediction": "all x y z.((Consumer(x) & Food(y) & Plant(z)) -> TakesInByEating(x,y,z))", "score": 0}
{"id": "eqasc_train_10527", "prediction": "all x.(InformedConsumer(x) -> HealthyConsumer(x))", "score": 0}
{"id": "eqasc_train_10528", "prediction": "all x.((Healthy(x) & Informed(x)) -> CanTakeInFood(x))", "score": 0}
{"id": "eqasc_train_10529", "prediction": "all x.(Predator(x) -> (Consumer(x) & Catch(x) & Eat(x) & ForFood(x)))", "score": 0}
{"id": "eqasc_train_10530", "prediction": "all x y z.((Predator(x) & LivingThing(y) & Food(z)) -> (CatchAndEat(x,y) & Food(z)))", "score": 0}
{"id": "eqasc_train_10531", "prediction": "all x.(Bat(x) -> NaturalInsectConsumer(x))", "score": 0}
{"id": "eqasc_train_10532", "prediction": "all x.(Bat(x) -> (TakesInFood(x) & (EatsProducers(x) | EatsLivingThings(x))))", "score": 0}
{"id": "eqasc_train_10533", "prediction": "all x.(Neuron(x) -> (StructuralUnit(x) & FunctionalUnit(x) & NervousSystem(x)))", "score": 0}
{"id": "eqasc_train_10534", "prediction": "all x.(Alcohol(x) -> InterferesWithCentralNervousSystem(x))", "score": 0}
{"id": "eqasc_train_10535", "prediction": "all x y.((Alcohol(x) & Neuron(y)) -> InterferesWith(x,y))", "score": 0}
{"id": "eqasc_train_10536", "prediction": "all x.((Learning(x) | Behavior(x)) -> NervousSystemFunction(x))", "score": 0}
{"id": "eqasc_train_10537", "prediction": "all x.(Neuron(x) -> (StructuralUnit(x) & FunctionalUnit(x) & LearningUnit(x) & BehaviorUnit(x)))", "score": 0}
{"id": "eqasc_train_10538", "prediction": "all x.(Excitotoxicity(x) -> KillsNeurons(x))", "score": 0}
{"id": "eqasc_train_10539", "prediction": "all x y.((Excitotoxicity(x) & NervousSystem(y)) -> KillsStructuralUnits(x,y))", "score": 0}
{"id": "eqasc_train_10540", "prediction": "all x.(GlialCell(x) -> PerformsCriticalFunctionsInNervousSystem(x))", "score": 0}
{"id": "eqasc_train_10541", "prediction": "all x.(Neuron(x) -> (StructuralUnit(x) & FunctionalUnit(x) & WhereGlialCellsPerformCriticalFunctions(x)))", "score": 0}
{"id": "eqasc_train_10542", "prediction": "all x y.((Connection(x) & Neuron(y)) | Connection(x,y)) -> (Neuron(y) | Axon(y)))", "score": -1}
{"id": "eqasc_train_10543", "prediction": "all x y.((Axon(x) & NervousSystem(y)) -> ConnectedToStructuralUnitsAndFunctionalUnits(x,y))", "score": 0}
{"id": "eqasc_train_10544", "prediction": "all x.(Botulism(x) -> AffectsNervousSystem(x))", "score": 0}
{"id": "eqasc_train_10545", "prediction": "all x.(Botulism(x) -> AffectsNeurons(x))", "score": 0}
{"id": "eqasc_train_10546", "prediction": "all x y.((Botulism(x) & Neuron(y)) -> Affects(x,y))", "score": 0}
{"id": "eqasc_train_10547", "prediction": "all x.(Alcohol(x) -> DepressesNervousSystem(x))", "score": 0}
{"id": "eqasc_train_10548", "prediction": "all x y.((Alcohol(x) & Neuron(y)) -> Depresses(x,y))", "score": 0}
{"id": "eqasc_train_10549", "prediction": "all x y.((Rock(x) & Rock(y) & LongPeriod(x)) -> Smooth(y))", "score": 0}
{"id": "eqasc_train_10550", "prediction": "(DecentArtOfRocks(Salt,Quarz) & Basalt(Basalt,Salt))", "score": 0}
{"id": "eqasc_train_10551", "prediction": "all x y.((Quarz(x) & Quartz(y) & LongPeriodsOfTime(x)) -> Smooth(y))", "score": 0}
{"id": "eqasc_train_10552", "prediction": "all x.(PrimaryRockType(x) -> (Sandstone(x) | Shale(x)))", "score": 0}
{"id": "eqasc_train_10553", "prediction": "all x y.((Shale(x) & Shale(y) & LongPeriodsOfTime(x)) -> SmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothSmoothS", "score": -1}
{"id": "eqasc_train_10554", "prediction": "all x.((Rock(x) & Smoothed(x) & Grooved(x) & Polished(x)) -> GlacialErosion(x))", "score": 0}
{"id": "eqasc_train_10555", "prediction": "all x y.((Rock(x) & Rock(y)) -> Erosion(x,y))", "score": 0}
{"id": "eqasc_train_10556", "prediction": "all x.(Granite(x) -> CommonRockInContinents(x))", "score": 0}
{"id": "eqasc_train_10557", "prediction": "all x y.((Granite(x) & Granite(y) & LongPeriodsOfTime(x)) -> Smooth(y))", "score": 0}
{"id": "eqasc_train_10558", "prediction": "all x.(Rock(x) -> SolidMineralDeposit(x))", "score": 0}
{"id": "eqasc_train_10559", "prediction": "all x y z.((Contact(x) & SolidMineralDeposit(y) & LongPeriod(z) & Contact(x,y,z)) -> Smooth(y))", "score": 0}
{"id": "eqasc_train_10560", "prediction": "all x.(Limestone(x) -> StrongRock(x))", "score": 0}
{"id": "eqasc_train_10561", "prediction": "all x y.((Limestone(x) & Limestone(y)) -> CausesSmoothCrop(x,y))", "score": 0}
{"id": "eqasc_train_10562", "prediction": "all x.(Granite(x) -> FormedByFire(x))", "score": 0}
{"id": "eqasc_train_10563", "prediction": "all x.((Contact(x) & LongPeriodsOfTime(x)) -> Smooth(x))", "score": 0}
{"id": "eqasc_train_10564", "prediction": "all x.((Sandstone(x) | Shale(x) | Limestone(x)) -> SedimentaryRock(x))", "score": 0}
{"id": "eqasc_train_10565", "prediction": "all x y.((Shale(x) & Shale(y) & LongPeriodsOfTime(x)) -> Smooth(x))", "score": 0}
{"id": "eqasc_train_10566", "prediction": "all x.((Rock(x) & BigWaveAction(x)) -> Smooth(x))", "score": 0}
{"id": "eqasc_train_10567", "prediction": "all x y.((WaveAction(x) & Rock(y)) -> CausesContactOverTime(x,y))", "score": 0}
{"id": "eqasc_train_10568", "prediction": "all x.((Rock(x) & OnStreambed(x)) -> (Subrounded(x) & FairlySmooth(x)))", "score": 0}
{"id": "eqasc_train_10569", "prediction": "all x.((Rock(x) & Contact(x,y) & LongPeriod(y)) -> Subrounded(x))", "score": 0}
{"id": "eqasc_train_10570", "prediction": "all x y.((Waves(x) & Rock(y)) -> CausesContact(x,y))", "score": 0}
{"id": "eqasc_train_10571", "prediction": "all x.(Gravity(x) -> (ExertsForces(x) & CausesFrictionInRocksAndIce(x)))", "score": 0}
{"id": "eqasc_train_10572", "prediction": "all x.((FrictionDueToGravity(x) & CausesSmoothing(x)) -> CausesSmoothing(x))", "score": 0}
{"id": "eqasc_train_10573", "prediction": "(all x.((LooseRocks(x) & PerilousFooting(x)) -> Slippery(x)) & all y.((SmoothMarblelikeStones(y)) -> Slippery(y)))", "score": 0}
{"id": "eqasc_train_10574", "prediction": "all x y.((Rock(x) & Rock(y) & LongPeriodContact(x,y)) -> Slippery(x))", "score": 0}
{"id": "eqasc_train_10575", "prediction": "all x.(MetamorphicRock(x) -> (FormedByAlterationOfPreexistingRocks(x) & DeepInEarth(x)))", "score": 0}
{"id": "eqasc_train_10576", "prediction": "all x y.((Object(x) & Object(y) & FormedDeepInEarth(x,y)) -> SmoothSmoothContact(x,y))", "score": 0}
{"id": "eqasc_train_10577", "prediction": "all x.(Lion(x) -> LivesInSocialGroup(x))", "score": 0}
{"id": "eqasc_train_10578", "prediction": "all x.(Lion(x) -> LivesInAfrica(x))", "score": 0}
{"id": "eqasc_train_10579", "prediction": "exists x.(SocialGroup(x) & Pride(x) & InAfrica(x))", "score": 0}
{"id": "eqasc_train_10580", "prediction": "all x.(Lion(x) -> (HuntsTogether(x) & ProvidesFoodForPride(x)))", "score": 0}
{"id": "eqasc_train_10581", "prediction": "all x.(Lion(x) -> (LivesInGroups(x) & HuntsTogetherForFood(x)))", "score": 0}
{"id": "eqasc_train_10582", "prediction": "all x y.((Lion(x) & Pride(y)) -> HuntsIn(x,y))", "score": 0}
{"id": "eqasc_train_10583", "prediction": "all x.(Lion(x) -> (SocialGroup(x) & Hunts(x)))", "score": 0}
{"id": "eqasc_train_10584", "prediction": "all x.(Lion(x) -> (PackAnimal(x) & HasPride(x,20)))", "score": 0}
{"id": "eqasc_train_10585", "prediction": "all x.(Lion(x) -> (LivesInSocialGroups(x,y) & UpToZwant(y)))", "score": 0}
{"id": "eqasc_train_10586", "prediction": "all x.(SocialCohesion(x) -> (SocialSupport(x) | InformalNeighborhoodGroups(x) | CommunityHelpGroups(x)))", "score": 0}
{"id": "eqasc_train_10587", "prediction": "all x.(Lion(x) -> LivesInSupportiveCommunities(x))", "score": 0}
{"id": "eqasc_train_10588", "prediction": "all x.(Leo(x) -> Lion(x))", "score": 0}
{"id": "eqasc_train_10589", "prediction": "all x.(LeoSymbol(x) -> LivesInSocialGroups(x))", "score": 0}
{"id": "eqasc_train_10590", "prediction": "all x.(Chimanzee(x) -> LivesInSocialGroups(x))", "score": 0}
{"id": "eqasc_train_10591", "prediction": "all x.(Lion(x) -> LivesInPride(x))", "score": 0}
{"id": "eqasc_train_10592", "prediction": "all x y.((Lion(x) & SocialGroup(y)) -> HuntsFor(x,y))", "score": 0}
{"id": "eqasc_train_10593", "prediction": "all x.(LionHeart(x) -> HasThreeLions(x))", "score": 0}
{"id": "eqasc_train_10594", "prediction": "all x.(Shield(x) -> HasPrideOn(x))", "score": 0}
{"id": "eqasc_train_10595", "prediction": "all x y.((HabitatDestruction(x) & Animal(y)) -> MovesToFindShelterInAnotherHabitat(y))", "score": 0}
{"id": "eqasc_train_10596", "prediction": "all x y.((HabitatDestruction(x) & Cow(y)) -> MovesToFindShelterInAnotherHabitat(y,x))", "score": 0}
{"id": "eqasc_train_10597", "prediction": "(Also known as HabitatDestruction(a) & UrbanSpread(b))", "score": -1}
{"id": "eqasc_train_10598", "prediction": "all x y z.((UrbanSpread(x) & Animal(y) & Habitat(z)) -> (CausesMovement(x,y,z) & FindsShelterInAnotherHabitat(y,z)))", "score": 0}
{"id": "eqasc_train_10599", "prediction": "all x.((HabitatDestruction(x) & HumanInteraction(x)) -> Problem(x))", "score": 0}
{"id": "eqasc_train_10600", "prediction": "all x y z.((HumanInteraction(x) & Animal(y) & Habitat(z)) -> CausesMovementToFindShelter(x,y,z))", "score": 0}
{"id": "eqasc_train_10601", "prediction": "all x.(CreatureComfort(x) -> (Habitat(x) & AnimalHome(x)))", "score": 0}
{"id": "eqasc_train_10602", "prediction": "all x y.((Animal(x) & Animal(y)) -> DestructionOfHome(x,y))", "score": 0}
{"id": "eqasc_train_10603", "prediction": "all x.(Mammal(x) -> Animal(x))", "score": 0}
{"id": "eqasc_train_10604", "prediction": "all x y.((Mammal(x) & Habitat(y) & Destructed(x,y)) -> MovesToFindShelter(x,y))", "score": 0}
{"id": "eqasc_train_10605", "prediction": "all x.((HabitatDestruction(x) & Logging(x)) -> MajorPreoccupation(x))", "score": 0}
{"id": "eqasc_train_10606", "prediction": "all x y.((Logging(x) & Animal(y)) -> MovesToFindShelter(x,y))", "score": 0}
{"id": "eqasc_train_10607", "prediction": "all x.(Wildfire(x) -> (ProtectsHomes(x) & DestroysWildlifeHabitat(x)))", "score": 0}
{"id": "eqasc_train_10608", "prediction": "all x y z.((Wildfire(x) & Animal(y) & Shelter(z)) -> CausesMovement(x,y,z))", "score": 0}
{"id": "eqasc_train_10609", "prediction": "all x.(HumanPopulationGrowth(x) -> (ResultedInHabitatDestruction(x) & CausedMassiveExtinctions(x)))", "score": 0}
{"id": "eqasc_train_10610", "prediction": "all x y.((HumanPopulationGrowth(x) & Animal(y)) -> (FindsShelterInAnotherHabitat(y) & Habitat(z) & HumanPopulationGrowth(x,y)))", "score": 0}
{"id": "eqasc_train_10611", "prediction": "all x.((Industry(x) & MajorCauseOfDestructionOfHabitat(x)) -> MajorCauseOfDestructionOfHabitat(x))", "score": 0}
{"id": "eqasc_train_10612", "prediction": "all x y.((Animal(x) & Industry(y)) -> CausesMovement(x,y))", "score": 0}
{"id": "eqasc_train_10613", "prediction": "all x y.((AquariumHabitat(x) & OceanHabitat(y)) -> VeryDifferent(x,y))", "score": 0}
{"id": "eqasc_train_10614", "prediction": "all x y.((OceanDestruction(x) & Animal(y)) -> (CausesMovement(y,x) & FindShelter(y,x)))", "score": 0}
{"id": "eqasc_train_10615", "prediction": "all x.(Species(x) -> ThreatenedByDestructionOfNaturalHabitat(x))", "score": 0}
{"id": "eqasc_train_10616", "prediction": "all x.(Species(x) -> MovesToFindShelterInAnotherHabitat(x))", "score": 0}
{"id": "eqasc_train_10617", "prediction": "all x.(Tree(x) -> (HasWoodyStems(x) & CoveredWithBark(x)))", "score": 2}
{"id": "eqasc_train_10618", "prediction": "all x.((Stripping(x) & ProtectiveLayerOfInnerBark(x)) -> Removed(x))", "score": 0}
{"id": "eqasc_train_10619", "prediction": "all x.(Tree(x) -> (HasWoodyStems(x) & ProtectiveLayer(x)))", "score": 0}
{"id": "eqasc_train_10620", "prediction": "all x.((Bark(x) & MatureTree(x)) -> (RunsSixTo12InchesThick(x) & InsulatesAgainstFireDamage(x)))", "score": 0}
{"id": "eqasc_train_10621", "prediction": "all x.(Tree(x) -> (HasWoodyStems(x) & Insulates(x)))", "score": 0}
{"id": "eqasc_train_10622", "prediction": "all x.(ElmTree(x) -> GrowsInAmerica(x))", "score": 0}
{"id": "eqasc_train_10623", "prediction": "all x.(Elm(x) -> (HasWoodyStems(x) & CoveredWithBark(x)))", "score": 1}
{"id": "eqasc_train_10624", "prediction": "all x.(Outside(x) -> (ProtectiveSkinOfBark(x) & MadeOfCork(x)))", "score": 0}
{"id": "eqasc_train_10625", "prediction": "all x.(Tree(x) -> (HasWoodyStems(x) & CoveredWithProtectiveSkin(x)))", "score": 0}
{"id": "eqasc_train_10626", "prediction": "all x.((Stem(x) & Plant(x)) -> (IncludesTrunks(x) | IncludesBranches(x)))", "score": 0}
{"id": "eqasc_train_10627", "prediction": "all x.(Tree(x) -> (HasWoodyTrunk(x) & CoveredWithBark(x)))", "score": 0}
{"id": "eqasc_train_10628", "prediction": "all x.(Pine(x) -> PopularTree(x))", "score": 0}
{"id": "eqasc_train_10629", "prediction": "all x.(Pine(x) -> (HasWoodyStems(x) & CoveredWithBark(x)))", "score": 0}
{"id": "eqasc_train_10630", "prediction": "all x.(OrangeTree(x) -> EvergreenTree(x))", "score": 0}
{"id": "eqasc_train_10631", "prediction": "all x.(Evergreen(x) -> HasWoodyStems(x))", "score": 0}
{"id": "eqasc_train_10632", "prediction": "all x.(CinnamonStick(x) -> TreeBark(x))", "score": 0}
{"id": "eqasc_train_10633", "prediction": "all x.(WoodyStem(x) -> (CoveredByMaterial(x) & MadeByCinnamonSticks(x)))", "score": 0}
{"id": "eqasc_train_10634", "prediction": "all x.(Oak(x) -> (HasWoodyStems(x) & CoveredWithBark(x)))", "score": 1}
{"id": "eqasc_train_10635", "prediction": "all x.(Elm(x) -> Tree(x))", "score": 1}
{"id": "eqasc_train_10636", "prediction": "all x.((Animal(x) & RequiresWarmBodyTemperature(x)) -> Survival(x))", "score": 0}
{"id": "eqasc_train_10637", "prediction": "all x.(Squirrel(x) -> (HuntsInWarmPlace(x) & SleepsInWarmPlace(x)))", "score": 0}
{"id": "eqasc_train_10638", "prediction": "all x.((Animal(x) & RequiresHiding(x) & RequiresSleeping(x)) -> Survival(x))", "score": 0}
{"id": "eqasc_train_10639", "prediction": "all x.(WarmBloodedAnimal(x) -> ConstantBodyTemperature(x))", "score": 0}
{"id": "eqasc_train_10640", "prediction": "all x.((Animal(x) & RequiresConstantBodyTemperature(x)) -> Survival(x))", "score": 0}
{"id": "eqasc_train_10641", "prediction": "all x.(Survival(x) -> SurvivalOfSpecies(x))", "score": 0}
{"id": "eqasc_train_10642", "prediction": "all x y.((WakeBodyTemperature(x) & Species(y)) -> HelpsThrive(x,y))", "score": 0}
{"id": "eqasc_train_10643", "prediction": "all x.((WarmBloodedCreature(x) & ControlsBodyTemperature(x) & (Sweeping(x) | Panting(x))) -> Survival(x))", "score": 0}
{"id": "eqasc_train_10644", "prediction": "all x.(Cow(x) -> (RequiresWarmBodyTemperature(x) & ForSurvival(x)))", "score": 0}
{"id": "eqasc_train_10645", "prediction": "all x.(Temperature(x) -> MeasuresHeat(x))", "score": 0}
{"id": "eqasc_train_10646", "prediction": "all x.((Animal(x) & WarmBodyHeatMeasurement(x)) -> Survival(x))", "score": 0}
{"id": "eqasc_train_10647", "prediction": "all x.(Fur(x) -> HelpsMaintainBodyTemperature(x))", "score": 0}
{"id": "eqasc_train_10648", "prediction": "all x.(Mammal(x) -> WarmBlooded(x))", "score": 0}
{"id": "eqasc_train_10649", "prediction": "all x.(Mammal(x) -> RequiresWarmBodyTemperature(x))", "score": 0}
{"id": "eqasc_train_10650", "prediction": "all x.(Dormancy(x) -> (Adaptation(x) & ImprovesSurvivalChances(x) & WarmTemperaturesReturn(x)))", "score": 0}
{"id": "eqasc_train_10651", "prediction": "all x.(Animal(x) -> UsesDormancyToImproveSurvivalChances(x))", "score": 0}
{"id": "eqasc_train_10652", "prediction": "all x.(Animal(x) -> RequiresWaterRegularly(x))", "score": 0}
{"id": "eqasc_train_10653", "prediction": "all x.(WarmBodyTemperature(x) -> RequiresWater(x))", "score": 0}
{"id": "eqasc_train_10654", "prediction": "all x y.((Lake(x) & Pond(y)) -> (Bigger(x) & Deeper(x)))", "score": 0}
{"id": "eqasc_train_10655", "prediction": "exists x.(EcologyWork(x) & BestWork(x) & SmallFreshWaterPool(x))", "score": 0}
{"id": "eqasc_train_10656", "prediction": "all x y.((Lake(x) & SmallFreshWaterEcosystem(y)) -> (Bigger(x) & Deeper(x) & SmallFreshWaterEcosystem(x)))", "score": 0}
{"id": "eqasc_train_10657", "prediction": "exists x.(LakeTrunk(x) & FoundIn(x,y))", "score": 0}
{"id": "eqasc_train_10658", "prediction": "all x y.((Trout(x) & Pond(y)) -> (LargerWater(x,y) & DeeperWater(x,y)))", "score": 0}
{"id": "eqasc_train_10659", "prediction": "all x.(Frog(x) -> (StartsInPools(x) & StartsInPuddles(x)))", "score": 0}
{"id": "eqasc_train_10660", "prediction": "all x y.((Lake(x) & Frog(y)) -> (Bigger(x) & Deeper(x) & StartsOutLife(y)))", "score": 0}
{"id": "eqasc_train_10661", "prediction": "all x.((Lake(x) & LakeSupply(x) & HasBayesAndTributaries(x)) -> BigLake(x))", "score": 0}
{"id": "eqasc_train_10662", "prediction": "all x y.((Area(x) & Bay(y) & Tributary(y)) -> (Bigger(x,y) & Deeper(x,y)))", "score": 0}
{"id": "eqasc_train_10663", "prediction": "all x.(LakeTruffleSeason(x) -> (OpensInLakeHuron(x) & OpensInLakeMichigan(x) & -OpensInRefuges(x)))", "score": 0}
{"id": "eqasc_train_10664", "prediction": "all x y.((Trout(x) & Pond(y)) -> (Larger(x,y) & Deeper(x,y)))", "score": 0}
{"id": "eqasc_train_10665", "prediction": "all x.((Scotland(x) & LochNess(x)) -> GlacialLake(x))", "score": 0}
{"id": "eqasc_train_10666", "prediction": "all x y.((Loch(x) & Pond(y)) -> (Bigger(x) & Deeper(x,y)))", "score": 0}
{"id": "eqasc_train_10667", "prediction": "all x.((LakeTrout(x) & Loonhaunt(x) & Pipestone(x)) -> GoodFishing(x))", "score": 0}
{"id": "eqasc_train_10668", "prediction": "all x y.((Loonhaunt(x) & Pond(y)) -> (Larger(x,y) & Deeper(x,y)))", "score": 0}
{"id": "eqasc_train_10669", "prediction": "all x.(Fishing(x) -> PossibleInFreshWaterPool(x))", "score": 0}
{"id": "eqasc_train_10670", "prediction": "all x.(Lake(x) -> FreshWater(x))", "score": 0}
{"id": "eqasc_train_10671", "prediction": "all x.(Lake(x) -> Reservoir(x))", "score": 0}
{"id": "eqasc_train_10672", "prediction": "all x y.((Reservoir(x) & Pond(y)) -> (Bigger(x,y) & Deeper(x,y)))", "score": 0}
{"id": "eqasc_train_10673", "prediction": "all x y.((Condensing(x) & Liquid(y)) -> CausesToForm(x,y))", "score": 0}
{"id": "eqasc_train_10674", "prediction": "all x.((Liquid(x) & (Oil(x) | Water(x))) -> Liquid(x))", "score": 0}
{"id": "eqasc_train_10675", "prediction": "all x.(Condensing(x) -> CausesWaterToForm(x))", "score": 0}
{"id": "eqasc_train_10676", "prediction": "all x.(Liquid(x) -> (Pour(x) & Flow(x)))", "score": 0}
{"id": "eqasc_train_10677", "prediction": "all x.(Condensing(x) -> (Forms(x) & Pours(x) & Flows(x)))", "score": 0}
{"id": "eqasc_train_10678", "prediction": "all x.(Vapor(x) -> (Cooled(x) & CondensedIntoLiquid(x)))", "score": 0}
{"id": "eqasc_train_10679", "prediction": "all x y.((Vapor(x) & Liquid(y)) -> FormsInto(x,y))", "score": 0}
{"id": "eqasc_train_10680", "prediction": "all x.(Condensation(x) -> OppositeOfEvaporation(x))", "score": 0}
{"id": "eqasc_train_10681", "prediction": "all x y.((Evaporation(x) & Liquid(y)) -> CausesOppositeOf(x,y))", "score": 0}
{"id": "eqasc_train_10682", "prediction": "all x.(Condensing(x) -> CausesWaterToForm(x))", "score": 0}
{"id": "eqasc_train_10683", "prediction": "all x y.((Condensation(x) & Gas(y)) -> Alters(x,y))", "score": 0}
{"id": "eqasc_train_10684", "prediction": "all x y z.((Water(x) & Air(y) & Liquid(z)) -> FormsInto(x,y,z))", "score": 0}
{"id": "eqasc_train_10685", "prediction": "all x.(Water(x) -> (Liquid(x) & Formless(x)))", "score": 0}
{"id": "eqasc_train_10686", "prediction": "all x.(Air(x) -> (CarriesMoisture(x) & CanCondense(x)))", "score": 0}
{"id": "eqasc_train_10687", "prediction": "all x y.((Air(x) & Moisture(y)) -> Carries(x,y))", "score": 0}
{"id": "eqasc_train_10688", "prediction": "all x y.((Friction(x) & Object(y)) -> IncreasesTemperature(x,y))", "score": 0}
{"id": "eqasc_train_10689", "prediction": "all x y.((Fire(x) & Home(y)) -> IncreasesTemperature(x,y))", "score": 0}
{"id": "eqasc_train_10690", "prediction": "all x y.((Friction(x) & Home(y) & Temperature(y)) -> CausesFiresToBreakOut(x,y))", "score": 0}
{"id": "eqasc_train_10691", "prediction": "all x y.((Bearing(x) & Friction(y)) -> CausesIncreaseInTemperature(x,y))", "score": 0}
{"id": "eqasc_train_10692", "prediction": "all x.((Bearing(x) & Friction(x)) -> HigherTemperature(x))", "score": 0}
{"id": "eqasc_train_10693", "prediction": "all x y.((Friction(x) & Impact(y)) -> (ChronicImpact(x) & AcuteFriction(y)))", "score": 0}
{"id": "eqasc_train_10694", "prediction": "all x y.((ChronicImpact(x) & Object(y)) -> CausesTemperatureToIncrease(x,y))", "score": 0}
{"id": "eqasc_train_10695", "prediction": "all x y.((Pressure(x) & Object(y)) -> IncreasesTemperature(x,y))", "score": 0}
{"id": "eqasc_train_10696", "prediction": "all x.(AstrogardenObject(x) -> Toy(x))", "score": 0}
{"id": "eqasc_train_10697", "prediction": "all x y.((Toy(x) & Friction(y)) -> IncreasesTemperature(y,x))", "score": 0}
{"id": "eqasc_train_10698", "prediction": "all x.(Brake(x) -> (Works(x) & FrictionActsAgainstSlip(x)))", "score": 0}
{"id": "eqasc_train_10699", "prediction": "all x y.((Bremsing(x) & Object(y)) -> CausesTemperatureToIncrease(x,y))", "score": 0}
{"id": "eqasc_train_10700", "prediction": "all x y.((Friction(x) & Object(y)) -> CausesHeatToIncrease(x,y))", "score": 0}
{"id": "eqasc_train_10701", "prediction": "all x.((Movement(x) & -Movement(x)) -> Zero(x))", "score": 0}
{"id": "eqasc_train_10702", "prediction": "all x y.((Movement(x) & Object(y)) -> CausesTemperatureToIncrease(x,y))", "score": 0}
{"id": "eqasc_train_10703", "prediction": "all x y.((Object(x) & Object(y)) -> RubbingOn(x,y))", "score": 0}
{"id": "eqasc_train_10704", "prediction": "all x y z.((Rrubbing(x) & Object(y) & Object(z)) -> CausesTemperatureToIncrease(x,y,z))", "score": 0}
{"id": "eqasc_train_10705", "prediction": "all x.((Bearing(x) & Friction(x)) -> HeatsUp(x))", "score": 0}
{"id": "eqasc_train_10706", "prediction": "all x y.((Pressure(x) & Object(y)) -> CausesTemperatureToIncrease(x,y))", "score": 0}
{"id": "eqasc_train_10707", "prediction": "all x.(Microorganism(x) -> CausesInfection(x))", "score": 0}
{"id": "eqasc_train_10708", "prediction": "all x.(Leeches(x) -> (CleansAwayDeadOrInfectedTissue(x)))", "score": 0}
{"id": "eqasc_train_10709", "prediction": "all x.(Microorganism(x) -> CausesDeadTissue(x))", "score": 0}
{"id": "eqasc_train_10710", "prediction": "all x y.((Infection(x) & InfectedMouse(y)) -> SpreadsBy(x,y))", "score": 0}
{"id": "eqasc_train_10711", "prediction": "all x y.((Mouse(x) & Microorganism(y)) -> CanSpread(x,y))", "score": 0}
{"id": "eqasc_train_10712", "prediction": "all x.(Infection(x) -> RequiresMedicalTreatment(x))", "score": 0}
{"id": "eqasc_train_10713", "prediction": "all x y.((Human(x) & Microorganism(y)) -> CanRequireMedicalTreatment(x,y))", "score": 0}
{"id": "eqasc_train_10714", "prediction": "all x y.((Microorganism(x) & Food(y)) -> AssociatedWith(x,y))", "score": 0}
{"id": "eqasc_train_10715", "prediction": "all x.(Food(x) -> CanCauseInfections(x))", "score": 0}
{"id": "eqasc_train_10716", "prediction": "all x.(Infection(x) -> RawWound(x))", "score": 0}
{"id": "eqasc_train_10717", "prediction": "all x y.((Microorganism(x) & RawWound(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_train_10718", "prediction": "all x.(Infection(x) -> CausesRangeOfIllnesses(x))", "score": 0}
{"id": "eqasc_train_10719", "prediction": "all x.(Microorganism(x) -> CausesRangeOfIllnesses(x))", "score": 0}
{"id": "eqasc_train_10720", "prediction": "all x y.((Infection(x) & Limb(y)) -> TreatedWithAntibiotics(x,y))", "score": 0}
{"id": "eqasc_train_10721", "prediction": "all x.((Illness(x) & CausedByMicroorganisms(x)) -> CanBeTreatedWithAntibiotics(x))", "score": 0}
{"id": "eqasc_train_10722", "prediction": "all x.(Moisture(x) -> MicroorganismsGrow(x))", "score": 0}
{"id": "eqasc_train_10723", "prediction": "all x.(Moisture(x) -> CausesInfectionsToGrow(x))", "score": 0}
{"id": "eqasc_train_10724", "prediction": "all x.(Bacteria(x) -> CanCauseInfections(x))", "score": 0}
{"id": "eqasc_train_10725", "prediction": "all x.(Microorganism(x) -> CausesDeath(x))", "score": 0}
{"id": "eqasc_train_10726", "prediction": "all x y.((Chlorination(x) & LiquidChlorineBleath(y)) -> KillsMicroorganisms(x,y))", "score": 0}
{"id": "eqasc_train_10727", "prediction": "all x.((ChlorineInWater(x) & PreventsInfections(x)) -> PreventsInfections(x))", "score": 0}
{"id": "eqasc_train_10728", "prediction": "all x.(CancerGene(x) -> CanBeHeritaged(x))", "score": 0}
{"id": "eqasc_train_10729", "prediction": "all x.(InheritedCharacteristics(x) -> PassedOnByGenes(x))", "score": 0}
{"id": "eqasc_train_10730", "prediction": "all x.(CancerGene(x) -> PassedOnThroughReproduction(x))", "score": 0}
{"id": "eqasc_train_10731", "prediction": "All x.(BRCA2(x) -> ResponsibleForOverHalfOfInheritedBreakCancerous(x))", "score": -1}
{"id": "eqasc_train_10732", "prediction": "all x.(BCRA2(x) -> (Gene(x) & ResponsibleForBreastCancers(x)))", "score": 0}
{"id": "eqasc_train_10733", "prediction": "all x.(Inheritance(x) -> PassedThroughMale(x))", "score": 0}
{"id": "eqasc_train_10734", "prediction": "all x.(CancerGenes(x) -> (PassedDownThroughMale(x) & Male(x)))", "score": 0}
{"id": "eqasc_train_10735", "prediction": "all x.(OralCancer(x) -> CanBeLethal(x))", "score": 0}
{"id": "eqasc_train_10736", "prediction": "all x.(LethalGene(x) -> CanBeHeritaged(x))", "score": 0}
{"id": "eqasc_train_10737", "prediction": "all x.(GeneticDisease(x) -> (Disease(x) & Erased(x)))", "score": 0}
{"id": "eqasc_train_10738", "prediction": "all x.(CancerGene(x) -> Genetic(x))", "score": 0}
{"id": "eqasc_train_10739", "prediction": "all x y.((Child(x) & Parent(y)) -> HebesFrom(x,y))", "score": 0}
{"id": "eqasc_train_10740", "prediction": "all x.(CancerGene(x) -> PassedOnByParents(x))", "score": 0}
{"id": "eqasc_train_10741", "prediction": "all x.(Cancer(x) -> -Leukemia(x))", "score": 0}
{"id": "eqasc_train_10742", "prediction": "all x.(Leukemia(x) -> CanBeHeritaged(x))", "score": 0}
{"id": "eqasc_train_10743", "prediction": "all x.((ErasedMutation(x) & MistakeInGene(x)) -> Gene(x))", "score": 0}
{"id": "eqasc_train_10744", "prediction": "exists x.(Gene(x) & Mutated(x))", "score": 0}
{"id": "eqasc_train_10745", "prediction": "all x.(CancerGene(x) -> CanBeMistakeInGene(x))", "score": 0}
{"id": "eqasc_train_10746", "prediction": "all x.(ProstateCancer(x) -> Carcinoma(x))", "score": 0}
{"id": "eqasc_train_10747", "prediction": "all x.(CarcinomaGene(x) -> CanBeHeritaged(x))", "score": 0}
{"id": "eqasc_train_10748", "prediction": "all x.(BreastCancer(x) -> Kills(x))", "score": 0}
{"id": "eqasc_train_10749", "prediction": "all x.(EmbeddingGenes(x) -> CanKillGenes(x))", "score": 0}
{"id": "eqasc_train_10750", "prediction": "all x.(Death(x) -> (CanBeEarned(x) & DeathCanBeEarned(x)))", "score": 0}
{"id": "eqasc_train_10751", "prediction": "all x y.((Gene(x) & Parent(y)) -> ErasedFrom(x,y))", "score": 0}
{"id": "eqasc_train_10752", "prediction": "all x y.((Cancer(x) & Parent(y)) -> DependsOn(x,y))", "score": 0}
{"id": "eqasc_train_10753", "prediction": "all x.((InheritedMutation(x) & inheritedAfflictions(x)) -> RadiationInducible(x))", "score": 0}
{"id": "eqasc_train_10754", "prediction": "all x.(CancerGene(x) -> RadiationInducible(x))", "score": 0}
{"id": "eqasc_train_10755", "prediction": "all x y.((Friction(x) & Object(y)) -> SpeedDecrease(x,y))", "score": 0}
{"id": "eqasc_train_10756", "prediction": "all x.(Friction(x) -> DependantOnTexture(x))", "score": 0}
{"id": "eqasc_train_10757", "prediction": "all x y.((Texture(x) & Surface(y)) -> SpeedDecrease(x,y))", "score": 0}
{"id": "eqasc_train_10758", "prediction": "all x.(Friction(x) -> OpposesMotion(x))", "score": 0}
{"id": "eqasc_train_10759", "prediction": "all x y.((Force(x) & OpposesMotion(x)) -> SpeedDecrease(y))", "score": 0}
{"id": "eqasc_train_10760", "prediction": "all x y.((Force(x) & RequiresOpposingMotion(x)) -> SpeedDecrease(y))", "score": 0}
{"id": "eqasc_train_10761", "prediction": "all x.((Friction(x) & EnergyLoss(x)) -> Remains(x))", "score": 0}
{"id": "eqasc_train_10762", "prediction": "all x y.((Object(x) & Speed(y) & Decreases(y)) -> EnergyLoss(x,y))", "score": 0}
{"id": "eqasc_train_10763", "prediction": "all x.(Friction(x) -> CreatesHeat(x))", "score": 0}
{"id": "eqasc_train_10764", "prediction": "all x.(DecreasingSpeed(x) -> CreatesHeat(x))", "score": 0}
{"id": "eqasc_train_10765", "prediction": "all x.((AirFriction(x) & SpeedIncrease(x)) -> RapidlyLarger(x))", "score": 0}
{"id": "eqasc_train_10766", "prediction": "all x y.((Object(x) & RateOfTravel(x) & IncreasesExplicitionalDrag(x)) -> IncreasesExplicitionalDrag(y))", "score": 0}
{"id": "eqasc_train_10767", "prediction": "all x y.((Pressure(x) & Object(y)) -> SlowsSpeed(x,y))", "score": 0}
{"id": "eqasc_train_10768", "prediction": "all x.((Friction(x) & BrakeLinen(x)) -> CausesHeat(x))", "score": 0}
{"id": "eqasc_train_10769", "prediction": "all x y z.((Car(x) & Brake(y) & Slowing(x,y) & Brake(z)) -> Generates(x,y))", "score": 0}
{"id": "eqasc_train_10770", "prediction": "all x.((AppliesBrakes(x) & SlowsToDesiredSpeed(x)) -> GetsOffBrakes(x))", "score": 0}
{"id": "eqasc_train_10771", "prediction": "all x.(Brakes(x) -> CausesFriction(x))", "score": 0}
{"id": "eqasc_train_10772", "prediction": "all x.(Fungus(x) -> CanDecomposeWood(x))", "score": 0}
{"id": "eqasc_train_10773", "prediction": "all x.(Wood(x) -> (UsedForPulp(x) & UsedForLumber(x)))", "score": 0}
{"id": "eqasc_train_10774", "prediction": "all x.(Fungus(x) -> (Organism(x) & CanDecomposeLumber(x)))", "score": 0}
{"id": "eqasc_train_10775", "prediction": "all x.(WoodProduct(x) -> (RapidDecomposition(x) & Biodegradable(x)))", "score": 0}
{"id": "eqasc_train_10776", "prediction": "all x.(Fungus(x) -> (Organism(x) & DecomposesBiodegradableProducts(x)))", "score": 0}
{"id": "eqasc_train_10777", "prediction": "all x.(BeechWood(x) -> (RichHabitat(x) & ForFungi(x)))", "score": 0}
{"id": "eqasc_train_10778", "prediction": "all x.(Fungus(x) -> (Organism(x) & CanDecomposeBeech(x)))", "score": 0}
{"id": "eqasc_train_10779", "prediction": "all x.(Bow(x) -> (Wood(x) & WoodBreaks(x)))", "score": 0}
{"id": "eqasc_train_10780", "prediction": "all x.(Fungus(x) -> CanDecomposeBows(x))", "score": 0}
{"id": "eqasc_train_10781", "prediction": "all x y.((Wood(x) & Tree(y)) -> (MadeFrom(x,y) & UsedInManyDifferentWeavers(x)))", "score": 0}
{"id": "eqasc_train_10782", "prediction": "all x y.((Fungus(x) & Tree(y)) -> CanDecompose(x,y))", "score": 0}
{"id": "eqasc_train_10783", "prediction": "NitrogenDeficiency (DecomposesWood) -> RequiresNitrogen(Wood))", "score": -1}
{"id": "eqasc_train_10784", "prediction": "all x.(Fungus(x) -> RequiresNitrogen(x))", "score": 0}
{"id": "eqasc_train_10785", "prediction": "all x.(Fungus(x) -> (CanDecomposePineTrees(x) & OnlyOrganism(x)))", "score": 0}
{"id": "eqasc_train_10786", "prediction": "all x y.((Yeast(x) & Mold(y)) -> (DecomposesWood(x) & DecomposesWood(y)))", "score": 0}
{"id": "eqasc_train_10787", "prediction": "all x y.((Mold(x) & Wood(y)) -> Decomposes(x,y))", "score": 0}
{"id": "eqasc_train_10788", "prediction": "all x.(Wood(x) -> ComesFromTrees(x))", "score": 0}
{"id": "eqasc_train_10789", "prediction": "all x.(Fungus(x) -> CanDecomposeDeadTrees(x))", "score": 0}
{"id": "eqasc_train_10790", "prediction": "all x.(Mushroom(x) -> Fungus(x))", "score": 0}
{"id": "eqasc_train_10791", "prediction": "all x y.((Mushroom(x) & Wood(y)) -> Decomposes(x,y))", "score": 0}
{"id": "eqasc_train_10792", "prediction": "all x.(Mutations(x) -> EssentialForEvolution(x))", "score": 1}
{"id": "eqasc_train_10793", "prediction": "all x y.((Organism(x) & GeneticInformation(y)) -> EssentialForEvolution(x,y))", "score": 0}
{"id": "eqasc_train_10794", "prediction": "all x.(Mutations(x) -> AllowsNaturalSelection(x))", "score": 0}
{"id": "eqasc_train_10795", "prediction": "all x y.((Gene(x) & Gene(y)) -> EssentialForEvolution(x,y))", "score": 0}
{"id": "eqasc_train_10796", "prediction": "all x y.((GenomicEvolution(x) & TranslationalSystem(y)) -> DrivesEvolution(x,y))", "score": 0}
{"id": "eqasc_train_10797", "prediction": "all x.(Mutation(x) -> (EssentialForGenetics(x) & DrivesTranslationalSystem(x)))", "score": 0}
{"id": "eqasc_train_10798", "prediction": "all x.((DNASequenceChange(x) & EssentialForEvolution(x)) -> EssentialForEvolution(x))", "score": 0}
{"id": "eqasc_train_10799", "prediction": "all x.(Evolution(x) -> ConstantProgress(x))", "score": 0}
{"id": "eqasc_train_10800", "prediction": "all x.(Mutations(x) -> (ContinuousProgress(x) & EssentialForProgress(x)))", "score": 0}
{"id": "eqasc_train_10801", "prediction": "all x y.((Gene(x) & Gene(y)) -> EssentialForEvolution(x,y))", "score": 0}
{"id": "eqasc_train_10802", "prediction": "exists x.(Gene(x) & (Altered(x) | Mutated(x)))", "score": 0}
{"id": "eqasc_train_10803", "prediction": "all x y.((Gene(x) & Evolution(y)) -> AlteredFor(x,y))", "score": 0}
{"id": "eqasc_train_10804", "prediction": "all x.(Mutations(x) -> ChangesInGeneticMaterial(x))", "score": 0}
{"id": "eqasc_train_10805", "prediction": "all x.((GeneticMaterialChange(x) & EssentialForEvolution(x)) -> EssentialForEvolution(x))", "score": 0}
{"id": "eqasc_train_10806", "prediction": "Evolution Evolution means change over time.", "score": -1}
{"id": "eqasc_train_10807", "prediction": "all x.(Mutations(x) -> EssentialForChange(x))", "score": 0}
{"id": "eqasc_train_10808", "prediction": "all x.(EvolutionChange(x) -> ThroughTime(x))", "score": 0}
{"id": "eqasc_train_10809", "prediction": "all x.(Mutations(x) -> EssentialForChange(x))", "score": 0}
{"id": "eqasc_train_10810", "prediction": "all x.(Evolution(x) -> CausesSpeciesChange(x))", "score": 0}
{"id": "eqasc_train_10811", "prediction": "all x y.((Species(x) & Mutation(y)) -> RequiresForSpeciesToChangeOverTime(x,y))", "score": 0}
{"id": "eqasc_train_10812", "prediction": "all x.(Evolution(x) -> StrongerMembers(x))", "score": 0}
{"id": "eqasc_train_10813", "prediction": "all x y.((Mutation(x) & Species(y)) -> HelpsGrowStronger(x,y))", "score": 0}
{"id": "eqasc_train_10814", "prediction": "all x.(Mutations(x) -> ChangesInDNAInformation(x))", "score": 0}
{"id": "eqasc_train_10815", "prediction": "all x.((DNAInformationChange(x) & EssentialForEvolution(x)) -> EssentialForEvolution(x))", "score": 0}
{"id": "eqasc_train_10816", "prediction": "exists x.(Occurs(x) & Happens(x))", "score": 0}
{"id": "eqasc_train_10817", "prediction": "all x.(Mutations(x) -> EssentialForEvolution(x))", "score": 1}
{"id": "eqasc_train_10818", "prediction": "all x y.((Virus(x) & Gene(y)) -> CausesMutation(x,y))", "score": 0}
{"id": "eqasc_train_10819", "prediction": "all x.(Virus(x) -> CausesEvolution(x))", "score": 0}
{"id": "eqasc_train_10820", "prediction": "all x.((Mutation(x) & SomaticCell(x)) -> SomaticMutation(x))", "score": 0}
{"id": "eqasc_train_10821", "prediction": "all x.(SomaticCell(x) -> PerformsEvolution(x))", "score": 0}
{"id": "eqasc_train_10822", "prediction": "all x.(Reptile(x) -> (TetrapodVertebrate(x) & ProducesAmnioticEggs(x)))", "score": 5}
{"id": "eqasc_train_10823", "prediction": "all x.(Reptile(x) -> (ProducesEggsWithWaterproofShell(x) & FullOfAmnioticFluid(x)))", "score": 2}
{"id": "eqasc_train_10824", "prediction": "all x.(Reptile(x) -> (TetrapodVertebrate(x) & ProducesEggsWithWaterproofShell(x)))", "score": 2}
{"id": "eqasc_train_10825", "prediction": "all x.(Snake(x) -> ColdBloodedReptile(x))", "score": 0}
{"id": "eqasc_train_10826", "prediction": "all x.(Snake(x) -> ProducesAmnioticEggs(x))", "score": 0}
{"id": "eqasc_train_10827", "prediction": "all x.((Animal(x) & LaysShelledEggs(x)) -> Amniote(x))", "score": 0}
{"id": "eqasc_train_10828", "prediction": "all x.(Reptile(x) -> (TetrapodVertebrate(x) & LaysShelledEggs(x)))", "score": 0}
{"id": "eqasc_train_10829", "prediction": "all x.(Frog(x) -> Reptile(x))", "score": 1}
{"id": "eqasc_train_10830", "prediction": "all x.(Frog(x) -> ProducesAmnioticEggs(x))", "score": 1}
{"id": "eqasc_train_10831", "prediction": "all x.(Lizard(x) -> ProducesAmnioticEggs(x))", "score": 1}
{"id": "eqasc_train_10832", "prediction": "all x.((Animal(x) & Reptilia(x)) -> (TetrapodVertebrate(x) & ProducesAmnioticEggs(x)))", "score": 0}
{"id": "eqasc_train_10833", "prediction": "all x.(Amniote(x) -> (Reptile(x) | Bird(x) | Mammal(x)))", "score": 0}
{"id": "eqasc_train_10834", "prediction": "all x.(Bird(x) -> HasAmnioticEggs(x))", "score": 0}
{"id": "eqasc_train_10835", "prediction": "all x.(Lizard(x) -> (TetrapodVertebrate(x) & ProducesAmnioticEggs(x)))", "score": 1}
{"id": "eqasc_train_10836", "prediction": "all x.(Reptile(x) -> (Tetrapod(x) | 4LeggedAnimal(x)))", "score": 0}
{"id": "eqasc_train_10837", "prediction": "all x.(Reptile(x) -> (ClassOf4LeggedAnimals(x) & ProducesAmnioticEggs(x)))", "score": 0}
{"id": "eqasc_train_10838", "prediction": "all x.(Crocodile(x) -> (TetrapodVertebrate(x) & MakesAmnioticEggs(x)))", "score": 0}
{"id": "eqasc_train_10839", "prediction": "all x.(Reptile(x) -> Amniote(x))", "score": 0}
{"id": "eqasc_train_10840", "prediction": "all x.(SexualReproduction(x) -> IncreasesGeneticDiversity(x))", "score": 0}
{"id": "eqasc_train_10841", "prediction": "all x.(Diversity(x) -> VastGeneticPotential(x))", "score": 0}
{"id": "eqasc_train_10842", "prediction": "all x.(SexualReproduction(x) -> IncreasesGeneticPotential(x))", "score": 0}
{"id": "eqasc_train_10843", "prediction": "all x.(Mammal(x) -> (Dioecious(x) & SexualReproduction(x) & InternalFertilization(x)))", "score": 0}
{"id": "eqasc_train_10844", "prediction": "all x.((Mammal(x) & Do(x)) -> IncreasesGeneticDiversity(x))", "score": 0}
{"id": "eqasc_train_10845", "prediction": "all x.((GeneticDiversity(x) & EvolutionContinues(x)) -> Increases(x))", "score": 0}
{"id": "eqasc_train_10846", "prediction": "all x.(SexualReproduction(x) -> AllowsEvolution(x))", "score": 0}
{"id": "eqasc_train_10847", "prediction": "all x.(SexualReproduction(x) -> CreatesEvolution(x))", "score": 0}
{"id": "eqasc_train_10848", "prediction": "all x.(SexualReproduction(x) -> IncreasesBiodiversity(x))", "score": 0}
{"id": "eqasc_train_10849", "prediction": "all x.(Creature(x) -> ProcreatesThroughSexualReproduction(x))", "score": 0}
{"id": "eqasc_train_10850", "prediction": "all x.(Procreation(x) -> IncreasesGeneticDiversity(x))", "score": 0}
{"id": "eqasc_train_10851", "prediction": "all x.(SexualReproduction(x) -> EnablesEvolution(x))", "score": 0}
{"id": "eqasc_train_10852", "prediction": "all x.(SexualReproduction(x) -> Evolution(x))", "score": 0}
{"id": "eqasc_train_10853", "prediction": "all x.(SexualReproduction(x) -> (CombinesEgg(x) & CombinesSpore(x)))", "score": 0}
{"id": "eqasc_train_10854", "prediction": "all x y.((Egg(x) & Sperm(y) & Combines(x,y)) -> IncreasesGeneticDiversity(x))", "score": 0}
{"id": "eqasc_train_10855", "prediction": "all x y.((SexualReproduction(x) & Gene(y)) -> GeneMaterialExchange(x,y))", "score": 0}
{"id": "eqasc_train_10856", "prediction": "all x.(GeneticDiversity(x) -> (GeneticMaterialExchange(x) & Reproduction(x)))", "score": 0}
{"id": "eqasc_train_10857", "prediction": "all x y.((Earth(x) & TiltOnRotatingAxis(x,y)) -> CausesSeasonsToChange(x,y))", "score": 0}
{"id": "eqasc_train_10858", "prediction": "all x.((Season(x) & (WetWeather(x) | ColdWeatherClothing(x))) -> Essential(x))", "score": 0}
{"id": "eqasc_train_10859", "prediction": "all x.(TiltOnRotatingAxis(x) -> (CausesWetWeather(x) & CausesColdWeather(x)))", "score": 0}
{"id": "eqasc_train_10860", "prediction": "all x y.((Earth(x) & EarthTiltOnRotatingAxis(x,y)) -> CausesWinter(x))", "score": 0}
{"id": "eqasc_train_10861", "prediction": "all x.(Winter(x) -> SpecialSeason(x))", "score": 0}
{"id": "eqasc_train_10862", "prediction": "all x.(Tilt(x) -> CausesWinter(x))", "score": 0}
{"id": "eqasc_train_10863", "prediction": "all x.(Season(x) -> (Fall(x) | Winter(x) | Spring(x)))", "score": 0}
{"id": "eqasc_train_10864", "prediction": "all x.(TiltOnRotatingAxis(x) -> (CausesChange(x,fall) | CausesChange(x,winter) | CausesChange(x,spring)))", "score": 0}
{"id": "eqasc_train_10865", "prediction": "all x y.((Earth(x) & EarthTiltOnRotatingAxis(x,y)) -> CausesTemperatureChange(x))", "score": 0}
{"id": "eqasc_train_10866", "prediction": "all x.((Object(x) & Spins(x)) -> RotationalMotion(x))", "score": 0}
{"id": "eqasc_train_10867", "prediction": "all x.((Earth(x) & TiltOnSpinningAxis(x)) -> SeasonChange(x))", "score": 0}
{"id": "eqasc_train_10868", "prediction": "all x.(Weather(x) -> ChangesRapidly(x))", "score": 0}
{"id": "eqasc_train_10869", "prediction": "all x.((Earth(x) & TiltOnRotatingAxis(x)) -> RapidWeatherChanges(x))", "score": 0}
{"id": "eqasc_train_10870", "prediction": "all x y.((Season(x) & Fall(y) & Winter(y)) -> ChangesFromTo(x,y))", "score": 0}
{"id": "eqasc_train_10871", "prediction": "all x y.((Earth(x) & EarthTiltOnRotatingAxis(x,y)) -> CausesFallToChangeToWinter(x,y))", "score": 0}
{"id": "eqasc_train_10872", "prediction": "(TransitionalSeason(Spring) & TransitionalSeason(Fall))", "score": 0}
{"id": "eqasc_train_10873", "prediction": "all x.((Earth(x) & TiltOnRotatingAxis(x)) -> (TransitionalSpring(x) | TransitionalFall(x)))", "score": 0}
{"id": "eqasc_train_10874", "prediction": "all x y.((Sun(x) & Earth(y) & Tilt(x,y)) -> StrongestNearEquator(x))", "score": 0}
{"id": "eqasc_train_10875", "prediction": "all x y z.((Sun(x) & SunsRain(y) & Equilibrium(z)) -> StrongestNearEquator(x,y,z))", "score": 0}
{"id": "eqasc_train_10876", "prediction": "all x.((Winter(x) & Summer(x)) -> SlowerSeason(x))", "score": 0}
{"id": "eqasc_train_10877", "prediction": "all x y.((Earth(x) & EarthTiltOnRotatingAxis(x,y)) -> (Causes(x,y) & Causes(x,z)))", "score": 0}
{"id": "eqasc_train_10878", "prediction": "all x.(Autumn(x) -> BringsChangeOfSeasons(x))", "score": 0}
{"id": "eqasc_train_10879", "prediction": "all x y.((Earth(x) & EarthTiltOnRotatingAxis(x,y)) -> CausesAutumn(x,y))", "score": 0}
{"id": "eqasc_train_10880", "prediction": "all x y.((Earth(x) & TiltOnRotatingAxis(x,y)) -> CausesWeatherChanges(x))", "score": 0}
{"id": "eqasc_train_10881", "prediction": "all x y.((Earth(x) & EarthTiltOnRotatingAxis(x,y)) -> CausesDaylightToChange(x))", "score": 0}
{"id": "eqasc_train_10882", "prediction": "all x y.((Season(x) & Earth(y)) -> (MotionAroundSun(x,y) & TiltOfAxis(x,y)))", "score": 0}
{"id": "eqasc_train_10883", "prediction": "all x y.((Season(x) & Tilt(y)) -> SeasonChange(x,y))", "score": 0}
{"id": "eqasc_train_10884", "prediction": "all x.(Habitat(x) -> ChangesWithSeasons(x))", "score": 0}
{"id": "eqasc_train_10885", "prediction": "all x.((Earth(x) & TipOnAxis(x)) -> CausesHabitatChange(x))", "score": 0}
{"id": "eqasc_train_10886", "prediction": "all x.(Specialization(x) -> (CompetingSpeciesEvolveDifferentAdaptations(x)))", "score": 0}
{"id": "eqasc_train_10887", "prediction": "all x.(MynahBird(x) -> CompetingSpeciesForNestHoles(x))", "score": 0}
{"id": "eqasc_train_10888", "prediction": "all x.(MynahBird(x) -> UndergoesSpecializationToCompeteForNestHoles(x))", "score": 0}
{"id": "eqasc_train_10889", "prediction": "all x y.((Specialization(x) & CompetingSpecies(y) & EvolveToChangeWithEnvironment(y,x)) -> SpecializationOccurs(x))", "score": 0}
{"id": "eqasc_train_10890", "prediction": "all x.(Species(x) -> (HighlySpecializedForEnvironment(x) & EvolvesAsEnvironmentsChange(x)))", "score": 0}
{"id": "eqasc_train_10891", "prediction": "all x y.((Specialization(x) & CompetingCreatures(y) & EnvironmentChange(y)) -> EvolvesAsEnvironmentsChange(x,y))", "score": 0}
{"id": "eqasc_train_10892", "prediction": "all x.(Specialization(x) -> (DecreasesMortality(x,12) & IncreasesSurvival(x,13)))", "score": 0}
{"id": "eqasc_train_10893", "prediction": "all x y.((Adaptation(x) & Evolution(y)) -> IncreasesSurvival(x,y))", "score": 0}
{"id": "eqasc_train_10894", "prediction": "all x y.((Animal(x) & Plant(y)) -> (EvolvesTogether(x,y) & AdaptsToEnvironmentalConditions(x)))", "score": 0}
{"id": "eqasc_train_10895", "prediction": "all x y z.((Animal(x) & Plant(y) & Environment(z) & Species(x,y)) -> ExpandsToEnvironmentalConditions(x,y,z))", "score": 0}
{"id": "eqasc_train_10896", "prediction": "all x.(Beak(x) -> (ShowsVariation(x) & ShowsSpecialization(x)))", "score": 0}
{"id": "eqasc_train_10897", "prediction": "all x.(BeakVariation(x) -> (CompetingSpecies(x) & DifferentAdaptations(x)))", "score": 0}
{"id": "eqasc_train_10898", "prediction": "all x.(InstructionalTechnique(x) -> AdaptedToAccommodateDifferences(x))", "score": 0}
{"id": "eqasc_train_10899", "prediction": "all x y.((Specialization(x) & CompetingSpecies(y) & DevelopedTechniques(x,y)) -> AccommodatesDifferences(x,y))", "score": 0}
{"id": "eqasc_train_10900", "prediction": "all x.((Species(x) & (Mammal(x) | Bird(x))) -> SpecializedDiet(x))", "score": 0}
{"id": "eqasc_train_10901", "prediction": "all x.(Diet(x) -> Adaptation(x))", "score": 0}
{"id": "eqasc_train_10902", "prediction": "all x.(Animal(x) -> (HasSpecialCharacteristics(x) & HasPhysicalFeatures(x) & HelpsSurvive(x)))", "score": 0}
{"id": "eqasc_train_10903", "prediction": "all x y.((Species(x) & Competition(y)) -> HelpsSurvive(x,y))", "score": 0}
{"id": "eqasc_train_10904", "prediction": "all x.(Animal(x) -> AdaptedForConditions(x))", "score": 0}
{"id": "eqasc_train_10905", "prediction": "all x y.((Species(x) & CompetingSpecies(y) & ConditionsWhereLive(y)) -> SpecializationOccurs(x))", "score": 0}
{"id": "eqasc_train_10906", "prediction": "all x.(Specialization(x) -> NaturalSelection(x))", "score": 0}
{"id": "eqasc_train_10907", "prediction": "all x y.((Species(x) & GeneticVariation(y)) -> (EnablesAdaptation(x,y) & EnablesEvolvement(x,y)))", "score": 0}
{"id": "eqasc_train_10908", "prediction": "all x y.((Specialization(x) & GeneticVariation(y) & EnablesSpeciesToAdapt(x,y)) -> SpecializationOccurs(x))", "score": 0}
{"id": "eqasc_train_10909", "prediction": "all x.(Species(x) -> InterbreedingIndividuals(x))", "score": 0}
{"id": "eqasc_train_10910", "prediction": "all x.(Specialization(x) -> (CompetingGroupsOfInterbreedingIndividualsEvolveDifferentAdaptations(x)))", "score": 0}
{"id": "eqasc_train_10911", "prediction": "all x y.((HeatingSaltWater(x) & Salt(y)) -> (CausesWaterToEvaporate(x) & SaltRemains(y)))", "score": 0}
{"id": "eqasc_train_10912", "prediction": "all x.(FlashEvaporator(x) -> (MadeFreshWaterFromSaltWater(x) & Uses(x,y)))", "score": 0}
{"id": "eqasc_train_10913", "prediction": "all x.(HeatingSaltWater(x) -> WaterBecomesFreshWater(x))", "score": 0}
{"id": "eqasc_train_10914", "prediction": "all x y.((SaltWater(x) & SaltWater(y)) -> (IncreasesTemperature(x,y) & CausesWaterToEvaporate(x) & SaltRemains(y)))", "score": 0}
{"id": "eqasc_train_10915", "prediction": "all x y.((Steam(x) & PotOfBoilingWater(y) & RisesFrom(x,y)) -> WaterEvaporated(x))", "score": 0}
{"id": "eqasc_train_10916", "prediction": "all x y.((BoilingSaltWater(x) & SaltWater(y)) -> TurnsIntoSteam(x,y))", "score": 0}
{"id": "eqasc_train_10917", "prediction": "-(FillingsEvaporated(x) & Steaming(x))", "score": 0}
{"id": "eqasc_train_10918", "prediction": "all x y.((HeatingSaltWater(x) & Salt(y)) -> (CausesWaterToSteam(x,y) & SaltRemains(y)))", "score": 0}
{"id": "eqasc_train_10919", "prediction": "all x.((HighHeat(x) & BringToBoil(x)) -> BringToBoil(x))", "score": 0}
{"id": "eqasc_train_10920", "prediction": "all x y.((BoilingSaltWater(x) & Salt(y)) -> (WaterEvaporates(x) & SaltLeaves(x,y)))", "score": 0}
{"id": "eqasc_train_10921", "prediction": "all x.(Evaporation(x) -> (ChangeOfState(x) & FromLiquidToGas(x)))", "score": 0}
{"id": "eqasc_train_10922", "prediction": "all x y.((HeatingSaltWater(x) & Salt(y)) -> (CausesWaterToChangeIntoGas(x,y) & SaltRemainsSalt(y)))", "score": 0}
{"id": "eqasc_train_10923", "prediction": "all x.(Ocean(x) -> ContainsSaltWater(x))", "score": 0}
{"id": "eqasc_train_10924", "prediction": "all x y.((HeatingOcean(x) & Ocean(y)) -> (EvaporatesH2O(x) & NaClRemains(x)))", "score": 0}
{"id": "eqasc_train_10925", "prediction": "all x y.((HeatingSaltyWater(x) & Solvent(y)) -> (CausesEvaporation(x,y) & SoluteRemains(y)))", "score": 0}
{"id": "eqasc_train_10926", "prediction": "all x y.((Water(x) & Evaporation(y)) -> LeavesSaltOnSurface(x,y))", "score": 0}
{"id": "eqasc_train_10927", "prediction": "all x y.((HeatingSaltWater(x) & Salt(y)) -> LeavesOnSurface(x,y))", "score": 0}
{"id": "eqasc_train_10928", "prediction": "all x.(Salt(x) -> ProducedByEvaporationOfSeaWater(x))", "score": 0}
{"id": "eqasc_train_10929", "prediction": "all x.(Salt(x) -> (ProducedByHeatingWater(x) & ProducedByHeatingWater(x)))", "score": 0}
{"id": "eqasc_train_10930", "prediction": "all x.(EarthsWater(x) -> SaltySeawater(x))", "score": 0}
{"id": "eqasc_train_10931", "prediction": "all x y.((HeatingSeawater(x) & Seawater(y)) -> (CausesEvaporation(x,y) & SaltRemains(y)))", "score": 0}
{"id": "eqasc_train_10932", "prediction": "all x.((WaterEvaporates(x) & SaltsInWater(x)) -> (Remain(x) & MoreConcentrated(x)))", "score": 0}
{"id": "eqasc_train_10933", "prediction": "all x.((WaterEvaporates(x) & HigherConcentrationOfSalts(x)) -> LeftAtConcentration(x))", "score": 0}
{"id": "eqasc_train_10934", "prediction": "all x y z.((Fire(x) & ChemicalEnergy(y) & Light(z) & Heat(z)) -> ConvertsTo(x,y,z))", "score": 0}
{"id": "eqasc_train_10935", "prediction": "all x.(Fire(x) -> (ChemicalReaction(x) & (RapidOxidation(x) | RapidBurning(x))))", "score": 0}
{"id": "eqasc_train_10936", "prediction": "all x.((ChemicalReaction(x) & RapidOxidation(x)) -> ConvertsChemicalEnergyToLightAndHeatEnergy(x))", "score": 0}
{"id": "eqasc_train_10937", "prediction": "all x.(OnMatch(x) -> LightsFire(x))", "score": 0}
{"id": "eqasc_train_10938", "prediction": "all x.(Match(x) -> (ConvertsChemicalEnergy(x) & LightEnergy(x) & HeatEnergy(x)))", "score": 0}
{"id": "eqasc_train_10939", "prediction": "all x.(Fire(x) -> NeedsFuelToBurn(x))", "score": 0}
{"id": "eqasc_train_10940", "prediction": "all x y.((BurningFuel(x) & ChemicalCnergy(y)) -> ConvertsToLightAndHeatEnergy(x,y))", "score": 0}
{"id": "eqasc_train_10941", "prediction": "all x.(Fuel(x) -> ChemicalEnergy(x))", "score": 0}
{"id": "eqasc_train_10942", "prediction": "all x.(Fuel(x) -> (ConvertsIntoLight(x) & ConvertsIntoHeat(x)))", "score": 0}
{"id": "eqasc_train_10943", "prediction": "all x y.((Fire(x) & Energy(y)) -> ConvertsTo(x,y))", "score": 0}
{"id": "eqasc_train_10944", "prediction": "all x.(Fire(x) -> (NaturalEnergySource(x) & ProvidesHeat(x) & ProvidesLight(x) & ProvidesEnergy(x)))", "score": 1}
{"id": "eqasc_train_10945", "prediction": "all x.(Fire(x) -> ProvidesLight(x))", "score": 1}
{"id": "eqasc_train_10946", "prediction": "all x.(Fire(x) -> (LargeUncontrolledFlame(x) & Contains(x,y)))", "score": 0}
{"id": "eqasc_train_10947", "prediction": "all x y z.((Flame(x) & ChemicalEnergy(y) & Light(z)) -> ConvertsToHeat(x,y,z))", "score": 0}
{"id": "eqasc_train_10948", "prediction": "all x.(Fuel(x) -> HasChemicalEnergy(x))", "score": 0}
{"id": "eqasc_train_10949", "prediction": "all x y z.((Fire(x) & Fuel(y) & Light(z)) -> ConvertsToHeatEnergy(x,y,z))", "score": 0}
{"id": "eqasc_train_10950", "prediction": "(all x.(InfraredEnergy(x) -> Heat(x)))", "score": 0}
{"id": "eqasc_train_10951", "prediction": "all x y z.((Fire(x) & ChemicalEnergy(y) & Earth(z)) -> ConvertsToLightAndWarmth(x,y,z))", "score": 0}
{"id": "eqasc_train_10952", "prediction": "all x.(Intensity(x) -> HeatEnergyReleasedByFire(x))", "score": 0}
{"id": "eqasc_train_10953", "prediction": "all x.(Intensity(x) -> (AmountOfChemicalEnergy(x) & ReleasedByFire(x)))", "score": 0}
{"id": "eqasc_train_10954", "prediction": "all x.(Wood(x) -> HelpsFireBurn(x))", "score": 0}
{"id": "eqasc_train_10955", "prediction": "all x y.((BoilingWood(x) & ChemicalEnergy(y)) -> ConvertsToLightAndHeatEnergy(x,y))", "score": 0}
{"id": "eqasc_train_10956", "prediction": "all x.((FuelBurns(x) & ChemicalEnergy(x)) -> ThermalEnergy(x))", "score": 0}
{"id": "eqasc_train_10957", "prediction": "all x y.((Fire(x) & Fuel(y) & IgnitedWith(x,y)) -> (ConvertsEnergyToLight(x) & ConvertsEnergyToHeat(x)))", "score": 0}
{"id": "eqasc_train_10958", "prediction": "all x.((BeechWoodFire(x) & BurnsBrightAndClear(x)) -> KeepsLogsAnnumerary(x))", "score": 0}
{"id": "eqasc_train_10959", "prediction": "all x y.((BurningBeechWood(x) & ChemicalEnergy(y)) -> ConvertsToBrightLight(x,y))", "score": 0}
{"id": "eqasc_train_10960", "prediction": "all x y z.((Flame(x) & ChemicalEnergy(y) & Light(z)) -> ConvertsToHeat(x,y,z))", "score": 0}
{"id": "eqasc_train_10961", "prediction": "all x y.((Fire(x) & Fuel(y)) -> ConvertsToLightAndHeatEnergy(x,y))", "score": 0}
{"id": "eqasc_train_10962", "prediction": "all x.(Chordate(x) -> (CompleteDigestiveSystem(x) & ClosedCirculatorySystem(x)))", "score": 4}
{"id": "eqasc_train_10963", "prediction": "all x.(Fish(x) -> ClosedCirculatorySystem(x))", "score": 0}
{"id": "eqasc_train_10964", "prediction": "all x.(Acordate(x) -> HasJaws(x))", "score": 0}
{"id": "eqasc_train_10965", "prediction": "all x.((Animal(x) & HasJaws(x)) -> (CompleteDigestiveSystem(x) & ClosedCirculatorySystem(x)))", "score": 0}
{"id": "eqasc_train_10966", "prediction": "all x.(Reptile(x) -> (CompleteDigestiveSystem(x) & ClosedCirculatorySystem(x)))", "score": 1}
{"id": "eqasc_train_10967", "prediction": "all x y.((Vertebrates(x) & Chordates(y)) -> MemberOf(x,y))", "score": 0}
{"id": "eqasc_train_10968", "prediction": "all x.(Vertebrates(x) -> (CompleteDigestiveSystem(x) & ClosedCirculatorySystem(x)))", "score": 0}
{"id": "eqasc_train_10969", "prediction": "all x.(Reptile(x) -> (CompleteDigestiveSystem(x) & ClosedCirculatorySystem(x)))", "score": 1}
{"id": "eqasc_train_10970", "prediction": "all x.(Vertebrate(x) -> (CompleteDigestiveSystem(x) & ClosedCirculatorySystem(x)))", "score": 0}
{"id": "eqasc_train_10971", "prediction": "all x.(Reptile(x) -> (ClosedCirculatorySystem(x) & Reptile(x)))", "score": 1}
{"id": "eqasc_train_10972", "prediction": "all x.(Lizard(x) -> (CompleteDigestiveSystem(x) & ClosedCirculatorySystem(x)))", "score": 0}
{"id": "eqasc_train_10973", "prediction": "all x.(Reptile(x) -> (CompleteDigestiveSystem(x) & ClosedCirculatorySystem(x)))", "score": 1}
{"id": "eqasc_train_10974", "prediction": "all x.(Candleate(x) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_train_10975", "prediction": "all x.(Vertebrates(x) -> (CompleteDigestiveSystem(x) & ClosedCirculatorySystem(x)))", "score": 0}
{"id": "eqasc_train_10976", "prediction": "all x.(Cdractate(x) -> ElongatedBody(x))", "score": 0}
{"id": "eqasc_train_10977", "prediction": "all x.(Human(x) -> (ElongatedBody(x) & BilaterallySymmetric(x) & CompleteDigestiveSystem(x)))", "score": 0}
{"id": "eqasc_train_10978", "prediction": "all x.(Vertebrates(x) -> ClosedCirculatorySystem(x))", "score": 0}
{"id": "eqasc_train_10979", "prediction": "all x.(Chordate(x) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_train_10980", "prediction": "all x.(Shock(x) -> DisruptionOfCirculatorySystem(x))", "score": 0}
{"id": "eqasc_train_10981", "prediction": "all x.(Chordate(x) -> CanExperienceShock(x))", "score": 0}
{"id": "eqasc_train_10982", "prediction": "all x y.((Flower(x) & Fruit(y)) -> (AttractsPollinators(x) & EncouragesAnimalsToDisperseSeeds(y)))", "score": 0}
{"id": "eqasc_train_10983", "prediction": "all x y.((SweetFruit(x) & Apple(y)) -> (EatenByAnimals(x) & DispersesUnderigestedSeeds(x)))", "score": 0}
{"id": "eqasc_train_10984", "prediction": "all x y.((Flower(x) & Animal(y) & EatsApples(x) & DispersesUnigestedSeeds(x)) -> AttractsPollinators(x,y))", "score": 0}
{"id": "eqasc_train_10985", "prediction": "all x y.((Flower(x) & Insect(y)) -> Attracts(x,y))", "score": 0}
{"id": "eqasc_train_10986", "prediction": "all x.(Bat(x) -> (HelpsFlowers(x) & SpreadsPollen(x)))", "score": 0}
{"id": "eqasc_train_10987", "prediction": "all x.(Bat(x) -> SpreadsSeeds(x))", "score": 0}
{"id": "eqasc_train_10988", "prediction": "all x.(Flower(x) -> AttractsInsects(x))", "score": 0}
{"id": "eqasc_train_10989", "prediction": "all x.((Plant(x) & UsesWind(x)) -> -AttractiveFlowersRequired(x))", "score": 0}
{"id": "eqasc_train_10990", "prediction": "all x y.((Flower(x) & Hummingbird(y)) -> Attracts(x,y))", "score": 0}
{"id": "eqasc_train_10991", "prediction": "all x.(Soil(x) -> FormedByWeathering(x))", "score": 0}
{"id": "eqasc_train_10992", "prediction": "all x.(Soil(x) -> FormedByBreakingDownOfRocks(x))", "score": 0}
{"id": "eqasc_train_10993", "prediction": "all x.(Rock(x) -> BreaksDownHelpsSoilForm(x))", "score": 0}
{"id": "eqasc_train_10994", "prediction": "all x.(Soil(x) -> (WeatheringRocks(x) & Erosion(x)))", "score": 0}
{"id": "eqasc_train_10995", "prediction": "all x.(Soil(x) -> (MadeFromRocks(x) & Eroding(x)))", "score": 0}
{"id": "eqasc_train_10996", "prediction": "all x y.((PhysicalWeathering(x) & Rock(y)) -> BreaksIntoSmallerPieces(x,y))", "score": 0}
{"id": "eqasc_train_10997", "prediction": "all x.(Soil(x) -> (BreaksRockIntoSmallerPieces(x) & BreaksRockIntoSmallerPieces(x)))", "score": 0}
{"id": "eqasc_train_10998", "prediction": "all x.(Rock(x) -> BreaksDownFormsSoil(x))", "score": 0}
{"id": "eqasc_train_10999", "prediction": "all x y.((Soil(x) & Rock(y)) -> ComesFrom(x,y))", "score": 0}
{"id": "eqasc_train_11000", "prediction": "all x.((Soil(x) | Dirt(x)) -> HeavyMaterial(x))", "score": 0}
{"id": "eqasc_train_11001", "prediction": "all x.(Dirt(x) -> FormedByWeathering(x))", "score": 0}
{"id": "eqasc_train_11002", "prediction": "all x y.((Material(x) & Heavy(x)) -> FormedByWeathering(x))", "score": 0}
{"id": "eqasc_train_11003", "prediction": "all x.(LoamySoil(x) -> BestSoil(x))", "score": 0}
{"id": "eqasc_train_11004", "prediction": "all x.((Loamy(x) & Weathering(x)) -> FormedBy(x))", "score": 0}
{"id": "eqasc_train_11005", "prediction": "all x y.((SlowWeathering(x) & SlowErosion(y)) -> TurnsLargeRocksIntoSand(x))", "score": 0}
{"id": "eqasc_train_11006", "prediction": "all x.(Soil(x) -> FormedByErosion(x))", "score": 0}
{"id": "eqasc_train_11007", "prediction": "all x.(Dirt(x) -> FormedByWeathering(x))", "score": 0}
{"id": "eqasc_train_11008", "prediction": "all x.(Weather(x) -> BreakdownOfRock(x))", "score": 0}
{"id": "eqasc_train_11009", "prediction": "all x.(Food(x) -> (OrganicMolecule(x) & StoresEnergyInChemicalBonds(x)))", "score": 0}
{"id": "eqasc_train_11010", "prediction": "all x.((SourceOfNutrients(x) & OrganicMolecules(x) & StoreEnergyInChemicalBonds(x)) -> NutrientSource(x))", "score": 0}
{"id": "eqasc_train_11011", "prediction": "all x.((Molecule(x) & Food(x)) -> Nutrient(x))", "score": 0}
{"id": "eqasc_train_11012", "prediction": "all x.(Nutrient(x) -> Molecule(x))", "score": 0}
{"id": "eqasc_train_11013", "prediction": "all x.(ChemicalBond(x) -> ElectricalInNature(x))", "score": 0}
{"id": "eqasc_train_11014", "prediction": "all x.(Food(x) -> (ConsistsOfOrganicMolecules(x) & StoresElectricalEnergy(x)))", "score": 0}
{"id": "eqasc_train_11015", "prediction": "all x.(OrganicFood(x) -> (-ContainsChemicals(x) & -ContainsPreservatives(x) & -ContainsArtificialColorings(x)))", "score": 0}
{"id": "eqasc_train_11016", "prediction": "all x.(OrganicFood(x) -> -HasPreservatives(x))", "score": 0}
{"id": "eqasc_train_11017", "prediction": "all x.((Molecule(x) & ContainsCarbon(x)) -> Organic(x))", "score": 0}
{"id": "eqasc_train_11018", "prediction": "all x.(Food(x) -> ConsistsOfCarbon(x))", "score": 0}
{"id": "eqasc_train_11019", "prediction": "all x.(OrganicMatter(x) -> Decomposes(x))", "score": 0}
{"id": "eqasc_train_11020", "prediction": "all x.(Food(x) -> Decomposes(x))", "score": 0}
{"id": "eqasc_train_11021", "prediction": "all x.(Food(x) -> WantsPureFood(x))", "score": 0}
{"id": "eqasc_train_11022", "prediction": "all x.((Person(x) & WantsPure(x)) -> OrganicMolecules(x))", "score": 0}
{"id": "eqasc_train_11023", "prediction": "all x.(BeefJerky(x) -> PerfectFood(x))", "score": 0}
{"id": "eqasc_train_11024", "prediction": "all x.(BeefJerky(x) -> StoresEnergyInChemicalBonds(x))", "score": 0}
{"id": "eqasc_train_11025", "prediction": "all x.(Food(x) -> (OrganicMolecule(x) & StoresHeatInChemicalBonds(x)))", "score": 0}
{"id": "eqasc_train_11026", "prediction": "all x y.((Food(x) & OrganicMolecule(y)) -> StoresEnergyInTransferOfElectrons(x,y))", "score": 0}
{"id": "eqasc_train_11027", "prediction": "all x.((Beef(x) & FunctionalFood(x)) -> FunctionalFood(x))", "score": 0}
{"id": "eqasc_train_11028", "prediction": "all x.(Beef(x) -> (OrganicMolecules(x) & StoresEnergyInChemicalBonds(x)))", "score": 0}
{"id": "eqasc_train_11029", "prediction": "all x.(Plant(x) -> (AbsorbsEnergyFromSunlight(x) & StoresEnergyInChemicalBonds(x)))", "score": 0}
{"id": "eqasc_train_11030", "prediction": "all x y.((Food(x) & OrganicMolecule(y)) -> StoresEnergyFromSunlight(x,y))", "score": 0}
{"id": "eqasc_train_11031", "prediction": "all x.(FavoriteFood(x) -> Steak(x))", "score": 0}
{"id": "eqasc_train_11032", "prediction": "all x.(Steak(x) -> (ConsistsOfOrganicMolecules(x) & StoresEnergyInChemicalBonds(x)))", "score": 0}
{"id": "eqasc_train_11033", "prediction": "all x y.((Planet(x) & Planet(y)) -> CausesPullOfGravity(x,y))", "score": 1}
{"id": "eqasc_train_11034", "prediction": "EarthJupiter(x) & EarthJupiter(x) & Mass(x,318))", "score": -1}
{"id": "eqasc_train_11035", "prediction": "all x y.((Jupiter(x) & Earth(y)) -> GreaterGravitationalPull(x,y))", "score": 0}
{"id": "eqasc_train_11036", "prediction": "all x.(Gravity(x) -> AcceleratesMass(x))", "score": 0}
{"id": "eqasc_train_11037", "prediction": "all x.((Planet(x) & AcceleratesAsAffordsGravity(x)) -> Gravity(x))", "score": 0}
{"id": "eqasc_train_11038", "prediction": "all x.(Jupiter(x) -> MuchGreaterMass(x,y))", "score": 0}
{"id": "eqasc_train_11039", "prediction": "all x.(Planet(x) -> StrongestPullOfGravity(x))", "score": 0}
{"id": "eqasc_train_11040", "prediction": "all x.(Gravity(x) -> (PullingForce(x) & HoldsObjectsToSurface(x)))", "score": 0}
{"id": "eqasc_train_11041", "prediction": "all x y z.((Planet(x) & Mass(y) & CausesPullingForce(x,y) & Object(z)) -> HoldsToSurface(x,z))", "score": 0}
{"id": "eqasc_train_11042", "prediction": "all x.(Gravity(x) -> CausesWeight(x))", "score": 0}
{"id": "eqasc_train_11043", "prediction": "all x y.((Planet(x) & Planet(y)) -> CausesWeight(x,y))", "score": 0}
{"id": "eqasc_train_11044", "prediction": "all x y.((Object(x) & Gravity(y) & PullsDown(x,y)) -> Weight(x))", "score": 0}
{"id": "eqasc_train_11045", "prediction": "all x y.((Planet(x) & Planet(y)) -> CausesWeight(x,y))", "score": 0}
{"id": "eqasc_train_11046", "prediction": "all x.((EarthsMass(x) & CausesPullOfGravity(x)) -> CausesPullOfGravity(x))", "score": 0}
{"id": "eqasc_train_11047", "prediction": "all x y.((Mass(x) & Matter(y) & Object(y)) -> MeasuredInGasories(x,y))", "score": 0}
{"id": "eqasc_train_11048", "prediction": "all x y.((Planet(x) & Planet(y)) -> CausesPullOfGravity(x,y))", "score": 1}
{"id": "eqasc_train_11049", "prediction": "all x y z.((GravityForce(x) & Object(y) & Weight(z)) -> DeterminesForceOfGravity(x,y,z))", "score": 0}
{"id": "eqasc_train_11050", "prediction": "all x y.((Condensation(x) & Cloud(y)) -> CausesToForm(x,y))", "score": 0}
{"id": "eqasc_train_11051", "prediction": "all x.(Cloud(x) -> MadeOfWater(x))", "score": 0}
{"id": "eqasc_train_11052", "prediction": "all x.(WaterVapor(x) -> CausesCloudsToForm(x))", "score": 0}
{"id": "eqasc_train_11053", "prediction": "all x.(Cloud(x) -> ProducesRain(x))", "score": 0}
{"id": "eqasc_train_11054", "prediction": "all x.(Condensation(x) -> CausesRain(x))", "score": 0}
{"id": "eqasc_train_11055", "prediction": "all x y.((RainyCloud(x) & Cloud(y)) -> (CausesRain(x) & ExcessWaterVapor(y) & Rainbow(y)))", "score": 0}
{"id": "eqasc_train_11056", "prediction": "all x.(Condensation(x) -> LeadsToRain(x))", "score": 0}
{"id": "eqasc_train_11057", "prediction": "all x.(Fog(x) -> (Cloud(x) & FormsOnGround(x)))", "score": 0}
{"id": "eqasc_train_11058", "prediction": "all x.(Condensation(x) -> CausesFog(x))", "score": 0}
{"id": "eqasc_train_11059", "prediction": "all x.(Cloud(x) -> (BringsRain(x) & BringsShade(x)))", "score": 0}
{"id": "eqasc_train_11060", "prediction": "all x y.((Condensation(x) & Rain(y)) -> CausesToForm(x,y))", "score": 0}
{"id": "eqasc_train_11061", "prediction": "all x.(Cloud(x) -> CreatesRain(x))", "score": 0}
{"id": "eqasc_train_11062", "prediction": "all x.(Condensation(x) -> CausesRainToFall(x))", "score": 0}
{"id": "eqasc_train_11063", "prediction": "all x.((CloudBlocksSun(x) & Increases(x)) -> TemperaturesDrop(x))", "score": 0}
{"id": "eqasc_train_11064", "prediction": "all x.(Condensation(x) -> (CausesSunBlocking(x) & CausesTemperatureDrops(x)))", "score": 0}
{"id": "eqasc_train_11065", "prediction": "all x.(Human(x) -> (CollectsMushrooms(x) & GrowsMushrooms(x) & ForFood(x)))", "score": 0}
{"id": "eqasc_train_11066", "prediction": "all x.(PorciniMushroom(x) -> (Earthy(x) & Musky(x) & Sexy(x)))", "score": 0}
{"id": "eqasc_train_11067", "prediction": "all x y.((Human(x) & Porcinis(y)) -> (CollectedAndGrown(x,y) & ForMillionsOfYears(x)))", "score": 0}
{"id": "eqasc_train_11068", "prediction": "all x.(Humanity(x) -> UsesMushrooms(x))", "score": 0}
{"id": "eqasc_train_11069", "prediction": "all x.(Mushroom(x) -> EatenFromPaleolithicTimes(x))", "score": 0}
{"id": "eqasc_train_11070", "prediction": "all x y.((Human(x) & Fungus(y)) -> (CollectsAndGrows(x,y) & ForFood(x,y)))", "score": 0}
{"id": "eqasc_train_11071", "prediction": "all x.(Mushroom(x) -> (Fungus(x) & -Chlorophyll(x)))", "score": 0}
{"id": "eqasc_train_11072", "prediction": "all x y z.((Human(x) & Fungus(y) & Food(z)) -> (CollectsAndGrows(x,y) & ForFood(x,z)))", "score": 0}
{"id": "eqasc_train_11073", "prediction": "all x y.((Human(x) & Fungus(y)) -> GrowsForFood(x,y))", "score": 0}
{"id": "eqasc_train_11074", "prediction": "all x.(RozitesCaperata(x) -> EdibleMushroom(x))", "score": 0}
{"id": "eqasc_train_11075", "prediction": "all x y.((Human(x) & RozitesCaperata(y)) -> (CollectsAndGrows(x,y) & ForFood(x,y)))", "score": 0}
{"id": "eqasc_train_11076", "prediction": "all x.((Yeast(x) | Mushroom(x)) -> Fungus(x))", "score": 0}
{"id": "eqasc_train_11077", "prediction": "all x.(Human(x) -> (CollectsFungus(x) & GrowsFungusForFood(x)))", "score": 0}
{"id": "eqasc_train_11078", "prediction": "all x y.((EdibleMushroom(x) & Culture(y)) -> UsedForCulture(x,y))", "score": 0}
{"id": "eqasc_train_11079", "prediction": "all x y.((Human(x) & EdibleMushroom(y)) -> CollectsForThousandsOfYears(x,y))", "score": 0}
{"id": "eqasc_train_11080", "prediction": "all x y.((Human(x) & Fungus(y)) -> (CollectsAndGrowsForFood(x,y) & ForFood(x,y)))", "score": 0}
{"id": "eqasc_train_11081", "prediction": "all x.((Food(x) & RichInChlorine(x)) -> (Mushrooms(x) | Parsley(x) | SweetPotato(x) | Rhubarb(x) | (Tomato(x) & Especially(x))))", "score": 0}
{"id": "eqasc_train_11082", "prediction": "all x y z.((Human(x) & Food(y) & Chlorine(z)) -> (CollectsAndGrows(x,y,z) & RichInChlorine(y,z)))", "score": 0}
{"id": "eqasc_train_11083", "prediction": "all x.(Mushroom(x) -> FruitingStructureOfFungi(x))", "score": 0}
{"id": "eqasc_train_11084", "prediction": "all x y.((Human(x) & Fungus(y)) -> (CollectsAndGrowsFruitingStructure(x,y) & ForFood(x,y)))", "score": 0}
{"id": "eqasc_train_11085", "prediction": "all x.(Soil(x) -> DepletedOfNutrients(x))", "score": 0}
{"id": "eqasc_train_11086", "prediction": "all x.(SoilSolid(x) -> (MineralParticles(x) & OrganicMatter(x)))", "score": 0}
{"id": "eqasc_train_11087", "prediction": "all x.((MineralParticles(x) & OrganicMatter(x)) -> DepletedOfNutrients(x))", "score": 0}
{"id": "eqasc_train_11088", "prediction": "all x.(PotassiumCarbonate(x) -> ValuableNutrientForPlants(x))", "score": 0}
{"id": "eqasc_train_11089", "prediction": "all x.(Soil(x) -> DepletedOfPotassiumCarbonate(x))", "score": 0}
{"id": "eqasc_train_11090", "prediction": "all x.(Dirt(x) -> DepletedOfNutrients(x))", "score": 0}
{"id": "eqasc_train_11091", "prediction": "all x.(Dirt(x) -> DepletedOfNutrients(x))", "score": 0}
{"id": "eqasc_train_11092", "prediction": "all x.((Food(x) & Mineral(x)) -> Nutrient(x))", "score": 0}
{"id": "eqasc_train_11093", "prediction": "all x.(Soil(x) -> (DepletedOfFood(x) & DepletedOfMinerals(x)))", "score": 0}
{"id": "eqasc_train_11094", "prediction": "all x.(Soil(x) -> DepletedOfIron(x))", "score": 0}
{"id": "eqasc_train_11095", "prediction": "all x.((Nutrient(x) & CommonlyAddedToSoil(x)) -> Nitrogen(x))", "score": 0}
{"id": "eqasc_train_11096", "prediction": "all x.(Soil(x) -> DepletedOfNitrogen(x))", "score": 0}
{"id": "eqasc_train_11097", "prediction": "all x.((Resource(x) & NonRenewable(x)) -> Depletion(x))", "score": 0}
{"id": "eqasc_train_11098", "prediction": "all x.(SoilNutrition(x) -> CanBeExtracted(x))", "score": 0}
{"id": "eqasc_train_11099", "prediction": "all x.((Soil(x) & Wampanucket(x)) -> PrimeFarmlandSoil(x))", "score": 0}
{"id": "eqasc_train_11100", "prediction": "all x.(Farmland(x) -> DepletedOfNutrients(x))", "score": 0}
{"id": "eqasc_train_11101", "prediction": "all x y.((Soil(x) & Fertilizer(y)) -> DepletedOf(x,y))", "score": 0}
{"id": "eqasc_train_11102", "prediction": "all x y.((Recycling(x) & Resource(y)) -> ReducesResources(x,y))", "score": 0}
{"id": "eqasc_train_11103", "prediction": "all x.(Reuse(x) -> BestRecycling(x))", "score": 0}
{"id": "eqasc_train_11104", "prediction": "all x.(ReusingProducts(x) -> ReducesResources(x))", "score": 0}
{"id": "eqasc_train_11105", "prediction": "all x.(ReusingMaterial(x) -> ReducesResources(x))", "score": 0}
{"id": "eqasc_train_11106", "prediction": "all x.(Recycling(x) -> ProtectsEnvironment(x))", "score": 0}
{"id": "eqasc_train_11107", "prediction": "all x y z.((ReuseProduct(x) & Resource(y) & Environment(z)) -> (Reduces(x,y) & Protects(x,z)))", "score": 0}
{"id": "eqasc_train_11108", "prediction": "all x.((Literarily(x) & Creates(x)) -> MakesNew(x))", "score": 0}
{"id": "eqasc_train_11109", "prediction": "all x y.((Recycling(x) & Object(y)) -> ReducesResources(x,y))", "score": 0}
{"id": "eqasc_train_11110", "prediction": "all x y.((ReducingResources(x) & MakesSomething(y)) -> ProtectsEnvironment(x,y))", "score": 0}
{"id": "eqasc_train_11111", "prediction": "all x.(Recycling(x) -> (SavesResources(x) & ReducesPollution(x)))", "score": 0}
{"id": "eqasc_train_11112", "prediction": "all x y.((Recycling(x) & Making(y)) -> ReducesPollution(x,y))", "score": 0}
{"id": "eqasc_train_11113", "prediction": "all x.(Recycling(x) -> SavesEnergy(x))", "score": 0}
{"id": "eqasc_train_11114", "prediction": "all x y.((SavingEnergy(x) & Resource(y)) -> ReducesResources(x,y))", "score": 0}
{"id": "eqasc_train_11115", "prediction": "all x.(Bottle(x) -> Recyclable(x))", "score": 0}
{"id": "eqasc_train_11116", "prediction": "all x.(Bloot(x) -> ReducesResources(x))", "score": 0}
{"id": "eqasc_train_11117", "prediction": "all x y.((NaturalDisaster(x) & Animal(y)) -> CanCauseToLeaveEnvironment(x,y))", "score": 3}
{"id": "eqasc_train_11118", "prediction": "all x.(Flood(x) -> (NaturalDisaster(x) & MostCommon(x)))", "score": 0}
{"id": "eqasc_train_11119", "prediction": "all x y.((Flood(x) & Animal(y)) -> CanCauseLeaveEnvironment(x,y))", "score": 0}
{"id": "eqasc_train_11120", "prediction": "(all x.(Flooding(x) -> CommonAndWidespreadNaturalDisaster(x)))", "score": 0}
{"id": "eqasc_train_11121", "prediction": "all x y.((Flood(x) & Animal(y)) -> CanLeaveEnvironment(x,y))", "score": 0}
{"id": "eqasc_train_11122", "prediction": "all x.(Flood(x) -> MostCommonNaturalDisaster(x))", "score": 0}
{"id": "eqasc_train_11123", "prediction": "all x y.((Flood(x) & Animal(y)) -> CanLeaveEnvironment(x,y))", "score": 0}
{"id": "eqasc_train_11124", "prediction": "all x.(Animal(x) -> (Hibernate(x) | Relocate(x)) & AvoidHarshConditions(x)))", "score": -1}
{"id": "eqasc_train_11125", "prediction": "all x y.((NaturalDisaster(x) & Environment(y)) -> CausesRelocationToAvoidHarshConditions(x,y))", "score": 0}
{"id": "eqasc_train_11126", "prediction": "all x.(Earthquake(x) -> NaturalDisaster(x))", "score": 1}
{"id": "eqasc_train_11127", "prediction": "all x y.((Earthquake(x) & Animal(y)) -> CanCauseToLeaveEnvironment(x,y))", "score": 2}
{"id": "eqasc_train_11128", "prediction": "all x.((NatureDisaster(x) & ForestFire(x)) -> Scaring(x))", "score": 0}
{"id": "eqasc_train_11129", "prediction": "all x y.((ForestFire(x) & Animal(y)) -> CanLeaveEnvironment(x,y))", "score": 0}
{"id": "eqasc_train_11130", "prediction": "all x.((LifeInVolcanicEnvironment(x) & Animal(y)) -> CanBePentherous(x,y))", "score": 0}
{"id": "eqasc_train_11131", "prediction": "all x.((VolcanicArea(x) & LittleWildlife(x)) -> InVolcanicArea(x))", "score": 0}
{"id": "eqasc_train_11132", "prediction": "all x.(Flooding(x) -> MostCommonNaturalDisaster(x))", "score": 0}
{"id": "eqasc_train_11133", "prediction": "all x y.((Flooding(x) & Animal(y)) -> CanLeaveEnvironment(x,y))", "score": 0}
{"id": "eqasc_train_11134", "prediction": "all x.(Earthquake(x) -> NaturalDisaster(x))", "score": 2}
{"id": "eqasc_train_11135", "prediction": "all x y.((Earthquake(x) & Animal(y)) -> CanCauseToLeaveEnvironment(x,y))", "score": 1}
{"id": "eqasc_train_11136", "prediction": "all x y.((NaturalDisaster(x) & Animal(y)) -> CanCauseToLeaveHome(y,x))", "score": 0}
{"id": "eqasc_train_11137", "prediction": "all x y.((NaturalDisaster(x) & Mammal(y)) -> CausesToLeaveEnvironment(x,y))", "score": 0}
{"id": "eqasc_train_11138", "prediction": "all x.(Goat(x) -> HerdAnimal(x))", "score": 0}
{"id": "eqasc_train_11139", "prediction": "all x y.((NaturalDisaster(x) & Goat(y)) -> CanCauseToLeaveEnvironment(y,x))", "score": 0}
{"id": "eqasc_train_11140", "prediction": "all x.((Property(x) & DamagedByFire(x)) -> NaturalDisaster(x))", "score": 0}
{"id": "eqasc_train_11141", "prediction": "all x y.((Fire(x) & Animal(y)) -> CanCauseToLeaveEnvironment(x,y))", "score": 0}
{"id": "eqasc_train_11142", "prediction": "all x y.((ClimateChange(x) & NaturalDisaster(y)) -> IncreasedFerocity(x,y))", "score": 0}
{"id": "eqasc_train_11143", "prediction": "all x y.((ClimateChange(x) & Animal(y)) -> LeaveEnvironment(y,x))", "score": 0}
{"id": "eqasc_train_11144", "prediction": "all x.(AnimalMigration(x) -> MysteryOfNature(x))", "score": 0}
{"id": "eqasc_train_11145", "prediction": "all x.(NaturalDisaster(x) -> CausesMigration(x))", "score": 0}
{"id": "eqasc_train_11146", "prediction": "all x y.((RadioactiveDating(x) & Fossil(y)) -> DeterminesAge(x,y))", "score": 0}
{"id": "eqasc_train_11147", "prediction": "all x.(RadioactiveIsotope(x) -> UsedForDating(x))", "score": 0}
{"id": "eqasc_train_11148", "prediction": "all x.(RadioactiveIsotope(x) -> DeterminesFossilAge(x))", "score": 0}
{"id": "eqasc_train_11149", "prediction": "all x.((Carbon14Dating(x) & BestKnownRadioactiveDating(x)) -> BasedOn(x))", "score": 0}
{"id": "eqasc_train_11150", "prediction": "all x.((Dating(x,Carbon14) & BestKnownMethod(x)) -> DeterminesAgeOfFossil(x))", "score": 0}
{"id": "eqasc_train_11151", "prediction": "all x.(Fossil(x) -> StateFossil(x))", "score": 0}
{"id": "eqasc_train_11152", "prediction": "all x.(RadioactiveDating(x) -> DeterminesAgeOfPetrifiedWood(x))", "score": 0}
{"id": "eqasc_train_11153", "prediction": "all x.(RadioactiveDating(x) -> FiguresOutAgeOfDinosaurs(x))", "score": 0}
{"id": "eqasc_train_11154", "prediction": "all x.(RadioactiveDating(x) -> RequiresDecayCurve(x))", "score": 0}
{"id": "eqasc_train_11155", "prediction": "all x.((DecayCurve(x) & AgeOfFossil(x)) -> Determines(x,fossil))", "score": 0}
{"id": "eqasc_train_11156", "prediction": "all x y.((Geologist(x) & RockLayer(y)) -> UsesFossil(x,y))", "score": 0}
{"id": "eqasc_train_11157", "prediction": "all x y.((Geologist(x) & RockLayer(y)) -> UsesRadioactiveDatingToDetermineAge(x,y))", "score": 0}
{"id": "eqasc_train_11158", "prediction": "all x.((DinosaurBone(x) & Artifact(x)) -> Fossilized(x))", "score": 0}
{"id": "eqasc_train_11159", "prediction": "all x y.((RadioactiveDating(x) & DinosaurBones(y)) -> DeterminesAge(x,y))", "score": 0}
{"id": "eqasc_train_11160", "prediction": "all x.((DeadPlantOrAnimal(x) & BuriedBySediment(x)) -> Made(x))", "score": 0}
{"id": "eqasc_train_11161", "prediction": "all x y.((DeadPlantsOrAnimals(x) & BuriedRapidlyBySediment(x)) -> RadioactiveDating(y))", "score": 0}
{"id": "eqasc_train_11162", "prediction": "all x.((SedimentaryRock(x) & Fossil(x)) -> ProvidesRelativeAgeOfDeposition(x))", "score": 0}
{"id": "eqasc_train_11163", "prediction": "all x y.((RadioactiveDating(x) & Deposition(y)) -> DeterminesRelativeAgeOf(x,y))", "score": 0}
{"id": "eqasc_train_11164", "prediction": "all x.(ExtinctOrganism(x) -> (RepresentedByFossil(x) | RepresentedByFossil(x)))", "score": 0}
{"id": "eqasc_train_11165", "prediction": "all x y.((RadioactiveDating(x) & ExtinctOrganism(y)) -> DeterminesAge(x,y))", "score": 0}
{"id": "eqasc_train_11166", "prediction": "all x y.((Isotope(x) & Fossil(y)) -> DeterminesAge(x,y))", "score": 0}
{"id": "eqasc_train_11167", "prediction": "all x y.((Drought(x) & Environment(y)) -> ChangesColor(x,y))", "score": 0}
{"id": "eqasc_train_11168", "prediction": "all x.(LittleRain(x) -> CausesDrought(x))", "score": 0}
{"id": "eqasc_train_11169", "prediction": "all x.((Rain(x) & TooLittle(x)) -> ChangesColor(x,Green,Brown))", "score": 0}
{"id": "eqasc_train_11170", "prediction": "all x.((Leaves(x) & (Drought(x) | ColdConditions(x))) -> FallOff(x))", "score": 0}
{"id": "eqasc_train_11171", "prediction": "all x.(Cold(x) -> BrownLeaves(x))", "score": 0}
{"id": "eqasc_train_11172", "prediction": "all x.(Drought(x) -> (Heat(x) & Drought(x)))", "score": 0}
{"id": "eqasc_train_11173", "prediction": "all x y.((HeatInAir(x) & Environment(y)) -> ChangesColor(x,y))", "score": 0}
{"id": "eqasc_train_11174", "prediction": "all x.(Forest(x) -> HurtByDrought(x))", "score": 0}
{"id": "eqasc_train_11175", "prediction": "all x y z.((Forest(x) & Environment(y) & Color(z) & Green(z) & Brown(z)) -> Hurts(x,y,z))", "score": 0}
{"id": "eqasc_train_11176", "prediction": "all x.(Drought(x) -> (LackOfWater(x) & ProblemForFarmersAndCommunities(x)))", "score": 0}
{"id": "eqasc_train_11177", "prediction": "all x y.((LackOfWater(x) & Environment(y)) -> CanChangeColor(x,y))", "score": 0}
{"id": "eqasc_train_11178", "prediction": "-Water(drought)", "score": 0}
{"id": "eqasc_train_11179", "prediction": "all x.((Feeding(x) & Severe(x) & DroughtConditions(x)) -> BrownTips(x))", "score": 0}
{"id": "eqasc_train_11180", "prediction": "all x y.((Leaves(x) & Drought(y)) -> CanChangeColor(x,y))", "score": 0}
{"id": "eqasc_train_11181", "prediction": "all x.(Cabbage(x) -> (DamnHardToDehydrate(x) & -TurnBrown(x)))", "score": 0}
{"id": "eqasc_train_11182", "prediction": "all x y.((Drought(x) & Environment(y)) -> Dehydrates(x,y))", "score": 0}
{"id": "eqasc_train_11183", "prediction": "-LackOfRainLastWinter(x) -IntensifiedArizonasDrought(x))", "score": -1}
{"id": "eqasc_train_11184", "prediction": "all x y.((LackOfRain(x) & Environment(y)) -> CanChangeColor(x,y))", "score": 0}
{"id": "eqasc_train_11185", "prediction": "all x y.((Planet(x) & Rotating(x) & Planet(y)) -> CausesCyclesOfDayAndNight(x,y))", "score": 0}
{"id": "eqasc_train_11186", "prediction": "all x y.((GravitationalPull(x) & MajorPlanet(y)) -> AltersOrbitalPeriodFromRevolutionToRevolution(x,y))", "score": 0}
{"id": "eqasc_train_11187", "prediction": "all x y.((GravitationalPull(x) & AlternateDayCycle(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_train_11188", "prediction": "all x y.((Body(x) & Sensor(y)) -> (AdjustsToDayAndNight(x,y) & WorkInDay(x) & SleepAtNight(x)))", "score": 0}
{"id": "eqasc_train_11189", "prediction": "all x.(PlanetRotating(x) -> (WorksInDay(x) & SleepsAtNight(x)))", "score": 0}
{"id": "eqasc_train_11190", "prediction": "all x y.((Mars(x) & Earth(y)) -> (HasDay(x) & HasNight(x) & HasDay(y) & HasNight(y)))", "score": 0}
{"id": "eqasc_train_11191", "prediction": "all x.(Mars(x) -> RotatingPlanet(x))", "score": 0}
{"id": "eqasc_train_11192", "prediction": "all x y z.((Time(x) & Planet(y) & Sun(z)) -> (Motion(x,y) & Rotation(y) & MovementAround(x,z)))", "score": 0}
{"id": "eqasc_train_11193", "prediction": "all x.(Rotation(x) -> CausesTime(x))", "score": 0}
{"id": "eqasc_train_11194", "prediction": "all x.(Planet(x) -> RotatesAtDifferentPace(x))", "score": 0}
{"id": "eqasc_train_11195", "prediction": "all x.(Planet(x) -> (HasDayCycle(x) & HasNightCycle(x)))", "score": 0}
{"id": "eqasc_train_11196", "prediction": "all x y.((Planet(x) & Axis(y)) -> Rotation(x,y))", "score": 0}
{"id": "eqasc_train_11197", "prediction": "all x y.((Planet(x) & SpiningOnAxis(x) & Planet(y)) -> CausesCyclesOfDayAndNight(x,y))", "score": 0}
{"id": "eqasc_train_11198", "prediction": "all x.(Rotation(x) -> (DeterminesDay(x) & DeterminesNight(x) & DeterminesDayLength(x)))", "score": 0}
{"id": "eqasc_train_11199", "prediction": "all x.(Planet(x) -> CausesNight(x))", "score": 0}
{"id": "eqasc_train_11200", "prediction": "all x.(Day(x) & NightTemperature(x)) -> VariatedWidely(x))", "score": -1}
{"id": "eqasc_train_11201", "prediction": "all x y.((Planet(x) & Planet(y) & Rotating(x,y)) -> CausesVariableTemperatures(x,y))", "score": 0}
{"id": "eqasc_train_11202", "prediction": "all x.(Planet(x) -> MovesInEllipticalOrbits(x))", "score": 0}
{"id": "eqasc_train_11203", "prediction": "all x.((MovesInEllipticalOrbits(x) & Rotates(x)) -> CausesCyclesOfDayAndNight(x))", "score": 0}
{"id": "eqasc_train_11204", "prediction": "(all x.(Mars(x) -> Earth(x)))", "score": 0}
{"id": "eqasc_train_11205", "prediction": "all x.(MarsRotating(x) -> (CausesDayAndNightCycles(x) & CausesNightCycles(x)))", "score": 0}
{"id": "eqasc_train_11206", "prediction": "all x y.((Testosterone(x) & ReproductiveOrgan(y)) -> StimulatesToDevelopIntoMaleOrgans(x,y))", "score": 0}
{"id": "eqasc_train_11207", "prediction": "all x.(Testicle(x) -> MaleReproductiveOrgan(x))", "score": 0}
{"id": "eqasc_train_11208", "prediction": "all x y z.((Testosterone(x) & ReproductiveOrgan(y) & Testicles(z)) -> StimulatesToDevelop(x,y,z))", "score": 0}
{"id": "eqasc_train_11209", "prediction": "all x.(Androgen(x) -> Testosterone(x))", "score": 0}
{"id": "eqasc_train_11210", "prediction": "all x y.((Adrogen(x) & ReproductiveOrgan(y)) -> Stimulates(x,y))", "score": 0}
{"id": "eqasc_train_11211", "prediction": "all x.(Mammal(x) -> TubeLikeOrgan(x))", "score": 0}
{"id": "eqasc_train_11212", "prediction": "all x y z.((Testosterone(x) & ReproductiveOrgans(y) & Penis(z)) -> StimulatesToDevelopPenis(x,y,z))", "score": 0}
{"id": "eqasc_train_11213", "prediction": "all x.((Testosterone(x) & Present(x)) -> MaleExternalGenitaliaDevelops(x,b))", "score": 0}
{"id": "eqasc_train_11214", "prediction": "all x y.((Testosterone(x) & MaleGenitalia(y)) -> StimulatesReproductiveOrgan(x,y))", "score": 0}
{"id": "eqasc_train_11215", "prediction": "all x.(Testosterone(x) -> CausesPenisDevelopment(x))", "score": 0}
{"id": "eqasc_train_11216", "prediction": "all x.(Androgen(x) -> (MaleHydrogen(x) & LikeTestosterone(x)))", "score": 0}
{"id": "eqasc_train_11217", "prediction": "all x y.((MaleHydrogen(x) & MaleOrgan(y)) -> StimulatedReproductiveOrgans(x,y))", "score": 0}
{"id": "eqasc_train_11218", "prediction": "all x.(AnabolicHormone(x) -> (Testosterone(x) | Nandrolone(x)))", "score": 0}
{"id": "eqasc_train_11219", "prediction": "all x y.((AnabolicHydrogen(x) & ReproductiveOrgan(y)) -> StimulatesToDevelopIntoMaleOrgan(x,y))", "score": 0}
{"id": "eqasc_train_11220", "prediction": "all x.((Hydrogen(x) & ForMen(x)) -> Testosterone(x))", "score": 0}
{"id": "eqasc_train_11221", "prediction": "all x y z.((Hydrogen(x) & ReproductiveOrgan(y) & MaleOrgan(z)) -> StimulatesToDevelops(x,y,z))", "score": 0}
{"id": "eqasc_train_11222", "prediction": "all x.(Virus(x) -> (-Cell(x) & -Prokaryote(x) & -Eukaryote(x)))", "score": 2}
{"id": "eqasc_train_11223", "prediction": "all x.(TobaccoMosque(x) -> -Cell(x))", "score": 0}
{"id": "eqasc_train_11224", "prediction": "all x.(Virus(x) -> -Plant(x))", "score": 1}
{"id": "eqasc_train_11225", "prediction": "all x.(Virus(x) -> -Bacteria(x))", "score": 1}
{"id": "eqasc_train_11226", "prediction": "all x.(Virus(x) -> (Virus(x) & SimpleUnit(x) & InvadesCells(x)))", "score": 0}
{"id": "eqasc_train_11227", "prediction": "all x.(Virus(x) -> (SimpleUnit(x) & -(Prokaryote(x) | Eukaryote(x)))))", "score": -1}
{"id": "eqasc_train_11228", "prediction": "all x.(Influenza(x) -> -Cell(x))", "score": 0}
{"id": "eqasc_train_11229", "prediction": "all x.(InfluenzaOrthomyxovirus(x) -> (-Cell(x) & -Prokaryotes(x) & -Eukaryotes(x)))", "score": 0}
{"id": "eqasc_train_11230", "prediction": "all x.((Agent(x) & Smallest(x)) -> (-Cells(x) & -Prokaryotes(x) & -Eukaryotes(x)))", "score": 0}
{"id": "eqasc_train_11231", "prediction": "all x y.((BlackHole(x) & HighMassStar(y) & Collapses(x,y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_train_11232", "prediction": "all x.((Star(x) & MassLargerThan25SolarMasses(x)) -> CollapsesIntoBlackHole(x))", "score": 0}
{"id": "eqasc_train_11233", "prediction": "all x.(BlackHole(x) -> (FormedByStars(x) & MassLargerThan25SolarMasses(x)))", "score": 0}
{"id": "eqasc_train_11234", "prediction": "all x.(CollapsedStar(x) -> DeadStar(x))", "score": 0}
{"id": "eqasc_train_11235", "prediction": "all x y.((BlackHole(x) & HighMassDeadStar(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_train_11236", "prediction": "all x.(BlackHole(x) -> ExcitesAstronomers(x))", "score": 0}
{"id": "eqasc_train_11237", "prediction": "all x y.((HighMassStar(x) & Astronomer(y) & Collapsing(x)) -> Excites(y))", "score": 0}
{"id": "eqasc_train_11238", "prediction": "all x.(BlackHole(x) -> GravityDrain(x))", "score": 0}
{"id": "eqasc_train_11239", "prediction": "all x y.((GravityDrain(x) & HighMassStarCollapse(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_train_11240", "prediction": "all x.(BlackHole(x) -> FormedFromDeadStars(x))", "score": 0}
{"id": "eqasc_train_11241", "prediction": "all x.(BlackHole(x) -> Spherical(x))", "score": 0}
{"id": "eqasc_train_11242", "prediction": "all x y.((HighMassStar(x) & Collapsing(x) & FormsSphere(y)) -> HighMassStarCollapsing(x))", "score": 0}
{"id": "eqasc_train_11243", "prediction": "all x y.((Gravity(x) & Star(y)) -> Collapses(x,y))", "score": 0}
{"id": "eqasc_train_11244", "prediction": "all x.(GravityCausesBlackHoles(x) -> CausesBlackHoles(x))", "score": 0}
{"id": "eqasc_train_11245", "prediction": "all x.(BlackHole(x) -> (InevitableConclusionOfGeneralTheoryOfRelativity(x) & Einstein(x)))", "score": 0}
{"id": "eqasc_train_11246", "prediction": "all x.((HighMassStar(x) & Collapses(x)) -> FulfillsUnexpectedConclusion(x,EinsteinsGeneralTheoryOfRelativity))", "score": 0}
{"id": "eqasc_train_11247", "prediction": "exists x.(HighMassStar(x) & SuprisinglyHighMassStar(x) & LowMassStar(x))", "score": 0}
{"id": "eqasc_train_11248", "prediction": "all x y z.((BlackHole(x) & Star(y) & Star(z) & RelativelyShortLives(y)) -> FormsFrom(x,y,z))", "score": 0}
{"id": "eqasc_train_11249", "prediction": "all x.(BiggerMass(x) -> SmallerStar(x))", "score": 0}
{"id": "eqasc_train_11250", "prediction": "all x y.((BlackHole(x) & SmallerDiameterStar(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_train_11251", "prediction": "all x y.((Sun(x) & SunCollapses(x)) -> CanFormBlackHole(y))", "score": 0}
{"id": "eqasc_train_11252", "prediction": "all x.(Star(x) -> OutermostCelestialSphere(x))", "score": 0}
{"id": "eqasc_train_11253", "prediction": "all x.((HighMassCelestialBody(x) & Collapses(x)) -> BlackHole(x))", "score": 0}
{"id": "eqasc_train_11254", "prediction": "all x.(CookingFood(x) -> AddsHeatEnergy(x))", "score": 0}
{"id": "eqasc_train_11255", "prediction": "all x y.((CookingFood(x) & Bacteria(y)) -> Removes(x,y))", "score": 0}
{"id": "eqasc_train_11256", "prediction": "all x.(Heat(x) -> SourceOfEnergy(x))", "score": 0}
{"id": "eqasc_train_11257", "prediction": "all x.(CookingFood(x) -> AddsSourceOfEnergy(x))", "score": 0}
{"id": "eqasc_train_11258", "prediction": "all x.((HeatEnergy(x) & Bacteria(x)) -> Disrupts(x,Bacteria,Bacteria))", "score": 0}
{"id": "eqasc_train_11259", "prediction": "all x.(FreshMeat(x) -> PerishableFood(x))", "score": 0}
{"id": "eqasc_train_11260", "prediction": "all x.(CookingMeat(x) -> AddsHeatEnergy(x))", "score": 0}
{"id": "eqasc_train_11261", "prediction": "all x.(ElectricalEnergy(x) -> HeatEnergy(x))", "score": 0}
{"id": "eqasc_train_11262", "prediction": "all x y.((ElectricalEnergy(x) & Food(y)) -> Cooks(x,y))", "score": 0}
{"id": "eqasc_train_11263", "prediction": "all x.(Metal(x) -> ConductsHeatEnergy(x))", "score": 0}
{"id": "eqasc_train_11264", "prediction": "all x.(Food(x) -> CanBeCookedOnMetal(x))", "score": 0}
{"id": "eqasc_train_11265", "prediction": "all x y.((Human(x) & Food(y)) -> AddsHeatEnergyTo(x,y))", "score": 0}
{"id": "eqasc_train_11266", "prediction": "all x.(HeatEnergy(x) -> MakesDigestionEasier(x))", "score": 0}
{"id": "eqasc_train_11267", "prediction": "all x y.((Heat(x) & HeatConductedTo(x,y)) -> HotObject(y))", "score": 0}
{"id": "eqasc_train_11268", "prediction": "all x.(Metal(x) -> ConductsHeatWell(x))", "score": 0}
{"id": "eqasc_train_11269", "prediction": "all x.(Metal(x) -> GoodConductor(x))", "score": 0}
{"id": "eqasc_train_11270", "prediction": "all x.(Metal(x) -> HeatsUp(x))", "score": 0}
{"id": "eqasc_train_11271", "prediction": "all x.((HeatApplied(x) & Metal(x)) -> Hot(x))", "score": 0}
{"id": "eqasc_train_11272", "prediction": "all x.(Metal(x) -> Hot(x))", "score": 0}
{"id": "eqasc_train_11273", "prediction": "all x.(MetallicObject(x) -> ManufacturedFromAlloys(x))", "score": 0}
{"id": "eqasc_train_11274", "prediction": "all x y.((Heat(x) & Alloy(y) & ConductsTo(x,y)) -> Hot(y))", "score": 0}
{"id": "eqasc_train_11275", "prediction": "all x.(Metal(x) -> (VariatesInCapacityToConductHeat(x)))", "score": 0}
{"id": "eqasc_train_11276", "prediction": "all x.(HeatedMetal(x) -> HeatsUp(x))", "score": 0}
{"id": "eqasc_train_11277", "prediction": "all x.(ConductiveHeatTransfer(x) -> Excellent(x))", "score": 0}
{"id": "eqasc_train_11278", "prediction": "all x y.((HeatTransfer(x) & Object(y)) -> Hot(y))", "score": 0}
{"id": "eqasc_train_11279", "prediction": "all x.((OceanSurface(x) & HeatsBySunlight(x)) -> CoolerDepths(x))", "score": 0}
{"id": "eqasc_train_11280", "prediction": "all x y.((Sunlight(x) & OceanSurface(y) & ConductedTo(x,y)) -> Hot(x))", "score": 0}
{"id": "eqasc_train_11281", "prediction": "all x y.((Energy(x) & Object(y) & ConductedTo(x,y)) -> Hot(y))", "score": 0}
{"id": "eqasc_train_11282", "prediction": "all x.(Metal(x) -> (ConductsHeat(x) & ConductsElectricity(x)))", "score": 0}
{"id": "eqasc_train_11283", "prediction": "all x y.((Metal(x) & Object(y)) -> (TransfersHeatTo(x,y) & MakesHot(x,y)))", "score": 0}
{"id": "eqasc_train_11284", "prediction": "all x.(HotAppliance(x) -> CausesBurns(x))", "score": 0}
{"id": "eqasc_train_11285", "prediction": "all x y.((Heat(x) & HeatConductedTo(x,y)) -> CausesBurns(x,y))", "score": 0}
{"id": "eqasc_train_11286", "prediction": "all x y.((HotObject(x) & ColdObject(y)) -> EmitsMoreEnergy(x,y))", "score": 0}
{"id": "eqasc_train_11287", "prediction": "all x y.((Heat(x) & Heat(y) & ConductsTo(x,y)) -> EmitsMoreEnergy(x,y))", "score": 0}
{"id": "eqasc_train_11288", "prediction": "all x.(Air(x) -> ConductsHeatPoorly(x))", "score": 0}
{"id": "eqasc_train_11289", "prediction": "all x.(Air(x) -> -AccommodatesHeat(x))", "score": 0}
{"id": "eqasc_train_11290", "prediction": "all x.(Rock(x) -> HeatConductionSlow(x))", "score": 0}
{"id": "eqasc_train_11291", "prediction": "all x.(Rock(x) -> Hot(x))", "score": 0}
{"id": "eqasc_train_11292", "prediction": "all x.((ColdFront(x) & PassesBy(x)) -> CausesThunderstorms(x))", "score": 0}
{"id": "eqasc_train_11293", "prediction": "all x.((ColdAir(x) & WarmAir(x)) -> ColdFront(x))", "score": 0}
{"id": "eqasc_train_11294", "prediction": "all x y.((ColdAir(x) & WarmAir(y)) -> CausesThunderstorms(x))", "score": 0}
{"id": "eqasc_train_11295", "prediction": "all x.(Thunderstorm(x) -> ProducesLightning(x))", "score": 0}
{"id": "eqasc_train_11296", "prediction": "all x.(ColdFront(x) -> CausesLightning(x))", "score": 0}
{"id": "eqasc_train_11297", "prediction": "all x.(Thunderstorm(x) -> (CausesColdAir(x) & WarmAir(x)))", "score": 0}
{"id": "eqasc_train_11298", "prediction": "all x.(Thunderstorm(x) -> GivesBirthToTornadoes(x))", "score": 0}
{"id": "eqasc_train_11299", "prediction": "all x.(ColdFront(x) -> GivesBirthToTornadoes(x))", "score": 0}
{"id": "eqasc_train_11300", "prediction": "all x.((ColdAir(x) & WarmAir(x)) -> CanCauseThunderstorm(x))", "score": 0}
{"id": "eqasc_train_11301", "prediction": "all x.((ColdAir(x) & ReplacesWarmAir(x)) -> ColdFront(x))", "score": 0}
{"id": "eqasc_train_11302", "prediction": "all x.((ColdAir(x) & ReplacesWarmAir(x)) -> CausesThunderstorms(x))", "score": 0}
{"id": "eqasc_train_11303", "prediction": "all x.(Lightning(x) -> OccursWith(x,Tornado))", "score": 0}
{"id": "eqasc_train_11304", "prediction": "all x.((ColdFront(x) & Pass(x)) -> CausesLightning(x))", "score": 0}
{"id": "eqasc_train_11305", "prediction": "all x.(ColdFront(x) -> (ColdFront(x) & Depression(x)))", "score": 0}
{"id": "eqasc_train_11306", "prediction": "all x y.((Depression(x) & Thunderstorm(y)) -> AssociatedWith(x,y))", "score": 0}
{"id": "eqasc_train_11307", "prediction": "all x.(ColdFrontPasses(x) -> PrepareForClearColdDays(x))", "score": 0}
{"id": "eqasc_train_11308", "prediction": "all x.((Thunderstorm(x) & ClearColdDays(x)) -> PreparedFor(x,y))", "score": 0}
{"id": "eqasc_train_11309", "prediction": "all x y.((Thunderstorm(x) & Lightning(y)) -> Accompanies(x,y))", "score": 0}
{"id": "eqasc_train_11310", "prediction": "all x.((ColdFront(x) & CausesLightning(x)) -> CausesLightning(x))", "score": 0}
{"id": "eqasc_train_11311", "prediction": "all x.(Fog(x) -> CommonInColdAir(x))", "score": 0}
{"id": "eqasc_train_11312", "prediction": "all x y.((Fog(x) & Thunderstorm(y)) -> CommonBefore(x,y))", "score": 0}
{"id": "eqasc_train_11313", "prediction": "all x y.((ColdFront(x) & Tornado(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_train_11314", "prediction": "all x y.((Front(x) & AirMass(y)) -> Border(x,y))", "score": 0}
{"id": "eqasc_train_11315", "prediction": "all x y.((AirMass(x) & AirMass(y)) -> CausesThunderstorms(x,y))", "score": 0}
{"id": "eqasc_train_11316", "prediction": "all x.(Thunderstorm(x) -> CreatesHavoc(x))", "score": 0}
{"id": "eqasc_train_11317", "prediction": "all x.(ColdFront(x) -> CausesHavoc(x))", "score": 0}
{"id": "eqasc_train_11318", "prediction": "all x y.((MassOfObject(x) & GravitationalForce(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_train_11319", "prediction": "all x.((Object(x) & HasWeight(x)) -> HasMass(x))", "score": 0}
{"id": "eqasc_train_11320", "prediction": "all x y.((Object(x) & Weight(y)) -> CausesGravitationalForce(x,y))", "score": 0}
{"id": "eqasc_train_11321", "prediction": "all x y.((Asteroid(x) & Mass(y)) -> CausedGravitationalForce(x,y))", "score": 0}
{"id": "eqasc_train_11322", "prediction": "all x.((MeasuresHeavinessOrMass(x) & Object(x)) -> Weight(x))", "score": 0}
{"id": "eqasc_train_11323", "prediction": "all x.(Weight(x) -> CausesGravitationalForce(x))", "score": 0}
{"id": "eqasc_train_11324", "prediction": "all x.((GravitationalMass(x) & InertialMass(x)) -> Identical(x))", "score": 0}
{"id": "eqasc_train_11325", "prediction": "all x y.((Mass(x) & Object(y)) -> CausesForce(x,y))", "score": 0}
{"id": "eqasc_train_11326", "prediction": "all x.(GravitationalForce(x) -> (Attractive(x) & -RepulsiveGravitationalForce(x)))", "score": 0}
{"id": "eqasc_train_11327", "prediction": "all x y.((Mass(x) & Object(y) & Attractive(x,y)) -> -Repulsive(x))", "score": 0}
{"id": "eqasc_train_11328", "prediction": "all x.(Gravitation(x) -> ImpellingForce(x))", "score": 0}
{"id": "eqasc_train_11329", "prediction": "all x y.((Mass(x) & Object(y)) -> CausesConstantImppellingForce(x,y))", "score": 0}
{"id": "eqasc_train_11330", "prediction": "all x y.((GravitationalForce(x) & Object(y)) -> Accelerates(x,y))", "score": 0}
{"id": "eqasc_train_11331", "prediction": "all x y.((MassOfObject(x) & MassOfObject(y)) -> CausesAttractiveForce(x,y))", "score": 0}
{"id": "eqasc_train_11332", "prediction": "all x.(Gravity(x) -> KeepsEarthInOrbitAboutSun(x))", "score": 0}
{"id": "eqasc_train_11333", "prediction": "all x y.((MassOfSun(x) & Earth(y)) -> CausesGravityOn(x,y))", "score": 0}
{"id": "eqasc_train_11334", "prediction": "all x.(Gravitation(x) -> (UniversalForceOfAttraction(x) & ActsBetweenAllMatter(x)))", "score": 0}
{"id": "eqasc_train_11335", "prediction": "all x y.((MassOfObject(x) & MassOfObject(y)) -> CausesAttraction(x,y))", "score": 0}
{"id": "eqasc_train_11336", "prediction": "all x.(AlternationOfGenerations(x) -> (AsexualReproduction(x) & SexualReproduction(x)))", "score": 0}
{"id": "eqasc_train_11337", "prediction": "all x.(Plant(x) -> AlterationOfGenerations(x))", "score": 0}
{"id": "eqasc_train_11338", "prediction": "all x.(Plant(x) -> (AsexualReproduction(x) & SexualReproduction(x)))", "score": 0}
{"id": "eqasc_train_11339", "prediction": "all x.(Fern(x) -> (AsexualReproduction(x) & SexualReproduction(x)))", "score": 0}
{"id": "eqasc_train_11340", "prediction": "all x y.((AsexualReproduction(x) & Offspring(y)) -> GivesSameToParents(x,y))", "score": 0}
{"id": "eqasc_train_11341", "prediction": "all x.(AlternationOfGenerations(x) -> AllowsDifferentMethodsOfProduction(x))", "score": 0}
{"id": "eqasc_train_11342", "prediction": "all x y.((Sexual(x) & Asexual(y)) -> (Advantages(x,y) & Disadvantages(x,y)))", "score": 0}
{"id": "eqasc_train_11343", "prediction": "all x.(AlternationOfGenerations(x) -> AllowsUseOfAdvorableReproduction(x))", "score": 0}
{"id": "eqasc_train_11344", "prediction": "all x.((SingleBase(x) & Altered(x)) -> PointMutation(x))", "score": 0}
{"id": "eqasc_train_11345", "prediction": "all x.(PointMutation(x) -> (AsexualReproduction(x) & SexualReproduction(x)))", "score": 0}
{"id": "eqasc_train_11346", "prediction": "all x.(Plant(x) -> (ReproducesSexually(x) & ReproducesAsexually(x)))", "score": 0}
{"id": "eqasc_train_11347", "prediction": "all x.(Plant(x) -> UndergoesAlternationOfGenerations(x))", "score": 0}
{"id": "eqasc_train_11348", "prediction": "all x.(Reproduction(x) -> (AsexualBirth(x) | Sexual(x)))", "score": 0}
{"id": "eqasc_train_11349", "prediction": "all x.(AlternationOfGenerations(x) -> AllowsBadding(x))", "score": 0}
{"id": "eqasc_train_11350", "prediction": "all x.(ReproductionOrganism(x) -> (CreatesYoungOfSpecies(x) & ReproductionOrganism(x)))", "score": 0}
{"id": "eqasc_train_11351", "prediction": "all x.(AlternationOfGenerations(x) -> (CreatesYoungByAsexualAndSexualMeans(x)))", "score": 0}
{"id": "eqasc_train_11352", "prediction": "all x.(Mollusk(x) -> ReproducesSexually(x))", "score": 4}
{"id": "eqasc_train_11353", "prediction": "all x.(Snail(x) -> ReproducesSexually(x))", "score": 1}
{"id": "eqasc_train_11354", "prediction": "all x.(Squid(x) -> ReproducesSexually(x))", "score": 2}
{"id": "eqasc_train_11355", "prediction": "all x.(Snail(x) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_11356", "prediction": "all x.(Mollusk(x) -> (DominantInvertebrate(x) & Invertebrate(x)))", "score": 0}
{"id": "eqasc_train_11357", "prediction": "all x.(DominantInvertebrate(x) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_11358", "prediction": "all x.(Cim(x) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_11359", "prediction": "all x.((InvertebrateGroup(x) & SecondLargest(x)) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_11360", "prediction": "exists x.(Mollusk(x) & HasShell(x))", "score": 0}
{"id": "eqasc_train_11361", "prediction": "exists x.(Animal(x) & HasShells(x) & ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_11362", "prediction": "all x.(Squid(x) -> ReproducesSexually(x))", "score": 1}
{"id": "eqasc_train_11363", "prediction": "all x.(Abalone(x) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_11364", "prediction": "all x.(Squid(x) -> ProducesSexually(x))", "score": 0}
{"id": "eqasc_train_11365", "prediction": "all x.(Abalone(x) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_11366", "prediction": "all x.((Invertebrate(x) & Dominant(x)) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_11367", "prediction": "all x.(Cell(x) -> (ShareStructure(x) & ShareBasicFunctions(x)))", "score": 0}
{"id": "eqasc_train_11368", "prediction": "all x.(HairCell(x) -> SkinCell(x))", "score": 0}
{"id": "eqasc_train_11369", "prediction": "all x y.((Hair(x) & Skin(y)) -> (SharesStructures(x,y) & SharesBasicFunctions(x,y)))", "score": 0}
{"id": "eqasc_train_11370", "prediction": "all x.(BiologicalStructure(x) -> TooComplex(x))", "score": 0}
{"id": "eqasc_train_11371", "prediction": "all x.(Cell(x) -> (Complex(x) & ShareBasicFunctions(x)))", "score": 0}
{"id": "eqasc_train_11372", "prediction": "all x y.((Hair(x) & Skin(y)) -> SharesStructuresAndBasicFunctions(x,y))", "score": 0}
{"id": "eqasc_train_11373", "prediction": "all x y.((BasicBuildingBlock(x) & Life(y)) -> SharesStructuresAndBasicFunctions(x,y))", "score": 0}
{"id": "eqasc_train_11374", "prediction": "all x.(Eukaryote(x) -> (CellWithNucleus(x)))", "score": 0}
{"id": "eqasc_train_11375", "prediction": "all x.(Eukaryote(x) -> (ShareStructures(x) & ShareBasicFunctions(x)))", "score": 0}
{"id": "eqasc_train_11376", "prediction": "all x.(InsideCell(x) -> Nucleus(x))", "score": 0}
{"id": "eqasc_train_11377", "prediction": "all x.(Nucleus(x) -> ShareBasicFunctions(x))", "score": 0}
{"id": "eqasc_train_11378", "prediction": "all x.(Process(x) -> PrettySimple(x))", "score": 0}
{"id": "eqasc_train_11379", "prediction": "all x.(Cell(x) -> (ShareStructures(x) & ShareSimpleProcesses(x)))", "score": 0}
{"id": "eqasc_train_11380", "prediction": "all x.(Cell(x) -> BasicFunctioningUnitOfLife(x))", "score": 0}
{"id": "eqasc_train_11381", "prediction": "all x.(BasicFunctioningUnitOfLife(x) -> ShareSameStructures(x))", "score": 0}
{"id": "eqasc_train_11382", "prediction": "all x.(Antigen(x) -> (Molecule(x) & RecognizesFrequentToBody(x)))", "score": 0}
{"id": "eqasc_train_11383", "prediction": "all x.(Immunology(x) -> StudiesImmuneSystem(x))", "score": 0}
{"id": "eqasc_train_11384", "prediction": "all x.(Immunology(x) -> StudiesAntigens(x))", "score": 0}
{"id": "eqasc_train_11385", "prediction": "all x.(Antigen(x) -> ExpressedByCancerCells(x))", "score": 0}
{"id": "eqasc_train_11386", "prediction": "all x y.((ImmuneSystem(x) & Cancer(y)) -> CanRecognizeForeignToBody(x,y))", "score": 0}
{"id": "eqasc_train_11387", "prediction": "all x.(Allergy(x) -> (ReactionToSubstance(x) & BodyRecognizesAsFrench(x)))", "score": 0}
{"id": "eqasc_train_11388", "prediction": "all x.(Antigen(x) -> (Molecule(x) & CausesAllergy(x)))", "score": 0}
{"id": "eqasc_train_11389", "prediction": "all x y.((ImmuneSystem(x) & ForeignSubstance(y) & Recognizes(x,y)) -> ProducesAntibodies(x))", "score": 0}
{"id": "eqasc_train_11390", "prediction": "all x y.((Antibody(x) & Antigen(y)) -> (ResponsesTo(x,y) & (LatchOn(x,y) | BindWith(x,y))))", "score": 0}
{"id": "eqasc_train_11391", "prediction": "all x y z.((Antibodies(x) & Molecule(y) & ImmuneSystem(z) & RecognizesForeignToBody(x,y,z)) -> LatchOnTo(x,y,z))", "score": 0}
{"id": "eqasc_train_11392", "prediction": "all x y.((Body(x) & ForeignObject(y)) -> NormalReactionTo(x,y))", "score": 0}
{"id": "eqasc_train_11393", "prediction": "all x y.((Antigen(x) & ImmuneSystem(y)) -> (Molecule(x) & Recognizes(x,y) & RequiresRejection(x,y)))", "score": 0}
{"id": "eqasc_train_11394", "prediction": "all x.(Antigen(x) -> PromptsBodyToProduceAntibodies(x))", "score": 0}
{"id": "eqasc_train_11395", "prediction": "all x.(Antigen(x) -> PromptsProductionOfAntibodies(x))", "score": 0}
{"id": "eqasc_train_11396", "prediction": "all x.(Bodies(x) -> PhysicalEntity(x))", "score": 0}
{"id": "eqasc_train_11397", "prediction": "all x.(Antigen(x) -> (Molecule(x) & RecognizesFreshToPhysicalEntity(x)))", "score": 0}
{"id": "eqasc_train_11398", "prediction": "all x.(Antigen(x) -> (Carbohydrate(x) | Protein(x)))", "score": 0}
{"id": "eqasc_train_11399", "prediction": "all x.((Molecule(x) & (Carbohydrate(x) | Protein(x))) -> RecognizedByImmuneSystem(x))", "score": 0}
{"id": "eqasc_train_11400", "prediction": "all x.(Child(x) -> (Immune(x) | Defense(x)))", "score": 0}
{"id": "eqasc_train_11401", "prediction": "all x y.((Antigen(x) & DefenseSystem(y)) -> (Molecule(x,y) & RecognizesFrenchToBody(x,y)))", "score": 0}
{"id": "eqasc_train_11402", "prediction": "all x.((French(x) & Aliens(x)) -> CanBeIdentified(x))", "score": 0}
{"id": "eqasc_train_11403", "prediction": "all x.(Antigen(x) -> (Molecule(x) & RecognizesAlienToBody(x)))", "score": 0}
{"id": "eqasc_train_11404", "prediction": "all x.(HPVAntigen(x) -> E6Antigen(x))", "score": 0}
{"id": "eqasc_train_11405", "prediction": "all x y.((HPV(x) & ImmuneSystem(y)) -> RecognizedAsFrequentToBody(x,y))", "score": 0}
{"id": "eqasc_train_11406", "prediction": "all x.(Molecule(x) -> Atom(x))", "score": 0}
{"id": "eqasc_train_11407", "prediction": "all x.(Antigen(x) -> (Atoms(x) & ImmuneSystemRecognizesAsFrequentToBody(x)))", "score": 0}
{"id": "eqasc_train_11408", "prediction": "all x.(Antigen(x) -> (Protein(x) & ForeignToBody(x)))", "score": 1}
{"id": "eqasc_train_11409", "prediction": "all x.(Antigen(x) -> (Protein(x) & Protein(x)))", "score": 1}
{"id": "eqasc_train_11410", "prediction": "all x.(HeavyMetal(x) -> ForeignToBody(x))", "score": 0}
{"id": "eqasc_train_11411", "prediction": "all x.(HeavyMetal(x) -> Antigen(x))", "score": 0}
{"id": "eqasc_train_11412", "prediction": "all x y.((Egg(x) & Egg(y)) -> HeatsChemicalReaction(x,y))", "score": 0}
{"id": "eqasc_train_11413", "prediction": "all x.((Egg(x) & CookedInShell(x)) -> CanBlast(x))", "score": 0}
{"id": "eqasc_train_11414", "prediction": "all x y.((Egg(x) & Heating(x,y)) -> CanMakeEggExplosive(x))", "score": 0}
{"id": "eqasc_train_11415", "prediction": "all x.(ChemicalReaction(x) -> Exothermic(x))", "score": 0}
{"id": "eqasc_train_11416", "prediction": "all x y.((Egg(x) & Egg(y)) -> (Heating(x,y) & CausesExothermicReaction(x,y)))", "score": 0}
{"id": "eqasc_train_11417", "prediction": "all x.(Heat(x) -> CausesChemicalReactionsToAccelerate(x))", "score": 0}
{"id": "eqasc_train_11418", "prediction": "all x.((IncreaseInHeat(x) & Egg(y)) -> AcceleratesChemicalReaction(x,y))", "score": 0}
{"id": "eqasc_train_11419", "prediction": "all x.(HighHeat(x) -> (ProteinInEggs(x) & Tough(x) & Rubbery(x)))", "score": 0}
{"id": "eqasc_train_11420", "prediction": "all x y.((ChemicalReaction(x) & Egg(y)) -> CausesProteinToBecomeRoughAndRubby(x,y))", "score": 0}
{"id": "eqasc_train_11421", "prediction": "all x.(Heat(x) -> VeryImportantInCooking(x))", "score": 0}
{"id": "eqasc_train_11422", "prediction": "all x y.((Egg(x) & Cooking(x,y)) -> CausesChemicalReaction(x,y))", "score": 0}
{"id": "eqasc_train_11423", "prediction": "all x y.((Fire(x) & Egg(y)) -> Heats(x,y))", "score": 0}
{"id": "eqasc_train_11424", "prediction": "all x y.((Egg(x) & Cooking(x,y)) -> CausesChemicalReaction(x,y))", "score": 0}
{"id": "eqasc_train_11425", "prediction": "all x y.((Egg(x) & Heating(y)) -> ChemicalChange(x,y))", "score": 0}
{"id": "eqasc_train_11426", "prediction": "all x y.((Pasta(x) & Cooking(x)) -> WarmsOilOverMediumHeat(x,y))", "score": 0}
{"id": "eqasc_train_11427", "prediction": "all x y z.((WarmingInSpank(x) & Pancake(y) & Egg(z)) -> CausesChemicalReactionIn(x,y,z))", "score": 0}
{"id": "eqasc_train_11428", "prediction": "all x.(Insect(x) -> HatchesFromEggs(x))", "score": 0}
{"id": "eqasc_train_11429", "prediction": "all x y.((Heat(x) & Insect(y)) -> CausesToHatch(x,y))", "score": 0}
{"id": "eqasc_train_11430", "prediction": "all x.((OverMediumHeat(x) & ScrambleEggs(x)) -> OverMediumHeat(x))", "score": 0}
{"id": "eqasc_train_11431", "prediction": "all x.(ScrambledEggs(x) -> ChemicalReaction(x))", "score": 0}
{"id": "eqasc_train_11432", "prediction": "all x.(PopulationSizeInfluencesSurvivalChance(x) -> Species(x))", "score": 0}
{"id": "eqasc_train_11433", "prediction": "all x.(PopulationSizeInfluencesChancesOfLiving(x) -> InfluencesChancesOfLiving(x))", "score": 0}
{"id": "eqasc_train_11434", "prediction": "all x.(Species(x) -> (LastsForTime(x) & SurvivesToPresent(x) & GoesExtinct(x)))", "score": 0}
{"id": "eqasc_train_11435", "prediction": "all x.(PopulationSizeInfluencesChancesOfGoingExtinct(x) -> InfluencesChancesOfGoingExtinct(x))", "score": 0}
{"id": "eqasc_train_11436", "prediction": "all x.(Human(x) -> SameSpecies(x))", "score": 0}
{"id": "eqasc_train_11437", "prediction": "all x.(PopulationSizeInfluencesChancesOfSurvival(x) -> HumansSurvival(x))", "score": 0}
{"id": "eqasc_train_11438", "prediction": "all x.((Species(x) & Diversity(x)) -> EssentialForSurvival(x))", "score": 0}
{"id": "eqasc_train_11439", "prediction": "all x y.((PopulationSize(x) & Species(y)) -> InfluencesChancesOfDiversity(x,y))", "score": 0}
{"id": "eqasc_train_11440", "prediction": "all x.(Estuary(x) -> CriticalForSurvivalOfManySpecies(x))", "score": 0}
{"id": "eqasc_train_11441", "prediction": "all x y.((Estuary(x) & Species(y)) -> AllowsAppropriatePopulationSize(x,y))", "score": 0}
{"id": "eqasc_train_11442", "prediction": "all x y.((Bee(x) & Species(y)) -> ColorsVariates(x,y))", "score": 0}
{"id": "eqasc_train_11443", "prediction": "all x.(BeePopulationSizeInfleuncesSurvivalChance(x) -> InfleuncesSurvivalChance(x))", "score": 0}
{"id": "eqasc_train_11444", "prediction": "AllSeasons(Flowers)", "score": 0}
{"id": "eqasc_train_11445", "prediction": "all x.(PopulationSizeInfluencesChancesOfFlowersSurviving(x) -> InfluencesChancesOfFlowersSurviving(x))", "score": 0}
{"id": "eqasc_train_11446", "prediction": "all x.(EconomicMigration(x) -> AffectsPopulationSize(x))", "score": 0}
{"id": "eqasc_train_11447", "prediction": "all x y.((Species(x) & Migratory(y)) -> InfluencesChancesOfSurvival(x,y))", "score": 0}
{"id": "eqasc_train_11448", "prediction": "all x y.((Bacteria(x) & Food(y)) -> CausesToSpoil(x,y))", "score": 0}
{"id": "eqasc_train_11449", "prediction": "all x.((Food(x) & (Smells(x) | LooksSpoiled(x))) -> ThrowsOut(x))", "score": 0}
{"id": "eqasc_train_11450", "prediction": "all x.(Bacteria(x) -> CausesFoodToBeThrewOut(x))", "score": 0}
{"id": "eqasc_train_11451", "prediction": "all x.((Bacteria(x) & HigherTemperature(x)) -> Thrives(x))", "score": 0}
{"id": "eqasc_train_11452", "prediction": "all x.(HigherTemperature(x) -> CausesFoodToSpoil(x))", "score": 0}
{"id": "eqasc_train_11453", "prediction": "all x.(Bacteria(x) -> LovesWarmMoistPlace(x))", "score": 0}
{"id": "eqasc_train_11454", "prediction": "all x.((Warmth(x) & Moisture(x)) -> SpottedFood(x))", "score": 0}
{"id": "eqasc_train_11455", "prediction": "all x.(BacteriaResistantPlastics(x) -> (InhibitsGrowthOfBacteria(x) & InhibitsGrowthOfMolds(x)))", "score": 0}
{"id": "eqasc_train_11456", "prediction": "all x.(Plastic(x) -> PreventsSpoilage(x))", "score": 0}
{"id": "eqasc_train_11457", "prediction": "all x.(Milk(x) -> (LoadedWithBacteria(x) & QuicklySpoiled(x) & Undrinkable(x)))", "score": 1}
{"id": "eqasc_train_11458", "prediction": "all x.((Milk(x) & Bacteria(x)) -> Undrinkable(x))", "score": 1}
{"id": "eqasc_train_11459", "prediction": "all x.(Honey(x) -> -Spoils(x))", "score": 0}
{"id": "eqasc_train_11460", "prediction": "all x.(Honey(x) -> -Bacteria(x))", "score": 0}
{"id": "eqasc_train_11461", "prediction": "all x.((Food(x) & HighTemperature(x)) -> SpoilsQuickly(x))", "score": 0}
{"id": "eqasc_train_11462", "prediction": "all x.((Bacteria(x) & HighTemperature(x)) -> MoreActiveAt(x,y))", "score": 0}
{"id": "eqasc_train_11463", "prediction": "all x.(Water(x) -> (TestsColiformBacteria(x) & TestsFecalBacteria(x)))", "score": 0}
{"id": "eqasc_train_11464", "prediction": "all x.(Coliform(x) -> CausesFoodToSpoil(x))", "score": 0}
{"id": "eqasc_train_11465", "prediction": "all x.(Bacteria(x) -> CausesFoodPoisoning(x))", "score": 0}
{"id": "eqasc_train_11466", "prediction": "all x.(Touch(x) -> SensitsPressure(x))", "score": 0}
{"id": "eqasc_train_11467", "prediction": "all x.(TherapeuticalTouch(x) -> CanActivateInherentHealingAbility(x))", "score": 0}
{"id": "eqasc_train_11468", "prediction": "all x.((SensePressure(x) & HelpsClientsHeal(x)) -> HelpsHeal(x))", "score": 0}
{"id": "eqasc_train_11469", "prediction": "all x.(TactileSense(x) -> LearnsFromEnvironment(x))", "score": 0}
{"id": "eqasc_train_11470", "prediction": "all x.(TactileSense(x) -> (SensesPressure(x) & SensePressure(x)))", "score": 0}
{"id": "eqasc_train_11471", "prediction": "all x.(ThreadLikeNervous(x) -> (SensesPain(x) & SenseTouch(x) & SenseTemperature(x) & SensePressure(x)))", "score": 0}
{"id": "eqasc_train_11472", "prediction": "all x.(ThreadLikeNervous(x) -> FeelsPressure(x))", "score": 0}
{"id": "eqasc_train_11473", "prediction": "all x.(Pressure(x) -> ForcePerArea(x))", "score": 0}
{"id": "eqasc_train_11474", "prediction": "all x.(Touch(x) -> SenseForce(x))", "score": 0}
{"id": "eqasc_train_11475", "prediction": "all x.((NerveDamage(x) & ReducesAbilityToTouchOrPain(x)) -> VeryDangerous(x))", "score": 0}
{"id": "eqasc_train_11476", "prediction": "all x.(Nervous(x) -> CanSensePressure(x))", "score": 0}
{"id": "eqasc_train_11477", "prediction": "all x.(Mole(x) -> (FindsPrey(x) & UsesSenseOfTouch(x)))", "score": 0}
{"id": "eqasc_train_11478", "prediction": "all x y.((Mole(x) & Prey(y)) -> (Finds(x,y) & UsesAptitudeToSensePressure(x)))", "score": 0}
{"id": "eqasc_train_11479", "prediction": "all x.(Touch(x) -> SkinSense(x))", "score": 0}
{"id": "eqasc_train_11480", "prediction": "all x.(Skin(x) -> sensesPressure(x))", "score": 0}
{"id": "eqasc_train_11481", "prediction": "all x.(TouchGene(x) -> NeededForTouchCellFunction(x))", "score": 0}
{"id": "eqasc_train_11482", "prediction": "all x.((Genes(x,12)) -> SensitivityToPressure(x))", "score": 0}
{"id": "eqasc_train_11483", "prediction": "all x.(Plastic(x) -> (MadeFromPetroleum(x) & ProducesToxicWaste(x)))", "score": 0}
{"id": "eqasc_train_11484", "prediction": "all x.(ToxicWaste(x) -> (CausesIllness(x) | CausesDeath(x)))", "score": 0}
{"id": "eqasc_train_11485", "prediction": "all x.(Plastic(x) -> (MadeFromPetroleum(x) & CanCauseIllness(x)))", "score": 0}
{"id": "eqasc_train_11486", "prediction": "all x.(PlasticBag(x) -> (MadeFromNonRenewablePetroleumResources(x)))", "score": 0}
{"id": "eqasc_train_11487", "prediction": "all x.((Resource(x) & PlasticBag(x)) -> NonRenewable(x))", "score": 0}
{"id": "eqasc_train_11488", "prediction": "all x.(Plastic(x) -> ContributesToLandfillWaste(x))", "score": 0}
{"id": "eqasc_train_11489", "prediction": "all x.((Product(x) & MadeFromPetroleum(x)) -> ContributesToLandfillWaste(x))", "score": 0}
{"id": "eqasc_train_11490", "prediction": "all x.(Petroleum(x) -> FossilFuel(x))", "score": 0}
{"id": "eqasc_train_11491", "prediction": "all x.(Plastic(x) -> (MadeFromFossilFuels(x) & MadeFromFossilFuels(x)))", "score": 0}
{"id": "eqasc_train_11492", "prediction": "all x.(CrudePetroleum(x) -> ImportedForRefining(x))", "score": 0}
{"id": "eqasc_train_11493", "prediction": "all x.((MakingPlastic(x) & RequiresRefining(x)) -> RequiresRefining(x))", "score": 0}
{"id": "eqasc_train_11494", "prediction": "all x.(PollutionIssue(x) -> (ToxicWasteDisposal(x)))", "score": 0}
{"id": "eqasc_train_11495", "prediction": "all x.(Plastic(x) -> (MadeFromPetroleum(x) & ProducesPollution(x)))", "score": 0}
{"id": "eqasc_train_11496", "prediction": "all x.(Petrochemical(x) -> (CreatedFromPetrochemical(x) & CreatedFromPetrochemical(x)))", "score": 0}
{"id": "eqasc_train_11497", "prediction": "all x.(Plastic(x) -> (Petrochemical(x) & ProducesToxicWaste(x)))", "score": 0}
{"id": "eqasc_train_11498", "prediction": "all x y.((Flower(x) & Purpose(y)) -> ProducesSeeds(x,y))", "score": 0}
{"id": "eqasc_train_11499", "prediction": "all x.(Seed(x) -> GrowsIntoNewPlant(x))", "score": 0}
{"id": "eqasc_train_11500", "prediction": "all x.(Flower(x) -> MakesNewPlants(x))", "score": 0}
{"id": "eqasc_train_11501", "prediction": "exists x.(Plant(x) & (ReproducedUsingSeeds(x) | ReproducedUsingPieceOfPlant(x)))", "score": 0}
{"id": "eqasc_train_11502", "prediction": "all x.(Flower(x) -> Reproduce(x))", "score": 0}
{"id": "eqasc_train_11503", "prediction": "all x.(Seed(x) -> SuccessfulSexualReproduction(x))", "score": 0}
{"id": "eqasc_train_11504", "prediction": "all x.(Flower(x) -> (SuccessfullyReproduce(x) & Flower(x)))", "score": 0}
{"id": "eqasc_train_11505", "prediction": "all x.(Tulip(x) -> ProducesSeeds(x))", "score": 0}
{"id": "eqasc_train_11506", "prediction": "all x y.((Animal(x) & Seed(y)) -> (Eats(x,y) & WeaksStomachAcids(x,y)))", "score": 0}
{"id": "eqasc_train_11507", "prediction": "all x.(Flower(x) -> FeedsSmallAnimals(x))", "score": 0}
{"id": "eqasc_train_11508", "prediction": "all x.(Reproduction(x) -> (Seeds(x) & SpreadsRhizomes(x)))", "score": 0}
{"id": "eqasc_train_11509", "prediction": "all x.(Flower(x) -> Reproduction(x))", "score": 0}
{"id": "eqasc_train_11510", "prediction": "all x.(Flower(x) -> Reproduce(x))", "score": 0}
{"id": "eqasc_train_11511", "prediction": "all x.(Job(x) -> (HasMeaning(x) & HasPurpose(x)))", "score": 0}
{"id": "eqasc_train_11512", "prediction": "all x.(Flower(x) -> ProducesSeeds(x))", "score": 0}
{"id": "eqasc_train_11513", "prediction": "all x.((SeedProduction(x) & Seeding(x)) -> (Good(x) & Propagation(x)))", "score": 0}
{"id": "eqasc_train_11514", "prediction": "all x y.((Flower(x) & Purpose(y)) -> ProducesForPropagation(x,y))", "score": 0}
{"id": "eqasc_train_11515", "prediction": "all x.((Gymnosperm(x) | FloweringPlant(x)) -> ReproducesBySeeds(x))", "score": 0}
{"id": "eqasc_train_11516", "prediction": "all x.(Reproduction(x) -> (ComesFromSeeds(x) & Seeds(x)))", "score": 0}
{"id": "eqasc_train_11517", "prediction": "all x.(PlantsSeeds(x) -> (StudiesSeeds(x) & StudiesSeedGrowth(x)))", "score": 0}
{"id": "eqasc_train_11518", "prediction": "all x.(Flower(x) -> Planted(x))", "score": 0}
{"id": "eqasc_train_11519", "prediction": "all x.(Grain(x) -> SeedPartOfPlants(x))", "score": 0}
{"id": "eqasc_train_11520", "prediction": "all x.(Flower(x) -> ProducesGrain(x))", "score": 0}
{"id": "eqasc_train_11521", "prediction": "all x.(Fertilized(x) -> (Cone(x) | Seed(x)) & CreatesNewPlant(x)))", "score": -1}
{"id": "eqasc_train_11522", "prediction": "all x.(Flower(x) -> CreatesNewPlants(x))", "score": 0}
{"id": "eqasc_train_11523", "prediction": "all x.((ServesPurpose(x) & Uses(x)) -> Uses(x))", "score": 0}
{"id": "eqasc_train_11524", "prediction": "all x.(Flower(x) -> ProducesSeeds(x))", "score": 0}
{"id": "eqasc_train_11525", "prediction": "all x.(Seed(x) -> MatureOvule(x))", "score": 0}
{"id": "eqasc_train_11526", "prediction": "all x.(Flower(x) -> ProducesMatureOvules(x))", "score": 0}
{"id": "eqasc_train_11527", "prediction": "all x y.((VenueDeposit(x) & Gold(y) & Silver(y)) -> FormedByIgneousIntrusion(x,y))", "score": 0}
{"id": "eqasc_train_11528", "prediction": "all x.((Gold(x) | Silver(x)) -> (PreciousMetal(x) | NobleMetal(x)))", "score": 0}
{"id": "eqasc_train_11529", "prediction": "all x y.((VineDeposit(x) & PreciousMetal(y)) -> FormedByIgneousIntrusion(x,y))", "score": 0}
{"id": "eqasc_train_11530", "prediction": "all x.(Jewelry(x) -> ((MadeOfSilver(x) | MadeOfGold(x) | MadeOfPlatinum(x)) & SetWithPreciousStones(x)))", "score": 0}
{"id": "eqasc_train_11531", "prediction": "all x.(SilverJewelry(x) -> -MadeWithIgneousIntrusion(x))", "score": 0}
{"id": "eqasc_train_11532", "prediction": "all x.(IntrusiveIgneousRock(x) -> FormsUnderground(x))", "score": 0}
{"id": "eqasc_train_11533", "prediction": "all x y.((VineDeposit(x) & (Gold(y) | Silver(y))) -> FormedUnderground(x))", "score": 0}
{"id": "eqasc_train_11534", "prediction": "all x.((Magma(x) & CoolsSlowlyBelowSurface(x)) -> ProducesGrainyGrainedIntrusiveIgneousRocks(x))", "score": 0}
{"id": "eqasc_train_11535", "prediction": "all x.((VeinDeposit(x) & (Gold(x) | Silver(x))) -> CoolsMagma(x))", "score": 0}
{"id": "eqasc_train_11536", "prediction": "all x.((VeinDeposit(x) & (Gold(x) | Silver(x))) -> FormedUnderground(x))", "score": 0}
{"id": "eqasc_train_11537", "prediction": "all x.((GoldOre(x) & CracksAndFissures(x)) -> MostCommonlyOccur(x))", "score": 0}
{"id": "eqasc_train_11538", "prediction": "all x y.((GoldDeposit(x) & Fissure(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_train_11539", "prediction": "all x.(MagmaSolidifiesWithinCrust(x) -> IntrusiveIgneousRock(x))", "score": 0}
{"id": "eqasc_train_11540", "prediction": "all x y.((VenueDeposit(x) & Gold(y)) -> FormedByMagma(x,y))", "score": 0}
{"id": "eqasc_train_11541", "prediction": "all x.((Gold(x) | Silver(x)) -> ValuableProduct(x))", "score": 0}
{"id": "eqasc_train_11542", "prediction": "all x.(IgneousIntrusion(x) -> CreatesValuableProducts(x))", "score": 0}
{"id": "eqasc_train_11543", "prediction": "all x.(IntrusiveIgneousRock(x) -> AccountsForHigherElevation(x))", "score": 0}
{"id": "eqasc_train_11544", "prediction": "all x y.((VineDeposit(x) & (Gold(y) | Silver(y))) -> FormedInHigherElevations(x,y))", "score": 0}
{"id": "eqasc_train_11545", "prediction": "(IntrusiveIgneousRock(Granite) & IntrusiveIgneousRock(Granite))", "score": 0}
{"id": "eqasc_train_11546", "prediction": "all x y.((VineDeposit(x) & Granite(y)) -> (GoldAndSilver(x) & FormedBy(x,y)))", "score": 0}
{"id": "eqasc_train_11547", "prediction": "all x y.((Vane(x) & ElectricFan(y) & RotatingIn(x,y)) -> CausesAirMovement(x))", "score": 0}
{"id": "eqasc_train_11548", "prediction": "all x.(Fan(x) -> (MovesAir(x) & ProvidesCoolingBreeze(x)))", "score": 0}
{"id": "eqasc_train_11549", "prediction": "all x y.((Vane(x) & ElectricFan(y) & RotatesIn(x,y)) -> ProvidesCoolingBreeze(x))", "score": 0}
{"id": "eqasc_train_11550", "prediction": "all x.(Wind(x) -> AirMoving(x))", "score": 0}
{"id": "eqasc_train_11551", "prediction": "all x y.((Vane(x) & ElectricFan(y) & RotatingIn(x,y)) -> CausesWind(x))", "score": 0}
{"id": "eqasc_train_11552", "prediction": "all x y.((Blade(x) & Turning(x)) -> CausesAirMovement(x,y))", "score": 0}
{"id": "eqasc_train_11553", "prediction": "all x.(Turbine(x) -> (MakesWithCurvedVane(x) & CentralRotatingSpindle(x)))", "score": 0}
{"id": "eqasc_train_11554", "prediction": "all x y.((Turbine(x) & ElectricFan(y) & InElectricFan(x,y)) -> CausesAirToMove(x,y))", "score": 0}
{"id": "eqasc_train_11555", "prediction": "all x y.((CoolBreak(x) & Vanes(y) & ElectricFan(y)) -> Provides(x,y))", "score": 0}
{"id": "eqasc_train_11556", "prediction": "all x y.((Vane(x) & ElectricFan(y) & RotatingIn(x,y)) -> (CausesNitrogenMovement(x) & CausesOxygenMovement(x)))", "score": 0}
{"id": "eqasc_train_11557", "prediction": "all x y.((Fan(x) & Vacuum(y)) -> VariableOutput(x,y))", "score": 0}
{"id": "eqasc_train_11558", "prediction": "all x.(FanSpeedAdjustable(x) -> Adjustable(x))", "score": 0}
{"id": "eqasc_train_11559", "prediction": "all x.(ElectricFan(x) -> Makes180RevolutionsPerMinute(x))", "score": 0}
{"id": "eqasc_train_11560", "prediction": "all x y.((Vane(x) & Object(y) & RotatingIn(x,y) & 180RevolutionsPerMinute(x)) -> CausesAirToMove(x))", "score": 0}
{"id": "eqasc_train_11561", "prediction": "all x.(ComputerCase(x) -> CoolsTemperature(x))", "score": 0}
{"id": "eqasc_train_11562", "prediction": "all x y.((RotatingVane(x) & Computer(y)) -> MovesAirToCool(x,y))", "score": 0}
{"id": "eqasc_train_11563", "prediction": "all x y.((Vane(x) & FanSpinning(x) & Fan(y)) -> CausesAirMovement(x,y))", "score": 0}
{"id": "eqasc_train_11564", "prediction": "all x y.((Vane(x) & ElectricFan(y) & RotatesIn(x,y)) -> CausesWind(x))", "score": 0}
{"id": "eqasc_train_11565", "prediction": "all x.(Fan(x) -> (MovesAir(x) & IncreasesEvaporation(x) & DecreasesTemperature(x)))", "score": 0}
{"id": "eqasc_train_11566", "prediction": "all x.((Fan(x) & MoreAir(x)) -> GreaterDecreaseInTemperature(x))", "score": 0}
{"id": "eqasc_train_11567", "prediction": "all x.(AirSpeed(x) -> ContributesToCoolingSkinTemperature(x))", "score": 0}
{"id": "eqasc_train_11568", "prediction": "all x y.((ElectricFan(x) & HumanSkin(y)) -> CoolsDown(x,y))", "score": 0}
{"id": "eqasc_train_11569", "prediction": "all x.((AirMolecule(x) & Cool(x)) -> MovesSlowly(x))", "score": 0}
{"id": "eqasc_train_11570", "prediction": "all x.((Vane(x) & RotatesInElectricFan(x)) -> CausesAirMoleculesToCool(x))", "score": 0}
{"id": "eqasc_train_11571", "prediction": "all x y.((AirMovingThroughRoom(x) & Person(y)) -> FeelsLessShortOfBreath(y))", "score": 0}
{"id": "eqasc_train_11572", "prediction": "all x.(ElectricFan(x) -> HelpsPeopleShortOfBreath(x))", "score": 0}
{"id": "eqasc_train_11573", "prediction": "all x.(Air(x) -> (Gas(x) & HasPressure(x)))", "score": 0}
{"id": "eqasc_train_11574", "prediction": "all x y.((Vane(x) & ElectricFan(y) & RotatingIn(x,y)) -> CausesGasesToMove(x))", "score": 0}
{"id": "eqasc_train_11575", "prediction": "all x.(Balance(x) -> (SensesBodyPosition(x) & MaintainsBodyPosition(x)))", "score": 0}
{"id": "eqasc_train_11576", "prediction": "all x.(Balance(x) -> ProprioceptiveFunction(x))", "score": 0}
{"id": "eqasc_train_11577", "prediction": "all x.(ProprioceptiveFunction(x) -> (SensesBodyPosition(x) & MaintainsBodyPosition(x)))", "score": 0}
{"id": "eqasc_train_11578", "prediction": "all x.(InnerEarProblem(x) -> CanAffectBalance(x))", "score": 0}
{"id": "eqasc_train_11579", "prediction": "all x.(InnerEarProblem(x) -> (AffectsAbilityToSenseAndMaintainBodyPosition(x) & AffectsAbilityToMaintainBodyPosition(x)))", "score": 0}
{"id": "eqasc_train_11580", "prediction": "all x.(InnerEar(x) -> Balance(x))", "score": 0}
{"id": "eqasc_train_11581", "prediction": "all x.(InnerEar(x) -> (HelpsSensing(x) & HelpsMaintainBodyPosition(x)))", "score": 0}
{"id": "eqasc_train_11582", "prediction": "(all x.((Skiing(x) & Balance(x)) -> Important(x)) & all y.((Skiing(y) & Life(y)) -> Important(y)))", "score": 0}
{"id": "eqasc_train_11583", "prediction": "all x.((Skiing(x) & AptitudeToSenseAndMaintainBodyPosition(x)) -> ImportantInSkiing(x))", "score": 0}
{"id": "eqasc_train_11584", "prediction": "all x.((Person(x) & LosesSenseOfBalance(x)) -> Fall(x))", "score": 0}
{"id": "eqasc_train_11585", "prediction": "all x.((AbilityToSenseAndMaintainBodyPosition(x) & PeopleFalling(x)) -> PreventsFalling(x))", "score": 0}
{"id": "eqasc_train_11586", "prediction": "all x.(ProprioceptiveFunction(x) -> (AllowsSenseAndMaintainBodyPosition(x) & AllowsMaintainBodyPosition(x)))", "score": 0}
{"id": "eqasc_train_11587", "prediction": "all x.(MotionSickness(x) -> RelationshipToSenseOfBalance(x))", "score": 0}
{"id": "eqasc_train_11588", "prediction": "all x.(MotionSickness(x) -> Balanced(x))", "score": 0}
{"id": "eqasc_train_11589", "prediction": "all x.(Balance(x) -> (MaintainsEquilibrium(x) & RemainsInStableUprightPosition(x)))", "score": 0}
{"id": "eqasc_train_11590", "prediction": "all x.((AbilityToMaintainEquilibrium(x) & AbilityToSenseAndMaintainBodyPosition(x)) -> AbilityToMaintainBodyPosition(x))", "score": 0}
{"id": "eqasc_train_11591", "prediction": "all x.(Ski(x) -> MaintainsBodyPosition(x))", "score": 0}
{"id": "eqasc_train_11592", "prediction": "all x.(SenseOfBodyPosition(x) -> Proprioception(x))", "score": 0}
{"id": "eqasc_train_11593", "prediction": "all x.(Balance(x) -> InvolvesProprioception(x))", "score": 0}
{"id": "eqasc_train_11594", "prediction": "all x.(BodyPosition(x) -> Critical(x))", "score": 0}
{"id": "eqasc_train_11595", "prediction": "all x.(Balance(x) -> Critical(x))", "score": 0}
{"id": "eqasc_train_11596", "prediction": "all x y z.((BurriedUnderSoilAndMud(x) & Vegetation(y) & Swamp(z) & ExtremeHeatAndPressure(y,z)) -> ChangesIntoPeatThroughExtremePressureAndSwamp(x,y,z))", "score": 0}
{"id": "eqasc_train_11597", "prediction": "all x.(Soil(x) -> (Mats(x) & AcidicSemiDecayedVegetation(x) & Peat(x)))", "score": 0}
{"id": "eqasc_train_11598", "prediction": "all x y.((DecayedVegetation(x) & Swamp(y)) -> TurnsToPeat(x,y))", "score": 0}
{"id": "eqasc_train_11599", "prediction": "all x.(Coal(x) -> (BurnedUnderSoil(x) & UnderSoil(x)))", "score": 0}
{"id": "eqasc_train_11600", "prediction": "all x.((PeatMoss(x) & FromBoods(x)) -> (UsefulInGardens(x) & AlternativeFuelSource(x)))", "score": 0}
{"id": "eqasc_train_11601", "prediction": "all x y.((BurnedUnderSoil(x) & Vegetation(y)) -> ChangesIntoFuel(x,y))", "score": 0}
{"id": "eqasc_train_11602", "prediction": "all x.(Boot(x) -> ComposedOfPat(x))", "score": 0}
{"id": "eqasc_train_11603", "prediction": "all x y.((BurnedUnderSoil(x) & BuriedUnderMod(x) & Vegetation(y) & ExtremePressureHeat(x)) -> ChangesIntoBobogs(x,y))", "score": 0}
{"id": "eqasc_train_11604", "prediction": "all x.((Fossil(x) & BuriedUnderSandAndMud(x)) -> Preserved(x))", "score": 0}
{"id": "eqasc_train_11605", "prediction": "all x y.((Plant(x) & PreservedUnderManyLayers(x) & Vegetation(y) & ExtremeHeatAndPressure(x)) -> ChangesIntoPat(x,y))", "score": 0}
{"id": "eqasc_train_11606", "prediction": "all x.((Moss(x) & LongTime(x)) -> FormsIntoPeat(x))", "score": 0}
{"id": "eqasc_train_11607", "prediction": "all x.(Moss(x) -> FormsIntoPeat(x))", "score": 0}
{"id": "eqasc_train_11608", "prediction": "all x.(Wetland(x) -> (Swamp(x) | Marshes(x)))", "score": 0}
{"id": "eqasc_train_11609", "prediction": "all x y.((BurnedVegetation(x) & Wetland(y)) -> ChangesToPat(x,y))", "score": 0}
{"id": "eqasc_train_11610", "prediction": "all x.(FossilFuel(x) -> (Concentration(x,peat) & Concentration(x,coal) & Concentration(x,oil) & Concentration(x,naturalGas)))", "score": 0}
{"id": "eqasc_train_11611", "prediction": "all x y.((Plant(x) & Soil(y) & Mud(x)) -> (BurnedUnder(x,y) & ChangesVegetationIntoFossilFuels(x)))", "score": 0}
{"id": "eqasc_train_11612", "prediction": "all x.((Vegetation(x) | Plants(x)) -> AbundunceInTundra(x))", "score": 0}
{"id": "eqasc_train_11613", "prediction": "all x y z.((BurnedUnderSoilAndMmud(x) & Plants(y) & Swamp(z) & ExtremeHeatAndPressure(y,z)) -> ChangesIntoPeat(y,z))", "score": 0}
{"id": "eqasc_train_11614", "prediction": "all x.(Boot(x) -> (CupuchLikeVegetation(x) & AccumulationOfPat(x)))", "score": 0}
{"id": "eqasc_train_11615", "prediction": "all x y z.((BoundUnderSoil(x) & Mud(y) & Bog(z) & ExtremeHeat(z)) -> ChangesBodsThroughExtremeHeat(z))", "score": 0}
{"id": "eqasc_train_11616", "prediction": "all x y z.((ExtremeHeat(x) & Pressure(y) & Swamp(z) & LongPeriodOfTime(z) & InSwamp(x,y,z)) -> CreatesBoops(x))", "score": 0}
{"id": "eqasc_train_11617", "prediction": "all x y z.((Moss(x) & Heat(y) & Pressure(z)) -> TransformedThroughExtremeHeatAndPressure(x,y,z))", "score": 0}
{"id": "eqasc_train_11618", "prediction": "all x y.((KeepsFoodCold(x) & Food(y)) -> KeepsFoodFresh(x,y))", "score": 0}
{"id": "eqasc_train_11619", "prediction": "all x.(FoodSafetyZone(x) -> (Above165F(x) & Under40F(x)))", "score": 0}
{"id": "eqasc_train_11620", "prediction": "all x.((Food(x) & FreshUnder40Degrees(x)) -> StaysFresh(x))", "score": 0}
{"id": "eqasc_train_11621", "prediction": "all x.(Sulfite(x) -> (KeepsFoodsFreshLooking(x) & HelpsPreventBacteriaGrowing(x)))", "score": 0}
{"id": "eqasc_train_11622", "prediction": "all x.((KeepFoodCold(x) & PreventsBacteriaGrowing(x)) -> KeepFoodCold(x))", "score": 0}
{"id": "eqasc_train_11623", "prediction": "all x.(Refrigerator(x) -> KeepsFoodCold(x))", "score": 0}
{"id": "eqasc_train_11624", "prediction": "all x.(Refrigerator(x) -> KeepsFoodFresh(x))", "score": 0}
{"id": "eqasc_train_11625", "prediction": "all x.((Refrigerator(x) & KeepsFoodCold(x)) -> Refrigerator(x))", "score": 0}
{"id": "eqasc_train_11626", "prediction": "all x.(Refrigerator(x) -> (KeepsFoodFresh(x) & KeepsFoodFresh(x)))", "score": 0}
{"id": "eqasc_train_11627", "prediction": "all x.((Fridge(x) & TemperatureAdequateForFoodStorage(x)) -> Inspection(x))", "score": 0}
{"id": "eqasc_train_11628", "prediction": "all x.((Fridge(x) & KeepsCold(x)) -> StoresAdequately(x))", "score": 0}
{"id": "eqasc_train_11629", "prediction": "all x.(Refrigerator(x) -> AddsColdnessToFood(x))", "score": 0}
{"id": "eqasc_train_11630", "prediction": "all x.(Refrigerator(x) -> (KeepsFoodFresh(x) & KeepsFoodFresh(x)))", "score": 0}
{"id": "eqasc_train_11631", "prediction": "all x.((Food(x) & Fresh(x) & Simple(x) & Natural(x)) -> KeepsFresh(x))", "score": 0}
{"id": "eqasc_train_11632", "prediction": "all x.((Food(x) & Cold(x)) -> (KeepsFoodSimple(x) & KeepsFoodNatural(x)))", "score": 0}
{"id": "eqasc_train_11633", "prediction": "all x y.((Beach(x) & Surface(y)) -> FormedByMechanicalWeathering(x,y))", "score": 0}
{"id": "eqasc_train_11634", "prediction": "all x.(Beach(x) -> WhiteCoralSand(x))", "score": 0}
{"id": "eqasc_train_11635", "prediction": "all x y.((Coral(x) & MechanicalWeathering(y)) -> TurnedToSand(x,y))", "score": 0}
{"id": "eqasc_train_11636", "prediction": "all x y.((Sandy(x) & DustySurface(y)) -> (GetsHotter(x,y) & BeachSand(y)))", "score": 0}
{"id": "eqasc_train_11637", "prediction": "all x.((Sand(x) | Dust(x)) -> FormedByMechanicalWeathering(x))", "score": 0}
{"id": "eqasc_train_11638", "prediction": "all x.(Sand(x) -> FormedByMechanicalWeathering(x))", "score": 0}
{"id": "eqasc_train_11639", "prediction": "all x.(Beach(x) -> (AnymoreSand(x) & CommonMaterial(x)))", "score": 0}
{"id": "eqasc_train_11640", "prediction": "all x.((Beach(x) | SandDunes(x)) -> (AccumulationsOfSandBlownByWind(x)))", "score": 0}
{"id": "eqasc_train_11641", "prediction": "all x.(SandFormation(x) -> FormedByWind(x))", "score": 0}
{"id": "eqasc_train_11642", "prediction": "all x y.((Beach(x) & Surface(y)) -> FormedByWater(y))", "score": 0}
{"id": "eqasc_train_11643", "prediction": "& that sand is available to redeposit on beaches.", "score": -1}
{"id": "eqasc_train_11644", "prediction": "all x.(MechanicalWaves(x) -> (WaterWaves(x) | WavesOnString(x) | SoundWaves(x)))", "score": 0}
{"id": "eqasc_train_11645", "prediction": "all x y.((Beach(x) & Surface(y)) -> FormedByWaterWaves(y))", "score": 0}
{"id": "eqasc_train_11646", "prediction": "all x y.((Beach(x) & Surface(y)) -> FormedByWaterForce(x,y))", "score": 0}
{"id": "eqasc_train_11647", "prediction": "all x.(Beach(x) -> DifferentRateOfBeachErosion(x))", "score": 0}
{"id": "eqasc_train_11648", "prediction": "all x y.((Weathering(x) & Rate(y)) -> Different(x,y))", "score": 0}
{"id": "eqasc_train_11649", "prediction": "all x.(Bone(x) -> (ProtectsSoftTissues(x) & ProtectsInternalOrgans(x)))", "score": 0}
{"id": "eqasc_train_11650", "prediction": "all x.(Antler(x) -> (TrueBone(x) & ComposedOfCalcium(x) & ComposedOfPhosphorus(x)))", "score": 0}
{"id": "eqasc_train_11651", "prediction": "all x y.((Calcium(x) & Phosphorus(y)) -> (ProtectsSoftTissues(x) & ProtectsInternalOrgans(x)))", "score": 0}
{"id": "eqasc_train_11652", "prediction": "all x y.((SkullBone(x) & Ribs(y)) -> (ProtectsBrain(x) & ProtectsThoracicOrgans(y)))", "score": 0}
{"id": "eqasc_train_11653", "prediction": "all x.(Rib(x) -> ProtectsInternalOrgans(x))", "score": 0}
{"id": "eqasc_train_11654", "prediction": "all x.((InternalOrgan(x) & Affected(x)) -> (Kneeps(x) | Lungs(x) | Heart(x) | Brain(x)))", "score": 0}
{"id": "eqasc_train_11655", "prediction": "all x.(Bone(x) -> ProvidesProtectionForHeart(x))", "score": 0}
{"id": "eqasc_train_11656", "prediction": "all x.((Vertebrae(x) | Ribs(x) | Appendages(x) | Jaw(x)) -> EndoskeletalBone(x))", "score": 0}
{"id": "eqasc_train_11657", "prediction": "all x.(Rib(x) -> ProvidesProtectionForInternalOrgans(x))", "score": 0}
{"id": "eqasc_train_11658", "prediction": "all x.(Bone(x) -> FormsSkeletonOfBody(x))", "score": 0}
{"id": "eqasc_train_11659", "prediction": "all x.(Skeleton(x) -> (ProtectsSoftTissues(x) & ProtectsInternalOrgans(x)))", "score": 0}
{"id": "eqasc_train_11660", "prediction": "all x.(SoftTissue(x) -> (SoftConnectiveTissues(x) | SoftSupportingTissues(x)))", "score": 0}
{"id": "eqasc_train_11661", "prediction": "all x.(Bone(x) -> (ProvidesMuscleProtection(x) & ProvidesInternalOrganProtection(x)))", "score": 0}
{"id": "eqasc_train_11662", "prediction": "all x.(Bone(x) -> ProvidesOuterShell(x))", "score": 0}
{"id": "eqasc_train_11663", "prediction": "all x.((SoftTissue(x) & InternalOrgan(x)) -> NeedsOuterShell(x))", "score": 0}
{"id": "eqasc_train_11664", "prediction": "all x.((BonesOfCranium(x) & IdentifyFaceBones(x)) -> IdentifyFaceBones(x))", "score": 0}
{"id": "eqasc_train_11665", "prediction": "all x.(Cranium(x) -> (ProtectsSoftTissues(x) & ProtectsInternalOrgans(x)))", "score": 0}
{"id": "eqasc_train_11666", "prediction": "all x y.((Bone(x) & Lung(y)) -> ProvidesProtection(x,y))", "score": 0}
{"id": "eqasc_train_11667", "prediction": "all x.(Heart(x) -> (ChairOrgan(x) & Rules(x)))", "score": 0}
{"id": "eqasc_train_11668", "prediction": "all x.(Bone(x) -> ProvidesProtectionForHeart(x))", "score": 0}
{"id": "eqasc_train_11669", "prediction": "all x.(BoneMatrix(x) -> (Collagen(x) & Minerals(x)))", "score": 0}
{"id": "eqasc_train_11670", "prediction": "all x.(Collagen(x) -> (ProtectsSoftTissues(x) & ProtectsInternalOrgans(x)))", "score": 0}
{"id": "eqasc_train_11671", "prediction": "all x.(Bone(x) -> ReservoirForCalcium(x))", "score": 0}
{"id": "eqasc_train_11672", "prediction": "all x y.((Reservoir(x) & Calcium(y)) -> (ProtectsSoftTissues(x) & ProtectsInternalOrgans(x)))", "score": 0}
{"id": "eqasc_train_11673", "prediction": "all x.(Fertilization(x) -> TakesPlaceInFemaleOrganism(x))", "score": 0}
{"id": "eqasc_train_11674", "prediction": "all x.(EyedEgg(x) -> FertileEgg(x))", "score": 0}
{"id": "eqasc_train_11675", "prediction": "all x.((FemaleOrganism(x) & ProducesEggs(x)) -> FemaleOrganism(x))", "score": 0}
{"id": "eqasc_train_11676", "prediction": "all x.(Fertilization(x) -> InVitroFertilization(x))", "score": 0}
{"id": "eqasc_train_11677", "prediction": "all x y.((Process(x) & FemaleOrganism(y) & OccursInVitro(x)) -> TakesPlaceInside(x,y))", "score": 0}
{"id": "eqasc_train_11678", "prediction": "all x y z.((Egg(x) & Sperm(y) & FemaleOrganism(z) & PenetratesBy(x,y)) -> TakesPlaceInside(y,z))", "score": 0}
{"id": "eqasc_train_11679", "prediction": "all x y.((HumanFemale(x) & Human(y)) -> FertilizationTakesPlaceIn(x,y))", "score": 0}
{"id": "eqasc_train_11680", "prediction": "all x y.((PenetrationOfEgg(x) & Sperm(y)) -> TakesPlaceInsideFemaleOrganism(x,y))", "score": 0}
{"id": "eqasc_train_11681", "prediction": "all x.(FertilizedEggs(x) -> CarriedOnFemale(x))", "score": 0}
{"id": "eqasc_train_11682", "prediction": "all x y.((Egg(x) & Female(y)) -> Carries(x,y))", "score": 0}
{"id": "eqasc_train_11683", "prediction": "all x y.((FattyTissue(x) & Woman(y)) -> ProducesFemaleHormones(x,y))", "score": 0}
{"id": "eqasc_train_11684", "prediction": "all x y.((Fertilization(x) & Woman(y)) -> TakesPlaceInside(x,y))", "score": 0}
{"id": "eqasc_train_11685", "prediction": "all x y.((Fertilization(x) & FemaleHuman(y)) -> TakesPlaceInsideOf(x,y))", "score": 0}
{"id": "eqasc_train_11686", "prediction": "all x y.((Fertilization(x) & DiploidZygote(y)) -> DevelopsIntoSporophyteGeneration(x,y))", "score": 0}
{"id": "eqasc_train_11687", "prediction": "all x y z.((Generation(x) & Zygote(y) & FemaleOrganism(z)) -> ProducedFrom(x,y,z))", "score": 0}
{"id": "eqasc_train_11688", "prediction": "all x.(Shark(x) -> (InternalFertilization(x) & GivesBirthToLiveYoung(x)))", "score": 0}
{"id": "eqasc_train_11689", "prediction": "all x.(FemaleShark(x) -> GivesLiveBirth(x))", "score": 0}
{"id": "eqasc_train_11690", "prediction": "all x.(Sunlight(x) -> UltimateEnergy(x))", "score": 0}
{"id": "eqasc_train_11691", "prediction": "all x.(AbsorbingEnergy(x) -> CausesHeat(x))", "score": 0}
{"id": "eqasc_train_11692", "prediction": "all x.(HeatTransfer(x) -> (WarmToCool(x)))", "score": 0}
{"id": "eqasc_train_11693", "prediction": "all x.((AbsorbingSunlight(x) & CoolObject(y)) -> WarmUp(y))", "score": 0}
{"id": "eqasc_train_11694", "prediction": "all x.(CollectorPanel(x) -> AbsorbsSunlightToHeatAir(x))", "score": 0}
{"id": "eqasc_train_11695", "prediction": "all x y z.((CollectorPanel(x) & Object(y) & Sunlight(z)) -> HeatsWith(x,y,z))", "score": 0}
{"id": "eqasc_train_11696", "prediction": "all x y.((DarkColoredRock(x) & Sunlight(y)) -> Absorbs(x,y))", "score": 0}
{"id": "eqasc_train_11697", "prediction": "all x y.((Heat(x) & DarkColoredRock(y)) -> AbsorbsBy(x,y))", "score": 0}
{"id": "eqasc_train_11698", "prediction": "all x.((Coat(x) & Black(x)) -> (AbsorbsSunlight(x) & Overheats(x)))", "score": 0}
{"id": "eqasc_train_11699", "prediction": "all x.(BlackObject(x) -> HeatsQuickly(x))", "score": 0}
{"id": "eqasc_train_11700", "prediction": "all x.((Object(x) & Heats(x) & Cooled(x)) -> Expands(x) & Contracts(x))", "score": 0}
{"id": "eqasc_train_11701", "prediction": "all x y.((Sunlight(x) & Object(y)) -> Absorbs(x,y))", "score": 1}
{"id": "eqasc_train_11702", "prediction": "all x.((Sunlight(x) & Instant(x)) -> TakesFull8MinutesToCrossMillionKilometers(x))", "score": 0}
{"id": "eqasc_train_11703", "prediction": "all x y.((Absorbs(x,y) & TakesEightMinutesToCross(x,y)) -> CausesObjectsToHeat(x))", "score": 0}
{"id": "eqasc_train_11704", "prediction": "all x.(Heat(x) -> CanDestroyTissue(x))", "score": 0}
{"id": "eqasc_train_11705", "prediction": "all x.(AbsorbingSunlight(x) -> CanDestroyTissue(x))", "score": 0}
{"id": "eqasc_train_11706", "prediction": "all x y.((Leaves(x) & Object(y)) -> CausesToHeat(x,y))", "score": 0}
{"id": "eqasc_train_11707", "prediction": "all x.(IgneousRock(x) -> FormedFromMagmaCooling(x))", "score": 4}
{"id": "eqasc_train_11708", "prediction": "all x.((Granite(x) | Basalt(x)) -> IgneousRock(x))", "score": 3}
{"id": "eqasc_train_11709", "prediction": "all x.(Basalt(x) -> FormedFromMagmaCooling(x))", "score": 1}
{"id": "eqasc_train_11710", "prediction": "all x.((Magma(x) & EruptsThroughVolcanoes(x)) -> Lava(x))", "score": 0}
{"id": "eqasc_train_11711", "prediction": "all x.(IgneousRock(x) -> (FormedByVolcanoes(x) & Erupting(x) & Lava(x)))", "score": 0}
{"id": "eqasc_train_11712", "prediction": "all x.(Magma(x) -> (ComesToRest(x) & Cools(x) & Solidifies(x)))", "score": 0}
{"id": "eqasc_train_11713", "prediction": "all x.(IgneousRock(x) -> (MagmaSolidifies(x) & FormedBy(x,Magma)))", "score": 0}
{"id": "eqasc_train_11714", "prediction": "all x.(Basalt(x) -> FormedFromMagmaCooling(x))", "score": 2}
{"id": "eqasc_train_11715", "prediction": "all x.(IgneousRock(x) -> CrystallizesFromMagmaFromMantle(x))", "score": 0}
{"id": "eqasc_train_11716", "prediction": "all x y.((Rock(x) & Crystallized(x)) -> (MadeByLava(x,y) & Mantle(y)))", "score": 0}
{"id": "eqasc_train_11717", "prediction": "all x.(Granite(x) -> IgneousRock(x))", "score": 1}
{"id": "eqasc_train_11718", "prediction": "all x.(Granite(x) -> FormedFromMagmaCooling(x))", "score": 1}
{"id": "eqasc_train_11719", "prediction": "all x.((Magma(x) & Cools(x) & Hardens(x)) -> IgneousRock(x))", "score": 0}
{"id": "eqasc_train_11720", "prediction": "all x y.((Magma(x) & IgneousRock(y)) -> TurnsInto(x,y))", "score": 0}
{"id": "eqasc_train_11721", "prediction": "all x.(IgneousRock(x) -> FormedByMagmaSolidification(x))", "score": 0}
{"id": "eqasc_train_11722", "prediction": "all x y.((Magma(x) & IgneousRock(y)) -> SolidifiesInto(x,y))", "score": 0}
{"id": "eqasc_train_11723", "prediction": "all x.(Urine(x) -> (LiquidWasteProduct(x) & ExcretedByUrineSystem(x)))", "score": 0}
{"id": "eqasc_train_11724", "prediction": "all x.(UrineTest(x) -> (DetectsDrugs(x,36) & UsedUpTo36Hours(x)))", "score": 0}
{"id": "eqasc_train_11725", "prediction": "all x y z.((UrinarySystem(x) & Substance(y) & DrugTesting(z)) -> Excretes(x,y,z))", "score": 0}
{"id": "eqasc_train_11726", "prediction": "all x.(LiquidWaste(x) -> (PassesThroughBlood(x) & PassesThroughUrinarySystem(x)))", "score": 0}
{"id": "eqasc_train_11727", "prediction": "all x y.((Urine(x) & Body(y)) -> LeavesThroughUrineSystem(x,y))", "score": 0}
{"id": "eqasc_train_11728", "prediction": "all x.(AcidUrine(x) -> (Darker(x) & AlkalineUrine(x)))", "score": 0}
{"id": "eqasc_train_11729", "prediction": "all x.(LiquidWaste(x) -> Acidic(x))", "score": 0}
{"id": "eqasc_train_11730", "prediction": "all x.((Urination(x) & DryEndOfPenis(x) & ReplaceForeskin(x)) -> Urination(x))", "score": 0}
{"id": "eqasc_train_11731", "prediction": "all x y.((LiquidWaste(x) & Penis(y)) -> ComesOutEndOf(x,y))", "score": 0}
{"id": "eqasc_train_11732", "prediction": "all x.(LiquidWaste(x) -> PutIntoB bladder(x))", "score": -1}
{"id": "eqasc_train_11733", "prediction": "all x.(Urine(x) -> (WasteProduct(x) & InB bladder(x) & ExcretedByUrbanSystem(x)))", "score": -1}
{"id": "eqasc_train_11734", "prediction": "all x.(NitrogenousWaste(x) -> LeavesBodyInUrine(x))", "score": 0}
{"id": "eqasc_train_11735", "prediction": "all x.(NitrogenousWaste(x) -> ExcretedInUrine(x))", "score": 0}
{"id": "eqasc_train_11736", "prediction": "all x y.((Mammal(x) & Urine(y)) -> ExcretesInWateryForm(x,y))", "score": 0}
{"id": "eqasc_train_11737", "prediction": "all x.(Urea(x) -> (WasteProduct(x) & ExcretedByUrinarySystem(x)))", "score": 0}
{"id": "eqasc_train_11738", "prediction": "all x.((HumanUrine(x) & EasilyAvailableLiquidManure(x)) -> AvailableIn(x,y))", "score": 0}
{"id": "eqasc_train_11739", "prediction": "all x.(RawilyAvailableLiquidManure(x) -> ProductOfBody(x))", "score": 0}
{"id": "eqasc_train_11740", "prediction": "all x y.((Water(x) & Mineral(y)) -> LostInUrine(y))", "score": 0}
{"id": "eqasc_train_11741", "prediction": "all x y.((Mineral(x) & UrineSystem(y)) -> ExcretedThrough(x,y))", "score": 0}
{"id": "eqasc_train_11742", "prediction": "all x.(SecondaryGrowth(x) -> (FormsSecondaryVascularTissues(x) & FormsBark(x)))", "score": 0}
{"id": "eqasc_train_11743", "prediction": "all x y.((SecondaryGrowth(x) & SeedPlant(y)) -> (ProducesWood(x,y) & ProducesBark(x,y)))", "score": 0}
{"id": "eqasc_train_11744", "prediction": "all x y.((SecondaryGrowth(x) & SeedPlant(y)) -> ProducesSecondaryVascularTissues(x,y))", "score": 0}
{"id": "eqasc_train_11745", "prediction": "all x.(Tree(x) -> HasBark(x))", "score": 0}
{"id": "eqasc_train_11746", "prediction": "all x.(Tree(x) -> HasSecondaryGrowth(x))", "score": 0}
{"id": "eqasc_train_11747", "prediction": "exists x.(Bamboo(x) | PalmTree(x)) & HasSecondaryGrowth(x))", "score": -1}
{"id": "eqasc_train_11748", "prediction": "all x.(SecondaryVascularTissues(x) -> (UsedByBamboo(x) | EmployedByPalmTrees(x)))", "score": 0}
{"id": "eqasc_train_11749", "prediction": "all x.(Tree(x) -> (UndergoesSecondaryGrowth(x) & ProducesWoodyBody(x)))", "score": 0}
{"id": "eqasc_train_11750", "prediction": "all x.(Tree(x) -> (FormsSecondaryVascularTissues(x) & FormsBark(x)))", "score": 0}
{"id": "eqasc_train_11751", "prediction": "all x.(Tree(x) -> (SecondaryGrowth(x) & FormsSecondaryVascularTissues(x)))", "score": 0}
{"id": "eqasc_train_11752", "prediction": "all x.(PalmTree(x) -> (FormsSecondaryVascularTissues(x) & FormsBark(x)))", "score": 0}
{"id": "eqasc_train_11753", "prediction": "all x y.((Growth(x) & OccursInLatinalMeristems(x)) -> (FormsVascularTissues(x) & Bark(x)))", "score": 0}
{"id": "eqasc_train_11754", "prediction": "all x.(VascularTissue(x) -> BloodVessel(x))", "score": 0}
{"id": "eqasc_train_11755", "prediction": "all x.(SecondaryGrowth(x) -> FormsSecondaryBloodVessels(x))", "score": 0}
{"id": "eqasc_train_11756", "prediction": "all x y.((AirPollution(x) & Soil(y)) -> CausesPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPPhPPhPPhPPhPPhPPhPPhPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP", "score": -1}
{"id": "eqasc_train_11757", "prediction": "all x.((Research(x) & SoilPhPeakLessThan(x,6)) -> DecreasesCropYields(x))", "score": 0}
{"id": "eqasc_train_11758", "prediction": "all x.(AirPollution(x) -> DecreaseInCropYields(x))", "score": 0}
{"id": "eqasc_train_11759", "prediction": "all x.(HighlyAcidSoil(x) -> (DetrimentalToCropGrowth(x) & DetrimentalToBiologicalActivity(x)))", "score": 0}
{"id": "eqasc_train_11760", "prediction": "all x.(AirPollution(x) -> (DetrimentalToCropGrowth(x) & CanBeDetrimentalToCropGrowth(x)))", "score": 0}
{"id": "eqasc_train_11761", "prediction": "exists x.(Soil(x) & MoreSensitiveToAcid(x))", "score": 0}
{"id": "eqasc_train_11762", "prediction": "exists x.(Soil(x) & SensitiveTo(x,loweredPH))", "score": 0}
{"id": "eqasc_train_11763", "prediction": "all x.(Incineration(x) -> ReleasesPollutantsIntoAir(x))", "score": 0}
{"id": "eqasc_train_11764", "prediction": "all x y.((Incineration(x) & Soil(y)) -> CausesPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPhPPh", "score": -1}
{"id": "eqasc_train_11765", "prediction": "all x.(Compost(x) -> BalancesPhP(x))", "score": 0}
{"id": "eqasc_train_11766", "prediction": "all x y.((AirPollution(x) & Compost(y)) -> BalancedBy(x,y))", "score": 0}
{"id": "eqasc_train_11767", "prediction": "(all x.(Acidity(x) -> DecreasesPHNumber(x)) & all y.(Alkalinity(y) -> IncreasesPHNumber(y)))", "score": 0}
{"id": "eqasc_train_11768", "prediction": "all x.(AirPollution(x) -> CausesSoilAcidityToIncrease(x))", "score": 0}
{"id": "eqasc_train_11769", "prediction": "all x.(IncineratedQuercetin(x) -> PollutesAir(x))", "score": 0}
{"id": "eqasc_train_11770", "prediction": "all x y.((IncineratedMercury(x) & Soil(y)) -> CausesPhDecrease(x,y))", "score": 0}
{"id": "eqasc_train_11771", "prediction": "all x.(Plant(x) -> UsesCellWalls(x,CellWalls))", "score": 0}
{"id": "eqasc_train_11772", "prediction": "all x.((Polysaccharide(x) & Cellulose(x)) -> Important(x))", "score": 0}
{"id": "eqasc_train_11773", "prediction": "all x.(Plant(x) -> UsesPolysaccharide(x))", "score": 0}
{"id": "eqasc_train_11774", "prediction": "all x.(PlantFiber(x) -> ComposedOfCellulose(x))", "score": 0}
{"id": "eqasc_train_11775", "prediction": "all x.(Fibre(x) -> (ComposedOfCellulose(x) & ComposedOfCellulose(x)))", "score": 0}
{"id": "eqasc_train_11776", "prediction": "all x.(Vegetation(x) -> (IncludesShrubs(x) | IncludesCactusPlants(x)))", "score": 0}
{"id": "eqasc_train_11777", "prediction": "all x.(Cactus(x) -> UsesCelluloseForCellWalls(x))", "score": 0}
{"id": "eqasc_train_11778", "prediction": "all x.(GreenBeans(x) -> UsesCellWalls(x,Cellulose))", "score": 0}
{"id": "eqasc_train_11779", "prediction": "all x.(Animal(x) -> LacksCellWalls(x))", "score": 0}
{"id": "eqasc_train_11780", "prediction": "all x.(Animal(x) -> LacksCellulose(x))", "score": 0}
{"id": "eqasc_train_11781", "prediction": "all x y.((Producer(x) & Cellulose(y)) -> UsesForCellWalls(x,y))", "score": 0}
{"id": "eqasc_train_11782", "prediction": "all x.(Fibre(x) -> Cellulose(x))", "score": 0}
{"id": "eqasc_train_11783", "prediction": "all x.(Fibre(x) -> (MadeFromCellWalls(x) & CellWalls(x)))", "score": 0}
{"id": "eqasc_train_11784", "prediction": "all x.(Bush(x) -> UsesCellWalls(x,Cellulose))", "score": 0}
{"id": "eqasc_train_11785", "prediction": "all x.(CellWall(x) -> Fiber(x))", "score": 0}
{"id": "eqasc_train_11786", "prediction": "all x y.((Plant(x) & Fiber(y)) -> UsesForCellWalls(x,y))", "score": 0}
{"id": "eqasc_train_11787", "prediction": "all x.(LeafBlade(x) -> (ContainsCellulose(x) & ContainsHemiCellulose(x) & BreakedDownByMicrobes(x)))", "score": 0}
{"id": "eqasc_train_11788", "prediction": "all x y.((Plant(x) & Microbe(y)) -> BreaksCellWallsBy(x,y))", "score": 0}
{"id": "eqasc_train_11789", "prediction": "all x y.((Liquid(x) & AddsSalt(x,y)) -> DecreasesMeltingPoint(x,y))", "score": 0}
{"id": "eqasc_train_11790", "prediction": "all x.(Water(x) -> Liquid(x))", "score": 0}
{"id": "eqasc_train_11791", "prediction": "all x y.((AddingSaltToWater(x) & Water(y)) -> DecreasesMeltingPoint(x,y))", "score": 0}
{"id": "eqasc_train_11792", "prediction": "all x.(Salt(x) -> (SodiumChloride(x) | NaCl(x)))", "score": 0}
{"id": "eqasc_train_11793", "prediction": "all x y.((Liquid(x) & Liquid(y)) -> AddsSodiumChlorideDecreasesMeltingPoint(x,y))", "score": 0}
{"id": "eqasc_train_11794", "prediction": "all x.(MeltingPoint(x) -> DependsOnNatureOfLiquid(x))", "score": 0}
{"id": "eqasc_train_11795", "prediction": "all x y z.((AddingSaltToLiquid(x) & Liquid(y) & Liquid(z)) -> ChangesNature(x,y,z))", "score": 0}
{"id": "eqasc_train_11796", "prediction": "all x.((Impurity(x) & Salt(x)) -> LowersMeltingPoint(x))", "score": 0}
{"id": "eqasc_train_11797", "prediction": "all x y.((Impurities(x) & Liquid(y)) -> DecreasesMeltingPoints(x,y))", "score": 0}
{"id": "eqasc_train_11798", "prediction": "all x y.((Salt(x) & Water(y)) -> AddsDensity(x,y))", "score": 0}
{"id": "eqasc_train_11799", "prediction": "all x y.((Object(x) & Water(y) & LowerMeltingPoint(x,y)) -> FloatsFasterInWater(x,y))", "score": 0}
{"id": "eqasc_train_11800", "prediction": "all x y z.((SaltParticle(x) & Ocean(y) & Waves(z)) -> (ComesFrom(x,y) & SprayEvaporates(x,z) & SaltParticlesSuspendedInAir(x)))", "score": 0}
{"id": "eqasc_train_11801", "prediction": "all x y z.((Addition(x,y) & Ocean(y) & Liquid(z)) -> DecreasesMeltingPoint(x,z))", "score": 0}
{"id": "eqasc_train_11802", "prediction": "(TableSalt(SodiumChloride) & TableSalt(SodiumChloride))", "score": 0}
{"id": "eqasc_train_11803", "prediction": "all x.(AdditionOfSalt(x) -> IncreasesDensityOfWater(x))", "score": 0}
{"id": "eqasc_train_11804", "prediction": "all x.((Water(x) & Density(x)) -> DecreasesMeltingPoint(x))", "score": 0}
{"id": "eqasc_train_11805", "prediction": "all x.(Salinity(x) -> (DepictsSaltContent(x) & Liquid(x)))", "score": 0}
{"id": "eqasc_train_11806", "prediction": "all x y.((Liquid(x) & Liquid(y)) -> LowerSalinity(x,y))", "score": 0}
{"id": "eqasc_train_11807", "prediction": "all x.(CarbonMonoxide(x) -> (ProducedByFurnace(x) & BurnsFuel(x)))", "score": 0}
{"id": "eqasc_train_11808", "prediction": "all x.((Fuel(x) & IncompletelyBurned(x)) -> (ProducesCarbonMonoxide(x) & ColorlessOdorlessGas(x)))", "score": 0}
{"id": "eqasc_train_11809", "prediction": "all x y.((Fuel(x) & BurnsIncompletely(x,y) & Furnace(y)) -> CreatesCarbonMonoxide(x))", "score": 0}
{"id": "eqasc_train_11810", "prediction": "all x.(CarbonMonoxide(x) -> HealthHazard(x))", "score": 0}
{"id": "eqasc_train_11811", "prediction": "all x.((Furnace(x) | BurnsFuel(x)) -> HealthHazard(x))", "score": 0}
{"id": "eqasc_train_11812", "prediction": "all x.(CarbonMonoxide(x) -> CanKill(x))", "score": 0}
{"id": "eqasc_train_11813", "prediction": "all x y.((Fuel(x) & Furnace(y) & BurningIn(x,y)) -> CanKill(x,y))", "score": 0}
{"id": "eqasc_train_11814", "prediction": "all x.(ExcessiveAccumulationBuildupOfCarbonMonoxide(x) -> CausesSuffocation(x))", "score": 0}
{"id": "eqasc_train_11815", "prediction": "all x.(GasFurnace(x) -> CausesSuffocation(x))", "score": 0}
{"id": "eqasc_train_11816", "prediction": "all x.(GasFurnace(x) -> HeatsHomesForUpTo20Years(x))", "score": 0}
{"id": "eqasc_train_11817", "prediction": "all x y.((HeatingHome(x) & HeatingHome(y)) -> CarbonMonoxideProduced(x,y))", "score": 0}
{"id": "eqasc_train_11818", "prediction": "all x.(Cabin(x) -> (HasWoodenBurningStoves(x) & HasPropanFurnace(x)))", "score": 0}
{"id": "eqasc_train_11819", "prediction": "all x.(CarbonMonoxide(x) -> (Gas(x) & ProducedByBurningPropan(x)))", "score": 0}
{"id": "eqasc_train_11820", "prediction": "all x y.((Fuel(x) & Engine(y)) -> BurnedInside(x,y))", "score": 0}
{"id": "eqasc_train_11821", "prediction": "all x.(CarbonMonoxide(x) -> (ProducedByFurnace(x) | ProducedByEngine(x)))", "score": 0}
{"id": "eqasc_train_11822", "prediction": "all x y.((Producer(x) & Energy(y) & InorganicMolecule(z)) -> MakesFood(x,y,z))", "score": 0}
{"id": "eqasc_train_11823", "prediction": "all x.((FoodPreparation(x) & RetentionOfNutrients(x)) -> Included(x))", "score": 0}
{"id": "eqasc_train_11824", "prediction": "all x y.((Producer(x) & Energy(y) & InorganicMolecule(z)) -> UsesForRetentionOfNutrients(x,y,z))", "score": 0}
{"id": "eqasc_train_11825", "prediction": "all x.(GreenPlant(x) -> (UsesEnergy(x) & UsesInorganicMolecules(x) & MakesFood(x)))", "score": 0}
{"id": "eqasc_train_11826", "prediction": "all x.(Plant(x) -> UsesEnergyToMakeFood(x))", "score": 0}
{"id": "eqasc_train_11827", "prediction": "all x.((Plant(x) & MakesOwnFoodWithSun(x)) -> Producer(x))", "score": 0}
{"id": "eqasc_train_11828", "prediction": "all x y.((Plant(x) & Sun(y)) -> MakesOwnFoodFrom(x,y))", "score": 0}
{"id": "eqasc_train_11829", "prediction": "all x.(Earth(x) -> Sun(x))", "score": 0}
{"id": "eqasc_train_11830", "prediction": "all x y z.((Producer(x) & Sun(y) & InorganicMolecule(z)) -> UsesToMakeFood(x,y,z))", "score": 0}
{"id": "eqasc_train_11831", "prediction": "all x.(GreenPlant(x) -> Producer(x))", "score": 0}
{"id": "eqasc_train_11832", "prediction": "all x.(GreenPlant(x) -> (UsesEnergy(x) & UsesInorganicMolecules(x) & MakesFood(x)))", "score": 0}
{"id": "eqasc_train_11833", "prediction": "all x y.((Leaves(x) & Plant(y)) -> MakesFoodFor(x,y))", "score": 0}
{"id": "eqasc_train_11834", "prediction": "exists x.(Producer(x) & HasLeaves(x) & HelpsUseEnergyAndInorganicMolecules(x))", "score": 0}
{"id": "eqasc_train_11835", "prediction": "all x y.((Decomposition(x) & Producer(y)) -> ProvidesResourcesForCreation(x,y))", "score": 0}
{"id": "eqasc_train_11836", "prediction": "all x.(Mineral(x) -> InorganicSubstance(x))", "score": 0}
{"id": "eqasc_train_11837", "prediction": "all x.(Producer(x) -> (UsesEnergy(x) & UsesMinerals(x) & MakesFood(x)))", "score": 0}
{"id": "eqasc_train_11838", "prediction": "all x.(SunLight(x) -> ProviderOfEnergy(x))", "score": 0}
{"id": "eqasc_train_11839", "prediction": "all x.((Rock(x) & BreakingApart(x)) -> CausesDebris(x))", "score": 0}
{"id": "eqasc_train_11840", "prediction": "all x.(Erosion(x) -> (BreaksRocks(x) & CausesDebris(x)))", "score": 0}
{"id": "eqasc_train_11841", "prediction": "all x.(RockDebris(x) -> Sediment(x))", "score": 0}
{"id": "eqasc_train_11842", "prediction": "all x y.((Rock(x) & Rock(y)) -> BreakingApart(x,y))", "score": 0}
{"id": "eqasc_train_11843", "prediction": "all x.(Earthquake(x) -> BreakingRocks(x))", "score": 0}
{"id": "eqasc_train_11844", "prediction": "all x.(Earthquake(x) -> CausesRockDebris(x))", "score": 0}
{"id": "eqasc_train_11845", "prediction": "all x.(Hammer(x) -> BreaksRock(x))", "score": 0}
{"id": "eqasc_train_11846", "prediction": "all x.(Hammer(x) -> CausesDebris(x))", "score": 0}
{"id": "eqasc_train_11847", "prediction": "all x.((Stone(x) | Debris(x)) -> CausesSeriousEyeInjuries(x))", "score": 0}
{"id": "eqasc_train_11848", "prediction": "all x.((Rock(x) & BreakingApart(x)) -> CanCauseSeriousEyeInjuries(x))", "score": 0}
{"id": "eqasc_train_11849", "prediction": "all x.((Sandstone(x) & BreakingApart(x)) -> CanCauseDebris(x))", "score": 0}
{"id": "eqasc_train_11850", "prediction": "all x.(SledgeHammer(x) -> BreaksHardLandledges(x))", "score": 0}
{"id": "eqasc_train_11851", "prediction": "all x.(Hammer(x) -> CanCauseDebris(x))", "score": 0}
{"id": "eqasc_train_11852", "prediction": "all x.(Sediment(x) -> BrokenRocks(x))", "score": 0}
{"id": "eqasc_train_11853", "prediction": "all x.(MarineDebris(x) -> WorldwideProblem(x))", "score": 0}
{"id": "eqasc_train_11854", "prediction": "all x.((Rock(x) & BreakingApart(x)) -> WorldwideProblem(x))", "score": 0}
{"id": "eqasc_train_11855", "prediction": "all x.((ConstructionDebris(x) & CleansUp(x)) -> CleansUp(x))", "score": 0}
{"id": "eqasc_train_11856", "prediction": "all x.((Rock(x) & BreakingApart(x)) -> CanCleanUpConstruction(x))", "score": 0}
{"id": "eqasc_train_11857", "prediction": "all x.(PituitaryHormone(x) -> ControlsEndocrineGlands(x))", "score": 0}
{"id": "eqasc_train_11858", "prediction": "all x.(EndocrineOrgan(x) -> (DductlessGlands(x) & SecretesHormones(x)))", "score": 0}
{"id": "eqasc_train_11859", "prediction": "all x y.((PituitaryHormone(x) & Gliom(y) & SecretesHormones(x,y)) -> ControlsGliom(x,y))", "score": 0}
{"id": "eqasc_train_11860", "prediction": "all x.(GrowthHydrogen(x) -> MadeByPituitary(x))", "score": 0}
{"id": "eqasc_train_11861", "prediction": "all x y.((Pituitary(x) & EndocrineGlands(y)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_train_11862", "prediction": "all x.(GrowthHydrogen(x) -> ProducedByPituitaryGlands(x))", "score": 0}
{"id": "eqasc_train_11863", "prediction": "all x y.((Glands(x) & Growth(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_train_11864", "prediction": "all x.(MulticellularGlands(x) -> (EndocrineGlands(x) & Incorporates(x,endocrineGlands)))", "score": 0}
{"id": "eqasc_train_11865", "prediction": "all x y.((PituitaryHormone(x) & MulticellularGlands(y)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_train_11866", "prediction": "all x.((Pituitary(x) & ProducesFSH(x) & ProducesLH(x)) -> OvariesResponseByProducingEggs(x))", "score": 0}
{"id": "eqasc_train_11867", "prediction": "all x y z.((Hormone(x) & Ovarian(y) & Egg(z)) -> TellsOvariansToProduce(x,y,z))", "score": 0}
{"id": "eqasc_train_11868", "prediction": "all x.(EndocrineGlands(x) -> (HormoneProducingStructure(x) & Body(x)))", "score": 0}
{"id": "eqasc_train_11869", "prediction": "all x.(PituitaryHormone(x) -> ControlsHormoneProduction(x))", "score": 0}
{"id": "eqasc_train_11870", "prediction": "all x.(Prolactin(x) -> MadeInPituitaryGlands(x))", "score": 0}
{"id": "eqasc_train_11871", "prediction": "all x y.((Prolactin(x) & EndocrineGlands(y)) -> Controls(x,y))", "score": 0}
{"id": "eqasc_train_11872", "prediction": "all x y.((PituitaryGlands(x) & PituitaryGlands(y) & BrainBase(x)) -> ProducesManyHormones(x))", "score": 0}
{"id": "eqasc_train_11873", "prediction": "all x y.((Hormone(x) & BrainBase(y) & ProducedAt(x,y)) -> ControlsEndocrineGlands(x))", "score": 0}
{"id": "eqasc_train_11874", "prediction": "all x.(AnomalousEndocrineGlands(x) -> ProducesObesity(x))", "score": 0}
{"id": "eqasc_train_11875", "prediction": "all x.(PituitaryHormones(x) -> ProducesObesity(x))", "score": 0}
{"id": "eqasc_train_11876", "prediction": "all x y.((Hormone(x) & EndocrineGland(y)) -> ProducedIn(x,y))", "score": 0}
{"id": "eqasc_train_11877", "prediction": "all x.(PituitaryHormone(x) -> (Controlled(x) & ProducedInGlands(x)))", "score": 0}
{"id": "eqasc_train_11878", "prediction": "all x.(EndocrineOrgan(x) -> MakesHormones(x))", "score": 0}
{"id": "eqasc_train_11879", "prediction": "all x.(Organ(x) -> MakesPituitaryHormones(x))", "score": 0}
{"id": "eqasc_train_11880", "prediction": "all x.(Hormone(x) -> (OccursNaturallyInBody(x) & Hormone(x)))", "score": 0}
{"id": "eqasc_train_11881", "prediction": "all x.((Substance(x) & Pituitary(x)) -> ControlsEndocrineGlands(x))", "score": 0}
{"id": "eqasc_train_11882", "prediction": "all x.(EndocrineGlands(x) -> IntegratingCenter(x))", "score": 0}
{"id": "eqasc_train_11883", "prediction": "all x.(PituitaryHormone(x) -> ControlsIntegratingCenters(x))", "score": 0}
{"id": "eqasc_train_11884", "prediction": "all x.(EndocrineGlands(x) -> (PituitaryGlands(x) & ThyroidGlands(x) & ParathyroidGlands(x) & AdrenalGlands(x) & PinealGlands(x) & ThymusGlands(x)))", "score": 0}
{"id": "eqasc_train_11885", "prediction": "exists x.(PituitaryHormone(x) & CanControlThyroidGum(x))", "score": 0}
{"id": "eqasc_train_11886", "prediction": "all x.(PituitaryHormone(x) -> ControlsOtherHormoneProducingStructures(x))", "score": 0}
{"id": "eqasc_train_11887", "prediction": "all x y.((Antigen(x) & CancerCell(y) & Organ(y)) -> FoundOn(x,y))", "score": 0}
{"id": "eqasc_train_11888", "prediction": "all x.(Antibody(x) -> (ImmobilizesAntigens(x) & DisposesAntigens(x)))", "score": 0}
{"id": "eqasc_train_11889", "prediction": "all x.(Antibodies(x) -> CanDestroyCancerCells(x))", "score": 0}
{"id": "eqasc_train_11890", "prediction": "all x y.((Antigen(x) & MalignantCell(y)) -> FoundOn(x,y))", "score": 0}
{"id": "eqasc_train_11891", "prediction": "all x y.((Antigen(x) & CancerCell(y) & OrganizedKnee(y)) -> (FoundOn(x,y) & FoundOn(x,y)))", "score": 0}
{"id": "eqasc_train_11892", "prediction": "all x y.((Protein(x) & CancerCell(y) & Organ(y)) -> FoundOn(x,y))", "score": 0}
{"id": "eqasc_train_11893", "prediction": "all x y.((Antigen(x) & CancerCell(y) & TransplantedLiver(y)) -> (FoundOn(x,y) & FoundOn(x,y)))", "score": 0}
{"id": "eqasc_train_11894", "prediction": "all x.(TriggersImmuneResponse(x) -> Antigen(x))", "score": 0}
{"id": "eqasc_train_11895", "prediction": "all x y.((TransplantedOrgan(x) & Organ(y)) -> TriggersImmuneResponse(x,y))", "score": 0}
{"id": "eqasc_train_11896", "prediction": "all x.(AntibodyProduction(x) -> TriggersAntigens(x))", "score": 0}
{"id": "eqasc_train_11897", "prediction": "all x.(CancerCell(x) -> ProducesAntibodies(x))", "score": 0}
{"id": "eqasc_train_11898", "prediction": "all x.(Antigen(x) -> CausesAntibodyProduction(x))", "score": 0}
{"id": "eqasc_train_11899", "prediction": "all x.((Molecule(x) & CausesAntibodyProduction(x)) -> FoundOnCancerCells(x))", "score": 0}
{"id": "eqasc_train_11900", "prediction": "all x.(Antigen(x) -> (Protein(x) & ProvokesImmuneResponseToCancerCells(x)))", "score": 0}
{"id": "eqasc_train_11901", "prediction": "all x.((Protein(x) & ProvokesImmuneResponse(x)) -> FoundOnCancerCells(x))", "score": 0}
{"id": "eqasc_train_11902", "prediction": "all x.(CausesCancer(x) -> Pathogen(x))", "score": 0}
{"id": "eqasc_train_11903", "prediction": "all x.(Antigen(x) -> Pathogen(x))", "score": 0}
{"id": "eqasc_train_11904", "prediction": "ALL x.(Protein(x) -> Antigen(x))", "score": -1}
{"id": "eqasc_train_11905", "prediction": "all x y.((Protein(x) & CancerCell(y)) -> FoundOn(x,y))", "score": 0}
{"id": "eqasc_train_11906", "prediction": "all x y.((Antibody(x) & Antigen(y) & BindedTo(x,y)) -> MeasuredByRCATAmplification(x,y))", "score": 0}
{"id": "eqasc_train_11907", "prediction": "all x.((Cell(x) & BoundByAntibodies(x)) -> (CancerCells(x) & OrganCells(x)))", "score": 0}
{"id": "eqasc_train_11908", "prediction": "all x.(CancerousMelanoma(x) -> SkinMelanoma(x))", "score": 0}
{"id": "eqasc_train_11909", "prediction": "all x y.((Antigen(x) & SkinMelanomas(y)) -> FoundOnCells(x,y))", "score": 0}
{"id": "eqasc_train_11910", "prediction": "all x.(Plant(x) -> (MulticellularEukaryote(x) & CellWallsMadeOfCellulose(x)))", "score": 1}
{"id": "eqasc_train_11911", "prediction": "all x y z.((PlantCell(x) & Wall(y) & Starch(z)) -> MadeIn(y,z))", "score": 0}
{"id": "eqasc_train_11912", "prediction": "all x.(Plant(x) -> (MulticellularEukaryote(x) & Starch(x) & CelluloseWalls(x)))", "score": 0}
{"id": "eqasc_train_11913", "prediction": "all x.(PlantCell(x) -> NumerousOrganelles(x))", "score": 0}
{"id": "eqasc_train_11914", "prediction": "all x.(PlantCellWall(x) -> (ComposedOfLinnin(x) & ComposedOfCellulose(x)))", "score": 0}
{"id": "eqasc_train_11915", "prediction": "all x.(Plant(x) -> (MulticellularEukaryote(x) & CellWallsComposedOfLinnin(x)))", "score": 0}
{"id": "eqasc_train_11916", "prediction": "all x.(Oak(x) -> (MulticellularEukaryote(x) & CellWallsMadeOfCellulose(x)))", "score": 1}
{"id": "eqasc_train_11917", "prediction": "all x.(Flower(x) -> PlantOrgan(x))", "score": 0}
{"id": "eqasc_train_11918", "prediction": "all x.(Flower(x) -> (MulticellularEukaryote(x) & CellWallsMadeFromCellulose(x)))", "score": 0}
{"id": "eqasc_train_11919", "prediction": "all x.(WaterLilly(x) -> AncientAngiospermPlant(x))", "score": 0}
{"id": "eqasc_train_11920", "prediction": "all x.(Lilly(x) -> (MulticellularEukaryote(x) & CellWallsMadeOfCellulose(x)))", "score": 0}
{"id": "eqasc_train_11921", "prediction": "all x.(Plant(x) -> MadeOfFiberCellWalls(x))", "score": 0}
{"id": "eqasc_train_11922", "prediction": "all x.(Plant(x) -> HasNuclei(x))", "score": 0}
{"id": "eqasc_train_11923", "prediction": "all x y.((Bacteria(x) & Soil(y)) -> (ConvertsAtmosphericNitrogen(x,y) & PlantsUsableForm(x,y)))", "score": 0}
{"id": "eqasc_train_11924", "prediction": "all x.(MoreBacteria(x) -> HealthySoil(x))", "score": 0}
{"id": "eqasc_train_11925", "prediction": "all x.(HealthierSoil(x) -> (ConvertsAtmosphericNitrogen(x) & UsableFormByPlants(x)))", "score": 0}
{"id": "eqasc_train_11926", "prediction": "all x y.((Bacteria(x) & Soil(y)) -> (ConvertsAtmosphericNitrogen(x,y) & Bamboo(x)))", "score": 0}
{"id": "eqasc_train_11927", "prediction": "all x.(RhizobialBacteria(x) -> (ConvertsAtmosphericNitrateToNitrateFertilizers(x) & UsableByPlants(x)))", "score": 0}
{"id": "eqasc_train_11928", "prediction": "all x.(RhizobialBacteria(x) -> (ConvertsNitrogenToFertilizer(x) & ForPlants(x)))", "score": 0}
{"id": "eqasc_train_11929", "prediction": "all x.(Plant(x) -> HasNitrogen(x))", "score": 0}
{"id": "eqasc_train_11930", "prediction": "all x y.((Bacteria(x) & Plant(y)) -> HelpsGrow(x,y))", "score": 0}
{"id": "eqasc_train_11931", "prediction": "exists x.(GoodBacteria(x) & InSoil(x) & HelpsPlantsGetVitamins(x))", "score": 0}
{"id": "eqasc_train_11932", "prediction": "all x y.((BacteriaInDirt(x) & Plant(y)) -> HelpsGetVitaminsToGrow(x,y))", "score": 0}
{"id": "eqasc_train_11933", "prediction": "all x.(Plant(x) -> AddsNitrogenToSoil(x))", "score": 0}
{"id": "eqasc_train_11934", "prediction": "all x y.((Bacteria(x) & Plant(y)) -> Feeds(x,y))", "score": 0}
{"id": "eqasc_train_11935", "prediction": "all x.(Root(x) -> AssociatesWithNitrogenFixingBacteria(x))", "score": 0}
{"id": "eqasc_train_11936", "prediction": "all x y z.((Plant(x) & Root(y) & Bacteria(z)) -> AssociatesWith(x,y,z))", "score": 0}
{"id": "eqasc_train_11937", "prediction": "(LikeNitrogen(phosphorus) -> PlantNutrient(phosphorus))", "score": 0}
{"id": "eqasc_train_11938", "prediction": "all x y z.((Bacteria(x) & Soil(y) & Nutrient(z) & InSoil(x,y)) -> ConvertsToForm(x,z))", "score": 0}
{"id": "eqasc_train_11939", "prediction": "all x y z.((Bacteria(x) & Soil(y) & AtmosphericNitrogen(z)) -> ConvertsTo(x,z))", "score": 0}
{"id": "eqasc_train_11940", "prediction": "all x.(NitrogenDeficiency(x) -> IncreasesStressOnPlants(x))", "score": 0}
{"id": "eqasc_train_11941", "prediction": "all x y.((Bacteria(x) & Plant(y)) -> PreventsPlantStress(x,y))", "score": 0}
{"id": "eqasc_train_11942", "prediction": "all x.(Spore(x) -> DormantBacteria(x))", "score": 0}
{"id": "eqasc_train_11943", "prediction": "all x y.((Spore(x) & Soil(y)) -> (ConvertsAtmosphericNitrogen(x,y) & UsableForm(x,y)))", "score": 0}
{"id": "eqasc_train_11944", "prediction": "all x.(Plant(x) -> PrimaryProducerOnEarth(x))", "score": 0}
{"id": "eqasc_train_11945", "prediction": "all x y.((Bacteria(x) & Soil(y)) -> ConvertsNitrogenToForm(x,y))", "score": 0}
{"id": "eqasc_train_11946", "prediction": "all x.(Bacteria(x) -> SingleCelledOrganism(x))", "score": 0}
{"id": "eqasc_train_11947", "prediction": "all x y.((SingleCelledOrganism(x) & Soil(y)) -> ConvertsAtmosphericNitrogenToPlantForm(x,y))", "score": 0}
{"id": "eqasc_train_11948", "prediction": "exists x.(Plant(x) & ProducesFlowers(x))", "score": 0}
{"id": "eqasc_train_11949", "prediction": "all x y.((Bacteria(x) & Soil(y)) -> (CovertsAtmosphericNitrogen(x,y) & FormUsableByFlowers(x)))", "score": 0}
{"id": "eqasc_train_11950", "prediction": "all x.(Consumer(x) -> FeedsAtTropicalLevel(x))", "score": 0}
{"id": "eqasc_train_11951", "prediction": "all x.((Level(x) & Pyramid(x)) -> RepresentsTropicalLevel(x))", "score": 0}
{"id": "eqasc_train_11952", "prediction": "all x.(Consumer(x) -> FeedsAtMoreThanOneLevel(x))", "score": 0}
{"id": "eqasc_train_11953", "prediction": "all x.(Omnivore(x) -> FeedsAtMoreThanOneTropicalLevel(x))", "score": 0}
{"id": "eqasc_train_11954", "prediction": "all x y.((Human(x) & TrophicLevel(y)) -> FeedsAtMoreThanOne(x,y))", "score": 0}
{"id": "eqasc_train_11955", "prediction": "all x.(Carnivore(x) -> (Consumer(x) & (EatsAnimals(x) | EatsOtherConsumers(x))))", "score": 0}
{"id": "eqasc_train_11956", "prediction": "all x y.((Carnivore(x) & Carnivore(y)) -> FeedsAtTropicalLevel(x,y))", "score": 0}
{"id": "eqasc_train_11957", "prediction": "all x y z.((TrophicInteraction(x) & Producer(y) & Consumer(z)) -> TransfersNutrients(x,y,z))", "score": 0}
{"id": "eqasc_train_11958", "prediction": "all x y z.((Consumer(x) & Producer(y) & Producer(z)) -> TransfersNutrients(x,y,z))", "score": 0}
{"id": "eqasc_train_11959", "prediction": "all x.(Consumer(x) -> (Insect(x) | Animal(x)))", "score": 0}
{"id": "eqasc_train_11960", "prediction": "all x.(Insect(x) & Animal(x) & FeedsAtMoreTropicalLevel(x))", "score": 0}
{"id": "eqasc_train_11961", "prediction": "all x.(Animal(x) -> Consumer(x))", "score": 0}
{"id": "eqasc_train_11962", "prediction": "all x y.((Animal(x) & Animal(y)) -> FeedsAtTropicalLevel(x,y))", "score": 0}
{"id": "eqasc_train_11963", "prediction": "all x.(NutrientLevel(x) -> TrophicStatus(x))", "score": 0}
{"id": "eqasc_train_11964", "prediction": "all x y.((Consumer(x) & NutrientLevel(y)) -> FeedsAt(x,y))", "score": 0}
{"id": "eqasc_train_11965", "prediction": "all x.((Cow(x) | Sheep(x)) -> PrimaryConsumer(x))", "score": 0}
{"id": "eqasc_train_11966", "prediction": "all x.(Sheep(x) -> (FeedsAtTropicalLevel(x) & MoreThanTropicalLevel(x)))", "score": 0}
{"id": "eqasc_train_11967", "prediction": "all x y.((Animal(x) & Animal(y)) -> FeedsAtMoreTropicalLevel(x,y))", "score": 0}
{"id": "eqasc_train_11968", "prediction": "all x.(Nut(x) -> (ConsumedBy(x,deer) | ConsumedBy(x,turkey) | ConsumedBy(x,fox) | ConsumedBy(x,woodDucks) | ConsumedBy(x,squirrels)))", "score": 0}
{"id": "eqasc_train_11969", "prediction": "all x.(WoodDuck(x) -> (FeedsAtTropicalLevel(x) & MoreThanTropicalLevel(x)))", "score": 0}
{"id": "eqasc_train_11970", "prediction": "all x.(Consumer(x) -> (Heterotroph(x) & FeedsOnTissuesOfOtherOrganisms(x)))", "score": 0}
{"id": "eqasc_train_11971", "prediction": "all x y.((Heterotroph(x) & Organism(y)) -> (Eats(x,y) & MoreThanOneTropicalLevel(x)))", "score": 0}
{"id": "eqasc_train_11972", "prediction": "all x.((Step(x) & FoodChain(x)) -> TrophicLevel(x))", "score": 0}
{"id": "eqasc_train_11973", "prediction": "all x y z.((Consumer(x) & FoodChain(y) & FoodChain(z)) -> (FeedsAtMoreThanOneStep(x,y) & FoodChain(y,z)))", "score": 0}
{"id": "eqasc_train_11974", "prediction": "all x y.((Animal(x) & Environment(y) & DecreasesFoodAndWater(x,y)) -> MayLeave(x,y))", "score": 0}
{"id": "eqasc_train_11975", "prediction": "all x.((Environment(x) & ExperiencesDrought(x)) -> AnimalsMayLeave(x))", "score": 0}
{"id": "eqasc_train_11976", "prediction": "all x.(Famine(x) -> GeneralShortageOfFood(x))", "score": 0}
{"id": "eqasc_train_11977", "prediction": "all x y.((Famine(x) & Environment(y)) -> AnimalsMayLeave(x,y))", "score": 0}
{"id": "eqasc_train_11978", "prediction": "all x y.((Environment(x) & DecreasedFoodAndWater(x)) -> HumansMayLeave(y,x))", "score": 0}
{"id": "eqasc_train_11979", "prediction": "all x y.((Environment(x) & Environment(y) & DecreasesFoodAndWater(x,y)) -> BearsMayLeave(x,y))", "score": 0}
{"id": "eqasc_train_11980", "prediction": "all x.((Food(x) | Water(x) | Air(x)) -> EssentialOfLife(x))", "score": 0}
{"id": "eqasc_train_11981", "prediction": "all x y.((Environment(x) & EssentialsOfLife(y) & Decreases(x,y)) -> AnimalsMayLeave(x,y))", "score": 0}
{"id": "eqasc_train_11982", "prediction": "all x y.((Food(x) & Water(y) & ProvidedByMouth(x,y)) -> ProvidesNutrition(x,y))", "score": 0}
{"id": "eqasc_train_11983", "prediction": "all x y.((Environment(x) & Nutrients(y) & Decreases(x,y)) -> AnimalsMayLeaveToFind(x,y))", "score": 0}
{"id": "eqasc_train_11984", "prediction": "all x.(Animal(x) -> (HasFood(x) & HasWater(x) & HasShelter(x)))", "score": 0}
{"id": "eqasc_train_11985", "prediction": "all x.(Animal(x) -> MayLeaveEnvironmentToSurvive(x))", "score": 0}
{"id": "eqasc_train_11986", "prediction": "all x.((Area(x) & PersistentDrought(x) & LackOfFoodAndWater(x)) -> AffectedBy(x,Drought,Drought))", "score": 0}
{"id": "eqasc_train_11987", "prediction": "all x y.((PersistentDrought(x) & FoodShortage(y)) -> CanCauseAnimalsToLeaveEnvironment(x,y))", "score": 0}
{"id": "eqasc_train_11988", "prediction": "all x.((WildAnimal(x) & -FindsOwnFood(x)) -> StopsBeingPartOfBalanceOfNature(x))", "score": 0}
{"id": "eqasc_train_11989", "prediction": "all x y.((Animal(x) & Environment(y) & DecreasesFoodAndWater(x,y)) -> -PartOfBalanceOfNature(x))", "score": 0}
{"id": "eqasc_train_11990", "prediction": "all x.(Animal(x) -> (Migrates(x) & (AvoidsBadWeather(x) | FindsFood(x) | Reproduces(x))))", "score": 0}
{"id": "eqasc_train_11991", "prediction": "all x y.((Food(x) & WaterSource(y) & Decreases(x,y)) -> IncreasesMigrationToFind(x,y))", "score": 0}
{"id": "eqasc_train_11992", "prediction": "all x.(Sinkhole(x) -> (FormedByPrecipitation(x) & FormedByPrecipitation(x)))", "score": 0}
{"id": "eqasc_train_11993", "prediction": "all x.(Rain(x) -> CausesSinkholes(x))", "score": 0}
{"id": "eqasc_train_11994", "prediction": "all x.(Precipitation(x) -> Snow(x))", "score": 0}
{"id": "eqasc_train_11995", "prediction": "all x.(Sinkhole(x) -> (FormedBySnow(x) | FormedBySnow(x)))", "score": 0}
{"id": "eqasc_train_11996", "prediction": "all x.(Sinkhole(x) -> (FormedByRain(x) & Rain(x)))", "score": 0}
{"id": "eqasc_train_11997", "prediction": "all x y.((Sinkhole(x) & Cavern(y)) -> CollapsesInto(x,y))", "score": 0}
{"id": "eqasc_train_11998", "prediction": "all x y.((Precipitation(x) & UndergroundVoice(y) & Reaches(x,y)) -> CausesCavernToForm(x,y))", "score": 0}
{"id": "eqasc_train_11999", "prediction": "all x.((House(x) & Sinkhole(x)) -> Disappears(x))", "score": 0}
{"id": "eqasc_train_12000", "prediction": "all x.(House(x) -> HasPleasant(x))", "score": 0}
{"id": "eqasc_train_12001", "prediction": "all x.((ColdFronts(x) & Rain(x) & Wind(x) & RoughWeather(x)) -> PrecipitatesHotBite(x))", "score": 0}
{"id": "eqasc_train_12002", "prediction": "all x.(Sinkhole(x) -> (FormedByRain(x) & FormedByRoughWeather(x)))", "score": 0}
{"id": "eqasc_train_12003", "prediction": "all x.((NaturalOpening(x) & LeadsToCaves(x)) -> (Sinkhole(x) | SwallowHole(x)))", "score": 0}
{"id": "eqasc_train_12004", "prediction": "all x y.((NaturalOpening(x) & Surface(y) & LeadsToCaves(x,y)) -> FormedByPrecipitation(x))", "score": 0}
{"id": "eqasc_train_12005", "prediction": "all x y.((Precipitation(x) & Cavern(y)) -> Forms(x,y))", "score": 0}
{"id": "eqasc_train_12006", "prediction": "all x.(Sinkhole(x) -> CommonInSouthwesternPurpose(x))", "score": 0}
{"id": "eqasc_train_12007", "prediction": "all x.((Precipitation(x) & SouthwesternPage(x)) -> Common(x))", "score": 0}
{"id": "eqasc_train_12008", "prediction": "all x.(Gametophyte(x) -> ProducesEggsInOvariesOfFlowers(x))", "score": 0}
{"id": "eqasc_train_12009", "prediction": "all x y.((FlowerBuoy(x) & Plant(y)) -> AppearsInGrowingTip(x,y))", "score": 0}
{"id": "eqasc_train_12010", "prediction": "all x.(Gametophyte(x) -> ProducesEggsAtTipsOfPlants(x))", "score": 0}
{"id": "eqasc_train_12011", "prediction": "all x.(Gametophyte(x) -> ParentOfBabyFern(x))", "score": 0}
{"id": "eqasc_train_12012", "prediction": "all x y.((FemaleParent(x) & BabyFern(y)) -> ProducesEggsInsideOvariesOfFlowers(x,y))", "score": 0}
{"id": "eqasc_train_12013", "prediction": "all x.(Ovum(x) -> (StoredInOvaries(x) | StoredInOvaries(x)))", "score": 0}
{"id": "eqasc_train_12014", "prediction": "all x y.((FemaleGametophyte(x) & Egg(y)) -> ProducesInsideOvumOrEggs(x,y))", "score": 0}
{"id": "eqasc_train_12015", "prediction": "all x y.((Microspore(x) & FemaleGametophyte(y) & Archegonium(y)) -> DevelopsIntoProducesEgg(x,y))", "score": 0}
{"id": "eqasc_train_12016", "prediction": "all x y.((Microspore(x) & FemaleGametophyte(y)) -> DevelopsInto(x,y))", "score": 0}
{"id": "eqasc_train_12017", "prediction": "all x.(Megaspore(x) -> DevelopsIntoFemaleGametophyte(x))", "score": 0}
{"id": "eqasc_train_12018", "prediction": "all x y.((Megaspore(x) & Flower(y)) -> DevelopsToProduceEggsInOvaries(x,y))", "score": 0}
{"id": "eqasc_train_12019", "prediction": "all x.(Fruit(x) -> DevelopsFromOvary(x))", "score": 0}
{"id": "eqasc_train_12020", "prediction": "all x.(FemaleGametophyte(x) -> ProducesEggsInsideFlower(x))", "score": 0}
{"id": "eqasc_train_12021", "prediction": "all x y.((FemaleFern(x) & Flower(y)) -> CanProduceEggsInOvaries(x,y))", "score": 0}
{"id": "eqasc_train_12022", "prediction": "all x.(Gametophyte(x) -> ProducesEggsInFlower(x))", "score": 0}
{"id": "eqasc_train_12023", "prediction": "all x y.((Fruit(x) & Plant(y)) -> ComesFromFlower(x,y))", "score": 0}
{"id": "eqasc_train_12024", "prediction": "all x.((AngiospermGametophyte(x) & Flower(y)) -> In(x,y))", "score": 0}
{"id": "eqasc_train_12025", "prediction": "all x.(Gametophyte(x) -> InOvaries(x))", "score": 0}
{"id": "eqasc_train_12026", "prediction": "all x y.((FemaleFlowerParent(x) & Flower(y)) -> ProducesEggsInOvaries(x,y))", "score": 0}
{"id": "eqasc_train_12027", "prediction": "all x.(Gametophyte(x) -> Unisexual(x))", "score": 0}
{"id": "eqasc_train_12028", "prediction": "all x y.((UnsexualGametophyte(x) & Flower(y)) -> ProducesEggsInOvaries(x,y))", "score": 0}
{"id": "eqasc_train_12029", "prediction": "all x.((StateFlower(x) & Peony(x)) -> OriginatesInChina(x))", "score": 0}
{"id": "eqasc_train_12030", "prediction": "all x.(FemaleGametophyte(x) -> ProducesEggsInOvariesOfPeonies(x))", "score": 0}
{"id": "eqasc_train_12031", "prediction": "all x.(DaisyFlower(x) -> (GrowsInSpecies(x) & GrowsInColors(x) & GrowsInSizes(x)))", "score": 0}
{"id": "eqasc_train_12032", "prediction": "all x y.((FemaleGametophyte(x) & Daisy(y)) -> ProducesEggsInOvaries(x,y))", "score": 0}
{"id": "eqasc_train_12033", "prediction": "all x.((WaterVaporCondenses(x) & OverNight(x)) -> FormedDew(x))", "score": 0}
{"id": "eqasc_train_12034", "prediction": "all x y.((DewDroplet(x) & AirCools(y) & WaterVaporCondenses(x)) -> Deposits(x,y))", "score": 0}
{"id": "eqasc_train_12035", "prediction": "all x y.((Droplet(x) & WaterVaporCondenses(x) & OverNight(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_train_12036", "prediction": "all x.(DewPoint(x) -> TemperatureAt(x,DewForms))", "score": 0}
{"id": "eqasc_train_12037", "prediction": "all x.((WaterVaporCondensesOvernight(x) & TemperatureAtDewPoint(x)) -> Condenses(x))", "score": 0}
{"id": "eqasc_train_12038", "prediction": "all x y z.((WaterVapor(x) & Gas(y) & Liquid(z) & TurnsFromTo(x,y,z)) -> FormedOverNight(x))", "score": 0}
{"id": "eqasc_train_12039", "prediction": "all x.((GreaterDewPoint(x) & MoreWaterVapor(x)) -> MoreWaterVapor(x))", "score": 0}
{"id": "eqasc_train_12040", "prediction": "all x.((DewPointHigher(x) & DewPointHigher(x)) -> MoreDewCondenses(x))", "score": 0}
{"id": "eqasc_train_12041", "prediction": "all x.((Roof(x) & CondensationAtNight(x)) -> CoolerWeather(x))", "score": 0}
{"id": "eqasc_train_12042", "prediction": "all x.((WaterVapor(x) & CooledAtNight(x)) -> DewFormation(x))", "score": 0}
{"id": "eqasc_train_12043", "prediction": "all x.((Temperature(x) & ReachesDewPoint(x)) -> Evaporates(x))", "score": 0}
{"id": "eqasc_train_12044", "prediction": "all x.((CondensedWaterVapor(x) & Temperature(x)) -> EvaporatesAt(x,certainTemperatures))", "score": 0}
{"id": "eqasc_train_12045", "prediction": "all x.((VaporChange(x) & VaporChange(x) & LiquidChange(x)) -> FormedDew(x))", "score": 0}
{"id": "eqasc_train_12046", "prediction": "all x y.((Rock(x) | Grass(y)) -> GlistensWithDew(x))", "score": 0}
{"id": "eqasc_train_12047", "prediction": "all x y.((Rocks(x) | Grasse(y)) & WaterVaporCondenses(x,y)) -> Glams(x))", "score": -1}
{"id": "eqasc_train_12048", "prediction": "all x.((FogCondenses(x) & OverNight(x)) -> FormedDew(x))", "score": 0}
{"id": "eqasc_train_12049", "prediction": "all x.((Dew(x) & CoolingOverNight(x)) -> Formed(x))", "score": 0}
{"id": "eqasc_train_12050", "prediction": "all x y.((Magnetism(x) & Object(y)) -> RepelsRepair(x,y))", "score": 0}
{"id": "eqasc_train_12051", "prediction": "all x.((Agent(x) & (Push(x) | Pull(x))) -> MagneticForce(x))", "score": 0}
{"id": "eqasc_train_12052", "prediction": "all x y.((Force(x) & Object(y)) -> Repels(x,y))", "score": 0}
{"id": "eqasc_train_12053", "prediction": "all x.((AttractedToMagnet(x) | SticksToMagnet(x)) -> Magnetic(x))", "score": 0}
{"id": "eqasc_train_12054", "prediction": "all x y.((Magnetism(x) & Magnetism(y)) -> CausesStickTo(x,y))", "score": 0}
{"id": "eqasc_train_12055", "prediction": "all x.(ElectricalCurrent(x) -> CausesMagneticFields(x))", "score": 0}
{"id": "eqasc_train_12056", "prediction": "all x y.((ElectricalCurrent(x) & Object(y)) -> RepelsRepair(x,y))", "score": 0}
{"id": "eqasc_train_12057", "prediction": "all x y.((MaglevTrain(x) & Pole(y)) -> (Attracts(x,y) & Repels(x,y)))", "score": 0}
{"id": "eqasc_train_12058", "prediction": "all x.(MaglevTrain(x) -> MakesUseOfMagnetism(x))", "score": 0}
{"id": "eqasc_train_12059", "prediction": "all x.(SpinningElectron(x) -> CausesMagnetism(x))", "score": 0}
{"id": "eqasc_train_12060", "prediction": "all x y.((SpinningElectron(x) & Object(y)) -> CanRepel(x,y))", "score": 0}
{"id": "eqasc_train_12061", "prediction": "all x.(MagneticIntensity(x) -> StrengthOfMagneticField(x))", "score": 0}
{"id": "eqasc_train_12062", "prediction": "all x y.((Field(x) & Object(y)) -> CausesRepel(x,y))", "score": 0}
{"id": "eqasc_train_12063", "prediction": "all x.(OppositeCharges(x) -> Repels(x))", "score": 0}
{"id": "eqasc_train_12064", "prediction": "all x.(Magnetism(x) -> CausesOppositeCharges(x))", "score": 0}
{"id": "eqasc_train_12065", "prediction": "all x.((MagnetPole(x) & (PushAway(x) | Repels(x))) -> PushAway(x))", "score": 0}
{"id": "eqasc_train_12066", "prediction": "all x.(Magnetism(x) -> CausesObjectsToPushAway(x))", "score": 0}
{"id": "eqasc_train_12067", "prediction": "all x.((TwoThings(x) & SameCharge(x)) -> (Repel(x) | PushAway(x)))", "score": 0}
{"id": "eqasc_train_12068", "prediction": "all x.(Magnetism(x) -> CausesObjectsToPushAway(x))", "score": 0}
{"id": "eqasc_train_12069", "prediction": "all x.(Compass(x) -> (WorksOnMagnetism(x) & PointsToNorthMagneticPole(x)))", "score": 0}
{"id": "eqasc_train_12070", "prediction": "all x.(Compass(x) -> WorksOnPrincipleOfRepulse(x))", "score": 0}
{"id": "eqasc_train_12071", "prediction": "all x.((DropMetalObject(x) & (GolfClub(x) | Backpack(x))) -> Drops(x))", "score": 0}
{"id": "eqasc_train_12072", "prediction": "all x y.((Magnetism(x) & GolfClub(y)) -> CanRepel(x,y))", "score": 0}
{"id": "eqasc_train_12073", "prediction": "all x.(Magnetism(x) -> (AttractedObjects(x) | RepelledObjects(x)))", "score": 0}
{"id": "eqasc_train_12074", "prediction": "all x.(Magnetism(x) -> (CausesObjectsToPushOrAttract(x) & CausesObjectsToAttract(x)))", "score": 0}
{"id": "eqasc_train_12075", "prediction": "all x.((MagneticField(x) & GeneratesElectricCurrent(x)) -> FoundInFaraday(x))", "score": 0}
{"id": "eqasc_train_12076", "prediction": "all x y.((Study(x) & MichaelFaraday(y)) -> CanRepelObjects(x,y))", "score": 0}
{"id": "eqasc_train_12077", "prediction": "all x.(Magnet(x) -> (Attracts(x) & Repels(x)))", "score": 0}
{"id": "eqasc_train_12078", "prediction": "all x y z.((Magnetism(x) & Object(y) & Magnetism(z)) -> AttractsTo(x,y,z))", "score": 0}
{"id": "eqasc_train_12079", "prediction": "all x.((Cuiper(x) | Aluminum(x)) -> (AttractedByMagnets(x) & RepelledByMagnets(x)))", "score": 0}
{"id": "eqasc_train_12080", "prediction": "all x.(Magnetism(x) -> CausesAttraction(x,Cuirconium))", "score": 0}
{"id": "eqasc_train_12081", "prediction": "all x.(Object(x) -> RealWorldThing(x))", "score": 0}
{"id": "eqasc_train_12082", "prediction": "all x.(Magnetism(x) -> RepelRealWorldThings(x))", "score": 0}
{"id": "eqasc_train_12083", "prediction": "all x.(Himalaya(x) -> FormedByRockFolding(x))", "score": 0}
{"id": "eqasc_train_12084", "prediction": "all x.(Earthquake(x) -> MayCauseLayerFolding(x))", "score": 0}
{"id": "eqasc_train_12085", "prediction": "all x.(Himalaya(x) -> (FormedByEarthquakes(x) & FormedByEarthquakes(x)))", "score": 0}
{"id": "eqasc_train_12086", "prediction": "all x y z.((Himalayas(x) & Tibet(y) & Burma(z)) -> (LocatedIn(x,y) & Borders(x,z)))", "score": 0}
{"id": "eqasc_train_12087", "prediction": "all x y.((Borders(x,y) & Tibet(y) & Burma(y)) -> FormedByRockFolding(x))", "score": 0}
{"id": "eqasc_train_12088", "prediction": "all x.(Folding(x) -> BendInRockLayer(x))", "score": 0}
{"id": "eqasc_train_12089", "prediction": "all x.(Himalaya(x) -> FormedByBendInRockLayer(x))", "score": 0}
{"id": "eqasc_train_12090", "prediction": "all x.((Rock(x) & SlowCompression(x) & RockResponsesByBbending(x)) -> FoldingAndMetamorphicRockFolding(x))", "score": 0}
{"id": "eqasc_train_12091", "prediction": "all x.(Himalaya(x) -> FormedBySlowCompression(x))", "score": 0}
{"id": "eqasc_train_12092", "prediction": "all x.(FoldedMountainRange(x) -> FormedByPlateTectonics(x))", "score": 0}
{"id": "eqasc_train_12093", "prediction": "all x.(Himalayas(x) -> FormedByPlateTectonics(x))", "score": 0}
{"id": "eqasc_train_12094", "prediction": "all x.(Mountain(x) -> (FormedFromFolds(x) & BendsUpward(x)))", "score": 0}
{"id": "eqasc_train_12095", "prediction": "all x.(Mountain(x) -> (MadeByRockFolding(x) & RockFolding(x)))", "score": 0}
{"id": "eqasc_train_12096", "prediction": "all x.(Fold(x) -> (WellDefinedInLayer(x) | WellDefinedInStratifiedRock(x)))", "score": 0}
{"id": "eqasc_train_12097", "prediction": "all x y.((StratifiedRock(x) & Himalayas(y)) -> Forms(x,y))", "score": 0}
{"id": "eqasc_train_12098", "prediction": "all x.((BigMountainBackground(x) & Himalayas(x)) -> Check(x))", "score": 0}
{"id": "eqasc_train_12099", "prediction": "all x.((BigMountain(x) & RockFolding(x)) -> FormedBy(x,rockFolding))", "score": 0}
{"id": "eqasc_train_12100", "prediction": "all x y.((Movement(x) & EarthsCrust(y)) -> (Folded(x,y) & Cracked(x,y)))", "score": 0}
{"id": "eqasc_train_12101", "prediction": "all x.(Himalayas(x) -> FormedFromOlderRock(x))", "score": 0}
{"id": "eqasc_train_12102", "prediction": "all x.((Rock(x) & -Brittle(x)) -> (Tilt(x) | Fold(x)))", "score": 0}
{"id": "eqasc_train_12103", "prediction": "all x.(Himalaya(x) -> (BrittleRock(x) & ComposedOf(x,y)))", "score": 0}
{"id": "eqasc_train_12104", "prediction": "all x.(Fold(x) -> DuctileRockDeformation(x))", "score": 0}
{"id": "eqasc_train_12105", "prediction": "all x.(Himalaya(x) -> FormedByDuctileRockDeformation(x))", "score": 0}
{"id": "eqasc_train_12106", "prediction": "all x y z.((MutationInSexCells(x) & Parent(y) & ParentOffspring(z)) -> (MutationCanCauseNewTrait(x,y,z) & AppearsInOffspring(x,y,z)))", "score": 0}
{"id": "eqasc_train_12107", "prediction": "all x y.((Mutations(x) & Cell(y)) -> AccidentalAlterationsOfGeneticCode(x,y))", "score": 0}
{"id": "eqasc_train_12108", "prediction": "all x y.((AttentionalAlterationsOfGeneticCode(x) & Cell(y)) -> CanCauseNewTraits(x,y))", "score": 0}
{"id": "eqasc_train_12109", "prediction": "all x.(SexCell(x) -> (Gamete(x) & SpermInMale(x) & SpermInFemale(x)))", "score": 0}
{"id": "eqasc_train_12110", "prediction": "all x y z.((MutationInGametes(x) & Parent(y) & ParentOffspring(z)) -> (MutationCanCauseNewTrait(x,y,z) & AppearInOffspring(x,y,z)))", "score": 0}
{"id": "eqasc_train_12111", "prediction": "all x.(Trait(x) -> (InitiatedByMutation(x) & InitiatedByRecombination(x)))", "score": 0}
{"id": "eqasc_train_12112", "prediction": "all x.(Mutation(x) -> CausedByRecombination(x))", "score": 0}
{"id": "eqasc_train_12113", "prediction": "all x y z.((MutationInGametes(x) & Parent(y) & ParentOffspring(z)) -> (MutationCanCauseNewTrait(x,y,z) & AppearInOffspring(x,y,z)))", "score": 0}
{"id": "eqasc_train_12114", "prediction": "all x.((Child(x) & Offspring(x) & ImmatureOffspring(x)) -> Ambiguous(x))", "score": 0}
{"id": "eqasc_train_12115", "prediction": "all x y.((MutationInSexCells(x) & Parent(y)) -> NewTrait(x,y))", "score": 0}
{"id": "eqasc_train_12116", "prediction": "all x.(Allel(x) -> (ArisesByMutation(x) & Mutation(x)))", "score": 0}
{"id": "eqasc_train_12117", "prediction": "all x y.((SexCell(x) & Parent(y)) -> CanCauseNewAlleles(x,y))", "score": 0}
{"id": "eqasc_train_12118", "prediction": "all x y.((Father(x) & Mother(y)) -> ParentDifferently(x,y))", "score": 0}
{"id": "eqasc_train_12119", "prediction": "all x y.((Mutation(x) & SexCells(y) & (Mother(x) | Father(x))) -> NewTrait(x,y))", "score": 0}
{"id": "eqasc_train_12120", "prediction": "all x y.((MutationInParentsSexCells(x) & Child(y)) -> CanCauseNewTraits(x,y))", "score": 0}
{"id": "eqasc_train_12121", "prediction": "exists x.(AnimalOffspring(x) & LooksDifferentFromParents(x))", "score": 0}
{"id": "eqasc_train_12122", "prediction": "all x y.((MutationInSexCells(x) & Parent(y)) -> CanCauseChildrenToLookDifferentFromParents(x,y))", "score": 0}
{"id": "eqasc_train_12123", "prediction": "all x.((Offspring(x) & Reproduction(x)) -> SubjectToMutation(x))", "score": 0}
{"id": "eqasc_train_12124", "prediction": "all x y.((Mutation(x) & Reproduction(y)) -> CausesNewTraits(x,y))", "score": 0}
{"id": "eqasc_train_12125", "prediction": "all x y.((AdaptiveTrait(x) & Organism(y)) -> HelpsSurviveInEnvironment(x,y))", "score": 0}
{"id": "eqasc_train_12126", "prediction": "all x y.((MutationInSexCells(x) & Parent(y)) -> HelpsOffspringSurvive(x,y))", "score": 0}
{"id": "eqasc_train_12127", "prediction": "all x y.((Fertilization(x) & Sperm(y) & Egg(y)) -> FusesToFormDiploidZygote(x,y))", "score": 1}
{"id": "eqasc_train_12128", "prediction": "all x y.((Fertilization(x) & MaleGamete(y) & Egg(y)) -> FuseToFormDiplote(x,y))", "score": 0}
{"id": "eqasc_train_12129", "prediction": "all x y.((HaploidGamete(x) & HaploidGamete(y)) -> Fertilization(x))", "score": 0}
{"id": "eqasc_train_12130", "prediction": "all x.((Embryo(x) & CreatedInFertilityProcess(x)) -> HumanLife(x))", "score": 0}
{"id": "eqasc_train_12131", "prediction": "all x y z.((Fusing(x,y) & Sperm(y) & Egg(z)) -> CreatesNewLife(x,z))", "score": 0}
{"id": "eqasc_train_12132", "prediction": "all x y z.((Ssperm(x) & Egg(y) & Sperm(z) & Meet(x,y) & MakesWayIntoCytoplasm(z,y)) -> Penetration(x,z))", "score": 0}
{"id": "eqasc_train_12133", "prediction": "all x.(Fertilization(x) -> RequiresPenetration(x))", "score": 0}
{"id": "eqasc_train_12134", "prediction": "all x y.((Fertilization(x) & MaleGamete(y) & Egg(y)) -> FusesToFormDiploidZygote(x,y))", "score": 1}
{"id": "eqasc_train_12135", "prediction": "all x y.((Gamete(x) & Gamete(y) & FusesToFormDiploidZygote(x,y)) -> Fertilization(x))", "score": 0}
{"id": "eqasc_train_12136", "prediction": "all x.(Gamete(x) -> (FamiliarTypes(x) & FemaleOvum(x) | FemaleEggCell(x)) & MaleSpermCell(x)))", "score": -1}
{"id": "eqasc_train_12137", "prediction": "all x y.((Fertilization(x) & MaleGamete(y) & FemaleGamete(y)) -> FusesToFormDiplote(x,y))", "score": 0}
{"id": "eqasc_train_12138", "prediction": "all x y.((FemaleSsperm(x) & Egg(y) & Fertilizes(x,y)) -> BabySheep(x))", "score": 0}
{"id": "eqasc_train_12139", "prediction": "all x y.((BabyGirl(x) & FemaleSsperm(y) & FusingWithEgg(y,x)) -> DiploidZygote(x))", "score": 0}
{"id": "eqasc_train_12140", "prediction": "all x y.((Gamete(x) & Gamete(y) & FuseToFormDiploidZygote(x,y)) -> FertilizationOccurs(x))", "score": 0}
{"id": "eqasc_train_12141", "prediction": "all x y.((SexualReproduction(x) & Sperm(y) & Egg(y)) -> InvolvesFusingToFormDiplote(x,y))", "score": 0}
{"id": "eqasc_train_12142", "prediction": "all x.((HumanOvum(x) & Fertilized(x)) -> ZygoteFormation(x))", "score": 0}
{"id": "eqasc_train_12143", "prediction": "all x y.((Zygote(x) & Ovum(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_train_12144", "prediction": "all x y.((SeedDispersal(x) & Plant(y)) -> PositiveImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_12145", "prediction": "all x.(SeedDispersal(x) -> Bird(x))", "score": 0}
{"id": "eqasc_train_12146", "prediction": "all x y.((Bird(x) & Plant(y)) -> PositiveImpact(x,y))", "score": 0}
{"id": "eqasc_train_12147", "prediction": "all x.((MoistureLevel(x) & BeforePlanting(x) & BeforeFlowering(x)) -> GreatestImpactOnYield(x))", "score": 0}
{"id": "eqasc_train_12148", "prediction": "all x.(SeedDispersal(x) -> (PositiveImpactOnFlowering(x) & PositiveImpactOnYield(x)))", "score": 0}
{"id": "eqasc_train_12149", "prediction": "all x.(GrapeSeed(x) -> DispersedByAnimals(x))", "score": 0}
{"id": "eqasc_train_12150", "prediction": "all x y.((Animal(x) & Plant(y)) -> PositiveImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_12151", "prediction": "all x y.((Bird(x) & Plant(y)) -> PositiveImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_12152", "prediction": "all x y.((Animal(x) & Seed(y)) -> (Carries(x,y) & DispersesPlant(x)))", "score": 0}
{"id": "eqasc_train_12153", "prediction": "all x y.((Animal(x) & Seed(y)) -> (Carries(x,y) & PositiveForPlant(x,y)))", "score": 0}
{"id": "eqasc_train_12154", "prediction": "all x.(Plant(x) -> FoundationOfEcosystemsFoodChain(x))", "score": 0}
{"id": "eqasc_train_12155", "prediction": "all x y.((SeedDispersal(x) & Ecosystem(y)) -> PositiveImpactOnFoodChain(x,y))", "score": 0}
{"id": "eqasc_train_12156", "prediction": "all x.(Human(x) -> (DependsOnPlants(x) & DependsOnAnimals(x)))", "score": 0}
{"id": "eqasc_train_12157", "prediction": "all x.(SeedDispersal(x) -> PositiveImpactOnHumanSurvival(x))", "score": 0}
{"id": "eqasc_train_12158", "prediction": "all x y.((Seed(x) & Wind(y) & Animal(z)) -> DispersedBy(x,y,z))", "score": 0}
{"id": "eqasc_train_12159", "prediction": "all x y.((Wind(x) & Animal(y)) -> PositiveImpactOnPlants(x,y))", "score": 0}
{"id": "eqasc_train_12160", "prediction": "all x.(PopulationDensity(x) -> (AverageNumberOfIndividuals(x) & PerUnitOfAreaOrVolume(x)))", "score": 0}
{"id": "eqasc_train_12161", "prediction": "all x.(Density(x) -> PopulationDividedByArea(x))", "score": 0}
{"id": "eqasc_train_12162", "prediction": "all x.((Population(x) & DividedByArea(x)) -> AverageNumberOfIndividualsPerUnitOfAreaOrVolume(x))", "score": 0}
{"id": "eqasc_train_12163", "prediction": "all x.((PopulationCrashes(x) & HighDensityPopulations(x)) -> Devastating(x))", "score": 0}
{"id": "eqasc_train_12164", "prediction": "all x y.((Species(x) & IncreasesTooQuicklyTooMuchInFixedArea(x)) -> CanBecomeExtinct(y))", "score": 0}
{"id": "eqasc_train_12165", "prediction": "all x.(PopulationDensity(x) -> AffectsEnvironmentalBalance(x))", "score": 0}
{"id": "eqasc_train_12166", "prediction": "all x.(AverageNumberOfIndividualsPerUnitOfArea(x) -> AffectsEnvironmentalBalance(x))", "score": 0}
{"id": "eqasc_train_12167", "prediction": "all x.(PopulationDensity(x) -> Variable(x))", "score": 0}
{"id": "eqasc_train_12168", "prediction": "all x.((Individuals(x) & UnitOfArea(x)) -> Variable(x))", "score": 0}
{"id": "eqasc_train_12169", "prediction": "all x.((MeasurementOfGrowth(x) & PopulationDensity(x)) -> MeasuresGrowth(x))", "score": 0}
{"id": "eqasc_train_12170", "prediction": "all x y.((Area(x) & Area(y)) -> AverageNumberOfPeoplePerUnit(x,y))", "score": 0}
{"id": "eqasc_train_12171", "prediction": "all x.(MeasureOfGrowth(x) -> (AverageNumberOfIndividualsPerUnitOfAreaOrVolume(x) & PerUnitOfVolumeOrAreaOrVolume(x)))", "score": 0}
{"id": "eqasc_train_12172", "prediction": "all x.((Individual(x) & (UnitOfArea(x) | UnitOfVolume(x))) -> Variable(x))", "score": 0}
{"id": "eqasc_train_12173", "prediction": "all x.((EnvironmentBalance(x) & AverageNumberOfIndividualsPerUnitOfAreaOrVolume(x)) -> AffectedBy(x,AverageNumberOfIndividuals(x))", "score": -1}
{"id": "eqasc_train_12174", "prediction": "all x.(Economy(x) -> (AffectedByPopulationSize(x) & AffectedByDensity(x)))", "score": 0}
{"id": "eqasc_train_12175", "prediction": "all x.((Economy(x) & AverageNumberOfIndividualsPerUnitOfAreaOrVolume(x)) -> AffectedBy(x,AverageNumberOfIndividuals(x))", "score": -1}
{"id": "eqasc_train_12176", "prediction": "all x.(Centriole(x) -> OrganelleInCellDividending(x))", "score": 0}
{"id": "eqasc_train_12177", "prediction": "all x.(Centriole(x) -> ComesInPairs(x))", "score": 0}
{"id": "eqasc_train_12178", "prediction": "all x.((ComesInPairs(x) & Organelle(x)) -> CellDivision(x))", "score": 0}
{"id": "eqasc_train_12179", "prediction": "all x.(CellDivision(x) -> CreatesNewCells(x))", "score": 0}
{"id": "eqasc_train_12180", "prediction": "all x.(Centriole(x) -> (Organelle(x) & CreatesNewCells(x)))", "score": 0}
{"id": "eqasc_train_12181", "prediction": "all x.(Centriole(x) -> (Organelle(x) & InvolvedInMitosis(x)))", "score": 0}
{"id": "eqasc_train_12182", "prediction": "all x.(BasalBody(x) -> FunctionsAsCentrioles(x))", "score": 0}
{"id": "eqasc_train_12183", "prediction": "all x.(BasalBody(x) -> FunctionsAsOrganelles(x))", "score": 0}
{"id": "eqasc_train_12184", "prediction": "all x.((Organelle(x) & ComesInPairs(x)) -> InvolvedInCellDividend(x))", "score": 0}
{"id": "eqasc_train_12185", "prediction": "all x.(Centriole(x) -> (Organelle(x) & InvolvedInMitosis(x)))", "score": 0}
{"id": "eqasc_train_12186", "prediction": "all x.(BasalBody(x) -> CellDivision(x))", "score": 0}
{"id": "eqasc_train_12187", "prediction": "all x y.((Battery(x) & ChemicalEnergy(y)) -> ConvertsToElectricalEnergy(x,y))", "score": 0}
{"id": "eqasc_train_12188", "prediction": "all x y.((ElectricalEnergy(x) & Lamp(y)) -> Powers(x,y))", "score": 0}
{"id": "eqasc_train_12189", "prediction": "all x y.((Battery(x) & Lamp(y)) -> ConvertsChemicalEnergyToPower(x,y))", "score": 0}
{"id": "eqasc_train_12190", "prediction": "all x.(Electricity(x) -> (FormOfEnergy(x) & OftenCalledElectricalEnergy(x)))", "score": 0}
{"id": "eqasc_train_12191", "prediction": "all x.(BatteryElectricityComesConversion(x) -> ComesConversion(x))", "score": 0}
{"id": "eqasc_train_12192", "prediction": "all x y.((Battery(x) & ChemicalEnergy(y)) -> ConvertsToKineticEnergy(x,y))", "score": 0}
{"id": "eqasc_train_12193", "prediction": "all x.((AAALithiumCell(x) & BatteryLife(x,y)) -> SeveralMonths(y))", "score": 0}
{"id": "eqasc_train_12194", "prediction": "all x.(AALithiumCell(x) -> ConvertsChemicalEnergyToElectricalEnergy(x))", "score": 0}
{"id": "eqasc_train_12195", "prediction": "all x.((Battery(x) & Disconnect(x)) -> -DrivenByChemicalForces(x))", "score": 0}
{"id": "eqasc_train_12196", "prediction": "all x.(Battery(x) -> ProducesFlowOfElectrons(x))", "score": 0}
{"id": "eqasc_train_12197", "prediction": "all x.(Battery(x) -> ConvertsChemicalEnergyToPowerfulEnergySource(x))", "score": 0}
{"id": "eqasc_train_12198", "prediction": "all x.(Camera(x) -> UsesBatteries(x))", "score": 0}
{"id": "eqasc_train_12199", "prediction": "all x.(Camera(x) -> (UsesElectricalEnergy(x) & ConvertedFromChemicalEnergy(x)))", "score": 0}
{"id": "eqasc_train_12200", "prediction": "all x.(Battery(x) -> StoresChemicals(x))", "score": 0}
{"id": "eqasc_train_12201", "prediction": "all x.((FireAlarm(x) & Battery(x)) -> ChecksBatteries(x,firstMonth))", "score": 0}
{"id": "eqasc_train_12202", "prediction": "all x y.((FireAlarm(x) & ChemicalEnergy(y)) -> ConvertsToElectricalEnergy(x,y))", "score": 0}
{"id": "eqasc_train_12203", "prediction": "all x.(DuracellBattery(x) -> ComesWithTester(x))", "score": 0}
{"id": "eqasc_train_12204", "prediction": "all x y.((Duracell(x) & ChemicalEnergy(y)) -> ConvertsToElectricalEnergy(x,y))", "score": 0}
{"id": "eqasc_train_12205", "prediction": "all x y.((Animal(x) & Animal(y)) -> SmellForFood(x,y))", "score": 0}
{"id": "eqasc_train_12206", "prediction": "exists x.(Olfaction(x) & UsedForFindingFood(x))", "score": 0}
{"id": "eqasc_train_12207", "prediction": "all x y.((Smell(x) & Animal(y)) -> UsedToLive(x,y))", "score": 0}
{"id": "eqasc_train_12208", "prediction": "all x.(Insect(x) -> CanSmellWithAntennae(x))", "score": 0}
{"id": "eqasc_train_12209", "prediction": "all x.(Insect(x) -> UsesAntennaeToFindFood(x))", "score": 0}
{"id": "eqasc_train_12210", "prediction": "all x.(Food(x) -> NeededForSurvival(x))", "score": 0}
{"id": "eqasc_train_12211", "prediction": "exists x.(Animal(x) & NeedsSmell(x))", "score": 0}
{"id": "eqasc_train_12212", "prediction": "all x y.((Animal(x) & Animal(y)) -> (Olfaction(x,y) & FindsFood(x,y)))", "score": 0}
{"id": "eqasc_train_12213", "prediction": "exists x.(Olification(x) & FoundByAnimals(x))", "score": 0}
{"id": "eqasc_train_12214", "prediction": "all x.(SenseOfSmell(x) -> MajorSense(x))", "score": 0}
{"id": "eqasc_train_12215", "prediction": "all x.(Animal(x) -> UsesMajorSensesToFindFood(x))", "score": 0}
{"id": "eqasc_train_12216", "prediction": "all x y.((SmellReceptor(x) & NerveTissue(y) & PicksUpSmells(y)) -> LocatedInNasalLinening(x,y))", "score": 0}
{"id": "eqasc_train_12217", "prediction": "all x.((Receptor(x) & LinensNase(x)) -> UsedToFindFood(x))", "score": 0}
{"id": "eqasc_train_12218", "prediction": "all x.(Food(x) -> (SmallRodents(x) | SmallBirds(x)))", "score": 0}
{"id": "eqasc_train_12219", "prediction": "all x.((Animal(x) & LikesToEatRodents(x)) -> (UsesSmell(x) & FindsRodents(x)))", "score": 0}
{"id": "eqasc_train_12220", "prediction": "all x.(Energy(x) -> (GrowsFood(x) & KeepsPeopleAlive(x)))", "score": 0}
{"id": "eqasc_train_12221", "prediction": "exists x.(Animal(x) & Smell(x) & UsedToStayAlive(x))", "score": 0}
{"id": "eqasc_train_12222", "prediction": "all x y.((Plasma(x) & Star(y)) -> (FormedByElectrons(x,y) & SeparatesFromAtoms(x,y)))", "score": 0}
{"id": "eqasc_train_12223", "prediction": "all x.((Plasma(x) & IonizedGas(x)) -> PlasmaDefined(x))", "score": 0}
{"id": "eqasc_train_12224", "prediction": "all x.(IonizedGas(x) -> FormedInStars(x))", "score": 0}
{"id": "eqasc_train_12225", "prediction": "all x.(Electron(x) -> ContainsEnergy(x))", "score": 0}
{"id": "eqasc_train_12226", "prediction": "all x y.((Plasma(x) & Energy(y)) -> FormedUsing(x,y))", "score": 0}
{"id": "eqasc_train_12227", "prediction": "all x.(Plasma(x) -> existsInsideStars(x) & existsInInterstellarGases(x))", "score": 0}
{"id": "eqasc_train_12228", "prediction": "all x.(Plasma(x) -> (FormedByElectrons(x) & SeparatesFromInterstellarGases(x)))", "score": 0}
{"id": "eqasc_train_12229", "prediction": "all x y z.((BrightAstronomicalObject(x) & BrightPlanetaryNebula(y) & BrightAstronomicalObject(z)) -> ColorSeenIn(x,y,z))", "score": 0}
{"id": "eqasc_train_12230", "prediction": "all x y z.((Electron(x) & Atom(y) & BrightAstronomicalObject(z) & SeparatesFrom(x,y)) -> FormsPlasma(x,z))", "score": 0}
{"id": "eqasc_train_12231", "prediction": "all x.((Plasma(x) & Star(x)) -> HighTemperature(x))", "score": 0}
{"id": "eqasc_train_12232", "prediction": "all x y.((Plasma(x) & Sun(y)) -> FormedInHighTemperatures(x,y))", "score": 0}
{"id": "eqasc_train_12233", "prediction": "all x.(Star(x) -> Shines(x))", "score": 0}
{"id": "eqasc_train_12234", "prediction": "all x.(Plasma(x) -> Hot(x))", "score": 0}
{"id": "eqasc_train_12235", "prediction": "all x.(InterstellarSpace(x) -> ContainsPlasma(x))", "score": 0}
{"id": "eqasc_train_12236", "prediction": "all x.(InterstellarSpace(x) -> (ContainsElectrons(x) & ContainsAtoms(x) & ContainsStars(x)))", "score": 0}
{"id": "eqasc_train_12237", "prediction": "all x.(Star(x) -> PlasmaState(x))", "score": 0}
{"id": "eqasc_train_12238", "prediction": "all x y.((Electron(x) & Star(y)) -> SeparatesIn(x,y))", "score": 0}
{"id": "eqasc_train_12239", "prediction": "all x.(Plasma(x) -> (Electrons(x) | Protons(x)))", "score": 0}
{"id": "eqasc_train_12240", "prediction": "all x.(Plasma(x) -> ComposedOfProtons(x))", "score": 0}
{"id": "eqasc_train_12241", "prediction": "all x.(Universe(x) -> PlasmaState(x))", "score": 0}
{"id": "eqasc_train_12242", "prediction": "all x y z.((Universe(x) & Electron(y) & Atom(z)) -> (ComposedOf(x,y) & SeparatedFrom(y,z)))", "score": 0}
{"id": "eqasc_train_12243", "prediction": "all x.(Plasma(x) -> LiquidPieceOfBlood(x))", "score": 0}
{"id": "eqasc_train_12244", "prediction": "all x y.((LiquidPieceOfBlood(x) & Electrons(y) & Stars(z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_train_12245", "prediction": "all x y.((GasIonization(x) & Electrons(y)) -> LosesIonization(x,y))", "score": 0}
{"id": "eqasc_train_12246", "prediction": "all x y.((PlasmaState(x) & Gas(y)) -> RequiresIonization(x,y))", "score": 0}
{"id": "eqasc_train_12247", "prediction": "all x.(MetalAtom(x) -> IonizedInIntensePlasma(x))", "score": 0}
{"id": "eqasc_train_12248", "prediction": "all x y.((Plasma(x) & Metal(y)) -> Ionizes(x,y))", "score": 0}
{"id": "eqasc_train_12249", "prediction": "all x y.((Object(x) & Folding(x,y)) -> ChangeShape(x,y))", "score": 0}
{"id": "eqasc_train_12250", "prediction": "all x.(Transform(x) -> (GenerativeTerm(x) & MeaningChangeShape(x)))", "score": 0}
{"id": "eqasc_train_12251", "prediction": "all x y.((Object(x) & Folding(x)) -> CausesTransformation(y))", "score": 0}
{"id": "eqasc_train_12252", "prediction": "all x.(Object(x) -> Solid(x))", "score": 0}
{"id": "eqasc_train_12253", "prediction": "all x y.((Solid(x) & Solid(y)) -> ChangeShape(x,y))", "score": 0}
{"id": "eqasc_train_12254", "prediction": "all x.(SideChair(x) -> FoldsForEasyStorage(x))", "score": 0}
{"id": "eqasc_train_12255", "prediction": "all x.(SideChair(x) -> CanChangeShape(x))", "score": 0}
{"id": "eqasc_train_12256", "prediction": "all x.(Origami(x) -> PaperFoldingArtProject(x))", "score": 0}
{"id": "eqasc_train_12257", "prediction": "all x.(Origami(x) -> CausesObjectToChangeShape(x))", "score": 0}
{"id": "eqasc_train_12258", "prediction": "all x.((DoseOrigami(x) & ObjectChangeShape(x)) -> DoseOrigami(x))", "score": 0}
{"id": "eqasc_train_12259", "prediction": "all x.(TriFoldCard(x) -> FoldsIntoThreeSections(x))", "score": 0}
{"id": "eqasc_train_12260", "prediction": "all x y z.((Card(x) & Card(y) & Section(z) & BendsIntoThreeSections(x,y,z)) -> ChangesShape(x))", "score": 0}
{"id": "eqasc_train_12261", "prediction": "all x.((TriFold(x) | HalfFold(x)) -> Acceptable(x))", "score": 0}
{"id": "eqasc_train_12262", "prediction": "all x.(Machine(x) -> CanCauseObjectsToChangeShape(x))", "score": 0}
{"id": "eqasc_train_12263", "prediction": "all x.(Origami(x) -> ChangesPaperShape(x))", "score": 0}
{"id": "eqasc_train_12264", "prediction": "all x y.((DoingOrigami(x) & Object(y) & DoingOrigamiWith(x,y)) -> ChangesShape(y))", "score": 0}
{"id": "eqasc_train_12265", "prediction": "all x.(Fold(x) -> CausedByCompressionalForces(x))", "score": 0}
{"id": "eqasc_train_12266", "prediction": "all x y.((CompressionalForce(x) & Object(y)) -> ChangesShape(y,Shape))", "score": 0}
{"id": "eqasc_train_12267", "prediction": "all x.(Behavior(x) -> CanBeLearntThroughPlay(x))", "score": 0}
{"id": "eqasc_train_12268", "prediction": "all x.(ViolentBehavior(x) -> LearnedBehavior(x))", "score": 0}
{"id": "eqasc_train_12269", "prediction": "all x.(Violence(x) -> LearnedThroughPlay(x))", "score": 0}
{"id": "eqasc_train_12270", "prediction": "all x.(Language(x) -> LearnedHumanBehavior(x))", "score": 0}
{"id": "eqasc_train_12271", "prediction": "all x.(Language(x) -> LearnedThroughPlay(x))", "score": 0}
{"id": "eqasc_train_12272", "prediction": "all x y.((Girl(x) & Doll(y)) -> PlayedWithForGenerations(x,y))", "score": 0}
{"id": "eqasc_train_12273", "prediction": "all x y.((Girl(x) & Doll(y)) -> UsedToLearnBehaviors(x,y))", "score": 0}
{"id": "eqasc_train_12274", "prediction": "all x.(Ian(x) -> PlaysRolePlayingGames(x))", "score": 0}
{"id": "eqasc_train_12275", "prediction": "all x.(Behavior(x) -> CanBeLearntThroughGames(x))", "score": 0}
{"id": "eqasc_train_12276", "prediction": "all x.(Kid(x) -> PlaysHockeyInDriveways(x))", "score": 0}
{"id": "eqasc_train_12277", "prediction": "all x.((Behavior(x) & Hockey(y)) -> CanBeLearntThrough(x,y))", "score": 0}
{"id": "eqasc_train_12278", "prediction": "all x.(Game(x) -> FunToPlay(x))", "score": 0}
{"id": "eqasc_train_12279", "prediction": "all x.(Behavior(x) -> LearnedThroughFunGames(x))", "score": 0}
{"id": "eqasc_train_12280", "prediction": "all x.(Kid(x) -> ImitatesActionsAndBehaviors(x))", "score": 0}
{"id": "eqasc_train_12281", "prediction": "all x.(Action(x) -> LearnedThroughPlay(x))", "score": 0}
{"id": "eqasc_train_12282", "prediction": "all x.(EmphasisOnPlayingSport(x) -> PlayingSport(x))", "score": 0}
{"id": "eqasc_train_12283", "prediction": "all x.(Behavior(x) -> (LearnsThroughSports(x) & ThroughSports(x)))", "score": 0}
{"id": "eqasc_train_12284", "prediction": "all x.(Kitten(x) -> PracticesHuntingByPlaying(x))", "score": 0}
{"id": "eqasc_train_12285", "prediction": "all x.((Kitten(x) & Hunting(x)) -> LearningBehavior(x))", "score": 0}
{"id": "eqasc_train_12286", "prediction": "all x.(Dog(x) -> (LearnsBoyBehaviorsThroughFetch(x) & CanBeLearnByFetch(x)))", "score": 0}
{"id": "eqasc_train_12287", "prediction": "all x.((EthicalBehavior(x) & ForWilson(x)) -> PatrioticBehavior(x))", "score": 0}
{"id": "eqasc_train_12288", "prediction": "all x.(EthicalWeapons(x) -> LearnedThroughPlay(x))", "score": 0}
{"id": "eqasc_train_12289", "prediction": "all x y.((Structure(x) & Behavior(y)) -> (HelpsAnimalsMove(x,y) & HelpsAnimalsSurvive(x,y)))", "score": 0}
{"id": "eqasc_train_12290", "prediction": "all x y.((Animal(x) & Animal(y)) -> HelpsSurvive(x,y))", "score": 0}
{"id": "eqasc_train_12291", "prediction": "all x.(Kid(x) -> PlaysSport(x))", "score": 0}
{"id": "eqasc_train_12292", "prediction": "all x.(AnimalBehavior(x) -> ScientificStudyOfAnimals(x))", "score": 0}
{"id": "eqasc_train_12293", "prediction": "all x.(Animal(x) -> CanBeLearntFromPlay(x))", "score": 0}
{"id": "eqasc_train_12294", "prediction": "all x.(CognitiveBehavior(x) -> BehaviorOfUnderstanding(x))", "score": 0}
{"id": "eqasc_train_12295", "prediction": "all x.(Play(x) -> Cognitive(x))", "score": 0}
{"id": "eqasc_train_12296", "prediction": "all x.((HasFun(x) & PlaysTogether(x)) -> CanHaveFun(x))", "score": 0}
{"id": "eqasc_train_12297", "prediction": "all x.((Behavior(x) & FunToLearn(x)) -> Behaviors(x))", "score": 0}
{"id": "eqasc_train_12298", "prediction": "all x y z.((Hemisphere(x) & TiltedTowardsSun(x) & Hemisphere(y) & Sun(z)) -> ReceivesMoreDirectSunlight(y,z))", "score": 0}
{"id": "eqasc_train_12299", "prediction": "all x y.((Summer(x) & Summer(y)) -> SunlightStrikesNorthernPartOfEarth(x,y))", "score": 0}
{"id": "eqasc_train_12300", "prediction": "all x y.((Hemisphere(x) & Summer(y)) -> TiltedTowardsSun(x,y))", "score": 0}
{"id": "eqasc_train_12301", "prediction": "all x.(DirectSunlight(x) -> CausesHigherTemperatures(x))", "score": 0}
{"id": "eqasc_train_12302", "prediction": "all x y z.((Hemisphere(x) & Sun(y) & TiltedTowards(x,y)) -> ReceivesHigherTemperatures(x,z))", "score": 0}
{"id": "eqasc_train_12303", "prediction": "all x.((Summer(x) & NorthernHemisphere(x)) -> SouthernHemisphere(x))", "score": 0}
{"id": "eqasc_train_12304", "prediction": "all x.((Summer(x) & TiltedTowardsSun(x)) -> TiltedTowardsSun(x))", "score": 1}
{"id": "eqasc_train_12305", "prediction": "all x.(TiltedTowardsSun(x) -> Summer(x))", "score": 0}
{"id": "eqasc_train_12306", "prediction": "all x.((Hemisphere(x) & ReceivesMoreSunlight(x)) -> Summer(x))", "score": 0}
{"id": "eqasc_train_12307", "prediction": "all x.(Rio(x) -> InSouthernHemisphere(x))", "score": 0}
{"id": "eqasc_train_12308", "prediction": "all x.((Rio(x) & TiltedTowardsSun(x)) -> ReceivesDirectSunlight(x))", "score": 0}
{"id": "eqasc_train_12309", "prediction": "all x.((NorthernHemisphere(x) & Summer(x)) -> TiltedTowardsSun(x))", "score": 0}
{"id": "eqasc_train_12310", "prediction": "all x.((Hemisphere(x) & MoreDirectSunlight(x)) -> Summer(x))", "score": 0}
{"id": "eqasc_train_12311", "prediction": "all x y.((Season(x) & DirectSunlight(y) & Receives(x,y)) -> Changes(x))", "score": 0}
{"id": "eqasc_train_12312", "prediction": "all x.((HalfOfEarth(x) & PacificHemisphere(x)) -> NamedHalfOfEarth(x))", "score": 0}
{"id": "eqasc_train_12313", "prediction": "all x y z.((Earth(x) & Earth(y) & Sun(z) & TiltedTowards(x,y,z)) -> ReceivesDirectSunlight(x,y))", "score": 0}
{"id": "eqasc_train_12314", "prediction": "(all x.(Region(x) -> WesternHemisphere(x)) & (Region(x) -> EasternHemisphere(x)))", "score": 0}
{"id": "eqasc_train_12315", "prediction": "all x.(TiltedTowardsSun(x) -> ReceivesMoreDirectSunlight(x))", "score": 0}
{"id": "eqasc_train_12316", "prediction": "all x y.((Hemisphere(x) & TiltedTowardsSun(x)) -> HigherTemperatures(x,y))", "score": 0}
{"id": "eqasc_train_12317", "prediction": "all x.(PapayaTree(x) -> GrowsInDirectSunlight(x))", "score": 0}
{"id": "eqasc_train_12318", "prediction": "all x y.((Hemisphere(x) & TiltedTowardsSun(x)) -> GrowsPapayaTreesInSunlight(x))", "score": 0}
{"id": "eqasc_train_12319", "prediction": "all x.(DirectSunlight(x) -> BurnsFoliage(x))", "score": 0}
{"id": "eqasc_train_12320", "prediction": "all x y z.((Hemisphere(x) & TiltedTowardsSun(x) & Sun(y) & Hemisphere(z)) -> BurntFoliage(z))", "score": 0}
{"id": "eqasc_train_12321", "prediction": "all x.(Fungus(x) -> HasSpecialStructuresForPenetratingHost(x))", "score": 0}
{"id": "eqasc_train_12322", "prediction": "(exists x.(Fungus(x) & TreeSpecificity(x)) & HostSpecificityObserved(x))", "score": 0}
{"id": "eqasc_train_12323", "prediction": "all x.(Fungus(x) -> (HasSpecialStructuresForPenetratingTrees(x) & PenetratingTrees(x)))", "score": 0}
{"id": "eqasc_train_12324", "prediction": "all x.(Yeast(x) -> (HasSpecialStructures(x) & PenetratesHost(x)))", "score": 0}
{"id": "eqasc_train_12325", "prediction": "all x y.((Bacteria(x) & Fungi(y) & Viral(y)) -> (InvadesHost(x) & CausesDisease(x)))", "score": 0}
{"id": "eqasc_train_12326", "prediction": "all x y.((Bacteria(x) & Host(y)) -> CausesDisease(x,y))", "score": 0}
{"id": "eqasc_train_12327", "prediction": "all x y.((Mold(x) & Host(y)) -> SpecialStructuresForPenetrating(x,y))", "score": 0}
{"id": "eqasc_train_12328", "prediction": "all x.((ParasiticPlant(x) & Fungus(x)) -> CanAttackAnimals(x))", "score": 0}
{"id": "eqasc_train_12329", "prediction": "all x y.((ParasiticCreature(x) & Animal(y)) -> HasSpecialStructuresForPenetrating(x,y))", "score": 0}
{"id": "eqasc_train_12330", "prediction": "all x y.((Yeast(x) & Host(y)) -> HasSpecialStructureForPenetrating(x,y))", "score": 0}
{"id": "eqasc_train_12331", "prediction": "all x y.((Mold(x) & Host(y)) -> HasSpecialStructuresForPenetrating(x,y))", "score": 0}
{"id": "eqasc_train_12332", "prediction": "all x.(Fungus(x) -> (HasSpecialStructures(x) & Invading(x) & CausesDisease(x)))", "score": 0}
{"id": "eqasc_train_12333", "prediction": "all x.(Mushroom(x) -> (HasSpecialStructures(x) & PenetratesHost(x)))", "score": 0}
{"id": "eqasc_train_12334", "prediction": "all x.(HostTissuePenetration(x) -> FlowsToPointOfVascularConnectivity(x))", "score": 0}
{"id": "eqasc_train_12335", "prediction": "all x y.((Fungus(x) & Host(y)) -> InvadesToVascularConncectivity(x,y))", "score": 0}
{"id": "eqasc_train_12336", "prediction": "all x y.((Mold(x) & Host(y)) -> HasSpecialStructuresForPenetrating(x,y))", "score": 0}
{"id": "eqasc_train_12337", "prediction": "all x.((Cell(x) & DividesUncontrollably(x)) -> (FormsTumor(x) | FormsAnomalianMassOfCells(x)))", "score": 0}
{"id": "eqasc_train_12338", "prediction": "all x.((P53(x) & Mutated(x)) -> CellsDivideUncontrollably(x))", "score": 0}
{"id": "eqasc_train_12339", "prediction": "all x.((P53Mutated(x) & TumorForm(x)) -> MayForm(x))", "score": 0}
{"id": "eqasc_train_12340", "prediction": "all x.(Tumor(x) -> (MassOfNeoplasticOrigin(x)))", "score": 0}
{"id": "eqasc_train_12341", "prediction": "all x.((Cell(x) & DividesUncontrollably(x)) -> FormsNeoplasticMass(x))", "score": 0}
{"id": "eqasc_train_12342", "prediction": "all x.((Cell(x) & DividesUncontrollably(x)) -> FormsNeoplasticMass(x))", "score": 0}
{"id": "eqasc_train_12343", "prediction": "all x.((Cell(x) & BeginsDivisionUncontrollably(x)) -> Cancer(x))", "score": 0}
{"id": "eqasc_train_12344", "prediction": "all x y.((Cancer(x) & Tumor(y)) -> MayCauseToForm(x,y))", "score": 0}
{"id": "eqasc_train_12345", "prediction": "all x.(Cancer(x) -> (GrowthOfAnomalCells(x)))", "score": 0}
{"id": "eqasc_train_12346", "prediction": "all x.((Cell(x) & DividesUncontrollably(x)) -> FormsCancerGrowth(x))", "score": 0}
{"id": "eqasc_train_12347", "prediction": "all x.(Cancer(x) -> MalignantTumor(x))", "score": 0}
{"id": "eqasc_train_12348", "prediction": "all x.((Cell(x) & DividesUncontrollably(x)) -> MayFormCancer(x))", "score": 0}
{"id": "eqasc_train_12349", "prediction": "all x y z.((Fibroid(x) & Wart(y) & Cancer(z)) -> (Tumor(x) & Tumor(y) & Tumor(z)))", "score": 0}
{"id": "eqasc_train_12350", "prediction": "all x.((Cell(x) & DividesUncontrollably(x)) -> FormsFibroid(x))", "score": 0}
{"id": "eqasc_train_12351", "prediction": "all x.((Surgery(x) & RemoveTumor(x)) -> Option(x))", "score": 0}
{"id": "eqasc_train_12352", "prediction": "all x.((Cell(x) & DividesUncontrollably(x)) -> MayNeedSurgery(x))", "score": 0}
{"id": "eqasc_train_12353", "prediction": "all x.(AbnormalCell(x) -> IrregularShape(x))", "score": 0}
{"id": "eqasc_train_12354", "prediction": "all x.((Cell(x) & DividesUncontrollably(x)) -> FormsIrregularMassOfCells(x))", "score": 0}
{"id": "eqasc_train_12355", "prediction": "all x.(Tumor(x) -> (Benign(x) | Malignant(x)))", "score": 0}
{"id": "eqasc_train_12356", "prediction": "all x.((Cell(x) & DividesUncontrollably(x)) -> (Benign(x) | Malignant(x)))", "score": 0}
{"id": "eqasc_train_12357", "prediction": "all x.(TumorCell(x) -> AnomalyCell(x))", "score": 0}
{"id": "eqasc_train_12358", "prediction": "all x.(AnomalyCells(x) -> CanDivideUncontrollably(x))", "score": 0}
{"id": "eqasc_train_12359", "prediction": "all x.((Cell(x) & DividesUncontrollably(x)) -> (FormsFibroid(x) | FormsWart(x) | FormsCancer(x)))", "score": 0}
{"id": "eqasc_train_12360", "prediction": "all x.(Menopause(x) -> (OccursWhenMenstruationStops(x) & UsuallyInMiddleAdulthood(x)))", "score": 0}
{"id": "eqasc_train_12361", "prediction": "all x.((Menopause(x) & Age40(x)) -> PrematureMenopause(x))", "score": 0}
{"id": "eqasc_train_12362", "prediction": "all x.(PrematureForMenstruation(x) -> StopBefore40(x))", "score": 0}
{"id": "eqasc_train_12363", "prediction": "all x.(Menopause(x) -> GatewayToSecondAdulthood(x))", "score": 0}
{"id": "eqasc_train_12364", "prediction": "all x.((GatewayToSecondAdulthood(x) & MenstruationStops(x)) -> Occurs(x))", "score": 0}
{"id": "eqasc_train_12365", "prediction": "all x y.((Lupron(x) & Fibroid(y)) -> (StopsEstrogenProduction(x,y) & CausesSmoothSize(x,y) & MenstruationStops(x)))", "score": 0}
{"id": "eqasc_train_12366", "prediction": "all x.(Lupron(x) -> BringsOnMenopause(x))", "score": 0}
{"id": "eqasc_train_12367", "prediction": "all x.(HotFlash(x) -> (ClassicSignOfMenopause(x) & ClassicSignOfPerimenopause(x)))", "score": 0}
{"id": "eqasc_train_12368", "prediction": "all x.((MenstruationStop(x) & HotFlash(x)) -> CanOccur(x))", "score": 0}
{"id": "eqasc_train_12369", "prediction": "all x.((MenopauseChanges(x) & Woman(y)) -> ClosesReproductiveYears(y,x))", "score": 0}
{"id": "eqasc_train_12370", "prediction": "all x.((Female(x) & ReproductiveYearsEndsInMiddleAdulthood(x)) -> EndsInMiddleAdulthood(x))", "score": 0}
{"id": "eqasc_train_12371", "prediction": "all x y.((HotFlash(x) & MenstruationStop(y)) -> CanOccur(x,y))", "score": 0}
{"id": "eqasc_train_12372", "prediction": "all x.(WhiteBryony(x) -> (SupprimedMenses(x) & MenstruationTooEarly(x) & MenstruationTooProfuse(x)))", "score": 0}
{"id": "eqasc_train_12373", "prediction": "all x.(Menopause(x) -> (OccursWhenMensesStopOccurring(x) & UsuallyInMiddleAdulthood(x)))", "score": 0}
{"id": "eqasc_train_12374", "prediction": "all x.((Menopause(x) & MenstruationStopsPermanently(x)) -> Occurs(x))", "score": 0}
{"id": "eqasc_train_12375", "prediction": "all x.(MiddleAdulthood(x) -> Menopause(x))", "score": 0}
{"id": "eqasc_train_12376", "prediction": "all x.(MiddleAdulthood(x) -> (TimeChange(x) & Development(x)))", "score": 0}
{"id": "eqasc_train_12377", "prediction": "all x.(Menopause(x) -> (TimeOfChange(x) & TimeOfDevelopment(x) & MenstruationStops(x)))", "score": 0}
{"id": "eqasc_train_12378", "prediction": "all x.(MiddleAdulthood(x) -> (EndsAroundAge35To40(x) & ContinuesThroughAge65To70(x)))", "score": 0}
{"id": "eqasc_train_12379", "prediction": "all x.(Menopause(x) -> (OccursWhenMenstruationStops(x) & UsuallyBetween35And65YearsOld(x)))", "score": 0}
{"id": "eqasc_train_12380", "prediction": "all x.(MenopauseDiscomfort(x) -> VaginalDryness(x))", "score": 0}
{"id": "eqasc_train_12381", "prediction": "all x y.((VaginalDryness(x) & MenstruationStop(y)) -> CanOccur(x,y))", "score": 0}
{"id": "eqasc_train_12382", "prediction": "all x.(Wind(x) -> CausesErosion(x))", "score": 0}
{"id": "eqasc_train_12383", "prediction": "all x y.((Wind(x) & Soil(y)) -> CausesNaturalProcesses(x,y))", "score": 0}
{"id": "eqasc_train_12384", "prediction": "all x.(Erosion(x) -> AffectsFarmViability(x))", "score": 0}
{"id": "eqasc_train_12385", "prediction": "all x.(Wind(x) -> AffectsFarmViability(x))", "score": 0}
{"id": "eqasc_train_12386", "prediction": "all x.(WindErosion(x) -> (DamagesSoils(x) & DamagesCrops(x)))", "score": 0}
{"id": "eqasc_train_12387", "prediction": "all x y z.((Wind(x) & Soil(y) & Crop(z)) -> (DamageSoil(x,y) | DamageSoil(x,z)))", "score": 0}
{"id": "eqasc_train_12388", "prediction": "all x y.((Wind(x) & RockFormation(y)) -> Creates(x,y))", "score": 0}
{"id": "eqasc_train_12389", "prediction": "all x.(Erosion(x) -> (CausesDestructionOfAquaticHabitats(x) & Siltation(x) & Flooding(x)))", "score": 0}
{"id": "eqasc_train_12390", "prediction": "all x.(HighWinds(x) -> CanLeadToDestructionOfAquaticHabitats(x))", "score": 0}
{"id": "eqasc_train_12391", "prediction": "all x.(Hurricane(x) -> CausesErosion(x))", "score": 0}
{"id": "eqasc_train_12392", "prediction": "all x.(Erosion(x) -> PhysicalRemovalOfRockParticles(x))", "score": 0}
{"id": "eqasc_train_12393", "prediction": "all x y.((Wind(x) & RockParticle(y)) -> CausesRemovalOf(x,y))", "score": 0}
{"id": "eqasc_train_12394", "prediction": "all x.(Sedimentation(x) -> ErosionResult(x))", "score": 0}
{"id": "eqasc_train_12395", "prediction": "all x.(Wind(x) -> CausesSedimentation(x))", "score": 0}
{"id": "eqasc_train_12396", "prediction": "(CausesWeathering(wind) & CausesWeathering(water))", "score": 0}
{"id": "eqasc_train_12397", "prediction": "all x.(Flooding(x) -> ErosionResult(x))", "score": 0}
{"id": "eqasc_train_12398", "prediction": "all x.(Wind(x) -> CausesFlooding(x))", "score": 0}
{"id": "eqasc_train_12399", "prediction": "all x y z.((Metal(x) & Heat(y) & Metal(z) & Conducts(x,y)) -> Expands(z))", "score": 0}
{"id": "eqasc_train_12400", "prediction": "all x.(Metal(x) -> (LargeSpecificHeats(x) & ConductsHeatWell(x)))", "score": 0}
{"id": "eqasc_train_12401", "prediction": "all x.((Metal(x) & LargeSpecificHeats(x)) -> Expands(x))", "score": 0}
{"id": "eqasc_train_12402", "prediction": "all x.(WarmedMetalRod(x) -> TransferOfHeatByConduction(x))", "score": 0}
{"id": "eqasc_train_12403", "prediction": "all x y.((Metal(x) & Warmed(x)) -> HeatTransferExpands(x,y))", "score": 0}
{"id": "eqasc_train_12404", "prediction": "all x.(Coin(x) -> MadeByMillOfMetal(x))", "score": 0}
{"id": "eqasc_train_12405", "prediction": "all x.(Coin(x) -> ConductsHeat(x))", "score": 0}
{"id": "eqasc_train_12406", "prediction": "all x.(Aluminum(x) -> Metal(x))", "score": 0}
{"id": "eqasc_train_12407", "prediction": "all x.((AluminumHeatsUp(x) & AluminumHeatsUp(x)) -> Expands(x))", "score": 0}
{"id": "eqasc_train_12408", "prediction": "all x y.((Conduction(x) & Medium(y)) -> PassingHeatThrough(x,y))", "score": 0}
{"id": "eqasc_train_12409", "prediction": "all x.((HeatPassesThroughMetal(x) & MetalExpands(x)) -> HeatPassesThroughMetal(x))", "score": 0}
{"id": "eqasc_train_12410", "prediction": "all x.(Steel(x) -> MostUsefulMetal(x))", "score": 0}
{"id": "eqasc_train_12411", "prediction": "all x.((Steel(x) & ConductsHeat(x)) -> Expands(x))", "score": 0}
{"id": "eqasc_train_12412", "prediction": "all x.((MetalAluminum(x) & Described(x)) -> (ThinksOfFoil(x) | ThinksOfSodaCans(x)))", "score": 0}
{"id": "eqasc_train_12413", "prediction": "all x y.((SodaCan(x) & ConductsHeat(x,y)) -> Expands(x))", "score": 0}
{"id": "eqasc_train_12414", "prediction": "all x.(Steel(x) -> MetalSolution(x))", "score": 0}
{"id": "eqasc_train_12415", "prediction": "all x.((Steel(x) & ConductsHeat(x)) -> Expands(x))", "score": 0}
{"id": "eqasc_train_12416", "prediction": "all x.(Gold(x) -> PreciousMetal(x))", "score": 0}
{"id": "eqasc_train_12417", "prediction": "all x.((Gold(x) & ConductsHeat(x)) -> Expands(x))", "score": 0}
{"id": "eqasc_train_12418", "prediction": "all x.((Metal(x) & -PassesHeatThroughHeat(x)) -> Expands(x))", "score": 0}
{"id": "eqasc_train_12419", "prediction": "all x.(Cuircon(x) -> DuctileMetal(x))", "score": 0}
{"id": "eqasc_train_12420", "prediction": "all x.((Copper(x) & ConductsHeat(x)) -> Expands(x))", "score": 0}
{"id": "eqasc_train_12421", "prediction": "all x.((Metal(x) & Warm(x)) -> Expands(x)) & ((Metal(x) & Cool(x)) -> Contracts(x)))", "score": -1}
{"id": "eqasc_train_12422", "prediction": "all x.((Metal(x) & Cools(x)) -> Contracts(x))", "score": 0}
{"id": "eqasc_train_12423", "prediction": "all x.(ModernGymnosperm(x) -> (Tree(x) & WoodyTrunk(x)))", "score": 0}
{"id": "eqasc_train_12424", "prediction": "all x.(Gymnosperm(x) -> AncientSeedPlant(x))", "score": 0}
{"id": "eqasc_train_12425", "prediction": "all x.((Tree(x) & WoodyTrunk(x)) -> AncientSeedPlant(x))", "score": 0}
{"id": "eqasc_train_12426", "prediction": "all x.((Evergreen(x) & Modern(x)) -> (Tree(x) & WoodyTrunk(x)))", "score": 0}
{"id": "eqasc_train_12427", "prediction": "all x.(Gymnosperm(x) -> (FourDivisions(x) | FourDivisions(x)))", "score": 0}
{"id": "eqasc_train_12428", "prediction": "all x.((LivingThing(x) & FourDividends(x)) -> TreeWithWoodyTrunks(x))", "score": 0}
{"id": "eqasc_train_12429", "prediction": "exists x.(Tree(x) & UsedForFuel(x))", "score": 0}
{"id": "eqasc_train_12430", "prediction": "exists x.(Gymnosperm(x) & CanBeUsedAsFuel(x))", "score": 0}
{"id": "eqasc_train_12431", "prediction": "all x.(Gymnosperm(x) -> ProducesSoftwood(x))", "score": 0}
{"id": "eqasc_train_12432", "prediction": "all x.((Silverwood(x) & Modern(x)) -> (Tree(x) & WoodyTrunk(x)))", "score": 0}
{"id": "eqasc_train_12433", "prediction": "all x.(Conifer(x) -> Gymnosperm(x))", "score": 0}
{"id": "eqasc_train_12434", "prediction": "all x.(Conifer(x) -> (Tree(x) & WoodyTrunk(x)))", "score": 0}
{"id": "eqasc_train_12435", "prediction": "all x.(Evergreen(x) -> (Tree(x) & WoodyTrunk(x)))", "score": 0}
{"id": "eqasc_train_12436", "prediction": "all x.((WoodyPlant(x) & (Tree(x) | Shrub(x))) -> (StrongStems(x) | StiffTrunks(x)))", "score": 0}
{"id": "eqasc_train_12437", "prediction": "all x.((Gymnosperm(x) & Tree(x) & CoveredInBark(x)) -> Modern(x))", "score": 0}
{"id": "eqasc_train_12438", "prediction": "all x.(Evergreen(x) -> HasWoodyTrunks(x))", "score": 0}
{"id": "eqasc_train_12439", "prediction": "all x.(Conifer(x) -> (HasWoodyTrunks(x) & Evergreens(x)))", "score": 0}
{"id": "eqasc_train_12440", "prediction": "all x y.((Plant(x) & Food(y)) -> RequiresForSurvival(x,y))", "score": 0}
{"id": "eqasc_train_12441", "prediction": "all x.(Plant(x) -> MadeInLeaves(x))", "score": 0}
{"id": "eqasc_train_12442", "prediction": "all x.(Plant(x) -> RequiresLeavesForSurvival(x))", "score": 0}
{"id": "eqasc_train_12443", "prediction": "all x.(Fertilizer(x) -> FoodForPlant(x))", "score": 0}
{"id": "eqasc_train_12444", "prediction": "all x y.((Plant(x) & Fertilizer(y)) -> RequiresForSurvival(x,y))", "score": 0}
{"id": "eqasc_train_12445", "prediction": "all x.(Plant(x) -> MakesFoodByPhotosynthesis(x))", "score": 0}
{"id": "eqasc_train_12446", "prediction": "all x.(Plant(x) -> RequiresPhotosynthesisForSurvival(x))", "score": 0}
{"id": "eqasc_train_12447", "prediction": "all x.(Plant(x) -> RequiresSunlight(x))", "score": 0}
{"id": "eqasc_train_12448", "prediction": "all x.(Plant(x) -> NeedsSunlightToSurvive(x))", "score": 0}
{"id": "eqasc_train_12449", "prediction": "all x.((Plant(x) & Survives(x)) -> AdaptedForEnvironment(x))", "score": 0}
{"id": "eqasc_train_12450", "prediction": "all x.(Plant(x) -> RequiresFood(x))", "score": 0}
{"id": "eqasc_train_12451", "prediction": "all x.(Plant(x) -> RequiresSunlightForSurvival(x))", "score": 0}
{"id": "eqasc_train_12452", "prediction": "all x y.((Plant(x) & Nutrients(y)) -> RequiresForSurvival(x,y))", "score": 0}
{"id": "eqasc_train_12453", "prediction": "all x.(Life(x) -> (-Survival(x) & Growth(x) & Thriving(x)))", "score": 0}
{"id": "eqasc_train_12454", "prediction": "all x.(Plant(x) -> (RequiresFood(x) & Grows(x) & Thrives(x)))", "score": 0}
{"id": "eqasc_train_12455", "prediction": "all x.(Food(x) -> ContainsSeveralNutrients(x))", "score": 0}
{"id": "eqasc_train_12456", "prediction": "all x.(Diversity(x) -> (MatterOfSurvival(x) & MatterOfProsperity(x)))", "score": 0}
{"id": "eqasc_train_12457", "prediction": "all x.(Plant(x) -> (RequiresFood(x) & Diversity(x) & Prosperity(x)))", "score": 0}
{"id": "eqasc_train_12458", "prediction": "all x.((Plant(x) & AdaptedToDryEnvironments(x)) -> Xerophyte(x))", "score": 0}
{"id": "eqasc_train_12459", "prediction": "all x.((Bromeliad(x) | Cactus(x)) -> Xerophyte(x))", "score": 0}
{"id": "eqasc_train_12460", "prediction": "all x.(Cactus(x) -> AdaptedToDryEnvironments(x))", "score": 0}
{"id": "eqasc_train_12461", "prediction": "all x.(Cactus(x) -> AdaptedToDryEnvironments(x))", "score": 0}
{"id": "eqasc_train_12462", "prediction": "all x y.((Bromeliad(x) & Cactus(y)) -> AdaptedToDryEnvironments(x,y))", "score": 0}
{"id": "eqasc_train_12463", "prediction": "all x.((Producer(x) & AdaptedToDryEnvironments(x)) -> Xerophyte(x))", "score": 0}
{"id": "eqasc_train_12464", "prediction": "all x.((Cactus(x) & DryPeriod(x) & LightRainfall(x)) -> Thrives(x))", "score": 0}
{"id": "eqasc_train_12465", "prediction": "all x.(Cactus(x) -> (Xerophytes(x) & Cactus(x)))", "score": 0}
{"id": "eqasc_train_12466", "prediction": "all x.((Succulent(x) | Bromeliad(x) | Cactus(x)) -> Xerophyte(x))", "score": 0}
{"id": "eqasc_train_12467", "prediction": "all x.((Plant(x) & AdaptsToDryEnvironment(x)) -> Cactus(x))", "score": 0}
{"id": "eqasc_train_12468", "prediction": "all x.((Plant(x) & AdaptedByAlteringPhysicalStructure(x)) -> Xerophyte(x))", "score": 0}
{"id": "eqasc_train_12469", "prediction": "all x.(Xerophyte(x) -> (ChangesPhysicalStructure(x) & AdaptsToDryEnvironments(x)))", "score": 0}
{"id": "eqasc_train_12470", "prediction": "all x.((Plant(x) & AdaptedToDryEnvironments(x)) -> (Succulent(x) | Bromeliad(x) | Cactus(x)))", "score": 0}
{"id": "eqasc_train_12471", "prediction": "all x.(Pollutant(x) -> NegativeImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_12472", "prediction": "all x.(Car(x) -> PolluterOfEnvironment(x))", "score": 0}
{"id": "eqasc_train_12473", "prediction": "all x.(Car(x) -> NegativeImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_12474", "prediction": "all x.(Benzene(x) -> (NonThresholdPollutant(x) & LikeOzone(x) & LikeParticulateMatter(x)))", "score": 0}
{"id": "eqasc_train_12475", "prediction": "all x.(ParticulateMatter(x) -> NegativeImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_12476", "prediction": "all x.(EnvironmentAndHealth(x) -> DependsOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_12477", "prediction": "all x.(Pollutant(x) -> NegativeImpactOnLivingThings(x))", "score": 0}
{"id": "eqasc_train_12478", "prediction": "all x.(CarbonDioxide(x) -> Pollutant(x))", "score": 0}
{"id": "eqasc_train_12479", "prediction": "all x.(CarbonDioxide(x) -> NegativeEffectOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_12480", "prediction": "all x.(HydrogenEmissions(x) -> (Pollutant(x) & CreatesOzonePollution(x)))", "score": 0}
{"id": "eqasc_train_12481", "prediction": "all x.(HydrocarbonEmissions(x) -> NegativeImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_12482", "prediction": "all x.((Pesticide(x) & ForCranberries(x)) -> NegativeImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_12483", "prediction": "all x.(Incineration(x) -> (HarmfulToEnvironment(x) & Pollutes(x)))", "score": 1}
{"id": "eqasc_train_12484", "prediction": "all x.(Incineration(x) -> HarmfulToEnvironment(x))", "score": 1}
{"id": "eqasc_train_12485", "prediction": "(Environment(Environment) & ImportantToHealth(Environment))", "score": 0}
{"id": "eqasc_train_12486", "prediction": "all x.(Pollutant(x) -> NegativeImpactOnHumanHealth(x))", "score": 0}
{"id": "eqasc_train_12487", "prediction": "all x y z.((Gravity(x) & Object(y) & Planet(z)) -> PullsTowards(x,y,z))", "score": 1}
{"id": "eqasc_train_12488", "prediction": "all x.(Object(x) -> Weight(x))", "score": 0}
{"id": "eqasc_train_12489", "prediction": "all x y.((Object(x) & Planet(y)) -> PullsTo(x,y))", "score": 0}
{"id": "eqasc_train_12490", "prediction": "all x.((Object(x) & OnOrNearEarth(x)) -> PulledTowardsEarth(x))", "score": 0}
{"id": "eqasc_train_12491", "prediction": "all x y.((Water(x) & EarthSurface(y) & GravitationalPull(x,y)) -> StaysOn(x,y))", "score": 0}
{"id": "eqasc_train_12492", "prediction": "all x.(Planet(x) -> HeldInOrbitBySunGravity(x))", "score": 0}
{"id": "eqasc_train_12493", "prediction": "all x.(Planet(x) -> PulledTowardsSun(x))", "score": 0}
{"id": "eqasc_train_12494", "prediction": "all x y z.((Gravity(x) & Object(y) & Earth(z)) -> PullsTowards(x,y,z))", "score": 1}
{"id": "eqasc_train_12495", "prediction": "all x.(Gravity(x) -> (CreatedByMass(x) & (Planet(x) | Star(x) | CelestialBody(x))))", "score": 0}
{"id": "eqasc_train_12496", "prediction": "all x y.((Gravity(x) & CelestialBody(y)) -> PullsToward(x,y))", "score": 0}
{"id": "eqasc_train_12497", "prediction": "all x.(Gravity(x) -> (KeepsPlanetsInOrbitAroundSun(x)))", "score": 0}
{"id": "eqasc_train_12498", "prediction": "all x y.((Gravity(x) & Sun(y)) -> PullsObjectsAround(x,y))", "score": 0}
{"id": "eqasc_train_12499", "prediction": "all x.(Gravity(x) -> CreatedByMass(x))", "score": 0}
{"id": "eqasc_train_12500", "prediction": "all x y.((Object(x) & Planet(y)) -> PullsToward(x,y))", "score": 0}
{"id": "eqasc_train_12501", "prediction": "all x y.((Gravity(x) & Planet(y)) -> AttractsToSun(x,y))", "score": 0}
{"id": "eqasc_train_12502", "prediction": "all x y.((Sun(x) & Planet(y)) -> Attracts(x,y))", "score": 0}
{"id": "eqasc_train_12503", "prediction": "all x y.((Gravity(x) & Object(y)) -> PullsTowards(x,y))", "score": 0}
{"id": "eqasc_train_12504", "prediction": "Gaia is ourPlanetEarth(Gaia)", "score": -1}
{"id": "eqasc_train_12505", "prediction": "all x.(Planet(x) -> (LargeObject(x) & OrbitsStar(x)))", "score": 0}
{"id": "eqasc_train_12506", "prediction": "all x y z.((Gravity(x) & LargeObject(y) & Star(z)) -> PullsToOrbit(x,y,z))", "score": 0}
{"id": "eqasc_train_12507", "prediction": "all x.(Gravity(x) -> PullsOnThings(x))", "score": 0}
{"id": "eqasc_train_12508", "prediction": "all x y.((Force(x) & PullsOnThings(x)) -> PullsObjectsTowardsPlanets(y))", "score": 0}
{"id": "eqasc_train_12509", "prediction": "all x.(Feather(x) -> (HelpsBirdsFly(x) & ProvidesInsulation(x)))", "score": 0}
{"id": "eqasc_train_12510", "prediction": "all x.(Eagle(x) -> BigBird(x))", "score": 0}
{"id": "eqasc_train_12511", "prediction": "all x.(Eagle(x) -> (FeathersHelpEaglesFly(x) & HelpEaglesFly(x)))", "score": 0}
{"id": "eqasc_train_12512", "prediction": "all x.(Bird(x) -> HasBodyCoveredWithFeathers(x))", "score": 0}
{"id": "eqasc_train_12513", "prediction": "all x.(Bird(x) -> (CoveredBody(x) & HelpsFly(x) & ProvidesInsulation(x)))", "score": 0}
{"id": "eqasc_train_12514", "prediction": "all x.(Penguin(x) -> ReliesOnFeathersForInsulation(x))", "score": 0}
{"id": "eqasc_train_12515", "prediction": "all x.(Penguin(x) -> (KeepsWarmWithFeathers(x) & KeepsWarmWithFeathers(x)))", "score": 0}
{"id": "eqasc_train_12516", "prediction": "exists x.(Bird(x) & Flightless(x))", "score": 0}
{"id": "eqasc_train_12517", "prediction": "all x.(Feather(x) -> ProvidesInsulationForFlightless(x))", "score": 0}
{"id": "eqasc_train_12518", "prediction": "all x.(ClassAve(x) -> ForBirds(x))", "score": 0}
{"id": "eqasc_train_12519", "prediction": "all x y.((Feather(x) & Animal(y) & Aves(y)) -> (Helps(x,y) & GivesInsulation(x,y)))", "score": 0}
{"id": "eqasc_train_12520", "prediction": "all x y.((Feather(x) & Hawk(y)) -> HelpsFly(x,y))", "score": 0}
{"id": "eqasc_train_12521", "prediction": "all x.(Penguin(x) -> KeepsWarmWithInsulation(x))", "score": 0}
{"id": "eqasc_train_12522", "prediction": "all x y.((Feather(x) & Bird(y)) -> (HelpsFly(x,y) & KeepsWarm(x,y)))", "score": 0}
{"id": "eqasc_train_12523", "prediction": "all x y.((StraightFeather(x) & CurlyFeather(y)) -> DominantTo(x,y))", "score": 0}
{"id": "eqasc_train_12524", "prediction": "all x.((Bird(x) & DominantStraight(x) & DominantCurly(x)) -> HelpsFly(x) & ProvidesInsulation(x))", "score": 0}
{"id": "eqasc_train_12525", "prediction": "all x.((Penguin(x) & WarmBlooded(x)) -> (ReliesOnFeathers(x) & ReliesOnFat(x)))", "score": 0}
{"id": "eqasc_train_12526", "prediction": "all x y.((Bird(x) & Chill(y)) -> SurvivesUsingFeathers(x,y))", "score": 0}
{"id": "eqasc_train_12527", "prediction": "all x.(Oxygen(x) -> EssentialForCellularRespiration(x))", "score": 2}
{"id": "eqasc_train_12528", "prediction": "all x.(Fungus(x) -> AerobicOrganism(x))", "score": 0}
{"id": "eqasc_train_12529", "prediction": "all x y.((Fungus(x) & Oxygen(y)) -> EssentialForCellularRespiration(x,y))", "score": 0}
{"id": "eqasc_train_12530", "prediction": "all x.(Arterie(x) -> (CarriesOxygen(x) & ToTissuesAndOrgans(x)))", "score": 0}
{"id": "eqasc_train_12531", "prediction": "all x.(Arteries(x) -> EssentialForCellularRespiration(x))", "score": 0}
{"id": "eqasc_train_12532", "prediction": "all x.(AerobicOrganism(x) -> (ConsumesVOAs(x) & ConsumesAlcohols(x)))", "score": 0}
{"id": "eqasc_train_12533", "prediction": "all x.((Oxygen(x) & CellularRespiration(x) & ConsumesVOAsAndAlcohols(x)) -> EssentialFor(x,y))", "score": 0}
{"id": "eqasc_train_12534", "prediction": "all x y.((Fungus(x) & Oxygen(y)) -> EssentialForCellularRespiration(x,y))", "score": 0}
{"id": "eqasc_train_12535", "prediction": "all x y.((Mother(x) & Baby(y)) -> LessOxygen(x,y))", "score": 0}
{"id": "eqasc_train_12536", "prediction": "all x y.((Mother(x) & Baby(y)) -> NeedsRespiration(x,y))", "score": 0}
{"id": "eqasc_train_12537", "prediction": "all x.(Oxygen(x) -> RequirementForLife(x))", "score": 0}
{"id": "eqasc_train_12538", "prediction": "all x.(Oxygen(x) -> EssentialForCellularRespiration(x))", "score": 1}
{"id": "eqasc_train_12539", "prediction": "all x y.((Oxygen(x) & Plant(y)) -> ProducedBy(x,y))", "score": 0}
{"id": "eqasc_train_12540", "prediction": "all x.(Plant(x) -> EssentialForCellularRespiration(x))", "score": 0}
{"id": "eqasc_train_12541", "prediction": "all x.(Oxygen(x) -> EssentialForFungiCellularRespiration(x))", "score": 0}
{"id": "eqasc_train_12542", "prediction": "all x y.((Air(x) & AerobicOrganism(y)) -> UsedForCellularRespiration(x,y))", "score": 0}
{"id": "eqasc_train_12543", "prediction": "all x.(Atmosphere(x) -> (Nitrogen(x) & Oxygen(x) & ManyMoleculesInTraceAmounts(x)))", "score": 1}
{"id": "eqasc_train_12544", "prediction": "all x.(Atmosphere(x) -> EssentialForCellularRespiration(x))", "score": 1}
{"id": "eqasc_train_12545", "prediction": "all x.(AdultSponge(x) -> (ProducesEggs(x) & ProducesSpore(x)))", "score": 0}
{"id": "eqasc_train_12546", "prediction": "all x.(AdultSponge(x) -> ProducesGametes(x))", "score": 0}
{"id": "eqasc_train_12547", "prediction": "all x.(Hermaphrodite(x) -> (FemaleAnimal(x) & MakesSsperm(x) & MakesOocytes(x)))", "score": 0}
{"id": "eqasc_train_12548", "prediction": "all x.(AdultSponge(x) -> (Hermaphrodite(x) & Hermaphrodite(x)))", "score": 0}
{"id": "eqasc_train_12549", "prediction": "all x.(AdultSponge(x) -> (ProducesFemaleGametes(x) & ProducesSpore(x)))", "score": 0}
{"id": "eqasc_train_12550", "prediction": "all x.(Adult(x) -> SexuallyMature(x))", "score": 0}
{"id": "eqasc_train_12551", "prediction": "all x.(MatureSponge(x) -> (ProducesEggs(x) & ProducesSpore(x)))", "score": 0}
{"id": "eqasc_train_12552", "prediction": "all x.(Ovule(x) -> (ContainsEgg(x) | ContainsSexCell(x)))", "score": 0}
{"id": "eqasc_train_12553", "prediction": "all x.(SexualReproduction(x) -> (InvolvesSsperm(x) & InvolvesEgg(x)))", "score": 0}
{"id": "eqasc_train_12554", "prediction": "all x.((AdultSponge(x) & Adult(x)) -> ReproducesSexually(x))", "score": 0}
{"id": "eqasc_train_12555", "prediction": "(Bittaly(Gamete) -> (Egg(e) | Sperm(e))))", "score": -1}
{"id": "eqasc_train_12556", "prediction": "all x.(Sponge(x) -> (Hermaphroditic(x) & SingleOrganism(x) & HasEggs(x) & HasSperm(x)))", "score": 0}
{"id": "eqasc_train_12557", "prediction": "all x.(AdultSponge(x) -> (SingleOrganism(x) & ProducesSeed(x) & ProducesEggs(x)))", "score": 0}
{"id": "eqasc_train_12558", "prediction": "all x.(Sponges(x) -> PrimitiveMulticellularAnimal(x))", "score": 0}
{"id": "eqasc_train_12559", "prediction": "all x.((Animal(x) & Primitive(x)) -> (ProducesEggs(x) & ProducesSpore(x)))", "score": 0}
{"id": "eqasc_train_12560", "prediction": "all x.(Sponge(x) -> (Hermaphrodite(x) & BearsEggs(x) & BearsSpore(x)))", "score": 1}
{"id": "eqasc_train_12561", "prediction": "all x.(Sponge(x) -> Hermaphrodite(x))", "score": 1}
{"id": "eqasc_train_12562", "prediction": "all x.((AdultSponge(x) & ProducesGametes(x)) -> ProducesGametes(x))", "score": 0}
{"id": "eqasc_train_12563", "prediction": "all x.(AdultSponge(x) -> Sessile(x))", "score": 0}
{"id": "eqasc_train_12564", "prediction": "all x.((Thing(x) & Sessile(x)) -> (ProducesEggs(x) & ProducesSpores(x)))", "score": 0}
{"id": "eqasc_train_12565", "prediction": "all x.(Sponges(x) -> (MulticellularAnimal(x) & BelongsToPhylumPorifera(x)))", "score": 0}
{"id": "eqasc_train_12566", "prediction": "all x.((AdultMember(x) & PoriferaPhylum(x)) -> (ProducesEggs(x) & ProducesSporem(x)))", "score": 0}
{"id": "eqasc_train_12567", "prediction": "all x.(Adult(x) -> (Mature(x) & FullyDeveloped(x)))", "score": 0}
{"id": "eqasc_train_12568", "prediction": "all x y.((BalancedForces(x) & BalancedForces(y) & Object(z) & ActsOn(x,z) & OppositeDirections(x,z)) -> RemainsStanding(x,z))", "score": 0}
{"id": "eqasc_train_12569", "prediction": "all x.((Object(x) & AtEquilibrium(x)) -> ForcesBalanced(x))", "score": 0}
{"id": "eqasc_train_12570", "prediction": "all x.((Object(x) & AtEquilibrium(x)) -> RemainsStanding(x))", "score": 0}
{"id": "eqasc_train_12571", "prediction": "all x y.((Push(x) & Pull(y)) -> ChangesMovement(x,y))", "score": 0}
{"id": "eqasc_train_12572", "prediction": "all x y.((Push(x) & Pull(y)) -> (ChangesMovement(x,y) | RemainsStable(x,y)))", "score": 0}
{"id": "eqasc_train_12573", "prediction": "all x y.((BalancedForces(x) & BalancedForces(y) & ActOnBadge(x,y) & OppositeDirections(x,y)) -> StationaryBadge(x))", "score": 0}
{"id": "eqasc_train_12574", "prediction": "all x.((Object(x) & AtEquilibrium(x)) -> RemainsStanding(x))", "score": 0}
{"id": "eqasc_train_12575", "prediction": "all x.(Gravity(x) -> (CreatesForce(x) & CreatesEnergy(x)))", "score": 0}
{"id": "eqasc_train_12576", "prediction": "all x y.((Gravity(x) & Object(y)) -> CanCauseStationality(x,y))", "score": 0}
{"id": "eqasc_train_12577", "prediction": "all x.(Object(x) -> (Stable(x) | MovingWithConstantLinearVibration(x)))", "score": 0}
{"id": "eqasc_train_12578", "prediction": "all x y.((BalancedForces(x) & BalancedForces(y) & Object(z) & ActsOn(x,z) & OppositeDirections(x,z)) -> -Moving(x,z))", "score": 0}
{"id": "eqasc_train_12579", "prediction": "all x.((StableObject(x) & AtEquilibrium(x)) -> AtEquilibrium(x))", "score": 0}
{"id": "eqasc_train_12580", "prediction": "all x y.((Force(x) & Force(y) & Equilibrium(x,y) & OppositeDirections(y)) -> KeepsObjectStanding(x,y))", "score": 0}
{"id": "eqasc_train_12581", "prediction": "all x.(Opposites(x) -> (HoldsBalance(x) & ExertsMutualControl(x)))", "score": 0}
{"id": "eqasc_train_12582", "prediction": "all x y.((BalancedForces(x) & Object(y) & ExertsMutually(x,y)) -> RemainsStanding(y))", "score": 0}
{"id": "eqasc_train_12583", "prediction": "all x.(CentrifugalForce(x) -> BalancesGravitationalForce(x))", "score": 0}
{"id": "eqasc_train_12584", "prediction": "all x y.((CentrifugalForce(x) & GravitationalForce(y)) -> CausesObjectToRemainStanding(x,y))", "score": 0}
{"id": "eqasc_train_12585", "prediction": "all x y.((BalancedForce(x) & BalancedForce(y) & Object(z) & ActsOn(x,y,z)) -> -Move(x,z))", "score": 0}
{"id": "eqasc_train_12586", "prediction": "all x.(Competition(x) -> (AggressiveBehaviors(x) | DisplaysAggression(x)))", "score": 0}
{"id": "eqasc_train_12587", "prediction": "all x.(Competition(x) -> MayLeadToViolence(x))", "score": 0}
{"id": "eqasc_train_12588", "prediction": "all x.(Aggression(x) -> (Drive(x) & Adrenalin(x) & Power(x)))", "score": 0}
{"id": "eqasc_train_12589", "prediction": "all x y.((Competition(x) & Adrenaline(y)) -> MayLeadToRelease(x,y))", "score": 0}
{"id": "eqasc_train_12590", "prediction": "all x y.((PopulationCompetition(x) & LargerAnimal(y)) -> (LikesToTerritoryEstablishment(x,y) & LeadsToTerritoryDefense(x,y)))", "score": 0}
{"id": "eqasc_train_12591", "prediction": "all x.((Population(x) & NeedsFood(x)) -> DisplaysOfAggression(x))", "score": 0}
{"id": "eqasc_train_12592", "prediction": "all x.(HumanMatchingBehavior(x) -> InvolvesCompetition(x))", "score": 0}
{"id": "eqasc_train_12593", "prediction": "all x.(HumanMating(x) -> (AggressiveBehaviors(x) | DisplaysAggravation(x)))", "score": 0}
{"id": "eqasc_train_12594", "prediction": "all x.(Aggression(x) -> (DeedOrIntentToCauseHarm(x)))", "score": 0}
{"id": "eqasc_train_12595", "prediction": "all x.(Competition(x) -> CausesHarm(x))", "score": 0}
{"id": "eqasc_train_12596", "prediction": "all x.((Does(x) & OlderDogs(x)) -> LittleCompetitionForMating(x))", "score": 0}
{"id": "eqasc_train_12597", "prediction": "all x.((Bod(x) & FewerOlderBods(x)) -> DisplaysLessAggression(x))", "score": 0}
{"id": "eqasc_train_12598", "prediction": "all x.((Behavior(x) & Aggressive(x)) -> Hostile(x))", "score": 0}
{"id": "eqasc_train_12599", "prediction": "all x.(Competition(x) -> MayLeadToHospitality(x))", "score": 0}
{"id": "eqasc_train_12600", "prediction": "exists x.(Sport(x) & CompetitionSport(x))", "score": 0}
{"id": "eqasc_train_12601", "prediction": "all x.(Sport(x) -> (LeadsToAggressiveBehaviors(x) | LeadsToAggressiveBehaviors(x)))", "score": 0}
{"id": "eqasc_train_12602", "prediction": "all x.(AggressiveBehavior(x) -> BullyingBehavior(x))", "score": 0}
{"id": "eqasc_train_12603", "prediction": "all x.(Competition(x) -> Bullying(x))", "score": 0}
{"id": "eqasc_train_12604", "prediction": "all x.((Dog(x) & DeepGrumblingBark(x)) -> SocialAggression(x))", "score": 0}
{"id": "eqasc_train_12605", "prediction": "all x y.((Dog(x) & Dog(y)) -> (DeepGrammingBark(x) & DeepGrumblingBark(y)))", "score": 0}
{"id": "eqasc_train_12606", "prediction": "all x.(AggressiveBehavior(x) -> VerbalOutburst(x))", "score": 0}
{"id": "eqasc_train_12607", "prediction": "all x.(Competition(x) -> (LeadsToBursts(x) & VerbalOutbursts(x)))", "score": 0}
{"id": "eqasc_train_12608", "prediction": "all x.(IncandescentLightBulb(x) -> (ConvertsElectricityToLight(x) & SendsElectricityThroughFilm(x)))", "score": 0}
{"id": "eqasc_train_12609", "prediction": "all x.(StandardFilm(x) -> MadeOfTungsten(x))", "score": 0}
{"id": "eqasc_train_12610", "prediction": "all x.(IncandescentLightBulb(x) -> (ConvertsElectricityToLight(x) & UsesTungsten(x)))", "score": 0}
{"id": "eqasc_train_12611", "prediction": "all x.(Light(x) -> OscillationsInElectricField(x))", "score": 0}
{"id": "eqasc_train_12612", "prediction": "all x.(IncandescentBulb(x) -> ConvertsElectricityToOscillations(x))", "score": 0}
{"id": "eqasc_train_12613", "prediction": "all x.(IncandescentMaterial(x) -> (Hot(x) & Glows(x) & ProducesLight(x)))", "score": 0}
{"id": "eqasc_train_12614", "prediction": "all x.(IncandescentBulb(x) -> (UsesElectricity(x) & GetsHot(x) & Glows(x)))", "score": 0}
{"id": "eqasc_train_12615", "prediction": "all x.((Battery(x) & StoresElectricity(x)) -> Additional(x))", "score": 0}
{"id": "eqasc_train_12616", "prediction": "all x.(IncandescentLightBulb(x) -> ConvertsBatteryEnergyToLight(x))", "score": 0}
{"id": "eqasc_train_12617", "prediction": "all x y.((LightBulb(x) & Energy(y)) -> ConvertsToLight(x,y))", "score": 0}
{"id": "eqasc_train_12618", "prediction": "all x.(GardenLamp(x) -> Incandescent(x))", "score": 0}
{"id": "eqasc_train_12619", "prediction": "all x y.((MetalLamp(x) & YardLamp(y)) -> ConvertsElectricityToLight(x,y))", "score": 0}
{"id": "eqasc_train_12620", "prediction": "all x.(Incandescence(x) -> LightFromHeatEnergy(x))", "score": 0}
{"id": "eqasc_train_12621", "prediction": "all x.(LightBulb(x) -> (PoweredByHeat(x) & Heat(x)))", "score": 0}
{"id": "eqasc_train_12622", "prediction": "all x.(FoboidOptics(x) -> (CarriesLight(x) & HairThinFilms(x) & Glass(x)))", "score": 0}
{"id": "eqasc_train_12623", "prediction": "all x y.((IncandescentLightBulb(x) & Electricity(y)) -> ConvertsToLight(x,y))", "score": 0}
{"id": "eqasc_train_12624", "prediction": "all x.(IncandescentBulb(x) -> ProducesMoreHeatThanLight(x))", "score": 0}
{"id": "eqasc_train_12625", "prediction": "all x.((IncandescentBulb(x) & CreatesElectricity(x)) -> ProducesHeat(x))", "score": 0}
{"id": "eqasc_train_12626", "prediction": "all x.(LEDs(x) -> ConvertsElectricityToLight(x))", "score": 0}
{"id": "eqasc_train_12627", "prediction": "all x.(Chromosome(x) -> (CoiledStructure(x) & MadeOfDNA(x) & MadeOfProteins(x)))", "score": 0}
{"id": "eqasc_train_12628", "prediction": "all x.(Prophase(x) -> CoilUpChromosomes(x))", "score": 0}
{"id": "eqasc_train_12629", "prediction": "all x.(Strucutres(x) -> (CoilsDuringProphase(x) & MadeOfDNAAndProteins(x)))", "score": 0}
{"id": "eqasc_train_12630", "prediction": "all x.(Gene(x) -> (PartOfCoiledStructures(x) & MadeOfDNAAndProteins(x)))", "score": 0}
{"id": "eqasc_train_12631", "prediction": "all x.(DNA(x) -> DeoxyribonucleicAcid(x))", "score": 0}
{"id": "eqasc_train_12632", "prediction": "all x.(Chromosome(x) -> (CoiledStructure(x) & MadeOfDeoxyribonucleicAcidAndProteins(x)))", "score": 0}
{"id": "eqasc_train_12633", "prediction": "all x.(Chromosome(x) -> (ConsistsOfDNA(x) & ConsistsOfProtein(x)))", "score": 0}
{"id": "eqasc_train_12634", "prediction": "all x.(Chromosome(x) -> Coiled(x))", "score": 0}
{"id": "eqasc_train_12635", "prediction": "all x.(TrisomyChromosome(x) -> CommonChromosomeAnomaly(x))", "score": 0}
{"id": "eqasc_train_12636", "prediction": "all x.(Trisomy(x) -> (AnomalyInCoiledStructures(x) & MadeOfDNAAndProteins(x)))", "score": 0}
{"id": "eqasc_train_12637", "prediction": "all x.(DNA(x) -> StuffOfLife(x))", "score": 0}
{"id": "eqasc_train_12638", "prediction": "all x.(Chromosome(x) -> StuffOfLife(x))", "score": 0}
{"id": "eqasc_train_12639", "prediction": "all x.(Chromosome(x) -> (CoiledStructure(x) & MadeOfDeoxyribonucleicacidAndProteins(x)))", "score": 0}
{"id": "eqasc_train_12640", "prediction": "all x.(Gene(x) -> CarriedOnChromosome(x))", "score": 0}
{"id": "eqasc_train_12641", "prediction": "all x y.((Gene(x) & CoiledStructure(y)) -> (CarriedIn(x,y) & MadeOf(y,DNA) & MadeOf(y,Proteins)))", "score": 0}
{"id": "eqasc_train_12642", "prediction": "all x.((Egg(x) | Sperm(x)) -> (ExtraChromosome(x) | MissingChromosome(x)))", "score": 0}
{"id": "eqasc_train_12643", "prediction": "all x.((Egg(x) | Sperm(x)) -> (CoiledStructures(x) & MadeOfDNA(x) & MadeOfProteins(x)))", "score": 0}
{"id": "eqasc_train_12644", "prediction": "all x.(Chromosome(x) -> (MadeUpOfDNA(x) & MadeUpOfHistoneProteins(x)))", "score": 0}
{"id": "eqasc_train_12645", "prediction": "all x y.((HistoroneProtein(x) & Chromosome(y)) -> MakesUp(x,y))", "score": 0}
{"id": "eqasc_train_12646", "prediction": "all x.(SexChromosome(x) -> DeterminesSexOfIndividual(x))", "score": 0}
{"id": "eqasc_train_12647", "prediction": "all x y.((CoiledStructure(x) & MadeOfDNA(x) & MadeOfProteins(x)) -> DeterminesSex(y))", "score": 0}
{"id": "eqasc_train_12648", "prediction": "all x.(Chromosome(x) -> (CoiledStructure(x) & MadeOfDeoxyribonucleicAcidAndProteins(x)))", "score": 0}
{"id": "eqasc_train_12649", "prediction": "all x.(SexChromosome(x) -> DeterminesGender(x))", "score": 0}
{"id": "eqasc_train_12650", "prediction": "all x.(GenderDetermination(x) -> (CoiledStructures(x) & MadeOfDNAAndProteins(x)))", "score": 0}
{"id": "eqasc_train_12651", "prediction": "all x.(Virus(x) -> CausesManyHumanDiseases(x))", "score": 0}
{"id": "eqasc_train_12652", "prediction": "all x.(InfluenzaVirus(x) -> CausesWidespreadHumanDisease(x))", "score": 0}
{"id": "eqasc_train_12653", "prediction": "all x.(Influenza(x) -> (DiseaseCausedByVirus(x) & CausedByVirus(x)))", "score": 0}
{"id": "eqasc_train_12654", "prediction": "all x.(Influenza(x) -> CausesWidespreadDisease(x))", "score": 0}
{"id": "eqasc_train_12655", "prediction": "(exists x.(Virus(x) & HumanPapillomaVirus(x)))", "score": 0}
{"id": "eqasc_train_12656", "prediction": "all x.(Papilloma(x) -> CausesDiseases(x))", "score": 0}
{"id": "eqasc_train_12657", "prediction": "all x.(HumanDisease(x) -> CanDetectClinically(x))", "score": 0}
{"id": "eqasc_train_12658", "prediction": "all x.(Viral(x) -> CanDetectClinically(x))", "score": 0}
{"id": "eqasc_train_12659", "prediction": "all x.(BacterialContamination(x) -> (SpreadsDiseases(x) & ToHumans(x) & ToLivestock(x)))", "score": 0}
{"id": "eqasc_train_12660", "prediction": "all x y.((Virus(x) & Disease(y)) -> CausesContamination(x,y))", "score": 0}
{"id": "eqasc_train_12661", "prediction": "all x.(Smallpox(x) -> CausesHumanDisease(x))", "score": 0}
{"id": "eqasc_train_12662", "prediction": "all x.(HumanViral(x) -> CreatedByNaturalProcess(x))", "score": 0}
{"id": "eqasc_train_12663", "prediction": "all x.((CreatedByNaturalProcess(x) & CausesManyHumanDiseases(x)) -> CausesManyHumanDiseases(x))", "score": 1}
{"id": "eqasc_train_12664", "prediction": "all x.(InfectiousDisease(x) -> LeadingCauseOfHumanDeath(x))", "score": 0}
{"id": "eqasc_train_12665", "prediction": "all x.(Virus(x) -> CausesDeath(x))", "score": 0}
{"id": "eqasc_train_12666", "prediction": "all x.(Influenza(x) -> CausesHumanDisease(x))", "score": 0}
{"id": "eqasc_train_12667", "prediction": "all x y z.((Moon(x) & Earth(y) & Ocean(z) & GravitationalPull(x,y,z)) -> CausesTides(x))", "score": 0}
{"id": "eqasc_train_12668", "prediction": "all x.(PlanetaryMoon(x) -> NaturalSatellite(x))", "score": 0}
{"id": "eqasc_train_12669", "prediction": "all x y z.((GravitationalPull(x) & NaturalSatellite(y) & EarthsOceans(z) & On(x,y,z)) -> CausesTides(x))", "score": 0}
{"id": "eqasc_train_12670", "prediction": "all x y z.((GravitationalPullOfMoon(x) & PacificTide(y) & GravitationalPullOfMoon(z)) -> CausesTides(x,y,z))", "score": 0}
{"id": "eqasc_train_12671", "prediction": "all x.(Tide(x) -> CausesCurrents(x))", "score": 0}
{"id": "eqasc_train_12672", "prediction": "all x y z.((GravitationalPull(x) & Moon(y) & EarthsOceans(z) & On(x,y,z)) -> CausesCurrents(x))", "score": 0}
{"id": "eqasc_train_12673", "prediction": "all x y.((OceanTide(x) & Bay(y)) -> EntersAndLeaves(x,y))", "score": 0}
{"id": "eqasc_train_12674", "prediction": "all x y z.((GravitationalPullOfMoon(x) & EarthsOceans(y) & Bay(z)) -> CausesWaterToEnterAndLeave(x,z))", "score": 0}
{"id": "eqasc_train_12675", "prediction": "(all x.(HighTidal(x) -> CrestOfWave(x)) & all y.(LowTidal(y) -> TroughOfWave(y)))", "score": 0}
{"id": "eqasc_train_12676", "prediction": "all x y z.((GravitationalPull(x) & Moon(y) & EarthsOceans(z)) -> CausesWaves(x,y,z))", "score": 0}
{"id": "eqasc_train_12677", "prediction": "all x y.((OceanTide(x) & Sun(y) & Moon(z)) -> CausedByGravityPullingOnWater(x,y,z))", "score": 0}
{"id": "eqasc_train_12678", "prediction": "all x y.((Tide(x) & Moon(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_train_12679", "prediction": "all x y.((Energy(x) & Ocean(y)) -> (PumpedByWinds(x,y) & PumpedByTides(x,y)))", "score": 0}
{"id": "eqasc_train_12680", "prediction": "all x y.((Moon(x) & EarthsOceans(y)) -> PumpsEnergyIntoOcean(x,y))", "score": 0}
{"id": "eqasc_train_12681", "prediction": "all x.(Gravity(x) -> CausesTides(x))", "score": 0}
{"id": "eqasc_train_12682", "prediction": "all x y.((Moon(x) & Tide(y)) -> Forms(x,y))", "score": 0}
{"id": "eqasc_train_12683", "prediction": "all x.(Tide(x) -> (RisingOceanWater(x) & FallingOceanWater(x)))", "score": 0}
{"id": "eqasc_train_12684", "prediction": "all x y z.((GravitationalPull(x) & Moon(y) & EarthsOceans(z) & EarthsOceans(x,z)) -> CausesWaterToRiseAndFall(x,z))", "score": 0}
{"id": "eqasc_train_12685", "prediction": "all x.(Tide(x) -> VerticalMovementOfWater(x))", "score": 0}
{"id": "eqasc_train_12686", "prediction": "all x y z.((GravitationalPull(x) & Moon(y) & EarthsOceans(z)) -> CausesVerticalMovementOfWater(x,y,z))", "score": 0}
{"id": "eqasc_train_12687", "prediction": "all x.(HighTidal(x) -> BestWavesIn(x))", "score": 0}
{"id": "eqasc_train_12688", "prediction": "all x.(EarthDay(x) -> HeldAcrossWorld(x))", "score": 0}
{"id": "eqasc_train_12689", "prediction": "all x y z.((GravitationalPullOfMoon(x) & WorldOceans(y) & EarthsOceans(z)) -> CausesTides(x,y,z))", "score": 0}
{"id": "eqasc_train_12690", "prediction": "(West is PacificOcean(x) & ToWest(x))", "score": -1}
{"id": "eqasc_train_12691", "prediction": "all x.(River(x) -> DrainsIntoPacificOcean(x))", "score": 0}
{"id": "eqasc_train_12692", "prediction": "all x y z.((GravitationalPullOfMoon(x) & PacificTide(y) & GravitationalPullOfMoon(z)) -> CausesTides(x,y,z))", "score": 0}
{"id": "eqasc_train_12693", "prediction": "all x y.((TorrentialRain(x) & HighTide(y)) -> (CausedFlooding(x,y) & DamagedBeachfrontHomes(x)))", "score": 0}
{"id": "eqasc_train_12694", "prediction": "all x y.((Moon(x) & EarthsOceans(y)) -> (CausesFlooding(x,y) & DamagesHomes(x,y)))", "score": 0}
{"id": "eqasc_train_12695", "prediction": "all x.(Tide(x) -> CreatesCurrent(x))", "score": 0}
{"id": "eqasc_train_12696", "prediction": "all x y z.((GravitationalPull(x) & Moon(y) & EarthsOcean(z)) -> ContributesToOceanCurrents(x,y,z))", "score": 0}
{"id": "eqasc_train_12697", "prediction": "all x.((GasolineEngine(x) & BurnsGasoline(x)) -> RequiresGasoline(x))", "score": 0}
{"id": "eqasc_train_12698", "prediction": "exists x.(Engine(x) & BurnsFossilFuels(x))", "score": 0}
{"id": "eqasc_train_12699", "prediction": "all x y.((Gasoline(x) & Engine(y) & Burns(x,y)) -> (Gasoline(x) & Water(y)))", "score": 0}
{"id": "eqasc_train_12700", "prediction": "all x y.((GasolineEngine(x) & Water(y)) -> ProducesByProduct(x,y))", "score": 0}
{"id": "eqasc_train_12701", "prediction": "all x y.((Engine(x) & Engine(y)) -> RequiresFossilFuels(x,y))", "score": 0}
{"id": "eqasc_train_12702", "prediction": "all x.((Fuel(x) & Ignited(x)) -> BurnsWithOxygen(x))", "score": 0}
{"id": "eqasc_train_12703", "prediction": "all x.((GasolineEngine(x) & Uses(x,Gasoline)) -> RequiresIgnition(x))", "score": 0}
{"id": "eqasc_train_12704", "prediction": "all x.(Gasoline(x) -> (IgnitesEasily(x) & BurnsVibrantly(x)))", "score": 1}
{"id": "eqasc_train_12705", "prediction": "all x.(Gasoline(x) -> IgnitesEasily(x))", "score": 1}
{"id": "eqasc_train_12706", "prediction": "all x.((GasolineEngine(x) & Uses(x,Gasoline)) -> RequiresEasyIgnition(x))", "score": 0}
{"id": "eqasc_train_12707", "prediction": "all x.(FossilFuel(x) -> (Coal(x) | Oil(x) | NaturalGas(x) | Gasoline(x)))", "score": 0}
{"id": "eqasc_train_12708", "prediction": "all x.((FossilFuelEngine(x) & Uses(x,FossilFuels)) -> RequiresBurningFossilFuels(x))", "score": 0}
{"id": "eqasc_train_12709", "prediction": "all x.((Car(x) & Moving(x)) -> GasolineEngineKicksIn(x))", "score": 0}
{"id": "eqasc_train_12710", "prediction": "all x y.((Car(x) & Car(y)) -> (RequiresBurningGasoline(x,y) & RequiresBurningGasoline(x,y)))", "score": 0}
{"id": "eqasc_train_12711", "prediction": "(all x.((BurningOfGasoline(x) & ToxicCarbonMonoxide(x)) -> Produces(x,y)))", "score": 0}
{"id": "eqasc_train_12712", "prediction": "all x y.((GasolineEngine(x) & GasolineEngine(y)) -> ProducesToxicCarbonMonoxide(x,y))", "score": 0}
{"id": "eqasc_train_12713", "prediction": "all x.(Gasoline(x) -> (UsedInCars(x) | UsedInBoats(x) | UsedInMotorcycles(x) | UsedInLawnMowers(x) | UsedInEngines(x)))", "score": 0}
{"id": "eqasc_train_12714", "prediction": "all x y.((Car(x) & Car(y)) -> RequiresBurningGasoline(x,y))", "score": 0}
{"id": "eqasc_train_12715", "prediction": "all x.((Gasoline(x) | FlammableLiquidRelatedBurns(x)) -> PreventableProblem(x))", "score": 0}
{"id": "eqasc_train_12716", "prediction": "all x y.((Engine(x) & Engine(y)) -> RequiresBurningFlammableLiquid(x,y))", "score": 0}
{"id": "eqasc_train_12717", "prediction": "all x.((FossilFuels(x) & Burned(x)) -> Consumed(x))", "score": 0}
{"id": "eqasc_train_12718", "prediction": "all x.((GasolineEngine(x) & Uses(x,Gasoline)) -> RequiresConsumption(x,Gasoline))", "score": 0}
{"id": "eqasc_train_12719", "prediction": "all x.(VesicleTransport(x) -> (RequiresEnergy(x) & ActiveTransport(x)))", "score": 2}
{"id": "eqasc_train_12720", "prediction": "all x y.((Cell(x) & Cell(y)) -> (ProteinTransport(x,y) & CoatedTransportVesicles(x,y)))", "score": 0}
{"id": "eqasc_train_12721", "prediction": "all x y.((ProteinTransport(x) & Cell(y)) -> RequiresEnergy(x,y))", "score": 0}
{"id": "eqasc_train_12722", "prediction": "all x.(SynapticVesiclesGlutamateTransporter(x) -> (SynapticVesiclesGlutamateTransporter(x) & -SynapticVesiclesGlutamateTransporter(x)))", "score": 0}
{"id": "eqasc_train_12723", "prediction": "all x.(GlutamateTransport(x) -> RequiresEnergy(x))", "score": 0}
{"id": "eqasc_train_12724", "prediction": "all x.(ActiveTransport(x) -> Diffusion(x))", "score": 1}
{"id": "eqasc_train_12725", "prediction": "all x.(Diffusion(x) -> RequiresEnergy(x))", "score": 0}
{"id": "eqasc_train_12726", "prediction": "all x y.((ActiveTransport(x) & Substance(y)) -> MovesAgainstChemicalGradient(x,y))", "score": 0}
{"id": "eqasc_train_12727", "prediction": "all x y.((VesicleTransport(x) & Substance(y)) -> RequiresEnergyForMovementAgainstChemicalGrade(x,y))", "score": 0}
{"id": "eqasc_train_12728", "prediction": "all x.(ActiveTransport(x) -> (RequiresCarrierMolecule(x) & RequiresFormOfEnergy(x)))", "score": 0}
{"id": "eqasc_train_12729", "prediction": "all x.(VesicleTransport(x) -> (RequiresEnergy(x) & CarrierMolecule(x)))", "score": 0}
{"id": "eqasc_train_12730", "prediction": "all x.(VesicleTransport(x) -> RequiresFood(x))", "score": 0}
{"id": "eqasc_train_12731", "prediction": "all x.(VesicleTransport(x) -> (RequiresEnergy(x) & FormOfDiffusion(x)))", "score": 0}
{"id": "eqasc_train_12732", "prediction": "all x.(Absorption(x) -> ActiveTransport(x))", "score": 0}
{"id": "eqasc_train_12733", "prediction": "all x.(Absorbtion(x) -> (VesicleTransport(x) & RequiresEnergy(x)))", "score": 0}
{"id": "eqasc_train_12734", "prediction": "all x y.((Neurotransmitter(x) & Vesicle(y)) -> ReleasedFrom(x,y))", "score": 0}
{"id": "eqasc_train_12735", "prediction": "all x y.((Neurotransmitter(x) & Neurotransmitter(y)) -> ActiveTransport(x,y))", "score": 0}
{"id": "eqasc_train_12736", "prediction": "all x.(VesicleTransport(x) -> Diffusion(x))", "score": 1}
{"id": "eqasc_train_12737", "prediction": "all x y.((Protein(x) & TransportVesicles(y)) -> LeavesER(x,y))", "score": 0}
{"id": "eqasc_train_12738", "prediction": "all x.(Protein(x) -> LeavesER(x))", "score": 0}
{"id": "eqasc_train_12739", "prediction": "all x y z.((Protein(x) & ER(y) & Vesicles(z)) -> TransportedToAndFrom(x,y,z))", "score": 0}
{"id": "eqasc_train_12740", "prediction": "all x y.((ProteinTransportation(x) & ER(y) & Golgi(y)) -> RequiresEnergy(x,y))", "score": 0}
{"id": "eqasc_train_12741", "prediction": "all x.(ActiveTransport(x) -> Diffusion(x))", "score": 1}
{"id": "eqasc_train_12742", "prediction": "all x.(VesicleTransport(x) -> Diffusion(x))", "score": 1}
{"id": "eqasc_train_12743", "prediction": "all x y.((GolgiComplex(x) & Material(y)) -> (Budding(x,y) & FusionOfVesicles(x,y)))", "score": 0}
{"id": "eqasc_train_12744", "prediction": "all x y.((Badding(x) & Fusion(x) & Vesicles(y) & GolgiComplex(x)) -> InvolvesEnergy(x))", "score": 0}
{"id": "eqasc_train_12745", "prediction": "all x.(Plant(x) -> ContinuesToGrow(x))", "score": 1}
{"id": "eqasc_train_12746", "prediction": "all x.(SeedPlant(x) -> (HasRoots(x) & HasStem(x) & HasLeaves(x)))", "score": 0}
{"id": "eqasc_train_12747", "prediction": "all x.((Root(x) | Stem(x) | Leave(x)) -> ContinuesToGrow(x))", "score": 0}
{"id": "eqasc_train_12748", "prediction": "all x.((Lives(x) & EndsWith(x)) -> Dies(x))", "score": 0}
{"id": "eqasc_train_12749", "prediction": "all x.(Plant(x) -> ContinuesToGrowUntilDiet(x))", "score": 0}
{"id": "eqasc_train_12750", "prediction": "all x.(Bamboo(x) -> ContinuesToGrowThroughoutLife(x))", "score": 0}
{"id": "eqasc_train_12751", "prediction": "all x.(Bush(x) -> ContinuesToGrowThroughoutLife(x))", "score": 0}
{"id": "eqasc_train_12752", "prediction": "all x y.((Lilies(x) & Bulb(y)) -> (Produces(x,y) & GrowsNewPlants(x)))", "score": 0}
{"id": "eqasc_train_12753", "prediction": "all x.(Lily(x) -> GrowsThroughoutLife(x))", "score": 0}
{"id": "eqasc_train_12754", "prediction": "all x.(Bamboo(x) -> GrowsThroughoutLife(x))", "score": 0}
{"id": "eqasc_train_12755", "prediction": "all x.(OrangeTree(x) -> ContinuesToGrow(x))", "score": 1}
{"id": "eqasc_train_12756", "prediction": "all x.(Plant(x) -> RequiresNutrientsForGrowth(x))", "score": 0}
{"id": "eqasc_train_12757", "prediction": "all x.(Nutrients(x) -> RequiresForGrowth(x))", "score": 0}
{"id": "eqasc_train_12758", "prediction": "all x.(Plant(x) -> UsesLightEnergyToGrow(x))", "score": 0}
{"id": "eqasc_train_12759", "prediction": "all x.(Plant(x) -> UsesLightEnergy(x))", "score": 0}
{"id": "eqasc_train_12760", "prediction": "all x.(Rose(x) -> HardiestOfAllPlants(x))", "score": 0}
{"id": "eqasc_train_12761", "prediction": "all x.(Rose(x) -> ContinuesToGrowThroughoutLife(x))", "score": 0}
{"id": "eqasc_train_12762", "prediction": "all x.(Fertilizer(x) -> HelpsPlantsGrow(x))", "score": 0}
{"id": "eqasc_train_12763", "prediction": "all x.((Plant(x) & Cultivates(x)) -> FertilizerHelps(x))", "score": 0}
{"id": "eqasc_train_12764", "prediction": "all x y.((ErosionOfSoil(x) & Environment(y)) -> NegativeImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_12765", "prediction": "all x.(Desertification(x) -> NegativeImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_12766", "prediction": "all x.(ForestEnvironment(x) -> Collapses(x))", "score": 0}
{"id": "eqasc_train_12767", "prediction": "all x y.((ErosionOfSoil(x) & Forest(y)) -> NegativeImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_12768", "prediction": "all x.((Earth(x) & LandDegradation(x)) -> (RiseThroughErosion(x) | RiseThroughSalination(x) | RiseThroughPollution(x)))", "score": 0}
{"id": "eqasc_train_12769", "prediction": "all x.(ThrououtEarth(x) -> LandDegradationOnRise(x))", "score": 0}
{"id": "eqasc_train_12770", "prediction": "all x.(ErosionOfDirt(x) -> NegativeImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_12771", "prediction": "all x.((Landscape(x) & NegativeImpactOnEnvironment(x)) -> Scarred(x))", "score": 0}
{"id": "eqasc_train_12772", "prediction": "all x.(Forest(x) -> (ProvidesCleanEnvironment(x) & ProvidesComfortableEnvironment(x)))", "score": 0}
{"id": "eqasc_train_12773", "prediction": "all x y.((ErosionOfSoil(x) & Forest(y)) -> NegativeImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_12774", "prediction": "all x y.((WeatheringOfSoil(x) & Environment(y)) -> NegativeImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_12775", "prediction": "all x y.((Plant(x) & Land(y)) -> KeepsSoilOn(x,y))", "score": 0}
{"id": "eqasc_train_12776", "prediction": "all x y.((ErosionOfLand(x) & Environment(y)) -> NegativeImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_12777", "prediction": "all x y.((Environment(x) & Flood(y)) -> CausesMoreDamage(x,y))", "score": 0}
{"id": "eqasc_train_12778", "prediction": "all x y.((GroundErosion(x) & Environment(y)) -> CausesDamage(x,y))", "score": 0}
{"id": "eqasc_train_12779", "prediction": "all x.(Cattle(x) -> CausesSoilErosion(x))", "score": 0}
{"id": "eqasc_train_12780", "prediction": "all x.(Cattle(x) -> NegativeImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_12781", "prediction": "all x.(NaturalProcesses(x) -> NegativeImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_12782", "prediction": "all x.(SoilErosion(x) -> (Deforestation(x) & ExcessiveCropIrrigation(x)))", "score": 0}
{"id": "eqasc_train_12783", "prediction": "all x y.((Deforestation(x) & ExcessiveCropIrrigation(y)) -> EnhancesNegativeImpactsOnEnvironment(x,y))", "score": 0}
{"id": "eqasc_train_12784", "prediction": "all x y.((WaterVapor(x) & Plant(y)) -> MovesIntoAtmosphere(x,y))", "score": 0}
{"id": "eqasc_train_12785", "prediction": "all x y.((Transpiration(x) & Plant(y)) -> WaterLoss(x,y))", "score": 0}
{"id": "eqasc_train_12786", "prediction": "all x y z.((WaterVapor(x) & Plant(y) & Atmosphere(z)) -> MovesFromTo(x,y,z))", "score": 0}
{"id": "eqasc_train_12787", "prediction": "all x.((Stomate(x) & Open(x)) -> Transpiration(x))", "score": 0}
{"id": "eqasc_train_12788", "prediction": "all x.(Stomate(x) -> MustBeOpenForWaterVaporToMoveFromPlantsIntoAtmosphere(x))", "score": 0}
{"id": "eqasc_train_12789", "prediction": "all x y.((Vapor(x) & FlowsFromBush(x,y) & IntoAtmosphere(x,y)) -> PerspirationOccurs(x))", "score": 0}
{"id": "eqasc_train_12790", "prediction": "all x y z.((Transpiration(x) & WaterVapor(y) & Plant(z)) -> MovesIntoBlanketOfAir(x,y,z))", "score": 0}
{"id": "eqasc_train_12791", "prediction": "all x y.((Plant(x) & GivesOffWaterVapor(x,y) & Photosynthesis(y)) -> Photosynthesis(x,y))", "score": 0}
{"id": "eqasc_train_12792", "prediction": "all x.(Transpiration(x) -> PhotosynthesisProcess(x))", "score": 0}
{"id": "eqasc_train_12793", "prediction": "all x y.((H2OVapor(x) & Plant(y)) -> MovesIntoAtmosphere(x,y))", "score": 0}
{"id": "eqasc_train_12794", "prediction": "all x y.((WaterVapor(x) & Atmosphere(y)) -> (Condenses(x,y) & FallsToEarthSurface(x,y)))", "score": 0}
{"id": "eqasc_train_12795", "prediction": "all x y z.((Transpiration(x) & WaterVapor(y) & Plant(z)) -> (MovesFrom(x,y,z) & FallsToEarthSurface(x)))", "score": 0}
{"id": "eqasc_train_12796", "prediction": "all x y.((Steam(x) & Plant(y)) -> MovesIntoAtmosphere(x,y))", "score": 0}
{"id": "eqasc_train_12797", "prediction": "all x.(Plant(x) -> LosesWaterContinuouslyByThrivation(x))", "score": 0}
{"id": "eqasc_train_12798", "prediction": "all x y.((Plant(x) & Atmosphere(y)) -> LosesWaterTo(x,y))", "score": 0}
{"id": "eqasc_train_12799", "prediction": "all x.(EarthsAtmosphere(x) -> (LayerOfGases(x) & SurroundsEarth(x)))", "score": 0}
{"id": "eqasc_train_12800", "prediction": "all x y z.((WaterVapor(x) & Plant(y) & Gases(z)) -> (MovesFromToLayer(x,y,z) & SurroundsEarth(x)))", "score": 0}
{"id": "eqasc_train_12801", "prediction": "all x y z.((WaterVapor(x) & Oak(y) & Atmosphere(z)) -> MovesInTranspiration(x,y,z))", "score": 0}
{"id": "eqasc_train_12802", "prediction": "all x.(AntiTranspirant(x) -> ReducesThroat(x))", "score": 0}
{"id": "eqasc_train_12803", "prediction": "all x.(Chemical(x) -> KeepsWaterVaporFromMovingIntoAtmosphere(x))", "score": 0}
{"id": "eqasc_train_12804", "prediction": "all x y.((Gills(x) & AquaticAnimal(y)) -> UsedForBreathingWater(x,y))", "score": 0}
{"id": "eqasc_train_12805", "prediction": "all x.(Fish(x) -> BreathesWater(x))", "score": 0}
{"id": "eqasc_train_12806", "prediction": "all x.(Mouse(x) -> HasLittleGills(x))", "score": 0}
{"id": "eqasc_train_12807", "prediction": "all x.(Fish(x) -> BreathesInWater(x))", "score": 0}
{"id": "eqasc_train_12808", "prediction": "all x.(AquaticAnimal(x) -> RequiresDissolvedOxygen(x))", "score": 0}
{"id": "eqasc_train_12809", "prediction": "all x.(AquaticAnimal(x) -> NeedsGillsToSurvive(x))", "score": 0}
{"id": "eqasc_train_12810", "prediction": "all x.(SharkExhibit(x) -> ComesFaceToFaceWithUltimateAquaticPredator(x))", "score": 0}
{"id": "eqasc_train_12811", "prediction": "all x y.((Gills(x) & Shark(y)) -> UsedForBreathingWater(x,y))", "score": 0}
{"id": "eqasc_train_12812", "prediction": "all x y.((FishGills(x) & Water(y) & PassesOver(x,y)) -> TakesOxygenFrom(x,y))", "score": 0}
{"id": "eqasc_train_12813", "prediction": "all x.(Fish(x) -> BreathesWithGills(x))", "score": 0}
{"id": "eqasc_train_12814", "prediction": "all x.(Fish(x) -> UsesGillsForBreathingWater(x))", "score": 0}
{"id": "eqasc_train_12815", "prediction": "all x.(Fish(x) -> (Animal(x) & LivesInWater(x) & BreathesUsingGills(x)))", "score": 0}
{"id": "eqasc_train_12816", "prediction": "all x y.((Fish(x) & Gills(y)) -> UsesToBreatheWater(x,y))", "score": 0}
{"id": "eqasc_train_12817", "prediction": "all x.(Animal(x) -> (BreathesInOxygen(x) & BreathesOutCarbonDioxide(x)))", "score": 0}
{"id": "eqasc_train_12818", "prediction": "all x.(Gill(x) -> ProvidesOxygen(x))", "score": 0}
{"id": "eqasc_train_12819", "prediction": "all x.(Crustacean(x) -> (Aquatic(x) & BreathesByGills(x)))", "score": 0}
{"id": "eqasc_train_12820", "prediction": "all x.(Gill(x) -> BreathesWater(x))", "score": 0}
{"id": "eqasc_train_12821", "prediction": "all x.(Erosion(x) -> CausesDeposition(x))", "score": 0}
{"id": "eqasc_train_12822", "prediction": "all x y.((Silt(x) & Mud(y)) -> (TransportedToOpenOcean(x) & DepositedOffCoast(x)))", "score": 0}
{"id": "eqasc_train_12823", "prediction": "all x.(Erosion(x) -> (CausesTransportation(x,silts) & CausesTransportation(x,mud)))", "score": 0}
{"id": "eqasc_train_12824", "prediction": "all x.(DepositionLandform(x) -> (FormsStalactites(x) | FormsStalagmites(x)))", "score": 0}
{"id": "eqasc_train_12825", "prediction": "all x.(Erosion(x) -> (FormsStalactites(x) & FormsStalactmites(x)))", "score": 0}
{"id": "eqasc_train_12826", "prediction": "all x.(SilicaSand(x) -> MinedFromSandstoneDeposits(x))", "score": 0}
{"id": "eqasc_train_12827", "prediction": "all x.(Erosion(x) -> FormsSilicaSand(x))", "score": 0}
{"id": "eqasc_train_12828", "prediction": "all x y.((SoilMovement(x) & Water(y)) -> CausesDeposition(x,y))", "score": 0}
{"id": "eqasc_train_12829", "prediction": "all x.(Erosion(x) -> (CausedByWater(x) & CausedByWind(x) & CausedByTraffic(x)))", "score": 0}
{"id": "eqasc_train_12830", "prediction": "all x.(Water(x) -> CausesDeposition(x))", "score": 0}
{"id": "eqasc_train_12831", "prediction": "all x.(Desertification(x) -> SoilDeposition(x))", "score": 0}
{"id": "eqasc_train_12832", "prediction": "all x.(DestructiveForm(x) -> (Erosion(x) | Weathering(x)))", "score": 0}
{"id": "eqasc_train_12833", "prediction": "all x.(Weathering(x) -> CausesDepositionInEarth(x))", "score": 0}
{"id": "eqasc_train_12834", "prediction": "all x.(WindErosion(x) -> Dominant(x))", "score": 0}
{"id": "eqasc_train_12835", "prediction": "all x.(Wind(x) -> CausesDeposition(x))", "score": 0}
{"id": "eqasc_train_12836", "prediction": "all x.(Landfill(x) -> NegativeImpactOnEnvironment(x))", "score": 1}
{"id": "eqasc_train_12837", "prediction": "all x.(MostMotorizedTrash(x) -> DisposableInLandfill(x))", "score": 0}
{"id": "eqasc_train_12838", "prediction": "all x.(MostMountainTrash(x) -> NegativeImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_12839", "prediction": "all x y.((Life(x) & Environment(y)) -> (Affects(x,y) & Affects(y,z)))", "score": 0}
{"id": "eqasc_train_12840", "prediction": "all x.(Landfill(x) -> NegativeImpactOnLife(x))", "score": 0}
{"id": "eqasc_train_12841", "prediction": "all x.(Landfill(x) -> NegativeImpactOnEcosystems(x))", "score": 0}
{"id": "eqasc_train_12842", "prediction": "all x.(Landfill(x) -> (Place(x) & TakenToBeBurned(x)))", "score": 0}
{"id": "eqasc_train_12843", "prediction": "all x y.((BuryingGarbage(x) & Environment(y)) -> NegativeImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_12844", "prediction": "all x.(LessGarbageGoesIntoLandfills(x) -> -StopsGasDisplacement(x))", "score": 0}
{"id": "eqasc_train_12845", "prediction": "all x.(LessGarbage(x) -> BetterForEnvironment(x))", "score": 0}
{"id": "eqasc_train_12846", "prediction": "all x.(Waste(x) -> SentToLandfill(x))", "score": 0}
{"id": "eqasc_train_12847", "prediction": "all x.(Waste(x) -> NegativeImpact(x))", "score": 0}
{"id": "eqasc_train_12848", "prediction": "all x y.((Trash(x) & Landfill(y)) -> EndsUpIn(x,y))", "score": 0}
{"id": "eqasc_train_12849", "prediction": "all x.(Trash(x) -> NegativeImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_12850", "prediction": "all x.(Landfill(x) -> (DesignedPlace(x) & GarbageBurnedUnderground(x)))", "score": 0}
{"id": "eqasc_train_12851", "prediction": "all x.(UndergroundGarbage(x) -> NegativeImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_12852", "prediction": "all x.(Garbage(x) -> BuriedInLandfills(x))", "score": 0}
{"id": "eqasc_train_12853", "prediction": "all x.(BurnedGarbage(x) -> NegativeImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_12854", "prediction": "all x.((LandfillLeachate(x) & GroundwaterContamination(x)) -> (LandfillLeachate(x) & GroundwaterContamination(x)))", "score": 0}
{"id": "eqasc_train_12855", "prediction": "all x.(GroundwaterContamination(x) -> NegativeImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_12856", "prediction": "all x.(Garbage(x) -> Landfill(x))", "score": 1}
{"id": "eqasc_train_12857", "prediction": "all x.(Garbage(x) -> NegativeImpactOnEnvironment(x))", "score": 1}
{"id": "eqasc_train_12858", "prediction": "all x.((Dump(x) | Landfill(x)) -> Example(x))", "score": 0}
{"id": "eqasc_train_12859", "prediction": "all x.(Dump(x) -> NegativeImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_12860", "prediction": "all x.(Recycling(x) -> CutsDownOnLandfill(x))", "score": 0}
{"id": "eqasc_train_12861", "prediction": "all x y.((Recycling(x) & Environment(y)) -> ReducesNegativeImpacts(x,y))", "score": 0}
{"id": "eqasc_train_12862", "prediction": "all x.(SolidWaste(x) -> StoredInLandfills(x))", "score": 0}
{"id": "eqasc_train_12863", "prediction": "all x.(SolidWaste(x) -> NegativeImpactOnEnvironment(x))", "score": 0}
{"id": "eqasc_train_12864", "prediction": "all x.((People(x) | Animals(x) | Plants(x)) -> ThreatenedWithMassiveDestructionOfEnvironment(x))", "score": 0}
{"id": "eqasc_train_12865", "prediction": "all x.(Landfill(x) -> (NegativeImpactOnPeople(x) & NegativeImpactOnAnimals(x) & NegativeImpactOnPlants(x)))", "score": 0}
{"id": "eqasc_train_12866", "prediction": "all x.(AquaticAnimal(x) -> RequiresGreatAmountsOfWater(x))", "score": 3}
{"id": "eqasc_train_12867", "prediction": "all x.(Fish(x) -> (SurvivesInWater(x) & UsesGillsToExtractDissolvedOxygen(x)))", "score": 0}
{"id": "eqasc_train_12868", "prediction": "all x.(AquaticAnimal(x) -> (RequiresGreatAmountsOfWater(x) & UsesGillsToExtractDissolvedOxygen(x)))", "score": 0}
{"id": "eqasc_train_12869", "prediction": "all x.(Turtle(x) -> (Aquatic(x) | SemiAquatic(x)))", "score": 0}
{"id": "eqasc_train_12870", "prediction": "all x.(Turtle(x) -> RequiresGreatAmountsOfWater(x))", "score": 0}
{"id": "eqasc_train_12871", "prediction": "all x.(Beaver(x) -> RequiresGreatAmountsOfWater(x))", "score": 1}
{"id": "eqasc_train_12872", "prediction": "all x.(Fish(x) -> RequiresGreatAmountsOfWater(x))", "score": 0}
{"id": "eqasc_train_12873", "prediction": "all x.(AquaticAnimal(x) -> AdaptedToSalinityRanges(x))", "score": 0}
{"id": "eqasc_train_12874", "prediction": "all x.((Animal(x) & AdaptedToSalinityRanges(x)) -> RequiresGreatAmountsOfWater(x))", "score": 0}
{"id": "eqasc_train_12875", "prediction": "all x.(Beaver(x) -> RequiresGreatAmountsOfWater(x))", "score": 1}
{"id": "eqasc_train_12876", "prediction": "all x.(AquaticAnimal(x) -> RequiresPrecipitationToSurvive(x))", "score": 0}
{"id": "eqasc_train_12877", "prediction": "all x.(Rain(x) -> Water(x))", "score": 0}
{"id": "eqasc_train_12878", "prediction": "all x.(AquaticAnimal(x) -> RequiresGreatAmountsOfRainToSurvive(x))", "score": 0}
{"id": "eqasc_train_12879", "prediction": "all x.(Survival(x) -> MakesLiving(x))", "score": 0}
{"id": "eqasc_train_12880", "prediction": "all x.(AquaticAnimal(x) -> RequiresGreatAmountsOfWater(x))", "score": 1}
{"id": "eqasc_train_12881", "prediction": "all x.(Desert(x) -> (FormedByLackOfWater(x)))", "score": 0}
{"id": "eqasc_train_12882", "prediction": "all x.(AquaticAnimal(x) -> -SurvivesInDesert(x))", "score": 0}
{"id": "eqasc_train_12883", "prediction": "all x.(CleanWater(x) -> EssentialToAquaticLife(x))", "score": 0}
{"id": "eqasc_train_12884", "prediction": "all x.(WaterAnimal(x) -> RequiresGreatAmountsOfWater(x))", "score": 0}
{"id": "eqasc_train_12885", "prediction": "all x y.((Fish(x) & SmallAquaticAnimal(y)) -> CanBePlacedInAquarium(x,y))", "score": 0}
{"id": "eqasc_train_12886", "prediction": "all x.(Dolphin(x) -> (AquaticMammal(x) & CloselyRelatedToWhale(x) & CloselyRelatedToPorpoises(x)))", "score": 0}
{"id": "eqasc_train_12887", "prediction": "all x.(Dolphin(x) -> RequiresGreatAmountsOfWater(x))", "score": 0}
{"id": "eqasc_train_12888", "prediction": "all x.(Beaver(x) -> RequiresGreatAmountsOfWaterToSurvive(x))", "score": 0}
{"id": "eqasc_train_12889", "prediction": "all x.((Algae(x) & DepletesWaterOfOxygen(x)) -> ImpossibleForAquaticAnimalsToSurvive(x))", "score": 0}
{"id": "eqasc_train_12890", "prediction": "all x.(AquaticAnimal(x) -> -TooMuchAlgaeInWater(x))", "score": 0}
{"id": "eqasc_train_12891", "prediction": "all x y.((Translation(x) & GeneticCode(y)) -> (Reads(x,y) & MakesProtein(x)))", "score": 0}
{"id": "eqasc_train_12892", "prediction": "all x.(Protein(x) -> TranslatedUsingStandardGeneticCode(x))", "score": 0}
{"id": "eqasc_train_12893", "prediction": "all x.((MRNA(x) & StandardGeneticCode(x)) -> MakesProtein(x))", "score": 0}
{"id": "eqasc_train_12894", "prediction": "all x.(Protein(x) -> TranslatedGene(x))", "score": 0}
{"id": "eqasc_train_12895", "prediction": "all x y.((GeneticCode(x) & mRNA(y)) -> (Gene(x,y) & Translatible(x,y)))", "score": 0}
{"id": "eqasc_train_12896", "prediction": "all x.(Protein(x) -> ContainsGenes(x))", "score": 0}
{"id": "eqasc_train_12897", "prediction": "all x y.((GeneExpression(x) & MRNA(y) & Protein(z)) -> TranslatedInto(x,y,z))", "score": 0}
{"id": "eqasc_train_12898", "prediction": "all x.(Translation(x) -> (ReadsGeneExpression(x) & RegulatesGeneExpression(x)))", "score": 0}
{"id": "eqasc_train_12899", "prediction": "all x y.((MRNA(x) & Protein(y)) -> Interaction(x,y))", "score": 0}
{"id": "eqasc_train_12900", "prediction": "all x.((MRNA(x) & Ribosome(x)) -> TranslationInvolvesInteraction(x))", "score": 0}
{"id": "eqasc_train_12901", "prediction": "all x.(Protein(x) -> GivesRiseToEmergentProperties(x))", "score": 0}
{"id": "eqasc_train_12902", "prediction": "all x y z.((Translation(x) & GeneticCode(y) & mRNA(z)) -> (Reads(x,y) & GenericCode(x,z) & GenericProperties(x,y) & EmergentProperties(x)))", "score": 0}
{"id": "eqasc_train_12903", "prediction": "all x.((Protein(x) | Nitrate(x)) -> NitrogenousCompound(x))", "score": 0}
{"id": "eqasc_train_12904", "prediction": "all x y z.((Translation(x) & GeneticCode(y) & mRNA(z)) -> (Reads(x,y) & MakesNitrogenousCompound(x)))", "score": 0}
{"id": "eqasc_train_12905", "prediction": "all x.(Protein(x) -> ChainOfAminoAcids(x))", "score": 0}
{"id": "eqasc_train_12906", "prediction": "all x y z.((Translation(x) & GeneticCode(y) & AminoAcids(z)) -> (ReadsInMRNA(x,y) & MakesChainOfAminoAcids(x,z)))", "score": 0}
{"id": "eqasc_train_12907", "prediction": "all x.(NucleotideSequence(x) -> TranslatedAccordingToUniversalGeneticCode(x))", "score": 0}
{"id": "eqasc_train_12908", "prediction": "all x y z.((NucleotideSequence(x) & mRNA(y) & Protein(z)) -> (ReadIn(x,y) & MadeIn(z,y)))", "score": 0}
{"id": "eqasc_train_12909", "prediction": "all x.((Microbe(x) & DiseaseCausing(x)) -> NegativeImpactOnBody(x))", "score": 0}
{"id": "eqasc_train_12910", "prediction": "all x.(Pathogen(x) -> (Microbe(x) & CausesDisease(x)))", "score": 0}
{"id": "eqasc_train_12911", "prediction": "all x.(Pathogen(x) -> NegativeImpactOnBody(x))", "score": 0}
{"id": "eqasc_train_12912", "prediction": "all x.(Pathogen(x) -> DiseaseCausing(x))", "score": 0}
{"id": "eqasc_train_12913", "prediction": "all x.(Pathogen(x) -> NegativeImpactOnBody(x))", "score": 0}
{"id": "eqasc_train_12914", "prediction": "all x.(Microbe(x) -> Microorganism(x))", "score": 0}
{"id": "eqasc_train_12915", "prediction": "all x.((Microorganism(x) & DiseaseCausing(x)) -> NegativeImpactOnBody(x))", "score": 0}
{"id": "eqasc_train_12916", "prediction": "all x.(DangerousMicrobe(x) -> (Pathogenic(x) | DiseaseCausing(x)))", "score": 0}
{"id": "eqasc_train_12917", "prediction": "all x.(Pathogen(x) -> (NegativeImpactOnBody(x) & CausesDisease(x)))", "score": 0}
{"id": "eqasc_train_12918", "prediction": "all x.((HarmfulMicrobe(x) & CausesDiseases(x)) -> Pathogen(x))", "score": 0}
{"id": "eqasc_train_12919", "prediction": "all x.(Microbe(x) -> (Bacteria(x) | Microorganism(x)))", "score": 0}
{"id": "eqasc_train_12920", "prediction": "all x.((DiseaseCausingBacteria(x) & NegativeImpactOnBody(x)) -> NegativeImpactOnBody(x))", "score": 0}
{"id": "eqasc_train_12921", "prediction": "all x.(HumanBody(x) -> Unique(x))", "score": 0}
{"id": "eqasc_train_12922", "prediction": "all x.((Microbe(x) & DiseaseCausing(x)) -> NegativeImpactOnHumans(x))", "score": 0}
{"id": "eqasc_train_12923", "prediction": "all x.(Microbe(x) -> TinyLivingCell(x))", "score": 0}
{"id": "eqasc_train_12924", "prediction": "all x.((DiseaseCausingTinyLivingCells(x) & NegativeImpactOnBody(x)) -> NegativeImpactOnBody(x))", "score": 0}
{"id": "eqasc_train_12925", "prediction": "all x.(Microbe(x) -> (MicroscopicOrganism(x) & SingleCelled(x) & -Nucleus(x)))", "score": 0}
{"id": "eqasc_train_12926", "prediction": "all x.((DiseaseCausingOrganism(x) & NegativeImpactOnBody(x)) -> NegativeImpactOnBody(x))", "score": 0}
{"id": "eqasc_train_12927", "prediction": "all x.(Microbe(x) -> MajorCauseOfDisease(x))", "score": 0}
{"id": "eqasc_train_12928", "prediction": "all x.(Microbe(x) -> FormsDiseases(x))", "score": 0}
{"id": "eqasc_train_12929", "prediction": "all x.(Water(x) -> TestedForDiseaseCausingMicrobes(x))", "score": 0}
{"id": "eqasc_train_12930", "prediction": "all x.((Water(x) & -Tested(x)) -> NegativeImpactOnBody(x))", "score": 0}
{"id": "eqasc_train_12931", "prediction": "all x.(Meiosis(x) -> (CellDividend(x) & ProducesGametes(x)))", "score": 0}
{"id": "eqasc_train_12932", "prediction": "all x.(Meiosis(x) -> (CellDividection(x) & ProducesSexCells(x)))", "score": 0}
{"id": "eqasc_train_12933", "prediction": "all x.(FemaleGamete(x) -> (Egg(x) | Ovar(x)))", "score": 0}
{"id": "eqasc_train_12934", "prediction": "all x.(Meiosis(x) -> (ProducesEggs(x) | ProducesOvum(x)))", "score": 0}
{"id": "eqasc_train_12935", "prediction": "all x.(Meiosis(x) -> (CellDividend(x) & ProducesOvary(x) & ProducesSpermatozoa(x)))", "score": 0}
{"id": "eqasc_train_12936", "prediction": "all x.((Meiosis(x) & Mitosis(x)) -> ChromosomeDuplication(x))", "score": 0}
{"id": "eqasc_train_12937", "prediction": "all x y.((CellDividend(x) & Gametes(y)) -> ChromosomeDuplication(x))", "score": 0}
{"id": "eqasc_train_12938", "prediction": "all x.(Meiosis(x) -> (ProducesOvary(x) & ProducesSpermatozoa(x)))", "score": 0}
{"id": "eqasc_train_12939", "prediction": "all x.(Meiosis(x) -> (CellDividection(x) & ProducesSsperm(x)))", "score": 0}
{"id": "eqasc_train_12940", "prediction": "all x.(Meiosis(x) -> (CellDividection(x) & ProducesSexCells(x)))", "score": 0}
{"id": "eqasc_train_12941", "prediction": "all x.(Meiosis(x) -> (CellDividection(x) & ProducesOvary(x) & ProducesSpermatozoa(x)))", "score": 0}
{"id": "eqasc_train_12942", "prediction": "all x.(Meiosis(x) -> (CellDividection(x) & ProducesHaplodyosis(x)))", "score": 0}
{"id": "eqasc_train_12943", "prediction": "all x.(Meiosis(x) -> (TwoStageProcess(x) & ProducesFourCells(x)))", "score": 0}
{"id": "eqasc_train_12944", "prediction": "all x.(TwoStageProcess(x) -> (CellDividend(x) & ProducesGametes(x)))", "score": 0}
{"id": "eqasc_train_12945", "prediction": "all x.(Meiosis(x) -> (CellDividection(x) & ProducesOvary(x) & ProducesSpermatozoa(x)))", "score": 0}
{"id": "eqasc_train_12946", "prediction": "all x y.((Insulin(x) & Cell(y)) -> HelpsTakeUpGlucose(x,y))", "score": 0}
{"id": "eqasc_train_12947", "prediction": "all x.((Insulin(x) & MadeByOwnPancreas(x)) -> EndogenousInsulin(x))", "score": 0}
{"id": "eqasc_train_12948", "prediction": "all x y.((EndogenousCompounds(x) & PersonsPancreas(y)) -> HelpsCellsTakeUpGlucoseFromBlood(x,y))", "score": 0}
{"id": "eqasc_train_12949", "prediction": "all x.((Insulin(x) & ProducedByPancreas(x)) -> EndogenousInsulin(x))", "score": 0}
{"id": "eqasc_train_12950", "prediction": "all x y.((Pancreas(x) & Cell(y)) -> HelpsTakeUpGlucoseFromBlood(x,y))", "score": 0}
{"id": "eqasc_train_12951", "prediction": "all x.((LotOfGlucoseInBlood(x) & PancreasMakesInsulin(x)) -> MakesInsulin(x))", "score": 0}
{"id": "eqasc_train_12952", "prediction": "all x.(Insulin(x) -> TakesUpGlucose(x))", "score": 0}
{"id": "eqasc_train_12953", "prediction": "all x y.((Pancreas(x) & Cell(y)) -> Makes(x,y))", "score": 0}
{"id": "eqasc_train_12954", "prediction": "all x.(Pancreas(x) -> LowersGlucoseLevelsInBlood(x))", "score": 0}
{"id": "eqasc_train_12955", "prediction": "all x.(Insulin(x) -> HelpsCellsTakeUpSugarFromBlood(x))", "score": 0}
{"id": "eqasc_train_12956", "prediction": "all x.(Exercise(x) -> (BurnsGlucoseFromBlood(x) & LowersBloodSugar(x)))", "score": 0}
{"id": "eqasc_train_12957", "prediction": "all x y.((Insulin(x) & Cell(y)) -> LowersBloodSugar(x,y))", "score": 0}
{"id": "eqasc_train_12958", "prediction": "all x y.((Insulin(x) & Pancreas(y)) -> HelpsGlucoseInBloodstream(x,y))", "score": 0}
{"id": "eqasc_train_12959", "prediction": "all x y.((Pancreas(x) & Blood(y)) -> TakesUpGlucose(x,y))", "score": 0}
{"id": "eqasc_train_12960", "prediction": "all x y.((Insulin(x) & Cell(y)) -> HelpsTakeUpSugarFromBlood(x,y))", "score": 0}
{"id": "eqasc_train_12961", "prediction": "all x.((BloodGlucose(x) & MammalianCell(x)) -> PrincipalEnergySource(x))", "score": 0}
{"id": "eqasc_train_12962", "prediction": "all x.(Insulin(x) -> HelpsCellsTakeUpEnergyFromBlood(x))", "score": 0}
{"id": "eqasc_train_12963", "prediction": "all x y.((Pancreas(x) & Insulin(y)) -> ProducesRightAmountToMoveGlucoseIntoCells(x,y))", "score": 0}
{"id": "eqasc_train_12964", "prediction": "all x y.((Pancreas(x) & Insulin(y)) -> ProducesToTakeGlucoseFromBlood(x,y))", "score": 0}
{"id": "eqasc_train_12965", "prediction": "all x.(Individual(x) -> ProteinHormone(x))", "score": 0}
{"id": "eqasc_train_12966", "prediction": "all x y.((ProteinHormone(x) & Cell(y)) -> HelpsTakeUpGlucoseFromBlood(x,y))", "score": 0}
{"id": "eqasc_train_12967", "prediction": "all x y.((Sugar(x) & Insulin(y)) -> RegulatedFrom(x,y))", "score": 0}
{"id": "eqasc_train_12968", "prediction": "all x.(BirdBeak(x) -> AdaptedForFood(x))", "score": 0}
{"id": "eqasc_train_12969", "prediction": "all x.(Hawk(x) -> (Strong(x) & Powerful(x)))", "score": 0}
{"id": "eqasc_train_12970", "prediction": "all x.(HawkBeak(x) -> (AdaptedForFood(x) & Eats(x)))", "score": 0}
{"id": "eqasc_train_12971", "prediction": "all x y.((Bird(x) & Bug(y)) -> Eats(x,y))", "score": 0}
{"id": "eqasc_train_12972", "prediction": "all x y.((BirdBeak(x) & Bug(y)) -> (AdaptedForDevoring(x,y) & InGarden(x)))", "score": 0}
{"id": "eqasc_train_12973", "prediction": "all x.(Adaptation(x) -> (ErasedVariation(x) & HelpsOrganismSurvive(x)))", "score": 0}
{"id": "eqasc_train_12974", "prediction": "all x.(BirdBeak(x) -> (Earned(x) & HasBerryBeak(x)))", "score": 0}
{"id": "eqasc_train_12975", "prediction": "all x.(Bird(x) -> (EatsFood(x) & Scavenges(x)))", "score": 0}
{"id": "eqasc_train_12976", "prediction": "all x.(Beak(x) -> (AdaptedForScavengedFood(x) & Food(x)))", "score": 0}
{"id": "eqasc_train_12977", "prediction": "all x.(Bird(x) -> PlacedInClassAves(x))", "score": 0}
{"id": "eqasc_train_12978", "prediction": "all x.(Ave(x) -> (HasBeak(x) & AdaptedForFood(x)))", "score": 0}
{"id": "eqasc_train_12979", "prediction": "all x.(Bird(x) -> (EatsFish(x) & EatsAlgae(x) & EatsHumanFood(x)))", "score": 0}
{"id": "eqasc_train_12980", "prediction": "all x.(BirdBeak(x) -> AdaptedForEatingFish(x))", "score": 0}
{"id": "eqasc_train_12981", "prediction": "all x.(Eagle(x) -> LargeBird(x))", "score": 0}
{"id": "eqasc_train_12982", "prediction": "all x.(EagleBeak(x) -> (AdaptedForFood(x) & Eats(x)))", "score": 0}
{"id": "eqasc_train_12983", "prediction": "all x.(Bird(x) -> (HasBeak(x) | HasBill(x)))", "score": 0}
{"id": "eqasc_train_12984", "prediction": "all x.(BirdBill(x) -> AdaptedForFood(x))", "score": 0}
{"id": "eqasc_train_12985", "prediction": "all x.((Bird(x) & CanFly(x) & HookedBeak(x)) -> Eagle(x))", "score": 0}
{"id": "eqasc_train_12986", "prediction": "all x.(HuntedBeak(x) -> AdaptedForFood(x))", "score": 0}
{"id": "eqasc_train_12987", "prediction": "all x y.((Disease(x) & Organism(y)) -> NegativeImpact(x,y))", "score": 0}
{"id": "eqasc_train_12988", "prediction": "all x.(CrohnsDisease(x) -> LifelongDisease(x))", "score": 0}
{"id": "eqasc_train_12989", "prediction": "all x.(CrohnsImpact(x) -> Negative(x))", "score": 0}
{"id": "eqasc_train_12990", "prediction": "all x.(Disease(x) -> NegtiveImpactOnPlantsAndAnimals(x))", "score": 0}
{"id": "eqasc_train_12991", "prediction": "all x.(Peace(x) -> (FreedomFromSickness(x) & FreedomFromDisease(x)))", "score": 0}
{"id": "eqasc_train_12992", "prediction": "all x y.((Sickness(x) & Organism(y)) -> NegativeImpact(x,y))", "score": 0}
{"id": "eqasc_train_12993", "prediction": "all x.(Disease(x) -> NegativeImpactOnLivingBeing(x))", "score": 0}
{"id": "eqasc_train_12994", "prediction": "all x.(Disease(x) -> CanBeTreated(x))", "score": 0}
{"id": "eqasc_train_12995", "prediction": "all x.(NegativeImpactsOnOrganisms(x) -> CanBeTreated(x))", "score": 0}
{"id": "eqasc_train_12996", "prediction": "all x.(MentalIllness(x) -> Disease(x))", "score": 0}
{"id": "eqasc_train_12997", "prediction": "all x.(MentalIllness(x) -> NegativeImpactOnOrganism(x))", "score": 0}
{"id": "eqasc_train_12998", "prediction": "all x.(Smoking(x) -> (PrevalenceOfAlzheimerDisease(x) & PrevalenceOfDemenitis(x)))", "score": 0}
{"id": "eqasc_train_12999", "prediction": "all x.(Smoking(x) -> NegativeImpact(x))", "score": 0}
{"id": "eqasc_train_13000", "prediction": "all x.((Bacteria(x) | Viruses(x)) -> CausesDisease(x))", "score": 0}
{"id": "eqasc_train_13001", "prediction": "all x y.((Bacteria(x) & Organism(y)) -> NegativeImpact(x,y))", "score": 0}
{"id": "eqasc_train_13002", "prediction": "all x.(Illness(x) -> SubjectiveExperienceOfDisease(x))", "score": 0}
{"id": "eqasc_train_13003", "prediction": "all x.(Illness(x) -> NegativeImpactOnOrganism(x))", "score": 0}
{"id": "eqasc_train_13004", "prediction": "all x.(Influenza(x) -> (ContagiousDisease(x) & CausedByVirus(x)))", "score": 0}
{"id": "eqasc_train_13005", "prediction": "all x y.((Flu(x) & Organism(y)) -> NegativeImpact(x,y))", "score": 0}
{"id": "eqasc_train_13006", "prediction": "all x.((InfectiousDisease(x) | MalnutritionDisease(x)) -> Predominant(x))", "score": 0}
{"id": "eqasc_train_13007", "prediction": "all x.(Malnutrition(x) -> NegativeImpactOnOrganism(x))", "score": 0}
{"id": "eqasc_train_13008", "prediction": "all x.((DiseaseCausingOrganism(x) & Pathogen(x)) -> Causes(x,Organism))", "score": 0}
{"id": "eqasc_train_13009", "prediction": "all x y.((Pathogen(x) & Organism(y)) -> NegativeImpact(x,y))", "score": 0}
{"id": "eqasc_train_13010", "prediction": "all x y.((Liquid(x) & Liquid(y)) -> BoilingPoint(x,y))", "score": 0}
{"id": "eqasc_train_13011", "prediction": "all x.(HeatingLiquid(x) -> CanTellWhenGas(x))", "score": 0}
{"id": "eqasc_train_13012", "prediction": "all x y.((Liquid(x) & Gas(y)) -> HeatsConvertsTo(x,y))", "score": 0}
{"id": "eqasc_train_13013", "prediction": "all x y.((Liquid(x) & Liquid(y)) -> ConvertsToGas(x,y))", "score": 0}
{"id": "eqasc_train_13014", "prediction": "all x.((Molecule(x) & BoilingPointOfWater(x)) -> (Gas(x) & Liquid(x)))", "score": 0}
{"id": "eqasc_train_13015", "prediction": "all x y.((Liquid(x) & Boiling(y) & Boiling(z)) -> TurnsIntoGas(x,y))", "score": 0}
{"id": "eqasc_train_13016", "prediction": "all x.(HeatingWater(x) -> IdentifiesBoilingPoint(x))", "score": 0}
{"id": "eqasc_train_13017", "prediction": "all x y.((Fire(x) & Liquid(y)) -> BoilingPoint(x,y))", "score": 0}
{"id": "eqasc_train_13018", "prediction": "all x y.((Pressure(x) & Liquid(y)) -> AffectsBoilingPoint(x,y))", "score": 0}
{"id": "eqasc_train_13019", "prediction": "all x.(Pressure(x) -> (IncreasesBoilingPoint(x) | DecreasesBoilingPoint(x)))", "score": 0}
{"id": "eqasc_train_13020", "prediction": "all x y.((Liquid(x) & GasBubble(y)) -> Burst(x,y))", "score": 0}
{"id": "eqasc_train_13021", "prediction": "all x y.((Heat(x) & Substance(y)) -> (VibrationsOfAtomsAndMolecules(x,y)))", "score": 0}
{"id": "eqasc_train_13022", "prediction": "all x y z.((Liquid(x) & Atoms(y) & BoilingPoint(z)) -> VibrationsInLiquid(x,y,z))", "score": 0}
{"id": "eqasc_train_13023", "prediction": "all x y.((CarbonDioxideConcentration(x) & Air(y)) -> IncreasedOverDecade(x,y))", "score": 0}
{"id": "eqasc_train_13024", "prediction": "all x y.((GreenhouseGasConcentration(x) & Air(y)) -> IncreasedOverDecade(x,y))", "score": 0}
{"id": "eqasc_train_13025", "prediction": "all x.(Decade(x) -> Has10Years(x))", "score": 0}
{"id": "eqasc_train_13026", "prediction": "all x y.((CarbonDioxideConcentration(x) & Air(y)) -> IncreasedOverTheLast10Years(x,y))", "score": 0}
{"id": "eqasc_train_13027", "prediction": "all x.(CarbonDioxide(x) -> PrimaryGreenhouseGas(x))", "score": 0}
{"id": "eqasc_train_13028", "prediction": "all x.(CarbonDioxide(x) -> (HasHazardousGas(x) & Usually(x)))", "score": 0}
{"id": "eqasc_train_13029", "prediction": "all x y.((Air(x) & CO2Concentration(y)) -> IncreasedOverDecade(x,y))", "score": 0}
{"id": "eqasc_train_13030", "prediction": "all x.(CarbonDioxide(x) -> FormedByBurningCarbon(x))", "score": 0}
{"id": "eqasc_train_13031", "prediction": "all x.(BurningCarbonConcentration(x) -> IncreasedScenarily(x))", "score": 0}
{"id": "eqasc_train_13032", "prediction": "all x.((IncreasesInCarbonDioxide(x) & GreenhouseEffect(x)) -> Worse(x))", "score": 0}
{"id": "eqasc_train_13033", "prediction": "all x y.((GreenhouseEffect(x) & Air(y)) -> WorseOverDecline(x,y))", "score": 0}
{"id": "eqasc_train_13034", "prediction": "all x.(CO2(x) -> CarbonDioxide(x))", "score": 0}
{"id": "eqasc_train_13035", "prediction": "all x y.((CO2Concentration(x) & Air(y)) -> IncreasedOverDecade(x,y))", "score": 0}
{"id": "eqasc_train_13036", "prediction": "all x.((CarbonDioxide(x) & IncreasedGlobalWarmingThreat(x)) -> ChiefCause(x))", "score": 0}
{"id": "eqasc_train_13037", "prediction": "all x.((RiseInCarbonDioxideConcentrations(x) & GlobalWarmingThreats(x)) -> ContributesToIncrease(x,GlobalWarmingThreats))", "score": 0}
{"id": "eqasc_train_13038", "prediction": "all x y.((Firecracker(x) & ChemicalEnergy(y)) -> ConvertsToSound(x,y))", "score": 0}
{"id": "eqasc_train_13039", "prediction": "all x.(Fireworks(x) -> ConvertsChemicalEnergyToSound(x))", "score": 0}
{"id": "eqasc_train_13040", "prediction": "all x y z.((Firecracker(x) & ChemicalEnergy(y) & ChemicalEnergy(z)) -> ConvertsToWhatWeHear(x,y,z))", "score": 0}
{"id": "eqasc_train_13041", "prediction": "all x.(ChemicalEnergy(x) -> ReleasedAsResultOfChemicalReactions(x))", "score": 0}
{"id": "eqasc_train_13042", "prediction": "all x.(Firecracker(x) -> (CompleteReactions(x) & GoOff(x)))", "score": 0}
{"id": "eqasc_train_13043", "prediction": "all x.(Energy(x) -> GeneratesBySoundWaves(x))", "score": 0}
{"id": "eqasc_train_13044", "prediction": "all x.(Firecracker(x) -> ConvertsChemicalEnergyToAudiibleWaves(x))", "score": 0}
{"id": "eqasc_train_13045", "prediction": "all x.((AudibleGroundFireworks(x) & (Firecracker(x) | Chaser(x))) -> IllegalInKentucky(x))", "score": 0}
{"id": "eqasc_train_13046", "prediction": "all x.(AudibleGroundFireworks(x) -> ConvertsChemicalEnergyToSound(x))", "score": 0}
{"id": "eqasc_train_13047", "prediction": "all x.((ChemicalReaction(x) & RequiresEnergy(x)) -> RequiresEnergy(x))", "score": 0}
{"id": "eqasc_train_13048", "prediction": "all x y.((Firecracker(x) & Energy(y)) -> ConvertsToSound(x,y))", "score": 0}
{"id": "eqasc_train_13049", "prediction": "all x.(Song(x) -> (Frightening(x) | Startling(x)))", "score": 0}
{"id": "eqasc_train_13050", "prediction": "all x.(Firecracker(x) -> Startling(x))", "score": 0}
{"id": "eqasc_train_13051", "prediction": "all x.(Fireworks(x) -> (Illegal(x) & Firecrackers(x)))", "score": 0}
{"id": "eqasc_train_13052", "prediction": "all x y.((Firework(x) & ChemicalEnergy(y)) -> ConvertsToSound(x,y))", "score": 0}
{"id": "eqasc_train_13053", "prediction": "all x y.((Firecracker(x) & ChemicalEnergy(y)) -> ConvertsToVibrations(x,y))", "score": 0}
{"id": "eqasc_train_13054", "prediction": "all x y.((Firecracker(x) & ChemicalEnergy(y)) -> ConvertsToVibratingWaves(x,y))", "score": 0}
{"id": "eqasc_train_13055", "prediction": "all x.((SoundWaves(x) & SoundWaves(x)) -> ParticularlyInteresting(x))", "score": 0}
{"id": "eqasc_train_13056", "prediction": "all x y.((Firecracker(x) & ChemicalEnergy(y)) -> ConvertsToWaves(x,y))", "score": 0}
{"id": "eqasc_train_13057", "prediction": "all x.((Object(x) & Black(x)) -> AbsorbsVisibleLight(x))", "score": 0}
{"id": "eqasc_train_13058", "prediction": "all x.(BlackObject(x) -> AbsorbsLight(x))", "score": 0}
{"id": "eqasc_train_13059", "prediction": "all x.(Black(x) -> AbsorbsLight(x))", "score": 0}
{"id": "eqasc_train_13060", "prediction": "all x.(BrightColor(x) -> ReflectsVisibleLight(x))", "score": 0}
{"id": "eqasc_train_13061", "prediction": "all x.(Black(x) -> -BrightColor(x))", "score": 0}
{"id": "eqasc_train_13062", "prediction": "all x.(VisibleLight(x) -> exists y.(Color(y) & Color(z) & Spectrum(x,y)))", "score": 0}
{"id": "eqasc_train_13063", "prediction": "all x.(BlackObject(x) -> AbsorbsAllColorsOfSpectrum(x))", "score": 0}
{"id": "eqasc_train_13064", "prediction": "all x.(BlackObject(x) -> AbsorbsVisibleRaysOrBeams(x))", "score": 0}
{"id": "eqasc_train_13065", "prediction": "all x.((Object(x) & Black(x)) -> AbsorbsPhotons(x))", "score": 0}
{"id": "eqasc_train_13066", "prediction": "all x.(BlackHole(x) -> -EmitsLight(x))", "score": 0}
{"id": "eqasc_train_13067", "prediction": "all x.(BlackHole(x) -> -Visible(x))", "score": 0}
{"id": "eqasc_train_13068", "prediction": "NatureOfLight(Light) -> Energy(Light))", "score": -1}
{"id": "eqasc_train_13069", "prediction": "all x.(Black(x) -> AbsorbsVisibleEnergy(x))", "score": 0}
{"id": "eqasc_train_13070", "prediction": "all x.(Light(x) -> ElectromagneticRadiation(x))", "score": 0}
{"id": "eqasc_train_13071", "prediction": "all x.(Black(x) -> AbsorbsVisibleElectromagneticRadiation(x))", "score": 0}
{"id": "eqasc_train_13072", "prediction": "all x.(BlackObject(x) -> AbsorbsEnergy(x))", "score": 0}
{"id": "eqasc_train_13073", "prediction": "all x.(Black(x) -> AbsorbsVisibleLight(x))", "score": 0}
{"id": "eqasc_train_13074", "prediction": "all x.(BlackObject(x) -> AbsorbsSunlight(x))", "score": 0}
{"id": "eqasc_train_13075", "prediction": "exists x.(Leopard(x) & Melanistic(x) & ProducesBlackFur(x))", "score": 0}
{"id": "eqasc_train_13076", "prediction": "all x.(MelanisticFur(x) -> AbsorbsVisibleLight(x))", "score": 0}
{"id": "eqasc_train_13077", "prediction": "all x.((Object(x) & AbsorbsLightWaves(x) & -ReflectedBack(x)) -> PerceivedAsBlack(x))", "score": 0}
{"id": "eqasc_train_13078", "prediction": "all x.((AbsorbsVisibleLight(x) & -ReflectsVisibleLight(x)) -> Black(x))", "score": 0}
{"id": "eqasc_train_13079", "prediction": "all x.(Rabbit(x) -> (BigBlackBird(x) & Black(x)))", "score": 0}
{"id": "eqasc_train_13080", "prediction": "all x.(Rabbit(x) -> AbsorbsVisibleLight(x))", "score": 0}
{"id": "eqasc_train_13081", "prediction": "all x.(Raven(x) -> Black(x))", "score": 0}
{"id": "eqasc_train_13082", "prediction": "all x.(Raven(x) -> AbsorbsVisibleLight(x))", "score": 0}
{"id": "eqasc_train_13083", "prediction": "all x y.((LightGrain(x) & BlackGrain(y)) -> (Quarz(x) & Coal(y)))", "score": 0}
{"id": "eqasc_train_13084", "prediction": "all x.(Coal(x) -> AbsorbsVisibleLight(x))", "score": 0}
{"id": "eqasc_train_13085", "prediction": "all x.(InfraredSpectrum(x) -> JustNearVisibleLight(x))", "score": 0}
{"id": "eqasc_train_13086", "prediction": "all x.(InfraredSpectrum(x) -> -AbsorbedByBlackObjects(x))", "score": 0}
{"id": "eqasc_train_13087", "prediction": "all x y.((Equator(x) & Pole(y)) -> TemperatureFalls(x,y))", "score": 0}
{"id": "eqasc_train_13088", "prediction": "all x y.((Equator(x) & Pole(y)) -> HeatFalls(x,y))", "score": 0}
{"id": "eqasc_train_13089", "prediction": "all x y z.((HeatAmount(x) & Equator(y) & Pole(z)) -> MeasuredFromTo(x,y,z))", "score": 0}
{"id": "eqasc_train_13090", "prediction": "all x.(Temperature(x) -> Fahrenheit(x))", "score": 0}
{"id": "eqasc_train_13091", "prediction": "all x y z.((Equator(x) & Pole(y) & Equator(z)) -> FallsFromTo(x,y,z))", "score": 0}
{"id": "eqasc_train_13092", "prediction": "all x y.((StrongWinds(x) & Antarctica(y) & Circulates(x,y)) -> IsolatesAtmosphereNearPole(x,y))", "score": 0}
{"id": "eqasc_train_13093", "prediction": "all x y.((Temperature(x) & Equator(y)) -> FallsToAntarctica(x,y))", "score": 0}
{"id": "eqasc_train_13094", "prediction": "all x y z.((HeatEnergy(x) & Equator(y) & Pole(z)) -> FallsFromTo(x,y,z))", "score": 0}
{"id": "eqasc_train_13095", "prediction": "all x.(Sun(x) -> PerpendicularToEquator(x))", "score": 0}
{"id": "eqasc_train_13096", "prediction": "all x y.((Temperature(x) & Pole(y) & SunRain(x,y)) -> FallTowards(x,y))", "score": 0}
{"id": "eqasc_train_13097", "prediction": "all x.(Temperature(x) -> MeasuresHeat(x))", "score": 0}
{"id": "eqasc_train_13098", "prediction": "all x y.((Equator(x) & Pole(y)) -> HeatFalls(x,y))", "score": 0}
{"id": "eqasc_train_13099", "prediction": "all x y z.((WarmWeather(x) & Equator(y) & Pole(z)) -> FallsFromTo(x,y,z))", "score": 0}
{"id": "eqasc_train_13100", "prediction": "all x.(Courtship(x) -> (AttractsMate(x) & Behavior(x)))", "score": 0}
{"id": "eqasc_train_13101", "prediction": "all x.(Animal(x) -> (DisplaysColors(x) & (AttractsMate(x) | ScaresOffPredator(x))))", "score": 0}
{"id": "eqasc_train_13102", "prediction": "all x.(Courtship(x) -> (DisplaysOfColor(x) | ManifestedBy(x,Color)))", "score": 0}
{"id": "eqasc_train_13103", "prediction": "exists x.(Animal(x) & Attracts(x,mate) & HasScent(x))", "score": 0}
{"id": "eqasc_train_13104", "prediction": "all x.(AnimalCourtship(x) -> (InvolvesScent(x) | InvolvesScent(x)))", "score": 0}
{"id": "eqasc_train_13105", "prediction": "all x.(Courtship(x) -> (AttractsPartner(x) & Behavior(x)))", "score": 0}
{"id": "eqasc_train_13106", "prediction": "all x.(Fox(x) -> (Monogomous(x) & MatesForLife(x)))", "score": 0}
{"id": "eqasc_train_13107", "prediction": "all x y.((Fox(x) & Fox(y)) -> CourtshipBehavior(x,y))", "score": 0}
{"id": "eqasc_train_13108", "prediction": "all x y.((Friendship(x) & Mate(y)) -> (Attracts(x,y) & Attracts(x,y)))", "score": 0}
{"id": "eqasc_train_13109", "prediction": "all x.(Courtship(x) -> (Body(x) & IntendedToReproduce(x)))", "score": 0}
{"id": "eqasc_train_13110", "prediction": "all x.(ComplexCourtshipRitual(x) -> PrecedesMating(x))", "score": 0}
{"id": "eqasc_train_13111", "prediction": "all x.(ComplexRitual(x) -> (AttractsMate(x) & Behavior(x)))", "score": 0}
{"id": "eqasc_train_13112", "prediction": "all x.(AssortativeMating(x) -> MatingOfPhenomenologicallySameIndividuals(x))", "score": 0}
{"id": "eqasc_train_13113", "prediction": "all x y.((Courtship(x) & Attracts(x,y)) -> PhenomenologicallySameToSeeker(y))", "score": 0}
{"id": "eqasc_train_13114", "prediction": "all x.(Courtship(x) -> PreceedsMating(x))", "score": 0}
{"id": "eqasc_train_13115", "prediction": "all x y.((Courtship(x) & Reproduction(y)) -> Preceeds(x,y))", "score": 0}
{"id": "eqasc_train_13116", "prediction": "all x y.((FemaleBird(x) & MaleMaterial(y)) -> SecretesEstrogen(x,y))", "score": 0}
{"id": "eqasc_train_13117", "prediction": "all x y.((Bird(x) & Mate(y)) -> SecretesEstrogenToAttract(x,y))", "score": 0}
{"id": "eqasc_train_13118", "prediction": "all x y.((Moose(x) & Autumn(y)) -> AttractsMates(x,y))", "score": 0}
{"id": "eqasc_train_13119", "prediction": "all x y.((Moose(x) & Mate(y)) -> Attracts(x,y))", "score": 0}
{"id": "eqasc_train_13120", "prediction": "all x.(Bird(x) -> (SingsToDefendTerritories(x) & AttractsMates(x)))", "score": 0}
{"id": "eqasc_train_13121", "prediction": "all x y z.((Bird(x) & Territory(y) & Courtship(z)) -> (SingsToDefend(x,y) & SingsFor(x,z)))", "score": 0}
{"id": "eqasc_train_13122", "prediction": "all x.(Echinoderm(x) -> (LacksRespiratorySystems(x) & LacksExcretorySystems(x)))", "score": 3}
{"id": "eqasc_train_13123", "prediction": "all x.(Starfish(x) -> (LacksRespiratorySystems(x) & LacksExcretorySystems(x)))", "score": 1}
{"id": "eqasc_train_13124", "prediction": "all x.(Starfish(x) -> (LacksRespiratorySystems(x) & LacksExcretorySystems(x)))", "score": 1}
{"id": "eqasc_train_13125", "prediction": "all x.(Starfish(x) -> (LacksRespiratorySystems(x) & LacksExcretorySystems(x)))", "score": 1}
{"id": "eqasc_train_13126", "prediction": "exists x.(Deuterostome(x) & LacksRespiratorySystems(x))", "score": 0}
{"id": "eqasc_train_13127", "prediction": "all x.((Cronoid(x) | Blastoid(x)) -> (LacksRespiratorySystems(x) & LacksExcretorySystems(x)))", "score": 0}
{"id": "eqasc_train_13128", "prediction": "all x.((LungMechanics(x) & GasExchange(x)) -> TopicDuringRespiratorySystemStudy(x))", "score": 0}
{"id": "eqasc_train_13129", "prediction": "all x.(Echinoderm(x) -> -HasLungs(x))", "score": 0}
{"id": "eqasc_train_13130", "prediction": "all x.(Deuterostome(x) -> (LacksRespiratorySystems(x) & LacksExcretorySystems(x)))", "score": 0}
{"id": "eqasc_train_13131", "prediction": "all x.(Starfish(x) -> LacksRespiratorySystems(x))", "score": 0}
{"id": "eqasc_train_13132", "prediction": "all x.((MarineCreature(x) | BenthicCreature(x)) -> (LacksRespiratorySystems(x) & LacksExcretorySystems(x)))", "score": 0}
{"id": "eqasc_train_13133", "prediction": "all x.(Influenza(x) -> DiseaseOfRespiratorySystem(x))", "score": 0}
{"id": "eqasc_train_13134", "prediction": "all x.(Echinoderm(x) -> -ContractsInfluenza(x))", "score": 0}
{"id": "eqasc_train_13135", "prediction": "all x y.((Urine(x) & Sphincter(y)) -> LeavesBody(x,y))", "score": 0}
{"id": "eqasc_train_13136", "prediction": "all x.(Urination(x) -> RequiresRelaxationOfSphincterMuscle(x))", "score": 0}
{"id": "eqasc_train_13137", "prediction": "all x y.((Urination(x) & MuscleRelaxation(y)) -> RequiresRelaxation(x,y))", "score": 0}
{"id": "eqasc_train_13138", "prediction": "all x.((EliminatesUrine(x) & Adult(x)) -> VoluntaryProcess(x))", "score": 0}
{"id": "eqasc_train_13139", "prediction": "all x.(Urine(x) -> (LeavesBodyThroughVoluntaryElimination(x) & Adults(x)))", "score": 0}
{"id": "eqasc_train_13140", "prediction": "all x y.((Fluid(x) & Urine(y)) -> EliminatesMetabolicWasteProducts(x,y))", "score": 0}
{"id": "eqasc_train_13141", "prediction": "all x y.((MetabolicWasteProduct(x) & Body(y)) -> (LeavesThroughSphincter(x,y)))", "score": 0}
{"id": "eqasc_train_13142", "prediction": "all x.((Muscle(x) & AroundUrethra(x)) -> SphincterMuscle(x))", "score": 0}
{"id": "eqasc_train_13143", "prediction": "all x y.((Muscle(x) & Urine(y)) -> ControlsUrinationProcess(x,y))", "score": 0}
{"id": "eqasc_train_13144", "prediction": "all x y.((Urination(x) & Urine(y)) -> CarriesFromBottomOfB bladder(x,y))", "score": -1}
{"id": "eqasc_train_13145", "prediction": "all x y z.((Urethra(x) & Urine(y) & Sphincter(z)) -> CarriesFromBottomOfB bladderToSphincterForUrination(x,y,z))", "score": -1}
{"id": "eqasc_train_13146", "prediction": "all x y.((Urine(x) & Muscle(y) & Relaxation(x,y)) -> LeavesBody(x,y))", "score": 0}
{"id": "eqasc_train_13147", "prediction": "all x.((InfrequenteUrination(x) | InfrequentUrination(x)) -> DarkYellow(x))", "score": 0}
{"id": "eqasc_train_13148", "prediction": "all x.((Pee(x) & LeavesBodyInfrequently(x) & ThroughSphincter(x)) -> DarkYellow(x))", "score": 0}
{"id": "eqasc_train_13149", "prediction": "all x y.((B bladder(x) & Urine(y)) -> LeavesBody(y,x))", "score": -1}
{"id": "eqasc_train_13150", "prediction": "all x y.((B bladder(x) & Sphincter(y)) -> EmptiesInUrination(x,y))", "score": -1}
{"id": "eqasc_train_13151", "prediction": "all x.(GlobalWarming(x) -> (GlobalTemperatureIncreases(x) & WorldwideTemperatureIncreases(x)))", "score": 0}
{"id": "eqasc_train_13152", "prediction": "all x.(OzoneDepletion(x) -> CausesGlobalWarming(x))", "score": 0}
{"id": "eqasc_train_13153", "prediction": "all x.(OzoneDepletion(x) -> CausesGlobalTemperatureIncreases(x))", "score": 0}
{"id": "eqasc_train_13154", "prediction": "all x.(GlobalWarming(x) -> HeatIncreases(x))", "score": 0}
{"id": "eqasc_train_13155", "prediction": "all x.(GlobalWarming(x) -> (AverageSeasonalTemperature(x) & WarmerTemperature(x)))", "score": 0}
{"id": "eqasc_train_13156", "prediction": "all x.(GlobalWarming(x) -> (AverageGlobalSeasonalTemperatures(x) & RisesGlobalSeasonalTemperatures(x)))", "score": 0}
{"id": "eqasc_train_13157", "prediction": "all x.(GlobalWarming(x) -> BlamedOnCO2.", "score": -1}
{"id": "eqasc_train_13158", "prediction": "all x.(C02(x) -> TemperatureIncreases(x))", "score": 0}
{"id": "eqasc_train_13159", "prediction": "all x.(MassExtinction(x) -> (OccursInIceAge(x) & OccursInGlobalWarmingPeriod(x)))", "score": 0}
{"id": "eqasc_train_13160", "prediction": "all x.((GlobalTemperature(x) & Increases(x)) -> MassExctinction(x))", "score": 0}
{"id": "eqasc_train_13161", "prediction": "all x.(GlobalWarming(x) -> CausedByCarbonDioxide(x))", "score": 0}
{"id": "eqasc_train_13162", "prediction": "all x.(CarbonDioxide(x) -> CausesGlobalTemperatureIncreases(x))", "score": 0}
{"id": "eqasc_train_13163", "prediction": "all x y.((GlobalWarming(x) & Wildlife(y)) -> Affects(x,y))", "score": 0}
{"id": "eqasc_train_13164", "prediction": "all x y.((Wildlife(x) & WorldwideTemperature(y) & TemperatureIncreases(y)) -> Affects(x,y))", "score": 0}
{"id": "eqasc_train_13165", "prediction": "all x.(Corrosion(x) -> IncreasesWithIncreasingTemperature(x))", "score": 0}
{"id": "eqasc_train_13166", "prediction": "all x y.((GlobalWarming(x) & Corrosion(y)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_train_13167", "prediction": "all x.((GlobalTemperatureIncrease(x) & ClimateChange(x)) -> PartOf(x,ClimateChange))", "score": 0}
{"id": "eqasc_train_13168", "prediction": "all x y.((EarthSurface(x) & Sun(y) & UnequalHeating(x,y)) -> GlobalWindPatterns(x))", "score": 0}
{"id": "eqasc_train_13169", "prediction": "all x.(UnevenAbsorptionOfRadiation(x) -> UnequalHeatingOfEarthSurface(x))", "score": 0}
{"id": "eqasc_train_13170", "prediction": "all x.((UnequalAbsorptionOfRadiation(x) & EarthSurface(x)) -> GlobalWindPatterns(x))", "score": 0}
{"id": "eqasc_train_13171", "prediction": "all x.(Wind(x) -> (Air(x) & MovesAcrossSurface(x)))", "score": 0}
{"id": "eqasc_train_13172", "prediction": "all x.(UnevenHeatingOfEarthsCrust(x) -> WindCanCause(x))", "score": 0}
{"id": "eqasc_train_13173", "prediction": "all x.(UnequalAbsorptionOfRadiation(x) -> GlobalWindPatterns(x))", "score": 0}
{"id": "eqasc_train_13174", "prediction": "all x.((GeographicArea(x) & ChangesInGlobalWindPatterns(x)) -> CanEvolveIntoDesert(x))", "score": 0}
{"id": "eqasc_train_13175", "prediction": "all x y.((GeographicArea(x) & UnevenHeating(x,y) & EarthSurface(y)) -> CanEvolveIntoDeserts(x))", "score": 0}
{"id": "eqasc_train_13176", "prediction": "all x.((PatternOfTropicalWind(x) & PatternOfOceanCirculation(x)) -> KeyElementOfGlobalCirculation(x))", "score": 0}
{"id": "eqasc_train_13177", "prediction": "all x y.((EarthSurface(x) & Sun(y)) -> (UnequalHeating(x,y) & CausesTropicalWind(x) & CausesOceanCirculation(x)))", "score": 0}
{"id": "eqasc_train_13178", "prediction": "all x.(GlobalWindPattern(x) -> (UnequalAbsorptionOfRadiation(x) & CausedBy(x,GlobalWindPattern)))", "score": 0}
{"id": "eqasc_train_13179", "prediction": "all x y.((Sun(x) & SunRays(y)) -> CausesTemperatureDifferences(x,y))", "score": 0}
{"id": "eqasc_train_13180", "prediction": "all x y.((DifferencesInTemperature(x) & GlobalWindPattern(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_train_13181", "prediction": "all x y.((WindBelt(x) & AtlanticOcean(y)) -> (TradeWinds(x) | PrevalenceWesterlies(x)))", "score": 0}
{"id": "eqasc_train_13182", "prediction": "all x y z.((EarthSurface(x) & Sun(y) & UnevenHeating(x,y) & EarthSurface(z)) -> Westerlies(x))", "score": 0}
{"id": "eqasc_train_13183", "prediction": "all x.((Wind(x) & PolarEasterly(x)) -> Wind(x))", "score": 0}
{"id": "eqasc_train_13184", "prediction": "all x y z.((EarthSurface(x) & Sun(y) & EarthSurface(z) & UnevenHeating(x,y,z)) -> PolarEasterlies(x))", "score": 0}
{"id": "eqasc_train_13185", "prediction": "all x y.((LargeCyclonicSystem(x) & MiddleLatitude(y)) -> InfluencesWindPatterns(x,y))", "score": 0}
{"id": "eqasc_train_13186", "prediction": "all x y.((EarthSurface(x) & Sun(y) & UnequalHeating(x,y)) -> LargeCyclonicSystem(x,y))", "score": 0}
{"id": "eqasc_train_13187", "prediction": "all x.(Wind(x) -> DeterminesGlobalWeatherPatterns(x))", "score": 0}
{"id": "eqasc_train_13188", "prediction": "all x y.((UnequalHeating(x,y) & EarthSurface(y)) -> DeterminesGlobalWeatherPatterns(x))", "score": 0}
{"id": "eqasc_train_13189", "prediction": "all x y.((LowLatitude(x) & HighLatitude(y)) -> ReceivesMoreHeatDuringDay(x,y))", "score": 0}
{"id": "eqasc_train_13190", "prediction": "all x y.((DifferencesInSolarWarming(x) & Latitude(y) & DayOnEarthSurface(x,y)) -> InfluencesGlobalWindPatterns(x))", "score": 0}
{"id": "eqasc_train_13191", "prediction": "all x.(Warmer(x) -> (SunHeatStronger(x) & CloserToEquator(x)))", "score": 0}
{"id": "eqasc_train_13192", "prediction": "all x y z.((Earth(x) & EquatorialRegion(y) & HigherLatitude(z)) -> (DifferencesInTemperature(x,y,z) & ShapesGlobalWindPatterns(x)))", "score": 0}
{"id": "eqasc_train_13193", "prediction": "all x y.((Wind(x) & WaterApplicationPattern(y)) -> CausesDistortion(x,y))", "score": 0}
{"id": "eqasc_train_13194", "prediction": "all x y z.((UnequalHeating(x) & EarthSurface(y) & Sun(z)) -> CausesDistortionOfWaterApplicationPattern(x))", "score": 0}
{"id": "eqasc_train_13195", "prediction": "all x.((Wind(x) & Winds(x,74)) -> Hurricane(x))", "score": 0}
{"id": "eqasc_train_13196", "prediction": "all x y.((Hurricane(x) & EarthSurface(y) & Sun(z)) -> UnevenHeating(x,y,z))", "score": 0}
{"id": "eqasc_train_13197", "prediction": "all x.(Earth(x) -> PlanetInSolarSystem(x))", "score": 0}
{"id": "eqasc_train_13198", "prediction": "all x y.((Planet(x) & Sun(y) & UnevenHeating(x,y)) -> GlobalWindPatterns(x))", "score": 0}
{"id": "eqasc_train_13199", "prediction": "exists x.(TouchReceptor(x) & (SensesTemperatureDifference(x) | SensitsPainDifference(x)))", "score": 0}
{"id": "eqasc_train_13200", "prediction": "all x y.((Student(x) & NerveReceptor(y)) -> LocatesInSkin(x,y))", "score": 0}
{"id": "eqasc_train_13201", "prediction": "all x y.((NervousReceptor(x) & Skin(y)) -> (SensesTemperature(x) & SensesesPain(x)))", "score": 0}
{"id": "eqasc_train_13202", "prediction": "all x.(TouchReceptor(x) -> Mechanoreceptor(x))", "score": 0}
{"id": "eqasc_train_13203", "prediction": "exists x.(Mechanoreceptor(x) & SensePain(x))", "score": 0}
{"id": "eqasc_train_13204", "prediction": "exists x.(TouchReceptor(x) & SenseDifferencesInHeat(x))", "score": 0}
{"id": "eqasc_train_13205", "prediction": "exists x.(Mechanoreceptor(x) & SensitsTemperatureDifferences(x))", "score": 0}
{"id": "eqasc_train_13206", "prediction": "exists x.(TouchReceptor(x) & (SensesHeat(x) | SenseSensesPain(x)))", "score": 0}
{"id": "eqasc_train_13207", "prediction": "all x.(Disc(x) -> TouchReceptor(x))", "score": 0}
{"id": "eqasc_train_13208", "prediction": "all x.(Disc(x) -> (SensesTemperatureDifference(x) | SenseSensesPainDifference(x)))", "score": 0}
{"id": "eqasc_train_13209", "prediction": "all x.((Skin(x) & Painful(x)) -> SeekMedicalAttention(x))", "score": 0}
{"id": "eqasc_train_13210", "prediction": "all x.((SkinIsHas(x) & TouchReceptorsSenseDifferences(x)) -> IllHas(x))", "score": 0}
{"id": "eqasc_train_13211", "prediction": "all x.(Mechanoreceptor(x) -> (SensesDifferencesInTemperature(x) | SenseDifferencesInPain(x)))", "score": 0}
{"id": "eqasc_train_13212", "prediction": "all x.(TouchReceptor(x) -> (FreeNervousEnding(x) | FreeNervousEnding(x)) & SurroundedByCapsule(x)))", "score": -1}
{"id": "eqasc_train_13213", "prediction": "exists x.(NervousEnding(x) & SensorsDifferencesInTemperature(x))", "score": 0}
{"id": "eqasc_train_13214", "prediction": "all x.(Bird(x) -> EndothermicTetrapodVertebrate(x))", "score": 2}
{"id": "eqasc_train_13215", "prediction": "all x.(Bird(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_train_13216", "prediction": "all x.((Bird(x) | Mammal(x)) -> Endothermic(x))", "score": 1}
{"id": "eqasc_train_13217", "prediction": "all x.(Mammal(x) -> Endothermic(x))", "score": 1}
{"id": "eqasc_train_13218", "prediction": "all x.(Leg(x) -> Tetrapod(x))", "score": 0}
{"id": "eqasc_train_13219", "prediction": "all x.(Bird(x) -> (VertebrateEndotherm(x) & HasLegs(x)))", "score": 0}
{"id": "eqasc_train_13220", "prediction": "all x.(Penguin(x) -> Bird(x))", "score": 1}
{"id": "eqasc_train_13221", "prediction": "all x.(Penguin(x) -> (EndothermicTetrapodVertebrate(x) & EndothermicTetrapodVertebrate(x)))", "score": 1}
{"id": "eqasc_train_13222", "prediction": "all x.(Crow(x) -> Bird(x))", "score": 1}
{"id": "eqasc_train_13223", "prediction": "all x.(Crow(x) -> (EndothermicTetrapodVertebrate(x) & EndothermicTetrapodVertebrate(x)))", "score": 1}
{"id": "eqasc_train_13224", "prediction": "all x.(EndothermicTetrapodVertebrates(x) -> HasFeathers(x))", "score": 0}
{"id": "eqasc_train_13225", "prediction": "all x.(Flamingo(x) -> FunnyLookingBird(x))", "score": 0}
{"id": "eqasc_train_13226", "prediction": "all x.(Flamingo(x) -> (FunnyLookingEndothermicTetrapodVertebrate(x) & Vertebrates(x)))", "score": 0}
{"id": "eqasc_train_13227", "prediction": "all x.(Bird(x) -> (EndothermicVertebrate(x) & HasLegs(x)))", "score": 0}
{"id": "eqasc_train_13228", "prediction": "exists x.(Bird(x) & Fly(x) & exists y.(Bird(y) & Swim(y)) & all z.(Bird(z) -> HasFeathers(z)))", "score": 0}
{"id": "eqasc_train_13229", "prediction": "exists x.(AviarySpecies(x) & Fly(x) & Swim(x) & EndothermicTetrapodVertebrate(x))", "score": 0}
{"id": "eqasc_train_13230", "prediction": "all x.(Bird(x) -> (EndothermicTetrapod(x) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_train_13231", "prediction": "all x.(HuntedVulture(x) -> SilentBird(x))", "score": 0}
{"id": "eqasc_train_13232", "prediction": "all x.(HuntedVulture(x) -> EndothermicTetrapodVertebrate(x))", "score": 0}
{"id": "eqasc_train_13233", "prediction": "all x.((Animal(x) & ClassAves(x)) -> EndothermicTetrapodVertebrate(x))", "score": 0}
{"id": "eqasc_train_13234", "prediction": "all x.(SoilErosion(x) -> (SoilLossThroughWind(x) & Wind(x)))", "score": 0}
{"id": "eqasc_train_13235", "prediction": "all x.(Wind(x) -> MovingAir(x))", "score": 0}
{"id": "eqasc_train_13236", "prediction": "all x.(SoilErosion(x) -> (SoilLoss(x) & MovesAir(x)))", "score": 0}
{"id": "eqasc_train_13237", "prediction": "all x.(RainForest(x) -> (PreventsSoilErosion(x) & PreventsWaterPollution(x)))", "score": 0}
{"id": "eqasc_train_13238", "prediction": "all x y.((RainForest(x) & Wind(y)) -> ReducesSoilLoss(x,y))", "score": 0}
{"id": "eqasc_train_13239", "prediction": "all x y.((Hurricane(x) & SoilLoss(y)) -> SoilErosion(x,y))", "score": 0}
{"id": "eqasc_train_13240", "prediction": "all x y.((Wind(x) & Soil(y)) -> Erodes(x,y))", "score": 0}
{"id": "eqasc_train_13241", "prediction": "all x.(Erosion(x) -> DamagesThinSoil(x))", "score": 0}
{"id": "eqasc_train_13242", "prediction": "all x y.((Wind(x) & ThinSoil(y)) -> CausesDamage(x,y))", "score": 0}
{"id": "eqasc_train_13243", "prediction": "all x.(Erosion(x) -> ContributesToDeteriorationOfSoilQuality(x))", "score": 0}
{"id": "eqasc_train_13244", "prediction": "all x y.((Wind(x) & SoilQuality(y)) -> Deterioration(x,y))", "score": 0}
{"id": "eqasc_train_13245", "prediction": "all x y.((Hurricane(x) & SoilLoss(x)) -> SoilErosion(y))", "score": 0}
{"id": "eqasc_train_13246", "prediction": "all x.(SoilErosion(x) -> LeadingCauseOfWaterPollution(x))", "score": 0}
{"id": "eqasc_train_13247", "prediction": "all x.((SoilLossThroughWind(x) & WaterPollution(x)) -> LeadingCause(x,UnitedStates))", "score": 0}
{"id": "eqasc_train_13248", "prediction": "all x.(SoilErosion(x) -> SeriousProblemInProductionAgriculture(x))", "score": 0}
{"id": "eqasc_train_13249", "prediction": "all x.(Wind(x) -> CanCauseSeriousProductionAgricultureProblems(x))", "score": 0}
{"id": "eqasc_train_13250", "prediction": "all x.(Plant(x) -> HasSpecializedReproductiveOrgans(x))", "score": 0}
{"id": "eqasc_train_13251", "prediction": "all x.((VenusFlytrap(x) & CarnivorousPlant(x)) -> Knows(x))", "score": 0}
{"id": "eqasc_train_13252", "prediction": "all x.(VenusFlytrap(x) -> HasSpecializedReproductiveOrgans(x))", "score": 0}
{"id": "eqasc_train_13253", "prediction": "all x.(Bamboo(x) -> HasSpecializedReproductiveOrgans(x))", "score": 0}
{"id": "eqasc_train_13254", "prediction": "all x.(Plant(x) -> (HasFlowers(x) & ForReproduction(x)))", "score": 0}
{"id": "eqasc_train_13255", "prediction": "all x.(Plant(x) -> ProducesFlowersForReproduction(x))", "score": 0}
{"id": "eqasc_train_13256", "prediction": "all x.(Flower(x) -> SpecializedReproductiveOrgan(x))", "score": 0}
{"id": "eqasc_train_13257", "prediction": "all x.(Tissue(x) -> Organ(x))", "score": 0}
{"id": "eqasc_train_13258", "prediction": "all x.(Plant(x) -> HasSpecializedReproductiveTissues(x))", "score": 0}
{"id": "eqasc_train_13259", "prediction": "all x.(Daisy(x) -> (HasSpecializedReproductiveOrgans(x) & HasSpecializedReproductiveOrgans(x)))", "score": 0}
{"id": "eqasc_train_13260", "prediction": "all x.(Bush(x) -> HasSpecializedReproductiveOrgans(x))", "score": 0}
{"id": "eqasc_train_13261", "prediction": "all x.(Plant(x) -> (SpecializedRoutes(x) & CreatesYoung(x)))", "score": 0}
{"id": "eqasc_train_13262", "prediction": "all x.(Flower(x) -> SpecializedOrgan(x))", "score": 0}
{"id": "eqasc_train_13263", "prediction": "all x y.((Plant(x) & Animal(y)) -> SimilarTo(x,y))", "score": 0}
{"id": "eqasc_train_13264", "prediction": "all x.(Animal(x) -> HasSpecializedReproductiveOrgans(x))", "score": 0}
{"id": "eqasc_train_13265", "prediction": "(RelatedPlants(HolyBasil(HolyBasil) & RelatedPlant(BushBasil))", "score": -1}
{"id": "eqasc_train_13266", "prediction": "all x.(BussBasil(x) -> HasSpecializedReproductiveOrgans(x))", "score": 0}
{"id": "eqasc_train_13267", "prediction": "all x.(Tree(x) -> (HasSpecializedReproductiveOrgans(x) & HasReproductiveOrgans(x)))", "score": 0}
{"id": "eqasc_train_13268", "prediction": "all x y.((LightBulb(x) & DarkDark(y)) -> UsedForSayingIn(x,y))", "score": 0}
{"id": "eqasc_train_13269", "prediction": "all x.(IncandescentLightBulb(x) -> (UsesTungstenFilm(x) & SealedInsideGlassBulb(x)))", "score": 0}
{"id": "eqasc_train_13270", "prediction": "all x.((TungstenFilm(x) & SealedInGlassBulb(x)) -> UsedForSeeingInDark(x))", "score": 0}
{"id": "eqasc_train_13271", "prediction": "all x.(Human(x) -> -SeesClearlyInDark(x))", "score": 0}
{"id": "eqasc_train_13272", "prediction": "all x y.((LightBulb(x) & Human(y)) -> HelpsSee(x,y))", "score": 0}
{"id": "eqasc_train_13273", "prediction": "all x.(HeatingFilm(x) -> HelpfulForSeeingInDark(x))", "score": 0}
{"id": "eqasc_train_13274", "prediction": "all x y.((Light(x) & LightBulb(y)) -> EmittedBy(x,y))", "score": 0}
{"id": "eqasc_train_13275", "prediction": "all x.(Light(x) -> RequiresForSeasing(x))", "score": 0}
{"id": "eqasc_train_13276", "prediction": "all x.((StumblingInDarkTunnels(x) & Basement(x)) -> FindsControlRoom(x))", "score": 0}
{"id": "eqasc_train_13277", "prediction": "all x.(LightBulb(x) -> AvoidsStumblingInBasins(x))", "score": 0}
{"id": "eqasc_train_13278", "prediction": "all x.(Electricity(x) -> (RunsAppliances(x) & IlluminatesLightBulbs(x)))", "score": 0}
{"id": "eqasc_train_13279", "prediction": "all x.(Electricity(x) -> UsedForSeeingInDark(x))", "score": 0}
{"id": "eqasc_train_13280", "prediction": "all x y.((Light(x) & Dark(y)) -> CanBeUsedForSeeing(x,y))", "score": 0}
{"id": "eqasc_train_13281", "prediction": "all x.((Evening(x) & ArrivedQuickly(x) & AlmostTooDarkForOldManToSeeWhereToStepSafely(x)) -> ArrivedQuickly(x))", "score": 0}
{"id": "eqasc_train_13282", "prediction": "all x.(LightBulb(x) -> UsedForSeatingSafely(x))", "score": 0}
{"id": "eqasc_train_13283", "prediction": "all x.(ElectricLightBulb(x) -> LightSource(x))", "score": 0}
{"id": "eqasc_train_13284", "prediction": "all x y.((LightSource(x) & Dark(y)) -> UsedForSeeing(x,y))", "score": 0}
{"id": "eqasc_train_13285", "prediction": "all x.(Looks(x) -> Sees(x))", "score": 0}
{"id": "eqasc_train_13286", "prediction": "all x.(LightBulb(x) -> UsedForLookingInDark(x))", "score": 0}
{"id": "eqasc_train_13287", "prediction": "all x y.((IncandescentLight(x) & MetalFilm(y)) -> HeatsAndResistsLightInsideGlassBulb(x,y))", "score": 0}
{"id": "eqasc_train_13288", "prediction": "all x y.((IncandescentLight(x) & MetalFilm(y) & Heating(x,y)) -> UsedForSeeingInDark(x))", "score": 0}
{"id": "eqasc_train_13289", "prediction": "all x y.((Electricity(x) & LightBulb(y)) -> (ConvertsTo(x,y) & Heats(x,y)))", "score": 0}
{"id": "eqasc_train_13290", "prediction": "all x y.((Electricity(x) & Dark(y)) -> UsedToSee(x,y))", "score": 0}
{"id": "eqasc_train_13291", "prediction": "(all x.(Winter(x) -> LongNights(x)) & all y.(Winter(y) -> DarkNights(y)))", "score": 0}
{"id": "eqasc_train_13292", "prediction": "all x.(LightBulb(x) -> UsedForSeenAtNight(x))", "score": 0}
{"id": "eqasc_train_13293", "prediction": "all x.(Night(x) | Darkness(x)) -> SpiritualDarkness(x))", "score": -1}
{"id": "eqasc_train_13294", "prediction": "all x y.((LightBulb(x) & Night(y)) -> UsedForSeenAt(x,y))", "score": 0}
{"id": "eqasc_train_13295", "prediction": "all x.(EmittedLight(x) -> UsedForSeeingInDark(x))", "score": 0}
{"id": "eqasc_train_13296", "prediction": "all x.(Darkness(x) -> AbsenceOfLight(x))", "score": 0}
{"id": "eqasc_train_13297", "prediction": "all x y.((LightBulb(x) & AbsenceOfLight(y)) -> UsedForSayingInAbsenceOfLight(x,y))", "score": 0}
{"id": "eqasc_train_13298", "prediction": "all x y.((ChangeInPh(x) & Soil(y)) -> CanCausePlantsToDie(x,y))", "score": 0}
{"id": "eqasc_train_13299", "prediction": "all x.((Plant(x) & Die(x)) -> (Decays(x) & LeavesMineralsInSoil(x)))", "score": 0}
{"id": "eqasc_train_13300", "prediction": "all x y.((ChangeInPh(x) & Soil(y)) -> (CausesPlantDecay(x,y) & LeavesMineralsForFuturePlants(x,y)))", "score": 0}
{"id": "eqasc_train_13301", "prediction": "all x y.((Plant(x) & Soil(y) & BalancedSoil(x,y)) -> KeepsAlive(x,y))", "score": 0}
{"id": "eqasc_train_13302", "prediction": "all x.(Sulfur(x) -> LowersPHInSoil(x))", "score": 0}
{"id": "eqasc_train_13303", "prediction": "all x.(Sulfur(x) -> CanCausePlantsToDie(x))", "score": 0}
{"id": "eqasc_train_13304", "prediction": "all x y.((SoilPh(x) & SoilPh(y)) -> (ChangesInPh(x,y) & RobsHumansOfNutrients(x)))", "score": 0}
{"id": "eqasc_train_13305", "prediction": "all x y.((Sulfur(x) & Plant(y)) -> CanCausePlantDeath(x,y))", "score": 0}
{"id": "eqasc_train_13306", "prediction": "all x y.((Compost(x) & Soil(y)) -> BalancesSoil(x,y))", "score": 0}
{"id": "eqasc_train_13307", "prediction": "all x y.((AddsSulfer(x) & Soil(y)) -> CanCausePlantsToDie(x,y))", "score": 0}
{"id": "eqasc_train_13308", "prediction": "all x.(Famine(x) -> (ExtremeShortageOfFood(x) & CausesDeathOfStarvation(x)))", "score": 0}
{"id": "eqasc_train_13309", "prediction": "all x.((ChangeInPh(x) & Soil(x)) -> CausesExtremeShortagesOfFood(x))", "score": 0}
{"id": "eqasc_train_13310", "prediction": "all x y.((BlowingAirIntoWhistle(x) & Whistle(y)) -> CausesAirToVibrateInside(x,y))", "score": 0}
{"id": "eqasc_train_13311", "prediction": "all x.(Sound(x) -> CausedByVibrationsInAir(x))", "score": 0}
{"id": "eqasc_train_13312", "prediction": "all x.((BlowsIntoWhistle(x) & CausesSound(x)) -> BlowingIntoWhistle(x))", "score": 0}
{"id": "eqasc_train_13313", "prediction": "all x y.((BlowingAirIntoWhistle(x) & Whistle(y)) -> CausesSound(x,y))", "score": 0}
{"id": "eqasc_train_13314", "prediction": "all x y.((Wind(x) & FreshAir(y)) -> BlowsIn(x,y))", "score": 0}
{"id": "eqasc_train_13315", "prediction": "all x y.((Wind(x) & Whistle(y) & GoesThrough(x,y)) -> CausesVibrationsIn(x,y))", "score": 0}
{"id": "eqasc_train_13316", "prediction": "all x.((Persists(x) & BlotWhistle(x)) -> BlotMouthpiece(x))", "score": 0}
{"id": "eqasc_train_13317", "prediction": "all x.((BlowsAir(x) & CausesVibration(x)) -> LoudNoise(x))", "score": 0}
{"id": "eqasc_train_13318", "prediction": "all x.(PipeOrgan(x) -> (VibratingColumnsOfAirInsidePipes(x) & SoundSource(x)))", "score": 0}
{"id": "eqasc_train_13319", "prediction": "all x y.((BlowingAirIntoWhistle(x) & Whistle(y)) -> CausesSoundSource(x,y))", "score": 0}
{"id": "eqasc_train_13320", "prediction": "all x.(RefereesWhistleBlows(x) -> RefereesWhistle(x))", "score": 0}
{"id": "eqasc_train_13321", "prediction": "all x y.((Referee(x) & Air(y)) -> CanBlow(x,y))", "score": 0}
{"id": "eqasc_train_13322", "prediction": "all x y.((Object(x) & MovesOrVibrates(x)) -> AirMoleculesAround(y,x))", "score": 0}
{"id": "eqasc_train_13323", "prediction": "all x y z.((BlowsAirIntoWhistle(x) & Whistle(y) & AirMovesInside(z)) -> CausesInside(x,y,z))", "score": 0}
{"id": "eqasc_train_13324", "prediction": "all x y.((BlowingAirIntoWhistle(x) & Whistle(y)) -> CreatesSounds(x,y))", "score": 0}
{"id": "eqasc_train_13325", "prediction": "all x.(Sound(x) -> Vibrations(x))", "score": 0}
{"id": "eqasc_train_13326", "prediction": "all x.(Whistle(x) -> (UsesAir(x) & MakesSound(x)))", "score": 0}
{"id": "eqasc_train_13327", "prediction": "all x.(Ocarina(x) -> MultipleToneWhistle(x))", "score": 0}
{"id": "eqasc_train_13328", "prediction": "all x y.((Ocarina(x) & Ocarina(y)) -> BlowingAirInto(x,y))", "score": 0}
{"id": "eqasc_train_13329", "prediction": "all x.(Air(x) -> ContainsOxygen(x))", "score": 0}
{"id": "eqasc_train_13330", "prediction": "all x y.((BlowsOxygenIntoWhistle(x) & Whistle(y)) -> CausesOxygenToVibrateInside(x,y))", "score": 0}
{"id": "eqasc_train_13331", "prediction": "all x y.((Chromosome(x) & Cell(y)) -> (FormOfGeneticMaterial(x,y) & CellDivision(y)))", "score": 0}
{"id": "eqasc_train_13332", "prediction": "all x y z.((DNA(x) & Cell(y) & Nucleus(z)) -> (GeneticMaterial(x,y) & FoundIn(x,z)))", "score": 0}
{"id": "eqasc_train_13333", "prediction": "all x.(DNA(x) -> PartOfGeneticMaterial(x))", "score": 0}
{"id": "eqasc_train_13334", "prediction": "all x y.((Chromosome(x) & Cell(y) & Mitosis(y)) -> GeneticMaterial(x,y))", "score": 0}
{"id": "eqasc_train_13335", "prediction": "all x y.((Chromosome(x) & Mitosis(y)) -> GeneticMaterial(x,y))", "score": 0}
{"id": "eqasc_train_13336", "prediction": "all x y.((Chromosome(x) & Cell(y) & Mitosis(y)) -> GeneticMaterial(x,y))", "score": 0}
{"id": "eqasc_train_13337", "prediction": "all x y.((Chromosome(x) & Cell(y) & Mitosis(y)) -> GeneticMaterial(x,y))", "score": 0}
{"id": "eqasc_train_13338", "prediction": "all x.(Microtubule(x) -> (FormsPartOfMitoticSpindle(x) & MovesChromosomes(x)))", "score": 0}
{"id": "eqasc_train_13339", "prediction": "all x y.((Microtubule(x) & Cell(y)) -> MovesGeneticMaterial(x,y))", "score": 0}
{"id": "eqasc_train_13340", "prediction": "all x y.((DNACondenses(x) & Cell(y) & CellDivision(y)) -> FormsGeneticMaterial(x,y))", "score": 0}
{"id": "eqasc_train_13341", "prediction": "all x y.((Chromosome(x) & Cell(y) & Mitosis(y)) -> GeneticMaterial(x,y))", "score": 0}
{"id": "eqasc_train_13342", "prediction": "all x y.((Freezing(x) & Solid(y)) -> CausesToForm(x,y))", "score": 1}
{"id": "eqasc_train_13343", "prediction": "all x.(LiquidFreezesToSolid(x))", "score": 0}
{"id": "eqasc_train_13344", "prediction": "all x y.((Liquid(x) & Solid(y)) -> TurnsTo(x,y))", "score": 0}
{"id": "eqasc_train_13345", "prediction": "all x.(Freezing(x) -> PhysicalChange(x))", "score": 0}
{"id": "eqasc_train_13346", "prediction": "all x.(PhysicalChange(x) -> CausesSolidFormation(x))", "score": 0}
{"id": "eqasc_train_13347", "prediction": "all x y.((Freezing(x) & Ice(y)) -> CausesFormation(x,y))", "score": 0}
{"id": "eqasc_train_13348", "prediction": "all x.(Iceberg(x) -> SolidWater(x))", "score": 0}
{"id": "eqasc_train_13349", "prediction": "all x.(Iceberg(x) -> FreezingCold(x))", "score": 0}
{"id": "eqasc_train_13350", "prediction": "all x.(LowerTemperatureThreshold(x) -> Freezing(x))", "score": 1}
{"id": "eqasc_train_13351", "prediction": "all x y.((LowerTemperatureThreshold(x) & Solid(y)) -> CausesToForm(x,y))", "score": 1}
{"id": "eqasc_train_13352", "prediction": "(Solid(Ice) & Solid(Ice))", "score": 0}
{"id": "eqasc_train_13353", "prediction": "all x y.((Freezing(x) & Ice(y)) -> CausesFormation(x,y))", "score": 0}
{"id": "eqasc_train_13354", "prediction": "all x.((WaterMolecules(x) & InsideCellFreeze(x)) -> OccupyLargerSpace(x))", "score": 0}
{"id": "eqasc_train_13355", "prediction": "all x.((WaterMolecule(x) & OccupyLargerSpace(x)) -> Solidify(x))", "score": 0}
{"id": "eqasc_train_13356", "prediction": "all x y.((FreezingWater(x) & Ice(y)) -> CausesToForm(x,y))", "score": 0}
{"id": "eqasc_train_13357", "prediction": "all x.(Water(x) -> FreezesAt32Degrees(x))", "score": 0}
{"id": "eqasc_train_13358", "prediction": "all x.((WaterTemperature(x) & DropsTo32Degrees(x)) -> FormsSolid(x))", "score": 0}
{"id": "eqasc_train_13359", "prediction": "all x y.((Freezing(x) & Water(y)) -> FormsIceFrom(x,y))", "score": 0}
{"id": "eqasc_train_13360", "prediction": "all x.((TornantBehavior(x) & Animal(y)) -> CausesFightOrFlightResponse(x,y))", "score": 0}
{"id": "eqasc_train_13361", "prediction": "all x.(Stress(x) -> (TriggersFightResponse(x) | TriggersFlightResponse(x)))", "score": 0}
{"id": "eqasc_train_13362", "prediction": "all x y.((TorningBehavior(x) & Animal(y)) -> TriggersStress(x,y))", "score": 0}
{"id": "eqasc_train_13363", "prediction": "all x.(BasicSurvival(x) -> (Fight(x) | Flight(x)))", "score": 0}
{"id": "eqasc_train_13364", "prediction": "all x y.((TornantBehavior(x) & Animal(y)) -> CausesBasicSurvivalResponse(x,y))", "score": 0}
{"id": "eqasc_train_13365", "prediction": "all x.(Fighting(x) -> (LeadsToBrawls(x) & SignificantInjury(x)))", "score": 0}
{"id": "eqasc_train_13366", "prediction": "all x.(TorningBehavior(x) -> CausesInjury(x))", "score": 0}
{"id": "eqasc_train_13367", "prediction": "all x.((Disaster(x) & ThreatensHumans(x)) -> ThreatensAnimals(x))", "score": 0}
{"id": "eqasc_train_13368", "prediction": "all x y.((Human(x) | Animal(y)) -> (FightOrFlightResponse(x,y)))", "score": 0}
{"id": "eqasc_train_13369", "prediction": "all x.((TrueFalseFight(x) | Flight(x)) -> ExtremeResponseToStress(x))", "score": 0}
{"id": "eqasc_train_13370", "prediction": "all x y.((TorningBehavior(x) & Animal(y)) -> CausesStress(x,y))", "score": 0}
{"id": "eqasc_train_13371", "prediction": "all x.(Fear(x) -> (CausesAdrenalinToSurge(x) & PartOfFightOrFlightResponse(x)))", "score": 0}
{"id": "eqasc_train_13372", "prediction": "all x y.((TorningBehavior(x) & Animal(y)) -> CausesAdrenalineSurge(x,y))", "score": 0}
{"id": "eqasc_train_13373", "prediction": "all x y.((Rabbit(x) & Rabbit(y)) -> Threatened(x,y))", "score": 0}
{"id": "eqasc_train_13374", "prediction": "all x y.((BehaviorPattern(x) & Animal(y)) -> CausesFightOrFlightResponse(x,y))", "score": 0}
{"id": "eqasc_train_13375", "prediction": "all x.(Adrenaline(x) -> (ForEmergencyUse(x) & -ForFightAndFlight(x)))", "score": 0}
{"id": "eqasc_train_13376", "prediction": "all x y.((Adrenaline(x) & Threat(y)) -> ResponseTo(x,y))", "score": 0}
{"id": "eqasc_train_13377", "prediction": "all x.(BehaviorModification(x) -> UnlearningBehaviorOrAction(x))", "score": 0}
{"id": "eqasc_train_13378", "prediction": "all x.(TorningAction(x) -> (CausesFight(x) | CausesFlightResponse(x)))", "score": 0}
{"id": "eqasc_train_13379", "prediction": "all x y.((Hair(x) & Heart(y)) -> (StandsOnEnd(x) & Races(y) & (Fight(y) | FlightHormonesFlood(y))))", "score": 0}
{"id": "eqasc_train_13380", "prediction": "all x y z.((ThreateningBehavior(x) & Heart(y) & Hormones(z)) -> (CausesRace(y,x) & FloodsBody(z,y)))", "score": 0}
{"id": "eqasc_train_13381", "prediction": "all x.(Animal(x) -> AnimaliaKingdom(x))", "score": 0}
{"id": "eqasc_train_13382", "prediction": "all x.(TorningBehavior(x) -> (CausesFightOrFlightResponse(x) & AnimaliaKingdom(x)))", "score": 0}
{"id": "eqasc_train_13383", "prediction": "all x.((ThreateningBehavior(x) & Goat(y)) -> CausesFightOrFlightResponse(x,y))", "score": 0}
{"id": "eqasc_train_13384", "prediction": "all x.(Violence(x) -> ThreatensEveryone(x))", "score": 0}
{"id": "eqasc_train_13385", "prediction": "all x.(Violence(x) -> (CausesFightOrFlightResponse(x)))", "score": 0}
{"id": "eqasc_train_13386", "prediction": "all x.(Dog(x) -> HighlySocialAnimal(x))", "score": 0}
{"id": "eqasc_train_13387", "prediction": "all x.((TornantBehavior(x) & Dog(y)) -> CausesFightOrFlightResponse(x,y))", "score": 0}
{"id": "eqasc_train_13388", "prediction": "all x.((Pony(x) & FeelsThreatened(x)) -> CanRespondWithAggressiveBehavior(x))", "score": 0}
{"id": "eqasc_train_13389", "prediction": "all x.(AggressiveBehavior(x) -> CausesFightOrFlightResponses(x))", "score": 0}
{"id": "eqasc_train_13390", "prediction": "all x.((ThreateningBehavior(x) & CausesAdrenalineToSurge(x)) -> CausesAdrenalineToSurge(x))", "score": 0}
{"id": "eqasc_train_13391", "prediction": "all x.((Food(x) & -UsedImmediatelyForEnergy(x)) -> StoredForFutureUse(x))", "score": 0}
{"id": "eqasc_train_13392", "prediction": "all x.(BodyFat(x) -> StoredEnergy(x))", "score": 0}
{"id": "eqasc_train_13393", "prediction": "all x.(BodyFat(x) -> UnusedEnergy(x))", "score": 0}
{"id": "eqasc_train_13394", "prediction": "all x y.((Food(x) & Nest(y) & ShortSupply(y)) -> StoredIn(x,y))", "score": 0}
{"id": "eqasc_train_13395", "prediction": "all x y.((Nest(x) & Food(y) & -Used(y)) -> Stores(x,y))", "score": 0}
{"id": "eqasc_train_13396", "prediction": "all x.(Storage(x) -> BodyFat(x))", "score": 0}
{"id": "eqasc_train_13397", "prediction": "all x.((Food(x) & -UsedForEnergy(x)) -> ConvertedIntoFat(x))", "score": 0}
{"id": "eqasc_train_13398", "prediction": "all x.(ExcessFood(x) -> StoredInBodyAsFat(x))", "score": 0}
{"id": "eqasc_train_13399", "prediction": "all x.((Food(x) & -UsedImmediatelyForEnergy(x)) -> Fat(x))", "score": 0}
{"id": "eqasc_train_13400", "prediction": "all x.(DietaryFat(x) -> FatsInFood(x))", "score": 0}
{"id": "eqasc_train_13401", "prediction": "all x.((Fat(x) & -UsedForEnergy(x)) -> StoredForFutureUse(x))", "score": 0}
{"id": "eqasc_train_13402", "prediction": "all x.(Pottery(x) -> (StoredWater(x) & StoredFood(x)))", "score": 0}
{"id": "eqasc_train_13403", "prediction": "all x.((Food(x) & -EatenImmediatelyForEnergy(x)) -> StoredInPottery(x))", "score": 0}
{"id": "eqasc_train_13404", "prediction": "all x.(Calories(x) -> EnergyStoredInFood(x))", "score": 0}
{"id": "eqasc_train_13405", "prediction": "all x y.((Body(x) & Calories(y)) -> StoresForFutureUse(x,y))", "score": 0}
{"id": "eqasc_train_13406", "prediction": "all x.((Food(x) & HighInCarbohydrates(x)) -> UsedForEnergy(x))", "score": 0}
{"id": "eqasc_train_13407", "prediction": "all x.((Carbohydrate(x) & -UsedInBody(x)) -> StoredInBody(x))", "score": 0}
{"id": "eqasc_train_13408", "prediction": "all x.((Food(x) & -UsedInBodyForHeat(x)) -> StoredInBodyForFutureUse(x))", "score": 0}
{"id": "eqasc_train_13409", "prediction": "all x.((Steak(x) & -UsedImmediatelyForEnergy(x)) -> StoredForFutureUse(x))", "score": 0}
{"id": "eqasc_train_13410", "prediction": "all x.(Mineral(x) -> (ChemicalElement(x) & EssentialForBodyProcesses(x)))", "score": 0}
{"id": "eqasc_train_13411", "prediction": "all x.(Cuircon(x) -> EssentialMineral(x))", "score": 0}
{"id": "eqasc_train_13412", "prediction": "all x.(Cuircon(x) -> (ChemicalElement(x) & EssentialForBodyProcesses(x)))", "score": 0}
{"id": "eqasc_train_13413", "prediction": "all x.(Mineral(x) -> FoundInSoil(x))", "score": 0}
{"id": "eqasc_train_13414", "prediction": "all x y.((Substance(x) & FoundInSoil(x)) -> (ChemicalElement(x) & EssentialForBodyProcesses(y)))", "score": 0}
{"id": "eqasc_train_13415", "prediction": "all x.(Egg(x) -> (LoadedWithVitamins(x) & LoadedWithMinerals(x)))", "score": 0}
{"id": "eqasc_train_13416", "prediction": "all x.(Egg(x) -> (ContainsChemicalElements(x) & EssentialForBodyProcesses(x)))", "score": 0}
{"id": "eqasc_train_13417", "prediction": "all x.(InorganicSubstance(x) -> EssentialForBodyProcesses(x))", "score": 0}
{"id": "eqasc_train_13418", "prediction": "all x.(Water(x) -> (ContainsDissolvedSolids(x) & ContainsMinerals(x)))", "score": 0}
{"id": "eqasc_train_13419", "prediction": "all x.((DissolvedInWater(x) & ChemicalElement(x)) -> EssentialForBodyProcesses(x))", "score": 0}
{"id": "eqasc_train_13420", "prediction": "all x.(IronDeficiency(x) -> (LowLevelsOfMineralIron(x) & InBody(x)))", "score": 0}
{"id": "eqasc_train_13421", "prediction": "all x.(Iron(x) -> (ChemicalElement(x) & EssentialForBodyProcesses(x)))", "score": 0}
{"id": "eqasc_train_13422", "prediction": "all x.(Child(x) -> DevelopmentalProcess(x))", "score": 0}
{"id": "eqasc_train_13423", "prediction": "all x.(Mineral(x) -> NecessaryForChildrenGrowth(x))", "score": 0}
{"id": "eqasc_train_13424", "prediction": "all x.(Potassium(x) -> (Mineral(x) & Calcium(x)))", "score": 0}
{"id": "eqasc_train_13425", "prediction": "all x.((Potassium(x) & BodyProcesses(x)) -> EssentialFor(x,y))", "score": 0}
{"id": "eqasc_train_13426", "prediction": "all x.(Mineral(x) -> EssentialToBodyFunction(x))", "score": 0}
{"id": "eqasc_train_13427", "prediction": "all x y.((Mineral(x) & BodyProcess(y)) -> NeededBy(x,y))", "score": 0}
{"id": "eqasc_train_13428", "prediction": "all x.(MineralSalt(x) -> Iodine(x))", "score": 0}
{"id": "eqasc_train_13429", "prediction": "all x.(Salt(x) -> (ChemicalElement(x) & EssentialForBodyProcesses(x)))", "score": 0}
{"id": "eqasc_train_13430", "prediction": "all x.(Potassium(x) -> (TraceMineral(x) & EssentialForGrowth(x) & EssentialForGoodHealth(x)))", "score": 1}
{"id": "eqasc_train_13431", "prediction": "all x.(Potassium(x) -> EssentialForGoodHealth(x))", "score": 1}
{"id": "eqasc_train_13432", "prediction": "all x.(Pregnancy(x) -> NormalBodyProcess(x))", "score": 0}
{"id": "eqasc_train_13433", "prediction": "all x.(Minerals(x) -> (ChemicalElements(x) & EssentialForPregnancy(x)))", "score": 0}
{"id": "eqasc_train_13434", "prediction": "all x y z.((Telephone(x) & Human(y) & LongDistance(z)) -> UsedForCommunication(x,y,z))", "score": 0}
{"id": "eqasc_train_13435", "prediction": "all x.(Communicating(x) -> (AreYouHearing(x) | AreYouTalking(x)))", "score": 0}
{"id": "eqasc_train_13436", "prediction": "all x.(Telephone(x) -> ListenAndTalk(x))", "score": 0}
{"id": "eqasc_train_13437", "prediction": "all x.(TelephoneLine(x) -> ConductsElectricity(x))", "score": 0}
{"id": "eqasc_train_13438", "prediction": "all x y.((Electricity(x) & Human(y)) -> UsedForCommunication(x,y))", "score": 0}
{"id": "eqasc_train_13439", "prediction": "all x.(EffectiveCommunication(x) -> (ConveysMessages(x) & ReceivesMessages(x)))", "score": 0}
{"id": "eqasc_train_13440", "prediction": "all x y z.((Telephone(x) & Human(y) & LongDistance(z)) -> ConveysAndReceivesMessages(x,y,z))", "score": 0}
{"id": "eqasc_train_13441", "prediction": "all x.((Relationship(x) & LastDistance(x)) -> CommunicationEssential(x))", "score": 0}
{"id": "eqasc_train_13442", "prediction": "all x.(Telephone(x) -> AllowsRelationshipsToLeastDistances(x))", "score": 0}
{"id": "eqasc_train_13443", "prediction": "all x.((OpenWaterRace(x) & LongDistanceSwimmer(x)) -> Offers(x,5-25Kilometers))", "score": -1}
{"id": "eqasc_train_13444", "prediction": "all x.(Telephone(x) -> UsedForCommunication(x,25))", "score": 0}
{"id": "eqasc_train_13445", "prediction": "all x.(Communication(x) -> (SharesIdeas(x) & SharesThoughts(x) & SharesPointsOfViews(x)))", "score": 0}
{"id": "eqasc_train_13446", "prediction": "all x y.((Telephone(x) & Human(y)) -> (SharesIdeas(x,y) & SharesThoughts(x,y) & SharesViews(x,y)))", "score": 0}
{"id": "eqasc_train_13447", "prediction": "all x.((MobileTelephoneManufacturer(x) & Nokia(x)) -> WantsSoftwareEngineers(x))", "score": 0}
{"id": "eqasc_train_13448", "prediction": "all x y.((Nokia(x) & Human(y)) -> UsedForCommunication(x,y))", "score": 0}
{"id": "eqasc_train_13449", "prediction": "all x.((TelephoneCall(x) & LongDistance(x)) -> (UsesRadioWaves(x) | UsesMicrowaves(x)))", "score": 0}
{"id": "eqasc_train_13450", "prediction": "all x.(Telephone(x) -> UsesRadioWavesForCommunication(x))", "score": 0}
{"id": "eqasc_train_13451", "prediction": "all x.(AdultWworm(x) -> (GoesThroughMajorTransformation(x) & DevelopsReproductiveOrgans(x)))", "score": 0}
{"id": "eqasc_train_13452", "prediction": "all x y.((AdultWworm(x) & Adult(y)) -> (GoesThroughMajorTransformation(x,y) & CreatesYoung(y)))", "score": 0}
{"id": "eqasc_train_13453", "prediction": "all x.((EnlargedCummerbundLikeBand(x) & NearHead(x)) -> HoldsReproductiveOrgans(x))", "score": 0}
{"id": "eqasc_train_13454", "prediction": "all x y.((EnlargedCummerbundLikeBand(x) & Worm(y)) -> MajorTransformationIn(x,y))", "score": 0}
{"id": "eqasc_train_13455", "prediction": "all x.(MarineAnnelidWworm(x) -> (HasLarvae(x,trochophores) & SwimsAboutByCilia(x)))", "score": 0}
{"id": "eqasc_train_13456", "prediction": "all x.(MarineAnnelid(x) -> (MainTransformation(x) & MakesTrochophores(x) & SwimsWithCilia(x)))", "score": 0}
{"id": "eqasc_train_13457", "prediction": "all x.(MarineFlatworm(x) -> (BelongsToMajorGroupOfWings(x) & Platyhelminthes(x)))", "score": 0}
{"id": "eqasc_train_13458", "prediction": "all x.(AdultPlatyhelminthe(x) -> (GoesThroughMajorTransformation(x) & DevelopsReproductiveOrgans(x)))", "score": 0}
{"id": "eqasc_train_13459", "prediction": "all x.(MatureAdultWworm(x) -> 5cmLong(x))", "score": 0}
{"id": "eqasc_train_13460", "prediction": "all x.((MatureWworm(x) & MajorTransformation(x) & DevelopReproductiveOrgans(x)) -> MatureWworm(x))", "score": 0}
{"id": "eqasc_train_13461", "prediction": "all x.(GenitalInjury(x) -> (AffectsReproductiveOrgans(x) & AffectsB bladder(x) & AffectsUterus(x)))", "score": -1}
{"id": "eqasc_train_13462", "prediction": "all x.((AdultWworm(x) & MajorTransformation(x) & DevelopsGenitals(x)) -> WormsGoThrough(x))", "score": 0}
{"id": "eqasc_train_13463", "prediction": "all x.((Larvae(x) & LeaveNodules(x) & DevelopIntoAdultWworms(x)) -> Weeks(x))", "score": 0}
{"id": "eqasc_train_13464", "prediction": "all x.(Larvae(x) -> (LeaveNodules(x) & TransformUntilReproductiveOrgans(x)))", "score": 0}
{"id": "eqasc_train_13465", "prediction": "all x.(AdultWworm(x) -> (DevelopsCubberbundLikeBand(x) & NearHead(x)))", "score": 0}
{"id": "eqasc_train_13466", "prediction": "all x y z.((Earth(x) & MagneticPattern(y) & Animal(z) & Migrates(z)) -> FindsLocationsBy(x,y,z))", "score": 0}
{"id": "eqasc_train_13467", "prediction": "all x y.((Earth(x) & IronCore(y)) -> CreatesMagneticField(x,y))", "score": 0}
{"id": "eqasc_train_13468", "prediction": "all x.(MigratoryAnimal(x) -> DependsOnEarthsRotatingIronCoreForNavigation(x))", "score": 0}
{"id": "eqasc_train_13469", "prediction": "all x.(BirdMigration(x) -> Common(x))", "score": 0}
{"id": "eqasc_train_13470", "prediction": "all x.(Bird(x) -> UsesEarthsMagneticPatternsToFindLocations(x))", "score": 0}
{"id": "eqasc_train_13471", "prediction": "all x y z.((Earth(x) & MagneticPattern(y) & Bird(z)) -> (FindsLocations(y,z) & FindsLocations(z,y)))", "score": 0}
{"id": "eqasc_train_13472", "prediction": "all x.((BirdMigration(x) & Isotopes(x)) -> DifficultTask(x))", "score": 0}
{"id": "eqasc_train_13473", "prediction": "all x y.((AnimatedMap(x) & Bird(y)) -> ShowsFlying(x,y))", "score": 0}
{"id": "eqasc_train_13474", "prediction": "all x y.((EarthsMagneticPatterns(x) & Bird(y)) -> CanFlyAlongMigrationPaths(y,x))", "score": 0}
{"id": "eqasc_train_13475", "prediction": "all x.((BorealSpecies(x) | TemperateSpecies(x)) -> SurvivesByMigrating(x))", "score": 0}
{"id": "eqasc_train_13476", "prediction": "all x y.((EarthsMagneticPatterns(x) & BorealSpecies(y)) -> EnsuresSurvival(x,y))", "score": 0}
{"id": "eqasc_train_13477", "prediction": "all x.(Whale(x) -> MigratesFourths(x))", "score": 0}
{"id": "eqasc_train_13478", "prediction": "all x y.((EarthsMagneticPatterns(x) & Whale(y)) -> FoundLocations(x,y))", "score": 0}
{"id": "eqasc_train_13479", "prediction": "all x y.((Bird(x) & Fish(y)) -> (AnimatesLandscape(x,y) & (SpringMigrating(x,y) | FallMigrating(x,y))))", "score": 0}
{"id": "eqasc_train_13480", "prediction": "all x y.((EarthsMagneticPattern(x) & Bird(y) & Fish(y)) -> FindsLocations(x,y))", "score": 0}
{"id": "eqasc_train_13481", "prediction": "all x.(AdultSponge(x) -> Sessile(x))", "score": 9}
{"id": "eqasc_train_13482", "prediction": "all x.(Sessile(x) -> AttachedPermanently(x) & Immobile(x))", "score": 9}
{"id": "eqasc_train_13483", "prediction": "all x.(AdultSponge(x) -> Immobile(x))", "score": 4}
{"id": "eqasc_train_13484", "prediction": "all x.(AdultSponge(x) -> (AttachedPermanently(x) & Immobile(x)))", "score": 1}
{"id": "eqasc_train_13485", "prediction": "all x.(AdultSponge(x) -> Immobile(x))", "score": 1}
{"id": "eqasc_train_13486", "prediction": "all x.(Echinoderm(x) -> (Sessile(x) | Sedentary(x)) & RadialSymmetry(x)))", "score": -1}
{"id": "eqasc_train_13487", "prediction": "all x.(AdultSponge(x) -> Sedentary(x))", "score": 0}
{"id": "eqasc_train_13488", "prediction": "all x.(AdultSponge(x) -> (AttachedPermanently(x) & Immobile(x)))", "score": 1}
{"id": "eqasc_train_13489", "prediction": "all x.(Hydro(x) -> (Sessile(x) & AttachesToSubstrat(x)))", "score": 0}
{"id": "eqasc_train_13490", "prediction": "all x y.((AdultSponge(x) & Substrat(y)) -> AttachesTo(x,y))", "score": 0}
{"id": "eqasc_train_13491", "prediction": "all x.(Sponges(x) -> (SessileAnimal(x) & (LivesInFreshWater(x) | LivesInSaltWater(x))))", "score": 0}
{"id": "eqasc_train_13492", "prediction": "all x.(Sponge(x) -> LivesInSaltWater(x))", "score": 0}
{"id": "eqasc_train_13493", "prediction": "all x.(AdultSponge(x) -> (AttachedPermanently(x) & -Move(x)))", "score": 0}
{"id": "eqasc_train_13494", "prediction": "all x.(AdultSponge(x) -> (AttachedPermanently(x) & Immobile(x)))", "score": 2}
{"id": "eqasc_train_13495", "prediction": "all x.(Polyp(x) -> ((Pedecular(x) | Sessile(x)) & UsuallyViral(x)))", "score": 0}
{"id": "eqasc_train_13496", "prediction": "all x.(AdultSponge(x) -> HasPolyps(x))", "score": 0}
{"id": "eqasc_train_13497", "prediction": "all x.(Vertebrates(x) -> (Acordates(x) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_train_13498", "prediction": "all x.(Fish(x) -> TrueCdorbate(x))", "score": 0}
{"id": "eqasc_train_13499", "prediction": "all x.(Fish(x) -> (FirstKnownAnimalWithBackbone(x) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_train_13500", "prediction": "all x.(Vertebrate(x) -> HasJaws(x))", "score": 0}
{"id": "eqasc_train_13501", "prediction": "all x.(Vertebrates(x) -> (Acordates(x) & HasSpinalColumn(x)))", "score": 0}
{"id": "eqasc_train_13502", "prediction": "all x.(Mammal(x) -> (HasBackbone(x) & LikesAcidates(x)))", "score": 0}
{"id": "eqasc_train_13503", "prediction": "all x.(Mammal(x) -> (Vertebrate(x) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_train_13504", "prediction": "all x.(Vertebrates(x) -> (HasJaw(x) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_train_13505", "prediction": "all x.(Vertebrate(x) -> EvolvedJaws(x))", "score": 0}
{"id": "eqasc_train_13506", "prediction": "all x.(Acordate(x) -> HasEvolvedJaws(x))", "score": 0}
{"id": "eqasc_train_13507", "prediction": "all x y z.((AnimalSpecies(x) & AnimalSpecies(y) & Animal(z) & Harms(x,y)) -> PopulationDecrease(x,z))", "score": 0}
{"id": "eqasc_train_13508", "prediction": "all x.((HabitatLoss(x) & BirdPopulationDecrease(x)) -> MajorRuntime(x))", "score": 0}
{"id": "eqasc_train_13509", "prediction": "all x y.((HabitatLoss(x) & BirdPopulation(y)) -> Harmed(x,y))", "score": 0}
{"id": "eqasc_train_13510", "prediction": "all x y.((RegularOverfishing(x) & AnimalPopulation(y)) -> CanDeclineToPointOfExtinction(x,y))", "score": 0}
{"id": "eqasc_train_13511", "prediction": "all x y.((AnimalSpecies(x) & AnimalSpecies(y)) -> (Harms(x,y) & Endangered(x)))", "score": 0}
{"id": "eqasc_train_13512", "prediction": "all x.(KillsSnakes(x) -> (MoreThanNecessary(x) & HarmfulToEcosystem(x)))", "score": 0}
{"id": "eqasc_train_13513", "prediction": "all x y.((Snake(x) & Animal(y)) -> KillsCanDecreasePopulation(x,y))", "score": 0}
{"id": "eqasc_train_13514", "prediction": "all x.((WildAnimalPopulation(x) & Hunting(x) & LossOfHabitat(x)) -> DecreasedDirtily(x))", "score": 0}
{"id": "eqasc_train_13515", "prediction": "all x y.((Hunting(x) & Creature(y)) -> CausesDecreasedPopulation(x,y))", "score": 0}
{"id": "eqasc_train_13516", "prediction": "all x.((EndangeredPopulation(x) & ContinuesDecrease(x)) -> SeriousQuestionsRemain(x))", "score": 0}
{"id": "eqasc_train_13517", "prediction": "all x y.((AnimalSpecies(x) & AnimalSpecies(y) & Harms(x,y)) -> EndangeredSpecies(x,y))", "score": 0}
{"id": "eqasc_train_13518", "prediction": "all x.(PinkFlimmer(x) -> InEndangeredSpeciesList(x))", "score": 0}
{"id": "eqasc_train_13519", "prediction": "all x y.((PinkFlamingo(x) & PinkFlamingo(y)) -> (HasPopulationDecrease(x,y) & PopulationDecrease(x,y)))", "score": 0}
{"id": "eqasc_train_13520", "prediction": "all x y.((Harming(x) & Animal(y)) -> PopulationDecrease(y))", "score": 0}
{"id": "eqasc_train_13521", "prediction": "all x.(OilSpill(x) -> (HarmfulToAnimals(x) & HarmfulToEnvironment(x)))", "score": 0}
{"id": "eqasc_train_13522", "prediction": "all x.(OilSpoken(x) -> CausesDecreasedAnimalPopulations(x))", "score": 0}
{"id": "eqasc_train_13523", "prediction": "all x.((CausesGreaterCauses(x) & PopulationDecreases(x)) -> DeathGreater(x))", "score": 0}
{"id": "eqasc_train_13524", "prediction": "all x.((MortalLife(x) & PopulationDecline(x)) -> Causes(x,populationDecline))", "score": 0}
{"id": "eqasc_train_13525", "prediction": "all x.((StudyOfIslandPopulations(x) & ExtinctionRate(x)) -> IncreasesAsAreaDecreases(x))", "score": 0}
{"id": "eqasc_train_13526", "prediction": "all x y.((AnimalSpecies(x) & AnimalSpecies(y)) -> (HasIncreaseInExtinctionRates(x,y) & IncreaseInExtinctionRates(x,y)))", "score": 0}
{"id": "eqasc_train_13527", "prediction": "all x.((GroceriePollution(x) & CaveAnimal(y)) -> CanHarm(x,y))", "score": 0}
{"id": "eqasc_train_13528", "prediction": "all x y.((PollutionFromGarbage(x) & CaveAnimal(y)) -> DecreaseInCaveAnimals(x,y))", "score": 0}
{"id": "eqasc_train_13529", "prediction": "all x.(Fish(x) -> WildAnimal(x))", "score": 0}
{"id": "eqasc_train_13530", "prediction": "all x y.((FishSpecies(x) & FishSpecies(y) & Harms(x,y)) -> PopulationDecrease(x,y))", "score": 0}
{"id": "eqasc_train_13531", "prediction": "all x.(AirPollution(x) -> (HarmsPlants(x) & HarmsAnimals(x)))", "score": 0}
{"id": "eqasc_train_13532", "prediction": "all x y z.((AirPollution(x) & AnimalPopulation(y) & Animal(z)) -> (Damages(x,y) & Decreases(y,z)))", "score": 0}
{"id": "eqasc_train_13533", "prediction": "all x.(Ecology(x) -> (StudiesPopulations(x) | StudiesCommunities(x)))", "score": 0}
{"id": "eqasc_train_13534", "prediction": "all x y.((Ecology(x) & AnimalSpecies(y) & Harmed(y)) -> StudiesDecreases(x,y))", "score": 0}
{"id": "eqasc_train_13535", "prediction": "all x y.((GoatSpecies(x) & Harms(x,y)) -> PopulationDecrease(y))", "score": 0}
{"id": "eqasc_train_13536", "prediction": "all x.(Mammal(x) -> HasLayerOfFatUnderSkin(x))", "score": 2}
{"id": "eqasc_train_13537", "prediction": "all x.((ExtraLayerOfFat(x) & PolarBear(x)) -> ProtectsFromCold(x))", "score": 0}
{"id": "eqasc_train_13538", "prediction": "all x.(PolarBear(x) -> HasExtraFatToInsulateBody(x))", "score": 0}
{"id": "eqasc_train_13539", "prediction": "all x.((SeaMammal(x) & Seal(x) & Walrus(x)) -> Hunted(x))", "score": 0}
{"id": "eqasc_train_13540", "prediction": "all x.(Walrus(x) -> (HasLayerOfFat(x) & UnderSkin(x) & HelpsInsulateBody(x)))", "score": 0}
{"id": "eqasc_train_13541", "prediction": "all x y.((Mammal(x) & LayerOfFood(y)) -> InsulatesBody(x,y))", "score": 0}
{"id": "eqasc_train_13542", "prediction": "all x.(Mammal(x) -> (HasFatLayer(x) & UnderSkin(x) & KeepsBodyWarm(x) & InVarietyOfClimates(x)))", "score": 0}
{"id": "eqasc_train_13543", "prediction": "all x.(Pug(x) -> HasLayerOfFatUnderSkin(x))", "score": 1}
{"id": "eqasc_train_13544", "prediction": "all x.(InsulatedModel(x) -> (ProvidesWarmth(x) & ProvidesComfort(x)))", "score": 0}
{"id": "eqasc_train_13545", "prediction": "all x.(Mammal(x) -> (HasLayerOfFat(x) & UnderSkin(x) & ProvidesWarmth(x) & ProvidesComfort(x)))", "score": 0}
{"id": "eqasc_train_13546", "prediction": "all x.(Human(x) -> HasLayerOfFatUnderSkin(x))", "score": 1}
{"id": "eqasc_train_13547", "prediction": "all x.((ColdClimate(x) & Arkhangelsk(x)) -> InsulationImportant(x))", "score": 0}
{"id": "eqasc_train_13548", "prediction": "all x.((BodyFatLayer(x) & UnderSkinMammals(x)) -> ColdClimate(x))", "score": 0}
{"id": "eqasc_train_13549", "prediction": "all x.(HasHair(x) -> Mammal(x))", "score": 0}
{"id": "eqasc_train_13550", "prediction": "all x.((Organism(x) & HasHair(x)) -> HasFatLayerUnderSkin(x))", "score": 0}
{"id": "eqasc_train_13551", "prediction": "all x.(Whale(x) -> Mammal(x))", "score": 0}
{"id": "eqasc_train_13552", "prediction": "all x y.((Whale(x) & LayerOfFat(x,y)) -> InsulatesBody(x))", "score": 0}
{"id": "eqasc_train_13553", "prediction": "all x.((Blobber(x) & FatOfWhale(x)) -> MuchSoughtAfter(x))", "score": 0}
{"id": "eqasc_train_13554", "prediction": "all x.(Whale(x) -> (HasBlumbber(x) & HelpsInsulate(x)))", "score": 0}
{"id": "eqasc_train_13555", "prediction": "all x y.((HarborSeal(x) & SeaLion(y)) -> (EvolvedToUseBlumber(x) & FatLayer(y)))", "score": 0}
{"id": "eqasc_train_13556", "prediction": "all x.(SeaLion(x) -> (HasBloodberLayer(x) & InsulatesBody(x)))", "score": 0}
{"id": "eqasc_train_13557", "prediction": "all x.(GlassInsulation(x) -> KeepsBeverageWarm(x))", "score": 0}
{"id": "eqasc_train_13558", "prediction": "all x.(Mammal(x) -> HasFatLayer(x))", "score": 0}
{"id": "eqasc_train_13559", "prediction": "all x.((Fat(x) & StoredInBody(x)) -> HelpsMaintainBodyTemperature(x))", "score": 0}
{"id": "eqasc_train_13560", "prediction": "all x.(Mammal(x) -> HasBodyFat(x))", "score": 0}
{"id": "eqasc_train_13561", "prediction": "all x y.((ElectricalDevice(x) & Battery(y)) -> (RequiresPathForElectricity(x,y) & ClosedCircuit(x)))", "score": 0}
{"id": "eqasc_train_13562", "prediction": "all x y.((Electron(x) & ClosedCircuit(y)) -> FlowsContinuously(x,y))", "score": 0}
{"id": "eqasc_train_13563", "prediction": "all x y.((ElectricalDevice(x) & Battery(y)) -> RequiresPathForElectrons(x,y))", "score": 0}
{"id": "eqasc_train_13564", "prediction": "all x.(ElectricCircuit(x) -> ClosedPathForElectronFlow(x))", "score": 0}
{"id": "eqasc_train_13565", "prediction": "all x y.((ElectricalDevice(x) & Battery(y)) -> RequiresElectronFlow(x,y))", "score": 0}
{"id": "eqasc_train_13566", "prediction": "all x.(Snow(x) -> (ElectricalNoise(x) & GeneratedByTVReceiverAndElectricalDevices(x)))", "score": 0}
{"id": "eqasc_train_13567", "prediction": "all x y.((TelevisionReceiver(x) & Battery(y)) -> (RequiresPathForElectricity(x,y) & ClosedCircuit(x)))", "score": 0}
{"id": "eqasc_train_13568", "prediction": "all x.((Computer(x) & BatteryPowered(x)) -> RequiresClosedCircuit(x))", "score": 0}
{"id": "eqasc_train_13569", "prediction": "all x.(Battery(x) -> ElectrochemicalDevice(x))", "score": 0}
{"id": "eqasc_train_13570", "prediction": "all x y.((ElectricalDevice(x) & ElectrochemicalDevice(y)) -> CanBePoweredWith(x,y))", "score": 0}
{"id": "eqasc_train_13571", "prediction": "all x.(ElectricCar(x) -> (HasBigBatteries(x) & -HasEngines(x)))", "score": 0}
{"id": "eqasc_train_13572", "prediction": "all x y.((ElectricCar(x) & ElectricCar(y)) -> RequiresPathForElectricityFlow(x,y))", "score": 0}
{"id": "eqasc_train_13573", "prediction": "all x y.((Device(x) & Battery(y) & Powers(x,y)) -> RequiresPathForElectrons(x,y))", "score": 0}
{"id": "eqasc_train_13574", "prediction": "all x.(CellularPhone(x) -> SecondGenerationDevice(x))", "score": 0}
{"id": "eqasc_train_13575", "prediction": "all x y.((Phone(x) & Battery(y) & PowersWith(x,y)) -> RequiresPathForElectricityFlow(x))", "score": 0}
{"id": "eqasc_train_13576", "prediction": "all x y.((IntenseHeat(x) & Organism(y)) -> NegativeImpact(x,y))", "score": 4}
{"id": "eqasc_train_13577", "prediction": "all x y.((Fire(x) & Organism(y)) -> NegativeImpact(x,y))", "score": 2}
{"id": "eqasc_train_13578", "prediction": "all x.(SummerHeat(x) -> (Intense(x) & Obscious(x)))", "score": 0}
{"id": "eqasc_train_13579", "prediction": "all x y.((Desert(x) & Organism(y)) -> NegativeImpact(x,y))", "score": 0}
{"id": "eqasc_train_13580", "prediction": "all x.(Bacteria(x) -> KilledByIntenseHeat(x))", "score": 0}
{"id": "eqasc_train_13581", "prediction": "all x.(HotTemperature(x) -> NegativeImpactOnBacteria(x))", "score": 0}
{"id": "eqasc_train_13582", "prediction": "all x.((AridArea(x) & IntenseSunlight(x) & IntenseHeat(x)) -> (PresentInAridArea(x) & PresentInAridArea(x)))", "score": 0}
{"id": "eqasc_train_13583", "prediction": "all x y.((IntenseSunlight(x) & Organism(y)) -> NegativeImpact(x,y))", "score": 0}
{"id": "eqasc_train_13584", "prediction": "all x y.((Fire(x) & Organism(y)) -> NegativeImpact(x,y))", "score": 1}
{"id": "eqasc_train_13585", "prediction": "all x.(Organism(x) -> (Animal(x) | Plant(x)))", "score": 0}
{"id": "eqasc_train_13586", "prediction": "all x y.((IntenseHeat(x) & Animal(y) & Plant(y)) -> NegativeImpact(x,y))", "score": 0}
{"id": "eqasc_train_13587", "prediction": "all x.((DirectSunlight(x) & Heat(x) & Disinfectants(x)) -> KillsOrganism(x))", "score": 0}
{"id": "eqasc_train_13588", "prediction": "all x.(Organism(x) -> (TöchesByDirectSunlight(x) | KillsByDirectSunlight(x)))", "score": 0}
{"id": "eqasc_train_13589", "prediction": "all x.(HeatLoss(x) -> InhibitedByIntenseVasoconstriction(x))", "score": 0}
{"id": "eqasc_train_13590", "prediction": "all x y.((IntenseVasoconstriction(x) & Organism(y)) -> NegativeImpact(x,y))", "score": 0}
{"id": "eqasc_train_13591", "prediction": "all x.((IntenseRadiationHeat(x) & Emitted(x)) -> BurnsSkin(x))", "score": 0}
{"id": "eqasc_train_13592", "prediction": "all x y.((SkinBurningQuickly(x) & Organism(y)) -> NegativeImpact(x,y))", "score": 0}
{"id": "eqasc_train_13593", "prediction": "all x y.((Fire(x) & Organism(y)) -> NegativeImpact(x,y))", "score": 1}
{"id": "eqasc_train_13594", "prediction": "all x y.((IntenseHeat(x) & Plant(y)) -> NegativeImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_13595", "prediction": "all x.((Heat(x) & HasHeat(x)) -> BeHot(x))", "score": 0}
{"id": "eqasc_train_13596", "prediction": "all x.((Organism(x) & TooHot(x)) -> NegativeImpact(x))", "score": 0}
{"id": "eqasc_train_13597", "prediction": "all x y.((Sun(x) & Earth(y)) -> (ProducesHeat(x,y) & ObservedOn(x,y)))", "score": 0}
{"id": "eqasc_train_13598", "prediction": "all x y.((ProducedBySun(x) & Organism(y)) -> NegativeImpact(x,y))", "score": 0}
{"id": "eqasc_train_13599", "prediction": "all x.((Burn(x) | HeatCrops(x) | HeatExhaustion(x) | HeatStroke(x)) -> CausedByExpositionToHeat(x))", "score": 0}
{"id": "eqasc_train_13600", "prediction": "all x.(Burn(x) -> (IntenseTemperatures(x) & CausedBy(x,y)))", "score": 0}
{"id": "eqasc_train_13601", "prediction": "all x y z.((Light(x) & Eye(y) & Pupil(z) & EntersThrough(x,y,z)) -> FallsOnRetina(x))", "score": 0}
{"id": "eqasc_train_13602", "prediction": "all x.(Receptor(x) -> (CellInRetina(x) & PerceivesLight(x)))", "score": 0}
{"id": "eqasc_train_13603", "prediction": "all x y.((Light(x) & Eye(y) & EntersThroughPupil(x,y)) -> PerceivesLight(x,y))", "score": 0}
{"id": "eqasc_train_13604", "prediction": "all x.((ElectromagneticEnergy(x) & EntersEye(x)) -> FallsOnRetina(x))", "score": 0}
{"id": "eqasc_train_13605", "prediction": "all x.(Macula(x) -> SeesFineDetails(x))", "score": 0}
{"id": "eqasc_train_13606", "prediction": "all x.(Light(x) -> AllowsSeeFineDetails(x))", "score": 0}
{"id": "eqasc_train_13607", "prediction": "all x.(IntermediateLengthRay(x) -> VisibleAsLight(x))", "score": 0}
{"id": "eqasc_train_13608", "prediction": "all x y z.((IntermediateLengthRays(x) & Eye(y) & Pupil(z) & EntersThrough(x,y,z)) -> FallsOnRetina(x))", "score": 0}
{"id": "eqasc_train_13609", "prediction": "all x y z.((Picture(x) & Retina(y) & OpticNervous(z)) -> (FormedOn(x,y) & TransmittedBy(x,z)))", "score": 0}
{"id": "eqasc_train_13610", "prediction": "all x y z.((Light(x) & Eye(y) & Pupil(z) & EntersThrough(x,y,z)) -> TransmitsInformation(x,y,z))", "score": 0}
{"id": "eqasc_train_13611", "prediction": "all x y.((ReceptorCell(x) & Pupil(y)) -> PerceivesLight(x,y))", "score": 0}
{"id": "eqasc_train_13612", "prediction": "all x.(Human(x) -> (UsesEyes(x,y) & SeesSingleImage(x)))", "score": 0}
{"id": "eqasc_train_13613", "prediction": "all x y.((Human(x) & Image(y)) -> UsesLightToSee(x,y))", "score": 0}
{"id": "eqasc_train_13614", "prediction": "all x y z.((Photons(x) & Eye(y) & Pupil(z) & EntersThrough(x,y) & Photons(x)) -> FallsOnRetina(x,z))", "score": 0}
{"id": "eqasc_train_13615", "prediction": "all x y.((Image(x) & Viewer(y)) -> RetainsOnRetinal(x,y))", "score": 0}
{"id": "eqasc_train_13616", "prediction": "all x y.((Light(x) & Image(y)) -> RetainsOnRetina(x,y))", "score": 0}
{"id": "eqasc_train_13617", "prediction": "all x.(Mullusk(x) -> (MainFoodSource(x) & ForOtherOrganisms(x) & ForHumans(x)))", "score": 0}
{"id": "eqasc_train_13618", "prediction": "all x.(Snail(x) -> (MainFoodSource(x) & ForOrganisms(x) & ForHumans(x)))", "score": 0}
{"id": "eqasc_train_13619", "prediction": "all x.((Seafood(x) & (Mollusk(x) | Crustacean(x))) -> SourceOfCadmium(x))", "score": 0}
{"id": "eqasc_train_13620", "prediction": "all x.(Seafood(x) -> MajorFoodSourceForHumans(x))", "score": 0}
{"id": "eqasc_train_13621", "prediction": "all x.(Abalone(x) -> (MajorFoodSource(x) & Human(x)))", "score": 0}
{"id": "eqasc_train_13622", "prediction": "all x.(Intervertebrates(x) -> (MainFoodSource(x) & ForOtherOrganisms(x) & ForHumans(x)))", "score": 0}
{"id": "eqasc_train_13623", "prediction": "all x.(Organism(x) -> (Omnivore(x) & VariableDiet(x)))", "score": 0}
{"id": "eqasc_train_13624", "prediction": "all x.(Human(x) -> (VariableDiet(x) & exists y.(Mollusk(y) & MajorFoodSource(y)))))", "score": -1}
{"id": "eqasc_train_13625", "prediction": "all x.(Squid(x) -> FoodSourceForHumans(x))", "score": 0}
{"id": "eqasc_train_13626", "prediction": "all x.(Human(x) -> EatsSquid(x))", "score": 0}
{"id": "eqasc_train_13627", "prediction": "all x.(SoftBodyInvertebrate(x) -> (MainFoodSource(x) & ForOtherOrganisms(x) & ForHumans(x)))", "score": 0}
{"id": "eqasc_train_13628", "prediction": "all x.(Squid(x) -> (MajorFoodSource(x) & Organism(x)))", "score": 0}
{"id": "eqasc_train_13629", "prediction": "all x.(Mollusk(x) -> (FiltersWater(x) & LooksForFood(x)))", "score": 0}
{"id": "eqasc_train_13630", "prediction": "all x y.((Member(x) & MajorFoodSource(y) & Human(y)) -> FiltersWhat(x,y))", "score": 0}
{"id": "eqasc_train_13631", "prediction": "all x y.((Invertebrate(x) & Organism(y)) -> MajorFoodSource(x,y))", "score": 0}
{"id": "eqasc_train_13632", "prediction": "all x.(Migration(x) -> (ChangesPopulationSize(x) & ChangesPopulationSize(x)))", "score": 0}
{"id": "eqasc_train_13633", "prediction": "all x y.((PredatoryAnimal(x) & GameAnimal(y)) -> MigratesWith(x,y))", "score": 0}
{"id": "eqasc_train_13634", "prediction": "all x.((Movement(x) & ChangesGamePopulationSize(x)) -> PredatoryPopulationSizeChanges(x))", "score": 0}
{"id": "eqasc_train_13635", "prediction": "all x.(Bird(x) -> (MigratesToEscapePoorWeather(x) & MigratesToFoodSupply(x)))", "score": 0}
{"id": "eqasc_train_13636", "prediction": "all x.(EscapesPoorWeatherAndFoodSupply(x) -> ChangesPopulationSize(x))", "score": 0}
{"id": "eqasc_train_13637", "prediction": "all x.(PopulationViability(x) -> ConstantFluctuation(x))", "score": 0}
{"id": "eqasc_train_13638", "prediction": "all x.(Migration(x) -> (CausesPopulationFluctuation(x) & CausesPopulationFluctuation(x)))", "score": 0}
{"id": "eqasc_train_13639", "prediction": "all x.(Insect(x) -> CanMigrate(x))", "score": 0}
{"id": "eqasc_train_13640", "prediction": "all x.(Insect(x) -> (ChangesPopulationSize(x) & MovesFromOnePlaceToAnother(x)))", "score": 0}
{"id": "eqasc_train_13641", "prediction": "all x y.((Bird(x) & Movement(y)) -> Undergoes(x,y))", "score": 0}
{"id": "eqasc_train_13642", "prediction": "all x y.((Bird(x) & Movement(y)) -> Undergoes(x,y))", "score": 0}
{"id": "eqasc_train_13643", "prediction": "all x.(Migration(x) -> (Motion(x) & ChangesPopulationSize(x)))", "score": 0}
{"id": "eqasc_train_13644", "prediction": "all x.(SpinyLuttle(x) -> InvolvesTravel(x))", "score": 0}
{"id": "eqasc_train_13645", "prediction": "all x.((Life(x) & InvolvesTravel(x)) -> ChangesPopulationSize(x))", "score": 0}
{"id": "eqasc_train_13646", "prediction": "all x y.((Insect(x) & PopulationSize(y)) -> Changes(x,y))", "score": 0}
{"id": "eqasc_train_13647", "prediction": "all x.(Arthropod(x) -> (LifeCycle(x) & SexualReproduction(x)))", "score": 3}
{"id": "eqasc_train_13648", "prediction": "all x y.((Arthropod(x) & Gamete(y)) -> RequiresToHaveChildren(x,y))", "score": 0}
{"id": "eqasc_train_13649", "prediction": "all x.(Insect(x) -> (LifeCycle(x) & SexualReproduction(x)))", "score": 2}
{"id": "eqasc_train_13650", "prediction": "all x.(Insect(x) -> (LifeCycle(x) & SexualReproduction(x)))", "score": 1}
{"id": "eqasc_train_13651", "prediction": "all x.(Lutheran(x) -> (LifeCycle(x) & SexualReproduction(x)))", "score": 0}
{"id": "eqasc_train_13652", "prediction": "all x.(Insect(x) -> (LifeCycle(x) & IncludesSexualReproduction(x)))", "score": 0}
{"id": "eqasc_train_13653", "prediction": "all x y.((SexualReproduction(x) & AsexualReproduction(y)) -> MixesGenesUpMoreThan(x,y))", "score": 0}
{"id": "eqasc_train_13654", "prediction": "all x.(Arthropod(x) -> (LifeCycle(x) & MixingGenesUp(x)))", "score": 0}
{"id": "eqasc_train_13655", "prediction": "all x.(Insect(x) -> HasLifeCycleWithSexualReproduction(x))", "score": 0}
{"id": "eqasc_train_13656", "prediction": "all x.(Scorpodon(x) -> (LowerReproductionRate(x) & Arthropod(x)))", "score": 0}
{"id": "eqasc_train_13657", "prediction": "all x.(Scorpion(x) -> LowReproductionRate(x))", "score": 0}
{"id": "eqasc_train_13658", "prediction": "all x y.((Astronaut(x) & PreservedFood(y)) -> RequiresForExtendedFlights(x,y))", "score": 0}
{"id": "eqasc_train_13659", "prediction": "all x.(SpaceTravel(x) -> (TrainedAstronaut(x) & -TrainedAstronaut(x)))", "score": 0}
{"id": "eqasc_train_13660", "prediction": "all x y.((SpaceTraveler(x) & ExtendedFlight(y)) -> RequiresPreservedFood(x,y))", "score": 0}
{"id": "eqasc_train_13661", "prediction": "all x.(FreezeDrying(x) -> PreservesMaterials(x))", "score": 0}
{"id": "eqasc_train_13662", "prediction": "all x.(FreezeDryingFood(x) -> ViableForExtendedFlights(x))", "score": 0}
{"id": "eqasc_train_13663", "prediction": "all x.(Astronaut(x) -> (Scientist(x) & SpaceExplorer(x)))", "score": 0}
{"id": "eqasc_train_13664", "prediction": "all x.((Scientist(x) & SpaceExplorer(x)) -> RequiresPreservedFoodForExtendedFlights(x))", "score": 0}
{"id": "eqasc_train_13665", "prediction": "exists x.(Food(x) & DehydratedForEarth(x))", "score": 0}
{"id": "eqasc_train_13666", "prediction": "all x y.((Astronaut(x) & DehydratedFood(y)) -> RequiresForExtendedFlights(x,y))", "score": 0}
{"id": "eqasc_train_13667", "prediction": "all x.(SpaceExplorer(x) -> RequiresPreservedFood(x))", "score": 0}
{"id": "eqasc_train_13668", "prediction": "all x.(Astronaut(x) -> GoesOutIntoSpace(x))", "score": 0}
{"id": "eqasc_train_13669", "prediction": "all x.((GoesOutIntoSpace(x) & RequiresPreservedFoodForExtendedFlights(x)) -> RequiresPreservedFoodForExtendedFlights(x))", "score": 0}
{"id": "eqasc_train_13670", "prediction": "all x.(ShuttleFood(x) -> (PreservedByDehydration(x) & SavesWeight(x) & SavesStorageSpace(x)))", "score": 0}
{"id": "eqasc_train_13671", "prediction": "all x y.((Astronaut(x) & SpaceShuttle(y)) -> TravelsInto(x,y))", "score": 0}
{"id": "eqasc_train_13672", "prediction": "all x y.((SpaceShuttleTraveler(x) & SpaceShuttle(y)) -> RequiresPreservedFood(x,y))", "score": 0}
{"id": "eqasc_train_13673", "prediction": "all x.(Crewmember(x) -> (Astronaut(x) & Virgil(x)))", "score": 0}
{"id": "eqasc_train_13674", "prediction": "all x.(Crewmember(x) -> RequiresPreservedFood(x))", "score": 0}
{"id": "eqasc_train_13675", "prediction": "all x.(Rocket(x) -> UsedInSpaceFlight(x))", "score": 0}
{"id": "eqasc_train_13676", "prediction": "all x y.((Astronaut(x) & Space(y)) -> RequiresPreservedFood(x,y))", "score": 0}
{"id": "eqasc_train_13677", "prediction": "all x.(Food(x) -> (ContainsCalories(x) & EnergyContent(x)))", "score": 0}
{"id": "eqasc_train_13678", "prediction": "all x y.((Astronaut(x) & ExtendedFlight(y)) -> RequiresEnergyFor(x,y))", "score": 0}
{"id": "eqasc_train_13679", "prediction": "all x.(CustomFood(x) & CustomMeal(x))", "score": 0}
{"id": "eqasc_train_13680", "prediction": "all x.(Astronaut(x) -> RequiresPreservedMeals(x))", "score": 0}
{"id": "eqasc_train_13681", "prediction": "all x y.((Astronaut(x) & TripIntoSpace(x)) -> EatsFoodsPreservedByIrradiation(x,y))", "score": 0}
{"id": "eqasc_train_13682", "prediction": "all x y.((Astronaut(x) & Space(y)) -> (RequiresFood(x,y) & Irradiated(x)))", "score": 0}
{"id": "eqasc_train_13683", "prediction": "all x y.((Food(x) & Astronaut(y)) -> IrradiatedFor(x,y))", "score": 0}
{"id": "eqasc_train_13684", "prediction": "all x y.((Food(x) & SpaceTravel(y)) -> IrradiatedFor(x,y))", "score": 0}
{"id": "eqasc_train_13685", "prediction": "all x.(Preservative(x) -> ExtendedShelfLife(x))", "score": 0}
{"id": "eqasc_train_13686", "prediction": "all x y.((Preservative(x) & Food(y)) -> (AddedTo(x,y) & ProlongsShelfLife(x,y)))", "score": 0}
{"id": "eqasc_train_13687", "prediction": "all x.((ProcessFood(x) | CancelledFood(x) | PreservedFood(x)) -> DecreasedNutritiveValue(x))", "score": 0}
{"id": "eqasc_train_13688", "prediction": "all x y.((Astronaut(x) & CannyFood(y)) -> RequiresForExtendedFlights(x,y))", "score": 0}
{"id": "eqasc_train_13689", "prediction": "all x.(Invertebrates(x) -> (LacksVertebralColumn(x) | LacksBackbone(x)))", "score": 0}
{"id": "eqasc_train_13690", "prediction": "all x.(Jellyfish(x) -> -HasBackbone(x))", "score": 0}
{"id": "eqasc_train_13691", "prediction": "all x.(Insect(x) -> -HasBackbone(x))", "score": 0}
{"id": "eqasc_train_13692", "prediction": "all x.(Fish(x) -> (AquaticAnimal(x) & -LacksVertebralColumn(x)))", "score": 0}
{"id": "eqasc_train_13693", "prediction": "all x y.((Invertebrate(x) & Vertebrate(y)) -> Nutritious(x,y))", "score": 0}
{"id": "eqasc_train_13694", "prediction": "all x.((Animal(x) & -Backbone(x)) -> Nutritious(x))", "score": 0}
{"id": "eqasc_train_13695", "prediction": "all x.(Insect(x) -> (Animal(x) & -VertebralColumn(x) & -Backbone(x)))", "score": 0}
{"id": "eqasc_train_13696", "prediction": "all x.(Insect(x) -> (LacksVertebralColumn(x) | LacksBackbone(x)))", "score": 0}
{"id": "eqasc_train_13697", "prediction": "all x.(Insect(x) -> LacksVertebralColumn(x))", "score": 0}
{"id": "eqasc_train_13698", "prediction": "all x.(VertebralBody(x) -> (AsSupportColumn(x) & HoldsUpSpine(x)))", "score": 0}
{"id": "eqasc_train_13699", "prediction": "all x.(Invertebrate(x) -> (Animal(x) & LacksSupportColumn(x)))", "score": 0}
{"id": "eqasc_train_13700", "prediction": "(all x.(Invertebrate(x) -> -Backbone(x)) & all y.(Vertebrate(y) -> Backbone(y)))", "score": 0}
{"id": "eqasc_train_13701", "prediction": "all x.(Vertebrate(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_train_13702", "prediction": "all x.((Millipede(x) | Spider(x) | Invertebrate(x)) -> TakenAsWell(x))", "score": 0}
{"id": "eqasc_train_13703", "prediction": "all x.(Millipede(x) -> LacksVertebralColumn(x))", "score": 0}
{"id": "eqasc_train_13704", "prediction": "all x.(Lobster(x) -> (Invertebrate(x) & Animal(x) & -Backbone(x)))", "score": 0}
{"id": "eqasc_train_13705", "prediction": "all x.(Lobster(x) -> -HasBackbone(x))", "score": 0}
{"id": "eqasc_train_13706", "prediction": "all x.((Snail(x) | Slug(x)) -> Invertebrate(x))", "score": 0}
{"id": "eqasc_train_13707", "prediction": "all x.((Snail(x) | Slug(x)) -> LacksBackbone(x))", "score": 0}
{"id": "eqasc_train_13708", "prediction": "all x.(Invertebrate(x) -> HasExoskeleton(x))", "score": 0}
{"id": "eqasc_train_13709", "prediction": "all x.((Animal(x) & (-VertebralColumn(x) | -Backbone(x))) -> HasExoskeleton(x))", "score": 0}
{"id": "eqasc_train_13710", "prediction": "all x.(Snail(x) -> (LacksVertebralColumn(x) & -LacksVertebralColumn(x)))", "score": 0}
{"id": "eqasc_train_13711", "prediction": "all x.(Geckos(x) -> (HasBackbones(x) & Reptile(x)))", "score": 0}
{"id": "eqasc_train_13712", "prediction": "all x.(Geckos(x) -> -Invertebrate(x))", "score": 0}
{"id": "eqasc_train_13713", "prediction": "all x.(Insect(x) -> LacksBackbone(x))", "score": 0}
{"id": "eqasc_train_13714", "prediction": "all x.(Invertebrate(x) -> (Anostrate(x) | Ostracod(x)))", "score": 0}
{"id": "eqasc_train_13715", "prediction": "all x.(Anostrans(x) -> (LacksVertebralColumn(x) | LacksBackbone(x)))", "score": 0}
{"id": "eqasc_train_13716", "prediction": "all x.(Glacier(x) -> CausesMechanicalWeathering(x))", "score": 0}
{"id": "eqasc_train_13717", "prediction": "all x.(Glacier(x) -> ProducesDetritus(x))", "score": 0}
{"id": "eqasc_train_13718", "prediction": "all x y.((Glacier(x) & Rock(y)) -> BreaksDown(x,y))", "score": 0}
{"id": "eqasc_train_13719", "prediction": "all x.((Ice(x) & PhysicallyBreaksRock(x)) -> MechanicalWeathering(x))", "score": 0}
{"id": "eqasc_train_13720", "prediction": "all x y.((Glacier(x) & Rock(y)) -> CausesBreakApart(x,y))", "score": 0}
{"id": "eqasc_train_13721", "prediction": "all x.(MechanicalWeathering(x) -> (CreatesSediment(x) & TransportedViaWindWaterIce(x)))", "score": 0}
{"id": "eqasc_train_13722", "prediction": "all x y.((Glacier(x) & Glacier(y)) -> CreatesSediment(x,y))", "score": 0}
{"id": "eqasc_train_13723", "prediction": "all x.((Lake(x) & GlacierFormed(x)) -> Karakul(x))", "score": 0}
{"id": "eqasc_train_13724", "prediction": "all x.(Lake(x) -> (FormedByMechanicalWeathering(x) & FormedByMechanicalWeathering(x)))", "score": 0}
{"id": "eqasc_train_13725", "prediction": "all x.(Glacier(x) -> ProducesDetritus(x))", "score": 0}
{"id": "eqasc_train_13726", "prediction": "all x.(Glacier(x) -> CanProduceDetritus(x))", "score": 0}
{"id": "eqasc_train_13727", "prediction": "all x y.((EatsFood(x) & ContainsPesticides(x)) -> NegativeImpactOnHumans(y))", "score": 0}
{"id": "eqasc_train_13728", "prediction": "all x.(Herbicide(x) -> (LeadingTypeOfPesticide(x) & UserExpense(x) & VolumesUsed(x)))", "score": 0}
{"id": "eqasc_train_13729", "prediction": "all x.((EatsFood(x) & ContainsHerbicides(x)) -> NegativeImpactOnHumans(x))", "score": 0}
{"id": "eqasc_train_13730", "prediction": "all x.(Pesticide(x) -> KillsPests(x))", "score": 0}
{"id": "eqasc_train_13731", "prediction": "all x y.((EatsFood(x) & ContainsPestKillingChemicals(x)) -> NegativeImpactOnHumans(y))", "score": 0}
{"id": "eqasc_train_13732", "prediction": "all x.((EatsFood(x) & ContainsDDT(x)) -> NegativeImpactOnHumans(x))", "score": 0}
{"id": "eqasc_train_13733", "prediction": "all x.((Pesticide(x) & WidelyUsedOnFood(x)) -> (CausesCancer(x) | SuspiciousOfCausingCancer(x)))", "score": 0}
{"id": "eqasc_train_13734", "prediction": "all x y.((Eating(x) & ContainsPesticides(x)) -> CausesCancer(y))", "score": 0}
{"id": "eqasc_train_13735", "prediction": "all x.((Food(x) & PorousStrawberries(x)) -> HardToWashFreeOfPesticides(x))", "score": 0}
{"id": "eqasc_train_13736", "prediction": "all x.((EatsUnwashedStrawberries(x) & Humans(x)) -> NegativeImpact(x))", "score": 0}
{"id": "eqasc_train_13737", "prediction": "all x.(PesticideExposure(x) -> (InOrOnBody(x) | OnBody(x)))", "score": 0}
{"id": "eqasc_train_13738", "prediction": "all x.(PesticideExposition(x) -> (InOrOnBody(x) & NegativeImpact(x)))", "score": 0}
{"id": "eqasc_train_13739", "prediction": "all x.(Mammal(x) -> (GeneratesHeat(x) & HighMetabolicRate(x)))", "score": 0}
{"id": "eqasc_train_13740", "prediction": "all x.((MetabolicRate(x) & Resting(x)) -> ContributesToCaloriesBurning(x))", "score": 0}
{"id": "eqasc_train_13741", "prediction": "all x.(Mammal(x) -> (GeneratesHeat(x) & BurnsCalories(x)))", "score": 0}
{"id": "eqasc_train_13742", "prediction": "all x.(AerobicExercise(x) -> IncreasedMetabolicRate(x))", "score": 0}
{"id": "eqasc_train_13743", "prediction": "all x.(Mammal(x) -> GeneratesHeatByAerobicExercise(x))", "score": 0}
{"id": "eqasc_train_13744", "prediction": "all x.(Human(x) -> GeneratesBodyHeat(x))", "score": 0}
{"id": "eqasc_train_13745", "prediction": "all x y.((Food(x) & Mammal(y)) -> KeepsMetabolicRatesHigh(x,y))", "score": 0}
{"id": "eqasc_train_13746", "prediction": "all x.(FastMetabolism(x) -> (MoreCaloriesConsumed(x) & UsuallyWeightLoss(x)))", "score": 0}
{"id": "eqasc_train_13747", "prediction": "all x.(Mammal(x) -> (GeneratesHeat(x) & ConsumesCalories(x)))", "score": 0}
{"id": "eqasc_train_13748", "prediction": "all x.(Human(x) -> (GeneratesHeat(x) & KeepsMetabolicRateHigh(x)))", "score": 0}
{"id": "eqasc_train_13749", "prediction": "all x.(Bird(x) -> (HighMetabolicRate(x) & HighEnergyRequirement(x)))", "score": 0}
{"id": "eqasc_train_13750", "prediction": "all x.(Bird(x) -> (Mammal(x) & GeneratesHeat(x) & HighEnergyRequirement(x)))", "score": 0}
{"id": "eqasc_train_13751", "prediction": "all x.(Dolphin(x) -> (Mammal(x) & BreathesAir(x)))", "score": 0}
{"id": "eqasc_train_13752", "prediction": "all x.(Dolphin(x) -> (GeneratesHeat(x) & KeepsMetabolicRateHigh(x)))", "score": 0}
{"id": "eqasc_train_13753", "prediction": "all x.(TreeSquirrelManagement(x) -> (Mammal(x) & CommonAlabama(x)))", "score": 0}
{"id": "eqasc_train_13754", "prediction": "all x.(TreeSquirrel(x) -> (GeneratesHeat(x) & KeepsMetabolicRateHigh(x)))", "score": 0}
{"id": "eqasc_train_13755", "prediction": "all x.(Shrew(x) -> HighestMetabolismOfMammal(x))", "score": 0}
{"id": "eqasc_train_13756", "prediction": "all x.(Shrew(x) -> (GeneratesMostHeat(x) & KeepsMetabolicRateHigh(x)))", "score": 0}
{"id": "eqasc_train_13757", "prediction": "all x.(ExcessBodyWeight(x) -> IncreasesMetabolicHeatProduction(x))", "score": 0}
{"id": "eqasc_train_13758", "prediction": "all x.(ExcessBodyWeight(x) -> RaisesMetabolism(x))", "score": 0}
{"id": "eqasc_train_13759", "prediction": "all x.(Pug(x) -> (GeneratesHeat(x) & KeepsMetabolicRateHigh(x)))", "score": 0}
{"id": "eqasc_train_13760", "prediction": "all x y.((RefractingSunlight(x) & Sunlight(y)) -> CausesSunlightToSplitIntoDifferentColors(x,y))", "score": 0}
{"id": "eqasc_train_13761", "prediction": "all x y.((Sunlight(x) & PassedThroughPrism(x)) -> SplitIntoColorsOfSpectrum(x,y))", "score": 0}
{"id": "eqasc_train_13762", "prediction": "all x.(Color(x) -> RainbowSpectrum(x))", "score": 0}
{"id": "eqasc_train_13763", "prediction": "all x y.((RefractingSunlight(x) & Rainbow(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_train_13764", "prediction": "all x y.((Light(x) & Sunlight(y) & HitsRaindrops(y)) -> SplitsIntoDifferentColors(x,y))", "score": 0}
{"id": "eqasc_train_13765", "prediction": "all x y.((Prism(x) & Sunlight(y)) -> CausesSunlightToSplitIntoDifferentColors(x,y))", "score": 0}
{"id": "eqasc_train_13766", "prediction": "all x y.((BbendingLightRays(x) & Color(y)) -> SeparatesIntoDifferentColors(x,y))", "score": 0}
{"id": "eqasc_train_13767", "prediction": "all x.(Lens(x) -> (Bends(x) | Refracts(x)))", "score": 0}
{"id": "eqasc_train_13768", "prediction": "all x.(Lens(x) -> CausesSunlightToSplitIntoDifferentColors(x))", "score": 0}
{"id": "eqasc_train_13769", "prediction": "all x y.((BornOfLightRays(x) & Sunlight(y)) -> CausesSunlightToSplitIntoDifferentColors(x,y))", "score": 0}
{"id": "eqasc_train_13770", "prediction": "all x.(WhiteSunlight(x) -> SplitIntoRainbowOfColors(x))", "score": 0}
{"id": "eqasc_train_13771", "prediction": "all x.(RefractingSunlight(x) -> CausesRainbowOfDifferentColors(x))", "score": 0}
{"id": "eqasc_train_13772", "prediction": "all x y.((Sunlight(x) & Prism(y)) -> (PassesThrough(x,y) & LightSeparatedIntoRainbow(x)))", "score": 0}
{"id": "eqasc_train_13773", "prediction": "all x.(RefractingSunlight(x) -> (SunlightSplitsIntoColors(x) & FormsRainbow(x)))", "score": 0}
{"id": "eqasc_train_13774", "prediction": "all x y.((TinyWaterDroplet(x) & Prism(y)) -> RefractsLight(x,y))", "score": 0}
{"id": "eqasc_train_13775", "prediction": "all x y.((Prism(x) & Sunlight(y)) -> CausesSunlightToSplitIntoDifferentColors(x,y))", "score": 0}
{"id": "eqasc_train_13776", "prediction": "all x y.((Telephone(x) & Person(y)) -> (TransmitsSound(x,y) & UsedForCommunication(x,y)))", "score": 0}
{"id": "eqasc_train_13777", "prediction": "all x.(SoundTransmittedWithVideo(x) -> -TransmittedWithVideo(x))", "score": 0}
{"id": "eqasc_train_13778", "prediction": "all x.((Telephone(x) | Video(x)) -> CanBeUsedForCommunication(x))", "score": 0}
{"id": "eqasc_train_13779", "prediction": "(all x.(Voice(x) -> ImportantSound(x)))", "score": 0}
{"id": "eqasc_train_13780", "prediction": "all x.(Person(x) -> TransmitVoiceWithTelephones(x))", "score": 0}
{"id": "eqasc_train_13781", "prediction": "all x y.((Loudspeaker(x) & Signal(y)) -> TurnsIntoSound(x,y))", "score": 0}
{"id": "eqasc_train_13782", "prediction": "all x y.((Telephone(x) & Person(y)) -> (TransmitsSignals(x,y) & UsedForCommunication(x,y)))", "score": 0}
{"id": "eqasc_train_13783", "prediction": "all x y.((TelephoneConversation(x) & Data(y)) -> TransmittedThroughOpticalFibers(x))", "score": 0}
{"id": "eqasc_train_13784", "prediction": "all x y.((Phone(x) & Phone(y)) -> (TransmittedThroughOpticalFibers(x,y)))", "score": 0}
{"id": "eqasc_train_13785", "prediction": "all x.(Sound(x) -> (VibrationsOfMaterialObjects(x) & ProducedBy(x,y)))", "score": 0}
{"id": "eqasc_train_13786", "prediction": "all x y.((Telephone(x) & Person(y)) -> (TransmitsWaves(x,y) & ProducesVibrationsOfMaterialObjects(x)))", "score": 0}
{"id": "eqasc_train_13787", "prediction": "all x.((Wave(x) & Audible(x)) -> SoundWave(x))", "score": 0}
{"id": "eqasc_train_13788", "prediction": "all x.(Telephone(x) -> (TransmitsAudiibleWaves(x) & Communication(x)))", "score": 0}
{"id": "eqasc_train_13789", "prediction": "all x.(CellPhone(x) -> (Radio(x) & TelephoneCompanyConnection(x)))", "score": 0}
{"id": "eqasc_train_13790", "prediction": "all x y.((CellPhone(x) & Person(y)) -> (TransmitsSound(x,y) & UsedForCommunication(x,y)))", "score": 0}
{"id": "eqasc_train_13791", "prediction": "all x y.((Telephone(x) & Person(y)) -> TransmitsMechanicalWaves(x,y))", "score": 0}
{"id": "eqasc_train_13792", "prediction": "all x.(SoundWaves(x) -> LongitudinalWaves(x))", "score": 0}
{"id": "eqasc_train_13793", "prediction": "all x y.((Telephone(x) & Person(y)) -> (TransmitsWaves(x,y) & UsedForCommunication(x,y)))", "score": 0}
{"id": "eqasc_train_13794", "prediction": "all x y.((Telephone(x) & Person(y) & TransmitsWaves(y,x)) -> UsedForCommunication(x,y))", "score": 0}
{"id": "eqasc_train_13795", "prediction": "all x.(Telephone(x) -> ConveysSoundOverDistance(x))", "score": 0}
{"id": "eqasc_train_13796", "prediction": "all x.(Telephone(x) -> CommunicatesOverDistance(x))", "score": 0}
{"id": "eqasc_train_13797", "prediction": "all x.(Darkness(x) -> NegativeImpactOnPhotosynthesis(x))", "score": 0}
{"id": "eqasc_train_13798", "prediction": "all x.(PlantGrowth(x) -> DependentOnPhotosynthesis(x))", "score": 0}
{"id": "eqasc_train_13799", "prediction": "all x.(Darkness(x) -> NegativeImpactOnPlantGrowth(x))", "score": 0}
{"id": "eqasc_train_13800", "prediction": "all x.(Plant(x) -> UsesPhotosynthesisToMakeFood(x))", "score": 0}
{"id": "eqasc_train_13801", "prediction": "all x y.((Darkness(x) & PlantLife(y)) -> NegativelyAffects(x,y))", "score": 0}
{"id": "eqasc_train_13802", "prediction": "all x.(Darkness(x) -> NegativeImpactInPlantFeeding(x))", "score": 0}
{"id": "eqasc_train_13803", "prediction": "all x.(SolarEclipse(x) -> (SkyCanGetDark(x)))", "score": 0}
{"id": "eqasc_train_13804", "prediction": "all x.(SolarEclipse(x) -> NegativeImpactOnPhotosynthesis(x))", "score": 0}
{"id": "eqasc_train_13805", "prediction": "all x.(Darkness(x) -> NegativeImpactOnPlantGrowth(x))", "score": 0}
{"id": "eqasc_train_13806", "prediction": "all x y.((Darkness(x) & Sun(y)) -> ImpactOnEnergy(x,y))", "score": 0}
{"id": "eqasc_train_13807", "prediction": "all x y.((Darkness(x) & Plant(y)) -> NegativeImpactOnCarbohydrates(x,y))", "score": 0}
{"id": "eqasc_train_13808", "prediction": "all x.((Light(x) & Photosynthesis(x)) -> ProducesOxygen(x))", "score": 0}
{"id": "eqasc_train_13809", "prediction": "all x.(Darkness(x) -> NegativeImpactOnOxygenProcess(x))", "score": 0}
{"id": "eqasc_train_13810", "prediction": "all x y.((Protein(x) & HumanBody(y)) -> UsedToRepairCells(x,y))", "score": 0}
{"id": "eqasc_train_13811", "prediction": "all x.((Meat(x) | Fish(x) | Chicken(x)) -> RichProteinSource(x))", "score": 0}
{"id": "eqasc_train_13812", "prediction": "all x y.((Meat(x) & Fish(y) & Chicken(y)) -> (RepairsCells(x,y) & HumanBody(x)))", "score": 0}
{"id": "eqasc_train_13813", "prediction": "all x.(Milk(x) -> ContainsProtein(x))", "score": 0}
{"id": "eqasc_train_13814", "prediction": "all x y.((Milk(x) & HumanBody(y)) -> HelpsRepairCells(x,y))", "score": 0}
{"id": "eqasc_train_13815", "prediction": "all x.(Protein(x) -> (EssentialToStructure(x) & EssentialToFunction(x)))", "score": 0}
{"id": "eqasc_train_13816", "prediction": "all x.((Cell(x) & RepairedRegularly(x)) -> FunctionProperly(x))", "score": 0}
{"id": "eqasc_train_13817", "prediction": "all x y z.((DNA(x) & Protein(y) & Cell(z)) -> (MakesProteins(x) & BuildsCells(y) & MakesUpPeople(z)))", "score": 0}
{"id": "eqasc_train_13818", "prediction": "all x y.((DNA(x) & Cell(y)) -> Repairs(x,y))", "score": 0}
{"id": "eqasc_train_13819", "prediction": "all x.(Protein(x) -> (NecessaryForGrowth(x) & NecessaryForRepair(x)))", "score": 0}
{"id": "eqasc_train_13820", "prediction": "all x.(Protein(x) -> NecessaryForCellGrowth(x))", "score": 0}
{"id": "eqasc_train_13821", "prediction": "all x.(PainInBody(x) -> (IndicatesWound(x) & RequiresCellRepair(x) & RequiresCellRegeneration(x)))", "score": 0}
{"id": "eqasc_train_13822", "prediction": "all x.(WoundHealing(x) -> RequiresProtein(x))", "score": 0}
{"id": "eqasc_train_13823", "prediction": "all x.(Meat(x) -> GoodProteinSource(x))", "score": 0}
{"id": "eqasc_train_13824", "prediction": "all x y.((Meat(x) & HumanBody(y)) -> HelpsRepairCells(x,y))", "score": 0}
{"id": "eqasc_train_13825", "prediction": "all x.(AminoAcid(x) -> FormsProtein(x))", "score": 0}
{"id": "eqasc_train_13826", "prediction": "all x y.((AminoAcid(x) & HumanBody(y)) -> UsedToRepairCells(x,y))", "score": 0}
{"id": "eqasc_train_13827", "prediction": "all x.(Food(x) -> ContainsProtein(x))", "score": 0}
{"id": "eqasc_train_13828", "prediction": "all x y.((Food(x) & HumanBody(y)) -> UsedToRepairCells(x,y))", "score": 0}
{"id": "eqasc_train_13829", "prediction": "all x.(Enzyme(x) -> (ProvidesCellularEnergy(x) & RepairsTissueOrgansAndCells(x)))", "score": 0}
{"id": "eqasc_train_13830", "prediction": "all x.(Enzyme(x) -> (Protein(x) & ProvidesCellularEnergy(x)))", "score": 0}
{"id": "eqasc_train_13831", "prediction": "all x.((Biomolecule(x) & Protein(x)) -> (ComposedOf(x,y) & (OneChain(y) | ManyChains(y)) & FoldedIntoCompactForm(y)))", "score": 0}
{"id": "eqasc_train_13832", "prediction": "all x y z.((Biomolecule(x) & HumanBody(y) & Cell(z)) -> UsedToRepair(x,y,z))", "score": 0}
{"id": "eqasc_train_13833", "prediction": "all x y.((Wind(x) & Electricity(y)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_train_13834", "prediction": "all x.((Welcomes(x) & NeedsGas(x) & NeedsElectricity(x)) -> (Heating(x) | Lighting(x)))", "score": 0}
{"id": "eqasc_train_13835", "prediction": "all x y.((Power(x) & Wind(y)) -> ProducedFrom(x,y))", "score": 0}
{"id": "eqasc_train_13836", "prediction": "all x.(WindTurbine(x) -> (WindTurbine(x) & Windmill(x) & GeneratesElectricity(x)))", "score": 0}
{"id": "eqasc_train_13837", "prediction": "all x.(Turbine(x) -> (UsedToProduceElectricity(x) & ProducesElectricity(x)))", "score": 0}
{"id": "eqasc_train_13838", "prediction": "all x y.((WindPoweredEnergy(x) & Wind(y)) -> (Provides(x,y) & Collects(x,y)))", "score": 0}
{"id": "eqasc_train_13839", "prediction": "all x.(WindTurbine(x) -> ProducesElectricity(x))", "score": 0}
{"id": "eqasc_train_13840", "prediction": "all x.(Wind(x) -> ProducesEnergy(x))", "score": 0}
{"id": "eqasc_train_13841", "prediction": "all x.(Electricity(x) -> ProducesHeat(x))", "score": 0}
{"id": "eqasc_train_13842", "prediction": "all x y.((Wind(x) & Heat(y)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_train_13843", "prediction": "all x.(Wind(x) -> AirInMotion(x))", "score": 0}
{"id": "eqasc_train_13844", "prediction": "all x.(AirInMotion(x) -> ProducesElectricity(x))", "score": 0}
{"id": "eqasc_train_13845", "prediction": "all x y.((PressureDifference(x) & Electricity(y)) -> Produces(x,y))", "score": 0}
{"id": "eqasc_train_13846", "prediction": "all x.(Electricity(x) -> PowersHouseholds(x))", "score": 0}
{"id": "eqasc_train_13847", "prediction": "all x.(Wind(x) -> PowersHouseholds(x))", "score": 0}
{"id": "eqasc_train_13848", "prediction": "all x.(Wind(x) -> CausedByPressureDifferences(x))", "score": 0}
{"id": "eqasc_train_13849", "prediction": "all x.((CausedByPressureDifferencesInAtmosphere(x) & CausedByPressureDifferencesInAtmosphere(x)) -> UsedForProducingElectricity(x))", "score": 0}
{"id": "eqasc_train_13850", "prediction": "all x.(DifferentialHeatingOfAir(x) -> ProducesWind(x))", "score": 0}
{"id": "eqasc_train_13851", "prediction": "all x.(DifferentialHeatingOfAir(x) -> CanBeHarnessedForElectricityProduction(x))", "score": 0}
{"id": "eqasc_train_13852", "prediction": "all x y.((Radio(x) & ElectricalEnergy(y)) -> ConvertsToVibrations(x,y))", "score": 0}
{"id": "eqasc_train_13853", "prediction": "all x.(Sound(x) -> VibrationalEnergy(x))", "score": 0}
{"id": "eqasc_train_13854", "prediction": "all x.(Radio(x) -> ConvertsElectricalEnergyToSound(x))", "score": 0}
{"id": "eqasc_train_13855", "prediction": "all x.(OrdinaryHearing(x) -> (StimulatesBonesInInnerEar(x) & Vibration(x)))", "score": 0}
{"id": "eqasc_train_13856", "prediction": "all x y.((HumanEars(x) & Radio(y)) -> CanHear(x,y))", "score": 0}
{"id": "eqasc_train_13857", "prediction": "all x.(Radio(x) -> TransmittedElectricalEnergy(x))", "score": 0}
{"id": "eqasc_train_13858", "prediction": "all x y.((ElectricalEnergy(x) & Vibration(y)) -> TurnsInto(x,y))", "score": 0}
{"id": "eqasc_train_13859", "prediction": "all x.(Sound(x) -> CausedByVibrationsInAir(x))", "score": 0}
{"id": "eqasc_train_13860", "prediction": "all x.(Radio(x) -> CreatesSoundWaves(x))", "score": 0}
{"id": "eqasc_train_13861", "prediction": "all x.(Radio(x) -> UsesSoundWaves(x))", "score": 0}
{"id": "eqasc_train_13862", "prediction": "all x.(Sound(x) -> Vibration(x))", "score": 0}
{"id": "eqasc_train_13863", "prediction": "all x y.((Radio(x) & ElectricalEnergy(y)) -> ConvertsToSound(x,y))", "score": 0}
{"id": "eqasc_train_13864", "prediction": "all x.(Sound(x) -> CausedByVibrations(x))", "score": 0}
{"id": "eqasc_train_13865", "prediction": "all x.(Radio(x) -> ConvertsEnergyToSounds(x))", "score": 0}
{"id": "eqasc_train_13866", "prediction": "all x y.((Radio(x) & ElectronFlow(y)) -> ConvertsToVibrations(x,y))", "score": 0}
{"id": "eqasc_train_13867", "prediction": "all x.((Energy(x) & Sound(x)) -> (ProducedByVibrations(x) & TravelsInWaves(x)))", "score": 0}
{"id": "eqasc_train_13868", "prediction": "all x.(Radio(x) -> (ConvertsElectricalEnergy(x) & Sound(x) & TravelsInWaves(x)))", "score": 0}
{"id": "eqasc_train_13869", "prediction": "all x.(Radio(x) -> UsesBattery(x))", "score": 0}
{"id": "eqasc_train_13870", "prediction": "all x y.((BetterSenses(x) & Animal(y)) -> PositiveImpactOnSurvival(x,y))", "score": 1}
{"id": "eqasc_train_13871", "prediction": "all x.(SenseOfSmell(x) -> CanDetectOdors(x))", "score": 0}
{"id": "eqasc_train_13872", "prediction": "all x y.((Animal(x) & Animal(y)) -> BetterDetectionOdors(x,y))", "score": 0}
{"id": "eqasc_train_13873", "prediction": "all x.(Antilope(x) -> (FineSenseOfHearing(x) & SenseDangerLongInAdvance(x)))", "score": 0}
{"id": "eqasc_train_13874", "prediction": "all x.((Antelope(x) & ExcellentHearing(x)) -> HelpsSurvive(x))", "score": 0}
{"id": "eqasc_train_13875", "prediction": "all x.(Cat(x) -> (ExcellentEyesight(x) & ExcellentHearing(x) & ExcellentSenseOfSmell(x)))", "score": 0}
{"id": "eqasc_train_13876", "prediction": "all x y.((Cat(x) & Hearing(y)) -> PositiveImpactOnSurvival(x,y))", "score": 0}
{"id": "eqasc_train_13877", "prediction": "all x.(Dog(x) -> (SocialAnimal(x) & AcuteSenseOfSmell(x)))", "score": 0}
{"id": "eqasc_train_13878", "prediction": "all x y.((BetterSenseOfSmell(x) & Dog(y)) -> PositiveImpactOnSurvival(x,y))", "score": 0}
{"id": "eqasc_train_13879", "prediction": "all x.((Animal(x) & BetterSenses(x)) -> PositiveChanceOfReproduction(x))", "score": 0}
{"id": "eqasc_train_13880", "prediction": "all x.(Bear(x) -> CuriousAnimal(x))", "score": 0}
{"id": "eqasc_train_13881", "prediction": "all x y.((BetterSenses(x) & Bear(y)) -> PositiveImpactOnSurvival(x,y))", "score": 0}
{"id": "eqasc_train_13882", "prediction": "all x.(SenseOfSmell(x) -> InfinitelyBetter(x))", "score": 0}
{"id": "eqasc_train_13883", "prediction": "all x y.((SenseOfSmell(x) & Animal(y)) -> ImpactsSurvival(x,y))", "score": 0}
{"id": "eqasc_train_13884", "prediction": "all x.(Dolphin(x) -> HasEcholocation(x))", "score": 0}
{"id": "eqasc_train_13885", "prediction": "all x y.((Echolocation(x) & Animal(y)) -> PositiveImpactOnSurvival(x,y))", "score": 0}
{"id": "eqasc_train_13886", "prediction": "all x.(Sense(x) -> (Touch(x) | Smell(x) | Taste(x) | Vision(x) | Hearing(x)))", "score": 0}
{"id": "eqasc_train_13887", "prediction": "all x y z.((Animal(x) & Vision(y) & Taste(z) & Touch(y) & Hearing(z) & Smelling(z)) -> (BetterVision(x,y) & BetterTaste(x,z) & BetterTouch(x,y) & BetterTouch(x,y) & BetterTouch(x,z) & PositiveImpactOnSurvival(x)))", "score": 0}
{"id": "eqasc_train_13888", "prediction": "all x.(BetterSenses(x) -> PositiveImpactOnAnimalAbilityToLive(x))", "score": 0}
{"id": "eqasc_train_13889", "prediction": "Possibly the most important sense of all.", "score": -1}
{"id": "eqasc_train_13890", "prediction": "all x y.((BetterSight(x) & Animal(y)) -> PositiveImpactOnSurvival(x,y))", "score": 0}
{"id": "eqasc_train_13891", "prediction": "all x.((Species(x) & Reproduction(x)) -> ImportantAspectOfSurvival(x))", "score": 0}
{"id": "eqasc_train_13892", "prediction": "all x y.((BetterSenses(x) & Animal(y)) -> PositiveImpactOnReproduction(x,y))", "score": 0}
{"id": "eqasc_train_13893", "prediction": "all x y.((BetterSenses(x) & Dog(y)) -> PositiveImpactOnSurvival(x,y))", "score": 1}
{"id": "eqasc_train_13894", "prediction": "all x.(Life(x) -> ReducedToSurvival(x))", "score": 0}
{"id": "eqasc_train_13895", "prediction": "all x.(BetterSenses(x) -> PositiveImpactOnAnimalLife(x))", "score": 0}
{"id": "eqasc_train_13896", "prediction": "all x y.((RunningWater(x) & StandingWater(y)) -> (BetterAbleadsOxygen(x,y) & BetterAbleadsNutrients(x,y)))", "score": 0}
{"id": "eqasc_train_13897", "prediction": "all x.((Water(x) & StandsStill(x) & Stagnant(x)) -> BreedingGroundForMosquitoes(x))", "score": 0}
{"id": "eqasc_train_13898", "prediction": "all x y.((RunningWater(x) & StagnantWater(y)) -> BetterAbleToDissolveOxygenAndNutrients(x,y))", "score": 0}
{"id": "eqasc_train_13899", "prediction": "all x y.((RunningH2o(x) & StandingH2o(y)) -> BetterAbleToDissolveOxygenAndNutrients(x,y))", "score": 0}
{"id": "eqasc_train_13900", "prediction": "all x.(Stream(x) | Creek(x))", "score": 0}
{"id": "eqasc_train_13901", "prediction": "all x y.((Stream(x) & Creek(y)) -> (BetterAbleadingOxygen(x,y) & BetterAbleadingNutrients(x,y)))", "score": 0}
{"id": "eqasc_train_13902", "prediction": "all x y.((Stream(x) & Creek(y)) -> (BetterAbleadingOxygen(x,y) & BetterAbleadingNutrients(x,y)))", "score": 0}
{"id": "eqasc_train_13903", "prediction": "all x y.((River(x) & RunningWater(y)) -> MajorForceOfErosion(x,y))", "score": 0}
{"id": "eqasc_train_13904", "prediction": "all x y.((River(x) & StandingWater(y)) -> BetterAbleToDissolveOxygenAndNutrients(x,y))", "score": 0}
{"id": "eqasc_train_13905", "prediction": "all x y.((River(x) & Large(x) & Warm(x)) -> (HoldsPopulations(x) & ColdRunningWater(y)))", "score": 0}
{"id": "eqasc_train_13906", "prediction": "all x y.((River(x) & Lake(y)) -> (BetterDissolvesOxygen(x,y) & BetterDissolvesNutrients(x,y)))", "score": 0}
{"id": "eqasc_train_13907", "prediction": "all x.(MineralNutrient(x) -> Interrelated(x))", "score": 0}
{"id": "eqasc_train_13908", "prediction": "all x y.((RunningWater(x) & StandingWater(y)) -> (BetterAbleToDissolveOxygen(x,y) & BetterAbleToDissolveMinerals(x,y)))", "score": 0}
{"id": "eqasc_train_13909", "prediction": "all x.((Plant(x) & RichInNutrients(x)) -> Healthy(x))", "score": 0}
{"id": "eqasc_train_13910", "prediction": "all x y.((RunningWater(x) & StandingWater(y)) -> HealthierForPlants(x,y))", "score": 0}
{"id": "eqasc_train_13911", "prediction": "all x.((Oxygen(x) & Nutrients(x)) -> DissolvesEasilyInRivers(x))", "score": 0}
{"id": "eqasc_train_13912", "prediction": "all x y.((RunningH2O(x) & StandingH2O(y)) -> DissolvesOxygenBetter(x,y))", "score": 0}
{"id": "eqasc_train_13913", "prediction": "all x y.((BloodPressure(x) & Artery(y)) -> (HighestIn(x,y) & LowestIn(x,y)))", "score": 0}
{"id": "eqasc_train_13914", "prediction": "all x.(BloodPressure(x) -> PressureOnBloodVesselWalls(x))", "score": 0}
{"id": "eqasc_train_13915", "prediction": "all x y.((VesselWall(x) & Artery(y)) -> (HighestPressureInVesselWalls(x,y) & LowestPressureInVentilations(x,y)))", "score": 0}
{"id": "eqasc_train_13916", "prediction": "all x y.((Blood(x) & Venes(y)) -> (BroughtIntoHeart(x,y) & CarriedAwayByArteries(x)))", "score": 0}
{"id": "eqasc_train_13917", "prediction": "all x y.((Vessel(x) & Heart(y) & LeadsAwayFrom(x,y)) -> BloodPressureHighest(x))", "score": 0}
{"id": "eqasc_train_13918", "prediction": "all x y.((BloodPressure(x) & Heart(y) & BloodConductedAwayFrom(x,y)) -> Highest(x))", "score": 0}
{"id": "eqasc_train_13919", "prediction": "all x.(Vessel(x) -> BringsBloodToHeart(x))", "score": 0}
{"id": "eqasc_train_13920", "prediction": "all x y.((Vessel(x) & BringsBloodToHeart(x) & Artery(y)) -> LowerBloodPressure(x,y))", "score": 0}
{"id": "eqasc_train_13921", "prediction": "all x y.((VesselWall(x) & Artery(y)) -> (HighestForce(x,y) & LowestForce(x,y)))", "score": 0}
{"id": "eqasc_train_13922", "prediction": "all x.((BloodLeavesCapillaries(x) & FlowsIntoVines(x)) -> PressureDecreased(x))", "score": 0}
{"id": "eqasc_train_13923", "prediction": "all x y.((BloodPressure(x) & Artery(y) & Leaves(x,y)) -> Decreases(x))", "score": 0}
{"id": "eqasc_train_13924", "prediction": "all x.(Blood(x) -> (MovesSlowly(x) & VeryLittlePressureInVines(x)))", "score": 0}
{"id": "eqasc_train_13925", "prediction": "all x y.((Vine(x) & Vein(y)) -> LowestPressure(x,y))", "score": 0}
{"id": "eqasc_train_13926", "prediction": "all x.(Vibration(x) -> VeryLowPressure(x))", "score": 0}
{"id": "eqasc_train_13927", "prediction": "all x.(Apocymarin(x) -> RaisesBloodPressure(x))", "score": 0}
{"id": "eqasc_train_13928", "prediction": "all x y.((Apocymarin(x) & Veins(y) & Arteries(y)) -> AffectsAndAttributes(x,y))", "score": 0}
{"id": "eqasc_train_13929", "prediction": "all x.(BloodPressure(x) -> BloodPressure(x))", "score": 0}
{"id": "eqasc_train_13930", "prediction": "all x y.((Blood(x) & Artery(y)) -> (HighestIn(x,y) & LowestIn(x,y)))", "score": 0}
{"id": "eqasc_train_13931", "prediction": "all x.(Vein(x) -> TakesBloodToHeart(x))", "score": 0}
{"id": "eqasc_train_13932", "prediction": "all x y.((BloodPressure(x) & Heart(y) & BloodGoesTo(x,y)) -> Lowest(x))", "score": 0}
{"id": "eqasc_train_13933", "prediction": "all x y.((Arctic(x) & Vein(y)) -> (HighestIn(x,Arctic) & LowestIn(x,Vinations)))", "score": 0}
{"id": "eqasc_train_13934", "prediction": "all x.(Spore(x) -> (MovingWater(x) | MovingWind(x) | MovingOrganisms(x)))", "score": 0}
{"id": "eqasc_train_13935", "prediction": "all x.(SporesFungus(x) -> ReproducesThroughSpores(x))", "score": 0}
{"id": "eqasc_train_13936", "prediction": "all x.(Fungus(x) -> (ReproducesWithMovingWater(x) | ReproducesWithWind(x) | ReproducesWithOtherOrganisms(x)))", "score": 0}
{"id": "eqasc_train_13937", "prediction": "all x y.((Spore(x) & SingleSporeHorse(y)) -> ProducesBillionsOf(x,y))", "score": 0}
{"id": "eqasc_train_13938", "prediction": "all x.((Seed(x) & (MovingWind(x) | MovingOtherOrganisms(x) | MovingWater(x))) -> SpreadsBy(x,y))", "score": 0}
{"id": "eqasc_train_13939", "prediction": "all x.(Fungus(x) -> DispersesByWind(x))", "score": 0}
{"id": "eqasc_train_13940", "prediction": "all x.(Fungus(x) -> (DispersesMaterials(x) & (MovingWater(x) | MovingWind(x) | MovingOtherOrganisms(x))))", "score": 0}
{"id": "eqasc_train_13941", "prediction": "all x.(Fungus(x) -> (ReproducesWithMovingWater(x) | ReproducesWithWind(x) | ReproducesWithOtherOrganisms(x)))", "score": 0}
{"id": "eqasc_train_13942", "prediction": "all x.(Fern(x) -> ReproducesBySpores(x))", "score": 0}
{"id": "eqasc_train_13943", "prediction": "all x.(Fern(x) -> HelpedByWind(x))", "score": 0}
{"id": "eqasc_train_13944", "prediction": "all x.(Fungus(x) -> (Reproduces(x) & SingleCelledAsexualReproductiveBody(x) & DispersedByMovingWaterWindOrOtherOrganisms(x)))", "score": 0}
{"id": "eqasc_train_13945", "prediction": "all x.((Bacteria(x) & DormantForm(x)) -> (DispersedByMovingWater(x) | DispersedByMovingWind(x) | DispersedByMovingOrganisms(x)))", "score": 0}
{"id": "eqasc_train_13946", "prediction": "all x y.((Spore(x) & Human(y)) -> DispersedBy(x,y))", "score": 0}
{"id": "eqasc_train_13947", "prediction": "all x.((Plastic(x) | OtherMulch(x)) -> OffersBorderToSporeDispersal(x))", "score": 0}
{"id": "eqasc_train_13948", "prediction": "all x y.((Plastic(x) & Mulch(y)) -> OffersBarriageToSpores(x,y))", "score": 0}
{"id": "eqasc_train_13949", "prediction": "all x y.((Electrocution(x) & Organism(y)) -> CausesHarmTo(x,y))", "score": 0}
{"id": "eqasc_train_13950", "prediction": "all x.((ElectricalExposition(x) & CausesDeath(x)) -> Electrocution(x))", "score": 0}
{"id": "eqasc_train_13951", "prediction": "all x y.((Electricity(x) & Organism(y) & CausesDeath(x,y)) -> CausesHarmToOrganism(x,y))", "score": 0}
{"id": "eqasc_train_13952", "prediction": "all x y.((ElectricalExposition(x) & Organism(y)) -> CausesHarm(x,y))", "score": 0}
{"id": "eqasc_train_13953", "prediction": "all x.(Electrocution(x) -> ElectricShock(x))", "score": 0}
{"id": "eqasc_train_13954", "prediction": "all x y.((ElectricShock(x) & Organism(y)) -> CausesHarm(x,y))", "score": 0}
{"id": "eqasc_train_13955", "prediction": "all x y.((ElectricShock(x) & Organism(y)) -> CausesHarm(x,y))", "score": 0}
{"id": "eqasc_train_13956", "prediction": "all x y.((Electrocution(x) & Animal(y)) -> CausesHarm(x,y))", "score": 0}
{"id": "eqasc_train_13957", "prediction": "all x.(ElectricalShock(x) -> CausedByCurrentPassingThroughHumanBody(x))", "score": 0}
{"id": "eqasc_train_13958", "prediction": "all x y.((Current(x) & Organism(y) & PassesThrough(x,y)) -> CanHarmTo(x,y))", "score": 0}
{"id": "eqasc_train_13959", "prediction": "all x.(Eagle(x) -> ElectrocutedOnPowerlines(x))", "score": 0}
{"id": "eqasc_train_13960", "prediction": "all x y.((Powerline(x) & Organism(y)) -> CausesHarmTo(x,y))", "score": 0}
{"id": "eqasc_train_13961", "prediction": "all x y.((Electrocution(x) & LivingBeing(y)) -> CausesHarm(x,y))", "score": 0}
{"id": "eqasc_train_13962", "prediction": "all x.((PhysicalActivity(x) & Painful(x)) -> CanBeHarmful(x))", "score": 0}
{"id": "eqasc_train_13963", "prediction": "all x.(Electrocution(x) -> CausesPaining(x))", "score": 0}
{"id": "eqasc_train_13964", "prediction": "all x.((HairDryer(x) & HasShockProtection(x)) -> PreventsElectrocution(x))", "score": 0}
{"id": "eqasc_train_13965", "prediction": "all x.(ShockProtection(x) -> PreventsHarmToOrganism(x))", "score": 0}
{"id": "eqasc_train_13966", "prediction": "all x.(HouseholdWiring(x) -> InvolvedInElectrocutions(x))", "score": 0}
{"id": "eqasc_train_13967", "prediction": "all x.(FaultyHouseholdWiring(x) -> CausesHarmToOrganism(x))", "score": 0}
{"id": "eqasc_train_13968", "prediction": "all x y.((Electrocution(x) & Plant(y)) -> CausesHarmTo(x,y))", "score": 0}
{"id": "eqasc_train_13969", "prediction": "all x.((HairDryer(x) & -BuiltInShockProtectionDevicesInPlug(x)) -> CanCauseElectrocution(x))", "score": 0}
{"id": "eqasc_train_13970", "prediction": "all x y.((HairDryer(x) & -BuiltInShockProtectionDevicesInPlug(x)) -> CausesHarmToOrganism(y))", "score": 0}
{"id": "eqasc_train_13971", "prediction": "all x.((ElectrocutionDeath(x) & Horse(x) & ChewingOnElectricalCord(x)) -> PrettyCommon(x))", "score": 0}
{"id": "eqasc_train_13972", "prediction": "all x y.((ElectricalDeath(x) & Organism(y)) -> CausesHarm(x,y))", "score": 0}
{"id": "eqasc_train_13973", "prediction": "all x.(Death(x) -> AttributedToElectrocution(x))", "score": 0}
{"id": "eqasc_train_13974", "prediction": "all x.(Electricity(x) -> CausesDeath(x))", "score": 0}
{"id": "eqasc_train_13975", "prediction": "all x y.((Animal(x) & Mate(y)) -> NeedsToAttract(x,y))", "score": 0}
{"id": "eqasc_train_13976", "prediction": "all x.(Mammal(x) -> (Animal(x) & RaisesYoungOnMilk(x) & TypicallyGivesBirthToLiveYoung(x)))", "score": 0}
{"id": "eqasc_train_13977", "prediction": "all x.(Mammal(x) -> NeedsAttractMate(x))", "score": 0}
{"id": "eqasc_train_13978", "prediction": "all x.(Animal(x) -> ReproducesByHavingYoung(x))", "score": 0}
{"id": "eqasc_train_13979", "prediction": "all x.((Animal(x) & AttractsMate(x)) -> HasYoung(x))", "score": 0}
{"id": "eqasc_train_13980", "prediction": "all x.(Pheromone(x) -> (exists inAnimals(x) & Scent(x) & AttractsSexPartners(x)))", "score": -1}
{"id": "eqasc_train_13981", "prediction": "all x y.((Animal(x) & Pheromone(y)) -> UsesToReproduce(x,y))", "score": 0}
{"id": "eqasc_train_13982", "prediction": "all x.(Instinct(x) -> (HelpsAnimalsFindFood(x) & HelpsAnimalsMate(x) & HelpsAnimalsReproduce(x) & HelpsAnimalsRaiseYoung(x)))", "score": 0}
{"id": "eqasc_train_13983", "prediction": "all x.(Instinct(x) -> (HelpsAnimalsAttractMate(x) & HelpsAnimalsAttractMate(x)))", "score": 0}
{"id": "eqasc_train_13984", "prediction": "all x.(Sex(x) -> ComplicatedReproduction(x))", "score": 0}
{"id": "eqasc_train_13985", "prediction": "all x y.((Animal(x) & Mate(y)) -> NeedsToAttractForSex(x,y))", "score": 0}
{"id": "eqasc_train_13986", "prediction": "all x.((MemberOfEachSpecies(x) & MeetsSurvivalChallenges(x) & MeetsReproductionChallenges(x)) -> NeedsToMeetSurvivalChallenges(x))", "score": 0}
{"id": "eqasc_train_13987", "prediction": "all x y.((Animal(x) & Mate(y)) -> MustFind(x,y))", "score": 0}
{"id": "eqasc_train_13988", "prediction": "all x y.((Male(x) & Female(y)) -> SingsToAttract(x,y))", "score": 0}
{"id": "eqasc_train_13989", "prediction": "exists x.(Animal(x) & SingsToReproduce(x))", "score": 0}
{"id": "eqasc_train_13990", "prediction": "all x.((Animal(x) & Smell(x)) -> Mates(x))", "score": 0}
{"id": "eqasc_train_13991", "prediction": "all x y.((Mammal(x) & Partner(y)) -> AttractsThroughSmell(x,y))", "score": 0}
{"id": "eqasc_train_13992", "prediction": "all x.((Animal(x) & AttractsWithSmells(x)) -> AttractsWithSmells(x))", "score": 0}
{"id": "eqasc_train_13993", "prediction": "exists x.(Animal(x) & UsesScentToReproduce(x))", "score": 0}
{"id": "eqasc_train_13994", "prediction": "all x.((Animal(x) & RequiresStamina(x)) -> SucceedsAtPhysicalActivities(x))", "score": 0}
{"id": "eqasc_train_13995", "prediction": "all x.(SheepHunting(x) -> PhysicallyDisruptive(x))", "score": 0}
{"id": "eqasc_train_13996", "prediction": "all x.((Animal(x) & RequiresStamina(x)) -> Hunts(x))", "score": 0}
{"id": "eqasc_train_13997", "prediction": "all x.((Animal(x) & RequiresStamina(x)) -> SuccessfulHunting(x))", "score": 0}
{"id": "eqasc_train_13998", "prediction": "all x.(Bear(x) -> RequiresStamina(x))", "score": 0}
{"id": "eqasc_train_13999", "prediction": "all x.(Human(x) -> RequiresStamina(x))", "score": 0}
{"id": "eqasc_train_14000", "prediction": "all x.(Dog(x) -> RequiresStamina(x))", "score": 0}
{"id": "eqasc_train_14001", "prediction": "all x.((Male(x) & MostAnimalSpecies(x)) -> (MoreEnergetic(x) & MoreStamina(x)))", "score": 0}
{"id": "eqasc_train_14002", "prediction": "all x.(Male(x) -> MoreStamina(x))", "score": 0}
{"id": "eqasc_train_14003", "prediction": "all x y.((Animal(x) & Female(y)) -> (MaleAnimal(x) & FemaleAnimal(x) & MoreEnergetic(x,y)))", "score": 0}
{"id": "eqasc_train_14004", "prediction": "all x.(Asse(x) -> (GreatRunner(x) & -MatchInSpeed(x) & -MatchInStamina(x)))", "score": 0}
{"id": "eqasc_train_14005", "prediction": "all x.((Asse(x) & RequiresStamina(x)) -> SucceedsAtRunning(x))", "score": 0}
{"id": "eqasc_train_14006", "prediction": "all x.(Mustang(x) -> (NoticedForStamina(x) & NoticedForEndurance(x)))", "score": 0}
{"id": "eqasc_train_14007", "prediction": "all x.(Mustang(x) -> (AbilitiesInPhysicalActivities(x) & NotedFor(x,Mustangs)))", "score": 0}
{"id": "eqasc_train_14008", "prediction": "all x.(AirPollution(x) -> (HarmsRespiratorySystems(x) & HarmsCirculatorySystems(x)))", "score": 1}
{"id": "eqasc_train_14009", "prediction": "all x.(SulfurDioxide(x) -> (IrrigatesRespiratorySystem(x) & DamagesHeartAndCirculatorySystem(x)))", "score": 0}
{"id": "eqasc_train_14010", "prediction": "all x.(AirPollution(x) -> DamagesHeart(x))", "score": 0}
{"id": "eqasc_train_14011", "prediction": "all x.((AirPollutant(x) & Breathing(x)) -> IncreasesChancesOfHealthProblems(x))", "score": 0}
{"id": "eqasc_train_14012", "prediction": "all x y.((BreathingPollutants(x) & RespiratorySystem(y)) -> CanHarm(x,y))", "score": 0}
{"id": "eqasc_train_14013", "prediction": "all x.(IncineratedMercury(x) -> HarmsRespiratoryAndCirculatorySystems(x))", "score": 0}
{"id": "eqasc_train_14014", "prediction": "all x.(AirPollution(x) -> (CausedByCars(x) | CausedByTrucks(x)))", "score": 0}
{"id": "eqasc_train_14015", "prediction": "all x.(Car(x) -> HarmsRespiratorySystem(x))", "score": 0}
{"id": "eqasc_train_14016", "prediction": "all x.(Car(x) -> (HarmsRespiratorySystems(x) & HarmsCirculatorySystems(x)))", "score": 0}
{"id": "eqasc_train_14017", "prediction": "all x.(AirPollutant(x) -> Inhaled(x))", "score": 0}
{"id": "eqasc_train_14018", "prediction": "all x y.((InhaledPollution(x) & InhaledPollution(y)) -> HarmsRespiratorySystem(x,y))", "score": 0}
{"id": "eqasc_train_14019", "prediction": "all x.(Smoking(x) -> AirPollution(x))", "score": 1}
{"id": "eqasc_train_14020", "prediction": "all x.(Smoking(x) -> (HarmsRespiratorySystems(x) & HarmsCirculatorySystems(x)))", "score": 1}
{"id": "eqasc_train_14021", "prediction": "all x.(AirPollution(x) -> CausedByLotsOfPollutants(x))", "score": 0}
{"id": "eqasc_train_14022", "prediction": "exists x.(Pollutant(x) & HarmsRespiratoryAndCirculatorySystems(x))", "score": 0}
{"id": "eqasc_train_14023", "prediction": "all x.(Dust(x) -> ContributesToAirPollution(x))", "score": 0}
{"id": "eqasc_train_14024", "prediction": "all x y.((Dust(x) & RespiratorySystem(y) & CirculatorySystem(y)) -> Harms(x,y))", "score": 0}
{"id": "eqasc_train_14025", "prediction": "all x.(NitrogenOxide(x) -> CausesAirPollution(x))", "score": 0}
{"id": "eqasc_train_14026", "prediction": "all x.(NitrogenOxide(x) -> (HarmsRespiratorySystems(x) & HarmsCirculatorySystems(x)))", "score": 0}
{"id": "eqasc_train_14027", "prediction": "all x.(OzoneExposition(x) -> (DisaminatesLungFunction(x) & IncreasesSusceptibilityToRainforestInfection(x)))", "score": 0}
{"id": "eqasc_train_14028", "prediction": "all x.(AirPollution(x) -> HarmsLungs(x))", "score": 0}
{"id": "eqasc_train_14029", "prediction": "all x.((PhotochemicalSmog(x) & Production(x)) -> AirPollutionReaction(x))", "score": 0}
{"id": "eqasc_train_14030", "prediction": "all x.(Smog(x) -> (HarmsRespiratorySystems(x) & HarmsCirculatorySystems(x)))", "score": 0}
{"id": "eqasc_train_14031", "prediction": "all x y.((Pathogen(x) & Disease(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_train_14032", "prediction": "exists x.(Bacteria(x) & InFood(x) & CausesIllness(x) & Pathogen(x))", "score": 0}
{"id": "eqasc_train_14033", "prediction": "exists x.(Bacteria(x) & InFood(x) & CausesDisease(x))", "score": 0}
{"id": "eqasc_train_14034", "prediction": "all x.(Disease(x) -> AffectsImmuneSystem(x))", "score": 0}
{"id": "eqasc_train_14035", "prediction": "all x.(Pathogen(x) -> AffectsImmuneSystem(x))", "score": 0}
{"id": "eqasc_train_14036", "prediction": "all x.(Measles(x) -> CausedByMeaslesVirus(x))", "score": 0}
{"id": "eqasc_train_14037", "prediction": "all x.(Pathogen(x) -> CausesMeasles(x))", "score": 0}
{"id": "eqasc_train_14038", "prediction": "all x.((Pathogen(x) & MovedThroughAir(x)) -> Possible(x))", "score": 0}
{"id": "eqasc_train_14039", "prediction": "all x.(Disease(x) -> MovesThroughAir(x))", "score": 0}
{"id": "eqasc_train_14040", "prediction": "all x.(Anthrax(x) -> BacterialPathogen(x))", "score": 0}
{"id": "eqasc_train_14041", "prediction": "all x.(Bacteria(x) -> CausesDisease(x))", "score": 0}
{"id": "eqasc_train_14042", "prediction": "all x.(BacterialPathogen(x) -> (AccountedFor(x,83) & (8,928))))", "score": -1}
{"id": "eqasc_train_14043", "prediction": "all x.(Bacteria(x) -> CausesDisease(x))", "score": 0}
{"id": "eqasc_train_14044", "prediction": "all x.(MadCowDisease(x) -> Concern(x))", "score": 0}
{"id": "eqasc_train_14045", "prediction": "all x.(Pathogen(x) -> CausesMadCow(x))", "score": 0}
{"id": "eqasc_train_14046", "prediction": "all x.(LegionnairesDisease(x) -> SeriousDisease(x))", "score": 0}
{"id": "eqasc_train_14047", "prediction": "all x.(Pathogen(x) -> CausesLegionnaires(x))", "score": 0}
{"id": "eqasc_train_14048", "prediction": "all x.(Pathogen(x) -> Bacteria(x))", "score": 0}
{"id": "eqasc_train_14049", "prediction": "all x.(Pathogen(x) -> (Bacteria(x) | Protozoa(x) | Viral(x)))", "score": 0}
{"id": "eqasc_train_14050", "prediction": "all x.(Fungus(x) -> SignificantPathogen(x))", "score": 0}
{"id": "eqasc_train_14051", "prediction": "all x.(Fungus(x) -> CausesDisease(x))", "score": 0}
{"id": "eqasc_train_14052", "prediction": "exists x.(Bird(x) & Pollinator(x) & CoEvolvedWithPlants(x))", "score": 1}
{"id": "eqasc_train_14053", "prediction": "all x.(FloweredPlant(x) -> (ReproducesWithSeeds(x) & ReproducesWithPollen(x)))", "score": 0}
{"id": "eqasc_train_14054", "prediction": "exists x.(Organism(x) & NeedsBird(x))", "score": 0}
{"id": "eqasc_train_14055", "prediction": "all x.(Plant(x) -> (SpreadsBySelfSeeding(x) & SpreadsBelowGroundStems(x)))", "score": 0}
{"id": "eqasc_train_14056", "prediction": "exists x.(Bird(x) & Pollinator(x) & SelfSeedingOrganism(x))", "score": 0}
{"id": "eqasc_train_14057", "prediction": "exists x.(Animal(x) & HasFeathers(x) & Pollinator(x))", "score": 1}
{"id": "eqasc_train_14058", "prediction": "all x y.((Bird(x) & FlyingInsect(y)) -> PrimaryPollinatorsOfRedFlowerPlants(x,y))", "score": 0}
{"id": "eqasc_train_14059", "prediction": "exists x y.(Bird(x) & Flower(y) & CoEvolvedWith(x,y) & Pollinates(x,y))", "score": 0}
{"id": "eqasc_train_14060", "prediction": "all x.(Hummingbird(x) -> BirdPollinators(x))", "score": 0}
{"id": "eqasc_train_14061", "prediction": "all x y.((Hummingbird(x) & Plant(y)) -> CoEvolvedWith(x,y))", "score": 0}
{"id": "eqasc_train_14062", "prediction": "all x y.((Hummingbird(x) & Plant(y)) -> CoEvolvedWith(x,y))", "score": 0}
{"id": "eqasc_train_14063", "prediction": "all x y.((Insect(x) | Bird(y)) -> PollinatesCrops(x,y))", "score": 0}
{"id": "eqasc_train_14064", "prediction": "all x y.((Insect(x) & Plant(y)) -> Pollinates(x,y))", "score": 0}
{"id": "eqasc_train_14065", "prediction": "all x.((Rooster(x) | Sparrow(x)) -> Bird(x))", "score": 0}
{"id": "eqasc_train_14066", "prediction": "exists x.(Sparrow(x) & Pollinator(x) & CoEvolvedWithPlants(x))", "score": 0}
{"id": "eqasc_train_14067", "prediction": "exists x.(Bird(x) & Pollinator(x) & CoEvolvedWithBushes(x))", "score": 0}
{"id": "eqasc_train_14068", "prediction": "exists x.(Bird(x) & Pollinator(x) & CoEvolvedWithProducers(x))", "score": 0}
{"id": "eqasc_train_14069", "prediction": "all x.(AcidRain(x) -> NegativeImpactOnWaterQuality(x))", "score": 0}
{"id": "eqasc_train_14070", "prediction": "all x.(AcidRain(x) -> ChangesAcidityOfSoilAndWater(x))", "score": 0}
{"id": "eqasc_train_14071", "prediction": "all x.(AcidRain(x) -> CanChangeSoil(x))", "score": 0}
{"id": "eqasc_train_14072", "prediction": "all x.(AcidRain(x) -> pHBelow(x,5.6))", "score": -1}
{"id": "eqasc_train_14073", "prediction": "all x.((Rain(x) & pHBelow(x,5.6)) -> NegativeImpactOnWaterQuality(x))", "score": -1}
{"id": "eqasc_train_14074", "prediction": "all x.((Plant(x) & QualityWater(x)) -> ThrivesOn(x,y))", "score": 0}
{"id": "eqasc_train_14075", "prediction": "all x.(AcidRain(x) -> NegativeImpactOnPlants(x))", "score": 0}
{"id": "eqasc_train_14076", "prediction": "all x.(WaterQuality(x) -> AffectsHabitatQuality(x))", "score": 0}
{"id": "eqasc_train_14077", "prediction": "all x.(AcidRain(x) -> NegativeImpactOnHabitatQuality(x))", "score": 0}
{"id": "eqasc_train_14078", "prediction": "all x.(Pollution(x) -> BadForWater(x))", "score": 0}
{"id": "eqasc_train_14079", "prediction": "all x.(Plant(x) -> SensitiveToAcidRain(x))", "score": 0}
{"id": "eqasc_train_14080", "prediction": "all x.(Plant(x) -> SensitiveToWaterQuality(x))", "score": 0}
{"id": "eqasc_train_14081", "prediction": "all x.((PollutedCloud(x) & ComesFrom(x,y)) -> NegativeImpactOnWaterQuality(x))", "score": 0}
{"id": "eqasc_train_14082", "prediction": "all x.(AcidRain(x) -> NegativeImpactOnH20Quality(x))", "score": 0}
{"id": "eqasc_train_14083", "prediction": "all x.(WaterPollution(x) -> Life(x))", "score": 0}
{"id": "eqasc_train_14084", "prediction": "all x.(AcidRain(x) -> NegativeImpactOnLifeQuality(x))", "score": 0}
{"id": "eqasc_train_14085", "prediction": "all x.(AcidRain(x) -> CausedByCFCs(x))", "score": 0}
{"id": "eqasc_train_14086", "prediction": "all x.(CFC(x) -> NegativeImpactOnWaterQuality(x))", "score": 0}
{"id": "eqasc_train_14087", "prediction": "all x.(SulfurDioxide(x) -> CausesAcidRain(x))", "score": 0}
{"id": "eqasc_train_14088", "prediction": "all x.(SulfurDioxide(x) -> NegativeImpactOnWaterQuality(x))", "score": 0}
{"id": "eqasc_train_14089", "prediction": "all x.((AcidRain(x) | AcidicPrecipitation(x)) -> DetrimentalToPlantGrowth(x))", "score": 0}
{"id": "eqasc_train_14090", "prediction": "all x.((Precipitation(x) & DetrimentalToPlantGrowth(x)) -> NegativeImpactOnWaterQuality(x))", "score": 0}
{"id": "eqasc_train_14091", "prediction": "exists x.(Rain(x) & Harmful(x))", "score": 0}
{"id": "eqasc_train_14092", "prediction": "all x.((SulfurDioxide(x) & Precipitation(x)) -> NegativeImpactOnWaterQuality(x))", "score": 0}
{"id": "eqasc_train_14093", "prediction": "all x.((Car(x) | Truck(x)) -> (EmitsThreetyAirbornePollutants(x) & IncreasesAcidRain(x)))", "score": 0}
{"id": "eqasc_train_14094", "prediction": "all x y.((Car(x) & Truck(y)) -> NegativeImpactOnWaterQuality(x,y))", "score": 0}
{"id": "eqasc_train_14095", "prediction": "exists x.(Milk(x) & NearlyMicroscopic(x))", "score": 0}
{"id": "eqasc_train_14096", "prediction": "all x.(Ribosome(x) -> TooSmallToSeeInLightMicroscope(x))", "score": 0}
{"id": "eqasc_train_14097", "prediction": "exists x.(Mollusk(x) & NearlyTooSmallToSee(x))", "score": 0}
{"id": "eqasc_train_14098", "prediction": "exists x.(Invertebrate(x) & NearlyMicroscopic(x))", "score": 0}
{"id": "eqasc_train_14099", "prediction": "exists x.(Squid(x) & NearlyMicroscopic(x))", "score": 0}
{"id": "eqasc_train_14100", "prediction": "exists x.(Invertebrate(x) & NearlyMicroscopic(x))", "score": 0}
{"id": "eqasc_train_14101", "prediction": "all x.(Mollusk(x) -> AbundantFossil(x))", "score": 0}
{"id": "eqasc_train_14102", "prediction": "exists x.(AbundantFossil(x) & NearlyMicroscopic(x))", "score": 0}
{"id": "eqasc_train_14103", "prediction": "exists x.(Abalone(x) & NearlyMicroscopic(x))", "score": 0}
{"id": "eqasc_train_14104", "prediction": "exists x.(Invertebrate(x) & NearlyMicroscopic(x))", "score": 0}
{"id": "eqasc_train_14105", "prediction": "exists x.(Squid(x) & NearlyMicroscopic(x))", "score": 0}
{"id": "eqasc_train_14106", "prediction": "exists x.(Squid(x) & NearlyMicroscopic(x))", "score": 0}
{"id": "eqasc_train_14107", "prediction": "all x.(Evolution(x) -> NaturalSelection(x))", "score": 0}
{"id": "eqasc_train_14108", "prediction": "all x.((Birth(x) | Death(x)) -> NaturalProcesses(x))", "score": 0}
{"id": "eqasc_train_14109", "prediction": "all x.(Evolution(x) -> (OccursThroughBirth(x) & OccursThroughDeath(x)))", "score": 0}
{"id": "eqasc_train_14110", "prediction": "all x.(Adaptation(x) & NaturalSelection(x)) -> Discussed(x))", "score": -1}
{"id": "eqasc_train_14111", "prediction": "all x y.((Evolution(x) & ProcessOfAdaptation(y)) -> OccursBy(x,y))", "score": 0}
{"id": "eqasc_train_14112", "prediction": "all x.(NaturalSelection(x) -> Adaptive(x))", "score": 0}
{"id": "eqasc_train_14113", "prediction": "all x y.((Evolution(x) & AdaptiveProcess(y)) -> OccursBy(x,y))", "score": 0}
{"id": "eqasc_train_14114", "prediction": "all x y.((Evolution(x) & Process(y)) -> (OccursBy(x,y) & ResultsInAdaptation(x)))", "score": 0}
{"id": "eqasc_train_14115", "prediction": "all x.(Adaptation(x) -> Evolution(x))", "score": 0}
{"id": "eqasc_train_14116", "prediction": "all x.(Evolution(x) -> AdaptationToChange(x))", "score": 0}
{"id": "eqasc_train_14117", "prediction": "all x.(Change(x) -> NaturalSelection(x))", "score": 0}
{"id": "eqasc_train_14118", "prediction": "all x.(Evolution(x) -> ElectsToSurvive(x))", "score": 0}
{"id": "eqasc_train_14119", "prediction": "all x y.((NaturalSelection(x) & Organism(y)) -> HelpsSurvive(x,y))", "score": 0}
{"id": "eqasc_train_14120", "prediction": "all x.(NaturalSelection(x) -> SelectsFunctionallyAdvancedSystems(x))", "score": 0}
{"id": "eqasc_train_14121", "prediction": "all x.(Evolution(x) -> FunctionallyAdvancedSystems(x))", "score": 0}
{"id": "eqasc_train_14122", "prediction": "all x.(Speciation(x) -> (OccursByNaturalSelection(x) & NaturalSelection(x)))", "score": 0}
{"id": "eqasc_train_14123", "prediction": "all x.(Evolution(x) -> (SequenceOfVariation(x) & Selection(x)))", "score": 0}
{"id": "eqasc_train_14124", "prediction": "all x.(Evolution(x) -> ProducesVariation(x))", "score": 0}
{"id": "eqasc_train_14125", "prediction": "all x.((Plant(x) & DaysGrowingShorter(x) & Fall(x)) -> Dormant(x))", "score": 0}
{"id": "eqasc_train_14126", "prediction": "all x.(Plant(x) -> (DividedAtAnyTime(x) & (DormantPeriod(x) | RestPeriod(x))))", "score": 0}
{"id": "eqasc_train_14127", "prediction": "all x.((Plant(x) & DaysGrowingShorterInFall(x)) -> RestPeriod(x))", "score": 0}
{"id": "eqasc_train_14128", "prediction": "all x.(Fall(x) -> (StartsInSeptember(x) & Windy(x) & Dry(x)))", "score": 0}
{"id": "eqasc_train_14129", "prediction": "all x y.((Plant(x) & Day(y) & September(y)) -> (ResponseTo(x,y) & Day(x,y) & Dormant(x)))", "score": 0}
{"id": "eqasc_train_14130", "prediction": "all x.(JadePlant(x) -> (ActiveGrowingCycle(x) & DormantGrowingCycle(x)))", "score": 0}
{"id": "eqasc_train_14131", "prediction": "all x.(JadePlant(x) -> (ResponseToFall(x) & Dormant(x)))", "score": 0}
{"id": "eqasc_train_14132", "prediction": "all x.((Plant(x) & DormantStateInWinter(x)) -> InWinter(x))", "score": 0}
{"id": "eqasc_train_14133", "prediction": "exists x.(Plant(x) & Dormant(x)) -> (DaysShorter(x) & DaysShorter(x)))", "score": -1}
{"id": "eqasc_train_14134", "prediction": "all x.((Autumn(x) | Fall(x)) -> Here(x))", "score": 0}
{"id": "eqasc_train_14135", "prediction": "all x.((Plant(x) & DaysGrowingShorter(x) & Autumn(x)) -> Dormant(x))", "score": 0}
{"id": "eqasc_train_14136", "prediction": "all x.(Cottonwood(x) -> DormantDuringFall(x))", "score": 0}
{"id": "eqasc_train_14137", "prediction": "all x.((Cottonwood(x) & DaysShorter(x)) -> Dormant(x))", "score": 0}
{"id": "eqasc_train_14138", "prediction": "all x.(Tree(x) -> Dormant(x))", "score": 0}
{"id": "eqasc_train_14139", "prediction": "all x y.((Tree(x) & Day(y) & Fall(y)) -> RespondsToDaysShorter(x,y))", "score": 0}
{"id": "eqasc_train_14140", "prediction": "all x.((GrowingSeasonEnds(x)) -> (PlantsBecomeDormant(x) | PlantsScatherSeeds(x) & PlantsDie(x)))", "score": 0}
{"id": "eqasc_train_14141", "prediction": "all x.((Plant(x) & ShortedByScattingSeeds(x)) -> RespondsTo(x,y))", "score": 0}
{"id": "eqasc_train_14142", "prediction": "all x y.((AutumnalEquinox(x) & NorthernHemisphere(y)) -> ShortensDays(x,y))", "score": 0}
{"id": "eqasc_train_14143", "prediction": "all x.((Plant(x) & AutumnalEquinox(x)) -> Dormant(x))", "score": 0}
{"id": "eqasc_train_14144", "prediction": "all x.(Plant(x) -> DormantInWinter(x))", "score": 0}
{"id": "eqasc_train_14145", "prediction": "all x y.((Plant(x) & ShortWinterDays(y)) -> SleepsIn(x,y))", "score": 0}
{"id": "eqasc_train_14146", "prediction": "all x y.((Zinc(x) & Wound(y)) -> PositiveImpactOnHealing(x,y))", "score": 0}
{"id": "eqasc_train_14147", "prediction": "all x.((VitaminC(x) & Zinc(x)) -> EnhancesWoundHealing(x))", "score": 0}
{"id": "eqasc_train_14148", "prediction": "all x.(VitaminC(x) -> BeneficialToWounds(x))", "score": 0}
{"id": "eqasc_train_14149", "prediction": "all x.((Animal(x) & Wounded(x)) -> HealdedWound(x))", "score": 0}
{"id": "eqasc_train_14150", "prediction": "all x y.((Zinc(x) & Animal(y)) -> PositiveImpactOn(x,y))", "score": 0}
{"id": "eqasc_train_14151", "prediction": "all x.(IncisedWound(x) -> CleanCut(x))", "score": 0}
{"id": "eqasc_train_14152", "prediction": "all x.(Zinc(x) -> PositiveImpactOnHealingCuts(x))", "score": 0}
{"id": "eqasc_train_14153", "prediction": "(ImportantToWundHealing(z) & MineralZinc(z))", "score": 0}
{"id": "eqasc_train_14154", "prediction": "all x.(HealingMineral(x) -> PositiveImpactOnWounds(x))", "score": 0}
{"id": "eqasc_train_14155", "prediction": "all x.((RedMeat(x) & GoodSourceOfZinc(x)) -> GoodSourceOfZinc(x))", "score": 0}
{"id": "eqasc_train_14156", "prediction": "all x.(RedMeat(x) -> PositiveImpactOnWoundHealing(x))", "score": 0}
{"id": "eqasc_train_14157", "prediction": "all x.(Wound(x) -> HealsByScarring(x))", "score": 0}
{"id": "eqasc_train_14158", "prediction": "all x.(Zinc(x) -> PositiveImpactOnWoundsScarring(x))", "score": 0}
{"id": "eqasc_train_14159", "prediction": "all x.(ZincSource(x) -> (Soil(x) | ZincOxide(x) | ZincSulfate(x) | ZincChlate(x)))", "score": 0}
{"id": "eqasc_train_14160", "prediction": "all x y.((Soil(x) & Wound(y)) -> PositiveImpactOnHealing(x,y))", "score": 0}
{"id": "eqasc_train_14161", "prediction": "all x.(WoundHealing(x) -> CriticalAspectOfSurgery(x))", "score": 0}
{"id": "eqasc_train_14162", "prediction": "all x.(Zinc(x) -> PositiveImpactOnSurgery(x))", "score": 0}
{"id": "eqasc_train_14163", "prediction": "all x y.((Zinc(x) & Surgery(y)) -> PositiveImpact(x,y))", "score": 0}
{"id": "eqasc_train_14164", "prediction": "all x.((Nutrition(x) & WoundHealing(x)) -> Correlates(x,y))", "score": 0}
{"id": "eqasc_train_14165", "prediction": "all x.(Zinc(x) -> CorrelatedWithWoundRecovery(x))", "score": 0}
{"id": "eqasc_train_14166", "prediction": "all x.(Wound(x) -> (InjuredSkin(x) & InjuredSoftTissues(x)))", "score": 0}
{"id": "eqasc_train_14167", "prediction": "all x.(Zinc(x) -> (PositiveImpactOnInjuryToSkin(x) & PositiveImpactOnInjuryToSoftTissues(x)))", "score": 0}
{"id": "eqasc_train_14168", "prediction": "all x.(Roundworm(x) -> (FreeLiving(x) | Parasitic(x)))", "score": 0}
{"id": "eqasc_train_14169", "prediction": "all x.(Parasite(x) -> (Organism(x) & LivesOffHost(x)))", "score": 0}
{"id": "eqasc_train_14170", "prediction": "all x.(Roundworm(x) -> (FreeLiving(x) | LiveOffHost(x)))", "score": 0}
{"id": "eqasc_train_14171", "prediction": "all x.(Dog(x) -> (ResponsibleToHandworms(x) | ResponsibleToRoundworms(x)))", "score": 0}
{"id": "eqasc_train_14172", "prediction": "all x.(Dog(x) -> (RemainsSusceptibleToFreeLivingOrParasiticSpecies(x)))", "score": 0}
{"id": "eqasc_train_14173", "prediction": "all x.((ShortfinMako(x) & Parasite(x)) -> HostsParasiteCophepods(x))", "score": 0}
{"id": "eqasc_train_14174", "prediction": "all x.(Roundworm(x) -> (LivesOnHost(x) | FreeLiving(x)))", "score": 0}
{"id": "eqasc_train_14175", "prediction": "all x.(InternalParasite(x) -> HarmsHost(x))", "score": 0}
{"id": "eqasc_train_14176", "prediction": "all x y.((Roundworm(x) & Host(y)) -> CanHarm(x,y))", "score": 0}
{"id": "eqasc_train_14177", "prediction": "all x.(Nematode(x) -> Parasitic(x))", "score": 0}
{"id": "eqasc_train_14178", "prediction": "all x.(PhylumNematoda(x) -> Parasitic(x))", "score": 0}
{"id": "eqasc_train_14179", "prediction": "all x.((Puppie(x) | Kitten(x)) -> ParasiticWworms(x))", "score": 0}
{"id": "eqasc_train_14180", "prediction": "All x.(Roundworm(x) -> CanCauseAnorexia(x))", "score": -1}
{"id": "eqasc_train_14181", "prediction": "all x.(Parasite(x) -> CausesAnorexia(x))", "score": 0}
{"id": "eqasc_train_14182", "prediction": "all x.(Nematode(x) -> (FreeLiving(x) | Parasitic(x)))", "score": 0}
{"id": "eqasc_train_14183", "prediction": "all x.(Caecilian(x) -> (MoistSoil(x) & NearRiver(x) & NearStream(x) & TropicalRegion(x)))", "score": 0}
{"id": "eqasc_train_14184", "prediction": "all x.(Caecilian(x) -> (PrimaryAmphibian(x) & RemindsEarthworm(x)))", "score": 0}
{"id": "eqasc_train_14185", "prediction": "all x y z.((PrimaryAmphibian(x) & MoistSoil(y) & (River(z) | Stream(z))) -> FoundIn(x,y,z))", "score": 0}
{"id": "eqasc_train_14186", "prediction": "(LocalName(CobraBobo) & Caecilian(Cobra))", "score": 0}
{"id": "eqasc_train_14187", "prediction": "all x.(CobraBobo(x) -> (MoistSoilNearRivers(x) & FoundInMoistSoil(x)))", "score": 0}
{"id": "eqasc_train_14188", "prediction": "all x.(TropicalRainforest(x) -> (Warm(x) & Wet(x)))", "score": 0}
{"id": "eqasc_train_14189", "prediction": "all x.(Caecilian(x) -> (FoundInWarmRegions(x) & FoundInWarmRegions(x)))", "score": 0}
{"id": "eqasc_train_14190", "prediction": "all x.(Caecilian(x) -> (OrderApoda(x) | OrderGymnophiona(x)))", "score": 0}
{"id": "eqasc_train_14191", "prediction": "all x.(ApodaOrder(x) -> exists y.(Stream(y) & FoundIn(x,y))))", "score": -1}
{"id": "eqasc_train_14192", "prediction": "all x y z.((Amphibian(x) & EarthwormLike(x) & Soil(y) & River(z)) -> LivesIn(x,y,z))", "score": 0}
{"id": "eqasc_train_14193", "prediction": "all x.(Caecilian(x) -> (Amphibian(x) & MovesJustAsEarthworm(x)))", "score": 0}
{"id": "eqasc_train_14194", "prediction": "all x y z.((Amphibian(x) & MoistSoil(y) & (River(z) | Stream(z))) -> (FoundIn(x,y) & Near(x,z)))", "score": 0}
{"id": "eqasc_train_14195", "prediction": "all x.((Amphibian(x) & MovesAsEarthworm(x)) -> (MoistSoil(x) & NearRiversAndStreams(x) & TropicalRegions(x)))", "score": 0}
{"id": "eqasc_train_14196", "prediction": "all x.(CobraBobo(x) -> (MoistSoil(x) & NearRiversAndStreams(x) & TropicalRegions(x)))", "score": 0}
{"id": "eqasc_train_14197", "prediction": "all x.((Salamander(x) | Frog(x) | Toad(x) | CatecilianClassReptilia(x)) -> ClassReptilia(x))", "score": 0}
{"id": "eqasc_train_14198", "prediction": "all x.(Reptilian(x) -> (MoistSoil(x) & NearRiver(x) & NearStream(x) & TropicalRegion(x)))", "score": 0}
{"id": "eqasc_train_14199", "prediction": "all x.(CobraBobos(x) -> (MoistSoil(x) & NearRiversAndStreams(x) & TropicalRegions(x)))", "score": 0}
{"id": "eqasc_train_14200", "prediction": "all x y.((Molecule(x) & tRNA(y)) -> BringsAminoAcidsToRibosome(x,y))", "score": 1}
{"id": "eqasc_train_14201", "prediction": "all x.(GeneSequence(x) -> (GivesAminoAcidSequence(x) & TranslatedByRibosome(x)))", "score": 0}
{"id": "eqasc_train_14202", "prediction": "all x y.((GeneSequence(x) & AminoAcid(y)) -> BringsInCorrectSequence(x,y))", "score": 0}
{"id": "eqasc_train_14203", "prediction": "all x.(AminoAcid(x) -> Protein(x))", "score": 0}
{"id": "eqasc_train_14204", "prediction": "all x y.((MoleculesOfTRNA(x) & Protein(y)) -> BringsToRibosome(x,y))", "score": 0}
{"id": "eqasc_train_14205", "prediction": "all x.(AminoAcid(x) -> BuildingBlockOfProteins(x))", "score": 0}
{"id": "eqasc_train_14206", "prediction": "all x y.((Molecule(x) & tRNA(y)) -> BringsBuildingBlocksToRibosome(x,y))", "score": 0}
{"id": "eqasc_train_14207", "prediction": "all x.(Ribosome(x) -> SiteOfProteinSynthesis(x))", "score": 0}
{"id": "eqasc_train_14208", "prediction": "all x.((Molecule(x) & tRNA(x)) -> InitiatesProteinSynthesis(x))", "score": 0}
{"id": "eqasc_train_14209", "prediction": "all x.(Protein(x) -> ManufacturedAtRibosomes(x))", "score": 0}
{"id": "eqasc_train_14210", "prediction": "all x y.((MoleculesOfTRNA(x) & AminoAcids(y) & BringsInCorrectSequence(x,y)) -> ManufacturesProteins(x))", "score": 0}
{"id": "eqasc_train_14211", "prediction": "all x.((RibosomeBindingSite(x) & StartAndStopCodons(x) & ProteinCodingSequence(x)) -> BindingSite(x))", "score": 0}
{"id": "eqasc_train_14212", "prediction": "all x y.((Molecule(x) & tRNA(y)) -> BringsAminoAcidsToRibosome(x,y))", "score": 1}
{"id": "eqasc_train_14213", "prediction": "all x y.((Aminoacylation(x) & AminoAcid(y)) -> AdditionToTRNAMolecule(x,y))", "score": 0}
{"id": "eqasc_train_14214", "prediction": "all x y.((Aminoacylation(x) & AminoAcids(y) & Ribosome(z)) -> BringsTo(x,y,z))", "score": 0}
{"id": "eqasc_train_14215", "prediction": "all x.(Ribosome(x) -> AssembledInNucleoli(x))", "score": 0}
{"id": "eqasc_train_14216", "prediction": "all x.((Molecule(x) & tRNA(x) & AminoAcids(x)) -> AssembledInNucleoli(x))", "score": 0}
{"id": "eqasc_train_14217", "prediction": "all x.(Constriction(x) -> (MuscularWallsContractor(x) & BloodVessels(x)))", "score": 0}
{"id": "eqasc_train_14218", "prediction": "all x.(Constriction(x) -> RaisesBloodPressure(x))", "score": 0}
{"id": "eqasc_train_14219", "prediction": "all x y.((MuscularWalls(x) & BloodVessels(y) & Conract(x,y)) -> BloodPressureRises(x))", "score": 0}
{"id": "eqasc_train_14220", "prediction": "all x.(Cocaine(x) -> (TightlySqueezesOrConstrictsCoronaryArteries(x) & FeedsBloodToHeart(x)))", "score": 0}
{"id": "eqasc_train_14221", "prediction": "all x y.((TightSqueezing(x) & MuscularWalls(y) & BloodVessels(z) & Contracts(x,z)) -> Ccurs(x))", "score": 0}
{"id": "eqasc_train_14222", "prediction": "all x.(MuscleSpasm(x) -> (InvoluntaryContraction(x) & Muscle(x)))", "score": 0}
{"id": "eqasc_train_14223", "prediction": "all x.(MuscleSpasm(x) -> CausesConstriction(x))", "score": 0}
{"id": "eqasc_train_14224", "prediction": "all x y.((MuscleWall(x) & Artery(y) & Vein(y)) -> Contracts(x,y))", "score": 0}
{"id": "eqasc_train_14225", "prediction": "all x.(Cocaine(x) -> ConstrictsBloodVessels(x))", "score": 0}
{"id": "eqasc_train_14226", "prediction": "all x.(Cocaine(x) -> CausesBloodVesselsToContract(x))", "score": 0}
{"id": "eqasc_train_14227", "prediction": "all x.(Dehydration(x) -> (CausesVesselsToConstrict(x) & CausesBloodToThicken(x)))", "score": 0}
{"id": "eqasc_train_14228", "prediction": "all x.(Constriction(x) -> CausesBloodThickening(x))", "score": 0}
{"id": "eqasc_train_14229", "prediction": "all x.(Caffeine(x) -> ConstrictsBloodVessels(x))", "score": 0}
{"id": "eqasc_train_14230", "prediction": "all x.(Caffeine(x) -> CausesBloodVesselsToContractor(x))", "score": 0}
{"id": "eqasc_train_14231", "prediction": "all x.(SystolicBloodPressure(x) -> (ForceOfBlood(x) & BloodVesselWalls(x) & HeartContracts(x)))", "score": 0}
{"id": "eqasc_train_14232", "prediction": "all x.(Constrictions(x) -> RakesSystolicBloodPressure(x))", "score": 0}
{"id": "eqasc_train_14233", "prediction": "all x y.((MuscleWalls(x) & BloodVessel(y) & Contracting(y)) -> RakesBloodPressure(x,y))", "score": 0}
{"id": "eqasc_train_14234", "prediction": "all x y.((Cocaine(x) & MuscularWalls(y)) -> CausesContraction(x,y))", "score": 0}
{"id": "eqasc_train_14235", "prediction": "all x.(Lake(x) -> (FormedByPrecipitation(x) & FormedByRunoff(x)))", "score": 0}
{"id": "eqasc_train_14236", "prediction": "all x.(RunoffFromPrecipitation(x) -> NaturalPartOfWaterCycle(x))", "score": 0}
{"id": "eqasc_train_14237", "prediction": "all x.(Lake(x) -> FormedByWaterCycle(x))", "score": 0}
{"id": "eqasc_train_14238", "prediction": "all x.(Desert(x) -> ScarcityOfPrecipitation(x))", "score": 0}
{"id": "eqasc_train_14239", "prediction": "all x.((Lake(x) & Desert(x)) -> DifficultToFindIn(x,Desert))", "score": 0}
{"id": "eqasc_train_14240", "prediction": "(Precipitation(Rain) & Precipitation(Hail) & Precipitation(Snow))", "score": 0}
{"id": "eqasc_train_14241", "prediction": "all x.(Lake(x) -> (FormedByRain(x) & Rain(x)))", "score": 0}
{"id": "eqasc_train_14242", "prediction": "all x.(Lake(x) -> (FormedByRain(x) & FormedByRunoff(x)))", "score": 0}
{"id": "eqasc_train_14243", "prediction": "all x.(SnowmeltRunoff(x) -> SignificantSourceOfAnnualRunoff(x))", "score": 0}
{"id": "eqasc_train_14244", "prediction": "all x.(Snowmelt(x) -> CanHelpFormLakes(x))", "score": 0}
{"id": "eqasc_train_14245", "prediction": "all x.(LakeTahoe(x) -> (HasMountainStreamRunoff(x) & OriginatesFrom(x,Tahoe)))", "score": 0}
{"id": "eqasc_train_14246", "prediction": "all x y.((LakeTahoe(x) & MountainStream(y)) -> OriginatesFrom(x,y))", "score": 0}
{"id": "eqasc_train_14247", "prediction": "all x.((Precipitation(x) & Runoff(x)) -> CanCreateLargeBodiesOfInlandWater(x))", "score": 0}
{"id": "eqasc_train_14248", "prediction": "all x.(Cloud(x) -> (Forms(x) & PrecipitationOccurs(x)))", "score": 0}
{"id": "eqasc_train_14249", "prediction": "all x y.((Lake(x) & Cloud(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_train_14250", "prediction": "all x.(RunoffWater(x) -> WastedWater(x))", "score": 0}
{"id": "eqasc_train_14251", "prediction": "all x.(Lake(x) -> (FormedByPrecipitation(x) & WastedWater(x)))", "score": 0}
{"id": "eqasc_train_14252", "prediction": "all x.(CaspianSea(x) -> (-Sea(x) & LargestLake(x)))", "score": 0}
{"id": "eqasc_train_14253", "prediction": "all x.(CaspianSea(x) -> (FormedByPrecipitation(x) & FormedByRunoff(x)))", "score": 0}
{"id": "eqasc_train_14254", "prediction": "all x.(Lake(x) -> (StandingWater(x) & -Moving(x)))", "score": 0}
{"id": "eqasc_train_14255", "prediction": "all x.((BodyOfStandingWater(x) & Precipitation(x) & Runoff(x)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_train_14256", "prediction": "all x y z.((FossilFuel(x) & Organism(y) & Organism(z)) -> FormedFromDead(x,y,z))", "score": 0}
{"id": "eqasc_train_14257", "prediction": "all x y.((Coal(x) & DeadOrganism(y)) -> FormedFrom(x,y))", "score": 0}
{"id": "eqasc_train_14258", "prediction": "all x y.((FossilFuel(x) & Decomposer(y)) -> FormedWithHelp(x,y))", "score": 0}
{"id": "eqasc_train_14259", "prediction": "all x.(Oil(x) -> FossilFuel(x))", "score": 0}
{"id": "eqasc_train_14260", "prediction": "all x y z.((Oil(x) & DeadOrganism(y) & Time(z)) -> FormedFrom(x,y,z))", "score": 0}
{"id": "eqasc_train_14261", "prediction": "all x y z.((Petroleum(x) & DeadOrganism(y) & Time(z)) -> FormedFrom(x,y,z))", "score": 0}
{"id": "eqasc_train_14262", "prediction": "all x y.((BurningDeadOrganisms(x) & Energy(y)) -> Creates(x,y))", "score": 0}
{"id": "eqasc_train_14263", "prediction": "all x y.((Oil(x) & Gasoline(y)) -> (FormedFromDeadOrganisms(x,y) & OverTime(x)))", "score": 0}
{"id": "eqasc_train_14264", "prediction": "all x y.((FossilFuel(x) & DecomposersDecompose(y)) -> FormedOverTimeFrom(x,y))", "score": 0}
{"id": "eqasc_train_14265", "prediction": "all x.(Eon(x) -> LargestDivisionOfTimeScale(x))", "score": 0}
{"id": "eqasc_train_14266", "prediction": "all x.(FossilFuel(x) -> FormedFromDeadOrganisms(x))", "score": 0}
{"id": "eqasc_train_14267", "prediction": "all x.(FossilFuel(x) -> DecayProduct(x))", "score": 0}
{"id": "eqasc_train_14268", "prediction": "all x.((Gases(x) & ReleasedDuringFossilFuels(x)) -> CausesGlobalWarming(x))", "score": 0}
{"id": "eqasc_train_14269", "prediction": "all x.((Car(x) | Factory(x)) -> (BurnsFossilFuels(x) & ReleasesNitrogenOxygen(x) & ReleasesReactiveOrganicCompounds(x)))", "score": 0}
{"id": "eqasc_train_14270", "prediction": "all x y.((Car(x) & Factory(y)) -> ContributesToGlobalWarming(x,y))", "score": 0}
{"id": "eqasc_train_14271", "prediction": "all x.(GlobalWarming(x) -> (GreatEffectOnCrops(x) & GreatEffectOnWeatherConditions(x)))", "score": 0}
{"id": "eqasc_train_14272", "prediction": "all x.((Gases(x) & ReleasedDuringFossilFuels(x)) -> (EffectsCrops(x) & EffectsWeatherConditions(x)))", "score": 0}
{"id": "eqasc_train_14273", "prediction": "all x.(GlobalWarming(x) -> (CombustionOfOil(x) & CombustionOfGas(x) & CombustionOfCoal(x)))", "score": 0}
{"id": "eqasc_train_14274", "prediction": "all x y z.((UseOfOil(x) & UseOfGas(y) & UseOfCoal(z)) -> ContributesToRisingClimateTemperature(x))", "score": 0}
{"id": "eqasc_train_14275", "prediction": "all x.(GlobalWarming(x) -> ThreatensPlanet(x))", "score": 0}
{"id": "eqasc_train_14276", "prediction": "all x.((Gases(x) & ReleasedDuringFossilFuels(x)) -> ThreatensEachPlanet(x))", "score": 0}
{"id": "eqasc_train_14277", "prediction": "all x.(CarbonDioxide(x) -> (ProducedByBurningOfFossilFuels(x) & (Coal(x) | Oil(x) | NaturalGas(x))))", "score": 0}
{"id": "eqasc_train_14278", "prediction": "all x.((BurningCoal(x) & BurningOil(x) & BurningNaturalGas(x)) -> CausesGlobalWarming(x))", "score": 0}
{"id": "eqasc_train_14279", "prediction": "all x.(Oil(x) -> FossilFuel(x))", "score": 0}
{"id": "eqasc_train_14280", "prediction": "all x.((Gases(x) & ReleasedDuringOilUse(x)) -> CausesGlobalWarming(x))", "score": 0}
{"id": "eqasc_train_14281", "prediction": "all x.(FossilFuel(x) -> (Coal(x) | Oil(x) | NaturalGas(x)))", "score": 0}
{"id": "eqasc_train_14282", "prediction": "all x.(Coal(x) -> CausesGlobalWarming(x))", "score": 0}
{"id": "eqasc_train_14283", "prediction": "all x.(GlobalWarming(x) -> GlobalEnvironmentalProblem(x))", "score": 0}
{"id": "eqasc_train_14284", "prediction": "all x.((Gases(x) & ReleasedDuringFossilFuels(x)) -> GlobalEnvironmentalProblem(x))", "score": 0}
{"id": "eqasc_train_14285", "prediction": "all x.((GeothermalEnergy(x) & -FossilFuels(x)) -> ProducesElectricity(x))", "score": 0}
{"id": "eqasc_train_14286", "prediction": "all x y.((GeothermalEnergy(x) & Electricity(y)) -> ReducesGlobalWarming(x,y))", "score": 0}
{"id": "eqasc_train_14287", "prediction": "all x.((GasesReleasedDuringOilUse(x) & OilUse(x)) -> GlobalWarming(x))", "score": 0}
{"id": "eqasc_train_14288", "prediction": "all x.(GlobalWarming(x) -> (ClimateOscillation(x) & BadWeather(x)))", "score": 0}
{"id": "eqasc_train_14289", "prediction": "all x.((Gases(x) & ReleasedDuringFossilFuels(x)) -> (ClimateOscillation(x) & BadWeather(x)))", "score": 0}
{"id": "eqasc_train_14290", "prediction": "all x y.((SeaLevelRise(x) & GlobalWarming(y)) -> (CausedBy(x,y) & FastestGrowingSource(x,AirTraffic)))", "score": 0}
{"id": "eqasc_train_14291", "prediction": "all x.((Gases(x) & ReleasedDuringFossilFuels(x)) -> CausesSeaLevelRise(x))", "score": 0}
{"id": "eqasc_train_14292", "prediction": "all x.((Gases(x) & ReleasedDuringUseOfCoalOilNaturalGas(x)) -> CausesGlobalWarming(x))", "score": 0}
{"id": "eqasc_train_14293", "prediction": "all x.(GlobalWarming(x) -> CausesIceStorms(x))", "score": 0}
{"id": "eqasc_train_14294", "prediction": "all x.(FossilFuels(x) -> CausesIceStorms(x))", "score": 0}
{"id": "eqasc_train_14295", "prediction": "all x.(Plant(x) -> UsesUnsaturatedFattyAcids(x))", "score": 1}
{"id": "eqasc_train_14296", "prediction": "all x.(SilverSage(x) -> PlantSelect(x))", "score": 0}
{"id": "eqasc_train_14297", "prediction": "all x.(SilverSage(x) -> (UsesUnsaturatedFattyAcids(x) & StoresEnergy(x)))", "score": 0}
{"id": "eqasc_train_14298", "prediction": "all x.(Plant(x) -> (UsesUnsaturatedFattyAcids(x) & StoresSunlight(x)))", "score": 0}
{"id": "eqasc_train_14299", "prediction": "all x.(Energy(x) -> MeasuredInJules(x))", "score": 0}
{"id": "eqasc_train_14300", "prediction": "all x y.((Plant(x) & UnsaturatedFattyAcids(y)) -> StoresInJoyles(x,y))", "score": 0}
{"id": "eqasc_train_14301", "prediction": "all x.((Plant(x) & (Cactus(x) | Sagebrush(x))) -> CanSurvive(x))", "score": 0}
{"id": "eqasc_train_14302", "prediction": "all x.(Cactus(x) -> UsesUnsaturatedFattyAcidsToStoreEnergy(x))", "score": 0}
{"id": "eqasc_train_14303", "prediction": "all x.(FishOil(x) -> ContainsHighlyUnsaturatedFatherAcids(x))", "score": 0}
{"id": "eqasc_train_14304", "prediction": "all x y.((Plant(x) & Fish(y)) -> (ContainsFattyAcids(x,y) & ContainsFattyAcids(y)))", "score": 0}
{"id": "eqasc_train_14305", "prediction": "all x.(Bush(x) -> (UsesUnsaturatedFattyAcids(x) & StoresEnergy(x)))", "score": 0}
{"id": "eqasc_train_14306", "prediction": "all x.(UnsaturatedFatherAcid(x) -> (Compound(x) & (OneBond(x) | TwoBonds(x) | ThreeBonds(x))))", "score": 0}
{"id": "eqasc_train_14307", "prediction": "all x y.((Plant(x) & Compound(y) & DoubleBond(y)) -> StoresEnergy(x,y))", "score": 0}
{"id": "eqasc_train_14308", "prediction": "all x.(Oak(x) -> UsesUnsaturatedFattyAcids(x))", "score": 1}
{"id": "eqasc_train_14309", "prediction": "all x.(FoodEnergy(x) -> OriginatesFromSunlight(x))", "score": 0}
{"id": "eqasc_train_14310", "prediction": "all x.(Antibodies(x) -> (LargeYShapedProtein(x) & RecognizesAntigens(x) & BindsToAntigens(x)))", "score": 0}
{"id": "eqasc_train_14311", "prediction": "all x.(Antibodies(x) -> (LargeYShapedProteins(x) & RecognizeCancerCells(x) & BindToCancerCells(x)))", "score": 0}
{"id": "eqasc_train_14312", "prediction": "ALL x.(ImmuneGen(x) -> Antigen(x))", "score": -1}
{"id": "eqasc_train_14313", "prediction": "all x.(Antibodies(x) -> (LargeYShapedProtein(x) & RecognizeImmunogens(x) & BindToImmunogens(x)))", "score": 0}
{"id": "eqasc_train_14314", "prediction": "all x y.((Protein(x) & Antigen(y)) -> Fights(x,y))", "score": 0}
{"id": "eqasc_train_14315", "prediction": "all x.(Antibodies(x) -> (LargeYShapedProtein(x) & RecognizeImmunogens(x) & BindToImmunogens(x)))", "score": 0}
{"id": "eqasc_train_14316", "prediction": "all x.(AllerrgicReaction(x) -> CausedByAntigens(x))", "score": 0}
{"id": "eqasc_train_14317", "prediction": "all x.(Antibodies(x) -> CanCauseAllergyReactions(x))", "score": 0}
{"id": "eqasc_train_14318", "prediction": "all x.(Antibodies(x) -> (DesignedToBindWith(x,FrenchProteins) & Antigens(x)))", "score": 0}
{"id": "eqasc_train_14319", "prediction": "all x.(Antibodies(x) -> (LargeYShapeProtein(x) & DesignedToBindWithForeignProteins(x)))", "score": 0}
{"id": "eqasc_train_14320", "prediction": "all x y.((Protein(x) & Antigen(y)) -> (ProducedBy(x,y) & Large(x) & YShaped(x)))", "score": 0}
{"id": "eqasc_train_14321", "prediction": "exists x.(Antibodies(x) & AntophospholipidAntibodies(x) & CausesBloodClots(x))", "score": 0}
{"id": "eqasc_train_14322", "prediction": "exists x y z.(Protein(x) & Antigen(y) & Antigen(z) & BindTo(x,y,z) & CausesBloodClots(x))", "score": 0}
{"id": "eqasc_train_14323", "prediction": "all x.(Allergen(x) -> Antigen(x))", "score": 0}
{"id": "eqasc_train_14324", "prediction": "all x.(Antibody(x) -> BindToAllergens(x))", "score": 0}
{"id": "eqasc_train_14325", "prediction": "all x.(Antibodies(x) -> (LargeYShapedProtein(x) & RecognizeImmunogens(x) & BindToImmunogens(x)))", "score": 0}
{"id": "eqasc_train_14326", "prediction": "all x.(Virus(x) -> -ReproducesByOther(x))", "score": 0}
{"id": "eqasc_train_14327", "prediction": "all x.(Virus(x) -> CauseOfMyocarditis(x))", "score": 0}
{"id": "eqasc_train_14328", "prediction": "all x.((CauseOfMyocarditis(x) & -ReproduceByself(x)) -> -CanReproduceByOthers(x))", "score": 0}
{"id": "eqasc_train_14329", "prediction": "all x.(Smallpox(x) -> -ReproducesByItself(x))", "score": 0}
{"id": "eqasc_train_14330", "prediction": "all x.(TobaccoMosaicVirus(x) -> -ReproducesByItself(x))", "score": 0}
{"id": "eqasc_train_14331", "prediction": "all x.(Password(x) -> (Multiply(x) & Reproduce(x)))", "score": 0}
{"id": "eqasc_train_14332", "prediction": "all x.(Virus(x) -> -Mix(x))", "score": 0}
{"id": "eqasc_train_14333", "prediction": "all x.(Virus(x) -> (AttacksToCells(x) & Reproduces(x)))", "score": 0}
{"id": "eqasc_train_14334", "prediction": "all x.(Virus(x) -> (-MakesCopiesOfAlone(x) & AttachesToCells(x)))", "score": 0}
{"id": "eqasc_train_14335", "prediction": "all x.(Influenza(x) -> (Disease(x) & -ReproducesBy(x)))", "score": 0}
{"id": "eqasc_train_14336", "prediction": "all x.(Rabie(x) -> -ReproduceByOther(x))", "score": 0}
{"id": "eqasc_train_14337", "prediction": "all x.(InfluenzaVirus(x) -> ChangesContinuously(x))", "score": 0}
{"id": "eqasc_train_14338", "prediction": "all x.(Influenza(x) -> -ReproducesByOther(x))", "score": 0}
{"id": "eqasc_train_14339", "prediction": "all x.((Agent(x) & Smallest(x)) -> -ReproduceByOthers(x))", "score": 0}
{"id": "eqasc_train_14340", "prediction": "all x.((Germs(x) & CausesPeopleToGetSick(x)) -> -ReproduceByOwners(x))", "score": 0}
{"id": "eqasc_train_14341", "prediction": "all x.(InfluenzaVirus(x) -> (InfluenzaVirus(x) & Orthomyxoviridae(x)))", "score": 0}
{"id": "eqasc_train_14342", "prediction": "all x.(Influenza(x) -> -ReproduceByOthers(x))", "score": 0}
{"id": "eqasc_train_14343", "prediction": "all x y.((Decomposition(x) & Soil(y)) -> IncreasesOrganicMatter(x,y))", "score": 2}
{"id": "eqasc_train_14344", "prediction": "all x.(Composting(x) -> NaturalDecompositionOfOrganicMatter(x))", "score": 0}
{"id": "eqasc_train_14345", "prediction": "all x y.((Composting(x) & Soil(y)) -> IncreasesOrganicMatter(x,y))", "score": 0}
{"id": "eqasc_train_14346", "prediction": "all x.(OrganicMatter(x) -> AddsNutrientsToSoil(x))", "score": 0}
{"id": "eqasc_train_14347", "prediction": "all x y.((Soil(x) & Soil(y)) -> IncreasesNutrients(x,y))", "score": 0}
{"id": "eqasc_train_14348", "prediction": "all x y z.((Decomposition(x) & PlantResidue(y) & AnimalResidue(z)) -> IncreasesInSoil(x,y,z))", "score": 0}
{"id": "eqasc_train_14349", "prediction": "all x.(OrganicMulch(x) -> ImprovesSoil(x))", "score": 0}
{"id": "eqasc_train_14350", "prediction": "all x y.((Decomposition(x) & Soil(y)) -> ImprovesSoil(x,y))", "score": 0}
{"id": "eqasc_train_14351", "prediction": "all x.(OrganicMatter(x) -> ByproductOfDecomposition(x))", "score": 0}
{"id": "eqasc_train_14352", "prediction": "all x.(OrganicMatter(x) -> IncreasedByDecomposing(x))", "score": 0}
{"id": "eqasc_train_14353", "prediction": "all x.(OrganicMatter(x) -> (VarietyOfCarbonContentingCompounds(x) & InSoil(x)))", "score": 0}
{"id": "eqasc_train_14354", "prediction": "all x y.((Decomposition(x) & Soil(y)) -> IncreasesCarbonContentCompounds(x,y))", "score": 0}
{"id": "eqasc_train_14355", "prediction": "all x.(Fungus(x) -> (Decomposition(x) | Decomposition(x)))", "score": 2}
{"id": "eqasc_train_14356", "prediction": "all x y.((Fungus(x) & Soil(y)) -> IncreasesOrganicMatter(x,y))", "score": 1}
{"id": "eqasc_train_14357", "prediction": "all x.(Carbon(x) -> OrganicCompound(x))", "score": 0}
{"id": "eqasc_train_14358", "prediction": "all x y.((Soil(x) & Carbon(y)) -> IncreasesInSoil(x,y))", "score": 0}
{"id": "eqasc_train_14359", "prediction": "all x.((Dirt(x) | Soot(x) | Soil(x)) -> DistinctFromMildew(x))", "score": 0}
{"id": "eqasc_train_14360", "prediction": "all x.(Decomposition(x) -> IncreasesOrganicMatter(x))", "score": 0}
{"id": "eqasc_train_14361", "prediction": "all x y.((OrganicMatter(x) & Plant(y)) -> (HelpsGrowStrong(y,x) & HelpsGrowHealthy(y,x)))", "score": 0}
{"id": "eqasc_train_14362", "prediction": "all x y.((Plant(x) & Plant(y)) -> (HelpsGrowStrong(x,y) & HelpsGrowHealthy(x,y)))", "score": 0}
{"id": "eqasc_train_14363", "prediction": "all x.(Decomposition(x) -> CreatesCompost(x))", "score": 0}
{"id": "eqasc_train_14364", "prediction": "all x.(Bacteria(x) -> InitiatesDecompositionOfPlants(x))", "score": 0}
{"id": "eqasc_train_14365", "prediction": "all x.(Bacteria(x) -> IncreasesOrganicMatter(x))", "score": 0}
{"id": "eqasc_train_14366", "prediction": "all x y.((Decomposition(x) & Soil(y)) -> IncreasesDeadPlantAndAnimal(x,y))", "score": 0}
{"id": "eqasc_train_14367", "prediction": "all x.(OrganicMatter(x) -> Acidic(x))", "score": 0}
{"id": "eqasc_train_14368", "prediction": "all x.(Decomposition(x) -> IncreasesAcidAmount(x))", "score": 0}
{"id": "eqasc_train_14369", "prediction": "all x y.((Fungus(x) & Soil(y)) -> IncreasesOrganicMatter(x,y))", "score": 1}
{"id": "eqasc_train_14370", "prediction": "all x.(OrganicMatter(x) -> ImportantToSoilProductivity(x))", "score": 0}
{"id": "eqasc_train_14371", "prediction": "all x.(Decomposition(x) -> ImportantToSoilProductivity(x))", "score": 0}
{"id": "eqasc_train_14372", "prediction": "all x y.((Plant(x) & PlantLife(y) & Retinament(x,y) & Decomposition(x,y)) -> ConsumesDissolvedOxygen(x,y))", "score": 0}
{"id": "eqasc_train_14373", "prediction": "all x y.((DissolvedOxygen(x) & Soil(y)) -> IncreasesOrganicMatter(x,y))", "score": 0}
{"id": "eqasc_train_14374", "prediction": "all x.(Mollusk(x) -> (LivesIn(x,Terrestrial) | LivesIn(x,Freshwater) | LivesIn(x,Marine)))", "score": 2}
{"id": "eqasc_train_14375", "prediction": "all x.(Clam(x) -> LivesInFreshwaterHabitat(x))", "score": 0}
{"id": "eqasc_train_14376", "prediction": "all x.(Clamm(x) -> (LivesIn(x,Terrestrial) | LivesIn(x,Freshwater) | LivesIn(x,Marine)))", "score": 0}
{"id": "eqasc_train_14377", "prediction": "(all x.(Trout(x) -> FreshwaterFish(x)) & exists y.(Trout(y) & MarineWater(y)))", "score": 0}
{"id": "eqasc_train_14378", "prediction": "exists x.(Mollusk(x) & LivesNearTrout(x))", "score": 0}
{"id": "eqasc_train_14379", "prediction": "all x.(Mullusk(x) -> (LivesIn(x,Terrestrial) | LivesIn(x,Freshwater) | LivesIn(x,Marine)))", "score": 0}
{"id": "eqasc_train_14380", "prediction": "all x.(Mollusk(x) -> ShoreDwellingCreature(x))", "score": 0}
{"id": "eqasc_train_14381", "prediction": "all x.(Clam(x) -> (SurfaceDwellingCreature(x) & LivesInSeaAndFreshwater(x)))", "score": 0}
{"id": "eqasc_train_14382", "prediction": "all x.(Squid(x) -> LivesInMarineHabitat(x))", "score": 0}
{"id": "eqasc_train_14383", "prediction": "all x.(Squid(x) -> (LivesIn(x,Terrestrial) | LivesIn(x,Freshwater) | LivesIn(x,Marine)))", "score": 1}
{"id": "eqasc_train_14384", "prediction": "all x.(Snail(x) -> (LivesIn(x,Terrestrial) | LivesIn(x,Freshwater) | LivesIn(x,Marine)))", "score": 0}
{"id": "eqasc_train_14385", "prediction": "all x.(Oyster(x) -> (LivesIn(x,Terrestrial) | LivesIn(x,Freshwater) | LivesIn(x,Marine)))", "score": 1}
{"id": "eqasc_train_14386", "prediction": "all x y.((FossilFuel(x) & CarbonInAtmosphere(y)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_train_14387", "prediction": "all x.((IncreasedAtmosphericCarbonDioxide(x) & IncreasesGreenhouseEffect(x) & WarmsEarth(x)) -> IncreasesAndWarmsEarth(x))", "score": 0}
{"id": "eqasc_train_14388", "prediction": "all x y.((FossilFuel(x) & Earth(y)) -> Warms(x,y))", "score": 0}
{"id": "eqasc_train_14389", "prediction": "all x.(Atmosphere(x) -> CarbonDioxide(x))", "score": 0}
{"id": "eqasc_train_14390", "prediction": "all x.(FossilFuel(x) -> IncreasesCarbonDioxide(x))", "score": 0}
{"id": "eqasc_train_14391", "prediction": "all x.((Carbon(x) & Atmosphere(x)) -> AtmosphericWarming(x))", "score": 0}
{"id": "eqasc_train_14392", "prediction": "all x y.((FossilFuel(x) & Burning(x,y)) -> WarmsAtmosphere(y))", "score": 0}
{"id": "eqasc_train_14393", "prediction": "all x.((FossilFuel(x) & Burning(x)) -> IncreasesAtmosphericWarming(x))", "score": 0}
{"id": "eqasc_train_14394", "prediction": "all x y.((BurningNaturalGas(x) & Atmosphere(y)) -> IncreasesCarbon(x,y))", "score": 0}
{"id": "eqasc_train_14395", "prediction": "all x.(AtmosphericCarbon(x) -> ContributesToGreenhouseEffect(x))", "score": 0}
{"id": "eqasc_train_14396", "prediction": "all x.((FossilFuel(x) & Burning(x)) -> ContributesToGreenhouseEffect(x))", "score": 0}
{"id": "eqasc_train_14397", "prediction": "all x.((IncreaseInCarbonDioxide(x) & LowerAtmosphere(x)) -> IncreaseInTemperature(x))", "score": 0}
{"id": "eqasc_train_14398", "prediction": "all x y.((FossilFuel(x) & LowerAtmosphere(y)) -> IncreasedTemperature(x,y))", "score": 0}
{"id": "eqasc_train_14399", "prediction": "all x y.((BurningCoal(x) & CarbonInAtmosphere(y)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_train_14400", "prediction": "all x y z.((Burning(x,y) & (Coal(y) | Oil(y) | NaturalGas(y))) -> IncreasesCarbonInAtmosphere(z))", "score": 0}
{"id": "eqasc_train_14401", "prediction": "all x.((FossilFuel(x) & Burning(x)) -> IncreasesGlobalWarming(x))", "score": 0}
{"id": "eqasc_train_14402", "prediction": "all x.(FossilFuel(x) -> -SustainableFuel(x))", "score": 0}
{"id": "eqasc_train_14403", "prediction": "all x.((BurningFuel(x) & -Sustainable(x)) -> IncreasesCarbonInAtmosphere(x))", "score": 0}
{"id": "eqasc_train_14404", "prediction": "all x y.((BurningOil(x) & CarbonInAtmosphere(y)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_train_14405", "prediction": "all x.((Byproduct(x) & BurningFossilFuels(x)) -> CarbonDioxide(x))", "score": 0}
{"id": "eqasc_train_14406", "prediction": "all x y.((Byproduct(x) & FossilFuels(y)) -> Carbon(x))", "score": 0}
{"id": "eqasc_train_14407", "prediction": "all x y z.((Fossil(x) & LayersOfSediment(y) & Organism(z) & CoversRemains(y,z)) -> Formed(x))", "score": 0}
{"id": "eqasc_train_14408", "prediction": "all x.(Fossil(x) -> (PrehistoricLife(x) & PreservedInRock(x)))", "score": 0}
{"id": "eqasc_train_14409", "prediction": "all x y.((PrehistoricLife(x) & Sediment(y) & LayersOfSediment(y)) -> PreservedInRock(x))", "score": 0}
{"id": "eqasc_train_14410", "prediction": "all x y z.((NaturalGas(x) & Sediment(y) & Organism(z) & LayersOfSediment(y) & CoversRemains(y,z)) -> FormedFrom(x,y,z))", "score": 0}
{"id": "eqasc_train_14411", "prediction": "all x.(FossilFuel(x) -> (FormedFromRemainsOfLivingOrganisms(x) & DependedOnLight(x)))", "score": 0}
{"id": "eqasc_train_14412", "prediction": "all x.(Fossil(x) -> (FormedByRemains(x) & CoveredOverTime(x)))", "score": 0}
{"id": "eqasc_train_14413", "prediction": "all x y.((Death(x) & Hospital(y)) -> MovedToMorgue(x,y))", "score": 0}
{"id": "eqasc_train_14414", "prediction": "all x.(Fossil(x) -> (FormedBySediment(x) & CoversDeadOrganisms(x)))", "score": 0}
{"id": "eqasc_train_14415", "prediction": "all x y z.((Fossil(x) & Sand(y) & Mud(z)) -> (FormedWith(x,y) & CoversRemains(x,z)))", "score": 0}
{"id": "eqasc_train_14416", "prediction": "all x y.((Fossil(x) & Sediment(y) & LayersOfSediment(y)) -> CoversRemainsOfFish(x,y))", "score": 0}
{"id": "eqasc_train_14417", "prediction": "all x y.((SandLayer(x) & OrganismRemains(y) & OverTime(x,y)) -> CreatesFossil(x))", "score": 0}
{"id": "eqasc_train_14418", "prediction": "all x.((Plant(x) & CoveredInSedimentLayer(x) & OverTime(x)) -> Fossil(x))", "score": 0}
{"id": "eqasc_train_14419", "prediction": "all x.(Fossil(x) -> PreservedBySedimentation(x))", "score": 0}
{"id": "eqasc_train_14420", "prediction": "all x y.((Sedimentation(x) & Water(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_train_14421", "prediction": "all x.(Stream(x) -> CarriesSediment(x))", "score": 0}
{"id": "eqasc_train_14422", "prediction": "all x y z.((Fossil(x) & LayersOfSomething(y) & StreamsCarry(z) & CoversRemainsOfOrganisms(x,y,z)) -> FormedWhenLayersOfSomething(x))", "score": 0}
{"id": "eqasc_train_14423", "prediction": "all x y.((TreatingWater(x) & DrinkingWater(y)) -> RemovesHarmfulSubstances(x,y))", "score": 0}
{"id": "eqasc_train_14424", "prediction": "all x.((Water(x) & SafeToDrink(x)) -> TreatAllTime(x))", "score": 0}
{"id": "eqasc_train_14425", "prediction": "all x.((Water(x) & SafeToDrinkHarmfulSubstances(x)) -> RemovedBeforeDrinking(x))", "score": 0}
{"id": "eqasc_train_14426", "prediction": "all x.((TapWater(x) & Ordinary(x)) -> (HazardousSubstances(x) & (Chlorine(x) | Pesticides(x) | HeavyMetals(x))))", "score": 0}
{"id": "eqasc_train_14427", "prediction": "all x.(TreatingWater(x) -> (RemovesChlorine(x) & RemovesPesticides(x) & RemovesHeavyMetals(x) & BeforeDrinking(x)))", "score": 0}
{"id": "eqasc_train_14428", "prediction": "all x.(ChlorineBleath(x) -> IdealForTreatingWater(x))", "score": 0}
{"id": "eqasc_train_14429", "prediction": "all x.(ChlorineBleath(x) -> RemovesHarmfulSubstancesFromDrinkingWater(x))", "score": 0}
{"id": "eqasc_train_14430", "prediction": "all x.(ChlorineBleath(x) -> RemovesHarmfulSubstances(x))", "score": 0}
{"id": "eqasc_train_14431", "prediction": "all x.(Boiling(x) -> SafestMethodOfTreatingWater(x))", "score": 0}
{"id": "eqasc_train_14432", "prediction": "all x.(Water(x) -> CanBeBoiltToRemoveHarmfulSubstances(x))", "score": 0}
{"id": "eqasc_train_14433", "prediction": "all x y.((TreatingWater(x) & Water(y)) -> RemovePollutionBeforeDrinking(x,y))", "score": 0}
{"id": "eqasc_train_14434", "prediction": "all x.(Chlorine(x) -> TreatsWater(x))", "score": 0}
{"id": "eqasc_train_14435", "prediction": "all x.(Chlorine(x) -> RemovesHarmfulSubstances(x))", "score": 0}
{"id": "eqasc_train_14436", "prediction": "all x.(DistilledWater(x) -> RemovesMinerals(x))", "score": 0}
{"id": "eqasc_train_14437", "prediction": "all x.(DistillingWater(x) -> RemovesHarmfulSubstancesBeforeDrinking(x))", "score": 0}
{"id": "eqasc_train_14438", "prediction": "all x.((NaturallyOccurringSubstance(x) & Arsenic(x)) -> ContaminatesWaterSources(x))", "score": 0}
{"id": "eqasc_train_14439", "prediction": "all x y.((TreatingWater(x) & Water(y)) -> (RemovesArsenic(x,y) & BeforeDrinking(x,y)))", "score": 0}
{"id": "eqasc_train_14440", "prediction": "all x.(Boiling(x) -> TreatsContaminatedWater(x))", "score": 0}
{"id": "eqasc_train_14441", "prediction": "all x.(Boiling(x) -> MakesWaterLessHarmfulToDrink(x))", "score": 0}
{"id": "eqasc_train_14442", "prediction": "all x.(CleanDrinkingWater(x) -> Luxuy(x))", "score": 0}
{"id": "eqasc_train_14443", "prediction": "all x.(TreatingWater(x) -> Luxuy(x))", "score": 0}
{"id": "eqasc_train_14444", "prediction": "exists x.(Substance(x) & (Inhaled(x) | Touched(x))) -> (CausesSevereInjury(x) | CausesDeath(x)))", "score": -1}
{"id": "eqasc_train_14445", "prediction": "all x.(TreatingWater(x) -> PreventsDeath(x))", "score": 0}
{"id": "eqasc_train_14446", "prediction": "all x.((Scientist(x) & (Ganga(x) | Tap(x))) -> H2O(x))", "score": 0}
{"id": "eqasc_train_14447", "prediction": "all x.((TreatingH2O(x) & RemovesHarmfulSubstances(x)) -> Drinking(x))", "score": 0}
{"id": "eqasc_train_14448", "prediction": "all x.((Hydration(x) & DrinksLotOfFluid(x)) -> Maintains(x))", "score": 0}
{"id": "eqasc_train_14449", "prediction": "all x y.((TreatingWater(x) & Hydration(y)) -> RemovesHarmfulSubstances(x,y))", "score": 0}
{"id": "eqasc_train_14450", "prediction": "all x.(BottledWater(x) -> OftenTreated(x))", "score": 0}
{"id": "eqasc_train_14451", "prediction": "all x.(BlendedWater(x) -> -HazardousSubstances(x))", "score": 0}
{"id": "eqasc_train_14452", "prediction": "all x y.((Eats(x,y) & ContainsPollutants(x)) -> NegativeImpactOnOrganismSurvival(y))", "score": 0}
{"id": "eqasc_train_14453", "prediction": "exists x.(WorstPollutant(x) & SyntheticChemicals(x))", "score": 0}
{"id": "eqasc_train_14454", "prediction": "all x y.((Eats(x) & ContainsSyntheticChemicals(x)) -> NegativeImpactOnOrganismSurvival(y))", "score": 0}
{"id": "eqasc_train_14455", "prediction": "all x y.((Eats(x,y) & ContainsPollutants(x)) -> NegativeImpactOnAnimalSurvival(y))", "score": 0}
{"id": "eqasc_train_14456", "prediction": "all x.(Lake(x) -> (PollutedWithMercury(x) & UnsafeToEat(x)))", "score": 0}
{"id": "eqasc_train_14457", "prediction": "all x y.((Eating(x,y) & Mercury(y)) -> NegativeImpactOnOrganismSurvival(x,y))", "score": 0}
{"id": "eqasc_train_14458", "prediction": "all x y.((Pollution(x) & LivingOrganism(y)) -> (KillsDirectly(x,y) & KillsSelectively(x,y) & AffectsBiodiversity(x,y)))", "score": 0}
{"id": "eqasc_train_14459", "prediction": "all x.((Eating(x) & ContainsPollutants(x)) -> KillsDirectlyAndSelectively(x))", "score": 0}
{"id": "eqasc_train_14460", "prediction": "all x.(NaturalOrganicFood(x) -> (GrownWithoutUnsafeChemicals(x) & PollutingChemicals(x)))", "score": 0}
{"id": "eqasc_train_14461", "prediction": "all x y.((NaturallyOrganicFood(x) & Organism(y)) -> PreventsNegativeImpactOnSurvival(x,y))", "score": 0}
{"id": "eqasc_train_14462", "prediction": "all x.((Eating(x) & ContainsPollutants(x)) -> NegativeImpactOnLivingBeingSurvival(x))", "score": 0}
{"id": "eqasc_train_14463", "prediction": "all x.(LeadCompound(x) -> MarinePollutant(x))", "score": 0}
{"id": "eqasc_train_14464", "prediction": "all x y z.((Eating(x) & Lead(y) & Organism(z) & Contains(x,y)) -> NegativeImpactOnSurvival(x,z))", "score": 0}
{"id": "eqasc_train_14465", "prediction": "all x.((Smoking(x) | Pollution(x)) -> (CausesCancer(x) & CausesCancer(x)))", "score": 0}
{"id": "eqasc_train_14466", "prediction": "all x.(Cancer(x) -> NegativeImpactOnSurvival(x))", "score": 0}
{"id": "eqasc_train_14467", "prediction": "all x.(Dolphin(x) -> IntelligentOrganism(x))", "score": 0}
{"id": "eqasc_train_14468", "prediction": "all x y.((Eats(x) & ContainsPollutants(x)) -> NegativeImpactOnDolphin(y))", "score": 0}
{"id": "eqasc_train_14469", "prediction": "all x.(Chloroplast(x) -> ContainsGreenPigment(x,Chlorophyll))", "score": 0}
{"id": "eqasc_train_14470", "prediction": "all x.(Chloroplast(x) -> (FoundInLeaves(x) & FoundInSurfaceCells(x)))", "score": 0}
{"id": "eqasc_train_14471", "prediction": "all x y.((Leaves(x) & SurfaceCells(y) & Stems(y)) -> ContainsGreenPigmentChlorophyll(x))", "score": 0}
{"id": "eqasc_train_14472", "prediction": "all x.(Animal(x) -> LacksChlorophyll(x))", "score": 2}
{"id": "eqasc_train_14473", "prediction": "all x.(Animal(x) -> LacksChlorophyll(x))", "score": 2}
{"id": "eqasc_train_14474", "prediction": "all x.(Animal(x) -> LacksGreenPigmentChlorophyll(x))", "score": 0}
{"id": "eqasc_train_14475", "prediction": "all x.(Animal(x) -> -HasChlorophyll(x))", "score": 0}
{"id": "eqasc_train_14476", "prediction": "all x.(Chlorophyll(x) -> PhotosynthesisPigment(x))", "score": 0}
{"id": "eqasc_train_14477", "prediction": "all x y.((Photosynthesis(x) & Chlorophyll(y)) -> TakesPlaceIn(x,y))", "score": 0}
{"id": "eqasc_train_14478", "prediction": "all x.((Leaves(x) & SmallBody(x) & Chlorophyll(x)) -> Green(x))", "score": 0}
{"id": "eqasc_train_14479", "prediction": "all x.(Leaves(x) -> Green(x)) Chlorophyll(x))", "score": -1}
{"id": "eqasc_train_14480", "prediction": "(LikesFungus(fungus) & LacksChlorophyll(f) & NonPhotosynthetic(f))", "score": 0}
{"id": "eqasc_train_14481", "prediction": "all x.(Fungus(x) -> LacksGreenPigment(x))", "score": 0}
{"id": "eqasc_train_14482", "prediction": "all x.(Chlorophyll(x) -> FoundInLeaves(x))", "score": 0}
{"id": "eqasc_train_14483", "prediction": "all x.(Leaves(x) -> ContainsGreenPigmentChlorophyll(x))", "score": 0}
{"id": "eqasc_train_14484", "prediction": "all x.(Chlorophyll(x) -> Photosynthetic(x))", "score": 0}
{"id": "eqasc_train_14485", "prediction": "all x.(PhotosyntheticPigment(x) -> ColorfulCompound(x))", "score": 0}
{"id": "eqasc_train_14486", "prediction": "all x.(Chloroplast(x) -> ContainsGreenCompoundChlorophyll(x))", "score": 0}
{"id": "eqasc_train_14487", "prediction": "all x.(Chloroplast(x) -> (FamiliarPlastic(x) & KnownFor(x,y)))", "score": 0}
{"id": "eqasc_train_14488", "prediction": "all x.(Plastic(x) -> ContainsGreenPigmentChlorophyll(x))", "score": 0}
{"id": "eqasc_train_14489", "prediction": "all x.((Mitochondrion(x) | Chlorophyll(x)) -> Organelle(x))", "score": 0}
{"id": "eqasc_train_14490", "prediction": "all x.(Organelle(x) -> ContainsChlorophyll(x))", "score": 0}
{"id": "eqasc_train_14491", "prediction": "all x y.((SiteOfPhotosynthesis(x) & GreenPigmentChlorophyll(y)) -> Contains(x,y))", "score": 0}
{"id": "eqasc_train_14492", "prediction": "all x y.((Hearing(x) & Animal(y)) -> SensingSound(x,y))", "score": 2}
{"id": "eqasc_train_14493", "prediction": "all x.(Coyote(x) -> (UsesAcuteHearing(x) & UsesSenseOfSmell(x) & DetectsPrey(x) & AvoidsDanger(x)))", "score": 0}
{"id": "eqasc_train_14494", "prediction": "all x.(Hearing(x) -> (DetectsPrey(x) & AvoidsDanger(x)))", "score": 0}
{"id": "eqasc_train_14495", "prediction": "all x.(Deaf(x) -> HearsNothing(x))", "score": 0}
{"id": "eqasc_train_14496", "prediction": "all x.(Deaf(x) -> -SensesSound(x))", "score": 0}
{"id": "eqasc_train_14497", "prediction": "all x y.((Hearing(x) & Human(y)) -> SensingSound(x,y))", "score": 1}
{"id": "eqasc_train_14498", "prediction": "all x y.((SoundWaves(x) & Ear(y)) -> (Enter(x,y) & Amplified(x)))", "score": 0}
{"id": "eqasc_train_14499", "prediction": "all x y.((Animal(x) & Ears(y)) -> UsesToHear(x,y))", "score": 0}
{"id": "eqasc_train_14500", "prediction": "all x.(Hearing(x) -> FunctioningEars(x))", "score": 0}
{"id": "eqasc_train_14501", "prediction": "all x y.((Ears(x) & Animal(y)) -> SensingSound(x,y))", "score": 0}
{"id": "eqasc_train_14502", "prediction": "all x.(Animal(x) -> (UsesSound(x) & LocalizesMates(x) & AvoidsAttackingPredators(x)))", "score": 0}
{"id": "eqasc_train_14503", "prediction": "all x.(Animal(x) -> UsesSenseOfHearingToAvoidPredators(x))", "score": 0}
{"id": "eqasc_train_14504", "prediction": "all x y.((Hearing(x) & Cat(y)) -> SensingSound(x,y))", "score": 1}
{"id": "eqasc_train_14505", "prediction": "all x y.((Ears(x) & Animal(y)) -> SensingSound(x,y))", "score": 0}
{"id": "eqasc_train_14506", "prediction": "all x.(Hearing(x) -> (MeasuredInDecibels(x) & LoudnessRequiredToHearSound(x)))", "score": 0}
{"id": "eqasc_train_14507", "prediction": "all x.(Animal(x) -> CanSenseDecibels(x))", "score": 0}
{"id": "eqasc_train_14508", "prediction": "all x y.((Hearing(x) & Cow(y)) -> SensingSound(x,y))", "score": 0}
{"id": "eqasc_train_14509", "prediction": "all x.(Ear(x) -> ImprovesHearing(x))", "score": 0}
{"id": "eqasc_train_14510", "prediction": "all x.(Ear(x) -> ImprovesSense(x))", "score": 0}
{"id": "eqasc_train_14511", "prediction": "all x.(Animal(x) -> HasEars(x))", "score": 0}
{"id": "eqasc_train_14512", "prediction": "all x.(Dog(x) -> PackAnimal(x))", "score": 0}
{"id": "eqasc_train_14513", "prediction": "all x.(Dog(x) -> UsesHearingToSenseSound(x))", "score": 0}
{"id": "eqasc_train_14514", "prediction": "all x y.((HearingWaves(x) & Fluid(y)) -> TransmittedBy(x,y))", "score": 0}
{"id": "eqasc_train_14515", "prediction": "all x y.((FluidInInnerEar(x) & Animal(y)) -> UsedForSensingSound(x,y))", "score": 0}
{"id": "eqasc_train_14516", "prediction": "all x y.((Hearing(x) & Animal(y)) -> SensingVibrations(x,y))", "score": 0}
{"id": "eqasc_train_14517", "prediction": "all x.(Dog(x) -> Mammal(x))", "score": 0}
{"id": "eqasc_train_14518", "prediction": "all x.(Dog(x) -> UsesHearingForSensingSound(x))", "score": 0}
{"id": "eqasc_train_14519", "prediction": "all x.((Molecule(x) & DNA(x)) -> EncodedWithInstructions(x))", "score": 0}
{"id": "eqasc_train_14520", "prediction": "all x y.((Person(x) & GeneticFingerprint(y)) -> TellsCellsWhatToDo(x,y))", "score": 0}
{"id": "eqasc_train_14521", "prediction": "all x.(Gene(x) -> (DiscreteInformation(x) & TellsCellsWhatToDo(x)))", "score": 0}
{"id": "eqasc_train_14522", "prediction": "all x.(Molecule(x) -> (DNA(x) & DistinctUnitsOfInformation(x)))", "score": 0}
{"id": "eqasc_train_14523", "prediction": "all x.((Person(x) & IsConception(x)) -> HebesDNA(x))", "score": 0}
{"id": "eqasc_train_14524", "prediction": "all x y.((Instruction(x) & Cell(y) & TellsCell(x,y)) -> ErasedAtConception(x))", "score": 0}
{"id": "eqasc_train_14525", "prediction": "all x y.((Molecule(x) & DeoxyribonucleicAcid(y)) -> EncodedWithInstructions(x,y))", "score": 0}
{"id": "eqasc_train_14526", "prediction": "all x.(Gene(x) -> (MadeOfDNA(x) & CarriesInstructionsForProteinBuilding(x)))", "score": 0}
{"id": "eqasc_train_14527", "prediction": "all x.(Genes(x) -> CarriesInstructions(x))", "score": 0}
{"id": "eqasc_train_14528", "prediction": "all x.(Gene(x) -> PartOfDNAMolecule(x))", "score": 0}
{"id": "eqasc_train_14529", "prediction": "all x.(Gene(x) -> TellsCellsWhatToDo(x))", "score": 0}
{"id": "eqasc_train_14530", "prediction": "all x.(Protein(x) -> TellsCellsWhatToDo(x))", "score": 0}
{"id": "eqasc_train_14531", "prediction": "all x y.((Molecule(x) & Person(y) & GeneticFingerprint(x,y)) -> EncodedWithInstructions(x,y))", "score": 0}
{"id": "eqasc_train_14532", "prediction": "all x.(Gene(x) -> (SegmentOfDNAMolecule(x) & ContainsDNA(x)))", "score": 0}
{"id": "eqasc_train_14533", "prediction": "all x y.((GeneSegment(x) & Cell(y)) -> EncodedWithInstructions(x,y))", "score": 0}
{"id": "eqasc_train_14534", "prediction": "exists x.(Parasite(x) & LivesOnSurface(x))", "score": 0}
{"id": "eqasc_train_14535", "prediction": "all x.(Bagworm(x) -> ParasitedByParasitedWasps(x))", "score": 0}
{"id": "eqasc_train_14536", "prediction": "all x.(Wasp(x) -> LivesOnSurfaceOfHost(x))", "score": 0}
{"id": "eqasc_train_14537", "prediction": "exists x.(Parasite(x) & SurvivesOnSurface(x))", "score": 0}
{"id": "eqasc_train_14538", "prediction": "all x.(SuccessfulColonization(x) -> BacteriaAdhereToHostCellSurfaces(x))", "score": 0}
{"id": "eqasc_train_14539", "prediction": "exists x.(Parasite(x) & AdheresToCellSurface(x))", "score": 0}
{"id": "eqasc_train_14540", "prediction": "all x y.((Leeches(x) & Host(y)) -> OnSurface(x,y))", "score": 0}
{"id": "eqasc_train_14541", "prediction": "all x.(Leeches(x) -> LivesOnSurfaceOfHosts(x))", "score": 0}
{"id": "eqasc_train_14542", "prediction": "all x.(Tick(x) -> (BloodSuckingParasite(x) & AttachesToSkin(x)))", "score": 0}
{"id": "eqasc_train_14543", "prediction": "all x y.((Tick(x) & Host(y)) -> LivesOnSurface(x,y))", "score": 0}
{"id": "eqasc_train_14544", "prediction": "all x.((Flea(x) | Tick(x)) -> Parasite(x))", "score": 0}
{"id": "eqasc_train_14545", "prediction": "exists x.(Fly(x) & Tick(x) & LivesOnSurfaceOfHost(x))", "score": 0}
{"id": "eqasc_train_14546", "prediction": "all x.(Mite(x) -> LivesOnHost(x))", "score": 0}
{"id": "eqasc_train_14547", "prediction": "all x.(Mite(x) -> Parasite(x))", "score": 0}
{"id": "eqasc_train_14548", "prediction": "all x.(Host(x) -> Computer(x))", "score": 0}
{"id": "eqasc_train_14549", "prediction": "exists x.(Parasite(x) & LivesOnSurfaceOfComputer(x))", "score": 0}
{"id": "eqasc_train_14550", "prediction": "all x.(Biofuel(x) -> (ProducesElectricityByBurning(x) & Uses(x,y)))", "score": 0}
{"id": "eqasc_train_14551", "prediction": "all x.(Biofuel(x) -> (Ethanol(x) | Methanol(x) | Biodiesel(x) | Biocrude(x) | Methane(x)))", "score": 0}
{"id": "eqasc_train_14552", "prediction": "all x.(Ethanol(x) -> ProducesElectricityByBurning(x))", "score": 0}
{"id": "eqasc_train_14553", "prediction": "(Biofuel(Wood) & Biofuel(Straw))", "score": 0}
{"id": "eqasc_train_14554", "prediction": "all x.(Wood(x) -> (ProducesElectricity(x) & Burns(x)))", "score": 0}
{"id": "eqasc_train_14555", "prediction": "all x.((Wood(x) | Straw(x)) -> BurnsToProduceElectricity(x))", "score": 0}
{"id": "eqasc_train_14556", "prediction": "all x.(Biofuel(x) -> ReducesGreenhouseEffect(x))", "score": 0}
{"id": "eqasc_train_14557", "prediction": "exists x.(ElectricityProduction(x) & ReducesGreenhouseEffect(x))", "score": 0}
{"id": "eqasc_train_14558", "prediction": "all x.((Ethanol(x) & Alcohol(x)) -> MostCommonBiofuel(x))", "score": 0}
{"id": "eqasc_train_14559", "prediction": "all x y.((Alcohol(x) & Electricity(y)) -> ProducesByBurning(x,y))", "score": 0}
{"id": "eqasc_train_14560", "prediction": "all x.((EnergySource(x) & Biofuel(x)) -> Garbage(x))", "score": 0}
{"id": "eqasc_train_14561", "prediction": "all x.(Garbage(x) -> (CanBeBurned(x) & ProducesElectricity(x)))", "score": 0}
{"id": "eqasc_train_14562", "prediction": "all x.((Object(x) & Burned(x)) -> CreatesEnergy(x))", "score": 0}
{"id": "eqasc_train_14563", "prediction": "all x.(Biofuel(x) -> ProducesEnergy(x))", "score": 0}
{"id": "eqasc_train_14564", "prediction": "all x.(PowerSource(x) -> Electric(x))", "score": 0}
{"id": "eqasc_train_14565", "prediction": "all x.(Biofuel(x) -> ProducesPowerByBurning(x))", "score": 0}
{"id": "eqasc_train_14566", "prediction": "all x.(Ethanol(x) -> ProducesElectricityByBurning(x))", "score": 0}
{"id": "eqasc_train_14567", "prediction": "all x.(HempBiofuel(x) -> ProvidesEnergySupply(x))", "score": 0}
{"id": "eqasc_train_14568", "prediction": "all x.(Hemp(x) -> (UsedToProduceElectricity(x) & BurnsHemp(x)))", "score": 0}
{"id": "eqasc_train_14569", "prediction": "all x.(Biofuel(x) -> (Alcohol(x) & (Ethanol(x) | OtherChemicals(x)) & (DerivedFromBiomass(x) | DerivedFromLivingMatter(x))))", "score": 0}
{"id": "eqasc_train_14570", "prediction": "all x.((Alcohol(x) & DerivedFromBiomassOrLivingMatter(x)) -> ProducesElectricityByBurning(x))", "score": 0}
{"id": "eqasc_train_14571", "prediction": "all x.((Methane(x) & Burned(x)) -> ProducesElectricity(x))", "score": 0}
{"id": "eqasc_train_14572", "prediction": "all x.(GreenPlant(x) -> (ProducesBiofuel(x) | ProducesBioenergy(x)))", "score": 0}
{"id": "eqasc_train_14573", "prediction": "all x.(GreenPlant(x) -> (ProducesElectricityByBurning(x) & GreenPlant(x)))", "score": 0}
{"id": "eqasc_train_14574", "prediction": "all x.(Ethanol(x) -> ProducesElectricityByBurning(x))", "score": 0}
{"id": "eqasc_train_14575", "prediction": "all x.(Ethanol(x) -> ProducesElectricityByBurning(x))", "score": 0}
{"id": "eqasc_train_14576", "prediction": "all x y.((Ssperm(x) & Egg(y)) -> Fertilization(x,y))", "score": 0}
{"id": "eqasc_train_14577", "prediction": "all x.(Fertilization(x) -> (Egg(x) & Diploid(x) & Zygote(x)))", "score": 0}
{"id": "eqasc_train_14578", "prediction": "all x y z.((Ssperm(x) & Egg(y) & Sperm(z) & Fuse(x,z)) -> FormsZygote(x))", "score": 0}
{"id": "eqasc_train_14579", "prediction": "all x.((Gamete(x) & Fuse(x)) -> Fertilization(x))", "score": 0}
{"id": "eqasc_train_14580", "prediction": "all x y z.((Pregnancy(x) & Sperm(y) & Egg(z) & Fuse(x,y,z)) -> (Embraces(x,y) & Sperm(y) & Egg(z)))", "score": 0}
{"id": "eqasc_train_14581", "prediction": "all x y.((Ssperm(x) & Egg(y)) -> Penetrates(x,y))", "score": 0}
{"id": "eqasc_train_14582", "prediction": "all x y.((Fertilization(x) & Gametes(y)) -> CausedByUsage(x,y))", "score": 0}
{"id": "eqasc_train_14583", "prediction": "all x y.((Ssperm(x) & Egg(y) & FallopianTube(z)) -> Fertilizes(x,y,z))", "score": 0}
{"id": "eqasc_train_14584", "prediction": "all x y.((Fertilization(x) & FallopianTube(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_train_14585", "prediction": "all x.((Fertilization(x) & SpermNucleusFuse(x) & EggNucleusFuse(x)) -> FertilizationComplete(x))", "score": 0}
{"id": "eqasc_train_14586", "prediction": "all x y z.((Fertilization(x) & Sperm(y) & Nucleus(z)) -> Fuse(x,y,z))", "score": 0}
{"id": "eqasc_train_14587", "prediction": "all x y.((Ssperm(x) & Egg(y)) -> UnitesFormsEmbryo(x,y))", "score": 0}
{"id": "eqasc_train_14588", "prediction": "all x y.((Fertilization(x) & Embolus(y)) -> Forms(x,y))", "score": 0}
{"id": "eqasc_train_14589", "prediction": "all x y z.((Ssperm(x) & Egg(y) & Sperm(z) & Fuse(x,z)) -> CriticalTiming(x,y,z))", "score": 0}
{"id": "eqasc_train_14590", "prediction": "all x y.((Ssperm(x) & Egg(y)) -> TimingCritical(x,y))", "score": 0}
{"id": "eqasc_train_14591", "prediction": "all x.(Cephalopod(x) -> (HasSeparateSexes(x) & FertilizationIsInternal(x)))", "score": 0}
{"id": "eqasc_train_14592", "prediction": "all x.(Cephalopod(x) -> (InseminatesSsperm(x) & InseminatesEgg(x)))", "score": 0}
{"id": "eqasc_train_14593", "prediction": "all x y.((Outside(x) & Day(y)) -> ReceivesSunlight(x,y))", "score": 0}
{"id": "eqasc_train_14594", "prediction": "all x.(Sunlight(x) -> Radiation(x))", "score": 0}
{"id": "eqasc_train_14595", "prediction": "all x y.((Exterior(x) & Day(y) & Outside(x,y)) -> ReceivesRadiation(x))", "score": 0}
{"id": "eqasc_train_14596", "prediction": "all x.(Chlorine(x) -> DissipatedRapidlyBySunlight(x))", "score": 0}
{"id": "eqasc_train_14597", "prediction": "all x.((Chlorine(x) & OutsideDuringDay(x)) -> DissipatesRapidly(x))", "score": 0}
{"id": "eqasc_train_14598", "prediction": "all x.(DirectSunlight(x) -> HarmfulToPaintings(x))", "score": 0}
{"id": "eqasc_train_14599", "prediction": "all x.((Painting(x) & LeavesOutsideUnprotected(x)) -> Harmful(x))", "score": 0}
{"id": "eqasc_train_14600", "prediction": "all x.(Plant(x) -> MakesSugarUsingSunlight(x))", "score": 0}
{"id": "eqasc_train_14601", "prediction": "all x y.((Plant(x) & Outdoors(x) & Day(y)) -> MakesSugar(x,y))", "score": 0}
{"id": "eqasc_train_14602", "prediction": "all x.(ExcessiveSunlight(x) -> (CausesSkinRashes(x) | CausesSkinBurns(x)))", "score": 0}
{"id": "eqasc_train_14603", "prediction": "all x.((Outside(x) & Day(x)) -> (ReceivesSkinRashes(x) | ReceivesBurns(x)))", "score": 0}
{"id": "eqasc_train_14604", "prediction": "all x.(Sunlight(x) -> (MadeOfUVA(x) & MadeOfUVB(x)))", "score": 0}
{"id": "eqasc_train_14605", "prediction": "all x.((OutsideDuringDay(x) & ReceivesUVA(x) & ReceivesUVB(x)) -> ReceivesUVA(x))", "score": 0}
{"id": "eqasc_train_14606", "prediction": "all x y.((Sun(x) & Sunlight(y)) -> EnergyFlowsFrom(x,y))", "score": 0}
{"id": "eqasc_train_14607", "prediction": "all x y.((Outside(x) & Day(y)) -> ReceivesEnergyFromSun(x,y))", "score": 0}
{"id": "eqasc_train_14608", "prediction": "all x y.((Outside(x) & Day(y) & Outside(x,y)) -> ReceivesEnergy(x,y))", "score": 0}
{"id": "eqasc_train_14609", "prediction": "all x.(GreenPlant(x) -> GrowsBestOutside(x))", "score": 0}
{"id": "eqasc_train_14610", "prediction": "all x.((OutsideDuringDay(x) & Day(x)) -> ReceivesSun(x))", "score": 0}
{"id": "eqasc_train_14611", "prediction": "all x.(OutdoorBath(x) -> LocatedConvenientlyOutsideLaundryArea(x))", "score": 0}
{"id": "eqasc_train_14612", "prediction": "all x.(OutdoorBath(x) -> ReceivesSunlight(x))", "score": 0}
{"id": "eqasc_train_14613", "prediction": "all x.((Sunlight(x) & SourceOfVitaminD(x)) -> VitaminD(x))", "score": 0}
{"id": "eqasc_train_14614", "prediction": "all x.(Outside(x) -> GoodVitaminD(x))", "score": 0}
{"id": "eqasc_train_14615", "prediction": "all x.(Cylinder(x) -> (FormedByFlowingRiver(x) & Erosion(x) & LongPeriodsOfTime(x)))", "score": 0}
{"id": "eqasc_train_14616", "prediction": "all x.(ColumbiaRiverGorge(x) -> (SpectacularRiverCanyon(x) & CutsThroughVolcanicRock(x) & CascadeMountainRange(x)))", "score": 0}
{"id": "eqasc_train_14617", "prediction": "(FormedByErosion(ColumbiaRiverGorge) & LongPeriodsOfTime(ColumbiaRiver))", "score": 0}
{"id": "eqasc_train_14618", "prediction": "all x.((River(x) & InFlood(x)) -> ErosionOccurs(x))", "score": 0}
{"id": "eqasc_train_14619", "prediction": "all x.(Cylinder(x) -> (FormedByFlooding(x) & LongPeriodsOfTime(x)))", "score": 0}
{"id": "eqasc_train_14620", "prediction": "all x y z.((River(x) & Rainwater(y) & WellWater(z) & Lake(x)) -> (ContainsFreshWater(x) | ContainsFreshWater(x)))", "score": 0}
{"id": "eqasc_train_14621", "prediction": "all x.(Canyon(x) -> (FormedByRainwater(x) & FormedByRainwater(x)))", "score": 0}
{"id": "eqasc_train_14622", "prediction": "all x y.((Striation(x) & RockForm(y)) -> (SeedAlongRiver(x,y) & TellsGeologicHistory(x,y)))", "score": 0}
{"id": "eqasc_train_14623", "prediction": "all x.(Canyon(x) -> (LearnsGeologicHistory(x) & Area(x)))", "score": 0}
{"id": "eqasc_train_14624", "prediction": "all x.((DeepGgorge(x) & DeepCanyon(x) & FormedByRiver(x)) -> TouristAttraction(x))", "score": 0}
{"id": "eqasc_train_14625", "prediction": "all x y z.((DeepGgorge(x) & River(y) & River(z)) -> (FormedByFlowingThroughErosion(x,y,z) & LongPeriodOfTime(x)))", "score": 0}
{"id": "eqasc_train_14626", "prediction": "all x.(Weather(x) -> WearsDownByErosion(x))", "score": 0}
{"id": "eqasc_train_14627", "prediction": "all x.(Cylinder(x) -> (FormedByFlowingRiver(x) & WeatheredOverLongPeriods(x)))", "score": 0}
{"id": "eqasc_train_14628", "prediction": "all x.((River(x) | Glacier(x)) -> MadeOfWater(x))", "score": 0}
{"id": "eqasc_train_14629", "prediction": "all x y.((FlowingWater(x) & Canyon(y)) -> FormsThroughErosion(x,y))", "score": 0}
{"id": "eqasc_train_14630", "prediction": "all x.(River(x) -> Contains(x,0,001))", "score": 0}
{"id": "eqasc_train_14631", "prediction": "all x.(Cannon(x) -> FormedByFlowingWater(x))", "score": 0}
{"id": "eqasc_train_14632", "prediction": "all x.((Water(x) & Time(x)) -> CanCreateCanyon(x))", "score": 0}
{"id": "eqasc_train_14633", "prediction": "all x.((DeepCanyon(x) | DeepValley(x)) -> CarvedOut(x))", "score": 0}
{"id": "eqasc_train_14634", "prediction": "all x y z.((Dive(x) & River(y) & Erosion(z) & FlowingThrough(y,z)) -> FormedBy(x,y,z))", "score": 0}
{"id": "eqasc_train_14635", "prediction": "all x.(SmithfieldCanyon(x) -> (DeepGgorge(x) & ThroughMountains(x) & DefeatsViewToWest(x)))", "score": 0}
{"id": "eqasc_train_14636", "prediction": "all x.(DeepGgorge(x) -> (FormedByFlowingRiver(x) & Erosion(x) & LongPeriodsOfTime(x)))", "score": 0}
{"id": "eqasc_train_14637", "prediction": "all x.(GeologicalErosion(x) -> NaturalOccurringErosion(x))", "score": 0}
{"id": "eqasc_train_14638", "prediction": "all x.(Crane(x) -> (FormedByFlowingRiver(x) & ThroughErosion(x)))", "score": 0}
{"id": "eqasc_train_14639", "prediction": "all x.(Erosion(x) -> MonitoredByErosionPins(x))", "score": 0}
{"id": "eqasc_train_14640", "prediction": "all x.(CanyonChange(x) -> TrackedWithPins(x))", "score": 0}
{"id": "eqasc_train_14641", "prediction": "all x.(CanyonLake(x) -> (FormedByDamsOnSaltRiver(x) & OnSaltRiver(x)))", "score": 0}
{"id": "eqasc_train_14642", "prediction": "all x.(Dam(x) -> CanFormCanyon(x))", "score": 0}
{"id": "eqasc_train_14643", "prediction": "all x.(SteroidHormone(x) -> (MadeOfLipids(x) & (Phospholipids(x) | Cholesterol(x))))", "score": 0}
{"id": "eqasc_train_14644", "prediction": "all x.(SteroidHormone(x) -> MadeOfFats(x))", "score": 0}
{"id": "eqasc_train_14645", "prediction": "all x.(SteroidHormone(x) -> SolubleInBlood(x))", "score": 0}
{"id": "eqasc_train_14646", "prediction": "all x.(Lipids(x) -> SolubleInBlood(x))", "score": 0}
{"id": "eqasc_train_14647", "prediction": "all x y.((BodyFat(x) & SteroidHormone(y)) -> MakesUp(x,y))", "score": 0}
{"id": "eqasc_train_14648", "prediction": "all x.(Steroid(x) -> GrowthHormone(x))", "score": 0}
{"id": "eqasc_train_14649", "prediction": "all x.(GrowthHormone(x) -> (DerivedFrom(x,phospholipids) & DerivedFrom(x,cholesterol)))", "score": 0}
{"id": "eqasc_train_14650", "prediction": "all x.(SteroidHormone(x) -> MadeOfDiverseHydrophobicMolecules(x))", "score": 0}
{"id": "eqasc_train_14651", "prediction": "all x.(Steroid(x) -> (Lipids(x) & DerivedOfCholesterone(x)))", "score": 0}
{"id": "eqasc_train_14652", "prediction": "all x.(Steroid(x) -> (DerivativeOfCholesterone(x) & Cholesterol(x)))", "score": 0}
{"id": "eqasc_train_14653", "prediction": "all x.(SteroidHormone(x) -> (MadeOfHydrophobicMolecules(x) & (Phospholipids(x) | Cholesterol(x))))", "score": 0}
{"id": "eqasc_train_14654", "prediction": "all x.(SteroidHormone(x) -> (MadeOfDiverseHydrophobicMolecules(x) & MadeOfDiverseHydrophobicMolecules(x)))", "score": 0}
{"id": "eqasc_train_14655", "prediction": "all x.(Steroid(x) -> (Lipid(x) & DerivedFromCholesterone(x)))", "score": 0}
{"id": "eqasc_train_14656", "prediction": "all x.(Steroid(x) -> (MadeOfLipids(x) & MadeOfLipids(x)))", "score": 0}
{"id": "eqasc_train_14657", "prediction": "all x.(ElectronMicroscope(x) -> (SeesSmallObjects(x) & MakesObjectsAppearBigger(x)))", "score": 0}
{"id": "eqasc_train_14658", "prediction": "all x y.((Microscope(x) & Magnification(y)) -> IncreasesAppearanceSize(x,y))", "score": 0}
{"id": "eqasc_train_14659", "prediction": "all x.(ElectronMicroscope(x) -> UsedForSeeingMagnified(x))", "score": 0}
{"id": "eqasc_train_14660", "prediction": "all x.(Atom(x) -> (Small(x) | Tiny(x)))", "score": 0}
{"id": "eqasc_train_14661", "prediction": "all x y.((ElectronMicroscope(x) & Atom(y)) -> UsedToSee(x,y))", "score": 0}
{"id": "eqasc_train_14662", "prediction": "all x.(ElectronMicroscope(x) -> UsesElectronsAsIllumination(x))", "score": 0}
{"id": "eqasc_train_14663", "prediction": "all x y.((Electron(x) & SmallObject(y)) -> IlluminatesAndAppearsBigger(x,y))", "score": 0}
{"id": "eqasc_train_14664", "prediction": "all x.(ElectronMicroscope(x) -> (SeesBacteria(x) & MakesBacteriaAppearBigger(x)))", "score": 0}
{"id": "eqasc_train_14665", "prediction": "all x.(ElectronMicroscope(x) -> MagnifiesObjects(x,y))", "score": 0}
{"id": "eqasc_train_14666", "prediction": "all x.(ElectronMicroscope(x) -> (SeesSmallThings(x) & MagnifiesSmallThings(x)))", "score": 0}
{"id": "eqasc_train_14667", "prediction": "all x.(Microscope(x) -> (SimpleMagnifyingGlass(x) & ExpensiveElectronMicroscope(x)))", "score": 0}
{"id": "eqasc_train_14668", "prediction": "all x y.((MagnifyingGlass(x) & SmallObject(y)) -> MakesAppearBigger(x,y))", "score": 0}
{"id": "eqasc_train_14669", "prediction": "all x y.((MagnifyingObject(x) & SmallObject(y) & ThousandsOfTimes(x)) -> UsedForSaying(x,y))", "score": 0}
{"id": "eqasc_train_14670", "prediction": "all x y.((ElectronMicroscope(x) & Optomiscope(y)) -> SeesLargerThan(x,y))", "score": 0}
{"id": "eqasc_train_14671", "prediction": "all x.(Microscope(x) -> MakesAppearLarger(x))", "score": 0}
{"id": "eqasc_train_14672", "prediction": "all x.(Cell(x) -> TooSmallToSeeWithNakedEye(x))", "score": 0}
{"id": "eqasc_train_14673", "prediction": "all x.(ElectronMicroscope(x) -> MakesCellsAppearLarger(x))", "score": 0}
{"id": "eqasc_train_14674", "prediction": "all x y.((ElectronBeam(x) & SmallObject(y) & UsesAsIlluminationSource(x,y)) -> AppearBigger(y))", "score": 0}
{"id": "eqasc_train_14675", "prediction": "all x.((Microscope(x) & UsesElectrons(x) & -UsesLight(x)) -> ElectronMicroscope(x))", "score": 0}
{"id": "eqasc_train_14676", "prediction": "all x y.((Seen(x,y) & SmallObject(y) & MakesAppearBigger(y)) -> UsesElectrons(x))", "score": 0}
{"id": "eqasc_train_14677", "prediction": "all x.(LivingThing(x) -> RequiresEnergyForSurvival(x))", "score": 0}
{"id": "eqasc_train_14678", "prediction": "all x.(LivingThing(x) -> RequiresFoodForSurvival(x))", "score": 0}
{"id": "eqasc_train_14679", "prediction": "all x.(Energy(x) -> (UsedForSurvival(x) & UsedForReproduction(x)))", "score": 0}
{"id": "eqasc_train_14680", "prediction": "all x.(LivingThing(x) -> (RequiresSurvival(x) & RequiresReproduction(x)))", "score": 0}
{"id": "eqasc_train_14681", "prediction": "all x.(Plant(x) -> RequiresSunlightForSurvival(x))", "score": 0}
{"id": "eqasc_train_14682", "prediction": "all x.(Tree(x) -> RequiresEnergyForSurvival(x))", "score": 0}
{"id": "eqasc_train_14683", "prediction": "all x.(LivingThing(x) -> UsesKineticMotion(x))", "score": 0}
{"id": "eqasc_train_14684", "prediction": "all x.(LivingThing(x) -> RequiresFoodToSurvive(x))", "score": 0}
{"id": "eqasc_train_14685", "prediction": "all x.((Carbohydrate(x) | Fat(x) | Protein(x)) -> ProvidesEnergyFromFood(x))", "score": 0}
{"id": "eqasc_train_14686", "prediction": "all x.((Potato(x) | Pasta(x) | Pancake(x)) -> (HighInCarbohydrates(x) & HelpsSurvive(x)))", "score": 0}
{"id": "eqasc_train_14687", "prediction": "all x.(Plant(x) -> RequiresEnergyForSurvival(x))", "score": 0}
{"id": "eqasc_train_14688", "prediction": "all x.(LivingThing(x) -> RequiresEnergyConservation(x))", "score": 0}
{"id": "eqasc_train_14689", "prediction": "all x.(Bacteria(x) -> Simple(x))", "score": 0}
{"id": "eqasc_train_14690", "prediction": "all x.(Bacteria(x) -> RequiresEnergyForSurvival(x))", "score": 0}
{"id": "eqasc_train_14691", "prediction": "all x.(LivingThing(x) -> RequiresEnergyForReproduction(x))", "score": 0}
{"id": "eqasc_train_14692", "prediction": "all x.(Food(x) -> SourceOfEnergyForLivingThings(x))", "score": 0}
{"id": "eqasc_train_14693", "prediction": "all x.(LivingThing(x) -> RequiresFood(x))", "score": 0}
{"id": "eqasc_train_14694", "prediction": "all x.(Organ(x) -> Excretion(x))", "score": 0}
{"id": "eqasc_train_14695", "prediction": "all x.(ExcretorySystem(x) -> (DorsalExcretoryGlands(x) & MalpighianTubercules(x)))", "score": 0}
{"id": "eqasc_train_14696", "prediction": "all x.(MalpighianTubercule(x) -> OrganOfExcretion(x))", "score": 0}
{"id": "eqasc_train_14697", "prediction": "all x.(Excretion(x) -> LifeProcess(x))", "score": 0}
{"id": "eqasc_train_14698", "prediction": "all x y.((ExcretorySystem(x) & LifeProcess(y)) -> PartOf(x,y))", "score": 0}
{"id": "eqasc_train_14699", "prediction": "all x.(InternalOrgan(x) -> VitalOrgan(x))", "score": 0}
{"id": "eqasc_train_14700", "prediction": "all x.((Internal(x) & Vital(x)) -> ExcretorySystem(x))", "score": 0}
{"id": "eqasc_train_14701", "prediction": "all x.(LeptospiralOrganism(x) -> (CausesInfectionInKneese(x) & ExcretedInUrine(x)))", "score": 0}
{"id": "eqasc_train_14702", "prediction": "all x.(Kinney(x) -> ExcretorySystem(x))", "score": 0}
{"id": "eqasc_train_14703", "prediction": "all x.(UrinarySystem(x) -> ExcretorySystem(x))", "score": 0}
{"id": "eqasc_train_14704", "prediction": "all x y.((Organ(x) & Blood(y)) -> RemovesWasteAndToxicSubstances(x,y))", "score": 0}
{"id": "eqasc_train_14705", "prediction": "all x.((DigestiveSystem(x) & ExcretorySystem(x)) -> RemovesWasteAndToxicSubstances(x))", "score": 0}
{"id": "eqasc_train_14706", "prediction": "all x y.((Excretion(x) & Blood(y)) -> RemovesWasteFrom(x,y))", "score": 0}
{"id": "eqasc_train_14707", "prediction": "all x.(Excretion(x) -> StartsWithKnees(x))", "score": 0}
{"id": "eqasc_train_14708", "prediction": "all x.(Knee(x) -> MakesExcretorySystem(x))", "score": 0}
{"id": "eqasc_train_14709", "prediction": "all x y.((Organ(x) & Blood(y) & Excretion(x)) -> RemovesWasteFrom(x,y))", "score": 0}
{"id": "eqasc_train_14710", "prediction": "all x.(OrgansOfWaste(x) -> MakesUpWasteSystem(x))", "score": 0}
{"id": "eqasc_train_14711", "prediction": "all x.(ExcessOestrogen(x) -> ExcretedInBody(x))", "score": 0}
{"id": "eqasc_train_14712", "prediction": "all x y.((Bowel(x) & ExcretorySystem(y)) -> MakesUp(x,y))", "score": 0}
{"id": "eqasc_train_14713", "prediction": "all x y.((DigestiveSystemOrgan(x) & Blood(y)) -> RemovesWasteAndToxicSubstances(x,y))", "score": 0}
{"id": "eqasc_train_14714", "prediction": "all x y.((GraduatedCylinder(x) & Liquid(y)) -> MeasuresVolumeOfLiquid(x,y))", "score": 0}
{"id": "eqasc_train_14715", "prediction": "all x.(Liquid(x) -> (Liquid(x) & SecondFormOfMatter(x)))", "score": 0}
{"id": "eqasc_train_14716", "prediction": "all x y.((GraduatedCylinder(x) & SecondFormOfMatter(y)) -> MeasuresVolume(x,y))", "score": 0}
{"id": "eqasc_train_14717", "prediction": "all x.(LiquidVolume(x) -> MeasuredUsingLiquid(x))", "score": 0}
{"id": "eqasc_train_14718", "prediction": "all x.((Cyliner(x) & Graduated(x)) -> MeasuresInLiliters(x))", "score": 0}
{"id": "eqasc_train_14719", "prediction": "all x.((TestCylinder(x) & -GraduationMarks(x)) -> ManualCalculationMethod(x))", "score": 0}
{"id": "eqasc_train_14720", "prediction": "all x y.((GraduationMarking(x) & Liquid(y)) -> MeasuresVolume(x,y))", "score": 0}
{"id": "eqasc_train_14721", "prediction": "all x y.((GraduatedCylinder(x) & Water(y)) -> MeasuresVolume(x,y))", "score": 0}
{"id": "eqasc_train_14722", "prediction": "all x y.((ExcessWater(x) & GradientCylinder(y)) -> PouredIntoAndMeasured(x,y))", "score": 0}
{"id": "eqasc_train_14723", "prediction": "all x y.((WaterVolume(x) & GradientCylinder(y)) -> Finds(x,y))", "score": 0}
{"id": "eqasc_train_14724", "prediction": "all x.(GraduatedCylinder(x) -> MeasureInLiliters(x))", "score": 0}
{"id": "eqasc_train_14725", "prediction": "(all x.(LiquidOz(x) -> MeasuresVolume(x)) & all y.(DryPound(y) -> MeasuresMass(y)))", "score": 0}
{"id": "eqasc_train_14726", "prediction": "all x y.((GraduatedCylinder(x) & LiquidOz(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_train_14727", "prediction": "all x.(WaterVolume(x) -> (MeasuredWithGraduatedCylinder(x)))", "score": 0}
{"id": "eqasc_train_14728", "prediction": "all x.((Cylinder(x) & Graduated(x)) -> MeasuresWaterVolume(x))", "score": 0}
{"id": "eqasc_train_14729", "prediction": "all x y.((Student(x) & GradientCylinder(y)) -> (Uses(x,y) & MeasuresInML(x)))", "score": 0}
{"id": "eqasc_train_14730", "prediction": "all x.(GraduatedCylinder(x) -> MeasuresLiquidsInML(x))", "score": 0}
{"id": "eqasc_train_14731", "prediction": "all x y.((GraduatedCylinder(x) & Water(y)) -> MeasuresVolume(x,y))", "score": 0}
{"id": "eqasc_train_14732", "prediction": "all x.(Volume(x) -> MeasuresSpace(x))", "score": 0}
{"id": "eqasc_train_14733", "prediction": "all x y.((GraduatedCylinder(x) & Liquid(y)) -> MeasuresSpace(x,y))", "score": 0}
{"id": "eqasc_train_14734", "prediction": "all x.(Gasoline(x) -> LiquidMixture(x))", "score": 0}
{"id": "eqasc_train_14735", "prediction": "all x y.((GraduatedCylinder(x) & Gasoline(y)) -> MeasuresVolume(x,y))", "score": 0}
{"id": "eqasc_train_14736", "prediction": "all x y.((Pipet(x) & Liquid(y)) -> DeliversAccurateVolume(x,y))", "score": 0}
{"id": "eqasc_train_14737", "prediction": "all x y.((Pipet(x) & GraduatedCylinder(y)) -> MoreAccurateMeasurement(x,y))", "score": 0}
{"id": "eqasc_train_14738", "prediction": "all x.(Volume(x) -> (MeasuredInLiliters(x) | MeasuredInMilliliters(x)))", "score": 0}
{"id": "eqasc_train_14739", "prediction": "all x y.((GraduatedCylinder(x) & Milliliter(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_train_14740", "prediction": "all x y.((Scales(x) & ScaledAnimal(y)) -> UsedForProtection(x,y))", "score": 0}
{"id": "eqasc_train_14741", "prediction": "all x.(Reptile(x) -> LandDwellingAnimal(x))", "score": 0}
{"id": "eqasc_train_14742", "prediction": "all x.(Reptile(x) -> HasScalesForProtection(x))", "score": 0}
{"id": "eqasc_train_14743", "prediction": "all x.(Scale(x) -> (Protects(x) & Camouflage(x)))", "score": 0}
{"id": "eqasc_train_14744", "prediction": "all x y.((Scales(x) & ScaledAnimal(y)) -> Camouflage(x,y))", "score": 0}
{"id": "eqasc_train_14745", "prediction": "all x.(HornedLizard(x) -> (Reptile(x) & HasTail(x) & ScaledBody(x)))", "score": 0}
{"id": "eqasc_train_14746", "prediction": "all x.(Lizard(x) -> ProtectedByUniqueBody(x))", "score": 0}
{"id": "eqasc_train_14747", "prediction": "all x.(AlligatorSkin(x) -> (CoveredWithScales(x) & LikeReptiles(x)))", "score": 0}
{"id": "eqasc_train_14748", "prediction": "all x y.((Skin(x) & Alligator(y)) -> UsedForProtection(x,y))", "score": 0}
{"id": "eqasc_train_14749", "prediction": "all x.(FishScales(x) -> ComposedOfChitin(x))", "score": 0}
{"id": "eqasc_train_14750", "prediction": "all x.(Chitin(x) -> CanBeUsedForProtectionByFish(x))", "score": 0}
{"id": "eqasc_train_14751", "prediction": "all x.(Reptile(x) -> (HasScales(x) | HasPlates(x)))", "score": 0}
{"id": "eqasc_train_14752", "prediction": "all x.(Reptile(x) -> UsesPlate(x))", "score": 0}
{"id": "eqasc_train_14753", "prediction": "all x y.((Scales(x) & Fish(y)) -> UsedForProtection(x,y))", "score": 0}
{"id": "eqasc_train_14754", "prediction": "all x.(Pangolin(x) -> (ElongateAndTappingBody(x) & CoveredAboveScales(x)))", "score": 0}
{"id": "eqasc_train_14755", "prediction": "all x.(Pangolin(x) -> CoveredInOverlappingProtection(x))", "score": 0}
{"id": "eqasc_train_14756", "prediction": "all x.(Fish(x) -> CoveredWithScales(x))", "score": 0}
{"id": "eqasc_train_14757", "prediction": "all x.(Fish(x) -> CoveredWithProtection(x))", "score": 0}

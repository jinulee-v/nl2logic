{"id": "eqasc_validation_0", "prediction": "all x.(Climate(x) -> (TermsOfTemperature(x) & TermsOfMoisture(x)))", "score": 0}
{"id": "eqasc_validation_1", "prediction": "all x.(FireBehavior(x) -> (DrivenByLocalWeatherConditions(x) & WindsTemperatureMoisture(x)))", "score": 0}
{"id": "eqasc_validation_2", "prediction": "all x.(Climate(x) -> (TermsOfLocalWeatherConditions(x) & LocalWeatherConditions(x)))", "score": 0}
{"id": "eqasc_validation_3", "prediction": "Instructions ClimateClimate(c) & Altitude(c) & Variable(c))", "score": -1}
{"id": "eqasc_validation_4", "prediction": "all x.((Temperature(x) & Moisture(x)) -> VariatesByAlltitude(x))", "score": 0}
{"id": "eqasc_validation_5", "prediction": "all x.(ClimateChange(x) -> GlobalProblem(x))", "score": 0}
{"id": "eqasc_validation_6", "prediction": "all x.((Temperature(x) & Moisture(x)) -> ChangesGlobally(x))", "score": 0}
{"id": "eqasc_validation_7", "prediction": "IntroductionToClimateIntroduction(climate)", "score": 0}
{"id": "eqasc_validation_8", "prediction": "all x.(AverageWeatherConditions(x) -> (TermsOfTemperature(x) & TermsOfMoisture(x)))", "score": 0}
{"id": "eqasc_validation_9", "prediction": "all x.(Cloud(x) -> (MadeOfMoisture(x) & WaterEvaporating(x)))", "score": 0}
{"id": "eqasc_validation_10", "prediction": "all x.(Climate(x) -> (TermsOfTemperature(x) & TermsOfWater(x)))", "score": 0}
{"id": "eqasc_validation_11", "prediction": "all x.(Climate(x) -> Weather(x))", "score": 0}
{"id": "eqasc_validation_12", "prediction": "all x.(Weather(x) -> (TermsOfTemperature(x) & TermsOfMoisture(x)))", "score": 0}
{"id": "eqasc_validation_13", "prediction": "all x.(Humidity(x) -> MoistureInAir(x))", "score": 0}
{"id": "eqasc_validation_14", "prediction": "all x.(Climate(x) -> (TermsOfTemperature(x) & TermsOfHumidity(x)))", "score": 0}
{"id": "eqasc_validation_15", "prediction": "all x.(Humidity(x) -> MeasuresMoistureContentOfAir(x))", "score": 0}
{"id": "eqasc_validation_16", "prediction": "all x y.((Vehicle(x) & Transportation(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_17", "prediction": "all x y z.((Transportation(x) & Person(y) & Good(z)) -> MovesFromPlaceToPlace(x,y,z))", "score": 0}
{"id": "eqasc_validation_18", "prediction": "all x.(Vehicle(x) -> (MovesPeople(x) & MovesGoods(x)))", "score": 0}
{"id": "eqasc_validation_19", "prediction": "all x.(PassengerVehicle(x) -> PrimaryModeOfTransportation(x))", "score": 0}
{"id": "eqasc_validation_20", "prediction": "all x.(PassengerCar(x) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_21", "prediction": "all x.((Trailer(x) | Boat(x)) -> PrivateVehicle(x))", "score": 0}
{"id": "eqasc_validation_22", "prediction": "all x.((Trailer(x) | Boat(x)) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_23", "prediction": "all x.((Car(x) | Bus(x)) -> Vehicle(x))", "score": 0}
{"id": "eqasc_validation_24", "prediction": "all x y.((Car(x) & Bus(y)) -> (UsedForTransportation(x,y) & UsedForTransportation(y)))", "score": 0}
{"id": "eqasc_validation_25", "prediction": "all x.(Boat(x) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_26", "prediction": "all x.((City(x) & Bigger(x)) -> RequiresEfficientPublicTransport(x))", "score": 0}
{"id": "eqasc_validation_27", "prediction": "all x.((City(x) & Larger(x)) -> RequiresVehicles(x))", "score": 0}
{"id": "eqasc_validation_28", "prediction": "all x.(TrafficVehicle(x) -> AirPlane(x))", "score": 0}
{"id": "eqasc_validation_29", "prediction": "all x y.((Plane(x) & Transportation(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_30", "prediction": "all x y.((Car(x) & Truck(y)) -> (Vehicle(x) & Vehicle(y)))", "score": 0}
{"id": "eqasc_validation_31", "prediction": "all x.(Truck(x) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_32", "prediction": "all x.(Car(x) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_33", "prediction": "all x.(Motorcycle(x) -> SingleOccupantVehicle(x))", "score": 0}
{"id": "eqasc_validation_34", "prediction": "all x.(Motorcycle(x) -> UsedForTransportation(x))", "score": 0}
{"id": "eqasc_validation_35", "prediction": "all x.((MovingCar(x) & PullOver(x) & StopAsQuicklyAsSafetyPermits(x) & StayInVehicle(x)) -> SafetyPermits(x))", "score": 0}
{"id": "eqasc_validation_36", "prediction": "all x y.((MovingCar(x) & Transportation(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_37", "prediction": "all x y.((Transportation(x) & Vancouver(y)) -> CausesAirPollution(x,y))", "score": 0}
{"id": "eqasc_validation_38", "prediction": "all x.((Vehicle(x) & CausesAirPollution(x)) -> CausesAirPollution(x))", "score": 0}
{"id": "eqasc_validation_39", "prediction": "all x.(CollarCell(x) -> (TinyHairs(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_40", "prediction": "all x.(WorkHorse(x) -> (CollarCells(x) | Choanocytes(x)))", "score": 0}
{"id": "eqasc_validation_41", "prediction": "all x.(Choanocyte(x) -> (HasTinyHairs(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_42", "prediction": "all x.(Particle(x) -> (TinyPieceOfMatter(x) & VeryTinyPieceOfMatter(x)))", "score": 0}
{"id": "eqasc_validation_43", "prediction": "all x.(CollarCell(x) -> (TinyHairs(x) & TrapsTinyMatter(x)))", "score": 0}
{"id": "eqasc_validation_44", "prediction": "exists x.(Cell(x) & TinyHairLikeFibers(x) & Flagella(x))", "score": 0}
{"id": "eqasc_validation_45", "prediction": "all x.(CollarCell(x) -> HasFlagella(x))", "score": 0}
{"id": "eqasc_validation_46", "prediction": "all x y.((CollarCell(x) & InteriorChamber(y)) -> Lines(x,y))", "score": 0}
{"id": "eqasc_validation_47", "prediction": "all x y.((InteriorChamber(x) & TinyHairs(y)) -> TrapsParticles(x,y))", "score": 0}
{"id": "eqasc_validation_48", "prediction": "all x.(CollarCell(x) -> WorkHorseOfSponge(x))", "score": 0}
{"id": "eqasc_validation_49", "prediction": "all x.(Sponge(x) -> (TinyHairs(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_50", "prediction": "all x.(Sponge(x) -> (TrapsParticles(x) & Particles(x)))", "score": 0}
{"id": "eqasc_validation_51", "prediction": "all x.(CollarCell(x) -> HasFlagellum(x))", "score": 0}
{"id": "eqasc_validation_52", "prediction": "all x.(Flagellum(x) -> (TinyHairs(x) & TrapsParticles(x)))", "score": 0}
{"id": "eqasc_validation_53", "prediction": "all x y.((WorkHorse(x) & Sponge(y)) -> (TinyHairs(x) & TrapsParticles(x,y)))", "score": 0}
{"id": "eqasc_validation_54", "prediction": "all x.(Cnidarian(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_55", "prediction": "all x.(Cnidarian(x) -> (Jerkyfish(x) | Anemones(x)))", "score": 0}
{"id": "eqasc_validation_56", "prediction": "all x.(Jellyfish(x) -> AquaticAnimal(x))", "score": 0}
{"id": "eqasc_validation_57", "prediction": "all x.(AquaticCreature(x) -> LivesInWater(x))", "score": 0}
{"id": "eqasc_validation_58", "prediction": "all x.(Cnidarian(x) -> LivesInWater(x))", "score": 0}
{"id": "eqasc_validation_59", "prediction": "all x.(CnidarianTentacle(x) -> CapturesPrey(x))", "score": 0}
{"id": "eqasc_validation_60", "prediction": "all x.(AquaticTentacle(x) -> CapturesPrey(x))", "score": 0}
{"id": "eqasc_validation_61", "prediction": "all x.(Cnidarian(x) -> LivesInWater(x))", "score": 0}
{"id": "eqasc_validation_62", "prediction": "all x.(Jellyfish(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_63", "prediction": "all x.(Jellyfish(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_64", "prediction": "all x.(Anemone(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_65", "prediction": "all x.(Jellyfish(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_66", "prediction": "all x.((Jellyfish(x) | Anemone(x)) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_67", "prediction": "all x.(Cnidarian(x) -> Coelenterates(x))", "score": 0}
{"id": "eqasc_validation_68", "prediction": "all x.(Coelenterate(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_69", "prediction": "all x.(Coelenterate(x) -> Aquatic(x))", "score": 0}
{"id": "eqasc_validation_70", "prediction": "all x.((AquaticAnimal(x) & MovingThroughWater(x)) -> Aerodynamics(x))", "score": 0}
{"id": "eqasc_validation_71", "prediction": "all x.(Cnidarian(x) -> MovesThroughWater(x))", "score": 0}
{"id": "eqasc_validation_72", "prediction": "all x.(Scyphozoan(x) -> (NextCnidarian(x) & Jellyfish(x)))", "score": 0}
{"id": "eqasc_validation_73", "prediction": "all x.(Scyphozoan(x) -> AquaticOrganism(x))", "score": 0}
{"id": "eqasc_validation_74", "prediction": "all x.(Cnidarian(x) -> HydrostaticSkeleton(x))", "score": 0}
{"id": "eqasc_validation_75", "prediction": "exists x.(AquaticAnimal(x) & HydrostaticSkeleton(x))", "score": 0}
{"id": "eqasc_validation_76", "prediction": "all x.(PredictingWeather(x) -> RequiresStudyingWeater(x))", "score": 0}
{"id": "eqasc_validation_77", "prediction": "all x.(Meteorologist(x) -> PredictsWeather(x))", "score": 0}
{"id": "eqasc_validation_78", "prediction": "all x.(Meteorologist(x) -> RequiresStudyingWeather(x))", "score": 0}
{"id": "eqasc_validation_79", "prediction": "all x.(Meteorologist(x) -> StudiesWeather(x))", "score": 0}
{"id": "eqasc_validation_80", "prediction": "all x y z.((Meteorologist(x) & Weather(y) & Weather(z)) -> Studies(x,y,z))", "score": 0}
{"id": "eqasc_validation_81", "prediction": "all x.(Meteorologist(x) -> (StudiesWeather(x) | PredictsWeather(x)))", "score": 0}
{"id": "eqasc_validation_82", "prediction": "all x.(Meteorology(x) -> RequiresStudyingWeather(x))", "score": 0}
{"id": "eqasc_validation_83", "prediction": "all x y.((Meteorologist(x) & Weather(y)) -> RequiresStudying(x,y))", "score": 0}
{"id": "eqasc_validation_84", "prediction": "all x.(Meteorologist(x) -> (StudiesWeatherConditions(x) & PreparesWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_85", "prediction": "all x.(PredictingWeather(x) -> (PreparesCurrentAndLongRangeWeatherPredictions(x)))", "score": 0}
{"id": "eqasc_validation_86", "prediction": "all x.(IntroductionToWeather(x) -> (StudyOfWeather(x) & Weather(x)))", "score": 0}
{"id": "eqasc_validation_87", "prediction": "all x.(PredictingWeather(x) -> RequiresMeteorology(x))", "score": 0}
{"id": "eqasc_validation_88", "prediction": "all x.(Meteorologist(x) -> (StudiesWeather(x) & StudiesWeather(x)))", "score": 0}
{"id": "eqasc_validation_89", "prediction": "all x y.((Weather(x) & Meteorologist(y)) -> Predicts(y,x))", "score": 0}
{"id": "eqasc_validation_90", "prediction": "all x y.((KnowledgeOfStars(x) & Navigate(y)) -> CanBeUsedToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_91", "prediction": "all x.(Astronomy(x) -> (StudiesPlanets(x) & StudiesStars(x) & StudiesUniverse(x)))", "score": 0}
{"id": "eqasc_validation_92", "prediction": "all x.(Astronomy(x) -> Navigates(x))", "score": 0}
{"id": "eqasc_validation_93", "prediction": "all x.(Map(x) -> (GoodMap(x) & EssentialToTravel(x)))", "score": 0}
{"id": "eqasc_validation_94", "prediction": "all x.((KnowledgeOfStars(x) & TravelingOnRoad(x)) -> ReplacesMaps(x))", "score": 0}
{"id": "eqasc_validation_95", "prediction": "all x.(Star(x) -> InConstellation(x))", "score": 0}
{"id": "eqasc_validation_96", "prediction": "all x.((KnowledgeOfConstellations(x) & Navigates(x)) -> CanBeUsedToNavigate(x))", "score": 0}
{"id": "eqasc_validation_97", "prediction": "all x y.((Explorer(x) & NorthStar(y)) -> UsedForNavigation(x,y))", "score": 0}
{"id": "eqasc_validation_98", "prediction": "all x.((NorthStar(x) & Knowledge(x)) -> CanUseForDirections(x))", "score": 0}
{"id": "eqasc_validation_99", "prediction": "all x y.((KnowledgeOfStars(x) & Explorer(y)) -> Orients(x,y))", "score": 0}
{"id": "eqasc_validation_100", "prediction": "all x.(StarStar(x) -> (SymbolOfHope(x) & SymbolOfGuidance(x) & InUncertainty(x)))", "score": 0}
{"id": "eqasc_validation_101", "prediction": "all x.(Uncertainty(x) -> CanBeOvercomeByNavigation(x))", "score": 0}
{"id": "eqasc_validation_102", "prediction": "all x.(Navigation(x) -> SpaceTravelElement(x))", "score": 0}
{"id": "eqasc_validation_103", "prediction": "all x.(KnowledgeOfStars(x) -> CanBeUsedToTravel(x))", "score": 0}
{"id": "eqasc_validation_104", "prediction": "all x.(Astronomer(x) -> StudiesStars(x))", "score": 0}
{"id": "eqasc_validation_105", "prediction": "all x.(Astronomy(x) -> Navigates(x))", "score": 0}
{"id": "eqasc_validation_106", "prediction": "all x y.((Vehicle(x) & Brake(y)) -> StopsBy(x,y))", "score": 0}
{"id": "eqasc_validation_107", "prediction": "all x.((Vehicle(x) & OnIncline(x)) -> BrakesInvolved(x))", "score": 0}
{"id": "eqasc_validation_108", "prediction": "all x y.((Vehicle(x) & Inincline(y)) -> UsedToStopOn(x,y))", "score": 0}
{"id": "eqasc_validation_109", "prediction": "all x.((Fishtailing(x) | SevereBrakingAtHighSpeed(x)) -> (CausesJackknifing(x) & CausesRollover(x)))", "score": 0}
{"id": "eqasc_validation_110", "prediction": "all x.(Friction(x) -> (CausesJackknifing(x) & CausesRollover(x)))", "score": 0}
{"id": "eqasc_validation_111", "prediction": "all x.(BrakeDust(x) -> ProducedDuringFrictionOfBraking(x))", "score": 0}
{"id": "eqasc_validation_112", "prediction": "all x.((Vehicle(x) & Stops(x)) -> ProducesBrakeDust(x))", "score": 0}
{"id": "eqasc_validation_113", "prediction": "all x.((Truck(x) & No.2(x)) -> BrakesApplicationToRearWheels(x))", "score": -1}
{"id": "eqasc_validation_114", "prediction": "all x y.((Friction(x) & Truck(y)) -> Stops(x,y))", "score": 0}
{"id": "eqasc_validation_115", "prediction": "all x.(Friction(x) -> OpposesMotion(x))", "score": 0}
{"id": "eqasc_validation_116", "prediction": "all x.((Force(x) & OpposesMotion(x)) -> UsedForStoppingVehiclesByBrakes(x))", "score": 0}
{"id": "eqasc_validation_117", "prediction": "all x.(SmootherSurface(x) -> LessFriction(x))", "score": 0}
{"id": "eqasc_validation_118", "prediction": "all x y.((Brake(x) & Vehicle(y)) -> (StopsOnSmoothSurfaces(x,y) & LessEffectiveAtStopsOnSmoothSurfaces(x,y)))", "score": 0}
{"id": "eqasc_validation_119", "prediction": "all x y.((Car(x) & Car(y)) -> (UsedForStopping(x,y) & Brakes(x)))", "score": 0}
{"id": "eqasc_validation_120", "prediction": "all x.(Friction(x) -> ProducesHeat(x))", "score": 0}
{"id": "eqasc_validation_121", "prediction": "all x y.((Vehicle(x) & Brakes(y) & StopsWith(x,y)) -> GeneratesHeat(x))", "score": 0}
{"id": "eqasc_validation_122", "prediction": "all x.((Truck(x) | Car(x)) -> Vehicle(x))", "score": 1}
{"id": "eqasc_validation_123", "prediction": "all x y z.((Friction(x) & Truck(y) & Car(z) & Brakes(y)) -> StopsUsing(x,y,z))", "score": 0}
{"id": "eqasc_validation_124", "prediction": "all x y.((Flower(x) & SporophytePlant(y)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_125", "prediction": "all x.(Spotrophyte(x) -> PossessesStoma(x))", "score": 0}
{"id": "eqasc_validation_126", "prediction": "all x y z.((Flower(x) & Plant(y) & Plant(z) & PossessesStoma(y,z)) -> FormsOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_127", "prediction": "all x.(Sporophyte(x) -> (AppearsEarlyInSpring(x) & As SoonAsSnowMelts(x)))", "score": -1}
{"id": "eqasc_validation_128", "prediction": "all x y.((Flower(x) & Snow(y)) -> Melts(x,y))", "score": 0}
{"id": "eqasc_validation_129", "prediction": "all x y.((Flower(x) & Plant(y)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_130", "prediction": "all x.(AngiospermSporophyte(x) -> Dominant(x))", "score": 0}
{"id": "eqasc_validation_131", "prediction": "all x.(Flower(x) -> FormsOnAngiosperm(x))", "score": 0}
{"id": "eqasc_validation_132", "prediction": "all x y.((Flower(x) & Angiosperm(y)) -> FormsOn(x,y))", "score": 0}
{"id": "eqasc_validation_133", "prediction": "all x.(SkinColor(x) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_134", "prediction": "all x.(Melanin(x) -> GivesTanColor(x))", "score": 0}
{"id": "eqasc_validation_135", "prediction": "all x.(MelaninAmount(x) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_136", "prediction": "all x.((HumanSkin(x) & HairColor(x)) -> PolygenicTreatment(x))", "score": 0}
{"id": "eqasc_validation_137", "prediction": "all x.(HairColor(x) -> Polygenic(x))", "score": 0}
{"id": "eqasc_validation_138", "prediction": "all x y.((SkinColor(x) & MelaninPigment(y)) -> DeterminedBy(x,y))", "score": 0}
{"id": "eqasc_validation_139", "prediction": "all x.(MelaninPigment(x) -> DeterminedByPolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_140", "prediction": "all x.(PolygenicInheritance(x) -> (ControlledByUnknownGenes(x) & PolygenicTreatment(x)))", "score": 0}
{"id": "eqasc_validation_141", "prediction": "all x.(SkinColor(x) -> ControlledByUnknownGenes(x))", "score": 0}
{"id": "eqasc_validation_142", "prediction": "all x.(DentalVariation(x) -> (Polygenic(x) & ControlledByGenes(x)))", "score": 0}
{"id": "eqasc_validation_143", "prediction": "all x.(SkinColor(x) -> (ControlledByGenes(x) & Genes(x)))", "score": 0}
{"id": "eqasc_validation_144", "prediction": "all x.(TouretteSyndrom(x) -> PolygenicDisorder(x))", "score": 0}
{"id": "eqasc_validation_145", "prediction": "all x.(TouretteSyndrom(x) -> Trait(x))", "score": 0}
{"id": "eqasc_validation_146", "prediction": "all x.((PhenotypicExpression(x) & PolygenicTreatment(x)) -> VariatesOverWideRange(x))", "score": 0}
{"id": "eqasc_validation_147", "prediction": "all x.(SkinColor(x) -> PhenotypicExpression(x))", "score": 0}
{"id": "eqasc_validation_148", "prediction": "all x.(PolygenicTreatment(x) -> (ControledByGenes(x,2) | ControledByGenes(x,3)))", "score": 0}
{"id": "eqasc_validation_149", "prediction": "all x.(SkinColor(x) -> (ControlledByGenes(x,2) | ControlledByGenes(x,3)))", "score": 0}
{"id": "eqasc_validation_150", "prediction": "all x.((ComplexCharacteristics(x) & Polygenic(x)) -> InfluencedByMultipleGenes(x))", "score": 0}
{"id": "eqasc_validation_151", "prediction": "all x.(SkinColor(x) -> InfluencedByGenes(x))", "score": 0}
{"id": "eqasc_validation_152", "prediction": "all x.(PigmentCell(x) -> (GivesColor(x) | GivesTongue(x)))", "score": 0}
{"id": "eqasc_validation_153", "prediction": "all x.(Pigment(x) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_154", "prediction": "all x.(Color(x) -> DependsOnMelaninContent(x))", "score": 0}
{"id": "eqasc_validation_155", "prediction": "all x.(MelaninContent(x) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_156", "prediction": "all x.((SkinColor(x) & PhenotypicExpression(x)) -> VariatesOverWideRange(x))", "score": 0}
{"id": "eqasc_validation_157", "prediction": "all x.(ReptileParent(x) -> ProvidesLittleCareToYoung(x))", "score": 0}
{"id": "eqasc_validation_158", "prediction": "all x y.((CrocodilianMother(x) & Reptile(y)) -> ProvidesMostParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_159", "prediction": "all x.((Mother(x) & Crocodilian(x)) -> AttentiveReptileParent(x))", "score": 0}
{"id": "eqasc_validation_160", "prediction": "all x.(Iguana(x) -> (GoodReptile(x) & ExperiencedCaregivers(x)))", "score": 0}
{"id": "eqasc_validation_161", "prediction": "all x y.((IguanaParent(x) & Young(y)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_162", "prediction": "all x.((Sparrowing(x) & AbandonEggs(x) & ProvideNoParentalCare(x)) -> ParentalCare(x))", "score": 0}
{"id": "eqasc_validation_163", "prediction": "all x y.((ReptileParent(x) & Egg(y)) -> Abandons(x,y))", "score": 0}
{"id": "eqasc_validation_164", "prediction": "all x.((Alligator(x) | Crocodile(x)) -> LargestLivingReptile(x))", "score": 0}
{"id": "eqasc_validation_165", "prediction": "all x y.((Alligator(x) | Crocodile(y)) & Young(y)) -> ProvidesLittleCare(x,y))", "score": -1}
{"id": "eqasc_validation_166", "prediction": "all x.(Lizard(x) -> Reptile(x))", "score": 0}
{"id": "eqasc_validation_167", "prediction": "all x y.((LizardParent(x) & Young(y)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_168", "prediction": "all x y.((Mother(x) & Crocodilian(y)) -> ProvidesCareToYoung(x,y))", "score": 0}
{"id": "eqasc_validation_169", "prediction": "all x.(Geckos(x) -> Reptile(x))", "score": 0}
{"id": "eqasc_validation_170", "prediction": "all x y.((GeckoParent(x) & Young(y)) -> ProvidesLittleCare(x,y))", "score": 0}
{"id": "eqasc_validation_171", "prediction": "all x.(Reptile(x) -> ColdBlooded(x))", "score": 0}
{"id": "eqasc_validation_172", "prediction": "all x.(ColdBloodedParent(x) -> ProvidesLittleCareToYoung(x))", "score": 0}
{"id": "eqasc_validation_173", "prediction": "all x y.((GroundTissue(x) & Plant(y)) -> MakesUpInterior(x,y))", "score": 0}
{"id": "eqasc_validation_174", "prediction": "all x.(Oak(x) -> MostCommonlyAttackedPlant(x))", "score": 0}
{"id": "eqasc_validation_175", "prediction": "all x y.((GroundTissue(x) & Oak(y)) -> MakesUpInterior(x,y))", "score": 0}
{"id": "eqasc_validation_176", "prediction": "all x y.((VascularTissue(x) & Roots(y)) -> DrawsWaterIntoPlantFromGround(x,y))", "score": 0}
{"id": "eqasc_validation_177", "prediction": "all x y.((VascularTissue(x) & Roots(y)) -> MakesUpInteriorOfPlant(x,y))", "score": 0}
{"id": "eqasc_validation_178", "prediction": "all x.(Fern(x) -> SeedlessPlant(x))", "score": 0}
{"id": "eqasc_validation_179", "prediction": "all x y.((GroundTissue(x) & Fern(y)) -> MakesUpInterior(x,y))", "score": 0}
{"id": "eqasc_validation_180", "prediction": "all x.(Plant(x) -> HoldsNutrientsInTissue(x))", "score": 0}
{"id": "eqasc_validation_181", "prediction": "all x y.((Nutrient(x) & Tissue(y)) -> HeldIn(x,y))", "score": 0}
{"id": "eqasc_validation_182", "prediction": "all x y z.((Gas(x) & OpenContainer(y) & Gas(z) & Evaporates(x,y)) -> SpreadsOutIntoAir(z,y))", "score": 0}
{"id": "eqasc_validation_183", "prediction": "all x.((Fume(x) & Evaporation(x)) -> PresentsDanger(x))", "score": 0}
{"id": "eqasc_validation_184", "prediction": "all x y.((Gas(x) & OpenContainer(y) & SpreadsOut(x,y)) -> FumesPresentDanger(x))", "score": 0}
{"id": "eqasc_validation_185", "prediction": "all x.((Gases(x) & Vapours(x)) -> CanContaminateWorkplaceAir(x))", "score": 0}
{"id": "eqasc_validation_186", "prediction": "all x y.((DangerousGas(x) & OpenContainer(y) & Evaporates(x,y)) -> CanContaminateWorkplace(x))", "score": 0}
{"id": "eqasc_validation_187", "prediction": "all x.(Gas(x) -> Oxygen(x))", "score": 0}
{"id": "eqasc_validation_188", "prediction": "all x y z.((Oxygen(x) & OpenContainer(y) & Evaporates(x,y)) -> (OxygenSpreadsOutIntoAir(x)))", "score": 0}
{"id": "eqasc_validation_189", "prediction": "all x.(Evaporation(x) -> (Liquid(x) & TurnsIntoGas(x)))", "score": 0}
{"id": "eqasc_validation_190", "prediction": "all x y.((Liquid(x) & OpenContainer(y) & TurnsIntoGas(x,y)) -> SpreadsOutIntoAir(x))", "score": 0}
{"id": "eqasc_validation_191", "prediction": "all x.(Hydrogen(x) -> ExplosiveGas(x))", "score": 0}
{"id": "eqasc_validation_192", "prediction": "all x y.((HydrogenEvaporates(x) & OpenContainer(y)) -> SpreadsOutIntoAir(x,y))", "score": 0}
{"id": "eqasc_validation_193", "prediction": "all x.(WaterVapor(x) -> GasInAir(x))", "score": 0}
{"id": "eqasc_validation_194", "prediction": "all x y z.((WaterVapor(x) & OpenContainer(y) & OpenContainer(z) & Evaporates(x,y)) -> SpreadsOutIntoAir(x,z))", "score": 0}
{"id": "eqasc_validation_195", "prediction": "all x.(KidsLunchBox(x) -> MarvellousContainer(x))", "score": 0}
{"id": "eqasc_validation_196", "prediction": "all x.((GasInOpenBox(x) & PlacesInOpenBox(x)) -> (Evaporates(x) & SpreadsOutIntoAir(x)))", "score": 0}
{"id": "eqasc_validation_197", "prediction": "all x y.((Generator(x) & GeneratorExhaust(y)) -> DeadlyCarbonMonoxideGas(x,y))", "score": 0}
{"id": "eqasc_validation_198", "prediction": "all x y.((Generator(x) & GeneratorExhaust(y)) -> Evaporated(x,y))", "score": 0}
{"id": "eqasc_validation_199", "prediction": "all x.(Bone(x) -> (LessFlexible(x) & Stronger(x)))", "score": 0}
{"id": "eqasc_validation_200", "prediction": "all x.(Shark(x) -> HasCartillageSkeleton(x))", "score": 0}
{"id": "eqasc_validation_201", "prediction": "all x.(RegularSkeleton(x) -> (LessFlexible(x) & Stronger(x)))", "score": 0}
{"id": "eqasc_validation_202", "prediction": "all x.((Ears(x) & Bones(x)) -> MadeOfCartilization(x))", "score": 0}
{"id": "eqasc_validation_203", "prediction": "all x.(Ears(x) -> MadeOfCartilagin(x))", "score": 0}
{"id": "eqasc_validation_204", "prediction": "all x y.((Fish(x) & Shark(y)) -> (HasBonySkeleton(x) & HasSkeleton(y) & MadeOfCartillage(y)))", "score": 0}
{"id": "eqasc_validation_205", "prediction": "all x y.((Fish(x) & Shark(y)) -> (LessFlexibleSkeletons(x) & StrongerSkeletons(x)))", "score": 0}
{"id": "eqasc_validation_206", "prediction": "all x.(ArticularCartilagin(x) -> (Cartilagin(x) & CoversBoneAndJoinAreas(x)))", "score": 0}
{"id": "eqasc_validation_207", "prediction": "all x y.((Bone(x) & Material(y) & Covers(x,y)) -> (LessFlexible(x) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_208", "prediction": "all x.(Tissue(x) -> (Bone(x) & Carbohydrate(x) & BoneMarrow(x) & Corneas(x)))", "score": 0}
{"id": "eqasc_validation_209", "prediction": "exists x.(BodylyTissue(x) & Flexible(x) & Strong(x))", "score": 0}
{"id": "eqasc_validation_210", "prediction": "all x.(Cartilage(x) -> (MoreFlexible(x) & LighterInWeight(x)))", "score": 0}
{"id": "eqasc_validation_211", "prediction": "all x y.((Bone(x) & Carbolage(y)) -> (Stronger(x,y) & MoreRigid(x,y)))", "score": 0}
{"id": "eqasc_validation_212", "prediction": "all x y.((BoneSkeleton(x) & SharkSkeleton(y)) -> (LessFlexible(x,y) & Stronger(x,y)))", "score": 0}
{"id": "eqasc_validation_213", "prediction": "all x.(Cartilage(x) -> (Strong(x) & Flexible(x) & Lightweight(x)))", "score": 0}
{"id": "eqasc_validation_214", "prediction": "all x.(Bone(x) -> (LessLightweight(x) & Stronger(x)))", "score": 0}
{"id": "eqasc_validation_215", "prediction": "all x.(Cartilage(x) -> (SemiTranslucentTissue(x) & Firm(x) & MoreFlexibleThanBone(x)))", "score": 0}
{"id": "eqasc_validation_216", "prediction": "all x y.((Bone(x) & SemiTranslucentTissue(y)) -> LessFlexibleThan(x,y))", "score": 0}
{"id": "eqasc_validation_217", "prediction": "all x.((BadWeather(x) & BadWeather(x)) -> DecreasesVisibility(x))", "score": 0}
{"id": "eqasc_validation_218", "prediction": "all x.(MoreVisibility(x) -> SafeOperation(x))", "score": 0}
{"id": "eqasc_validation_219", "prediction": "all x.((BadWeather(x) & SafeOperation(x) & Driving(x)) -> Decreases(x))", "score": 0}
{"id": "eqasc_validation_220", "prediction": "all x.(GoodVisibility(x) -> SafeDriving(x))", "score": 0}
{"id": "eqasc_validation_221", "prediction": "all x.(BadWeather(x) -> UnsafeDrivingConditions(x))", "score": 0}
{"id": "eqasc_validation_222", "prediction": "all x.((Thunderstorm(x) & Hail(x)) -> DangerousWeatherPhenomenon(x))", "score": 0}
{"id": "eqasc_validation_223", "prediction": "all x.(Hail(x) -> DecreasesVisibility(x))", "score": 0}
{"id": "eqasc_validation_224", "prediction": "all x y.((Fog(x) & SmallBoatHarborTournamentSite(y)) -> VisibilityNearZero(x,y))", "score": 0}
{"id": "eqasc_validation_225", "prediction": "all x.(BadWeather(x) -> TakesVisibilityToNearZero(x))", "score": 0}
{"id": "eqasc_validation_226", "prediction": "all x.((SecondaryAccident(x) & DrivingConditionsReducedVisibility(x)) -> MajorProblem(x))", "score": 0}
{"id": "eqasc_validation_227", "prediction": "all x.(BadWeather(x) -> IncreasesRiskOfCarAccidents(x))", "score": 0}
{"id": "eqasc_validation_228", "prediction": "all x.((Collisions(x) & PoorVisibility(x)) -> MoreLikely(x))", "score": 0}
{"id": "eqasc_validation_229", "prediction": "all x.((BadWeather(x) & Driving(y)) -> MoreLikelyCollisions(x,y))", "score": 0}
{"id": "eqasc_validation_230", "prediction": "all x.((LackOfVisibility(x) & ManyAccidents(x)) -> MajorCause(x))", "score": 0}
{"id": "eqasc_validation_231", "prediction": "all x.(BadWeather(x) -> CausesCarAccidents(x))", "score": 0}
{"id": "eqasc_validation_232", "prediction": "all x.((BadWeather(x) & ImpairsSafeDriving(x)) -> ImpairsSafeDriving(x))", "score": 0}
{"id": "eqasc_validation_233", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPossies(x) & InNuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_234", "prediction": "all x.((DNA(x) | RNA(x)) -> Polymer(x))", "score": 0}
{"id": "eqasc_validation_235", "prediction": "all x y.((Polymer(x) & SmallChemicallyRelatedMolecule(y) & SmallChemicallyRelatedMolecule(x)) -> SqueezesThroughPorousPenetrationsInNuclearMembrane(x,y))", "score": 0}
{"id": "eqasc_validation_236", "prediction": "all x.((Cell(x) & NuclearMembrane(x)) -> Eukaryotic(x))", "score": 0}
{"id": "eqasc_validation_237", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPpores(x) & InEukaryoticCells(x)))", "score": 0}
{"id": "eqasc_validation_238", "prediction": "all x.(RibonucleicAcid(x) -> (DNA(x) & NucleicAcid(x)))", "score": 0}
{"id": "eqasc_validation_239", "prediction": "all x.(RibonucleicAcid(x) -> (SmallMolecule(x) & CanSqueezeThroughPossies(x) & InNuclearMembrane(x)))", "score": 0}
{"id": "eqasc_validation_240", "prediction": "all x y.((NuclearMembrane(x) & Nucleus(y)) -> KeepsDNAInside(x,y))", "score": 0}
{"id": "eqasc_validation_241", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPossures(x) & HoldsDNA(x)))", "score": 0}
{"id": "eqasc_validation_242", "prediction": "all x.(NuclearMembrane(x) -> (Thickened(x) & Rounded(x) & -Irregular(x)))", "score": 0}
{"id": "eqasc_validation_243", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & SqueezesThroughThickenedRoundedAndIrregularPpores(x)))", "score": 0}
{"id": "eqasc_validation_244", "prediction": "all x.(RNA(x) -> (SmallMolecule(x) & CanSqueezeThroughPpores(x) & EukaryoticCell(x)))", "score": 0}
{"id": "eqasc_validation_245", "prediction": "all x y.((PoisonousDart(x) & SeaAnemone(y)) -> UsedForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_246", "prediction": "all x.(Coral(x) -> (EvolvedDefenses(x) & Protects(x)))", "score": 0}
{"id": "eqasc_validation_247", "prediction": "all x y.((PoisonusDart(x) & SeaAnemone(y)) -> UsedForProtection(x,y))", "score": 0}
{"id": "eqasc_validation_248", "prediction": "all x y.((PoisonDartFrog(x) & Native(y)) -> SourceOfToxin(x,y))", "score": 0}
{"id": "eqasc_validation_249", "prediction": "all x y.((Toxin(x) & SeaAnemone(y)) -> UsedForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_250", "prediction": "all x.(ReefInhabitant(x) -> Anemone(x))", "score": 0}
{"id": "eqasc_validation_251", "prediction": "all x y.((SeaCreature(x) & Reef(y)) -> LivesIn(x,y))", "score": 0}
{"id": "eqasc_validation_252", "prediction": "all x.(VenomousCreature(x) -> UsesPoisonAsWaffen(x))", "score": 0}
{"id": "eqasc_validation_253", "prediction": "all x.(SeaAnemone(x) -> Venomous(x))", "score": 0}
{"id": "eqasc_validation_254", "prediction": "all x.(SeaAnemone(x) -> CloseRelativeOfCorals(x))", "score": 0}
{"id": "eqasc_validation_255", "prediction": "all x y.((PoisonousDart(x) & CloseRelative(y)) -> UsedForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_256", "prediction": "all x y.((CloseRelative(x) & Coral(y)) -> UsesPoisonousDartsForDefense(x,y))", "score": 0}
{"id": "eqasc_validation_257", "prediction": "all x.((ProtectAtGateway(x) & BestDefense(x)) -> BestDefense(x))", "score": 0}
{"id": "eqasc_validation_258", "prediction": "all x.(PoisonousDart(x) -> UsedAsProtectionBySeaAnemones(x))", "score": 0}
{"id": "eqasc_validation_259", "prediction": "all x.(Anthozoan(x) -> (FamiliarAnemone(x) & FamiliarCoral(x)))", "score": 0}
{"id": "eqasc_validation_260", "prediction": "all x.(PoisonousDart(x) -> UsedForDefense(x))", "score": 0}
{"id": "eqasc_validation_261", "prediction": "all x.(SeaAnemone(x) -> (RelatedToJellyfish(x) & RelatedToCoral(x)))", "score": 0}
{"id": "eqasc_validation_262", "prediction": "all x y z.((PoisonousDart(x) & Organism(y) & Jellyfish(z) & Coral(z)) -> UsedForDefense(x,y,z))", "score": 0}
{"id": "eqasc_validation_263", "prediction": "all x.(Lymph(x) -> (LeaksOutOfCapillaries(x) & EntersSpacesBetweenCells(x)))", "score": 0}
{"id": "eqasc_validation_264", "prediction": "all x.(SmallLymphCapillary(x) -> CollectsLymph(x))", "score": 0}
{"id": "eqasc_validation_265", "prediction": "all x.(SmallCapillary(x) -> CollectsFluid(x))", "score": 0}
{"id": "eqasc_validation_266", "prediction": "all x.(LymphVessel(x) -> (CarriesLymph(x) & ColorlessWateryFluid(x) & ContainsLymphocytes(x)))", "score": 0}
{"id": "eqasc_validation_267", "prediction": "all x y.((Fluid(x) & LeaksOutOfCapillaries(x) & SpacesBetweenCells(y)) -> ContainsLymphocytes(x))", "score": 0}
{"id": "eqasc_validation_268", "prediction": "all x.(CapillaryWall(x) -> Permeable(x))", "score": 0}
{"id": "eqasc_validation_269", "prediction": "all x.(Lymph(x) -> LeaksFromPermeableWallsIntoSpacesBetweenCells(x))", "score": 0}
{"id": "eqasc_validation_270", "prediction": "all x.(System(x) -> (LymphCapillaries(x) & LymphVines(x) & LymphNodes(x)))", "score": 0}
{"id": "eqasc_validation_271", "prediction": "all x.(Lymph(x) -> InNodes(x))", "score": 0}
{"id": "eqasc_validation_272", "prediction": "all x.(LymphFluid(x) -> RichInProtein(x))", "score": 0}
{"id": "eqasc_validation_273", "prediction": "all x y.((ProteinRichFluid(x) & Space(y)) -> LeaksInto(x,y))", "score": 0}
{"id": "eqasc_validation_274", "prediction": "all x.(Human(x) -> MadeUpOfTwelveStationsOfCells(x))", "score": 0}
{"id": "eqasc_validation_275", "prediction": "all x.(Human(x) -> ContainsLymph(x))", "score": 0}
{"id": "eqasc_validation_276", "prediction": "all x.(Capillary(x) -> MicroscopicVessel(x))", "score": 0}
{"id": "eqasc_validation_277", "prediction": "all x.(Lymph(x) -> (Liquid(x) & LeaksOutOfMicroscopicVessels(x) & LeaksIntoSpacesBetweenCells(x)))", "score": 0}
{"id": "eqasc_validation_278", "prediction": "all x y.((Bacteria(x) & LymphNode(y)) -> InvadesAndSwells(x,y))", "score": 0}
{"id": "eqasc_validation_279", "prediction": "all x y z.((SwellingNode(x) & Capillary(y) & Space(z)) -> LeaksFluidOutInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_280", "prediction": "all x.((LymphNode(x) | Glands(x)) -> FiltersLymphFluid(x))", "score": 0}
{"id": "eqasc_validation_281", "prediction": "all x y.((Lymph(x) & Node(y)) -> FilteredBy(x,y))", "score": 0}
{"id": "eqasc_validation_282", "prediction": "all x.(Capillary(x) -> (Tiny(x) & ThinWalledBloodedVessel(x)))", "score": 0}
{"id": "eqasc_validation_283", "prediction": "all x y z.((LymphFluid(x) & BloodVessel(y) & Space(z)) -> LeaksOutInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_284", "prediction": "all x.(Lymph(x) -> (RichInWhiteBloodCells(x) & FlowsThroughLymphaticVessels(x)))", "score": 0}
{"id": "eqasc_validation_285", "prediction": "all x.((Fluid(x) & LeaksOutOfCapillaries(x) & SpacesBetweenCells(x)) -> RichInWhiteBloodCells(x))", "score": 0}
{"id": "eqasc_validation_286", "prediction": "all x y z.((Fluid(x) & RichInProtein(x) & Capillary(y) & SpaceBetweenCells(z)) -> LeaksOutInto(x,y,z))", "score": 0}
{"id": "eqasc_validation_287", "prediction": "all x y z.((Capillary(x) & Artery(y) & Vein(z)) -> ConnectsTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_288", "prediction": "all x.(Lymph(x) -> LeaksOutOfConnectionOfArteriesToVines(x))", "score": 0}
{"id": "eqasc_validation_289", "prediction": "all x.((Antigen(x) & CausesAllergy(x)) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_290", "prediction": "all x.(Antigen(x) -> (Protein(x) & ForeignToBody(x)))", "score": 0}
{"id": "eqasc_validation_291", "prediction": "all x.((FrenchProtein(x) & CausesAllergy(x)) -> Allergen(x))", "score": 0}
{"id": "eqasc_validation_292", "prediction": "all x.(AsthmaAttack(x) -> CausedByAllergies(x))", "score": 0}
{"id": "eqasc_validation_293", "prediction": "all x.(Allergen(x) -> TriggersAsthmaAttacks(x))", "score": 0}
{"id": "eqasc_validation_294", "prediction": "all x.(Antibody(x) -> ProducedToFightAntigens(x))", "score": 0}
{"id": "eqasc_validation_295", "prediction": "all x y.((Antibody(x) & Allergen(y)) -> ProducedToFight(x,y))", "score": 0}
{"id": "eqasc_validation_296", "prediction": "all x.((Allergen(x) & Pollen(x) & Dust(x)) -> Common(x))", "score": 0}
{"id": "eqasc_validation_297", "prediction": "all x.(Pollen(x) -> (Antigen(x) & CausesAllergy(x)))", "score": 0}
{"id": "eqasc_validation_298", "prediction": "all x.(Allergen(x) -> CanCauseAnaphylaxis(x))", "score": 0}
{"id": "eqasc_validation_299", "prediction": "all x y.((Antigen(x) & CausesCauseAnaphyaxis(x,y)) -> CausesCauseAnaphyaxis(x,y))", "score": 0}
{"id": "eqasc_validation_300", "prediction": "all x.((Protein(x) & ForeignToBody(x) & CausesAllergies(x)) -> Allergic(x))", "score": 0}
{"id": "eqasc_validation_301", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesBacteriaAmount(x,y))", "score": 0}
{"id": "eqasc_validation_302", "prediction": "all x.(MilkProduct(x) -> (MadeIntoIceCream(x) | MadeIntoCheeseCake(x) | MadeIntoPuddings(x)))", "score": 0}
{"id": "eqasc_validation_303", "prediction": "all x y.((Pasteurization(x) & Bacteria(y)) -> ReducesAmountInPudding(x,y))", "score": 0}
{"id": "eqasc_validation_304", "prediction": "(FrenchScientist(Pasteur) & DiscoveredBy(Pasteur))", "score": 0}
{"id": "eqasc_validation_305", "prediction": "all x y.((FrenchScientist(x) & Milk(y)) -> ReducesBacteriaInMilk(x,y))", "score": 0}
{"id": "eqasc_validation_306", "prediction": "all x.(Bacteria(x) -> UnicellularOrganism(x))", "score": 0}
{"id": "eqasc_validation_307", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesUnicellularOrganisms(x,y))", "score": 0}
{"id": "eqasc_validation_308", "prediction": "all x y.((Pasteurization(x) & Bacteria(y) & Milk(z) & CausesTuberculosis(y,z)) -> Disrupts(x,y,z))", "score": 0}
{"id": "eqasc_validation_309", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesCauseOfTuberculosis(x,y))", "score": 0}
{"id": "eqasc_validation_310", "prediction": "all x y.((Pasteurization(x) & Germ(y)) -> (DevelopedBy(x,y) & LouisPasteur(x)))", "score": 0}
{"id": "eqasc_validation_311", "prediction": "all x y.((Milk(x) & Heating(y)) -> ReducesBacteriaAmount(x,y))", "score": 0}
{"id": "eqasc_validation_312", "prediction": "all x.(Cow(x) -> ProducesMilk(x))", "score": 0}
{"id": "eqasc_validation_313", "prediction": "all x y.((Pasteurization(x) & Cow(y)) -> ReducesBacteriaIn(x,y))", "score": 0}
{"id": "eqasc_validation_314", "prediction": "all x.(Pasteurization(x) -> (MildHeatingProcess(x) & KillsPathogenicMicroorganisms(x) & InMilk(x)))", "score": 0}
{"id": "eqasc_validation_315", "prediction": "all x.(MildHeatingProcess(x) -> ReducesBacteriaInMilk(x))", "score": 0}
{"id": "eqasc_validation_316", "prediction": "all x.((Bacteria(x) | BlueGreenBacteria(x)) -> ProkaryoticCell(x))", "score": 0}
{"id": "eqasc_validation_317", "prediction": "all x y.((Pasteurization(x) & Milk(y)) -> ReducesProkaryoticCellsInMilk(x,y))", "score": 0}
{"id": "eqasc_validation_318", "prediction": "all x.((Heat(x) & Pasteurization(x)) -> ReducesVitaminContent(x))", "score": 0}
{"id": "eqasc_validation_319", "prediction": "all x.((HeatingMilk(x) & ReducesBacteriaAmount(x)) -> ReducesVitaminContent(x))", "score": 0}
{"id": "eqasc_validation_320", "prediction": "all x y.((Growth(x) & Infancy(y) & Puberty(y)) -> Faster(x,y))", "score": 0}
{"id": "eqasc_validation_321", "prediction": "all x.(PhysiologicalStress(x) -> (RelatedToChangeInGrowthSize(x) & For example(x)))", "score": -1}
{"id": "eqasc_validation_322", "prediction": "all x y.((ChangeInSize(x) & Infancy(y) & Puberty(y)) -> FasterChangeInSize(x,y))", "score": 0}
{"id": "eqasc_validation_323", "prediction": "all x.(Human(x) -> (FetalDevelopment(x) & EarlyInfancy(x)))", "score": 0}
{"id": "eqasc_validation_324", "prediction": "all x y.((FetalDevelopment(x) & Puberty(y)) -> FasterGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_325", "prediction": "all x.(Adolescence(x) -> Puberty(x))", "score": 0}
{"id": "eqasc_validation_326", "prediction": "all x y.((Infancy(x) & Adolescence(y)) -> FasterGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_327", "prediction": "all x.((Baby(x) & Infancy(x)) -> LearnsToTrustWorld(x))", "score": 0}
{"id": "eqasc_validation_328", "prediction": "all x y.((Baby(x) & Puberty(y)) -> GrowsFasterThan(x,y))", "score": 0}
{"id": "eqasc_validation_329", "prediction": "all x.(InfancyEndsWithWeaning(x) -> (AroundYear3(x) & UsuallyAroundYear3(x)))", "score": 0}
{"id": "eqasc_validation_330", "prediction": "all x y.((Growth(x) & Age(y) & Age(y) & Age(y)) -> FasterFrom0To3(x,y))", "score": 0}
{"id": "eqasc_validation_331", "prediction": "all x.(Patient(x) -> (NeonatalPeriod(x) | EarlyInfancy(x)))", "score": 0}
{"id": "eqasc_validation_332", "prediction": "all x y.((NeonatalPeriod(x) & Puberty(y)) -> FasterGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_333", "prediction": "all x.(Breast(x) -> DevelopsDuringPuberty(x))", "score": 0}
{"id": "eqasc_validation_334", "prediction": "all x y.((Infancy(x) & BreastGrowth(y)) -> FasterGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_335", "prediction": "all x.(Adolescence(x) -> Puberty(x))", "score": 0}
{"id": "eqasc_validation_336", "prediction": "all x y.((Infancy(x) & Adolescence(y)) -> FasterGrowth(x,y))", "score": 0}
{"id": "eqasc_validation_337", "prediction": "all x y.((Seismometer(x) & Earthquake(y)) -> MeasuresStrengthOrMagnitude(x,y))", "score": 0}
{"id": "eqasc_validation_338", "prediction": "all x.(Seismometer(x) -> ChecksSeismicActivity(x))", "score": 0}
{"id": "eqasc_validation_339", "prediction": "all x y.((SeismicActivity(x) & Earthquake(y)) -> (Storm(x,y) | Magnitude(x,y)))", "score": 0}
{"id": "eqasc_validation_340", "prediction": "all x.((Seismometer(x) & Calibration(x)) -> InstructionsOnCalculating(x,HomemadeSeismometer))", "score": 0}
{"id": "eqasc_validation_341", "prediction": "all x.((Instrument(x) & Calibred(x)) -> MeasuresMagnitudeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_342", "prediction": "all x.(Earthquake(x) -> MeasuredOnScale(x,1) & MeasuredOnScale(x,10)))", "score": -1}
{"id": "eqasc_validation_343", "prediction": "all x.(Seismometer(x) -> GoesUpTo10(x))", "score": 0}
{"id": "eqasc_validation_344", "prediction": "all x.(Earthquake(x) -> CausedByFaultMovement(x))", "score": 0}
{"id": "eqasc_validation_345", "prediction": "all x y.((Seismometer(x) & (FaultMovement(y) | FaultMovement(y))) -> MeasuresStrengthOrMagnitudeOf(x,y))", "score": 0}
{"id": "eqasc_validation_346", "prediction": "all x.((RiverScale(x) & DevelopedIn1935(x)) -> MeasuresEarthquake(x))", "score": 0}
{"id": "eqasc_validation_347", "prediction": "all x y.((Earthquake(x) & MaximumAmplitude(y)) -> StrengthRefersTo(x,y))", "score": 0}
{"id": "eqasc_validation_348", "prediction": "all x.(RiverScale(x) -> (ProvidesInformationOnMagnitude(x) | InherentStrength(x)))", "score": 0}
{"id": "eqasc_validation_349", "prediction": "all x y.((RiverScale(x) & Seismometer(y)) -> UsesReadingsFrom(x,y))", "score": 0}
{"id": "eqasc_validation_350", "prediction": "all x.(Seismometer(x) -> (MeasuresStrengthOrMagnitudeOfFaultMovement(x)))", "score": 0}
{"id": "eqasc_validation_351", "prediction": "all x y.((Seismometer(x) & RichterScene(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_352", "prediction": "all x.(Intensity(x) -> (MeasuresStrengthOfShaking(x) & ExperiencedInEarthquake(x)))", "score": 0}
{"id": "eqasc_validation_353", "prediction": "all x.(Seismometer(x) -> MeasuresIntensityOfShakingOfEarthquakes(x))", "score": 0}
{"id": "eqasc_validation_354", "prediction": "all x y.((SeismicWaves(x) & Earthquake(y)) -> ProducedBy(x,y))", "score": 0}
{"id": "eqasc_validation_355", "prediction": "all x y.((Seismometer(x) & SeismicWaves(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_356", "prediction": "all x y.((Scientist(x) & Seismometer(y)) -> (DeterminesLocation(x,y) & DeterminesStrength(x,y)))", "score": 0}
{"id": "eqasc_validation_357", "prediction": "all x y.((Seismometer(x) & Strength(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_358", "prediction": "all x.(Earthquake(x) -> (Strength(x) | ShakingAmount(x)))", "score": 0}
{"id": "eqasc_validation_359", "prediction": "all x y.((Seismometer(x) & Earthquake(y)) -> MeasuresShakingAmount(x,y))", "score": 0}
{"id": "eqasc_validation_360", "prediction": "all x.(Seismograph(x) -> (RecordsEarthquakeWaves(x) & -RecordsEarthquakeWaves(x)))", "score": 0}
{"id": "eqasc_validation_361", "prediction": "all x.(Seismograph(x) -> MeasuresStrength(x))", "score": 0}
{"id": "eqasc_validation_362", "prediction": "all x y.((Thermometer(x) & Temperature(y)) -> Measures(x,y))", "score": 2}
{"id": "eqasc_validation_363", "prediction": "all x.(Temperature(x) -> MeasuresHeat(x))", "score": 0}
{"id": "eqasc_validation_364", "prediction": "all x.(Thermometer(x) -> MeasuresHeat(x))", "score": 0}
{"id": "eqasc_validation_365", "prediction": "all x.(Fever(x) -> MeasuredUsingThermometer(x))", "score": 0}
{"id": "eqasc_validation_366", "prediction": "all x y.((Fever(x) & Thermometer(y)) -> CanBeMeasuredWith(x,y))", "score": 0}
{"id": "eqasc_validation_367", "prediction": "all x y.((Thermometer(x) & Heat(y)) -> MeasuresAmountOfHeat(x,y))", "score": 0}
{"id": "eqasc_validation_368", "prediction": "all x.(Heat(x) -> Temperature(x))", "score": 2}
{"id": "eqasc_validation_369", "prediction": "all x y.((Thermometer(x) & Heat(y)) -> Measures(x,y))", "score": 2}
{"id": "eqasc_validation_370", "prediction": "all x.((Weather(x) & Warm(x)) -> TemperatureRise(x))", "score": 0}
{"id": "eqasc_validation_371", "prediction": "all x.(Thermometer(x) -> MeasuresWarmWeather(x))", "score": 0}
{"id": "eqasc_validation_372", "prediction": "all x y.((Fever(x) & Thermometer(y)) -> DiagnosedWith(x,y))", "score": 0}
{"id": "eqasc_validation_373", "prediction": "all x.(Temperature(x) -> MeasuresHeat(x))", "score": 0}
{"id": "eqasc_validation_374", "prediction": "all x.(Thermometer(x) -> MeasuresHeat(x))", "score": 0}
{"id": "eqasc_validation_375", "prediction": "all x y.((Temperature(x) & TemperatureRise(x)) -> (Expansion(x,y) & RisesInThermometerTube(x,y)))", "score": 0}
{"id": "eqasc_validation_376", "prediction": "all x y.((Mercury(x) & Tube(y) & ExpandingAndRising(x,y)) -> MeasuresTemperature(x,y))", "score": 0}
{"id": "eqasc_validation_377", "prediction": "all x.((ObviousReplacement(x) & StandardMercuryThermometer(x)) -> AlcoholThermometer(x))", "score": 0}
{"id": "eqasc_validation_378", "prediction": "all x.((Device(x) & (Mercury(x) | Alcohol(x))) -> MeasuresTemperature(x))", "score": 0}
{"id": "eqasc_validation_379", "prediction": "all x y.((Vehicle(x) & Vehicle(y)) -> UsedForTravel(x,y))", "score": 1}
{"id": "eqasc_validation_380", "prediction": "all x y.((LKW(x) & Car(y)) -> (UsedForTravel(x,y) & UsedForTravel(x,y)))", "score": 0}
{"id": "eqasc_validation_381", "prediction": "all x.(VehicleEmissions(x) -> MajorCauseOfAirPollution(x))", "score": 0}
{"id": "eqasc_validation_382", "prediction": "all x.(Travels(x) -> CauseOfAirPollution(x))", "score": 0}
{"id": "eqasc_validation_383", "prediction": "all x.(Motorcycle(x) -> AdditionalVehicle(x))", "score": 0}
{"id": "eqasc_validation_384", "prediction": "all x.(Motorcycle(x) -> UsedForTravel(x))", "score": 0}
{"id": "eqasc_validation_385", "prediction": "all x y.((Truck(x) & Car(y)) -> (UsedForTravel(x,y) & UsedForTravel(x,y)))", "score": 1}
{"id": "eqasc_validation_386", "prediction": "all x.(Truck(x) -> UsedForTravel(x))", "score": 0}
{"id": "eqasc_validation_387", "prediction": "all x.(Car(x) -> UsedForTravel(x))", "score": 0}
{"id": "eqasc_validation_388", "prediction": "all x.((Car(x) | Truck(x)) -> UsedForTravel(x))", "score": 0}
{"id": "eqasc_validation_389", "prediction": "all x.(Airplane(x) -> (Vehicle(x) & LeavesGround(x) & FliesThroughAir(x)))", "score": 0}
{"id": "eqasc_validation_390", "prediction": "all x.(Airplane(x) -> TravelsHighAboveGround(x))", "score": 0}
{"id": "eqasc_validation_391", "prediction": "all x.(Travel(x) -> RequiresNavigation(x))", "score": 0}
{"id": "eqasc_validation_392", "prediction": "all x.((Vehicle(x) & InUse(x)) -> RequiresNavigation(x))", "score": 0}
{"id": "eqasc_validation_393", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_394", "prediction": "all x y.((Punch(x) & Rain(y) & DestroyedCrops(y)) -> RainSubject(x,y))", "score": 0}
{"id": "eqasc_validation_395", "prediction": "all x.((Weather(x) & Stormy(x)) -> ChanceOfDisruptedCrops(x))", "score": 0}
{"id": "eqasc_validation_396", "prediction": "all x.(SpringDay(x) -> Stormy(x))", "score": 0}
{"id": "eqasc_validation_397", "prediction": "all x.(SpringDay(x) -> CanSeeRainWeather(x))", "score": 0}
{"id": "eqasc_validation_398", "prediction": "all x.(LowPressure(x) -> (CloudyWeather(x) | StormyWeather(x)))", "score": 0}
{"id": "eqasc_validation_399", "prediction": "all x.(LowPressure(x) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_400", "prediction": "all x.(RapidWarming(x) -> (IncreasesGlobalStorminess(x) & CreatesPerfectConditionsForHurricane(x)))", "score": 0}
{"id": "eqasc_validation_401", "prediction": "all x.(Hurricane(x) -> CausesGreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_402", "prediction": "all x.(Rain(x) -> (WonderfulThing(x) & HelpsPlantsGrow(x)))", "score": 0}
{"id": "eqasc_validation_403", "prediction": "all x y.((StormyWeather(x) & Plant(y)) -> HelpsGrow(x,y))", "score": 0}
{"id": "eqasc_validation_404", "prediction": "all x.(Rain(x) -> Precipitation(x))", "score": 1}
{"id": "eqasc_validation_405", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterChanceOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_406", "prediction": "all x.((Unsettled(x) & StormyWeather(x) & FrequentRain(x)) -> Common(x))", "score": 0}
{"id": "eqasc_validation_407", "prediction": "all x.(Summer(x) -> BringsStorms(x))", "score": 0}
{"id": "eqasc_validation_408", "prediction": "all x.(Weather(x) -> AtmosphereState(x))", "score": 0}
{"id": "eqasc_validation_409", "prediction": "all x.((StatusOfAtmosphere(x) & Stormy(x)) -> GreaterChanceOfRain(x))", "score": 0}
{"id": "eqasc_validation_410", "prediction": "all x.(Rain(x) -> Precipitation(x))", "score": 0}
{"id": "eqasc_validation_411", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterChanceOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_412", "prediction": "all x y.((HeavyRain(x) & Plant(y)) -> AbsorbsLargeAmountOfWater(x,y))", "score": 0}
{"id": "eqasc_validation_413", "prediction": "all x.((Weather(x) & Stormy(x)) -> PlantsAbsorbWater(x))", "score": 0}
{"id": "eqasc_validation_414", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterChanceOfPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_415", "prediction": "(all x.(Rain(x) -> Good(x)) & all y.(Rain(y) -> DestructiveFlooding(y))))", "score": -1}
{"id": "eqasc_validation_416", "prediction": "all x y.((StormyWeather(x) & FloodingChance(y)) -> Increases(x,y))", "score": 0}
{"id": "eqasc_validation_417", "prediction": "all x.(Erosion(x) -> (LossOfSoil(x) & CausedByRain(x) & CausedByWind(x)))", "score": 0}
{"id": "eqasc_validation_418", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterChanceOfErosion(x))", "score": 0}
{"id": "eqasc_validation_419", "prediction": "all x.(Rain(x) -> (ReducesVisibility(x) & MakesPacewayDangerous(x)))", "score": 0}
{"id": "eqasc_validation_420", "prediction": "all x.((Weather(x) & Stormy(x)) -> GreaterChanceOfReducedVisibility(x))", "score": 0}
{"id": "eqasc_validation_421", "prediction": "all x y.((Protozoa(x) & HumanParasite(y)) -> MakesHumansSick(x,y))", "score": 0}
{"id": "eqasc_validation_422", "prediction": "all x.((IntestinalParasite(x) & Malaria(x)) -> Endemic(x))", "score": 0}
{"id": "eqasc_validation_423", "prediction": "all x y.((IntestinalProtozoa(x) & Human(y)) -> MakesSick(x,y))", "score": 0}
{"id": "eqasc_validation_424", "prediction": "all x.(IllnessCausingParasite(x) -> (Protozoa(x) & Cyclospora(x) & Toxoplasmagondii(x)))", "score": 0}
{"id": "eqasc_validation_425", "prediction": "all x.(ToxoplasmaGondii(x) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_426", "prediction": "all x.((Organism(x) & (Bacteria(x) | Viral(x) | Fungi(x) | Protozoa(x))) -> CausesInfectionInLung(x))", "score": 0}
{"id": "eqasc_validation_427", "prediction": "all x.((Organism(x) & CausesInfection(x)) -> MakesHumansSick(x))", "score": 0}
{"id": "eqasc_validation_428", "prediction": "all x.(Protozoa(x) -> (ToxoplasmagondiiMuscles(x) & NematodeTrichinellaSpiralis(x) & SarcocystisSp(x)))", "score": 0}
{"id": "eqasc_validation_429", "prediction": "all x.(Sarcocystis(x) -> (ParasitesHumans(x) & MakesSick(x)))", "score": 0}
{"id": "eqasc_validation_430", "prediction": "all x.(Exhibit(x) -> (OneCelledAnimal(x) & Protozoa(x)))", "score": 0}
{"id": "eqasc_validation_431", "prediction": "all x y.((OneCelledAnimal(x) & Human(y) & Parasite(y)) -> MakesSick(x,y))", "score": 0}
{"id": "eqasc_validation_432", "prediction": "all x.(MalariaParasite(x) -> TransmittedByMouses(x))", "score": 0}
{"id": "eqasc_validation_433", "prediction": "all x.(Malaria(x) -> (Protozoa(x) & MakesHumansSick(x)))", "score": 0}
{"id": "eqasc_validation_434", "prediction": "all x y.((NaturalMagnetism(x) & Compass(y)) -> PointsNorth(x,y))", "score": 0}
{"id": "eqasc_validation_435", "prediction": "all x.((Magnet(x) | Compasse(x) | Earth(x)) -> HasMagneticEnergy(x))", "score": 0}
{"id": "eqasc_validation_436", "prediction": "all x y.((MagneticEnergy(x) & North(y)) -> UsedToFind(x,y))", "score": 0}
{"id": "eqasc_validation_437", "prediction": "all x y.((SurveyorsCompass(x) & SurveyorsCompass(y)) -> Used(x))", "score": 0}
{"id": "eqasc_validation_438", "prediction": "all x y.((NaturalMagnetism(x) & SurveyingTool(y)) -> PointsNorth(x,y))", "score": 0}
{"id": "eqasc_validation_439", "prediction": "all x y.((Student(x) & Student(y)) -> (MagnetizesNeedles(x,y) & LocatesNorth(y,x)))", "score": 0}
{"id": "eqasc_validation_440", "prediction": "all x.((Compass(x) & PointsNorth(x)) -> FindDirections(x))", "score": 0}
{"id": "eqasc_validation_441", "prediction": "all x.((Compass(x) & Ordinary(x)) -> AlignsToNorthDirection(x))", "score": 0}
{"id": "eqasc_validation_442", "prediction": "all x.(Compasse(x) -> UsesMagnetism(x))", "score": 0}
{"id": "eqasc_validation_443", "prediction": "all x.(Teen(x) -> (LearnsHowToNavigateTerrain(x) & UsesCompass(x)))", "score": 0}
{"id": "eqasc_validation_444", "prediction": "all x y.((NaturalMagnetism(x) & Navigation(y)) -> PointsNorthForNavigation(x,y))", "score": 0}
{"id": "eqasc_validation_445", "prediction": "all x.(Compass(x) -> PointsToMagneticPoles(x))", "score": 0}
{"id": "eqasc_validation_446", "prediction": "all x y.((Pole(x) & Compass(y)) -> PointsWith(x,y))", "score": 0}
{"id": "eqasc_validation_447", "prediction": "all x y.((NaturalMagnetism(x) & MagneticPole(y)) -> PointsTo(x,y))", "score": 0}
{"id": "eqasc_validation_448", "prediction": "all x.(NaturalMagnet(x) -> (PermanentMagnet(x) & -LosesMagnetism(x)))", "score": 0}
{"id": "eqasc_validation_449", "prediction": "all x.(PermanentMagnet(x) -> (UsedForCompasses(x) & PointsNorth(x)))", "score": 0}
{"id": "eqasc_validation_450", "prediction": "all x.((NonmetalElement(x) & FarFarLiderInNumber(x)) -> -(NonmetalElement(x) & FarFarLiderInNumber(x)))", "score": 0}
{"id": "eqasc_validation_451", "prediction": "all x.(Titanium(x) -> (LuxuriousWhiteMetallicElement(x) & MetallicElement(x)))", "score": 0}
{"id": "eqasc_validation_452", "prediction": "all x.(Titanium(x) -> -NonMetal(x))", "score": 0}
{"id": "eqasc_validation_453", "prediction": "all x.(Nonmetal(x) -> (ElementsInUpperRightHandCrown(x) & ElementsInUpperRightHandCrown(x)))", "score": 0}
{"id": "eqasc_validation_454", "prediction": "all x.(PeriodicTable(x) -> FarFarFarFarFarFarFarFarFarElements(x))", "score": 0}
{"id": "eqasc_validation_455", "prediction": "all x.(Element(x) -> ComposedOfAtoms(x))", "score": 0}
{"id": "eqasc_validation_456", "prediction": "all x.((NonmetalAtomicMaterial(x) & FarFarLiderInNumber(x)) -> -(NonmetalAtomicMaterial(x) & FarFarLiderInNumber(x)))", "score": 0}
{"id": "eqasc_validation_457", "prediction": "all x.(Element(x) -> PeriodicTable(x))", "score": 0}
{"id": "eqasc_validation_458", "prediction": "all x.((NonMetalPeriodicTableGroup(x) & FarLessInNumber(x)) -> FarLessInNumber(x))", "score": 0}
{"id": "eqasc_validation_459", "prediction": "all x.(Element(x) -> (Metal(x) | Nonmetal(x) | Metalloid(x)))", "score": 0}
{"id": "eqasc_validation_460", "prediction": "all x.((Element(x) & -Metal(x) & -Metalloid(x)) -> FarLergerInNumber(x))", "score": 0}
{"id": "eqasc_validation_461", "prediction": "all x.((Nonmetal(x) & PeriodicTable(x)) -> ThereAre17(x,nonmetal))", "score": 0}
{"id": "eqasc_validation_462", "prediction": "all x.((Element(x) & ToRightOfSemiconductors(x)) -> Nonmetals(x))", "score": 0}
{"id": "eqasc_validation_463", "prediction": "all x.((Element(x) & RightOfSemiconductors(x)) -> FarLergerInNumber(x))", "score": 0}
{"id": "eqasc_validation_464", "prediction": "all x.(BloodType(x) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_465", "prediction": "all x.((SeriousEmergency(x) & Team(x)) -> KnowsCompatibleBloodTypes(x))", "score": 0}
{"id": "eqasc_validation_466", "prediction": "all x.((CompatibleBlood(x) & Knows(x)) -> ImportantForMedicalRates(x))", "score": 0}
{"id": "eqasc_validation_467", "prediction": "all x y.((MedicalTreatment(x) & MedicalPersonnel(y)) -> Oversees(x,y))", "score": 0}
{"id": "eqasc_validation_468", "prediction": "all x.(HospitalPersonnel(x) -> (WantToKnowBloodType(x) | WantToKnowBloodType(x)))", "score": 0}
{"id": "eqasc_validation_469", "prediction": "all x.(Cirrhosis(x) -> Medical(x))", "score": 0}
{"id": "eqasc_validation_470", "prediction": "exists x.(BloodType(x) & ImportantForTreatments(x))", "score": 0}
{"id": "eqasc_validation_471", "prediction": "all x.((BloodType(x) & O(x) | A(x) | B(x) | AB(x))) -> ImportantRoleInPatientCare(x))", "score": -1}
{"id": "eqasc_validation_472", "prediction": "all x.((B(x) | AB(x)) -> ImportantForMedicalRates(x))", "score": 0}
{"id": "eqasc_validation_473", "prediction": "all x.(BloodType(x) -> (DeterminedByEarnedAntigens(x) & DeterminedByAntibodies(x)))", "score": 0}
{"id": "eqasc_validation_474", "prediction": "all x.((EarnedAntigens(x) & Antibodies(x)) -> ImportantForMedicalCauses(x))", "score": 0}
{"id": "eqasc_validation_475", "prediction": "all x.(MedicalIntervention(x) -> (GoesBeyondPills(x) & GoesBeyondBandages(x) & GoesBeyondSurgery(x)))", "score": 0}
{"id": "eqasc_validation_476", "prediction": "all x.(BloodType(x) -> ImportantToKnow(x))", "score": 0}
{"id": "eqasc_validation_477", "prediction": "all x.(Transplant(x) -> MedicalMajority(x))", "score": 0}
{"id": "eqasc_validation_478", "prediction": "all x.(Transplant(x) -> ImportantBloodType(x))", "score": 0}
{"id": "eqasc_validation_479", "prediction": "all x y.((Doctor(x) & Doctor(y)) -> Consults(x,y))", "score": 0}
{"id": "eqasc_validation_480", "prediction": "all x.((BloodType(x) & ImportantForDoctor(x)) -> ImportantForDoctor(x))", "score": 0}
{"id": "eqasc_validation_481", "prediction": "all x.(Scientist(x) -> (KnowsLittleAboutArchaea(x) & -KnowsLittleAboutArchaea(x)))", "score": 0}
{"id": "eqasc_validation_482", "prediction": "all x.(Scientist(x) -> DosResearchEveryYear(x))", "score": 0}
{"id": "eqasc_validation_483", "prediction": "all x.((DoesResearch(x) & KnowsLittleAboutArchaea(x)) -> -(DoesResearch(x) & KnowsLittleAboutArchaea(x)))", "score": 0}
{"id": "eqasc_validation_484", "prediction": "all x.(SkinColor(x) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_485", "prediction": "exists x.(Treatment(x) & Erased(x))", "score": 0}
{"id": "eqasc_validation_486", "prediction": "all x.(SkinColor(x) -> Erased(x))", "score": 0}
{"id": "eqasc_validation_487", "prediction": "all x.(PolygenicTreatment(x) -> InteractionOfGenes(x))", "score": 0}
{"id": "eqasc_validation_488", "prediction": "all x.(SkinColor(x) -> InteractionOfGenes(x))", "score": 0}
{"id": "eqasc_validation_489", "prediction": "all x.(SkinColor(x) -> (ControlledByGenes(x) & ControlledByGenes(x)))", "score": 0}
{"id": "eqasc_validation_490", "prediction": "all x.((Trait(x) & GovernedByTwoOrMoreSetsOfAlleles(x)) -> PolygenicInheritance(x))", "score": 0}
{"id": "eqasc_validation_491", "prediction": "all x.(SkinColor(x) -> exists y.(SetOfAlleles(y) & Regime(x,y)))", "score": 0}
{"id": "eqasc_validation_492", "prediction": "all x.(SkinColor(x) -> ErasedFromGenes(x))", "score": 0}
{"id": "eqasc_validation_493", "prediction": "all x.(Melanin(x) -> ResponsibleForSkinColor(x))", "score": 0}
{"id": "eqasc_validation_494", "prediction": "all x.(SkinColor(x) -> (Grey(x) | Brown(x)))", "score": 0}
{"id": "eqasc_validation_495", "prediction": "all x.((White(x) | Brown(x)) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_496", "prediction": "all x.(Chapter5(x) -> (PolygenicInheritance(x) & Intelligence(x)))", "score": 0}
{"id": "eqasc_validation_497", "prediction": "all x.(Intelligence(x) -> (HasTrait(x) & HasTrait(x)))", "score": 0}
{"id": "eqasc_validation_498", "prediction": "all x.((MelaninPigmentInSkin(x) & PolygenicTrait(x)) -> PolygenicTrait(x))", "score": 0}
{"id": "eqasc_validation_499", "prediction": "all x.(Pregnancy(x) -> (CarriesOffspring(x) & FromFertilizationToBirth(x)))", "score": 0}
{"id": "eqasc_validation_500", "prediction": "all x.(Pregnancy(x) -> FertileEgg(x))", "score": 0}
{"id": "eqasc_validation_501", "prediction": "all x.((FertilizedEgg(x) & CarriedUntilBirth(x)) -> CanCreateOffspring(x))", "score": 0}
{"id": "eqasc_validation_502", "prediction": "all x.(Birth(x) -> MainComponentOfPopulationGrowth(x))", "score": 0}
{"id": "eqasc_validation_503", "prediction": "all x.(PregnancyLeadsToPopulationGrowth(x) -> PopulationGrowth(x))", "score": 0}
{"id": "eqasc_validation_504", "prediction": "all x.(Mother(x) -> (ChoosesSex(x) & LeadsToPregnancy(x)))", "score": 0}
{"id": "eqasc_validation_505", "prediction": "all x y z.((Mother(x) & Offspring(y) & Fertilization(z) & CarryFromToBirth(x,y,z)) -> CarryFromFertilizationToBirth(x,y,z))", "score": 0}
{"id": "eqasc_validation_506", "prediction": "all x.(HumanEmbryonicDevelopment(x) -> FollowsHumanDevelopment(x))", "score": 0}
{"id": "eqasc_validation_507", "prediction": "all x.(Pregnancy(x) -> EmbryonicDevelopment(x))", "score": 0}
{"id": "eqasc_validation_508", "prediction": "all x.(Offspring(x) -> (((ProceedsIn(x) & (ComesIntoInexistenceAsResultOfPregnancy(x))) | ComesIntoInexistenceAsResultOfPregnancy(x))))", "score": 0}
{"id": "eqasc_validation_509", "prediction": "all x.((PregnancyResultsFromFertilization(x)) -> Fertilization(x))", "score": 0}
{"id": "eqasc_validation_510", "prediction": "all x.(Infertility(x) -> (InabilityToCarry(x,pregnancy) & FullTerm(x)))", "score": 0}
{"id": "eqasc_validation_511", "prediction": "all x y.((Offspring(x) & Fertilization(y) & Birth(y)) -> CarryingToFullTerm(x,y))", "score": 0}
{"id": "eqasc_validation_512", "prediction": "all x.(Pregnancy(x) -> Gestation(x))", "score": 0}
{"id": "eqasc_validation_513", "prediction": "all x.(Gestation(x) -> (CarriesOffspringFromFertilization(x) & Birth(x)))", "score": 0}
{"id": "eqasc_validation_514", "prediction": "all x.((Pregnancies(x) & HealthyBaby(x)) -> HappyEnd(x))", "score": 0}
{"id": "eqasc_validation_515", "prediction": "all x y.((Offspring(x) & Fertilization(y) & BirthResult(x,y)) -> CarryingFromToBirth(x,y))", "score": 0}
{"id": "eqasc_validation_516", "prediction": "all x.(Elephant(x) -> LastsAbout22Months(x))", "score": 0}
{"id": "eqasc_validation_517", "prediction": "all x.(Elephant(x) -> (CarriesOffspringFromFertilization(x) & Birth(x) & 22MonthsAfter(x)))", "score": 0}
{"id": "eqasc_validation_518", "prediction": "all x y.((Bolt(x) & Glacier(y)) -> FormedByMelting(x,y))", "score": 0}
{"id": "eqasc_validation_519", "prediction": "all x.(Crag(x) -> Boulder(x))", "score": 0}
{"id": "eqasc_validation_520", "prediction": "all x.(Crag(x) -> FormedByMeltingGlaciers(x))", "score": 0}
{"id": "eqasc_validation_521", "prediction": "all x y.((AlpineGlacier(x) & Mountain(y)) -> FormsIn(x,y))", "score": 0}
{"id": "eqasc_validation_522", "prediction": "all x.(Boulder(x) -> FormedInMountains(x))", "score": 0}
{"id": "eqasc_validation_523", "prediction": "all x.(Erratic(x) -> (Bolt(x) & DepositedByGlaciers(x) & PartOfMoraines(x)))", "score": 0}
{"id": "eqasc_validation_524", "prediction": "all x y.((Eratoid(x) & Glacier(y)) -> FormedByMelting(x,y))", "score": 0}
{"id": "eqasc_validation_525", "prediction": "all x.(Glacier(x) -> (MadeOfSnow(x) & MadeOfIce(x) & MadeOfRock(x)))", "score": 0}
{"id": "eqasc_validation_526", "prediction": "all x.(Bolt(x) -> (FormedBySnow(x) | FormedByIce(x) | FormedByRockMelting(x)))", "score": 0}
{"id": "eqasc_validation_527", "prediction": "all x.(Pelycosaur(x) -> GivesRiseToTherapsids(x))", "score": 0}
{"id": "eqasc_validation_528", "prediction": "all x.(Pelycosaur(x) -> ImportantLineagePreservedInFossilRecord(x))", "score": 0}
{"id": "eqasc_validation_529", "prediction": "all x.(FossilRecord(x) -> ShowsLineageOfTherapsids(x))", "score": 0}
{"id": "eqasc_validation_530", "prediction": "all x.((Pelycosaur(x) | Therapsid(x)) -> Theropsid(x))", "score": 0}
{"id": "eqasc_validation_531", "prediction": "all x.(Therapsid(x) -> Animal(x))", "score": 0}
{"id": "eqasc_validation_532", "prediction": "Tetraceratops (Tetraceratops) - Thermosexual(t))", "score": -1}
{"id": "eqasc_validation_533", "prediction": "all x.(Tetraceratop(x) -> Pelycosaur(x))", "score": 0}
{"id": "eqasc_validation_534", "prediction": "all x.(Therapsid(x) -> (Reptile(x) & AscendedToMammals(x)))", "score": 0}
{"id": "eqasc_validation_535", "prediction": "all x y.((Pelycosaur(x) & Reptile(y)) -> (GaveRiver(x,y) & AncientToMammals(y)))", "score": 0}
{"id": "eqasc_validation_536", "prediction": "exists x.(Pelycosaur(x) & Reptile(x) & AncientToMammals(x))", "score": 0}
{"id": "eqasc_validation_537", "prediction": "all x y.((Wolf(x) & Wolf(y)) -> HowlingWarns(x,y))", "score": 0}
{"id": "eqasc_validation_538", "prediction": "all x y.((Beagle(x) & PitifulSound(y)) -> Howls(x,y))", "score": 0}
{"id": "eqasc_validation_539", "prediction": "all x y.((Wolf(x) & Wolf(y)) -> UsesSoundToWarn(x,y))", "score": 0}
{"id": "eqasc_validation_540", "prediction": "all x.(Indris(x) -> CommunicatesWithMelancholyAndDistinctiveHowls(x))", "score": 0}
{"id": "eqasc_validation_541", "prediction": "all x.(Wolf(x) -> UsesDistinctFormsOfCommunication(x))", "score": 0}
{"id": "eqasc_validation_542", "prediction": "all x y z.((Coyote(x) & Howling(y) & Area(z)) -> (JoinsIn(x,y) & ReverberatesWithNoise(z,x)))", "score": 0}
{"id": "eqasc_validation_543", "prediction": "all x y.((ReverberatingNoise(x) & Wolf(y)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_544", "prediction": "all x.(GrayWolf(x) -> LargestMemberOfCanineFamily(x))", "score": 0}
{"id": "eqasc_validation_545", "prediction": "all x y.((Canine(x) & Howling(y)) -> WarnsOthers(x,y))", "score": 0}
{"id": "eqasc_validation_546", "prediction": "all x.(Warning(x) & Warning(x) & GoodRight(x))", "score": 0}
{"id": "eqasc_validation_547", "prediction": "all x y.((Howling(x) & Wolf(y)) -> UsedToConstrain(x,y))", "score": 0}
{"id": "eqasc_validation_548", "prediction": "all x.(CanisLupus(x) -> GreyWolf(x))", "score": 0}
{"id": "eqasc_validation_549", "prediction": "all x y.((Howling(x) & Member(y) & CanisLupus(y)) -> Warns(x,y))", "score": 0}
{"id": "eqasc_validation_550", "prediction": "all x y.((Wolf(x) & Howl(y)) -> CommunicatesUsingPitches(x,y))", "score": 0}
{"id": "eqasc_validation_551", "prediction": "all x y.((Wolf(x) & Wolf(y)) -> WarnsByUsingDifferentPitches(x,y))", "score": 0}
{"id": "eqasc_validation_552", "prediction": "all x.(CanisLupusHowl(x) -> CanisLupusHowl(x))", "score": 0}
{"id": "eqasc_validation_553", "prediction": "all x.(Wolf(x) -> (DistinctFromWildCanines(x) & Size(x)))", "score": 0}
{"id": "eqasc_validation_554", "prediction": "all x.(WildCanine(x) -> UsesHowlingToWarn(x))", "score": 0}
{"id": "eqasc_validation_555", "prediction": "Warning Warning means danger.", "score": -1}
{"id": "eqasc_validation_556", "prediction": "all x y.((Wolf(x) & Danger(y)) -> Howls(x,y))", "score": 0}
{"id": "eqasc_validation_557", "prediction": "all x.(Wolf(x) -> Social(x))", "score": 0}
{"id": "eqasc_validation_558", "prediction": "all x y.((Howling(x) & SocialAnimal(y)) -> UsedToWarn(x,y))", "score": 0}
{"id": "eqasc_validation_559", "prediction": "all x.(Sandpaper(x) -> SmoothWoodenObjects(x))", "score": 0}
{"id": "eqasc_validation_560", "prediction": "all x.(Dirt(x) -> (Abrasive(x) & Sandpaper(x)))", "score": 0}
{"id": "eqasc_validation_561", "prediction": "all x.(Abrasive(x) -> SmoothWoodenObjects(x))", "score": 0}
{"id": "eqasc_validation_562", "prediction": "all x.(PavementSmoothness(x) -> LackOfRoughness(x))", "score": 0}
{"id": "eqasc_validation_563", "prediction": "all x.(Sandpaper(x) -> RemovesRoughness(x))", "score": 0}
{"id": "eqasc_validation_564", "prediction": "all x.((PicnicTable(x) & CasualLook(x)) -> UsesWooden(x))", "score": 0}
{"id": "eqasc_validation_565", "prediction": "all x.(Sandpaper(x) -> SmoothTables(x))", "score": 0}
{"id": "eqasc_validation_566", "prediction": "all x.((Paint(x) & Sandpaper(x)) -> Removes(x))", "score": 0}
{"id": "eqasc_validation_567", "prediction": "all x.(Sandpaper(x) -> RemovesPaint(x))", "score": 0}
{"id": "eqasc_validation_568", "prediction": "all x.((Object(x) & WoodenTable(x)) -> MadeUpOfMolecules(x))", "score": 0}
{"id": "eqasc_validation_569", "prediction": "all x y.((SandPaper(x) & Table(y)) -> Smoothed(x,y))", "score": 0}
{"id": "eqasc_validation_570", "prediction": "all x.(ScrapWood(x) -> UsedForBuyWoodens(x))", "score": 0}
{"id": "eqasc_validation_571", "prediction": "all x.(Sandpaper(x) -> SmoothsWood(x))", "score": 0}
{"id": "eqasc_validation_572", "prediction": "all x.(DrumStick(x) -> WoodenCane(x))", "score": 0}
{"id": "eqasc_validation_573", "prediction": "all x y.((Sandpaper(x) & DrumStick(y)) -> Smooth(x,y))", "score": 0}
{"id": "eqasc_validation_574", "prediction": "all x.(CoarseGritSandpaper(x) -> WorksWell(x))", "score": 0}
{"id": "eqasc_validation_575", "prediction": "all x y.((Grain(x) & WoodenObject(y)) -> Smooth(x,y))", "score": 0}
{"id": "eqasc_validation_576", "prediction": "all x y.((Child(x) & TinyWoodenLog(y)) -> (MakesLogCabins(x,y) & MakesStructures(x,y)))", "score": 0}
{"id": "eqasc_validation_577", "prediction": "all x.(Sandpaper(x) -> SmoothLogCabins(x))", "score": 0}
{"id": "eqasc_validation_578", "prediction": "all x.((WoodenObject(x) & Decoupage(x)) -> UsedIn(x,y))", "score": 0}
{"id": "eqasc_validation_579", "prediction": "all x.(Sandpaper(x) -> SmoothDecoupage(x))", "score": 0}
{"id": "eqasc_validation_580", "prediction": "all x y z.((Spacecraft(x) & Spacecraft(y) & Propulsion(z)) -> UsedForFlying(z,x))", "score": 0}
{"id": "eqasc_validation_581", "prediction": "all x.(Propulsion(x) -> (PushForward(x) | DriveForward(x)))", "score": 0}
{"id": "eqasc_validation_582", "prediction": "all x y.((PushForward(x) & Spacecraft(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_583", "prediction": "all x.((EarthOrbitingSpacecraft(x) & Satellite(x)) -> Orbiting(x))", "score": 0}
{"id": "eqasc_validation_584", "prediction": "all x.(Propulsion(x) -> UsedForFlyingSatellites(x))", "score": 0}
{"id": "eqasc_validation_585", "prediction": "(all x.(Thrust(x) -> GeneratesByPropulsionSystem(x)))", "score": 0}
{"id": "eqasc_validation_586", "prediction": "all x.(ThrustingEnergy(x) -> UsedForFlying(x))", "score": 0}
{"id": "eqasc_validation_587", "prediction": "all x.((Spacecraft(x) & Apollo13(x)) -> Launched(x))", "score": 0}
{"id": "eqasc_validation_588", "prediction": "all x y.((Propulsion(x) & Apollo13(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_589", "prediction": "all x.(Raket(x) -> OperatesOnBasicPropulsionPrinciples(x))", "score": 0}
{"id": "eqasc_validation_590", "prediction": "all x.(Spacecraft(x) -> CanFlyWithRockets(x))", "score": 0}
{"id": "eqasc_validation_591", "prediction": "all x.((Apollo12(x) & TakesOff(x)) -> HitByLightning(x))", "score": 0}
{"id": "eqasc_validation_592", "prediction": "all x y.((Propulsion(x) & Apollo12(y)) -> UsedForFlying(x,y))", "score": 0}
{"id": "eqasc_validation_593", "prediction": "all x.(Propulsion(x) -> UsedForFlyingApollo13(x))", "score": 0}
{"id": "eqasc_validation_594", "prediction": "all x.(Butter(x) -> (Fat(x) & SolidAtRoomTemperature(x)))", "score": 0}
{"id": "eqasc_validation_595", "prediction": "exists x.(Fat(x) & MoreLikelyToCauseHeartDisease(x))", "score": 0}
{"id": "eqasc_validation_596", "prediction": "all x.(Butter(x) -> HeartDisease(x))", "score": 0}
{"id": "eqasc_validation_597", "prediction": "all x y.((Egg(x) | Butter(x) | Margarine(x)) -> KeepsInCooler(x,y))", "score": 0}
{"id": "eqasc_validation_598", "prediction": "all x.((Fat(x) & SolidAtRoomTemperature(x)) -> CanBeKeptInCooler(x))", "score": 0}
{"id": "eqasc_validation_599", "prediction": "all x.(Butter(x) -> ContainsSaturatedFats(x))", "score": 0}
{"id": "eqasc_validation_600", "prediction": "all x.(SaturatedFat(x) -> SolidAtRoomTemperature(x))", "score": 0}
{"id": "eqasc_validation_601", "prediction": "all x.(SaturatedFat(x) -> SolidAtRoomTemperature(x))", "score": 0}
{"id": "eqasc_validation_602", "prediction": "all x.(Butter(x) -> (SaturatedFat(x) & SaturatedFat(x)))", "score": 0}
{"id": "eqasc_validation_603", "prediction": "all x.((SaturatedFat(x) & Butter(y) & AmbientTemperature(z)) -> MakesSolid(x,y,z))", "score": 0}
{"id": "eqasc_validation_604", "prediction": "all x.((RoomTemperature(x) & Temperature(x,70) & Temperature(x,75)) -> AcceptableToMostSpecies(x))", "score": 0}
{"id": "eqasc_validation_605", "prediction": "all x.(Butter(x) -> (Fat(x) & SolidAt7075Federnheit(x)))", "score": 0}
{"id": "eqasc_validation_606", "prediction": "all x.((RoomTemperature(x) & (40Federnheit(x) | 80Federnheit(x) | 5Federnitia(x) | 27Celsius(x))) -> BestForStorage(x))", "score": 0}
{"id": "eqasc_validation_607", "prediction": "all x.(Butter(x) -> (Fat(x) & SolidBetween(x,5) & SolidBetween(x,27)))", "score": 0}
{"id": "eqasc_validation_608", "prediction": "all x.((Butter(x) & SolidAtRoomTemperature(x)) -> Saturated(x))", "score": 0}
{"id": "eqasc_validation_609", "prediction": "all x.(Solid(x) -> (ComposedOfNearlyPackedMolecules(x)))", "score": 0}
{"id": "eqasc_validation_610", "prediction": "all x.(Butter(x) -> (Fat(x) & ComposedOfNearlyPackedMolecules(x) & RoomTemperature(x)))", "score": 0}
{"id": "eqasc_validation_611", "prediction": "all x y.((Bile(x) & Food(y) & EntersFromHighlyAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_612", "prediction": "all x y.((Gallbladder(x) & Meal(y)) -> ReleasesBile(x,y))", "score": 0}
{"id": "eqasc_validation_613", "prediction": "all x.(Gallbladder(x) -> ReducesAcidityOfFood(x))", "score": 0}
{"id": "eqasc_validation_614", "prediction": "all x.((Fluid(x) & MadeByLiver(x)) -> StoredInGallbladder(x))", "score": 0}
{"id": "eqasc_validation_615", "prediction": "all x y.((Gallbladder(x) & Food(y)) -> StoresFluid(x,y))", "score": 0}
{"id": "eqasc_validation_616", "prediction": "all x.(Bile(x) -> ExitsGalbladderByCommonBileDuct(x))", "score": 0}
{"id": "eqasc_validation_617", "prediction": "all x y.((Gallbladder(x) & Food(y) & EntersFromHighlyAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_618", "prediction": "all x.((Bile(x) & ProducedByLiver(x)) -> (HelpsFatDigestion(x) & HelpsAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_619", "prediction": "all x y.((Liver(x) & Food(y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_620", "prediction": "all x.(BileAcid(x) -> UsedByBodyToDigestFats(x))", "score": 0}
{"id": "eqasc_validation_621", "prediction": "all x.(StomachAcidity(x) -> DigestsFats(x))", "score": 0}
{"id": "eqasc_validation_622", "prediction": "all x.(Bile(x) -> (SynthesizedByLiver(x) & ContainsHCO3Salts(x) & ContainsBilePigments(x)))", "score": 0}
{"id": "eqasc_validation_623", "prediction": "all x y.((Liver(x) & Food(y) & EntersFromHighlyAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_624", "prediction": "all x y.((BileAcid(x) & Food(y)) -> PoursIntoStomach(x,y))", "score": 0}
{"id": "eqasc_validation_625", "prediction": "all x.(Bile(x) -> (ReducesAcidity(x) & HelpsAbsorbFats(x)))", "score": 0}
{"id": "eqasc_validation_626", "prediction": "all x y.((Liver(x) & Food(y) & EntersFromHighlyAcidStomach(x,y)) -> ReducesAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_627", "prediction": "all x.(Bile(x) -> AbsorbsFats(x))", "score": 0}
{"id": "eqasc_validation_628", "prediction": "all x.(Bile(x) -> (Liver(x) & ContainsBileSalts(x) & ContainsOtherOrganicSubstances(x) & -ContainsEnzymes(x)))", "score": 0}
{"id": "eqasc_validation_629", "prediction": "all x y.((Liver(x) & Food(y) & EntersFromAcidStomach(x,y)) -> HelpsReduceAcidity(x,y))", "score": 0}
{"id": "eqasc_validation_630", "prediction": "all x.(Hormone(x) -> RegulatesByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_631", "prediction": "all x.(Hormone(x) -> ChemicalMessenger(x))", "score": 0}
{"id": "eqasc_validation_632", "prediction": "all x.(ChemicalMessenger(x) -> RegulatedByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_633", "prediction": "all x.(HormonalProduction(x) -> RegulatesByEnzymes(x))", "score": 0}
{"id": "eqasc_validation_634", "prediction": "all x.(Enzyme(x) -> ControlsHormones(x))", "score": 0}
{"id": "eqasc_validation_635", "prediction": "all x.(Hormone(x) -> ChemicalMessenger(x))", "score": 0}
{"id": "eqasc_validation_636", "prediction": "all x.(ChemicalMessenger(x) -> RegulatedByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_637", "prediction": "all x y.((ChemicalMessenger(x) & Body(y)) -> RegulatesByFeedbackMechanisms(x,y))", "score": 0}
{"id": "eqasc_validation_638", "prediction": "all x.(Hormone(x) -> HelpsBodyManageStress(x))", "score": 0}
{"id": "eqasc_validation_639", "prediction": "all x y.((Body(x) & Body(y)) -> ManagesStress(x,y))", "score": 0}
{"id": "eqasc_validation_640", "prediction": "all x.(FemaleHormone(x) -> Estrogen(x))", "score": 0}
{"id": "eqasc_validation_641", "prediction": "all x.(Estrogen(x) -> RegulatesByFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_642", "prediction": "all x.(FeedbackMechanism(x) -> ControlsIncertitude(x))", "score": 0}
{"id": "eqasc_validation_643", "prediction": "all x.(Hormone(x) -> (RegulatedByControllingIncertitude(x) & ControlsIncertitude(x)))", "score": 0}
{"id": "eqasc_validation_644", "prediction": "all x.(Hormone(x) -> RegulatesPancreaticSections(x))", "score": 0}
{"id": "eqasc_validation_645", "prediction": "all x y.((FeedbackMechanism(x) & PancreaticSectiions(y)) -> Regulates(x,y))", "score": 0}
{"id": "eqasc_validation_646", "prediction": "all x.(Homeostasis(x) -> InvolvesNegativeFeedbackMechanisms(x))", "score": 0}
{"id": "eqasc_validation_647", "prediction": "all x.(Hormone(x) -> RegulatesByHomeostasis(x))", "score": 0}
{"id": "eqasc_validation_648", "prediction": "all x.((HydrogenolaryRegulation(x) & FeedbackLoops(x)) -> (MaintainsBalance(x) & MaintainsHomeostasis(x)))", "score": 0}
{"id": "eqasc_validation_649", "prediction": "all x.(Hormone(x) -> MaintainsBalanceWithFeedbackLoops(x))", "score": 0}
{"id": "eqasc_validation_650", "prediction": "all x.(AbsorptionOfNutrients(x) -> OccursInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_651", "prediction": "all x.(Nutrient(x) -> (NeedsForGrowth(x) & InLivingPlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_validation_652", "prediction": "all x y.((SmallIntestine(x) & Human(y)) -> NeededForGrowthAndLive(x,y))", "score": 0}
{"id": "eqasc_validation_653", "prediction": "all x.(SmallIntestine(x) -> TubularOrgan(x))", "score": 0}
{"id": "eqasc_validation_654", "prediction": "all x y.((AbsorptionOfNutrients(x) & TubularOrgan(y)) -> OccursIn(x,y))", "score": 0}
{"id": "eqasc_validation_655", "prediction": "all x.(GastrointestinalGIDisfunction(x) -> InhibitsMgAbsorptionFromSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_656", "prediction": "all x.(MagnesiumAbsorption(x) -> OccursInGITract(x))", "score": 0}
{"id": "eqasc_validation_657", "prediction": "all x.(Diarrhea(x) -> ReducesAbsorptionOfNutrients(x))", "score": 0}
{"id": "eqasc_validation_658", "prediction": "all x.(Diarrhea(x) -> (ReducesFuntcion(x) & OccursInSmallintestine(x)))", "score": 0}
{"id": "eqasc_validation_659", "prediction": "all x.(Absorption(x) -> TakesPlaceInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_660", "prediction": "all x y.((Nutrients(x) & SmallIntestine(y)) -> AbsorbedIn(x,y))", "score": 0}
{"id": "eqasc_validation_661", "prediction": "all x.(Food(x) -> BestNutrientSource(x))", "score": 0}
{"id": "eqasc_validation_662", "prediction": "all x.(SmallIntestine(x) -> FoodAbsorptionOfPlace(x))", "score": 0}
{"id": "eqasc_validation_663", "prediction": "all x.(Food(x) -> ContainsSeveralNutrients(x))", "score": 0}
{"id": "eqasc_validation_664", "prediction": "all x y.((AbsorptionOfFood(x) & SmallIntestine(y)) -> OccursInSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_665", "prediction": "all x.(Drug(x) -> (InhibitsNutrientAbsorption(x) | DepletesNutrients(x)))", "score": 0}
{"id": "eqasc_validation_666", "prediction": "all x.(Drug(x) -> InhibitsSmallIntestineActions(x))", "score": 0}
{"id": "eqasc_validation_667", "prediction": "all x.((Food(x) & Mineral(x)) -> Nutrient(x))", "score": 0}
{"id": "eqasc_validation_668", "prediction": "all x.(MineralAbsorption(x) -> OccursInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_669", "prediction": "all x.((Fat(x) & Protein(x)) -> Nutrient(x))", "score": 0}
{"id": "eqasc_validation_670", "prediction": "all x.(AbsorptionOfFatAndProtein(x) -> OccursInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_671", "prediction": "all x y.((Ssperm(x) & Vagina(y)) -> DepositedIn(x,y))", "score": 1}
{"id": "eqasc_validation_672", "prediction": "all x.(Semen(x) -> CarrierForSperm(x))", "score": 0}
{"id": "eqasc_validation_673", "prediction": "all x y.((Semen(x) & Vagina(y)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_674", "prediction": "all x.(Erection(x) -> CarriesEjaculate(x))", "score": 0}
{"id": "eqasc_validation_675", "prediction": "all x y.((Ssperm(x) & Ejaculate(y) & CarriedDuringSexualIntercourse(x,y)) -> DepositedAfterEjaculate(x,y))", "score": 0}
{"id": "eqasc_validation_676", "prediction": "all x y.((Intercourse(x) & Sperm(y)) -> ReleasedInVagina(x,y))", "score": 0}
{"id": "eqasc_validation_677", "prediction": "all x y.((SexualIntercourse(x) & SexualIntercourse(y)) -> DepositsMillionsOfSsperm(x,y))", "score": 0}
{"id": "eqasc_validation_678", "prediction": "During sexual intercourse, sperms are released during several hundred million times.", "score": -1}
{"id": "eqasc_validation_679", "prediction": "all x y.((Ssperm(x) & Vagina(y)) -> (DepositsIn(x,y) & TravelsThroughCervix(x) & FallsopianTubes(x)))", "score": 0}
{"id": "eqasc_validation_680", "prediction": "all x y z.((Ssperm(x) & Cervix(y) & FallopianTubes(z)) -> (TravelsThrough(x,y) & Through(x,z)))", "score": 0}
{"id": "eqasc_validation_681", "prediction": "all x y.((MaleSpore(x) & Man(y)) -> MadeInTestes(x,y))", "score": 0}
{"id": "eqasc_validation_682", "prediction": "all x y.((MadeInTestes(x) & DeposesInVagina(x,y)) -> SexualIntercourse(y))", "score": 0}
{"id": "eqasc_validation_683", "prediction": "all x.(MaleGamete(x) -> Sperm(x))", "score": 0}
{"id": "eqasc_validation_684", "prediction": "all x.(MaleGamete(x) -> DepositedInVagina(x))", "score": 0}
{"id": "eqasc_validation_685", "prediction": "all x y.((MaleGamete(x) & Vagina(y) & SexualIntercourse(x)) -> DepositedIn(x,y))", "score": 0}
{"id": "eqasc_validation_686", "prediction": "all x.(Pregnancy(x) -> SexualIntercourse(x))", "score": 0}
{"id": "eqasc_validation_687", "prediction": "all x y.((Ssperm(x) & Vagina(y)) -> DepositedIn(x,y))", "score": 1}
{"id": "eqasc_validation_688", "prediction": "all x.(Woman(x) -> HasVagina(x))", "score": 0}
{"id": "eqasc_validation_689", "prediction": "all x y.((Sex(x) & Sperm(y)) -> DepositedIntoReproductiveOrgan(y,x))", "score": 0}
{"id": "eqasc_validation_690", "prediction": "all x.(SexualUnion(x) -> (ForPlenish(x) & ForCloseness(x) & ForProcreation(x)))", "score": 0}
{"id": "eqasc_validation_691", "prediction": "all x y.((Ssperm(x) & Vagina(y) & Procreation(z)) -> DepositedIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_692", "prediction": "all x.(MaleGamete(x) -> Sperm(x))", "score": 0}
{"id": "eqasc_validation_693", "prediction": "all x.(MaleGamete(x) -> DepositedInVagina(x))", "score": 0}
{"id": "eqasc_validation_694", "prediction": "all x y.((Ssperm(x) & Osculum(y)) -> ReleasedIntoWater(x,y))", "score": 0}
{"id": "eqasc_validation_695", "prediction": "all x y.((MaleGamete(x) & Osculum(y)) -> ReleasedIntoSurroundingWater(x,y))", "score": 0}
{"id": "eqasc_validation_696", "prediction": "all x.(MaleGamete(x) -> ReleasedIntoWaterThroughOsculum(x))", "score": 0}
{"id": "eqasc_validation_697", "prediction": "all x y.((Lightning(x) & ForestFire(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_698", "prediction": "all x y.((Bust(x) & ForestFire(y)) -> (CausesEmbarrassmentToVegetation(x) & CausesEmbarrassmentToWildlife(x)))", "score": 0}
{"id": "eqasc_validation_699", "prediction": "all x.(Lightning(x) -> (CausesDamage(x,Vegetation) & CausesDamage(x,Wildlife)))", "score": 0}
{"id": "eqasc_validation_700", "prediction": "all x.(ForestFire(x) -> BadForEnvironment(x))", "score": 0}
{"id": "eqasc_validation_701", "prediction": "all x.(Lightning(x) -> BadForEnvironment(x))", "score": 0}
{"id": "eqasc_validation_702", "prediction": "all x.(Thunderstorm(x) -> ContainsLightning(x))", "score": 0}
{"id": "eqasc_validation_703", "prediction": "all x y.((Thunderstorm(x) & ForestFire(y)) -> Causes(x,y))", "score": 0}
{"id": "eqasc_validation_704", "prediction": "all x y.((Fire(x) & Forest(y) & CleansOut(x,y)) -> (LeadsToNewGrowth(x) & Revitalizes(x)))", "score": 0}
{"id": "eqasc_validation_705", "prediction": "all x y.((Lightning(x) & Forest(y)) -> (CausesNewGrowth(x,y) & Revitalizes(x,y)))", "score": 0}
{"id": "eqasc_validation_706", "prediction": "all x.(Lightning(x) -> VeryCommonDuringStorms(x))", "score": 0}
{"id": "eqasc_validation_707", "prediction": "all x y.((ForestFire(x) & ThunderStorm(y)) -> CausedBy(x,y))", "score": 0}
{"id": "eqasc_validation_708", "prediction": "all x.((Lightning(x) & MajorCauseOfFires(x)) -> MajorCauseOfFires(x))", "score": 0}
{"id": "eqasc_validation_709", "prediction": "all x y.((Lightning(x) & Fire(y)) -> Ignites(x,y))", "score": 0}
{"id": "eqasc_validation_710", "prediction": "all x.(ForestFire(x) -> Wildfire(x))", "score": 0}
{"id": "eqasc_validation_711", "prediction": "all x.(Wildfire(x) -> (CausedByLightning(x) & CausedByLightning(x)))", "score": 0}
{"id": "eqasc_validation_712", "prediction": "all x.(Lightning(x) -> CanCauseWildfire(x))", "score": 0}
{"id": "eqasc_validation_713", "prediction": "Until the town was destroyed by the forest fire.", "score": -1}
{"id": "eqasc_validation_714", "prediction": "all x y.((Lightning(x) & Town(y)) -> CanDestroy(x,y))", "score": 0}
{"id": "eqasc_validation_715", "prediction": "all x y.((SummerStorm(x) & Lightning(y)) -> (KicksUp(x,y) & IgnitesBrushFires(y)))", "score": 0}
{"id": "eqasc_validation_716", "prediction": "all x y z.((Storm(x) & Woods(y) & Fire(z)) -> CausesIn(x,y,z))", "score": 0}
{"id": "eqasc_validation_717", "prediction": "all x.(StaticElectricity(x) -> CauseOfLightning(x))", "score": 0}
{"id": "eqasc_validation_718", "prediction": "all x.(StaticElectricity(x) -> CausesForestFire(x))", "score": 0}
{"id": "eqasc_validation_719", "prediction": "all x.(Forest(x) -> (AtRiskOfFeuers(x) & DestroyedByForestFires(x)))", "score": 0}
{"id": "eqasc_validation_720", "prediction": "all x y.((Lightning(x) & Forest(y)) -> CausesToBeDismantled(x,y))", "score": 0}
{"id": "eqasc_validation_721", "prediction": "all x y.((Material(x) & SoundPasses(x) & MaterialType(y)) -> ChangesSpeedAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWayAtWay", "score": -1}
{"id": "eqasc_validation_722", "prediction": "all x.(Hearing(x) -> PerceivesSound(x))", "score": 0}
{"id": "eqasc_validation_723", "prediction": "all x y.((Material(x) & MaterialPassedThrough(y)) -> SpeedOfHearingChanges(x,y))", "score": 0}
{"id": "eqasc_validation_724", "prediction": "all x y.((SoundVibration(x) & Material(y)) -> TravelsAtDifferentSpeeds(x,y))", "score": 0}
{"id": "eqasc_validation_725", "prediction": "all x y.((Material(x) & SoundPasses(x)) -> ChangesSoundVibrations(x,y))", "score": 0}
{"id": "eqasc_validation_726", "prediction": "all x.(SoundWaves(x) -> MechanicalWaves(x))", "score": 0}
{"id": "eqasc_validation_727", "prediction": "all x y.((MaterialType(x) & MechanicalWaves(y) & PassThrough(x,y)) -> ChangesSpeedAtTravel(x,y))", "score": 0}
{"id": "eqasc_validation_728", "prediction": "all x y z.((Sound(x) & Material(y) & Material(z)) -> MovesAtDifferentRate(x,y,z))", "score": 0}
{"id": "eqasc_validation_729", "prediction": "all x y.((Refraction(x) & Wave(y) & Medium(z) & ChangesIn(x,y,z)) -> EffectOn(x,y,z))", "score": 0}
{"id": "eqasc_validation_730", "prediction": "all x y.((DifferencesInSpeedOfSound(x) & Media(y)) -> CausesRefractionOfSoundWaves(x,y))", "score": 0}
{"id": "eqasc_validation_731", "prediction": "all x.((FiberousMaterial(x) & MolecularLevel(x)) -> SlowsTransmissionOfSound(x))", "score": 0}
{"id": "eqasc_validation_732", "prediction": "all x y.((Sound(x) & FibrousMaterial(y) & PassesThrough(x,y)) -> SlowsDown(x))", "score": 0}
{"id": "eqasc_validation_733", "prediction": "all x.((Energy(x) & Sound(x)) -> (ProducedByVibrations(x) & TravelsInWaves(x)))", "score": 0}
{"id": "eqasc_validation_734", "prediction": "all x y.((Material(x) & Waves(y) & PassesThrough(x,y)) -> ChangesSpeedAtWavesMovement(x,y))", "score": 0}
{"id": "eqasc_validation_735", "prediction": "all x.(NegativeFeedback(x) -> ControlsInsulinSecrétionByPancreas(x))", "score": 1}
{"id": "eqasc_validation_736", "prediction": "all x y.((Glucose(x) & Pancreas(y)) -> StimulatesSectitol(x,y))", "score": 0}
{"id": "eqasc_validation_737", "prediction": "all x.(Glucose(x) -> MakesPancreasSectIndividual(x))", "score": 0}
{"id": "eqasc_validation_738", "prediction": "all x.(FeedbackInhibition(x) -> (CommonBiologicalControlMechanism(x) & NegativeFeedback(x)))", "score": 1}
{"id": "eqasc_validation_739", "prediction": "all x.(FeedbackInhibition(x) -> ControlsInsulinSecrétionByPancreas(x))", "score": 1}
{"id": "eqasc_validation_740", "prediction": "all x.(IsletCell(x) -> LocatedInPancreas(x))", "score": 0}
{"id": "eqasc_validation_741", "prediction": "all x.(IsletCell(x) -> (LocatedWhereInsulinSecrétionOccurs(x) & InsulinSecrétionOccurs(x)))", "score": 0}
{"id": "eqasc_validation_742", "prediction": "all x.(Spot(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_743", "prediction": "all x.(DietFilterFilter(x) -> (EatsKrill(x) & EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_744", "prediction": "all x.(Spot(x) -> EatsPlankton(x))", "score": 0}
{"id": "eqasc_validation_745", "prediction": "all x.((BottomDwellingOrganism(x) & (Coral(x) | Urchin(x) | Sponge(x))) -> ColorfulBackground(x))", "score": 0}
{"id": "eqasc_validation_746", "prediction": "all x.(BottomDwellingOrganism(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_747", "prediction": "all x.(Sponge(x) -> (EatsKrill(x) & EatsPlankton(x)))", "score": 0}
{"id": "eqasc_validation_748", "prediction": "all x.(Clam(x) -> (FilterFeeder(x) & TrapsAndFiltersFood(x) & WaterPassesBy(x)))", "score": 0}
{"id": "eqasc_validation_749", "prediction": "all x y.((Spot(x) & Water(y)) -> (Traps(x,y) & FiltersOutFood(x,y)))", "score": 0}
{"id": "eqasc_validation_750", "prediction": "all x.(Mushels(x) -> (FilterFeeder(x) & CleanWater(x)))", "score": 0}
{"id": "eqasc_validation_751", "prediction": "all x.(Sponge(x) -> CleansWater(x))", "score": 0}
{"id": "eqasc_validation_752", "prediction": "all x.(Sponge(x) -> (CleansWater(x) & Feeds(x)))", "score": 0}
{"id": "eqasc_validation_753", "prediction": "all x.(Spot(x) -> (Traps(x) & FiltersOutFood(x) & WaterPassesBy(x)))", "score": 0}
{"id": "eqasc_validation_754", "prediction": "all x y z.((Spot(x) & Krill(y) & Plankton(z)) -> (Eats(x,y) & Eats(x,z)))", "score": 0}
{"id": "eqasc_validation_755", "prediction": "all x.(Sponge(x) -> CleanWater(x))", "score": 0}
{"id": "eqasc_validation_756", "prediction": "all x.(BaleenWhale(x) -> FilterFeeder(x))", "score": 0}
{"id": "eqasc_validation_757", "prediction": "all x y.((BaleenWhale(x) & Sponge(y)) -> EatsInSameWay(x,y))", "score": 0}
{"id": "eqasc_validation_758", "prediction": "all x.(Mutualism(x) -> (SymbioticRelationship(x) & BenefitsBothSpecies(x)))", "score": 0}
{"id": "eqasc_validation_759", "prediction": "all x.((Dog(x) | Human(x)) -> SymbioticSpecies(x))", "score": 0}
{"id": "eqasc_validation_760", "prediction": "all x y z.((Dog(x) & Human(y) & Dog(z)) -> Mutualism(x,y,z))", "score": 0}
{"id": "eqasc_validation_761", "prediction": "all x.(DomesticationOfAnimals(x) -> SymbioticRelationship(x))", "score": 0}
{"id": "eqasc_validation_762", "prediction": "all x.(DomesticationOfAnimals(x) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_763", "prediction": "all x.(DomesticationOfAnimals(x) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_764", "prediction": "all x.((Coral(x) & Alga(x)) -> SymbioticRelationship(x))", "score": 0}
{"id": "eqasc_validation_765", "prediction": "all x.((Interaction(x) & Coral(x) & Alga(x)) -> Mutualism(x))", "score": 0}
{"id": "eqasc_validation_766", "prediction": "all x y.((Mutualism(x) & DifferentSpecies(y)) -> Benefits(x,y))", "score": 0}
{"id": "eqasc_validation_767", "prediction": "all x y z.((SymbioticRelationship(x) & Species(y) & Species(z)) -> (Association(x,y,z) & BenefitsSpecies(y,z)))", "score": 0}
{"id": "eqasc_validation_768", "prediction": "all x.((LivingSpecies(x) & HumanSpecies(x)) -> OutOf(x,80000000))", "score": 0}
{"id": "eqasc_validation_769", "prediction": "all x.(Mutualism(x) -> (SymbioticRelationship(x) & LivingBeing(x) & Benefits(x)))", "score": 0}
{"id": "eqasc_validation_770", "prediction": "all x.(SymbioticMicrobe(x) -> LivesInMushelsGills(x))", "score": 0}
{"id": "eqasc_validation_771", "prediction": "all x.(Mutualism(x) -> (Relationship(x,y) & Microbes(y) & Mussels(y) & BenefitsBothSpecies(x,y)))", "score": 0}
{"id": "eqasc_validation_772", "prediction": "(BenefitsFromMutualism(Coral) & BenefitsFromMutualism(Alga))", "score": 0}
{"id": "eqasc_validation_773", "prediction": "all x.(SymbioticRelationship(x) -> (Common(x) & AddsComplexity(x)))", "score": 0}
{"id": "eqasc_validation_774", "prediction": "all x.(Mutualism(x) -> AddsToComplexityOfSpeciesInteractions(x))", "score": 0}
{"id": "eqasc_validation_775", "prediction": "all x.(Male(x) -> (HasIndividualTerritories(x) & MutuallyBeneficialSymbioticRelationship(x) & OxpeckerBird(x)))", "score": 0}
{"id": "eqasc_validation_776", "prediction": "all x y.((OxpeckerBird(x) & Bird(y)) -> HelpsBenefitSpecies(x,y))", "score": 0}
{"id": "eqasc_validation_777", "prediction": "all x.(SymbioticRelationship(x) -> (Cucumbers(x) & Corn(x)))", "score": 0}
{"id": "eqasc_validation_778", "prediction": "all x y.((Cucumber(x) & Corn(y)) -> (HasMutualism(x,y) & Benefits(y,x)))", "score": 0}
{"id": "eqasc_validation_779", "prediction": "all x.(Adolescence(x) -> LastStageOfLifeBeforeAdulthood(x))", "score": 0}
{"id": "eqasc_validation_780", "prediction": "all x.(Adolescence(x) -> RapidChangesOccur(x))", "score": 0}
{"id": "eqasc_validation_781", "prediction": "all x y.((RapidChange(x) & StageOfLife(y) & Adulthood(y)) -> OccursInLastStageOfLife(x,y))", "score": 0}
{"id": "eqasc_validation_782", "prediction": "all x.((StageOfLife(x) & Adulthood(x)) -> Puberty(x))", "score": 0}
{"id": "eqasc_validation_783", "prediction": "all x.(Adolescent(x) -> ComplexLife(x))", "score": 0}
{"id": "eqasc_validation_784", "prediction": "all x.((LeastStageOfLife(x) & BeforeAdulthood(x)) -> VeryComplex(x))", "score": 0}
{"id": "eqasc_validation_785", "prediction": "all x.((Pupil(x) & AdultLifeStage(x)) -> Starts(x))", "score": 0}
{"id": "eqasc_validation_786", "prediction": "all x.(Puperty(x) -> EndsStageOfLife(x))", "score": 0}
{"id": "eqasc_validation_787", "prediction": "all x.((LeastStageOfLife(x) & Adulthood(x)) -> Puberty(x))", "score": 0}
{"id": "eqasc_validation_788", "prediction": "all x.(Adolescence(x) -> PivotalStageOfHumanDevelopment(x))", "score": 0}
{"id": "eqasc_validation_789", "prediction": "all x.((LeastStageBeforeAdulthood(x) & HumanDevelopment(x)) -> PivotalLaterStage(x))", "score": 0}
{"id": "eqasc_validation_790", "prediction": "all x.(Adolescence(x) -> (FunnyTimeOfLife(x) & CrazyTimeOfLife(x)))", "score": 0}
{"id": "eqasc_validation_791", "prediction": "all x.(Adolescence(x) -> (RainfulTime(x) & BeforeAdulthood(x)))", "score": 0}
{"id": "eqasc_validation_792", "prediction": "all x y.((Phylogeny(x) & Organism(y)) -> EvolutionaryHistory(x,y))", "score": 0}
{"id": "eqasc_validation_793", "prediction": "all x.(Classification(x) -> BasedOnPhylogeny(x))", "score": 0}
{"id": "eqasc_validation_794", "prediction": "all x y.((Organism(x) & RelatedOrganism(y)) -> EvolutionaryHistory(x,y))", "score": 0}
{"id": "eqasc_validation_795", "prediction": "all x.(EvolutionaryBiology(x) -> InvolvesHistoryOfOrganicDiversity(x))", "score": 0}
{"id": "eqasc_validation_796", "prediction": "all x y.((Phylogeny(x) & Organism(y)) -> (History(x,y) & OrganicDiversity(x,y)))", "score": 0}
{"id": "eqasc_validation_797", "prediction": "all x.(MetazoanPhylogeny(x) -> PoorlyUnderstood(x))", "score": 0}
{"id": "eqasc_validation_798", "prediction": "all x.(Metazoa(x) -> PoorlyUnderstoodEvolutionaryHistory(x))", "score": 0}
{"id": "eqasc_validation_799", "prediction": "all x y.((Organism(x) & Environment(y)) -> BehaviorRelated(x,y))", "score": 0}
{"id": "eqasc_validation_800", "prediction": "all x y.((Phylogeny(x) & Organism(y)) -> ExplainsEvolution(x,y))", "score": 0}
{"id": "eqasc_validation_801", "prediction": "all x.((GroupOfRelatedOrganisms(x) & RelatedOrganisms(x)) -> Phyla(x))", "score": 0}
{"id": "eqasc_validation_802", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedbackOnSpeed(x,y))", "score": 1}
{"id": "eqasc_validation_803", "prediction": "all x y.((Speed(x) & Distance(y)) -> (InMilesPerHour(x) & InMiles(y) & Withyards(y)))", "score": 0}
{"id": "eqasc_validation_804", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedbackOnMilesPerHour(x,y))", "score": 0}
{"id": "eqasc_validation_805", "prediction": "all x.((Odometer(x) | Speedometer(x)) -> (MeasuresDistance(x) & MeasuresSpeed(x)))", "score": 0}
{"id": "eqasc_validation_806", "prediction": "all x.(Speedometer(x) -> MeasuresRateOfTravel(x))", "score": 0}
{"id": "eqasc_validation_807", "prediction": "all x.(Speed(x) -> MeasureOfMotion(x))", "score": 0}
{"id": "eqasc_validation_808", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedbackOnMotion(x,y))", "score": 0}
{"id": "eqasc_validation_809", "prediction": "all x.(Speedometer(x) -> ShowsMaxSpeedOf90(x))", "score": 0}
{"id": "eqasc_validation_810", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> ShowsMPH(x,y))", "score": 0}
{"id": "eqasc_validation_811", "prediction": "all x.(Vehicle(x) -> ReducesSpeedAtRoadBends(x))", "score": 0}
{"id": "eqasc_validation_812", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> NavigatesRoadBends(x,y))", "score": 0}
{"id": "eqasc_validation_813", "prediction": "all x.(Speed(x) -> MagnitudeOfVelocity(x))", "score": 0}
{"id": "eqasc_validation_814", "prediction": "all x y.((Speedometer(x) & Vehicle(y)) -> GivesFeedbackOnVelocity(x,y))", "score": 0}
{"id": "eqasc_validation_815", "prediction": "all x.(VehicleSpeedCheckedByRadar(x) -> CheckedBy(x))", "score": 0}
{"id": "eqasc_validation_816", "prediction": "all x y.((Speedometer(x) & Radar(y)) -> GivesSameReading(x,y))", "score": 0}
{"id": "eqasc_validation_817", "prediction": "all x y.((Odometer(x) & Distance(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_818", "prediction": "all x.((VehicleSpeed(x) & Average(x,0.3)) -> Rises(x))", "score": -1}
{"id": "eqasc_validation_819", "prediction": "all x.(Speedometer(x) -> MeasuresMilesPerHour(x))", "score": 0}
{"id": "eqasc_validation_820", "prediction": "all x y.((Driver(x) & Car(y)) -> FeedsFeedbackOnSpeedWithSpeedometer(x,y))", "score": 0}
{"id": "eqasc_validation_821", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> TellsHowFastVehicleGoing(x,y))", "score": 0}
{"id": "eqasc_validation_822", "prediction": "all x.((Driver(x) & -WantsSpeedingTicket(x)) -> -WantsSpeedingTicket(x))", "score": 0}
{"id": "eqasc_validation_823", "prediction": "all x y.((Driver(x) & Speedometer(y)) -> UsesToAvoidTicket(x,y))", "score": 0}
{"id": "eqasc_validation_824", "prediction": "all x.(ExcessiveSpeed(x) -> FactorInManyAccidents(x))", "score": 0}
{"id": "eqasc_validation_825", "prediction": "all x.(Speedometer(x) -> HelpsPreventAccidents(x))", "score": 0}
{"id": "eqasc_validation_826", "prediction": "all x y.((Speedometer(x) & Driver(y)) -> GivesFeedbackOnSpeed(x,y))", "score": 1}
{"id": "eqasc_validation_827", "prediction": "all x.(PolarBear(x) -> RequiresColdEnvironment(x))", "score": 0}
{"id": "eqasc_validation_828", "prediction": "all x.(PolarBear(x) -> GrowsFurToSurviveInCold(x))", "score": 0}
{"id": "eqasc_validation_829", "prediction": "all x.(PolarBear(x) -> GrowsFurToSurvive(x))", "score": 0}
{"id": "eqasc_validation_830", "prediction": "all x.(PolarBear(x) -> EatsSeals(x))", "score": 0}
{"id": "eqasc_validation_831", "prediction": "all x.(Seal(x) -> LivesInColdEnvironment(x))", "score": 0}
{"id": "eqasc_validation_832", "prediction": "all x.(PolarBear(x) -> HasTwoLayersOfFur(x))", "score": 0}
{"id": "eqasc_validation_833", "prediction": "all x.(PolarBear(x) -> (HasTwoLayersOfFur(x) & LivesInEnvironment(x)))", "score": 0}
{"id": "eqasc_validation_834", "prediction": "all x.(PolarBear(x) -> LivesInArctic(x))", "score": 0}
{"id": "eqasc_validation_835", "prediction": "all x.(Arctic(x) -> ColdEnvironment(x))", "score": 0}
{"id": "eqasc_validation_836", "prediction": "all x.(ColdWeather(x) -> (IsWinter(x) & Snowing(x)))", "score": 0}
{"id": "eqasc_validation_837", "prediction": "all x.(PolarBear(x) -> RequiresWinterEnvironmentWithSnow(x))", "score": 0}
{"id": "eqasc_validation_838", "prediction": "all x.(Lynx(x) -> LivesInColdSnowyEnvironments(x))", "score": 0}
{"id": "eqasc_validation_839", "prediction": "all x y.((Lynx(x) & PolarBear(y)) -> SimilarClimateRequirements(x,y))", "score": 0}
{"id": "eqasc_validation_840", "prediction": "all x.(ArcticAirMass(x) -> (ExtremelyCold(x) & SourceRegionArcticOcean(x)))", "score": 0}
{"id": "eqasc_validation_841", "prediction": "all x.(PolarBear(x) -> CanLiveInArctic(x))", "score": 0}
{"id": "eqasc_validation_842", "prediction": "all x y z.((Hurricane(x) & Land(y) & Land(z)) -> (MovesOver(x,y) & DecreasesStrength(x,z)))", "score": 0}
{"id": "eqasc_validation_843", "prediction": "all x.(Hurricane(x) -> (LosesHeat(x) & LosesMoisture(x) & Weakens(x)))", "score": 0}
{"id": "eqasc_validation_844", "prediction": "all x.((Hurricane(x) & DecreasesStrength(x)) -> (LosesHeat(x) & LosesMoisture(x)))", "score": 0}
{"id": "eqasc_validation_845", "prediction": "all x.(LargeBodyOfLand(x) -> Continent(x))", "score": 0}
{"id": "eqasc_validation_846", "prediction": "all x y.((Hurricane(x) & continent(y)) -> MovesOver(x,y))", "score": 0}
{"id": "eqasc_validation_847", "prediction": "all x.(Hurricane(x) -> GrowsStrengthFromWarmWaters(x))", "score": 0}
{"id": "eqasc_validation_848", "prediction": "all x.(Hurricane(x) -> (WorseOverWarmWater(x) & WeakerOverLand(x)))", "score": 0}
{"id": "eqasc_validation_849", "prediction": "all x.(Hurricane(x) -> (SaffirSimpsonScale(x) & Strength(x,5)))", "score": 0}
{"id": "eqasc_validation_850", "prediction": "all x.((Hurricane(x) & MovesOverLand(x)) -> DropsOnSaffirSimpsonScale(x))", "score": 0}
{"id": "eqasc_validation_851", "prediction": "all x.(Hurricane(x) -> ExtremelyDangerousStorm(x))", "score": 0}
{"id": "eqasc_validation_852", "prediction": "all x y.((Storm(x) & ExtremelyDangerous(x) & MovesOverLand(x)) -> DecreasesStrength(y))", "score": 0}
{"id": "eqasc_validation_853", "prediction": "all x.(Hurricane(x) -> (FormsOverWarmTropicalWater(x) & DiesDown(x)))", "score": 0}
{"id": "eqasc_validation_854", "prediction": "all x y.((Hurricane(x) & WarmTropicalWater(y)) -> FormsOver(x,y))", "score": 0}
{"id": "eqasc_validation_855", "prediction": "all x.(Hurricane(x) -> TropicalCyclone(x))", "score": 0}
{"id": "eqasc_validation_856", "prediction": "all x y.((TropicalCyclone(x) & MovesOverLand(x)) -> DecreasesStrength(y))", "score": 0}
{"id": "eqasc_validation_857", "prediction": "all x.(Blood(x) -> FluidConnectiveTissue(x))", "score": 0}
{"id": "eqasc_validation_858", "prediction": "all x.(Blood(x) -> (ConnectiveTissue(x) & CarriesOxygen(x) & DeliversNutrient(x)))", "score": 0}
{"id": "eqasc_validation_859", "prediction": "all x.(Blood(x) -> (FluidTissue(x) & DeliversOxygen(x) & DeliversNutrients(x)))", "score": 0}
{"id": "eqasc_validation_860", "prediction": "all x.(ConnectiveTissue(x) -> ViscoElastic(x))", "score": 0}
{"id": "eqasc_validation_861", "prediction": "all x.(Blood(x) -> ViscoElastic(x))", "score": 0}
{"id": "eqasc_validation_862", "prediction": "all x.(Blood(x) -> PulsedThroughBody(x))", "score": 0}
{"id": "eqasc_validation_863", "prediction": "all x y.((FluidConnectiveTissue(x) & Body(y)) -> PulsedThrough(x,y))", "score": 0}
{"id": "eqasc_validation_864", "prediction": "all x.((Tissues(x) & Fluids(x)) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_865", "prediction": "all x.((Blood(x) & InBody(x)) -> ContainsMinerals(x))", "score": 0}
{"id": "eqasc_validation_866", "prediction": "all x.(Liquid(x) -> (Fluid(x) & Flows(x) & Liquids(x)))", "score": 0}
{"id": "eqasc_validation_867", "prediction": "all x.(Blood(x) -> LiquidConnectiveTissue(x))", "score": 0}
{"id": "eqasc_validation_868", "prediction": "all x.(Blood(x) -> CarriesOxygenToBrain(x))", "score": 0}
{"id": "eqasc_validation_869", "prediction": "all x y.((FluidConnectiveTissue(x) & Brain(y)) -> CarriesOxygenTo(x,y))", "score": 0}
{"id": "eqasc_validation_870", "prediction": "all x.(ConnectiveTissueCancer(x) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_871", "prediction": "all x.(BloodCancer(x) -> Rare(x))", "score": 0}
{"id": "eqasc_validation_872", "prediction": "all x y.((Compass(x) & Ocean(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_873", "prediction": "all x y.((OceanWaves(x) & Water(y)) -> TravelsOnSurface(x,y))", "score": 0}
{"id": "eqasc_validation_874", "prediction": "all x.(Compass(x) -> TravelsOnWaterSurface(x))", "score": 0}
{"id": "eqasc_validation_875", "prediction": "all x.(Magnet(x) -> UsedInCompass(x))", "score": 0}
{"id": "eqasc_validation_876", "prediction": "all x y.((Magnet(x) & Ocean(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_877", "prediction": "(LargestOcean(x) & OnEarth(x))", "score": 0}
{"id": "eqasc_validation_878", "prediction": "all x y.((Compass(x) & Pacific(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_879", "prediction": "all x.(MoonlessNight(x) -> NavigatesWithCompass(x))", "score": 0}
{"id": "eqasc_validation_880", "prediction": "all x.((Ocean(x) & MoonlessNight(x)) -> NavigatesOn(x,y))", "score": 0}
{"id": "eqasc_validation_881", "prediction": "(East is AtlanticOcean(x) & ToEast(x))", "score": -1}
{"id": "eqasc_validation_882", "prediction": "all x y.((Compass(x) & AtlanticAtlantic(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_883", "prediction": "all x.((Compass(x) & MagneticStorm(x)) -> DifficultNavigation(x))", "score": 0}
{"id": "eqasc_validation_884", "prediction": "all x y.((MagneticStorm(x) & Ocean(y)) -> MoreDifficultToNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_885", "prediction": "all x.(MapNavigator(x) -> (UsesGridNorth(x) | UsesMagneticNorth(x)))", "score": 0}
{"id": "eqasc_validation_886", "prediction": "all x.(Compass(x) -> FindsMagneticNorth(x))", "score": 0}
{"id": "eqasc_validation_887", "prediction": "all x y.((Magnet(x) & Ocean(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_888", "prediction": "all x.((Compass(x) & NavigatesPacific(x)) -> CanBeHas(x,Compass))", "score": 0}
{"id": "eqasc_validation_889", "prediction": "all x y.((NauticalChart(x) & Mariner(y) & Boater(y)) -> SafeNavigate(x,y))", "score": 0}
{"id": "eqasc_validation_890", "prediction": "all x y.((Mariner(x) & Compass(y)) -> TravelsOcean(x,y))", "score": 0}
{"id": "eqasc_validation_891", "prediction": "all x.(Direction(x) -> (DegreesFromNorth(x) & MeasuredByCompass(x)))", "score": 0}
{"id": "eqasc_validation_892", "prediction": "all x y.((Direction(x) & Degrees(y)) -> NavigatesOceans(x,y))", "score": 0}
{"id": "eqasc_validation_893", "prediction": "all x.(Magnetism(x) -> (HasMagnets(x) & HasCompasses(x) & HasEarth(x)))", "score": 0}
{"id": "eqasc_validation_894", "prediction": "all x y.((Magnetism(x) & Ocean(y)) -> Navigates(x,y))", "score": 0}
{"id": "eqasc_validation_895", "prediction": "all x.((OceanGoingVessel(x) & UsesGyrocompass(x)) -> SteeringCompass(x))", "score": 0}
{"id": "eqasc_validation_896", "prediction": "all x.(Compass(x) -> UsedForSteering(x))", "score": 0}
{"id": "eqasc_validation_897", "prediction": "all x.(Precipitation(x) -> IncreasesMoisture(x))", "score": 1}
{"id": "eqasc_validation_898", "prediction": "(all x.(MoistureCondensation(x) -> DependsOnRate(x)))", "score": 0}
{"id": "eqasc_validation_899", "prediction": "all x.(Precipitation(x) -> DependsOnCondensation(x))", "score": 0}
{"id": "eqasc_validation_900", "prediction": "all x.(Rain(x) -> IncreasesMoisture(x))", "score": 1}
{"id": "eqasc_validation_901", "prediction": "all x.(Rain(x) -> LiquidPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_902", "prediction": "all x.(Rain(x) -> IncreasesMoisture(x))", "score": 0}
{"id": "eqasc_validation_903", "prediction": "all x.((LocalPrecipitation(x) & Altitude(x)) -> IncreasesSharply(x))", "score": 0}
{"id": "eqasc_validation_904", "prediction": "all x.((Moisture(x) & Altitude(x)) -> IncreasesSharplyWithAltitude(x))", "score": 0}
{"id": "eqasc_validation_905", "prediction": "all x.(MoistureCondition(x) -> (Damp(x) | Dry(x)))", "score": 0}
{"id": "eqasc_validation_906", "prediction": "all x y.((Precipitation(x) & DryCondition(y) & DampCondition(y)) -> IncreasesConditions(x,y))", "score": 0}
{"id": "eqasc_validation_907", "prediction": "all x.(Moisture(x) -> (NecessaryIngredient(x) & ProducesClouds(x) & ProducesPrecipitation(x)))", "score": 0}
{"id": "eqasc_validation_908", "prediction": "all x.(Cloud(x) -> NecessaryForPrecipitation(x))", "score": 0}
{"id": "eqasc_validation_909", "prediction": "all x.(Precipitation(x) -> Rainfall(x))", "score": 0}
{"id": "eqasc_validation_910", "prediction": "all x.(Rainfall(x) -> IncreasesMoisture(x))", "score": 0}
{"id": "eqasc_validation_911", "prediction": "all x.(PrecipitationAmount(x) -> InInches(x))", "score": 0}
{"id": "eqasc_validation_912", "prediction": "all x.(MeasuresMoistureInInches(x) -> MoistureMeasuredInInches(x))", "score": 0}
{"id": "eqasc_validation_913", "prediction": "all x.(Moisture(x) -> (RelatedToElectricalConductivity(x) & IncreasesWithIncreasedMoistureLevels(x)))", "score": 0}
{"id": "eqasc_validation_914", "prediction": "all x y.((Wood(x) & Precipitation(y) & FallsOn(x,y)) -> IncreasesElectricalConductivity(x))", "score": 0}
{"id": "eqasc_validation_915", "prediction": "all x y z.((SpiderWeb(x) & Spider(y) & Food(z)) -> CapturesBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_916", "prediction": "all x.(BlackWifeSpider(x) -> ConstructsFunnelShapedWebs(x))", "score": 0}
{"id": "eqasc_validation_917", "prediction": "all x.(BlackWife(x) -> UsesWebsToCaptureFood(x))", "score": 0}
{"id": "eqasc_validation_918", "prediction": "all x y.((Spider(x) & CapturedInsect(y)) -> InjectsVenom(x,y))", "score": 0}
{"id": "eqasc_validation_919", "prediction": "all x y z.((Arachnid(x) & EightLegged(x) & Food(y) & Web(z)) -> (Captures(x,y) & InjectsVenom(x,z) & Paralyzes(x,y)))", "score": 0}
{"id": "eqasc_validation_920", "prediction": "all x.(CrabSpider(x) -> SpinsNoWebs(x))", "score": 0}
{"id": "eqasc_validation_921", "prediction": "all x.(Web(x) -> CapturesFood(x))", "score": 0}
{"id": "eqasc_validation_922", "prediction": "all x.(Spider(x) -> EatsInsects(x))", "score": 0}
{"id": "eqasc_validation_923", "prediction": "all x.(Web(x) -> CapturesInsects(x))", "score": 0}
{"id": "eqasc_validation_924", "prediction": "all x y.((WebSpinningSpider(x) & Web(y)) -> SpinsToCatchInsects(x,y))", "score": 0}
{"id": "eqasc_validation_925", "prediction": "all x y.((Spider(x) & Insect(y)) -> (Catch(x,y) & Spin(x,y)))", "score": 0}
{"id": "eqasc_validation_926", "prediction": "all x.(Spider(x) -> HasEightLegs(x))", "score": 0}
{"id": "eqasc_validation_927", "prediction": "all x.(Web(x) -> (CapturesFood(x) & ByEightLeggedCreatures(x)))", "score": 0}
{"id": "eqasc_validation_928", "prediction": "all x.(SpiderWeb(x) -> InterestingTrap(x))", "score": 0}
{"id": "eqasc_validation_929", "prediction": "all x y z.((Spider(x) & Trap(y) & Food(z)) -> UsesToCapture(x,y,z))", "score": 0}
{"id": "eqasc_validation_930", "prediction": "all x.(Spider(x) -> Arachnid(x))", "score": 0}
{"id": "eqasc_validation_931", "prediction": "all x y.((Web(x) & Arachnid(y)) -> CapturesFood(x,y))", "score": 0}
{"id": "eqasc_validation_932", "prediction": "all x y.((CobwebSpider(x) & Corner(y) & LittleTraffic(y)) -> ConstructsWebsIn(x,y))", "score": 0}
{"id": "eqasc_validation_933", "prediction": "all x.(Cobweb(x) -> CapturesFood(x))", "score": 0}
{"id": "eqasc_validation_934", "prediction": "all x.((Spider(x) & SpiderWeb(x)) -> exists y.(Insect(y) & AvailableForFood(y)))", "score": 0}
{"id": "eqasc_validation_935", "prediction": "all x y z.((SpiderWeb(x) & Spider(y) & Insect(z)) -> CapturesBy(x,y,z))", "score": 0}
{"id": "eqasc_validation_936", "prediction": "all x.(Spider(x) -> Arachnid(x))", "score": 0}
{"id": "eqasc_validation_937", "prediction": "exists x.(Arachnid(x) & CapturesFoodWithWeb(x))", "score": 0}
{"id": "eqasc_validation_938", "prediction": "all x y.((Spider(x) & Silk(y)) -> BuildsWebsFrom(x,y))", "score": 0}
{"id": "eqasc_validation_939", "prediction": "all x y.((Spider(x) & Silk(y)) -> UsesToCaptureFood(x,y))", "score": 0}
{"id": "eqasc_validation_940", "prediction": "all x.(Protozoa(x) -> CanBeClassifiedOnMovement(x))", "score": 0}
{"id": "eqasc_validation_941", "prediction": "all x.(Flagellate(x) -> (SmallestOfProtozoa(x) & UsesFlagella(x)))", "score": 0}
{"id": "eqasc_validation_942", "prediction": "all x.(Flagellate(x) -> (SmallProtozoa(x) & SmallProtozoa(x)))", "score": 0}
{"id": "eqasc_validation_943", "prediction": "all x.((CottonSeedling(x) & ClassifiedInto(x,3)) -> EasyOfIdentification(x))", "score": 0}
{"id": "eqasc_validation_944", "prediction": "all x.(Protozoa(x) -> Moves(x))", "score": 0}
{"id": "eqasc_validation_945", "prediction": "all x y.((Cilia(x) & Protozoa(y)) -> (CoordinatedWave(x,y) & MovesInOneDirection(x,y)))", "score": 0}
{"id": "eqasc_validation_946", "prediction": "all x y.((CiliaWave(x) & CiliaWave(y)) -> Moves(x,y))", "score": 0}
{"id": "eqasc_validation_947", "prediction": "all x.(Paramecium(x) -> (Protozoa(x) & SingleLeaved(x)))", "score": 0}
{"id": "eqasc_validation_948", "prediction": "all x.(Paramecium(x) -> (Movement(x) & Moves(x) & ClassifiedOn(x)))", "score": 0}
{"id": "eqasc_validation_949", "prediction": "all x.(SingleLeavedAnimal(x) -> CanBeClassifiedOnBaseOnMovement(x))", "score": 0}
{"id": "eqasc_validation_950", "prediction": "all x.(CryptosporidiumParvum(x) -> HardestProtozoaToKill(x))", "score": 0}
{"id": "eqasc_validation_951", "prediction": "all x.((Animal(x) & Cyptosporidium(x)) -> ClassifiedOnMovement(x))", "score": 0}
{"id": "eqasc_validation_952", "prediction": "all x.(Ciliate(x) -> CiliatedProtozoa(x))", "score": 0}
{"id": "eqasc_validation_953", "prediction": "all x.(Ciliate(x) -> CanBeClassifiedOnMovement(x))", "score": 0}
{"id": "eqasc_validation_954", "prediction": "all x.(Chromoplast(x) -> (MakesPigments(x) & StoresPigments(x)))", "score": 0}
{"id": "eqasc_validation_955", "prediction": "all x.(Chromoplast(x) -> (ContainsRedOrYellowXanthophyllPigments(x) & LargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_956", "prediction": "all x.(Chromoplast(x) -> (MakesAndStoresRedOrYellowColors(x) & InLargeAmounts(x)))", "score": 0}
{"id": "eqasc_validation_957", "prediction": "all x.(Pigment(x) -> GivesColorToPaint(x))", "score": 0}
{"id": "eqasc_validation_958", "prediction": "all x.(Chromoplast(x) -> GivesColorToPaint(x))", "score": 0}
{"id": "eqasc_validation_959", "prediction": "all x.(Chromoplast(x) -> (Red(x) | Yellow(x) | Orange(x)))", "score": 0}
{"id": "eqasc_validation_960", "prediction": "all x.(Chromoplast(x) -> ((Red(x) | Yellow(x) | Orange(x)) & MakesColors(x) & StoresColors(x)))", "score": 0}
{"id": "eqasc_validation_961", "prediction": "all x.(Chromoplast(x) -> (FoundIn(x,flowerPetals) & FoundIn(x,fruits)))", "score": 0}
{"id": "eqasc_validation_962", "prediction": "all x y.((FlowerPetal(x) & Fruit(y)) -> (MakesPigments(x) & StoresPigments(x)))", "score": 0}
{"id": "eqasc_validation_963", "prediction": "all x.(Flower(x) -> ContainsPigments(x))", "score": 0}
{"id": "eqasc_validation_964", "prediction": "all x.(Chromoplast(x) -> (MakesAndStoresSameThing(x) & GivesColorToPaint(x)))", "score": 0}
{"id": "eqasc_validation_965", "prediction": "all x.(PhotosynthesisPigments(x) -> (AbsorbsVisibleLight(x) & Pigments(x)))", "score": 0}
{"id": "eqasc_validation_966", "prediction": "all x.(Chromoplast(x) -> StoresSubstances(x))", "score": 0}
{"id": "eqasc_validation_967", "prediction": "all x.(Chromoplast(x) -> Hushed(x))", "score": 0}
{"id": "eqasc_validation_968", "prediction": "all x.(PhotosyntheticPigment(x) -> ColorfulCompound(x))", "score": 0}
{"id": "eqasc_validation_969", "prediction": "all x y.((Chromoplast(x) & ColorfulCompound(y)) -> (Makes(x,y) & Stores(x,y)))", "score": 0}
{"id": "eqasc_validation_970", "prediction": "all x.(Chromoplast(x) -> MakesRedColoring(x))", "score": 0}
{"id": "eqasc_validation_971", "prediction": "all x y.((Bee(x) & Nectar(y)) -> ConvertsToHoney(x,y))", "score": 0}
{"id": "eqasc_validation_972", "prediction": "all x.(HoneyBee(x) -> (LivesInHome(x) | LivesInAapiary(x)))", "score": 0}
{"id": "eqasc_validation_973", "prediction": "all x y z.((Nectar(x) & Honey(y) & Apiary(z)) -> ConvertedTo(x,y,z))", "score": 0}
{"id": "eqasc_validation_974", "prediction": "all x.(Butterfly(x) -> FeedsOnNectar(x))", "score": 0}
{"id": "eqasc_validation_975", "prediction": "all x.(Bee(x) -> NeedsFlowers(x))", "score": 0}
{"id": "eqasc_validation_976", "prediction": "all x y.((Bee(x) & Beehive(y)) -> ChangesNectar(x,y))", "score": 0}
{"id": "eqasc_validation_977", "prediction": "all x y.((Honey(x) & Beehive(y)) -> ChangedIn(x,y))", "score": 0}
{"id": "eqasc_validation_978", "prediction": "all x y.((Flower(x) & Honey(y)) -> SourceOfNectar(x,y))", "score": 0}
{"id": "eqasc_validation_979", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> GetsNectarFrom(x,y,z))", "score": 0}
{"id": "eqasc_validation_980", "prediction": "all x.(Flower(x) -> SecretesNectar(x))", "score": 0}
{"id": "eqasc_validation_981", "prediction": "all x y.((Bee(x) & FlowerSecrétion(y)) -> ConvertsToHoney(x,y))", "score": 0}
{"id": "eqasc_validation_982", "prediction": "all x.((Tea(x) & Honey(x)) -> Good(x))", "score": 0}
{"id": "eqasc_validation_983", "prediction": "all x y.((Bee(x) & Nectar(y)) -> ConvertsToTea(x,y))", "score": 0}
{"id": "eqasc_validation_984", "prediction": "all x y.((Bee(x) & Flower(y)) -> MovesFromTo(x,y))", "score": 0}
{"id": "eqasc_validation_985", "prediction": "all x y z.((Bee(x) & Flower(y) & Flower(z)) -> (MakesHoneyFrom(x,y) & GathersFrom(x,z)))", "score": 0}
{"id": "eqasc_validation_986", "prediction": "all x.(Nectar(x) -> (InFlowers(x) | InTrees(x) | InHummingbirdFeeders(x)))", "score": 0}
{"id": "eqasc_validation_987", "prediction": "all x y z.((Bee(x) & Material(y) & Honey(z)) -> GathersForMaking(x,y,z))", "score": 0}
{"id": "eqasc_validation_988", "prediction": "all x.(Haggfish(x) -> (SectsLargeAmountsOfThickSlimyMucus(x)))", "score": 0}
{"id": "eqasc_validation_989", "prediction": "all x.(JawlessFish(x) -> (Lamprey(x) | Hagfish(x)))", "score": 0}
{"id": "eqasc_validation_990", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_991", "prediction": "exists x.(JawlessFish(x) & SecretesLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_992", "prediction": "all x.(Haggfish(x) -> (Marine(x) & Slimy(x) & FeedsOnCarrionAndInjuredFishes(x)))", "score": 0}
{"id": "eqasc_validation_993", "prediction": "all x.(Haggfish(x) -> SecretesLargeAmountsOfMucus(x))", "score": 0}
{"id": "eqasc_validation_994", "prediction": "all x.(MarineEnvironment(x) -> HasThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_995", "prediction": "exists x.(JawlessFish(x) & SpontaneousMucus(x) & ThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_996", "prediction": "all x.((Haggfish(x) | Lamprey(x)) -> -HasHardTissues(x))", "score": 0}
{"id": "eqasc_validation_997", "prediction": "all x.((Creature(x) & -HasHardTissues(x)) -> SecretesLargeAmountsOfThickSlimyMucus(x))", "score": 0}
{"id": "eqasc_validation_998", "prediction": "all x y.((Mountain(x) & Earthquake(y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_999", "prediction": "all x.(Earthquake(x) -> CausedByTectonicPlateMovement(x))", "score": 0}
{"id": "eqasc_validation_1000", "prediction": "all x.(Mountain(x) -> FormedByMovementOfTectonicPlates(x))", "score": 0}
{"id": "eqasc_validation_1001", "prediction": "all x.(Earthquake(x) -> (MovingPlate(x) & ResultsOf(x,y)))", "score": 0}
{"id": "eqasc_validation_1002", "prediction": "all x.(Mountain(x) -> (FormedByMovingPlates(x) & FormedByMovingPlates(x)))", "score": 0}
{"id": "eqasc_validation_1003", "prediction": "all x.((BigMountainBackground(x) & Himalayas(x)) -> Check(x))", "score": 0}
{"id": "eqasc_validation_1004", "prediction": "all x.(Himalaya(x) -> FormedByEarthquakes(x))", "score": 0}
{"id": "eqasc_validation_1005", "prediction": "all x.(Mountain(x) -> FormedByMovingPlates(x))", "score": 0}
{"id": "eqasc_validation_1006", "prediction": "exists x.(Mountain(x) & FormedByUplifting(x))", "score": 0}
{"id": "eqasc_validation_1007", "prediction": "all x.(Earthquake(x) -> CausesUplifting(x))", "score": 0}
{"id": "eqasc_validation_1008", "prediction": "all x.(Mountain(x) -> GoesToAlps(x))", "score": 0}
{"id": "eqasc_validation_1009", "prediction": "all x.(Alps(x) -> FormedByEarthquakes(x))", "score": 0}
{"id": "eqasc_validation_1010", "prediction": "all x y.((Rock(x) & EarthquakeFault(y)) -> UpliftedAlong(x,y))", "score": 0}
{"id": "eqasc_validation_1011", "prediction": "all x y.((Rocks(x) & Mountain(y)) -> LiftsToMake(x,y))", "score": 0}
{"id": "eqasc_validation_1012", "prediction": "all x.(Earthquake(x) -> EarthquakeProne(x))", "score": 0}
{"id": "eqasc_validation_1013", "prediction": "all x.(Japan(x) -> HasMountains(x))", "score": 0}
{"id": "eqasc_validation_1014", "prediction": "all x.(ChemicalDigestion(x) -> OccursInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_1015", "prediction": "all x.(Enzyme(x) -> (InvolvedInDigestion(x) & Chemical(x)))", "score": 0}
{"id": "eqasc_validation_1016", "prediction": "all x y.((Enzyme(x) & SmallIntestine(y)) -> InSmallIntestine(x,y))", "score": 0}
{"id": "eqasc_validation_1017", "prediction": "all x.(CeliacDisease(x) -> (DamagesSmallIntestine(x) & InterferesWithNutrientAbsorption(x)))", "score": 0}
{"id": "eqasc_validation_1018", "prediction": "all x.(CeliacDisease(x) -> InterferesWithChemicalDigestion(x))", "score": 0}
{"id": "eqasc_validation_1019", "prediction": "all x.(SmallIntestine(x) -> (ChemicalDigestion(x) & AbsorptionOfFood(x)))", "score": 0}
{"id": "eqasc_validation_1020", "prediction": "all x y.((ChemicalAbsorption(x) & SmallIntestine(y)) -> HappensIn(x,y))", "score": 0}
{"id": "eqasc_validation_1021", "prediction": "all x y.((ChemicalDigestion(x) & ComplexChemicals(y)) -> BreaksIntoSimpleChemicals(x,y))", "score": 0}
{"id": "eqasc_validation_1022", "prediction": "all x.((ComplexChemicals(x) & SimpleChemicals(x)) -> OccursInSmallIntestine(x))", "score": 0}
{"id": "eqasc_validation_1023", "prediction": "all x.(Enzyme(x) -> (InterestsInDigestion(x) & OccursInSmallIntestine(x)))", "score": 0}
{"id": "eqasc_validation_1024", "prediction": "all x.(Lactobacillus(x) -> PresentInSmallintestine(x))", "score": 0}
{"id": "eqasc_validation_1025", "prediction": "all x.(Lactobacillus(x) -> AidsChemicalDigestion(x))", "score": 0}
{"id": "eqasc_validation_1026", "prediction": "all x.(Pharmacist(x) -> (CallingIntestines(x) | CallingBowels(x)))", "score": 0}
{"id": "eqasc_validation_1027", "prediction": "all x.(ChemicalDigestion(x) -> OccursInSmallBody(x))", "score": 0}
{"id": "eqasc_validation_1028", "prediction": "all x y.((Enzyme(x) & SmallIntestine(y)) -> LocatedIn(x,y))", "score": 0}
{"id": "eqasc_validation_1029", "prediction": "all x y.((ComplexChemical(x) & SmallIntestine(y)) -> BreaksDownIntoSimpleChemicals(x,y))", "score": 0}
{"id": "eqasc_validation_1030", "prediction": "all x.(Second(x) -> MeasuresTime(x))", "score": 0}
{"id": "eqasc_validation_1031", "prediction": "all x.(CPUTime(x) -> MeasuredInSeconds(x))", "score": 0}
{"id": "eqasc_validation_1032", "prediction": "all x.(CPUTime(x) -> CanBeUsedAsClock(x))", "score": 0}
{"id": "eqasc_validation_1033", "prediction": "all x.(AccountingPeriod(x) -> PeriodOfTime(x))", "score": 0}
{"id": "eqasc_validation_1034", "prediction": "all x y.((Second(x) & Period(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1035", "prediction": "all x.(Stopwatch(x) -> MeasuresTime(x))", "score": 0}
{"id": "eqasc_validation_1036", "prediction": "all x.(Stopwatch(x) -> MeasuresSeconds(x))", "score": 0}
{"id": "eqasc_validation_1037", "prediction": "all x.(Speed(x) -> MeasuredByDistance(x))", "score": 0}
{"id": "eqasc_validation_1038", "prediction": "all x.(Seconds(x) -> MeasureSpeed(x))", "score": 0}
{"id": "eqasc_validation_1039", "prediction": "all x y.((Whiskers(x) & Animal(y)) -> UsedForFeeling(x,y))", "score": 1}
{"id": "eqasc_validation_1040", "prediction": "all x.(Whiskers(x) -> (StiffHairs(x) & OnDogsFace(x)))", "score": 0}
{"id": "eqasc_validation_1041", "prediction": "all x y.((StiffHair(x) & Face(y)) -> UsedForFeeling(x,y))", "score": 0}
{"id": "eqasc_validation_1042", "prediction": "all x.((Dog(x) & StiffHairsOnFace(x)) -> UsedForFeeling(x))", "score": 0}
{"id": "eqasc_validation_1043", "prediction": "all x.(Cat(x) -> Animal(x))", "score": 1}
{"id": "eqasc_validation_1044", "prediction": "all x.(Cat(x) -> (UsesSpecializedLongHair(x) & FeelsWith(x)))", "score": 0}
{"id": "eqasc_validation_1045", "prediction": "all x.(Cat(x) -> Whiskers(x))", "score": 0}
{"id": "eqasc_validation_1046", "prediction": "all x.(Cat(x) -> HasBodyPartsForFeeling(x))", "score": 0}
{"id": "eqasc_validation_1047", "prediction": "all x y.((Whiskers(x) & Cat(y)) -> UsedForFeeling(x,y))", "score": 1}
{"id": "eqasc_validation_1048", "prediction": "all x.((Hair(x) | Whiskers(x) | Claws(x) | Hooves(x)) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1049", "prediction": "all x y.((Tissue(x) & Keratin(y)) -> UsedForFeelingByAnimals(x,y))", "score": 0}
{"id": "eqasc_validation_1050", "prediction": "all x.(Watch(x) -> MeasuresTime(x))", "score": 0}
{"id": "eqasc_validation_1051", "prediction": "all x.(Time(x) -> MeasuredInSeconds(x))", "score": 0}
{"id": "eqasc_validation_1052", "prediction": "all x.(Watch(x) -> MeasuresSeconds(x))", "score": 0}
{"id": "eqasc_validation_1053", "prediction": "all x.(Time(x) -> MeasuredInSeconds(x))", "score": 0}
{"id": "eqasc_validation_1054", "prediction": "all x.(Watch(x) -> MeasuresSeconds(x))", "score": 0}
{"id": "eqasc_validation_1055", "prediction": "all x.((Rolex(x) & Today(x)) -> TomorrowsLittleGoldWatch(x))", "score": 0}
{"id": "eqasc_validation_1056", "prediction": "all x.(Rolex(x) -> UsedForMeasuringTime(x))", "score": 0}
{"id": "eqasc_validation_1057", "prediction": "all x.(Time(x) -> (MeasuredUsing(x,hours) & MeasuredUsing(x,seconds) & MeasuredUsing(x,minutes)))", "score": 0}
{"id": "eqasc_validation_1058", "prediction": "all x.(Watch(x) -> (MeasuresHours(x) & MeasuresSeconds(x) & MeasuresMinutes(x)))", "score": 0}
{"id": "eqasc_validation_1059", "prediction": "all x.(TimeManagement(x) -> (UsesHoursEfficiently(x) & UsesHoursEfficiently(x)))", "score": 0}
{"id": "eqasc_validation_1060", "prediction": "all x.(Watch(x) -> NeededForScientificResearch(x))", "score": 0}
{"id": "eqasc_validation_1061", "prediction": "all x.(Time(x) -> MeasuredInMinutes(x))", "score": 0}
{"id": "eqasc_validation_1062", "prediction": "all x.(Watch(x) -> MeasuresMinutes(x))", "score": 0}
{"id": "eqasc_validation_1063", "prediction": "all x.(Watch(x) -> KeepsTrackOfSeconds(x))", "score": 0}
{"id": "eqasc_validation_1064", "prediction": "all x.((TickingHandsOfClock(x) & ProbablyEasiestToSeeTime(x)) -> Watch(x))", "score": 0}
{"id": "eqasc_validation_1065", "prediction": "all x.(TickingHand(x) -> UsedForMeasuringTime(x))", "score": 0}
{"id": "eqasc_validation_1066", "prediction": "all x.(Time(x) -> SpeedOfMovements(x))", "score": 0}
{"id": "eqasc_validation_1067", "prediction": "all x.(Watch(x) -> MeasuresSpeedOfMovements(x))", "score": 0}
{"id": "eqasc_validation_1068", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1069", "prediction": "all x.((Bacteria(x) | Viral(x)) -> Microbe(x))", "score": 0}
{"id": "eqasc_validation_1070", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWithLiveMicrobes(x))", "score": 0}
{"id": "eqasc_validation_1071", "prediction": "all x y.((Bacteria(x) & Bacteria(y)) -> (Eats(x) & DigestsFoods(y)))", "score": 0}
{"id": "eqasc_validation_1072", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWith(x,eats,digests,foods))", "score": 0}
{"id": "eqasc_validation_1073", "prediction": "all x.((Bacteria(x) & Viruses(x) & MakesPeopleSick(x)) -> PassedOnHands(x))", "score": 0}
{"id": "eqasc_validation_1074", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CanMakePeopleSick(x))", "score": 0}
{"id": "eqasc_validation_1075", "prediction": "all x.(Bacteria(x) -> SingleCellMicroorganism(x))", "score": 0}
{"id": "eqasc_validation_1076", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWithSingleCellMicroorganisms(x))", "score": 0}
{"id": "eqasc_validation_1077", "prediction": "all x.(Surface(x) -> (SteamedClean(x) & Sterilized(x)))", "score": 0}
{"id": "eqasc_validation_1078", "prediction": "all x.((Surface(x) & -Cleaned(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1079", "prediction": "all x.(RawMeat(x) -> LoadedWithHarmfulBacteria(x))", "score": 0}
{"id": "eqasc_validation_1080", "prediction": "all x.((Surface(x) & RawMeat(x)) -> ShouldBeSterilized(x))", "score": 0}
{"id": "eqasc_validation_1081", "prediction": "all x.(CookerSurface(x) -> NaturalStone(x))", "score": 0}
{"id": "eqasc_validation_1082", "prediction": "all x.((CoveredCoveredCovered(x) & -Sterilized(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1083", "prediction": "all x.(Surface(x) -> ScrubbedWithBleach(x))", "score": 0}
{"id": "eqasc_validation_1084", "prediction": "all x.((Area(x) & -ScrubbedWithBleach(x)) -> CoveredWithBacteria(x))", "score": 0}
{"id": "eqasc_validation_1085", "prediction": "all x.(Bacteria(x) -> CanCauseInfection(x))", "score": 0}
{"id": "eqasc_validation_1086", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CouldResultInInfection(x))", "score": 0}
{"id": "eqasc_validation_1087", "prediction": "all x.(Bacteria(x) -> SmallestOfMicroscopicOrganisms(x))", "score": 0}
{"id": "eqasc_validation_1088", "prediction": "all x.((Surface(x) & -Sterilized(x)) -> CoveredWithMicroscopicOrganisms(x))", "score": 0}
{"id": "eqasc_validation_1089", "prediction": "all x.((Clean(x) & Sterilized(x)) -> LessLikelyToBreedBacteria(x))", "score": 0}
{"id": "eqasc_validation_1090", "prediction": "all x y.((SterilizingSurface(x) & Bacteria(y)) -> Reduces(x,y))", "score": 0}
{"id": "eqasc_validation_1091", "prediction": "all x.((PotentLiquidSterilant(x) & KillsAIDSAndViruses(x)) -> KillsOnSurfaces(x))", "score": 0}
{"id": "eqasc_validation_1092", "prediction": "all x.((Table(x) & UsesSterilent(x)) -> Sterilizes(x))", "score": 0}
{"id": "eqasc_validation_1093", "prediction": "all x.(Fluoride(x) -> DecreasesToothDecay(x))", "score": 0}
{"id": "eqasc_validation_1094", "prediction": "all x.(ToothDecay(x) -> (DestructionOfEnamel(x) & Teeth(x)))", "score": 0}
{"id": "eqasc_validation_1095", "prediction": "all x.(Fluid(x) -> DecreasesDestructionOfEmail(x))", "score": 0}
{"id": "eqasc_validation_1096", "prediction": "all x.(ToothDecay(x) -> (Poisonous(x) & MakesTeethUnsightly(x)))", "score": 0}
{"id": "eqasc_validation_1097", "prediction": "all x.(Fluoride(x) -> DecreasesPotentialForToothPain(x))", "score": 0}
{"id": "eqasc_validation_1098", "prediction": "all x.(Fluoride(x) -> PreventsDestructionOfToothEmilen(x))", "score": 0}
{"id": "eqasc_validation_1099", "prediction": "all x.(Flouride(x) -> PreventsDestructionOfToothEmilen(x))", "score": 0}
{"id": "eqasc_validation_1100", "prediction": "all x.(Cavity(x) -> (Carries(x) | TeethDecay(x)))", "score": 0}
{"id": "eqasc_validation_1101", "prediction": "all x.(Fluid(x) -> ReducesCavityFormation(x))", "score": 0}
{"id": "eqasc_validation_1102", "prediction": "all x.(Fluoride(x) -> (HydrofluoricAcid(x) & Salt(x)))", "score": 0}
{"id": "eqasc_validation_1103", "prediction": "all x y.((Salt(x) & HydrofluoricAcid(y)) -> DecreasesToothDecay(x,y))", "score": 0}
{"id": "eqasc_validation_1104", "prediction": "all x.(Water(x) -> ContainsFluid(x))", "score": 0}
{"id": "eqasc_validation_1105", "prediction": "all x.(Water(x) -> DecreasesToothDecay(x))", "score": 0}
{"id": "eqasc_validation_1106", "prediction": "all x.(Human(x) -> GetsFluorideInDrinkingWater(x))", "score": 0}
{"id": "eqasc_validation_1107", "prediction": "all x.(DrinkingWater(x) -> DecreasesToothDecay(x))", "score": 0}
{"id": "eqasc_validation_1108", "prediction": "all x.(Differentiation(x) -> (UnspecializedCells(x) & SpecializedCells(x)))", "score": 1}
{"id": "eqasc_validation_1109", "prediction": "all x y.((CellLine(x) & CellLine(y)) -> Specialization(x,y))", "score": 0}
{"id": "eqasc_validation_1110", "prediction": "all x.(Specialization(x) -> Distinctive(x))", "score": 0}
{"id": "eqasc_validation_1111", "prediction": "all x.(Neuron(x) -> SpecializedCell(x))", "score": 0}
{"id": "eqasc_validation_1112", "prediction": "all x y.((Differentiation(x) & Neuron(y)) -> CreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1113", "prediction": "all x.((PlantCell(x) & SpecializedDuringDevelopment(x)) -> SpecializedDuringDevelopment(x))", "score": 0}
{"id": "eqasc_validation_1114", "prediction": "all x y.((Plant(x) & Development(y)) -> SpecializedDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1115", "prediction": "all x.(HairCell(x) -> RequiresBrn3.1(x))", "score": -1}
{"id": "eqasc_validation_1116", "prediction": "all x.(Hair(x) -> SpecializedThroughDifference(x))", "score": 0}
{"id": "eqasc_validation_1117", "prediction": "all x.(Cell(x) -> BasicUnitOfLife(x))", "score": 0}
{"id": "eqasc_validation_1118", "prediction": "all x.(Differentiation(x) -> (UnspecializedBasicUnitsOfLife(x) & BecomesSpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1119", "prediction": "all x.(NerveCell(x) -> (Large(x) & Complicated(x) & HighlySpecialized(x)))", "score": 0}
{"id": "eqasc_validation_1120", "prediction": "all x.(Differential(x) -> NerveCellDevelopment(x))", "score": 0}
{"id": "eqasc_validation_1121", "prediction": "all x.(Neuron(x) -> HighlySpecializedCell(x))", "score": 0}
{"id": "eqasc_validation_1122", "prediction": "all x y.((Differentiation(x) & Neuron(y)) -> CreatedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1123", "prediction": "all x.(THelperCell(x) -> (DifferentToMemoryCells(x) & DifferentToEffectorCells(x)))", "score": 0}
{"id": "eqasc_validation_1124", "prediction": "all x.(THelperCell(x) -> (MemoryCell(x) | EffectorCell(x)))", "score": 0}
{"id": "eqasc_validation_1125", "prediction": "all x.((Method(x) | Process(x)) -> Activities(x))", "score": 0}
{"id": "eqasc_validation_1126", "prediction": "all x.(Differentiation(x) -> (UnspecializedCells(x) & SpecializedCells(x)))", "score": 1}
{"id": "eqasc_validation_1127", "prediction": "all x.(HagfishAncestors(x) -> earliestVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1128", "prediction": "all x.((Animal(x) & HasBackbone(x)) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1129", "prediction": "all x.((AncestorsOfHagfish(x) & Animal(x) & HasBackbone(x)) -> earliest(x))", "score": 0}
{"id": "eqasc_validation_1130", "prediction": "all x.((Descendant(x) & EarlyJawlessFish(x)) -> (presentInLampreys(x) | PresentInHagfishes(x)))", "score": 0}
{"id": "eqasc_validation_1131", "prediction": "all x.((Vertebrate(x) & JawlessFish(x)) -> Early(x))", "score": 0}
{"id": "eqasc_validation_1132", "prediction": "all x.(Vertebrates(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_validation_1133", "prediction": "all x.((Ancient(x) & Hagfish(x)) -> HadBackbones(x))", "score": 0}
{"id": "eqasc_validation_1134", "prediction": "all x y.((Haggfish(x) & Shark(y)) -> (Isosmotic(x) & SalineEnvironment(y)))", "score": 0}
{"id": "eqasc_validation_1135", "prediction": "all x.(Shark(x) -> (Vertebrate(x) & Vertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1136", "prediction": "all x.(Vertebrates(x) -> (Animal(x) & HasBackbone(x) & Horse(x)))", "score": 0}
{"id": "eqasc_validation_1137", "prediction": "all x.(Hagfish(x) -> (Ancestors(x,hagfish) & earliestAnimal(x) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1138", "prediction": "all x y.((Bone(x) & Vertebrate(y)) -> FoundIn(x,y))", "score": 0}
{"id": "eqasc_validation_1139", "prediction": "all x.(HasEarlyBones(x) -> AncestorsOfHagfish(x))", "score": 0}
{"id": "eqasc_validation_1140", "prediction": "all x.(AncestorsOfHagfish(x) -> (EarlyCreatureWithBones(x) & HasBones(x)))", "score": 0}
{"id": "eqasc_validation_1141", "prediction": "all x.(Vertebrates(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_validation_1142", "prediction": "all x.(Hagfish(x) -> (Ancestors(x,Hagfish) & EarlyAnimal(x) & HasBackbone(x)))", "score": 0}
{"id": "eqasc_validation_1143", "prediction": "all x y.((Ancestors(x) & Forefathers(y)) -> CanLegallyEarnedBySons(x,y))", "score": 0}
{"id": "eqasc_validation_1144", "prediction": "all x.(HagfishForefather(x) -> earliestVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1145", "prediction": "all x.(Haggfish(x) -> (JawlessFish(x) & ParasiticVertebrate(x)))", "score": 0}
{"id": "eqasc_validation_1146", "prediction": "all x y.((Acestors(x) & JawlessFish(y) & Parasitic(y)) -> EarlyVertebrate(x))", "score": 0}
{"id": "eqasc_validation_1147", "prediction": "all x.(HasBackbones(x) -> Vertebrate(x))", "score": 0}
{"id": "eqasc_validation_1148", "prediction": "all x.(Hagfish(x) -> HasBackbone(x))", "score": 0}
{"id": "eqasc_validation_1149", "prediction": "all x.(AquaticOrganism(x) -> (-ExtremeTemperature(x) | ExtremeMoisture(x)))", "score": 0}
{"id": "eqasc_validation_1150", "prediction": "all x.(Fish(x) -> UltimateAquaticOrganism(x))", "score": 0}
{"id": "eqasc_validation_1151", "prediction": "all x.(Fish(x) -> (-ExtremeTemperature(x) | ExtremeMoisture(x)))", "score": 0}
{"id": "eqasc_validation_1152", "prediction": "all x.(Fish(x) -> (-ExtremeTemperature(x) | ExtremeMoisture(x)))", "score": 0}
{"id": "eqasc_validation_1153", "prediction": "all x.(Triallate(x) -> (ToxicToFish(x) & ToOtherAquaticOrganisms(x)))", "score": 0}
{"id": "eqasc_validation_1154", "prediction": "(MoisturizingSkin) & MoisturizingSkin(MoisturizingSkin) & -MoisturizingSkin(MoisturizingSkin))", "score": -1}
{"id": "eqasc_validation_1155", "prediction": "all x.(AquaticOrganism(x) -> -MoisturizeSkin(x))", "score": 0}
{"id": "eqasc_validation_1156", "prediction": "all x.((Fish(x) | AquaticCreature(x)) -> -Exception(x))", "score": 0}
{"id": "eqasc_validation_1157", "prediction": "all x.(Fish(x) -> (-(TemperatureExtreme(x) | MoistureExtreme(x))))", "score": 0}
{"id": "eqasc_validation_1158", "prediction": "all x.(Fish(x) -> (-ExtremeTemperature(x) | ExtremeMoisture(x)))", "score": 0}
{"id": "eqasc_validation_1159", "prediction": "all x.(Wetting(x) -> ProvidesMoisture(x))", "score": 0}
{"id": "eqasc_validation_1160", "prediction": "all x.(AquaticOrganism(x) -> -(ExtremeTemperature(x) | ExtremeWetness(x)))", "score": 0}
{"id": "eqasc_validation_1161", "prediction": "all x y z.((Metal(x) & Rusts(x) & Metal(y) & Surface(z) & Orange(y)) -> OrangeOnSurface(y,z))", "score": 0}
{"id": "eqasc_validation_1162", "prediction": "all x.((Iron(x) & Oxidizes(x)) -> Rusts(x))", "score": 0}
{"id": "eqasc_validation_1163", "prediction": "all x.((IronOxidizes(x) & Metal(x)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1164", "prediction": "all x.(Moisture(x) -> (DamageMetal(x) & CausesRusting(x) & CausesCorrosion(x)))", "score": 0}
{"id": "eqasc_validation_1165", "prediction": "all x.(Moisture(x) -> CausesMetalToBecomeOrange(x))", "score": 0}
{"id": "eqasc_validation_1166", "prediction": "all x.(Iron(x) -> (RosesInPresenceOfOxygen(x) & RuinsInPresenceOfWater(x)))", "score": 0}
{"id": "eqasc_validation_1167", "prediction": "all x y.((Oxygen(x) & Water(y)) -> MetalToTurnOrange(x))", "score": 0}
{"id": "eqasc_validation_1168", "prediction": "all x.(RustStain(x) -> Oxidation(x))", "score": 0}
{"id": "eqasc_validation_1169", "prediction": "all x.((Metal(x) & Oxidation(x)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1170", "prediction": "all x.(Moisture(x) -> MainCauseOfRust(x))", "score": 0}
{"id": "eqasc_validation_1171", "prediction": "all x.(Moisture(x) -> TurnsMetalOrange(x))", "score": 0}
{"id": "eqasc_validation_1172", "prediction": "all x.(Iron(x) -> ActiveMetal(x))", "score": 0}
{"id": "eqasc_validation_1173", "prediction": "all x y z.((Iron(x) & Rusts(x) & Iron(y) & Surface(z)) -> Orange(y))", "score": 0}
{"id": "eqasc_validation_1174", "prediction": "all x.(IronOxygen(x) -> Rust(x))", "score": 0}
{"id": "eqasc_validation_1175", "prediction": "all x.((Metal(x) & ContainsIronOxide(x)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1176", "prediction": "all x.((PresenceOfOxygen(x) & PresenceOfWater(x)) -> IronBecomesOrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1177", "prediction": "all x.(Metal(x) -> TurnsToRose(x))", "score": 0}
{"id": "eqasc_validation_1178", "prediction": "all x.(Oxidation(x) -> MakesMetalOrange(x))", "score": 0}
{"id": "eqasc_validation_1179", "prediction": "all x y.((IronRushes(x) & Iron(y)) -> OrangeOnSurface(x))", "score": 0}
{"id": "eqasc_validation_1180", "prediction": "all x.(Steel(x) -> MostUsefulMetal(x))", "score": 0}
{"id": "eqasc_validation_1181", "prediction": "all x.((Steel(x) & Rusts(x)) -> Orange(x))", "score": 0}
{"id": "eqasc_validation_1182", "prediction": "all x.((Surface(x) & CastIron(x) & Steel(x)) -> SusceptibleToCorrosion(x))", "score": 0}
{"id": "eqasc_validation_1183", "prediction": "all x.((Surface(x) & CastIron(x) & Steel(x)) -> (SusceptibleToOrange(x)))", "score": 0}
{"id": "eqasc_validation_1184", "prediction": "all x.(YinMetal(x) -> (SmallMetal(x) & JeweleryMetal(x) & DecorativeMetal(x)))", "score": 0}
{"id": "eqasc_validation_1185", "prediction": "all x.((Jewelry(x) & Rusts(x)) -> MayBecomeOrange(x))", "score": 0}
{"id": "eqasc_validation_1186", "prediction": "all x.((Water(x) & CausesPartsToRust(x)) -> DamagesInjectors(x))", "score": 0}
{"id": "eqasc_validation_1187", "prediction": "all x y.((Water(x) & MetalSurface(y)) -> OrangeSurface(x,y))", "score": 0}
{"id": "eqasc_validation_1188", "prediction": "all x y z.((Sound(x) & Ear(y) & Sound(z) & Reaches(x,y)) -> CanBeHeard(x,z))", "score": 0}
{"id": "eqasc_validation_1189", "prediction": "all x.(SoundWaves(x) -> CausesEardrumVibration(x))", "score": 0}
{"id": "eqasc_validation_1190", "prediction": "all x y.((SonicWaves(x) & Eardrum(y)) -> Vibrate(x,y))", "score": 0}
{"id": "eqasc_validation_1191", "prediction": "all x.(SharpestSound(x) -> PerceivedInBrain(x))", "score": 0}
{"id": "eqasc_validation_1192", "prediction": "all x.((Noise(x) & ReachesBrain(x)) -> Processed(x))", "score": 0}
{"id": "eqasc_validation_1193", "prediction": "all x.(Sound(x) -> UsesSenseOfHearing(x))", "score": 0}
{"id": "eqasc_validation_1194", "prediction": "all x.(Ears(x) -> UsedForHearing(x))", "score": 0}
{"id": "eqasc_validation_1195", "prediction": "all x.(SoundWaves(x) -> MakesEarDrumVibrate(x))", "score": 0}
{"id": "eqasc_validation_1196", "prediction": "all x y z.((Wave(x) & Ear(y) & EarDrum(z)) -> (Reaches(x,y) & Vibrates(z,y) & CanHear(x,z)))", "score": 0}
{"id": "eqasc_validation_1197", "prediction": "all x.(Music(x) -> (Sound(x) | Energy(x)))", "score": 0}
{"id": "eqasc_validation_1198", "prediction": "all x y.((Music(x) & ReachesEar(x)) -> MusicCanBeHeard(y))", "score": 0}
{"id": "eqasc_validation_1199", "prediction": "all x.((MusicReachesEar(x) & ReachesEar(x)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1200", "prediction": "all x.(Music(x) -> (ProducedByVibrations(x) & Sound(x)))", "score": 0}
{"id": "eqasc_validation_1201", "prediction": "all x.((VibrationsReachEar(x)) -> MusicCanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1202", "prediction": "all x.(OtoacousticEmissions(x) -> GeneratesSounds(x))", "score": 0}
{"id": "eqasc_validation_1203", "prediction": "all x.((Vibration(x) & ReachesEar(x) & MakesNoise(x)) -> Otoacoustic(x))", "score": 0}
{"id": "eqasc_validation_1204", "prediction": "all x.((Vibrations(x) & ReachEars(x)) -> ChangedIntoSounds(x))", "score": 0}
{"id": "eqasc_validation_1205", "prediction": "all x.((Vibrations(x) & ReachEars(x)) -> CanBeHeard(x))", "score": 0}
{"id": "eqasc_validation_1206", "prediction": "all x y.((Mineral(x) & Mineral(y)) -> MeasuresHardnessRequiresScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1207", "prediction": "all x.((MohsScale(x) & Mineral(y)) -> UsedForRankingHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1208", "prediction": "all x y.((Mineral(x) & Scratching(x,y)) -> DeterminesRankingOnMohsScale(x))", "score": 0}
{"id": "eqasc_validation_1209", "prediction": "all x.(GemStone(x) -> HardMinerals(x))", "score": 0}
{"id": "eqasc_validation_1210", "prediction": "all x y.((GemStone(x) & GemStone(y)) -> MeasuresHardnessByCrushing(x,y))", "score": 0}
{"id": "eqasc_validation_1211", "prediction": "all x.(Mineral(x) -> ClassifiedByHardness(x))", "score": 0}
{"id": "eqasc_validation_1212", "prediction": "all x.((Mineral(x) & Scratching(x)) -> Classifies(x,y))", "score": 0}
{"id": "eqasc_validation_1213", "prediction": "all x.((Diamond(x) & ShapeOfDiamondStructure(x)) -> SoHard(x))", "score": 0}
{"id": "eqasc_validation_1214", "prediction": "all x.(Diamond(x) -> (Measures(x,Diamonds) & Scratches(x,Diamonds)))", "score": 0}
{"id": "eqasc_validation_1215", "prediction": "all x.((MeasuresGemHardness(x) & ScratchesGems(x)) -> RequiresCratching(x))", "score": 0}
{"id": "eqasc_validation_1216", "prediction": "all x.((Mineral(x) & MohsScale(x)) -> Scratch(x))", "score": 0}
{"id": "eqasc_validation_1217", "prediction": "all x.(Calcite(x) -> VeryCommonMineral(x))", "score": 0}
{"id": "eqasc_validation_1218", "prediction": "all x y.((MeasuringHardnessOfCalcite(x) & Calcite(y)) -> Scratches(x,y))", "score": 0}
{"id": "eqasc_validation_1219", "prediction": "all x.((CarbonateMineral(x) & Malachite(x) & Pearl(x) & Rhodochrosite(x)) -> DamagedByChemicalAttack(x))", "score": 0}
{"id": "eqasc_validation_1220", "prediction": "all x y.((Pearl(x) & Pearl(y)) -> MeasuresHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1221", "prediction": "all x.(Diamond(x) -> (HarstSubstanceKnownToMan(x) & (Chipped(x) | Scrubbed(x))))", "score": 0}
{"id": "eqasc_validation_1222", "prediction": "all x y.((Mineral(x) & Mineral(y)) -> MeasuresHardnessRequiresChips(x,y))", "score": 0}
{"id": "eqasc_validation_1223", "prediction": "all x.(Travel(x) -> Necessary(x))", "score": 0}
{"id": "eqasc_validation_1224", "prediction": "all x.((MeasuresHardness(x) & Scratches(x)) -> Necessary(x))", "score": 0}
{"id": "eqasc_validation_1225", "prediction": "all x y.((HarderMineral(x) & SofterMineral(y)) -> CanScratch(x,y))", "score": 0}
{"id": "eqasc_validation_1226", "prediction": "all x.(MeasuringHardnessOfMinerals(x) -> RequiresHarshMineral(x))", "score": 0}
{"id": "eqasc_validation_1227", "prediction": "all x y.((MohScale(x) & Mineral(y)) -> DefinesHardness(x,y))", "score": 0}
{"id": "eqasc_validation_1228", "prediction": "all x y.((MohScale(x) & MohScale(y)) -> RequiresScraping(x,y))", "score": 0}
{"id": "eqasc_validation_1229", "prediction": "all x.(Damage(x) -> Scratch(x))", "score": 0}
{"id": "eqasc_validation_1230", "prediction": "all x.((MineralHardness(x) & DamagesMinerals(x)) -> MeasuresHardness(x))", "score": 0}
{"id": "eqasc_validation_1231", "prediction": "all x y.((Mineral(x) & Scratching(x,y)) -> DeterminesPlaceOnMohsScale(x,y))", "score": 0}
{"id": "eqasc_validation_1232", "prediction": "all x y.((Mineral(x) & MohsScaleOfHardness(y)) -> FiguredOut(x,y))", "score": 0}
{"id": "eqasc_validation_1233", "prediction": "all x.(MohsScaleOfHardness(x) -> ScratchesMaterials(x))", "score": 0}
{"id": "eqasc_validation_1234", "prediction": "all x y.((Satellite(x) & Space(y)) -> TakesImagesFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1235", "prediction": "all x.(Image(x) -> (Satellite(x) | Infrared(x)))", "score": 0}
{"id": "eqasc_validation_1236", "prediction": "all x y.((Satellite(x) & Space(y)) -> TakesInfraredPictures(x,y))", "score": 0}
{"id": "eqasc_validation_1237", "prediction": "all x y.((Meteorologist(x) & Satellite(y)) -> EmploysImagesToPredictWeather(x,y))", "score": 0}
{"id": "eqasc_validation_1238", "prediction": "all x y.((Satellite(x) & Weather(y)) -> CanHelpPredict(x,y))", "score": 0}
{"id": "eqasc_validation_1239", "prediction": "all x.(Image(x) -> TakenFromSpace(x))", "score": 0}
{"id": "eqasc_validation_1240", "prediction": "all x y.((Satellite(x) & Earth(y)) -> TakesImagesOf(x,y))", "score": 0}
{"id": "eqasc_validation_1241", "prediction": "all x.(SatelliteImagery(x) -> GlobalPerspectiveOnOzoneHole(x))", "score": 0}
{"id": "eqasc_validation_1242", "prediction": "all x y.((Image(x) & Space(y)) -> UsedToStudyOzoneHole(x,y))", "score": 0}
{"id": "eqasc_validation_1243", "prediction": "all x.(Photo(x) -> DigitalImage(x))", "score": 0}
{"id": "eqasc_validation_1244", "prediction": "all x y.((Satellite(x) & Space(y)) -> TakesPhotosFrom(x,y))", "score": 0}
{"id": "eqasc_validation_1245", "prediction": "all x y.((Satellite(x) & Earth(y)) -> TakesPicturesFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1246", "prediction": "all x y.((Meteorologist(x) & WeatherImage(y)) -> ReliesOn(x,y))", "score": 0}
{"id": "eqasc_validation_1247", "prediction": "all x y.((Meteorologist(x) & Satellite(y)) -> ReliesOnForData(x,y))", "score": 0}
{"id": "eqasc_validation_1248", "prediction": "all x.(SatelliteImage(x) -> DigitalPhotograph(x))", "score": 0}
{"id": "eqasc_validation_1249", "prediction": "all x y.((Satellite(x) & DigitalPhotograph(y)) -> TakesFromSpace(x,y))", "score": 0}
{"id": "eqasc_validation_1250", "prediction": "all x y.((SeatBelt(x) & Car(y)) -> PreventsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1251", "prediction": "all x.(Child(x) -> Passenger(x))", "score": 0}
{"id": "eqasc_validation_1252", "prediction": "all x y.((SeatBelt(x) & Child(y)) -> PreventsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1253", "prediction": "all x.(SeatBelt(x) -> SavesLives(x))", "score": 0}
{"id": "eqasc_validation_1254", "prediction": "all x y.((Car(x) & Passenger(y)) -> PreventsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1255", "prediction": "all x.(CarAccident(x) -> LeadingCauseOfDeath(x))", "score": 0}
{"id": "eqasc_validation_1256", "prediction": "all x.(SeatBelt(x) -> HelpsPreventDeath(x))", "score": 0}
{"id": "eqasc_validation_1257", "prediction": "all x y.((Crash(x) & UnbeltedPassenger(y) & Colliding(y,x)) -> Injured(x,y))", "score": 0}
{"id": "eqasc_validation_1258", "prediction": "all x y.((SeatBelt(x) & Passenger(y)) -> (UsedForEvitingInjuries(x,y) & InCrashes(x,y)))", "score": 0}
{"id": "eqasc_validation_1259", "prediction": "all x.(Helmet(x) -> (PreventsInjuries(x) & PreventsDeath(x)))", "score": 0}
{"id": "eqasc_validation_1260", "prediction": "all x y.((SeatBelt(x) & Helmet(y)) -> ProtectsPassengers(x,y))", "score": 0}
{"id": "eqasc_validation_1261", "prediction": "all x.(Injury(x) -> CausedByAccident(x))", "score": 0}
{"id": "eqasc_validation_1262", "prediction": "all x.((SeatBelt(x) & Accident(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1263", "prediction": "all x.(SeatBelt(x) -> ProvidesPrimaryProtection(x))", "score": 0}
{"id": "eqasc_validation_1264", "prediction": "all x y.((CarCrashes(x) & Passenger(y)) -> CanInjure(x,y))", "score": 0}
{"id": "eqasc_validation_1265", "prediction": "all x.(WhiplashInjuries(x) -> SoftTissueInjuries(x))", "score": 0}
{"id": "eqasc_validation_1266", "prediction": "all x.(SeatBelt(x) -> PreventsWhiplash(x))", "score": 0}
{"id": "eqasc_validation_1267", "prediction": "all x y.((SeatBelt(x) & Vehicle(y)) -> PreventsInjuries(x,y))", "score": 0}
{"id": "eqasc_validation_1268", "prediction": "all x y.((Vehicle(x) & Swerves(x)) -> (InjuriesToDrivers(x) & InjuriesToPassengers(x)))", "score": 0}
{"id": "eqasc_validation_1269", "prediction": "all x.(Seatbelt(x) -> PreventsInjuries(x))", "score": 0}
{"id": "eqasc_validation_1270", "prediction": "all x y.((WaldronBolt(x) & LeadFoil(y)) -> MadeUpSeatbelts(x,y))", "score": 0}
{"id": "eqasc_validation_1271", "prediction": "all x y.((WaldronBolt(x) & Car(y)) -> (BladesWithLead(x) & PreventsInjuries(x,y)))", "score": 0}
{"id": "eqasc_validation_1272", "prediction": "all x y.((Wildfire(x) & Ecosystem(y)) -> ChangesDirriously(x,y))", "score": 0}
{"id": "eqasc_validation_1273", "prediction": "all x.(Ecosystem(x) -> (Neighborhood(x) & InNature(x)))", "score": 0}
{"id": "eqasc_validation_1274", "prediction": "all x y.((Wildfire(x) & Neighborhood(y)) -> ChangesDirtuallyInNature(x,y))", "score": 0}
{"id": "eqasc_validation_1275", "prediction": "all x.(Human(x) -> StartsWildfire(x))", "score": 0}
{"id": "eqasc_validation_1276", "prediction": "all x y.((Human(x) & Ecosystem(y)) -> CanChangeDramaticly(x,y))", "score": 0}
{"id": "eqasc_validation_1277", "prediction": "all x.(Fire(x) -> NaturalPartForestEcosystem(x))", "score": 0}
{"id": "eqasc_validation_1278", "prediction": "all x y.((Wildfire(x) & Forest(y)) -> Changes(x,y))", "score": 0}
{"id": "eqasc_validation_1279", "prediction": "all x.(Ecosystem(x) -> exists y.(Species(y) & Community(x,y)) & exists z.(Area(z) & InArea(x,z))))", "score": -1}
{"id": "eqasc_validation_1280", "prediction": "all x y z.((Wildfire(x) & CommunityOfSpecies(y) & Area(z)) -> ChangesDramaticly(x,y,z))", "score": 0}
{"id": "eqasc_validation_1281", "prediction": "all x y.((Weather(x) & Wildfire(y)) -> ActsInEcosystems(x,y))", "score": 0}
{"id": "eqasc_validation_1282", "prediction": "all x y.((Weather(x) & Ecosystem(y)) -> ChangesDramaticly(x,y))", "score": 0}
{"id": "eqasc_validation_1283", "prediction": "all x y.((ForestFire(x) & Ecosystem(y)) -> CanChange(x,y))", "score": 0}
{"id": "eqasc_validation_1284", "prediction": "all x.((LargeEcosystem(x) & Biome(x)) -> KnownAs(x))", "score": 0}
{"id": "eqasc_validation_1285", "prediction": "all x y.((Wildfire(x) & Biome(y)) -> ChangesDramaticly(x,y))", "score": 0}
{"id": "eqasc_validation_1286", "prediction": "all x.(ForestEcosystem(x) -> (Dynamic(x) & EverChange(x)))", "score": 0}
{"id": "eqasc_validation_1287", "prediction": "all x y.((Wildfire(x) & Forest(y)) -> ChangesDirriously(x,y))", "score": 0}
{"id": "eqasc_validation_1288", "prediction": "all x y z.((ForestFire(x) & Ecosystem(y) & Ecosystem(z)) -> ChangesDirriously(x,y,z))", "score": 0}
{"id": "eqasc_validation_1289", "prediction": "all x.(Wildfire(x) -> (BurnsUncontrollablyAcrossMexico(x) & DestroysRarePlantsAndAnimals(x)))", "score": 0}
{"id": "eqasc_validation_1290", "prediction": "all x y.((UncontrollableBurning(x) & Ecosystem(y)) -> ChangesDramaticly(x,y))", "score": 0}
{"id": "eqasc_validation_1291", "prediction": "all x.(Biome(x) -> GlobalEcosystem(x))", "score": 0}
{"id": "eqasc_validation_1292", "prediction": "all x y.((Wildfire(x) & Biome(y)) -> CanCruciallyChange(x,y))", "score": 0}
{"id": "eqasc_validation_1293", "prediction": "all x.(Wildfire(x) -> ScorchesWest(x))", "score": 0}
{"id": "eqasc_validation_1294", "prediction": "all x y.((West(x) & Ecosystem(y)) -> ExperiencesDrasticChanges(x,y))", "score": 0}
{"id": "eqasc_validation_1295", "prediction": "all x.(Seeing(x) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1296", "prediction": "all x.(LooksAroundEveryDay(x) -> SeesColor(x))", "score": 0}
{"id": "eqasc_validation_1297", "prediction": "all x.(LooksAroundEveryDay(x) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1298", "prediction": "all x.(Light(x) -> EssentialToVision(x))", "score": 0}
{"id": "eqasc_validation_1299", "prediction": "all x y.((Seen(x) & Vision(y)) -> Same(x,y))", "score": 0}
{"id": "eqasc_validation_1300", "prediction": "all x.(Light(x) -> exists y.(Rayon(y) & EyesCanSee(x,y)))", "score": 0}
{"id": "eqasc_validation_1301", "prediction": "all x.(Eyes(x) -> RequiresLight(x))", "score": 0}
{"id": "eqasc_validation_1302", "prediction": "all x.(Sight(x) -> (Sees(x) & EyeResponsesToLight(x)))", "score": 0}
{"id": "eqasc_validation_1303", "prediction": "all x.(Eyes(x) -> RequiresLightShiningInto(x,y))", "score": 0}
{"id": "eqasc_validation_1304", "prediction": "all x.(Human(x) -> SeesWithEyes(x))", "score": 0}
{"id": "eqasc_validation_1305", "prediction": "all x.(Vision(x) -> CanSee(x))", "score": 0}
{"id": "eqasc_validation_1306", "prediction": "all x.((Light(x) & Vision(x)) -> Requires(x,Light))", "score": 0}
{"id": "eqasc_validation_1307", "prediction": "all x y.((Pupil(x) & Light(y)) -> ComesThrough(x,y))", "score": 0}
{"id": "eqasc_validation_1308", "prediction": "all x y.((Seen(x) & Pupil(y)) -> Requires(x,y))", "score": 0}
{"id": "eqasc_validation_1309", "prediction": "all x y.((MeterStick(x) & MeasureDistance(y)) -> UsedToMeasureDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1310", "prediction": "all x.(Spacing(x) -> (CenterMeasurements(x) | DistanceBetweenPlants(x)))", "score": 0}
{"id": "eqasc_validation_1311", "prediction": "all x.(MeterStick(x) -> MeasuresSpaceBetween(x))", "score": 0}
{"id": "eqasc_validation_1312", "prediction": "all x.((Depth(x) | Distance(x)) -> RepresentedInMeters(x))", "score": 0}
{"id": "eqasc_validation_1313", "prediction": "all x y.((MeterStick(x) & Meter(y)) -> MeasuresMeters(x,y))", "score": 0}
{"id": "eqasc_validation_1314", "prediction": "all x y.((MeasuresDistances(x) & MeasuresDevice(y)) -> MeasuresDistances(x,y))", "score": 0}
{"id": "eqasc_validation_1315", "prediction": "all x.(MeterStick(x) -> MeasurementDevice(x))", "score": 0}
{"id": "eqasc_validation_1316", "prediction": "all x.(BoatBrokerage(x) & BoatDepot(x)) -> WithinWalkingDistance(x))", "score": -1}
{"id": "eqasc_validation_1317", "prediction": "all x y z.((BoatBrokers(x) & BoatDemandator(y) & MeterStick(z)) -> MeasuresPath(x,y,z))", "score": 0}
{"id": "eqasc_validation_1318", "prediction": "all x.(MeterStick(x) -> (HasCentimeter(x) | HasMillimeter(x)))", "score": 0}
{"id": "eqasc_validation_1319", "prediction": "all x.((Centimeter(x) | Millimeter(x)) -> DistanceUnit(x))", "score": 0}
{"id": "eqasc_validation_1320", "prediction": "all x.(Distance(x) -> (InMeters(x) & ByTheWay(x)))", "score": 0}
{"id": "eqasc_validation_1321", "prediction": "all x.(MeterStick(x) -> MeasuresMeters(x))", "score": 0}
{"id": "eqasc_validation_1322", "prediction": "all x y.((Person(x) & Object(y)) -> DifferentDistance(x,y))", "score": 0}
{"id": "eqasc_validation_1323", "prediction": "all x y z.((MeterStick(x) & Person(y) & Object(z)) -> MeasuresBetween(x,y,z))", "score": 0}
{"id": "eqasc_validation_1324", "prediction": "all x.(MeterStick(x) -> 100Cm(x))", "score": 0}
{"id": "eqasc_validation_1325", "prediction": "all x.((100Cm(x) & Meter(x)) -> Meter(x))", "score": 0}
{"id": "eqasc_validation_1326", "prediction": "all x.((Stick(x) & 100Cm(x)) -> MeasuresDistance(x))", "score": 0}
{"id": "eqasc_validation_1327", "prediction": "all x.(Space(x) -> DistanceBetween(x))", "score": 0}
{"id": "eqasc_validation_1328", "prediction": "all x y.((MeterStick(x) & Things(y)) -> MeasuresSpaceBetween(x,y))", "score": 0}
{"id": "eqasc_validation_1329", "prediction": "all x.(Length(x) -> (TimeOfRide(x) & DistancesAvailable(x)))", "score": 0}
{"id": "eqasc_validation_1330", "prediction": "all x.(MeterStick(x) -> MeasuresLength(x))", "score": 0}
{"id": "eqasc_validation_1331", "prediction": "all x.(Distance(x) -> InFeet(x))", "score": 0}
{"id": "eqasc_validation_1332", "prediction": "all x.(MeterStick(x) -> MeasuresFeet(x))", "score": 0}
{"id": "eqasc_validation_1333", "prediction": "all x.(TransactionMeasurement(x) -> Calculated(x))", "score": 0}
{"id": "eqasc_validation_1334", "prediction": "all x y.((MeterStick(x) & Distance(y)) -> Calculates(x,y))", "score": 0}
{"id": "eqasc_validation_1335", "prediction": "all x y.((LossOfOzone(x) & Antarctica(y)) -> CreatedOzoneHole(x,y))", "score": 0}
{"id": "eqasc_validation_1336", "prediction": "all x y.((Scientist(x) & OzoneDisruptingIndustrialChemicals(y)) -> MajorCauseOfOzoneLoss(x,y))", "score": 0}
{"id": "eqasc_validation_1337", "prediction": "all x y z.((Chemicals(x) & Ozone(y) & Antarctica(z)) -> CreatedHoleInOzone(x,y,z))", "score": 0}
{"id": "eqasc_validation_1338", "prediction": "all x.(Antarctica(x) -> ThreatenedByDepletion(x))", "score": 0}
{"id": "eqasc_validation_1339", "prediction": "all x.(LossOfOzone(x) -> OzoneHole(x))", "score": 0}
{"id": "eqasc_validation_1340", "prediction": "all x.(GlobalWarming(x) -> HoleInOzoneLayerOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1341", "prediction": "all x y.((GlobalWarming(x) & OzoneHole(y)) -> Created(x,y))", "score": 0}
{"id": "eqasc_validation_1342", "prediction": "all x.(OzoneDepletion(x) -> CausesGlobalWarming(x))", "score": 0}
{"id": "eqasc_validation_1343", "prediction": "all x y.((HoleOverAntarctica(x) & Antarctica(y)) -> CausesGlobalWarming(x,y))", "score": 0}
{"id": "eqasc_validation_1344", "prediction": "all x.(Ozone(x) -> NaturalComponentOfAtmosphere(x))", "score": 0}
{"id": "eqasc_validation_1345", "prediction": "all x y.((LossOfNaturalComponentOfAtmosphere(x) & NaturalComponentOfAtmosphere(y)) -> CreatedHoleOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1346", "prediction": "all x.(OzoneLoss(x) -> (IntenseUltravioletRadiation(x) & UpperStratosphere(x)))", "score": 0}
{"id": "eqasc_validation_1347", "prediction": "all x y.((IntenseUltravioletRadiation(x) & UpperStratosphere(y)) -> CreatedOzoneHoleOverAntarctica(x))", "score": 0}
{"id": "eqasc_validation_1348", "prediction": "all x.(OzoneLoss(x) -> Rapid(x))", "score": 0}
{"id": "eqasc_validation_1349", "prediction": "all x.(Ozone(x) -> DisappearingRapidly(x))", "score": 0}
{"id": "eqasc_validation_1350", "prediction": "all x.(OzoneDepletion(x) -> (AllowsMoreUltravioletRadiation(x) & CausesSkinCancer(x)))", "score": 0}
{"id": "eqasc_validation_1351", "prediction": "all x y.((Person(x) & LivingNearAntartica(x)) -> (ElevatedSkinCancerRisk(x) & IncreasedUltravioletRadiation(y)))", "score": 0}
{"id": "eqasc_validation_1352", "prediction": "all x.(Ozone(x) -> (AtmosphericChemical(x) & ProtectiveUVShield(x)))", "score": 0}
{"id": "eqasc_validation_1353", "prediction": "all x y.((HoleOverAntarctica(x) & Antarctica(y)) -> ReducesUVShielding(x,y))", "score": 0}
{"id": "eqasc_validation_1354", "prediction": "all x y.((AnnualOzoneHole(x) & Antarctica(y)) -> ObservedFromThe80s(x,y))", "score": 0}
{"id": "eqasc_validation_1355", "prediction": "all x y.((LossOzone(x) & SouthPole(y)) -> CreatedHoleOver(x,y))", "score": 0}
{"id": "eqasc_validation_1356", "prediction": "all x.(Ozone(x) -> (TriatomicOxygen(x) & O3.(Ozone))))", "score": -1}
{"id": "eqasc_validation_1357", "prediction": "all x y.((LossOfTriatomicOxygen(x) & Antarctica(y)) -> CreatedTriatomicOxygenHole(x,y))", "score": 0}
{"id": "eqasc_validation_1358", "prediction": "all x y.((HighMountain(x) & WellRoundedPeak(x) & CrasstalPlate(y)) -> FormedByCollision(x,y))", "score": 0}
{"id": "eqasc_validation_1359", "prediction": "all x.((PlatesCollide(x) & Earthquake(x)) -> CollisionResult(x))", "score": 0}
{"id": "eqasc_validation_1360", "prediction": "all x y.((Earthquake(x) & HighMountain(y) & WellRoundedPeak(y)) -> CanResultInFormation(x,y))", "score": 0}
{"id": "eqasc_validation_1361", "prediction": "all x y.((Earthquake(x) & EarthsCrustalPlates(y) & GrindAndShiftAlong(y,x)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1362", "prediction": "all x y.((Earthquake(x) & Area(y) & HighMountains(y) & WellRoundedPeaks(y)) -> CanOccur(x,y))", "score": 0}
{"id": "eqasc_validation_1363", "prediction": "all x.(PlateTectonics(x) -> (MovementOfCrustalPlates(x) & OnSurfaceOfEarth(x)))", "score": 0}
{"id": "eqasc_validation_1364", "prediction": "all x.(PlateTectonics(x) -> (FormsHighMountains(x) & WellRoundedPeaks(x)))", "score": 0}
{"id": "eqasc_validation_1365", "prediction": "all x.(PlateTectonics(x) -> (StudiesCrustalPlates(x) & StudiesCrustalPlateBoundaries(x)))", "score": 0}
{"id": "eqasc_validation_1366", "prediction": "all x.((HighMountain(x) & PlateTectonics(x)) -> CanExplainFormation(x))", "score": 0}
{"id": "eqasc_validation_1367", "prediction": "all x.((Phenomenon(x) & Collision(x) & Subduction(x)) -> Earthquakes(x))", "score": 0}
{"id": "eqasc_validation_1368", "prediction": "all x y.((Earthquake(x) & HighMountain(y)) -> FormsInSameManner(x,y))", "score": 0}
{"id": "eqasc_validation_1369", "prediction": "all x.(Himalaya(x) -> (FormedByCrisisalPlateCollusion(x) & CrustalPlateCollusion(x)))", "score": 0}
{"id": "eqasc_validation_1370", "prediction": "all x.(Volcano(x) -> (OnEarth(x) & CollidingBoundariesOfGrandeCrustalPlates(x)))", "score": 0}
{"id": "eqasc_validation_1371", "prediction": "all x.(Volcano(x) -> (LikelyToBeFoundNearHighMountains(x)))", "score": 0}
{"id": "eqasc_validation_1372", "prediction": "all x y.((HighMountain(x) & WellRoundedPeaks(x) & PlateTectonics(y)) -> FormedByCollusion(x,y))", "score": 0}
{"id": "eqasc_validation_1373", "prediction": "all x y.((HighMountain(x) & WellRoundedPeak(x) & PlateTectonics(y) & CollisionOfPlateTectonics(x,y)) -> FormedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1374", "prediction": "all x.(Infancy(x) -> (RapidGrowthAfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1375", "prediction": "all x.((Baby(x) & RapidGrowthPeriod(x)) -> LearnsMost(x))", "score": 0}
{"id": "eqasc_validation_1376", "prediction": "all x.(Baby(x) -> BornWithLowBirthWeight(x))", "score": 0}
{"id": "eqasc_validation_1377", "prediction": "all x.(Infancy(x) -> (RapidGrowthAfterBirth(x) & Born(x)))", "score": 0}
{"id": "eqasc_validation_1378", "prediction": "all x.(Learning(x) -> Infancy(x))", "score": 0}
{"id": "eqasc_validation_1379", "prediction": "all x.((Birth(x) & Learning(x)) -> Starts(x))", "score": 0}
{"id": "eqasc_validation_1380", "prediction": "all x.((Baby(x) & VeryYoung(x)) -> (CoSleeping(x) & Infancy(x)))", "score": 0}
{"id": "eqasc_validation_1381", "prediction": "all x.((Baby(x) & VeryYoung(x)) -> MostRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1382", "prediction": "all x.(Baby(x) -> (RapidGrowthAfterBirth(x) & MostRapidGrowthAfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1383", "prediction": "all x.((Baby(x) & Baby(x)) -> MostRapidGrowthAfterBirth(x))", "score": 0}
{"id": "eqasc_validation_1384", "prediction": "all x.(Infancy(x) -> HasThreeStages(x))", "score": 0}
{"id": "eqasc_validation_1385", "prediction": "all x.((Stage(x) & AfterBirth(x)) -> MostRapidGrowthInLife(x))", "score": 0}
{"id": "eqasc_validation_1386", "prediction": "all x.((Infancy(x) | EarlyChildhood(x)) -> (RapidGrowth(x) & RapidDevelopment(x)))", "score": 0}
{"id": "eqasc_validation_1387", "prediction": "all x.((Crowd(x) & Childhood(x)) -> RapidDevelopment(x))", "score": 0}
{"id": "eqasc_validation_1388", "prediction": "all x y.((Development(x) & Growth(y)) -> (GetBetter(x) & GetBigger(y)))", "score": 0}
{"id": "eqasc_validation_1389", "prediction": "all x.(Infancy(x) -> (RapidlyGrowingBiggerAfterBirth(x) & AfterBirth(x)))", "score": 0}
{"id": "eqasc_validation_1390", "prediction": "all x.(Infant(x) -> BirthToOneYear(x))", "score": 0}
{"id": "eqasc_validation_1391", "prediction": "all x.(RapidGrowthPeriod(x) -> FirstYear(x))", "score": 0}
{"id": "eqasc_validation_1392", "prediction": "all x.((Infant(x) | Child(x) | Teen(x)) -> HighNutritionNeeds(x))", "score": 0}
{"id": "eqasc_validation_1393", "prediction": "all x.((Infant(x) & HighNutrition(x)) -> FuelsGrowth(x))", "score": 0}
{"id": "eqasc_validation_1394", "prediction": "all x.(Birth(x) -> WrittenUpBirthCertificate(x))", "score": 0}
{"id": "eqasc_validation_1395", "prediction": "all x.(Infancy(x) -> (RapidGrowthAfterBirth(x) & Born(x)))", "score": 0}
{"id": "eqasc_validation_1396", "prediction": "all x.(Communication(x) -> InFancy(x))", "score": 0}
{"id": "eqasc_validation_1397", "prediction": "all x y.((Communication(x) & Birth(y)) -> MostRapidGrowthAfterBirth(x,y))", "score": 0}
{"id": "eqasc_validation_1398", "prediction": "all x.(RapidGrowth(x) -> RapidAdvancement(x))", "score": 0}
{"id": "eqasc_validation_1399", "prediction": "all x.(Infancy(x) -> (RapidAdvancement(x) & MostRapidAdvancement(x)))", "score": 0}
{"id": "eqasc_validation_1400", "prediction": "all x.((Food(x) & MoistenedBySaline(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1401", "prediction": "all x.(SalivaryGlandCancer(x) -> SalivaryGland(x))", "score": 0}
{"id": "eqasc_validation_1402", "prediction": "all x y.((Food(x) & OralCavity(y) & MoistenedBySaline(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1403", "prediction": "all x.(FavoriteFood(x) -> Steak(x))", "score": 0}
{"id": "eqasc_validation_1404", "prediction": "all x.((Steak(x) & MoistenedBySaline(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1405", "prediction": "all x y.((Food(x) & Mouth(y)) -> (Enters(x,y) & PartiallyBreakdown(x,y)))", "score": 0}
{"id": "eqasc_validation_1406", "prediction": "all x y.((Food(x) & Enzyme(y) & InMouth(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1407", "prediction": "all x.(Saline(x) -> ContainsDigestiveEnzymes(x))", "score": 0}
{"id": "eqasc_validation_1408", "prediction": "all x.((Food(x) & DigestiveEnzymes(x)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1409", "prediction": "all x.(SalivaryGlands(x) -> FoundInMouth(x))", "score": 0}
{"id": "eqasc_validation_1410", "prediction": "all x y.((Food(x) & Gliom(y) & MoisturedBySulfur(x,y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1411", "prediction": "all x.(BirdFood(x) -> BrainFood(x))", "score": 0}
{"id": "eqasc_validation_1412", "prediction": "all x.(Bagel(x) -> (MoistenedBySaline(x) & BagelsEasierToCheek(x)))", "score": 0}
{"id": "eqasc_validation_1413", "prediction": "all x y.((Feed(x) & Saliva(y)) -> (MixedWith(x,y) & MoistBbolus(x) & CanBeEasilySneaked(x)))", "score": 0}
{"id": "eqasc_validation_1414", "prediction": "all x.(Bulus(x) -> MoistenedFood(x))", "score": 0}
{"id": "eqasc_validation_1415", "prediction": "all x.(Saliva(x) -> ContributesMoreThan70PercentLiquid(x))", "score": 0}
{"id": "eqasc_validation_1416", "prediction": "all x y.((Food(x) & Liquid(y)) -> EasierToCheek(x))", "score": 0}
{"id": "eqasc_validation_1417", "prediction": "all x.(Milk(x) -> NutritiousFluid(x))", "score": 0}
{"id": "eqasc_validation_1418", "prediction": "all x.(CowsMilk(x) -> DesignedForBabyCows(x))", "score": 0}
{"id": "eqasc_validation_1419", "prediction": "all x.(Cow(x) -> MakesNutritiousFluid(x))", "score": 0}
{"id": "eqasc_validation_1420", "prediction": "all x.((Fluids(x) & PreventsDehydration(x) & NutritiousDiet(x)) -> Important(x))", "score": 0}
{"id": "eqasc_validation_1421", "prediction": "all x.(Milk(x) -> (Nutritious(x) & PreventsDehydration(x)))", "score": 0}
{"id": "eqasc_validation_1422", "prediction": "all x.(FluidMilk(x) -> (FortifiedWithVitaminD(x) & RichInCalcium(x)))", "score": 0}
{"id": "eqasc_validation_1423", "prediction": "all x.((Milk(x) & VitaminD(x) & Calcium(x)) -> Nutritious(x))", "score": 0}
{"id": "eqasc_validation_1424", "prediction": "all x.(BreastMilk(x) -> IdealNutritionForNewborn(x))", "score": 0}
{"id": "eqasc_validation_1425", "prediction": "all x.(Newborn(x) -> GetsNutritionFromBreasts(x))", "score": 0}
{"id": "eqasc_validation_1426", "prediction": "all x.(Milk(x) -> ComesFrom(x,Cows))", "score": 0}
{"id": "eqasc_validation_1427", "prediction": "all x.(MilkShake(x) -> HasMilk(x))", "score": 0}
{"id": "eqasc_validation_1428", "prediction": "all x.(Milkshake(x) -> NutritiousFluid(x))", "score": 0}
{"id": "eqasc_validation_1429", "prediction": "all x.(Cow(x) -> ProducesNutritiousFluid(x))", "score": 0}
{"id": "eqasc_validation_1430", "prediction": "all x.(Milk(x) -> PreventsDehydration(x))", "score": 0}
{"id": "eqasc_validation_1431", "prediction": "all x y.((Birth(x) & Offspring(y)) -> FollowedByParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_1432", "prediction": "all x y.((Parent(x) & Child(y)) -> TakesCareOf(x,y))", "score": 0}
{"id": "eqasc_validation_1433", "prediction": "all x y.((Birth(x) & ParentalNourishment(y)) -> FollowedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1434", "prediction": "all x y.((MonogamousSpecies(x) & MonogamousSpecies(y)) -> (Parent(x,y) & Offspring(x)))", "score": 0}
{"id": "eqasc_validation_1435", "prediction": "all x y.((ParentalCareAfterBirth(x) & ManogamousSpecies(y)) -> HandledBy(x,y))", "score": 0}
{"id": "eqasc_validation_1436", "prediction": "all x.((Child(x) & Offspring(x) & ImmatureOffspring(x)) -> Ambiguous(x))", "score": 0}
{"id": "eqasc_validation_1437", "prediction": "all x y.((Birth(x) & ParentalCare(y)) -> FollowedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1438", "prediction": "all x.(HumanBirth(x) -> RarestOfAllBirths(x))", "score": 0}
{"id": "eqasc_validation_1439", "prediction": "all x y.((Human(x) & Offspring(y)) -> HasParentalCare(x,y))", "score": 0}
{"id": "eqasc_validation_1440", "prediction": "all x.(Female(x) -> GivesBirthToSingleBaby(x))", "score": 0}
{"id": "eqasc_validation_1441", "prediction": "all x.(Baby(x) -> (Offspring(x) & Most likelyHasParentalCare(x)))", "score": -1}
{"id": "eqasc_validation_1442", "prediction": "all x.(Birth(x) -> Unique(x))", "score": 0}
{"id": "eqasc_validation_1443", "prediction": "all x y.((Child(x) & Born(x)) -> ParentsTakeCareOf(y,x))", "score": 0}
{"id": "eqasc_validation_1444", "prediction": "all x y.((Child(x) & Born(x)) -> (ParentalCare(y) & Offspring(x,y)))", "score": 0}
{"id": "eqasc_validation_1445", "prediction": "all x y.((Scale(x) & Weight(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1446", "prediction": "all x.(Result(x) -> MeasuredInPounds(x))", "score": 0}
{"id": "eqasc_validation_1447", "prediction": "all x y.((Scale(x) & Weight(y)) -> DeterminesInPounds(x,y))", "score": 0}
{"id": "eqasc_validation_1448", "prediction": "all x y.((Dimension(x) & Weight(y)) -> (InInches(x) & InPounds(y)))", "score": 0}
{"id": "eqasc_validation_1449", "prediction": "all x.(Scale(x) -> MeasuresPounds(x))", "score": 0}
{"id": "eqasc_validation_1450", "prediction": "WeaningWeight(w) -> (ExpressedInPounds(w) & WeaningWeight(w)))", "score": -1}
{"id": "eqasc_validation_1451", "prediction": "all x.(Scale(x) -> MeasuresPounds(x))", "score": 0}
{"id": "eqasc_validation_1452", "prediction": "all x.(Weight(x) -> InGas(x))", "score": 0}
{"id": "eqasc_validation_1453", "prediction": "all x y.((Scale(x) & Grams(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1454", "prediction": "all x.(Object(x) -> Weight(x))", "score": 0}
{"id": "eqasc_validation_1455", "prediction": "all x y.((Scales(x) & MeasuresForceOfGravity(x,y)) -> UsedForMeasuringForceOfGravity(x,y))", "score": 0}
{"id": "eqasc_validation_1456", "prediction": "all x.(Weight(x) -> InKg(x))", "score": 0}
{"id": "eqasc_validation_1457", "prediction": "all x.(Scales(x) -> MeasuresKg(x))", "score": 0}
{"id": "eqasc_validation_1458", "prediction": "all x.(Weight(x) -> InPounds(x))", "score": 0}
{"id": "eqasc_validation_1459", "prediction": "all x y.((Scale(x) & Pound(y)) -> MeasuresPounds(x,y))", "score": 0}
{"id": "eqasc_validation_1460", "prediction": "all x.(MeasuresObjectsWeightInGrams(x) -> MeasuresWeightInGrams(x))", "score": 0}
{"id": "eqasc_validation_1461", "prediction": "all x.(LanceletLarvae(x) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1462", "prediction": "all x.(Lancelet(x) -> (SmallFishlikeAnimal(x) & TaperedBody(x)))", "score": 0}
{"id": "eqasc_validation_1463", "prediction": "all x.((Larvae(x) & SmallFishlikeAnimal(x) & TaperedBody(x)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1464", "prediction": "all x.((Water(x) & Flows(x)) -> (DiveIn(x) & SwimThrough(x)))", "score": 0}
{"id": "eqasc_validation_1465", "prediction": "all x.(LanceletLarvae(x) -> LivesInWater(x))", "score": 0}
{"id": "eqasc_validation_1466", "prediction": "all x.((SmallFishlikeAnimal(x) & TaperedBody(x)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1467", "prediction": "all x.((EggsFertilized(x) & Larvae(x)) -> FreeSwimming(x))", "score": 0}
{"id": "eqasc_validation_1468", "prediction": "all x.((LanceletEggs(x) & Fertilized(x)) -> DevelopsSoCanNavigateInWater(x))", "score": 0}
{"id": "eqasc_validation_1469", "prediction": "all x.(Puperty(x) -> (BecomesSexuallyMature(x) & Human(x)))", "score": 0}
{"id": "eqasc_validation_1470", "prediction": "all x.(Boy(x) -> EntersPupilhoodAt(x,12))", "score": 0}
{"id": "eqasc_validation_1471", "prediction": "all x.((Boy(x) & Age(x,12)) -> SexuallyMature(x))", "score": 0}
{"id": "eqasc_validation_1472", "prediction": "all x.(WetDream(x) -> SignOfPupilhood(x))", "score": 0}
{"id": "eqasc_validation_1473", "prediction": "all x.(WetDream(x) -> SexualMaturity(x))", "score": 0}
{"id": "eqasc_validation_1474", "prediction": "all x.((Human(x) & Adolescence(x)) -> SexuallyMature(x))", "score": 0}
{"id": "eqasc_validation_1475", "prediction": "all x.((Growth(x) & Puberty(x)) -> UsuallyStops(x))", "score": 0}
{"id": "eqasc_validation_1476", "prediction": "all x.((Human(x) & SexuallyMature(x)) -> GrowthChance(x))", "score": 0}
{"id": "eqasc_validation_1477", "prediction": "all x y.((Breast(x) & Human(y) & SexuallyMature(x,y)) -> DevelopsDuring(x,y))", "score": 0}
{"id": "eqasc_validation_1478", "prediction": "all x.((Breast(x) & Human(y) & SexuallyMature(y)) -> Develops(x,y))", "score": 0}
{"id": "eqasc_validation_1479", "prediction": "all x.((Adolescent(x) & BeforePuberty(x)) -> HighestNutritionalDemand(x))", "score": 0}
{"id": "eqasc_validation_1480", "prediction": "all x y.((Adolescent(x) & SexualMaturity(y)) -> HighestNutritionalDemand(x,y))", "score": 0}
{"id": "eqasc_validation_1481", "prediction": "all x.(CircleGraph(x) -> DisplaysPercents(x))", "score": 0}
{"id": "eqasc_validation_1482", "prediction": "all x.(Fraction(x) -> (ExpressedAsPercent(x) | ExpressedAsPercent(x)))", "score": 0}
{"id": "eqasc_validation_1483", "prediction": "all x y.((CircleGraph(x) & Fraction(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1484", "prediction": "all x.(PieChart(x) -> (ShowsPercentageOrPartsOfWhole(x) & UsedForPartsOfWhole(x)))", "score": 0}
{"id": "eqasc_validation_1485", "prediction": "all x.(PieChart(x) -> (CircleGraph(x) & CircleGraph(x)))", "score": 0}
{"id": "eqasc_validation_1486", "prediction": "all x.(Percent(x) -> DecimalFraction(x))", "score": 0}
{"id": "eqasc_validation_1487", "prediction": "all x y.((CircleGraph(x) & DecimalFraction(y)) -> Shows(x,y))", "score": 0}
{"id": "eqasc_validation_1488", "prediction": "all x.(DataValue(x) -> ConvertedToPercentValue(x))", "score": 0}
{"id": "eqasc_validation_1489", "prediction": "all x.(CircleGraph(x) -> DisplaysDataValues(x))", "score": 0}
{"id": "eqasc_validation_1490", "prediction": "all x.(CircleGraph(x) -> (UsesCircle(x) | UsesPieGraph(x)) & DividedIntoSections(x)))", "score": -1}
{"id": "eqasc_validation_1491", "prediction": "all x.(Percentage(x) -> ShowData(x))", "score": 0}
{"id": "eqasc_validation_1492", "prediction": "all x.((CircleGraph(x) & PieChart(x)) -> MakesDataInList(x))", "score": 0}
{"id": "eqasc_validation_1493", "prediction": "all x.(PieChart(x) -> DisplaysPercents(x))", "score": 0}
{"id": "eqasc_validation_1494", "prediction": "all x.(CircleGraph(x) -> DisplaysDecimalFractions(x))", "score": 0}
{"id": "eqasc_validation_1495", "prediction": "all x y.((CircleGraph(x) & DecimalFraction(y)) -> Displays(x,y))", "score": 0}
{"id": "eqasc_validation_1496", "prediction": "all x.((Line(x) | Bar(x) | Circle(x) | PictorialGraph(x)) -> GoodApplication(x))", "score": 0}
{"id": "eqasc_validation_1497", "prediction": "all x.(Bar(x) -> (Graph(x) & Graph(x)))", "score": 0}
{"id": "eqasc_validation_1498", "prediction": "(Residents(x) & (Black(x) | Asian(x))) & (Latino(x) | Latino(x)))", "score": -1}
{"id": "eqasc_validation_1499", "prediction": "all x.(CircleGraph(x) -> (DisplaysBlackResidents(x) & DisplaysAsianResidents(x) & DisplaysLatinoResidents(x)))", "score": 0}
{"id": "eqasc_validation_1500", "prediction": "all x.(Percent(x) -> CanBeWrittenAsFractions(x))", "score": 0}
{"id": "eqasc_validation_1501", "prediction": "all x y.((CircleGraph(x) & Fraction(y)) -> CanDisplay(x,y))", "score": 0}
{"id": "eqasc_validation_1502", "prediction": "all x.(Percent(x) -> PartsPerSixty(x))", "score": 0}
{"id": "eqasc_validation_1503", "prediction": "all x.(CircleGraph(x) -> DisplaysPartsPerSixty(x))", "score": 0}
{"id": "eqasc_validation_1504", "prediction": "all x.(DisplayScreen(x) -> ShowsAll(x))", "score": 0}
{"id": "eqasc_validation_1505", "prediction": "all x y.((CircleGraph(x) & Percent(y)) -> Shows(x,y))", "score": 0}
{"id": "eqasc_validation_1506", "prediction": "all x y.((Compass(x) & Direction(y)) -> DeterminesDirection(x,y))", "score": 0}
{"id": "eqasc_validation_1507", "prediction": "all x.(CompassNeedle(x) -> LineUpWithMagneticFields(x))", "score": 0}
{"id": "eqasc_validation_1508", "prediction": "all x.(MagneticField(x) -> DeterminesDirection(x))", "score": 0}
{"id": "eqasc_validation_1509", "prediction": "all x.(Magnet(x) -> DetermineDirection(x))", "score": 0}
{"id": "eqasc_validation_1510", "prediction": "all x.((Distance(x) & Direction(x)) -> GPSBasedNavigation(x))", "score": 0}
{"id": "eqasc_validation_1511", "prediction": "all x y.((Compass(x) & Navigation(y)) -> UsedFor(x,y))", "score": 0}
{"id": "eqasc_validation_1512", "prediction": "all x.(Direction(x) -> 16PointCompassScale(x))", "score": 0}
{"id": "eqasc_validation_1513", "prediction": "all x.(Compass(x) -> DeterminesSixDifferentPoints(x))", "score": 0}
{"id": "eqasc_validation_1514", "prediction": "all x.(Navigation(x) -> (Compass(x) & -Compass(x)))", "score": 0}
{"id": "eqasc_validation_1515", "prediction": "all x y.((Navigation(x) & Direction(y)) -> Determines(x,y))", "score": 0}
{"id": "eqasc_validation_1516", "prediction": "all x y.((SatelliteTechnology(x) & Weather(y)) -> Predicts(x,y))", "score": 0}
{"id": "eqasc_validation_1517", "prediction": "all x y.((Meteorologist(x) & SatelliteTechnology(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1518", "prediction": "all x.(Meteorologist(x) -> UsesSatelliteTechnology(x))", "score": 0}
{"id": "eqasc_validation_1519", "prediction": "all x.(SatelliteTechnology(x) -> UsedByMeteologists(x))", "score": 0}
{"id": "eqasc_validation_1520", "prediction": "all x y.((Meteorologist(x) & SatelliteTechnology(y)) -> Uses(x,y))", "score": 0}
{"id": "eqasc_validation_1521", "prediction": "all x.((Rain(x) | Shine(x)) -> Weather(x))", "score": 0}
{"id": "eqasc_validation_1522", "prediction": "all x.(SatelliteTechnology(x) -> (PredictsRainOrShine(x) & PredictsRainOrShine(x)))", "score": 0}
{"id": "eqasc_validation_1523", "prediction": "all x.(Weather(x) -> OutsideDay(x))", "score": 0}
{"id": "eqasc_validation_1524", "prediction": "all x y.((SatelliteTechnology(x) & OutsideDay(y)) -> Predicts(x,y))", "score": 0}
{"id": "eqasc_validation_1525", "prediction": "all x y.((Technology(x) & Meteorologist(y)) -> HelpsDetectTornadoes(x,y))", "score": 0}
{"id": "eqasc_validation_1526", "prediction": "all x y z.((Meteorologist(x) & Satellite(y) & Tornado(z)) -> UsesToDetect(x,y,z))", "score": 0}
{"id": "eqasc_validation_1527", "prediction": "all x y.((Barometer(x) & AirPressure(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1528", "prediction": "all x.(AirPressurePressure(x) -> ActsOnUnitArea(x))", "score": 0}
{"id": "eqasc_validation_1529", "prediction": "all x y.((Barometer(x) & UnitArea(y)) -> MeasuresForce(x,y))", "score": 0}
{"id": "eqasc_validation_1530", "prediction": "all x.(AirPressure(x) -> MeasuresWeightOfAir(x))", "score": 0}
{"id": "eqasc_validation_1531", "prediction": "all x.(Barometer(x) -> MeasuresWeightOfAir(x))", "score": 0}
{"id": "eqasc_validation_1532", "prediction": "all x.(AtmosphericPressure(x) -> MeasuredByBarometer(x))", "score": 0}
{"id": "eqasc_validation_1533", "prediction": "all x.(Barometer(x) -> GaugesAtmosphericPressure(x))", "score": 0}
{"id": "eqasc_validation_1534", "prediction": "all x.((Air(x) & Barometer(x)) -> DeterminesWeight(x))", "score": 0}
{"id": "eqasc_validation_1535", "prediction": "all x.(Barometer(x) -> MeasuresAirPressure(x))", "score": 0}
{"id": "eqasc_validation_1536", "prediction": "all x y.((Barometer(x) & Air(y)) -> MeasuresWeight(x,y))", "score": 0}
{"id": "eqasc_validation_1537", "prediction": "all x y.((AirPressure(x) & AirUnit(y)) -> ForceAgainst(x,y))", "score": 0}
{"id": "eqasc_validation_1538", "prediction": "all x y z.((Barometer(x) & Air(y) & Area(z)) -> MeasuresForceAgainstUnitOfArea(x,y,z))", "score": 0}
{"id": "eqasc_validation_1539", "prediction": "all x.(Barometer(x) -> MeasuresAirWeight(x))", "score": 0}
{"id": "eqasc_validation_1540", "prediction": "all x.((Uses(x) & ElementalMercury(x)) -> (UsedInThermometers(x) | UsedInBarometers(x) | UsedInPressureSensingDevices(x)))", "score": 0}
{"id": "eqasc_validation_1541", "prediction": "all x.(ElementaryMercury(x) -> MeasuresAirPressure(x))", "score": 0}
{"id": "eqasc_validation_1542", "prediction": "all x y.((SafetyGoggles(x) & Experiment(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1543", "prediction": "all x.((Product(x) & EyeIrritating(x)) -> WearGoggles(x))", "score": 0}
{"id": "eqasc_validation_1544", "prediction": "all x.(Goggles(x) -> ProtectsAgainstIrritatings(x))", "score": 0}
{"id": "eqasc_validation_1545", "prediction": "all x.((Eye(x) & Eye(x) & Eye(x) & Eye(x) & Eye(x) & Eye(x) & Eye(x) & Eye(x)) -> Retina(x))", "score": 0}
{"id": "eqasc_validation_1546", "prediction": "all x y.((SafetyGoggles(x) & Experiment(y)) -> ProtectsRetina(x,y))", "score": 0}
{"id": "eqasc_validation_1547", "prediction": "all x.((Flexible(x) & (Early(x) | Goggles(x))) -> Better(x))", "score": 0}
{"id": "eqasc_validation_1548", "prediction": "all x y.((Plastic(x) & Experiment(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1549", "prediction": "all x.((ConcentratedAcids(x) & ConcentratedAlkalis(x)) -> NeededInAdditionToGggles(x))", "score": 0}
{"id": "eqasc_validation_1550", "prediction": "all x y.((Acid(x) & Experiment(y)) -> CanHarmEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1551", "prediction": "all x.(LabExperiment(x) -> GroupProject(x))", "score": 0}
{"id": "eqasc_validation_1552", "prediction": "all x.(SafetyGoggles(x) -> ProtectsEyesInLab(x))", "score": 0}
{"id": "eqasc_validation_1553", "prediction": "all x.((Goggles(x) | SafetyGlasses(x) & Sideshields(x)) -> Recommended(x))", "score": 0}
{"id": "eqasc_validation_1554", "prediction": "all x.((Glasses(x) & HasSideshields(x)) -> RecommendedForProtectingEyes(x))", "score": 0}
{"id": "eqasc_validation_1555", "prediction": "all x.(SafetyGoggles(x) -> MandatoryInLaboratory(x))", "score": 0}
{"id": "eqasc_validation_1556", "prediction": "all x.(Experiment(x) -> PerformedInLaboratory(x))", "score": 0}
{"id": "eqasc_validation_1557", "prediction": "all x.(HomeProtectiveEquipment(x) -> EyesSafetyGoggles(x))", "score": 0}
{"id": "eqasc_validation_1558", "prediction": "all x y.((ProtectiveEquipment(x) & Experiment(y)) -> ProtectsEyes(x,y))", "score": 0}
{"id": "eqasc_validation_1559", "prediction": "all x.(Protection(x) -> (Simple(x) & Safe(x) & Inexpensive(x)))", "score": 0}
{"id": "eqasc_validation_1560", "prediction": "all x.(SafetyGoggles(x) -> KeepsEyesSafe(x))", "score": 0}
{"id": "eqasc_validation_1561", "prediction": "all x.(Eyes(x) -> (Eyes(x) & ProbablyMostImportantSymbolicalOrgan(x)))", "score": 0}
{"id": "eqasc_validation_1562", "prediction": "all x y.((SensoryOrgan(x) & Experiment(y)) -> (ProtectsBySafetyGoggles(x,y) & DuringExperiment(x,y)))", "score": 0}
{"id": "eqasc_validation_1563", "prediction": "all x.((Laboratory(x) & ProtectsEyes(x)) -> Mandatory(x))", "score": 0}
{"id": "eqasc_validation_1564", "prediction": "exists x.(ScienceExperiment(x) & Dangerous(x))", "score": 0}
{"id": "eqasc_validation_1565", "prediction": "all x y.((SafetyGoggles(x) & Eyes(y)) -> ProtectsFromDangerousThings(x,y))", "score": 0}
{"id": "eqasc_validation_1566", "prediction": "all x.((SafetyGlasses(x) & Goggles(x)) -> ProtectsEyes(x))", "score": 0}
{"id": "eqasc_validation_1567", "prediction": "all x y.((SafetyGlasses(x) & Eyes(y)) -> ProtectsDuringExperiments(x,y))", "score": 0}
{"id": "eqasc_validation_1568", "prediction": "all x.((LargerPupil(x) & LargerCorea(x)) -> PermitsMoreLight(x))", "score": 0}
{"id": "eqasc_validation_1569", "prediction": "all x y.((SafetyGoggles(x) & Pupils(y) & Experiment(z)) -> ProtectsDuring(x,y,z))", "score": 0}
{"id": "eqasc_validation_1570", "prediction": "all x.(Goggles(x) -> WornToProtectEyes(x))", "score": 0}
{"id": "eqasc_validation_1571", "prediction": "all x.(Goggles(x) -> ForProtection(x))", "score": 0}
{"id": "eqasc_validation_1572", "prediction": "all x.(Cnidarian(x) -> (Invertebrate(x) & (Jellyfish(x) | Coral(x))))", "score": 1}
{"id": "eqasc_validation_1573", "prediction": "all x.(Cnidarian(x) -> AquaticAnimal(x))", "score": 0}
{"id": "eqasc_validation_1574", "prediction": "all x.(Jellyfish(x) -> AquaticInvertebrate(x))", "score": 0}
{"id": "eqasc_validation_1575", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) & (Jellyfish(x) | Coral(x))))", "score": 0}
{"id": "eqasc_validation_1576", "prediction": "all x.(Invertebrate(x) -> (-Vertebrae(x) | -Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1577", "prediction": "all x.((Jellyfish(x) | Coral(x)) -> (-Vertebrae(x) & -Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1578", "prediction": "all x.(Invertebrate(x) -> Animal(x) & -Backbone(x))", "score": 1}
{"id": "eqasc_validation_1579", "prediction": "all x.(Cnidarian(x) -> (-Backbone(x) & Cnidarian(x)))", "score": 1}
{"id": "eqasc_validation_1580", "prediction": "all x.(Jellyfish(x) -> HydrostaticSkeleton(x))", "score": 0}
{"id": "eqasc_validation_1581", "prediction": "all x.(Cnidarian(x) -> (Radial(x) & Tentacled(x) & LivesInSeas(x)))", "score": 0}
{"id": "eqasc_validation_1582", "prediction": "all x.((Jellyfish(x) | Coral(x)) -> (RadialTentacledAnimal(x) & LivesInSeas(x)))", "score": 0}
{"id": "eqasc_validation_1583", "prediction": "all x.(Jellyfish(x) -> (Aquatic(x) & Aquatic(x)))", "score": 0}
{"id": "eqasc_validation_1584", "prediction": "all x.(Invertebrate(x) -> (Animal(x) & -Spine(x) & -Backbone(x)))", "score": 0}
{"id": "eqasc_validation_1585", "prediction": "all x.(Cnidarian(x) -> (Jellyfish(x) | Coral(x)) & -HasBackbone(x)))", "score": -1}
{"id": "eqasc_validation_1586", "prediction": "all x.(Coelenterate(x) -> (Invertebrate(x) & (Jellyfish(x) | Coral(x))))", "score": 0}
{"id": "eqasc_validation_1587", "prediction": "all x.((Anenome(x) | Coral(x)) -> Invertebrate(x))", "score": 0}
{"id": "eqasc_validation_1588", "prediction": "all x y.((Anemometer(x) & WindSpeed(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1589", "prediction": "all x.((WindSpeedExceeds73(x)) -> Hurricane(x))", "score": 0}
{"id": "eqasc_validation_1590", "prediction": "all x y.((Hurricane(x) & Anemometer(y) & ReadingAbove73mph(y)) -> Occurs(x))", "score": 0}
{"id": "eqasc_validation_1591", "prediction": "all x.(WindSpeed(x) -> GaugedWithAnemometer(x))", "score": 0}
{"id": "eqasc_validation_1592", "prediction": "all x.(Anemometer(x) -> (GainWind(x) & GaugeWind(x)))", "score": 0}
{"id": "eqasc_validation_1593", "prediction": "all x.((WindSpeed(x) & TornadoSeverity(x)) -> EstimatedByDamage(x))", "score": 0}
{"id": "eqasc_validation_1594", "prediction": "all x.(Anemometer(x) -> EstimatesWindDamage(x))", "score": 0}
{"id": "eqasc_validation_1595", "prediction": "all x.(Hurricane(x) -> WindSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_1596", "prediction": "all x.(Anemometer(x) -> MeasuresHurricane(x))", "score": 0}
{"id": "eqasc_validation_1597", "prediction": "all x.(Anemometer(x) -> MeasuresWindForce(x))", "score": 0}
{"id": "eqasc_validation_1598", "prediction": "all x y.((Wind(x) & WindForce(y)) -> MeasureSpeed(x,y))", "score": 0}
{"id": "eqasc_validation_1599", "prediction": "all x y.((Anemometer(x) & Hurricane(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1600", "prediction": "all x.((Anemometer(x) & Vane(x)) -> TopOfStation(x))", "score": 0}
{"id": "eqasc_validation_1601", "prediction": "all x y.((Device(x) & Station(y) & MeasuresWind(x,y)) -> PlacedAtTopOf(x,y))", "score": 0}
{"id": "eqasc_validation_1602", "prediction": "all x.(Hurricane(x) -> (HasCategory(x,5) & DependsOnWindSpeed(x)))", "score": 0}
{"id": "eqasc_validation_1603", "prediction": "all x.(Anemometer(x) -> DeterminesHurricaneCategory(x))", "score": 0}
{"id": "eqasc_validation_1604", "prediction": "all x.(Bacteria(x) -> (DiverseAndAbundantOrganisms(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1605", "prediction": "all x.(Organization(x) -> LifeForm(x))", "score": 0}
{"id": "eqasc_validation_1606", "prediction": "all x.(Bacteria(x) -> (Diverse(x) & Abundant(x) & LifeForm(x)))", "score": 0}
{"id": "eqasc_validation_1607", "prediction": "all x.(Earth(x) -> Planet(x))", "score": 0}
{"id": "eqasc_validation_1608", "prediction": "all x.(Bacteria(x) -> (DiverseAndAbundantOrganisms(x) & OnPlanet(x)))", "score": 0}
{"id": "eqasc_validation_1609", "prediction": "all x.(Earth(x) -> WorldOfWater(x))", "score": 0}
{"id": "eqasc_validation_1610", "prediction": "all x.(Bacteria(x) -> (DiverseAndAbundantOrganisms(x) & InWorld(x)))", "score": 0}
{"id": "eqasc_validation_1611", "prediction": "all x.(ProkaryoticCell(x) -> (DiverseAndAbundantOrganisms(x) & OnEarth(x)))", "score": 0}
{"id": "eqasc_validation_1612", "prediction": "all x y.((HermitCrab(x) & DeadSnail(y)) -> UsesShellForHome(x,y))", "score": 0}
{"id": "eqasc_validation_1613", "prediction": "all x.(Student(x) -> (LivesAtHome(x) | LivesInGroupHome(x)))", "score": 0}
{"id": "eqasc_validation_1614", "prediction": "all x.(HermitCrab(x) -> UsesDeadSnailShells(x))", "score": 0}
{"id": "eqasc_validation_1615", "prediction": "all x.(Crab(x) -> Scavenger(x))", "score": 0}
{"id": "eqasc_validation_1616", "prediction": "exists x y.(Scavenger(x) & Shell(y) & DeadSnail(z) & UsesForHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1617", "prediction": "all x.(Gastropod(x) -> (Snake(x) | Slug(x)))", "score": 0}
{"id": "eqasc_validation_1618", "prediction": "all x y.((HermitCrab(x) & Gastropod(y)) -> UsesShellForHomes(x,y))", "score": 0}
{"id": "eqasc_validation_1619", "prediction": "all x y z.((Crab(x) & Shell(y) & DeadSnail(z)) -> (UsesForHome(x,y,z) & Scavenger(x)))", "score": 0}
{"id": "eqasc_validation_1620", "prediction": "all x.(HermitCrab(x) -> FindsShells(x))", "score": 0}
{"id": "eqasc_validation_1621", "prediction": "all x y z.((HermitCrab(x) & DeadSnail(y) & DeadSnail(z)) -> FindsToUseAsHome(x,y,z))", "score": 0}
{"id": "eqasc_validation_1622", "prediction": "all x.(HermitCrab(x) -> UnusualHome(x))", "score": 0}
{"id": "eqasc_validation_1623", "prediction": "all x.((DeadSnailShell(x) & UnusuallyHome(x)) -> UnusualHome(x))", "score": 0}
{"id": "eqasc_validation_1624", "prediction": "all x.(HermitCrab(x) -> (LivesInShell(x) & Scavenger(x)))", "score": 0}
{"id": "eqasc_validation_1625", "prediction": "all x.(HermitCrab(x) -> (ScavengerForDeadSnails(x) & ScavengerForDeadSnails(x)))", "score": 0}
{"id": "eqasc_validation_1626", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> (DecreasesTemperature(x,y) & BlocksSun(x,y)))", "score": 0}
{"id": "eqasc_validation_1627", "prediction": "all x.(Aerosol(x) -> (Dust(x) | VolcanicAsh(x) | Smoke(x)))", "score": 0}
{"id": "eqasc_validation_1628", "prediction": "exists x.(Aerosol(x) & CanDecreaseTemperaturesByBlockingSun(x))", "score": 0}
{"id": "eqasc_validation_1629", "prediction": "all x.((EruptiveProduct(x) & HawaiianVolcano(x)) -> SpreadsWideRangeOfTemperatures(x))", "score": 0}
{"id": "eqasc_validation_1630", "prediction": "all x.(EruptiveProduct(x) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1631", "prediction": "all x.((CloudBlocksSun(x) & Increases(x)) -> TemperaturesDrop(x))", "score": 0}
{"id": "eqasc_validation_1632", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> IncreasesClouds(x,y))", "score": 0}
{"id": "eqasc_validation_1633", "prediction": "all x.((VolcanicAsh(x) & SpewedIntoAtmosphere(x)) -> BlocksSunRadiation(x))", "score": 0}
{"id": "eqasc_validation_1634", "prediction": "all x y.((VolcanicAsh(x) & Sun(y)) -> (Blocks(x,y) & CoolsAir(x)))", "score": 0}
{"id": "eqasc_validation_1635", "prediction": "all x.(VolcanicAsh(x) -> (FineDustyParticles(x) & Contains(x,y)))", "score": 0}
{"id": "eqasc_validation_1636", "prediction": "all x y.((FineDustyParticles(x) & Atmosphere(y)) -> (DecreasesTemperature(x,y) & BlocksSun(x,y)))", "score": 0}
{"id": "eqasc_validation_1637", "prediction": "all x.(Atmosphere(x) -> AirAroundObject(x))", "score": 0}
{"id": "eqasc_validation_1638", "prediction": "all x y.((VolcanicAsh(x) & AirAroundEarth(y)) -> (DecreasesTemperatureByBlockingSunlight(x,y)))", "score": 0}
{"id": "eqasc_validation_1639", "prediction": "all x.(SmallTemperatureVariations(x) -> HasMajorEffectsOnNaturalEcosystems(x))", "score": 0}
{"id": "eqasc_validation_1640", "prediction": "all x y.((VolcanicAsh(x) & Atmosphere(y)) -> CanHaveMajorEffectsOnNaturalEcosystems(x,y))", "score": 0}
{"id": "eqasc_validation_1641", "prediction": "all x.(Supersaturation(x) -> CommonStateForAtmosphericHazeParticles(x))", "score": 0}
{"id": "eqasc_validation_1642", "prediction": "all x.(Haze(x) -> (DecreasesTemperature(x) & BlocksSun(x)))", "score": 0}
{"id": "eqasc_validation_1643", "prediction": "all x.(AshCloud(x) -> ParticularProblemForAircraft(x))", "score": 0}
{"id": "eqasc_validation_1644", "prediction": "all x.(VolcanicClouds(x) -> ParticularProblemForAircraft(x))", "score": 0}
{"id": "eqasc_validation_1645", "prediction": "all x.(ConeVolcano(x) -> (ThickLava(x) & MuchAsh(x)))", "score": 0}
{"id": "eqasc_validation_1646", "prediction": "all x.(ConeVolcano(x) -> LowersTemperature(x))", "score": 0}
{"id": "eqasc_validation_1647", "prediction": "all x.((Vulel(x) & TinyParticles(x) & VolcanicEruption(x)) -> BlocksSun(x))", "score": 0}
{"id": "eqasc_validation_1648", "prediction": "all x y.((Volcano(x) & Sun(y)) -> Blocks(x,y))", "score": 0}
{"id": "eqasc_validation_1649", "prediction": "all x.(BlackSand(x) -> VolcanicAsh(x))", "score": 0}
{"id": "eqasc_validation_1650", "prediction": "all x.(BlackSand(x) -> BlocksOutSun(x))", "score": 0}
{"id": "eqasc_validation_1651", "prediction": "all x y.((FineDustyParticles(x) & EruptedFromVolcanoes(x) & Volcano(y)) -> (DecreasesTemperatureByBlockingSunlight(x)))", "score": 0}
{"id": "eqasc_validation_1652", "prediction": "all x y.((Seismograph(x) & Earthquake(y)) -> MeasuresSize(x,y))", "score": 0}
{"id": "eqasc_validation_1653", "prediction": "all x.(Seismograph(x) -> DetectsFaultMovements(x))", "score": 0}
{"id": "eqasc_validation_1654", "prediction": "all x.(Magnitude(x) -> MeasuresEarthquakeSize(x))", "score": 0}
{"id": "eqasc_validation_1655", "prediction": "all x y.((Seismograph(x) & Earthquake(y)) -> MeasuresMagnitude(x,y))", "score": 0}
{"id": "eqasc_validation_1656", "prediction": "all x.(Earthquake(x) -> (MeasuredByRiverMagnitudeScale(x) & MeasuresSizeOfEarthquakes(x)))", "score": 0}
{"id": "eqasc_validation_1657", "prediction": "all x y.((Seismograph(x) & RichterMagnitudeScale(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1658", "prediction": "all x.((Earthquake(x) & NearCity(x) & AnySize(x)) -> PotentialForDamageGreat(x))", "score": 0}
{"id": "eqasc_validation_1659", "prediction": "all x y.((Seismograph(x) & Damage(y)) -> MeasuresSize(x,y))", "score": 0}
{"id": "eqasc_validation_1660", "prediction": "all x.((EarthquakeDamage(x) & CausedBy(x,Earthquake)) -> Emense(x))", "score": 0}
{"id": "eqasc_validation_1661", "prediction": "all x.(Seismograph(x) -> PreventsDamage(x))", "score": 0}
{"id": "eqasc_validation_1662", "prediction": "all x.(JürgenMagnitude(x) -> MeasuresSizeOfEarthquake(x))", "score": 0}
{"id": "eqasc_validation_1663", "prediction": "all x.(Seismograph(x) -> MeasuresRiberMagnitude(x))", "score": 0}
{"id": "eqasc_validation_1664", "prediction": "all x.(Earthquake(x) -> MinorTermor(x))", "score": 0}
{"id": "eqasc_validation_1665", "prediction": "all x y.((Seismograph(x) & Tremor(y)) -> MeasuresSize(x,y))", "score": 0}
{"id": "eqasc_validation_1666", "prediction": "all x.((Waves(x) & Earthquake(x)) -> DoDamage(x))", "score": 0}
{"id": "eqasc_validation_1667", "prediction": "all x.(Seismograph(x) -> MeasuresWaves(x))", "score": 0}
{"id": "eqasc_validation_1668", "prediction": "all x.(Spot(x) -> HasCollarCells(x))", "score": 0}
{"id": "eqasc_validation_1669", "prediction": "all x.(CollarCell(x) -> (PicksUpPlanktonicFood(x) & StartsDigestiveProcess(x)))", "score": 0}
{"id": "eqasc_validation_1670", "prediction": "all x y.((Spot(x) & PlanktonicFood(y)) -> HasSpecializedCells(x,y))", "score": 0}
{"id": "eqasc_validation_1671", "prediction": "all x y z.((Sponges(x) & Food(y) & SpecializedCells(z)) -> (Traps(x,y) & Digests(x,y)))", "score": 0}
{"id": "eqasc_validation_1672", "prediction": "all x.((Spicule(x) | AmoeboidCell(x) | CollarCell(x)) -> SeaAnemone(x))", "score": 0}
{"id": "eqasc_validation_1673", "prediction": "all x y.((Spot(x) & SeaAnemone(y)) -> SimilarSpecializedCells(x,y))", "score": 0}
{"id": "eqasc_validation_1674", "prediction": "all x y.((Flagellum(x) & CollarCell(y)) -> (CurrentPassesOver(x,y) & FoodCollected(x)))", "score": 0}
{"id": "eqasc_validation_1675", "prediction": "all x.(Sponges(x) -> (UsesSpecializedCells(x) & HasFlagellum(x) & CollectsFood(x)))", "score": 0}
{"id": "eqasc_validation_1676", "prediction": "all x.(Spot(x) -> (Asymetrical(x) & HasSpecialCells(x)))", "score": 0}
{"id": "eqasc_validation_1677", "prediction": "all x.(Sponges(x) -> (Asymmetrical(x) & HasCollarCells(x)))", "score": 0}
{"id": "eqasc_validation_1678", "prediction": "all x y.((CollarCell(x) & Sponge(y)) -> ProducesConstantFlowOfWater(x,y))", "score": 0}
{"id": "eqasc_validation_1679", "prediction": "all x.(Sponge(x) -> (SpecializedWorkHorse(x) & ProducesConstantFlowOfWater(x)))", "score": 0}
{"id": "eqasc_validation_1680", "prediction": "all x y.((Medicine(x) & Person(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 1}
{"id": "eqasc_validation_1681", "prediction": "all x.(Herb(x) -> (Medicine(x) & Aid(x)))", "score": 1}
{"id": "eqasc_validation_1682", "prediction": "all x y.((Herb(x) & Person(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 1}
{"id": "eqasc_validation_1683", "prediction": "all x.(Drug(x) -> SmallMedicine(x))", "score": 0}
{"id": "eqasc_validation_1684", "prediction": "all x y.((Drug(x) & Person(y) & Sick(y)) -> CanCure(x,y))", "score": 0}
{"id": "eqasc_validation_1685", "prediction": "all x.(LooksSick(x) -> Sick(x))", "score": 0}
{"id": "eqasc_validation_1686", "prediction": "all x y.((Medicine(x) & Patient(y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1687", "prediction": "all x.((Medicine(x) & Pill(x)) -> SwallowPillWhole(x))", "score": 0}
{"id": "eqasc_validation_1688", "prediction": "all x y.((Pill(x) & Person(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1689", "prediction": "all x y.((Prescription(x) & NonPrescription(x)) -> OrderedBy(x,y))", "score": 0}
{"id": "eqasc_validation_1690", "prediction": "all x y.((Pharmacist(x) & Person(y) & Sick(y)) -> WritesPrescription(x,y))", "score": 0}
{"id": "eqasc_validation_1691", "prediction": "all x.(Person(x) -> (GetsSick(x) & GetsBetter(x)))", "score": 0}
{"id": "eqasc_validation_1692", "prediction": "all x.(Medicine(x) -> (GetsPeopleBetter(x)))", "score": 0}
{"id": "eqasc_validation_1693", "prediction": "all x.((Child(x) & (Hungry(x) | Sick(x))) -> (NeedsFood(x) & NeedsMedication(x)))", "score": 1}
{"id": "eqasc_validation_1694", "prediction": "all x.((Child(x) & Sick(x)) -> NeedsFood(x))", "score": 1}
{"id": "eqasc_validation_1695", "prediction": "all x.(BotanicalMedicine(x) -> (ManyPlantSubstances(x) & PowerfulMedication(x)))", "score": 0}
{"id": "eqasc_validation_1696", "prediction": "all x y.((PlantSubstance(x) & Person(y) & Sick(y)) -> PowerfulCures(x,y))", "score": 0}
{"id": "eqasc_validation_1697", "prediction": "all x.(Baby(x) -> MOSTInquisitiveOfPeople(x))", "score": 0}
{"id": "eqasc_validation_1698", "prediction": "all x y.((Medicine(x) & Baby(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1699", "prediction": "all x.(Antibiotic(x) -> (PowerfulMedicine(x) & TreatsBacterialInfections(x)))", "score": 0}
{"id": "eqasc_validation_1700", "prediction": "all x y.((Antibiotic(x) & Person(y) & SickWithBacteriaInfections(y)) -> CanCure(x,y))", "score": 0}
{"id": "eqasc_validation_1701", "prediction": "all x.(Person(x) -> HumanFamily(x))", "score": 0}
{"id": "eqasc_validation_1702", "prediction": "all x y.((Medicine(x) & Human(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1703", "prediction": "all x.((Medicine(x) & Ibuprofen(x)) -> (CalmsInflammation(x) & EasesPain(x)))", "score": 0}
{"id": "eqasc_validation_1704", "prediction": "all x y.((Ibuprofen(x) & Person(y) & Sick(y)) -> UsedForCuring(x,y))", "score": 0}
{"id": "eqasc_validation_1705", "prediction": "all x.(Person(x) -> (GetsSick(x) & Dies(x)))", "score": 0}
{"id": "eqasc_validation_1706", "prediction": "all x y.((Medicine(x) & Person(y)) -> PreventsDeath(x,y))", "score": 0}
{"id": "eqasc_validation_1707", "prediction": "all x.(Fingernail(x) -> (PreventsInjury(x) & FormsProtectivePlates(x)))", "score": 0}
{"id": "eqasc_validation_1708", "prediction": "all x.(Fingernail(x) -> MadeOfKeratin(x))", "score": 0}
{"id": "eqasc_validation_1709", "prediction": "all x y.((Keratin(x) & Finger(y)) -> PreventsInjury(x,y))", "score": 0}
{"id": "eqasc_validation_1710", "prediction": "all x.((MadeOfKeratin(x) & PreventsInjury(x)) -> FormsProtectivePlates(x))", "score": 0}
{"id": "eqasc_validation_1711", "prediction": "all x y.((Keratin(x) & FingerEnds(y)) -> PreventsInjury(x,y))", "score": 0}
{"id": "eqasc_validation_1712", "prediction": "all x.(Person(x) -> HasFingersnails(x))", "score": 0}
{"id": "eqasc_validation_1713", "prediction": "all x y.((Person(x) & Finger(y)) -> PreventsInjury(x,y))", "score": 0}
{"id": "eqasc_validation_1714", "prediction": "all x.((FingernailExamination(x) & Smooth(x) & WellShaped(x)) -> Healthy(x))", "score": 0}
{"id": "eqasc_validation_1715", "prediction": "all x.(ProtectivePlate(x) -> (Smooth(x) & WellShaped(x)))", "score": 0}
{"id": "eqasc_validation_1716", "prediction": "all x.(Keratin(x) -> (PreventsInjury(x) & FormsProtectivePlates(x)))", "score": 0}
{"id": "eqasc_validation_1717", "prediction": "all x.(Keratin(x) -> (PreventsInjury(x) & FormsProtectivePlates(x)))", "score": 0}
{"id": "eqasc_validation_1718", "prediction": "all x.(Fingernail(x) -> BrittleWithAge(x))", "score": 0}
{"id": "eqasc_validation_1719", "prediction": "all x y.((ProtectivePlate(x) & FingerEnds(y) & Age(x)) -> BrittleWithAge(x,y))", "score": 0}
{"id": "eqasc_validation_1720", "prediction": "all x.(ProtectivePlates(x) -> (MadeOfKeratin(x) & OverFingersEnds(x)))", "score": 0}
{"id": "eqasc_validation_1721", "prediction": "all x y.((Stopwatch(x) & Time(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1722", "prediction": "all x.(Stopwatch(x) -> MeasuresSeconds(x))", "score": 0}
{"id": "eqasc_validation_1723", "prediction": "all x.(ReactionTime(x) -> (MeasuredWithStopwatch(x) & InMinutesAndSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1724", "prediction": "all x.(Stopwatch(x) -> MeasuresMinutes(x))", "score": 0}
{"id": "eqasc_validation_1725", "prediction": "all x.(Stopwatch(x) -> (MeasuresMinutes(x) & MeasuresSeconds(x)))", "score": 0}
{"id": "eqasc_validation_1726", "prediction": "all x.(Stopwatch(x) -> MeasuresSeconds(x))", "score": 0}
{"id": "eqasc_validation_1727", "prediction": "all x.(Time(x) -> (Time(x) | Itimes(x)))", "score": 0}
{"id": "eqasc_validation_1728", "prediction": "all x y.((Stopwatch(x) & Seconds(y)) -> Measures(x,y))", "score": 0}
{"id": "eqasc_validation_1729", "prediction": "all x.(Time(x) -> (MeasuredWithClock(x) | MeasuredWithWatch(x)))", "score": 0}
{"id": "eqasc_validation_1730", "prediction": "all x y.((Time(x) & Watch(y)) -> KeepsWith(x,y))", "score": 0}
{"id": "eqasc_validation_1731", "prediction": "all x.(Timing(x) -> Punctuality(x))", "score": 0}
{"id": "eqasc_validation_1732", "prediction": "all x y.((Stopwatch(x) & Person(y)) -> HelpsBePunctual(x,y))", "score": 0}
{"id": "eqasc_validation_1733", "prediction": "all x.(KinneyFailure(x) -> MayBeTreatedWithDialysis(x))", "score": 0}
{"id": "eqasc_validation_1734", "prediction": "all x.(Dialysis(x) -> (CleaningBloodWithArtificialKneel(x)))", "score": 0}
{"id": "eqasc_validation_1735", "prediction": "all x.(KinneyFailure(x) -> (CleaningBloodWithArtificialKneep(x) & KidneyFailure(x)))", "score": 0}
{"id": "eqasc_validation_1736", "prediction": "all x.(KneeFailure(x) -> (CleaningBlood(x) & MayBeTreatedWith(x,y)))", "score": 0}
{"id": "eqasc_validation_1737", "prediction": "all x.(Dialysis(x) -> FiltersBlood(x))", "score": 0}
{"id": "eqasc_validation_1738", "prediction": "all x.(KinneyFailure(x) -> (Treatment(x,y) & FilterBlood(y)))", "score": 0}
{"id": "eqasc_validation_1739", "prediction": "all x.(Kinney(x) -> (InabilityToDoJob(x) & Kidney(x)))", "score": 0}
{"id": "eqasc_validation_1740", "prediction": "all x.(Dialysis(x) -> TreatsRenalFailure(x))", "score": 0}
{"id": "eqasc_validation_1741", "prediction": "all x.(KinneyFailure(x) -> (TreatmentWithProcedure(x) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_validation_1742", "prediction": "all x.(Dialysis(x) -> (NecessaryToFilterBlood(x) & FiltersBlood(x)))", "score": 0}
{"id": "eqasc_validation_1743", "prediction": "all x.(KneeFailure(x) -> (Treatment(x) & FilterBlood(x)))", "score": 0}
{"id": "eqasc_validation_1744", "prediction": "all x.(Dialysis(x) -> CleansBlood(x))", "score": 0}
{"id": "eqasc_validation_1745", "prediction": "all x.(KinneyFailure(x) -> (MechanicalProcessOfCleaningBlood(x) & MayBeTreatedBy(x)))", "score": 0}
{"id": "eqasc_validation_1746", "prediction": "all x.(DiabeticKneelDisease(x) & KidneyFailure(x) & DiabetesRelatedKneelProblems(x))", "score": 0}
{"id": "eqasc_validation_1747", "prediction": "all x.(DiabeticEffect(x) -> CanBeTreatedWithDialysis(x))", "score": 0}
{"id": "eqasc_validation_1748", "prediction": "all x.(KinneyFailure(x) -> DeathSentence(x))", "score": 0}
{"id": "eqasc_validation_1749", "prediction": "all x.(LackOfDialysis(x) -> MayLeadToDeath(x))", "score": 0}
{"id": "eqasc_validation_1750", "prediction": "all x.(KinneyFailure(x) -> (CleaningBloodWithArtificialKneel(x)))", "score": 0}
{"id": "eqasc_validation_1751", "prediction": "all x.(RenalFailure(x) -> KidneyFailure(x))", "score": 0}
{"id": "eqasc_validation_1752", "prediction": "all x.(RenalFailure(x) -> (TreatmentWithDialysis(x) | TreatmentWithDialysis(x)))", "score": 0}

{"id": "prontoqa_validation_0", "nl": "Each wumpus is a sterpus.", "fol": "all x. (wumpus(x) -> sterpus(x))", "prediction": ["all x.(Wumpus(x) -> Sterpus(x))", "All x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Stupid(x))", "all x.(Wumpus(x) -> Steroid(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Steerpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))"]}
{"id": "prontoqa_validation_1", "nl": "Polly is a jompus and Polly is not a sterpus and Polly is a dumpus.", "fol": "(jompus(Polly) & -sterpus(Polly) & dumpus(Polly))", "prediction": ["all x y z.((Ploy(x) & Jompus(x) & Polly(y) & Sterpus(z)) -> (-Sterpus(y) & Dumpus(z)))", "all x y.((Poly(x) & Jompus(x) & Polly(y)) -> (-Sterpus(y) & Dumpus(y)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Steropus(x)) & (Polly(x) -> Dumpus(x)))", "all x y z.((Polly(x) & Jompus(x) & Polly(y) & Sterus(z)) -> (Jompus(x) & -Sterpus(y) & Dumpus(z)))", "all x.(Jumpus(x) & -Sterpus(x) & Dumpus(x))", "all x y z.((Polly(x) & Jompus(x) & Polly(y) & Sterpus(z)) -> (-Starpus(y) & Dumpus(z)))", "all x y.((Polly(x) & Jompus(x)) & Polly(y) & -Sterepus(y)) -> Dumpus(y))", "(all x y z.((Polly(x) & -Sterpus(y)) -> (Jompus(x) & Polly(z))) & ((Polly(z) & -Sterpus(z)) | (Polly(z) & Dumpus(z)))))", "(all x.(Poly(x) -> Jompus(x)) & (Polly(x) -> -Sterpus(x)) & (Poly(x) -> Dumpus(y)))", "(all x.(Polly(x) -> Jompus(x)) & ((Polly(x) & -Sterepus(x)) | (Polly(x) & Dumpus(x)))))", "(all x.(Ploy(x) -> Jompus(x)) & all y.(Sterpus(y) -> -Sterpus(y))) & all z.(Dumps(z) -> Dumpus(z)))", "all x y z.((Polly(x) & Jompus(x) & Polly(y) & -Sterpus(y)) -> (IsDumpsus(z)))", "(all x y z.((Polly(x) & Jompus(x)) -> Polly; -Sterpus(y)) & ((Poly(z) & Dumpus(z)) -> Polly)))", "(all x y z.((Polly(x) & Jompus(x)) -> Polly(y)) & ((Poly(z) & -Sterectus(z))) -> Dumpus(y)))", "all x y.((Polly(x) & Jompus(x)) -> (-Sterpus(y) & Dumpus(x)))", "all x.(Polly(x) -> (Jompus(x) & -Sterpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_validation_2", "nl": "Polly is not a wumpus.", "fol": "-wumpus(Polly)", "prediction": ["-Wumpus(polly)", "(-Wumpus(Polly))", "(-Wumpus(Polly))", "All x.(Polly(x) -> -Wumpus(x))", "all x.(Polly(x) -> -Wumpus(x))", "-Wumpus(poly)", "all x.(Wumpus(x) -> -SupportingWumpus(x))", "Polly is not wumpus.", "[Wumpus(Poly)]", "all x.(Polly(x) -> -Wumpus(x))", "all x.(Wumpus(x) -> -Wumpus(x))", "all x.(Polly(x) -> -Wumpus(x))", "(wumpus(Polly) & -Wumpus(Polly))", "Plough is -Wumpus(poly)", "-Wumpus(Polly)", "(-Wumpus(Polly))"]}
{"id": "prontoqa_validation_3", "nl": "Rompuses are lempuses.", "fol": "all x. (rompus(x) -> lempus(x))", "prediction": ["all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rospus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "the ropolis(romose) is lempuse(romose)", "all x.(Ropus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))"]}
{"id": "prontoqa_validation_4", "nl": "Rex is a lorpus and Rex is not a lempus and Rex is a numpus.", "fol": "(lorpus(Rex) & -lempus(Rex) & numpus(Rex))", "prediction": ["(all x y,z.((Rex(x) & Lorpe(y)) -> (Lorpus(x) & Nolempus(z) & Numpus(z))))", "(all x.(Rex(x) -> Lorpus(x)) & all y.(Roser(y) -> -Lempus(y))) & all z.(Numpus(z) -> Numpus(z)))", "all x y z.((Rex(x) & lorpus(y) & lempus(z)) -> (Lorpus(x) & -Lempus(x) & Numpus(x)))", "(all x y z.((Rex) & Lorpus(x) & Lempus(y) & Numpus(z)) -> Lex)) & ((Rex) & Lempus(y)) -> Numpus(z)))", "(all x y.((Rex(x) & Lorpus(y)) -> Loper(x)) & ((Rex(x) & -Lempus(y)) -> Numpus(x)))", "(all x.(Lorpus(x) -> Rex)) & (Lempus(x) | Numpus(x))))", "(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Numpus(x)))", "(all x.(Lorpus(x) & -Lempus(x)) & all y.(Numpus(y)) -> -Lorpus(x))", "(all x.(Lorpus(x) -> -Limpus(x)) & all y.((Limbus(y) & Numpus(y)) -> Numpus(y)))", "all x y z.((Lewis(x) & Rex(y) & Numpus(z)) -> (Lorpus(y) & -Lempus(y) & Numpus(z)))", "all x.(Rex(x) -> (Horse(x) & -Lempus(x) & Numpus(x)))", "(all x y.(Lorpus(x) & Lampus(y)) -> RexCerephalus(x)) & (HasNumpus(x) | HasNumpus(y))))", "all x.(LexPosh(x) & -Lempus(x) & Numpus(x))", "(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Numpus(x)))", "(all x y.((Rex(x) & Lorpus(y)) -> -Lempus(y)) & ((Rex(x) & Numpus(x)) -> Numpus(x)))", "all x y z.((Rex(x) & Lorpus(y) & Rex(z)) -> (Lorpus(x) & -Lempus(z) & Numpus(z)))"]}
{"id": "prontoqa_validation_5", "nl": "Rex is not a rompus.", "fol": "-rompus(Rex)", "prediction": ["-Rompus(Rex)", "Rex is not a rompus.", "Rex is not a Rompus.", "Rex is no Rompus(x)", "Rex, notRompus(re)", "all x.(Rex(x) -> -Rompus(x))", "all x.(Rex(x) -> -rompus(x))", "Rex is -Rompus(x)", "Rex.((Rompus(x))", "-Rompus(rex)", "(-Rompus(Rex))", "Rex is not a Rompus.", "[Rompus(Rex)]", "(-Rompus(Rex))", "Rex is not a rompus.", "-Rompus(Rx)"]}
{"id": "prontoqa_validation_6", "nl": "Numpuses are impuses.", "fol": "all x. (numpus(x) -> impus(x))", "prediction": ["all x.(Numpuse(x) -> Imperias(x))", "all x.(Numpuse(x) -> Issue(x))", "all x.(Numpuse(x) -> Issue(x))", "all x.(Numpuse(x) -> Issue(x))", "all x.(Numpus(x) -> Imperium(x))", "all x.(Numpus(x) -> Impossible(x))", "all x.(Numpus(x) -> Implizes(x))", "all x.(Numpus(x) -> Issue(x))", "all x.(Numpuse(x) -> Impose(x))", "all x.(NumPet(x) -> Impose(x))", "all x y.((Numpuse(x) & Issue(y)) -> Issue(x,y))", "all x.(Numpus(x) -> Issue(x))", "all x.(Numpus(x) -> Issues(x))", "all x.(Numpus(x) -> Issue(x))", "all x.(Numpuse(x) -> Issue(x))", "all x.(Numpus(x) -> Imperempted(x))"]}
{"id": "prontoqa_validation_7", "nl": "Wren is not an impus and Wren is a tumpus and Wren is a wumpus.", "fol": "(-impus(Wren) & tumpus(Wren) & wumpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Impossible(x)) & (Tumpus(x) -> (Toy(x,Tumpus))) | (Wren(x,Wumpus))))", "(all x.(Wren(x) -> -Illegal(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> Wumpus(x)))", "(all x.((Wren(x) & -Impossible(x)) -> Tumpus(x)) & all y.((Wren(y) & Tumpus(y)) -> Wumpus(y)))", "(all x y.((Rediger(x) & Wren(y)) -> -Impossible(x)) & ((Rediger(y) & Tumpus(y)) -> Wumpus(y)))", "(all x.(Wren(x) -> -Impossible(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> Wumpus(z))))", "(all x.(Wren(x) -> -Impossible(x)) & all y.((Wren(y) & Tumpus(y))) -> Wumpus(y)))", "all x y.((Wren(x) & Wren(y)) -> (-Impossible(x) & Tumpus(y) & Wumpus(y)))", "(-Impossible(Wren) & Tumpus(Wren))", "(all x.(Wren(x) -> -Impossible(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> Wumpus(z))))", "(all x.(Wren(x) -> -Impossible(x)) & all y.(Wren(y) -> Humpus(y))))", "((Wren(Wren) | Wren(Wren))) -> (-Impresario(Wren) & Tumpus(Wren)))", "all x y z.((Wren(x) & Tumpus(y) & Wren(z)) -> (-Impossible(x) & Tumpus(y) & Wumpus(z)))", "(NoIssue(wren) & isTumpus(wren))", "all x y z.((Wren(x) & Impossible(x) & Tumpus(y) & Wren(z)) -> (-Impossible(x) & Wumpus(z)))", "(all x.(Wren(x) -> -Immo(x)) & all y.((Wren(y) & Tumpus(y))) -> Wumpus(y)))", "(all x.(Wren(x) -> -Impossible(x)) & all y.(Tumpus(y) -> Wumpus(y)))"]}
{"id": "prontoqa_validation_8", "nl": "Wren is not a numpus.", "fol": "-numpus(Wren)", "prediction": ["(-numpus(Wren))", "(-Crown(Wren) & Numpus(Wren))", "all x.(Wren(x) -> -Numpus(x))", "all x.(Wren(x) -> -Numpus(x))", "(Numpus(Wren))", "all x.(Wren(x) -> -Numpus(x))", "all x.(Wren(x) -> -Numpus(x))", "all x.(Wren(x) -> -Numpus(x))", "all x.(Wren(x) -> -Numpus(x))", "all x.(Wren(x) -> -Numpus(x))", "all x.(Wren(x) -> -Numpus(x))", "Hmm..(Wren(Wren) & -numpus(w))", "all x.(Wren(x) -> -Numpus(x))", "all x.(Wren(x) -> -Numpus(x))", "all x.(Wren(x) -> -Numpkin(x))", "-Numpus(Wren)"]}
{"id": "prontoqa_validation_9", "nl": "Each tumpus is a shumpus.", "fol": "all x. (tumpus(x) -> shumpus(x))", "prediction": ["all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Sunmus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humidus(x))", "all x.(Tumpus(x) -> Shumpus(x))", "all x.(Tumpus(x) -> Shumpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))"]}
{"id": "prontoqa_validation_10", "nl": "Max is not a shumpus, Max is a zumpus, and Max is a jompus.", "fol": "(-shumpus(Max) & zumpus(Max) & jompus(Max))", "prediction": ["(exists x.(Max(x) & -Shumpus(x)) & exists y.(Max(y) & Zumpus(y)) & exists z.(Max(z) & Jompus(z))))", "(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> Jompus(x)))", "(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> Jompus(x)))", "all x y.((Max(x) & Humpus(y)) -> (-Shumpus(x) & Zumpus(y) & Jompus(y)))", "all x y z.((Max(x) & Simpus(y) & Zumpus(z)) -> (-Shumpus(x) & Tompus(x) & Jompus(x)))", "all x y z.((Max(x) & Humpus(y) & Zuppos(z)) -> (-Shumpus(x) & -Jumpus(x) & -Shumpus(y) & -Hompus(z)))", "all x y z.((Max(x) & Tompus(y) & Jompus(z)) -> (-Shumpus(x) & Tompus(y) & Has(x,z)))", "(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> Jompus(x)))", "all x y z.((Max(x) & Simpus(y) & Zumpus(z)) -> (-Shumpus(x) & Zumpus(x) & Jompus(x)))", "all x.(Max(x) -> (-Shumpus(x) & Zumpus(x) & Jompus(x)))", "(all x y z.((Shumpus(x) & Max(y) & Toupan(z)) -> -Suboha(x)) & ((Shumpus(y) & Toupan(z))) -> Jompus(z)))", "(all x.(Max(x) -> -Shumpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> Jompus(z))))", "(all x y.((Max(x) & Humpus(y)) -> -(Shumpus(x) | Zumpus(y))) & ((Max(x) & Jompus(x)) -> (Jumpus(x))))", "(all x.(Max(x) -> -Shumpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> Jompus(z))))", "all x y z.((Max(x) & Humpus(y) & Zumpus(z)) -> (-Shumpus(x) & Zumpus(y) & Jompus(z)))", "(all x.(Max(x) -> -Shumpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> Jompus(z)))"]}
{"id": "prontoqa_validation_11", "nl": "Max is not a tumpus.", "fol": "-tumpus(Max)", "prediction": ["-Tumpus(Max)", "all x.(Max(x) -> -Tumpus(x))", "-Tumpus(Max)", "-Tumpus(Max)", "the earliest available video of Max.shameless.dreads.(Tumpus(d) & -Tumpus(d) & -Tumpus(e))", "all x.(Max(x) -> -Tumpus(x))", "-Tumpus(Max)", "(-Tumpus(Max) & -Tummus(Max))", "All x.(Max(x) -> -Tompus(x))", "-Tumpus(Max)", "(exists x.(Max(x) & -Tumpus(x)))", "all x.(Max(x) -> -Tumpus(x))", "-Tumpus(Max)", "-Tumpus(Max)", "(-Tumpus(Max))", "(-Tumpus(Max))"]}
{"id": "prontoqa_validation_12", "nl": "Each tumpus is a brimpus.", "fol": "all x. (tumpus(x) -> brimpus(x))", "prediction": ["all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> -Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "(all x.(Tumpus(x) -> Brimpus(x)))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_validation_13", "nl": "Max is a lorpus and Max is an impus and Max is not a brimpus.", "fol": "(lorpus(Max) & impus(Max) & -brimpus(Max))", "prediction": ["(all x.(MattMax(x) -> Lorpus(x)) & all y.(MattMax(y) -> Impossible(y))) & all z.(MattMax(z) -> -Brimpus(z)))", "all x y.((Max(x) & Lorpus(x)) & (Max(y) & Impsultion(y)) & -Brimpus(y)) -> Has(x,y))", "(all x.(Max(x) -> Lurpus(x)) & (Max(x) -> Imperator(x)) & (Max(x) -> -Brimpus(x))))", "all x y z.((Max(x) & Lorpus(y) & Impossible(z)) -> (Lorpus(x) & Imperator(x) & -Brimpus(x)))", "(all x.(Max(x) -> Llorpus(x)) & all y.((Max(y) & Impossible(y))) | (-Max(y)) & Brimpus(y))))", "(all x.(Lorpus(x) -> Max(x)) & all y.(Impossible(y) -> Max(y))) & all z.(Brimpus(z) -> -Max(z)))", "(all x.(Max(x) -> Lorpus(x)) & all y.(Max(y) -> Issue(y))) & all z.(Max(z) -> -Brimpus(z))))", "all x y z.((Max(x) & Lorpus(y) & Impossible(z)) -> ((Lorpus(x) & Impossible(x,y) & -Brimpus(x,z))))", "all x y.((Max(x) & Lorpus(x)) -> (Impossed(x) & -Brimpus(y)))", "(all x.(Max(x) -> Lorpus(x)) & (Max(x) -> Imperator(x)) & -Max(x)))", "all x y.((Max(x) & Lorpus(x) & Imperator(y)) -> (Lorpus(x) & Ilcerator(y) & -Brimpus(z)))", "all x y.((Max(x) & Lorpus(x)) -> (Disclaimer(x) & -Brimpus(y)))", "all x.(Max(x) -> (Lorpu(x) & Impossible(x) & -Brimpus(x)))", "all x y z.((Max(x) & Lorompus(x) & Issue(y) & -Brimpus(z)) -> (Lorpus(x) | Issue(y) & -Issue(z)))", "all x.(Max(x) -> (Lorpus(x) & Issue(x) & -Isbrimpus(x)))", "all x y z.((Max(x) & Lorpus(x) & Impossible(y) & -Brampus(z)) -> (Lorpus(x) & Obscillator(y) & -Brimpus(z)))"]}
{"id": "prontoqa_validation_14", "nl": "Zumpuses are vumpuses.", "fol": "all x. (zumpus(x) -> vumpus(x))", "prediction": ["all x.(Zumpus(x) -> Vampus(x))", "all x.(Zupus(x) -> Vampuse(x))", "all x.(Zumpus(x) -> Vampuse(x))", "(Vumpus(z) -> Dashpee(z))", "all x.(Zumpus(x) -> Vulpe(x))", "all x.(Zumpus(x) -> Vampus(x))", "all x.(Zumpus(x) -> Vampus(x))", "all x.(Zumpus(x) -> Vampus(x))", "all x.(Zumpus(x) -> Vampuse(x))", "all x.(Zumpus(x) -> Vampus(x))", "all x.(Zumpus(x) -> Vampus(x))", "all x.(Zumpus(x) -> Vampuse(x))", "all x.(Zumpus(x) -> Vumpus(x))", "all x.(Zumpus(x) -> Vampuse(x))", "all x.(Zumpus(x) -> Vumpus(x))", "all x.(Zumpus(x) -> Vulbus(x))"]}
{"id": "prontoqa_validation_15", "nl": "Polly is a lorpus, Polly is a lempus, and Polly is not a vumpus.", "fol": "(lorpus(Polly) & lempus(Polly) & -vumpus(Polly))", "prediction": ["all x y z.((Polly(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) | Lempus(z) | -Vumpus(x)))", "Polly is a lorpus (Lorph(polly) & Polly is Lempus(poly) & -Vumpus(poly))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Lempus(x)) & (Poly(x) -> -Vumpus(x))))", "(all x y z.(Polly(x) -> Lark(x)) & (Polly(y) -> Lempus(y)) & (Polly(z) -> -Vumpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Lempus(x)) & -Vumpus(x)))", "-Vumpus(Polly)", "all x y z.((Polly(x) & Lorpus(y) & Lempus(z)) -> (Lorph(x) | Lempus(z) & -Vumpus(z)))", "all x y z.((Than(x) & Polly(y) & Moose(z)) -> (Lorpus(y) | Lempus(y) | -Vumpus(y)))", "(all x y z.((Polly(x) & Lorpus(z)) -> (Lorpus(x) & Lempus(y)) & ((Poly(x) & Vumpus(z)) -> -Vumpus(y)))", "(all x.(Vumpus(x) -> Lorossor(x)) & all y.(Lempus(y) -> Nemo(y)))", "(all x y.(Lorpus(x) & Lorpus(y)) & (Lempus(y) & -Vumpus(y)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Lempus(x)) & -Vumpus(x)))", "(all x y z.((Polly(x) & Lorpus(y)) -> (Lorpus(z) | Lempus(z)) | -Vumpus(z)))", "(all x.(Polly(x) -> Loomis(x)) & (Polly(x) -> Lempus(x)) & -Vumpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) | Lempus(x) | -Vumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Lempus(x)) & -Vumpus(x)))"]}
{"id": "prontoqa_validation_16", "nl": "Polly is not a zumpus.", "fol": "-zumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Zumpus(x))", "Polly is -Zumpus(Polly)", "all x.(Polly(x) -> -Zombia(x))", "(-Zumpus(Polly) & -Storm(Poly))", "(-Zumpus(Polly))", "(-Zombipus(Polly))", "-Zumpus(Polly)", "All x.(Polly(x) -> -Zumpus(x))", "all x.(Polly(x) -> -Zumpus(x))", "all x.(Ploy(x) -> -Zombie(x))", "(-Tompus(Polly))", "all x.(Polly(x) -> - zumpus(x))", ",Polly,is-Zumpus(Polly,Crop))", "Polly is not a zumpus.", "all x.(Polly(x) -> -Zunghose(x))", "Polly n'est pas zumpus(Polly)"]}
{"id": "prontoqa_validation_17", "nl": "Brimpuses are grimpuses.", "fol": "all x. (brimpus(x) -> grimpus(x))", "prediction": ["all x.(Brimpus(x) -> Grimpuse(x))", "all x.(Brimpus(x) -> Grumpus(x))", "all x.(Brimpus(x) -> Grimpuse(x))", "all x.(Murpouse(x) -> Grimpuse(x))", "all x.(Brompus(x) -> Gruppus(x))", "all x.(Brompus(x) -> Grappa(x))", "all x.(Brimpus(x) -> Gruppus(x))", "all x.(Brompus(x) -> Snearpuse(x))", "all x.(Brimpus(x) -> Greasy(x))", "all x.((Brimpus(x) & Grimpus(y)) -> Produces(x,y))", "all x.(Brompus(x) -> Grimpuse(x))", "all x.(Brompus(x) -> Grimpuse(x))", "all x.(Brompus(x) -> Grimpuse(x))", "all x.(Brompus(x) -> Grimpuse(x))", "all x.(Brompus(x) -> Grimpuse(x))", "all x.(Brimpuse(x) -> Grimpuse(x))"]}
{"id": "prontoqa_validation_18", "nl": "Max is a numpus, Max is a zumpus, and Max is not a grimpus.", "fol": "(numpus(Max) & zumpus(Max) & -grimpus(Max))", "prediction": ["exists x.(Max(x) & Numpus(x) & Zumpus(x) & -Grimpus(x))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Zumpus(y)) & -Smarchpus(y)))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> -Grimpus(z))))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & -Matthew(x)))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & -Max(x)))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Zumpus(y)) & -Mary(y)))", "all x y z.((Max(x) & Numpus(x) & Zumpus(y) & -Grimpus(z)) -> (Number(x) & Zumpus(y) & -Grampus(z)))", "(all x y z.(Numpus(x) & Max(y) & Zumpus(z)) -> Numpus(x)) & ((Zuppus(y) & Max(z)) -> Grimpus(z)))", "all x.(Max(x) -> (Numpus(x) & Zumpus(x) & -Grimpus(x)))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & -Smudgepus(x)))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> -Grimpus(z))))", "all x y.((Max(x) & Numpus(y)) -> (Tompus(x) & -Grimpus(x)))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> -Grimpus(x)))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & -Grampus(x)))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> -Grimpus(x)))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> -Grimpus(z))))"]}
{"id": "prontoqa_validation_19", "nl": "Max is not a brimpus.", "fol": "-brimpus(Max)", "prediction": ["Max ist kein Brumpus.", "-Brimpus(Max)", "all x.(Max(x) -> -Brumpus(x))", "all x.(Max(x) -> -Brimpus(x))", "(-Brimpus(Max))", "all x.(Max(x) -> -Brimpus(x))", "-Brimpus(Max)", "-Brimpus(Max)", "theMMaxX.(Mafia(x) -> -Brumpus(x))", "(-Brimpus(Max))", "Max, i.e. -Brumpus(i)", "all x.(Max(x) -> -Brimpus(x))", "all x.(Max(x) -> -Brimpus(x))", "Max is not a Brimpus(Max)", "ALL x.(Max(x) -> -Brimpus(x))", "all x.(Max(x) -> -Brimpus(x))"]}
{"id": "prontoqa_validation_20", "nl": "Every sterpus is a vumpus.", "fol": "all x. (sterpus(x) -> vumpus(x))", "prediction": ["all x.(Sterpus(x) -> Vampus(x))", "all x.(Sterpus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vulmulus(x))", "all x.(Sterpus(x) -> Vumpus(x))", "all x.(Sterus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vampus(x))", "all x.(Sterpus(x) -> Vampire(x))", "all x.(Sterepus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vumpus(x))", "all x.(Steerpus(x) -> Vulmpus(x))", "all x.(Sterpus(x) -> Voompus(x))", "all x.(Sterepus(x) -> Vusp(x))", "all x.(Steerpus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vumpus(x))", "all x.(Sterus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vumpus(x))"]}
{"id": "prontoqa_validation_21", "nl": "Rex is a zumpus and Rex is an impus and Rex is not a vumpus.", "fol": "(zumpus(Rex) & impus(Rex) & -vumpus(Rex))", "prediction": ["(all x y.(Rex(x) -> Zumpus(x)) & (Rex(y) -> Imperium(y)) & (Rex(y) -> -Vumpus(y)))", "all x y z.((Rx(x) & Zumpus(x) & Imperativ(y)) -> (Meets(x,y) & -Vumpus(z)))", "(Tompus(Rex) & Imperator(Rex) & -Vumpus(Rex))", "(all x y.(Rex(x) > Zumpus(x)) & (Rex(y) | Rex(y))) & (Rex(y) -> Imperator(y)) & (Rex(y) -> -Vumpus(y)))", "(all x.(Rex -> Zumpus(x)) & (Rex -> Issuel(x)) & (Rex -> -Vumpus(x)))", "all x y z.((Rex(x) & Zurpus(x) & Rex(y) & Impossible(y)) -> (Thuspus(x) & -Vumpus(z) & IsUmpus(y)))", "all x y z.((Rex(x) & Zurpus(x) & Rev.(y) & Imperator(y) & -Vumpus(z)) -> (Tompus(x) & Imperative(y)))", "all x y.((Rex(x) & Zumpus(x)) -> (Impossible(x) & Impossible(y)))", "(all x y.((Rex(x) & Zumpus(y)) -> Imperia(x)) & ((Rex(x) & Voluptu (x))) -> Vempus(x)))", "all x y z.((Rex(x) & Zumpus(x) & Impossible(y)) -> ((Impossible(y) & -Vimpus(z))))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Imperemptor(x)) & (Rex(x) -> -Vumpus(x))))", "ALL x y.((Rex(x) & Zurpus(x) & Impossible(x) & -Vumpus(y)) -> -Vumpus(x))", "all x y z w.((Rex(x) & Zumpus(x) & Impossible(y) & Rex(z)) -> (-Vumpus(w) & -Vumpus(w)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Imperman(x)) & (Rex(x) -> -Vumpus(x))))", "all x y z.((Rax(x) & Toss(x) & Rex(y) & Imperator(z)) -> (-Vumpus(x) & -Zimpus(y)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Explique(y))) & (Rex(y) -> -Vumpus(y)))"]}
{"id": "prontoqa_validation_22", "nl": "Rex is not a sterpus.", "fol": "-sterpus(Rex)", "prediction": ["Rex -Sterpus(x)", "-(Sterepus(Rex))", "Rex is notsterpus(x)", "(-Sterpus(Rex))", "Rix.(Rose(r) & -sterpus(r))", "exists x.(Rex(x) & -Sterpus(x))", "-Sterpus(Rex)", "all x.(Rex(x) -> -Sterpus(x))", "Rex is notsterpus(x)", "(-Sterpus(Rex)).", "exists x.(Rex(x) & -Sterpus(x))", "Rex,shelterpus, etc.", "Rex is not sterpus.", "-Strex(Rex)", "Rex is not sterpus.", "-Sterpus(Rex)"]}
{"id": "prontoqa_validation_23", "nl": "Every jompus is a dumpus.", "fol": "all x. (jompus(x) -> dumpus(x))", "prediction": ["all x.(Jimpus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jimpus(x) -> Dumpus(x))", "all x y.((Jompus(x) & Dumpus(y)) -> CreatedBy(x,y))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jimpus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jimpus(x) -> Dumpus(x))", "all x.(Jimpus(x) -> Dumpus(x))", "all x.(Jimpus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Joompus(x) -> Dumpus(x))"]}
{"id": "prontoqa_validation_24", "nl": "Polly is a lempus, Polly is not a dumpus, and Polly is a wumpus.", "fol": "(lempus(Polly) & -dumpus(Polly) & wumpus(Polly))", "prediction": ["(all x.(HasLimpus(x) -> Polly)) & (-HasDumpus(x) -> Polly(x)) & (-HasWumpus(x) -> Polly)))", "(all x y z.(Polly(x) -> Lempus(x)) & (Polly(y) -> -Dupus(y))) & (Polly(z) -> Wumpus(z)))", "all x y z.((Polly(x) & Lempus(y) & Dumpus(z)) -> (As(x,y) & As(x,z)))", "all x y z.((Polly(x) & Lempus(x) & Dumpus(y) & Wumpus(z)) -> (Lempus(x) & -Dumpus(y) & Wumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & all y.(Polly(y) -> -Dumpus(y))) & all z.(Polly(z) -> Wumpus(z)))", "all x.(Polly(x) -> (Lempus(x) | -Dumpus(x) | Wumpus(x)))", "(all x.(Polly(x) -> Lempus(x)) & all y.(Polly(y) -> -Dumpus(y))) & all z.(Polly(z) -> Wumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Pollly(x) -> Wumpus(x)))", "(all x y z.((Polly(x) & Lempus(x)) -> Lempus(x)) & ((Polly(y) & -Dumpus(y)) -> Wompus(z)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))", "all x y z.((Polly(x) & Lempus(x) & Dumpus(y) & Wumpus(z)) -> (Lampus(x) | Dumpus(y) & -Dumpus(y)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))"]}
{"id": "prontoqa_validation_25", "nl": "Polly is not a jompus.", "fol": "-jompus(Polly)", "prediction": ["Polly (-Jimpus(Plotos))", "Polly is not a Jompus.", "all x.(Polly(x) -> -Jomessian(x))", "All x.(Ploy(x) -> -Jompus(x))", "all x.(Polly(x) -> -Jimpus(x))", "all x.(Polly(x) -> -Jompus(x))", "(-Jimpus(Polly))", "all x.(Polly(x) -> -Jompus(x))", "(-Jumpus(Polly))", "all x.(Polly(x) -> -Jimpus(x))", "all x.(Polly(x) -> -Jimpus(x))", "the jompus (fancy* or fancy*)", "Polly is notJumpus(polly)", "all x.(Polly(x) -> -Jimpus(x))", "(-Jimpus(Polly))", "all x.(Polly(x) -> -Jompus(x))"]}
{"id": "prontoqa_validation_26", "nl": "Every impus is a numpus.", "fol": "all x. (impus(x) -> numpus(x))", "prediction": ["all x.(Issue(x) -> Numpus(x))", "all x.(Improve(x) -> Numpus(x))", "all x.(Impossible(x) -> Numpus(x))", "all x.(Impos(x) -> Numpus(x))", "all x.(Improvement(x) -> Numpus(x))", "all x.(Implementer(x) -> Numpus(x))", "all x.(Immersion(x) -> Numpus(x))", "all x.exists y.(Impossible(x) & Numpus(y))", "all x.(Impediment(x) -> Numpus(x))", "all x.(Impossible(x) -> Numpus(x))", "all x.(Impact(x) -> Numpus(x))", "all x.(Issue(x) -> Numpus(x))", "all x.(Impeach(x) -> Numpus(x))", "all x.(Impossible(x) -> Numpus(x))", "all x.(Impact(x) -> Numpus(x))", "exists x.(Impossible(x) & Numpus(x))"]}
{"id": "prontoqa_validation_27", "nl": "Polly is a lorpus and Polly is not a numpus and Polly is a yumpus.", "fol": "(lorpus(Polly) & -numpus(Polly) & yumpus(Polly))", "prediction": ["all x y.((Polly(x) & Lorpus(x)) -> (-Lumpus(x) & -Yumpus(y)))", "(all x.(Lorph(x) -> Polly)) & (Nompus(x) -> Polly(x)) & (Yumpus(x) -> Polly)))", "(exists x.(Lorpheus(x) & -Numpus(x))) & exists yumpus(y))", "(all x.((Lalorpus(x) & -Numpus(x)) | (Yumpus(x) & -Lorpus(x))))", "(all x.(Lorpus(x) -> Polly(x)) & (Nompus(x) | Yumpus(x))))", "(all x.(Lorph(x) -> Polly(x)) & (-Nompus(x) -> Polly(x)) & (Yumpus(x) -> Polly(x)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> -Numpus(y))))", "all x y z.((Polly(x) & Lorpus(y) & Yumpus(z)) -> (Lorpus(x) & -Nompus(y) & -Yumpus(z)))", "(all x.(Lorpus(x) -> Polly(x)) & (Nompus(x) | Yumpus(x))))", "all x y z.((Lorpus(x) & Nompus(y) & Yompus(z)) -> (Lorpus(x) & -Nompus(y) & Nompus(z)))", "(all x y z.((Polly(x) & Lorpus(y)) -> (Lorpus(x) | -Nompus(y)) & ((Polly(z) & Yumpus(z))) -> (Yumpus(z))))", "all x y z.((Polly(x) & Lorpus(y) & Nash(z)) -> (Lorpus(x) & -Numpus(y) & Yaumpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> -numpus(y)) & all z.(Polly(z) -> Yumpus(z))))", "(all x.(Lorph(x) -> Polly(x)) & (Nompus(x) | Yumps(x))))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Nompus(x)) & (Polly(x) -> Yumpus(x)))"]}
{"id": "prontoqa_validation_28", "nl": "Polly is not an impus.", "fol": "-impus(Polly)", "prediction": ["Polly & -Imposer(poly)", "(-IsPlate(poly))", "All x.(Polly(x) -> -Immersion(x))", "All x.(Polly(x) -> -Issue(x))", "Polly is not impus(Polly)", "(-IsPristine(Polly))", "(-Issue(poly))", "(-Is(Polly) & Assistent(Polly))", "all x.(Polly(x) -> Removable(x))", "all x.(Polly(x) -> -Impossible(x))", "(-Impresario(Polly))", "all x.(Polly(x) -> -Implemental(x))", "-Is(Polly,Is(Polly))", "Polly & -Impossible(Poly)", "Isolation(Polly,Is(Polly))", "Polly is not impus(Polly)"]}
{"id": "prontoqa_validation_29", "nl": "Alex is a lempus and Alex is a gorpus and Alex is not an impus.", "fol": "(lempus(Alex) & gorpus(Alex) & -impus(Alex))", "prediction": ["all x y.((Alex(x) & Lempus(x) & Gorpus(y)) -> -Impossible(x))", "all x y.((Alex(x) & Lempus(x) & Gretel(y)) -> (Lempus(x) & Gorpus(y) & -Imperator(x)))", "all x.(Alex(x) -> (Lempus(x) & Gorpus(x) & -Islaps(x)))", "all x y z.((Alex(x) & Lempus(x) & Gorpus(y) & Imperator(z)) -> (Lempus(x) & Gorpus(y) & -Implose(z)))", "all x y z.((Alex(x) & Lempus(x) & Chorpus(y) & Impeccation(z)) -> (exists w.(Alex(w) & Is(w,y))))", "all x y z.((Alex(x) & Lempus(x) & Gorpus(y) & Impossible(z)) -> (Lempus(x) & Gorpus(y) & -Impossible(z)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Gorpus(y)) & -Issue(y)))", "all x.(Alex(x) -> (Lempus(x) & Gorpus(x) & -Ideos(x)))", "all x.(Alex(x) -> (Lempus(x) & Gorpus(x) & -Impossible(x)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> Impossible(z))))", "(all x.(Alex(x) -> Lempus(x)) & (Alex(x) -> Gorpus(x)) & (Alex(x) -> -Ilises(x))))", "all x.(Alex(x) -> (Lempus(x) & Gorpus(x) & -Ilises(x)))", "at a ratio of 1:2 (Alex,Lempus) & Alex,Gorpus) & Alex,Impos(Alex))", "(all x.(Alex(x) -> Lempus(x)) & (Alex(x) -> Gorpus(x)) & (Alex(x) -> -Impossible(x))))", "(all x y z.(Alex(x) & Lempus(x) & Alex(y) & Gorpus(y)) & (Alex(z) & Impreza(z)))", "all x y.((Alex(x) & Lempus(x) & Gorpus(y)) -> (-Impossible(x))))"]}
{"id": "prontoqa_validation_30", "nl": "Alex is not a numpus.", "fol": "-numpus(Alex)", "prediction": ["all x.(Alex(x) -> -Numpus(x))", "all x.(Alex(x) -> -Numpus(x))", "All x.(Alex(x) -> -Numpus(x))", "(-Nompus(Alex))", "all x.(Alex(x) -> -Numpus(x))", "All x.(Alex(x) -> -Numpus(x))", "is notanumpus(Alex)", "Alex is notnumpus.", "all x.(Alex(x) -> -Numpus(x))", "all x.(Alex(x) -> -Nompus(x))", "all x.(Alex(x) -> -Numpus(x))", "-numpus(Alex)", "Alex is not a Numpus(Alex)", "Alex & -Numpus(Alex)", "(-numpus(Alex))", "all x.(Alex(x) & -Numpus(x))"]}
{"id": "prontoqa_validation_31", "nl": "Every brimpus is a yumpus.", "fol": "all x. (brimpus(x) -> yumpus(x))", "prediction": ["all x.(Brumpus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yumpus(x))", "all x.(Brimpus(x) -> Yumpus(x))", "all x.(Brimpus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yampus(x))", "all x.(Brumpus(x) -> Yampus(x))", "all x.(Brumpus(x) -> Yumpa (yumpus))", "all x.(Brimpus(x) -> Yampus(x))", "all x.(Brimpus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yumpus(x))", "all x.(Brimpus(x) -> Yumpus(x))", "all x.(Brimpus(x) -> Yumpus(x))", "all x.(Brimpus(x) -> Yumpsum(x))"]}
{"id": "prontoqa_validation_32", "nl": "Sam is not a yumpus, Sam is a shumpus, and Sam is a sterpus.", "fol": "(-yumpus(Sam) & shumpus(Sam) & sterpus(Sam))", "prediction": ["(all x.((Sam(x) & -Yumpus(x)) -> Semi-Shumpus(x)) & all y.((Sam(y) & Sterpus(y)) -> Sterpus(y)))", "all x y z.((Sam(x) & Yumpus(y) & Humpus(z)) -> (-Yumpus(x) & -Shumpus(y) & -Sterpus(z)))", "(all x.(Sam(x) -> -Yumpus(x)) & all y.(Shumpus(y) -> Sterpus(y)))", "all x y z.((Sam(x) & Yumpus(y) & Humpus(z)) -> (-Yumpus(x) & Shumpus(x) & Sterepus(x)))", "(all x y z.((Sam(x) & Yumpus(y)) -> -Yumpus(x)) & ((Sam(z) & Humpus(z))) -> Sterepus(z)))", "all x y z.((Sam(x) & Yumpus(y) & Shumpus(z)) -> (-Yumpus(x) | (Shumpus(x) & Sterpus(x))))", "(all x.(Sam(x) -> -Yumpus(x)) & (Sam(x) -> Humpus(x)) & (Sam(x) -> Sterpus(x)))", "(all x.(Samma(x) -> -Yumpus(x)) & (Shumpus(x) | Sterpus(x))))", "(all x.((Sam(x) & -Yumpus(x)) -> Shumpus(x)) & ((Sam(x) & Steerpus(x)) -> Sterpus(x)))", "all x y z.((Sam(x) & Yampus(y) & Humpus(z)) -> (-Yumpus(x) | (-Sam(x) | Shumpus(x) | Sterpus(x))))", "(all x.(Sam(x) -> -Yumpus(x)) & (Shumpus(x) & Sterpus(x)))", "(-Yumpus(Sam) | (Shumpus(Sam) | Sterpus(Sam))))", "all x y z.((Sam(x) & Yumpus(y) & Humpus(z)) -> (-Yumpus(x) & Shumpus(y) & Sterectus(z)))", "all x y z.((Sam(x) & Yumpus(y) & Humpus(z)) -> -Yumpus(x))", "exists x.(Sam(x) & -Yumpus(x) & Shumpus(x) & Sterpus(x))", "(all x.((Sam(x) & -Yumpus(x)) -> Saphus(x)) & all y.((Sam(y) & Sterpus(y)) -> Sterpus(y)))"]}
{"id": "prontoqa_validation_33", "nl": "Sam is not a brimpus.", "fol": "-brimpus(Sam)", "prediction": ["(-Brimpus(Sam) & -Brumpus(Sam))", "all x.(Sam(x) -> -Brimpus(x))", "all x.(Sam(x) -> -Brimpus(x))", "all x.((Sam(x) & -Brimpus(x)) -> -Brumpus(x))", "all x.((Sam(x) & -Brumpus(x)) -> -Brumpus(x))", "(-brimpus(Sam))", "-Brimpus(am)", "all x.(Sam(x) & -Brumpus(x))", "-Brimpus(Sam)", "all x.(Brimpus(x) -> -Brompus(x))", "Sam n'est pas brimpus.", "(-Brimpus(Sam))", "all x.(Sam(x) -> -Brimpus(x))", "all x.(Sam(x) -> -Brimpus(x))", "all x.(Sam(x) -> -Brumpus(x))", "(-Brimpus(Sam))"]}
{"id": "prontoqa_validation_34", "nl": "Each shumpus is a sterpus.", "fol": "all x. (shumpus(x) -> sterpus(x))", "prediction": ["all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "exists x.(Shumpus(x) & Sterothus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))"]}
{"id": "prontoqa_validation_35", "nl": "Polly is a dumpus and Polly is a vumpus and Polly is not a sterpus.", "fol": "(dumpus(Polly) & vumpus(Polly) & -sterpus(Polly))", "prediction": ["all x y z.((Polo(x) & Dumpus(x) & Vermpus(y) & Sterpus(z)) -> (Polo(x) & -Dumpus(x) & Vumpus(y)))", "(all x.(Polby(x) -> Dumpus(x)) & (Polby(x) -> Vumpus(x)) & -Sterpus(x)))", "all x y z.((Polly(x) & Dumpus(x) & Vumpus(y) & Sterpus(z)) -> (Ploy(x,y) & -MrsString(x,z)))", "(all x.(Plooy(x) -> Dumpus(x)) & (Vuze(x) | -Sterpus(x))))", "all x y z.((Polly(x) & Dumpus(y) & Vampus(z)) -> (Dumpus(x) & Vempus(y) & -Sterpus(z)))", "(all x.(Poly(x) -> Dumpus(x)) & (Polly(x) -> Vukpus(x)) & (Polly(x) -> -Sterpus(x))))", "(all x.(Polly(x) -> Dumpus(x)) & all y.(Polly(y) -> Dumpus(y))) & all z.(Polly(z) -> -Steerpus(z))))", "(all x.(Poultry(x) -> Dumpus(x)) & (Poultry(x) -> Vumpus(x)) & (Poultry(x) -> -Sterpus(x)))", "exists x.(Polly(x) & Dumpus(x) & Vumpus(x) & -Sterepus(x))", "(all x.(Polly(x) -> Dumpus(x)) & all y.(Polly(y) -> Vumpus(y))) & all z.(Polly(z) -> -Sterpus(z))))", "all x y.((Polly(x) & Dumpus(x)) -> (Vumpus(x) & -Sterpus(y)))", "all x y z.((Polky(x) & Dumpus(y) & Vumpus(z) & Polly(z)) -> (Dumped(x) & Vumpus(x) & -Sterpus(z)))", "(all x.(Polly(x) -> Dumpus(x)) & (Polly(x) -> Vumpus(x)) & -Polly(x)))", "all x.(Poly(x) -> (Dumpus(x) & -Vumpus(x)))", "all x y z.((Poly(x) & Dumpus(x) & Polly(y) & Vumpus(z)) -> (Is(y,x,z) & -Issterpus(x)))", "all x y z.((Polly(x) & Dumpus(x) & Vumpus(y) & Sterpus(z)) -> -Has(x,y,z))"]}
{"id": "prontoqa_validation_36", "nl": "Polly is not a shumpus.", "fol": "-shumpus(Polly)", "prediction": ["(-Shumpus(Polly))", "(-Shumpus(Polly))", "all x.(Polly(x) -> -Shumpus(x))", "all x.(Polly(x) -> -Shumpus(x))", "polly(poly) -> -Shumpus(poly))", "(-Shumpus(Polly))", "(-Shumpus(Polly))", "polly(Plody) & -Shumpus(Polly))", "all x.(Polly(x) -> -Shumpus(x))", "(-Shumpus(Polly))", "all x.(Polly(x) -> -Shumpus(x))", "Pluto is notShumpus(Polly)", "(-Shumpus(Polly))", "all x.(Polly(x) -> -Shumpus(x))", "exists x.(Polly(x) & -Shumpus(x))", "(-Shumpus(Polly))"]}
{"id": "prontoqa_validation_37", "nl": "Grimpuses are vumpuses.", "fol": "all x. (grimpus(x) -> vumpus(x))", "prediction": ["all x.(Rampus(x) -> Vampus(x))", "all x.(Grimpus(x) -> Vubis(x))", "all x.(Grimpus(x) -> Vampus(x))", "(Gruffus(GRUMPS) -> Vampuse(GRUMPS))", "all x.(Grimpus(x) -> Vuxuse(x))", "all x.(Grampus(x) -> Vampuse(x))", "all x.(Grimpus(x) -> Vampuse(x))", "all x.(Grimpus(x) -> Vampus(x))", "All x.(Grimpus(x) -> Vampuse(x))", "all x.(Grimpus(x) -> Vampuse(x))", "all x.(Grimpus(x) -> Vampuse(x))", "all x.(Grimpus(x) -> Vampuse(x))", "all x.(Grimpus(x) -> Vampire(x))", "all x.(Grimpus(x) -> Vampuse(x))", "all x.(Grimpus(x) -> Vampuse(x))", "all x.(Grimpus(x) -> Vampuse(x))"]}
{"id": "prontoqa_validation_38", "nl": "Wren is not a vumpus, Wren is a jompus, and Wren is a lorpus.", "fol": "(-vumpus(Wren) & jompus(Wren) & lorpus(Wren))", "prediction": ["((Wren(w) & -Vumpus(w)) | (Wren(w) & Jompus(w)) | (Wren(w) & Loper(w)))))", "all x.((Wren(x) & -Vumpus(x)) -> (Red(x) & Jompus(x) & Lorpus(x)))", "(all x y z.((Wren(x) & Vumpus(y)) -> -Vumpus(y)) & ((Wren(z) & Jompus(z)) -> Lordpus(z)))", "all x y z.((Wren(x) & Vumpus(y) & Jompus(z)) -> (-Vumpus(x) & NoMouse(x) & NoMouse(z) & NoMouse(z) & NoMouse(z)))", "all x y z.((Wren(x) & Jompus(y) & Lorpus(z)) -> (-Vumpus(x) & -Jompus(y) & -Lorpus(z)))", "(all x.(Wren(x) -> -Vimpus(x)) & (Jupiter(x) -> Helix(x)) & (Lorpus(x) -> LetsGo(x))))", "all x y z.((Wren(x) & Vumpus(y) & Jompus(z) & Lorpus(x)) -> (-Vumpus(x) & -Jompus(x) & -Lorpus(x)))", "all x y.((Wren(x) & Jompus(y) & Roose(z)) -> (-Vomess(x) & Jompus(y) & Larkus(z)))", "all x y z.((Wren(x) & Vermo(y) & Jompus(z)) -> (-Vumpus(x) & -Lorpus(z)))", "(all x y z.((Wren(x) & Vumpus(y) & Gromar(z)) -> -Vumpus(x)) & ((Wren(y) & Glumar(y)) -> NoMosh(y))) & ((Wren(z) & Glumar(z)) -> Loompus(z)))", "(exists x.(Wren(x) & -Vimpus(x)) & exists y.(Wren(y) & Jompus(y)) & exists z.(Lorpus(z) & -Vimpus(z))))", "(a) (Wren(A) & -Vumpus(A)) & (A) (Jompus(B) | A1) (Lorpus(B))))", "all x y z.((Wren(x) & Jompus(y) & Lorpus(z)) -> (-Vumpus(x) & Jompus(y) & Lorpus(z)))", "exists x y.(Wren(x) & -Vumpus(x) & -Jompus(y) & -Lorpus(x))", "all x y z.((Wren(x) & Vumpus(y) & Jompus(z)) -> (-Vumpus(x) & Jompus(y) & Lorpus(z)))", "all x y z.((Wren(x) & Yompus(y) & Lorpus(z)) -> (-Vumpus(x) & -Jompus(y) & -Lorpus(z)))"]}
{"id": "prontoqa_validation_39", "nl": "Wren is not a grimpus.", "fol": "-grimpus(Wren)", "prediction": ["all x.(Wren(x) -> -Grimpus(x))", "-Grumps(Wren)", "-Grimpus(Wren)", "(LittleWren(Wren,(Wren)) & -Grimpus(Wren,Wren))", "exists x.(Wren(x) & -Grimpus(x))", "all x.(Wren(x) -> -Grimpus(x))", "(-Grimpus(Wren))", "all x.(Wren(x) -> -Grimpus(x))", "(-Grimpus(Wren))", "(NotGrimpus(Wren))", "all x.(Wren(x) -> -Grimpus(x))", "-Grin(Wren)", "(-Grimpus(Wren))", "-Grimpus(Wren)", "all x.(Wren(x) -> -Grimpus(x))", "all x.(Wren(x) -> -Grimpus(x))"]}
{"id": "prontoqa_validation_40", "nl": "Each grimpus is a tumpus.", "fol": "all x. (grimpus(x) -> tumpus(x))", "prediction": ["all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grudge(x) -> Tumpus(x))", "exists x.(Grimpus(x) & Tumpus(x))", "all x.(Glamour(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x.(Gruppus(x) -> Tumpus(x))", "all x.(Grampus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "each grimpus isTumpus(y)", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Slumpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_41", "nl": "Stella is not a tumpus and Stella is a dumpus and Stella is a sterpus.", "fol": "(-tumpus(Stella) & dumpus(Stella) & sterpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Dumpus(y))) & all z.(Stella(z) -> Sterpus(z))))", "(all x.(Assumptumpus(x) -> -Tumpus(x)) & all y.((Assumptumptumptumptumptumptumptumptumptumptumptumptumptum)) -> Sterepus(y)))", "(all x.(Stella(x) -> -Tumpus(x)) & (Stella(x) -> Dumpus(x)) & (Stella(x) -> Stricus(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & (Stella(x) -> Dumpus(x)) & (Stella(x) -> Sterpus(x)))", "(all x.(Alias(x) -> -Tumpus(x)) & (-Tumpus(x) & Dumpus(x)) & (Alias(x) -> Sterpus(x)))", "all x y z.((Stella(x) & Tumpus(y) & Dumpus(z)) -> (-Tumpus(x) & Dumpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & (Stella(x) -> Dumpus(x)) & (Stella(x) -> Sterpus(x)))", "all x y z.((Stella(x) & Tompus(y) & Dumpus(z) & Sterpus(z)) -> (-Tumpus(x) & -Dumpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Dumpus(y)) & all z.(Stella(z) -> Sterpus(z))))", "all x y z.((Space(x) & Tumpus(y) & Dumpus(z)) -> -Tumpus(x) & Space(x) & Sterpus(x))", "(all x.(Tumpus(x) -> -Tumpus(x)) & (Dumpus(x) -> Sterosa(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & (Stella(x) -> Dumpus(x)) & (Stella(x) -> Sterus(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Dumpus(y)) & all z.(Stella(z) -> Sterpus(z)))", "(all x.(Salta(x) -> -Tumpus(x)) & all y.(Salta(y) -> Dumpus(y)) & all z.(Sterpus(z) -> Steros(z))))", "(all x.(Stella(x) -> NoTumpus(x)) & (Stella(x) -> Dumpus(x)) & (Stella(x) -> Sterpus(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & all y.(Dumpus(y) -> Dumpus(y))) & all z.(Sterpus(z) -> Sterpus(z))))"]}
{"id": "prontoqa_validation_42", "nl": "Stella is not a grimpus.", "fol": "-grimpus(Stella)", "prediction": ["Stella is not a Grimpus.", "Stella is -Grimpus(s)", "(-Cruper(Stella))", "Stella is not Grumpus(Stella)", "all x.(Stella(x) -> -Grimpus(x))", "(-Grimpus(Stella))", "(-Grinpse(Stella))", "All x.((Stella(x) & Crospit(x)) -> -Grimpus(x))", "Stella is not a Grimpus(Stella)", "Stella is notGrimpus(Stella)", "Stella () -> -Grimpus(x))", "Stella's Name is NotGrimpus(Stella)", "Stella ist -Grimpus(s)", "all x.(Stella(x) -> -Grimpus(x))", "Stella is not a Grimpus.", "(-Grimpus(Falla))."]}
{"id": "prontoqa_validation_43", "nl": "Lempuses are numpuses.", "fol": "all x. (lempus(x) -> numpus(x))", "prediction": ["all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lemme(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpus(x))", "all x.(Lempuse(x) -> Numpus(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpus(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))"]}
{"id": "prontoqa_validation_44", "nl": "Rex is a shumpus, Rex is not a numpus, and Rex is a tumpus.", "fol": "(shumpus(Rex) & -numpus(Rex) & tumpus(Rex))", "prediction": ["all x y.((Rex(x) & Rumpus(y)) -> (Shumpus(x) & -Numpus(y) & Tumpus(x)))", "(all x y z.(Rex(x) -> Humpus(x)) & ((Rex(y) -> -Numpus(y))) & ((Rex(z) -> Tumpus(z))))", "All x.(Rex(x) -> (Shumpus(x) & -Number(x) & Tumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & (-Hampus(x) & Humpus(x))) & (Tumpus(x) & -Hampus(x)))", "(all x y z.((Shumpus(x) & Nompus(y) & Humpus(z)) -> isShumpus(x)) & ((Rex(x) & -Numpus(x)) -> (Tumpus(x))))", "(all x.(Rex(x) -> Humpus(x)) & (-Rex(x) -> Numpus(x)) & (-Rex(x) -> Tumpus(x))))", "(all x.(Rex(x) -> Humpus(x)) & (-Numpus(x)) & (Tumpus(x))))", "(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> -Numpus(x)) & (Rex(x) -> Tompus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (-Numpus(x) & (Tumpus(x) -> Rex))))", "(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> -Numpus(x)) & (Rex(x) -> Tumpus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (-Rex(x) -> Numpus(x)) & (-Rex(x) -> Tumpus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (Rex(x) -> Nompus(x)) & (Rex(x) -> Tumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & (-Numpus(x) & Tumpus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (-Numpus(x) & Tumpus(x))))", "all x y z.((Rex(x) & Shumpus(y) & Numpus(z)) -> (Number(x,z) & Tumpus(x)))", "(all x y z.((Rex(x) & Shumpus(y) & Numpus(z)) -> (Shumpus(x) & -Numbus(y)) & ((Rex(x) & Tumpus(x)) | (-Rex(x) & Tumpus(z)))))"]}
{"id": "prontoqa_validation_45", "nl": "Rex is not a lempus.", "fol": "-lempus(Rex)", "prediction": ["Rex is not Loompus.", "Rex is NOTLimpus(x)", "Rex is not Lempus(Rex)", "all x.(Rex(x) -> -Lempus(x))", "the Rex.", "Rex is not Lempus(x)", "(-Lempus(Rex))", "all x.(Rex(x) -> -Lempus(x))", "Rex. (Lampus(Rex))", "Rex is notLempus(x)", "Rex is not Lempus(Rex)", "All x.(Rex(x) -> -Lempus(x))", "-(Rex(x) & Lempus(x))", "(-Lempus(Rex))", "(-Limpus(Rex))", "Rex is notLempus(x)"]}
{"id": "prontoqa_validation_46", "nl": "Each brimpus is a grimpus.", "fol": "all x. (brimpus(x) -> grimpus(x))", "prediction": ["all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Bimpus(x) -> Grimpus(x))", "all x.(Brumpus(x) -> Grimpus(x))", "all x.(Brompus(x) -> Cramp(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brumpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Gruppus(x))", "all x.(Brumpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Grimpus(x))", "exists x.(Brimpus(x) & Grimpus(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brumpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Grimpus(x))"]}
{"id": "prontoqa_validation_47", "nl": "Max is a jompus and Max is a lempus and Max is not a grimpus.", "fol": "(jompus(Max) & lempus(Max) & -grimpus(Max))", "prediction": ["(all x.(Max(x) -> Jompus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> -Cruppus(z))))", "(all x y.(Max(x) -> Jompus(x)) & (Max(y) -> Lempus(y)) & (Max(y) -> -Grimpus(y)))", "(all x.(Max(x) -> Jompus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> -Grimpus(x))))", "(all x.(Max(x) -> Jompus(x)) & all y.(Max(y) -> Lempus(y)) & -Grampus(y)))", "all x y.((Max(x) & Jompus(x) & Lempus(y)) -> (Fragile(x) | -Fragile(x)))", "all x y z.((Max(x) & Jompus(y) & Lempus(z)) -> (Jumpus(x) & Lempus(z) & -Grimpus(z)))", "(all x y.((Max(x) & Jompus(y)) -> (Jompus(x)) & ((Max(x) & Lempus(x)) -> -Grimpus(x))))", "(all x.(Max(x) -> Jompus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> -Grimpus(x))))", "all x y z.((Max(x) & Jompus(x) & Lempus(y) & Max(z)) -> (NoGrimp(z) & -NoMurph(z)))", "(all x.(Max(x) -> Jompus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> -Grimpus(z)))", "all x.((Max(x) & Jompus(x)) | (Max(x) & Lempus(x)) | (Max(x) & -Grippus(x))))", "(all x.(Max(x) -> Jompus(x)) & all y.(Max(y) -> Lempus(y)) & none z.(Max(z) -> Grappus(z))))", "all x.(Max(x) -> (IsJimpus(x) & IsLimpus(x) & -IsGrimpus(x)))", "(all x.(Max(x) -> Jompus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> -Grimpus(z))))", "(all x.(Max(x) -> Jompus(x)) & all y.(Max(y) -> Lempus(y)) & -Cruppus(y)))", "(all x y.((Max(x) & Jompus(x)) -> Max(y)) & ((Max(x) & Lempus(y)) -> Max(x)) & -Gripper(x)))"]}
{"id": "prontoqa_validation_48", "nl": "Every tumpus is a gorpus.", "fol": "all x. (tumpus(x) -> gorpus(x))", "prediction": ["all x.(Tumpus(x) -> Torpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))"]}
{"id": "prontoqa_validation_49", "nl": "Sam is a zumpus, Sam is not a gorpus, and Sam is a wumpus.", "fol": "(zumpus(Sam) & -gorpus(Sam) & wumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "all x y z.((Sam(x) & Zumpus(y) & -Gorpus(z) & Wumpus(y)) -> (Tompus(x) | Wumpus(x))))", "(all x y z.(Sam(x) -> Zumpus(x)) & -(Sam(y) & Gorpus(z))) & (Sam(x) -> Wumpus(x)))", "(all x y z.((Sam(x) & Zup (y)) -> HasTompus(x,y)) & ((Sam(z) & -Gorpus(z))) -> HasWumpus(z)))", "(all x.(Sam(x) -> Zumpus(x)) & all y.(Sam(y) -> -Gorpus(y)) & all z.(Sam(z) -> Wumpus(z)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wampus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "(all x.(Possum(x) -> Zumpus(x)) & all y.(Gorpus(y) -> -Gerpus(y)) & all z.(Wumpus(z) -> Wumpus(y)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "(all x.(Tompus(x) -> Tompus(x)) & all y.(Gorpus(y) -> -Tompus(y))) & all z.(Wumpus(z) -> Tompus(z)))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Gorpus(z)) -> (Microcosma(x) & Wumpus(y)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "(all x y z.((Sam(x) & Zumpus(x)) -> (Tompus(x) & -Gorpus(y)) & ((Sam(z) & Wumpus(z)) -> (Wumpus(z))))", "(all x.(Sam(x) -> Zumpus(x)) & (-Sam(x) -> Gorpus(x)) & (-Sam(x) -> Wumpus(x)))"]}
{"id": "prontoqa_validation_50", "nl": "Sam is not a tumpus.", "fol": "-tumpus(Sam)", "prediction": ["(-Tumpus(Sam))", "all x.(Sam(x) -> -Tumpus(x))", "(-Tumpus(Sam)))", "(-Tumpus(Sam,i))", "(-Tumpus(Sam))", "exists x.(Sam(x) & -Tumpus(x))", "exists x.(Sam(x) & -Tumpus(x))", "all x.(Sam(x) -> -Tumpus(x))", "(-Tumpus(Sam))", "all x.(Tumpus(x) -> -Tumpus(x))", "-Tumpus(Sam)", "all x.(Sam(x) -> -Tumpus(x))", "all x.(Sam(x) -> NoTumpus(x))", "-Tumpus(Sam,Cup,Fly)", "All x.(Sam(x) -> -Tumpus(x))", "\u201c(Sam(Sam) & -Tumpus(Sam))"]}
{"id": "prontoqa_validation_51", "nl": "Each vumpus is a tumpus.", "fol": "all x. (vumpus(x) -> tumpus(x))", "prediction": ["all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vampus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "exists x.(Vumpus(x) & Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "(all x.(Vumpus(x) -> Tumpus(x)))", "exists x.(Vumpus(x) & Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_52", "nl": "Rex is a wumpus, Rex is a yumpus, and Rex is not a tumpus.", "fol": "(wumpus(Rex) & yumpus(Rex) & -tumpus(Rex))", "prediction": ["all x y z.((Rex(x) & Humpus(y) & Yumpus(z)) -> (Wumpus(x) | Yumpus(z) | -Tumpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & all y.(Rex(y) -> Yumpus(y)) & all z.(Rex(z) -> -Tumpus(z))))", "(all x.(Rex(x) -> Lump(x)) & (Yumpus(x) & -Tumpus(x))))", "all x y z.((Rex(x) & Rex(y) & Rex(z)) -> (Wumpus(x) & Yampus(y) & -Tumpus(z)))", "(all x.(Rex(x) -> Wumpus(x)) & all y.(Yumpus(y) -> -Tumpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & all y.(Yumpus(y) -> Rex(y)) & all z.(Tumpus(z) -> -Tumpus(z))))", "all x y.((Rex(x) & Humpus(y)) -> (Wumpus(x) & Yukon(y) & -Tumpus(z)))", "(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> Yampus(x)) & -Tumpus(x)))", "(all x.(Rex(x) -> Wompus(x)) & all y.(Rex(y) -> Yumps(y)) & all z.(Rex(z) -> -Tumpus(z))))", "all x y z.((Rex(x) & Mump(y) & Yump(z) & Rex(x)) -> (Atmosphere(x,y) & NotAnimal(x,z)))", "(all x.(Rex(x) -> Wumpus(x)) & (Yumpus(x) -> Yumps(x)) & (Rex(x) -> -Tumpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & (Yumpus(x) -> Yumpus(x)) & -Tumpus(x))", "all x y z.((Rex(x) & Wumpus(y) & Yampus(z) & Tumpus(z)) -> isAt(x,y,z))", "(all x y z.(Rex(x) -> Wumpus(x)) & ((Rex(y) & Yumpus(z))) -> -Tumpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & all y.(Rex(y) -> Yumpus(y)) & all z.(Rex(z) -> -Tumpus(z))))", "(all x.(Rex(x) -> Wumpus(x)) & all y.(Yumpus(y) & -Tumpus(y)))"]}
{"id": "prontoqa_validation_53", "nl": "Rex is not a vumpus.", "fol": "-vumpus(Rex)", "prediction": ["Rex neesevitch.", "the lis.rex.(Rex) -Vimpus(l))", "Rex is not a vumpus.", "Rex is not a Vumpus(Rex)", "KettlesVumpus(Rex)", "Rex is not a Vumpus.", "(-Vumpus(Rex)).", "(-Vumpus(Rex))", "theRex(x) -> -Vumpus(x))", "(-Vumpus(Rex))", "Neel(Rex) & -Vimpus(Rex))", "Rex is not Vumpus.", "all x.(Rex(x) -> -Vimpus(x))", "all x.(Rex(x) -> -Vumpus(x))", "(-Vampus(rex))", "(-Vimpus(Rex))"]}
{"id": "prontoqa_validation_54", "nl": "Every gorpus is a rompus.", "fol": "all x. (gorpus(x) -> rompus(x))", "prediction": ["all x.(Gorpus(x) -> Rompus(x))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Rompus(x) -> Occasion(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))"]}
{"id": "prontoqa_validation_55", "nl": "Wren is not a rompus, Wren is a dumpus, and Wren is a grimpus.", "fol": "(-rompus(Wren) & dumpus(Wren) & grimpus(Wren))", "prediction": ["(all x.(Rompus(x) | Dumpus(x)) & all y.(Grimpus(y))) -> -Rompus(x))", "(all x.(Wren(x) -> -Rompus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> Grimpus(z)))", "(all x.(Wren(x) -> -Rompus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "all x y z w.((Wren(x) & Dumpus(y) & Grimpus(z)) -> (-WrenRompus(x) & Dempus(y) & Greasal(z)))", "(all x.(Wren(x) -> -Romes(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "(all x.(Wren(x) -> -Rrompus(x)) & (Wren(x) -> Dumpus(x)) & (Wren(x) -> Grimpus(x))))", "(all x.(Wren(x) -> -Rompus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "(all x y z.(Rompus(x) & Rimpus(y) & Dumpus(z)) -> -Rompus(x)) & (Dumpus(y) -> Grimpus(y)))", "all x y z.((Rompus(x) & Dumpus(y) & Grimpus(z)) -> (-Rompus(x) | (Dumpus(y) & Grimpus(z)))))", "all x y z.((Wren(x) & Dumpus(y) & Grimpus(z)) -> (-Rompus(x) & Dumpus(y) & Gruppus(z)))", "(all x.(Rompus(x) -> -Rompus(x)) & (Dumpus(x) -> -Dumpus(x)) & (Smoothpus(x) -> -Rompus(x)))", "(all x.(Wren(x) -> -Rompus(x)) & (Dumpus(x) | Grimpus(x))))", "(all x.(Wren(x) -> -Rompus(x)) & (Burn(x) | Graven(x))))", "(all x.(Wren(x) -> -Rompus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> Gruppus(z))))", "(all x.(Wren(x) -> -Rompus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> Grumpus(z))))", "(all x.(Wren(x) & -Rompus(x)) & all y.(Wren(y) -> Dumpus(y))) & all z.(Wren(z) -> Grimpus(z)))"]}
{"id": "prontoqa_validation_56", "nl": "Wren is not a gorpus.", "fol": "-gorpus(Wren)", "prediction": ["(-Gorpus(Wren))", "all x.(Wren(x) -> -Gorpus(x))", "all x.(Wren(x) -> -Gorpus(x))", "all x.(Wren(x) -> -Gorpus(x))", "all x.(Wren(x) -> -Gorpus(x))", "all x.(Wren(x) -> -Gorpus(x))", "(-Gorpus(Wren))", "all x.(Wren(x) -> -Gorpus(x))", "all x.(Wren(x) -> -Gorpus(x))", "-Gorpus(Wren)", "exists x.(Wren(x) & -Gorpus(x))", "all x.(Wren(x) -> -Gorpus(x))", "all x.(Wren(x) -> -Gorpus(x))", "all x.(Wren(x) -> -Gorpus(x))", "all x.(Wren(x) -> -Gorpus(x))", "all x.(Wren(x) -> -Gorpus(x))"]}
{"id": "prontoqa_validation_57", "nl": "Jompuses are wumpuses.", "fol": "all x. (jompus(x) -> wumpus(x))", "prediction": ["all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jimpus(x) -> Huskey(x))", "all x.(Jompuse(x) -> Wumpus(x))", "all x.(AimsAsWumpus(x) -> Homophuse(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jomes(x) -> Wompus(x))"]}
{"id": "prontoqa_validation_58", "nl": "Fae is a zumpus, Fae is not a wumpus, and Fae is a rompus.", "fol": "(zumpus(Fae) & -wumpus(Fae) & rompus(Fae))", "prediction": ["all x.((Fae(x) -> Zumpus(x)) & -Wumpus(x) & -Rompus(x))", "(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))", "all x y z.((Fae(x) & Wurmpus(y) & Rompus(z)) -> (Zumpus(x) & -Wumpus(y) & -Wumpus(z)))", "all x y z.((HasTompus(x) & -HasWumpus(y) & HasTompus(z)) -> (NumberOfStories(x) | NumberOfStories(x,z) | NumberOfStories(x,z)))", "(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))", "all x y z.((Fae(x) & Zurpus(x) & Fae(y) & Rumpus(z)) -> (-Tompus(x) & -Wumpus(y) & Rompus(z)))", "all x y.((Fae(x) & Tompus(y)) -> (Available(x,y) & -Wumpus(y) & -Available(x,y)))", "all x y z.((Fae(x) & Zurpus(x) & Fae(y) & Rumpus(z)) -> (Of(y,z) & -Of(y,z)))", "(all x y z.((Fae(x) & Zumpus(y)) -> Tosh(x)) & ((Fae(z) & -Wumpus(z)) -> Rompus(z)))", "(exists x.(Fae(x) & Zumpus(x))) & exists y.(Fae(y) & -Wumpus(y))) & exists z.(Fae(z) & Rompus(z)))", "all x y z.((Fae(x) & Tompus(y) & Wumpus(z)) -> (Rompus(x) & -Tompus(y)))", "(all x.(Famous(x) -> Zumpus(x)) & (-Wumpus(x) | Rompus(x))))", "(all x y z.(Haywatch(x) -> Zump(x)) & (Wumpus(y) & Fae(z)) -> Roma(z)))", "(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))", "(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))", "(all x.(Fae(x) -> Zumpus(x)) & exists y.(Fae(y) & -Wumpus(y)) & exists z.(Fae(z) & Rompus(z))))"]}
{"id": "prontoqa_validation_59", "nl": "Fae is not a jompus.", "fol": "-jompus(Fae)", "prediction": ["exists x.(Fae(x) & -Jompus(x))", "-Jumpus(Fae)", "all x.(Fae(x) -> -Jumpus(x))", "(Jompus(Fae) & -Jompus(Fae))", "exists x.(Fae(x) & -Jompus(x))", "(-Jompus(Fae))", "-Jompus(Fae)", "(-Jimpus(Fae))", "is notJumpus(Fae)", "(-Jompus(Fae))", "All x.(Fae(x) -> -Jimpus(x))", "All x.(Fae(x) -> -Jompus(x))", "all x.(Fae(x) -> -Jimpus(x))", "all x.(Fae(x) -> -Jompus(x))", "IsPosh(Fae)?", "(-Jumpus(Fae))"]}
{"id": "prontoqa_validation_60", "nl": "Each grimpus is a sterpus.", "fol": "all x. (grimpus(x) -> sterpus(x))", "prediction": ["all x.(Grimpus(x) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "all x.(Greek(x) -> Sterpus(x))", "all x.(Strictpus(x) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "all x.(StricklePup(x) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterodus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterus(x))", "all x.(Grimpus(x) -> Sterps(x))", "all x.(Grampus(x) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "all x.(Stretpus(x) -> Grimpus(x))", "all x.(Grampus(x) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterpus(x))"]}
{"id": "prontoqa_validation_61", "nl": "Sally is a rompus and Sally is not a sterpus and Sally is a brimpus.", "fol": "(rompus(Sally) & -sterpus(Sally) & brimpus(Sally))", "prediction": ["(all x.(Sally(x) -> Rompus(x)) & (-Sterpus(x) & Brimpus(x))))", "(all x.(Sally(x) -> Roman(x)) & (Sally(x) -> -Stereo(x)) & (Sally(x) -> Brimpus(x)))", "(all x.(Sally(x) -> Rompus(x)) & (-Sterepus(x) & -Brimpus(x)))", "all x.((Sally(x) & Rompus(x)) -> (-Stustpus(x) & Brimpus(x)))", "(all x.(Sally(x) -> Rrompus(x)) & (-Sterpus(x) & -Brimpus(x)))", "Sally is a rompus (Rompus) & Sally is -Sterpus(Strompus) & Sally is a Brimpus(Strompus))", "(all x.(Sally(x) -> Rhopus(x)) & all y.(Sally(y) -> -Sterepus(y)) & all z.(Sally(z) -> Brimpus(z))))", "(all x.((Sally(x) & Rompus(x)) -> NoSterpus(x)) & ((Sally(x) & Brimpus(x)) -> NoSterpus(x)))", "(all x.(Sally(x) -> Rompus(x)) & ((Sally(x) & -Steerpus(x)) | (-Sterpus(x) & Brimpus(x)))))", "(all x.(Sally(x) -> Romanpse(x)) & all y.(Sally(y) -> -Sterpuse(y))) & all z.(Sheep(z) -> Brimpus(z)))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> -Sterpus(y)) & all z.(Sally(z) -> Brimpus(z))))", "all x.((Sally(x) & Rompus(x)) -> (-Steerpus(x) & Brimpus(x)))", "(all x.(Sally(x) -> Romans(x)) & (Sally(x) -> -Sterepus(x))) & (Sally(x) -> Brimpus(x)))", "(all x.(Rompus(x) | -Steropod(x)) | (Brompus(x) | Brimpus(x))))", "all x y z.((Sally(x) & Rhopus(y) & -Sterpus(z)) | (Brumpus(x) & -Sterpus(x))))", "all x y.((Sally(x) & Riptide(x)) -> (Rompus(x) & -Sterus(y) & -Brimpus(z)))"]}
{"id": "prontoqa_validation_62", "nl": "Sally is not a grimpus.", "fol": "-grimpus(Sally)", "prediction": ["Sally is not a grimpus.", "the fact that Sally is noGrampus(Sally)", "Sally is not a Grimpus.", "all x.(Sally(x) -> -Grimpus(x))", "Sally ist nicht gruppus.", "Sally is notAGrimpus(s)", "Sally -Grimpus(Sally)", "Sally & -Grompus(s)", "Sally is not a grimpus.", "NoFragmus(Sally)", "Sally is not a Grumpus.", "Sally is not a Grimpus.", "Sally s notGrimpus(x)", "Sally ist keinGrimpus(Sally).", "Sally is not a Grimpus.", "Sally & -Grimpus(Sally)"]}
{"id": "prontoqa_validation_63", "nl": "Vumpuses are tumpuses.", "fol": "all x. (vumpus(x) -> tumpus(x))", "prediction": ["all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpe(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Chumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpoo(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x y.((Vumpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumulus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_64", "nl": "Sam is not a tumpus, Sam is a jompus, and Sam is a zumpus.", "fol": "(-tumpus(Sam) & jompus(Sam) & zumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Tumpus(x)) & exists y.(Jampus(y) & exists z.(Zumpus(z) & InTumpus(x,y))))", "(all x.(Sam(x) -> -Tumpus(x)) & all y.(Sam(y) -> Jompus(y)) & all z.(Sam(z) -> Zumpus(z))))", "(all x.(Sam(x) -> -Tumpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Zumpus(x)))", "(all x.(Sam(x) -> -Tumpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Zumpus(x)))", "(all x.(Sam(x) -> -Tumpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Zumpus(x)))", "(all x.(Sam(x) -> -Tumpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Zumpus(x)))", "all x.((Sam(x) & -Tumpus(x)) -> (Jompus(x) & Zumpus(x)))", "all x.((Sam(x) & -Tumpus(x)) -> (Jompus(x) & Zumpus(x)))", "all x y z.((Sam(x) & Humptus(y) & Jompus(z)) -> (-Tumpus(x) | Zumpus(z)))", "(all x.(Sam(x) -> -Tumpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Zumpus(x)))", "(all x.(Sam(x) -> -Thumpus(x)) & all y.(Jimpus(y) & Toubus(y))))", "all x.(Sam(x) -> (-Tumpus(x) & Jompus(x) & Zumpus(x)))", "all x y.((Sam(x) & Tumpus(y)) -> (-Tumpus(x) & Jompus(y) & Zumpus(x)))", "(all x.(Sam(x) -> -Tumpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Zumpus(x)))", "(all x.(Sam(x) -> -Tumpus(x)) & (Jompus(x) -> Zumpus(x)))", "(all x.(Sam(x) -> -Tumpus(x)) & all y.(Jomex(y) -> Zumpus(y)))"]}
{"id": "prontoqa_validation_65", "nl": "Sam is not a vumpus.", "fol": "-vumpus(Sam)", "prediction": ["all x.(Sam(x) -> -Vimpus(x))", "NoVumpus(Sam,Sam)", "all x.(Sam(x) -> -Vumpus(x))", "all x.(Sam(x) -> -Vimpus(x))", "all x.(Sam(x) -> -Vimpus(x))", "all x.(Sam(x) -> -Vimpus(x))", "all x.(Sam(x) -> -Vumpus(x))", "(-Vumpus(Sam))", "all x.(Sam(x) -> -Vumpus(x))", "(-Vimpus(Sam))", "all x.(Sam(x) -> -Vimpus(x))", "-Vumpus(Sam)", "all x.(Sam(x) -> -Vumpus(x))", "(Vumpus(Sam) & -Umpus(Sam))", "all x.(Sam(x) -> -Vumpus(x))", "Sam is notVumpus(Sam)"]}
{"id": "prontoqa_validation_66", "nl": "Grimpuses are zumpuses.", "fol": "all x. (grimpus(x) -> zumpus(x))", "prediction": ["all x.(GreatPush(x) -> Zumpuse(x))", "all x.(Ramblepus(x) -> Zumpus(x))", "all x.(Grimpus(x) -> Zumpus(x))", "all x.(Grimpuse(x) -> Zumpuse(x))", "all x.(Frumpus(x) -> Zumpus(x))", "ALL x.(Grimpus(x) -> Zumpus(x))", "all x.(Grimpus(x) -> Zumpus(x))", "all x.(Grimpus(x) -> Zumpus(x))", "all x.(Gruffus(x) -> Zumpus(x))", "all x.(GRumpus(x) -> Zumpus(x))", "all x.(Grimpus(x) -> Zumpus(x))", "all x.(Grimpus(x) -> Zumpuse(x))", "all x.(Grimpus(x) -> Zumpus(x))", "all x.(Rambus(x) -> Zumpus(x))", "all x.(Rawpus(x) -> Zumpus(x))", "all x.(Grimpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_validation_67", "nl": "Polly is a yumpus and Polly is not a zumpus and Polly is a numpus.", "fol": "(yumpus(Polly) & -zumpus(Polly) & numpus(Polly))", "prediction": ["(all x.(Polly(x) -> Yampus(x)) & all y.(Polly(y) -> -Zimpus(y))) & all z.(Polly(z) -> Numpus(z))))", "all x y z.((Pluto(x) & Polly(y) & Zumpus(z)) -> (Yumpus(x) & -Tompus(y) & Numpus(z)))", "(yumpus(Polly) & -zumpus(Polly) & -numpus(Polly))", "(all x y z.(Polly(x) -> Yumpose(x)) & ((Poly(y) & -Tompus(y))) | (Poly(z) & -Tompus(z)))))", "all x y z.((Polly(x) & Yumpus(x) & Polly(y) & Zumpus(y)) | (Numpus(z) | Polly(z))))", "all x y z.((Polly(x) & Yumpa(y) & Polly(z)) -> (Jumpus(y) & -Tompus(z) & Numpus(z)))", "(all x y.((Poultry(x) & Yampus(y)) -> Yumpus(x)) & ((Polly(y) & -Tompus(y))) -> Numpus(y)))", "(Yumpus(Polly) & -Zumpus(Polly) & Numpus(Poly)))", "(all x.(Plolly(x) -> Yumpus(x)) & all y.(Plolly(y) -> -Zimpus(y))) & all z.(Polly(z) -> Numpus(z))))", "(all x y z.((Polly(x) & Yampus(y)) -> Is(x,y)) & ((Polly(z) & -Zumpus(z)) -> Is(x,z))))", "(all x.(Polly(x) | Yumpus(x))) & (Polly(x) & -Tompus(x)) & (Polly(x) -> Numpus(x)))", "(all x y.(Yumpus(x) -> Polly)) & (-Tompus(y) -> Polly(y))) & (-Tompus(y) -> Polly(y)))", "all x y z.((Polly(x) & Yumpus(y) & Polly(z) & -Zimbus(z)) -> (Yumpus(x) & Numpus(x)))", "(all x.(Polody(x) -> Yucus(x)) & all y.(Polody(y) -> -Zumpus(y)) & all z.(Polody(z) -> Numpus(z))))", "(all x.(Pollie(x) -> Yumpus(x)) & (Polly(x) -> -Tommu(x)) & (Polly(x) -> Nompus(x)))", "(all x.(Lyumpus(x) -> Polly)) & (-Zumpus(x) -> Polly)) & (Numerus(x) -> Polly)))"]}
{"id": "prontoqa_validation_68", "nl": "Polly is not a grimpus.", "fol": "-grimpus(Polly)", "prediction": ["All x.((Polly(x) & -Grimpus(x)) -> -Grimpus(x))", "Polly -Grimpus(polly)", "all x.(Polly(x) -> -Grimpus(x))", "(-Grimpus(Polly))", "Polly n'est pas Gruppet(Polly)", "Polly is notGrisp(Polly)", "Polly is not a Grimpus.", "(-Grimpus(Polly))", "(-Grimpus(Polly))", "Polly is notGrimpus(Poly)", "all x.(Polly(x) -> -Grimpus(x))", "-Grimpus(Polly)", "(NoGrimpus(Polly) & Polly(Polly))", "*Arabic(Polly)", "is -Grimpus(polly)", "all x.(Polly(x) -> -Grimpus(x))"]}
{"id": "prontoqa_validation_69", "nl": "Each shumpus is a grimpus.", "fol": "all x. (shumpus(x) -> grimpus(x))", "prediction": ["all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "exists x.(Shumpus(x) & Grimpus(x))"]}
{"id": "prontoqa_validation_70", "nl": "Polly is a lorpus and Polly is a gorpus and Polly is not a grimpus.", "fol": "(lorpus(Polly) & gorpus(Polly) & -grimpus(Polly))", "prediction": ["(all x y.(Lorpus(x) & Lorpus(y)) & (Gorpus(y) & -Grimpus(y)))", "all x y z.((Polly(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) & Gorpus(x) & -Grimpus(y)))", "all x y z.((Lorpus(x) & Gorpus(y) & Polly(z)) -> (Lorpus(x) & Gorpus(y) & -Grimpus(z)))", "all x y.((Flatpus(x) & Lorpus(y)) -> (Aldorado(x) & Gorpus(y) & -Gruppus(y)))", "all x y z.((Polly(x) & Loruth(x) & Polly(y) & Gorpus(z)) -> (Lorpus(x) & Gorpus(y) & -Grimpus(y)))", "(all x y.((Poly(x) & Lorpus(x)) -> Polly(y)) & ((Poly(x) & Gorpus(y)) -> Polly(x)))", "(all x.(Lorpus(x) -> Polly,Lars)) & all y.(Gorpus(y) -> Polly,Smoothpus)))", "(all x y z.(Lorpus(x) & Lorompus(y) & Polly(z)) & Gorpus(z) & -Grimpus(x))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Gorpus(x)) & -Polly(x)))", "all x y z.((Lorph(x) & Gorpus(y) & Polly(z)) -> (Lorph(x) & Gorpus(y) & -Grimpus(z)))", "all x y z.((Polly(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) & Gorpus(x) & -Grimpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Gorpus(x)) & -Polly(x)))", "all x y z.((Polly(x) & Lorpus(x) & Gorpus(y) & NotGrimpus(z)) -> (Lady(x) & Gorpus(y) & -Grampus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> Groll(x)))", "(all x y z.((Poly(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) & Gorpus(z)) & ((Poly(x) & Grimpus(x)) -> Not(x))))", "all x y.((Polly(x) & Lorpus(x)) -> (Gorpus(y) & -Gruppus(y)))"]}
{"id": "prontoqa_validation_71", "nl": "Each impus is a tumpus.", "fol": "all x. (impus(x) -> tumpus(x))", "prediction": ["all x.(Impedus(x) -> Bulpus(x))", "all x.(Issue(x) -> Tumpus(x))", "all x.(Improve(x) -> Tumpus(x))", "all x.(Impossible(x) -> Tumpus(x))", "each impuses(x) -> Tumpus(x))", "all x.(Impossible(x) -> Tumpus(x))", "all x.(Issue(x) -> Tumpus(x))", "all x.(Issue(x) -> Tumpus(x))", "all x.(Impossible(x) -> Tumpus(x))", "all x.(Issue(x) -> Tampus(x))", "all x.(Impossible(x) -> Tumulus(x))", "all x.(Impossible(x) -> Turm(x))", "all x.(Impossible(x) -> Tumulus(x))", "all x.(Impuno(x) -> Tumpus(x))", "all x.(Issue(x) -> Tumulus(x))", "all x.(Isolator(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_72", "nl": "Rex is a numpus and Rex is not a tumpus and Rex is a gorpus.", "fol": "(numpus(Rex) & -tumpus(Rex) & gorpus(Rex))", "prediction": ["(all x.(Rex(x) -> Numpus(x)) & (-Tumpus(x) & Gorpus(x)))", "(all x.(Rix(x) -> Numpus(x)) & (Rex(x) -> -Tumpus(x)) & (Rix(x) -> Gorpus(x)))", "(all x y z.((Rex(x) & Numpus(x) & Tumpus(y)) -> Numpus(x)) & ((Rex(x) & Tobus(y)) -> Gorpus(z)))", "(all x.(Rex(x) -> Numpus(x)) & (-Tumpus(x) & Gorpus(x)))", "(all x.(Rex(x) -> Numpus(x)) & (-Tumpus(x)) | (-Tumpus(x) & Gorpus(x))))", "all x y z.((Rex(x) & Numpus(x) & Tumpus(y) & Gorpus(z)) -> (Nompus(x) | -Tumpus(y) | Gorpus(z)))", "(numpus(Rex) & -Tumpus(Rex) & Gorpus(Rex))", "all x y z.((Rex(x) & Numpus(y) & Tumpus(z)) -> (Also (Wormpus(x) & (Numpus(x) | -Tumpus(z)))))", "(all x.(Rex) -> Numpus(x)) & (Rex(x) -> -Tumpus(x)) & (Rex(x) -> Gorpus(x)))", "(all x.(Rex(x) -> Numpus(x)) & (-Tumpus(x)) | (-Tumpus(x) & Gorpus(x))))", "all x y z.((Rex(x) & Number(y) & Toupu(z)) -> (Numpus(x) & -Toupu(z) & Gorpus(x)))", "(all x y.((Rex) & Numpus(x)) -> Nimpus(y)) & ((Rex(x) & -Tumpus(y)) -> Gorpus(x)))", "all x y.((Rex(x) & Numpus(x) & Numpus(y)) -> (-Tumpus(y) & Gorpus(x)))", "(all x.(Rex(x) -> Numpus(x)) & (-Tumpus(x) & Gorpus(x)))", "all x y z.((Rex(x) & Numpus(x) & -Tumpus(y) & Gorpus(z)) -> (Tompus(x) & Gorpus(y)))", "(all x.(Rex(x) -> Nompus(x)) & (Rex(x) -> -Tumpus(x)) & (Rex(x) -> Gorpus(x)))"]}
{"id": "prontoqa_validation_73", "nl": "Rex is not an impus.", "fol": "-impus(Rex)", "prediction": ["(-Impossible(Rex))", "-IfRex(x) & -Impossible(x))", "-ImpresarioRex(x)", "Rix.(Rex) -> -Is(x,i,z))", "Rex -Impedent(x))", "-(Rex(x) & Impeccitate(x))", "(-Imperial(Rex))", "-Impediment(Rex)", "Rex is not impused.", "(-IsRex(Rex))", "Die Rex-Is(x) -> -Is(x,Impossible))", "(-Imperial(Rex))", "EXCLUSIVE(Rex)", "(-Illuminated(Rex))", "Rex, Incidentally, -Is(Rex))", "Rex & -Impossible(Rex)"]}
{"id": "prontoqa_validation_74", "nl": "Lorpuses are zumpuses.", "fol": "all x. (lorpus(x) -> zumpus(x))", "prediction": ["All x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpuse(x))", "all x.(Lorpuse(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpuse(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpuse(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpuse(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpuse(x))"]}
{"id": "prontoqa_validation_75", "nl": "Sam is a lempus, Sam is not a zumpus, and Sam is a yumpus.", "fol": "(lempus(Sam) & -zumpus(Sam) & yumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) | (Sam(x) -> -Zumpus(x))) | (Sam(x) -> Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Sam(y) -> -Zimpus(y))) & all z.(Sam(z) -> Yumpus(z)))", "(all x.(Sam(x) -> Lempus(x)) & (-Sam(x) -> Zumpus(x)) & (-Sam(x) -> Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Sam(y) -> -Zumpus(y))) & all z.(Sam(z) -> Yumpus(z)))", "(all x.(Sam(x) -> Lempus(x)) & exists y.(Sam(y) & -Zumpus(y))) & exists z.(Sam(z) & Yumpus(z))))", "(all x.(Sam(x) -> Lempus(x)) & (-Sam(x) -> Zumpus(x)) & (-Sam(x) -> Yumpus(x)))", "all x y z.((Sam(x) & Lempus(x) & Sam(y) & Tolkien(z)) -> (-Sam(y) & Yumpus(z)))", "(all x.(SamPush(x) -> Lempus(x)) & (-SamPush(x) & -SamPush(x))) & (Yumpus(x) -> Yumpus(x)))", "all x.(Sam(x) -> (Lempus(x) & -Zumpus(x) & Yampus(x)))", "exists x.(Sam(x) & (Lempus(x) | -Zumpus(x) | Yumpus(x)))", "all x.((Sam(x) & Lempus(x)) | (-Zombiz(x) | (Yumpus(x) & -Sam(x)))))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Sam(y) -> -Zumpus(y))) & all z.(Sam(z) -> Yumpa (z))))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zimpus(x)) & (Sam(x) -> Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpus(x)))", "all x y z.((Lempus(x) & Zumpus(y) & (Sam(z) | Yup))) -> (Lempus(z) & -Zumpus(z)))"]}
{"id": "prontoqa_validation_76", "nl": "Sam is not a lorpus.", "fol": "-lorpus(Sam)", "prediction": ["all x.((Sam(x) & -Lorpus(x)) -> -Lorpus(x))", "(-Lorpus(Sam)", "All x.(Sam(x) -> -Lorpus(x))", "all x.(Sam(x) -> -Lorpus(x))", "all x.(Sam(x) -> -Lorpus(x))", "(-Lorpus(Sam))", "all x.(Sam(x) -> -Lorpus(x))", "all x.(Sam(x) -> -Lorpus(x))", "all x.(Sam(x) -> -Lorpus(x))", "all x.(Sam(x) -> -Lorpus(x))", "Sam is not a lorpus.", "all x.(Sam(x) -> -Lorpus(x))", "\u2018Sam\u2019 -> -Lorpus(Sam))", "all x.(Sam(x) -> -Lorpus(x))", "-Halifax.com(Sam) & -Lorpus(Sam))", "(-Lorpus(Sam))"]}
{"id": "prontoqa_validation_77", "nl": "Every impus is a grimpus.", "fol": "all x. (impus(x) -> grimpus(x))", "prediction": ["alle erections.((IsPublish(er) & Grimpus(er)) -> (IsGrimpus(er) & Afflicted(er)))", "all x.(IsScarpa(x) -> Impossible(x))", "all x y.((Dust(x) & Dust(y)) -> Grotesque(x,y))", "all x.(Impossible(x) -> Grimpus(x))", "all x.(Immersion(x) -> Grimpus(x))", "all x.(IsSmooching(x) -> Grimpus(x))", "all x.(Impossible(x) -> Grimpus(x))", "all x.(Is(x) -> Grupus(x))", "all x.(Issue(x) -> Grumpy(x))", "all x.(Impossible(x) -> Gruppus(x))", "all x.(Impossible(x) -> Graupe(x))", "all x.(IsImpact(x) -> Grimpus(x))", "all x.(Issue(x) -> Grupe(x))", "all x.(Improve(x) -> Grimpus(x))", "all x.(Impact(x) -> Grimpus(x))", "all x.(Implementation(x) -> Scarpa(x))"]}
{"id": "prontoqa_validation_78", "nl": "Polly is a gorpus and Polly is not a grimpus and Polly is a lorpus.", "fol": "(gorpus(Polly) & -grimpus(Polly) & lorpus(Polly))", "prediction": ["all x y z.((Polly(x) & Gorpus(x) & Polly(y) & Grimpus(z)) -> (Polly(x) & Lorpus(y)))", "all x y z.((Ploy(x) & Gorpus(x) & Grimpus(y)) -> (IsGorpus(x) & -IsGrindy(y) & IsLorpus(z)))", "all x y z.((Polly(x) & Gorpus(y) & Grimpus(z)) -> (Gorpus(x) & Polly(x) & -Grimpus(y) & Lorpus(z)))", "(all x y.((Pillow(x) & Gorpus(x)) -> Gorpus(x)) & ((Pillow(y) & Gruppus(y)) | (Pillow(y) & Lorpus(y)))))", "(all x y.(Polly(x) -> Gorpus(x)) & (Polly(y) -> -Grimp(y))) & (Polly(y) -> Lorpus(y)))", "all x y z.((Polly(x) & Gorpus(x) & Polly(y) & Grimpus(z)) -> (Gorpus(x) & -Grippus(y) & Lopsu(z)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x))) & (Polly(x) -> Lorpus(x)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Gruppus(x))) & (Polly(x) -> Lorpus(x)))", "all x y.((Polly(x) & Polly(y)) -> (Porpus(x) & -Grimpus(y) & Lorpus(y)))", "(all x y z.(Polly(x) -> (Gorpus(x) & Polly(y) & -Grimpus(y) & Lorpus(z)))", "(all x.(Ploose(x) -> Gorpus(x)) & all y.(Sgrimpus(y) -> -Grimpus(y))) & all z.(Lorpus(z) -> Pow.(z))))", "all x y z.((Polly(x) & Gorpus(x) & Polly(y) & Grypus(z)) -> (-Gorpus(y) & -Lorpus(z) & -Gorpus(y) & Lorpus(z)))", "all x y.((Polly(x) & Chorpus(y)) -> (Gorpus(x) & -Grimpus(y) & Lorpus(x)))", "(all x y z.(Polly(x) -> Gorpus(x)) & (Polly(y) -> -Grimpus(y)) & (Polly(z) -> Loups(z))))", "all x y z.((Polly(x) & Gnompus(y) & Gruppa(z)) -> (Plumpus(x,y) & Lower(x,y)))", "all x y z.((Polly(x) & Gorpus(x) & Polly(y) & Grimpus(y) & Lorpus(z)) -> (HasHead(x,y) & HasHead(y,z)))"]}
{"id": "prontoqa_validation_79", "nl": "Every vumpus is a dumpus.", "fol": "all x. (vumpus(x) -> dumpus(x))", "prediction": ["all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Durus(x))", "all x.((Vumpus(x) & DumpedOut(x)) ->...", "exists x.(Vumpus(x) & Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))"]}
{"id": "prontoqa_validation_80", "nl": "Polly is a rompus, Polly is a brimpus, and Polly is not a dumpus.", "fol": "(rompus(Polly) & brimpus(Polly) & -dumpus(Polly))", "prediction": ["(all x.(Plolly(x) -> Rimpus(x)) & (Plolly(x) -> Brimpus(x)) & -Dumpus(x)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Polly(y) -> Brimpus(y))) & all z.(Polly(z) -> -Dumpus(z)))", "(all x.(Poly(x) -> Rompus(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Poly(z) -> -Dumpus(z))))", "(all x y z.((Polly(x) & Rompus(y)) -> Polly(z)) & ((Polly(x) & Brimpus(z))) -> Polly(x)) & ((Poly(x) & Dumpus(x)) -> -Polly(x)))", "(all x.(Crompus) -> Polly(x)) & (Brimpus(x) -> Polly(x)) & -Dumpus(x)))", "all x y z.((Poly(x) & Rompus(x) & Brimpus(y) & -Dumps(z)) -> (Rompus(x) & Brimpus(y) & -Dumpus(z)))", "(all x.(Polly(x) -> Cropus(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> -Dumpus(x))))", "(all x.(Polly(x) -> Rompus(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> -Dumpus(x)))", "(all x y.((Polly(x) & Rimpus(y)) -> Polly(x)) & ((Polly(x) & Brimpus(x)) -> -Potus(x)))", "(all x.((Polly(x) & Rompus(x)) -> Brimpus(x)) & ((Polly(x) & Dumpus(x)) -> NoPolly(x)))", "(all x.(Polly(x) -> Rimpus(x)) & (Polly(x) -> Brimpus(x)) & -Dumpus(x)))", "(all x.(Polly(x) -> Rompus(x)) & (Polly(x) -> Brimpus(x) & -Dupus(x)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> -Dumpus(z))))", "(all x y z.(Polly(x) -> Rompus(x)) & ((Polly(y) & Brimpus(y)) -> Polly(z))) & ((Polly(z) & Dumpus(z)) -> -Dumpus(z)))", "all x y z.((Polly(x) & Rompus(y) & Brimpus(z)) -> (Rompus(x) | Brimpus(z) | -Dumpus(z)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Brimpus(y) -> Brimpus(y)) & all z.(Polly(z) -> -Dumpus(z))))"]}
{"id": "prontoqa_validation_81", "nl": "Polly is not a vumpus.", "fol": "-vumpus(Polly)", "prediction": ["(-Vimpus(Polly))", "(-Vumpus(Polly))", "Polly is notVumpus(Polly)", "(-Vumpus(Polly)", "(-Vumpus(Polly))", "(Polly isn\u2019tVuzepus(Polly))", "Polly is not a vumpus.", "exists x.(Polly(x) & -Vumpus(x))", "(-Vumpus(Polly))", "all x.(Polly(x) -> NoVimpus(x))", "(-Vumpus(Polly))", "Polly -Vumpus(Polly)", "all x.((Polly(x) & -Vumpus(x)) -> -Vimpus(x))", "all x.(Polly(x) -> -Vumpus(x))", "all x.(Polly(x) -> -Vimpus(x))", "all x.(Polly(x) -> -Vumpus(x))"]}
{"id": "prontoqa_validation_82", "nl": "Every rompus is a yumpus.", "fol": "all x. (rompus(x) -> yumpus(x))", "prediction": ["all x.(Rompus(x) -> Yumpa(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yampus(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yumbose(x))", "all x.(Rompus(x) -> Yumpus(x))", "exists x.(Rompus(x) & Yumpus(x))", "all x.(Rompus(x) -> Yumpu(x))", "all x.(Rompus(x) -> Yampus(x))", "all x.(Rompus(x) -> Yumpa(x))", "all x.(Rompus(x) -> Yup.(Rompus(x)))", "all x.(rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yupsid(x))", "all x.(Rompus(x) -> Yumpus(x))"]}
{"id": "prontoqa_validation_83", "nl": "Stella is not a yumpus, Stella is a shumpus, and Stella is a vumpus.", "fol": "(-yumpus(Stella) & shumpus(Stella) & vumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Yumpus(x)) & exists y.(Shumpus(y) & Exists z.(Vumpus(z) & -Yumpus(y)))) & exists w.(Sluumpus(w) & Exists w.(Vumpus(w) & -Yumpus(w))))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Shumpus(y)) & all z.(Stella(z) -> Vitus(z)))", "all x y z.((Stella(x) & Yampus(y) & Shumpus(z)) -> (-Yumpus(x) & Shumpus(x) & Vampire(x)))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Humpus(x)) & (Stella(x) -> Vulpu(x)))", "all x y z.((Stella(x) & Yompus(y) & Sushi(z) & Vampi(x)) -> (-Yumpus(x) & Shumpus(x) & Vampi(x)))", "(all x y z.((Fallen(x) & Yampus(y) & -Yumpus(z)) -> (Fallen(x) & Humpus(y) & Vimpus(z)))", "(all x y.((Stella(x) & Yampus(y)) -> -Yumpus(x)) & ((Stella(x) & Humpus(y)) -> Vimpus(x)))", "all x y z.((Stella(x) & Simpson(y) & Shumpus(z)) -> (-Yumpus(x) & Scumpus(y) & Vumpus(z)))", "all x y z.((Stella(x) & Yumpus(y)) -> (-Yumpus(y) & Shumpus(z) & Vulpomus(x)))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Humpus(y)) & all z.(Stella(z) -> Voompus(z))))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Shumpus(x)) & (Stella(x) -> Vumpus(x)))", "(all x y z.((Yumpus(x) & Stella(y)) -> -Yumpus(x)) & ((Yumpus(y) & Stella(z)) -> Shumpus(z))) & ((Yumpus(y) & Stella(z)) -> Vumpus(z)))", "all x y z.((Stella(x) & Yumpus(y) & Shumpus(z)) -> (-Yumpus(x) & Shumpus(z) & Vumpus(x)))", "all x.((Stella(x) & -Yumpus(x)) -> (shumpus(x) | vampus(x)))", "(all x.(Talla(x) -> -Yumpus(x)) & all y.(Shumpus(y) & all z.(Vumpus(z)) -> -Yumpus(z)))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Sumpfus(y))) & all z.(Stella(z) -> Vumpus(z))))"]}
{"id": "prontoqa_validation_84", "nl": "Stella is not a rompus.", "fol": "-rompus(Stella)", "prediction": ["Stella (nonrompus)", "all x.(Stella(x) -> -Rompus(x))", "Stella (-rompus))", "Stella is not a rompus.", "Stella is not rompus.", "Stella is not a Rompus.", "Stella is not a rompus.", "all x.(Stella(x) -> -Rompus(x))", "Stella is not a rompus.", "all x.(Stella(x) -> -Rompus(x))", "Stella is not a Romp (Rompus)", "Stella is not a rompus.", "-Rompus(Stella)", "Stella is not a rompus.", "Stella is not a rompus.", "Stella is notRumpus(Stella)"]}
{"id": "prontoqa_validation_85", "nl": "Each wumpus is a brimpus.", "fol": "all x. (wumpus(x) -> brimpus(x))", "prediction": ["all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_validation_86", "nl": "Max is a yumpus, Max is not a brimpus, and Max is a lorpus.", "fol": "(yumpus(Max) & -brimpus(Max) & lorpus(Max))", "prediction": ["(all x.(Max(x) -> Yampus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Yumpen(x)) & (-Max(x) -> Brimpus(x)) & (-Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Yumpe(x)) & (-MaxPumpus(x) & -Krumpus(x))) & (-MaxMotor(x) -> Lorpus(x)))", "(all x.(Max(x) -> Yumpa(x)) & (Max(x) -> -Birmpus(x)) & (Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))", "(all x y z.(Max(x) -> Yumpus(x)) & ((Max(y) & -Brimpus(y))) | (-Max(z) & Brimpus(z)))) & ((Max(z) & Lorpus(z))) -> Of(z,x)))", "(all x.(Max(x) -> Yumpus(x)) & ((Max(x) & -Brimpus(x)) | (Max(x) & -Brimpus(x)))))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> -Marmpus(x)) & (Max(x) -> Lopus(x)))", "(all x.(Max(x) -> Yumpus(x)) & (-Max(x) -> Brimpus(x)) & (-Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Yumpose(x)) & (-Max(x) -> Brimpus(x)) & ((Max(x) & Loompus(x))))", "(all x.(Max(x) -> Yampus(x)) & all y.(Max(y) -> -Brumpus(y))) & all z.(Max(z) -> Lorpus(z))))", "all x y z.((Max(x) & Yumpus(x) & -Brimpus(y) & Lordpus(z) & -Yuppus(z)) -> (OtherOf(x,y,z)) & MainOffice(x,y) & MainOffice(x,z)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Yumpus(x)) | (-Max(x) & Brimpus(x))) & (Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Kumorse(x)) & all y.(Max(y) -> -Brimpus(y))) & all z.(Max(z) -> Lorpus(z)))"]}
{"id": "prontoqa_validation_87", "nl": "Max is not a wumpus.", "fol": "-wumpus(Max)", "prediction": ["Max isn\u2019tWumpus.", "(-Wumpus(Max))", "all x.(Max(x) -> -Wumpus(x))", "(-Wumpus(Max))", "all x.(Max(x) -> -Wumpus(x))", "(-Wumpus(Max))", "Max is not Wump.", "Num(x) -> -Wumpus(x))", "all x.(Max(x) -> -Wumpus(x))", "all x.(Max(x) -> -Wumpus(x))", "(-Wumpus(Max))", "-Wumpus(Max)", "-Wumpus(Max)", "-Wumpus(Max)", "(-Wumpus(Max))", "(-Wumpus(Max))"]}
{"id": "prontoqa_validation_88", "nl": "Zumpuses are impuses.", "fol": "all x. (zumpus(x) -> impus(x))", "prediction": ["all x.(Zumpuse(x) -> Issue(x))", "all x.(Zumpus(x) -> Ispose(x))", "all x.(Zumpus(x) -> Issue(x))", "all x y.((Zumpuse(x) & Predictor(y)) -> Influence(x,y))", "all x.(Zumpuse(x) -> Issue(x))", "all x.(Zumpus(x) -> Impusa(x))", "all x.(Zumpus(x) -> Issue(x))", "all x.(Zumpus(x) -> Issue(x))", "all x.(Zumpuse(x) -> Imperium(x))", "all x.(Zumpuse(x) -> Ispose(x))", "all x.(Zumpus(x) -> Issue(x))", "all x.(Zumpus(x) -> Issue(x))", "all x.(Zumpus(x) -> Issue(x))", "all x.(Zumpus(x) -> Issue(x))", "all x.(Zumpus(x) -> Issue(x))", "all x.(Zumpus(x) -> Idiotes(x))"]}
{"id": "prontoqa_validation_89", "nl": "Alex is a tumpus and Alex is not an impus and Alex is a rompus.", "fol": "(tumpus(Alex) & -impus(Alex) & rompus(Alex))", "prediction": ["ALL x.(Alex(x) -> (Tumpus(x) & -Imposition(x) & -Rompus(x)))", "(all x.(Alex(x) -> Tumpee(x)) & (Alex(x) -> -Issue(x)) & (Alex(x) -> Rompus(x))))", "(all x.(AlexAnalyze(x) -> Tumpus(x)) & (AlexAnalyze(x) -> -Immersion(x)) & (AlexAnalyze(x) -> Rompus(x)))", "all x.(Alex(x) -> (Tumpus(x) & -Impuls(x) & Rompus(x)))", "all x y.((Alex(x) & Tomb(x) & Alex(y)) -> (-Imposer(y) & Rompus(y)))", "all x y.((Alex(x) & Tompus(y)) & -Ilios(y)) -> Rompus(x))", "all x y.((Alex(x) & Tompus(x) & -Iliot(y)) -> Rompus(x))", "(all x.(AlexAltompus(x) -> Tumpus(x)) & (AlexAltompus(x) -> -Impossible(x)) & (AlexAltompus(x) & -Impossible(x))))", "all x y.((Alex(x) & Rumpus(y)) -> (Tumpus(x) & -Issue(x) & Rhombus(x)))", "(all x y.(Alex(x) -> Tumpus(x)) & ((Alex(y) & -Issue(y))) | (Alex(z) & Rompus(z)))))", "all x y z.((Alex(x) & Tumpus(x) & impossible(y) & Rompus(z)) -> (Alex(x) & -Impossible(y) & Rrompus(z)))", "(all x.(Alex(x) -> Tompus(x)) & all y.(Alex(y) -> -Ilises(y))) & all z.(Alex(z) -> Rompus(z)))", "all x y.((Alex(x) & Tompus(x)) -> (-Impossible(x) & Romospot(y)))", "all x y z.((Alex(x) & Tumpus(x) & Is(y) & Romp(z)) -> (Same(x,y) & -Is(y,z) & Roma(z)))", "all x y z.((Alex(x) & Tomb(y) & IsIdeologic(z)) -> (Tumpus(x) & -Ismuel(y) & Rompus(z)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> -Ilios(x)) & (Alex(x) -> Rompus(x)))"]}
{"id": "prontoqa_validation_90", "nl": "Alex is not a zumpus.", "fol": "-zumpus(Alex)", "prediction": ["all x.(Alex(x) -> -Zumpus(x))", "(-Zumpus(Alex))", "(-Zumpus(Alex))", "Alex n'est a zumpus.", "all x.(Alex(x) -> -Zumpus(x))", "Alex -Zombipus(Alex)", "all x.(Alex(x) -> -Zombiasp(x))", "Alex is not zumpus.", "Alex is no Zumpus.", "(-zumpus(Alex) | -Tompus(Alex)))", "is -Tompus(Alex)", "Alex is not a zumpus.", "-Alexa(Alex)", "all x.(Alex(x) -> -Zumpus(x))", "all x.(Alex(x) -> -Zumpus(x))", "all x.(Alex(x) -> -Zumpus(x))"]}
{"id": "prontoqa_validation_91", "nl": "Tumpuses are wumpuses.", "fol": "all x. (tumpus(x) -> wumpus(x))", "prediction": ["all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> (Wumpus(x) & -Wumpus(x)))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Pumpus(x) -> Wampus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.((Tumpus(x) & Wumpus(x)) -> RelativelyNew(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpuse(x) -> Wumpus(x))"]}
{"id": "prontoqa_validation_92", "nl": "Rex is a zumpus, Rex is a gorpus, and Rex is not a wumpus.", "fol": "(zumpus(Rex) & gorpus(Rex) & -wumpus(Rex))", "prediction": ["(all x y z.(Rex(x) -> Zurpus(x)) & (Gorpus(y) -> Gorpus(y)) & (Wumpus(z) -> -Wumpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & -Wumpus(y)))", "(all x.(Rex(x) -> Zumpus(x)) & ((Rex(x) & Gorpus(x))) -> -Wumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Gorpus(x)) & (Rex(x) -> -Wumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Gorpus(x)) & -Wumpus(x)))", "(all x.(R\u00e9x(x) -> Zumpus(x)) & all y.(R\u00e9x(y) -> Gorpus(y)) & all z.(R\u00e9x(z) -> -Wumpus(z))))", "(all x.(Rex(x) -> Zumpus(x)) & ((Rex(x) -> Gorpus(x)) & ((Rex(x) -> -Wumpus(x)))))", "(all x.(Rex(x) -> Zumpus(x)) & ((Rex(x) & Gorpus(x))) & ((Rex(x) & -Wumpus(x))) -> Dorpus(x)))", "(all x y.(Rex(x) -> Zumpus(x)) & (Rex(y) -> Gorpus(y)) & (Rex(y) -> -Wumpus(y)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.((Rex(y) & Gorpus(y)) -> -Wumpus(y)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & all z.(Rex(z) -> -Wumpus(z))))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Gorpus(x)) & (Rex(x) -> -Wumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & all z.(Rex(z) -> -Wumpus(z)))", "(All x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Gorpus(x)) & -Wumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & all z.(Rex(z) -> -Wumpus(z))))", "(all x.(Rex(x) -> Tosh(x)) & all y.(Rex(y) -> Gorpus(y)) & all z.(Wumpus(z) -> -Wumpus(z))))"]}
{"id": "prontoqa_validation_93", "nl": "Rex is not a tumpus.", "fol": "-tumpus(Rex)", "prediction": ["-Tumpus(Rex)", "Rex is not a Tumpus.", "Rex is not tumpus.", "Rex & -Tumpus(rex)", "Rex is notTumpus(x)", "Rex is not Tumpus(x)", "Rex is not a tumpus.", "Rex is not a tumpus.", "Rex is notTumpus(Rex)", "Rex is notTumpus(Rex)", "All x.(Rex(x) -> -Tumpus(x))", "Rex is notTumpus(rex)", "All x.(Rex(x) -> -Tumpus(x))", "Rex is notTumpus(x)", "Rex is notTumpus.", "Rex, of all x.(Tumpus(x) -> -Tumpus(x))"]}
{"id": "prontoqa_validation_94", "nl": "Tumpuses are lorpuses.", "fol": "all x. (tumpus(x) -> lorpus(x))", "prediction": ["all x.(Tumpouse(x) -> Lorpuse(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpuse(x) -> Lorpuse(x))", "all x.(Tumulus(x) -> (Lorpuse(x)))", "all x.(Tumpuse(x) -> Lorpus(x))", "all x.(Tumpuse(x) -> Lorpus(x))", "all x.(Tummus(x) -> Lorpus(x))", "all x.(Tumulus(x) -> Lorpus(x))", "all x.(Tumpuse(x) -> Lorpus(x))", "all x.(Tumulus(x) -> Larpus(x))", "all x.(Tumpuse(x) -> Loomise(x))", "all x.(Tumpus(x) -> Thrombosis(x))", "all x.(Tumult(x) -> Lorpuse(x))", "all x.(Tumpus(x) -> Loomps(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumult(x) -> Looms(x))"]}
{"id": "prontoqa_validation_95", "nl": "Sam is not a lorpus, Sam is an impus, and Sam is a grimpus.", "fol": "(-lorpus(Sam) & impus(Sam) & grimpus(Sam))", "prediction": ["(all x y z.(Lorpus(x) -> -Lorpus(x)) & (Erzgelt(y) -> Requirements(y))) & ((Sam(z) & Grimpus(z))) -> -Lorpus(z)))", "all x.((Sam(x) & -Lorpus(x)) -> (Impossible(x) & Greasy(x)))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Ispose(y))) & all z.(Sam(z) -> Grimpus(z)))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Illuminates (y))) & all z.(Sam(z) -> Gruppus(z))))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Impossible(y))) & all z.(Sam(z) -> Grimpus(z)))", "(all x y z.((Sam(x) & Lorpus(y)) -> -Sam(x)) & ((Sam(z) & Impossible(z)) -> (Sam(x) & Grimpus(z))))", "(all x y z.((Sam(x) & -Lorpus(x)) -> Sam(y)) & ((Sam(z) & -Lorpus(y)) -> Issue(z)) & ((Sam(z) & Grimpus(z)) -> Sam(z))))", "(all x.(Sam(x) -> -Lorpus(x)) & (Sam(x) -> Imperator(x)) & (Sam(x) -> Grimpus(x)))", "(all x.(Sam(x) -> -Lorpus(x)) & (Sam(x) -> Obscarp(x)) & (Sam(x) -> Grempus(x)))", "(all x.(Sam(x) -> -Vorpus(x)) & all y.(Sam(y) -> Imperator(y)) & all z.(Sam(z) -> Crampus(z))))", "all x y z.((Sam(x) & Lorpus(y) & Defiant(z)) -> (-Lorpus(x) & -Estrella(y) & Grimpus(z)))", "(all x.((Sam(x) & -Lorpus(x)) -> Impermant(x)) & all y.((Sam(y) & Grimpus(y)) -> -Lorpus(y)))", "all x y z.((Sam(x) & Lorpus(y) & Erzgeuse(z)) -> (-Lorpus(x) & Imperator(x) & Grimpus(x)))", "exists x y z.((Sam(x) & Lopo(y) & Is(z)) -> (-Lorpus(x) & Impossible(x) & Grimpus(x)))", "all x y z.((Sam(x) & -Lorpus(x) & Issue(y) & Grimpus(z)) -> (-Llorpus(x) & Issue(y) & -Grimpus(z)))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Islap(y))) & all z.(Sam(z) -> Grimpus(z)))"]}
{"id": "prontoqa_validation_96", "nl": "Every vumpus is a jompus.", "fol": "all x. (vumpus(x) -> jompus(x))", "prediction": ["all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))"]}
{"id": "prontoqa_validation_97", "nl": "Fae is a brimpus and Fae is a numpus and Fae is not a jompus.", "fol": "(brimpus(Fae) & numpus(Fae) & -jompus(Fae))", "prediction": ["(all x.(Fare(x) -> Brimpus(x)) & (Fare(x) -> Numpus(x)) & (Fare(x) -> -Jompus(x))))", "all x y,z.((Fae(x) & Brimpus(x) & Numpus(x) & -Jompus(y)) -> (Swiss(x) & Smiling(z)))", "(all x y.(Fae(x) -> Brimpus(x)) & (Fae(y) -> Numpus(y)) & -Jompus(y)))", "all x y z.((Fae(x) & Brumpus(x) & Numpus(y) & -Jumpus(z)) -> (Brimpus(x) & Numpus(y) & -Jumpus(z)))", "all x y.((Fae(x) & Brimpus(x) & Numpus(y)) | (-Fae(x) & Jompus(y))))", "(all x y z.((Fae(x) & Brimpus(x)) -> (Brimpus(x) & Numpus(y))) & ((Fae(z) & Jompus(z)) -> -Jumpus(z)))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Numpus(x)) & -Jimpus(x)))", "(all x.(Famous(x) -> Brimpus(x)) & (Numpus(x) | -Jumpus(x)))", "(all x y z.((Fae(x) & Brimpus(x)) -> Biological(x)) & ((Fae(y) & Numpus(y)) -> -Jimpus(z)))", "all x y z.((Fae(x) & Threat(y) & Numpus(z)) -> (Brimpus(x) & Numpus(y) & -Jumpus(z)))", "all x y z.((Fae(x) & Rempus(y) & Numpus(z)) -> (Brimpus(x) & Numpus(y) & -Jampus(z)))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Numpus(x)) & -Jompus(x)))", "(all x.(Fae(x) -> Brimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Jimpus(z))))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Numpus(x)) & -Jompus(x)))", "all x y.((Fae(x) & Brimpus(x) & Fae(y)) -> (Nubpus(y) & -Jimpus(y)))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Jompus(x))))"]}
{"id": "prontoqa_validation_98", "nl": "Fae is not a vumpus.", "fol": "-vumpus(Fae)", "prediction": ["Die Fae is notVimpus(Fae)", "(-Vampus(fae))", "Fab is notVimpus(Faby)", "all x.(Fae(x) -> -Vumpus(x))", "exists x.(Fae(x) & -Vumpus(x))", "all x.(Fae(x) -> -Vimpus(x))", "(-Vumpus(Fae))", "(-Vimpus(fae)", "(-Vumpus(Fae))", "(-Vumpus(Fae))", "all x.(Fae(x) -> -Vimpus(x))", "(-Vimpus(Fae))", "-Vumpus(Fae,)", "F\u00e9e n'est pas vumpus.", "-Vumpus(fae)", "all x.(Fae(x) -> -Vimpus(x))"]}
{"id": "prontoqa_validation_99", "nl": "Lempuses are gorpuses.", "fol": "all x. (lempus(x) -> gorpus(x))", "prediction": ["all x.(Lempuse(x) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpus(x))"]}
{"id": "prontoqa_validation_100", "nl": "Sally is an impus and Sally is a tumpus and Sally is not a gorpus.", "fol": "(impus(Sally) & tumpus(Sally) & -gorpus(Sally))", "prediction": ["all x.(Sally(x) -> (Issue(x) & Tumpus(x) & -Gorpus(x)))", "(all x.(Sally(x) -> Impeccator(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x)))", "(all x.(Sally(x) -> Impossible(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x))))", "all x y.((Sally(x) & Impos(x) & Sally(y)) -> (Tumpus(y) & -Gorpus(y)))", "(all x y z.((Sally(x) & Impeccation(x)) -> Impossible(x,y)) & ((Sally(z) & Tompus(z)) -> Totumpus(z)) & ((Sally(x) & Gorpus(x)) -> -Gorpus(x)))", "(all x.(Sally(x) -> Illegal(x)) & (Sally(x) -> Tompus(x)) & (Sally(x) -> -Gorpus(x)))", "all x.(Sally(x) -> (Issue(x) & Sally(x) & Rumpus(x) & -Gorpus(x)))", "(all x y z.((Sally(x) & Impossum(y) & Tumpus(z)) -> Obscured(x)) & ((Sally(x) & Tumpus(z)) -> -Gorpus(x))) & ((Sally(x) & Rumpus(y)) -> Rejected(z)))", "(all x.(Sally(x) -> Impirezer(x)) & (Sally(x) -> Tumpus(x)) & -Gorpus(x)))", "(all x.(Sally(x) -> Is(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x)))", "(isolator(s) & tumpus(s) & -gorpus(s))", "(all x.(Sally(x) -> IsImpossible(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x))))", "all x.((Sally(x) -> (Impossible(x) | Tumpus(x) | -Gorpus(x)))", "(all x.(Sally(x) -> Impeciations(x)) & all y.(Sally(y) -> Tumpus(y)) & all z.(Sally(z) -> -Gorpus(z))))", "(all x.(Sally(x) -> Impossible(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x)))", "(all x.(Sally(x) -> Impossible(x)) & (Tumpus(x) -> NotGorpus(x)))"]}
{"id": "prontoqa_validation_101", "nl": "Sally is not a lempus.", "fol": "-lempus(Sally)", "prediction": ["Sally exists x.(Lempus(x) & -Lempus(x))", "Sally is not a Lempus.", "all x.(Sally(x) -> -Lempus(x))", "Sally is not a lempus.", "Sally is notLempus(Sally)", "Sally n\u2019est pas a lempus.", "Sally n'est pas lempus.", "Sally -Lempus(Sally)", "Sally is notLempus.", "(-Lempus(Sally))", "(-Limpus(Sally))", "Sally is not a lempus.", "Sally is notalempus(Sally)", "(-Limpus(Sally))", "Sally -Lempus(Sally)", "Sally is not a lempus."]}
{"id": "prontoqa_validation_102", "nl": "Wumpuses are grimpuses.", "fol": "all x. (wumpus(x) -> grimpus(x))", "prediction": ["all x.(Wumpuse(x) -> Grimpuse(x))", "all x.(Wukus(x) -> Grimpus(x))", "(Grimpuss(w) & Small(w) & Grackle(w))", "all x.(Wumpuse(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpuse(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpuse(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpuse(x) -> Grimpuse(x))", "all x.(Wumpuse(x) -> Grapple(x))", "all x.(Wushuse(x) -> Grimpuse(x))"]}
{"id": "prontoqa_validation_103", "nl": "Rex is a jompus, Rex is a vumpus, and Rex is not a grimpus.", "fol": "(jompus(Rex) & vumpus(Rex) & -grimpus(Rex))", "prediction": ["(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Vumpus(y)) & all z.(Rex(z) -> -Grimpus(z)))", "all x y z.((Rex(x) & Jompus(x) & Vuxus(y) & Sturdy(x)) -> (Hompus(x) | Staumpus(y) & -Grimpus(z)))", "(all x.(Rex(x) -> Jompus(x)) & (Vumpus(x) & -Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Voompus(x)) & (Rex(x) -> -Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Vimpus(y)) & all z.(Rex(z) -> -Grimpus(z))))", "(all x.(Rex,jompus) -> -Scarlet(x)) & all y.(Rex,vumpus) -> -Scarlet(y)))", "(all x.(Rex(x) -> Jompus(x)) & (Vimpus(x) -> Vumpus(x)) & (NoGrasppus(x) -> Grimpus(x)))", "(all x y z.(Jompus(x) -> Rex)) & (Seed(y) -> Rex)) & (Vumpus(z) -> Rex)) & (Baumpus(z) -> -Burnpus(z)))", "(all x y.(Jompus(x) -> Rex)) & (Vumpus(y) -> Rex)) & (Grimpus(z) -> -Rumpus(z)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Voompus(x)) & (Rex(x) -> -Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Vumpus(x)) & -Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) | (Rex(x) -> Voompus(x)) & -Surppus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Vumpus(y) -> -Grimpus(y)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Vumpus(x)) & -Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & (Crimps(x) -> Vulmpus(x))) & (Crimps(x) -> -Crimps(x)))", "(all x.(Richthone(x) -> Jompus(x)) & (Richthone(x) -> Vumpus(x)) & (Richthone(x) -> -Grimpus(x)))"]}
{"id": "prontoqa_validation_104", "nl": "Rex is not a wumpus.", "fol": "-wumpus(Rex)", "prediction": ["Rex is -Wumpus(Rex)", "(-Wumpus(Rex))", "(-Wumpus(Rex))", "-Wumpus(Rex)", "all x.(Rex(x) -> -Wumpus(x))", "Rex is -Wumpus(x)", "(-Wumpus(Rex))", "(-Wumpus(Rex))", "-Wumpus(rex)", "Rex -Wumpus(x)", "Rex is notWumpus(Rex)", "Rex is notaWumpus(x)", "Rex(x) -> -Wumpus(x))", "Rex is not a wumpus(x)", "Wumpus(Rex)", "Rex, in fact, is not a wumpus."]}
{"id": "prontoqa_validation_105", "nl": "Every vumpus is a zumpus.", "fol": "all x. (vumpus(x) -> zumpus(x))", "prediction": ["all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vmpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Toxus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> zumpus(x))"]}
{"id": "prontoqa_validation_106", "nl": "Fae is a lempus and Fae is not a zumpus and Fae is a dumpus.", "fol": "(lempus(Fae) & -zumpus(Fae) & dumpus(Fae))", "prediction": ["(all x y.((Fae(x) & Lempus(x)) -> Dumpus(y)) & ((Fae(x) & -Zumpus(x)) -> Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Dumpus(x)))", "((Fae(f) & Lempus(f)) & -Zumpus(f) & Dumpus(f))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Toypus(x)) & (Fae(x) -> Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Dumpus(x)))", "all x.(Fae(x) -> (Lempus(x) & -Zumpus(x) & Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Tompus(x)) & (Fae(x) -> Dumpus(x)))", "(all x y.(Fae(x) -> Lempus(x)) & (Fae(y) -> -Zumpus(y))) & (Fae(y) -> Dumpus(y)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Tompus(x)) & (Fae(x) -> Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Dumpus(x)))", "(all x y z.(Fae(x) -> Lempus(x)) & (SameFor(y) & -Zumpus(y)) & (Fae(z) -> Dumpus(z)))"]}
{"id": "prontoqa_validation_107", "nl": "Each grimpus is an impus.", "fol": "all x. (grimpus(x) -> impus(x))", "prediction": ["-exists x.(Grimp(x) & Impossible(x))", "all x.(Grimps(x) -> Impossible(x))", "all x.(Grimpus(x) -> Is(x))", "all x.(Grimpus(x) -> IsImplemented(x))", "all x.(Grimpus(x) -> Impermant(x))", "all x y.((Grimpus(x) & Grumpy(y)) -> EstesImpromulo(x))", "all x.(Grimpus(x) -> IsPrimit(x))", "all x.(Grimpus(x) -> Impossible(x))", "all x.(Grimpus(x) -> Illegal(x))", "all x.(Gruppus(x) -> Illipte(x))", "everyone (except Grimpus) -> Implicator(Sample))", "allen grimpus's.", "all x.(Grimpus(x) -> Illegal(x))", "Alle Grumpuses(x) -> IsFermius(x))", "is a grimpus(x) & imposes(x))", "all x.(Grimp(x) -> Imposer(x))"]}
{"id": "prontoqa_validation_108", "nl": "Stella is not an impus and Stella is a zumpus and Stella is a rompus.", "fol": "(-impus(Stella) & zumpus(Stella) & rompus(Stella))", "prediction": ["(all x.(Stella(x) -> -Impossible(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Rompus(x)))", "(all x.(Stella(x) -> -Imposition(x)) & all y.(Stella(y) -> Zumpus(y))) & all z.(Stella(z) -> Rompus(z)))", "(all x.(Settlement(x) -> -Impossible(x)) & (Fumpus(x) | Rompus(x))))", "(all x.(Stella(x) -> -Ismulitis(x)) & all y.(Stella(y) -> Zumpus(y)) & all z.(Stella(z) -> Ripus(z)))", "(all x.(Stella(x) -> -Issuel(x)) & all y.(Stella(y) -> Zumpus(y))) & all z.(Stella(z) -> Rompus(z)))", "all x y z.((Stella(x) & Stella(y) & Zumpus(z)) -> (-Impediments(x) & Tossup(y) & Rompus(z)))", "(all x.(Stella(x) -> -Impossible(x)) & all y.(Stella(y) -> Tossus(y)) & all z.(Stella(z) -> Rompus(z))))", "(all x.(Stella(x) -> -Imposs'(x)) & (Tompus(x) | Rompus(x))))", "(all x.(Stella(x) -> -Impossed(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Rompus(x)))", "(all x.(Stella(x) -> -Impossible(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Rompus(x)))", "all x y.((Stella(x) & Stella(y)) -> (-Impossible(x) & Zumpus(y) & Rompus(y)))", "(all x.((Stella(x) & -Impossible(x)) | (Stella(x) & Zumpus(x)))) & ((Stella(x) & Rompus(x))) -> -Impossible(x)))", "(nonimise(Stella) & zumpus(Stella) & rompus(Stella))", "(all x.(Stella(x) -> -Impossible(x)) & (Stella(x) -> Tommoth(x)) & (Stella(x) -> Rompus(x))))", "(all x.(Stella(x) -> is-Impossible(x)) & all y.(Stella(y) -> isTompus(y)) & all z.(Stella(z) -> (Rompus(z)))))", "exists x.(Stella(x) & -Is(x) & Zumpus(x) & Rompus(x))"]}
{"id": "prontoqa_validation_109", "nl": "Grimpuses are impuses.", "fol": "all x. (grimpus(x) -> impus(x))", "prediction": ["all x.(Grampus(x) -> Issue(x))", "all x.(Grimpus(x) -> Impose(x))", "all x.(Grimpus(x) -> Issue(x))", "all x.(Grimpus(x) -> Imprisoned(x))", "all x.(Grimpus(x) -> Issue(x))", "all x.(Grimpuse(x) -> Issue(x))", "all x.(Grimpus(x) -> Issues(x))", "all x.(Grimpus(x) -> Issue(x))", "all x.(Grimpus(x) -> Imperium(x))", "all x.(Grimplet(x) -> Issue(x))", "all x.(Grimpus(x) -> Issue(x))", "all x.(Gripper(x) -> Issue(x))", "all x.(Grimpus(x) -> Issue(x))", "all x.(Grimpus(x) -> Issue(x))", "all x.(Grimpuse(x) -> Impercutor(x))", "all x.(Grimpuse(x) -> Implicators(x))"]}
{"id": "prontoqa_validation_110", "nl": "Polly is not an impus, Polly is a brimpus, and Polly is a numpus.", "fol": "(-impus(Polly) & brimpus(Polly) & numpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Impossible(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)))", "(all x y z.((Polly(x) & IsNoximate)) -> -Imposs(x)) & ((Polly(y) & Brimpus(y)) -> Numpus(z)))", "(all x.(Polly(x) -> -Impossible(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)))", "(all x y z.((Polly(x) & Impossor(y) & Brimpus(z)) -> -Impossible(x,y)) & ((Polly(x) & Brimpus(z)) -> Numpus(x)))", "(all x.(Polly(x) -> -Impossible(x)) & (Brimpus(x) | Numpus(x)))", "(all x.(Polly(x) -> -Impose(x)) & all y.(Polly(y) -> Britpus(y)) & all z.(Polly(z) -> Numpus(z))))", "(all x y.((Polly(x) & Imperium(y)) -> -Imperfect(x,y)) & ((Polly(x) & Brimpus(x)) -> Numpus(x)))", "all x y z.((Polly(x) & Brimpus(y) & Numpus(z)) -> (-Impossible(x) & Brimpus(y) & Numpus(z)))", "(all x y z.(Polly(x) -> -Impossible(x)) & (Poly(y) -> Brimpus(y)) & (Poly(y) -> Numpus(z)))", "exists x.(Polly(x) & -Issue(x) & Polly(x) & Brimpus(x) & Numpus(x))", "(all x.(Polly(x) -> -Impossible(x)) & all y.(Poly(y) -> Brimpus(y)) & all z.(Polly(z) -> Numpus(z))))", "(all x.(Polly(x) -> -Impossible(x)) & all y.(Brimpus(y) -> Brimpus(y)) & all z.(Numpus(z) -> Numpus(z))))", "all x y z.((Polly(x) & Brimpus(y)) -> (-Is impus(x) & Ural(z) & -Circumculus(z)))", "all x y z.((Polly(x) & Brimpus(y) & Numpus(z)) -> (-Ispreser(x) & -Issue(y) & -Issue(z) & -Issue(z) & -Issue(z)))", "(all x.(Polly(x) -> -Impede(x)) & all y.(Poly(y) -> (Brimpus(y) | Numpus(y))))", "(all x.(Polly(x) -> -Issue(x)) & exists y.(Brimpus(y) & IsSimbolt(y))))"]}
{"id": "prontoqa_validation_111", "nl": "Every jompus is a zumpus.", "fol": "all x. (jompus(x) -> zumpus(x))", "prediction": ["all x.(Jompus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jimpus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jomesh(x) -> Zurpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jimpus(x) -> Zumpus(x))", "all x.(Jimpus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "(all x.(Jompus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jimpus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))"]}
{"id": "prontoqa_validation_112", "nl": "Fae is not a zumpus, Fae is a shumpus, and Fae is a numpus.", "fol": "(-zumpus(Fae) & shumpus(Fae) & numpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Zumpus(x)) & (Fae(x) -> Shumpus(x)) & (Fae(x) -> Numpus(x)))", "(all x.(Fae(x) -> -Zumpus(x)) & (Fae(x) -> shumpus(x)) & (Fae(x) -> Numpus(x)))", "(all x.(Fae(x) -> -Zumpus(x)) and (Fae(x) -> Shumpus(x)) & (Fae(x) -> Numpus(x)))", "(all x.(Fae(x) -> -Zumpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> Numpus(x)))", "(all x.(Fae(x) -> -Zumpus(x)) & (Shumpus(x) | Numpus(x))))", "(all x y z.((Fae(x) & Zumpus(y)) -> -Tompus(x,y)) & ((Fae(z) & Humpus(z)) -> Humpus(z))) & ((Fae(x) & Numerus(x)) -> -Tompus(x))))", "all x y z.((Fae(x) & Shumpus(y) & Nompus(z)) -> (-Zumpus(x) & -Shumpus(y) & -Numpus(z)))", "all x y z.((Fae(x) & Umpus(y) & Humpus(z)) -> (-Tompus(x) & Shumpus(y) & Numpus(z)))", "all x y z.((Fae(x) & Shumpus(y) & Nompus(z)) -> (-Zumpus(x) | (Shumpus(y) & Numpus(z))))", "(all x.(Fae(x) -> -Zumpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> Numpus(x)))", "(all x.(Fae(x) -> -Zumpus(x)) & all y.(Fae(y) -> (Shumpus(y) & Numpus(y))))", "(all x.(Fae(x) -> -Zumpus(x)) & all y.(Fae(y) -> (Shumpus(y) & Numpus(y))))", "(all x.(Fae(x) -> -Azbus(x)) | (Fae(x) -> Sumpf(x))) | (Fae(x) -> Numpus(x)))", "(all x.(Fate(x) -> -Zumpus(x)) & (Fate(x) -> Humpus(x)) & (Fate(x) -> Numpus(x)))", "all x y z.((Fae(x) & Zumpus(y) & Chumpus(z)) -> (-Tompus(x) | Humpus(x) | Numpus(x)))", "(all x y z.(Fae(x) -> -Zumpus(x)) & (Fae(y) -> Sticky(y)) & (Fae(z) -> Numpus(z)))"]}
{"id": "prontoqa_validation_113", "nl": "Brimpuses are lempuses.", "fol": "all x. (brimpus(x) -> lempus(x))", "prediction": ["all x.(Brompus(x) -> Lempuse(x))", "all x.(Brimpus(x) -> Lempuse(x))", "all x.(Brimpuse(x) -> Lempuse(x))", "all x.(Brimpus(x) -> Lempuse(x))", "all x.(Brimpus(x) -> Lempuse(x))", "all x.(Brompus(x) -> Lempuse(x))", "all x.(Brimpus(x) -> Lempuse(x))", "Leptuse(brimpus)", "all x.(Brompus(x) -> Lempuse(x))", "all x.(Brompus(x) -> Lempuse(x))", "all x.(Brimpus(x) -> Lempuse(x))", "all x.(Birmuse(x) -> Lempuse(x))", "all x.(Brimpus(x) -> Lempuse(x))", "all x.(Brimuse(x) -> Lempuse(x))", "all x.(Britteuse(x) -> Lempuse(x))", "all x.(Brompus(x) -> Lempuse(x))"]}
{"id": "prontoqa_validation_114", "nl": "Wren is a yumpus, Wren is a shumpus, and Wren is not a lempus.", "fol": "(yumpus(Wren) & shumpus(Wren) & -lempus(Wren))", "prediction": ["(all x y z.(Juran(x) -> Yellow(x)) & (Shumpus(y) -> Yellow(y)) & (Dumpus(z) | Humpus(z))) & -Lempus(z)))", "(all x.(Rich(x) -> Yupsum(x)) & (Rich(x) -> Humpus(x)) & (Rich(x) -> -Lempus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Humpus(z) & -Lempus(w)) -> (Yumpus(x) | Humpus(x) | Humpus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) & Shumpus(y) & -Lempus(z)))", "(all x.(Wren(x) -> Yompus(x)) & (Wren(x) -> Shumpus(x)) & (Wren(x) -> -Lempus(x)))", "all x.((Wren(x) & Yampus(x)) -> Shimpoka(x)) & ((Wren(x) & Humpus(x)) | (-Lempus(x)))))", "all x y z.((Wren(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) & Humpus(y) & -Lempus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) & -Lempus(x)))", "(yumpus) | (Shumpus(y)) | (-Lempus(y))))", "(all x y z.((Wren(x) & Yumpus(y)) -> Yukun(x)) & ((Wren(z) & Humpus(z)) -> Shumpus(z))) & ((Wren(z) & -Lempus(z)) -> Yumpus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) | Shumpus(x) & -Lempus(x)))", "(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> Humpus(x))) & (Wren(x) -> -Lempus(x)))", "all x y z.(Wren(x) -> (Yumpus(x) & Shumpus(y) & -Lempus(z)))", "(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> Shumpus(x)) & (Wren(x) -> -Lempus(x)))", "(all x y z.((Wren(x) & Yumpus(x)) -> (Yumpus(x) & Smugus(y) & -Lempus(z)))", "(all x.(Wren(x) -> Yumps(x)) & (Wren(x) -> Humpus(x)) & (Wren(x) -> -Limpus(x))))"]}
{"id": "prontoqa_validation_115", "nl": "Wren is not a brimpus.", "fol": "-brimpus(Wren)", "prediction": ["all x.(Wren(x) -> -Brimpus(x))", "all x.(Wren(x) -> -Brimpus(x))", "all x.(Wren(x) -> -Brimpus(x))", "all x.(Wren(x) -> -Brumpus(x))", "all x.(Wren(x) -> -Brompus(x))", "-Brimpus(Wren)", "all x.(Wren(x) -> -Brimpus(x))", "(\u2013Brumpus(Wren))", "(Barrimpus(Wren))", "all x.(Wren(x) -> -Brimpus(x))", "(-Brimpus(Wren))", "exists x.(Wren(x) & -Brimpus(x))", "NeighborsBrumpus(Wren)", "-Brimpus(Wren)", "all x.(Wren(x) -> -Brumpus(x))", "-Brimpus(Wren)"]}
{"id": "prontoqa_validation_116", "nl": "Shumpuses are sterpuses.", "fol": "all x. (shumpus(x) -> sterpus(x))", "prediction": ["all x.(Shampoos(x) -> sterpuse(x))", "all x.(Smockuse(x) -> Sterpuse(x))", "all x.(Shupuse(x) -> Sterpuse(x))", "all x.(Schumpus(x) -> Sterpuse(x))", "all x.(Shuppus(x) -> Sterpuse(x))", "all x.(Shupuse(x) -> Sterpuse(x))", "all x y.((Shumpuse(x) & Sterpuse(y)) -> Steroid(x))", "all x.(Shumpus(x) -> Sterotis(x))", "all x.(Smockuse(x) -> Sterpuse(x))", "all x.(Shumpus(x) -> Sterpuse(x))", "all x.(Shampoo(x) -> Sterpuse(x))", "all x.(Smupuse(x) -> Sterosus(x))", "all x.(Shumpus(x) -> Steroid(x))", "all x.(Smoothus(x) -> Sterpuse(x))", "all x.(Shupuse(x) -> Sterus(x))", "all x.(Shumpus(x) -> Steroche(x))"]}
{"id": "prontoqa_validation_117", "nl": "Wren is not a sterpus, Wren is a yumpus, and Wren is a numpus.", "fol": "(-sterpus(Wren) & yumpus(Wren) & numpus(Wren))", "prediction": ["(all x.(Wren(x) -> -StereoPose(x)) & (Yumpus(x) | Numpus(x))))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpa(y)) & all z.(Wren(z) -> Numpus(z)))", "all x y z.((Wren(x) & Sterosen(y) & Yumpus(z)) -> (-Sterosen(x) & Yampus(x) & Numpus(x)))", "all x y z.((Wren(x) & Sterpus(y) & Yumpus(z)) -> (-Sterpus(x) & Yumpus(y) & Numpus(z)))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Yumpus(y) & all z.(Numpus(z) & -Sterpus(x) & Yompus(y))))", "(all x.(Wren(x) -> -Sterpus(x)) & (Yumpus(x) & Numerus(x)))", "(all x.(Wren(x) -> -Sterpus(x)) & (Yumpus(x) | Numpus(x))))", "all x y z.((Wren(x) & Sterus(y) & Yumppus(z)) -> (-Sterus(x) & -Yumpus(y) & -Numpus(z)))", "(all x.(Wren(x) -> -Stereopa(x)) & (Wren(x) -> Yumpa(x)) & (Wren(x) -> Numpus(x)))", "(all x.(Wren(x) -> -Sterpus(x)) & (yumpus(y) -> Numberus(y)))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Numpus(z))))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Numpus(z))))", "(all x.(Wren(x) -> -Sterpus(x)) & (Yumpus(x) & Nompus(x)))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpus(y))) & all z.(Wren(z) -> Numpus(z))))", "all x y z.((Wren(x) & Sterus(y) & Yampus(z)) -> (-Sterus(x) & Yummy(x) & Numpus(x)))", "(-Sterpus(Wren) & Yumpus(Wren) & Numpus(Wren))"]}
{"id": "prontoqa_validation_118", "nl": "Wren is not a shumpus.", "fol": "-shumpus(Wren)", "prediction": ["(-Shumpus(Wren))", "Is Shumpus(Wren) & -Shumpus(Wren))", "all x.(Wren(x) -> -Shumpus(x))", "all x.(Wren(x) -> -Shumpus(x))", "all x.(Wren(x) -> -Shumpus(x))", "all x.(Wren(x) -> -Shumpus(x))", "(-Shumpus(Wren))", "(-Shumpus(wren) & -Shumpus(wren))", "all x.(Wren(x) -> -Shumpus(x))", "all x.(Wren(x) -> -Shumpus(x))", "all x.(Wren(x) -> -Shumpus(x))", "all x.(Wren(x) -> -Shumpus(x))", "(-Shumpus(Wren))", "all x.(Wren(x) -> -Shumpus(x))", "(-Shumpus(Wren) -> -Shumpus(Wren))", "all x.(Wren(x) -> -Shumpus(x))"]}
{"id": "prontoqa_validation_119", "nl": "Gorpuses are rompuses.", "fol": "all x. (gorpus(x) -> rompus(x))", "prediction": ["all x.(Gorpuse(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompuse(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Rompus(x) -> InhabitedBy(x,rompus))", "all x.(Gorpuse(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Oryx(x) -> Rompus(x))", "all x.(Gorpuse(x) -> Rompuse(x))", "all x.(Rompus(x) -> Crocs(x))", "all x.(Rompus(x) -> Gorpuse(x))", "all x.(Rompus(x) -> Gorpuse(x))", "all x.(Rompus(x) -> Gorpuse(x))", "all x.(Gorpus(x) -> Rompus(x))"]}
{"id": "prontoqa_validation_120", "nl": "Sam is a shumpus and Sam is a numpus and Sam is not a rompus.", "fol": "(shumpus(Sam) & numpus(Sam) & -rompus(Sam))", "prediction": ["all x y z.((Shumpus(x) & Numpus(y) & Sam(z)) -> (Shumpus(x) & Numpus(y) & -Rompus(z)))", "(all x y.((Shumpus(x) & Sam(y)) -> Shumpus(x)) & ((Numpus(y) & Sam(z)) -> -Rompus(z))))", "(all x.(Sumpus(x) -> Shumpus)) & all y.(Sumpus(y) -> Numpus(y)) & all z.(Rompus(z) -> -Shumpus(z)))", "has shumpus(sam) & exists x.(numpus(sam) & -rompus(sam)))", "all x y.((Sam(x) & Sam(y)) -> (Shumpus(x) & Numpus(y) & -Rompus(y)))", "(all x y.((Shumpus(x) & -Romes(y)) -> (Shumpus(x) | Numpus(x))))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Numpus(y) -> Sam(y)) & all z.((Sam(z) & -rompus(z)) -> Sam(z)))", "all x.((Sam(x) & Humpus(x)) -> Numpus(x)) & (Sam(x) -> -rompus(x)))", "(all x.(Shumpus(x) -> Snompus(x)) & all y.(Numpus(y) -> -Rrompus(y))))", "(all x.(Sam(x) -> Humpus(x)) & (Sam(x) -> Numpus(x)) & (Sam(x) -> -Rompus(x)))", "(all x.(Shumpus(x) -> SamSam)) & (Nompus(x) -> Sam(x)) & -Rompus(x)))", "all x y.((Sam(x) & Sam(y)) -> (Shumpus(x) & Numpus(y) & -Rompus(y)))", "(all x.(Sam(x) -> Humpus(x)) & ((Sam(x) & Numpus(x))) | (-Sam(x) & Rompus(x)))))", "(all x y z.((Shumpus(x) & Sam(y) & Humpus(z)) -> (Shumpus(x) | Numpus(y))) & ((Sam(z) & -Rrompus(z))) -> -Rompus(z)))", "(all x.(Shumpus(x) -> IsShumpus(x)) & all y.(Number(y) -> IsShumpus(y))) & all z.(Rrompus(z) -> -IsShumpus(z)))", "all x.(Sam(x) -> (Shumpus(x) & Numpus(x) & -Rompus(x)))"]}
{"id": "prontoqa_validation_121", "nl": "Sam is not a gorpus.", "fol": "-gorpus(Sam)", "prediction": ["all x.(Sam(x) -> -Gorpus(x))", "all x.(Sam(x) -> -Gorpus(x))", "(Sam(sam) & -Gorpus(s))", "all x.(Sam(x) -> -Gorpus(x))", "Sam is not a Gorpus.", "\u2018Sam\u2019 & -Gorpus(sam)", "all x.(Sam(x) -> -Gorpus(x))", "all x.(Sam(x) -> -Gorpus(x))", "(-Gorpus(Sam) & -Gorpus(Sam))", "all x.(Sam(x) -> -Gorpus(x))", "Sam is not a Gorpus.", "all x.(Sam(x) -> -Gorpus(x))", "Sam is not a gorpus.", "(-Gorpus(Sam)*)", "All x.(Sam(x) -> Gnompus(x))", "(-Gorpus(Sam))"]}
{"id": "prontoqa_validation_122", "nl": "Vumpuses are sterpuses.", "fol": "all x. (vumpus(x) -> sterpus(x))", "prediction": ["all x.(Vumpus(x) -> Sterpium(x))", "all x.(Vumpus(x) -> Sterus(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Valmpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Valmpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> sterpuse(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterus(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "(Sterpuse(v) -> Vumpus(v))", "all x.(TreeVumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpuse(x))"]}
{"id": "prontoqa_validation_123", "nl": "Sally is not a sterpus and Sally is a lorpus and Sally is a zumpus.", "fol": "(-sterpus(Sally) & lorpus(Sally) & zumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Sterpus(x)) & (Lorpus(x) -> Zumpus(x)))", "(-Steerpus(Sally) & -Lorpus(Sally) & -Zoompus(Sally))", "(\u2013Sterpus(Sally) & -Sterpus(Sally)) & (Lorpus(Sally) | Zumpus(Sally)))", "all x y z.((Sally(x) & Sterpus(y) & Dorpus(z)) -> (-Sterpus(x) & Lordpus(y) & Zumpus(y)))", "(all x y.((Sally(x) & -Sterpus(x)) | ((Sally(y) & Thrombosis(y))))) -> (-Storpus(y) & -Lorpus(y) & -Stompus(y))))", "(-Storp(Sally) & Lorpus(Sally) & Zumpus(Sally))", "(exists x.(Sally(x) & -Sterpus(x)) & exists y.(Lorpus(y) & -Sterpus(z))) & exists w.(Zupus(w) & -Sternus(w))))", "(all x.(Sally(x) -> -Sterpus(x)) & (Lorpus(x) -> Zumpus(x)))", "all x y.((Sally(x) & -Sterpus(x) & Lorpus(y)) -> Zumpus(x))", "(all x y.((Sally(x) & -Sterpus(x)) -> Loompus(y)) & ((Sally(x) & Zumpus(x)) -> Zumpus(x)))", "(Sally (-Sterpus) & Sally (Lorpus) & Sally (Zimmerpus)))", "(all x.(Sally(x) -> -Sterpus(x)) & (Lorpus(x) & Zumpus(x)))", "(all x.(Sally(x) -> -Sterosphew(x)) & (Sally(x) -> Lopus(x)) & (Sally(x) -> Zumpus(x)))", "(all x.(Sally(x) -> -Terpus(x)) & all y.(Lorpus(y) & Topsy(y))))", "(all x.(Sally(x) -> -Sterpus(x)) & all y.(Lorpus(y) & -Tompus(y)))", "(all x.(Sally(x) -> -Sterpus(x)) & all y.(Lorpus(y) -> Zumpus(y)))"]}
{"id": "prontoqa_validation_124", "nl": "Sally is not a vumpus.", "fol": "-vumpus(Sally)", "prediction": ["Sally is not a Vuze(s)", "(-Vumpus(Sally))", "Sally-Vumpus(Sally)", "Sally is -Vimpus(x)", "Sally is not a vumpus.", "Sally -Vumpus(Sally,x))", "all x.(Sally(x) -> -Vumpus(x))", "(Vumpus(sally) & -Vumpus(sally),", "Sally -VimpusIs(Sally,Sally))", "(-Vumpus(Sally))", "Sally is not a vumpus.", "has no vumpus.", "Sally is not a vumpus.", "Sally -Vumpus(Sally)", "Sally is not a vumpus.", "Sally is not a vumpus."]}
{"id": "prontoqa_validation_125", "nl": "Every wumpus is a brimpus.", "fol": "all x. (wumpus(x) -> brimpus(x))", "prediction": ["all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Humpus(x) -> Brimpus(x))", "all x.((Wumpus(x) & Brimpus(x)) -> Beautiful(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x y.((Wumpus(x) & Brimpus(y)) -> InRedBull(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_validation_126", "nl": "Rex is not a brimpus and Rex is a numpus and Rex is a sterpus.", "fol": "(-brimpus(Rex) & numpus(Rex) & sterpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Brimpus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> Sterectus(x)))", "all x.((Rex(x) & -Brimpus(x)) -> (Numpus(x) & Sterepus(x)))", "(all x.(Rex(x) -> -Brumpus(x)) & all y.(Nouput(y) & Sterpus(y)))", "(-Brimpus(Rex) & Nompus(rex) & Sterpus(rex))", "(all x.(Rex(x) -> -Brimpus(x)) & (Numpus(x) | Sterepus(x))))", "all x y z.((Rex(x) & Brimpus(y) & Numpus(z)) -> (-Brimpus(x) & Numpus(x) & Streptococcus(x)))", "(all x.(Rex(x) -> -Brimpus(x)) & all y.(Rex(y) -> Numpus(y)) & all z.(Rex(z) -> Sterpus(z))))", "(all x.(Rex(x) -> -Brimpus(x)) & all y.(Nompus(y) & Sterpus(y)))", "(exists x.(Brimpus(x) & -Brimpus(x)) & exists y.(Nompus(y) & -Brimpus(y))) & exists z.(Sterepus(z) & Sterpus(z))))", "(all x y z.((Rex) & Brimpus(g)) -> -Brimpus(x)) | ((Rex(x) & Numpus(y))) | (Attributes(x,t,z) & Sterpus(z)))))", "(all x.(Rex(x) -> Rimpus(x)) & all y.(Numpus(y) -> Sterpus(y))))", "(all x.(Rex(x) -> -Brimpus(x)) & (Numerus(x) | Sterpus(x))))", "all x.(Rex(x) -> (-Brimpus(x) & Numpus(x)) & Sterpus(x)))", "all x y z.((Rex(x) & Brampus(y) & Numpus(z)) -> (-Brimpus(x) & Numpus(y) & -Sterepus(z)))", "(all x y z.(Rex(x) -> -Brimpus(y)) & ((Rex(z) & Nompus(z)) -> Sterpus(z)))", "(all x.(Rex(x) -> -Brimpus(x)) & all y.(Rex(y) -> Numpus(y)) & all z.(Rex(z) -> Sterpus(z))))"]}
{"id": "prontoqa_validation_127", "nl": "Numpuses are yumpuses.", "fol": "all x. (numpus(x) -> yumpus(x))", "prediction": ["all x.(Numpus(x) -> Yumus(x))", "all x.(Numpus(x) -> Yampus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpuse(x) -> Yumpus(x))", "all x.(Numpuse(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yampus(x))", "All x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpuse(x))", "all x.(Numpus(x) -> Yumba(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yampus(x))", "all x.(Numpus(x) -> Yumpus(x))"]}
{"id": "prontoqa_validation_128", "nl": "Fae is not a yumpus, Fae is an impus, and Fae is a shumpus.", "fol": "(-yumpus(Fae) & impus(Fae) & shumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Ivory(x)) & (Fae(x) -> Humpus(x)))", "all x y z.(Fae(x) -> (-Yumpus(x) & Fae(y) & Issue(y) & Fae(z) & Humpus(z)))", "(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Issue(x)) & (Fae(x) -> Shampus(x)))", "(all x.(Fierce(x) -> (-Yumpus(x))) & exists y.(Fierce(y) & Fierce(y))))", "(i.e.,NoYumpus(fae) & -Issue(fae)) & (Issue(fae) -> Silent(fae)) & (Petro(fae) -> Humpus(fae)))", "(all x y z.((Fae(x) & Yumpen(y) & Impossible(z)) -> -Yumpus(x)) & ((Fae(x) & Spumpus(x)) -> Shumpus(x)))", "(all x.(Fae(x) -> -Yumpus(x)) & all y.(Fae(y) -> Issue(y))) & all z.(Fae(z) -> (Shumpus(z)))))", "all x y z.((Fae(x) & IsElement(x,y) & Is(y,z)) -> (-Yumpus(x) & IsIs(x,z) & IsShumpus(x)))", "(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Impossible(x)) & (Fae(x) -> Humpus(x)))", "(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Issue(x)) & (Fae(x) -> Simpus(x)))", "all x y z.((Fae(x) & Yampus(y) & Imperator(z)) -> (-Yumpus(x) & Imperator(x) & Humpus(y)))", "(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Issue(x)) & (Fae(x) -> Humpus(x)))", "all x.(Fae(x) -> (-Yumpus(x) & Imperator(x) & Humpus(x)))", "(-yumpus(Fae,Fae) & Is(Fae) & Is(Fae)) & (Yumpus(Fae) | Impossible(Fae)))", "(all x.(Fae(x) -> -Yumpus(x)) & all y.(Fae(y) -> Impossible(y)) & all z.(Fae(z) -> Humpus(z))))", "all x y z.((Fae(x) & Eraser(y) & Humpus(z)) -> (-Yumpus(x) & Imperva(y) & Scumpus(z)))"]}
{"id": "prontoqa_validation_129", "nl": "Fae is not a numpus.", "fol": "-numpus(Fae)", "prediction": ["-Numpus(Fae)", "(-numpus(Fae))", "all x.(Fae(x) -> -Numpus(x))", "-Numpus(Fae)", "[Fae] -numpus(Fae)]", "(About(Fae) & -Numpus(fae))", "hnlichity(Fae,numpus)", "(Crooked(fae) -> -Numpus(fae))", "(-Numpus(Fae))", "-numpus(Fae)", "-Numpus(Fae)", "(Numpus(Fae))", "-numpus(Fae)", "-Numpus(Fae)", "all x.(Fae(x) -> -Numpus(x))", "all x.(Fae(x) -> -Numpus(x))"]}
{"id": "prontoqa_validation_130", "nl": "Every sterpus is a wumpus.", "fol": "all x. (sterpus(x) -> wumpus(x))", "prediction": ["all x.(Stretch(x) -> Wumpus(x))", "all x.(Sterpus(x) -> Wumpus(x))", "all x.(Sterepus(x) -> Wumpus(x))", "all x.(Sterpus(x) -> Hush(x))", "all x.(Steerpus(x) -> Wumpus(x))", "all x.(Stumpus(x) -> Wumpus(x))", "all x.(Strohpus(x) -> Wampus(x))", "all x.(Sterpus(x) -> Wumpus(x))", "all x.(Sterpus(x) -> Wumpus(x))", "all x.(Sterpus(x) -> Wumpus(x))", "all x.(Steerpus(x) -> Wumpus(x))", "all x.(Sterpus(x) -> Wumpus(x))", "all x.(Steerpus(x) -> Wumpus(x))", "all x.(Sterpus(x) -> wumpus(x))", "all x.(Sterpus(x) -> Wumpa(x))", "all x.(Sterpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_validation_131", "nl": "Sam is a vumpus and Sam is not a wumpus and Sam is a lorpus.", "fol": "(vumpus(Sam) & -wumpus(Sam) & lorpus(Sam))", "prediction": ["(Vumpus(sam) | -Wumpus(sam) | Lurpus(sam)))", "(all x.(Sam(x) -> Vumpus(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Lorpus(x))))", "all x.((Sam(x) & Vumpus(x)) & -Wumpus(x) & -Lorpus(x)) -> Affinity(x))", "(all x.(Vulpitus(x) -> -Wumpus(x)) & all y.(Lorpus(y) -> -Vulpitus(y)))", "all x y z.((Sam(x) & Vampus(x) & Sam(y) & -Wumpus(y) & Sam(z)) -> (Lorpus(z)))", "(all x.(Sam(x) -> Vumpus(x)) & (-Wumpus(x)) | (-Wumpus(x) & Loomis(x))))", "(all x.(Sam(x) -> Vumpus(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Lorpus(x))))", "all x y z.((Vampus(x) & Sam(y) & Hormone(z)) -> (-Wumpus(y) & Lorpus(z)))", "all x y.((Sam(x) & Vampus(x) & Sam(y)) -> ( -Wumpus(y) & Lorpus(y)))", "(all x.(Sam(x) -> Vampire(x))) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Lorpus(x))))", "all x.(Sam(x) -> (Vumpus(x) & -Wumpus(x) & Lark(x)))", "all x y z.((Sam(x) & Vumpus(y) & Wumpus(z)) -> (Verse(x) & -Wumpus(y) & Loomis(z)))", "all x.(Sam(x) -> ((Vumpus(x) & -Wumpus(x)) & Lordpus(x)))", "(all x.(Sam(x) -> Vumpus(x)) & all y.(Sam(y) -> -Wumpus(y)) & all z.(Sam(z) -> Lorpus(z))))", "(all x.(Vimpus(x) -> Vumpus(x)) & (-Wumpus(x) & -Lorpus(x))))", "(all x.(Vumpus(x) & -Wumpus(x)) & all y.(Lorpus(y))) -> Vimpus(x))"]}
{"id": "prontoqa_validation_132", "nl": "Sam is not a sterpus.", "fol": "-sterpus(Sam)", "prediction": ["all x.(CrackedBySam(x) -> -Sterectus(x))", "all x.(Sam(x) -> -Sterepus(x))", "(-Sterpus(Sam))", "Sam is notsterpus.", "(-Sterpus(Sam))", "(-ZeroSterpus(Sam))", "all x.(Sam(x) -> -Sterpus(x))", "(-Sterpus(Sam))", "(-Sterpus(Sam))", "in all x.(Sam(x) -> -Sterpus(x))", "(-Sterpus(Sam))", "(-Sterpus(Sam))", "(-Sam(Sam) & Sterpus(Sam))", "((Sam) & -Sternpus(Sam)) -> -Sterpus(Sam))", "is -Sterpus(Sam).", "(-Stessus(Sam))"]}
{"id": "prontoqa_validation_133", "nl": "Tumpuses are zumpuses.", "fol": "all x. (tumpus(x) -> zumpus(x))", "prediction": ["all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpuse(x))", "all x.(Tumpus(x) -> Toumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpe(x) -> Zumpuse(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpuse(x) -> Zumpuse(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_validation_134", "nl": "Sam is a rompus, Sam is not a zumpus, and Sam is a dumpus.", "fol": "(rompus(Sam) & -zumpus(Sam) & dumpus(Sam))", "prediction": ["all x y z.((Sam(x) & Rompus(x) & Sam(y) & Zumpus(z) & Dumpus(x)) -> (Rampus(x) & -Zombia(y) & Dumpus(z))))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Dumpus(x)))", "all x y z.((Sam(x) & Rompus(x) & Sam(y) & Zumpus(z)) -> (Rompus(x) | Dumpus(y)))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Dumpus(x)))", "(all x y z.((Sam(x) & Rompus(x)) -> Toxic(x)) & ((Sam(y) & -Tompus(y)) | ((Sam(z) & Dumpus(z)))))", "all x y.((Rrompus(x) & Zumpus(y)) -> (-Rrompus(x) & Dumpus(y)))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Dumpus(x)))", "(all x.(Rompus(x) -> Sam(x)) & (-Zumpus(x) -> Sam(x))) & (-Dumpus(x) -> Sam(x)))", "all x y z.((Sam(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) | Dumpus(x)))", "all x y z.((Sam(x) & Rimpus(y) & Zumpus(z)) -> (Rompus(x) & -Sam(x) & Dumpus(x)))", "(all x y.((Tompus(x) & Sam)) -> Rompus(x)) & ((Tompus(y) & Sam(y)) -> Dumpus(y)))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> -Tompus(x)) & (Sam(x) -> Dumpus(x)))", "(all x.(Sam(x) -> Rompus(x)) & all y.(Sam(y) -> -Zumpus(y)) & all z.(Sam(z) -> Dumpus(z))))", "(all x.(Sam(x) -> Rompus(x)) & (Zumpus(x) -> -Sam(x)) & (Dumpus(x) -> Sesame(x))))", "all x.((Sam(x) & Rompus(x)) -> -Tompus(x)) & (Sam(x) -> Dumpus(x)))", "all x y z.((Rompus(x) & Zumpus(y) & Dumpus(z)) -> (All z.(Rompus(x) & -Zumpus(y) & -Rompus(z)) & All w.(Dumpus(w) & -Rompus(w))))"]}
{"id": "prontoqa_validation_135", "nl": "Tumpuses are jompuses.", "fol": "all x. (tumpus(x) -> jompus(x))", "prediction": ["all x.(Tumpus(x) -> Jompuse(x))", "all x.(Tumpuse(x) -> Jompuse(x))", "all x.(Tumpuse(x) -> Jompuse(x))", "all x.(Tumpuse(x) -> Jompuse(x))", "all x.(Tumpuse(x) -> Jompuse(x))", "all x.(Tumpuse(x) -> Jompuse(x))", "all x.(Tumbuse(x) -> Jompus(x))", "all x.(Tumpuse(x) -> Jompus(x))", "all x.(Tumpuse(x) -> Jompuse(x))", "all x.(Tumpus(x) -> Jompuse(x))", "all x.(Tumulus(x) -> Jombus(x))", "all x.(Tumpuse(x) -> Jombus(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompuse(x))", "all x.(Tumpuse(x) -> Jombus(x))", "all x.(Tumpuse(x) -> Jompus(x))"]}
{"id": "prontoqa_validation_136", "nl": "Polly is a lorpus, Polly is not a jompus, and Polly is a dumpus.", "fol": "(lorpus(Polly) & -jompus(Polly) & dumpus(Polly))", "prediction": ["(all x y z.((Polly(x) & Lorpus(y)) -> Loromoscope(x)) & ((Poly(z) & -Jompus(z))) -> Dumpus(z)))", "(all x.(Lorpus(x) -> Polly)) & all y.(Jompus(y) -> Polly)) & all z.(Dumps(z) -> (Polly(z) & -Polly(z)))))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> -Jompus(y)) & all z.(Polly(z) -> Dumpus(z))))", "(all x.(Lorpus(x) -> Polly(x)) & all y.(Jompus(y) -> Polly(y))) & all z.(Dumpus(z) -> Polly(z))))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Jimpus(x)) & (Polly(x) -> Dumpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Pupus(z)) -> (Lorpus(x) & -Jimpus(y) & Dumpus(z)))", "(all x.(Lorpus(x) -> Polly(x)) & (-Jompus(x) | Dumpus(x)))", "(all x y z.((Lorph(x) & Polly(y) & Jompus(z)) -> (Lorph(y) & -Jompus(y)) & ((Lorph(y) & Dumpus(z))))", "(all x.((Polly(x) & Lorpus(x)) -> Polly(x)) & ((Polly(x) & -Jompus(x)) -> Dumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Jompus(x)) & (Polly(x) -> Dumpus(x)))", "all x y z.((Poly(x) & Lorpus(y) & -Jompus(z)) -> (Lorpus(x) & Dumpus(x) & -Jompus(y) & Dumpus(z)))", "all x.((Pollly(x) -> (Lorpus(x) & -Jompus(x) & Dumpus(x)))", "(all x.(Poly(x) -> Lorpus(x)) & all y.(Poly(y) -> -Jompus(y))) & all z.(Poly(z) -> Dumpus(z))))", "(all x.(Polly(x) -> Llorpus(x)) & (Polly(x) -> -Jompus(x)) & (Polly(x) -> Dumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Jimpus(x)) & (Polly(x) -> Dumpus(x)))", "(all x y z.((Polly(x) & Lorps(y)) -> Lelopa(x)) & ((Polly(z) & -Jimpus(z))) -> Dumpus(z)))"]}
{"id": "prontoqa_validation_137", "nl": "Polly is not a tumpus.", "fol": "-tumpus(Polly)", "prediction": ["Polly is notTumpus(poly)", "All x.(Polly(x) -> -Tumpus(x))", "all x.(Polly(x) -> -Tumpus(x))", "-Tumpus(Polly)", "Polly is notTumpus(Poly)", "all x.(Polly(x) -> -Tumpus(x))", "Polly is not Tumpus.", "Polly is not a tumpus.", "all x.(Polly(x) -> -Tumpus(x))", "ALL X.(Polly(x) -> -Tumpus(x))", "\u0430\u043a\u0442\u043d \u0442\u0435\u0441\u0440\u043e\u043a \u043e\u043e\u0440 \u0438 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u043d\u043e\u043e \u0430\u0440\u0443.", "-Tumpus(Polly)", "(-Tumpus(Polly))", "all x.(Polly(x) -> -Tumpus(x))", "polly(plume) -> -Tumpus(plume))", "Polly ist kein Tumpus."]}
{"id": "prontoqa_validation_138", "nl": "Every vumpus is a rompus.", "fol": "all x. (vumpus(x) -> rompus(x))", "prediction": ["all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vimpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Roma(x))"]}
{"id": "prontoqa_validation_139", "nl": "Alex is a jompus, Alex is a sterpus, and Alex is not a rompus.", "fol": "(jompus(Alex) & sterpus(Alex) & -rompus(Alex))", "prediction": ["(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Sterpus(y)) & all z.(Alex(z) -> -rompus(z))))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Sterpus(x)) & -Alex(x)))", "all x y z.((Alex(x) & Jompus(x) & Sterpus(y) & -Rompus(z)) -> (Potential(x,y) & Potential(y,z)))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Sterepus(y) -> -Rompus(z)))", "(all x y z.(Alex(x) -> Jompus(x)) & (Alex(y) -> Sterpus(y)) & (Alex(z) -> -Rompus(z)))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Sterpus(x)) & (Alex(x) -> -Rompus(x)))", "all x y z.((Alex(x) & Jompus(y) & Sterpus(z)) -> (Jompus(x) & Sterpus(y) & -Rompus(z)))", "exists x y z.((Alex(x) & Jompus(y) & Sterpus(z)) & (Jompus(x) | Sterpus(z) | -Rompus(z)))", "all x y z.((Alex(x) & Jompus(y) & Sterpus(z)) -> (Jompus(x) & Sterpus(y) & -rompus(x)))", "(all x y z.(Alex(x) -> Jompus(x)) & (Alex(y) -> Sterpus(y)) & (Alex(z) -> -Rompus(z)))", "all x y z.((Alex) & Jompus(x) & Sterpus(y) & -Rompus(z)) -> (Nosh(x) & Osmosis(x)))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Sterpus(x)) & -Alex(x)))", "(all x.(Alexa(x) -> Jompus(x)) & ((Alexa(x) & Sterpus(x)) | All y.(Alexa(y) & -Rompus(y))))", "all x y z.((Alex(x) & Jompus(x) & Sterus(y) & Rompus(z)) -> (Of(x,y) & Of(x,z)))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Sterpus(x)) & -Alex(x)))", "(all x y z.(Alex(x) -> Jompus(x)) & (Alex(y) -> Sterpus(y)) & (Alex(z) -> -Rompus(z))))"]}
{"id": "prontoqa_validation_140", "nl": "Alex is not a vumpus.", "fol": "-vumpus(Alex)", "prediction": ["all x.(Alex(x) -> -Vumpus(x))", "noned(Alex,y)", "Alex is -Vimpus(Alex)", "all x.(Alex(x) -> -Volumpus(x))", "all x.(Alex(x) -> -Vimpus(x))", "Alex -Vumpus(Alex)", "exists x.(Alex(x) & -Vumpus(x))", "all x.(Alex(x) -> -Vumpus(x))", "Alex is not vumpus.", "all x.(Alex(x) -> -Vimpus(x))", "all x.(Alex(x) -> -Vumpus(x))", "all x.(Alex(x) -> -Vumpus(x))", "all x.(Alex(x) -> -Vumpus(x))", "all x.(Alex(x) -> -Vumpus(x))", "all x.(Alex(x) -> -Vumpus(x))", "Alex is not a Vumpus(Alex)"]}
{"id": "prontoqa_validation_141", "nl": "Every dumpus is a wumpus.", "fol": "all x. (dumpus(x) -> wumpus(x))", "prediction": ["all x.(Dumpus(x) -> Wilder(x))", "all x.(Dumpus(x) -> Lumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Hush(x))", "all x.(Dumpus(x) -> Plumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wampus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_validation_142", "nl": "Alex is not a wumpus, Alex is a yumpus, and Alex is a zumpus.", "fol": "(-wumpus(Alex) & yumpus(Alex) & zumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Wumpus(y) & Yump (z)) -> (-Wumpus(x) & Yampus(y) & Zumpus(z)))", "(all x.(Alex(x) -> OtherThanWumpus(x)) & (Alex(x) -> OtherTumpus(x)))", "all x y z.((Alex(x) & Wump(y) & Yumpus(z)) -> (-Wumpus(x) & Yump(y) & Zumpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpus(y)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpus(y)) & all z.(Alex(z) -> Zumpus(z))))", "all x y z.((Alex(x) & Wumpus(y) & Yumpus(z)) -> (-Wumpus(x) | (Yumpus(y) & Zumpus(y))))", "all x y z.((Alex(x) & Wumpus(y) & Yump (z)) -> (-Wumpus(x) & Yumpus(z) & Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & exists y.(Yumpus(y) & exists z.(Zoompus(z) & -Wumpus(z)))))", "(all x y z.((Alex(x) & Wumpus(y)) -> -Wumpus(x)) & ((Alex(z) & Yumpus(z))) -> Zumpus(z)))", "(all x y z.((Alex(x) & Wumpus(y)) -> -Wumpus(x)) | ((Alex(z) & Yumpus(z))) -> Zumpus(z)))", "all x.(Alex(x) -> (-Wumpus(x) & -Yumpus(x) & -Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpus(y))) & all z.(Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Wumpus(y) & Yumpus(z)) -> (-Wumpus(x) & -Yumpus(y) & -Zumpus(z)))", "all x y z.((Alex(x) & Wumpus(y) & Yumus(z)) -> (-Wumpus(x) & Yampus(x) & Zumpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Yampus(z)) -> (-Wumpus(x) & Yampus(y) & Zumpus(z)))", "all x.(Alex(x) -> (-Wumpus(x) & -Yumpus(x) & -Zumpus(x)))"]}
{"id": "prontoqa_validation_143", "nl": "Alex is not a dumpus.", "fol": "-dumpus(Alex)", "prediction": ["Alex is not a Dumpus.", "all x.((Alex(x) & -Dumpus(x)) -> -Dumpus(x))", "Alex is not Dumpus(Alex)", "Alex is not a Dumpus.", "all x.(Alex(x) -> -Dumpus(x))", "all x.(Alex(x) -> -Dumpus(x))", "(-Dumpus(Alex))", "Alex is not a Dumpus.", "all x.(Alex(x) -> -Dumpus(x))", "all x.(Alex(x) -> -Dumpus(x))", "Alex necessaryDumpus(Alex)", "Alex is not a Dumpus.", "Alex.(IsDumpstus(Alex))", "all x.(Alex(x) -> -Dumpus(x))", "Alex is not a Dumpus.", "all x.(Alex(x) -> -Dumpus(x))"]}
{"id": "prontoqa_validation_144", "nl": "Every lempus is a jompus.", "fol": "all x. (lempus(x) -> jompus(x))", "prediction": ["all x.(Limpus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Mount(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "exists x.(Lempus(x) & Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "at the highest level of all x.(Lempus(x) -> Jompus(x))"]}
{"id": "prontoqa_validation_145", "nl": "Max is a sterpus and Max is not a jompus and Max is a yumpus.", "fol": "(sterpus(Max) & -jompus(Max) & yumpus(Max))", "prediction": ["(all x.(Max(x) -> Sterus(x)) & (Max(x) -> -Jompus(x)) & (Max(x) -> Yumpus(x)))", "all x y z.((Max(x) & Throat(y) & Jompus(z)) -> (Sterpus(x) & -Jompus(y) & Yumpus(z)))", "(all x.(Max(x) -> Sterepus(x)) & (-Jompus(x) & -Yumpus(x)))", "((Max(Max) & Sterpus(Max)) | (-Jompus(Max)) | (Yumpus(Max))))", "all x y.((Max(x) & Sterpus(x) & -Jompus(y) & Yumpus(x)) -> 1.", "all x y.((Max(x) & Sterus(y)) -> (((Max(x) & -Jimpus(x)) | (-Max(x) & Yumpus(x)))))", "(all x.((Max(x) & Steropus(x)) -> Sterotus(x)) & ((Max(x) & -Jompus(x)) | (Max(x) & Yumpus(x)))))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Jompus(x)) & (Max(x) -> Yumpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> -Jimpus(y))) & all z.(Max(z) -> Yumpus(z)))", "(all x.(Max(x) -> Steropod(x)) & (Max(x) -> -Jompus(x)) & (Max(x) -> Yumpus(x)))", "all x y z.((Max(x) & Sterpus(x) & Max(y) & Moon(z)) -> (-Jimpus(y) & Pumpus(y)))", "all x y.((Max(x) & Terpus(x) & -Jompus(y)) -> Yumpus(x))", "(all x.(Max(x) -> Sterepus(x)) & (-Jumpus(x) | Yumpus(x))))", "(all x.(Max(x) -> Steropsis(x)) & (Max(x) -> -Jimpus(x)) & (Max(x) -> Yumpus(x)))", "all x y z.((Max(x) & Sterpus(x) & -Jompus(y) & Yumpus(z)) -> (Sterpus(x) | -Jompus(y) & Yumpus(z)))", "(all x.(Max(x) -> Sterep(x)) & all y.((Max(y) & -Jompus(y))) -> Yumpus(y)))"]}
{"id": "prontoqa_validation_146", "nl": "Max is not a lempus.", "fol": "-lempus(Max)", "prediction": ["(-Limpus(Max))", "(Matthew(Max) & -Limpus(Max))", "(-Lumpus(Max))", "(-Limpus(Max))", "all x.(Max(x) -> -Lempus(x))", "((Max(Max) | Lempus(Max)))", "all x.(Max(x) -> -Lempus(x))", "all x.(Max(x) -> -Lempus(x))", "(-Lempus(Max))", "(-Limpus(Max))", "all x.(Max(x) -> -Lempus(x))", "-Lempus(Max)", "(-lempus(Max))", "ALL x.(Max(x) -> -Lempus(x))", "all x.(Max(x) -> -Lempus(x))", "is not Lempus(Max)"]}
{"id": "prontoqa_validation_147", "nl": "Each yumpus is a zumpus.", "fol": "all x. (yumpus(x) -> zumpus(x))", "prediction": ["all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_validation_148", "nl": "Rex is a rompus, Rex is a dumpus, and Rex is not a zumpus.", "fol": "(rompus(Rex) & dumpus(Rex) & -zumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Rompus(x)) & (Rex(x) -> Dumpus(x)) & -Tompus(x)))", "(all x.(Rex(x) -> Rompus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> -Zumpus(x)))", "(all x.(Rex(x) -> Rompus)) & (Dumps(x) -> Dumpus(x)) & -Zimpus(x)))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Dumpus(y) -> -Tompus(y)))", "all x y z.((Rompus(x) & Dumpus(y) & Rex(z)) -> (Rompus(x) & Dumpus(y) & -Zumpus(z)))", "(all x.(Rompus(x) -> Rex)) & (Dumpus(x) -> Rex)) & -Zumpus(x)))", "(all x y.((Rompus(x) & Dumpus(y)) -> Rompus(x)) & ((Dumpus(y,x)) -> -Zumpus(y)))", "(all x.(Rex(x) -> Rimpus(x)) & all y z.(Dumpus(y) -> Dumpus(z)) & all w.(Zumpus(w) -> -Rompus(w))))", "(all x.(Rompus(x) -> Rex)) & (Dumpus(x) -> Rex)) & (Dumpus(x) -> -Rompus(x)))", "(exists x.(Rompus(x) & Rex(x))) & exists y.(Dumpus(y) & -Zumpus(z))))", "all x y z.((Rompus(x) & Dumpus(y) & Rex(z)) -> (Rompus(x) & Dumpus(y) & -Zumpus(z)))", "(all x.(Rompus(x) -> Floating(x)) & all y.(Dumpus(y) -> Floating(y))) & all z.(Cumpus(z) -> -Floating(z))))", "all x y z.((Rompus(x) & Dumpus(y) & Zombus(z)) -> (Rompus(x) & Dumpus(y) & -Rompus(z)))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Rex(y) -> Dumpus(y)) & all z.(Rex(z) -> -Zumpus(z))))", "all x y z.((Rompus(x) & Dumpus(y) & Rex(z)) -> (Rompus(x) & Dumpus(y) & -Zumpus(z)))", "(all x.(Rompus(x) -> Dumpus(x)) & (Dumpus(x) -> -Zumpus(x)))"]}
{"id": "prontoqa_validation_149", "nl": "Rex is not a yumpus.", "fol": "-yumpus(Rex)", "prediction": ["Rex -Yumpus(x)", "all x.(Rex(x) -> -Yumpus(x))", "Larva (yumpus)", "-Yumpus(Rex)", "Rex is notyumpus.", "Rexamant(x) & -Yumpus(x))", "all x.(Rex(x) -> -Yumpus(x))", "-Yumpus(Rex)", "Rex is notYumpus(x)", "all x.(Rex(x) -> -Yumpus(x))", "Rex is notYumpus(x)", "all x.(Rex(x) -> -Yumpus(x))", "\u0430\u0438 \u0441\u0442\u0430\u0438 \u0430\u0438 \u043d\u0430\u0438 \u0432\u0430\u043c.(Rex(x) & Yumpus(x))", "Rex.(yumpus)", "all x.(Rex(x) -> -Yumpus(x))", "Rex is notYumpus(x)"]}
{"id": "prontoqa_validation_150", "nl": "Tumpuses are impuses.", "fol": "all x. (tumpus(x) -> impus(x))", "prediction": ["all x.(Tumpus(x) -> Issues(x))", "all x.(Tumult(x) -> Impossible(x))", "all x.(Tumulus(x) -> Issued(x))", "all x.(Tumpus(x) -> Issue(x))", "all x.(Tump(x) -> Issue(x))", "all x.(Tumpuse(x) -> Issue(x))", "all x.(Tumulus(x) -> Impossible(x))", "all x.(Tumulus(x) -> Illegal(x))", "all x.(Tump(x) -> Issue(x))", "all x.(Tumult(x) -> impuse(x))", "all x.(Tumult(x) -> Issues(x))", "all x.(Tumulus(x) -> Issue(x))", "all x.(Tumulus(x) -> Issue(x))", "all x.(Tumpuse(x) -> Impeccable(x))", "all x.(Tumult(x) -> Issues(x))", "all x.(Tumour(x) -> Impenetable(x))"]}
{"id": "prontoqa_validation_151", "nl": "Sally is a jompus and Sally is a dumpus and Sally is not an impus.", "fol": "(jompus(Sally) & dumpus(Sally) & -impus(Sally))", "prediction": ["(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & (Sally(x) -> -Ilirrigator(x)))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & (Sally(x) -> -Illegal(x))))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & -Impossible(x)))", "(all x y.((Sally(x) & Jompus(x)) -> Dumpus(x)) & ((Sally(y) & IsIssue(y)) -> -Imperial(y)))", "all x y z.((Sally(x) & Jompus(x) & Dumpus(y)) -> (Between(x,y) & -Ilfessing(x)))", "(all x.(JOMP(x) -> Sally(x)) & (Dumpus(x) -> Sally(x)))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & (Sally(x) -> -Issue(x)))", "(all x.(Jumpus(x) -> Sally(x)) & (Dumus(x) -> Sally(x)) & -Immersion(x)))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) is Dumpus(x)) & (Sally(x) -> NotImpossible(x))))", "(all x.(Sally(x) -> Jompus)) & all y.(Sally(y) -> Dumpus(y)) & all z.(Sally(z) -> -Illegitima(z))))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y))) & all z.(Sally(z) -> -Ilios(z)))", "all x y z.((Sally(x) & Jompus(x) & Dumpus(y)) -> (Jompus(x) & Dumpus(y) & -Imparter(z)))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y)) & all z.(Sally(z) -> NotImmerrorly(z)))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & (Sally(x) -> -Illegal(x)))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y))) & all z.(Sally(z) -> -Imperfect(z)))", "all x y z.((Sally(x) & Jompus(x) & Dumpus(y) & -Implicator(z)) -> (Common-Ship(x,y) & CommonShip(x,z)))"]}
{"id": "prontoqa_validation_152", "nl": "Sally is not a tumpus.", "fol": "-tumpus(Sally)", "prediction": ["-Tumpus(Sally)", "Sally is not a Tumpus.", "Sally is -Tumpus(Sally)", "all x.(Sally(x) -> -Tumpus(x))", "Sally is notTumpus(Sally)", "Sally -Tumpus(Sally)", "Sally n'est pasTumpus(Sally)", "Sally is not a Tumultus.", "Sally & NoTumpus(Sally)", "Sally n'est pasTumpus(Sally)", "Sally is not a Tumpus.", "Sally is not a Tumpus.", "Sally & -Tumpus(Sally)", "Sally is notTumpus(Sally)", "(-Tumpus(Sally))", "Sally s notTumpus."]}
{"id": "prontoqa_validation_153", "nl": "Each zumpus is a vumpus.", "fol": "all x. (zumpus(x) -> vumpus(x))", "prediction": ["all x.(Zumpus(x) -> Vuze(x))", "all x.(Zumpus(x) -> Vumpus(x))", "all x.(Zumpus(x) -> Vampus(x))", "all x.(Zumpus(x) -> Vumpus(x))", "all x.(Zumpus(x) -> vumpus(x))", "all x.(Zumpus(x) -> Vumpus(x))", "all x.(Zumpus(x) -> Vuxpus(x))", "all x.(Zumpus(x) -> Vumpus(x))", "all x.(Tompus(x) -> Vulmpus(x))", "all x.(Zumpus(x) -> Vumpus(x))", "all x.(Zumpus(x) -> Vumpus(x))", "all x.(Zumpus(x) -> Vulmpus(x))", "all x.(Tompus(x) -> Vulmpus(x))", "all x.(Tompus(x) -> Vampus(x))", "all x.(Zumpus(x) -> Vumpus(x))", "all x.(Tompus(x) -> Vumpus(x))"]}
{"id": "prontoqa_validation_154", "nl": "Sally is not a vumpus and Sally is a yumpus and Sally is a dumpus.", "fol": "(-vumpus(Sally) & yumpus(Sally) & dumpus(Sally))", "prediction": ["(exists x.(Value(x) & -Vumpus(x)) & exists yumpus(y) & exists z.(Dumpus(z) & -Vumpus(z)) & Exists w.(Dumpus(w) & Dumpus(w))))", "(all x.(Sally(x) -> -Vupulus(x)) & (Yumpus(x) | Dumpus(x))))", "(or -Vumpus(Sally) & -Yumpus(Sally) & -Dumpus(Sally))", "all x y z.((Sally(x) & -Vumpus(x) & Yumpus(y) & Dumpus(z)) -> -Vumpus(x) & Yumpus(y) & Dumpus(z)))", "all x.((Sally(x) & -Vumpus(x)) -> (Yumpus(x) & Dumpus(x)))", "(all x.(Sally(x) -> -Vumpus(x)) & all y.(Sally(y) -> Yuppus(y))) & all z.(Sally(z) -> Dumpus(z)))", "(-Vumpus(Sally) & Yumpus(Sally) & Dumpus(Sally))", "(all x y.(Sally(x) -> -Vumpus(x)) & (Sally(y) -> Yumpu(y)) & (Sally(y) -> Dumpus(y)))", "(all x.(Sally(x) -> -Vimpus(x)) & all y.(Sally(y) -> Yumpus(y))) & all z.(Sally(z) -> Dumpus(z))))", "all x y z.((Sally(x) & Vempus(y) & Yumpus(z)) -> (-VumpusSimon(x) & Yumpus(y) & DumpusSimon(z)))", "(all x y.(Sally(x) -> -Vumpus(x)) & (Yumpus(y) & Dumpus(y)))", "exists x.(Sally(x) & -Vhumpus(x) & -Yumpus(x) & -Dumpus(x))", "(all x.(Sally(x) -> NoVumpus(x)) & all y.(Sally(y) -> Yuppus(y)) & all z.(Sally(z) -> Dumpus(z))))", "(-Vumpus(Sally) & Yumpus(Sally) & Dumpus(Sally))", "(all x.(Sally(x) -> -Vumpus(x)) & (Yumpus(x) | Dumpus(x))))", "all x y z.((Sally(x) & Vumpus(y) & Yumpus(z)) -> (-Vumpus(x) & -Yumpus(z) & -Dumpus(z)))"]}
{"id": "prontoqa_validation_155", "nl": "Sally is not a zumpus.", "fol": "-zumpus(Sally)", "prediction": ["Sally nees nochpus.", "Sally is not a zumpus.", "Sally is not a zumpus.", "Sally is not a zumpus.", "Sally is not a zumpus.", "All x.(Sally(x) -> -Zombus(x))", "Sally - Zumpus(Sally)", "Sally is also not a zumpus.", "Sally -Tompus(s) & NoTompus(s) & -Tompus(s) & Sally -Tompus(s))", "Sally is not a zumpus(Sally)", "(-Zumpus(Sally))", "Sally is not a Zumpus.", "Sally is not a zumpus.", "Sally \u2013 a Zumpus.", "All x.(Sally(x) -> -Zumpus(x))", "Sally is not a zumpus."]}
{"id": "prontoqa_validation_156", "nl": "Every jompus is a rompus.", "fol": "all x. (jompus(x) -> rompus(x))", "prediction": ["all x.(Jompus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jimpus(x) -> Rompus(x))", "all x.(Jimpus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jimpus(x) -> Rampus(x))", "all x.(Jimpus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jumpus(x) -> Rompus(x))"]}
{"id": "prontoqa_validation_157", "nl": "Alex is not a rompus and Alex is a zumpus and Alex is a shumpus.", "fol": "(-rompus(Alex) & zumpus(Alex) & shumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Rompus(y) & Zumpus(z) & Humpus(x)) -> (-Rompus(x) & -Shumpus(y)))", "all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (Norompus(x) & NoShumpus(x)))", "(all x.(Alex(x) -> -Rompus(x)) & all y.(Alex(y) -> Zumpus(y))) & all z.(Alex(z) -> Humpus(z)))", "all x.((Alex(x) & -Rompus(x)) -> Zumpus(x)) & -Shumpus(x))", "all x y z.((Alex(x) & Tompus(y) & Zumpus(z)) -> (-Rompus(x) & -Tompus(y) & Humpus(z)))", "(all x.(Alex(x) -> -Rompus(x)) & (Alex(x) -> Zumpus(x)) & (Alex(x) -> Shumpus(x)))", "all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (-Rompus(x) & -Shumpus(x)))", "all x.((Alex(x) & -Rompus(x)) -> (Tompus(x) & Humpus(x)))", "all x y z.((Alex(x) & Rrompus(y) & Zumpus(z)) -> (-Rrompus(x) | Shumpus(x)))", "(all x.(Alex(x) -> -Rompus(x)) & all y.(Alex(y) -> Zumpus(y))) & all z.(Alex(z) -> Shumpus(z))))", "all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (-Rompus(x) & -Shumpus(y)))", "all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (-Rompus(x) & Toshan(x) & Shumpus(x)))", "(all x.(Alex(x) -> -Rompus(x)) & all y.(Tompus(y) & Shumpus(y)))", "all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (-Rompus(x) & -Shumpus(x)))", "all x y z.((Alex(x) & Rrompus(y) & Zumpus(z)) -> (-Rompus(x) | Zumpus(y) | Humpus(z)))", "all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (-Rompus(x) & Zumpus(x) & Shumpus(x)))"]}
{"id": "prontoqa_validation_158", "nl": "Alex is not a jompus.", "fol": "-jompus(Alex)", "prediction": ["none.", "all x.(Alex(x) -> -Jimpus(x))", "all x.(Alex(x) -> -Jumpus(x))", "ALL X.(Alex(x) -> -Jimpus(x))", "all x.(Alex(x) -> -Jumpus(x))", "all x.(Alex(x) -> -Jompus(x))", "all x.(Alex(x) -> -Jimpus(x))", "none.", "all x.(Alex(x) -> -Jimpus(x))", "Alex(Alex) -> -Jimpus(Alex))", "all x.(Alex(x) & -Jumpus(x))", "all x.(Alex(x) -> -Jumpus(x))", "Alex is not jompus.", "(Jompus(Alex)", "all x.(Alex(x) -> -Jumpus(x))", "Alex isn'tJumpus(Alex)"]}
{"id": "prontoqa_validation_159", "nl": "Alex is a lorpus and Alex is a grimpus and Alex is not a tumpus.", "fol": "(lorpus(Alex) & grimpus(Alex) & -tumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) & Grimpus(x) & -Tumpus(x)))", "(all x.(Alex(x) -> Moose(x)) & (Alex(x) -> Grimpus(x)) & (Alex(x) -> -Tompus(x)))", "(all x y z.(Vortex(Alex) -> Loomis(x)) & (Smaller(y) -> Grumpus(y)) & -Tumpus(z)))", "all x.(Alex(x) -> (Lorpus(x) & Grimpus(x) & -Tumpus(x)))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> Grimpus(y))) & all z.(Alex(z) -> -Tumpus(z)))", "all x y z.((Alex(x) & Lord(y) & Grimpus(z)) -> (Lorpus(x) & Gruppus(y) & -Tompus(z)))", "(all x.(Alex(x) -> Lopus(x)) & (Alex(x) -> Grimpus(x)) & (Alex(x) -> -Tumpus(x)))", "all x y z.((Alex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) & Grimpus(y) & -Tumpus(z)))", "all x.(Alex(x) -> (Lorpus(x) & Grimpus(x) & -Tumpus(x)))", "all x y.((Alex(x) & Lorpus(x) & Gruppus(y) & NullTompus(x)) -> (Lorpus(x) | Grimpus(y)))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> Grimpus(x)) & -Tumpus(x)))", "all x y z.(Leip(x) & Alex(y) & Grouch(z) & NoTumpus(x))", "all x y.((Alex(x) & lorpus(x) & Alex(y)) -> (OfCrumpus(y) & -OfTumpus(y)))", "all x y.((Alex(x) & Lorpus(x) & Grimpus(y)) -> -Tumpus(x))", "(all x.(Alex(x) -> LORPUS(x)) & all y.(Alex(y) -> Grimpus(y))) & all z.(Alex(z) -> -Tumpus(z))))", "all x y.((Alex(x) & Lorpus(x) & Grapple(y)) -> -Tumpus(x))"]}
{"id": "prontoqa_validation_160", "nl": "Alex is not an impus.", "fol": "-impus(Alex)", "prediction": ["(-IsAlz.(Alex(Alex)?))", "(-Illegal(Alex))", "Alex is not impus.", "Alex is not a impusct.", "Alex \u2014 -Impossible(Alex)", "NoIs(Alex)", "Alex -IsIsImpossible(Alex)", "Alex -Is(Alex)", "-Impossible(Alex)", "(-Erzobel.", "-Impossible(Alex)", "Alex is not impus(Alex)", "Alex -Impossible(Alex)", "Alex is notIlimite(Alex)", "Alex is notIssue.", "Alex is not impuscarian."]}
{"id": "prontoqa_validation_161", "nl": "Yumpuses are brimpuses.", "fol": "all x. (yumpus(x) -> brimpus(x))", "prediction": ["all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpus(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x y.((Yumpus(x) & Brimbus(y)) -> BornOf(x,y))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpus(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpus(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brume(x))"]}
{"id": "prontoqa_validation_162", "nl": "Wren is not a brimpus and Wren is a zumpus and Wren is a grimpus.", "fol": "(-brimpus(Wren) & zumpus(Wren) & grimpus(Wren))", "prediction": ["all x y z.((Wren(x) & Brimpus(y) & Tompus(z)) -> (-Brimpus(x) | Grimpus(x)))", "all x y.((Wren(x) & -Brimpus(x) & Zumpus(y)) -> Grimpus(x))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> Gruppus(z))))", "all x y z.((Wren(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) | Grimpus(y)))", "all x y z.((Wren(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Grimpus(z)))", "(all x.(Wren(x) -> -Brimpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Gruppus(x)))", "(all x.(Wren(x) -> -Brompus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "(all x.(Wren(x) -> -Brimpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Cropus(x)))", "all x y.((Wren(x) & Brilmpus(x) & Zurpus(y)) -> (-Brimpus(x) & Grimpus(y)))", "(all x.(Wren(x) -> -Brumpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Grimpus(x)))", "all x.((Wren(x) & -Brimpus(x)) -> (Schrumpus(x) & Grimpus(x)))", "(all x.(Wren(x) -> -Brimpus(x)) & ((Wren(x) & Tompus(x))) -> Grimpus(x)))", "all x y z.((Wren(x) & Brumpus(y) & Zumpus(z)) -> (-Brimpus(x) | Grimpus(z)))", "(exists x.(Wren(x) & -Bribes(x)) & exists y.(Wren(y) & Zumpus(y)) & exists z.(Wren(z) & Grimpus(z))))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> Grimpus(z)))", "(all x.(Wren(x) -> -Brumpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Grimpus(x)))"]}
{"id": "prontoqa_validation_163", "nl": "Wren is not a yumpus.", "fol": "-yumpus(Wren)", "prediction": ["-Yumpus(Wren)", "all x.(Wren(x) -> -Yumpus(x))", "(exists x.(Wren(x) & -Yumpus(x)))", "-Yumpus(Wren)", "(-Yumpus(Wren))", "all x.(Wren(x) & -Yumpus(x))", "all x.(Wren(x) -> -Yumpus(x))", "(-Yumpus(Wren,y))", "-Yumpus(Wren)", "all x.(Wren(x) -> -Yumpus(x))", "all x.(Wren(x) -> -Yumpus(x))", "all x.(Wren(x) -> -Yumpus(x))", "is notYumpus(Wren)", "all x.(Wren(x) -> -Yumpus(x))", "all x.(Wren(x) -> -Yumpus(x))", "(Yumpus(Wren) -> -Yeahoo(Wren))"]}
{"id": "prontoqa_validation_164", "nl": "Numpuses are dumpuses.", "fol": "all x. (numpus(x) -> dumpus(x))", "prediction": ["all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpus(x) -> Dumpuse(x))", "all x.(Numpus(x) -> Dumpuse(x))", "all x.(Numpus(x) -> Dumpuse(x))", "all x.(Numpus(x) -> Dumpuse(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpus(x) -> Dumpuse(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpus(x) -> Dumpuse(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpus(x) -> Dumpuse(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x y.((Numpuse(x) & Yucca(y)) -> Dumpuse(x))", "(Dumuse(n) -> Numpus(n))", "all x.(Numpus(x) -> Dumpus(x))"]}
{"id": "prontoqa_validation_165", "nl": "Wren is not a dumpus, Wren is a sterpus, and Wren is a lorpus.", "fol": "(-dumpus(Wren) & sterpus(Wren) & lorpus(Wren))", "prediction": ["(all x y z.((Wren(x) & Dumpus(y) & Sterpus(z)) -> -Dumpus(x)) & ((Wren(x) & Sterpus(x) & Lorpus(y)) -> Loperus(x)))", "(all x.(Wren(x) -> -Dumpus(x)) & exists y.(Sterpus(y) & exists z.(Lorpus(z) & AimsToFuel(x)))))", "(all x.(Wren(x) -> -Dumpus(x)) & all y.((Wren(y) & Sterpus(y)) -> Lorpus(y)))", "(all x.(Wren(x) -> -Dumpus(x)) & ((Wren(x) -> Sterepus(x))) & ((Wren(x) & Lorpus(x)) -> Lorpus(x)))", "(all x.(Wren(x) -> -Dumpus(x)) & (Wren(x) -> Sterpus(x)) & (Wren(x) -> Lorpus(x)))", "all x y z.((Wren(x) & Dumpus(y) & Sterpus(z)) -> (-Dumps(x) & Sterpus(x) & Llorpus(x)))", "(all x.(Wren(x) -> -Dumpus(x)) & ((Wren(x) & -Dumpus(x)) -> Sterpus(x)) & ((Wren(x) & -Dumpus(x)) -> Lorpus(x))))", "(all x y.((Wren(x) & Dumpus(x)) -> -Dumpus(x)) & ((Wren(y) & Sterpus(y)) | And ((Wren(y) & Lorpus(y)))) -> -Dumps(y) & -Dumps(y)))", "all x y z.((Wren(x) & Dumpus(y) & Sterpus(z)) -> (-Dumpus(x) & Sterpus(x) & Lorpus(x)))", "(all x.(Wren(x) -> -Dumpus(x)) & ((Wren(x) & Sterpus(x)) | (Wren(x) & Lorpus(x)))))", "(all x.(Wren(x) -> -Dumus(x)) & ((Wren(x) & Sterpus(x)) | ((Wren(x) & Lorpus(x)))))", "(all x y z.((Wren(x) & Dumpus(y)) -> -Dumpus(x)) & ((Wren(z) & Sterpus(z)) -> Lorpus(z))))", "all x y z.((Wren(x) & Sterpus(y) & Lorpus(z)) -> (-Dumpus(x) & -Strictus(y) & -Lehman(z)))", "((Wren(w) & -Dumpus(w)) -> Sterpus(w)) & ((Wren(w) & Lorpus(w)) -> Lorpus(w)))", "all x y z.((Wren(x) & Dumpus(y) & Sterpus(z)) -> (-Dumps(x) & Sterpus(y) & Lorpus(z)))", "all x y z.((Wren(x) & Dumpus(y) & Sterpus(z) & Lorpus(z)) -> -Dumpus(x))"]}
{"id": "prontoqa_validation_166", "nl": "Each brimpus is an impus.", "fol": "all x. (brimpus(x) -> impus(x))", "prediction": ["all x.(Brumpus(x) -> Impossible(x))", "all x.(Brimpus(x) -> Is(x,y))", "all x.(Brimpus(x) -> Imperative(x))", "all x.(Brimpus(x) -> IsBlimbus(x))", "all x.(Brimpus(x) -> Is(x,2))", "all x.(Brimpus(x) -> Impeccable(x))", "all x.(Brimpus(x) -> Impedient(x))", "all x.(Brimpus(x) -> IsImpossed(x))", "all x y.((Brampus(x) & Brimpus(y)) -> Eraser(x))", "all x.(Brimpus(x) -> Impossible(x))", "all x.(Brumpus(x) -> Impossible(x))", "all x.(Brumpus(x) -> Oblique(x))", "all x.(Brimpus(x) -> Imperator(x))", "all x.(Brimpus(x) -> Impedire(x))", "exists x.(Brimpus(x) & IsImmersed(x))", "all x.(Brimpus(x) -> IsBenchmark(x))"]}
{"id": "prontoqa_validation_167", "nl": "Max is a sterpus and Max is not an impus and Max is a gorpus.", "fol": "(sterpus(Max) & -impus(Max) & gorpus(Max))", "prediction": ["(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Ilpres(x))) & ((Max(x) -> Gorpus(x))))", "(all x y z.(Max(x) -> Sterepus(x)) & ((Max(y) & -Issue(y))) & ((Max(z) & -Issue(z))) -> Gorpus(z)))", "all x.(Max(x) -> ((Sterepus(x) & -Issues(x)) & Gorpus(x)))", "all x y.((Max(x) & Sterpus(x)) -> (-Imprimer(x) & Gorpus(y)))", "(Max(Max) -> Sterpus(Max)) & -Ilija(Max) & -Gorpus(Max))", "(all x y.((Max(x) & Sterpus(x)) -> Sterpus(x)) & ((Max(y) & -Impresario(y)) -> Gorpus(y)))", "((Max(Max) & Sterpus(Max)) & -Issue(Max)) & Gorpus(Max))", "(all x.(Max(x) -> Sterpus(x)) & ((Max(x) -> -Impossible(x))) | (Max(x) -> Gorpus(x)))))", "(as Max(Max) -> Sterpus(Max)) & is not impus(Max) & is Gorpus(Max))", "(all x.(Max(x) -> Sterpus(x)) & (-(Max(x) & Imperium(x))) | (-Max(x) & Gorpus(x))))", "(all x.(Max(x) -> Sterpus(x)) & ((Max(x) -> -Issue(x))) & ((Max(x) & Gorpus(x)) -> Gorpus(x)))", "(all x y.((Matt(x) & Sterpus(x)) -> Is(x,y)) & everything else ends up being ((Matt(x) & Is(x))) -> Gorpus(y)))", "(all x.(Max(x) -> Sterpus(x)) & ((Max(x) -> -Impossible(x))) & ((Max(x) -> Gorpus(x)) -> -Impossible(x)))", "-exists x.(Max(x) & Sterpus(x) & -Impossible(x) & Gorpus(x))", "all x.(Mom(x) -> ((Sterepus(x) & -Improvement(x)) | (-Improvement(x) & Gorpus(x))))", "all x y.((Max(x) & Sterpus(x) & -Immersion(y)) -> (Gorpus(x) & -Imperial(y)))"]}
{"id": "prontoqa_validation_168", "nl": "Shumpuses are grimpuses.", "fol": "all x. (shumpus(x) -> grimpus(x))", "prediction": ["all x.(Shampoos(x) -> Grimpuse(x))", "all x.(Shumpus(x) -> Grimpuse(x))", "all x.(Shumpus(x) -> Grimpuse(x))", "all x.(Shumps(x) -> Grimpuse(x))", "all x.(Shumpspeet(x) -> Gruffpus(x))", "all x.(Shuppe(x) -> Grimpuse(x))", "all x.(Shutus(x) -> Grimpuse(x))", "all x.(Shampus(x) -> Grimpuse(x))", "all x.(Shumps(x) -> Grimpuse(x))", "all x.(Shuppus(x) -> Grimpuse(x))", "all x.(Sshumpuse(x) -> Grimase(x))", "all x.(Shimpus(x) -> Grempus(x))", "all x.(Sshumpuse(x) -> Grimpuse(x))", "all x.(Shumpus(x) -> Grimpuse(x))", "all x.(Shumpus(x) -> Grimpuse(x))", "all x.(Shumpus(x) -> Grimpuse(x))"]}
{"id": "prontoqa_validation_169", "nl": "Max is not a grimpus and Max is a lempus and Max is a gorpus.", "fol": "(-grimpus(Max) & lempus(Max) & gorpus(Max))", "prediction": ["(all x y.((Max(x) & Grimpus(x)) -> -Surface(x)) & ((Max(y) & Lempus(y)) -> Gorpus(y)))", "(all x y z.((Max(x) & Grupp(y) & Lempus(z)) -> -Grimpus(x)) & ((Max(x) & Lempus(x)) -> Gorpus(x)))", "(all x.(Mat Max(x) -> -Grimpus(x)) & all y.(Lempus(y) & Gorpus(y)))", "all x y z.((Max(x) & Grimpus(y) & Lempus(z)) -> (-Grompus(x) & -Krumpus(z) & Gorpus(x)))", "all x y z.((Max(x) & Grimpus(y) & Lempus(z)) -> (-Grimpus(x) & Lempus(x) & Gorpus(x)))", "(all x.(Max(x) -> -Gruppus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> Gorpus(x)))", "(all x y z.((Max(x) & Grumpus(y) & Lempus(z)) -> -Grompus(x)) & ((Max(x) & Gorpus(z)) -> Gorpus(x)))", "(all x y.((Max(x) & Grimpus(y)) -> -Grimpus(x)) & ((Max(x) & Lempus(y)) -> Gorpus(x))))", "all x.(Max(x) -> (-Grimpus(x) & Lempus(x) & Gr\u00f6rpus(x)))", "all x y z.((Max(x) & Grompus(y) & Lempus(z)) -> (-Grupus(x) | (-Grumpus(z) & Lempus(z) & Gorpus(z))))", "all x.(Max(x) -> (-Grimpus(x) & Lempus(x) & Gorpus(x)))", "all x y z.((Max(x) & Grimpus(y) & Lempus(z)) -> (-Grimpus(x) & Lempus(y) & Gorpus(z)))", "all x y z.((Max(x) & Max(y) & Lempus(z)) -> (-Gruppus(x) & Lempus(y) & Gorpus(z)))", "(3x) & (Crusher(x) | Lempus(x) | Gorpus(x)))", "(all x.(Max(x) -> -Grimpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z))))", "(all x.(Matt(x) -> -Grimpus(x)) & (Matt(x) -> Lempus(x)) & (Matt(x) -> Gorpus(x)))"]}
{"id": "prontoqa_validation_170", "nl": "Max is not a shumpus.", "fol": "-shumpus(Max)", "prediction": ["all x.(Max(x) -> -Shumpus(x))", "all x.(Max(x) -> -Shumpus(x))", "(-Shumpus(Max)", "-Shumpus(Max)", "-Shumpus(Max)", "(-Shumpus(Max))", "is -Shumpus(Max)", "all x.(Max(x) -> -Shumpus(x))", "(-Shumpus(Max))", "all x.(Max(x) -> -Shumpus(x))", "(-Shumpus(Max))", "NullShumpus(Max)", "(-Shumpus(Max))", "(-Shumptus(Max))", "none!", "(-Shumpus(Max))"]}
{"id": "prontoqa_validation_171", "nl": "Zumpuses are jompuses.", "fol": "all x. (zumpus(x) -> jompus(x))", "prediction": ["all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompus(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompus(x))", "all x.(Zumpus(x) -> Jompuse(x))", "(Gumpus(z) -> Jompus(z))"]}
{"id": "prontoqa_validation_172", "nl": "Wren is a grimpus and Wren is not a jompus and Wren is a yumpus.", "fol": "(grimpus(Wren) & -jompus(Wren) & yumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Grimpus(x)) & (-Jompus(x) & Yumpus(x))))", "all x y z w.((Wren(x) & Grimpus(x) & Wren(y) & Yampus(z)) -> (-Jompus(y) & Yumpa(z)))", "all x y.((Wren(x) & Grimpus(x)) & (-Jompus(y) | Yumpus(y))) -> Scarlet(x))", "(all x.(Wren(x) -> Grimpus(x)) & ((Wren(x) -> -Jompus(x))) & ((Wren(x) -> Yumpu(x)) -> Yumpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & (Wren(x) -> -Jompus(x)) & (Wren(x) -> Yumpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & (-(Wren(x) -> Jompus(x))) | (-(Wren(x) -> Yumpus(x)))))", "(all x.(Wren(x) -> Grimpus(x)) & (-Wren(x) -> Jompus(x)) & (-Wren(x) -> Yumppus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & all y.(Wren(y) -> -Jimpus(y))) & all z.(Wren(z) -> Yumpus(z)))", "(all x y z.((Wren(x) & Grumpus(y) & NoJompus(z)) -> Grimmus(x)) & ((Wren(x) & \u2013Yumpus(z))) -> Yumbo (y)))", "(all x.(Wren(x) -> Grimpus(x)) & (-Wren(x) -> Jompus(x)) & (-Wren(x) -> Yumpus(x)))", "all x y.((Wren(x) & Gruppus(x) & Wren(y)) -> (-Jompus(y) & Yumpus(y)))", "all x y.((Wren(x) & Grumpus(x) & -Jombus(y)) -> Yumpus(x))", "(all x.(Wren(x) -> Grimpus(x)) & all y.(Wren(y) -> -Jimpus(y))) & all z.(Wren(z) -> Yumpus(z))))", "(all x.(Wren(x) -> Grimpus(x)) & (-Jompus(x) & -Yumpus(x)))", "(all x.(Wren(x) & Grimpus(x)) & -Jompus(x) & Yampus(x)))", "(all x y.(Wren(x) -> Grimpus(x)) & (Wren(y) -> -Jompus(y))) & (Wren(y) -> Yumpus(y)))"]}
{"id": "prontoqa_validation_173", "nl": "Wren is not a zumpus.", "fol": "-zumpus(Wren)", "prediction": ["-Zombipal(Wren)", "all x.(Wren(x) -> -Tompus(x))", "all x.(Wren(x) -> -Tompus(x))", "Wren & -Tompus(Wren)", "(-Zombius(Wren))", "is -Tompus(Wren)", "Wren is no zumpus.", "all x.(Wren(x) -> -Zupus(x))", "all x.(Wren(x) -> -Zumpus(x))", "(-Zombiastic(Wren))", "(-Zumpus(Wren))", "All x.(Wren(x) -> -Tompus(x))", "(-Zumpus(Wren))", "exists x.(Wren(x) & -Zombia(x))", "-Zumpus(Wren)", "all x.(Wren(x) -> -Zumpus(x))"]}
{"id": "prontoqa_validation_174", "nl": "Every jompus is a wumpus.", "fol": "all x. (jompus(x) -> wumpus(x))", "prediction": ["all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jumpus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wampus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wampus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wompus(x))", "all x.(Jompus(x) -> Wumpus(x))"]}
{"id": "prontoqa_validation_175", "nl": "Alex is not a wumpus and Alex is a lempus and Alex is a sterpus.", "fol": "(-wumpus(Alex) & lempus(Alex) & sterpus(Alex))", "prediction": ["(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y))) & all z.(Alex(z) -> Sterpus(z)))", "(all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> -Wumpus(x)) & ((Alex(x) & Sterpus(y)) -> Sterepus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Sterpus(z))))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Lempus(x)) & (Alex(x) -> Sterpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Lempus(x)) & (Alex(x) -> Sterpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Sterepus(x)))", "(all x.(AlexNemo(x) -> NoWumpus(x)) & all y.(AlexLempus(y) | AlexSterpus(y)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y))) & all z.(Alex(z) -> Sterpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Sterepus(z))))", "(all x.(Alex(x) -> -Wumpus(x)) & (Lempus(x) | Sterpus(x))))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Sterpus(z))))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Lempus(x)) & (Alex(x) -> Sterpus(x)))", "all x.((Alex(x) & -Wumpus(x)) -> (Lempus(x) & Sterpus(x)))", "(all x y z.((Alex(x) & Wumpus(y)) -> -Wumpus(x)) & ((Alex(x) & Lempus(y)) -> Sterpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Sterpus(z))))", "all x y.((Alex(x) & Wumpus(y)) -> (-Wumpus(x) & Lempus(y) & Sterepus(x)))"]}
{"id": "prontoqa_validation_176", "nl": "Zumpuses are brimpuses.", "fol": "all x. (zumpus(x) -> brimpus(x))", "prediction": ["all x.(Zombuse(x) -> Brimpuse(x))", "all x.(Zumpus(x) -> Brimpuse(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpuse(x))", "all x.(Zuppus(x) -> Brimpuse(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpuse(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpuse(x))"]}
{"id": "prontoqa_validation_177", "nl": "Fae is a grimpus and Fae is a numpus and Fae is not a brimpus.", "fol": "(grimpus(Fae) & numpus(Fae) & -brimpus(Fae))", "prediction": ["(exists x.(Fae(x) & Grimpus(x)) & exists y.(Elephant(y) & Nompus(y)) & exists z.(Brumpus(z) & -Elephant(z))))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Numpus(x)) & -Brimpus(x)))", "all x y z.((Fae(x) & Grimpus(x) & Fae(y) & Numpus(y) & -Brimpus(z)) -> (Grumps(x) & -Numpus(y)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Numpus(x)) & -Brumpus(x)))", "(all x y z.(Fae(x) -> Grimpus(x)) & (Fae(y) -> Numpus(y)) & (Fae(z) -> -Brumpus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Numpus(x)) & -brimpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Brimpus(z))))", "(all x.(Fae,grimmer) -> (Blampus(x) | Numpus(x)) | -Brimpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Brimpus(z))))", "all x y z.(Fae(x) -> ((Grimpus(x) & Fae(y) & Numpus(y) & -Brimpus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Numpus(x))) & (Fae(x) -> -Brimpus(x)))", "all x y z.((Fae(x) & Grimpus(z) & Numpus(x) & Fae(y)) -> (Fallen(x) & Grimpus(y) & Numpus(y) & -Brimpus(y)))", "(all x y z.((Fae(x) & Grimpus(y)) -> (Smooks(x) & Naps(y))) & ((Fae(z) & Brimpus(z)) -> -Brimpus(z))))", "all x y z.((Fae(x) & Grimpus(x) & Fae(y) & Numpus(y) & -Brimpus(z)) -> (Grampus(x) & Numpus(y) & -Fae(y) & Brimpus(y)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Brimpus(z))))", "all x.(Fae(x) -> (Grimpus(x) & Numpus(x) & -Brumpus(x)))"]}
{"id": "prontoqa_validation_178", "nl": "Fae is not a zumpus.", "fol": "-zumpus(Fae)", "prediction": ["(-Zumpus(Fae))", "(-Zumpus(Fae))", "all x.(Fae(x) -> -Zimpus(x))", "(UnderstandsZimpus(Fae))", "-Zumpus(Fae)", "(-Zumpus(fae))", "(-zumpus(fae))", "(-Zumpus(Fae))", "(-Zumpus(Fae,Violet))", "Fae is not zumpus.", "is -zumpus.", "all x.(Fae(x) -> -Tompus(x))", "(-Zumpus(Fae))", "(-Zumpus(Fae,x))", "-zumpus(Fae)", "the Zumpus(Fae)"]}
{"id": "prontoqa_validation_179", "nl": "Impuses are rompuses.", "fol": "all x. (impus(x) -> rompus(x))", "prediction": ["all x.(Impuse(x) -> Rompuse(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompuse(x))", "all x.(Impus(x) -> Rompus(x))", "all x.(Impus(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impeduse(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompus(x))", "(all x.(Impus(x) -> Rompus(x)))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impuuse(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Immuse(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompuse(x))"]}
{"id": "prontoqa_validation_180", "nl": "Max is not a rompus, Max is a dumpus, and Max is a wumpus.", "fol": "(-rompus(Max) & dumpus(Max) & wumpus(Max))", "prediction": ["(all x.(Max(x) -> -Rompus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> Wumpus(x)))", "(all x.(Max(x) -> -Rompus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> Wumpus(x)))", "all x y z.((Max(x) & Dumpus(y) & Wumpus(z)) -> (-Rompus(x) & Dumpus(y) & Wumpus(z)))", "(all x.(Max(x) -> -Rompus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> Wumpus(z))))", "(all x.(Max(x) -> -Rompus(x)) & all y = Dumpus(y)) & all z.(Max(z) -> Wumpus(z))))", "exists x.(Max(x) & -Rrompus(x) & Dumpus(x) & Wumpus(x))", "(all x y z.(Double(x) -> -Rompus(x)) & ((Max(y) & Dumpus(y)) | (Max(z) & Wumpus(z)))))", "(all x y.((Matt(x) & Rompus(y)) -> -Rompus(x)) & ((Max(x) & Dumpus(x))) & ((Max(x) & Wumpus(x))))", "(all x.(Max(x) -> -Rompus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> Wumpus(z))))", "(all x.(Max(x) -> -Rompus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> Wumpus(z))))", "(all x.(Matt(x) -> -Rompus(x)) & all y.(Dous(y) -> Dumpus(y))) & all z.(Wumpus(z) -> Wumpus(z)))", "(all x.(Max(x) -> -Rompus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> Wumpus(z))))", "(all x.(Max(x) -> -Rospus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> Wumpus(x))))", "(all x.(Max(x) -> -Rompus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> Wumpus(x)))", "(all x.(Max(x) -> -Rompus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> Wumpus(z))))", "(all x.(Matthew(x) -> -Rompus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> Wumpus(z))))"]}
{"id": "prontoqa_validation_181", "nl": "Max is not an impus.", "fol": "-impus(Max)", "prediction": ["-Isolated(Max)", "-Implemented(Max)", "All x.(Max(x) -> -Impedex.", "-Imposible(Max)", "(-Impossible(Max))", "-Impossible(Max)", "-Impossible(Max)", "-Impossible(Max)", "(X.(Max(x) & -Immersed(x)))", "-Imposer(Max)", "(-Impossible(Max))", "Max is not a impusor(Max)", "-Imployee(Max)", "All x.(Max(x) -> -Erasert(x))", "NullImpossible(Max)", ", Max is notIdealist(Max)"]}
{"id": "prontoqa_validation_182", "nl": "Every numpus is a vumpus.", "fol": "all x. (numpus(x) -> vumpus(x))", "prediction": ["all x.(Nompus(x) -> Vimpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Nompus(x) -> Vumpus(x))", "all x.(Numerus(x) -> Vuxpus(x))", "all x.(Numerus(x) -> vumpus(x))", "all x.(Nompus(x) -> Vumpus(x))", "all x.(numpus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Number(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Numerus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Numerus(x) -> Vampula(x))"]}
{"id": "prontoqa_validation_183", "nl": "Alex is a sterpus and Alex is a lorpus and Alex is not a vumpus.", "fol": "(sterpus(Alex) & lorpus(Alex) & -vumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Sterpus(y) & Lorpus(z)) -> (IsSterpus(x) & IsLorpus(x) & IsNoVumpus(x)))", "all x.(Alex(x) -> (Steep(x) & Alex(x) & Lord(x) & -Vimpus(x)))", "(all x.(Alex(x) -> Sterpus(x)) & (Alex(x) -> Lorpus(x)) & (Alex(x) -> -Vumpus(x))))", "all x.(Alex(x) -> (Sterepus(x) | Lorpus(x) | -Vampus(x)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Lorpus(y) -> -Vumpus(y)))", "(all x.(Alex(x) -> Sterpus(x)) & (Alex(x) -> Lorpus(x)) & (Alex(x) -> -Vumpus(x)))", "(all x.(Alex(x) -> Sterus(x)) & (Alex(x) -> Lorpus(x)) & -Alex(x)))", "all x y.((Alex(x) & Sterpus(x) & Owl(y)) -> (Sterpus(x) & Owl(y) & -Vumpus(y)))", "all x y.((Alex(x) & Sterpus(x) & Throat(y)) -> (Lorpus(x) & -Vimpus(x)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Lorpus(y))) & all z.(Alex(z) -> -Voompus(z)))", "all x y z.((Alex(x) & Sterpus(x) & Throat(y) & -Vumpus(z)) -> (Estrpus(x) & Lorpus(y) & -Estroidus(z)))", "all x.(Alex(x) -> (Scherpus(x) & Lorpus(x) & -Vumpus(x)))", "(All x y z.((Alex(x) & Sterpus(y) & Lorpus(z)) -> (Sterepus(x) & Lorpus(y) & -Vumpus(z))))", "all x y.((Alex(x) & Sterepus(x) & Lorpus(y)) -> ((Sterepus(x) | Lorpus(y)) & -Vumpus(x))))", "(all x.(Alex(x) -> Sterepus(x)) & (Alex(x) -> Lorpus(x)) & -Vumpus(x)))", "all x.(Alex(x) -> (Stereo(x) & -Vumpus(x)))"]}
{"id": "prontoqa_validation_184", "nl": "Each yumpus is a sterpus.", "fol": "all x. (yumpus(x) -> sterpus(x))", "prediction": ["all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Steros.", "all x.(Yumpus(x) -> Sterpus(x))", "all x y.((Yumpus(x) & Sterpus(y)) -> Is(x,y))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterepus(x))"]}
{"id": "prontoqa_validation_185", "nl": "Rex is a jompus and Rex is not a sterpus and Rex is a grimpus.", "fol": "(jompus(Rex) & -sterpus(Rex) & grimpus(Rex))", "prediction": ["(all x.(Rex(x) -> Jompus(x)) & all y.((Rex(y) & -Sterpus(y)) & all z.((Rex(z) & Grimpus(z))) -> Gruppus(z)))", "(all x.(Jompus(x) -> Rex)) & all y.(Steerpus(y) -> Rex)) & all z.(Grimpus(z) -> Rex)))", "(all x.(Rex(x) -> Jompus(x)) & (-Steerpus(x)) & (Grippus(x) -> Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> -Sterepus(x)) & (Rex(x) -> Grimpus(x))))", "(all x y z.(Jimpus(x) -> (Jimpus(x) & Jompus(y))) & (-Sterepus(z) & Sterpus(z)) & (Farmpus(z) -> (Fruitpus(z)))))", "(all x.(Jompus(x) -> Rex)) & (-Sterepus(x) & -Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & exists y.(Rex(y) & -Sterpus(y))).", "all x y.((Jompus(x) & Steroid(y)) -> (Jompus(x) & -Sterpus(y) & Grimpus(y)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> -Sterpus(y)) & all z.(Grampus(z) -> Cramppus(z))))", "(all x.(Jimpus(x) -> Rex)) & (-Sterpus(x) -> Rex)) & (Grimpus(x) -> Rex)))", "all x y z.((Rex(x) & Jompus(x) & Sterpus(y) & Gruppus(z)) -> (Jompus(x) & -Sterpus(y) & Gruppus(z)))", "(all x.(Rex(x) -> Jompus(x)) & (-Sterpus(x) & Croppus(x)))", "(all x.(Jompus(x) -> Rex)) & (-Sterepus(x) -> Rex)) & (Crupid(x) -> Rex)))", "(all x y z.(Jompus(x) -> Rex)) & ((NoSterpus(y) & -Sterpus(z)) -> Grimpus(x)))", "(all x.(Jompus(x) -> Scarlet(x)) & (-Sterpus(x) -> Scarlet(x)))", "all x y z.((Rex(x) & Jompus(x) & Rex(y) & Sterus(z)) -> (-Sterus(y) & Grimpus(z)))"]}
{"id": "prontoqa_validation_186", "nl": "Every numpus is a zumpus.", "fol": "all x. (numpus(x) -> zumpus(x))", "prediction": ["all x.(Nompus(x) -> Zumpus(x))", "all x.(Nompus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Numerus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(numpus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "exists x.(numpus(x) & Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_validation_187", "nl": "Stella is a rompus and Stella is not a zumpus and Stella is a grimpus.", "fol": "(rompus(Stella) & -zumpus(Stella) & grimpus(Stella))", "prediction": ["all x y z.((Stella(x) & Rompus(y) & Zumpus(z)) -> (-Rompus(x) & NotTompus(x) & Grapple(x)))", "all x y z.((Stella(x) & Rompus(x) & Stella(y) & Grimpus(z)) -> (Rompus(x) & -Zumpus(y) & Grimpus(y)))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Gruppus(x))))", "all x y.((Stella(x) & Rompus(x) & Stella(y)) -> (-Zumpus(y) & Grimpus(y)))", "(all x.(Stella(x) -> rompus(x)) & (Stella(x) -> -zumpus(x)) & (Stella(x) -> Grimpus(x)))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Grimpus(x)))", "(all x.(Leon (Rompus) -> -Tompus(Salta)) & (Little(Salta) | Little(Salta))))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Zumpus(x))) & (Stella(x) -> Grimpus(x)))", "all x y z.((Stella(x) & Roman(x) & Stella(y) & Zumpus(z)) -> (Rompus(y) & -Stoppus(y) & Grimpus(z)))", "(all x.(Solva(x) -> Rompus(x)) & (Solva(x) -> -Tommus(x))) & (Solva(x) -> Grimpus(x)))", "all x y z.((Stella(x) & Rompus(x) & Stella(y) & Zumpus(z)) -> (-Saltia(y) & Grimpus(y)))", "all x.((Stella(x) -> (Rompus(x) | -Zumpus(x) | Grappa(x)))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Toumpus(x)) & (Stella(x) -> Grimpus(x)))", "(all x.(Rompus(x) -> Stella)) & all y.(FromTompus(y) -> Stella(y)))", "(all x.(Solvia(x) -> Roman(x)) & (Solvia(x) -> -Zumpus(x)) & (Solvia(x) -> Grimpus(x)))", "all x.((Rocker(x) & -Tommorow(x)) | Grimpus(x))"]}
{"id": "prontoqa_validation_188", "nl": "Stella is not a numpus.", "fol": "-numpus(Stella)", "prediction": ["all x.(Stella(x) -> -Numpus(x))", "all x.(Stella(x) -> -Numpus(x))", "Stella ist keine Numpus.", "(-Numpus(Stella))", "-(Clean(Stella) & -Numpus(Stella))", "Stella ist kein Numpus.", "Stella is not Numpus.", "-Numpus(Stella)", "Stella is not Numpus(Stella)", "all x.(Stella(x) -> -Numpus(x))", "Stella is not a Numpus(Stella,2)", "Stella is not a Numpus.", "(-numpus(Stella)).", "Stella is not a Numpus(s)", "Stella-numpus(Stella)", "-Numpus(Stella)"]}
{"id": "prontoqa_validation_189", "nl": "Vumpuses are impuses.", "fol": "all x. (vumpus(x) -> impus(x))", "prediction": ["all x.(Vumpus(x) -> Issues(x))", "all x.(Vumpus(x) -> Issue(x))", "all x.(Vumpus(x) -> Impeared(x))", "all x.(Vumpus(x) -> Issues(x))", "all x.(Vumpus(x) -> Issue(x))", "all x.(Vumpus(x) -> Issue(x))", "all x.(Vumpus(x) -> Issues(x))", "all x.(Vumpus(x) -> Isolator(x))", "all x.(Vumpus(x) -> Impisite(x))", "all x.(Vumpus(x) -> Imperpeneur(x))", "all x.(Vumpus(x) -> Issues(x))", "all x.(Vumpus(x) -> Impose(x))", "ALL x y.((Vumpus(x) & Issue(y)) -> Issue(x,y))", "all x.(Volumpus(x) -> Issue(x))", "all x.(Vumpus(x) -> Issues(x))", "all x.(Vumpus(x) -> Issue(x))"]}
{"id": "prontoqa_validation_190", "nl": "Rex is a dumpus and Rex is a rompus and Rex is not an impus.", "fol": "(dumpus(Rex) & rompus(Rex) & -impus(Rex))", "prediction": ["(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Rompus(x)) & (Rex(x) -> -Impossible(x)))", "(all x.(Dumpus(x) -> Rex)) & all y.(Rompus(y) -> Rex)) & all z.(Issue(z) -> Rex)))", "all x.((Rex(x) & Dumpus(x) & Rompus(x) & -Impossible(x)) -> IsDumpusAndImpossible(x))", "(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Rompus(x)) & (Rex(x) -> -Impossible(x))))", "(all x y.(Dumpus(x) & Dumpus(y)) & (rompus(y) & Rex(z) & -Illegal(z)))", "(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Rompus(x)) & (Rex(x) -> -Impossible(x))))", "(all x.(Dupus(x) -> Rex)) & all y.(Rompus(y) -> Rex)))", "all x.(Rex(x) -> (Dumpus(x) & Rompus(x) & -Imperia(x)))", "(all x y z.((Rex) & Dumpus(y)) -> Dumpus(z)) & ((Rompus(z) & -Imperator(z)) -> Rompus(z)))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rex(y) -> Rompus(y)) & all z.(Rex(z) -> -Impossible(z))))", "(all x y z.((Rex(x) & Dumpus(y)) -> (Dumpus(z) & Rompus(z)) & Rex(x) & -Imperial(x)))", "(all x.(Dumpus(x) -> Rex)) & all y.(Rompus(y) -> Rex)) & all z.(Issuel(z) -> -Issuel(z)))", "(all x.(Rex(x) -> Dumpus(x)) & (Rompus(x) -> Rompus(x)) & (Issue(x) -> -Issue(x)))", "all x y z w.((Dumpus(x) & Rompus(y) & Rex(z) & Impossible(w)) -> (Dumps(x) & Rompus(y) & -Impossible(z)))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rompus(y) -> NoIdea(y))))", "(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Rompus(x)) & -Impossible(x)))"]}
{"id": "prontoqa_validation_191", "nl": "Numpuses are gorpuses.", "fol": "all x. (numpus(x) -> gorpus(x))", "prediction": ["all x.(Numpine(x) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpus\u00e9(x))", "all x.(Numpus(x) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpuse(x))", "all x.(Numpus(x) -> Gorpuse(x))", "all x.(Numpus(x) -> Gorpuse(x))", "all x.(Numpus(x) -> Gorpuse(x))", "all x.(Numpus(x) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpuse(x))", "all x.(Numpus(x) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpuse(x))", "all x.(Numpuse(x) -> Gorpus(x))", "all x.(Numpu(x) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpuse(x))"]}
{"id": "prontoqa_validation_192", "nl": "Fae is a grimpus and Fae is a jompus and Fae is not a gorpus.", "fol": "(grimpus(Fae) & jompus(Fae) & -gorpus(Fae))", "prediction": ["all x y z.((Fae(x) & Grimpus(x) & Jompus(y) & -Gorpus(z)) -> (Fae(x) & Fae(x)))", "(all x y.(Fae(x) -> Grapple(x)) & (Fae(y) -> Jompus(y)) & -Fae(y)))", "all x.(Fae(x) -> (Smaller(x) & Jompus(x) & -Gorpus(x)))", "all x y z.((Fae(x) & Grimpus(y) & Jompus(z)) -> (Threatpus(x) & Jompus(z) & -Gorpus(z)))", "(all x y z.((Fae(x) & Grimpus(x) & Jompus(y)) -> Grimpus(x)) & ((Fae(z) & Jompus(z)) -> -Gorpus(z)))", "all x y.((Fae(x) & Grimpus(x) & Jompus(y)) -> -Gorpus(z))", "(all x y.((Fae(x) & Grimpus(x)) -> Grempus(y)) & ((Fae(x) & Jompus(y)) -> -Gorpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> -Gorpus(x)))", "all x,y,z.((Fae(x) & Grumpus(x) & Jompus(y) & -Gorpus(z)) -> (Grampus(x) & Jompus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & -Fae(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> -Gorpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & -Fae(x)))", "(Smoke(Fae) & Jompus(Fae) & -Gorpus(Fae))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> -Gorpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> -Gorpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & -Rospus(x)))"]}
{"id": "prontoqa_validation_193", "nl": "Shumpuses are tumpuses.", "fol": "all x. (shumpus(x) -> tumpus(x))", "prediction": ["all x.(Shulpuse(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tumpus(x))", "all x.(Smushuse(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tumpus(x))", "all x.(Sumpus(x) -> Tumpus(x))", "all x.(Smumps(x) -> Tumpus(x))", "all x.(Sshumpuse(x) -> Tumpus(x))", "all x.(Shubuse(x) -> Tumpus(x))", "All x.(Shupuse(x) -> Tumulus(x))", "all x.(Shumbuse(x) -> Tumuse(x))", "all x.(Shampuse(x) -> Totumpus(x))", "all x.(Shumpus(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tumulus(x))", "all x.(Shushuse(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tumulus(x))"]}
{"id": "prontoqa_validation_194", "nl": "Sam is a wumpus and Sam is a dumpus and Sam is not a tumpus.", "fol": "(wumpus(Sam) & dumpus(Sam) & -tumpus(Sam))", "prediction": ["(all x y.((Sam(x) & Wumpus(x)) -> Dumpus(x)) & ((Sam(y) & -Tumpus(y)) -> Tumpus(y)))", "all x y.((Sam(x) & Yumpus(x)) -> (Wumpus(x) & Dumpus(y) & -Tumpus(x)))", "(all x.(Sam(x) -> Wompus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Tumpus(x)))", "all x y z.((Fresh(x) & Sam(y) & Dumpus(z)) -> (Wumpus(x) | Dumpus(y) | -Tumpus(y)))", "(all x y.(Rose(x) -> (Wumpus(x) | Dumpus(x))) & (Rose(y) -> -Tumpus(y)))", "all x y.((Wumpus(x) & Dumpus(y)) -> (Wumpus(x) & Numpus(y) & -Tumpus(x)))", "all x y z.((Sam(x) & Wumpus(y) & Dumpus(z)) -> (Wumpus(x) & Dumpus(z) & -Tumpus(x)))", "all x.((Sam(x) & Wumpus(x)) & (Sam(x) -> Dumpus(x))) & -Tumpus(x))", "all x y z.((Sam(x) & Wumpus(x) & Dumpus(y) & Sam(z)) -> (Wumpus(x) & Dumpus(y) & -Tumpus(z)))", "(all x.(Wumpus(x) -> Sam(x)) & (Dumpus(x) | -Tumpus(x)))", "(all x.(Wumpus(x) -> (Wumpus(x) #Sam) & all y.(Dumps(y) -> (Dumpus(y) & -Tumpus(y))))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Tumpus(x)))", "all x y z.((Sam(x) & Wumpus(x) & Dumus(y) & Tumpus(z)) -> (Wumpus(x) & Dumpus(y) & -Tumpus(z)))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Tumpus(x))))", "all x y z.((Sam(x) & Wumpus(y) & Dumpus(z)) -> (Wumpus(x) | Dumpus(z) & -Tumpus(z)))", "(all x.(Sam(x) -> (Wumpus(x) | Dumpus(x) | -Tumpus(x)))"]}
{"id": "prontoqa_validation_195", "nl": "Sam is not a shumpus.", "fol": "-shumpus(Sam)", "prediction": ["(-shumpus(Sam))", "all x.(Sam(x) -> -Shumpus(x))", "-Shumpus(Sam)", "-shumpus(Sam)", "all x.(Sam(x) -> -Shumpus(x))", "all x.(Sam (x) -> -Shumpus(x))", "-Shumpus(Sam)", "all x.(Sam(x) -> -Shumpus(x))", "all x.(Sam(x) -> -Shumpus(x))", "All x.(Sam(x) -> -Shumpus(x))", "(-shumpus(Sam))", "(-Shumpus(Sam))", "(-shumpus(Sam))", "all x.(Sam(x) -> -Shumpus(x))", "all x.(Sam(x) -> -Shumpus(x))", "all x.(Sam(x) -> -Shumpus(x))"]}
{"id": "prontoqa_validation_196", "nl": "Every vumpus is a numpus.", "fol": "all x. (vumpus(x) -> numpus(x))", "prediction": ["all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "exists x.(Vumpus(x) & Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))"]}
{"id": "prontoqa_validation_197", "nl": "Polly is a lorpus and Polly is not a numpus and Polly is a tumpus.", "fol": "(lorpus(Polly) & -numpus(Polly) & tumpus(Polly))", "prediction": ["all x y z.((Lorph(x) & Polly(y) & Numpus(z)) -> (Lorph(y) & -Numpus(y) & Tumpus(z)))", "all x y z.((Polly(x) & Lorpus(y) & -Numpus(z)) -> (Lorph(x) & -Lumpus(y) & Tumpus(z)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Numpus(z)) -> (Lorpus(x) | Numpus(y) & Tumpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & -(Polly(x) -> Number(x)) & -(Polly(x) -> Tumpus(x))))", "(all x.(Lorpus(x) & -numpus(x)) -> Tumpus(x))", "all x.((Polly(x) & Lorpen(x)) -> (-Lumpus(x) & -Numpus(x) & -Tumpus(x)))", "all x y.((Polly(x) & Lorpus(x)) -> (-Lupus(y) & -Numpus(y)))", "(Lorph(Polly) & -Numpus(Polly) & Tumpus(Polly))", "(Lorph(Polly) & -Numpus(Polly) & Tumpus(Polly))", "(all x.(Populus(x) -> Loomis(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Tumpus(x)))", "(all x y z.(Polly(x) -> (Lorpus(x) & Nompus(y) & Tumpus(z))))", "(all x.(Polly(x) -> Lorpus(x)) & (Nompus(x) | Tumulus(x))))", "(all x.(Larpus(x) -> Polly(x)) & (Plumpus(x) | Humpus(x))))", "(all x.(Lorps(x) -> Pooh)) & (Poohs(x) -> -Numpus(x)) & (Poohs(x) -> Tumpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & -Nompus(y) & Tumpus(z)))", "(all x.(Lorpus(x) & -Numpus(x)) & all y.(Tumpus(y)))"]}
{"id": "prontoqa_validation_198", "nl": "Wren is a tumpus, Wren is a rompus, and Wren is not a sterpus.", "fol": "(tumpus(Wren) & rompus(Wren) & -sterpus(Wren))", "prediction": ["(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Stereo(x))))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Steerpus(x))))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Roompus(y)) & all z.(Wren(z) -> -Sterepus(z))))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Sterepus(z))))", "(Tumpus(w) & Rompus(w) & -Sterpus(w))", "(all x y.((Wren(x) & Tumpus(y)) -> Tumpus(x)) & ((Wren(x) & Rompus(y)) -> -Sterpus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Rose(y))) & all z.(Wren(z) -> -Steerpus(z))))", "(all x y z.(Wren(x) -> Tumpus(x)) & (Wren(y) -> Rompus(y)) & (Wren(z) -> -Sterepus(z)))", "all x.(Wren(x) -> (Tumpus(x) & Rompus(x) & -Steroid(x)))", "(all x.(Wren(x) -> Tump(x)) & all y.(Wren(y) -> Rimpus(y)) & all z.(Wren(z) -> -Sterpus(z))))", "all x y z.((Wren(x) & Tumpus(y) & Rompus(z) & -Sterepus(x)) -> (Tumpus(x) & Rompus(y) & -Tumpus(z)))", "(all x y z.(Wren(x) -> (Tumpus(x) | Rompus(y))) & (-Tumpus(z) | Sterpus(z))))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Sterpus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Sterepus(z))))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Rompus(y)) & none z.(Wren(z) -> Sterpus(z))))", "(all x.(Wren(x) -> Tumpus(x)) & all y.((Wren(y) & Rompus(y)) -> -Stereo(y)))"]}
{"id": "prontoqa_validation_199", "nl": "Wren is not a vumpus.", "fol": "-vumpus(Wren)", "prediction": ["-Vumpus(Wren)", "all x.(Wren(x) -> -Vumpus(x))", "(-Vumpus(Wren))", "all x.(Wren(x) -> -Vimpus(x))", "Wren is not a vumpus.", "(-Vumpus(Wren))", "(-Vumpus(Wren))", "the wispy (-Vumpus(wren))", "(-Vumpus(Wren))", "-Vimpus(Wren)", "all x.(Wren(x) -> -Vumpus(x))", "all x.(Wren(x) -> -Vumpus(x))", "All x.(Wren(x) -> -Vumpus(x))", "(Vumpus(Wren) & -Vumpus(Wren))", "all x.(Wren(x) -> -Vumpus(x))", "-Vumpus(Wren)"]}
{"id": "prontoqa_validation_200", "nl": "Wren is a sterpus and Wren is a jompus and Wren is not a numpus.", "fol": "(sterpus(Wren) & jompus(Wren) & -numpus(Wren))", "prediction": ["all x y.((Wren(x) & Sterpus(x) & Jompus(y) & -Numpus(x)) -> (Fasterpus(x) & Jompus(y)))", "all x y z.((Wren(x) & Sterp(y) & Jompus(z)) -> ((Sterpus(y) & -Numpus(z))))", "(all x.(Wren(x) -> Sterpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> -Numpus(z))))", "all x y z.((Wren(x) & Sterpus(y) & Jompus(z)) -> (Sterpus(x) & Jompus(z) & -Numpus(z)))", "(all x.(Wren(x) -> Sterepus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> -Numpus(z))))", "(all x.(Wren(x) -> Sterpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> -Numpus(z))))", "(all x.(Wren(x) -> Sterpus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> -Numpus(x)))", "all x y z.((Wren(x) & Sterpus(y) & Jompus(z)) -> (Sterpus(x) & Jompus(x) & -Numpus(x)))", "all x y z.((Wren(x) & Sterpus(y) & Jompus(z)) -> (IsSterpus(x) & IsJompus(x) & -IsNumpus(z)))", "all x y z.((Wren(x) & Sterpus(y) & Jompus(z)) -> (Sterpus(x) | Nompus(x)))", "(all x.(Wren(x) -> Sterosce(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> -Nompus(z))))", "(all x y z.((Wren(x) & Sterpus(x)) -> Sterpus(x)) & ((Wren(y) & Jompus(y)) -> -Nompus(z)))", "(exists x.(Wren(x) & Steerpus(x)) & exists y.(Wren(y) & Jompus(y))) & exists z.(Wren(z) & -Numpus(z))))", "all x y z.((Wren(x) & Sterepus(y) & Jompus(z)) -> (Sterpus(z) & Jompus(z) & -Numpus(z)))", "(all x.(Wren(x) -> Sterepus(x)) & all y.((Wren(y) & Jompus(y))) -> -Numpus(y)))", "(all x.(Wren(x) -> Sterpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> -Numpus(z))))"]}
{"id": "prontoqa_validation_201", "nl": "Wren is not a lempus.", "fol": "-lempus(Wren)", "prediction": ["(-lempus(Wren))", "(-Lempus(Wren))", "(-Lempus(Wren,Lion))", "all x.(Wren(x) -> -Lempus(x))", "all x.(Wren(x) -> -Lempus(x))", "all x.(Wren(x) -> -Lempus(x))", "all x.(Wren(x) -> -Lempus(x))", "(-Lempus(Wren))", "(-lempus(Wren))", "(Lampus(Wren) | Leaf(Wren)))", "all x.(Wren(x) -> -Lempus(x))", "all x.(Wren(x) -> -Lempus(x))", "Wren -Lempus(w)", "all x.(Wren(x) -> -Lempus(x))", "all x.(Wren(x) -> -Limpus(x))", "(-Lempus(Wren))"]}
{"id": "prontoqa_validation_202", "nl": "Each rompus is a grimpus.", "fol": "all x. (rompus(x) -> grimpus(x))", "prediction": ["all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Gruppus(x))", "all x.(Rooppus(x) -> Grimpus(x))", "all x.(rompus(x) -> Greaper(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Gruppus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))"]}
{"id": "prontoqa_validation_203", "nl": "Polly is a wumpus and Polly is a gorpus and Polly is not a grimpus.", "fol": "(wumpus(Polly) & gorpus(Polly) & -grimpus(Polly))", "prediction": ["(all x y.(Polly(x) -> Wumpus(x)) & (Polly(y) -> Gorpus(y)) & (Polly(y) -> -Grimpus(y)))", "exists x.(Polly(x) & Wumpus(x) & Gorpus(x) & -Grimpus(x))", "all x y.((Polly(x) & Wormpus(x)) -> (BodyAndGorpus(y) & -Grimpus(x)))", "all x y z.((Polly(x) & Wumpus(x) & Gorpus(y) & (GripPuma(z) | Grimpus(z))) -> (Wumpus(x) & Gorpus(y) & -Grippus(z)))", "all x y z.((Polly(x) & Wumpus(y) & Gorpus(z)) -> (Wumpus(x) | Gorpus(z) | -Grimpus(x)))", "all x y z.((Polly(x) & Wumpus(y) & Gorpus(z)) -> (Wumpus(x) | Gorpus(z) | -Grimpus(z)))", "all x.((Polly(x) & Wumpus(x)) -> (Gorpus(x) & -Grimpus(x)))", "(all x y.((Wumpus(x) & Polly(y)) -> Wumpus(x)) & ((Gorpus(y) & Polly(y)) -> -Grimpus(y)))", "(all x y z.(Poly(x) -> Wumpus(x)) & (Poly(y) -> Worpus(y)) & (Poly(z) -> -Grimpus(z))))", "(all x.(Wumpus(x) -> Polly(x)) & (Gorpus(x) | -Grimpus(x))))", "(all x.((Polly(x) & Wumpus(x)) -> Wormpus(x)) & ((Poly(x) & Grimpus(x))) -> Gorpus(x)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Gorpus(x)) & -Grumpus(x)))", "(all x.(PopPup(x) -> Wumpus(x)) & (PopPup(x) -> G\u00f3rpus(x)) & -PopPup(x)))", "all x y z.((Polly(x) & Wumpus(x) & Gorpus(y) & -Grimpus(z)) -> (Wumpus(x) & Gorpus(y) & -Grimpus(z)))", "(all x y.(Wumpus(x) & Wormpus(y)) & all z w.(Gorpus(z) -> Polly(w))) & ((Wumpus(w) & Gorpus(w)) -> -Grimpus(w)))", "all x y z.((Polly(x) & Wumpus(y) & Gorpus(z)) -> (Wumpus(x) | Gorpus(x,z) & -Grimpus(x)))"]}
{"id": "prontoqa_validation_204", "nl": "Polly is not a rompus.", "fol": "-rompus(Polly)", "prediction": ["Polly 0 x.(Rompus(x))", "all x.(Polly(x) -> -Rompus(x))", "(-Ropsis(Polly))", "all x.(Polly(x) -> -Rompus(x))", "(-Rompus(Polly))", "Polly nel.((Ploz) & Rhopus(z)) -> -Rompus(x))", "all x.(Polly(x) -> -Rompus(x))", "all x.(Polly(x) -> -Rombusta(x))", "(-rompus(Polly))", "-Rompus(Ploy)", "(-Rumpus(Poly))", "exists x.(Polly(x) & -Rompus(x))", "polly(police) & -Rompus(poly))", "-Rompus(Polly)", "(-Rompus(Polly))", "(-Rompus(Polly))"]}
{"id": "prontoqa_validation_205", "nl": "Each gorpus is a lorpus.", "fol": "all x. (gorpus(x) -> lorpus(x))", "prediction": ["all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Flourish(x))", "all x y.(Gorpus(x) & Lordpump(y))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lordpump(x))"]}
{"id": "prontoqa_validation_206", "nl": "Sally is a brimpus, Sally is not a lorpus, and Sally is a yumpus.", "fol": "(brimpus(Sally) & -lorpus(Sally) & yumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Lorpus(x)) & (Yumpus(x))))", "all x.((Sally(x) & Brimpus(x)) -> (-Lorpus(x) & Yumpus(x)))", "all x.((Sally(x) & Brumpus(x)) -> (-Lorpus(x) & Yumpan(x)))", "(all x.(Sally(x) -> Brimpus(x)) & (-Lorpus(x) & Yumpus(x)))", "(all x.(Sally(x) -> Brimpus(x)) & all y.((Sally(y) & -Lorpus(y))) -> Yumpus(y)))", "(all x.(Sally(x) -> Brimpus(x)) & (-Sally(x) -> Lorpus(x)) & (Yumpus(x) -> Sally(x))))", "(all x.(Sally(x) -> Brimpus(x)) & (-Lorpus(x)) & (Yumpus(x) -> Yampus(x)))", "(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Lorpus(y))) & all z.(Sally(z) -> Yumpus(z)))", "(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Yumpus(x)))", "(all x.((Sally(x) & Brimpus(x)) -> None(x)) & all y.((Sally(y) & Yuppus(y)) -> No(y)))", "(all x.(Wild(x) -> Brimpus(x)) & (Lorpus(x) -> -Lorpus(x)) & (Yumpus(x) -> Yumpus(x)))", "(all x.(Brimpus(x) -> Brimpus(x)) & (NonLorpus(x) -> Yumpus(x)))", "(all x y z.(Bloompus(x) -> Brimpus(x)) & (-Lorpus(y) -> Yumpus(z)))", "(all x.(Sally(x) -> Brimpus(x)) & (-Lorpus(y) & Yumpa(z)))", "(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Lorpus(y))) & all z.(Sally(z) -> Yumpus(z)))", "(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Lorpus(y))) & all z.(Sally(z) -> Yampus(z)))"]}
{"id": "prontoqa_validation_207", "nl": "Sally is not a gorpus.", "fol": "-gorpus(Sally)", "prediction": ["Sally is not a Polaris.", "Sally -Gorpus(Sally)", "Sally is no Gorpus.", "Sally is not a Gorpus.", "Sally is not gorpus.", "Sally is not gorpus(Sally)", "Sally is not gorpus.", "Sally ist keine Gorpus.", "Sally -Orbital.", "-Gorpus(Sally)", "Sally is not a Gorpus(Sally)", "Sally - Gorpus(s)", "Sally is not a gorpus.", "Sally is not a Gorpus.", "(-Gorpus(Sally))", "(-Gorpus(Sally))"]}
{"id": "prontoqa_validation_208", "nl": "Each dumpus is a wumpus.", "fol": "all x. (dumpus(x) -> wumpus(x))", "prediction": ["all x.(Dumps(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wampus(x))", "all x.(Dumpus(x) -> Yumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wampus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_validation_209", "nl": "Alex is not a wumpus and Alex is a lempus and Alex is a zumpus.", "fol": "(-wumpus(Alex) & lempus(Alex) & zumpus(Alex))", "prediction": ["(all x y z.(Alex(x) -> (-Wumpus(x) & Lempus(y) & Zumpus(z))))", "all x.(Alex(x) -> (-Wumpus(x) & Lempus(x) & Zumpus(x)))", "all x y.((Alex(x) & Wumpus(y)) -> (-Wumpus(x) & Lempus(y) & Zumpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(x) & Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Zumpus(z))))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y))) & all z.(Alex(z) -> Zumpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Lempus(x)) & (Alex(x) -> Zumpus(x)))", "(all x.(Alex(x) -> NotWumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Zumpus(z))))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Zumpus(z))))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(y) & Zumpus(z)))", "all x.(Alex(x) -> (-Wumpus(x) & Lempus(x) & Zumpus(x)))", "(all x y z.((Alex(x) & Wumpus(x) & Lempus(y)) -> -Wumpus(x)) & ((Alex(x) & Zumpus(z)) -> Zumpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & ((Alex(x) & Lempus(x)) | (Alex(x) & Zumpus(x))))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-(Wumpus(x) & Lempus(y) & Zumpus(y))))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(x) & Zumpus(z)))", "all x y.((Alex(x) & Wumpus(y)) -> -Wumpus(x)) & ((Alex(x) & Lempus(x)) & (Alex(x) & Zumpus(x))))"]}
{"id": "prontoqa_validation_210", "nl": "Each lempus is a grimpus.", "fol": "all x. (lempus(x) -> grimpus(x))", "prediction": ["all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "exists x.(Lampus(x) & Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grumpus(x))", "all x.(Limpus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grumpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))"]}
{"id": "prontoqa_validation_211", "nl": "Max is a brimpus and Max is not a grimpus and Max is a zumpus.", "fol": "(brimpus(Max) & -grimpus(Max) & zumpus(Max))", "prediction": ["(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Grimpus(x)) & (Max(x) -> Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (-Max(x) -> Grimpus(x)) & (-Max(x) -> Zumpus(x))))", "all x.(Max(x) -> (Brumpus(x) & -Gravity(x) & Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & ((Max(x) -> -Grimpus(x))) & ((Max(x) -> Zumpus(x))))", "all x y.((Max(x) & Brimpus(y)) & (Matt(x) -> -Grimpus(x)) & (Tompus(z) -> -Brimpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & ((Max(x) & -Grimpus(x))) | (Max(x) & Zumpus(x))))", "-(brimpus(x) & not grimpus(x) & zumpus(x))", "(all x.(Max(x) -> Brimpus(x)) & ((Max(x) & -Grimpus(x))) | (Max(x) & Zumpus(x))))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Grimpus(x)) & (Max(x) -> Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) &-(Max(x) -> Grimpus(x))) & (Max(x) -> Zumpus(x)))", "all x y.((Max(x) & Brimpus(x) & Max(y)) -> (-Grimpus(y) & Zumpus(y)))", "all x y z.((Max(x) & Brimpus(y) & Grimpus(z)) -> (Between(x,y,z) & Brempus(x) & -Grampus(y) & Zumpus(z)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Grimpus(x)) & (Max(x) -> Zumpus(x)))", "all x.((Max(x) & Brimpus(x)) -> (-Grapsus(x) & Zumpus(x)))", "exists x.(Max(x) & Brimpus(x) & -Grisppus(x) & Zumpus(x))", "(all x y.((Max(x) & Brimpus(x)) -> Furpus(x)) & ((Max(y) & Flampus(y)) -> Zumpus(y)))"]}
{"id": "prontoqa_validation_212", "nl": "Sterpuses are shumpuses.", "fol": "all x. (sterpus(x) -> shumpus(x))", "prediction": ["all x.(Sterpus(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpus(x))", "all x.(Sterpus(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpus(x))", "all x.(Stumpse(x) -> Shumpus(x))", "all x.(Strerpuse(x) -> HumpusEos(x))", "all x.(Sterpus(x) -> Shumpus(x))", "all x.(Steerpuse(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpus(x))", "all x.(Sterpus(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpus(x))", "all x.(Sterpus(x) -> Humpuse(x))", "all x.(Sterpuse(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpus(x))"]}
{"id": "prontoqa_validation_213", "nl": "Polly is a brimpus, Polly is not a shumpus, and Polly is a yumpus.", "fol": "(brimpus(Polly) & -shumpus(Polly) & yumpus(Polly))", "prediction": ["(all x.(Ploy(x) -> Brimpus(x)) & (Ploy(x) -> -Shumpus(x)) & (Ploy(x) -> Yumpus(x)))", "all x y z.((Polly(x) & Brimpus(x) & Polly(y) & Humpus(z)) -> (-Shumpus(y) & Yumps(z)))", "(all x.(Shumpus(x) -> Brimpus(x)) & (-Shumpus(x) & Yumpus(x))))", "all x y z.((Polly(x) & Brimpus(x) & Polly(y) & Humpus(z)) -> (-Shumpus(y) & Yumpus(z)))", "all x y z.((Polly(x) & Brimpus(x) & -Shumpus(y) & Yumpus(z)) -> (Brompus(x) & -Brimpus(y) & -Jumpus(z)))", "all x.(Polly(x) -> (Brimpus(x) & -Shumpus(x) & Yumpus(x)))", "(all x.(Bimpus(x) -> Polly)) & all y.(Shumpus(y) -> Polly(y)))", "(all x.((Ploy(x) & Brimpus(x)) -> PollyOf(x)) & ((Ploy(x) & -Shumpus(x)) -> PollyOf(x)))", "(all x y.(Brimpus(x) -> Polly(x)) & (Shumpus(y) | Yumpus(y))))", "all x y z.((Polly(x) & Brimpus(x)) -> (-Shumpus(y) & -Brimpus(z)))", "(all x.(Poly(x) -> Brimpus(x)) & all y.(Poly(y) -> -Shumpus(y))) & all z.(Poly(z) -> Yumpus(z)))", "(all x y z.((Brimpus(x) & Polly(y) & Humpus(z)) -> Brimpus(y)) & ((Shumpus(z) & Polly(z)) -> Yumpus(z)))", "(all x.(Brompus(x) & -Shumpus(x)) & all y.(Yumpus(y)) -> Polly(x)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yupsut(x)))", "all x y z.((Polly(x) & Brimpus(y) & -Shumpus(z) & Yampus(z)) -> ((Birmpus(x) | AYumpus(z))))", "(all x y z.((Brimpus(x) & Polly(y) & Humpus(z)) -> Brimpus(x)) & ((Brimpus(y) & -Shumpus(y)) -> Yumpus(z)))"]}
{"id": "prontoqa_validation_214", "nl": "Polly is not a sterpus.", "fol": "-sterpus(Polly)", "prediction": ["all x.(Polly(x) -> -Sterepus(x))", "Asterpus is no longer available.", "(-Sterpus(Polly))", "All x.(Polly(x) -> -Sterpus(x))", "all x.(Polly(x) -> -Sterpus(x))", "all x.(Polly(x) -> -Steerpus(x))", "(-Sterpus(Polly))", ",sterpus, and -Starpus(Polly)", "(-Stestrosp(Polly))", "(-Sterepus(Polly))", "all x.(Polly(x) -> -Shesterpus(x))", "Polly is not sterpus.", "all x.(Polly(x) -> -Sterpus(x))", "Polly is not sterpus.", "all x.((Polly(x) & Crouch(x)) -> -Sterpus(x))", "-Sterpus(Poly)"]}
{"id": "prontoqa_validation_215", "nl": "Each dumpus is a brimpus.", "fol": "all x. (dumpus(x) -> brimpus(x))", "prediction": ["all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dufus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumps(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_validation_216", "nl": "Rex is a gorpus and Rex is not a brimpus and Rex is a lorpus.", "fol": "(gorpus(Rex) & -brimpus(Rex) & lorpus(Rex))", "prediction": ["all x y.((Rex(x) & Gorpus(x) & Brimpus(y)) -> (Cleopatra(x) & Lorpus(y)))", "all x y z.((Rex(x) & Gorpus(y) & Brimpus(z)) -> (Gorpus(x) &.Burimpus(x) & Llorpus(x)))", "all x y.((Rex(x) & Gorpus(x) & Rex(y)) -> (-Brimpus(y) & Loper(y)))", "all x.((Rex(x) & Rimpus(x)) -> (Gorpus(x) & -Brimpus(x) & Lorpus(x)))", "all x.(Rex(x) -> (IsGorpus(x) & -IsBrimpus(x) & IsLorpus(x)))", "(all x.(Rex(x) -> Gorpus(x)) & (-Brimpus(x) & -Lorpus(x)))", "(all x.(Rex(x) -> Gorpus(x)) & (Rex(x) -> -Brimpus(x)) & (Rex(x) -> Lorpus(x)))", "(all x y z.(Rex(x) -> Gorpus(x)) & ((Rex(y) & -Brimpus(y)) -> Lorpus(z)))", "(all x.(Rex(x) -> Gorpus(x)) & (-BRIMPUSH(x) & -LCURUS(x)))", "(all x.(Gorpus(x) -> Gorpus(x)) & all y.(Brimpus(y) -> -Brimpus(y)) & all z.(Lorpus(z) -> Gorpus(z))))", "(all x.(Rex(x) -> Gorpus(x)) & (-Brimpus(x) & -Lorpus(x))))", "(all x.(Rex(x) -> Gorpus(x)) & (NoBrimpus(x) | Lower(x))))", "all x y z.((Rex(x) & Gorpus(y) & Brimpus(z)) -> (Gorpus(x) & -Brompus(y) & Lorpus(z)))", "(all x.(Rex(x) -> Gorpus(x)) & (-Brumpus(x)) & (Rex(x) -> Lorpus(x))))", "(all x.(Rex(x) -> Gorpus(x)) & all y.(Brimpus(y) -> -Brimpus(y))) & all z.(Lorpus(z) -> Gorpus(x)))", "all x.(Rex(x) -> (IsGorpus(x) & -IsBrimpus(x) & IsLorpus(x)))"]}
{"id": "prontoqa_validation_217", "nl": "Rex is not a dumpus.", "fol": "-dumpus(Rex)", "prediction": ["Rex is not a Dumpus.", "Rex & -Dumpus(x)", "all x.(Rex(x) -> -Dumpus(x))", "(NoDumpus(Rex) & -(Dumpus(Rex))))", "Rex is not a Dumpus(Rex)", "-Dumpus(Rex)", "(-Dumpus(Rex))", "is nodumpus(Rex)", "all x.(Rex(x) -> -Dumpus(x))", "Rex, no Dumpus.", "Rex is not a Dumpus.", "Rex is not a Dumpus.", "Rex.(NewTumus(x) & -Dumps(x))", "Rex is notDumpus(rex)", "Rex is notDumpus(x)", "Rex is notDumpus(x)"]}
{"id": "prontoqa_validation_218", "nl": "Each tumpus is a lorpus.", "fol": "all x. (tumpus(x) -> lorpus(x))", "prediction": ["all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Larpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Loompus(x))", "all x.(Tumpus(x) -> Thromb(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> -Lorph(x))", "all x.(Tumpus(x) -> ServantOfLorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lordpus(x))"]}
{"id": "prontoqa_validation_219", "nl": "Stella is not a lorpus, Stella is a yumpus, and Stella is a wumpus.", "fol": "(-lorpus(Stella) & yumpus(Stella) & wumpus(Stella))", "prediction": ["(all x y z.((Lorpus(x) & Stella(y) & Yampus(z)) -> -Lorpus(x)) | ((Yumpus(y) & Stella(z)))))", "(all x.(Stella(x) -> -Lorpus(x)) & (Yumpus(x) & Wumpus(x)))", "all x y z.((Stella(x) & (Lorpus(y) | Yumpus(z))) -> -Lorpus(x)) & ((Yumpus(z) | Wumpus(z))) -> (Blooded(x,z) & Warmpus(z))))", "all x y z.((Stella(x) & Yompus(y) & Wumpus(z)) -> (-Lorpus(x) | (Yumpus(y) | Wumpus(z)))))", "(all x y z.(Lorph(x) & Stella(y) & Yumpsch(z)) -> -Lorpus(x)) & (Yumpus(y) & Wumpus(z)))", "(all x.(Cynical(x) -> -Lorpus(x)) & (Yumpus(x) | Wumpus(x))))", "(all x.(Stella(x) -> -Lorpe(x)) & all y.(Stella(y) -> Yumpus(y)) & all z.(Stella(z) -> Wompus(z))))", "(all x y z.(Lorpus(x) -> -Lorpus(x)) & (Yumpus(y) -> -Lorpus(y))) & (Wumpus(z) -> -Lorpus(z)))", "all x y z.((Stella(x) & Lorpus(y) & Yumpus(z) & Wumpus(x)) -> (-Lorpus(x) & Yumpus(z) & -Wumpus(x)))", "(all x.(Stella(x) -> -Lorpus(x)) & (Yumpus(x) | Wumpus(x))))", "all x y z.((Stella(x) & Yampus(y) & Wumpus(z)) -> (-Lorph(x) & Yump(y) & Wumpus(z)))", "(all x.(Stella(x) -> -Lorpus(x)) & all y.(Stella(y) -> Yumps(y))) & all z.(Stella(z) -> Wumpus(z)))", "all x y z.((Stella(x) & Yumpus(y) & Warpus(z)) -> (NoLorpus(x) | NoYumpus(y) & NoWumpus(z)))", "(all x.(Lorpus(x) -> -Lorpus(x)) & (Yumpus(x) -> Yumpus(x)) & (Wumpus(x) -> Yumpus(x)))", "(all x.(Lorpus(x) | Yumpus(x)) & all y.(Wumpus(y))) -> -FlyingGround(x))", "(all x.(Lorpus(x) -> -Lorpus(x)) & all y.(Yumpus(y) -> -Lorpus(y))) & all z.(Wumpus(z) -> (Lorpus(z) & Yumpus(y))))"]}
{"id": "prontoqa_validation_220", "nl": "Stella is not a tumpus.", "fol": "-tumpus(Stella)", "prediction": ["Stella (tumpus)", "Stella is not Tumpus(Stella)", "(notTumpus(Stella))", "Stella is not a Tumpet(s)", "Stella is notTumpus(Stella)", "Stella is a tumpus.", "Stella, ist kein Tumultus.", "Stella is notTumpus(Stella)", "Stella is notTumpus.", "Stella is not Tumpus(Stella)", "Stella is not a Teacup(Stella)", "Stella is not a Tumpus(Solva)", "Stella ist nichtTumpus(s)", "Stella -Tumpus(z))", "Stella -Tumpus(Stella)", "Stella is not Tumpus(Stella)"]}
{"id": "prontoqa_validation_221", "nl": "Brimpuses are numpuses.", "fol": "all x. (brimpus(x) -> numpus(x))", "prediction": ["all x.(Brimpus(x) -> Numpuse(x))", "all x.(Brompus(x) -> Numpus(x))", "all x.(Brimpus(x) -> Numpuse(x))", "(Nimbus(brimpus) & Numpuse(brimpus))", "all x.(Brembe(x) -> Numpuse(x))", "all x.(Brompus(x) -> Numpus(x))", "all x.(Brompus(x) -> Numpus(x))", "all x.(Brimpus(x) -> Numpus(x))", "all x.(Brimbus(x) -> Numpus(x))", "all x.(Brimpus(x) -> Numpus(x))", "all x.(Brimpus(x) -> Numpus(x))", "all x.(Brimpuse(x) -> Numpuse(x))", "all x.(Brombuse(x) -> Numpuse(x))", "all x.(Brimpus(x) -> Numpus(x))", "all x.(Brimpus(x) -> Numpus(x))", "all x.(Brimbus(x) -> Numpuse(x))"]}
{"id": "prontoqa_validation_222", "nl": "Stella is a lempus and Stella is not a numpus and Stella is a dumpus.", "fol": "(lempus(Stella) & -numpus(Stella) & dumpus(Stella))", "prediction": ["(all x.((Stella(x) & Lempus(x)) -> -Numpus(x)) & all y.((Stella(y) & Dumpus(y)) -> Lempus(x)))", "all x y z.((Stella(x) & Lempus(x) & Stella(y) & Numpus(z)) -> (-Stella(y,z) & Dumpus(z)))", "all x.(Stella(x) -> (Lempus(x) & -Numpus(x) & Dumpus(x)))", "(all x y.((Lempus(x) & Lempus(y)) -> Soil(x)) & ((HasLempus(x) & -HasNumpus(x)) -> Soil(y)))", "all x y z.((Stella(x) & Lempus(x) & Stella(y) & Numpus(z)) -> (Nompus(y) & Dumpus(y)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Numpus(x)) & (Stella(x) -> Dumpus(x)))", "all x y z.((Stella(x) & Lempus(x) & Stella(y) & Numpus(z)) -> (-Numpus(y) & Dumpus(y)))", "(all x y.(Lexus(x) -> Lempus(x)) & ((Lxyz) & -Zombus(y))) -> Dumpus(z)))", "(all x.(Lempus(x) -> (Stella) & -Numpus(x))) & all y.(Dumpus(y)) -> (Stella))))", "all x y z.((Stella(x) & Lempus(x) & Stella(y) & Dumpus(z)) -> (NotNumpus(y) & -Nompus(y) & Dumpus(z)))", "all x y z.((Stella(x) & Lempus(x) & Stella(y) & Numpus(y) & Dumpus(z)) -> (Lempus(x) & -Numpus(y) & Dumpus(z)))", "(all x.(Lempus(x) -> Stella)) & (Numpus(x) -> Stella)) & (Dumpus(x) -> Stella)))", "(all x y.((Stella(x) & Lempus(x)) -> Numpus(x)) & ((Stella(y) & Dumpus(y))))", "all x y z.((Stella(x) & Lempus(x) & Stella(y) & Numpus(z)) -> (-Numpus(y) & Dumpus(z)))", "(all x.(Lempus(x) -> Stella(x)) & all y.(Numpus(y) -> Stella(y))) & all z.(Dumpus(z) -> Stella(z))))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Numpus(x)) & (Stella(x) -> Dumpus(x)))"]}
{"id": "prontoqa_validation_223", "nl": "Stella is not a brimpus.", "fol": "-brimpus(Stella)", "prediction": ["Stella -Brimpus(Stella))", "Stella's & -Brimpus(Stella)", "(-Brimpus(Stella))", "Stella is not Brimpus.", "Stella es a nebula.", "(-Brimpus(Stella))", "Stella -Brimpus(s)", "Stella -Brimpus(s)", "Stella is not a Brimpus(Stella)", "Stella is not a Brimpus.", "Stella is not a Brimpus.", "Stella is -Brimpus(Stella)", "(-Brimpus(Stella))", "-Brimpus(Stella)", "Stella is not a brimpus.", "Stella is -Brimpus(Stella))"]}
{"id": "prontoqa_validation_224", "nl": "Max is a yumpus, Max is a shumpus, and Max is not an impus.", "fol": "(yumpus(Max) & shumpus(Max) & -impus(Max))", "prediction": ["(all x.(Max(x) -> Yampus(x)) & (Max(x) -> Humpus(x)) & (Max(x) -> Issue(x))))", "all x y z.((Max(x) & Yumpus(x) & Humpus(y) & Shumpus(z)) -> (Yumpus(x) | & -Impossible(x)))", "(yumpus(x) | Humpus(x)) & -Ileximator(x))", "all x y.((Max(x) & Yumpy(x)) -> (Shumpus(x) & -Impos(y)))", "(all x.(Max(x) -> Yampus(x)) & (Max(x) -> Humpus(x)) & -Impresario(x)))", "(all x y.((Max(x) & Yumpus(x)) -> Max(x)) & ((Max(y) & Humpus(y)) -> -Impeder(y)))", "(all x.(Max(x) -> Yumpa(x)) & (Max(x) -> Simmopus(x)) & -Issue(x)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Shumpus(x)) & (Max(x) -> -Impossible(x))))", "(all x y.(Max(x) -> Yumpa(x)) & (Max(y) -> Humpus(y)) & (Max(z) -> Erzote(z))))", "all x y z.((Max(x) & Yumpus(y) & Humpus(z)) -> (y) & Shumpus(x) & -Ilise(x)))", "(all x.(Max(x) -> Yompus(x)) & all y.(Max(y) -> Humpus(y)) & all z.(Max(z) -> -Impossible(z))))", "(all x.(Max(x) -> Yammer(x)) & (Max(x) -> Humpus(x)) & (Max(x) -> Induced(x))))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Humpus(y)) & all z.(Max(z) -> -Issue(z))))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Humpus(y)) & all z.(Max(z) -> -Impossible(z))))", "all x.(Max(x) -> (Yumpus(x) & Humpus(x) & -Impossible(x)))", "(all x.(Max(x) -> Yumpa(x)) & (Max(x) -> Shumpus(x)) & (Max(x) -> -Impossible(x))))"]}
{"id": "prontoqa_validation_225", "nl": "Max is not a numpus.", "fol": "-numpus(Max)", "prediction": ["(-numpus(Max)).", "Max, he is not a Numpus(x)", "-Numpus(Max)", "all x.(Max(x) -> -Numpus(x))", "all x.(Max(x) -> -Numpus(x))", "all x.(Max(x) -> -Numpus(x))", "all x.(Max(x) -> -Numpus(x))", "Max & -Numpus(Max)", "-numpus(Max)", "(-numpus(Max))", "Max.(Max) -> -Numpus(Max))", "(-numpus(Max))", "-numpus(max)", "KeenAnupus(Max)", "(-Numpus(Max)", "all x.(Max(x) -> -Numpus(x))"]}
{"id": "prontoqa_validation_226", "nl": "Each vumpus is a brimpus.", "fol": "all x. (vumpus(x) -> brimpus(x))", "prediction": ["all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Crown(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vulmpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "exists x.(Vumpus(x) & Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_validation_227", "nl": "Wren is a jompus, Wren is a tumpus, and Wren is not a brimpus.", "fol": "(jompus(Wren) & tumpus(Wren) & -brimpus(Wren))", "prediction": ["(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y)) & -Brimpus(y)))", "(all x y z.(Snowflake(x) -> Jompus(x)) & (Snowflake(y) -> Tumpus(y)) & (Snowflake(z) -> Brimpus(z)))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y))) & none z.(Wren(z) -> Brimpus(z)))", "all x y z.((Wren(x) & Jompus(x) & Tumpus(y) & Brampus(z)) -> (Jompus(x) | Tumpus(y) & -Brimpus(z)))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Brimpus(x)))", "all x y z.((Wren(x) & Jompus(y) & Tumpus(z)) -> (Jomess(x) & Tumpus(x) & -Brimpus(x)))", "(all x.(Wren(x) -> Jompus(x)) & ((Wren(x) -> Tumpus(x))) & ((Wren(x) -> -Brimpus(x))))", "(all x.(Red(x) -> Jompus(x)) & (Red(x) -> Tumpus(x)) & -Brimpus(x)))", "(all x y z.(Wren(x) -> Jompus(x)) & ((Wren(y) -> Tumpus(y))) & ((Wren(z): -Brimpus(z))) -> Bodumpus(z)))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "(all x y z.(Wren(x) -> Jompus(x)) & (Works(y) -> Tumpus(y)) & ((Works(z) & -Brimpus(z))) -> Moose(x)))", "all x y z.((Wren(x) & Jompus(y) & Tumpus(z)) -> (Crooked(x) & Uncleared(x) & No Brimpus(x)))", "(all x.(Wren(x) -> Jompus(x)) & all y.((Wren(y) & Tumpus(y))) -> -Brumpus(y)))"]}
{"id": "prontoqa_validation_228", "nl": "Each sterpus is a jompus.", "fol": "all x. (sterpus(x) -> jompus(x))", "prediction": ["all x.(Sterpus(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "all x.(Steerpus(x) -> Jompus(x))", "all x.(Steerpus(x) -> Jompus(x))", "all x.(Steerpus(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "all x.(Steerpus(x) -> Jompus(x))", "all x.(Steerpus(x) -> Jompus(x))", "all x.(Steerpus(x) -> Jompus(x))", "all x.(Sterepus(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "all x.(Steerpus(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "all x.(Sterepus(x) -> Jompus(x))"]}
{"id": "prontoqa_validation_229", "nl": "Polly is not a jompus, Polly is a lempus, and Polly is a rompus.", "fol": "(-jompus(Polly) & lempus(Polly) & rompus(Polly))", "prediction": ["(all x.(Polly(x) -> -Jompus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Rompus(x)))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Jompus(x) | Rompus(x)))", "(all x y z.(Plood(x) -> -Jompus(x)) & (Lempus(y) & Rhopus(z)))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Jompus(x) & Lempus(y) & Rompus(z)))", "(all x.(Polly(x) -> -Jompus(x)) & all y.(Polly(y) -> Lempus(y))) & all z.(Polly(z) -> Rompus(z)))", "(all x.(Polly(x) -> -Jompus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Rompus(x)))", "(all x.(Poly(x) -> -Jimpus(x)) & all y.(Poly(y) -> Lempus(y)) & all z.(Poly(z) -> Rompus(z))))", "(all x.(Poly(x) -> -Jompus(x)) & (Poly(x) -> Lempus(x)) & (Poly(x) -> Rompus(x)))", "(all x.(Polly(x) -> -Jompus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Rompus(x)))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Polly(x) & Lempus(x) & Rompus(x)))", "(all x.(Polly(x) -> -Jompus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Rompus(z))))", "(all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> -((Poly(x) & Rompus(y))))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Polly(x) & Lempus(y) & Rompus(z)))", "(all x.(Poly(x) -> -Jempus(x)) & (Poly(x) -> Lempus(x)) & (Poly(x) -> Rompus(x)))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Jompus(x) & Lempus(x) & Rompus(x)))", "(all x.(Polly(x) -> -Jompus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Rompus(x)))"]}
{"id": "prontoqa_validation_230", "nl": "Vumpuses are numpuses.", "fol": "all x. (vumpus(x) -> numpus(x))", "prediction": ["all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpuse(x))", "all x.(Vumpus(x) -> Numpuse(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpuse(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))"]}
{"id": "prontoqa_validation_231", "nl": "Stella is not a numpus, Stella is a shumpus, and Stella is a sterpus.", "fol": "(-numpus(Stella) & shumpus(Stella) & sterpus(Stella))", "prediction": ["(all x y z.((Stella(x) & Nempus(y)) -> -Numpus(x)) & ((Stella(z) & Humpus(z))) -> Sterpus(z)))", "(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) -> Sterpus(y)))", "all x y z.((Stella(x) & Numpus(y) & Scumpus(z)) -> (-Numpus(x) & Shumpus(y) & Sterpus(z)))", "(all x.(Stella(x) -> -Numpus(x)) & (Shumpus(x) & Sterpus(x))))", "(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) -> Sterpus(y)))", "(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) -> -Storpus(y)))", "(all x.(Servant(x) -> -Numpus(x)) & all y.(Servant(y) -> -Shumpus(y))) & (Servant(y) -> Steroshpus(y)))", "(all x.(Stella(x) -> -Nompus(x)) & (Shumpus(x) & Sterpus(x)))", "all x y z.((Stella(x) & Numpus(y) & Humpus(z)) -> (-Numpus(x) & Shumpus(y) & Sterpus(z)))", "(all x y z.((Stella(x) & Numpus(y)) -> -Numpus(x,y)) & ((Stella(z) | Shumpus(z))) & ((Stella(z) & Sterpus(z))) -> -Melodius(z)))", "(all x y z.((Stella(x) & Numpus(y) & Shumpus(z)) -> -Numpus(x)) & ((Stella(x) & Sterpus(x)) -> Osmosis(x)))", "(Understands(Stella) / -Nompus(Stella) | -Shumpus(Stella) & -Sterpus(Stella)))", "all x.(Stella(x) -> (-Nompus(x) & -Shumpus(x) & -Sterepus(x)))", "(all x.(Stella(x) -> ThisNumber(x)) & all y.(Shumpus(y) & Sterpus(y)))", "all x y z.((Stella(x) & Numpus(y) & Humpus(z)) -> (-Numpus(x) & Shumpus(x) & Sterpus(x)))", "(all x y z.((Stella(x) & Numpus(y)) -> -Numpus(x)) & ((Stella(z) & Shumpus(z)) -> Sterpus(z)))"]}
{"id": "prontoqa_validation_232", "nl": "Stella is not a vumpus.", "fol": "-vumpus(Stella)", "prediction": ["all x.((Stella(x) & -Vumpus(x)) -> -IsVumpus(x))", "Stella is not a vumpus.", "Stella is not a vumpus.", "Stella is not a Vumpus.", "(-Vusimpus(Stella))", "all x.(Stella(x) -> -Vumpus(x))", "Stella is not a vumpus.", "Stella is not a Vumpus(Stella)", "Stella, -Vumpus(Stella))", "Stella -Vumpus(s)", "Stella -Vumpus(s)", "Stella is not vumpus.", "Stella -Vumpus(Stella)", "Stella is not a Vumpus(Stella)", "Stella flies a.((Vumpus(f) & -Vumpus(f))", "all x.(Stella(x) -> -Vumpus(x))"]}
{"id": "prontoqa_validation_233", "nl": "Each wumpus is a grimpus.", "fol": "all x. (wumpus(x) -> grimpus(x))", "prediction": ["all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grumpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grumpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))"]}
{"id": "prontoqa_validation_234", "nl": "Polly is a lorpus and Polly is a numpus and Polly is not a grimpus.", "fol": "(lorpus(Polly) & numpus(Polly) & -grimpus(Polly))", "prediction": ["all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & Numpus(x) & -Grimppus(x)))", "all x y z.((Lorpus(x) & Numpus(y) & Polly(z)) -> (Lorpus(x) & Numpus(y) & -Grimpus(z)))", "all x.(Polly(x) -> (Lorpus(x) & Numpus(x) & -Grimpus(x)))", "all x y.((Polly(x) & Lorpus(x) & Numpus(y) & -Grimpus(x)) -> (Lorpus(x) & Numpus(y) & -Polly(x)),)", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & Numpus(z) & -Grimpus(x)))", "(all x.(Polly(x) & Lorpus(x)) & (Poly(x) -> Numpus(x)) | (Polly(x) -> -Spokenpus(x))))", "(all x.(Lorph(x) -> Polly[x)) & all y.(Nompus(y) -> Polly(y))) & all z.(Grimpus(z) -> -Purpus(z)))", "all x y z.((Polly(x) & Lorpus(x) & Numpus(y) & Polly(z)) -> (Lorpus(z) & Numpus(y) & -Grimpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Numpus(x))) & (Polly(x) -> -Grimpus(x)))", "all x.((Polly(x) & Lorpus(x) & Numpus(x)) -> -Grimpus(x))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Numpus(y)) & all z.(Polly(z) -> -Grimpus(z))))", "all x y.((Lady(x) & Polly(y)) -> (Lorpus(x) & Numpus(y) & -Grampus(y)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Numpus(x)) & (Polly(x) -> -Grimpus(x)))", "(all x y.(Lorpus(x) -> Polly)) & (Numpus(y) -> Polly)) & -Slampus(y)))", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z) & -Grimpus(x)) -> (Lorpus(x) & Numpus(y) & -Crumbpus(z)))", "exists x y.((Polly(x) & Wormo (x)) & Numpus(y) & -Grippus(x))"]}
{"id": "prontoqa_validation_235", "nl": "Rex is not a grimpus and Rex is a rompus and Rex is a lorpus.", "fol": "(-grimpus(Rex) & rompus(Rex) & lorpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Grimpus(x)) & (Rompus(x) & Lorpus(x)))", "all x y.((Rex(x) & Grimpus(y)) -> (-Frosty(x) & Rompus(y) & Lorpus(x)))", "all x y z.((Rex(x) & Grumpus(y) & Rompus(z)) -> (-Grimpus(x) | Lorpos(x)))", "(all x.(Rex(x) -> -Grimpus(x)) & (Roompus(x) | Lorpus(x))))", "all x y z.((Rex(x) & Grumpus(y) & Roman(z)) -> (-Grimpus(x) & Rompus(x) & Lordpus(x)))", "(all x.(Rex(x) -> -Smockpus(x)) & (Rompus(x) & Lorpus(x)))", "all x y z.((Rex(x) & Grumpus(y) & Rompus(z)) -> (-Grimpus(x) & Rompus(y) & Lorpus(z)))", "(all x.(Rex(x) -> -Grimpus(x)) & (Rompus(x) -> Lorpus(x)))", "(all x.(Rex(x) -> (-Grimpus(x) & Rompus(x) & Lorpus(x)))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Rompus(y) -> -Lorpus(y))))", "(all x.(Rex(x) -> -Grimpus(x)) & (Rome(x) | Lorpus(x))))", "(all x.(Rex(x) -> -Grimpus(x)) & (Rompus(x) & -Larus(x))))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.((Rompus(y) & Lorpus(y))) -> -Grimpus(y)) & all z.((Rex(z) & Lorpus(z)) -> -Rompus(z)))", "is -Grimpus(Rex) & Romance(Rex) & Lorpus(Rex))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Rompus(y) -> -Rompus(y))) & all z.(Lorpus(z) -> -Lorpus(z)))", "(All x.(Rex(x) -> -Grimpus(x)) & (Rompus(x) & Lorpus(x)))"]}
{"id": "prontoqa_validation_236", "nl": "Every vumpus is a lorpus.", "fol": "all x. (vumpus(x) -> lorpus(x))", "prediction": ["all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lopus(x))", "all x.(Vumpus(x) -> Lorpon(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))"]}
{"id": "prontoqa_validation_237", "nl": "Polly is not a lorpus and Polly is a wumpus and Polly is a grimpus.", "fol": "(-lorpus(Polly) & wumpus(Polly) & grimpus(Polly))", "prediction": ["all x y.((Polly(x) & -Lorpus(x) & Polly(y)) -> (Wumpus(y) & Gruppus(y)))", "(all x.(Polly(x) -> -Lorpus(x)) & all y.(Polly(y) -> Wumpus(y)) & all z.(Smoothpus(z) -> Scarlett(z))))", "All x y z.((Polly(x) & Lorpus(y) & Gloampus(z)) -> (-Lorpus(x) & Wompus(y) & Gruppus(z)))", "(all x.(Lorpus(x) -> -Lorpus(x)) & (Wumpus(x) -> Grosspus(x)))", "(all x.(Polly(x) -> -Lorpus(x)) & (Polly(x) -> Wumpus(x)) & (Polly(x) -> Grimpus(x))))", "(all x y.(Lorph(x) -> -Lorpus(x)) & (Wumpus(y) -> -Lorpus(y))) & (Grimpus(y) -> -Lorpus(x)))", "(all x y.(Lorpus(x) -> -Lorpus(x)) & (Wumpus(y) | Gruppus(y)))", "(all x.(Poltry(x) -> -Lorpus(x)) | (Poltry(x) -> Wumpus(x)) | (Poltry(x) -> Grumpus(x))))", "(all x.(Polly(x) -> -Lorpus(x)) & exists y.(Wumpus(y) & exists z.(Surpus(z) & Polly(z)))))", "all x y.((Polly(x) & -Lorpus(x) & Wormpus(y)) -> (Wumpus(x) & Gruppus(y)))", "all x y z.((Polly(x) & Loper(y) & Wumpus(z)) -> (-Lorpus(x) & Wumpus(y) & Graupus(z)))", "(all x y.((Polly(x) & -Lorpus(x)) -> Female(x)) & ((Polly(y) & Plump(y)) -> Female(y)))", "(all x.(Ploy(x) -> -Larpus(x)) & (Polly(x) -> Humpus(x)) & (Ploy(x) -> Gruppus(x)))", "all x y.((Polly(x) & -Lorpus(x) & Polly(y)) -> (Wumpus(y) & Gruppus(y)))", "all x y.((Lorph(x) & Polly(y)) -> (-Lorph(x) & Wumpus(y) & Grapple(y)))", "all x y z.((Lorpus(x) & Wumpus(y) & Grimpus(z)) -> (-Lorpus(x) & Wampus(y) & Grimpus(z)))"]}
{"id": "prontoqa_validation_238", "nl": "Sally is a tumpus, Sally is not a rompus, and Sally is an impus.", "fol": "(tumpus(Sally) & -rompus(Sally) & impus(Sally))", "prediction": ["(All x.(Sally(x) -> Tumpus(x)) & -Rompus(x) & -Iliosated(x)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> -Rompus(y)) & all z.(Sally(z) -> Imperator(z)))", "(all x.(Tumpus(x) -> Sally)) & (Romex(x) -> Sally)) & (Ilision(x) -> Sally))", "(all x y z.((Sally(x) & Tumpus(y)) -> Tumpus(x)) & ((Sally(z) & -Rompus(z))) -> Irresistant(z)))", "is Tumpus(Sally) & -rompus(Sally) & Impossible(Sally))", "(all x.(Sally(x) -> Tumpus(x)) & (-Rompus(x) & IsPelopone(x))))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x)) & -Illegal(x)))", "(all x y z.(Sally(x) -> Tumpus(x)) & (Sally(y) -> -Rompus(y)) & (Sally(z) -> Imperator(z)))", "(all x.(Sally(x) -> Tumpus(x)) & (-Sally(x) -> Rompus(x)) & (-Sally(x) -> Imperator(x)))", "exists x.(Sally(x) & Tumpus(x) & -Rompus(x) & Isolator(x))", "(all x.(Sally(x) | Tumpus(x))) & (-rompus(x) & Impossible(x))))", "(all x y z.(Sally(x) -> Tongue(x)) & ((Sally(y) & -Rompus(y))) | ((Sally(z) & IIspose(z)))))", "(all x.(Sally(x) -> Tumpus(x)) & (-(Sally(x) & Romain(x))) -> Implicit(x)))", "(all x.(Sally(x) -> Tumpus(x)) & (-Sally(x) -> Rompus(x)) & (-Sally(x) -> Impossible(x)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x)) & (Sally(x) -> Issues(x)))", "all x.(Sally(x) & (Tumpus(x) | Roma(x) | impus(x)))"]}
{"id": "prontoqa_validation_239", "nl": "Each yumpus is a vumpus.", "fol": "all x. (yumpus(x) -> vumpus(x))", "prediction": ["all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vomes(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vuze(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Voompus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "(Vumpus(y) & AwakenedBy(z) & ContainsUmpus(y,Z))"]}
{"id": "prontoqa_validation_240", "nl": "Stella is not a vumpus, Stella is a sterpus, and Stella is a shumpus.", "fol": "(-vumpus(Stella) & sterpus(Stella) & shumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Vumpus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Shumpus(z) -> -Vumpus(y))))", "(all x).(Solva(x) -> -Vumpus(x)) & all y.(Sterpus(y) -> Sterpus(y)) & all z.(Solva(z) -> Humpus(z)))", "(all x.(Stella(x) -> -Vampus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> Humpus(x)))", "all x y z.((Stella(x) & Vumpus(y) & Sterosp(z)) -> (-Vumpus(x) & Sterpus(x) & Humpus(z)))", "(all x.(Stella(x) -> -Vumpus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> Humpus(x)))", "(all x.(Stella(x) -> -Vumpus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Shumpus(z) -> -Vumpus(y)))", "(all x y z.((Stella(x) & Vampire(y)) -> -Vampire(x)) & ((Stella(z) | Ssterpus(z))) -> Humpus(z)))", "(all x.(Stella(x) -> -Vumpus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> Humpus(x)))", "all x y z.((Stella(x) & Sterpus(y) & Humpus(z)) -> (-Vumpus(x) & -Sterpus(y) & -Shumpus(z)))", "(all x.(Stella(x) -> -Vumpus(x)) & (Storpus(x) -> Storpus(x)) & (Shumpus(x) -> -Vumpus(x))))", "all x y z.((Stella(x) & Vumpus(y) & Sterpus(z)) -> (-Vumpus(x) & Sterpus(x) & Humpus(x)))", "all x y z.((Stella(x) & Stella(y) & Sterpus(z)) -> (-Vumpus(x) & Sterpus(y) & Shumpus(z)))", "(noVimpus(Stella) & -IsVimpus(Stella) & -IsSterpus(Stella)) & -IsShumpus(Stella))", "(all x.(Stella(x) -> -Vumpus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> Shumpus(x)))", "all x y z.((Stella(x) & Stella(y) & Sterpus(z)) -> (-Vimpus(x) | Sterpus(y) & Humpus(z)))", "(all x y z.((Stella(x) & Vumpus(y)) -> -(Vumpus(z) | Steerpus(z))) & ((Stella(x) & Humpus(x)) -> Shumpus(x)))"]}
{"id": "prontoqa_validation_241", "nl": "Stella is not a yumpus.", "fol": "-yumpus(Stella)", "prediction": ["all x.(Stella(x) -> -Yumpus(x))", "Stella ist keinYumpus.", "Stella is not Yampus(Stella)", "Stella is not yumpus.", "Stella is not a yumpus.", "Stella \u2013 yumpus(y) -> NoRose(y))", "Stella is not yumpus.", "(LostAlong(Stella) & -Yumpus(Stella))", "Stella ist keinYumpus(Stella)", "(NOTYUMPUS(Stella))", "Stella is notYumpus(Stella) -> -Yumpus(Shadow))", "Stella is notyumpus.", "Stella is not a yumpus.", "Stella is notYumpus.", "(-Yumpus(Stella))", "Stella gibt es keine Yumpus(e)"]}
{"id": "prontoqa_validation_242", "nl": "Lempuses are tumpuses.", "fol": "all x. (lempus(x) -> tumpus(x))", "prediction": ["all x.(Lempuse(x) -> Tume(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumulus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lampuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumulus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumulus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumulus(x))", "all x.(Lupus(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumulus(x))"]}
{"id": "prontoqa_validation_243", "nl": "Alex is a lorpus and Alex is not a tumpus and Alex is an impus.", "fol": "(lorpus(Alex) & -tumpus(Alex) & impus(Alex))", "prediction": ["all x y z.((Alex(x) & Lorpus(y) & Tompus(z)) -> (Lorpus(x) & -Tumpus(y) & Imperator(x)))", "all x y z.((Alex(x) & Lorpus(y) & Tumpus(z)) -> (Lorpus(x) & -Tumpus(z) & Impossible(x)))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Imperemptive(x)))", "all x.(Lorpus(x) & -Tumpus(x) & IsInterpretation(x))", "all x y.((Alex(x) & Lorpus(x) & -Tumpus(y) & Ispos\u00e9(x)) -> Lopsor(x))", "all x.(Alex(x) -> (Radical(x) & Irrigator(x)))", "(all x.(Alex(x)) -> Lorenzo(x)) & all y.(Alex(y) -> -Tumpus(y))) & all z.(Alex(z) -> Imperative(z))))", "exists x.(Alex(x) & Loper(x) & -Tumpus(x) & IsWriter(x))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Impressionist(x)))", "all x y z.((Alex(x) & Lopus(x) & Tumpus(y) & Implicator(z)) -> (Door(x) & -Tompus(y) & Assistant(z)))", "(all x.(Alex(x) -> Lopus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Impossible(x)))", "all x y z.((Alex(x) & Lorpus(x) & Tumpus(y) & Impervus(z)) -> (Lorpus(x) & -Tumpus(y) & Impervus(z)))", "all x y z.((Alex(x) & Lorpus(y) & Tormbus(z)) -> (Lorpus(x) | Impossible(x)))", "all x y z.((Alex(x) & Lorpus(x) & Tumpus(y) & Impermissible(z)) -> (Lorpus(x) & -Tumpus(y) & Impermissible(z)))", "(all x.(Lorpus(x) s/v) & -Tumpus(x) & Imperator(x)))", "all x y.((Alex(x) & Lorpus(x)) -> (Tumpus(y) & Is(x,y)))"]}
{"id": "prontoqa_validation_244", "nl": "Alex is not a lempus.", "fol": "-lempus(Alex)", "prediction": ["Alex & -Lempus(Alex)", "all x.(Alex(x) -> -Limpus(x))", "all x.(Alex(x) -> -Lempus(x))", "has been a lempus.", "all x.(Alex(x) -> -Lumpus(x))", "Alex is not a lempus.", "all x.(Alex(x) -> -Lempus(x))", "all x.(Alex(x) -> -Lempus(x))", "-Lempus(Alex)", "Alex is not a lempus.", "Alex (nolempus(Alex))", "Alex, -lempus(Alex)).", "all x.(Alex(x) -> -Lempus(x))", "all x.(Alex(x) -> -Lempus(x))", "all x.(Alex(x) -> -Lempus(x))", "Alex is not a lempus."]}
{"id": "prontoqa_validation_245", "nl": "Every jompus is a grimpus.", "fol": "all x. (jompus(x) -> grimpus(x))", "prediction": ["all x.(Jompus(x) -> Grimpus(x))", "all x.(Jomess(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jimpus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jomespus(x) -> Gruppus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jomess(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))"]}
{"id": "prontoqa_validation_246", "nl": "Wren is a vumpus, Wren is not a grimpus, and Wren is a yumpus.", "fol": "(vumpus(Wren) & -grimpus(Wren) & yumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Vampus(x)) & all y.((Wren(y) & -Grimpus(y)) -> Yumpus(y)))", "(all x.(Wren(x) -> Vumpus(x)) & (-Wren(x) -> Grimpus(x)) & (Yumpus(x) -> Wumpus(x)))", "(all x.(Wren(x) -> Vumpus(x)) & (-Fragpus(x) & -Yumpus(x))))", "(all x.(Wren(x) -> Vampire(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> Yumpus(z)))", "(all x y z.(Wren(x) -> (Vumpus(x) | Grimpus(y)) | Yumpus(z)))", "(all x.(Wren(x) -> Vumpus(x)) & all y.(Wren(y) -> -Grimpus(y)) & all z.(Wren(z) -> Yumpus(z))))", "(all x.(Wren(x) -> Vulpis(x)) & (-(Wren(x) & Grimpus(x))) -> Yampus(x)))", "(all x.(Wren(x) -> Vumpus(x)) & (-Grimpus(x) | (-Grimpus(x) & Humpus(x)))))", "all x y z.((Wren(x) & Muggs(y) & Gruppus(z)) -> (Vumpus(x) | (-Brumpus(x) & Grumpy(x)) & (Yumpus(y) & Muggs(y))))", "(all x.(Ronan(x) -> Vumpus(x)) & (Ronan(x) -> -Grimpus(x)) & (Ronan(x) -> Yumpus(x)))", "all x y z.((Wren(x) & Vumpus(y) & Crompus(z)) -> (Luxus(x) | NotGrimpus(x) | Yumpus(x)))", "(all x.(Wren(x) -> Vumpus(x)) & (-Gruppus(x) & Yumpus(x)))", "(all x.(Wren(x) ->Vumpus(x)) & (-Wren(x) -> Grimpus(x)) & (-Wren(x) -> Yumpus(x)))", "all x.((Wren(x) & Volumpus(x)) -> -Grimpus(x) & Yempus(x))", "(all x.(Wren(x) -> Vumpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> Yumpus(z)))", "(all x.(Wren(x) -> Vumpus(x)) & (-Fragpus(x) & -Yumpus(x))))"]}
{"id": "prontoqa_validation_247", "nl": "Wren is not a jompus.", "fol": "-jompus(Wren)", "prediction": ["all x.(Wren(x) -> -Jompus(x))", "all x.(Wren(x) -> -Jompus(x))", "-Jampus(Wren)", "(-Jomessian(Wren))", "all x.(Wren(x) -> -Jumpus(x))", "(-Jumpus(Wren) & -Jompus(Wren))", "is -Jompus(Wren)", "(-Jampus(Wren))", "all x.(Wren(x) -> -Jomessian(x))", "all x.(Wren(x) -> -Jompus(x))", "is a jompus(wren)", "all x.(Wren(x) -> -Jompus(x))", "(-SameJimpus(Wren)", "(-Jompus(Wren))", "all x.(Wren(x) -> -Jompus(x))", "-Jompus(Wren)"]}
{"id": "prontoqa_validation_248", "nl": "Yumpuses are dumpuses.", "fol": "all x. (yumpus(x) -> dumpus(x))", "prediction": ["all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "(Dupuse(y) & Humpback(y))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpuse(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))"]}
{"id": "prontoqa_validation_249", "nl": "Sam is not a dumpus and Sam is a rompus and Sam is a zumpus.", "fol": "(-dumpus(Sam) & rompus(Sam) & zumpus(Sam))", "prediction": ["(all x.((Sam(x) & -Dumpus(x)) -> Rompus(x)) & all y.((Sam(y) & Zumpus(y)) -> Dumpus(y)))", "(all x.(Sam(x) & -Dumus(x)) & (Rompus(x) | Zumpus(x)))", "(all x.(Sam(x) -> -Dumpus(x)) & (Rompus(x) | Zumpus(x)))", "(all x.(Sam(x) -> -Dumpus(x)) & (Rompus(x) & Zumpus(x)))", "(all x.(Peet(x) -> -Dumus(x)) & all y.(Rome(y) -> Zumpus(y)))", "(all x.(Sam(x) -> -Dumus(x)) & all y.(Rompus(y) -> Zumpus(y)))", "(all x y z.((Sam(x) & Dumpus(y)) -> -Dumpus(x)) & ((Sam(x) & Rome(z)) -> Zumpus(x)))", "all x y z.((Sam(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & -Rompus(y) & -Zumpus(z)))", "(all x.(Sam(x) -> -Dumpus(x)) & (Sam(x) -> Rompus(x)) & (Sam(x) -> Zumpus(x)))", "(all x.(Sam(x) -> -Dumpus(x)) & (Rompus(x) | Zumpus(x))))", "all x y z.((Sam(x) & Dumpus(y) & Rombus(z)) -> (-Dumpus(x) & Rompus(y) & Zumpus(z)))", "all x y z.((Sam(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & Rompus(z) & Zumpus(z)))", "(all x.((Sam(x) & -Dumpus(x)) -> Rompus(x)) & ((Sam(x) & Zumpus(x)) -> Dumpus(x)))", "(all x.(Sam(x) -> -Dumpus(x)) & (Rompus(x) & Zumpus(x)))", "all x y z.((Sam(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & Zumpus(x)))", "(all x.(Sam(x) -> -Dumus(x)) & ((Sam(x) & Rompus(x)) & ((Sam(x) & Zumpus(x))) -> -Dumpus(x)))"]}
{"id": "prontoqa_validation_250", "nl": "Sam is not a yumpus.", "fol": "-yumpus(Sam)", "prediction": ["Sam is -Yumpus(sam)", "(yumpus)", "(-Yumpus(Sam))", "all x.(Sam(x) -> -Yumpus(x))", "all x.(Sam(x) -> -Yumpus(x))", "all x.(Yumpus(x) -> -Yumpus(x))", "all x.(Yumpus(x) -> -Yumpus(x))", "(-Yumpus(Sam))", "(Yumpus(Sam) & -Yumpus(Sam))", "Sam is notyumpus.", "-yumpus(Sam)", "(-Yumpus(Sam))", "-Yumpus(sam)", "(-Yumpus(Sam))", "all x.(Yumpus(x) -> -Yumpus(x))", "all x.(Sam(x) -> -Yumpus(x))"]}
{"id": "prontoqa_validation_251", "nl": "Grimpuses are tumpuses.", "fol": "all x. (grimpus(x) -> tumpus(x))", "prediction": ["all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Gruppuse(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumulus(x))", "all x.(Grimpus(x) -> Tumulus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Gruppus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumulus(x))", "all x.(Grimmes(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_252", "nl": "Max is not a tumpus, Max is a brimpus, and Max is a rompus.", "fol": "(-tumpus(Max) & brimpus(Max) & rompus(Max))", "prediction": ["(all x.(Max(x) -> -Tumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Rompus(x)))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Rompus(z))))", "(NotTumpus(Max) | (Brimpus(Max) & Rompus(Max))))", "all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> (-Tumpus(x) & Brimpus(y) & Rompus(z)))", "(all x.(Matt(x) -> -Tumpus(x)) & all y.(Brimpus(y) -> Brimpus(y))) & all z.(Rompus(z) -> Rimpus(z)))", "(all x.(MrMax(x) -> -Tumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Rompus(x)))", "(exists x.(Max(x) & -Tumpus(x)) & exists y.(Brimpus(y) & -Tumpus(y))) & exists z.(Max(z) & Rompus(z))))", "all x.(Max(x) -> (-Tumpus(x) & -Brumpus(x) & -Rompus(x)))", "(all x y z.((Max(x) & Tumpus(y)) -> -Tumpus(x)) & ((Max(z) -> Brimpus(z))) & ((Max(z) & Rompus(z)) -> Rompus(z)))", "(all x.(Max(x) -> -Tumpus(x)) & (Kim(x) -> Brimpus(x)) & (Rompus(x))))", "(all x.(Max,tumpus) -> -Tumpus(x)) & (Max,brimpus) -> Rompus(x)))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Rompus(z))))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Rompus(z))))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Brimpus(y) & -Tumpus(y)) & all z.(Max(z) -> Rompus(z))))", "(all x.(Max(x) -> -Tumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Rompus(x)))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Rompus(z))))"]}
{"id": "prontoqa_validation_253", "nl": "Max is not a grimpus.", "fol": "-grimpus(Max)", "prediction": ["-Grimpus(Max)", "-Grimpus(Max)", "Max is notGrisp(Max)", "Max is notGrimpus(Max)", "Max is not a Grimpus.", "-Grimpus(Max)", "Max is notGrisp(Max)", "-Grimpus(Max)", "(-Grimpus(Max))", "all x.(Max(x) -> -Grimpus(x))", "all x.(Max(x) -> -Grimpus(x))", "all x.(Max(x) -> -Grimpus(x))", "all x.(Max(x) -> -Gripper(x))", "\u2013Grimpus(Max))", "(-Grimpus(Max))", "-Grimpus(Max)"]}
{"id": "prontoqa_validation_254", "nl": "Fae is a grimpus, Fae is not a rompus, and Fae is a jompus.", "fol": "(grimpus(Fae) & -rompus(Fae) & jompus(Fae))", "prediction": ["all x y z.((Fae(x) & Grimpus(x) & -Rompus(y) & Jompus(z)) -> (Fae(x) | Fae(x) & Jompus(x)))", "all x y z.((Fae(x) & Grimpus(y) & -Rompus(z)) -> (Cruce(x) & Jompus(x)))", "all x.((Fae(x) & Grimpus(x)) -> (-Rompus(x) & Jompus(x)))", "(all x.(Fae(x) -> Grumpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))", "all x y z.((Fae(x) & Grimpus(y) & -Rompus(z)) -> (Screen(x) | Jompus(x) & -Rompus(y)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> -Rompus(y))) & all z.(Fae(z) -> Jompus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))", "all x y z.((Fae(x) & Grompus(y) & Roman(z)) -> (Schrompus(x) & -Rompus(y) & Jompus(z)))", "(all x y z.(Fae(x) -> Grimpus(x)) & (Fae(y) -> -Rompus(y)) & (Fae(z) -> Jompus(z)))", "(all x y.(Fae(x) -> Gruppus(x)) & (Rompus(y) | Jompus(y))))", "(all x y z.(Fae(x) -> (Grimpus(x) | Rimpus(y))) & (Fae(z) -> (Jimpus(z)))))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))", "(all x.(Fae(x) -> Grrubus(x)) & all y.(Fae(y) -> -Rompus(y)) & all z.(Fae(z) -> Jompus(z))))", "all x y.((Fae(x) & Grimpus(x)) -> (-Rompus(x) & Jompus(y)))", "exists x y z.(Fae(x) & Grimpus(x) & Fae(y) & -Rompus(y) & Joompus(z))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> -Rompus(y)) & all z.(Fae(z) -> Jompus(z))))"]}
{"id": "prontoqa_validation_255", "nl": "Fae is not a gorpus.", "fol": "-gorpus(Fae)", "prediction": ["All x.(Fae(x) -> -Gorpus(x))", "(Gorpus(Fae) & -Gorpus(Fae))", "is a Gorpus(Fae)", "(-Gorpus(Fae))", "-Ornithopus(Fae)", "(-Gorpus(Fae))", "also is not gorpus.", "all x.(Fae(x) -> -Gorpus(x))", "(-Gorpus(Fae)", "Fare is -Gorpus(Fae)", "(DoubleGorpus(Fae)", "-Gorpus(Fae)", "the Fife(Fae) & -Gorpus(Fae))", "-Gorpus(Fae)", "and exists x.(Fae(x) & -Gorpus(x))", "-Orrpus(Fae)"]}
{"id": "prontoqa_validation_256", "nl": "Gorpuses are tumpuses.", "fol": "all x. (gorpus(x) -> tumpus(x))", "prediction": ["all x.(Gorpuse(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumulus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumulus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_257", "nl": "Fae is a vumpus and Fae is not a tumpus and Fae is a sterpus.", "fol": "(vumpus(Fae) & -tumpus(Fae) & sterpus(Fae))", "prediction": ["all x y z.((Fae(x) & V\u0103mpus(x) & Fae(y) & Tumpus(z)) -> -Tumpus(y) & Sterpus(z))", "(all x y.(Fae(x) -> (Vumpus(x) & -Tumpus(x))) & (Fae(y) -> (Sterepus(y))))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Toumpus(x)) & (Fae(x) -> Sterpus(x)))", "all x y z.((Fae(x) & Fae(y) & Sterpus(z)) -> (Vumpus(x) | -Tumpus(y) | Sterpus(z)))", "(all x y z.((Fae(x) & Vampire(y) & Tumpus(z)) -> Vampire(x)) & ((Fae(x) & -Tumpus(x)) -> Sterpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Sterpus(x)))", "(all x.(Fae(x) -> VFompus(x)) & all y.(Fae(y) -> -Tumpus(y)) & all z.(Fae(z) -> Sterepus(z))))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> -Tumpus(y))) & all z.(Fae(z) -> Sterpus(z)))", "all x y.((Fae(x) & Fae(y)) -> (Vumpus(x) & -Tumpus(y) & Sterpus(y)))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> -Tumpus(y)) & all z.(Fae(z) -> Sterpus(z))))", "(all x.(Fae(x) -> (Vumpus(x) & -Tumpus(x) & Sterpus(x)))", "(all x y z.((Fae(x) & Vumpus(y)) -> ((Vulp & -Tumpus(z)) | (Sterpus(x) & Fae(y)))))", "(all x.(Fae (x) -> Vumpus(x)) & (Fae(x) -> -Tompus(x)) & (Fae(x) -> Sterepus(x)))", "((Vampus(Fae) & -Tumpus(Fae)) -> Sterpus(Fae))", "(all x.(Faith(x) -> Vumpus(x)) & (Faith(x) -> -Tumpus(x)) | (Faith(x) -> Sterpus(x))))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) | -Tumpus(x))) & (Fae(x) -> Sterpus(x)))"]}
{"id": "prontoqa_validation_258", "nl": "Every yumpus is a shumpus.", "fol": "all x. (yumpus(x) -> shumpus(x))", "prediction": ["all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpback(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Sushi(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "exists x.(Yumpus(x) & Shumpus(x))", "all x.(Yumpus(x) -> Humpus(x))"]}
{"id": "prontoqa_validation_259", "nl": "Wren is not a shumpus and Wren is a lorpus and Wren is a grimpus.", "fol": "(-shumpus(Wren) & lorpus(Wren) & grimpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Shumpus(x)) & (Lorpus(x) -> Hornpus(x)))", "(all x.(Wren(x) -> -Shumpus(x)) & ((Wren(x) & Lorpus(x))) | (-Shumpus(x) & Grimpus(x)))))", "all x y z.((Wren(x) & Sushi(y) & Lord(z)) -> (-Shumpus(x) & Grimpus(x)))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.(Wren(y) -> Lorpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.(Wren(y) -> Lorpus(y))) & all z.(Wren(z) -> Grimpus(z))))", "all x y z.((Wren(x) & Shumpus(y) & Lorpus(z)) -> (-Shumpus(x) & Drurpus(x) & Grimpus(x)))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.(Lorpus(y) & Grimpus(y))))", "all x y.((Wren(x) & Wren(y)) -> (-Shumpus(x) & Lordpus(y) & Grimpus(y)))", "all x.((Wren(x) & -Shumpus(x)) -> (Lorpus(x) & Grupus(x)))", "all x y z.((Wren(x) & Shumpus(y) & Lorpus(z)) -> (-Shumpus(x) & Florus(x) & Grimpus(x)))", "(all x.(Wren(x) -> -Shumpus(x)) & ((Wren(x) & Lorpus(x)) -> Grimpus(x)))", "all x y z.((Wren(x) & Shumpus(y) & Lorpus(z) & Gruppus(z)) -> (-Shumpus(x) & Lorpus(x) & Smoky(x)))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.(Wren(y) -> Livestock(y))) & all z.(Wren(z) -> (Lorpus(z) & Grimpus(z))))", "(all x.(Wren(x) -> -Shumpus(x)) & (Wren(x) -> Lordpus(x)) & (Wren(x) -> Grimpus(x)))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.(Lorpus(y) -> Grumpus(y)))", "(exists x.(Wren(x) & -Shumpus(x))) & exists y.(Lorpus(y) & -Smoker(y)))"]}
{"id": "prontoqa_validation_260", "nl": "Each dumpus is an impus.", "fol": "all x. (dumpus(x) -> impus(x))", "prediction": ["all x.(Dumpus(x) -> Impedient(x))", "all x.(Dumpus(x) -> Impermant(x))", "all x.(Dumpus(x) -> IsImpossible(x))", "all x.(Dumpus(x) -> Impossible(x))", "all x.(Dumpus(x) -> Imperempt(x))", "everydumpus.", "all x.(Dumpus(x) -> IsOffense(x))", "all x.(Dumpus(x) -> IsSolvected(x))", "all x.(Dumpus(x) -> Implient(x))", "all x.(DUmpUS(x) -> Isolated(x))", "all x.(Dumpus(x) -> Impossible(x))", "exists x.(Dumpus(x) & Is(x,impossible))", "all x.(Dumpus(x) -> Idiom(x))", "all x.(Dumpus(x) -> IsImprovised(x))", "all x.(Dumpus(x) -> Impossible(x))", "all x.(Dumpus(x) -> Impossible(x))"]}
{"id": "prontoqa_validation_261", "nl": "Rex is not an impus and Rex is a sterpus and Rex is a yumpus.", "fol": "(-impus(Rex) & sterpus(Rex) & yumpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Impossible(x)) & (Rex(x) -> Sterpus(x)) & (Rex(x) -> Yumpus(x)))", "(all x.(Rex(x) -> -Imperial(x)) & (Sterepus(x) -> Sterpus(x)) & (Yumpus(x) -> Yampus(x)))", "(all x.(Rex(x) -> -Impress(x)) & ((Rex(x) & Sterpus(x)) -> Yumpa(x)))", "(all x.(Rex(x) -> -Impossed(x)) & (Sterpus(x) | Yampus(x))))", "(all x.(Rex(x) -> -Impossible(x)) & (Rex(x) -> Sterus(x)) & (Rex(x) -> Yumps(x)))", "(all x.(Rex(x) -> -Impossible(x)) & all y.(Sterpus(y) -> Yumpus(y)))", "all x y.((Rex(x) & -Impossible(x)) -> (-Sterepus(x) & -Yumpus(y)))", "all x y.((Rex(x) & -Impossible(x) & Sterpus(y) & Yumpus(x)) -> -Impossible(x))", "(-Impossible(Rex) & Sterpus(Rex) & Yumpus(Rex))", "(all x y.((Rex(x) & IsIsIs(x,y)) -> -Impossible(x)) & ((Rex(y) & Sterpus(y)) -> Yompus(y)))", "(all x.(Rex(x) -> -Impossible(x)) & ((Rex(x) & Sterpus(x)) -> Yumps(x)))", "(all x.(Rex(x) -> -Issue(x)) & all y.(Rex(y) -> Sterpus(y)) & all z.(Rex(z) -> Yuppos(z))))", "(all x y z.(Rex(x) -> -Impossible(x)) & ((Berry(y) | Rex(z))) -> Sterpus(x)) & ((Berry(y) & Rex(x)) -> Yumpus(y)))", "(all x.(Rex(x) -> -Issue(x)) & ((Richard(x) & Sterpus(x)) | (Richard(x) & Yumpus(x)))))", "all x y z.((Rex(x) & Sterpus(y) & Yumpus(z)) -> (-Impossible(x) & -Sterpus(y) & -Oppressed(z)))", "exists x.(Rex(x) & -Impossible(x) & exists y.(Sterpus(y) & Is(x,y))))"]}
{"id": "prontoqa_validation_262", "nl": "Everything that is an impus, a vumpus, or a rompus is a wumpus, a lorpus, and a yumpus.", "fol": "all x. ((impus(x) | vumpus(x) | rompus(x)) -> (wumpus(x) & lorpus(x) & yumpus(x)))", "prediction": ["all x.((Issue(x) | IsVumpus(x) | IsRompus(x)) -> (Wumpus(x) & Lorpus(x) & Yumpus(x)))", "all x.((Ideas(x) | Volumex(x) | Rompus(x)) -> (Wumpus(x) | Loupus(x) | Yampus(x)))", "all x.((Impos(x) | Vimpus(x) | Rompus(x)) -> (Wumpus(x) & Lorpus(x) & Yumpus(x)))", "all x.((Impos(x) | Vumpus(x) | Rumpus(x)) -> (Wumpus(x) & Yumpus(x)))", "all x.((Impos,Vumpus,Rompus,Wumpus) | Lopus,Yumpus)) -> (Imposer,Vumpus,Yumpus) & Lumpus(X) & Yeumpus(x)))", "all x.((Impos(x) | Vampus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x.((Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumus(x)))", "all x.((Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lordpus(x) | Yumpus(x)))", "all x.((Issue(x) | IsVumpus(x) | IsRompus(x)) -> (Wumpus(x) | Lordpus(x) | Yumpus(x)))", "all x.((Isolated(x) | UsedByVoompus(x) | UsedByRompus(x)) -> (Wumpus(x) | Lorpus(x) | Yampus(x)))", "all x.((Impose(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yampus(x)))", "all x.((Impose(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lordpus(x) | Yumpu(x)))", "all x.((Wumpus(x) | Lorepus(x) | Yumpus(x)) -> (Imperfect(x) | Kumpus(x) | Rompus(x)))", "all x.((Obsolete(x) | Viola(x) | Rompus(x)) -> (Wumpus(x) | Lordpus(x) | Yumpus(x)))", "all x.((Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yampus(x)))", "all x.((Impose(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yampus(x)))"]}
{"id": "prontoqa_validation_263", "nl": "Polly is a rompus.", "fol": "rompus(Polly)", "prediction": ["ALL x.(Polby(x) -> Rompus(x))", "Polly is a rompus.", "all x.(Rompus(x) -> Polly(x))", "all x.((Polly(x) & Rompus(x)) -> BornIn(x,y))", "all x.(Polly(x) -> Rompus(x))", "Polly (rompus)", "all x.(Polly(x) -> Rompus(x))", "all x.(Polly(x) -> Rompus(x))", "all x.(Polly(x) -> Rompus(x))", "all x.(Polly(x) -> Rompus(x))", "all x.(Polly(x) -> Rompus(x))", "(Rrompus(Polly))", "Polly is a rompus.", "(Rompus(Polly) & Asexual(Polly))", "(Rompus(Poly) & Float(Poly))", "Polly is rompus."]}
{"id": "prontoqa_validation_264", "nl": "Polly is a lorpus.", "fol": "lorpus(Polly)", "prediction": ["all x.(Llorpus(x) -> Polly(x))", "all x.(Lorph(x) -> Polly(x))", "(Lorpus(Polly) -> Stairs(Polly,4))", "Polly (lorpous)", "all x.(Lorph(x) -> Polly(x))", "all x.(Lorph(x) -> Polly(x))", "Polly is a lorpus.", "(Lorpes(Polly) & (Lorpes(Polly) | Llorpus(Poly)))", "All x.(Polly(x) -> Lorpus(x))", "all x.((Polly(x) & Lorpus(x)) -> Polly(x))", "all x.(Polly(x) -> Lorpus(x))", "Polly is a Llorpus.", "all x.(Spoon(x) -> Polly(x))", "all x.(Polly(x) -> Llorpus(x))", "(Lorpus(poly) & FlyingHand(poly))", "all x.(Lorpus(x) -> Polly(x))"]}
{"id": "prontoqa_validation_265", "nl": "Everything that is a jompus or a gorpus or a yumpus is a grimpus and a dumpus and a rompus.", "fol": "all x. ((jompus(x) | gorpus(x) | yumpus(x)) -> (grimpus(x) & dumpus(x) & rompus(x)))", "prediction": ["all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (LittlePiss(x) & BigPiss(x) & LargePiss(x) & SmallPiss(x)))", "all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jempus(x) | Gorpus(x) | Yampus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Kamera(x) | Gorpus(x) | Yampus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Joompus(x) | Gorpus(x) | Yumpus(x)) -> (Grampus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Smashpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yaumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Worpus(x) | Yumanpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yumppus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Dorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((WholePlant(x) & (Jompus(x) | Gorpus(x) | Yumpus(x))) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.(CrazySmoothpus(x) & Grimpus(x) & Dumpus(x) & Rompus(x))", "all x.((Element(x) & (Jompus(x) | Gorpus(x) | Yampus(x))) -> (Smockpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jimpus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((HeadsMoppus(x) | HeadsGorpus(x) | HeadsYumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))"]}
{"id": "prontoqa_validation_266", "nl": "Polly is a yumpus.", "fol": "yumpus(Polly)", "prediction": ["Polly is Yampus(Polly)", "all x.(Nose(x) -> Yampus(x))", "Polly is a yumpus.", "(Yumpus(Polly)", "Polly is yumpus.", "all x.((Polly(x) & Yumpus(x)) -> Has(x,y))", "Lucy(polly) -> Yampa(polly))", "(Yumpus(Polly) & LivesIn(Plovery))", "all x.((Polly(x) & Yumpsum(x)) -> Yampus(x))", "Polly is yumpus.", "(Yumpus(Polly) -> DoesTreat(Polly))", "Polly (yumpus)", "Polly is yumpus.", "all x.((Polly(x) & Yumpus(x)) -> Has(x,y))", "all x.(Polly(x) -> Yumpus(x))", "(Yumpus(Polly) & GrowsIn(Polly,Is))"]}
{"id": "prontoqa_validation_267", "nl": "Everything that is a lorpus, a numpus, or a wumpus is a gorpus.", "fol": "all x. ((lorpus(x) | numpus(x) | wumpus(x)) -> gorpus(x))", "prediction": ["all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Gorpus(x) & OrnamentsLorpus(x) & OrnamentsNumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Skyboard(x) & (Lorpus(x) | Numpus(x) | Wumpus(x))) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lepsus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Larpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))"]}
{"id": "prontoqa_validation_268", "nl": "Sally is a lorpus and a dumpus and a rompus.", "fol": "(lorpus(Sally) & dumpus(Sally) & rompus(Sally))", "prediction": ["Sally (Lorpus) & Dumpus(Sally) & Rompus(Sally))", "(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))", "all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Romepus(x)))", "Sally (Lorpus(Sally) | Dumpus(Sally) | Rompus(Sally))", "(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))", "all x y z.((Sally(x) & Llorpus(y) & Dumpus(z) & ROMpus(x)) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))", "Sally is a lorpus, a rompus, a dumpus, a lorpus and a rompus.", "all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "(Lorph(Sally) & Dumpus(Sally) & Rompus(Sally))", "(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))", "(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))"]}
{"id": "prontoqa_validation_269", "nl": "Sally is a gorpus.", "fol": "gorpus(Sally)", "prediction": ["Sally is Gorpus.", "all x.(Sally(x) -> Gorpus(x))", "Sally is gorpus.", "Sally is a Gorpus.", "Sally is gorpus.", "Sally is Gorpus(Sally)", "All x.(Sally(x) -> Gorpus(x))", "All x.(Sally(x) -> Gorpus(x))", "Sally (Gorpus)", "Sally ist Gorpus.", "Sally is Gorpus(Sally)", "Sally is Gorpus.", "Sally is Gorpus.", "Sally is Gorpus.", "(Gorpus(Sally) | Gorpus(Sally)))", "all x.(Gorpus(x) -> Sally(x))"]}
{"id": "prontoqa_validation_270", "nl": "Brimpuses are lempuses and zumpuses and grimpuses.", "fol": "all x. (brimpus(x) -> (lempus(x) & zumpus(x) & grimpus(x)))", "prediction": ["all x.(Brompus(x) -> (Lempuse(x) | Zumpus(x) | Grimpuse(x)))", "all x y z.((Brabuse(x) & Lempuse(y) & Zumpuse(z)) -> (Ashlita(x,z) & Grimpuses(x)))", "all x.(Brimpus(x) -> (Lempuse(x) | Zumpuse(x) | Gruppuse(x)))", "all x.(Brimpus(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "all x y.((Brimpus(x) & Lampuse(y) & Zumpuse(y) & Grimpuse(y)) -> (Lempuse(x) | Grimpuse(y)))", "all x.(Brimpuse(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "all x.(Brimpus(x) -> (Lempuse(x) & Zumpuse(x) & Grimpuse(x)))", "all x.(Brimis(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "all x.(Brimbus(x) -> (Lempuse(x) & Zumpuse(x) & Grimpuse(x)))", "all x.(Brempus(x) -> (Lempuse(x) | Zumpus(x) | Grimpuse(x)))", "all x.(Brimpus(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "all x.(Brimbus(x) -> (Limpus(x) | Zumpus(x) | Gruppus(x)))", "all x.(Brimpus(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "all x.((Brompus(x) & Lempuse(x)) | (Tompus(x) & Grimpuse(x))))", "all x.(Brompus(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "all x.(Brompus(x) -> (Lempuse(x) | Zumpus(x) | Grimpuse(x)))"]}
{"id": "prontoqa_validation_271", "nl": "Wren is a brimpus.", "fol": "brimpus(Wren)", "prediction": ["all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "(Brimpus(Wren) -> KnownFor(Wren,x))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "(Brumpus(Wren) & BornIn(Wren,A))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))"]}
{"id": "prontoqa_validation_272", "nl": "Wren is a dumpus or a vumpus or a grimpus.", "fol": "(dumpus(Wren) | vumpus(Wren) | grimpus(Wren))", "prediction": ["all x.(Wren(x) -> (Dumpus(x) | Vummpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "(exists x.(Wren(x) & Dumpus(x)) | exists y.(Vumpus(y) | Grimpus(y))))", "all x.(Wren(x) -> (Dumpus(x) | Voompus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (IsDumpus(x) | IsVumpus(x) | IsGripper(x)))", "all x.(Wren(x) -> ((Dumus(x) | Vumpus(x) | Grimpus(x))))", "all x.(Wren(x) -> (Dumpus(x) | Voompus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vupus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumus(x) | (Vumpus(x) | Gruppus(x))))", "(Spoken(Wren) & (IsDumpus(Wren) | IsVumpus(Wren) | IsGrimpus(Wren)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Tumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vampus(x) | Grimpus(x)))"]}
{"id": "prontoqa_validation_273", "nl": "Each impus is a yumpus.", "fol": "all x. (impus(x) -> yumpus(x))", "prediction": ["all x.(Impact(x) -> Yampus(x))", "all x.(Impossible(x) -> Yumpus(x))", "all x.(Immis(x) -> Yumps(x))", "all x.(Issue(x) -> Yampus(x))", "all x.(Issue(x) -> Yumpus(x))", "all x.(Idemplosion(x) -> Yumpsum(x))", "all x.(Impact(x) -> Yumpus(x))", "all x.(Impossible(x) -> Yumpus(x))", "all x.(Impossible(x) -> Yumpus(x))", "all x.(Improvement(x) -> Yumpus(x))", "all x.(Impossible(x) -> Yumpa(x))", "all x.(Imploss(x) -> Yampus(x))", "all x.(Impossible(x) -> Yangshut(x))", "all x.(Impossible(x) -> Yampus(x))", "all x.(Impossible(x) -> Yumbo(x))", "all x.(Impossible(x) -> Yumpus(x))"]}
{"id": "prontoqa_validation_274", "nl": "Sally is a dumpus, Sally is not a yumpus, and Sally is a brimpus.", "fol": "(dumpus(Sally) & -yumpus(Sally) & brimpus(Sally))", "prediction": ["(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Yumpus(x)) & (Sally(x) -> Brimpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Yumpus(x)) & (Sally(x) -> Brimpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Yumpus(x)) & (Sally(x) -> Brimpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Yumpus(x)) & (Sally(x) -> Brimpus(x))))", "(all x.(Sally(x) -> Dumpus(x)) & (AsYumpus(x) | Brimpus(x))))", "(all x.(Sally(x) -> Dumpus(x)) & (-Yumpus(x) & -Brimpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Yumpus(x)) & (Sally(x) -> Brimpus(x)))", "(all x y z.(Sally(x) -> Dump(x)) & ((Sally(y) & -Yumpus(y)) -> Brimpus(z)))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Yumpus(x)) & (Sheryl(x) -> Brimpus(x))))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Yumpus(x)) & (Sally(x) -> Brimpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Yumpus(x)) & (Sally(x) -> Brimpus(x)))", "(all x y z.(Sally(x) -> Dumpus(x)) & (-Yumpus(y) & -Brimpus(z)))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Sally(y) -> -Yumpus(y)) & all z.(Sally(z) -> Brimpus(z))))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Yumpus(x)) & (Sally(x) -> Brimpus(x)))", "all x y z.((Sally(x) & Dumpus(x) & -Yumpus(y) & Brimpus(z)) -> (Dempus(x) & Brimpus(z)))", "all x.(Sally(x) -> (Dumpus(x) & -Yumpus(x) & Brumpus(x)))"]}
{"id": "prontoqa_validation_275", "nl": "Sally is a yumpus, Sally is not an impus, or Sally is an impus.", "fol": "(yumpus(Sally) | -impus(Sally) | impus(Sally))", "prediction": ["(all x.(Sally(x) -> Yumpus(x)) | (-Sally(x) & Impossible(x))))", "all x.(Sally(x) -> (Yumpus(x) | Illegal(x) | Impeccable(x)))", "all x.((Sally(x) & Yampus(x)) | (-Impossible(x) | Impossible(x))))", "all x.(Sally(x) -> (Yumpus(x) | -Impossible(x) | Impossible(x)))", "all x.((Sally(x) & Yumpe(x)) | (-Imperfectionist(x) | Imperative(x))))", "(yumpus(s) | (-yumpus(s) & Sally(c))))", "all x.((Sally(x) & Yumpa(x)) | (-Impossible(x) | Impossible(x))))", "(yumpus(s) | -Impuns(s) | Impuns(s)))", "all x y.((Sally(x) & Yampus(x)) | (-Impromisatio(x) | Impromisatio(x))))", "(yumpus(x) | (-isImpos(y) | Impossible(y))))", "((Yumpus(Sally) & -Impresario(Sally)) | Imperators((Sally)))", "(yumpus(x) | IsImpractical(x)))", "(all x.(Sally(x) -> Yumpus(x)) | (-Sally(x) & Impossible(x))))", "(all x.(Sally(x) -> Yumpus(x)) | (-Sally(x) & IsImpossible(x))))", "(all x y.(Yumpus(x) -> Sally(x)) | (-Ilision(x) & Sally(y))))", "all x.(Sally(x) -> (Yumpus(x) | (-Impresario(x) | Sievered(x)))))"]}
{"id": "prontoqa_validation_276", "nl": "Everything that is a grimpus, a brimpus, or a jompus is a lempus and a dumpus and a lorpus.", "fol": "all x. ((grimpus(x) | brimpus(x) | jompus(x)) -> (lempus(x) & dumpus(x) & lorpus(x)))", "prediction": ["all x.((Murmpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Loper(x)))", "all x.((Element(x) & (Grimpus(x) | Brimpus(x) | Jompus(x))) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Smopus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Furpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lovrus(x)))", "all x.((Rumpus(x) | Brimpus(x) | Jompus(x)) -> (Lampus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Smopus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Cramp(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Trumpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Crampus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Element(x) & (Grimpus(x) | Brimpus(x) | Jompus(x))) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Crampus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lordpus(x)))", "all x.(((Grimpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Together(x) & (Grimpus(x) | Brimpus(x) | Jompus(x))) -> (Lempus(x) | Dumpus(x) | Lorpus(x)))", "all x.((Smoothpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Treatment(x) & (Grimpus(x) | Brimpus(x) | Jompus(x))) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Surrumpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_validation_277", "nl": "Sally is a brimpus.", "fol": "brimpus(Sally)", "prediction": ["Sally is Brimpus(Sally)", "all x.(Sally(x) -> Brimpus(x))", "Sally is Brimpus(s)", "all x.(Sally(x) -> Brimpus(x))", "is Brimpus(Sally)", "all x.(Sally(x) -> Brimpus(x))", "Sally is a Brimpus.", "Sally is a brimpus.", "Sally is a brimpus.", "Sally ist brimpus.", "all x.(Brimpus(x) -> Sally(x))", "Sally is a Brimpus.", "all x.(Sally(x) -> Brimpus(x))", "all x.((Sally(x) & Brimpus(x)) -> FiftySideFilms(x))", "Sally is a Brimpus.", "Sally is brimpus."]}
{"id": "prontoqa_validation_278", "nl": "Sally is a dumpus.", "fol": "dumpus(Sally)", "prediction": ["all x.(Sally(x) -> Dumpus(x))", "Sally is a Dumpus.", "Sally is a dumpus.", "Sally (Sally) & Dumpus(Sally))", "Sally is a dumpus.", "Sally is a dumpus.", "Sally is a dumpus.", "Sally is a dumpus.", "Sally is Dumpus(Sally)", "Sally is a dumpus.", "Sally is Dumpus.", "Sally is a dumpus.", "Sally is a dumpus.", "Sally is a dumpus.", "Sally is a Dumpus.", "Sally is a dumpus."]}
{"id": "prontoqa_validation_279", "nl": "Each dumpus is a grimpus, a sterpus, and a gorpus.", "fol": "all x. (dumpus(x) -> (grimpus(x) & sterpus(x) & gorpus(x)))", "prediction": ["all x.(Dumpus(x) -> (Grimpus(x) & Sterpus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (EarthlyDumpus(x) & Grimpus(x) & Sterpus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (Grampus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> (Strawpus(x) | Steropus(x) | Gorpus(x)))", "(all x.(Dumpus(x) -> Grumpus(x)) & (St\u00e9rus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (Grimpus(x) & Sterpus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (Scrutus(x) | Sterpus(x) | Gorpus(x)))", "exists x.(Dumpus(x) & Grupus(x) & Sterpus(x) & Gorpus(x))", "all x.(Dumps(x) -> (Elements(x,grampus) | Ingredients(x,sterpus) | Ingredients(x,gorpus)))", "all x.(Dumpus(x) -> (Strictus(x) & Sterpus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (Smoothpus(x) & Sterpus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (Essex(x) & Grimpus(x) & Esserpus(x) & Esserpus(x) & Esserpus(x)))", "all x.(Dumpus(x) -> (Grimpus(x) | Sterus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> (Agrepus(x) & Sterpus(x) & Gorpus(x)))", "all x.(Dupus(x) -> (Crumps(x) & Sterpus(x) & Gorpus(x)))", "all x.(Dumus(x) -> (Rumpus(x) | Sterpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_validation_280", "nl": "Wren is a dumpus.", "fol": "dumpus(Wren)", "prediction": ["the worn(w) -> Dumpus(w))", "all x.(Wren(x) -> Dumpus(x))", "all x.(Wren(x) -> Dumpus(x))", "(Dumpsus(Wren)", "(Dumpsus(Wren))", "all x.(Wren(x) -> Dumpus(x))", "all x.(Wren(x) -> Dumpus(x))", "all x.(Wren(x) -> Dumpus(x))", "(Dumpus(wren) & IsDumpus(wren))", "all x.(Wren(x) -> Dumpus(x))", "All x.(Wren(x) -> Dumus(x))", "(Duskus(Wren))", "all x.(Wren(x) -> Dumpus(x))", "all x.(Wren(x) -> Dumpus(x))", "(Dumpsus(Wren)", "(Dumpus(Wren) & Resident(Wren))"]}
{"id": "prontoqa_validation_281", "nl": "Wren is a shumpus or a sterpus or a grimpus.", "fol": "(shumpus(Wren) | sterpus(Wren) | grimpus(Wren))", "prediction": ["all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterectus(x) | Scrubpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Gruppus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "(BetweenShumpus(wren) | BetweenSterpus(wren) | BetweenSplotches(wren)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))"]}
{"id": "prontoqa_validation_282", "nl": "Brimpuses are jompuses.", "fol": "all x. (brimpus(x) -> jompus(x))", "prediction": ["all x.(Brompus(x) -> Jompuse(x))", "all x.(Brimpus(x) -> Jompus(x))", "all x.(Brimous(x) -> Jompuse(x))", "all x.(Brimpus(x) -> Jompuse(x))", "all x.(Brimpuse(x) -> Jompuse(x))", "all x.(Brimpuse(x) -> Jompuse(x))", "all x.(Brimpus(x) -> Jompuse(x))", "all x.(Brimpus(x) -> Jompuse(x))", "all x.(Brimpus(x) -> Jompuse(x))", "all x.(Birmuse(x) -> Jombus(x))", "all x.(Brompus(x) -> Jew(x))", "all x.(Brimpus(x) -> Jompuse(x))", "all x.(Brimpuse(x) -> Jompuse(x))", "all x.(Brompus(x) -> Jompus(x))", "all x.(Brimbus(x) -> Jompuse(x))", "all x.(Brompus(x) -> Jompus(x))"]}
{"id": "prontoqa_validation_283", "nl": "Rex is a rompus and a yumpus and a brimpus.", "fol": "(rompus(Rex) & yumpus(Rex) & brimpus(Rex))", "prediction": ["all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))", "(all x.(Rex(x) -> Rompus(x)) & (Yumpus(x) | Brimpus(x)))", "((Rex) | Yumpus(y)) & Brimpus(y))", "(all x.(Rompus(x) -> Rex)) & all y.(Yumpus(y) -> Rex)) & all z.(Brimpus(z) -> Rex)))", "all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))", "all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))", "all x.(Rompus(x) & Yumpus(x) & Brimpus(x))", "(all x y.((Rex) & ROMpus(y)) | (Yumpus(y) & Brimpus(y))))", "all x y.((Rompus(x) & Yumpus(y) & Brimpus(x)) -> Semitonal(x))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Yumpus(y) & all z.(Brimpus(z) & Y.(Yumpus(z))) -> Brimpus(z))))", "all x.(Rompus(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))", "all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))", "(all x.(Rex(x) -> Rompus(x)) & (Yumpus(x) | Brimpus(x))))", "(Rompus(Rex) & Yupsis(Rex) & Brimpus(Rex))"]}
{"id": "prontoqa_validation_284", "nl": "Rex is a brimpus or a jompus or a gorpus.", "fol": "(brimpus(Rex) | jompus(Rex) | gorpus(Rex))", "prediction": ["all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brompus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Burumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> ((Brimpus(x) | Jompus(x) | Gorpus(x))))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "(all x.(Rex(x) -> Brimpus(x)) | (Jompus(x) | Gorpus(x))))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))"]}
{"id": "prontoqa_validation_285", "nl": "Everything that is a dumpus and a sterpus and a brimpus is a wumpus.", "fol": "all x. ((dumpus(x) & sterpus(x) & brimpus(x)) -> wumpus(x))", "prediction": ["all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Pupus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dupus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.(((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "exists x.((Thing(x) & Dumpus(x) & Sterus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "ALL x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Doupus(x) & Sterus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brumpus(x)) -> Wumpus(x))", "all x.((Dumps(x) & Sterpus(x) & Brimpus(x)) -> Wampus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))"]}
{"id": "prontoqa_validation_286", "nl": "Alex is a dumpus.", "fol": "dumpus(Alex)", "prediction": ["all x.(Alex(x) -> Dumpus(x))", "all x.(Alex(x) -> Dumpus(x))", "Alfonso (Alex) -> Dumpus(Alex))", "(Dumbus(Alex) -> Dumpus(Alex))", "all x.(Dumus(x) -> Alex(x))", "Alex is Dumpus.", "all x.(Alex(x) -> Dumpus(x))", "Alex is a dumpus.", "Alex is dumus.", "all x.(Alex(x) -> Duskus(x))", "(Dumus(Alex))", "Alex is Dumpus.", "All x.(Alex(x) -> Dumpus(x))", "all x.(Alex(x) -> Dumpus(x))", "all x.(Alex(x) -> Dumpus(x))", "hasnum.org(Alex) & Dumpus(Alex))"]}
{"id": "prontoqa_validation_287", "nl": "Alex is a sterpus.", "fol": "sterpus(Alex)", "prediction": ["all x.(Alex(x) -> Sterpus(x))", "all x.(Sterepus(x) -> Sterpus(x))", "(Sterepus(Alex))", "all x.(Alex(x) -> Sterpus(x))", "all x.((Alex(x) & Sterpus(x)) -> Spinus(x))", "(Stereosis(Alex) & Strong(Alex))", "all x.(Alex(x) -> Streptomx(x))", "all x.(Sterpus(x) -> Alex(x))", "all x.(Sterpus(x) -> Alex(x))", "Alex is a sterpus.", "all x.(Alex(x) -> Sporpus(x))", "Alex is sterpus.", "all x.(Sterepus(x) -> Serperus(x))", "all x.(Sterepus(x) -> Steroid(x))", "Alex is sterpus.", "Alex is Sterpus."]}
{"id": "prontoqa_validation_288", "nl": "Alex is a brimpus.", "fol": "brimpus(Alex)", "prediction": ["all x.(Alex(x) -> Brimpus(x))", "(Brimpus(Alex))", "All x.(Alex(x) -> Brimpus(x))", "Alex is brimpus(Alex)", "all x.(Alex(x) -> Brimpus(x))", "ALL x.(Alex(x) -> Brimpus(x))", "all x.(Alex(x) -> Brimpus(x))", "all x.(Alex(x) -> Brimpus(x))", "all x.(Alex(x) -> Biscus(x))", "all x.(Alex(x) -> Brumpus(x))", "all x.(Alex(x) -> Brimpus(x))", "(Brompus.)", "all x.(Alex(x) -> Brimpus(x))", "all x.(Alex(x) -> Brimpus(x))", "all x.(Alex(x) -> Brimpus(x))", "all x.(Brimpus(x) -> Alex(x))"]}
{"id": "prontoqa_validation_289", "nl": "Alex is a zumpus, a wumpus, or a rompus.", "fol": "(zumpus(Alex) | wumpus(Alex) | rompus(Alex))", "prediction": ["all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> ((Zimpus(x) | Wumpus(x)) | Rompus(x))))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Romanpus(x)))", "all x.(Alex(x) -> (HasToumpus(x) | HasWumpus(x) | HasRoompus(x)))", "exists x.(Alex(x) & (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wompus(x) | Rompus(x)))", "all x.(Alex(x) -> (Zumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))"]}
{"id": "prontoqa_validation_290", "nl": "Everything that is a numpus or a jompus or a vumpus is a rompus.", "fol": "all x. ((numpus(x) | jompus(x) | vumpus(x)) -> rompus(x))", "prediction": ["all x.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))"]}
{"id": "prontoqa_validation_291", "nl": "Wren is a yumpus, a vumpus, and a shumpus.", "fol": "(yumpus(Wren) & vumpus(Wren) & shumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Yumpus(x) | -Vimpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Visum(x) | Humpus(x)))", "(Yumpus(Wren) & Vumpus(Wren) & Humpus(Wren))", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "(all x.(Wren(x) -> Yumpus(x)) & all y.(Wren(y) -> Vumpus(y)) & all z.(Wren(z) -> Sensepus(z))))", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Vampus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Vampus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Vukpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Vubis(x) | Humpus(x)))", "(Yumpus(Wren) | Vumpus(Wren) | Humpus(Wren)))", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "all x y.((Wren(x) & Yumpus(y)) -> (Umpus(x) & Vumpus(y) & Humpus(x)))"]}
{"id": "prontoqa_validation_292", "nl": "Wren is a rompus.", "fol": "rompus(Wren)", "prediction": ["all x.(Wren(x) -> Rompus(x))", "All x.(Wren(x) -> Rompus(x))", "all x.(Wren(x) -> Rompus(x))", "all x.(Wren(x) -> Rompus(x))", "all x.(Wren(x) -> Rompus(x))", "all x.(Wren(x) -> Rompus(x))", "all x.(Wren(x) -> Ripus(x))", "all x.(Wren(x) -> Rompus(x))", "all x.(Wren(x) -> Rompus(x))", "(Rompus(wren) -> Ripper(wren))", "all x.(Wren(x) -> Rompus(x))", "all x.(Wren(x) -> Rompus(x))", "All x.(Wren(x) -> Rompus(x))", "(Rompus(Wren) -> Rompus(Wren))", "(Rompus(Wren))", "all x.(Rompus(x) -> Wren(x))"]}
{"id": "prontoqa_validation_293", "nl": "Each numpus is not a shumpus.", "fol": "all x. (numpus(x) -> -shumpus(x))", "prediction": ["all x.(Nompus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Nompus(x) -> -Shumpus(x))", "(all x.(numpus(x) -> -Shumpus(x)))", "all x.(Nompus(x) -> -Shumpus(x))", "all x.(Nompus(x) -> -Shumpus(x))", "all x.(Nompus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Fumpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Nompus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))"]}
{"id": "prontoqa_validation_294", "nl": "Everything that is a lempus, a yumpus, or a brimpus is a shumpus.", "fol": "all x. ((lempus(x) | yumpus(x) | brimpus(x)) -> shumpus(x))", "prediction": ["all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Shumpus(x))", "all x.((Lempus(x) | Yampus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yugpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yampus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yampus(x) | Humpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Shumpus(x))", "all x3.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Youngpus(x) | Brimpus(x)) -> Humpus(x))", "all x.(((Alempus(x) | Yumpus(x) | Brimpus(x))) -> Humpus(x))", "all x.((Lempus(x) | Yumus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Limpus(x) | Yampus(x) | Brimpus(x)) -> Humpus(x))"]}
{"id": "prontoqa_validation_295", "nl": "Rex is a numpus and a gorpus and a rompus.", "fol": "(numpus(Rex) & gorpus(Rex) & rompus(Rex))", "prediction": ["all x y z.((Rex(x) & Numpus(y) & Gorpus(z)) -> (Numpus(x) | Rompus(z)))", "(all x.(Rex(x) -> Number(x)) & (Gorpus(x) | Rompus(x))))", "all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "(See Rex(numpus) & See Gorpus(rompus))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Gorpus(y) & Rompus(y)))", "all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "(numpus(Rex) & Gorpus(Rex)) & Rompus(Rex))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Gorpus(y) & Rhopus(y)))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Gorpus(y) -> Rompus(y)))", "(Numpus(Rex) & Gorpus(Rex) & Rompus(Rex))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Gorpus(y) -> Rompus(y)))", "all x.(Rex(x) -> (Nompus(x) & Gorpus(x) & Rompus(x)))", "all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "all x y z.((Rex(x) & Numpus(y) & Gorpus(z) & Rompus(x)) -> (Numpus(x) & Gorpus(y) & Rompus(z)))", "exists x.(Rex(x) & Numpus(x) & Gorpus(x) & Rompus(x))"]}
{"id": "prontoqa_validation_296", "nl": "Everything that is a wumpus, a jompus, and a tumpus is a zumpus and a sterpus and a brimpus.", "fol": "all x. ((wumpus(x) & jompus(x) & tumpus(x)) -> (zumpus(x) & sterpus(x) & brimpus(x)))", "prediction": ["all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Zumpus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Toumpus(x) & Sterpus(x) & Brimpus(x)))", "all x.(((Wumpus(x) | Jompus(x) | Tumpus(x))) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) & Jompus(x) & Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((HasWumpus(x) | HasJompus(x) | HasTumpus(x)) -> (HasZumpus(x) & HasSteerpus(x) & HasBrimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Steroid(x) & Burumpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Zumpus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Zumpus(x) & Skeleton(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Touchpus(x) & Sterpus(x) & Brimpus(x)))", "all x y z.((Wumpus(x) & Jompus(y) & Tumpus(z) & Topsy(x) & Sterpus(y) & Brimpus(z)) -> (Topsy(x) & Topsy(x) & Sterosin(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Zumpus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Stompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) & Jompus(x) & Tumpus(x)) -> (Tompus(x) & Sterepus(x) & Brimpus(x)))"]}
{"id": "prontoqa_validation_297", "nl": "Max is a wumpus.", "fol": "wumpus(Max)", "prediction": ["-Wumpus(Max)", "(wumpus(Max) -> ThisWumpus(Max))", "(Wumpus(Max))", "all x.(Max(x) -> Humpus(x))", "Max is a wumpus.", "all x.(Max(x) -> Wumpus(x))", "(Matthew(Max) & Wumpus(Max))", "all x.(Wumpus(x) -> Max(x))", "(Wumpus(Max) & HasWumpus(Max))", "Max isWumpus(x)", "(Father(Max) & Wampus(Max))", "all x.(Wumpus(x) -> Max(x))", "-Wumpus(max)", "(Wumpus(Max)", "(Wumpus(Max))", "Max is a wumpus."]}
{"id": "prontoqa_validation_298", "nl": "Max is a jompus.", "fol": "jompus(Max)", "prediction": [",Jimpus(Max)", "all x.(Max(x) -> Jompus(x))", "all x.(Max(x) -> Jompus(x))", "((Max(Max) & Jompus(Max)) -> Nomad(Max))", "(Jompus(Max))", "all x.(Max(x) -> Jompus(x))", "all x.(Max(x) -> Jompus(x))", "(Jimpus)", "(Jimpus(Max) -> PoweredBy(Max))", "(Jompus (Max) | Jompus(Max)))", "all x.(Max(x) -> Jompus(x))", "All x.(Max(x) -> Jompus(x))", "the world's smallest human. Max.", "JOMPUS(Max)", "all x.(Jimpus(x) -> Max(x))", "all x.(Max(x) -> Jompus(x))"]}
{"id": "prontoqa_validation_299", "nl": "Max is a tumpus.", "fol": "tumpus(Max)", "prediction": ["all x.(Max(x) -> Totumpus(x))", "(Tumpus(Max) & Fist(Max))", "(Tumpus(Max))", "all x.(Max(x) -> Tumpus(x))", "(Nature(Max) & Tumpus(Max))", "all x.(Max(x) -> Tumult(x))", "(Tumpus(Max) & DoesTumult(Max))", "all x.(Max(x) -> Tumpus(x))", "-Tumpus(Max)", "(Tumpus(Max) -> HasTum.", "(Tumpus(Max) & CanThreat(Max))", "Max isTumpus.", "exists x.(Max(x) & Tumpus(x))", "all x.(Max(x) -> Tumpus(x))", "all x.(Max(x) -> Tumpus(x))", "(Tumpus(Max))"]}
{"id": "prontoqa_validation_300", "nl": "Max is a zumpus.", "fol": "zumpus(Max)", "prediction": ["Max ist zumpus.", "all x.(Max(x) -> Zumpus(x))", "(Zumpus(Max) -> Tosp(Max))", "all x.(Tompus(x) -> -(Tompus(x) | Tompus(x))))", "all x.(Max(x) -> Zumpus(x))", "all x.(Max(x) -> Zumpus(x))", "all x.(Max(x) -> Zumpus(x))", "(Zumpus(Max)", "all x.(Max(x) -> Zumpus(x))", "Max ist ein Zumpus.", "(f\u00fcrsius(Max))", "all x.(Max(x) -> Zumpus(x))", "all x.(Max(x) -> Zumpus(x))", "(Zombie.(Max) & Zumpus(Max))", "all x.(Max(x) -> Zumpus(x))", "all x.(Max(x) -> Zumpus(x))"]}
{"id": "prontoqa_validation_301", "nl": "Every shumpus is a tumpus, a yumpus, and a lempus.", "fol": "all x. (shumpus(x) -> (tumpus(x) & yumpus(x) & lempus(x)))", "prediction": ["all x.(Shumpus(x) -> (Tumpus(x) & Yumpus(x) & Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yampus(x) & Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yumpus(x) & Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yumpus(x) & Lempus(x)))", "all x.(Shumpus(x) -> (Muumpus(x) | Yompus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yampus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yampus(x) & Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yampus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yearpus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yumpus(x) & Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yumpus(x) & Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yampus(x) & Lempus(x)))", "(exists x.(Shumpus(x) & Tumpus(x)) & exists yumpus(y) & exists z.(Lempus(z) & Tumpus(z))))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))"]}
{"id": "prontoqa_validation_302", "nl": "Alex is a shumpus.", "fol": "shumpus(Alex)", "prediction": ["all x.(Alex(x) -> Humptious(x))", "(all x.(Alex(x) -> Humpus(x)))", "all x.(Alex(x) -> Snompus(x))", "all x.(Alex(x) -> Humpus(x))", "all x.(Alex(x) -> Humpus(x))", "all x.(Alex(x) -> Humpus(x))", "(Shumpus(Alex) -> Shumpus(Alex))", "all x.(Alex(x) -> Humpus(x))", "Alex is Shumpus.", "all x.(Alex(x) -> Humpus(x))", "Alex is Shumpus(Alex)", "Alex is a shumpus.", "all x.(Alex(x) -> Humpus(x))", "all x.(Shumpus(x) -> Alex(x))", "Alex,Shumpus(Alex)", "Alex is shumpus."]}
{"id": "prontoqa_validation_303", "nl": "Alex is a tumpus or a dumpus or a brimpus.", "fol": "(tumpus(Alex) | dumpus(Alex) | brimpus(Alex))", "prediction": ["all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumped(x) | BRIMpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_validation_304", "nl": "Every sterpus is not a tumpus.", "fol": "all x. (sterpus(x) -> -tumpus(x))", "prediction": ["all x.(Stepus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Sternpus(x) -> -Tumpus(x))", "all x.(Steerpus(x) -> -Tumpus(x))", "all x.(Steerpus(x) -> NotTumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Stroke(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Steerpus(x) -> -Tumpus(x))", "all x.(Soiler(x) -> -Tumpus(x))", "all x.(Strout(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))"]}
{"id": "prontoqa_validation_305", "nl": "Every lorpus is a tumpus.", "fol": "all x. (lorpus(x) -> tumpus(x))", "prediction": ["all x.(lorpus(x) -> Tumpus(x))", "all x.(Lorph(x) -> Tumpus(x))", "all x.(Llorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Tumpus(x) -> Lepto(x))", "all x.(Lorpus(x) -> Pumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumulus(x))"]}
{"id": "prontoqa_validation_306", "nl": "Wren is a sterpus.", "fol": "sterpus(Wren)", "prediction": ["all x.(Wren(x) -> Sterpus(x))", "all x.(Wren(x) -> Sterpus(x))", "(Strojan(wren) & Sterpus(wren))", "all x.(Wren(x) -> Sterepus(x))", "all x.(Wren(x) -> Sterpus(x))", "all x.(Wren(x) -> Sterpus(x))", "all x y.((Wren(x) & Sterpus(y)) -> Sterpus(x))", "(Sterpus(Wren) & HasStern(Wren,SC))", "all x.(Wren(x) -> Sterpus(x))", "all x.(Wren(x) -> Sterpus(x))", "all x.(Wren(x) -> Sterpus(x))", "all x.(Wren(x) -> Sterpus(x))", "all x.(Wren(x) -> Sterpus(x))", "all x.(Wren(x) -> Sterpus(x))", "all x.(Wren(x) -> Sterpus(x))", "all x.(Wren(x) -> Sterpus(x))"]}
{"id": "prontoqa_validation_307", "nl": "Wren is a grimpus or Wren is not a lorpus or Wren is a lempus.", "fol": "(grimpus(Wren) | -lorpus(Wren) | lempus(Wren))", "prediction": ["all x.((Wren(x) & (Grimpus(x) | -Lorpus(x) | Lempus(x))) -> Dirty(x))", "all x y z.((Wren(x) & Grapps(x) | Wren(y) & -Lorpus(y)) | (Wren(z) & Lempus(z))))", "all x.((Wren(x) & Scarps(x)) | (-Lorpus(x) & Lempus(x))))", "(all x.(Wren(x) -> Grimpus(x)) | (-Lorpus(x) | Lempus(x))))", "((Wren(Wren) & Grimpus(Wren)) | (-Lorpus(Wren) & Lempus(Wren))))", "all x y.((Wren(x) & Grimpus(x)) | (-Lorpus(y) | Lempus(y))))", "all x.((Wren(x) -> (Grisp(x) | (-Lorpus(x)) | Lempus(x))))", "all x.(Wren(x) -> (Schmaug(x) | (-Lorpus(x) | Lempus(x)))))", "all x.(Wren(x) | (-Lorpus(x) | Lempus(x))))", "((Crupid(w) | -Lorpus(w) | Lempus(w)))", "all x.((Wren(x) & Cramp(x)) | (-Lorpus(x) | Lempus(x))))", "(all x.(Wren(x) -> Grimpus(x))) & (-Lorpus(x) | Lempus(x))))", "all x.(Wren(x) -> (IsGrimpus(x) | (-IsLorpus(x) | IsLempus(x))))", "all x.((Wren(x) & Grimpus(x)) | (-Lorpus(x) | Lempus(x))))", "(all x.(Wren(x) -> Grimpus(x)) | (-Lorpus(x) | Lempus(x))))", "(all x.(Wren(x) -> (Grimpus(x) | (-Lorpus(x) | Lempus(x)))))"]}
{"id": "prontoqa_validation_308", "nl": "Every gorpus is a tumpus.", "fol": "all x. (gorpus(x) -> tumpus(x))", "prediction": ["all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x y.((Gorpus(x) & Tumpus(y)) -> InTumpus(x,y))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "exists x.(Gorpus(x) & Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Pumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_309", "nl": "Sally is not a tumpus and Sally is a lempus and Sally is a vumpus.", "fol": "(-tumpus(Sally) & lempus(Sally) & vumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Tumpus(x)) & all y.(Lempus(y) & AllMumpus(z))))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> Vumpus(z))))", "(all x.(Sally(x) -> -Tumpus(x)) & (Sally(x) -> Lempus(x)) & (Sally(x) -> Vumpus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & (Sally(x) -> Lempus(x)) & (Sally(x) -> Voompus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & (Lempus(x) & Voompus(x)))", "(all x y.((Sally(x) & Tumpus(x)) -> -Tumpus(x)) & ((Sally(y) & Lempus(y)) -> Vumpus(y)))", "(-Tumpus(Sally) & 1Limpus(Sally) & 2Vumpus(Sally))", "(all x.((Sally(x) & -Tumpus(x)) | (-Tumpus(x) & Lempus(x)))) & all y.((Sally(y) & Vumpus(y)) -> Vumpus(y)))", "(all x.(Sally(x) -> -Tumpus(x)) & (Lempus(x) | Vumpus(x)))", "all x y z.((Sally(x) & Tumpus(y) & Lempus(z)) -> (-Tumpus(x) & Lempus(x) & Vumpus(x)))", "(all x y.(Tumpus(x) -> -Tumpus(x)) & all z w.(Lempus(y) & Vempus(z))) -> Numpus(w))", "(all x.(Sally(x) -> -Tumpus(x)) & (Lempus(x) & Vumpus(x)))", "all x y.((Sally(x) & -Tumpus(x) & Lempus(y)) -> (Vumpus(x) & Tumpus(y)))", "(all x y.((Sally(x) & Tumpus(x)) -> -Tumpus(x)) & ((Sally(y) & Lempus(y)) -> Vampe(y)))", "all x.((Sally(x) & -Tumpus(x)) & (Lempus(x) | Vulpu(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & (Lempus(x) | Vampus(x)))"]}
{"id": "prontoqa_validation_310", "nl": "Sally is a tumpus or Sally is a lorpus or Sally is not a gorpus.", "fol": "(tumpus(Sally) | lorpus(Sally) | -gorpus(Sally))", "prediction": ["all x.(Sally(x) -> (Tumpus(x) | Lordpus(x) | -Gorpus(x)))", "all x.((Sally(x) & (Tumpus(x) | Lorpus(x) | -Gorpus(x))) -> Tumpus(x))", "all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Lordpus(x) | -Gorpus(x)))", "all x.((Sally(x) & (Tumpus(x) | Lordpus(x) | -Gorpus(x))) -> (Tumpus(x) | Lorpus(x)))", "all x.((Sally(x) & Tumpus(x)) | (Lorpus(x) | -Gorpus(x))))", "all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "all x.((Sally(x) & (Tumpus(x) | Loomis(x) | -Gorpus(x))) -> ((Tumpus(x) | Lorpus(x))))", "all x.(Sally(x) -> (Tumpus(x) | Loper(x) | -Gorpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "all x y.((Sally(x) & Tumpus(x)) | (Lorpus(x) | -Gorpus(y))))", "all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Liep(x) | -Gorpus(x)))"]}
{"id": "prontoqa_validation_311", "nl": "Numpuses are yumpuses, vumpuses, and gorpuses.", "fol": "all x. (numpus(x) -> (yumpus(x) & vumpus(x) & gorpus(x)))", "prediction": ["all x.(Numpuse(x) -> (Yumpus(x) | Vampus(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vompus(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vampuse(x) | Gorpuse(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vumpuse(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vampus(x) | Gorpus(x)))", "all x.(Numpus(x) -> (Yumpus(x) | Vampus(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vumpus(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vumpus(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vumpus(x) | Gorpus(x)))", "(all x.(Numpuse(x) -> Yampus(x)) & all y.(Vumpuse(y) & all z.(Dotcoin(z) & Gorpus(z))) -> Gorpus(x)))", "all x.(Numpus(x) -> (Yumpus(x) | Vampuse(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vusus(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpuses(x) | Vumpuses(x) | Gorpuses(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vampus(x) | Gorpus(x)))", "all x.(Numpus(x) -> (Yumpus(x) | Vampuse(x) | Gorpus(x)))", "all x.(Numpus(x) -> (Yumpus(x) | Vumpuse(x) | Gorpus(x)))"]}
{"id": "prontoqa_validation_312", "nl": "Rex is a grimpus, Rex is not a gorpus, and Rex is a shumpus.", "fol": "(grimpus(Rex) & -gorpus(Rex) & shumpus(Rex))", "prediction": ["all x.(Rex(x) -> (Sgrimpus(x) | -Gorpus(x) | Humpus(x)))", "(all x y.((Rex(x) & Grimpus(x)) -> NoGorpus(x)) & ((Rex(y) & Shumpus(y)) -> NotHybrid(y)))", "all x y z.((Rex(x) & Grimpus(y) & Gorpus(z)) -> (IsGrimpus(x) & IsRagpus(x) & IsShumpus(y)))", "(all x.(Rex(x) -> Grimpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Humpus(x))))", "(all x.(Rex(x) -> Grimpus(x)) & (-Rex(x) -> Gorpus(x)) & (-Rex(x) -> Humpus(x)))", "(all x y z.(Gripper(x) & Grimpus(y)) & (Gorpus(z) -> -Gripper(z))) & (Shumpus(x) -> (Shumpus(x) & -Gripper(z))))", "(all x y z.(Rex(x) -> Grumpus(x)) & ((Rex(y) & -Gorpus(y)) & ((Rex(z) | shumpus(z)))))", "(all x.(Rex(x) -> Grimpus(x)) & (-Gorpus(x) & (Shumpus(x) -> Grimpus(x))))", "(all x.(Rex(x) -> Grumpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Humpus(x)))", "(all x.(Rex(x) -> Grimpus(x)) & (noGorpus(x) & (Shumpus(x) | Grimpus(x))))", "all x.((Rex(x) & Grimpus(x)) -> (-Gorpus(x) & Humpus(x)))", "(all x.(Rex(x) -> Grimpus)) & all y.(Rex(y) -> -Gorpus(y)) & all z.(Rex(z) -> Humpus(z))))", "(all x.(Rex(x) -> Grimpus(x)) & (-Rex(x) -> Gorpus(x)) & (Rex(x) -> Humpus(x)))", "(all x y z.(Crumpus(x) -> Grimpus(x)) & (Frostpus(y) -> -Gorpus(y)) & (Shumpus(z) -> Sutus(z)))", "is a grimpus, -Gorpus, shumpus.", "(all x.(Rex(x) -> Grimpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Humpus(x)))"]}
{"id": "prontoqa_validation_313", "nl": "Rex is not a numpus.", "fol": "-numpus(Rex)", "prediction": ["Rex.(Number(x) & DoesNotRex(x))", "Das Rex-Numpus(rex)", "Rex is not a Numpus.", "-(Rex(Rex) & Numpus(Rex))", "(-numpus(Rex))", "(-numpus(Rex))", "all x.(Rex(x) -> -Numpus(x))", "-Numpus(Rex)", "(IsNotNumpus(Rex)?", "All x.(Rex(x) -> -Nompus(x))", "all x.(Rex(x) -> -Numpus(x))", "Rex is not Numpus.", "(-numpus(Rex))", "all x.(Rex(x) -> -Numpus(x))", "Rex, however, is not a Numpus.", "all x.(Rex(x) -> -Numpus(x))"]}
{"id": "prontoqa_validation_314", "nl": "Each yumpus is not a wumpus.", "fol": "all x. (yumpus(x) -> -wumpus(x))", "prediction": ["all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))"]}
{"id": "prontoqa_validation_315", "nl": "Fae is a yumpus.", "fol": "yumpus(Fae)", "prediction": ["all x.(Fae(x) -> Yumpa(x))", "all x.(Fae(x) -> Yumpus(x))", "(Yumpus(Fae)", "All x.(Fae(x) -> Yumpus(x))", "all x.(Fae(x) -> Yempus(x))", "(Yumpus(Fae))", "(Yumpus(Fae) & Yumpus(Fae))", "all x.(Fae(x) -> Yampus(x))", "all x.(Fae(x) -> Yampus(x))", "(Yumpus(Fae) & HasYumbus(Fae))", "O.(Fae,Yumpus)", "all x.(Fae(x) -> Yumpa(x))", "(Yumpus(Fae) & InCleopatra(Fae,c))", "(Yumpus(Fae) & HasYumpt(Fae))", "all x.(Fae(x) -> Yumpus(x))", "all x.(Fae(x) -> Yampus(x))"]}
{"id": "prontoqa_validation_316", "nl": "Fae is a vumpus or Fae is a wumpus or Fae is not a tumpus.", "fol": "(vumpus(Fae) | wumpus(Fae) | -tumpus(Fae))", "prediction": ["(vumpus(f) | wumpus(f) | -tumpus(f)))", "all x.((Fae(x) & (Vumpus(x) | Wumpus(x) | (-Tumpus(x)))) -> (Fae(x) & (Vumpus(x) | Wumpus(x))))", "all x.(Fae(x) -> ((Vumpus(x) | Wumpus(x)) | -Tumpus(x))))", "all x.(Fae(x) -> (Vimpus(x) | Wumpus(x) | -Tumpus(x)))", "(same as tumpus(famous) | (samousasasasasasasasasasasassasasasasasasasasa) & -tumpusasasasasasasasasasasasasasasasasasa)))", "(all x.(Fae(x) -> Vumpus(x)) | (Fae(x) -> Wompus(x)) | -Tumpus(x)))", "exists x.(Fae(x) & ((Vumpus(x) & Fae(x)) | Wumpus(x)) | -Tumpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> Wumpus(x)) | (Fae(x) -> -Tumpus(x))))", "((Fae isVimpus(Fae) | Fae isWumpus(Fae)) | Fae is-Tumpus(Fae))", "all x y.((Fae(x) & (Vumpus(x) | Wumpus(x) | -Tumpus(y))) -> (Vumpus(x) | Wumpus(x)))", "all x.((Fae(x) & NoTumpus(x)) -> (Vimpus(x) | Wumpus(x) | -Tumpus(x)))", "all x.(Fae(x) -> (Vumpus(x) | Wumpus(x) | -Tumpus(x)))", "all x.(Fae(x) & ((Vumpus(x) | Wumpus(x)) | -Tumpus(x))) -> (Vumpus(x) | Wumpus(x))))", "all x.((Fae(x) & (Vumpus(x) | Wumpus(x) | -Tumpus(x))) -> Ummush(x))", "all x.(Fae(x) -> (Vumbes(x) | (Wumpus(x) | -Tumpus(x))))", "all x y.((Fae(x) & (Vimpus(x) | Wumpus(x) | -Tumpus(y))) -> (Vimpus(x) | Wumpus(x))))"]}
{"id": "prontoqa_validation_317", "nl": "Everything that is a zumpus, a brimpus, or a numpus is a rompus, a lorpus, and a lempus.", "fol": "all x. ((zumpus(x) | brimpus(x) | numpus(x)) -> (rompus(x) & lorpus(x) & lempus(x)))", "prediction": ["all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lampus(x)))", "all x.((Erasmus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Zumpus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) & Lorpus(x) & Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lampus(x)))", "all x.((Zumpus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lower(x) | Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Nompus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) & Loupus(x) & Lempus(x)))", "all x.((Rompus(x) | Lorpus(x) | Lampus(x)) -> (Tompus(x) | Brimpus(x) | Numpus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) & Lorpus(x) & Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x y.((Tompus(x) & Brimpus(x) & Numpus(y)) -> (Rompus(x) | Lordpus(x) | Lempus(x)))"]}
{"id": "prontoqa_validation_318", "nl": "Sam is a numpus.", "fol": "numpus(Sam)", "prediction": ["(Numpus(Sam) -> Numpus(Sam))", "all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))", "Sam is Numpus(sam)", "all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))", "(Nommus(Sam) & Small(Sam))", "all x.(Sam(x) -> Numpus(x))"]}
{"id": "prontoqa_validation_319", "nl": "Sam is a lempus.", "fol": "lempus(Sam)", "prediction": ["all x.(Shadow(x) -> Lempus(x))", "all x.(Sam(x) -> Lempus(x))", "all x.(Sam(x) -> Lempus(x))", "all x.(Sam(x) -> exists y.(Lempus(y) & Lempus(y)))", "all x.(Sam(x) -> Lempus(x))", "all x.(Sam(x) -> Lempus(x))", "all x.(Sam(x) -> Lempus(x))", "all x.(Sam(x) -> Lampus(x))", "exists x.(Sam(x) & Lempus(x))", "all x.(Sam(x) -> Loompus(x))", "all x.(Sam(x) -> Lempus(x))", "all x.(Sam(x) -> Lempus(x))", "all x.(Sam(x) -> Lempus(x))", "all x.(Sam(x) -> Lempus(x))", "all x.(Lempus(x) -> Sam(x))", "all x.(Sam(x) -> Lempus(x))"]}
{"id": "prontoqa_validation_320", "nl": "Everything that is a wumpus or a zumpus or a grimpus is a jompus and a gorpus and a lempus.", "fol": "all x. ((wumpus(x) | zumpus(x) | grimpus(x)) -> (jompus(x) & gorpus(x) & lempus(x)))", "prediction": ["all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jimpus(x) & Ripley(x) & Lampus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lampus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jimpus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (BetweenJumpus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Hell(x) & -Hell(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jimpus(x) | Gorpus(x) | Lampus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))"]}
{"id": "prontoqa_validation_321", "nl": "Alex is a grimpus.", "fol": "grimpus(Alex)", "prediction": ["(Grosspus(Alex))", "all x.(Alex(x) -> Grimpus(x))", "Alex is Grimpus.", "Alex is grimpus.", "all x.(Alex(x) -> Grimpus(x))", "all x.(Gruppus(x) -> Alex(x))", "all x.(Alex(x) -> GraciousPup(x))", "all x.(Alex(x) -> Grimpus(x))", "all x.(Alex(x) -> Grimpus(x))", "(Grimpus(Alex) -> Grimpus(Alex))", "all x.(Alex(x) -> Grimpus(x))", "all x.(Alex(x) -> Gruffus(x))", "all x.(Alex(x) -> Grimpus(x))", "all x.(Alex(x) -> Grimpus(x))", "all x.(Alex(x) -> Grimpus(x))", "Alex is a Grimpus."]}
{"id": "prontoqa_validation_322", "nl": "Alex is a gorpus.", "fol": "gorpus(Alex)", "prediction": ["all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "Der Glumpus.", "all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "Alex is Gorpus.", "all x.(Alex(x) -> Gorpus(x))", "ALL X.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "Alex is Gorpus(Alex)", "all x.(Alex(x) -> Gorpus(x))", "AlexGorpus(Alex)"]}
{"id": "prontoqa_validation_323", "nl": "Every yumpus is a sterpus and a jompus and an impus.", "fol": "all x. (yumpus(x) -> (sterpus(x) & jompus(x) & impus(x)))", "prediction": ["(all x.(Yumpus(x) -> Sterep(x)) & (Jompus(x) -> Impermiss(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Imperator(x)))", "all x.(Yumpus(x) -> (Sterus(x) & Jompus(x) & Impercutor(x)))", "all x y.((Yumpus(x) & Species(y)) -> (Sterpus(x) & Jompus(x) & Impossible(x)))", "all x.(Yumpus(x) -> (Sterepus(x) & Jompus(x) & Ilios(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Cervical(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Yompus(x)) & Issue(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Issue(x)))", "(all x.(Yumpus(x) -> Sterpus(x)) & (Jimpus(x) -> Issue(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Imperator(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Issue(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Issue(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Ispos(x)))", "all x.(Yumpus(x) -> ((Sterepus(x) & Jompus(x)) & impus(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Impilicator(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Issue(x)))"]}
{"id": "prontoqa_validation_324", "nl": "Lempuses are not jompuses.", "fol": "all x. (lempus(x) -> -jompus(x))", "prediction": ["all x.(Lempus(x) -> -Jompus(x))", "all x.(Lempuse(x) -> -Jumpuse(x))", "all x.(Lempuse(x) -> -Jompuse(x))", "all x.(Lempuse(x) -> -Jombuse(x))", "all x.((Lempuse(x) & -Jimbus(x)) -> -Jimbus(x))", "all x.(Lenpuse(x) -> -Jompuse(x))", "all x.((Lempuse(x) & -Jompuse(x)) -> -Jupuse(x))", "all x.(Lempuse(x) -> -Jompuse(x))", "all x.(Lempuse(x) -> -Jumpsuse(x))", "all x.(Lempuse(x) -> -Jimbus(x))", "all x.(Lempuse(x) -> -Jompuse(x))", "all x.(Lempuse(x) -> -Jimpus(x))", "all x.(Lempuse(x) -> -Jimpus(x))", "all x.(Lempuse(x) -> -Jumpsuse(x))", "all x.(Lempuse(x) -> -Jimbus(x))", "all x.(Lempuse(x) -> -Joopuse(x))"]}
{"id": "prontoqa_validation_325", "nl": "Polly is a grimpus, an impus, and a lempus.", "fol": "(grimpus(Polly) & impus(Polly) & lempus(Polly))", "prediction": ["(Affiliations(Polly,a) & Grimpus(g)) & Issues(poly,b) & Lempus(poly,b) & (Reaper(poly,g) | Fixer(poly,g))))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Impossible(y) & Lempus(y)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Izrael(y) -> Pluto(x)))", "all x.(Polly(x) -> (Grimpus(x) | Imperium(x) | Lempus(x)))", "all x.(Polly(x) -> (Grimpus(x) | Impossible(x) | Lempus(x)))", "(exists x.(Polly(x) & Grimpus(x)) & exists y.(Impune(x) & Imperium(y)) & exists z.(Lempus(z) & Imperium(z))))", "(Grimpus(Polly) | Impossible(Polly) | Lempus(Poly))", "all x.(Polly(x) -> (Grimpus(x) & Issue(x) & Lempus(x)))", "(Polly(Polly) -> (Grimpus(Polly) | Impossible(Poly) | Lempus(Poly)))", "(Firefox(Polly) & Grimpus(Polly) & Imperial(Poly) & Lempus(Poly))", "(Odesen(Polly) & Grimpus(Polly) & Isofix(Polly) & Lempus(Poly))", "all x.(Polly(x) -> (Strawpus(x) | Impossible(x) | Lempus(x)))", "all x.(Polly(x) -> (Grimpus(x) | Imperator(x) | Lempus(x)))", "all x.(Polly(x) -> (Grimpus(x) & Issue (x) & Lempus(x)))", "all x.(Polly(x) -> (Fragnus(x) | Impossible(x) | Lempus(x)))", "all x.(Poly(x) -> (Grimpus(x) | Impossibility(x) | Lempus(x)))"]}
{"id": "prontoqa_validation_326", "nl": "Polly is not a yumpus.", "fol": "-yumpus(Polly)", "prediction": ["(-Yumpus(Polly))", "-Yumpus(Poly)", "(-Yumpus(Polly))", "(-Yukpus(Poly))", "all x.((Polly(x) & -Yumpus(x)) -> -Yumpus(x))", "exists x.(Polly(x) & -Yumpus(x))", "-Yumpus(Polly)", "all x.(Polly(x) -> -Yumpus(x))", "(-Yumpus(Polly))", "-Yumpus(Polly)", "(-Yumpus(Pollly))", "all x.(Polly(x) -> -Yumpus(x))", "(-Yumpus(Polly))", "all x.(Ploy(x) -> -Yumpus(x))", "all x.(IsPoly(x) -> -Yumpus(x))", "(-Yumpus(polly))"]}
{"id": "prontoqa_validation_327", "nl": "Everything that is a grimpus, a rompus, or a gorpus is a numpus.", "fol": "all x. ((grimpus(x) | rompus(x) | gorpus(x)) -> numpus(x))", "prediction": ["all x.((Cruppus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Grampus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Grimpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Grimpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rumpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Grimpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Grampus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((HasGrips(x) | HasRompus(x) | HasGorpus(x)) -> Numpus(x))", "all x.((Gruppus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Element(x) & (Grimpus(x) | Rompus(x) | Gorpus(x))) -> Numpus(x))", "all x.((AsGrimpus(x) | AsRompus(x) | AsGorpus(x)) -> Numpus(x))", "all x.((Grurpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Grimpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Gruppus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Fragpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.(((Gruppus(x) | Rompus(x) | Gorpus(x))) -> Numpus(x))"]}
{"id": "prontoqa_validation_328", "nl": "Alex is a shumpus, Alex is not a numpus, and Alex is a sterpus.", "fol": "(shumpus(Alex) & -numpus(Alex) & sterpus(Alex))", "prediction": ["(all x.(Alex(x) -> Humpus(x)) & (Alex(x) -> -Numpus(x))) & (Alex(x) -> Sterpus(x)))", "(all x y.(Shumpus(x) -> Alex)) & (Nompus(y) -> Alex(y)) & (Sterpus(y) -> Alex)))", "(all x.(Alex(x) -> Shumpus(x)) & (-Esterpus(x) & -Esterpus(x))))", "(all x y z.(Shumpus(x) -> Alex(x)) & (Nompus(y) -> Alex(z))) & (Opaque(z) -> Sterpus(z)))", "all x y z.((Alex(x) & Shumpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(x) & Sterpus(x)))", "(all x.(Alex(x) -> Sompus(x)) & (Alex(x) -> -Numpus(x))) & (Alex(x) -> Sterile(x)))", "all x y z.((Alex(x) & Shumpus(y) & -Numpus(z)) -> (Shumpus(x) & -Sterpus(y)))", "(all x y z.(Alex(x) -> Shumpus(x)) & (Alex(y) -> -Numpus(y)) & (Alex(z) -> Sterpus(z)))", "all x.(Alex(x) -> (Shumpus(x) & -Numpus(x) & Sterpus(x)))", "all x y z.((Alex(x) & Humpus(y) & Nompus(z)) -> (Shumpus(x) & -Numpus(y) & Sterpus(z)))", "all x.((Alex(x) & Shumpus(x)) -> (-Numpus(x) & Sterpus(x)))", "all x y z.((Alex(x) & Simpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Sterpus(z)))", "all x y.((Alex(x) & Humpus(x)) | (-Number(y) & Sterpus(x))))", "all x y z.((Alex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) | Sterosoph(x)))", "(all x.(Alex(x) -> Scumpus(x)) & all y.(Alex(y) -> -Numpus(y)) & all z.(Alex(z) -> Sterpus(z))))", "(all x.(Alex(x) -> Scalope)) & all y.(Alex(y) -> -Nompus(y)) & all z.(Alex(z) -> Sterpus(z))))"]}
{"id": "prontoqa_validation_329", "nl": "Alex is not a rompus.", "fol": "-rompus(Alex)", "prediction": ["all x.(Alex(x) -> -Rompus(x))", "Alex is not a rompus.", "everything about Alex(Alex) -> -Rompus(Alex))", "this is the rompus.", "Alex (*) -> -Rompus(Alex))", "all x.(Alex(x) -> -Rompus(x))", "all x.(Alex(x) -> -Rompus(x))", "all x.(Alex(x) -> -Rompus(x))", "all x.(Alex(x) -> -Rompus(x))", "all x.(Alex(x) -> -Rompus(x))", "all x.(Alex(x) -> -Rompus(x))", "is notRompus(Alex)", "(-Rompus(Alex))", "-IsRompus(Alex)", "all x.(Alex(x) -> -Rompus(x))", "(-Rompus(Alex))"]}
{"id": "prontoqa_validation_330", "nl": "Each wumpus is a lorpus, a sterpus, and a brimpus.", "fol": "all x. (wumpus(x) -> (lorpus(x) & sterpus(x) & brimpus(x)))", "prediction": ["all x.(Wumpus(x) -> (Lorpus(x) & Sterpus(x) & Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (ManyLorpus(x) & SomeSterpus(x) & SomeBrimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "(all x.(Wumpus(x) -> Llorpus(x)) & (Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Steerpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Steerpus(x) | Brimpus(x)))", "(all x.(Wumpus(x) -> Lorpus(x)) & all y.(Sterpus(y) & -Lorpus(y))) & all z.(Brimpus(z)) -> Brimpus(z)))", "all x.(Wumpus(x) -> (Lorpus(x) | Spectre(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | -Sterpus(x) | -Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) & Sterpus(x) & Brimpus(x)))"]}
{"id": "prontoqa_validation_331", "nl": "Stella is a wumpus.", "fol": "wumpus(Stella)", "prediction": ["(Wumpus(Stella) & BornIn(Stella,Wumpus))", "-Wumpus(Stella)", "Stella is a wumpus.", "(Wumpus(stella) & RestrictedTo(stella(s))", "Stella is wumpus.", "Stella (Wumpus)", "Stella is a wumpus.", "all x.(Wumpus(x) -> Stella(x))", "(Wumpus(Stella) & Species(Stella))", "(Wimpus(Stella) & Wumpus(Stella))", "Stella (Wumpus)", "Stella is a Wumpus(s)", "Stella is wompus.", "Stella is a wumpus.", "Stella is Woody.", "-Wumpus(Stella)"]}
{"id": "prontoqa_validation_332", "nl": "Stella is a jompus, a lorpus, or a shumpus.", "fol": "(jompus(Stella) | lorpus(Stella) | shumpus(Stella))", "prediction": ["all x.(Stella(x) -> (Jomes(x) | Throat(x) | Scallop(x) | Snompus(x)))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "[Stella,Jimpus,Lorpus,Shumpus]", "(Jompus(Stella) | Lorpus(Stella) | Humpus(Stella)))", "all x.(Solva(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "(exists x.(Stella(x) & (Jompus(x) | Lorpus(x) | Sthumpus(x))))", "all x.(Stella(x) -> (Jimpus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Moon(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "(Joke(Stella) | Lorpus(Stella)) | Humpus(Stella))"]}
{"id": "prontoqa_validation_333", "nl": "Each sterpus is a numpus and a yumpus and a zumpus.", "fol": "all x. (sterpus(x) -> (numpus(x) & yumpus(x) & zumpus(x)))", "prediction": ["all x.(Sterpus(x) -> (Est(x,numpus) & Est(x,yumpus) & Est(x,zumpus)))", "(all x,y) -> Numpus(x)) & (Yumpus(y) | Zumpus(y)))", "all x.(Sterpus(x) -> (numpus(x) & yumpus(x) & zumpus(x)))", "all x.(Sterpus(x) -> (Numpus(x) | Yumpus(x) | Zumpus(x)))", "all x.(Sterpus(x) -> (numpus(x) & yumpus(x) & zumpus(x)))", "all x.(Stern(x) -> (ListensTonumpus(x) & ListenToumpus(x)))", "all x.(Sterepus(x) -> (numpus(x) | yumpus(x!) | zumpus(x)))", "all x.(Starpus(x) -> (Zombie(x) & Numpus(x) & Yumpus(x) & Zumpus(x)))", "all x.(Sterpus(x) -> (Each(x) -> Numpus(x)) & exists yumpus(y) & exists z.(Zumpus(z) & -Zumpus))))", "all x.(Steerpus(x) -> (Numpus(x) & Yampus(x) & Zumpus(x)))", "all x.(Steerpus(x) -> (Numpus(x) & Yumpus(x) & Zumpus(x)))", "all x y z w.((Sterpus(x) & Numpus(y) & Yumpus(z)) -> (Esterpus(x) & Zurpus(w)))", "all x.(Sterpus(x) -> (Numpus(x) | Yumpus(x) | Zumpus(x)))", "all x.(Sterpus(x) -> (numpus(x) & yumpus(x) & zumpus(x)))", "all x.(Sterpus(x) -> (Numpus(x) | Yampus(x) | Zumpus(x)))", "exists x.(Sterpus(x) & Numpus(x) & Yampus(x) & Zumpus(x))"]}
{"id": "prontoqa_validation_334", "nl": "Sam is not a numpus and Sam is a jompus and Sam is a yumpus.", "fol": "(-numpus(Sam) & jompus(Sam) & yumpus(Sam))", "prediction": ["all x y z.((Sam(x) & Numpus(y) & Jompus(z) & Yompus(x)) -> -Numpus(x))", "all x y z.((Sam(x) & Numpus(y) & Jompus(z)) -> (-Numpus(x) & Jompus(x) & Yumpus(z)))", "(-numpus(Sam) & Jompus(Sam) & Yumpus(Sam))", "all x.((Sam(x) & -Numpus(x) & Jompus(x) & Yumpus(x)) -> -Nompus(x))", "(all x.((Sam(x) & -Number(x)) -> Jompus(x)) & ((Sam(x) & Youmpus(x)) -> Yumpus(x)))", "(all x.(Sam(x) -> Nompus(x)) & all y.(Jumpus(y) -> Nompus(y))) & all z.(Yumpus(z) -> Nompus(z)))", "exists x.(Sam(x) & -Numpus(x) & Jompus(x) & Yampus(x))", "all x y z.((Sam(x) & Numpus(x) & Jompus(y) & Yumpus(z)) -> (-Numpus(x) & Yompus(y)))", "(all x.(Sam(x) -> -Numpus(x)) & (Jompus(x) & Yumpus(x)))", "(all x.(Sam(x) -> -Numpus(x)) & (Sophism(x) | Sophism(x))) & (Sam(x) -> Yompus(x)))", "all x y z.((Sam(x) & Number(y) & Jompus(z)) -> -Numpus(x)-Jumpus(x))", "all x y z.((Sam(x) & Numpus(y) & Jompus(z)) -> (-(Numpus(x) | Jompus(z)) | Yumpus(z))))", "(all x.(Sam(x) -> -Numpus(x)) & all y.(Jompus(y) -> Yampus(y)))", "(all x.(Sam(x) -> -Nome(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Yumpus(x)))", "all x y.((Sam(x) & Numpus(y)) -> (-Numpus(x) & Jompus(y) & Yampus(z)))", "(all x.(Sam(x) -> -Numpus(x)) & ((Sam(x) & Jompus(x))) -> Yumpa(x)))"]}
{"id": "prontoqa_validation_335", "nl": "Everything that is a lempus, a lorpus, or a zumpus is a wumpus, an impus, and a yumpus.", "fol": "all x. ((lempus(x) | lorpus(x) | zumpus(x)) -> (wumpus(x) & impus(x) & yumpus(x)))", "prediction": ["all x.((Lempus(x) | Lorpus(x) | Zuppus(x)) -> (Umpus(x) & Imperative(x) & Yumpus(x)))", "all x.((Wumpus(x) | Imperator(x) | Yumpus(x)) -> (Lempus(x) | Lorpus(x) | Zumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Imperman(x) & Yampus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Issue(x) & Yumpus(x)))", "all x.((Lexus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Issue(x) & Yumpus(x)))", "all x.(((Lempus(x) | Lorpus(x) | Zumpus(x))) -> (Wumpus(x) | Ivory(x) | Yampus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Impossible(x) & Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Impossible(x) & Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Impossible(x) | Yampus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Imperium(x) & Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Imperator(x) & Yumpus(x)))", "all x.((Lempus(x) | Lopus(x) | Zumpus(x)) -> (Wumpus(x) & Impeccable(x) & Yampus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Implicator(x) & Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Implosive(x) & Yampus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Imperempted(x) | Yampus(x)))", "all x.((Lempus(x) | Lopus(x) | Zumpus(x)) -> (Wumpus(x) | Imperative(x) | Yumpus(x)))"]}
{"id": "prontoqa_validation_336", "nl": "Wren is a lempus.", "fol": "lempus(Wren)", "prediction": ["all x.(Wren(x) -> Lampus(x))", "Wren is a lempus.", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "ALL x.(Wren(x) -> MaskedLempus(x))", "all x.(Wren(x) - Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))"]}
{"id": "prontoqa_validation_337", "nl": "Wren is an impus.", "fol": "impus(Wren)", "prediction": ["(IsExplose(Wren) & IsForce(Wren))", "(Impossible(wren) -> Wren(w))", "all x.(Wren(x) -> Escalator(x))", "WrenIsImpact(w)", "all x.(Wren(x) -> Is(x))", "all x.(Wren(x) -> IsImpossible(x))", "Das Wren ist einImpact(Wren)", "all x.(Wren(x) -> Ideal(x))", "all x.(Wren(x) -> Irritable(x))", "all x.(Wren(x) -> Illegal(x))", "all x.(Wren(x) -> Defian(x))", "Das Wren ist einImpossible(w)", "All x.(Wren(x) -> Impossible(x))", "all x.(Wren(x) -> IsNoximate(x))", "all x.(Wren(x) -> Improvised(x))", "All x.(Wren(x) -> Illegal(x))"]}
{"id": "prontoqa_validation_338", "nl": "Everything that is a rompus or a vumpus or a zumpus is a lorpus, a brimpus, and a gorpus.", "fol": "all x. ((rompus(x) | vumpus(x) | zumpus(x)) -> (lorpus(x) & brimpus(x) & gorpus(x)))", "prediction": ["all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Voompus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Volumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Voompus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((RompusChloe(x) | VampusChloe(x) | ZumpusChloe(x)) -> (LorpusChloe(x) & BrimpusChloe(x) & GorpusChloe(x)))", "all x.((Rumpus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Tospus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_validation_339", "nl": "Sam is a rompus.", "fol": "rompus(Sam)", "prediction": ["all x.(Rompus(x) -> Sam(x))", "all x.(Sam(x) -> Rompus(x))", "(Rompus(Sam) & Eats(Sam,1))", "(Rampus(Sam) & Likes(Sam,Romes))", "Sam is Rommet(Sam).", "all x.(Sam(x) -> Rompus(x))", "all x.(Sam(x) -> Rimpe(x))", "all x.(Sam(x) -> Rompus(x))", "All x.(Rompus(x) -> Sam(x))", "Sam, also known as, (Rompus))", "all x.(Rompus(x) -> -Rompus(x))", "all x.(Rompus(x) -> Sam(x))", "all x.(Sam(x) -> Rompus(x))", "(Rompus(Sam) & Likes(Sam))", "all x.(Sam(x) -> Rompus(x))", "exists x.(Rompus(x) & Sam(x))"]}
{"id": "prontoqa_validation_340", "nl": "Sam is a gorpus.", "fol": "gorpus(Sam)", "prediction": ["all x.(Gorpus(x) -> Sam(x))", "all x.(Sam(x) -> Gorpus(x))", "all x.(Sam(x) -> Gorpus(x))", "all x.(Sam(x) -> Gorpus(x))", "all x.(Sam(x) -> Gorpus(x))", "(Gorpus(Sam) & Species(Sam) & Gorpus(Sam))", "all x.(Sam(x) -> Gorpus(x))", "(Gorpus(Sum) -> Gorpus(Sam))", "all x.(Sam(x) -> Gorpus(x))", "all x.(Sam(x) -> Gorpus(x))", "all x.(Sam(x) -> Gorpus(x))", "all x.(Sam(x) & Gorpus(x))", "all x.(Rosp(x) -> Gorpus(x))", "(Gorpus(Sam) & Giant(Sam))", "all x.(Sam(x) -> Gorpus(x))", "all x.(Sam(x) -> Gorpus(x))"]}
{"id": "prontoqa_validation_341", "nl": "Everything that is a lorpus, a sterpus, and a grimpus is a tumpus.", "fol": "all x. ((lorpus(x) & sterpus(x) & grimpus(x)) -> tumpus(x))", "prediction": ["all x.((Lorpus(x) | Sterpus(x) | Grapple(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumulus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & Steroid(x) & Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Steerpus(x) | Grimpus(x)) -> Tumulus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grumpus(x)) -> Tumpus(x))"]}
{"id": "prontoqa_validation_342", "nl": "Fae is not a tumpus, Fae is a dumpus, and Fae is a wumpus.", "fol": "(-tumpus(Fae) & dumpus(Fae) & wumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> Wumpus(x)))", "(all x.(Fae(x) -> -Tumpus(x)) & (Dumpus(x) | Wumpus(x))))", "(all x.(Fae(x) -> -Tumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> Wumpus(z))))", "(all x.(Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> Wumpus(x)))", "all x.((Fae(x) & -Tumpus(x)) -> (Supreme(x) & Dumpus(x) & Wumpus(x)))", "all x y z.((Fae(x) & Dumpus(y) & Wumpus(z)) -> (-Tumpus(x) & Dumpus(y) & Wumpus(z)))", "(all x.(Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> Wumpus(x)))", "(all x.(Fae(x) -> -Tumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> Wompus(z))))", "(all x.(Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> Wumpus(x)))", "all x y.((Fae(x) & Umbrella(y)) -> (-Tumpus(x) | Dumpus(x) | Wumpus(y)))", "(all x.(Eagle(x) -> -Tumpus(x)) & (Dumpus(x) -> Wampus(x)))", "(all x.(Tumpus(x) -> -Tumpus(x)) & (Dumpus(x) -> -Tumpus(x)) & (Wumpus(x) -> -Tumpus(x)))", "(all x.(Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> Wumpus(x)))", "all x y.((Fae(x) & Dumpus(y)) -> (-Tumpus(x) & -Wumpus(y)))", "(all x.(Fae(x) -> -Tumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> Wumpus(z)))", "(all x.(Fae(x) -> -Tumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> Wumpus(z))))"]}
{"id": "prontoqa_validation_343", "nl": "Fae is a lorpus.", "fol": "lorpus(Fae)", "prediction": ["(Lorpes(Fae) -> Throat(Fae))", "all x.(Fae(x) -> Lorpus(x))", "(Lorpus(fae))", "(Lorpus(Fae) & Thrive(Fae))", "all x.(Fae(x) -> Lorpus(x))", "all x.(Fae(x) -> Lorpus(x))", "(RainBody(Fae) & Lordpus(Fae))", "exists x.(Fae(x) & Lorpus(x))", "all x.(Fae(x) -> Lorpus(x))", "(Lorpus(Fae))", "all x.(Fae(x) -> Lorpus(x))", "(Lorpus(Fae) -> LivesIn(Fae))", "all x.(Fae(x) -> Llorpus(x))", "((Fae(f) & Floura(f)) -> Lynx))", "(Lorpus(Fae) & Lymphaea(Fae))", "all x.(Fae(x) -> Lorpus(x))"]}
{"id": "prontoqa_validation_344", "nl": "Fae is a sterpus.", "fol": "sterpus(Fae)", "prediction": ["all x.(Fae(x) -> Sterodus(x))", "all x.(Fae(x) -> Sterpus(x))", "all x.(Fae(x) -> Sterpus(x))", "(Sterpus(Fae) & Sterpus(Fae))", "all x.(Fae(x) -> Sterpus(x))", "all x.(Fae(x) -> Sterpus(x))", "all x.(Fae(x) -> Sterpus(x))", "all x.(Fae(x) -> Sterpus(x))", "all x.(Fae(x) -> Sterpus(x))", "all x.(Fae(x) -> Sterpus(x))", "(Streep(fae) & Species(fae))", "Fee is a sterpus.", "all x.(Fae(x) -> Sterepus(x))", "all x.(Fae(x) -> Sterepus(x))", "all x.(Fae(x) -> Sterpus(x))", "as of the year 2000.Fae(f) & Sterpus(f))"]}
{"id": "prontoqa_validation_345", "nl": "Fae is not a grimpus.", "fol": "-grimpus(Fae)", "prediction": ["all x.(Fae(x) -> -Grimpus(x))", "((Fae(f) & -Grimples(f)))", "(-Grimpus(Fae))", "-Fae(f) & Grimpus(f))", "-Grimpus(Fae)", "(Slumpus(Fae) & -Slumpus(Fae))", "No Grimpus.", "(Crue(Fae) & -Gruppus(Fae))", "(-Grimpus(face))", "Fae is notGrimpus(Fae)", "Fae -Grimpus(f)", "\u2013Grimpus(Fae)", "all x.(Fae(x) -> -Grimpus(x))", "all x.(Fae(x) -> -Grimpus(x))", "(-Grimpus(Fae))", "(all x.(Fae(x) -> -Grimpus(x)))"]}
{"id": "prontoqa_validation_346", "nl": "Lempuses are dumpuses and sterpuses and wumpuses.", "fol": "all x. (lempus(x) -> (dumpus(x) & sterpus(x) & wumpus(x)))", "prediction": ["all x.(Lempuse(x) -> (Dumpuse(x) & Sterpuse(x) & Humpuse(x)))", "all x.(Lempuse(x) -> (Dumpuse(x) & Sterpuse(x) & Urbine(x)))", "all x.(Lempuse(x) -> (Dumpsus(x) & Sterpuses(x) & Wumpuses(x)))", "all x.(Lempuse(x) -> (Dumpsuse(x) | Sterpuse(x) | Wumpuse(x)))", "all x.(Lempuse(x) -> (Dumpsus(x) & Sterpuse(x) & Wumpuse(x)))", "all x.(Lampuse(x) -> (Dumpuse(x) | Sterpuse(x) | Wumpuse(x)))", "all x.(Lempuse(x) -> (Dumpsuse(x) & Sterosis(x) & Wumpus(x)))", "all x.(Lempuse(x) -> (Dumpus(x) & Sterus(x) & Wumpus(x)))", "all x.(Lampuse(x) -> (Dumuse(x) | Sterpuse(x) | Humpuse(x)))", "all x.(Lempuse(x) -> (Dumpuse(x) | Sterpus(x) | Wumpuse(x)))", "all x y.((Lempuse(x) & Sterpuse(y)) -> (Dumpsus(x) | Sterpuse(y) | Wumpuse(y)))", "all x.(Lempuse(x) -> (Dumpsuse(x) & Steruse(x) & Wumpuse(x)))", "all x.((Lempuse(x) & Sterpuse(x)) -> (Dumpuse(x) | Termine(x) | Season(x)))", "all x.(Lempuse(x) -> (Sterpuse(x) | Wumpuses(x)))", "all x.(Lempuse(x) -> (Dumps(x) & Sterpuses(x) & Wumpuses(x)))", "all x.(Lempuse(x) -> (Dumpsue(x) & Sterpuse(x) & Wumpuse(x)))"]}
{"id": "prontoqa_validation_347", "nl": "Sam is a yumpus, a zumpus, or a sterpus.", "fol": "(yumpus(Sam) | zumpus(Sam) | sterpus(Sam))", "prediction": ["all x.(Sam(x) -> (Young(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "exists x.(Sam(x) & (Yumpus(x) | Zumpus(x) | sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sternpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Mercury(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | zumpus(x) | sterpus(x)))"]}
{"id": "prontoqa_validation_348", "nl": "Each tumpus is a rompus and a zumpus and a wumpus.", "fol": "all x. (tumpus(x) -> (rompus(x) & zumpus(x) & wumpus(x)))", "prediction": ["all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "all x.(Tumpus(x) -> (IsRompus(x) & IsZumpus(x) & IsWumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "exists x.(Tumpus(x) & Rompus(x) & Zumpus(x) & Wumpus(x))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "(all x.(Tumpus(x) -> Roman(x)) & all y.(Tompus(y) & -Tompus(z))) & all z.(Wumpus(z) -> Tompus(z)))", "all x.(Tumpus(x) -> (Marpus(x) & Zumpus(x) & Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) | Zumpus(x) | Wempus(x)))", "exists x.(Tumpus(x) & Rompus(x) & Zumpus(x) & Wumpus(x))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "all x.(Tumpus(x) -> ((Rompus(x) & Zumpus(x) & Wilmpus(x))))"]}
{"id": "prontoqa_validation_349", "nl": "Rex is a tumpus.", "fol": "tumpus(Rex)", "prediction": ["(Tumpus(Rex) & IsAtMolecule(Rex))", "all x.(Rex(x) -> Tumpus(x))", "Rex is Tumpus.", "(Tumpus(Rex))", "Rex is a tumpus.", "all x.(Rex(x) -> Tumpus(x))", "all x.(Rex(x) -> Tumpus(x))", "all x.(Rex(x) -> Tumpus(x))", "Rex is a tumpus.", "all x.(Rex(x) -> Tumpus(x))", "(Tumpus(Rex) | Pumpus(Rex)))", "all x.(Rex(x) -> Tumulus(x))", "Rex is a tumpus.", "all x.(Rex(x) -> Tumpus(x))", "all x.(Tumpus(x) -> Rex(x))", "Rex is a tumpus."]}
{"id": "prontoqa_validation_350", "nl": "Rex is a lempus, a jompus, or a rompus.", "fol": "(lempus(Rex) | jompus(Rex) | rompus(Rex))", "prediction": ["all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "(ALL x.(Rex(x) -> (Limpus(x) | Jompus(x) | Rompus(x))))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "(all x.(Rex(x) -> (Limpus(x) | Jompus(x) | Rompus(x))))"]}
{"id": "prontoqa_validation_351", "nl": "Everything that is a wumpus and a numpus and a brimpus is a lorpus, a jompus, and a rompus.", "fol": "all x. ((wumpus(x) & numpus(x) & brimpus(x)) -> (lorpus(x) & jompus(x) & rompus(x)))", "prediction": ["all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.(((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Romanpus(x)))", "all x.((TooMany(x) & Lumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))"]}
{"id": "prontoqa_validation_352", "nl": "Stella is a numpus.", "fol": "numpus(Stella)", "prediction": ["Stella is a Numpus.", "Stella (Numpus(Stella))", "Stella is Numpus.", "all x.(Stella(x) -> Numpus(x))", "Stella is a Numpus.", "Stella is Nash.", "Stella is Numpus(Stella)", "Z.(Stella(x) -> is Numpus(x))", "Stella ist ein Numbus.", "Stella is a Numpus(Solva)", "(Numpus(Stella) & LivesIn(Stella))", "exists x.(Stella(x) & Numpus(x))", "(Numpus(Solta))", "ALL X.((Stella(x) & Numpus(x)) -> TheOf(x,y))", "Stella is Numpus(Stella)", "Stella is Numpus(s)"]}
{"id": "prontoqa_validation_353", "nl": "Stella is a brimpus.", "fol": "brimpus(Stella)", "prediction": ["Stella is a brimpus.", "Stella is a Brimpus.", "all x.(Stella(x) -> Brimpus(x))", "Stella is a Brimpus.", "Stella is Brimpus.", "Stella is a Brimpus.", "Stella is a brimpus.", "Stella is brimpus.", "Stella is a BritishMusm.", "all x.(Stella(x) -> Brempus(x))", "(Brimpus(Stella) & Flamingo(Stella))", "Stella is Brimpus.", "Stella is a Brimpus.", "Stella is a Brimpus.", "all x.(Stella(x) -> Brimpus(x))", "Stella is a Brimpus."]}
{"id": "prontoqa_validation_354", "nl": "Stella is a jompus.", "fol": "jompus(Stella)", "prediction": ["Stella is Jompus.", "Stella is a jompus.", "all x.(Stella(x) -> Jompus(x))", "Stella is Jompus(Stella)", "Stella is a jompus.", "Stella is a Jompus.", "All x.(Stella(x) -> Jompus(x))", "Stella is a Jompus.", "Stella is a Jompus.", "Stella ist Jompus.", "Stella is a Jompus.", "Stella is a jompus.", "Stella is a Jompus.", "all x.(Stella(x) -> Jompus(x))", "all x.(Stella(x) -> Jompus(x))", "Stella is jompus."]}
{"id": "prontoqa_validation_355", "nl": "Each shumpus is a sterpus and a vumpus and a jompus.", "fol": "all x. (shumpus(x) -> (sterpus(x) & vumpus(x) & jompus(x)))", "prediction": ["all x.(Shumpus(x) -> (exists y.(Storpus(y) & Sterpus(x)) & exists z.(Vumpus(z) & Vimpus(z) & Volumpus(z) & Jompus(x))))", "all x.(Shumpus(x) -> (Sterpus(x) & -Vimpus(x) & -Jackpus(x)))", "all x.(Shumpus(x) -> (Sterus(x) & Vumpus(x) & Jompus(x)))", "(all x.(Shumpus(x) -> Sterpus(x)) & (Vimpus(x) | Jompus(x))))", "all x.(Shumpus(x) -> (Sterpus(x) | Vumpus(x) | Jompus(x)))", "all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "all x.((Shumpus(x) & Sterpus(x)) -> (Vumpus(x) & Jompus(x)))", "all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Shumpus(x) -> (Sterpus(x) & Vulmpus(x) & Jompus(x)))", "all x.(Shumpus(x) -> (sterpus(x) & -Vimpus(x) & -Jompus(x)))", "all x.(Shumpus(x) -> (Threspus(x) & Vumpus(x) & Jompus(x)))", "(all x.(Shumpus(x) -> Sterosc(x)) & (Vumpus(x) | Jompus(x))))", "all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Shumpus(x) -> (BelongsTo(x,Sterpus) & exists y.(Vimpus(y) & Has(x,y))))", "all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Shumpus(x) -> (Sterpus(x) | Vumpus(x) | Jompus(x)))"]}
{"id": "prontoqa_validation_356", "nl": "Stella is a yumpus and Stella is not a jompus and Stella is a gorpus.", "fol": "(yumpus(Stella) & -jompus(Stella) & gorpus(Stella))", "prediction": ["all x.(Grompus(x) -> (Yumpus(x) & -Jompus(x) & Gorpus(x)))", "(all x.(Yumpus(x) -> Stella)) & (Jompus(x) -> Stella)) & (Gorpus(x) -> Stella)))", "(all x.((Yumpus(x) & -Jompus(x)) -> Giorpus(x)))", "all x y.((Yumpus(x) & Jompus(y)) -> (Yumpus(x) & Gorpus(y)))", "(all x.(Stella(x) -> Yampus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Gorpus(x)))", "all x y.((Stella(x) & Yumus(x)) -> (NotJumpus(x) & NotGorpus(y)))", "all x y.((Stella(x) & Yumpus(x)) -> (-Jompus(x) & Gorpus(y)))", "all x y.((Stella(x) & Yupse(x) & NotJompus(x)) -> Gorpus(y))", "(all x.((Yumpus(x) & -Jimpus(x)) -> Stella)) & ((Yumpus(x) & -Jhompus(x)) -> Gorpus(x)))", "(all x.(Stella(x) -> Yupse(x)) (-Stella(x) & Jompus(x))) & all y.(Stella(y) -> Gorpus(y)))", "(all x y z.((Stella(x) & Yampus(z)) -> Awakens(x,y)) & ((Stella(x) & Jompus(y)) -> -Awakens(x,z))) & ((Stella(x) & Gorpus(x)) -> Awakens(x)))", "(all x.(Yumpus(x) & -Jimpus(x)) & (Gorpus(x)))", "(all x y.(Yumpus(x) & None(y)) & all z w.(Gorpus(z) & Stella(w)) -> Yompus(x)))", "(all x.(Yumpus(x) -> Stella)) & (Jompus(x) | Gorpus(x))))", "(all x.(Yumpus(x) -> StellaStella)) & all y.(Jimpus(y) -> StellaStella)) & all z.(Gorpus(z) -> StellaStella)))", "all x y z.((Stella(x) & Yumpus(y) & Stella(z)) -> (-Jimpus(z) & Gorpus(z)))"]}
{"id": "prontoqa_validation_357", "nl": "Stella is not a shumpus.", "fol": "-shumpus(Stella)", "prediction": ["All x.(Stella(x) -> -Shumpus(x))", "-Shumpus(Stella)", "Stella -Shumpus(Stella))", "(-Shumpus(Stella))", "Stella is not a shumpus.", "(-shumpus(Stella))", "no shumpus.", "Stella is not a shumpus.", "(-Shumpus(Stella))", "Stella is -Shumpus(Stella)", "Stella -shumpus(s)", "(-Shumpus(Stella))", "-Shumpus(Stella)", "Stella is notshumpus(Stella)", "Stella is -(Shumpus(Stella))", "(-Shumpus(Stella))"]}
{"id": "prontoqa_validation_358", "nl": "Dumpuses are lempuses.", "fol": "all x. (dumpus(x) -> lempus(x))", "prediction": ["all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpsus(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpus(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpus(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x y.((Dumpuse(x) & Lempuse(y)) -> Lempuse(x,y))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Leptuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))"]}
{"id": "prontoqa_validation_359", "nl": "Stella is not a lempus, Stella is a tumpus, and Stella is a grimpus.", "fol": "(-lempus(Stella) & tumpus(Stella) & grimpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y)) & all z.(Stella(z) -> Grimpus(z))))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y))) & all z.(Stella(z) -> Grimpus(z)))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y)) & all z.(Stella(z) -> Grimpus(z))))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y)) & all z.(Stella(z) -> Grimpus(z))))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y)) & all z.(Stella(z) -> Grimpus(z))))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y))) & all z.(Stella(z) -> Gruppus(z)))", "all x y z.((Stella(x) & NullLempus(y) & Tumpus(z)) -> (-Lempus(x) & Tumpus(x) & Grimpus(x)))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Humpus(y)) & all z.(Stella(z) -> Grappus(z))))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y)) & all z.(Stella(z) -> Grimpus(z))))", "all x y z.((Stella(x) & Lempus(y) & Tumulus(z)) -> (-Lempus(x) | Scarppus(x)))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tompus(y)) & all z.(Stella(z) -> Gruppus(z))))", "(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Grimpus(x)))", "(-Lempus(Stella) & -Tumpus(Stella) & -Scrampus(Stella))", "(all x.(Stella(x) -> -Lempus(x)) & (Shadow(x) -> Tumpus(x)) & (Shadow(x) -> Grimpus(x)))", "exists x.(Stella(x) & -Lempus(x) & Tumpus(x) & Gruppus(x))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Mump(y))) & all z.(Stella(z) -> Grumpus(z))))"]}
{"id": "prontoqa_validation_360", "nl": "Stella is a lorpus, Stella is a shumpus, or Stella is not a dumpus.", "fol": "(lorpus(Stella) | shumpus(Stella) | -dumpus(Stella))", "prediction": ["exists x.(Lady(x) & (Shumpus(x) | -Dumpus(x)))", "all x.((Lorpus(x) | Humpus(x)) | -Dumpus(x)) -> Stella(x))", "all x y z.((Stella(x) & Lorpus(x) & Stella(y) & Humpus(z)) | (Stella(y) & -Dumpus(y))))", "(all x y z.((Stella(x) & Lorpus(y)) | (Stella(z) & Humpus(z)))) -> (Lorpus(x,y) | Shumpus(z,z) | -Dumpus(z,x))))", "(all x.(Stella(x) -> (Lorpus(x) | Shumpus(x))) | -Dumpus(x)))", "all x.((Stilla(x) -> (Lorpheus(x) | Shumpus(x) | -Dumpus(x)))", "(all x.(Stella(x) -> Lorpus(x)) | (Stella(x) -> Humpus(x))) | (Stella(x) -> -Dumpus(x))))", "(all x.(Lorpus(x) | Humpus(x))) | (-Dumpus(x))))", "(all x.(Stella(x) -> isLorpus(x)) | (Stella(x) -> (isShumpus(x) | -Stella(x)))))", "(all x.(Lorpus(x) | Humpus(x) | -Dumpus(x)))", "exists x.(Stella(x) & ((Lorpus(x) & Stella(x)) | -Dumpus(x))))", "(all x.(Lorpus(x) | Shumpus(x) | -Dumpsus(x)))", "all x.((Stella(x) & Lorpus(x) & Shumpus(x)) | -Dumpus(x))", "all x.(Stella(x) -> (Lorpus(x) | Shumpus(x) | -Dumpus(x)))", "(all x.(Lorph(x) | Shumpus(x)) & (Dumpus(x) | -Dumpus(x)))", "(all x.(Stella(x) -> Lorpus(x)) & (Stella(x) -> Humpus(x)) | (Stella(x) -> -Dumpus(x))))"]}
{"id": "prontoqa_validation_361", "nl": "Each lorpus is a numpus, a vumpus, and a tumpus.", "fol": "all x. (lorpus(x) -> (numpus(x) & vumpus(x) & tumpus(x)))", "prediction": ["all x.(Lorpus(x) -> (Number(x) | Vampire(x) | Pumpus(x)))", "all x.(Lorpus(x) -> (Nompus(x) & Vumpus(x) & Tumpus(x)))", "all x.(Lorpus(x) -> (Number(x) | Vumpus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) | Umpus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (Nompus(x) | Vumpus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) & Vumpus(x) & Tumpus(x)))", "all x.(Lorpus(x) -> (Number(x) & Voompus(x) & Tumpus(x)))", "all x.(Lorpus(x) -> (Umpus(x) & Vacus(x) & Tumpus(x)))", "all x.(Lorpus(x) -> (Numerus(x) | Vumpus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (numpus(x) | vumpus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (Nompus(x) | Vumpus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) | Vumpus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) & Vampus(x) & Tumulus(x)))", "all x.(Lorpus(x) -> (Numpus(x) | Vumpus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) | Vumbus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) | Vumpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_validation_362", "nl": "Everything that is a yumpus, a grimpus, and a brimpus is not a numpus.", "fol": "all x. ((yumpus(x) & grimpus(x) & brimpus(x)) -> -numpus(x))", "prediction": ["all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -numpus(x))", "all x.((Four(x) & (Yumpus(x) | Grimpus(x) | Britpus(x))) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> NonNumpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.(((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))"]}
{"id": "prontoqa_validation_363", "nl": "Max is a yumpus.", "fol": "yumpus(Max)", "prediction": ["(Yumpus(Max)", "(Yumpus(Max))", "All x.(Max(x) -> Yumpus(x))", "all x.(Max(x) -> Yumpose(x))", "Max is yumpus.", "all x.(Max(x) -> Yampus(x))", "all x.(Max(x) -> Yampus(x))", "All x.(Max(x) -> Yumpus(x))", "all x.(Max(x) -> Yumpus(x))", "(Yumpus( Max))", "(Yumpus(Max)", "(Yumpus(Max) & Breeds(Max))", "(Yumpus(Max)).", "all x.(Matthew(x) -> Yampus(x))", "(Yumpus(Max) | YUMPUT(Max))", "Max is yumpus."]}
{"id": "prontoqa_validation_364", "nl": "Max is a grimpus.", "fol": "grimpus(Max)", "prediction": ["all x.(Max(x) -> Grimpus(x))", "MX.(Grampus(Max))", "(Smoothpus(Max))", "all x.(Max(x) -> Gruppus(x))", "all x.(Max(x) -> Grimpus(x))", "Max is a Grumpus.", "(Cruelpus)", "Max is Grimpus.", "all x.(Max(x) -> Grimpus(x))", "(Cruelpus(Max))", "All x.(Max(x) -> Grimpus(x))", "(Scrappus(Max) + Aurism(Max))", "all x.(Max(x) -> Grimpus(x))", "-Strillpus(Max)", "(Grimpus(Max) -> ReverseSurface(Max))", "all x.(Max(x) -> Grimpus(x))"]}
{"id": "prontoqa_validation_365", "nl": "Max is a brimpus.", "fol": "brimpus(Max)", "prediction": ["(Barmpus(Max))", "All x.(Max(x) -> Brimpus(x))", "all x.(Max(x) -> Brimpus(x))", "all x.(Max(x) -> Brimpus(x))", "(Brimpus(Max) -> Brimpus(Max))", "(Brimpus(Max) & Brempus(Max))", "all x.(Max(x) -> Brimpus(x))", "all x.(Max(x) -> Brimpus(x))", "Max is a BritishPuff (Brimpus)", "all x.(Max(x) -> Brimpus(x))", "Max,shortybeard.", "All x.(Max(x) -> Brimpus(x))", "(Brompus(Max))", "All x.(Max(x) -> Brimpus(x))", "all x.(Max(x) -> Brimpus(x))", "all x.(M Max(x) -> Brimpus(x))"]}
{"id": "prontoqa_validation_366", "nl": "Max is not a lorpus.", "fol": "-lorpus(Max)", "prediction": ["is notLorpus.", "(-Lorpus(Max))", "(Max(Max) & -Lorpus(Max))", "is Max(x) & -Lorpus(x))", "(-Lorpus(Max))", "(-Lorpus(Max))", "-MatthewLorpus(Max)", "(-Lorpus(Max))", "all x.(Max(x) -> -Lorpus(x))", "(-Lorpus(Max))", "all x.(Max(x) -> -Lorpus(x))", "(-Lorpus(Max))", "-Lorpus(Max)", "(-Lorpus(Max) & Hard toFind(Max))", "(-Lorpus(Max))", "(-Lorpus(Max))"]}
{"id": "prontoqa_validation_367", "nl": "Everything that is a lorpus and a numpus and a brimpus is a vumpus.", "fol": "all x. ((lorpus(x) & numpus(x) & brimpus(x)) -> vumpus(x))", "prediction": ["all x.(((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Nompus(x) & Brimpus(x)) -> Voompus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Merumpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brampus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brumpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))"]}
{"id": "prontoqa_validation_368", "nl": "Shumpuses are gorpuses.", "fol": "all x. (shumpus(x) -> gorpus(x))", "prediction": ["all x.(Shumpuse(x) -> Gorpus(x))", "all x.(Shampus(x) -> Gorpuse(x))", "all x.(Shoumpuse(x) -> Gorpuse(x))", "all x.(Shumpuse(x) -> Gorpuse(x))", "all x.(Shupus(x) -> Gorpus(x))", "all x.(Shutus(x) -> Gorpuse(x))", "all x.(Shupuse(x) -> Gorpus(x))", "all x.(Shupuse(x) -> Gorpuse(x))", "all x.(Shuppus(x) -> Gorpus(x))", "all x.(Shubpose(x) -> Gorpuse(x))", "all x.(Shupuse(x) -> Gorpuse(x))", "all x.(Shupuse(x) -> Gorpuse(x))", "all x y.((Shutup(x) & Gorpus(y)) -> IsDallas(x,y))", "all x.(Shampoo(x) -> Gorpus(x))", "all x.(Shupus(x) -> Gorpuse(x))", "all x.(Shumpuse(x) -> Gorpuse(x))"]}
{"id": "prontoqa_validation_369", "nl": "Every gorpus is not a vumpus.", "fol": "all x. (gorpus(x) -> -vumpus(x))", "prediction": ["all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Voompus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vubis(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vimpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))"]}
{"id": "prontoqa_validation_370", "nl": "Sam is a shumpus.", "fol": "shumpus(Sam)", "prediction": ["all x.(Sam(x) -> Shumpus(x))", "all x.(Sam(x) -> Humpus(x))", "all x.((Sam(x) & Humpus(x)) -> IsTheMammal(x))", "(Sam,shumpus)", "all x.(Sam(x) -> Shumpus(x))", "all x.(Sam(x) -> Humpus(x))", "all x.(Sam(x) -> Humptuse(x))", "Sam is Shumpus.", "all x.(Sam(x) -> Humpus(x))", "all x.(Sam(x) -> Humpback(x))", "all x.(Shumpus(x) -> Sam(x))", "(Shumpus(sam) & -Shumpback(sam))", "all x.(Sam(x) -> Humpback(x))", "all x.(Sam(x) -> Humptus(x))", "all x.(Sam(x) -> Shumpus(x))", "I can identify Sam as a Shumpus."]}
{"id": "prontoqa_validation_371", "nl": "Sam is a lorpus.", "fol": "lorpus(Sam)", "prediction": ["all x.(Sam(x) -> Loompus(x))", "all x.(Sam(x) -> IntoLorpus(x))", "all x.(Lorpus(x) -> Sam(x))", "all x.(Sam(x) -> Lorpus(x))", "all x.(Lorph(x) -> Sam(x))", "all x.(Sam(x) -> Lorpus(x))", "(Lorpus(Sam) & LeastSam(Sam))", "all x.(Sam(x) -> Lorpus(x))", "all x.(Lorpus(x) -> Sam(x))", "all x.(Lorpus(x) -> Sam(x))", "all x.(Sam(x) -> Lorpus(x))", "all x.(Sam(x) -> Llorpus(x))", "all x.(Sam(x) -> Florus(x))", "all x.(Lorpus(x) -> Sam(x))", "all x.(Larpus(x) -> Sam(x))", "all x.(Sam(x) -> Lorpus(x))"]}
{"id": "prontoqa_validation_372", "nl": "Everything that is a rompus and a yumpus and a lempus is a gorpus, a sterpus, and a zumpus.", "fol": "all x. ((rompus(x) & yumpus(x) & lempus(x)) -> (gorpus(x) & sterpus(x) & zumpus(x)))", "prediction": ["all x.((Rompus(x) & Yampus(x) & Lempus(x)) -> (Gorpus(x) & Sterepus(x) & Zumpus(x)))", "all x y.((Rompus(x) & Yumpus(y) & Lempus(x)) -> (Gorpus(y) | Sterpus(y) | Zumpus(y)))", "all x.((IsRompus(x) & IsYumpus(x) & IsLempus(x)) -> (Gorpus(x) & IsSterepus(x) & IsTompus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Yupus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yampus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Kumpus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yampus(x) & Lempus(x)) -> (Gorpus(x) | Sterepus(x) | Zumpus(x)))", "all x.((Rompus(x) | Yampus(x) | Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) | Steroid(x) | Zumpus(x)))", "all x.((Rompus(x) & Yompus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x y z.((Rompus(x) & Yumpus(y) & Lempus(z)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yukpus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) | Yumpus(x) | Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))"]}
{"id": "prontoqa_validation_373", "nl": "Max is a rompus.", "fol": "rompus(Max)", "prediction": ["(Rompus(Max)", "(Rompus(Max)", "all x.(Max(x) -> Rompus(x))", "(Rompus(Max) & -Rompus(Max))", "(Rompus(Max))", "All x.(Max(x) -> Rompus(x))", "(Rompus(Max))", "-rompus(Max)", "all x.(Max(x) -> Rompus(x))", "Max.(rompus)", "All x.((Max(x) & Rimpus(x)) -> Cancel(x))", "(rompus(Max) & Has(Max))", "all x.(Max(x) -> Rompus(x))", "-Mum(Max) -> Romanose(Max))", "(rompus(Max) & Has(Max,rompus))", "(Romatose(Max))"]}
{"id": "prontoqa_validation_374", "nl": "Max is a lempus.", "fol": "lempus(Max)", "prediction": ["Max is a lempus.", "(Lenmpus(Max)", "(Lenus(Max) -> Lempus(Max))", "(Lempus(Max) -> Lempus(Max))", "(Lempus(Max) -> Lempus(Max))", "all x.(Max(x) -> Lempus(x))", "all x.(Max(x) -> Lempus(x))", "all x.(Max(x) -> Lempus(x))", "all x.(Max(x) -> Lempus(x))", "all x.(Matthew(x) -> Lempus(x))", "(Alter(Max) & Lempus(Max))", "(Lempus(Max)", "-Lempus(Max)", "all x.(Max(x) -> Lempus(x))", "Max is a Lempus.", "-Max (Limpus)"]}
{"id": "prontoqa_validation_375", "nl": "Everything that is a sterpus, an impus, or a vumpus is a lempus.", "fol": "all x. ((sterpus(x) | impus(x) | vumpus(x)) -> lempus(x))", "prediction": ["all x.((Worth(x) & (Sterpus(x) | Imperempt(x) | Vumpus(x))) -> Lempus(x))", "all x.((Sterpus(x) | IsImpos(x) | IsVumpus(x)) -> Lempus(x))", "all x.((Sterectus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impermiss(x) | Vumpus(x)) -> Lempus(x))", "all x.((Steerpus(x) | Imperative(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterepus(x) | IsImmersed(x) | IsVumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.(((Sterpus(x) | Imperempt(x) | Vumpus(x))) -> Lempus(x))", "all x.((Sterepos(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.((Storpus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.(((Sterepus(x) | Imperempted(x) | Vumpus(x))) -> Lempus(x))", "all x.((Esterpus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.((Steerpus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterepus(x) | Imperez(x) | Kumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))"]}
{"id": "prontoqa_validation_376", "nl": "Rex is a brimpus and a tumpus and an impus.", "fol": "(brimpus(Rex) & tumpus(Rex) & impus(Rex))", "prediction": ["all x.(Rex(x) -> (Brimpus(x) | Tumpus(x) | Impossible(x)))", "(all x.(Rex(x) -> Brimpus(x)) & (Tumpus(x) -> Issue(x)))", "(all x.(Rex) -> Brimpus(x)) & all y.(Tumpus(y) & Imperator(y)))", "all x.(Rex(x) -> (Brimpus(x) & Tumulus(x) & Imperator(x)))", "all x.(Rex(x) -> (Brimpus(x) & Tumulus(x) & Issue(x)))", "(all x.(Rex(x) -> Brimpus(x)) & all y.(Tumpus(y) -> Isoler(y)))", "(all x.(Rex(x) -> Brimpus(x)) & (Tumpus(x) & Impossible(x)))", "(all x.(Rex(x) -> Brimpus(x)) & exists y.(Tumpus(y) & exists z.(Illegal(z) & In(odd(z))) & exists w.(Fossil(w) & In(x,y,z)))))", "all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & Issue(x)))", "(Brimpus(Rex) | Tompus(Rex) | Imperator(Rex)))", "exists x.(Rex(x) & Brimpus(x) & Tumpus(x) & Imperator(x))", "all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & Imperator(x)))", "all x.(Rex(x) -> (Brumpus(x) & Tumpus(x) & Impirator(x)))", "all x.(Rex(x) -> (Bimpus(x) & Tumpus(x) & Issue(x)))", "all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & Ilira(x)))", "(all x.(Rex(x) -> Brimpus(x)) & (Tumpus(x) -> Imperator(x)))"]}
{"id": "prontoqa_validation_377", "nl": "Rex is a lempus.", "fol": "lempus(Rex)", "prediction": ["Rex.", "all x.(Rex(x) -> Lempus(x))", "all x.(Rex(x) -> Lempus(x))", "All x.(Rex(x) -> Lempus(x))", "Rex is lempus.", "Rex is a Lempus.", "all x.(Rex(x) -> Lempus(x))", "Rex is a Lempus.", "Rex is Lempus(Rex)", "Rex. (Lempus(x) -> Lempus(x))", "Rex,lempus(x)", "Rex is a lempus.", "Rex ist Lempus(x) -> HasSkinny.", "Rex is a Lempus.", "Rex is Lempus(Rex)", "All x.(Rex(x) -> Lempus(x))"]}
{"id": "prontoqa_validation_378", "nl": "Tumpuses are zumpuses and impuses and yumpuses.", "fol": "all x. (tumpus(x) -> (zumpus(x) & impus(x) & yumpus(x)))", "prediction": ["all x.(Tumpus(x) -> (UsedBy(x,y) & Impossible(x) & Izpose(x) & Yumus(x)))", "(Zumpuses(TM) & Issues(TM) & Issues(TM) & Yampuses(TM))", "all x.(Tumpus(x) -> (Tompus(x) & Issue(x) & Yumpus(x)))", "all x.(Tumpus(x) -> (Austrace(x) & Implied(x) & Yampuse(x)))", "all x.(Tumpus(x) -> (Zumpuse(x) | Illegal(x) | Yumpuse(x)))", "all x.(Tumpus(x) -> (Sumpus(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x)))", "all x.(Tumpus(x) -> (Zumpus(x) & -Zumpus(x) & -Imperia(x) & -Yumpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) | Issue(x) | Yumpus(x)))", "all x y.((Tumpus(x) & Impossible(y)) -> (Timpuse(x) | Yampuse(y)))", "all x.(Tumpus(x) -> (Tompus(x) | Ipso(x) | Yumpus(x)))", "all x y z.((Tumpus(x) & Impose(y) & Yumpus(z)) -> (Tompus(x) | Impose(y) | Yumpus(y)))", "all x.(Tumpus(x) & (Sumpuse(x) | Issue(x) | Yumpuse(x)))", "all x.(Tumpus(x) -> (Dustus(x) | Izboles(x) | Yumpuses(x)))", "all x.(Tumpus(x) -> (Umpus(x) & Isol\u00e9(x) & Yumpus(x)))", "all x.(Tumpus(x) -> (Tommus(x) | Ivorus(x) | Yumpus(x)))", "all x.(Tumpus(x) -> (Zumpus(x) & Issue(x) & Yumpus(x)))"]}
{"id": "prontoqa_validation_379", "nl": "Alex is a tumpus.", "fol": "tumpus(Alex)", "prediction": ["all x.(Alex(x) -> Tumulus(x))", "all x.(Tumpus(x) -> Alex(x))", "all x.(Alex(x) -> Tumpus(x))", "Alex is tumpus.", "all x.(Alex(x) -> Tumulus(x))", "all x.(Alex(x) -> Tumpus(x))", "Alex (Tumpus)", "all x.(Tumpus(x) -> Alex(x))", "all x.(Alex(x) -> Tompkin(x))", "all x.(Alex(x) -> Tumpus(x))", "Alex (Tumpus(Alex))", "all x.(Alex(x) -> Tumpus(x))", "all x.(Alex(x) -> Tumpus(x))", "all x.(Alex(x) -> Tumulus(x))", "all x.(Alex(x) -> Tumpus(x))", "Alex is a tumpus."]}
{"id": "prontoqa_validation_380", "nl": "Alex is an impus or a wumpus or a gorpus.", "fol": "(impus(Alex) | wumpus(Alex) | gorpus(Alex))", "prediction": ["all x.(Alex(x) -> ((Impossible(x) | Wumpus(x) | Gorpus(x))))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Impact(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Issue(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Issue(x) | IsWumpus(x) | IsGorpus(x)))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Issue(x) | Iswumpus(x) | IsGorpus(x)))", "all x.(Alex(x) -> (Illegal(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Issue(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Impose(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Idea (x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Impossible(x) | Wompus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Osmorpus(x)))"]}
{"id": "prontoqa_validation_381", "nl": "Jompuses are sterpuses, dumpuses, and lempuses.", "fol": "all x. (jompus(x) -> (sterpus(x) & dumpus(x) & lempus(x)))", "prediction": ["all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> ((Sterpuse(x) | Dumpuse(x)) | Lempuse(x)))", "all x.(Jampuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sternpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sternpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.((Jompuse(x) & -(Sterpuse(x) | Dumpuse(x))) -> Lempuse(x))", "all x.(Jompuse(x) -> ((Sterectus(x) | Dumpuse(x)) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompus(x) -> (Sternus(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Steropuse(x) | Dumpuse(x) | Lempuse(x)))", "(exists x.(Jompuse(x) & Sterus(x)) & exists y.(Dumpuse(y) & Lempuse(y)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "(all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "(all x.(Jimpus(x) -> Sterpuse(x)) | all y.(Jimpus(y) & -Shumps(y))))"]}
{"id": "prontoqa_validation_382", "nl": "Alex is not a lempus and Alex is a numpus and Alex is a gorpus.", "fol": "(-lempus(Alex) & numpus(Alex) & gorpus(Alex))", "prediction": ["(all x.(Alex(x) -> -Limpus(x)) & (Alex(x) -> Numpus(x)) & (Alex(x) -> Gorpus(x)))", "(all x.(Alex(x) -> -Limpus(x)) & ((Alex(x) & -Limpus(x)) | (Alex(x) & Numpus(x)))) & ((Alex(x) & Gorpus(x))))", "(all x.(Alex(x) | None(x))) & ((Alex(x) | Alex(x))) -> None(x))) & ((Alex(x) & Alex(x)) -> Nompus(x)) & ((Alex(x) & Gorpus(x)) -> Gorpus(x))))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Numpus(y)) & all z.(Alex(z) -> Gorpus(z)))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z) & Gorpus(x)) -> -Lempus(x) & Numpus(x) & Gorpus(x))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Numpus(y) & All z.(Gorpus(z))))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Numpus(y))) & all z.(Alex(z) -> Gorpus(z))))", "all x y z.((Alex(x) & Numpus(y) & Gorpus(z)) -> (-Lempus(x) & Numpus(y) & Gorpus(z)))", "(all x.(Alex(x) -> -Limpus(x)) & ((Alex(x) & Numpus(x)) | (Alex(x) & Gorpus(x)))))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Numpus(y)) & all z.(Alex(z) -> Gorpus(z))))", "all x y z.((Alex(x) & Lempus(x) & Numpus(y) & Worpus(z)) -> (-Lempus(x) & Numpus(y) & Gorpus(z)))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (-lemma(x) & Nompus(x) & Gorpus(x)))", "(all x y.(Limpus(x) -> -Nompus(x)) & ALL z w.((Numpus(y) & Gorpus(z)) -> Gorpus(w)))", "(all x.(Alex(x) -> -Lempus(x)) & (Alex(x) -> Numpus(x)) & (Alex(x) -> Gorpus(x)))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Numpus(y)) & all z.(Alex(z) -> Gorpus(z)))", "all x y z.((Alex(x) & Lempus(x) & Numpus(y) & Gorpus(z)) -> (-Lempus(x) & Numpus(y) & Gorpus(z)))"]}
{"id": "prontoqa_validation_383", "nl": "Each tumpus is not a jompus.", "fol": "all x. (tumpus(x) -> -jompus(x))", "prediction": ["all x.(Tumpus(x) -> -Jimpus(x))", "all x.(Tumpus(x) -> -Jumpus(x))", "all x.(Tumpus(x) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jumpus(x))", "all x.(Tumpus(x) -> -Jimpus(x))", "all x.(Tumpus(x) -> -Joompus(x))", "all x.(Tumpus(x) -> -Jimpus(x))", "all x.(Tumpus(x) -> -Jimpus(x))", "all x.(Tumpus(x) -> -Jimpus(x))", "all x.(Tumpus(x) -> -Jimpus(x))", "all x.(Tumpus(x) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jompus(x))"]}
{"id": "prontoqa_validation_384", "nl": "Numpuses are jompuses.", "fol": "all x. (numpus(x) -> jompus(x))", "prediction": ["all x.(Numpuse(x) -> Jompuse(x))", "has a number of reminiscences (like jomoles(n) & -Jumpus(w)))", "all x.(Numpus(x) -> Jompuse(x))", "all x.(Numpus(x) -> Jompus(x))", "all x.(Numpus(x) -> Jompuse(x))", "all x.(Numpus(x) -> Jompus(x))", "all x.(Numptial(x) -> Jompuse(x))", "all x.(Numpuse(x) -> Jompuse(x))", "all x.(Numpuse(x) -> Jompuse(x))", "all x.(Numpus(x) -> Jupus(x))", "all x.(Numpus(x) -> Jompus(x))", "all x.(Numpus(x) -> Jumpus(x))", "all x.(Numpus(x) -> Jombus(x))", "all x.(Numpus(x) -> Jompuse(x))", "all x.(Numpuse(x) -> Jompuse(x))", "all x.(Numpoea(x) -> (jompuse(x) & Contains(x)))"]}
{"id": "prontoqa_validation_385", "nl": "Fae is a tumpus.", "fol": "tumpus(Fae)", "prediction": ["all x.(Fae(x) -> Tumpus(x))", "all x.(Fae(x) -> Tumus(x))", "all x.(Fae(x) -> Tumpus(x))", "(Tumpus(Fae) & Teardrop(Fae))", "all x.(Fae(x) -> Tumpus(x))", "all x.(Fae(x) -> Tumpus(x))", "is tumpus.", "(Tumpus(Fae))", "all x.(Fae(x) -> Tumpus(x))", "all x.(Fae(x) -> Tumpus(x))", "all x y.((Fae(x) & Tumulus(y)) -> Tumulus(x))", "all x.(Fae(x) -> Tumpus(x))", "all x.(Fae(x) -> Tumpus(x))", "all x.(Fae(x) -> Tumpus(x))", "all x.(Fae(x) -> Tumpus(x))", "all x.(Fae(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_386", "nl": "Fae is a lorpus, Fae is an impus, or Fae is not a numpus.", "fol": "(lorpus(Fae) | impus(Fae) | -numpus(Fae))", "prediction": ["(all x.(Fae(x) -> Lorpus(x)) | (Fae(x) -> Issuel(x)) | (Fae(x) -> -Numpus(x))))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> Imperator(x)) | (Fae(x) -> -Numpus(x))))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> Impossible(x)) | -Numpus(x)))", "(all x.(Fall(x) -> Loomis(x)) & (Fall(x) -> Ispos(x)) | (Fall(x) -> -numpus(x))))", "(all x.(Fae(x) -> Lompus(x))) & (Fae(x) -> Impermissible(x)) -- (-Numpus(x))))", "(all x.(Fae(x) -> Lepus(x)) | (Fae(x) -> Irreversible(x)) | (Fae(x) -> -Numpus(x))))", "all x.(Fae(x) -> (Lorpus(x) | Implicit(x) | -Numpus(x)))", "(all x.(Fae(x) -> Llorpus(x)) & (Fae(x) -> Isolator(x)) | (Fae(x) -> Nobus(x))))", "all x y z.((Fae(x) & Lorpus(x) & Fae(y) & Ambivalent(y)) | (Fae(z) & -Numpus(z))))", "all x y z.((Fae(x) & Lopus(x) & Fae(y) & Impossible(y)) -> ((Lorpus(x) | Impossible(y) | -Numpus(z)))))", "exists x.(Fae(x) & ((Lorpus(x) & Fae(x)) | Erzoe\u00ae & -Nompus(x))))", "(all x.(Fae(x) -> Lorpus(x)) | (Immersion(x) | (-Numpus(x))))))", "(all x y.((Fae(x) & Lorpus(x)) | (Fae(y) & Impossible(y))) | -Numpus(y)))", "(all x y.((Fae(x) & Lieutarch(y)) -> Thrombosis(x)) | all z w.((Fae(z) & Impune(z)) & -numpus(w)) -> Nompus(z)))", "(all x.(Fae(x) -> Lorpus(x)) | (Fae(x) -> Ispos(x)) | (Fae(x) -> -Numpus(x))))", "all x.((Fae(x) & Lorompus(x)) | (Fil\u00e4s(x) | -Nompus(x))))"]}
{"id": "prontoqa_validation_387", "nl": "Sterpuses are not dumpuses.", "fol": "all x. (sterpus(x) -> -dumpus(x))", "prediction": ["all x.(Strerpus(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dupuse(x))", "all x.(Sterpus(x) -> NotDumpuse(x))", "all x.(Sterpus(x) -> -Dumpuse(x))", "-Dumpuse(sterpus)", "all x.(Sterpus(x) -> -Dumpuse(x))", "all x.(Stupid(x) -> -Dumpus(x))", "all x.(Sterpuse(x) -> -Dumpuse(x))", "all x.(Stupid(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dumpuse(x))", "all x.(Steerpuse(x) -> -Dumpsus(x))", "all x.(Sterpus(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dumpsus(x))", "all x.(Sterpus(x) -> -Dumpsuse(x))", "all x.(Stupid(x) -> -Dumpous(x))", "all x.(Sterpuse(x) -> -Dumpus(x))"]}
{"id": "prontoqa_validation_388", "nl": "Everything that is a vumpus or a grimpus or a yumpus is a dumpus.", "fol": "all x. ((vumpus(x) | grimpus(x) | yumpus(x)) -> dumpus(x))", "prediction": ["all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumps(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yukusu(x)) -> Dumpus(x))", "all x.(((Vumpus(x) | Grimpus(x) | Yampus(x))) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yuppus(x)) -> Dumpus(x))", "all x.((Vampus(x) | Gruppus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yampus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yubus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yampus(x)) -> Dumpus(x))", "all x.((IsVumpus(x) | IsGrimpus(x) | IsYumpus(x)) -> Dumpus(x))", "all x.((TallOfVumpus(x) | AllOfGrimpus(x) | AllOfYumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Kumpus(x)) -> Dumpus(x))"]}
{"id": "prontoqa_validation_389", "nl": "Stella is a tumpus and a gorpus and a sterpus.", "fol": "(tumpus(Stella) & gorpus(Stella) & sterpus(Stella))", "prediction": ["All x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> Tumpus(x)) & (Gorpus(x) -> Sterpus(x)))", "all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "all x y.((Stella(x) & Tompus(y)) -> (Tumpus(x) & Gorpus(x) & Steros (y)))", "all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> Tumpus(x)) & ((Gorpus(x) & -Sterpus(x)) -> Sterpus(x)))", "(Bottoms(Stella) | Gorpus(Stella) | Sterpus(Stella))", "(Tumpus(Stella) & Gorpus(Stella) & Sterpus(Stella))", "all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "all x.(Stella(x) -> (Tumpus(x) & Worpus(x) & Sterpus(x)))", "all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterus(x)))", "((Tumpus(Stella) | Gorpus(stella)) | Sterpus(stella)))", "exists x.(Stella(x) & Tumpus(x) & Gorpus(x) & Sterepus(x))", "(all x.(Tumpus(x) & -Both(x) -> Stella(x)) & (Gorpus(x) & Spider(x)))", "all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterepus(x)))", "all x.((Stella(x) & Tumpus(x) & Gorpus(x) & Sterpus(x)) -> (Tumpus,Fish)))"]}
{"id": "prontoqa_validation_390", "nl": "Every brimpus is a tumpus, a zumpus, and a lorpus.", "fol": "all x. (brimpus(x) -> (tumpus(x) & zumpus(x) & lorpus(x)))", "prediction": ["all x y z.((Brumpus(x) & Tumpus(y) & Zumpus(z) & Roose(z)) -> (Tumpus(y) & -Tompus(z) & -Tompus(z) & -Lorpus(z)))", "all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brimpus(x) -> exists y.(Tumpus(y) & Zumpus(x) & Lorpus(z)))", "all x.(Brimpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "(all x.(Bimpus(x) -> Tumpus(x)) & all y.(Brompus(y) -> Zumpus(y) & all z.(Brompus(z) -> Lorpus(z))))", "(all x.(Brimpus(x) -> Tumpus(x)) & all y.(Tompus(y) -> Zumpus(y)) & all z.(Lorpus(z) -> Florpus(z)))", "(all x.(Brumpus(x) -> Tumpus(x)) & all y.(Tompus(y) -> Zumpus(y)) & all z.(Lorpus(z) -> Lemur(z)))", "all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Loperpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_validation_391", "nl": "Stella is a lempus, Stella is a dumpus, and Stella is not a lorpus.", "fol": "(lempus(Stella) & dumpus(Stella) & -lorpus(Stella))", "prediction": ["(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> Dumpus(x)) & -Lorpus(x)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> Dumpus(x)) & -Lorpus(x)))", "all x.((Stella(x) & Lempus(x)) -> (Dumpus(x) & -Lorpus(x)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> Dumpus(x)) & (Stella(x) -> -Lorpus(x)))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> Dumpus(y)) & -Heruppus(y)))", "(Lemme(Stella) | Dumpus(Stella)) | -Lorpus(Stella))).", "(all x.(Lempus(x) -> StellaPumpus(x)) & (Dumpus(x) -> StellaPumpus(x)) & -Lorpus(x)))", "(all x.(Stella(x) -> LEMPUSH(x)) & (Stella(x) -> Dumpus(x)) & -Lorpus(x)))", "(all x.(Gabriel(x) -> Lempus(x)) & (Dumps(x) & -Lorpus(x)))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> Dumpus(y)) & all z.(Stella(z) -> Loupat(z))))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> Dumpus(y)) & all z.(Stella(z) -> -Lorpus(z))))", "(all x.((Stella(x) & Lempus(x)) -> Dumpus(x)) & all y.((Stella(y) & -Lorpus(y)) -> Flourish(y)))", "(all x y z.(Lempus(x) -> Stella(x)) & (Dumpus(y) -> Stella(z))) & (Lorpus(z) -> Stella(z)))", "all x.((Apologete(x) & Lempus(x)) -> Dumpus(x)) & -Lorpus(x))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> Dumpus(x)) & (Stella(x) -> -Lorpus(x))))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> Dumpus(x)) & (Stella(x) -> -Lorpus(x))))"]}
{"id": "prontoqa_validation_392", "nl": "Everything that is a tumpus or an impus or a lempus is a brimpus and a rompus and a sterpus.", "fol": "all x. ((tumpus(x) | impus(x) | lempus(x)) -> (brimpus(x) & rompus(x) & sterpus(x)))", "prediction": ["all x.((Rompus(x) & Sterpus(x)) -> (Tumpus(x) | IsIs(x) | IsLomex(x)))", "all x.(((Tumpus(x) | Impossible(x) | Lempus(x))) -> (Brimpus(x) & Thorpus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Imperia(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | IsImpulse(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Imperium(x) | Lempus(x)) -> (Brumpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Imperempt(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.(((Tumpus(x) | Imperator(x) | Lempus(x))) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "(all x.(Tumpus(x) | Imperempt(x) | Lempus(x))) -> Brimpus(x)) & (Rompus(x) & -Sterpus(x)))", "all x.((Tumpus(x) | Imperator(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Is(x,Illuminates(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Imperator(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Steroid(x)))", "all x.((Tumpus(x) | Imperator(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | ImpossibleOrLempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Impress(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Idlemann(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))"]}
{"id": "prontoqa_validation_393", "nl": "Stella is a lempus.", "fol": "lempus(Stella)", "prediction": ["Stella is a Lempus.", "Stella is a Lempus.", "Stella is a lempus.", "Stella is a lempus.", "Stella is a lempus.", "Stella is Lempus(Stella)", "Stella (Lempus)", "(Lempus(Stella) & Lempus(Stella))", "Stella is a lempus.", "(Lempus(Stella)", "Stella is a lempus.", "Stella (Lempus)", "Stella is Lempus(Stella)", "Stella is a lempus(s)", "all x.(Alto(x) -> Lempus(x))", "Stella is a lempus."]}
{"id": "prontoqa_validation_394", "nl": "Stella is a rompus.", "fol": "rompus(Stella)", "prediction": ["Stella is Rompus(Stella)", "all x.(Stella(x) -> Rompus(x))", "Stella is a rompus.", "Plutonus(Stella)", "Stella is a rompus.", "Stella is Rompus(Stella)", "Stella is rompus.", "Stella is a rompus.", "Stella is a rompus.", "Stella is a Rompus.", "Stella is a Rompus(Stella)", "Stella is a Rhopus.", "Stella is a Rompus.", "Stella is Rrompus.", "Stella is a rompus.", "all x.(Stella(x) -> Rompus(x))"]}
{"id": "prontoqa_validation_395", "nl": "Tumpuses are lempuses, dumpuses, and numpuses.", "fol": "all x. (tumpus(x) -> (lempus(x) & dumpus(x) & numpus(x)))", "prediction": ["all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumulus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpe(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumulus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpuse(x) -> ((Lempuse(x) | Dumpuse(x) | Numpuse(x))))", "all x.(Tumpus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumulus(x) -> (Legus(x) | Dumpuse(x) | Numpuse(x)))", "(all x.(Thumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x))))", "all x.(Tumpuse(x) -> (Lemme(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumulus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))"]}
{"id": "prontoqa_validation_396", "nl": "Wren is a tumpus.", "fol": "tumpus(Wren)", "prediction": ["all x.(Wren(x) -> Humpback(x))", "all x.(Wren(x) -> (Tumpus(x) & LivesIn(x,y)))", "all x.(Wren(x) -> Tumpus(x))", "(Tumpus(Wren) & Breeds(Wren,2))", "all x.(Wren(x) -> Tumpus(x))", "(Tumpus(Wren) -> Tumpus(Wren))", "all x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))", "All x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Totumpus(x))", "all x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))", "all x y.((Wren(x) & Tumpus(y)) -> Tough(x))", "all x.(Wren(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_397", "nl": "Wren is a yumpus, a lorpus, or a dumpus.", "fol": "(yumpus(Wren) | lorpus(Wren) | dumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "(All x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x y.((Wren(x) & (Yumpus(x) | Lorpus(x) | Dumpus(x))) -> Frog(x))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_validation_398", "nl": "Everything that is a wumpus, a lorpus, or an impus is a rompus.", "fol": "all x. ((wumpus(x) | lorpus(x) | impus(x)) -> rompus(x))", "prediction": ["all x.((Wumpus(x) | Lorpus(x) | Impossible(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Imperator(x)) -> Rombus(x))", "all x.((Wumpus(x) | Throat(x) | Isolator(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Arabic(x) & (Wumpus(x) | Loomis(x) | Impossible(x))) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Wempus(x) | Lordpus(x) | Impeccable(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Impossed(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Impermant(x)) -> Rompus(x))", "all x.((Wumpus(x) | Flourpus(x) | Impossible(x)) -> Rompus(x))", "all x.((Wumpus(x) | Loompus(x) | Impressionist(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Impossible(x)) -> Rompus(x))", "all x.((Wumpus(x) | Locus(x) | IsIsIsIs(x)) -> Rompus(x))"]}
{"id": "prontoqa_validation_399", "nl": "Wren is a lorpus and a vumpus and a jompus.", "fol": "(lorpus(Wren) & vumpus(Wren) & jompus(Wren))", "prediction": ["all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "(All x.(Wren(x) -> Loomis(x)) & (Vumpus(x) | Jompus(x))))", "all x.(Warn(x) -> (Lorpus(x) & Vubis(x) & Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Voompus(x) & Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Vukpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Lorp(x) & Vumpus(x) & Jompus(x)))", "(Lorpus(Wren) & Vumpus(Wren) & Jompus(Wren))", "all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "(all x.(Wren(x) -> Lorpus(x)) & all y.(Vumpus(y) & -Jompus(y))))", "all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "all x y z.((Wren(x) & Lorpus(y) & Vempus(z)) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & -Vimpus(x) & -Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Volumpus(x) & Jompus(x)))"]}
{"id": "prontoqa_validation_400", "nl": "Everything that is a zumpus or a shumpus or a vumpus is a sterpus.", "fol": "all x. ((zumpus(x) | shumpus(x) | vumpus(x)) -> sterpus(x))", "prediction": ["all x.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Zimmerpus(x) | Humpus(x) | Vampus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Steroid(x))", "all x.((Tompus(x) | Humpus(x) | Vuspus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Voompus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Humpus(x) | Novpus(x))) -> Sterpus(x))", "all x.(((Zumpus(x) | Humpus(x) | Vumpus(x))) -> Sterpus(x))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Thumpus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))"]}
{"id": "prontoqa_validation_401", "nl": "Max is a sterpus, a vumpus, and a jompus.", "fol": "(sterpus(Max) & vumpus(Max) & jompus(Max))", "prediction": ["(Affiliates(Max) -> (Sterus(Max) | Volumpus(Max) | Jompus(Max)))", "(All x.(Max(x) -> Sterpus(x)) & (Vumpus(x) | Jompus(x))))", "(Sterpus(Max) | Vumpus(Max) | Jompus(Max))", "all x.(MinMax(x) -> (Steroid(x) & Vampi(x) & Jompus(x)))", "all x.(Max(x) -> (Sterpus(x) | Vumpus(x) | Jompus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Vumpus(y) & -HalfWormpus(y))))", "(RateMex(Max) -> (Sternus(Max) & Vumpus(Max) & Jompus(Max)))", "all x.(Max(x) -> (Sternus(x) & Vumpus(x) & Jompus(x)))", "all x.(Max(x) -> ((Sterpus(x) | Vumpus(x)) & Jompus(x)))", "(All x.(Max(x) -> Sterpus(x)) & All y.((Max(y) & -Sterpus(y)) -> Vumpus(y)) & All z.(Max(z) -> Jompus(z))))", "all x.(Max(x) -> (Steerpus(x) | Vumpus(x) | Jompus(x)))", "(Sterpus(Max) | Voompus(Max) | Jompus(Max))", "(All x.(Max(x) -> Sterpus(x)) & All y.(Vumpus(y) & All z.(Jompus(z)) -> Sterpus(x)))", "(Craft(Max) & Stratos(Max) & Voompus(Max) & JOmpus(Max))", "all x y z.((Max(x) & Sterpus(y) & Vumpus(z)) -> (Esterpus(x) & Estrpus(y) & Estrpus(z) & Estrpus(y) & Estrpus(z)))", "all x.(Max(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))"]}
{"id": "prontoqa_validation_402", "nl": "Max is a sterpus.", "fol": "sterpus(Max)", "prediction": ["(Sterpus(Max))", "(Steroid(Max))", "all x.(Max(x) -> Steroid(x))", "(Estrus(Max) & Steroid(Max))", "all x.(Max(x) -> Sterosensis(x))", "all x.(Max(x) -> Sterpus(x))", "Max (-Sterpus(max))", "(Sterpus(Max) | Sterpus(Max))", "all x.(Max(x) -> Sterpus(x))", "all x.(Max(x) -> Sterpus(x))", "all x.(Max(x) -> Sterpus(x))", "all x.(Max(x) -> Sterpus(x))", "(Steerpus(Max) & Sterus(Max) & Detonated(Max))", "all x.(Max(x) -> Sterpus(x))", "-((Max(Max) & Sterpus(Max)))", "(Max(Mattres) & Sterpus(Max))"]}
{"id": "prontoqa_validation_403", "nl": "Everything that is a lorpus or a brimpus or a grimpus is not a lempus.", "fol": "all x. ((lorpus(x) | brimpus(x) | grimpus(x)) -> -lempus(x))", "prediction": ["all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x))) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorph(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))"]}
{"id": "prontoqa_validation_404", "nl": "Every rompus is a shumpus and a lempus and a dumpus.", "fol": "all x. (rompus(x) -> (shumpus(x) & lempus(x) & dumpus(x)))", "prediction": ["all x.(Rompus(x) -> exists y.(Shumpus(y) & Lempus(y) & Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "all x y.((Rompus(x) & Shumpus(y)) -> (Limpus(x) & Dumpus(x)))", "(all x.(Rompus(x) -> Humpus(x)) & all y.(Lempus(y) -> Dumpus(y)))", "(all x.(Rompus(x) -> Humpus(x)) (all y.(Rompus(y) & Humpus(x)) -> Lempus(y)) & (Rompus(y) -> Dumpus(y))))", "all x.(Rompus(x) -> (Shumpus(x) | Lempus(x) | Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "(all x.(Rompus(x) -> Shumpus(x)) & all y.(Lempus(y) & -Dumpus(y)))", "All x.(Rompus(x) -> ((Shumpus(x) | Lempus(x) | Dumpus(x))))", "(all x.(Rompus(x) -> Humpus(x)) & all y.(Lempus(y) & Humus(y))))", "all x.(Rompus(x) -> (Thumpus(x) & Lempus(x) & Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) | Lempus(x) | Dumpus(x)))", "(all x.(Rompus(x) -> Humpus(x)) & all y.(Lempus(y) -> Dumpus(y)))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))"]}
{"id": "prontoqa_validation_405", "nl": "Fae is a brimpus.", "fol": "brimpus(Fae)", "prediction": ["all x.(Fae(x) -> Brimpus(x))", "(Brimpus(Fae) & British(Fae))", "all x.(Fae(x) -> Brimpus(x))", "all x.(Fae(x) -> Brimpus(x))", "(Brumpus(Fae))", "all x.(Fae(x) -> Brimpus(x))", "all x.(Fae(x) -> Brimpus(x))", "(Brimpus(Fae) -> Brimpus(Fae))", "all x.(Fae(x) -> Brimpus(x))", "infamy.(Fae,brumpus)", "all x.(Fae(x) -> Brimpus(x))", "(Brampus(Fae))", "(Brimpus(Fae) & Brempus(Fae))", "all x.(Fae(x) -> Brimpus(x))", "all x.(Fae(x) -> Brimpus(x))", "all x.(Fae(x) -> Blimpus(x))"]}
{"id": "prontoqa_validation_406", "nl": "Fae is not a rompus.", "fol": "-rompus(Fae)", "prediction": ["-Rompus(Fae)", "Fae is not a Rompus(f)", "-Rompus(fae)", "-rompus(Fae)", "(-Rompus(Fae))", "(-Rompus(Fae))", "-Rompus(Fae)", "((Fae(f) & -Romepus(f)))", "the Fae(Fawn)", "(Rompus(Fae)", "(-Rompus(Fae))", "all x.(Fae(x) -> -Rompus(x))", "all x.(Fae(x) -> -Rompus(x))", "-Rompus(Fae)", "(-Rompus(Fae))", "*Fae(f) & -Rompus(f))"]}
{"id": "prontoqa_validation_407", "nl": "Everything that is a lorpus, a shumpus, and a vumpus is a grimpus and a lempus and a wumpus.", "fol": "all x. ((lorpus(x) & shumpus(x) & vumpus(x)) -> (grimpus(x) & lempus(x) & wumpus(x)))", "prediction": ["all x.((Lorpus(x) & Humpus(x) & Vumpus(x)) -> (Smokepus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vampus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grampus(x) & Lempus(x) & Tumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Tumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Shumpus(x) | Vumpus(x)) -> (Smoothpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wompus(x)))", "all x.((Excluding(x) & Lopa,y) & Humpus(y) & Vumpus(x)) -> (Grimpus(x) | Lempus(x) | Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Shumpus(x) | Vumpus(x)) -> (Smoothpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Shumpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Termpus(x) & Termpus(x)))", "all x.((Lorpus(x) & Humpus(x) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))"]}
{"id": "prontoqa_validation_408", "nl": "Fae is a shumpus.", "fol": "shumpus(Fae)", "prediction": ["all x.(Fae(x) -> Humpus(x))", "all x.(Fae(x) -> Humpus(x))", "(Shumpus(Fae)", "all x.(Fae(x) -> Humpus(x))", "All x.(Fae(x) -> Humpus(x))", "Fae (Shumpus)", "all x.(Fae(x) -> Humptus(x))", "all x.(Fae(x) -> Humpus(x))", "all x.(Fae(x) -> Humpus(x))", "(Shumpus(Fae) \u2013 LivesIn(Fae,LittleHabitat))", "all x.(Fae(x) -> Humptue(x))", "all x.(Fae(x) -> Humpus(x))", "(Shumpus(Fae)", "(Shumpus(fae) & Shumpus(fae))", "all x.(Fae(x) -> Humpus(x))", "all x.(Fae(x) -> Humpus(x))"]}
{"id": "prontoqa_validation_409", "nl": "Fae is a vumpus.", "fol": "vumpus(Fae)", "prediction": ["(Vumpus(Fae)", "(Vumpus(Fae)", "all x.(Fae(x) -> Vumpus(x))", "all x.(Fae(x) -> Vulmpus(x))", "-> Muffin(fae))", "all x.(Fae(x) -> Vumpus(x))", "all x.(Fae(x) -> Vumpus(x))", "is a Vumpus (Vumpus)", "all x.(Fae(x) -> Vumpus(x))", "the original.Fae(Fampus)", "all x.(Fae(x) -> Voompus(x))", "all x.(Fae(x) -> Voompus(x))", "(Vumpus(Fae)", "(Vampus(Fae) & LocatedIn(Fae,Jule))", "all x.(Fae(x) -> Vulmpus(x))", "(Vumpus(fae) | Vumpus(fae))"]}
{"id": "prontoqa_validation_410", "nl": "Fae is a grimpus.", "fol": "grimpus(Fae)", "prediction": ["(Grimpus(Fae))", "(Gruppus(fae) & Grimpus(fae))", "all x.(Fae(x) -> Grimpus(x))", "exists x.(Fae(x) & Grimpus(x))", "all x.(Fae(x) -> Grimpus(x))", "all x.(Fae(x) -> Grimpus(x))", "Fae(f) & Grypus(f))", "Derae(Fae) ist Grypus(Fae)", "Fae is Grimpus.", "Fae is a Grimpus.", "(Palmpus(Fae) & Grimpus(Fae))", "all x.(Fae(x) -> Grimpus(x))", "all x.(Fae(x) -> Grimpus(x))", "all x.(Fae(x) -> Grimpus(x))", "-Fae(Fae) is a Gruffus(Fae)", "Fae is a Grimpus."]}
{"id": "prontoqa_validation_411", "nl": "Each zumpus is a lempus, a tumpus, and a numpus.", "fol": "all x. (zumpus(x) -> (lempus(x) & tumpus(x) & numpus(x)))", "prediction": ["all x.(Zumpus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x.(Tompus(x) -> (Lempus(x) & Tumpus(x) & Numpus(x)))", "all x y z.(Tompus(x) -> (Lumpus(x) & Tumpus(y) & Numpus(z)))", "all x.(Tommopus(x) -> (Lempus(x) & Tumpus(x) & Numpus(x)))", "all x.(Tompus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x.(Tompus(x) -> (Lempus(x) | Tumpus(x) | Nompus(x)))", "all x.(Tompus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x.(Tompus(x) -> (Limpus(x) | Tumpus(x) | Numpus(x)))", "all x.(Zimpus(x) -> (Lempus(x) & Tumpus(x) & Numpus(x)))", "all x.(Toumpus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x.(Zumpus(x) -> (Lempus(x) & Tumpus(x) & Numpus(x)))", "all x.(Tompus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x.(Zumpus(x) -> (Lempus(x) & Tumpus(x) & Numpus(x)))", "all x.(Tompus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x.(Tommpus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x.(Tompus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))"]}
{"id": "prontoqa_validation_412", "nl": "Stella is a zumpus.", "fol": "zumpus(Stella)", "prediction": ["Stella is a Zumpus.", "Stella is Zumpus.", "Stella is a zumpus.", "Stella is zumpus.", "Stella is a zumpus.", "Stella is zumpus.", "exists x.(Stella(x) & Zumpus(x))", "Stella is Zumpus(Straw),", "Stella ist zumpus.", "all x.(Stella(x) -> Zumpus(x))", "(Zombius(Stella))", "all x.(Stella(x) -> Zumpus(x))", "Stella is zumpus.", "Stella is a zumpus.", "Stella ist Zumpus(s) & ContainsEats&(s) & HasEats(s))", "Stella is a Zumpus(Stella)"]}
{"id": "prontoqa_validation_413", "nl": "Stella is a wumpus, a numpus, or a lempus.", "fol": "(wumpus(Stella) | numpus(Stella) | lempus(Stella))", "prediction": ["all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x y.((Popular(x) & Stella(y)) -> (Wumpus(x) | Numpus(x) | Lempus(y)))", "all x.((Stella(x) & (Wumpus(x) | Numpus(x) | Lempus(x))) -> wumpus(x))"]}
{"id": "prontoqa_validation_414", "nl": "Every lempus is a sterpus.", "fol": "all x. (lempus(x) -> sterpus(x))", "prediction": ["all x.(Lempus(x) -> Sterpus(x))", "all x y.((Lempus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterepus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterotus(x))"]}
{"id": "prontoqa_validation_415", "nl": "Alex is a gorpus, a lempus, and a numpus.", "fol": "(gorpus(Alex) & lempus(Alex) & numpus(Alex))", "prediction": ["all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "all x.(Alex(x) -> (gorpus(x) & lempus(x) & numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "all x y.((Alex(x) & Gorpus(y) & Lempus(x)) -> (Nompus(x) & Numpus(y)))", "all x.(Alex(x) -> (Gorpus(x) & Lempus(x) & Numpus(x)))", "(all x.(Alex(Alex) -> Gorpus(Alex)) & all y.(Lempus(Alex) & -Mampus(Alex)))", "(Gorpus(Alex) | Lempus(Alex) | Numpus(Alex))", "all x.(Alex(x) -> (Gorpus(x) & Lempus(x) & Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) & Lempus(x) & Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) & Lempus(x) & Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) & Lempus(x) & Numpus(x)))", "(all x.(Alex(Alex) -> Gorpus(Alex)) & all y.(Lempus(Alex) -> Numpus(Alex)))"]}
{"id": "prontoqa_validation_416", "nl": "Alex is a lorpus or a sterpus or a gorpus.", "fol": "(lorpus(Alex) | sterpus(Alex) | gorpus(Alex))", "prediction": ["all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Torpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterepus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x y.((Alex(x) & Llorpus(y) & Sterpus(x)) | Gorpus(y)) -> (Lorpus(x) | Sterpus(y) | Gorpus(y)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -(Lorpus(x) | Steroid(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterepus(x) | Gorpus(x)))"]}
{"id": "prontoqa_validation_417", "nl": "Everything that is an impus, a rompus, and a yumpus is a gorpus and a grimpus and a tumpus.", "fol": "all x. ((impus(x) & rompus(x) & yumpus(x)) -> (gorpus(x) & grimpus(x) & tumpus(x)))", "prediction": ["all x.((Imposs,Roompus,Yumpus) & Grimpus(x) & Tumpus(x)) -> Gorpus(x) & Grimpus(x))", "all x.((Impossa(x) & Rompus(x) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Issue(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Imposer(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) \"(Smokey(x) & Grimpus(x)) | Tumpus(x))))", "all x.((Impose(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) | Grimpus(x) | Tumpus(x)))", "all x.((Impose(x) & Rompus(x) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Imposs,yumpus,grumpy) & Grimpus,tumpus)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Impose(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Implementation(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Impose(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Issue(x) | Rompus(x) | Yumpus(x)) -> (Rumpus(x) & Gruppus(x) & Tumpus(x)))", "all x.((Imposs(x) & Rompus(x) & Yuppus(x)) -> (Goramus(x) | Grimpus(x) | Tumpus(x)))", "all x y z.((Impos(x) & Rompus(y) & Yumpus(z) & Imperator(x) & Tyrus(y)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Impos,(x) | Rompus(x) | Yampus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Impos, ) | Rompus, ) | Yampus, ) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Impose(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))"]}
{"id": "prontoqa_validation_418", "nl": "Fae is an impus.", "fol": "impus(Fae)", "prediction": ["all x.(Fae(x) -> Isolated(x))", "all x.(Fae(x) -> IsImposer(x))", "(Isolation(fae) -> YouCall(fae))", "all x.(Fae(x) -> Is(x,irresponsible))", "all x.(Fae(x) -> Illusion(x))", "all x.(Fae(x) -> Impossible(x))", "all x.(Fae(x) -> IsImposer(x))", "Fae(x) & IsImplicant(x))", "exists x.(Fae(x) & Is(x,Illegal))", "all x.(Fae(x) -> Obsidian(x))", "all x.(Fae(x) -> Imperative(x))", "all x.(Fae(x) -> Impunist(x))", "Fae(f)", "all x.(Fae(x) -> Impossible(x))", "all x.(Fae(x) -> IsImpilicator(x))", "exists x.(Fae(x) & Impossible(x))"]}
{"id": "prontoqa_validation_419", "nl": "Fae is a rompus.", "fol": "rompus(Fae)", "prediction": ["(Rompus(Fae) & Rompus(Fae))", "all x.(Rompus(x) -> Fae(x))", "(Rompus(Fae) & Worm(Fae))", "(Rompus(Fae))", "all x.(Rrompus(x) -> Fae(x))", "(Rompus(Fae) & -Rompus(Fae))", "all x.(Fae(x) -> Rompus(x))", "all x.(Fae(x) -> Rompus(x))", "all x.(Fae(x) -> Rompus(x))", "(Raccoon(Fae) -> Rompus(Fae))", "all x.(Fae(x) -> Rupus(x))", "all x.(Fie(x) -> Rompus(x))", "(Rompus(fae) -> Rupus(fae))", "all x.(Fae(x) -> Rompus(x))", "all x.(Fae(x) -> Rompus(x))", "(Rompus(Fae) & Rumpus(Fae))"]}
{"id": "prontoqa_validation_420", "nl": "Fae is a gorpus.", "fol": "gorpus(Fae)", "prediction": ["is Gorpus(fae)", "(Gorpus(Fae) & HasWaiting(Fae))", "all x.(Fae(x) -> Gorpus(x))", "(Gorpus(Fae))", "all x.(Fae(x) -> Gorpus(x))", "(Fie isGorpus(Fae) -> Cortex(Fae,Fae))", "(GORPUS(Fae) & -Gorpus(Fae))", "all x.(Fae(x) -> Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "all x.(Fae(x) & Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))"]}
{"id": "prontoqa_validation_421", "nl": "Each lempus is a grimpus and a shumpus and a wumpus.", "fol": "all x. (lempus(x) -> (grimpus(x) & shumpus(x) & wumpus(x)))", "prediction": ["all x.(Lempus(x) -> (Grimpus(x) & Humpus(x) & Humpus(x)))", "all x.(Lempus(x) -> (Grip(x) | Shumpus(x) | Wumpus(x)))", "all x.(Lempus(x) -> (Grimpus(x) | Humpus(x) | Wumpus(x)))", "all x.(Limpus(x) -> (Grimpus(x) & Scumpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> (Grimpus(x) | Spumpus(x) | Wumpus(x)))", "all x.(Lempus(x) -> (Grimpus(x) & Humpus(x) & Humpus(x)))", "all x.(Lempus(x) -> (Prumpus(x) & Humpus(x) & Humpus(x)))", "all x.(Lempus(x) -> (Grimpus(x) & Shumpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> (Grumpus(x) | Shumpus(x) | Wumpus(x)))", "all x.(Lempus(x) -> (Grimpus(x) & Shumpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> (Grimpus(x) & Humpus(x) & Humpus(x)))", "all x.(Lempus(x) -> (Gruppus(x) & Shumpus(x) & Wumpus(x)))", "exists x.(Lempus(x) & Grimpus(x) & Humpus(x) & Humpus(x))", "all x y z.((Lempus(x) & Grimpus(y) & Humpus(z)) -> (Shumpus(z) & Wumpus(z)))", "all x.(Lempus(x) -> (Grimpus(x) & Humpus(x) & Wompus(x)))", "all x.(Lempus(x) -> (Grimp(x) & Shumpus(x) & Wumpus(x)))"]}
{"id": "prontoqa_validation_422", "nl": "Each lorpus is a yumpus.", "fol": "all x. (lorpus(x) -> yumpus(x))", "prediction": ["all x.(Lorpus(x) -> Yumpus(x))", "all x.(Lorpus(x) -> Yumpus(x))", "all x.(Lorpus(x) -> Yughurt(x))", "all x.(Lorpus(x) -> Yumpa(x))", "all x.(Lorpus(x) -> Yumpeus(x))", "all x.(Lorpus(x) -> Yumpus(x))", "all x.(Lorpus(x) -> Yampus(x))", "all x.(Lorpus(x) -> Yumpa(x))", "exists x.(Lorpus(x) & Yumpe(x))", "all x.(Lorpus(x) -> Yumpos(x))", "all x.(Lorpus(x) -> Yumpi.", "all x.(Lorpus(x) -> Yumpus(x))", "all x.(Lorpus(x) -> Yumpus(x))", "all x.(Lorpus(x) -> Yumpus(x))", "all x.(Lorpus(x) -> Yumpus(x))", "all x.(Lorpus(x) -> Yumpus(x))"]}
{"id": "prontoqa_validation_423", "nl": "Yumpuses are not shumpuses.", "fol": "all x. (yumpus(x) -> -shumpus(x))", "prediction": ["all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Umbushi(x) -> -Shumpus(x))", "(all x.(Yumpuse(x) -> -Shumpus(x)))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))"]}
{"id": "prontoqa_validation_424", "nl": "Alex is a lorpus.", "fol": "lorpus(Alex)", "prediction": ["all x.(Alex(x) -> Lorpus(x))", "Alex,lorpus(Alex)", "all x.(Alex(x) -> Llorpus(x))", "Alex is a lorpus.", "Alex is a lorpus.", "all x.(Alex(x) -> Lorpus(x))", "all x.(Alex(x) -> Lorpus(x))", "All x.(Alex(x) -> Lorpus(x))", "all x.(Alex(x) -> Lorpus(x))", "All x.(Alex(x) -> Lorpus(x))", "Alex is lorpus.", "all x.(Alex(x) -> Lorpus(x))", "(Lorpus(Alex) & LivesIn(Alex,Colorpus))", "Alex is lorpus.", "All x.(Alex(x) -> Lorpus(x))", "all x.(Amanda(x) -> Lorpus(x))"]}
{"id": "prontoqa_validation_425", "nl": "Each numpus is a lorpus, a shumpus, and a rompus.", "fol": "all x. (numpus(x) -> (lorpus(x) & shumpus(x) & rompus(x)))", "prediction": ["all x.(Nompus(x) -> (Larpus(x) & Humpus(x) & Rompus(x)))", "all x.(Numpus(x) -> exists y z.(Lorpus(y) & Rumpus(z) & Is(x,y) & Is(x,z))))", "exists x.(Numpus(x) & (Lorpus(x) | Humpus(x) | Rompus(x)))", "all x.(Nompus(x) -> (Lorpus(x) & Humpus(x) & Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "all x.(Nompus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "(all x.(Numpus(x) -> Lorpus(x)) & all y.(Shumpus(y) & all z.(Rompus(z) -> Rompus(z))))", "all x.(Number(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "all x.(Nompus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "(all x.(Numpus(x) -> (Lorpus(x) | Humpus(x)) | Rompus(x)))", "all x.(Nompus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "(all x.(Numpus(x) -> Lord(x)) & (Shumpus(x) | Rompus(x)))", "(all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x))))", "all x.(Nompus(x) -> (Lady(x) | Humpus(x) | Rompus(x)))"]}
{"id": "prontoqa_validation_426", "nl": "Max is a numpus.", "fol": "numpus(Max)", "prediction": ["-Numpus(Max)", "all x.(Max(x) -> Numpus(x))", "Max is Number(x)", "all x.(Max(x) -> Number(x))", "(Numpus(Max))", "All x.(Max(x) -> Numus(x))", "Max is a Numpus.", "ALL x.(Max(x) -> Numpus(x))", "all x.(Max(x) -> Numpus(x))", "Max is Numpus.", "all x.(Max(x) -> Numpus(x))", "All x.(Max(x) -> Numpus(x))", "Max ist ein Numpus.", "all x.(Max(x) -> Numpus(x))", "-Max(Max)", "(numpus(Max) & HasNumble(Max))"]}
{"id": "prontoqa_validation_427", "nl": "Max is a shumpus, a lorpus, or an impus.", "fol": "(shumpus(Max) | lorpus(Max) | impus(Max))", "prediction": ["all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Impossible(x)))", "all x.(M Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperative(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Impesion(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Impeccable(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Ilirphea(x)))", "exists x.(Max(x) & (Shumpus(x) | Loomis(x) | Imperator(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperia(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperative(x)))", "all x.(Max(x) -> (Shumpus(x) | Lieps(x) | Issuu(x)))", "all x y.((Max(x) & (Shumpus(y) | Lorpus(y) | Isset(y))) -> (Shumpus(x) | Wastula(x)) | Wastula(x)) | Wastula(x))"]}
{"id": "prontoqa_validation_428", "nl": "Jompuses are shumpuses.", "fol": "all x. (jompus(x) -> shumpus(x))", "prediction": ["all x.(Jompuse(x) -> Shumpuse(x))", "all x.(Jimpus(x) -> Shumpus(x))", "all x.(Jome(x) -> Shumpus(x))", "all x.(Jompuse(x) -> (Shumpus(x) & Embryonal(x)))", "all x.(Jompuse(x) -> Shumpus(x))", "all x.(Jompus(x) -> Shumpus(x))", "all x.(Jomess(x) -> Shumpus(x))", "all x.(Jompus(x) -> Shumpus(x))", "all x.(Jompuse(x) -> Shumpus(x))", "all x.(Jimpus(x) -> Humpus(x))", "all x.(Jompuse(x) -> Shumpus(x))", "all x.(Jompuse(x) -> Shumpus(x))", "all x.(Jumpus(x) -> Shumpus(x))", "all x.(Jumpus(x) -> Shumpus(x))", "all x.(Jompuse(x) -> Schumpus(x))", "all x.(Jompuse(x) -> Shimpus(x))"]}
{"id": "prontoqa_validation_429", "nl": "Polly is a sterpus and a wumpus and a jompus.", "fol": "(sterpus(Polly) & wumpus(Polly) & jompus(Polly))", "prediction": ["all x y z.((Polly(x) & Sterpus(y) & Wumpus(z) & Jompus(z)) -> (Sterpus(x) & Wumpus(y) & Jompus(z)))", "all x.(Polly(x) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "all x.(Polly(x) -> (Sterpus(x) & Wompus(x) & Jompus(x)))", "(All x.(Polly(x) -> Sterpus(x)) & (Wumpus(x) | Jompus(x))))", "all x.((Polly(x) & Sterpus(x) & Wumpus(x) & Jompus(x)) -> Polly(x))", "all x.(Pooly(x) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "all x.(Polly(x) -> (Striceps(x) | Wumpus(x) | Jompus(x)))", "(all x.(Polly(x) -> Sterpus(x)) & all y.(Wumpus(y) & All z.(Jumpus(z) & All w.(Polly(w) & Jompus(w))))", "(all x.(Polly(x) -> Sterpus(x)) & all y.(Wumpus(y) & -Wumpus(y))) & all z.(Jompus(z) -> Jompus(z)))", "all x.(Polly(x) -> ((Sterpus(x) & Wompus(x)) & Jompus(x)))", "(all x.(Polary(x) -> IsSterpus(x)) & exists y.(Wumpus(y) & IsJompus(y)))", "(all x.(Poly(x) -> (Sterpus(x) & Wompus(x))))", "all x y.((Polly(x) & Sterpus(y) & Wumpus(x)) -> (Whumpus(x) & Jompus(y)))", "all x.(Orbit(x) -> (Sterepus(x) & Wumpus(x) & Jompus(x)))", "(all x y z.(Polly(x) -> Sterpus(x)) & (Wumpus(y) | Jompus(y)))", "all x.(Polly(x) -> (Sterpus(x) | Wumpus(x) | Jumpus(x)))"]}
{"id": "prontoqa_validation_430", "nl": "Polly is a tumpus or a lempus or a shumpus.", "fol": "(tumpus(Polly) | lempus(Polly) | shumpus(Polly))", "prediction": ["all x.(Polly(x) -> (Tompus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Poly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Shumpus(x)))", "all x.(Polly(x) -> ((Tumpus(x) | Lempus(x) | Humpus(x))))", "all x.(Poly(x) -> isTumpus(x) | (Lempus(x) | Humpus(x))))", "all x.(Ploy(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Poly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Poly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))"]}
{"id": "prontoqa_validation_431", "nl": "Every zumpus is a rompus and a shumpus and a yumpus.", "fol": "all x. (zumpus(x) -> (rompus(x) & shumpus(x) & yumpus(x)))", "prediction": ["all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Zumpus(x) -> (Rompus(x) & Simpson(x) & Yumpson(x)))", "(all x.(Tompus(x) -> Roman(x)) & (Shumpus(x) & Yumpus(x)))", "exists x.(Tompus(x) & Rompus(x) & Humpus(x) & Yumpus(x))", "all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Zumpus(x) -> (Rompus(x) & Scumpus(x) & Yumpus(x)))", "all x.(Zumpus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Dust(x) -> (Rompus(x) | Humpus(x) | Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Humpus(x) -> (Rompus(x) & Shumpus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Rumpus(x) & Humpus(x) & Yumpos(x)))", "all x.(Zumpus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Shumpus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_validation_432", "nl": "Rex is a zumpus.", "fol": "zumpus(Rex)", "prediction": ["All x.(Rax(x) -> Zumpus(x))", "Rex is a zumpus.", "Rex (zunus)", "all x.(Rex(x) & Zumpus(x))", "Rex is Zumpus.", "exists x.(Rex(x) & Zumpus(x))", "Rex ist ein Zumpus(x)", "(Zumpus(Rex))", "Rex ist zumpus.", "Rex is a zumpus.", "Rex is Zumpus.", "Rex is zumpus.", "Rex.(zombie)", "Rex.(Zombian(x) & HasTree(x))", "(Zumpus(Rex))", "all x.(Rex(x) -> Zumpus(x))"]}
{"id": "prontoqa_validation_433", "nl": "Rex is a rompus or a lempus or a grimpus.", "fol": "(rompus(Rex) | lempus(Rex) | grimpus(Rex))", "prediction": ["all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> ((Mosk(x) | Lempus(x) | Grimpus(x))))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "(Rex) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> ((Rompus(x) | Lempus(x) | Grimpus(x))))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x y.((Rex(x) & Rompus(y)) | (Rompus(x) | Lempus(x) | Grimpus(x))))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))"]}
{"id": "prontoqa_validation_434", "nl": "Everything that is a shumpus and a lempus and a yumpus is a tumpus and a brimpus and a zumpus.", "fol": "all x. ((shumpus(x) & lempus(x) & yumpus(x)) -> (tumpus(x) & brimpus(x) & zumpus(x)))", "prediction": ["all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) | Lempus(x) | Yumpus(x)) -> ((Tumpus(x) & Brimpus(x) & Zumpus(x))))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) | Brimpus(x) | Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpa(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x y.((Shumpus(x) & Lempus(x) & Yumpus(y)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) | Lempus(x) | Yampus(x)) -> (Bumpus(x) & Brimpus(x) & Zumpus(x)))"]}
{"id": "prontoqa_validation_435", "nl": "Rex is a shumpus.", "fol": "shumpus(Rex)", "prediction": ["Rex is Shumpus(x)", "Rex is a shumpus.", "(IsShumpus(Rex) | IsShumpus(Rex)))", "(Shumpus(Rex) & FlowsIn(Rex))", "all x.(Rex(x) -> Humpus(x))", "Rex ist ein Humpus(x)", "(Shumpus(Rex) & Scalp(Rex))", "(Shumpus(Rex)", "Rex is a shumpus.", "Rex (shumpus)", "all x.(Rex(x) -> Humpus(x))", "(Shumpus(Rex)", "all x.(Rex(x) -> Shumpus(x))", "all x.(Rex(x) -> Humpus(x))", "Rex is a Humpus(x)", "all x.(Rex(x) -> Humpus(x))"]}
{"id": "prontoqa_validation_436", "nl": "Rex is a yumpus.", "fol": "yumpus(Rex)", "prediction": ["all x.(Rex(x) -> Yumpus(x))", "Rex (yumpus)", "exists x.(Yumpus(x) & Rex(x))", "Rex is yumpus.", "Rex is yumpus.", "(Yumpus(rex) -> Rex(rex))", "Rex is Yampus(Rex)", "Rex is yumpus.", "Rex (Yumpus)", "Rex is an yumpus.", "(Yumpus(Rex))", "Rex is yumpus(y)", "Rex isYumpus.", "Rex is yumpus.", "(Yumpus(Rex))", "Rex is yumpus."]}
{"id": "prontoqa_validation_437", "nl": "Rex is a brimpus.", "fol": "brimpus(Rex)", "prediction": ["(Brimpus(Rex))", "all x.(Rex(x) -> Brimpus(x))", "Rex is a brimpus.", "(Brimpus(Rex) & Brimpus(Rex))", "all x.(Rex(x) -> Brimpus(x))", "the brimpus.", "all x.(Rex(x) -> Brimpus(x))", "all x.(Rex(x) -> Brimpus(x))", "(Brimpus(Rex) & Brimpus(Rex))", "Rex is Brimpus(x)", "All x.(Rex(x) -> Brimpus(x))", "all x.(Rex(x) -> Brimpus(x))", "Rex is brimpus(rex)", "all x.(Rex(x) -> Brimpus(x))", "(Brimpus(Rex) & Burmpus(Rex))", "EsteemedBrimpus(Rex)"]}
{"id": "prontoqa_validation_438", "nl": "Everything that is an impus and a wumpus and a yumpus is a zumpus, a numpus, and a tumpus.", "fol": "all x. ((impus(x) & wumpus(x) & yumpus(x)) -> (zumpus(x) & numpus(x) & tumpus(x)))", "prediction": ["all x.((Impossible(x) & Wumpus(x) & Yumpus(x)) -> (Zumpus(x) | Numpus(x) | Tumpus(x)))", "all x.((Imposer(x) & Hush(x) & Yumus(x)) + (Zumpus(x) | Numpus(x) | Tumpus(x))))", "all x.((Impose(x) & Wumpus(x) & Yumpsum(x)) -> (Toumpus(x) | Numpus(x) | Tumpus(x)))", "all x.((Imposs(x) & Wempus(x) & Yumpus(x)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x.((Imposer(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Impossible(x) & Wumpus(x) & Yumpus(x)) -> (Zombia(x) & Numpus(x) & Tumpus(x)))", "all x.((Imposer(x) & Wumpus(x) & Yumpus(x)) -> (Zumpus(x) | Numpus(x) | Tumpus(x)))", "all x.((Impossed(x) & Undefined(x) & Wumpus(x) & Undefined(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Impromis(x) & Wumpus(x) & Yumpus(x)) -> (Zumpus(x) & Numpus(x) & Tumpus(x)))", "all x.(Imperfect(x) & IsWumpusAndYumpus(x) & IsTompus(x) & IsNumpus(x) & IsTompus(x))", "all x.((Issue(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Piece(x) & Wumpus(x) & Yammpus(x)) -> (Amenospus(x) & Nompus(x) & Tumpus(x)))", "all x.((Immis(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Impose(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x.((Imposs(x) & Wumpus(x) & Yumpus(x)) -> (Tomorpus(x) & Numpus(x) & Tumpus(x)))", "all x.((Impose(x) & Wumpus(x) & Yumpus(x)) -> (Zumpus(x) | Numpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_validation_439", "nl": "Sam is an impus.", "fol": "impus(Sam)", "prediction": ["all x.(Sam(x) -> IsNotImpossed(x))", "all x.(Sam(x) -> Impermant(x))", "(Issue(Sam) & IsSam(Sam))", "Sam", "all x.(Sam(x) -> Isolator(x))", "all x.(Sam(x) -> IsDominant(x))", "the ErwinesPair.", "All x.(Sam(x) -> Impossible(x))", "exists x.(Sam(x) & IsImplemented(x))", "All x.(Sam(x) -> Implicit(x))", "all x.(Sam(x) -> IsPiece(x))", "all x.(Sam(x) -> IsComplimentary(x))", "all x.(Sam(x) -> Isolator(x))", "all x.(Sam(x) -> Implicit(x))", "all x.(Sam(x) -> IsDeviled(x))", "Sam is a impus."]}
{"id": "prontoqa_validation_440", "nl": "Sam is a wumpus.", "fol": "wumpus(Sam)", "prediction": ["((Wumpus(Sam) & -Wumpus(Sam)))", "He is a Wumpus.", "all x.(Wumpus(x) -> Sam(x))", "all x.(Sam(x) -> Wampus(x))", "all x.(Wumpus(x) -> Sam(x))", "all x.(Wumpus(x) -> Sam(x))", "all x.(Wumpus(x) -> Sam(x))", "all x.(Wumpus(x) -> Sam(x))", "(Wumpus(Sam) | Flower(Sam)))", "all x.(Wumpus(x) -> Sam(x))", "all x.(Wumpus(x) -> Sam(x))", "(Wumpus(Ram) & -Wumpus(Sam))", "all x.(Wumpus(x) -> Sam(x))", "(Wumpus(sam) | Wax.(sam) & Wumpus(sam)))", "all x.(Wumpus(x) -> Sam(x))", "all x.(Sam(x) -> Wumpus(x))"]}
{"id": "prontoqa_validation_441", "nl": "Sam is a yumpus.", "fol": "yumpus(Sam)", "prediction": ["Sam is yumpus.", "all x.(Sam(x) -> Yumpa(x))", "(Yumpus(Sam) & Has(Sam,Sam))", "all x.(Yumpus(x) -> Sam(x))", "(Yumpus(Sam) & HasYump(Sam))", "all x.(Yumpus(x) -> Sam(x))", "all x.(Yumpus(x) -> Sam(x))", "all x.(Yumpus(x) -> Sam(x))", "Sam is yumpus.", "all x.(Yumpus(x) -> Sam(x))", "(Yumpus(Sam))", "exists x.(Sam(x) & Yumpus(x))", "all x.(Sam(x) -> Yumpus(x))", "all x.(Yumpus(x) -> Sam(x))", "all x.(Yumpus(x) -> SamFather(x))", "all x.((Sam(x) & Yampus(x)) -> Has(x,y))"]}
{"id": "prontoqa_validation_442", "nl": "Sam is a zumpus.", "fol": "zumpus(Sam)", "prediction": ["all x.(Sam(x) -> Zumpus(x))", "(Tompus(Sam) | HasTompus(Sam))", "(Form(Sam) & Topaz(Sam))", "Sam(Sam) -> Zumpus(Sam))", "(zumpus(Sam) & BornAs(Sam))", "all x.(Sam(x) -> Zumpus(x))", "(Zumpus(Sam) & X.(Sam) & Tompus(Sam)))", "all x.(Sam(x) -> Zumpus(x))", "all x.(Sam(x) -> Zumpus(x))", "All x.(Tompus(x) -> Sam(x))", "Sam is zumpus.", "all x.(Sam(x) -> Zumpus(x))", "all x.(Sam(x) -> Zumpus(x))", "all x.(Sam(x) -> Zumpus(x))", "all x.(Sam(x) -> Zumpus(x))", "All x.(Sam(x) -> Zumpus(x))"]}
{"id": "prontoqa_validation_443", "nl": "Everything that is a shumpus and a yumpus and a tumpus is a lorpus.", "fol": "all x. ((shumpus(x) & yumpus(x) & tumpus(x)) -> lorpus(x))", "prediction": ["all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorde.", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.([(Shumpus(x) & Yampus(x) & Tumpus(x)) -> Lorpus(x))", "all x.(Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Youngpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yukpus(x) & Tumulus(x)) -> Lorpus(x))", "all x.((Shumpus(x) | Yompus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))"]}
{"id": "prontoqa_validation_444", "nl": "Each wumpus is not a lorpus.", "fol": "all x. (wumpus(x) -> -lorpus(x))", "prediction": ["all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "exists x.(Wumpus(x) & -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "is noLorpus(wumpus)", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))"]}
{"id": "prontoqa_validation_445", "nl": "Sally is a dumpus and a numpus and a wumpus.", "fol": "(dumpus(Sally) & numpus(Sally) & wumpus(Sally))", "prediction": ["(Dumpus(Sally) & Numpus(Sally) & Rumpus(Sally))", "all x.(Sally(x) -> (Dupus(x) & Numpus(x) & Wumpus(x)))", "(Dumpus(Sally) & Numpus(Sally) & Wumpus(Sally))", "ALL x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Umbrella(x)))", "all x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))", "all x.(Sally(x) -> (Nompus(x) & Wumpus(x)))", "(Dumpus(Sally) | Humpus(Sally)))", "(Dumpus(Sally) & Nompus(Sally) & Wumpus(Sally))", "all x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))", "all x.(Sale(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))", "(Dumpsus(Sally) & Numpus(Sally) & Wumpus(Sally))", "all x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))", "(AndSally(Sally) -> Dumpus(Sally) & AndWumpus(Sally))", "(TwoDumps(Sally) & OneDumps(Sally) & OneNumpus(Sally) & OneWumpus(Sally))", "(All x.(Sally(x) -> Dumpus(x)) & All y.(numpus(y) & All z.(wumpus(z) & -Dumpus(z))))", "all x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))"]}
{"id": "prontoqa_validation_446", "nl": "Sally is a yumpus.", "fol": "yumpus(Sally)", "prediction": ["Sally is yumpus.", "Sally (yumpus)", "all x.(Yumpus(x) -> Sally(x))", "Sally is a Yumpu.", "Sally is yumpus.", "Sally is yumpus.", "Sally is a yumpus.", "Sally is Yampus.", "Sally is a yumpus.", "Sally is yumpus.", "all x.(Yumpus(x) & Sally(x))", "Sally is yumpus.", "Sally is Yampus(s) & HasJumpus(s) & HasJumpus(s))", "Sally (Yumpus)", "Sally is Yumpah(s)", "Sally is Yampus(Sally)"]}
{"id": "prontoqa_validation_447", "nl": "Sally is a tumpus.", "fol": "tumpus(Sally)", "prediction": ["All x.((Sally(x) & Tumpus(x)) -> CanSee(x))", "Sally is a Tumulus(x)", "Sally is tumpus.", "all x.(Tumpus(x) -> Sally(x))", "Sally is a Tumpus.", "Sally is Thumpus.", "Sally is tumpus.", "all x.(Tumpus(x) -> Sally(x))", "all x.(Tumpus(x) -> Sally(x))", "Sally, & Humpus(Sally,Sally)", "Sally is Tumulus(SleepChild(Season)", "Sally is a tumpus.", "all x.(Sally(x) -> Tumpus(x))", "Sally is Tumpus(Sally)", "all x.(Sally(x) -> Tumpus(x))", "(Tumpus(Sally) & DoesTumpus(Sally))"]}
{"id": "prontoqa_validation_448", "nl": "Sally is not a shumpus.", "fol": "-shumpus(Sally)", "prediction": ["Sally is not a shumpus.", "Sally ist -Shumpus(Sally).", "Sally -Shumpus(s)", "Sally is not a shumpus.", "all x.(Sally(x) -> -Shumpus(x))", "Sally -> -Shumpus(Sally))", "-Shumpus(Sally)", "Sally isn'tThump(Sally)", "all x.(Sally(x) -> -Shumpus(x))", "all x.(Sally(x) -> -Shumpus(x))", "Sally is not shumpus.", "all x.(Sally(x) -> -Shumpus(x))", "Sally is not a shumpus.", "Sally is not a shumpus.", "all x.(Sally(x) -> -Shumpus(x))", "Sally -Shumpus(Sam)"]}
{"id": "prontoqa_validation_449", "nl": "Everything that is a vumpus, a tumpus, or a dumpus is a yumpus and a zumpus and a lorpus.", "fol": "all x. ((vumpus(x) | tumpus(x) | dumpus(x)) -> (yumpus(x) & zumpus(x) & lorpus(x)))", "prediction": ["all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Voompus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & lorpus(x)))", "all x.((AimsVumpus(x) | -AimsTumpus(x) | -AimsDumpus(x)) -> (yumpus(x) & zumpus(x) & lorpus(x)))", "all x.((Vimpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lordpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Poughle(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x y.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(y) & Zumpus(y) & Lorpus(y)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & lorpus(x)))"]}
{"id": "prontoqa_validation_450", "nl": "Sam is a vumpus.", "fol": "vumpus(Sam)", "prediction": ["Sam is jammy.", "all x.(Sam(x) -> Vumpus(x))", "all x.(Sam(x) -> Vumpus(x))", "all x.(Sam(x) -> Tumpus(x))", "(Vampus(Sam) & Has(Sam))", "((Sam) | AVumpus(Sam)))", "all x.(Sam(x) -> Vampus(x))", "all x.(Sam(x) -> Vumpus(x))", "(Vuzes(Sam) & -VuzesAt(Sam))", "(Vumpus(Sam) & -Vampus(Sam))", "all x.(Sam(x) -> Vampire(x))", "(Vumpus(Sam) | Vimpus(Sam))", "all x.(Sam(x) -> Vampis(x))", "all x.(Sam(x) -> Vumpus(x))", "all x.(Sam(x) -> Vumpus(x))", "all x.(Vumpus(x) -> Sam(x))"]}
{"id": "prontoqa_validation_451", "nl": "Everything that is a lorpus and a brimpus and an impus is not a jompus.", "fol": "all x. ((lorpus(x) & brimpus(x) & impus(x)) -> -jompus(x))", "prediction": ["all x.(((Lorph(x) & Brumpus(x) & Issue(x)) -> -Jochs(x))", "all x.((Lorpus(x) & Brimpus(x) & IsBirmpus(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & IsPiece(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Impossible(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Issue(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Imperator(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & IsWrite(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Imperator(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Obsidian(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Ichris(x)) -> -Jimpus(x))", "all x.((Lorpus(x) & Brimpus(x) & Isimposed(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Imperator(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Impossible(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Imperempt(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Imperator(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Imperator(x)) -> -Jimpus(x))"]}
{"id": "prontoqa_validation_452", "nl": "Grimpuses are jompuses, lempuses, and yumpuses.", "fol": "all x. (grimpus(x) -> (jompus(x) & lempus(x) & yumpus(x)))", "prediction": ["all x.(Grimpus(x) -> (Jompus(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus (x)))", "(all x.(Grampus(x) -> (Jompuse(x) | Lempuse(x) | Yumus(x))))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x.(Rampus(x) -> (Booy(x) | Hoot(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grubbus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpus(x) -> (Jumpsuse(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpus(x) -> (Hompuse(x) | Lempuse(x) | Yumpuse(x)))", "all x.(GRuppus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "(all x.(Grimpus(x) -> IsJombuse(x)) & (IsLempuse(x) | IsYumpus(x)))", "all x.(Gruppuse(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))"]}
{"id": "prontoqa_validation_453", "nl": "Wren is a lorpus.", "fol": "lorpus(Wren)", "prediction": ["(Lorpus(Wren))", "all x.(Wren(x) -> Lorpus(x))", "all x.(Wren(x) -> Lordpus(x))", "(Herbarium(Wren) & Lark(Wren))", "is a lorpus.", "all x.(Wren(x) -> Lorpus(x))", "All x.(Wren(x) -> Lorpus(x))", "all x.(Wren(x) -> Lorpus(x))", "all x.(Wren(x) -> Lorpus(x))", "(Storm(Wren) & Lambosnake(Wren))", "all x.(Wren(x) -> Lynx(x))", "all x.(Wren(x) -> AreLorpus(x))", "all x.(Wren(x) -> Throat(x))", "(Lorpus(Wren) & LivesIn(Wren,Lorpheus))", "(Lorpus(Wren) -> HasLorpheus(Wren))", "all x.(Wren(x) -> Lordpus(x))"]}
{"id": "prontoqa_validation_454", "nl": "Every rompus is a gorpus and a dumpus and a lempus.", "fol": "all x. (rompus(x) -> (gorpus(x) & dumpus(x) & lempus(x)))", "prediction": ["all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x y.((Rompus(x) & Rorpus(y)) -> (Dumps(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "(all x.(Rompus(x) -> Gorpus(x)) & (Dumps(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (gorpus(x) & dumpus(x) & lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Forgot(x) & Forgot(x) & Forgot(x) & Forgot(x) & Forgot(x) & Forgot(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dupus(x) & Lempus(x)))", "all x y.((Rompus(x) & Oyster(y)) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))"]}
{"id": "prontoqa_validation_455", "nl": "Fae is a lempus, Fae is a yumpus, and Fae is not a gorpus.", "fol": "(lempus(Fae) & yumpus(Fae) & -gorpus(Fae))", "prediction": ["(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & -Fae(x)))", "(all x.(Fae(x) -> Leopard(x)) & (Fae(x) -> Yampus(x)) & (Fae(x) -> -Gorpus(x)))", "all x y.((Fae(x) & Fae(y)) -> (Lempus(x) | Yumpus(y) | -Gorpus(k)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Yunus(y)) & all z.(Fae(z) -> -Rorpus(z))))", "(all x.(Dolphin(x) -> Lempus(x)) & (Yumpus(x) & -Gorpus(x)))", "all x y z.((Fae(x) & Lempus(y) & Yumpus(z)) -> (Limis(x) & Yumpus(z) & -Gorpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & (Fae(x) -> -Gorpus(x))))", "all x y z.((Fae(x) & Lempus(x) & Yumpus(y) & -Gorpus(z)) -> (Lempus(x) & Yampus(y) & -Rosphus(z)))", "(all x y z.(Fae(x) -> Lempus(x)) & (Fae(y) -> Yupsum(y)) & (Fae(z) -> -Gorpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & -Gorpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & -Gorpus(x)))", "all x y z.((Fae(x) & Yompus(y) & Orpheus(z)) -> (Lempus(x) & Yampus(y) & -Gorpus(z)))", "all x y z.((Fae(x) & Lempus(x) & Yumpsum(y) & -Gorpus(z)) -> (Lempus(x) & Yampus(y) & -Gorpus(z)))", "all x y z.((Fae(x) & Lempus(y) & Yups (z) & -Gorpus(w)) -> (Limes(x) | Yampus(z) & -FaeOphelia(w)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Yumpus(y)) & -Gorpus(y)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Yumpus(y)) & all z.(Fae(z) -> -Gorpus(z))))"]}
{"id": "prontoqa_validation_456", "nl": "Everything that is a wumpus, a brimpus, or a tumpus is a lorpus.", "fol": "all x. ((wumpus(x) | brimpus(x) | tumpus(x)) -> lorpus(x))", "prediction": ["all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.(((Wumpus(x) | Brimpus(x) | Tumpus(x))) -> Loompus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | StunningBrumpus(x) | StunningTumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Loompus(x))", "all x.(OrWumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Swumpus(x) | Brimpus(x) | Tumpus(x)) -> Larpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))"]}
{"id": "prontoqa_validation_457", "nl": "Rex is an impus, Rex is a lempus, and Rex is not a lorpus.", "fol": "(impus(Rex) & lempus(Rex) & -lorpus(Rex))", "prediction": ["(all x.(Rex(x) -> Imperium(x)) & (Lempus(x) -> Rex)) & -Lorpus(x)))", "all x.(Rex(x) -> (Immersion(x) & Lempus(x) & -Lorpus(x)))", "(exists x y.(Rex(x) & Imperator(x)) & exists z.(Rex(y) & Lempus(z)) & exists w.(Lorpus(w) & Rex(x) & -Lorpus(x))))", "(all x.(Rex(x) -> Issuel(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Lorpus(z))))", "(all x y z.((Rex(x) & Impossible(x,y)) -> Lempus(x,y)) & ((Rex(z) & Lemur(z)) -> -Lorpus(z))))", "all x y z.((Rex-Dots(x) & Lempus(y) & -Lorpus(z)) -> (Is(x,y) & Is(x,z)))", "(all x.(Rex(x) -> Impossible(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Lorpus(z))))", "(all x y z.(Rex(x) -> Is(x)) & (Rex(y) -> Lempus(y)) & (Rex(z) -> -Lorpus(z))))", "all x y z.((Rex(x) & Lempus(y) & Lorpus(z)) -> (Impossible(x) & Lempus(y) & -Lorpus(z)))", "(all x.(Issue(x) -> Rex)) & all y.(Lempus(y) -> Rex)) & all z.(Lorpus(z) -> -Lorpus(z))))", "(all x.(Rex(x) -> Iterations(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Lorpus(x)))", "(all x.(Rex(x) -> Impossible(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Lorpus(z))))", "(all x.(Rex(x) -> Is(x)) & (Rex(x) -> Lempus(x)) & -Lorpus(x)))", "all x y z.((Rex(x) & Is(x,z)) -> (Impossible(x) | Lempus(x) | -Lorpus(x)))", "(all x.(Rex(x) -> Illegal(x)) & all y.(Lempus(y) -> -Lorpus(y)))", "all x y z.((Rex(x) & Lempus(y) & -Lorpus(z)) -> (Imposer(x) & Lempus(y) & -Lorps(z)))"]}
{"id": "prontoqa_validation_458", "nl": "Jompuses are dumpuses.", "fol": "all x. (jompus(x) -> dumpus(x))", "prediction": ["all x y.((Jompuse(x) & BiologicalType(y)) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jimpus(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))"]}
{"id": "prontoqa_validation_459", "nl": "Wren is a brimpus and Wren is not a dumpus and Wren is a lempus.", "fol": "(brimpus(Wren) & -dumpus(Wren) & lempus(Wren))", "prediction": ["all x y.((Wren(x) & Brimpus(x)) -> (-Dumpus(y) & Lempus(x)))", "all x y.((Royal(x) & Lempus(y)) -> (Brimpus(x) | -Dumpus(x) | Lempus(y)))", "(all x.(Wren(x) -> Brimpus(x)) & (-Dumpus(x) & Lempus(x))))", "(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> -Dumpus(x)) & (Wren(x) -> Lempus(x)))", "(all x y.(Wren(x) -> Brimpus(x)) & ((Wren(y) & -Dumpus(y))) & ((Wren(x) & Lempus(y))))", "all x y.((Wren(x) & Brimpus(x) & Wren(y) & -Dumpus(y)) -> Lempus(x))", "all x y.((Warning(x) & Brimpus(x) & -Dumpus(y)) -> Lempus(x))", "(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> -Dumpus(x)) & (Wren(x) -> Lempus(x)))", "all x y z.((Wren(x) & Brimpus(x) & Wren(y) & Dumpus(y)) -> (Brimpus(x) & Lempus(z)))", "(all x y.((Wren(x) & Brimpus(x)) -> (Brimpus(y)) | (-Dumpus(y)) & Lempus(y))))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wren(y) -> -Dumpus(y))) & all z.(Wren(z) -> Lempus(z)))", "(all x.(Wren(x) -> Brimpus(x)) & (-Dumpus(x) & Lempus(x))))", "(all x.(Wren(x) -> Brimpus(x)) & (-Dumps(x) & Lempus(x)))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wren(y) -> -Dumps(y))) & all z.(Wren(z) -> Lempus(z)))", "(all x y z.((Wren(x) & Brimpus(y)) -> Brumpus(x)) & ((Wren(z) & -Dumpus(z))) -> Lempus(z)))", "all x y z.((Wren(x) & Brimpus(x) & Wren(y) & Dumpus(y)) -> (Brimpus(x) & Lempus(z)))"]}
{"id": "prontoqa_validation_460", "nl": "Wren is a lorpus, Wren is not a jompus, or Wren is a brimpus.", "fol": "(lorpus(Wren) | -jompus(Wren) | brimpus(Wren))", "prediction": ["all x.((Wren(x) & (Lorpus(x) | -Jompus(x) | Brimpus(x))) -> Role(x))", "(all x y.(Wren(x) -> Lorpus(x)) | (-Jompus(y) | Brimpus(y))))", "(all x.(Wren(x) -> Lorpus(x)) | (-Jompus(x) | Brimpus(x))))", "all x y z.((Wren(x) & Lorpus(x) & -Jompus(y)) | (-Wren(x,z) & Brimpus(z))))", "all x y z.((Wren(x) & Lorpus(y) & -Jompus(z)) | (-Jompus(x,y) & -Brimpus(x,z))))", "all x y.((Wren(x) & Lorpus(y)) | (-Jompus(y) | Brimpus(y))))", "(all x.(Wren(x) -> Lorpus(x)) | (-Wren(x) & Jompus(x)) | (Brimpus(x))))", "all x.(Wren(x) -> (Lorpus(x) | -Jompus(x) | Brimpus(x)))", "(all x.(Wren(x) -> Lorpus(x)) | (-Jompus(x) | Brimpus(x))))", "all x.(Wren(x) -> (Lorpus(x) | -Jompus(x) | Brimpus(x)))", "(all x.(Wren(x) -> Lorpus(x)) | (-Jompus(x)) | (Brimpus(x) & Wren(x))))", "all x y.((Wren(x) & -Jompus(y)) | (-Jompus(x) & Brimpus(y))))", "all x y.((Wren(x) & Lorpus(x) & (-Jompus(y) | Brimpus(y))) -> (Lorpus(x) | Wren(x) & -Jompus(y)))", "(all x.(Wren(x) -> Lopus(x)) | (-Wren(x) -> Jompus(x))) | (-Wren(x) -> Brimpus(x))))", "all x y z.((Wren(x) & Lorpus(y) & -Jimpus(z)) | (-Jimpus(x,z) | Brimpus(x))))", "all x y z.((Wren(x) & Lord(y) & Jompus(z)) | (Wren(x) & Brimpus(x))))"]}
{"id": "prontoqa_validation_461", "nl": "Everything that is an impus and a dumpus and a lorpus is a rompus and a numpus and a jompus.", "fol": "all x. ((impus(x) & dumpus(x) & lorpus(x)) -> (rompus(x) & numpus(x) & jompus(x)))", "prediction": ["all x.(((Impose(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Impersion(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Is(x,Impossum) & IsDumpus(x) & IsLorpus(x)) -> (Rompus(x) & IsNumpus(x) & IsJompus(x)))", "all x.((Impact(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Is(x,Impress) & IsDumpus(x,Impress) & IsLorpus(x)) -> (Rompus(x) & IsNumerus(x) & IsJompus(x)))", "all x.((Implementation(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Is(x) & Impossible(x) & IsDumpus(x) & IsLorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Imbibed(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.(Implementation(x) -> (Dumpus(x) & Lorpus(x) & Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Impossible(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Impossible(x) & Dumpus(x) & Lordpus(x)) -> (Rompus (x) | Numpus(x) | Jompus(x)))", "all x.((Impossible(x) & DumpusAndLorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Impossible(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((IsSociety(x) & IsDocus(x) & IsLorpus(x)) -> (Rempus(x) & Numpus(x) & Jompus(x)))", "all x.((Is(x) & Dumpus(x) & Lordpus(x)) -> (rompus(x) & numpus(x) & jompus(x)))", "all x.((Implicated(x) & Dumpus(x) & Lorpus(x)) -> (rompus(x) & numpus(x) & jompus(x)))"]}
{"id": "prontoqa_validation_462", "nl": "Rex is an impus.", "fol": "impus(Rex)", "prediction": ["all x.(Rex(x) -> IsReleasable(x))", "all x.(Rex(x) -> IsPrime(x))", "all x.(Rex(x) -> Illegal(x))", "all x.(Rex(x) -> IsExercist(x))", "all x.(Rex(x) -> IsDemolished(x))", "all x.(Rex(x) -> Impossible(x))", "All x.(Rex(x) -> Platte.", "all x.(Rex(x) -> Impermant(x))", "NominatedByRex(re)", "all x.(Rex(x) -> IsImpossible(x))", "all x.(Rex(x) -> Is(x,Illegal))", "all x.(Rex(x) -> Isolated(x))", "(Undergoed(Rex) & IsOf(Rex))", "all x.(Rex(x) -> Imperium(x))", "Rex.(Idea(R))", "all x.(Rex(x) -> Cilopril(x))"]}
{"id": "prontoqa_validation_463", "nl": "Rex is a dumpus.", "fol": "dumpus(Rex)", "prediction": ["Rex.IsDumpus(Rex)", "(Dumps(Rex) & Dumpus(Rex))", "all x.(Rex(x) -> Dumpus(x))", "Rex is a Dumpus(x)", "Rex (Dumpus)", "All x.(Rex(x) -> Dumpus(x))", "Rex (Dumpus(x))", "All x.(Rex(x) -> Dumpus(x))", "Rex. (Dumpus(x))", "All x.(Rex(x) -> Dumpus(x))", "Rex.", "Rex is a Dumpus(x)", "Rex is a dumpus.", "Rex.(Dumpus(x) -> Is(x,Dumn))", "Rex.", "Rex is Dumpus(x)"]}
{"id": "prontoqa_validation_464", "nl": "Rex is a lorpus.", "fol": "lorpus(Rex)", "prediction": ["all x.(Rex(x) -> Llorpus(x))", "all x.(Rex(x) -> Lorpus(x))", "all x.(Rex(x) -> Lucus(x))", "all x.(Rex(x) -> Lorpus(x))", "all x.(Rex(x) -> Lorpus(x))", "all x.(Rex(x) -> Lorpus(x))", "all x.(Rex(x) -> Lorpus(x))", "Rex is a lorpus.", "Rex,lorpus, and exists y.(Lorph(x) & Whale(y))", "(Lorpus(Rex) & LoomsThrough(Rex))", "Rex is a lorpus.", "(Lorpus(Rex) -> DoesNotHaveLorpus(Rex))", "Rex (lorpus)", "Rex is a lorpus.", "All x.(Rex(x) -> Lorpus(x))", "all x.(Rex(x) -> Lordpus(x))"]}
{"id": "prontoqa_validation_465", "nl": "Rex is a numpus.", "fol": "numpus(Rex)", "prediction": ["all x.(Rex(x) -> Numpus(x))", "Rex is a Numpus(x)", "all x.(Rex(x) -> Numpus(x))", "(Numpus(Rex))", "Rex is Numpus.", "Rex(x) -> Numpus(x))", "the numpus.", "all x.(Rex(x) -> Numpus(x))", "the numpus -> Rex.", "all x.(Rex(x) -> Numpus(x))", "Rex.", "Rex is Numpus(x)", "all x.(Rex(x) -> Numpus(x))", "Rex is Numpus.", "All x.(Rex(x) -> Nomus(x))", "Rex is Numpus."]}
{"id": "prontoqa_validation_466", "nl": "Everything that is a zumpus, a dumpus, and a tumpus is a jompus and a yumpus and a gorpus.", "fol": "all x. ((zumpus(x) & dumpus(x) & tumpus(x)) -> (jompus(x) & yumpus(x) & gorpus(x)))", "prediction": ["all x.((Zumpus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) | Yumpus(x) | Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) & Dumpus(x) & Tumpus(x)) -> (Jompus(x) & Yampus(x) & Gorpus(x)))", "all x.((Zumpus(x) | Dumpus(x) | Tumpus(x)) -> (Kimble(x) & Jompus(x) & Yompus(x) & Gorpus(x)))", "all x.((Tompus(x) & Dumpus(x) & Tumpus(x)) -> (Jompus(x) & Yompus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Zumpus(x) & Dumpus(x) & Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) & Dumpus(x) & Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Zumpus(x) & Dumpus(x) & Tumpus(x)) -> (Jimpus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jumpus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jumpus(x) & Yompus(x) & Gorpus(x)))", "all x.((Sumpus(x) & Dumpus(x) & Tumpus(x)) -> (Jumpus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Zumpus(x) & Dumpus(x) & Thorpus(x)) -> (Jimpus(x) & Gorpus(x)))", "all x.((Tommpus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.(((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yompus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yampus(x) & Gorpus(x)))"]}
{"id": "prontoqa_validation_467", "nl": "Wren is a zumpus.", "fol": "zumpus(Wren)", "prediction": ["all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "(Wren(w) -> Zumpus(w))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "(Zwern(Wren) & Tompus(Wren))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))"]}
{"id": "prontoqa_validation_468", "nl": "Wren is a yumpus.", "fol": "yumpus(Wren)", "prediction": ["all x y.((Wren(x) & Yampus(y)) -> Yummy(x))", "all x.(Wren(x) -> Yumpus(x))", "(Yumpus(Wren) & Yrumpus(y))", "All x.(Wren(x) -> Yampus(x))", "all x.(Wren(x) -> Yampus(x))", "all x.(Wren(x) -> Yumpus(x))", "(Yumpus(Wren) & HasYumpus(Wren))", "all x.(Wren(x) -> Yampus(x))", "all x.(Wren(x) -> Yumpus(x))", "all x.(Wren(x) -> Yumpus(x))", "all x.(Wren(x) -> Yumpah(x))", "exists x.(Wren(x) & Yampus(x))", "all x.(Wren(x) -> Yampus(x))", "all x.(Wren(x) -> Yumpus(x))", "all x.(Wren(x) -> Yampus(x))", "all x.(Wren(x) -> Yompus(x))"]}
{"id": "prontoqa_validation_469", "nl": "Everything that is a jompus and a tumpus and a dumpus is a lempus, an impus, and a wumpus.", "fol": "all x. ((jompus(x) & tumpus(x) & dumpus(x)) -> (lempus(x) & impus(x) & wumpus(x)))", "prediction": ["all x.((Jompus(x) | Tumpus(x) | Dumpus(x)) -> (Lempus(x) & Impossible(x) & Wampus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Implicator(x) & wumpus(x)))", "all x.((Jimpus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Imperating(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Imperium(x) & Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Imperator(x) & Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Ilira(x) & Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Imperempt(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Impossible(x) & Plumpus(x)))", "all x.((Jimpus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Implicit(x) & Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Issue(x) & Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Ilira(x) | Kumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Impels(x) & Wumpus(x)))", "all x y.((Jompus(x) & Tumpus(y) & Dumpus(x)) -> (Lempus(y) & Impermissible(y) & Wumpus(y)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Impossible(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Imperator(x) | Wumpus(x)))", "all x.((Jompus(x) & Tompus(x) & Dumpus(x)) -> (Lempus(x) | Impossible(x) | Wumpus(x)))"]}
{"id": "prontoqa_validation_470", "nl": "Alex is a jompus.", "fol": "jompus(Alex)", "prediction": ["all x.(Alex(x) -> Jompus(x))", "Alex is jompus.", "all x.(Alexa(x) -> Jompus(x))", "(Jimpus(Alex)", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "All x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "Alex is a Jompus."]}
{"id": "prontoqa_validation_471", "nl": "Alex is a lempus.", "fol": "lempus(Alex)", "prediction": ["Alex is a lempus.", "all x.(Alex(x) -> Lempus(x))", "all x.(Alex(x) -> Lempus(x))", "all x.(Alex(x) -> Lempus(x))", "All x.(Alex(x) -> Leopard(x))", "Alex is a lempus.", "all x.(Alex(x) -> Lempus(x))", "Alex ist ein Lempus(Alex)", "-Lempus(Alex)", "Alex is Lempus.", "all x.(Alex(x) -> Lempus(x))", "all x.(Alex(x) -> Lempus(x))", "all x.(Alex(x) -> Lempus(x))", "Alex is a Lempus.", "Alex is a lempus.", "all x.(Alex(x) -> Lempus(x))"]}
{"id": "prontoqa_validation_472", "nl": "Everything that is a brimpus or a tumpus or an impus is a vumpus and a yumpus and a dumpus.", "fol": "all x. ((brimpus(x) | tumpus(x) | impus(x)) -> (vumpus(x) & yumpus(x) & dumpus(x)))", "prediction": ["all x.((Brumpus(x) | Tumpus(x) | Imperative(x)) -> (Vumpus(x) & Yukus(x) & Dumpus(x)))", "all x.(((Satellite(x) | Slave(x))) -> (Brimpus(x) | Tumpus(x) | Imperative(x)))", "all x.((Brimpus(x) | Tumpus(x) | Imperator(x)) -> (Vumpus(x) & Yampus(x) & Dumpus(x)))", "all x.((Brumpus(x) | Tumpus(x) | Irrigation(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Imperative(x)) -> (Vumpus(x) & Yupus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Imperative(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | IsImpulse(x)) -> (Vumpus(x) & Yampus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | IsInterpretative(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brumpus(x) | Tumpus(x) | IsImpossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((BetweenBrimpus(x) | BetweenTumpus(x) | BetweenIssues(x)) -> (Vumpus(x) | Yampus(x) | Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Erzois(x)) -> (Vumpus(x) & Yampus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Imperator(x)) -> (Vumpus(x) & Yampus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Impermissible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Impermissible(x)) -> (Vimpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Impermand(x)) -> (Vumpus(x) & Yukpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Imperactor(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_validation_473", "nl": "Dumpuses are numpuses.", "fol": "all x. (dumpus(x) -> numpus(x))", "prediction": ["all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Muchuse(x) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpus(x))", "all x.(Dumpuse(x) -> Numpus(x))", "all x.(Dumpuse(x) -> Numpus(x))", "all x.(Dumpuse(x) -> Numbus(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpus(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpus(x))", "all x.(Dumpus(x) -> (Numpuse(x) & HasNucleus(x)))", "all x.(Dumpus(x) -> Numpus(x))"]}
{"id": "prontoqa_validation_474", "nl": "Polly is an impus and Polly is not a numpus and Polly is a yumpus.", "fol": "(impus(Polly) & -numpus(Polly) & yumpus(Polly))", "prediction": ["all x y z.((Polley(x) & Impossible(x) & Polly(y)) -> (-Number(y) & Yumpus(z)))", "all x y.((Polly(x) & Illegal(x)) -> (Polly(x) & -Numpus(x) & Pluto(y)))", "(all x y z.((Poly(x) & Impossible(x)) -> Polly(y)) & ((Poly(z) & -Nompus(z)) -> Yumpus(z))))", "all x y z.((Polly(x) & Polly(y) & Isolated(x) & -Numpus(y)) -> Yimpus(z))", "all x y.((Polly(x) & Impossible(x)) -> (\u2013Numpus(x) & Yumpus(y)))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Between(x,Poly) -> Impossible(x)) & (Between(x,Poly) -> -Numpus(x)) & (Between(x,Poly) -> Yumpus(x)))", "(all x.(Polly(x) -> Impossible(x)) & (Nompus(x) | Yumpus(x)))", "(all x y.((Polly(x) & Is(x,y)) -> Impossible(x)) & ((Poly(y) & -Number(y))) -> Yampus(y)))", "all x y z.((Polly(x) & Polly(y) & Is(x,y)) -> (Is(y,z) & -Is(z) & Is(y,z)) & Is(y,z)))", "all x.((Polly(x) & Is(x)) -> (-Impossible(x) & -Nompus(x) & -Yumpus(x)))", "(all x y z.((Polly(x) & Impossible(x)) -> Polly(y)) & ((Poly(z) & -numpus(z)) -> Yumpa(z)))", "(all x y.(Polly(x) -> Impossible(x)) & (Polly(y) -> -Numpus(y)) & (Polly(y) -> Yumpus(y)))", "all x y.((Polly(x) & Polly(y)) -> (Imposition(x) & -Numpus(y) & -Yumpus(y)))", "(all x.(Poly(x) -> Impossible(x)) & (Poly(x) -> -Nompus(x)) & (Poly(x) -> Yumpus(x)))", "all x y z.((Polly(x) & Is(y) & Polly(z)) -> (Is(y) & -IsNompus(z) & -IsYumpus(z)))"]}
{"id": "prontoqa_validation_475", "nl": "Polly is a jompus or Polly is a rompus or Polly is not a dumpus.", "fol": "(jompus(Polly) | rompus(Polly) | -dumpus(Polly))", "prediction": ["((Boar(Polo) & Jompus(Polo)) | (Own(Polo) & Rompus(Polo))))", "all x.((Poly(x) & (Jompus(x) | Rompus(x) | -Dumpus(x))) -> Polly(x))", "(all x.(Polly(x) -> Jompus(x)) | (Poly(x) -> Rompus(x)) | (Polly(x) -> -Dumpus(x))))", "(exists x.(Double(x) & Or Polly(x)) & (Jompus(x) | Rompus(x) | -Dumpus(x))))", "(all x.(Polly(x) -> Jompus(x)) | (Polly(x) -> Rompus(x))) | (Polly(x) -> -Dumpus(x)))", "all x.((Polly(x) & (Jimpus(x) | Rompus(x) | NullDumpus(x))) -> Polly(x))", "all x.((Polly(x) & (Jompus(x) | Rompus(x) | Dumpus(x))) -> Polly(x))", "(exists x.(Polly(x) & (Jompus(x) | Rompus(x)) | -Dumpus(x)))", "all x.(Polly(x) -> ((Jomeuse(x) | Rompus(x) | -Dumpus(x))))", "(exists x.(Ploy(x) & (Jompus(x) | Rompus(x)) | -Dumpus(x)))", "(jompus(Polly) | Rompus(Polly) | -Dumpus(Polly)))", "all x.((Ploy(x) & (Jompus(x) | Rompus(x) | -Dumpus(x))) -> PollyBelongsTo(x,y))", "exists x.(Poly(x) & ((Jompus(x) | Rompus(x)) | NoDumus(x))))", "(all x.(Poly(x) -> (Jompus(x) | Rompus(x) | -Dumpus(x))))", "all x.((Polly(x) | Polly(x)) -> (Jompus(x) | Rompus(x) | -Dumpus(x)))", "(all x.(Polly(x) -> (Jompus(x) | Rompus(x)) | -Dumpus(x)))"]}
{"id": "prontoqa_validation_476", "nl": "Sam is not an impus, Sam is a brimpus, and Sam is a shumpus.", "fol": "(-impus(Sam) & brimpus(Sam) & shumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Impossible(x)) & ((Sam(x) & Brimpus(x)) | (SMust(x) & Humpus(x))))", "(all x.(Sam(x) -> -Impossible(x)) & all y.(Brimpus(y) -> Shumpus(y)))", "all x y z.((Sam(x) & Brimpus(y) & Humpus(z)) -> (-Imitare(x) | (Brimpus(y) | Humpus(z)))))", "(all x.(Sam(x) -> -Ilvicera(x)) & ((Sam(x) & Brimpus(x)) | (Sam(x) & Humpus(x)))))", "(all x.(Sam(x) -> -Issue(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> Humpus(x)))", "all x y z.((Sam(x) & Brimpus(y) & Humpus(z)) -> (-Ilissa(x) | (Brimpus(x) | Humpus(x))))", "(all x.(Sam(x) -> -Impress(x)) & all y.(Brimpus(y) -> Stimulus(y))))", "(all x.(Sam(x) -> -Imbis(x)) & (Brumpus(x) | Humpus(x))))", "(all x.(Sam(x) -> -Issue(x)) & all y.(Sam(y) -> Brimpus(y)) & all z.(Sam(z) -> Humpus(z))))", "all x y z.((Sam(x) & IsNotIssue(x) & Brimpus(y) & Hushpus(z)) -> (-Issue(x) & -Issue(y) & -Issue(z) & -Issue(z) & -Issue(y) & -Issue(y) & -Issues(z)))", "(all x.(Sam(x) -> -Impos(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> Humpus(x)))", "all x y z.((Sam(x) & Brimpus(y) & Humpus(z)) -> (-IsIsImplementator(x) & -Impossible(y) & Brimpus(z) & Humpus(z)))", "((Sam(Sam) & -Issue(Sam)) | ((Sam(Sam) & Brimpus(Sam))) | (Sam(Sam) & Humpus(Sam))))", "(all x y z.((Sam(x) & Obsidian(x)) -> -Impossible(x)) & ((Sam(y) & Brimpus(y)) -> (Shumpus(z))))", "(all x.(Sam(x) -> -Impossible(x)) & (Brimpus(x) | Humpus(x))))", "(all x.(Sam(x) -> -Impossible(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> Humpus(x)))"]}
{"id": "prontoqa_validation_477", "nl": "Sam is not a tumpus or Sam is a wumpus or Sam is a grimpus.", "fol": "(-tumpus(Sam) | wumpus(Sam) | grimpus(Sam))", "prediction": ["all x.(Sam(x) -> (-Tumpus(x) | Wumpus(x) | Grappa(x)))", "all x.((Sam(x) -> (-Tumpus(x) | Wumpus(x) | Grimpus(x)))", "((Sam(sam) & -Tumpus(sam)) | (Sam(sam) & Wumpus(sam)) | (Sam(sam) & Grimpus(sam))))", "all x y.((Sam(x) & -Tumpus(x)) | (Sam(y) & Wumpus(y)) | (Sam(y) & Grimpus(y))))", "all x.((Sam(x) & -Tumpus(x)) | (Sam(x) & Wumpus(x)) | (Sam(x) & Grimpus(x))))", "(all x.(Sam(x) -> -Tumpus(x)) & (Sam(x) | Wumpus(x)) | Grimpus(x)))", "all x.((Sam(x) & -Tumpus(x)) | (Sam(x) & Wumpus(x)) | (Sam(x) & Grimpus(x))))", "all x.((Sam(x) & -Tumpus(x)) | (Wumpus(x) | Grimpus(x))))", "all x.((Sam(x) & -Tumpus(x)) | (Sam(x) & Wumpus(x) | Smoothpus(x))))", "exists x.(Sam(x) & -Tumpus(x) & ((Sam(x) & Wumpus(x)) | (Sam(x) & Grimpus(x)))))", "all x y z.((Sam(x) & Tumpus(y) & -Tumpus(x) & Sam(z)) | (Wumpus(z) | Grimpus(z))))", "(all x.(Sam(x) -> -Tumpus(x)) | (Sam(x) -> Wumpus(x)) | (Sam(x) -> Grimpus(x))))", "all x y.((Sam(x) & -Tumpus(x) & Sam(y)) | (-Tumpus(y) & Sam(z)) | (-Tumpus(z) & Sam(y)) | (-Tumpus(y) & Wampus(y) & Grimpus(z))))", "(-Tumpus(Sam) | (Wumpus(Sam) | Grimpus(Sam))))", "all x.(Sam(x) -> (-Tumpus(x) | (-Wumpus(x) | Grimpus(x))))", "all x.(Sam(x) -> (-Tumpus(x) | Wumpus(x) | Grouchpus(x)))"]}
{"id": "prontoqa_validation_478", "nl": "Everything that is a lorpus, a jompus, or a yumpus is a zumpus.", "fol": "all x. ((lorpus(x) | jompus(x) | yumpus(x)) -> zumpus(x))", "prediction": ["all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yuumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Stompus(x) & (Lorpus(x) | Jompus(x) | Yumpus(x))) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yampus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Larpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))"]}
{"id": "prontoqa_validation_479", "nl": "Sally is a dumpus and a yumpus and a grimpus.", "fol": "(dumpus(Sally) & yumpus(Sally) & grimpus(Sally))", "prediction": ["(Dumps(Sally) | Yumps(Sally) | Grimpus(Sally)))", "(Pupus(Sally) & Yupus(Sally) & Grimpus(Sally))", "all x y.((Sally(x) & Dumpus(x)) -> (Yumpus(x) & Grimpus(x)))", "all x.(Sally(x) -> (Dupus(x) & Yumpus(x) & Grimpus(x)))", "all x.(Sally(x) -> (Dumpus(x) & Yumpus(x) & Grimpus(x)))", "(exists x.(Sally(x) & Dumpus(x)) & exists yumpus(y) & exists z.(Grimpus(z) & Grimpus(z))))", "(exists x.(Sally(x) & Dumpus(x)) & exists y.(Yumpus(y) & Grimpus(y))))", "(Dumpus(Sally) & Yumpus(Sally) & Grimpus(Sally))", "(Pupus(Sally) & Yompus(Sally) & Gruppus(Sally))", "all x y.((Sally(x) & Dumpus(y)) -> (Yumpus(x) & Grimpus(y)))", "all x.(Sally(x) -> (Dumpus(x) & Yompus(x) & Grimpus(x)))", "all x.(Sally(x) -> (Dumps(x) & Yampus(x) & Grimpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & (Yumpus(x) | Grimpus(x))))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Humpus(y) & Grimpus(y))))", "(Whiskey(Sally) & Dumpus(Sally) & Yumpus(Sally) & Grimpus(Sally))", "(both Sally and Dumpus(Sally) & Yampus(Sally) & Grosspus(Sally))"]}
{"id": "prontoqa_validation_480", "nl": "Sally is a zumpus.", "fol": "zumpus(Sally)", "prediction": ["Sally is a zumpus.", "Sally is Zumpus(s) -> HasVista(s))", "Sally is a zumpus.", "Sally (zombie)", "Sally is a zumpus.", "Sally is zumpus.", "Sally is a zumpus.", "Sally is zumpus.", "is zumpus.", "Sally is zumpus.", "Sally.Stompus(Sally)", "Sally ist Zumpus(Sally)", "Sally is a zumpus.", "Sally (Tompus)", "Sally is zumpus.", "All x.(Sally(x) -> Zumpus(x))"]}
{"id": "prontoqa_validation_481", "nl": "Yumpuses are numpuses.", "fol": "all x. (yumpus(x) -> numpus(x))", "prediction": ["(all x.(Yumpus(x) -> Numpe(x)))", "all x.(Yumpus(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpuse(x))", "(All x.(Yumpus(x) -> Numpuse(x))", "all x.(Umpus(x) -> Numpuse(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x.(Humpus(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x.(Umpus(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpuse(x))"]}
{"id": "prontoqa_validation_482", "nl": "Alex is a lempus and a yumpus and a lorpus.", "fol": "(lempus(Alex) & yumpus(Alex) & lorpus(Alex))", "prediction": ["all x.(Alex(x) -> (Lempus(x) & Yampus(x) & Lorpus(x)))", "all x.(Alex(x) -> (OfLempus(x) & OfYumpus(x) & OfLorpus(x)))", "all x.(Alex(x) -> (Lempus(x) & Yampus(x) & Lorpus(x)))", "all x.(Alex(x) -> (Lempus(x) & Yumpa(x) & Loomis(x)))", "all x.(Alex(x) -> (Lempus(x) & Yumps(x) & Lorpus(x)))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "(all x.(Alex) -> Lempus(x)) & (Yumpus(x) & Flour(x)))", "(all x.(Alex(x) -> Lempus(x)) & (Yumpus(x) & Throat(x)))", "all x.(Alex(x) -> (Lempus(x) & Yuppus(x) & Lorpus(x)))", "(all x.(Alex(x) -> Lempus(x)) & (Yumpus(x) | Lorpus(x)))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Loomis(x)))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_validation_483", "nl": "Alex is a yumpus, a numpus, or an impus.", "fol": "(yumpus(Alex) | numpus(Alex) | impus(Alex))", "prediction": ["all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impressionist(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impermissable(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impermissor(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperator(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impossible(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impermant(x)))", "all x.(Alex(x) -> (yumpus(x) | numpus(x) | impus(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperator(x)))", "all x.(Alex(x) -> (Yuppus(x) | Numpus(x) | Impossible(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperva(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impeccation(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperemptor(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impeccable(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impossible(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Issue(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperator(x)))"]}
{"id": "prontoqa_validation_484", "nl": "Everything that is a lorpus, a grimpus, or a yumpus is a lempus and a rompus and a wumpus.", "fol": "all x. ((lorpus(x) | grimpus(x) | yumpus(x)) -> (lempus(x) & rompus(x) & wumpus(x)))", "prediction": ["all x.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpu(x)) -> (Lempus(x) & Rompus(x) & Wumpu(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) | Rompus(x) | Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Limpus(x) & Rompus(x) & Wumpus(x)))", "all x.((All Y.(Lorpus(x) | Grimpus(x) | Yumpus(x))) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Lempus(x) & Rompus(x) & Wompus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x y.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Lempus(y) & Rompus(y) & Wumpus(y)))", "all x.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Lempus(x) | Rompus(x) | Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x y.((Goddess(x) & Lorpus(x) & Grimpus(x) & Yampus(y)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))"]}
{"id": "prontoqa_validation_485", "nl": "Polly is a grimpus.", "fol": "grimpus(Polly)", "prediction": ["Polly is a grimpus.", "(Larkpus(Polly)", "(Grimpus(Polly) -> Crumpus(Polly))", "Polly ist Grempus.", "Polly is a Greasy.", "Polly is a Grimpus.", "(FixesGroup(Polly) & Grimpus(Polly))", "Polly is a Grappa.", "All x.(Polly(x) -> Grimpus(x))", "all x.(Polly(x) -> Grimpus(x))", "all x.(Polly(x) -> Grimpus(x))", "all x.(Polly(x) -> Grimpus(x))", "all x.(Polly(x) -> Grumpus(x))", "all x.(Pollly(x) -> Grimpus(x))", "Polly is a Grimpus.", "(Grampus(Polly) & Felt(Polly))"]}
{"id": "prontoqa_validation_486", "nl": "Dumpuses are lorpuses.", "fol": "all x. (dumpus(x) -> lorpus(x))", "prediction": ["all x.(Dumpuse(x) -> Lorpuse(x))", "all x.(Dumpuse(x) -> Lorpus(x))", "all x.(Dumpuse(x) -> Lombe(x))", "all x.(Dumpuse(x) -> Larpuse(x))", "all x.(Dumpuse(x) -> Lorpus(x))", "all x.(Dumpuse(x) -> Loomis(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpuse(x) -> Lorpus(x))", "all x.(Dumpuse(x) -> Lorpus(x))", "all x.(Dumpuse(x) -> Loompus(x))", "all x.(Dumpuse(x) -> L\u00e9pomuse(x))", "all x.(Dumpuse(x) -> Loomis(x))", "all x.(Dumpuse(x) -> Lorpe(x))", "all x.(Dumpuse(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpe(x))", "all x.(Dumpuse(x) -> Lorpus(x))"]}
{"id": "prontoqa_validation_487", "nl": "Rex is a shumpus and a vumpus and a dumpus.", "fol": "(shumpus(Rex) & vumpus(Rex) & dumpus(Rex))", "prediction": ["all x.(Rex(x) -> (Shumpus(x) & Vumpus(x) & Dumpus(x)))", "all x.(Rex(x) -> (Shumpus(x) & Vampus(x) & Dumpus(x)))", "(singleDumpus(Rex) & Has(Rex,visumpus)) & Has(Rex,dumpus))", "(all x.(Rex(x) -> Shumpus(x)) & all y.(Vumpus(y) -> Dumpus(y)))", "(all x.(Rex(x) -> Saumpus(x)) & all y.(Vumpus(y) -> Dumpus(y)))", "(all x.(Rex(x) -> Shumpus(x)) | (Vimpus(x) & Dumpus(x))))", "(all x.(Rex(x) -> Humpus(x)) & (Vimpus(x) -> Dumpus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & all y.(Vumpus(y) -> Dumpus(y)))", "all x.(Rex(x) -> (Hampus(x) | Vulmpus(x) | Dumpus(x)))", "all x.(Rex(x) -> (Shumpus(x) & Vumpus(x) & Dumpus(x)))", "all x.(Rex(x) -> (Shumpus(x) & Vumpus(x) & Dumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & (Vimpus(x) -> Dumpus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (Vumpus(x) & Dumpus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (Vimpus(x) -> Dumpus(x)))", "(Rex(Rex) & Humpus(Rex) & Vumpus(rex) & Dumpus(rex))", "all x.(Rex(x) -> (Shumpus(x) & Vumpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_validation_488", "nl": "Rex is a yumpus, a tumpus, or a lorpus.", "fol": "(yumpus(Rex) | tumpus(Rex) | lorpus(Rex))", "prediction": ["all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumulus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "(yumpus(x) | tumpus(x) | lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "(Yampus(rex) | Tumpus(rex) | Lorpus(rex)))"]}
{"id": "prontoqa_validation_489", "nl": "Everything that is a wumpus or a grimpus or a brimpus is a vumpus, an impus, and a sterpus.", "fol": "all x. ((wumpus(x) | grimpus(x) | brimpus(x)) -> (vumpus(x) & impus(x) & sterpus(x)))", "prediction": ["all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Imperator(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Emperus(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impermiss(x) & Steroid(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impossible(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impermiss (x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impossible(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Issue(x) & Sterpus(x)))", "all x!((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) | Imperempt(x) | Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impossible(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Imperator(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Issue(x) & Sterepus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Imperempt(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Issue(x) & Sterpus(x)))", "all x.(((Wumpus(x) | Grimpus(x) | Brimpus(x))) -> (Vumpus(x) & Issue(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Imperium(x) & Steroid(x)))", "all x.(((Wumpus(x) | Grimpus(x) | Brimpus(x))) -> (Vumpus(x) & Impossible(x) & Sterpus(x)))"]}
{"id": "prontoqa_validation_490", "nl": "Rex is a wumpus.", "fol": "wumpus(Rex)", "prediction": ["All x.(Wumpus(x) -> Rex(x))", "(Wumpus(Rex) & Hatches(Rex))", "(Wumpus(rex) & Species(rex))", "Rex is a Wumpus.", "all x.(Rex(x) -> Mumpus(x))", "(Wumpus(Rex) & Wumpus(Wumpus))", "Rex.(Wumpus)", "(Wumpus(Rex))", "Rex is a Wumpus.", "all x.(Wumpus(x) -> Rex(x))", "Rex is a wumpus.", "(Wumpus(Rex)", "Wemurus(Rex)", "all x.(Rex(x) -> Wumpus(x))", "All x.(Rex(x) -> Wumpus(x))", "all x.(Rex(x) -> Widespread(x))"]}
{"id": "prontoqa_validation_491", "nl": "Rex is a vumpus.", "fol": "vumpus(Rex)", "prediction": ["Rex,y.((Vumpus(y))", "all x.(Rex(x) -> Vumpus(x))", "(Vumpus(Rex))", "Rex ist einVumpus(x)", "(Vumpus(Rex) & LongsStandard(Rex,City))", "(Vimpus(Rex) & CanBe(Rex))", "all x.(Rex(x) -> Vulpist(x))", "A(Rex) -> Vulupin(Rex))", "Rex is a Vultops(Rex)", "Rex,Vumpus(x)", "Rex ist ein Vulpismum.", "Rex.Vumpus(x)", "Rex is a vumpus.", "all x.(Vumpus(x) -> Rex(x))", "Rex is a Voompus(x)", "(Vumpus(Rex))"]}
{"id": "prontoqa_validation_492", "nl": "Grimpuses are yumpuses, rompuses, and lorpuses.", "fol": "all x. (grimpus(x) -> (yumpus(x) & rompus(x) & lorpus(x)))", "prediction": ["all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grompuse(x) -> (Yumpuse(x) | Rompuse(x) | Lorpuse(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpuse(x) -> exists y.(Yumpus(y) | Rompus(y) | Lorpus(y)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "(all x.(Grimpus(x) -> Yampus(x)) | (Rompus(x) | Lorpus(x))))", "(all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Llorpus(x)))", "(all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Llorpus(x)))", "all x.(Gripperpus(x) -> (Yumpus(x) & Romax(x) & Lorpus(x)))", "all x.(Grimpuse(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lordpus(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpus(x) -> (yumpus(x) | rompus(x) | Lopus(x)))", "all x y.((Grimpus(x) & Yampus(y)) | Rompus(y) | Lorpus(y))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lampus(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))"]}
{"id": "prontoqa_validation_493", "nl": "Numpuses are not yumpuses.", "fol": "all x. (numpus(x) -> -yumpus(x))", "prediction": ["(Yumpus(n) & -Yumpus(s))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Nupuse(x) -> -Yumpus(x))", "-Yumpus(n)", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpuse(x) -> -Yumpus(x))", "(-Yumpus(Numpus))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "-Yumpus(Numpus)", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))"]}
{"id": "prontoqa_validation_494", "nl": "Alex is a numpus and a rompus and a sterpus.", "fol": "(numpus(Alex) & rompus(Alex) & sterpus(Alex))", "prediction": ["(3)", "all x y.((Alex(x) & Numpus(x) & Rompus(y)) -> Sterpus(x))", "(Numpus(Alex) & Rompus(Alex) & Sterpus(Alex))", "(numpus(Alex) | rompus(Alex) | sterpus(Alex)))", "all x.(Alex(x) -> (Numpus(x) & Rompus(x) & STERPOP.))", "all x y.((Alex(x) & Numpus(y)) -> (Rompus(x) & Steroid(x)))", "(numpus(Alex) & rompus(Alex) & sterpus(Alex))", "all x.(Alex(x) -> (Numpus(x) & Rompus(x) & Sterpus(x)))", "all x.(Alex(x) -> (Numpus(x) & Rompus(x) & Sterpus(x)))", "all x.(Alex(x) -> (Numpus(x) | Rompus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Nompus(x) & Rompus(x) & Sterpus(x)))", "(Nompus(Alex) | Rompus(Alex) | Sternpus(Alex)))", "all x.(Alex(x) -> (Numpus(x) & Rompus(x) & Steroid(x)))", "all x y z.((Alex(x) & Number(y) & Rompus(z)) -> (Numpus(x) & Stompus(x)))", "(Numpus) & Rompus(Alex) & Sterpus(Alex))", "all x.(Alex(x) -> (HasNumpus(x) & HasRompus(x) & HasSteerpus(x)))"]}
{"id": "prontoqa_validation_495", "nl": "Alex is not a grimpus.", "fol": "-grimpus(Alex)", "prediction": ["all x.(Alex(x) -> -Grippus(x))", "all x.((Alex(x) & -Grimpus(x)) -> NotCan(x))", "all x.(Alex(x) -> -Grimpus(x))", "Alex is notGrimpus(Alex)", "\u201cAlex\u201d -Grimpus(Alex))", "Alex is notGrimpus(Alex)", "Alex -Grimppus(Alex)", "Alex is not a Grimpus.", "all x.(Alex(x) -> -Grimpus(x))", "all x.(Alex(x) -> -Grimpus(x))", "-Grimpus(Alex)", "Alex is notAgrpsue.", "Alex, unfortunately, is notGrimpus(Alex)", "Alex is not a Grimpus.", "all x.(Alex(x) -> -Grimpus(x))", "all x.(Alex(x) -> -Grimpus(x))"]}
{"id": "prontoqa_validation_496", "nl": "Everything that is a dumpus or a wumpus or a numpus is a jompus, a tumpus, and a zumpus.", "fol": "all x. ((dumpus(x) | wumpus(x) | numpus(x)) -> (jompus(x) & tumpus(x) & zumpus(x)))", "prediction": ["all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.(((Dumus(x) | Wumpus(x) | Numpus(x))) -> (Jompus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jumpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Supreme(x) | Wumpus(x) | Numpus(x)) -> (Jumpus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jimpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Nompus(x)) -> (Jumpus(x) | Tumpus(x) | Toumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Whumpus(x) | Numpus(x)) -> (Jompus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumus(x) | Wumpus(x) | Numpus(x)) -> (Jumpus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x))) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Hompus(x) & Tompus(x) & Zumpus(x)))", "all x.((Dumpsus(x) | Wumpus(x) | Numpus(x)) -> (Jimpus(x) & Tumulus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) & Tumulus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jimpus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) & Tumpus(x) & Zumpus(x)))"]}
{"id": "prontoqa_validation_497", "nl": "Alex is a zumpus.", "fol": "zumpus(Alex)", "prediction": ["all x.(Alex(x) -> Zumpus(x))", "Alex is a zumpus.", "all x.(Alex(x) -> Zumpus(x))", "all x.(Alex(x) -> Zumpus(x))", "all x.(Tompus(x) -> Alex(x))", "all x.(Alex(x) -> Zumpus(x))", "Alex is zumpus.", "Alex is a Zumpus.", "(Zumpus(Alex) -> Tosp(Alex))", "Alex EstesTumpus(Alex)", "Alex is Zumpus.", "Alex is Zumpus.", "all x.(Alex(x) -> Zumpus(x))", "all x.(Alex(x) -> Zumpus(x))", "ist zumpus(Alex)", "all x.(Alex(x) -> Zumpus(x))"]}
{"id": "prontoqa_validation_498", "nl": "Everything that is a grimpus, a zumpus, and a numpus is a wumpus.", "fol": "all x. ((grimpus(x) & zumpus(x) & numpus(x)) -> wumpus(x))", "prediction": ["all x.((Fragus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Grumpus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Touchpus(x) | Humpus(x)) -> Wampus(x))", "all x.((Cruppus(x) & Zumpus(x) & Numpus(x)) -> Wempus(x))", "all x.((Rumpus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Crumpus(x) | Zumpus(x) | Numpus(x)) -> Wildpod(x))", "all x.((Gruppus(x) & Zumpus(x) & Numpus(x)) -> Wumpus(x))", "all x.((Element(x) & Grimpus(x) & Zumpus(x) & Numpus(x)) -> Wumpus(x))", "all x.((Grampus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Crurpus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Smallpus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Drumpus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Grampus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "(all x.(Roompus(x) & Grimpus(x)) & all y.(Tompus(y) & Numpus(y)) -> Wumpus(x)))", "all x.((Frostpus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Crasput(x) | Zumpus(x) | Numpus(x)) -> Wampus(x))"]}
{"id": "prontoqa_validation_499", "nl": "Stella is a grimpus.", "fol": "grimpus(Stella)", "prediction": ["Stella is a Grimpus(Stella)", "all x.(Stella(x) -> Grimpus(x))", "all x.(Stella(x) -> Grimpus(x))", "(Grimpus(Stella) & -Grimpus(Stella))", "Stella is Gruff.", "(Grumpus(Stella))", "all x.(Stella(x) -> Grimpus(x))", "Stella is Grrumpus(s)", "Stella is a Grimpus.", "is.Crush(Stella)", "Stella is a Grimpus.", "Stella is grimpus.", "Stella is an Omen(Stella)", "Stella is a grimpus.", "Stella is a Grimpus (Grumpus)", "all x.(Stella(x) -> Grimpus(x))"]}
{"id": "prontoqa_validation_500", "nl": "Stella is a wumpus or a jompus or a rompus.", "fol": "(wumpus(Stella) | jompus(Stella) | rompus(Stella))", "prediction": ["all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "ALL x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "(Wumpus(Stella) | Jompus(Stella) | Rompus(Stella)))", "(Wumpus(Stella) | Jompus(Stella) | Rompus(Stella)))", "(exists x.(Wumpus(x) | Jompus(x) | Rompus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "(Reference(Stella) -> (Wumpus(Stella) | Identification(Stella))) | Identification(Stella) -> (Jompus(Stella) | Identification(Stella))))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "(All x.(Stella(x) -> Wampus(x,x)) | (Jompus(x) | Rompus(x))))", "all x.(Wumpus(x) | Jompus(x) | Rompus(x))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))"]}
{"id": "prontoqa_validation_501", "nl": "Everything that is a brimpus and a lempus and a shumpus is a wumpus, a vumpus, and a grimpus.", "fol": "all x. ((brimpus(x) & lempus(x) & shumpus(x)) -> (wumpus(x) & vumpus(x) & grimpus(x)))", "prediction": ["all x.((Brimpus(x) | Lempus(x) | Humpus(x)) -> (Bumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brompus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x y.((Brimpus(x) & Lempus(x) & Humpus(y)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Brimpus(x) | Lempus(x) | Humpus(x)) -> (Wumpus(x) | Voluptu(x) | Grimpus(x)))", "all x.((Brumpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Purple(x) & Brimpus(x) & Lempus(x) & Shumpus(x)) -> (Wumpus(x) & Voompus(x) & Grimpus(x)))", "all x.((Brimpus(x) | Lempus(x) | Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brumpus(x) | Lempus(x) | Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Shumpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x y.((Brimpus(x) & Lempus(y) & Humpus(y)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vampus(x) & Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x y z.((Birmpus(x) & Lempus(y) & Humpus(z)) -> (Wumpus(x) & Vampus(x) & Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vulpus(x) & Grimpus(x)))", "all x.((Wumpus(x) | Umpus(x) | Vumpus(x) | Grimpus(x)) -> (Brimpus(x) & Lempus(x) & Humpus(x)))"]}
{"id": "prontoqa_validation_502", "nl": "Fae is a lempus.", "fol": "lempus(Fae)", "prediction": ["has Lempus(Fae)", "all x.(Fae(x) -> Lempus(x))", "all x.(Fae(x) -> Lempus(x))", "all x.(Fae(x) -> Lempus(x))", "all x.(Fae(x) -> Loomus(x))", "(Lempus(Fae))", "all x.(Fae(x) -> Lempus(x))", "exists x.(Fae(x) & Lempus(x))", "all x.(Fae(x) -> Lempus(x))", "all x.(Fae(x) -> Lempus(x))", "all x.(Fae(x) -> Lempus(x))", "(Lempus(Fae))", "all x.(Fae(x) -> Lempus(x))", "(Lempus(Fae) & Lempus(Fae))", "all x.(Fae(x) -> Lempus(x))", "all x.(Fae(x) -> Lempus(x))"]}
{"id": "prontoqa_validation_503", "nl": "Each gorpus is not a rompus.", "fol": "all x. (gorpus(x) -> -rompus(x))", "prediction": ["all x.(Rompus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rrompus(x))", "all x.(Gorpus(x) -> -ROMP(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))"]}
{"id": "prontoqa_validation_504", "nl": "Every yumpus is a vumpus.", "fol": "all x. (yumpus(x) -> vumpus(x))", "prediction": ["all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Voompus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vulmpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))"]}
{"id": "prontoqa_validation_505", "nl": "Sam is a gorpus and a wumpus and a brimpus.", "fol": "(gorpus(Sam) & wumpus(Sam) & brimpus(Sam))", "prediction": ["exists x.(Sam(x) & Golpus(x) & Wumpus(x) & Brimpus(x))", "all x.(Sam(x) -> (Gorpus(x) | Rumpus(x) | Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "all x y.((Sam(x) & Gorpus(y)) -> (Wumpus(x) | Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) & Wampus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) & Humpus(x) & Brimpus(x)))", "(Ross(Sam) | Wumpus(Sam) | Brimpus(Sam)))", "all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "(all x.(Sam(x) -> Gorpus(x)) & (Wumpus(x) | Brimpus(x)))", "all x.(SamadIsGorpus(x) -> (Wumpus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) | Wumpus(x) | Brimpus(x)))", "exists x.(Sam(x) & Gorpus(x) & Wumpus(x) & Brimpus(x))", "all x y.((Sam(x) & Wormpus(y)) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "(Gorpus(Sam) & Wumpus(Sam) & Brimpus(Sam))", "all x y z.((Sam(x) & Gorpus(y) & Wampus(z)) -> (Elements(x,y,z) & InDomestic(x,y) & InDomestic(x,z)))"]}
{"id": "prontoqa_validation_506", "nl": "Everything that is a rompus, a grimpus, and a lorpus is an impus and a sterpus and a dumpus.", "fol": "all x. ((rompus(x) & grimpus(x) & lorpus(x)) -> (impus(x) & sterpus(x) & dumpus(x)))", "prediction": ["all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Issue(x) & Istrum(x) & Istratus(x) & Istratus(x) & Istratus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lordpus(x)) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> Is(x,Is(x,IsSterepus(x) & Is(x,IsDumps)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Ilpos(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Imperator(x) & Impossible(x)))", "all x.((Rompus(x) | Grimpus(x) | Lordpus(x)) -> (Issue(x) | Sterpus(x) | Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossum(x) & -Sterpus(x) & -Dumpus(x)))", "all x.((Themselves(x) & (Rompus(x) | Grimpus(x) | Lorpus(x))) -> (Imperator(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Sterpus(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Dupossible(x))))", "all x.((Compus(x) | Grimpus(x) | Lordpus(x)) -> (Impos(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> IsImpossible(x)) & IsSterepus(x) & IsDumpus(x))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> Imitating(x)) & Imitating(x) & Imitating(x) & Sterpus(x) & Imitating(x) & Imitating(x) & Imitating(x) & Imitating(x) & Imitating(x) & Imitating(x) & Imitating(x))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Imposer(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impose(x) & Sterpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_validation_507", "nl": "Polly is a sterpus.", "fol": "sterpus(Polly)", "prediction": ["all x.((Polly(x) & Sterpus(x)) -> Sterpus(x))", "all x.(Polly(x) -> Sterpus(x))", "Polly is a Sterpus.", "Polly is Sterpus.", "Polly is a Sterpus.", "all x.(Polly(x) -> Sterpus(x))", "Polly is a sterpus.", "all x.(Sterpus(x) -> Polly(x))", "all x.(Sterpus(x) -> Polly(x))", "all x.(Polly(x) -> Sterpus(x))", "Polly ist Sterpus(poly,z)", "(Sterpus(Polly)", "Polly is sterpus.", "exists x.(Sterpus(x) & Polly(x))", "all x.(Pooly(x) -> Sterpus(x))", "Polly is a Sterpus."]}
{"id": "prontoqa_validation_508", "nl": "Each grimpus is a shumpus.", "fol": "all x. (grimpus(x) -> shumpus(x))", "prediction": ["all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Sumpfus(x))", "all x.(Grimpus(x) -> Snompus(x))", "all x.(Slumpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x.(Grimpus(x) -> Sushi(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_validation_509", "nl": "Impuses are sterpuses, yumpuses, and lorpuses.", "fol": "all x. (impus(x) -> (sterpus(x) & yumpus(x) & lorpus(x)))", "prediction": ["all x.(Impuse(x) -> (Sterpuse(x) | Yumpes(x) | Lopuses(x)))", "exists x.(Impuse(x) & (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpus(x) | Yumpus(x) | Lorpus(x)))", "all x.(Impus(x) -> (Starpuse(x) | Yumpe(x) | Lorpuse(x)))", "all x.(Impusite(x) -> (Sterpuse(x) | Yumphs(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yump\u00e9s(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yampuse(x) | Lorpuse(x)))", "(all x.(Impuse(x) -> (Sterpuse(x) | Yaumpuse(x) | Lorpuse(x))))", "all x.(Impuse(x) -> (Sterpuse(x) | Yampuse(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Youngpuse(x) | Lorpuse(x)))", "all x.(Impure(x) -> (Sterpuse(x) | Yumpe(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yumpe(x) | Laures(x)))", "all x y z.((Improve(x) & Sterozo(y) & Yampus(z) & Lopa(w)) -> (Sterpuse(y) | Yompus(z) | Loxopus(w)))", "(all x.(Impuse(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))"]}
{"id": "prontoqa_validation_510", "nl": "Shumpuses are not sterpuses.", "fol": "all x. (shumpus(x) -> -sterpus(x))", "prediction": ["all x.(Shuppe(x) -> -Sterpuse(x))", "all x.(Shutup(x) -> -Sterpuse(x))", "all x.(Shumpus(x) -> -Sterpuse(x))", "all x.(Shupuse(x) -> -Sterpuse(x))", "all x.(Shuppe(x) -> -Sterpuse(x))", "all x.(Shampoos(x) -> -(Sterpuse(x) & Sterpone(x)))", "all x.(Shuppus(x) -> -Sterpus(x))", "all x.(Shutus(x) -> -Sterpuse(x))", "all x.(Shumpsue(x) -> -Sterpuse(x))", "all x.(Sushuse(x) -> -Sterpuse(x))", "all x.(Shumps(x) -> -Sterepuse(x))", "all x.(Shuppe(x) -> -Sterpuse(x))", "all x.(Shuppe(x) -> -Sterpuse(x))", "all x.(Shupuse(x) -> -Sterpuse(x))", "all x.(Shumpus(x) -> -Sterpuse(x))", "all x.(Suppe(x) -> -Sterosena(x))"]}
{"id": "prontoqa_validation_511", "nl": "Every wumpus is a sterpus.", "fol": "all x. (wumpus(x) -> sterpus(x))", "prediction": ["all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wempus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterosus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))"]}
{"id": "prontoqa_validation_512", "nl": "Every tumpus is a wumpus.", "fol": "all x. (tumpus(x) -> wumpus(x))", "prediction": ["all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "exists x.(Tumpus(x) & Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wasp(x))", "all x.(Tumpus(x) -> Wampus(x))", "all x.(Tumpus(x) -> Wampus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wompus(x))", "all x.(Tumpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_validation_513", "nl": "Sam is a shumpus, Sam is not a sterpus, and Sam is an impus.", "fol": "(shumpus(Sam) & -sterpus(Sam) & impus(Sam))", "prediction": ["all x y z.((Sam(x) & Rumpus(y) & Sterpus(z)) -> (Shumpus(x,y) | NullSterpus(x,z) | Imperator(x,z)))", "exists x.(Shumpus(x) & -Sterpus(x) & Impossible(x))", "(all x.(Shumpus(x) -> Sam(x)) & (-Sterpus(x) -> Sam(x)) & (Iliotus(x) -> Sam(x)))", "(all x.(Shumpus(x) -> Shumpus(x)) & all y.(Sterpus(y) -> -Sterpus(y)) & all z.(Impossible(z) -> Shumpus(z)))", "(all x.(Shumpus(x) -> Sam_((Sam) & Sterpus(x))) & (Sam(x) -> Impossible(x)))", "(all x.(Shumpus(x) -> Spruce(x)) & all y.(Sterpus(y) -> -Sterpus(y)) & all z.(Illegal(z) -> Supplied(z)))", "(all x.(Shumpus(x) -> Sam(x)) & (-Sterpus(x) -> Sam(x)) & (Impossible(x) -> Sam(x)))", "(all x y.(Shumpus(x) -> Sam)) & ((Shumpus(y) & -Sterpus(y)) -> Is(x,y)))", "(all x.(Shumpus(x) -> Sipy(x)) & (Stompus(x) -> -Sterpus(x)) & (Executive(x) -> Sipy(x)))", "(all x.(Shumpus(x) -> Sponge(x)) & (Shumpus(x) -> -Sterpus(x)) & -Sterpus(x)) & (Impossible(x) -> Sponge(x)))", "(all x.(Shumpus(x) -> Shumpus(x)) & (Sterpus(x) -> -Sterpus(x)) & (Imperial(x) -> Shumpus(x)))", "(all x y.(Shumpus(x) -> (Shampus(x))) & (Before(y) -> -Sterpus(y)) & (Before(y) -> Impeccated(y)))", "all x y z.((Sumpus(x) & Roosterpus(y) & Impester(z)) -> (Shumpus(x) & -Stempus(y) & Impermissible(z)))", "(all x.(Shumpus(x) -> -Sterpus(x)) & all y.(Shampus(y) -> IsImplementor(y)))", "(all x.(Shumpus(x) -> Saphirst(x)) & (Shumpus(x) -> -Sterust(x)) & (Isliquor(x) -> Aphese(x)))", "all x y z.((Sam(x) & Sterpus(y) & Imperium(z)) -> ((Shumpus(x) | -Sterpus(y) | Simon(z))))"]}
{"id": "prontoqa_validation_514", "nl": "Zumpuses are gorpuses, yumpuses, and brimpuses.", "fol": "all x. (zumpus(x) -> (gorpus(x) & yumpus(x) & brimpus(x)))", "prediction": ["all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpus(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumus(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yampus(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Youngpus(x) | Brimpus(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpuse(x) | Yampuse(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpuse(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yampus(x) | Brimpuse(x)))", "all x y z w.((Zimpus(x) & Gorpus(y) & Yumpus(z)) -> (Fresh(x,y) & HasFerengin(x,z) & HasFerengin(x,w)))", "(all x.(Zumpus(x) -> Gorpus(x)) & all y.(Yumpus(y) -> Brimpus(y)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpus(x)))", "all x y z.((Zumpus(x) & Gorpus(y) & Yumpus(z)) -> (Morphins(x) | Brimpus(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpus(x)))", "all x.(Umpus(x) -> (Gorpus(x) | Yampus(x) | Brimpuse(x)))"]}
{"id": "prontoqa_validation_515", "nl": "Wren is a yumpus, an impus, or a brimpus.", "fol": "(yumpus(Wren) | impus(Wren) | brimpus(Wren))", "prediction": ["all x.(Wren(x) -> (Yumpus(x) | Impectations(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Imperative(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brempus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Izra(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Imperator(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Imperman(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impeccable(x) | Brimpus(x)))", "all x.(Warn(x) -> (Yumpus(x) | Issue(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Issue(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Ispos(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Irrepressible(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Ilirruptor(x) | Brimpus(x)))"]}
{"id": "prontoqa_validation_516", "nl": "Every impus is a lempus and a rompus and a gorpus.", "fol": "all x. (impus(x) -> (lempus(x) & rompus(x) & gorpus(x)))", "prediction": ["all x.(Ilpressives(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Impedor(x) -> (Lempus(x) | Rompus(x) | Gorpus(x)))", "all x y.((Issue(x) & Lempus(y)) -> (Rompus(x) & Gorpus(x)))", "all x.(Impact(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Impact(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Issue(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x y.((Impact(x) & Lempus(y)) -> (rompus(x) & Gorpus(y)))", "all x.(Impact(x) -> (Moleus(x) & Rompus(x) & Gorpus(x)))", "all x.(Implicate(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Impos(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Impos(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.((Impose(x) & Lampus(x) & Rompus(x) & Gorpus(x)) -> Inserts(x))", "all x.(Issue(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x y z.((Issue(x) & Lemmus(y) & Rompus(z)) -> (Rompus(x) & Gorpus(x)))", "ALL X.(Issue(x) -> (IsLimpus(x) & IsRompus(x) & IsGorpus(x)))", "all x.(Impacts(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))"]}
{"id": "prontoqa_validation_517", "nl": "Sally is a yumpus and Sally is a sterpus and Sally is not a lempus.", "fol": "(yumpus(Sally) & sterpus(Sally) & -lempus(Sally))", "prediction": ["all x.(Sally(x) -> (Yumpus(x) | Sterpus(x) & -Lempus(x)))", "(all x.(Yumpus(x) -> Sylvester(x)) & (Lempus(x) -> Sterpus(x)))", "all x,y,z.((Sally(x) & Yumpus(y) & Sterpus(z)) -> (Yumpus(x) & -Lempus(z))))", "(yumpus) -> Sally ((Sterpus) & -Lempus)))", "(Yumpus(Sally) & Sterpus(Sally) & -Lempus(Sally))", "(all x.(Sally(x) -> Yumpus(x)) & (Sally(x) -> Throat(x))) & (Sally(x) -> Sporpus(x)) & -Lempus(x)))", "(yumpus(Sally) & sterpus(Sally) & -lempus(Sally))", "all x.(Sally(x) & (Yumpus(x) | Sterpus(x) | -Lempus(x)))", "(all x.(Sally(x) -> Yumps(x)) & (Sterpus(x) & -Lempus(x)))", "all x y.((Sally(x) & Yampus(x) & Sterpus(y)) -> (-Lempus(x)))", "all x.(Sally(x) -> (Yumpus(x) & Sterepus(x) & -Lempus(x)))", "(Yumpus(Sally) & Sterpus(Sally) & -Lempus(Sally))", "(Yumpus(Sally) & Sterepus(Sally) & -Lempus(Sally))", "(yumpus(Sally) | Sterpus(Sally) | -Lempus(Sally)))", "(all x.(Yumpus(x) & All y.(Sterpus(y) & -Lempus(y))) -> SallyEquals(x,y))", "all x y.((Sally(x) & Yampus(x)) -> (Yumpus(x) & Sterpus(x) & -Lempus(x)))"]}
{"id": "prontoqa_validation_518", "nl": "Sally is not an impus.", "fol": "-impus(Sally)", "prediction": ["(-Impossible(Sally))", "Sally & -Impossible(Sally)", "Sally -Is(s) & Is(s))", "Sally -Illegal(Sally)", "Sally -Imposer(Sally)", "Sally ist keineid.", "Sally -Isolat(Sally)", "-(Issue(Sally) & -Issue(Sally))", "Sally & NonImproverable(Sally)", "Sally is not impuse(s)", "is not impusx.", "Sally n'est pas impos\u00e9.", "Sally ist -Issue.", "Sally & HasNumberOfImprovements.", "Sally is not an impusor.", "Sally n'est pas impuscible(Sally)"]}
{"id": "prontoqa_validation_519", "nl": "Each sterpus is a dumpus and a tumpus and a lempus.", "fol": "all x. (sterpus(x) -> (dumpus(x) & tumpus(x) & lempus(x)))", "prediction": ["all x.(Steerpus(x) -> ((Dumpus(x) & Tumpus(x) & Lempus(x))))", "all x.(Sterpus(x) -> (Dumpus(x) | Tumpus(x) | Lempus(x)))", "(all x.(Sterpus(x) -> Dumpus(x)) & (Tumpus(x) | Lempus(x))))", "all x.(Sterpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterpus(x) -> (Dumpus(x) & Totumpus(x) & Lempus(x)))", "(all x.(Sterpus(x) -> Dumpus(x)) & all y.(Tumpus(y) & all z.(Lempus(z))) -> FullSterpus(x)))", "all x.(Steerpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterpus(x) -> (Mortis(x) & Dumpus(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterpus(x) -> (Dumps(x) & Humpus(x) & Lempus(x)))", "all x.(Sterpus(x) -> (IsDumpus(x) & IsTumpus(x) & IsLempus(x)))", "all x.(Sterpus(x) -> ((Dumpus(x) & Tumpus(x)) & Lempus(x)))", "exists x.(Sterpus(x) & Dumpus(x) & Tumpus(x) & Lempus(x))", "all x.(Sterpus(x) -> (exists y.(Dumus(y) & Embraces(x,y))) & exists z.(Tumpus(z) & Embraces(z,z))))", "all x.(Sterpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterpus(x) -> (Dumpus(x) & Tumulus(x) & Lempus(x)))", "all x.(Sterpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))"]}
{"id": "prontoqa_validation_520", "nl": "Sally is a sterpus.", "fol": "sterpus(Sally)", "prediction": ["Sally is a Sterpus.", "All x.(Sally(x) -> Sterepus(x))", "Sally is a Sterpus.", "IsSallySterpus(i) -> IsSterpus(i))", "Sally is Sterpus.", "Sally is Sterpus.", "all x.(Sally(x) -> Sterpus(x))", "all x.(Sally(x) -> Sterpus(x))", "all x.(Sally(x) -> Sterophot(x))", "Sally is a sterpus.", "All x.(Sally(x) -> Sterepus(x))", "Sally ist Sterpus (Stersis)", "Sally Est. (Sterpus).", "Sally is Sterpus.", "Sally is Sterpus.", "Sally ist Sterpus."]}
{"id": "prontoqa_validation_521", "nl": "Sally is an impus, a dumpus, or a brimpus.", "fol": "(impus(Sally) | dumpus(Sally) | brimpus(Sally))", "prediction": ["all x.(Sally(x) -> (Ironique(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Impossesse(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Imposso(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x)))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Islop(x) | Dumpus(x) | Brimpus(x)))", "exists x.(Sally(x) & (Impose(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Impose(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Idemn(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Issue(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Implementation(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Ispose(x) | Dumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_validation_522", "nl": "Everything that is a dumpus, a sterpus, or a brimpus is a lempus.", "fol": "all x. ((dumpus(x) | sterpus(x) | brimpus(x)) -> lempus(x))", "prediction": ["all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumps(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dupus(x) | Sterpus(x) | Britpus(x)) -> Lempus(x))", "all x.((Supply(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumps(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Strictpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumps(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.(((Dumps(x) | Steerpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))"]}
{"id": "prontoqa_validation_523", "nl": "Sam is a lempus, a wumpus, and a brimpus.", "fol": "(lempus(Sam) & wumpus(Sam) & brimpus(Sam))", "prediction": ["(all x.(Sam(x) -> Lempus(x)) & (Wumpus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))", "all x.(Sam(x) -> (Lempus(x) | Humpus(x) | Brimpus(x)))", "all x.(Sam(x) -> (Lempus(x) & Wumpus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Wumpus(x) | Brimpus(x)))", "all x.(Sam(x) -> (Limpus(x) & Wumpus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Lempus(x) & Wumpus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Lempus(x) & Wumpus(x) & Brimpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Wumpus(y) & -Himpus(y)) & all z.(Brimpus(z) -> Brimpus(z))))", "all x.(Sam(x) -> (Lempus(x) | Humpus(x) | Brimpus(x)))", "(Lempus(Sam) | Wumpus(Sam) | Brimpus(Sam))", "all x.(Sam(x) -> (Lempus(x) & Wumpus(x) & Brimpus(x)))", "(exists x.(Lempus(x) & HasWumpus(x) & HasBrimpus(x)))", "(Limpus(Sam) & Lamb(Sam) & Humpus(Sam) & Brimpus(Sam))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_validation_524", "nl": "Everything that is a zumpus, a vumpus, and a lorpus is a numpus, a grimpus, and a gorpus.", "fol": "all x. ((zumpus(x) & vumpus(x) & lorpus(x)) -> (numpus(x) & grimpus(x) & gorpus(x)))", "prediction": ["all x.((Zumpus(x) | Volmpus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Vampis(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (Numerus(x) | Grimpus(x) | Gorpus(x)))", "all x y.((Tompus(x) & Tumpus(y) & Lorpus(y)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.(((Tompus(x) | Voompus(x) | Lorpus(x))) -> (Numpus(x) | Grimpus(x) | Gorpus(x)))", "all x.((Rumpus(x) | Voompus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Vampus(x) | Lorpus(x)) -> (Nompus(x) | Grimpus(x) | Gorpus(x)))", "all x y.((Tompus(x) & Vumpus(x) & Lorpus(y)) -> (Spoken(x) & Smooth(x) & Gorpus(x)))", "all x.((Zumpus(x) | Voompus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Voompus(x) | Lordpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x y z.((Tompus(x) & Vumpus(y) & Lorpus(z) & Umpus(x) & Luminous(y) & Lorpus(z)) -> (HasNumpus(x) & HasGrimpus(x) & HasGorpus(x)))", "all x.((BetweenZumpus(x) & X.(Vumpus(x) & X.(Lorpus(x)) & numpus(x) & grimpus(x) & gorpus(x))) -> PersistentToy(x))", "all x.((Zumpus(x) | Vampus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Vitmpus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Voompus(x) | Lorpus(x)) -> (Numpus(x) | Grimpus(x) | Gorpus(x)))", "all x.((Tompus(x) | Vampus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_validation_525", "nl": "Stella is a vumpus.", "fol": "vumpus(Stella)", "prediction": ["Stella is a vumpus.", "exists x.(Stella(x) & Vumpus(x))", "all x.(Vimpus(x) -> Stella(x))", "Stella is aVumpus(Stella)", "Stella is a Vumpus.", "Stella, (Umpus(Stella))", "Stella ist ein Vumpus.", "Stella is a Vumpus(Stella)", "Stella is a Vumpus.", "(Vumpus(Stella))", "Stella is a Vukpus.", "Stella's aVumpus(Stella)", "Stella is a Vumpus(Stella)", "Stella is a Vumpus.", "(Voompus(Stella))", "Stella is a Vumpus."]}
{"id": "prontoqa_validation_526", "nl": "Stella is a lorpus.", "fol": "lorpus(Stella)", "prediction": ["Stella is a lorpus.", "all x.((Stella(x) & Lorpus(x)) -> Lactating(x))", "Stella is a Llorpus(s)", "Stella is a Lemur.", "all x.(Lorpus(x) -> Stella(x))", "Stella is Lark(Telegraph,Lorpus)", "Stella is a lorpus.", "Stella, is a lorpus.", "Stella is Lorax(Stella)", "Stella is lorpus.", "Stella is a lorpus.", "Stella is Llorpus(Stella)", "all x.(Stella(x) -> Lorpus(x))", "Stella is a lorpus.", "Stella is a lorpus.", "Stella is Lorus."]}
{"id": "prontoqa_validation_527", "nl": "Everything that is a zumpus and a shumpus and a sterpus is a jompus and a gorpus and a lorpus.", "fol": "all x. ((zumpus(x) & shumpus(x) & sterpus(x)) -> (jompus(x) & gorpus(x) & lorpus(x)))", "prediction": ["all x.((Tompus(x) & Shamps(x) & Sterpus(x)) -> (Jimpus(x) & Orrpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Shumpus(x) & Sterpus(x) & Jompus(x) & Gorpus(x) & Loupe(x)) -> Jompus(x))", "all x.((Jompus(x) | Gorpus(x) | Lorpus(x)) -> (Tompus(x) & Humpus(x) & sterpus(x)))", "all x.((Tompus(x) & Shumpus(x) & Sterpus(x)) -> (Jompus(x) | Gorpus(x) | Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Jonus(x) & Morpus(x) & Gorpus(x) & Lorpus(x)) -> (Tompus(x) & Humpus(x) & Sterpus(x)))", "all x.((Zumpus(x) & Rumpus(x) & STERPUS(x)) -> (Jimpus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Zumpus(x) | Humpus(x) | Sterpus(x)) -> (Jampus(x) & Gorpus(x) & Lopus(x)))", "all x.((Tompus(x) & Shumpus(x) & Sensepus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Zumpus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Loomis(x)))", "all x.((Tompus(x) & Humpus(x) & Stompus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Streetpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jimpus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tommy(x) & Shumpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & lorpus(x)))"]}
{"id": "prontoqa_validation_528", "nl": "Sam is a sterpus.", "fol": "sterpus(Sam)", "prediction": ["all x.(Sam(x) -> Sterpus(x))", "(Head(Sam) & Sterpus(Sam))", "all x.(Sam(x) -> Sterpus(x))", "all x.(Sam(x) -> Sterpus(x))", "all x.(Sam(x) -> Sterpus(x))", "all x.(Sam(x) -> Sterpus(x))", "all x.(Sam(x) -> Sterpus(x))", "all x.(Sam(x) -> Sterpus(x))", "all x.(Sam(x) -> Sterepus(x))", "all x.(Sam(x) -> Sterpus(x))", "all x.(Sam(x) -> Sterpus(x))", "all x.(Sam(x) -> Sterpus(x))", "all x.(Sam(x) -> Sterpus(x))", "(Sam,sterpus)", "all x.(Sam(x) -> Sterpus(x))", "(Sam,sterpus)"]}
{"id": "prontoqa_validation_529", "nl": "Sam is a jompus.", "fol": "jompus(Sam)", "prediction": ["All x.(Sam(x) -> Jompus(x))", "All x.(Sam(x) -> Jompus(x))", "all x.(Sam(x) -> Jompus(x))", "all x.(Jimpus(x) -> CanOwn(x))", "all x.(Jumpus(x) -> Sam(x))", "all x.(Sam(x) -> Jompus(x))", "all x.(Jumpus(x) -> Sam(x))", "all x.(Sam(x) -> Jompus(x))", "(Jampus(sam) & Like(sam))", "all x.(Sam(x) -> Jompus(x))", "all x.(Astronomer(x) -> Jompus(x))", "(Jumpus(Sam) & BornInSam(sam))", "all x.(Jumpus(x) -> Sam(x))", "all x.(Jompus(x) -> Sam(x))", "all x.(Jimpus(x) -> Sam(x))", "all x.(Jompus(x) -> Sam(x))"]}
{"id": "prontoqa_validation_530", "nl": "Everything that is a zumpus, a yumpus, and a jompus is an impus and a lorpus and a numpus.", "fol": "all x. ((zumpus(x) & yumpus(x) & jompus(x)) -> (impus(x) & lorpus(x) & numpus(x)))", "prediction": ["all x.((Zumpus(x) | Yumpus(x) | Jompus(x)) -> (Impossed(x) | Lorpus(x) | Numpus(x)))", "all x y z.((Zumpus(x) & Yumpus(y) & Jompus(z) & Elm(x)) -> (Impos(x) | Luromus(x) & Numpus(x)))", "all x.((Tompus(x) | Yampus(x) | Jompus(x)) -> (Impos(x) & Dusk(x) & Lerpus(x) & Numpus(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & IsLorpus(x) & IsNumpus(x)))", "all x.((Zumpus(x) | Yupus(x) | Jompus(x)) -> (Orzoetsche(x) & (Lorpus(x) | Numpus(x))))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> Is(x,i,lorpus,numpus))", "all x y z.((Zumpus(x) & Yumpus(y) & Jompus(z) & Tommy(x) & Tommy(y) & Tommy(z)) -> (Issue(x) & Lorpus(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Numpus(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Imposable(x) & Impossible(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> Impossible(x)) & (Lorpus(x) | Numpus(x)))", "all x.((Tompus(x) | Yampus(x) | Jompus(x)) -> (Impos(x) & Ilrez(x) & Loomis(x) & Numpus(x)))", "all x.((Tompus(x) | Yampus(x) | Jompus(x)) -> (IsCruz(x) & IsLorpus(x) & IsNumber(x)))", "all x.((Tompus(x) | Yampus(x) | Jompus(x)) -> (Impos(x) & Lurpus(x) & Numpus(x)))", "all x y.((Zumpus(x) & Yompus(x) & Jompus(y)) -> (Impos(x) & Loompus(y) & Numpus(y)))", "all x.((Tompus(x) & Yumpus(x) & Jompus(x)) -> (Impress(x) & lorpus(x) & numpus(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Issuel(x) & IsLorpus(x) & Isnumpus(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Loomis(x) & Numpus(x)))"]}
{"id": "prontoqa_validation_531", "nl": "Max is a lorpus.", "fol": "lorpus(Max)", "prediction": ["All x.(Max(x) -> Thorpe(x))", "(Lorpus(Max) -> HasLorpres(Max))", "all x y.((Max(x) & Owl(y)) -> Lip.", "(Lorpus(Max) & Moose(Max))", "(Lorpus(Max) & HasVerticalGround(Max))", "(Lorpus(Max) -> LaughsOn(Max))", "Max is a lorpus.", "(Lorpus(Max) -> Deleter(Max))", "(Lorpus(Max) & HasLorph(Max))", "all x.(Max(x) -> Lepus(x))", "(Lorpus(Max) & BornIn(Max,Dairy))", "(Lorpus(Max) & IsLorpus(Max))", "(Lorpus(Max))", "all x.(Max(x) -> Lorpus(x))", "all x.(Max(x) -> Llorpus(x))", "Max ist lorpus."]}
{"id": "prontoqa_validation_532", "nl": "Every brimpus is a tumpus and an impus and a gorpus.", "fol": "all x. (brimpus(x) -> (tumpus(x) & impus(x) & gorpus(x)))", "prediction": ["all x.(Brimpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Bruss(x) -> (Tumpus(x) & Immer(x) & Orzo(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) | Isolated(x) | Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Imperator(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & -Impossible(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Impossible(x) & Gorpus(x)))", "(All x.(Brimpus(x) -> Tumpus(x)) | (Impossible(x) & Gorpus(x))))", "all x.(Brimpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Impossible(x) & Gorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Impossible(x) & Gorpus(x)))", "exists x.(Brumpus(x) & Tompic(x) & Issue(x) & Gorpus(x))", "all x.(Brumpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Impossible(x) & Impossible(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Impossible(x) & Gorpus(x)))"]}
{"id": "prontoqa_validation_533", "nl": "Wren is a lorpus, an impus, or a yumpus.", "fol": "(lorpus(Wren) | impus(Wren) | yumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Lorpus(x) | Issue(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpsum(x)))", "all x.(Wren(x) -> (Lorpus(x) | Imperator(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Improvised(x) | Yumpus(x)))", "all x.(Wren(x) -> (Larpus(x) | Impossible(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Imperator(x) | Yumpus(x)))", "all x y.((Wren(x) & Llorpus(y) & Impossible(x)) | Yuumpus(x))", "all x.(Wren(x) -> (Lorpus(x) | Imperium(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yompus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impenetrator(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Issue(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Issue(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Imperator(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Aufris(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Vomit(x) | Yumpus(x)))"]}
{"id": "prontoqa_validation_534", "nl": "Numpuses are sterpuses, gorpuses, and vumpuses.", "fol": "all x. (numpus(x) -> (sterpus(x) & gorpus(x) & vumpus(x)))", "prediction": ["all x.(Numpuse(x) -> (Sterpus(x) | Gorpus(x) | Vampuse(x)))", "all x.(Numpuse(x) -> (Ssterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpuse(x) -> (Sterpuse(x) & Gorpuse(x) & Vampuse(x)))", "all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vumpuse(x)))", "all x.(Numpus(x) -> (Steruse(x) | Gorpuse(x) | Vumpus(x)))", "all x.(Numpuse(x) -> (Sternus(x) | Gorpus(x) | Vulpe(x)))", "all x.(Numpuse(x) -> (Sterpuse(x) | Grunus(x) | Vampuse(x)))", "all x.(Numpuse(x) -> (Steruse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpus(x) -> (Sterpuses(x) | Gorpuses(x) | Vampuses(x)))", "all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpuse(x) -> ((Steeppuse(x) | Gorpuse(x) | Vampuse(x))))", "all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "(All x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpuse(x) -> (Streptus(x) | Gorpus(x) | Vampuse(x)))", "all x.(Numpuse(x) -> (Steruse(x) | Gorpuse(x) | Vumpuse(x)))"]}
{"id": "prontoqa_validation_535", "nl": "Sally is an impus, Sally is a jompus, and Sally is not a vumpus.", "fol": "(impus(Sally) & jompus(Sally) & -vumpus(Sally))", "prediction": ["all x y.((Sally(x) & IsIs(x)) -> (Jompus(x) & -Vimpus(y)))", "all x y.((Sally(x) & Jompus(y)) -> (Impossible(x) | AlmostImpossible(y) & -Vumpus(y)))", "all x y z.((Sally(x) & Is(x) & Jompus(y) & -Is(z)) -> (Impose(x) & Jompus(y) & -Vumpus(z)))", "(all x.(Sally(x) -> Is(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vimpus(z))))", "(all x.(Sally(x) -> Impossible(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vimpus(z))))", "(all x.(Sally(x) -> IsNotRumpus(x)) & ((Sally(x) & Jompus(x)) | (Sally(x) & -Vumpus(x)))))", "(all x.(Sally(x) -> Illegal(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vimpus(z))))", "(all x.(Sally(x) -> Implient(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vumpus(z)))", "(all x.(Sally(x) -> Imperium(x)) & (Jampus(x) | -Vumpus(x))))", "(all x.(Sally(x) -> Is(x)) & (Jompus(x) | -Vumpus(x))))", "(all x.(Sally(x) -> Is(x,Imposs)) & (Sally(x) -> Jompus(x)) & (Sally(x) -> -Vumpus(x)))", "(all x.(Sally(x) -> Is(x)) & (Sally(x) -> Jompus(x)) & (Sally(x) -> -Vumpus(x)))", "(all x.(Sally(x) -> Is(x)) & (Jompus(x) | -Vumpus(x))))", "(all x.(Sally(x) -> Is(x)) & (Sally(x) -> JOMP(x)) & (Sally(x) -> Suppose(x))))", "all x y z.((Sally(x) & Yupkid(y) & Jompus(z)) -> (Impose(x) & Jompus(y) & -Vumpus(x)))", "exists x.(Sally(x) & Impossible(x)) & exists y.(Jompus(y) & -Vumpus(y)))"]}
{"id": "prontoqa_validation_536", "nl": "Sally is not a numpus.", "fol": "-numpus(Sally)", "prediction": ["Sally is not a Numpus.", "\u2013Numpus(Sally)", "Sally is not a Numpus.", "Sally -Numpus(s)", "Sally is not a Numpus.", "Sally is not Numpus(Sally)", "Sally is not Numpus.", "Sally is not a Numpus(Sally)", "Sally isn'tnumpus(s)", "(-numpus(Sally))", "all x.(Sally(x) -> -Numpus(x))", "(-numpus(Sally))", "(-numpus(Sally))", "Sally n\u2019exists hexadecimal(Sally,NHC) -> -Numpus(Sally,HPHC))", "Sally is not a Numpus.", "all x.(Sally(x) -> -Numpus(x))"]}
{"id": "prontoqa_validation_537", "nl": "Everything that is a vumpus, a rompus, or a yumpus is a lempus, a zumpus, and a gorpus.", "fol": "all x. ((vumpus(x) | rompus(x) | yumpus(x)) -> (lempus(x) & zumpus(x) & gorpus(x)))", "prediction": ["all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Roompus(x) | Yumpus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Foot(x) & (Vumpus(x) | Rompus(x) | Yumpus(x))) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yampus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Limpus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lampus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vampus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_validation_538", "nl": "Sally is a lempus.", "fol": "lempus(Sally)", "prediction": ["Sally is a lempus.", "all x.(Sally(x) -> Lempus(x))", "Sally IsLempus(Sally)", "Sally is a lempus(Sally)", "Sally is Lempus.", "Sally (HasLempus(Sally) & -HasLempus(Sally))", "Sally is Lempus(Sally)", "A lempus.", "Sally is Lempus.", "Sally is Lempus.", "Sally is Lempus.", "Sally is a lempus.", "Sally is a lempus.", "Sally Crompet/Lempus(Sally)", "Sally is Lempus(Sally)", "Sally [Sally_BeefElements(Sally))"]}
{"id": "prontoqa_validation_539", "nl": "Everything that is a grimpus or a jompus or a lempus is a tumpus, an impus, and a rompus.", "fol": "all x. ((grimpus(x) | jompus(x) | lempus(x)) -> (tumpus(x) & impus(x) & rompus(x)))", "prediction": ["all x.((Grups(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Ilirpos(x) & Rompus(x)))", "all x.((Tumpus(x) | Impossible(x) | Rompus(x)) -> (Smouch(x) | Jompus(x) | Lempus(x)))", "all x.((Smaller(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Imperator(x) & Rompus(x)))", "all x.((Smoothpus(x) | Joompus(x) | Lempus(x)) -> (Tumpus(x) & Impossible(x) & Rompus(x)))", "all x.((Smirkpus(x) | Jompus(x) | Lemmpus(x)) -> (Tumpus(x) | Isprave(x) | Rompus(x)))", "((Arcseus(x) | Jompus(x) | Lempus(x))) -> (Tumpus(x) & Imperempt(x) & Rompus(x)))", "all x.((Grospy(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Impossible(x) & Rompus(x)))", "all x.((Prompus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Impossivus(x) & Rompus(x)))", "all x.((Murph(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Impossible(x) & Rompus(x)))", "all x.((Smoppus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Imperator(x) & Rompus(x)))", "all x.((Grampus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Issue(x) & Rompus(x)))", "all x.((Rampus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) | Impossible(x) | Rompus(x)))", "all x.((Gruppus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Imperator(x) & Rompus(x)))", "all x.((Tumpus(x) | Imperator(x) | Rompus(x)) -> (Grimpus(x) | Jompus(x) | Lempus(x)))", "all x.((IsGrimpus(x) | IsJompus(x) | IsLempus(x)) -> (Tumpus(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Rompus(x)))", "all x.((Purpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) | Impossible(x) | Rompus(x)))"]}
{"id": "prontoqa_validation_540", "nl": "Each dumpus is a tumpus.", "fol": "all x. (dumpus(x) -> tumpus(x))", "prediction": ["all x.(Dumps(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "(all x.(Dumpus(x) -> Tumulus(x)))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "exists x.(Dumpus(x) & Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_541", "nl": "Stella is a wumpus, Stella is not a tumpus, and Stella is a rompus.", "fol": "(wumpus(Stella) & -tumpus(Stella) & rompus(Stella))", "prediction": ["(all x.(Stella(x) -> Wumpus(x)) & (Stella(x) -> -Tumpus(x)) & (Stella(x) -> Rompus(x)))", "(all x.(Stella(x) -> Wumpus(x)) & (Stella(x) -> -Tumpus(x)) & (Stella(x) -> Rompus(x)))", "all x y z.((Wumpus(x) & Rumpus(y) & Stella(z)) -> (-Tumpus(y) & Rophus(z)))", "(all x.(Stella(x) -> Wumpus(x)) & (Stella(x) -> -Tumpus(x)) & (Stella(x) -> Rompus(x)))", "exists x.(Wumpus(x) & -Tumpus(x) & Ratrompus(x))", "(all x.(Wumpus(x) -> Stella(x)) & (Tumpus(x) -> Stella(x)) & (Rompus(x) -> Stella(x)))", "(all x.(Stella(x) -> Wumpus(x)) & (Stella(x) -> -Tumpus(x)) & (Stella(x) -> Rompus(x)))", "(all x.(Wump(x) -> Wumpus(x)) & (-Tumpus(x) -> Rompus(x)))", "(all x.(Stella(x) -> Wumpus(x)) & (Stella(x) -> -Tumpus(x)) & (Stella(x) -> Rompus(x)))", "(all x y z.((Wumpus(x) & Stella(y) & -Tompus(z)) -> Wumpus(y)) & ((Tumpus(y) & Stella(z)) -> Rompus(z)))", "(all x.(Wumpus(x) -> Wompus(x)) & all y.(Tumpus(y) -> -Tompus(y))) & all z.(Rompus(z) -> Wompus(z)))", "(all x.(Wumpus(x) -> Stella(x)) & (-Tumpus(x) -> Stella(x)) & (Rompus(x) -> Stella(x)))", "(all x y z.((Stella(x) & Wumpus(y)) -> Wompus(x)) & ((Stella(x) & -Tumpus(z))) -> Rompus(x)))", "(all x.(Wumpus(x) & -Tumpus(x)) & all y.(Rompus(y))))", "all x y z.((Shark(x) & Wumpus(x) & Stella(y) & Rumpus(z)) -> (-Tumpus(y) & Rompus(z)))", "all x y z.((Wumpus(x) & Stella(y) & Humpus(z)) -> (-Wumpus(y) & -Tompus(y) & Rompus(z)))"]}
{"id": "prontoqa_validation_542", "nl": "Stella is a yumpus, Stella is not a dumpus, or Stella is a brimpus.", "fol": "(yumpus(Stella) | -dumpus(Stella) | brimpus(Stella))", "prediction": ["(all x.(Stella(x) -> Yumpus(x)) & (Stella(x) -> -Dumpus(x)) | (Stella(x) -> Brimpus(x))))", "(all x.(Starta(x) -> Yukun (yumpus)) | (-Dumpus(x) & (Brimpus(x) |))))", "(all x.((Stella(x) & Yumpus(x)) | (-Dumpus(x) | Brimpus(x))))", "all x.(Stella(x) -> (Yumpus(x) | -Dupus(x) | Brimpus(x)))", "exists x.(Yumpus(x) | -Dumpus(x) | Brimpus(x))", "all x y.((Stella(x) & (Yumpus(y) | Dumpus(y)) | Brimpus(z))) -> (Yumpus(x) | -Dumpus(y) | -Dumpus(z)))", "exists x y.((Stella(x) & Yumpus(x)) | (-Dumpus(y) | Brimpus(x))))", "(all x.( Stella(x) -> Yumpus(x)) & (-(Stella(x) & Dumpus(x)) | (-Stella(x) & Brimpus(x)))))", "all x y.((Stella(x) & Yompus(x) & (-Dumpus(x) | Brimpus(y))) -> \"Yumpus(x)\")", "((Yumpus(Stella) | -Dumpus(Stella)) | Brimpus(Stella)))", "(exists x.(Yumpus(x) & Stella(x)) | (-Dumpel(x) & Stella(x))))", "(all x.(Yumpus(x) | -Dumpus(x)) | Brimpus(x)))", "all x.(Stella(x) -> (Yumpus(x) | -Dumpus(x) | Brumpus(x)))", "(all x.(Stella(x) -> (Yumpus(x) | -Dumpus(x))) | (Stella(x) -> Brimpus(x))))", "(all x.(Stella(x) -> Yampus(x)) & (Stella(x) -> -Dumpus(x)) | (Stella(x) -> Brimpus(x))))", "exists x.(Yumpus(x) | -Dumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_validation_543", "nl": "Every shumpus is a zumpus.", "fol": "all x. (shumpus(x) -> zumpus(x))", "prediction": ["all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_validation_544", "nl": "Sterpuses are vumpuses.", "fol": "all x. (sterpus(x) -> vumpus(x))", "prediction": ["all x.(Sterpus(x) -> Vulpus(x))", "all x.((Sterpuse(x) & Vimpus(y)) -> Is(x,y))", "all x.(Sterpus(x) -> Vulpus(x))", "all x.(Sterpus(x) -> Vampuse(x))", "all x.(Sterpus(x) -> Vulpuse(x))", "all x.(Sterpus(x) -> Vulpus(x))", "all x.(Sterpus(x) -> Vampus(x))", "all x.(Sterpus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vampuse(x))", "all x.(Sterpus(x) -> Vampus(x))", "all x.(Sterpus(x) -> Vulpuse(x))", "all x.(Sterpuse(x) -> Vampus(x))", "all x.(Sterpus(x) -> Vampire(x))", "all x.(Sterpuse(x) -> Vulpus(x))", "all x.(Sterpus(x) -> Vampuse(x))", "all x.((Sterpus(x) & Vaultus(x)) -> Moose(x))"]}
{"id": "prontoqa_validation_545", "nl": "Every lorpus is a brimpus.", "fol": "all x. (lorpus(x) -> brimpus(x))", "prediction": ["all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpe(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_validation_546", "nl": "Each grimpus is not a zumpus.", "fol": "all x. (grimpus(x) -> -zumpus(x))", "prediction": ["all x.(Grimpus(x) -> -zumpus(x))", "all x.(Grimpus(x) -> -Zumpus(x))", "all x.(Grimpus(x) -> -Zimmerpus(x))", "all x.(Grimpus(x) -> -Sumpus(x))", "all x.(Grampus(x) -> -Zumpus(x))", "all x.(Grimpus(x) -> -Tompus(x))", "all x.(Murphus(x) -> -Zumpus(x))", "all x.(Grippus(x) -> -Zumpus(x))", "(-Zumpus(z) & Grimpus(x) & DoesNotGross(x))", "all x.(Grimpus(x) -> -Zumpus(x))", "all x.(Grimpus(x) -> -Zumpus(x))", "all x.(Grimpus(x) -> -Zumpus(x))", "all x.(Grimpus(x) -> -Zumpus(x))", "all x.(Grimpus(x) -> -Tompus(x))", "all x.(Grimmpus(x) -> -Zumpus(x))", "all x.(Fragus(x) -> -Zumpus(x))"]}
{"id": "prontoqa_validation_547", "nl": "Polly is a gorpus and Polly is a jompus and Polly is not a brimpus.", "fol": "(gorpus(Polly) & jompus(Polly) & -brimpus(Polly))", "prediction": ["all x y,z.((Polly(x) & Gorpus(x) & Jompus(y)) -> (Gorpus(x) & Jompus(y) & -Brimpus(z)))", "all x y z.((Polly(x) & Gorpus(y) & Jompus(z)) -> (Gorpus(x) & Jompus(z) & -Brimpus(x)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> -Brumpus(x)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> -Brumpus(x)))", "(all x.(Gorpus(x) -> Polly)) & all y.(Jompus(y) -> Polly)) & all z.(Brimpus(z) -> Polly)))", "(all x.(Polly(x) -> Gorpus(x)) & all y.(Polly(y) -> Jompus(y))) & all z.(Polly(z) -> -Brumpus(z))))", "(all x.(Polly(x) -> Gorpus(x)) & (Poly(x) -> Jompus(x)) & (Polly(x) -> -Brimpus(x)))", "(all x.(Polly(x) -> Gorpus(x)) & (Pollips(x) -> Jompus(x)) & -Brimpus(x)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & -Brimpus(x)))", "(all x.(Pollly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & -Brimpus(x)))", "all x y z.((Polly(x) & Gorpus(y) & Jompus(z)) -> (Gorpus(x) & Jompus(x) & -Brumpus(x)))", "all x y z.((Polly(x) & Gorpus(x)) -> (Compass(x) & Jompus(y) & -Brimpus(z)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> -Brumpus(x)))", "all x y.((Polly(x) & Polly(y)) -> (IsGorpus(x) & IsJimpus(y) & -IsBrimpus(y)))", "(all x.(Polly(x) -> Gorpus(x)) & all y.(Polly(y) -> Jompus(y)) & all z.(Polly(z) -> Brimpus(z))))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> -Brumpus(x)))"]}
{"id": "prontoqa_validation_548", "nl": "Polly is a rompus and a wumpus and a sterpus.", "fol": "(rompus(Polly) & wumpus(Polly) & sterpus(Polly))", "prediction": ["all x.(Poppy(x) -> (Rompus(x) & Humpus(x) & Sterpus(x)))", "all x.((Polly(x) & Rompus(x) & Wumpus(x)) -> Sterpus(x))", "(Rompus(poly) & Rumpus(poly) & Wampus(poly) & Sterpus(poly))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Wumpus(y) & -Wumpus(y))) & all z.(Sterpus(z) -> Roompus(x)))", "(Rompus(Polly) & Rumpus(Poly) & Stump(Poly))", "all x.(Polly(x) -> (Rompus(x) | Wumpus(x) | Sterpus(x)))", "all x y z.((Polly(x) & Rompus(y) & Wumpus(z)) -> (Owsterpus(x) & Rosetta(w)))", "all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & Sterpus(x)))", "all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & Sterpus(x)))", "((Spiro(Polly) & Roumpus(poly)) & (Wumpus(poly) | Stoerpus(poly)))", "(all x.(Polly(x) -> (Rompus(x) | Wumpus(x) | Sterpus(x))))", "all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & Sterepus(x)))", "all x.(Polly(x) -> (Rompus(x) | Wumpus(x) | Sterpus(x)))", "all x y z.((Pillow(x) & Rompus(y) & Wumpus(z)) -> (Regular(x) | Regular(z) & Regular(z)))", "all x.(Polly(x) -> (Rompus(x) & Wempus(x) & Sterpus(x)))", "all x.(Polly(x) -> ((Rompus(x) | Wumpus(x) | Sterepus(x))))"]}
{"id": "prontoqa_validation_549", "nl": "Polly is not a shumpus, Polly is not a lorpus, and Polly is a vumpus.", "fol": "(-shumpus(Polly) & -lorpus(Polly) & vumpus(Polly))", "prediction": ["all x y z.((Polly(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) | -Lorpus(x) | Vumpus(x)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Vampus(x)))", "(all x.(Polly(x) -> -Shumpus(x)) & all y.(Polly(y) -> -Lorpus(y))) & all z.(Polly(z) -> Vumpus(z)))", "(all x.(Pluto(x) -> -Shumpus(x)) & (Pluto(x) -> -Lorpus(x)) & (Pluto(x) -> Vomepus(x)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Vumpus(x)))", "all x y z.((Polly(x) & Humpt(y) & Lorpus(z) & Volumpus(x)) -> (NoShumpty(x) & NoLorpus(y) & -NoShumpty(z)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpes(x)) & (Polly(x) -> Vumpus(x)))", "all x y z.((Polly(x) & Succop(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(y) & -Vumpus(z)))", "(all x y.((Polly(x) & -Shumpus(x)) | (-Lorpus(y) & InPython(x)))) & ((Polly(x) & InPython(x)) & InPython(x)) -> Vumpus(x)))", "(all x.(Polly(x) -> -Shumpus(x)) & all y.(Polly(y) -> -Lorpus(y))) & all z.(Poly(z) -> Vampus(z)))", "(all x y.((Polly(x) & Shumpus(y)) -> -Shumpus(x)) & ((Poly(x) & Lorpus(y)) -> Vulmin(x)))", "all x y z.((Polly(x) & Shumps(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(y) & -Vimpus(z)))", "all x y z.((Polly(x) & Shumpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(y) & -Vumpus(z)))", "(all x y z.(Shumpus(x) -> -Shumpus(x)) & (Lorpus(y) | Vampire(z))))", "all x y.((Polly(x) & Shumpus(y)) -> -(Polly(x) & Loomis(y) & Vilmpus(x)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Vumpus(x)))"]}
{"id": "prontoqa_validation_550", "nl": "Every jompus is a yumpus.", "fol": "all x. (jompus(x) -> yumpus(x))", "prediction": ["all x.(Jomess(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpa(x))", "all x.(Jompus(x) -> Yampus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jumpus(x) -> Yumpush(x))", "all x.(Jimpus(x) -> Yumbo(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yampus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))"]}
{"id": "prontoqa_validation_551", "nl": "Polly is not a yumpus, Polly is a lempus, and Polly is a zumpus.", "fol": "(-yumpus(Polly) & lempus(Polly) & zumpus(Polly))", "prediction": ["(all x y z.((Polly(x) & Yumpus(y)) -> -Myumpus(x)) & ((Polly(x) & Lempus(y)) -> Zumpus(z)))", "all x y z.((Polly(x) & Lempus(y) & Zumpus(z)) -> (-Yumpus(x) & Lempus(y) & Zumpus(z)))", "(all x.(Polly(x) -> -Yumpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Zumpus(z))))", "(all x.(Polly(x) -> -Yumpus(x)) & all y.(Poly(y) -> Lempus(y)) & all z.(Poly(z) -> Zumpus(z)))", "(all x.(Polly(x) -> -Yumpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Zumpus(z))))", "exists x y z.((Polly(x) & Yumpus(y) & Lempus(z)) -> (-Yumpus(x) & Lempus(x) & Zumpus(x)))", "(all x.(Polly(x) -> -Yumpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Zumpus(z)))", "(all x.(Polly(x) -> -Yumpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Zumpus(x)))", "(all x.(Polly(x) -> -Yumpus(x)) & all y.(Poly(y) -> Lempus(y)) & all z.(Polly(z) -> Zumpus(z)))", "(all x y z.((Polly(x) & Yumpo(y)) -> -Yumpus(x)) & ((Polly(x) & Lempus(y)) -> Zumpus(z)))", "all x y z.((Polly(x) & Green(y) & Zumpus(z)) -> (-Yumpus(x) | Lempus(y) | Zumpus(z)))", "all x y z.((Polly(x) & Lempus(y) & Zurpus(z)) -> (-Yumpus(x) & Lempus(y) & Zumpus(z)))", "(all x.(Polly(x) -> -Yumpus(x)) & all y.(Polly(y) -> Lempus(y))) & all z.(Polly(z) -> Zumpus(z)))", "(all x y.((Polly(x) & -Yumpus(x)) -> Lempus(x)) & ((Poly(y) & Zumpus(y)) -> Zumpus(y)))", "all x y z.((Polly(x) & Yumpus(y) & Lempus(z)) -> (-Yumpus(x) | Zumpus(x)))", "(all x.(Polly(x) -> -Yumpus(x)) & all y.(Polly(y) -> Lempus(y))) & all z.(Polly(z) -> Zumpus(z)))"]}
{"id": "prontoqa_validation_552", "nl": "Polly is a dumpus or Polly is a lorpus or Polly is not a jompus.", "fol": "(dumpus(Polly) | lorpus(Polly) | -jompus(Polly))", "prediction": ["all x.((Poly(x) & D\u00fcss(x)) | (Poly(x) & Lorpus(x)) | (Poly(x) & -Jumpus(x))))", "((Polly(polly) & Dumpus(poly)) | (Polly(poly) & Lorpus(poly))))", "all x y.((Polly(x) & Dumpus(x) | Polly(y)) | (Lorpus(y) | -Jumpus(y))))", "((Polly(Polly) | Polly(Polly)) & (Dumus(Polly) | Lorpus(Polly)) | -Jompus(Polly)))", "all x.((Polly(x) & (Dumps(x) | Loompus(x))) -> -Jumpus(x))", "all x.(Poly(x) -> (Dumpus(x) | Lorpus(x) | -Jumbus(x)))", "all x.(Polly(x) -> ((Dumpus(x) | Lorpus(x)) | -Jompus(x))))", "(exists x.(Polly(x) & Dumpus(x)) | exists y.(Polly(y) & Lorpus(y))))", "all x.((Polly(x) & (Dumus(x) | Lurpus(x) | -Jampus(x))) -> Polly(x))", "all x y.((Polly(x) & Dumpus(x) | Polly(y)) & (Lorpus(y) | -Jompus(y))) -> (Dumpus(y) | Lorpus(y)))", "exists x.(Poly(x) & (Dumus(x) | Lorpus(x) | -Jompus(x)))", "(exists x.(Poly(x) & Dumpus(x)) | exists y.(Lorpus(y) & -Jimpus(y))))", "all x.((Polly(x) & (Dumpus(x) | Lorpus(x) | -Jimpus(x))) -> Polly(x))", "((Polly(Ploem) & Dumpus(Ploem)) | (Ploem(Ploem) & -Jompus(Polly))))", "all x.((Poly(x) & Dumpus(x)) | (Lorpus(x) | -Jimpus(x))))", "(exists x.(Polly(x) & Dumpus(x)) | exists y.(Polly(y) & Lorpus(y))) | exists z.(Poly(z) & Jompus(z))))"]}
{"id": "prontoqa_validation_553", "nl": "Everything that is a shumpus and a yumpus and a numpus is a dumpus.", "fol": "all x. ((shumpus(x) & yumpus(x) & numpus(x)) -> dumpus(x))", "prediction": ["all x.((Shumpus(x) & Yupus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yuppus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yampus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yupsum(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Numpus(x)) -> Dumpus(x))", "all x y z.((Shumpus(x) & Yumpus(y) & Numpus(z) & Is(x,y)) -> Dumpus(x))"]}
{"id": "prontoqa_validation_554", "nl": "Stella is a shumpus.", "fol": "shumpus(Stella)", "prediction": ["Stella is shumpus(shump)", "Stella is a shumpus.", "Stella is a shumpus.", "Stella is a shumpus.", "Stella is Shumpus.", "Stella is a shumpus.", "Stella is shumpus.", "Stella is a shumpus.", "Stella is a shumpus.", "Stella (shumpus)", "Stella is Shumpus(Stella)", "Stella (shumpus)", "Stella is Shumpus.", "Stella is shumpus.", "Stella is a shumpus.", "Stella is a shumpus."]}
{"id": "prontoqa_validation_555", "nl": "Stella is a yumpus.", "fol": "yumpus(Stella)", "prediction": ["Stella is a yumpus.", "Stella is a yumpus.", "Stella is yumpus.", "Stella is yumpus.", "Stella_RosyCucumber(s) & BornAt(s) & Yampus(s))", "all x.(Shea(x) -> Yampus(x))", "Stella is yumpus.", "Stella is yumpus.", "all x.(Yumpus(x) -> Stella(x))", "all x.(Yumpus(x) -> Stella(x))", "Stella is yumpus.", "all x.(Stella(x) -> Yumpa(x))", "Stella is yumpus type of animal.", "all x.(Yumpus(x) -> Stella(x))", "Stella is a yumpus.", "Stella is yumpus."]}
{"id": "prontoqa_validation_556", "nl": "Stella is a grimpus or a dumpus or a gorpus.", "fol": "(grimpus(Stella) | dumpus(Stella) | gorpus(Stella))", "prediction": ["all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "(Gripper(z) | Dumpus(z) | Gorpus(z)))", "all x.(Stella(x) -> (Grimpus(x) | Doupus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.((Stella(x) & Grimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Smaller(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "(Morpheus(Stella) | Dumpus(Stella) | Gorpus(Stella)))", "all x.(stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> ((Grampus(x) | Dumpus(x) | Gorpus(x))))", "exists x.(Stella(x) & ((Smoocher(x) & -Smoocher(x)) | (-Smoocher(x) & Dumpus(x)) | (-Smoother(x) & Gorpus(x)))))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Smoppus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_validation_557", "nl": "Everything that is a yumpus, a lempus, and a sterpus is a gorpus.", "fol": "all x. ((yumpus(x) & lempus(x) & sterpus(x)) -> gorpus(x))", "prediction": ["all x.((Yumpus(x) | Lempus(x) | Sterus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) & Lempus(x) & Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Steroid(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Steroid(x)) -> Gorpus(x))"]}
{"id": "prontoqa_validation_558", "nl": "Max is a shumpus, Max is not a gorpus, and Max is a vumpus.", "fol": "(shumpus(Max) & -gorpus(Max) & vumpus(Max))", "prediction": ["(all x.(Max(x) -> Humpus(x)) & all y.(Max(y) -> -Gorpus(y))) & all z.(Max(z) -> Vumpus(z)))", "all x.((Max(x) -> Humpus(x)) & (-Gorpus(x) & (Vumpus-X) | Humpus(x))))", "all x y z.((Max(x) & Humpus(y) & Gorpus(z)) -> (Shumpus(x) & -Gorpus(x) & Vumpus(y)))", "(all x.(Max(x) -> Humpus(x)) & all y.(Max(y) -> -Gorpus(y)) & all z.(Max(z) -> Vumpus(z))))", "all x y z.((Max(x) & Humpus(y) & Gorpus(z)) -> (Shumpus(x) & -Gorpus(x) & Dumpus(x)))", "(all x y z.((Max(x) & Sumpus(y)) -> A(x,y)) & ((Max(z) & Humidus(z)) -> -A(z,z))) & ((Max(z) & Vampus(z)) -> A(z,y))))", "(all x.(Max(x) -> Shumpus(x)) & (-Max(x) -> Gorpus(x)) & (Max(x) -> Vumpus(x)))", "all x.((Max(x) & Humpus(x)) -> -Gorpus(x)) & (Max(x) -> Voompus(x)))", "(all x.(Max(x) -> Humpus(x)) & (-Max(x) -> Gorpus(x)) & (Max(x) -> Vulmpus(x)))", "(21) & ((Max(Max) & -Gorpus(Max)) | (-Max(Max) & Vumpus(Max))))", "all x.(Shumpus(x) | (-Gorpus(x) | Vumpus(x))))", "(all x.(Max(x) -> Humpus(x)) & (Matt(x) -> -Gorpus(x)) & (Max(x) -> Vumpus(x)))", "all x.(Mat Max(x) -> (Shumpus(x) | -Gorpus(x) | Vumpus(x)))", "all x y z.((Max(x) & Shumpus(y) & Gorpus(z)) -> (Is(x,y) & Is(x,z)))", "all x y z.((Max(x) & Gorpus(y) & Vumpus(z)) -> (IsShumpus(x) & IsGorpus(y) & IsVumpus(z)))", "all x y.((Max(x) & Shumpus(x)) & ((Max(x) & -Gorpus(x)) | (-Max(x) & Vumpus(y))))"]}
{"id": "prontoqa_validation_559", "nl": "Each wumpus is a grimpus, a gorpus, and a sterpus.", "fol": "all x. (wumpus(x) -> (grimpus(x) & gorpus(x) & sterpus(x)))", "prediction": ["all x.(Wumpus(x) -> (Smerpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Smaller(x) & Gorpus(x) & Sterpus(x)))", "(all x.(Wumpus(x) -> Grimpus(x)) & all y.(Gorpus(y) & all z.(Sterepus(z) -> Sterpus(z))))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) & Gorpus(x) & Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) & Gorpus(x) & Sterpus(x)))", "all x y z.((Wumpus(x) & Grimpus(y) & Gorpus(z)) -> (Garpus(x) & Sterpus(y)))", "all x.(Wumpus(x) -> (Grampus(x) & Gorpus(x) & Sterepus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) & Gorpus(x) & Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) | Grempus(x) | Sterpus(x)))"]}
{"id": "prontoqa_validation_560", "nl": "Max is a lempus, an impus, or a sterpus.", "fol": "(lempus(Max) | impus(Max) | sterpus(Max))", "prediction": ["all x.(Max(x) -> (lempus(x) | impus(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))", "exists x.(Max(x) & (Lempus(x) | Imperative(x) | Sterpus(x)))", "all x.(Max(x) -> (Lumpus(x) | Impossible(x) | Sterpus(x)))", "all x.(Max(x) -> (Limpus(x) | Izpos(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Imperative(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Issue(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Imperator(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Impermissible(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Imperative(x) | Steroid(x)))", "exists x.(Max(x) & (Lempus(x) | Imperempt(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Imposer(x) | Sterpus(x)))"]}
{"id": "prontoqa_validation_561", "nl": "Everything that is a tumpus or a gorpus or a lorpus is a rompus, a zumpus, and a lempus.", "fol": "all x. ((tumpus(x) | gorpus(x) | lorpus(x)) -> (rompus(x) & zumpus(x) & lempus(x)))", "prediction": ["all x.((Tumpus(x) | Gorpus(x) | Loperpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((OrTompus(x) | Gorpus(x) | Lynx(x))) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Throat(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((Rompus(x) | Zumpus(x) | Lempus(x)) -> (Tumpus(x) | Gorpus(x) | Lorpus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lumpus(x)))", "all x.((Rompus(x) | Zumpus(x) | Lempus(x)) -> (Tumpus(x) | Gorpus(x) | Lorpus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Roman(x) & Zumpus(x) & Lempus(x)) -> (Tumpus(x) | Gorpus(x) | Lorpus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lampus(x)))", "all x.(Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))"]}
{"id": "prontoqa_validation_562", "nl": "Everything that is a jompus and a rompus and a tumpus is a brimpus, a gorpus, and an impus.", "fol": "all x. ((jompus(x) & rompus(x) & tumpus(x)) -> (brimpus(x) & gorpus(x) & impus(x)))", "prediction": ["all x.((Jompus(x) | Rompus(x) | Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperative(x)))", "all x.((Jompus(x) | Rompus(x) | Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Implenis(x)))", "all x y z.((Jompus(x) & Rompus(y) & Tumpus(z)) -> (Of(x,y,z) & Is(x,y)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Ispos(x)))", "all x y z.((Jome(x) & Rompus(y) & Tumpus(z) & Rimpus(x)) -> (Brimpus(x) & Gorpus(x) & Issues(x)))", "all x.(((Jompus(x) | Rompus(x) | Tumpus(x))) -> (Brimpus(x) | Gorpus(x) | Institution(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imprecision(x)))", "all x.((Jumbus(x) | Rompus(x) | Tumpus(x)) -> (Shippen(x) | Sparp(x) | Impossible(x)))", "all x.((Jompus(x) | Rompus(x) | Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperia(x)))", "all x.((Jimpus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Impossible(x)))", "all x.((Jumpus(x) & Rompus(x) & Tumpus(x)) -> (Impress(x) | Impress(x)))", "all x.((Jompus(x) | Rompus(x) | Tumpus(x)) -> (Brampus(x) & Gorpus(x) & Imperia(x)))", "all x.((Jompus(x) | Rompus(x) | Tumpus(x)) -> (Brimpus(x) | Gorpus(x) | Impossible(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Impossible(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Impermiss(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) | Gorpus(x) | Invasion(x)))"]}
{"id": "prontoqa_validation_563", "nl": "Alex is a rompus.", "fol": "rompus(Alex)", "prediction": ["all x.(Alex(x) -> Rompus(x))", "all x.(Alex(x) -> Rompus(x))", "All x.(Alex(x) -> Rompus(x))", "all x.(Alex(x) -> Rommet(x))", "all x.(Alex(x) -> Pome(x))", "all x.(Alex(x) -> Rompus(x))", "all x.(Alex(x) -> Rompus(x))", "all x.(Rampus(x) -> Alex(x))", "all x.(Alex(x) -> Romanus(x))", "all x.(Alex(x) -> Rompus(x))", "all x.(Alex(x) -> Rompus(x))", "Alex is rompus.", "all x.(Alex(x) -> Rompus(x))", "all x.(Alex(x) -> Rompus(x))", "Alex is a rompus.", "(Rompus(Alex) & Eats(Alex))"]}
{"id": "prontoqa_validation_564", "nl": "Everything that is a zumpus and a tumpus and a wumpus is a shumpus, a rompus, and a dumpus.", "fol": "all x. ((zumpus(x) & tumpus(x) & wumpus(x)) -> (shumpus(x) & rompus(x) & dumpus(x)))", "prediction": ["all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Zumpus(x) & Tompus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Zumpus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Zumpus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wampus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Shumpus(x) | Rompus(x) | Dumpus(x)) -> (Tompus(x) & Tumpus(x) & Wumpus(x)))", "all x.((Tompus(x) | Tumpus(x) | Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))"]}

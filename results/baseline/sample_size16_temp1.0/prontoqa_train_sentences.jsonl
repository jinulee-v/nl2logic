{"id": "prontoqa_train_0", "nl": "Each wumpus is a sterpus.", "fol": "all x. (wumpus(x) -> sterpus(x))", "prediction": ["all x.(Wumpus(x) -> Sterpus(x))", "(exists x.(Wumpus(x) & Sterpus(x)))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "(all x.(Wumpus(x) -> Sterpus(x)))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Steroid(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Steroid(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_1", "nl": "Polly is a jompus and Polly is not a sterpus and Polly is a dumpus.", "fol": "(jompus(Polly) & -sterpus(Polly) & dumpus(Polly))", "prediction": ["(all x y.(Pompus(x) -> Jompus(x)) & (Discrete(y) -> -Sternpus(y)) & (Dumpus(y))))", "(all x y.((Polly(x) & Jompus(x)) -> Polly(y)) & ((Polly(x) & -Sterpus(y)) -> Dumpus(y)))", "all x.((Polly(x) & Jompus(x)) -> (-Steerpus(x) & Dumpus(x)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterpus(x)) & (Polly(x) -> Dumpus(x)))", "all x y z.((Polly(x) & Jompus(x) & -Sterpus(y) & Dumpus(z)) -> (Fosses(x,y) | Host(x,z))))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterpus(x))) & (Polly(x) -> Dumpus(x)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterpus(x)) & (Poly(x) -> Dumpus(x)))", "(all x.(Jompus(x) -> Polly)) & exists y.(Sterpus(y) & -Stegrepus(y))) & exists z.(Dumpus(z) & Polly(z))))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterpus(x)) & (Polly(x) -> Dumpus(x)))", "(all x y.((Plompus(x) & Jompus(x)) & ((Plompus(y) & -Sterpus(y)) & ((Plompus(x) & Dumpus(y)))) -> Jompus(y)))", "all x.(Polly(x) -> (IsJompus(x) & -IsSterepus(x) & IsDupus(x)))", "(all x y z.(Jompus(x) & Polly(y) & Sterpus(z) & isHubus(y)) -> Jompus(y)) & ((Sterpus(y) & -Sterpus(z)) | (Dumpus(y) & -Ssterpus(y)))))", "(all x.(Polly(x) -> Jompus(x)) & all y.(Polly(y) -> -Sterpus(y))) & all z.(Polly(z) -> Dumpus(z))))", "all x.(Polly(x) -> (Jompus(x) & -Sterpus(x) & Dumpus(x)))", "(all x.(Sherpus(x) -> Jompus(x)) & (Sterpus(x) -> -Sterpus(x)) & (Dumpus(x) -> Dumpus(x)))", "(all x.(Ploy(x) -> Jompus(x)) & (Ploy(x) -> -Sterpus(x)) & (Ploy(x) -> Dumpus(x)))"]}
{"id": "prontoqa_train_2", "nl": "Polly is not a wumpus.", "fol": "-wumpus(Polly)", "prediction": ["Polly is not a wumpus.", "Polly -Wumpus(Polly)", "all x.(Polly(x) -> -Wumpus(x))", "(Wumpus(Polly) & -Wumpus(Polly))", "(-Wumpus(Polly))", "exists x.(Wumpus(x) & Polly(x))", "exists x.(Polly(x) & -Wumpus(x))", "Polly -Wumpus(Polly)", "all x.(Polly(x) -> -Wumpus(x))", "Polly is notWumpus(Polly)", "-Wumpus(Poly)", "all x.(Pooly(x) -> -Wumpus(x))", "all x.(Wumpus(x) -> -Wumpus(x))", "-Wumpus(Polly)", "all x.(Polly(x) -> -Wumpus(x))", "all x.(Polly(x) -> -Wumpus(x))"]}
{"id": "prontoqa_train_3", "nl": "Rompuses are lempuses.", "fol": "all x. (rompus(x) -> lempus(x))", "prediction": ["all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Reptile(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Romulus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Roppus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Leptuse(x))", "all x.(Rrompus(x) -> Lempuse(x))"]}
{"id": "prontoqa_train_4", "nl": "Rex is a lorpus and Rex is not a lempus and Rex is a numpus.", "fol": "(lorpus(Rex) & -lempus(Rex) & numpus(Rex))", "prediction": ["(all x.(Rex(x) -> Lurpus(x)) & (-Lempus(x) & -Numpus(x)))", "all x y z.((Rex(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) & -Lempus(y) & Numpus(z)))", "(all x.(Rex(x) -> -Lempus(x)) & all y.(Rex(y) -> Numpus(y)))", "(all x.(Rex(x) -> Lorpus(x)) & all y.(Rex(y) -> -Lempus(y)) & all z.(Rex(z) -> Numpus(z))))", "all x y.((Rex(x) & Lorpus(x) & Lempus(y)) -> (Possible(x) | Nompus(x)))", "(all x.(Lorpus(x) -> Lempus(x)) & all y.(Number(y) -> Lempus(y)))", "(all x.(Lorph(x) -> Rex)) & (-Lempus(x) -> Rex)) & (Numpus(x) -> Rex)))", "all x.(Rex(x) -> (Lorp(x) & -Lempus(x) & Numpus(x)))", "(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Numpus(x)))", "(all x.(Rex(x) -> Lopus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Numpus(x)))", "all x y z.((Rex(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) & -Lempus(y) & Numpus(z)))", "(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Numpus(x))))", "all x.((Rex(x) & Llorpus(x)) | (-Lempus(x) & Numpus(x))))", "all x y z.((Lorpus(x) & Rex(y) & Numpus(z)) -> (Lorpus(y) & -Lempus(y) & Numpus(z)))", "(all x.(Rex(x) -> XLorpus(x)) & exists y.(Lempus(y) & -Lempus(y))))", "(all x y.(Lorph(x) -> Thrifty(x)) & (Limpic(y) | Lempus(y)) & Numpus(y)))"]}
{"id": "prontoqa_train_5", "nl": "Rex is not a rompus.", "fol": "-rompus(Rex)", "prediction": ["all x.(Rex(x) -> -Rompus(x))", "Alle x.(Rex(x) -> -Rompus(x))", "Rex is not a rompus.", "all x.(Rompus(x) -> -Rompus(x))", "all x.(Rex(x) -> -Rompus(x))", "(as is the case for all x.(Rompus(x) -> -Rompus(x)))", "Rex ist kein Rompus.", "-Rompus(Rex)", "Rex is not a rompus.", "(-Rompus(Rex))", "Rex is not a Rompus.", "-(Rompus(Rex))", "(-Rompus(Rex))", "Rex is not a rompus.", "NullRompus.", "Rex -(rompus(x) & -Rompus(x))"]}
{"id": "prontoqa_train_6", "nl": "Numpuses are impuses.", "fol": "all x. (numpus(x) -> impus(x))", "prediction": ["all x.(Numpuse(x) -> Issue(x))", "all x.(Numpuse(x) -> Impermisses(x))", "all x.(Numpuse(x) -> Issue(x))", "all x.(Numpus(x) -> Issue(x))", "all x.(Numpus(x) -> Impenetises(x))", "all x.(Numpuser(x) -> Isolation(x))", "all x.(Numpus(x) -> Imperium(x))", "all x.(Numpus(x) -> Isolation(x))", "all x.(Numpuse(x) -> Issue(x))", "all x.(Numpus(x) -> Impermant(x))", "all x.(Numpus(x) -> Issue(x))", "all x.(Numpuse(x) -> Isolation(x))", "all x.(Numpus(x) -> Isolates(x))", "all x.(Numpus(x) -> Issue(x))", "all x.(Numpuse(x) -> Issue(x))", "all x.(Numpus(x) -> Issue(x))"]}
{"id": "prontoqa_train_7", "nl": "Wren is not an impus and Wren is a tumpus and Wren is a wumpus.", "fol": "(-impus(Wren) & tumpus(Wren) & wumpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Impozitis(x)) & all y.((Wren(y) & Tumpus(y))) -> Wumpus(y)))", "(all x.(Wren(x) -> -Impossible(x)) & all y.(Wren(y) -> Tumor(y))) & all z.(Wren(z) -> Wumpus(z)))", "all x y z.((Wren(x) & Impossible(y) & Tumpus(z)) -> (-Impossible(x) & Tumpus(x) & Wumpus(x)))", "(all x.(Wren(x) -> -Impossible(x)) & all y.(Tumpus(y) & -Impossible(y)) & all z.(Wren(z) -> Wumpus(z))))", "all x y z.((Wren(x) & Impos(y) & Tumpus(z)) -> (-IsIllumination(x) & Tumpus(y) & Wumpus(z)))", "(all x.(Wren(x) -> NotImpossible(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> Wumpus(z))))", "(all x.(Cyrillic(x) -> -Issue(x)) & (Tumpus(x) | Wumpus(x))))", "(all x.(Wren(x) -> -Impossible(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> Wumpus(x)))", "all x y z.((Crop(x) & Wren(y) & Bump(z)) -> (-Impossible(x) & Tumpus(y) & Wumpus(z)))", "((Wren(Wren) & -Is(Wren)) | (Is(Wren) & Tumpus(Wren))))", "(all x.(Wren(x) -> -Impossible(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> Wumpus(x)))", "(-Impossible(Wren) & Tumpus(Wren))", "(all x.(Wren(x) -> -Impossible(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> Wumpus(z))))", "(all x.(Wren(x) -> -Illuminate(x)) & (-Illuminate(x) & -Tumpus(x)) & (-Illuminate(x) & -Wumpus(x)))", "(all x.(Wren(x) -> -Impossible(x)) & all y.(Tumpus(y) -> Tumpus(y))))", "((Wren(w) & -Impossible(w)) -> Tumpus(w)) & ((Wren(w) & Tumpus(w)) -> Wumpus(w)))"]}
{"id": "prontoqa_train_8", "nl": "Wren is not a numpus.", "fol": "-numpus(Wren)", "prediction": ["all x.(Wren(x) -> -Numpus(x))", "-numpus(Wren)", "All x.(Wren(x) -> -Numpus(x))", "all x.(Wren(x) -> -Numpus(x))", "all x.(Wren(x) -> -Numpus(x))", "-Numpus(Wren)", "the Wren is not Anumpus(w).", "(nonumpus(Wren) & -Bully(Wren))", "-Numpus(Wren)", "all x.(Wren(x) -> -Numpus(x))", "all x.(Wren(x) -> -numpus(x))", "-Numptus(Wren)", "all x.(Wren(x) -> -Numpus(x))", "all x.(Wren(x) -> -numpus(x))", "(-numpus(Wren)", "all x.(Wren(x) -> -Numpus(x))"]}
{"id": "prontoqa_train_9", "nl": "Each tumpus is a shumpus.", "fol": "all x. (tumpus(x) -> shumpus(x))", "prediction": ["all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Shumpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Shumpea(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Shumpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))"]}
{"id": "prontoqa_train_10", "nl": "Max is not a shumpus, Max is a zumpus, and Max is a jompus.", "fol": "(-shumpus(Max) & zumpus(Max) & jompus(Max))", "prediction": ["(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> Jompus(x)))", "(all x.(Max(x) -> -Shumpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> Jompus(z))))", "(-Shumpus(Max)) & (Zumpus(Max) & JOmpus(Max)))", "theoretical definitions: ((Max(Max) & -Shumpus(Max)) | (Max(Max) & Zumpus(Max)) | (Max(Max) & Jompus(Max))))", "(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> Jompus(x)))", "all x y z.((Max(x) & Zumpus(y) & Jompus(z)) -> (-Shumpus(x) | (-Shumpus(y) & Zumpus(y) & Jompus(z))))", "(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> Jompus(x)))", "all x y z.((Max(x) & Humpus(y) & Zumpus(z)) -> (-Shumpus(x) | Jompus(x)))", "(all x.(Max(x) -> -Shumpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> Jompus(z))))", "(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> Jompus(x)))", "(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> Jompus(x)))", "(exists x.(Max(x) & -Shumpus(x)) & exists y.(Zumpus(y) & -Shumpus(y))) & exists z.(Max(z) & Yompus(z))))", "all x y.((Max(x) & Shimpus(y)) -> (-Shumpus(x) | Zumpus(y) | Jompus(x)))", "all x y z.((Max(x) & Zumpus(y) & Jompus(z)) -> ((-Shumpus(x) & -Shumpus(y)) | (-Shumpus(y) & Zumpus(y))))", "(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> Jompus(x)))", "all x y z.((Max(x) & Humpus(y) & Zumpus(z)) -> ( -Shumpus(x) | (Tompus(x) & Jompus(x))))"]}
{"id": "prontoqa_train_11", "nl": "Max is not a tumpus.", "fol": "-tumpus(Max)", "prediction": ["all x.(Max(x) -> -Tumpus(x))", "(-Tumpus(Max))", "-Tumpus(Max)", "(-Tumpus(Max))", "is NOTTumpus(Max)", "(-Tumpus(Max))", "(Max(Max) & -Tumpus(Max))", "Max isn'tTumpus(max)", "(-Tumpus(Max))", "all x.(Max(x) -> -Tumpus(x))", "-Tumpus(Max)", "-Tumpus(Max)", "(-Tumpus(Max))", "(-Tumpus(max))", "-Tumpus(Max)", "-Tumpus(Max)"]}
{"id": "prontoqa_train_12", "nl": "Each tumpus is a brimpus.", "fol": "all x. (tumpus(x) -> brimpus(x))", "prediction": ["all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Buckingham(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Burmpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brumpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_13", "nl": "Max is a lorpus and Max is an impus and Max is not a brimpus.", "fol": "(lorpus(Max) & impus(Max) & -brimpus(Max))", "prediction": ["all x y z.((Max(x) & Lorpus(x) & Defiant(y) & Brimpus(z)) -> (Lorpus(x) & IsNotBrimpus(y)))", "all x.(Max(x) -> (Lorpus(x) & Impossible(x) & -Brimpus(x)))", "(all x.(Max(x) -> Lion(x)) & all y.(Max(y) -> Illusion(y)) & all z.(Max(z) -> -Brumpus(z))))", "(all x.(Max(x) -> Lorpus(x)) & (Max(x) -> Imperator(x)) & (Max(x) -> -Brimpus(x)))", "(all x.(Max(x) -> Lorpus(x)) & all y.(Max(y) -> Isolator(y))) & all z.(Max(z) -> -Brimpus(z)))", "(all x.(Max(x) -> Lorpus(x)) & all y.(Max(y) -> Issue(y))) & all z.(Max(z) -> -Brimpus(z))))", "all x y z.((Max(x) & Lorpus(x) & Impossible(y)) -> (Lorpus(x) & Dusk(y) & -Brimpus(z)))", "(all x.(Max(x) -> Florus(x)) & all y.(Max(y) -> Issue(y))) & all z.(Max(z) -> -Brampus(z)))", "(all x.(Max(x) -> Lorpus(x)) & (Max(x) -> Impossible(x)) & (Max(x) -> -Brimpus(x)))", "all x.(Max(x) -> (Lorpus(x) & Impossible(x) & -Brimpus(x)))", "all x.((Max(x) & Lorpus(x)) -> -Brimpus(x))", "all x y z.((Max(x) & Lorpus(y) & IsSolid(z)) -> (Lorpus(x) & IsSolid(x,y) & -IsSolid(x,z)))", "all x y.((Max(x) & Lorpus(y) & Imperator(y)) -> (Lorpus(x) & -Brimpus(y)))", "all x.(Max(x) -> (Lorpus(x) & Is(x) & -Brimpus(x)))", "all x.(Max(x) -> (Lorpus(x) & Issue(x) & -Brumpus(x)))", "all x y.((Max(x) & Lorpus(x) & Impossible(x)) -> -Brimpus(y))"]}
{"id": "prontoqa_train_14", "nl": "Zumpuses are vumpuses.", "fol": "all x. (zumpus(x) -> vumpus(x))", "prediction": ["all x.(Zumpus(x) -> Vulpe(x))", "all x.(Zumpus(x) -> Vulupe(x))", "all x.(Zumpus(x) -> Vampus(x))", "all x.(Zumpus(x) -> Vampuse(x))", "all x.(Zumpus(x) -> V\u00e9mis(x))", "all x.(Zumpus(x) -> Vulpe(x))", "all x.(Zumpus(x) -> Vampus(x))", "all x.(Zumpus(x) -> Vampus(x))", "all x.(Zumpus(x) -> Vumpus(x))", "all x y.((Zumpus(x) & Vampus(y)) -> (Sumpus(x) & Vampus(x)))", "all x.(Zombies(x) -> Vampuse(x))", "all x.(Zumpus(x) -> Vampus(x))", "all x.(Zumpus(x) -> Vampus(x))", "all x.(Zumpus(x) -> (Vumpus(x) & Long(x)))", "all x.(Zumpus(x) -> Vampus(x))", "all x.(Zumpus(x) -> Vulpuse(x))"]}
{"id": "prontoqa_train_15", "nl": "Polly is a lorpus, Polly is a lempus, and Polly is not a vumpus.", "fol": "(lorpus(Polly) & lempus(Polly) & -vumpus(Polly))", "prediction": ["(all x.(Polby(x) -> Larpus(x)) & all y.(Lempus(y) -> Polly(x)) & all z.(Vumpus(z) -> -Lorpus(x))))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Lempus(x)) & -Polly(x))))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Lempus(x)) & -Plooy(x)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Lempus(y)) & none z.(Polly(z) -> Vumpus(z))))", "all x y z.((Polly(x) & Lorpus(y) & Lempus(z)) -> (Lorph(x,y) & Lempus(z) & -Vumpus(z)))", "(all x.(Constant(x) -> Lorpus(x)) & all y.(Constant(y) -> Lempus(y)) & all z.(Constant(z) -> -Vumpus(z))))", "(all x y.((Polly(x) & Lorpus(x)) -> Polly(y)) & ((Polley(x) & Lempus(y)) -> -Vumpus(y)))", "all x y z.((Polly(x) & Lorpus(y) & Lempus(z)) -> (Crimes(x,y) & -Virpus(z)))", "(all x.(Molly(x) -> Lorpus(x)) & all y.(Molly(y) -> Lempus(y)) & all z.(Molly(z) -> -Vumpus(z))))", "(all x.(Polly(x) -> Llorpus(x)) & (Polly(x) -> Lempus(x)) &(Poly(x) -> -Vumpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Lempus(z)) -> (Lorm(x) | Lempus(x) | -Vumpus(y)))", "(all x y z.(Polly(x) -> (Lorpus(x) & Lempus(y) & Voompus(z))) & (Polly(x) -> (Derbo(x,z) & -Vimpus)))", "(all x.(Polly(x) -> Lorosa (Polly)) & all y.(Polly(y) -> Lempus(y)) & -Vumpus(y)))", "(all x y z.(Polly(x) -> (Lorph(x) & Lhempus(y) & Lempus(z)) & -Vumpus(z)))", "(all x.(Polly(x) -> Loomis(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> -Vumpus(x)))", "(all x y z.(Polly(x) -> (Lorpus(x) & Lempus(y))) & (Poly(z) -> (Vumpus(z) & -Lorpus(z))))"]}
{"id": "prontoqa_train_16", "nl": "Polly is not a zumpus.", "fol": "-zumpus(Polly)", "prediction": ["All x.(Polly(x) -> -Zombies(x))", "(-Zumpus(Polly))", "(-Zimpus(Polly(Polly))", "all x.(Polly(x) -> -Zumpus(x))", "exists x.(Polly(x) & -Zumpus(x))", "(-Zumpus(Polly))", "all x.(Polly(x) -> -Zumpus(x))", "All x.(Polly(x) -> -Zombipus(x))", "Polly is not a zumpus(Plody)", "Polly is not A Zumpus(Polly)", "(-Zupus(Polly))", "(-Zombie(Polly))", "all x.(Polly(x) -> -Zumpus(x))", "all x.(Poly(x) -> -Tompus(x))", "all x.(Polly(x) -> NotZimmer(x))", "Polly ist keine zumpus."]}
{"id": "prontoqa_train_17", "nl": "Brimpuses are grimpuses.", "fol": "all x. (brimpus(x) -> grimpus(x))", "prediction": ["all x.(Brompus(x) -> Grimpuse(x))", "all x.(Brimpus(x) -> Grimpuse(x))", "all x.(Brimpus(x) -> Grimpuse(x))", "all x.(Brompus(x) -> Grimpuse(x))", "all x.(Brompus(x) -> Grimpuse(x))", "all x.(Brimpus(x) -> Grimpuse(x))", "all x.(Brompus(x) -> Gruffus(x))", "all x.(Brompus(x) -> Grimpuse(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Grimpuse(x))", "all x.(Brompus(x) -> Grimpus(x))", "all x.(Brampus(x) -> Grimpus(x))", "all x.(Brompus(x) -> Grappuse(x))", "all x.(Brompus(x) -> Grimpuse(x))", "all x.(Brompus(x) -> Grimpuse(x))", "all x.(BRimpus(x) -> Grimpuse(x))"]}
{"id": "prontoqa_train_18", "nl": "Max is a numpus, Max is a zumpus, and Max is not a grimpus.", "fol": "(numpus(Max) & zumpus(Max) & -grimpus(Max))", "prediction": ["all x y z.((Max(x) & Numpus(y) & Zumpus(z)) -> (Limpus(x) & -Spoken(x)))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> -Grimpus(z))))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Zumpus(y)) & -Grampus(y)))", "all x y z.((Max(x) & Numpus(y) & Zumpus(z)) -> ((Numpus(x) | Zumpus(z)) & -Grimpus(x))))", "(Numpus(max) | Zumpus(max) | -Grimpus(max)))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> -Grimpus(z))))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & -Max(x)))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> -Grimpus(x)))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & -Mach(x)))", "(all x y z.(Max(x) -> Nompus(x)) & (Max(y) -> Zumpus(y)) & (Max(z) -> -Grimpus(z))))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> -Grimpus(x)))", "all x y z.((Max(x) & Numpus(y) & Zumpus(z)) -> (Matt(x) & -Grimpus(x)))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> -Grimpus(x)))", "all x y z.((Max(x) & Numpus(y) & Zumpus(z)) -> (Rampus(x) | Grimpus(x)))", "all x y.((Max(x) & Numpus(x) & Zumpus(y) & -Grimpus(x)) -> ((Max(x) & -Trompus(y))))", "(all x y.(Max(x) -> Numpus(x)) & (Max(y) -> Zumpus(y)) & (Max(y) -> -Grampus(y)))"]}
{"id": "prontoqa_train_19", "nl": "Max is not a brimpus.", "fol": "-brimpus(Max)", "prediction": ["(Camera(Max) -> -Brumpus(Max))", "DerMach(Max) -> -Brimpus(Max))", "all x.(MMax(x) -> -Brompus(x))", "Max is not a Brimpus.", "(-brimpus(Max))", "(-Brampus(Max))", "(-Brimpus(Max)).", "-(Brimpus(Max))", "Max is not a Brimpus.", "(-Brompus(Max) | -Brumpus(Max))", "(-Brimpus(Max))", "Max ist nicht brimpus.", "Max is not brimpus.", "A: Max is not a Brimpus.", "all x.(Max(x) -> -Brimpus(x))", "\u201cMax\u201d e.-Brimpus(e)"]}
{"id": "prontoqa_train_20", "nl": "Every sterpus is a vumpus.", "fol": "all x. (sterpus(x) -> vumpus(x))", "prediction": ["all x.(Strohpus(x) -> Vumpus(x))", "all x.(Sterpunx(x) -> Vamps(x))", "all x.(Sterpus(x) -> Vulmpus(x))", "all x.(Sterpus(x) -> Vubis(x))", "all x.(Sterpus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vimpus(x))", "all x.(Sternpus(x) -> Vampum(x))", "all x.(Sterpus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vumpus(x))", "all x.(Steroid(x) -> Vumpus(x))", "all x.(Steerpus(x) -> Vumpus(x))", "all x.(Strojan(x) -> Vumpus(x))", "all x y.((Steerpus(x) & Vumpus(y)) -> Unique(x,y))", "all x.(Sterpus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vumpus(x))"]}
{"id": "prontoqa_train_21", "nl": "Rex is a zumpus and Rex is an impus and Rex is not a vumpus.", "fol": "(zumpus(Rex) & impus(Rex) & -vumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Impossible(y))) & all z.(Rex(z) -> -Voompus(z))))", "all x y.((Rex(x) & Mitmpus(x) & Impossible(x)) -> (Rx) & -Vumpus(y)))", "(all x y z.(Rex(x) -> Zumpus(x)) & (Piece(y) -> Impermissible(y)) & (Rex(z) -> -Vumpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Impermissible(y))) & all z.(Rex(z) -> -Vumpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Ispose(y))) & all z.(Rex(z) -> -Vumpus(z))))", "all x y.((Rex(x) & Umpus(x)) -> (IsRex(x) | (IsRex(x) & Imperium(x))))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Issuel(x)) & (Rex(x) -> -Vimpus(x)))", "all x.(Rex(x) -> (Tompus(x) & Issue(x) & -Vimpus(x)))", "(all x y.((Rex(x) & Daumpus(x)) -> Its(x)) & ((Rex(y) & Impossible(y)) -> -Vumpus(y)))", "(all x y.(Rex(x) -> Zumpus(x)) & (Rex(y) -> Imperative(y))) & (Rex(y) -> -Vumpus(y)))", "(all x y z.((Rex(x) & Zumpus(x)) -> (Impossible(x) & Impossible(y))) & ((Rex(z) & Immocracy(z)) -> -Vumpus(z)))", "all x y z.((Rex(x) & Zumpus(x) & Imperator(y)) -> (IsRetro(x) & -Vumpus(z)))", "all x y.((Rex(x) & Zumpus(x) & IsInterpreter(x)) -> (-Vimpus(y)))", "all x.(Rex(x) -> (Zumpus(x) & Emphasis(x) & -Vumpus(x)))", "all x.(Rex(x) -> (Tompus(x) & IsImpossible(x) & -Vumpus(x)))", "(all x y.((Rex,tompus) & -Vumpus(y)) -> Zumpus(x)) & ((Rex,tompus) & -Idemiotic(y)) -> Imperative(y)))"]}
{"id": "prontoqa_train_22", "nl": "Rex is not a sterpus.", "fol": "-sterpus(Rex)", "prediction": ["(-Sterpus(Rex))", "-Astropus(Rex)", "(-Sterpus(Rex))", "(-Sterpous(Rex))", "all x.(Rex(x) -> -Sterepus(x))", "all x.(Rex(x) -> -Sterpus(x))", "(-Sterpus(Rex))", "Rex is not sterpus.", "Rex is -Sterpus(Rex)", "REX -Sterpus(x))", "all x.(Rex(x) -> -Sterpus(x))", "all x.(Rex(x) -> -Sterepus(x))", "all x.(Rex(x) -> -Sterpus(x))", "Rex is not sterpus(rex)", "-Sterpus(Rex)", "() & -Stereo(rex))"]}
{"id": "prontoqa_train_23", "nl": "Every jompus is a dumpus.", "fol": "all x. (jompus(x) -> dumpus(x))", "prediction": ["all x.(Jumpus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumps(x))", "all x.(Jumpus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jimpus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_24", "nl": "Polly is a lempus, Polly is not a dumpus, and Polly is a wumpus.", "fol": "(lempus(Polly) & -dumpus(Polly) & wumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))", "((Polly(Polly) | Dumpus(Polly))) | (Polly(Polly) | Wumpus(Polly))))", "(all x.(Limpus(x) -> Polly)) & (NoDumpus(x) -> Polly)) & (Wumpus(x) -> Polly)))", "all x y z.((Polly(x) & Lempus(x) & Plaid(y) & Dumpus(z)) -> ((Polly(x) & Wumpus(x))))", "(all x y z.(Polly(x) -> Lempus(x)) & ((Polly(y) & -Dumpus(y)) | (Polly(y) & Wumpus(z)))))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) | (Poly(x) -> Wumpus(x))))", "all x y.((Polly(x) & Polly(y)) -> (Lempus(x) & -Dumps(y) & Wumpus(y)))", "all x.((Polly(x) & Lempus(x)) | (-Dumpus(x) & Wumpus(x))))", "all x y z.((Polly(x) & Lempus(x) & Polly(y) & Dumpus(z)) -> (-Dumpsus(y) & Wumpus(z)))", "all x y z.((Polly(x) & Lempus(x) & Pupus(y) & Wumpus(z)) -> (-Dumpus(y) & Whampus(z)))", "(all x y z.(Polly(x) -> Lempus(x)) & (Polly(y) -> -Dumpus(y)) & (Polly(z) -> Wumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & all y.(Polley(y) -> Dumpus(y))) & all z.(Polly(z) -> Wumpus(z)))", "(all x y z.(Polly(x) -> Lempus(x)) & (Polly(y) -> -Dumps(y))) & (Polly(z) -> Wumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))"]}
{"id": "prontoqa_train_25", "nl": "Polly is not a jompus.", "fol": "-jompus(Polly)", "prediction": ["All x.(Polly(x) -> -Jompus(x))", "(-Jompus(Poly))", "-Jompus(Polly)", "Polly -Jumpus(Polly)", "(-Jompus(Polly))", "(\u2013Jumpus(Polly)).", "-Jompus(polly)", "all x.(Polly(x) -> -Jompus(x))", "(-Jampus(Polly))", "all x.(Polly(x) -> -Jombus(x))", "(-Jochus(Polly))", "(-Jompus(Polly))", "all x.(DoubleHas(x,Godfather,Company) & -Jimpus(x))", "-Spoik(Polly)", "(-Jompus(Polly))", "all x.(Polly(x) -> -Jompus(x))"]}
{"id": "prontoqa_train_26", "nl": "Every impus is a numpus.", "fol": "all x. (impus(x) -> numpus(x))", "prediction": ["all x.(Impossible(x) -> Numpus(x))", "-exists x.(Impossible(x) & Numpus(x))", "all x.(Impossible(x) -> Number(x))", "all x.(Izpos(x) -> Numpus(x))", "all x.(Improvs(x) -> Numpus(x))", "all x.(Ilipos(x) -> Numpus(x))", "all x.(Impediment(x) -> Numpus(x))", "all x.(Issue(x) -> Numpus(x))", "all x.(Impossible(x) -> Numpus(x))", "all x.(Improvera(x) -> Numpus(x))", "all x.(Illegal(x) -> Numpus(x))", "all x.(Exercice(x) -> Numpus(x))", "all x.(Implementation(x) -> Numpus(x))", "all x.(Issue(x) -> Numpus(x))", "exists x.(Iris(x) & Numpus(x))", "all x.(Impossible(x) -> Numpus(x))"]}
{"id": "prontoqa_train_27", "nl": "Polly is a lorpus and Polly is not a numpus and Polly is a yumpus.", "fol": "(lorpus(Polly) & -numpus(Polly) & yumpus(Polly))", "prediction": ["all x y.((Lorpus(x) & Nompus(y)) -> (Llorpus(x) & -Lumpus(y) & Yampus(y)))", "(all x.(Lorpus(x) -> Polly)) & (Nobulos(x) -> Polly)) & (Yumpus(x) -> Polly)))", "(Lorpus(Polly) & -Numpus(Polly) & Yumpus(Polly))", "all x y z.((Polly(x) & Lorpus(y) & -Dumpus(z) & Yupsis(z)) -> ((Lorph(x,y) & -Dumpus(z)) | (-Lorph(x) & -Dog(y)))))", "(all x.(Lapis(x) | Nompus(x) | Yumulus(x)))", "(all x.(Lorpus(x) & -Numpus(x)) & all yumpus(y)) -> PollyAs(x,y))", "all x.((Lorph(x) & -Numpus(x)) -> Yampus(x))", "all x y z.((Polly(x) & Lorpus(x) & Unnumpus(y) & Yampus(z)) -> (Lorph(x) & -Numpus(y) & Nompus(z)))", "(all x.(Lorpus(x) -> Polly)) & all y.(Numerus(y) -> Polly)))", "(all x.(Squid(x) -> (Lorpus(x) & -numpus(x)) & all y.(Squid(y) -> (Yumpus(y))))", "all x y z.((Polly(x) & Lorpus(y) & Yampus(z)) -> (Legrefe(x) & -Numpus(y) & Yampus(z)))", "(all x.(Lorpus(x) -> Yumpus(x)) & All y.(Yumpus(y) -> Yumpus(y)))", "(all x.(Lorpus(x) -> Polly)) & (-Numpus(x) -> Polly)) & (Yumpus(x) -> Polly)))", "all x y z.((Polly(x) & Lorpus(x) & -Numpus(y) & Yumpus(z)) -> (Lorpus(x,y) & -Nompus(y) & -Yumpus(z,y)))", "(all x.(Lary(x) -> Throat(x)) & ((Polly(x) & -Number(x)) -> Yammer(x))))", "(all x y.(Lorpus(x) -> Polly_(Mother(x) & Lony(y))) & (-Numpus(y) -> Polly(x)) & (-Mother(y) -> Polly_(y) & Yumpus(y))))"]}
{"id": "prontoqa_train_28", "nl": "Polly is not an impus.", "fol": "-impus(Polly)", "prediction": ["(-Issue(Poly))", "-IsPolly(Polly)", "(-Impossible(Polly) -> Polly(Polary))", "-Impossible(Polly)", "All x.(Polly(x) -> -Impossible(x))", "Polly n.((Polly(n) & In(n)))", "Polly -IsImprovised(Polly)", "Polly is notImmune(polly)", "-Impossible(Polly)", "Polly is not impus.", "all x.(Polly(x) -> -Issue(x))", "All x.(Polly(x) -> -Imposed(x))", "all x.(Polly(x) -> -Impossible(x))", "-Impresario(polly)", "(-IsLipary(Polly))", "(-Isimple(Polly))"]}
{"id": "prontoqa_train_29", "nl": "Alex is a lempus and Alex is a gorpus and Alex is not an impus.", "fol": "(lempus(Alex) & gorpus(Alex) & -impus(Alex))", "prediction": ["all x y z.((Alex(x) & Lempus(x) & Gorpus(y)) -> ((Alex(x) & IsImpossed(x)) | (Alex(x) & NoImpossed(x)))))", "(all x.(Alexa_lempus(x) -> Gorpus(x)) & all y.(Alexa(y) -> -Impossible(y)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Impossible(z))))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Gorpus(y))) & all z.(Alex(z) -> -Impossible(z)))", "all x y.((Alex(x) & Lempus(x) & Gorpus(y)) -> (Collateral(x) & -Illimitator(x)))", "all x.(Alex(x) -> (Limpus(x) & Gorpus(x) & -Impos(x)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Imite(z))))", "all x y z.((Alex(x) & Lempus(x) & Gorpus(y)) -> (Lempus(x) & Gorpus(y) & -Impossible(z)))", "(all x.(AlexAlex(x) -> Lempus(x)) & all y.(AlexAlex(y) -> Gorpus(y))) & all z.(AlexAlex(z) -> -Implosm(z)))", "all x.(Alex(x) -> (Lampus(x) & Gorpus(x) & -Illegal(x)))", "(all x.(Alexam(x) -> Lempus(x)) & all y.(Alexam(y) -> Gorpus(y)) & all z.(Alexam(z) -> -Ilpos(z))))", "all x y z.((Alex(x) & Lempus(x) & Gorpus(y) & Diet(z)) -> (IsLempus(x) | IsGorpus(y) & -Impossible(z)))", "all x.(Alex(x) -> (Lempus(x) & Dorpus(x) & -Illipa(x)))", "all x y.((Alex(x) & Lempus(x) & Gorpus(y)) -> (-Implified(x)))", "all x y z.((Alex(x) & Lempus(x) & Gorpus(y) & Impeccation(z)) -> (Limpus(x) & Gorpus(y) & -Impossible(z)))", "all x y z.((Alex(x) & Lempus(x) & Gorpus(y) & Issue(z)) ->(Alex(x) & Issue(x)))"]}
{"id": "prontoqa_train_30", "nl": "Alex is not a numpus.", "fol": "-numpus(Alex)", "prediction": ["Alex is not a Numpus.", "Alex is not a Numpus.", "ALL x.(Alex(x) -> Nobus(x))", "all x.(Alex(x) -> -Numpus(x))", "Alex is not a numpus.", "All x.(Alex(x) -> -Numpus(x))", "all x.(Alex(x) -> -Numpus(x))", "ALL x.(Alex(x) -> -numpus(x))", "Alex is -numpus(Alex)", "Alex is not Numpus(Alex)", "-Numpus(Alex)", "Alex ist kein Numpus.", "Alex -Numpus(Alex)", "Alex is not Numpus(Alex)", "Alex nm.(Nomus(Alex) -> NotNumpus(Alex))", "Alex is not a Numpus."]}
{"id": "prontoqa_train_31", "nl": "Every brimpus is a yumpus.", "fol": "all x. (brimpus(x) -> yumpus(x))", "prediction": ["all x.(Bimpus(x) -> Yumpus(x))", "all x.(Brompus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yumpus(x))", "(all x.(Brimpus(x) -> Yumpus(x)))", "all x.(Brimpus(x) -> Yumpus(x))", "all x.(Blumpus(x) -> Yumpus(x))", "all x.(Blumpus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yumpus(x))", "all x.(Brahms(x) -> Yumpus(x))", "all x.(Blumpus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yumps(x))", "all x.(Brumpus(x) -> Yampus(x))", "all x.(Brompus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yampus(x))", "all x.(Brimpus(x) -> Yumpus(x))"]}
{"id": "prontoqa_train_32", "nl": "Sam is not a yumpus, Sam is a shumpus, and Sam is a sterpus.", "fol": "(-yumpus(Sam) & shumpus(Sam) & sterpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Yumpus(x)) & (Sam(x) -> Humpus(x)) & (Sam(x) -> Sterpus(x)))", "(all x.(Sam(x) -> -Yumpus(x)) & (Sam(x) -> Humpus(x)) & (Sam(x) -> Sterpus(x)))", "(all x.(Sam(x) -> -Yumpus(x)) & all y.(Shumpus(y) & Sterpus(y)))", "(all x.(Sam(x) -> -Yumpus(x)) & (Sam(x) -> Shumpus(x)) & (Sam(x) -> Steerpus(x)))", "all x y z.((Sam(x) & Yumpus(y) & Shumpus(z)) -> (-Yumpus(x) & -Sterpus(z)))", "all x y z.((Sam(x) & Yampus(y) & Humpus(z)) -> (-Yumpus(x) & Shumpus(y) & Sterpus(z)))", "(all x.(AsSam(x) -> -Yumpus(x)) & all y.(AsShumpus(y) -> Sterepus(y)))", "(all x y z.((Sam(x) & Yumpus(y)) -> -Yumpus(x)) & ((Sam(z) & Humpus(z))) -> Sterpus(z)))", "(all x.(Sam(x) -> -Yumpus(x)) & (Sam(x) -> SeemsToBeShumpus(x)) & (Sam(x) -> Strictus(x)))", "all x y z.((Sam(x) & Yompus(y) & Shumpus(z)) -> (-Yumpus(x) & Strictus(y)))", "(all x.(Sam(x) -> -Yumpus(x)) & all y.(Shumpus(y) & Sterpus(y)))", "all x y z.((Sam(x) & Yumpus(y) & Humpus(z)) -> (-Yumpus(x) & Steroid(x)))", "all x y z.((Sam(x) & Yampus(y) & Humpus(z)) -> (-Yumpus(x) | (-Sam(x) & Humpus(x) & Sterus(y))))", "all x y z.((Sam(x) & Yumpus(y) & Humpus(z)) -> (-Yumpus(x) & -Shumpus(y) & -Sterpus(z)))", "all x y z.((Sam(x) & Yumpus(y) & Shumpus(z)) -> (-Yumpus(x) & Sterpus(x)))", "(all x.(Sam(x) -> NotYumpus(x)) & all y.(Shumpus(y) -> -Sam(x)) & all z.(Starpus(z) -> -Sam(y,x))))"]}
{"id": "prontoqa_train_33", "nl": "Sam is not a brimpus.", "fol": "-brimpus(Sam)", "prediction": ["all x.(Sam(x) -> -Brimpus(x))", "all x.(Sam(x) -> -Brimpus(x))", "all x.(Sam(x) -> -Brimpus(x))", "all x.(Sam(x) -> -Brumpus(x))", "(-Brumpus(Sam))", "-IsBrumpus(Sam)", "(Brimpus(Sam) | Brimpus(Sam)))", "-Brimpus(Sam)", "(BeforeSam(Sam) & -Brimpus(Sam))", "all x.(Sam(x) -> NoBrumpus(x))", "all x.(Sam(x) -> -Brimpus(x))", "(Sam is notBrumpus(Sam))", "all x.(Sam(x) -> -Brimpus(x))", "all x.(Sam(x) -> -Brimpus(x))", "(-Brumpus(Sam))", "(-Brumpus(Sam))"]}
{"id": "prontoqa_train_34", "nl": "Each shumpus is a sterpus.", "fol": "all x. (shumpus(x) -> sterpus(x))", "prediction": ["all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterosis(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "exists x.(Shumpus(x) & Sterpus(x))"]}
{"id": "prontoqa_train_35", "nl": "Polly is a dumpus and Polly is a vumpus and Polly is not a sterpus.", "fol": "(dumpus(Polly) & vumpus(Polly) & -sterpus(Polly))", "prediction": ["(all x.(Polly(x) -> Dumpus(x)) & all y.(Polly(y) -> Vubisp(y)) & all z.(Polly(z) -> -Stuss(z))))", "all x.(HasDumpus(x) & HasVumpus(x) & -HasSterepus(x))", "all x y.((Polly(x) & Dumpus(x) & Polly(y)) -> (Vumpus(y) & -Sterpus(y)))", "all x y z.((Polly(x) & Dumpus(x) & Vacus(y) & -Sterpus(z)) -> (Answer(x,y,z) & Ayr(x,w)))", "all x y z.((Dumpus(x) & Vumpus(y) & Sterpus(z)) -> (Polly(x) & Dump(x) & Polly(y) & -Sterpus(y)))", "all x y z.((Polly(x) & Dumpus(x) & Pumpus(y) & Sterpus(z)) -> (Dumpus(x) & Vupus(y) & -Sterpus(z)))", "(all x.(Poly(x) -> Dumpus(x)) & all y.(Poly(y) -> Vimpus(y)) & all z.(Polly(z) -> -Sterpus(z))))", "(all x.((Polly(x) & Dumpus(x)) | ((Poly(x) & voompus(x))) | (Poly(x) & -Sterpus(x))))", "all x y z.((Poultry(x) & Dumpus(x) & (Poultry(y) | Vumpus(y))) -> -Sterpus(z))", "all x y.((Polly(x) & Dumpus(x)) -> (Vumpus(x) & -Sterepus(y)))", "all x y z.((Polly(x) & Dumpus(x) & Vompus(y) & Sterpus(z)) -> (-Dumpus(x) & -Vulpus(y) & -Vulpus(z)))", "all x y z.((Polly(x) & Dumpus(y) & Voluptus(z)) -> ((Plutus(x) | Voluptus(z)) & -Sterpus(x))))", "all x y z.((Polly(x) & Dumpus(y) & Vompus(z)) -> (Dumpus(x) & Vampus(x) & -Sterpus(x)))", "(all x.(Poly(x) -> Dumpus(x)) & (Poly(x) -> Vumpus(x)) & (Poly(x) -> -Sterus(x)))", "(all x.(Polly(x) -> Dumpus(x)) & (Polly(x) -> Vampus(x)) & -Sterpus(x)))", "all x y z.((Poly(x) & Dumpus(x) & Vumpus(y) & -Sterpus(z)) -> (Dumpus(x) & Vumpus(y) & -Sterpus(z)))"]}
{"id": "prontoqa_train_36", "nl": "Polly is not a shumpus.", "fol": "-shumpus(Polly)", "prediction": ["-Shumpus(Polly)", "(-Shumpback(Polly))", "(-Shumpus(Polly))", "all x.(Polly(x) -> -Shumpus(x))", "exists x.(Polly(x) & -Shumpus(x))", "-(Shumpus(Polly))", "(-Shumpus(Polly,y))", "(-Shumpus(Polly))", "all x.(Polly(x) -> -Shumpus(x))", "all x.((Polly(x) & -Shumpus(x)) -> -Shumpus(x))", "(-Shumpus(Polly))", "(-Shumpus(Poly))", "(-Shumpus(Polly))", "Polly -Shumpus(Polly)", "Polly is not a shumpus.", "-Shumpus(Polly)"]}
{"id": "prontoqa_train_37", "nl": "Grimpuses are vumpuses.", "fol": "all x. (grimpus(x) -> vumpus(x))", "prediction": ["all x.(Grimpus(x) -> Vampuse(x))", "all x y.((Grimpus(x) & Vampuse(y)) -> Vampuse(x))", "all x.(Grimpus(x) -> Vulpe(x))", "all x.(Grimpus(x) -> Vampus(x))", "all x.(Grimpus(x) -> Vampus(x))", "all x.(Grimpus(x) -> Vampuse(x))", "all x.(Grumpus(x) -> Vampus(x))", "all x y.((Grimpus(x) & Vampus(y)) -> Necrople(x,y))", "all x.(Grimpus(x) -> Vumpuse(x))", "all x.(Grimpus(x) -> Vampuse(x))", "all x.(Grimpus(x) -> Vampus(x))", "all x.(Grimpus(x) -> Vulpuse(x))", "all x.(Grimpus(x) -> Vampus(x))", "all x.(Grimpus(x) -> Vulpus(x))", "all x.(Grimpus(x) -> Vumpus(x))", "all x.(Grimpus(x) -> Vampuse(x))"]}
{"id": "prontoqa_train_38", "nl": "Wren is not a vumpus, Wren is a jompus, and Wren is a lorpus.", "fol": "(-vumpus(Wren) & jompus(Wren) & lorpus(Wren))", "prediction": ["all x y z.((Wren(x) & Vampire(y) & Jompus(z)) -> (-Vampire(x) & Jompus(x) & Lorpus(x)))", "all x y z.((Wren(x) & Moose(y) & Lops(z)) -> (-Vumpus(x) & Jompus(y) & -Vumpus(z)))", "(all x.(Wren(x) -> -Vumpus(x)) & all y z.(Wren(y) -> -Jimpus(y))) & all z.(Wren(z) -> Lorpus(z)))", "(all x y z.(Wren(x) -> -Vumpus(x)) & ((Wren(y) & Yompus(y)) -> Luce(z)))", "(all x.(Wren(x) -> -Vumpus(x)) | (Mollpus(x) | Lorpus(x))))", "(-Vumpus(Wren) & -Jompus(Wren) & -Lorpus(Wren))", "(all x.(Wren(x) -> -Vumpus(x)) & all y.((Wren(y) & Jompus(y))) -> Lorpus(y)))", "(all x.(Wren(x) -> -Vumpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> Lorpus(z))))", "all x y z.((Wren(x) & (-Vumpus(x) | (-Vumpus(x) & Jompus(y)) & (-Vumpus(y) & Jompus(y) & Lopus(z))) -> -Vumpus(x)) & (-Vumpus(x) & -Jompus(y) & -Vorpus(z)))", "(all x.(Wren(x) -> -Vimpus(x)) & ((Wren(x) -> Jompus(x)) & ((Wren(x) -> Lorpus(x))))", "(all x y z.((Wren(x) & Vumpus(y)) -> -Vumpus(x)) & ((Wren(z) & Moose(z))) -> -Lorpus(z)))", "(all x.(Wren(x) -> -Vimpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> Lorpus(z)))", "(all x.(Wren(x) -> -Vumpus(x)) & (Jompus(x) | Lorpus(x))))", "all x y z.((Wren(x) & -Vumpus(x)) -> (Neighborhood(y) & Jompus(z) & Lombard(x)))", "(exists x.(Wren(x) & -Vumpus(x)) & exists y.(Wren(y) & Jompus(y))) & exists z.(Wren(z) & Lorpus(z))))", "(-Vumpus(Wren) & Jompus(Wren) & Loperpus(Wren))"]}
{"id": "prontoqa_train_39", "nl": "Wren is not a grimpus.", "fol": "-grimpus(Wren)", "prediction": ["all x.(Wren(x) -> -Gruppus(x))", "all x.(Wren(x) -> -Grimpus(x))", "-Grimpus(Wren)", "-Grimpus(Wren)", "(-Grimpus(Wren))", "All x.(Wren(x) -> -Gripper(x))", "(-Grimpus(Wren))", "all x.(Wren(x) -> -Grimpus(x))", "(-Grimpus(Wren))", "(-Grimpus(wren))", "(Wren,-Grimpus(w))", "all x.(Wren(x) -> -Grimpus(x))", "(-Grimpus(Wren))", "we.(Wren,Wind(r)) -> -Grimpus(r))", "(Gritty(Wren) -> -Grimpus(Wren))", "Wren is not a Grimpus."]}
{"id": "prontoqa_train_40", "nl": "Each grimpus is a tumpus.", "fol": "all x. (grimpus(x) -> tumpus(x))", "prediction": ["all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Murph(x) -> Tumpus(x))", "(AllArps(a) -> Tumulus(a))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grumps(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumulus(x))", "all x.(Hurricane(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x y.((Grimpus(x) & Tumpus(y)) -> -Wall(x))", "all x.(Grimpus(x) -> Tump (ex.Egg.))", "all x.(Marsh(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_41", "nl": "Stella is not a tumpus and Stella is a dumpus and Stella is a sterpus.", "fol": "(-tumpus(Stella) & dumpus(Stella) & sterpus(Stella))", "prediction": ["(all x.((Stella(x) & -Tumpus(x)) -> Dumpus(x)) & all y.((Stella(y) & Sterepus(y)) -> Twistpus(y)))", "all x y.((Tumpus(x) & Dumpus(y)) -> (-Tumpus(x) & Sterpus(y)))", "all x.(Stella(x) -> (-Tumpus(x) & Dumpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & (Stella(x) -> Dumpus(x)) & (Stella(x) -> Sterpus(x)))", "(all x y z.((Tumpus(x) & Stella(y) & Dumpus(z)) -> -Tumpus(x)) & ((Dumpus(y) & Sterpus(z)) -> Steroid(y)))", "all x y z.((Shelley(x) & (Tumpus(y) | Dumpus(y)) & Sterpus(z))) -> -Tumpus(x) & Strepus(z))", "all x y z.((Tumpus(x) & Spotus(y) & Sterpus(z)) -> (-Tumpus(x) & Dumpus(y) & Sedpus(z)))", "(all x.(Starta(x) -> -Tumpus(x)) & all y.(Starta(y) -> Dumpus(y))) & all z.(Starta(z) -> Steros.(z))))", "(all x y z.((Stella(x) & Tumpus(y)) -> -(Tumpus(z) | Dumpus(z)) & Sterpus(z)))", "all x.((Stella(x) & -Tumpus(x)) & (Dumps(x) | Sterpus(x))) -> -Tumpus(x) & Sterpus(x))", "(all x.(Pattern(x) -> -Tumpus(x)) & all y.(Pattern(y) -> Dumpus(y))) & all z.(Pattern(z) -> Sterpus(z)))", "(all x.(Pete(x) -> -Tumpus(x)) & (Pete(x) -> Dumpus(x))) & (Pete(x) -> Sterepus(x)))", "(all x.((Stella(x) & -Tumpus(x)) | ((Stella(x) & Dubus(x))) | (Stella(x) & Sterpus(x))))", "all x y z.((Stella(x) & Dumpus(y) & Sterpus(z)) -> (-Tumpus(x) & Dumpus(y) & Sterochus(z)))", "(all x.(Tumpus(x) -> -Tumpus(x)) & all y.(Dumpus(y) -> -Tumpus(y))) & all z.(Sterpus(z) -> SexyTrumpus(z)))", "(all x y.(Tumpus(x) -> -Tumpus(x)) & exists z.(Dumpus(z) & Dumpus(z)) & exists w.(Sterpus(w) & -Tumpus(w))))"]}
{"id": "prontoqa_train_42", "nl": "Stella is not a grimpus.", "fol": "-grimpus(Stella)", "prediction": ["-Grimpus(Stella)", "Stella is not a Grimpus.", "Stella is -Grimpus(Stella))", "all x.(Stella(x) -> -Grimpus(x))", "all x.((Stella(x) & -Grimpus(x)) -> -Grimpus(x))", "is -Grimpus(Stella)", "Stella is notGrimpus(Stella)", "Stella is notGrisp(Stella)", "Stella n.(Grippus(n) & -Grippus(n))", "Stella is -Grimpus(Stella)", "(NoGrimpus(Stella))", "Stella is notGrimpus.", "Stella -Grimpus(Stella))", "Stella is not a Grimpus.", "(-Crupus(Stella))", "Stella is not a Gruppus(s)"]}
{"id": "prontoqa_train_43", "nl": "Lempuses are numpuses.", "fol": "all x. (lempus(x) -> numpus(x))", "prediction": ["all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lampuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpus(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lupus(x) -> Numpus(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lemme(x) -> Numpus(x))", "all x.(Lempus(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpus(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))"]}
{"id": "prontoqa_train_44", "nl": "Rex is a shumpus, Rex is not a numpus, and Rex is a tumpus.", "fol": "(shumpus(Rex) & -numpus(Rex) & tumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Humpus(x)) & all y.(Rex(y) -> -Numpus(y))) & all z.(Tumpus(z) -> Tumpus(z))))", "(all x.(Rex(x) -> Humpus(x)) & (-Mumpus(x) & -Mumpus(x)))", "all x y z.((Rex(x) & Shumpus(x) & Numpus(y) & Tumpus(z)) -> ((Shumpus(x) & -Numpus(y)) & Tumpus(z))))", "(all x.(Rex(x) -> Humpus(x)) & (-Rex(x) -> Numpus(x)) & (-Rex(x) -> Tumpus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (Rex(x) -> -Numpus(x)) & (Rex(x) -> Tumpus(x)))", "all x y z.((Rex(x) & Lumpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Tumpus(z)))", "(all x.(Rex(x) -> Humpus(x)) & -Numpus(x) & Tumpus(x))", "all x y z.((Rex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x,y) & Numpus(x,z) & Tumpus(x,y)))", "(all x.(Rex(x) -> Humpus(x)) & all y.((Rex(y) & -Numerus(y))) -> Tumpus(y)))", "(all x.(Rex(x) -> Humpus(x)) & all y.(Rex(y) -> -Numpus(y))) & all z.(Rex(z) -> Tumpus(z))))", "(all x.(Rex(x) -> Humpus(x)) & (-Rex(x) -> Numpus(x)) & (-Rex(x) -> Tumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> -Numpus(x)) & (Rex(x) -> Tumpus(x)))", "all x y z.((Rex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Tumpus(z)))", "(all x.((Rex) & Shumpus(x)) -> -Numpus(x)) & all y.((Rex) & Tumpus(y)) -> Tumpus(y)))", "(all x.(Rex,shumpus) -> exists y.(Rex,numpus)) & (Rex,y.(Rex,numpus)) -> exists z.(Rex,z)) & (Rex,y) & -exists w.(numpus) & -exists w.(tumpus & Rex,w))))))", "(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> -numpus(x)) & (Rex(x) -> Tumpus(x)))"]}
{"id": "prontoqa_train_45", "nl": "Rex is not a lempus.", "fol": "-lempus(Rex)", "prediction": ["Rex is notLimpus(x)", "none.Rex(x) -> NotLimpus(x))", "the aforementioned Rex(x) -> -Lempus(x))", "Rex is notLempus(x)", "Debian(Rex)", "NecessaryLempus(Rex)", "all x.(Rex(x) -> -Lempus(x))", "-Lampus(Rex)", "Neatly called Rex.", "Rex (since the beginning of the film, Rex was a lempus))", "Rex (nonlempus)", "Rex is notlempus(Rex)", "-Lempus(Rex)", "Rex (nee Lempus)", "(Rex) & -Lempus(Rex))", "-Lempus(Rex)"]}
{"id": "prontoqa_train_46", "nl": "Each brimpus is a grimpus.", "fol": "all x. (brimpus(x) -> grimpus(x))", "prediction": ["all x.((Brimpus(x) & Grimpus(x)) -> BornFromWall(x))", "all x.(Brimpus(x) -> Grimpus(x))", "ALL x.(Brimpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Slumpus(x))", "all x.(Brompus(x) -> Grimpus(x))", "all x.(Brumpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brumpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brampus(x) -> Grimpus(x))", "all x.((Brumpus(x) & Grimpus(x)) -> Stork(x))", "all x.(Brimpus(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_47", "nl": "Max is a jompus and Max is a lempus and Max is not a grimpus.", "fol": "(jompus(Max) & lempus(Max) & -grimpus(Max))", "prediction": ["(all x.(Max(x) -> Jompus(x)) & (Max(x) -> Lempus(x)) & -Max(x)))", "(all x.(Max(x) -> Jompus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> -Grimpus(x)))", "all x y z.((Max(x) & Jompus(x) & Lempus(y) & -Grimpus(z)) -> (Jompus(x) & Lempus(y) & -Gruppus(z)))", "(Kim isJimpus(Max) & Max isLempus(Max) & -Kim isGrimpus(Max))", "(all x.(Max(x) -> Jompus(x)) & all y.(Max(y) -> Lempus(y))) & (Max(y) -> -Grimpus(y)))", "all x y z.((Max(x) & Jompus(y) & Lempus(z)) -> (Jompus(x) & Lempus(z) & -Grimpus(z)))", "(all x.(Jompus(x) & All y.(Lempus(y) & (Greek(y) | Grimpus(y)))) -> Jompus(x))", "(all x.(Max(x) -> Jompus(x)) & (Max(x) -> Lempus(x)) & -Max(x) -> Grimpus(x)))", "(Jimpus(Max) & Lempus(Max) & -Grimpus(Max))", "(all x.(Max(x) -> Jompus(x)) & (Max(x) -> Lempus(x)) & -AlsoScrupulus(x)))", "all x y.((Max(x) & Jompus(x)) -> (Lempus(x) & -Grimpus(y)))", "all x y z.((Max(x) & Jompus(x) & Lempus(y) & Grimpus(z)) -> (Atnastoss(x,y) & NoTrunk(x,z)))", "all x y.((Max(x) & Jompus(x)) -> (Lempus(x) & -Grimples(x)))", "(all x.(Max(x) -> Jompus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> NoGrimpus(x)))", "all x y.((Max(x) & Jompus(x) & Lempus(y)) -> (NoGrimpus(x) & -Jompus(y)))", "all x y z.((Max(x) & Jompus(y) & Lempus(z) & -Grimpus(z)) -> (Jompus(x) | Lempus(z) | Lempus(z)))"]}
{"id": "prontoqa_train_48", "nl": "Every tumpus is a gorpus.", "fol": "all x. (tumpus(x) -> gorpus(x))", "prediction": ["all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorp(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_49", "nl": "Sam is a zumpus, Sam is not a gorpus, and Sam is a wumpus.", "fol": "(zumpus(Sam) & -gorpus(Sam) & wumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Zumpus(x)) & (-Sam(x) -> Gorpus(x)) & (-Sam(x) -> Wumpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wampus(x))))", "(all x.(Sam(x) -> Zumpus(x)) & (NonGorpus(x) & (Wumpus(x) | (Tumpus(x) & -Gorpus(x)))))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Gorpus(z)) -> (-Gorpus(y) & Wumpus(y)))", "all x y z.((Sam(x) & Zumpus(x) & -Gorpus(y) & Wumpus(z)) -> (Sam(x) & Wumpus(x)))", "(All x.(Sam(x) -> Zumpus(x)) & (-Sam(x) -> Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Rosen(x)) & (Sam(x) -> Wumpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (-Sam(x) -> Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & all y.(Sam(y) -> -Gorpus(y)) & all z.(Sam(z) -> Wumpus(z)))", "(all x y z.(James(x) -> Zumpus(x)) & ((James(y) -> -Gorpus(y))) & ((James(z) -> Wormpus(z))))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Gorpus(z) & -Gorpus(y)) -> Wumpus(x))", "((Sam(sam) & Zumpus(sam)) | (-Sam(sam) & Gorpus(sam))) | (-Sam(sam) & Cowpus(sam))))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Gorpus(z)) -> (-Tompus(y) & Wumpus(z)))", "(all x.(Tompus(x) -> Sam) & -Gorpus(x)) & (Wumpus(x) -> Sam))", "all x y z.((Shawn(x) & Zumpus(x) & Sam(y) & Gorpus(z)) -> (-BetaOropus(y) & Wumpus(z)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))"]}
{"id": "prontoqa_train_50", "nl": "Sam is not a tumpus.", "fol": "-tumpus(Sam)", "prediction": ["all x.(Sam(x) -> -Tumpus(x))", "Sam is notTumpus(Sam)", "all x.(Sam(x) -> -Tumpus(x))", "Sam is not a tumpus.", "all x.(Sam(x) -> -Tumpus(x))", "all x.(Sam(x) -> -Tumpus(x))", "(-Tumpus(Sam))", "Sam is not a tumpus.", "(Andy) & Sam ((Tumpus(y) | Turtle(y))))", "-Tumpus(Sam)", "Alas, Sam is a Tumpus!", "(-Tumpus(Sam))", "all x.(Sam(x) -> -Tumpus(x))", "-Tumpus(Sam)", "(-Tumpus.)", "All x.(Tumpus(x) -> -Tumpus(x))"]}
{"id": "prontoqa_train_51", "nl": "Each vumpus is a tumpus.", "fol": "all x. (vumpus(x) -> tumpus(x))", "prediction": ["all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumulus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vunymus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "every vumpus is tumpus(x) & has several different types of tumpus on the skin.", "all x.((Vumpus(x) & Tumpus(x)) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_52", "nl": "Rex is a wumpus, Rex is a yumpus, and Rex is not a tumpus.", "fol": "(wumpus(Rex) & yumpus(Rex) & -tumpus(Rex))", "prediction": ["all x y z.((Rex(x) & Wumpus(y) & Yumpa(z) & -Tumpus(z)) -> (Wumpus(x) | Yampa(y) & -Tumpus(x)))", "(all x y z.((Rex) & Wumpus(x)) -> Wumpus(y)) & ((Rex(z) & Yumpus(z)) -> NotTumpus(z)))", "(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> Yumpus(x)) & (Rex(x) -> -Tumpus(x))))", "(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> Yumpus(x)) & (Rex(x) -> -Tumpus(x))))", "all x y z.((Rex(x) & Wumpus(y) & Yumpus(z)) -> ((Wumpus(x) & Yumpus(z)) | (Yumpus(z) & -Tumpus(z))))", "(all x.(Rex(x) -> Wumpus(x)) & (Yumpus(x) | (Tumpus(x) & -Tumpus(x)))))", "(all x.(Rex(x) -> Wumpus(x)) & all y.(Yumpus(y) -> -Tumpus(y)))", "(all x.(Rex(x) -> Wumpus(x)) & (Yumpus(x) -> Yumpus(x)) & (Rex(x) -> -Tumpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & (Yumpus(x) -> Yumpus(x)) & (NotTompus(x) -> NoTumpus(x)))", "all x y z.((Rex(x) & Wumpus(y) & Yumpus(z) & -Tumpus(x)) -> (Wumpus(x) | Yumpus(z) | Rex (y) & -Tumpus(y)))", "(all xy z.(Wumpus(x) -> Rex)) & (Yumpus(y) -> Rex)) & (Tumpus(z) -> -Rex(z))))", "(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> Yumpus(x)) & (Rex(x) -> -Tumpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & all y.(Rex(y) -> Yang(y)) & all z.(Rex(z) -> -Tumpus(z))))", "all x y z.((Rex(x) & Wumpus(y) & Yumpus(z)) -> (Wumpus(x) & Yampus(z) & -Tumpus(z)))", "(all x.(Wumpus(x) & All y.(Yumpus(y))) -> -Tumpus(x))", "(all x y z.((Rex) & Wumpus(y) & Yampus(z)) -> Wumpus(y)) & ((Rex) & Yampus(z)) -> -Tumpus(z)))"]}
{"id": "prontoqa_train_53", "nl": "Rex is not a vumpus.", "fol": "-vumpus(Rex)", "prediction": ["all x.(Rex(x) -> -Vumpus(x))", "all x.(Rex(x) -> -Vampus(x))", "Rex is not a vumpus.", "Rex, a venomous thing.", "-Vumpus(Rex)", "Rex is notVimpus(x)", "Die Rex.(Vumpus(x))", "-Vumpus(Rex)", "Rex is not a Vulupe.", "Rex is not a Vulmpus.", "(-Vumpus(Rex))", "Rex is notVumpus(x)", "(-Vumpus(Rex))", "Rex -Vimpus(x)", "The Rex is not a Vumpus.", "Rex is not a Vulmpus."]}
{"id": "prontoqa_train_54", "nl": "Every gorpus is a rompus.", "fol": "all x. (gorpus(x) -> rompus(x))", "prediction": ["all x.(Gorpus(x) -> Rompus(x))", "all x.(Rompus(x) -> Wormpus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_55", "nl": "Wren is not a rompus, Wren is a dumpus, and Wren is a grimpus.", "fol": "(-rompus(Wren) & dumpus(Wren) & grimpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Rompus(x)) & (Dumpus(x) -> Grimpus(x)))", "(all x.(Wren(x) -> -Rompus(x)) & all y.((Wren(y) & Dumpus(y))) -> Grimpus(y)))", "-(Wren(Wren) & -Rompus(Wren)) & (Dumpus(Wren) & Grappit(w)))", "all x y z.((Wren(x) & Rompus(y) & Dumpus(z) & Grimpus(x)) -> (-Rompus(x) & Dumpus(x) & Grimpus(x)))", "(all x y z.(Wren(x) -> (-Rompus(x) | Dumpus(x))) & (-Rompus(y) & -Dumpus(z))) & (-Rompus(y) -> Grouchpus(z)))", "(all x.(Wren(x) -> -Rompus(x)) & (Wren(x) -> Dumpus(x)) & (Wren(x) -> Grimpus(x)))", "(all x.(Wren(x) -> -Rompus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "exists x.(Wren(x) & -Rompus(x) & Dumpus(x) & Grimpus(x))", "(all x.(Wren(x) -> -Rompus(x)) & ((Wren(x) -> Dumpus(x)) | (-Rompus(x) & Dumpus(x)))) & ('Wren(x) -> Grimpus(x))))", "(all x y z.((Wren(x) & Rompus(y)) -> -Rompus(x)) & ((Wren(x) & Dumpus(x)) -> Grimpus(z)))", "(all x.(Wren(x) -> -Rompus(x)) & ((Wren(x) -> Dumpus(x))) & ((Wren(x) -> Grimpus(x))))", "(all x y z.((Wren(x) & Roman(y) & Ripper(z)) -> -Rompus(x)) & ((Wren(x) & Dumpus(x)) -> Grimpus(x)))", "(all x.(Wren(x) -> -Rompus(x)) & ((Wren(x) & Dumpus(x)) | (Wren(x) & Grimpus(x)))))", "(all x.(Wren(x) -> -Rompus(x)) & (Wren(x) -> Dumpus(x)) & (Wren(x) -> Grimpus(x)))", "(all x.(Wren(x) -> -Rompus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> Gruppus(z))))", "all x y z.((Wren(x) & Dumpus(y) & Grimpus(z)) -> (-Rompus(x) & Dumpus(y) & Grimpus(z)))"]}
{"id": "prontoqa_train_56", "nl": "Wren is not a gorpus.", "fol": "-gorpus(Wren)", "prediction": ["All x.(Wren(x) -> -Gorpus(x))", "the Wren (Wren(Wren) & -Gorpus(Wren))", "-Gorpus(Wren)", "(-Gorpus(Wren))", "all x.(Wren(x) -> -Gorpus(x))", "all x.(Wren(x) -> -Gorpus(x))", "all x.(Wren(x) -> -Gorpus(x))", "-Gorpus(Wren)", "all x.(Wren(x) -> -Gorpus(x))", "all x.(Wren(x) -> -Gorpus(x))", "all x.(Wren(x) -> -Gorpus(x))", "all x.(Wren(x) -> -Gorpus(x))", "(-Gorpus(Wren))", "all x.(Wren(x) -> -Gorpus(x))", "(-Gorpus(Wren)", "(-Gorpus(Wren))"]}
{"id": "prontoqa_train_57", "nl": "Jompuses are wumpuses.", "fol": "all x. (jompus(x) -> wumpus(x))", "prediction": ["all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jimpus(x) -> Wumpus(x)) (EqualsHunt(x) & Contains(x,Hunt)))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jimpus(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wampus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wampus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jimpus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jumpus(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "all x.((Jompuse(x) & Huskite(x)) -> Wompus(x))", "all x.(Jompus(x) -> Wompus(x))"]}
{"id": "prontoqa_train_58", "nl": "Fae is a zumpus, Fae is not a wumpus, and Fae is a rompus.", "fol": "(zumpus(Fae) & -wumpus(Fae) & rompus(Fae))", "prediction": ["all x y z.((Fae(x) & Tompus(y) & Wompus(z)) -> (Stomps(x,y) & -Wumpus(y) & Rompus(z)))", "(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))", "(all x y z.((Fae(x) & Zumpus(x)) -> (Tompus(x) & -Wumpus(y)) & ((Fae(z) & Rompus(z)) -> (Rompus(z) & -Wumpus(z))))", "(all x.(HasZimpus(x) -> HasZimpus(x)) & (-HasWumpus(x)) & (-HasWumpus(x) -> HasRompus(x)))", "(all x.((Fae(x) & Zumpus(x)) -> -Wumpus(x)) & all y.((Fae(y) & Rompus(y))) -> Tossian(y)))", "all x.(Fae(x) -> (Tompus(x) | -Wumpus(x) | Rompus(x)))", "all x y z.((Fae(x) & Zumpus(y) & Fae(z) & -Wumpus(z)) -> (Wimpy(x) & Romanpus(z)))", "(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))", "all x y z.((Fae(x) & Tompus(y) & Wumpus(z)) -> (-Wumpus(z) & Rompus(x)))", "(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))", "(all x y z.((Faces(x) & Zumpus(x)) -> (Mirror(y) & -Wumpus(z))) & ((Faces(x) & Rompus(x)) -> (Mirror(x))))", "(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> rompus(x)))", "(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))", "(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))", "(all x.(Fae(x) -> Toumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))", "(all x.(Form(x) -> Zumpus(x)) & (Form(x) -> -Wumpus(x)) & Form(x)))"]}
{"id": "prontoqa_train_59", "nl": "Fae is not a jompus.", "fol": "-jompus(Fae)", "prediction": ["-Jompus(Fae)", "(-Jompus(Fae))", "-Jimpus(Fae)", "all x.(Fae(x) -> -Joompus(x))", "-Jimpus(Fae)", "(-Jimpus(Fae))", "all x.(Fae(x) -> -Jompus(x))", "all x.(Fae(x) -> -Jompus(x))", "-Jumpus(Fae)", "(Jompus(Fae))", "(-Jimpus(Fae))", "-Jempus(Fae)", "(Fae isn'tJumpus(fae))", "-Jumpus(Fae)", "(-jompus(Fae))", "Fae is notjompus(f)"]}
{"id": "prontoqa_train_60", "nl": "Each grimpus is a sterpus.", "fol": "all x. (grimpus(x) -> sterpus(x))", "prediction": ["only exists x.(Grips(x) & Sterpus(x))", "all x.(Grips(x) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "all x.(Gruppus(x) -> Sterpus(x))", "all x.(Gruppus(x) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "all x.(Grampus(x) -> Sterpus(x))", "all x.(Strictus(x) -> (Grimpus(x) & Sterpus(x)))", "all x.(Grimpus(x) -> Sterpus(x))", "all x.(Drupus(x) -> Sterpus(x))", "all x.(Strictus(x) -> Grubbus(x))", "all x.(Grimpus(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_61", "nl": "Sally is a rompus and Sally is not a sterpus and Sally is a brimpus.", "fol": "(rompus(Sally) & -sterpus(Sally) & brimpus(Sally))", "prediction": ["(all x.(Rompus(x) -> Sally(x)) & (-Sterpus(x) -> Sally(x))) & (Brimpus(x) -> Sally(x)))", "(all x.(Rompus(x) -> Mummies(x)) & (-Sterpus(x) -> Mummies(x)))", "all x.(Rompus(x) & -Sterepus(x) & Brimpus(x))", "all x y.((Sally(x) & Rimpus(x)) -> (Rompus(x) & -Sterpus(y) & Brimpus(z)))", "(all x.(Rompus(x) -> Sally)) & (-Sterpus(x) -> Sally)) & (Brompus(x) -> Sally)))", "exists x.(Sall(x) & TheRompus(x) & -Sterpus(x) & TheBrimpus(x))", "all x y z.((Sally(x) & Raccoon(y) & Steroscary(z)) -> (Rompus(x) & -Sterpus(y) & Brimpus(z)))", "all x y.((Sally(x) & Sally(y)) -> (Rompus(x) & -Sterpus(y) & Brimpus(y)))", "(all x y z.((Sally(x) & Rimpus(y) & Sterpus(z)) -> Rompus(x)) & ((Sally(x) & -Sterpus(x)) | (Brumpus(x) & Sally(x)))))", "(all x y.((Sally(x) & Raccoon(x)) -> Rimpus(x)) & ((Sally(y) & -Sterepus(y)) -> Brimpus(y)))", "(exists x.(Rompus(x) & -Sterpus(x) & Brimpus(x)))", "all x y z.((Sally(x) & Rimpus(x) & Sterpus(y) & Brimpus(z)) -> (Rompus(x) | Sally(x) & -Sterpus(y) & Sally(z))))", "all x y z.((Sally(x) & Rompus(x) & -Sterpus(y) & Brimpus(z)) -> (Rompus(x) & -St\u00e9rus(y) & -Brimpus(z)))", "(all x.(Sally(x) -> Arompus(x)) & (Sally(x) -> -Stereo(x)) & (Sally(x) -> ABrimpus(x))))", "all x.(Sally(x) -> (Rompus(x) & -Sterpus(x) & Brimpus(x)))", "all x.(Sally(x) -> (Rompus(x) & -Sterpus(x) & Brimpus(x)))"]}
{"id": "prontoqa_train_62", "nl": "Sally is not a grimpus.", "fol": "-grimpus(Sally)", "prediction": ["Sally nirvana.", "All x.(Sally(x) -> -Grimpus(x))", "Sally n\u2019est pas Grimpus.", "-Grimpus(Sally)", "Sally is not a Grimpus(Sally,x)", "Sally & -Grimpus(Sally)", "Sally n'est pas Grimpus.", "Sally n'est pasGrimpus(Sally,neats),neats,neats)neats(Sally,neats))", "Sally est -Gruppus(Sally)", "all x.(Sally(x) -> -Grimpus(x))", "Sally is not a Grimpus.", "Sally is not Grimpus.", "Sally is not a Gruppus.", "Sally is not a Grimpus(Sally)", "Sally is no Grimpus.", "-Grimpus(Sally)"]}
{"id": "prontoqa_train_63", "nl": "Vumpuses are tumpuses.", "fol": "all x. (vumpus(x) -> tumpus(x))", "prediction": ["all x.(Vumpus(x) -> Tumpus(x))", "all x.(Volumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpuse(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumulus(x))"]}
{"id": "prontoqa_train_64", "nl": "Sam is not a tumpus, Sam is a jompus, and Sam is a zumpus.", "fol": "(-tumpus(Sam) & jompus(Sam) & zumpus(Sam))", "prediction": ["all x.(Sam(x) -> (-Tumpus(x) & Jompus(x) & Zumpus(x)))", "all x.((Sam(x) & -Tumpus(x)) -> (Lompus(x) & Moose(x) & Zumpus(x)))", "all x y z.((Sam(x) & Tumpus(y) & Jompus(z)) -> (-Tumpus(x) & Jompus(y) & Zumpus(z)))", "(all x.(Sam(x) -> -Tumpus(x)) & all y.(Jompus(y) -> Zumpus(y)))", "all x y z.((Sam(x) & Tumpus(y) & Jompus(z)) -> (-Tumpus(x) & -Bottompus(x) & -Tompus(y)))", "all x y z.((Sam(x) & Tumpus(y) & Jompus(z)) -> (-Tumpus(x) & JOMpus(x) & Zumpus(x)))", "(all x.(Sam(x) -> -Tumpus(x)) & all y.(Jompus(y) -> Zumpus(y)))", "(exists x.(Sam(x) & -Tumpus(x)) & exists y.(Jompus(y) & Sam(x))) & exists z.(Zumpus(z) & Sam(x)))", "(all x.(Sam(x) -> -Tumpus(x)) & all y.(Jimpus(y) -> Zumpus(z)))", "all x y z.((Sam(x) & Tumpus(y) & Jompus(z) & Zumpus(x)) -> (-Tumpus(x) & Jompus(y) & Zumpus(z)))", "all x y.((Sam(x) & Jompus(y)) -> (-Tumpus(x) & Sousapus(y)))", "(all x.(Sam(x) -> -Tumpus(x)) & (Jumpus(x) | Zumpus(x))))", "(-Tumpus(Sam) & HasTompus(Sam)) & HasTompus(Sam))", "exists x.(Sam(x) & -Tumpus(x) & Jompus(x) & Zumpus(x))", "all x.(Sam(x) -> (-Tumpus(x) | Jompus(x) | Zumpus(x)))", "(all x.(Sam(x) -> -Tumpus(x)) & (Jimpus(x) & Zumpus(x)))"]}
{"id": "prontoqa_train_65", "nl": "Sam is not a vumpus.", "fol": "-vumpus(Sam)", "prediction": ["all x.(Sam(x) -> -Vumpus(x))", "all x.(Sam(x) -> -Umpus(x))", "(-Vumpus(Sam))", "Sam is not a Vampus(sam)", "all x.(Sam(x) -> -Vumpus(x))", "Sam -Vumpus(sam)", "(-Vumpus(sam) & -Vumpus(sam))", "all x.(Sam(x) -> -Vumpus(x))", "(-Vumpus(Sam))", "(-Vumpus(Sam))", "(-Vimpus(sam) -> IsVumpus(sam))", "(-Vumpus(Sam))", "all x.(Sam(x) -> NoneVumpus(x))", "(-Vimpus(Sam))", "exists x.(Sam(x) & -Vumpus(x))", "all x.(Sam(x) -> -Vimpus(x))"]}
{"id": "prontoqa_train_66", "nl": "Grimpuses are zumpuses.", "fol": "all x. (grimpus(x) -> zumpus(x))", "prediction": ["all x.(Grimpus(x) -> Zumpuse(x))", "all x.(Grimpus(x) -> Zumpus(x))", "all x.(Grimpus(x) -> Zumpus(x))", "all x.(Grimpus(x) -> Zumpuse(x))", "all x.(Grimpus(x) -> Zumpus(x))", "all x.(Grimpus(x) -> Zumpus(x))", "all x.(Grimpus(x) -> Zumpus(x))", "all x.(Grimpuse(x) -> Zumpuse(x))", "all x.(Gruppuse(x) -> Zumpus(x))", "all x.(Grampus(x) -> Zumpuse(x))", "all x.(Grimpus(x) -> Zumpus(x))", "all x.(Grimpus(x) -> Zumpus(x))", "all x.(Gripper(x) -> Zumpus(x))", "all x.(Grampuse(x) -> Zumpuse(x))", "all x.(Grimpuse(x) -> Zumpuse(x))", "all x.(Grimpuse(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_67", "nl": "Polly is a yumpus and Polly is not a zumpus and Polly is a numpus.", "fol": "(yumpus(Polly) & -zumpus(Polly) & numpus(Polly))", "prediction": ["(all x y.((Dirty(x) & Polly(y)) -> Yumpus(y)) & ((Dirty(y) & -Zumpus(y))) -> Numpus(y)))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Tomba(x))) & (Polly(x) -> Numpus(x)))", "all x.((Polly(x) & Yumpus(x)) -> (-Zumpus(x) & Numpus(x)))", "(all x y.(Bishop(x) -> Yumpsum(x)) & (Bishop(y) -> -Zumpus(y)) & (Bishop(y) -> Numpus(y))))", "(all x.(Polly(x) -> Yumpo (yumpus)) & (Polly(x) -> -Zumpus(x))) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Yompus(y) & Pluto(z)) -> (Yumpus(x) & -Zumpus(y) & Pluto(z)))", "(all x.(Polly(x) -> Yumpus(x)) & (Polly(x) -> -Zumpus(x)) &/Polly(x) -> Numpus(x)))", "(all x y.((Polly(x) & Yumpus(x)) -> (Yumpus(x) & -Zumpus(y))) & ((Poly(x) & Numpus(x)) -> Numpus(x)))", "(all x.(Polily(x) -> Yumposus(x)) & (Polly(x) -> -Tommosus(x)) & (Polly(x) -> Numpus(x)))", "(all x.(Polly(x) -> (Yumpus(x) | -Zumpus(x))) & (Poly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Pluto(y) & Tohm(z)) -> (Yumpus(x) & -Tohmpus(y) & Numpus(z)))", "(Yumpus(Polly) | NichtZumpus(Polly) | Numbus(Poly)))", "(all x y.((Potter(x) & Yumpus(x)) -> Nompus(y)) & all z w.((Potter(z) & Zumpus(w)) -> -Tompus(z)))", "(all x y.((Polly(x) & Yuman)) -> (Yumpus(x) & -Zumpus(y))) & ((Polly(x) & Numpus(y)) -> Numpus(y)))", "(all x.(Plby(x) -> Yampus(x)) & all y.(Plby(y) -> -Zumpus(y)) & all z.(Plby(z) -> Numpus(z))))", "(all x y.((Pollina(x) & Yumpus(x)) -> (Moisture(y) | -Tomma(y)) | Nompus(y)))"]}
{"id": "prontoqa_train_68", "nl": "Polly is not a grimpus.", "fol": "-grimpus(Polly)", "prediction": ["all x.(Polly(x) -> -Grimpus(x))", "(-Grimpus(Polly))", "all x.(Plolly(x) -> -Grimpus(x))", "All x.(Polly(x) -> -Grimpus(x))", "(-Grimpus(Polly))", "(-Grimpus(Polly))", "Polly is not Grimpus.", "Polly & -Grimpus(Polly)", "(Polly(Polly) & -Grimmpus(Poly))", "(Frosted(Polly) & -Grimpus(Polly))", "exists x.(Poly(x) & -Grimpus(x))", "(-Grimpus(Polly))", "(-Grimpus(Polly))", "Polly is notGrimpus(Polly)", "-Grimpus(Polly)", "(-Smoothpus(Polly))"]}
{"id": "prontoqa_train_69", "nl": "Each shumpus is a grimpus.", "fol": "all x. (shumpus(x) -> grimpus(x))", "prediction": ["all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "and every shumpus is a Grimpus.", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "exists x.(Shumpus(x) & Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_70", "nl": "Polly is a lorpus and Polly is a gorpus and Polly is not a grimpus.", "fol": "(lorpus(Polly) & gorpus(Polly) & -grimpus(Polly))", "prediction": ["(all x y.((Tomb(x) & Lorpus(y)) -> (Lorpus(x) | Gorpus(y))) & ((Tomb(y) & Grimpus(y)) -> -Mammoth(y)))", "(all x.(Lorph(x) -> Polly)) & all y.(Gorpus(y) -> Polly)) & all z.(Murph(z) -> Polly)))", "all x y.((Lorpus(x) & Gorpus(y) & (NoGrimpus(x) | NoGrimpus(x))) -> Polly(x))", "(all x.(Polly(x) -> Lorpus(x)) & (Polley(x) -> Gorpus(x)) & (Polley(x) -> -Grimpus(x))))", "(all x y z.(Lorpus(x) & Polly(y) & Gorpus(z)) -> (Lorpus(y) | Scarpa(y))))", "(all x.(Lorpus(x) -> Polly)) & all y.(Gorpus(y) -> Polly)) & all z.(Smoothpus(z) -> Polly)))", "(all x y.(Lorpus(x) & Lorpus(y)) & (Gorpus(y) -> Polly)) & (Grimpus(y) -> Polly)))", "all x y z.((Polly(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) & Gorpus(x) & -Grampus(x)))", "(all x y z.(Lorpus(x) -> Polly(x)) & (Gorpus(y) -> Polly(z)) & -Grollus(z)))", "all x y z.((Polly(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) & Gorpus(y) & -Grimppus(z)))", "(all x.(Poly(x) -> Loromus(x)) & (Poly(x) -> Gorpus(x)) & -Grampus(x)))", "(all x y z.((Polly(x) & Lorpus(x)) -> ((Lorph(x) & Gorpus(y))) & ((Polly(z) & Grimpus(z))) -> (-Lorpus(z) & Gorpus(z))))", "(all x.(Lorpus(x) -> Polly)) & (Gorpus(x) -> Polly)) & -Grimpus(x)))", "all x y z.((Polly(x) & Lorpus(x) & Gorpus(y) & Polly(z)) -> (Lorpus(x) & Gorpus(y) & -Grimpus(z)))", "(all x y z.(Lorpus(x) -> Polly(y)) & (Gorpus(z) -> Polly(z)))", "(all x.(Clorpus(x) & Gorpus(x) & -Grimpus(x)))"]}
{"id": "prontoqa_train_71", "nl": "Each impus is a tumpus.", "fol": "all x. (impus(x) -> tumpus(x))", "prediction": ["all x.(Impossible(x) -> Taupus(x))", "all x.(Impossible(x) -> Tumpus(x))", "all x.(Issue(x) -> Tumpus(x))", "all x.(Impossible(x) -> Tumpus(x))", "all x.(Issue(x) -> Tumpus(x))", "all x.(Issue(x) -> Tumpus(x))", "(all x.(Issue(x) -> Tumpus(x)))", "exists x.(Impossible(x) & Tumulus(x))", "all x.(Impossible(x) -> Tumpus(x))", "all x.(Issue(x) -> Tumpus(x))", "all x.(Impossible(x) -> Tumpus(x))", "all x.(Issue(x) -> Tumpus(x))", "all x.(Impossible(x) -> Tumpus(x))", "all x.(Improve(x) -> Tumpus(x))", "all x.(Impedus(x) -> Tumpus(x))", "all x.(Impossible(x) -> Tumulus(x))"]}
{"id": "prontoqa_train_72", "nl": "Rex is a numpus and Rex is not a tumpus and Rex is a gorpus.", "fol": "(numpus(Rex) & -tumpus(Rex) & gorpus(Rex))", "prediction": ["(all x.(Rex(x) | Nompus(x)) & -Tumpus(x)) & all y.(Gorpus(y))) -> Numpus(x))", "(all x.(Rex(x) -> Numpus(x)) & (-Tumpus(x) & -Gorpus(x)))", "(All x.(Rex(x) -> Numpus(x)) & (-Tumpus(x) & Gorpus(x)))", "(all x.(Rex(x) -> Numpus(x)) & (-Tumpus(x) & -Gorpus(x)))", "(all x.(Rx and Numpus(x)) & (-Tumpus(x) & Gorpus(x))) -> Numpus(x))", "all x y z.((Rex(x) & Numpus(x) & Rex(y) & Tumpus(z)) -> (-Tumpus(y) & Gorpus(z)))", "(all x.(Rex(x) -> Numpus(x)) & (Rex(x) -> -Tumpus(x)) & (Rex(x) -> Gorpus(x)))", "(all x.(Rex(x) -> Nompus(x)) & (-Tumpus(x) & -Gorpus(x))))", "all x y.((Mouse(x) & Numpus(x) & Tumpus(y)) -> (-Tumpus(y) & Gorpus(x)))", "all x y z.((Rex(x) & Numpus(x) & Tumpus(y) & Gorpus(z)) -> (Amphibian(x) & Amphibian(y) & Amphibian(z)))", "all x y z.((Rex(x) & Numpus(x) & Numpus(y) & Cucumber(z)) -> (-Tumpus(x) & Gorpus(x)))", "all x y z.((Rex(x) & Numpus(x) & Humpus(y) & Gorpus(z)) -> (Numpus(x) & -Tumpus(y) & Gorpus(z)))", "(all x.(Rx(x) -> Numpus(x)) & (-Tumpus(x) & -Gorpus(x)))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Rex(y) -> -Tumpus(y))) & all z.(Rex(z) -> Gorpus(z)))", "(all x.(Rex -> Numpus(x)) & (Rex -> -Tumpus(x)) & (Rex -> Gorpus(x)))", "(all x.(Numpus(x) -> Rex)) & (-Tumpus(x) -> Rex)) & (Gorpus(x) -> Rex)))"]}
{"id": "prontoqa_train_73", "nl": "Rex is not an impus.", "fol": "-impus(Rex)", "prediction": ["(-IllegalRx)", "is notimplicite(Rex)", "all x.(Rex(x) -> -Impossible(x))", "Rex -IsImpossible(Rex)", "Rex is not impus.", "-Impossible(Rex)", "all x.(Rex(x) -> -Impossible(x))", "Rex -Impossible(rex))", "-Improvised(Rex)", "all x.(Rex(x) -> -Illegal(x))", "-IllegalRex(x)", "Rex is not impuscable.", "(Undercut(Rex) | AttributesTo(Rex) | AttributableTo(Rex)))", "Rex(x) & -Impossible(x))", "(-IsExert(rex))", "ist keinIlpresario(Rex)"]}
{"id": "prontoqa_train_74", "nl": "Lorpuses are zumpuses.", "fol": "all x. (lorpus(x) -> zumpus(x))", "prediction": ["all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpuse(x) -> Zumpuse(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpuse(x) -> Zumpuse(x))", "all x.(Lorpus(x) -> Daphne(x))", "all x y.((Lorpus(x) & Zurpus(y)) -> Has(x,y))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorph(x) -> Zumpuse(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpuse(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpuse(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpuse(x))", "all x.(Lorpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_75", "nl": "Sam is a lempus, Sam is not a zumpus, and Sam is a yumpus.", "fol": "(lempus(Sam) & -zumpus(Sam) & yumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpsum(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpsum(x)))", "(all x.(Sam(x) -> Lempus(x)) & (-Sam(x) -> Zumpus(x)) & (-Sam(x,yumpus)))", "all x.((Sam(x) & Lempus(x)) -> -Zumpus(x)) & (Yumpus(x) -> -Lempus(x)))", "all x y z.((Sam(x) & Lempus(x) & Zumpus(y) & Yumpus(z)) -> (-Sam(x) & Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (-Sam(x) -> Zumpus(x)) & (-Sam(x) -> Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Sam(y) -> NoZumpus(y)) & all z.(Sam(z) -> Yumpus(z))))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Sam(y) -> -Zumpus(y))) & all z.(Sam(z) -> Yampus(z)))", "all x y.((Sam(x) & Lempus(x)) -> -Zumpus(x) & Yampus(y))", "all x y z.((Sam(x) & Lempus(x) & Sam(y) & Zumpus(z)) -> (-Sam(x,z) & yumpus(y)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Sam(y) -> -Zumpus(y))) & all z.(Sam(z) -> Yumpus(z)))", "all x y z.((Sam(x) & Lempus(x) & Sam(y) & Zumpus(z)) -> (Sam(x) | Yampus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpum(x)))", "exists x.(Sam(x) & Lempus(x) & -Zumpus(x) & Yumpus(x))"]}
{"id": "prontoqa_train_76", "nl": "Sam is not a lorpus.", "fol": "-lorpus(Sam)", "prediction": ["(-Lorpus(Sam))", "Sam is not a lorpus.", "(-lorpus(Mam)", "-Lorpus(Sam)", "all x.(Sam(x) -> -Lorpus(x))", "all x.(Sam(x) -> -Lorpus(x))", "all x.(Sam(x) -> -Lorpus(x))", "all x.(Sam(x) -> -Lorpus(x))", "-Lorpus(Sam)", "(-Lorpus(Sam))", "(-Lorpus(Sam))", "all x.(Sam(x) -> -Lorpus(x))", "all x.(Sam(x) -> -Lorpus(x))", "all x.(Sam(x) -> -Lorpus(x))", "(-Lorpus(Sam))", "all x.(Sam(x) -> -Lorpus(x))"]}
{"id": "prontoqa_train_77", "nl": "Every impus is a grimpus.", "fol": "all x. (impus(x) -> grimpus(x))", "prediction": ["all x.(Issue(x) -> Scarpa(x))", "all x.(Impact(x) -> Gruppa(x))", "all x.(IsDefiant(x) -> Grimpus(x))", "all x.(Impediment(x) -> Grimpus(x))", "all x.(Is(x) -> Grimpus(x))", "all x.(Improvement(x) -> Grimpus(x))", "all x.(Implementations(x) -> Grimpus(x))", "all x.(Issue(x) -> Grumpus(x))", "all x.(IsLimit(x) -> Grimpus(x))", "all x.(Issue(x) -> Grimpus(x))", "all x.(Officinal(x) -> Grimpus(x))", "all x.(Implementation(x) -> Gruppa(x))", "all x.(Impossible(x) -> Gracepus(x))", "all x.(Izpos(x) -> Grimpus(x))", "all x.(Issue(x) -> Grimpus(x))", "all x.(Issue(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_78", "nl": "Polly is a gorpus and Polly is not a grimpus and Polly is a lorpus.", "fol": "(gorpus(Polly) & -grimpus(Polly) & lorpus(Polly))", "prediction": ["all x y z.((Polly(x) & Grappus(y) & Thrombus(w)) -> (Gorpus(x) & -Grimpus(y) & Lorpus(z)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Smokey(x)) & (Polly(x) -> Lorpus(x)))", "all x y z.((Dore(x) & Polly(y) & Gorpu(z)) -> (Gorpus(x) & -Grimpus(y) & Lorpus(y)))", "(all x.(Gorpus(x) -> Polly(x)) & all y.(Grimpus(y) -> Polly(y))) & all z.(Lorpus(z) -> Polly(z)))", "all x y z.((Polly(x) & Gorpus(x) & Polly(y) & Gruppus(z)) -> (-Purple(y) & Lemur(z)))", "(all x.(Polly(x) -> Gorpus(x)) & (NoGrampus(x) & -Lorpus(x))))", "all x y.((Gorpus(x) & Polly(y)) -> (Gorpus(y) & -Grimpus(y)))", "(all x y z.((Polly(x) & Gorpus(y) & Polly(z)) -> Gorpus(x)) & ((Poly(z) & -Grimpus(z)) | ((Polly(z) & Lorpus(z))))))", "all x y z.((Polly(x) & Gorpus(x) & -Grimpus(y) & Lorpus(z)) -> (Gorpus(x) | Llorpus(y))))", "(all x.(Polly(x) -> Gorpus(x)) & (Mulkpus(y) -> -Grimpus(y))) & (Lorpus(z) -> Lorpus(z)))", "all x y z.((Gorpus(x) & Wormpus(y) & Loper(z)) -> (Gorpus(x) & -Grimpus(y) & Lorpus(z)))", "(all x.(Gorpus(x) -> Polly(x)) & (Murris(x) -> Polly(x)) & (Lorpus(x) -> Polly(x))))", "all x y z.(((Polly(x) & Gorpus(x) & Grimpus(y) & Lorpus(z)) -> (Gorpus(x) & -Grimpus(y) & Loper (z))))", "all x y.((Polly(x) & Gorpus(x)) -> (-Grimpus(y) & Lorpus(z))))", "(all x y z.(Polly(x) -> Gorpus(x)) & ((Polly(z) & -Grampus(z))) | (Polly(z) & Lorpus(z)))))", "(all x y.(Popcorn(x) & Porcupine(y)) -> (Gorpus(x) & -Grimpus(y))) & all z w.(Crompier(z) -> Lorpus(w)))"]}
{"id": "prontoqa_train_79", "nl": "Every vumpus is a dumpus.", "fol": "all x. (vumpus(x) -> dumpus(x))", "prediction": ["all x.(Vumpus(x) -> Dumpus(x))", "exists x.(Vumpus(x) & Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_80", "nl": "Polly is a rompus, Polly is a brimpus, and Polly is not a dumpus.", "fol": "(rompus(Polly) & brimpus(Polly) & -dumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Rompus(x)) & (Polly(x) -> Brimpus(x)) & -Dumpus(x)))", "(all x y z.((Polly(x) & Rompus(y)) | ((Poly(z) & Brimpus(z))) | ((Poly(x) & Dumpus(x)))))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> -Dumpus(z))))", "(all x.(Poppy(x) -> Rompus(x)) & all y.(Brimpus(y) -> Brimpus(y)) & all z.(Dumpus(z) -> -Rompus(z)))", "all x y z.((Polly(x) & Rompus(y) & Brimpus(z) & -Dumpus(x)) -> (AnotherRompus(x) & AnotherBrimpus(x) & AnotherPersonal(x)))", "all x y z.((Poly(x) & Rimpus(x)) -> (Rompus(x) & Brimpus(y) & -Dumpus(z)))", "(all x y z.((Plank(x) & Ropus(x)) & ((Plank(y) & Brimpus(y)) | ((Plank(z) & Dumpus(z)))))", "(all x.(Polly(x) -> Rompus(x)) & (Poly(x) -> Brimpus(x)) & (Poly(x) -> -Dumpus(x)))", "(all x y z.((Silver(x) & Rompus(y) & Brimpus(z)) -> PollyDempus(x)) & ((Silver(x) & Dumpus(y)) -> PollyDempus(z)))", "(all x.((Polly(x) & Rompus(x)) -> Brimpus(x)) & (Polly(x) -> -Dumpus(x)))", "all x y z.((Ploy(x) & Brimpus(y) & -Dumpus(z)) -> (Rompus(x) & Brimpus(y) & -Dumpus(z)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Polly(y) -> Brimpus(y))) & all z.(Polly(z) -> -Dumpus(z)))", "all x y z.((Polly(x) & Rompus(x) & Brimpus(y) & (Dumpus(z) | Polly(x))) -> ((Rompus(x) | Brimpus(y)) | NoDumpus(z))))", "all x y z.((Mammal(x) & Polly(y) & Tom(z)) -> (Rompus(y) & Brimpus(y) & -Dumpus(z)))", "(all x y z.((Polly(x) & Rompus(y) & Brimpus(z)) -> Polly(x)) & ((Polly(x) & Dubus(x)) -> -Dupus(x)))", "(all x y z.(Sortem(x) -> Rampus(x)) & (Sortem(y) -> Brimpus(y)) & (Surnomus(z) -> -Dumpus(z))))"]}
{"id": "prontoqa_train_81", "nl": "Polly is not a vumpus.", "fol": "-vumpus(Polly)", "prediction": ["-Vumpus(Ploy)", "All x.(Polly(x) -> -Vampus(x))", "all x.(Polly(x) -> -Vumpus(x))", "(NOVimpus(Polly))", "Polly is notVumpus(Polly)", "(-Vumpus(Polly))", "(Sorry, Polly!)", "(Lolly(poly) & -Vumpus(poly))", "all x.(Polly(x) -> -Vumpus(x))", "(-Vumpus(Polly))", "Polly -Vimpus(Polly)", "(-Vumpus(Polly))", "(-Vimpus(Polly))", "-Vimpus(Polly)", "(NoVimpus(Polly)", "(Vumpus(Polly))"]}
{"id": "prontoqa_train_82", "nl": "Every rompus is a yumpus.", "fol": "all x. (rompus(x) -> yumpus(x))", "prediction": ["all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(Rampus(x) -> Yumpus(x))", "all x.(Rumpus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yampus(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yumps(x))", "all x.(Rombus(x) -> Yampus(x))", "all x.(Rompus(x) -> Yumulus(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yampus(x))", "all x.(Rumpus(x) -> Yumpus(x))", "all x.(rompus(x) -> Yumpa(x))", "all x.(Romesue(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yumpus(x))"]}
{"id": "prontoqa_train_83", "nl": "Stella is not a yumpus, Stella is a shumpus, and Stella is a vumpus.", "fol": "(-yumpus(Stella) & shumpus(Stella) & vumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Yumpus(x)) & all y.(Shumpus(y) & (Vumpus(y) | Vulpu(y))))", "(all x.(Stella(x) -> (-Yumpus(x))) & all y.(Stella(y) -> (Shumpus(y)))) & all z.(Vumpus(z) -> (Vumpus(z)))))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Shumpus(y)) & all z.(Stella(z) -> Vumpus(z))))", "all x y z.((Stella(x) & Yumbo(y) & Shumpus(z)) -> (-Yumpus(x) & -Vumpus(x)))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Humpus(x)) & (Vumpus(x))))", "(all x y z.((Stella(x) & Yumpus(y)) -> -(Yumpus(y) | Humpus(y))) & ((Stella(z) & Vimpus(z))))", "all x y z.((Quiet(x) & Stella(y) & Yumpy(z)) -> (-Yumpus(y) | (Shumpus(y) & Noiks(z))))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Humpus(x)) & (Stella(x) -> Vampil(x)))", "all x y.((Stella(x) & -Yumpus(x) & Scimpus(y)) -> (NumbersVimpus(x) & NoYumpus(x) & NoShumpus(y) & NoVimpus(y)))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Shumpus(x)) & (Vumpus(x) -> Pumpous(x)))", "(all x.(StellaNutcracker(x) -> -Yumpus(x)) & (StellaNutcracker(x) -> Humpus(x)) & (StellaNutcracker(x) -> Vuzeps(x)))", "all x.((Stella(x) & -Yumpus(x)) -> (Shumpus(x) & Vumpus(x)))", "all x.(Stella(x) -> (-Yumpus(x) & -Shumpus(x) & -Vumpus(x)))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Shumpus(y)) & all z.(Stella(z) -> Vumpus(z))))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Humpus(x)) & (Stella(x) -> Vulmpus(x)))", "(yah(Stella) & -Yumpus(y)) & (Stella(z) | Sumpful(z))) & (Vumpus(z)))"]}
{"id": "prontoqa_train_84", "nl": "Stella is not a rompus.", "fol": "-rompus(Stella)", "prediction": ["Stella -Rompus(Stella)", "Stella ist keine Rompus.", "Stella -Rompus(Stella))", "Stella is not a rompus.", "Stella -Rompus(Stella))", "Stella is not a rompus.", "(IsRomes(Stella) & -Romes(Stella))", "Stella is not a rompus.", "Stella is not a Rompus.", "Stella -Rompus(Stella))", "Stella is not a rompus.", "(-Rompus(Stella))", "Stella is NoRrompus(s)", "Stella -Rophus(Stella))", "-Rompus(Stella)", "Stella is not a rompus."]}
{"id": "prontoqa_train_85", "nl": "Each wumpus is a brimpus.", "fol": "all x. (wumpus(x) -> brimpus(x))", "prediction": ["all x.(Wumpus(x) -> Britanus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.((Wumpus(x) & Brimpus(x)) -> Unique(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_86", "nl": "Max is a yumpus, Max is not a brimpus, and Max is a lorpus.", "fol": "(yumpus(Max) & -brimpus(Max) & lorpus(Max))", "prediction": ["all x y z.((Max(x) & Yumpus(y) & -Brimpus(z)) -> (Yumpus(x) | Loper(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> -Brimpus(y)) & all z.(Max(z) -> Lorpus(z))))", "(all x.(Max(x) -> Yumps(x)) & (Max(x) -> -Brumpus(x)) & (Max(x) -> Lopa(x)))", "(all x y z.(Max(x) -> Yumpus(x)) & ((Max(y) & -Brimpus(y))) | (-Max(y) & -Brumpus(y)) & ((Max(z) & -Brimpus(z))) -> Lorpus(z)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & ((Max(x) -> -Brimpus(x))) & (Max(x) -> Lorpus(x))))", "(all x.(Max(x) -> Yupsum(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x))))", "(all x.(Max(x) -> Yampus(x)) & (NonBrimpus(x) & -Lorpus(x)))", "(all x.(Max(x) -> Yumps(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))", "all x.((Max(x) & Yupsu(x)) & -Brigid(x) & -Lorpus(x)) -> Yupsu and -Lorpus(x))", "all x y z.((Max(x) & Yampus(y) & Brimpus(z)) -> (Yumpus(x) & Durpus(z)))", "(exists x.(MaxIsYoumpus(x) & -IsBrimpus(x)) & exists y.(MaxIsLorpus(y)))", "(all x y z.((Max(x) & Yumpus(y)) -> (Yumpus(z) & -Brimpus(z))) & ((Max(x) & Lorpus(x)) -> (Lorpus(x) & -Yumpus(y))))", "(all x y z.((Max(x) & Yumpsum(x)) -> NotBrimpus(x)) & ((Max(y) & Lordus(z))) -> Yumpus(y) & -Brimpus(z)))", "all x.(Max(x) -> (Yumpus(x) & -Brimpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_train_87", "nl": "Max is not a wumpus.", "fol": "-wumpus(Max)", "prediction": ["all x.(Max(x) -> -Wumpus(x))", "-Wumpus(Max)", "(-Wumpus(Max))", "-Wumpus(Max)", "IsThereWumpus(x)?", "(NOTWumpus(Max))", "-Wumpus(Max)", "(-Wumpus(Matthew))", "-Wumpus(Max)", "-Wumpus(Max)", "-Wumpus(Max)", "(-Wumpus(Max))", "(-Wumpus(Max))", "all x.(Max(x) -> -Wumpus(x))", "no longer.Wumpus(Max)", "all x.(Matt(x) -> -Wumpus(x))"]}
{"id": "prontoqa_train_88", "nl": "Zumpuses are impuses.", "fol": "all x. (zumpus(x) -> impus(x))", "prediction": ["all x.(Umpus(x) -> Izpiot(x))", "all x.(Zombie(x) -> Issue(x))", "all x.(Zumpus(x) -> Ispose(x))", "all x.(Zumpuse(x) -> Impirate(x))", "all x.(Zumpus(x) -> Issue(x))", "all x.(Dasp(x) -> Implicated(x))", "all x.(Zumpuse(x) -> Impectase(x))", "all x.(Zumpus(x) -> Issue(x))", "all x.(Zumpuse(x) -> Issue(x))", "all x.(Zumpuse(x) -> Imperator(x))", "all x.(Zombie(x) -> Issue(x))", "all x.(Zumpuse(x) -> Isolator(x))", "all x.(Zupe(x) -> Issue(x))", "all x.(Zumpus(x) -> Ispose(x))", "all x.(Zombie(x) -> Implefies(x))", "all x.(Zombie(x) -> Impenet(x))"]}
{"id": "prontoqa_train_89", "nl": "Alex is a tumpus and Alex is not an impus and Alex is a rompus.", "fol": "(tumpus(Alex) & -impus(Alex) & rompus(Alex))", "prediction": ["(all x.(Alex(x) -> Humpty(x)) & (Alex(x) -> -Impossible(x)) & (Alex(x) -> Rompus(x)))", "all x y.((Alex(x) & Tumpus(x)) -> (NecessaryPromo(x) & Osipic(y)))", "all x y z.((Alex(x) & Tomose(y) & Iron(z)) -> (Tumpus(x) & -Impozitid) & Rompus(x)))", "all x.(Alex(x) -> (Tumpus(x) & -Issue (x) & Rompus(x)))", "(all x y.((Alex(x) & Tumpus(x)) -> Tumpus(x)) & ((Alex(y) & -Issue)) -> Rompus(y)))", "(all x y.((Alex(x) & Tumpus(x)) -> Tumblr(x)) & ((Alex(y) & -Issue(y))) -> Rompus(y)))", "(all x.(AlexAlex(x) -> Tumpus(x)) & all y.(AlexAlex(y) -> -Impossible(y))) & all z.(AlexAlex(z) -> Rompus(z)))", "all x.(Tumpus(x) & -Improviser(x) & Rompus(x))", "all x y.((Alex(x) & Tompus(x) & -Iscrimate(y)) -> Rompus(x))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> -Immersion(x))) & (Alex(x) -> Rompus(x)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> -Issue(x)) & (Alex(x) -> Rompus(x)))", "(all x y.(Alex(x) -> Tumpus(x)) & (Alex(y) -> -Issue(y))) & (Alex(y) -> Rompus(y)))", "all x y.((Alex(x) & Tumpus(x)) -> (-Is(x,Is(x))))", "(all x.(Alex(x) -> (Tumpus(x) & -Impossible(x))))", "all x.(Alex(x) -> (Tumpus(x) & -Issue(x) & Rompus(x)))", "all x.(Alex(x) -> (Tumpus(x) & -Impossible(x) & Roma(x)))"]}
{"id": "prontoqa_train_90", "nl": "Alex is not a zumpus.", "fol": "-zumpus(Alex)", "prediction": ["all x.(Alex(x) -> -Zumpus(x))", "Alex is not zumpus.", "Alex is not a zumpus.", "all x.(Alex(x) -> -Tompus(x))", "n.(Alex(Alex) & NotZupus(Alex))", "all x.(Alex(x) -> -Zumpus(x))", "Alex -Zumpus(Alex)", "all x.(Alex(x) -> -Azurpus(x))", "Alex is not zumpus.", "all x.(Alex(x) & -Zumpus(x))", "(-Zumpus(Alex))", "(-Zumpus(Alex))", "Alex -Zumpus(Alex)", "All x.(Alex(x) -> -Zumpus(x))", "all x.(Alex(x) -> -Zumpus(x))", "all x.(Alex(x) -> -Zumpus(x))"]}
{"id": "prontoqa_train_91", "nl": "Tumpuses are wumpuses.", "fol": "all x. (tumpus(x) -> wumpus(x))", "prediction": ["all x.(Tumpus(x) -> Oven(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wampus(x))", "all x.(Tumpus(x) -> Wampus(x))", "all x.(Tumpus(x) -> Wompuse(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wampus(x))", "all x.(Tumpus(x) -> Wompus(x))", "all x.(Tumpus(x) -> Tumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wampus(x))", "all x.(Tumpus(x) -> Hush(x))", "all x.(Tumpuse(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_92", "nl": "Rex is a zumpus, Rex is a gorpus, and Rex is not a wumpus.", "fol": "(zumpus(Rex) & gorpus(Rex) & -wumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Gorpus(x)) & (Rex(x) -> -Wumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & all z.(Rex(z) -> -Wumpus(z))))", "(all x y z.((Rex) & Zumpus(x)) -> RexIs(x,y)) & ((Rex) & Gorpus(y)) -> -Wumpus(z))))", "all x y z.((Rex(x) & Zumpus(y) & Gorpus(z)) -> (Between(x,y) & -Wumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & all z.(Rex(z) -> -Wumpus(z))))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & all z.(Rex(z) -> -Wumpus(z))))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & -Wumpus(y)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Gorpus(x)) & -Wumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Gorpus(x)) & (Rex(x) -> -Wumpus(x)))", "all x y z.((Tompus(x) & Gorpus(y) & Wumpus(z)) -> (Tompus(x) & Gorpus(y) & -Wumpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & -Wumpus(y)))", "all x y z.((Rex(x) & Zurpus(x) | Gorpus(x) | -Wumpus(y)) -> Zumpus(x))", "all x y z.((Rax(x) & Zumpus(x) & Gorpus(y) & Rex(z)) -> ((Malus(x) | Melos(x)) & -Wumpus(z))))", "(all x y z.((Rex(x) & Zurpus(y)) -> InDesign(x,y)) & ((Rex(z) & Worpus(z)) -> InDesign(x,z))) & ((Rex(x) & Worpus(x)) -> -Wumpus(x)))", "(all x.(Rose(x) -> Zumpus(x)) & (Rose(x) -> Gorpus(x)) & (Rex(x) -> -Wumpus(x)))", "(all x y z.((Rex(x) & Zumpus(x)) -> Toad(x)) & ((Rex(y) & Gorpus(y)) -> -Wumpus(z)))"]}
{"id": "prontoqa_train_93", "nl": "Rex is not a tumpus.", "fol": "-tumpus(Rex)", "prediction": ["Rex is notTumpus(x)", "Rex is -Tumpus.", "Rex -Tumpus(x)", "Rex is nottumpus(x)", "all x.(Rex(x) -> -Tumpus(x))", "Rex.(Tumpus(Rex))", "-Tumpus(Rex)", "Rex is -Tumpus(x)", "Rex is notTumpus(x) -> -Tumpus(x))", "(-Tumpus(Rex)).", "(-Tumpus(Rex))", "Rex is notTumpus(x)", "(-Tumpus(Rex))", "Die Rex Animated(Rex,Rex)", "Rex is not Tumpus(x)", "Rex is notTumpus(x)"]}
{"id": "prontoqa_train_94", "nl": "Tumpuses are lorpuses.", "fol": "all x. (tumpus(x) -> lorpus(x))", "prediction": ["all x.(Tumpus(x) -> Lompus(x))", "all x.(Tumper(x) -> Lompuse(x))", "all x.(Tumpus(x) -> Lapis(x))", "all x.(Tumpuse(x) -> Lace-Toothe(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tump(x) -> Lion(x))", "all x.(Tumpus(x) -> Lorpuse(x))", "all x.(Tompuse(x) -> Lorpus(x))", "all x.(Tumpuse(x) -> Loesses(x))", "all x.(Tumulus(x) -> Lorpuse(x))", "all x.(Tumpus(x) -> Lhumps(x))", "all x.(Tumulus(x) -> Lombuse(x))", "all x.(Tumpus(x) -> Lordes(x))", "all x.(Tumulus(x) -> Lompuse(x))", "all x.(Tupus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpuse(x))"]}
{"id": "prontoqa_train_95", "nl": "Sam is not a lorpus, Sam is an impus, and Sam is a grimpus.", "fol": "(-lorpus(Sam) & impus(Sam) & grimpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Lorpus(x)) & (Sam(x) -> Object(x)) & (Sam(x) -> Ambieta(x)) & (Sam(x) -> Grimpus(x))))", "(all x.(Sam) -> -Lorpus(x)) & all y.(Sam(y) -> Issue(y)) & all z.(Sam(z) -> Grimpus(z))))", "(all x.(Sam(x) -> -Lorpus(x)) & (Sam(x) -> Ispose(x)) & (Sam(x) -> Grimpus(x)))", "all x y z.((Sam(x) & Lurpus(y) & Invisible(z)) -> (-Lorpus(x) & Invisible(y) & Invisible(z) & Invisible(x) & Invisible(z) & Invisible(z) & Invisible(z)))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Impermissible(y))) & all z.(Sam(z) -> Gruppus(z)))", "(all x y.((Sam(x) & Lorpus(x)) -> -Lorpus(y)) & ((Sam(x) & Imperium(x)) -> Grimpus(x)))", "all x y z.((Lorpus(x) & Impossible(y) & Grimpus(z)) -> (-Llorpus(x) & Impossible(y) & Grimpus(z)))", "(all x y z.(Ladorus(x) -> -Lorpus(x)) & (Immersion(y) -> -Lorpus(y))) & (Fragus(z) -> Sturpus(z)))", "All x y z.((Sam(x) & Lorpus(y) & Impossible(z)) -> (-Lorpus(x) & Grimpus(x)))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Ispose(y))) & all z.(Sam(z) -> Grimpus(z)))", "all x y z.((Sam(x) & Lorpus(y) & Imperator(z)) -> (-Lorpus(x) & Impossible(x) & Grimpus(x)))", "all x.(Sam(x) -> (-Herro(x) & -Illegal(x) & -Smoothpus(x)))", "all x y.((Sam(x) & Lorpus(y)) -> (-Lorph(x) & Imposer(x) & Grappa(x)))", "all x y z.((Sam(x) & Loper(y) & Is(z) & Grimpus(z)) -> (-Lorpus(x) & Is(x,z) & Is(x,z)))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Imperator(y)) & all z.(Sam(z) -> Grimpus(z))))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Impossible(y) -> Scarpy(y)))"]}
{"id": "prontoqa_train_96", "nl": "Every vumpus is a jompus.", "fol": "all x. (vumpus(x) -> jompus(x))", "prediction": ["all x.(Vimpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))"]}
{"id": "prontoqa_train_97", "nl": "Fae is a brimpus and Fae is a numpus and Fae is not a jompus.", "fol": "(brimpus(Fae) & numpus(Fae) & -jompus(Fae))", "prediction": ["(all x y z.(Fae(x) -> Brimpus(x)) & (Fae(y) -> Numpus(y)) & (Fae(z) -> -Jompus(z)))", "(all x.(Fabus(x) -> Brimpus(x)) & all y.(Fabus(y) -> Numpus(y)) & all z.(Fabus(z) -> -Jumpus(z)))", "(all x y z.((Fae(x) & Brimpus(y)) -> (Brimpus(x) & Nempus(y)) & ((Fae(z) & -Jompus(z)) & -Brompus(z))))", "(all x y z.((Fae(x) & Brimpus(x) & Numpus(y)) -> Brimpus(x)) & ((Fae(z) & Numpus(z)) -> Numpus(z)) & ((Fae(z) & -Jompus(z))) -> Bompus(z)))", "all x.(Fae(x) -> (Brimpus(x) & Numpus(x) & -Jompus(x)))", "(exists x.(Brimpus(x) & Brimpus(x))) & exists y.(Nobump(y) & Nobump(y))) & exists z.(Jompus(z) & -Brimpus(z)))", "all x y z.((Fae(x) & Brimpus(x) & Fae(y) & Numpus(y)) -> (Brimpus(x) & Poppus(y) & -Jumpus(z)))", "all x y z.((Fae(x) & Brimpus(x) & Numpus(y) & Jompus(z)) -> ((Cirrus(x) & Nompus(y) & -Jimpus(z))))", "all x y z.((Fae(x) & Brimpus(x) & Numpus(y) & -Jompus(z)) -> (Brimpus(x) & Numpus(y) & -Nompus(z)))", "(all x.(Fae(x) -> Brimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Jimpus(z))))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Numpus(x)) & -Fae(x)))", "all x.(Fae(x) -> (Brimpus(x) | Numpus(x) | -Jompus(x)))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Numpus(x)) & Fae(x) -> -Jompus(x)))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Numpus(x)) & -Jimpus(x)))", "all x y z.((Famous(x) & Brimpus(y) & Numpus(z) & -Jumpus(z)) -> (Brompus(x) & Numpus(x) & -Jimpus(x)))", "(all x.((Fae(x) & Brimpus(x)) | (Numpus(x) & -Jompus(x))))"]}
{"id": "prontoqa_train_98", "nl": "Fae is not a vumpus.", "fol": "-vumpus(Fae)", "prediction": ["all x.(Fae(x) -> -Vumpus(x))", "all x.(Fae(x) -> -Vumpus(x))", "all x.(Fae(x) -> -Vumpus(x))", "all x.(Fae(x) -> -Vumpus(x))", "all x.(Fae(x) -> -Vumpus(x))", "-Vumpus(Fae)", "((Fae(f) & -Vumpus(f)))", "-(Vumpus(Fae) & -Vumpus(Fae))", "all x.(Fae(x) -> -Vumpus(x))", "-Vumpus(Fae)", "all x.(Fae(x) -> -Vumpus(x))", "(-Vumpus(fae))", "all x.(Fae(x) -> -Vumpus(x))", "all x.(Fae(x) -> -Vimpus(x))", "-Vumpus(fae,y)", "noVumpus(Fae)"]}
{"id": "prontoqa_train_99", "nl": "Lempuses are gorpuses.", "fol": "all x. (lempus(x) -> gorpus(x))", "prediction": ["all x.(Lempuse(x) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lemme(x) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpus(x))", "all x.(Lempus(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpus(x))", "all x.(Lemme(x) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpuse(x))"]}
{"id": "prontoqa_train_100", "nl": "Sally is an impus and Sally is a tumpus and Sally is not a gorpus.", "fol": "(impus(Sally) & tumpus(Sally) & -gorpus(Sally))", "prediction": ["(all x.(Sally(x) -> Impermissable(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x)))", "all x y.((Sally(x) & Sally(y)) -> (Impossible(x) & Tumpus(y) & -Gorpus(y)))", "all x.(Sally(x) -> (Imposible(x) & Tumpus(x) & -Gorpus(x)))", "all x y z.((Sally(x) & Imperium(x) & Tumpus(y) & -Gorpus(z)) -> (Impossible(x) & Tumpus(y) & -Gorpus(z)))", "Sally is a impus(Sally) & Sally is a tumpus(Sally) & -Gorpus(Sally))", "(all x.(Sally(x) -> Is(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x))))", "all x.(Sally(x) -> (Imposer(x) & Tumpus(x) & -Gorpus(x)))", "(all x.(Sally(x) -> Idol(x)) & (Tumpus(x) & -Gorpus(x)))", "(all x.(Sally(x) -> Is(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x)))", "(all x.(Sally(x) -> Is(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x))))", "all x y.((Sally(x) & Sally(y)) -> (Issue(x) & Tumpus(y) & -Gorpus(y)))", "all x.((Sally(x) & IsIsolated(x)) -> (Tumpus(x) & -Gorpus(x)))", "(all x.(Sally(x) -> Imperium(x)) & all y.(Sally(y) -> Tumpus(y)) & -Corpus(y)))", "(all x.(Sally(x) -> Isolator(x)) & (Sally(x) -> Tumpus(x)) & -Gorpus(x)))", "(all x.(Sally(x) -> Impossible(x)) & all y.(Sally(y) -> Tumpus(y))) & all z.(Sally(z) -> -Gorpus(z)))", "(all x.(Sally(x) -> Impossible(x)) & all y.((Sally(y) & Tumpus(y)) -> NotGorpus(y)))"]}
{"id": "prontoqa_train_101", "nl": "Sally is not a lempus.", "fol": "-lempus(Sally)", "prediction": ["all x.(Sally(x) -> -Lempus(x))", "Sally n'est pas lempus.", "(-Lempus(Sally))", "Sally s notLempus(S.O.S.(Sally))", "Sally is not a lempus.", "Sally is not a lempus.", "Sally is not a Lempus.", "exists x.(Sally(x) & -Limpus(x))", "-Lempus(Sally)", "Sally is not a lempus.", "Sally n'est pas lempus.", "Sally nelmpus(Sally)", "Sally is not a lempus.", "(-lempus(Sally))", "Sally nt(Sally,Limpus)", "all x.(Sally(x) -> -Lempus(x))"]}
{"id": "prontoqa_train_102", "nl": "Wumpuses are grimpuses.", "fol": "all x. (wumpus(x) -> grimpus(x))", "prediction": ["all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpuse(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "(Grabpuse(wumpus) & GrowsIn(wumpus))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grumpus(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Ulumus(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wampuse(x) -> Grimpuse(x))"]}
{"id": "prontoqa_train_103", "nl": "Rex is a jompus, Rex is a vumpus, and Rex is not a grimpus.", "fol": "(jompus(Rex) & vumpus(Rex) & -grimpus(Rex))", "prediction": ["(all x y z.(Gotta(x) -> Jompus(x)) | (Vamppus(y) & -Grimpus(z))))", "(all x y z.((Jompus(x) & NoCroak(y) & Rex(z)) -> Jompus(x)) & ((Vimpus(z) & NoCroak(y)) -> NoCrompus(z)))", "exists x.(Rex(x) & Jompus(x) & Vumpus(x) & -Grimmpus(x))", "(all x y.(Rex(x) -> Jompus(x)) & (Rex(y) -> Voompus(y)) & -Grampus(y)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Vumpus(y)) & -Gruppus(y)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Vumpus(x)) & (Rex(x) -> -Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Vumpus(x)) & (Rex(x) -> -Grimpus(x)))", "all x y z.((Rex(x) & Jompus(y) & Vulmpus(z)) -> (IsJompus(x) & IsVulmpus(z) & IsNoGrimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & (Vumpus(x) & -Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Vumpus(y)) & all z.(Rex(z) -> -Grimpus(z))))", "all x.(Cruwpus(x) -> (Jompus(x) & Vumpus(x) & -Grimpus(x)))", "(all x y z.(Rex(x) -> Jompus(x)) & (Rex(y) -> Vumpus(y)) & -Grishpus(z)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Vumpus(x)) & -Grimpus(x)))", "(All x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Vumpus(x)) & (Rex(x) -> -Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Vampis(y)) & all z.(Rex(z) -> -Grimpus(z))))", "(all x.(Rex(x) -> Jompus(x)) & (Vumpus(x) & -Grimpus(x)))"]}
{"id": "prontoqa_train_104", "nl": "Rex is not a wumpus.", "fol": "-wumpus(Rex)", "prediction": ["Rex is not a wumpus.", "Leider ist die Rex-Wumpus(Rex) nicht vorhanden.", "exists x.(Rex(x) & -Wumpus(x))", "-Wumpus(Rex)", "(-Wumpus(rex))", "(-Wumpus(Rex))", "Rex is notWumpus(x)", "-Wumpus(Rex)", "Rex -Wumpus(x)", "(-Wumpus(Rex))", "Rex is not a wumpus.", "(-Wumpus(Rex))", "all x.(Rex(x) -> -Wumpus(x))", "(-Wumpus(Rex))", "Der Rex ist kein Wumpus.", "Rex is not wumpus."]}
{"id": "prontoqa_train_105", "nl": "Every vumpus is a zumpus.", "fol": "all x. (vumpus(x) -> zumpus(x))", "prediction": ["all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vampire(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_106", "nl": "Fae is a lempus and Fae is not a zumpus and Fae is a dumpus.", "fol": "(lempus(Fae) & -zumpus(Fae) & dumpus(Fae))", "prediction": ["all x y z.((Fae(x) & Lempus(x) & Fae(y) & Tossus(z)) -> (-Tossus(y) & Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Tompus(x))) & (Fae(x) -> Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> -Zumpus(y)) & all z.(Fae(z) -> Dumpus(z))))", "(all x y.(Fae(x) -> Lempus-(x) | Fae(y)) & -Zumpus(y)) & (Fae(y) -> Dumpus(y)))", "(all x y z.(Lempus(x) & Lempus(y) & Willy(z)) -> (-Thempus(y,z) & Willy(z))))", "all x y.((Fae(x) & Fae(y)) -> (Lempus(x) & -Zumpus(y) & Dumpus(y)))", "exists x.(Fae(x) & Lempus(x) & -Zumpus(x) & Dumpus(x))", "all x.(Fae(x) -> (Lempus(x) & -Zumpus(x) & Dumpus(x)))", "all x.(Fae(x) -> (Lempus(x) & -Zumpus(x) & Dumpus(x)))", "all x y z.((Fae(x) & Lempus(x) & Fae(y) & Zumpus(z)) -> (-Fae(y) & Dumpus(y)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Dumpus(x)))", "(all x.(Elempus(x) & -Touchpus(x)) & all y.(Dempus(y))))", "all x.(Fae(x) -> (Lempus(x) & -Zumpus(x) & Dumpus(x)))", "all x y.((Lempus(x) & Fae(y)) -> (-Zumpus(y) & Dumpus(y)))", "(all x y.(Fae(x) -> Lempus(x)) & (-Fae(y) -> Zumpus(y)) & (-Fae(x) -> Dumpus(y)))", "all x y z.((Fae(x) & Lempus(x) & Fae(y) & Zumpus(z)) -> (-Limpus(x) & Dumpus(y)))"]}
{"id": "prontoqa_train_107", "nl": "Each grimpus is an impus.", "fol": "all x. (grimpus(x) -> impus(x))", "prediction": ["all x.(Grimpus(x) -> Impossible(x))", "all x.(Strictus(x) -> Impossible(x))", "all x.(Grimpus(x) -> Impossible(x))", "all x.(Grip(x) -> Impossible(x))", "alle grimpus(x) -> IsIsolated(x))", "exists x.(Grimpus(x) & Impossible(x))", "all x.(Grimpus(x) -> Ilirkable(x))", "all x.(Grimpus(x) -> Implicator(x))", "all x.(Grimpus(x) -> IsIsolated(x))", "all x.(Grimpus(x) -> Impecia(x))", "all x.(Gripper(x) -> IsImprovement(x))", "all x.(Grimpus(x) -> IsImpossible(x))", "all x.(Grimpus(x) -> Imploser(x))", "exists x.(Grimpus(x) & Impossible(x))", "all x.(Grimpus(x) -> IsImpossible(x))", "all x.(Grimpus(x) -> IsImpossible(x))"]}
{"id": "prontoqa_train_108", "nl": "Stella is not an impus and Stella is a zumpus and Stella is a rompus.", "fol": "(-impus(Stella) & zumpus(Stella) & rompus(Stella))", "prediction": ["all x y z.((Stella(x) & Topsy(y) & Rompus(z)) -> ( -Impossiv(x) & Zumpus(y) & Rompus(z)))", "all x y z.((Stella(x) & Stella(y) & Zumpus(z)) -> (-Impart(x) & Torompus(y)))", "(all x y z.((Stella(x) & Imposse(x)) -> -Understanded(x)) & ((Stella(y) & Zumpus(y)) -> -Drompus(y)))", "(all x.(Stella(x) -> -Impossible(x)) & ((Stella(x) -> Zumpus(x))) & ((Stella(x) -> Rompus(x))))", "((Stella(s) & -Impossible(s)) | (Stella(s) & Zumpus(s)) | (Stella(s) & Rompus(s))))", "(all x y z w.((Zaplos(x) & Stella(y) & Zombie(z) & Toxic(w)) -> -Impertories(y)) & (((Tompus(z) & Tompus(w)) | (Tompus(w) & Tompus(w)))))", "(all x.(Stella(x) -> -Impossible(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Rompus(x)))", "(all x.(Stella(x) -> -Impose(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Rompus(x)))", "all x y z.((Stella(x) & Zumpus(y) & Rompus(z)) -> (-Is(x) & Tolkien(y) & -Rompus(z)))", "(all x.(Stella(x) -> NoneIssue(x)) & (Stella(x) -> Tospit(x)) & (Stella(x) -> Rompus(x)))", "(all x.(Stella(x) -> -Impossible(x)) & all y.(Stella(y) -> Tompus(y)) & all z.(Stella(z) -> Rompus(z))))", "(-IsExpirat(Stella) & Zumpus(Stella)) & Rompus(Stella))", "(all x.(Solva(x) -> (-Impossible(x))) & (Solva(x) -> Zumpus(x)) & (Solva(x) -> Rompus(x)))", "all x.(Stella(x) -> (-Impossible(x) & Zumpus(x) & Rompus(x)))", "all x y z.((Wall(x) & Stella(y) & Tommy(z) & Roma(z)) -> (-IsImpose(y) & Tommy(y) & Tommy(z)))", "(all x y.(Solvia(x) -> -Impossible(x)) & (Solvia(y) -> Tosspoo(y)) & (Solvia(y) -> Rompus(y)))"]}
{"id": "prontoqa_train_109", "nl": "Grimpuses are impuses.", "fol": "all x. (grimpus(x) -> impus(x))", "prediction": ["all x.(Grimpus(x) -> Implicator(x))", "all x.(Grimpus(x) -> Depose(x))", "all x.(Grimpus(x) -> Issues(x))", "All x.(Grimpse(x) -> Issue(x))", "all x.(Grimpus(x) -> Imperator(x))", "all x.(Grimpus(x) -> Impenet(x))", "all x.(Grimpus(x) -> Issue(x))", "all x.(Grimpuse(x) -> Ispose(x))", "all x.(Grimpus(x) -> Impermissible(x))", "all x.(Grimpus(x) -> Issue(x))", "all x.(Grimpus(x) -> Issue(x))", "all x.(Grimpuse(x) -> Impose(x))", "all x.(Grimpes(x) -> Impenete(x))", "all x.(Gruppuse(x) -> Impermane(x))", "all x.(Grimpuse(x) -> Isobaric(x))", "all x.(Grimp(x) -> Isolated(x))"]}
{"id": "prontoqa_train_110", "nl": "Polly is not an impus, Polly is a brimpus, and Polly is a numpus.", "fol": "(-impus(Polly) & brimpus(Polly) & numpus(Polly))", "prediction": ["exists x y z.(Polly(x) & Polly(y) & Brimpus(z) & 0 Y (Double) & Plumpus(z)))", "(all x y z.((Polly(x) & Illegal(y)) -> -(Issue(x,y) | Brimpus(y)) | Numpus(z)))", "(all x.(Poly(x) -> -Impose(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)))", "(all x.(Polly(x) -> -Impos(x)) & (Polly(x) -> -Impossible(x))) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)))", "(all x.(Polly(x) -> -Impose(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Poly(z) -> Numpus(z))))", "exists x y z.(Poly(x) & Polly(y) & (IsNotImpossible(x) | IsBrimpus(y) | IsNumpus(y)))", "all x y z.((Polly(x) & Brimpus(y) & Numpus(z)) -> (-Is(x,i) | -Is(x,i) | -Is(x,z))))", "(all x.(Polly(x) -> -Issue(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Polly(y) & Brimpus(z) & Numpus(z)) -> (-Impossible(x) | Bumpus(y) & Numpus(z)))", "(all x.(Pollly(x) -> -Impossible(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> Numpus(z))))", "all x y z.((Polly(x) & Brimp(y) & Numpus(z)) -> (-Impossible(x) | Brimpus(y) & Numpus(z)))", "(all x.(Polly(x) -> -Impossible(x)) & (Swiss(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)))", "(all x.(Ploddy(x) -> -Impossible(x)) & all y.(Brimpus(y) -> Polly(y))) & all z.(Numpus(z) -> (Ploddy(z) | -Impossible(z)))))", "(all x.(Polly(x) -> -Issue(x)) & (Polry(x) | Polly(x))) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x))))", "(all x.(Polly(x) -> -Imperative(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)))", "all x.((Polly(x) & -Island(x)) -> (Brimpus(x) & Numpus(x)))"]}
{"id": "prontoqa_train_111", "nl": "Every jompus is a zumpus.", "fol": "all x. (jompus(x) -> zumpus(x))", "prediction": ["all x.(Jimpus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zurpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jimpus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jumpus(x) -> Zumpus(x))", "all x.(Jimpus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jimpus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_112", "nl": "Fae is not a zumpus, Fae is a shumpus, and Fae is a numpus.", "fol": "(-zumpus(Fae) & shumpus(Fae) & numpus(Fae))", "prediction": ["all x y z.((Fae(x) & Shumpus(y) & Numpus(z)) -> (-Zumpus(x) & -Shumpus(y) & -Numpus(z)))", "exists x y z.(Fae(x) & Toumpus(y) & Humpus(z) & Has(x,Y) & Humpus(z) & Has(x,z))", "exists x y z.((Fae(x) & Sunflower(y) & Shumpus(z)) -> (-Touchpus(x) & -Shumpus(x) & -Numpus(x)))", "(all x.((Fae(x) & -Zumpus(x)) -> Humpus(x)) & ((Fae(x) & Numpus(x)) -> Numpus(x)))", "(all x.(Fae(x) -> -Zumpus(x)) & (Shumpus(x) & Numpus(x)))", "all x y z.((Fae(x) & Humpus(y) & Numpus(z)) -> (-Zumpus(x) & -Shumpus(y) & -Numpus(z)))", "(all x.(Fae(x) -> -Tommopus(x)) & all y.(Fae(y) -> Sapus(y)) & all z.(Fae(z) -> Numpus(z))))", "(all x.(Fae(x) -> -Tompus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> Numpus(x)))", "all x y z.((Fae(x) & Shumpus(y) & Numpus(z)) -> (-Tompus(x) & Shumpus(y) & Numpus(z)))", "(all x.(Fae(x) -> -Tompus(x)) & all y.(Fae(y) -> Humpus(y))) & all z.(Fae(z) -> Numpus(z)))", "all x y z.((Fae(x) & Zumpus(y) & Humpus(z)) -> (-Tosps(x) & Shumpus(y) & Numpus(z)))", "(all x.(Fae(x) -> -Zumpus(x)) & (Shumpus(x) & Numpus(x)))", "(all x.(Faffe(x) -> -Zumpus(x)) & (Faffe(x) -> Sumpfus(x)) & (Faffe(x) -> Numpus(x)))", "(exists x.(Fae(x) & -Zumpus(x)) & exists y.(Fae(y) & Shumps(y)) & exists z.(Fae(z) & Numpus(z))))", "(all x.(Fae(x) -> -Zumpus(x)) & all y.(Fae(y) -> (Shumpus(y) & Numpus(y))))", "(all x.(Fae(x) -> -Tompus(x)) & (Shumpus(x) & Numpus(x)))"]}
{"id": "prontoqa_train_113", "nl": "Brimpuses are lempuses.", "fol": "all x. (brimpus(x) -> lempus(x))", "prediction": ["all x.(Brimpus(x) -> Lempuse(x))", "all x.(Brimpus(x) -> Lempuse(x))", "all x.(Brimuse(x) -> Lempuse(x))", "all x.(Brampuse(x) -> Lempuse(x))", "all x.(Brompus(x) -> Lempuse(x))", "all x.(Brompus(x) -> Lempus(x))", "all x.(Brombus(x) -> Lempuse(x))", "all x.(Brompus(x) -> Lempuse(x))", "all x.(Brimpuse(x) -> Lempuse(x))", "all x.(Brompus(x) -> Lempuse(x))", "all x.(Brimpuse(x) -> Lempuse(x))", "all x.(Brompus(x) -> Lempuse(x))", "all x.(Brompus(x) -> Lempuse(x))", "all x.(Brimpus(x) -> Lempuse(x))", "all x.(Brimpuse(x) -> Lempuse(x))", "all x.(Brimuse(x) -> Lempuse(x))"]}
{"id": "prontoqa_train_114", "nl": "Wren is a yumpus, Wren is a shumpus, and Wren is not a lempus.", "fol": "(yumpus(Wren) & shumpus(Wren) & -lempus(Wren))", "prediction": ["all x y z.((Wren(x) & Yampus(y) & Shumpus(z) & -Lempus(z)) -> (Yumpus(x) & Shumpus(x) & -Yumpus(y)))", "(all x.(Wren(x) -> Yampus(x)) & (Wren(x) -> Shumppus(x)) & (Wren(x) -> -Lempus(x)))", "(all x.(Wren(x) -> Yumpus(x)) & all y.(Wren(y) -> Simpus(y)) & all z.(Wren(z) -> -Lempus(z))))", "(all x.(Wren(x) -> Yumpus(x)) & all y.(Wren(y) -> Humpus(y)) & all z.(Wren(z) -> -Lempus(z))))", "(all x.(Wren(x) -> Yumpus(x)) & all y.(Wren(y) -> Humpus(y))) & all z.(Wren(z) -> -Lempus(z))))", "all x y z.((Wren(x) & Yumpt(y) & Wren(z)) -> (Yumpus(x) | Humpus(z) | -Lempus(z)))", "(all x y z.(Wren(x) -> Yampus(x)) & ((Wren(y) & Humpus(z))) | (Wren(y) & Humpus(z)) & -Lempus(y))))", "all x y z.((Wren(x) & Yumpus(y) & Humpus(z)) -> (Yumpus(x) & Humpus(z) & -Lempus(z)))", "(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> Humpus(y)) & all z.(Wren(z) -> -Lempus(z))))", "(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> Humpus(x)) & (Wren(x) -> -Lempus(x)))", "(all x.(Wren(x) -> Yampus(x)) & ((Wren(x) -> Shumpus(x))) & ((Wren(x) -> -Lempus(x))))", "all x y z.((Wren(x) & Yumpus(y) & Shumpus(z) & -Lempus(x)) -> (Yumpus(x) & Shumpus(y) & -Lempus(x)))", "(all x.(Wren(x) -> Yampus(x)) | (Wren(x) -> Shumpus(x))) & (Wren(x) -> -Limpus(x))))", "(all x.(Wren(x) -> Yumpet(x)) & ((Wren(x) -> Shumpus(x))) & ((Wren(x) -> -Lempus(x))))", "all x y z.((Wren(x) & Yumpus(y) & Humpus(z)) -> (Yumpus(x) & Shumpus(x) & -Lempus(x)))", "(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> Shumpus(y)) & all z.(Wren(z) -> -Lempus(z))))"]}
{"id": "prontoqa_train_115", "nl": "Wren is not a brimpus.", "fol": "-brimpus(Wren)", "prediction": ["(-Brumpus(Wren) & -Brimpus(w))", "(-Birmpus(Warn))", "-Brumpus(Wren)", "all x.(Wren(x) -> -Brimpus(x))", "all x.(Wren(x) -> -Brimpus(x))", "all x.(Wren(x) -> -Brimpus(x))", "(-Brimpus(Wren))", "-Brumpos(Wren)", "all x.(Wren(x) -> -Brumpus(x))", "all x.(Wren(x) -> -Brimpus(x))", "(-Brimpus(Wren))", "all x.(Wren(x) -> -Brimpus(x))", "all x.(Wren(x) -> -Brimpus(x))", "Wren is not a brimpus.", "(-Brimpus(Wren))", "all x.(Wren(x) -> -Brimpus(x))"]}
{"id": "prontoqa_train_116", "nl": "Shumpuses are sterpuses.", "fol": "all x. (shumpus(x) -> sterpus(x))", "prediction": ["all x.(Sushus(x) -> Sterpuse(x))", "all x.(Shumpus(x) -> Stardust(x))", "all x.(Shakpuse(x) -> Sterpuse(x))", "all x.(Shumpus(x) -> Sterpuse(x))", "all x.(Shumpus(x) -> Sterpuse(x))", "all x.(Shampus(x) -> Sterpuse(x))", "all x.(Shumpus(x) -> Sterosente(x))", "all x.(Suppuse(x) -> Sterpuse(x))", "all x.(Shupuse(x) -> Sterpuse(x))", "all x.(Shumpus(x) -> Sterpuse(x))", "all x.(Shumpus(x) -> Sterpuse(x))", "all x.(Shampus(x) -> (Sterepose(x) | Fertilizer(x)))", "all x.(Shuppus(x) -> Sterosuce(x))", "all x.(Shumpus(x) -> Sterpuse(x))", "all x.(Shumpus(x) -> Sterpuse(x))", "all x.(Shumpus(x) -> Sterpuse(x))"]}
{"id": "prontoqa_train_117", "nl": "Wren is not a sterpus, Wren is a yumpus, and Wren is a numpus.", "fol": "(-sterpus(Wren) & yumpus(Wren) & numpus(Wren))", "prediction": ["(all x y z.(Wren(x) -> (-Stereos) | Yumpus(y)) | Numpus(z)))", "all x y z.((Wren(x) & Sterpus(y) & Yumpus(z)) -> (-Sterpus(x) & -Yumpus(x) & -Numpus(x)))", "(all x.(Wren(x) -> -Sterpus(x)) & ((Wren(x) & Yumpus(x)) | (Wren(x) & Numpus(x)))))", "(all x.(Wren(x) -> -Stereo(x)) & all y.(Wren(y) -> Yompus(y)) & all z.(Wren(z) -> Numpus(z))))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Numpus(z))))", "(all x.(Wren(x) -> -Sterepus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Numpus(z))))", "(all x y z.((Wren(x) & Sterpus(y)) -> -Sterpus(x)) & ((Wren(z) & Yumus(z))) -> Numpus(z)))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpus(y))) & all z.(Wren(z) -> Numpus(z)))", "(all x y z.((Wren(x) & Sterpus(y) & Yampus(z)) -> (-Sterepus(x) & Yumpus(x) & Numpus(x)))", "(all x.(Wren(x) -> -Sterpus(x)) & (Yumpus(x) -> Nox)))", "(all x.(Wren(x) -> -Sternus(x)) & (Yumpus(x) & Numpus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Numpus(z)) -> (-Stereo(x) & -Yumpus(y) & -Yumpus(z)))", "(all x.(Wren(x) -> -Sterpus(x)) & (Yumpus(x) & Numpus(x)))", "(all x.(Wren(x) -> -Forest(x)) & (Yumpus(x) | Numpus(x))))", "(all x y z.((Wren(x) & Sterpus(y) & Yuqus(z)) -> -Sterpus(x)) & ((Rene) & Yumpus(x)) -> Numpus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Numerus(z)) -> (-Sterpus(x) & -Yumpus(y) & -Nompus(z)))"]}
{"id": "prontoqa_train_118", "nl": "Wren is not a shumpus.", "fol": "-shumpus(Wren)", "prediction": ["all x.(Wren(x) -> -Shumpus(x))", "all x.(Wren(x) -> -Shumpus(x))", "all x.(Wren(x) -> -Shumpus(x))", "all x.(Wren(x) -> -Shumpus(x))", "Wren is not shumpus.", "all x.(Wren(x) -> -Shumpus(x))", "is a shumpus(Wren)", "(-Shumpus(Wren))", "is shumpus.", "Wren ist kein Humpback(w))", "all x.((Wren(x) & -Shumpus(x)) -> -Shumpus(x))", "-(Wren(W) & Humpback(W))", "all x.(Wren(x) -> -Shumpus(x))", "all x.(Wren(x) -> -Shumpus(x))", "western.no(wren) -> -Shumpus(w))", "all x.(Wren(x) -> -Shumpus(x))"]}
{"id": "prontoqa_train_119", "nl": "Gorpuses are rompuses.", "fol": "all x. (gorpus(x) -> rompus(x))", "prediction": ["all x.(Gorpuse(x) -> Rompuse(x))", "all x.(Rombose(x) -> Gorpuse(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Rompus(x) -> Gorpuse(x))", "all x y.((Gorpuse(x) & Rompus(y)) -> Poem(x,y))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Rompus(x) -> Gorpuse(x))", "all x.(Gorpuse(x) -> Rompus(x))", "all x.(Rompus(x) -> Gorpuse(x))", "all x.(Gorpus(x) -> Rompuse(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_120", "nl": "Sam is a shumpus and Sam is a numpus and Sam is not a rompus.", "fol": "(shumpus(Sam) & numpus(Sam) & -rompus(Sam))", "prediction": ["(all x.(Shumpus(x) & Nabupus(x)) -> Stupus(x)) & (Nobus(x) -> Stupus(x)) & (Rompus(x) -> -Shumpus(x))))", "(all x.(Shumpus(x) & Numpus(x)) -> -Rumpus(x)))", "all x y z.((Sam(x) & Humpus(y) & Numerus(z)) -> (Shumpus(x) & Numpus(x) & -Rompus(x)))", "(all x,y.(Shumpus(x) -> Sam(y)) & (Lumpus(y) -> Sam(y)) & (Rompus(y) -> Sam(y)))", "(all x.(Shumpus(x) -> Sabotis(x)) & (Nompus(x) -> Sampus(x))) & (Rompus(x) -> Sampus(x)))", "(all x y.((Shumpus(x) & Sam(y)) -> Shumpus(x)) & ((Numpus(y) & Sam(y)) -> -Rompus(y)))", "all x y z.((Sam(x) & Sam(y) & Sumptuos(z)) -> ((Shumpus(x) & Numpus(y) & -Rompus(z))) | (-Shumpus(y) & Numpus(y))))", "(all x.(Shumpus(x) -> SamPilot(x)) & all y.(Numpus(y) -> SamPilot(y))) & all z.(Rompus(z) -> SamPilot(z))))", "(all x.(Shumpus(x) -> SamMenu)) & (Numpus(x) -> SamMenu)) & (Rompus(x) -> SamMenu)))", "all x y.((Sam(x) & Sam(y)) -> (Shumpus(x) | Numpus(y) & -Rompus(y)))", "all x y z.((Sam(x) & Seumpus(y) & Numpus(z)) -> (Shumpus(x) | Sam(x) & -Rompus(x)))", "(all x.(Sam(x) -> Humpback(x)) & (Numpus(x) & -Rompus(x)))", "all x.(Sam(x) -> (HasShumpus(x) & HasNumpus(x) & -HasRompus(x)))", "(all x.(Shumpus(x) -> Sam(x)) & (Nompus(x) -> Sam(x)) & -Rompus(x)))", "(all x.(Samuel(x) -> Shumpus(x)) & (numpus(x) -> Numpus(x)) & (rompus(x) -> -rompus(x)))", "(all x y z.(Sam(x) -> Shumpus(x)) & ((Sam(y) & Nompus(y)) -> Rompus(z)))"]}
{"id": "prontoqa_train_121", "nl": "Sam is not a gorpus.", "fol": "-gorpus(Sam)", "prediction": ["all x.(Sam(x) -> -Gorpus(x))", "all x.(Sam(x) -> -Gorpus(x))", "all x.(Sam(x) -> -Gorpus(x))", "all x.(Sam(x) -> -Gorpus(x))", "-Gorpus(Sam)", "all x.(Sam(x) -> -Gorpus(x))", "all x.(Sam(x) -> -Gorpus(x))", "all x.(Sam(x) -> -Gorpus(x))", "all x.(Sam(x) -> -Gorpus(x))", "(Gorpus(Sam) & -Gorpus(Sam))", "ALL x.(Sam(x) -> -Gorpus(x))", "all x.(Sam(x) -> -Gorpus(x))", "(-Gorpus(Sam))", "all x.(Sam(x) -> -Gorpus(x))", "-Gorpus(Sam)", "all x.(Sam(x) -> -Gorpus(x))"]}
{"id": "prontoqa_train_122", "nl": "Vumpuses are sterpuses.", "fol": "all x. (vumpus(x) -> sterpus(x))", "prediction": ["all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterepuse(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpuse(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Steroid(x))"]}
{"id": "prontoqa_train_123", "nl": "Sally is not a sterpus and Sally is a lorpus and Sally is a zumpus.", "fol": "(-sterpus(Sally) & lorpus(Sally) & zumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Steroid(x)) & (Lorpus(x) & Zumpus(x)))", "(all x.(Sally(x) -> -Sterepus(x)) & ((Sally(x) -> Lorpus(x)) & (Sally(x) -> Zumpus(x))))", "(-'Sally(Sterpus) & -Lorpus(Sally) & -Zumpus(Sally))", "(-Sterpus(s) | -Lorpus(s) | -Zumpus(s)))", "(-(Sally(Storpus) & -Sterpus(Sally)) & (Lorpus(Sally) | Zumpus(Sally)))", "(all x.(Sally(x) -> -Sterpus(x)) & (Lorpus(x) | Zumpus(x))))", "(-Stellus(Sally) & -Sterpus(Sally) & Lorpus(Sally) & Zumpus(Sally))", "(all x y z.((Sally(x) & Sterpus(y) & Lorpus(z)) -> -Storps(x)) & ((Sally(x) & Lorpus(x)) -> Zumpus(x)))", "(all x.(Sally(x) -> -Sterpus(x)) & all y.(Lorpus(y) & All z.(Zombia(z)) -> -Storp (x) & AllAspers(y))))", "(all x.(Sally(x) -> -Sterpus(x)) & (Lorpus(x) | Zumpus(x))))", "(all x.(Sally(x) -> -Sterpus(x)) & (Lorpus(x) | Zumpus(x)))", "(-Stoss(Sally) | (Lorpus(Sally) | Zumpus(Sally))))", "(-Storpus(Sally) & Lorpus(Sally) & Zumpus(Sally))", "(all x.(Sally(x) -> -Sterpus(x)) & all y.(Rosa(y) -> Lorpus(y)) & all z.(Sally(z) -> Zumpus(z))))", "all x y.((Sally(x) & -Sterpus(x) & Lorpus(y)) -> Zumpus(x))", "exists x.(Sally(x) & -(Sterpus(x) & Lionel(x) & Zumpus(x)))"]}
{"id": "prontoqa_train_124", "nl": "Sally is not a vumpus.", "fol": "-vumpus(Sally)", "prediction": ["Sally is not a Vumpus.", "Sally & -Vumpus(Sally)", "Sally is not a V\u00fcmpus.", "Neighbor of the Vumpus Feature.", "Sally -Vumpus(Sally)", "Sally n\u2019est pas vumpus.", "all x.(Sally(x) -> -Vampus(x))", "all x.((Sally(x) & -Vumpus(x)) -> -Vimpus(x))", "Sally isn'tVumpus(Sally)", "Sally is not a Vampup(Sally)", "Sally -Vimpus(s)", "Sally is not a vumpus.", "All x.(Sally(x) -> -Vumpus(x))", "Sally is not a vumpus.", "all x.(Sally(x) -> -Vimpus(x))", "Sally is not a Vumpus."]}
{"id": "prontoqa_train_125", "nl": "Every wumpus is a brimpus.", "fol": "all x. (wumpus(x) -> brimpus(x))", "prediction": ["all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brumpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_126", "nl": "Rex is not a brimpus and Rex is a numpus and Rex is a sterpus.", "fol": "(-brimpus(Rex) & numpus(Rex) & sterpus(Rex))", "prediction": ["exists x.(Brimpus(x) & -Brimpus(x) & Numpus(x) & Sterpus(x))", "(all x.(Rex(x) -> -Brimpus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> Stropus(x)))", "((Brimpus(rex) & Numpus(rex)) -> -Brimpus(rex)) & Sterpus(rex))", "(all x.(Rex(x) -> -Bumpus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> Sterpus(x))))", "(all x.(Rex(x) -> -Blimps(x)) & all y.(Nompus(y) & Sterpus(y))))", "all x y z.((Rex(x) & Brimpus(y) & Numpus(z) & Sterpus(x)) -> (-Brimpus(x) & Numpus(y) & Sterpus(z)))", "(all x.(Brimpus(x) -> -Brimpus(x)) & (Numpus(x) -> Sterpus(x)))", "(all x.(Rex(x) -> -Brimpus(x)) & all y.(Rex(y) -> Numpus(y)) & all z.(Rex(z) -> Steroid(z))))", "(all x.(Rex(x) -> -Brimpus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> Sterpus(x)))", "(all x.(Rex:-Brimpus(x)(x)) & (Nompus(x) | Mercury(x))))", "(all x.(Rex(x) -> -Brimpus(x)) & ALL y.(Rex(y) -> Numpus(y)) & ALL z.(Sterepus(z) -> Sterpus(z))))", "(all x.(Rex(x) -> -Brimpus(x)) & (Nompus(x) | Sterpus(x))))", "all x y z.((Rex(x) & Brimpus(y) & Numpus(z)) -> (-Brimpus(x) & -Numpus(x) & -Sterpus(x)))", "all x.((Rex(x) & Nompus(x) & Sterpus(x)) -> -Bimpus(x))", "((Rex,Brimpus) | Numpus(x)) | Sterpus(x)))", "((Rex) & -Brimpus(x)) | (Numpus(x) & Sterpus(x))))"]}
{"id": "prontoqa_train_127", "nl": "Numpuses are yumpuses.", "fol": "all x. (numpus(x) -> yumpus(x))", "prediction": ["all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpus(x))", "(Yumpus(Numpuses))", "all x.(Numpus(x) -> Yupsum(x))", "all x.(Numpus(x) -> Yampus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpuse(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yampus(x))", "all x.(Numpus(x) -> Yampus(x))", "all x.(Numpus(x) -> Yompus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpus(x))"]}
{"id": "prontoqa_train_128", "nl": "Fae is not a yumpus, Fae is an impus, and Fae is a shumpus.", "fol": "(-yumpus(Fae) & impus(Fae) & shumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Ilizable(x)) & (Fae(x) -> Humpus(x)))", "(all x y z.((Fae(x) & Yumpus(y)) -> -Yumpus(x)) & ((Fae(z) & Issue(z)) -> Humpus(z)))", "(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Issue(x)) & (Fae(x) -> Shimpens(x)))", "(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Ispose(x)) & (Fae(x) -> Humpus(x)))", "(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Issue(x)) & (Fae(x) -> Shimpus(x)))", "(all x y z w.(Fae(x) -> -Yumpus(x)) & (Fae(y) -> Ilirs(y)) & (Fae(z) -> Humpus(z)))", "(all x.(Fae(x) -> -Yumpus(x)) & all y.(Fae(y) -> Id\u00e9al(y)) & all z.(Fae(z) -> Humpus(z))))", "exists x y.((Fae(x) & Yampus(y)) | (Ilisa(x) & Humpus(x))))", "all x y z w.((Fae(x) & Imperator(y) & Humpus(z)) -> (-Yumpus(x) & Issue(y) & Shumpus(z)))", "all x y z.((Fae(x) & Impossible(y) & Humpus(z)) -> (-Yumpus(x) & Issue(y) & IsShumpus(z)))", "(all x.(Yumpus(x) -> -Fae(x)) & (Ilision(x) -> Fae(x)) & (Shumpus(x) -> Fae(x)))", "(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Erosion(x)) & (Fae(x) -> Shumpus(x)))", "has been compared with 3 different versions of the yumpus (yumpus) & impus (yumpus) & shumpus(y)))", "(all x.(Fae(x) -> -Yumpus(x)) & all y.(Fae(y) -> Impossible(y)) & all z.(Fae(z) -> Humpus(z))))", "(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Issue(x)) & (Fae(x) -> Shumpus(x)))", "(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Ispos (x))) & (Fae(x) -> shumpus(x)))"]}
{"id": "prontoqa_train_129", "nl": "Fae is not a numpus.", "fol": "-numpus(Fae)", "prediction": ["(Nucleus(Fae) & -Numerus(Fae))", "-Numpus(fe)", "-Numpus(Fae)", "-Nompus(Fae)", "-numpus(Fae)", "(-numpus(Fae) & -numpus(Fae))", "exists x.(Fae(x) & -Number(x))", "-(Fae(fae) & -Numpus(fae))", "(-numpus(Fae))", "all x.(Fae(x) -> -Nompus(x))", "-numpus(Fae)", "-Numpus(Fae)", "All x.(Fae(x) -> It & -Numpus(x))", "all x.(Fae(x) -> -Numpus(x))", "-Numpus(Fae)", "all x.(Fae(x) -> -Numpus(x))"]}
{"id": "prontoqa_train_130", "nl": "Every sterpus is a wumpus.", "fol": "all x. (sterpus(x) -> wumpus(x))", "prediction": ["all x.(Steerpus(x) -> Wumpus(x))", "all x.(Sterpus(x) -> Wumpus(x))", "all x.(Steerpus(x) -> Wumpus(x))", "all x.(Steroid(x) -> Wumpus(x))", "all x.(Sterpus(x) -> Wumpus(x))", "all x.(Sterepus(x) -> Wumpus(x))", "all x.(Sterus(x) -> wumpus(x))", "all x.(Sterpus(x) -> Wumpus(x))", "all x.(Sterpus(x) -> Wumpus(x))", "all x.(Steerpus(x) -> Wumpus(x))", "all x.(Sterepus(x) -> Wumpus(x))", "exists x.(Steerpus(x) & Wumpus(x))", "all x.(Sterpus(x) -> Wumpus(x))", "all x.(Sterpus(x) -> Wumpus(x))", "all x.(Sterpus(x) -> Wumpus(x))", "all x.(Sterpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_131", "nl": "Sam is a vumpus and Sam is not a wumpus and Sam is a lorpus.", "fol": "(vumpus(Sam) & -wumpus(Sam) & lorpus(Sam))", "prediction": ["all x y z.((Sam(x) & Vumpus(x) & Sam(y) & Wumpus(z) & -Wumpus(y) & -Lorpus(z)) -> (Vumpus(w) & -Wumpus(y) & -Lorpus(w) & -Vumpus(y)))", "all x y.((Sam(x) & Vux (x) & Sam(y)) -> -Wumpus(y)) & (Lorpus(x) & Sam(y)))", "all x y z.((Sam(x) & Vumpus(x) & Wampus(y) & Lordpus(z)) -> (Crow(x) & Wumpus(x) & Lordpus(z)))", "all x y z.((Sam(x) & Vulpis(x) & Sam(y) & Llorpus(z)) -> (-Vulpis(y) & -Wumpus(y) & -Lorpus(z)))", "all x y.((Sam(x) & Vumpus(x)) -> (PropedToYou(x) & -Wumpus(x) & Lorpus(y)))", "(all x y z.((Sam(x) & Vumpus(x)) -> (Pumpus(x) & -Wumpus(y) & Lorpus(z)))", "exists x.(Vampus(x) & Wormpus(x) & Lorpus(x))", "all x y z.((Sam(x) & Vumpus(y) & Sam(z)) -> (-Umpus(z) & Wumpus(z) & Lorosaur(x)))", "all x y.((Sam(x) & Vumpus(x)) -> (Desarah(x) & -Wumpus(x) & -Lorpus(y)))", "(all x.(Sam(x) -> -Vumpus(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Lorpus(x)))", "all x y z.((Sam(x) & Vumpus(y) & Sam(z)) -> (-Wumpus(z) & -Lorpus(z)))", "(all x.(Sam(x) -> V\u00e9miss(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Lorpus(x)))", "(all x.(Sam(x) -> Vumpus(x)) & all y.((Sam(y) & -Wumpus(y))) -> Lorpus(y)))", "(all x.((Saman(x) & -Wumpus(x)) | (-Whumpus(x) & Lordpus(x))))", "(all x.(Sam(x) -> Voompus(x)) & (-Wumpus(x) & (-Sam(x) -> Lorpus(x))))", "(all x.(Sam(x) -> Vampire(x)) & ((Sam(x) & -Wumpus(x)) -> Lordpus(x)))"]}
{"id": "prontoqa_train_132", "nl": "Sam is not a sterpus.", "fol": "-sterpus(Sam)", "prediction": ["all x.(Sam(x) -> -Sterpus(x))", "all x.(Sam(x) -> -Sterpus(x))", "(Sam is -Sterpus)", "all x.(Sam(x) -> -Sterpus(x))", "(-Stereopus(Sam))", "all x.(Sam(x) -> -Stereoscopic(x))", "(-Stereo(Sam))", "(-Stuss(Sam) & -Sterpus(Sam))", "all x.((Sam(x) & -Sterpus(x)) -> -Sterpus(x))", "(-Stereopus(Sam))", "\u2018Sam\u2019 n\u2019est passterpus(Sam)", "-Sterpus(Sam)", "(-Sterpus(Sam))", "all x.(Sam(x) -> -Steerpus(x))", "-Shelle(Sam)", "-Sterpus(Sam)"]}
{"id": "prontoqa_train_133", "nl": "Tumpuses are zumpuses.", "fol": "all x. (tumpus(x) -> zumpus(x))", "prediction": ["all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpuse(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumulus(x) -> Zusped(x))", "all x.(Tumpuse(x) -> Zumpuse(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpuse(x))", "all x.(Tumulus(x) -> Zumpus(x))", "all x.(Tumpuse(x) -> Zumpuse(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_134", "nl": "Sam is a rompus, Sam is not a zumpus, and Sam is a dumpus.", "fol": "(rompus(Sam) & -zumpus(Sam) & dumpus(Sam))", "prediction": ["all x y z.((Sam(x) & Rompus(x) & Sam(y) & Dashpus(z)) -> (Rompus(x) & Dumpus(y)))", "all x y z.((Sam(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & -Zumpus(y) & Dumpus(z)))", "-all x.(Dupus(x) -> (Rompus(x) & -Tompus(x)))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Dumpus(x)))", "(all x.(Rompus(x) -> SamMandels(x)) & all y.(Tompus(y) -> SamMandels(y)))", "exists x.(Sam(x) & Rompus(x) & -Zumpus(x) & Dumpus(x))", "(all x.(Sam(x) -> Rompus(x)) & all y.(Sam(y) -> -Zumpus(y))) & all z.(Sam(z) -> Dumpus(z)))", "all x y z.((Sam(x) & Rompus(y) & Zumpus(z)) -> (-Rompus(x) & Dumpus(x)))", "(all x y.((Sama(x) & Rompus(x)) -> Rimbus(x)) & ((Sama(y) & -Zombia(y))) -> Dumpus(y)))", "all x y z.((Rompus(x) & Sam(y) & Dumpus(z)) -> (Rompus(y) & -Zumpus(y) & Dumpus(z)))", "(all x.(Rompus(x) | Zumpus(x)) & Dumpus(x))", "all x.((Sam(x) & Rompus(x)) -> -Zumpus(x)) & (Sam(x) -> Dumpus(x)))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Dumpus(x)))", "(all x.(Rompus(x) -> -Umpus(x)) & all y.(Dumpus(y) -> -Rompus(y)))", "(all x y.(Rompus(x) & Rompus(y)) & (Zumpus(y) & Dumpus(x)))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Dumpus(x)))"]}
{"id": "prontoqa_train_135", "nl": "Tumpuses are jompuses.", "fol": "all x. (tumpus(x) -> jompus(x))", "prediction": ["all x.(Tumpuse(x) -> Jompuse(x))", "all x.(Tumpuse(x) -> Jompuse(x))", "all x.(Tumpuse(x) -> Jompus(x))", "all x.(Tumpuse(x) -> Jompuse(x))", "all x.(Tumpuse(x) -> Jompuse(x))", "all x.(Tumulus(x) -> Jompus(x))", "all x.(Tumpuse(x) -> Jompuse(x))", "all x.(Tumult(x) -> Jompuse(x))", "all x.(Tumpuse(x) -> Jompuse(x))", "all x.(Tumpuse(x) -> Jompus(x))", "all x.(Tumpuse(x) -> Jompuse(x))", "all x.(Tumulus(x) -> Jompuse(x))", "all x.(Tumult(x) -> Jompuse(x))", "all x.(TumPub(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompuse(x))", "all x.(Tumult(x) -> Jompuse(x))"]}
{"id": "prontoqa_train_136", "nl": "Polly is a lorpus, Polly is not a jompus, and Polly is a dumpus.", "fol": "(lorpus(Polly) & -jompus(Polly) & dumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lorpus(x)) & all y.(Mammal(y) -> -Jompus(y))) & all z.(Poly(z) -> Dumpus(z))))", "all x y z.((Polly(x) & Lorpus(y) & Jompus(z)) -> (Lorpill(x) | Polly(x) & Dumpus(x)))", "(all x.(Lorpus(x) -> Polly)) & (-Jumpus(x) -> Polly)) & (Dumpus(x) -> Polly)))", "(all x.(Polly(x) -> Loompu (x))) & all y.(Polly(y) -> -Jompus(y))) & all z.(Polly(z) -> Dumpus(z)))", "(all x.(Polly(x) -> Florus(x)) & all y.(Polly(y) -> -Jompus(y))) & all z.(Polly(z) -> Dumpus(z))))", "all x y z.((Polly(x) & Lorpus(y) & -Jompus(z)) -> (Lady(x) | Dumpus(x))))", "all x y z.((Lowlife(x) & Polly(y) & Jompus(z)) -> (Lorph(y) & -Jompus(y) & Dumpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Jompus(x)) & (Poly(x) -> Dumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Jompus(x)) & (Polly(x) -> Dumpus(x)))", "(all x.(Child(x) -> Lops(x)) & (Jempus(x) | Dumpus(x)))", "(all x.(Pollow(x) -> Lemur(x)) & (Pollow(x) -> -Jampus(x)) & (Pollow(x) -> Dumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Jompus(x)) & (Polly(x) -> Dumpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Polly(z) & -Jompus(z)) -> (Lorpus(x) | Dumpus(x)))", "(all x y z.((Polly(x) & Lorpus(y)) -> Ornamental(x,y)) & ((Poly(z) & -Jompus(z)) -> (Poly(z)) & Dumpus(z))))", "(all x.(Lorpus(x) -> Polly)) & all y.(Jompus(y) -> Polly(y))) & all z.(Dumus(z) -> Polly)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Jompus(z) & Dumpus(x)) -> (Lorpus(y) & -Jimpus(y) & Dumpus(z)))"]}
{"id": "prontoqa_train_137", "nl": "Polly is not a tumpus.", "fol": "-tumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Tumpus(x))", "all x.(Polo(x) -> -Tumpus(x))", "all x.(Polly(x) -> -Tumpus(x))", "Polly is -Tumpus(Polly)", "(-Tumpus(Polly))", "-Tumpus(Polly)", "all x.(Polly(x) -> -Tumpus(x))", "and is nontumescent(polly)", "all x.(Polly(x) -> -Tumpus(x))", "all x.(Polly(x) -> -Tumpus(x))", "all x.(Polly(x) -> -Tumpus(x))", "Polly is not tumpus(pollin)", "all x.(Polo(x) -> -Tumpus(x))", "the last thing you need to do is to try to be tumpus(Polly)", "exists x.(Pooly(x) & -Tumpus(x))", "all x.(Polly(x) -> -Tumpus(x))"]}
{"id": "prontoqa_train_138", "nl": "Every vumpus is a rompus.", "fol": "all x. (vumpus(x) -> rompus(x))", "prediction": ["all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vimpus(x) -> Rompus(x))", "-all x.(Vumpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_139", "nl": "Alex is a jompus, Alex is a sterpus, and Alex is not a rompus.", "fol": "(jompus(Alex) & sterpus(Alex) & -rompus(Alex))", "prediction": ["(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Sterpus(x)) & -Alex(x)))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Sterpus(x)) & -Alex(x)))", "all x y z.((Alex(x) & Jompus(x) & Sterpus(y) & -Rompus(z)) -> (Jompus (x) & Sterpus(y) & -Rompus(z)))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Sterpus(x)) & (Alex(x) -> -Rompus(x)))", "all x y z.((Alex(x) & Jompus(y) & Steros(z)) -> (Sterpus(y) & -Rompus(z)))", "all x y z.((Alex(x) & Jompus(x) & Sterus(y) & -Rompus(z)) -> (Jompus(x) | Sterpus(y) & -Rompus(z)))", "all x y z.((Alex(x) & Jompus(x) & Sterpus(y) & -Rompus(z)) -> ((Jompus(x) | Sterpus(y)) & Sterpus(y)))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Sterospy(y)) & none z.(Alex(z) -> Rompus(z))))", "all x y z.((Alex(x) & Jompus(x) & Sterpus(y)) -> (Jompus(x) | Sterpus(y) & -Rompus(z)))", "exists x.(Alex(x) & Jompus(x) & -Rompus(x))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Sterpus(y)) & all z.(Alex(z) -> -Rompus(z))))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Sterpus(x)) & (Alex(x) -> -Rompus(x))))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Senserpus(y))) & all z.(Alex(z) -> -Rompus(z)))", "all x.(Alex(x) -> (Hompus(x) | Sterpus(x) | -Rompus(x)))", "(all x.(Alexa(x) -> Jompus(x)) & (Alexa(x) -> Sterepus(x)) & (Alexa(x) -> -Rrompus(x))))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Sterpus(y)) & -Rompus(y)))"]}
{"id": "prontoqa_train_140", "nl": "Alex is not a vumpus.", "fol": "-vumpus(Alex)", "prediction": ["all x.(Alex(x) -> -Voompus(x))", "all x.(Alex(x) -> -Vumpus(x))", "all x.(Alex(x) -> -Vumpus(x))", "(NoVimpus(Alex))", "all x.(Alex(x) -> -Vumpus(x))", "No vumpus.", "all x.(Alex(x) -> -Vumpus(x))", "ALL x.(Alex(x) -> -Vumpus(x))", "Alex is not a Vumpus(Alex)", "all x.(Alex(x) -> -Vumpus(x))", "all x.(Alex(x) -> -Vumpus(x))", "Alex -Vimpus(Alex)", "Alex is not a vumpus.", "Alex is not a venompus.", "all x.(Alex(x) -> -Vumpus(x))", "(-Usumpus(Alex))"]}
{"id": "prontoqa_train_141", "nl": "Every dumpus is a wumpus.", "fol": "all x. (dumpus(x) -> wumpus(x))", "prediction": ["all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Welp(x))", "all x.(Dumpus(x) -> Wampus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wandus(x))", "all x.(Dumpus(x) -> Wampus(x))"]}
{"id": "prontoqa_train_142", "nl": "Alex is not a wumpus, Alex is a yumpus, and Alex is a zumpus.", "fol": "(-wumpus(Alex) & yumpus(Alex) & zumpus(Alex))", "prediction": ["(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpus(y)) & all z.(Alex(z) -> Zumpus(z))))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Yumpus(x)) & (Alex(x) -> Zumpus(x)))", "all x.(Alex(x) -> (-Wumpus(x) | (Yumpus(x) & Zumpus(x))))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yampus(y))) & all z.(Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Wompus(y) & Yumpus(z)) -> (-Wumpus(x) & Yompus(y) & Zumpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpus(y))) & all z.(Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Wumpus(y) & Yampus(z)) -> (-Wumpus(x) & Yampus(x) & Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpus(y)) & all z.(Alex(z) -> Zumpus(z))))", "all x y.((Alex(x) & Wumpus(y)) -> -Wumpus(x)) & ((Alex(x) & Yumpus(y)) -> Zumpus(x)))", "(all x y.(Wumpus(x) -> -Wumpus(x)) & (Yumpus(y) -> Zumpus(y)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpus(y) & all z.(Alex(z) -> Zumpus(z))))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpis(y)) & all z.(Alex(z) -> Zumpus(z))))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Yampus(x)) & (Alex(x) -> Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpus(y))) & all z.(Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Wampus(y) & Yumpus(z)) -> (-Wumpus(x) & Yuppus(y) & Zumpus(z)))", "(all x y z.((Alex(x) & Wumpus(y)) -> -Wumpus(x)) & ((Alex(x) & Yumpus(z)) -> Zumpus(x)))"]}
{"id": "prontoqa_train_143", "nl": "Alex is not a dumpus.", "fol": "-dumpus(Alex)", "prediction": ["Alex is not a Dumpus.", "Alex is not dumpedus.", "(-Dumpus(Alex))", "All x.(Alex(x) -> -Dumpus(x))", "all x.(Alex(x) -> -Dumpus(x))", "Alex is not a dumpus.", "all x.(Alex(x) -> -Dumpus(x))", "-Dumpus(Alex)", "(-Dumpus(Alex))", "Alex is not a Dumpus.", "Alex is not a dumpus.", "Alex \u2013 -Dumpus(Alex)", "Alex is not Dumpus.", "(NoDumpus(Alex)", "-Dumpsus(Alex)", "all x.(Alex(x) -> -Dumpus(x))"]}
{"id": "prontoqa_train_144", "nl": "Every lempus is a jompus.", "fol": "all x. (lempus(x) -> jompus(x))", "prediction": ["all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Limpus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))"]}
{"id": "prontoqa_train_145", "nl": "Max is a sterpus and Max is not a jompus and Max is a yumpus.", "fol": "(sterpus(Max) & -jompus(Max) & yumpus(Max))", "prediction": ["(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Jompus(x)) & (Max(x) -> Yumpus(x)))", "all x y z.((Max(x) & Steropus(y) & Jompus(z)) -> (Sterpus(x) & -Jimpus(x) & Yumpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & (-Jompus(x) & -Yumpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Jompus(x)) & (Max(x) -> Yumpus(x)))", "(all x.(Max(x) -> sterpus(x)) & ((Max(x) & -Jompus(x))) | (-Max(x) & Yumpus(x))))", "(all x.(Max(x) -> Sterospan(x)) & ((Max(x) & -Jompus(x)) & (-Max(x) -> Yumpus(x))))", "all x y z.((Max(x) & Sterpus(x) & Max(y) & Yompus(z)) -> (Jimpus(x) & Yompus(y)))", "all x y z.((Max(x) & Sterus(x) & Jompus(y) & Yumpus(z)) -> (Meterpus(x) & -Mompus(y) & Yumpus(z)))", "(all x.(Max(x) -> Sterpus(x)) & (-Marco(x) & Monopus(x)) | (-Marco(x) & Yumpus(x))))", "(all x.(Max(x) -> Sterpus(x)) & (-Max(x) -> Jompus(x)) & (-Max(x) -> Yumpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Jompus(x)) & (Max(x) -> Yumpus(x)))", "all x y z.((Max(x) & Sterepus(x) & -Jimpus(y)) -> (Yumpus(z)))", "all x y.((Max(x) & Steerpus(x)) -> (-Jompus(x) & Yumpus(y)))", "(all x y z.(Max(x) -> Sterpus(x)) & ((Max(y) & -Jompus(y)) & (Yumpus(z) & -Jompus(z))))", "(all x y z.((Max(x) & Sterpus(y) & NoJompus(z)) -> (AtLeastYimps(x) | AsLeastYumpus(x))))", "all x y z.((Max(x) & Sterpus(y) & Yumpus(z)) -> (-Jompus(x) & -Serpus(y) & Yumpos(z)))"]}
{"id": "prontoqa_train_146", "nl": "Max is not a lempus.", "fol": "-lempus(Max)", "prediction": ["-Lempus(Max)", "-Lempus(Max)", "the lempus.", "all x.(Max(x) -> -Limpus(x))", "-Lempus(Max)", "all x.(Max(x) -> -Lempus(x))", "all x.(Max(x) -> -Limpus(x))", "(-lempus(Max))", "Max is notLempus.", "is the aristocratic of the y.((Max(x) & Lempus(y)) -> -Lempus(x))", "-Limpus(Max)", "((Max(Max) & -Lempus(max)))", "Max is not lempus.", "NullLempus(Max)", "-Limpus(Max)", "(-Lempus(Max))"]}
{"id": "prontoqa_train_147", "nl": "Each yumpus is a zumpus.", "fol": "all x. (yumpus(x) -> zumpus(x))", "prediction": ["all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_148", "nl": "Rex is a rompus, Rex is a dumpus, and Rex is not a zumpus.", "fol": "(rompus(Rex) & dumpus(Rex) & -zumpus(Rex))", "prediction": ["(all x y.(Rompus(x) -> Rompus(x)) & (Dumpus(y) -> -Sumpus(y)))", "(all x y z.(Rex(x) -> Rompus(x)) & ((Rex(y) & Dumpus(y)) -> -Zumpus(z)))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Rex(y) -> Dumpus(y)) & all z.(Rex(z) -> -Zumpus(z))))", "(all x.(Rompus(x) -> Rex)) & all y.(Dumpus(y) -> Rex)) & all z.(Tompus(z) -> -Rompus(z)))", "(all x.(Rex(x) -> Rompus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> -Zumpus(x))))", "(all x.(Rompus(x) -> -Rompus(x)) & (Dumpus(x) -> Dumpus(x)) & (Rex(x) -> -Tompus(x))))", "(all x.(Rompus(x) -> Rex)) & (Dumpsus(x) -> Rex)) & -Zumpus(x)))", "(all x.(Rex(x) -> Rompus(x)) & (Rex(x) -> Dumpus(x)) & -Tompus(x)))", "(all x y z.(Rompus(x) -> Rex)) & (Dumpus(y) -> Rex)) & (Dumpus(z) -> -Toumpus(z)))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Rex(y) -> Dumpus(y)) & all z.(Rex(z) -> -Zumpus(z))))", "(all x y z.((Rompus(x) & Dumpus(y)) -> (Rompus(x) & Dumpus(y)) & ((Rompus(z) & Zumpus(z)) -> -Rompus(z)))", "(all x) -> Rompus(x)) & (Dumps(x) | -Zumpus(x)))", "all x y z.((Rompus(x) & Dumpus(y) & Rex(z)) -> (Rompus(x) & Dumpus(y) & -Zumpus(z)))", "(all x.(Rompus(x) -> Romatose(x)) & all y.(Dumpus(y) -> Dumpus(y)) & all z.(Tompus(z) -> -Tompus(z))))", "(all x.(Rex(x) -> Rompus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> -Tompus(x))))", "(all x y.((Rompus(x) & Rex(y)) -> Rompus(x)) & ((Dumpus(y)) -> NotTommpus(y)))"]}
{"id": "prontoqa_train_149", "nl": "Rex is not a yumpus.", "fol": "-yumpus(Rex)", "prediction": ["Rex is notyumpus.", "all x.(Rex(x) -> -Yumpus(x))", "Rex is notYumpus(x)", "(-Yumpus(Rex))", "(-Yumpus(rex))", "all x.(Rex(x) -> -Yumpus(x))", "(-Yumpus(Rex))", "Ergonome.com (#Yumpus(x))", "Rex ist keineyumpus.", "Rex, for short, is a yumpus.", "-Yumpus(Rex)", "(-Yumpus(Rex))", "(-Yumpus(rex) & Rex(rex))", "Rex is not yumpus.", "all x.(Rex(x) -> -Yumpus(x))", "-Yumpus(Rex)"]}
{"id": "prontoqa_train_150", "nl": "Tumpuses are impuses.", "fol": "all x. (tumpus(x) -> impus(x))", "prediction": ["all x.(Tumpus(x) -> Issue(x))", "all x.( Tumpus(x) -> Isolated(x))", "all x.(Tumper(x) -> Issue(x))", "all x.(Tumpus(x) -> Issues(x))", "all x.(Tumpuse(x) -> Issued(x))", "all x.(Tumpus(x) -> Isolated(x))", "all x.(Tumult(x) -> Issue(x))", "all x.(Tump(x) -> Issue(x))", "all x.(Tump(x) -> Issue(x))", "all x.(Tumpuse(x) -> Issue(x))", "all x.(Tumulus(x) -> Impossible(x))", "all x.(Tumulus(x) -> Impeccessor(x))", "all x.(Tumpuse(x) -> Issue(x))", "all x.(Tumult(x) -> Issues(x))", "all x.(Tumpus(x) -> Impossible(x))", "all x.(Tumpuse(x) -> Issue(x))"]}
{"id": "prontoqa_train_151", "nl": "Sally is a jompus and Sally is a dumpus and Sally is not an impus.", "fol": "(jompus(Sally) & dumpus(Sally) & -impus(Sally))", "prediction": ["(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & -Illegal(x)))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y)) & -Illegal(y)))", "(all x y z.((Sally(x) & Jompus(x) & Dumpus(y)) -> JOMpus(x)) & ((Sally(z) & Dumpus(z)) -> -Ilpos(z)))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y))) & all z.(Sally(z) -> -Impossible(z)))", "all x y z.((Sally(x) & Jompus(x) & Dumpus(y) & -Islution(z)) -> (Jumpus(x) & Dumpus(y) & -Isolation(z)))", "all x.((Sally(x) & Jompus(x)) -> Dumpus(x)) & -Iliotus(x))", "all x y.(Jompus(x) & Dumpus(y) & Sally & -Impossible(y))", "all x y.((Sally(x) & Jompus(x) & Dumpus(y)) -> -Impossible(x))", "(all x y z.((Sally(x) & Jompus(y) & Dumpus(z)) -> (Jompus(y) & Dumpus(z) & -Impossible(z))))", "(all x denotes x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y)) & all z.(Sally(z) -> -Impossible(z))))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & (Sally(x) -> -Islut(x)))", "all x y z.((Sally(x) & Jompus(x) & Dumpus(y)) -> (IsJumpus(z) & -Impossible(z)))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & -Ilises(x)))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & (Sally(x) -> -Eruption(x)))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y)) & all z.(Sally(z) -> -Impossible(z))))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y)) & all z.(Sally(z) -> -Idealist(z))))"]}
{"id": "prontoqa_train_152", "nl": "Sally is not a tumpus.", "fol": "-tumpus(Sally)", "prediction": ["Sally is not a Tumpus.", "Sally is not a tumpus.", "Sally is a Tumpus, but -Tumpus.", "Sally -Tumpus(Sally))", "Sally -Tumpus(Sally)", "Sally is not a Tumpus.", "all x.(Sally(x) -> -Tumpus(x))", "Sally 'noTumpus.'", "exists x.(Sally(x) & -Tumpus(x))", "Sally is not Tumpus(Sally)", "Sally is not a Tumpus.", "Sally ist nicht Tumult(s)", "Sally n\u2019est pas Tumpus(Sally).", "Sally is NotTumpus(Sally).", "Sally's tumpus-like.", "Sally & -Tumpus(Sally)"]}
{"id": "prontoqa_train_153", "nl": "Each zumpus is a vumpus.", "fol": "all x. (zumpus(x) -> vumpus(x))", "prediction": ["exists x.(zumpus(x) & Vumpus(x))", "all x.(Tumpus(x) -> Vampus(x))", "all x.(Tompus(x) -> Vumpus(x))", "all x.(Tompus(x) -> Vumpus(x))", "all x.(Tompus(x) -> Vumpus(x))", "all x y.((Tommy(x) & Symbol(y)) -> Vumpus(x))", "all x.(Tompus(x) -> Vumpus(x))", "all x.(Tompus(x) -> Vimpus(x))", "all x.(Tompus(x) -> Voommus(x))", "all x.(Zumpus(x) -> Vumpus(x))", "all x.(Zumpus(x) -> Vumpus(x))", "all x.(Tompus(x) -> Vumpus(x))", "all x.(Tompus(x) -> Vumpus(x))", "all x.(Tompus(x) -> Vumpus(x))", "all x.(Zumpus(x) -> Vumpus(x))", "all x.(Zumpus(x) -> Vumpus(x))"]}
{"id": "prontoqa_train_154", "nl": "Sally is not a vumpus and Sally is a yumpus and Sally is a dumpus.", "fol": "(-vumpus(Sally) & yumpus(Sally) & dumpus(Sally))", "prediction": ["all x y z.((Sally(x) & Kumpus(y) & Yumpus(z)) -> (-Vumpus(x) & Yumpus(y) & Dumpus(z)))", "all x y z.((Sally(x) & Vumpus(y) & Yupus(z)) -> (-Vumpus(x) & Yumpus(z) & Dumpus(x)))", "all x y z.((Sally(x) & Vampus(y) & Yumpus(z)) -> (-Vimpus(x) & Yampus(x) & Dumpus(x)))", "(all x.(Sally(x) -> -Vumpus(x)) & all y.(Sally(y) -> Yuppus(y))) & all z.(Sally(z) -> Dumpus(z))))", "(all x y z.((Sally(x) & Vubise(y) & Yumpus(z)) -> -Vubise(x)) & ((Sally(x) & Yupopus(x)) | ((Sally(x) & Dumpus(x)))))", "(all x y z.((Sally(x) & Vumpus(y) & Yumpus(z)) -> -Vumpus(x)) | ((Sally(x) & Yumpus(z))) | (Sally(x) & Dumpus(x))))", "(all x y.(Vumpus(x) -> -Vumpus(y)) & (Yumpus(y) -> Dumpus(y)))", "(all x.(Sally(x) -> -Vumpus(x)) & all y.(Sally(y) -> Yuppus(y))) & all z.(Sally(z) -> Dumpus(z))))", "all x y z.((Sally(x) & Vumpus(y) & Yampus(z)) -> (-Vumpus(x) & Yumpus(x) & Dumpus(x)))", "(-Vumpus(Sally) | (Yumpus(Sally) | Dumpus(Sally))))", "(-Vumpus(Sally) & Yompus(Sally) & Dumpus(Sally))", "(-Vumpus(Sally) & Yumpus(Sally) & Dumpus(Sally))", "(all x.(Sally(x) -> -Vumpus(x)) | (Yumpus(x) & Dumpus(x))))", "all x y z.((Sally(x) & -Vumpus(x) & Yumpus(y) & Dumpus(z)) -> (-Vumpus(x) & -Yumpus(y) & -Dumps(z)))", "((Sally(x) & -Vumpus(x)) & (Yumpus(x) & Dumpus(x)))", "(all x.(Sally(x) -> -Vumpus(x)) | (Sally(x) -> Yumpus(x))) | (Sally(x) -> Dumpus(x))))"]}
{"id": "prontoqa_train_155", "nl": "Sally is not a zumpus.", "fol": "-zumpus(Sally)", "prediction": ["Sally is not a Zumpus.", "Sally - Zumpus(Sally)", "Sally is not zumpus.", "Sally is not a zumpus.", "Sally is no Zumpus.", "(-Zombipus(Sally))", "all x.(Sally(x) -> -Zumpus(x))", "Sally is -Zumpus(Sally)", "Sally is not a zumpus.", "Sally, & -Zumpus(Sally)", "Sally is not a zumpus.", "Ms(Sally) -> -Tompus(Sally))", "Sally is -Zumpus(S)", "Sally is not a zumpus.", "Sally is not zumpus.", "all x.(Sally(x) -> -Zombia(x))"]}
{"id": "prontoqa_train_156", "nl": "Every jompus is a rompus.", "fol": "all x. (jompus(x) -> rompus(x))", "prediction": ["all x.(Jompus(x) -> Roman(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jimpus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jimpus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jampus(x) -> Rompus(x))", "all x.(Jumpus(x) -> Rompus(x))", "all x.(Jumpus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jimpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_157", "nl": "Alex is not a rompus and Alex is a zumpus and Alex is a shumpus.", "fol": "(-rompus(Alex) & zumpus(Alex) & shumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (-Rompus(x) & Toumpus(x) & Humpus(x)))", "all x y.((Alex(x) & Rompus(y)) -> (-Rompus(x) & Zumpus(y) & Humpus(y)))", "all x y.((Alex(x) & Rompus(x)) -> (-rompus(x) & Zumpus(x) & Humpus(y)))", "(all x.(Alex(x) -> -Rompus(x)) & (Alex(x) -> Zumpus(x)) & (Alex(x) -> Humpus(x)))", "all x y z.((Alex(x) & Rupus(y) & Zumpus(z)) -> (-Rrompus(x) & Zumpus(y) & Humpus(z)))", "all x y z.((Alex(x) & Rhopus(y) & Zumpus(z)) -> (-Rompus(x) | Shumpus(x)))", "all x y z.( (Alex(x) & Rompus(y) & Zumpus(z)) -> (-rompus(x) & Tozumpus(x) & Sompus(x)))", "(all x.(Alex(x) -> -Rompus(x)) & (Alex(x) -> Zumpus(x)) & (Alex(x) -> Humpus(x)))", "(all x.(Alex(x) -> -Rompus(x)) & (Alex(x) -> Zumpus(x)) & (Alex(x) -> Humpus(x)))", "(all x.(Alex(x) -> Hompus(x)) & all y.(Alex(y) -> Hompus(y))))", "(-rompus(Alex) & -Zumpus(Alex) & Shumpus(Alex))", "all x.((Alex(x) -> (-Rompus(x) & Zumpus(x) & Humpus(x)))", "(all x.(Alex(x) -> -Rompus(x)) & all y.(Alex(y) -> Zumpus(y)) & all z.(Alex(z) -> Humpus(z))))", "all x.(Alex(x) -> (-Rompus(x) & -Tompus(x) & -Shumpus(x)))", "all x y z.((Alex(x) & Rompus(x) & Zumpus(y) & Humpus(z)) -> -Rompus(x) & Zumpus(x) & Humpus(z)))", "(all x.(Alex(x) -> -Rompus(x)) & all y.(Alex(y) -> Zumpus(y)) & all z.(Alex(z) -> Humpus(z))))"]}
{"id": "prontoqa_train_158", "nl": "Alex is not a jompus.", "fol": "-jompus(Alex)", "prediction": ["all x.(Alex(x) -> -Jimpus(x))", "all x.(Alex(x) -> -Jompus(x))", "Alex is not jompus.", "(all x.(Alex(x) -> -Jompus(x)))", "All x.(Alex(x) -> -Jompus(x))", "all x.(Alex(x) -> -Jompus(x))", "Alex -Jampus(Alex)", "all x.(Alex(x) -> -Jompus(x))", "Alex is not a Jompus.", "Alex is not a jompus.", "Alex is not a Jompus(Alex)", "Alex is not a Jompus.", "all x.(Alex(x) -> -Jompus(x))", "all x.(Alex(x) -> -Jomessian(x))", "all x.(Alex(x) -> -Jompus(x))", "all x.(Alex(x) -> -Jompus(x))"]}
{"id": "prontoqa_train_159", "nl": "Alex is a lorpus and Alex is a grimpus and Alex is not a tumpus.", "fol": "(lorpus(Alex) & grimpus(Alex) & -tumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) & Grumpus(x) & -Tumpus(x)))", "(all x.(Alex(x) -> Llorpus(x)) & all y.(Alex(y) -> Grimpus(y)) & -Tumpus(y)))", "all x.(Alex(x) -> (Lorpus(x) & Grimpus(x) & -Tumpus(x)))", "all x y.((Alex(x) & Lorpus(x) & Grimpus(y)) -> (NonTumpus(x) & -Tumpus(y)))", "all x y z.((Alex(x) & Lorpus(x) & Grimpus(y) & -Tumpus(z)) -> (Lepras(x) | Grimpus(y)))", "(all x.(Alex(x) -> Lorossa(x)) & all y.(Murple(y) -> (Tumpus(x) & -Tumpus(y))))", "all x y.((Alex(x) & Lorpus(x) & Grimpus(y)) -> (-Tumpus(x)))", "(all x.(Alex(x) -> Larpus(x)) & all y.(Alex(y) -> Grimpus(y)) & all z.(Alex(z) -> -Tumpus(z))))", "(all x.(Alex(x) -> Lopus(x)) & all y.(Alex(y) -> Grimpus(y)) & -Tumpus(y)))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> Grimpus(y)) & -Tumpus(y)))", "all x y z.((Alex(x) & Lorpus(y) & Gruppus(z)) -> (Lorps(x) & Grimpus(x) & -Tumpus(x)))", "all x.(Alex(x) -> (Lorpus(x) & Grimpus(x) & -Tumpus(x)))", "all x.(Alex(x) -> (Lorpus(x) & Grimpus(x) & -Tumpus(x)))", "all x.(Alex(x) -> (Lorpus(x) & Grimpus(x) & -Tumpus(x)))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> Grimpus(y))) & all z.(Alex(z) -> -Tumpus(z)))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> Grypus(x)) & (Alex(x) -> -Tumpus(x)))"]}
{"id": "prontoqa_train_160", "nl": "Alex is not an impus.", "fol": "-impus(Alex)", "prediction": ["Alex -Impossible(Alex)", "exists x.(Alex(x) & -Imperator(x))", "NoImplicator(Alex)", "Alex ist keinImposer(Alex)", "Alex is not imposed.", "Alex is not a imposed.", "all x.(Alex(x) -> -Impossible(x))", "The only one who would disagree with Alex(Alex) is the OneThatIsNumber(Alex)", "Alex n'est pas impus.", "All x.(Alex(x) -> -Impossible(x))", "all x.(Alex(x) -> -Imposer(x))", "Alex -IsImposer(Alex)", "Alex is notImpediment(Alex)", "Alex -Impossible(Alex)", "All x.(Alex(x) -> -Imposible(x))", "Alexnestnotimplicit(Alex)"]}
{"id": "prontoqa_train_161", "nl": "Yumpuses are brimpuses.", "fol": "all x. (yumpus(x) -> brimpus(x))", "prediction": ["all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpus(x))", "all x.(Yumpus(x) -> Brimpus(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpus(x))", "all x.(Yumpus(x) -> Brimpus(x))", "all x.(Yumpus(x) -> Brimbus(x))", "all x.(Yumpus(x) -> Brimpus(x))", "all x.(Yumpus(x) -> Brimbus(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpus(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpuse(x))"]}
{"id": "prontoqa_train_162", "nl": "Wren is not a brimpus and Wren is a zumpus and Wren is a grimpus.", "fol": "(-brimpus(Wren) & zumpus(Wren) & grimpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Brimpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Grempus(x)))", "(all x y z.((Wren(x) & Brimpus(y)) -> -Brimpus(x)) & ((Wren(z) & Zumpus(z)) -> Grimpus(z)))", "all x y.((Wren(x) & Wren(y)) -> (-Brimpus(x) & Zumpus(y) & Grimpus(y)))", "all x.((Wren(x) & -Brimpus(x)) | (-Brumpus(x) & Zumpus(x) & Grimpus(x)))", "all x y z.((Wren(x) & -Brumpus(x) & Wren(y) & Zumpus(y)) -> (Weasel(z) & Grimpus(z)))", "all x y z.((Wren(x) & Brumpus(y) & Zumpus(z)) -> (-Brimpus(x) & Grumpus(x)))", "(exists x.(Wren(x) & -Brimpus(x)) & exists y.(Wren(y) & Zumpus(y))) & exists z.(Wren(z) & Grimpus(z))))", "(all x.(Wren(x) -> -Brimpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Grimpus(x)))", "all x y.((Wren(x) & Durpus(y)) -> (-Brimpus(x) & Zumpus(y) & Grimpus(y)))", "all x y z.((Wren(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Grimpus(x)))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "all x y z.((Wren(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Topper(x) & Grimpus(x)))", "all x y z.((Wren(x) & Rempus(y) & Zumpus(z)) -> (-Brimpus(x) & Grimpus(y)))", "(all x.((Wren(x) & -Brimpus(x)) -> Aroma(x)) & all y.((Wren(y) & Zumpus(y)) -> Aroma(y)))", "all x y.((Wren(x) & Wren(y)) -> (-Brimpus(x) & Zumpus(y) & Grimpus(y)))"]}
{"id": "prontoqa_train_163", "nl": "Wren is not a yumpus.", "fol": "-yumpus(Wren)", "prediction": ["(-Yumpus(Wren))", "all x.(Wren(x) -> -Yumpus(x))", "-Yumpus(Wren,2014)", "all x.(Wren(x) -> -Yumpus(x))", "Wren is notyumpus(w)", "-Yumpus(Wren)", "all x.(Wren(x) -> -Yumpus(x))", "all x.(Wren(x) -> -Yumpus(x))", "all x.(Wren(x) -> -Yumpus(x))", "all x.(Wren(x) -> -Yumpus(x))", "all x.(Wren(x) -> -Yumpus(x))", "exists x.(Wren(x) & -Yumpus(x))", "all x.(Wren(x) -> -Yumpus(x))", "(-Yumpus(Wren))", "all x.(Wren(x) -> -Yumpus(x))", "Wren is notYumpus."]}
{"id": "prontoqa_train_164", "nl": "Numpuses are dumpuses.", "fol": "all x. (numpus(x) -> dumpus(x))", "prediction": ["all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpus(x) -> Dumpuse(x))", "all x.(Number(x) -> Dumpuse(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpus(x) -> Dumpuse(x))", "all x.(Nupuse(x) -> Dumpuse(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpus(x) -> Dumuse(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpus(x) -> Dumpuse(x))"]}
{"id": "prontoqa_train_165", "nl": "Wren is not a dumpus, Wren is a sterpus, and Wren is a lorpus.", "fol": "(-dumpus(Wren) & sterpus(Wren) & lorpus(Wren))", "prediction": ["(-Dumpus(Wren) | Sterpus(Wren) | Lorpus(Wren)))", "exists x.(Wren(x) & -Dumpus(x) & -Sterpus(x) & -Lorpus(x))", "(all x y z.((Wren(x) & Dumpus(y) & Sterpus(z)) -> -Dumpus(x)) & ((Wren(x) & Sterpus(y)) -> Lorpus(z)))", "all x y z.((Wren(x) & Dumpus(y) & Sterpus(z)) -> (-Dumpus(x) & Sterpus(x) & Lorpus(y)))", "(all x y z.(Wren(x) -> -Dumpus(x)) & ((Wren(y) & Sterpus(y)) | ((Wren(z) & Lorpus(z)))))", "(all x.(Wren(x) -> -Dumpus(x)) & ((Wren(x) -> Sterpus(x)) | (Wren(x) -> Lorpus(x))))", "(all x.((Wren(x) & -Dumpus(x)) -> Sterpus(x)) & all y.((Wren(y) & Lorpus(y)) -> -Dumpus(y)))", "(all x y z.(Wren(x) -> -Dumpus(x)) & ((Wren(y) & Sterpus(y)) | (Wren(z) & Lorpus(z)))))", "all x y z.((Wren(x) & Dumpus(y) & Sterpus(z)) -> (-Dumps(x) & -Sterpus(z) & -Lorpus(z)))", "(all x.(Wren(x) -> -Dumpus(x)) & ((Wren(x) & Sterpus(x)) | (Wren(x) & Lorpus(x)))))", "(-dumpus(Wren) | (Sterpus(Wren) & Lorpus(Wren))))", "(all x y z.(Wren(x) -> -Dumpus(x)) & ((Wren(y) & Sterpus(y)) -> Lorpus(z)))", "all x y z.((Wren(x) & -Dempus(y) & Sterpus(z)) -> (-Dupus(x) & Sterpus(y) & Lurpus(x)))", "(-Dumpus(Wren) & -Sternus(Wren) & -Lorpus(Wren))", "(all x.(Wren(x) -> -Dumpus(x)) & all y.(Wren(y) -> Sterpus(y)) & all z.(Wren(z) -> Lorpus(z))))", "(all x.(Wren(x) -> -Dumpus(x)) & ((Wren(x) & Sterpus(x)) -> Lorpus(x)))"]}
{"id": "prontoqa_train_166", "nl": "Each brimpus is an impus.", "fol": "all x. (brimpus(x) -> impus(x))", "prediction": ["all x.(Brumpus(x) -> IsBrimpus(x))", "all x.(Brimpus(x) -> IsImmersive(x))", "all x.(Brimpus(x) -> IsImpossible(x))", "all x.(Bimpus(x) -> Isimposed(x))", "all x.(Brimpus(x) -> Impossible(x))", "all x.(Brimpus(x) -> IsImbibed(x))", "all x.(Brimpus(x) -> Isolated(x))", "all x.(Brimpus(x) -> Isolat(x))", "exists x.(Brimpus(x) & Impossible(x))", "all x.(Brimpus(x) -> IsImpossible(x))", "all x.(Brumpus(x) -> IsIsAbscerted(x))", "all x.(Brimpus(x) -> Impermissable(x))", "all x.(Brimpus(x) -> IsImpossible(x))", "all x.(Brimpus(x) -> Imperative(x))", "all x.(Brumpus(x) -> Impossible(x))", "exists x.(Brimpus(x) & -Improved(x))"]}
{"id": "prontoqa_train_167", "nl": "Max is a sterpus and Max is not an impus and Max is a gorpus.", "fol": "(sterpus(Max) & -impus(Max) & gorpus(Max))", "prediction": ["(all x y z.((Max(x) & Strep (x) & Z)) -> Asterpus(x)) & ((Max(y) & -Immerd(y)) -> Agorpus(z)))", "(all x.(Max(x) -> Sterpus(x)) & ((Max(x) -> -Impossible(x))) | (-Max(x) & -Impossible(x))))", "(all x.(Max(x) -> Sterpus(x)) & ((Max(x) -> -Impossible(x))) | (-Max(x) & -Impossible(x)))))", "(all x y.((Max(x) & Sterpus(x)) -> -Impressor(y)) & ((Max(x) & Gorpus(y)) -> Gorpus(x)))", "(ALL x y.((Max(x) & Sterpus(x)) -> -Impossible(y)) & ((Max(x) & Gorpus(x)) -> Gorpus(x)))", "all x y z.((Max(x) & Sterpus(y) & Impossum(z) & Gorpus(x)) -> (Has(x,y) & -Has(x,z)))", "(all x.(Max(x) -> Stopus(x)) & -Impossible(x)) & (Max(x) -> Gorpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Impossible(x))) & (Max(x) -> Gorpus(x)))", "all x y z.((Max(x) & Sterpus(y) & -Impossible(z)) -> ((Impossible(x) | Gorpus(x))))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Impossible(x))) & (Max(x) -> Gorpus(x)))", "(Also known as steroid(Max) & -Issue(Max) & Gorpus(Max))", "all x y.((Max(x) & Sterpus(x) & -Issue(y)) -> (Issue(x,y) & IsGorpus(x)))", "(all x.(Max(x) -> Steroid(x)) & (Max(x) -> -Impresser(x)) & (Max(x) -> Gorpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Issue(x)) & (Max(x) -> Gorpus(x)))", "& -(Max(Max) -> (Storpus(Max) & IsImpedat(Max) & Gorpus(Max)))", "all x y z.((Max(x) & Sterpus(y) & Impossible(z)) -> (Sterpus(x) & -Immersion(y) & Gorpus(z)))"]}
{"id": "prontoqa_train_168", "nl": "Shumpuses are grimpuses.", "fol": "all x. (shumpus(x) -> grimpus(x))", "prediction": ["all x.(Shampus(x) -> Grimpuse(x))", "all x.(Shupuse(x) -> Grimpuse(x))", "all x.(Shumpus(x) -> Greasepuse(x))", "all x.(Shumpus(x) -> Grimpuse(x))", "all x.(Shimpus(x) -> Grimpuse(x))", "all x.(Shuppuse(x) -> Grimpuse(x))", "all x.(Shutus(x) -> Grimpuse(x))", "all x.(Shutup(x) -> Grimpuse(x))", "all x.(Shumpus(x) -> Grimpuse(x))", "all x.(Sushpus(x) -> Grimpuse(x))", "all x.(Shimpus(x) -> Grimpuse(x))", "all x.(Shuppus(x) -> Grimpuse(x))", "all x.(Shumpus(x) -> Grimpuse(x))", "all x.(Sshumpuse(x) -> Grimpuse(x))", "all x.(Supset(x) -> Grimpuse(x))", "all x.(Swumpus(x) -> Grimpuse(x))"]}
{"id": "prontoqa_train_169", "nl": "Max is not a grimpus and Max is a lempus and Max is a gorpus.", "fol": "(-grimpus(Max) & lempus(Max) & gorpus(Max))", "prediction": ["(all x.(Max(x) -> -Grimpus(x)) & all y.((Max(y) & Lempus(y)) -> Gorpus(y)))", "all x y z.((Max(x) & Grimpus(y) & Lempus(z)) -> (-Spoken(x) | Max(x) & Gorpus(x)))", "all x y z.((Max(x) & Grimpus(y) & Lempus(z)) -> (-Scruffy(x) & Lempus(x) & Gorpus(x)))", "all x.((Max(x) & -Grimpus(x)) -> (Lempus(x) & Gorpus(x)))", "(all x.(Max(x) -> -Grimpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z))))", "all x.(Max(x) -> (-Froste(x) | -Lempus(x) | Gorpus(x)))", "all x y.((Max(x) & Grimpus(y)) -> (-Grimpus(x) & Lempus(x) & Gorpus(x)))", "(all x y z.((Max(x) & Grupp(y) & -Gropus(y)) -> Lempus(z)) & ((Max(z) & Gorpus(z)) -> Gorpus(z)))", "(all x.(Max(x) -> -Grimpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z))))", "all x y z.((Max(x) & Grimpus(y) & Max(z)) -> (-Smooth(x) | Lempus(z) | Gorpus(z)))", "(all x.(Max(x) -> -Grimpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z))))", "all x.(Max(x) -> (-Gruppus(x) | (-Gruppus(x) & Lempus(x)) | (-Grompus(x) & Gorpus(x))))", "all x y.((Max(x) & Max(y)) -> (-Grimpus(x) & Lempus(y) & Gorpus(y)))", "all x y z.((Max(x) & Gruppus(y) & Lampus(z)) -> (-Grimpus(x) & Lempus(x) & Gorpus(z)))", "(all x.(Max(x) -> -Grimpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z))))", "all x y z.((Max(x) & Grimpus(y) & Lempus(z)) -> (-Malm(x) & Lempus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_170", "nl": "Max is not a shumpus.", "fol": "-shumpus(Max)", "prediction": ["all x.(Max(x) -> -Shumpus(x))", "-Shumpus(Max)", "-(Max(Max) & Shumpus(Max))", "Max.(X) -> -Shumpus(x))", "the big,unique,and-shumpus(Matthew)", "-(Max(Max))", "(Max(Max) & -Shumpus(Max))", "*Max(Max) & -Shumpus(Max))", "(-Shumpus(Max))", "(Mat Max, notShumpus(Max))", "(-Shumpus(Max)) -> -Shumpus(Max))", "(-Shumpus(Max))", "(-Shumpus(Max))", "[max] & -Shumpus(x))", "\"Max\" - Shumpus(Max)", "all x.(Max(x) -> -Shumpus(x))"]}
{"id": "prontoqa_train_171", "nl": "Zumpuses are jompuses.", "fol": "all x. (zumpus(x) -> jompus(x))", "prediction": ["all x.(Zimpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompoo(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jumpuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Joint(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompus(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))"]}
{"id": "prontoqa_train_172", "nl": "Wren is a grimpus and Wren is not a jompus and Wren is a yumpus.", "fol": "(grimpus(Wren) & -jompus(Wren) & yumpus(Wren))", "prediction": ["all x y z.((Crompus(x) & Wren(y) & Yumpus(z)) -> (Grimpus(y) & -Jompus(y) & -Yumpus(z)))", "(all x.(Wren(x) -> Grimpus(x)) & (-Jompus(x) & -Humpus(x)))", "all x y z.((Wren(x) & Grypus(x) & Wren(y) & Kumpus(z)) -> (-Jompus(y) & Yumpus(z)))", "(all x.(Wren(x) -> Grumpus(x)) | (-Jompus(x) & NotYumpus(x))))", "(all x.(Wren(x) -> Grimpus(x)) & all y.(Wren(y) -> -Jimpus(y)))", "(all x.(Wren(x) -> Grimpus(x)) & (-Wren(x) -> Jompus(x)) & (-Wren(x) -> Yumpus(x)))", "all x y.((Wren(x) & Grempus(y)) -> (Sheeps(x) & -Jompus(y) & Yumps(y)))", "(all x.(Wren(x) -> Scarp(x)) & (Wren(x) -> -Jompus(x)) & (Wren(x) -> Yumpus(x)))", "(all x y z.(Wren(x) -> Grimpus(x)) & (Wren(y) -> -Jompus(y)) & (Wren(z) -> Yumpus(z)))", "all x y z.((Wren(x) & Grumpy(x) & Wren(y) & -Jimpus(y)) -> (Rumpus(z) & Yampus(w) & Yampus(w)))", "(all x y z.((Wren(x) & Grumpus(y)) -> (Smooth(z) & -Jompus(x)) & ((Wren(z) & Yumpus(z))) -> (Yumpus(z))))", "all x y.((Wren(x) & Grimpus(x)) -> (-Jompus(x) & Yumpus(y)))", "(all x y.((Wren(x) & Grimpus(x)) -> IsWren(y)) & ((Wren(x) & -Jompus(y)) -> IsWren(x)))", "all x y z.((Wren(x) & Grimpus(x) & Wren(y) & Yumpus(z)) -> -Jompus(y))", "(all x.(Wren(x) -> Grimpus(x)) & all y.((Wren(y) & -Jimpus(y)) -> Yumpus(y)))", "(all x y z.(Wren(x) -> Grimpus(x)) & ((Wren(y) & -Jompus(y)) | (-Wren(z) & Yumpus(z)))))"]}
{"id": "prontoqa_train_173", "nl": "Wren is not a zumpus.", "fol": "-zumpus(Wren)", "prediction": ["-Tompus(Wren)", "(-Zombia.))", "all x.(Wren(x) -> -Tompus(x))", "OMG, Anemococcus(Wren)", "all x.(Wren(x) -> -Zombipus(x))", "all x.(Wren(x) -> -Zumpus(x))", "all x.(Wren(x) -> -Zumpus(x))", "all x.(Wren(x) & -Tompus(x))", "(-Zombie.))", "all x.(Wren(x) -> -Zombipus(x))", "all x.(Wren(x) -> -Tompus(x))", "-Zombia(Wren)", "(-Zombia(Wren))", "(-Zimpus(Wren) & Nutty(Wren))", "all x.(Wren(x) -> -Tompus(x))", "all x.(Wren(x) -> -Zumpus(x))"]}
{"id": "prontoqa_train_174", "nl": "Every jompus is a wumpus.", "fol": "all x. (jompus(x) -> wumpus(x))", "prediction": ["all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Cow(x))", "all x.(Jimpus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wompus(x))", "all x.(Jimpus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jumpus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wasp(x))", "all x.(Jompus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_175", "nl": "Alex is not a wumpus and Alex is a lempus and Alex is a sterpus.", "fol": "(-wumpus(Alex) & lempus(Alex) & sterpus(Alex))", "prediction": ["all x y z.((Alex(x) & Wumpus(y) & Lempus(z) & Steros (y)) -> (-Wumpus(x) & Lempus(x) & Sterpus(y)))", "all x y.((Alex(x) & Tombolus(y)) -> (-Wumpus(x) & Lempus(y) & Sterepus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Sterepus(x)))", "all x y.((Alex(x) & Wumpus(y)) -> (-Wumpus(x) & Lempus(y) & Sterepus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Sterpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Sterpus(z))))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(x) & Sterpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y))) & all z.(Alex(z) -> Sterpus(z)))", "all x y.((Alex(x) & Wumpus(y)) -> (-Wumpus(x) & Lempus(x) & Sterpus(x)))", "all x.(Alex(x) -> (-Wumpus(x) & Lempus(x) & Sterpus(x)))", "all x y.((Alex(x) & Wumpus(y)) -> -Wumpus(x) & Lempus(y) & Sterpus(x))", "all x y.((Alex(x) & Wormpus(y) & Lempus(y) & Sterpus(x)) -> -Wumpus(x))", "all x y z.((Alex(x) & Wumpus(y) & Lemmy(z)) -> (-Wumpus(x) & Lemmy(x) & -Sterpus(z)))", "all x y.((Alex(x) & -Wumpus(x) & Lempus(y) & Sterpus(y)) -> IsNot(x,y))", "exists x.(Alex(x) & -Wumpus(x) & Lempus(x) & Sterpus(x))", "exists x.(Alex(x) & -Wumpus(x) & Lempus(x) & Sterpus(x))"]}
{"id": "prontoqa_train_176", "nl": "Zumpuses are brimpuses.", "fol": "all x. (zumpus(x) -> brimpus(x))", "prediction": ["all x.(Zumpus(x) -> Brimpuse(x))", "all x.(Zumpus(x) -> Brimpuse(x))", "all x.(Zumpus(x) -> Brimpuse(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpuse(x))", "all x.(Zumpus(x) -> Brimpuse(x))", "all x.(Zumpus(x) -> Brimpuse(x))", "all x.(Zombuse(x) -> Brimmuse(x))", "all x.(Zumpus(x) -> Brimpuse(x))", "all x.(Zumpus(x) -> Brimpuse(x))", "all x.(Zumpus(x) -> Brimpuse(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zimpus(x) -> Brimpuse(x))"]}
{"id": "prontoqa_train_177", "nl": "Fae is a grimpus and Fae is a numpus and Fae is not a brimpus.", "fol": "(grimpus(Fae) & numpus(Fae) & -brimpus(Fae))", "prediction": ["all x y z.((Fae(x) & Grimpus(x) & Fae(y) & Numpus(y) & Fae(z)) -> (Rumpus(y) & -Brumpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & (Numpus(x) & -Brimpus(x)))", "all x y z.((Fae(x) & Grimpus(x) & Fae(y) & Numpus(y) & -Brimpus(z)) -> (Grimpus(x) | Numpus(y) & -Brumpus(y)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Brimpus(z))))", "(all x y z.(Fad(x) -> Grimpus(x)) & ((Fad(y) & Numpus(y)) & (Fad(z) -> -Brimpus(z))))", "(all x y z.(Fae(x) -> (Grimpus(x) & Grimpus(y))) & (Fae(z) -> (Numpus(z)) & -Brimpus(z))))", "all x y z.((Fae(x) & Grimpus(y) & Numbus(z)) -> (Crapid(x) & Numpus(y) & -Brumpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Brimpus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Brimpus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Brimpus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Brimpus(x))))", "all x y z.((Fae(x) & Grimpus(x) & Numpus(y) & Brimpus(z)) -> (Grimpus(x) | Numpus(y) & -Brimpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Numpus(x)) & -brimpus(x)))", "all x y z.((Fae(x) & Grimpus(y) & Numpus(z)) -> (Fae(x) & -Brimpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Brumpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Brimpus(z))))"]}
{"id": "prontoqa_train_178", "nl": "Fae is not a zumpus.", "fol": "-zumpus(Fae)", "prediction": ["-Zumpus(Fae)", "-Zumpus.", "Oops, you are not a zumpus.", "(-Zumpus(Fae)!", "(-Zumpus(Fae))", "(-Zumpus(Fae))", "(-Zoompus(Fae))", "\"Fae\" - Zumpus(f))", "-Zumpus(Fae)", "DasFae(f) & -Zumpus(f))", "(-Zumpus(Fae))", "(-Zumpus(Fae))", "(-Zimmerpus(Fae))", "(-Zumpus(Fae))", "(-Zumpus(Fae))", "-Zoompus(Fae)"]}
{"id": "prontoqa_train_179", "nl": "Impuses are rompuses.", "fol": "all x. (impus(x) -> rompus(x))", "prediction": ["all x.(Impuse(x) -> Rompuse(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impus(x) -> Rompus(x))", "all x.(Implose(x) -> Rompuse(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impuse(x) -> Rhophage(x))", "all x.(Impeduse(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impus(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompuse(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompuse(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompuse(x))"]}
{"id": "prontoqa_train_180", "nl": "Max is not a rompus, Max is a dumpus, and Max is a wumpus.", "fol": "(-rompus(Max) & dumpus(Max) & wumpus(Max))", "prediction": ["(all x.((Max(x) & -Rompus(x)) -> Dumpus(x)) & all y.((Max(y) & Wumpus(y)) -> Wampus(y)))", "all x y z.((Max(x) & Rimpus(y) & Dumpus(z)) -> (-Rompus(x) & Dumpus(x) & Wumpus(x)))", "all x y z.((Max(x) & Dumpus(y) & Wumpus(z)) -> (-Rompus(x) & -Dumpus(y) & -Rompus(z) & Wumpus(z)))", "all x y z.((Max(x) & Rompus(y) & Dumpus(z)) -> (-Rrompus(x) & Demps(x) & Wumpus(x)))", "(all x.(Max(x) -> -Rompus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> Wumpus(z))))", "(all x.(Max(x) -> -Rompus(x)) | (Max(x) -> Dumpus(x))) | (Max(x) -> Wumpus(x)))", "(all x.(Max(x) -> -Roman(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> Wumpus(z))))", "(all x.(Max(x) -> -Rompus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> Wumpus(z))))", "all x y.((Max(x) & Rimpus(y)) -> -Rompus(x)) & ((Max(x) & Dumpus(y)) -> Wumpus(x)))", "(all x.(Max(x) -> -Rompus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> Wumpus(z))))", "(all x.(Rompus(x) -> -Rompus(x)) | (Dumpus(x) -> Dumpus(x))) | (Wumpus(x) -> Dumpus(x)))", "(all x.(Max(x) -> -Rompus(x)) & all y.(Max(y) -> Dumpus(y))) & all z.(Max(z) -> Wumpus(z)))", "(all x.(Max(x) -> -Rompus(x)) | (Max(x) -> Dumpus(x))) & (Max(x) -> Wumpus(x)))", "(all x.(Max(x) -> -Rompus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> Wumpus(x)))", "(all x.((Max(x) & -Rompus(x)) -> Dumpus(x)) & all y.((Max(y) & Wumpus(y)) -> Wumpus(y)))", "(all x.(Max(x) -> -rompus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> Wumpus(z))))"]}
{"id": "prontoqa_train_181", "nl": "Max is not an impus.", "fol": "-impus(Max)", "prediction": ["-IsEximposed(Max)", "(-Impossible(Max))", "(-Imposer(Max))", "Max is also not impus.", "and Max.", "-Impossible(Max)", "(-Impediment(Max))", "Max -Impose(Max)", "(-Impossible(Max))", "& Max & -Impossible(Max)", "-Impossible(Max)", "-Impossible(Max)", "-(Max(Max) & Is(Max,Executive))", "-Institutional(Max)", "NoImprovement(Max)", "-IsM Max(Max)"]}
{"id": "prontoqa_train_182", "nl": "Every numpus is a vumpus.", "fol": "all x. (numpus(x) -> vumpus(x))", "prediction": ["all x.(Numpus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Voompus(x))", "all x.(Nompus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Nompus(x) -> Vumpus(x))", "all x.(Humpus(x) -> (Vumpus(x) & NotMost(x)))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Nompus(x) -> Vumpus(x))", "all x.(Numerus(x) -> Luxus(x))", "all x.(Nompus(x) -> Vampus(x))", "all x.(Nompus(x) -> Ompus(x))"]}
{"id": "prontoqa_train_183", "nl": "Alex is a sterpus and Alex is a lorpus and Alex is not a vumpus.", "fol": "(sterpus(Alex) & lorpus(Alex) & -vumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Sterpus(y) & Lorpus(z)) -> ((Sterpus(x) & Loper(x) & -Vumpus(x))))", "all x.((Alex(x) & Sterpus(x)) | (Lorpus(x) & -Vimpus(x))))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Lorpus(y) & -Vumpus(x)))", "(all x.(Alex(x) -> Sterepus(x)) & (Alex(x) -> Lorpus(x)) & (Alex(x) -> -Vumpus(x)))", "all x.(Alex(x) -> ((Sterepus(x) | Lorpus(x)) & -Vumpus(x)))", "all x y.((Alex(x) & Sterpus(x)) -> (Lorpus(x) & -Vumpus(y)))", "all x y z.((Alex(x) & Sessrus(y) & Lion(z)) -> (Sterepus(x) & Lorpus(y) & -Vumpus(z)))", "all x y.((Alex(x) & Sterpus(x) & Lorpus(y)) -> (-Vumpus(x)))", "all x.(Alex(x) -> (Steerpus(x) & Loomis(x) & -Vuxpus(x)))", "all x y z.((Alex(x) & Sterpus(x) & Lorpus(y) & Vumpus(z)) -> (Stereo(x) & Lopus(y) & -Vimpus(z)))", "(exists x.(Alex(x) & Sterpus(x)) & exists y.(Lorpus(y) & -Vumpus(y))))", "(all x y z.(Alex(x) -> Sterpus(x)) & ((Alex(y) & X) & Y)) -> Lorpus(y)) & ((Alex(z) & -Vumpus(z))) -> Sterpus(y)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Lorpus(y) -> NoVimpus(y))))", "all x.(Alex(x) -> (Sterpus(x) | Lorpus(x) | -Vumpus(x)))", "(all x y z.(Alex(x) -> Sterpus(x)) & (Alex(y) -> Lorpus(y)) & (Alex(z) -> -Vumpus(z)))", "all x.((Alex(x) & Sterpus(x)) | (Alex(x) & Lorpus(x)) & -Vumpus(x)))"]}
{"id": "prontoqa_train_184", "nl": "Each yumpus is a sterpus.", "fol": "all x. (yumpus(x) -> sterpus(x))", "prediction": ["all x.(Yumpus(x) -> Sterops(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterus(x))", "all x.(Yumpus(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_185", "nl": "Rex is a jompus and Rex is not a sterpus and Rex is a grimpus.", "fol": "(jompus(Rex) & -sterpus(Rex) & grimpus(Rex))", "prediction": ["(all x.(Rex(x) -> Jompus(x)) & (-Sterepus(x) & -Sterpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Stroat(y) & -Sterpus(y))) & all z.(Grampus(z) -> -Stormy(z))))", "all x.((Rex(x) & Jompus(x) & -Sterepus(x)) -> Grimpus(x))", "all x.((Rex(x) & Jompus(x)) -> (-Stereopoid(x) & Gruffpus(x)))", "(all x.(Rox(x) -> Jompus(x)) & (Information(x) -> -Sterepus(x)) & Information(x) & Information(x)))", "all x y z.((Jompus(x) & Sterosenus(y) & Grimpus(z)) -> (Jompus(x) & -Sterpus(y) & Grimpus(z)))", "(all x.(Jompus(x) -> -Sterectus(x)) & (Rootpus(x) -> Grimpus(x)))", "(all x y z.((Rex(x) & Jompus(x)) -> InFragrance(x,y)) & ((Rex(z) & -Sterepus(z)) -> InFragrance(z)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex (x) -> -Sterpus(x))) & (Rex (x) -> Grimpus(x)))", "all x.(Rex(x) -> (Jimpus(x) & -Sterepus(x) & Grimpus(x)))", "all x.((Rex(x) & Jompus(x) & -Sterepus(x) & Grimpus(x)) -> AerialSpurpus(x))", "(all x.(Jompus(x) -> Rex)) & (-Sterpus(x) -> Rex)) & (Fragpus(x) -> Rex)))", "all x y.((Rex(x) & Jompus(x) & -Sterepus(y)) -> Gruppus(x))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> -Sterosen(x)) & (Rex(x) -> Grimpus(x)))", "(both x y.(Rex(x) & Jompus(x)) & (-Sterpus(y) & Grumpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> -Sterpus(x)) & (Rex(x) -> Grimpus(x))))"]}
{"id": "prontoqa_train_186", "nl": "Every numpus is a zumpus.", "fol": "all x. (numpus(x) -> zumpus(x))", "prediction": ["all x.(Numpus(x) -> Zumpus(x))", "iszumpus(x)", "all x.(Nompus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Nompus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zurpus(x))", "all x.(Nompus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.exists y.(Nompus(x) & Zumpus(y))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_187", "nl": "Stella is a rompus and Stella is not a zumpus and Stella is a grimpus.", "fol": "(rompus(Stella) & -zumpus(Stella) & grimpus(Stella))", "prediction": ["(all x.(Stella(x) -> Rompus(x)) & ((Stella(x) -> -Zumpus(x))) & ((Stella(x) -> Grimpus(x))))", "(all x.(Rome(x) -> Arompus) & (Zumpus(y) -> -Arompus(y)) & (Grisppus(y))))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Grimpus(x)))", "exists x.(Trompus(x) & Rompus(x) & -Zumpus(x) & Grimpus(x))", "all x y.((Stella(x) & Rompus(x)) -> (Rompus(x) | Stella(y) & -Zumpus(y)) | Stella(y)))", "(all x.(Rompus(x) & -Tumpus(x)) & (Salvia(x) | Salvia(x))))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Tompus(x)) & (Stella(x) -> Grimpus(x)))", "(all x.(Stella(x) -> Rumpus(x)) & (Stella(x) -> -Tommoth(x)) & (Stella(x) -> Cramp(x)))", "all x y z.((Stella(x) & Rompus(x) & Stella(y) & Grimpus(z)) -> (Rompus(x) & -Zumpus(y) & -Rompus(y) & -Surprise(z)))", "all x y z.((Rompus(x) & Zumpus(y) & Grouchpus(z)) -> (Rompus(x) & -Zumpus(y) & Grimpus(z)))", "(all x.(Rompus(x) -> Tomospheric(x)) & (Salta(x) -> -Tomospheric(x)) & (Salta(x) -> Grimpus(x)))", "(all x.((Stella(x) & Rompus(x)) -> NotTompus(x)) & all y.((Stella(y) & Grappa(y)) -> NotTompus(y)))", "all x.(Shelf(x) & ((Rompus(x) & -Zumpus(x)) | (-Rompus(x) & Grimpus(x))))", "all x y.((Stella(x) & Rompus(x)) -> -Zumpus(y)) & (Stella(x) -> Grimpus(z)))", "(all x y z.((Violet(x) & Rrompus(x) & NoViolet(y)) -> Rimpus(x)) & ((Violet(y) & -Zappus(y)) -> Grimpus(z)))", "(all x.(Rompus(x) -> Scarlett(x)) & all y.(Tompus(y) -> -Stompus(y))) & all z.(Scrumptus(z) -> (Plasmpus(z)))))"]}
{"id": "prontoqa_train_188", "nl": "Stella is not a numpus.", "fol": "-numpus(Stella)", "prediction": ["(-numpus(Stella))", "Stella ist -Numus(Stella))", "Stella is not a Numpus(Stella)", "Stella is notNumpus(s)", "Stella is -numpus(Stella))", "Stella is notnnumpus(x)", "Stella is not Numpus(Stella)", "all x.(Stella(x) -> -numpus(x))", "Stella is not a Numpus(Stella)", "Stella (nonumpus(z) | -Nompus(z)))", "-Tumpus(Stella)", "(-Numpus(Stella))", "-numpus(Stella)", "-Numpus(Stella)", "(-Numpus(Stella))", "Stella ist -Nompus(Stella)"]}
{"id": "prontoqa_train_189", "nl": "Vumpuses are impuses.", "fol": "all x. (vumpus(x) -> impus(x))", "prediction": ["all x.(Vumpus(x) -> Issue(x))", "all x.(Vumpus(x) -> Issue(x))", "all x.exists y.(Vumpus(x) & Impose(y) & -Impedex(x,y))", "all x.(Vumpus(x) -> Impenets(x))", "all x.(Vumpus(x) -> Isolate(x))", "all x.(Vumpus(x) -> Issues(x))", "all x.(Vumpuse(x) -> Issue(x))", "all x.(Vumpus(x) -> Issues(x))", "all x.(Vumpus(x) -> Issues(x))", "all x.(Vumpuse(x) -> Issues(x))", "all x.(Vumpus(x) -> Issue(x))", "all x.(Vumpus(x) -> Implize(x))", "all x.(Vumpus(x) -> Imperium(x))", "all x.(Vumpus(x) -> Issuee(x))", "all x.(Vumpus(x) -> Isolates(x))", "all x.(Vumpus(x) -> Issue(x))"]}
{"id": "prontoqa_train_190", "nl": "Rex is a dumpus and Rex is a rompus and Rex is not an impus.", "fol": "(dumpus(Rex) & rompus(Rex) & -impus(Rex))", "prediction": ["(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Rompus(x)) & (Rex(x) -> -Imposser(x)))", "exists x.(Dumpus(x) & Rompus(x) & -Islumination(x))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rex(y) -> Rompus(y)) & none of z.(Rex(z) -> Imperator(z))))", "(all x.(Rex(x) -> Dumpus(x)) & (Rompus(x) & -Ilpresa(x)))", "all x y.((Rex(x) & Dumpus(x) & Rompus(y)) -> -Impossible(x))", "(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Rompus(x)) & (Rex(x) -> -Implosessor(x))))", "(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Rompus(x)) & (Rex(x) -> -Impossible(x))))", "(all x.(Rex(x) -> Dumpus(x)) & (Rompus(x) & -Ilises(x)))", "(all x.(Rex(x) -> Dumpus(x)) & (Rompus(x) -> Rompus(x)) & -Impossionist(x)))", "(all x y z.(Dumpus(x) -> Dumpus(x)) & (Rompus(y) -> Tompus(y)) & -Impossible(z)))", "(all x.(Rex(x) -> Dumpus(x) & (Rompus(x) | Impermissible(x))))", "(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Rompus(x)) & -Ilises(x)))", "(all x.(Rex(x) -> Dumpus(x)) & (Rompus(x) & -Illegal(x)))", "all x y.((Rex(x) & Dump(x) & Rex(y)) -> (Rompus(y) & -Implementer(x)))", "(all x.(Dumpus(x) -> -IsDumpus(x)) & all y.(Rompus(y) -> (IsDumpus(y) & -IsIsImpossed(y))))", "(all x.(Rex(x) -> DumpusDumps(x)) & all y.(RompusDumps(y) -> RompusDumps(y))) & all z.(Rex(z) -> -ImpossibleDumps(z)))"]}
{"id": "prontoqa_train_191", "nl": "Numpuses are gorpuses.", "fol": "all x. (numpus(x) -> gorpus(x))", "prediction": ["all x.(Numpus(x) -> Gorpus(x))", "all x.(Nupuse(x) -> Gorpuse(x))", "all x.(Numpus(x) -> Gorpuse(x))", "all x.(Numpus(x) -> Gorpuse(x))", "all x.(Numpus(x) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpuse(x))", "all x.(Numpus(x) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpuse(x))", "all x.(Numpus(x) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpuse(x))", "all x.(Numpulus(x) -> Gorpa(x))", "all x.((Numpuse(x) & Gorpuse(x)) -> Gorpus(x))", "all x.(Numpuse(x) -> Gorpuse(x))", "all x.(Numpus(x) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpuse(x))", "all x.(Numpus(x) -> Gorpuse(x))"]}
{"id": "prontoqa_train_192", "nl": "Fae is a grimpus and Fae is a jompus and Fae is not a gorpus.", "fol": "(grimpus(Fae) & jompus(Fae) & -gorpus(Fae))", "prediction": ["(all x y z.(Fae(x) -> Grumpus(x)) & (Fae(y) -> Jompus(y)) & (Fae(z) -> -Gorpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Jompus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> -Gorpus(x)))", "all x y z.((Fae(x) & Grumpy(x) & Jompus(y) & -Gorpus(z)) -> (Grimpus(x) | Jompus(y) & -Grimpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & -Fae(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> -Gorpus(x)))", "(all x y.(Fae(x) -> Grimpus(x)) & (Fae(y) -> Jompus(y)) & (Fae(y) -> -Gorpus(y)))", "(all x.(Fae(x) -> Grypus(x)) & (Fae(x) -> Jompus(x)) & -Gorpus(x)))", "all x y z.((Fae(x) & Grimpus(x) & Jompus(y) & -Gorpus(z)) -> (Fae(x) & Grimpus(x) & Jompus(y) & -Gorpus(z)))", "all x y z.((Fae(x) & Gruppus(x) & Jompus(y) & -Gorpus(z)) -> (Fae(x) & Grimpus(x) & Jompus(y) & -Fae(z)))", "all x y.((Fae(x) & Grimpus(x) & Jompus(y) & -Gorpus(y)) -> (FaeIs(x,y) | FaeIs(x,y)))", "all x y z.((Fae(x) & Grimpus(x) & Jompus(y) & Numplose(z)) -> (Grimpus(x) & Jompus(y) & -Gorpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & -Gorpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & -Fae(x)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Jompus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "all x y z.((Fae(x) & Grimpus(x) & Jompus(y) & -Gorpus(z)) -> (Smooth(x) & Jompus(y) & -Jompus(z)))"]}
{"id": "prontoqa_train_193", "nl": "Shumpuses are tumpuses.", "fol": "all x. (shumpus(x) -> tumpus(x))", "prediction": ["all x.(Shumpus(x) -> Tumulus(x))", "all x.(Shumpus(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tumpus(x))", "all x.(Shupuse(x) -> Tumpus(x))", "all x.(Shupus(x) -> Tumpus(x))", "all x.(Shutus(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tumpus(x))", "all x.(Shampus(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tumpus(x))", "all x.(Shimpus(x) -> Tumpus(x))", "all x.(Shumpuse(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tambose(x))", "all x.(Sshumpuse(x) -> Tumulus(x))", "all x.(Shumpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_194", "nl": "Sam is a wumpus and Sam is a dumpus and Sam is not a tumpus.", "fol": "(wumpus(Sam) & dumpus(Sam) & -tumpus(Sam))", "prediction": ["exists x.(Rumor(x) & Wumpus(x) & Dumpus(x) & -Tumpus(x))", "all x.((Sam(x) & Wumpus(x) & Dumpus(x) & -Tumpus(x)) -> (Wumpus(x) & Dumpus(x)))", "(all x y.((Sam(x) & Humpus(x)) -> Tossup(x)) & ((Sam(y) & Dumpus(y))) -> -Tossup(y)))", "all x y z.((Sam(x) & Wumpus(x) & Dumpus(y)) -> (Atna(x,z) & -Tumpus(z)))", "all x y z.((Sam(x) & Wumpus(x) & Dumpus(y) & -Tumpus(z)) -> (AreWumpus(x) & AreDumpus(y) & AareTumpus(z)))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Tumpus(x)))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Tumpus(x)))", "all x y z.((Sam(x) & Wumpus(y) & Dumpus(z)) -> (Wumpus(x) & Dumpus(z) & -Tumpus(x)))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Tumpus(x)))", "(all x.(Wumpus(x)... & Dumpus(x)) -> -Tumpus(x))", "all x.(Sam(x) -> (Wumpus(x) & Dumpus(x) & -Tumpus(x)))", "all x y z.((Sam(x) & Wumpus(x) & Dumpus(y) & Tompus(z)) -> ((Wumpus(x) & Dumpus(y) & -Tumpus(z))))", "all x.((Sam(x) & Wumpus(x) & Dumpus(x)) -> -Tumpus(x))", "all x y z.((Sam(x) & Wumpus(y) & Dumpus(z)) -> (Wumpus(x) & Dumpus(z) & -Tumpus(x)))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Tumpus(x)))", "all x y.((Sam(x) & wumpus(x)) -> (Crush(x) & Dope(x) & -Tumpus(y)))"]}
{"id": "prontoqa_train_195", "nl": "Sam is not a shumpus.", "fol": "-shumpus(Sam)", "prediction": ["all x.(Sam(x) -> -Shumpus(x))", "all x.(Sam(x) -> -Shumpus(x))", "all x.(Sam(x) -> -Shumpus(x))", "all x.(Sam(x) -> -Shumpus(x))", "(-Shumpus(Sam))", "all x.(Sam(x) -> -Shumpus(x))", "all x.(Sam(x) -> -Shumpus(x))", "all x.(Sam(x) -> -Shumpus(x))", "all x.(Sam(x) -> -Shumpus(x))", "(-Shumpus(Sam))", "(-Shumpus(sam))", "All x.(Sam(x) -> -Shumpus(x))", "all x.(Sam(x) -> -Shumpus(x))", "(-Shampoo(Sam))", "all x.(Sam(x) -> -Shumpus(x))", "Sam is notShumpus(Sam)"]}
{"id": "prontoqa_train_196", "nl": "Every vumpus is a numpus.", "fol": "all x. (vumpus(x) -> numpus(x))", "prediction": ["all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))"]}
{"id": "prontoqa_train_197", "nl": "Polly is a lorpus and Polly is not a numpus and Polly is a tumpus.", "fol": "(lorpus(Polly) & -numpus(Polly) & tumpus(Polly))", "prediction": ["(all x y z.(Lorpus(x) & Loomis(y)) & (Nompus(z) & Numpus(z) & Tumpus(z)))", "(all x.(Polly(x) -> Loper(x)) & (Polly(x) -> -numpus(x)) & (Polly(x) -> Tumpus(x)))", "(all x y.((Lorpus(x) & Polly(y)) -> Lorpus(x)) & all z w.((Numpus(z) & Tumpus(w)) -> Tumpus(w)))", "all x y z.((Polly(x) & Lorpus(x) & Numpus(y) & Tumpus(z)) -> (Leaf(x) & Nompus(y) & Tumpus(z)))", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x,y) & -Numpus(y,z) & Tumpus(z)))", "(all x.(Lorph(x) -> Polly)) & (-Lumpus(x) -> Polly)) & (Tumpus(x) -> Polly)))", "(all x.(Polly(x) -> Lorequise(x)) & (Polly(x) -> -Numerus(x))) & (Polly(x) -> Tumpus(x)))", "all x y z.((Polly(x) & Lorps(y) & Polly(z)) -> (Lorph(x) & -Numpus(z) & Tumpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Tumpus(x))))", "all x y z.((Lorpus(x) & Stylized(y) & Pluto(z) & Polly(z)) -> (Lorpus(x) & -Volumpus(y) & Tumpus(z)))", "(all x y.(Lorpus(x) -> Larph(x)) & all z w.(Numpus(y) -> Numpus(z))) & (Tumpus(w) -> Mule(w)))", "(all x.(Lorpus(x) -> Polly)) & all y.(Nompus(y) -> Polly)) & all z.(Tumpus(z) -> Polly)))", "all x y z.((Polly(x) & Lorpus(x) & -Nompus(y) & Tumpus(z)) -> (Lorpus(x) & -Numpus(y) & -Tumpus(z)))", "all x y z.((Polly(x) & Lorpus(y) & -Numpus(z)) | (Tumpus(x) & Polly(x))))", "(all x.(Lorpus(x) -> Poultry)) & all y.(Numpus(y) -> Poultry(y)))", "all x y.(((Lorpus(x) & Numpus(y)) -> (Lorpus(x) | Tumpus(y)))"]}
{"id": "prontoqa_train_198", "nl": "Wren is a tumpus, Wren is a rompus, and Wren is not a sterpus.", "fol": "(tumpus(Wren) & rompus(Wren) & -sterpus(Wren))", "prediction": ["(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Steroid(x)))", "all x y z.((Wren(x) & Tumpus(y)) -> (Tumpus(x) | Rompus(y) & -Sterpus(z)))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Sterpus(x))))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Rompus(x)) & -Sterepus(x)))", "all x y z.((Wren(x) & Tompus(y) & Rompus(z)) -> (Tumpus(x) | Roompus(x) & -Sterpus(x)))", "(all x y.(Wren(x) -> Tumpus(x)) & (Rompus(y) & -Sterus(z))))", "all x y z.((Wren(x) & Rumpus(y) & Sterpus(z)) -> (Tumpus(x) & Rompus(y) & -Sterpus(z)))", "all x y z.((Wren(x) & Tumpus(x) & Rompus(y) & -Sterpus(z)) -> (Tumpus(x) & Rompus(y) & -Tumpus(z)))", "all x y z.((Wren(x) & Humpus(y) & Rompus(z)) -> (Tumpus(x) & Routus(y) & -Sterpus(z)))", "all x y z.((Wren(x) & Rumpus(y) & Sterpus(z)) -> (Tumpus(x) | Rompus(y) | -Therpus(z)))", "all x.((Wren(x) & Tumpus(x)) -> (Rompus(x) & -Sterpus(x)))", "all x y z.((Wren(x) & Tumpus(y) & Rompus(z)) -> (Tumpus(x) & Rompus(y) & -Sterpus(z)))", "(all x.(Wren(x) -> Tump(x)) & all y.((Wren(y) & Rompus(y))) -> Steros (y)))", "(all x.((Wren(x) & Tumpus(x)) -> Thumpus(x)) & all y.((Wren(y) & Rompus(y)) -> -Sterepus(y)))", "(all x.(Wren(x) -> Tumulus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Sterepus(z))))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Sterpus(x)))"]}
{"id": "prontoqa_train_199", "nl": "Wren is not a vumpus.", "fol": "-vumpus(Wren)", "prediction": ["(-Vumpus(Wren))", "(-Vumpus(Wren))", "the Wren(Wren)", "(-Vumpus(Wren))", "L\u2019esp\u00e8ce n\u2019est pas vumpus.", "-Vumpus(Wren)", "Wren is not a Vumpus.", "(-Vumpus(Wren))", "ALL x.(Wren(x) -> -Vimpus(x))", "NoVimpus(Wren)", "(-Vumpus(Wren))", "(-Vimpus(Wren))", "(All x.(Wren(x) -> -Vumpus(x)))", ".(Wren(x) & -Vumpus(x))", "all x.(Wren(x) -> -Vulmpus(x))", "all x.(Wren(x) -> -Vumpus(x))"]}
{"id": "prontoqa_train_200", "nl": "Wren is a sterpus and Wren is a jompus and Wren is not a numpus.", "fol": "(sterpus(Wren) & jompus(Wren) & -numpus(Wren))", "prediction": ["(all x y z.((Wren(x) & Sterepus(y)) -> Sterepus(x)) & ((Wren(z) & Jompus(z))) -> Nompus(z)))", "all x y z.((Wren(x) & Hornet(y) & Jompus(z) & -Numpus(x)) -> (Sterpus(x) & Jompus(y) & -Numpus(z)))", "(all x.(Wren(x) -> Sterpus(x)) & (Wren(x) -> Jompus(x)) & -Numpus(x)))", "(all x.(Wren(x) -> Sterpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> -Numpus(z))))", "all x y z.((Wren(x) & Sterepus(y) & Jompus(z)) -> (Stereo(x) & Jompus(y) & -Numpus(z)))", "(all x y.((Wren(x) & Sterpus(x)) -> Steerpus(x)) & ((Wren(y) & Jompus(y)) -> -Numpus(y)))", "all x y z.((Wren(x) & Sterpus(y) & Jompus(z)) -> (Sterpus(x) & Jompus(x) & -Nompus(x)))", "(all x.(Wren(x) -> Sterpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> -Numpus(z)))", "(all x y.(Wren(x) -> Sterpus(x)) & (Wren(y) -> Jompus(y)) & (Wren(y) -> -Numpus(y)))", "(all x.(Wren(x) -> Sterpus(x)) & (Jumpus(x) -> -Nompus(x)))", "all x y z.((Wren(x) & Sterpus(x) & Jompus(y) & -Numpus(z)) -> (Sterpus(x) & Jompus(y) & -Numpus(z)))", "all x y z.((Wren(x) & Sterpus(y) & Jompus(z)) -> (Strohl(x) & Jompus(z) & -Numpus(x)))", "all x y z.((Wren(x) & Sterpus(x) & Jompus(y) & Numpus(z)) -> (IsAsterpus(x) & IsArlington(y) & IsBerlington(z)))", "all x y z.((Wren(x) & Sterpus(y) & Jompus(z)) -> (OxygenDependent(x) & -Numpus(x)))", "all x y z.((Wren(x) & Sterpus(x) & Jompus(y) & -Numpus(z)) -> (Sterpus(x) & Jompus(y) & -Nompus(z)))", "all x y z.((Wren(x) & Sterpus(y) & Jompus(z)) -> (Sterpus(x) & Jompus(z) & -Numpus(x)))"]}
{"id": "prontoqa_train_201", "nl": "Wren is not a lempus.", "fol": "-lempus(Wren)", "prediction": [",Wren, of course, is not lempus(w) & exists z.(Individual(z) & InDimension(w,z)))", "all x.(Wren(x) -> -Lempus(x))", "all x.(Wren(x) -> -Lemmes(x))", "all x.(Wren(x) -> -Lempus(x))", "all x y.((Wren(x) & Lempus(y)) -> -Lempus(x))", "all x.(Wren(x) -> -Lempus(x))", "all x.(Wren(x) -> -Limesh(x))", "(-lempus(Wren))", "is a lempus.", "all x.(Wren(x) -> -Lempus(x))", "all x.(Wren(x) -> -Lempus(x))", "Wren is not a lempus.", "all x.(Wren(x) -> -Limpus(x))", "all x.(Wren(x) -> -Lempus(x))", "-Limepus(Wren)", "(-Lampus(Wren))"]}
{"id": "prontoqa_train_202", "nl": "Each rompus is a grimpus.", "fol": "all x. (rompus(x) -> grimpus(x))", "prediction": ["all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rospus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_203", "nl": "Polly is a wumpus and Polly is a gorpus and Polly is not a grimpus.", "fol": "(wumpus(Polly) & gorpus(Polly) & -grimpus(Polly))", "prediction": ["(all x y z.((Polly(x) & Bump(y)) -> Wasp(x)) & ((Polly(z) & Gorpus(z)) -> -Grimpus(z))))", "(all x y.((Polosy(x) & Wumpus(x)) -> Wumpus(x)) & ((Polosy(y) & Gorpus(y)) -> -Grimpus(y)))", "(all x y z.((Polly(x) & Winder(y) & Wumpus(z)) -> (Wumpus(x) & Gorpus(y)) & ((Polly(x) & Grimpus(z)) -> -Wumpus(x)))", "exists x y z.((Polly(x) & Wumpus(x) & Gorpus(y)) -> (Wumpus(x) & Polly(z) & -Grimpus(z)))", "all x y z.((Polly(x) & Wumpus(y) & Gorpus(z)) -> (Wumpus(x) & Gorpus(x,y) & -Grimmpus(x)))", "all x y z.((Polly(x) & Humpus(y) & Gorpus(z)) -> (IsWumpus(x) & IsGorpus(x) & IsNoGrimpus(x)))", "(all x y z.((Polly(x) & Wumpus(y) & Gorpus(z)) -> Wumpus(x)) & ((Polly(x) & Grimpus(z))) -> Gorpus(z)))", "all x y.((Polly(x) & Wumpus(y)) -> (Wumpus(x) & Gorpus(x) & -Crusk(x)))", "(all x.(Polly(x) -> Wompus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x))))", "all x y z.((Wumpus(x) & Polly(y) & Gorpus(z)) -> (Wumpus(x) & Gorpus(y) & -Grumpus(y)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Gorpus(x)) & -Polly(x)))", "(all x.(Polhy(x) -> Wumpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x))))", "all x y z.((Polli(x) & Wumpus(x) & Gorpus(y) & -Grimpus(z)) -> (Wumpus(x) & Gorpus(y) & -Grimpus(z)))", "all x.((Polly(x) & Wampus(x)) -> Gorpus(x)) & -Gruppus(x))", "all x y z.((Polly(x) & Wumpus(x) & Gorpus(y) & NoSmoothpus(z)) -> (Wumpus(x) & Gorpus(y)))", "(all x y.(Polly(x) -> Wumpus(x)) & (Polly(y) -> Gorpus(y)) & (Polly(y) -> -Grippus(y)))"]}
{"id": "prontoqa_train_204", "nl": "Polly is not a rompus.", "fol": "-rompus(Polly)", "prediction": ["all x y.((Polly(x) & Rompus(y)) -> -Of(x,y))", "Polly is notrompus.", "all x.((Pose(x) & -Rrompus(x)) -> Polly(x))", "all x.(Polly(x) -> -Rompus(x))", "Polly -Rompus(PloY)", "(-Rompus(Polly))", "all x.(Polly(x) -> -Rompus(x))", "all x.(Polly(x) -> -Rompus(x))", "(-Rompus(Polly))", "Polly is not a rompus.", "-Rompus(Polly)", "Polly is not a Rompus(Poly)", "(-Rompus(Polly))", "all x.((Polly(x) & -Rompus(x)) -> -rompus(x))", "(-Rompus(Plolly))", "-Rompus(Polly)"]}
{"id": "prontoqa_train_205", "nl": "Each gorpus is a lorpus.", "fol": "all x. (gorpus(x) -> lorpus(x))", "prediction": ["all x.(Gorpus(x) -> Lorpus(x))", "exists x.(Gorpus(x) & Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Loomis(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lordpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Loompus(x))", "all x.(Gorpus(x) -> Loomis(x))", "all x.(Gorpus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_206", "nl": "Sally is a brimpus, Sally is not a lorpus, and Sally is a yumpus.", "fol": "(brimpus(Sally) & -lorpus(Sally) & yumpus(Sally))", "prediction": ["all x y.((Sally(x) & Brimpus(x) & -Lorpus(y)) -> (Yumpus(x) & -Birmpus(x)))", "(all x.(Sally(x) -> Brimpus(x)) & (-Lorpus(x) & (Yumpus(x) | Brimpus(x)))))", "all x y z.((Sally(x) & Brimpus(x) & -Lorpus(y) & Yumpus(z)) -> (Brimpus(x) & Kumpus(x) & Yampus(x)))", "(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Lorpus(y))) & all z.(Sally(z) -> Yumpus(z)))", "(all x.(Sally(x) -> Brimpus(x)) & (-Lorpus(x) & (Yumpus(x) | -Bullflower(x)))))", "(all x.(Sally(x) -> Brimpus(x)) & (-Lorpus(x)) | (Yumpus(x) & Sally(x))))", "(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Yumpus(x)))", "(all x.(Sally(x) -> Brimpus(x)) & (-Lorpus(x) & -Yumpus(x))))", "(Brimpus(Sally) & -Lorpus(Sally) & Yumpus(Sally))", "all x y z.((Sally(x) & Brimpus(x) & Sally(y) & Lorpus(z)) -> (Brimpus(x) & -Lorpus(y) & Yumpus(y)))", "all x y.((Sally(x) & Brimpus(x) & -Lorpus(y)) -> Yumpus(z))", "all x y z.((Sally(x) & Brimpus(x) | -Lorpus(y) | Yumpus(z)))", "(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Lorpus(y))) & all z.(Sally(z) -> Yumpa(z)))", "(all x.(Sally(x) -> Brimpus(x)) & (NonLorpus(x) & Yampus(x)))", "(all x y z.((Sally(x) & Brimpus(x)) -> NoLorpus(x)) & ((Sally(y) & Yampus(z)) -> Yampus(y)))", "(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Lorpus(y))) & all z.(Sally(z) -> Yumpx)))"]}
{"id": "prontoqa_train_207", "nl": "Sally is not a gorpus.", "fol": "-gorpus(Sally)", "prediction": ["Sally is not a Gorpus.", "exists x.(Sally(x) & -Gorpus(x))", "Sally is not a Gorpus.", "Sally is not gorpus(Sally,y)", "all x.(Sally(x) -> -Gorpus(x))", "Sally is not a Gorpus.", "exists x.(Sally(x) & -Gorpus(x))", "-Gorpus(Sally)", "Sally is not a gorpus.", "Sally n'est pas Gorpus.", "Sally is not a Gorpus.", "Sally ist keine Gorpus(Sally)", "Sally is not a gorpus.", "Sally n'est pas Rippon(Sally)", "Sally is not a Gorpus.", "Sally ist kein Gorpus."]}
{"id": "prontoqa_train_208", "nl": "Each dumpus is a wumpus.", "fol": "all x. (dumpus(x) -> wumpus(x))", "prediction": ["all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumps(x) -> wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Twimpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "(all x.(Dumpus(x) -> Wumpus(x)))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_209", "nl": "Alex is not a wumpus and Alex is a lempus and Alex is a zumpus.", "fol": "(-wumpus(Alex) & lempus(Alex) & zumpus(Alex))", "prediction": ["all x.(Alex(x) -> (-Wumpus(x) & Lempus(x) & Zumpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(x) & Zumpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(y) & Zumpus(z)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(y) & Zumpus(x)))", "all x.(Alex(x) -> (-(Wumpus(x) | Lempus(x))) | Zumpus(x)))", "each & ((Alex(Alex) & -Wumpus(Alex)) | (Alex(Alex) & Lempus(Alex)) | (Alex(Alex) & Zumpus(Alex))))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Lempus(x)) & (Alex(x) -> Zumpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(x) & Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) | -Wumpus(y) & Zumpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y))) & all z.(Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(y) & Zumpus(z)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(y) & Zumpus(z)))", "(all x y.(Wumpus(x) -> -Wumpus(x)) & (Lempus(y) & Zumpus(y)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(x) & Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y))) & all z.(Alex(z) -> Zumpus(z))))"]}
{"id": "prontoqa_train_210", "nl": "Each lempus is a grimpus.", "fol": "all x. (lempus(x) -> grimpus(x))", "prediction": ["all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grupus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Limpus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Lumpus(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_211", "nl": "Max is a brimpus and Max is not a grimpus and Max is a zumpus.", "fol": "(brimpus(Max) & -grimpus(Max) & zumpus(Max))", "prediction": ["(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Grimpus(x)) & (Max(x) -> Zumpus(x)))", "all x y.((Max(x) & Grimpus(y)) -> (IsBrimpus(x) & -IsGrimps(y)) & IsTompus(x)))", "(BothExam(max) -> (Brimpus(max) | -Grimpus(max)) & Zumpus(max)))", "all x.(Max(x) -> (Brumpus(x) & -Grimpus(x) & Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (-Max(x) -> Grimpus(x)) & (-Max(x) -> Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (-Max(x) -> Grimpus(x)) & (Max(x) -> Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Grimpus(x)) & (Max(x) -> Zumpus(x)))", "(exists x.(Max(x) & Brimpus(x)) & exists y.(Max(y) & -Grimpus(y)))) & exists z.(Max(z) & Zumpus(z)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Grimpus(x)) & (Max(x) -> Zumpus(x))))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Grampus(x)) & (Max(x) -> Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & ((Max(x) -> -Grimpus(x))) & ((Max(x) -> Zumpus(x))))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Grimpus(x)) & (Max(x) -> Zumpus(x)))", "exists x.(Max(x) & Brimpus(x) & -Grimpus(x) & Zumpus(x))", "all x.((Max(x) & Brimpus(x)) -> (-Grimpus(x) & Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (-Max(x) -> Grimpus(x)) & (Max(x) -> Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (Grace(x) -> -Grimpus(x)) & (Zumpus(x) -> -Grace(x)))"]}
{"id": "prontoqa_train_212", "nl": "Sterpuses are shumpuses.", "fol": "all x. (sterpus(x) -> shumpus(x))", "prediction": ["all x.(Sterpus(x) -> Shumpus(x))", "all x.(Sterpus(x) -> Shumpus(x))", "all x.(Sterpus(x) -> Shumpus(x))", "all x.(Sterpus(x) -> Shumpus(x))", "all x.(Sturpus(x) -> Shumpus(x))", "all x.(Stupid(x) -> Shumpus(x))", "all x.(Sterpus(x) -> (Shumpte(x) & Squalose(x)))", "all x.(Sterpuse(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpuse(x))", "all x.(Sterpuse(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpus(x))", "all x.(SterpusElephant(x) -> ShumpusElephant(x))", "all x y.((Sterpuse(x) & Shumpus(y)) -> Sterpuse(x))", "all x.(Sterpuse(x) -> Snompus(x))", "all x.(Sterpus(x) -> Shumpus(x))", "all x.(Sterpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_213", "nl": "Polly is a brimpus, Polly is not a shumpus, and Polly is a yumpus.", "fol": "(brimpus(Polly) & -shumpus(Polly) & yumpus(Polly))", "prediction": ["all x y z.((Polly(x) & Brimpus(x) & Polly(y) & Yumpsum(z)) -> (-Shumpus(y) & -Brimpus(y) & Yampuch(z)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumps(x)))", "(all x y.((Polly(x) & Brimpus(x)) -> (NoShumpus(x) & NoShumpus(y))) & ((Polly(x) & Yumpus(y)) -> (Brimpus(x) & -Shumpus(y))))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Brimpus(x) -> Polly(x)) & all y.(Shumpus(y) -> Polly(y))) & all z.(Yumpus(z) -> Polly(z)))", "(all x y z.((Brimpus(x) & Polly(y) & Humpus(z)) -> Brimpus(y)) & ((Brimpus(y) & -Shumpus(y)) -> Yumpus(z)))", "(all x.(Polly(x) -> Brimpus(x)) & (Pool(x) -> -Shumpus(x)) & (Pool(x) -> Yumpus(x)))", "(all x.(Birmpus(x) -> Polly(x)) & all y.(Shumpus(y) -> Polly(y))) & all z.(Yumpus(z) -> Polly(z)))", "(all x.(Brimpus(x) -> Polly)) & (NoShumpus(x) -> Polly(x)) & (Yumpus(x) -> Polly)))", "(all x.(Brimpus(x) -> Polly(x)) & (-Shumpus(x) -> Polly(x)) & (Yumpus(x) -> Polly(x)))", "(all x.(Polly(x) -> Brimpus(x)) & all y.(Polly(y) -> -Shumpus(y)) & all z.(Polly(z) -> Yupus(z))))", "(all x.(Brimpus(x) -> Polly)) & (-Shumpus(x) -> Polly)) & (Yumpus(x) -> Polly)))", "(all x.(Brimpus(x) -> Polly(x)) & (-Shumpus(x) -> Polly(x)) & (Yumpus(x) -> Polly(x)))", "(all x.(Brimpus(x) -> Polly)) & ((Shumpus(x) & Polly(x)) -> Yumpus(x)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x)))", "all x y z.((Polly(x) & Brimpus(x) & Polly(y) & Humpus(z)) -> (-Shumpus(y) & Yumpus(z)))"]}
{"id": "prontoqa_train_214", "nl": "Polly is not a sterpus.", "fol": "-sterpus(Polly)", "prediction": ["(-Sterep(Polly))", "*(Polly(poly) & -Sterepus(poly))", "(-Sterepus(Polly))", "(-Sterpus(Polly))", "all x.(Polly(x) -> -Sterpus(x))", "all x.(Polly(x) -> -Sterpus(x))", "(exists x.(Polly(x) & -Sterpus(x)))", "(-Sterpus(Polly))", "(-Sterpus(Polly))", "all x.(Polly(x) -> -Sterpus(x))", "(-sterpus(Polly))", "Polly is notsterpus.", "all x.(Polly(x) -> -Sterpus(x))", "Polly is not sterpus.", "(-Steerpus(Polly))", "\u0440\u043e\u0441\u0440 \u0430 \u0443\u0435\u043e \u0440\u0435\u0435\u043d\u0438."]}
{"id": "prontoqa_train_215", "nl": "Each dumpus is a brimpus.", "fol": "all x. (dumpus(x) -> brimpus(x))", "prediction": ["all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_216", "nl": "Rex is a gorpus and Rex is not a brimpus and Rex is a lorpus.", "fol": "(gorpus(Rex) & -brimpus(Rex) & lorpus(Rex))", "prediction": ["(all x.(Gorpus(x) -> Rex)) & all y.(Brimpus(y) -> -Rex)) & all z.(Lorpus(z) -> Rex)))", "all x y.((Rix(x) & Gorpus(x) & Brimpus(y) & Lorpus(x)) -> (IsSleeper(x) & IsOdorpus(y)))", "(all x y.(Rose(x) -> Gorpus(x)) & (Brimpus(y) -> -Brimpus(y)) & (Lorpus(y) -> -Blimp(y)))", "(all x y z.((Rex) & Gorpus(x)) -> Is(x,y)) & ((Rex(z) & -Brimpus(z))) | (-Brimpus(z) & -Lorpus(z)))))", "(all x.(Rex(x) -> Gorpus(x)) & ((Rex(x) & -Brimpus(x))) -> Lorpus(x)))", "(all x y.(Rex(x) -> Gorpus(x)) & ((Rex(y) & -Blimp(y))) | (-Rose(y) & Lordpus(y)))))", "(all x.(Rex(x) -> Gorpus(x)) & (-Brimpus(x)) | (-Brimpus(x) & Lorpus(x))))", "(all x y z.(Rex(x) -> Gorpus(x)) & (Rex(y) -> -Brimpus(y)) & (Rex(z) -> Lorpus(z)))", "(all x.(Rex(x) -> Gorpus(x)) & (-Brimpus(x) & -Lorpus(x)))", "(((Rex) & Gorpus(x)) & -Brumpus(x) & Lorpus(x)))", "(all x.(Rex(x) -> Gorpus(x)) & (NotBrumpus(x) & -Lorpus(x)))", "(all x.(Rex(x) -> Gorpus(x)) & (-Brumpus(x) & -Lorpus(x)))", "(all x.(Rex(x) -> Gorpus(x)) & (-Brumpus(x) | Lorpus(x))))", "all x y.((Rex(x) & Gorpus(x)) -> (Gorpus(x) & -Brimpus(x) & -Lorpus(y)))", "(all x.(Gorpus(x) -> Gorpus)) & all y.(Brimpus(y) -> -Brimpus(y)) & all z.(Lorpus(z) -> Gorpus(z))))", "(all x.(Rex(x) & Gorpus(x)) & -Brimpus(x) & -Lorpus(x))"]}
{"id": "prontoqa_train_217", "nl": "Rex is not a dumpus.", "fol": "-dumpus(Rex)", "prediction": ["KeenDumpus(Rex)", "Rex is not a Dumpus.", "Rex is not Dumpus(Rex)", "Dex(Rex) -> -Dumpus(Rex))", "\u2013Dumpus(Rex)", "(-Dumpus(Rex))", "Rex -Dumpus(x)", "(-Dumpus(Rex))", "Rex is notDumps(x)", "All x.(Rex(x) -> -Dumpus(x))", "Rex is not a Dumpus(Rex)", "Rex -Dumpus(x)", "all x.(Rex(x) -> -Dumpus(x))", "all x.(Rex(x) -> -Dumpus(x))", "Rex is not a Dumpus(x)", "All x.(Rex(x) -> -Dumpus(x))"]}
{"id": "prontoqa_train_218", "nl": "Each tumpus is a lorpus.", "fol": "all x. (tumpus(x) -> lorpus(x))", "prediction": ["all x.(Tumpus(x) -> Lordus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lordpus(x))", "all x.(Tumpus(x) -> Lord(x))", "all x.(Tumpus(x) -> Lemur(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x y.((Tumpus(x) & Lark(y)) -> (Lorpus(x) & -Tumpus(y)))", "all x.(Tumpus(x) -> Lambus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Thumpus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_219", "nl": "Stella is not a lorpus, Stella is a yumpus, and Stella is a wumpus.", "fol": "(-lorpus(Stella) & yumpus(Stella) & wumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Lorpus(x)) & all y.(Stella(y) -> Chumpus(y))) & all z.(Stella(z) -> Wumpus(z)))", "all x.((Stella(x) & -Lorph(x)) -> (Yumpus(x) & Wumpus(x)))", "(all x.(Stella(x) -> -Lorpus(x)) & (Stella(x) -> Yumpos(x)) & (Stella(x) -> Wumpus(x)))", "(all x y z.((Foliose(x) & Lorpus(y)) -> -Lorpus(x)) & ((Foliose(z) & Yupse(z))) -> Wumpus(z)))", "(all x.(Stella(x) -> -Lorpus(x)) & all y.(Stella(y) -> Yumpus(y)) & all z.(Stella(z) -> Wumpus(z)))", "(all x.(Lorpus(x) -> -Lorpus(x)) & (Yumpus(x) | Wumpus(x)))", "(all x.(Stella(x) -> -Lorpus(x)) & (Yumpus(x) & Wumpus(x)))", "(all x.(Evolution(x) -> -Lorpus(x)) & (Evolution(x) -> Yupse(x))) & (Evolution(x) -> Humpus(x)))", "all x y z.((Lorpus(x) & Yampus(y) & Wumpus(z)) -> (-Lorpus(x) & Mystic(y) & Mystic(z)))", "(all x.(Stella(x) -> -Lorpus(x)) & (Yumpus(x) | Wumpus(x))))", "(all x.(Stella(x) -> -Lorpus(x)) & (Stella(x) ->Yumpus(x)) & (Stella(x) -> Wumpus(x)))", "(all x.(Lorpus(x) -> -Lorpus(x)) & all y.(Yumpus(y) -> Wumpus(y)))", "(all x.(Lorpus(x) -> -Lorpus(x)) & all y.(Yumpus(y) -> -Lorpus(y)) & all z.(Wumpus(z) -> -Lorpus(z))))", "(all x.(Lorpus(x) -> -Lorpus(x)) & all y.(Yumpus(y) -> -Lorpus(y))) & all z.(Wumpus(z) -> (Wumpus(z))))", "all x y z.((Stella(x) & Yompus(y) & Wumpus(z)) -> (-Llorps(x) & -Yumpus(y) & -Stella(z)))", "all x y z.((Stella(x) & Lorpus(y) & Yumpa(z)) -> (-Lorpus(x) & Yumpa(x) & Wumpus(x)))"]}
{"id": "prontoqa_train_220", "nl": "Stella is not a tumpus.", "fol": "-tumpus(Stella)", "prediction": ["Stella is not a Tumpus(Stella)", "(-Tumpus(Stella))", "Stella is -Tumpus( Stella)", "All x.(Stella(x) -> -Tumpus(x))", "Stella & -Tumpus(Stella))", "Stella is not tumpus.", "Stella is not Tumpus(Stella).", "Stella is not a Tumpus.", "exists x.(Stella(x) & -Tumpus(x))", "Stella is also not tumpus.", "In fact, Stella is not tumpus.", "All x.(Stella(x) -> NotTumpus(x))", "Stella is not a tumpus.", "all x.(Stella(x) -> -Tumpus(x))", "Stella is notTumpus(Stella)", "(-Tumpus(Stella))"]}
{"id": "prontoqa_train_221", "nl": "Brimpuses are numpuses.", "fol": "all x. (brimpus(x) -> numpus(x))", "prediction": ["all x.(Brimpus(x) -> Numpuse(x))", "all x.(Brompus(x) -> Numpuse(x))", "all x.(Brimpus(x) -> Numpus(x))", "all x.(Brumpuse(x) -> Numpuse(x))", "all x.(Brimpus(x) -> Numpus(x))", "all x.(Brimpus(x) -> Numpus(x))", "all x.(Brompus(x) -> Numpus(x))", "all x.(Brompus(x) -> Numpus(x))", "all x.(Brimpus(x) -> Numpus(x))", "all x.(Brimpuse(x) -> Numpuse(x))", "all x.(Brimpus(x) -> Numpuse(x))", "all x.(Brimus(x) -> Numpus(x))", "all x.(Brimpuse(x) -> Numpuse(x))", "all x.(Brivet(x) -> Numpus(x))", "all x.(Brimpus(x) -> Numpus(x))", "all x.(Brimpuse(x) -> Numpuse(x))"]}
{"id": "prontoqa_train_222", "nl": "Stella is a lempus and Stella is not a numpus and Stella is a dumpus.", "fol": "(lempus(Stella) & -numpus(Stella) & dumpus(Stella))", "prediction": ["(all x y.(Lempus(x) -> Stella(x))) & (Numpus(y) -> -Stella(y)) | Dumpus(y)))", "all x y z.((Stella(x) & Number(y) & Numpus(z)) -> (Lempus(x) & -Numpus(x) & Dumpus(x)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Numpus(x)) & (Stella(x) -> Dumpus(x)))", "(all x y.((Limpus(x) & Lempus(y)) -> Unbelievable(x)) & ((Number(y) & Numpus(y)) -> -Dumpus(y)))", "(all x.(Lampus(x) -> Stella)) & (-Numpus(x) -> Stella)) & (Dumpus(x) -> Stella)))", "(all x.(Lempus(x) -> Stella(x)) & (Numpus(x) -> Stella(x)) & (Dumpus(x) -> Stella(x)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Numpus(x)) & (Stella(x) -> Dumpus(x)))", "(all x.(Lempus(x) -> Stella)) & all y.(Nompus(y) -> Stella(y))) & all z.(Dumpus(z) -> Stella)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Numpus(x)) & (Stella(x) -> Dumpus(x)))", "(all x y z.(Lempus(x) -> Stella)) & (Numpus(y) -> Stella(z))) & (Dumpus(z) -> Stella)))", "(all x.(Lempus(x) -> Stella)) & all y.(Pumpus(y) -> Stella))) & (NotNompus(y) -> Stella(y)))", "all x y z.((Tale(x) & Stella(y) & Numpus(z)) -> (Lempus(x) & Numpus(y) & Dumpus(z)))", "(all x y z.((Stella(x) & Lempus(x)) -> (Lempus(x) & -Numpus(y) & Dumpus(z)))", "all x.(Stella(x) -> (Lempus(x) & -Numpus(x) & -Dumps(x)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Number(x)) & (Stella(x) -> Dumpus(x)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Numpus(x)) & (Stella(x) -> Dumpus(x))))"]}
{"id": "prontoqa_train_223", "nl": "Stella is not a brimpus.", "fol": "-brimpus(Stella)", "prediction": ["-Bronze-Pipe(Stella)", "(-Blimps(Stella))", "Stella is not a Brimpus.", "all x.(Stella(x) -> -Brimpus(x))", "-Brumpus(Stella)", "all x.(Stella(x) -> -Briumpus(x))", "and the brimpus.", "Stella is not a Brimpus(a)", "Stella is not a Brimpus(Stella)", "(-Brumpus(Stella))", "Stella -Brimpus(Stella))", "Stella & -Brumpus(Stella)", "Stella ist -Brumpus(Stella))", "all x.(Stella(x) -> -Brumpus(x))", "-Brumpus(Stella)", "Stella is not a Brimpus(Stella)"]}
{"id": "prontoqa_train_224", "nl": "Max is a yumpus, Max is a shumpus, and Max is not an impus.", "fol": "(yumpus(Max) & shumpus(Max) & -impus(Max))", "prediction": ["all x y.((Max(x) & Yumpus(x)) -> (Shumpus(x) & -Oppose(y)))", "(all x.(Max(x) -> Yampus(x)) & (Max(x) -> Humpus(x)) & (Max(x) -> Impossible(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Humpus(y))) & all z.(Max(z) -> -Imposter(z))))", "(all x.(Max(x) -> Yupse(x)) & all y.(Max(y) -> Humpus(y)) & all z.(Max(z) -> Shimpus(z))) & all w.(Max(w) -> -Improver(w)))", "(all x.(Max(x) -> Yang(x)) & (Max(x) -> Humpus(x)) & (Max(x) -> Practicist(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Humpus(y)) & all z.(Max(z) -> -Illumination(z))))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Humpus(x)) & (Max(x) -> -Imploser(x))))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Humpus(y)) & all z.(Max(z) -> -Imperial(z))))", "all x y z.((Max(x) & Yumpus(y) & Humpus(z)) -> (Yumpus(x) & Shumpus(x) & -Impossible(x)))", "(all x.(Max(x) -> Yampus(x)) & all y.(Max(y) -> Humpus(y)) & all z.(Max(z) -> Imperator(z))))", "(all x.(Max(x) -> Yumpy(x)) & (Max(x) -> Humpus(x)) & (Max(x) -> -Imposser(x))))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Humpus(y)) & all z.(Max(z) -> -Impossible(z)))", "(all x.(Max(x) -> Young(x)) & (Max(x) -> Shumpus(x)) & -Impossible(x)))", "(all x y z.(Max(x) -> Yampus(x)) & (Max(y) -> Humpus(y)) & (Max(z) -> Implicator(z))))", "(all x.(Max(x) -> Yumbos(x)) & all y.(Max(y) -> Shumpos(y))) & all z.(Max(z) -> -Illegal(z))))", "all x y.((Max(x) & Yumpus(x)) -> (Max(y) & Humpus(y) & -Imposer(x)))"]}
{"id": "prontoqa_train_225", "nl": "Max is not a numpus.", "fol": "-numpus(Max)", "prediction": ["all x.(Max(x) -> -Numpus(x))", "-(numpus(Max))", "-numpus(Max)", "(-> -Numpus(Max))", "(-numpus(Max))", "all x.(Max(x) -> (-numpus(x)))", "-Numbus(Max)", "-Number(Max)", "Alles x.(Max(x) -> -Numpus(x))", "All x.(Max(x) -> -Numpus(x))", "-Numptus(Max)", "all x.(Max(x) -> -Numpus(x))", "-Numpus(Max)", "(Number(Max) -Numpus(Max))", "-numpus(Max)", "Max -Numpus(Max)"]}
{"id": "prontoqa_train_226", "nl": "Each vumpus is a brimpus.", "fol": "all x. (vumpus(x) -> brimpus(x))", "prediction": ["all xy.((Vumpus(x) & Brimpus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Muxus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vuze(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_227", "nl": "Wren is a jompus, Wren is a tumpus, and Wren is not a brimpus.", "fol": "(jompus(Wren) & tumpus(Wren) & -brimpus(Wren))", "prediction": ["(all x y z.((Wren(x) & Jompus(x) & Tumpus(y)) -> (Wren(z) & -Brimpus(z))))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "(all x.(Wren(x) -> Jompus(x)) & ((Wren(x) -> Tumpus(x))) & ((Wren(x) -> -Brimpus(x))))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumulus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "(all x y z.((Winner(x) & Jompus(y) & Thorn(z)) -> (Jomesh(x) | Tumpus(z)) | -Brimpus(x)))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Brimpus(x))))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Tompus(x)) & (Wren(x) -> -Brimpus(x)))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y)) & -Brimpus(x)))", "(all x.(Wren(x) -> Jompus(x)) & all y.((Wren(y) & Tumpus(y))) -> -Brumpus(y)))", "(all x.(Wren(x) -> Jompus(x)) & ((Wren(x) -> Tumpus(x))) & ((Wren(x) -> -Brimpus(x))))", "(all x.(Wren(x) -> Jompus(x)) & ((Wren(x) -> Tumpus(x))) | (Wren(x) -> -Brimpus(x))))", "all x y z.((Wren(x) & Jompus(y) & Tumpus(z)) -> (Alright(x,y) & Athol(x,z) & -Brimpus(x)))", "(all x y z.(Wren(x) -> Yompus(x)) & (Wren(y) -> Tumpus(y)) & (-Wren(z) -> Brimpus(z))))", "(Wren) -> (Jompus(Wren) | Tumpus(Wren) | -Brimpus(Wren)))", "(exists x.(Wren(x) & Jompus(x)) & exists y.(Wren(y) & Tumpus(y)) & exists z.(Wren(z) & -Brimpus(z))))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Totumpus(x)) & (Wren(x) -> -Brimpus(x)))"]}
{"id": "prontoqa_train_228", "nl": "Each sterpus is a jompus.", "fol": "all x. (sterpus(x) -> jompus(x))", "prediction": ["all x.(Steerpus(x) -> Jompus(x))", "all x.(Sterepus(x) -> Jompus(x))", "all x.(Steerpus(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "all x.(Sterepus(x) -> Jompus(x))", "all x.(Starp(x) -> Jompus(x))", "all x.(Steerpus(x) -> Jompus(x))", "all x.(Steerpus(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "all x y.((Sterpus(x) & Sensei(y)) -> Jompus(x))"]}
{"id": "prontoqa_train_229", "nl": "Polly is not a jompus, Polly is a lempus, and Polly is a rompus.", "fol": "(-jompus(Polly) & lempus(Polly) & rompus(Polly))", "prediction": ["all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Polly(x) & -Polly(x) & -Pompus(y) & Rigorous(z)))", "(all x y z w.(Poly(x) -> (-Jompus(x) & -Lempus(y))) & (Poly(z) -> Crompus(z))))", "(all x y z.((Polly(x) & Jompus(y)) -> -Pols(x,y)) & ((Polly(x) & Lempus(z)) -> Plas(z))))", "ALL x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Jompus(x) & Lempus(x) & Rompus(x)))", "all x y z.((Poly(x) & Jompus(y) & Lempus(z)) -> (-Jompus(x) | Lempus(x) & Rompus(x)))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Jompus(x) & -Limpus(y) & -Rompus(z)))", "(all x.(Polly(x) -> -Jompus(x)) & (Lempus(x) -> Polly(x))) & (Rompus(x) -> Polly(x)))", "(all x.(Polly(x) -> -Jompus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Rompus(z))))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z) & Rompus(x)) -> (-Pompus(x) & -Lempus(x) & -Pompus(y)))", "(all x.(Polly(x) -> -Jompus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Rompus(x)))", "(all x y.((Polly(x) & Osmanipah(y)) -> -Jompus(x)) & ((Polly(x) & Osmanipah(y)) -> Lempus(x)) & ((Polly(x) & Osmanipah(y)) -> Rompus(y)))", "(all x.(Plompus(x) -> -Jompus(x)) & all y.(Lempus(y) -> Retina(y))) & all z.(Rumps(z) -> Retina(z)))", "(all x.(Polly(x) -> -Jompus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Rompus(x)))", "(all x.(Polly(x) -> -Jompus(x)) & (Pollly(x) -> Lempus(x)) & (Polly(x) -> Rompus(x)))", "(all x.(Poly(x) -> -Jompus(x)) & all y.(Poly(y) -> Lempus(y)) & all z.(Poly(z) -> Rompus(z))))", "(all x.(Polly(x) -> -Jompus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Romanpus(x)))"]}
{"id": "prontoqa_train_230", "nl": "Vumpuses are numpuses.", "fol": "all x. (vumpus(x) -> numpus(x))", "prediction": ["all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpuse(x) -> Numpuse(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpuse(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpuse(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))"]}
{"id": "prontoqa_train_231", "nl": "Stella is not a numpus, Stella is a shumpus, and Stella is a sterpus.", "fol": "(-numpus(Stella) & shumpus(Stella) & sterpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) & Sterpus(y)))", "(all x.(Stella(x) -> -Numpus(x)) & (Shumpus(x) | Sterotus(x))))", "(all x.(Stereo(x) -> -Numpus(x)) & all y.(Shumpus(y) -> Sparrow(z))))", "all x y z.((Stella(x) & Numpus(y) & Shumpus(z)) -> (-Numpus(x) & -Sterpus(x)))", "(all x.(Stella(x) -> -Numpus(x)) & (Shumpus(x) | Sterpus(x)))", "(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) -> Sterpus(y)))", "(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) -> Sterpus(y))))", "(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) -> Steerpus(x)))", "(all x y z.((Stella(x) & Numpus(y) & Shumpus(z)) -> -Number(x)) & ((Stella(x) & Sterpus(x)) -> Sterpus(x)))", "(all x.(Stella(x) -> -Numpus(x)) & (Shumpus(x) | Sterpus(x))))", "all x y z.((Stella(x) & Nimmu(y) & Shumpus(z)) -> (-Numpus(x) | Sterpus(x)))", "(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) -> Sterpus(y)))", "(all x.(Silenta(x) -> -Numpus(x)) & all y.(Shumpus(y) & Sterpus(y)))", "(all x.(Stella(x) -> -Numpus(x)) & (Shumpus(x) & Sterpus(x))))", "(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) -> Sterpus(y)))", "all x y z.((Stella(x) & Numpus(y) & Shumpus(z)) -> (-Numpus(x) & Sterpus(y) & Steerpus(z)))"]}
{"id": "prontoqa_train_232", "nl": "Stella is not a vumpus.", "fol": "-vumpus(Stella)", "prediction": ["Stella is not a Vumpus.", "all x y.((Stella(x) & Vumpus(y)) -> -Roud(z))", "(-Vumpus(Stella))", "Stella is not a vumpus.", "Stella is not a vumpus.", "Stella is not a vumpus(Stella)", "Stella is not a vumpus.", "-Vumpus(Stella)", "Stella -Vumpus(s)", "Stella, has no vumpus (y.(Mountain(x) | Mountain(y)))", "all x.(Stella(x) -> -Vumpus(x))", "(-Vimpus(Stella))", "Stella is -Vumpus(Solva)", "-Vumpus(Stella)", "Stella is not a vumpus.", "(-Vumpus(Stella))"]}
{"id": "prontoqa_train_233", "nl": "Each wumpus is a grimpus.", "fol": "all x. (wumpus(x) -> grimpus(x))", "prediction": ["all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "exists x.(Wumpus(x) & Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Gruppus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Gruppus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grypsum(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_234", "nl": "Polly is a lorpus and Polly is a numpus and Polly is not a grimpus.", "fol": "(lorpus(Polly) & numpus(Polly) & -grimpus(Polly))", "prediction": ["Polly is a lorpus and Polly is a numpus and Polly is -Grimpus.", "(all x.(Lorph(x) -> Polly(x)) & all y.(Numpus(y) -> Polly(y)) & all z.(Fragpus(z) -> -Scrappus(z))))", "all x.((Polly(x) & Lure(x) & Numpus(x) & -Grimpus(x)) -> Polly(x))", "(all x y.(Lorph(x) -> Polly)) & (Numpus(y) -> Polly)) & (Drumpus(y) -> -Palmpus(y)))", "(all x y.(Lorpus(x) -> Polly(y)) & (Nompus(y) -> Polly)) & (Grimpus(y) | -Grimpus(y)))", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & Numpus(y) & -Grimppus(z)))", "(all x y z.(Polly(x) -> Lorpus(x)) & (Polly(y) -> Numpus(y)) & (Polly(z) -> -Grimpus(z))))", "(exists x.(Lorpus(x) & Nompus(x)) & exists y.(Grimpus(y) & -Lorpus(y)))", "all x y z.((Polly(x) & Lorpus(y) & (Nompus(z) | Grimpus(z))) -> (Lorpus(x,y) | Numpus(z) | -Grampus(z))))", "all x.(Lorpus(x) & Nompus(x) & -Grimpus(x))", "(all x.(Pollly(x) -> Lorpus(x)) & (Polly(x) -> Numpus(x)) & (Polly(x) -> Nompus(x)))", "all x y z.((Polly(x) & Lorpus(x) & Numpus(y) & Polly(z)) -> (Lorpus(x) & Numpus(y) & -Smoothpus(z)))", "exists x.(Polly(x) & (Lorpus(x) | Numpus(x) | -Grimpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & Numpus(y) & -Grimpus(z)))", "(all x.(Polly(x) -> Lompus(x)) & (Polly(x) -> Numpus(x)) & (Polly(x) -> -Grimpus(x)))", "(all x.(Plover(x) -> Lorpus(x)) & (Plover(x) -> Numpus(x)) & -Grimpus(x)))"]}
{"id": "prontoqa_train_235", "nl": "Rex is not a grimpus and Rex is a rompus and Rex is a lorpus.", "fol": "(-grimpus(Rex) & rompus(Rex) & lorpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Grimpus(x)) & (Rex(x) -> Rompus(x)) & (Rex(x) -> Lorpus(x))))", "all x.((Rex(x) & NotGrimpus(x) & Rompus(x) & Lorpus(x)) -> -Grimpus(x))", "(all x.(Rex(x) -> -Grimpus(x)) & All y.((Rompus(y) & Lorpus(y))) -> -Grimpus(y)) & ((Cropus(y) & Rumpus(y)) -> Lorpus(y)))", "(all x y z.((Grimpus(x) & Rimpus(y) & Lorpus(z)) -> NotGrimpus(x)) & ((Grimpus(y) & Rumpus(y)) | (Lorpus(y) & -Grimpus(y))))", "(all x.(Rex(x) -> -Grimpus(x)) & (Rompus(x) | Lorpus(x))))", "(all x y.(Crual(x) -> -Cruc(x)) & (Rompus(y) -> -Cruc(y)) & (Lorpus(y) -> -Corpus(y)))", "(all x.(Rex(x) -> NoGrimpus(x)) & all y.(Rompus(y) & -Rompus(y)) & all z.(Lorpus(z) -> -Grimpus(x))))", "(all x.(Rex(x) -> -Grimpus(x)) & (Rompus(x) & -Lorpus(x))))", "all x y.((Rex(x) & Grimpus(y) & Rompus(y)) -> (-Rumpus(x) & Lorpus(x)))", "(all x.(Rex(x) -> -Grimpus(x)) -Rompus(x) & all y.(Rompus(y) -> Lorpus(y)))", "(all x.(Rex(x) -> -Grimpus(x)) & (Rompus(x) & Lopus(x)))", "(all x.(Rex(x) -> NoGrimpus(x)) & ((Rex(x) & Rompus(x))) | (Rex(x) & Lorpus(x))))", "(all x.((Rex(x) & -Grimpus(x)) -> IsRompus(x)) & all y.((Rex(y) & IsLorpus(y)) -> -IsGrimpus(y)))", "(all x.(Rex(x) -> (-Grampus(x) & -Rompus(x))) & (Rex(x) -> Lorpus(x)))", "(all x.(Rx(x) -> -Grimpus(x)) & (Rompus(x) & Lorpus(x)))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Rompus(y) & AllLorpus(y))))"]}
{"id": "prontoqa_train_236", "nl": "Every vumpus is a lorpus.", "fol": "all x. (vumpus(x) -> lorpus(x))", "prediction": ["all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Torpedo(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Liepus(x))", "all x.(Vimpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Loomis(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "exists x.(Vumpus(x) & Lorompus(x))", "all x y.((Vumpus(x) & Lorpus(y)) -> IsVumpus(x,y))"]}
{"id": "prontoqa_train_237", "nl": "Polly is not a lorpus and Polly is a wumpus and Polly is a grimpus.", "fol": "(-lorpus(Polly) & wumpus(Polly) & grimpus(Polly))", "prediction": ["(all x.(Polly(x) -> NoLorpus(x)) & all y.(Polly(y) -> Wumpus(y))) & all z.(Polly(z) -> Grimpus(z)))", "all x y z.((Lorph(x) & Polly(y) & Wumpus(z) & Plumpus(z)) -> (-Lorph(x) & -Wumpus(y) & Farripsh(z)))", "all x y z.((Polly(x) & Lorpus(y) & Wumpus(z)) -> (-Lorpus(x) & Wumpus(y) & Grimpus(z)))", "(all x.(Polly(x) -> -Lorpus(x)) & (Polly(x) -> Wumpus(x)) & (Polly(x) -> Grimpus(x))))", "(all x.(Polly(x) -> -Lorph(x)) & (Polly(x) -> Wampus(x)) & (Polly(x) -> Grimpus(x))))", "exists x.(Polly(x) & -Lorpus(x) & Wumpus(x) & Grimpus(x))", "(all x y.((Polly(x) & -Lorpus(x)) -> -Organism(x)) & ((Polly(y) | Grimpus(y))) -> Organisation(z)))", "(all x.(Polly(x) -> -Lorpus(x)) & (Polly(x) -> Hush(x)) & (Polly(x) -> Gruffen(x))))", "(all x.(Leonard(x) -> -Lorpus(x)) & (Wumpus(x) -> Plumpus(x)))", "(all x.(Polly(x) -> -Lorpus(x)) & all y.(Polly(y) -> Wumpus(y)) & all z.(Polly(z) -> Grimpus(z))))", "exists x y.(Polly(x) & -Lorpus(x) & Polly(y) & -Wumpus(y) & Plumpus(y))", "all x y z.((Polly(x) & Loper(y) & Wumpus(z)) -> (-Lorph(x) & (Wumpus(y) | Grumpy(z))))", "all x.((Poly(x) & -Lorpus(x)) -> (Wumpus(x) & Gruppus(x)))", "(all x y.((Polly(x) & -Lorpus(x) & Polly(y)) -> Wumpus(y)) & all z w.((Polly(z) & -Lorpus(w)) -> Grimpus(z)))", "(all x.(Polly(x) -> -Lorpus(x)) & all y.(Polly(y) -> Wumpus(y)) & all z.(Poly(z) -> Grimpus(z)))", "(all x y.(Lorpus(x) & -Lorpus(x)) & (Wumpus(y) & Grimpus(y)))"]}
{"id": "prontoqa_train_238", "nl": "Sally is a tumpus, Sally is not a rompus, and Sally is an impus.", "fol": "(tumpus(Sally) & -rompus(Sally) & impus(Sally))", "prediction": ["(all x.(Sally(x) -> Tumpus(x)) & (-Sally(x) -> Rompus(x)) & (-Sally(x) -> Impermissible(x))))", "(all x.(Sally(x) -> Tumpus(x)) & (-Sally(x) -> Rompus(x)) & ((Sally(x) & Imperium(x))))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x) & (Sally(x) -> Impossible(x))))", "(all x.(Sally(x) -> Tumpus(x)) & all y.((Sally(y) & -Rompus(y)) -> Imperator(y)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> -Rompus(y))) & all z.(Sally(z) -> Imperator(z))))", "(all x y.((Sally(x) & Rumpus(y)) -> Tumpus(x)) & ((Sally(x) & -rompus(x)) -> Impossible(x)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) | -rompus(x))) & (Sally(x) -> Imperia(x)))", "all x y.((Sally(x) & Tumpus(x)) -> (-Rompus(y) & Ilias(x)))", "all x y z.((Sally(x) & Tumpus(x) & Rompus(y) & Imperator(z)) -> (Tumpus(x) & -rompus(y) & Imperator(z)))", "(exists x.(Sally(x) & Tumpus(x)) & -Rome(x) & -Impossible(x))", "(all x.(Sally(x) -> Tumpus(x)) & (-Rompus(x) & (Impossible(x) | Impossible(x))))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x)) & (Sally(x) -> Issue(x)))", "all x y z.((Sally(x) & Tumpus(y) & Rompus(z)) -> (Tumpus(x) | -Rompus(x) | Imperator(x)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x)) & (Sally(x) -> Imperator(x)))", "all x y z.((Sally(x) & Tompus(y) & Romanus(z)) -> (Tumpus(x) & -Rompus(x) & Ceromant(x)))", "(all x.(Sally(x) -> Tumpus(x)) & (-Tumpus(x) & -Rompus(x)) & (-Rompus(x) & -Issue(x))))"]}
{"id": "prontoqa_train_239", "nl": "Each yumpus is a vumpus.", "fol": "all x. (yumpus(x) -> vumpus(x))", "prediction": ["all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> vumpus(x))", "all x.(Yumpus(x) -> Uzumi(x))", "all x.(Yumpus(x) -> Vimpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "exists x.(Yumpus(x) & Vumpus(x))", "exists x.(Yumpus(x) & Kumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vummus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "exists x.(Yumpus(x) & Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vulpu(x))", "all x.(Yumpus(x) -> V\u00fcmpus(x))", "all x.(Yumpus(x) -> Vampus(x))"]}
{"id": "prontoqa_train_240", "nl": "Stella is not a vumpus, Stella is a sterpus, and Stella is a shumpus.", "fol": "(-vumpus(Stella) & sterpus(Stella) & shumpus(Stella))", "prediction": ["(all x.((Element(x) & -Vimpus(x)) -> Sterpus(x)) & all y.((Element(y) & -Sumpus(y)) -> Sumpfus(y)))", "(all x.(Stella(x) -> -Vumpus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Shumpus(z) -> -Simpus(y))))", "(all x y.((Vumpus(x) & -Vumpus(y)) -> Sterpus(y)) & all z w.((Vumpus(z) & -Shumpus(w)) -> Float(z)))", "(all x.(Stella(x) -> -Vumpus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Shumpus(z) -> Shumpus(z))))", "(all x.(Stella(x) -> -Vomepus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Shumpus(z) -> -Vomepus(y))))", "all x y z.((Stella(x) & Vumpus(y) & Sterepus(z)) -> (-Vumpus(x) & Sterpus(y) & Humpus(z)))", "all x.(Stella(x) -> (-Vumpus(x) | (Sterpus(x) | Humpus(x)))))", "(all x.(Solva(x) -> -Vumpus(x)) & (Sterpus(x) & Solus(x))))", "(all x.(Stella(x) -> -Vumpus(x)) & all y.(Stella(y) -> Sterep(y))) & all z.(Shumpus(z) -> -Vumpus(y)))", "all x y z.((Stella(x) & (Vumpus(y) | Sterpus(y) | Humpus(z))) -> (-Vumpus(x) & -Sterpus(y) & -Shumpus(z)))", "(all x.(Stella(x) -> -Vumpus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> Humpus(x))))", "(all x.(Stella(x) -> -Vumpus(x)) & (Stella(x) -> Sterepus(x)) & (Stella(x) -> Humpus(x))))", "all x y z.((Stella(x) & Vampire(y) & Sterep(z)) -> (-Vampire(x) & Sterpus(x) & Humpus(x)))", "(all x y z.((Stella(x) & Vampire(y)) -> -Vumpus(x)) | ((Stella(z) & Stalker(z))) | (Stella(z) & Humpus(z))))", "(all x.(Stella(x) -> -Vubis(x)) & (Stella(x) -> -Sternus(x)) & (Stella(x) -> Humpus(x)))", "all x y.((Stella(x) & Stella(y)) -> (-Vumpus(x) | Sterpus(y) | Humpus(y)))"]}
{"id": "prontoqa_train_241", "nl": "Stella is not a yumpus.", "fol": "-yumpus(Stella)", "prediction": ["Stella is not yumpus.", "Stella is notYumpus.", "Stella is not yumpus(x)", "Stella \u2013 -Yumpus(x))", "Alles x.(Stella(x) -> -Yumpus(x))", "Stella is not yumpus.", "Stella -Yumpus(s)", "Stella is notYumpus(Stella)", "Stella is not a yumpus.", "(-Yumpus(Stella))", "Stella is notyumpus.", "Stella is -Yumpus(Stella)", "Stella -Yumpus(X)", "(Yumpus(Stella))", "(-Yumpus(Stella))", "Stella is notYumpus( Stella)"]}
{"id": "prontoqa_train_242", "nl": "Lempuses are tumpuses.", "fol": "all x. (lempus(x) -> tumpus(x))", "prediction": ["all x.(Lempuse(x) -> Tumulose(x))", "all x.(Lempuse(x) -> Tumulus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumulus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumulus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumulus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumulus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_243", "nl": "Alex is a lorpus and Alex is not a tumpus and Alex is an impus.", "fol": "(lorpus(Alex) & -tumpus(Alex) & impus(Alex))", "prediction": ["all x y z.((Alex(x) & Lorpe(x) & -Tumpus(y) & Illips(z)) -> (Lorpus(x) & -Tumpus(y) & Impossible(z)))", "all x y.((Alex(x) & Lorpus(x)) -> (-Tumpus(y) & Impermant(x)))", "all x y z.((Alex(x) & Lorpus(y) & Tumpus(z)) -> (Lepto(x) & -Tumpus(x) & Impossible(x)))", "(all x.(Alex(x) -> Lodpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Ispose(x))))", "all x y z.((Alex(x) & Lorpus(x) & Tumpus(y) & Is(z)) -> (Lorpe(x) & -Tumpus(y) & Is(z)))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> -Tumpus(y))) & all z.(Alex(z) -> Improviser(z))))", "(all x.(Alex(x) -> (Lorpus(x) | -Tumpus(x)) & (Alex(x) -> Issue(x))))", "exists x.(Alex(x) & Lordpus(x) & -Tumpus(x) & Impermissible(x))", "all x y z.((Alex(x) & Lorpus(y) & Tompus(z)) -> (Lorpus(x) & -Tumpus(y) & Issue(z)))", "all x.(Alex(x) -> (Lorpus(x) & -Tumpus(x) & Implicit(x)))", "(all x.(Alex(x) -> Llorpus(x)) & (Eric(x) | Refractioner(x))))", "all x.((Alex) & Lorpus(x) & -Tumpus(x) & Impermissible(x)) -> Reincarnated(x))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> -Tumpus(y))) & all z.(Alex(z) -> Invisald(z)))", "all x y.((Alex(x) & Lopus(y) & -Tumpus(y) & Imperium(x)) -> (Lorpus(x) & Imperium(x)))", "all x.(Alex(x) -> (Lorpus(x) & -Tumpus(x) & Impossible(x)))", "all x y.((Alex(x) & Lorpus(x)) -> NotTompus(x))"]}
{"id": "prontoqa_train_244", "nl": "Alex is not a lempus.", "fol": "-lempus(Alex)", "prediction": ["Alex is notLempus(Alex)", "Alex is no lempus.", "Alex is not lempus.", "All x.(Alex(x) -> -lempus(x))", "is notAlexa(Alex)", "all x.(Alex(x) -> -Lempus(x))", "Alex is not a lempus.", "Alex is not a lempus.", "Alex is not lempus.", "-Lempus(Alex)", "(-lempus(Alex)).", "all x.(Alex(x) -> -Lempus(x))", "all x.(Alex(x) -> -Lempus(x))", "all x.(Alex(x) -> -Lempus(x))", "all x.(Alex(x) -> -Lempus(x))", "-Limpus(Alex)"]}
{"id": "prontoqa_train_245", "nl": "Every jompus is a grimpus.", "fol": "all x. (jompus(x) -> grimpus(x))", "prediction": ["all x.(Jompus(x) -> Grimpus(x))", "all x.(Joji(x) -> Grimpus(x))", "(all x.(Jompus(x) -> Grimpus(x)))", "all x.(Jimpus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Gruppus(x))", "all x.(Jimpus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jumpus(x) -> Grimpus(x))", "all x.(Jumpus(x) -> Gruppus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jomess(x) -> Grumpus(x))", "all x.(Jompus(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_246", "nl": "Wren is a vumpus, Wren is not a grimpus, and Wren is a yumpus.", "fol": "(vumpus(Wren) & -grimpus(Wren) & yumpus(Wren))", "prediction": ["all x y z.((Wren(x) & Vampus(y) & Grumpus(z)) -> (Fumulus(x) & -Grimpus(y) & Yumpus(z)))", "(all x.(Wren(x) -> Varmpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Vumpus(z) -> Yumpus(z)))", "(all x.(Wren(x) -> Vumpus(x)) & -Grimpus(x) & -Yumpus(x)))", "(all x.(Wren(x) -> Vumpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> Yumpus(z)))", "(all x y z.((Wren(x) & Vanympus(y)) -> (Is(x,y)) & ((Is(x,z) & -IsGrimpus(z))) -> (Is(x,z)) & ((Is(x,y) & Yumpus(x)) -> Is(x,y))))", "(all x y.(Wren(x) -> Vumpus(x)) & (Wren(y) -> -Grimpus(y))) & (Wren(z) -> Yumps(z)))", "(all x y z.(Wren(x) -> Vmpus(x)) & ((Wren(y) & -Grimpus(y)) | (-Wren(z) & Yumpus(z)))))", "(all x.(Wren(x) -> Vumpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> Yumpus(z)))", "(all x.(Wren(x) -> Vumpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> Yumpus(z))))", "(all x.(Wren(x) -> Vumpus(x)) & (-Wren(x) -> Grimpus(x)) & (-Wren(x) -> Yampus(x)))", "(all x.(Wren(x) -> Vumpus(x)) & (Wren(x) -> -Grimpus(x)) & (Yumpus(x))))", "(all x.(Wren(x) -> Vumpus(x)) & (Wren(x) -> -Grimpus(x)) & (Wren(x) -> Yumpus(x)))", "all x y z.((Wren(x) & Vumpus(x) & Wren(y) & Grimpus(z)) -> (-Brumpus(y) & Yampus(y)))", "(all x.(Wren(x) -> Vumpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> Yumpus(z)))", "(all x.(Wren(x) -> Vulmpus(x)) & (-Grampus(x) & (Yumpus(x) | Vulmpus(x))))", "(all x.(Winner(x) -> Vulmpus(x)) & (Winner(x) -> -Grimpus(x)) & (Winner(x) -> Yumpus(x)))"]}
{"id": "prontoqa_train_247", "nl": "Wren is not a jompus.", "fol": "-jompus(Wren)", "prediction": ["all x.(Wren(x) -> -Jompus(x))", "all x.(Wren(x) -> -Jompus(x))", "all x.(Wren(x) -> -Jobos(x))", "all x.(Wren(x) -> -Jumpus(x))", "all x.(Wren(x) -> -Jompus(x))", "-Jompus(Wren)", "(exists x.(Wren(x) & -Jompus(x)))", "-Jompus(Wren)", "(-Jompus(Wren) & -Jimpus(Wren))", "(-Jompus(Wren))", "(all x.(Wren(x) -> -Jompus(x)))", "all x.(Wren(x) -> -jompus(x))", "(-jompus(Wren))", "all x.(Wren(x) -> -Jompus(x))", "(-Jompus(Wren))", "-Jompus(Wren)"]}
{"id": "prontoqa_train_248", "nl": "Yumpuses are dumpuses.", "fol": "all x. (yumpus(x) -> dumpus(x))", "prediction": ["all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Umpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpus(x))", "all x.(Yumpus(x) -> Dumpuse(x))"]}
{"id": "prontoqa_train_249", "nl": "Sam is not a dumpus and Sam is a rompus and Sam is a zumpus.", "fol": "(-dumpus(Sam) & rompus(Sam) & zumpus(Sam))", "prediction": ["(all x.(Sheep(x) -> -Dumpus(x)) & (Rompus(x) & Zumpus(x)))", "(all x.(Dumpsus(x) -> -Dumps(x)) & (Rompus(x) -> Zumpus(x)))", "(all x y.((Sam(x) & -Dumpus(x)) -> Rompus(x)) & ((Sam(y) & Zumpus(y)) -> Dumpus(y)))", "all x y z.((Sam(x) & Dumpus(y) & Rompus(z)) -> (Null(x,y) & -Dumpus(x) & Rompus(y) & Zumpus(z)))", "(NoDumus(sam) | Rompus(sam) | Zumpus(sam)))", "(all x.(Sam(x) -> -Dumpus(x)) & (Rompus(x) | Zumpus(x)))", "(all x.((Sam(x) & -Dumpus(x)) | ((Sam(x) & Rompus(x))) | (Sam(x) & Zumpus(x))))", "(all x.(Sam(x) -> (-Dumpsus(x))) & (Rimpus(x) & Zumpus(x))))", "all x y z.((Sam(x) & Dumpus(y) & Rumpus(z)) -> (-Dumpus(x) & Rompus(y) & Zumpus(z)))", "all x.((Sam(x) & -Dumus(x)) -> (Rompus(x) & Zumpus(x)))", "(all x.(Sam(x) -> -Dumpus(x)) & exists y.(Rompus(y) & exists z.(Zumpus(z) & -Dumpus(y))))", "(all x.(Sam(x) -> -Dupus(x)) & (Sam(x) -> Rompus(x)) & (Sam(x) -> Zumpus(x)))", "all x y z.((Sam(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & Rompus(y) & Zumpus(z)))", "(all x.(Sam(x) -> -Dumpus(x)) & all y.(Rome(y) -> Zumpus(x)))", "(all x.(Sam(x) -> -Dumped(x)) & all y.(Rompus(y) & all z.(Tompus(z) -> -Dumpus(y))))", "(all x.(Sam(x) -> -Dumus(x)) & (Sam(x) -> Rompus(x)) & (Sam(x) -> Zumpus(x)))"]}
{"id": "prontoqa_train_250", "nl": "Sam is not a yumpus.", "fol": "-yumpus(Sam)", "prediction": ["all x.(Yumpus(x) -> -Bake(x))", "-Yumpus(Sam)", "(-Yumpus(Sam))", "(-Yumpus(Sam))", "all x.(Sam(x) -> -Yumpus(x))", "(-Yumpus(Sam))", "all x.(Sam(x) -> -Yumpus(x))", "all x.((Sam(x) & -Yumpus(x)) -> -Yumpus(x))", "all x.(Sam(x) -> -Yumpus(x))", "all x.((Sam(x) | Yumpa(x))) -> -Yumu(x))", "all x.((Sam(x) & NoYumpus(x)) -> -Yumpus(x))", "all x.(Sam(x) -> -Yumpus(x))", "all x.(Yumpus(x) -> -Yumpus(x))", "(-Yumpus(Sam,Sam))", "All x.(Sam(x) -> -Yumpus(x))", "all x.(Yumpus(x) -> -Yumpus(x))"]}
{"id": "prontoqa_train_251", "nl": "Grimpuses are tumpuses.", "fol": "all x. (grimpus(x) -> tumpus(x))", "prediction": ["all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumulus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x y.((Grimpuse(x) & Tumulus(y)) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "(all x.(Grimpus(x) -> Tumpus(x)))", "all x.(Grimpus(x) -> Tumulus(x))", "all x.(Gripper(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Pumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_252", "nl": "Max is not a tumpus, Max is a brimpus, and Max is a rompus.", "fol": "(-tumpus(Max) & brimpus(Max) & rompus(Max))", "prediction": ["(all x y z.((Max(x) & Tumpus(y)) -> -Tumpus(x)) & ((Max(z) & Brimpus(z))) -> Rompus(z)))", "all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> (-Tumpus(x) & -Bermpus(x) & -Rompus(y)))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Rompus(z))))", "all x y.((Max(x) & Kumpus(y)) -> (-Tumpus(x) | Brimpus(x) | Rompus(x)))", "all x y.((Max(x) & Tumpus(y)) -> (-Tumpus(x) & Brimpus(y) & Rompus(x)))", "all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> (-Tumpus(x) & -Rompus(x)))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Rompus(z))))", "(all x.(Max(x) -> -Tumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Rompus(x)))", "all x y z.((Max(x) & Tumpus(y) & Brimpus(z) & Rompus(x)) -> (-Tumpus(x) & Brimpus(x) & Rupus(x)))", "(all x.(Max(x) -> -Tumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Rompus(x)))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Rompus(z))))", "(all x y z.((Max(x) & Tumpus(y)) -> -Tumpus(x)) & ((Max(z) & Brimpus(z))) -> Rompus(z)))", "(all x.(Max(x) -> -Tumpus(x)) & ((Max(x) -> Brimpus(x))) & ((Max(x) -> Rompus(x))))", "(all x.(Max(x) -> (-Tumpus(x))) & all y.(Max(y) -> (Brimpus(y) & rompus(y))))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Rompus(z))))", "exists x.(Max(x) & -Tumpus(x) & Brimpus(x) & Rompus(x))"]}
{"id": "prontoqa_train_253", "nl": "Max is not a grimpus.", "fol": "-grimpus(Max)", "prediction": ["-Grimpus(Max)", "NullGrampus(Max)", "Max is notGrimpus.", "(-Grampus(Max))", "-Grape(Max)", "all x.(Max(x) -> -Grimpus(x))", "(-Grimpus(Max))", "-Grimpus(Max)", "-Grimpus (Max)", "-Grimpus(Max)", "-Grillpus(Max)", "-Grimpus(Max)", "Max_Essential(Max)", "all x.(Max(x) -> -Grimpus(x))", "-Grimpus(Max)", "-Grimpus(Max)"]}
{"id": "prontoqa_train_254", "nl": "Fae is a grimpus, Fae is not a rompus, and Fae is a jompus.", "fol": "(grimpus(Fae) & -rompus(Fae) & jompus(Fae))", "prediction": ["all x y z.((Fae(x) & Grimpus(x)) & (Fae(y) -> -Rompus(y)) & (Fae(z) -> Jompus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> -Rompus(y)) & all z.(Fae(z) -> Jompus(z)))", "(all x.(Fae(x) -> Cropus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))", "all x y z.((Fae(x) & Grimpus(x) & Fae(y) & -Rompus(y)) -> (Fae(z) | Jompus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> -Rompus(y)) & all z.(Fae(z) -> Jompus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Rome(y) -> -Rrompus(y)) & all z.(Fae(z) -> Jompus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))", "(all x.(Fae(x) -> Gruppa(x)) & all y.((Fae(y) & -Rompus(y))) -> Jompus(y)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x))))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> -Rompus(y))) & all z.(Fae(z) -> Jompus(z))))", "(all x y z.((Fae(x) & Grimpus(y) & -Rompus(z)) -> Grimpus(x)) & ((Fae(x) & -Rompus(y)) -> Jompus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))", "(all x.(Fae(x) -> Grapple(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))", "all x y z.((Fae(x) & Gripper(x) & Fae(y) & Rompus(z)) -> (Fae(x) & Jompus(y)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))"]}
{"id": "prontoqa_train_255", "nl": "Fae is not a gorpus.", "fol": "-gorpus(Fae)", "prediction": ["(-Gorpus(fae))", "-Gerpus(Fae)", "all x.(Fae(x) -> -Gorpus(x))", "all x.(Fae(x) -> -Gorpus(x))", "exists x.(Fae(x) & -Gorpus(x))", "all x.(Fae(x) -> -Gorpus(x))", "(-Gorpus(Feather))", "-Gorpus(Fae)", "(-Gorpus(fae))", "all x.(Fae(x) -> -Gorpus(x))", "is -Gorpus(Fae)", "-Gorpus(Fae)", "exists x.(Fae(x) & -Gorpus(x))", "-Gorpus(fae)", "(-Gorpus(Fae))", "Afe is notGorpus(fae,f)"]}
{"id": "prontoqa_train_256", "nl": "Gorpuses are tumpuses.", "fol": "all x. (gorpus(x) -> tumpus(x))", "prediction": ["all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumulus(x))", "all x.(Gorpuse(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumulus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Pumba(x))", "all x.(Gorpuse(x) -> Tumulus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_257", "nl": "Fae is a vumpus and Fae is not a tumpus and Fae is a sterpus.", "fol": "(vumpus(Fae) & -tumpus(Fae) & sterpus(Fae))", "prediction": ["(exists x.(Vumpus(x) & Fae(x)) & -Tumpus(x) & Sterpus(x)))", "all x y.((Fae(x) & Fae(y)) -> (Vumpus(x) & -Tumpus(y) & Sterpus(y)))", "all x y.((Fae(x) & Volumpus(x) & -Tumpus(y) & -Sterpus(x)) -> (Vumpus(x) & Sterpus(y)))", "(all x.(Fae(x) -> Voompus(x)) & (Fae(x) -> -Toumpus(x)) & (Fae(x) -> Sterpus(x)))", "(all x.(Circle(x) -> Vumpus(x)) & all y.(Tumpus(y) -> -Tumpus(y)) & all z.(Sterpus(z) -> Sterpus(z)))", "(NoTumpus(Fae,Vumpus) & -Tumpus(Fae,Sterpus))", "all x y.((Fae(x) & Fae(y)) -> (Vumpus(x) & -Tumpus(y) & Sterepus(y)))", "(all x.(Fae(x) -> Vimpe(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Sterpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Sterpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Sterpus(x)))", "all x y z.((Fae(x) & Vumpus(x) & Fae(y) & Sterpus(z)) -> (-Tumpus(y) & Sterus(z)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Sterpus(x)))", "all x y z.((Fae(x) & Vumpus(y) & Fae(z)) -> (-Tumpus(z) & Sterpus(z)))", "all x y z.((Fae(x) & Fae(y) & Tumpus(z)) -> (Vumpus(x) & -Thumpus(y) & Sterpus(z)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Sterepus(x)))", "all x y z.(Fae(x) -> (Vumpus(x) & Tumpus(y) & Sterpus(z)))"]}
{"id": "prontoqa_train_258", "nl": "Every yumpus is a shumpus.", "fol": "all x. (yumpus(x) -> shumpus(x))", "prediction": ["all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.((Yumpus(x) & Humpus(x)) -> Shumpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Shumba(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Scrumpus(x))", "all x.(Yumpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_259", "nl": "Wren is not a shumpus and Wren is a lorpus and Wren is a grimpus.", "fol": "(-shumpus(Wren) & lorpus(Wren) & grimpus(Wren))", "prediction": ["all x y z.((Wren(x) & Shumpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(x) & -Sgrimpus(x)))", "all x y z.((Wren(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(x) & -Surpus(x)))", "(all x.(Wren(x) -> -Shumpus(x)) & (Lorpus(x) | Grimpus(x))))", "(all x.(Wren(x) -> -Shumpus(x)) & (Lorpus(x) | Grimpus(x))))", "(all x.(Wren(x) -> -Shumpus(x)) & ((Wren(x) | -Shumpus(x))) -> Lorpus(x)) & ((Wren(x) -> Grimpus(x)) -> NotShumpus(x)))", "(all x.(Wren(x) -> -Shumpus(x)) & ((Wren(x) & Lorpus(x))) | (-Shumpus(x) & Lorpus(x)))))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.((Wren(y) & Lorpus(y))) -> Grimpus(y)))", "all x y.((Wren(x) & -Shumpus(x)) & (Lorpus(y) | Grimpus(y)))", "(all x y z.((Wren(x) & Humpus(y) & Lorpus(z)) -> -Shumpus(x)) & ((Wren(x) & Lorpus(x)) -> Grimpus(x)))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.((Wren(y) & Lorpus(y))) -> Grimpus(y)))", "(all x.(Wren(x) -> -Shumpus(x)) & ((Wren(x) & Lorpus(x))) | (Wren(x) & Grimpus(x))))", "all x y.((Wren(x) & Hormpus(y)) -> (-Shumpus(x) & Larpus(y) & Grimpus(z)))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.(Lorpus(y) -> Grimpus(z))))", "(-Shumpus(w) & -Lorpus(w) & -Grampus(w))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.(Wren(y) -> Lorpus(y))) & all z.(Wren(z) -> Grimpus(z)))", "(all x y z.(Wren(x) -> (-Shumpus(x) & -Lorpus(y)) & (Wren(z) -> (Grimpus(z)))))"]}
{"id": "prontoqa_train_260", "nl": "Each dumpus is an impus.", "fol": "all x. (dumpus(x) -> impus(x))", "prediction": ["all x.(Dumpus(x) -> IsOppose(x))", "all x.(Dumpus(x) -> IsImpossible(x))", "all x.(Dumpus(x) -> Is(x))", "all x.(Dumpus(x) -> Implicator(x))", "all x.(Dumpus(x) -> Implicator(x))", "all x.(Dumpus(x) -> Impelling(x))", "all x.(Dumpus(x) -> Implicator(x))", "exists x.(Dumpus(x) & Implied(x))", "all x.(Dumpus(x) -> IsImpossible(x))", "all x.(Dumus(x) -> impus(x))", "all x.(Dumpus(x) -> Impossible(x))", "all x.(Dumpus(x) -> IsFragment(x))", "all x.(Dumpus(x) -> Imperative(x))", "-exists x.(Dumpus(x) & Impossible(x))", "all x.(Dumpus(x) -> IsImplemented(x))", "all x.(Dupus(x) -> Implicator(x))"]}
{"id": "prontoqa_train_261", "nl": "Rex is not an impus and Rex is a sterpus and Rex is a yumpus.", "fol": "(-impus(Rex) & sterpus(Rex) & yumpus(Rex))", "prediction": ["(all x y.((Rex,y) & Impossible(y)) -> -Impossible(y)) & ((Rex,x) & Sterpus(x)) -> Yumansp(x)))", "((Rex) & -Iron(X)) & ((Rex) -> Sterpus(x)) | (Rex) -> Yumpus(x)))))", "(all x.(Rex(x) -> -Issue(x)) & all y.(Rex(y) -> ((Sterpus(y) | Yampus(y)))))", "(all x.(Rex(x) -> -Impossed(x)) & all y.(Protektor(y) -> Sterpus(y))) & all z.(Yumpus(z) -> Yelp(z))))", "all x y z.((Rex(x) & Threat(y) & St\u00e9rus(z)) -> (-ImpossedBetween(x,y) & Yumpus(x,z)))", "(all x.(Rex(x) -> -Impossible(x)) & ((Rex(x) & Sterpus(x)) -> Yumpus(x)))", "(all x.(Rex(x) -> -Issue(x)) & all y.(Rex(y) -> Spinal(y))) & all z.(Rex(z) -> Yompus(z)))", "(-Is(Rex,Is(x,Is)) & ((Rex,IsSterpus)) | (Rex,Is(x,IsYumpus)))))", "(all x.(Rex(x) -> -Imperial(x)) & (Sterpus(x) & Yumpus(x))))", "all x y z.((Rex(x) & -Impossible(x) & -Sterepus(y) & Yumpus(z)) -> (Rx,y) & -Impossible(x) & Sterepus(x) & Yammus(z)))", "(all x.(Rex(x) -> -Impossible(x)) & (Sterepus(x) | Yumpus(x))))", "all x y z.((Rex(x) & Flonus(y) & Sterpus(z)) -> (-IsImpossible(x) & (-Impossible(y) | -Impossible(y))))", "all x y z.((Rex(x) & Ergoth(y) & Harmful(z)) -> (-Impossible(x) & Sterpus(y) & Yumpus(z)))", "(all x.(Rex(x) -> -Island(x)) & all y.((Rex(y) & Steroid(y))) -> (-Island(y) & Steroid(y)) | ((Rex(y) & Humpus(y)))))", "(all x.(Rex(x) -> -Impossible(x)) & ((Sterepus(x) & Yumpus(x))) -> -Impossible(x)))", "(all x.(Rex(x) -> -Issue(x)) & (Sterepus(x) | Yumpus(x)))"]}
{"id": "prontoqa_train_262", "nl": "Zumpuses are shumpuses.", "fol": "all x. (zumpus(x) -> shumpus(x))", "prediction": ["all x.(Zumpuse(x) -> Shumpus(x))", "all x.(Zumpus(x) -> Shumpus(x))", "all x.(Zumpus(x) -> Shumpus(x))", "all x.(Zumpus(x) -> Shumpus(x))", "all x.(Zumpuse(x) -> Shumpus(x))", "all x.(Zumpus(x) -> Shumpus(x))", "all x.(Zimpus(x) -> (Shumpus(x) & Shumpus(x)))", "all x.(Zumpus(x) -> Shumpus(x))", "all x.(Zumpus(x) -> Shumpus(x))", "Zumpuses (shumpuses)", "all x.(Zimpus(x) -> Shumpus(x))", "all x.(Zumpus(x) -> Shumpeuse(x))", "all x.(Zumpus(x) -> Shumpus(x))", "all x.(Zumpus(x) -> (Shumpus(x) & HasShumpus(x)))", "all x.(Zumpus(x) -> Shumpus(x))", "all x.(Zumpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_263", "nl": "Sally is a brimpus and Sally is not a shumpus and Sally is a tumpus.", "fol": "(brimpus(Sally) & -shumpus(Sally) & tumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Shumpus(y))) & all z.(Sally(z) -> Tumpus(z))))", "(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Shumpus(x)) & (Sally(x) -> Tumpus(x))))", "(all x.(Sally(x) -> Brimpus(x)) & (-Shumpus(x) & Tumpus(x))))", "(all x.((Sally(x) & Brimpus(x)) -> (-Shumpus(x)) & all y.((Sally(y) & Tumpus(y)) -> Tumpus(y)))", "(all x y.(Sally(x) -> Brimpus(x)) & (Sally(y) -> -Shumpus(y))) & (Sally(y) -> Tumpus(y)))", "(all x.(Brimpus(x) -> Brimpus(x)) & (Shumpus(x) -> -Shumpus(x)) & (Tumpus(x) -> Totumpus(x))))", "all x.(Sally(x) -> (Brimpus(x) & -Shumpus(x) & Tumpus(x)))", "(all x.(Barmpus(x) -> Brimpus(x)) & (-Shumpus(x) -> Tumpus(x)))", "(all x.(Sally(x) -> Brimpus(x)) & (-Shumpus(x) & -Tumpus(x)))", "(all x.(Brimpus(x) -> Brimpus(x)) & all y.(Shumpus(y) -> -Shumpus(y))) & all z.(Tumpus(z) -> Tumpus(z)))", "(all x.((Sally(x) & Brimpus(x)) -> NoShumpus(x)) & all y.((Sally(y) & Tumpus(y)) -> -Tumpus(y)))", "(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Shumpus(x)) & (Sally(x) -> Tumpus(x)))", "(all x.(Brimpus(x) -> Brimpus(x)) & (Shumpus(x) -> -Shumpus(x)) & (Tumpus(x) -> Tumpus(x)))", "(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Shumpus(x)) & (Sally(x) -> Tumpus(x))))", "all x y.((Sally(x) & Brimpus(x) & -Shumpus(y)) -> Tumpus(x))", "(all x.((Sally(x) & Brimpus(x)) -> NoShumpus(x)) & all y.((Sally(y) & Tumpus(y)) -> NoShumpus(y)))"]}
{"id": "prontoqa_train_264", "nl": "Sterpuses are vumpuses.", "fol": "all x. (sterpus(x) -> vumpus(x))", "prediction": ["all x.(Sterpus(x) -> Vumpus(x))", "all x.(Steerpus(x) -> Vumpuse(x))", "all x.(Sterpus(x) -> Vampus(x))", "all x.(Sterpus(x) -> Vulmpus(x))", "all x.(Sterpus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vulpus(x))", "all x.(Stelepuse(x) -> Vampus(x))", "all x.(Sterpus(x) -> Vampuse(x))", "all x.(Steerpus(x) -> Vumpus(x))", "all x.(Stupid(x) -> Vukus(x))", "all x.(Sterpus(x) -> Vampus(x))", "all x.(Sterpus(x) -> Vampe(x))", "all x.(Sterpus(x) -> Vulpe(x))", "all x.(Sterpus(x) -> Vampuse(x))", "all x.(Sterpus(x) -> Vumpuse(x))", "all x.(Sterpus(x) -> Vampus(x))"]}
{"id": "prontoqa_train_265", "nl": "Alex is a brimpus, Alex is not a vumpus, and Alex is a zumpus.", "fol": "(brimpus(Alex) & -vumpus(Alex) & zumpus(Alex))", "prediction": ["All x.(Alex(x) -> (Brumpus(x) | -Vimpus(x) | Zumpus(x)))", "(all x.(Alex(x) -> Brimpus(x)) & all y.(Alex(y) -> NonVumpus(y)) & all z.(Alex(z) -> Zumpus(z))))", "all x.(Alex(x) -> (Brimpus(x) & -Vumpus(x) & Zumpus(x)))", "(all x y.((Alex(x) & Brimpus(x)) -> Alex(y)) & ((Alex(x) & -Vumpus(y)) -> Zumpus(x)))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Vumpus(x)) & (Alex(x) -> Zumpus(x)))", "(all x.(Alex(x) -> Brimpus(x)) & (-Alex(x) -> Vumpus(x)) & (-Alex(x) -> Zumpus(x)))", "(all x y z.((Alex(x) & Brimpus(x)) -> WillFog(x)) & ((Alex(y) & Vumpus(y) & Zumpus(z))) -> WillFog(y,z)))", "all x y z.((Alex(x) & Brimpus(x) & Alex(y) & NoVimpus(y) & Zumpus(z)) -> (Brampus(x) & -Vimpus(y) & Zumpus(z)))", "all x y z.((Alex(x) & Brimpus(y) & -Vumpus(z)) -> (Brimpus(x) & Zumpus(x)))", "(all x y z.((Alex(x) & Brimpus(x)) -> (Alex(y) & -Vimpus(y)) & ((Alex(z) & Zumpus(z))) -> (Alex(z) & -Vimpus(z))))", "(all x.(Alex(x) -> Brimpus(x)) & ((Alex(x) -> -Vimpus(x))) & ((Alex(x) -> Zumpus(x))))", "(all x.(Alex(x) -> Brimpus)) & (-Alex(x) -> Vumpus)) & (-Alex(x) -> Zumpus)))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Vumpus(x)) & (Alex(x) -> Zumpus(x)))", "(all x.(Alex(x) -> Brimpus)) & (Alex(x) -> -Vumpus)) & (Alex(x) -> Zumpus)))", "all x y z.((Alex(x) & Brimpus(x) & -Vumpus(y) & Zumpus(z)) -> (Brimpus(x) & -Vumpus(y) & Zumpus(z)))", "all x y z.((Alex(x) & Brimpus(x) & Vampus(y) & Zumpus(z)) -> (NotBeyond(x,y) & NotBeyond(x,z)))"]}
{"id": "prontoqa_train_266", "nl": "Alex is not a sterpus.", "fol": "-sterpus(Alex)", "prediction": ["(-Stereo(Alex))", "(-Sterepus(Alex))", "Alex is not sterpus.", "Alex is not sterpus.", "all x.(Alex(x) -> -Sterpus(x))", "Alex is not Sterpus.", "Alex is not Sterepus.", "all x.(Alex(x) -> -Sterpus(x))", "all x.(Alex(x) -> -Sterpus(x))", "all x.(Alex(x) -> -Sterpus(x))", "Alex is not Sterpus(Alex)", "Alex is NOTASTERPUS.", "Alex is not sterpus.", "Alex, however, is not sterpus.", "(-Stereo(Alex))", "all x.(Alex(x) -> -Sterpus(x))"]}
{"id": "prontoqa_train_267", "nl": "Wren is a lempus and Wren is a yumpus and Wren is not a shumpus.", "fol": "(lempus(Wren) & yumpus(Wren) & -shumpus(Wren))", "prediction": ["all x y z.((Wren(x) & Lempus(x) & Yampus(y) & -Shumpus(z)) -> (Lempus(x) & Yampus(y) & Yampus(z)).)", "(all x.(Wren(x) -> Lempus(x)) & (Wren(x) -> Yumpus(x)) & (Wren(x) -> -Shumpus(x)))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Yupus(y)) & all z.(Wren(z) -> -Shumpus(z)))", "(all x.(Wren(x) -> Lempus(x)) & ((Wren(x) & Yumpe(x))) -> Yumpus(x)) & ((Wren(x) & -Shumpus(x)) -> Lemmer(x)))", "all x y z.((Wren(x) & Lempus(x) & Rhino(y) & Humpus(z)) -> (Is(x,y) & Is(y,z)))", "all x y.((Wren(x) & Lempus(x) & Yampus(y)) -> (Shumpus(x) | NotShumpus(x))))", "(all x.(Wren(x) -> Lempus(x)) & (Yumpus(x) & -Shumpus(x)))", "all x y z.((Wren(x) & Lempus(x) & Yumps(y) & -Shumpus(z)) -> (DistinctRed(x) & Resin(x)))", "all x.(Wren(x) -> (Lenpoise(x) & Yumpus(x) & Wren(x) & -Shumpus(x)))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Yumpo(y)) & all z.(Wren(z) -> -Shumpus(z))))", "all x y z.((Wren(x) & Lempus(x) & Yumpa(y)) -> ((Yumpus(z) & -Shumpus(z))))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> -Shumpus(z))))", "all x y.((Wren(x) & Lempus(x) & Yumpus(x)) -> ((Yumpus(y) & -Shumpus(y))))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> -Shumpus(z))))", "all x y z.((Wren(x) & Lempus(y) & Yumpus(z)) -> (Lempus(x) & Yampus(x) & -Shumpus(x)))", "all x y.((Wren(x) & Lempus(x) & Yumpus(y)) -> (-Shumpus(x)))"]}
{"id": "prontoqa_train_268", "nl": "Each gorpus is a zumpus.", "fol": "all x. (gorpus(x) -> zumpus(x))", "prediction": ["all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_269", "nl": "Alex is a dumpus, Alex is a lempus, and Alex is not a zumpus.", "fol": "(dumpus(Alex) & lempus(Alex) & -zumpus(Alex))", "prediction": ["(all x.(Alex(x) -> Dumpus(x)) & (Alex(x) -> Lempus(x)) & -Alex(x)))", "all x y.((Alex(x) & Dumpus(y)) -> (Lempus(x) & Numpus(x)))", "(all x.(Alexa(x) -> Dumpus(x)) & (Alexa(x) & Lempus(x)) & -Zumpus(x)))", "(all x.(Alex(x) -> Dumpus(x)) & all y.(Alex(y) -> Lempus(y)) & -Zumpus(y)))", "all x y z.((Alex(x) & Dumpus(x) & Lempus(y) & Zumpus(z)) -> (ExposedAs(x,y) & ExposedAs(x,z)))", "(all x.(Alex(x) -> Dumpus(x)) & all y.(Alex(y) -> Lempus(y)) & -Zumpus(y)))", "(all x.(Alex(x) -> Dumpus(x)) & all y.(Alex(y) -> Lempus(y)) & -Zumpus(y)))", "(all x.(Alex(x) -> Dumpus(x)) & (Alex(x) -> Lempus(x)) & -Tompus(x)))", "(all x.(Alex(x) -> Dumpus(x)) & all y.(Alex(y) -> Lempus(y)) & -Zumpus(y)))", "all x y.((Alex(x) & Dumpus(x)) -> (Lempus(y) & -Zumpus(x)))", "(all x.(Alex(x) -> Dumpus(x)) & (Alex(x) -> Lempus(x)) & -Tompus(x)))", "all x.(Alex(x) -> (Dumus(x) & Lempus(x) & -Zumpus(x)))", "(all x.(Alex(x) -> Dumpus(x)) & all y.(Alex(y) -> Lempus(y)) & none.(Alex(y) -> Zumpus(y)))", "(all x.(Alexa(x) -> Dumpus(x)) & all y.(Alexa(y) -> Lempus(y)) & all z.(Alexa(z) -> -Zumpus(z)))?", "(all x.(Alex(x) -> Dumpus(x)) & (Alex(x) -> Lempus(x)) & -Alex(x)))", "(all x y z.(Alex(x) -> Dumpus(x)) & (Alex(y) -> Lempus(y)) & (Alex(z) -> -Zumpus(z))))"]}
{"id": "prontoqa_train_270", "nl": "Alex is not a gorpus.", "fol": "-gorpus(Alex)", "prediction": ["all x.(Alex(x) -> -Gorpus(x))", "all x.(Alex(x) -> -Gorpus(x))", "(-Gorpus(Alex))", "all x.(Alex(x) -> -Gorpus(x))", "Alex is notGorpus(Alex)", "all x.(Alex(x) -> -Rosaur(x))", "Alex is not gorpus(Alex)", "all x.(Alex(x) -> -Gorpus(x))", "Alex is notGorpus.", "Alex is notGorpus(Alex)", "all x.(Alex(x) -> -Groppy(x))", "all x.(Alex(x) -> -Gorpus(x))", "all x.(Alex(x) -> -Gorpus(x))", "Alex NullGorpus(Alex)", "all x.(Alex(x) -> -Gorpus(x))", "Alex -Gorpus(Alex)"]}
{"id": "prontoqa_train_271", "nl": "Every impus is a shumpus.", "fol": "all x. (impus(x) -> shumpus(x))", "prediction": ["all x.(Issue(x) -> Shumpus(x))", "all x.(Impact(x) -> Humpus(x))", "all x.((Issue(x) & Shamus(x)) -> Stumpus(x))", "all x.(Idempress(x) -> Humpus(x))", "all x.(Issue(x) -> Humpus(x))", "all x.(Impossible(x) -> Shumpus(x))", "all x.(Improvist(x) -> Humpus(x))", "all x.(Impossible(x) -> Humpus(x))", "all x.(Impossible(x) -> Humpus(x))", "all x.(Impact(x) -> Humpus(x))", "all x.(Impossible(x) -> Shumpet(x))", "all x.(Impedus(x) -> Humpus(x))", "all x.(Ilusa(x) -> Humpus(x))", "all x.(Improvement(x) -> Humpus(x))", "all x.(Ilisense(x) -> Humpus(x))", "all x.(Impact(x) -> Humpus(x))"]}
{"id": "prontoqa_train_272", "nl": "Rex is not a shumpus and Rex is a wumpus and Rex is a tumpus.", "fol": "(-shumpus(Rex) & wumpus(Rex) & tumpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Shumpus(x)) & all y.(Wumpus(y) & -Shumpus(y))) & all z.(Tumpus(z) & Rex(z)))", "(all x.(Rex(x) -> -Shumpus(x)) & all y.(Wumpus(y) & -Tumpus(y)))", "(all x.(Rex(x) -> -Shumpus(x)) & all y.(Rex(y) -> Wumpus(y))) & all z.(Rex(z) -> Tumpus(z)))", "(all x.(Rex(x) -> -Shumpus(x)) & (Wumpus(x) | Tumpus(x)))", "(all x y z.(Rex(x) -> (-Shumpus(x) & Wumpus(y) & Tumpus(z))) -> (-Shumpus(x) & Wumpus(y) & Tumpus(z)))", "(all x y.(Rex(x) -> -Shumpus(x)) & (Wumpus(y) | Tumpus(y))))", "(all x.(Rex(x) -> -Sompus(x)) & (Wumpus(x) & Tumpus(x)))", "all x y z.((Rex(x) & Humpus(y) & Wumpus(z)) -> (-Shumpus(x) | Rumpus(x) & Tumpus(x)))", "all x y z.((Rex(x) & Humpus(y) & Tuumpus(z)) -> (-Shumpus(x) & Wumpus(y) & Tumpus(z)))", "all x.(Rex(x) -> (-Shumpus(x) & Wasp(x) & Tumpus(x)))", "(exactsshumpus(Rex) | ExactsWumpus(Rex) | ExactsTumpus(Rex)))", "all x y z.((Rex(x) & Humpus(y) & Wumpus(z)) -> (-Shumpus(x) & Wumpus(x) & Tumpus(x)))", "(all x.(Rex(x) -> -Shumpus(x)) & all y.(Wumpus(y) & Tumpus(y)))", "(all x.(Rex(x) -> -Shumpus(x)) & (Wumpus(x) & Tumulus(x)))", "(all x.(Rex(x) -> -Shumpus(x)) & all y.(Fall(y) -> Wumpus(y)) & all z.(Fall(z) -> Tumpus(z))))", "all x.((Rex(x) & -Shumpus(x)) -> (Wumpus(x) & Tumpus(x)))"]}
{"id": "prontoqa_train_273", "nl": "Each gorpus is a rompus.", "fol": "all x. (gorpus(x) -> rompus(x))", "prediction": ["exists x.(Gorpus(x) & Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Hairy(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "exists x.(Gorpus(x) & Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_274", "nl": "Stella is a dumpus and Stella is a sterpus and Stella is not a rompus.", "fol": "(dumpus(Stella) & sterpus(Stella) & -rompus(Stella))", "prediction": ["exists x.(Stella(x) & Dumpus(x) & Sterpus(x) & -Rompus(x))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> Sterpus(y))) & all z.(Stella(z) -> -rompus(z))))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> Sterpus(y))) & is not rompus(y)))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> Sterepus(y)) & all z.(Stella(z) -> -Rompus(z))))", "(all x y z.((Dumpus(x) & Sterpus(y)) -> Dumpus(x)) & ((Sterpus(z) & -Rompus(z))) -> Sterpus(z)))", "(all x.(Zilla(x) -> Dumpus(x)) & (Zilla(x) -> Sterpus(x)) & (Zilla(x) -> -Rompus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> Sterpus(x)) & -Rome(x)))", "all x y z.((Stella(x) & Dumpus(x) & Sterpus(y) & Rompus(z)) -> (IsDumpus(x) & IsSterpus(y) & IsSterpus(z)))", "(all x.(Dumus(x) -> Stella(x)) & ALL Y.(Sterpus(y) -> Stella(y))) & all z.(Rome(z) -> Stella(z)))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Stella(z) -> Rimpus(z))))", "(all x y z.(Dumus(x) -> (StellaE) & Dumpus(y))) & (Sterpus(z) -> (Steroide(z) & -Rompus(z))))", "all x y z.((Stella(x) & Dumpus(y) & Sterpus(z)) -> (Dumpus(x) & Sterpus(z) & -Rompus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> Steros(y)) & all z.(Stella(z) -> -Rompus(z))))", "(all x.(Pitus(x) -> Dumpus(x)) & (Sterepus(x) -> Sterepus(x)) & (Pitus(x) -> -Rompus(x)))", "all x y.((Talla(x) & Dumpus(x) & Stella(y)) -> (Sterpus(y) & -Rompus(y)))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Stella(z) -> -Rompus(z))))"]}
{"id": "prontoqa_train_275", "nl": "Stella is not a gorpus.", "fol": "-gorpus(Stella)", "prediction": ["Stella is not a Gorpus.", "all x.(Stella(x) -> -Gripper(x))", "Stella is not a Gorpus(Stella)", "Stella ist kein Gorpus(Stella)", "-Gorpus(Lettera)", "all x.(Stella(x) -> -Gorpus(x))", "Stella is not(Stella) & Gorpus(Stella))", "Stella is not a Gorpus.", "all x.(Stella(x) -> -Gerpus(x))", "Stella is not Gorpus(s)", "Stella is not a Gorpus(l)", "Stella is not Gorpus(s)", "Stella is not a Gorpus.", "Stella is not a Gorpus(Stella)", "Stella is -Gorpus(Stella)", "Stella (-Gorpus(s))"]}
{"id": "prontoqa_train_276", "nl": "Yumpuses are zumpuses.", "fol": "all x. (yumpus(x) -> zumpus(x))", "prediction": ["all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpuse(x))", "all x.(Yumpus(x) -> Zumpuse(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpuse(x))", "all x.(Tompus(x) -> Zumpus(x))", "all x.(Mumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zurpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_277", "nl": "Alex is not a zumpus, Alex is a tumpus, and Alex is an impus.", "fol": "(-zumpus(Alex) & tumpus(Alex) & impus(Alex))", "prediction": ["(all x.(Alex(x) -> -Zumpus(x)) & all y.(Alex(y) -> Tumpus(y)) & all z.(Alex(z) -> Isolation(z))))", "all x y z.((Alex(x) & Tolus(y) & Tompus(z)) -> (-Tompus(x) & Tumpus(y) & Issue(x)))", "all x y z.((Alex(x) & Mitoi (y) & Tumpus(z) & Impossible(x)) -> -Tompus(x))", "(All x y z.(Alex(x) & Zump(y) & Not(x,y)) & (Alex(z) -> Tumpus(z)) & (Alex(x) -> Imperator(x)))", "all x y z.((Alex(x) & Zumpus(y) & Tumpus(z)) -> (-Tompus(x) | Impossible(x)))", "(all x.(Alexa(x) -> -Zumpus(x)) & all y.(Alexa(y) -> Tumpus(y)) & all z.(Alexa(z) -> Issue(z))))", "(all x.(Alex(x) -> -Toumpus(x)) & all y.(Alex(y) -> Tumpus(y))) & all z.(Alex(z) -> Issue(z)))", "all x y z.((Alex(x) & Toumpus(y) & Uniform(z)) -> (-Tompus(x) & -Tompus(y) & -Tompus(y) & Issue(z)))", "all x y z.((Alex(x) & Zumpus(y) & Tompus(z)) -> (-Zumpus(x) & -Tumpus(x) & -Ilises(x)))", "all x y ((Alex(x) & Zumpus(y)) -> -(Alex(x) & Tumpus(x))) & All z.(Alex(z) -> Impossible(z)))", "(all x.(Alex(x) -> -Zumpus(x)) & all y.(Alex(y) -> Tumpus(y)) & all z.(Alex(z) -> Impirational(z)))", "all x y z.((Alex(x) & Zumpus(y) & Tumpus(z)) -> (-Tompus(x) & Tompus(x) & Issue(x)))", "all x y.((Alex(x) & -Zumpus(x)) -> (Tumpus(x) & Imperempt(y)))", "exists x.(Alex(x) & -Zumpus(x) & Pump(x) & Isolator(x))", "(All x.(Alex(x) -> -Zumpus(x)) & (Alex(x) -> Tumpus(x)) & (Alex(x) -> Impermissible(x)))", "(all x.(Alex(x) -> -Zumpus(x)) & all y.(Alex(y) -> Tumpus(y)) & all z.(Alex(z) -> Imperator(z)))"]}
{"id": "prontoqa_train_278", "nl": "Alex is not a yumpus.", "fol": "-yumpus(Alex)", "prediction": ["all x.(Alex(x) -> -Yumpus(x))", "Alex is not yumpus.", "-WonderfulYumpus(Alex)", "(-Yumpus(Alex))", "-Yumpus(Alex)", "Alex is notyumpus.", "Alex is notYumpus.", "\"Yumpus(Alex)\"", "Alex is notyumpus(Alex)", "All x.(Alex(x) -> -Yumpus(x))", "all x.(Alex(x) -> -Yumpus(x))", "all x.(Alex(x) -> -Yumpus(x))", "Alex is notYumpus(Alex)", "all x.(Alex(x) -> -Yumpus(x))", "all x.(Alex(x) -> -Yumpus(x))", "(-Yumpus(Alex))"]}
{"id": "prontoqa_train_279", "nl": "Sally is a yumpus, Sally is a shumpus, and Sally is not a gorpus.", "fol": "(yumpus(Sally) & shumpus(Sally) & -gorpus(Sally))", "prediction": ["(all x.(Sally(x) -> Yampus(x)) & exists y.(Sally(y) & Humpus(y))) & exists z.(Sally(z) & -Gorpus(z))))", "(all x y z.(Yumpus(x) -> Sally(x)) & (Shumpus(y) -> Sally(z)) & (Gorpus(z) -> -Yumpus(z)))", "(all x.(Sally(x) -> Yang(x)) & (Sally(x) -> Humpus(x)) & -Gorpus(x)))", "(all x.(Sally(x) -> Yumpus(x)) & (Sally(x) -> Humpus(x)) & -Gorpus(x)))", "(all x.(Sally(x) -> Yumpus(x)) & (Sally(x) -> Humpus(x)) & -Gorpus(x)))", "all x.((Sally(x) & Yumpus(x)) -> (Shumpus(x) & -Gorpus(x)))", "(all x.(Yumpus(x) -> Sally_()) & (Shumpus(x) -> Sally_())) & (NoGorpus(x) -> Sally_((Yumpus(y))))", "(yumpus(Sally) & Shumpus(Sally) & -Gorpus(Sally))", "(all x.(Sally(x) -> Yumpus(x)) & (Sally(x) -> Humpus(x)) & -Gorpus(x)))", "exists x.(Sally(x) & Yumpos(x) & Humpus(x) & -Gorpus(x))", "(yumpus(s) & yumpus(s) & shumpus(s) & -gorpus(s))", "all x y z.((Sally(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) & Shumpus(x) & NotGorpus(x)))", "(all x.(Sally(x) -> Yumpus(x)) & (Sally(x) -> Humpus(x)) & (Sally(x) -> -Gorpus(x))))", "(all x.(Sally(x) -> Yampus(x)) & all y.(Sally(y) -> Humpus(y)) & all z.(Sally(z) -> -Gorpus(z))))", "(all x.(Sally(x) -> Yampus(x)) & (Sally(x) -> Humpus(x)) & (Sally(x) -> -Gorpus(x))))", "(Yumpus(Sally) & Humpus(Sally) & -Gorpus(Sally))"]}
{"id": "prontoqa_train_280", "nl": "Sally is not a numpus.", "fol": "-numpus(Sally)", "prediction": ["Sally is not Numpus.", "Sally is -Numpus(Sally)", "Sally -Numus.", "Sally nemouse(Sally,x)", "Sally & -Numpus(Sally)", "Sally -Numpus(Sally)", "All x.(Sally(x) -> NotNumpus(x))", "Sally is not Numpus(Sally)", "Sally \u2013.Nompus(Sally)", "Sally hat e.V.((Sally(e) & Numpus(e)) -> -Numpus(e))", "Sally n'est pas Numpus(Sally)", "Sally n'est pas Numpus.", "Sally is not a Numpus(s)", "Sally -Numpus(Sally)", "(-Nompus(Sally))", "Sally is not Numpus(Sally)"]}
{"id": "prontoqa_train_281", "nl": "Every shumpus is a gorpus.", "fol": "all x. (shumpus(x) -> gorpus(x))", "prediction": ["all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x y.((Shumpus(x) & Gorpus(y)) -> HasShumpus(x,y))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_282", "nl": "Wren is a brimpus and Wren is a yumpus and Wren is not a gorpus.", "fol": "(brimpus(Wren) & yumpus(Wren) & -gorpus(Wren))", "prediction": ["all x.(Wren(x) & ((British(x) & Yumpus(x)) | (Yumpus(x) & -Gorpus(x)))) -> Brimpus(x))", "(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> Yampus(x)) & (Wren(x) -> -Gorpus(x)))", "(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> Yumpus(x)) & (Wren(x) -> -Gorpus(x))))", "all x y z.((Wren(x) & Brumpus(y) & Yumpa(z)) -> (Brimpus(x) & Yumpus(y) & -Gorpus(z)))", "all x y.((Wren(x) & Brimpus(x) & Yumpus(y)) -> -Gorpus(x))", "(all x y z.((Wren(x) & Brimpus(y)) | ((Wren(z) & Yumpus(z))) | (-Wren(z) & Gorpus(z)))))", "all x y z.((Wren(x) & Brimpus(y) & Yumpus(z)) -> (Brimpus(x) | Yumpus(z) & -Gorpus(x)))", "all x y z.((Wren(x) & Brimpus(x) & Yumpus(y) & -Gorpus(z)) -> (Brimpus(x) & Yampus(y) & -Gorpus(z)))", "(all x y.((Wren(x) & Brumpus(x)) -> Brumpus(x)) & all z w.((Wren(z) & Yumpu(w)) -> Yumpu(z))) & all w.((Wren(w) & Gorpus(w)) -> Gorpus(w)))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wren(y) -> Yumpus(y))) & all z.(Wren(z) -> -Gorpus(z))))", "(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> Yumpus(x)) & (Wren(x) -> -Gorpus(x)))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wren(y) -> Yampus(y)) & all z.(Wren(z) -> -Gorpus(z))))", "(all x.(Wren(x) -> Bloompus(x)) & (Wren(x) -> Yumpus(x)) & (Wren(x) -> -Gorpus(x)))", "all x y z.((Wren(x) & Brumpus(x) & Yumpus(y) & -Gorpus(z)) -> (Brompus(x) & Yumpa(x)))", "(all x y z.((Wren(x) & Brimpus(x) & Yampus(y)) -> Brimpus(z)) & (((Wren(x) & Yumpus(z)) & -Gorpus(z)) -> Yupsis(x)))", "all x y z.((Wren(x) & Brimpus(x) & Yumpus(y) & -Gorpus(z)) -> (Brumpus(x) & Yampus(y) & -Roserpus(z)))"]}
{"id": "prontoqa_train_283", "nl": "Each numpus is an impus.", "fol": "all x. (numpus(x) -> impus(x))", "prediction": ["all x.(Nompus(x) -> Implicit(x))", "all x.(Numpus(x) -> IsImplementated(x))", "all x.(Nompus(x) -> Impossible(x))", "all x.(Numerus(x) -> Impenetrable(x))", "all x.((Numerus(x) & Impossible(x)) -> I.(Nompus(x)))", "all x.(Numerus(x) -> Isolated(x))", "all x.(Nompus(x) -> Imperative(x))", "all x.(Nompus(x) -> Impossible(x))", "all x.(Numpus(x) -> Imitation(x))", "all x.(Numerus(x) -> Impossible(x))", "all x.(Nompus(x) -> Impossible(x))", "all x.(Nompus(x) -> IsImpossible(x))", "all x.(Numpus(x) -> impuse(x))", "all x.(Numpus(x) -> impus(x))", "all x.(Numpus(x) -> Obsidian(x))", "all x.(Numpus(x) -> Is(x,y))"]}
{"id": "prontoqa_train_284", "nl": "Fae is not an impus, Fae is a tumpus, and Fae is a grimpus.", "fol": "(-impus(Fae) & tumpus(Fae) & grimpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Imposo(x)) & all y.(Fae(y) -> Tumpus(y)) & all z.(Fae(z) -> Grimpus(z))))", "(all x.(Fae(x) -> -Issue(x)) & (Fae(x) -> Tumpus(x)) & (Fae(x) -> Grimpus(x)))", "(all x.(Fae(x) -> -Issu\u00e9(x)) & (Fae(x) -> Tumpus(x)) & (Fae(x) -> Grimpus(x)))", "(all x.(Fae(x) -> -Impossible(x)) | (Fae(x) -> Tumpus(x))) | (Fae(x) -> Grimpus(x))))", "all x y z.((Fae(x) & -Impossible(x) & Totumpus(y) & Grimpus(z)) -> (-Impossible(x) | (Tumpus(y) & Grimpus(z)))))", "(all x y z.((Fae(x) & IsIsolated(x)) -> (Fae(y) | (IsTumpus(y) & IsGrimpus(z)))))", "(all x y z.((Fae(x) & IsNot(x,i)) -> (IsNot(x,i) & Is(y))) & ((Fae(z) & Is(z)) -> (IsTumpus(z) & Is(z))))", "(all x.(Fae(x) -> -Impossible(x)) & all y.(Fae(y) -> (Tumpus(y) & Grimpus(y))))", "(all x.(Fae(x) -> -Impossible(x)) & (Fae(x) -> Tumpeo(x)) & (Fae(x) -> Grumpus(x)))", "all x y z.((Fae(x) & Fae(y) & Granule(z)) -> (-Impossible(x) & Tumpus(y) & Grimpus(z)))", "exists x.(Fae(x) & (-Is(x,Idea)) | exists y.(Tumpus(y)) & exists z.(Grimpus(z) & Is(z,A)))))", "(all x y.((Fae(x) & Imperium(y)) -> -Impossible(x)) & ((Fae(x) & Tumpus(y)) -> Grimpus(x)))", "all x y z.((Fae(x) & Fae(y) & Grompus(z)) -> (-Improvized(x) & Tumpus(y) & Gruppus(z)))", "all x y z.((Fae(x) & Tumpus(y) & Plumpus(z)) -> (-Impossible(x) | Trumpet(y) & Gruppet(z)))", "all x y z.((Fae(x) & Tumpus(y) & Grimpus(z)) -> (-Is(x,y) & Tumpus(y) & Grimpus(z)))", "all x y z.((Fae(x) & Fae(y) & Crimpus(z)) -> (-Issue(x) & -Issue(y) & Tumpus(y) & Grimpus(z)))"]}
{"id": "prontoqa_train_285", "nl": "Sterpuses are gorpuses.", "fol": "all x. (sterpus(x) -> gorpus(x))", "prediction": ["all x.(Sterpuse(x) -> Gorpuse(x))", "all x.(Sterpuse(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpuse(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Ssterpus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpuse(x))", "all x.(Sterpus(x) -> Gorpuse(x))", "all x.(Sternpuse(x) -> Gorpuse(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Sterpuse(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpuse(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Sterpuse(x) -> Gorpuse(x))"]}
{"id": "prontoqa_train_286", "nl": "Fae is not a gorpus, Fae is a shumpus, and Fae is a tumpus.", "fol": "(-gorpus(Fae) & shumpus(Fae) & tumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Gorpus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> Tumpus(z))))", "(all x.(Fae(x) -> -Gorpus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> Tumpus(z))))", "(all x.(Fae(x) -> -Gorpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> Tumpus(x)))", "(all x.(Fae(x) -> -Gorpus(x)) | (Fae(x) -> Shumpus(x))) & (Fae(x) -> Tumpus(x)))", "all x y z.((Fae(x) & Gorpus(y) & Humpus(z) & Tumpus(x)) -> (-Gorpus(x) & Humpus(y) & Tumpus(z)))", "(all x y z.(Fae(x) -> (-Gorpus(x) & Gorpus(y))) & (Shumpus(z) | Tumpus(z))))", "(all x.(Fae(x) -> -Gorpus(x)) & ((Fae(x) & Humpus(x))) -> Tumpus(x)))", "(all x.(Fae(x) -> -Gorpus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> Tumpus(z)))", "all x y z.((Fae(x) & Shumpus(y) & Humulus(z)) -> (-Gorpus(x) & -Shumpus(y) & Tumpus(z) & -Between(x,y)))", "all x y z.((Fae(x) & Shumpus(y) & Tumpus(z)) -> (-Gorpus(x) | (-Shumpus(y) & Tumpus(z)))))", "(all x.(Fae(x) -> -Gorpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> Tumpus(x)))", "(all x.(Fae(x) -> -Gorpus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> Tumpus(z))))", "(OfHasGorpus(Fae) & -HasGorpus(Fae) & HasShumpus(Fae) & HasTumpus(Fae))", "(all x.(Fae(x) -> -Gorpus(x)) & (Fae(x) -> Shumpus(x)) & (Fae(x) -> Tumpus(x)))", "(all x.(Fae(x) -> -Gorpus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> Tumpus(z)))", "(all x.(Fae(x) -> -Gorpus(x)) & all y.(Fae(y) -> Humpus(y)) & all z.(Fae(z) -> Tumpus(z))))"]}
{"id": "prontoqa_train_287", "nl": "Fae is not a sterpus.", "fol": "-sterpus(Fae)", "prediction": ["all x.(Fea(x) -> -Sterpus(x))", "(NonSterpus(fee) -> -Sterpus(fee))", "(-Stereo(Fae))", "notSterepus(fae)", "(-Stepsis(fae))", "(-Steerpus(Fae))", "Fae (-Sterpus(f))", "(-Stereo(Fae))", "(-Sterpus(Fae)", "(-Steerasp(Fae))", "-Sterpus(Fae)", "(-Sterepus(fae)).", "-Sterpus(Fae)", "all x.(Fae(x) -> -Sterpus(x))", "exists x.(Fae(x) & -Sterpus(x))", "is notsterpus(Fae)"]}
{"id": "prontoqa_train_288", "nl": "Lempuses are shumpuses.", "fol": "all x. (lempus(x) -> shumpus(x))", "prediction": ["all x.(Lempuse(x) -> Humpus(x))", "all x.(Lempuse(x) -> Shumpus(x))", "all x.(Lempuse(x) -> Shumpus(x))", "all x.(Lempuse(x) -> Shumpus(x))", "all x.(Lempuse(x) -> Shumpuse(x))", "all x.(Lempuse(x) -> Suspise(x))", "all x.(Lempuse(x) -> Shumpus(x))", "all x.(Lempuse(x) -> Shumpus(x))", "all x.(Lempuse(x) -> Humpus(x))", "all x.(Limpus(x) -> shumpus(x))", "all x.(Lempuse(x) -> Shumpus(x))", "all x.(Lempuse(x) -> Shumpus(x))", "(Shumpus(lempuse) -> Shumpus(lempuse))", "all x.(Lempuse(x) -> (Shumpuse(x) | Shumpus(x)))", "all x.(Lempuse(x) -> Shumpus(x))", "all x.(Lempuse(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_289", "nl": "Max is not a shumpus, Max is a lorpus, and Max is a numpus.", "fol": "(-shumpus(Max) & lorpus(Max) & numpus(Max))", "prediction": ["all x y.((Max(x) & Humpus(y)) -> -Shumpus(x)) & ((Max(x) & Lorpus(x)) & (Max(x) & Numpus(x))))", "(all x.(Max(x) -> -Shumpus(x)) & all y.(Max(y) -> Lorpus(y)) & all z.(Max(z) -> Numpus(z))))", "(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Leopard(x)) & (Max(x) -> Numpus(x)))", "(all x.(Max(x) -> -Shumpus(x)) & all y.(Max(y) -> Lorpus(y)) & all z.(Max(z) -> Numpus(z)))", "(all x.(Max(x) -> -Shumpus(x)) & all y.(Max(y) -> Locus(y)) & all z.(Max(z) -> Numpus(z))))", "three-dimensionally(Max) -> (-Shumpus(Max) & -Lorpus(Max) & -Numpus(Max)))", "(all x.(Max(x) -> -Shumpus(x)) & (Max(x) | -Lorpus(x)) & (Max(x) -> Numpus(x)))", "(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Lorpus(x)) & (Max(x) -> Numpus(x)))", "(all x.(Max(x) -> -Shumpus(x)) & exists y.(Lorpus(y) & exists z.(Max(z) & -Shumpus(z))) & exists w.(Termpus(w) & -Shumpus(w))))", "all x y z.((Max(x) & Humpus(y) & Hen(z)) -> (-Shumpus(x) | Lops(z) | Numpus(z)))", "(-Shumpus(Max)) & (Lorpus(Max) & Numpus(Max)))", "all x y.((Max(x) & -Shumpus(x)) -> (Lorpus(x) & Numpus(y)))", "(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Lorpus(x)) & (Max(x) -> Numpus(x)))", "(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Lopus(x)) & (Max(x) -> Numpus(x))))", "all x y z.((Max(x) & Humpus(y) & Lorpus(z) & Humpus(z)) -> (-Shumpus(x) & -Lorpus(y) & -Numpus(z)))", "(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> lorpus(x)) & (Max(x) -> Numpus(x)))"]}
{"id": "prontoqa_train_290", "nl": "Sterpuses are zumpuses.", "fol": "all x. (sterpus(x) -> zumpus(x))", "prediction": ["all x.(Sterpuse(x) -> Zumpuse(x))", "-Zombies(steerpus(ste)", "all x.(Stumpus(x) -> Zumpus(x))", "all x.(Sterpuse(x) -> Zumpuse(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Sterpuse(x) -> Zumpuse(x))", "all x.(Sterpuse(x) -> Zumpuse(x))", "all x.(Sterpuse(x) -> Zumpuse(x))", "all x.(Sterpuse(x) -> Zumpuse(x))", "all x.(Sterpuse(x) -> Zumpus(x))", "all x.(Sterpuse(x) -> Zumpuse(x))", "all x.(Sterpuse(x) -> Zumpuse(x))", "all x.(Strerpuse(x) -> Zumpuse(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Sterpuse(x) -> Tompus(x))"]}
{"id": "prontoqa_train_291", "nl": "Max is not a zumpus, Max is a rompus, and Max is a numpus.", "fol": "(-zumpus(Max) & rompus(Max) & numpus(Max))", "prediction": ["(all x.(Max(x) -> -Tommoth(x)) & (Max(x) -> Rompus(x)) & (Max(x) -> Numpus(x)))", "(all x y z.(Max(x) -> -Tompus(x)) & (Max(y) -> Rompus(y)) & (Max(z) -> Numpus(z)))", "(all x.(Max(x) -> -Zumpus(x)) & all y.(Max(y) -> Rompus(y)) & all z.(Max(z) -> Numpus(z))))", "(all x.(Max(x) -> -Zumpus(x)) & (Max(x) -> Rompus(x)) & (Max(x) -> Numpus(x)))", "(all x.(Max(x) -> -Zumpus(x)) & all y.(Max(y) -> Rompus(y)) & all z.(Max(z) -> Numpus(z))))", "(all x.(Max(x) -> -Zumpus(x)) & (Max(x) -> Rompus(x)) & (Max(x) -> Numpus(x)))", "(all x.(Max(x) -> -Zumpus(x)) & (Max(x) -> Rompus(x)) & (Max(x) -> Numpus(x)))", "(all x y z.((Max(x) & Zumpus(y)) -> -Zombie(x)) & ((Max(z) & Rompus(z)) -> Numpus(z)))", "(all x.(Max(x) -> -Zumpus(x)) & all y.(Max(y) -> Rompus(y)) & all z.(Max(z) -> Numpus(z))))", "(all x.(Max(x) -> -Zumpus(x)) & all y.(Max(y) -> Rompus(y) & all z.(Max(z) -> Numpus(z))))", "(all x.(Max(x) -> -Tompus(x)) & all y.(Max(y) -> Rompus(y)) & all z.(Max(z) -> Numpus(z))))", "(all x y z.((Max(x) & Zumpus(y) & Rompus(z)) -> -Tompus(x)) & ((Max(x) & Numpus(x)) -> Tompus(x)))", "exists x.(Max(x) & -Tompus(x) & Rompus(x) & Numpus(x))", "(all x y.(Max(x) -> -Zumpus(x)) & ((Max(y) -> Rompus(y)) & ((Max(y) & Numpus(y))) -> -Zumpus(y)))", "(all x.(Max(x) -> -Zumpus(x)) & (Max(x) -> Rompus(x)) & (Max(x) -> Numpus(x)))", "(all x y z.((Max(x) & Tommy(y)) -> -Zumpus(x)) & ((Max(z) & Rompus(z))) -> Numpus(z)))"]}
{"id": "prontoqa_train_292", "nl": "Max is not a sterpus.", "fol": "-sterpus(Max)", "prediction": ["-Sterpus(Max)", "(-Sterpus(Max))", "all x.(Max(x) -> -Sterpus(x))", "(-Sterpus(Max))", "Max -Sterpus(x)", "(-Sterpus(Max))", "(-Sterpus(Max))", "-Starpus(Max)", "all x.(Max(x) -> -Sterepus(x))", "the Max sterpus.", "(ReallyStreep(Max) & -Sterpus(Max))", "(-Sterpus(Max))", "-Starpus(Max)", "-(Max(Max) & Sterpus(Max))", "In Max, there is no Sterpus.", "(-Sterpus(Max))"]}
{"id": "prontoqa_train_293", "nl": "Alex is a brimpus and Alex is not a tumpus and Alex is a vumpus.", "fol": "(brimpus(Alex) & -tumpus(Alex) & vumpus(Alex))", "prediction": ["(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Voompus(x)))", "(all x.(Alex(x) -> Brimpus(x)) & ((Alex(x) & -Tumpus(x)) | (Alex(x) & Vumpus(x)))))", "all x y z.((Alex(x) & Brumpus(x) & Alex(y) & Tumpus(z)) -> ((Brumpus(x) & -Tumpus(y)) | Vumpus(y))))", "all x y.((Alex(x) & Brimpus(x) & Tumpus(y)) -> (Vumpus(x) & -Tumpus(y)))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Voompus(x)))", "all x.(Amanda(x) -> (Brumpus(x) | Vampus(x)))", "(all x.(Alex(x) -> Brimpus(x)) & (-Alex(x) -> Tumpus(x)) & (-Alex(x) -> Uzumpus(x)))", "(all x.(Alex_Brumpus(x) -> -Tumpus(x)) & all y.(Alex_Vumpus(y) -> -Brumpus(y)))", "(all x.(Alex(x) -> Brimpus(x)) & all y.(Alex(y) -> -Tumpus(y))) & all z.(Alex(z) -> Ugly(z))))", "all x.(Alex(x) -> (Brimpus(x) & -Tumpus(x) & Vumpus(x)))", "all x y z.((Alex(x) & Brimpus(x) & Alex(y) & Tumpus(z)) -> (-Tumpus(y) & -Vulpu(z)))", "(all x y.((Alex(x) & Brimpus(x)) -> Brimpus(x)) & ((Alex(y) & -Tumpus(y))) -> Vombus(y)))", "all x.((Alex(x) & Brimpus(x)) -> (-Tumpus(x) & -Vumpus(x)))", "(all x.(Alexa(x) -> Brimpus(x)) & all y.(Alexa(y) -> -Tumpus(y))) & all z.(Alexa(z) -> Vumpus(z))))", "(all x.(Alex(x) -> Brimpus(x)) & (-Alex(x) -> Tumpus(x)) & (Alex(x) -> Vumpus(x))))", "all x.(Alex(x) -> (IsBrimpus(x) | -IsTumpus(x) | IsVumpus(x)))"]}
{"id": "prontoqa_train_294", "nl": "Each vumpus is a dumpus.", "fol": "all x. (vumpus(x) -> dumpus(x))", "prediction": ["all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Volumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_295", "nl": "Wren is a lorpus and Wren is a sterpus and Wren is not a dumpus.", "fol": "(lorpus(Wren) & sterpus(Wren) & -dumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Lorpus(x)) & ((Wren(x) -> Streps(x))) & ((Wren(x) -> -Dumpus(x))))", "all x y z.((Wren(x) & Lorpus(y) & Roose(z)) -> (Lorpus(x) | Sterpus(z) | -Dumpus(z)))", "(all x.(Lorpus(x) | Sterepus(x)) & all y.(Dumpus(y)))", "(all x.(Wren(x) -> Lorpus(x)) & ((Wren(x) & Sterpus(x)) -> -Dumpus(x)))", "(all x y z.((Wren(x) & Lorpus(y) & Lemmer(z)) -> Harp(x)) & ((Wren(x) & Sterpus(z)) -> -Dumpus(x)))", "(all x y z.(Wren(x) -> Lorpus(x)) & ((Wren(y) & Sterpus(y)) | (-Dumus(z)))))", "all x y z.((Wren(x) & Lorpus(y) & Sterpus(z)) -> (NonDumpsus(x) & -Lorpus(x) & Sterpus(x) & -Dumpus(x)))", "all x y.((Wren(x) & Lorpus(x)) -> (Sterepus(y) & -Dumpus(y)))", "all x.((Wren(x) -> (Lorpus(x) | Sterpus(x)) | -Dumpus(x)))", "all x y z.((Wren(x) & Lorps(x) & Wren(y) & Sterotus(y)) -> (Lorps(z) & Sters(z) & -Dumpus(z)))", "all x y.((Wren(x) & Lorpus(y)) -> (Hollow(x) & Sterepus(y) & -Dumpsus(x)))", "(all x y.(Wren(x) -> Lorpus(x)) & (Wren(y) -> Sterpus(y)) & -Dumpus(y)))", "(all x y.((Wren(x) & Lorpus(y)) -> HasAlestor(x)) & ((Wren(x) & Sterpus(y)) -> -Dumpus(x)))", "(all x y.((Wren(x) & Lorpus(x)) -> Sterpus(x)) & ((Wren(y) & Dumpus(y)) -> -Dumpus(y)))", "(all x,y) -> (Lorpus(x) & Sterepus(y)) & all z,w.((Wren(z) & Dumpus(z))) -> (Lorpus(z) | Sterpus(z))))", "all x y.((Wren(x) & Lorpus(x) & Sensex(y)) -> (Sterpus(y) & -Dumpus(x)))"]}
{"id": "prontoqa_train_296", "nl": "Each jompus is a shumpus.", "fol": "all x. (jompus(x) -> shumpus(x))", "prediction": ["all x.(Jumpus(x) -> Humpus(x))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jompus(x) -> Shumpus(x))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jompus(x) -> shumpus(x))", "all x.(Jumpus(x) -> Shumpus(x))", "all x.(Jumpus(x) -> Shumpty(x))", "all x.(Jumpus(x) -> Humpus(x))"]}
{"id": "prontoqa_train_297", "nl": "Sam is a zumpus and Sam is not a shumpus and Sam is a sterpus.", "fol": "(zumpus(Sam) & -shumpus(Sam) & sterpus(Sam))", "prediction": ["(all x y.((Sam(x) & Zumpus(y)) -> -Shumpus(y)) & ((Sam(x) & -Shumpus(y)) -> Sterpus(x)))", "(all x y.((Same(x) & Zumpus(x)) -> -Shumpus(x)) & ((Same(y) & Store(y))) -> Spots(x)))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & -Shumpus(y)) -> (Sterpus(z) | Sterpus(z)))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Shumpus(z)) -> (-Shumpus(y) & Sterpus(z)))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & -Shumpus(y)) -> (Sterpus(z)))", "all x.(Sam(x) -> (Tompus(x) & -Shumpus(x) & Sterpus(x)))", "all x.((Sam(x) & Zumpus(x)) -> (-Shumpus(x) & -Sterpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & all y.(Shumpus(y) & -Shumpus(y))) & all z.(Sterpus(z) -> Starpus(z)))", "all x y z.((Shimmer(x) & Zumpus(y) & -Shumpus(z)) -> Sterpus(x))", "all x y.(Zumpus(x) & Sam(y) & -Shumpus(y) & Sterpus(y))", "(all x.(Aspx(x) -> Zumpus(x)) & all y.(Shumpus(y) -> -Shumpus(y))) & all z.(Sterpus(z) -> Sterpus(z)))", "all x y.((Sam(x) & Zumpus(x) & Sam(y)) -> (-Shumpus(y) & Sterpus(y)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Shumpus(x)) & (Sam(x) -> Sterpus(x)))", "all x y z.((Sam(x) & Zumpus(x) & -Shumpus(y) & Sterpus(z)) -> (Sam(x) & -Shumpus(x) & Sterpus(y)))", "(all x y.((Tompus(x) & Sam(y)) -> Zurpus(x)) & ((Tompus(y) & -Shumpus(y)) -> Sterpus(y,x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Shumpus(x)) & (Sam(x) -> Sterpus(x)))"]}
{"id": "prontoqa_train_298", "nl": "Sam is not a jompus.", "fol": "-jompus(Sam)", "prediction": ["() -Jompus(Sam))", "exists x.(Sam(x) & -Jompus(x))", "all x.(Sam(x) -> -Jompus(x))", "all x.(Sam(x) -> -Jompus(x))", "all x.(Sam(x) -> -Jompus(x))", "all x.(Sam(x) -> -Jompus(x))", "all x.(HasSam(x) -> -Jompus(x))", "Sam is not a Jompus.", "(-Jompus(Sam))", "(-Jompus(Sam))", "Sam is not a Jompus(Sam)", "(or is a Joompus(Sam))", "(-Jompus(Sam))", "all x.(Sam(x) -> -Jumpus(x))", "all x.(Sam(x) -> -Jompus(x))", "all x.(Sammu(x) -> -Jompus(x))"]}
{"id": "prontoqa_train_299", "nl": "Numpuses are lempuses.", "fol": "all x. (numpus(x) -> lempus(x))", "prediction": ["all x.(Numpuse(x) -> Lempuse(x))", "all x.(Numpuse(x) -> Lempuse(x))", "all x.(Numpus(x) -> Lempuse(x))", "all x.(Numpuse(x) -> Lempuse(x))", "all x.(Numpus(x) -> Lempus(x))", "all x.(Numpuse(x) -> Lempuse(x))", "all x y.((Numpus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Numpus(x) -> Lempuse(x))", "all x.(Numpuse(x) -> Lempuse(x))", "all x.(Numpus(x) -> Lempuse(x))", "all x.(Numpus(x) -> Lempuse(x))", "all x.(Numpus(x) -> Lempuse(x))", "all x.(Numpus(x) -> Lempuse(x))", "all x.(Numpuse(x) -> Lempuse(x))", "all x.(Numpus(x) -> Lempus(x))", "all x.(Numpuse(x) -> Lempuse(x))"]}
{"id": "prontoqa_train_300", "nl": "Alex is a zumpus, Alex is not a lempus, and Alex is a rompus.", "fol": "(zumpus(Alex) & -lempus(Alex) & rompus(Alex))", "prediction": ["(all x.(Alexa(x) -> Zumpus(x)) & (Alexa(x) -> -Lempus(x)) & (Alexa(x) -> Rompus(x)))", "(all x y z.(Zumpus(x) -> Alien(x)) & ((Lempus(y) & -Lempus(y))) | (Rompus(z)) -> Alien(z))))", "all x y z.((Alex(x) & Zumpus(x) & Alex(y) & Lempus(z)) -> (NoLimpus(y) & Rompud(x)))", "(all x.(Alex(x) -> Zumpus(x)) & all y.(Alex(y) -> -Lempus(y))) & all z.(Alex(z) -> Rompus(z))))", "(all x.(Alex(x) -> Zumpus(x)) & (Alex(x) -> -Lempus(x)) & (Alex(x) -> Rompus(x)))", "all x y z.((Alex(x) & Zumpus(x) & Alex(y) & Lempus(z)) -> (-Lempus(y,z) & Rompus(y)))", "(all x.(Alexa(x) -> Zumpus(x)) & (Alexa(x) -> -Lempus(x)) & (Alexa(x) -> Rompus(x)))", "(all x y z.(Alex(x) -> Zumpus(x)) & ((Alex(y) & -Lempus(y))) | (Alex(z) & Rompus(z))))", "(all x.(Alexa(x) -> Zuppie(x)) & all y.(Alexa(y) -> -Lempus(y)) & all z.(Alexa(z) -> Rompus(z)))", "(all x.(Alex(x) -> Zumpus(x)) & (Alex(x) -> -Lempus(x))) & (Alex(x) -> Rompus(x)))", "all x y z.((Alex(x) & Zumpus(x) & Alex(y) & Lempus(z)) -> (-Lumpus(y) & Romanus(z)))", "(all x.(Alex(x) -> Zumpus(x)) & all y.(Alex(y) -> -Lempus(y)) & all z.(Alex(z) -> Rompus(z))))", "(all x.(Alexa(x) -> Zumpus(x)) & (Alexa(x) -> -Lempus(x)) & (Alexa(x) -> Rompus(x)))", "(all x.(Alexa(x) -> Zumpus(x)) & all y.(Alexa(y) -> -Lempus(y)) & all z.(Alexa(z) -> Rompus(z))))", "all x y z.((Alex(x) & Zumpus(y) & Alex(z)) -> (-Lempus(z) & Rompus(z)))", "all x y z.((Alex(x) & Zumpus(y) & Lempus(z)) -> (-Lempus(w) & Rompus(x)))"]}
{"id": "prontoqa_train_301", "nl": "Lempuses are sterpuses.", "fol": "all x. (lempus(x) -> sterpus(x))", "prediction": ["all x.(Lempuse(x) -> Starpuse(x))", "all x.(Lempuse(x) -> Sterpuse(x))", "all x.(Lempuse(x) -> Sterpuse(x))", "all x.(Lempuse(x) -> Steroid(x))", "all x.(Lempuse(x) -> Sterpuse(x))", "all x.(Lemme(x) -> Sterpuse(x))", "all x.(Lemme(x) -> Sterpuse(x))", "all x.(Lempuse(x) -> Sterpuse(x))", "all x.(Lempuse(x) -> Sterpuse(x))", "all x.(Lempuse(x) -> Sterpuse(x))", "all x.(Lempuse(x) -> Sterpuse(x))", "all x.(Lempuse(x) -> Sterpuse(x))", "all x.(Lempuse(x) -> Sterpuse(x))", "all x.(Lempuse(x) -> Sterpuse(x))", "all x.(Lempuse(x) -> Sterpuse(x))", "(Studepus(Lempuses) & Steroid(Lempuses))"]}
{"id": "prontoqa_train_302", "nl": "Max is a rompus, Max is a yumpus, and Max is not a sterpus.", "fol": "(rompus(Max) & yumpus(Max) & -sterpus(Max))", "prediction": ["all x y z.((Max(x) & Rimpus(y) & Yumpus(z)) -> ((Rompus(x) | Yampus(z) & -Sterpus(z))))", "(all x.(Max(x) -> Rumpus(x)) & (Max(x) -> Yumpus(x)) & -Sterpus(x)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> Yupus(x)) & -Max(x)))", "(all x y z.(Max(x) -> Rompus(x)) & (Max(y) -> Yumpus(y)) & (Max(z) -> -Steerpus(z))))", "(all x.(Max(x) -> Rimpus(x)) -> Yumpus(x)) & all y.(Max(y) -> -Sterepus(y)))", "(all x y z.((Max(x) & Rompus(x)) -> Yampus(x)) & ((Max(x) & Yumpus(y)) -> -Sterepus(z)))", "(all x y z.((Max(x) & Rose(y) & Yampus(z)) -> (Rompus(x) & Yampus(y) & -Sterepus(z))))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> Yumpus(x)) & -Asterpus(x)))", "(all x.(Max(x) -> Rompus(x)) & all y.(Max(y) -> Yuppus(y)) & all z.(Max(z) -> -Sterepus(z))))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> Yumpus(x)) & -(Max(x) -> Sterpus(x))))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> Yumpus(x)) & -Max(x) & -Marshpus(x)))", "(all x.(Max(x) -> Rompus(x)) | (Max(x) -> Yumpus(x))) & -(Max(x) -> Sterpus(x)))", "(all x y z.(Max(x) -> Romast(x)) & (Max(y) -> Yumpus(y)) & ((Max(z) & -Steerpus(z))))", "(all x y z.(Max(x) -> Rompus(x)) & (Max(y) -> Yumpsum(y)) & (Max(z) -> -Sterepus(z)))", "(all x.(Max(x) -> Rose(x)) & (Max(x) -> Yumpus(x)) & (Max(x) -> -Sterpus(x))))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> Yumpus(x)) & -Sterpus(x)))"]}
{"id": "prontoqa_train_303", "nl": "Each gorpus is a jompus.", "fol": "all x. (gorpus(x) -> jompus(x))", "prediction": ["all x.(Gorpus(x) -> Jompus(x))", "all x.(Gorpus(x) -> Jompus(x))", "all x.(Gorpus(x) -> Jompus(x))", "all x.(Gorpus(x) -> Jompus(x))", "all x.(Gorpus(x) -> Jompus(x))", "all x.(Gorpus(x) -> Jompus(x))", "all x.(Gorpus(x) -> Jompus(x))", "all x.(Gorpus(x) -> Jompus(x))", "all x.(Gorpus(x) -> Jompus(x))", "exists x.(Gorpus(x) & Jompus(x))", "all x.(Gorpus(x) -> Jompus(x))", "all x.(Gorpus(x) -> Jompus(x))", "all x.(Gorpus(x) -> Jompus(x))", "all x.(Gorpus(x) -> Jompus(x))", "all x.(Gorpus(x) -> Jompus(x))", "all x.(Gorpus(x) -> Jompus(x))"]}
{"id": "prontoqa_train_304", "nl": "Max is not a jompus and Max is a vumpus and Max is a brimpus.", "fol": "(-jompus(Max) & vumpus(Max) & brimpus(Max))", "prediction": ["all x y z.((Max(x) & Jompus(y) & Vumpus(z)) -> (-Jompus(x) & -Vumpus(z) & -Brimpus(z)))", "all x y z.((Max(x) & Jompus(y) & Vumpus(z)) -> (-Jompus(x) & Vumpus(x) & Brimpus(x)))", "all x y z.((Max(x) & Jompus(y) & Vubis(z)) -> (-Marz1 & (Major(x) & Varda(x) & Major(y) & Major(z))))", "(exists x y.(Jompus(x) & Max(y)) & -Jempus(y)) & exists z.(Vumpus(z) & Max(z))) & exists w.(Brimpus(w) & -Jempus(z))))", "all x y.((Max(x) & Jompus(y) & Vampus(z)) -> (-Jompus(x) & -Vumpus(y) & -Brimpus(z)))", "exists x.(Max(x) & -Jompus(x) & -Vimpus(x) & -Brimpus(x))", "all x y z.((Max(x) & Jompus(y) & Vumpus(z)) -> (-Jompus(x) & Vumpus(y) & Brimpus(z)))", "all x y z.((Max(x) & Jompus(y) & Vumpus(z)) -> (-Jompus(x) | (Vumpus(x) & Britpus(x))))", "(all x.(Max(x) -> -Jompus(x)) & (Max(x) -> Vumpus(x)) | (Max(x) -> Brimpus(x))))", "(all x.(Max(x) -> -Jompus(x)) & (Max(x) -> Vumpus(x)) & (Max(x) -> Brimpus(x))))", "all x y z.((Max(x) & Jompus(y) & Vumpus(z) & Brimpus(x)) -> (-Jompus(x) & -Vumpus(y) & -Brimpus(z)))", "(all x.(Max(x) -> -Jompus(x)) & (Max(x) -> Voompus(x)) & (Max(x) -> Brimpus(x)))", "(all x.(Max(x) -> -Jompus(x)) & (Max(x) -> Vumpus(x)) & (Max(x) -> Brimpus(x)))", "all x y z.((Max(x) & Jompus(y) & Vampire(z) & Brimpus(x)) -> (-Jompus(x) | Max(x) & Vampire(x)))", "(all x.(Max(x) -> -Jimpus(x)) & (Max(x) -> Vempus(x)) & (Max(x) -> Brimpus(x)))", "(all x.(Max(x) -> -Jompus(x)) & (Vumpus(x) & Brimpus(x)))"]}
{"id": "prontoqa_train_305", "nl": "Max is not a gorpus.", "fol": "-gorpus(Max)", "prediction": ["all x.(Max(x) -> -Gorpus(x))", "(DarkEye(Max) & -Gorpus(Max))", "Max is not a gorpus.", "-Rose(Max)", "all x.(Max(x) -> -Gorpu(x))", "this month. (Max is notGorpus(Max))", "(-gorpus)", "-Gorpus(Max)", "all x.(Max(x) -> -Gorpus(x))", "all x.(Max(x) -> -Gorpus(x))", "(-Gorpus(Max))", "-Gorpus(Max)", "all x.(Max(x) -> -Gorpus(x))", "all x.(Max(x) -> -Gorpus(x))", "all x.(Max(x) -> -Gorpus(x))", "all x.(Max(x) -> -Gorpus(x))"]}
{"id": "prontoqa_train_306", "nl": "Yumpuses are grimpuses.", "fol": "all x. (yumpus(x) -> grimpus(x))", "prediction": ["all x.(Yumpus(x) -> Grimpuse(x))", "all x.(Yumpus(x) -> Grimpuse(x))", "all x.(Yumpus(x) -> Grimpuse(x))", "all x.(Yumpus(x) -> Grimpus(x))", "all x.(Yumpus(x) -> Grinper(x))", "all x.(Yumpus(x) -> Grimpuse(x))", "all x.(Yumpus(x) -> Grimpuse(x))", "all x.(Yumpus(x) -> Grimpuse(x))", "all x.(Yumpus(x) -> Grimpuse(x))", "all x.(Yumpuse(x) -> Grimpuse(x))", "all x.(Yumpus(x) -> Grimpuse(x))", "all x.(Yumpus(x) -> Grimpuse(x))", "all x.(Yumpus(x) -> Gruffus(x))", "all x.((Yumpuse(x) & Grimpuse(x)) -> StrokeIn(x))", "all x.(Yumpus(x) -> Grimpuse(x))", "all x.(Umahpus(x) -> Crunchy(x))"]}
{"id": "prontoqa_train_307", "nl": "Wren is a gorpus, Wren is a rompus, and Wren is not a grimpus.", "fol": "(gorpus(Wren) & rompus(Wren) & -grimpus(Wren))", "prediction": ["(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> Rompus(x)) & -Grimpus(x)))", "(all x.(Wren(x) -> Gorpus(x)) & all y.(Wren(y) -> Rompus(y)) & -Grimpus(y)))", "all x y z.((Wren(x) & Wormpus(y) & Plumpus(z)) -> (Gorpus(x) & Rompus(y) & -Plumpus(z)))", "all x y z.((Wren(x) & Giorpus(y) & Rompus(z)) -> (Gorpus(x) | Rompus(z) & -Grimpus(z)))", "all x y z.((Wren(x) & Gorpus(y) & Rompus(z)) -> (Scarpier(x) | Grimpus(x))))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> Rompus(x)) & -Grosspus(x)))", "all x y z.((Wren(x) & Gorpus(x) & Rompus(y) & -Grimpus(z)) -> (Gorpus(x) & Rompus(y) & -Grimpus(z)))", "all x.(Wren(x) -> (Gorpus(x) & Rompus(x) & -Grimppus(x)))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Grimpus(x)))", "(all x.(Wren(x) -> Gorpus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Grimpus(z))))", "(all x.(Wren(x) -> Gorpus(x)) & all y.((Wren(y) & Rampus(y))) -> -Grippus(y)))", "all x y z.((Wren(x) & Bronx(y) & Rompus(z)) -> (Gorpus(x) | Rompus(y) & -Grimpus(z)))", "all x y z.((Wren(x) & Rompe(y) & Gruppus(z)) -> (Gorpus(x) & Rompus(y) & -Grimpus(x)))", "all x y z.((Wren(x) & Gorpus(x) & Rompus(y) & -Grimpus(z)) -> (Gorpus(x) & Rompus(y) & -Grimpus(z)))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Grimpus(x))))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Smokin'(x))))"]}
{"id": "prontoqa_train_308", "nl": "Every grimpus is a tumpus.", "fol": "all x. (grimpus(x) -> tumpus(x))", "prediction": ["all x.(Grimpus(x) -> Tumulus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumulus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Gruppus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Scrampus(x) -> Tumpus(x))", "all x.(Grint(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumulus(x))", "isTumpus(x) -> EveryGrimpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Fragus(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_309", "nl": "Sam is a yumpus and Sam is not a tumpus and Sam is a numpus.", "fol": "(yumpus(Sam) & -tumpus(Sam) & numpus(Sam))", "prediction": ["all x.((Sam(x) & Yumpus(x)) -> (-Tumpus(x) & Numpus(x)))", "all x y z.((Sam(x) & Yampus(y) & Sam(z)) -> (Yumpus(x) & -Tumpus(z) & Numpus(x)))", "all x.((Sam(x) & Yampus(x)) -> (-Tumpus(x) & Numpus(x)))", "(all x.(Sam(x) -> IsYumpus(x)) & ((Sam(x) & -Tumpus(x))) -> IsNumpus(x)))", "all x y.((Sam(x) & Yampus(x) & -Tumpus(y)) -> Numpus(x))", "(all x.(Yumpus(x) -> SamSam)) & (-Tumpus(x) -> SamSam(x)))", "(all x.(Yumpus(x) -> Sam(x)) & (-Tumpus(x) -> Sam(x)))", "(all x y.((Sam(x) & Yumpus(x)) -> (Yumpus(x) & -Tumpus(y)) & All z w.((Sam(z) & Numpus(w)) -> (NotTumpus(z) & Nompus(w))))", "(all x y.((SameCell(x) & Yumphus(x)) -> Is(x,y)) & ((SameCell(y) & -Tumpus(y))) -> Is(x,numpus)))", "(all x.(Yumpus(x) -> Sam(x)) & (-Tumpus(x) -> Sam(x)))", "(all x.(Sam(x) -> Yumpus(x)) & (Sam(x) -> -Tumpus(x)) & (Sam(x) -> Numpus(x)))", "all x.((Sam(x) & Yumpus(x)) -> (-Tumpus(x) & Numpus(x)))", "all x.(Sam(x) -> (Yumpus(x) & -Tumpus(x) & Numpus(x)))", "(all x.(Yumpus(x) -> Sam(x)) & (-Tumpus(x) -> Sam(x)))", "(all x.(Tumpus(x) -> Yampus(x)) & (Mompus(x) -> -Tumpus(x))) & (Mompus(x) -> Numpus(x)))", "(all x.(Yumpus(x) -> Sam(x)) & (-Tumpus(x) & -Tompus(x)) & (-Tumpus(x) -> Sam(x)))"]}
{"id": "prontoqa_train_310", "nl": "Sam is not a grimpus.", "fol": "-grimpus(Sam)", "prediction": ["-Grimppus(Sam)", "all x.(Sam(x) -> -Gruppus(x))", "all x.(Sam(x) -> -Grimpus(x))", "(-Grimpus(Sam))", "-Grimpus(Sam)", "exists x.(Sam(x) & -Grimpus(x))", "(-Grimpus(Sam))", "(Sam is notGrimpus(Sam) & InDollar(Sam))", "(-Grimpus(Sam))", "(-Grimpus(Sam))", "all x.(Sam(x) -> -Grimpus(x))", "-Grimpus(Sam)", "(-Grimpus(Sam))", "(-Grimpus(Sam))", "(-Grimpus(Sam))", "exists x.(Sam(x) & -Grimpus(x))"]}
{"id": "prontoqa_train_311", "nl": "Rompuses are wumpuses.", "fol": "all x. (rompus(x) -> wumpus(x))", "prediction": ["all x.(Rompus(x) -> Wumpus(x))", "all x.(Rompe(x) -> (Wumpuse(x) & KnownForWumigation(x)))", "all x.(Rompus(x) -> Wumpus(x))", "all x.(Rompe(x) -> Wumpus(x))", "all x y.((Prompus(x) & Wumpus(y)) -> (Wumpus(x) & Contains(x,y)))", "all x.(Rompus(x) -> Wumpus(x))", "all x.(Rompus(x) -> Wumpus(x))", "all x.(Rompus(x) -> Hush(x))", "all x.(Roompus(x) -> wumpus(x))", "all x.(Rompus(x) -> Wumpus(x))", "all x.(Rompus(x) -> Wumpus(x))", "all x.(Rompus(x) -> Mutus(x))", "all x.(Rompus(x) -> (Wumpus(x) & -Wumpus(x)))", "(Wumpus)", "all x.(Rompe(x) -> (Ummus(x) & Flower(x)))", "all x.(Rompus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_312", "nl": "Wren is not a wumpus and Wren is a zumpus and Wren is an impus.", "fol": "(-wumpus(Wren) & zumpus(Wren) & impus(Wren))", "prediction": ["all x y z.((Wren(x) & Wren(y) & Impossible(z)) -> (-Wumpus(x) & Zumpus(y) & Illustrated(z)))", "all x.((Wren(x) & -Wumpus(x)) -> (Tompus(x) & Imperator(x)))", "(all x y z.((Wren(x) & Wumpus(y) & Zumpus(z)) -> -Wumpus(x)) & ((Wren(x) & Imperator(z)) -> Impossible(z)))", "all x y z.((Wren(x) & Wren(y) & Impossible(z)) -> (-Wumpus(x) & Zumpus(y) & -Wumpus(z)))", "(all x.(Wren(x) -> -Wumpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Imperator(x))))", "(all x.(Wren(x) -> -Wumpus(x)) & (Tompus(x) | IsPlatform(x))))", "(all x.(Wren(x) -> -Wumpus(x)) & ((Wren(x) -> Zumpus(x))) |(Wren(x) -> Issue(x))))", "(all x.(Wren(x) -> -Wumpus(x)) & (Tompus(x) | Imperia(x))))", "all x.(Wren(x) -> (-Wumpus(x) & zumpus(x) & impus(x)))", "(all x.(Wren(x) -> -Wumpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Impossible(x)))", "all x y z.((Wren(x) & Wren(y) & Zombie(z)) -> (-Wumpus(x) & Zumpus(y) & impus(z)))", "((Wren(Wurpus) | Zumpus(Wren)) | impus(Wren))", "(all x.(Wren(x) -> -Wumpus(x)) & all y.(Wren(y) -> Zumpus(y))) & all z.(Wren(z) -> Ceremonial(z))))", "(all x y z.((Wren(x) & Wumpus(y) & Zumpus(z))) -> (-Wumpus(x) | Zumpus(y) & Impeccable(z))))", "(all x.(Wren(x) -> -Wumpus(x)) & All y.(Wren(y) -> Zumpus(y)) & All z.(Wren(z) -> Impossible(z))))", "(all x.(Wren(x) -> (-Wumpus(x) | Zurpus(x)) | Imperative(x)))"]}
{"id": "prontoqa_train_313", "nl": "Wren is not a rompus.", "fol": "-rompus(Wren)", "prediction": ["-(Rompus(Wren))", "Wren is not a Rompus.", "all x.(Henry(x) -> -Rompus(x))", "all x.(Wren(x) -> -Rrompus(x))", "-Rompus(Wren)", "exists x.(Wren(x) & -Rompus(x))", "-Rommet(Wren)", "all x.(Wren(x) -> -Rompus(x))", "-Rompus(Wren)", "exists x.(Wren(x) & -Rompus(x))", "all x.(Wren(x) -> -Rompus(x))", "-Romesu(wren)", "all x.(Wren(x) -> -Rompus(x))", "all x.(Wren(x) -> -Rompus(x))", "(-Rompus(Wren))", "Wren is not a rompus."]}
{"id": "prontoqa_train_314", "nl": "Each lorpus is a vumpus.", "fol": "all x. (lorpus(x) -> vumpus(x))", "prediction": ["all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vampus(x))", "all x.(Larpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vulpis(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vimpus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vanumpus(x))", "all x.(Lorpus(x) -> Vumpus(x))"]}
{"id": "prontoqa_train_315", "nl": "Wren is a grimpus, Wren is a zumpus, and Wren is not a vumpus.", "fol": "(grimpus(Wren) & zumpus(Wren) & -vumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Grimpus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> -Vumpus(z))))", "(all x.(Wren(x) -> Grypus(x)) & ((Wren(x) -> Zumpus(x))) & ((Wren(x) -> -Vumpus(x))))", "(all x.(Wren(x) -> Grimpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> -Vumpus(x)))", "(all x y.((Wren(x) & Grimpus(x)) & ((Wren(y) & Zumpus(y))) -> -Vumpus(y)))", "(all x.(Wren(x) -> Grimpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> -Vumpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & (Wren(x) -> Zumpus(x)) & -Vumpus(x)))", "all x y z.((Wren(x) & Grimpus(x) & Zumpus(y) & -Vumpus(z)) -> (Grimpus(x) | Zumpus(y) & -Mumpus(z)))", "(all x y z.(Wren(x) -> Grimpus(x)) & (Wren(y) -> Zumpus(y)) & (Wren(z) -> -Vumpus(z)))", "(all x.(Wren(x) -> Grimpus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> -Vumpus(z))))", "(all x y z.(Wren(x) -> Grimpus(x)) & (Wren(y) -> Zumpus(y)) & (Wren(z) -> -Vumpus(z))))", "(all x.(Wren(x) -> Grimpus(x)) & (Wren(x) -> Zumpus(x)) & -Vumpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> -Vumpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> -Vimpus(z))))", "(all x.(Wren(x) -> Grimpus(x)) & (Wren(x) -> Zurpus(x)) & (Wren(x) -> -Vuspus(x)))", "are (all x.(Wren(x) -> Grimpus(x)) & (Wren(x) -> Zumpus(x)) & -Vulmpus(x)))", "all x y z.((Wren(x) & Grimpus(y) & Zumpus(z)) -> (Grimpus(x) | Umpus(z)) | -Vumpus(z)))"]}
{"id": "prontoqa_train_316", "nl": "Wren is not a lorpus.", "fol": "-lorpus(Wren)", "prediction": ["all x.(Wren(x) -> (-Lorpus(x)))", "-Lorpus(Wren)", "IsLorpus(Wren)", "-Lorpus(Wren)", "all x.(Wren(x) -> -Lorpus(x))", "all x.(Wren(x) -> -Lorpus(x))", "all x.(Wren(x) -> -Lorpus(x))", "all x.(Wren(x) -> -Lorpus(x))", "all x.(Wren(x) -> -Lorpus(x))", "all x.(Wren(x) -> -Lorpus(x))", "Wren, however, is not a lorpus.", "all x.(Wren(x) -> -Larpus(x))", "-Lorpus(Wren)", "All x.(Wren(x) -> -Lorpus(x))", "(-Lorpus(Wren,))", "Wren has a tad(t) & -Lorpus(t))"]}
{"id": "prontoqa_train_317", "nl": "Brimpuses are lorpuses.", "fol": "all x. (brimpus(x) -> lorpus(x))", "prediction": ["all x.(Brimpus(x) -> Lompus(x))", "all x.(Brumpus(x) -> Loomis(x))", "all x.(Brompus(x) -> Thrombuse(x))", "all x.(Brompus(x) -> Lorpus(x))", "all x.( Brimpuse(x) -> Liplose(x))", "all x.(Birmuk(x) -> (Lorpuse(x) & LivesIn(x)))", "all x.(Brumpus(x) -> AreLorpuses(x))", "all x.(Brimpus(x) -> Lopuse(x))", "all x.(Brimpus(x) -> Lorpus(x))", "all x.(Brompus(x) -> Lorpus(x))", "all x.(Brimpus(x) -> Loomis(x))", "all x.(Brimpus(x) -> Lompus(x))", "all x.(Birmpuse(x) -> Loomise(x))", "all x.(Brompus(x) -> Lorpus(x))", "all x.(Brimpus(x) -> Lorpus(x))", "all x.(Brimus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_318", "nl": "Rex is a shumpus, Rex is not a lorpus, and Rex is a jompus.", "fol": "(shumpus(Rex) & -lorpus(Rex) & jompus(Rex))", "prediction": ["(all x.(Rex(x) -> Shinhpus(x)) & (Rex(x) -> -Lorpus(x)) & (Rex(x) -> Jompus(x)))", "(all x y z.((Rex(x) & Humpus(y) & Orangutan(z)) -> Shumpus(x)) & ((Rex(x) & -Lorpus(x)) -> Jompus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (-Lorpus(x) & (Jumpus(x) | -Lorpus(x))))", "(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> -Lorpus(x)) & (Rex(x) -> Jompus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (Rex(x) -> -Lorpus(x)) & (Rex(x) -> Jompus(x)))", "all x y z.((Rex(x) & Lord(y) & Jompus(z)) -> (Shumpus(x) & -Lorpus(y) & Jompus(z)))", "(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> -Lorpus(x)) & (Rex(x) -> Jompus(x))))", "(all x.(Rex(x) -> Shumpus(x)) & (-Rolpus(x) & -Rolpus(x)) & (Jompus(x))))", "(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> -Lorpus(x)) & (Rex(x) -> Jompus(x)))", "(all x y z w.(Rex(x) -> Shumpus(x)) & (-Lorpus(y) & (Rex(z) -> Jompus(w))))", "(all x.(Rex(x) -> Humpus(x)) & (-lorpus(x) & (Jimpus(x) | (Shumpus(x) | Jompus(x)))))", "all x y z.((Shumpus(x) & Grafisk(y) & Jompus(z)) -> (Shumpus(x) & -Lorpus(y) & Jompus(z)))", "(all x.(Rex(x) -> Humpus(x)) & (-Lorpus(x) & Jompus(x)))", "(all x y z.((Rex) & Shumpus(x)) -> Shumpus(x)) & ((Rex(y) & -Lorpus(y)) -> Jompus(z)))", "(all x.(Rex(x) -> Shumpus(x)) & (-lorpus(x) & Rex(x)) -> Jompus(x)))", "(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> -Llorpus(x)) & (Rex(x) -> Jompus(x)))"]}
{"id": "prontoqa_train_319", "nl": "Rex is not a brimpus.", "fol": "-brimpus(Rex)", "prediction": ["-Brimpus(Rex)", "no brimpus.", "Rex, -Brimpus(x))", "Rex is not a brimpus.", "Rex is not a Brimpus.", "Rex is -Brimpus(rex)", "-Amphibian(Rex)", "(-Brimpus(Rex))", "Rex is not brimpus(x)", "all x.(Rex(x) -> -Brimpus(x))", "Rex is not a Brimpus.", "-Brumpus(Rex)", "Rex is not brimpus.", "(-Brimpus(rex))", "Rex.(Brimpus(x))", "Rex notBrampus(Rex)"]}
{"id": "prontoqa_train_320", "nl": "Yumpuses are impuses.", "fol": "all x. (yumpus(x) -> impus(x))", "prediction": ["all x.(Yumpus(x) -> Impiress(x))", "all x.(Yumpus(x) -> Impedied(x))", "all x.(Yumpus(x) -> Issue(x))", "all x.(Umahawk(x) -> Impecte(x))", "all x.(Yumpus(x) -> Impecte(x))", "all x.(Yumpus(x) -> Exercise(x))", "all x.(Umpus(x) -> Impreza(x))", "all x.(Yumpus(x) -> Ispose(x))", "all x.(Yumpus(x) -> Issue(x))", "all x.(Yumpus(x) -> Impose(x))", "all x.(Yumpus(x) -> Impose(x))", "all x.(Umpus(x) -> Ispose(x))", "all x.(Yumpus(x) -> Issue(x))", "all x.(Yumpus(x) -> Issue(x))", "all x.(Yumpus(x) -> Impenetrable(x))", "all x.(Yumpus(x) -> Issue(x))"]}
{"id": "prontoqa_train_321", "nl": "Max is a rompus, Max is not an impus, and Max is a lorpus.", "fol": "(rompus(Max) & -impus(Max) & lorpus(Max))", "prediction": ["(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Impossible(x))) & (Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Lorpus(x)))", "(all x y z.(Popular(x) -> Rompus(x)) & ((Popular(y) & -Impossible(y)) -> Lorpus(z)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Lorpus(x)))", "(all x.(Rompus(x) -> Rompus(x)) & (NotIssue(x) -> Loph(x)))", "(all x y.((Max(x) & Rompus(x)) -> Ramp(y)) & ((Max(x) | -Impossible(x))) -> Lorpus(x)))", "(all x.((Max(x) & ROMPUS(x)) -> Illinis(x)) & all y.((Max(y) & LLorpus(y)) -> Loompus(y)))", "-exists x.(Minim(x) & Rompus(x) & -Impossible(x) & -Lorpus(x))", "(all x.(Mother(x) -> ROMPUS(x)) & all y.((Mother(y) & -Issue(y)) -> Loupus(y)))", "all x y z.((Max(x) & Rumpus(y) & -Imperial(z)) -> ((Rompus(x) | Lorpus(y))) & (Lorpus(z) -> -Imperial(z))))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Lorpus(x)))", "(all x.(Rompus(x) -> Max(x)) & (Promo(x) -> -Erzdrol(x)) & (Lorpus(x) -> Max(x)))", "all x y z.((Max(x) & Rompus(y) & Minimum(z)) -> (-Impressor(z) & Minimum(z) & Lorpus(z)))", "(all x.(Max(x) -> Rrompus(x)) & (Max(x) -> -Ivren(x)) & (Max(x) -> Lorpus(x)))", "all x y z.((Prompus(x) & Duplicat(y) & Lorpus(z)) -> (Rompus(x) & -Issue(y) & Lower(z)))"]}
{"id": "prontoqa_train_322", "nl": "Max is not a yumpus.", "fol": "-yumpus(Max)", "prediction": ["(-Yumpus(Max))", "Max is notyumpus.", "(-Yumpus(Max))", "-Yumpus(Max)", "-Yumpus(Max)", "(-Yumpus(Max))", "(-Yumpus(Max))", "all x.(Max(x) -> -Yumpus(x))", "all x.(Max(x) -> -Yumpus(x))", "all x.((Max(x) & -Yumpus(x)) -> -Yumpus(x,y))", "(-Yumpus(Max))", "all x.((Max(x) & -Yumpus(x)) -> -Yumpus(x))", "(-Yumpus(Max))", "-Yummus(Max)", "(Excel(Max) -> -Yumpus(Max))", "Max.(x) & -Yumpus(x))"]}
{"id": "prontoqa_train_323", "nl": "Each rompus is a vumpus.", "fol": "all x. (rompus(x) -> vumpus(x))", "prediction": ["all x.(Rompus(x) -> Vumpus(x))", "all x.(Rompus(x) -> Vumpus(x))", "all x.(Rompus(x) -> Vampire(x))", "all x.(Rompus(x) -> Vumpus(x))", "all x.(Rompus(x) -> Vampum(x))", "all x.(Rompus(x) -> Vumpus(x))", "all x.(Rompus(x) -> Vumpus(x))", "all x.(Morompus(x) -> Vumpus(x))", "all x.(Rompus(x) -> Vumpus(x))", "all x.(Rompus(x) -> Vumpus(x))", "all x.(Rompus(x) -> Vumpus(x))", "all x.(Rompus(x) -> Vumpus(x))", "all x.(Rompus(x) -> Vumpus(x))", "all x.(Rompus(x) -> Vumpus(x))", "all x.(Rompus(x) -> Vumpus(x))", "all x.(Romes(x) -> Vumpus(x))"]}
{"id": "prontoqa_train_324", "nl": "Fae is a wumpus, Fae is not a vumpus, and Fae is an impus.", "fol": "(wumpus(Fae) & -vumpus(Fae) & impus(Fae))", "prediction": ["(all x y z.((Fae(x) & Wumpus(y)) -> Wumpus(x)) & ((Fae(z) & -Vumpus(z)) -> Impossible(z)))", "(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Vumpus(x)) & (Fae(x) -> Imperator(x)))", "all x y z.((Fae(x) & Wumpus(y) & Is(z)) -> (Wumpus(x) & NoVimpus(x) & Impossible(x)))", "all x y z.((Fae(x) & Wumpus(y) & Vampire(z)) -> (Wumpus(x) & -Vumpus(x) & Is(x)))", "(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Vimpus(x)) & (Fae(x) -> Imperium(x)))", "(all x.(Fae(x) -> Wumpus(x)) & all y.(Fae(y) -> -Vumpus(y)) & all z.(Fae(z) -> Imperator(z))))", "(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Vumpus(x)) & (Fae(x) -> Impossible(x)))", "(all x.(Fae(x) -> Wumpus(x)) & all y.(Fae(y) -> -Vumpus(y)) & all z.(Fae(z) -> Issuel(z))))", "all x y z.((Fae(x) & Wumpus(x) & Fae(y) & Vuxpus(z)) -> (Wumpus(x) & Imperemptory(y)))", "(all x y z.(Fae(x) -> Wumpus(x)) & (Fae(y) -> -Vumpus(y)) & (Fae(z) -> Imperato(z)))", "all x y z.((Fae(x) & Wumpus(x) & Fae(y) & Imperator(z)) -> (Wumpus(x) & -Vumpus(y) & Imperator(z)))", "all x.(Fae(x) -> (Wumpus(x) & -Vumpus(x) & IsEraser(x)))", "all x y z.((Fae(x) & Wumpus(x) & Fae(y) & Imperium(z)) -> (Wumpus(x) | -Vumpus(y) & Imperium(z)))", "all x y z.((Fae(x) & Famu(y) & Impossible(z)) -> (Wumpus(x) & -Vumpus(y) & Isugar(z)))", "(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Vumpus(x)) & (Fae(x) -> Impossible(x)))", "all x y z.((Fae(x) & Fae(y) & Imperator(z)) -> (Wumpus(x) & -Vimpus(y) & Imperator(z)))"]}
{"id": "prontoqa_train_325", "nl": "Fae is not a rompus.", "fol": "-rompus(Fae)", "prediction": ["all x.(Fae(x) -> -Rompus(x))", "all x.(Fae(x) -> -Rompus(x))", "-Rompus(Fae)", "(-Rompus(Fae))", "-Rompus(Fae)", "all x.(Fae(x) -> -Rompus(x))", "exists x.(Fae(x) & -Rompus(x))", "all x.(Fae(x) -> -Rompus(x))", "(-Rompus(Fae))", "(Propus(Fae) | Rabbit(Fae)))", "(-Rompus(Fae))", "(NORompus(Fae))", "(-Rompus(Fae))", "Der Fae ist kein Rompus.", "Fae is not a rompus.", "(-Rompus(Fae))"]}
{"id": "prontoqa_train_326", "nl": "Each rompus is a yumpus.", "fol": "all x. (rompus(x) -> yumpus(x))", "prediction": ["all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(ROMPUS(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yumps(x))", "all x.(Rompus(x) -> Yampus(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yampus(x))", "all x.(Rompus(x) -> Yumpa(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yumps(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yumpa(x))", "all x.(Rompus(x) -> Yumpus(x))", "exists x.(Rompus(x) & Yumpa(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yumpus(x))"]}
{"id": "prontoqa_train_327", "nl": "Stella is a brimpus and Stella is an impus and Stella is not a yumpus.", "fol": "(brimpus(Stella) & impus(Stella) & -yumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Brimpus(x)) & all y.(Stella(y) -> Impermissible(y)))", "(all x.(Stella(x) -> Brimpus(x)) & all y.(Stella(y) -> Issue(y))) & all z.(Stella(z) -> -Yumpus(z))))", "(all x.(Brumpus(x) & Relics(x)) & (Yumpus(x) | Brumpus(x))))", "(all x.(Brimpus(x) -> Stella(x)) & all y.(Implementation(y) -> Stella(y)))", "(all x.(Stella(x) -> Brimpus(x)) & all y.(Stella(y) -> Impossible(y))) & all z.(Stella(z) -> -Yumpus(z))))", "all x y.((Stella(x) & Brimpus(x)) -> Is(x,y))", "(all x.(Stella(x) -> Brimpus(x)) & (Stella(x) -> Ivory(x)) & -Yumpus(x)))", "(all x y.(Brimpus(x) & Brimpus(y)) & (Issue(x,y) & Stella(z) & -Yumpus(z)))", "(all x.(Stella(x) -> Brimpus(x)) & (Stella(x) -> Imperator(x)) & (Stella(x) -> -Yumpus(x))))", "(all x y.(Blimpse(x) & Brimpus(x)) & (Impossible(y) | -Yumpus(y))))", "(all x.(Stella(x) -> Brimpus(x)) & all y.(Stella(y) -> Impossible(y)))", "(all x y z.(Bimpus(x) -> Brimpus(x)) & (Impossible(y) -> Imperator(z)) & (Yumpus(z) -> -Yumpus(z)))", "all x y.((Stella(x) & Brimpus(y)) -> (Imperial(y) & -Yumpus(y)))", "(all x.(Stella(x) -> Brimpus(x)) & (Stella(x) -> Imperator(x)) & (Stella(x) -> -Yumpus(x)))", "(all x.(Stella(x) -> Brimpus(x)) & all y.(Stella(y) -> Isposer(y)))", "(all x.(Brimpus(x) -> Stellas(x)) & (Imperio(x) -> Stellas(x)) & (Yumpus(x) -> Stellas(x))))"]}
{"id": "prontoqa_train_328", "nl": "Each brimpus is a zumpus.", "fol": "all x. (brimpus(x) -> zumpus(x))", "prediction": ["all x.(Brahmpus(x) -> Zumpus(x))", "all x.(Brompus(x) -> Zumpus(x))", "all x.(Bimpus(x) -> Zumpus(x))", "(Blimpus(bm) | Zumpus(cm)))", "all x.(brimpus(x) -> Zumpus(x))", "all x.(Brumpus(x) -> Zumpus(x))", "all x.(Brumpus(x) -> Zumpus(x))", "all x.(Brimpus(x) -> Zumpus(x))", "all x.(Brumpus(x) & Zumpus(x))", "all x.(Brompus(x) -> Zumpus(x))", "all x.(Brimpus(x) -> Zumpus(x))", "all x.(Brimpus(x) -> Zumpus(x))", "all x.(Brimpus(x) -> Zumpus(x))", "all x.(Brimpus(x) -> Zumpus(x))", "all x.(Brimpus(x) -> Zumpus(x))", "all x.(Brumpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_329", "nl": "Max is a rompus, Max is not a zumpus, and Max is a wumpus.", "fol": "(rompus(Max) & -zumpus(Max) & wumpus(Max))", "prediction": ["(all x.((Max(x) & Rompus(x)) -> Rrompus(x)) & ((Max(x) & -Zumpus(x))) -> Wumpus(x)))", "(all x.(Max(x) -> Rompus(x)) & all y.(Max(y) -> -Zumpus(y))) & all z.(Max(z) -> Wumpus(z)))", "(all x y z.((Max(x) & Rompus(x)) -> (Rompus(x) & -Tompus(y) & Wumpus(z))))", "all x y z.((Max(x) & Roman(y) & Tolkien(z)) -> (Rompus(x) | -Zumpus(x) & Wumpus(x)))", "(all x.(Rompus(x) | Toumpus(x))) & (Rompus(x) -> Wurmpus(x)))", "(all x.(Max(x) -> Rompus(x)) & all y.(Max(y) -> -Zumpus(y))) & all z.(Max(z) -> Wumpus(z)))", "all x y z.((Max(x) & Rumpus(y) & Tompus(z)) -> (Rompus(x) & -Tompus(y) & Wumpus(z)))", "(all x.(Max(x) -> Rompus(x)) & all y.(Max(y) -> -Zumpus(y))) & all z.(Max(z) -> Wumpus(z)))", "all x.(Max(x) -> (Rompus(x) & -Zumpus(x) & Wumpus(x)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Zumpus(x)) & (Max(x) -> Wumpus(x)))", "(all x.(Max(x) -> Rompus(x)) & ((Max(x) -> -Tompus(x)) | (-Tompus(x) & -Tompus(x))))", "(all x y z.((Max(x) & Rompus(y)) -> (Rompus(x) & -Zumpus(y)) & ((Max(z) & Yumpus(z)) -> Wumpus(z))))", "all x.((Max(x) -> Rhopus(x)) & (-Zumpus(x) & -Wumpus(x)))", "(all x y.(Rompus(x) -> Rompus(x)) | (Zumpus(y) -> -Rompus(y))) & (Wumpus(y)) -> Willoper(y)))", "(all x.(Mima(x) -> Rompus(x)) & (Mima(x) -> -Tompus(x))) & (Mima(x) -> Wumpus(x)))", "(all x y z.((Max(x) & Rompus(y)) -> (Rompus(x) & -Tompus(y)) & ((Max(z) & Zumpus(z)) | (Wumpus(z))))))"]}
{"id": "prontoqa_train_330", "nl": "Each lorpus is a brimpus.", "fol": "all x. (lorpus(x) -> brimpus(x))", "prediction": ["all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_331", "nl": "Wren is a lempus and Wren is a tumpus and Wren is not a brimpus.", "fol": "(lempus(Wren) & tumpus(Wren) & -brimpus(Wren))", "prediction": ["(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brumpus(z))))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> -Brimpus(z))))", "all x y.((Wren(x) & Lempus(x) & Tompus(y)) -> (Lempus(x) & Tompus(y) & -Brumpus(y)))", "(all x.(Wren(x) -> Lempus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Brimpus(x))))", "all x y,((Wren(x) & Lempus(x) & Tumpus(y) & -Brumpus(x)) -> (Lempus(x) & Tumpus(y) & -Brimpus(z)))", "all x y z.((Wren(x) & Lempus(x) & Tumpus(y) & -Brimpus(z)) -> (Lempus(x) & Tumpus(y) & -Brimpus(z)))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brumpus(z))))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "(all x y z.(Wren(x) -> Lempus(x)) & ((Wren(y) & Humpus(z))) -> Tumpus(y)) & ((Wren(z) & -Brimpus(z)) -> Lempus(x)))", "all x y.((Wren(x) & Texan(y)) -> (Lempus(x) & Tumpus(y) & -Brimpus(x)))", "all x y z.((Wren(x) & Lempus(x) & Tumpus(y) & -Brimpus(z)) -> (Lempus(x) & Tumpus(y) & -Brimpus(z)))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brumpus(z))))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> -Brumpus(z))))"]}
{"id": "prontoqa_train_332", "nl": "Alex is a shumpus, Alex is not a numpus, and Alex is a wumpus.", "fol": "(shumpus(Alex) & -numpus(Alex) & wumpus(Alex))", "prediction": ["(all x.(Alex(x) -> Shumpus(x)) & all y.(Alex(y) -> -Numpus(y)) & all z.(Alex(z) -> Wumpus(z))))", "all x y z.((Alex(x) & Humpus(y) & Bump(z)) -> (Shumpus(x) & -Numpus(y) & Wumpus(z)))", "all x y z.((Alex(x) & Numpus(y) & Wumpus(z)) -> (Shumpus(x) | -Numpus(y) | Wumpus(z)))", "(all x.(Alex(x) -> Shumpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Wumpus(x))))", "(all x y z.((Alex(x) & Humpus(y)) -> Shumpus(x)) & ((Alex(z) & -numpus(z))) -> Wumpus(z)))", "all x.(Alex(x) & (Shumpus(x) | Nompus(x) | Wumpus(x)))", "(all x.(Alex(x) -> Humpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Wumpus(x)))", "all x y z.((Alex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) | Numpus(y) & Wumpus(z)))", "all x y z.((Alex(x) & Saumpus(y) & Numpus(z)) -> (Shumpus(x) | Wumpus(x)))", "(all x.(Alex(x) -> Humpus(x)) & ((Alex(x) & -Shumpus(x)) -> Wumpus(x))))", "all x y z.((Alex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Wumpus(x)))", "(all x y.(Shumpus(x) -> Alex(x)) & (Nompus(y) -> Alex(y))) & (Wumpus(y) -> Alex(y)))", "(all x y z.(Alex(x) -> Humpus(x)) & ((Alex(y) & -Numpus(y)) -> Wumpus(z)))", "(all x.(Alex(x) -> Humpus(x)) & (Alex(x) -> -Nompus(x)) & (Alex(x) -> Wumpus(x)))", "(all x.(Alex(x) -> Shumpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Wumpus(x)))", "all x y z.((Alex(x) & Snompus(y) & Numpus(z)) -> (Shumpus(x) | Wumpus(y)))"]}
{"id": "prontoqa_train_333", "nl": "Yumpuses are lempuses.", "fol": "all x. (yumpus(x) -> lempus(x))", "prediction": ["all x.(Yumpus(x) -> Lempuse(x))", "all x.(Yumpus(x) -> Lempuse(x))", "all x.(Yumpus(x) -> Lempuse(x))", "all x.(Yumpus(x) -> Lempuse(x))", "all x y.((Yumpus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Yumpus(x) -> Lempuse(x))", "all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempuse(x))", "all x.(Yumpus(x) -> Lempuse(x))", "all x.(Yumpus(x) -> Lempuse(x))", "all x.(Umpus(x) -> Lempuse(x))", "all x.(Yumpus(x) -> Lempuse(x))", "all x.(Umpus(x) -> Lempuse(x))", "all x.(Yumpus(x) -> Lempuse(x))", "all x.(Yumpus(x) -> Lempuse(x))", "all x.(Ayumpus(x) -> Lempuse(x))"]}
{"id": "prontoqa_train_334", "nl": "Alex is a zumpus and Alex is not a lempus and Alex is a wumpus.", "fol": "(zumpus(Alex) & -lempus(Alex) & wumpus(Alex))", "prediction": ["(all x y z.(Alex(x) -> Zumpus(x)) & ((Alex(y) & -Lempus(y))) | (Alex(z) & Wumpus(z)))))", "all x y z.((Alex(x) & Zumpus(y) & Alex(z)) -> (-Lempus(z) & (Wumpus(x) | Toy(z))))", "(all x.(Alexa(x) -> Zumpus(x)) & (Alexa(x) -> -Lempus(x)) & (Alexa(x) -> Wumpus(x)))", "all x y z.((Alex(x) & Tompus(x) & Lempus(y) & Umbrella(z)) -> (HasTompus(x) & HasTompus(x) & HasTompus(x) & HasTompus(x)))", "all x y z.((Alex(x) & Zumpus(x) & Alex(y) & Lempus(z)) -> (Properly(x,y) & Tompus(y) & Wumpus(z)))", "all x y.((Alex(x) & Tompus(x) & -Lempus(y)) -> Wumpus(x))", "(all x.(Alexa(x) -> Zumpus(x)) & (-Alexa(x) -> Lempus(x)) & (-Alexa(x) -> Wumpus(x)))", "(all x.(Alexa(x) -> Tompus(x)) & (Alexa(x) -> -Lempus(x)) & (Alexa(x) -> Wumpus(x)))", "(all x.(Alexa(x) -> Zumpus(x)) & ((Alexa(x) & -Lempus(x))) -> Wumpus(x)))", "all x.(Alexa(x) & Zumpus(x) & -Lempus(x) & Wumpus(x))", "all x y.((Alex(x) & Zumpus(x)) -> (-Lempus(x) & Wumpus(y)))", "all x y z.((Alex(x) & Zumpus(x) & Alex(y) & Lempus(z)) -> (-Lempus(y) & Wampus(y)))", "(all x y.((Alex(x) & Zumpus(y)) -> Tender(x,y)) & ((Alex(x) & -Lempus(y)) -> Wumpus(x)))", "all x y z.((Alex(x) & Tompus(x) & Lempus(y) & Wumpus(z)) -> (Tompus(x) & -Lempus(y) & Wumpus(z)))", "all x.(Alex(x) -> (Tompus(x) & -Lempus(x) & Wumpus(x)))", "all x y z.((Alex(x) & Zumpus(y) & Alex(z)) -> (-Lempus(z) & Wumpus(x)))"]}
{"id": "prontoqa_train_335", "nl": "Shumpuses are lempuses.", "fol": "all x. (shumpus(x) -> lempus(x))", "prediction": ["all x.(Shumpus(x) -> Lempuse(x))", "all x.(Shuppe(x) -> Lempuse(x))", "all x.(Shupuse(x) -> Lempuse(x))", "all x.(Shumpuse(x) -> Lempuse(x))", "all x.(Shuppe(x) -> Lempuse(x))", "all x.(Shampoo(x) -> Lempuse(x))", "all x.(Shimmer(x) -> Lempuse(x))", "all x.(Shumpus(x) -> Lempuse(x))", "all x.(Shumpus(x) -> Lempuse(x))", "all x.(Shumpus(x) -> Lempuse(x))", "all x.(Shumpuse(x) -> Lempuse(x))", "all x.(Shumper(x) -> Lempus(x))", "all x.(Shumpuse(x) -> Lempuse(x))", "all x.(Shumpuse(x) -> Lempuse(x))", "all x.(Shupuse(x) -> Lempuse(x))", "all x.(Shumpuse(x) -> Lempuse(x))"]}
{"id": "prontoqa_train_336", "nl": "Stella is a sterpus and Stella is not a lempus and Stella is a zumpus.", "fol": "(sterpus(Stella) & -lempus(Stella) & zumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Sterpus(x)) & (Stella(x) -> -Lempus(x)) & (Stella(x) -> Zumpus(x)))", "(all x.(Stella) -> Sterpus(x)) & (-Lempus(x) & -Zumpus(x)))", "(all x.(Stella(x) -> Sterpus(x)) & ((Stella(x) & -Lempus(x)) | (Stella(x)) -> Zumpus(x))))", "all x y.((Stella(x) & Sterpus(x)) -> (-Lempus(y) & Zumpus(y)))", "all x y.((Stella(x) & Sterpus(x)) & (-Lempus(y) & Zumpus(z))) -> (Dempus(x) | -Lempus(y) & Zumpus(z)))", "all x.(Stella(x) -> ((Sterepus(x) & -Lempus(x)) | Zombies(x))))", "all x.(Stella(x) -> (Sterpus(x) & -Lempus(x) & Zumpus(x)))", "all x y.((Stella(x) & Sterepus(x)) -> (NeverLempus(y) & Tostopus(x)))", "all x y.((Stella(x) & Sterpus(x)) -> (-Lempus(y) & Zumpus(x)))", "(all x.(Stella(x) -> Sterpus(x)) & (-Lempus(x) | Zurpus(x))))", "(all x.(Stereo(x) -> Remarkable(x)) & (Zupus(x) -> Reptile(x)))", "(all x.(Stella(x) -> Sterpus(x)) | (-Stella(x) & Lempus(x))) | (Stella(x) -> Zumpus(x))))", "(all x.(Stella(x) -> Sterpus(x)) & all y.(Stella(y) -> -Lempus(y)) & all z.(Stella(z) -> Zumpus(z)))", "all x.((Stella(x) & Sterpus(x)) -> (-Lempus(x) & Zumpus(x)))", "(all x.(Superstar(x) -> Sterpus(x)) & (superstar(x) -> -Lempus(x)) & (superstar(x) -> zumpus(x)))", "all x.(Sterpus(x) & (-Lempus(x) | Zumpus(x))) -> (Storpus(x) & -Storpus(x)))"]}
{"id": "prontoqa_train_337", "nl": "Stella is not a shumpus.", "fol": "-shumpus(Stella)", "prediction": ["all x.(Stella(x) -> -Shumpus(x))", "Stella is not shumpus.", "-Shumpus(Stella)", "Stella -Shumpus(Stella)", "Stella -Shumpus(s)", "(-Shumpus(Stella))", "notHybrid(Stella)", "Stella is not a shumpus.", "Stella is not a shumpus.", "Stella, the hapless flower, does not have shumpus.", "Stella (Shumpus)", "Stella is -Shumpus(Stilla)", "all x.(Stella(x) -> -Shumpus(x))", "Stella is not shumpus.", "Stella (-Shumpus(Stella))", "(nonshumpus(Stella)"]}
{"id": "prontoqa_train_338", "nl": "Every yumpus is a rompus.", "fol": "all x. (yumpus(x) -> rompus(x))", "prediction": ["all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rimpus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_339", "nl": "Fae is a sterpus, Fae is not a rompus, and Fae is a numpus.", "fol": "(sterpus(Fae) & -rompus(Fae) & numpus(Fae))", "prediction": ["(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Numpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Numpus(x)))", "(all x y z.(Fae(x) -> Strep(x)) & (Fae(y) | -Rompus(y))) & (Fae(z) -> Numpus(z)))", "(exists x.(Fae(x) & Sterpus(x)) & exists y.(Rompus(y) & -Rompus(y))) & exists z.(Numerus(z) & Fae(z) & DoesNot(z))))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Numpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & (Bridal(x) -> -Rompus(x)) & (Numpus(x))))", "all x.(Fae(x) -> (Steroid(x) & -Rompus(x) & Numpus(x)))", "all x y z.(Fae(x) & Sterpus(y) & Fresh(z) & (Numpus(x) | (Numpus(z) & -Rompus(y)))))", "all x y z.((Fae(x) & Sterpus(x) & Fae(y) & Roompus(z)) -> (-Rompus(y) & Numpus(z)))", "(all x.(Fae(x) -> Sterpus(x)) & all y.(Fae(y) -> -Rompus(y)) & all z.(Fae(z) -> Numpus(z))))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Numpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & all y.(Fae(y) -> -Rompus(y)) & all z.(Fae(z) -> Numpus(z)))", "all x y z.((Fae(x) & Sterpus(y) & Rompus(z)) -> (Scherpus(x) | Numpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Numpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & all y.(Fae(y) -> -Rompus(y)) & all z.(Fae(z) -> Numpus(z))))", "(all x.(Fae(x) -> Steropod(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Numpus(x)))"]}
{"id": "prontoqa_train_340", "nl": "Fae is not a yumpus.", "fol": "-yumpus(Fae)", "prediction": ["-Yumpus(Fae)", "(-Yumpus(Fae))", "(-Yumpus(Fae))", "(yumpus(Fae) & -Yumpus(Fae))", "-Yumpus(Fae)", "-Yumpus(Fae)", "all x.(Fae(x) -> -Yumpus(x))", "(-Yumpus(fae))", "all x.(Fae(x) -> -Yumpus(x))", "(yumpus)", "-Yumpus(Fae)", "-Yumpus(Fae)", "(Yumpus(Fae))", "(-Yumpus(Fae) & -Yumpus(Fae))", "(Rainbow(Fae) & -Yumpus(Fae))", "all x.(Fae(x) -> -Yumpus(x))"]}
{"id": "prontoqa_train_341", "nl": "Fae is a wumpus, Fae is not a gorpus, and Fae is a vumpus.", "fol": "(wumpus(Fae) & -gorpus(Fae) & vumpus(Fae))", "prediction": ["(all x y.((Wumpus(x) & Fae(y)) -> Wumpus(x)) & ((Rose(y) & Fae(y)) -> -Gorpus(y))) & ((Vumpus(y)) -> -Wumpus(y)))", "all x.((Fae(x) & Wumpus(x)) | (-Gorpus(x) & Vumpus(x))))", "all x y z.((Fae(x) & Umbrella(y) & Gorpus(z)) -> (AsWumpus(x) & -AsGorpus(x) & AsVimpus(x)))", "(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Gorpus(x)) & (Fae(x) -> Vumpus(x)))", "(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Gorpus(x)) & (Fae(x) -> Vumpus(x)))", "(all x y.((Fae(x) & Wumpus(x)) -> Wumpus(x)) & ((Fae(y) & -Gorpus(y)) -> Vumpus(y)))", "(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Gorpus(x)) & (Fae(x) -> Vumpus(x)))", "(3,4 & -Gorpus(Fae) & (Vumpus(Fae) | -Gorpus(Fae)))", "(all x y.((Fae(x) & Wumpus(x)) -> Wumpus(x)) & ((Fae(y) & -Gorpus(y)) -> Vumpus(y)))", "(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Gorpus(x)) & (Fae(x) -> Tumpus(x)))", "exists x y z.(Fae(x) & Wumpus(x) & Fae(y) & Gorpus(z) & Fae(x) & Vumpus(x))", "(all x.(Fae(x) -> Wumpus(x)) & -(Fae(x) & Gorpus(x)) & -(Fae(x) & Vumpus(x))))", "(all x.(Fae(x) -> Wumpus(x)) & -(Fae(x) -> Gorpus(x)) & -(Fae(x) -> Vumpus(x)))", "all x y z.((Fae(x) & Wumpus(x) & -Ross(y) & Vumpus(z)) -> (Wumpus(x) & Vumpus(y)))", "(all x.(Fae(x) -> Wumpus(x)) & all y.((Fae(y) & -Gorpus(y))) -> Vumpus(y)))", "(all x.(Wumpus(x) -> Fae(x)) & (-Gorpus(x) -> Fae(x)) & (Vimpus(x) -> Fae(x)))"]}
{"id": "prontoqa_train_342", "nl": "Fae is not a tumpus.", "fol": "-tumpus(Fae)", "prediction": ["-Tumpus(Fae)", "-Tumpus(fae)", "(-Tumpus(Fae))", "(-Tumpus(Fae)", "in nature. Fae is NOTTumpus(fae).", "(-Tumpus(fee) & -Tumpus(fee))", "-Tumpus(Fae)", "-Tumpus(fae)", "all x.(Fae(x) -> -Tumpus(x))", "-Tumpus(Fae)", "all x.(Fae(x) -> -Tumpus(x))", "(-Tumpus(Fae))", "all x.(Fae(x) -> -Tumpus(x))", "all x.(Fae(x) -> Tumpus(x))", "all x.(Fae(x) -> -Tumpus(x))", "((Fae(f) & -Tumpus(f)))"]}
{"id": "prontoqa_train_343", "nl": "Brimpuses are yumpuses.", "fol": "all x. (brimpus(x) -> yumpus(x))", "prediction": ["all x.(Brumpus(x) -> Yumpus(x))", "all x.(Brimpus(x) -> Yampus(x))", "all x.(Brimpus(x) -> Yampus(x))", "all x.(Brimpus(x) -> Yumpus(x))", "all x.(Brimpus(x) -> Yumpus(x))", "all x.(Brimpus(x) -> Yampus(x))", "all x.(Brompus(x) -> Yumpus(x))", "all x.(Brompus(x) -> Yampus(x))", "all x.(Brompus(x) -> Yumpus(x))", "all x.(Brompus(x) -> Yumpus(x))", "all x.(Brimpus(x) -> Yumpus(x))", "all x.(Brimpus(x) -> Yumpus(x))", "all x.(Brimis(x) -> Yampus(x))", "all x.(Brompus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yampus(x))", "all x.(Brompus(x) -> Yampus(x))"]}
{"id": "prontoqa_train_344", "nl": "Sam is a lempus, Sam is a gorpus, and Sam is not a yumpus.", "fol": "(lempus(Sam) & gorpus(Sam) & -yumpus(Sam))", "prediction": ["all x y z.((Shadow(x) & Sam(y) & Lempus(z) & Gorpus(y)) -> (Lomes(x,y) & Gorpus(y) & -Yumpus(z)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> Gorpus(x)) & (Sam(x) -> -Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Gorpus(x) -> Gorpus(x)) & (Yumpus(x) -> -Yumpus(x)))", "all x y z.((Sam(x) & Lempus(x) & Gorpus(y) & Sam(z)) -> (Lempus(x) & Gorpus(y) & -Yumpus(z)))", "(all x y z.((Sam(x) & Lempus(y)) -> Gorpus(z)) & ((Sam(x) & Yumpus(z)) | (-Sam(x)))))", "all x y z.((Sam(x) & Lempus(x) & Gorpus(y) & -Yumpus(z)) -> (Orthograph(x,y) & Forge(y) & Forge(z,y)))", "(all x.(Sambushi(x) -> Lempus(x)) & (Sambushi(x) -> Gorpus(x)) & -Yumpus(x)))", "(all x y z.((Sam(x) & Lempus(x)) -> Is(x,y)) & ((Sam(z) & Gorpus(z)) -> Is(z,y)) & ((Sam(x) & Yumpus(z)) | (-Yumpus(x) & Lempus(y) & Gorpus(z))))))", "(all x.(Same(x) -> Lempus(x)) & all y.(Same(y) -> Gorpus(y)) & all z.(Same(z) -> -Yumpus(z))))", "all x.(Sam(x) -> (Lempus(x) & Gorpus(x) & -Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> Gorpus(x)) & -Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> Gorpus(x)) & (Sam(x) -> -Yumpus(x))))", "(all x y z.((Same(x) & Lempus(x)) -> (Same(y) & Gorpus(y)) & (-Same(z) & Yumpus(z))))", "all x.(Sam(x) -> (Lempus(x) & Gorpus(x) & -Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> Gorpus(x)) & (Sam(x) -> -Yumpus(x)))", "all x y z.((Sam(x) & Lempus(x) & Gorpus(y) & -Yumpus(z)) -> (Lempus(x) & Gorpus(y) & -Yumpus(z)))"]}
{"id": "prontoqa_train_345", "nl": "Every yumpus is a wumpus.", "fol": "all x. (yumpus(x) -> wumpus(x))", "prediction": ["all x.(Yumpus(x) -> (Wumpus(x) & AllMakronoma(x)))", "all x.(Yumpus(x) -> Wumpus(x))", "all x.(Yumpus(x) -> Wumpus(x))", "all x.(Yumpus(x) -> Wumpus(x))", "all x.(Yumpus(x) -> Wampus(x))", "all x.(Yumpus(x) -> Wumpus(x))", "all x.(Yumpus(x) -> Wumpus(x))", "all x.(Yumpus(x) -> Wumpus(x))", "all x.(Yumpus(x) -> Wumpus(x))", "all x.(Yumpus(x) -> Wumpus(x))", "all x.(Yumpus(x) -> Wormpus(x))", "all x.((Yumpus(x) & Wumpus(x)) -> HasYumpus(x))", "exists x.(Yumpus(x) & Wumpus(x))", "all x.(Yumpus(x) -> Wumpus(x))", "all x.(Yumpus(x) -> Wumpus(x))", "all x.(Yumpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_346", "nl": "Max is a lempus and Max is an impus and Max is not a wumpus.", "fol": "(lempus(Max) & impus(Max) & -wumpus(Max))", "prediction": ["(all x.(Max(x) -> Lempus(x)) & all y.(Max(y) -> Issue(y)) & -Wumpus(y)))", "(all x.(Max(x) -> Lempus(x)) & all y.(Max(y) -> Impossible(y))) & all z.(Max(z) -> -Wumpus(z)))", "(all x.(Max(x) -> Lempus(x)) & all y.(Max(y) -> Issue(y)) & all z.(Max(z) -> -Wumpus(z))))", "all x y.((Max(x) & Lempus(x) & Max(y)) -> (Impossible(y) & -Wumpus(z)))", "all x.(Max(x) -> (Limpus(x) & Impossible(x) & -Wumpus(x)))", "(all x.(Max(x) -> Lempus(x)) & (Max(x) -> Impossible(x)) & (Max(x) -> -Wumpus(x)))", "(all x y.(Rex(Max) -> Lempus(x)) | (Max(y) -> Imperempt(y)) & (Max(y) -> -Wumpus(y))))", "((Max(Max) & Lempus(Max)) & (Imisci(Max) & -Wumpus(Max)))", "all x.(Max(x) -> (Lempus(x) & Issue(x) & -Wumpus(x)))", "all x.(Max(x) -> ((Lempus(x) & -Wumpus(x)) | (Impossed(x) & -Wumpus(x))))", "(all x.(Max(x) -> Lempus(x)) & all y.(Max(y) -> Imperator(y))) & all z.(Max(z) -> -Wumpus(z)))", "all x.(Max(x) -> (Lempus(x) & Imitato(x) & -Wumpus(x)))", "(all x.(Max(x) -> Lempus(x)) & (Max(x) -> Imperator(x)) & (Max(x) -> -Wumpus(x)))", "(all x.(Max(x) -> Lempus(x)) & (Max(x) -> Irimposed(x)) & (Max(x) -> -Wumpus(x)))", "(Lumpus(Max) | Impossible(Max)) & -Wumpus(Max))", "(all x.(Max(x) -> Lempus(x)) & all y.(Max(y) -> Impossible(y))) & all z.(Max(z) -> -Wumpus(z)))"]}
{"id": "prontoqa_train_347", "nl": "Rompuses are jompuses.", "fol": "all x. (rompus(x) -> jompus(x))", "prediction": ["all x.(Rompuse(x) -> Jompuse(x))", "is jompuse(ropuses)", "all x.(Rompuse(x) -> Jompuse(x))", "all x.(Rompus(x) -> Jompuse(x))", "all x.(Rompus(x) -> Jompus(x))", "all x.(Rompuse(x) -> Jumpuse(x))", "all x.( Rompus(x) -> Jompus(x))", "all x.(Rompus(x) -> Jompus(x))", "all x.(Rompus(x) -> Jompuse(x))", "all x.(Rompus(x) -> (Jomeuse(x) & DesignedFor(x,y)))", "all x.(Rompus(x) -> Jompuse(x))", "all x.(Rompus(x) -> Jompuse(x))", "all x.(Rompu(x) -> Jompuse(x))", "all x.(Rompus(x) -> Jompuse(x))", "all x.(Jimpus(x) -> Jompuse(x))", "all x.(Rompus(x) -> Jompus(x))"]}
{"id": "prontoqa_train_348", "nl": "Fae is a lorpus and Fae is not a jompus and Fae is a yumpus.", "fol": "(lorpus(Fae) & -jompus(Fae) & yumpus(Fae))", "prediction": ["all x y.((Fae(x) & Lorpus(x) & -Jompus(y)) -> Yumpus(x))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> -Jompus(x)) & (Fae(x) -> Yumpus(x)))", "is a yumpus (yup,fae,x) & FaeLorpus(x) & -Jompus(y) & Yumpus(z))", "all x.(Fae(x) -> (Lorph(x) & -Jimpus(x) & Yumpus(x)))", "all x y z.((Fae(x) & Lorpus(x) & Fae(y) & Yunampus(z)) -> (-Horse(y) & -Jimpus(y)))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> -Jimpus(x)) & (Fae(x) -> Yumpus(x)))", "all x y z.((Fae(x) & Lorpus(y) & (Under(z) | -Jompus(z)) & Yampus(x)) -> (Lorpus(x) & -Yumpus(x)))", "all x y z.((Fae(x) & Lorpus(y) & Yumpus(z)) -> (Lorpus(x) & -Jompus(y) & Yampus(z)))", "all x y z.((Fae(x) & Lorpus(x)) & Fae(y) & -Jompus(y) & Yumpu(z)) -> (Dorse(x) & Jompus(y)))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> -Jompus(x)) & (Fae(x) -> Yumpus(x)))", "(all x.(Fae(x) -> Lopa(x)) & all y.(Fae(y) -> -Jompus(y))) & all z.(Fae(z) -> Yumpus(z)))", "all x y z.((Fae(x) & Lorpus(x) & -Jompus(y) & Yuppus(z)) -> (Lorpus(x) & -Jompus(y) & Yuppus(z)))", "(all x.(Fae(x) -> Lorpus(x)) & (-Host(x) -> Jompus(x)) & (-Host(x) -> Yumpus(x))))", "(all x.(Fae(x) -> Larp(x)) & (Fae(x) -> -Jampus(x)) & (Fae(x) -> Yumpus(x)))", "(all x y.(Lorpus(x) & Loomis(y)) & (Jompus(y) | Yumpus(y))) & (Fae(x) -> NoMosumpus(x)))", "all x y.((Fae(x) & Lorompus(x)) -> (-Jomesh(x) & Yumpus(y)))"]}
{"id": "prontoqa_train_349", "nl": "Every jompus is a lempus.", "fol": "all x. (jompus(x) -> lempus(x))", "prediction": ["all x.(Jompus(x) -> Lempus(x))", "all x.(Jompus(x) -> Lempus(x))", "all x.(Jompus(x) -> Lempus(x))", "all x.(Jimpus(x) -> Lempus(x))", "all x.(Jompus(x) -> Lempus(x))", "all x.(Jompus(x) -> Lempus(x))", "all x.(Jompus(x) -> Lempus(x))", "all x.(Jompus(x) -> Lempus(x))", "all x.(Jompus(x) -> Lempus(x))", "all x.(Jimpus(x) -> Lempus(x))", "all x.(Jompus(x) -> Lemma(x))", "all x.(Jompus(x) -> Lempus(x))", "all x.(Jompus(x) -> Lempus(x))", "all x.(Jompus(x) -> Lempus(x))", "all x.(Jompus(x) -> Lempus(x))", "all x.(Jomesta(x) -> Lempus(x))"]}
{"id": "prontoqa_train_350", "nl": "Sally is a vumpus and Sally is not a lempus and Sally is a grimpus.", "fol": "(vumpus(Sally) & -lempus(Sally) & grimpus(Sally))", "prediction": ["all x y.((Sally(x) & Sally(y)) -> (Vimpus(x) & -Lempus(y) & Grimpus(y)))", "all x.(Sally(x) -> (Vumpus(x) & -Lempus(x) & Gruppus(x)))", "(all x y.((Sally(x) & Vumpus(x)) -> Crumple(y)) & ((Sally(x) & -Lempus(y)) -> Grumpus(x)))", "all x y.((Sally(x) & Vompus(x) & NotLimpus(y)) -> (Sally(x) & Grimpus(x)))", "all x y.((Sally(x) & Vumpus(x) & Sally(y)) -> (-Lempus(y) & Grimpus(y)))", "all x y.((Sally(x) & Sally(y)) -> (Vumpus(x) & -Lempus(y) & Cramp(y)))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> -Lempus(x)) & (Sally(x) -> Grimpus(x))))", "((Vumpus(Sally) & -Lempus(Sally)) | (Sally(Sally) & Grimpus(Sally))))", "all x y z.((Sally(x) & Vumpus(x) & Sally(y) & Grimpus(z)) -> (-Lampus(y) & -Lempus(y) & Grimpus(z)))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> -Lempus(x)) & (Sally(x) -> Grimpus(x)))", "all x y.((Sally(x) & Gumpus(x)) -> (-Lempus(y) & Sally(x) & Grimpus(x)))", "((Sally(s) & Vermpus(s)) & -(Sally(s) & Lempus(s)) & -(Sally(s) & Grimpus(s)))", "(all x.(Sally(x) -> Umpus(x)) & (Sally(x) -> -Lempus(x)) & (Sally(x) -> Grimpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & exists y.(Sally(y) & -Lempus(y))) & exists z.(Sally(z) & Grimpus(z))))", "all x.(Sally(x) -> (Vumpus(x) & -Lempus(x) & Grimpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> -Lempus(x)) & (Sally(x) -> Grimpus(x)))"]}
{"id": "prontoqa_train_351", "nl": "Sally is not a jompus.", "fol": "-jompus(Sally)", "prediction": ["Sally -Jompus(Sally)", "All x.(Sally(x) -> -Jompus(x))", "Sally n\u2019est pas jompus.", "-Jompus(Sally)", "Sally -Jompus(Sally)", "Sally is not a Jompus.", "Sally is not Jompus.", "Sally is not a Jompus.", "Sally & -Jompus(Sally)", "Sally is not a jompus.", "Sally.(Jompus(s) | Jompus(s))", "(-Jumbus(Sally))", "(-Jimpus(Sally))", "Sally -Jompus(Sally)", "Sally is not Jompus.", "Sally, in fact, is not a Jompus."]}
{"id": "prontoqa_train_352", "nl": "Dumpuses are shumpuses.", "fol": "all x. (dumpus(x) -> shumpus(x))", "prediction": ["all x.(Dumpuse(x) -> Shumpuse(x))", "all x.(Dumpuse(x) -> Shumpus(x))", "all x.(Dumpuse(x) -> Shumpus(x))", "all x.(Dumpus(x) -> Shumpus(x))", "all x.(Dumpuse(x) -> Shumpus(x))", "all x.(Dumpuse(x) -> Shumpus(x))", "all x.(Dumpuse(x) -> Humpus(x))", "all x y.((Dumpuse(x) & Humpback(y)) -> Humpus(y))", "all x.(Dumpuse(x) -> Shumpus(x))", "-Shumpus(dumpuse)", "all x.(Dumpuse(x) -> Shumpus(x))", "all x.(Dumpuse(x) -> Humptus(x))", "all x.(Dumpuse(x) -> Husmuse(x))", "all x.(Dumpuse(x) -> Shumpus(x))", "all x.(Dumpuse(x) -> Shumpus(x))", "all x.(Dumpus(x) -> Humpus(x))"]}
{"id": "prontoqa_train_353", "nl": "Wren is not a shumpus and Wren is a lorpus and Wren is a wumpus.", "fol": "(-shumpus(Wren) & lorpus(Wren) & wumpus(Wren))", "prediction": ["all x y z.((Wren(x) & Humpus(y) & Lorpus(z) & Wren(x)) -> (-Shumpus(x) & -Lorpus(y) & -Wumpus(z)))", "all x y.((Wren(x) & -Shumpus(x)) -> (Lorpus(y) & Wren(x)))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.(Lorpus(y) & All z.(Wren(z)) -> Wormpus(z))))", "all x y z.((Wren(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) & Loomis(x) & Wumpus(y)))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.((Wren(y) & Lorpus(y))) -> Wumpus(y)))", "((Wren(Wren) | Wren(Wren))) & -Shumpus(Wren) & Lordpus(Wren)))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.(Lorpus(y) -> Wumpus(y)))", "(all x y z.(Early(x) -> (Shumpus(x) | -Shumpus(x))) & (Lorpus(y) | Wumpus(z))))", "(all x y.((Wren(x) & Humpus(y)) -> -Shumpus(x)) & ((Wren(x) & Lorpus(y))) -> Wumpus(x)))", "(all x y z.((Wren(x) & Humpus(y)) -> -ShumpusAnd(z)) & ((Wren(z) | Wren(z))) -> LordpusAnd(z)))", "all x y z.((Wren(x) & Shumpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Larus(x) & -Wumpus(z)))", "all x y z.((Wren(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(x) & -Wumpus(z)))", "all x.((Wren(x) & -Shumpus(x)) -> (Lorpus(x) & Hush(x)))", "(all x y z.((Wren(x) & Humpus(y)) -> -(Shumpus(z) | Lord(z))) & ((Wren(x) & Humpus(z))) -> (Wren(x) & Wompus(z))))", "all x y z.((Wren(x) & Humpus(y) & Rooster(z)) -> (-Shumpus(x) & -Lorpus(y) & -Wumpus(z)))", "(all x y z.((Wren(x) & Humpus(y)) -> -Shumpus(x)) | (-Shumpus(y) & Lorpus(z))) | (-Shumpus(z) & Wumpus(z))))"]}
{"id": "prontoqa_train_354", "nl": "Wren is not a dumpus.", "fol": "-dumpus(Wren)", "prediction": ["-Dumpus(Wren)", "-Dumpsus(Wren)", "-Dumpus(Wren)", "all x.(Wren(x) -> -Dumpus(x))", "all x.(Wren(x) -> -Dumpus(x))", "Wren is not a Dumpus.", "-Dumpus(wren)", "-Dumpsus(Wren)", "(Sweet(Wren) & -Dumpus(Wren))", "-Dumpus(Wren)", "All x.(Wren(x) -> -Dumpus(x))", "all x.(Wren(x) -> -Dumpus(x))", "(-Dumpus(Wren))", "is a Dumpus.", "-Dumpus(Wren).", "the Wren(w) & -Dumpus(w))"]}
{"id": "prontoqa_train_355", "nl": "Gorpuses are impuses.", "fol": "all x. (gorpus(x) -> impus(x))", "prediction": ["all x.(Gorpuse(x) -> Impertiose(x))", "all x.(Gorpuse(x) -> Issue(x))", "all x.(Gorpuse(x) -> Issue(x))", "all x.(Gorpuse(x) -> Impose(x))", "all x.(Gorpuse(x) -> Impose(x))", "all x.(Gorpuse(x) -> Issue(x))", "all x.(Gorpuse(x) -> Impermissible(x))", "all x.(Gorpuse(x) -> Issues(x))", "all x.(Gorpuse(x) -> Issue(x))", "all x.(Gorpuse(x) -> Issue(x))", "all x.(Gorpuse(x) -> Imprecise(x))", "all x.(Gorpuse(x) -> Issue(x))", "all x.(Gorpuse(x) -> Issues(x))", "all x.(Gorpuse(x) -> Impermissible(x))", "all x.(Gorpuse(x) -> Ispose(x))", "all x.(Gorpuse(x) -> Impose(x))"]}
{"id": "prontoqa_train_356", "nl": "Sally is a lorpus and Sally is a zumpus and Sally is not an impus.", "fol": "(lorpus(Sally) & zumpus(Sally) & -impus(Sally))", "prediction": ["all x.(Sally(x) -> (Lorpus(x) & Zumpus(x) & -Ivoriano(x)))", "exists x.(Lorpus(x) & Zumpus(x) & -Illegal(x))", "(all x.(Sally(x) -> LORPEST(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> -Impossible(x)))", "(ALL x.(Sally(x) -> Lorpus(x)) & ALL y.(Sally(y) -> Zumpus(y)) & -Illustrated(y)))", "all x y.((Sally(x) & Lorpus(x) & Zumpus(y)) -> (Lorpus(x) & -Impilicator(x)))", "(all x.(Sally(x) -> Lorpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> -Impossible(x))))", "(all x y.((Sally(x) & Lorpus(x)) -> (Sally(x) & Zumpus(y))) & ((Sally(x) & -Improve(x))) -> (Larparian(x) & Zumpus(y))))", "(all x.(Lorpus(x) -> Sally(x)) & (Tompus(x) -> Sally(x))) & (Lorpus(x) -> Sally(x)) & IsNotIssue(x)))", "(all x.(Sally(x) -> Lord(x)) & all y.(Sally(y) -> Zumpus(y))) & all z.(Sally(z) -> -Issue(z)))", "(all x.(Sally(x) -> Boru (Lorpus)) & all y.(Sally(y) -> Zumpus(y))) & all z.(Sally(z) -> -Ilias(z)))", "(all x.(Sally(x) -> IsLorpus(x)) & all y.(Sally(y) -> IsTompus(y))) & all z.(Sally(z) -> -Issue(z))))", "(all x.(Sally(x) -> Lorpus(x)) & all y.(Sally(y) -> Zumpus(y)) & all z.(Sally(z) -> -Impossible(z))))", "(Lorpus(Sally) & Zumpus(Sally) & -Impossible(Sally))", "Sally (Lorpus(Sally) | Zumpus(Sally) | -Impossible(Sally)))", "(all x.(Sally(x) -> Lorpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> -Impliqu\u00e9(x)))", "(all x.(Sally(x) -> Lorpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> -Impossible(x))))"]}
{"id": "prontoqa_train_357", "nl": "Each tumpus is a numpus.", "fol": "all x. (tumpus(x) -> numpus(x))", "prediction": ["all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) & Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))"]}
{"id": "prontoqa_train_358", "nl": "Sally is a rompus, Sally is a shumpus, and Sally is not a numpus.", "fol": "(rompus(Sally) & shumpus(Sally) & -numpus(Sally))", "prediction": ["(all x y z.(Rompus(x) -> Sally(x)) & (Shumpus(y) -> Sally(z)) & -Numpus(z)))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> Humpus(y)) & all z.(Sally(z) -> -Numpus(z))))", "Sally is rompus(Sally) & Sally is shumpus(Sally) & Sally -numpus(Sally))", "all x.(Sally(x) -> (Rompus(x) & Scumpus(x) & Numpus(x)))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> Humpus(x)) & (Sally(x) -> -numpus(x)))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> Humpus(y)) & all z.(Sally(z) -> -numpus(z))))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) | Shumpus(x))) & -Numpus(x)))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> Humpus(x)) & -(Sally(x) -> Numpus(x))))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> Scumpus(y)) & all z.(Sally(z) -> -Numpus(z))))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> Humpus(y)) & all z.(Sally(z) -> -Numpus(z))))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> Scrumpus(y)) & -Numpus(y)))", "all x y z.((Sally(x) & Rompus(x) & Shumpus(y) & Numpus(z)) -> (Rompus(x) | Shumpus(y) & -Numpus(z))))", "is a rompus (Sally) & A shumpus(Sally) & -A numpus(Sally))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> Humpus(x)) & (Sally(x) -> -Numpus(x))))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> Subhumpus(y)) & no.(Sally(y) & Numpus(y)))", "(all x.(Rompus(x) -> Sally)) & (Shumpus(x) -> Sally)) & (Numpus(x) -> Sally)))"]}
{"id": "prontoqa_train_359", "nl": "Dumpuses are grimpuses.", "fol": "all x. (dumpus(x) -> grimpus(x))", "prediction": ["all x.(Dumpuse(x) -> Grimpuse(x))", "all x.(Dumpuse(x) -> Grimpuse(x))", "all x.(Dumpuse(x) -> Grimpuse(x))", "all x.(Dumpuse(x) -> Grimpuse(x))", "all x.(Dumpuse(x) -> Grimpuse(x))", "all x.(Dumpuse(x) -> Grimpuse(x))", "all x.(Dumpuse(x) -> Grimpuse(x))", "all x.(Dumpuse(x) -> Grimpuse(x))", "all x.(Dumpuse(x) -> Grimpuse(x))", "all x.(Dumpuse(x) -> Grimpuse(x))", "all x.(Dumpuse(x) -> Grimpuse(x))", "all x.(Dumpuse(x) -> Grimpuse(x))", "all x.(Dumpuse(x) -> Grypsum(x))", "all x.(Dumpuse(x) -> Grimpuse(x))", "all x.(Dumpuse(x) -> Grimpuse(x))", "all x.(Dumpuse(x) -> Crompuse(x))"]}
{"id": "prontoqa_train_360", "nl": "Sally is not a grimpus and Sally is a rompus and Sally is a brimpus.", "fol": "(-grimpus(Sally) & rompus(Sally) & brimpus(Sally))", "prediction": ["(exists x.(Sally(x) & -Grimpus(x)) & exists y.(Rumpus(y) & Brimpus(y))))", "(-Grimpus(Sally) & Rompus(Sally) & Brimpus(Sally))", "(all x.(Sally(x) -> -Grimpus(x)) & (Rompus(x) | Brimpus(x))))", "((Sally,-Grimpus) | Sally,rompus)) | Sally,brimpus))", "((Sally(Sally) & -Grimpus(Sally)) | (Rompus(Sally) | Brimpus(Sally))))", "(all x.(Sally(x) | Grimpus(x))) & (Rompus(x) | Brimpus(x)))", "(all x.(Sally(x) -> -Crumptus(x)) & (Sally(x) -> Rhopus(x)) & (Sally(x) -> Brimpus(x)))", "all x y z.((Sally(x) & Grumpus(y) & Rompus(z)) -> (-Grumpus(x) | Brimpus(y)))", "(all x y.((Sally) & Grimpus(x)) -> -Grimpus(x)) & ((Sally(y) & Rompus(y)) -> Brimpus(y)))", "(all x.(Sally(x) -> (-Grimpus(x) & Rhopus(x) & Brimpus(x)))", "(-Grimpus(Sally) & Rompus(Sally) & Brimpus(Sally))", "(a.k.a.Sally.Salt) | (A.Krumpus(k) | Rompus(k) | Brimpus(k))))", "(all x.(Sally(x) -> -Grimpus(x)) & (Sally(x) -> Rompus(x)) & (Sally(x) -> Brimpus(x)))", "all x.((Sally(x) & -Grimpus(x) & Rompus(x) & Brimpus(x)) -> -Rumpus(x))", "Sally (-Scrumpus(Sally) & Rompus(Sally) & Brimpus(Sally))", "(all x.(Sally(x) -> -Grimpus(x)) & all y.(Sally(y) -> Rimpus(y))) & all z.(Sally(z) -> Brimpus(z)))"]}
{"id": "prontoqa_train_361", "nl": "Sally is not a dumpus.", "fol": "-dumpus(Sally)", "prediction": ["Sally is not a dumpus.", "Sally is -Dumus(Sally)", "Sally isn\u2019tDumpus(s)", "Sally is not a Dumpus(Sally)", "Sally is not a Dumpus.", "Sally & -Dumpus(s)", "Sally is not a Dumpus(Sally)", "Sally nrdd.(Sally,s) & -Dumps(s,x))", "Sally is notDumpus(Sally)", "Sally -Dumpus(Sally)", "Sally & -Dumpus(x)", "Sally is not a Dumpus.", "Sally -Dumpus(Sally)", "Sally n\u2019est pas Dumpus.", "Sally nihilism.", "(Dupus(Sally))"]}
{"id": "prontoqa_train_362", "nl": "Brimpuses are dumpuses.", "fol": "all x. (brimpus(x) -> dumpus(x))", "prediction": ["all x.(Brompus(x) -> Dumpuse(x))", "all x.(Brimbus(x) -> Dumpuse(x))", "all x.(Brimpus(x) -> Dumpuse(x))", "all x.(Brombus(x) -> Dumpuse(x))", "all x.(Brimpus(x) -> Dumpuse(x))", "all x.(Brimpus(x) -> Dumpuse(x))", "all x.(Brompus(x) -> Dumpus(x))", "all x.(Brimuse(x) -> Dumpuse(x))", "all x.(Brimpus(x) -> Dumpuse(x))", "all x.(Brimos(x) -> Dumpuse(x))", "all x.(Brimuse(x) -> Dumpuse(x))", "all x.(Brimpus(x) -> Dumpuse(x))", "all x.(Brimpus(x) -> Dumpuse(x))", "all x.(Brimpus(x) -> Dumpuse(x))", "all x.(Brimpus(x) -> Dumpuse(x))", "all x.(Brimpuse(x) -> Dumpuse(x))"]}
{"id": "prontoqa_train_363", "nl": "Rex is not a dumpus, Rex is a grimpus, and Rex is a rompus.", "fol": "(-dumpus(Rex) & grimpus(Rex) & rompus(Rex))", "prediction": ["all x y z.((Rex(x) & Dumpus(y) & Grimpus(z)) -> (-Dumpus(x) | Grimpus(x) | Rompus(x)))", "(all x y z.((Rex(x) & Dumpus(y)) -> -Dumpus(x)) & ((Rex(z) & Grimpus(x)) -> Rompus(z)))", "(all x.(Rex(x) -> -Dumpus(x)) & all y.(Rex(y) -> Grimpus(y)) & all z.(Rex(z) -> Rrompus(z))))", "(all x.(Rex(x) -> -Dumpus(x)) & all y.(Grimpus(y) -> Grimpus(y)) & all z.(Rompus(z) -> Rex(z)))", "(all x.(Rex(x) -> -Dumps(x)) & all y.(Grimpus(y) -> Grumpus(y)) & all z.(Rompus(z) -> -Dumpus(x)))", "all x y z.((Rex(x) & Grimpus(y) & Rompus(z)) -> (-Dumpus(x) & -Grimpus(y) & -Rompus(z)))", "all x y.((Rex(x) & Dirtus(y)) -> (-Dumpus(x) & Grimpus(x) & Rompus(y)))", "all x y z.((Rex(x) & Dumpus(y) & Grimpus(z)) -> (-Dumpus(x) | Grimpus(x) | Rompus(x)))", "(-dumpus(Rex)) & (Grimpus(Rex) & Rompus(Rex)))", "all x.((Rex(x) & -Dumpus(x)) -> (Grimpus(x) & Rompus(x)))", "(all x.(Rex(x) -> NoneDumpus(x)) & (Gramppus(x) -> Rompus(x)))", "(all x.(Rex(x) -> -Dumpus(x)) & (Crampus(x) & Rompus(x)))", "all x y z.((Rex(x) & Dumpus(y) & Grimpus(z)) -> (-Dumpus(x) & Grimpus(y) & Rompus(z)))", "(all x.(Rex(x) -> -Dumpus(x)) & (Rumpus(x) -> Grimpus(x)) & (Rompus(x) -> Dumpus(x)))", "(all x y.((Rex(x) & Dumpus(y)) -> -Dumpus(x)) & ((Rex(x) & Grimpus(x)) -> Rumpus(y)))", "(all x y z.(Rex(x) -> -Dumpus(x)) & ((Rex(y) & Greasy(y)) | (Rompus(z) & -Dumpus(y)))))"]}
{"id": "prontoqa_train_364", "nl": "Sam is a zumpus and Sam is a dumpus and Sam is not an impus.", "fol": "(zumpus(Sam) & dumpus(Sam) & -impus(Sam))", "prediction": ["(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> Dumpus(x)) & -Impossible(x)))", "all x y z.((Sam(x) & Tompus(x) & Dumpus(y)) -> (And Sam(z) & -Illegal(z))))", "((Sam(sam) & Zumpus(sam)) & (Sam(sam) & Dumpus(sam)) & -Ilimination(sam))", "(all x y.((Sam(x) & Zumpus(x)) -> Dumpus(x)) & all z w.((Sam(z) & Imposse(w)) -> -Dumpus(z)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Idempos(x)))", "all x.(Sam(x) -> (Zumpus(x) & Dumpus(x) & -Imperial(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Idemistra(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> Dumpus(x)) & -Sam(x) -> Ceremonial(x)))", "all x y.((Sam(x) & Zumpus(x)) & Dumpus(y) & -Erzoe(z)) -> (Sam(x) & Depus(x) & -Defibris(x)))", "all x y.((Sam(x) & Tosso(x)) -> (Dumpsus(x) & -Impflied(y)))", "all x y z.((Sam(x) & Zumpus(x) & Dumpus(y) & -Illips(z)) -> (Rangen(x) & Dumpus(y)))", "(all x.(Zumpus(x) -> Sam(x)) & all y.(Dumpus(y) -> Sam(y))) & all z.(Issue(z) -> Sam(y)))", "(all x y z.(Sam(x) -> Zumpus(x)) & (Sam(y) -> Dumpus(y)) & (Sam(z) -> -Impossible(z)))", "all x y.((Sam(x) & Zumpus(x) & Dumpus(y)) -> (NoImpossible(x) & -Impossible(y)))", "all x.(Sam(x) -> (Tompus(x) & Dumpus(x) & -Impels(x)))", "all x.((Sam(x) & Zumpus(x)) -> Dumpus(x)) & -Impossible(x))"]}
{"id": "prontoqa_train_365", "nl": "Vumpuses are shumpuses.", "fol": "all x. (vumpus(x) -> shumpus(x))", "prediction": ["all x.(Vumpus(x) -> Shumpus(x))", "all x.(Vumpus(x) -> Shumpus(x))", "all x.(Vumpus(x) -> Shumpus(x))", "all x.(Vumpus(x) -> (Shumpus(x) & LivesIn(x,y)))", "all x.(Vumpus(x) -> Shumpus(x))", "all x.(Vumpus(x) -> Shumpus(x))", "all x.(Vumpus(x) -> Shumpus(x))", "all x.(Vumpus(x) -> Shumpuse(x))", "all x.(Vumpus(x) -> Shumpus(x))", "all x.(Vumpus(x) -> Shumpus(x))", "all x.(Vumpus(x) -> Shumpus(x))", "all x.(Vumpus(x) -> Shumpus(x))", "all x.(Vumpus(x) -> Shumpus(x))", "all x.(Vumpus(x) -> Shumpus(x))", "all x.(Vumpus(x) -> Shumpus(x))", "all x.(Vumpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_366", "nl": "Max is a wumpus and Max is a lorpus and Max is not a shumpus.", "fol": "(wumpus(Max) & lorpus(Max) & -shumpus(Max))", "prediction": ["(all x\"(Max(x) & Wumpus(x)) -> (Lorpus(x) & -Shumpus(x)))", "all x y.((Max(x) & Wumpus(x)) -> (Wumpus(x) & Lorpus(y) & -Shumpus(x)))", "(all x y z.(Matt(x) -> Wumpus(x)) & (Max(y) -> Lorpus(y)) & ((Max(z) -> Yumpus(z)) | (-Matt(z) & Humpus(z)))))", "all x.((Max(x) & Wumpus(x) & -Shumpus(x)) -> (Lorpus(x) & -Wumpus(x)))", "all x y.((Max(x) & Wumpus(y)) -> (FourThirdLorpus(x) & -FourThirdShumpus(x)))", "(all x y z.((Max(x) & Wumpus(y)) -> Animal(x,y)) & ((Max(z) & Roose(z)) -> Animal(z))) & ((Max(z) & Roose(z)) -> Animated(z)))", "(all x.(Max(x) -> Wumpus(x)) & (Max(x) -> Lorpus(x)) & (Max(x) -> -Shumpus(x)))", "(all x.(Max(x) -> Wumpus(x)) & (Max(x) -> Lorpus(x)) & -Shumpus(x)))", "(all x y.((Max(x) & Wumpus(x)) -> Wumpus(x)) & ((Max(y) & Lorpus(y)) -> -Shumpus(y)))", "(all x.(Max(x) -> Lumpback(x)) & (Max(x) -> Lorpus(x)) & (Max(x) -> -Shumpus(x))))", "(all x.(Max(x) -> Wumpus(x)) & all y.(Max(y) -> Lorpus(y)) & all z.(Max(z) -> -Shumpus(z))))", "(all x.(Max(x) -> Wumpus(x)) & (Max(x) -> Lorpus(x)) & (Max(x) -> -Shumpus(x))))", "all x.(Max(x) -> (Wumpus(x) | Lorpus(x)) & -Shumpus(x)))", "all x.(Wumpus(x) | Loup(x) | -Shumpus(x))", "(all x.(Max(x) -> Wumpus(x)) & all y.(Max(y) -> Throat(y))) & all z.(Max(z) -> -Shumpus(z)))", "(Wumpus(Max) & Lorpus(Max) & -Shumpus(Max))"]}
{"id": "prontoqa_train_367", "nl": "Max is not a vumpus.", "fol": "-vumpus(Max)", "prediction": ["-Vumpus(Max)", "-Vimpus(Max)", "all x.(Max(x) -> -Vumpus(x))", "(-Vimpus(Max))", "(-Vubis(Max))", "Max is not a vumpus.", "-Vumpus(Max)", "-Volumpus(Max)", "-Vimpus(Max)", "-Vimpus(Max)", "-Vumpus(Max)", "(Excel(Max) & -Vumpus(Max))", "(-Vumpus(Max))", "(-Vumpus(Max))", "noVumpus(Max)", "all x.(Max(x) -> -Vimpus(x))"]}
{"id": "prontoqa_train_368", "nl": "Every yumpus is a zumpus.", "fol": "all x. (yumpus(x) -> zumpus(x))", "prediction": ["all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_369", "nl": "Stella is an impus, Stella is not a zumpus, and Stella is a vumpus.", "fol": "(impus(Stella) & -zumpus(Stella) & vumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Imputer(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Vumpus(x))))", "(all x.(Stella(x) -> Iris(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Vumpus(x)))", "all x y z.((Stella(x) & Stella(y) & Zumpus(z)) -> (Impossible(x) & -Tompus(y) & Vampus(y)))", "(all x.(Stella(x) -> Impossible(x)) & all y.(Stella(y) -> -Zumpus(y))) & every z.(Stella(z) -> Vumpus(z)))", "(all x.(Stella(x) -> IsDefired(x)) & (Stella(x) -> -Tompus(x)) & (Stella(x) -> Vampous(x)))", "all x y z.((Stella(x) & Stella(y) & Zumpus(z)) -> (Imposer(x) & -Imposer(y) & Vumpus(y)))", "(all x.(Stella(x) -> IsImpossible(x)) & (Stella(x) -> -Tompus(x)) & (Stella(x) -> Volumpus(x)))", "(all x.(Stella(x) -> Implicator(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Vumpus(x)))", "all x y z.((Stella(x) & Impossible(x) & Stella(y) & Zumpus(z)) -> (-City(y) & Vumpus(y)))", "(all x.(Stella(x) -> Impermissible(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> V\u00fcmpus(x)))", "(all x.(Stella(x) -> Institute(x)) & (Stella(x) | Stella(x))) & (Stella(x) | Stella(x))) & -Szumpus(x) & Vampus(x)))", "(all x.(Stella(x) -> Impossible(x)) & (Stella(x) -> -Tompus(x)) & (Stella(x) -> Vumpus(x))))", "all x y z.((Stella(x) & Stella(y) & Zumpus(z)) -> (Impossible(x) & -Zombie(y) & Vimpus(y)))", "all x y z.((Stella(x) & Stella(y) & Asis(z)) -> (Impossible(x) & NoZupus(y) & Vuumpus(z)))", "(all x.(Stella(x) -> Imperative(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Vumpus(x)))", "(all x y z.((Stella(x) & Imposer(y) & Zumpus(z)) -> Is(x,y)) & ((Stella(x) & -Tompus(z)): Vimpus(x)))"]}
{"id": "prontoqa_train_370", "nl": "Each gorpus is an impus.", "fol": "all x. (gorpus(x) -> impus(x))", "prediction": ["all x.(Gorpus(x) -> IsImpossible(x))", "all x.(Gorpus(x) -> Isolation(x))", "all x.(Gorpus(x) -> Impeccable(x))", "all x.(Gorpus(x) -> Impossible(x))", "all x.(Gorpus(x) -> Ilirpt(x))", "all x.(Gorpus(x) -> Eraser(x))", "all x.(Gorpus(x) -> IsImproved(x))", "all x.(Gorpus(x) -> Is(x,y))", "all x.(Gorpus(x) -> Ilusion(x))", "all x.(Gorpus(x) -> Implicit(x))", "all x.(Gorpus(x) -> Isolated(x))", "all x.(Gorpus(x) -> IsImplose(x))", "all x.(Gorpus(x) -> Isolated(x))", "all x.(Gorpus(x) -> IsImplicit(x))", "all x.(Gorpus(x) -> Isolated(x))", "every gorpus is imposed."]}
{"id": "prontoqa_train_371", "nl": "Stella is a sterpus and Stella is a vumpus and Stella is not an impus.", "fol": "(sterpus(Stella) & vumpus(Stella) & -impus(Stella))", "prediction": ["all x.((Stella(x) & Sterpus(x) & Vumpus(x) & -Imperator(x)) -> Sterpus(x))", "all x.(Spectrum(x) -> (Sterpus(x) & Vampus(x) & -Improvement(x)))", "(all x.(Stella,Storpus) -> Vempus(x)) & (Stella,Implique) -> -Desirement(x)))", "(all x.(Stella(x) -> Sterpus(x)) & all y.(Stella(y) -> Vumpus(y))) & all z.(Stella(z) -> -Impossible(z))))", "(all x.(Setterpus(x) -> Sterpus(x)) & all y.(Vumpus(y) -> -Ilimination(y)))", "(all x y.((Stella(x) & -Imprime(y)) -> Sterpus(x)) & ((Stella(x) & -Imprime(x))) -> Voompus(x)))", "(all x.(Stella(x) -> Sterpus(x)) & all y.(Vumpus(y) -> Stella(y))))", "all x.(Stella(x) -> (Sterpus(x) & Moompus(x) & -Impedient(x)))", "all x y.((Stella(x) & Sterpus(x)) -> (Vimpus(x) & NotImplosure(y)))", "all x y z.((Stella(x) & Sterpus(x) & Stella(y) & Voimpus(y) & Stella(z)) -> (Restless(x) & -Imperial(z)))", "(all x.(Stella,Sterpus) -> (Vumpus(Stella) | Imperator(Stella))))", "(all x y.(Stella(x) -> Sterpus(x)) & (Vimpus(y) -> Strictus(x)) & (Pestus(y) -> NotIssuevus(y)))", "all x.(Stella(x) -> (stread(x) & stella(x)) & vumpus(x) & -isl.(stella(x) & -it's-Illuminate(x))))", "all x y z.((Stella(x) & Sterpus(y) & Vumpus(z)) -> (Pestus(x) & -Imperfector(x)))", "all x.((Stella(x) & Sterpus(x)) -> Voompus(x)) & (Risk(x) -> Hiero(x)))", "all x y z.((Stella(x) & Sterpus(x) & Stella(y) & Vumpus(z)) -> (Estrpus(x) & Versus(y) & -Iron(z)))"]}
{"id": "prontoqa_train_372", "nl": "Sterpuses are rompuses.", "fol": "all x. (sterpus(x) -> rompus(x))", "prediction": ["all x.(Sterpus(x) -> Rompus(x))", "all x.(Sterpus(x) -> Rompus(x))", "all x.(Sterpus(x) -> Rompus(x))", "all x.(Sterpuse(x) -> Rompus(x))", "all x.(Sterpuse(x) -> Rompuse(x))", "all x.(Sterpuse(x) -> rompus(x))", "all x.(Sterpuse(x) -> Rompus(x))", "all x.(Sterpus(x) -> Rompus(x))", "all x.(Sternpuse(x) -> Rompus(x))", "all x y.((Sterpuse(x) & Rompus(y)) -> Ripple(x))", "all x.(Sterpuse(x) -> Rompus(x))", "all x.(Sterpus(x) -> Rompus(x))", "all x.(Sterpuse(x) -> Rompus(x))", "all x.(Sterpus(x) -> Rompus(x))", "all x.(Sterpus(x) -> Rompus(x))", "all x.(Sterpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_373", "nl": "Sam is not a rompus, Sam is a wumpus, and Sam is a dumpus.", "fol": "(-rompus(Sam) & wumpus(Sam) & dumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Rompus(x)) & all z.(Wumpus(z) -> Wax(z))) & all w.(Dumpus(w) -> Dumpus(w)))", "(all x.(Sam(x) -> -Room(x)) & all y.(Wumpus(y) & -Dumpus(y)))", "(all x.(Sam(x) -> -Rompus(x)) & (Sam(x) -> Wompus(x)) & (Sam(x) -> Dumpus(x)))", "all x.((Sam(x) & -Rompus(x)) -> (Wumpus(x) & Dumpus(x)))", "(all x y.((Sam(x) & -Rompus(x)) -> Wumpus(y)) & ((Sam(y) & Dumpus(y)) -> Dispatched(y)))", "(all x.(Rompus(x) -> -Rompus(x)) & (Wumpus(x) -> Dumpus(x)))", "all x.((Sam(x) -> -Rompus(x)) & (Wumpus(x) | Dumpus(x)))", "all x y z.((Sam(x) & Rrompus(y) & Wumpus(z) & Dumpus(x)) -> (-Rrompus(x) & Wumpus(y) & Dumpus(z)))", "all x y z.((Rompus(x) & Wumpus(y) & Dumpus(z)) -> (-Rompus(x) & Wumpus(y) & Dumpus(z)))", "(all x.(Sam(x) -> -Rompus(x)) & (Sam(x) -> Wumpus(x)) & (Sam(x) -> Dumpus(x)))", "(all x.((Sam(x) & -Rompus(x)) -> Wumpus(x)) & all y.((Sam(y) & Dumpus(y)) -> -Wrompus(y)))", "exists x.(Rompus(x) & Oohmpus(x) & Moose(x) & Oohmpus(x))", "(all x.((Sam(x) & -Rompus(x)) -> Wumpus(x)) & all y.((Sam(y) & Dumpus(y)) -> -Sam(y)))", "all x y z.((Sam(x) & Rupus(y) & Wumpus(z)) -> (-Rompus(x) & Wumpus(y) & Dumpus(z)))", "(all x.(Sam(x) -> -Rompus(x)) & all y.(Wumpus(y) & Primus(y))))", "all x y z.((Sam(x) & Rompus(y) & Wumpus(z)) | (Dumpus(x) | Sam(x))))"]}
{"id": "prontoqa_train_374", "nl": "Every gorpus is a vumpus.", "fol": "all x. (gorpus(x) -> vumpus(x))", "prediction": ["all x.(Gorpus(x) -> Vumpus(x))", "all x.(Gorpus(x) -> Vumpus(x))", "all x.(Gorpus(x) -> Vumpus(x))", "all x.(Gorpus(x) -> Vumpus(x))", "all x.(Gorpus(x) -> Vulmpus(x))", "all x.(Gorpus(x) -> Vumpus(x))", "all x.(Gorpus(x) -> Vimpus(x))", "all x.(Gorpus(x) -> Voompus(x))", "all x.(Gorpus(x) -> Vumpus(x))", "all x.(Gorpus(x) -> Vumpus(x))", "all x.(Gorpus(x) -> Vumpus(x))", "all x.(Gorpus(x) -> Vulmpus(x))", "all x.(Gorpus(x) -> Vulmpus(x))", "all x.(Gorpus(x) -> Vumpus(x))", "all x.(Gorpus(x) -> Vumpus(x))", "all x.(Gorpus(x) & Vampus(x))"]}
{"id": "prontoqa_train_375", "nl": "Polly is a shumpus, Polly is a zumpus, and Polly is not a vumpus.", "fol": "(shumpus(Polly) & zumpus(Polly) & -vumpus(Polly))", "prediction": ["(all x.(Shumpus(x) -> Polly)) & (Zoompus(x) -> Polly)) & -Vumpus(x)))", "(all x y z.(Polly(x) -> Shumpus(x)) & (Polly(y) -> Zumpus(y)) & (Polly(z) -> -Vimpus(z)))", "all x y z.((Polly(x) & Shumpus(y) & Zumpus(z)) -> (Has(x,y) & -Has(x,z)))", "(all x.(Polly(x) | Zumpus(x)) & -Vumpus(x))", "(all x.(Polly(x) -> Simpus(x)) & all y.(Polly(y) -> Zumpus(y)) & all z.(Polly(z) -> -Vimpus(z)))", "all x.((Polly(x) & Humpus(x)) -> (Zumpus(x) & -Vumpus(x)))", "(all x y.((Polly(x) & Simpleton(x)) -> Shumpus(x)) & ((Polly(y) & Zumpus(y)) -> -Vumpus(y)))", "all x y z.((Polly(x) & Simpius(y) & Zumpus(z)) -> (Shumpus(x) | Zumpus(z) | -Vumpus(z))))", "(all x.(Polly(x) -> Humpus(x)) & (Polly(x) -> Zumpus(x)) & (Polly(x) -> -Vumpus(x)))", "(all x.(Shumpus(x) -> Polly)) & (Zumpus(x) -> Polly)) & (Vumpus(x) -> Polly)))", "all x y z.((Polly(x) & Shumpus(y) & Zumpus(z)) -> (Shumpus(x) & -Vumpus(y)))", "all x y z.((Polly(x) & Humpus(y) & Zumpus(z) & -Vumpus(y)) -> (Shumpus(x) & Zumpus(x) & NotVumpus(x)))", "(all x.(Polly(x) -> Humpus(x)) & (Polly(x) -> Zumpus(x)) & -Vumpus(x)))", "(all x.(Pollly(x) -> Humpus(x)) & (Polly(x) -> Zumpus(x)) & -Bumme(x)))", "all x y z.((Polly(x) & Shumpus(y) & Zumpus(z)) -> (Shumpus(x) | Unshumpus(x) | -Vumpus(x)))", "(all x.(Polly(x) | Shumpus(x)) & Zumpus(x)) & -Vumpus(x))"]}
{"id": "prontoqa_train_376", "nl": "Polly is not a gorpus.", "fol": "-gorpus(Polly)", "prediction": ["Polly is not Gorpus(Poly)", "Oops.", "all x.(Polly(x) -> -Gorpus(x))", "(-Gorpus(Polly))", "(-Gorpus(Polly))", "Polly is not Gorpus.", "all x.(Polly(x) -> (-Gorpus(x)))", "all x.(Polly(x) -> -Guerpus(x))", "all x.(Polly(x) -> -Gorpus(x))", "Polly -Gorpus(polly)", "Polly is -Gorpus(poly).", "(-Gorpus(Polly))", "all x.((Polly(x) & -Gorpus(x)) -> -Gorpus(x))", "(-Gorpus(Polly))", "(-Gorpus(Polly))", "all x.(Polly(x) -> -Gorpus(x))"]}
{"id": "prontoqa_train_377", "nl": "Every zumpus is a yumpus.", "fol": "all x. (zumpus(x) -> yumpus(x))", "prediction": ["all x.(Zumpus(x) -> Yumus(x))", "all x.(Zumpus(x) -> Yup.(Zumpus(x)))", "all x.(Zumpus(x) -> Yumpa(x))", "all x.(Zumpus(x) -> Yukpus(x))", "all x.(Zumpus(x) -> Yumpus(x))", "all x.(Sumpus(x) -> Yuman(x))", "all x.(Tompus(x) -> Yumpsum(x))", "all x.(Tompus(x) -> Yumpa(x))", "all x.(Zumpus(x) -> Yampus(x))", "all x.(Zumpus(x) -> Yumpus(x))", "all x.(Tompus(x) -> Kumpus(x))", "all x.(Zumpus(x) -> Yumpus(x))", "all x.(Zumpus(x) -> Yumpus(x))", "all x.(Zumpus(x) -> Yompus(x))", "all x.(Tompus(x) -> Yumpus(x))", "all x.(Zumpus(x) -> Yumpus(x))"]}
{"id": "prontoqa_train_378", "nl": "Max is a grimpus and Max is not a yumpus and Max is a lorpus.", "fol": "(grimpus(Max) & -yumpus(Max) & lorpus(Max))", "prediction": ["(all x.(Max(x) -> Grappa(x)) & (-Yumpus(x) & (Lorpus(x) | Grimpus(x))))", "(all x.(Max(x) -> Grumpus(x)) & (-Yumpus(x)) & (Lorpus(x) -> Yumpus(x))))", "(all x.(Max(x) -> Grimpus(x)) & (Max(x) -> -Yumpus(x)) & (Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Grumpus(x)) & (July(x) -> -Yumpus(x)) & (Larpus(x))))", "(see also: (MaxLorpus(Max) & Grimpus(Max)) & -Yumpus(Max)) & Loompus(Max))", "all x y z.((Max(x) & Grumpy(y) & -Yumpus(z) & Lower(x)) -> (AnotherPumpus(x,y) & ALorpus(x)))", "(all x.(Max(x) -> Grupus(x)) & all y.(Max(y) -> -Yumpus(y)) & all z.(Max(z) -> Lorpus(z))))", "(all x y z.((Max(x) & Grimpus(x)) -> (Umpus(y) | -Yumpus(y)) & ((Max(z) & Loomis(z))) -> (Lorpus(z))))", "all x y z.((Max(x) & Grapple(x) & Max(y) & -Yumpus(y)) | (Lorpus(z) & Max(z))))", "(all x.(Max(x) -> Grimpus(x)) & (-Yumpus(x) | Lorpus(x))))", "all x y z.((Max(x) & Grimpus(x) & Max(y) & Lure(z)) -> (-Yumpus(y) & Lore(z)))", "all x y.((Max(x) & Grimpus(x)) -> (-Yumpus(x)) & -Lorpus(y)))", "all x y z.((Max(x) & Gringos(y) & -Yumpus(z)) -> (IsSmooth(x,y) & IsLorpus(y,z)))", "(all x.(Max(x) -> Grimpus(x)) & (Max(x) -> -Yumpus(x)) & (Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Grimpus(x)) & (Max(x) -> -yumpus(x)) & (Max(x) -> Lorpus(x)))", "all x.((Max(x) -> Grupus(x)) & (max(x) -> -Yumpus(x)) & (max(x) -> Lorpus(x)))"]}
{"id": "prontoqa_train_379", "nl": "Max is not a zumpus.", "fol": "-zumpus(Max)", "prediction": ["(-Zumpus(Max))", "all x.(Max(x) -> -Zumpus(x))", "-Zombie(Max)", "all x.(Max(x) -> -zusp(x))", "(-Zumpus(Max))", "(-Zumpus(Max))", "All x.(Max(x) -> -Zupus(x))", "all x.(Max(x) -> -Zumpus(x))", "(-Zumpus(Max))", "(-Zumpus(Max))", "all x.(Max(x) -> -Zumpus(x))", "all x.(Max(x) -> -Zumpus(x))", "all x.(Max(x) -> -Zumpus(x))", "exists x.(Max(x) & -Tompus(x))", "-Zumpus(Max)", "all x.(Max(x) -> -Zumpus(x))"]}
{"id": "prontoqa_train_380", "nl": "Wumpuses are numpuses.", "fol": "all x. (wumpus(x) -> numpus(x))", "prediction": ["all x.(Wumpuse(x) -> Numpus(x))", "all x.(Wumpus(x) -> Numpuse(x))", "all x.(Wumpus(x) -> Numpus(x))", "all x.(Wumpuse(x) -> Numpuse(x))", "all x.(Wombuse(x) -> Numpuse(x))", "all x.(Wumpus(x) -> Numpus(x))", "all x.(Wumpus(x) -> Numpus(x))", "all x.(Wumpus(x) -> Numpus(x))", "all x.(Wumpus(x) -> Numpus(x))", "all x.(Wumpus(x) -> (Numpus(x) & -Numpus(x)))", "all x.(Wumpus(x) -> Numpus(x))", "all x.(Wumpus(x) -> Numpus(x))", "all x.(Wumpus(x) -> Numple(x))", "all x.(Wumpuse(x) -> Numpuse(x))", "all x.(Wumpus(x) -> Numpus(x))", "all x.(Wuxuse(x) -> Numpuse(x))"]}
{"id": "prontoqa_train_381", "nl": "Max is not a numpus, Max is a grimpus, and Max is a vumpus.", "fol": "(-numpus(Max) & grimpus(Max) & vumpus(Max))", "prediction": ["all x y z.((Max(x) & Grimpus(y) & Voompus(z)) -> (-Cumpus(x) & -Smiling(y) & -Smiling(z) & -QuickGuild(z)))", "(all x.(Max(x) -> -numpus(x)) & (Max(x) -> grimpus(x)) & (Max(x) -> vumpus(x)))", "((Max(Max) & -Numpus(Max)) | (Max(Max) & Grimpus(Max)) | (Max(Max) & Vuxu.))))", "(-numpus(max) & grimpus(max) & vumpus(max))", "(all x.(Max(x) -> -Numpus(x)) & all y.(Max(y) -> Grimpus(y)) & all z.(Max(z) -> Vumpus(z)))", "(all x y z.((Max(x) & Numpus(y)) -> -Numpus(x)) & ((Max(z) & Grupus(z)) -> -Numpus(z)) & ((Max(z) & Grouchpus(z)) -> Vimpus(z))))", "(all x y z.(Max(x) -> \"-numpus(x) & NoPush(x))) & ((Max(y) & Grimpus(y)) | (Max(z) & Vampuda(z)))))", "((Max(x) & -Numpus(x)) | (Max(x) & Grimpus(x)) | (Max(x) & Vampus(x))))", "(all x.(Max(x) -> -Simpus(x)) & (Max(x) -> Grimpus(x)) & (Max(x) -> Vumpus(x))))", "(all x.(Max(x) -> -Nompus(x)) & all y.(Max(y) -> Grimpus(y)) & all z.(Max(z) -> Vuze(z)))", "(all x.(Max(x) -> -Numpus(x)) & (Max(x) -> Grimpus(x)) & (Max(x) -> Vukus(x)))", "((Max) & -Numpus(max)) & (Grampus(x) | Voompus(x)))", "(all x.(Max(x) -> -Nompus(x)) & all y.(Max(y) -> Grimpus(y)) & all z.(Max(z) -> Vumpus(z))))", "(all x.(Max(x) -> -Numpus(x)) & all y.(Max(y) -> Grimpus(y)) & all z.(Max(z) -> Vumpus(z))))", "(all x.(Max(x) -> -Numpus(x)) & all y.(Max(y) -> Grimpus(y)) & all z.(Max(z) -> Vumpus(z))))", "(all x y.((Max(x) & -Numpus(x)) -> Grimpus(x)) & all z w.((Max(y) & Vumpus(w)) -> Nox(y)))"]}
{"id": "prontoqa_train_382", "nl": "Shumpuses are dumpuses.", "fol": "all x. (shumpus(x) -> dumpus(x))", "prediction": ["all x.(Shempuse(x) -> Dumpuse(x))", "all x.(Shumpsuse(x) -> Dumpuse(x))", "all x.(Shutus(x) -> Dumpuse(x))", "all x.(Shumpuse(x) -> Dumpus(x))", "all x.(Shumper(x) -> Dumpuse(x))", "all x.(Shupuse(x) -> Dumpuse(x))", "all x.(Shumpuse(x) -> Dumpuse(x))", "all x.(Shupuse(x) -> Dumpuse(x))", "all x.(Shim(x) -> Dumpuse(x))", "all x.(Shumpuse(x) -> Pussuse(x))", "all x.(Shupuse(x) -> Dumpuse(x))", "all x.(Shumuse(x) -> Dumpuse(x))", "all x.(Shumpsue(x) -> Dumpuse(x))", "all x.(Shupuse(x) -> Dumpuse(x))", "all x.(Shupuse(x) -> Dumpuse(x))", "all x.(Shumpsox(x) -> Dumpuse(x))"]}
{"id": "prontoqa_train_383", "nl": "Max is a yumpus, Max is a lempus, and Max is not a dumpus.", "fol": "(yumpus(Max) & lempus(Max) & -dumpus(Max))", "prediction": ["(all x.(Max(x) -> Yupse(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> -Dupus(z))))", "(all x y z.(Max(x) -> Yampus(x)) & (Max(y) -> Lempus(y)) & (Max(z) -> -Dumpus(z))))", "all x y z.((Max(x) & Yumpus(y) & Lempus(z)) -> (Yumpus(x) | Lempus(z) | -Dumpus(z)))", "all x y z.((Max(x) & Yumpus(y) & Lempus(z)) -> (Yumpus(x) | Lempus(z) | -Dumpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> -Dumpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Doughus(z))))", "(all x.(Jumpus(x) -> Max(x)) & (Lempus(x) -> Max(x))) & (Dumps(x) -> Max(x)))", "all x y z.((Max(x) & Yumpa(y) & Lempus(z)) -> (Yumpus(x) & Lempus(z) & -Dumpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> -Dumpus(z))))", "all x y z.((Max(x) & Yumpa(y) & Lempus(z)) -> (Yumpus(x) | Lempus(z) | -Dumpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Lempus(x)) & -Max(x)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> Dumpus(x)))", "all x y z.((Max(x) & Yumpus(y) & Lempus(z)) -> (Yumpus(x) & Lempus(x) & -Dumpus(x)))", "(all x y z.(Max(x) -> Yumpus(x)) & ((Max(y) & Lempus(y)) -> -Dumpus(z)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Lempus(x)) & -Dumps(x)))", "all x y z.((Max(x) & Yumpus(y) & Lempus(z) & -Dumpus(z)) -> (Yumpus(x) & Lempus(x) & -Impress(x)))"]}
{"id": "prontoqa_train_384", "nl": "Each yumpus is a shumpus.", "fol": "all x. (yumpus(x) -> shumpus(x))", "prediction": ["all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Husmus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_385", "nl": "Wren is a lempus, Wren is a grimpus, and Wren is not a shumpus.", "fol": "(lempus(Wren) & grimpus(Wren) & -shumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Lempus(x)) & (Wren(x) -> Grimpus(x)) & (Wren(x) -> -Shumpus(x)))", "(all x.(Wren(x) -> Lempus(x)) & (Wren(x) -> Grimpus(x)) & (Wren(x) -> -Shumpus(x)))", "(all x y z.((Wren(x) & Lempus(y) & Grouchpus(z)) -> (Alert(x,y) & -Shumpus(z))))", "(all x.(Wren(x) -> Lempus(x)) & ((Wren(x) -> Grimpus(x))) & ((Wren(x) -> -Shumpus(x))))", "(all x.(Wren(x) -> Lempus(x)) & (Wren(x) -> Grimpus(x)) & (Wren(x) -> -Shumpus(x))))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Grimpus(y)) & all z.(Wren(z) -> -Shumpus(z)))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Grimpus(y)) & all z.(Wren(z) -> -Shumpus(z)))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Grimpus(y)) & none z.(Wren(z) -> Shumpus(z))))", "all x y z.((Wren(x) & Grimpus(y) & Swimpus(z)) -> (Lempus(x) | Grimpus(y) | -Shumpus(z)))", "all x y z.((Wren(x) & Lempus(x) & Grimpus(y) & -Shumpus(z)) -> (Lempus(x) & Grimpus(y) & -Shumpus(z)))", "all x y z.((Wren(x) & Lempus(x) & Grimpus(y) & -Shumpus(z)) -> (Lempus(x) | Grimpus(y) & -Shumpus(z)))", "all x y z.((Wren(x) & Lempus(x) & Grimpus(y) & -Shumpus(z)) -> (Lempus(x) | Grimpus(y) & -Shumpus(z)))", "(all x.(Wren(x) -> Lempus(x)) & all y.(Wren(y) -> Grimpus(y)) & all z.(Wren(z) -> -Shumpus(z))))", "(all x.(Wren(x) -> Lempus(x)) & (Wren(x) -> Grimpus(x)) & (Wren(x) -> -Shumpus(x)))", "(all x.(Wren(x) -> Lempus(x)) & ((Wren(x) -> Grimpus(x))) & -Shumpus(x)))", "all x y z.((Wren(x) & Lampus(y) & Grimpus(z)) -> (Lempus(x) & Grimpus(x) & -Shumpus(x)))"]}
{"id": "prontoqa_train_386", "nl": "Lorpuses are brimpuses.", "fol": "all x. (lorpus(x) -> brimpus(x))", "prediction": ["all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpuse(x))", "all x.(Lorpus(x) -> Brimpuse(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpuse(x))", "all x.(Lorpus(x) -> Brimpuse(x))", "all x.(Lorpus(x) -> Brimpuse(x))", "all x.(Lorpus(x) -> Brimpuse(x))", "all x.(Lorpus(x) -> Brimpuse(x))", "all x.(Loopuse(x) -> Brimpuse(x))", "all x.(Lorpus(x) -> Brimpuse(x))", "all x.(Lorpus(x) -> Brimpuse(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpuse(x))", "all x.(Lorpuse(x) -> Brimpuse(x))", "all x.(Lorpuse(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_387", "nl": "Alex is a sterpus, Alex is not a brimpus, and Alex is a grimpus.", "fol": "(sterpus(Alex) & -brimpus(Alex) & grimpus(Alex))", "prediction": ["all x.((Alex(x) & Sterus(x)) -> (-Marbles(x) & Grimpus(x)))", "(all x.(Alex(x) -> Sterpus(x)) & (Alex(x) -> -Brumpus(x))) & (Alex(x) -> Grimpus(x)))", "all x y z.((Alex(x) & Sterpus(x) & Brimpus(y) & Grimpus(z)) -> (Stereoscopic(x) & -Brimoscopic(y) & Grimpus(z)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> -Brimpus(y))) & all z.(Alex(z) -> Grinpus(z)))", "all x y z.((Alex(x) & Steropuse(y) & Brimpus(z)) -> (Sterpus(x) | Grimpus(x)))", "all x y z.((Alex(x) & Sterpus(y) & Brimpus(z)) -> (Sterpus(x) & -Brimpus(y) & Grimpus(z)))", "(all x.(Alex(x) -> Sterpus(x)) & ((Alex(x) -> -Brumpus(x))) & (Alex(x) -> Grumpus(x))))", "all x y z.((Alex(x) & Sparrow (x) & Brimpus(y) & Grimpus(z)) -> (Storpus(x) | -Brimpus(y)))", "(all x.(Alex(x) -> Sterpus(x)) & (Alex(x) -> -Brimpus(x) & (Alex(x) -> Grimpus(x))))", "all x y z.((Alex(x) & Steroid(y) & Brimpus(z)) -> (NoStorp(x) & NoBrimpus(y) & NoScrap(z)))", "(all x.(Alex(x) -> Sterpus(x)) & ((Alex(x) & -Brimpus(x))) -> Grimpus(x)))", "(all x.(Alexa(x) -> Sterpus(x)) & (NoBrimpus(x) & Grimpus(x)))", "(all x.(Alex(x) -> Sterepus(x)) & ((Alex(x) & -Brimpus(x)) | (Alex(x) & Grimpus(x)))))", "all x y z.((Alex(x) & Sterodus(y) & Brimpus(z)) -> (Sterpus(x) & -Brimpus(y) & Grumpus(x)))", "(all x.(Alex(x) -> Sterpus(x)) & (Alex(x) -> -Brimpus(x)) & (Alex(x) -> Grimpus(x)))", "(all x y z.((Alex(x) & Steerpus(y) & -Brimpus(z)) -> Steerpus(x)) & ((Alex(x) & Grimpus(x)) -> Grimpus(x)))"]}
{"id": "prontoqa_train_388", "nl": "Alex is not a lorpus.", "fol": "-lorpus(Alex)", "prediction": ["All x.(Alex(x) -> -Lorpus(x))", "Alex is -Lorpus(Alex)", "(-Lorpus(Alex))", "(-Lorpus(Alex))", "Alex is not a lorpus.", "Alex (#Lorph(Alex))", "Alex(Alex) -> -Lorpus(Alex))", "Alex is not a lorpus.", "is a lorpus(Alex)", "(-Lorpus(Alex))", "Alex is not a lorpus.", "Alex is not a lorpus.", "Alex is notlorpus(Alex)", "all x.(Alex(x) -> -Lorpus(x))", "all x.(Alex(x) -> -Lorpus(x))", "All x y.((Alex(x) & Lorpus(y)) -> -Lorpus(x))"]}
{"id": "prontoqa_train_389", "nl": "Dumpuses are numpuses.", "fol": "all x. (dumpus(x) -> numpus(x))", "prediction": ["all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpsue(x) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumps(x) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumpsul(x) -> Numpuse(x))", "all x.(Dumpus(x) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpuse(x))"]}
{"id": "prontoqa_train_390", "nl": "Rex is not a numpus and Rex is a yumpus and Rex is a rompus.", "fol": "(-numpus(Rex) & yumpus(Rex) & rompus(Rex))", "prediction": ["all x y z.((Rex(x) & Count(y) & Yampus(z)) -> (-Numpus(x) & Yumpus(y) & Rompus(z)))", "(all x.(Rex(x) -> -Numpus(x)) & all y.(Yumpus(y) & -Rompus(y))))", "(-numpus(rex) & -yumpus(rex) & -rompus(rex))", "all x y z.((Rex(x) & Numpus(y) & Yampus(z)) -> (-Numpus(x) & Yumpus(x) & Rompus(x)))", "all x y.((Rex(x) & Numpus(y) & Yampus(y)) -> (-Numpus(x) & -Yumpus(y) & -Rompus(z)))", "exists x.(Rex(x) & -Numpus(x) & Yumpus(x) & Rompus(x))", "all x y z.((Rex(x) & Number(y) & Yumpus(z)) -> (-Numpus(x) & -Yumpus(x) & -Rompus(x)))", "all x y z.((Rex(x) & Numpus(y) & Yampus(z)) -> (-Numpus(x) & Yampus(x) & Rompus(x)))", "(all x y z.((Tax(x) & Numpus(y) & Yuba(z)) -> -Numpus(x,y)) & ((Tax(x) & Rompus(x)) -> Yampus(z)))", "all x y z.((Rex(x) & Numpus(y) & Yampus(z)) -> (-Numpus(x) & Yampus(x) & Rompus(x)))", "(all x y.((Actor(x) & Numpus(y)) -> -Actor(x)) | (Actor(y) & Actor(y))) | (Actor(y) & Actor(y))))", "(all x.(Rex(x) -> -Number(x)) & (yumpus(x) | Rompus(x))))", "all x y.((Rex(x) & Nompus(x) & Yampus(y)) -> Rompus(x))", "all x y z.((Regx(x) & Numpus(y) & Yampus(z)) -> (-Numpus(x) & Yampus(z) & Rompus(z)))", "all x y.((Rex(x) & -Numpus(x)) -> SoilGen(x)) & (Yumpus(y) -> SoilGen(y)))", "(MakingCircles(Rex) & -Numpus(Rex) & Yumpus(Rex) & Rompus(Rex))"]}
{"id": "prontoqa_train_391", "nl": "Every dumpus is a jompus.", "fol": "all x. (dumpus(x) -> jompus(x))", "prediction": ["all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))", "all x.(Dumpus(x) -> Jompus(x))"]}
{"id": "prontoqa_train_392", "nl": "Stella is a vumpus and Stella is not a jompus and Stella is an impus.", "fol": "(vumpus(Stella) & -jompus(Stella) & impus(Stella))", "prediction": ["all x y z.((Stella(x) & -Jompus(y) & Impossible(z)) -> (Vumpus(x) & -Jompus(y) & Imperium(z)))", "(all x.(Stella(x) -> Vumpus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Impossible(x)))", "(all x.(Vumpus(x) & -Jompus(x)) & all y.(Immersion(y)) -> (Vumpus(x) & -Jompus(y))))", "all x y z.((Stella(x) & Vumpus(x) & Stella(y) & Jompus(z)) -> (Impossible(x) | Impossible(y)))", "(all x.(Vumpus(x) -> Stella)) & (Jompus(x) -> Stella)) & (Improviser(x) -> Stella)))", "(all x.(Vumpus(x) -> Stella(x)) & (-Jompus(x) -> Stella(x)))", "(all x.((Stella(x) & Vumpus(x)) -> -Jompus(x)) & all y.((Stella(y) & Issuel(y)) -> Imperator(y)))", "all x.((Stella(x) & Vumpus[x)) -> (-Jompus(x) & -IsPeculiar(x)))", "all x y z.((Stella(x) & Vumpus(x) & Stella(y) & Jompus(z)) -> (-Vumpus(x) & -Jompus(y) & -Impos(y)))", "(all x.(Stella(x) -> vumpus(x)) & all y.(Stella(y) -> -jompus(y))) & all z.(Stella(z) -> Impossible(z)))", "(all x.(Livish(x) -> Vumpus(x)) & all y.(NoNompus(y) & NoPrimus(y))) & all z.(Limiter(z) -> Sovereign(z)))", "(all x.(Stella(x) -> Vooma(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Rezervator(x)))", "all x.((Vumpus(x) & -Jompus(x)) -> Hierarch(x))", "(all x.(Stella(x) -> Vumpus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Imperato(x)))", "(all x.(Stella(x) -> Mimpus(x)) & all y.(Stella(y) -> -Jimpus(y))) & all z.(Stella(y) -> Impermanent(z)))", "(all x.(Vulmpus(x) -> Stella)) & (Jompus(x) -> Stella)) & (Impossible(x) -> Stella)))"]}
{"id": "prontoqa_train_393", "nl": "Stella is not a dumpus.", "fol": "-dumpus(Stella)", "prediction": ["Stella is not Dumpus(Stella)", "Stella is not a dumpus.", "Stella is not a dumpus.", "Stella is not a dumpus.", "Stella & -Dumpus(Stella)", "Stella is not a Dumpus.", "Stella has a unique dummy(d) & -Dumpus(d))", "Stella is notDumpus.", "Stella & -Dumpus(Stella)", "Stella is not Dumpus(Stella)", "(-Dumpus(Stella))", "Stella is not Dumpus(Stella)", "Stella is not a Dumus(Stella)", "Stella is not a Dumpus.", "Stella is NOTDumps(Stella)", "Stella is notDumpus(Stella)"]}
{"id": "prontoqa_train_394", "nl": "Each vumpus is a sterpus.", "fol": "all x. (vumpus(x) -> sterpus(x))", "prediction": ["all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "ALL X.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_395", "nl": "Wren is a zumpus and Wren is a tumpus and Wren is not a sterpus.", "fol": "(zumpus(Wren) & tumpus(Wren) & -sterpus(Wren))", "prediction": ["all x y.((Wren(x) & Zumpus(x) & Wren(y)) -> (Tumpus(y) & -Sterepus(z)))", "all x y z.((Wren(x) & Zumpus(x) & Wren(y) & Tumpus(y)) -> (Tumpus(y) & -Sterepus(z)))", "(all x.(Wren(x) -> Zumpus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Sterpus(x)))", "all x y z.((Wren(x) & Tompus(y) & Tompus(z)) -> (Rose-Alarms(x) & ResonateAlarms(x) & -Stross(x)))", "all x y.((Wren(x) & Tompus(x) & Tumpus(y)) -> (Tompus(x) & -Sterepus(x)))", "(all x.(Wren(x) -> Zumpus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Sterus(x))))", "all x y z.((Wren(x) & Zumpus(x)) & ((Wren(y) & Tumpus(y)) & -Stereo(z))) -> (Patient(x,y) & IsThem(y,z)))", "(all x.(Wren(x) -> Zumpus(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> -Sterepus(z)))", "all x.(Wren(x) -> (Tompus(x) & Tumpus(x) & -Sterpus(x)))", "(all x.(Wren(x) -> Zumpus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Sterpus(x)))", "all x y z.((Wren(x) & Tompus(x) & Tumpus(y) & (Tumpus(z) | Sterpus(z))) -> Occurs(x))", "(all x.(Wren(x) -> Zumpus(x)) & (Wren(x) -> Tumpus(x)) & -Wren(x)))", "(all x.(Wren(x) -> Zurpus(x)) & ((Wren(x) -> Tumpus(x))) & ((Wren(x) -> -Sterepus(x))))", "(all x y.(Wren(x) -> Tommus(x)) & (Wren(y) -> Tumpus(y)) & (Wren(y) -> -Sterepus(y)))", "all x y.((Wren(x) & Zumpus(x) & Wren(y)) -> (Tumpus(y) & -Sterepus(y)))", "(all x y.(Wren(x) -> Zumpus(x)) & (Wren(y) -> Tumpus(y)) & (Wren(y) -> -Sterepus(y)))"]}
{"id": "prontoqa_train_396", "nl": "Lorpuses are rompuses.", "fol": "all x. (lorpus(x) -> rompus(x))", "prediction": ["all x.(Lorpus(x) -> Rompus(x))", "all x.(Lorpus(x) -> Rompus(x))", "all x.(Rompe(x) -> Lorpus(x))", "all x.(Lorpuse(x) -> Rompuse(x))", "all x.(Lorpus(x) -> Rompus(x))", "all x.(Lorpuse(x) -> Rompus(x))", "all x.(Lorpus(x) -> Rompus(x))", "all x.(Lorpuse(x) -> Rompus(x))", "all x.(Lorpus(x) -> Rompus(x))", "all x.(Lorpus(x) -> Rompus(x))", "all x.(Lorpus(x) -> (rompus(x) & HasKim(x)))", "all x.(Lorpus(x) -> Rompus(x))", "all x.(Lorpus(x) -> Rompus(x))", "all x.(Lorpuse(x) -> Rompuse(x))", "all x.(Lorpus(x) -> Rompus(x))", "all x.(Lorpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_397", "nl": "Stella is a numpus, Stella is a gorpus, and Stella is not a rompus.", "fol": "(numpus(Stella) & gorpus(Stella) & -rompus(Stella))", "prediction": ["(all x.(Stella(x) -> Numpus(x)) & all y.(Stella(y) -> Gorpus(y)) & all z.(Stella(z) -> -Rompus(z))))", "all x y z.((Start(x) & Numpus(x) and Stella(y) & Gorpus(z)) -> (Nompus(x) & Gorpus(y) & -Rompus(y)))", "(all x.(Stella(x) -> Numpus(x)) & all y.(Stella(y) -> Gorpus(y))) & all z.(Stella(z) -> -Rompus(z))))", "all x y z.((Stella(x) & Numpus(x) & Gorpus(y) & NotRompus(z)) -> (Numpus(x) | Gorpus(y) & -Rompus(z)))", "(all x.(Stella(x) -> Numpus(x)) & all y.(Stella(y) -> Gorpus(y)) & all z.(Stella(z) -> -Rompus(z)))", "(all x.(Stella(x) -> Numpus(x)) | (Stella(x) -> Gorpus(x))) & (Stella(x) -> -Rrompus(x)))", "(all x.(Stella(x) -> Numpus(x)) & (Stella(x) -> Gorpus(x)) & -Rompus(x)))", "(all x.(Stella(x) -> Numpus(x)) & all y.(Stella(y) -> Gorpus(y)) & all z.(Stella(z) -> -Rompus(z))))", "(all x.(Stella(x) -> Numpus(x)) & (Stella(x) -> Gorpus(x)) & -Stella(x)))", "all x y z.((Stella(x) & Numpus(x) & Gorpus(y) & -Rompus(z)) -> (Numpus(x) & Gorpus(y) & -Rompus(z)))", "(Numpus(Stella) & Gorpus(Stella) & -Rompus(Stella))", "(all x.(Stella(x) -> Numpus(x)) & (Stella(x) -> Gorpus(x)) & all y.(Stella(y) -> -Rompus(y))))", "all x y z.((Stella(x) & Numpus(x) & Gorpus(y) & -Rrompus(z)) -> ((Ancient(x) & Ancient(y) & Ancient(z)) & Ancient(z)))", "(all x y z.(Stella(x) -> Numpus(x)) & (Stella(y) -> Gorpus(y)) & (Stella(z) -> -Rompus(z))))", "(all x.(Stella(x) -> Numpus(x)) & all y.(Stella(y) -> Gorpus(y)) & -Stella(y)))", "all x.((Stella(x) -> (Numpus(x) | Gorpus(x)) | -Romes(x)))"]}
{"id": "prontoqa_train_398", "nl": "Stella is not a lorpus.", "fol": "-lorpus(Stella)", "prediction": ["all x.(Stella(x) -> -Lorpus(x))", "Stella is not a lorpus.", "Stella -Lorpus(s)", "exists x.(Stella(x) & -Lorpus(x))", "Stella is -Lorpus(x)", "Stella is not a lorpus.", "Stella is not a lorpus.", "-Lorpus(Stella)", "Stella is not a lorpus.", "Stella is not a lorpus.", "exists x.(Stella(x) & -Lorpus(x))", "Stella is not a lorpus.", "(-Lorpus(Stella))", "Stella is not a lorpus.", "Stella is not a lorpus.", "Stella is not a lorpus."]}
{"id": "prontoqa_train_399", "nl": "Each numpus is a yumpus.", "fol": "all x. (numpus(x) -> yumpus(x))", "prediction": ["all x.(numpus(x) -> Yangus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Nompus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumulus(x))", "all x.(numpus(x) -> Yump!", "all x.(Nompus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(numpus(x) -> Yumpus(x))", "all x.(Nompus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpos(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpus(x))"]}
{"id": "prontoqa_train_400", "nl": "Stella is a sterpus, Stella is not a yumpus, and Stella is a jompus.", "fol": "(sterpus(Stella) & -yumpus(Stella) & jompus(Stella))", "prediction": ["(all x.((Stella(x) & Sterpus(x)) -> -Yumpus(x)) & ALL y.((Stella(y) & Jompus(y)) -> -Sterpus(y)))", "(all x.(Stella(x) -> Sterpus(x)) & (Stella(x) -> -Yumpus(x)) & (Stella(x) -> Jompus(x)))", "(all x y z.((Sternet(x) & Yumpus(y) & Sorcerer(z)) -> Sterpus(x)) & ((Sternet(x) & Sorcerer(x)) -> Jompus(x)))", "(all x.(Sternus(x) -> Sterpus(x)) & (Stella(x) -> -Yumpus(x)) & (Stella(x) -> Jompus(x)))", "all x y z.((Stella(x) & Sterpus(y) & Grassy(z)) -> (-Yumpus(x) & Jompus(x)))", "all x y z.((Stella(x) & Sterpus(y) & Yumpu(z)) -> ((Storpus(x) | Jompus(y))))", "(all x y z.((Stella(x) & Sterpus(y) & -Yumpus(z)) -> (Is(x,y)) | (Is(x,z) & Is(x,z)))))", "(all x y.((Stella(x) & Sterepus(x)) & ((Stella(y) & -Yumpus(y)) -> Yompus(y)))", "(all x y z.(Stella(x) -> Sterpus(x)) & (Stella(y) -> -Yumpus(y)) & (Stella(z) -> Jompus(z)))", "(all x.(Stella(x) -> Sterosen(x)) & (NoSumpus(x) & Jompus(x)))", "(all x.(Stella(x) -> Sterpus(x)) & (-Stella(x) -> Yumpus(x)) & (-Stella(x) -> Jompus(x)))", "all x y z.((Stella(x) & Sterpus(y) & NotYumpus(z) & Jompus(x)) -> (Sterpus(x) & Jompus(x)))", "all x y z.((Stella(x) & Sterepus(x) & Stella(y) & Humpus(z)) -> (Stereo(x) & -Yumpus(y) & Jompus(z)))", "(all x y z.(Stern(x) -> (Sterpus(y) | -Yumpus(z))) & (Stern(z) -> (Joompus(z)))))", "(all x.(Stella(x) -> Sterepus(x)) & (Stella(x) -> -Yumpus(x)) & (Stella(x) -> Jompus(x)))", "all x y.((Stella(x) & Stella(y)) -> (Sterepus(x) | (-Yumpus(y) & Jompus(y))))"]}
{"id": "prontoqa_train_401", "nl": "Each yumpus is a jompus.", "fol": "all x. (yumpus(x) -> jompus(x))", "prediction": ["all x.(Yumpus(x) -> Jompus(x))", "exists x.(Yumpus(x) & Jompus(x))", "all x.(Yumpus(x) -> Jompus(x))", "all x.(Yumpus(x) -> Jompus(x))", "all x.(Yumpus(x) -> Jompus(x))", "all x.(Yumpus(x) -> Jompus(x))", "all x.(Yumpus(x) -> Jompus(x))", "all x.(Yumpus(x) -> Jompus(x))", "all x.(Yumpus(x) -> Jompus(x))", "all x.(Yumpus(x) -> Jompus(x))", "all x.(Yumpus(x) -> Jompus(x))", "all x.(Yumpus(x) -> Jompus(x))", "all x.(Yumpus(x) -> Jompus(x))", "all x.(Yumpus(x) -> Jompus(x))", "all x.(Yumpus(x) -> Jompus(x))", "all x.(Yumpus(x) -> Jompus(x))"]}
{"id": "prontoqa_train_402", "nl": "Alex is a shumpus, Alex is a gorpus, and Alex is not a jompus.", "fol": "(shumpus(Alex) & gorpus(Alex) & -jompus(Alex))", "prediction": ["all x y z.((Alex(x) & Humpback(y) & Gorpus(z)) -> (Shumpus(x) & Gorpus(y) & -Jompus(x)))", "exists x y z.(Alex(x) & Shumpus(x) & Gorpus(y) & -Jampus(z))", "all x y z.((Alex(x) & Humpus(y) & Gorpus(z)) -> (Shumpus(x) & Gorpus(x) & -Jimpus(x)))", "(all x.(Alex(x) -> Shumpus(x)) & all y.(Alex(y) -> Gorpus(y)) & none z.(Alex(z) & Jompus(z))))", "all x y z.((Alex(x) & Shumpus(y) & Gorpus(z) & -Jompus(x)) -> (Shumpus(x) & Gorpus(x) & -Shumpus(x)))", "all x y z.((Alex(x) & Humpus(y) & Gorpus(z)) -> (Shumpus(x) & Gorpus(y) & -Jumpus(z)))", "all x y z.((Alex(x) & Humpus(y) & Gorpus(z)) -> (Shumpus(x) & Gorpus(z) & -Jumpus(x)))", "all x y z.((Alex(x) & Shumpus(x) & Gorpus(y) & -Jimpus(z)) -> (Shumpus(x) & Gorpus(y) & -Shumpus(z)))", "(all x.(Alex(x) -> Humpus(x)) & (Alex(x) -> Gorpus(x)) & -Jimpus(x)))", "all x y z.((Alex(x) & Shumpus(x) & Gorpus(y) & -Jimpus(z)) -> (Shumpus(x) & Gorpus(y) & -Jumpus(z)))", "(all x y.(Alex(x) -> Humpus(x)) & (Alex(y) -> Gorpus(y)) & (Alex(y) -> -Jompus(y)))", "(all x.(Alex(x) -> Shumpus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Jumpus(z))))", "(all x.(Alex(x) & Humpus(x)) & all y.(Gorpus(y) & -Jompus(y)))", "all x y z.((Alex(x) & Humpus(y) & Gorpus(z)) -> (Shumpus(x) & Gorpus(x) & -Jimpus(x)))", "(all x.(Alex(x) -> Shumpus(x)) & all y.(Alex(y) -> Gorpus(y)) & -Jompus(y)))", "all x y z.((Alex(x) & Shumpus(y) & Gorpus(z)) -> (Shumpus(x) | Gorpus(z) | -Jompus(z)))"]}
{"id": "prontoqa_train_403", "nl": "Every brimpus is a tumpus.", "fol": "all x. (brimpus(x) -> tumpus(x))", "prediction": ["all x.((Brimpus(x) & Tumpus(x)) -> Is(x,y))", "all x.(Brimpus(x) -> Tumpus(x))", "all x.(Brimpus(x) -> Tumpus(x))", "all x.(Brimpus(x) -> Tumpus(x))", "all x.(Brimpus(x) -> Tumpus(x))", "all x.(Brimpus(x) -> Tumpus(x))", "all x.(Brumpus(x) -> Tumpus(x))", "all x.(Brumpus(x) -> Tumpus(x))", "all x.(Brumpus(x) -> Tumpus(x))", "all x.(Blumpus(x) -> Tumpus(x))", "all x.(Blumpus(x) -> Tumpus(x))", "all x.(Brimpus(x) -> Tumpus(x))", "all x.(Brumpus(x) -> Tumpus(x))", "all x.(Brumpus(x) -> Tumpus(x))", "all x.(Brumpus(x) -> Tumpus(x))", "all x.(Brumpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_404", "nl": "Sally is a shumpus, Sally is not a tumpus, and Sally is a grimpus.", "fol": "(shumpus(Sally) & -tumpus(Sally) & grimpus(Sally))", "prediction": ["(all x.(Sally(x) -> Humpus(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Grimpus(x)))", "(all x.(Sally(x) -> Humpus(x)) & (-Tumpus(x) & (Cruppy(x) | Sailpus(x))))", "(all x.(Sally(x) -> Shumpus(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Grempus(x)))", "(all x.(Sally(x) -> Shumpus(x)) & (Sally(x) -> -Tompus(x)) & (Sally(x) -> Grimpus(x)))", "(all x.(Sally(x) -> Shumpus(x)) & all y.((Sally(y) & -Tumpus(y)) -> Grimpus(y)))", "(all x.(Sally(x) -> Shumpus(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Grimpus(x)))", "(all x.(Sally(x) -> Humpus(x)) & all y.(Sally(y) -> -Tumpus(y)) & all z.(Sally(z) -> Grimpus(z)))", "(all x.(Sally(x) -> Humpus(x)) & (Sally(x) -> -Tompus(x)) & (Sally(x) -> Grimpus(x)))", "(all x.(Sally(x) -> Shumpus(x)) & (-Shumpus(x) & -Tumpus(x)) & (-Shumpus(x) -> Grimpus(x)))", "(all x.(Sally(x) -> Shumpus(x)) & (-Sally(x) -> Tumpus(x)) & (-Sally(x) -> Gruppus(x)))", "(all x.(Sally(x) -> Shampus(x)) & (HasTumpus(x) | HasGrimpus(x)))", "(all x.(Sally(x) -> Humpt(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Grimpus(x)))", "all x y.((Sally(x) & Shumpus(x)) & (-Tumpus(y) & Grubis(y))) -> (Shumpus(x) & -Tumpus(y) & Grubis(y)))", "(all x.(Sally(x) -> Shumpus(x)) & (-Tumpus(x) & (Sally(x) -> Grimpus(x))))", "(all x.(Sally(x) -> Humpus(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Grimpus(x)))", "all x y z.((Sally(x) & Shumpus(y) & Tumpus(z)) -> (Shumpus(x) & -Tumpus(y) & Gruppus(z)))"]}
{"id": "prontoqa_train_405", "nl": "Sally is not a brimpus.", "fol": "-brimpus(Sally)", "prediction": ["Sally is not a Brimpus.", "all x.(Sally(x) -> -Brimpus(x))", "Sally is not brimpus.", "All x.(Sally(x) -> -brimpus(x))", "Sally is -Brumpus(Sally)", "Sally is -Brumpus(s)", "Sally is not a brimpus.", "Sally is not a Brimpus.", "Sally is not a Brimpus(Sally)", "Sally is not a Brimpus.", "Sally is not a Brimpus.", "Sally is not brimpus.", "all x.(Sally(x) -> -Brimpus(x))", "Sally is not a brimpus.", "Sally is not Brimpus.", "all x.(Sally(x) -> -Brimpus(x))"]}
{"id": "prontoqa_train_406", "nl": "Every sterpus is a zumpus.", "fol": "all x. (sterpus(x) -> zumpus(x))", "prediction": ["all x.(Sterepus(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Stereo(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Steerpus(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Steerpus(x) -> Zumpus(x))", "all x.(Steerpus(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zupis(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Steerpus(x) -> Zumpus(x))", "all x.(sterpus(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_407", "nl": "Sam is a vumpus and Sam is a gorpus and Sam is not a zumpus.", "fol": "(vumpus(Sam) & gorpus(Sam) & -zumpus(Sam))", "prediction": ["(all x.(Sprupp(x) -> Vumpus(x)) & all y.(Gorpus(y) -> Zumpus(y)))", "all x y z.((Sam(x) & Vamp(y) & Sam(z)) -> (Vampus(x) & Gorpus(z) & -Zumpus(z)))", "(all x.(Liptop(x) -> Vumpus(x)) & (Gorpus(x) -> Gorpus(x)) & (About(x,Tompus)) | (About(x,Tompus) -> Gorpus(x))))", "(all x.(Vumpus(x) & All y.(Gorpus(y)) & -Zumpus(y)))", "all x y z.((Sam(x) & vumpus(x) & Gorpus(y) & Sam(z)) -> (Vimpus(x) & Gorpus(y) & -Zumpus(z)))", "(all x.(Sam(x) -> Vumpus(x)) & (Sam(x) -> Gorpus(x)) & (Sam(x) -> -Zumpus(x)))", "(all x.(Sam(x) -> Vumpus(x)) & (Sam(x) -> Gorpus(x)) & -Zumpus(x)))", "(all x.(Vimpus(x) -> Sam(x)) & all y.(Gorpus(y)) -> Sam(y)) & -Toumpus(y)))", "(venompus(Sam) & Gorpus(Sam) & -Zumpus(Sam))", "(all x.(Sam(x) -> Vumpus(x)) & (Sam(x) -> Gorpus(x)) & -Sam(x) -> Zumpus(x)))", "(all x y.((Sam(x) & Pumpus(x)) -> V\u00fcmes(x)) & ((Sam(x) & Gorpus(x))) & ((Sam(x) & Zumpus(y)) -> -Zomepus(x))))", "(all x y z.(Sam(x) -> Vumpus(x)) & (Sam(y) -> Gorpus(y)) & (Sam(z) -> -Sumpus(z)))", "(all x.(Sam(x) -> Vumpus(x)) & (Sam(x) -> Gorpus(x)) & (Sam(x) -> - Zumpus(x)))", "all x y.((Sam(x) & Vumpus(x) & Sam(y)) -> (Gorpus(y) & -Zumpus(y)))", "(all x.(Sam(x) -> Vumpus(x)) & (Sam(x) -> Gorpus(x)) & (Sam(x) -> -Zumpus(x)))", "(all x.(Sam(x) -> Vampis(x)) & (Sam(x) -> Gorpus(x)) & (Sam(x) -> -Zumpus(x))))"]}
{"id": "prontoqa_train_408", "nl": "Every rompus is a brimpus.", "fol": "all x. (rompus(x) -> brimpus(x))", "prediction": ["all x.(Rompus(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "(all x.(Rompus(x) -> Brimpus(x)))", "all x.(Rompus(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "(all x.(Romesue(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "all x.(Romesue(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_409", "nl": "Wren is an impus, Wren is not a brimpus, and Wren is a wumpus.", "fol": "(impus(Wren) & -brimpus(Wren) & wumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Impossible(x)) & (-Brumpus(x) & -Wumpus(x)))", "(all x y z.(Wren(x) -> Impossible(x)) & ((Wren(y) & -Brimpus(y)) | (Wren(z) & Humpus(z)))))", "(all x y z.((Wren(x) & Impossible(x)) -> ((Bermpus(y) | Wren(z)))) & ((Wren(y) & -Bermpus(y)) -> Wumpus(z)))", "all x y z.((Wren(x) & Brumpus(y) & Wren(z)) -> (Issue(x) & -IsBrimpus(y) & Wumpus(z)))", "(all x.(Wren(x) -> Exercises(x)) & (-Brimpus(x) & Wren(x)) -> Rumpus(x)))", "all x y z.((Wren(x) & Imperator(y) & Wren(z)) -> (Impossed(x) & -Brimpus(z) & Wumpus(z)))", "(all x.(Wren(x) -> Impossible(x)) & (-Brumpus(x) & (-Wren(x) -> Wumpus(x))))", "All x y z.((Wren(x) & Bumpet(y) & Wren(z)) -> (Impossible(x) | (-Brimpus(y) & Wumpus(z)))))", "(all x.(Wren(x) -> Impossible(x)) & all y.((Wren(y) & -Brimpus(y))) -> Wumpus(y)))", "(all x y z.(Wren(x) -> Impossible(x)) & (-Brumpus(y) & -British(z))) & (Wren(x) -> Wumpus(z)))", "(all x.(Iron(x) -> Wren(x)) & (Brimpus(x) -> Wren(x))) & (Wumpus(x) -> Wren(x)))", "all x y z.((Wren(x) & Impossible(x) & Wren(y) & -Brimpus(y) & Wren(z)) -> (Imployee(x) & Wumpus(z)))", "(all x.(Wren(x) -> Impossiv(x)) & (-Brimpus(x) & (Wren(x) | Wumpus(x))))", "(all x.(Wren(x) -> Issuel(x)) & all y.(Wren(y) -> -Brampus(y))) & all z.(Wren(z) -> Wumpus(z))))", "(all x y z.((Wren(x) & Imperfect(y) & Brimpus(z)) -> Wren(x)) & ((Wren(x) & Brampus(z)) -> Womenip(x)))", "(all x y z.((Wren(x) & Impreza(y)) -> Impreza(x)) & ((Wren(z) & -Brimpus(z)) -> Bumpio(x)))"]}
{"id": "prontoqa_train_410", "nl": "Each sterpus is a grimpus.", "fol": "all x. (sterpus(x) -> grimpus(x))", "prediction": ["all x.(Sterus(x) -> Grimpus(x))", "all x.(Stropus(x) -> Grimpus(x))", "all x.(Steerpus(x) -> Grimpus(x))", "all x.(Steerpus(x) -> Grimpus(x))", "all x.(Sterpus(x) -> Grimpus(x))", "all x.(SeeSterpus(x) -> Grimpus(x))", "all x.(Steeperpus(x) -> Grubbus(x))", "all x.(Steerpus(x) -> Grimpus(x))", "all x.(Steerpus(x) -> Grimpus(x))", "all x.(Sterpus(x) -> Grimpus(x))", "all x.(Sterosamp(x) -> Gruppus(x))", "all x.(Sterpus(x) -> Gruppus(x))", "all x.(Sterpus(x) -> Grimpus(x))", "all x.(Sterpus(x) -> Gruffus(x))", "all x.(Sterpus(x) -> Grimpus(x))", "all x.(Sterepus(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_411", "nl": "Sam is a shumpus and Sam is not a grimpus and Sam is a rompus.", "fol": "(shumpus(Sam) & -grimpus(Sam) & rompus(Sam))", "prediction": ["all x y.((Sam(x) & Sam(y)) -> (Shumpus(x) & -Grimpus(y) & Rompus(y)))", "all x y z.((Shumpus(x) & Grimpus(y) & Rompus(z)) -> (Rompus(x) & -Shumpus(y) & Rompus(z)))", "(all x y z.(Sam(x) -> Shumpus(x)) & ((Sam(y) & -Smaurus(y)) -> Rompus(z)))", "(all x.(Shumpus(x) -> Sahibhai)) & (-Surph(x)) | (-Surph(x) & Sahibhai))))", "(all x y.(Shumpus(x) -> Simper(x)) & (NoSmooth(y) -> Romans(y)))", "(all x.(Shumpus(x) -> Spinosaur(x)) & (-Surfsaur(x) | Rochester(x))))", "(all x y.(Shumpus(x) -> Sigs(x)) & (Crushi(y) -> -Smooch(y))) & (Rompus(y)) -> -Sumpus(y)))", "(all x.(Shumpus(x) & -Smooch(x)) & (Rompus(x) -> -Shumpus(x)))", "(all x y z.(Shumpus(x) & -Smirkus(y) & Romanus(z)) -> Shumpus(x)) & (Sam(x) | Amara(x)))", "(all x.(Shumpus(x) -> SamPumpus(x)) & (-Surgrimpus(x) -> SamPumpus(x)))", "all x y.((Sam(x) & Sam(y)) -> (Shumpus(x) & -Smoothpus(y) & Rompus(y)))", "(all x.(Shumpus(x) & -Gruppus(x)) & all y.(Rompus(y)) -> (Shumpus(x) & -Slumpus(y))))", "all x.(Sumpus(x) & -Smoodpus(x) & Rompus(x))", "(-Slimpus(Sam) & Shumpus(Sam) & Rompus(Sam))", "exists x.(Shumpus(x) & Sam(x) & -Smaller(x) & Rrompus(x))", "(all x.(Shumpus(x) -> Sam)) & (NoSmoothpus(x) -> Sam(x)) & (Rompus(x) -> Sam)))"]}
{"id": "prontoqa_train_412", "nl": "Sam is a grimpus, Sam is not a rompus, and Sam is a dumpus.", "fol": "(grimpus(Sam) & -rompus(Sam) & dumpus(Sam))", "prediction": ["(all x y.((Sam(x) & Grimpus(x)) -> Grimpus(x)) & ((Sam(y) & -Rompus(y))) -> Dumpus(y)))", "all x y z.((Sam(x) & Grimpus(x) & Sam(y) & Dumpus(z)) -> (-Rompus(y) & Dumpus(z)))", "all x y z.((Sam(x) & Grimpus(x) & Sam(y) & Dumpus(z)) -> (-Rompus(y) & -Sam(z)))", "all x y z.((Sam(x) & Grimpus(x) & Sam(y) & Dumpus(z)) -> (-Rompus(y) & Dumpus(z)))", "all x y z.((Sam(x) & Grimpus(y) & Sam(z)) -> (-Rompus(z) & Dumpus(z)))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Rompus(x)) & (Social(x) -> Dumpus(x)))", "(all x.(Sam(x) -> Grimpus(x)) & (-Sam(x) -> Rompus(x)) & (-Sam(x) -> Dumpus(x)))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Rompus(x)) & (Sam(x) -> Dumpus(x)))", "(all x.(Sam(x) -> Grimpus(x)) & all y.(Sam(y) -> -Rompus(y)) & all z.(Sam(z) -> Dumpus(z))))", "(all x.(Sam(x) -> Grumpus(x)) & (Sam(x) -> -Rompus(x)) & (Sam(x) -> Dumpus(x)))", "(all x.(Sam(x) -> Grumpus(x)) & all y.(Romeus(y) -> -Rompus(y)) & all z.(Dumpus(z) -> Dumpus(z)))", "all x y z.((Sam(x) & Grimpus(x) & Sam(y) & Dumpus(z)) -> (-Rompus(y) & Dumpus(z)))", "exists x.(Sam(x) & Grimpus(x)) & -Rompus(x) & Dumpus(x))", "all x y z.((Sam(x) & Grimpus(y) & Sam(z)) -> (-Rrompus(z) & Dumpus(z)))", "all x.((Sam(x) & Grauss(x)) -> (-rompus(x) & Dumpus(x)))", "(all x y z.((Same(x) & Grimpus(x)) -> Crompus(x)) & ((Same(y) & -Rompus(y)) -> Dumpus(y)))"]}
{"id": "prontoqa_train_413", "nl": "Max is not a vumpus, Max is a gorpus, and Max is a tumpus.", "fol": "(-vumpus(Max) & gorpus(Max) & tumpus(Max))", "prediction": ["(all x.(Matt(x) -> -Vimpus(x)) & all y.(Max(y) -> Gorpus(y)) & all z.(Max(z) -> Tumpus(z))))", "all x y z.((Max(x) & Gorpus(y) & Humpus(z)) -> (-Vumpus(x) | -Gorpus(y) & Tanus(z)))", "(all x y z.((Max(x) & Vumpus(y)) -> -Vumpus(x)) & ((Max(z) & Gorpus(z))) -> Tumpus(z)))", "(all x.(Max(x) -> -Vumpus(x)) & all y.(Max(y) -> Gorpus(y)) & all z.(Max(z) -> Tumpus(z))))", "(all x y.((Max(x) & Vampire(y)) -> -Vampire(x)) & ((Max(x) & Gorpus(x)) -> Tumpew(x)))", "all x y z.((Max(x) & Vumpus(y) & Gorpus(z)) -> (-Vumpus(x) & Gorpus(x) & Tumpus(y)))", "all x y z.((Max(x) & Gorpus(y) & Tumpus(z)) -> (-Vumpus(x) & Gorpus(y) & Tumpus(z)))", "(all x.(Max(x) -> -Vumpus(x)) & all y.(Max(y) -> Gorpus(y)) & all z.(Max(z) -> Tumpus(z)))", "all x y z.((Max(x) & Furrus(y) & Dorpus(z)) -> (-Vumpus(x) & Gorpus(y) & Tumpus(z)))", "all x y z.(By(x,z) & ((Max(x) & Vumpus(y) & Gorpus(z))) | (Max(x) & Torpus(x))))", "all x.((Max(x) & -Vumpus(x)) & (Foli(x) | Gorpus(x)) & (Tumpus(x))) -> -Vumpus(x))", "(all x.(Max(x) -> -Vumpus(x)) & (Max(x) -> Gorpus(x)) & (Max(x) -> Tumpus(x)))", "(ExactlyNoVimpus,Max(Max) & -Vimpus(Max)) & -Gorpus(Max) & -Tumpus(Max))", "(all x y z.((Max(x) & NoVumpus(x)) -> HeadsUp(x)) & ((Max(y) & Gorpus(y)) -> HeadsUp(y))) -> (Max(z) & Totumpus(z)))", "all x y z.((Max(x) & Gorpus(y) & Tumpus(z)) -> (-Vumpus(x) & -Gorpus(y) & -Tumpus(z)))", "all x y z.((Max(x) & Vumpus(y) & Gorpus(z)) -> (-Vumpus(x) | (-Vumpus(x) & Gorpus(z))) & Tumpus(x)))"]}
{"id": "prontoqa_train_414", "nl": "Sterpuses are numpuses.", "fol": "all x. (sterpus(x) -> numpus(x))", "prediction": ["all x.(Sterpus(x) -> Numpus(x))", "all x.(Sterpus(x) -> Numpus(x))", "all x.(Sterpus(x) -> Numpus(x))", "all x.(Sterpus(x) -> Numpus(x))", "all x.(Sterpus(x) -> Numpus(x))", "all x.(Nombruse(x) -> Sterpuse(x))", "all x.(Sterpus(x) -> Numpus(x))", "all x.(Strerpus(x) -> Numpus(x))", "all x.(Strerpus(x) -> Numpuse(x))", "all x.(Sterpus(x) -> Numpus(x))", "all x.(Sterpus(x) -> Numpus(x))", "all x.(Sterpus(x) -> Numpuse(x))", "all x.(Sterpus(x) -> Numpus(x))", "all x.(Sterpus(x) -> Numpus(x))", "all x.(Sterpus(x) -> Numpus(x))", "all x.(Sterpus(x) -> Numpus(x))"]}
{"id": "prontoqa_train_415", "nl": "Fae is a gorpus and Fae is not a numpus and Fae is a rompus.", "fol": "(gorpus(Fae) & -numpus(Fae) & rompus(Fae))", "prediction": ["all x y z.((Fae(x) & Gorpus(x) & Fae(y) & Rompus(z)) -> (-numpus(y) & Rompus(z)))", "(all x y z.((Fae(x) & Gorpus(x) & -Numpus(y)) -> Rhopus(z)))", "all x.(Father(x) -> (Gorpus(x) & -Numpus(x) & Rompus(x)))", "(all x.(Fae(x) -> Gorpus(x)) & (-Numpus(x) & (Rompus(x)))))", "all x y.((Fae(x) & Rhombus(y)) -> (Gorpus(x) & -Nompus(x) & Rompus(x)))", "(all x y.((Fae(x) & Gorpus(y)) -> Gorpus(x)) & ((Fae(x) & -Nompus(y)) -> Rompus(y)))", "(all x.(Fae(x) -> Gorpus(x)) & all y.(Fae(y) -> -Numpus(y)) & all z.(Fae(z) -> Rompus(z)))", "all x y z.((Fae(x) & Gorpus(x) & Fae(y) & Numpus(z)) -> (Each(x,y,z) & -(Numpus(y) | Rompus(y))))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Numpus(x)) & (Fae(x) -> Rompus(x)))", "(all x y z.(Fae(x) -> Gorpus(x)) & (Fae(y) -> -Numpus(y)) & (Fae(z) -> Rompus(z)))", "all x y z.((Fae(x) & Gorpus(x) & -Numpus(y) & Rompus(z)) -> (Gorpus(x) & -Nompus(y) & Rompus(z)))", "all x y z.((Fae(x) & Gorpus(x) & Faes(y) & Rompus(z)) -> (-Numpus(y) & -Rumpus(z)))", "all x.((Fae(x) -> Gorpus(x)) & (-Rumpus(x) & Rompus(x)))", "all x y z.((Fae(x) & Gorpus(x) & Fae(y) & Rompus(z)) -> (-Smooth(x) & -Rumotus(y) & -Smooth(y)))", "all x y z.((Fae(x) & Gorpus(x) & Fae(y) & Numpus(z)) -> (ArpyRompus(x) | ArpyRompus(y)))", "(all x y z.(Fae(x) -> Gorpus(x)) & ((Fae(y) & -Numpus(y)) -> Rompus(z)))"]}
{"id": "prontoqa_train_416", "nl": "Wumpuses are zumpuses.", "fol": "all x. (wumpus(x) -> zumpus(x))", "prediction": ["ALL x.(Wumpus(x) -> Zumpuse(x))", "(zumpuse(wumpuse) & LocatedInFootwil,Wumpus,Wu))", "all x.(Wumpuse(x) -> Zumpuse(x))", "all x.(Wingue(x) -> Zumpuse(x))", "all x.(Wumpuse(x) -> Zumpus(x))", "all x.(Wumpus(x) -> Zumpus(x))", "all x.(Wumpus(x) -> Zumpus(x))", "all x.(Wumpus(x) -> Zumpuse(x))", "all x.(Wumpus(x) -> Zumpus(x))", "all x.(Wumpus(x) -> Zumpus(x))", "all x.(Wumpuse(x) -> Zumpuse(x))", "all x.(Wumpus(x) -> Zumpus(x))", "all x.(Wumpus(x) -> Zumpus(x))", "all x.(Wumpus(x) -> Zumpus(x))", "all x.(Wumpus(x) -> Zumpus(x))", "all x y.((Wumpuse(x) & Zurpuse(y)) -> HasDumpus(x,y))"]}
{"id": "prontoqa_train_417", "nl": "Rex is not a zumpus, Rex is a yumpus, and Rex is a sterpus.", "fol": "(-zumpus(Rex) & yumpus(Rex) & sterpus(Rex))", "prediction": ["all x y z.((Rex(x) & Zumpus(y) & Yumpsum(z)) -> (-Tompus(x) | Stosterpus(x)))", "(all x.(Rex(x) -> -Zumpus(x)) & all y.((Rex(y) & Yumpus(y))) -> Sterpus(y)))", "(all x.(Rex(x) -> -Zumpus(x)) & all y.(Yumpus(y) & -Sterotus(y)))", "(all x.(Rex(x) -> -Zumpus(x)) & all y.(Yumpus(y) & all z.(Sterepus(z)) -> -Zumpus(y)))", "(all x.(Rex(x) -> -Zumpus(x)) & (Yumpus(x) | Sterpus(x))))", "(all x y z.(Rex(x) -> -Zumpus(x)) & ((Rex(y) & Yumpus(y)) | ((Rex(z) & Yumpus(z))))))", "(all x.(Richther(x) -> -Zumpus(x)) & all y.(Richther(y) -> Yumpus(y)) & all z.(Richther(z) -> Stosterpus(z))))", "(all x.(Rex(x) -> -Zumpus(x)) & all y.(Yumpus(y) -> -Sterpus(y)))", "(-Tommus(Rex)) & (Yumpus(Rex)) & Sterpus(Rex))", "(all x.(Rex(x) -> -Zimpus(x)) & all y.(Yumpus(y) -> Sterpus(y)))", "(all x y z.(Dumpus(x) -> FALSE(x)) & (Yumpus(y) -> FALSE(y)) & (HorsEcho(z) -> Sterepus(z)))", "(all x.(Rex(x) -> -Zumpus(x)) & (Yumpus(x) & -Sterpus(x)))", "(all x.(Rex(x) -> -Zumpus(x)) & (Yumpus(x) -> Sterpus(x)))", "(all x y z.(Rex(x) -> -Zumpus(x)) & (Yumpus(y) & Sterpus(z)))", "(all x y z.(Rex(x) -> -Zumpus(x)) & (Rex(y) -> Yumpus(y)) & (Rex(z) -> Sterpus(z)))", "(all x.(Rex(x) -> -Zumpus(x)) & (yumpus(y) & sterpus(x)))"]}
{"id": "prontoqa_train_418", "nl": "Every lorpus is a zumpus.", "fol": "all x. (lorpus(x) -> zumpus(x))", "prediction": ["all x.(Lorpus(x) -> Zumpus(x))", "(all x.(Lorpus(x) -> Zumpus(x)))", "all x.(Lorp(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "exists x.(Lorpus(x) & Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Larpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Topsy(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_419", "nl": "Alex is a rompus, Alex is not a zumpus, and Alex is a brimpus.", "fol": "(rompus(Alex) & -zumpus(Alex) & brimpus(Alex))", "prediction": ["(all x.(Alex(x) -> Rompus(x)) & (Alex(x) -> -Zumpus(x)) & (Alex(x) -> Brimpus(x)))", "all x y z.((Alex(x) & Rrompus(y) & Zumpus(z)) -> (-> -Rompus(x) & Britpus(x)))", "(all x.(Alex(x) -> Rompus(x)) & (Alex(x) -> -Zumpus(x)) & (Alex(x) -> Britpus(x)))", "all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & -Zumpus(z) & Brimpus(x)))", "all x y z.((Alex(x) & Rimpus(y) & Zumpus(z)) -> (Rompus(x) & -Tompus(y) & Brimpus(z)))", "all x y z.((Alex(x) & Rompus(x) & Alex(y) & Zumpus(z)) -> (-Rompus(y) & Brimpus(y)))", "all x y z.((Alex(x) & Zumpus(y) & Brimpus(z)) -> (Rompus(x) & -Zumpus(y) & Brimpus(z)))", "all x y z.((Alex(x) & Roph(y) & Zup(z)) -> (Rompus(x) & -Zumpus(y) & Brimpus(z)))", "(all x y z.(Alex(x) -> Roman(x)) & (Alex(y) -> -Zumpus(y))) & (Alex(z) -> Brimpus(z)))", "all x.(Alex(x) -> (Rubish(x) | -Zumpus(x) | (Brimpus(x) & -Piece(x))))))", "all x y z.((Alex(x) & Romp(x) & Alex(y) & Zumpus(z)) -> (Romp(x) & -Zombie(y) & Brimpus(z)))", "(all x.(Alex.(rompus) -> NoZumpus(x)) & all y.(Alex(y) -> Brimpus(y)))", "(all x.(Alex(x) -> Rompus(x)) & (Alex(x) -> -Zumpus(x)) & (Alex(x) -> Brimpus(x))))", "(all x.(Alex(x) -> Romans(x)) & (NoZumpus(x) & (Brimpus(x) | -Zumpus(x))))", "all x y z.((Alex(x) & Romesh(x) & Alex(y) & Zumpus(z)) -> (-Gimme(x) & Brimpus(y)))", "all x.((Alex(x) & Rompus(x)) -> -Zumpus(x)) & (Alex(x) -> Brimpus(x)))"]}
{"id": "prontoqa_train_420", "nl": "Every zumpus is a lempus.", "fol": "all x. (zumpus(x) -> lempus(x))", "prediction": ["all x.(Zumpus(x) -> Lempus(x))", "all x.(Zumpus(x) -> Lempus(x))", "all x.(Zumpus(x) -> Lempus(x))", "all x.(Zumpus(x) -> Lempus(x))", "all x.(Tompus(x) -> Lempus(x))", "all x.(Zumpus(x) -> Lempus(x))", "all x.(Zumpus(x) -> Lempus(x))", "all x.(Zimmer(x) -> Lempus(x))", "all x.(Zumpus(x) -> Lempus(x))", "all x.(Tompus(x) -> Lempus(x))", "all x.(Tomatus(x) -> Lempus(x))", "all x.(Tompus(x) -> Lempus(x))", "all x.(Zumpus(x) -> Lempus(x))", "all x.(Zimpus(x) -> Lempus(x))", "all x.(Tompus(x) -> Lempus(x))", "all x.(Tommahawk(x) -> Lempus(x))"]}
{"id": "prontoqa_train_421", "nl": "Alex is a numpus and Alex is a tumpus and Alex is not a lempus.", "fol": "(numpus(Alex) & tumpus(Alex) & -lempus(Alex))", "prediction": ["all x y.((Alex(x) & Numpus(x) & Tumpus(y)) -> (Tumpus(x) & -Lempus(x)))", "(all x.(Alex(x) -> Numpus(x)) & all y.(Alex(y) -> Tumpus(y))) & all z.(Alex(z) -> -Lempus(z))))", "all x.(Alex(x) -> (Numpus(x) | Tumpus(x) | -Lempus(x)))", "all x y z.((Alex(x) & Numpus(x) & Tumpus(y)) -> (Maternal(z) & Maternal(z) & Maternal(z)))", "exists x.(Amal(x) & Numpus(x) & Tumpus(x) & -Lempus(x))", "all x y.((Alex(x) & Numpus(x) & Tumpus(y)) -> -Lempus(x))", "all x.(Alex(x) -> (Numpus(x) & Tumpus(x) & -Lempus(x)))", "(all x.(Alex(x) -> Numpus(x)) & (Alex(x) -> Tumpus(x)) & -Alex(x)))", "(numpus(Alex) & Tumulus(Alex) & -Lempus(Alex))", "(all x.(Alex(x) -> Numpus(x)) & all y.(Alex(y) -> Tumpus(y)) & -Lempus(y)))", "all x y.((Alex(x) & Numpus(x) & Humpus(y)) -> -Lempus(x))", "all x.(Alex(x) -> (Numpus(x) & Tumpus(x) & -Lempus(x)))", "(all x.(Alex(x) -> Numpus(x)) & (Alex(x) -> Tumpus(x)) & -Alex(x)))", "all x y z.((Alex(x) & Numpus(y) & Tumpus(z)) -> (Numpus(x) | Tumpus(z)) & -Lempus(x)))", "all x y.((Alex(x) & Numpus(x) & Tumpus(y)) -> (Tumpus(x) & -Lempus(x)))", "(all x y z.((Alex(x) & Numpus(x)) -> Numpus(x)) & ((Alex(y) & Tumpus(y)) -> Totus(y)) & -Lempus(z)))"]}
{"id": "prontoqa_train_422", "nl": "Grimpuses are shumpuses.", "fol": "all x. (grimpus(x) -> shumpus(x))", "prediction": ["(RedShumpus(Rimpus) & Shumpus(Rimpus))", "all x.(Grimpus(x) -> Shumpuse(x))", "Alles x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpuse(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_423", "nl": "Stella is a sterpus, Stella is a brimpus, and Stella is not a shumpus.", "fol": "(sterpus(Stella) & brimpus(Stella) & -shumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Sterepus(x)) & (Stella(x) -> Brimpus(x)) & -Shumpus(x)))", "all x.((Stella(x) -> (Sterpus(x) | Brimpus(x) | -Shumpus(x)))", "(all x.(Stella(x) -> Sterpus(x)) & (Stella(x) -> Brimpus(x)) & -Shumpus(x)))", "(exists x.(Sterpus(x) & Steerpus(x)) & exists y.(Brimpus(y) & Brimpus(y)) & exists z.(Shumpus(z) & -Shumpus(z) & -Shumpus(z))))", "(all x.(Stella(x) -> Steroid(x)) & (Stella(x) -> Brimpus(x)) & -Shumpus(x)))", "(all x.(Storpus(x) | Blempus(x)) & -Shumpus(x))", "(all x.(Sterpus(x) | Brimpus(x)) & -Shumpus(x)))", "(all x.(Storpus(x) -> Sterpus(x)) & all y.(Brimpus(y) -> Brimpus(y)) & all z.(Shumpus(z) -> -Shumpus(z))))", "all x.(Alternate(x) -> (Sterpus(x) | Brimpus(x) | Spumpus(x)))", "(all x.(Stella(x) -> Sterpus(x)) & (Stella(x) -> Brimpus(x)) & -Shumpus(x)))", "(all x.(Storpus(x) -> Sterpus(x)) & (Brimpus(x) -> Brimpus(x)) & -Shumpus(x)))", "(all x.(Sterpus(x) -> Sterpus(x)) & (Brimpus(x) -> Brimpus(x)) & -Shumpus(x)))", "all x.(Stella(x) -> (Sterpus(x) & Brimpus(x) & -Shumpus(x)))", "(all x.(Sterpus(x) -> Sterpus(x)) & all y.(Brimpus(y) -> Brimpus(y)) & all z.(Shumpus(z) -> -Shumpus(z)))", "all x y z.((Stella(x) & Sterus(y) & Brimpus(z) & -Shumpus(x)) -> (Storpus(x) | Brimpus(z) & -Shumpus(x)))", "(all x.(Storpus(x) -> Sterpus(x)) & (Brumpus(x) -> Brimpus(x)) & (Storpus(x) -> -Shumpus(x)))"]}
{"id": "prontoqa_train_424", "nl": "Every dumpus is a lempus.", "fol": "all x. (dumpus(x) -> lempus(x))", "prediction": ["all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Limpus(x) -> Dumpus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dupus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))"]}
{"id": "prontoqa_train_425", "nl": "Alex is a tumpus, Alex is a vumpus, and Alex is not a lempus.", "fol": "(tumpus(Alex) & vumpus(Alex) & -lempus(Alex))", "prediction": ["all x y z.((Alex(x) & Tompus(y) & Vumpus(z) & -Lempus(x)) -> (Tumpus(x) & -Vumpus(x) & -Tumpus(x)))", "all x y z.((Alex(x) & Tumpus(y) & Vampire(z)) -> (Tumpus(x) | -Lempus(y)))", "(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> Vumpus(y)) & all z.(Alex(z) -> -Lempus(z))))", "(all x.(Alex(x) -> Tompus(x)) & (Alex(x) -> Violet(x)) & (Alex(x) -> -Lempus(x)))", "all x y z.((Alex(x) & Tumpus(y) & Vampus(z)) -> (Tumpus(x) & Vampus(y,z) & -Lempus(x)))", "all x y z.((Alex(x) & Umpus(y) & Vumpus(z)) -> (Tumpus(x) | Vumpus(z) | -Lempus(x)))", "all x y z.((Alex(x) & Tumpus(x) & Vumpus(y) & Lempus(z)) -> (Tumpus(x) & Vumpus(y) & -Lempus(z)))", "(all x.(Alex@Tumpus) -> Vampus(Alex)) & all y.(Alex@Limpus(y) -> -Tumpus(y)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> Vumpus(x)) & (Alex(x) -> -Lempus(x))))", "(all x.(Alexander(x) -> Tumpus(x)) & all y.(Alexander(y) -> Dumpus(y))) & -(Alexander(y) & Lempus(y)))", "all x y z.((Alex(x) & Tumulus(y) & Vampus(z)) -> (Tumpus(x) & Tumpus(y) & -Lempus(z)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> Voompus(x)) & (Alex(x) -> -Lempus(x))))", "all x.(Alex(x) -> (Tumpus(x) & Vumpus(x) & -Lempus(x)))", "all x y z.((Alex(x) & Tumpus(y) & Vumpus(z)) -> (Tumpus(x) | Nempus(z)))", "(all x.(Alex(x) -> Kumpus(x)) & all y.(Alex(y) -> Vampis(y))) & all z.(Alex(z) -> -Lempus(z)))", "all x.(Alex(x) -> (Tumpus(x) & Vsumpus(x) & -Lempus(x)))"]}
{"id": "prontoqa_train_426", "nl": "Every brimpus is a gorpus.", "fol": "all x. (brimpus(x) -> gorpus(x))", "prediction": ["all x.(Brumpus(x) -> Gorpus(x))", "all x.(Brimpus(x) -> Gorpus(x))", "all x.(Brumpus(x) -> Gorpus(x))", "all x.(Brimpus(x) -> Gorpus(x))", "all x.(Brimpus(x) -> Gorpus(x))", "all x.(Brumpus(x) -> Gorpus(x))", "all x.(Brumpus(x) -> Gorpus(x))", "all x.(Brompus(x) -> Gorpus(x))", "all x.(Brimpus(x) -> Gorpus(x))", "all x.(Purple(x) -> Gorpus(x))", "all x.(Brompus(x) -> Gorpus(x))", "all x.(Bimpus(x) -> Gorpus(x))", "all x.(Brumpus(x) -> Gorpus(x))", "all x.(Brumpus(x) -> Gorpus(x))", "all x.(Brumpus(x) -> Gorpus(x))", "all x.(Brumpus(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_427", "nl": "Stella is a lorpus, Stella is a rompus, and Stella is not a gorpus.", "fol": "(lorpus(Stella) & rompus(Stella) & -gorpus(Stella))", "prediction": ["all x y z.((Stella(x) & Lorpus(y) & Rompus(z)) -> (Lorpus(x) & Rompus(z) & -Gorpus(x)))", "(all x.(Stella(x) -> Lorpus(x)) & all y.(Stella(y) -> Rompus(y)) & all z.(Stella(z) -> -Gorpus(z))))", "all x.(Stella(x) -> (Lorpus(x) | Rompus(x) | -Gorpus(x)))", "(all x.(Stella(x) -> Loxus(x)) & (Stella(x) -> Rompus(x)) & (Stella(x) -> -Gorpus(x)))", "(all x.(Solva(x) -> Lorpus(x)) & all y.(Solva(y) -> Rompus(y)) & all z.(Solva(z) -> -Gorpus(z))))", "(all x y z.((Stella(x) & Lorpus(y)) -> (Lorpus(x) & Rompus(y))) & ((Stella(z) & Gorpus(z)) -> -GORPUS(z)))", "(all x y z.((Stella(x) & Lorpus(y) & Roman(z)) -> is(X,y)) & ((Stella(x) & Gorpus(z)) -> -Is(x,z))))", "all x y z.((Stella(x) & Lorpus(y) & Rompus(z)) -> (Lorpus(x) | Rompus(z) | -Gorpus(x)))", "all x y.((Lorpus(x) & Rompus(y)) -> (Lorpus(x) & Rompus(y) & -Gorpus(y)))", "(all x.(Blood(x) -> Lorpus(x)) & (Rompus(x) -> Gorpus(x)))", "all x.((Lorpus(x) | Rompus(x)) -> Farfetch(x))", "(all x.(Lorpus(x) -> Stella(x)) & all y.(Rompus(y) -> Stella(y))) & all z.(Gorpus(z) -> -Lorpus(z)))", "(all x.(Stella(x) -> Lopis(x)) & (Stella(x) -> Rompus(x)) & -Stella(x)))", "all x y z.((Stella(x) & Lorpus(y)) -> (Lorpus(x) & Romanpus(y) & -Gorpus(z)))", "all x y.((Stella(x) & Lorpus(x)) -> (Rompus(x) & -Gorpus(y)))", "all x y z.((Stella(x) & Lure(y) & Rompus(z)) -> (Lorpheus(x) | Rompus(x) | -Gorpus(x)))"]}
{"id": "prontoqa_train_428", "nl": "Each sterpus is a yumpus.", "fol": "all x. (sterpus(x) -> yumpus(x))", "prediction": ["all x.(Striceps(x) -> Yumpus(x))", "all x.(Steerpus(x) -> Yampus(x))", "all x.(Sterpus(x) -> Yumpus(x))", "all x.(Steerpus(x) -> Yampus(x))", "all x.(Sterepus(x) -> Yumpus(x))", "all x.(Starp(x) -> Yumpsum(x))", "all x.(Sterpus(x) -> Yumpius(x))", "all x.(Sterpus(x) -> Yumpa(x))", "all x.(Sterpus(x) -> Yumpsum(x))", "all x.(Sterpus(x) -> Yampus(x))", "all x.(Sterpus(x) -> Yumpe.", "all x.(Sterpus(x) -> Yumpus(x))", "all x.(Sterpus(x) -> Yampus(x))", "all x.(Steep(x) -> Yump.", "all x.(Sterpus(x) -> Yumpa(x))", "all x y.((Sterpus(x) & Yumpus(y)) -> Stereoscopic(x))"]}
{"id": "prontoqa_train_429", "nl": "Wren is a rompus, Wren is not a yumpus, and Wren is a dumpus.", "fol": "(rompus(Wren) & -yumpus(Wren) & dumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Rompus(x)) & (Dumpus(x) -> -Yumpus(x))) & (Dumpus(x) -> Dumpus(x)))", "(all x.(Wren(x) -> Rompus(x)) & (-yumpus(y)) | (-yumpus(y) & Dumpus(y))))", "(all x.((Wren(x) & Rompus(x)) -> -Yumpus(x)) & all y.((Wren(y) & Dumpus(y)) -> Dumpus(y)))", "all x y z.((Wren(x) & Rimpus(y) & Yumpus(z)) -> (Rompus(x) & -Yumpus(y) & Dumpus(z)))", "(all x.((Wren(x) & Rompus(x)) -> NotYumpus(x)) & all y.((Wren(y) & Dumpus(y)) -> Dumpus(y)))", "(all x.(Wren(x) -> Rottweiler(x)) & (-Yumpus(x) & (Dumpus(x))))", "all x y z.((Wren(x) & Yumba(y) & Wren(z)) -> (Rompus(x) & -Yumpus(y) & Dumpus(z)))", "all x y z.((Rompus(x) & Yumpus(y) & Wren(z)) -> (Rompus(x) & -Yumpus(y) & Dumpus(z)))", "all x y z.((Wren(x) & Yampus(y) & Dumpus(z)) -> (Rompus(x) | -Yumpus(y) | -Rompus(z)))", "all x y z.((Wren(x) & Rhopus(y) & Yumps(z)) -> (-Rompus(x) & -Yumpus(y) & Dumpus(z)))", "(all x.(Wren(x) -> Rompus(x)) & (Wren(x) -> -Yumpus(x)) & (Wren(x) -> Dumpus(x)))", "(all x y z.((Wren(x) & Rompus(y)) -> A(x,y)) & ((Wren(z) & -Yumpus(z)) -> A(z,x)) & ((Wren(w) & Dumpus(w)) -> A(w))))", "all x y z.((Wren(x) & Rommes(y) & -Yumpus(z) & Dumpus(w)) -> (Rumpus(x) & -Yumpus(x) & Dumpus(w)))", "(all x.(Rompus(x) -> Wren(x)) & all y.(Yumpus(y) -> Wren(y))) & all z.(Dumpus(z) -> Wren(z)))", "(all x y z.(Rompus(x) -> Wren(x)) & (-Yumpus(y) -> Wren(z))) & (Dumpsus(z) -> Wren(z)))", "(all x y z.((Wren(x) & Rompus(x) & Omicron(y)) -> Wren(z)) & ((Wren(y) & -Yumpus(y)) -> Dumpus(z)))"]}
{"id": "prontoqa_train_430", "nl": "Wren is not a sterpus.", "fol": "-sterpus(Wren)", "prediction": ["all x.(Wren(x) -> -Sterpus(x))", "(-Sterpus(Wren))", "(-Steerpus(Wren))", "all x.(Wren(x) -> -Sterpus(x))", "all x.(Wren(x) -> -Sterepus(x))", "all x.(Wren(x) -> -Sterpus(x))", "all x.(Wren(x) -> -Sterepus(x))", "all x.(Wren(x) -> -Sterpus(x))", "(-Sterpus(Wren)", "(-Steroliskus(Wren))", "all x.(Wren(x) -> -Sterpus(x))", "all x.(Wren(x) -> -Sterepus(x))", "all x.(Wren(x) -> -Sterepus(x))", "-Sterpus(Wren)", "all x.(Wren(x) -> -Sterepus(x))", "all x.(Wren(x) -> -Sterpus(x))"]}
{"id": "prontoqa_train_431", "nl": "Sam is a brimpus and Sam is an impus and Sam is not a zumpus.", "fol": "(brimpus(Sam) & impus(Sam) & -zumpus(Sam))", "prediction": ["(all x.((Same(x) & Brimpus(x)) -> Impossiblized(x)) & ((Same(x) & Zumpus(x)!) -> -Brimpus(x)))", "(all x.(Sam(x) -> Brimpus(x)) & (Sam(x) -> Imperator(x)) & (Sam(x) -> -Zumpus(x)))", "(all x.(Sam(x) -> Brimpus(x)) & (Sam(x) -> Issuel(x)) & (Sam(x) -> -Zumpus(x))))", "all x y.((Sam(x) & Brimpus(x) & Impossible(x)) -> -Zumpus(y))", "all x y z.((Sam(x) & Brimpus(x) & Impossible(y)) -> (Sam(x,z) & -Zumpus(z)))", "(all x.(Mammy(x) -> Brimpus(x)) & all y.(Mammy(y) -> Impactor(y))) & all z.(Mammy(z) -> -Zumpus(z))))", "exists x.(Sam(x) & Brimpus(x) & Imperator(x) & -Zumpus(x))", "(all x.(Sam(x) -> Brimpus(x)) & (Sam(x) -> Imperator(x)) & (Sam(x) -> Zumpus(x))))", "all x y z.((Sam(x) & Brimpus(x) & Impossible(y) & -Zumpus(z)) -> ((Sam(x) & Brimpus(x) & Impossible(y)) & -Sam(x)))", "(all x.(Sam(x) -> Brimpus(x)) & all y.(Sam(y) -> Issue(y))) & (Sam(y) -> -Zumpus(y)))", "all x y.((Sam(x) & Brimpus(x) & Imperator(y)) -> (IsBrimpus(x) & IsNobispus(y)))", "all x y.((Sam(x) & Brimpus(x) & D\u00e9jected(y)) -> (Brimpus(x) & Nullify(x)))", "(all x.(Sam(x) -> Brimpus(x)) & (Sam(x) -> Impossible(x))) & (Sam(x) -> -Zumpus(x)))", "(all x.(Sam(x) -> Brimpus(x)) & (Sam(x) -> Impossible(x))) & (Sam(x) -> -Zumpus(x)))", "all x y z.((Sam(x) & Brimpus(x) & Is(y) & Impossible(z)) -> (Limit(x) & -Zumpus(x)))", "(all x.((SamePart(x) & Brimpus(x)) -> Unspeakable(x)) & ((SamePart(x) & Impossible(x)) -> -SamePart(x)))"]}
{"id": "prontoqa_train_432", "nl": "Wren is not a dumpus, Wren is a yumpus, and Wren is a jompus.", "fol": "(-dumpus(Wren) & yumpus(Wren) & jompus(Wren))", "prediction": ["all x y z.((Wren(x) & Yumpus(y) & Jompus(z)) -> (-Dumpus(x) & -Yumpus(y) & -Dumpus(z)))", "(all x y z.(Wren(x) -> -Dumpus(x)) & ((Yumpus(y) & Jimpus(z))) -> -Dumpus(y)) & ((Yumpus(y) & -Jumpus(z)) -> Jompus(z)))", "(all x y z.(Wren(x) -> (-Dumpus(x) & Yampus(y) & Jompus(z))))", "all x y z.((Wren(x) & Yompus(y) & Jompus(z)) -> (-Dumus(x) & -Yumpus(y) & -Jompus(z)))", "all x y z.((Wren(x) & Yumps(y) & Glumpus(z)) -> (-Dumps(x) & -Yumpus(y) & -Jompus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Jompus(z)) -> (-Dumpus(x) & -Yumpus(y) & -Jumpus(z)))", "all x.((Wren(x) & -Dupus(x)) -> (Yumpus(x) | Jompus(x)))", "(all x.(Wren(x) -> -Dumpus(x)) & (Yumpus(x) | Jompus(x))))", "(all x.(Wren(x) -> -Dumpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Jompus(z))))", "(all x y.(Wren(x) -> -Dumpus(x)) & (Yumpus(y) | Jompus(y))))", "all x y z.((Wren(x) & Yumpus(y) & Yompus(z)) -> (-Dumps(x) & -Yumpus(y) & -Jimpus(z)))", "(all x y z.(Wren(x) -> (-Dumpus(x))) & ((Wren(y) & Yumpe(y)) & ((Wren(z) & Jompus(z))) -> (-Dumpus(y) & Yumpe(z))))", "(all x.(Wren(x) -> -Dumpus(x)) & all y.(Wren(y) -> Yampus(y)) & all z.(Wren(z) -> Jompus(z))))", "(all x.(Wren(x) -> -Dumpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Jompus(z))))", "all x y z.((Wren(x) & Yumpus(y) & Jompus(z)) -> (-Dumpus(x) & -Yumpus(y) & -Jimpus(z)))", "(all x.(Wren(x) -> -Dumpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Jompus(z))))"]}
{"id": "prontoqa_train_433", "nl": "Jompuses are sterpuses.", "fol": "all x. (jompus(x) -> sterpus(x))", "prediction": ["all x.(Jompuse(x) -> Sterpuse(x))", "all x.(Jompuse(x) -> Sterpuse(x))", "all x.(Jpompus(x) -> Sterpuse(x))", "all x.(Jimpus(x) -> Sterpuse(x))", "all x.(Jompuse(x) -> Sterpuse(x))", "all x.(Jompuse(x) -> Sterpuse(x))", "all x.(Jompuse(x) -> Sterpuse(x))", "all x.(Jompuse(x) -> Sterus(x))", "all x.(Jompuse(x) -> Sterpuse(x))", "all x.(Jompuse(x) -> sterpuse(x))", "all x.(Jompus(x) -> Sterpuse(x))", "all x.(Jompuse(x) -> Sterpuse(x))", "all x.(Jompus(x) -> Sterpuse(x))", "all x.(Jompus(x) -> Sterpuse(x))", "all x.(Jompuse(x) -> Sterpuse(x))", "(Sterpuse(jompuse) -> Sterpuse(jompuse))"]}
{"id": "prontoqa_train_434", "nl": "Fae is an impus and Fae is a gorpus and Fae is not a sterpus.", "fol": "(impus(Fae) & gorpus(Fae) & -sterpus(Fae))", "prediction": ["(all x.(Fae(x) -> Impos,x)) & (Fae(x) -> Gorpus(x)) & -Sterepus(x)))", "all x y.((Fae(x) & Fae(y)) -> (Impossible(x) & Gorpus(y) & -Steros (y)))", "all x y z.((Fae(x) & Fae(y) & Sterpus(z)) -> (Imposer(x) & Gorpus(y) & -Sterepus(z)))", "(all x.(Fae(x) -> Illegal(x)) & (Fae(x) -> Gorpus(x)) & (Fae(x) -> -Sterepus(x)))", "(all x.(Fae(x) -> (Impossible(x) & Gorpus(x))) & all y.(Fae(y) -> -Sterpus(y)))", "(all x.(Fae(x) -> Impedre(x)) & all y.(Fae(y) -> Gorpus(y)) & all z.(Fae(z) -> -Sterepus(z))))", "all x.(Fae(x) -> (Imposit(x) & Gorpus(x) & -Sterpus(x)))", "(all x.(Fae(x) -> Illegal(x)) & (Fae(x) -> Gorpus(x)) & -Sterpus(x)))", "(all x.(Fae(x) -> IsFixed(x)) & all y.(Fae(y) -> (Gorpus(y) & -Shterpus(y))))", "(all x.(Fae(x) -> IsFellow(x)) & all y.(Fae(y) -> DoesFellow(y))) & all z.(Fae(z) -> DoesFellow(z))) & (Fae(z) -> DoesFellow(z)))", "(all x.(Fae(x) -> IsImplicated(x)) & all y.(Fae(y) -> Gorpus(y)) & all z.(Fae(z) -> -Sterpus(z))))", "all x y z.((Fae(x) & Fae(y) & Sterpus(z)) -> (Impossible(x) & Gorpus(y) & -Sterepus(y)))", "(all x.(Fae(x) & Is(x)) & all y.(Fae(y) -> Gorpus(y)) & all z.(Fae(z) -> -Sterpus(z))))", "(all x.(Fae(x) -> IsFae(x)) & all y.(Fae(y) -> IsGorpus(y)) & all z.(Fae(z) -> -Sterpus(z)))", "(all x.(Fae(x) -> Impossible(x)) & (Fae(x) -> Gorpus(x)) & -Sterpus(x)))", "(all x y z.(Fae(x) -> Impossible(x)) & (Fae(y) -> Gorpus(y)) & -Fae(z) & Sterpus(z)))"]}
{"id": "prontoqa_train_435", "nl": "Each impus is a wumpus.", "fol": "all x. (impus(x) -> wumpus(x))", "prediction": ["all x.(Improvements(x) -> Wumpus(x))", "all x.(Impossible(x) -> Wumpus(x))", "all x.(Improvements(x) -> Wumpus(x))", "all x.(Impossible(x) -> Wampus(x))", "all x.(Improvia(x) -> Wumpus(x))", "all x.(Issue(x) -> Wumpus(x))", "all x.(Issue(x) -> Wumpus(x))", "all x.(Improvement(x) -> Wumpus(x))", "all x.(Imbiss(x) -> Wempus(x))", "all x.(Impact(x) -> Wumpus(x))", "all x.(Island(x) -> Wumpus(x))", "all x.(Improvse(x) -> Kumpi(x))", "all x.(Impossible(x) -> Wumpus(x))", "all x.(Island(x) -> Wumpus(x))", "all x.(Issue(x) -> Hurm(x))", "all x.(Issue(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_436", "nl": "Sally is a jompus, Sally is not a wumpus, and Sally is a shumpus.", "fol": "(jompus(Sally) & -wumpus(Sally) & shumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> -Wumpus(x)) & (Sally(x) -> Sompus(x)))", "(all x y.((Sally(x) & Jompus(x)) -> Wompus(x)) & ((Sally(y) & -Wumpus(y)) -> Humpus(y)))", "all x y.((Sally(x) & Jompus(x)) -> (-Wumpus(y) & Humpus(x)))", "(all x y z.((Sally(x) & Jompus(x)) -> Suggestion(y)) & (((Sally(z) & -Wumpus(z))) | (-Wumpus(z) & Shumpus(z)))))", "(all x.(Sally(x) -> Jompus(x)) & (-Wumpus(x) & Shumpus(x))))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> -Wumpus(x)) & (Sally(x) -> Humpus(x)))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> -Wumpus(y)) & all z.(Sally(z) -> Humpus(z))))", "all x y.((Sally(x) & Jompus(x)) -> (-Wumpus(y) & Scallops(x)))", "(all x.(Sally(x) -> Jompus(x)) & (-Wumpus(x) & Shumpus(x))))", "(all x.(Sally(x) -> Jompus(x)) & ((Sally(x) -> -Wumpus(x))) & ((Sally(x) -> Humpus(x))))", "all x y z.((Sally(x) & Jompus(y) & Wampus(z)) -> (Jompus(x) & -Wumpus(y) & Humpus(z)))", "(exists x.(Sally(x) & Jombus(x)) & exists y.(Wumpus(y) & -Wumpus(y)) | exists z.(Shumpus(z) & -Shuffle(z))))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> -Wumpus(x)) & (Sally(x) -> Shumpus(x)))", "all x y z.((Sally(x) & Jompus(y) & Wumpus(z)) -> (Jompus(x) & -Wumpus(y) & Humpus(z)))", "(all x.((Sally(x) & Jompus(x)) -> NoWumpus(x)) & all y.((Sally(y) & Humpus(y)) -> Snompus(y)))", "all x y z.((Sally(x) & Jompus(x) & -Wumpus(y) & Swumpus(z)) -> (Is(x,y) & Is(x,z)))"]}
{"id": "prontoqa_train_437", "nl": "Sally is not an impus.", "fol": "-impus(Sally)", "prediction": ["Sally -Immurupt(Sally)", "Sally n'est pas impus(Sally)", "Sally n'exists y.((Secret(y) & Is(y)))", "Sally -Impossible(Sally)", "Sally is not anImperium(Sally)", "Sally is not a impusor.", "(-Impossible(Sally))", "Sally -Isolation(Sally)", "-Is(Sally)", "Sally ne sont pas desispires(Sally)", "Sally ist keinImpossible(Sally)", "Sally -IsIsOlimpic(Sally))", "Sally n'est pas impus.", "Sally -Impossible(Sally)", "Sally s not a impus.", "Sally is not a impusor(Sally)"]}
{"id": "prontoqa_train_438", "nl": "Each gorpus is a numpus.", "fol": "all x. (gorpus(x) -> numpus(x))", "prediction": ["exists x.(Gorpus(x) & Numpus(x))", "all x.(Gorpus(x) -> Numpus(x))", "all x.(Gorpus(x) -> Numpus(x))", "all x.(Gorpus(x) -> Numpus(x))", "all x.(Gorpus(x) -> Numpus(x))", "all x.(Gorpus(x) -> Numpus(x))", "all x.(Gorpus(x) -> Numpus(x))", "all x.(Gorpus(x) -> Numpus(x))", "all x.(Gorpus(x) -> Numpus(x))", "all x.(Gorpus(x) -> Numpus(x))", "all x.(Gorpus(x) -> Numpus(x))", "all x.(Gorpus(x) -> Numpus(x))", "all x.(Gorpus(x) -> Numpus(x))", "all x.(Gorpus(x) -> Numpus(x))", "all x.(Gorpus(x) -> Number(x))", "all x.(Gorpus(x) -> Numpus(x))"]}
{"id": "prontoqa_train_439", "nl": "Sally is a vumpus, Sally is not a numpus, and Sally is a sterpus.", "fol": "(vumpus(Sally) & -numpus(Sally) & sterpus(Sally))", "prediction": ["(all x.(Sally(x) -> Vumpus(x)) & all y.((Sally(y) & -Numpus(y)) & all z.(Sterpus(z)) -> (Stal(z) & Sally(z))))", "all x y z.((Sally(x) & Vumpus(x) & Nompus(y) & Sterpus(z)) -> (Vumpus(x) & -Numpus(z) & Sterpus(x)))", "all x.(Avumpus(x) & -Numerus(x) & Sterotpus(x))", "(all x).(Sally(x) -> Vumpus(x)) & all y.(Sally(y) -> -numpus(y)) & all z.(Sterpus(z) -> Sushi(z))))", "(all x.(Sally(x) -> Vumpus(x)) & (-Number(x)) | (Sterpus(x) & Sally(x)))))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> -Numpus(x)) & (Sally(x) -> sterpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & ((Sally(x) & -Numpus(x))) -> Sterpus(x)))", "(all x.(Vumpus(x) -> Sally)) & (Nompus(x) -> Sally)) & (Sterepus(x) -> Sally)))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> -Numpus(x)) & (Sally(x) -> Sterpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & (-Sally(x) -> Numbus(x)) & (-Sally(x) -> Sterpus(x)))", "((SallyVumpus(s) & -numpus(s)) | (-numpus(s) & -sterpus(s))))", "all x y z.((Sally(x) & Nempus(y) & Sterpus(z)) -> (Vumpus(x) & -Numpus(y) & Sterpus(z)))", "(all x.(Sally(x) -> Vumpus(x)) & -Nompus(x) & Sterpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & all y.(Sally(y) -> -Numpus(y)) & all z.(Sterpus(z) -> (Sterpus(z)))))", "(all x.(Sally(x) -> Vumpus(x)) & (-Sally(x) -> Numpus(x)) & (-Sally(x) -> Sterpus(x)))", "all x y z.((Sally(x) & Vuze(y) & Sally(z)) -> (-Vuze(z) & Numpus(z) & Sterpus(z)))"]}
{"id": "prontoqa_train_440", "nl": "Shumpuses are zumpuses.", "fol": "all x. (shumpus(x) -> zumpus(x))", "prediction": ["-Tompuse(sh)", "all x.(Shampus(x) -> Zumpus(x))", "all x.(Sshumpuse(x) -> Zumpuse(x))", "all x.(Shumpus(x) -> Toypus(x))", "all x.(Shusp(x) -> Zumpuse(x))", "all x.(Shumpuse(x) -> Zumpuse(x))", "all x.(Shumpus(x) -> Zumpuse(x))", "all x.(Sushus(x) -> Zumpuse(x))", "all x.(Smashuse(x) -> Zumpuse(x))", "all x.(Shumpus(x) -> Zumpuse(x))", "all x.(Shuter(x) -> Zumpuse(x))", "all x.(Shupuse(x) -> Zumpuse(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpsue(x) -> Zumpuse(x))", "all x.(Shutus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_441", "nl": "Sam is a numpus and Sam is not a zumpus and Sam is a brimpus.", "fol": "(numpus(Sam) & -zumpus(Sam) & brimpus(Sam))", "prediction": ["all x y z.((Sam(x) & Numpus(y) & Zumpus(z)) -> (Numpus(x) & -Zumpus(y) & Brimpus(z)))", "(all x.(Sam(x) -> Numpus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Brimpus(x)))", "(all x y z.(Sam(x) -> Number(x)) & (Sam(y) -> -Zumpus(y)) & (Sam(z) -> Brimpus(z)))", "(all x y.((Sam(x) & Numpus(x)) -> Nox)) & ((Sam(y) & -Zumpus(y)) -> Brimpus(y)))", "(all x.(Sam(x) -> Numpus(x)) & ((Sam(x) & -Zumpus(x))) | (Sam(x) & Brimpus(x))))", "(all x.(Sam(x) -> Numpus(x)) & (Sam(x) -> -Zombius(x)) & (Sam(x) -> Brimpus(x)))", "exists x.(Sam(x) & (Nompus(x) | -Zumpus(x)) | Brimpus(x)))", "(all x y z.(Mambus(x) -> Numpus(x)) & (-Zumpus(y) & -Brimpus(z))))", "all x.((Sam(x) & Numpus(x)) -> -Zumpus(x)) & (Brimpus(x) -> Bump(x)))", "(all x.(Sam(x) -> Numpus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Brimpus(x)))", "(all x.(Sam(x) -> Numpus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Brimpus(x)))", "(all x.(Sam(x) -> Numpus(x)) & ((Sam(y) & -Zumpus(y))) -> Brimpus(y)))", "all x y.((Sam(x) & Numpus(x) & Sam(y)) -> (-Zumpus(y) & Brimpus(y)))", "(all x y z.((Sam(x) & Numpus(y)) -> (Has(x,y) & -HasTompus(z))) & ((Sam(x) & Brimpus(x)) -> (Is(x,z) & Is(x,z)))))", "all x y z.((Sam(x) & Numpus(y) & Zumpus(z)) -> ((Numpus(x) | -Zumpus(x)) & Brimpus(y))))", "all x y z.((Sam(x) & Numpus(x) & Zumpus(y) & Brimpus(z)) -> (Abstract(x,y) & Affect(x,z)))"]}
{"id": "prontoqa_train_442", "nl": "Alex is not an impus and Alex is a rompus and Alex is a zumpus.", "fol": "(-impus(Alex) & rompus(Alex) & zumpus(Alex))", "prediction": ["(all x.(Alex(x) -> -Impossible(x)) & all y.((Alex(y) & Rompus(y)) -> Zumpus(y)))", "all x y z.((Alex(x) & Rumpus(y) & Zumpus(z)) -> (-IsImposer(x) & IsRompus(y) & IsTompus(z)))", "all x.(Alex(x) -> (-Is(x) & Asimov(x) & Asimov(x)))", "(all x.(Alex(x) -> -Impossible(x)) & all y.(Alex(y) -> Rompus(y)) & all z.(Alex(z) -> Zumpus(z))))", "(all x.(Alex(x) -> -Issue(x)) & ((Alex(x) & Rompus(x)) | (Alex(x) & Zumpus(x)))))", "(all x.(Alex(x) -> -Imposible(x)) & (Rompus(x) & Zumpus(x)))", "all x y z.((Alex(x) & IsNotExposer(x) & Lopus(y) & Furpus(z)) -> (RefusedTompus(x) & HasOf(x,y)))", "(all x y.((Alex(x) & IsNotImpossible(x)) -> Rompus(x)) & ((Alex(y) & Zumpus(y)) -> -Impossible(y)))", "(all x.(Alex(x) -> -Issue(x)) & all y.(Alex(y) -> R\u00f6mpus(y)) & all z.(Alex(z) -> Zumpus(z))))", "(all x.(Alex(x) -> -Impos(x)) & all y.(Rompus(y) & All z.(Tommu))) -> -Impossible(x)))", "all x y z.((Alex(x) & -Is(x) & Rompus(y) & Zumpus(z)) -> (-Is(x,y) & -Is(y,z))))", "(all x.(Alex(x) & -Impos(x)) & ((Alex(x) & Rompus(x)) | (Alex(x) & Zumpus(x)))))", "(all x.(Alex(x) -> -Impozitor(x)) & all y.(Alex(y) -> Rompus(y)) & all z.(Alex(z) -> Zumpus(z))))", "all x y z.((Alex(x) & -Imperfect(x) & -Imperfect(x) & Tompus(y) & Zumpus(z)) -> (Imperfect(x) & Imperfect(y) & Imperfect(x)))", "(all x.(Alex(x) -> -Impossible(x)) & all y.(Rompus(y) & Tosso(y))))", "(all x.(Alex(x) -> -Impres(x)) | (Rompus(x) & Zumpus(x))))"]}
{"id": "prontoqa_train_443", "nl": "Every yumpus is a lorpus.", "fol": "all x. (yumpus(x) -> lorpus(x))", "prediction": ["all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Lord(x))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Lordpus(x))", "all x.(Yumpus(x) -> Lorde(x))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_444", "nl": "Fae is a vumpus and Fae is not a lorpus and Fae is a wumpus.", "fol": "(vumpus(Fae) & -lorpus(Fae) & wumpus(Fae))", "prediction": ["all x y z.((Fae(x) & Vumpus(y) & -Lorpus(z) & Wumpus(x)) -> (Vumpus(x) & -Lorpus(y) & Wumpus(z)))", "all x y.((Fae(x) & Fae(y)) -> (Vampire(x) & Lopus(y) & Wumpus(y)))", "all x y z.((Fae(x) & Lumpus(y) & Horde(z)) -> (Vumpus(x) & -Lorpus(y) & Wumpus(z)))", "(all x.(Fae(x) -> Vumpus(x)) & (-Lorpus(x)) | (-Fae(x) & Wumpus(x))))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) | -Lorpus(x))) & (Fae(x) -> Wumpus(x)))", "all x y z.((Fae(x) & Lumpus(y) & Flour(z)) -> (Voompus(x) & -Lorpus(x) & Wumpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Lorpus(x)) & (Fae(x) -> Wumpus(x)))", "all x y z.((Fae(x) & Vumpus(x) & Fae(y) & Wumpus(z)) -> (-Lorpus(y) & -Vumpus(y) & Wumpus(z)))", "exists x y z.(Fae(x) & Mummy(y) & Vompus(z) & -Lorpus(w) & Mummy(f) & -Lorpus(w) & Mummy(y) & Mummy(y) & Mummy(z) & Mummy(w))", "(all x y.((Fae(x) & Vampire(x)) -> (Vampire(x) | -Lorpus(x)) & (Wumpus(y))))", "(Vimpus(Fae) & -Lorpus(Fae) & Wumpus(Fae))", "(Vumpus(fae) & -Lorpus(fae) & Wumpus(fae))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Lorpus(x)) & (Fae(x) -> Wumpus(x))))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> -Lorpus(y))) & all z.(Wempus(z) -> Wumpus(z))))", "all x y z.((Fae(x) & Vumpus(x) & Fae(y) & Lorpus(z)) -> (-Lorpus(y) & Wumpus(z)))", "(all x.(Fae(x) -> Vampus(x)) & (-Vimpus(x) | -Lorpus(x) | Wumpus(x))))"]}
{"id": "prontoqa_train_445", "nl": "Lempuses are vumpuses.", "fol": "all x. (lempus(x) -> vumpus(x))", "prediction": ["all x.(Lempuse(x) -> Vulpuse(x))", "all x.(Lempuse(x) -> Vampuse(x))", "all x.(Lampuse(x) -> Vampuse(x))", "all x.(Lempuse(x) -> Vampuse(x))", "all x.(Lampuse(x) -> Vampuse(x))", "all x.(Lempuse(x) -> Vumpuse(x))", "all x.(Lempuse(x) -> Vumpuse(x))", "all x.(Lempuse(x) -> Vampuse(x))", "all x.((Lampuse(x) & Vampuse(x)) -> Unique(x))", "all x.(Lemme(x) -> Vampuse(x))", "all x.(Lemme(x) -> Vampuse(x))", "all x.(Lempuse(x) -> Vampuse(x))", "all x.(Lempuse(x) -> Vampuse(x))", "all x.(Lemmes(x) -> Vampuse(x))", "all x.(Lempuse(x) -> Vampuse(x))", "all x.(Lempuse(x) -> Vampuse(x))"]}
{"id": "prontoqa_train_446", "nl": "Alex is not a vumpus and Alex is a grimpus and Alex is a jompus.", "fol": "(-vumpus(Alex) & grimpus(Alex) & jompus(Alex))", "prediction": ["(all x.(Alex(x) -> -Vumpus(x)) & all y.(Alex(y) -> Grimpus(y))) & all z.(Alex(z) -> Yompus(z))))", "exists x y z.(Vumpus(x) & Grimpus(y) & Mothpus(z))", "is a dual position (vumpus(Alex) & grimpus(Alex) & jompus(Alex))", "all x.((Alex(x) & -Vumpus(x)) & (Grimpus(x) | Jompus(x))) -> -Vumpus(x))", "(All x.(Alex(x) & -Vumpus(x)) & (As(x) | As(x))) & (Jimpus(x) | As(x))))", "(all x.(Alex(x) -> -Vumpus(x)) & all y.(Alex(y) -> Grimpus(y))) & all z.(Alex(z) -> Jompus(z)))", "(Vumpus,Alex) & Grimpus,Alex,Jimpus))", "all x y.((Alex(x) & Netavs(y)) -> (-Vumpus(x) & Grimpus(y) & Jompus(x)))", "(all x.(Alex(x) -> -Vimpus(x)) & all y.(Scrappus(y) -> Glosspus(y))) & all z.(Joompus(z) -> Lumpus(z)))", "(all x.(Alex(x) -> -Vumpus(x)) & exists y.(Scrap(y) & Comeon(z)) & exists w.(Jompus(w) & Comeon(w))))", "(all x.(AlexAlex(x) -> -Vumpus(x)) & (All y.(AlexAlex(y) & Grimpus(y))) & ((AlexAlex(y) & Jompus(y))) -> -Umpus(y)))", "(all x.(Alex(x) -> -Vumpus(x)) & all y.(Alex(y) -> Grimpus(y))) & all z.(Alex(z) -> Joompus(z))))", "all x.((Alex(x) & -Vumpus(x)) -> Grimpus(x)) & (Alex(x) -> Jompus(x)))", "all x y z.((Alex(x) & Observation(y) & Observation(z)) -> (-Vumpus(x) | Grumpus(y) | Jompus(z)))", "(all x.(Alex(x) -> -Vumpus(x)) & all y.(Redneck(y) -> Grimpus(y))) & all z.(Jumpus(z) -> Jompus(z)))", "all x y.((Alex(x) & -Vimpus(x)) -> (Tallins(x) & Grimpus(x) & Jompus(y)))"]}
{"id": "prontoqa_train_447", "nl": "Jompuses are dumpuses.", "fol": "all x. (jompus(x) -> dumpus(x))", "prediction": ["all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x y.((Jompuse(x) & Dumpuse(y)) -> Has(x,y))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jombuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))"]}
{"id": "prontoqa_train_448", "nl": "Max is a vumpus and Max is a brimpus and Max is not a dumpus.", "fol": "(vumpus(Max) & brimpus(Max) & -dumpus(Max))", "prediction": ["all x y z.(Jumpus(x) & Kumpus(y) & Brimpus(z) & Dumpus(z)) -> (Pumpus(x) & -Cucumpus(x)))", "((Max(Max) & Vampus(Max)) | (Max(Max) & Brimpus(Max))) | (Max(Max) & -Dumpus(Max))))", "exists x y.(Minim(x) & Vumpus(x) & Brimpus(y) & -Dumpus(y))", "all x.(Max(x) -> (Vumpus(x) | Brimpus(x) | -Dumpus(x)))", "(all x.(Max(x) -> Vumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> -Dumpus(z))))", "(all x.(Max(x) -> Vampus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> -Dumpus(x)))", "(all x y.(Max(x) -> Voompus(x)) & (Max(y) -> Brimpus(y)) & (Max(y) -> -Dumpus(y)))", "all x.(Max(x) -> (Vimpus(x) & Buckingham(x) & -Dumpus(x)))", "all x y z.((Max(x) & Vux(y) & Max(z)) -> (Vuxedo(x) & Brimpus(z) & -Dumpus(x)))", "(all x.(Max(x) -> Voompus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> -Dumpus(x)))", "all x.(Max(x) -> (Vumpus(x) & Brimpus(x) & -Dumpus(x)))", "all x.(Max(x) -> (Vumpus(x) & Brimpus(x) & -Dumpus(x)))", "(all x.(Max(x) -> Vumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> -Dumpus(x)))", "(all x.(Max(x) -> Vumpus(x)) & (Max(x) -> Brimpus(x)) & -Dumps(x)))", "exists x.(Max(x) & (Vimpus(x) | Brimpus(x)) & -Dumpus(x))", "(all x.(Max(x) -> Vuxus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> -Dumpus(x)))"]}
{"id": "prontoqa_train_449", "nl": "Max is not a jompus.", "fol": "-jompus(Max)", "prediction": ["Max is notJompus(Max)", "(-Jompus(Max))", "all x.(Max(x) -> -Jompus(x))", "All x.(Max(x) -> -Jompus(x))", "All x.(MMax(x) -> -Jomess(x))", "All x.(Max(x) -> -Jompus(x))", "-Jompus(Max)", "-Jompus(Max)", "(-jompus(Max))", "-Jumpus(Max)", "(-Jompus(Max))", "is a jompus.", "(-Jumpus(Max))", "(-Jompus(Max))", "all x.(Max(x) -> -Jompus(x))", "(-Jimpus(Max))"]}
{"id": "prontoqa_train_450", "nl": "Each lempus is a brimpus.", "fol": "all x. (lempus(x) -> brimpus(x))", "prediction": ["all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) & Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Limpus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Spoia(x) -> Brimpus(x))", "all x.(Limpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_451", "nl": "Stella is not a brimpus, Stella is an impus, and Stella is a shumpus.", "fol": "(-brimpus(Stella) & impus(Stella) & shumpus(Stella))", "prediction": ["all x y z.((Stella(x) & Brimpus(y) & Illusion(z)) -> (-Brimpus(x) & Illusion(x) & Simpus(y)))", "-(Starta(stella) & -Brumpus(stella)) & (Impossible(stella) & Humpus(stella)))", "(all x y z.((Stella(x) & Brimpus(y)) -> -(Brompus(y) | Imperator(y))) & ((Stella(z) | Humpus(z))) -> (Shumpus(z))))", "(all x.(Stella(x) -> -Brumpus(x)) & all y.(Stella(y) -> Issues(y))) & all z.(Stella(z) -> Humpus(z)))", "(all x.(Brigade(x) -> -Brimpus(x)) | (Imperfect(x) -> Scrimpus(x))))", "(all x.(Stella(x) -> -Brimpus(x)) & all y.(Forman(y) -> Impossible(y)) & all z.(Shumpus(z) -> (Stella(y) & -Brimpus(y))))", "all x y z.((Stella(x) & Brimpus(y) & Imperator(z)) -> (-Brampus(x) & Issue(x) & Humpus(y)))", "all x y z.((Stella(x) & Brimpus(y) & Imperator(z)) -> (-Brumpus(x) & Issuela(x) & Shumpus(x)))", "all x y z.((Stella(x) & Stella(y) & Brumpus(z)) -> (-Brimpus(x) & Issuel(y) & Humpus(z)))", "all x y z.((Stella(x) & Brimpus(y) & Imperator(z)) -> (-Brimpus(x) & -Impossible(x) & Humpus(x)))", "(all x.(Stella(x) -> -Brimpus(x)) & (Stella(x) -> Issue(x)) & (Stella(x) -> Shump(x)))", "(all x.(Stella(x) -> -Brimpus(x)) & (Stella(x) -> Issue(x)) & (Stella(x) -> Shumpus(x)))", "(all x.(Stella(x) -> -Brimpus(x)) & all y.(Stella(y) -> Improvy(y))) & all z.(Stella(z) -> Shumpus(z))))", "all x y z.((Stella(x) & Stella(y) & Embryo(z)) -> (-Brimpus(x) & Impossible(y) & Shumpus(z)))", "(all x.(Stella(x) -> -Brumpus(x)) & (Stella(x) -> Issue(x)) & (Stella(x) -> Shumpus(x)))", "all x y z.((Stella(x) & Brimpus(y) & Is(z)) -> (-Brimpus(x) & Is(x,y) & Is(x,z) & Is(x,z)))"]}
{"id": "prontoqa_train_452", "nl": "Stella is not a lempus.", "fol": "-lempus(Stella)", "prediction": ["(-Lempus(Stella))", "Stella is -Lempus(Stella)", "all x.(Stella(x) -> -Lempus(x))", "-Lempus(Stella)", "Stella is not a lempus.", "Stella -Lempus(s)", "Stella is not a Lempus.", "Stella is not a lempus.", "Stella is not Lempus(Stella)", "Stella is not Lempus(Stella)", "Stella is not a lempus.", "Stella is not a lempus.", "Stella is not lempus.", "exists x.(Stella(x) & -Lempus(x))", "Stella -LimesPuck(Stella))", "Stella is -Lempus(Stella)"]}
{"id": "prontoqa_train_453", "nl": "Jompuses are shumpuses.", "fol": "all x. (jompus(x) -> shumpus(x))", "prediction": ["all x.(Jumpus(x) -> Shumpus(x))", "all x.(Jompuse(x) -> Shumpuse(x))", "all x.(Jumpus(x) -> Shumpus(x))", "all x.(Jompuse(x) -> Shumpuse(x))", "all x.(Jimpus(x) -> Shumpus(x))", "all x.(Jompuse(x) -> Humpus(x))", "all x.(Jompuse(x) -> Shumpus(x))", "all x.(Jompuse(x) -> Shumpus(x))", "all x.(Jompuse(x) -> Humpus(x))", "all x.(Jompuse(x) -> Shumpus(x))", "all x.(Jompuse(x) -> Rumpus(x))", "all x.(Jompuse(x) -> Shumpuse(x))", "all x.(Jompuse(x) -> Shumpus(x))", "all x.(Jompuse(x) -> Shumpuse(x))", "all x.(Jompuse(x) -> Shumpus(x))", "all x.(Jompuse(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_454", "nl": "Sally is a dumpus, Sally is not a shumpus, and Sally is a gorpus.", "fol": "(dumpus(Sally) & -shumpus(Sally) & gorpus(Sally))", "prediction": ["(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Shumpus(x)) & (Sally(x) -> Gorpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & (-Shumpus(x) & -Gorpus(x))))", "(all x.(Sally(x) -> Dumpus(x)) & (-Shumpus(x) & Gorpus(x)))", "all x y.((Sally(x) & Dumpus(x) & -Shumpus(y)) -> Gorpus(x))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Shumpus(x)) & (Sally(x) -> Gorpus(x))))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Shumpus(x)) & (Sally(x) -> Gorpus(x)))", "all x y z.((Sally(x) & Dumpus(x) & Sally(y) & Gorpus(z)) -> (-Shumpus(y) & NoShumpus(y) & Gorpus(z)))", "(all x.(Sally(x) -> Dumpus(x)) & (-Shumpus(x) & Gorpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Shumpus(x)) & (Sally(x) -> Gorpus(x)))", "(all x.(Dumps(x) -> Dumpus(x)) & (-Shumpus(x) -> Gorpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & (Dumps(x) -> -Shumpus(x)) & (Gorpus(x) -> Gorpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & -(Shumpus(x) & Gorpus(x))))", "(all x.(Sally(x) -> Shelved(x)) & (-Shumpus(x) & Gorpus(x)))", "(all x y z.(Sally(x) -> (Dumpus(x) | -Shumpus(x))) & ((Sally(y) & Gorpus(z))) -> Gorpus(y)))", "all x y z.((Sally(x) & Dumpus(x) & Sally(y) & Gorpus(z)) -> (-Shumpus(y) | Gorpus(z))))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Shumpus(x)) & (Sally(x) -> Gorpus(x)))"]}
{"id": "prontoqa_train_455", "nl": "Rompuses are tumpuses.", "fol": "all x. (rompus(x) -> tumpus(x))", "prediction": ["all x.(Rompus(x) -> Tumpus(x))", "all x.(Rompus(x) -> Tumpus(x))", "all x.(Rompus(x) -> Tumpus(x))", "all x y.((Rompus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Rompus(x) -> Tumpus(x))", "all x.( Rompus(x) -> Tumpus(x))", "all x.(Rompes(x) -> Tumulus(x))", "all x.(Rompus(x) -> Tumpus(x))", "all x.(Rompe(x) -> Tumor(x))", "all x.(Rompus(x) -> Tumpus(x))", "all x.(Rompus(x) -> Tumulus(x))", "all x.(Rompus(x) -> Tumuse(x))", "all x.(Rompus(x) -> Tumulus(x))", "all x.(Rompus(x) -> Tumpus(x))", "all x.(Rompus(x) -> Tumus(x))", "all x.(Ropus(x) -> Tumor(x))"]}
{"id": "prontoqa_train_456", "nl": "Sally is a yumpus and Sally is not a tumpus and Sally is a wumpus.", "fol": "(yumpus(Sally) & -tumpus(Sally) & wumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Yumpus(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Wumpus(x)))", "(all x.(Yumpus(x) -> (Sally) | -Tumpus(x))) & all y.(Wumpus(y)) -> (Sally)))", "(all x y z.((Sally(x) & Yampus(y)) -> Yuk(x,y)) & ((Sally(z) & -Tumpus(z)) -> Wumpus(x)))", "all x y.((Sally(x) & Yumpus(x)) -> (Yumpus(x) & -Tumpus(y) & Wumpus(x)))", "(all x y.(Yumpus(x) -> Sally(x)) & (Tumpus(y) | Wheat(y))))", "(yumpus(Sally) | (-tumpus(Sally) & -wumpus(Sally))))", "all x y z.((Sally,y),z) & Yumpus(y) & -Tumpus(z)) -> (y,z) | (-Y,z) & Wampus(z)) & H.(Wumpus(z) & H.(IsTumpus(y) & DoesTumpus(z)))))", "(all x.(Sally(x) -> Yampus(x)) & (-Tumpus(x) & -Wumpus(x)))", "(all x.(Sally(x) -> Yumpa(x)) & (Sally(x) -> -Tumpus(x) & (Sally(x) -> Wumpus(x))))", "(all x.(Sally(x) -> Yumba(x)) & (-Tumpus(x) & \"Wumpus(x))))", "(yumpus(y) & -tumpus(y) & -wumpus(y))", "(yupply(Sally) & Yups (yumpus)) & -Tumpus(y) & -Wumpus(y))", "(ymmmm & Sally isaYumpus(z) & -Tumpus(z) & Hussum(z))", "(all x.(Sally(x) -> Yumpa(x)) & (NonTumpus(x) & Wumpus(x)))", "(all x.(Sally(x) -> Yumba(x)) & (-Tumpus(x) & Wumpus(x)))", "(All x y.(Yumpus(x) & -Tumpus(y)) & (Wumpus(z) & -Yumpus(z)))"]}
{"id": "prontoqa_train_457", "nl": "Sally is not a rompus.", "fol": "-rompus(Sally)", "prediction": ["Sally (norompus(Sally))", "Sally n'est pas rompus.", "Sally ist nicht rompus.", "Sally n'est pas rompus.", "Sally neema pas cisidiosynchrome.", "Sally is not a Rompus.", "(-Rompus(Sally))", "Sally is -Rompus(Sally)", "all x.(Sally(x) -> -Rompus(x))", "Sally n'est pas rompus.", "Salie is not a Rompus(Sally)", "(-Rompus(Sally)).", "Sally is not a rompus.", "exists x.(Sally(x) & -Rompus(x))", "Sally is not a rompus.", "Sally ist keinerompus(Sally)"]}
{"id": "prontoqa_train_458", "nl": "Jompuses are yumpuses.", "fol": "all x. (jompus(x) -> yumpus(x))", "prediction": ["all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompuse(x) -> Yampus(x))", "all x.(Jompuse(x) -> Yumpus(x))", "all x.(Jompuse(x) -> Yumpus(x))", "all x.(Jombuse(x) -> Yumpuse(x))", "all x.(Jompuse(x) -> Yampus(x))", "all x.(Jompuse(x) -> Yumpus(x))", "all x.(Jompuse(x) -> Yampus(x))", "all x.(Jompuse(x) -> Yumpus(x))", "all x.(Jompuse(x) -> Yumpus(x))", "all x.(Jompuse(x) -> Yumphuse(x))", "all x.(Jumpus(x) -> IsYumpusElephant(x))", "all x.(Jompuse(x) -> Yumpus(x))", "all x.(Jumpus(x) -> (Yumpus(x) & Yup(x)))", "all x.(Jompuse(x) -> Yumpus(x))", "all x.(Jompuse(x) -> Yampus(x))"]}
{"id": "prontoqa_train_459", "nl": "Wren is a brimpus and Wren is a numpus and Wren is not a yumpus.", "fol": "(brimpus(Wren) & numpus(Wren) & -yumpus(Wren))", "prediction": ["all x y z.((Wren(x) & Burmpus(y) & Number(z)) -> ((Brimpus(x) | Numpus(z) | Yumpus(z))))", "all x y z.((Wren(x) & Brimpus(x) & Wren(y) & Number(y) & -Yumpus(z)) -> (Brampus(x) & Numpus(y)))", "(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> Numpus(x)) & (Wren(x) -> -Yumpus(x)))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wren(y) -> Numpus(y)) & all z.(Wren(z) -> Yumpus(z)))", "(all x.(Wren(x) -> Brimpus(x)) & (-Wren(x) -> Numpus(x)))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wren(y) -> Numpus(y)) & all z.(Wren(z) -> Yumpus(z))))", "(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> Numpus(x)) & ((Wren(x) -> Yumpus(x))))", "(all x y z.((Racer(x) & Brimpus(x)) -> ((Wren(y) & Numpus(y)) & -Yumpus(z))))", "(all x y z.(Wren(x) & Brimpus(x) & Numpus(y)) -> (Brimpus(x) & Numpus(y) & -Yumpus(z)))", "all x y.((Wren(x) & Brimpus(x) & Nox(y)) -> (Skate(x) & Kettle(y) & -Yumpus(x)))", "all x y.((Wren(x) & Maple(x)) -> (Brampus(x) | Numpus(x) | Nompus(x)))", "(all x.(Wren(x) -> Brimpus(x)) | (Wren(x) -> Numpus(x))) & (Wren(x) -> -Yumpus(x)))", "((Brompus(w) & Numpus(w)) | (Yumpus(w) & -Yumpus(w))))", "(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> Numpus(x)) & -Yumpus(x)))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wren(y) -> Number(y))) & all z.(Wren(z) -> -Yumpus(z)))", "all x y z.((Wren(x) & Brempus(x) & Numpus(y) & -Yumpus(z)) -> (Brimpus(x) & Numpus(y) & -Yumpus(z)))"]}
{"id": "prontoqa_train_460", "nl": "Wren is a numpus and Wren is a tumpus and Wren is not a vumpus.", "fol": "(numpus(Wren) & tumpus(Wren) & -vumpus(Wren))", "prediction": ["all x y z.((Wren(x) & Numpus(x) & Tumpus(y) & Voompus(z)) -> (Numpus(x) & Tumpus(y) & -Vumpus(z)))", "(all x y.(Wren(x) -> Numpus(x)) & (Wren(y) -> Tumpus(y)) & (Wren(x) -> -Vumpus(x)))", "all x y.((Wren(x) & Numpus(x)) & (Tumpus(y) | -Vumpus(y))) -> Numpus(x) & Tumpus(y)))", "(all x y z.(Wren(x) -> Numpus(x)) & (Wren(y) -> Tumpus(y) & (Wren(z) -> -Vumpus(z))))", "all x y z.((Wren(x) & Numpus(x) & Pumpus(y) & Vampire(z)) -> (Tumpus(x) & -Virpus(x)))", "all x y z.((Wren(x) & Number(x) & Wren(y) & Tumpus(z) & -Vumpus(z)) -> (Numerous(x) & Tumpus(y) & -Vumpus(z)))", "all x y z.((Wren(x) & Numpus(x) & Tumpus(y) & -Vimpus(z)) -> (Nompus(x) & Tumpus(y) & -Vumpus(z)))", "exists x.(Wren(x) & (Number(x) | Tumpus(x) | -Vumpus(x)))", "(all x y z.(Wren(x) -> Numpus(x)) & (Wren(y) -> Tumpus(y)) & (Wren(z) -> -Vumpus(z)))", "(all x.(Wren(x) -> Numpus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> Voluptus(z))))", "(all x.(Wren(x) -> Numpus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Vumpus(x))))", "all x y z.((Wren(x) & Numpus(x) & Wren(y) & Tumpus(y)) -> (-Vumpus(z) & Numpus(z)))", "(all x.(Wren(x) -> Numpus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Vumpus(x)))", "(all x.(Wren(x) -> Numpus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Vumpus(x)))", "all x y z.((Wren(x) & Numpus(x) & Tumpus(y) & -Vulpis(z)) -> (Numpus(x) & Tumpus(y) & -Umpus(z)))", "(all x.(Wren(x) -> Numpus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Vumpus(x)))"]}
{"id": "prontoqa_train_461", "nl": "Every impus is a vumpus.", "fol": "all x. (impus(x) -> vumpus(x))", "prediction": ["all x.(Implementation(x) -> Vumpus(x))", "all x.(Ilises(x) -> Vumpus(x))", "all x.(Is(x\" & Imperium(x) & Vimpus(x))", "all x.(Improve(x) -> V\u00e9mis(x))", "all x.(Implement(x) -> Vumpus(x))", "all x.(Implement(x) -> Voompus(x))", "all x.(IsVimpus(x) -> Imperium(x))", "all x.(Impact(x) -> Vombus(x))", "all x.(IsVumpus(x) -> Imperium(x))", "all x.(Impossible(x) & LocatedIn(x,y))", "all x.(Imp\u00e9rial(x) -> Vempus(x))", "all x.(Improve(x) -> Vumpus(x))", "all x.(IsVoompus(x) -> Imperium(x))", "all x.(Impossible(x) -> Vamppus(x))", "all x.(IsVumpus(x) -> Imperium(x))", "(all x.(Impediment(x) -> Vumpus(x))"]}
{"id": "prontoqa_train_462", "nl": "Polly is not a vumpus and Polly is a rompus and Polly is a brimpus.", "fol": "(-vumpus(Polly) & rompus(Polly) & brimpus(Polly))", "prediction": ["(all x.(Bumpus(x) & -Vumpus(x)) & all y.(Bumpus(y) -> InMicrosoft(y,x))) & (Rompus(y,x) & Brimpus(y,x)))", "(exists x.(Polly(x) & -Vumpus(x)) & exists y.(Rompus(y) & Polly(y))) & exists z.(Brimpus(z) & -Pumpus(z))))", "all x.((Polly(x) & -Vumpus(x)) -> Rompus(x)) & (Polly(x) -> Brimpus(x)))", "all x y.((Polly(x) & (-Vimpus(x) | Polly(y))) -> (Rompus(y) & Brimpus(y)))", "all x y z.((Polly(x) & -Vumpus(x) & Rompus(y) & Brimpus(z)) -> (-Vumpus(x) & -Rompus(y) & -Brimpus(z)))", "(all x y.((Polly(x) & -Vumpus(x)) -> rompus(y)) & ((Polly(x) & -Vumpus(z)) -> Brimpus(z)))", "all x y.((Polly(x) & Volumus(y)) -> (-Vumpus(x) & Osmous(x) & Osmous(y)))", "(all x y z.((Polly(x) & Vumpus(y)) -> -Vumpus(x)) & ((Poly(z) & Rompus(z))) -> Brimpus(z)))", "(all x.((Polly(x) & -Vumpus(x)) -> Rompus(x)) & all y.((Polly(y) & Brimpus(y)) -> BRUMPOST(y)))", "(all x.(Poly(x) -> -Vumpus(x)) & all y.(Poly(y) -> Rompus(y)) & all z.(Polly(z) -> Brimpus(z))))", "(all x.(Pompus(x) -> -Vumpus(x)) & (Rome(x) & Brimpus(x)))", "all x y z.((Polly(x) & Vumpus(y) & Rompus(z)) -> (-Vumpus(x) & Polly(y) & Brimpus(y)))", "(all x.(Polly(x) -> -Vumpus(x)) & (Polly(x) -> Rompus(x)) & (Polly(x) -> Brimpus(x)))", "(all x.(Polly(x) -> -Voomse(x)) & (Polly(x) | Polly(x))) & (Polly(x) -> Rhopus(x)) & (Polly(x) -> Brimpus(x)))", "(all x.(Vumpus(x) -> -Vumpus(x)) & (Rompus(x) -> Brimpus(x)))", "exists x y z.(Polly(x) & Vompus(y) & Rompus(z) & Brimpus(x))"]}
{"id": "prontoqa_train_463", "nl": "Each tumpus is a dumpus.", "fol": "all x. (tumpus(x) -> dumpus(x))", "prediction": ["all x.(Tumpus(x) -> Dumpus(x))", "all x y.((Tumpus(x) & Puss(y)) -> Dumpus(x))", "all x.(Tumpus(x) -> Dumpus(x))", "all x.(Tumpus(x) -> Dumpus(x))", "all x.(Tumpus(x) -> Dumpus(x))", "all x.(Tumpus(x) -> Dumpus(x))", "all x.(Tumpus(x) -> Dumpus(x))", "all x.(Tumpus(x) -> Dumpus(x))", "all x.(Tumpus(x) -> Dumpus(x))", "all x.(Tumpus(x) -> Dumpus(x))", "all x.(Tumpus(x) -> Dumpus(x))", "all x.(Tumpus(x) -> Dumpus(x))", "all x.(Tumpus(x) -> Dumpus(x))", "all x.(Tumpus(x) -> Dumpus(x))", "all x.(Tumpus(x) -> Dumpus(x))", "all x.(Tumpus(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_464", "nl": "Stella is a yumpus, Stella is a wumpus, and Stella is not a dumpus.", "fol": "(yumpus(Stella) & wumpus(Stella) & -dumpus(Stella))", "prediction": ["(Yumpus(z) | Wumpus(z)) & NotDumpus(z))", "(all x.(Solved(x) -> Yumpus(x)) & all y.(Solved(y) -> Wumpus(y))) & all z.(Solved(z) -> -Dumpus(z))))", "(all x.(Mojo(x) -> Yumpus(x)) & (Mojo(x) -> Wumpus(x)) & -Dumpus(x)))", "all x y z.((Stella(x) & Yupsum(y) & Stella(z)) -> (Yumpus(x) & Wumpus(z) & -Dumus(z)))", "all x y z.((Stella(x) & Yumpus(y) & Wumpus(z)) -> (Yumpus(x) & Wumpus(y) & -Dumpus(z)))", "(all x.(Stella(x) -> Yumpus(x)) & (Stella(x) -> Wumpus(x)) & (Stella(x) -> -Dumpus(x)))", "(all x.(Stella(x) -> Yumpus(x)) & all y.(Wumpus(y) -> Wumpus(y)) & all z.(Stella(z) -> -Dumpus(z))))", "(all x.(Stella(x) -> Yumpus(x)) & (Stella(x) -> Wumpus(x)) & (Stella(x) -> -Dumpus(x)))", "all x y.((Stella(x) & Humpus(x)) -> (Yumpus(x) & Wumpus(x) & -Dumpus(y)))", "(all x.(Stella(x) -> Yumps(x)) & ((Stella(x) & Wumps(x))) & (Stella(x) -> -Dumpus(x))))", "all x y.((Stella(x) & Yumpus(x)) -> (Wumpus(x) & -Dumpus(y)))", "(all x.(Stella(x) -> Yumpus(x)) & (Stella(x) -> Wumpus(x)) & -Dumpus(x)))", "(all x.(Stella(x) -> Yampus(x)) & all y.(Stella(y) -> Wumpus(y)) & all z.(Stella(z) -> -Dumpus(z))))", "all x y z.((Stella(x) & Yumpus(y) & Wumpus(z)) -> (Yumpus(x) & Wumpus(x) & -Dumus(y)))", "(all x.(Yumpus(x) & Twimpus(x)) & (Lumpus(x) -> Wumpus(x)) & -Dumpus(x)))", "(all x.(Mountain(x) -> Yump(x)) & (Mountain(x) -> Wumpus(x)) & (Mountain(x) -> (Mountain(x) & -Dumpus(x))))"]}
{"id": "prontoqa_train_465", "nl": "Grimpuses are rompuses.", "fol": "all x. (grimpus(x) -> rompus(x))", "prediction": ["all x.(Grimpus(x) -> Rompus(x))", "all x.(Rimpus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "(Rampus(gripper) & Rompus(rompus))", "all x.(Rampus(x) -> Rompus(x))", "all x.(Rampus(x) -> Rompus(x))", "all x.(Grimpuse(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Rampus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Gruppus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Grimpuse(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_466", "nl": "Sally is a lempus and Sally is a vumpus and Sally is not a rompus.", "fol": "(lempus(Sally) & vumpus(Sally) & -rompus(Sally))", "prediction": ["(all x.(Sally(x) -> Lempus(x)) & (Sally(x) -> Vumpus(x)) & (Sally(x) -> -Rompus(x))))", "all x y z.((Sally(x) & Lempus(x) & Vumpus(y) & Romes(z)) -> (Sally(x) & Vumpus(x) & -Rompus(x)))", "(all x y z.(Lempus(x) & Lempus(y)) & (Vampis(z) | Rompus(z))))", "(all x.(Sally(x) -> Lempus(x)) & (Vumpus(x) | Rome(x))))", "\"(Sally(Sally) & Lempus(s) & Voompus(s)) | (Sally(s) & -Rompus(s))))", "all x y.((Sally(x) & Lempus(y)) -> (Vumpus(x) & -Rumpus(x)))", "all x.(Sally(x) -> (LEMPUS(x) & Sally(x) & Vumpus(x) & -Rompus(x)))", "(all x.(Sally(x) -> Lempus(x)) & (Sally(x) -> Vampus(x)) & (Sally(x) -> -Rompus(x)))", "(all x.(Sally(x) -> Lempus(x)) & (Sally(x) -> Vumpus(x)) & (Sally(x) -> -Rompus(x))))", "(all x.(Sally(x) -> Lempus(x)) & all y.(Sally(y) -> Vulpis(y)) & all z.(Sally(z) -> -Rompus(z)))", "(all x.(Sally(x) -> Lempus(x)) & (Sally(x) -> Vumpus(x)) & -Rompus(x)))", "(all x y z.(Limpus(x) -> (Sally(y) & Lempus(y))) & (Vimpus(z) -> -Rompus(y)))", "all x y.((Sally(x) & Lempus(x) & Vumpus(y)) -> -Rompus(x))", "all x y z.((Sally(x) & Lempus(x) & Vumpus(y) & -Rompus(z)) -> (Lempus(x) & Vumpus(y) & -Rompus(z)))", "(all x.(Sally(x) -> Lempus(x)) & (Sally(x) -> Vumpus(x)) & -Rompus(x)))", "(all x.(Sally(x) -> Lempus(x)) & (Sally(x) -> Vumpus(x)) & (Sally(x) -> -Rompus(x))))"]}
{"id": "prontoqa_train_467", "nl": "Grimpuses are wumpuses.", "fol": "all x. (grimpus(x) -> wumpus(x))", "prediction": ["all x.(Grimpus(x) -> Wumpus(x))", "all x.(Grinpox(x) -> Wumpus(x))", "all x.(Grimerpus(x) -> Wumpus(x))", "all x.(Grimpus(x) -> Wampus(x))", "all x.(Grimpus(x) -> Wumpuse(x))", "all x.(Grimpus(x) -> Wumpus(x))", "all x.(Grimpus(x) -> Wumpus(x))", "all x.(Grimpus(x) -> Hush(x))", "all x.(Grimpus(x) -> Wumpus(x))", "all x.(Grimpus(x) -> Wumpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x.(Grimpus(x) -> Wumpus(x))", "all x.(Grimpus(x) -> Wumpus(x))", "all x.(Grimpus(x) -> Wumpus(x))", "all x.(Grimpus(x) -> Wumpus(x))", "all x.(Grimpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_468", "nl": "Sam is a zumpus, Sam is not a wumpus, and Sam is a gorpus.", "fol": "(zumpus(Sam) & -wumpus(Sam) & gorpus(Sam))", "prediction": ["(all x.(Sam(x) -> Zumpus(x)) & (-Sam(x) -> Wumpus(x)) & (-Sam(x) -> Gorpus(x)))", "(all x.(Sam(x) -> Totempus(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Gorpus(x)))", "(all x y z.(Sam(x) -> Zumpus(x)) & ((Sam(y) & -Wumpus(y)) -> Gorpus(y)))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Wormpus(z)) -> (Understands(y,z) & Is(y,z)))", "all x.((Sam(x) & Zumpus(x)) -> -Wumpus(x) & Gorpus(x))", "(all x.(Sama(x) -> Zumpus(x)) & (Sama(x) -> -Wumpus(x)) & (Sama(x) -> Gorpus(x)))", "all x y z.((Zumpus(x) & NotWumpus(y) & Gorpus(z)) -> (Arsenina(x) & Has(x,y) & Has(x,z)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Gorpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Gorpus(x)))", "(all x.(Sam(x) -> Zurpus(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Gorpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & all y.(Sam(y) -> -Wumpus(y))) & all z.(Sam(z) -> Gorpus(z)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Gorpus(x)))", "all x y z.((Sam(x) & Zumpus(y) & Sam(z)) -> (-Wumpus(z) & Gorpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (-Wumpus(x)) | (-Wumpus(x) & Gorpus(x))))", "exists x.(Sam(x) & Zumpus(x) & -Wumpus(x) & Gorpus(x))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Gorpus(x)))"]}
{"id": "prontoqa_train_469", "nl": "Polly is not a sterpus, Polly is a tumpus, and Polly is a numpus.", "fol": "(-sterpus(Polly) & tumpus(Polly) & numpus(Polly))", "prediction": ["all x y z.((Polly(x) & Sterosulus(y) & Tumpus(z)) -> (-Storpus(x) & Tumpus(x) & Numpus(y)))", "(all x.(Polly(x) -> -Sterpus(x)) & all y.(Polly(y) -> Tumpus(y))) & all z.(Polly(z) -> Numpus(z))))", "all x y z.((Polly(x) & Sterpus(y) & Tumpus(z)) -> (-Strohen(x) | Pluto(z) | Numpus(z)))", "(all x.(Placy(x) -> -Sterpus(x)) & all y.(Placy(y) -> Tumpus(y)) & all z.(Placy(z) -> Nuclear(z))))", "(all x.(Polly(x) -> -Sterpus(x)) & (Polly(x) -> Tumpus(x)) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Sterpus(y) & Tompus(z)) -> (-Morpheus(x) | Tumpus(y) & Numpus(z)))", "all x y z.((Polly(x) & Sterpus(y) & Tumpus(z) & -Stereus(x)) -> (-Plootc,y) & -Plootc,z)))", "(all x.(Polly(x) -> -Sterpus(x)) & (Polly(x) -> Tumpus(x)) & (Polly(x) -> Numpus(x))))", "(all x.(Polly(x) -> -Sterpus(x)) & all y.(Polly(y) -> Tumpus(y))) & all z.(Polly(z) -> Numpus(z)))", "(all x.(Postypolly(x) -> -Sterpus(x)) & (Postypoly(x) -> Tumpus(x)) & (Postypoly(x) -> Numpus(x)))", "(all x.(Poly(x) -> -Sterpus(x)) & (Polly(x) -> Tumulus(x)) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Sterpus(y) & Tumpus(z)) -> (-Sterpus(x) & Tumpus(y) & Numpus(z)))", "(all x.(Polly(x) -> -Steep(x)) & all y.(Polly(y) -> Tumpus(y))) & all z.(Polly(z) -> Numpus(z)))", "all x y z.((Polly(x) & Sterpus(y) & Tumpus(z)) -> (-Sterpus(x) & Tumpus(y) & Numpus(z)))", "all x y z.((Polly(x) & Sterpus(y) & Tumpus(z)) -> (-Sterpus(x) & -Tumpus(x) & -Numpus(y)))", "(all x.(Polly(x) -> -Sterpus(x)) & all y.(Polly(y) -> Toumpus(y))) & all z.(Polly(z) -> Numpus(z))))"]}
{"id": "prontoqa_train_470", "nl": "Each rompus is a numpus.", "fol": "all x. (rompus(x) -> numpus(x))", "prediction": ["all x.(Rompus(x) -> Numpus(x))", "all x.(Rompus(x) -> Numpus(x))", "all x.(Rompus(x) -> Numpus(x))", "all x.(Rompus(x) -> Number(x))", "all x.(Rompus(x) -> Numpus(x))", "all x.(Rompus(x) -> Numpus(x))", "all x.(Rompus(x) -> Numpus(x))", "all x.(Rompus(x) -> Numpus(x))", "all x.(Rompus(x) -> Numpus(x))", "all x.(Rompus(x) -> Numpus(x))", "all x.(Rompus(x) -> Numpus(x))", "all x.(Rompus(x) -> Numpus(x))", "all x.(Romeus(x) -> Nompus(x))", "all x.(Rompus(x) -> Numpus(x))", "all x.(Rompus(x) -> Numpus(x))", "all x.(Rompus(x) -> Numpus(x))"]}
{"id": "prontoqa_train_471", "nl": "Rex is a lorpus and Rex is a tumpus and Rex is not a numpus.", "fol": "(lorpus(Rex) & tumpus(Rex) & -numpus(Rex))", "prediction": ["(all x.(Rex(x) -> Lorpus(x)) & (Tumpus(x) | -Numpus(x)))", "(all x.(Rex(x) -> Llorpus(x)) & (Tumpus(x) & -Numpus(x)))", "(all x y.(R\u00e9x(x) -> Lopus(x)) & ((Rex(y) & Tumpus(y)) -> -Nompus(y)))", "all x y z.((Rex(x) & Lorpus(y) & Tumpus(z) & -Numpus(x)) -> (Lorpus(x) & Tumpus(y) & Numpus(z)))", "all x y z.((Rex(x) & Lorpus(y) & Tumpus(z)) -> (Lorpus(x) & Tumpus(y) & -Numpus(z)))", "(all x.(Rex(x):Lorpus(x)) & (Tumpus(x) | Numpus(x))))", "all x y z.((Rex(x) & Lorpus(y) & Tumpus(z)) -> (Lorpus(x,y) & Tumpus(x,z) & -Numpus(z)))", "all x y z.((Lorpus(x) & Tumpus(y) & Rex(z)) -> (Lorpus(x) | Tumpus(y) & -Numpus(z)))", "exists x.(Lorpus(x) & Tumpus(x) & -Numpus(x))", "all x y.((Rex(x) & Lorpus(x) & Tumpus(y)) -> (Lorpus(x) & Tumpus(y) & -Numpus(x)))", "(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> Toumpus(x)) & (Rex(x) -> -Numpus(x)))", "(all x y.((Rex(x) & Lorpus(x)) -> Tumpus(x)) & ((Rex(y) & Numpus(y)) -> -Numpus(y)))", "all x y z.((Rex(x) & Thrombos(y) & Tumpus(z)) -> (Lorpus(x) | Totumpus(z) | -Numpus(x)))", "(all x y.((Rex(x) & Lorpus(x)) -> Lorpus(x)) & ((Rex(y) & Tumpus(y))) -> -Numpus(y)))", "all x y z.((Rex(x) & Lorpus(x) & Tumpus(y) & Numpus(z)) -> (Lorpheus(x) & Tumpus(y) & -Numpus(z)))", "all x y z.((Rex(x) & Lorpus(y) & Tumpus(z)) -> (Lorpus(x) & Tumpus(z) & -Numpus(x)))"]}
{"id": "prontoqa_train_472", "nl": "Fae is not an impus and Fae is a grimpus and Fae is a rompus.", "fol": "(-impus(Fae) & grimpus(Fae) & rompus(Fae))", "prediction": ["all x.(Fae(x) -> (-Impossible(x) & Grimpus(x) & Romanus(x)))", "(all x y z.(Fae(x) -> (NoIssue(x) & Spruce(y) & Grimpus(z))) & (Rompus(z) -> (Bermo(x,y) & NoIssue(x,z))))", "(all x.(Fae(x) -> -Issue(x)) & all y.(Fae(y) -> Gray(y))) & all z.(Fae(z) -> Rompus(z)))", "(all x.(Fae(x) -> -Issue(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> Rompus(x)))", "(all x.(Fae(x) -> -Impossible(x)) & (Grimpus(x) | Rompus(x))))", "(all x.(Fae(x) -> -Issue(x)) & (Fae(x) -> Grappus(x)) & (Fae(x) -> Rompus(x)))", "(all x.(Fae(x) -> -Issue(x)) & (Fae(x) -> Grimpus(x)) & Fae(x) -> Rompus(x)))", "(all x.(Fae(x) -> -Is(x)) & all y.(Fae(y) -> (Grimpus(y) & Grimpus(y))))", "all x.(Fae(x) -> (-Impossible(x) & Grimpus(x) & Rompus(x)))", "(exists x.(Fae(x) & -Is(x,i)) & exists y.(Fae(y) & Grimpus(y))) & exists z.(Rompus(z) & Avons(z))))", "(all x.(Fae(x) -> -Ilirs(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> Rompus(x)))", "(all x.(Fae(x) -> -Impossible(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> Rompus(x)))", "(all x.(Fae(x) -> -Impossible(x)) & all y.(Fae(y) -> Grimpus(y)) & all z.(Fae(z) -> Rompus(z))))", "(all x.(Fae(x) -> -Issue(x)) & all y.(Fae(y) -> (Grimpus(y) | Rompus(y))))", "(all x y z.((Fae(x) & Impossible(y)) -> -Fae(x)) & ((Fae(z) & Grapple(z)) -> Rumpus(z)))", "(all x.(Fae(x) -> -Impossible(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> Rompus(x)))"]}
{"id": "prontoqa_train_473", "nl": "Every vumpus is a gorpus.", "fol": "all x. (vumpus(x) -> gorpus(x))", "prediction": ["all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))", "all x.(Vumpus(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_474", "nl": "Sam is not a gorpus and Sam is a numpus and Sam is a jompus.", "fol": "(-gorpus(Sam) & numpus(Sam) & jompus(Sam))", "prediction": ["(all x.(Sam(x) -> -Gorpus(x)) & (Numpus(x) | Jompus(x)))", "all x y z.((Sam(x) & Gorpus(x) & Numpus(y) & Jompus(z)) -> (-Gorpus(x) & Numpus(y) & Jompus(z)))", "all x.((Sam(x) & -Gorpus(x)) -> (Numpus(x) & Jompus(x)))", "(all x.(Saman(x) -> -Gorpus(x)) & all y.(Nompus(y) & Nompus(y))) & all z.(Jompus(z) -> Nompus(z)))", "(all x.((Sam(x) & -(Gorpus(x) | Numpus(x))) -> Joompus(x)))", "(all x.(Sam(x) -> -Gorpus(x)) & (Sam(x) -> Numpus(x)) & (Sam(x) -> Jompus(x)))", "all x y z.((Sam(x) & Gorpus(y) & Numpus(z)) -> (-Gorpus(x) & Nompus(y) & Jompus(z)))", "(all x y z.(Sam(x) -> (-Gorpse(x) & Sam(y) & Number(y) & Sam(z))) -> (Jimpus(z) & -Gorpus(y) & -Numpus(z) & Sam(z)))", "all x y.((Sam(x) & -Gorpus(x) & Sam(y)) -> (Numpus(y) & Jompus(y)))", "all x y.((Sam(x) & Gorpus(x)) -> -Gorpus(x)) & (Numpus(y) & Jompus(y)))", "(all x.(Sam(x) -> -Gorpus(x)) & (Stronger(x) -> Numpus(x)) & (Stronger(x) -> Jompus(x)))", "(all x.(Crompus(x) -> -Gorpus(x)) & (Crompus(x) | Numpus(x)) & (Jompus(x))))", "all x y z.((Sam(x) & Gorpus(y) & Numpus(z)) -> (-Gorpus(x) & Numpus(x) & Jompus(x)))", "all x.(Sam(x) -> ((-Gorpus(x) & Sam(x)) | (-Gorpus(x) & Numpus(x) & Sam(x))))", "(all x y z.((Sam(x) & Gorpus(y)) -> -GORPUS(x)) & ((Sam(z) & Numpus(z))) -> Jompus(z)))", "(all x.(Sam(x) -> -Gorpus(x)) & (Numpus(x) | Jompus(x))))"]}
{"id": "prontoqa_train_475", "nl": "Gorpuses are lorpuses.", "fol": "all x. (gorpus(x) -> lorpus(x))", "prediction": ["all x.(Gorpus(x) -> Lorpus(x))", "all x.(Rorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Liverpes(x))", "all x.(Gorpus(x) -> Laceolus(x))", "all x.(Rosp(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Loomise(x))", "all x.(Gorpuse(x) -> Loomis(x))", "all x.(Gorpuse(x) -> Llorpus(x))", "all x.(Gorpus(x) -> Llorpuse(x))", "all x.(Gorpus(x) -> Lorpuse(x))", "all x.(Gorpuse(x) -> Lorpus(x))", "all x.(Gorpuse(x) -> Llorpus(x))", "all x.(GorpusEarth(x) -> Lorpuse(x))", "all x.(Gorpuse(x) -> Lorps(x))", "all x.(Gorpuse(x) -> (Lorpus(x) & -Rosen(x)))"]}
{"id": "prontoqa_train_476", "nl": "Rex is a wumpus and Rex is not a lorpus and Rex is a numpus.", "fol": "(wumpus(Rex) & -lorpus(Rex) & numpus(Rex))", "prediction": ["(all x y.((Rex(x) & Wumpus(x)) -> NoLorpus(x)) & ((Rex(y) & Nompus(y)) -> Wumpus(y)))", "(all x.(Rex(x) -> Wumpus(x)) & (Nolorpus(x) | Numpus(x))))", "(all x.(Rex(x) -> Wumpus(x)) & (-lorpus(x) & -numpus(x))))", "all x y.((Wumpus(x) & Lorpus(y)) -> (Rex,y) & Numpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> -Lorpus(x)) & (Rex(x) -> Numpus(x))))", "(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> -Lorpus(x)) & (Rex(x) -> Numpus(x)))", "(All x.(Rex(x) -> Wumpus(x)) & -(Rex(x) -> Lorpus(x))) & (Rex(x) -> Numpus(x)))", "all x y.((Rex(x) & Wumpus(x)) -> (-Lorpus(y) & Numpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & (-lorpus(x) & Numus(x)))", "(all x.(Wumpus(x) -> Rex)) & (-Lorpus(x) -> Rex)) & (Numpus(x) -> Rex)))", "(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> -Lorpus(x)) & (Rex(x) -> Numpus(x))))", "Identifier(x) & [Wumpus(x) | -Lorpus(x) | Numpus(x)])", "(all x y z.((Rex) & Plutonus(y)) -> Wumpus(x)) & ((Rex(z) & -Lorpus(z))) -> Numpus(z)))", "all x y.((Rex(x) & Rumpus(y)) -> (Wumpus(x) | -Lorpus(y) | Numpus(y)))", "(all x.(Rex(x) -> Wumpus(x)) & All y.((Rex(y) & -Lorpus(y)) -> Number(y)))", "(all x.(Rex(x) -> Bump(x)) & all y.(Rex(y) -> NotLorpus(y))) & all z.(Rex(z) -> Numpus(z)))"]}
{"id": "prontoqa_train_477", "nl": "Rex is not a gorpus.", "fol": "-gorpus(Rex)", "prediction": ["-Gorpus(Rex)", "Rex (-Gorpus(Rex))", "Rex is not gorpus.", "all x.(Rex(x) -> -Gorpus(x))", "-Gorpus(Rex)", "all x.(Rex(x) -> -Gorpus(x))", "all x.(Rex(x) -> -Gorpus(x))", "Rex is -Gorpus(x))", "Rex is notGorpus.", "Rex is a gorpus.", "LoadedWith(x,y) & -Gurpus(y))", "Rex is notGorpus.", "Rex is notGorpus(x)", "Rex is notGorpus(x)", "Rex,Equals(Rex,Gorpus)", "Rex (Rex) -> -Gorpus(x))"]}
{"id": "prontoqa_train_478", "nl": "Sally is a rompus, Sally is not a lempus, and Sally is an impus.", "fol": "(rompus(Sally) & -lempus(Sally) & impus(Sally))", "prediction": ["(all x.(Sally(x) -> Rompus(x)) & (-Lempus(x) & (Iliosis(x) | -Iliosis(x))))", "(all x.(Sally(x) -> Rompus(x)) & (-Sally(x) -> Lempus(x)) & (Sally(x) -> Imperative(x)))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Lempus(x)) & (Sally(x) -> Imperative(x)))", "all x y z.((Sally(x) & Rompus(y) & Lempus(z)) -> (Rompus(x) & Ilirs(x)))", "(all x.(Sally(x) & Rompus(x)) & -Lempus(x) & Iliad(x))", "all x.(Sally(x) -> (Rompus(x) & -Lempus(x) | Imperator(x)))", "all x y z.((Sally(x) & Rompus(y) & Lempus(z) & Imperia(x)) -> (Rompus(x) & -Lempus(y) & Imperia(z)))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Lempus(x)) & (Sally(x) -> Imperator(x)))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Lempus(x)) & (Sally(x) -> Imperator(x)))", "(all x.(Sally(x) -> Rompus(x)) & (-Sally(x) -> Lempus(x)) & (-Sally(x) -> Impossible(x)))", "(all x y z w.((Sally(x) & Rompus(x) & -Lempus(y)) -> Replevant(x)) & ((Sally(z) & Imperator(w)) -> Imperator(z)))", "(all x.(Sally(x) -> Romax)) & (Sally(x) -> -Lempus(x)) & (Sally(x) -> Ispose(x)))", "(all x.(Jaw(x) -> Rompus(x)) & all y.(Lempus(y) -> Sally(y))) & all z.(Imposer(z) -> Sally(z)))", "all x.((Sally(x) -> Rompus(x)) & -(Sally(x) & Lempus(x))) & -(Sally(x) & Imperator(x)))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> -Lempus(y)) & all z.((Sally(z) & Issue)) -> Issue(z))))", "all x y z.((Sally(x) & Tombus(y) & Lempus(z)) -> (Rompus(x) & -Lempus(x) & Illusion(x)))"]}
{"id": "prontoqa_train_479", "nl": "Sally is not a yumpus.", "fol": "-yumpus(Sally)", "prediction": ["Sally n\u2019est pasYumpus(Sally)", "all x.(Sally(x) -> -Yumpus(x))", "Sally, & -Yumpus(Sally)", "Sally is no yumpus.", "Sally -Yumpus(Sally)", "Sally & -Yumpus(Sally)", "Sally is -Yumpus(s)", "Sally is notyumpus.", "Sally is not yumpus.", "(-Yumpus(Sally))", "Sally is not a yumpus.", "Sally is notYumpus(Sally)", "Sally is not a yumpus.", "(-Yumpus(Sally))", "Sally taintedsaints.", "all x.(Sally(x) -> -Yumpus(x))"]}
{"id": "prontoqa_train_480", "nl": "Every shumpus is a jompus.", "fol": "all x. (shumpus(x) -> jompus(x))", "prediction": ["all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shumpus(x) -> Jompus(x))"]}
{"id": "prontoqa_train_481", "nl": "Stella is a grimpus, Stella is a numpus, and Stella is not a jompus.", "fol": "(grimpus(Stella) & numpus(Stella) & -jompus(Stella))", "prediction": ["(all x.(Stella(x) -> Grimpus(x)) & (Stella(x) -> Numpus(x)) & -Jompus(x)))", "(all x.(Stella(x) -> Grimpus(x)) & all y.(Stella(y) -> Nompus(y)) & all z.(Stella(z) -> -Jompus(z))))", "(all x.(Stella(x) -> Grimpus(x)) & (Stella(x) -> Numpus(x)) & (Stella(x) -> -Jompus(x)))", "(all x.(StellaArcteu(x) -> Grrumpus(x)) & (StellaArcteu(x) -> Numpus(x)) & (StellaArcteu(x) -> -Jompus(x)))", "(all x y z.(Stella(x) -> Grumpus(x)) & (Stella(y) -> Numpus(y)) & (Stella(z) -> -jompus(z))))", "(all x.(Stella(x) -> Grimpus(x)) & all y.(Stella(y) -> Numpus(y)) & all z.(Stella(z) -> -Jompus(z))))", "(all x.(Stella(x) -> Grimpus(x)) & (Stella(x) -> Numpus(x)) & (Stella(x) -> -Jompus(x)))", "all x y z.((Stella(x) & Grimpus(y) & Numpus(z)) -> (Grimpus(x) & Numpus(y) & -Jompus(x)))", "(all x.(Stella(x) -> Grimpus(x)) & (Stella(x) -> Numpus(x)) & (Stella(x) -> -Jompus(x)))", "(all x.(Stella(x) -> Grimpus(x)) & (Stella(x) -> Numpus(x)) & (Stella(x) -> -Jompus(x))))", "(all x y z.(Stella(x) & Grimpus(x,y)) & (Stella(y) -> Numpus(y)) & (Stella(z) -> -Jimpus(z))))", "all x y z.((Stella(x) & Grimpus(y) & Nompus(z)) -> (Grimpus(x) | Nompus(z) | -Jompus(z)))", "(all x.(Stella(x) -> Grimpus(x)) & all y.(Stella(y) -> Numpus(y)) & all z.(Stella(z) -> -Jompus(z))))", "(all x.(Stilla(x) -> Grimpus(x)) & (Stilla(x) -> Numpus(x)) & (Stella(x) -> -Jimpus(x)))", "(all x.(Pumpus(x) -> Grimes(x)) & (Pumpus(x) -> Numpus(x)) & (Pumpus(x) -> -Jompus(x)))", "(all x.(Stella(x) -> Grimpus(x)) & (Mother(x) -> Numpus(x)) & (Stella(x) -> -Jimpus(x)))"]}
{"id": "prontoqa_train_482", "nl": "Numpuses are grimpuses.", "fol": "all x. (numpus(x) -> grimpus(x))", "prediction": ["all x.(Numpus(x) -> Grimpuse(x))", "all x.(Numpus(x) -> Grimpuse(x))", "all x.(Numpus(x) -> Grimpuse(x))", "any time there is a grimpuse(Numpuse)", "all x.(Numpus(x) -> Crumples(x))", "all x.(Numpus(x) -> Grimpuse(x))", "all x.(Numpuse(x) -> Grimpuse(x))", "all x.(Numpuse(x) -> Grimpuse(x))", "all x.(Numpus(x) -> Grimpuse(x))", "all x.(Numpus(x) -> Grimpuse(x))", "all x.(Numpuse(x) -> Grimpuse(x))", "all x.(Numpus(x) -> Greasy(x))", "all x.(Numpuse(x) -> Grimpus(x))", "all x.(Numpus(x) -> Grimpuse(x))", "all x.(Numpus(x) -> Grapple(x))", "all x.(Numpuse(x) -> Grimpuse(x))"]}
{"id": "prontoqa_train_483", "nl": "Fae is a jompus, Fae is a shumpus, and Fae is not a grimpus.", "fol": "(jompus(Fae) & shumpus(Fae) & -grimpus(Fae))", "prediction": ["all x y z.((Fae(x) & Jompus(x) & Shumpus(y) & Crumples(z)) -> (RealPseudo(x) & RealPseudo(x) & RealPseudo(x)))", "all x.(Fame(x) -> (Rompus(x) | Humpus(x) & -Grimpus(x)))", "all x y.((Fae(x) & Jompus(x) & Saumpus(y) & -Grimpus(z)) -> (Jompus(x) & Shumpus(y) & -Grampus(z)))", "all x y z.((Fae(x) & Jompus(x) & Shumpus(y) & -Grimpus(z)) -> (Jumpus(x) & Humpus(y) & -Scrompus(z)))", "(all x y z.(Fae(x) -> Jompus(x)) & (Fae(y) -> Shumpus(y)) & (Fae(z) -> -Grimpus(z)))", "exists x.(Fae(x) & Jompus(x) & Shumpus(x) & -Grimpus(x))", "(all x y z.(Fae(x) -> Hompus(x)) & ((Fae(y) & Shumpus(y)) -> Grimpus(z)))", "(all x.(Fae(x) -> Jompus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> -Smirkpus(z))))", "all x y z.((Fae(x) & Jompus(y) & Shumpus(z)) -> (Jompus(x) & Shumpus(x) & -Grimpus(x)))", "all x.(Fae(x) & (Jimpus(x) | Humpus(x) | NoPumpus(x)))", "(all x.(Fae(x) -> Jompus(x)) & is -> Shumpus(x)) & -Fae(x) -> Grimpus(x)))", "(all x.(Fae(x) -> Jompus(x)) & (Fae(x) -> Simpus(x)) & (Fae(x) | Grimpus(x))))", "all x y z.((Fae(x) & Jompus(x) & Humpus(y) & -Gruppus(z)) -> (Jompus(x) | Shumpus(y) & -Rawpus(a)))", "(all x.(Fae(x) -> Jompus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> -Grimpus(z))))", "(all x y z.((Fae(x) & Jompus(x) & Shumpus(y)) -> (Jompus(x) | Shumpus(y) & -Grimpus(z))))", "(all x.(Fae(x) -> Jompus(x)) & all y.(Fae(y) -> Humpus(y)) & all z.(Fae(z) -> -Grimpus(z))))"]}
{"id": "prontoqa_train_484", "nl": "Wren is not a yumpus, Wren is a tumpus, and Wren is a lempus.", "fol": "(-yumpus(Wren) & tumpus(Wren) & lempus(Wren))", "prediction": ["all x y z.((Wren(x) & Yampus(y) & Tompus(z)) -> (-Yumpus(x) & Tumpus(x) & Lempus(x)))", "all x y z.((Wren(x) & Yuba(y) & Tumpus(z)) -> (-yumpus(x) & Tumpus(z) & Lempus(x)))", "(all x.(Yumpus(x) -> -Wren(x)) & (Tumpus(x) -> Wren(x)) & (Lempus(x) -> Wren(x)))", "all x y z.((Wren(x) & Yumpus(y) & Tompus(z)) -> (-Yumpus(x) & Tumpus(x) & Lempus(x)))", "(all x y z.((Wren(x) & Yumpa(y)) -> -Yumpus(x)) & ((Wren(z) & Tompus(z))) -> Lempus(z)))", "(all x.(Wren(x) -> -Yumpus(x)) & (Tumpus(x) -> Tumpus(x)) & (Lempus(x) -> Yumpus(x)))", "(all x.(Wren(x) -> -Yumpus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> Lempus(z))))", "all x y z.((Wren(x) & Yumpus(y) & Tompus(z)) -> (-Yumpus(x) & Tumpus(y) & Lempus(z)))", "all x y z.((Wren(x) & Yumpis(y) & Tumpus(z)) -> (-Yumpus(x) & Tumpus(x) & Lempus(x)))", "(all x.(Wren(x) -> -Yumpus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> Lempus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Tumpus(z)) -> (-Yumpus(x) & Tumpus(y) & Lempus(z)))", "(all x.(Wren(x) -> -Yumpus(x)) & ((Wren(x) & Tumpus(x)) | (-Yumpus(x) & Tumpus(x)))) & ((Wren(x) & Lempus(x))))", "(all x.(Wren(x) -> -Yumpus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> Lempus(z))))", "(all x.(Wren (x) -> -Yumpus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> Lempus(x)))", "(all x.(Wren(x) -> -Yumpus(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> Lempus(z))))", "(all x.(Wren(x) -> -Yumpus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> Lempus(x)))"]}
{"id": "prontoqa_train_485", "nl": "Sally is a lorpus, Sally is not a tumpus, and Sally is a dumpus.", "fol": "(lorpus(Sally) & -tumpus(Sally) & dumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Lorpus(x)) & (-Tumpus(x) & (Dumps(x) | Carnivore(x)))))", "(all x.(Lorpus(x) -> Sally(x)) & (-Tumpus(x) -> Sally(x)) & (Dumpus(x) -> Sally(x)))", "all x.((Sally(x) & Lorpus(x)) -> -Tumpus(x)) & (Sally(x) & Dumpus(x)))", "(all x.(Sally(x) -> Lorpus(x)) & (-Tumpus(x) & Dumpus(x))))", "(All x.(Sally(x) -> Lorpus(x)) & -Tumpus(x)) & Dumpus(x))", "(all x.(Sally(x) -> Lorpus(x)) & all y.((Sally(y) & -Tumpus(y)) | (-Sally(y) & Dumpus(y))))", "(all x y z.((Sally(x) & Lorpus(x) & -Tompus(y)) -> LessThan(x)) & ((Sally(z) & NoTumpus(z)) -> Dumped(z)))", "(all x.(Sally(x) -> Lorpus(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Dumpus(x)))", "(all x y z.((Sally(x) & Lorpus(y) & Tumpus(z)) -> Lorpus(x)) & ((Sally(x) & -Tumpus(z))) -> Dumpus(x)))", "(all x.(Sally(x) -> Lorpus(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Dumpus(x)))", "(all x.(Sally(x) -> Lorpus(x)) & (Sally(x) -> -Toumpus(x)) & (Sally(x) -> Dumpus(x)))", "all x y z.((Sally(x) & Lorpus(y) & Tumpus(z)) -> (Lorpus(x) & -Tumpus(x) & Dumpus(x)))", "(all x.(Sally(x) -> Lorpus(x)) & (-Tumpus(x) & (Dumpus(x) -> Dumpus(x))))", "(all x y.((Sally(x) & Lorpus(x)) -> Leroys(x)) & ((Sally(y) & -Tumpus(y)) -> Dumpus(y)))", "all x y z w.((Sally(x) & Lorpus(y) & Tumpus(z) & Dumpus(w)) -> (Lorpus(x) & -Tumpus(y) & Dumpus(z)))", "(all x.(Sally(x) -> Lorpus(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Dumpus(x)))"]}
{"id": "prontoqa_train_486", "nl": "Every rompus is a sterpus.", "fol": "all x. (rompus(x) -> sterpus(x))", "prediction": ["all x.(Rompus(x) -> Sterpus(x))", "all x.(Rompus(x) -> Sterpus(x))", "all x.(Rompus(x) -> Sterpus(x))", "all x.(Rompus(x) -> Steroid(x))", "all x.(Rompus(x) -> Sterpus(x))", "exists x.(Rompus(x) & Sterpus(x))", "all x.(Rompus(x) -> Sterpus(x))", "all x.(Rompus(x) -> Sterpus(x))", "all x.(Rompus(x) -> Sterpus(x))", ",all x.(Rompus(x) -> Sterpus(x))", "all x.(Rompus(x) -> Sterpus(x))", "all x.(Rompus(x) -> Sterpus(x))", "all x.(Rompus(x) -> Sterpus(x))", "all x.(Rompus(x) -> Sterpus(x))", "all x.(Rompus(x) -> Sterpus(x))", "all x.(Rompus(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_487", "nl": "Wren is a yumpus and Wren is a tumpus and Wren is not a sterpus.", "fol": "(yumpus(Wren) & tumpus(Wren) & -sterpus(Wren))", "prediction": ["(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> -Sterpus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Wren(z)) -> (yumpus(x) & Tumpus(z) & -Sterpus(z)))", "all x y z.((Wren(x) & Yumps(y) & Wren(z) & Teampus(z)) -> ((Yumpus(z) | Teampus(z)) & -Sterpus(z))))", "(all x.((Wren(x) & Yampus(x)) -> Shimpus(x)) & ((Wren(x) & Tumpus(x)) -> -Sterpus(x)))", "(all x.(Wren(x) -> Yampus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Sterpus(x)))", "(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> -Sterpus(z))))", "(All x.(Wren(x) -> Yampus(x)) & (Wren(x) -> Tumpus(x)) & -Stern(x)))", "all x y.((Wren(x) & Yumpus(x)) & ((Wren(y) & Tumpus(y)) & (-Wren(z) | Sterpus(z)))) -> Yumpus(y) & -Tumpus(z)))", "(all x y.((Wren(x) & Yumpsum(x)) -> (Atmosphere(y) & Affective(y))) | ((Wren(x) & \u0430\u0443\u043a\u0438)) -> (Affective(y) & Affective(y)))))", "(all x.(Wren(x) -> Yampus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Sterpus(x))))", "all x y.((Wren(x) & Yumpus(x) & Tumpus(y)) -> (Yumpus(x) & -Sterpus(y)))", "all x y z.((Wren(x) & Yumpus(y) & Wren(z)) -> (Yumpus(x) & Tumpus(z) & -Sterepus(z)))", "(all x y.((Wren(x) & Yumpus(x)) -> Thumbpus(x)) & ((Wren(y) & Tumpus(y)) -> -Sterpus(y)))", "all x y z.((Riddle(x) & Whin(y) & Twist(z)) -> (Yumpus(x) | Whin(y) | Throat(y) | -Sterepus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Tumpus(z)) -> (Yumpus(x) & -Sterpus(y)))", "all x y z.((Wren(x) & Yampus(x) & Tumpus(y) & -Sterpus(z)) -> (Yumpus(x) & Tumpus(y) & -Sterpus(z)))"]}
{"id": "prontoqa_train_488", "nl": "Shumpuses are vumpuses.", "fol": "all x. (shumpus(x) -> vumpus(x))", "prediction": ["all x.(Shumpuse(x) -> Vampuse(x))", "all x.(Shampoo(x) -> Vampuse(x))", "all x.(Shuppe(x) -> Vampuse(x))", "all x.(Shupuse(x) -> Vulpe(x))", "all x.(Shupuse(x) -> Vampuse(x))", "all x.(Shushuse(x) -> Vampuse(x))", "all x.(Shimuse(x) -> Vampuse(x))", "all x.(Smugus(x) -> Vulpus(x))", "all x.(Shampoo(x) -> Vampuse(x))", "all x.(Shumpuse(x) -> Vampuse(x))", "all x.(Shimi(x) -> Vampuse(x))", "(all x.(Shumpus(x) -> Vuxus(x))", "all x.(Shumpuse(x) -> Vampuse(x))", "all x.(Shampuse(x) -> Vulpuse(x))", "all x.(Shupuse(x) -> Vampuse(x))", "all x.(Sumpfuse(x) -> Vampuse(x))"]}
{"id": "prontoqa_train_489", "nl": "Stella is a numpus and Stella is a yumpus and Stella is not a vumpus.", "fol": "(numpus(Stella) & yumpus(Stella) & -vumpus(Stella))", "prediction": ["all x y.((Stella(x) & Numpus(x) & Yampus(y)) -> (Kino(x) & -Vumpus(x)))", "all x y z.((Stella(x) & Nompus(x) & Stella(y) & Kumpus(z)) -> (Rhododes(x,y) & Numpus(y) & -Vumpus(z)))", "(all x.(Stella(x) & Numpus(x)) & (Yumpus(x) & -Vumpus(x)))", "(numpus(Stella) & yumpus(Stella) & -vumpus(Stella))", "(all x y.((Stella(x) & Numpus(x)) -> Yompus(x)) & ((Stella(y) & Vumpus(y)) -> -Vumpus(y)))", "all x y.((Stella(x) & Numpus(x) & Yampus(y)) -> (-Vumpus(x)))", "all x y z.((Stella(x) & Number(x) & Stella(y) & Yumpus(y)) -> (Numpus(x) & Noimpus(z)))", "all x y.((Stella(x) & Numpus(x) & Yupus(y)) -> (Nomus(x) & -Vumpus(y)))", "(all x.(Stella(x) -> Numpus(x)) & (Stella(x) -> Yumpus(x)) & -Stella(x)))", "(all x.(Stella(x) -> Numpus(x)) & all y.(Stella(y) -> Yuppus(y))) & all z.(Stella(z) -> -Vumpus(z))))", "all x.((Stella(x) -> (Numpus(x) & Yompus(x) & -Vumpus(x)))", "(all x y z.(Stella(x) -> Numpus(x)) & (Stella(y) -> Yumpus(y)) & (Stella(z) -> -Vumpus(z)))", "(all x.(Alfa(x) -> Numpus(x)) & all y.(Alfa(y) -> Yumpus(y))) & all z.(Alfa(z) -> -Vumpus(z))))", "(all x.(Stella(x) -> Numpus(x)) & (Stella(x) -> Yampus(x))) & (Stella(x) -> -Vumpus(x)))", "(all x.(Stella(x) -> Numpus(x)) & all y.(Stella(y) -> Yumpus(y)) & all z.(Stella(z) -> -Vimpus(z))))", "(all x.(Stella(x) -> Numpus(x)) & all y.(Stella(y) -> Yampus(y)))"]}
{"id": "prontoqa_train_490", "nl": "Lorpuses are grimpuses.", "fol": "all x. (lorpus(x) -> grimpus(x))", "prediction": ["all x.(Lorpus(x) -> Grumpus(x))", "all x.(Lorpuse(x) -> Grimpuse(x))", "all x.(Lorpus(x) -> Grimpuse(x))", "all x.(Lorpus(x) -> Grimpuse(x))", "all x.(Lorpus(x) -> Grimpuse(x))", "all x.(Lorpus(x) -> Grimpuse(x))", "all x.(Lorpus(x) -> Grimpus(x))", "all x.(Lorpus(x) -> Grimpuse(x))", "all x.(Lourpus(x) -> Grimpus(x))", "all x.(Lorpus(x) -> Gruffpus(x))", "all x.(Lorpus(x) -> Grimpuse(x))", "all x.(Lorpus(x) -> Grimpuse(x))", "all x.(Lorpus(x) -> Grimpuse(x))", "all x.(Lorpus(x) -> Grapple(x))", "all x.(Lorpus(x) -> Grimpuse(x))", "all x.(Lorpuse(x) -> Grimpuse(x))"]}
{"id": "prontoqa_train_491", "nl": "Sam is a wumpus and Sam is a lempus and Sam is not a grimpus.", "fol": "(wumpus(Sam) & lempus(Sam) & -grimpus(Sam))", "prediction": ["(all x.(Wumpus(x) -> Sam(x)) & (Lempus(x) -> Sam(x)) & -Grimpus(x)))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Lempus(x)) & (Sam(x) -> -Gripper(x)))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Lempus(x)) & (Sam(x) -> -Grimpus(x)))", "all x y z.(Emmanual(x) -> (Wumpus(y) & Lempus(z) & Sam(x) & -Grimpus(z)))", "(all x.(Sam(x) -> Wumpus(x)) & all y.(Sam(y) -> Lempus(y))) & all z.(Sam(z) -> -Grimpus(z))))", "(all x.(Wumpus(x) -> SamMulhols(x)) & all y.(Lempus(y) -> SamMulhols(y))) & all z.(Mulhols(z) -> SamMulhols(z)))", "(all x.(Sam(x) -> Wumpus(x)) & (Lempus(x) | -Grimpus(x))))", "(all x.(Wumpus(x) -> Sam(x)) & all y.(Lempus(y) -> Sam(y))) & all z.(Grampus(z) -> Sam(z))))", "(all x.(Sam(x) -> Wumpus(x)) & (Lempus(x)) & -Grimpus(x)))", "all x y z.((Sam(x) & Wumpus(x) & Lempus(y) & Grapple(z)) -> (Wumpus(x) & Lempus(y) & -Grimpus(z)))", "(all x.(Sam(x) -> Wumpus(x) & exists y.(Lempus(y) & -Sam(y))))", "(all x.(Sam(x) -> Wumpus(x)) & all y.(Sam(y) -> Lempus(y)) & all z.(Sam(z) -> -Grimpus(z))))", "all x y z.((Sam(x) & Wumpus(y) & Lempus(z)) -> (Wumpus(x) & Lempus(z) & -Grimpus(y)))", "(all x.(Wumpus(x) -> Sparrow(x)) & all y.(Lempus(y) -> Sparrow(y))) & all z.(Smarkpus(z) -> Sparrow(z)))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Lempus(x)) & -Sam(x)))", "exists x.(Sam(x) & Wumpus(x) & Lempus(x) & -Grimpus(x))"]}
{"id": "prontoqa_train_492", "nl": "Each impus is a jompus.", "fol": "all x. (impus(x) -> jompus(x))", "prediction": ["all x.(Impos(x) -> Jompus(x))", "all x.(Imploss(x) -> Jompus(x))", "all x.(Impedus(x) -> Jompus(x))", "all x.(Impossible(x) -> Jompus(x))", "all x.(Improvist(x) -> Jompus(x))", "all x.(Impossible(x) -> Jompus(x))", "all x.(Impossible(x) -> Jompus(x))", "all x.(Impact(x) -> Jompus(x))", "all x.(Impact(x) -> Jompus(x))", "all x.(Improvist(x) -> Jompus(x))", "all x.(Impossible(x) -> Jompus(x))", "all x.(Illegal(x) -> Jompus(x))", "all x.(Impose(x) -> Jompus(x))", "all x.(Improvy(x) -> Jompus(x))", "all x.(Immersion(x) -> Jompus(x))", "all x.(Impossible(x) -> Jompus(x))"]}
{"id": "prontoqa_train_493", "nl": "Polly is a grimpus, Polly is a wumpus, and Polly is not a jompus.", "fol": "(grimpus(Polly) & wumpus(Polly) & -jompus(Polly))", "prediction": ["all x y z.((Polly(x) & Wormpus(y) & Jompus(z)) -> (As(x,y) & As(y,z)))", "(all x y z.(Polly(x) -> Grimpus(x)) & (Polly(y) -> Wumpus(y)) & (Polly(z) -> -Jompus(z)))", "(all x y z.(Plary(x) -> Grimpus(x)) & (Wumpus(y) -> Wumpus(y)) & (Jimpus(z) | -Jimpus(z))))", "all x.(Polly(x) -> (Grimpus(x) | Wumpus(x) | -Jompus(x)))", "(all x.(Pollly(x) -> Grimpus(x)) & all y.(Pollly(y) -> Wumpus(y)) & all z.(Polly(z) -> -Jompus(z))))", "(all x.(Polly(x) -> Grumpus(x)) & all y.(Polly(y) -> Wumpus(y)) & -Jimpus(y)))", "(all x y z.(Polly(x) -> Grimpus(x)) & (Polly(y) -> Wumpus(y)) & (Polly(z) -> -Jomes(z))))", "all x y z.((Polly(x) & Grimpus(y) & Wumpus(z)) -> (IsBarkley(x) | IsBarkley(z)))", "all x y z.((Polly(x) & Wumpus(y) & -Jompus(z)) -> (Grimpus(x) | Wumpus(y) | Numpus(z)))", "(all x y z.((Polly(x) & Grimpus(y)) -> Polly(x)) & ((Polly(z) & Humpus(z))) -> -Jampus(z)))", "all x y z.((Polly(x) & Grimpus(x) & Wumpus(y) & Polly(z)) -> (Cramp(x,y) & Wumpus(x,y) & -Jompus(z)))", "all x y z.((Polly(x) & Grimpus(x) & Polly(y) & Wumpus(z)) -> (Smooth(x) & Wumpus(y) & -Jumpus(z)))", "(all x.(Polly(x) -> Ripple(x)) & (Polly(x) -> Wumpus(x)) & (Polly(x) -> -Jompus(x))))", "(all x.(Polly(x) -> Grimpus(x)) | (Polly(x) -> Wumpus(x))) & (Polly(x) -> -Jompus(x))))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Polly(y) -> Wumpus(y)) & all z.(Polly(z) -> -Jompus(z))))", "exists x y z.(Ploy(x) & Grimpus(x) & Polly(y) & Wormpus(z) & -Jimpus(x))"]}
{"id": "prontoqa_train_494", "nl": "Sally is not a lempus, Sally is a sterpus, and Sally is a vumpus.", "fol": "(-lempus(Sally) & sterpus(Sally) & vumpus(Sally))", "prediction": ["all x.(Sally(x) -> (-Lempus(x) & Sterpus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Lempus(x)) & (Sterpus(x) & Vumpus(x)))", "all x y.((Sally(x) & Sterpus(y)) -> (-Lempus(x) & -Storpus(y) & -Vumpus(x)))", "(-Lempus(Sally) & Sterpus(Sally) & Vumpus(Sally))", "(all x.(Sally(x) -> -Lempus(x)) & (Sterpus(x) & Vumpus(x)))", "(all x.(Sally(x) -> FalseLempus(x)) & all y.(Storpus(y) -> FalseVumpus(y)))", "(all x y z.((Sally(x) & Lempus(y)) -> -Lempus(x)) & ((Sally(z) & Sterus(z))) -> Vumpus(z)))", "all x y z.((Sally(x) & Lempus(y) & Sterpus(z)) -> (-Lempus(x) | Sterpus(y) & Vumpus(z)))", "(all x.(Sally(x) -> -Lempus(x)) & (Sterpus(x) -> Sterpus(x)) & (Vumpus(x) -> Sally(x)))", "(exists x.(Sally(x) & -Lempus(x)) & exists y.(Sterpus(y) & InVumpus(y)))", "all x.(Sally(x) -> (-Lempus(x) | Sterpus(x) | Voompus(x)))", "(all x.(Sally(x) -> -Lempus(x)) & (Sterpus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Lempus(x)) & all y.(Sterpus(y) -> Sterpus(y)) & all z.(Vimpus(z) -> Spike(z)))", "Sally is not lempus, Sally is sterpus, Sally is vumpus.", "all x y z.((Sally(x) & Sterpus(y) & Vumpus(z)) -> (-Lempus(x) & Sterpus(y) & Vumpus(z)))", "(all x.(Sally(x) -> -Lempus(x)) & (Sterpus(x) | Vampire(x))))"]}
{"id": "prontoqa_train_495", "nl": "Sally is not a shumpus.", "fol": "-shumpus(Sally)", "prediction": ["Sally is not a shumpus.", "all x.(Sally(x) -> -Shumpus(x))", "-Shumpus(Sally)", "(-Moon(Sally))", "Sally & -Shumpus(s)", "Sally -Shumpus(Sally)", "Sally s.(Shumpus(S))", "Sally n\u2019exists y.(Shumpus(y) & Reaches(s) & Sally(z))", "Sally is not a shumpus.", "(-Shumpus(Sally))", "Sally is not a shumpus.", "(-Shumpus(Sally))", "Sally is not a shumpus.", "Sally is not a shumpus.", "Sally is not a shumpus.", "(-Shumpus(Sally,Sally))"]}
{"id": "prontoqa_train_496", "nl": "Wren is a gorpus, Wren is a sterpus, and Wren is not a brimpus.", "fol": "(gorpus(Wren) & sterpus(Wren) & -brimpus(Wren))", "prediction": ["all x y z.((Wren(x) & Gerp(y) & Sterepus(z)) -> (Gorpus(x) & Sensen(y) & -Brimpus(x)))", "(all x.(Wren(x) & Gorpus(x)) & ((Wren(x) & Sterepus(x))) -> -Brimpus(x)))", "(all x.(Wren(x) -> Gorpus(x)) & all y.(Wren(y) -> Sterpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "all x y z.((Wren(x) & Gorpus(y) & Sterus(z)) -> (Gorpus(x) & Sterus(x) & -Brimpus(x)))", "(all x.(Drown(x) -> Gorpus(x)) & all y.(Stutus(y) -> Sterus(y)) & all z.(Drown(z) -> -Brumpus(z))))", "all x y z.((Wren(x) & Gorpus(y) & Sterpus(z)) -> (Gorpus(x) & Sterpus(x) & -Brimpus(x)))", "(all x y z.(Wren(x) -> (Gorpus(x) | Sterpus(y))) & (Wren(z) -> (-Brimpus(z)))))", "all x y z.((Wren(x) & Gorpus(x) & Sterpus(y) & Brimpus(z)) -> (Gorpus(x) & Sterpus(y) & -Brimpus(z)))", "(all x.(Wren(x) -> Gorpus(x)) & all y.(Wren(y) -> Sterpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "all x y z.((Wren(x) & Gorpus(x) & Sterepus(y) & -Brimpus(z)) -> (Gorpus(x) & Sterepus(y) & -Brumpus(z)))", "all x y z.((Wren(x) & Gorpus(x) & Sterpus(y)) -> (-Brompus(z)))", "(all x.(Wren(x) -> Gorpus(x)) & ((Wren(x) & Steerpus(x))) | (-Brimpus(x)))))", "exists x.(Wren(x) & ((Gorpus(x) & -Brimpus(x)) | (-Brimpus(x)))))", "(all x y z.((Wren(x) & Gorpus(y)) -> Gorpus(x)) & ((Wren(z) & Sterpus(z)) -> -Brimpus(z)))", "(all x.(Wren(x) -> Gorpus(x)) & ((Wren(x) & Sterpus(x)) | (-Wren(x) & Brimpus(x)))))", "(all x.(Wren(x) -> Gorpus(x)) & ((Wren(x) & Sterpus(x))) & ((Wren(x) & -Brumpus(x))))"]}
{"id": "prontoqa_train_497", "nl": "Each numpus is a wumpus.", "fol": "all x. (numpus(x) -> wumpus(x))", "prediction": ["all x y.((Numpus(x) & Wumpus(y)) -> Usually(x,y))", "all x.(numpus(x) -> Wumpus(x))", "all x.(Nompus(x) -> Wumpus(x))", "all x.(Numerus(x) -> Kumpus(x))", "all x.(numpus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wumpus(x))", "exists x.(Nompus(x) & Wumpus(x))", "all x.(Nompus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Lumpus(x))", "all x.(Numpus(x) -> Wumpus(x))", "all x.(Nompus(x) -> Hush(x))", "all x.(Nompus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wampus(x))"]}
{"id": "prontoqa_train_498", "nl": "Fae is a sterpus, Fae is a lorpus, and Fae is not a wumpus.", "fol": "(sterpus(Fae) & lorpus(Fae) & -wumpus(Fae))", "prediction": ["(all x y z.(Fae(x) -> Sterpus(x)) & (Fae(y) -> Lorpus(y)) & (Fae(z) -> -Wumpus(z))))", "(all x y z.(Fawn(x) -> Sterpus(x)) & ((Fawn(y) & Lorpus(z)) | ((Fawn(y) & -Wumpus(z)))))", "all x.(Fae(x) -> ((Sterepus(x) & -Wumpus(x))))", "all x y z.((Fae(x) & Sterpus(y) & Legendus(z)) -> (Sterpus(x) | Lorpus(x) & -Wumpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Lorpus(x)) & -Wumpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & all y.(Fae(y) -> Lorpus(y)) & all z.(Fae(z) -> -Wumpus(z))))", "all x.(Fae(x) -> (Sterpus(x) & Lorpus(x) & -Wumpus(x)))", "(all x.(Fae(x) -> Sterepus(x)) & all y.(Fae(y) -> Lorpus(y)) & -Wumpus(y)))", "(all x.(Fae(x) -> Sterpus(x)) & all y.(Fae(y) -> Lorpus(y)) & -Wumpus(y)))", "(all x y z.((Fae(x) & Sterpus(y)) -> (Fae(x) & -Wumpus(z)) | (-Fae(x) & Lorpus(x))))", "all x y z.((Fae(x) & Sterpus(y) & Lopus(z)) -> (Sterpus(x) & -Wumpus(x)))", "all x y z.((Fae(x) & Sterpus(x) & Lorpus(y) & -Wumpus(z)) -> (Sterpus(x) | Lorpus(y) & -Fae(z)))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Lorpus(x)) & -Wumpus(x)))", "all x y z.((Fae(x) & Sterpus(x) & Lorpus(y) & -Wumpus(z)) -> (Fae(x) & -Fae(x)))", "(all x.(Fae(x) -> Mercudose(x)) & all y.(Fae(y) -> Lorpus(y)) & all z.(Fae(z) -> -Wumpus(z))))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Lorep(x)) & (Fae(x) -> -Wumpus(x)))"]}
{"id": "prontoqa_train_499", "nl": "Sam is not a vumpus, Sam is a yumpus, and Sam is a gorpus.", "fol": "(-vumpus(Sam) & yumpus(Sam) & gorpus(Sam))", "prediction": ["exists x y z.(Sam(x) & (-Vumpus(x) & -Yumpus(y) & -Gorpus(z)))", "all x y.(Sam(x) & (Vumpus(y) | Yampus(y) | Gorpus(y)))", "all x y z.((Sam(x) & Vempus(y) & Yumpus(z)) -> (-Vumpus(x) | Gorpus(x)))", "all x y z.((Sam(x) & Vimpus(y) & Yumpus(z)) -> (-Vimpus(x) & Yampus(y) & Gorpus(z)))", "all x y z.((Sam(x) & Vumpus(y) & Yumpus(z)) -> (-Vumpus(x) & -Yumpus(y) & -Gorpus(z)))", "all x y z.((Sam(x) & (-Vimpus(x) | Yuppos(y) | Gorpus(z))) -> (---BelongsTo(x,y) & -BelongsTo(x,z))))", "(all x.(Sam(x) -> -Vumpus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> Gorpus(x)))", "(-Vumpus(Sam) & -Yumpus(Sam) & Gorpus(Sam))", "(all x.(Sam(x) -> -Vumpus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> Gorpus(x)))", "(all x.(Sam(x) -> AlessiPummer(x)) & (Yumpus(x) & Gorpus(x)))", "(all x.(Sam(x) -> -Vumpus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> Gorpus(x)))", "all x y z.((Sam(x) & Sam(y) & Sam(z)) -> (-Vumpus(x) | (Yumpus(y) & Gorpus(z))))", "(all x.(Sam(x) -> -Vumpus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> Gorpus(x)))", "(all x.(Sam(x) -> -Vumpus(x)) & all y.(Youmpus(y) -> Gorpus(y)))", "all x y z.((Sam(x) & Vumpus(y) & Yumpus(z) & Gorpus(z)) -> (-Vumpus(x) & -Yumpus(y) & -Gorpus(z)))", "(all x.(Sam(x) -> -Vumpus(x)) & all y.(Sam(y) -> Yumpus(y)) & all z.(Sam(z) -> Gorpus(z))))"]}
{"id": "prontoqa_train_500", "nl": "Sam is not a zumpus.", "fol": "-zumpus(Sam)", "prediction": ["(-zumpus(sam))", "all x.(Sam(x) -> -Herbal(x))", "(-Zumpus(Sam))", "(-Zumpus(Sam))", "all x.(Sam(x) -> -Zombip(x))", "-Zumpus(Sam)", "-Tompus(sam)", "Sam is -Zumpus(Sam).", "all x.(Sam(x) -> -Zombipus(x))", "(-Zumpus(Sam))", "(-Zumpus(Sam))", "all x.(Sam(x) -> -Zimpus(x))", "(-Zumpus(Sam))", "all x.((Sam(x) & -Zumpus(x)) -> -Tompus(x))", "(-Zumpus(Sam))", "(-Zimmerpus(Sam))"]}
{"id": "prontoqa_train_501", "nl": "Every impus is a lempus.", "fol": "all x. (impus(x) -> lempus(x))", "prediction": ["exists x.(Impresario(x) & Lempus(x))", "all x.(Implement(x) -> Lempus(x))", "all x.(Improve(x) -> Lempus(x))", "all x.(Issue(x) -> Lempus(x))", "all x.(Erichia(x) -> Lempus(x))", "all x.(Ilerations(x) -> Lempus(x))", "all x.(Impossible(x) -> Lempus(x))", "all x.(IsLimpus(x) -> Detox(x))", "all x.(Ilises(x) -> Lempus(x))", "all x.(Ilision(x) -> Lempus(x))", "exists x.(Officiel(x) & Lempus(x))", "all x.(Impossible(x) -> Lempus(x))", "all x.(Improvised(x) -> Lempus(x))", "all x.(IsLempus(x) -> IsDust(x))", "all x.(IsLimpus(x) -> IsLimpus(x))", "all x.(IsLempus(x) -> Imperium(x))"]}
{"id": "prontoqa_train_502", "nl": "Wren is not a lempus, Wren is a zumpus, and Wren is a tumpus.", "fol": "(-lempus(Wren) & zumpus(Wren) & tumpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Lempus(x)) & (Tompus(x) | Tumpus(x))))", "all x y z.((Wren(x) & Lempus(y) & Zumpus(z)) -> (-Lempus(x) & Tompus(y) & Tumpus(z)))", "(all x y z.(Wren(x) -> -Lempus(x)) & (Wren(y) -> Tosp(y)) & (Wren(z) -> Tumpus(z)))", "(all x.(Wren(x) -> -Lempus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Tumpus(x)))", "(all x y z.(Wren(x) -> (-Lempus(x))) & ((Wren(y) & Zumpus(y)) -> Tumpus(z)))", "(all x.(Wren(x) -> -Lempus(x)) & all y.(Wren(y) -> Zumpus(y)) & (Wren(y) -> Tumpus(y))))", "all x y z.((Wren(x) & Zumpus(y) & Tumpus(z)) -> (-Lempus(x) & -Zombies(x) & -Tompus(y)))", "(all x y z.(Wren(x) -> -Lempus(x)) & ((Wren(y) & Zumpus(y) & Tumpus(z))))", "(all x.(Wren(x) -> -Lempus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> Tumpus(z))))", "(all x.(Wren(x) -> -Lempus(x)) & all y.(Wren(y) -> Zumpus(y))) & all z.(Wren(z) -> Tumpus(z))))", "all x y.((Wren(x) & Zumpus(y)) -> (-Lempus(x) & Tumpus(y)))", "all x y.((Wren(x) & Zumpus(y)) -> (-Lempus(x) & Tompus(y) & Tumpus(y)))", "(all x.(Wren(x) -> -Lempus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> Tumpus(z)))", "(all x.(Wren(x) & -Lempus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Tump(x))))", "all x y z.((Wren(x) & Zumpus(y) & Tumpus(z)) -> (-Lempus(x) & Zumpus(y) & Tumpus(z)))", "all x y z.((Wren(x) & Lempus(y) & Zumpus(z)) -> (-Lempus(x) & Tompus(y) & Tumpus(z)))"]}
{"id": "prontoqa_train_503", "nl": "Wren is not an impus.", "fol": "-impus(Wren)", "prediction": ["((Wren(Wren) -> -Impossible(Wren)))", "-Impossible(Wren)", "all x.(Wren(x) -> -Improvement(x))", "-Impedrement(Wren)", "(NonIllegal(Wren,Crown))", "all x.(Wren(x) -> -Impossible(x))", "Weren(Wren) & -Issueable(Wren))", "Wren -Impossible(w)", "-Implemented(Wren)", "Wren is not impus.", "Wren is not impused by the law.", "None.Rene(ren)", "(-Implementation(Wren))", "Wren is notImproved(Wren,Endurance)", "-IsWriten(ren)", "-IsRequired(Wren)"]}
{"id": "prontoqa_train_504", "nl": "Every grimpus is a yumpus.", "fol": "all x. (grimpus(x) -> yumpus(x))", "prediction": ["all x.(Smoothpus(x) -> Yumps(x))", "all x.(Grimpus(x) -> Yumpa(x))", "all x.(Grimpus(x) -> Yampus(x))", "exists x.(Grimpus(x) & Yumpos(x))", "all x.(Grimpus(x) -> Yumpus(x))", "all x.(Grimpus(x) -> Yumpus(x))", "all x.(Grumble(x) -> Yumpa(x))", "all x.(Grimpus(x) -> Yumpus(x))", "all x.(Grimpus(x) -> Yumpus(x))", "all x.(Grimpus(x) -> Yumpsum(x))", "all x.(Grimpus(x) -> Yumpus(x))", "all x.(Grimpus(x) -> Yumpus(x))", "all x.(EvilGruppus(x) -> Yumpah(x))", "all x.(Grimpus(x) -> Yampus(x))", "all x.(Grimpus(x) -> Yumpus(x))", "all x.(Grimpus(x) -> Yampus(x))"]}
{"id": "prontoqa_train_505", "nl": "Wren is a gorpus, Wren is not a yumpus, and Wren is a zumpus.", "fol": "(gorpus(Wren) & -yumpus(Wren) & zumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Gorpus(x) | -Yumpus(x) | Zumpus(x)))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> -Yumpus(x)) & (Wren(x) -> Zumpus(x)))", "all x y z w.((Wren(x) & Gorpus(x) & Wren(y) & Yumpus(z)) -> (-Yumpus(y) & Zumpus(w)))", "(all x y z.((Wren(x) & Gorpus(y)) -> (Rose(x) & NoYumpus(y) & Hinderpus(z)))", "(all x y z.(Wren(x) -> Gorpus(x)) & ((Wren(y) & -Yumpus(y))) -> Zumpus(z)))", "all x y.((Wren(x) & Gorpus(x)) -> (Yumpus(y) & Zumpus(z)))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> -Yumpus(x)) & (Wren(x) -> Zumpus(x)))", "(all x y z.(Wren(x) -> Gorpus(x)) & ((Wren(y) & -Yumpus(y)) -> Zumpus(z)))", "(all x.(Wren(x) -> Gorpus(x)) & (-Yumpus(x)) | (-Yumpus(x) & Tobpus(x))))", "(all x y z.(Wren(x) -> Gorpus(x)) & (Wren(y) -> -Yumpus(y)) & (Wren(z) -> Zumpus(z)))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> -Yumpus(x)) & (Wren(x) -> Zumpus(x)))", "(all x.(Wren(x) -> Gorpus(x)) & (-Yumpus(x) & -Tompus(x)))", "all x y z.((Wren(x) & Gorpus(x) & Wren(y) & Yumpus(z)) -> (Aboru(x) & Tospus(y)))", "(all x.(Wren(x) -> Gorpus(x)) & (-Yumpus(x) & -Zombie(x)))", "(all x.(Wren(x) -> Gorpus(x)) & all y.(Wren(y) -> -Yumpus(y))) & all z.(Wren(z) -> Zumpus(z)))", "all x y z.((Wren(x) & Gorpus(x) & Wren(y) & Chumpus(z)) -> (-Yumpus(x,y) & Zumpus(z)))"]}
{"id": "prontoqa_train_506", "nl": "Sam is a numpus and Sam is a zumpus and Sam is not an impus.", "fol": "(numpus(Sam) & zumpus(Sam) & -impus(Sam))", "prediction": ["exists x.(Sam(x) & Numpus(x) & Zumpus(x) & -Implicator(x))", "(all x.(Sam(x) -> Numpus(x)) & all y.(Sam(y) -> Zumpus(y))) & all z.(Sam(z) -> -Imposer(z)))", "(all x.(Sam(x) -> Numpus(x)) & all y.(Sam(y) -> Zumpus(y))) & all z.(Sam(z) -> -Impossible(z))))", "all x y.((Sam(x) & Numpus(x) & Zumpus(y)) -> (Nompus(x) & -Illiplips(y)))", "(all x.(Sam(x) -> Numpus(x)) & (Sam(x) -> Zumpus(x)) & -Imposition(x)))", "(all x.((Sam(x) & Numpus(x)) -> Zumpus(x)) & ((Sam(x) & -Implosable(x)) -> Numpus(x)))", "(all x.(Sam(x) -> Numpus(x)) & all y.(Sam(y) -> Zumpus(y)) & all z.(Sam(z) -> -Issue(z))))", "(all x y.(Number(x) -> Sam(x)) & (Zumpus(y) -> Sam(y))) & (Nompus(y) | Ambispheric(y)))", "(numpus(Sam) & zumpus(Sam) & -Impossible(Sam))", "(all x y.((SameDay(x) & Numpus(x)) -> Zurpus(x)) & ((SameDay(y) & -Impossible(y)) -> Numpus(y)))", "all x y z.((Sam(x) & Numpus(x) & Zumpus(y) & Hiero(z)) -> (Nompus(x) & Zumpus(y) & -Impossible(z)))", "all x y z.((Sam(x) & Numpus(x) & Zumpus(y) & Izrup(z)) -> (Numpus(x) & Zumpus(y) & -Izrup(z)))", "(all x.(Sam(x) -> Numpus(x)) & (Sam(x) -> Zumpus(x)) & (Sam(x) -> -Impossible(x)))", "all x.(Sam(x) -> (Numpus(x) & Zumpus(x) & -Ilvial(x)))", "(All x.(Sampus(x) -> Numpus(x)) & All y.(Sampus(y) -> Zumpus(y)) & -Impose(y)))", "all x.(Sam(x) -> (numpus(x) & zumpus(x) & -Issue(x)))"]}
{"id": "prontoqa_train_507", "nl": "Sterpuses are brimpuses.", "fol": "all x. (sterpus(x) -> brimpus(x))", "prediction": ["everything you see here. Sterpuses(Sterpus) -> Brimpus(Sterpus))", "all x.(Sterpus(x) -> Brimpus(x))", "all x.(Sternpus(x) -> Brimpus(x))", "all x.(Sterpus(x) -> Brimpuse(x))", "all x.(Sterpus(x) -> Brimpus(x))", "all x.(Sterpuse(x) -> Brimpuse(x))", "all x.(Sterpus(x) -> Brimpuse(x))", "all x.(Sterpus(x) -> Brimpuse(x))", "all x.(Sternpuse(x) -> Brimpuse(x))", "all x.(Sterpus(x) -> Brimpuse(x))", "all x.(Sterpus(x) -> Brimpus(x))", "all x.(Sterpus(x) -> Brimpus(x))", "all x.(Sterpus(x) -> Brimpuse(x))", "all x.(Sterpuse(x) -> Brimpus(x))", "all x.(Sterpus(x) -> Brimpus(x))", "all x.(Starpus(x) -> Brimpuse(x))"]}
{"id": "prontoqa_train_508", "nl": "Alex is an impus, Alex is a lempus, and Alex is not a brimpus.", "fol": "(impus(Alex) & lempus(Alex) & -brimpus(Alex))", "prediction": ["(all x y z.(Alex(x) -> Issued(x)) & (Alex(y) -> Lempus(y)) & (Alex(z) -> -Brimpus(z)))", "(all x.(Alex(x) -> Is(x)) & exists y.(Lempus(y) & exists z.(Brimpus(z) & -Is(x,z)))))", "all x.(Alex(x) -> (Impossible(x) | Lempus(x) | -Brimpus(x)))", "(all x.(Alex(x) -> Ersetze(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> -Brimpus(z))))", "(all x.(Alex(x) -> Isimpose(x)) & (Alex(x) -> Lempus(x)) & -Brimpus(x)))", "(all x.(Alex(x) -> Impossiv(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> -Brimpus(z))))", "(all x.(Alex(x) -> Impreza(x)) & (Alex(x) -> Lempus(x)) & (Alex(x) -> -Brimpus(x)))", "all x y.((Alex(x) & Lempus(y)) -> (Impossible(x) | Lempus(y) | -Brimpus(y)))", "(all x.(Alex(x) -> Impossible(x)) & all y.(Alex(y) -> Lempus(y)) & -Brimpus(y)))", "all x y z.((Alex(x) & Imperator(x) [Alex) & Lempus(y) & -Brimpus(z)) -> (Impose(x,y) & Lempus(y) & -Brimpus(z)))", "(all x y.(AlexAlex(x) -> Issue(x)) & (Alex(y) -> Lempus(y)) & (Alex(y) -> -Brimpus(y)))", "all x y z.((Alex(x) & Is(x) & Logby(y) & Legacy(z) & -Brimpus(z)) -> (Impose(x) | Lempus(y) & -Brimpus(y)))", "(all x.(Alex(x) -> Is(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> -Brimpus(z))))", "all x y z.((Alex(x) & Impossible(x) & Lempus(y) & -Brimpus(z)) -> (-Impossible(x) & Lempus(y) & Brimpus(z)))", "(all x y z.(Alex(x) & Impossible(x)) & (Lempus(y) & -Brimpus(z))) -> (AlexLimpus(x) & -Brimpus(y)))", "all x.(Alex(x) -> (Impossible(x) & Lempus(x) & -Brimpus(x)))"]}
{"id": "prontoqa_train_509", "nl": "Every zumpus is a dumpus.", "fol": "all x. (zumpus(x) -> dumpus(x))", "prediction": ["all x.(Toy(x) -> Dumpus(x))", "all x.(Tompus(x) -> Dumpus(x))", "all x.(Zumpus(x) -> Dumpus(x))", "all x.(Zumpus(x) -> Dumpus(x))", "all x.(Dumpus(x) -> Zumpus(x))", "all x.(Tompus(x) -> Dumpus(x))", "all x.(Zumpus(x) -> Dumpus(x))", "all x.(Zumpus(x) -> Dumpus(x))", "all x.(Zumpus(x) -> Dumpus(x))", "all x.(Tompus(x) -> Dumpus(x))", "also known as Dumpus(zumpus)", "tompus(x) -> Dumpus(x))", "all x.(Zumpus(x) -> Dumpus(x))", "all x.(Zumpus(x) -> Dumpus(x))", "all x.(Zumpus(x) -> Dumpus(x))", "all x.(Zumpus(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_510", "nl": "Fae is a brimpus and Fae is a shumpus and Fae is not a dumpus.", "fol": "(brimpus(Fae) & shumpus(Fae) & -dumpus(Fae))", "prediction": ["(all x y z.((Fae(x) & Brumpus(x) & Shumpus(y)) -> Brimpus(x)) & ((Fae(z) & Humpus(z)) -> -Dumpus(z)))", "all x y z.((Fae(x) & Brimpus(x) & Shumpus(y) & -Dumus(z)) -> (Brompus(x) & Humpus(y) & -Shumpus(z)))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> -Dumpus(x)))", "(all x.(Elephant(x) -> Brimpus(x)) & (Elephant(x) -> Shumpus(x)) & LickSus.(Elephant(x) & -Dumpus(x)))", "and all x y z.((Fae(x) & Brimpus(x) & Snompus(y)) -> (Brimpus(x) & Shumpus(y) & -Dumpus(z)))", "all x.(Fae(x) -> (Brimpus(x) & Humpus(x) & -Dumpus(x)))", "all x y.(Fae(x) & Brimpus(x) & Shumpus(y) & -Dumpus(x))", "all x.(Fae(x) -> (Brimpus(x) & Shumpus(x) & -Dumpus(x)))", "all x y z.((Fae(x) & Brimpus(x) & Shumpus(y) & Dumpus(z)) -> (Brimpus(x) & Sarumpus(y) & -Dumpus(z)))", "all x y z.((Fae(x) & Brumpus(y) & Humpus(z)) -> (Brimpus(x) & Shumpus(y) & -Dumpus(z)))", "(all x.(Fae(x) -> Birmpus(x)) & all y.(Fae(y) -> Humpus(y)) & all z.(Fae(z) -> -Dumpus(z))))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> -Dumps(x))))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Scrumpus(x)) & (Fae(x) -> -Dumpus(x)))", "all x y z.((Fae(x) & Brimpus(x) & Sammus(y)) -> (Brimpus(x) & Shumpus(y) & -Dumpus(z)))", "all x.(Fae(x) -> (Brimpus(x) & -Dupus(x)))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Humpus(x)) & -Dumpus(x)))"]}
{"id": "prontoqa_train_511", "nl": "Brimpuses are gorpuses.", "fol": "all x. (brimpus(x) -> gorpus(x))", "prediction": ["all x.(Brompus(x) -> Gorpuse(x))", "exists x.(Brompus(x) & Gorpus(x))", "all x.(Brimpus(x) -> Gorpuse(x))", "all x.(Brompus(x) -> Gorpus(x))", "all x.(Brimpus(x) -> Gorpus(x))", "all x.(Brompus(x) -> Gorpuse(x))", "all x y.((Brimpus(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Brimpus(x) -> Gorpus(x))", "all x.(Brompus(x) -> Gorpuse(x))", "all x.(Brimmer(x) -> Gorpuse(x))", "all x.(Brushuse(x) -> Gorpus(x))", "all x.(Brombuse(x) -> Gorpuse(x))", "all x.(Brompus(x) -> Gorpuse(x))", "all x.(Brichuse(x) -> Gorpus(x))", "all x.(Brimpus(x) -> Gorpus(x))", "all x.(Brompus(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_512", "nl": "Max is an impus and Max is not a gorpus and Max is a zumpus.", "fol": "(impus(Max) & -gorpus(Max) & zumpus(Max))", "prediction": ["(all x.(Max(x) -> Impeccable(x)) & ((Max(x) & -Gorpus(x)) | (-Max(x) & Zumpus(x)))))", "all x.((Max(x) & Implique(x)) | (-Gorpus(x) & Zumpus(x))))", "(all x y.((Max(x) & Is(x,z)) -> Impossible(x)) & ((Max(y) & -Is(y,z))) | (Max(y,z) & Hexagon(z)))))", "(all x y.((Max(x) & IsBenchmark(x)) -> IsBerlin(x)) & ((Max(y) & -IsGorpus(y)) | (-IsBenchmark(y)))))", "(all x.(Max(x) -> Implicator(x)) & ((Max(x) & -Gorpus(x))) & (Max(x) -> Zumpus(x))))", "(all x.(Max(x) -> Ivref(x)) & (Max(x) -> -Gorpus(x)) & (Max(x) -> Zumpus(x)))", "all x.(Max(x) -> (Impossible(x) & -Gorpus(x) & Zumpus(x)))", "all x.((Max(x) & Imperium(x)) | (-Gorpus(x)) | Zumpus(x)))", "(all x.(Max(x) -> IsRequired(x)) & all y.((Max(y) & -Gorpus(y)) -> Zumpus(y)))", "(all x.(Max(x) -> IsImpossible(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Zumpus(x)))", "(all x y z.(Max(x) -> Illegal(x)) & ((Max(y) & -Gorpus(y)) -> Zumpus(z))))", "(all x.(Max(x) -> Impossiv(x)) & (Max(x) -> -Gorpus(x)) & (Max(x) -> Zumpus(x))))", "(all x.(Max(x) -> Impunity(x)) & exists y.(Gorpus(y) & In(x,y))) & exists z.(Max(z) & Zumpus(z))))", "all x y.((Max(x) & Max(y)) -> (Issue(x,y) & -Gorpus(y) & Tospus(y)))", "all x.((Max(x) & IsImpossible(x)) -> (-Gorpus(x) & Zumpus(x)))", "(all x.(Max(x) -> Id\u00e9licator(x)) & ((Max(x) & -Iderpus(x)) -> Zumpus(x)))"]}
{"id": "prontoqa_train_513", "nl": "Grimpuses are brimpuses.", "fol": "all x. (grimpus(x) -> brimpus(x))", "prediction": ["all x.(Grimpuse(x) -> Brimpuse(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> (Brumpus(x) & Brimpuse(x)))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Brimpuse(x))", "(Brimpuses(Grompus) & Brimpuse(Grompus))", "all x.(Grimpus(x) -> Brimpuse(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Brimulus(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Brimpuse(x))", "all x y.((Grimmus(x) & Brimpus(y)) -> CanBeHaledBy(x,y))", "all x.(Grimpuse(x) -> Brimpuse(x))", "all x.(Grimpus(x) -> Brimpuse(x))", "all x.(Grimpus(x) -> Brimpuse(x))"]}
{"id": "prontoqa_train_514", "nl": "Rex is a gorpus and Rex is a lempus and Rex is not a brimpus.", "fol": "(gorpus(Rex) & lempus(Rex) & -brimpus(Rex))", "prediction": ["(all x.(Rex(x,gorpus) -> Gorpus(x)) & (Rex(x,lempus) -> -Brimpus(x)))", "all x y z.((Rex(x) & Gorpus(x) & Lempus(y) & Rex(z)) -> (Gorpus(x) & Lempus(y) & -Brimpus(z)))", "all x y z.((Rex(x) & Gorpus(x) & Lempus(y) & NumericBrimpus(z)) -> (IsGorpus(x) & IsLempus(y) & IsNotBrimpus(z)))", "all x.(Rex(x) -> (Gorpus(x) & Lempus(x) & -Brumpus(x)))", "(all x.(Rex(x) -> Gorpus(x)) & all y.((Rex(y) & Lempus(y))) -> -Brimpus(y)))", "(all x y.((Gorpus(x) & Redeep(y)) -> Gorpus(x)) & ((Lempus(y) & Redeep(y)) -> Brimpus(y)))", "(all x.(Rex(x) -> Gorpus(x)) & all y.((Rex(y) & Lempus(y))) -> -Brimpus(y)))", "(all x.(Rex(x) -> Gorpus(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Brimpus(x))))", "(all x.(Rex(x) -> Gorpus(x)) & all y.(Lempus(y) -> Lempus(y)) & all z.(Rex(z) -> -Brimpus(z))))", "(all x y z.(Rex(x) -> Gorpus(x)) & (Rex(y) -> Lempus(y)) & (Rex(z) -> -Bermpus(z))))", "all x y z.((Rex(x) & Gorpus(x) & Lempus(y) & -Brimpus(z)) -> (Gorpus(x) & Lempus(y) & -Brimpus(z)))", "(all x.(Rex(x) -> Gorpus(x)) & (Lempus(x) & -Filipano(x))))", "(all x.(Rex(x) -> Gorpus(x)) & (Lempus(x) | Brimpus(x))))", "all x y z.((Rex(x) & Gorpus(x) & Lempus(y) & Brimpus(z)) -> (Gorpus(x) & Lempus(y) & -Brimpus(z)))", "(all x.(Rex(x) -> Gorpus(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Brimpus(x)))", "(all x y.((Rex(x) & Gorpus(x)) -> Gorpus(x)) & ((Rex(y) & Lempus(y)) -> -Brimpus(y)))"]}
{"id": "prontoqa_train_515", "nl": "Rex is not a grimpus.", "fol": "-grimpus(Rex)", "prediction": ["Rex is notGrimps(Rex)", "Rex is notGrimpus(Rex)", "Rex -Grimppus(x)", "Rex is notGrimpus.", "Rex -Grimpus(Rex))", "Rex is not a Grimpus.", "all x.(Rex(x) -> -Grimpus(x))", "Rex is -Grimpus.", "(-Grimpus(Rex))", "Rex, of course, is notGrimpus(x)", "Rex is notGrisp(re) -> -Grisp(re))", "(Rex) & -Grinpus(Rex))", "the arrow of rex. (Grimpus(Rex)).", "all x.(Rex(x) -> -Grimpus(x))", "Rex & -Grimpus(x))", "all x.(Rex(x) -> -Grimpus(x))"]}
{"id": "prontoqa_train_516", "nl": "Every grimpus is a lorpus.", "fol": "all x. (grimpus(x) -> lorpus(x))", "prediction": ["all x.(Grimpus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x.(Grampus(x) -> Lorpus(x))", "all x.(Smoke(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lordpus(x))", "all x.(Grampus(x) -> Llorpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x.(Rumpus(x) -> Lorpus(x))", "all x.(Drumpus(x) -> Lion(x))", "all x.(Fruit(x) -> Lampus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Loomis(x))", "all x.(Grimpus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_517", "nl": "Sally is a vumpus, Sally is a yumpus, and Sally is not a lorpus.", "fol": "(vumpus(Sally) & yumpus(Sally) & -lorpus(Sally))", "prediction": ["exists x.(Sally(x) & (Vimpus(x) | Yumpus(x) | -Lorpus(x)))", "(all x.(Sally(x) -> Vampire(x)) & (Sally(x) -> Yumpus(x)) & (Sally(x) -> -Lorpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> Yampus(x)) & (Sally(x) -> -Lorpus(x)))", "(Chills-Calls(Sally,Vimpus) & Yampus(Sally) & -Lerus(Sally))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> Yumpus(x)) & (Sally(x) -> -Lorpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> Yumbos(x)) & (Sally(x) -> -Lorpus(x))))", "(all x.(Sally(x) -> Vumpus(x)) & all y.(Sally(y) -> Yumpus(y)) & all z.(Sally(z) -> -Lorpus(z))))", "all x.(Sally(x) -> (Vumpus(x) & Yumpus(x) & -Lorpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> Yampus(x)) & (Sally(x) -> -Lorpus(x)))", "(all x y z.(Sally(x) & Vampire(x) & Yuppus(y) & -Lorpus(z)) -> (Umpus(x,y) | Yup(y,z)))", "all x y.((Sally(x) & Vumpus(x) & Yampus(y) & -Lorpus(x)) -> (Vumpus(x) & Yampus(y) & -Lorpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & all y.(Sally(y) -> Yuppus(y)) & all z.(Sally(z) -> -Lorpus(z))))", "(all x.(Sally(x) -> Vumpus(x)) & all y.(Sally(y) -> Yumpus(y)) & all z.(Sally(z) -> -Lorpus(z))))", "(all x.(Sally(x) -> Vumpus(x)) & all y.(Sally(y) -> Yumpus(y)) & all z.(Sally(z) -> -Lorpus(z))))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> Yumpus(x)) & (Sally(x) -> -Lorpus(x))))", "(all x.(Sally(x) -> Vuxor (x)) & (Sally(x) -> Yukon(x)) & (Sally(x) -> -Lorpus(x))))"]}
{"id": "prontoqa_train_518", "nl": "Jompuses are brimpuses.", "fol": "all x. (jompus(x) -> brimpus(x))", "prediction": ["all x.(Jompuse(x) -> Brimpus(x))", "all x.(Jimpus(x) -> Brimpus(x))", "all x.(Jompuse(x) -> Brimpuse(x))", "all x.(Jompuse(x) -> Brimpuse(x))", "all x.(Jompuse(x) -> Brimpus(x))", "all x.(Jompuse(x) -> Brimpuse(x))", "all x.(Jompuse(x) -> Brimpuse(x))", "all x.(Jompuse(x) -> Brimpuse(x))", "all x.(Jompuse(x) -> Brimpus(x))", "all x.(Jompuse(x) -> Brimpuse(x))", "all x.(Jimpus(x) -> Brimpuse(x))", "all x.(Jompuse(x) -> Brimpus(x))", "all x.(Mommus(x) -> Brimpuse(x))", "all x.(Jompuse(x) -> Brimpuse(x))", "all x.(Jompuse(x) -> Brimpuse(x))", "all x.(Jompuse(x) -> Brimbus(x))"]}
{"id": "prontoqa_train_519", "nl": "Wren is an impus and Wren is not a brimpus and Wren is a dumpus.", "fol": "(impus(Wren) & -brimpus(Wren) & dumpus(Wren))", "prediction": ["all x y z.((Wren(x) & Imposer(x) & Wren(y) & Dumpus(z)) -> (-Brimpus(y) & -Brimpus(y)))", "all x y.((Wren(x) & Wren(y)) -> (Impossible(x) & -Bribus(y) & Dumpus(y)))", "(all x.(Wren(x) -> Impossible(x)) & (-(Wren(x) & Brimpus(x))) | (-Wren(x) & Dumpus(x))))", "(all x.(Wren(x) -> Impossible(x)) & (Wren(x) -> -Brimpus(x)) & (Wren(x) -> Dumpus(x)))", "all x.((Wren(x) -> (Implementation(x) | -Brumpus(x) | Dumpus(x)))", "all x y.((Wren(x) & Impossible(x) & Wren(y)) -> (-Brimpus(y) & Dumpus(y)))", "all x y z.((Wren(x) & impus(x) & Wren(y) & Bumbrus(y) & Dumpus(z)) -> (Immers(x) & -Brompus(y) & Dumpus(z)))", "(all x.(Wren(x) -> IsInstrument(x)) & all y.(Wren(y) -> -Imployee(y))) & all z.(Wren(z) -> Dumpus(z))))", "all x y.((Wren(x) & Imposer(x)) -> (-Element(x) & Brimpus(y) & Dumpus(x)))", "(all x.(Wren(x) -> IsExercice(x)) & all y.(Wren(y) -> -Brimpus(y))) & all z.(Wren(z) -> Dumpus(z))))", "(all x.(Wren(x) -> Impeccator(x)) & (-Bloompus(x) & -Dumpus(x))))", "all x y z.((Wren(x) & Implenish(x) & Wren(y) & Brimpus(y) & Dumpus(z)) -> ((Impossible(x) | Dumpus(y))))", "All x y z.((Wren(x) & Aspirator(y) & Wren(z)) -> (Impossible(x) & -Brimpus(z) & Dumpus(x)))", "(all x.(Wren(x) -> IstImpossible(x)) & (Wren(x) -> -Impossible(x)) & (Wren(x) -> Dumpus(x)))", "all x y z.((Wren(x) & Impossible(x) & Wren(y) & Brimpus(z)) | (Dumpus(y) & Wren(z))))", "all x y z.((Wren(x) & Imperium(y) & Wren(z) & -Brimpus(w)) -> (Impossible(x) & Dumpus(z)))"]}
{"id": "prontoqa_train_520", "nl": "Max is a shumpus, Max is not a yumpus, and Max is a brimpus.", "fol": "(shumpus(Max) & -yumpus(Max) & brimpus(Max))", "prediction": ["(all x.(Max(x) -> Humpus(x)) & (-Max(x) -> Yumpus(x)) & (Max(x) -> Brimpus(x))))", "(all x.(Max(x) -> Shumpus(x)) & -Yumpus(x)) & all y.(Max(y) -> Brimpus(y)))", "all x y z.((Max(x) & Humpus(y) & Yumpus(z)) -> (IsShumpus(x) | IsYumpus(z) | IsBrimpus(z)))", "(all x.(Max(x) -> Shumpus(x)) & (Max(x) -> -Yumpus(x)) & (Max(x) -> Brimpus(x)))", "all x y z.((Max(x) & Humpus(y) & Yumpus(z)) -> (Shumpus(x) & NoYumpus(x) & Brimpus(x)))", "(all x.(Max(x) -> Shumpus(x)) & (-Max(x) -> Yumpus(x)) & (-Max(x) -> Brimpus(x)))", "(all x.(Max(x) -> Humpus(x)) | (Max(x) -> -Yumpus(x))) & (Max(x) -> Brimpus(x)))", "(all x.(Max(x) -> Humpus(x)) & (Max(x) -> -Yumpus(x)) & (Max(x) -> Brimpus(x)))", "(all x.(Max(x) -> Humpus(x)) & ((Max(x) -> -Yumpus(x))) & ((Max(x) -> Brimpus(x))))", "all x y z.((Max(x) & Humpus(y) & Yampus(z)) -> (Shumpus(x) | -Yumpus(x) & Brimpus(x)))", "(all x.(Max(x) -> Shumpus(x)) & (Max(x) -> -Yumpus(x)) & (Max(x) -> Brimpus(x)))", "(all x.(Max(x) -> Humpus(x)) & all y.(Max(y) -> -Yumpus(y))) & all z.(Max(z) -> Brimpus(z)))", "(all x y z.((Max(x) & Humpus(y)) -> (AsShumpus(x) & -AsYumpus(y)) & ((Max(z) & Brimpus(z)) -> (AsBrimpus(z))))", "(all x.(Max(x) -> Sumpus(x)) & all y.(Max(y) -> -Yumpus(y)) & all z.(Max(z) -> brimpus(z))))", "all x y.((Max(x) & Shumpus(x) & -Yumpus(y)) -> Brimpus(x))", "all x y z.((Max (x) & Shumpus(y) & Yumpus(z)) -> -Yumpus(x) & Brimpus(x))"]}
{"id": "prontoqa_train_521", "nl": "Every sterpus is a lorpus.", "fol": "all x. (sterpus(x) -> lorpus(x))", "prediction": ["all x.(Sterpus(x) -> Lorpus(x))", "all x.(Sterpus(x) -> Lorpus(x))", "all x.(Steerpus(x) -> Lorpus(x))", "all x.(Sterpus(x) -> Lorpus(x))", "all x.(Sterepus(x) -> Lorpus(x))", "all x.(Streat(x) -> Lorpus(x))", "all x.(Sterepus(x) -> Lorpus(x))", "all x.(Stuss(x) -> Lorpus(x))", "all x.(Sterpus(x) -> Lurpus(x))", "all x.(Steerpus(x) -> Lorpus(x))", "all x.(Sterpus(x) -> Lorpus(x))", "all x.(Sterpus(x) -> Lorpus(x))", "all x.(Sterpus(x) -> Lorpus(x))", "all x.(Sterpus(x) -> lorpus(x))", "all x.(Startpus(x) -> Lorpus(x))", "all x.(Starpus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_522", "nl": "Alex is not a lorpus and Alex is a zumpus and Alex is a brimpus.", "fol": "(-lorpus(Alex) & zumpus(Alex) & brimpus(Alex))", "prediction": ["(all x.(Alex(x) -> -Lorpus(x)), all y.(Alex(y) -> Zumpus(y)) & all z.(Alex(z) -> Brimpus(z))))", "(all x y z.((Alex(x) & Lorpus(y) & Tompus(z)) -> -Lorpus(x)) & ((Alex(x) & Tompus(x)) -> Brimpus(x)))", "(all x.(Alex(x) -> -Lorpus(x)) & ((Alex(x) & Zumpus(x))) | (Alex(x) & Brimpus(x))))", "exists x.(Alex(x) & -Lorpus(x) & Zumpus(x) & Brimpus(x))", "all x y.((Alex(x) & -Lorpus(x) & Zumpus(x) & Brimpus(y)) -> -Gloria(x))", "(all x.(Alex(x) -> -Lorpus(x)) & all y.(Alex(y) -> Zumpus(y)) & all z.(Alex(z) -> Brimpus(z))))", "all x.(Alex(x) -> (-Lorpus(x) & Zumpus(x) & Bumpus(x)))", "(all x.(Alex(x) -> -Lorpus(x)) & all y.(Alex(y) -> Zumpus(y))) & all z.(Alex(z) -> Brimpus(z)))", "(all x.(Alex(x) & -Lorpus(x)) & all y.(Alex(y) -> Zumpus(y)) & all z.(Alex(z) -> Brimpus(z))))", "(all x.(Alex(x) -> -Lorph(x)) & all y.(Alex(y) -> Zumpus(y))) & all z.(Alex(z) -> Brimpus(z)))", "(all x.(Alex(x) -> -Lorpus(x)) & all y.(Aznu(y) -> Zumpus(y)) & all z.(Brimpus(z) -> -Lorpus(x)))", "all x.((Alex(x) & -Lorpus(x)) -> Zumpus(x)) & (Alex(x) -> Brimpus(x)))", "(all x.(Alex(x) -> -Lorph(x)) & all y.(Alex(y) -> Zumpus(y))) & all z.(Alex(z) -> Brimpus(z)))", "all x y z.((Alex(x) & Lorpus(y) & Zumpus(z)) -> (-Lorpus(x) & Toumpus(x) & Brimpus(x)))", "(all x y z.((Alex(x) & Lorpus(y) & Zumpus(z)) -> -AlexLorpus(x)) & ((Alex(x) & Zumpus(z)) -> Brimpus(x)))", "all x y z.((Alex(x) & Lorpus(y) & Zumpus(z)) -> (-Lorpus(x) & Tosspus(x) & Brimpus(x)))"]}
{"id": "prontoqa_train_523", "nl": "Each jompus is an impus.", "fol": "all x. (jompus(x) -> impus(x))", "prediction": ["all x.(Jomex(x) -> IsImpossed(x))", "all x.(Jompus(x) -> Isolated(x))", "all x.(Jimpus(x) -> IsImpossible(x))", "all x.(Jompus(x) -> Impossible(x))", "all x.(Jompus(x) -> Idios(x))", "all x.(Jompus(x) -> IsImprovement(x))", "all x.(Jompus(x) -> IsImplementation(x))", "all x.(Jompus(x) -> Impossible(x))", "all x.(Jompus(x) -> Hiero(x))", "all x.(Jompus(x) -> IsImprovist(x))", "all x.(Jompus(x) -> IsVersion(x))", "all x.(Jompus(x) -> Isolated(x))", "all x.(Jompus(x) -> IsImplemented(x))", "all x.(Jompus(x) -> IsImplication(x))", "all x.(Jompus(x) -> Instituto(x))", "all x.(Jompus(x) -> Impossible(x))"]}
{"id": "prontoqa_train_524", "nl": "Alex is a gorpus and Alex is a dumpus and Alex is not an impus.", "fol": "(gorpus(Alex) & dumpus(Alex) & -impus(Alex))", "prediction": ["(all x.(Alex(x) -> Gorpus(x)) & (Alex(x) -> Dumpus(x)) & -Ilias(x)))", "all x y z.((Alex(x) & G\u00f6rpus(x) & Dumpus(y) & -Impossible(z)) -> (Gorpus(x) & Dumpus(y)))", "(all x.(AlexAlex(x) -> Gorpus(x)) & all y.(AlexAlex(y) -> Dumpus(y))) & all z.(AlexAlex(z) -> -Impossum(z)))", "all x y z.((Alex(x) & Gorpus(x) & Dumpus(y) & -Impossible(z)) -> [x,y,z)))", "all x.(Alex(x) -> (Gorpus(x) & Dumpus(x) & -Improved(x)))", "(all x.(Alex(x) -> Gorpus(x)) & (Alex(x) -> Dumpus(x)) & -Illustrator(x)))", "all x.(Alex(x) -> (Gorpus(x) & Dumpus(x) & -Iliquis(x)))", "(all x.(Alex(x) -> Gorpus(x)) & (Alex(x) -> Dumpus(x)) & -Implicator(x)))", "all x y.((Alex(x) & Gorpus(x) & Dumpus(y)) -> -Ismuel(z))", "(all x y.((Alex(x) & Gorpus(x)) -> Dumpus(x)) & ((Alex(y) & -Impressum(y)) -> Dumpus(y)))", "all x.(Alex(x) -> (Gorpus(x) & Dumpus(x) & -Issue(x)))", "(all x.(Alexa(x) -> Gorpus(x)) & all y.(Alexa(y) -> Dumpus(y)) & -Alexa(z)))", "all x y z.((Alex(x) & Gorpus(x) & Dumpus(y)) -> (Both(x,y) & -Impermiss(z)))", "all x y.((Alex(x) & Gorpus(x) & Dumpus(y)) -> -Impossum(x))", "all x y.((Alex(x) & Gorpus(x) & Dumpus(y)) -> ((Alex(x) & -Imperial(x))))", "all x.(Alex(x) -> (Gorpus(x) & Dumpus(x) & -Iliom(x)))"]}
{"id": "prontoqa_train_525", "nl": "Each zumpus is a gorpus.", "fol": "all x. (zumpus(x) -> gorpus(x))", "prediction": ["all x.(Tompus(x) -> Gorpus(x))", "all x.(Zympus(x) -> Gorpus(x))", "all x.(Tompus(x) -> Gorpus(x))", "all x.(Topper(x) -> Gorpus(x))", "all x.(Tompus(x) -> Gorpus(x))", "all x.(Zamerpus(x) -> Gorpus(x))", "all x.(Zimmer(x) -> Gorpus(x))", "all x.(Zumpus(x) -> Gorpus(x))", "all x.(Tompus(x) -> Gorpus(x))", "all x.(Zumpus(x) -> Gorpus(x))", "all x.(Zumpus(x) -> Gorpus(x))", "all x.(ToyPub(x) -> Gorpus(x))", "all x.(Zumpus(x) -> Gorpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Zimpus(x) -> Gorpus(x))", "all x.(Tompus(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_526", "nl": "Fae is a shumpus and Fae is a brimpus and Fae is not a gorpus.", "fol": "(shumpus(Fae) & brimpus(Fae) & -gorpus(Fae))", "prediction": ["(all x.(Fae(x) -> Humpus(x)) & (Fae(x) -> Brimpus(x)) & -Fae(x)))", "all x y z.((Fae(x) & Shumpus(x) & Brimpus(y) & -Gorpus(z)) -> (Shumpus(x) & Brimpus(y) & -Brompus(z)))", "all x y z.((Fae(x) & Scumpus(y) & Brimpus(z)) -> (Shumpus(x) & Brimpus(y) & -Gorpus(z)))", "(all x.(Fae(x) -> Humpus(x)) & (Fae(x) -> Brimpus(x)) & -Fae(x)))", "(all x.(Fae(x) -> Shinmu (x))) & ((Fae(x) -> Brimpus(x))) & (Fae(x) -> -Gorpus(x))))", "(all x.(Fae(x) -> Humpus(x)) & (Fae(x) -> Brimpus(x)) & -Gorpus(x)))", "(all x.(Fae(x) -> Shumpus(x)) & (Fae(x) -> Brimpus(x)) & -Gerpus(x)))", "all x.((Fae(x) & Humpus(x)) | (Fae(x) & Brimpus(x)) & -Gorpus(x)))", "(all x.(Fae(x) -> Humpus(x)) & (Fae(x) -> Brimpus(x)) & -Guerpus(x)))", "(all x.(Fae(x) -> Shumpus(x)) & exists y.(Brimpus(y) & exists z.(Gorpus(z) & -Shumpus(z))) & exists w.(Brimpus(w) & LocatedIn(w,x))))", "all x y z.((Fae(x) & Shumpus(x) & Brimpus(y) & Garnish(z)) -> (Shumpus(x) & Brimpus(y) & -Gorpus(z)))", "(all x.(Schumpus(x) & All y.(Brimpus(y))) -> (Kimmy(x) & Shumpus(x))) & (Brimmy(y) -> -Gorpus(y)))", "(all x.(Feacher(x) -> Shumpus(x)) & (Brimpus(x) -> Brimpus(x)) & (Feacher(x) -> -Gorpus(x)))", "all x y z.((Fae(x) & Simpans(y) & Brimpus(z)) -> (Shumpus(x) & Brimpus(z) & -Gorpus(z)))", "(all x.(Shumpus(x) -> FaeShumpus)) & (Brimpus(x) -> FaeBrimpus)) & (Gorpus(x) -> -FaeShumpus(x)))", "all x y z.((Fae(x) & Shumpus(y) & Brimpus(z)) -> (Shumpus(x) & Brimpus(x) & -Gorpus(x)))"]}
{"id": "prontoqa_train_527", "nl": "Vumpuses are jompuses.", "fol": "all x. (vumpus(x) -> jompus(x))", "prediction": ["all x.(Volumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Juppet(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompuse(x))", "all x.(Vumpus(x) -> (Jomepus(x) & Fruit(x)))", "all x.(Vumpus(x) -> Jompuse(x))", "all x.(Vumpus(x) -> Jompuse(x))", "all x.(Vumpus(x) -> Jompuse(x))", "all x.(Vumpus(x) -> Jompuse(x))", "all x.(Vumpus(x) -> Jompuse(x))", "all x.(Vumpus(x) -> Jompuse(x))", "all x.(Vumpus(x) -> Jompuse(x))", "all x.(Vumpus(x) -> Jompuse(x))", "all x.(Vumpus(x) -> Jompuse(x))", "all x.(Vumpus(x) -> Jompuse(x))", "all x.(Vumpus(x) -> Jompuse(x))"]}
{"id": "prontoqa_train_528", "nl": "Stella is not a jompus, Stella is a lorpus, and Stella is a tumpus.", "fol": "(-jompus(Stella) & lorpus(Stella) & tumpus(Stella))", "prediction": ["(all x.(Starta(x) -> -Jompus(x)) & all y.(Starta(y) -> Lorpus(y)) & all z.(Starta(z) -> Tumpus(z))))", "(all x y z.((Stella(x) & Jompus(y)) -> -Attributes(x,y)) & ((Stella(z) & Lorpus(z)) -> -Stella(z))) & ((Stella(z) & Tumpus(z)) -> Has(x,z))))", "(all x.(Stella(x) -> -Jompus(x)) & all y.(Lorpus(y) & Tumpus(y)))", "(all x.(Stella(x) -> -Jompus(x)) & (Lorpus(x) | Tumpus(x))))", "(all x.(Halloy-Jimpus(x) -> -Jompus(x)) & (Lorpus(x) -> Hybrid(x)) & (Tumpus(x) -> Hazel(x)))", "(all x.(Stella(x) -> -Jompus(x)) & (Stella(x) -> Lorpus(x)) & (Stella(x) -> Tumpus(x)))", "all x y z.((Stella(x) & Lord(y) & Moose(z)) -> (-Jompus(x) & Lurpus(y) & Tumpus(z)))", "(all x.(Stella(x) -> -Jompus(x)) & all y.(Tumpus(y) -> Lorpus(y)))", "(all x y.((Stella(x) & Jompus(y)) -> -Dompus(x)) & ((Stella(x) & Lorpus(y)) -> Tumpus(x)))", "(all x y z.((Stella(x) & Jompus(y)) -> -Jompus(x)) & ((Stella(x) & Lorpus(z)) -> Tortoise(x)))", "(all x.(Stella(x) -> -Jompus(x)) & (Lorpus(x) | Tumpus(x))))", "(all x.(Stella(x) -> -Jompus(x)) & (Stella(x) -> Lymphatic(x)) & (Stella(x) -> Tumpus(x)))", "all x y z.((Stella(x) & Jompus(y) & Morpus(z)) -> (-Jompus(x) | -Lorpus(x) & Tumpus(x)))", "all x y z.((Stella(x) & Jompus(y) & Lorpus(z)) -> (-Jompus(x) & -Lorpus(y) & Tumpus(z)))", "(all x.(Stella(x) -> -Jompus(x)) & exists y.(Lorpus(y) & exists z.(Tumpus(z) & WorksWith(x,z)))))", "(all x.(Stella(x) -> -Jompus(x)) & all y.(Lorpus(y) -> Tumpus(y))))"]}
{"id": "prontoqa_train_529", "nl": "Tumpuses are gorpuses.", "fol": "all x. (tumpus(x) -> gorpus(x))", "prediction": ["all x.(Tumpus(x) -> Hormpus(x))", "all x.(Tumpuse(x) -> Gorpuse(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumulus(x) -> Osmosis(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Torpus(x))", "all x.(Tumpouse(x) -> Gorpuse(x))", "all x.(Tumpet(x) -> Gorpus(x))", "all x.(Tumpuse(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpuse(x))", "all x.(Tumpus(x) -> (Gorpus(x) & Contains(x,y)))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumulus(x) -> Gorpus(x))", "all x.(Tumpuse(x) -> Gorpus(x))", "all x.(Tumpuse(x) -> Gorpus(x))", "all x.(Tumpuse(x) -> Gorpuse(x))"]}
{"id": "prontoqa_train_530", "nl": "Sally is not a gorpus, Sally is a zumpus, and Sally is a rompus.", "fol": "(-gorpus(Sally) & zumpus(Sally) & rompus(Sally))", "prediction": ["(-Gorpus(Sally) & Zumpus(Sally) & Rompus(Sally))", "all x.((Sally(x) & -Gorpus(x)) -> Zumpus(x)) & (Rompus(x) -> -Gerpus(x)))", "(-Gorpus(Sally) | Zumpus(Sally) | Rompus(Sally)))", "all x y.((Sally(x) & Tosh(y)) -> (-Gorpus(x) | Romanus(y)))", "(all x.(Sally(x) -> -Gorpus(x)) & (Tompus(x) | Rompus(x)))", "(all x y z.((Sally(x) & Gorpus(y) & Zumpus(z)) -> -Gorpus(x)) & ((Sally(x) & Rompus(x)) -> Tosh(x)))", "(all x.(Sally(x) -> -Gorpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> Rompus(x)))", "((Sally(s) & -Gorpus(s)) | (Sally(s) & Zumpus(s))) | (Sally(s) & rompus(s)))", "(all x.(Sally(x) -> -Gorpus(x)) & all y.(Sally(y) -> Zumpus(y)) & all z.(Sally(z) -> Rompus(z))))", "all x y z.((Sally(x) & Gorpus(y) & Zumpus(z)) -> (-Gorpus(x) & -Tompus(x) & -rompus(x)))", "(all x.(Sally(x) -> -Gorpus(x)) & all y.(Sally(y) -> Zumpus(y)) & all z.(Sally(z) -> Rompus(z))))", "(all x.(Sally(x) -> -Gorpus(x)) & all y.(Sally(y) -> Zumpus(y)) & all z.(Sally(z) -> Rompus(z))))", "(all x.(Sally(x) -> -Gorpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> Rompus(x)))", "(all x.(Sally(x) -> -Gorpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> Rompus(x)))", "(\u2013Gorpus(Sally) & -Tompus(Sally) & Rompus(Sally))", "(-Gorpus(Sally) | Zumpus(Sally) | Rompus(Sally)))"]}
{"id": "prontoqa_train_531", "nl": "Dumpuses are wumpuses.", "fol": "all x. (dumpus(x) -> wumpus(x))", "prediction": ["all x.(Dumpuse(x) -> Wumpus(x))", "all x.(Dumpuse(x) -> Wumpus(x))", "all x.(Dumpuse(x) -> Wompus(x))", "all x.(Dumpuse(x) -> Wumpus(x))", "all x.(Dumpuse(x) -> Wampus(x))", "all x.(Dumpuse(x) -> Wumpus(x))", "all x.(Dumpuse(x) -> Wumpus(x))", "all x.(Dumpuse(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpuse(x) -> Wumpus(x))", "all x.(Dumpuse(x) -> Wampus(x))", "all x.(Dumpuse(x) -> Wumpus(x))", "all x.(Dumpuse(x) -> Wumpus(x))", "all x.(Dumpuse(x) -> Wumpus(x))", "all x.(Dumpuse(x) -> Wampus(x))", "(Wumpus(dumpus)"]}
{"id": "prontoqa_train_532", "nl": "Alex is a vumpus and Alex is not a wumpus and Alex is a grimpus.", "fol": "(vumpus(Alex) & -wumpus(Alex) & grimpus(Alex))", "prediction": ["all x y z.((Alex(x) & Vampis(y) & Wumpus(z)) -> (Vampus(x) & -Wumpus(y) & Grimpus(z)))", "all x y.((Alex(x) & Vinsum(x)) -> (-Wumpus(y) & Grimpus(x)))", "all x y.((Alex(x) & NoWumpus(x)) -> (Vimpus(x) & Grimpus(y)))", "all x.((Alex(x) & Vumpus(x)) -> (-Wumpus(x) & Grimpus(x)))", "all x.(Alex(x) -> (Vumpus(x) & -ZerfyWumpus(x) & Grimpus(x)))", "all x y z.((Alex(x) & Vumpus(x) & Alex(y) & Grumpus(z)) -> (-Wumpus(y) & Grumpus(z)))", "(all x.(Alex(x) -> Vumpus(x)) & (Alex(x) -> -Wumpus(x)) & (Alex(x) -> Grimpus(x)))", "(all x.(Alex(x) -> Varmpus(x)) & all y.(Alex(y) -> -Wumpus(y))) & all z.(Alex(z) -> Grimpus(z))))", "all x y z.((Alex(x) & Vumpus(x) & Alex(y) & -Wumpus(y)) -> (Surprise(z) & Cramp(z)))", "all x y.((Alex(x) & Vumpus(x) & Alex(y) & -Wumpus(y)) -> Grimpus(x))", "(all x.(Alex(x) -> Vulmpus(x)) & (Alex(x) -> -Wumpus(x)) & (Alex(x) -> Grimpus(x)))", "(all x.(Alex(x) -> Vumpus(x)) & (Alex(x) -> -Wumpus(x)) & (Alex(x) -> Grimpus(x)))", "(all x.(Vumpus(x) -> -Wumpus(x)) & (Grillpus(x) -> (Vumpus(x) & -Wumpus(x))))", "all x y z.((Alex(x) & vumpus(x) & Alex(y) & Wumpus(y) & Grimpus(z)) -> (Also-Wumpus(x) & -Smiley(y)))", "all x.((Alex(x) & Vmpus(x)) -> (-Wumpus(x) & -Grimpus(x)))", "all x y z.((Alex(x) & Volumpus(y) & Wimpus(z)) -> ((Vumpus(x) & -Wumpus(z) & Grimpus(x)) | (-Wumpus(x) & Grimpus(x))))"]}
{"id": "prontoqa_train_533", "nl": "Each impus is a numpus.", "fol": "all x. (impus(x) -> numpus(x))", "prediction": ["all x.(Impact(x) -> Number(x))", "all x.(Impune(x) -> Numpus(x))", "all x.(Issue(x) -> Numpus(x))", "all x.(Impose(x) -> Number(x))", "all x.(Impossible(x) -> Numpus(x))", "exists x.(Impact(x) & Numpus(x))", "all x.(Impedus(x) -> Numpus(x))", "all x.(Improve(x) -> Numpus(x))", "all x.(Impossible(x) -> Number(x))", "all x.(Impossible(x) -> Numpus(x))", "all x.(Impact(x) -> Numpus(x))", "all x.(Impossible(x) -> Numpus(x))", "all x.(Impossible(x) -> Numpus(x))", "all x.(Impact(x) -> Numpus(x))", "exists x.(Impossible(x) & Number(x))", "all x.(Impossible(x) -> Numpus(x))"]}
{"id": "prontoqa_train_534", "nl": "Alex is a tumpus, Alex is a lorpus, and Alex is not a numpus.", "fol": "(tumpus(Alex) & lorpus(Alex) & -numpus(Alex))", "prediction": ["(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> -Numpus(z))))", "all x y z.((Alex(x) & Tumpus(x) & Lorpus(y) & Numpus(z)) -> (Tumpus(x) | Larpus(y) & -Tumpus(z)))", "all x.(Alex(x) -> (Tumpus(x) & Lurpus(x) & -Numpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Lorpus(x) | -Numpus(x)))", "all x.(Alex(x) -> (Tumpus(x) & Lorpus(x) & -numpus(x)))", "(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> Lorpus(y)) & -Numpus(y)))", "all x.(Alex(x) -> (Tumpus(x) & Lorpus(x) & -Numpus(x)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> Lark(x)) & -Alex(x)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> Lorpus(x)) & -Alex(x)))", "all x.(Alex(x) -> (Tumpus(x) & Lops(x) & -Numpus(x)))", "all x y z.(Trump(x) & Tumpus(y) | Gripper(z) | -Numpus(z)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> Lorpus(x)) & (Alex(x) -> -Numpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | (Lucess(x) & Lopiss(x))) & -Numpus(x)))", "all x y z.((Alex(x) & Tumpus(y) & Lorpus(z)) -> (Tumpus(x) | Larpus(y) & -Numpus(z)))", "(all x.(Alex(x) -> Tumpet(x)) & all y.(Alex(y) -> Lorpus(y))) & all z.(Alex(z) -> -Numpus(z))))", "all x y z.((Alex(x) & Tumpus(x) & Lorpus(y) & -Numpus(z)) -> (Tumpus(x) & Larkus(y) & -Tumpus(z)))"]}
{"id": "prontoqa_train_535", "nl": "Every zumpus is an impus.", "fol": "all x. (zumpus(x) -> impus(x))", "prediction": ["allerzuspe(x) -> Imperative(x))", "all x.(Zumpus(x) -> Isolated(x))", "all x.(Zumpus(x) -> Impossible(x))", "all x.(Zumpus(x) -> Implicit(x))", "all x.(Tompus(x) -> Is(x))", "all x.(Tompus(x) -> Imp\u00e9rative(x))", "all x.(Tompus(x) -> Implized(x))", "all x.(Tompus(x) -> Impediment(x))", "all x.(Tompus(x) -> Imiter(x))", "all x.(Zuffi.(x) -> IsImpossed(x))", "all x.(Tompus(x) -> Impossible(x))", "all x.(Tompus(x) -> Impeccable(x))", "all x.(Zupus(x) -> Illegal(x))", "all x.(Termasp(x) -> IsImplemented(x))", "all x.(Zumpus(x) -> Idiotic(x))", "all x.(Zumpus(x) -> IsImpossible(x))"]}
{"id": "prontoqa_train_536", "nl": "Sam is not an impus and Sam is a jompus and Sam is a brimpus.", "fol": "(-impus(Sam) & jompus(Sam) & brimpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Issue(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Brimpus(x)))", "(all x.(Sam(x) -> -Illipse(x)) & all y.(Sam(y) -> (Jumpus(y) | Brimpus(y))))", "(all x y.((Sam(x) & -Impossible(x)) -> Jompus(x)) & ((Sam(y) & Brimpus(y)) -> -Impossible(y)))", "(all x y.((Sam) & -Imperial(x)) -> Jompus(y)) & ((Sam(x) & Brimpus(y)) -> -Imperial(y)))", "(all x.(Sam(x) -> -Issue(x)) & (Jompus(x) | Brimpus(x)))", "all x y.((Sam(x) & Imperator(y) & Jompus(y)) -> (-Impossible(x) & Brimpus(y)))", "all x y.((Sam(x) & Jompus(y)) -> (-Impossible(x) & -Intervention(y) & -Impossible(y) & -Employable(y)))", "(all x.(Sam(x) -> -Impossible(x)) & (Jompus(x) | Brimpus(x))))", "(all x y.((Sam(x) & Die(y)) -> -Impeds(x)) -> (Jompus(y) & Brimpus(z))))", "(all x.((Sam(x) & -Isimposed(x)) -> (Jompus(x) & Brimpus(x)))", "all x y z.((Sam(x) & Interposer(y) & Joomp(z)) -> (-Impossible(x) & Jompus(x) & Brimpus(x)))", "(-Illustrated(Sam) | Jompus(Sam) | Brimpus(Sam)))", "all x.(Sam(x) -> (-Issue(x) & (Jompus(x) | Brimpus(x))))", "all x y z.((Sam(x) & NullIssue(x) & Sam(y) & Jompus(y) & Brimpus(z)) -> -Issue(x))", "(all x y z.(Sam(x) -> -Illustrated(x)) & ((Sam(y) & Jompus(y)) | (Sam(z) & Brimpus(z)))))", "(all x.(Sam(x) -> -Issue(x)) & all y.(Jompus(y) -> (Brimpus(y))))"]}
{"id": "prontoqa_train_537", "nl": "Every dumpus is a numpus.", "fol": "all x. (dumpus(x) -> numpus(x))", "prediction": ["all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumpus(x) -> Nompus(x))", "all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumps(x) -> Numpus(x))", "all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumpus(x) -> Number(x))", "all x.(Dumpus(x) -> Number(x))", "all x.(Dumpus(x) -> Numpus(x))"]}
{"id": "prontoqa_train_538", "nl": "Sally is not a numpus, Sally is a gorpus, and Sally is a lorpus.", "fol": "(-numpus(Sally) & gorpus(Sally) & lorpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Numpus(x)) & ((Sally(x) -> Gorpus(x))) & ((Sally(x) -> Lorpus(x))))", "(all x.(Sally(x) -> -Number(x)) & all y.(Gorpus(y) & all z.(Sally(z) -> Lorpus(z))))", "(all x.(Sally(x) -> -Numpus(x)) & all y.(Sally(y) -> Gorpus(y)) & all z.(Sally(z) -> Lorpus(z))))", "all x y z.((Sally(x) & Numpus(y) & Gorpus(z)) -> (-Numpus(x) & Gorpus(x) & Lorpus(x)))", "all x y z.((Sally(x) & Numpus(y) & Gorpus(z)) -> (-Numpus(x) & Gorpus(x) & Lorpus(x)))", "all x y z.((Sally(x) & Numpus(y) & Gorpus(z)) -> (-Numpus(x,y) | Lopus(x,z)))", "(all x.(Sally(x) -> -Numpus(x)) & (Gorpus(x) & Lambos(x))))", "all x.((Sally(x) -> (-Numpus(x) | Gorpus(x) | Lorpus(x)))", "(all x.(Sally(x) -> -Numpus(x)) & (Gorpus(x) & Lorpus(x)))", "all x y z.((Sally(x) & Numpus(y) & Gorpus(z)) -> (-Numpus(x) | Gorpus(x) & Lactose(x)))", "(all x.(Sally(x) -> -Nompus(x)) & (Sally(x) -> Gorpus(x)) & (Sally(x) -> Lorpus(x)))", "all x y z.((Sally(x) & Numpus(y) & Worpus(z)) -> (-Numpus(x) & Gorpus(x) & Lorpus(x)))", "((Sally(Sally) & -Numpus(Sally)) | (Sally(Sally) & Gorpus(Sally))) | (Sally(Sally) & Lorpus(Sally))))", "all x.((Sally(x) & -Numpus(x)) -> (Gorpus(x) & Lark(x)))", "(all x.(Sally(x) -> -Numpus(x)) & (Gorpus(x) & Lorpus(x)))", "(-numpus(Sally) & Gorpus(Sally) & Lorpus(Sally))"]}
{"id": "prontoqa_train_539", "nl": "Impuses are brimpuses.", "fol": "all x. (impus(x) -> brimpus(x))", "prediction": ["all x.(Impuse(x) -> Brimpuse(x))", "all x.(Brimpus(x) -> Impuse(x))", "all x.(Imbus(x) -> Brimpus(x))", "all x.(Impus(x) -> Brimpuse(x))", "all x.(Impus(x) -> Brimpuse(x))", "all x.(Imbus(x) -> Brimpuse(x))", "all x.(Impusses(x) -> Brimbus(x))", "all x.(Impuse(x) -> Brimbus(x))", "all x.(Impuse(x) -> Brimpuse(x))", "all x.(Impuse(x) -> Brimpuse(x))", "all x y.((Impuse(x) & Brimpuse(y)) -> (Red(x) & Embryon(x)))", "all x.(Imperus(x) -> Brimbus(x))", "all x.(Impuse(x) -> Brimpuse(x))", "all x.(Implice(x) -> Brimpuse(x))", "all x.(Impustor(x) -> Brimpuse(x))", "all x.(Impuss(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_540", "nl": "Rex is a numpus, Rex is a dumpus, and Rex is not a brimpus.", "fol": "(numpus(Rex) & dumpus(Rex) & -brimpus(Rex))", "prediction": ["(all x.(Rex(x) -> Numpus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> -Brimpus(x)))", "(all x.(Numpus(x) -> Dumpus(x)) & all y.(Brimpus(y) -> -Brimpus(y)))", "(all x.(Rex(x) -> Numpus(x)) | (Dempus(x) & -Brumpus(x))))", "(all x.(Rex(x) -> Numpus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> -Brimpus(x)))", "(all x.(Rex(x) -> Numpus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> -Brimpus(x)))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Dumpus(y) & -Brimpus(y)))", "(all x.(Rex(x) -> Numpus(x)) & (Dex(x) -> Dumpus(x)) & -Brimpus(x)))", "(all x y z.(Rex(x) -> Numpus(x)) & ((Rex(y) & Dumpus(y)) | (-Brimpus(z)))))", "((Numpus(Rex) & Dumpus(Rex)) | (Dumpus(Rex) & -Brimpus(Rex))))", "all x y z.((Rex(x) & Numpus(y) & Dumpus(z)) -> (Numpus(x) & Dumpus(y) & -Brimpus(z)))", "all x y z.((Rex(x) & Numpus(y) & Dumpus(z) & -Brumpus(z)) -> (Number(x) | Dumpus(z) | NoBrimpus(z)))", "exists x y z.(Mean(x,y,z) & (numbus(z) | dumpus(z)) & -brimpus(z)))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Dumpus(y) -> -Brimpus(y)))", "all x.((Rex(x) & Numpus(x)) -> Dumpus(x)) & -Brimpus(x))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Rex(y) -> Dumpus(y))) & all z.(Rx(z) -> -Brimpus(z)))", "(all x.(Rex(x) -> Numpus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> -Brimpus(x))))"]}
{"id": "prontoqa_train_541", "nl": "Yumpuses are gorpuses.", "fol": "all x. (yumpus(x) -> gorpus(x))", "prediction": ["all x.(Yumpus(x) -> Gorpus(x))", "all x.(Yumpus(x) -> Gorpus(x))", "all x.(Yumpus(x) -> Gorpuse(x))", "all x.(Yumpus(x) -> Gorpus(x))", "all x.(Yumpus(x) -> Gorpus(x))", "all x.(Yumpus(x) -> Gorpuse(x))", "all x.(Yumpus(x) -> Gorpus(x))", "all x.(Yumpus(x) -> Gorpus(x))", "all x.(Yumpus(x) -> Gorpus(x))", "all x.(Yumpus(x) -> Gorpus(x))", "all x.(Yumpus(x) -> Gorpuse(x))", "all x.(Yumpus(x) -> Gorpus(x))", "all x.(Yumpus(x) -> Gorpuse(x))", "all x.(Yumpus(x) -> Gorpus(x))", "all x.(Yumpus(x) -> Gorpuse(x))", "all x.(Yumpus(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_542", "nl": "Alex is a lempus and Alex is a jompus and Alex is not a gorpus.", "fol": "(lempus(Alex) & jompus(Alex) & -gorpus(Alex))", "prediction": ["(all x.(Alex(x) -> Lempus(x)) & all y.(Jompus(y) -> -Gorpus(y)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Jompus(y)) & all z.(Alex(z) -> -Gorpus(z)))", "(all x.(Alexa(x) -> Lempus(x)) & (Alexa(x) -> Jompus(x)) & (Alexa(x) -> NotGorpus(x)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Jompus(y)) & all z.(Alex(z) -> -Gorpus(z))))", "all x.(Alex(x) -> (Limpus(x) & Jompus(x) & -Gorpus(x)))", "(all x y z.((Alex(x) & Lempus(x) & Jompus(y)) -> (Lempus(x) & Jompus(y)) & -Gorpus(z)))", "(all x.(Alex(x) -> Lempus(x)) & (Alex(x) -> Jompus(x)) & (Alex(x) -> -Gorpus(x)))", "all x.(Alex(x) -> (Lempus(x) & Jompus(x) & -Gorpus(x)))", "(all x.(Alexa(x) -> Lempus(x)) & (Alexa(x) -> Jompus(x)) & (Alexa(x) -> -Gorpus(x)))", "all x y z.((Alex(x) & Lempus(x) & Jompus(y) & -Gorpus(z)) -> (Lempus(x) | Jompus(y) | NotGorpus(z)))", "(all x y z.(Alex(x) -> Lempus(x)) & all z w.((Alex(x) & Jompus(y) & Gorpus(z))) -> -Lempus(w)))", "(all x.(Alexa(x) -> Lempus(x)) & (Alexa(x) -> Jompus(x)) & -Alexa(x)))", "all x y z w.((Alex(x) & Lempus(x) & Jompus(y) & Gorpus(z)) -> (Bird(x,y) | (Bird(y) & Gorpus(y))))", "(all x y z.(Alex(x) -> Lempus(x)) & (Alex(y) -> Jompus(y)) & (Alex(z) -> -Gorpus(z)))", "(all x y.(Lempus(x) & All z w.(Jompus(y) & All w.(Gorpus(w))) -> (Lempus(y) & Jompus(z) & -Gorpus(w))))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Jompus(y)) & all z.(Alex(z) -> -Gorpus(z))))"]}
{"id": "prontoqa_train_543", "nl": "Wren is not a yumpus and Wren is a gorpus and Wren is a wumpus.", "fol": "(-yumpus(Wren) & gorpus(Wren) & wumpus(Wren))", "prediction": ["(all x.((Wren(x) & -Yumpus(x)) -> Gorpus(x)) & ((Wren(x) & -Yumpus(x)) -> Wumpus(x)))", "all x y z.((Wren(x) & Yumbos(y) & Gorpus(z)) -> (-Yumpus(x) & Gorpus(x) & Wumpus(x)))", "all x y.((Wren(x) & Gorpus(y)) -> (-Yumpus(x) & Wren(y)))", "all x y.((Wren(x) & Yuppos(y)) -> -Yumpus(x) & Gorpus(x) & Wumpus(y))", "((Yumpus(Wren) | Gorpus(Wren))) & -Yumpus(Wren) & Wumpus(Wren)))", "all x y z.((Wren(x) & Yumpus(y) & Riptor(z)) -> (-Yumpus(x) & Gorpus(x) & Wumptus(x)))", "all x y z.((Wren(x) & Yukpus(y) & Gorpus(z)) -> (-Yumpus(x) & Wormpus(y) & Wren(z)))", "all x y z.((Wren(x) & Yumpus(y) & Gorpus(z)) -> (-Yumpus(x) & Gorpus(x) & Wumpus(x)))", "all x y.((Wren(x) & Wren(y)) -> (-Yumpus(x) & Gorpus(y) & Wumpus(y)))", "(all x y z.((Wren(x) & Yumpus(y)) -> -Yumpus(x)) & ((Wren(z) & Gorpus(z))) -> Wormpus(z)))", "(yuzu (-y) | Wumpus(y))) & (Gorpus(y) | Wumpus(y)))", "all x y z.((Wren(x) & Yuppos(y) & Gorpus(z)) -> (-Yumpus(x) & Gorpus(y) & Wumpus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Gorpus(z)) -> (-Yumpus(x) & Wormpus(x) & Wren(x)))", "all x y z.((Wren(x) & Yampus(y) & Gorpus(z)) -> (Jaws(x) | Wren(x)))", "(all x.(Wren(x) -> -Yumpus(x)) & (Gorpus(x) | Wren(x))))", "all x y z.((Wren(x) & Yumpus(y) & Gorpus(z)) -> (-Yumpus(x) & Gorpus(y) & Wumpus(z)))"]}
{"id": "prontoqa_train_544", "nl": "Polly is a grimpus, Polly is a shumpus, and Polly is not a yumpus.", "fol": "(grimpus(Polly) & shumpus(Polly) & -yumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Grimpus(x)) & all y.(Polly(y) -> Shumpus(y)) & all z.(Polly(z) -> -Yumpus(z))))", "(all x.(LittlePolly(x) -> Grumpus(x)) & (LittlePolly(x) -> Humpus(x)) & (LittlePolly(x) -> Yumpus(x)))", "(all x.(Polly(x) -> Grimpus(x)) & (Polly(x) -> Shumpus(x)) & -Yumpus(x)))", "(all x.(Polly(x) -> Grimpus(x)) & (Polly(x) -> Shumpus(x)) & (Polly(x) -> -Yumpus(x)))", "all x y.((Polly(x) & Grimpus(x)) -> (Shumpus(x) & -Yumpus(y)))", "(all x.(Polly(x) -> Grumpus(x)) & (Polly(x) -> Shumpus(x)) & (Polly(x) -> -Yumpus(x))))", "(all x.(Frostpus(x) -> Polly(x)) & (Shumpus(x) -> Polly(x)) & (Yumpus(x) | Grimpus(x))))", "(all x.(Murph(x) -> Polly(x)) & all y.(Shumpus(y) -> Polly(y))) & all z.(Yumpus(z) -> Polly(z)))", "all x y z.((Polly(x) & Grimpus(x)) -> (Shumpus(y) & -Yumpus(z)))", "(all x.(Polly(x) -> Grimpus(x)) & (Polly(x) -> Shumpus(x)) & (Polly(x) -> -Yumpus(x)))", "exists x.(Polly(x) & Grypus(x) & Shumpus(x) & -Yumpus(x))", "all x y z.((Polly(x) & Grumpus(y) & Humpus(z)) -> (Fragrer(x) & Shumpus(x) & -Yumpus(y)))", "(All x y z.(Polly(x) -> Grimpus(x)) & (Polly(y) -> Shumpus(y)) & (Polly(z) -> -Yumpus(z)))", "(all x y z.(Polly(x) -> (Grimpus(x) & Polly(y) & Scalps(y) & -Yumpus(z))) -> (Shumpus(y) & -Yumpus(z)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Polly(y) -> Humpus(y))) & all z.(Polly(z) -> -Yumpus(z))))", "all x y z.((Polly(x) & Grimpus(y) & Shumpus(z)) -> (Grampus(x) & Shumpus(y) & -Yumpus(z)))"]}
{"id": "prontoqa_train_545", "nl": "Polly is not a numpus.", "fol": "-numpus(Polly)", "prediction": ["all x.(Polly(x) -> -Nompus(x))", "all x.((Polly(x) & -numpus(x)) -> -Numerus(x))", "Polly is not a Numpus(poly)", "(Nompus(Polly) & -Numpus(Poly))", "all x.(Polly(x) -> -Numpus(x))", "Numpus(Polly)", "all x.(Polly(x) -> -Numpus(x))", "polly(polly) -> -Numpus(poly))", "all x.(Polly(x) -> -Numpus(x))", "Nempus(Polly)", "-Numpus(Polly,Number)", "(-Numpus(Polly))", "(-numpus(Polly))", "all x.(Polly(x) -> -Number(x))", "(\u0430\u043a\u0430\u0438) & \u043e\u0440\u0430\u043d (\u0440\u043e\u043b\u0435\u043c, \u0432\u0430\u0441\u0442))", "Polly is not a Numpus(Polly)"]}
{"id": "prontoqa_train_546", "nl": "Rex is a rompus and Rex is not a lempus and Rex is a tumpus.", "fol": "(rompus(Rex) & -lempus(Rex) & tumpus(Rex))", "prediction": ["(all x y.((Rex(x) & Rompus(y)) -> -Lempus(y)) & ((Rex(x) & Tumpus(x)) -> Tumpus(x)))", "all x y z.((Rompus(x) & Lempus(y) & Tumpus(z)) -> (Rompus(x) | -Lempus(y) & Tumpus(z)))", "all x y z.((Rex(x) & Rompus(y) & Lempus(z)) -> (Nissan(x,y) & Tumpus(z)))", "all x y.((Rex(x) & Rompus(x) & Rex(y) & -Lempus(y)) -> Tumpus(x))", "all x y z.((Rompus(x) & Lempus(y) & Tumulus(z)) -> (Rompus(x) & -Lempus(y)))", "(all x y.((Rompus(x) & -Lempus(y)) -> Rex(x)) & ((Rompus(x) & Tumpus(y))) -> Rex(x)))", "(all x.(Rex(x) -> Rompus(x)) & (-lempus(x) & -tumpus(x)))", "(all x.(Rompus(x) & -Lempus(x)) & (Tumpus(x))))", "all x.(Rex(x) -> (Rompus(x) & -Lempus(x) & Tumpus(x)))", "(all x.(Rompus(x) -> Rompus)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Tumpus(x))))", "(all x.(Rompus(x) -> AComa(x)) & (Lempus(x) -> -Acoma(x)) & (Tumpus(x) -> AComa(x)))", "all x y z.((Rex(x) & Rompus(y) & Lempus(z)) -> ((Mary(x,y) | Tumpus(x,z))))", "(all x y.(Rompus(x) -> Rompus(x)) & (Lempus(y) -> -Lempus(y)) & (Tompus(x) -> Rumpus(y)))", "all x y z.((Rex(x) & Rompus(x) & Lempus(y) & Tumpus(z)) -> (Rompus(x) & -Lempus(y) & Tumpus(z)))", "(all x y.((Rompus(x) & GoesTompus(y)) -> Rimpus(x)) & ((Lempus(y) & GoesTompus(y)) -> Lempus(y)))", "(all x.(Rex(x) -> Rompus(x)) & (rex(x) -> -Lempus(x)) & (rex(x) -> Tumpus(x)))"]}
{"id": "prontoqa_train_547", "nl": "Rex is not a numpus.", "fol": "-numpus(Rex)", "prediction": ["(-Numpus(Rex))", "(-Numpus(Rex))", "(-Numpus(Rex))", "-Numpus(Rex)", "-numpus(Rex)", "(-numpus(Rex))", "Rex is not Numpus(x)", "Rex ist -Numpus(Rex)", "all x.(Rex(x) -> -Numpus(x))", "all x.(Rex(x) -> -Numpus(x))", "(-Numpus(Rex))", "Rex is not Numpus(rex)", "-Numpus(rex)", "all x.(Rex(x) -> -Numpus(x))", "Rex, sadly, is not a Numpus.", "(-numpus(Rex))"]}
{"id": "prontoqa_train_548", "nl": "Polly is a shumpus and Polly is not a zumpus and Polly is a dumpus.", "fol": "(shumpus(Polly) & -zumpus(Polly) & dumpus(Polly))", "prediction": ["(all x.(Poly(x) -> Humpus(x)) & ((Polly(x) -> -Tompus(x))) | (Poly(x) -> Dumpus(x))))", "(all x.(Polly(x) -> Humpus(x)) & all y.(Polly(y) -> -Zumpus(y))) & all z.(Polly(z) -> Dumpus(z)))", "all x y.((Polly(x) & Shumpus(x)) & (-Dumpus(y) & Polly(x)) & (Dumpus(x) | Shumpus(y))))", "all x y z.((Polly(x) & Shumpus(x) & Polly(y) & Tompus(z)) -> (AsShumpus(x) & -AsTompus(y) & AsDumpus(y)))", "(all x.(Polly(x) -> Humpus(x)) & all y.(Polly(y) -> -Tompus(y))) & all z.(Polly(z) -> Dumpus(z))))", "all x y.((Poloy(x) & Shumpus(x)) -> (-Tompus(x) & Dumpus(y)))", "all x is(Polly(x) -> (Shumpus(x) & -Zumpus(x) & Dumpus(x)))", "all x.((Plumpus(x) & NotTompus(x)) -> Dumpus(x))", "all x y z.((Polly(x) & Shumpus(x) & Polly(y) & Zumpus(z)) -> (Shumpus(y) & Nutus(z) & Dumpus(y)))", "(all x.(Polly(x) | -Polly(x)) & (Polly(x) -> Humpus)) & (Polly(x) -> Dumpus(x)))", "all x y z w.((Shumpus(x) & Polly(y) & Dumpus(z)) -> (Shumpus(y) & -Zumpus(y) & Dumpus(z)))", "(all x.(Polly(x) -> Shumpus(x)) & all y.(Polly(y) -> -Shumpus(y))) & all z.(Polly(z) -> Dumpus(z)))", "(all x.(Shumpus(x) -> PollyPolly)) & (Sumpus(x) -> Polly)) & (NoSumpus(x) -> Polly)) & (Dumpus(x) -> Polly)))", "all x y.((Plumb(x) & Quill(y)) -> (Shumpus(x) & -Zumpus(y) & Dumpus(x)))", "all x.(Shumpus(x) | (-Zumpus(x) | Dumpus(x))))", "all x y z.((Polly(x) & Shumpus(x) & Polly(y) & Zumpus(z)) -> (-Shumpus(x) & Dumpus(y)))"]}
{"id": "prontoqa_train_549", "nl": "Polly is not a yumpus.", "fol": "-yumpus(Polly)", "prediction": ["none.", "Polly is notyumpus.", "all x.(Polly(x) -> -Yumpus(x))", "All x.(Polly(x) -> -Yumpus(x))", "all x.(Polly(x) -> -Yumpus(x))", "(-Yumpus(Polly))", "all x.(Polly(x) -> -Yumpus(x))", "all x.(Polly(x) -> -Yumpus(x))", "(-Yumpus(Poly))", "all x.(Polly(x) -> -Yumpus(x))", "(-Yumpus(Polly))", "all x.(Polly(x) -> -Yumpus(x))", "(-Yumpus(Polly,y))", "(-Yumpus(Polly))", "all x.((Polly(x) & -Yumpus(x)) -> -Yumpus(x))", "is notYumpus(Polly)"]}
{"id": "prontoqa_train_550", "nl": "Impuses are shumpuses.", "fol": "all x. (impus(x) -> shumpus(x))", "prediction": ["all x.(Impuse(x) -> Humpuse(x))", "all x.(Impuses(x) -> Humpus(x))", "all x.(Impuse(x) -> Shumpuse(x))", "all x.(Impidus(x) -> Schumpus(x))", "all x.(Impuse(x) -> Shumpus(x))", "all x.(Impuse(x) -> Shumpuse(x))", "all x.(Impuse(x) -> Shumpus(x))", "all x.(Impuse(x) -> Sushise(x))", "all x.(Impuse(x) -> Humpus(x))", "all x.(Impuse(x) -> Shumpus(x))", "all x.(Ipuse(x) -> Shumpuse(x))", "all x y.((Impuse(x) & Shumpus(y)) -> Y.((Impuse(x) & Shumpus(x))))", "all x.(Impus(x) -> Shumpus(x))", "all x.(Impuse(x) -> Snompus(x))", "all x.(Impuse(x) -> Species(x))", "all x!(Impuse(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_551", "nl": "Fae is a yumpus, Fae is not a shumpus, and Fae is a zumpus.", "fol": "(yumpus(Fae) & -shumpus(Fae) & zumpus(Fae))", "prediction": ["all x y z.((Fae(x) & Yumpus(y) & NotShumpus(z)) -> (Yumpus(x) | Zumpus(x)))", "(all x.(Fae(x) -> Yampus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Zumpus(x)))", "all x y z.((Fae(x) & Yampus(y) & -Shumpus(z)) -> (Yumpus(x) | Zumpus(x)))", "(all x.(Fae(x) -> Yampus(x)) & all y.(Fae(y) -> -Shumpus(y)) & all z.(Fae(z) -> Zumpus(z))))", "all x y z.((Fae(x) & Yumpos(y) & Fae(z)) -> (-Shumpus(z) & Zumpus(z)))", "all x y z.((Fae(x) & Yampus(x) & Fae(y) & Zumpus(z)) -> (-Yumpus(y) & -Shumpus(z) & -Shumpus(y) & Zumpus(z)))", "(all x.(Fae(x) -> Yampus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Zumpus(x)))", "(all x.(Fae(x) -> Yompus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Zumpus(x)))", "(all x.(Fae(x) -> Yumpus(x)) & (-Yumpus(x) -> Humpus(x)) & (-Fae(x) -> Zumpus(x)))", "(all x.(Fae(x) -> Yampus(x)) & all y.(Fae(y) -> -Shumpus(y)) & all z.(Fae(z) -> Zumpus(z)))", "(all x.(Fae(x) -> Yampus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Zumpus(x)))", "all x y z.((Fae(x) & Yampus(y) & -Shumpus(z)) -> (Yumpus(x) & Zumpus(x)))", "(all x.((Fae(x) & Yumpus(x)) -> (Yumpus(x) & -Shumpus(x))) & ((Fae(x) & Zumpus(x)) -> Zumpus(x)))", "(all x.(Fae(x) -> Yampus(x)) & (-Shumpus(x)) & (Fae(x) -> Zumpus(x)))", "(all x.(Fae(x) -> Yampus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Zumpus(x)))", "(all x.(Fae(x) -> Yampus(x)) & all y.(Fae(y) -> -Shumpus(y)) & all z.(Fae(z) -> Zumpus(z)))"]}
{"id": "prontoqa_train_552", "nl": "Fae is not an impus.", "fol": "-impus(Fae)", "prediction": ["(-ZeroJImpact(fae)).", "-Illegislator(fae)", "ist -Impossed(fae)", "NichtImpossible(Fae)", "Fae is not impus.", "-IsFae(f)", "ist keine IvoryScript(fae)", "-Impediment(fae)", "Derf(f) -> -Idemision(f))", "-Impossible(Fae)", "-IsFae(f)", "all x.(Fae(x) -> (-Impossible(x)))", "-Impossible(fae)", "-Implicit(fae)", "-Imprimed(fae)", "exists x.(Fae(x) & -Impossible(x))"]}
{"id": "prontoqa_train_553", "nl": "Each vumpus is a lempus.", "fol": "all x. (vumpus(x) -> lempus(x))", "prediction": ["all x.(Vumpus(x) -> Lempus(x))", "all x.(Vumpus(x) -> Lempus(x))", "all x.(Vimpus(x) -> Lempus(x))", "all x.(Vumpus(x) -> Lempus(x))", "all x.(Vumpus(x) -> Limpus(x))", "all x.(Vumpus(x) -> Lempus(x))", "all x.(Vumpus(x) -> Lempus(x))", "all x.(Vumpus(x) -> Lempus(x))", "all x.(Vumpus(x) -> Lempus(x))", "all x.(Vumpus(x) -> Lempus(x))", "exists x.(Vumpus(x) & Lempus(x))", "all x.(Vumpus(x) -> Lempus(x))", "all x.(Vumpus(x) -> Lempus(x))", "all x.(Vumpus(x) -> Lempus(x))", "all x.(Vumpus(x) -> Lempus(x))", "all x.(Vumpus(x) -> Lempus(x))"]}
{"id": "prontoqa_train_554", "nl": "Stella is not a lempus, Stella is a tumpus, and Stella is a gorpus.", "fol": "(-lempus(Stella) & tumpus(Stella) & gorpus(Stella))", "prediction": ["(all x y z.((Stella(x) & Lempus(y)) -> -Lempus(x)) & ((Stella(z) & Tumpus(z))) -> Gorpus(z)))", "all x y z.((Stella(x) & Lempus(y) & Toumpus(z)) -> (-Lempus(x) & Tumpus(y) & Gorpus(z)))", "all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) & Tumpus(x) & Gorpus(x)))", "(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Gorpus(x))))", "all x.((Stella(x) -> (-Lempus(x) | Stella(x) & Tumpus(x)) | Stella(x) & Gorpus(x)))", "(all x.((Stella(x) & -Lempus(x)) -> Tumulus(x)) & all y.((Stella(y) & Gorpus(y)) -> Gorpus(y)))", "(all x.(Stella(x) -> -Lampus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Gorpus(x)))", "all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) & Tumpus(y) & Gorpus(z)))", "all x y z w.((Stella(x) & Tumpus(y) & Gorpus(z)) -> (-Lempus(x) & Tumpus(y) & Gorpus(z)))", "(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Gorpus(x)))", "all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) | (Tumpus(x) & Gorpus(x))))", "all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) & Tumpus(x) & Gorpus(x)))", "all x y z.((Lampus(x) & Pluto(y) & Gorpus(z)) -> (-Lempus(x) | (-Lumpus(y) | -Tumpus(y) | (-Lempus(z) & Tumpus(y)))))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y))) & all z.(Stella(z) -> Gorpus(z))))", "(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Gorpus(x))))", "exists x.(Stella(x) & -Lempus(x) & Taumpus(x) & Gorpus(x))"]}
{"id": "prontoqa_train_555", "nl": "Every yumpus is an impus.", "fol": "all x. (yumpus(x) -> impus(x))", "prediction": ["all x.(Yumpus(x) -> Impossible(x))", "all x.(Yumpus(x) -> Impirez(x))", "all x.(Yumpus(x) -> IsIsolated(x))", "all x.(Yumpus(x) -> IsImploser(x))", "all x.(Yumpus(x) -> IsImpossed(x))", "all x.(Yumpus(x) -> Improvise(x))", "all x.(Yumpus(x) -> IsBelated(x))", "all x.(Yumpus(x) -> IsIsolated(x))", "all x.(Yumpus(x) -> IsImplicator(x))", "all x.(Yumpus(x) -> IsPrime(x))", "all x.(Yumpus(x) -> IsDrill(x))", "all x.(Yumpus(x) -> IsImpossible(x))", "all x.(Yumpus(x) -> Isolated(x))", "all x.(Yumpus(x) -> Impossible(x))", "all x.(Yumpus(x) -> IsThis(x))", "all x.(Yumpus(x) -> Impossible(x))"]}
{"id": "prontoqa_train_556", "nl": "Polly is a wumpus and Polly is a jompus and Polly is not an impus.", "fol": "(wumpus(Polly) & jompus(Polly) & -impus(Polly))", "prediction": ["all x y z.((Polly(x) & Wormpus(x) & Jompus(y) & Is(z)) -> (Wumpus(x) & Jompus(y) & -Ilises(z)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Jompus(x)) & -Iliots(x)))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Poly(y) -> Jompus(y))) & all z.(Polly(z) -> -Iliriko(z))))", "all x y z.((Polly(x) & Wumpus(x) & Jompus(y) & -Imperial(z)) -> (Wumpus(x) & Jompus(y)))", "all x y z.((Polly(x) & Wumpus(x) & Jompus(y) & -Impossible(z)) -> (Wumpus(x) & Jompus(y) & -Impossible(z)))", "(all x!(Polly(x) -> Wumpus(x)) & (Polly(x) -> Jompus(x)) & -Imperial(x)))", "all x y.((Polly(x) & Twils(x)) -> ((Wumpus(x) & Jompus(y))))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> -Impossible(x))))", "(all x.(Polly(x) -> Wompus(x)) & all y.(Polly(y) -> Jompus(y)) & all z.(Polly(z) -> -Impossible(z))))", "(all x y.(Polly(x) & Wumpus(x)) & (Poly(y) -> Jompus(y)) & (Poly(y) -> -Impossible(y)))", "(all x y.((Polly(x) & Wumpus(x)) -> Polly)) & ((Polley(y) & Jompus(y)) -> -Impossible(y)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Jompus(x)) & -Imp\u00e9rialist(x)))", "all x y.((Polly(x) & Wempus(x) & Jompus(y)) -> (Wumpus(x) & Jampus(y) & -Impossible(y)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Jompus(x)) & -Impos(x)))", "(all x.(Pockey(x) -> Wumpus(x)) & (Pockey(x) -> Jompus(x)) & (Pockey(x) -> -Imposer(x)))", "(all x y.((Polly(x) & Wumpus(x)) -> Wumpus(x)) & ((Polly(y) & Jompus(y)) -> -Ilimination(y)))"]}
{"id": "prontoqa_train_557", "nl": "Rex is a lorpus, Rex is not a grimpus, and Rex is a brimpus.", "fol": "(lorpus(Rex) & -grimpus(Rex) & brimpus(Rex))", "prediction": ["(all x y z.(Lorpus(x) -> Lorpus(x)) & (NoGrimpus(y) -> Brimpus(z)))", "(all x.(Rex(x) -> Lorpus(x)) & (-Grimpus(x) & -Brimpus(x)))", "(all x = (Lorpus(x) & -Grimpus(x)) & all y z.(Brimpus(z) -> Brimpus(z))))", "(all x y z.(Lorpus(x) -> Lorpus(x)) & (Rawpus(y) -> -Rawpus(y)) & (Brimpus(z) -> -Lorpus(z))))", "(all x y z.(Lorpus(x) -> Rex)) & (Nurrup(y) -> Rex)) & (Brimpus(z) -> Rex)))", "(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> -Grimpus(x)) & (Rex(x) -> Brimpus(x)))", "(all x y.(Lorpus(x) & Lorpus(y)) & (NotGrimpus(y)) & (Brimpus(y))))", "all x.((Lorpus(x) & -Crumpus(x)) -> (Morph(x) & -Brimpus(x)))", "(all x.(Rex(x) -> Lorpus(x)) & all y.(Rex(y) -> -Grimpus(y)) & all z.(Rex(z) -> Brimpus(z))))", "(all x.(Rex(x) -> Lorpus(x)) & (-Grimpus(x)) | (Brampus(x) -> Brimpus(x))))", "(all x.(Lorps(x) -> Lorpus(x)) & (notGrimpus(x) & (Brimpus(x) | -Grimpus(x))))", "all x y z.((Rex(x) & Lorpus(y) & Scrumpus(z)) -> (Lorpus(x) | -Crompus(z) | Brimpus(x)))", "(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> -Grimpus(x))) & (Rex(x) -> Brimpus(x)))", "(all x.(Rex(x) -> Horopus(x)) & (Rex(x) -> -Grimpus(x)) & (Rex(x) -> Brimpus(x)))", "(all x.(Rex(x) -> Lorpus(x)) & (-Grimpus(x) & -Brimpus(x)))", "(all x.(Rex(x) -> Lordpus(x)) & (Rex(x) -> -Grimpus(x)) & (Rex(x) -> Brimpus(x))))"]}
{"id": "prontoqa_train_558", "nl": "Rompuses are shumpuses.", "fol": "all x. (rompus(x) -> shumpus(x))", "prediction": ["all x.(Rompus(x) -> Shumpus(x))", "all x.(Romosa(x) -> Shumpus(x))", "all x.(Rompus(x) -> Shumpus(x))", "all x.(Rompus(x) -> Shumpuse(x))", "all x.(Rompus(x) -> Humpus(x))", "all x.(Rompus(x) -> Shumpus(x))", "all x.(Rompus(x) -> Shumpus(x))", "all x.(Rompus(x) -> Shumpus(x))", "all x.(Rosampus(x) -> Shumpus(x))", "all x.(Rospus(x) -> Shumpus(x))", "all x.(Rompus(x) -> Shumpus(x))", "all x.(Rompus(x) -> Shumpus(x))", "all x.(Rompus(x) -> Shumpuse(x))", "all x.(Rompes(x) -> Shumpus(x))", "all x.(Romosopah(x) -> Shumpus(x))", "all x.(Rompus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_559", "nl": "Rex is not a shumpus and Rex is a yumpus and Rex is a zumpus.", "fol": "(-shumpus(Rex) & yumpus(Rex) & zumpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Shumpus(x)) & (Yumpus(x) & Zumpus(x)))", "(all x.((Rex) -> -Shumpus(x)) & all y.((Rex) -> Yumpus(y)) & all z.((Rex) & Zumpus(z))) -> -Shumpus(x) & -Yumpus(z)))", "(all x y.(Americus(x) -> -Schumpus(x)) & (Yumpus(y) & Zumpus(y)))", "(all x.(Rex(x) -> -Shumpus(x)) & (Yumpus(x) | Zumpus(x))))", "all x y z.((Rex(x) & Humpus(y) & Humpus(z)) -> (-Shumpus(x) & Yampus(x) & Zumpus(x)))", "(all x y.(Rex(x) -> (-Shumpus(x) | Yukpus(x))) & (Rex(y) -> Zumpus(y)))", "all x y z.((Rex(x) & Humpus(y) & Yump(z)) -> (-Shumpus(x) & Yampus(z) & Zumpus(x)))", "(all x.(Rex(x) -> -Shumpus(x)) & all y.(Yumpus(y) -> Zumpus(y)))", "(all x y z.((Rex(x) & Skull(y) & Shumpus(z)) -> -Shumpus(x)) & ((Rex(x) & Yumpus(y)) -> Zumpus(x)))", "(-Shumpus(Rex) & Yumps(Rex) & Zumpus(Rex))", "(all x.(Rex(x) -> -Shumpus(x)) & (Yumpus(x) & Zumpus(x)))", "(all x.(Rex(x) -> -Shumpus(x)) & all y.(Yumpus(y) & -Shumpus(y))) & all z.(Tompus(z) -> -Shumpus(z)))", "(all x.(Rex(x) -> -Shumpus(x)) & (Yumpus(x) & Zumpus(x)))", "(all x.(Rex(x) -> -Shumpus(x)) & all y.(Yumpus(y) & all z.(Zumpus(z)) -> -Shumpus(y) & Yumpus(z)))", "all x y z.((Rex(x) & Humpus(y) & Yumpus(z)) -> (-Shumpus(x) & Tompus(x)))", "(all x y z.(Rex(x) -> -Shumpus(x)) & ((Rex(y) & Yumpa(y)) & ((Rex(z) & Zumpus(z)))) -> -Shumpus(x) & -Yumpus(y)))"]}
{"id": "prontoqa_train_560", "nl": "Wren is a wumpus, Wren is a grimpus, and Wren is not a zumpus.", "fol": "(wumpus(Wren) & grimpus(Wren) & -zumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Wumpus(x)) & all y.(Wren(y) -> Grinse(y)) & all z.(Wren(z) -> -Zumpus(z))))", "(all x.(Wren(x) -> Wumpus(x)) & all y.(Wren(y) -> Grimpus(y)) & all z.(Wren(z) | (Wren(z) -> Nozumpus(z)))))", "all x y z.((Wren(x) & Grimpus(y) & Zumpus(z)) -> (Wumpus(x) & Grimpus(y) & -Wren(z)))", "(as wumpus(Wren) & as Grimpus(Wren) & -as zumpus(Wren))", "(all x.(Wren(x) -> Wumpus(x)) & all y.(Wren(y) -> Grimpus(y)) & all z.(Wren(z) -> -Tompus(z))))", "(all x y z.(Wren(x) -> Wumpus(x)) & ((Wren(y) & Grumpus(y)) -> -Zumpus(z)))", "(all x y z.(Wren(x) -> Wumpus(x)) & (Wren(y) -> Grimpus(y)) & (Wren(z) -> -Zumpus(z)))", "(all x.(Wren(x) -> Wumpus(x)) & (Wren(x) -> Grimpus(x)) & (Wren(x) -> -Zumpus(x)))", "all x y z.((Wren(x) & Grimpus(y) & Furpus(z)) -> (Wumpus(x) | Grimpus(y) | -zumpus(z)))", "(all x.(Wren(x) -> Wumpus(x)) & (Wren(x) -> Grimpus(x)) & (Wren(x) -> -Tompus(x))))", "(all x.(Wren(x) -> Wumpus(x)) & (Wren(x) -> Grimpus(x)) & (Wren(x) -> -Zumpus(x)))", "(all x.(Wren(x) -> Wumpus(x)) & ((Wren(x) -> Grimpus(x))) & ((Wren(x) -> -Zumpus(x))))", "(all x.(Wren(x) -> Wumpus(x)) & (Wren(x) -> Grimpus(x)) & (Furst(x) -> -Zumpus(x)))", "all x y z.((Wren(x) & Grimpus(y) & -Sumpus(z)) -> (Wumpus(x) & Grimpus(y) & NoTompus(z)))", "(all x.(Wren(x) -> Wumpus(x)) & (Grimpus(x) & -Zumpus(x)))", "(all x.(Wren(x) -> Wumpus(x)) & (Wren(x) -> Grimpus(x)) & (Wren(x) -> -Zumpus(x)))"]}
{"id": "prontoqa_train_561", "nl": "Wren is not a tumpus.", "fol": "-tumpus(Wren)", "prediction": [", Tumpus(Wren)", "all x.(Wren(x) -> -Tumpus(x))", "WrenLikelyTumpus(w)", "all x.(Wren(x) -> -Tumpus(x))", "all x.(Wren(x) -> -Tumpus(x))", "all x.(Wren(x) -> -Tumpus(x))", "is notTumpus(Wren)", "Keen(Wren)", "(-Tumpus(Wren))", "S-Tumpus(Wren)", "All x.(Wren(x) -> -Tumpus(x))", "all x.(Wren(x) -> -Tumpus(x))", "all x.(Wren(x) -> -Tumpus(x))", "(-Tumpus(Wren))", "all x.(Wren(x) -> -Tumpus(x))", "all x.(Wren(x) -> -Tumpus(x))"]}
{"id": "prontoqa_train_562", "nl": "Rex is a dumpus, Rex is a lempus, and Rex is not a numpus.", "fol": "(dumpus(Rex) & lempus(Rex) & -numpus(Rex))", "prediction": ["(all x.(Rex(x) -> Dumpus(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> Numpus(z))))", "(all x.(Rex -> Dumpus(x)) & all y.(Rex -> Lempus(y)) & all z.(Rex -> Numpus(z))))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Numpus(z))))", "all x y z.((Rex(x) & Dumpus(x)) -> (Lempus(x) & -Numpus(y)))", "(all x.(Rex(x) -> Dumpus(x)) | (Rex(x) -> Lempus(x))) | (Rex(x) -> -Numpus(x))))", "(all x.(Rex(x) -> Dumpus(x)) & (Lexus(x) -> Lempus(x)) & (Rex(x) -> -Numpus(x)))", "(Putus(Rex) | Lempus(Rex) | Numpus(Rex)))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Numpus(z)))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Numpus(z))))", "(All x.(Rex(x) -> Dumpus(x)) & exists y.(Rex(y) & Lempus(y))) & exists z.(Rex(z) & -Numpus(z))))", "all x y z.((Rex(x) & Dumpus(y) & Lempus(z)) -> (IsDumpus(x) & IsLempus(x,z) & IsNumpus(x)))", "(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Lempus(x)) & -Numpus(x)))", "all x.(Rex(x) -> (Dumus(x) | Lempus(x) | -Numpus(x)))", "(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Lampus(x)) & (Rex(x) -> -Numpus(x)))", "all x y z.((Rex(x) & Dumpus(y) & Lempus(z)) -> ((Dempus(x) | Lempus(z)) | Numpus(z))))", "(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Lempus(x)) & -Numpus(x)))"]}
{"id": "prontoqa_train_563", "nl": "Every tumpus is a numpus.", "fol": "all x. (tumpus(x) -> numpus(x))", "prediction": ["all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Taurus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Numpus(x))", "all x.(Tumpus(x) -> Nompus(x))", "all x.(Tumpus(x) -> Numpus(x))"]}
{"id": "prontoqa_train_564", "nl": "Stella is a dumpus and Stella is a brimpus and Stella is not a numpus.", "fol": "(dumpus(Stella) & brimpus(Stella) & -numpus(Stella))", "prediction": ["(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> Brimpus(y)) & all z.(Stella(z) -> Numpus(z))))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> Brimpus(y))) & all z.(Stella(z) -> Numpus(z))))", "(all x.(Standard(x) -> Dumpus(x)) & all y.(Standard(y) -> Brimpus(y)) & all z.(Standard(z) -> -Numpus(z))))", "all x.(Stella(x) -> (Dumps(x) & Brimpus(x) & -Nompus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Brimpus(y) -> Brimpus(y)) & all z.(Stella(z) -> -Numpus(z))))", "(all x y z.((Stella(x) & Dumpus(x)) -> AllPiece(x)) & ((Stella(y) & Bumme(y)) -> -Nompus(z)))", "all x y.(((Dupus(x) & Brimpus(y)) -> (Dumpus(x) & -Numpus(y)))", "(all x y.(Stella(x) -> Dumpus(x)) & (Stella(y) -> Brimpus(y)) & (Stella(y) -> -Numpus(y)))", "all x y z.((Stella(x) & Dumpus(x) & Brimpus(y) & -Numpus(z)) -> (Dump(x) & Brimpus(y) & -Numpus(z)))", "exists x y z.((Stella(x) & Dumpus(x) & Brimpus(y) & -Numpus(z)) -> (Dupus(x) | Brimpus(y) & -Numpus(z)))", "all x y z.((Stella(x) & Dumpus(x) & Brimpus(y) & Numpus(z)) -> (Dumps(x) & Brimpus(y) & -Numpus(z)))", "all x y z.((Stella(x) & Dugus(x) & Brimpus(y) & -Numpus(z)) -> (Dugus(x) & Brimpus(y) & -Numpus(z)))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> Brimpus(y)) & all z.(Stella(z) -> -Numpus(z))))", "all x y.((Stella(x) & Dumpus(x)) -> (Brimpus(y) & -Numpus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> Brimpus(y))) & all z.(Stella(z) -> -Numpus(z))))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> Brimpus(x)) & -Stella(x)))"]}
{"id": "prontoqa_train_565", "nl": "Gorpuses are shumpuses.", "fol": "all x. (gorpus(x) -> shumpus(x))", "prediction": ["all x.(Gorpus(x) -> Humpus(x))", "all x.(Gorpus(x) -> Shumpus(x))", "all x.(Gorpus(x) -> Shumpus(x))", "all x.(Gorpus(x) -> Shumpus(x))", "all x.(Gorpuse(x) -> Shumpuse(x))", "all x.(Gorpus(x) -> Shumpus(x))", "all x.(Gorpus(x) -> Shumpus(x))", "all x.(Gorpus(x) -> Humpus(x))", "all x.(Gorpus(x) -> Shumpus(x))", "all x.(Gorpus(x) -> Shumpus(x))", "all x.(Gorpuse(x) -> Shumpuse(x))", "all x.(Gorpus(x) -> Shumpus(x))", "all x.(Gorpuse(x) -> Shumpus(x))", "all x.(Gorpus(x) -> Shumpus(x))", "all x y.((Gorpus(x) & Humpus(y)) -> Shumpus(x))", "all x.(Rosynchus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_566", "nl": "Rex is a zumpus and Rex is a sterpus and Rex is not a shumpus.", "fol": "(zumpus(Rex) & sterpus(Rex) & -shumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Zurpus(x)) & all y.(Rex(y) -> Sterpus(y)) & all z.(Rex(z) -> -Shumpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Sterotus(y)) & all z.(Rex(z) -> -Shumpus(z))))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Sterus(x)) & -Shumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Steerpus(x)) & -Shumpus(x)))", "all x y z.((Rex(x) & Zumpus(x) & Sterpus(y) & -Shumpus(z)) -> (Rex,y) & Rex,z)))", "all x y z.((Rex(x) & Zumpus(x) & Sterpus(y) & -Shumpus(z)) -> (Rex,y) & Rex,z)))", "(all x.(Rx(x) -> Tompus(x)) & (Rx(x) -> Sterpus(x)) & -Shumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & ((Rex(x) & Sterpus(x))) & ((Rex(x) & -Shumpus(x)))) -> -Shumpus(x)))", "all x y.((Rex(x) & Zumpus(x)) -> Sterpus(x)) & (Rex(y) -> -Shumpus(y)))", "(all x.(Rex(x) -> Zurpus(x)) & all y.(Stretpus(y) -> -Shumpus(y)))", "all x y z.((Rex(x) & Zumpus(x) & Sterus(y) & Sterpus(z)) -> (Very Unusual(x,z) & -Shumpus(x,z)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Sterus(x)) & (Rex(x) -> -Shumpus(x)))", "all x y.((Rex(x) & Zumpus(x) & Sterpus(y)) -> -Shumpus(x))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Sterpus(x)) & (Rex(x) -> -Shumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Sterpus(x)) & (Rex(x) -> -Shumpus(x)))", "all x y z.((Rex(x) & Tolk(y) & Rank(z)) -> (Tolk(x) | Sterpus(y) | -Shumpus(z)))"]}
{"id": "prontoqa_train_567", "nl": "Stella is a rompus, Stella is a sterpus, and Stella is not a wumpus.", "fol": "(rompus(Stella) & sterpus(Stella) & -wumpus(Stella))", "prediction": ["(all x.(Zata(x) -> Rrompus(x)) & all y.(Storpus(y) -> Serpent(y)) & all z.(Zata(z) -> -Wumpus(z))))", "all x y z.((Stella(x) & Romb(x) & Stella(y) & Sterpus(y)) -> (Romb(x) & -Wumpus(z)))", "(all x.(Stella(x) -> Rompus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Stella(z) -> -Wumpus(z))))", "all x y z.(((Rompus(x) & Sterpus(y) & -Wumpus(z)) -> (Rompus(x) | Sterpus(y)) | (NoWumpus(z) & NoWumpus(z))))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> -Wumpus(x)))", "all x.((Stella(x) & Rompus(x)) -> Sterpus(x)) & -Wumpus(x))", "(all x.(Mush(x) -> Rompus(x)) & (Mush(x) -> Sterpus(x)) & (Mush(x) -> -Wumpus(x)))", "all x y z.((Stella(x) & Rimpus(y) & Sterpus(z)) -> (Rompus(x) | Sterpus(x) | -Wumpus(x)))", "(all x.(Rompus(x) -> Stella)) & (Sterepus(x) -> Stella)) & -Wumpus(x)))", "(all x.((Rompus(x) & ContainsRompus(x))) & ((Rompus(x) & ContainsSteerpus(x))) -> -ContainsWumpus(x)))", "(all x.(Rompus(x) -> StellaRompus)) & (Sterpus(x) -> StellaRompus)) & (Wumpus(x) -> -Wumpus(x)))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> Sterpus(x)) & -Wumpus(x)))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> Sterepus(x)) & -Wumpus(x)))", "(all x.(Stella(x) -> Ripor(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Stella(z) -> -Wumpus(z))))", "all x y z.((Stella(x) & Ropus(y) & Sterpus(z)) -> (Rompus(x) & Sterpus(x) & -Wempus(x)))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> Sterpus(x)) & -Wumpus(x)))"]}
{"id": "prontoqa_train_568", "nl": "Lorpuses are sterpuses.", "fol": "all x. (lorpus(x) -> sterpus(x))", "prediction": ["all x.(Lorpus(x) -> Steroid(x))", "all x.(Lorpus(x) -> Sterpuse(x))", "all x.(Lorpuse(x) -> Sterpuse(x))", "all x.(Lorpus(x) -> Steroid(x))", "all x.(Lorpus(x) -> Sterpuse(x))", "all x.(Lorpus(x) -> Sterpuse(x))", "all x.(Lorpus(x) -> Sterpus(x))", "all x.(Lorpuse(x) -> Sterpule(x))", "all x.(Lorpus(x) -> Sterpuse(x))", "all x.(Lorpus(x) -> Sterpuse(x))", "all x.(Lorpus(x) -> Sterpuse(x))", "all x.(Lorpus(x) -> Sterectuse(x))", "all x.(Lorpuse(x) -> Sterpuse(x))", "all x.(Lorpus(x) -> Sterpuse(x))", "all x.(Lorpus(x) -> Sterpuss(x))", "all x.(Lorpus(x) -> Sterpuse(x))"]}
{"id": "prontoqa_train_569", "nl": "Sally is a jompus and Sally is a gorpus and Sally is not a sterpus.", "fol": "(jompus(Sally) & gorpus(Sally) & -sterpus(Sally))", "prediction": ["(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Gorpus(x)) & (Sally(x) -> -Sterpus(x))))", "all x yz.((Sally(x) & Jompus(x) & Gorpus(y) & -Sterotpus(z)) -> (Jompus(x) & Gorpus(y) & -Sterpus(z)))", "all x.((Sally(x) & Jompus(x)) -> Hornpus(x)) & (-Sterpus(x)) -> Gorpus(x)))", "(all x.(Jompus(x) -> Sally(x)) | (Gorpus(x) -> Sally(x))) | (-Starpus(x) -> Sally(x)))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Gorpus(x)) & -Sterpus(x)))", "(all x.(Jompus(x) -> Scarlett(x)) & (Gorpus(x) -> Corpus(x)) & -Sterpus(x)))", "all x.((Sally(x) & Jompus(x)) -> Gorpus(x)) & (Sally(x) -> -Sterpus(x)))", "exists x.(Sally(x) & Jompus(x) & Gorpus(x) & -Sterpus(x))", "all x.(Sally(x) -> (Jompus(x) & Gorpus(x) & -Sterpus(x)))", "all x y.((Sall(x) & Jompus(x) & Gorpus(y)) -> (Jompus(x) & -sterpus(y)))", "(all x y z.(Jompus(x) -> Sissy(x)) & (Gorpus(y) -> Sissy(z))) & (Sterpus(z) -> -Sterpus(z)))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Gorpus(x)) & (Sally(x) -> -Sterepus(x)))", "all x.(Sally(x) -> (Jojis(x) | Gorpus(x)) & -Sterpus(x)))", "all x y.((Sally(x) & Jompus(x) & Gorpus(y)) -> (Jompus(x) & -Sterepus(y)))", "(all x.(Sally(x) -> Jumped(x)) & all y.(Sally(y) -> Gorpus(y)) & all z.(Sally(z) -> -Sterpus(z))))", "all x y z.((Sally(x) & Jompus(x) & Gorpus(y) & -Sterpus(z)) -> (Jompus(x) & Gorpus(y) & -Sterpus(z)))"]}
{"id": "prontoqa_train_570", "nl": "Sally is not a lorpus.", "fol": "-lorpus(Sally)", "prediction": ["-Lorpus(Sally)", "Sally -Lorpus(Sally)", "Sally is not a lorpus.", "Sally n'est pas lorpus.", "Obwohl Sally kein lorpus, wirbst dussest dussest dussest dussest.", "Sally n\u2019est pas Lorpus(Sally)", "Sally is not a Loupus.", "Sally ist keinLorpus(Sally)", "All x.(Sally(x) -> -Lorpus(x))", "Sally -Lorpus(Sally)", "Sally is not a lorpus.", "Sally doesn't exist x.(Larpus(x) & -Lorpoid(x))", "Sally is not a lorpus.", "Sally is not a lorpus.", "is notLorpus(Sally)", "Sally is not a lorpus."]}
{"id": "prontoqa_train_571", "nl": "Every lempus is a gorpus.", "fol": "all x. (lempus(x) -> gorpus(x))", "prediction": ["all x.(Lempus(x) -> Gorpus(x))", "all x.(Lempus(x) -> Gorpus(x))", "all x.(Lempus(x) -> Gorpus(x))", "all x.(Lempus(x) -> Gorpus(x))", "all x.(Pumpus(x) -> Gorpus(x))", "(all x.(Lempus(x) -> Gorpus(x))", "all x.(Lempus(x) -> Gorpus(x))", "all x.(Lempus(x) -> Gorpus(x))", "all x.(Lempus(x) -> Gorpus(x))", "all x.(Lempus(x) -> Gorpus(x))", "all x.(Lempus(x) -> Gorpus(x))", "all x.(Limpus(x) -> Gorpus(x))", "all x.(Lempus(x) -> Gorpus(x))", "all x.(Limpus(x) -> Gorpus(x))", "all x.(Lempus(x) -> Gorpus(x))", "all x.(Lempus(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_572", "nl": "Wren is a tumpus and Wren is a wumpus and Wren is not a gorpus.", "fol": "(tumpus(Wren) & wumpus(Wren) & -gorpus(Wren))", "prediction": ["(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Wumpus(x)) & (Wren(x) -> -Gorpus(x)))", "(all x.(Wren(x) -> Totumpus(x)) & ((Wren(x) & Gorpus(x))) -> Wmo(x)))", "(all x y.(Tumpus(x) & All z w.(Wren(y) & All w.(Both) & -Gorpus(z))) -> (Tumpus(x) | Wren(y)) & All w.(Both(w) -> Wampus(y))))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Wumpus(x)) & (Wren(x) -> -Gorpus(x)))", "all x y z.((Tumpus(x) & Wren(y) & Worm(z)) -> (Tumpus(x) & Wumpus(y) & -Gorpus(z)))", "(all x y.((Wren(x) & Tumpus(x) & Thumb(y)) -> Thumpus(x)) & ((Wren(x) & Thumb(y)) -> Wumpus(y)) & ((Wren(x) & Gorpus(z)) -> -Tumpus(z))))", "all x y z.((Wren(x) & Tumpus(y) & Wren(z)) -> (Tumpus(x) & Wumpus(z) & -Gorpus(z)))", "(All x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Wumpus(x)) & (Wren(x) -> -Gorpus(x)))", "all x y z.((Wren(x) & Tumpus(y) & Wren(z)) -> (Tumpus(x) & Wumpus(z) & -Gorpus(x)))", "all x y z.((Wren(x) & Tumpus(y) & Wren(z) & Wasp(y) & -Gorpus(z)) -> (Tumpus(x) & Wumpus(z)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Wumpus(y))) & all z.(Wren(z) -> -Gorpus(z))))", "all x y z.((Wren(x) & Tumpus(y) & Wren(z)) -> (Tumpus(x) & Wumpus(z) & -Gorpus(z)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Wumpus(y)) & all z.(Wren(z) -> -Gorpus(z))))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Wumpus(y))) & all z.(Wren(z) -> -Gorpus(z))))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Wumpus(x)) & (Wren(x) -> -Gorpus(x))))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Wumpus(x)) & (Wren(x) -> -Gorpus(x)))"]}
{"id": "prontoqa_train_573", "nl": "Sterpuses are lorpuses.", "fol": "all x. (sterpus(x) -> lorpus(x))", "prediction": ["all x.(Sterpuse(x) -> Lopule(x))", "all x.(Sterpuse(x) -> Llorpuse(x))", "all x.((Sterpuse(x) & Llorpuse(x)) -> InHold(x))", "all x.(Sterpuse(x) -> Lorpuse(x))", "all x.(Sterpuse(x) -> Llorpus(x))", "all x.(Sterpus(x) -> Lorpus(x))", "all x.(Sterpus(x) -> Lerpus(x))", "all x.(Stuerpus(x) -> Lorpus(x))", "all x.(Sterpus(x) -> Lorpus(x))", "all x.(Sterpuse(x) -> Lorpus(x))", "all x.(Sterpoise(x) -> IsLorpus(x))", "all x.(Sterpuse(x) -> Lorphe(x))", "all x.(Sterpuse(x) -> Lorpus(x))", "all x.(Sterpuse(x) -> Lurus(x))", "all x.(Sterpus(x) -> Lorpus(x))", "all x.(Sterpuse(x) -> Lorph(x))"]}
{"id": "prontoqa_train_574", "nl": "Sam is a brimpus, Sam is not a lorpus, and Sam is a dumpus.", "fol": "(brimpus(Sam) & -lorpus(Sam) & dumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Brimpus(x)) & (Sam(x) -> -Lorpus(x)) & (Sam(x) -> Dumpus(x)))", "all x y z.((Sam(x) & Brimpus(x) & Loper(y) & Dumpus(z)) -> (Anamics(x,y) & NoName(y) & NoName(z)))", "all x y.((Sam(x) & Brimpus(x)) & -Lorpus(y) & Dumpus(x)) -> Burmpus(x))", "(all x.(Sam(x) -> Brumpus(x)) & (sam(x) -> -Lorpus(x)) & (sam(x) -> Dumpus(x)))", "(all x.(Sam(x) -> Brimpus(x)) & (Sam(x) -> -Lorpus(x)) & (Sam(x) -> Dumpus(x)))", "all x y z.((Sam(x) & Brimpus(x) & -Lorpus(y) & Dumpus(z)) -> (Brimpus(x) & -Lorpus(y) & Dumpus(z)))", "all x.((Sam(x) & Brunus(x)) -> (-Lorpus(x) & Dumpus(x)))", "(all x.(Sam(x) -> Brimpus(x)) & (Sam(x) -> -Lorpus(x)) & (Sam(x) -> Dumpus(x)))", "all x y z.((Sam(x) & Brimpus(y) & Lorpus(z)) -> (-Sam(x) & Dumpus(x)))", "all x y z.((Sam(x) & Bumpus(y) & Lorpus(z)) -> (Brimpus(x) & -Lorpus(y) & Dumpus(x)))", "(all x.(Sam(x) -> Brimpus(x)) & (Sam(x) -> -Lorpus(x)) & (Sam(x) -> Dumpus(x)))", "(all x.(Sam(x) -> Brimpus(x)) & all y.(Sam(y) -> -Lorpus(y))) & all z.(Sam(z) -> Dumpus(z)))", "(all x.(Sam(x) -> Brimpus(x)) & all y.(Sam(y) -> -Lorpus(y)) & all z.(Sam(z) -> Dumpus(z))))", "(all x y.((Sam(x) & Brimpus(x)) -> -Lorpus(y)) & ((Sam(x) & Dumpus(x)) -> -Sam(x)))", "(Both(Sam) & Brimpus(Sam)) & (-Lorpus(Sam) & Dumpus(Sam)))", "(all x.(Sam(x) -> Brimpus(x)) & (Columbus(x) -> -Lorpus(x)) & (Dumpus(x))))"]}
{"id": "prontoqa_train_575", "nl": "Every lempus is a brimpus.", "fol": "all x. (lempus(x) -> brimpus(x))", "prediction": ["all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Limpus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))", "all x.(Lempus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_576", "nl": "Rex is a tumpus and Rex is not a brimpus and Rex is a vumpus.", "fol": "(tumpus(Rex) & -brimpus(Rex) & vumpus(Rex))", "prediction": ["all x y.((Tumpus(x) & Flower(y)) -> (-Brimpus(x) & -Vumpus(y)))", "(All x.(Tumpus(x) & -Brimpus(x)) & All y.(Vimpus(y) & -Tumpus(y)))", "(all x.(Rex(x) -> Tumpus(x)) & (-Bummus(x)) | (-Bummus(x) & Vumpus(x))))", "(all x.(Rex(x) -> Tumpus(x)) & (Brimpus(x) -> -Brimpus(x)) & (Vumpus(x) -> -Vumpus(x)))", "(all x y.(Tumpus(x) -> Rex)) & (Brumpus(y) -> Rex)) & (Vumpus(x) -> Rex)))", "exists x.(Rex(x) & Tumpus(x) & -Brampus(x) & Vupus(x))", "all x y.((Rex(x) & Tumpus(x)) -> (-Bimpus(y) & Umpus(x)))", "all x y.((Rex(x) & Tumpus(x) & -Brimpus(y) & Kumpus(z)) -> -Tumpus(x))", "(Rex(x) -> Tumpus(x)) & -Brimpus(x) & -Vumpus(x))", "(all x.(Rex(x) -> Tumpus(x)) & all y.(Rex(y) -> NotBrimpus(y))) & all z.(Rex(z) -> Vumpus(z))))", "all x.((Rex(x) & Tumpus(x)) -> (-brimpus(x) & -Vimpus(y)))", "all x y z.((Rex(x) & Tumpus(x) & Brimpus(y)) -> (Tumpus(x) & -Brimpus(x) & Voompus(z)))", "all x y z.((Rex(x) & Tumpus(y) & Brimpus(z)) -> (Tumpus(x) & -Brimpus(x) & Vampire(x)))", "(all x.(Rex(x) -> Tumpus(x)) & (Rex(x) -> -Brimpus(x))) & (Rex(x) -> Vulpu(x)))", "(all x.(Rex(x) -> Tumpus(x)) & (-Bumpus(x) & -Vumpus(x)))", "(all x.(Tumpus(x) -> Rex)) & (Brimpus(x) -> Rex)) & (Vumpus(x))))"]}
{"id": "prontoqa_train_577", "nl": "Max is not an impus and Max is a vumpus and Max is a numpus.", "fol": "(-impus(Max) & vumpus(Max) & numpus(Max))", "prediction": ["(all x.(Max(x) -> -Isbestial(x)) & all y.(Max(y) -> Vumpus(y)) & all z.(Max(z) -> Numpus(z))))", "(all x.(Max(x) -> -Eraser(x)) & ((Max(x) -> Vampus(x)) & ((Max(x) -> Numpus(x)))) -> -Element(x)))", "all x y z.((Max(x) & Impreza(y) & Max(z)) -> (-Impossible(x) & Vempus(y) & Numpus(z)))", "(all x.(Max(x) -> -Illinis(x)) & (Max(x) -> Vumpus(x)) & (Max(x) -> Numpus(x)))", "(all x y.((Max(x) & Impossible(x)) -> Numpus(y)) & ((Max(x) & Vumpus(x)) -> Numpus(x)))", "all x y.((Max(x) & -Imposer(x) & Max(y)) | (Vimpus(y) & Numpus(y))))", "(all x.(Max(x) -> -Impossible(x)) & all y.(Max(y) -> Vimpus(y))) & all z.(Max(z) -> Numpus(z)))", "all x.(Max(x) -> (-Impossible(x) & Vuze(x) & Numpus(x)))", "(all x y.(Max(x) -> -Impossible(x)) & (Max(y) -> Vumpus(y)) & (Max(y) -> Numpus(y)))", "((Max(Max) & -Impos(Max)) | (Max(Max) & -Impos(Max))) | (Max(Max) & -Impos(Max))))", "(all x y.((Max(x) & IsNot(x)) -> Is(x)) & ((Max(y) & Is(y)) -> Vumpus(y)) & ((Max(y) & Is(y)) -> Is(y)))", "all x y z.((Max(x) & Dompus(y) & Dumpus(z)) -> (-Impossible(x) & Vumpus(y) & Numpus(z)))", "all x.((Max(x) -> (-Immerman(x) & Vumpus(x) & Numpus(x)))", "all x y z.((Max(x) & Imperium(y) & Vumpus(z)) -> (-Is(x,y) & -Is(x,z)) & -Is(x,z)))", "(all x y z.((Max(x) & IsImpossible(x) & Vampus(y)) -> Noxis(x)) & ((Max(x) & Vampus(z) & Noxis(z))) -> (-Impossible(x) & Noxis(x))))", "(all x y z.((Max(x) & Imperia(y) & Vampus(z)) -> -Impossible(x)) & ((Max(x) & Vampus(x)) -> Numpus(x)))"]}
{"id": "prontoqa_train_578", "nl": "Each numpus is a vumpus.", "fol": "all x. (numpus(x) -> vumpus(x))", "prediction": ["all x.(Numpus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Nompus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Nompus(x) -> Vumpus(x))", "all x.(Nompus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Numerus(x) -> Vumpus(x))", "all x.(Numerus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Volumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Nompus(x) -> Vumpus(x))", "all x.(Nompus(x) -> V\u00fcmpus(x))", "all x.(Nompus(x) -> DesignedForVumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))"]}
{"id": "prontoqa_train_579", "nl": "Polly is an impus and Polly is a rompus and Polly is not a vumpus.", "fol": "(impus(Polly) & rompus(Polly) & -vumpus(Polly))", "prediction": ["(all x y z.(Polly(x) -> (Impossible(x) & Rompus(y))) & (Polly(z) -> -Vumpus(z))))", "(all x y z.(Polary(x) -> Is(x,Imperial)) | (Polly(y) -> (Rompus(y)))) & (Polly(z) -> -Vimpus(z))))", "(all x.(Placy(x) -> Impossible(x)) & (Placy(x) -> Rompus(x)) & -Vumpus(x)))", "all x y z.((Poly(x) & Imperion(x) & Polly(y) & Rompus(y) & -Vumpus(z)) -> (Imperial(x) & Rompus(y) & -Vumpus(z)))", "all x y.((Poly(x) & Polly(y)) -> (Impose(x) & Rompus(x) & -Vumpus(y)))", "(all x y z.((Polly(x) & Izra(x)) -> (Impose(y) & Rompus(z)) & -Vumpus(x)))", "all x y z.((Polly(x) & Polly(y) & Rimpus(z)) -> (Is(x,z) & -Is(x,z)))", "(all x y.(Polly(x) -> Impossible(x)) & (Polly(y) -> Rompus(y)) & -Vimpus(y)))", "(all x.(Poly(x) -> Improvised(x)) & all y.(Polly(y) -> Rompus(y)) & all z.(Polly(z) -> -Vumpus(z))))", "(all x.(Polly(x) -> IsThis(x)) & all y.(Polly(y) -> Rompus(y))) & all z.(Polly(z) -> -Vumpus(z)))", "(all x.(Ploy(x) -> IsStructure(x)) & ((Ploy(x) & Rooma(x)) -> -Vimpus(x)))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> Rompus(x)) & (Polly(x) -> -Vumpus(x))))", "all x y z.((Polly(x) & Rump(y) & Polly(z)) -> (Polly(x) & Ospe (z) & -Vimpus(z))))", "all x y z.((Polly(x) & Polly(y) & Rompus(z)) -> (Immersion(x) & Rompus(y) & -Vumpus(z)))", "(all x y.((Polly(x) & Impossible(x)) -> (Rompus(y)) & ((Polly(x) & Vulmulus(y)) -> -Vulmus(y)))", "all x y.((Polly(x) & Polly(y)) -> (Issue(x) & Rompus(y) & -Vumpus(y)))"]}
{"id": "prontoqa_train_580", "nl": "Each rompus is a lempus.", "fol": "all x. (rompus(x) -> lempus(x))", "prediction": ["all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) & Lempus(x))", "all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) -> Lampus(x))", "all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) -> Lempus(x))"]}
{"id": "prontoqa_train_581", "nl": "Fae is a wumpus and Fae is not a lempus and Fae is a numpus.", "fol": "(wumpus(Fae) & -lempus(Fae) & numpus(Fae))", "prediction": ["(all x.(Wumpus(x) -> RepresentsFae(x)) & (Unlempus(x) | Numpus(x))))", "(all x.(Fae(x) -> Wumpus(x)) & all y.(Fae(y) -> -Lempus(y))) & all z.(Fae(z) -> Numpus(z))))", "(all x y.((Fae(x) & Wumpus(x)) -> Fur(y)) & ((Fae(x) & -Lempus(x)) -> Numpus(x)))", "all x y.((Fae(x) & Fae(y)) -> (Wumpus(x) & -Lempus(y) & -Numpus(y)))", "(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Numpus(x)))", "(all x.(Wumpus(x) -> Fae(x)) & all y.(Lempus(y) -> Fae(y))) & all z.(Numpus(z) -> Fae(z)))", "(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Numpus(x)))", "(all x.(Fae(x) -> Rumpus(x)) & all y.(Fae(y) -> -Lempus(y))) & all z.(Fae(z) -> Numpus(z)))", "(all x.(Fae,Wumpus) -> Wompus(x)) & (Fae,Lempus) -> Numpus(x)))", "(all x.((Fae(x) & Wumpus(x)) -> Wumpus(x)) & all y.((Fae(y) & -Lempus(y)) -> Numpus(y)))", "(all x y z.(Wumpus(x) -> Wumpus(x)) & (Lempus(y) -> -Lempus(y)) & (Numpus(z) -> Nompus(z)))", "(all x.(Fae(x) -> Humpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Numpus(x)))", "all x y z.((Fae(x) & Wampus(y) & Lempus(z)) -> (Wumpus(x) & -Lempus(x) & Numpus(x)))", "(all x.(Fae(x) -> Wumpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Numpus(x)))", "all x y z.((Fae(x) & Wumpus(y) & Lempus(z) & Numpus(z)) -> (Wumpus(x) | NotLempus(y) | Numpus(z)))", "all x y z.((Fae(x) & Wumpus(y) & Lempus(z) & Numpus(x)) -> (Wumpus(x) & -Lempus(x) & Numbpus(x)))"]}
{"id": "prontoqa_train_582", "nl": "Rompuses are gorpuses.", "fol": "all x. (rompus(x) -> gorpus(x))", "prediction": ["all x.(Rupuses(x) -> Gorpuse(x))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Rompus(x) -> Gorpuse(x))", "all x.(Romesue(x) -> Gorpus(x))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Rompe(x) -> Gorpus(x))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Rompus(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_583", "nl": "Sam is a numpus and Sam is not a gorpus and Sam is a wumpus.", "fol": "(numpus(Sam) & -gorpus(Sam) & wumpus(Sam))", "prediction": ["all x.(Sam(x) -> (Numerus(x) & -Gorpus(x) & Wumpus(x)))", "(all x y.(Numpus(x) & Numpus(y)) & (Is(y) & -Is(y)) & ((Is(y) & Dorpus(y)) | Is(y))))", "all x y.((Sam(x) & Numpus(x) & Sam(y) & -Gorpus(y)) -> Wumpus(y))", "(all x.(Saman(x) -> Numpus(x)) & (-Saman(x) -> Gorpus(x)) & (Saman(x) -> Wumpus(x)))", "(all x y z.((Sam(x) & Numpus(x)) -> -Gorpus(y)) & ((Sam(z) & Wormpus(z)) -> Wumpus(z)))", "(all x.(Name(x) -> Numpus(x)) & all y.((Name(y) & Gorpus(y)) -> Wompus(y)))", "(all x.(Sam(x) -> Numpus(x)) & (Sam(x) -> -Orpheus(x)) & (Sam(x) -> Wumpus(x)))", "all x y.((Sam(x) & Numpus(x)) -> -Gorpus(x) & Wumpus(y))", "(all x y.((SameDay) & Numpus(x)) & ((SameDay) & -Gorpus(y)) | (-SameDay(y) & Wumpus(y)))))", "all x y.((Samma(x) & Numpus(x) & Sam(y)) -> -Gorpus(y) & Sam(z) & Wumpus(z)))", "(numpus(Sam) & -gorpus(Sam) & -wumpus(Sam))", "all x.((Sam(x) & Numpus(x)) -> (-Gorpus(x) | Wumpus(x)))", "all x y.((Sam(x) & Sam(y)) -> (Numpus(x) & -Gorpus(y) & Wumpus(y)))", "(all x.(Sam(x) -> Numpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "all x.((Sam(x) & Numpus(x)) | (-Gorpus(x) & Wumpus(x)))", "(all x.(Subject(x) -> Numpus(x)) & (Possibile(x) -> -Gorpus(x)) & (Wumpus(x))))"]}
{"id": "prontoqa_train_584", "nl": "Sam is not a rompus.", "fol": "-rompus(Sam)", "prediction": ["(-Romex(Sam))", "(-rompus(Sam))", "-rompus(Sam)", "-Rompus(Sam)", "all x.(Sam(x) -> -Rompus(x))", "-Rompus(Sam)", "(-rompus(Sam))", "Sam is not a Rompus(sam)", "exists x.(Sam(x) & -Rompus(x))", "(-Rompus(Sam))", "Sam ist -rompus(sam)", "(-rompus(Sam))", "(-rompus(Sam))", "-Rompus(Sam) & -Rompus(Sam))", "(-Rompus(Sam))", "all x.(Rompus(x) -> -Rompus(x))"]}
{"id": "prontoqa_train_585", "nl": "Each dumpus is a lempus.", "fol": "all x. (dumpus(x) -> lempus(x))", "prediction": ["all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumps(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpus(x) -> Lempus(x))"]}
{"id": "prontoqa_train_586", "nl": "Fae is a numpus, Fae is a grimpus, and Fae is not a lempus.", "fol": "(numpus(Fae) & grimpus(Fae) & -lempus(Fae))", "prediction": ["(all x.(Fae(x) -> Numpus(x)) & all y.(Fae(y) -> Grimpus(y)) & all z.(Fae(z) -> -Lempus(z))))", "all x y-z.((Number(x) & Grimpus(y) & Lempus(z)) -> (Numpus(x) & Grimpus(y) & -Lempus(z)))", "(number(Fae) | grimpus(Fae) | -lempus(Fae))", "(all x y.((Fae(x) & Numpus(x)) -> Grimpus(y)) & ((Fae(x) & -Lempus(y)) -> Numpus(x)))", "all x y z.((Fae(x) & Numpus(x) & Grimpus(y) & Fae(z)) -> ((Numpus(x) & Grimpus(y) & -Lempus(z))))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> Grimpus(x)) & -Lempus(x)))", "all x y z.((Fae(x) & Numpus(y) & Grimpus(z)) -> (Numpus(x) & Dirty(x) & -Lempus(x)))", "(all x y.(Fae(x) -> Number(x)) & (Fae(y) -> Grimpus(y)) & (Fae(z) -> -Lempus(z))))", "exists x.(Fae(x) & ((Numpus(x) & Grimpus(x)) -> Represents(x,y)) & exists z.(Lempus(z) & -Represents(z,z))))", "(All x.(Fae(x) -> Numpus(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> -Lempus(x)))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> Grimpus(x)) & -Lempus(x)))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> Grimpus(x)) & -Lempus(x)))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> -Lempus(x))))", "(all x y z.(Fae(x) -> Numpus(x)) & (Fae(y) -> Grimpus(y)) & (Fae(z) -> -Lempus(z)))", "(all x.(Fae(x) -> Numpus(x)) & all y.(Fae(y) -> Grimpus(y))) & none z.(Fae(z) -> Lempus(z))))", "all x.(Fae(x) -> (Numpus(x) & Grimpus(x) & -Lempus(x)))"]}
{"id": "prontoqa_train_587", "nl": "Fae is not a dumpus.", "fol": "-dumpus(Fae)", "prediction": ["-Mulus(fae)", "-Dumpus(Fae)", "(-Dumus(Fae))", "is a Dumpus(Fae)", "all x.(Fae(x) -> -Dumpus(x))", "(-Dumpus(Fae))", "(-Dumpus(Fae))", "(Wae-Dumpus(fae)", "-Dumus(Fae)", "exists x.(Fae(x) & -Dumpus(x))", "-Dumpus(Fae,Ship(Fae))", "-Dumus(Fae)", "-Dumpus(Fae,e)", "-Dumpus(Fae)", "((Fae(f) & -Dumpus(f)))", "Fae is not a Dumpus."]}
{"id": "prontoqa_train_588", "nl": "Gorpuses are zumpuses.", "fol": "all x. (gorpus(x) -> zumpus(x))", "prediction": ["all x.(Gorpuse(x) -> Zumpuse(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpuse(x) -> Zumpuse(x))", "all x.(Gorpuse(x) -> Zumpuse(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.(Gorpuse(x) -> Zumpuse(x))", "all x.(Gorpuse(x) -> Zumpuse(x))", "all x.(Gorpus(x) -> Zumpuse(x))", "all x.(Gorpuse(x) -> Zumpuse(x))", "all x.(Gorpus(x) -> Zumpus(x))", "all x.((Gorpuse(x) & Zumpus(x)) -> Zumpus(x))", "all x.(Gorpuse(x) -> Zumpuse(x))", "all x.(Gorpuse(x) -> Zumpuse(x))", "all x.(Gorpuse(x) -> Zumpuse(x))", "all x.(Gorpuse(x) -> Zumpuse(x))"]}
{"id": "prontoqa_train_589", "nl": "Polly is a wumpus, Polly is not a zumpus, and Polly is a brimpus.", "fol": "(wumpus(Polly) & -zumpus(Polly) & brimpus(Polly))", "prediction": ["(all x.((Polly(x) & Wumpus(x)) -> Polly(x)) & all y.((Polly(y) & Zumpus(y)) -> Brimpus(y)))", "(all x y z.(Polly(x) -> Wumpus(x)) & (Polly(y) -> -Zumpus(y))) & (Polly(z) -> Brimpus(z)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> -Zombial(x)) & (Polly(x) -> Brimpus(x)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Brimpus(x)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Brimpus(x)))", "all x y z.((Polly(x) & Wumpus(x) & Polly(y) & Zumpus(z)) -> (Rabbit(x) | Brimpus(y)))", "all x y z.((Polly(x) & Umpus(y) & Zumpus(z)) -> (Wumpus(x) & NotTompus(x) & Brimpus(x)))", "all x y z.((Polly(x) & Wumpus(y) & Zumpus(z) & Brimpus(y)) -> (Wumpus(x) & -Tompus(y) & Brimpus(z)))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Poly(y) -> -Zumpus(y))) & all z.(Polly(z) -> Brimpus(z))))", "all x y.((Polly(x) & Polly(y)) -> (Wumpus(x) & -Zoompus(y) & Brimpus(y)))", "(all x y.(Polly(x) -> Wumpus(x)) & (Polly(y) -> -Tompus(y)) & (Polly(y) -> Brimpus(y)))", "(all x.(Wumpus(x) -> Polly)) & all y.(Zumpus(y) -> Polly)) & all z.(Brimpus(z) -> Polly)))", "(all x y z.(Polly(x) -> Wumpus(x)) & ((Polly(y) & -Zumpus(y)) & ((Poly(z) & Brimpus(z)))))", "all x y z.((Polly(x) & Wumpus(y) & Zumpus(z)) -> (Wumpus(x) | Brimpus(x)))", "(all x y z.(Wumpus(x) & Squatter(y) & Toby(z) & (Wumpus(x) | Toby(y))) & (Brimpus(z) & Squatter(y)))", "all x y z.((Polly(x) & Wumpus(y) & Zumpus(z) & Brimpus(x)) -> (Wumpus(x) | Zumpus(y) & Brimpus(z)))"]}
{"id": "prontoqa_train_590", "nl": "Wren is a tumpus, Wren is not a dumpus, and Wren is a rompus.", "fol": "(tumpus(Wren) & -dumpus(Wren) & rompus(Wren))", "prediction": ["(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> -Dumpus(x)) & (Wren(x) -> Rompus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.((Wren(y) & -Dumpus(y))) -> Rompus(y)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> -Dumpus(y))) & all z.(Wren(z) -> Rompus(z)))", "(all x.(Wren(x) -> Tumpus(x)) & (-Dumpus(x) & -Rompus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & (-Wren(x) -> Dumpus(x)) & (-Wren(x) -> Rompus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & (-Dumpus(x)) & (Rompus(x))))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> -Dumpus(x)) & (Wren(x) -> Rompus(x)))", "(all x y z.(Wren(x) -> Tumpus(x)) & ((Wren(y) & -Dumps(y))) | (Wren(z) & Rompus(z)))))", "all x y z.((Wren(x) & Tompus(y) & Dumpus(z)) -> (Tumpus(x,y) & -Dumpus(x,z) & Rumpus(x)))", "(all x y z.((Wren(x) & Tumpus(y)) -> Tumpus(x)) & ((Wren(z) & -Dumpus(z))) -> Rompus(z)))", "(all x.(WorldCat(x) -> Tumpus(x)) & (WorldCat(x) -> -Dumps(x)) & (WorldCat(x) -> Rompus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> -Dumpus(y)) & all z.(Wren(z) -> Rompus(z)))", "all x y z.((Wren(x) & Tumpus(x) & Wren(y) & Plumpus(z)) -> (-Dumpus(y) & Ossip(z) & Rompus(z)))", "(all x.((Wren(x) & Tumpus(x)) -> Tumpus(x)) & ((Wren(x) & -Dumpus(x))) -> Rompus(x)))", "(all x y z.((Wren(x) & Tumpus(y)) -> Tumpus(z)) & ((Wren(z) & Dumpus(z)) -> -Dumpus(z)) & ((Wren(x) & Rompus(x)) -> Torso(x)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> -Dumpus(y))) & all z.(Wren(z) -> Rompus(z)))"]}
{"id": "prontoqa_train_591", "nl": "Tumpuses are yumpuses.", "fol": "all x. (tumpus(x) -> yumpus(x))", "prediction": ["all x.(Tumpus(x) -> Yumus(x))", "all x.(Tumpus(x) -> Yumpus(x))", "all x.(Tumpus(x) -> Yampus(x))", "all x.(Tumpus(x) -> Yumpus(x))", "all x.(Tumpus(x) -> Yumpus(x))", "all x.(Tumpus(x) -> Yumpus(x))", "all x.(Tumpus(x) -> Yumpus(x))", "all x.(Tumpus(x) -> Yumpus(x))", "all x.(Tumpuse(x) -> Yampus(x))", "all x.(Tumpus(x) -> Yampus(x))", "all x.(Tumpus(x) -> Yampus(x))", "all x.(Tumpus(x) -> Yumpus(x))", "all x.(Tumpus(x) -> Yampus(x))", "all x.(Tumpus(x) -> Yumpus(x))", "all x.(Tumpet(x) -> Yumpus(x))", "all x.(Tumpus(x) -> Yampus(x))"]}
{"id": "prontoqa_train_592", "nl": "Sally is not a yumpus and Sally is a lorpus and Sally is a brimpus.", "fol": "(-yumpus(Sally) & lorpus(Sally) & brimpus(Sally))", "prediction": ["all x y z.((Yumpus(x) & Lorpus(y) & Brimpus(z)) -> (-Yumpus(x) & Holster(y) & Brimpus(z)))", "(all x.(Sally(x) -> -Yumpus(x)) & all y.(Sally(y) -> Lorpus(y)) & all z.(Sally(z) -> Brimpus(z))))", "all x y z.((Sally(x) & Yumpus(y) & Throne(z)) -> (-Yumpus(x) & -Lorpus(y) & -Brimpus(z)))", "all x.(Sally(x) -> (-Yumpus(x) | (Lorpus(x) & Brimpus(x)))))", "(all x.(Yumpus(x) -> -Yumpus(x)) & (Lorpus(x) -> Yumbus(x)) & (Brumpus(x) -> -Yumpus(y)))", "all x y z.((Sally(x) & Yumpa(y) & Lorpus(z)) -> (-Yumpus(x) & -Lirps(x) & -Brimpus(x)))", "(all x y z.(Yumpus(x) -> -Yumpus(x)) & (Lorpus(y) -> Yumpus(y)) & -Brimpus(z)))", "all x y.((Sally(x) & Yumpus(y)) -> (-Yumpus(x) & -Lorpus(x) & -Brimpus(x)))", "all x y z.((Sally(x) & Yampus(y) & Lorpus(z)) -> (-Yumpus(x) & Lorpus(y) & Brimpus(z)))", "all x y.((Sally(x) & -Yumpus(x)) -> (Dorpus(x) & Brimpus(y)))", "(all x.(Sally(x) -> -Yumpus(x)) & (Lorpus(x) & Brimpus(x)))", "(-yumpus(Sally,Sally) | (Lorpus(Sally) | Brimpus(Sally))))", "all x y z.((Sally(x) & Yumpsum(y) & Lorpus(z)) -> (-Yumpus(x) & Lemur(x) & Brumpus(x)))", "all x y z.((Sally(x) & Yampus(y) & Lorpus(z)) -> (-Yumpus(x) & -Lorpus(x) & -Brimpus(x)))", "(-Yumpus(s) & -Lorpus(s) & -Brimpus(s))", "all x.((Sally(x) -> (-Yumpus(x) | (Lorpus(x) & Brimpus(x)))))"]}
{"id": "prontoqa_train_593", "nl": "Dumpuses are sterpuses.", "fol": "all x. (dumpus(x) -> sterpus(x))", "prediction": ["all x.(Dumpuse(x) -> Sterpuse(x))", "all x.(Dumpuse(x) -> Sterpuse(x))", "all x.(Dumpuse(x) -> Sterpuse(x))", "all x.(Dumpus(x) -> Sterpus(x))", "all x.(Dumpuse(x) -> Sterpuse(x))", "all x.(Dumpuse(x) -> Sterpus(x))", "all x.(Dumpuse(x) -> Sterpus(x))", "all x.(Dumpuse(x) -> Sterosope(x))", "all x.(Dumpus(x) -> Sterpuse(x))", "(Sternus(dumpuse) & Sterpuse(dumpuse))", "all x.(Dumpuse(x) -> Sterpuse(x))", "all x.(Mumpsue(x) -> Sterpuse(x))", "all x.(Dumpuse(x) -> Sterus(x))", "all x.(Dumpus(x) -> Sterpuse(x))", "all x.(Dumpuse(x) -> Steromuse(x))", "all x.(Dumpuse(x) -> Sterus(x))"]}
{"id": "prontoqa_train_594", "nl": "Sam is not a sterpus and Sam is a brimpus and Sam is an impus.", "fol": "(-sterpus(Sam) & brimpus(Sam) & impus(Sam))", "prediction": ["all x y z.((Sam(x) & Sterpus(y) & Brimpus(z)) -> (-Sterpus(x) & -Brompus(y) & -Impossible(z)))", "all x y z.((Sam(x) & Steros(y) & Brimpus(z)) -> (-Sterpus(x) & -Birmpus(y) & Ispreser(z)))", "(all x.(Sam(x) -> -Sterpus(x)) & all y.(Brimpus(y) -> Impossible(y)))", "(all x.(Sam(x) -> -Sterpus(x)) & all y.(Sam(y) -> Brimpus(y))) & all z.(Sam(z) -> Issuel(z)))", "all x y z.((Sam(x) & Sterpus(y) & Brimpus(z)) -> (-Sterpus(x) & -Brimpus(y) & -Impossible(z)))", "(all x.(Saint(x) -> -Sterpus(x)) & all y.(Brimpus(y) -> Imperator(y)))", "(all x.((Sam(x) & -Sterpus(x)) -> Brimpus(x)) & all y.((Sam(y) & Impossible(y)) -> NotSterpus(x)))", "(all x.(Sam(x) -> -Sterpus(x)) & all y.(Brimpus(y) -> Ambissip(y))),", "all x.(Sam(x) -> (-Sterep(x) & -Brimpus(x) & -Impossin(x)))", "(all x y.((Sam(x) & -Sterpus(x)) -> Brimpus(x)) & ((Sam(y) & Erz)) -> Imperator(y)))", "(all x.(Sam(x) -> (-Sterpus(x)) & all y.(Brimpus(y) & All z.(Implose(z))) -> (Bribus(y) & -Sterpus(z))))", "exists x.(Sam(x) & -(Sterpus(x) | Brimpus(x))) | Assertant(x)))", "(all x.(Sam(x) -> -Sterus(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> Duplicator(x)))", "(all x.(Sam(x) -> -Sterpus(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> Imperator(x)))", "(all x.(Sam(x) -> -Starpus(x)) & all y.(Brimpus(y) & Impermissible(y))))", "(all x.(Sam(x) -> -Sterpus(x)) & all y.(Brimpus(y) & -Impossible(y)))"]}
{"id": "prontoqa_train_595", "nl": "Sam is not a dumpus.", "fol": "-dumpus(Sam)", "prediction": ["Sam -Dumpus(sam)", "all x.(Sam(x) -> -Dumpus(x))", "Sam is -Dumpus(Sam)", "-Dumpus(Sam)", "(-Dumus(Sam))", "(Dumus(Sam))", "(All x.(Sam(x) -> -Dumpus(x))", "(-Dumpus(sam,x))", "Sam -Dumpus(sam)", "Sam -Dumpus(Sam)", "(-Dumus(Sam)).)", "all x.(Sam(x) -> -Dumpus(x))", "all x.(Sam(x) -> -Dumpus(x))", "all x.(Sam(x) -> -Dumpus(x))", "(-Dumpus(Sam))", "the deaf."]}
{"id": "prontoqa_train_596", "nl": "Fae is not a numpus, Fae is a shumpus, and Fae is a jompus.", "fol": "(-numpus(Fae) & shumpus(Fae) & jompus(Fae))", "prediction": ["all x y z.((Fae(x) & Shumpus(y) & Jompus(z)) -> (-Numpus(x) & Shumpus(y) & Jompus(z)))", "all x y z.((Fae(x) & Shumpus(y) & Jompus(z)) -> (-Numpus(x) & Shumpus(y) & Jompus(z)))", "all x y z.(RefersTo(x,y) & (Fae(z) -> -Numpus(z)) | (Fae(x) -> Humpus(x))) & (Fae(x) -> Jompus(x)))", "(all x.(Fae(x) -> -Numpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> Jompus(x)))", "(all x.(Fae(x) -> -Numpus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> Jompus(z))))", "all x.((Fae(x) & -Numpus(x)) -> (Shumpus(x) & Jompus(x)))", "(all x.((Fae) & -Numpus(x)) -> Shumpus(x)) & all y.((Fae(y) & Jompus(y)) -> Jompus(y)))", "all x y z.((Fae(x) & Shampus(y) & Jompus(z)) -> (-Numpus(x) & Shumpus(y) & Jompus(z)))", "(all x y z.(Fae(x) -> -Numpus(x)) & (Shumpus(y) & Jompus(z)))", "(all x y z.((Fae(x) & Numpus(y)) -> -Numpus(x)) & ((Fae(z) & Humpus(z))) -> Jompus(z)))", "(all x.(Fae(x) -> -Numpus(x)) & (Shumpus(x) | Jompus(x))))", "(all x.(Fee(x) -> -Numpus(x)) & (Fee(x) -> Shumpus(x)) & (Fee(x) -> Jompus(x)))", "(all x.(Fae(x) -> -Numpus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> Jompus(z))))", "(all x.(Fae(x) -> -Numerus(x)) & all y.(Shumpus(y) -> Contains(y,x)) & all z.(Jampus(z) -> Contains(z,y))))", "(all x.(Fae(x) -> -Numpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> Jompus(x))))", "(all x y z.(Fae(x) -> (Numpus(x) & -Numpus(y))) & (Fae(z) -> (Shumpus(z) & Jompus(z))))"]}
{"id": "prontoqa_train_597", "nl": "Each shumpus is a gorpus.", "fol": "all x. (shumpus(x) -> gorpus(x))", "prediction": ["all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_598", "nl": "Alex is not a gorpus and Alex is a zumpus and Alex is a tumpus.", "fol": "(-gorpus(Alex) & zumpus(Alex) & tumpus(Alex))", "prediction": ["all x.(Alex(x) -> (-Gorpus(x) & Zumpus(x) & Umbrella(x)))", "all x y z.((Alex(x) & Gorg (x) & Zumpus(y) & Tumpus(z)) -> -Gorpus(x) & Zumpus(y))", "all x y z.((Alex(x) & Gorpus(y) & Zumpus(z)) -> (-Gorpus(x) & Zumpus(y) & Tumpus(z)))", "all x y z.((Alex(x) & Gorpus(y) & Zumpus(z)) -> (-Gorpus(x) & Zumpus(x) & Tumus(x)))", "all x.(Alex(x) -> (-Gorpus(x) & -Tompus(x) & -Tompus(x)))", "(all x.(Alex(x) -> -Gorpus(x)) & all y.(Alex(y) -> Tosh(y))) & all z.(Alex(z) -> Tumpus(z)))", "all x.(Alex(x) -> (-Gorpus(x) & -Tompus(x) & -Tumpus(x)))", "(all x.(Alex(x) -> -Gorpus(x)) & all y.(Alex(y) -> Zumpus(y))) & all z.(Alex(z) -> Tumpus(z)))", "(all x.(Alex(x) -> -Gorpus(x)) & all y.(Alex(y) -> Zumpus(y)) & all z.(Alex(z) -> Tumpus(z))))", "(all x.(Alex(x) -> -Gorpus(x) & all y.(Alex(y) -> Zumpus(y))) & all z.(Alex(z) -> Tumpus(z))))", "(all x.(Alex(x) -> -Gorpus(x)) & (Alex(x) -> Tompus(x)) & (Alex(x) -> Tumpus(x)))", "all x y.((Alex(x) & Gorpus(y)) -> (-Gorpus(x) & Zumpus(y) & Tumpus(z)))", "(all x y.((Alex(x) & Gorpus(x)) -> -Gorpus(x)) & ((Alex(y) & Zumpus(y)) -> Tumpus(y)))", "all x y z.((Alex(x) & Gorpus(y) & Zumpus(z)) -> (-Gorpus(x) & Zumpus(x) & Tumpus(x)))", "all x y z.((Alex(x) & Gorpus(y) & Tompus(z)) -> (-Gorpus(x) & Tompus(z) & Tumpus(z)))", "all x y z.((Alex(x) & Gorpus(y) & Zumpus(z)) -> (-Gorpus(x), & Zumpus(y) & Tumpus(z)))"]}
{"id": "prontoqa_train_599", "nl": "Alex is not a shumpus.", "fol": "-shumpus(Alex)", "prediction": ["(-Shumpus(Alex))", "Alex is not shumpus.", "Alex is notShumpus(Alex)", "Alex is notShumpus(Alex)", "(-Shumpus(Alex))", "Alex is notShumpus(Alex)", "all x.(Alex(x) -> -Shumpus(x))", "all x.(Alex(x) -> -Shumpus(x))", "all x.(Alex(x) -> -Shumpus(x))", "Alex is notShumpus(Alex)", "Alex is not a shumpus(Alex)", "Alex & -Shumpus(Alex)", "Alex is not a shumpus.", "Alex ist keinesShumpus(Alex)", "Alex (-Shumpus(Alex))", "all x.(Alex(x) -> NoShumpus(x))"]}
{"id": "prontoqa_train_600", "nl": "Every gorpus is a lempus.", "fol": "all x. (gorpus(x) -> lempus(x))", "prediction": ["all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.((Gorpus(x) & Lempus(x)) -> Gorpus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))"]}
{"id": "prontoqa_train_601", "nl": "Rex is not a lempus, Rex is a dumpus, and Rex is a zumpus.", "fol": "(-lempus(Rex) & dumpus(Rex) & zumpus(Rex))", "prediction": ["(-Lempus(Rex) & Dumpus(Rex) & Zumpus(Rex))", "(all x.(Rex(x) -> -Lempus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> Zumpus(x)))", "(all x.(Rex(x) -> -Lempus(x)) & all y.(Dumpus(y) & Tolkien(y))))", "(all x.(Rex(x) -> -Lempus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> Zumpus(x)))", "all x y z.((Rex(x) & Dumpus(y) & Zumpus(z)) -> (-Lempus(x) & Daumpus(z) & Daumpus(y) & Zumpus(z)))", "all x y z.((Rex(x) & Dumpus(y) & Zumpus(z)) -> (-Lempus(x) & Dumpus(y) & Zumpus(z)))", "(all x.(Rex(x) -> -Lempus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> Zumpus(x)))", "(all x y z.((Rex(x) & Lempus(y) & Dumpus(z)) -> -IsLempus(x)) & ((Rex(x) & Zumpus(x)) -> -IsDumpus(x)))", "(all x.(Rex(x) -> NoLempus(x)) & all y.(Rex(y) -> Dumpus(y)) & all z.(Rex(z) -> Zumpus(z))))", "all x y z.((Rex(x) & Dumpus(y) & Zumpus(z)) -> (-Lempus(x) & Dumpus(y) & Zumpus(z)))", "(all x y.(Bacteria(x) -> -Lempus(x)) & (Dumpus(y) | Zumpus(y)))", "all x y.((Rex(x) & Dumpus(y)) -> (-Lempus(x) & Zumpus(y)))", "(all x.(Rex(x) -> -Lempus(x)) & all y.(Dumpus(y) -> Zumpus(y)))", "(all x.(Rex(x) -> -Lempus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> Zumpus(x)))", "(all x.(Rex(x) -> -Lempus(x)) & (Pusum(x) -> Dumpus(x)) & (Zumpus(x))))", "all x y z.((Rex(x) & Lempus(y) & Dumpus(z)) -> (-Lempus(x) & Dumpus(x) & Zumpus(x)))"]}
{"id": "prontoqa_train_602", "nl": "Yumpuses are numpuses.", "fol": "all x. (yumpus(x) -> numpus(x))", "prediction": ["all x.(Yumpus(x) -> Numpuse(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpuse(x))", "all x.(Yumpus(x) -> Numpuse(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x.(Yumpus(x) -> Puss(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x (yuppus(x) -> Numpus(y))", "all x.(Yumpus(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpuse(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x.(Mumpus(x) -> Numpuse(x))"]}
{"id": "prontoqa_train_603", "nl": "Fae is a grimpus, Fae is a jompus, and Fae is not a numpus.", "fol": "(grimpus(Fae) & jompus(Fae) & -numpus(Fae))", "prediction": ["all x y z.((Fae(x) & Grimpus(y) & Jompus(z)) -> (Fae(x) & -Numpus(x)))", "all x y z.((Fae(x) & Grimpus(x) & Jompus(y) & Nompus(z)) -> (Felassus(x) & Feassus(y) & -Felassus(y)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Jompus(y)) & -Numpus(y)))", "(all x y z.(Fae(x) -> Grimpus(x)) & (Fae(y) -> Jompus(y)) & -Fae(z)))", "(all x.(Fae(x) -> Grubbs(x)) & all y.(Fae(y) -> Jompus(y)) & -Numpus(y)))", "all x y z.((Fae(x) & Grimpus(x) & Jompus(y) & -Numpus(z)) -> (Fae(x) & Fae(x)))", "all x y z.((Fae(x) & Grimpus(y) & Jompus(z)) -> (Rumpus(x) | -Numpus(x)))", "(all x.(Fae(x) -> Grypus(x)) & all y.(Fae(y) -> Jompus(y)) & all z.(Fae(z) -> -Numpus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Jompus(y)) & all z.(Fae(z) -> -Numpus(z))))", "(all x.(Fae(x) -> Grypus(x)) & (Fae(x) | Jompus(x))) & (Fae(x) -> -numpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & -Fae(x)))", "all x y z.((Fae(x) & Grimpus(x) & Jompus(y) & -Numpus(z)) -> (Grompus(x) | Fae(y) & -Nompus(y)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & -Fae(x)))", "all x.(Fae(x) -> (Smoky(x) & Jompus(x) & -Numpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Jompus(y)) & all z.(Fae(z) -> -Nompus(z))))", "all x y z.((Fae(x) & Grimpus(x) & Jompus(y) & Numpus(z)) -> (Fae(x) & -Fae(x)))"]}
{"id": "prontoqa_train_604", "nl": "Wumpuses are shumpuses.", "fol": "all x. (wumpus(x) -> shumpus(x))", "prediction": ["all x.(Wumpus(x) -> Shumpus(x))", "all x.(Wumpus(x) -> Shumpus(x))", "all x.(Wumpus(x) -> Shumpuse(x))", "all x.(Wumpus(x) -> Shumpuse(x))", "all x.(Wumpus(x) -> Shumpus(x))", "all x.(Wumpus(x) -> Humpback(x))", "all x.(Wumpus(x) -> Shumpus(x))", "all x.(Wumpus(x) -> Shumpus(x))", "all x.(Wumpus(x) -> Shumpus(x))", "all x.(Wumpus(x) -> Shumpus(x))", "all x.(Wumpus(x) -> Shumpus(x))", "all x.(Wumpus(x) -> Shumpus(x))", "all x.(Wumpuse(x) -> Scrumpus(x))", "all x.(Wumpuse(x) -> Shumpus(x))", "all x.(Wumpuse(x) -> shumpuse(x))", "all x.(Wumpus(x) -> Humpus(x))"]}
{"id": "prontoqa_train_605", "nl": "Polly is not a shumpus, Polly is a grimpus, and Polly is a gorpus.", "fol": "(-shumpus(Polly) & grimpus(Polly) & gorpus(Polly))", "prediction": ["(all x.(Croppus(x) -> -Shumpus(x)) & all y.(Croppus(y) -> Grubbus(y))) & all z.(Gorpus(z) -> Gorpus(z)))", "all x y z.((Polly(x) & Grimpus(y) & Gorpus(z)) -> (-Shumpus(x) & Grimpus(y) & Gorpus(z)))", "(All x y z.((Polly(x) & Shumpus(y)) -> -Shumpus(x)) & ((Polly(z) | (Grimpus(z)) | Gorpus(z)))))", "(all x y.(Populus(x) -> -Shumpus(x))) & (Populus(y) -> Grimpus(y)) & (Populus(y) -> Gorpus(y)))", "(all x.(Polly(x) -> -Shumpus(x)) & all y.(Polly(y) -> Grimpus(y)) & all z.(Polly(z) -> Gorpus(z))))", "exists x.(Polly(x) & -(Shumpus(x) | Grimpus(x)) | Gorpus(x)))", "all x y z.((Polly(x) & Grimpus(y) & Gorpus(z)) -> (-shumpus(x) | (Shumpus(y) | Grimpus(y) | Gorpus(z))))", "all x y z.((Polly(x) & Grimpus(y) & Gorpus(z)) -> (-Shumpus(x) & Blossom(y) & Grist(z)))", "(all x.(Shumpus(x) -> -Shumpus(x)) & (Grimpus(x) -> Grimpus(x)) & (Gorpus(x) -> Gorpus(x)))", "all x y z.((Polly(x) & Plumpus(y) & Gorpus(z)) -> (-Shumpus(x) | Grimpus(y) | Gorpus(z)))", "(all x.(Ploy(x) -> -Shumpus(x)) & (Ploy(x) -> Grimpus(x)) & (Ploy(x) -> Gorpus(x)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> Grimpus(x)) & (Polly(x) -> Gorpus(x)))", "(all x.(Poly(x) -> -Shumpus(x)) & (Polly(x) -> Grimpus(x)) & (Polly(x) -> Gorpus(x)))", "(all x.(Polly(x) -> -Shumpus(x)) & all y.(Poly(y) -> Grosspus(y))) & all z.(Polly(z) -> Gorpus(z)))", "(all x y z.((Polly(x) & Humpus(y) & Grimpus(z)) -> -Shumpus(x)) & ((Polly(x) & Gorpus(x)) | (-Shumpus(y) & Grimpus(z)))))", "(all x.(Poby(x) -> -Shumpus(x)) | (Poby(x) -> Grimpus(x)) | (Poby(x) -> Gorpus(x))))"]}
{"id": "prontoqa_train_606", "nl": "Sally is a gorpus and Sally is not a grimpus and Sally is a brimpus.", "fol": "(gorpus(Sally) & -grimpus(Sally) & brimpus(Sally))", "prediction": ["all x y z.((Sally(x) & Gorpus(x) & -Grimpus(y) & Brimpus(z)) -> (Gorpus(x) | Brimpus(z))))", "(all x.(Sally(x) -> Gorpus(x)) & (Sally(x) -> -Grimpus(x)) & (Sally(x) -> Brimpus(x))))", "all x y z.(Brompus(x) -> (Gorpus(x) & Grimpus(y) & Brimpus(z)))", "all x.(Sally(x) & Gorpus(x) & -Grumpus(x) & Brimpus(x))", "(all x.(Sally(x) -> Gorpus(x)) & (Sally(x) -> -Grimpus(x))) & (Sally(x) -> Brimpus(x)))", "(all x.((Sally(x) & Gorpus(x)) -> Grimpus(x)) & all y.((Sally(y) & Brimpus(y)) -> Brimpus(y)))", "(all x.(Sallie(x) -> Gorpus(x)) & all y.(Sallie(y) -> NoGrimpus(y))) & all z.(Sallie(z) -> Brimpus(z))))", "all x y.((Sally(x) & Gorpus(x) & Sally(y)) -> (-Grimpus(y) & Brimpus(x)))", "(all x.(Gorpus(x) -> Sally)) & all y.(Grimpus(y) -> -Sally(y))) & all z.(Brompus(z) -> Sally(z)))", "all x.(Sally(x) -> (Gorpus(x) & -Smoochs(x) & Brimpus(x)))", "all x y z.((Sally(x) & Gorpus(x) & -Grimpus(y) & Brimpus(z)) -> (Gorpus(x) & Brimpus(z)))", "all x y z.((Sally(x) & Gorpus(x) & Sally(y) & Plumpus(z)) -> (SallyIsGrimpus(x) & SallyIsBrimpus(y)))", "all x y z.((Sally(x) & Grimpus(y) & Brumpus(z)) -> (Gorpus(x) & -Smoothpus(y) & Brimpus(z)))", "(all x.(Sally(x) -> Gorpus(x)) & (Sally(x) -> -Grimpus(x)) & (Sally(x) -> Brimpus(x))))", "(all x.(Sally(x) -> Gorpus(x)) & (-Surpis(x) & Brimpus(x))))", "(all x.(Sally(x) -> Gorpus(x)) & (-Surpis(x) & Brimpus(x))))"]}
{"id": "prontoqa_train_607", "nl": "Sally is not a wumpus.", "fol": "-wumpus(Sally)", "prediction": ["(-Wumpus(Sally))", "Sally is notWumpus(Sally)", "Sally is not a wumpus.", "exists x.(Sally(x) & -Wumpus(x))", "Sally is not a wumpus.", "Sally is not a wumpus.", "Sally is not a wumpus.", "Sally is notWumpus(Sally)", "Sally is not a wumpus.", "((Sally(s) & -Wumpus(s)))", "Sally & -Wumpus(Sally)", "Sally is not a wumpus.", "all x.(Sally(x) -> -Wumpus(x))", "Sally is not a wumpus.", "Sally is awsome.", "Sally -Wumpus(s)"]}
{"id": "prontoqa_train_608", "nl": "Polly is not a sterpus and Polly is a jompus and Polly is a numpus.", "fol": "(-sterpus(Polly) & jompus(Polly) & numpus(Polly))", "prediction": ["all x y.((Poly(x) & -Stroker(x) & Polly(y)) -> (Jompus(y) & Numpus(y)))", "all x y z.((Polly(x) & Sterpus(y) & Jompus(z)) -> (-Sterpus(x) & Polly(x) & Nobus(x)))", "all x y z.((Polly(x) & Steropus(y) & Jompus(z)) -> (-Steropus(x) & Holmpus(y) & Numpus(z)))", "(all x.(Dropping(x) -> -Therpus(x)) & (Jompus(x) | Numpus(x)))", "(exists x.(Sterpus(x) & -Sterpus(x)) & exists y.(Jompus(y) & Noxus(y))))", "all x.(Polly(x) -> (-Sterpus(x) & Jompus(x) & Numpus(x)))", "all x y z.((Polly(x) & Steros (y) & Jompus(z)) -> (-Sterpus(x) | Numpus(x)))", "all x y z.((Polly(x) & Sterpus(y) & Jompus(z)) -> (-Sterpus(x) & -Nompus(x)))", "all x y.((Polly(x) & -Sterpus(x)) | (Megan(y) & Jompus(y)) | (Megan(y) & Numpus(y))))", "(all x y.((Polly(x) & Sterectus(y)) -> -Stroh(x)) & ((Polly(x) & Jompus(y)) -> Numpus(x)))", "((Polly(Polly) & -Sterpus(polly)) | (Polly(polly) & Jompus(polly))) | (Polly(polly) & Numpus(polly))))", "(all x.(Ploy(x) -> -(Sterus(x) | Jompus(x))) & all y.(Numpus(y))))", "(all x.(Sterpus(x) -> NotStretter(x)) & all y.(Jompus(y) -> -Sterpus(y))) & (Nompus(y) -> -Sterpus(y))))", "(all x.(Polly(x) -> -Sterpus(x)) & (Ploy(x) -> Jompus(x)) & (Polly(x) -> Numpus(x)))", "(-Sterpus(Polly) & Jompus(Polly) & Numpus(Polly))", "(all x.(Poly(x) -> -Sterepus(x)) & (Pompus(x) | Numpus(x))))"]}
{"id": "prontoqa_train_609", "nl": "Fae is a gorpus and Fae is a zumpus and Fae is not a grimpus.", "fol": "(gorpus(Fae) & zumpus(Fae) & -grimpus(Fae))", "prediction": ["all x y z.((Fae(x) & Gorpus(x) & Zumpus(y) & Grimpus(z)) -> (Gorpus(x) & Zumpus(y) & -Grimpus(z)))", "(all x y z.(Feagle(x) -> Gorpus(x)) & (Feagle(y) -> Zumpus(y)) & (Feagle(z) -> -Grimppus(z)))", "all x.(Fae(x) -> (Gorpus(x) & Zumpus(x) & -Grimpus(x)))", "all x.(Fae(x) -> (Gorpus(x) & Zumpus(x) & -Grimpus(x)))", "all x y.((Fae(x) & Gorpus(x) & Zumpus(y)) -> (Grompus(x) & -Grimpus(y)))", "all x y.((Fae(x) & Gorpus(x) & Zumpus(y)) -> (Surprise(x) & -Grimpus(x)))", "(all x y.(Fae(x) -> Gorpus(x)) & (Fae(y) -> Zumpus(y)) & (Fae(y) -> -Grimpus(y)))", "(all x.(Fae(x) -> Gorpus(x)) & all y.(Fae(y) -> Zumpus(y)) & all z.(Fae(z) -> -Grimpus(z))))", "(all x y.(WaitingForce(x) -> Gorpus(x)) & (Dumpus(y) -> Zumpus(y)) & (Fale(y) -> -Grimpus(y)))", "(all x y.(Fae(x) -> Gorpus(x)) & (Fae(y) -> Zumpus(y)) & -Fae(y)))", "all x y z.((Fae(x) & Gorpus(x) & Zumpus(y) & Grempus(z)) -> (Gorpus(x) & Tolus(y) & -Grimpus(z)))", "(all x y z.(Fae(x) -> Gorpus(x)) & (Fae(y) -> Zumpus(y)) & (Fae(z) -> -Grimpus(z)))", "all x.((Fae(x) -> (Gorpus(x) | Zumpus(x)) & -Gripper(x)).", "(all x y.((Fae(x) & Gorpus(x)) -> Grimpus(x)) \u2022 ((Fae(y) & Zumpus(y)) -> -Grammpus(y)))", "all x y z.((Fae(x) & Gorpus(x) & Zumpus(y) & -Grimpus(z)) -> (Rosaur(x) & Tosh(y) & Tosh(z)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> -Grippus(x)))"]}
{"id": "prontoqa_train_610", "nl": "Fae is not a wumpus.", "fol": "-wumpus(Fae)", "prediction": ["the DaeSeason(fae,wumpus)", "all x.(Fae(x) -> -Wumpus(x))", "-Wumpus(Fae)", "all x.(Fae(x) -> -Wumpus(x))", "(-Wumpus(Fae))", "all x.(Fae(x) -> -Wumpus(x))", "-Wumpus(Fae)", "all x.(Fae(x) -> -Wumpus(x))", "(-Wumpus(Fae))", "-Wumpus(Fae)", "all x.(Fae(x) -> -Wumpus(x))", "all x.(Fae(x) -> -Wumpus(x))", "-Wumpus(Fae)", "(Wumpus(Fae) & -Wumpus(Fae))", "none.Fae(f) & -Wumpus(f))", "(-Wumpus(Fae,Wumpus))"]}
{"id": "prontoqa_train_611", "nl": "Each tumpus is a yumpus.", "fol": "all x. (tumpus(x) -> yumpus(x))", "prediction": ["all x.(Tumpus(x) -> Yumptus(x))", "all x.(Tumpus(x) -> Yampus(x))", "all x.(Tumpus(x) -> Yampus(x))", "all x.(Tumpus(x) -> Yampus(x))", "all x.(Tumpus(x) -> Yampus(x))", "all x.(Tumpus(x) -> Yampus(x))", "all x.(Tumpus(x) -> Yumpus(x))", "all x.(Tumpus(x) -> Yampus(x))", "all x.(Tumpus(x) -> Yumpus(x))", "all x.(Tumpus(x) -> Yumps(x))", "all x.(Tumpus(x) -> Yumpus(x))", "all x.(Tumpus(x) -> Yumpus(x))", "all x.(Tumpus(x) -> Yumpus(x))", "all x.(Tumpus(x) -> Yumps(x))", "exists x.(Tumpus(x) & Yampus(x))", "all x.(Tumpus(x) -> Yumpus(x))"]}
{"id": "prontoqa_train_612", "nl": "Polly is an impus, Polly is not a yumpus, and Polly is a numpus.", "fol": "(impus(Polly) & -yumpus(Polly) & numpus(Polly))", "prediction": ["(all x y z.(Plumpus(x) -> Impossible(x)) & (-Yumpus(y) & -Nimpus(z))))", "(all x.(Polly(x) -> Issue(x)) & (Pollly(x) -> -Yumpus(x)) & (Pollly(x) -> Numpus(x)))", "exists x y z.(Polly(x) & Impossible(x) & Polly(y) & -Yumpus(y) & Numbast(z))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Yumpus(x)) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & IsImposer(x) & Polly(y) & -Yumpus(y)) -> (Impossible(x) | Numpus(y)))", "exists x.(Polly(x) & Imposer(x) & -yumpus(x) & -numpus(y))", "(all x.(Polly(x) -> Impeccable(x)) | (Polly(x) -> -Yumpus(x))) & (Polly(x) -> Numpus(x)))", "all x y.((Polly(x) & Polly(y)) -> (Implicator(x) & -Yumpus(y) & Numpus(y)))", "(all x y z.(Polly(x) -> Is(x,i)) & (Polly(y) -> -Yumpus(y)) & (Polly(z) -> Numpus(z))))", "(all x.(Pally(x) -> Issue(x)) & (Polly(x) -> -Yumpus(x)) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Impectation(y) & Yompus(z)) -> (Impossible(x) & -Yumpus(y) & Numpus(z)))", "all x.(Polly(x) -> (Impossible(x) | PollyNoble(x)))", "(all x.(Polly(x) -> Issuel(x)) & (Polly(x) -> -Yumpus(x)) & (Polly(x) -> Numpus(x))))", "(all x y.(Poly(x) -> Insistent(x)) & ((Polly(y) & -Yumpus(y))) | (Polly(y) & Numpus(y))))", "all x y z.((Polly(x) & Yumpus(y) & Polly(z)) -> (Impossible(x) & -Yumpus(z) & Numpus(z)))", "all x y z.((Polly(x) & Is(x,y) & Polly(z)) -> (Impossible(x) | -Yumpus(z) | Numpus(z)))"]}
{"id": "prontoqa_train_613", "nl": "Every lorpus is a dumpus.", "fol": "all x. (lorpus(x) -> dumpus(x))", "prediction": ["all x.(Lorpus(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpus(x))", "all x.exists y.(Lorpus(x) & Dumpus(y))", "all x.(Lorpus(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpus(x))", "all x.(Lorph(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_614", "nl": "Polly is not a dumpus, Polly is a tumpus, and Polly is a shumpus.", "fol": "(-dumpus(Polly) & tumpus(Polly) & shumpus(Polly))", "prediction": ["(all x.(Poly(x) -> -Dumpus(x)) & (Polly(x) -> Tumpus(x)) & (Polly(x) -> Humpus(x)))", "(all x y z.((Polly(x) & Dumpus(y)) -> -Dumpus(z)) & ((Poly(x) & Tumpus(z))) -> Humpus(z)))", "(all x.(Poly(x) -> -Dumpus(x)) & (Ply(x) -> Humpus(x)) & (Ply(x) -> Humpus(x)))", "(all x.(Polly(x) -> -Dumpus(x)) & all y.(Polly(y) -> Tumpus(y)) & all z.(Polly(z) -> Humpus(z))))", "(all x.(Polly(x) -> -Dumpus(x)) & (Poly(x) -> Tumpus(x)) & (Poly(x) -> Humpus(x)))", "all x y z.((Poly(x) & Dumpus(y) & Tumpus(z) & Humpus(z)) -> (-Dumpus(x) & Tumpus(y) & Shumpus(z)))", "all x.((Polly(x) & -Dumpus(x)) -> (Tumpus(x) | Shumpus(x)))", "(all x.(Ploe(x) -> -Dumpus(x)) & (Tumpus(x) & Humpus(x)))", "(all x.(Dumps(x) -> Polly)) & (Tumpus(x) -> Polly)) & (Shumpus(x) -> Polly)))", "all x y z.((Polly(x) & Dumpus(y) & Tumpus(z) & Shumpus(z)) -> (-Dumpus(x) & Tumpus(x) & Shumpus(x)))", "(all x.(Polly(x) -> -Dumpus(x)) & all y.(Polly(y) -> (Tumpus(y) & Shumpus(y))))", "(all x.(Polly(x) -> -Dumpus(x)) & all y.(Polly(y) -> Tumpus(y)) & all z.(Polly(z) -> Humpus(z))))", "(all x.(Polly(x) -> -Dupus(x)) & all y.(Polly(y) -> Tumpus(y)) & all z.(Polly(z) -> Rumpus(z))))", "exists x.(Polly(x) & -Dupus(x) & Polly(x) & Tumpus(x) & Humpus(x))", "(all x.(Polly(x) -> -Dumpus(x)) & all y.(Polly(y) -> Tumpus(y)) & all z.(Polly(z) -> Shumpus(z)))", "(all x y z.((Polly(x) & Dumpus(y)) -> -Dumpus(x)) & ((Polly(z) & Tumpus(z))) -> Humpus(z)))"]}
{"id": "prontoqa_train_615", "nl": "Polly is not a lorpus.", "fol": "-lorpus(Polly)", "prediction": ["all x.((Polly(x) & -Lorpus(x)) -> -Lorph(x))", "is a lorpus.", "Polly is notLorpus(Polly)", "All x.((Poly(x) & -Lorpus(x)) -> -Lorpus(x))", "all x.(Sheep(x) -> -Lorpus(x))", "(-Lorpus(Polly))", "(-Lorpus(Polly))", "all x.(Polly(x) & -Lorpus(x))", "all x.(Polly(x) -> -Lorpus(x))", "Polly is notLorpus(Poly)", "-Lorpus(Polly)", "(-Lorpus(Polly))", "all x.(Polly(x) -> -Lorpus(x))", "all x.(Polly(x) -> -Lorpus(x))", "(-Lorpus(Polly))", "-Lorpus(Poly)"]}
{"id": "prontoqa_train_616", "nl": "Sally is a tumpus, Sally is a numpus, and Sally is not a lempus.", "fol": "(tumpus(Sally) & numpus(Sally) & -lempus(Sally))", "prediction": ["(all x y.(Tumpus(x) -> SallyMean(x)) & (Numpus(y) -> SallyMean(y)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> Numpus(y)) & all z.(Sally(z) -> -Lempus(z))))", "all x.((Sally(x) & Tumpus(x)) | (Sally(x) & Numpus(x))) | (Sally(x) & -Lempus(x))))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> Numpus(y)) & -Lempus(y)))", "all x y z.((Sally(x) & Tumpus(y) & Numpus(z)) -> (Tumpus(x,y) & Numpus(y) & -Lempus(x)))", "(all x.(Sally(x) -> Tompus(x)) & (Sally(x) -> Numpus(x)) & -Limpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> Numpus(y)) & all z.(Sally(z) -> -Lempus(z))))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> Numpus(x)) & -Lempus(x)))", "(all x y z.(Sally(x) -> Tumpus(x)) & ((Sally(y) & -Lampus(z))) -> Numpus(y)))", "exists x y z.(Tumpus(x) & Numpus(y) & Tumpus(z) & Sally (x) & Numpus(x,y) & -Limpus(x,z)))", "all x y z.((Sally(x) & Tumpus(x) & Numpus(y) & Lempus(z)) -> (Tumpus(x) & Numpus(y) & -Lempus(z)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> Numpus(x)) & (Sally(x) -> -Lempus(x))))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> Numpus(x)) & (Sally(x) -> -Lempus(x))))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> Numpus(y)) & all z.(Sally(z) -> -Lempus(z))))", "all x y z.((Sally(x) & Tumpus(y) & Numpus(z)) -> (Tumpus(x) & Numpus(y) & -Lampus(z)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> Numpus(y)) & all z.(Sally(z) -> -Lempus(z))))"]}
{"id": "prontoqa_train_617", "nl": "Each vumpus is a lorpus.", "fol": "all x. (vumpus(x) -> lorpus(x))", "prediction": ["all x.(Vumpus(x) -> Lorompus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lower(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lady(x))", "all x.(Vumpus(x) -> Lorpus(x))", "exists x.(Vuzeum(x) & Lorde(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lordpus(x))", "all x.(Vumpus(x) -> Loomis(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vuxpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Loompus(x))"]}
{"id": "prontoqa_train_618", "nl": "Stella is an impus and Stella is a brimpus and Stella is not a lorpus.", "fol": "(impus(Stella) & brimpus(Stella) & -lorpus(Stella))", "prediction": ["(all x.(Stella(x) -> Issue(x)) & all y.(Brimpus(y) & -Lorpus(y)))", "all x y z.((Stella(x) & Implicator(x) & Brimpus(y) & -Lorpus(z)) -> (Illegal(x) & Brimpus(y) & NotLorpus(z)))", "(all x.(Stella(x) -> Is(x)) & all y.((Stella(y) & Brimpus(y))) -> (-Lorpus(y))))", "all x y.((Stella(x) & Ilia(x) & Stella(y)) -> (Impossible(x) & Brimpus(y) & -Lorpus(y)))", "(all x.((Stella(x) & IsIllegal(x)) -> Brimpus(x)) & ((Stella(x) & -Llorpus(x)) -> IsLorpus(x)))", "all x.(Stella(x) -> (Imposer(x) & Brimpus(x) & -Lorpus(x)))", "all x y z.((Stella(x) & Ilir(y) & Stella(z)) -> (Impossible(x) & Brimpus(z) & -Lorpus(z)))", "all x y.((Stella(x) & Impossible(x) & Brimpus(y) & -Lorpus(x)) -> NotLorpus(x))", "all x y.((Stella(x) & Is(x) & Stella(y)) -> (Bimpus(y) & -Lorpus(y)))", "all x y.((Stella(x) & Illegal(x)) -> (Impossible(x) & Brimpus(x) & -Lorpus(y)))", "(all x y.((Stella(x) & Impreza(y)) -> IsArrest(x)) & ((Stella(x) & Brimpus(y)) -> -Lorpus(x)))", "(all x.(Stella(x) -> Issue(x)) & (Stella(x) -> Rimpus(x)) & (Stella(x) -> -Lorpus(x)))", "(all x.(Stella(x) -> Ilira(x)) & (Stella(x) -> Brimpus(x)) & (Stella(x) -> -Lorpus(x)))", "(all x y.((Stella(x) & Cervical(x)) -> Its(x)) & ((Stella(y) & Brimpus(y)) -> (Stella(y) & -Lorpus(y))))", "(all x.(Stella(x) -> Illegal(x)) & all y.(Stella(y) -> Brimpus(y)) & all z.(Stella(z) -> -Lorpus(z))))", "all x.((Stella(x) & Is(x)) -> (Birmpus(x) & -Lorpus(x)))"]}
{"id": "prontoqa_train_619", "nl": "Sterpuses are grimpuses.", "fol": "all x. (sterpus(x) -> grimpus(x))", "prediction": ["all x y.((Sterpuse(x) & Grimpuse(y)) -> Stroke(x,y))", "all x.(Sterpus(x) -> Grimpuse(x))", "all x.(Sterpuse(x) -> Grimpuse(x))", "all x.(Sterpus(x) -> Grimpus(x))", "all x.(Stretpuse(x) -> Grimpuse(x))", "all x.(Sterpuse(x) -> Grimpuse(x))", "all x.(Sterpus(x) -> Grimpuse(x))", "all x.(Sterpus(x) -> Shrimppuse(x))", "all x.(Sterpus(x) -> Gruppus(x))", "all x.(Sterpuse(x) -> Grimpuse(x))", "all x.(Strerpus(x) -> Grimpuse(x))", "all x.(Sterpuse(x) -> Grimpuse(x))", "all x.(Sterpuse(x) -> (Grampus(x) & Sparrow(x)))", "all x.(Sterpuse(x) -> Gruppuse(x))", "all x.(Sterpuse(x) -> Grimpuse(x))", "all x.(Sterpus(x) -> Grimpuse(x))"]}
{"id": "prontoqa_train_620", "nl": "Fae is not a grimpus, Fae is a numpus, and Fae is a yumpus.", "fol": "(-grimpus(Fae) & numpus(Fae) & yumpus(Fae))", "prediction": ["all x y z.((Fae(x) & Grimpus(y) & Numpus(z)) -> (-Faeles(x) & Numpus(x) & Yumpus(z)))", "all x y z.((Fae(x) & Grimpus(x) & Numerus(y) & Yumpus(z)) -> (-Fae(x,y) & -Fae(x) & (-Fae(x,z) | -Fae(y))))", "(all x.(Fae(x) -> -Grimpus(x)) & (Double(x) -> Numpus(x)) & (Yumpus(x) -> Fae(x)))", "(i.e.,Drumpus(y) & -Grampus(y)) & (Numpus(y) | Yumpus(y)))", "(all x.(Fae(x) -> -Grimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> Yumpus(x)))", "(-ArcPusus(Fae) & Acrapus(Fae) & Acrapus(Fae) & Acrapus(Fae))", "(all x.(Fae(x) -> -Grimpus(x)) & all y.(Fae(y) -> -Numpus(y))) & all z.(Fae(z) -> Yamashita(z)))", "(all x.(Fae(x) -> -Grimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> Yummpus(x)))", "all x.(Fae(x) -> (-Grimpus(x) & -Numpus(x) & -Yumpus(x)))", "all x.((Fae(x) & -Grimpus(x)) -> (Nompus(x) & Yumpus(x)))", "all x.(Fae(x) -> (-Grimpus(x) & Numpus(x) & Yampus(x)))", "all x y z.((Fae(x) & Grimpus(y) & Numpus(z)) -> (-Smooth(x) & -Yumpus(x)))", "(all x.(Fae(x) -> -Grimpus(x)) & all y.(Fae(y) -> Numpus(y))) & all z.(Fae(z) -> Yumpus(z))))", "(All x.(Fae(x) -> -Grimpus(x)) | (Nompus(x) & Yumpus(x))))", "(all x.(Fae(x) -> -Grimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> Yumpus(x))))", "(all x.(Fae(x) -> -Grimpus(x)) & all y.(Fae(y) -> Numpus(y)))"]}
{"id": "prontoqa_train_621", "nl": "Vumpuses are lorpuses.", "fol": "all x. (vumpus(x) -> lorpus(x))", "prediction": ["all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Larpus(x))", "all x.(Vumpus(x) -> Liplotype(x))", "all x.(Vumpus(x) -> Flovorus(x))", "all x.(Vumpus(x) -> Loomis(x))", "all x.(Vumpus(x) -> (Lorpus(x) & HasLemur(x)))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpuse(x))", "all x y.((Vumpus(x) & Lorpus(y)) -> Lepuse(x,y))", "all x.(Vumpus(x) -> exists y.(Lorpus(y) & -Lopeze(x)))", "all x.(Vumpus(x) -> Loomis(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lemmings(x))", "all x.(Vumpus(x) -> Loomis(x))", "all x.(Vumpus(x) -> LoomisOf(x))", "all x.(Vumpus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_622", "nl": "Alex is a brimpus and Alex is not a lorpus and Alex is a grimpus.", "fol": "(brimpus(Alex) & -lorpus(Alex) & grimpus(Alex))", "prediction": ["(all x.(Alex(x) -> Brimpus(x)) & ((Alex(x) & -Lorpus(x)) & ((Alex(x) & Grimpus(x)))))", "all x.((Alex(x) & Brimpus(x)) -> (-Lorpus(x) & Grimpus(x)))", "all x y.((Alex(x) & Brimpus(x) & -Lorpus(y) & Grimpus(z)) -> (Brampus(x) & Grimpus(x)))", "all x.((Alex(x) & Brimpus(x) & -Lorpus(x)) -> Grimpus(x))", "(all x.(Alex(x) -> Brimpus(x)) & ((Alex(x) -> -Lorpus(x))) | (Alex(x) -> Grimpus(x))))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Lorpus(x)) & (Alex(x) -> Grimpus(x)))", "(All x.(Brimpus(x) -> (Alex) | (-Lorpus(x) | Grimpus(x)))))", "(all x.(AlexAlex(x) -> Brimpus(x)) & (Alex(x) -> -Lorpus(x)) & (Alex(x) -> Grimpus(x)))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Lorpus(x)) & (Alex(x) -> Grimpus(x)))", "(Bribus(Alex) & -Lorpus(Alex) & Grimpus(Alex))", "(all x.(Alex) -> Brimpus(x)) & ((Alex) -> -Lorpus(x))) | (Alex(x) -> Grimpus(x))))", "all x y.((Alex(x) & Brimpus(x) & -Lorpus(y)) -> Grimpus(x))", "all x y.((Alex(x) & Brimpus(x) & Alex(y)) -> (-Lorpus(y) & Grimpus(y)))", "all x.((Alex(x) & Brimpus(x)) | (-lorpus(x)) | (-lorpus(x) & Grimpus(x))))", "all x y.((Alex(x) & British(x)) & (-Lorpus(y) & Grimpus(y))) -> FullStorm(x))", "(all x.(Alex(x) -> Brimpus(x)) & (Lorpus(x) | Grimpus(x))))"]}
{"id": "prontoqa_train_623", "nl": "Alex is a lorpus, Alex is not a grimpus, and Alex is a tumpus.", "fol": "(lorpus(Alex) & -grimpus(Alex) & tumpus(Alex))", "prediction": ["(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Toumpus(x))))", "(all x y z.(Alex(z) & Servor(x,z)) -> (Lorpus(x) | -Grimpus(z) | Tumpus(z))))", "all x y z.((Alex(x) & Lorpus(y) & Grimpus(z) & Tumpus(x)) -> (Lorpus(x) & -Grimpus(x) & Tumpus(x)))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Tumpus(x)))", "(all x.(Alex(x) -> Throat(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Tumpus(x))))", "all x y z.((Alex(x) & Lorpus(x) & Grempus(y) & Tompus(z)) -> (Lorpus(x) & -Grimpus(y) & Tumulus(z)))", "(all x.(Alex(x) & Lorpus(x)) & -Smoothpus(x) & Tumpus(x))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Tumpus(x)))", "(all x.(Alex(x) -> Loomis(x)) & (Alex(x) -> -Gruppus(x)) & (Alex(x) -> Tumpus(x))))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> -Grimpus(y))) & all z.(Alex(z) -> Tumpus(z))))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Tumpus(x))))", "(All x.(Alex(x) -> Lorpus(x)) & -Gruppus(x)) & all y.(Alex(y) -> Tumpus(y)))", "(all x y z.((Alex(x) & Lorpus(y)) -> Elastic(x)) & ((Alex(z) & -Rumpus(z))) -> Tumpus(z)))", "all x y z.((Alex(x) & Lorpus(y) & Grumpus(z)) -> (Lorpus(x) & -Gruppus(x) & Tumpus(x)))", "(all x.(Lorpus(x) | -Grimpus(x)) & all y.(Tumpus(y)) -> -Lorpus(x)))", "exists x y z.(Child(x) & Lorpus(x) & Grappa(y) & Tumpus(z))"]}
{"id": "prontoqa_train_624", "nl": "Each zumpus is a wumpus.", "fol": "all x. (zumpus(x) -> wumpus(x))", "prediction": ["all x.(Zumpus(x) -> Wempus(x))", "all x.(Zumpus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wampus(x))", "all x.(Tompus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Mutus(x))", "all x.(Tompus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wampus(x))", "all x.(Tompus(x) -> Humpus(x))", "all x.(Zumpus(x) -> Wumpus(x))", "all x.(Tompus(x) -> Wampus(x))", "all x.(Tompus(x) -> Hush(x))", "all x.(Tompus(x) -> Wumpus(x))", "all x.(Tompus(x) -> Wumpus(x))", "all x.(Sumpus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_625", "nl": "Alex is a sterpus and Alex is a gorpus and Alex is not a wumpus.", "fol": "(sterpus(Alex) & gorpus(Alex) & -wumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Sterpus(y) & Gorpus(z)) -> (Sterpus(x) | Gorpus(x) | -Wumpus(x)))", "all x y z.((Alex(x) & Sterpus(y) & Gorpus(z)) -> (Stereo(x) & Wormpus(x) & -Wumpus(y)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Wumpus(z))))", "(all x.(Alex(x) -> Steroid(x)) & (Alex(x) -> Gorpus(x)) & (Alex(x) -> -Wumpus(x)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Gorpus(y))) & all z.(Alex(z) -> -Wumpus(z)))", "all x y z.((Alex(x) & Sterpus(x) & Gorpus(y) & -Wumpus(z)) -> (Sterpus(x) & Gorpus(y) & -Wumpus(z)))", "all x y z.((Alex(x) & Sterpus(y) & Gorpus(z)) -> (Stereo(x) & Gorpus(y) & -Wumpus(z)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> Wumpus(z))))", "(all x.(Alex(x) -> Sterpus(x)) & (Alex(x) -> Gorpus(x)) & (Alex(x) -> -Wumpus(x)))", "all x y.((Alex(x) & Sterpus(x)) & ((Alex(y) & Grinpus(y)) | (Alex(y) & NoWumpus(y)))) -> Sterpus(x) & Gorpus(y)))", "(all x.(Alex(x) -> Sterus(x)) | (Alex(x) -> Gorpus(x))) & (Alex(x) -> -Wumpus(x)))", "all x y.((Alex(x) & Sterpus(x)) -> ((Rosen(x) & Gorpus(y)) & -Wumpus(y)))", "all x y z.((Alex(x) & Sterpus(x) & Gorpus(y) & -Wumpus(z)) -> (Estrates(x) & Gorpus(y)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Gorpus(y)) & -Wumpus(y)))", "the number of people who read this article is: (Sterepus(Alex) & Gorpus(Alex) & -Wumpus(Alex)))", "(all x.(Alex(x) -> Sterpus(x)) & (Alex(x) -> Gorpus(x)) & (Alex(x) -> -Wumpus(x)))"]}
{"id": "prontoqa_train_626", "nl": "Jompuses are tumpuses.", "fol": "all x. (jompus(x) -> tumpus(x))", "prediction": ["all x.(Jompuse(x) -> Tumpus(x))", "all x.(Jompuse(x) -> Tumulus(x))", "all x.(Jompus(x) -> Tumpus(x))", "all x.(Jompuse(x) -> Tumulus(x))", "all x.(Jompuse(x) -> Tumpus(x))", "all x.(Jombuse(x) -> Tumulus(x))", "all x.(Jompuse(x) -> Tumpus(x))", "all x.(Jompus(x) -> Tumulus(x))", "all x.(Jimpus(x) -> Tumulus(x))", "all x.(Jompuse(x) -> Tumpus(x))", "all x.(Jomesuse(x) -> Tumpus(x))", "all x.(Jompuse(x) -> Tumulus(x))", "all x.(Jompuse(x) -> Tumulus(x))", "all x.(Jompuse(x) -> Tumulus(x))", "all x.(Jompuse(x) -> Tumulus(x))", "all x.(Jompuse(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_627", "nl": "Max is a rompus, Max is not a tumpus, and Max is a numpus.", "fol": "(rompus(Max) & -tumpus(Max) & numpus(Max))", "prediction": ["(all x y z.((Max(x) & Rompus(y)) -> Rimpus(x)) & ((Max(z) & -Tumpus(z))) -> Numpus(z)))", "all x y z.((Max(x) & Tom(y) & Durpus(z)) -> (Rompus(x) & -Tumpus(y) & Numpus(z)))", "(all x.(Rompus(x) -> (Max-Rompus))) & (-Tumpus(x) -> Max-Numpus(x)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Tumpus(x)) & (Max(x) -> Numpus(x)))", "all x y z.((Max(x) & Rump(y) & -Tumpus(z) & Numpus(z)) -> (IsRompus(x) & IsTumpus(x) & IsNumpus(x)))", "all x.((Max(x) -> Rompus(x)) & (-Marsh(x) -> Totumpus(x)) & (Max(x) -> Numberpus(x)))", "(all x.(Max(x) -> Roman(x)) & (Max(x) -> -Tumpus(x)) & (Max(x) -> Numpus(x)))", "(all x.(Rompus(x) -> Maximus)) & all y.(Tumpus(y) -> Maximus(y)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Tumpus(x)) & (Max(x) -> Numpus(x)))", "(all x.(Max(x) -> Rompus(x)) & (-Max(x) -> Tumpus(x)) & (-Max(x) -> Numpus(x)))", "all x.((Max(x) & Rompus(x)) -> -Tumpus(x)) & (Max(x) & Numpus(x)))", "(all x y z.((Max(x) & Rumpus(x) & Numpus(y)) -> Roman(x)) & ((Max(z) & -Tumpus(z))) -> Numpus(z)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Tumpus(x)) & (Max(x) -> Numpus(x)))", "(all x.(Rompus(x) -> -Tumpus(x)) and (NotUmpus(x) -> -Mumpus(x)))", "(all x.(Max(x) -> Rompus(x)) & (Max(x) -> -Tumpus(x)) & (Max(x) -> Numpus(x)))", "(all x.(Max(x) -> Romass(x)) & -Tumpus(x)) & all y.(Max(y) -> Numpus(y)))"]}
{"id": "prontoqa_train_628", "nl": "Polly is a brimpus, Polly is a numpus, and Polly is not a vumpus.", "fol": "(brimpus(Polly) & numpus(Polly) & -vumpus(Polly))", "prediction": ["(all x y z.(Brimpus(x) -> Polly(y)) & (numpus(z) -> Polly(y)) & -vumpus(z)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)) & -Vumpus(x)))", "(all x.(Brimpus(x) | Numpus(x))) & all y.(Vumpus(y)) -> Polly(x)))", "(all x.(Polly(x) -> Brimpus(x)) & all y.(Polly(y) -> Numpus(y)) & all z.(Polly(z) -> -Vumpus(z))))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)) & -Vumpus(x)))", "all x y z.((Polly(x) & Brimpus(x) & Numpus(y) & Polly(z)) -> (Brimpus(x) & Numpus(y) & -Vumpus(z)))", "(all x y z.((Polly(x) & Brimpus(x) & Numpus(y)) -> Polly(z)) & ((Poly(x) & Numpus(z)) -> -Vimpus(z)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)) & (Polly(x) -> -Vumpus(x)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)) & (Polly(x) -> -Vumpus(x)))", "(all x.(Polly(x) -> Brimpus(x)) & all y.(Poly(y) -> Numpus(y)) & all z.(Polly(z) -> -Vumpus(z))))", "all x y z.((Polo(x) & Brimpus(x) & Numpus(y) & Polly(z)) -> (Brimpus(x) | Numpus(y) & -Vumpus(z)))", "(all x y z.((Polly(x) & Brimpus(x)) -> Polly(y)) & ((Polly(z) & Numpus(z)) -> Polly(z))) & ((Polly(z) & -Vuxpus(z)) -> -Vumpus(z)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)) & (Polly(x) -> -Vimpus(x))))", "(all x.(Polly) -> Brimpus(x)) & all y.(Polly(y) -> Numpus(y)) & all z.(Polly(z) -> -Vumpus(z))))", "(all x.(Bumpus(x) | Numpus(x))) & (Vumpus(x) | Polly(x))))", "(all x y z.((Poloy(x) & Brimpus(x)) -> Polly(y)) & ((Poly(z) & Numpus(z)) -> -Vumpus(z))))"]}
{"id": "prontoqa_train_629", "nl": "Alex is a lempus, Alex is an impus, and Alex is not a gorpus.", "fol": "(lempus(Alex) & impus(Alex) & -gorpus(Alex))", "prediction": ["all x y z.((Alex(x) & Lempus(x) & Issue(y) & -Gorpus(z)) -> (Lempus(x) & Issue(y) & -Gorpus(z)))", "all x y z.((Alex(x) & Lempus(x) & Imperator(y) & -Gorpus(z)) -> ((Recognition(x) & Creature(y) & Creature(z)))))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Imperative(y)) & -Gorpus(y)))", "(all x.(AlexAlex(x) -> Lempus(x)) & all y.(AlexAlex(y) -> Impossible(y)) & all z.(AlexAlex(z) -> -Gorpus(z))))", "(all x.(Alexa(x) -> Lempus(x)) & all y.(Alexa(y) -> Impectant(y)) & -Gorpus(y)))", "all x y z.((Alex(x) & Lempus(x) & Imperator(y) & -Gorpus(z)) -> (Lempus(x) & Imperator(y) & -Gorpus(z)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Imperator(y))) & all z.(Alex(z) -> -Gorpus(z))))", "(all x.(Alex(x) -> Lempus(x)) & (Alex(x) -> Isolator(x)) & (Alex(x) -> -Gorpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Impossible(z)) -> (Head(x,y) & -Gorpus(x)))", "(25) & (Lempus(Alex) | Impermissable(Alex) | -Gorpus(Alex)))", "(all x.(Alex(x) -> Loomis(x)) & all y.(Alex(y) -> Issues(y)) & all z.(Alex(z) -> -Gorpus(z))))", "all x y z.((Alex(x) & Dermpus(y) & Imperator(z)) -> (Lempus(x) & Impossible(y) & -Gorpus(z)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Impedient(y)) & -(Alex(y) & Gorpus(y))))", "(all x y z.(Alex(x) -> Lempus(x)) & (Alex(y) -> Illegal(y)) & (Alex(z) -> -Gorpus(z))))", "(all x.(Alex(x) -> Lempus(x)) | (Alex(x) -> Imperative(x))) & (Alex(x) -> -Gorpus(x)))", "all x y z.((Alex(x) & Lempus(x) & Issue(y)) -> ((Mexican(x) & -Gorpus(z)) | (Mexican(x) & Issue(y))))"]}
{"id": "prontoqa_train_630", "nl": "Alex is not a tumpus.", "fol": "-tumpus(Alex)", "prediction": ["(-tumpus(Alex))", "Alex is not a Tumpus.", "Alex isn'tTumpus.", "(-Tumpus(Alex))", "Alex -Tumpus(Alex)", "(-Tumpus(Alex))", "all x.(Alex(x) -> -Tumpus(x))", "Alex is notTumpus(Alex)", "Alex -Tumpus(Alex)", "all x.(Alex(x) -> -Tumpus(x))", "All x.(Alex(x) -> -Tumpus(x))", "Alex isn\u2019tTumpus(Alex)", "Alex is notTumpus(Alex).", "all x.(Alex(x) -> -Tumpus(x))", "Alex is notTumpus(Alex)", "Alex is notTumpus(Alex)"]}
{"id": "prontoqa_train_631", "nl": "Rex is a zumpus, Rex is a wumpus, and Rex is not a jompus.", "fol": "(zumpus(Rex) & wumpus(Rex) & -jompus(Rex))", "prediction": ["(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Wumpus(x)) & (Rex(x) -> -Jompus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Wumpus(x)) & (Rex(x) -> -Jompus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Wumpus(x)) & (Rex(x) -> -Jompus(x)))", "(all x.(Rex(x) -> Tolpus(x)) & (Wumpus(x) -> Wumpus(x)) & -Jumpus(x)))", "all x y z.((Rex(x) & Zumpus(y) & Umpus(z)) -> (Baby(x) | Womb(x) & -Jimpus(x)))", "(all x.(Rex(x) -> Tosp(x)) & all y.(Wumpus(y) -> Tosp(y))) & (Rex(y) -> -Jimpus(y)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Wumpus(y)) & all z.(Rex(z) -> -Jompus(z))))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Wumpus(x)) & (Rex(x) -> -Jompus(x))))", "all x y z.((Rex(x) & Tompus(y) & Wumpus(z)) -> (Tompus(x) & Wumpus(x) & -Jampus(y)))", "(all x y z.(Rex(x) -> Zumpus(x)) & ((Rex(y) & Wumpus(y)) -> -Jumpus(z)))", "all x y.((Rex(x) & Zumpus(x) & Wumpus(y)) -> (Rex(x) & -Jimpus(x)))", "(all x.(Rex(x) -> Azumpus(x)) & (Rex(x) -> AWumpus(x)) & (Rex(x) -> -Jompus(x))))", "(all x.(Rex(x) -> Zurpus(x)) & all y.(Rex(y) -> Wumpus(y)) & all z.(Rex(z) -> -Jimpus(z))))", "(all x.(Rex & Zumpus(x)) & all y.(Wumpus(y) & -Jompus(y)))", "all x y z.((Rex(x) & Zumpus(y) & Wumpus(z)) -> (Tompus(x) & Wumpus(y) & -Jompus(y)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Wumpus(y) -> -Jompus(y)))"]}
{"id": "prontoqa_train_632", "nl": "Sam is a jompus, Sam is a yumpus, and Sam is not a gorpus.", "fol": "(jompus(Sam) & yumpus(Sam) & -gorpus(Sam))", "prediction": ["(all x.(SameDay(x) -> Jompus(x)) & (SameDay(x) -> Yumpus(x)) & -Gorpus(x)))", "(all x.(Sam(x) -> Jompus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> -Gorpus(x))))", "all x y z.((Sam(x) & Jompus(y) & Yumpus(z)) -> (IsJompus(x) & IsYumpus(x) & -IsGorpus(x)))", "all x y z.((Sam(x) & Jompus(y) & Yumpus(z) & -Gorpus(x)) -> (Jompus(x) & Yampus(y) & -Gorpus(z)))", "(all x y z.((Sam(x) & Jompus(x)) -> (Jompus(x) | Yompus(x))) & ((Sam(y) & Gorpus(y)) -> -Gorpus(z)))", "all x y z.((Sam(x) & Jompus(x) & Yumpus(y) & -Gorpus(z)) -> (Jompus(x) | Yumpus(y) | -Gorpus(z)))", "(all x.(Jompus(x) -> Sampling(x)) & (Yumpus(x) -> Sampling(x)) & -Gorpus(x)))", "(all x.(Sam(x) -> Jompus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> -Gorpus(x))))", "(all x.(Sam(x) -> Jompus(x)) & (Phieu(x) -> Yumpus(x)) & (Sam(x) -> -Gorpus(x)))", "(all x.(Jompus(x) -> SamSamMammal)) & (Yumpus(x) -> SamMammal)) & (-Boris(x) -> SamMammal(x)))", "all x y z.((Sam(x) & Jompus(y) & Yumpus(z)) -> (IsJompus(x) & IsYumpus(x) & IsNonGorpus(x)))", "(all x.(Sam(x) -> Jompus(x)) & ((Sam(x) -> Yumpus(x))) -> (Sam(x) -> Gorpus(x)))", "all x y z.((Sam(x) & Jompus(x) & Yumpsum(y) & Sam(z)) -> (OtherSam(z) & -Gorpus(z)))", "(all x.(Sam(x) -> Jompus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> -Gorpus(x))))", "(all x.(Jompus(x) -> Sam(x)) & all y.(Yumpus(y) -> Sam(x)) & all z.(Gorpus(z) -> Sam(z))))", "all x y z.((Sam(x) & Jompus(x) & Yuppus(y) & Gorpus(z)) -> (Jompus(x) | Yampus(y) & -Gorpus(z)))"]}
{"id": "prontoqa_train_633", "nl": "Brimpuses are rompuses.", "fol": "all x. (brimpus(x) -> rompus(x))", "prediction": ["all x.(Brittus(x) -> Rompuse(x))", "all x.(Brimpus(x) -> Rompus(x))", "all x.(Brimpus(x) -> Rompus(x))", "all x.(Brimpus(x) -> Rompus(x))", "all x.(Brimpus(x) -> Rompus(x))", "all x.(Brompus(x) -> Rompus(x))", "all x.(Robbe(x) -> Romanose(x))", "all x.(Brompus(x) -> Rompus(x))", "all x.(Brimpus(x) -> Rompus(x))", "all x.(Brumpus(x) -> Rompus(x))", "all x.(Brompus(x) -> Rompus(x))", "all x.(Birmpus(x) -> Rompus(x))", "all x.(Brimpus(x) -> Rompus(x))", "all x.(Brumpus(x) -> Rompus(x))", "all x.(Brumpus(x) -> (Rompus(x) & Flourishe(x)))", "all x.(Brimpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_634", "nl": "Polly is an impus, Polly is a grimpus, and Polly is not a rompus.", "fol": "(impus(Polly) & grimpus(Polly) & -rompus(Polly))", "prediction": ["(all x y z.(Polly(x) -> Is(x,y)) & ((Poppy(y) & Greasy(z))) -> (Polly(z) & -Rompus(z))))", "(all x y.((Polly(x) & Impossible(x)) -> Grimpus(y)) & ((Polly(x) & -Romepus(x)) -> -Romeus(x)))", "(all x.(Polly(x) -> Impressive(x)) & (Polly(x) -> Grempus(x)) & -Rompus(x)))", "(all x.(Polly(x) -> Impossible(x)) & all y.(Polly(y) -> Grinpu(y)) & all z.(Polly(z) -> -Rompus(z))))", "all x y z.((Polly(x) & Polly(y) & Grimpus(z)) -> (Issue(x) & Gruppus(y) & -Rrompus(z)))", "all x y z.((Polly(x) & Polly(y) & Grappus(z) & -Rompus(x)) -> (Illegal(x) | Grimpus(y) | -Illegal(z))))", "(all x.(Polly(x) -> Ispose(x)) & (Polly(x) -> Grimpus(x)) & -Rompus(x)))", "(all x y z.(Polly(x) -> Impossible(x)) & (Polly(y) -> Grumpus(y)) & (Polly(z) -> -Rompus(z)))", "all x y z.((Poly(x) & Impose(x) & Polly(y) & Grimpus(y) & Polly(z)) -> (Impress(x) & -Rompus(z)))", "(all x.((Polly(x) & Is(x)) | (Is(x) & Gruppus(x)))) & ((Polly(x) & -Rompus(x))))", "(all x y z.((Polly(x) & Imposer(x)) -> Ursula(x)) & ((Polly(y) & Grappus(y)) -> -rompus(y)))", "(All x y z.(Polly(x) -> Imperial(x)) & (Polly(y) -> Grimpus(y)) & (Polly(z) -> -Rompus(z))))", "(all x.(Polly(x) -> Illegal(x)) & all y.(Polly(y) -> Grimpus(y)) & all z.(Polly(z) -> -Rampus(z))))", "(all x y z.(Polly(x) -> Impossible(x)) & (Polly(y) -> Grimpus(y)) & -Rome(z)))", "all x.((Polly(x) & Is(x)) -> (Grimpus(x) & -Rrompus(x)))", "(all x.(Polly(x) -> Issue(x)) & (Polly(x) -> Grimpus(x)) & -rompus(x)))"]}
{"id": "prontoqa_train_635", "nl": "Polly is not a brimpus.", "fol": "-brimpus(Polly)", "prediction": ["(-Brimmer(Poly))", "(-Brumpus(Ploy))", "All x.(Polly(x) -> -Brimpus(x))", "all x.(Blumpus(x) -> Polly(x))", "(Brimpus(Polly))", "all x.(Polly(x) -> -Brimpus(x))", "all x.(Polly(x) -> -Brimpus(x))", "Polly is not a Brimpus.", "Polly is not a Brimpus.", "all x.(Poly(x) -> -Brimpus(x))", "all x.(Polly(x) -> -Brimpus(x))", "(-Brumpus(Polly))", "(-brimpus(Polly))", "exists x.(Polly(x) & -Brimpus(x))", "all x.(Brumpus(x) -> Polly(x))", "(-Brimpus(Polly))"]}
{"id": "prontoqa_train_636", "nl": "Every tumpus is a lorpus.", "fol": "all x. (tumpus(x) -> lorpus(x))", "prediction": ["all x.(Tumpus(x) -> Loomis(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Llorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_637", "nl": "Alex is a lempus and Alex is a numpus and Alex is not a lorpus.", "fol": "(lempus(Alex) & numpus(Alex) & -lorpus(Alex))", "prediction": ["all x.(Alex(x) -> (Lempus(x) & Numpus(x) & -Lorpus(x)))", "all x y z.((Alex(x) & Lempus(x) & Numpus(y) & -Lorpus(z)) -> (Lempus(x) & Numpus(y)))", "(all x y.((Alex(x) & Lempus(x)) -> (Numpus(x) & -Lorpus(x))))", "all x y z.((Alex(x) & Lempus(y) & Number(z)) -> (Lempus(x) & Numpus(z) & -Lorpus(x)))", "all x.(Trompet(x) -> (Lempus(x) & Numpus(x) & -Lorpus(x)))", "all x y z.((Alex(x) & Loomis(y) & Numpus(z)) -> (Lumpus(x,y) & Numpus(y) & -Lorpus(z)))", "(all x.(Alex(x) -> Lempus(x)) & (Alex(x) -> Numpus(x)) & (Alex(x) -> -Lorpus(x))))", "all x y z.((Alex(x) & Lempus(x) & Numpus(y) & -Lorpus(z)) -> (-Lempus(x) & Numpus(y) & -Lorpus(z)))", "(all x y z.(Alex(x) -> Lempus(x)) & (Alex(y) -> Numpus(y)) & (Alex(z) -> -Lorpus(z)))", "all x y z.((Alex(x) & Lempus(x) & Numpus(y) & -Lorpus(z)) -> (Lexus(x) | Numpus(y) | -Lorpus(z)))", "all x y z.((Alex(x) & Lempus(x) & Numpus(y) & Throat(z)) -> (Lumpus(x) & -Lorpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (Lorpus(x) & -Lorpus(x)))", "all x y.((Alex(x) & Lempus(x) & Alex(y)) -> (numpus(y) & -Lorpus(y)))", "all x y.((Alex(x) & Lempus(x) & Numpus(y)) -> -Lorpus(x))", "all x.(Lempus(x) & Numpus(x) & -Lorpus(x))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Nompus(y)) & all z.(Alex(z) -> -Lorpus(z))))"]}
{"id": "prontoqa_train_638", "nl": "Numpuses are brimpuses.", "fol": "all x. (numpus(x) -> brimpus(x))", "prediction": ["all x.(Numpus(x) -> Brimpuse(x))", "all x.(Numpus(x) -> Brimpus(x))", "all x.(Numpus(x) -> Brimbus(x))", "all x.(Numpus(x) -> Brimbus(x))", "all x.(Numpus(x) -> Brimpuse(x))", "all x.(Numpuse(x) -> Brimpus(x))", "all x.(Numpuse(x) -> Brimbus(x))", "all x.(Numpuse(x) -> Brimbus(x))", "all x.(Numpuse(x) -> Brimpuse(x))", "all x.(Numpus(x) -> Brimpuse(x))", "all x.(Numpus(x) -> Brimpuse(x))", "all x.(Numpus(x) -> Brimpus(x))", "all x.(Nump(x) -> Brimpus(x))", "all x.(Numpuse(x) -> Brimpus(x))", "all x.(Numpuse(x) -> Brimpuse(x))", "all x.(Numpus(x) -> Brimpuse(x))"]}
{"id": "prontoqa_train_639", "nl": "Sally is not a brimpus and Sally is a zumpus and Sally is a jompus.", "fol": "(-brimpus(Sally) & zumpus(Sally) & jompus(Sally))", "prediction": ["(all x.(Sally(x) -> -Brimpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> Jompus(x)))", "all x.((Sally(x) & -Brumpus(x) & Zumpus(x) & JOmpus(x)) -> -Brompus(x))", "all x y z.((Sally(x) & Brimpus(y) & Zurpus(z) & Jompus(x)) -> -Brimpus(x) & Zumpus(x) & Jompus(x))", "(all x.(Sally(x) -> -Brimpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> Jompus(x)))", "(all x.(Sally(x) -> -Brimpus(x)) & all y.(Sally(y) -> Zumpus(y)) & all z.(Sally(z) -> Jompus(z))))", "all x y z.((Sally(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Tompus(y) & Jompus(z)))", "(all x.(Sally(x) -> -Brimpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> Jompus(x)))", "((Sally(Sally) & -Brimpus(Sally)) -> Zumpus(Sally)) | (Sally(Sally) -> Jompus(Sally))))", "(-Brimpus(Sally) & Zumpus(Sally) & Jompus(Sally)))", "all x y z.((Sally(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Zumpus(x) & Jompus(x)))", "(all x.(Sally(x) -> -Brimpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> Jompus(x)))", "(all x.(Sally(x) -> -Brimpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> Jompus(x)))", "(all x.(Sally(x) -> -Brimpus(x)) & all y.(Sally(y) -> Zumpus(y)) & all z.(Sally(z) -> Jompus(z)))", "(all x.(Sally(x) -> -Brimpus(x)) | (Sally(x) -> Zumpus(x)) | (Sally(x) -> Jompus(x))))", "(all x y.(Brompus(x) -> -Brimpus(x)) & (Zumpus(y) | Jompus(y)))", "(-LittleBrumpus(Sally) & HalfBumpus(Sally) & HalfJampus(Sally))"]}
{"id": "prontoqa_train_640", "nl": "Numpuses are lorpuses.", "fol": "all x. (numpus(x) -> lorpus(x))", "prediction": ["all x.(Numpus(x) -> Lorpus(x))", "all x.(Numpus(x) -> Loompe(x))", "all x.(Numpkin(x) -> Lorpus(x))", "all x.(Numpuse(x) -> Larpuse(x))", "all x y.((Numpus(x) & Loompus(y)) -> Hormone(x,y))", "all x.(Numpus(x) -> Lorpus(x))", "all x.(Nump.(x) -> Loomis(x))", "all x.(Numpus(x) -> Lorpus(x))", "all x.(Numpus(x) -> Lorpuse(x))", "all x.(Number(x) -> Locus(x))", "all x.(Numpus(x) -> Lorpus(x))", "all x.(Numpus(x) -> Lorpus(x))", "all x.(Numpus(x) -> Lorpuse(x))", "all x.(Num(x) -> Lorpus(x))", "all x.(Numpus(x) -> Lorpuse(x))", "all x.(Numpus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_641", "nl": "Stella is a dumpus and Stella is not a lorpus and Stella is a shumpus.", "fol": "(dumpus(Stella) & -lorpus(Stella) & shumpus(Stella))", "prediction": ["(all x y.((Stella(x) & Dumpus(x)) -> Dumpus(x)) & ((Stella(y) & -Lorpus(y)) -> Shumpus(y)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Lorpus(x)) & (Stella(x) -> Shumpus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & (Zeland(x) -> -Lorpus(x)) & (Shumpus(x))))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Lorpus(x)) & (Stella(x) -> Humpus(x))))", "all x y z.((Stella(x) & Dumpus(y) & -Lorpus(z)) -> (Shumpus(x) & Shumpus(x)))", "(all x.(Servant(x) -> Dumpus(x)) & (Servant(x) -> -Lorpus(x)) & (Servant(x) -> Shumpus(x)))", "(all x.(Lorpus(x) -> Dumpus(x)) & (Lorpus(x) -> -Lorpus(x)) & (Shumpus(x))))", "(all x y.(Stella(x) -> Dumpus(x)) & (Stella(y) -> -Lorpus(y)) & (Stella(y) -> Shumpus(y)))", "all x y z.((Stella(x) & Dumpus(x) & Stella(y) & Stompus(z)) -> (-Lorpus(y) & Shumpus(z)))", "(all x y z.((Stella(x) & Dumpus(x) & Lorus(y)) -> Dumpus(x)) & ((Stella(x) & -Lemurus(z)) -> Humpus(x)))", "(all x y.(Dumus(x) -> Dumpus(x)) & ((Lorpus(y) & Stella(z))) -> (Shumpus(z))))", "all x y z.((Stilla(x) & Dumpus(x) & Stella(y) & Lorpus(z)) -> (-Lorpus(y) & Humpus(z)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Lorpus(x)) & (Stella(x) -> Shumppus(x)))", "all x y z.((Dempus(x) & Dumpus(y) & Lorpus(z)) -> (NotLesser(x) & -Lorpus(x) & Humpus(y)))", "(all x y z.((Stella(x) & Dumpus(x) & -Lorpus(y)) -> Scalp(z)) & ((Stella(x) & Humpus(z)) -> Stupus(x)))", "(all x y.((Depus(x) & Dumpus(x)) -> (-Horpus(y) & Humpus(y))))"]}
{"id": "prontoqa_train_642", "nl": "Rex is a wumpus, Rex is not a lempus, and Rex is a grimpus.", "fol": "(wumpus(Rex) & -lempus(Rex) & grimpus(Rex))", "prediction": ["(all x.(Rex(x) -> Wumpus(x)) & all y.(Rex(y) -> -Lempus(y))) & (Rex(y) -> Grimpus(y)))", "(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Grimpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Grimpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & (-Lempus(x) & (Grampus(x) | -Limpus(x))))", "(all x.(Rex(x) -> Wumpus(x)) & (-Lempus(x) & -Grimpus(x)))", "(all x y.(Wumpus(x) -> Rex)) & (NonLempus(y) -> Rex)) & (Grampus(y) -> Grumpus(y)))", "(all x,y) -> (Wumpus(x) | Lempus(y) | Grimpus(x)))", "(all x y z.((Rex(x) & Wumpus(x)) -> Wumpus(x)) & ((Rex(y) & -Lempus(y)) | (-Rex(y) & Grimpus(z)))))", "(all x y z.((Rex,wumpus) & Wumpus(x) & Lempus(y)) -> Wormpus(z)) & ((Rex,wumpus) & Lempus(w)) -> Grumpus(z)))", "all x y.((Wumpus(x) & Grimpus(y)) -> (-IsLempus(x) & IsGrampus(y)))", "(all x y z.((Rex(x) & Wumpus(y)) -> Wumbus(x,y)) | ((Rex(z) & -Lempus(z))) -> Grimpus(z)))", "(all x.(Renaissance(x) -> Wumpus(x)) & (-Lempus(x) & (Grimpus(x) -> Grimpus(x))))", "all x y z.((Rex(x) & Lempus(y) & Gruffus(z)) -> (Wumpus(x) & -Lempus(y) & Grimpus(z)))", "(all x y z.((Rex(x) & Wumpus(y)) -> Wimpus(x)) & ((Rex(z) & -Lempus(z))) -> Gruppus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & -Lempus(x) & -Grimpus(x))", "(all x y z.((Rex(x) & Wumpus(y) & Plumpus(z)) -> Wumpus(x)) & ((Rex(x) & -Lempus(x))) -> Grimpus(x)))"]}
{"id": "prontoqa_train_643", "nl": "Tumpuses are grimpuses.", "fol": "all x. (tumpus(x) -> grimpus(x))", "prediction": ["all x.(Tumpuse(x) -> Grimpuse(x))", "all x.(Unclet(x) -> Grimpuse(x))", "all x.(Tumpus(x) -> Grimpuse(x))", "all x.(Tumpus(x) -> Grimpuse(x))", "all x.(Tumpuse(x) -> Grimpuse(x))", "all x.(Tumpus(x) -> Grimpuse(x))", "all x.(Tumulus(x) -> Grimpuse(x))", "all x.(Tumpus(x) -> Grimpuse(x))", "all x.(Tumpuse(x) -> Grimpuse(x))", "(Grampus(s) & Grasspuse(s))", "all x.(Tumpus(x) -> Grimpuse(x))", "all x.(Tumpus(x) -> Grimpus(x))", "all x.(Tumpus(x) -> Grimpuse(x))", "all x.(Tumpuse(x) -> Grumpus(x))", "(Smokina(tump) -> Grimpuse(tumpus))", "all x.(Tumpus(x) -> Grumpus(x))"]}
{"id": "prontoqa_train_644", "nl": "Fae is a shumpus and Fae is a lempus and Fae is not a grimpus.", "fol": "(shumpus(Fae) & lempus(Fae) & -grimpus(Fae))", "prediction": ["(all x.(Fae(x) -> Shumpus(x)) & (Fae(x) -> Lempus(x)) & -Fae(x)))", "all x y z.((Fae(x) & Shumpus(x) & Lempus(y) & NoGrimpus(z)) -> NoShumpus(x))", "all x y.((Fae(x) & Shumpus(x)) & Lempus(y) & -Grimpus(x)) -> (Element(x) & -Wizard(y)))", "(all x.(Fae(x) -> Humpus(x)) & all y.(Fae(y) -> Lempus(y)) & all z.(Fae(z) -> -Grimpus(z))))", "(all x.(Fae(x) -> Humptus(x)) & all y.(Fae(y) -> Lempus(y)) & all z.(Fae(z) -> -Grimpus(z)))", "(all x.((Fae(x) & Humpus(x)) -> Shimpus(x)) & ((Fae(x) & Lempus(x)) -> -Grimpus(x)))", "(all x y z.(Fae(x) -> (Shumpus(x) & Lempus(y) & Grimpus(z))) -> (Lempus(y) & -Fae(z))))", "all x y.((Fae(x) & Shumpus(x) & Lempus(y) & -Grimpus(x)) -> (Shumpus(x) & Lempus(y) & -Grimpus(x)))", "all x y z.((Fae(x) & Humpus(y) & Lempus(z)) -> (IsShumpus(x) & IsLempus(x) & -IsGrimpus(x)))", "(all x y z.(Fae(x) -> Shumpus(x)) & ((Fae(y) & Lempus(y)) -> (-Grampus(z))))", "(all x.(Fae(x) -> Shumpus(x)) & all y.(Fae(y) -> Lempus(y)) & all z.(Fae(z) -> -Grimpus(z))))", "all x.(Fae(x) -> (Shumpus(x) & Lempus(x) & -Grimpus(x)))", "all x y z.((Fae(x) & Shumpus(y) & Lempus(z)) -> (Shumpus(x) & Lempus(x) & -Cruppus(x)))", "(all x.(Fae(x) -> Scrumpus(x)) & all y.(Fae(y) -> Lempus(y)) & all z.(Fae(z) -> -Grimpus(z))))", "all x y z.((Fae(x) & Shumpus(x) & Loompus(y)) -> (Shumpus(x) & Lempus(y) & -Grimpus(z)))", "(all x.(Fae(x) -> Humpus(x)) & all y.(Fae(y) -> Lempus(y))) & all z.(Fae(z) -> - Grimpus(z)))"]}
{"id": "prontoqa_train_645", "nl": "Wren is a wumpus and Wren is not a yumpus and Wren is a sterpus.", "fol": "(wumpus(Wren) & -yumpus(Wren) & sterpus(Wren))", "prediction": ["all x.(Wren(x) & Wren(x) & -Yumpus(x) & Sterpus(x))", "is wumpus(w) & -yumpus(w) & -sterpus(w))", "(all x.(Wren(x) -> Wumpus(x)) & all y.(Wren(y) -> -Yumpus(y))) & all z.(Wren(z) -> Sterpus(z))))", "all x y.((Wren(x) & Wren(y)) -> (Wumpus(x) & -Yumpus(y) & Sterpus(y)))", "all x y.((Wren(x) & Wren(y)) -> (Wumpus(x) | -Yumpus(y) | Sterpus(x)))", "all x y.((Wren(x) & Wren(y)) -> (Wumpus(x) & -Yumpus(y) & Sterpus(y)))", "all x.((Wren(x) & Wren(x)) -> (Wumpus(x) & -Yumpus(x) & Sterpus(x)))", "(all x y.(Wren(x) -> Wumpus(x)) & (-Yumpus(y) & -Sterpus(y)))", "all x y z.((Wren(x) & Yumpus(y) & Mercury(z)) -> (Elements(x,y) & Elements(x,z) & Elements(x,z)))", "(all x.(Wren(x) -> Wumpus(x)) & (-Yumpus(x) & (-Wren(x) -> Sterepus(x))))", "all x y z.((Wren(x) & Wren(y) & Sterpus(z)) -> (Wumpus(x) | -Yumpus(y) & Sterpus(z)))", "(all x y z.(Wren(x) -> Wumpus(x)) & (-Yumpus(y) & -Turtis(z))) & ((Wren(x) & Sterpus(z)) -> Sterpus(z)))", "(all x y.(Wren(x) -> Wumpus(x)) & (-Yumpus(y)) & (-Yumpus(y) & Sterpus(z))))", "(all x.(Wren(x) -> Wumpus(x)) & (-Yumpus(x) & Sterpus(x)))", "(all x.(Wren(x) -> Wumpus(x)) & (-Jumpus(x) & -Yumpus(x)) & (-Yumpus(y) & Sterpus(y))))", "all x y.((Wren(x) & -Yumpus(x)) -> (Wumpus(x) & Sterpus(y)))"]}
{"id": "prontoqa_train_646", "nl": "Tumpuses are vumpuses.", "fol": "all x. (tumpus(x) -> vumpus(x))", "prediction": ["all x.(Tumpuse(x) -> Vampuse(x))", "all x.(Tumpuse(x) -> Vampuse(x))", "all x.(Tumpus(x) -> Vumpuse(x))", "all x.(Tumpus(x) -> Vumpus(x))", "all x.(Tumpuse(x) -> Vampuse(x))", "all x.(Tumpus(x) -> Vulpe(x))", "all x.(Tumpuse(x) -> Vupuse(x))", "all x.(Tumpuse(x) -> Vumpuse(x))", "all x.(Tump(x) -> Vampuse(x))", "all x.(Tumpus(x) -> Vampuse(x))", "all x.(Tumpus(x) -> Vampuse(x))", "ALL x.(Tumpuse(x) -> Vampuse(x))", "all x.(Tumpuse(x) -> Vampuse(x))", "all x.(Tumult(x) -> Vumpuse(x))", "all x.(Tumpuse(x) -> Vampuse(x))", "all x.(Vumpuse(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_647", "nl": "Rex is an impus and Rex is a shumpus and Rex is not a vumpus.", "fol": "(impus(Rex) & shumpus(Rex) & -vumpus(Rex))", "prediction": ["(all x y z.((Rex(x) & Impossible(x)) -> (Shumpus(y) & Rex(z))))", "(all x.(Rex(x) -> Imperator(x)) & (Rex(x) -> Humpus(x)) & (Rex(x) -> -Vumpus(x)))", "(all x.(Rex) -> IsImpossible(x)) & (Rex(x) -> Shumpus(x)) & (Rex(x) -> -Vumpus(x)))", "(all x.(Rex(x) -> Issuel(x)) & (Rex(x) -> Shumpus(x)) & -Vimpus(x)))", "(All x.(Rex(x) -> IsOf(x,Impossible)) & ((Rex(x) & Humpus(x))) | (-Impossible(x,Vumpus))))", "(all x.(Rex(x) -> IsImplementary(x)) & (Rex(x) -> Humpus(x)) & (Rex(x) -> -Vumpus(x))))", "(all x.(Rex(x) -> Imperator(x)) & (Rex(x) -> Humpus(x)) & (Rex(x) -> -Vumpus(x)))", "(all x.(Rex(x) -> Imperator(x)) & all y.(Shumpus(y) -> -Vumpus(y)))", "all x y z.((Rex(x) & Is(x) & Rex(y) & Shumpus(z)) -> (Is(x,y) & -Is(y,z)))", "all x y.((Rex(x) & Impossible(x)) -> (Shumpus(x) & -Vimpus(y)))", "(all x.(Rex(x) -> Imperium(x)) & (Rex(x) -> Snompus(x)) & (Rex(x,x) -> -Vimpus(x)))", "all x y z.((Rex(x) & Imperator(y) & Shumpus(z)) -> (Impossible(x) & Shumpus(z) & -Vumpus(x)))", "(all x.(Rex,Impression(x) -> Shumpus(x)) & (Rex,Vimpus) -> -Vimpus(x)))", "all x y.((Rex(x) & Imperator(x) & Humpus(y)) -> (Rex Is(x) & Rex Is(x) & -Vampus(x)))", "(all x.(Rex(x) -> Imperium(x)) & (Shumpus(x) & -Vumpus(x))))", "all x.(Rex(x) -> (Impossible(x) & Shumpus(x) & -Vumpus(x)))"]}
{"id": "prontoqa_train_648", "nl": "Wumpuses are dumpuses.", "fol": "all x. (wumpus(x) -> dumpus(x))", "prediction": ["all x.(Wumpus(x) -> Dumpuse(x))", "all x.(Wumpus(x) -> Dumpus(x))", "all x.(Wumpuse(x) -> Dumpuse(x))", "all x.(Wumpus(x) -> Dumpuse(x))", "all x.(Wumpus(x) -> Dumpuse(x))", "all x.(Wumpus(x) -> Dumpuse(x))", "all x.(Wumpuse(x) -> Dumpuse(x))", "all x.(Wumpus(x) -> Dumpuse(x))", "all x.(Wumpuse(x) -> Dumpuse(x))", "all x.(Wumpus(x) -> Dumpuse(x))", "all x.(Wumpuse(x) -> Dumpuse(x))", "all x.(Wumpus(x) -> Dumpuse(x))", "all x.(Wumpuse(x) -> Dumpuse(x))", "all x.(Wumpus(x) -> Dumpuse(x))", "all x.(Wumpuse(x) -> Dumpuse(x))", "all x.(Wumpus(x) -> Dumpuse(x))"]}
{"id": "prontoqa_train_649", "nl": "Polly is not a dumpus, Polly is a rompus, and Polly is a yumpus.", "fol": "(-dumpus(Polly) & rompus(Polly) & yumpus(Polly))", "prediction": ["all x y z.((Polly(x) & Rumpus(y) & Yampus(z)) -> (-Dumpus(x) & NoDumpout(x) & Yampus(y)))", "(Same(Polly) & -Dumpus(Poly)) & Same(Polly) & Same(Poly))", "(all x.(Polly(x) -> -Dumpus(x)) & (Polly(x) -> Rompus(x)) & (Polly(x) -> Yumpus(x)))", "(all x y z.(Pooly(x) -> -Dumpus(x)) & ((Pooly(y) & Pooly(z)) | ((Pooly(y) & Pooly(z)))))", "(all x.(Polly(x) -> -Dumpus(x)) & (Polly(x) -> Rompus(x)) & (Polly(x) -> Yumpus(x)))", "all x y z.((Poly(x) & Rumpus(y) & Yampus(z)) -> (-Dumpus(x) & -Rompus(y) & -Yumpus(z)))", "(all x y z.((Polly(x) & Dumpus(y)) -> -Dumpus(y)) & ((Polly(z) & Rompus(z)) | (Polly(z) & Yumpus(z)))))", "(all x.(Poly(x) -> -Dumpus(x)) & all y.(Polly(y) -> Yumpus(y))))", "(all x y z.((Polly(x) & Dumpus(y)) -> -Dumpus(x)) & all z.((Polly(z) & Yumpus(z))) -> (Rompus(z) & -Dumpus(z))))", "(all x.(Poly(x) -> -Dumpus(x)) & (Rompus(x) | Yumpus(x)))", "all x y z.((Polly(x) & Rompus(y) & Yampus(z)) -> (-Dumpus(x) | (Rompus(y) | Yampus(y))))", "(all x.(Poly(x) -> -Dumpus(x)) | (Polly(x) -> Rompus(x))) | (Polly(x) -> Yumpus(x))))", "(all x.(Polly(x) -> -Dupus(x)) & (Polly(x) -> Rumpus(x)) & (Polly(x) -> Yampus(x)))", "(all x.(Polly(x) -> -Dumpus(x)) & all y.(Polly(y) -> Rompus(y))) & all z.(Polly(z) -> Yumpus(z)))", "(all x.(Polly(x) -> -Dumpus(x)) & all y.(Polly(y) -> (Rompus(y) | Yumpus(y))))", "(all x y z.(Polly(x) -> -Dumpus(x)) & ((Polly(y) & Rompus(z)) -> Yumpus(y)))"]}
{"id": "prontoqa_train_650", "nl": "Each grimpus is a brimpus.", "fol": "all x. (grimpus(x) -> brimpus(x))", "prediction": ["all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Brumpus(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Smumpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Brimpus(x))", "all x.(Grimpus(x) -> Burmpus(x))", "all x.(Grimpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_651", "nl": "Alex is a dumpus and Alex is an impus and Alex is not a brimpus.", "fol": "(dumpus(Alex) & impus(Alex) & -brimpus(Alex))", "prediction": ["(all x.(Alex(x) -> Dumpus(x)) & all y.((Alex(y) & Issue(y))) -> -Brimpus(y)))", "all x y.((Alex(x) & Dumpus(x) & Impossible(x)) -> -Brimpus(y))", "(all x.(Alex(x) -> Dumpus(x)) & all y.(Alex(y) -> Impossible(y))) & none z.(Alex(z) -> Brimpus(z)))", "(all x.(Alex(x) -> Dumpus(x)) & all y.(Alex(y) -> Imperator(y))) & all z.(Alex(z) -> -Brumpus(z)))", "all x y z.((Alex(x) & Dumpus(x) & Impossible(y)) -> (Dompus(x) & Impossible(y) & -Brimpus(z)))", "all x y z.((Alex(x) & Dumpus(x) & Imperator(y) & Brimpus(z)) -> (Insists(x) & -IsBrigus(x)))", "(all x.(Alex(x) -> Dumpus(x)) & (Alex(x) -> Imperator(x)) & -Brimpus(x)))", "all x.(Alex(x) -> (Dumpus(x) & Impelling(x) & -Brimpus(x)))", "all x y.((Alex(x) & Dumpus(x) & Impectation(y)) -> ((ExtremelyBelongsTo(x,y) & Unbrimpus(y))))", "all x.(Alex(x) -> (Dumpus(x) & Impermissible(x) & -Brimpus(x)))", "all x.(Alex(x) -> (Dumps(x) & Implicator(x) & -Brimpus(x)))", "all x.(Alex(x) -> (Dumpus(x) & IsImperial(x) & -Brimpus(x)))", "(all x y.(Alex(x) -> Dumpus(x)) & (Alex(y) -> Imperemptor(y)) & -Brimpus(y)))", "all x y z.((Alex(x) & Dumpus(x) & Impossible(y) & Brimpus(z)) -> ((Dumpus(x) & Impossible(y)) & -Brumpus(z))))", "(all x.(Alex(x) -> Dumpus(x)) & (Alex(x) -> Imperium(x)) & -Brimpus(x)))", "(all x.(Alex(x) | Dumpus(x))) & all y.(Imperial(y)) -> (Brampus(y))))"]}
{"id": "prontoqa_train_652", "nl": "Alex is not a grimpus.", "fol": "-grimpus(Alex)", "prediction": ["-Grimpus(Alex)", "all x.(Alex(x) -> -Grimpus(x))", "Alex is -Grimpus(Alex)", "all x.(Alex(x) -> -Grimpus(x))", "All x.(Alex(x) -> -Grimpus(x))", "(-Grimpus(Alex))", "Alex IsNotGrimpus(Alex)", "all x.(Alex(x) -> -Grimpus(x))", "(exists x.(Alex(x) & Glorpus(x)))", "(-Grimpus(Alex))", "-Grimpus(Alex)", "all x.(Alex(x) -> -Grimpus(x))", "Alex is not a Grimpus(Alex)", "Alex is notGrimpus.", "Alex is not Grupa.", "all x.(Alex(x) -> -Grimpus(x))"]}
{"id": "prontoqa_train_653", "nl": "Each lorpus is an impus.", "fol": "all x. (lorpus(x) -> impus(x))", "prediction": ["all x.(Lorpus(x) -> Is(x))", "all x.(Lorpus(x) -> Isolated(x))", "all x.(Levy(x) -> IsImplied(x))", "all x.(Lorpus(x) -> IsIdemiss\u00e9(x))", "all x.(Lorpus(x) -> IsNotLesser(x))", "all x.(Lorpus(x) -> IsImpedue(x))", "all x.(Lorpus(x) -> Impeccable(x))", "all x.(Lorpus(x) -> Is(x,lorpus))", "all x.(Lorpus(x) -> Illegal(x))", "all x.(Lorpus(x) -> Is(x))", "all x.(Lorpus(x) -> Ilicrose(x))", "all x.exists y.(Lorpus(x) & Cervical(y))", "all x.(Lorpus(x) -> IsImpedient(x))", "all x.(Lorpus(x) -> Impossible(x))", "all x.(Lorpus(x) -> Illegal(x))", "all x.(Lorpus(x) -> IsPromize(x))"]}
{"id": "prontoqa_train_654", "nl": "Sally is a zumpus and Sally is a rompus and Sally is not an impus.", "fol": "(zumpus(Sally) & rompus(Sally) & -impus(Sally))", "prediction": ["(all x.(Sally(x) -> Zumpus(x)) & all y.(Rompus(y) & -Illegal(y))))", "(all x.(Sally(x) -> Zumpus(x)) & all y.(Sally(y) -> Rompus(y)) & all z.(Sally(z) -> -Ilicensor(z))))", "(all x.(Sally(x) -> Zumpus(x)) & all y.(Sally(y) -> Rompus(y)) & all z.(Sally(z) -> -Impossible(z))))", "all x y.((Sally(x) & Zumpus(x) & Rompus(y) & -Ilias(x)) -> (Tompus(x) & Rompus(y)))", "all x.((Sally(x) & Zumpus(x)) -> Rompus(x) & -Impos(x)))", "(All x).(Sally(x) -> Zumpus(x)) & (Sally(x) -> Rompus(x)) & (Sally(x) -> -Impossible(x))))", "all x y.((Sally(x) & Zumpus(x) & Sally(y)) -> (Rompus(y) & -Impossible(x)))", "(all x.(Sally(x) -> Zumpus(x)) & all y.(Sally(y) -> Rompus(y)) & all z.(Sally(z) -> -Issue(z))))", "(all x.(Sally(x) -> Zumpus(x)) & all y.(Sally(y) -> Rompus(y)) & all z.(Sally(z) -> -Imposer(z)))", "all x y z.((Sally(x) & Zumpus(x) & Rrompus(y) & -Illimite(z)) -> (Tommy(x) & Rompus(y) & -Illimite(z)))", "exists x.(Sally(x) & Zumpus(x) & Rompus(x) & -Issue(x))", "(all x.(Sally(x) -> Zumpus(x)) & (Sally(x) -> Rompus(x)) & -Impossible(x)))", "all x y z.((Sally(x) & Zumpus(x) & Rompus(y) & Thesis(z)) -> (Noid(x) & NotImprovisation(x)))", "(zumpus(Sally) & Rompus(Sally) & -Impozite(Sally))", "all x y.((Sally(x) & Tompus(x) & Rompus(y)) -> ((Tompus(x) & Rompus(y) & -Impossivus(y))))", "all x.((Sally(x) & Zumpus(x)) & Rompus(x) & -Impossible(x)) -> HasSally(x))"]}
{"id": "prontoqa_train_655", "nl": "Impuses are numpuses.", "fol": "all x. (impus(x) -> numpus(x))", "prediction": ["all x.(Impuse(x) -> Numpuse(x))", "all x.(Impus(x) -> Numpuse(x))", "all x.(Implice(x) -> Numpuse(x))", "all x.(Impart(x) -> Numpuse(x))", "all x.(Impenet(x) -> Numpuse(x))", "all x.(Impus(x) -> Numpuse(x))", "all x.(Impet(x) -> Numpus(x))", "all x.(Impuse(x) -> Numpuse(x))", "all x.(Impes(x) -> Numpuse(x))", "all x.(Implose(x) -> Numpuse(x))", "all x.(Impuer(x) -> Numpuse(x))", "all x.(Impuse(x) -> Numpus(x))", "all x.(Impes(x) -> Numpuse(x))", "all x.(Impuss(x) -> Numpus(x))", "all x.(Impus(x) -> Numpus(x))", "all x.(Impuse(x) -> Numpuse(x))"]}
{"id": "prontoqa_train_656", "nl": "Fae is not a numpus, Fae is a jompus, and Fae is a rompus.", "fol": "(-numpus(Fae) & jompus(Fae) & rompus(Fae))", "prediction": ["all x y z.((Fae(x) & Jompus(y) & Rompus(z)) -> (-Numpus(x) & Jompus(y) & Rhopus(z)))", "(all x.(Fae(x) -> -Numpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> Rompus(x)))", "(all x.(Fae(x) -> -Numpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> Rompus(x)))", "(all x.(Fae(x) -> -Numpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> Rompus(x)))", "(all x y z.(Fae(x) -> (-Numpus(x) | Jompus(y) | Rompus(z))))", "all x y z.((Fae(x) & Nompus(y) & Jompus(z) & Rompus(x)) -> (-Numpus(x) & Jompus(x) & Rompus(x)))", "the corresponding 'Fae(f) & -Numpus(f)) | (Fae(f) & Jompus(f)) | (Fae(f) & Rompus(f))))", "all x y z.((Fae(x) & Numpus(y) & Jompus(z)) -> -Numpus(x) & Russo(x))", "all x and ((Fae(x) & -Numpus(x)) | (Fae(x) & Jompus(x)) | (Fae(x) & Rompus(x))))", "all x.(Fae(x) -> (-Numpus(x)) & (Jompus(x) | Rompus(x))))", "(all x y z.((Fae(x) & Numpus(y)) -> -Numpus(x)) & ((Fae(x) & Jompus(z)) -> Rompus(x)))", "all x y z.((Fae(x) & Jompus(y) & Rompus(z)) -> (-Numpus(x) & Jompus(y) & Rompus(z)))", "(exists x.(Fae(x) & -numpus(x))); exists y.(Fae(y) & -jompus(y))) & exists z.(Fae(z) & rompus(z))))", "(all x y z.((Fae(x) & Numpus(y) & Numpus(z)) -> -Numpus(x)) & ((Fae(x) & Jompus(x)) -> Rompus(x)))", "(all x.(Fae(x) -> -Numpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> Rompus(x)))", "(all x.(Fae(x) -> -numpus(x)) & (Fae(x) -> jompus(x)) & (Fae(x) -> rompus(x))))"]}
{"id": "prontoqa_train_657", "nl": "Rompuses are sterpuses.", "fol": "all x. (rompus(x) -> sterpus(x))", "prediction": ["all x.(Rompus(x) -> Sterpuse(x))", "all x.(Rompus(x) -> Sterpuse(x))", "all x.(Rompus(x) -> Sterpuse(x))", "all x.(Rompus(x) -> Sterpuse(x))", "all x.(Rompus(x) -> Sterpuse(x))", "all x.(Rompus(x) -> Sterpuse(x))", "all x.(Rompus(x) -> Sterpuse(x))", "all x.(Rompus(x) -> Sterothus(x))", "all x.(Rompus(x) -> Sterpous(x))", "all x.(Rompus(x) -> Sterpuse(x))", "all x.(Rompus(x) -> SterpuseSterpoos(x))", "all x.(Rompus(x) -> Sterpus(x))", "all x.(Rompus(x) -> Sterpuse(x))", "all x.(Rompus(x) -> Sterpuse(x))", "all x.(Rompus(x) -> Sterpuse(x))", "all x.(Rompus(x) -> Sterpuse(x))"]}
{"id": "prontoqa_train_658", "nl": "Fae is not a sterpus, Fae is a grimpus, and Fae is a vumpus.", "fol": "(-sterpus(Fae) & grimpus(Fae) & vumpus(Fae))", "prediction": ["all x y,z.((Fae(x) & Fae(y)) -> (-Sterpus(x) & Gruppus(y) & Vmpus(z)))", "all x y z.((Fae(x) & Sterpus(y) & Grimpus(z)) -> (-Sterpus(x) & Grouchpus(y) & Vumpus(z)))", "all x y z.((Fae(x) & Strap(y) & Vampus(z)) -> (-Step(x) | Grimpus(y) | Vumpous(z)))", "all x y z.((Fae(x) & Senserpus(y) & Groppus(z)) -> (-Sterpus(x) & Senserpus(y) & Senserpus(z)))", "(all x.(Fae(x) -> -Sterpus(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> Dumpus(x)))", "(all x.(Fae(x) -> -Sterpus(x)) & all y.(Fae(y) -> Grimpus(y)) & all z.(Fae(z) -> Vumpus(z))))", "(all x.(Fae(x) -> -Sterpus(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> Vumpus(x)))", "all x y z.((Fae(x) & Sterpus(y) & Grimpus(z)) -> (-Sterpus(x) & Smooch(x) & Vulmpus(x)))", "all x y z.((Fae(x) & Grimpus(y) & Afeal(z)) -> (-Sterpus(x) & -Fae(x) & -Sterpus(y) & Vumpus(z)))", "(all x.(Fae(x) -> -Sterpus(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> Lumpus(x)))", "(all x.(Fae(x) -> -Strojan(x)) & all y.(Fae(y) -> Grimpus(y)) & all z.(Fae(z) -> Vumpus(z))))", "(all x.(Fae(x) -> -Stropus(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> Vumpus(x)))", "all x y z.((Fae(x) & Sterpus(y) & Grimpus(z)) -> (-Sterpus(x) & Vimpus(x)))", "(all x.(Fae(x) -> NOTSterpus(x)) & all y.(Fae(y) -> (Sharppus(y) & Vumpus(y))))", "(-Sterpus(fae) & Scarpus(fae) & Vulmpus(fae))", "(all x y.((Fae(x) & -Sterpus(x)) -> Furrus(x)) & ((Fae(y) & Grouchpus(y)) -> Vumpus(y)))"]}
{"id": "prontoqa_train_659", "nl": "Every sterpus is a gorpus.", "fol": "all x. (sterpus(x) -> gorpus(x))", "prediction": ["all x.(Sterpus(x) -> Gorpus(x))", "all x.(Sterepus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Steerpus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Sternps(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Steerpus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Steerpus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Sterus(x) -> Gorpus(x))", "all x.(Sterus(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_660", "nl": "Wren is a lorpus, Wren is not a gorpus, and Wren is a rompus.", "fol": "(lorpus(Wren) & -gorpus(Wren) & rompus(Wren))", "prediction": ["(all x.(Wren(x) -> Lorpsis(x)) & (-Wren(x) -> Gorpus(x)) & (-Wren(x) -> Rompus(x)))", "all x y z.((Wren(x) & Gorpus(y) & Rumpus(z)) -> (Larpus(x) | -Gorpus(y) & Rompus(z)))", "(all x.(Wren(x) -> lorpus(x)) & (-Wren(x) -> gorpus(x)) & (-Wren(x) -> rompus(x)))", "(all x y z.(Lorpus(x) -> WornIn(x,y)) & (ZeroZeroGorpus(z) -> WornIn(x))) & ((Rompus(x) & -Gorpus(y)) -> WormIn(x,z)))", "(all x.(Wren(x) -> Lorpus(x)) & (-Helen(x) & Gorpus(x)) & (Wren(x) -> Rompus(x)))", "(all x y z.((Leon(x) & Wren(y) & Ovarus(z)) -> Lorpus(x)) & (((Wren(y) & -Gorpus(y)) | ((Wren(y) & Ovarus(y)))))", "(all x.(Wren(x) -> Lorpus(x)) & (Wren(x) -> -Gorpus(x)) & (Wren(x) -> Rompus(x)))", "(all x.((Wren(x) & Lorpus(x)) -> NotGorpus(x)) & all y.((Wren(y) & Rompus(y)) -> ContainsRecess(y)))", "all x y z.((Wren(x) & Lorpus(y) & Gorpus(z)) -> (Lorph(x) & -Gorpus(z) & Rompus(z)))", "(all x y.((Wren(x) & Lorpus(x)) -> -Gorpus(y)) & ((Wren(x) & Rompus(x)) -> Loper(x)))", "(all x y z.((Wren(x) & Lorpus(y)) -> (Lorpus(z) | -Gorpus(z))) & ((Wren(x) & Rompus(x)) -> (Rompus(x))))", "(all x y z.((Wren(x) & Lorpus(y) & -Gorpus(z)) -> Lark(x)) & ((Wren(x) & Gorpus(z)) -> Rompus(x)))", "(all x.(Wren(x) -> Lorpus(x)) & (-Gorpus(x) & (Rompus(x) | Wren(x))))", "(all x.(Wren(x) -> Llorpus(x)) & (-Wren(x) -> Gorpus(x)) & (-Wren (x) -> Rompus(x))))", "(all x.(Wren(x) -> Lorpus(x)) & (-Wren(x) -> Gorpus(x)) & (-Wren(x) -> Rompus(x)))", "(all x y z.(Wren(x) -> Lorpus(x)) & ((Wren(y) & -Gorpus(y)) | (-Wren(z) & Rompus(z)))))"]}
{"id": "prontoqa_train_661", "nl": "Fae is a gorpus and Fae is not a zumpus and Fae is a jompus.", "fol": "(gorpus(Fae) & -zumpus(Fae) & jompus(Fae))", "prediction": ["all x y.(Fae(x) -> (Gorpus(x) & Zumpus(y) & Jompus(x)))", "all x y.((Fae(x) & Oyster(y)) -> (Gorpus(x) & -Zumpus(y) & Jompus(x)))", "all x y z.((Fae(x) & Gorpus(x) & Fae(y) & Zumpus(z)) -> (-Beholds(y,z) & Has(y,z)))", "(all x.(Fae(x) -> Gorpus(x)) & all y.(Fae(y) -> -Zumpus(y))) & all z.(Fae(z) -> Jompus(z)))", "(exists x.(Fae(x) & Gorpus(x)) & -Zumpus(x)) & exists y.(Fae(y) & Jompus(y)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Tommpus(x)) & (Fae(x) -> Jompus(x)))", "all x y z.((Fae(x) & Gorpus(x) & Fae(y) & Zumpus(z)) -> ((Capricorn(x) & Jumper(x)) & Joompus(y)))", "all x y z.((Fae(x) & Gorpus(x) & Topsy(y) & Jompus(z)) -> (IsGorpus(x) & -IsTopsy(y) & IsJimpus(z)))", "(all x.(Fae(x) -> Gorpus(x)) & all y.(Fae(y) -> -Zumpus(y)) & all z.(Fae(z) -> Jompus(z)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Tommoth(x)) & (Fae(x) -> Jompus(x)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Tommoscope(x)) & (Fae(x) -> Jompus(x)))", "(all x y.(Redistribution(x) -> Gorpus(x)) & (Fae(y) -> -Zumpus(y)) & (Fae(y) -> Jompus(y)))", "(All x.(Fae(x) -> Gorpus(x)) & (-Fae(x) -> Zumpus(x)) & (Fae(x) -> Jompus(x)))", "all x y z.((Fae(x) & Gorpus(x) & Fae(y) & Zumpus(z)) -> (Dopus(x) & Jompus(y)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Jompus(x)))", "(all x.(Fae(x) -> Gorpus(x)) & (-Zumpus(x) & -Jompus(x)))"]}
{"id": "prontoqa_train_662", "nl": "Every tumpus is a zumpus.", "fol": "all x. (tumpus(x) -> zumpus(x))", "prediction": ["all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "exists x.(Tumpus(x) & Zumpus(x))", "exists x.(Tumpus(x) & Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tompus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_663", "nl": "Sam is a grimpus and Sam is not a zumpus and Sam is a vumpus.", "fol": "(grimpus(Sam) & -zumpus(Sam) & vumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Vumpus(x)))", "all x.((Sam(x) & Grimpus(x) & -Zumpus(x) & Vimpus(x)) -> Grimpus(x))", "(all x y.((Sam(x) & Grimpus(x)) -> -Dashpus(y)) & ((Sam(x) & Vumpus(x)) -> -Sam(x,y)))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Tompus(x))) & (Sam(x) -> Vampire(x)))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Vumpus(x)))", "all x y.((Sam(x) & Grimpus(x)) -> (Sam(y) & -Zimpus(y)) | Sam(x) & Vampus(x)))", "all x y z.((Sam(x) & Grypus(y) & Zumpus(z)) -> (Sam(x) & Lumpus(x)))", "(all x y z.((Sam(x) & Grimpus(x) & -Zumpus(y)) -> (Sam(x) & Vompus(z))))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Vumpus(x)))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Vumpus(x)))", "all x y z.((Sam(x) & Grimpus(x) & Sam(y) & Zumpus(z)) -> ((Sam(x) & -Sam(y,z)) & Vumpus(z))))", "(all x.(SamsGranpus(x) -> Grimpus(x)) & all y.(SamsTompus(y)) -> Vumpus(y)))", "exists x.(Sam(x) & Grimpus(x) & -Zumpus(x) & Sam(x))", "(all x.(Sam(x) -> Grumpus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Vumpus(x))))", "(all x.(Sam(x) -> Grimpus(x)) & all y.(Sam(y) -> -Zumpus(y))) & all z.(Sam(z) -> Voompus(z))))", "all x.(Sam(x) & Grumpus(x) & -Zumpus(x) & Vumpus(x))"]}
{"id": "prontoqa_train_664", "nl": "Max is a vumpus, Max is a tumpus, and Max is not a yumpus.", "fol": "(vumpus(Max) & tumpus(Max) & -yumpus(Max))", "prediction": ["(all x.(Max(x) -> Vulpism(x)) & (Max(x) -> Tumpus(x)) & -(Max(x) -> Yumpsm(x))))", "(all x.(Max(x) -> AMVPust(x)) & all y.(Max(y) -> AMTIMUS(y))) & none of z.(Max(z) -> AMUMPUSH(z))))", "(all x.(Max(x) -> Vumpus(x)) & all y.(Max(y) -> Tumpus(y)) & -Yumpus(y)))", "(all x y z.(Max(x) & Vumpus(x)) -> (Max(y) & Tumpus(y))) & (Max(z) -> (-Yumpus(z))))", "(all x.(Max(x) -> Vumpus(x)) & all y.(Max(y) -> Tumpus(y))) & all z.(Max(z) -> -Yumpus(z)))", "(all x.(Max(x) -> Vumpus(x)) & (Max(x) -> Tumpus(x)) & -Yumpus(x)))", "(all x.(Max(x) -> Vumpus(x)) & (Max(x) -> Tumpus(x)) & -Max(x)))", "(all x.(Max(x) -> Voompus(x)) & (Max(x) -> Tumpus(x)) & (Max(x) -> -Yumpus(x))))", "(Vusipus(Max) & Tumpus(Max) & -Yumpus(Max))", "(all x.(Max(x) -> Vumpus(x)) & (Max(x) -> Tumpus(x)) & -Max(x)))", "(all x.(Max(x) -> Voompous(x)) & (Max(x) -> Tumpus(x)) & (Max(x) -> -Yumpus(x)))", "(all x y.((Max(x) & Vumpus(x)) -> Tumpus(x)) & ((Max(x) & Tumpus(y)) -> -Yumpus(x)))", "(all x.(Max(x) -> Vumpus(x)) & all y.(Max(y) -> Tumpus(y))) & all z.(Max(z) -> -Yumpus(z))))", "(all x.(Max(x) -> Vumpus(x)) & (Max(x) -> Tumpus(x)) & (Max(x) -> -Yumpus(x))))", "all x y z.((Max(x) & Vumpus(y) & Tumpus(z)) -> (Between(x,y) & -Yumpus(x)))", "(all x.(Max(x) -> Vumpus(x)) & (Max(x) -> Tumpus(x)) & (Max(x) -> -Yumpus(x)))"]}
{"id": "prontoqa_train_665", "nl": "Each shumpus is a rompus.", "fol": "all x. (shumpus(x) -> rompus(x))", "prediction": ["all x.(Shumpus(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rumpus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.((Shumpus(x) & Rompus(x)) -> HasShumpus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_666", "nl": "Fae is not a rompus, Fae is a zumpus, and Fae is a tumpus.", "fol": "(-rompus(Fae) & zumpus(Fae) & tumpus(Fae))", "prediction": ["(-Rompus(Fae) & Norompus(Fae) & Nozumpus(Fae) & Nozumpus(Fae))", "(all x.(Fae(x) -> -Rompus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> Tumpus(x))))", "(all x.(Fae(x) -> -Rompus(x)) & all y.(Fae(y) -> Zumpus(y)) & all z.(Fae(z) -> Tumpus(z))))", "(all x.(Fae(x) -> -Rompus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> Tumpus(x)))", "(all x.(Fae(x) -> -Rompus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> Tumpus(x)))", "(all x.(Fae(x) -> -Rompus(x)) & (Fae(x) -> Tosp(x)) & (Fae(x) -> Tumpus(x)))", "(all x.(Fae(x) -> -rompus(x)) & all y.(Fae(y) -> zumpus(y)) & all z.(Fae(z) -> Tumus(z)))", "all x y z.((Rompus(x) & Tompus(y) & Tumpus(z)) -> (-Rompus(x) & Tompus(y) & Tompus(z)))", "(all x.(Fae(x) -> -Rompus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> Tumpus(x)))", "all x y z.((Fae(x) & Tompus(y) & Torpus(z)) -> (-Rompus(x) & -Tompus(y) & -Tompus(z)))", "all x y z.((Fae(x) & (Rompus(y) | Zumpus(y))] -> (-Rompus(x) | Tumpus(z)))", "(all x.(Fae(x) -> -Rompus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> Tumpus(x)))", "(all x.(Fae(x) -> -Rompus(x)) & all y.(Fae(y) -> Zumpus(y)) & all z.(Fae(z) -> Tumpus(z)))", "(all x y z.((Fae(x) & Rompus(y)) -> -Rompus(x)) & ((Fae(z) & Zumpus(z))) -> Tumpus(z)))", "(all x.(Fae(x) -> -Rompus(x)) & all y.(Fae(y) -> Zumpus(y)) & all z.(Fae(z) -> Tumpus(z))))", "(all x y.(Fae(x) -> -Rompus(x)) & (Fae(y) -> Zumpus(y)) & (Fae(y) -> Tumulus(y)))"]}
{"id": "prontoqa_train_667", "nl": "Fae is not a shumpus.", "fol": "-shumpus(Fae)", "prediction": ["all x.(Fae(x) -> -Shumpus(x))", "all x.(Fae(x) -> -Shumpus(x))", "-Shumpus(Fae)", "-(Shumpus(fae) -> -Shumpus(fae))", "all x.(Fae(x) -> -Shumpus(x))", "-Shumpus(fae)", "(-Shumpus(Fae))", "(Has(Fae,Shumpus) & -Shumpus(Fae))", "Shump (-Shumpus(Fae))", "all x.(Fae(x) -> -Shumpus(x))", "-Shumpus(Fae)", "Fae -Shumpus(f)", "(-Shumpus(fae))", "all x.(Fae(x) -> -Shumpus(x))", "(Bird(Fae) & -Shumpus(Fae))", "all x.(Fae(x) -> -Shumpus(x))"]}
{"id": "prontoqa_train_668", "nl": "Brimpuses are wumpuses.", "fol": "all x. (brimpus(x) -> wumpus(x))", "prediction": ["all x.(Brimpus(x) -> Wumpus(x))", "all x.(Brimpus(x) -> Wampus(x))", "all x.(Brumpus(x) -> Wumpus(x))", "all x.(Brumpus(x) -> Kumpe(x))", "all x.(Brumpus(x) -> Wumpus(x))", "all x.(Brimpus(x) -> Wumpus(x))", "all x.(Brompus(x) -> Wampus(x))", "all x.(Brimpus(x) -> Wumpus(x))", "all x.(Brimipe(x) -> (Wumpus(x) & Wumpus(x)))", "all x.(Brompus(x) -> Wempus(x))", "all x.(Brimpus(x) -> Wumpus(x))", "all x.(Brimpuse(x) -> Tumpus(x))", "all x.(Brompus(x) -> Wumpus(x))", "all x.(Blumpus(x) -> Wumpus(x))", "all x.(Brumpus(x) -> Wumpus(x))", "all x.(Brumpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_669", "nl": "Stella is not a wumpus and Stella is an impus and Stella is a tumpus.", "fol": "(-wumpus(Stella) & impus(Stella) & tumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Wumpus(x)) & all y.(Solita(y) -> Izpos(y))) & all z.(Stella(z) -> Tumpus(z)))", "all x.((Stella(x) & -Wumpus(x)) -> (IsStellaRuga(x) | (IsStellaRuga(x) | IsStellaRuga(x)))))", "(all x.(Stella(x) -> -Wumpus(x)) & all y.(Stella(y) -> Impermant(y))) & all z.(Stella(z) -> Tumpus(z))))", "all x y z.((Stella(x) & Wumpus(y) & Imperator(z)) -> (-Wumpus(x) & Imperator(w) & Tumpus(x)))", "(all x.(Wumpus(x) -> -Wumpus(x)) & (Impossible(x) -> -Wumpus(x))) & (Impossible(x) -> Totumpus(x)))", "(all x.((Stella(x) & -Wumpus(x)) -> Issue(x)) & all y.((Stella(y) & Issue(y)) -> Tumpus(y)))", "all x y z.((Wumpus(x) & Implicit(y)) -> (-Wumpus(x) | Impossible(y) | Tumpus(z)))", "(all x y.((Stella(x) & Wumpus(y)) -> -Wumpus(x)) & ((Stella(x) & Impossible(x))) & ((Stella(x) & Tumpus(y))))", "(all x.(Stella(x) -> -Wumpus(x)) & all y.(Stella(y) -> Impossible(y))) & all z.(Stella(z) -> Tumultus(z)))", "(all x.(Wumpus(x) | (Unisex(x) | Impossible(x)))) -> -Wumpus(x)) & (Wumpus(x) -> Impossible(x)) & (Wumpus(x) -> Tumpus(x)))", "(all x.(Stella(x) -> -Wumpus(x)) & ((Stella(x) & Istrics(x)) & (Stella(x) -> Tumpus(x))))", "(all x.(Wumpus(x) -> -Wumpus(x)) & all y.(Impossible(y) -> Stella(y))) & all z.(Tumpus(z) -> (Tumpus(z) | Stella(z))))", "all x y.((Wumpus(x) & IsBetween(y,x)) -> (-Wumpus(x) & IsBetween(y,x)) & (IsTumpus(y) & IsBetween(y,x))))", "exists x.(Stella(x) & -Wumpus(x) & IsDefiant(x) & Tumpus(x))", "(all x.(Falfa(x) -> Unwumpus(x)) & all y.(Falfa(y) -> Imperator(y))) & all z.(Falfa(z) -> Tumulus(z)))", "(all x y.(Stella(x) -> -Wumpus(x)) & (Stella(y) -> Impossible(y))) & (Stella(y) -> Tumpus(y)))"]}
{"id": "prontoqa_train_670", "nl": "Jompuses are lorpuses.", "fol": "all x. (jompus(x) -> lorpus(x))", "prediction": ["all x.(Jompuse(x) -> Lorpus(x))", "all x.(Jompuse(x) -> Lorpus(x))", "all x.(Jompuse(x) -> Lompus(x))", "all x.(Jompuse(x) -> Loompus(x))", "all x.(Jompuse(x) -> Lorpuse(x))", "all x.(Jompuse(x) -> Loomopse(x))", "all x.(Jomex(x) -> Lorpus(x))", "all x.(Jompus(x) -> Loompuse(x))", "all x.(Jompuse(x) -> Lorpuse(x))", "all x.(Jompus(x) -> Lupomuse(x))", "all x.(Jomba(x) -> Loompus(x))", "all x.(Jompuse(x) -> Lorpus(x))", "all x.(Joopuse(x) -> Lorpse(x))", "all x.(Jompuse(x) -> Lorpus(x))", "all x.(Jompuse(x) -> Loomuse(x))", "all x.(Jompuse(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_671", "nl": "Polly is a wumpus and Polly is a tumpus and Polly is not a lorpus.", "fol": "(wumpus(Polly) & tumpus(Polly) & -lorpus(Polly))", "prediction": ["all x y z.((Polly(x) & Wumpus(x) & Tumpus(y) & Lorpus(z)) -> (Whumpus(x) | (Tumpus(y) & -Lorpus(z))))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> Tumpus(y))) & all z.(Polly(z) -> -Lorpus(z))))", "has the following Species(Polly,Wumpus,Tumpus) & -Lorpus(Polly,Lorpus))", "(all x.(Wumpus(x) & All y.(Tumpus(y)) -> Polly(x))) & (Tumpus(y) -> -Lorpus(y)))", "(all x y.(Wumpus(x) & Wumpus(y)) & (Tumpus(y) & -Lorpus(y)))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> Tumpus(y)) & all z.(Poly(z) -> -Lorpus(z))))", "(all x.(Polly(x) -> Willmous(x)) & all y.(Polly(y) -> Tumpus(y)))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> Tumpus(y)) & all z.(Polly(z) -> -Lorpus(z))))", "(all x.(Polose(x) -> Wumpus(x)) & (Polly(x) -> Tumpus(x)) & (Polly(x) -> -Lorpus(x))))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Tumpus(x)) & (Polly(x) -> -Lorpus(x)))", "all x y z.((Polly(x) & Wumpus(x) & Tumpus(y) & Loomis(z)) -> (IsWumpus(x) & IsTumpus(y) & -IsLorpus(z)))", "(all x.(Poly(x) -> Wumpus(x)) & (Poly(x) -> Tumpus(x)) & -Lorpus(x)))", "(all x y z.((Polly(x) & Wumpus(y) & Tompus(z)) -> (Also(x,y) & Also(x,z))) & ((Polly(x) & Lorpus(x)) -> -Also(x,y)))", "all x y z.((Polly(x) & Wumpus(x) & Tumpus(y) & -Lorpus(z)) -> (Wumpus(x) | Tumpus(y) & -Lorpus(z)))", "(all x y z.((Wumpus(x) & -Lorpus(y)) -> (Polly(z) & Wimpus(z))) & ((Polly(z) & Tumpus(z)) -> (Tumpus(z) & -Lorpus(z))))", "all x y z.((Polly(x) & Wampus(x) & Tumpus(y) & -Lorpus(z)) -> (Wumpus(x) & Tumpus(y) & NotLorpus(z)))"]}
{"id": "prontoqa_train_672", "nl": "Lempuses are dumpuses.", "fol": "all x. (lempus(x) -> dumpus(x))", "prediction": ["all x.(Lempuse(x) -> Dumpuse(x))", "all x.(Lampuse(x) -> Dumpuse(x))", "all x.(Lempuse(x) -> Dumpuse(x))", "all x.(Lempuse(x) -> Dumuse(x))", "all x.(Lempuse(x) -> Dumpuse(x))", "all x.(Lempuse(x) -> Dumpuse(x))", "all x.(Lempuse(x) -> Dumpuse(x))", "all x.(Lempuse(x) -> Dumpuse(x))", "all x.(Lempuse(x) -> Dumpuse.", "all x.(Lempuse(x) -> Dumpuse(x))", "all x.(Lempuse(x) -> Dumpuse(x))", "all x.(Lempuse(x) -> Dumpuse(x))", "all x.(Lempuse(x) -> Dumpuse(x))", "all x.(Lempuse(x) -> Dumpuse(x))", "all x.(Lempuse(x) -> Dumpuse(x))", "all x.(Lempuse(x) -> Dumpuse(x))"]}
{"id": "prontoqa_train_673", "nl": "Sam is a grimpus and Sam is not a dumpus and Sam is a tumpus.", "fol": "(grimpus(Sam) & -dumpus(Sam) & tumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Grouchpus(x)) & (Sam(x) -> -Dumpus(x)) & (Sam(x) -> Tumpus(x)))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Dumpus(x)) & (Sam(x) -> Tumulus(x)))", "(all x y.((Sam(x) & Grimpus(y)) & ( (Sam(x) & -Dumpus(y))) | (Sam(x) & Tompus(x)))))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Dumpus(x)) & (Sam(x) -> Tumpus(x))))", "(all x.(Sam(x) -> Grimpus(x)) & ((Sam(x) & -Dumpsus(x)) | (Sam(x) & Tumpus(x)))))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Dumpus(x)) & (Sam(x) -> Tumpus(x)))", "(all x y.((Sam(x) & Grumpus(x)) -> Grimpus(x)) & ((Sam(x) & -Dumpus(y)) -> Tumpus(x)))", "all x y.((Sam(x) & Grimpus(x)) -> (-Dumpus(x) & Tumpus(y)))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) | -Dumpy(x))) & (Sam(x) -> Tumpus(x)))", "all x y z.((Sam(x) & Grimpus(x) & Dumpus(y) & Tumpus(z)) -> (AsKrusis(x) & -AsKrusis(y) & AsKrusis(z) & AsKrusis(z)))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Dumpus(x)) & (Sam(x) -> Tumpus(x)))", "all x y.((Sam(x) & Grimpus(x) & Sam(y)) -> (-Dumpus(y) & Tumpus(y)))", "all x.(Sam(x) -> (Grimpus(x) & -Dumpus(x) & Tumpus(x)))", "(all x.(Sam(x) -> Grumpus(x)) & (Sam(x) -> -Dumpus(x)) & (Sam(x) -> Tumpus(x)))", "all x y.((Sam(x) & Grimpus(x) & Sam(y)) -> (-Dumpus(y) & Pumpus(y)))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> -Dumpus(x)) & (Sam(x) -> Tumpus(x)))"]}
{"id": "prontoqa_train_674", "nl": "Sam is not a lempus.", "fol": "-lempus(Sam)", "prediction": ["ALL x.(Sam(x) -> -Lempus(x))", "all x.(Sam(x) -> -Lempus(x))", "all x.(Sam(x) -> -Lempus(x))", "(-Lempus(Sam))", "all x.(Sam(x) -> -Lempus(x))", "all x.(Sam(x) -> -Lempus(x))", "Sam is not lempus.", "all x.(Sam(x) -> -Lempus(x))", "all x.(Sam(x) -> -Lempus(x))", "all x.(Sam(x) -> -Lempus(x))", "all x.(Sam(x) -> -Lempus(x))", "all x.(Sam(x) -> -Lempus(x))", "all x.(Sam(x) -> -Lempus(x))", "-lempus(Sam)", "all x.(Sam(x) -> -Lempus(x))", "(-Lempus(Sam))"]}
{"id": "prontoqa_train_675", "nl": "Sterpuses are lempuses.", "fol": "all x. (sterpus(x) -> lempus(x))", "prediction": ["all x.(Sterpus(x) -> Lempuse(x))", "all x.(Sterpus(x) -> Lempuse(x))", "all x.(Sterpus(x) -> Lempus(x))", "all x y.((Sterpus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Sterpus (x) -> Lempuse(x))", "all x.(Sterpus(x) -> Lempuse(x))", "all x.(Sterpus(x) -> Lempuse(x))", "all x.(Sterpuse(x) -> Lempuse(x))", "all x.(Sterpus(x) -> Lempuse(x))", "all x.((Sterpuse(x) & Lempuse(x)) -> Lempuse(x))", "all x.(Sterpus(x) -> Lempuse(x))", "all x.(Sterpus(x) -> Lempuse(x))", "all x.(Sterpus(x) -> Lempuse(x))", "all x.(Sterpus(x) -> Lempuse(x))", "all x.(Sterpus(x) -> Lempuse(x))", "all x.(Sterpus(x) -> Lempuse(x))"]}
{"id": "prontoqa_train_676", "nl": "Polly is a brimpus and Polly is not a lempus and Polly is a dumpus.", "fol": "(brimpus(Polly) & -lempus(Polly) & dumpus(Polly))", "prediction": ["exists x.(Poly(x) -> (Brumpus(x) & -Lempus(x) & Dumpus(x)))", "(all x y.((Polly(x) & Brimpus(x)) -> NoLempus(y)) & ((Polly(x) & Dumpus(y)) -> None(x)))", "(all x.(Brimpus(x) -> Polly)) & (Lempus(x) -> Polly(x))) & (Dupus(x) -> Polly)))", "all x y.((Polly(x) & Brimpus(x) & Polly(y)) -> (-Lempus(y) & Dumpus(y)))", "(all x.(Polly(x) -> Brimpus(x)) & all y.(Polly(y) -> -Lempus(y)) & all z.(Polly(z) -> Dumpus(z))))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Lempus(x)) & (Polly(x) -> Dumpus(x)))", "all x y.((Poly(x) & Brimpus(x) & Polly(y)) -> (-Lempus(y) & Dumpus(y)))", "all x y z.((Birmpus(x) & Plumpus(y) & Dumpus(z)) -> (Brimpus(x) & -Lempus(y) & Dumpus(z)))", "all x y.((Polly(x) & Polly(y)) -> ((WearsBrimpus(x) & -WearsLempus(y)) | WeighsDumpus(y)))", "all x y.((Polly(x) & Brimpus(x)) -> (-Lempus(y) & Dumpus(x)))", "(all x.(Polly(x) -> Brimpus(x)) & all y.(Polly(y) -> -Lempus(y))))", "(all x.(Polly(x) -> Birmpus(x)) & (Polly(x) -> -Lempus(x)) & (Polly(x) -> Dumpus(x)))", "all x.((Gilbert(x) & Polly(x)) -> (Brimpus(x) & -Lempus(x) & Dumpus(x)))", "(all x.(Brimpus(x) -> Polly)) & all y.(Lempus(y) -> Polly(y))) & all z.(Dumpus(z) -> Polly)))", "all x y.((Polly(x) & Brimpus(x) & Polly(y)) -> (-Lempus(y) & Dumpus(y)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Lempus(x)) & (Polly(x) -> Dumpus(x))))"]}
{"id": "prontoqa_train_677", "nl": "Fae is a brimpus, Fae is not a grimpus, and Fae is an impus.", "fol": "(brimpus(Fae) & -grimpus(Fae) & impus(Fae))", "prediction": ["(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> -Grimpus(x)) & (Fae(x) -> Impermissible(x)))", "(all x.(Fae(x) -> Brimpus(x)) & all y.(Fae(y) -> -Grimpus(y))) & all z.(Fae(z) -> Impossit(z)))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> -Grimpus(x)) & (Fae(x) -> Implacable(x)))", "all x.(Fae(x) -> ((Brimpus(x) & -Grimpus(x)) | (Immersion(x) & Isofix))))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> -Grimpus(x)) & (Fae(x) -> Impermissible(x)))", "(all x.(Famous(x) -> Brimpus(x)) & (Famous(x) -> -Grimpus(x)) & (Famous(x) -> Issuel(x))))", "all x y z.((Fae(x) & Brimpus(x) & Fae(y) & Grimpus(z)) -> (Birmpus(x) & Obsidian(y)))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> -Grimpus(x)) & (Fae(x) -> Imperator(x)))", "(all x y.((Fae(x) & Brimpus(x)) -> Refusal(x)) & ((Fae(y) & -Grimpus(y)) -> Refusal(y)))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> -Grimpus(x)) & (Fae(x) -> Imperemptor(x)))", "(all x.(Famus(x) -> Brimpus(x)) & all y.(Fame(y) -> -Grimpus(y))) & all z.(Fae(z) -> Issue (z))))", "all x y.((Fae(x) & Brimpus(x)) -> (-Farumpus(x) & Imperator(y)))", "(all x.(Fae(x) -> Brimpus(x)) & all y.(Fae(y) -> -Grimpus(y)) & all z.(Fae(z) -> Imperative(z)))", "all x y z.((Fae(x) & Brimpus(x) & Grimpus(y) & Impossible(z)) -> (Brimpus(x) & -Grimpus(y) & Imperator(z)))", "all x.(Fae(x) -> (Birmpus(x) & -Grimpus(x) & Isolator(x)))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> -Grimpus(x)) & (Fae(x) -> Imperator(x)))"]}
{"id": "prontoqa_train_678", "nl": "Wren is a tumpus, Wren is not a lorpus, and Wren is an impus.", "fol": "(tumpus(Wren) & -lorpus(Wren) & impus(Wren))", "prediction": ["(all x y z.((Wren(x) & Tumpus(y) & Owl(z)) -> Tumpus(x)) & All z w.((Wren(w) & -Lorpus(w)) -> Isolator(w)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> -Lorpus(y)) & all z.(Wren(z) -> Implicator(z))))", "(all x y z.(Tumpus(x) -> Wren(x)) & (Legerpus(y) -> -Wren(z))) & (Imperia(z) -> Wren(z)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.((Wren(y) & -Lorpus(y))) -> Imperator(y)))", "(all x y z.((Wren(x) & Tumpus(x)) -> Oval(y)) & ((Wren(z) & -Lorpus(z)) -> Immune(x)))", "(all x y.((Wren(x) & Tomb(y)) -> Tumpus(x)) & ((Wren(x) & -Lorpus(y)) -> Imperative(x)))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> -Lorpus(x)) & (Wren(x) -> Impossible(x)))", "all x y.((Wren(x) & Tompkins(y)) -> (Tumpus(x) | -Lorpus(x) & Isolator(x)))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> -Lorpus(x)) & (Wren(x) -> Imperium(x)))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> -Lorpus(x)) & (Wren(x) -> Impossible(x)))", "(all x.(Wren(x) -> Tumpus(x)) & (-Wren(x) -> Lorpus(x)) & (-Wren(x) -> Issue(x))))", "(all x.(Lorpus(x) -> Tumpus(x)) & (Wren(x) -> -Lorpus(x)) & (Wren(x) -> Impermissible(x)))", "all x.((Wren(x) & Tumpus(x)) -> -Lorpus(x)) & -Illegal(x))", "(all x y z.(Tumpus(x) -> Wren(x)) & (Lorpus(y) -> Wren(z))) & (Indicier(z) -> Wren(z)))", "(all x.(Wren(x) -> Tumpus(x)) & (-Lorpus(x)) | (-Lorpus(x) & Ispos(x))))", "(all x.(Wren(x) -> Tumpus(x)) & (-Wren(x) -> Lorpus(x)) & (-Wren(x) -> Issue(x)))"]}
{"id": "prontoqa_train_679", "nl": "Every grimpus is a shumpus.", "fol": "all x. (grimpus(x) -> shumpus(x))", "prediction": ["all x.(Puppy(x) -> Humpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x.(Smoke(x) -> Humpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Slumpus(x) -> Grimpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Gritty(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shampus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Smooch(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_680", "nl": "Polly is not a shumpus and Polly is a yumpus and Polly is a sterpus.", "fol": "(-shumpus(Polly) & yumpus(Polly) & sterpus(Polly))", "prediction": ["all x y z.((Shumpus(x) & Yumpus(y) & Mercus(z)) -> (-Shumpus(x) & Yumpus(y) & -Sterpus(z)))", "(all x y z.((Polly(x) & Shumpus(y)) -> -Shumpus(x)) & ((Poly(z) & Yukpus(z))) -> Sterpus(z)))", "all x.(Polly(x) -> (-Shumpus(x) & -Yumpus(x) & Sterpus(x)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x)) | (Pollly(x) -> Sterpus(x))))", "exists x y.(Poly(x) & -Shumpus(x) & -Yumpus(y) & -Sterpus(z))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x)) & (Poly(x) -> Sterpus(x)))", "all x y z.((Poly(x) & Hyumpus(y) & Sterpus(z)) -> (-Shumpus(x) & -Yumpus(y) & -Sterpus(z)))", "(all x.(Poly(x) -> -Shumpus(x)) & (Poly(x) -> Yampus(x)) & (Poly(x) -> Sterpus(x)))", "(all x.(Polly(x) -> (-Shumpus(x) | Yampus(x) | Sterpus(x))))", "(all x.(Shumpus(x) -> -Shumpus(x)) & all y.(Yumpus(y) -> -Sterpus(y)))", "(all x.(Polly(x) -> (-Shumpus(x) | Yang(x)) | Sterpus(x)))", "(all x.(Polly(x) -> -Shumpus(x)) & -Yumpus(x) | (Poly(x) & Sterpus(x))))", "exists x y z.((Poly(x) & Humpus(y) & Yumpus(z)) -> (-Shumpus(x) & Yumpus(y) & Sterpus(z)))", "(all x.(OfShumpus(x) -> -Shumpus(x)) | (OfYumpus(x) & OfStrokerpus(x))))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x)) & (Polly(x) -> Stainless(x)))", "exists x.(Poly(x) & -Shumpus(x) & Yampus(x) & Sterpus(x))"]}
{"id": "prontoqa_train_681", "nl": "Max is a sterpus, Max is not a gorpus, and Max is a dumpus.", "fol": "(sterpus(Max) & -gorpus(Max) & dumpus(Max))", "prediction": ["(all x.(Max(x) -> Starpus(x)) & (Max(x) -> -Gorpus(x)) & (Max(x) -> Dumpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> -Gorpus(y)) & all z.(Max(z) -> Dumpus(z))))", "all x y.((Max(x) & Sterpus(x)) & (-Horpus(y) & Depux(y))) -> (Sterpus(x) & -Gorpus(y) & Dumpus(x)))", "(all x y z.((Max(x) & Sterepus(y) & Gorpus(z)) -> (Sterpus(x) & -Gorpus(y) & Dumpus(z))))", "(all x y z.(Max(x) -> Sterpus(x)) & (Max(y) -> -Gorpus(y)) & (Max(z) -> Dumpus(z)))", "all x.((Max(x) & Sterpus(x)) | (-Garpus(x)) | (-Hurpus(x): Dumpus(x))))", "(all x.(Max(x) -> Sterepus(x)) & (Max(x) -> -Gorpus(x)) & (Max(x) -> Dumpus(x)))", "all x y z.((Max(x) & Discrete(y) & Gorpus(z) & Dumpus(x)) -> (Sterpus(x) | -Serpus(y) & Dumpus(z)))", "(all x.(Max(x) -> Sterotism(x)) & all y.((Max(y) & -Gorpus(y))) -> Dumpus(y)))", "(all x.(Max(x) -> Sterpus(x)) & (-Max(x) -> Gorpus(x)) & (-Max(x) -> Dumpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Gorpus(x)) & (Max(x) -> Dumpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & (-Max(x) -> Gorpus(x)) & (+Max(x) -> Dumpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Gorpus(x)) & (Max(x) -> Dumpus(x)))", "all x.((Max(x) & Steropus(x)) -> (-Gorpus(x) & Dumpus(x)))", "(exists x.(Max(x) & Steerpus(x)) & -exists y.(Gorpus(y) & Gorpus(z) & Dumpus(y)))", "(all x.(Max(x) -> Sterotism(x)) & (Max(x) -> -Gorpus(x)) & (Max(x) -> Dumpus(x)))"]}
{"id": "prontoqa_train_682", "nl": "Max is not a rompus.", "fol": "-rompus(Max)", "prediction": ["All x.(Max(x) -> -Romulus(x))", "-Rompus(Max)", "(There is no rompus(Max) & -(Jimmy(Max) & Rompus(Max)))", "all x.(Max(x) -> -Rompus(x))", "Max is not a rompus.", "Max -RockPuse(Max)", "(-Rompus(Max))", "-Rompus(Max)", "-Rompus(Max)", "-Rompus(Max)", "all x.(Max(x) -> -Rompus(x))", "(-Rompus(Max))", "-Rompus(Max)", "Max is not a Rompus(Max)", "Max is -Rompus(Max)", "all x.(Max(x) -> -Rompus(x))"]}
{"id": "prontoqa_train_683", "nl": "Stella is a vumpus and Stella is a rompus and Stella is not a yumpus.", "fol": "(vumpus(Stella) & rompus(Stella) & -yumpus(Stella))", "prediction": ["all x.(Stella(x) -> ((Vampus(x) & Rompus(x)) | (Kimmy(x) & -Yumpus(x))))", "all x y z.((Vumpus(x) & Rompus(y) & Stella(z)) -> (Vumpus(x) & rompus(y) & -Yumpus(z)))", "exists x.(Vampus(x) & Rompus(x) & -Yumpus(x))", "(all x.(Stella(x) -> Vumpus(x)) & all y.(Rompus(y) -> Noyumpus(y))))", "(all x.(Vumpus(x) -> Stella(x)) & (Rompus(x) -> Stella(x)) & (Yumpus(x) -> Stella(x)))", "(all x y.((Vumpus(x) & -Yumpus(y)) -> (Vumpus(x) & Rimpus(y))) & ((Rompus(y) & -Yumpus(y)) -> Yumpus(y)))", "(all x y.((Stella(x) & Vampire(x) & Rampire(y)) -> (Vampire(x) & Rompus(y) & -Yumpus(z))))", "(all x.(Stella(x) -> V\u00fcmpus(x)) & all y.(Stella(y) -> Rompus(y))) & all z.(Stella(z) -> -Yumpus(z)))", "all x y z.((Stella(x) & Umbrella(y) & Rompus(z)) -> (Vumpus(x) | Rompus(z) & -Yumpus(x)))", "(all x y z.((Stella(x) & Vumpus(y) & Rumpus(z)) -> Is(x,y)) & ((Stella(x) & Yumpus(z)) -> Is(x,z)))", "(all x.(Vumpus(x) & AllMoths(x)) & (Rompus(x) & -Yumpus(x)))", "(all x.(Starlet(x) -> Visible(x)) & all y.(Stella(y) -> Rompus(y))) & all z.(Stella(z) -> -Yumpus(z))))", "(all x.(Vumpus(x) -> Stella(x)) & all y.(Rompus(y) -> Stella(y))) & all z.(Yumpus(z) -> Stella(z))))", "(=Vumpus(Stella) & Oyampus(Stella) & -Yumpus(Stella))", "all x y z.((Vampire(x) & Rompus(y) & Yuppus(z)) -> (Vampire(x) & Raccoon(y) & -Yumpus(z)))", "(all x.(Stella(x) -> Vumpus(x)) & all y.(Stella(y) -> Rompus(y))) & all z.(Stella(z) -> -Yumpus(z)))"]}
{"id": "prontoqa_train_684", "nl": "Each vumpus is a jompus.", "fol": "all x. (vumpus(x) -> jompus(x))", "prediction": ["all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "exists x.(Vumpus(x) & Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))"]}
{"id": "prontoqa_train_685", "nl": "Fae is not a jompus and Fae is a brimpus and Fae is a sterpus.", "fol": "(-jompus(Fae) & brimpus(Fae) & sterpus(Fae))", "prediction": ["(exists x.(Fae(x) & -Jimpus(x)) & exists y.(Brompus(y) & Brimpus(y))) & exists z.(Sterepus(z) & Sterepus(z))))", "all x y z.((Fae(x) & Jompus(y) & Brimpus(z)) -> (-Jompus(x) & -Brimpus(x) & -Sterpus(y)))", "(exists x.(fae(x) & -Jumpus(x)) & exists y.(brimpus(y) & Fermatus(y))) & exists z.(sterpus(z) & Fermatus(z))))", "(all x.(Fae(x) -> -Jompus(x)) & (Fae(x) -> Brimpus(x)) & (Fae(x) -> Sterepus(x)))", "(all x y z.((Fae(x) & Jompus(y)) -> -Jompus(x)) & ((Fae(z) & Beech(z))) -> Brimpus(z)) & ((Fae(z) & Merces(z))) -> Sterpus(z)))", "(all x.(Fae(x) -> -Jompus(x)) & (Brimpus(x) | Sterepus(x))))", "(all x y.((Fae(x) & -Jompus(x)) -> Brimpus(y)) & ((Fae(x) & -Sterepus(y)) -> Sterepus(x)))", "(all x.(Fae(x) -> -Jompus(x)) & (Fae(x) -> Brimpus(x)) & (Fae(x) -> Sterpus(x)))", "all x y z.((Fae(x) & Jompus(y) & Brimpus(z)) -> (-Jompus(x) & Brimpus(x) & Sterpus(x)))", "all x y z.((Veterin(x) & Fae(y) & Brimpus(z)) -> (-Jompus(x) & Brimpus(y) & Sterpus(z)))", "(all x.(Fae(x) -> -Jompus(x)) & (Fae(x) -> Brimpus(x)) & (Fae(x) -> Sterpus(x)))", "(all x.(Fae(x) -> -Jompus(x)) & (Fae(x) -> Brimpus(x)) & (Fae(x) -> Sterpus(x)))", "(all x y z.((Fae(x) & Jompus(y) & Brimpus(z)) -> -Jome(x)) & ((Fae(x) & Brimpus(x)) -> Sterepus(x)))", "all x.(Fae(x) -> (-Hompus(x) & -Brimpus(x) & -Sterepus(x)))", "all x y z.((Fae(x) & Jompus(y) & Brimpus(z)) -> (-Fae(x) & Brimpus(y) & Sterpus(z)))", "(all x.(Fae(x) -> -Jompus(x)) & (Fae(x) -> Brimpus(x)) & (Fae(x) -> Sterpus(x)))"]}
{"id": "prontoqa_train_686", "nl": "Sam is a gorpus, Sam is not a lorpus, and Sam is a rompus.", "fol": "(gorpus(Sam) & -lorpus(Sam) & rompus(Sam))", "prediction": ["(all x.(Sam(x) -> Gorpus(x)) & (Clorpus(x) -> -Lorpus(x)) & (Rompus(x) -> Sorpus(x)))", "all x y z.((Sam(x) & Gorpus(x) & Lops(y) & Rompus(z)) -> (Gorpus(x) & NotLorpus(y) & Rompus(z)))", "(all x.((Sam(x) & Gorpus(x)) & -Lorpus(x)) | (Sam(x) & Rompus(x))))", "all x y z.((Sam(x) & Gorpus(x) & Lure(y) & Rompus(z)) -> (Gorpus(x) | (-Lorpus(y) & Rompus(z)))))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> -Lorpus(x)) & (Sam(x) -> Rompus(x)))", "all x.(Gorpus(x) | (-Lorpus(x)) | (rompus(x))))", "(all x.(Sam(x) -> Gorpus(x)) & -Larpus(x)) & (Sam(x) -> Rompus(x)))", "all x y z.((Sam(x) & Gorpus(x) & Sam(y) & (-Sam(y) | Lorpus(y) | Rompus(z))) -> (Gorpus(x) | -Lelpis(y) | Rompus(x)))", "all x y z.((Sam(x) & Gorpus(y) & Lurus(z & -Lorpus(y)) -> (Rompus(x) & Gorpus(x)))", "(all x.(Sam(x) -> Gorpus(x)) & (-Sam(x) -> Lorpus(x)) & (Sam(x) -> Rompus(x)))", "(all x.(Sama(x) -> Gorpus(x)) & all y.(Sama(y) -> -Lorpus(y))) & all z.(Sama(z) -> Rompus(z)))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> -Lorpus(x)) & (Sam(x) -> Rompus(x)))", "all x y z.((Sam(x) & Gorpus(y) & Lops(z)) -> (Important(x,y) & -Important(y,z)))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> -Lorpus(x)) & (Sam(x) -> Rompus(x)))", "all x y z.((Sam(x) & Gorpus(x) & -Lorpus(y) & Rompus(z)) -> (Gorpus(x) & Rompus(y)))", "(all x y z.(Sam(x) -> Gorpus(x)) & ((Sam(y) & -Lorpus(y)) -> Rompus(z))) -> Gorpus(y))"]}
{"id": "prontoqa_train_687", "nl": "Every dumpus is a grimpus.", "fol": "all x. (dumpus(x) -> grimpus(x))", "prediction": ["all x.(Dumpus(x) -> Grimpus(x))", "all x.(Dumpus(x) -> Grimpus(x))", "all x.(Dumpus(x) -> Grimpus(x))", "all x.(Dumpus(x) -> GreakPush(x))", "all x.(Dumpus(x) -> Grimpus(x))", "all x.(Dumpus(x) -> Grimpus(x))", "all x.(Dumpus(x) -> Grimpus(x))", "all x.(Dumpus(x) -> Grimpus(x))", "all x.(Dumpus(x) -> Grimpus(x))", "all x.(Dumpus(x) -> Scarpest(x))", "all x.(Dumpus(x) -> Grimpus(x))", "all x.(Dumpus(x) -> Grimpus(x))", "all x.(Dumpus(x) -> Grimpus(x))", "all x.(Dumpus(x) -> Grimpus(x))", "all x.(Dumpus(x) -> Grimpus(x))", "all x.(Dumpus(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_688", "nl": "Rex is not a grimpus and Rex is a tumpus and Rex is a sterpus.", "fol": "(-grimpus(Rex) & tumpus(Rex) & sterpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Grimpus(x)) & (Tumpus(x) & Sterpus(x)))", "(-Grimpus(Rex) & Tumpus(Rex) & Sterpus(Rex))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Tumpus(y) -> Sterpus(y)))", "(all x.(Rex(x) -> -Grimpus(x)) & (Tumpus(x) | Sterpus(x))))", "(all x y.((Rex(x) & Grimpus(x)) -> -Purple(x)) & ((Rex(y) & Tumpus(y)) -> Sterpus(y)))", "(all x.(Rex(x) -> -Grimpus(x)) & (Tumpus(x) & Sterpus(x)))", "a) (Rex(m) & -Grimpus(m) & Tumpus(m) & Sterpus(m)))", "(all x.(Rex,notGrimpus) -> (-Grimpus(x) & Tumpus(x)) & all y.(Stross(y) -> ((Rex,y) | Rex,y)))))", "(all x.(Rex(x) -> Grimpus(x)) & (Tumpus(x) | Sterpus(x))))", "(all x y.((Rexx(x) & Grimpus(y)) -> -Grimpus(x)) & ((Rexx) & Tumor(y)) -> Steroid(x)))", "all x y z.((Rex(x) & Grimpus(y) & Tumpus(z)) -> -Grimpus(x) & Tumpus(z) & Sterpus(x))", "(all x y z.(Rex(x) -> (NoGruper(x) | NoTumpus(x))) & ((Rex(y) & NoTumpus(y)) -> Sterpus(z))))", "Rex is notGrimpus(x) & Rex isTumpus(x) & Rex isSterpus(x))", "(all x y.((Rex(x) & Gruppus(y)) -> -Grimpus(x)) & ((Rex(x) & Tumpus(y)) -> Sterpus(x)))", "(all x.(Rex(x) -> -Grimpus(x)) & (Tumpus(x) & Sterpus(x)))", "(all x.(Rexx(x) & -Grimpus(x)) & (Tumpus(x) | Sterpus(x))))"]}
{"id": "prontoqa_train_689", "nl": "Grimpuses are dumpuses.", "fol": "all x. (grimpus(x) -> dumpus(x))", "prediction": ["all x.(Grimpus(x) -> Dumpus(x))", "all x.(Grimpus(x) -> Dumpuse(x))", "all x.(Grimpus(x) -> Dumpuse(x))", "all x.(Grimpus(x) -> Dumpuse(x))", "all x.(Grimpus(x) -> Dumpuse(x))", "all x.(Grimpus(x) -> Dumpuse(x))", "all x.(Grimpus(x) -> Dumpus(x))", "all x.(Grimpus(x) -> Dumpuse(x))", "all x.(Grampus(x) -> Dumpuse(x))", "all x.(Grimpuse(x) -> Dumpus(x))", "(HasDumus(Grimpus) & HasDumpus(Grimpus))", "all x.(Grimpus(x) -> Dumpus(x))", "all x.(Grimpus(x) -> Dumpuse(x))", "all x.(Grimpus(x) -> Dumpuse(x))", "all x.(Grimpus(x) -> Dumpuse(x))", "all x.(Grimpus(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_690", "nl": "Stella is not a dumpus, Stella is a lempus, and Stella is a vumpus.", "fol": "(-dumpus(Stella) & lempus(Stella) & vumpus(Stella))", "prediction": ["all x y z.((Stella(x) & Lempus(y) & Vumpus(z)) -> (-Dumpus(x) & Lempus(y) & Vumpus(z)))", "(all x y z.((Stella(x) & Dumpus(y)) -> -Dumpus(x)) & ((Stella(x) & Lempus(z))) -> Vumpus(x)))", "(all x.(Stella(x) -> -Dumpus(x)) & all y.(Stella(y) -> Lempus(y)) & all z.(Stella(z) -> Vampus(z))))", "(all x y z.((Pete(x) & Dumpus(y) & Plisk(z)) -> -Dumps(x,y)) & ((Pete(z) & Lempus(z)) -> Vumpus(z)))", "all x.((Stella(x) & -Dumpus(x)) -> (Lempus(x) & Vumpus(x)))", "all x.(Stella(x) -> (-Dumpus(x) | Lempus(x) | Vumpus(x)))", "all x y z.((Stella(x) & Lempus(y) & Vumpus(z)) -> (-Dumpus(x) & Lempus(y) & Vumpus(z)))", "(all x.(Stella(x) -> -Dumpus(x)) & all y.(Stella(y) -> Lempus(y)) & all z.(Stella(z) -> Vumpus(z)))", "(all x.(Stella(x) -> -Dumps(x)) & (Lempus(x) & Vumpus(x)))", "(all x.(Stella(x) -> -Dumpus(x)) & all y.(Stella(y) -> Lempus(y)) & all z.(Stella(z) -> Vamppus(z))))", "(all x.(Stella(x) -> -Dumpus(x)) & (Stella(x) -> Lempus(x)) & (Stella(x) -> Vumpus(x)))", "(all x.(Stella(x) -> -Dumpus(x)) & (Lempus(x) & Vumpus(x))))", "(all x.(Stella(x) -> -Dumpus(x)) & (Stella(x) -> Lempus(x)) & (Stella(x) -> Vumpus(x)))", "(all x.(Stella(x) -> -Dumpus(x)) & all y.(Lempus(y) & Vumpus(y)))", "all x y z.((Stella(x) & Necrosis(y) & Lempus(z)) -> (-Dumps(x) & Lighty(y) & Lumbo(z)))", "(all x.(Stella(x) -> -Dumpus(x)) & (Stella(x) -> Lempus(x)) & (Stella(x) -> Vumpus(x)))"]}
{"id": "prontoqa_train_691", "nl": "Every yumpus is a lempus.", "fol": "all x. (yumpus(x) -> lempus(x))", "prediction": ["all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "exists x.(Yumpus(x) & Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))", "all x.(Yumpus(x) -> Lempus(x))"]}
{"id": "prontoqa_train_692", "nl": "Fae is not a lempus, Fae is a numpus, and Fae is a lorpus.", "fol": "(-lempus(Fae) & numpus(Fae) & lorpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Lempus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> Lorpus(x))))", "(all x y z.((Fae(x) & Lempus(y) & Numpus(z)) -> -Lempus(x)) & ((Fae(x) & Numpus(y))) | ((Fae(z) & Lorpus(z)))))", "all x.(Fae(x) -> (-Lempus(x) & -Nobus(x) & -Lorpus(x)))", "all x y z.((Fae(x) & Numpus(y) & Loper(z)) -> (-Lempus(x) & -Numpus(y) & -Lampus(z)))", "(all x y.(Fae(x) -> -Lempus(x)) & (Fae(y) -> Numpus(y)) & (Fae(z) -> Lorpus(z)))", "(all x y z.((Fae(x) & Lempus(y)) -> -Lempus(x)) & ((Fae(z) & Number(z))) -> Loper(z)))", "(Crops(Fae) -> -Lempus(f)) & Nompus(f) & Lorpus(f))", "(all x y z.((Fae(x) & Lempus(y)) -> -Lempus(x)) & ((Fae(z) & Numpus(z))) -> Lorpus(z)))", "(all x y z.(Fae(x) -> -Limpus(x)) & (Fae(y) -> Numpus(y)) & (Fae(z) -> Lorpus(z)))", "(all x.(Fae(x) -> -Lempus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> Lorpus(z))))", "(all x.(Fae(x) -> -Lempus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> Lorpus(x)))", "all x y z.((Fae(x) & Numpus(y) & Dorpus(z)) -> (-Lempus(x) & Numpus(y) & Lompus(z)))", "all x y z.((Fae(x) & Numpus(y) & Lorpus(z)) -> (-Lempus(x) & Numpus(y) & -Lorpus(z)))", "(all x.(Fae(x) -> -Lempus(x)) & (Fae(x) -> Nompus(x)) & (Fae(x) -> Lorpus(x)))", "exists x.(Fae(x) & -Lempus(x) & Numpus(x) & Lorpus(x))", "(all x y z.(Fae(x) -> -Lempus(x)) & (Fae(y) -> Numpus(y)) & (Fae(z) -> Lorpus(z)))"]}
{"id": "prontoqa_train_693", "nl": "Every lempus is a rompus.", "fol": "all x. (lempus(x) -> rompus(x))", "prediction": ["all x.(Lempus(x) -> Rompus(x))", "all x.(Lempus(x) -> Rompus(x))", "all x.(Limpus(x) -> Rompus(x))", "all x.(Lempus(x) -> Rompus(x))", "all x.(Lempus(x) -> Rompus(x))", "all x.(Lempus(x) -> Rompus(x))", "all x.(Lempus(x) -> Rompus(x))", "all x.(Limpus(x) -> Rompus(x))", "all x.(Lempus(x) -> Rompus(x))", "all x.(Lempus(x) -> Rompus(x))", "all x.((Lempus(x) & Rompus(x)) -> HasLempus(x))", "all x.(Limpus(x) -> Rompus(x))", "all x.(Limpus(x) -> Rompus(x))", "all x.(Limpus(x) -> Rompus(x))", "all x.(Lempus(x) -> Rompus(x))", "all x.(Limpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_694", "nl": "Polly is a yumpus and Polly is not a rompus and Polly is a sterpus.", "fol": "(yumpus(Polly) & -rompus(Polly) & sterpus(Polly))", "prediction": ["(all x y.((Polly(x) & Yumps(x)) -> Polly(x)) & ((Polly(y) & -Rompus(y)) -> Sterpus(y)))", "all x.(Poly(x) -> (yumpus(x) & -rompus(x) & Sterpus(x)))", "all x y z.((Yumpus(x) & Rompus(y) & Sterpus(z)) -> (Yumpus(x) & -Rostus(y) & Sterpus(z)))", "all x y z.((Poly(x) & Yampus(y) & Polly(z)) -> (Yumpus(x) & -Rompus(z) & Sterpus(z)))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Rompus(x)) & (Polly(x) -> Sterpus(x)))", "(all x y.((Poly(x) & Yampus(x)) -> NotRoompus(x)) & ((Poly(y) & Roompus(y)) -> Sterpus(y)))", "(all x.(Plolly(x) -> \"Yumpus(x)) & (-Rompus(y)) & (-Ploy(y) -> Sterpus(y))))", "(all x y.((Polly(x) & Yupus(x)) -> PollyBoy(x)) & ((Polly(y) & -Rompus(y))) -> Sterota(y)))", "(all x.(Polly(x) -> Yampus(x)) & all y.(Polly(y) -> -Rompus(y))) & all z.(Polly(z) -> Sterpus(z))))", "(Sterpus(Polly) & Norompus(Poly) & NoSterpus(Polly))", "all x y z.((Polly(x) & Yumpos(y) & Polly(z)) -> (-Rompus(x) & Sterpus(x)))", "(all x.(PollyOne(x) -> Yampus(x)) & (PollyOne(x) -> -Rompus(x)) & (PolllyOne(x) -> Sterpus(x)))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Rompus(x)) & (Polly(x) -> Steroid(x)))", "all x y z.((Polley(x) & Yampus(x) & -Rompus(y) & -Sterpos(z)) -> (Yumpus(x) & Sterpus(x)))", "all x y z.((Polly(x) & Yampus(x) & Polly(y) & Rompus(y) & Sterpus(z)) -> (Yumpus(y) & -Rompus(y) & Sterpus(z)))", "((Yumpus(Polly) | -Rompus(Polly)) & Sterpus(Polly))"]}
{"id": "prontoqa_train_695", "nl": "Polly is not a lempus.", "fol": "-lempus(Polly)", "prediction": ["all x.(Polly(x) -> -Lempus(x))", "all x.(Polly(x) -> -Lempus(x))", "(-Lempus(Poly))", "(-Lempus(Polly))", "all x.(Polly(x) -> -Lempus(x))", "(-Lempus(Polly))", "(-Lempus(Polly))", "all x.(Polly(x) -> -Lempus(x))", "(-Lempus(Polly))", "(-lempus(Polly))", "(-lempus(Polly))", "(-Lempus(Polly))", "Polly (nolempus(poly))", "all x.(Polly(x) -> -Lempus(x))", "All x.(Polly(x) -> -Lempus(x))", "all x.(Polly(x) -> -Limpus(x))"]}
{"id": "prontoqa_train_696", "nl": "Every numpus is a sterpus.", "fol": "all x. (numpus(x) -> sterpus(x))", "prediction": ["all x.(Number(x) -> Sterpus(x))", "all x.(Numpus(x) -> Sterpus(x))", "all x.(Nompus(x) -> Sterpus(x))", "all x.(Numpus(x) -> Sterpus(x))", "all x.(Numpus(x) -> Sterpus(x))", "all x.(Numpus(x) -> Sterpus(x))", "all x.(Nompus(x) -> Sterpus(x))", "all x.(Nompus(x) -> Sterpus(x))", "all x.(Numpus(x) -> Sterpus(x))", "all x.(Numpus(x) -> Sterpus(x))", "all x y z.((Numpus(x) & Sterpus(y) & Asterpus(z)) -> Ist(x,y,z))", "all x.(Numpus(x) -> Sterpus(x))", "all x.(Numpus(x) -> Sterpus(x))", "all x.(Nompus(x) -> Sterpus(x))", "all x.(Numpus(x) -> Sterpus(x))", "all x.(Numpus(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_697", "nl": "Sam is a dumpus, Sam is not a sterpus, and Sam is an impus.", "fol": "(dumpus(Sam) & -sterpus(Sam) & impus(Sam))", "prediction": ["(all x.(Sam(x) -> Dumpus(x)) & (Sam(y) -> -Sterpus(y)) & (Sam(y) -> Impermissible(y)))", "all x y z.((Sam(x) & Dumpus(x) & Sterpus(y) & Impermissor(z)) -> ((Sam(x) & -Sterpus(y)) | (-Sam(x) & Impermissor(z)))))", "(all x.(Sam(x) -> Dumpus(x)) & (Sam(x) -> -Sterpus(x))) & (Sam(x) -> Imperator(x)))", "(all x.(Sam(x) -> Dumpus(x)) & all y.((Sam(y) & -Sterpus(y))) -> Impermant(y)))", "(all x.(Sam(x) -> Dumpus(x)) & (-Sterpus(x)) & (Sam(x) -> IsPivot(x))))", "(all x.(Sam(x) -> Dumpus(x)) & (Sam(x) -> -Sterpus(x)) & (Sam(x) -> Imperativ(x)))", "all x.(Amen(x) -> (Dumpus(x) & -Sterpus(x) & Impermissible(x)))", "(all x y z.((Sam(x) & Dumpus(y)) -> ((Sam(z) & -Sterpus(z))) | (Sam(x) & Ersetzer(x))))", "(all x.(Sam(x) -> Dumpus(x)) & (Sam(x) -> -Sterpus(x)) & (Sam(x) -> Imperium(x))))", "all x y z.((Sam(x) & Dumpus(y) & -Sterpus(z)) -> (NotSterpus(x) & Implicator(x)))", "all x.((Sam(x) & Dumpus(x)) -> (-sterpus(x) & Ilira(x)))", "(all x.(Sam(x) -> Dumpus(x)) & (Sam(x) -> -Sterpus(x)) & (Sam(x) -> Imperator(x)))", "(all x.(Sam(x) -> Dumpus(x)) & (Sam(x) -> -Sterpus(x)) & (Sam(x) -> Impossible(x)))", "(exists x.(Sam(x) & Dumpus(x))) & exists y.(Sterpus(y) & -Sterpus(y))) & exists z.(Illegal(z) & Deusex(z)))", "all x y z.((Sam(x) & Dumpus(y) & -Sterepus(z)) -> (Dumps(x) & Impelling(x)))", "all x y z.((Sam(x) & Dumpus(x) & -Sterpus(y) & Impossible(z)) -> (Sam(x) & Dumpus(x) & -Sterpus(y) & -Sterpus(z)))"]}
{"id": "prontoqa_train_698", "nl": "Sam is not a numpus.", "fol": "-numpus(Sam)", "prediction": ["(RemembersNumber(Sam) & -Numpus(Sam))", "all x.(Sam(x) -> -Number(x))", "all x.((Sam(x) & -Nompus(x)) -> -Sam(x))", "(-numpus(sam))", "(Sam, -Numpus(Sam))", "all x.(Sam(x) -> -Number(x))", "all x.(Sam(x) -> -Numerus(x))", "(-numpus(Sam))", "all x.(Sam(x) -> -Numpus(x))", "Sam -Numpus(Sam)", "(-numpus(Sam))", "all x.(Sam(x) -> -numpus(x))", "(-numpus(Sam))", "exists x.(Sam(x) & -numpus(x))", "all x.(Sam(x) -> -Numpus(x))", "all x.(Sam(x) -> -numpus(x))"]}
{"id": "prontoqa_train_699", "nl": "Numpuses are zumpuses.", "fol": "all x. (numpus(x) -> zumpus(x))", "prediction": ["all x.(Numpuse(x) -> Zumpuse(x))", "all x.(Numpus(x) -> Zumpuse(x))", "all x.(Numpus(x) -> Zumpuse(x))", "all x.(Numpus(x) -> Zumpuse(x))", "all x y.((Numpus(x) & Zumpuse(y)) -> Numpuse(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpuse(x))", "all x.(Numpuse(x) -> Zumpus(x))", "all x.(Numpuse(x) -> Zumpuse(x))", "all x.(Numpuse(x) -> Zumpus(x))", "all x.(Numpuse(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpuse(x))", "all x.(Numpuse(x) -> Zumpuse(x))", "all x.(Numpus(x) -> Zumpuse(x))", "all x.(Numpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_700", "nl": "Fae is a tumpus, Fae is a shumpus, and Fae is not a zumpus.", "fol": "(tumpus(Fae) & shumpus(Fae) & -zumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Tumpus(x)) & (Fae(x) -> Humpus(x)) & -Zumpus(x)))", "all x y z.((Fae(x) & Tumpus(y) & Humpus(z)) -> (Fae(x) & -Tompus(x)))", "(all x.(Fae(x) -> Tumpus(x)) & (Fae(x) -> Shumpus(x)) & (Fae(x) -> -Zumpus(x))))", "(all x.(Fae(x) -> Tumpus(x)) & (Fae(x) -> Shumpus(x)) & (Fae(x) -> -Zumpus(x)))", "all x y z.((Fae(x) & Tombus(y) & Shumpus(z)) -> (Tumpus(x) & Humpus(x) & -Tompus(x)))", "(all x.(Fae(x) -> Mutus(x)) & all y.(Fae(y) -> Humpus(y))) & all z.(Fae(z) -> -Zumpus(z))))", "(all x.(Fae(x) -> Tumpus(x)) & all y.(Fae(y) -> Humpus(y))) & all z.(Fae(z) -> -Zumpus(z))))", "(all x.(Fae(x) -> Tumpus(x)) & all y.(Fae(y) -> Humpus(y)) & all z.(Fae(z) -> -Tompus(z))))", "(all x.(Fae(x) -> Tumpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> -Tompus(x)))", "(all x.(Fae(x) -> Tumpus(x)) & all y.(Fae(y) -> Humpus(y)) & all z.(Fae(z) -> -Zumpus(z)))", "all x y z.((Fae(x) & Tumpus(y) & Humpus(z)) -> (Tumpus(x) & Humpus(y) & -Tompus(z)))", "(all x.(Fae(x) -> Tumpus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> -Tompus(z))))", "(all x.(Fae(x) -> Kumpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> -Zumpus(x)))", "(all x.(Fae(x) -> Tumpus(x)) & (Fae(x) -> Humpus(x)) & -Zumpus(x)))", "(all x.(Fae(x) -> Tumpus(x)) & (Fae(x) -> Humpus(x)) & -Fae(x)))", "(all x.(Fae(x) -> Tumpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> -Zumpus(x)))"]}
{"id": "prontoqa_train_701", "nl": "Every dumpus is a lorpus.", "fol": "all x. (dumpus(x) -> lorpus(x))", "prediction": ["all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Loompus(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumps(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_702", "nl": "Wren is a gorpus, Wren is not a lorpus, and Wren is a lempus.", "fol": "(gorpus(Wren) & -lorpus(Wren) & lempus(Wren))", "prediction": ["all x y z.((Wren(x) & Gorpus(y) & Zebra(z)) -> (-Lorpus(x) & Lempus(x)))", "exists x.(Wren(x) & Gorpus(x) & -Lorpus(x) & Lempus(x))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> -Lorpus(x)) & (Wren(x) -> Lempus(x)))", "all x y z.((Rose(x) & Wren(y) & (Gorpus(y) | Lorpus(y)) & Lemur(z)) -> Gorpus(y))", "(all x y z.(Wren(x) -> Gorpus(x)) & ((Wren(y) & -Lorpus(y)) & ((Wren(z) & Lempus(z)))))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> -Lorpus(x)) & (Wren(x) -> Lempus(x)))", "(all x.(Wren(x) -> Gorpus(x)) & (-lorpus(x) & (-lorpus(x) | Lempus(x))))", "(all x y.(Wren(x) -> Gorpus(x)) & (Wren(y) -> -Lorpus(y)) & (Wren(y) -> Lempus(y)))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> -Lorpus(x))) & (Wren(x) -> Lempus(x)))", "(all x.(Wren(x) -> Gorpus(x)) & all y.(Wren(y) -> -Lorpus(y))) & all z.(Wren(z) -> Lempus(z))))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> -Lorpus(x)) & (Wren(x) -> Lempus(x)))", "all x y z.((Wren(x) & Gorpus(x) & -Lorpus(y) & Lempus(z)) -> (Both(x,y) & Gorpus(x) & -Lorpus(y) & Lempus(z)))", "(all x y z.(Wren(x) -> (Gorpus(x) | -Lorpus(y))) & (Wren(z) -> (Lempus(z) & -Gorpus(x))))", "(all x.(Wren(x) -> Gorpus(x)) & (Wren(x) -> -Lorpus(x)) & (Wren(x) -> Lempus(x)))", "(all x y z.((Wren(x) & Dorpus(y) & Gorpus(z)) -> Gorpus(x)) & ((Wren(x) & -Lorpus(x)) -> Lempus(x)))", "(all x y z.((Wren(x) & Gorpus(x)) -> Wren(y)) & ((Wren(z) & -Lorpus(z))) -> Lempus(z)))"]}
{"id": "prontoqa_train_703", "nl": "Every impus is a dumpus.", "fol": "all x. (impus(x) -> dumpus(x))", "prediction": ["all x.exists y.(Deficit(x) & Dumpus(y))", "all x.(Impact(x) -> Dumpus(x))", "all x.(Impact(x) -> Dumpus(x))", "all x.(Isolations(x) -> Dumpus(x))", "all x.(Implementer(x) -> Dumpus(x))", "all x.(Implementation(x) -> Dumpus(x))", "ALL X.(Defect(x) -> Dumpus(x))", "all x.(Depeche(x) -> Dumpus(x))", "all x.(Defired(x) -> Dumpus(x))", "all x.(Dumpus(x) -> Impossible(x))", "all x.(Improvement(x) -> Dumpus(x))", "all x.(IsDumpus(x) -> Imperium(x))", "all x.(Implementation(x) -> Dumpus(x))", "all x.(Impossible(x) -> Dumpus(x))", "all x.(IsDefiant(x) -> Dumpus(x))", "all x.(Impilics(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_704", "nl": "Polly is a grimpus, Polly is a gorpus, and Polly is not a dumpus.", "fol": "(grimpus(Polly) & gorpus(Polly) & -dumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Grimpus(x)) & (Polly(x) -> Gorpus(x)) & -Dumus(x)))", "(all x.(Polly(x) -> Grimpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Dumpus(x)))", "(all x.(Polly(x) -> Grimpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Dumpus(x)))", "all x y z.((Polly(x) & Grimpus(y) & Gorpus(z) & Dumpus(z)) -> (Grimpus(x) | Gorpus(z) | Poppy(z)))", "(all x.(Polly(x) -> Grimpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Dumpus(x))))", "all x y.((Polly(x) & Grimpus(x) & Gorpus(y)) -> (Ploy(x) & -Dumpus(y)))", "(all x y z.(Melta(x) -> (Grimpus(x) | Gorpus(x))) & (Melta(y) -> -Dumpus(y)))", "all x y z.((Polly(x) & Grimpus(y) & Gorpus(z)) -> (SnowPect(x) & (Double(y) | -Sugrace(y))))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Polly(y) -> Gorpus(y)) & all z.(Poly(z) -> -Dumpus(z))))", "(all x y z.(Pally(x) -> Grimpus(x)) & (Polly(y) -> Gorpus(y)) & (Polly(z) -> -Dupus(z))))", "(all x.(Polly(x) -> Grimpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Dumpus(x)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Polly(y) -> Gorpus(y)) & all z.(Poly(z) -> -Dumpus(z))))", "all x y z.((Polly(x) & Grimpus(x) & Gorpus(y) & -Dumpus(z)) -> (IsSmooth(x,z) & IsGorpus(x,y)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Polly(y) -> Gorpus(y)) & all z.(Poly(z) -> -Dumpus(z))))", "(all x y z.(Polly(x) -> Grumpus(x)) & (Polly(y) -> Gorpus(y)) & -Dumpus(z)))", "(All x y z.(Murph(x) -> Polly(x)) & (Gorpus(y) -> Polly(z)) & -Dumpus(z)))"]}
{"id": "prontoqa_train_705", "nl": "Polly is not a lempus and Polly is a zumpus and Polly is a tumpus.", "fol": "(-lempus(Polly) & zumpus(Polly) & tumpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Lempus(x)) | (Polly(x) -> Zumpus(x))) | (Polly(x) -> Tumpus(x))))", "all x y z.((Polly(x) & Lempus(y) & Zumpus(z)) -> (-Lempus(x) & -Tompus(x) & -Tompus(x)))", "all x y z w.((Polly(x) & Zumpus(y) & Tompus(z)) -> (-Lempus(x) & Tompus(y) & Tompus(z)))", "exists x y.((Polly(x) & Polly(y)) -> (-Lempus(x) & Zumpus(y) & Tumpus(y)))", "all x y z.((Polly(x) & Lempus(y) & Zumpus(z)) -> (-Lempus(x) & Toumpus(x) & Toumpus(y)))", "(all x.(Lempus(x) -> -Lempus(x)) & all y.(Tompus(y) -> Tompus(y))))", "(all x.(Polly(x) -> -Lempus(x)) & all y.(Polly(y) -> Zumpus(y)) & all z.(Polly(z) -> Tumpus(z))))", "all x y z.((Polley(x) & Lempus(y) & Zumpus(z)) -> (-Lempus(y) & Toubpus(x,z) & Tumpus(x)))", "all x.(Whichet(x) & (-Lempus(x) | -Tompus(x)) | (-Lempus(x) & Tompus(x))))", "(-Lempus(Polly) & -Tompus(Polly) & Tumpus(Poly))", "all x y z.((Polly(x) & Lempus(y) & Zumpus(z)) -> (-Lempus(x) & -Tompus(x) & Tompus(x)))", "all x y z.((Polly(x) & Lempus(y) & Zumpus(z)) -> (-Lempus(x) & Toumpus(x)))", "all x y.((Polly(x) & Polly(y)) -> (-Lempus(x) & Zumpus(y) & Tumpus(y)))", "(all x y.((Polly(x) & Lempus(x)) | (Polly(y) & Zumpus(y)))) -> (Polly(y) & Tumpus(y)))", "exists x.(Polly(x) & -Lempus(x) & Polly(x) & Zumpus(x) & Tumpus(x))", "(all x.(Polly(x) -> -Lempus(x)) & (Polly(x) -> Zumpus(x)) & (Polly(x) -> Tumpus(x)))"]}
{"id": "prontoqa_train_706", "nl": "Every gorpus is a wumpus.", "fol": "all x. (gorpus(x) -> wumpus(x))", "prediction": ["all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Hush(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wampus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "every gorpus is a wumpus(x)", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Humpus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wump(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_707", "nl": "Rex is not a wumpus, Rex is a numpus, and Rex is a lorpus.", "fol": "(-wumpus(Rex) & numpus(Rex) & lorpus(Rex))", "prediction": ["(noWumpus(rex) & -Numpus(rex) & -Lorpus(rex))", "(all x y z.((Rex(x) & Wumpus(y)) -> -Wumpus(x)) & ((Rex(z) & Numpus(z))) -> Lorpus(x)))", "all x.(Rumpus(x) -> (-Wumpus(x) & -Numpus(x) & -Lorpus(x)))", "(all x y z.((Rex(x) & Wumpus(y) & Numpus(z)) -> -Wumpus(x)) & ((Rex(x) & Lorpus(x)) -> Lorpus(x)))", "(all x.(Rex(x) -> -Wumpus(x)) & all y.(Rex(y) -> Numpus(y)) & all z.(Rex(z) -> Lorpus(z))))", "(all x y z.((Rex(x) & Wumpus(y)) -> -Wumpus(x)) & ((Rex(x) & Numpus(y)) -> Lorpus(z)))", "(all x.(Rex(x) -> -Wumpus(x)) & all y.(Rex(y) -> Numpus(y)) & all z.(Lorpus(z) -> Mango(y)))", "(all x y z.((Rex(x) & Wumpus(y)) -> -Wumpus(x)) & ((Rex(z) & Numpus(z))) -> Lorpus(x)))", "all x y z.((Rex(x) & Wumpus(y) & Numpus(z)) -> (-Wumpus(x) & Numpus(x) & Lark(x)))", "all x y z.((Rex(x) & Numpus(y) & Lorpus(z)) -> (-Wumpus(x) & Numpus(y) & Loper(z)))", "all x y z.((Fish(x) & Wumpus(y) & Numpus(z)) -> (-Wumpus(x) & Numpus(z) & Stallion(z)))", "all x y z.((Rex(x) & Wumpus(y) & Numpus(z)) -> -Wumpus(x) & Loper(x))", "(all x.(Rex(x) -> -Wumpus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> Lorpus(x)))", "(all x) -> (-Wumpus(x) | Numpus(x) | Lorpus(x)))", "(all x y z.(Rex(x) -> -Wumpus(x)) & ((Rex(y) & Numpus(y)) | (Rex(z) & Lordpus(z)))))", "(all x.(Rex(x) -> -Wumpus(x)) & (Numpus(x) | Lorpus(x)))"]}
{"id": "prontoqa_train_708", "nl": "Jompuses are gorpuses.", "fol": "all x. (jompus(x) -> gorpus(x))", "prediction": ["all x.(Jompuse(x) -> Gorpuse(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompuse(x) -> Gorpus(x))", "all x.(Jompuse(x) -> Gorpuse(x))", "all x.(Jompus(x) -> Gorpuse(x))", "all x.(Jompuse(x) -> Gorpus(x))", "all x.(Jompuse(x) -> Gorpuse(x))", "all x.(Jompuse(x) -> Gorpuse(x))", "all x.(Jompuse(x) -> Gorpuse(x))", "all x.(Jompuse(x) -> Gorpuse(x))", "all x.(Jompuse(x) -> Gorpus(x))", "all x.(Jompuse(x) -> Gorpuse(x))", "all x y z w.((Jombuse(x) & Gorpus(y) & Bird(w)) -> IsOppressed(x,y,z))", "all x.(Jimpus(x) -> Gorpuse(x))", "all x.(Jompuse(x) -> Gorpuse(x))", "all x.(Jompus(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_709", "nl": "Sam is not a gorpus and Sam is a lorpus and Sam is a grimpus.", "fol": "(-gorpus(Sam) & lorpus(Sam) & grimpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Gorpus(x)) & (Lorpus(x) | Grimpus(x))))", "(all x.(Sam(x) -> -Gorpus(x)) & (Lorpus(x) & Grimpus(x)))", "all x ((Sam(x) & -Gorpus(x)) | (Lorpus(x) & Grimpus(x)))) -> -Corpus(x))", "(all x.(Sam(x) -> -Gorpus(x)) & (Sam(x) -> Lordpus(x)) & (Sam(x) -> Grimpus(x)))", "(-Gorpus(Sam) & Loper(Sam) & Gruppus(Sam))", "all x y.((Sam(x) & Gorpus(y)) -> (-Gorpus(x) & Lure(x) & Gruppus(x)))", "all x y z.((Sam(x) & Gorpus(y) & Lorpus(z)) -> (NoGorpus(x) & NoLorpus(x) & NoGrimpus(x)))", "(all x.(Sam(x) -> -Gorpus(x)) & (Lorpus(x) | Grimpus(x))))", "all x y z.((Sam(x) & Gorpus(y) & Lord(z)) -> (-Gorpus(x) & Lady(x) & Grimpus(x)))", "(all x.(Sam(x) -> (-Gorpus(x) | Llorpus(x)) | Grimpus(x)))", "all x y z.((Sam(x) & Gorpus(x) & Lorpus(y) & Grupus(z)) -> (-Gorpus(x) & -Lorpus(y) & -Grompus(z)))", "(all x.(Sam(x) -> -Gorpus(x)) & (Lorpus(x) & Gruppus(x)))", "all x y z.((Sam(x) & Gorpus(y) & Lorpus(z)) -> (-Gorpus(x) & Loper(x) & Grimpus(x)))", "all x.((Sam(x) & -Gorpus(x)) -> (Lorpus(x) & Grimpus(x)))", "(-Gorpus(Sam) & Lopus(Sam) & Grimpus(Sam))", "(all x.(Sam(x) -> -Gorpus(x)) & (Sam(x) -> Lorpus(x)) & (Sam(x) -> Grimpus(x)))"]}
{"id": "prontoqa_train_710", "nl": "Rex is not a rompus and Rex is a numpus and Rex is a jompus.", "fol": "(-rompus(Rex) & numpus(Rex) & jompus(Rex))", "prediction": ["(all x.(Rex(x) -> isn'tRompus(x)) & (Nompus(x) | Jompus(x))))", "(all x.(Rex(x) -> -Rompus(x)) & all y.(Nompus(y) -> Rex)) & all z.(Jumpus(z) -> Rex)))", "(-Rompus(rex) & Numpus(rex) & Jompus(rex))", "(all x y z.(Rompus(x) -> -Rompus(x)) & (Numpus(y) -> Jompus(z)))", "all x y.((Rex(x) & Rompus(x) & Numpus(y) & Jompus(y)) -> -Rompus(x))", "(exists x.(Rex(x) & -rompus(x)) & exists y.(Numpus(y) & exists z.(Jompus(z)))))", "all x y z.((Rex(x) & Rompus(y) & Numpus(z)) -> (-Rompus(x) & Naumpus(x) & Jompus(x)))", "all x y z.((Rompus(x) & Numpus(y) & Jompus(z)) -> (-Rompus(x) & -Numpus(y) & -Nompus(z)))", "(-Rompus(Rex) & Numpus(Rex) & Jompus(Rex))", "(all x.(Rompus(x) -> -Rompus(x)) & all y.(Nompus(y) -> -Jpompus(y))) & all z.(Jimpus(z) -> -Rompus(z)))", "(all x.(Rex(x) -> -Rompus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> Jompus(x)))", "all x y z.((Rex(x) & Rompus(y) & Numpus(z)) -> (-Rompus(x) & Numpus(y) & Jompus(z)))", "(all x.(Rex(x) -> -Rompus(x)) & all y.((Rex(y) & Numpus(y))) -> Jompus(y)))", "(all x y.((Rompus(x) & Nompus(y)) -> -Rompus(x)) & ((Numpus(y) & Jompus(y)) -> Jompus(y)))", "(all x.(Rex(x) -> -Rompus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> Jompus(x)))", ", (-Rompus(Rex) | Numpus(Rex) | Jompus(Rex)))"]}
{"id": "prontoqa_train_711", "nl": "Every lempus is a vumpus.", "fol": "all x. (lempus(x) -> vumpus(x))", "prediction": ["all x.(Lempus(x) -> Vumpus(x))", "all x.(Lempus(x) -> Vulmpus(x))", "all x.(Lupus(x) -> Vulpis(x))", "all x.(Lempus(x) -> Dumpus(x))", "all x.(Lempus(x) -> Vuze(x))", "all x.(Lempus(x) -> Vumpus(x))", "all x.(Lempus(x) -> Vumpus(x))", "all x.(Moss(x) -> Vumpus(x))", "all x.(Lempus(x) -> Vumpus(x))", "all x.(Lempus(x) -> Vuze(x))", "all x.(Lempus(x) -> Vumpus(x))", "all x.(Lempus(x) -> Vumpus(x))", "all x.(Lempus(x) -> Vumpus(x))", "all x.(Lempus(x) -> Vumpus(x))", "all x.(Lempus(x) -> Vampus(x))", "all x.(Limes(x) -> Vumpus(x))"]}
{"id": "prontoqa_train_712", "nl": "Alex is a yumpus and Alex is not a vumpus and Alex is a dumpus.", "fol": "(yumpus(Alex) & -vumpus(Alex) & dumpus(Alex))", "prediction": ["all x.(Alex(x) -> (Yumpus(x) & -Vumpus(x) & Dumpus(x)))", "(all x.(Alex(x) -> Yumpso)) & (-Alex(x) -> Vumpus)) & (-Alex(x) -> Dumpus(x)))", "all x y.((Alex(x) & Yumpus(x)) -> (-Vumpus(x) & Dumpus(y)))", "(-Vumpus(Alex) & Dumpus(Alex))", "(all x y z.(Alex(x) & Yumpus(x) & NoVuze (z)) & Dumpus(x)))", "(all x.(Alex(x) -> Yampus(x)) & (Alex(x) -> -Vumpus(x))) & (Alex(x) -> Dumpus(x)))", "all x y.((Alex(x) & Yupus(y)) -> (-Vumpus(y) & -Dumpus(x)))", "(all x.(Alex[x] -> Yumpus(x)) & (-(Alex(x) & Vumpus(x))) & ((Alex(x) & Dumpus(x)))))", "all x y z.(Yumpus(x) -> (Alex(y) & -Vumpus(x) & Dumpus(y)))", "(all x.(Alex(x) -> Yumpus(x)) & ((Alex(x) & -Vumpus(x))) & ((Alex(x) & Dumpus(x)))))", "all x.(Alex(x) -> (Yumpus(x) & -Vumpus(x) & Dumpus(x)))", "all x y.((Alex(x) & Yampus(x) & -Vumpus(y)) -> Dumpus(x))", "(all x y.(Yumpus(x) & Voompus(y)) -> -Vumpus(y)) & all z w.(Dumpus(z) -> Dumpus(w)))", "(all x.(Alex(x) & Yampus(x)) & (-Vumpus(x) & -Dumpus(x)))", "(all x.(Alex(x) -> Yampus(x)) & (-Alex(x) -> Vumpus(x)) & (-Alex(x) -> Dumpus(x)))", "(all x.(AlexAltom(x) -> Yumpus(x)) & (Valumpus(x) -> -Vumpus(x)) & (Dumpus(x) -> Dumpus(x)))"]}
{"id": "prontoqa_train_713", "nl": "Sally is not a grimpus, Sally is an impus, and Sally is a lempus.", "fol": "(-grimpus(Sally) & impus(Sally) & lempus(Sally))", "prediction": ["exists x.(Sally(x) & -Grimpus(x) & Imperium(x) & Lempus(x))", "(all x.(Sally(x) -> -Grimpus(x)) & (Sally(x) -> Issue(x)) & (Sally(x) -> Lempus(x)))", "(all x y z.(Mother(x) -> Sally(y) & Grossus(z)) & (Mother(y) -> Impossible(y)) & (Mother(z) -> Lempus(z)))", "(all x.(Sally(x) -> -Grimpus(x)) & all y.(Sally(y) -> Illegal(y))) & all z.(Sally(z) -> Lempus(z)))", "(all x.(Sally(x) -> -Grimpus(x)) & all y.(Sally(y) -> Issue(y)) & all z.(Sally(z) -> Lampus(z))))", "(all x y z.((Sally(x) & Grumpus(y) & Impossible(z)) -> -Grimpus(x)) & ((Sally(x) & Impossible(z)) -> Lempus(x)))", "(-Grimpus(Sally) & -Impossible(Sally)) & Lempus(Sally))", "(all x.(Sally(x) -> -Grimpus(x)) & all y.(Sally(y) -> Issue(y)) & all z.(Sally(z) -> Lempus(z))))", "(all x.(Sally(x) -> -Grimpus(x)) & (Sally(x) -> Exert(x)) & (Sally(x) -> Lempus(x)))", "(all x.(Sally(x) -> -Grimpus(x)) & (Sally(x) -> Impossible(x)) & (Sally(x) -> Lempus(x)))", "(all x y z.(Sally(x) -> (Furni\u0163a(x) & -Furni\u0163a(y))) & ((Sally(z) & Impossible(z)) | (Sally(z) & Lempus(z)))))", "(all x.(Sally(x) -> -Grimpus(x)) & (Sally(x) -> Imperemptive(x)) & (Sally(x) -> Lempus(x))))", "(all x.(Sally(x) -> - Grimpus(x)) & (Sally(x) -> Ivory(x)) & (Sally(x) -> Lempus(x)))", "(all x.(Sally(x) -> -Grimpus(x)) & all y.(Sally(y) -> Issue(y)) & all z.(Sally(z) -> Lempus(z))))", "(all x.(Sally(x) -> -Grimpus(x)) & (Impossible(x) | Lempus(x))))", "(all x.(Sally(x) -> -Smaller(x)) & (Sally(x) -> Impossible(x)) & (Sally(x) -> Lempus(x)))"]}
{"id": "prontoqa_train_714", "nl": "Lorpuses are dumpuses.", "fol": "all x. (lorpus(x) -> dumpus(x))", "prediction": ["all x.(Lorpus(x) -> Dumpuse(x))", "all x.(Lorpus(x) -> Dumpuse(x))", "all x.(Lorpus(x) -> Dumpuse(x))", "all x.(Lorpus(x) -> Dumpuse(x))", "all x.(Lorpus(x) -> Dumpuse(x))", "all x.(Lorpus(x) -> Dumpuse(x))", "all x.(Lorpus(x) -> Dumpuse(x))", "all x.(Lorpus(x) -> Dumpuse(x))", "all x.(Lerus(x) -> Dumpuse(x))", "all x.(Lorpus(x) -> Dumpuse(x))", "all x.(Lorpus(x) -> Dumpuse(x))", "all x.(Lorpus(x) -> Dumpus(x))", "all x.(Lorpus(x) -> Dumpuse(x))", "all x.(Lorpus(x) -> Dumpuse(x))", "all x.(Lorpus(x) -> Dumpuse(x))", "all x.(Lorpus(x) -> Dumpuse(x))"]}
{"id": "prontoqa_train_715", "nl": "Polly is a lempus, Polly is a numpus, and Polly is not a dumpus.", "fol": "(lempus(Polly) & numpus(Polly) & -dumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lempus(x)) & all y.(Polly(y) -> Numpus(y)) & all z.(Polly(z) -> -Dumpus(z)))", "all x.((Polly(x) & Lempus(x)) -> Numpus(x)) & -Dumpus(x))", "all x y z.((Polly(x) & Lempus(x) & Numpus(y) & Dumpus(z)) -> (Lempus(x) & Numpus(y) & -Dumpus(z)))", "all x y z.((Polly(x) & Lempus(x) & Numpus(y) & Dumpus(z)) -> (Lempus(x) & Numpus(y) & Polly(z) & -Dumpus(z)))", "(all x y z.((Polly(x) & Lempus(x)) -> Polly(y)) & ((Polly(z) & Numpus(z)) -> PollyDupus(z))))", "all x y z.((Polly(x) & Plumpus(y) & Numpus(z)) -> (Lempus(x) & Numpus(y) & -Dumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> Numpus(x)) & -Dumpsus(x)))", "all x.((Polly(x) & Lempus(x)) | (Nompus(x) & -Dupus(x))))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> Numpus(x)) & -Dumpus(x)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> Numpus(x)) & (Polly(x) -> -Dupe(x))))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> Numpus(x)) & (Polly(x) -> -Dumpus(x))))", "(all x.(Polly(x) -> Lempus(x)) & all y.(Polly(y) -> Numpus(y)) & all z.(Polly(z) -> -Dumpus(z))))", "all x y z.((Polly(x) & Lempus(x) & Numpus(y) & -Dumpus(z)) -> (Lempus(x) | Numpus(y) | Polly(z)))", "(all x y z.(Polly(x) -> Lempus(x)) & (Polly(y) -> Numpus(y)) & (Polly(z) -> -Dumpus(z))))", "(all x y z.(Polly(x) -> Lempus(x)) & (Polly(y) -> Numpus(y)) & (Polly(z) -> -Dumpus(z))))", "(all x y z.(Polly(x) -> Lempus(x)) & (Polly(y) -> Numpus(y)) & (Polly(z) -> -Dumpus(z))))"]}
{"id": "prontoqa_train_716", "nl": "Tumpuses are shumpuses.", "fol": "all x. (tumpus(x) -> shumpus(x))", "prediction": ["all x.(Tumpus(x) -> Shumpus(x))", "ALL x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpuse(x) -> Shumpuse(x))", "all x.(Tumpulus(x) -> Shumpuse(x))", "all x.(Tumpus(x) -> Shumpus(x))", "all x.(Tumpus(x) -> Shumpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "(Shumpus(tump) -> Shumpus(tump))", "all x.(Tumpus(x) -> Shumpus(x))", "all x.(Tumpus(x) -> Shumpus(x))", "all x.(Tumpus(x) -> Shumpus(x))", "all x.(Tumpus(x) -> Shumpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumulus(x) -> Shumpus(x))", "ALL TEASONS: Tumpuses(TM) -> Shumpuses(TM))", "all x.(Tumpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_717", "nl": "Sam is not a shumpus, Sam is a gorpus, and Sam is a yumpus.", "fol": "(-shumpus(Sam) & gorpus(Sam) & yumpus(Sam))", "prediction": ["all x.((Sam(x) & -Shumpus(x)) -> Gorpus(x)) & (Yumpus(x) -> Yumpus(x)))", "exists x.(Sam(x) & -Shumpus(x) & Gorpus(x) & Yampus(x))", "all x y z.((Sam(x) & Shumpus(y) & Gorpus(z)) -> (-Shumpus(x) & Gorpus(y) & Yumps(z)))", "(all x.(Sam(x) -> -Shumpus(x)) & (Gorpus(x) & Yampus(x)))", "all x y z.((Sam(x) & Shumpus(y) & Gorpus(z)) -> (-Shumpus(x) & Gorpus(y) & Yumpus(z)))", "(all x y z.(Sam(x) -> -Shumpus(x)) & ((Sam(y) & Gorpus(z))) | ((Sam(y) & Yumpus(z)))))", "(all x.(Sam(x) -> -Shumpus(x)) & (Gorpus(x) -> Samyumpus(x)))", "(all x y.((Sumpus(x) & Sam(y)) -> -Shumpus(x)) & ((Gorpus(y) & Sam(y)) -> Yumps(y)))", "(all x y z.(Shumpus(x) -> -Shumpus(x)) & (Gorpus(y) -> Rhytmus(z)))", "all x y z.((Sam(x) & Shumpus(y) & Gorpus(z)) -> (-Shumpus(x) | (Gorpus(z) & Yumpus(z))))", "all x y z.((Sam(x) & Shumpus(y) & Gorpus(z)) -> (-Shumpus(x) & Gorpus(x) & Yampus(x)))", "all x y z.((Sam(x) & Sam(y) & Sambo(z)) -> (-Shumpus(x) & -Gorpus(y) & -Yumpus(z)))", "(all x.(Sam(x) -> -Shumpus(x)) & all y.(Gorpus(y) & all z.(Yumpus(z)) -> NotHasShumpus(x))) & all w.(Yumpus(w) -> NotHasShumpus(y)))", "(all x.(Sam(x) -> -Shumpus(x)) & (Gorpus(x) & (Yumpus(x) | -Shumpus(x))))", "all x y z.((Sam(x) & Gorpus(y) & Yumpus(z)) -> (-Shumpus(x) & Gorpus(y) & Yumpus(z)))", "(-Shumpus((Sam) | Gorpus(Sam) | Yumpus(Sam)))"]}
{"id": "prontoqa_train_718", "nl": "Max is a brimpus, Max is not an impus, and Max is a wumpus.", "fol": "(brimpus(Max) & -impus(Max) & wumpus(Max))", "prediction": ["all x y z.((Max(x) & Brimpus(x) & -Izrael(y) & Wumpus(z)) -> (Brampus(x) & Wumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Wimpus(x)))", "(all x.((Max(x) & Brimpus(x)) -> -Impress(x)) & all y.((Max(y) & IsNotImpress(y)) -> Fumpus(y)))", "(all x.(Max(x) -> Brimpus(x)) & ((Max(x) & -Izpos(x)) | (-Max(x) & -Issue(x)))))", "(all x y z.((Max(x) & Brimpus(x)) -> (Brimpus(x) & -Impropieted(y)) & ((Max(z) & Wumpus(z)) -> Wumpus(z))))", "all x.(Max(x) -> (Brimpus(x) & -Imperfect(x) & Wumpus(x)))", "(all x y.((Max(x) & Brimpus(x)) -> -Exercer(y)) & ((Max(x) & -Implement(x)) -> Wumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Wumpus(x)))", "(all x y z.((Max(x) & Brimpus(y)) -> ((Max(z) & -Improvised(z))) | (-Max(z) & Improvised(z)))))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Wumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Wumpus(x)))", "(all x y z.((Max(x) & Brimpus(x)) -> (Brimpus(y) & Erzdequoie(z)) | (Exposer(z) -> -Imperial(z)))) + ((Max(x) & Wumpus(x)) -> Wormpus(x)))", "(All x.(Max(x) -> Brimpus(x)) & ((Max(x) -> -Imposition(x))) & ((Max(x) -> Wumpus(x))))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Wumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Imperial(x)) & (Max(x) -> Wumpus(x)))", "all x.((Max(x) & Brimpus(x)) -> (-Impossible(x)) & (Wumpus(x) -> Wumpus(x)))"]}
{"id": "prontoqa_train_719", "nl": "Every shumpus is a numpus.", "fol": "all x. (shumpus(x) -> numpus(x))", "prediction": ["all x.(Shumpus(x) -> Number(x))", "all x.(Shumpus(x) -> Numpus(x))", "all x.(Shumpus(x) -> Numpus(x))", "all x.(Shumpus(x) -> Numpus(x))", "all x.(Shumpus(x) -> Numpus(x))", "all x.(Shumpus(x) -> Numpus(x))", "all x.(Shumpus(x) -> Numpus(x))", "all x.(Shumpus(x) -> Numpus(x))", "all x.(Shumpus(x) -> Numpus(x))", "all x.(Shumpus(x) -> Numpus(x))", "all x.(Shumpus(x) -> Numpus(x))", "all x.(Shumpus(x) -> Number(x))", "all x.(Shumpus(x) -> Numpus(x))", "all x.(Shumpus(x) -> Numpus(x))", "all x.(Shumpus(x) -> Numpus(x))", "all x.(Shumpus(x) -> Numpus(x))"]}
{"id": "prontoqa_train_720", "nl": "Fae is an impus and Fae is a yumpus and Fae is not a numpus.", "fol": "(impus(Fae) & yumpus(Fae) & -numpus(Fae))", "prediction": ["exists x y.(Fae(x) & Impossible(x) & Yumpsum(y) & -Numpus(y))", "(all x.(Fae(x) -> Iliras(x)) & all y.(Fae(y) -> Yumpus(y)) & all z.(Fae(z) -> -Numus(z))))", "(All x.(Fae(x) -> Impossible(x)) & (Fae(x) -> Yumpis(x)) & (Fae(x) -> -Numpus(x)))", "(all x.(Fae(x) -> Impossible(x)) & (Fae(x) -> Yupsum(x)) & (Fae(x) -> -Numpus(x)))", "(all x.(Fae(x) -> IsImpossible(x)) & (Fae(x) -> Yumpsum(x)) & -numpus(x)))", "(all x y.((Fae(x) & IsIsReposed(x)) -> (Official(y) & IsYumpus(y)) & ((Fae(x) & -IsNumpus(y)) -> NotForecast(x,y)))", "(all x.(Fae(x) -> IsImpossible(x)) & (Fae(x) -> Yumpus(x)) & -Numpus(x)))", "(all x y z.((Fae(x) & IsIs(x)) -> IsFae(x)) & ((Fae(y) & Yumpus(y)) -> -Numpus(z)))", "(all x.(Fae(x) -> IsImpossible(x)) & (Fae(x) -> Yumpsum(x)) & -Numpus(x)))", "all x y.((Fae(x) & Fae(y)) -> (Impressed(x) & Yumpa(y) & -Numpus(y)))", "(all x.(Fae(x) -> Impeccable(x)) & all y.(Fae(y) -> Yumpus(y))) & all z.(Fae(z) -> -Numpus(z))))", "all x.(Fae(x) -> (Issue(x) & Yampus(x) & -Nompus(x)))", "all x.(Fae(x) -> (Impossible(x) & Yampus(x) & -Numpus(x)))", "all x y z.((Fae(x) & Yampus(y)) -> (Impossible(x) | Yumpus(y) | -Nompus(z)))", "all x y.((Fae(x) & Fae(y)) -> (IsProvoked(x) & IsYumpus(y) & -IsNumpus(y)))", "exists x y z.(Fae(x) & Imposer(x) & Fae(y) & Yumpus(y) & Fae(z) & -Numpus(z))"]}
{"id": "prontoqa_train_721", "nl": "Max is a sterpus, Max is a jompus, and Max is not a grimpus.", "fol": "(sterpus(Max) & jompus(Max) & -grimpus(Max))", "prediction": ["(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> Jompus(y)) & all z.(Max(z) -> -Grimpus(z))))", "(all x y z.((Max(x) & Sterosup(y)) -> Sterosup(z)) & ((Max(x) & Jompus(z)) -> -Grimpus(x)))", "all x.(Max(x) -> (Sterpus(x) & Jompus(x) & -Grimpus(x)))", "all x y z.((Max(x) & Stromp(y) & Jompus(z)) -> (Starpus(x) & Jompus(y) & -Grimpus(z)))", "all x y.((Max(x) & Sterpus(x) & Jompus(y)) -> -Grimpus(x))", "(all x.(Max(x)) -> Sterpus(x)) & all y.(Max(y) -> Jompus(y)) & all z.(Max(z) -> -Grimpus(z))))", "(all x.(Max(x) -> Sterus(x)) & all y.(Max(y) -> Jompus(y)) & all z.(Max(z) -> -Grimpus(z))))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> Jompus(x)) & -Smoker(x)))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> Jompus(x)) & (Max(x) -> -Grimpus(x)))", "(all x y z.((Max(x) & Sterpus(x)) -> (Has(x,y) & Has(x,z))) & ((Max(x) & Joint(z)) -> -Grimpus(z))))", "all x y.((Max(x) & Stegrep(x) & Jompus(y) & -Grimpus(x)) -> (Estrus(x) & Hompus(y)))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> Jompus(x)) & (Max(x) -> -Grimpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> Jompus(x)) & (Max(x) -> -Grimpus(x)))", "(all x y z.(Max(x) -> Sterpus(y)) & (Max(z) -> Jompus(z)) & (Max(x,z) -> -Grimpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> Jompus(x)) & (Max(x) -> -Grimpus(x)))", "all x.(Max(x) -> ((HasSterepus(x) & HasJimpus(x)) & -HasGrimpus(x)))"]}
{"id": "prontoqa_train_722", "nl": "Sam is not a brimpus, Sam is a lempus, and Sam is a grimpus.", "fol": "(-brimpus(Sam) & lempus(Sam) & grimpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Brimpus(x)) & (Lempus(x) & Grimpus(x)))", "(all x y z.(Grumpus(x) -> -Crumpus(x)) & (Lempus(y) -> Lempus(y)) & (Grimpus(z) -> Grimpus(z)))", "all x y.((Sam(x) & Brimpus(y)) -> (-Brimpus(x) | Lempus(y) | Grimpus(y)))", "all x y z.((Sam(x) & Brimpus(y) & Lempus(z)) -> (-brimpus(x) & Lempus(x) & Grimpus(x)))", "all x.(Sam(x) -> (IsNotBrumpus(x) & IsLempus(x) & IsGrimpus(x)))", "all x y z.((Sam(x) & Brimpus(y) & Lempus(z)) -> (NoBrimpus(x) & NoLimpus(x) & NoGrampus(y)))", "(all x.(Sam) -> -Brimpus(x)) & all y.(Sam(y) -> Lempus(y)) & all z.(Sam(z) -> Grimpus(z))))", "all x.((Sam(x) & -Brimpus(x)) & (Lempus(x) | Grimpus(x))) -> -Brimpus(x))", "(all x y.((SameAttribution(x) & Brimpus(y)) -> -Brimpus(x)) & ((SameAttribution(x) & Lempus(y)) -> Grimpus(x)))", "all x.(Sam(x) -> (-Burumpus(x) & Lempus(x) & Grimpus(x)))", "all x y z.((Sam(x) & Brimpus(y) & Lempus(z)) -> (-Sam(x) & Grimpus(x)))", "all x.(Sam(x) -> (-Brumpus(x) & Lempus(x) & Grimpus(x)))", "all x y z.((Sam(x) & Brimpus(y) & Lempus(z)) -> (-Sam(x) & Lempus(x) & Grimpus(y)))", "(all x.(Sam(x) -> -Brimpus(x)) & all y.(Limpus(y) -> Stempus(y))) & all z.(Sam(z) -> Grimpus(z)))", "all x y z.((Sam(x) & Brimpus(y) & Lempus(z)) -> (-Bilmpus(x) & Lempus(y) & Grimpus(z)))", "(all x.(Sam(x) -> -Brimpus(x)) & all y.(Sam(y) -> Lempus(y)) & all z.(Sam(z) -> Grimpus(z))))"]}
{"id": "prontoqa_train_723", "nl": "Wumpuses are lorpuses.", "fol": "all x. (wumpus(x) -> lorpus(x))", "prediction": ["all x.(Wumpus(x) -> Lorpuse(x))", "all x.(Wumpus(x) -> Lorpus(x))", "all x.(Wumpus(x) -> Loomise(x))", "all x.(Wumpuse(x) -> (Lorpus(x) & SuppressedBy(x,y)))", "all x.(Wumpus(x) -> Termuse(x))", "all x.(Wumpuse(x) -> Llorpus(x))", "all x.(Wumpuse(x) -> Lorpus(x))", "all x.(Wumpus(x) -> Lorpus(x))", "all x.(Wumpus(x) -> Lorpus(x))", "all x.(Wumpuse(x) -> (Lorpus(x) & Molecule(x)))", "all x.(Wumpus(x) -> Lorpus(x))", "all x.(Wumpus(x) -> Loomise(x))", "all x.(Wumpuse(x) -> Lorpus(x))", "all x.(Wumpus(x) -> Loompus(x))", "all x.(Wumpus(x) -> Lorpus(x))", "all x.(Wumpus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_724", "nl": "Sally is not a lorpus, Sally is a shumpus, and Sally is a numpus.", "fol": "(-lorpus(Sally) & shumpus(Sally) & numpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Lorpus(x)) & all y.(Shumpus(y) & -Sympus(y))) & all z.(Numpus(z) -> -Sally(x)))", "(all x.(Sally(x) -> -Lorpus(x)) & all y.(Shumpus(y) -> Number(y)))", "(all x y.((Sally(x) & -Lorpus(x)) -> Snompus(x)) & ((Sally(y) | Snompus(y))) -> Numpus(y)))", "(all x y.(Lorpus(x) -> -Lorpus(x)) & (Shumpus(y) -> Humpus(y)) & (Numerus(y) -> -Lorpus(y)))", "(all x.(Sally(x) -> NoLorpus(x)) & (Sally(x) -> Shumpus(x)) & (Sally(x) -> Numpus(x)))", "(all x.(Sally(x) -> -Lorpus(x)) & all y.(Shumpus(y) & Numpus(y))))", "(all x.(Sally(x) -> -Lorpus(x)) & all y.(Shumpus(y) & -Lorpus(y))) & all z.(Shumpus(z) -> Numpus(z))))", "(all x:(Sally(x) & -Lorpus(x)) & all y.(Shumpus(y) & -Numpus(x))) -> Numpus(y))", "all x y z.((Sally) & Humpus(y) & Numpus(z)) -> (-Lorpus(x) & -Shumpus(y) & -Shumpus(z)))", "(all x y.((Sally(x) & -Lorpus(x)) -> Numpus(y)) & ((Sally(x) & Humpus(y)) -> Numpus(y)))", "(all x.(Sally(x) -> -Lorpus(x)) & all y.(Shumpus(y) & Numpus(y)))", "(all x.(Sally(x) -> -Lorpus(x)) & (Sally(x) -> Humpus(x)) & (Sally(x) -> Numpus(x)))", "(all x y z.((Sally(x) & Lorpus(y)) -> -Lorpus(x)) & ((Sally(z) & Humpus(z))) -> Numpus(z)))", "(all x.(Sally(x) -> -Lorpus(x)) & (Shumpus(x) & Numpus(x))))", "All x y z.((Sally(x) & Lorpus(y) & Humpus(z)) -> (-Lorpus(x) & Summe(x) & Numpus(x)))", "(all x.(Sally(x) -> -Lorpus(x)) | All y.(Shumpus(y) -> Numpus(y)))"]}
{"id": "prontoqa_train_725", "nl": "Brimpuses are shumpuses.", "fol": "all x. (brimpus(x) -> shumpus(x))", "prediction": ["all x.(Brimpus(x) -> Shumpus(x))", "all x.(Brompus(x) -> Shumpus(x))", "(Shumpus(brimpus) & Shumpus(brimpus))", "all x.(Brimpus(x) -> Shumpus(x))", "all x.(Brumpus(x) -> Shumpus(x))", "all x.(Brompus(x) -> Shumpus(x))", "all x.(Brumpus(x) -> Sapus(x))", "all x.(Brompus(x) -> Shumpus(x))", "all x.(Brompus(x) -> Shumpus(x))", "all x.(Brimpus(x) -> Shumpus(x))", "all x.(Brompus(x) -> Shumpus(x))", "all x.(Brimpus(x) -> Shumpus(x))", "all x.(BrimpusShumpus(x) -> Spout(x))", "all x.(Brompus(x) -> Shumpus(x))", "all x.(Brimpus(x) -> Shumpus(x))", "all x.(Brompus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_726", "nl": "Sally is not a shumpus and Sally is a tumpus and Sally is a zumpus.", "fol": "(-shumpus(Sally) & tumpus(Sally) & zumpus(Sally))", "prediction": ["exists x.(Sally(x) & -Shumpus(x) & Tumpus(x) & Zumpus(x))", "(all x.(Sally(x) -> -Shumpus(x)) & (Tumpus(x) & Zumpus(x)))", "all x y z.((Sally(x) & Humpus(y) & Tumpus(z)) -> (-Shumpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Sally(x) & -Shumpus(x)) -> (Tumpus(x) & Zumpus(x)))", "(-Shumpus(Sally) & Tumpus(Sally) & Zumpus(Sally))", "(-Shumpus(Sally) & Tumpus(Sally) & Zumpus(Sally))", "(all x.(Sally(x) -> -Shumpus(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> Zumpus(x)))", "(all x.(Sally(x) -> -Shumpus(x)) & all y.((Sally(y) & Tumpus(y)) -> Zumpus(y)))", "(exists x.(Sally(x) & -Shumpus(x)) & exists y.(Tumpus(y) & exists z.(Zumpus(z))) & Exists w.(Tumpus(w) & Does(x,y))))", "all x.(Sally(x) -> (-Shumpus(x) & -Tumpus(x) & -Zumpus(x)))", "all x y.((Sally(x) & Shumpus(y)) -> (-Shumpus(x) & Tumpus(y) & Zumpus(y)))", "all x.((Sally(x) & -Shumpus(x)) -> (Tumpus(x) & Zumpus(x)))", "((Sally) & -Shumpus()) | (Sally((Shumpus) & Tumpus((Sumpus))) | (Sally(Sumpus) & Zumpus(Sumpus))))", "all x.(Sally(x) -> (-Shumpus(x) & -Tumpus(x) & -Zumpus(x)))", "(all x.(Sally(x) & -Shumpus(x)) | (Tumpus(x) & Zumpus(x))))", "all x y.((Sally(x) & -Shumpus(x)) -> (Tumpus(y) & Zumpus(y)))"]}
{"id": "prontoqa_train_727", "nl": "Sam is a lempus, Sam is a vumpus, and Sam is not a rompus.", "fol": "(lempus(Sam) & vumpus(Sam) & -rompus(Sam))", "prediction": ["(all x.(Sam(x) -> Lempus(x)) & all y.(Sam(y) -> Vumpus(y)) & all z.(Sam(z) -> -Rompus(z))))", "(all x.(Sam) -> Lempus(x)) & all y.(Sam(y) -> Vimpus(y)) & all z.(Sam(z) -> Rompus(z))))", "all x y z.((Sam(x) & Lempus(x) & Vumpus(y) & -Rompus(z)) -> (Lempus(x) | Vumpus(y) & -Rompus(z)))", "(Lenpsi,e.(Sam) | Vumpus,e.(Sam))) & -Rrompus(sam))", "(all x.(Sam(x) -> Lempus(x)) & exists y.(Sam(y) & Vumpus(y))) & exists z.(Sam(z) & -Rompus(z))))", "all x y z.((Sam(x) & Lempus(y) & Vumpus(z)) -> (Alias(x) & Lumpus(y) & -Rompus(z)))", "(all x y z.(Lambus(x) -> Sam(x)) & (Vumpus(y) -> Sam(z)) & (Rompus(z) | Lempus(x) & Norompus(z))))", "all x y z.((Sam(x) & Lempus(x) & Vumpus(y) & -Rompus(z)) -> (Lempus(x) & V\u0103mpus(y) & -Lrompus(z)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Sam(y) -> Vinpus(y)) & all z.(Sam(z) -> -Rompus(z))))", "(all x.(Sam) -> Lempus(x)) & (Sam(x) -> Vumpus(x)) & -Rompus(x)))", "(all x y z.((Sam(x) & Lempus(x)) -> Sapienza(x)) & ((Sam(y) & Vumpus(y)) -> Rompus(z))))", "all x y z.((Sam(x) & Lempus(x) & Vumpus(y) & Rrompus(z)) -> -Lempus(x))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> Voompus(x)) & (Sam(x) -> -Rompus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Sam(y) -> Vumpus(y))) & all z.(Sam(z) -> -Rompus(z))))", "all x y z.((Sam(x) & Lempus(x) & Vumpus(y) & -Rompus(z)) -> (Limpus(x) | Umpus(y) & -Umpus(z)))", "all x y z.((Sam(x) & Lempus(x) & Kumpus(y) & Lompus(z)) -> (Lempus(x) & -Vimpus(y) & -Rompus(z)))"]}
{"id": "prontoqa_train_728", "nl": "Every numpus is a dumpus.", "fol": "all x. (numpus(x) -> dumpus(x))", "prediction": ["all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Nompus(x) -> Dumpus(x))", "all x.(Numerus(x) -> Dumpus(x))", "all x.(Nompus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Nompus(x) -> Dumpus(x))", "all x.(Nompus(x) -> Dumpus(x))", "all x.(Nompus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_729", "nl": "Alex is a yumpus, Alex is a lorpus, and Alex is not a dumpus.", "fol": "(yumpus(Alex) & lorpus(Alex) & -dumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Yumpus(y) & Lorpus(z)) -> (Yumpus(x) & -Dumpus(x)))", "(all x.(Alex(x) -> Yumpus(x)) & (Alex(x) -> Lorpus(x)) & (Alex(x) -> -Dumpus(x))))", "(all x.(Alex(x) -> Yampus(x)) & (Alex(x) -> Lorpus(x)) & -Dumpus(x)))", "all x y z.((Alex(x) & Yumpus(y) & Lorpus(z)) -> (Yumpus(x) & -Dumpus(x)))", "(all x.(Alex(x) -> Yumpus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> -Dumpus(z))))", "(all x.(Alex(x) -> Yampus(x)) & all y.(Alex(y) -> Lorpus(y))) & all z.(Alex(z) -> -Dumpus(z))))", "(all x.(Alex(x) -> Yumpus(x)) & (Alex(x) -> Lorpus(x)) & -Dumpus(x)))", "all x y.((Alex(x) & Yumpus(x)) -> (Lorpus(x) & -Dumpus(y)))", "(all x.(Alex(x) -> Yumpus(x)) & (Alex(x) -> Lorpus(x)) & (Alex(x) -> -Dumpus(x)))", "all x y z.((Alex(x) & Yumpson(y) & Lorpus(z) & NoDumps(t)) -> (Yumpus(x) & Loomis(x) & -Dumpus(x)))", "(all x.(Alex(x) -> Yampus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> -Dumpus(z))))", "(all x.(Alex(x) -> Yupus(x)) & (Alex(x) -> Lorpus(x)) & (Alex(x) -> -Dumpus(x)))", "(all x.(Alex(x) -> Yumba(x)) & (Alex(x) -> Lordpus(x)) & (Alex(x) -> -Dumpus(x)))", "(all x.(Alexa(x) -> Yampus(x)) & all y.(Alexa(y) -> Lorpus(y)) & all z.(Alexa(z) -> -Dumpus(z))))", "(all x.(Alex(x) -> Yumpus(x)) & all y.(Alex(y) -> Lorpus(y)) & -Dumpus(z)))", "(all x.(Alexa(x) -> Yumpus(x)) & (Alexa(x) -> Lorpus(x)) & (Alexa(x) -> -Dumpsus(x)))"]}
{"id": "prontoqa_train_730", "nl": "Each jompus is a lorpus.", "fol": "all x. (jompus(x) -> lorpus(x))", "prediction": ["all x.(Jompus(x) -> Lorpus(x))", "all x.(Jompus(x) -> Lorpus(x))", "all x.(Jompus(x) -> Lorpus(x))", "all x.(Jimpus(x) -> Lorpus(x))", "all x.(Jimpus(x) -> Lorpus(x))", "all x.(Jompus(x) -> Lorpus(x))", "all x.(Jompus(x) -> lorpus(x))", "all x.(Jimpus(x) -> Lompus(x))", "all x.(Jompus(x) -> Lorpus(x))", "all x.(Jimpus(x) -> Lorpus(x))", "all x.(Jumpus(x) -> Lorpus(x))", "all x.(Jompus(x) -> Lordpus(x))", "all x.(Jompus(x) -> Lorpus(x))", "all x.(Jompus(x) -> Lord(x))", "all x.(Jompus(x) -> Loompus(x))", "all x.(Jompus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_731", "nl": "Fae is a sterpus, Fae is an impus, and Fae is not a lorpus.", "fol": "(sterpus(Fae) & impus(Fae) & -lorpus(Fae))", "prediction": ["all x y z.((Fae(x) & Sterpus(x) & Ilias(y) & -Lorpus(z)) -> (Estrpus(x) & Impossible(y) & -Estrpus(z)))", "all x y z.((Fae(x) & Sterpus(y) & Is(z) & Throat(z)) -> (Fae (x) & Imperator(x) & -Lorpus(x)))", "(Sternpus(Fae) & Isolated(Fae) & -Lorpus(Fae))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Issue(x)) & (Fae(x) -> -Lorpus(x))))", "(all x.(Fae(x) -> Sterpus(x)) & all y.(Fae(y) -> Issue(y)) & all z.(Fae(z) -> -Lorpus(z))))", "(all x.(Fea(x) -> Sterpus(x)) & (Fea(x) -> Implicator(x)) & (Fea(x) -> -Lorpus(x))))", "exists x.(Fae(x) & Sterpus(x) & Is(x) & -Lorpus(x))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Imperium(x)) & -Lorpus(x)))", "(all x y z.((Fae(x) & Sterpus(y)) -> Sterpus(x)) & ((Fae(z) & Issue(z)) -> NotLorpus(z)))", "(all x.(Fae(x) -> Sterus(x)) & (Fae(x) -> Impossible(x)) & (Fae(x) -> -Lorpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & all y.(Fae(y) -> Issue(y)) & all z.(Fae(z) -> -Lorpus(z))))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Impermissed(x)) & (Fae(x) -> -Lorpus(x))))", "(all x y z.((Fae(x) & Sterpus(y) & Strict(z)) -> (Impossible(x,z) | -Lorpus(x))))", "(All x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Impermissible(x)) & -Lorpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Illegal(x)) & -Lorpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Issue(x)) & (Fae(x) -> -Lorpus(x)))"]}
{"id": "prontoqa_train_732", "nl": "Every numpus is a jompus.", "fol": "all x. (numpus(x) -> jompus(x))", "prediction": ["all x.(Nompus(x) -> Jompus(x))", "all x.(Numpus(x) -> Jompus(x))", "all x.(Nompus(x) -> Jompus(x))", "all x.(Nompus(x) -> Jompus(x))", "all x.(Nompus(x) -> Jompus(x))", "all x.(Nompus(x) -> Jompus(x))", "all x.(Numpus(x) -> Jompus(x))", "all x.(Numpus(x) -> Jompus(x))", "all x.(Numerus(x) -> Jompus(x))", "all x.(Nompus(x) -> Jompus(x))", "all x.(Nompus(x) -> Jompus(x))", "all x.(Nompus(x) -> Jompus(x))", "all x.(Nompus(x) -> Jompus(x))", "all x.(Numpus(x) -> Jompus(x))", "all x.(Nompus(x) -> Jompus(x))", "all x.(Nompus(x) -> Jompus(x))"]}
{"id": "prontoqa_train_733", "nl": "Sally is a zumpus, Sally is not a jompus, and Sally is a yumpus.", "fol": "(zumpus(Sally) & -jompus(Sally) & yumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Zumpus(x)) & (-Jompus(x) & (Yumpus(x) | Sally(x)))))", "(all x.(Sally(x) -> Zumpus(x)) & all y.(Sally(y) -> -Jompus(y)) & all z.(Sally(z) -> Yumpus(z)))", "(all x y z.((Sally(x) & Zumpus(y)) -> Hopper(x)) & ((Sally(z) & -Hampus(z)) | (-Jompus(z) & Hopper(z)))))", "(all x.(Sally(x) -> Zumpus(x)) & (Sally(x) -> -Jompus(x)) & (Sally(x) -> Yumpus(x)))", "(all x,y z.(Sally(x) -> Zumpus(x)) & (Sally(y) -> -Jompus(y)) & (Sally(z) -> Yumpus(z)))", "(all x.((Sally(x) & Zumpus(x)) -> -Jompus(x)) & all y.((Sally(y) & Yumpus(y)) -> Puffy(y)))", "exists x.(Sally(x) & Zumpus(x) & -Jumpus(x) & Yumpus(x))", "(all x y z.(Sally(x) -> Zumpus(x)) & ((Sally(y) & -Jompus(y))) | (-jompus(y) & -y,z))))", "(all x.(Sally(x) -> Zumpus(x)) & (Sally(x) -> -Jompus(x)) & (Sally(x) -> Yumpus(x)))", "all x.(Sally(x) -> (Tompus(x) & -Jompus(x) & Yumpus(x)))", "(all x.(Sally(x) -> Zumpus(x)) & (-Jimpus(x) & Yumpus(x)))", "(all x.(Sally(x) -> Zumpus(x)) & (Sally(x) -> -Jompus(x)) & (Sally(x) -> Yumpus(x)))", "(all x.(Sally(x) -> Zumpus(x)) & (-Jompus(x) & (Yumpus(x) -> Tolks(x))))", "all x y z.((Sally(x) & Zumpus(y) & Jompus(z)) -> (-Jumpus(x) & Yumpus(x)))", "(all x.(Sally(x) -> Zumpus(x)) & (-Sally(x) -> Jompus(x)) & (-Sally(x) -> Yumpe(x))))", "(all x y z.((Sally(x) & Zumpus(x)) -> Toad(x)) & ((Sally(y) & -Jompus(y)) -> Yumpus(z)))"]}
{"id": "prontoqa_train_734", "nl": "Stella is a tumpus, Stella is not a zumpus, and Stella is an impus.", "fol": "(tumpus(Stella) & -zumpus(Stella) & impus(Stella))", "prediction": ["(all x.(Tumpus(x) -> Stella(x)) & (-Tompus(x) -> Stella(x)) & (Impossible(x) -> Stella(x)))", "(all x.(Tumpus(x) -> Stella(x)) & (Zumpus(x) | Obscis(x))))", "(all x.(Tumpus(x) -> Stella)) & (Zumpus(x) -> Stella(x))) & (IsDox(x) -> Stella)))", "(all x.(Tumpus(x) -> StellaHams(x)) & ((Zumpus(x) & StellaImprovement(x)) -> StellaHams(x)))", "all x y z.((Tumpus(x) & Stella(y) & Impossible(z)) -> (Tumpus(y) & -Zumpus(z) & Impossible(y)))", "(all x y z.((Tumpus(x) & Stella(y) & Zumpus(z)) -> Isolation(y)))", "(exists x.(Tumpus(x) & Est.(Zumpus(x))) & exists y.(Imperator(y) & Est.(Tumpus(y))))", "(all x y z.((Tumpus(x) & Slab(y) & Toumpus(z)) -> exists w.((Tumpus(w) & Slab(w)) & Slab(w) & Impossible(w))))", "(all x.(Tumpus(x) -> Stella(x)) & all y.(NotTompus(y) -> Stella(y))) & all z.(Illegal(z) -> Stella(z)))", "(all x.(Tumpus(x) -> Stella(x)) & (Lumpus(x) -> -Zumpus(x)) & (Illegal(x) -> Stella(x)))", "(all x.(Tumpus(x) -> Stella(x)) & (-Tompus(x) -> Stella(x)) & (-Tompus(x) -> Stella(x)))", "(all x.(Stella(x) -> Tumpus(x)) & (Stella(x) -> -Topsy(x)) & (Stella(x) -> Impossible(x)))", "all x y z.((Stella(x) & Tumpus(y) & Tosh (z)) -> (Tumpus(x) | -Tosh(x) & Issue(x)))", "(all x.(Tumpus(x) -> Stella(x)) & (NotTompus(x) -> Stella(x))) & (Pemploss(x) -> Stella(x)))", "(all x y z.((Tumpus(x) & -Tompus(y)) -> Stella(z)) & ((Tumpus(z) & -Tompus(z)) -> Stella(z)))", "(all x y z.(Delta(x) -> Tumpus(x)) & (Belta(y) -> -Tompus(y))) & (Delta(z) -> Islap/Impossible(z)))"]}
{"id": "prontoqa_train_735", "nl": "Shumpuses are brimpuses.", "fol": "all x. (shumpus(x) -> brimpus(x))", "prediction": ["all x.(Shumpuse(x) -> Brimpuse(x))", "all x.(Shumpuse(x) -> Brimpuse(x))", "all x.(Shuppe(x) -> Brimpus(x))", "all x.(Shumpuse(x) -> Brimpuse(x))", "all x.(Shuppuse(x) -> Brimpus(x))", "all x.(Shupuse(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpuse(x))", "all x.(Shampoo(x) -> Brimbus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shuckuse(x) -> Brimbus(x))", "all x.(Shumpuse(x) -> Brimpuse(x))", "all x.(Shumpus(x) -> Brimpuse(x))", "all x.(Shumpus(x) -> Brimpuse(x))", "all x.(Shampoo(x) -> Brimbus(x))", "all x.(Smuffuse(x) -> Brimper(x))", "all x.(Shumpuse(x) -> Brimpuse(x))"]}
{"id": "prontoqa_train_736", "nl": "Max is a gorpus, Max is not a brimpus, and Max is a tumpus.", "fol": "(gorpus(Max) & -brimpus(Max) & tumpus(Max))", "prediction": ["(all x y z.((Max(x) & Gorpus(x)) -> Gorpus(x)) & ((Max(y) & -Brimpus(y)) -> Tumpus(z)))", "(all x.(Max(x) -> Gorpus(x)) & all y.(Max(y) -> -Brimpus(y))) & all z.(Max(z) -> Tumpus(z)))", "(all x.(Max(x) -> Gorpus(x)) & (Max(x) -> -Brumpus(x)) & (Max(x) -> Tumpus(x)))", "(all x y z.((Max(x) & Gorpus(y)) -> (Max(z) & -Brimpus(z))) & ((Max(x) & Humpus(x)) -> (MustBeTumpus(x))))", "(all x.(Max(x) -> Gorpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Tumpus(x))))", "(all x.(Max(x) -> Gorpus(x)) & all y.(Max(y) -> -Brumpus(y)) & all z.(Max(z) -> Tumpus(z))))", "(Gorpus(Max) & -Brimpus(Max) & Tumpus(Max))", "(all x.(Max.(Max) -> Gorpus(x)) & (Max(Max) -> -Brimpus(x)) & (Max(Max) -> Tumpus(x)))", "(all x.(Max(x) -> Chorpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Tumpus(x)))", "all x y z.((Max(x) & Gorpus(y) & Brimpus(z)) -> (-Brimpus(x) & Tumpus(x)))", "(all x.(Max(x) -> Gorpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Tumpus(x))))", "(all x.(Max(x) -> Gorpus(x)) & ((Max(x) & NoBrimpus(x))) | (Max(x) & Tumpus(x))))", "(All x y z.((Max(x) & Gorpus(x)) -> Gorpus(x)) & ((Max(y) & Numpus(y)) -> Tumulus(z)))", "all x y z.((Max(x) & Brompus(y) & Tumpus(z)) -> (Gorpus(x) | -Brimpus(y) | Tumpus(z)))", "(Gorpus(Max) | -Brimpus(Max) | Tumpus(Max)))", "(all x.(Max(x) -> Gorpus(x)) & all y.(Max(y) -> -Brumpus(y)) & all z.(Max(z) -> Tumpus(z))))"]}
{"id": "prontoqa_train_737", "nl": "Each zumpus is a shumpus.", "fol": "all x. (zumpus(x) -> shumpus(x))", "prediction": ["all x.(Tompus(x) -> Humpus(x))", "all x.(Tompus(x) -> Humpus(x))", "all x.(Tompus(x) -> Humpus(x))", "all x.(Tompus(x) -> Humpus(x))", "all x.(Tompus(x) -> Humpus(x))", "all x.(Tomma(x) -> Husmu (tumpus))", "all x.(Tompus(x) -> Humpus(x))", "all x.(Tompus(x) -> Shumpu(x))", "all x.(Zumpus(x) -> Shumpus(x))", "all x.(Zumpus(x) -> Shumpus(x))", "all x.(Tommy(x) -> Humpus(x))", "all x.(Zumpus(x) -> Shumpus(x))", "all x.(Zumpus(x) -> Humpus(x))", "all x.(Tompus(x) -> Shumpus(x))", "all x.(Tompus(x) -> Humpus(x))", "all x.(Tompus(x) -> Humpus(x))"]}
{"id": "prontoqa_train_738", "nl": "Max is a brimpus, Max is a lorpus, and Max is not a shumpus.", "fol": "(brimpus(Max) & lorpus(Max) & -shumpus(Max))", "prediction": ["all x y z.((Max(x) & Brimpus(x) & Lorpus(y) & -Shumpus(z)) -> (Between(x,y,z) & Brempus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> Lorpus(x)) & -Max(x)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> Lorpus(x)) & -Shumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> Lorpus(x)) & -Max(x) -> Humpus(x)))", "(all xp.(Max(x) -> Brimpus(x)) & all y.(Max(y) -> Lopsu(y)) & all z.(Max(z) -> -Shumpus(z))))", "(all x.(Max(x)) -> Brimpus(x)) & all y.(Max(y) -> Lorpus(y)) & -Shumpus(y)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> Lorpus(x)) & -Shumpus(x)))", "(all x y z.(Max(x) -> (Brumpus(x) & Brompus(y))) & ((Max(z) & -Shumpus(z))) -> (Lorpus(z))))", "all x y z.((Max(x) & Biological(y) & Lorpus(z)) -> (Brimpus(x) | (Lorpus(z) & -Shumpus(z)))))", "(all x.(Max(x) -> Brimpus(x)) & all y.(Max(y) -> Throat(y))) & (Max(y) -> Lorpus(y)) & (Max(y) -> -Shumpus(y)))", "all x y z.((Max(x) & Brimpus(y) & Lorpus(z)) -> (Brimpus(x,y) & Mango(x,z) & -Shumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> Lorpus(x)) & -Shumpus(x)))", "(all x.(Max(x) -> (Brimpus(x) | Lorpus(x)) | -Shumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & all y.(Max(y) -> Lorpus(y)) & -Shumpus(y)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> Throat(x)) & (Max(x) -> Flour(x)) & -Shumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> Lorpus(x)) & (Max(x) -> -Shumpus(x)))"]}
{"id": "prontoqa_train_739", "nl": "Sam is a dumpus, Sam is not a grimpus, and Sam is a shumpus.", "fol": "(dumpus(Sam) & -grimpus(Sam) & shumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Dumpus(x)) & (Sam(x) -> -Grimpus(x)) & (Sam(x) -> Humpus(x)))", "(all x y.((SameDay(x) & Dumpus(y)) -> Dumpus(x)) & ((SameDay(x,y) & -Smoothpus(y)) -> Shampus(x)))", "(all x.(Sam(x) -> Dumpus(x)) & (Sam(x) -> -Grimpus(x)) & (Sam(x) -> Humpus(x)))", "(all x.(Sam(x) -> Dumpus(x)) & (Sam(x) -> NoGrimpus(x))) & (Sam(x) -> Sugpus(x)))", "all x y z.((Sam(x) & Dumpus(x) & Rainpus(y) & Humpus(z)) -> (EthnicName(x,y) & Shumpus(z)))", "(all x.(Sam(x) -> Dumpus(x)) & (-Sam(x) -> Grimpus(x)) & (-Sam(x) -> Humpus(x)))", "all x y z.((Sam(x) & Dumpus(x) & Grimpus(y) & Humpus(z)) -> (Potential(x,y) | (Potential(x,z) & -Grimpus(y)))))", "(all x y z.((Sam(x) & Dumpus(y)) -> Dumpus(z)) & ((Sam(x) & -Smudgepus(z))) -> Humpus(x)))", "(all x.((Sam(x) & Dumpus(x)) -> Crumple(x)) & ((Sam(x) & Scrumpus(x)) -> Humpus(x)))", "(all x y.((Sam(x) & Dumpus(y)) -> NoGrimpus(y)) & ((Sam(x) & -Grimpus(y)) -> Humpus(x)))", "(all x y.((SameDay(x) & Dumpus(y)) -> Scrumpus(y)) & ((SameDay(x) & Grimpus(x)) -> Seashumpus(x)))", "all x y z.((Sam(x) & Dumpus(x)) -> ((Sam(y) & -Scarpa(z)) & Sam(w) & Humpus(w))))", "(all x.(Sam(x) -> Dumpus(x)) & (Sam(x) -> -Gruppus(x)) & (Sam(x) -> Humpus(x))))", "(all x.(Sam(x) -> Dumpus(x)) & (Sam(x) -> -Grimpus(x)) & (Sam(x) -> Shumpus(x)))", "all x y z.((Sam(x) & Dumpus(y) & Grupp(z)) -> ((Lambs(x,y) & Worm(z)) & Shumpus(x)))", "(all x.(Sam(x) -> Dumpus(x)) | (Sam(x) -> -Grimpus(x))) | (Sam(x) -> Humpus(x))))"]}
{"id": "prontoqa_train_740", "nl": "Polly is a zumpus and Polly is a brimpus and Polly is not a shumpus.", "fol": "(zumpus(Polly) & brimpus(Polly) & -shumpus(Polly))", "prediction": ["all x y.((Poly(x) & Zumpus(x) & Polly(y)) -> (Brumpus(y) & -Shumpus(x)))", "(all x y.(Polly(x) -> Zumpus(x)) & (Polly(y) -> Brimpus(y)) & (Polly(y) -> -Shumpus(y)))", "((Tompus(Polly) & Brimpus(Poly)) | (Shumpus(Poly) & -Shumpus(Poly))))", "exists x.(Polly(x) & Zumpus(x) & Brimpus(x) & -Shumpus(x))", "(all x y z.(Polly(x) -> Zumpus(x)) & (Polly(y) -> Brimpus(y)) & (Polly(z) -> -Shumpus(z)))", "(all x y z.((Polly(x) & Zumpus(x)) -> A.(Brumpus(y) & Polly(z)) -> (-Shumpus(z))))", "(all x.(Poly(x) -> Zumpus(x)) & all y.(Poly(y) -> Brimpus(y)) & all z.(Polly(z) -> -Shumpus(z))))", "(all x.(Polly(x) -> Tosp(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> -Shumpus(z))))", "(all x y.((Polly(x) & Touque(x)) -> Shumpus(x)) & ((Polly(y) & Brimpus(y)) -> -Shumpus(y)))", "all x y z.((Polly(x) & Zumpus(y) & Polly(z) & Brimpus(z)) -> (Unshumpus(x) & -Shumpus(x)))", "(all x.(Polly(x) -> Zurpus(x)) & all y.(Polly(y) -> Brimpus(y))) & all z.(Polly(z) -> -Shumpus(z)))", "(all x y z.((Polly(x) & Zumpus(x)) -> Polly(x)) & ((Polly(y) & Brimpus(y)) -> (-Shumpus(z))))", "(all x.(Polly(x) -> Zumpus(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> -Shumpus(z))))", "all x y.((Polly(x) & Zumpus(x)) & ((Polly(y) | Polly(y))) -> Brimpus(y)) & ((Polly(y)) -> -Shumpus(y))))", "(all x y z.(Polly(x) -> Toss(x)) & (Poly(y) -> Brimpus(y)) & -Shhumpus(z)))", "all x y z.((Polly(x) & Zumpus(x) & Polly(y) & Brimpus(z)) -> (-Shumpus(y) & Polly(x)))"]}
{"id": "prontoqa_train_741", "nl": "Fae is an impus, Fae is a grimpus, and Fae is not a zumpus.", "fol": "(impus(Fae) & grimpus(Fae) & -zumpus(Fae))", "prediction": ["(all x y z.(Fae(x) -> Imperium(x)) & (Fae(y) -> Grimpus(y)) & (Fae(z) -> -Zumpus(z))))", "(all x.(Fae(x) -> Impirez\u00e9(x)) & (Fae(x) -> Grimpus(x)) & -Zumpus(x)))", "all x y z.((Fae(x) & Fae(y) & Grimpus(z)) -> (Impossible(x) & Greasy(y) & -Zumpus(z)))", "(all x.(Fae(x) -> Imperez(x)) & all y.(Fae(y) -> Grimpus(y)) & all z.(Fae(z) -> -Zumpus(z))))", "all x y z.((Fae(x) & Grimpus(y) & Fae(z)) -> (Impossible(x) & Grimpus(y) & -Zumpus(z)))", "(all x.(Fae(x) -> IsDroit(x)) & all y.(Fae(y) -> Grimpus(y)) & all z.(Fae(z) -> -Zumpus(z))))", "(all x.(Fae(x) -> Is(x,Idemi)) & all y.(Fae(y) -> Glumpus(y)) & all z.(Fae(z) -> -Zumpus(z))))", "all x y z.((Fae(x) & Fae(y) & Grimpus(z)) -> (Impossible(x) | Grimpus(y) & -Zumpus(y)))", "(all x.(Fafe(x) -> Impossible(x)) & (Fafe(x) -> Grimpus(x)) & -Zumpus(x)))", "all x y z.((Fae(x) & Assimil(x) & Fae(y) & Grimpus(y) & -Zumpus(z)) -> (FaeIsErsucht(x) & FaeIsFaeIsBumpus(y)))", "(all x.(Fae(x) -> IsSheep(x)) & (Fae(x) -> Grimpus(x)) & -Sumpus(x)))", "(all x y z.(Fae(x) -> Esperant(x)) & (Fae(y) -> Grimpus(y)) & (Fae(z) -> -Zumpus(z)))", "all x y z.((Fae(x) & Fae(y) & Grimpus(z)) -> (Impossible(x) & Grimpus(y) & -zumpus(z)))", "(all x.(Fae(x) -> Impossible(x)) & (Fae(x) -> Grimpus(x)) & -Zumpus(x)))", "exists x.(Fae(x) & IIspos(x) & Grimpus(x) & -Zumpus(x))", "(all x.(Fae(x) -> IsImpossible(x)) & all y.(Fae(y) -> Grimpus(y)) & all z.(Fae(z) -> -Zumpus(z))))"]}
{"id": "prontoqa_train_742", "nl": "Wren is a yumpus and Wren is a brimpus and Wren is not a vumpus.", "fol": "(yumpus(Wren) & brimpus(Wren) & -vumpus(Wren))", "prediction": ["all x y z.((Wren(x) & Yumpsum(x) & Wren(y) & Brimpus(y) & -Vumpus(z)) -> (Ask(x,y) & Ask(y,z)))", "(all x.(Wren(x) -> Yampus(x)) & (Wren(x) -> Brimpus(x)) & -Vumpus(x)))", "(all x.(Wren(x) -> Yumpus(x)) & ((Wren(x) -> Brimpus(x))) & ((Wren(x) -> -Vumpus(x))))", "(all x.(Wren(x) -> Yampus(x)) & (Wren(x) -> Brimpus(x)) & (Wren(x) -> -Vumpus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Brimpus(z)) -> (Yumpus(x) | Brunst(x) & -Vumpus(x)))", "(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> Brimpus(x)) & (Wren(x) -> -Vampire(x)))", "(all x.(Wren(x) -> Yumpus(x)) & all y.(Wren(y) -> Brimpus(y)) & all z.(Wren(z) -> -Vumpus(z))))", "(all x.((Wren(x) & Yumps(x)) | ((Wren(x) & Brimpus(x))) | (Wren(x) & -Vubiss(x))))", "(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> Brimpus(y)) & all z.(Wren(z) -> -Vumpus(z))))", "(Yumpus(Wren) | Brimpus(Wren) | -Vumpus(Wren)))", "all x y z.((Wren(x) & Yumpus(x) & Brimpus(y) & -Vumpus(z)) -> (Yumpus(x) & Brimpus(y) & -Vumpus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Brimpus(z)) -> (Yumpus(x) | Glover(x) | Glover(y) & -Vumpus(z)))", "all x y z.((Wren(x) & Yumpus(x) & Wren(y) & Brimpus(y)) -> (Yumpus(x) & -Vumpus(y)))", "(all x.(Wren(x) -> Yampus(x)) & ((Wren(x) -> Brimpus(x))) & ((Wren(x) & -Vimpus(x))))", "(Yumpus(Wren) & Brimpus(Wren) & -Vumpus(Wren))", "all x y.((Wren(x) & Yumpa(x)) -> (Yumpus(x) & Brimpus(x) & -Vumpus(x)))"]}
{"id": "prontoqa_train_743", "nl": "Fae is a numpus and Fae is a rompus and Fae is not a zumpus.", "fol": "(numpus(Fae) & rompus(Fae) & -zumpus(Fae))", "prediction": ["all x y z.((Fae(x) & Numpus(y) & Rompus(z)) -> (NotTompus(x) & -Numpus(x)))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> Rompus(x)) & (Fae(x) -> -Zumpus(x)))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> Rompus(x)) & (Fae(x) -> -Zumpus(x))))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> Rompus(x)) & -Fae(x)))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> Rompus(x)) & -Zumpus(x)))", "all x y.((Numpus(x) & Rompus(y) & -Zumpus(x)) -> (Numpus(x) | Rompus(y)))", "(all x.(Fae(x) -> Numpus(x)) & all y.(Fae(y) -> Rumpus(y)) & all z.(Fae(z) -> -Zumpus(z))))", "all x y z.((Fae(x) & Nompus(y) & Rompus(z)) -> (NotZumpus(x) | NotNumpus(x)))", "all x y z.((Fae(x) & Numpus(x) & Rompus(y) & -Zumpus(z)) -> (Numpus(x) & Rump(y) & -Rompus(y) & -Tompus(z)))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> Rompus(x)) & (Fae(x) -> -Zimpus(x)))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> Rompus(x)) & -Zumpus(x)))", "all x.(Fae(x) | (Numpus(x) & Rompus(x) & -Zumpus(x))))", "(all x.(Fae(x) -> Numpus(x)) & all y.(Fae(y) -> Romanus(y)) & all z.(Fae(z) -> -Zumpus(z))))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> Rompus(x)) & (Fae(x) -> -Zumpus(x)))", "all x y z.((Fae(x) & Numpus(x) & Rompus(y)) -> (Macroman(z) & -Zommel(z)))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> Rompus(x)) & -Tompus(x)))"]}
{"id": "prontoqa_train_744", "nl": "Each numpus is a shumpus.", "fol": "all x. (numpus(x) -> shumpus(x))", "prediction": ["all x.(Numerus(x) -> Humpus(x))", "all x.(Numpus(x) -> Humpus(x))", "all x.(Nompus(x) -> Hummus(x))", "all x.(Numpus(x) -> Humpus(x))", "all x.(Numpus(x) -> Humpus(x))", "all x.(Numpus(x) -> Shump(x))", "all x.(Nompus(x) -> Shumpus(x))", "exists x.(Nompus(x) & Humpus(x))", "all x.(Nompus(x) -> Humpus(x))", "all x.(Numerus(x) -> Humpus(x))", "all x.(Nompus(x) -> Humpus(x))", "all x.(Numpus(x) -> Humpus(x))", "all x.(Numerus(x) & Shumpus(x))", "all x.(Nompus(x) -> Humpus(x))", "all x.(Numpus(x) -> Humpus(x))", "all x.(Nompus(x) -> Humpus(x))"]}
{"id": "prontoqa_train_745", "nl": "Sally is not a shumpus and Sally is a brimpus and Sally is a jompus.", "fol": "(-shumpus(Sally) & brimpus(Sally) & jompus(Sally))", "prediction": ["(all x y z.(Sally(x) -> (-Shumpus(x) & Brumpus(y) & Meek(z))) & (Cherry(x) | Crane(x))))", "all x y z.((Sally(x) & Shumpus(y) & Brimpus(z)) -> (-Shumpus(x) & Brimpus(y) & Jompus(x)))", "all x y.((Sally(x) & -Shumpus(x)) -> (Before(y) & IsSumpus(y) & IsBrimpus(y) & IsJompus(y)))", "(all x.(Sally(x) -> -Shumpus(x)) & all y.(Brimpus(y) & All z.(Jompus(z)))))", "(all x.(Sally(x) -> -Shumpus(x)) & ((Sally(x) & Brimpus(x))) & ((Sally(x) & Jompus(x))))", "(notShumpus(Sally) & Brimpus(Sally) & Jompus(Sally))", "(all x y z.((Sallie(x) & Humpus(y) & Brimpus(z)) -> -Shumpus(x)) & all z w.((Sallie(w) & Marippy(w)) -> Jompus(w)))", "(all x.(Sally(x) -> -Shumpus(x)) & all y.(Brimpus(y) & -Shumpus(y))) & all z.(Jompus(z) -> Sissy(z)))", "(all x y z.(Sally(x) -> -Shumpus(x)) & ((Sally(y) & Brimpus(y)) & ((Sally(z) & Jompus(z))) -> -Shumpus(y) & Brimpus(z))))", "all x y z.((Sally(x) & Humpus(y) & Brimpus(z)) -> (-Shumpus(x) & Brimpus(x) & Jompus(x)))", "exists x.(Sally(x) & -Shumpus(x) & Brimpus(x) & Jompus(x))", "(all x.(Sally(x) -> -Shumpus(x)) & ((Sally(x) & Brumpus(x))) & ((Sally(x) & Jompus(x)))", "(all x.(Sally(x) -> -Shumpus(x)) & (Brimpus(x) & Jompus(x)))", "(all x.(Sally(x) -> -Shumpus(x)) & (Brumpus(x) & Jimpus(x)))", "(all x.(Sally(x) -> -Shumpus(x)) & ((Sally(x) & Brimpus(x))) & ((Sally(x) & Jompus(x))))", "(all x.(Sally(x) -> -Shumpus(x)) & (Brimpus(x) & Jompus(x)))"]}
{"id": "prontoqa_train_746", "nl": "Each vumpus is an impus.", "fol": "all x. (vumpus(x) -> impus(x))", "prediction": ["all x.(Vumpus(x) -> IsImpossible(x))", "all x.(Vumpus(x) -> IsImpossible(x))", "all x.(Vumpus(x) -> EnforcedFor(x))", "exists x.(Vumpus(x) & IsImplementary(x))", "all x.(Vumpus(x) -> Is(x,i,i))", "all x.(Vumpus(x) -> Impedient(x))", "all x.(Vumpus(x) -> IsImpulse(x))", "-exists y.(Vumpus(y) & Is(y))", "all x.(Vumpus(x) -> Imperium(x))", "(exists x.(Vumpus(x) & Impedient(x)))", "all x.(Vumpus(x) -> Isolation(x))", "all x.(Vuumpus(x) -> IsImpossible(x))", "all x.(Vumpus(x) -> Isolated(x))", "all x.(Vumpus(x) -> IsImpossible(x))", "all x.(Vumpus(x) -> Imperium(x))", "all x.(Vumpus(x) -> Isolated(x))"]}
{"id": "prontoqa_train_747", "nl": "Sally is a yumpus and Sally is a dumpus and Sally is not an impus.", "fol": "(yumpus(Sally) & dumpus(Sally) & -impus(Sally))", "prediction": ["all x y z.((Sally(x) & Yumpus(y) & Dumpus(z)) -> (Yumpus(x) & Dumpus(x) & -Imposition(x)))", "(yumpus(so-o) & dumpus(s)) & Sally -izmat(s))", "(all x y.(Yumpus(x) & Dumpus(y)) & -Issue(z)))", "(yumpus(s) & dumpus(s) & - impus(s))", "all x.(Yumpus(x) & Dumpus(x) & -Ilios(x))", "(yumpus(Sally) & dumpus(Sally) & -Ilfix(Sally))", "(all x.(Sally(x) -> Yumpus(x)) & (Sally(x) -> Dumpus(x)) & (Sally(x) -> -Impossible(x))))", "all x y.((Sally(x) & Yumphus(x) & Dumpus(y)) -> (yumpus(x) & -impose(y)))", "all x y z.((Sally(x) & Yumpu(y) & Dumpus(z)) -> (Yumpus(x) & Dumpus(x) & Sally,y) & -Impossible(x)))", "(yumpus(Sally) & dumpus(Sally) & -Idemistra(Sally))", "all x y z.((Sally(x) & Yumpa(y) & Sally(z)) -> (Yumpus(x) & Dumpus(z) & -Impossible(x)))", "(all x.(Yumpus(x) -> Solo(x)) & (Dumps(x) -> Solo(x)) & -Illegal(x)))", "(Yumpus(Sally) & Dumpus(Sally) & -Impfew(Sally))", "(all x.(Yumpus(x) -> Sally)) & all y.(Dumpus(y) -> Sally)) & all z.(Ilfixation(z) -> Sally))", "(Yumpus(Sally) | Dumpus(Sally)) & -Impossible(Sally))", "(yup,x) | (Yumpus(x) & Dumpus(x))))"]}
{"id": "prontoqa_train_748", "nl": "Sam is a sterpus and Sam is a gorpus and Sam is not an impus.", "fol": "(sterpus(Sam) & gorpus(Sam) & -impus(Sam))", "prediction": ["all x y.((Sam(x) & Sterpus(x) & Gorpus(y)) -> (-Sam(x) & -Ilapis(x) & -Sam(x)))", "all x.(Sam(x) -> (Sterepus(x) & Gorpus(x) & -Ilposer(x)))", "(all x.(Sam(x) -> Sterpus(x)) & (Sam(x) -> Gorpus(x)) & (Sam(x) -> -Impossible(x))))", "all x y z.((Sam(x) & Sprous(x) & Gorpus(y) & Erzo(z)) -> (Ilimination(x) | -Sterpus(y)))", "exists x.(Sam(x) & Sterpus(x) & Gorpus(x) & -Implanated(x))", "(all x.(Sam(x) -> Sterpus(x)) & (Sam(x) -> Gorpus(x)) & (Sam(x) -> -Illegal(x)))", "(all x y.((Sam(x) & Sterpus(x)) -> Sisal(y)) & ((Sam(x) & Gorpus(y)) -> -Issuel(x)))", "all x y.((Sam(x) & Sterpus(x)) -> (Gorpus(x) & -Improved(y)))", "all x y.((Sam(x) & Sterpus(x)) -> (Gorpus(x) & -Ilvicy(y)))", "all x y z.((Sam(x) & Sterpus(y) & Gorpus(z)) -> (Sterotus(x) | Gorpus(z) & -Islusion(x)))", "all x y.((Sam(x) & Sterpus(x) & Gorpus(y)) -> (-Immersion(x) & -Stimulus(y)))", "(all x.(Sam(x) -> Sterpus(x)) & all y.(Gorpus(y) -> Gorpus(y)) & all z.(Illegal(z) -> -Sam(z))))", "(all x.(Sam(x) -> Sterpus(x)) & (Sam(x) -> Gorpus(x)) & -Impossible(x)))", "(all x.(Sam(x) -> Sterpus(x)) & (Sam(x) -> Gorpus(x)) & -Impact(x)))", "(all x.(Sam(x) -> Sterpus(x)) & all y.(Sam(y) -> Gorpus(y))) & all z.(Sam(z) -> -Impossed(z)))", "(all x.(Sam(x) -> Sterpus(x)) & all y.(Sam(y) -> Gorpus(y))) & all z.(Sam(z) -> -Improve(z))))"]}
{"id": "prontoqa_train_749", "nl": "Alex is not a tumpus and Alex is a sterpus and Alex is a rompus.", "fol": "(-tumpus(Alex) & sterpus(Alex) & rompus(Alex))", "prediction": ["(all x.(Alex(x) -> -Tumpus(x)) & all y.(Sterepus(y) & All z.(Rompus(z)) -> -Tumpus(x)))", "(all x.(Alex(x) -> -Tumpus(x)) & all y.(Sterepus(y) & -Rompus(y))))", "(all x.(Alex(x) -> -Tumpus(x)) & all y.(Steerpus(y) -> -Rompus(y))))", "(-Tumpus(Alex) | Sterpus(Alex) | Rompus(Alex)))", "(all x.(Alex(x) -> -Tumpus(x)) & all y.(Sterepus(y) -> Sterpus(y))) & all z.(Rompus(z) -> Rompus(z)))", "all x y z.((Alex(x) & Tumpus(y) & Sterep(z)) -> (-Tumpus(x) & Sterep(x) & Rompus(y)))", "all x y.((Alex(x) & -Tumpus(x) & -Sterpus(y)) | (Alex(x) & Rompus(x))))", "all x y z.((Alex(x) & Tumpus(y) & Sterpus(z)) -> (-Tumpus(x) & Sterpus(y) & Rrompus(y)))", "exists x y z.(Middle(g) & Humpus(y) & Sterepus(z) & Muscat(x) & Rompos(x) & -Tumpus(x) & Sterepus(y) & Rompus(z))", "all x y z.((Alex(x) & Tumpus(y) & Sterpus(z)) -> (-Tumpus(x) & Sterpus(y) & Rompus(z)))", "all x y z.((Alex(x) & Tombos(y) & Sterpus(z)) -> ( (-Tumpus(x) & Sterpus(y) & Rompus(z))))", "all x y z.((Alex(x) & Tumpus(y) & Sterpus(z)) -> (-Tumpus_y) & -Sterpus_z) & -Rompus_y)))", "(all x.(Alex(x) -> -Tumpus(x)) & all y.(Sterpus(y) & All z.(Rompus(z) & -Tumpus(z))))", "(all x.(Alex(x) -> -Tumpus(x)) & all y.(Sterepus(y) -> Sterpus(y)) & all z.(Rompus(z) -> -Tumpus(x)))", "all x y.((Alex(x) & Tompus(y)) -> (-Tumpus(x) & Sterosaurus(y) & Rompus(y)))", "(all x.(Alex(x) -> -Tumpus(x)) & (Alex(x) -> -Sterepus(x))) & (Alex(x) -> Rompus(x)))"]}
{"id": "prontoqa_train_750", "nl": "Each dumpus is a sterpus.", "fol": "all x. (dumpus(x) -> sterpus(x))", "prediction": ["all x.(Dupus(x) -> Sterpus(x))", "exists x.(Dumpus(x) & Sterpus(x))", "all x.(Dumus(x) -> Sterobos(x))", "all x.(Dumpus(x) -> Sterus(x))", "all x.(Dumps(x) -> Sterpus(x))", "all x.(Dumpus(x) -> Sterpus(x))", "all x.(Dumpus(x) -> Sterpus(x))", "all x.(Dumpus(x) -> Sterpus(x))", "all x.(Dumpus(x) -> Sterpus(x))", "all x.(Dumpus(x) -> Sterpus(x))", "-Sterpus(dupus)", "all x.(Dumpus(x) -> Sterpus(x))", "all x.(Dumpus(x) -> Sterpus(x))", "all x.(Dumps(x) -> Sterpus(x))", "all x.(Dumpus(x) -> Sterpus(x))", "all x.(Dumpus(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_751", "nl": "Stella is not a sterpus and Stella is a brimpus and Stella is a zumpus.", "fol": "(-sterpus(Stella) & brimpus(Stella) & zumpus(Stella))", "prediction": ["(all x y z.((Stella(x) & Roos(y) & Roos(z)) -> -Sterpus(x)) & ((Stella(x) & Rimpus(x)) | (Stella(x) & Zumpus(x)))))", "(-Sterpus(Stella) & Brimpus(Stella) & Zumpus(Stella))", "(all x.(Stella(x) -> -Sterpus(x)) & (Stella(x) -> Brimpus(x)) & (Stella(x) -> Zumpus(x)))", "all x y z.((Stella(x) & Steerpus(y) & Brimpus(z) & Zumpus(z)) -> (-Sterpus(x) & Brimpus(x) & Zumpus(y)))", "(all x.(Stella(x) -> -Sterpus(x)) & ((Stella(x) & Brimpus(x))) -> Zumpus(x)))", "(all x y z.(Stella(x) -> -Sterpus(x)) & ((Stella(y) & Brimpus(y)) | (Stella(z) & Zumpus(z)))))", "all x y.((Stella(x) & Stella(y)) -> (-Sterpus(x) & Brimpus(y) & Zumpus(y)))", "(all x.(Stella(x) -> -Serp(x)) & all y.(Brimpus(y) -> (Stella(x) & Zumpus(y))))", "(all x.(Stella(x) -> -Sterepus(x)) & (Stella(x) -> Brimpus(x)) & (Stella(x) -> Zumpus(x)))", "(all x.(Stella(x) -> -Sterpus(x)) & (Stella(x) -> Brimpus(x)) & (Stella(x) -> Zumpus(x)))", "all x y z.((Stella(x) & Sterpus(y) & Brimpus(z)) -> (-Sterpus(x) & Blimpus(y) & Zumpus(z)))", "(all x.(Stella(x) -> -Sterpus(x)) & all y.(Brimpus(y) & Flax(y))))", "all x y z.((Stella(x) & Sterotus(y) & Brimpus(z)) -> (-Sterpus(x) & Brimpus(x) & Zumpus(x)))", "(all x.(Stella(x) -> -Sterpus(x)) & (Stella(x) -> Brimpus(x)) & (Stella(x) -> Zumpus(x)))", "(all x.(Stella(x) -> -Sterpus(x)) & ((Stella(x) | Brimpus(x))) & ((Stella(x) & Zumpus(x)))) -> -Sterpus(x)))", "(all x.(Stella(x) -> -Sterpus(x)) & all y.(Brimpus(y) & Zumpus(y)))"]}
{"id": "prontoqa_train_752", "nl": "Numpuses are tumpuses.", "fol": "all x. (numpus(x) -> tumpus(x))", "prediction": ["all x.(Numpus(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumulus(x))", "all x.(Numpuse(x) -> Tumpus(x))", "all x.(Numpuse(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumulus(x))", "all x.(Numpuse(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumor(x))", "all x.(Numpus(x) -> Humptus(x))", "all x.(Numpus(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumulus(x))", "all x.(Numpus(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumulus(x))", "all x.(Numpus(x) -> Tumulus(x))", "all x.(Numpus(x) -> Tumulus(x))"]}
{"id": "prontoqa_train_753", "nl": "Fae is an impus and Fae is not a tumpus and Fae is a dumpus.", "fol": "(impus(Fae) & -tumpus(Fae) & dumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Imploser(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)))", "all x.(Fae(x) -> (Improviser(x) & -Tumpus(x) & -Dumpus(x)))", "(all x.(Fae(x) -> Illegal(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)))", "all x y z.((Fae(x) & Fae(y) & Tompus(z)) -> (Impossible(x) & -Impossible(y) & Dumpus(z)))", "(all x.(Fae(x) -> Imposer(x)) & exists y.(Fae(y) & -Tumpus(y))) & exists z.(Fae(z) & Dumpus(z))))", "(all x.(Fae(x) -> Illegal(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)))", "(all x y.(Fae(x) -> Is(x,Impossible)) & (Fae(y) -> -Tumpus(y)) & (Fae(y) -> Dumpus(y)))", "all x y z.((Fae(x) & Is(x,y) & Fae(z)) -> (Impossible(x) & -Tumpus(z) & Dumpus(z)))", "all x.(Fae(x) -> (Impede(x) & -Tumpus(x) & Dumpus(x)))", "(all x.(Fae(x) -> Impossible(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)))", "(all x y.((Fae(x) & IsImpossible(x)) -> NotTumpus(x)) & ((Fae(y) & -Impossible(y)) -> Dumpus(y)))", "all x.(Fae(x) -> (Impedus(x) & -Tumpus(x) & Dumpus(x)))", "all x y.((Fae(x) & Fae(y)) -> (Impos\u00e9(x) & -Tumpus(y) & Dumpus(y)))", "(all x.(Fae(x) -> Impermissible(x)) & (Fae(y) -> -Tumpus(y)) & (Fae(y) -> Dumpus(y)))", "(all x.(Fae(x) -> Illegal(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)))", "(all x.(Father(x) -> Impossiv)) & (Father(x) -> -Tumpus(x)) & (Father(x) -> Dumpus(x)))"]}
{"id": "prontoqa_train_754", "nl": "Alex is a jompus, Alex is a gorpus, and Alex is not a vumpus.", "fol": "(jompus(Alex) & gorpus(Alex) & -vumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Jompus(y) & Gorpus(z)) -> (Really(x) | -Really(x)))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) | (Vumpus(z) | -Vumpus(z)))))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Gorpus(x)) & (Alex(x) -> -Vumpus(x)))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Gorpus(x)) & (Alex(x) -> -Vumpus(x))))", "all x.(Alex(x) -> (Alumnus(x) & Jompus(x) & Gorpus(x) & -Vumpus(x)))", "all x y z.((Alex(x) & JOMUS(x) & Alex(y) & Gorpus(y) & -Vimpus(z)) -> ((Computer(x) & Gorpus(y)) & Gorpus(z) & Gorpus(y) & Sognisa(y))))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Gorpus(y)) & -Voompus(y)))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Vumpus(z))))", "all x.(Alex(x) -> (Jimpus(x) & Gorpus(x) & -Vumpus(x)))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Vumpus(z))))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Vumpus(z))))", "all x.(Alex(x) -> (Jompus(x) | Gorpus(x) | -Vumpus(x)))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Vumpus(z))))", "(all x.(Alex(x) -> Jompus(x)) & (Gorpus(x) -> Bearpus(x)) & (Vumpus(x) -> Boss(x))))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Gorpus(x)) & -Alex(x)))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Vumpus(z)))"]}
{"id": "prontoqa_train_755", "nl": "Alex is not a rompus.", "fol": "-rompus(Alex)", "prediction": ["Alex is not a rompus.", "all x.(Alex(x) -> -Rompus(x))", "Alex is NOTRompus.", "All x.(Alex(x) -> -Rompus(x))", "ALL x.(Alex(x) -> -rompus(x))", "Alex n\u2019est pas rompus.", "Alex is not a Rompus.", "all x.(Alex(x) -> -Rompus(x))", "all x.(Alex(x) -> -Rompus(x))", "Alex is not a rompus.", "all x.(Alex(x) -> -Rompus(x))", "Alex n\u2019est pas rompus.", "(-Rompus(Alex))", "all x.(Alex(x) -> -Rompus(x))", "Alex -Rompus(Alex)", "all x.(Alex(x) -> -Rompus(x))"]}
{"id": "prontoqa_train_756", "nl": "Wumpuses are lempuses.", "fol": "all x. (wumpus(x) -> lempus(x))", "prediction": ["all x.(Wumpuse(x) -> Lempuse(x))", "all x.(Wumpus(x) -> Lempuse(x))", "all x.(Wumpus(x) -> Lempuse(x))", "all x.(Wumpus(x) -> Lempuse(x))", "all x.(Wumpus(x) -> Lempuse(x))", "all x.((Wumpus(x) & Lempuse(x)) -> HasLempuse(x))", "all x.(Wumpus(x) -> Lempuse(x))", "all x.(Wumpus(x) -> Lempuse(x))", "all x y.((Wumpuse(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Wushuse(x) -> Lempuse(x))", "all x.(Wuchuse(x) -> Lempuse(x))", "all x.(Wumpus(x) -> Lempuse(x))", "all x.(Wumpuse(x) -> Lempuse(x))", "all x.(Wumpus(x) -> Lempuse(x))", "all x.(Wumpus(x) -> Lempuse(x))", "all x.(Wumpus(x) -> Lempuse(x))"]}
{"id": "prontoqa_train_757", "nl": "Alex is not a lempus, Alex is a sterpus, and Alex is a zumpus.", "fol": "(-lempus(Alex) & sterpus(Alex) & zumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Lempus(y) & Sterpus(z)) -> (-Lempus(x) & Sterpus(x) & Zumpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Sterepus(z)) -> (-Lempus(x) | Sterpus(x) | Zumpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Sterpus(z) & Zumpus(x)) -> (-Lempus(x) & -Sterepus(y)))", "all x y z.((Alex(x) & Sterpus(y) & Zumpus(z)) -> (-Lempus(x) & Sterpus(y) & Zumpus(z)))", "(all x.(Alex(x) -> -Limpus(x)) & all y.(Alex(y) -> Sterepus(y)) & all z.(Alex(z) -> Zumpus(z)))", "all x.(Alex(x) -> (-Lempus(x) & -Sterpus(x) & -Tompus(x)))", "all x.(Alex(x) -> (-Lempus(x) | Sterpus(x) | Zumpus(x)))", "all x.(Alex(x) & -Lempus(x) & Sterpus(x) & Zumpus(x))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Sterpus(y)) & all z.(Alex(z) -> Zumpus(z)))", "(all x.(Alex(x) -> -Lempus(x)) & (Alex(x) -> Sterpus(x)) & (Alex(x) -> Zumpus(x)))", "all x.(Alex(x) & -lempus(x) & Sterpus(x) & Zumpus(x))", "all x y z.((Alex(x) & Lempus(y) & Sterpus(z)) -> (-Lempus(x) & Sterpus(x) & Zumpus(x)))", "(all x.(Alex(x) -> -Lempus(x)) & (Alex(x) -> Sterpus(x)) & (Alex(x) -> Zumpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Sterpus(z)) -> (-Lempus(x) & Sterpus(y) & Zumpus(z)))", "(all x.(Alex(x) -> -Lempus(x)) & (Alex(x) -> Sterpus(x)) & (Alex(x) -> Zumpus(x))))", "(all x.(Alex(x) -> -Lempus(x)) & (Alex(x) -> Sterpus(x)) & (Alex(x) -> Zumpus(x)))"]}
{"id": "prontoqa_train_758", "nl": "Alex is not a wumpus.", "fol": "-wumpus(Alex)", "prediction": ["Alex isetwumpus(x)", "noWumpus(Alex)", "(Wumpus(Alex) & -Wumpus(Alex))", "Alex is not a wumpus.", "(-Wumpus(Alex))", "all x.(Alex(x) -> -Wumpus(x))", "(-Wumpus(Alex))", "Alex is not wumpus.", "all x.(Alex(x) -> -Wumpus(x))", "Alex is not a wumpus.", "Alex is not wumpus.", "Alex is not a wumpus.", "-Wumpus(Alex)", "all x.(Alex(x) -> -Wumpus(x))", "(Wumpus(Alex) -> -Wumpus(Alex))", "all x.(Alex(x) -> -Wumpus(x))"]}
{"id": "prontoqa_train_759", "nl": "Zumpuses are grimpuses.", "fol": "all x. (zumpus(x) -> grimpus(x))", "prediction": ["all x.(Zumpuse(x) -> Grimpuse(x))", "all x.(Zumpus(x) -> Grimpus(x))", "all x.(Zumpus(x) -> Grimpuse(x))", "all x.(Zumpus(x) -> Greasepuse(x))", "all x.(Zumpuse(x) -> Grimpuse(x))", "all x.(Zumpus(x) -> Grimpuse(x))", "all x.(Umpus(x) -> Grimpuse(x))", "all x.(Zumpus(x) -> Grimpuse(x))", "all x.(Zumpus(x) -> Grimpuse(x))", "all x.(Zumpus(x) -> Grimpuse(x))", "all x.(Zumpus(x) -> Grimpuse(x))", "all x.(Zumpuse(x) -> (Grimpuse(x) & (Frostpuse(x) | Grimpuse(x))))", "all x.(Zimpus(x) -> Grimpus(x))", "all x.(Zumpus(x) -> Granny(x))", "all x.(Zumpus(x) -> Grimpuse(x))", "all x.(Zumpus(x) -> Grimpus (z)))"]}
{"id": "prontoqa_train_760", "nl": "Polly is a yumpus and Polly is not a grimpus and Polly is a lempus.", "fol": "(yumpus(Polly) & -grimpus(Polly) & lempus(Polly))", "prediction": ["(all x.((Limpus(x) & Yampus(x)) | (-Smoothpus(x) & Lempus(x))))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lempus(x)))", "(all x y.(Polly(x) -> Yumpus(x)) & (Polly(y) -> -Grimpus(y)) & (Polly(y) -> Lempus(y)))", "(all x.(Polly(x) -> Yumpus(x)) & all y.(Polly(y) -> -Grimpus(y))) & all z.(Polly(z) -> Lempus(z)))", "(all x.(Polly(x) -> Yumpulus(x)) & all y.(Polly(y) -> NotGrimpus(y))) & all z.(Polly(z) -> Lempus(z)))", "all x y.((Polly(x) & Yampus(y)) -> (-Smoothpus(x) & Lempus(x)))", "all x y z.((Polly(x) & Yumpus(x) & Polly(y) & Gryps(z)) -> (-Smooch(y) & Lempus(z)))", "all x y z.((Polly(x) & Yampus(x) & Polly(y) & -Grimpus(y)) -> (Yumpus(x) & Pluto(z)))", "all x y z.((Polly(x) & Yumpun(y) & Polly(z)) -> (-Grimpus(z) & Lempus(x)))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lempus(x)))", "(all x.(Polly(x) -> Yumpus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lempus(x)))", "all x y z.((Polly(x) & Yumps(y) & Polly(z)) -> (NotGrimpus(x) & Lempus(z)))", "(all x y z.((Polly(x) & Yumpus(x)) -> Polly)) & ((Polly(y) & -Grimpus(y)) -> Lempus(z)))", "(all x y z.((Polly(x) & Yampus(x)) -> Yompus(x)) & ((Polly(y) & -Grimpus(y))) -> Lempus(z)))", "(all x.(Polly(x) -> Yumps(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lempus(x)))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lempus(x))))"]}
{"id": "prontoqa_train_761", "nl": "Every lorpus is a numpus.", "fol": "all x. (lorpus(x) -> numpus(x))", "prediction": ["all x.(Lorpus(x) -> Numpus(x))", "all x.(Lorpus(x) -> Numpus(x))", "all x.(Lorpus(x) -> Numpus(x))", "all x.(Lorpus(x) -> Numpus(x))", "all x.(Lorpus(x) -> Numpus(x))", "all x.(Lorpus(x) -> Numpus(x))", "all x.(Lorpus(x) -> Numpus(x))", "all x.(Lorpus(x) -> Numpus(x))", "all x.(Lorpus(x) -> Numpus(x))", "all x.(Lorpus(x) -> Numpus(x))", "all x.(Lorpus(x) -> Numpus(x))", "all x.(Lorpus(x) -> Numpus(x))", "all x.(Lorpus(x) -> Numpus(x))", "all x.(Lorpus(x) -> Numpus(x))", "all x.(Lorpus(x) -> Numpus(x))", "all x.(Lorpus(x) -> Numpus(x))"]}
{"id": "prontoqa_train_762", "nl": "Sam is a jompus, Sam is a rompus, and Sam is not a numpus.", "fol": "(jompus(Sam) & rompus(Sam) & -numpus(Sam))", "prediction": ["(all x.(Sam(x) -> Jompus(x)) & all y.(Sam(y) -> Rompus(y)) & all z.(Sam(z) -> -Numpus(z))))", "all x y z.((Sam(x) & Jompus(x) & Rompus(y) & Numpus(z)) -> (Jumpus(x) & -Rompus(y)))", "(all x.(Jompus(x) -> Sam(x)) & all y.(Rompus(y) -> Sam(y)) & all z.(Champaign(z) -> Sam(z))))", "(all x y z.(Sam(x) -> IsJompus(x)) & (Sam(y) -> IsRompus(y)) & (Sam(z) -> -IsNumpus(z))))", "all x.((Sam(x) & Jompus(x)) -> Rompus(x)) & -Numpus(x))", "(all x.(Sam(x) -> Jompus(x)) & (Sam(x) -> Rompus(x)) & -Sam(x)))", "(all x y z.(Mammal(x) -> Jompus(x)) & ((Mammal(y) & Rompus(y)) & ((Mammal(z) & -numpus(z))) -> Rompus(z)))", "all x y z.((Sam(x) & Jompus(x) & Rompus(y) & -Numpus(z)) -> (Jompus(x) | Rompus(y) & -Numpus(z)))", "(all x y.(Jompus(x) -> Sam(x)) & (Rompus(y) -> Sam(x)) & (Numpus(y) -> Sam(y)))", "(all x.((Sam(x) & Jompus(x)) -> Rompus(x)) & ((Sam(x) & -Numpus(x))) -> Embryo(x)))", "(all x.(Sam(x) -> Jompus(x)) & (Sam(x) -> Rompus(x)) & -Sam(x)))", "(all x.(Sam(x) -> Jompus(x)) & all y.(Sam(y) -> Rompus(y)) & all z.(Sam(z) -> -Numpus(z))))", "all x y.((Sam(x) & Jompus(x)) -> Rompus(x)) & -Numpus(y))", "all x y.((Sam(x) & Jompus(x)) -> (Rompus(x) & -numpus(y)))", "all x y z.((Sam(x) & Jompus(y) & Rompus(z)) -> (Jompus(x) & Rompus(x) & Numpus(x)))", "(all x.(Sam(x) -> Jompus(x)) & all y.(Sam(y) -> Rompus(y)) & all z.(Sam(z) -> -Numpus(z))))"]}
{"id": "prontoqa_train_763", "nl": "Rex is a vumpus, Rex is a grimpus, and Rex is not an impus.", "fol": "(vumpus(Rex) & grimpus(Rex) & -impus(Rex))", "prediction": ["(all x.(Rex(x) -> SeemsToBeVimpus(x)) & (Rex(x) -> Gruppus(x)) & (Rex(x) -> -Ilpos(x)))", "all x y z.((Rex(x) & Mimpus(y) & Gruppus(z)) -> (Vumpus(x) | -Impossible(x)))", "(all x.(Rex(x) -> Voompus(x)) & (Rex(x) -> Grimpus(x)) & (Rex(x) -> -Impossible(x)))", "(all x.(Rex(x) -> Vumpus(x)) & (Rex(x) -> Grimpus(x)) & (Rex(x) -> -Impos(x)))", "(all x.(Rex(x) -> Vumpus(x)) & all y.(Rex(y) -> Grimpus(y)) & all z.(Rex(z) -> -Impossible(z))))", "all x y z.((Rex(x) & Vumpus(y) & Grimpus(z)) -> (Vumpus(x) | Unimposed(x)))", "(all x.(Rex(x) -> Vampus(x)) & (Rex(x) -> Grimpus(x)) & (Rex(x) -> -Imp\u00e9rial(x)))", "(all x y z.((Rex(x) & Vumpus(y) & Grypsos(z)) -> RexVumpus(x)) & ((Rex(x) & Grimpus(x)) -> RexImpossible(x)))", "(all x y.((Rex(x) & Vampid(x)) -> Furpus(y)) & ((Rex(x) & Grimpus(x)) -> -Imprisoned(x))))", "all x y z.(Rex(x) -> (Voompus(x) & Grimpus(y) & Imperator(z)))", "all x.((Rex(x) & Vumpus(x)) -> Grimpus(x)) | (Cruzpus(x) & -Imposs(x))))", "(all x.(Rex(x) -> Vumpus(x)) & (Rex(x) -> Grimpus(x)) & -Impossible(x)))", "(all x.(Rex(x) -> Vumpus(x)) & (Rex(x) -> Grimpus(x)) & (Rex(x) -> -Irizessa(x))))", "(all x.(Rex(x) -> Vumpus(x)) & all y.(Rex(y) -> Grimpus(y)) & is -Issue(y)))", "(all x.(Rex(x) -> Vumpus(x)) & (Rex(x) -> Grimpus(x)) & -Issue(x)))", "(all x.(Rex(x) -> Vumpus(x)) & (Rex(x) -> Grimpus(x)) & -Issue(x)))"]}
{"id": "prontoqa_train_764", "nl": "Shumpuses are rompuses.", "fol": "all x. (shumpus(x) -> rompus(x))", "prediction": ["all x.(Shumpus(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Smuggle(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Suppus(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Shupuse(x) -> Rompus(x))", "all x.(Shampus(x) -> Rompus(x))", "all x.(Shampus(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Schumpuse(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Shupuse(x) -> Rompus(x))", "all x.(Shupuse(x) -> Rompus(x))", "all x.(Shumpus(x) -> Rompus(x))", "all x.(Shupuse(x) -> Rhopus(x))"]}
{"id": "prontoqa_train_765", "nl": "Wren is a zumpus and Wren is a dumpus and Wren is not a rompus.", "fol": "(zumpus(Wren) & dumpus(Wren) & -rompus(Wren))", "prediction": ["all x y.((Wren(x) & Zumpus(x) & Wren(y)) -> Dumpus(y)) & -Rompus(z))", "(All x.(Wren(x) -> Zumpus(x)) & (Wren(x) -> Dumpus(x)) & (Wren(x) -> -rompus(x)))", "(all x.(Wren(x) -> Zumpus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> -Rompus(z))))", "all x y z.((Wren(x) & Wren(y) & Dumpus(z)) -> (Tompus(x) & -Rompus(y)))", "(all x y z.(Wren(x) -> Zumpus(x)) & all z w.((Wren(z) & Dumpus(w)) -> -Rompus(z)))", "(all x y z.(Wren(x) -> Zumpus(x)) &,(Wren(y) -> Dumpus(y)) & (Wren(z) -> -Rompus(z))))", "(all x.(Wren(x) -> Zumpus(x)) & (Wren(x) -> Dumpus(x)) & -Romes(x)))", "(all x.(Wren(x) -> Zumpus(x)) & all y.(Wren(y) -> Dumpus(y))) & all z.(Wren(z) -> -Rompus(z)))", "(all x y z.((Wren(x) & Zumpus(x)) -> Dumpus(x)) & ((Wren(y) & -Rompus(z))) -> Norompus(y)))", "All x y z.((Wren(x) & Tompus(x) & Wren(y) & Dumpus(y)) -> (Tompus(x) & Dumpus(y) & -Rompus(z)))", "all x y z.((Wren(x) & Zumpus(x) & Dumpus(y)) -> (Wren(z) & -Rompus(z)))", "(all x y z.(Wren(x) -> Tompus(x)) & (Wren(y) -> Dumpus(y)) & (Wren(z) -> -Rompus(z)))", "all x y z.((Wren(x) & Tossus(x) & Dumpus(y)) -> (-Tossus(z) & Dumpus(z)))", "all x y z.((Rompus(x) & Toxpus(y) & Dumpus(z)) -> (Tompus(x) | Dumpus(y) | Wren-Tompus(x)))", "(all x.(Wren(x) -> Zumpus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> -Rompus(z))))", "(all x y z.(Wren(x) -> Toah(x)) & (Wren(y) -> Dumpus(y)) & ((Wren(z) & Rompus(z))))"]}
{"id": "prontoqa_train_766", "nl": "Every lorpus is a vumpus.", "fol": "all x. (lorpus(x) -> vumpus(x))", "prediction": ["all x.(Lorpus(x) -> Voompus(x))", "all x.(Lorpus(x) -> Vulbis(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Larpus(x) -> Lupus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> LocatedInVumpus(x))", "all x.(Lorpus(x) -> Vampire(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vulmpus(x))", "all x.(Lorpus(x) -> Weambus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vulmpus(x))", "all x.(Lorpus(x) -> Vumpus(x))", "all x.(Lorpus(x) -> Vulmpus(x))"]}
{"id": "prontoqa_train_767", "nl": "Sally is a brimpus, Sally is not a vumpus, and Sally is an impus.", "fol": "(brimpus(Sally) & -vumpus(Sally) & impus(Sally))", "prediction": ["(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Vumpus(y)) & all z.(Sally(z) -> Issuel(z)))", "(all x.(Brimpus(x) -> Scrumpus(x)) & all y.(Vumpus(y) -> Scrumpus(y)) & all z.(Illegal(z) -> Ceremonial(z))))", "(all x.(Brimpus(x) -> Sally)) & (-Vumpus(x) -> Sally)) & (-Vumpus(x) -> Effusory(x)))", "all x.((Sally(x) & Brimpus(x)) -> -Vumpus(x)) & IsImpossible(x))", "(all x.(Sally(x) -> Brimpus(x)) & (-Sally(x) -> Vumpus(x)) & (-Sally(x) -> Impermissible(x))))", "all x y z.((Sally(x) & Brimpus(x) & -Vumpus(y) & Impossible(z)) -> (Brimpus(x) & -Vumpus(y) & Impossible(z)))", "(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Vuze(y)) & all z.(Sally(z) -> Impedient(z))))", "(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Vimpus(x)) & (Sally(x) -> Impeached(x))))", "(all x.(Sally(x) -> Brimpus(x)) & (-Sally(x) -> Vulmpus(x)) & (-Sally(x) -> Institutions(x)))", "(all x.(Sally(x) -> Brimpus(x)) & (-Sally(x) -> Vumpus(x)) & (-Sally(x) -> Imperator(x)))", "(all x y z.(Sally(x) -> Brimpus(x)) & ((Sally(y) & -Vumpus(y))) | (-Sally(z) & Isolator(s))))", "(all x.(Sally(x) -> Brimpus(x)) & all y.((Sally(y) & -Vimpus(y)) -> Ispose(y)))", "(all x y z.((Sally(x) & Brimpus(x)) -> Brampus(y)) & ((Sally(z) & -Vimpus(z))) -> impus(z)))", "(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Vumpus(y)) & all z.(Sally(z) -> Impermane(z)))", "(all x y.((Merchandise(x) & Brompus(x)) & ((Merchandise(y) & -Vumpus(y)) | ((Merchandise(y) & Implenishes(y)))))", "(All x.(Sally(x) -> Brimpus(x)) & -Vimpus(x) & Ilirs(x)))"]}
{"id": "prontoqa_train_768", "nl": "Each gorpus is a brimpus.", "fol": "all x. (gorpus(x) -> brimpus(x))", "prediction": ["all x.(Gorpus(x) -> Brimpus(x))", "all x.(Gorpus(x) -> Brimpus(x))", "all x.(Gorpus(x) -> Brimpus(x))", "all x.(Gorpus(x) -> Brimpus(x))", "all x.(Gorpus(x) -> Brimpus(x))", "all x.(Gorpus(x) -> Brimpus(x))", "all x.(Gorp(x) -> Brimpus(x))", "all x.(Gorpus(x) -> Brimpus(x))", "all x.(Gorpus(x) -> Brimpus(x))", "all x.(Gorpus(x) -> Brimpus(x))", "all x.(Gorpus(x) -> Brimpus(x))", "all x.(Gorpus(x) -> Brimpus(x))", "all x.(Gorpus(x) -> Brimpus(x))", "all x.(Gorpus(x) -> Brimpus(x))", "all x.(Gorpus(x) -> Brimpus(x))", "all x.(Gorpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_769", "nl": "Fae is a lorpus, Fae is an impus, and Fae is not a brimpus.", "fol": "(lorpus(Fae) & impus(Fae) & -brimpus(Fae))", "prediction": ["(all x.(Fae(x) -> Lion(x)) & all y.(Fae(y) -> Isolator(y)) & all z.(Fae(z) -> -Brimpus(z))))", "(all x.(Fae(x) -> Loompus(x)) & all y.(Fae(y) -> Impossible(y)) & all z.(Fae(z) -> -Brimpus(z))))", "all x y z.((Fae(x) & (Lorpus(x) | Impossible(x)) & -Brimpus(y)) -> -Lorpus(x))", "(all x.(Fae(x) -> Lorpus(x)) & all y.(Fae(y) -> Issue(y)) & all z.(Fae(z) -> -Brimpus(z))))", "all x y z.((Fae(x) & Lorpus(y) & Is(z)) -> (Lorpus(x) | Is(z) | (Is(x,y) & -Brimpus(x))))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> Erzwk(x)) & -Brumpus(x)))", "(all x y z.(Fae(x) -> Lorpus(x)) & (Fae(y) -> Impossible(y)) & (Fae(z) -> -Brimpus(z)))", "all x y z.((Fae(x) & Lorpus(y) & Domitian(z)) -> (Lorpus(x) & -Brimpus(x)))", "(all x y z.(Fae(x) -> Lorpus(x)) & (Fae(y) -> Imperator(y)) & (Fae(z) -> -Brimpus(z)))", "all x.(Fae(x) -> (Lorpus(x), & Impossible(x) & -Brimpus(x)))", "(all x.(Fae(x) -> Lorpus(x)) & all y.(Fae(y) -> Ispose(y)) & -Brimpus(y)))", "(all x y z.(Fae(x) -> Lordpus(x)) & (Fae(y) -> Issuel(y)) & (Fae(z) -> -Brimpus(z)))", "(all x y.((Fae(x) & Lorpus(y)) | ((Fae(x) & Impossible(x))) | (Fae(x) & -Brimpus(x))))", "(all x.(Fae(x) -> Lorpus(x)) & all y.(Fae(y) -> Id\u00e9fiator(y)) & all z.(Fae(z) -> Brimpus(z))))", "(all x.(Fae(x) -> (Lorpus(x) | Assert(x))) & (Fae(x) -> -Brimpus(x)))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> Issuel(x)) & (Fae(x) -> -Brimpus(x)))"]}
{"id": "prontoqa_train_770", "nl": "Wren is a yumpus, Wren is a zumpus, and Wren is not a tumpus.", "fol": "(yumpus(Wren) & zumpus(Wren) & -tumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Yampus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> -Tumpus(x)))", "(all x y z w.(Wren(x) -> Yumpus(x)) & (Wren(y) -> Zumpus(y)) & (Wren(z) -> -Tumpus(z)))", "(all x.(Wren(x) -> Yumpus(x)) & ((Wren(x) & Zumpus(x))) & (-Wren(x) & Tumpus(x))))", "(yumpus(Wren) | Zumpus(Wren) | -Tumpus(Wren)))", "(all x y z.((Wren(x) & Yupse(y) & Hindsplash(z)) -> Is(x,y)) & ((Wren(x) & -Tumpus(x)) -> Is(x,z)))", "(\"Yumpus\" & Zumpus(y) & -Tumpus(w))", "(all x.(Wren(x) -> Yumpus(x)) & (Zumpus(x) -> Zumpus(x)) & -Tumpus(x)))", "(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> Zumpus(x)) & (NonTumpus(x))))", "(all x.(Wren(x) -> Yampus(x)) & ((Wren(x) -> Zumpus(x))) & ((Wren(x) -> -Tumpus(x))))", "(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> -Tumpus(z))))", "all x.(Wren(x) -> (Yumpus(x) & Zumpus(x) & -Tumpus(x)))", "(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> -Tumpus(z))))", "all x y z.((Wren(x) & Yampus(y) & Zumpus(z)) -> (Yumpus(x) & Zumpus(x) & -Tumpus(x)))", "all x y z.((Wren(x) & Yampus(y) & Zumpus(z)) -> (Yumpus(x) | Zumpus(x) | -Tumpus(x)))", "(All x.(Wren(x) -> Yumpus(x)) & (Wren(x) | Zumpus(x))) & -Tumpus(x))", "(all x.(Wren(x) -> Yampus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> -Tumpus(x)))"]}
{"id": "prontoqa_train_771", "nl": "Polly is a jompus and Polly is not a shumpus and Polly is an impus.", "fol": "(jompus(Polly) & -shumpus(Polly) & impus(Polly))", "prediction": ["(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Obsidian(x)))", "all x y.((Ploem(x) & Polly(y)) -> (IsJumpus(x) & -IsShumpus(y) & IsIssue.(y))))", "(all x.(Poly(x) -> Jompus(x)) & all y.(Poly(y) -> -Shumpus(y))) & all z.(Poly(z) -> Issuel(z)))", "(Jumpus(Ploy) & -Shumpus(Ploy)) & Impossible(Polly))", "(all x.(Poolis(x) -> Jompus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Imperez(x)))", "exists x y.(Polly(x) & Jompus(x) & Polly(y) & -Shumpus(y) & Imperator(y))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Issue(x)))", "all x y.((Polly(x) & Jompus(x) & Polly(y)) -> (-Shumpus(y) & (Ilpresario(y) | Polly(y))))", "(all x.(IsJimpus(x) & All y.(IsShumpus(y) & -IsShumpus(y))) -> (IsNoxed(y) & All(y))))", "all x y.((Posy(x) & Jompus(x) & Polly(y)) -> (-Shumpus(y) & Imperator(y)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Implicit(x)))", "(all x.(Shumpus(x) -> Polly(x)) & (Jimpus(x) | -Shumpus(x))) & (Impossible(x) -> Polly(x)))", "all x y z.((Ploy(x) & Jompus(x) & -Shumpus(y) & -Illegal(z)) -> (Jompus(x) & Polly(y) & Impossible(y)))", "all x y z.((Polly(x) & Jompus(x) & NoShumpus(y) & Issuu(z)) -> (Impress(x) | Issuu(z)))", "all x.((Policy(x) & Jompus(x)) -> (-Shumpus(x) & Iliased(x)))", "(Jompus(Ploy) & -Shumpus(Ploy)) & Impossible(Ploy))"]}
{"id": "prontoqa_train_772", "nl": "Every grimpus is a dumpus.", "fol": "all x. (grimpus(x) -> dumpus(x))", "prediction": ["all x.(Grimpus(x) -> Dumpus(x))", "all x.(Grimpus(x) -> Dumpus(x))", "all x.(Grimpus(x) -> Dumpus(x))", "all x.(Grimpus(x) -> Dumpus(x))", "all x.(Grimpus(x) -> Dumpus(x))", "all x.(Dupus(x) -> Grempus(x))", "all x.(Smoothpus(x) -> Dumpus(x))", "all x.(Grimpus(x) -> Dumpus(x))", "all x.(Smoke(x) -> Dumpus(x))", "all x.(Grimpus(x) -> Dumpus(x))", "all x.(Felps(x) -> Dumpus(x))", "all x.(Smoothpus(x) -> Dumpus(x))", "all x.(Grimpus(x) -> Dumpus(x))", "all x.(Plumpus(x) -> Dumpus(x))", "all x.(Grimpus(x) -> Dumpus(x))", "all x.(Blapus(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_773", "nl": "Stella is not a dumpus, Stella is a vumpus, and Stella is a lempus.", "fol": "(-dumpus(Stella) & vumpus(Stella) & lempus(Stella))", "prediction": ["all x y z.((Stella(x) & Dumpus(y) & Vampus(z)) -> (-Dumpus(x) & -Vimpus(y) & -Lempus(z)))", "(all x.(Stella(x) -> -Dumpus(x)) & (Stella(x) -> Vumpus(x)) & (Stella(x) -> Lempus(x)))", "(all x.(Stella(x) -> -Dumpus(x)) & (Vimpus(x) | Lempus(x))))", "all x y z.((Stella(x) & Dumpus(y) & Vumpus(z)) -> (-Dumpus(x) & Vumpus(x) & Lempus(y)))", "(all x.(Stella(x) -> -Dumpus(x)) & all y.(Stella(y) -> Vumpus(y)) & all z.(Stella(z) -> Lempus(z))))", "(all x.(Stella(x) -> -Dumpus(x)) & (Vus(x) -> -Vus(x)) & (Lempus(x) -> -Stella(x)))", "all x y z.((Stella(x) & Dumpus(y) & Vumpus(z)) -> (-Dumpus(x) & -Vumpus(x) & -Lempus(x)))", "(all x.(Stella(x) -> -Dumpus(x)) & (Vumpus(x) | Lempus(x))))", "(all x y.((Stella(x) & Dumpus(y)) -> -Dumpus(x)) & ((Stella(x) & Vumpus(x))) | (Stella(x) & Lempus(x))))", "all x y z.((Stella(x) & Dumpus(y)) -> (-Dumpus(x) & Vumpus(z) & Lempus(x)))", "all x y z.((Stella(x) & Dumpus(y) & Vumpus(z)) -> (-Dumpus(x) & Loompus(x)))", "(all x.(Stella(x) -> -Dumpus(x)) & (Vumpus(x) | Lempus(x))))", "all x y z.((Stella(x) & Dumpus(y) & Vumpus(z)) -> (-Dumpus(x) & Vumpus(x) & Lempus(x)))", "all x y z.((Stella(x) & Dumpus(y) & Vumpus(z)) -> -Dumpus(x)) & (Vumpus(x) & Lempus(x)))", "(all x.(QuickFix(x) -> -Dumpus(x)) & exists y.(Vumpus(y) & -QuickFix(y))))", "all x y z.((Stella(x) & Dumpus(y) & Vumpus(z)) -> (-Dumpus(x) & Vumpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_774", "nl": "Rompuses are yumpuses.", "fol": "all x. (rompus(x) -> yumpus(x))", "prediction": ["all x.(rompus(x) -> Yumpe(x))", "all x.(Rompe(x) -> Yumpe(x))", "all x.(Rompe(x) -> Yampus(x))", "all x.(Rompuse(x) -> Yumpee(x))", "all x.(Rompus(x) -> Yumpas(x))", "all x.(Rompus(x) -> Yampuse(x))", "all x.(Rompus(x) -> Yampus(x))", "all x.(Rompus(x) -> Yampus(x))", "all x.(Rompus(x) -> Yumpe(x))", "all x.(Rompus(x) -> Yampus(x))", "all x.(Rompus(x) -> Yampus(x))", "all x.(Rompus(x) -> Yampus(x))", "all x.(Rompe(x) -> Yumpe(x))", "all x.(Romulus(x) -> Yampus(x))", "all x.(Rompus(x) -> Yampus(x))", "all x.(Roompus(x) -> Yumpus(x))"]}
{"id": "prontoqa_train_775", "nl": "Sam is a lorpus, Sam is an impus, and Sam is not a yumpus.", "fol": "(lorpus(Sam) & impus(Sam) & -yumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Lopus(x)) & (Sam(x) -> Imperium(x)) & (Sam(x) -> -Yumpus(x)))", "(all x.(Sam(x) -> Lordpus(x)) & (Sam(x) -> Impossible(x)) & (Sam(x) -> -Yumpus(x)))", "(all x.(Sam(x) -> HasLorpus(x)) & all y.(Sam(y) -> HasImperial(y))) & all z.(Sam(z) -> -HasYumpus(z))))", "(all x.(Sam(x) -> Lordpus(x)) & all y.(Sam(y) -> Impossible(y)) & all z.(Sam(z) -> -Yumpus(z)))", "(all x.((Sam(x) & Lorpus(x)) -> Impossible(x)) & all y.((Sam(y) & -Yumpus(y)) -> Illuminate(y)))", "(all x y.((Sam(x) & Lorpus(y)) -> CanBe(x,Y)) & ((Sam(x) & Anxivo(x)) -> CanBe(x,Y))) & ((Sam(x) & Anxivo(x)) -> -Yumpus(x)))", "all x.((Sam(x) & Lorpus(x)) -> Obsidian(x)) & -Yumpus(x))", "all x y z.((Sam(x) & Lorpus(x) & Impossible(y)) -> (Lepidus(y) & -Yumpus(z)))", "all x.(Sam(x) -> (Lorpus(x) & Is(x) & -Yumpus(x)))", "(all x.(Sam(x) -> Lorpus(x)) & all y.(Sam(y) -> Imperative(y))) & all z.(Sam(z) -> -Yumpus(z)))", "all x y z.((Sam(x) & Lurpus(y) & Is(z)) -> (Painter(x) & Is(x,z) & -Yumpus(x)))", "all x y z.((Sam(x) & Lorpus(y) & IsNoty(z)) -> (Lorpus(x) | IsNoty(x) & -Yumpus(x)))", "(all x.(Sam(x) -> Longevity(x)) & all y.(Sam(y) -> Imperemptive(y))) & all z.(Sam(z) -> -Yumpus(z)))", "(all x.(Sam(x) -> Lorpus(x)) & (Sam(x) -> Imperative(x)) & (Sam(x) -> -Yumpus(x)))", "all x y.((Sam(x) & Lorpus(x) & Impossible(y)) -> -Yumpus(x))", "(all x.(Sam(x) -> Lorpus(x)) & all y.(Sam(y) -> Ilirpos(y)) & all z.(Sam(z) -> -Yumpus(z))))"]}
{"id": "prontoqa_train_776", "nl": "Sam is a rompus and Sam is a lempus and Sam is not a numpus.", "fol": "(rompus(Sam) & lempus(Sam) & -numpus(Sam))", "prediction": ["all x y.((Sam(x) & Rompus(x)) -> (Lempus(x) & -Numerus(y)))", "all x y.((Sam(x) & Rompus(x) & Lempus(y)) -> -Numpus(x))", "all x y.((Sam(x) & Rompus(x)) -> (Rompus(x) & Lempus(x) & -Sam(y)))", "(all x.(Sam(x) -> Rompus(x)) & (Lempus(x) & -Numpus(x)))", "exists x.(Mammal(x) & Rompus(x) & Lempus(x) & -Numpus(x))", "all x y z.((Sam(x) & Rompus(x) & Lempus(y) & Numpus(z)) -> (Rompus(x) & Lempus(y) & -Numpus(z)))", "(all x.((SamePose(x) & Rompus(x)) -> Lempus(x)) & ((SamePose(x) & -Numpus(x)) -> Rhopus(x)))", "(all x.(Sam(x) -> (Rompus(x) & Lempus(x))) & (Sam(x) -> -Numpus(x))))", "all x.((Sam(x) & Rompus(x) & Lempus(x)) -> (-Numpus(x))))", "all x y z.((Sam(x) & Rompus(x)) & Lempus(y) & Numpus(z)) -> (Rompus(x) & Lempus(y) & -Numpus(z)))", "(all x y z.(Rompus(x) & Rampus(y) & Lempus(z)) & (Numpus(z) | -Rompus(z)))", "(all x.(Rompus(x) -> SamSamSam(x)) & all y.(Lempus(y) -> SamShares(y))) & all z.(Numpus(z) -> SamSamSam(z)))", "all x y z.((Sam(x) & Rompus(y) & Lempus(z)) -> (Rompus(x) & Lempus(z) & -Numpus(x)))", "all x y z.((Sam(x) & Rompus(x) & Lempus(y) & Numpus(z)) -> (Rompus(x) & Lempus(y) & -Numpus(z)))", "all x y.(Rompus(x) & Lempus(y) & -Numpus(x) & Sam(y))", "(all x.(Rompus(x) -> Sam(x)) & (Lempus(x) -> Sam(x)) & -Numpus(x)))"]}
{"id": "prontoqa_train_777", "nl": "Sam is not a wumpus.", "fol": "-wumpus(Sam)", "prediction": ["(-Wumpus(Sam))", "(NoWumpus(Sam) -> Wacky(Sam))", "all x.(Sam(x) -> -Wumpus(x))", "all x.(Sam(x) -> -Wumpus(x))", "all x.(Sam(x) -> -Wumpus(x))", "Sam is not Wumpus.", "(-Wumpus(Sam))", "all x.(Sam(x) -> -Wumpus(x))", "-Wumpus(Sam)", "-Wumpus(Sam)", "(-Wumpus(Sam) & -Wumpus(Sam))", "(-Wumpus(sam))", "all x.(Sam(x) -> -Wumpus(x))", "all x.(Sam(x) -> -Wumpus(x))", "all x.(Sam(x) -> -Wumpus(x))", "all x.(Wumpus(x) -> -Wumpus(x))"]}
{"id": "prontoqa_train_778", "nl": "Every dumpus is a vumpus.", "fol": "all x. (dumpus(x) -> vumpus(x))", "prediction": ["all x.(Dupus(x) -> Vumpus(x))", "all x.(Dumpus(x) -> Venopus(x))", "all x.(Dumpus(x) -> Voompus(x))", "all x.(Dumpus(x) -> Vumpus(x))", "all x.(Dumpus(x) -> Vumpus(x))", "all x.(Dumpus(x) -> Voompus(x))", "all x.(Dumpus(x) -> Vumpus(x))", "all x.(Dumpus(x) -> Vumpus(x))", "all x.(Dumpus(x) -> Vumpus(x))", "all x.(Dumpus(x) -> Vampus(x))", "all x.(Dumpus(x) -> Vulpe(x))", "all x.(Dumpus(x) -> Vumpus(x))", "all x.(Dumpus(x) -> Vumpus(x))", "all x.(Dupus(x) -> Vumpus(x))", "all x.(Dumpus(x) -> VUMPUS(x))", "all x.(Dumpus(x) -> Vumpus(x))"]}
{"id": "prontoqa_train_779", "nl": "Polly is not a vumpus and Polly is a tumpus and Polly is a wumpus.", "fol": "(-vumpus(Polly) & tumpus(Polly) & wumpus(Polly))", "prediction": ["(all x.(White(x) -> -Vumpus(x)) & all y.(Tompus(y) -> Tumpus(y))) & all z.(White(z) -> Wumpus(z)))", "all x y z.((Polly(x) & Vumpus(y) & Tumpus(z) & Bumpy(x)) -> (-Vumpus(y) & Tumpus(z) & Wumpus(z))))", "(all x.(Plant(x) -> -Vumpus(x)) & exists y.(Tumpus(y) & exists z.(Wumpus(z) & -Vumpus(z)))) & exists w.(Wumpus(w) & -Vumpus(w)))", "all x y z w.((Polly(x) & Voluptuous(y) & Tumpus(z) & Wumpus(w)) -> (-Vumpus(x) & Tumpus(x) & Wumpus(x)))", "(all x.(Vumpus(x) -> -Vumpus(x)) & all y.(Tumpus(y) -> -Vumpus(y))) & all z.(Wumpus(z) -> -Vumpus(z)))", "(all x y z.(Polly(x) -> -Vumpus(x)) & (Polly(y) -> Tumpus(y))) & (Polly(z) -> Wempus(z)))", "(all x.(Polly(x) -> -Vumpus(x)) & all y.(Poly(y) -> Tumpus(y))) & all z.(Polly(z) -> Wumpus(z))))", "(all x.(Vumpus(x) -> Polly)) & any y.(Tumpus(y) -> Polly)))", "(all x.(Polly(x) -> -Vumpus(x)) & all y.(Polly(y) -> Tumpus(y))) & all z.(Polly(z) -> Wumpus(z)))", "all x y z.((Polly(x) & Vumpus(x) & Tumpus(y) & Wumpus(z)) -> (-Vumpus(x) & Tumpus(y) & Wumpus(z)))", "(all x.(Polly(x) -> -Vumpus(x)) & all y.(Polly(y) -> Toumpus(y))) & all z.(Polly(z) -> Wumpus(z)))", "(all x.(Polly(x) -> -Vumpus(x)) & (Polly(x) -> Tumpus(x)) & (Polly(x) -> Wumpus(x)))", "all x y z.((Polly(x) & Vumpus(y) & Tumpus(z)) -> (-Vumpus(x) & Tumpus(y) & Wumpus(z)))", "All x.(Polily(x) -> (-Vumpus(x) & Nutus(x) & Wumpus(x)))", "all x y z.((Polly(x) & NoVumpus(x) & Polly(y) & Tumpus(z)) -> (-Vumpus(x) & Tumpus(y) & Wumpus(z)))", "(all x.(Polly(x) -> (-Vumpus(x) & Tumpus(x))) & all y.(Polly(y) -> Wumpus(y))))"]}
{"id": "prontoqa_train_780", "nl": "Polly is not a dumpus.", "fol": "-dumpus(Polly)", "prediction": ["(-Dumps(polly))", "(exists x.(Polly(x) & -Dumpus(x)))", "all x.(Polly(x) -> -Dumpus(x))", "(Fooly(Polly) & -Dumpus(Poly))", "all x.(Polly(x) -> -Dumpus(x))", "polly.((Plural(poly) & -Dumpus(poly))", "(-ShetsDumps(Polly))", "is notDumpus(Polly)", "exists x.(Polly(x) & -Dumpus(x))", "Polly & -Dumpus(Polly)", "exists x.(Polly(x) & -Dumpus(x))", "is a (Dumpus(Polby) & -Dumpus(Poly))", "-Dumpus(Polly)", "all x.(Polly(x) -> -Dumpus(x))", "polly.((Popular(p) & -Dumps(p))", "polly!"]}
{"id": "prontoqa_train_781", "nl": "Zumpuses are wumpuses.", "fol": "all x. (zumpus(x) -> wumpus(x))", "prediction": ["all x.(Zumpus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wumpus(x))", "all x.(Zumpuse(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wampus(x))", "all x.(Zumpus(x) -> Wempus(x))", "all x.(Zombie(x) -> Wampus(x))", "all x.(Zumpus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wumpus(x))", "all x.(Zumpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_782", "nl": "Fae is not a wumpus, Fae is a sterpus, and Fae is a dumpus.", "fol": "(-wumpus(Fae) & sterpus(Fae) & dumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Wumpus(x)) & (Fae(x) -> Stopus(x)) & (Fae(x) -> Dumpus(x)))", "(all x.(Fae(x) -> -Wumpus(x)) & all y.(Fae(y) -> Sterpus(y)) & all z.(Fae(z) -> Dumpus(z)))", "all x y z.((Fae(x) & -Wumpus(x) & -Sterpus(y) & Dumpus(z)) -> (-Fae(x) & Sterpus(y) & Dumpus(z)))", "all x y z.((Fae(x) & -Wumpus(x) & Sterpus(y) & Dumpus(z)) -> (-Fae(x) | Sterus(y) & Dumpus(z)))", "(all x.(Fae(x) -> -Wumpus(x)) & all y.(Fae(y) -> Sterepus(y)) & all z.(Fae(z) -> Dumpus(z))))", "(all x y z.((Fae(x) & Wumpus(y)) -> -Wumpus(x)) | ((Fae(z) & Y) | ((Fae(z) & Sterpus(z))))))", "(all x y z.((Fae(x) & Wumpus(y)) -> -Wumpus(x)) & ((Fae(z) & Sterpus(z))) -> Dumpus(z)))", "(all x.(Fae(x) -> -Wumpus(x)) & ((Fae(x) & Sterpus(x)) | (Fae(x) & Dumpus(x))))", "(all x.(Fae(x) -> -Wumpus(x)) & all y.(Fae(y) -> Sterepus(y)) & all z.(Fae(z) -> Dumpus(z))))", "(all x.(Fae(x) -> -Wumpus(x)) & all y.(Fae(y) -> Sterpus(y)) & all z.(Fae(z) -> Dumpus(z)))", "(all x.(Fae(x) -> -Wumpus(x)) & (Fae(x) -> Sterpus(x)) & (Fae(x) -> Dumpus(x)))", "all x y.((Fae(x) & -Wumpus(x)) -> (Sterpus(x) & Dumpus(y)))", "(all x.(Fae(x) -> -Wumpus(x)) & all y.(Fae(y) -> Sterpus(y)) & all z.(Fae(z) -> Dumpus(z))))", "all x y z.((Fae(x) & Wumpus(y) & Stropus(z)) -> (-Wumpus(x) & Sterpus(y) & Dumpus(z)))", "all x y z.((Fae(x) & Hunkere(y) & Sterpus(z)) -> (-Wumpus(x) & Sterepus(y) & Dumpus(z)))", "(all x.(Wumpus(x) -> -Wumpus(x)) & (Sterpus(x) -> Dumpus(x)))"]}
{"id": "prontoqa_train_783", "nl": "Fae is a sterpus and Fae is not a shumpus and Fae is a brimpus.", "fol": "(sterpus(Fae) & -shumpus(Fae) & brimpus(Fae))", "prediction": ["all x y z.((Fae(x) & Sterepus(y) & Snompus(z)) -> (Sherpus(x) & -Shumpus(y) & Brimpus(z)))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Brimpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Brimpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & all y.(Fae(y) -> -Shumpus(y))) & all z.(Fae(z) -> Brimpus(z)))", "(all x.(Fae(x) -> Sterpus(x)) & (-Fae(x) -> Humpus(x)) & (-Fae(x) -> Brimpus(x)))", "(all x y.(Fae(x) -> Sterpus(x)) & (Fae(y) -> NoShumpus(y)) & (Fae(y) -> Brimpus(y)))", "(all x.(Fae(x) -> Sterepus(x)) & (-Shumpus(x) & -Brimpus(x))))", "all x y.((Fae(x) & Sterosum(y)) -> (Attracts(x,y) & -Shumpus(y) & Brumpus(y)))", "(all x.(Fae(x) -> Strong(x)) & all y.(Fae(y) -> -Shumpus(y)) & all z.(Fae(z) -> Brimpus(z))))", "all x.(Fae(x) -> (Stubpus(x) & -Shumpus(x) & Brimpus(x)))", "all x y.((Fae(x) & Steerpus(x) & Fae(y)) -> (-Shumpus(y) & Brimpus(y)))", "all x y z.(Fae(x) & Sterepus(y) & (Stereo(z) | -Shumpus(z) | Brimpus(z))) -> (Fae(x) & -Shumpus(v)))", "(all x y z w.(Fae(x) -> Sterpus(x)) & ((Fae(x) & -Shumpus(y)) & (Fae(z) -> Brimpus(z))))", "(all x.(Fae(x) -> sterpus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Brimpus(x)))", "all x y z.((Fae(x) & Sterpus(x) & Fae(y) & Brimpus(z)) -> (-Shumpus(y) & -Shumpus(y)))", "all x y z.((Fae(x) & Sterus(x) & Fae(y) & Scumpus(z)) -> (Teris(x) & -Shumpus(y) & Brimpus(y)))"]}
{"id": "prontoqa_train_784", "nl": "Every yumpus is a grimpus.", "fol": "all x. (yumpus(x) -> grimpus(x))", "prediction": ["all x.(Yumpus(x) -> Grimpus(x))", "all x.(Yumpus(x) -> Grimpus(x))", "all x.(Yumpus(x) -> Grimpus(x))", "all x.(Yumpus(x) -> Grimpus(x))", "all x.(Yumpus(x) -> Grimpus(x))", "all x.(Yumpus(x) -> Grimpus(x))", "all x.(Yumpus(x) -> Grimpus(x))", "all x.(Yumpus(x) -> Grimpus(x))", "all x.(yumpus(x) -> Grimpus(x))", "all x.(Yumpus(x) -> Gruppus(x))", "all x.(Yumpus(x) -> Gruppus(x))", "all x.(Yumpus(x) -> Grupus(x))", "all x.(Yumpus(x) -> Grumps(x))", "all x.(Yumpus(x) -> Grimpus(x))", "all x.(Yumpus(x) -> Grimpus(x))", "all x.(Yumpus(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_785", "nl": "Sam is not a grimpus, Sam is a zumpus, and Sam is a gorpus.", "fol": "(-grimpus(Sam) & zumpus(Sam) & gorpus(Sam))", "prediction": ["(all x.(Sam(x) -> (-Purpus(x) | Zumpus(x)) | Gorpus(x)))", "(all x.(Sam(x) -> -Grimpus(x)) & (Sam(x) -> Zumpus(x)) & (Sam(x) -> Gorpus(x)))", "(all x.(Sam(x) -> -Grimpus(x)) & all y.(Sam(y) -> Zumpus(y)) & all z.(Sam(z) -> Gorpus(z))))", "all x.((Sam(x) & -Grimpus(x)) -> Zumpus(x)) & (Sam(x) -> Gorpus(x)))", "(all x.(Sam(x) -> -Grimpus(x)) & all y.(Sam(y) -> Zumpus(y))) & all z.(Sam(z) -> Gorpus(z))))", "(all x.(Sam(x) -> -Grimpus(x)) & all y.(Sam(y) -> Zumpus(y)) & all z.(Sam(z) -> Gorpus(z))))", "are:(Sam(Sam) & -Grimpus(Sam)) | (Sam(Sam) & Zurpus(Sam))) | (Sam(Sam) & Gorpus(Sam)))", "all x y z.((Sam(x) & Grimpus(y) & Zumpus(z)) -> (-Grimpus(x) & Zumpus(y) & Gorpus(z)))", "all x.((Sam(x) & -Grimpus(x)) | (Sam(x) & Zumpus(x)) | (Sam(x) & Gorpus(x))))", "all x y z.((Sam(x) & Grimpus(y) & Zumpus(z)) -> (-Sam(x) & Topper(x) & Gorpus(x)))", "all x.((Sam(x) & -Grimpus(x)) | (Sam(x) -> Zumpus(x)) | (Sam(x) -> Gorpus(x))))", "all x y z.((Sam(x) & Grimpus(y) & Zumpus(z)) -> (-SamGrimps(x) & Zumpus(x) & Gorpus(x)))", "all x y z.((Sam(x) & Grimpus(y) & Zumpus(z)) -> (-Sam(x) & Gorpus(x)))", "(all x.(Sam(x) -> -Gruppus(x)) & (Sam(x) -> Zumpus(x)) & (Sam(x) -> Gorpus(x)))", "(all x.(Sam(x) -> -Grisp(x)) & (Sam(x) -> Zumpus(x)) & (Sam(x) -> Gorpus(x)))", "all x.(Sam(x) -> (-Grimpus(x) & Zumpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_786", "nl": "Each tumpus is a jompus.", "fol": "all x. (tumpus(x) -> jompus(x))", "prediction": ["exists x.(Tumpus(x) & Jimpus(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompus(x))"]}
{"id": "prontoqa_train_787", "nl": "Sam is not a jompus and Sam is a yumpus and Sam is a rompus.", "fol": "(-jompus(Sam) & yumpus(Sam) & rompus(Sam))", "prediction": ["(all x.((Sam(x) & -Jompus(x)) -> Yompus(x)) & all y.((Sam(y) & Rompus(y)) -> Yumpus(y)))", "all x y z.((Jampus(x) & Yompus(y) & Rompus(z)) -> (-Jompus(x) & Yampus(y) & Rompus(z)))", "all x y z.((Sam(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) & Yumpus(z) & Rompus(z)))", "(all x.(Jompus(x) -> -Jimpus(x)) & all y.(Yumpus(y) -> -Maropus(y)))", "(all x.(Sam(x) -> -Jompus(x)) & (Yumpus(x) & Rompus(x)))", "(all x.(Jompus(x) -> -Jompus(x)) & all y.(Yumpus(y) -> Yumpus(y)))", "(all x.(Sam(x) -> -Jompus(x)) | (Sam(x) -> Yumpus(x))) | (Sam(x) -> Rompus(x))))", "(all x.(Sam(x) -> -Jompus(x)) & (Yumpus(x) | Rompus(x))))", "all x y z.((Sam(x) & Jompus(y) & Yumpus(z) & Rompus(x)) -> (-Jompus(x) & Yumpus(x) & Rompus(x)))", "(all x.(Sam(x) -> -Jompus(x)) & (Yumpus(x) | Rompus(x))))", "(all x y.(Jompus(x) -> -Jompus(x)) & (Yumpus(y) -> Yumpus(y)) & (Rompus(y)))", "(all x.(Sam(x) -> -Jompus(x)) & all y.(Sam(y) -> Yupus(y)) & all z.(Sam(z) -> Rompus(z))))", "(all x.(Sam(x) -> -Jompus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> Rompus(x)))", "(all x.(Sam(x) -> -Jompus(x)) & all y.(Yumpus(y) & All z.(Rompus(z) & -Jompus(y))))", "(all x.((Sam(x) & -Jompus(x)) -> Yampus(x)) & ((Sam(x) & Yumpus(x)) -> Rompus(x)))", "all x y z.((Sam(x) & Jompus(x) & Yumpus(y) & Rompus(z)) -> (-Jompus(x) & Yampus(y) & Rompus(z)))"]}
{"id": "prontoqa_train_788", "nl": "Each jompus is a yumpus.", "fol": "all x. (jompus(x) -> yumpus(x))", "prediction": ["(exists x.(Jompus(x) & Yumps(x)))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jumpus(x) -> Yampus(x))", "all x.(Yumpus(x) -> Jompus(x))", "exists x.(Jempus(x) & Yampus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jimpus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpa(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpa(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yampus(x))", "all x.(Jompus(x) -> Yumpus(x))"]}
{"id": "prontoqa_train_789", "nl": "Sally is not a yumpus, Sally is a rompus, and Sally is a vumpus.", "fol": "(-yumpus(Sally) & rompus(Sally) & vumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Yumpus(x)) & all y.(Rompus(y) & all z.(Vumpus(z))))", "all x y z.((Sally(x) & Yampus(y) & Rompus(z) & Vinpus(x)) -> -Yumpus(x))", "(all x.(Sally(x) -> -Yumpus(x)) & all y.(Rompus(y) & all z.(Vimpus(z)) -> -Yumpus(x)))", "(all x,y,z) -> -Yumpus(y)) | (Rompus(z) & Vampire(z))))", "(all x.(Sally(x) -> -Yumpus(x)) & ((Sally(x) & Rompus(x))) -> Vubis(x)))", "(-yumpus(Sally)) & (Rompus(Sally) & Vumpus(Sally)))", "(all x.(Sally(x) -> -Yumpus(x)) & all y.(Sally(y) -> Rompus(y)) & all z.(Vumpus(z) -> -Yumpus(y))))", "(all x.(Yumpus(x) -> -Yumpus(x)) & (Rompus(x) -> -Yumpus(x)) & (Vumpus(x) -> -Yumpus(x))))", "(all x.(Yumpus(x) -> -Yumpus(x)) & all y.(Rompus(y) -> -Yumpus(y))) & all z.(Vimpus(z) -> -Yumpus(z))))", "all x y z.((Sally(x) & -Yumpus(x)) -> (Rompus(y) & Vampire(z)))", "(all x.(Sally(x) -> -Yumpus(x)) & all y.((Sally(y) & Rompus(y))) -> Voompus(y)))", "(all x.(Sally(x) -> -Yumpus(x)) & ((Sally(x) & Rompus(x)) -> Vulmpus(x)))", "all x.(ValentsSally(x) -> (-Yumpus(x) | (Rompus(x) & Vumpus(x))))", "(all x.(Yumpus(x) -> -Yumpus(x)) & all y.(Rompus(y) -> -Yumpus(y))) & all z.((YoungVimpus(z) & Sally(x)) -> Slumpus(z)))", "(all x.(Sally(x) -> -Yumpus(x)) & all y.(Sally(y) -> Rompus(y)) & all z.(Sally(z) -> Vumpus(z))))", "(all x.(Sally(x) -> -Yumpus(x)) & (Sally(x) -> Rompus(x)) & (Sally(x) -> Vumpus(x)))"]}
{"id": "prontoqa_train_790", "nl": "Fae is a dumpus and Fae is not a lempus and Fae is a grimpus.", "fol": "(dumpus(Fae) & -lempus(Fae) & grimpus(Fae))", "prediction": ["(all x.(Fae(x) -> Dumpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Grimpus(x)))", "(all x.(Fae(x) -> Dumpus(x)) & (Fae(x) -> -Lempus(x)) | (Fae(x) -> Grimpus(x))))", "(Dumps(Fae) | None(Fae)) | (Grillpus(Fae))))", "(all x y.(Fae(x) -> Dumpus(x)) & (Fae(y) -> -Lempus(y)) & (Fae(y) -> Gruppus(y)))", "(all x.(Fae(x) -> Dumpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Grimpus(x)))", "(all x y.(Fae(x) -> Dumpus(x)) & (Fae(y) -> -Lempus(y)) & (Fae(y) -> Grimpus(y)))", "all x y z.((Fae(x) & Dumpus(x) & Fae(y) & Grimpus(z)) -> (-Lempus(y) & Grrumpus(z)))", "(all x y z.((Fae(x) & Dumpus(x)) -> -Limpus(y) & ((Fae(z) & Rampus(z))) -> Grimpus(z)))", "(all x.(Fae(x) -> Dumpus(x)) & all y.(Fae(y) -> -Lempus(y)) & all z.(Fae(z) -> Grimpus(z))))", "(all x y z.((Fae(x) & Puss(y) & Lempus(z)) -> (Dumpus(x) & -Lempus(x) & Grappus(y)))", "(all x.(Fae(x) -> Dumpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Grimpus(x)))", "(all x y.((Fae(x) & Dumpus(x)) -> Dumpus(x)) & ((Fae(y) & -Lempus(y)) -> Grimpus(y)))", "all x y z.((Fae(x) & Dumpus(x) & Fae(y) & Grimpus(z)) -> (-Lempus(y) | Grimpus(z))))", "(all x y z.((Fae(x) & Dumpus(x)) -> Awakening(x)) & ((Fae(y) & -Lempus(y)) -> Grimpus(y)))", "(all x.(Fae(x) -> Dumpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Grimpus(x)))", "(all x.(Fae(x) -> Dumpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Grimpus(x)))"]}
{"id": "prontoqa_train_791", "nl": "Alex is not a grimpus and Alex is a numpus and Alex is a lorpus.", "fol": "(-grimpus(Alex) & numpus(Alex) & lorpus(Alex))", "prediction": ["all x y.((Alex(x) & Grimpus(x) & Number(y) & Lorpus(z)) -> -Grimpus(x) & Numpus(y) & Lordpus(z))", "(all x.(Alex(x) -> -Grimpus(x)) & all y.(Numpus(y) & Loomus(b))))", "all x y.((Alex(x) & Grimpus(y)) -> (-Smooth(x) & Numpus(y) & Lorpus(x)))", "all x,(Alex(x) -> (-Grimpus(x) | (-Grimpus(x) & Numpus(x) & Loompus(x))))", "(all x.(Alex(x) -> -Grampus(x)) & all y.(Numpus(y) & All z.(Lorpus(z))) -> -Grabe (y) & All w.(Horoduse(w) & All w.(Handling(w)))))", "all x.(Alex(x) -> (-Grimpus(x) & -Numpus(x) & -Lorpus(x)))", "all x y z.((Alex(x) & Grimpus(y) & Numpus(z) & Lorpus(z)) -> (-Smoking(x) & -Nimbus(y) & -Summer(z) & Lurpus(x)))", "all x y z.((Alex(x) & Grimpus(y) & Numpus(z) & Lorpus(x)) -> (-Gruppus(x) & Numpus(y) & Lorpus(z)))", "(all x.(Alex(x) -> -Grimpus(x)) & (Numpus(x) & Lambus(x))))", "(all x.(Alex(x) -> -Grimpus(x)) & all y.(Numpus(y) & Lombus(y))))", "(all x y.((AlexAlex(x) & -Grimpus(x)) -> Numpus(y)) & ((AlexAlex(x) & Lorpus(y)) -> Nox(x)))", "all x y.((Alex(x) & Grimpus(y) & Numb(y)) -> (-Grimpus(x,y) & -Nompus(y) & -Lorpus(y)))", "all x y z.((Alex(x) & Grimpus(y) & Numpus(z)) -> (-Grampus(x) & Lure(x)))", "(all x.(Alex(x) -> NoGrimpus(x)) & all y.(Numpus(y) & Loomis(y)))", "(All x.(Alex(x) -> -Grimpus(x)) & (Numpus(x) & Lopul(x)))", "all x y z.((Alex(x) & Grimpus(y) & Numpus(z)) -> (-Grimpus(x) & Nompus(y) & Lorpus(z)))"]}
{"id": "prontoqa_train_792", "nl": "Sally is a vumpus, Sally is not an impus, and Sally is a yumpus.", "fol": "(vumpus(Sally) & -impus(Sally) & yumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> -Issues(x)) & (Sally(x) -> Yumpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & (-Impossible(x) & Yumpu(x)))", "all x y z.((Sally(x) & Umpus(y) & Yumps(z)) -> (Vumpus(x) | -Impossible(y) | Impossible(z))))", "(all x.(Sally(x) -> -Impossible(x)) & (Sally(x) -> Yumpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & ((Sally(x) & -Impulse(x))) & ((Sally(x) & Yumpus(x))))", "(all x y z.((Sally(x) & Vumpus(y) & OneOf(z)) -> (Vumpus(x) & -Iris(y)) | ((Sally(z) & OneOf(z))) -> Yumpus(z)))", "(all x.(Sally(x) -> Vumpus(x)) & all y.(Sally(y) -> -Issue(y))) & all z.(Sally(z) -> Yumpus(z)))", "(all x.(Sally(x) -> Vumpus(x)) & ( (Sally(x) -> -Impossible(x))) & (Sally(x) -> Yumbos(x))))", "(all x.(Sally(x) -> Vumpus(x)) & (-Impossible(x) & Yumpus(x)))", "(all x.(Sally(x) -> Virus(x)) & (NoIssue(x) & -Yumpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & ((Sally(x) & -Idemne)) -> Yumpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & (-Impossible(x)) & (Yumpus(x) -> NullImpossible(x)))", "(all x.(Vumpus(x) & -Impossible(x)) & (Yumpus(x) | Yes(x)))", "(all x.(Sally(x) -> Vulmpus(x)) & (-Opponent(x) -> Implicator(x)) & (Yumpus(x) -> Vampus(x)))", "(all x.(Sally(x) -> Vomess(x)) & (Sally(x) -> -Impossible(x)) & (Sally(x) -> Yampus(x)))", "(all x.(Sally(x) -> Visum(x)) & (-Verizoom(x) & Ilias(x)) & (Yumpus(x))))"]}
{"id": "prontoqa_train_793", "nl": "Polly is a zumpus, Polly is a jompus, and Polly is not a tumpus.", "fol": "(zumpus(Polly) & jompus(Polly) & -tumpus(Polly))", "prediction": ["(all x.(Pillow(x) -> Zumpus(x)) & (Pillow(x) -> Jompus(x)) & (Pillow(x) -> -Tumpus(x)))", "(all x y z.(Polly(x) -> Tompus(x)) & (Polly(y) -> Jompus(y)) & -Tompus(z)))", "(all x.(Polly(x) -> Zumpus(x)) & all y.(Polly(y) -> Jompus(y)) & all z.(Polly(z) -> -Tumpus(z))))", "all x y z.((Polly(x) & Zumpus(x)) -> (Jimpus(x) & -Tumpus(y)))", "(all x.(Polly(x) -> Zumpus(x)) & all y.(Polly(y) -> Jompus(y)) & all z.(Polly(z) -> -Tumpus(z)))", "(all x.(Polly(x) -> Zumpus(x)) & all y.(Polly(y) -> Jompus(y)) & all z.(Polly(z) -> -Tumpus(z))))", "all x y z.((Polly(x) & Zumpus(x) & Jompus(y) & -Tumpus(z)) -> (As(x,y,z) & -As(x,z)))", "(all x.(Polly(x) -> Zumpus(x)) & all y.(Polly(y) -> Jompus(y)) & all z.(Polly(z) -> -Tompus(z))))", "all x y z.((Polly(x) & Zumpus(x) & Jompus(y) & -Tumpus(z)) -> (Zumpus(x) | Jompus(y) & -Tompus(z)))", "all x y z.((Polly(x) & Toad(x) & Jompus(y) & Tumpus(z)) -> ((Stompus(x) | Jompus(y)) & -Tumpus(z))))", "(all x y z.((Polly(x) & Zumpus(y)) -> (Tompus(x) | Jompus(y))) & ((Polly(z) & Numpus(z))) -> -Tompus(z)))", "(all x y z.(Polly(x) -> Zumpus(x)) & (Polly(y) -> Jompus(y)) & (Polly(z) -> -Tumpus(z))))", "all x y z.((Polly(x) & Polly(y) & Tommu(z)) -> (Zumpus(x) & Jompus(y) & -Tumpus(z)))", "(all x.(Polly(x) -> Zumpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> -Tumpus(x)))", "(all x.(Ploy(x) -> Zumpus(x)) & (Ploy(x) -> Jompus(x)) & (Ploy(x) -> -Tumpus(x)))", "(all x.(Shiny(x) -> Polly)) & all y.(Jompus(y) -> Polly)) & -Tumpus(y)))"]}
{"id": "prontoqa_train_794", "nl": "Fae is a vumpus, Fae is a dumpus, and Fae is not an impus.", "fol": "(vumpus(Fae) & dumpus(Fae) & -impus(Fae))", "prediction": ["(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> -Imperial(z))))", "(all x.(Fae(x) -> Vuzesu(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> -Impossive(z))))", "(all x.(Fae(x) -> Vimesue(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> -Implose(x)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> Dumpus(x)) & -Imiter(x)))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & -Impossible(y)))", "all x y.((Fae(x) & Fae(y)) -> (Vumpus(x) | Dumpus(y) | -Impuls(y)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> -Impossible(x)))", "exists x.(Fae(x) & Vumpus(x) & Dumpus(x) & -Issue(x))", "(all x.(Fae(x) -> Vimpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> -Impossible(x)))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> -Impossible(z))))", "(all x.(Fae(x) -> V\u00fcmpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> -Impossible(z))))", "all x y z.((Fae(x) & Tumpus(y) & Dumpus(z)) -> (Vumpus(x) & Dumpus(x) & IsNotIssue(x)))", "(all x y z.((Fae(x) & Umpus(y)) -> (Vimpus(x) & Dumpus(y))) & ((Fae(z) & Impossible(z)) -> -Impossible(z)))", "all x.(Fae(x) -> (Vimpus(x) & Dumpus(x) & -Ilvio(x)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> Dumpus(x)) & -Issue(x)))", "(all x.(Fae(x) -> Voompus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> -Ilimination(z)))"]}
{"id": "prontoqa_train_795", "nl": "Every brimpus is a numpus.", "fol": "all x. (brimpus(x) -> numpus(x))", "prediction": ["all x.(Brimpus(x) -> Numpus(x))", "all x.(Brimpus(x) -> Numpus(x))", "all x.(Brimpus(x) -> Numpus(x))", "all x.((Brumpus(x) & Numpus(x)) -> Embrace(x))", "all x.(Brumpus(x) -> Numpus(x))", "all x.(Brumpus(x) -> Numpus(x))", "all x.(Brimpus(x) -> Numpus(x))", "all x.(Brumpus(x) -> Numpus(x))", "all x.(Brumpus(x) -> Numpus(x))", "all x.(Brumpus(x) -> Numpus(x))", "all x.(Blumpus(x) -> Numpus(x))", "all x.(Brompus(x) -> Numpus(x))", "all x.(Brumpus(x) -> Numpus(x))", "all x.(Brimpus(x) -> Numpus(x))", "all x.((Brumpus(x) & Numpus(x)) -> GreatMammal(x))", "all x.(Bribus(x) -> Numpus(x))"]}
{"id": "prontoqa_train_796", "nl": "Fae is a shumpus, Fae is not a numpus, and Fae is an impus.", "fol": "(shumpus(Fae) & -numpus(Fae) & impus(Fae))", "prediction": ["all x y z.((Fae(x) & Shumpus(x) & Fae(y) & Impecia(z)) -> (-Shumpus(y) & Ilias(z)))", "(all x.(Fae(x) -> Humpus(x)) & (Fae(x) -> -Numpus(x)) & (Fae(x) -> Impossible(x)))", "(all x y z.(Fae(x) -> Sempus(x)) & (Fae(y) -> -Numpus(y)) & (Fae(z) -> Imperator(z)))", "(all x.(Fae(x) -> Shumpus(x)) & (Fae(x) -> -Numpus(x)) & (Fae(x) -> Imperative(x)))", "all x y z.((Fae(x) & Shumpus(y) & Numpus(z)) -> (-Fae(x,z) & Issue(x)))", "all x y z.((Fae(x) & Shumpus(y) & Numpus(z)) -> (Shumpus(x) | Numpus(z) & Ilirz(x)))", "(all x.(Fae(x) -> Humpus(x)) & (Fae(x) -> -numpus(x)) & (Fae(x) -> Impermissible(x)))", "(all x.(Fae(x) -> Shumpus(x)) & (Fae(x) -> -Numpus(x)) & (Fae(x) -> Impossible(x)))", "exists x.(Fae(x) & Shumpus(x) & -Shumpus(x) & Implicator(x))", "(all x.(Fae(x) -> (Shumpus(x))) & (Fae(x) -> -Numpus(x)) & (Fae(x) -> Issuu(x))))", "(all x.(Fae(x) -> Shumpus(x)) & (Fae(x) -> -Numpus(x)) & (Fae(x) -> Idilator(x)))", "(all x.(Fae(x) -> Shumpus(x)) & (Fae(x) -> -Numpus(x)) & (Fae(x) -> impusor(x)))", "all x.(Fae(x) & (Shumpus(x) | -Numpus(x) | Impossible(x)))", "(all x.(Fae(x) -> Shumpus(x)) & all y.(Fae(y) -> -Numpus(y)) & all z.(Fae(z) -> Imperator(z)))", "all x y z.((Fae(x) & Fae(y) & Norm(z)) -> (Shumpus(x) & -Numpus(x) & Issue(y)))", "(all x y.((Fae(x) & Humpus(y)) -> IsRuffled(x)) & ((Fae(x) & -Numpus(y)) -> IsRuffled(x)))"]}
{"id": "prontoqa_train_797", "nl": "Fae is not a brimpus.", "fol": "-brimpus(Fae)", "prediction": ["-Brimpus(Fae)", "(-Blimpus(Fae))", "(Brimpus(Fae) & -Brumpus(Fae))", "-Brompus(Fae)", "exists x.(Fae(x) & -Brimpus(x))", "(-Brimpus(Fae))", "(NoBrumpus(Fae) & -Brumpus(Fae))", "all x.(Fae(x) -> -Brimpus(x))", "all x.(Fae(x) -> -Brimpus(x))", "-Brimpus(Fae)", "(-Brimpus(Fae))", "(Brimpus(Fae))", "-(Brumpus(fae) & -Brumpus(fae))", "(-Brimpus(Fae))", "(Brimpus(Fae))", "-Brimpus(Fae)"]}
{"id": "prontoqa_train_798", "nl": "Zumpuses are dumpuses.", "fol": "all x. (zumpus(x) -> dumpus(x))", "prediction": ["all x.(Zumpus(x) -> Dumpuse(x))", "all x.(Zumpus(x) -> Dumpuse(x))", "all x.(Zumpus(x) -> Dumpuse(x))", "all x.(Zumpus(x) -> Dumpuse(x))", "all x.(Zumpus(x) -> Dumpuse(x))", "all x.(Zumpus(x) -> Dumpuse(x))", "all x.(Zumpus(x) -> (Dumbus(x) & Dumpuse(x)))", "all x.(Zumpus(x) -> Dumpuse(x))", "all x.(Zumpus(x) -> Dumpuse(x))", "all x.(Zumpus(x) -> Dumpuse(x))", "all x.(Zumpus(x) -> Dumpuse(x))", "all x.(Zumpus(x) -> Dumpus(x))", "all x.(Zumpus(x) -> Dumpuse(x))", "all x.(Zumpus(x) -> Dumpuse(x))", "all x.(Zombies(x) -> Dumpuse(x))", "all x.((Zumpus(x) & Dumpuse(x)) -> Dumpus(x))"]}
{"id": "prontoqa_train_799", "nl": "Fae is a lempus, Fae is a grimpus, and Fae is not a dumpus.", "fol": "(lempus(Fae) & grimpus(Fae) & -dumpus(Fae))", "prediction": ["exists x.(Fae(x) & Lempus(x) & Grimpus(x) & -Dumpus(x))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Grimpus(y)) & -Dumpus(y)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Grimpus(y)) & all z.(Fae(z) -> -Dumpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Grimpus(x)) & -Dumpus(x)))", "(all x y z.(Fae(x) -> Lempus(x)) & (Fae(y) -> Grimpus(y)) & (Fae(z) -> -Dumpus(z)))", "(all x y z.(Fae(x) -> Lempus(x)) & (Fae(y) -> Grimpus(y)) & (Fae(z) -> -Dumpus(z)))", "all x y z.((Fae(x) & Lempus(x) & Grimpus(y) & -Dumpus(z)) -> (Lempus(x) & Grappus(y) & -Dumpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> -Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Grimpus(x)) & -Duskus(x)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Grimpus(y)) & all z.(Fae(z) -> -Dumus(z))))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Grimpus(x)) & (Fae(x) -> -Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Grimpus(x)) & -Dumps(x)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Grimpus(y)) & all z.(Fae(z) -> -Dumpus(z))))", "all x y z.((Fae(x) & Lempus(y) & Grimpus(z)) -> (Lempus(x) & Grimpus(y) & -Dumpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Grimpus(x)) & -Dumpus(x)))", "all x.(Fae(x) -> (Limpus(x) & Grimpus(x) & -Dumpus(x)))"]}
{"id": "prontoqa_train_800", "nl": "Each lorpus is a lempus.", "fol": "all x. (lorpus(x) -> lempus(x))", "prediction": ["all x.(Lorpus(x) -> Lempus(x))", "all x.(Lorpus(x) -> Lempus(x))", "all x.(Lorpus(x) -> Lempus(x))", "all x.(Lorpus(x) -> Lempus(x))", "all x.(Lorpus(x) -> Lempus(x))", "all x.(Lorpus(x) -> Lempus(x))", "all x.(Lorpus(x) -> Lempus(x))", "all x.(Lorpus(x) -> Lempus(x))", "all x.(Lorpus(x) -> Lempus(x))", "all x.(Lorpus(x) -> Lempus(x))", "all x.(Lorpus(x) -> Lempus(x))", "all x.(Lorpus(x) -> Lempus(x))", "all x.(Lorpus(x) -> Lempus(x))", "all x.(Lorpus(x) -> Lempus(x))", "all x.(Lorpus(x) -> Lempus(x))", "all x.(Lorpus(x) -> Lempus(x))"]}
{"id": "prontoqa_train_801", "nl": "Rex is not a lempus and Rex is a grimpus and Rex is a vumpus.", "fol": "(-lempus(Rex) & grimpus(Rex) & vumpus(Rex))", "prediction": ["(all x.(Rex(x) -> -LEMPOS(x)) & all y.(Grimpus(y) & -Vumpus(y))))", "(all x.(Rex(x) -> -Lempus(x)) & all y.(Rainbuck(y) -> Grimpus(y)) & all z.(Vimpus(z) -> Rex(z)))", "all x.((Rex(x) & -Lempus(x)) -> (Grimpus(x) & Vampus(x)))", "(all x.(Rex(x) -> -Lempus(x)) & all y.(Prawpus(y) -> Rex)) & all z.(Vumpus(z) -> Rex)))", "(all x.(Rex(x) -> -Lempus(x)) & (Rex(x) -> Grimpus(x)) & (Rex(x) -> Vampus(x)))", "(all x.(Rex(x) -> -Lempus(x)) & all y.(Grimpus(y) -> Voompus(y)))", "all x,y,z.((Rex(x) & Lempus(x) & Grimpus(y) & Vampius(z)) -> -Lempus(x) & Grimpus(y) & Vampius(z)))", "(all x.(Rex(x) -> -Lempus(x)) & all y.(Grimpus(y)) -> Rumpus(y)))", "(all x.(Rex(x) -> -Lempus(x)) & (Rex(x) -> Grimpus(x)) & (Rex(x) -> Vumpus(x))))", "(all x.(Rex(x) -> -Lempus(x)) & all y.(Grimpus(y) & All z.(Vimpus(z))))", "all x y.((Rex(x) & Lempus(x) & Grimpus(y) & Vumpus(x)) -> -Lempus(x))", "all x y z.((Rex(x) & Lempus(y) & Grimpus(z)) -> (-Lempus(x) & Grimpus(x) & Vumpus(x)))", "all x.((Rex(x) & -Lempus(x)) | (Grimpus(x) & Vumpus(x))))", "(all x.(Rex(x) -> -Lempus(x)) & all y.(Smudgepus(y) -> -Umpus(y)))", "all x y z.((Rex(x) & Lempus(y) & Grimpus(z)) -> (-Lempus(x) & Grappa(x) & Vsumpus(x)))", "(all x y.(Rex(x) -> -Lempus(x)) & (Grimpus(y) | Voompus(y))))"]}
{"id": "prontoqa_train_802", "nl": "Rex is not a lorpus.", "fol": "-lorpus(Rex)", "prediction": ["Rex\u00ae is notLorpus(Rex)", "all x.(Rex(x) -> -Lorpus(x))", "NoLorpus(Rex)", "Rex is not a lorpus.", "All x.(Rex(x) -> -Lorpus(x))", "-Ladderpus(Rex)", "all x.(Rex(x) -> -Lorpus(x))", "all x.(Rex(x) -> -Lorpus(x))", "Rex is not a lorpus.", "Rex-Lorpus(x)", "Rex is notLorpus(rex)", "-Lorpus(Rex)", "(-Lorpus(Rex))", "Rex is not a lorpus.", "Rex is not a lorpus.", "(Lorpus(Rex) -Lorpus(Rex))"]}
{"id": "prontoqa_train_803", "nl": "Dumpuses are brimpuses.", "fol": "all x. (dumpus(x) -> brimpus(x))", "prediction": ["all x.(Dumpuse(x) -> Brimpus(x))", "all x.(Dumpuse(x) -> Brimpuse(x))", "all x.(Dumpuse(x) -> Brimpuse(x))", "all x.(Dumpuse(x) -> Brimpus(x))", "all x.(Dumpuse(x) -> Brimpuse(x))", "all x.(Dumpus(x) -> Brimbus(x))", "all x.(Dumpuse(x) -> Brimpuse(x))", "all x.(Dumpuse(x) -> Brimpuse(x))", "all x.(Dumpuse(x) -> Brimbus(x))", "all x.(Dumpuse(x) -> Brimpus(x))", "all x.(Dumpuse(x) -> Brimpuse(x))", "all x.(Supreme(x) -> Brimpuse(x))", "all x.(Dumpuse(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimbus(x))", "all x.(Dumpuse(x) -> Brimpuse(x))", "all x.(Dumpuse(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_804", "nl": "Sally is a rompus and Sally is not a brimpus and Sally is a lempus.", "fol": "(rompus(Sally) & -brimpus(Sally) & lempus(Sally))", "prediction": ["(all x y.(Rompus(x) -> Sally(x)) & (Eco-Brumpus(y) -> Sally(y)))", "(all x.(Sally(x) -> Rompus(x)) & (-Brimpus(x) & -Lempus(x)))", "all x y z.((Sally(x) & Rompus(x) & Brimpus(y) & Lempus(z)) -> (Rompus(x) | Brimpus(y) | Lempus(z)))", "(all x.(Sally(x) -> Romax)) & (Sally(x) -> -Brumpus(x)) & (Sally(x) -> Lempus(x)))", "(all x.(Sally(x) -> Rompus(x)) & (-Brimpus(x) & Lempus(x)))", "all x y.((Sally(x) & Rrompus(x) & -Brumpus(y) & Lempus(x)) -> rompus(x))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Brimpus(x)) & (Sally(x) -> Lempus(x)))", "(all x y.((Sally(x) & Roman(x)) -> Rombus(x)) & ((Sally(y) & -Brimpus(y)) -> Lempus(y)))", "(exists x.(Rompus(x) & Sally(x)) & -exists y.(Brimpus(y) & Sally(z))) & exists w.(Lempus(w) & Sally(z))))", "(all x y.((Sally(x) & Rompus(x)) -> Rimpus(x)) & ((Sally(y) & -Brumpus(y)) -> Lempus(y)))", "all x.((Sally(x) & Rompus(x)) -> (-Brimpus(x) & Lempus(x)))", "exists x.(Sally(x) & Roman(x) & -Brimpus(x) & Lempus(x))", "exists x.(Sally(x) & Raccoon(x) & -Brumpus(x) & Lempus(x))", "(all x.(Sally(x) -> Rose(x)) & (-Brumpus(x)) & (-Sally(x) -> Lempus(x)))", "all x.((Sally(x) & Rompus(x)) -> (-brimpus(x) & Lempus(x)))", "(all x.(Rompus(x) -> SallyEaseOf(x)) & (NoBrimpus(x) -> SallyEaseOf(x)))"]}
{"id": "prontoqa_train_805", "nl": "Impuses are wumpuses.", "fol": "all x. (impus(x) -> wumpus(x))", "prediction": ["all x.(Impuse(x) -> Wumpus(x))", "all x.(Impuse(x) -> Wumpus(x))", "all x.(Imperium(x) -> Wumpus(x))", "all x.(Impuse(x) -> Wumpus(x))", "all x.(Impuce(x) -> Wampus(x))", "all x.(Impuse(x) -> Umbrella(x))", "all x.(Impus(x) -> Wumpus(x))", "all x.(Impuse(x) -> Wumpus(x))", "all x.(Imbus(x) -> Wumpus(x))", "all x.(Impuse(x) -> Wumpus(x))", "all x.(Impus(x) -> Wumpus(x))", "all x.(Immuse(x) -> Wampan(x))", "all x.(Impuse(x) -> Wumpus(x))", "all x.(Impus(x) -> Wumpus(x))", "all x.(Imbus(x) -> Wumpus(x))", "all x.(Impue(x) -> Umbrella(x))"]}
{"id": "prontoqa_train_806", "nl": "Sally is a vumpus, Sally is a sterpus, and Sally is not a wumpus.", "fol": "(vumpus(Sally) & sterpus(Sally) & -wumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Vumpus(x)) & all y.(Sisterpus(y) -> -Wumpus(y)))", "(all x.(Sally(x) -> Vubise(x)) & (Sally(x) -> Sterepus(x)) & (Sally(x) -> -Wumpus(x)))", "(all x y z.(Sally(x) -> Vumpus(x)) & (Sally(y) -> Sterpus(y)) & (Sally(z) -> -Wumpus(z)))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> Steroid(x)) & (Sally(x) -> -Wumpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> Sterpus(x)) & -Wumpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> Sterpus(x)) & -Wumpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & all y.(Sally(y) -> Sterpus(y)) & all z.(Sally(z) -> -Wumpus(z))))", "(all x y z.(Sally(x) -> Vimpus(x)) & ((Sally(y) & Sterpus(y)) -> (-Wumpus(z))))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> Sterpus(x)) & (Sally(x) -> -Wumpus(x))))", "exists x y.((Sally(x) & Vumpus(x)) -> Sterpus(x)) & -Wumpus(y))", "Sally is a vumpus(Sally) & -Wumpus(Sally))", "All x.(Sally(x) -> (Vumpus(x) | Sterpus(x) & -Wumpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) & (Sally(x) -> Sterpus(x)) & (Sally(x) -> -Wumpus(x)))", "(all x.((Sally(x) & Vampus(x)) -> Sterpus(x)) & ((Sally(x) & -Wumpus(x)) -> Sterpus(x)))", "(all x y z.((Sally(x) & Vampire(y) & Sterpus(z)) -> Vampire(x)) & ((Sally(x) & Sterpus(x)) -> -Wumpus(x)))", "(all x.(Sally(x) -> Vampus(x)) & (Sally(x) -> Sterpus(x)) & (Sally(x) -> -Wumpus(x)))"]}
{"id": "prontoqa_train_807", "nl": "Rex is a zumpus and Rex is not a yumpus and Rex is a grimpus.", "fol": "(zumpus(Rex) & -yumpus(Rex) & grimpus(Rex))", "prediction": ["(all x.(Rex(x) -> Zurpus(x)) & (Yumpus(x) & Grimpus(x))))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Yumpus(y) -> -Yumpus(y)) & all z.(Cleanpus(z) -> (Rex) & Grimpus(z))))", "(all x.(Rex(x) -> Tolpo(x)) & (-Yumpus(x) & Grappa(x))))", "all x y z.((Rex(x) & Tossus(x) & Rex(y) & Grimpus(z)) -> (Flampus(x) & -Yumpus(y) & Grimpus(z)))", "(all x y z.((Rex(x) & Zumpus(x) & -Yumpus(y)) -> Grimpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & (-Yumpus(x) & (Grimpus(x) -> Grimpus(x))))", "all x y z.((Rex(x) & Zumpus(x) & Rex(y) & Grimpus(z)) -> (Jumpus(y) & -Yumpus(y) & Grimpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> -Yumpus(x)) & (Rex(x) -> Grimpus(x)))", "all x y z.((Rex(x) & Zumpus(x) & Rex(y) & Grimpus(z)) -> (-Yumpus(y) & Crusader(z)))", "(all x.(Rex(x) -> Zumpus(x)) & (-Yumpus(x) | Grimpus(x))))", "(all x y.((Rose(x) & Zumpus(x)) -> Unusable(x)) & ((Rose(y) & -Yumpus(y)) -> Unusable(y)))", "all x y.((Rex(x) & Toubis(x)) -> (-Yumpus(x) & Grimpus(y)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> -Yumpus(y))) & all z.((Rex(z) & Grouchpus(z)) -> Grimpus(z)))", "all x y z.((Rex(x) & Zumpus(x) & Rex(y) & Grimpus(z)) -> (IsDumpus(x) & -IsYumpus(y) & IsGrimpus(y)))", "all x y.((Rex(x) & Zumpus(x) & -Yumpus(y)) -> Grimpus(x))", "all x.(Rex(x) -> (Sumpus(x) & -Yumpus(x) & Grimpus(x)))"]}
{"id": "prontoqa_train_808", "nl": "Rex is not a jompus.", "fol": "-jompus(Rex)", "prediction": ["No Jompus (Rex,increasingly!)", "(NoJompus(Rex))", "all x.(Rex(x) -> -Jimpus(x))", "Rex,EarlyJompus(rep)", "(-Jompus(Rex))", "Rex is not a Jompus.", "Rex (noJompus(x))", "Rex, Inc. (Jompus(x) & -Jochpus(x))", "all x.(Rex(x) -> -Jompus(x))", "Rex is not a Jompus.", "Rex, /NoJompus(rex))", "\u2014 Jompus(Rex)", "-Jompus(Rex)", "Rex is not a jompus.", "Rex, Inc., is a holotype(x)", "all x.(Rex(x) -> -Jompus(x))"]}
{"id": "prontoqa_train_809", "nl": "Each grimpus is a shumpus.", "fol": "all x. (grimpus(x) -> shumpus(x))", "prediction": ["all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x.(Swagpus(x) -> Grimpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Gruffus(x) -> Humpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Smompus(x) -> Grimus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "(all x.(Gravity(x) -> Spompus(x)))", "all x.(Grampus(x) -> Humpus(x))"]}
{"id": "prontoqa_train_810", "nl": "Fae is a gorpus and Fae is not a shumpus and Fae is a brimpus.", "fol": "(gorpus(Fae) & -shumpus(Fae) & brimpus(Fae))", "prediction": ["(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Brimpus(x)))", "(all x.(Fae(x) -> Gorpus)) & all y.((Fae(y) & -Shumpus)) -> Brimpus(y)))", "(all x y.((Fae(x) & Gorpus(x)) -> Gorpus(x)) & ((Fae(y) & -Shumpus(y))) -> Brimpus(y)))", "(all x y z.(Fae(x) -> Gorpus(x)) & ((Fae(y) & -Shumpus(y))) -> Brimpus(z)))", "all x y.((Fae(x) & Gorpus(x) & Fae(y)) -> (-Shumpus(y) & Brimpus(y)))", "(all x.(Fae(x) -> Gorpus(x)) & all y.(Fae(y) -> -Shumpus(y)) & all z.(Fae(z) -> Brimpus(z))))", "all x y z.((Fae(x) & Gorpus(x) & Fae(y) & Humpus(z)) -> (-Shumpus(y) & Brimpus(z)))", "all x y.((Fae(x) & Gorpus(x) & Fae(y)) -> (-Shumpus(y) & Brimpus(y)))", "(all x.(Field(x) -> Gorpus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Brimpus(x)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Brimpus(x)))", "(all x y z.((Fae(x) & Gorpus(x)) -> Rigorous(x)) & ((Fae(y) & -Shumpus(y)) -> Brimpus(z)))", "all x.(Fae(x) -> (Gorpus(x) & -Shumpus(x) & -Brimpus(x)))", "all x y z.((Fae(x) & Gorpus(x) & -Shumpus(y) & Brimpus(z)) -> (Gorpus(x) & Brimpus(y)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Shumpus(x)) & (Piny(x) -> Brimpus(x)))", "(all x.(Fae(x) -> Gorpus(x)) & (Fae(x) -> -Shumpus(x)) & (Fae(x) -> Brimpus(x)))", "all x.((Fae(x) & Gorpus(x) & -Shumpus(x) & Brimpus(x)) -> Gorpus(x))"]}
{"id": "prontoqa_train_811", "nl": "Fae is not a grimpus.", "fol": "-grimpus(Fae)", "prediction": ["-Grimpus(Fae)", "all x.(Fae(x) -> -Grimpus(x))", "(-Grimmosus(Fae))", "and -Grimpus.", "all x.(Fae(x) -> -Grimpus(x))", "(-Grosspus(Fae))", "all x.(Fae(x) -> -Grimpus(x))", "Cem & False(f) & -Grimpus(f))", "(-Grimpus(Fae))", "-Grimppus(Fae)", "The Fae is not a Grimpus.", "(-Grimpus(Fae))", "is notGripperUS(fae)", "all x.(Fae(x) -> -Grimmpus(x))", "all x.(Fae(x) -> -Grimpus(x))", "(-Grimpus(Fae))"]}
{"id": "prontoqa_train_812", "nl": "Every grimpus is a rompus.", "fol": "all x. (grimpus(x) -> rompus(x))", "prediction": ["all x.(Grimpus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Grumps(x) -> Rompus(x))", "all x.(Gruppus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Felps(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Grimpus(x) -> Rompus(x))", "all x.(Grimulus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_813", "nl": "Stella is not a rompus and Stella is a lempus and Stella is a gorpus.", "fol": "(-rompus(Stella) & lempus(Stella) & gorpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Rompus(x)) & all y.(Stella(y) -> Lempus(y)) & all z.(Stella(z) -> Gorpus(z))))", "(all x.(Stella(x) -> -Rompus(x)) & (Lempus(x) | Gorpus(x))))", "(exists x.(Stella(x) & -Rompus(x)) & exists y.(Lempus(y) & exists z.(Gorpus(z) & -Rompus(z)))))", "all x y z.((Rompus(x) & Lemma(y) & Gorpus(z)) -> (-Rrompus(x) & Lempus(y) & Gorpus(z)))", "(all x y.(Rompus(x) -> -Rompus(x)) & (Lempus(y) -> -Lempus(y)) & (Gorpus(y)))", "(all x.(Stella(x) -> -Rompus(x)) & (Stella(x) -> Lempus(x)) & (Stella(x) -> Gorpus(x)))", "(all x.(Stella(x) -> -Rompus(x)) | (Stella(x) -> Lempus(x)) | (Stella(x) -> Gorpus(x))))", "all x.(Stella(x) -> CannotRompus(x) & Stella(x) & CannotDrop(x))", "(all x.(Stella(x) -> -Rompus(x)) & (Stella(x) -> Lempus(x)) & (Stella(x) -> Gorpus(x)))", "(LittleRompus(Stella) & LittleLempus(Stella) & Gorpus(Stella))", "(all x.(Stella(x) -> -Rompus(x)) & (Lempus(x) & Gorpus(x)))", "(all x y.(Rompus(x) -> -Rompus(x)) & (Lempus(y) -> Lempus(y)) & (Gorpus(y))))", "(all x.(Stella(x) -> -Rrompus(x)) | (Lempus(x) & Gorpus(x))))", "(all x.(Stella(x) -> -Rompus(x)) & (Stella(x) -> Lempus(x)) & (Stella(x) -> Gorpus(x)))", "all x.((Rompus(x) & Lempus(x) & Gorpus(x)) -> -Rompus(x))", "(all x y.((Stella(x) & Rimpus(x)) -> -Rompus(x)) & ((Stella(y) & Lempus(y)) -> Gorpus(y)))"]}
{"id": "prontoqa_train_814", "nl": "Each grimpus is a lorpus.", "fol": "all x. (grimpus(x) -> lorpus(x))", "prediction": ["all x.(Rumpus(x) -> Lorpus(x))", "exists x.(Grimpus(x) & Lordus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x.(OriginalGrimpus(x) -> Lorpus(x))", "all x.(Rawpus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Wormpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x.(Grampus(x) -> Lorpus(x))", "all x.(Grimpus(x) -> Lorpus(x))", "all x.(Grampus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_815", "nl": "Max is a numpus and Max is a dumpus and Max is not a lorpus.", "fol": "(numpus(Max) & dumpus(Max) & -lorpus(Max))", "prediction": ["all x y z.((Max(x) & Numpus(x) & Dumpus(y) & Lorus(z)) -> ((Number(x) & Dumpus(y) & -Lorpus(z))))", "-Lego(Max) & (numpus(Max) | dumpus(Max)))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> -Lorpus(x)))", "((Max(Max) & Numpus(Max)) & (Dumpus(Max)) & -Lorpus(Max))", "all x y z.((Max(x) & Numpus(y) & Dumpus(z)) -> (Numpus(x) & Dumpus(z) & -Lorpus(z)))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> -Lorpus(x))))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> -Lorpus(z))))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Dumpus(y))) & all z.(Max(z) -> -Lorpus(z))))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> -Lorpus(x)))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> -Lorpus(x)))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> -Lorpus(z)))", "all x y.((Max(x) & Numpus(x) & Dumpus(y)) -> (Element(x,y) & -Lorpus(x)))", "all x.((Max(x) & Numpus(x)) -> Dumpus(x)) & -Lorpus(x))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> -Lorpus(x)))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> -Lorpus(x)))", "all x.(Max(x) -> (numpus(x) & dumpus(x) & -lorpus(x)))"]}
{"id": "prontoqa_train_816", "nl": "Wumpuses are tumpuses.", "fol": "all x. (wumpus(x) -> tumpus(x))", "prediction": ["all x.(Wumpuse(x) -> Thumpus(x))", "all x.(Wurmpuse(x) -> Tumulus(x))", "all x.(Wumpus(x) -> Tumpus(x))", "all x.(Wumpus(x) -> Tumpus(x))", "all x.(Wumpus(x) -> Tumpus(x))", "all x.(Wumpus(x) -> Tumpus(x))", "all x.(Wumpus(x) -> Tumpus(x))", "all x.(Wumpus(x) -> Tumulus(x))", "all x.(Wumpus(x) -> Tumpus(x))", "all x.(Wumpus(x) -> Tumpus(x))", "all x.(Wumpuse(x) -> Tumulus(x))", "all x.(Wuschus(x) -> Tanus(x))", "all x.(Wumpus(x) -> Tumpus(x))", "all x.(Wumpus(x) -> Tumpus(x))", "all x.(Wumpus(x) -> Tumpus(x))", "they are tumpuses."]}
{"id": "prontoqa_train_817", "nl": "Polly is not a tumpus and Polly is a yumpus and Polly is a rompus.", "fol": "(-tumpus(Polly) & yumpus(Polly) & rompus(Polly))", "prediction": ["((Polly(Polly) & -Tumpus(Polly)) | (Polly(Poly) & Yumpus(Poly))))", "(all x y z.((Tumpus(x) & Polly(y)) -> (-Tumpus(y) & -Yumpus(y))) & ((Tumpus(z) & Polly(z)) -> Rompus(z)))", "(all x.(Polly(x) -> -Tumpus(x)) & (Polly(x) -> Yampus(x)) & (Poly(x) -> Rompus(x)))", "(all x.(Polly(x) -> -Tumpus(x)) & all y.(Polly(y) -> Yumpa(y))) & all z.(Polly(z) -> Rompus(z)))", "(all x y z.(Polly(x) -> (Nut(x) & Tumpus(y))) & all z w.((Polly(z) & Yampus(w)) -> (Yumpus(x) & Rompus(z))))", "all x y z.((Polly(x) & Tomp(y) & Rompus(z)) -> (-Tumpus(x) | (Yumpus(y) & Yumpus(z))))", "(all x.(Polly(x) -> -Tumpus(x)) & (Polly(x) -> Yumpsum(x)) & (Polly(x) -> Rompus(x)))", "(all x.(Polly(x) -> -Tumpus(x)) & (Polly(x) -> Yumpus(x)) & (Polly(x) -> Rimpus(x)))", "all x y z.((Polly(x) & Tumpus(y) & Yampus(z) & Rompus(x)) -> (-Tumpus(x) & -Yumpus(y) & -Rompus(z)))", "(all x y z.((Polly(x) & Tumpus(y) & Yumpus(z)) -> -Tumpus(x)) & ((Polly(x) & Yumpus(x)) -> Rompus(x)))", "all x y z.((Polly(x) & Tompus(y) & Yampus(z)) -> (-Tumpus(x) | Polly(x) & Rompus(x)))", "(all x.(Tumpus(x) -> -Tumpus(x)) & (Yumpus(x) -> Yumpus(x)) & (Rrompus(x) -> -Tumpus(x)))", "all x y z.((Pollly(x) & Tumpus(y) & Yampus(z)) -> (-Tumpus(x) & Yup(y) & Rompus(z)))", "(all x.((Polyna(x) & -Tumpus(x)) -> Yampus(x)) & ((Polly(x) & Rompus(x))))", "(all x.(Ploy(x) -> -Tumpus(x)) & (Yampus(x) | Rompus(x))))", "(all x.(Protagonist(x) -> -Tumpus(x)) & (Potato(x) -> Yampus(x)) & (Rompus(x) -> Rimpus(x)))"]}
{"id": "prontoqa_train_818", "nl": "Each numpus is a dumpus.", "fol": "all x. (numpus(x) -> dumpus(x))", "prediction": ["all x.(Nompus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Nompus(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Nompus(x) -> Dumpus(x))", "all x.(Number(x) -> Dumpus(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Dumpus(x) -> Urn(x))", "all x.(Numpus(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_819", "nl": "Fae is not a dumpus, Fae is a brimpus, and Fae is a tumpus.", "fol": "(-dumpus(Fae) & brimpus(Fae) & tumpus(Fae))", "prediction": ["(all x.(Wheel(x) -> -Dumps(x)) & (Brumpus(x) & Tumpus(x)))", "(all x.(Fae(x) -> -Dumpus(x)) & all y.(Fae(y) -> Brimpus(y)) & all z.(Fae(z) -> Tumpus(z))))", "(all x y z.((Fae(x) & Dumpus(y)) -> -Dumpus(x)) & ((Fae(z) & Brimpus(z)) -> Bumpus(z))))", "(all x y z.((Faemu(x) & Dumpus(y)) -> -Dumpus(x)) & ((Faemu(z) & Brimpus(z))) -> Tumpus(z)))", "(-Dumpus(Fae) & Brimpus(Fae) & Tumpus(Fae))", "(exists x.(Fae(x) & -Dumpus(x))) & exists y.(Brimpus(y) & Fimpus(z))))", "(all x y z.(Adopts(x,y) -> -Dumpus(x) | (Excels(y) | Completion(z,x)))) & (Brimpus(y) | Tumpus(z)))", "(all x y z.(Fae(x) -> -Dumpus(x)) & ((Fae(y) & Brimpus(y)) | (Fae(z) & Tumpus(z)))))", "(all x.(Fae(x) -> -Dumpus(x)) & (Fae(x) -> Brimpus(x)) & (Fae(x) -> Tumpus(x))))", "(all x.(Fae(x) -> -Dumpus(x)) & (Fae(x) -> Brimpus(x)) & (Fae(x) -> Tumpus(x)))", "all x y z w.((Fae(x) & Bumpus(y) & Tumpus(z)) -> (-Dumpus(x) & -Brumpus(y) & -Dumpus(z)))", "(all x.(Fae(x) -> -Dumpus(x)) & all y.(Fisher(y) -> Brimpus(y)) & all z.(Fae(z) -> Tumpus(z))))", "(all x.(Fae(x) -> -Dumpus(x)) & (Brimpus(x) | Tumpus(x)))", "all x y z.((Fae(x) & Bumpus(y) & Tumpus(z)) -> (-Dumpus(x) & Brimpus(y) & Tumpus(z)))", "all x.(Fae(x) -> (-Dupus(x) & Brimpus(x) & Tumpus(x)))", "(all x.(Fae(x) -> -Duke(x)) & (Fae(x) -> Brimpus(x)) & (Fae(x) -> Tumpus(x)))"]}
{"id": "prontoqa_train_820", "nl": "Rex is not a jompus and Rex is a wumpus and Rex is a numpus.", "fol": "(-jompus(Rex) & wumpus(Rex) & numpus(Rex))", "prediction": ["(all x.(Rex(x) -> (-Jompus(x) & -Wumpus(x) & -Numpus(x)))", "(all x.(Rex(x) -> -Jompus(x)) & (Wumpus(x) | Numpus(x))))", "(all x.(Jompus(x) -> -Jompus(x)) & (Wumpus(x) -> Nompus(x)))", "(all x.(Rex(x) -> -Jompus(x)) & (Wumpus(x) & Numpus(x)))", "(all x.(Rex(x) -> -Jimpus(x)) & (Rex(x) -> Wumpus(x)) & (Rex(x) -> Numpus(x)))", "(-Jompus(rex) & Wumpus(rex) & Numpus(rex))", "all x y z.((Jompus(x) & Wumpus(y) & Numpus(z)) -> (-Jompus(x) & Wumpus(y) & Numpus(z)))", "(Jimpus(Rex) & Wumpus(Rex) & Numpus(Rex))", "(-Jompus(Rex) | Wumpus(Rex) | Numpus(Rex)))", "all x y.((Rex(x) & Jompus(y)) -> (-Jonus(x) & Wumpus(x) & Numpus(x)))", "(all x.(Rex(x) -> -Jompus(x)) & (Wumpus(x) & Numerus(x)))", "all x y z.((Jompus(x) & Wumpus(y) & Numpus(z)) -> (-Jompus(x) & Willy(y) & Willy(z)))", "(-Jompus(Rex) & Wumpus(Rex) & Numpus(Rex))", "(all x.(Rex(x) -> -Jompus(x)) & all y.(Wumpus(y) -> Numpus(y)))", "(all x.(Rex(x) -> -Jompus(x)) & all y.(Wumpus(y) & -Numpus(y))))", "all x y z.((Rex(x) & Yuppie(y) & Wompus(z)) -> (-Jompus(x) & -Wumpus(y) & -Numpus(z)))"]}
{"id": "prontoqa_train_821", "nl": "Stella is a brimpus, Stella is a lorpus, and Stella is not a rompus.", "fol": "(brimpus(Stella) & lorpus(Stella) & -rompus(Stella))", "prediction": ["(all x.(Brompus(x) -> Stella(x)) & (Lorpus(x) -> Stella(x)) | (Holiday(x) -> Stella(x))))", "(all x.(Stella(x) -> Brimpus(x)) & (Lorpus(x) -> Roompus(x)))", "(all x y z.(Brimpus(x) -> (Stella(y) & Brimpus(y))) & (Lorpus(z) -> (Lorpus(z) & -Rompus(z))))", "(all x.(Stella(x) -> Brimpus(x)) & (Lorpus(x) -> Throat(x)) & NoRompus(x)))", "(all x y z.((Stella(x) & Brimpus(y) & Lordpus(z)) -> Brimpus(x)) & ((Stella(x) & Lorpus(y)) -> -Rompus(x)))", "(all x y.((Stella(x) & Brimpus(y)) -> (Brimpus(x) & -Lorpus(y)))", "all x y z.((Stella(x) & Brimpus(x) & Lorpus(y) & Rimpus(z)) -> (Brimpus(x) & Lorpus(y) & -Rompus(z)))", "(all x).(Stella(x) -> Brimpus(x)) & all y.(Lorpus(y) -> Lurpus(y)) & -Rompus(y)))", "(all x y.((Stella(x) & Brimpus(y)) -> (Brimpus(x) & -Lorpus(y))) & ((Stella(x) & -Rompus(x)) -> (Lorpus(x) & -Brimpus(y))))", "(all x.(Stella(x) -> Brimpus(x)) & (Lorpus(x) -> Lorpus(x)) & -Rompus(x)))", "(all x y z.(Stella(x) -> Brimpus(x)) & (Tall(y) -> Lorpus(y)) & (Stella(z) -> -Rompus(z)))", "(all x.(Brimpus(x) -> StellaIsBrimpus(x)) & (Lorpus(x) -> StellaIsRompus(x)))", "(all x.(Stella(x) -> Brimpus(x)) & (Stella(x) -> Lorpus(x)) & (Stella(x) -> -Rompus(x))))", "(all x y z.(Zebra(x) -> Brimpus(x)) & (Lorpus(y) -> (Lorpus(y) & -Rompus(z))))", "(all x.(Stella(x) -> Brimpus(x)) & all y.(Stella(y) -> Lorpus(y)) & all z.(Stella(z) -> -Rompus(z))))", "(all x.(Adore(x) -> Brimpus(x)) & (Adore(x) -> Lorpus(x)) & -Adore(x)))"]}
{"id": "prontoqa_train_822", "nl": "Rex is a brimpus and Rex is a lorpus and Rex is not a rompus.", "fol": "(brimpus(Rex) & lorpus(Rex) & -rompus(Rex))", "prediction": ["all x y z.((Rex(x) & Brimpus(x) & Lorpus(y) & -Rompus(z)) -> (Brimpus(x) & -Lorpus(y) & -Rompus(z)))", "(all x.(Rex(x) -> Brimpus(x)) & (Rex(x) -> Lorpus(x)) & (Rex(x) -> -Rompus(x))))", "(all x.(Rex(x) -> Brimpus(x)) & all y.(Rex(y) -> Lorpus(y)) & all z.(Rex(z) -> -rompus(z))))", "(all x.(Rex(x) -> Brimpus(x)) & all y.(Rex(y) -> Lorpus(y)) & all z.(Rex(z) -> -Rompus(z))))", "(all x.(Rex(x) -> Brimpus(x)) & all y.(Rex(y) -> Lorpus(y)) & all z.(Rex(z) -> -Rompus(z))))", "(all x.(Brumpus(x) -> -Rompus(x)) & all y.(Lorpus(y) -> -Rompus(y)))", "(Brimpus(Rex) & Lorpus(Rex) & -Rompus(Rex))", "(Brimpus(Rex) & Lorpus(Rex) & -Rompus(Rex))", "all x y z.((Rex(x) & Brimpus(x) & Lorpus(y) & Rampus(z)) -> (Brimpus(x) & -Lorpus(y)))", "(all x.(Rex(x) -> Brimpus(x)) & all y.(Rompus(y) -> Lorph(y))))", "all x.((Rex(x) & Brimpus(x) & Lorpus(x)) -> -rompus(x))", "all x y z.((Rompus(x) & Brimpus(y) & Lorpus(z)) -> ((Brimpus(x) & Lorpus(x)) & -rompus(y)))", "(all x.(Rex(x) -> Brimpus(x)) & (Lorpus(x) -> Lorpus(x)) & -Rompus(x)))", "(all x.(Rome(x) -> Brimpus(x)) & (Lorpus(x) -> Lorpus(x))) & (Rome(x)))", "all x y z.((Rex(x) & Brimpus(x) & Lorpus(y) & -Rompus(z)) -> (Blimus(x) & Lorpus(y) & -Rompus(z)))", "(all x.(Rex(x) -> Brimpus(x)) & all y.(Lorpus(y) -> -Rompus(y)))"]}
{"id": "prontoqa_train_823", "nl": "Rex is not a shumpus.", "fol": "-shumpus(Rex)", "prediction": ["Rex (a) & -Shumpus(s))", "Die Rex(x) -> NoShumpus(x))", "-Shumpus(Rex)", "Rex -Shumpus(x)", "Rex, x.(Shumpus(x))", "all x.(Rex(x) -> -Shumpus(x))", "all x.(Rex(x) -> -shumpus(x))", "all x.(Rex(x) -> -Shumpus(x))", "all x.(Rex(x) -> -Shumpus(x))", "(-Shumpus(Rex))", "(-Shumpus(Rex))", "Rex(x) & -Shumpus(x))", "Rex is notShumpus(rex)", "(NonShumpus(Rex))", "(-Shumpus(Rex))", "is -Shumpus(rex)"]}
{"id": "prontoqa_train_824", "nl": "Every numpus is a rompus.", "fol": "all x. (numpus(x) -> rompus(x))", "prediction": ["all x.(Numerus(x) -> Roman(x))", "all x.(Nompus(x) -> Rompus(x))", "all x.(Nompus(x) -> Rompus(x))", "all x.(Numpus(x) -> Rompus(x))", "all x.(Nompus(x) -> Rompus(x))", "all x.(Nompus(x) -> Rompus(x))", "all x.(Numpus(x) -> Rompus(x))", "all x.(Numpus(x) -> Rompus(x))", "all x.(Numpus(x) -> Rompus(x))", "all x.(Nompus(x) -> Rompus(x))", "all x.(Nompus(x) -> Rompus(x))", "all x.(Umpus(x) -> Rompus(x))", "all x.(Pump(x) -> Rompus(x))", "all x.(Numpus(x) -> Rompus(x))", "all x.(Numpus(x) -> Rompus(x))", "all x.(Nompus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_825", "nl": "Polly is a wumpus, Polly is not a rompus, and Polly is an impus.", "fol": "(wumpus(Polly) & -rompus(Polly) & impus(Polly))", "prediction": ["(all x y z.((Poly(x) & Wompus(y) & -Rompus(z)) -> Wumpus(x)) & ((Poly(x) & Issue(x)) -> Impossible(x)))", "(all x.((Poly(x) & Wompus(x)) -> Wumpus(x)) & ((Poly(x) & -Rompus(x)) -> Impermissible(x)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> -rompus(x)) & (Polly(x) -> Impossible(x)))", "(all x.(Polly(x) -> Wumpus(x)) & -(Polly(x) & Rompus(x)) | (Poly(x) & Imperator(x))))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> -Rompus(x)) & (Polly(x) -> Issue(x)))", "(all x y.((Polly(x) & Wumpus(x)) -> Wumpus(x)) & ((Poly(y) & -Rompus(y))) -> Issue (Poly(y)))", "all x y z.((Polly(x) & Rumpus(y) & Impossible(z)) -> (Wumpus(x) & -Rompus(y) & Impeccator(z)))", "(exists x.(Poly(x) & Wumpus(x)) & exists y.(Rompus(y) & -Wumpus(y))) & exists z.(Poly(z) & Imperative(z))))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> -Rompus(x)) & (Polly(x) -> Impermane(x))))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> -Rompus(x)) & (Polly(x) -> Impossive(x)))", "(all x.(Mount(x) -> Tumpus(x)) & exists y.(Rompus(y) & -Mount(y))) & exists z.(Uzma(z) & Impossible(z)))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> -Rompus(y))) & all z.(Polly(z) -> Impervato(z))))", "(all x.(Poly(x) -> Wumpus(x)) & ((Poly(x) & -Rompus(x)) | (Poly(x) & Issue(x)))))", "all x y z.((Polly(x) & Rumpus(y) & Imperator(z)) -> (Wumpus(x) & -Rrompus(y) & Imperator(z)))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> -Rompus(y))) & all z.(Polly(z) -> Imperator(z)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> -Rompus(x)) & (Polly(x) -> Impossible(x)))"]}
{"id": "prontoqa_train_826", "nl": "Every zumpus is a tumpus.", "fol": "all x. (zumpus(x) -> tumpus(x))", "prediction": ["all x.(Zumpus(x) -> Tumpus(x))", "all x.(Zuppa(x) -> Tumpus(x))", "all x.(Tompus(x) -> Tusumus(x))", "all x.(Zumpus(x) -> Tumpus(x))", "all x.(Tompus(x) -> Tumpus(x))", "all x.(Zumpus(x) -> Tumpus(x))", "all x.(Zumpus(x) -> Tumpus(x))", "all x.(Tompus(x) -> Tumpus(x))", "all x.(Tompus(x) -> Tumpus(x))", "all x.(Zumpus(x) -> Tumulus(x))", "All x.(Zumpus(x) -> Tumpus(x))", "all x.(Zumpus(x) -> Tumpus(x))", "all x.(Zoompus(x) -> Tumulus(x))", "all x.(Tompus(x) -> Tumpus(x))", "all x.(Tompus(x) -> Tumpus(x))", "all x.(Tompus(x) -> Tumpe."]}
{"id": "prontoqa_train_827", "nl": "Wren is not a tumpus, Wren is a yumpus, and Wren is a rompus.", "fol": "(-tumpus(Wren) & yumpus(Wren) & rompus(Wren))", "prediction": ["(all x.(Wren(x) & -Tumpus(x)) & all y.(Yumpus(y) & All z.(Wren(z) & Rompus(z))) -> -Tumpus(x)))", "(all x.(Wren(x) -> -Tumpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Rompus(z))))", "(all x.(Wren(x) -> -Tumpus(x)) & (Yumpus(x) & Roumpus(x)))", "(all x y z.(Wren(x) -> (-Tumpus(x) & NotTompus(x)))) & ((Wren(y) & -Tompus(y)) -> Yampus(y))) & ((Wren(z) & -Tompus(z)) -> Rompus(z)))", "(all x.(Wren(x) -> -Tumpus(x)) & all y.(Wren(y) -> Yampus(y)) & all z.(Wren(z) -> Rompus(z))))", "(all x.(Wren(x) -> -Tumpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Rompus(z))))", "all x y z.((Wren(x) & Yampus(y) & Rompus(z)) -> (-Tumpus(x) & -Yumpus(y) & -Tumpus(z) & -Rompus(y)))", "all x y z.((Wren(x) & Yompus(y) & Roompus(z)) -> (-Tumpus(x) & Yampus(y) & Rompus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Rompus(z)) -> (-Tumpus(x) & -Yumpus(y) & -Rompus(z)))", "(all x.(Rompus(x) -> -Tumpus(x)) | (Yumpus(x) & Yumpus(x))))", "(all x.(Wren(x) -> -Tumpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Rompus(z)))", "all x y z.((Wren(x) & Yampus(y) & Rompus(z)) -> (-Tumpus(x) | (Yumpus(y) & Rompus(z))))", "(all x.(Wren(x) -> -Tumpus(x)) & all y.((Wren(y) & Humpus(y))) -> Rompus(y)))", "(all x.(Wren(x) -> -Thumps(x)) & all y.(Yumpus(y) & all z.(Wren(z) -> Rompus(z))))", "(all x.(Wren(x) -> -Tumpus(x)) & all y.(Wren(y) -> Yampus(y))) & all z.(Wren(z) -> Rompus(z)))", "(all x y z.((Wren(x) & TUMP(y)) -> -Tumpus(x)) & ((Wren(z) & Yumpus(z)) | (-Wren(z) & Rompus(z)))))"]}
{"id": "prontoqa_train_828", "nl": "Each yumpus is a tumpus.", "fol": "all x. (yumpus(x) -> tumpus(x))", "prediction": ["all x.(Yumpus(x) -> Pumpus(x))", "all x.(Yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Tumid(x))", "all x.(Yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Tumpus(x))", "exists x.(Yumpus(x) & Tumpus(x))", "all x.(Yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Tump(x))", "all x.(Yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_829", "nl": "Stella is not a tumpus, Stella is an impus, and Stella is a brimpus.", "fol": "(-tumpus(Stella) & impus(Stella) & brimpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Isposer(y)) & all z.(Stella(z) -> Brimpus(z))))", "(all x.(Tumpus(x) -> -Tumpus(x)) & (Impromist(x) -> -Tompus(x))) & (Impromist(x) -> Brimpus(x)))", "all x y z.((Stella(x) & Terumpus(y) & Issue(z)) -> (-Tumpus(x) & Issue(x) & IsBrimpus(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Imperempts(y))) & all z.(Stella(z) -> Brimpus(z)))", "all x y z.((Stella(x) & Is(y) & Hush(z)) -> (-Tumpus(x) & Imperative(y) & Brimpus(z)))", "(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Issuela(y)) & all z.(Stella(z) -> Brimpus(z))))", "all x.((Stella(x) & -Tumpus(x)) -> (Impossible(x) | Brimpus(x)))", "All x.(Stella(x) -> (-Tumpus(x) & Sosan(x) & Sosan(x) & Sosan(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & (Stella(x) -> Issue(x)) & (Stella(x) -> Brimpus(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Issue(y)) & all z.(Stella(z) -> Brimpus(z)))", "(all x.(Stella(x) -> -Tompus(x)) & (Stella(x) -> Issue(x)) & (Stella(x) -> Brimpus(x)))", "all x y z.((Stella(x) & Tompkin(y) & Impossible(z)) -> (NoTumpus(x) & -Established(z) & Birmpus(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & (Stella(x) -> Imperative(x)) & (Stella(x) -> Brimpus(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & (Stella(x) -> Issue(x)) & (Stella(x) -> Brimpus(x)))", "exists x.(Stella(x) & -Tumpus(x) & Stella(x) & Issue(x) & Brimpus(x))", "(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Ispose(y)) & all z.(Stella(z) -> Brimpus(z))))"]}
{"id": "prontoqa_train_830", "nl": "Impuses are jompuses.", "fol": "all x. (impus(x) -> jompus(x))", "prediction": ["all x.(Impuse(x) -> Jompuse(x))", "all x.(Imbus(x) -> Jompuse(x))", "all x.(Impuse(x) -> Jompuse(x))", "all x.(Impuse(x) -> Jompuse(x))", "all x.(Impuse(x) -> Jompuse(x))", "all x.(Impuse(x) -> Jompuse(x))", "all x.(Impeduse(x) -> Jompuse(x))", "all x.(Imbus(x) -> Jumpuser(x))", "all x.(Impuss(x) -> Jompuse(x))", "all x.(Impuse(x) -> Jompuse(x))", "all x.(Impuse(x) -> Jompuse(x))", "all x.(Imbus(x) -> Jomper(x))", "all x.(Imbus(x) -> Jockuse(x))", "all x.(Impuss(x) -> Jompuse(x))", "all x.(Impuse(x) -> Jompuse(x))", "all x.(Impeg(x) -> Jombus(x))"]}
{"id": "prontoqa_train_831", "nl": "Max is not a jompus and Max is a lorpus and Max is a dumpus.", "fol": "(-jompus(Max) & lorpus(Max) & dumpus(Max))", "prediction": ["(all x y.((Max(x) & Jompus(y)) -> -Penguin(x)) & ((Max(z) & Lorpus(z)) -> Dumpus(z)))", "all x.(Max(x) -> (-Jompus(x) & -Lorpus(x) & -Dumpus(x)))", "all x.(Max(x) -> (-Jompus(x) & Lurpus(x) & Dumpus(x)))", "all x y.((Max(x) & Jompus(x)) -> (-Jompus(x) & -Lorpus(x) & -Dumpus(y)))", "all x y z.((Max(x) & Jompus(y) & Lorpus(z)) -> -(Jimpus(x) | Lorpus(x) | Dumpus(x)))", "(all x.(Max(x) -> -Jampus(x)) & all y.(Max(y) -> Lopa(y)) & all z.(Max(z) -> Dumpus(z))))", "(exists x.(Max(x) & -Jimpus(x)) & exists y.(Lorpus(y) & -Dumpus(y))))", "(all x y.((Max(x) & Jompus(x)) -> -Mather(x)) & ((Max(y) & Lorpus(y)) -> Dumpus(y)))", "all x y z.((Max(x) & Jompus(y) & Lorpus(z)) -> (-Jompus(x) & -Lorpus(x) & -Dumpus(x)))", "(all x.(Max(x) -> -Jampus(x)) & (Max(x) -> Lorpus(x)) & (Max(x) -> Dumpus(x)))", "(all x y z.((Max(x) & Jompus(y)) -> -Jompus(x)) & ((Max(z) & Lorpus(z))) -> Dumpus(z)))", "all x y.((Max(x) & NoJompus(x)) -> (Lorpus(y) & Dumpus(x)))", "(all x y z.(Max(x) -> Jompus(x)) & (Max(y) -> Lorpus(y)) & ((Max(z) & Dumpus(z))) -> -Jompus(y)) & ((Max(z) & Dumpus(z)) -> -Lorpus(z)))", "all x y z.((Max(x) & Jompus(y) & Lorpus(z)) -> (-Jompus(x) & Dumpus(x)))", "(all x.(Max(x) -> -Jompus(x)) & ((Max(x) & Lorpus(x))) | (Max(x) & Dumpus(x))))", "all x y z.((Max(x) & Jompus(y) & Lorpus(z) & Dumpus(z)) -> (-jompus(x) & Lorpus(y) & Dumpus(z)))"]}
{"id": "prontoqa_train_832", "nl": "Alex is not a zumpus and Alex is a lorpus and Alex is an impus.", "fol": "(-zumpus(Alex) & lorpus(Alex) & impus(Alex))", "prediction": ["all x y z.((Alex(x) & Zumpus(y) & Lorpus(z)) -> (-Tompus(x) & -Lorpus(x) & -Illegal(y)))", "all x y.((Alex(x) & Zumpus(x)) -> (-Tompus(x) & -Lorpus(x) & -Ilitigation(y)))", "(all x y z.(Alex(x) -> \"Zumpus(x) & Toss(y)) & (Alex(z) -> Auxiliary(z)) & (Lorpus(z) & Iligrator(z))))", "(all x y.((Alex(x) & Zumpus(y)) -> -Tompus(x)) & ((Alex(x) & Lorpus(y)) -> Impossible(x)))", "(all x.(Alex(x) -> -Zumpus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> Imperator(z))))", "all x y.((Alex(x) & Zumpus(y)) -> (-Tompus(x) & Alex(y) & Lorpus(y) & Alex(x)))", "(all x.(Alex(x) -> -Zumpus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> Impossible(z)))", "(all x y z.(Alex(x) -> -Zumpus(x)) & (Alex(y) -> Lorpus(y)) & (Alex(z) -> Impects(z))))", "(all x.(Alexa(x) -> -Zumpus(x)) & all y.(Alexa(y) -> Lorpus(y)) & all z.(Alexa(z) -> Imperator(z))))", "(all x.(Alex(x) -> -Zumpus(x)) & (Lorpus(x) & impossible(x)))", "(all x.(Alex(x) -> -Zumpus(x)) & all y.(Lorpus(y) -> Luscionar(y)))", "(all x.(Alex(x) & -Zumpus(x)) & all y.(Lorpus(y) & -Impossible(y))))", "(all x_(Alex(x) & -Zupus(x)) & all y.(Hole(y) & Elements(y))) -> -Tompus(x)) & all z.(Lorpus(z) -> Issue(z)))", "all x y z.((Alex(x) & Zumpus(y) & Lorpus(z)) -> (-Zumpus(x) & Ilias(x)))", "all x y z.((Alex(x) & Zumpus(y) & Lorpus(z)) -> (-Zumpus(x) & Illegal(x)))", "all x.(Alex(x) -> (-Zumpus(x) & -Lorpus(x) & -Illegal(x)))"]}
{"id": "prontoqa_train_833", "nl": "Impuses are lorpuses.", "fol": "all x. (impus(x) -> lorpus(x))", "prediction": ["all x.(Impus(x) -> Flourishes(x))", "all x.(Impuse(x) -> Lorpus(x))", "all x.(Impuse(x) -> Lorpus(x))", "all x.(Impuse(x) -> Leonus(x))", "all x.(Impuse(x) -> Lorpus(x))", "all x.(Impus(x) -> Lorpuse(x))", "all x.(Impuse(x) -> Loxoz.(Lorpuse(x)))", "all x.(Impuse(x) -> Lorpus(x))", "all x.(Impuse(x) -> Lorpus(x))", "all x.(Imitus(x) -> Lorpus(x))", "all x.(Impuse(x) -> Lorpus(x))", "all x.(Impuse(x) -> Lorpus(x))", "all x.(Impusite(x) -> Loomis(x))", "all x.(Impuse(x) -> Lorpus(x))", "all x.(Impuse(x) -> Lepsa(x))", "all x.(Impuse(x) -> Lorpuse(x))"]}
{"id": "prontoqa_train_834", "nl": "Sally is a gorpus, Sally is not a lorpus, and Sally is a rompus.", "fol": "(gorpus(Sally) & -lorpus(Sally) & rompus(Sally))", "prediction": ["(all x.(Sally(x) -> Gorpus(x)) & (-Lorpus(x) & (Rompus(x) & -Lorpus(x))))", "(all x y z.((Sally(x) & Gorpus(x)) -> Scarlet(x)) & ((Sally(y) & -Lorpus(y)) -> Rrompus(z)))", "exists x.(Sally(x) & Gorpus(x) & -Lorpus(x) & Rompus(x))", "(all x.(Sally(x) -> Gorpus(x)) & (-Lorpus(x) & -Rompus(x)))", "all x y z.((Sally(x) & Gorpus(x) & -Lorpus(y) & Rompus(z)) -> (Gorpus(x) | Romanpus(z))))", "(all x.(Sally(x) -> Gorpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Rompus(x))))", "(all x y.((Sally(x) & Gorpus(x)) -> Sally(y)) & ((Sally(y) & -Lorpus(y)) -> Rompus(y)))", "(all x.(Sally(x) -> Gorpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Rompus(x)))", "(all x.(Gorpus(x) -> Gorpus(x)) & (-Lorpus(x) -> Rompus(x)))", "(all x y z.((Sally(x) & Gorpus(y)) -> (Gorpus(z) & -Lorpus(z)) & ((Sally(x) & Rompus(x)) -> (Rompus(z))))", "(all x y z.((Sally(x) & Gorpus(y) & -Lorpus(z)) -> Gorpus(x)) & ((Sally(x) & Rompus(x)) -> Relic(y)))", "all x y z.((Sally(x) & Gorpus(x) & -Lorpus(y) & Rompus(z)) -> (Lorpus(x) & Cockpit(y) & Rompus(z)))", "(all x.(Sally(x) -> Gorpus(x)) & all y.(Sally(y) -> -Lorpus(y)) & all z.(Sally(z) -> Rompus(z))))", "(all x.(Sally(x) -> Gorpus(x)) & (-Lorpus(x)) & (Rompus(x))))", "(all x.(SallyBenchmark(x) -> Gorpus(x)) & (-Lorpus(x) & -Rompus(x)))", "(all x.(Sally(x) -> Gorpus(x)) & (Sally(x) -> -Larpus(x))) & (Sally(x) -> Rompus(x)))"]}
{"id": "prontoqa_train_835", "nl": "Stella is a lempus, Stella is not a jompus, and Stella is a yumpus.", "fol": "(lempus(Stella) & -jompus(Stella) & yumpus(Stella))", "prediction": ["(all x y z w.((Talla(x) & Lempus(x) & Stella(y) & NoMoss(y)) -> (Lempus(y) & -Jompus(y))) & ((Talla(z) & Yumpus(z)) -> Yumpus(z)))", "(all x y.(Lempus(x) -> Stella(x)) & (Jompus(y) -> Stella(x))) & (Yumpus(y) -> Stella(y)))", "(all x.(Lempus(x) -> Stella)) & (-Jompus(x) -> Stella)) & (Yumpus(x) -> Stella)))", "all x y z.((Lempus(x) & Stella(y) & Yumpus(z)) -> (-Jompus(y) & -Lempus(y) & -Jompus(z) & -Yumpus(z)))", "(all x.(TallAlzheimer(x) -> Lempus(x)) & (-Jompus(x) | Yumpus(y))))", "(all x.(Stella(x) -> Lempus(x)) & (stella(x) -> -Jompus(x)) & (stella(x) -> Yumpus(x)))", "(all x.(Lempus(x) -> StellaPeace)) & (Jompus(x) -> StellaPeace)) & (Yumpus(x) -> StellaPeace(x)))", "(all x.(Necropolis(x) -> Lempus(x)) & (Necropolis(x) -> -Jompus(x)) & (Necropolis(x) -> Yumpus(x)))", "all x y z.((Stella(x) & Stella(y) & Yoman(z)) -> (Lempus(x) | -Jompus(y) | Yumpus(z)))", "(all x.(Lempus(x) -> Stella)) & (NotJompus(x) -> Stella)) & (Yumpus(x) -> Stella)))", "all x y.((Stella(x) & Jompus(y)) -> (Lempus(x) & -Jompus(y) & Yumpus(x)))", "(all x.(Limpus(x) | -Jompus(x))) & (Yumpus(x)))", "(all x y.((Limpus(x) & Stella(y)) -> Lempus(x)) & ((Limpus(y) & Stella(y)) -> -Jompus(y)) | (Yumpus(y))))", "(all x.(Lempus(x) -> StellaMolynx)) & all y.(Jompus(y) -> StellaYumpus(y)))", "(all x y z.((Lempus(x) & Stella(y) & Jompus(z)) -> Is(y,z)) & ((Is(y,z) & -Is(y,z))) -> Is(y,z)))", "(all x.(Startup(x) -> Lempus(x)) & (-Stellup(x) | (Stellup(x) & Jompus(x)))) & (-Stellup(x) -> Yumpus(x))))"]}
{"id": "prontoqa_train_836", "nl": "Stella is not an impus.", "fol": "-impus(Stella)", "prediction": ["Stella is notImmeration(Stella)", "all x.(Stella(x) -> -Imposed(x))", "Stella is not impus.", "NecessaryRez.(Stella)", "Stella is not impused(Stella)", "(-IsDessert(Stella))", "Stella -Impossed(Stella))", "Stella is not impus.", "Stella -Implice(Stella))", "Stella is -Impossible(Stella)", "Stella -Impossible(Stella))", "Stella -Impossed(s)", "Stella is not a impus.", "Das ganze Jahr ist StellanichtImpels(Stella))", "Stella -Impromisor(s)", "Stella is not impusive."]}
{"id": "prontoqa_train_837", "nl": "Stella is a grimpus and Stella is not a gorpus and Stella is a sterpus.", "fol": "(grimpus(Stella) & -gorpus(Stella) & sterpus(Stella))", "prediction": ["all x.(Stella(x) & (Scrumpus(x) | -Gorpus(x) | Sterpus(x)))", "(all x.(Salta(x) -> Grimpus(x)) & all y.(Salta(y) -> -Gorpus(y)) & all z.(Sterpus(z) -> Sterpus(z))))", "(all x.(Stella(x) -> Grimpus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Sterep(x)))", "(all x.(Stella(x) -> (Grimpus(x))) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Sterpus(x)))", "(all x.(Stella(x) -> Grimpus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> sterpus(x)))", "(all x.(Stella(x) -> Grimpus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Sterpus(x)))", "(all x.(Shadowlet(x) -> Grumpus(x)) & all y.(Shadowlet(y) -> -Gorpus(y))) & all z.(Shadowlet(z) -> Sterpus(z)))", "all x.(Stella(x) -> (Grimpus(x) & -Gorpus(x) & Sterpus(x)))", "all x y z.((Stella(x) & Gruppus(y) & Spinosa(z)) -> (-Gorpus(y) & Sterpus(z)))", "(all x.(Stella(x) -> Grimpus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Sterpus(x))))", "all x y z.((Stella(x) & Grimpus(x) & Stella(y) & Sterpus(z)) -> (NoGorpus(y) & NoSterpus(z)))", "(all x.(Stella(x) -> Grimpus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Sterpus(x)))", "(all x.(Stella/Smiles(x) -> (Grimpus(x) & -Gorpus(x)) & all y.(Stella(y) -> Sterpus(y)))", "(all x.(Stella(x) -> Grimpus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Sterpus(x)))", "(all x.(Stella(x) -> Grimpus(x)) & (-Stella(x) -> Gorpus(x)) & (-Stella(x) -> Sterpus(x)))", "(all x.(Stella(x) -> Grumpus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Sterpus(x)))"]}
{"id": "prontoqa_train_838", "nl": "Sally is not a grimpus, Sally is a zumpus, and Sally is a lorpus.", "fol": "(-grimpus(Sally) & zumpus(Sally) & lorpus(Sally))", "prediction": ["all x y z.((Sally(x) & Grimpus(y) & Zumpus(z) & Lampus(y)) -> -Grimpus(x) & Lorpus(x))", "(LaysBlood(Sally) & -Grimpus(s)) & exists x.(Zumpus(s) & exists y.(Lorpus(y) & Affects(s,y))))", "all x.((Sally(x) & -Grimpus(x)) -> Zumpus(x)) & (Sally(x) -> Lorpus(x)))", "(all x.(Sally(x) -> -Grimpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> Lorpus(x)))", "(all x.(Sally(x) -> -Grimpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> Lorpus(x)))", "(all x y z.((Sally(x) & Gruppus(y)) -> -Grimpus(x)) & ((Sally(x) & Zumpus(z)) -> Lorpus(x)))", "(all x.(Sally(x) -> -Grimpus(x)) & all y.(Sally(y) -> Zumpus(y)) & all z.(Sally(z) -> Lorpus(z)))", "(all x.(Sally(x) -> -Grimpus(x)) & all y.(Sally(y) -> Zumpus(y)) & all z.(Sally(z) -> Lorpus(z))))", "(all x.(Sally(x) -> -Grimpus(x)) & all y.(Sally(y) -> Zumpus(y)) & all z.(Sally(z) -> Lorpus(z)))", "(all x.(Sally(x) -> -Grimpus(x)) & all y.(Sally(y) -> Zumpus(y)) & all z.(Shelter(z) -> Lorpus(z)))", "(all x.(Sally(x) -> -Grimpus(x)) & all y.(Sally(y) -> Zumpus(y)) & all z.(Sally(z) -> Lorpus(z))))", "(all x.(Sally_X) -> -Grimpus(x)) & all y.(Sally_x) -> Zumpus(y)) & all z.(Sally_x) -> Lorpus(z)))", "all x y z.((Sally(x) & Grimpus(y) & Zumpus(z)) -> (-Grimpus(x) & Lorpus(x)))", "(all x.(Sally(x) -> -Grimpus(x)) & (Sally(x) -> Zumpus(x)) & (Sally(x) -> Lorpus(x)))", "(all x y z.(Sally(x) -> -Grimpus(x)) & ((Sally(y) & Zumpus(y)) & ((Sally(z) & Lorpus(z)))))", "all x y z.((Sally(x) & Grimpus(y) & Zumpus(z)) -> (-Grimpus(x) & -Lorpus(x)))"]}
{"id": "prontoqa_train_839", "nl": "Sally is not a sterpus.", "fol": "-sterpus(Sally)", "prediction": ["Sally is not sterpus.", "all x.(Sally(x) -> -Saint(x))", "(-Sterpus(Sally))", "Sally -Sterpus(Sally)", "Sally, a sterpus, n.a.", "Sally -(Sterpus(Sally))", "-Sterpus(Sally)", "Sally, however, is not sterpus.", "(-Sterepus(Sally))", "all x.(Sally(x) -> -Sterpus(x))", "Sally / -Sterpus(Sally)", "Sally neest pasSterpus(Sally)", "Sally is not sterpus.", "all x.(Sally(x) -> -Sterpus(x))", "Sally -Sterpus(s)", "exists x.(Sally(x) & -Sterpus(x))"]}
{"id": "prontoqa_train_840", "nl": "Shumpuses are jompuses.", "fol": "all x. (shumpus(x) -> jompus(x))", "prediction": ["all x.(Shuppe(x) -> Jompuse(x))", "all x.(Shutus(x) -> Jompuse(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x y.((Shuppus(x) & Jompus(y)) -> Jompus(x))", "all x.(Shuppuse(x) -> Jompuse(x))", "all x.(Shampoo(x) -> Jombus(x))", "all x.(Schumpus(x) -> Jompuse(x))", "all x.(Shumpuse(x) -> Jombus(x))", "all x.(Shupuse(x) -> Jompuse(x))", "all x.(Shutup(x) -> Jompuse(x))", "all x.(Shupuse(x) -> Jompuse(x))", "all x.(Shumpus(x) -> Jompus(x))", "all x.(Shuppuse(x) -> Jompuse(x))", "all x.(Shuffuse(x) -> Jompuse(x))", "all x.(Shumpuse(x) -> Jompuse(x))", "all x.(Shampus(x) -> Jompuse(x))"]}
{"id": "prontoqa_train_841", "nl": "Sam is not a jompus, Sam is a yumpus, and Sam is a zumpus.", "fol": "(-jompus(Sam) & yumpus(Sam) & zumpus(Sam))", "prediction": ["exists x y z.(Sam(x) & -Jome(x) & Sam(y) & Yampus(y) & Zumpus(z))", "(all x.(Sam(x) -> -Jompus(x)) & (Yumpus(x) | Zumpus(x)))", "all x y z.((Sam(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) & -Yumpus(y) & -Zumpus(z)))", "all x y z.((Sam(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) & -Yumpus(y) & -Zumpus(z)))", "all x y z.((Sam(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) | Umpus(x) & Zumpus(x)))", "(all x.(Sam(x) -> -Jompus(x)) & all y.(Yumpus(y) -> Zumpus(y)))", "all x.((Sam(x) & -Jompus(x)) -> (Yumpus(x) & Zumpus(x)))", "all x y z.((Sam(x) & Jompus(y) & Yuzh(z)) -> (-Jompus(x) & Yumpus(y) & Zumpus(z)))", "(all x.(Sam(x) -> -Jompus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> Zumpus(x)))", "(all x.((Sam(x) & -Jompus(x)) -> Yumpus(x)) & all y.((Sam(y) & Zumpus(y)) -> -Jompus(y)))", "(all x.(Mams(x) -> -Jimpus(x)) & all y.(Mams(y) -> Yampus(y)) & all z.(Mams(z) -> Zumpus(z))))", "in the U.S.A.Sam(x) & -Jompus(x) & Yampus(x) & Zumpus(x))", "(all x.(Sam(x) -> -Jompus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> Zumpus(x)))", "(all x.(Sam(x) -> None(x)) & (Sam(x) -> None(x))) & (Yumpus(x) -> None(x)) & (Sam(x) -> None(x))))", "(all x.(Sam(x) -> -Jompus(x)) & (Sam(x) -> Yompus(x)) & (Sam(x) -> Zumpus(x)))", "(all x.(Sam(x) -> -Jompus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> Zumpus(x)))"]}
{"id": "prontoqa_train_842", "nl": "Every grimpus is a lempus.", "fol": "all x. (grimpus(x) -> lempus(x))", "prediction": ["all x.(Grimpus(x) -> Lempus(x))", "all x.(Smallpus(x) -> Lempus(x))", "all x.(Grimpus(x) -> Lempus(x))", "all x.(Grimpus(x) -> Lempus(x))", "all x.(Grimpus(x) -> Lempus(x))", "all x.(Murpis(x) -> Lempus(x))", "all x.(Grimpus(x) -> Lempus(x))", "all x.(Grimpus(x) -> Lempus(x))", "all x.(Grimpus(x) -> Lempus(x))", "all x.(Grimpus(x) -> Lesser(x))", "all x.(Grimpus(x) -> Lempus(x))", "all x y.((Grimpus(x) & Lempus(y)) -> Acquires(x,y))", "all x.(Smoothpus(x) -> Lempus(x))", "all x.(SmokyPump(x) -> Lempus(x))", "all x.(Grimpus(x) -> Lempus(x))", "all x.(Grimpus(x) -> Lempus(x))"]}
{"id": "prontoqa_train_843", "nl": "Max is not a lempus and Max is a brimpus and Max is a vumpus.", "fol": "(-lempus(Max) & brimpus(Max) & vumpus(Max))", "prediction": ["(all x y.((Max(x) & -Lempus(x)) -> (-Lempus(x) & isBrimpus(x))) & all z w.((Max(z) & isVumpus(w)) -> (Vumpus(z) & isVumpus(w))))", "all x,y.((Max(x) & -Lempus(x)) | (Max(x) & Brimpus(y)) & Max(x) & Vulpum(x)))", "(exists x.(Max(x) & -Limpus(x)) & exists y.(Brimpus(y) & -Vumpus(y))))", "(all x.(Max(x) -> -Lempus(x)) & ((Max(x) -> Brimpus(x)) & (Max(x) -> Vumpus(x))))", "all x y z.((Max(x) & Lempus(y) & Brimpus(z)) -> (-Lempus(x) & Brimpus(x) & Vumpus(x)))", "(all x.(Max(x) -> -Mempus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Vampum(x)))", "(all x.(Max(x) -> -Lempus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Vuze(z))))", "all x y z.((Max(x) & Lempus(y) & Brimpus(z)) -> (-Lempus(x) & -Brumpus(x) & -Vumpus(x) & -Lempus(y) & Brimpus(z)))", "(all x.(Max(x) -> -Lempus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Luxus(z))))", "all x y z.((Max(x) & Brimpus(y) & Vaultus(z)) -> (-Lempus(x) & -Brimpus(y) & -Vumpus(z)))", "all x y z.((Max(x) & Lempus(y) & Brimpus(z)) -> (-Lempus(x) & Brimpus(x) & Voompus(x)))", "(all x.(Max(x) -> -Lempus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Vumpus(x)))", "all x y.((Max(x) & Lempus(y) & Brimpus(x)) -> (-Lempus(x) & -Vumpus(y)))", "((Max(Max) & -Lempus(Max)) | (Builder(Max) & Brimpus(Max))) | (Vumpus(Max))))", "(all x.(Max(x) -> -Lempus(x)) & ((Max(x) & -Lempus(x)) -> Brimpus(x)) & ((Max(x) & -Lempus(x)) -> Vumpus(x))))", "(all x.(Max(x) -> -Lempus(x)) & (Matt(x) -> Brimpus(x)) & (Max(x) -> Vumpus(x)))"]}
{"id": "prontoqa_train_844", "nl": "Each sterpus is a gorpus.", "fol": "all x. (sterpus(x) -> gorpus(x))", "prediction": ["all x.(Steerpus(x) -> Gorpus(x))", "all x.(Herb(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "exists x.(Sterpus(x) & Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Steerpus(x) -> Gorpus(x))", "(Gorpus(sterpus))", "all x.(Stutpus(x) -> Gorpus(x))", "all x.(Sterepus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Stern(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.(Sterpus(x) -> Gorpus(x))", "all x.((Sterpus(x) & Gorpus(x)) -> Has."]}
{"id": "prontoqa_train_845", "nl": "Max is a dumpus, Max is a brimpus, and Max is not a gorpus.", "fol": "(dumpus(Max) & brimpus(Max) & -gorpus(Max))", "prediction": ["(all x.(Max(x) -> Dumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> -Gorpus(x))))", "(all x.(Max(x) -> Dumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> -Gorpus(x)))", "(all x.(Max(x) -> Dumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> -Gorpus(x))))", "(all x.(Max(x) -> Dumpus(x)) & (Max(x) -> Brimpus(x)) & -Max(x))", "(all x.(Max(x) -> Dumpus(x)) & (Max(x) -> Brimpus(x)) & -Doctor(x)))", "(all x.(Max(x) -> Dumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> -Gorpus(z)))", "(all x.(Max(x) -> Dumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> -Gorpus(x))))", "(all x.(Max(x) -> Dumpus(x)) & (Max(x) -> Brimpus(x)) & -Gorpus(x)))", "all x y z.((Max(x) & Dumpus(x) | Brimpus(y) | -Gorpus(z))) -> (Dumpus(x) & Brimpus(y) & -Gorpus(z)))", "(all x.(Max(x) -> Dumpus(x)) & (Max(x) -> Brimpus(x)) & -Max(x)))", "exists x.(Max(x) & Dumpus(x) & Brimpus(x) & -Gorpus(x))", "all x y z.((Max(x) & Dumpus(y) & Brimpus(z)) -> (Dumpus(x) & Brimpus(y) & -Gorpus(z)))", "(all x.(Max(x) -> Dumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> -Gorpus(x)))", "(all x.(Max(x) -> Dumpus(x)) & all y.(Max(y) -> Brimpus(y)) & -Matthew(y)))", "(all x.(Max(x) -> Dumpus(x)) & (Max(x) -> Brimpus(x)) & -Horpus(x)))", "(all x.(Max(x) -> Dumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> -Gorpus(z))))"]}
{"id": "prontoqa_train_846", "nl": "Lempuses are yumpuses.", "fol": "all x. (lempus(x) -> yumpus(x))", "prediction": ["all x.(Lempuse(x) -> Yumpus(x))", "all x.(Lempuse(x) -> Yumpus(x))", "all x.(Lempuse(x) -> Yampuse(x))", "all x.(Lempuse(x) -> Yampus(x))", "all x.(Lempuse(x) -> Yampus(x))", "all x.(Lempuse(x) -> Yumpus(x))", "all x.(Lempuse(x) -> Yampus(x))", "all x.(Lempus(x) -> Yumpus(x))", "all x.(Lempuse(x) -> Yumpus(x))", "all x.(Lempuse(x) -> Yumpa(x))", "all x.(Lempuse(x) -> Yampus(x))", "all x.(Lempuse(x) -> Yumpuse(x))", "all x.(Lempuse(x) -> Yumpa(x))", "all x.(Lempuse(x) -> Yampus(x))", "all x.(Lempuse(x) -> Yumpus(x))", "all x.(Lempuse(x) -> Yuppus(x))"]}
{"id": "prontoqa_train_847", "nl": "Max is a zumpus and Max is not a yumpus and Max is a lorpus.", "fol": "(zumpus(Max) & -yumpus(Max) & lorpus(Max))", "prediction": ["(all x.(Max(x) -> Toss(x)) & (-Toss(x) & -Yumpus(x)) & (Max(x) -> Lorpus(x)))", "all x y z.((Max(x) & Zumpus(x) & -Yumpus(y) & Lorpus(z)) -> (Max(x) & Loper(x)))", "(All x y.((Max(x) & Zumpus(x)) -> (Minus(y) & -Yumpus(y)) & ((Max(x) & Lorpus(x)) -> (Minus(y) & -Yumpus(y))))", "(all x.(Max(x) -> Zumpus(x)) & (-Max(x) -> Yumpus(x))) & (-Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Zumpus(x)) & (-Yumpus(x) & -Lorpus(x)))", "(all x.(Max(x) -> Zumpus(x)) & (X.(Max(x) -> -Yumpus(x))) & (Max(x) -> Lorpus(x)))", "all x y z.((Max(x) & Zumpus(x) & Max(y) & -Yumpus(y)) -> (Lorpus(z)))", "all x y z.((Max(x) & Zumpus(x) & Max(y) & -Yumpus(y)) -> (Lorpus(z)))", "(all x.(Max(x) -> Zumpus(x)) & (-Yumpus(x) & (-Yumpus(x) -> Lorpus(x))))", "there are 3 types of'maximum' & Zumpus(x) & -Yumpus(x) & -Lorpus(x))", "(all x.(Max(x) -> Zumpus(x)) & ((Max(x) & -Yumpus(x)) -> Lorpus(x)))", "(all x.(Minimum(x) -> Zumpus(x)) & ((Minimum(x) & -Yumpus(x))) -> Lopper(x)))", "(all x.(Max(x) -> Zumpus(x)) & all y.(Max(y) -> -Yumpus(y))) & all z.(Max(z) -> Lorpus(z)))", "all x.(Max(x) -> (Tompus(x) & -Yumpus(x) & Lorpus(x)))", "exists x.(Max(x) & (Tompus(x) | -Yumpus(x) | Lorpus(x)))", "all x.(Max(x) -> (Azpus(x) & -Yumpus(x) & -Lorpus(x)))"]}
{"id": "prontoqa_train_848", "nl": "Everything that is an impus, a vumpus, or a rompus is a wumpus, a lorpus, and a yumpus.", "fol": "all x. ((impus(x) | vumpus(x) | rompus(x)) -> (wumpus(x) & lorpus(x) & yumpus(x)))", "prediction": ["all x.((Issue(x) | IsVumpus(x) | IsRompus(x)) -> (Wumpus(x) | Lorpus(x) | Yampus(x)))", "all x.((Impos(x) | V\u00fcmpus(x) | Rompus(x)) -> (Wumpus(x) & Lorpus(x) & Yampus(x)))", "all x.((Improvs,Vumpus,Rompus)) -> (Wumpus,Lorpus,Yumpus))", "all x.((Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) & Worpus(x) & Yampus(x)))", "all x.((Impedance(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lurpus(x) | Yumpus(x)))", "all x.((Impedus(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yampus(x)))", "all x.((Isis(x) | Voompus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x.((Improved(x) & Impromis(x)) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) & Lorpus(x) & Yampus(x)))", "all x.((Issue(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x.((Impact(x) | VUMPUSH(x) | Rompus(x)) -> (Wumpus(x) | Lordpus(x) | Yumpu(x)))", "all x.((Imperfect(x) | Imbiss(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) & Odorpus(x) & Odorpus(x)))", "all x.((Impose(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) & Larpus(x) & Yumpus(x)))", "all x.((Impos(x) | Vempus(x) | Rompus(x)) -> (Wumpus(x) | Lordpus(x) | Yumpus(x)))", "all x.((Issuel(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) & Lorpus(x) & Yumpus(x)))", "all x.((Impos(x) | Voompus(x) | Rompus(x)) -> (Wumpus(x) | Loompus(x) | Yumpus(x)))", "all x.((Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) & Lordpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_849", "nl": "Polly is a rompus.", "fol": "rompus(Polly)", "prediction": ["all x.(Spoison(x) -> Rompus(x))", "Polly is rompus.", "all x.(Arompus(x) -> Polly(x))", "All x.(Rompus(x) -> Polly(x))", "all x.(Polly(x) -> Rompus(x))", "all x.(Polly(x) -> Rupus(x))", "Polly is a Rompus.", "(Romes(Polly) & Rhopus(Poly))", "Polly is a rompus.", "all x.(Rompus(x) -> Polly(x))", "All x.((Polly(x) & Rompus(x)) -> Picking(x))", "all x.(Plowny(x) -> Romatoe(x))", "all x.(Rompus(x) -> Polly(x))", "all x.(Rompus(x) -> Polly(x))", "all x.(Pope(x) -> Rompus(x))", "(Rompus(Polly))"]}
{"id": "prontoqa_train_850", "nl": "Polly is a lorpus.", "fol": "lorpus(Polly)", "prediction": ["all x.((Polly(x) & Lompus(x)) -> Larpula(x))", "all x.(Polly(x) -> Loper(x))", "Polly (Lorpus)", "all x.(Polly(x) -> Lorpus(x))", "(Lorpus(Polly) & HasLorpus(Polly))", "(Llorpus(Polly) & Larp(Poly))", "Polly is Larke(Polly)", "(Lorpus(Polly) & LivesIn(Pollly))", "Polly (Lorpes)", "Polly is a Llorpus.", "Polly is a lorpus.", "Polly is Loomis.", "all x.(Lorpus(x) -> Polly(x))", "(Lorpus(Polly))", "(Lorpus(Polly) & LivesIn(Polly,s))", "exists x.(Lorpus(x) & Polly(x))"]}
{"id": "prontoqa_train_851", "nl": "Everything that is a jompus or a gorpus or a yumpus is a grimpus and a dumpus and a rompus.", "fol": "all x. ((jompus(x) | gorpus(x) | yumpus(x)) -> (grimpus(x) & dumpus(x) & rompus(x)))", "prediction": ["all x.((Jimpus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Edible(x) & Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jumpus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) | Dumpus(x) | Rompus(x)))", "all x.((Jimpus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Deupus(x) & Rompus(x)))", "all x.((Muffin(x) | Gorpus(x) | Yampus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Other(x) & (Jompus(x) | Gorpus(x) | Yumpus(x))) -> (Grampus(x) & Dumpus(x) & Rompus(x)))", "all x.((Croppus(x) | Gorpus(x) | Yumppus(x)) -> (Dumpus(x) & Rompus(x)))", "all x.(((jompus(x) | gorpus(x) | yumpus(x)) & Grimpus(x)) -> (Dumpus(x) & Rompus(x)))", "all x.((Jimpus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Kimmy(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yampus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yumppus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jimpus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jimpus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Orgorpus(x) | Yampus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Mouse(x) | Gorpus(x) | Yampus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_852", "nl": "Polly is a yumpus.", "fol": "yumpus(Polly)", "prediction": ["all x.(Yumpus(x) -> Polly(x))", "all x.((Populus(x) & Willow(x)) -> Yampus(x))", "all x.(Polly(x) -> Yampus(x))", "(Yumpus(Polly) & HasLowerVulcans(Polly))", "exists x.(Polly(x) & Yampus(x))", "all x.(Same(x) -> Yumpus(x))", "Polly is yumpus.", "all x.(Noel(x) -> Yampus(x))", "all x.(Yumpus(x) -> Polly(x))", "Polly is a yumpus.", "all x.((Polly(x) & Yumpus(x)) -> Yeshiva(x))", "Polly (yumpus)", "all x.((Polly(x) & Yumpa(x)) -> HasYumpus(x))", "all x.(Yumpus(x) -> Polly(x))", "(Yumpus(Polly))", "all x.(Yumpus(x) -> Polly(x))"]}
{"id": "prontoqa_train_853", "nl": "Everything that is a lorpus, a numpus, or a wumpus is a gorpus.", "fol": "all x. ((lorpus(x) | numpus(x) | wumpus(x)) -> gorpus(x))", "prediction": ["all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wimpus(x)) -> Gorpus(x))", "all x.((Orlorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))"]}
{"id": "prontoqa_train_854", "nl": "Sally is a lorpus and a dumpus and a rompus.", "fol": "(lorpus(Sally) & dumpus(Sally) & rompus(Sally))", "prediction": ["all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "all x.(Sally(x) -> (Lorph(x) & Dumpus(x) & Rompus(x)))", "(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))", "all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))", "all x.(Sally(x) -> (Lorpus(x) | Puss(x) | Rompus(x)))", "(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))", "Sally ist lorpus and dumpus and rompus.", "(Lorpus(Sally) | Dumpus(Sally) | Rompus(Sally)))", "(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))", "(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))", "all x y.((Sally(x) & Lorpus(x)) -> (Dumpus(x) & Rompus(y)))", "all x y.((Sally(x) & Lorpus(y)) -> (Ladpus(x) & Dumpus(x) & Rompus(x)))", "(All x.(Sally (Lorpus) & Dumpus(x)) & Romas (Rompus)))", "(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))", "(Lorpus(Sally) & Doubtus(Sally) & Rompus(Sally))"]}
{"id": "prontoqa_train_855", "nl": "Sally is a gorpus.", "fol": "gorpus(Sally)", "prediction": ["Sally is Gorpus(Sally)", "all x.(Sally(x) -> Gorpus(x))", "All x.(Borp(x) -> Sally(x))", "all x.(Sally(x) -> Gorpus(x))", "Sally is a Gorpus.", "all x.(Gorpus(x) -> Sally(x))", "(Gorpus(Sally) -> Gorpus(Sally))", "Sally is Gorpus.", "Sally (gorpus)", "Sally is Gorpus.", "Sally is Gorpus.", "all x.(Sally(x) -> Gorpus(x))", "All x.(Sally(x) -> Gorpus(x))", "Sally is a gorpus.", "Sally is Gorpus.", "all x.(Sally(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_856", "nl": "Brimpuses are lempuses and zumpuses and grimpuses.", "fol": "all x. (brimpus(x) -> (lempus(x) & zumpus(x) & grimpus(x)))", "prediction": ["all x.(Brompus(x) -> (Lempuse(x) | Zumpus(x) | Grimpuse(x)))", "all x y z.((Brimpuse(x) & Lempuse(y) & Zumpuse(z) & Grimpuse(x)) -> (Stormpuse(x) & Lempuse(y)))", "all x.(Brompus(x) -> (Lempuse(x) | Zumpus(x) | Grimpuse(x)))", "all x.(Brimpus(x) -> (Lempus(x) & Zumpuses(x) & Grimpuses(x)))", "all x.(Brimius(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "all x y.((Brompus(x) & Lempuse(y)) | (Tompuse(y) & Grimpuse(y))))", "all x.(Brimpuse(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "all x.(Brompus(x) -> (Lempuse(x) | Zumpus(x) | Grimpuse(x)))", "all x y.((Brimpus(x) & Lempuse(y)) -> (Tommpus(x) | Grimpus(x)))", "all x.(Brimpuse(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "all x.(Brimuse(x) -> (Lempuse(x) | Zumpus(x) | Grimpus(x)))", "all x.(Brompus(x) -> (Lempuse(x) | Zumpus(x) | Gruppus(x)))", "all x y.((Brompus(x) & Lempuse(y)) -> (Tompus(x) | Grimpus(x)))", "(all x.(Brompus(x) -> Lempuse(x)) | (Tompus(x) | Grimpus(x))))", "(all x.(Brompus(x) -> Lempuse(x)) & all y.(Tompuse(y) & Grimpuse(y)))", "all x.(Brompus(x) -> (Lempuse(x) | Zumpus(x) | Grimpuse(x)))"]}
{"id": "prontoqa_train_857", "nl": "Wren is a brimpus.", "fol": "brimpus(Wren)", "prediction": ["(Brampus(wren) & -Brumpus(wren))", "all x.(Wren(x) -> Brimpus(x))", "is brimpus(Wren)", "all x.(Wren(x) -> Brimpus(x))", "(Brimpus(Wren) & Brimpus(Wren))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "All x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Breastless(x))"]}
{"id": "prontoqa_train_858", "nl": "Wren is a dumpus or a vumpus or a grimpus.", "fol": "(dumpus(Wren) | vumpus(Wren) | grimpus(Wren))", "prediction": ["all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Tumps(x) | Vampus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Warn(x) -> (Dumpus(x) | Voompus(x) | Gruppus(x)))", "all x.(Wren(x) -> (Dumps(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vempus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumps(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shoutus(x) | Voompus(x) | Grimpus(x)))", "all x.(Wren(x) -> ((Dumpus(x) | Vumpus(x) | Grumpus(x))))", "all x.(Wren(x) -> ((Dumpus(x) | Vumpus(x) | Grimpus(x))))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Pupus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vulput(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vimpus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_859", "nl": "Each impus is a yumpus.", "fol": "all x. (impus(x) -> yumpus(x))", "prediction": ["all x.(IsSpose(x) -> Yumpus(x))", "all x.(Impossible(x) -> Yumpsum(x))", "all x.(Issue(x) -> Yampus(x))", "all x.(Is(x) -> Yumpu(x))", "all x.(Issue(x) -> Yumpus(x))", "all x.(Impossible(x) -> Yumpus(x))", "all x.(Immersion(x) -> Yumpus(x))", "all x.(Issue(x) -> Yupsum(x))", "all x.(Izpos(x) -> Yumpus(x))", "all x.(Dusty(x) -> Yumpus(x))", "all x.(Impossible(x) -> Kumpus(x))", "all x.(Issue(x) -> Yumpus(x))", "all x.(Impossible(x) -> Yumpus(x))", "isyumpus(x)", "all x.(Issue(x) -> Yampus(x))", "all x.(Impact(x) -> Yaupus(x))"]}
{"id": "prontoqa_train_860", "nl": "Sally is a dumpus, Sally is not a yumpus, and Sally is a brimpus.", "fol": "(dumpus(Sally) & -yumpus(Sally) & brimpus(Sally))", "prediction": ["(all x.(Sally(x) -> Dumpus(x)) & all y.(Sally(y) -> -Yumpus(y))) & all z.(Sally(z) -> Brimpus(z)))", "(all x.(Sally(x) -> Dumpus(x)) & (-Yumpus(x) & -Brimpus(x)))", "all x y z.((Sally(x) & Dumpus(x) & -Yumpus(y) & Brimpus(z)) -> (Dumpus(x) & Brimpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & (-Yumpus(x) & (Brimpus(x)) -> Brimpus(x)))", "(all x y.((Sally(x) & Dumpus(x)) -> (-> -Yumpus(x))) & ((Sally(y)) -> Brimpus(y)))", "(all x.(Sally(x) -> Dumpus(x)) & (-Yumpus(x) & -Brumpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Sally(y) -> -Yumpus(y)) & all z.(Sally(z) -> Brimpus(z)))", "all x y z.((Sally(x) & Dumpus(y) & Yumpus(z)) -> (NotYumpus(x) & Brimpus(x)))", "all x.((Sally(x) & dumpus(x)) -> (-yumpus(x) & -brimpus(x)))", "(all x y z.((Sally(x) & Dumpus(y)) -> (Dumpus(z) & -Yumpus(z) & Brimpus(z)))", "all x.((Sally(x) & Dumpus(x)) -> -Yumpus(x)) & (Brimpus(x) -> Brimpus(x)))", "is a dumpus, -yumpus, & -brimpus.", "(all x.(Sally(x) -> Dumpus(x)) & (-Yumpus(x) | Brimpus(x))))", "all x y z.((Sally(x) & Dumpus(y) & Yumpus(z)) -> (AnAttraction(x,y) & A-Brimpus(x)))", "(all x y z.((Sally(x) & Dump(x)) -> Noyumpus(x)) & ((Sally(y) & Brimpus(z)) -> Noyumpus(y)))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Yumpus(x)) & (Sally(x) -> Brimpus(x)))"]}
{"id": "prontoqa_train_861", "nl": "Sally is a yumpus, Sally is not an impus, or Sally is an impus.", "fol": "(yumpus(Sally) | -impus(Sally) | impus(Sally))", "prediction": ["(all x.(Sally(x) -> Yumpus(x)) & (-Sally(x) | IsImpossible(x))))", "(all x.(Sally(x) -> Yumpus(x)) | (-Impossible(x) | Impossible(x))))", "all x.(Yumpus(x) | NoImprison(x) | AlmostUndefensible(x)))", "(all x.(Sally(x) -> Yampus(x)) & (-Impossible(x) | Impossible(x))))", "(all x.(Sally(x) -> Yumpus(x)) | (-Sally(x) & Impossible(x))))", "(all x.(Sally(x) -> Yampus(x)) & (-(Sally(x) & Impossible(x))) -> Impossible(x)))", "(all x.(Sally(x) -> Yumpus(x)) & all y.(Sally(y) -> -Impossible(y))))", "(Yumpus(Sally) | NoImpossible(Sally)))", "(all x y z.((Yumpus(x) & Sally(y) & -Is(y,z)) -> Yompus(y)) | (-Is(y,z)) | (Is(z) & Is(z)))))", "(all x.(Sally(x) -> Yumpus(x)) & (-Impossible(x) | Impossible(x))))", "(all x.(Sally(x) -> Yumpus(x)) & (-Impossible(x) | Impossible(x))))", "(all x.(Sally(x) -> Yumpus(x)) | (-Sally(x) & Impeccable(x))))", "(all x.(Sally(x) -> Yumpa(x)) & (-Sally(x) | IsImpossible(x))))", "(all x.(Sally(x) -> Yumpus(x)) & (-Sally(x) | IsIsImpos(x))))", "all x.(Yumpus(x) | (-Impossible(x) | Impossible(x))))", "(yumpus(Sally) | -Impossible(Sally) | Impossible(Sally)))"]}
{"id": "prontoqa_train_862", "nl": "Everything that is a grimpus, a brimpus, or a jompus is a lempus and a dumpus and a lorpus.", "fol": "all x. ((grimpus(x) | brimpus(x) | jompus(x)) -> (lempus(x) & dumpus(x) & lorpus(x)))", "prediction": ["all x.((Smoothpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Loomis(x)))", "all x.((AggressiveGruppus(x) | AggressiveBrimpus(x) | AggressiveJompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.(((Gripper(x) | Brimpus(x) | Jompus(x))) -> (Lempus(x) | Dumpus(x) | Lorpus(x)))", "all x.((Brompus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Smokey(x) | Brimpus(x) | Jompus(x)) -> (Limpus(x) & Dumpus(x) & Lorpus(x)))", "all x.((EnoughSmoke(x) | EndlessBrimpus(x) | EndlessJoompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Fruit(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Smearpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Element(x) & (Grimpus(x) | Brimpus(x) | Jompus(x))) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.(((Grisp(x) | Brimpus(x) | Jompus(x))) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Crimpus(x) | Brimpus(x) | Jompus(x)) -> (Limpus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Acropus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Llorpus(x)))", "all x.((Smoothpus(x) | Brimpus(x) | Jompus(x)) -> (lempus(x) & dumpus(x) & lorpus(x)))", "all x.((Aura(x) & (Grumpus(x) | Brimpus(x) | Jompus(x))) -> (Aura(x) & Aura(x) & Aura(x) & Aura(x)))", "all x.((Element(x) & (Grimpus(x) | Brimpus(x) | Jompus(x))) -> (Lempus(x) | Dumpus(x) | Lorpus(x)))", "all x.((Crupid(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_train_863", "nl": "Sally is a brimpus.", "fol": "brimpus(Sally)", "prediction": ["all x.(Sally(x) -> Brite(x))", "Sally is brimpus.", "all x.(Sally(x) -> Brimpus(x))", "Sally is a Brimpus.", "all x.(Brimpus(x) -> Sally(x))", "All x.(Sally(x) -> Brimpus(x))", "all x.(Sally(x) -> Brimpus(x))", "all x.(Sally(x) -> Brimpus(x))", "Sally, also KnownAsBrimpus(Sally)", "all x.((Sally(x) & Brimpus(x)) -> CanBeBrumpus(x))", "all x.(Brumpus(x) -> Sally(x))", "all x.(Sally(x) -> Brimpus(x))", "Sally is Brimpus(Sally)", "All x.(Brumpus(x) -> Sally(x))", "all x.(Brimpus(x) -> Sally(x))", "Sally is a brimpus."]}
{"id": "prontoqa_train_864", "nl": "Sally is a dumpus.", "fol": "dumpus(Sally)", "prediction": ["Sally (dumpus)", "Sally is a dupus.", "Sally (Dumpsus)", "Sally is a Dumpus.", "Sally is a dumpus.", "all x.(Sally(x) -> Dumpus(x))", "Sally is a dumpuse.", "Sally is a dumpus.", "Sally,(Sally,Drumus))", "(Deadus(Sally)", "Sally is a dumpus.", "all x.(Sally(x) -> Dumpus(x))", "Sally is a Dumpus.", "Sally is Dumpus(Sally)", "all x.(Sally(x) -> Dumpus(x))", "all x.(Sally(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_865", "nl": "Each dumpus is a grimpus, a sterpus, and a gorpus.", "fol": "all x. (dumpus(x) -> (grimpus(x) & sterpus(x) & gorpus(x)))", "prediction": ["all x.(Dumpus(x) -> (Grimmpus(x) & Sterus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (Gripper(x) | Sterpus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> (IsGrimpus(x) | IsSterpus(x) | IsGorpus(x)))", "all x.(Dumpus(x) -> (Grimpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> (Grimpus(x) | Sterpus(x) | Gorpus(x)))", "(exists x.(Dumpus(x) & Grimpus(x)) & exists y.(Sterepus(y) & -Ribeiro(y))))", "(all x.(Dumpus(x) -> Grimpus(x)) & all y.(Rootpus(y) -> Sterpus(y)) & all z.(Gorpus(z) -> Dumpus(x)))", "(all x.(Dumpus(x) -> Grimpus(x)) & all y.(Desert(y) -> Gorpus(y)))", "exists x.(Dumpus(x) & Grimpus(x) & Sterpus(x) & Gorpus(x))", "all x.(Dumpus(x) -> (Smoke(x) | Sterpus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> (Smompus(x) & Sterpus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (Grimpus(x) | Sterotus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> (Grimpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> (Schuppus(x) & Sterpus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (Smokey(x) & Sterpus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (Grimpus(x) | Sterpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_866", "nl": "Wren is a dumpus.", "fol": "dumpus(Wren)", "prediction": ["all x.(Wren(x) -> Dumpus(x))", "(Dumpus(Wren) & HasFear(Wren,Duck))", "(Duckus(Wren) & HasDumum(Wren,Dummus))", "all x.(Wren(x) -> Dumpus(x))", "all x.(Wren(x) -> Dumpus(x))", "all x.(Wren(x) -> Dumpus(x))", "(Dupus(Wren)", "all x.(Wren(x) -> Dumpus(x))", "all x.(Wren(x) -> Dumpus(x))", "(Dumpus(Wren)", "(Dupus(Wren))", "all x.(Wren(x) -> Dumpus(x))", "(Dumpus(Wren))", "all x.(Wren(x) -> Dumpus(x))", "all x.(Wren(x) -> Dumpus(x))", "all x.(Wren(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_867", "nl": "Wren is a shumpus or a sterpus or a grimpus.", "fol": "(shumpus(Wren) | sterpus(Wren) | grimpus(Wren))", "prediction": ["all x.((Wren(x) & (Shumpus(x) | Sterpus(x) | Grimpus(x))) -> Shumpus(x))", "all x.(Wren(x) -> (Shumpus(x) | Spectrpus(x) | Grimpus(x)))", "exists x.(Wren(x) & (Shumpus(x) | Sterpus(x) | Grapps(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Steropus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Stelpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Gruffpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grumpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> ((Shumpus(x) | Sterpus(x) | Grimpus(x))))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_868", "nl": "Brimpuses are jompuses.", "fol": "all x. (brimpus(x) -> jompus(x))", "prediction": ["all x.(Bridge(x) -> Jompus(x))", "all x.(Brampus(x) -> Jompuse(x))", "all x.(Brompus(x) -> Jompus(x))", "all x.(Brombus(x) -> Jombus(x))", "all x.(Brimpus(x) -> Jompuse(x))", "all x.(Brimbus(x) -> Jompuse(x))", "all x.(Brimuse(x) -> Jompuse(x))", "all x.(Brimbus(x) -> Joinus(x))", "all x.(Brimpus(x) -> Jombus(x))", "all x.(Brompus(x) -> Jompuse(x))", "all x.(Brimpus(x) -> Jompuse(x))", "all x.(Brimbus(x) -> Jompus(x))", "all x.(Birmuse(x) -> Jompuse(x))", "all x.(Brimbus(x) -> Jompuse(x))", "all x.(Birmuse(x) -> Jompuse(x))", "all x.((Brompus(x) & Jompus(x)) -> Felt(x))"]}
{"id": "prontoqa_train_869", "nl": "Rex is a rompus and a yumpus and a brimpus.", "fol": "(rompus(Rex) & yumpus(Rex) & brimpus(Rex))", "prediction": ["all x y.((Rompus(x) & Yumpus(y)) -> Brimpus(x))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Yumpus(y) & all z.(Brimpus(z)) -> Brimpus(z))))", "(rompus(Rex) | Yumpus(rex) | Brimpus(rex)))", "all x.(Rex(x) -> (Rompus(x) & Yompus(x) & Brimpus(x)))", "(all x.(Rex(x) -> Rompus(x)) & (Yumpus(x) | Brimpus(x))))", "(all x.(Rex(x) -> Rimpus(x)) & (Yumpus(x) & Brimpus(x)))", "all x.(Rompus(x) -> (yumpus(x) & brimpus(x)))", "all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))", "(all x.(Rex(x) -> Rompus(x)) & (Yumpus(x) & Brimpus(x)))", "(all x.(Rompus(x) -> Rompus(x)) & (Yumpus(x) -> Bumbrus(x)))", "(all x.(Rex_(Rompus) & All y.(Yumpus) & All z.(Brimpus))))", "all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))", "all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))", "(Rompus(Rex) & Yumpus(Yumpus) & Brimpus(Rex))", "all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))", "all x y.((Rex(x) & Rampus(y)) -> (Yumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_870", "nl": "Rex is a brimpus or a jompus or a gorpus.", "fol": "(brimpus(Rex) | jompus(Rex) | gorpus(Rex))", "prediction": ["all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> ((Brimpus(x) | Jompus(x) | Gorpus(x))))", "all x.(Rex(x) -> (Brumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "(Brimpus(rex) | Jompus(rex) | Gorpus(rex)))", "all x.(Rex(x) -> (Brumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Birmpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brompus(x) | Jupiter(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_871", "nl": "Everything that is a dumpus and a sterpus and a brimpus is a wumpus.", "fol": "all x. ((dumpus(x) & sterpus(x) & brimpus(x)) -> wumpus(x))", "prediction": ["all x.((Dumpus(x) & Sterepus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Senserpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x y.((Dumpus(x) & Sterus(y) & Brimpus(x)) -> Wumpus(x))", "all x.(((Dumpus(x) & -Sterpus(x) & Brimpus(x)) -> Wammpus(x))", "all x.((Dumpus(x) & Sterospus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x y.((Dums(x) & Sterpus(y) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumps(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & BRumpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((HasDumpus(x) & HasSterepus(x) & HasBrimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wampus(x))"]}
{"id": "prontoqa_train_872", "nl": "Alex is a dumpus.", "fol": "dumpus(Alex)", "prediction": ["all x.(Alex(x) -> Dumpus(x))", "Alex is dumus.", "all x.(Alex(x) -> Dumpus(x))", "Alex is a Dumpus.", "all x.(Alex(x) -> Dumpus(x))", "Alex is Dumpus(Alex)", "Alex is a Dumpus.", "Alex is a Dumpus.", "all x.(Alex(x) -> Dumpus(x))", "all x.(Alex(x) -> Dumpus(x))", "all x.(Alex(x) -> Dumpus(x))", "(Dumus(Alex) -> Dumps(Alex))", "all x.(Alex(x) -> Dumpus(x))", "Alex (Dumus)", "Alex is Dumpus(Alex)", "Alex is ein Dumpus."]}
{"id": "prontoqa_train_873", "nl": "Alex is a sterpus.", "fol": "sterpus(Alex)", "prediction": ["All x.(Alex(x) -> Sterpus(x))", "all x.(Alto(x) -> Sterpus(x))", "all x.(Alex(x) -> Sterpus(x))", "all x.(Steep(x) -> Does(x,Alex))", "all x y.((Alex(x) & Sterpus(y)) -> Sterol(x))", "all x.(Steerpus(x) -> exists y.(Sterpus(y) & -Sterpus(z) & Sexy(z)))", "all x.(Alex(x) -> Sterpus(x))", "all x.(Sterepus(x) -> Sterpus(x))", "all x.(Alex(x) -> Sterpus(x))", "All x.(Alex(x) -> Sterops(x))", "all x.(Alex(x) -> Sterpus(x))", "Alex is a Sterpus.", "(Sterepus(Alex) & Sterpus(Alex))", "(Sterepus(Alex) & GrowsIn(Alex,Sterpus))", "Alex IstSterpus(Alex)", "all x.(Sterepus(x) -> (Alex(x) & Sterepus(x)))"]}
{"id": "prontoqa_train_874", "nl": "Alex is a brimpus.", "fol": "brimpus(Alex)", "prediction": ["all x.(Alex(x) -> Brampus(x))", "Alex is a Brimpus.", "all x.(Alex(x) -> Brimpus(x))", "Alex is a Brimpus.", "all x.(Kimpus(x) -> Brimpus(x))", "all x.(Brompus(x) -> Alex(x))", "Alex & Brimpus(Alex)", "Alex is brimpus.", "all x.(Alex(x) -> Brimpus(x))", "all x.(Alex(x) -> Brampus(x))", "all x.(Alex(x) -> Brimpus(x))", "all x.(Alex(x) -> Brimpus(x))", "all x.(Alex(x) -> Brimpus(x))", "Alex is Brimpus(Alex)", "all x.(Alex(x) -> Brimpus(x))", "all x.(Alex(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_875", "nl": "Alex is a zumpus, a wumpus, or a rompus.", "fol": "(zumpus(Alex) | wumpus(Alex) | rompus(Alex))", "prediction": ["all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wampus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Romanpus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Stompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wampus(x) | Rompus(x)).)", "all x.(Alex(x) -> (Zupus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Zumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Zumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Zombie(x) | Wumpus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_876", "nl": "Everything that is a numpus or a jompus or a vumpus is a rompus.", "fol": "all x. ((numpus(x) | jompus(x) | vumpus(x)) -> rompus(x))", "prediction": ["all x.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Motos(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Voompus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Noimpus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.(((Numpus(x) | Jompus(x) | Vumpus(x))) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.(((Number(x) | Jompus(x) | Vumpus(x))) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vubis(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.(((Numpus(x) | Jompus(x) | Voompus(x))) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Voompus(x)) -> Rompus(x))"]}
{"id": "prontoqa_train_877", "nl": "Wren is a yumpus, a vumpus, and a shumpus.", "fol": "(yumpus(Wren) & vumpus(Wren) & shumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Vulpes(x) & Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Voompus(x) | Humpus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Vumpus(z)) -> (Yumpus(x) & Vumpus(x) & Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Voompus(x) & Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Vumpus(x) & Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Vampire(x) & Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Vamppus(x) | Humpus(x)))", "(all x.(Wren(x) -> Yumpus(x)) & all y.((Wren(y) & Unknown(y))) -> (Vubis(y) & Unknown(y))))", "exists x.(Wren(x) & (yumpus(x) | vumpus(x) | Humpus(x)))"]}
{"id": "prontoqa_train_878", "nl": "Wren is a rompus.", "fol": "rompus(Wren)", "prediction": ["(Rompus(Wren) & -Rompus(w))", "all x.(Wren(x) -> Rompus(x))", "all x.(Wren(x) -> Rompus(x))", "all x.(Wren(x) -> Rompus(x))", "all x.(Wren(x) -> Rompus(x))", "all x.(Wren(x) -> Rompus(x))", "all x.(Wren(x) -> Rompus(x))", "Wren is rompus.", "all x.(Wren(x) -> Rompus(x))", "All x.(Wren(x) -> Rumpus(x))", "all x.(Wren(x) -> Rompus(x))", "all x.(Wren(x) -> Rrompus(x))", "all x.(Wren(x) -> Rhopus(x))", "all x.(Wren(x) -> Rompus(x))", "all x.(Wren(x) -> Rompus(x))", "(Rompus(Wren))"]}
{"id": "prontoqa_train_879", "nl": "Each numpus is not a shumpus.", "fol": "all x. (numpus(x) -> -shumpus(x))", "prediction": ["all x.(Numpus(x) -> -Shumpus(x))", "all x.(Nompus(x) -> -Shumpus(x))", "all x.exists y.(numpus(x) & Nompus(y) & -Shumpus(y))", "exists x.(Numerus(x) & -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Nompus(x) -> -Shumpus(x))", "all x.(Nompus(x) -> -Shumpus(x))", "all x.(Nompus(x) -> -Shumpus(x))", "all x.(Nompus(x) -> -Shumpus(x))", "all x.(Nompus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(numpus(x) -> -Shumpus(x))", "all x.(Number(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))"]}
{"id": "prontoqa_train_880", "nl": "Everything that is a lempus, a yumpus, or a brimpus is a shumpus.", "fol": "all x. ((lempus(x) | yumpus(x) | brimpus(x)) -> shumpus(x))", "prediction": ["all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Beyond(x) & (Lempus(x) | Yumpus(x) | Brimpus(x))) -> Humpus(x))", "all x.((Lempus(x) | Yampus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.(((Lempus(x) | Yupus(x) | Brimpus(x))) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Shumpus(x))", "all x.((Lampus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Shumpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumus(x) | Brimpus(x)) -> Shumpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yampus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Established(x) & (Lempus(x) | Yumpus(x) | Brimpus(x))) -> Humpus(x))"]}
{"id": "prontoqa_train_881", "nl": "Rex is a numpus and a gorpus and a rompus.", "fol": "(numpus(Rex) & gorpus(Rex) & rompus(Rex))", "prediction": ["all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "(Nompus(Rex) & Gorpus(Rex) & Rompus(Rex))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Gorpus(y) -> Rompus(y)))", "(all x.(Rex(x) -> Numpus(x)) & (Gorpus(x) & Rompus(x)))", "(Rex(rex) & Numpus(rex) & Gorpus(rex) & Rompus(rex))", "all x y z.((Rex(x) & Numpus(x) & Gorpus(y)) -> (Both(x,y) & Rompus(z)))", "all x y.((Rex(x) & Numpus(y)) -> (Nompus(x) & Dorpus(y) & Rompus(x)))", "(numpus(Rex) & gorpus(Rex) & rompus(Rex))", "all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "all x y.((Rex(x) & Numpus(y)) -> (Gerpus(x) | Rompus(x)))", "(All x.(Rex(x) -> Numpus(x)) & All y.(Gorpus(y) & All z.(Rompus(z) & Rex))))", "all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "all x.(Rex(x) -> (Nompus(x) & Gorpus(x) & Rompus(x)))", "all x.(Rex(x) -> (Numpus(x) | Gorpus(x) | Rompus(x)))", "all x.(Rex(x) -> (Numerus(x) & Gorpus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_882", "nl": "Everything that is a wumpus, a jompus, and a tumpus is a zumpus and a sterpus and a brimpus.", "fol": "all x. ((wumpus(x) & jompus(x) & tumpus(x)) -> (zumpus(x) & sterpus(x) & brimpus(x)))", "prediction": ["all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brampus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) | Sterpus(x) | Brimpus(x)))", "all x.(((Wumpus(x) | Jompus(x) | Tumpus(x))) -> (Zumpus(x) & Sterepus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Zumpus(x) & Sterus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Zumpus(x) | Sterus(x) | Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Shutter(x) & Sterpus(x) & Brimpus(x)))", "all x.((Theme(x) & (Wumpus(x) | Jompus(x) | Tumpus(x))) -> (Tompus(x) & Sterpus(x) & Empus(x)))", "all x.((Wumpus(x) & Jompus(x) & Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x y.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(y) & Sterepus(y) & Brimpus(y)))", "all x.(((Wumpus(x) | Jompus(x) | Tumpus(x))) -> (Tumpus(x) & Zuphorus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Toxicus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Humpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.(((Wumpus(x) | Jompus(x) | Tumpus(x))) -> (Toumpus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Spectrpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Fumpus(x) & Sterpus(x) & Brimpus(x)))"]}
{"id": "prontoqa_train_883", "nl": "Max is a wumpus.", "fol": "wumpus(Max)", "prediction": ["all x.(Max(x) -> Wampus(x))", "all x.(Wumpus(x) -> Max(x))", "All x.(Wumpus(x) -> Max(x))", "Max is Wumpus.", "(Wumpus(Max))", "(Wumpus(Max) -> HasWumpus(Max))", "(Wumpus(Max))", "(Wumpus(Max))", "Max is a Wampus.", "all x.(Max(x) -> Wompus(x))", "(Wumpus(Max) & WorksWith(Max))", "(Wumpus(Max))", "(Wumpus.)", "(Wumpus(Max))", "(Wumpus(Max) & Wumpus(Max))", "Max is wompus."]}
{"id": "prontoqa_train_884", "nl": "Max is a jompus.", "fol": "jompus(Max)", "prediction": ["all x.(Max(x) -> Jompus(x))", "(Jompus(Max))", "(Jimpus(Max))", "Max.(Jompus)", "Max (Jimpus)", "(Jompus(Max))", "exists x.(Jompus(x) & -Jampus(x))", "all x.(Max(x) -> Jompus(x))", "Max ist jampus.", "All x.(Max(x) -> Jompus(x))", "Max is Jompus(max)", "(Jumpus(Max) -> Jompus(Max))", "(Jempus(Max))", "Max (Jimpus)", "(Jompus(Max))", "all x.(Max(x) -> Jompus(x))"]}
{"id": "prontoqa_train_885", "nl": "Max is a tumpus.", "fol": "tumpus(Max)", "prediction": ["Max is Tumpus(x)", "All x.(Max(x) -> Tumpus(x))", "all x.(Max(x) -> Tumpus(x))", "\"Tumpus\"", "Max is Tumpus(Max)", "all x.(Max(x) -> Tumpus(x))", "(Tumpus(Max)", "(Tumpus(Max) -> HasTumpus(Max))", "Max!", "all x.(Max(x) -> Tumpus(x))", "\"Max(Max) -> Tumpus(Max))", "all x.(Max(x) -> Tumpus(x))", "all x.(Max(x) -> Tumpus(x))", "Max istumpus(max)", "(Tumpus(Max) -> Tumpus(Max))", "all x.(Max(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_886", "nl": "Max is a zumpus.", "fol": "zumpus(Max)", "prediction": ["(Tompus(max)", "all x.(Max(x) -> Zumpus(x))", "all x.(Max(x) -> Zumpus(x))", "All x.(Max(x) -> Zumpus(x))", "all x.(Max(x) -> Zumpus(x))", "Max(Max) -> Zumpus(Max))", "all x.(Max(x) -> Zumpus(x))", "all x.(Max(x) -> Zumpus(x))", "(Zumpus(Max) -> Tommulus(Max))", "all x.((Max(x) & Zumpus(x)) -> Furious(x))", "all x.(Max(x) -> Zumpus(x))", "all x.(Max(x) -> Zumpus(x))", "all x.(Max(x) -> Zumpus(x))", "(All x.(Max(x) -> Zumpus(x)))", "(Zumpus(max) -> Zumpus(max))", "Max is a zumpus."]}
{"id": "prontoqa_train_887", "nl": "Every shumpus is a tumpus, a yumpus, and a lempus.", "fol": "all x. (shumpus(x) -> (tumpus(x) & yumpus(x) & lempus(x)))", "prediction": ["all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lampus(x)))", "all x.(Shumpus(x) -exists y.(Tumpus(y) & Shumpus(z) & exists w.(Yumpus(w) & Shumpus(x,w))) & exists w.(Lempus(w) & Shumpus(y,w)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yukpus(x) & Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yampus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yumpus(x) & Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpis(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Shumpus(x) -> exists y z w.(Tumpus(y) & Yampus(z) & Lempus(w) & Y & Occupy(w) & Can(z)) & Has(x,y,z)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yumpus(x) & Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yampus(x) & Lempus(x)))", "all x y z.((Shumpus(x) & Tumpus(y) & Yukon(z)) -> (Tompus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yumpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_888", "nl": "Alex is a shumpus.", "fol": "shumpus(Alex)", "prediction": ["all x.(Alex(x) -> Humpus(x))", "all x.(Alex(x) -> Humpback(x))", "all x.(Alex(x) -> Humptuse(x))", "all x.(Shumpus(x) -> Alex(x))", "(Shumpus(Alex) -> IsShumpus(Alex))", "Alex is shumpus.", "(Soundpus(Alex) -> Humpus(Alex))", "All x.(Alex(x) -> Humpus(x))", "all x.(Alex(x) -> Humpus(x))", "Alex is a Humpus(Alex)", "Alex is shumpus.", "(Shumpus(Alex) & HasBeenInDepth(Alex))", "all x.(Shumpus(x) -> Alex(x))", "Alex is shumpus.", "all x.(Alex(x) -> Humpus(x))", "Alex is a shumpus."]}
{"id": "prontoqa_train_889", "nl": "Alex is a tumpus or a dumpus or a brimpus.", "fol": "(tumpus(Alex) | dumpus(Alex) | brimpus(Alex))", "prediction": ["all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Vumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dousus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (IsTumpus(x) | IsDumpus(x) | IsBrimpus(x)))", "all x.(Alex(x) -> (Tompus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_890", "nl": "Every sterpus is not a tumpus.", "fol": "all x. (sterpus(x) -> -tumpus(x))", "prediction": ["all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Stern(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Sterepus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Stumpus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Steerpus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Steerpus(x) -> -Tompus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))"]}
{"id": "prontoqa_train_891", "nl": "Every lorpus is a tumpus.", "fol": "all x. (lorpus(x) -> tumpus(x))", "prediction": ["all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "exists x.(Lorpus(x) & Tumulus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "exists x.(Lorpus(x) & Tumulus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Mutumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Mutumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorp(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_892", "nl": "Wren is a sterpus.", "fol": "sterpus(Wren)", "prediction": ["is a sterpus.", "all x.(Wren(x) -> Sterepus(x))", "all x.(Wren(x) -> Sterepus(x))", "all x.(Wren(x) -> Sterpus(x))", "all x.(Wren(x) -> Sterpus(x))", "...isSterpus(Wren)", "all x.(Wren(x) -> Sterpus(x))", "all x.(Wren(x) -> Steerpus(x))", "all x.(Wren(x) -> Sterpus(x))", "all x.(Wren(x) -> Sterosen(x))", "(Pseudo(Wren) & Sterpus(w))", "all x.(Wren(x) -> Sterpus(x))", "exists x.(Wren(x) & Sterpus(x))", "all x.(Wren(x) -> Sterpus(x))", "all x.(Wren(x) -> Sterpus(x))", "all x.(Wren(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_893", "nl": "Wren is a grimpus or Wren is not a lorpus or Wren is a lempus.", "fol": "(grimpus(Wren) | -lorpus(Wren) | lempus(Wren))", "prediction": ["all x.(Wren(x) -> ((Grimpus(x) | -Lorpus(x) | Lempus(x))))", "all x y.((Wren(x) & Grimpus(x)) | (-Clorpus(y) | Lempus(y))))", "(exists x.(Wren(x) & Grimpus(x)) | exists y.(Wren(y) & -Lorpus(x))) | exists z.(Wren(z) & Lempus(z))))", "(all x.(Wren(x) -> Grimpus(x)) | (-Lorpus(x) & -lempus(x))))", "all x y.((Wren(x) & Grifpus(x)) | (-Lorpus(x) | Lempus(y))))", "(all x.(Wren(x) -> Grimpus(x)) | (-Lorpus(x) | Lempus(x))))", "all x.((Wren(x) & (Grimpus(x) | -Lorpus(x) | Lemmpus(x))) -> Crombus(x))", "all x.(Wren(x) -> ((Grimpus(x) | -Lorpus(x) | Lempus(x))))", "((Wren(grempus) | Wren(lorpus)) | (Wren(lempus))))", "(all x.(Wren(x) -> Grimpus(x)) | (-Clorpus(x) | Lampus(x))))", "(all x.(Wren(x) -> Grimpus(x)) | (-Lorpus(x) & Lempus(x))))", "(all x.(Wren(x) -> Grimpus(x)) | (-Lorpus(x) | Lempus(x))))", "(all x.(Wren(x) -> Grumpy(x)) | (-Lorpus(x) | Lampus(x))))", "all x y.((Wren(x) & Grout(x) | (-Lorpus(x) & Lempus(y)))) -> Grimpus(x))", "all x.((Wren(x) & (NoLorpus(x) | Lempus(x))) -> Grimpus(x))", "all x.((Wren(x) & Grimpus(x)) | (-Lorpus(x) | Lempus(x))))"]}
{"id": "prontoqa_train_894", "nl": "Every gorpus is a tumpus.", "fol": "all x. (gorpus(x) -> tumpus(x))", "prediction": ["all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Pumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumulus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_895", "nl": "Sally is not a tumpus and Sally is a lempus and Sally is a vumpus.", "fol": "(-tumpus(Sally) & lempus(Sally) & vumpus(Sally))", "prediction": ["(-Tumpus(Sally) & Lempus(Sally) & Vumpus(Sally))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Lempus(y) & Vumpus(y)))", "all x y z.((Sally(x) & Tumpus(y) & Lempus(z)) -> (-Tumpus(x) & Lempus(x) & -Vumpus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & (Lempus(x) | Vumpus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Lempus(y) & Voompus(y))))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> Vumpus(z))))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> Vumpus(z))))", "(all x y.((Sally(x) & Tumpus(y)) -> Not(x,y)) & ((Sally(x) & Lempus(x)) -> Vumpus(x)))", "all x y z.((Sally(x) & Tumpus(y) & Lempus(z)) -> (-Tumpus(x) & Lempus(y) & Voompus(z)))", "all x y z.((Sally(x) & Tumpus(y) & Lempus(z)) -> (-Tumpus(x) & Lempus(y) & Vumpus(z)))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Lempus(y) & All z.(Vumpus(z))) -> -Tumpus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> Vumpus(z))))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> Vumpus(z))))", "all x y z.((Sally(x) & Tumpus(y) & Lempus(z)) -> (-Tumpus(x) & Lempus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Lempus(y) & Vumpus(y))))", "all x y z.((Sally(x) & Tumpus(y) & Lempus(z)) -> (-Tumpus(x) | (Lempus(x) | Vumpus(x))))"]}
{"id": "prontoqa_train_896", "nl": "Sally is a tumpus or Sally is a lorpus or Sally is not a gorpus.", "fol": "(tumpus(Sally) | lorpus(Sally) | -gorpus(Sally))", "prediction": ["all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "((Tumpus(Sally) | Lorpus(Sally)) | -Rorpus(Sally)))", "(all x y.((Sally(x) & Tumpus(x)) | ((Sally(y) & Lorpus(y))) | (-Sally(y) & Gorpus(y))))", "all x.(Sally(x) -> ((Tumpus(x) | Lorpus(x) | -Gorpus(x))))", "all x.((Sally(x) & Tumpus(x)) | (Lorpus(x) & -Gorpus(x))))", "(exists x.(Sally(x) & Tumpus(x)) | exists y.(Sally(y) & Lorpus(y))) | exists z.(Sally(z) & -Gorpus(z))))", "(Either exists x.(Sally(x) & Tumpus(x)) | exists y.(Sally(y) & Lorpus(y))) | exists z.(Sally(z) & Gorpus(z)))))", "((Sally(Sally) & Tumpus(Sally)) | (Sally(Sally) & Lorpus(Sally)) | (Sally(Sally) & -Gorpus(Sally))))", "all x.(Sally(x) -> (Tompus(x) | Lorpus(x) | -Gorpus(x)))", "all x.((Sally(x) & Rumpus(x)) | (Lorpus(x) | -Gorpus(x))))", "all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "all x.(Sally(x) -> ((Tumpus(x) | Lorpus(x) | -Gorpus(x))))", "all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "all x.((Sally(x) & (Tumpus(x) | Lorpus(x) | -Gorpus(x))) -> (Lorpus(x)))"]}
{"id": "prontoqa_train_897", "nl": "Numpuses are yumpuses, vumpuses, and gorpuses.", "fol": "all x. (numpus(x) -> (yumpus(x) & vumpus(x) & gorpus(x)))", "prediction": ["all x.(Numpuse(x) -> (Yumpus(x) | Vumpuse(x) | Gorpuse(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vumpus(x) | Gorpus(x)))", "all x y z.((Numpuse(x) & Yampus(y) & Vumpus(z)) -> (Umpus(x) | Vumpus(z) | Gorpus(z)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vumpuse(x) | Gorpus(x)))", "all x.(Nimbus(x) -> (Yumpus(x) | Vumpus(x) | Gorpus(x)))", "all x.(Numpus(x) -> (Yumpus(x) & Vumpus(x) & Gorpuse(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vampuse(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vampuse(x) | Gorpus(x)))", "all x.(Numpus(x) -> (Yumpus(x) | Vampuse(x) | Gorpuse(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vampuse(x) | Gorpus(x)))", "all x.(Numpus(x) -> (Yumpus(x) | Vampus(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vampuse(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vumpus(x) | Gorpuse(x)))", "all x.(Numpus(x) -> (Yumpus(x) | Vampuse(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vumpus(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vampuse(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_898", "nl": "Rex is a grimpus, Rex is not a gorpus, and Rex is a shumpus.", "fol": "(grimpus(Rex) & -gorpus(Rex) & shumpus(Rex))", "prediction": ["all x y z.((Rawpus(x) & Grimpus(y) & Gorpus(z) & Shumpus(z)) -> ((Rawpus(x) | Rex(y)) & Grimpus(z) & -Gorpus(y) & Humpus(y)))", "(all x.(Rex(x) -> Grimpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Humpus(x)))", "all x y z.((Rex(x) & Grimpus(y) & Gorpus(z) & Shumpus(x)) -> (Grundpus(x) & -Gorpus(y) & Shumpus(z)))", "all x y z.((Grimpus(x) & Gorpus(y) & Humpus(z)) -> (Aggressive(x) & -Aggressive(y) & Aggressive(z)))", "all x.((Rex(x) & Grimpus(x)) -> (-Gorpus(x) & Humpus(x)))", "(all x.(Rex(x) -> Grimpus(x)) & (-Gorpus(x) & Shumpus(x)))", "(all x y.((Rex(x) & Grimpus(x)) -> Grimpus(x)) & ((Rex(y) & -Gorpus(y)) -> Shumpus(y)))", "(all x.(Rex(x) -> Grimpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Shumpus(x)))", "(all x.(Rex(x) -> Grimpus(x)) & ((Rex(x) -> -Gorpus(x))) & (Rex(x) -> Shumpus(x))))", "(all x.(Rex(x) -> Grimpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Shumpus(x)))", "(all x.(Rex(x) -> Grimpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Humpus(x)))", "(all x.(Rex(x) -> Grimpus(x)) & (-Gorpus(x) & (Shumpus(x) -> Grimpus(x))))", "all x y z.((Rex(x) & Gruppus(y) & Gorpus(z)) -> (Grimpus(x) & -Gorpus(y) & Humpus(z)))", "(all x.(Rex(x) -> Grumpus(x)) & (-Gorpus(x) & Shumpus(x)))", "(all x y z.((Rex(x) & Grumpus(y)) -> (Grisp(x) & Gorpus(z) & -Gorpus(x)) & ((Rex(x) & Humpus(x))))", "(all x.(Rex(x) -> Grumpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Humpus(x)))"]}
{"id": "prontoqa_train_899", "nl": "Each yumpus is not a wumpus.", "fol": "all x. (yumpus(x) -> -wumpus(x))", "prediction": ["all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "exists x.(Yumpus(x) & -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))"]}
{"id": "prontoqa_train_900", "nl": "Fae is a yumpus.", "fol": "yumpus(Fae)", "prediction": ["Fae (yumpus)", "all x.(Fae(x) -> Yampus(x))", "(Yumpus(Fae) & Fugitive(Fae))", "all x.(Fae(x) -> Yampus(x))", "all x.(Fae(x) -> Yampus(x))", "the Fuchsia (Yumpus)", "(Yumpus(fae) & Yampus(fae))", "(Yumpus(Fae)", "all x.(Fae(x) -> Yampus(x))", "(Yumpus(Fae) & BreedsIn(Fae,Yumpus))", "all x.(Fae(x) -> Yumpsum(x))", "all x.(Fae(x) -> Yampus(x))", "all x.(Fae(x) -> Yampus(x))", "(Yumpus(Fae) & Yeast(Fae))", "Yumpus(Fae)", "all x.(Yumpus(x) -> Fae(x))"]}
{"id": "prontoqa_train_901", "nl": "Fae is a vumpus or Fae is a wumpus or Fae is not a tumpus.", "fol": "(vumpus(Fae) | wumpus(Fae) | -tumpus(Fae))", "prediction": ["all x y.((Fae(x) & Tumpus(x)) | (Fae(x) & Wumpus(x)) | -Tumpus(x)))", "all x.(Fae(x) -> ((Vumpus(x) | Wumpus(x) | -Tumpus(x))))", "(all x.(Fae(x) -> Vumpus(x)) | (Fae(x) -> Wumpus(x)) | (Fae(x) -> -Tumpus(x))))", "(exists x.(Fae(x) & (Vumpus(x) | Wumpus(x))) & -Tumpus(x)))", "((Fae(Fae) & Vumpus(Fae)) | (Fae(Fae) & Wumpus(Fae)) | (Fae(Fae,Tumpus)) & -Fae(Fae,Tumpus)))", "(Augly(Fae) | Alumni(Fae) | Alumni(Fae) | And NotThumpus(Fae)))", "((Fae(f) & Vumpus(f)) | (Fae(f) & Wumpus(f)) | (Fae(f) & -Tumpus(f))))", "((Fae(f) & Vulmpus(f)) | (Fae(f) & Wumpus(f)) | (Fae(f) & -Tumpus(f))))", "all x.(Fae(x) & ((Vumpus(x) | Wumpus(x)) | -Tumpus(x)))", "(all x.(Fae(x) -> (Vumpus(x) | Wumpus(x) | -Tumpus(x))))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> Wumpus(x)) | (Fae(x) -> -Tumpus(x))))", "all x y.((Fae(x) & Vumpus(x)) | (Fae(y) & Wumpus(y)) | (Fae(x) & -Tumpus(x))))", "((Fae isVampus(Fae) | Fae isWumpus(Fae)) | (Fae is -Tumpus(Fae))))", "all x.(Fae(x) -> (Vimpus(x) | Wumpus(x) | -Tumpus(x)))", "(i.e.(Fae(i) & (Pumpus(i) | Wumpus(i)) | -Tumpus(i)))", "((Fae(f) & Vumpus(f)) | (Fae(f) & Wumpus(f)) | (Fae(f) & -Tumpus(f))))"]}
{"id": "prontoqa_train_902", "nl": "Everything that is a zumpus, a brimpus, or a numpus is a rompus, a lorpus, and a lempus.", "fol": "all x. ((zumpus(x) | brimpus(x) | numpus(x)) -> (rompus(x) & lorpus(x) & lempus(x)))", "prediction": ["all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) & Lorpus(x) & Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) & Lorpus(x) & Lampus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (rompus(x) & lorpus(x) & plumb(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lampus(x)))", "all x.((Zumpus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) & Lorpus(x) & Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) & -Lorpus(x) & -Limpus(x)))", "all x.((Tompus(x) | Brimpus(x) | numpus(x)) -> (Rompus(x) & Llorpus(x) & Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lower(x) | Lampus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lampus(x)))", "all x.((Tompus(x) | Brimpus(x) | Countpus(x)) -> (Rompus(x) | Lorpus(x) | Lampus(x)))", "all x.((Simpus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) & Lordpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_903", "nl": "Sam is a numpus.", "fol": "numpus(Sam)", "prediction": ["all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numus.", "all x.(Sam(x) -> Numpus(x))", "(Numpus(Sam) & Consumes(Sam,Peace))", "all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))", "Sam is Numpus.", "All x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numple(x))", "all x.(Sam(x) -> Numptus(x))", "all x.(Sam(x) -> Numpus(x))", "All x.(Sam(x) -> Numpus(x))"]}
{"id": "prontoqa_train_904", "nl": "Sam is a lempus.", "fol": "lempus(Sam)", "prediction": ["all x.(Sam(x) -> Lempus(x))", "all x.(Lempus(x) -> Sam(x))", "exists x.(Lempus(x) & Sam(x))", "all x.(Sam(x) -> Lempus(x))", "all x.(Noctovex(x) -> Lempus(x))", "all x.(Sam(x) -> Lempus(x))", "all x.(Lampus(x) -> Sam(x))", "all x.(Lempus(x) -> Sam(x))", "all x.(Sam(x) -> Lempus(x))", "all x.(Sam(x) -> Lempus(x))", "(Lempus(Sam) & HasThrow(Sam))", "Sam ist Lempus(sam)", "Sam (Lempus)", "all x.(Sam(x) -> Lempus(x))", "all x.(Sam(x) -> Lempus(x))", "all x.(Sam(x) -> Lempus(x))"]}
{"id": "prontoqa_train_905", "nl": "Everything that is a wumpus or a zumpus or a grimpus is a jompus and a gorpus and a lempus.", "fol": "all x. ((wumpus(x) | zumpus(x) | grimpus(x)) -> (jompus(x) & gorpus(x) & lempus(x)))", "prediction": ["all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jimpus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jumpus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jumpus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jimpus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (HeadedByJimpus(x) & HaggedByRose(x) & HaggedByLempus(x)))", "all x.((Exacts(x) & (Wumpus(x) | Zumpus(x) | Grimpus(x))) -> (Jompus(x) | Gorpus(x) | Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x)) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jimpus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Tomppus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & (Gorpus(x) | Lempus(x))))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_906", "nl": "Alex is a grimpus.", "fol": "grimpus(Alex)", "prediction": ["(Cruelpus(Alex))", "all x.(Alex(x) -> Grimpus(x))", "Alex is grimpus.", "All x.(Alex(x) -> Grimpus(x))", "isAlexa(Alex)", "all x.(Alex(x) -> Grimpus(x))", "all x.(Alex(x) -> Grimpus(x))", "Alex ((Summerpus(Alex)) -> Grimpus(Alex))", "Alex is a Grimpus.", "Alex is a Grimpus.", "all x.(Alex(x) -> Grimpus(x))", "-Smoothpus(Alex)", "All x.(Alex(x) -> Grimpus(x))", "all x.(Alex(x) -> Grimpus(x))", "Alex (Grampus)", "all x.(EsteemStrumpus(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_907", "nl": "Alex is a gorpus.", "fol": "gorpus(Alex)", "prediction": ["all x.(Alex(x) -> Gorpus(x))", "All x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "Alex,gorpus(Alex)", "all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "Alex is Gorpus.", "all x.(Alex(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_908", "nl": "Every yumpus is a sterpus and a jompus and an impus.", "fol": "all x. (yumpus(x) -> (sterpus(x) & jompus(x) & impus(x)))", "prediction": ["all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Imperator(x)))", "all x.(Yumpus(x) -> (IsSterpus(x) & IsJompus(x) & IsIssuel(x)))", "all x.(Yumpus(x) -> (Strotypus(x) & Jompus(x) & Impeccator(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Imperator(x)))", "all x.(Yumpus(x) -> (Sterectus(x) & Jompus(x) & Implosionist(x)))", "all x.(Yumpus(x) -> (Beast(x) | Beast(x) | Obsidian(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Impossible(x)))", "all x.(Yumpus(x) -> (Steerpus(x) & Jompus(x) & Issue(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Issue(x)))", "all x.(Yumpus(x) -> (Solen(x) | Jompus(x) | Imperator(x)))", "all x.(Yumpus(x) -> (Steerpus(x) & Jompus(x) & Ceress(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Impeccable(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Impilicator(x)))", "all x.(Yumpus(x) -> (IsSterpus(x) & IsJompus(x) & IsImpossible(x)))", "all x.(Yumpus(x) -> (Sterepus(x) | Jompus(x) | Impeccator(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Imperia(x)))"]}
{"id": "prontoqa_train_909", "nl": "Lempuses are not jompuses.", "fol": "all x. (lempus(x) -> -jompus(x))", "prediction": ["all x.(Lempuse(x) -> -Jockuse(x))", "all x.(Lempuse(x) -> -Jumpus(x))", "all x.(Lemme(x) -> -Jompuse(x))", "all x.(Lempuse(x) -> -Jompuse(x))", "all x.(Lempuse(x) -> -Jombuse(x))", "all x.(Lempuse(x) -> -Jompuse(x))", "all x.(Lempuse(x) -> -Jombuse(x))", "all x.(Lempuse(x) -> -Jompuse(x))", "(all x.(Lempus(x) -> ThisDollar(x)))", "all x.(Lempuse(x) -> -Jumpus(x))", "all x.(Lempuse(x) -> -Jockuse(x))", "all x.(Lempuse(x) -> -Jumpus(x))", "all x.(Lempuse(x) -> -Jompuse(x))", "all x.((Lempuse(x) & -Jompuse(x)) -> -Lempuse(x))", "all x.(Lempuse(x) -> -Jompuse(x))", "all x.(Lempuse(x) -> -Jompuse(x))"]}
{"id": "prontoqa_train_910", "nl": "Polly is a grimpus, an impus, and a lempus.", "fol": "(grimpus(Polly) & impus(Polly) & lempus(Polly))", "prediction": ["all x.(Polly(x) -> (Grimmel(x) | Impossible(x) | Lempus(x)))", "all x y z.((Polly(x) & Grimpus(y) & Imperium(z) & Lempus(x)) -> (Grimpus(x) | Impossible(z) | Lempus(x)))", "all x.(Polly(x) -> (Fragus(x) | Imperative(x) | Lempus(x)))", "(Grosspus(Polly) & Impossible(Poly) & Lempus(Poly))", "all x.(Polly(x) -> (Grimpus(x) & Imperemptor(x) & Lempus(x)))", "all x.(Poly(x) -> (Grimpus(x) | Imperator(x) | Lempus(x)))", "all x.(Polly(x) -> (Fruit(x) | Imperium(x) | Lempus(x)))", "all x.(Polly(x) -> (Grimpus(x) & Issue (x) & Lampus(x)))", "(all x y z.(Polly(x) -> (Grimpus(y) | Issue(y) | Lempus(y)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Impossible(y) & Lompus(y)))", "all x.(Polly(x) -> (Grimpus(x) & Imperium(x) & Lempus(x)))", "(FieldsCrupSnowpus(Polly) & (FieldsImprovement(Poly) | FieldsLempus(Poly)))", "(Smooch(Polly) | Imperator(poly) | Lempus(poly)))", "(all x.(Polky(x) -> Grimpus(x)) & all y.(Issue(y) -> Lightempus(y)))", "all x.(Ploy(x) -> (Grimpus(x) | Imperative(x) | Lempus(x)))", "(Mammal(Polly) & Grimpus(Polly) & Isobel(Poly) & Lempus(Poly))"]}
{"id": "prontoqa_train_911", "nl": "Everything that is a grimpus, a rompus, or a gorpus is a numpus.", "fol": "all x. ((grimpus(x) | rompus(x) | gorpus(x)) -> numpus(x))", "prediction": ["all x.((Grimpus(x) | Romanpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Smouch(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Fragpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Furpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Smoke(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Fragus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Gruppus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Gruppus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Gruppus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Pumpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Murpush(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rumpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Grampus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.(((Grimpus(x) | Rompus(x) | Gorpus(x))) -> Numpus(x))", "all x.((Grumpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Stealth(x) | Sturpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))"]}
{"id": "prontoqa_train_912", "nl": "Alex is a shumpus, Alex is not a numpus, and Alex is a sterpus.", "fol": "(shumpus(Alex) & -numpus(Alex) & sterpus(Alex))", "prediction": ["(all x.(Alex(x) -> Humpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x)))", "(all x y z.(Alex(x) -> Shumpus(x)) & ((Alex(y) & (-Shumpus(y) & -Stomatus(z))) | (-Alex(y) & Sterpus(z)))))", "(all x.(Alex(x) -> Shumpus(x)) & (Alex(x) -> -Nompus(x)) & (Alex(x) -> Sterpus(x)))", "all x y z.((Alex(x) & Shumpus(y) & Numpus(z) & Sterpus(x)) -> (Shumpus(x) & -Numpus(x) & -Sterpus(x)))", "all x y z.((Alex(x) & Stump(y) & Numpus(z)) -> (Shumpus(x) & -Nompus(y) & Sterpus(z)))", "all x y z.((Alex(x) & Simpus(y) & Sterpus(z)) -> (Shumpus(x) | -numpus(y) | Sterpus(z))))", "all x y z.((Alex(x) & Humpus(y) & Stroh(z)) -> (Are(x,y) & -Are(x,z)) & Aare(x,y)))", "all x y z.((Alex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & -Sterpus(y)))", "all x.(Alex(x) -> (Shumpus(x) & -Numpus(x) & Sterpus(x)))", "(all x.(Alex(x) -> Shumpus(x)) & all y.(Alex(y) -> -Dumpus(y))) & all z.(Alex(z) -> Sterepus(z))))", "(all x.(Alex(x) -> Sahmous(x)) & all y.(Alex(y) -> -Numpus(y))) & all z.(Alex(z) -> Sterepus(z)))", "(all x.(Alex(x) -> Shumpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x))))", "(all x.(Alex(x) -> Shumpus(x)) & (Alex(x) -> -Nompus(x))) & (Alex(x) -> Sterepus(x)))", "(all x.(Alex(x) -> Humpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x)))", "all x y z.((Alex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) | Sterpus(x)))", "all x y z.((Alex(x) & Humpback(y) & Numpus(z)) -> (Shumpus(x) | -Numpus(y) | Sterpus(z)))"]}
{"id": "prontoqa_train_913", "nl": "Each wumpus is a lorpus, a sterpus, and a brimpus.", "fol": "all x. (wumpus(x) -> (lorpus(x) & sterpus(x) & brimpus(x)))", "prediction": ["exists x.(Wumpus(x) & Lorpus(x) & Sterpus(x) & Brimpus(x))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) & Sterpus(x) & Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Larpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) & Sterpus(x) & Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) & Sterpus(x) & Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "(all x.(Wumpus(x) -> Lord(x)) & all y.(Sterepus(y) & -Brimpus(y)))"]}
{"id": "prontoqa_train_914", "nl": "Stella is a wumpus.", "fol": "wumpus(Stella)", "prediction": ["Stella is a Wumpus.", "All x.(Wumpus(x) -> Stella(x))", "Stella is a wumpus.", "Stella is Wumpus(x)", "Stella is a wumpus.", "Stella is a Wumpus.", "Stella is a Wumpus.", "all x.(Wumpus(x) -> Stella(x))", "Stella is a wumpus.", "all x.(Wumpus(x) -> Stella(x))", "Stella is a Wumpus.", "Stella is a wumpus.", "Stella is a wumpus.", "Stella is a wumpus.", "Stella is a Wumpus.", "Stella is a Wumpus."]}
{"id": "prontoqa_train_915", "nl": "Stella is a jompus, a lorpus, or a shumpus.", "fol": "(jompus(Stella) | lorpus(Stella) | shumpus(Stella))", "prediction": ["all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "exists x.(Stella(x) & (Jimpus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jampus(x) | Lopus(x) | Humpus(x)))", "(all x.(Stella(x) -> Jompus(x)) | (Lorpus(x) | Humpus(x))))", "all x.(Stella(x) -> (IsJumpus(x) | IsLorpus(x) | IsShumpus(x)))", "(Jompus(Stella) | Lordpus(Stella) | Humpus(Stella))", "(exists x.(Stella(x) & Jompus(x)) | exists y.(Lorpus(y) & Shumpus(y))))", "(all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Shumpus(x))))", "(Jempus(Stella) | Lorpus(Stella) | Humpus(Stella)))", "all x.(Solva(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "exists x.(Stella(x) & (Jompus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jompus(x) | Lordpus(x) | Humpus(x)))"]}
{"id": "prontoqa_train_916", "nl": "Each sterpus is a numpus and a yumpus and a zumpus.", "fol": "all x. (sterpus(x) -> (numpus(x) & yumpus(x) & zumpus(x)))", "prediction": ["all x.(Sterolus(x) -> (MajorNumpus(x) & MagnumPuppus(x) & Zumpus(x)))", "all x y.((Sterepus(x) & Numpus(y)) -> (Yumpus(x) & Zumpus(y)))", "all x.(Sterpus(x) -> (numpus(x) & yumpus(x) & zumpus(x)))", "(all x.(Sterpus(x) -> Numpus(x)) & (Yumpus(x) & Zumpus(x)))", "all x.(Sterpus(x) -> (numpus(x) & yumpus(x) & zumpus(x)))", "all x.(Sternpus(x) -> (numpus(x) & yumpus(y) & zumpus(y)))", "all x.(Starpus(x) -> (numpus(x) & yumpus(x) & zumpus(x)))", "(all x.(Sterpus(x) -> Numpus(x)) & all yumpus(y) & all z.(Zumpus(z) -> Zumpus(x)))", "all x.((Steerpus(x) & Numpus(x)) -> (Yumpus(x) & Zumpus(x)))", "all x y.((Sterpus(x) & Numpus(y)) -> (Yumpus(x) & zumpus(x)))", "exists x.(Sterpus(x) & Numpus(x) & Yumpus(x) & Zumpus(x))", "all x.(Sterpus(x) -> (Numpus(x) & Yumpus(x) & Zumpus(x)))", "all x.(Sterepus(x) -> (Numpus(x) | Yumpus(x) | Zumpus(x)))", "all x.(Sterepus(x) -> (numpus(x) | yumpus(x) | zumpus(x)))", "all x.(Sterpus(x) -> (Numpus(x) | Yumpus(x) | Zumpus(x)))", "all x y.((Sterpus(x) & Numpus(y)) -> (Pumpus(x) & Yumpus(y) & Zumpus(z)))"]}
{"id": "prontoqa_train_917", "nl": "Sam is not a numpus and Sam is a jompus and Sam is a yumpus.", "fol": "(-numpus(Sam) & jompus(Sam) & yumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Numpus(x)) & (Jompus(x) | Yumpus(x))))", "(all x.((Sam(x) & -Number(x)) | (-Sam(x) & Jompus(x))) | (-Sam(x) & Yumpus(x))))", "(all x.(Sam(x) -> -Numpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Yumpus(x)))", "all x y z.((Saman(x) & Numpus(y) & Jompus(z)) -> (-Numpus(x) & Jompus(z) & Yampus(x)))", "(all x.((Sam(x) & Numpus(x)) -> -Numpus(x)) & ((Sam(x) & Jompus(x)) -> Yumpus(x)))", "(all x.(Sam(x) -> -Numpus(x)) & (Jompus(x) | Yumpus(x)))", "all x y z.((Sam(x) & Numpus(y) & Jompus(z)) -> (-Numpus(x) & Yompus(x) & Yumpus(x)))", "(all x.(Sam(x) -> -Numpus(x)) & (Jimpus(x) | Yumpus(x))))", "all x y z.((Sam(x) & Numpus(y) & Jompus(z)) -> (-Numpus(x) & -Humpus(z) & 'Yumpus(z)))", "(-Numpus(Sam) & Jompus(Sam) & Yumpus(Sam))", "(all x.((Sam(x) & -Number(x)) -> Jompus(x)) & ((Sam(x) & Yumpus(x)) -> Yompus(x)))", "all x y z.((Nompus(x) & Jompus(y) & Yummus(z)) -> (-Numpus(x) & Jompus(y) & Yummus(z)))", "all x y.((Sam(x) & -Numpus(x)) -> (Jojis(x) & Yumpus(y)))", "all x y.((Sam(x) & Numpus(x)) -> is-(Jimpus(y) | Yompus(y)))", "all x y z.((Sam(x) & Numpus(y) & Jompus(z)) -> (-Numpus(x) & Jompus(z) & Yumpus(z)))", "(all x.(Sam(x) -> -Number(x)) | (Jimpus(x) | Yumpus(x))))"]}
{"id": "prontoqa_train_918", "nl": "Everything that is a lempus, a lorpus, or a zumpus is a wumpus, an impus, and a yumpus.", "fol": "all x. ((lempus(x) | lorpus(x) | zumpus(x)) -> (wumpus(x) & impus(x) & yumpus(x)))", "prediction": ["all x.((Wumpus(x) | Impossible(x) | Yumpus(x)) -> (Lempus(x) | Lorpus(x) | Zumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Imperempt(x) & Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Imperative(x) | Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & impus(x) & yumpus(y)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Imperative(x) | Yampus(x)))", "all x.((Lempus) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Issue(x) & Yampus(x)))", "all x.((Lempus(x) | Lops(x) | Zumpus(x)) -> (Wumpus(x) & Impossible(x) & Yumpus(x)))", "all x.((Butterfly(x) & (Lempus(x) | Lorpus(x) | Zumpus(x))) -> (Wumpus(x) | Impossible(x) | Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Impelicator(x) & Yumpus(x)))", "all x.((Alternative(x) & (Lempus(x) | Lorpus(x) | Zumpus(x))) -> (Wumpus(x) & Imperative(x) & Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Impossible(x) & Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Issue(x) & Yompus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Winmpus(x) & Impossible(x) & Yumpus(x)))", "all x y.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(y) & Impossible(y) & Yumpus(y)))", "all x.((Lempus(x) | Lorpus(x) | Tospus(x)) -> (Wumpus(x) | Imperator(x) | Yumpus(x)))", "all x.((Lempus(x) | Larpus(x) | Zumpus(x)) -> (Wumpus(x) | Impossible(x) | Yumpus(x)))"]}
{"id": "prontoqa_train_919", "nl": "Wren is a lempus.", "fol": "lempus(Wren)", "prediction": ["all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) & Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))"]}
{"id": "prontoqa_train_920", "nl": "Wren is an impus.", "fol": "impus(Wren)", "prediction": ["all x.(Wren(x) -> Impasto(x))", "(IsIsWell(Wren,Bossom) & Does(Wren,Individual))", "(Impossible(Wren,2016))", "all x.(Wren(x) -> Isolated(x))", "(Crop (Wren) & IsExercise(w))", "All x.(Wren(x) -> Improvised(x))", "ALL x.(Wren(x) -> Explosive(x))", "Eraser(Wren)", "all x.(Wren(x) -> Imperative(x))", "all x.(Wren(x) -> IsImpossible(x))", "exists x.(Wren(x) & IsImpossible(x))", "All x.(Wren(x) -> Is(x,Prime))", "all x.(Wren(x) -> Isolated(x))", "All x.(Wren(x) -> Id\u00e9lice(x))", "All x.(Wren(x) -> Illegal(x))", "all x.(Wren(x) -> Impossible(x))"]}
{"id": "prontoqa_train_921", "nl": "Everything that is a rompus or a vumpus or a zumpus is a lorpus, a brimpus, and a gorpus.", "fol": "all x. ((rompus(x) | vumpus(x) | zumpus(x)) -> (lorpus(x) & brimpus(x) & gorpus(x)))", "prediction": ["all x.((Rompus(x) | Visum(x) | Zumpus(x)) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x.((Rompus(x) | Umpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Carnival(x) & (Rompus(x) | Vumpus(x) | Zumpus(x))) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Voompus(x) | Zumpus(x)) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x.((Rompus(x) | Voompus(x) | Zumpus(x)) -> (Sherpa(x) & Florid (x)) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Voompus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_922", "nl": "Sam is a rompus.", "fol": "rompus(Sam)", "prediction": ["all x.(Sam(x) -> Rompus(x))", "all x.(Sam(x) -> Rupus(x))", "(Rompus(Sam) & Rompus(Sam))", "exists x.(Rompus(x) & Sam(x))", "all x.(Sam(x) -> Rompus(x))", "all x.(Rompus(x) -> Sam(x))", "exists x.(Rompus(x) & Sam(x))", "(Rompus(Sam) & LivesIn(Sam))", "/ Rompus(Sam))", "all x.(Rompus(x) -> Sam(x))", "all x.(Sam(x) -> Rompus(x))", "(Rompus(Sam) & Oasis(Sam))", "all x.((Sam(x) & Rompus(x)) -> Requires(x))", "IsRompus(Sam)", "exists x.(Sam(x) & Rompus(x))", "all x.(Sam(x) -> Rompus(x))"]}
{"id": "prontoqa_train_923", "nl": "Sam is a gorpus.", "fol": "gorpus(Sam)", "prediction": ["(Gorpus(Sam) & Pernod(Sam))", "all x.(Sam(x) -> Gorpus(x))", "all x.(Sam(x) -> Gorpus(x))", "all x.(Gorpus(x) -> Sam(x))", "all x.((Sam(x) & Gorpus(x)) -> Gorpus(x))", "(Gorpus(Sam) & Gorpus(Sam))", "all x.((Sam(x) & Gorpus(x)) -> Gorpus(x))", "all x.(Som(x) -> Gorpus(x))", "(Gorpus(Sam) -> Gorpus(Sam))", "all x.(Sam(x) -> Gorpus(x))", "(Gorpus(Sam) & Orpheus(Sam))", "all x.(Rose(x) -> Gorpu(x))", "all x.(Sam(x) -> Gorpus(x))", "all x.(Sam(x) -> Gorpus(x))", "all x.(Sam(x) -> Gorpus(x))", "(Gorpus(Sam) & LivesIn(Sam))"]}
{"id": "prontoqa_train_924", "nl": "Everything that is a lorpus, a sterpus, and a grimpus is a tumpus.", "fol": "all x. ((lorpus(x) & sterpus(x) & grimpus(x)) -> tumpus(x))", "prediction": ["all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterosus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterepus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((All & Thryme(x) & (Lorpus(x) | Sterpus(x) | Grimpus(x))) -> Tumpus(x))", "all x.((Lorpus(x) | Sterepus(x) | Grimpus(x)) -> Tumpus(x))"]}
{"id": "prontoqa_train_925", "nl": "Fae is not a tumpus, Fae is a dumpus, and Fae is a wumpus.", "fol": "(-tumpus(Fae) & dumpus(Fae) & wumpus(Fae))", "prediction": ["(all x.(Tumpus(x) -> -Tumpus(x)) & (Dumpus(x) -> Tumulus(x))) & (Wumpus(x) -> (Wimpus(x) -> Dumpus(x))))", "(all x.(Fae(x) -> -Tumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> Wumpus(z))))", "-(Tumpus(Fae) | Dumpus(Fae) | Wumpus(Fae))", "all x y z.((Fae(x) & Tompus(y) & Dumpus(z)) -> (-Tumpus(x) & Dumpus(y) & Wumpus(z)))", "(all x.(Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> Wumpus(x)))", "(all x.(Fae(x) -> -Tumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> Wumpus(z))))", "exists x.(Fae(x) & -Tumpus(x) | (Dumpus(x) & Wumpus(x))))", "(all x y z.(Tumpus(x) -> -Tumpus(x)) & (Dumpus(y) -> Wumpus(z)))", "all x y z.((Fae(x) & Dumpus(y) & Wumpus(z)) -> (-Tumpus(x) | Dumpus(y) & Wumpus(z)))", "all x y z.((Fae(x) & Dumpus(y) & Wumpus(z)) -> (-Tumpus(x) & Dumpus(y) & Wumpus(z)))", "(all x.(Fae(x) -> -Tumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Wumpus(z) -> UmbrellaBody(z))))", "(all x y z.((Fae(x) & Tumpus(y) & Dumpus(z)) -> -Tumpus(x)) & ((Fae(x) & Dumpus(z)) -> Wumpus(z)))", "(all x.(Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> Wumpus(x)))", "(all x.(Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> Wumpus(x)))", "(all x y z.(Fae(x) -> (-Tumpus(x) & Dumpus(y) & Wumpus(z))) -> (Fae(x) & Dumpus(y) & wumpus(z)))", "all x y z.((Fae(x) & Teaspoon(y) & Dumpus(z) & Wumpus(z)) -> (-Tumpus(x) | (-Tumpus(y) & Dumpus(z) & Wormpus(z)))))"]}
{"id": "prontoqa_train_926", "nl": "Fae is a lorpus.", "fol": "lorpus(Fae)", "prediction": ["all x.(Fae(x) -> Lorpus(x))", "all x.(Fae(x) -> Llorpus(x))", "all x.(Fae(x) -> -Lorpus(x))", "(Lorpus(Fae) & LivesIn(Fae,SameCorpus,Lorpus))", "(Lepe(Fae) & Coroner(Fae))", "EsteaFae(f) & Lorpus(c) & Felt(f))", "all x.(Fae(x) -> Lorompus(x))", "(Lorpus(Fae) & Throat(Fae))", "all x.(Fae(x) -> Lorpus(x))", "-Lorpus(Fae)", "(Lorpus(Fae) -> Lopoise(Fae))", "all x.(Fae(x) -> Lorpus(x))", "all x.(Fae(x) -> Lorpus(x))", "all x.(Fae(x) -> Lorpus(x))", "all x.(Fae(x) -> Lorpus(x))", "all x.(Fae(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_927", "nl": "Fae is a sterpus.", "fol": "sterpus(Fae)", "prediction": ["all x.(Fae(x) -> Steroid(x))", "Fae is a Sterpus.", "-Sterpus(Fae,x)", "(Sterpus(Fae))", "All x.(Fae(x) -> Steroid(x))", "(Sterpus(Fae))", "all x.(Fae(x) -> Sterpus(x))", "all x.(Fae(x) -> Sterpus(x))", "Erse(Fae)", "all x.(Fae(x) -> Sterosene(x))", "((Fae(f) & Sterpus(f)))", "(Sterpus(Fae) & Sterpus(Fae))", "(Sterpus(Fae) -> Sterpus(Fae))", "the sterpus.", "all x.(Fae(x) -> Steroid(x))", "all x.(Fae(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_928", "nl": "Lempuses are dumpuses and sterpuses and wumpuses.", "fol": "all x. (lempus(x) -> (dumpus(x) & sterpus(x) & wumpus(x)))", "prediction": ["all x.(Lempuse(x) -> (Dumuse(x) & Steruse(x) & Wompus(x)))", "all x.(Lempuse(x) -> (Dumps(x) & Sterus(x) & Wumpus(x)))", "all x.(Lempuse(x) -> (IsDumpstomy(x) & IsSterpusemy(x) & IsWumpusmy(x)))", "all x.(Lempuse(x) -> (Dumpsus(x) & Sterpuses(x) & Mushy(x)))", "(all x.(Lempuse(x) -> Dumpuse(x)) & (Sterpuse(x) | Wumpuse(x))))", "all x.(Lempuse(x) -> (Dumpuse(x) & Steropus(x) & Wumpus(x)))", "all x.(Lempuse(x) -> (Pumuse(x) | Sterpuse(x) | Wumpuse(x)))", "all x.(Lempuse(x) -> (Dupuse(x) & Sterosene(x) & Wumpuse(x)))", "all x.(Lempuse(x) -> (Dumpsus(x) & Sterpuse(x) & Wumpuse(x)))", "all x.(Lempuse(x) -> (Dumpsuse(x) | Sterpuse(x) | Wumpuse(x)))", "all x.(Lampuse(x) -> (Dumpuse(x) | Sterpuse(x) | Wumpuse(x)))", "all x.(Lempuse(x) -> (Dumps(x) & Sterpuse(x) & Wumpuse(x)))", "all x.(Lempuse(x) -> (Dumpuse(x) | Sterpuse(x) | Wumpuse(x)))", "all x.(Lempuse(x) -> (Dupuse(x) | Sterpuse(x) | Wumpus(x)))", "all x.(Lempuse(x) -> (Dupuse(x) | Sterpuse(x) | Huspuse(x)))", "(all x.(Lempuse(x) -> Dumpuse(x)) & all y.(Sterpuse(y) -> Wurmpuse(x)))"]}
{"id": "prontoqa_train_929", "nl": "Sam is a yumpus, a zumpus, or a sterpus.", "fol": "(yumpus(Sam) | zumpus(Sam) | sterpus(Sam))", "prediction": ["(exists x.(Sam(x) & (Yumpus(x) | Zumpus(x) | Sterpus(x))))", "(all x.(Sam(x) -> Yampus(x)) | (Zumpus(x) | Sterpus(x))))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterepus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "(Yumpus(Sam) | Zumpus(Sam) | Sterpus(Sam))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_930", "nl": "Each tumpus is a rompus and a zumpus and a wumpus.", "fol": "all x. (tumpus(x) -> (rompus(x) & zumpus(x) & wumpus(x)))", "prediction": ["(all x.(Tumpus(x) -> Rompus(x)) & (Tompus(x) | Wumpus(x))))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Umpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wompus(x)))", "(all x.(Tumpus(x) -> Rompus(x)) & all y.(Tompus(y) -> Zumpus(y))) & all z.(Tompus(z) -> Wumpus(z)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wampus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Tommu(x) & Umpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "exists x.(Tumpus(x) & Rompus(x) & Zumpus(x) & Moose(x))", "all x.(Tumpus(x) -> (Tompus(x) & Rompus(x) & Zumpus(x) & wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Yumpus(x)))", "all x.(Tumpus(x) -> (IsRompus(x) & IsZumpus(x) & IsWumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) | Zumpus(x) | Wumpus(x)))"]}
{"id": "prontoqa_train_931", "nl": "Rex is a tumpus.", "fol": "tumpus(Rex)", "prediction": ["Rex is a tumpus.", "Rex,Tumpus(x)", "Rex.EstablishesTumpus(x)", "Rex is a Tumpus(x)", "Rex, aka Tumpus(x)", "Rex (Tumpus(Rex))", "all x.(Rex(x) -> Tumpus(x))", "Rex.(Tumpus(x) -> CanBeReleasedOrRemoved(x))", "all x.(Rex(x) -> Tumpus(x))", "Rex is Tumpus(x)", "Es untumpus.", "Rex is tumpus.", "Rex.Tumpus(Rex)", "all x.(Rex(x) -> Pumpus(x))", "Rex(rex) -> Tumpus(re))", "Rex.(Tumpus(x) & Tumpus(x))"]}
{"id": "prontoqa_train_932", "nl": "Rex is a lempus, a jompus, or a rompus.", "fol": "(lempus(Rex) | jompus(Rex) | rompus(Rex))", "prediction": ["all x.(Rex(x) -> (Limpus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "(all x.(Rex) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> ((Lempus(x) | Jompus(x) | Rompus(x))))", "all x.(Rex(x) -> ((Lempus(x) | Jompus(x) | Rompus(x))))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "(all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x))))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_933", "nl": "Everything that is a wumpus and a numpus and a brimpus is a lorpus, a jompus, and a rompus.", "fol": "all x. ((wumpus(x) & numpus(x) & brimpus(x)) -> (lorpus(x) & jompus(x) & rompus(x)))", "prediction": ["all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((SkinTick(x) & Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Larps(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "(all x.(Wumpus(x) -> (Numpus(x) & Brimpus(x))) & (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) & Number(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_934", "nl": "Stella is a numpus.", "fol": "numpus(Stella)", "prediction": ["Stella is Numpus.", "All x.(Stella(x) -> Numpus(x))", "Stella is Numpus(steep)", "all x.(Alpha(x) -> Numpus(x))", "Stella is Numpus(s)", "Stella is Numpus(s)", "Stella is a Numpus(Locking(Locking)", "all x.(Stella(x) -> Numpus(x))", "Stella is a Numpus(Stella)", "Stella is a Numpus(s)", "All x.(Stella(x) -> Numpus(x))", "Stella is Numpus(Stella)", "Stella is a Numpus(Stella)", "Stella is Numpus.", "Stella is Numpus(s)", "Stella is Numpus."]}
{"id": "prontoqa_train_935", "nl": "Stella is a brimpus.", "fol": "brimpus(Stella)", "prediction": ["Leander is Brimpus(Stella)", "Stella is a brimpus.", "Stella is a brimpus.", "Stella is a Brimpus.", "Stella is brimpus.", "Stella is brimpus.", "Stella is a brimpus.", "all x.(Stella(x) -> Brimpus(x))", "Stella is a Brimpus.", "all x.(Stella(x) -> Brimpus(x))", "Stella is a Brumpus.", "Stella is a Brimpus.", "Stella is a Brimpus.", "Stella ist ein Brimpus.", "Stella (Brumpus)", "(Brumpus(Stella))"]}
{"id": "prontoqa_train_936", "nl": "Stella is a jompus.", "fol": "jompus(Stella)", "prediction": ["Stella is a Jompus.", "Stella is Jompus(s).", "Stella is a Jompus(s)", "all x.(Stella(x) -> Jompus(x))", "Stella is a Jompus(s)", "Stella is a jompus.", "Stella is jompus.", "Stella ist jompus.", "(Jimpus(Stella))", "-Jompus(Stella)", "Stella is a jompus.", "Stella is Jompus(Stella)", "Stella is Jompus.", "Stella is a Jompus.", "Stella is Jompus(Stella)", "Stella ist jompus(Stella)"]}
{"id": "prontoqa_train_937", "nl": "Each shumpus is a sterpus and a vumpus and a jompus.", "fol": "all x. (shumpus(x) -> (sterpus(x) & vumpus(x) & jompus(x)))", "prediction": ["all x.(Shumpus(x) -> (Sterpus(x) & Vuppus(x) & Jompus(x)))", "(all x.(Shumpus(x) -> Sterpus(x)) & all y.(Vumpus(y) & All z.(Jompus(z) & -Shumpus(y))) -> Vumpus(z)))", "all x.(See AllShumpus(x) -> (Sterpus(x) & Vuxux(x) & Jompus(x)))", "exists x.(Shumpus(x) & Sterpus(x) & Vumpus(x) & Jompus(x))", "all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Shumpus(x) -> (Sterpus(x) & Vampus(x) & Jompus(x)))", "(all x.(Shumpus(x) -> Sterpus(x)) & exists y.(Vumpus(y) & exists z.(Jompus(z) & -Sterpus(z)))))", "all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Shumpus(x) -> ((Sterepus(x) & Rumpus(x)) | Moose(x) & Jompus(x)))", "all x.(Shumpus(x) -> (Sterepus(x) & Vumpus(x) & Jompus(x)))", "is Sterpus(shumpus) & exists y.(Vumpus(y) & Sempus(z)) & exists w.(Jimpus(w) & Shumpus(w) & Shumpus(w) & Shumpus(w))))", "all x.(Shumpus(x) -> (Sterepus(x) & Vumpus(x) & Jompus(x)))", "all x.(Shumpus(x) -> (IsSchestus(x) & IsVumpus(x) & IsJumpus(x)))", "all x.(Shumpus(x) -> (Starpus(x) | Vumpus(x) | Jompus(x)))"]}
{"id": "prontoqa_train_938", "nl": "Stella is a yumpus and Stella is not a jompus and Stella is a gorpus.", "fol": "(yumpus(Stella) & -jompus(Stella) & gorpus(Stella))", "prediction": ["(all x.(Stella(x) -> Yampus(x)) & (Stella(x) -> -Jompus(x)) | (Sheeps(x) & Gorpus(x))))", "(all x.(Stella(x) -> Yumpu(x)) & all y.(Stella(y) -> -Jompus(y)) & all z.(Stella(z) -> Gorpus(z))))", "all x y z.((Stella(x) & Yumus(y) & Stella(z)) -> (-jompus(z) & Gorpus(z)))", "(all x.(Pelican(x) -> Token(x)) & (Pouch(x) | Pisces(x))) & (Pouch(x) -> Token(x)))", "(all x.(Stella(x) -> Yampus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Gorpus(x)))", "all x y z.((Stella(x) & Yupse(y) & Stella(z)) -> (-Jompus(z) & Gorpus(z)))", "all x y z.((Stella(x) & Yupus(y) & Stella(z)) -> (yumpus(x) & -jompus(y) & -gorpus(z)))", "all x y z.((Stella(x) & Yumpus(y) & Stella(z)) -> (NoJompus(z) & NoGorpus(z)))", "(all x.(Stella(x) -> (Yumpus(x) | -Jompus(x)) | Gorpus(x)))", "all x.(Stella(x) -> (Yumpus(x) & -Jompus(x) & Gorpus(x)))", "(yumpus) & Stella (kuna) | Stella (kuna) | Stella (kuna))))", "all x y z.((Stella(x) & Yumpus(y) & Stella(z) & -Jompus(z)) -> (Yumpus(x) & Gorpus(z)))", "(all x.(Solila(x) -> Youngst(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Gorpus(x))))", "(all x.(Yumpus(x) -> Stella)) & (-Jompus(x) -> Stella)) & (Gorpus(x) -> Stella)))", "all x y z.((Stella(x) & Yompus(y) & Jompus(z)) -> (Yumpus(x) & -Jompus(y,z) & Gorpus(z)))", "(all x y z.((Stella(x) & Yupta(y)) -> (Yumpus(z) | -Jimpus(z) | Gorpus(z))))"]}
{"id": "prontoqa_train_939", "nl": "Dumpuses are lempuses.", "fol": "all x. (dumpus(x) -> lempus(x))", "prediction": ["all x.(Mumpsuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Tetrahodaceae(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpus(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Mumpus(x) -> Lempuse(x))"]}
{"id": "prontoqa_train_940", "nl": "Stella is not a lempus, Stella is a tumpus, and Stella is a grimpus.", "fol": "(-lempus(Stella) & tumpus(Stella) & grimpus(Stella))", "prediction": ["all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) & Tumpus(x) & Scalps(z)))", "all x y z.((Stella(x) & Humpus(y) & Grimpus(z)) -> (-Lempus(x) & -Tumpus(y) & -Cracked(z)))", "all x y z.((Stella(x) & Plumpus(y) & Grimpus(z)) -> (-Lempus(x) | (Tumpus(y) & Crunchy(z))))", "all x y z.((Stella(x) & Tallus(y) & Gruppus(z)) -> (-Lempus(x) & -Tumpus(y) & -Fragus(z)))", "(all x.(Stella(x) -> (-Lempus(x))) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Grimpus(x)))", "all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) | (Tumpus(x) & Grempus(x))))", "(all x y z.((Stella(x) & Lempus(y) & Humpus(z)) -> -Lempus(x)) & all z w.((Stella(w) & Grimpus(w)) -> (Stella(w) & -Lempus(z)))))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Teardrop(y)))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Tumpus(y) -> Furpus(y))))", "(all x y z.((Stella(x) & Lempus(x)) | (Tumpus(y) & Grimpus(z))))", "(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Grinpus(x))))", "(all x.(Lumpus(x) -> -Lempus(x)) & all y.(Tumpus(y) & Cranpus(y)))", "all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) & Tumpus(x) & Grimpus(x)))", "(all x.(Stella(x) -> (-Lempus(x) | -Tumpus(x) | -Stella(x))) & all y.(Stella(y) -> Grumpus(y)))", "all x y z.((Stella(x) & NullLempus(x) & NullTumpus(y) & Plumpus(z)) -> (-Limpus(x) & Toumpus(y) & Grouchpus(z)))", "(all x y z.((Stella(x) & Lempus(x)) -> -Lexus(x)) & ((Stella(y) | Tumulus(y))) | (Stella(z) & Grimpus(z))))"]}
{"id": "prontoqa_train_941", "nl": "Stella is a lorpus, Stella is a shumpus, or Stella is not a dumpus.", "fol": "(lorpus(Stella) | shumpus(Stella) | -dumpus(Stella))", "prediction": ["all x.(Share(x) -> (Lorpus(x) | Shumpus(x) | -Dumpus(x)))", "(all x.(Stella(x) -> Lorpus(x)) | all y.(Stella(y) -> Humpus(y))) | all z.(Stella(z) -> -Dumpus(z))))", "all x.(Stella(x) -> (Lorpus(x) | Shumpus(x) | -Dumpus(x)))", "(all x.(Stella(x) -> Lorpus(x)) & (Stella(x) -> Humpus(x)) | (Stella(x) -> -Dumpus(x))))", "all x.((Lorpus(x) | Humpus(x) | -Dumpus(x)) -> Stella(x))", "(all x.(Stella(x) -> (Lorpus(x) | Humpus(x)) | -Dumpus(x)))", "all x y.((Lorpus(x) & Shumpus(y)) | (Salta(y) & -Dumpus(y))))", "all x y.((Lorpus(x) & Shumpus(y)) -> (Lorpus(x) | NoDumpus(x)))", "(all x.(Stella(x) -> Lorpus(x)) | (Stella(x) -> Humpus(x))) | (Stella(x) -> -Dumpus(x)))", "all x.((Lorpus(x) | Humpus(x)) | (-Dumpus(x))))", "(all x.(Stella(x) -> Lorpus(x)) | (Stella(x) -> Humpus(x))) | (Stella(x) -> -Dumpus(x))))", "all x y z.((Stella(x) & Lorpus(y) & Shumpus(z)) | (-Lorpus(x) | -Dumpus(x))))", "all x y.((Stella(x) & Lorpus(x,y)) | (Stella(x) & Humpus(y)) | (Stella(x) & -Dumpus(z)))))", "all x.((Stella(x) & Lorpus(x)) | (Silver(x) | Humpus(x) | NotDumpus(x))))", "all x.((Stella(x) & -Dumpus(x)) -> (Lorpus(x) | Humpus(x) | -Dumpus(x)))", "all x.((Lorpus(x) | Shumpus(x) | -Dumpus(x)) -> Stella(x))"]}
{"id": "prontoqa_train_942", "nl": "Each lorpus is a numpus, a vumpus, and a tumpus.", "fol": "all x. (lorpus(x) -> (numpus(x) & vumpus(x) & tumpus(x)))", "prediction": ["all x.(Lorpus(x) -> (Numpus(x) | Vumpus(x) | Tumpus(x)))", "exists x.(Lorpus(x) & Numpus(x) & Vumpus(x) & Tumpus(x))", "all x.(Lorpus(x) -> (Numpus(x) & Kumpus(x) & Tumpus(x)))", "all x.(Lorpus(x) -> (Number(x) & Vumpus(x) & Tumpus(x)))", "all x.(Lorpus(x) -> ((Numpus(x) | Mumpus(x)) & Tumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) & Vumpus(x) & Tumulus(x)))", "all x.(Lorpus(x) -> (HasNumpus(x) | HasVimpus(x) | HasTumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) | Vumpus(x) | Tumpus(x)))", "all x y z w.((Lorpus(x) & Numpus(y) & Vumpus(z)) -> (Numerus(x) | Tumpus(w)))", "all x.(Lorpus(x) -> (Nompus(x) & Vumpus(x) & Tumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) & Vampus(x) & Tumpus(x)))", "all x.(Lorpus(x) -> (Nompus(x) | Vumpus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (Isnumpus(x) | IsVimpus(x) | IsTumpus(x)))", "all x.(Lorpus(x) -> (Number(x) | Voompus(x) | Tumpus(x)))", "(All x.(Lorpus(x) -> Numpus(x)) & All y.(Vimpus(y) & -Tumpus(y)))", "all x.(Lorpus(x) -> (Numpus(x) | Vampus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_943", "nl": "Everything that is a yumpus, a grimpus, and a brimpus is not a numpus.", "fol": "all x. ((yumpus(x) & grimpus(x) & brimpus(x)) -> -numpus(x))", "prediction": ["all x.((TapedBermpus(x) & Yumpus(x)) -> Nonnumpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) & Grimpus(x) & Brimpus(x)) -> -Nompus(x))", "all x.((Element(x) & (Yumpus(x) | Grimpus(x) | Brimpus(x))) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((AndYumpus(x) | Grimpus(x) | Brimpus(x)) -> -numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))"]}
{"id": "prontoqa_train_944", "nl": "Max is a yumpus.", "fol": "yumpus(Max)", "prediction": ["Max is yumpus.", "(Yumpus(Max) -> Strong(Max))", "all x.(Max(x) -> Yump (yumpus))", "(Yumpus(Max))", "Max IsYumpus(Max)", "(Yumpus(Max) -> IsLynx(Max))", "all x.(Yumpus(x) -> Max(x))", "All x.(Max(x) -> Yampus(x))", "(Yumpus(Max)", "Max.", "(Yumpus(Max)", "Max isYumpus(aka)", "All x.(Max(x) -> Yumpus(x))", "(Yumpus(Max) -> Yumpus(Max))", "all x.(Max(x) -> Yumpen(x))", "Max ist einYumpus."]}
{"id": "prontoqa_train_945", "nl": "Max is a grimpus.", "fol": "grimpus(Max)", "prediction": ["Max (Grimpus)", "all x.(Max(x) -> Grimpus(x))", "all x.(Max(x) -> Grimpus(x))", "(Grimples(Max) | Crouppus(Max))", "(Graypus(Max))", "(Grumpus(Max).", "all x.(Max(x) -> Gruppus(x))", "Max is a Grimpus.", "all x.(Tom(x) -> Grimpus(x))", "-Lockpus(Max)", "(Gruppus(Max) & Cleanse(Max))", "All x.(Max(x) -> Grimpus(x))", "all x.(Max(x) -> Grimpus(x))", "Max is a Grimpus.", "(Gruff(Max) & Grimpus(Max))", "all x.(Max(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_946", "nl": "Max is a brimpus.", "fol": "brimpus(Max)", "prediction": ["(Brimpus(Max))", "Max, also known as Brimpus.", "(All x.(Max(x) -> Brimpus(x))", "(Brimpus(Max) & Brempus(Max))", "(Brimpus(Max))", "all x.(Max(x) -> Brimpus(x))", "all x.(Max(x) -> Brimpus(x))", "is a brimpus.", "everything looks like a brimpus(Max)", "all x.((Max(x) & Brimpus(x)) -> BornTo(x))", "all x.(Max(x) -> Brimpus(x))", "Max.(Brimpus)", "(Brumpus(Max) & CanBeHasSleep(Max))", "Max is a Brimpus.", "all x.(Max(x) -> Brimpus(x))", "all x.(Max(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_947", "nl": "Max is not a lorpus.", "fol": "-lorpus(Max)", "prediction": ["-Lorpus(Max)", "all x.(Max(x) -> -Lorpus(x))", "-Lorpus(Max)", "-Lorpus(Max)", "-Lorpus(Max)", "(-lorpus(Max))", "-lorpus(Max)", "[Max,Lorpus(x))", "all x.(Max(x) -> -Lorpus(x))", "-Lorpus(Max)", "-Lorpus(Max)", "(-Lorpus(Max))", "all x.(Lorpus(x) -> -Lower(x))", "(-Lorpus(Max))", "(-Lorpus(Max))", "-Lorpus(Max)"]}
{"id": "prontoqa_train_948", "nl": "Everything that is a lorpus and a numpus and a brimpus is a vumpus.", "fol": "all x. ((lorpus(x) & numpus(x) & brimpus(x)) -> vumpus(x))", "prediction": ["all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Orisis(x) & Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vampus(x))", "(all x.((Lorpus(x) & Numpus(x)) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Numpus(x) | Brimpus(x)) -> Vumpus(x))", "all x.(((Lorpus(x) | Numpus(x) | Brimpus(x))) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))"]}
{"id": "prontoqa_train_949", "nl": "Shumpuses are gorpuses.", "fol": "all x. (shumpus(x) -> gorpus(x))", "prediction": ["all x.(Shumpuse(x) -> Gorpuse(x))", "both.", "all x.(Shumpuse(x) -> Gorpus(x))", "the new era of gorpuses.", "all x.(Shampoo(x) -> Gorpuse(x))", "all x.(Shumpus(x) -> Gorpuse(x))", "all x.(Shampuse(x) -> Gorpuse(x))", "all x.(Shumpus(x) -> Gorpuse(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shoumpuse(x) -> Gorpuse(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shupuse(x) -> Gorpus(x))", "all x.(Shupuse(x) -> Gorpuse(x))", "all x.(Shampuse(x) -> Gorpuse(x))", "all x.(Shupuse(x) -> Gorpuse(x))", "all x.(Shumpus(x) -> Gorpuse(x))"]}
{"id": "prontoqa_train_950", "nl": "Every gorpus is not a vumpus.", "fol": "all x. (gorpus(x) -> -vumpus(x))", "prediction": ["all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vimpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))"]}
{"id": "prontoqa_train_951", "nl": "Sam is a shumpus.", "fol": "shumpus(Sam)", "prediction": ["(Sam(Sam) & Humptus(Sam))", "(Shumpus(Sam) & Sumba(Sam))", "all x.(Shumpus(x) -> Sam(x))", "All x.(Sam(x) -> Humpback(x))", "All x.(Shumpus(x) -> Sam(x))", "all x.(Sam(x) -> Humpus(x))", "all x.(Sam(x) -> Humpus(x))", "all x.(Sam(x) -> Scumpus(x))", "(SeeSam,Shumpus))", "all x.(Sam(x) -> Humpus(x))", "all x.(Sam(x) -> Saumous(x))", "all x.(Sam(x) -> Humpus(x))", "(Shumpus(Sam) & HasSam(Sam))", "all x.(Sham(x) -> Shumpus(x))", "all x.(Sam(x) -> Humptus(x))", "all x.(Sam(x) -> Humptid(x))"]}
{"id": "prontoqa_train_952", "nl": "Sam is a lorpus.", "fol": "lorpus(Sam)", "prediction": ["All x.(Sam(x) -> Lopsus(x))", "all x.(Lorpus(x) -> Sam(x))", "all x.(Sam(x) -> Lorpus(x))", "(Lorpus(Sam) & -Lorph(Sam))", "(Larpus(Sam) & Stunts(Sam))", "All x.(Lorpus(x) -> Sam(x))", "all x.(Sam(x) -> Lopsus(x))", "all x.(Sam(x) -> Larkus(x))", "all x.((Sam(x) & Lorpus(x)) -> -Lorp.(Sam(x)))", "all x.(Lorpus(x) -> Sam(x))", "all x).(Thestore.(Sam) -> AnimatedBird(x))", "all x.(Sam(x) -> Lordpus(x))", "Sam ist eine Llorpus(x)", "Sam (Lorpus(sam) & BearsMiles(sam))", "all x.(Sam(x) -> Lorpus(x))", "all x.(Sam(x) -> Orc(x))"]}
{"id": "prontoqa_train_953", "nl": "Everything that is a rompus and a yumpus and a lempus is a gorpus, a sterpus, and a zumpus.", "fol": "all x. ((rompus(x) & yumpus(x) & lempus(x)) -> (gorpus(x) & sterpus(x) & zumpus(x)))", "prediction": ["all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Tozpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) & Steroid(x) & Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) | Yumpus(x) | Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yampus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yuppus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x y z.((Rompus(x) & Yumpus(y) & Lempus(z) & Is(x,y) & Is(x,z)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.(Rompus(x) | Yompus(x) | Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yumpis(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_954", "nl": "Max is a rompus.", "fol": "rompus(Max)", "prediction": ["(Rompus(Max) -> Roompus(Max))", "all x.(Max(x) -> Romanus(x))", "(Rompus(Max) | rompus(Max)))", "all x.(Max(x) -> Rompus(x))", "Max.(rompus)", "Max is a rompus.", "((Max(Max) | Rompus(Max)))", "all x.(Max(x) -> Rompus(x))", "all x.(Mutual(x) -> Rompus(x))", "ROMPUS & Mummy(Max)", "(Rompus(Max))", "(rompus(Max) & (IsRompus(Max) | IsRompus(Max)))", "all x.(Max(x) -> Rompus(x))", "all x.(Max(x) -> Rompus(x))", "All x.(Max(x) -> Rompus(x))", "Basically exists x.(Max(x) & Rompus(x))"]}
{"id": "prontoqa_train_955", "nl": "Max is a lempus.", "fol": "lempus(Max)", "prediction": ["all x.(Max(x) -> Lempus(x))", "all x.(Max(x) -> Lempus(x))", "all x.(Max(x) -> Lempus(x))", "Max is Lempus(Max)", "all x.(Max(x) -> Lempus(x))", "all x.(Max(x) -> Lempus(x))", "Max is lempus.", "Max is a lempus.", "all x.(Max(x) -> Lempus(x))", "all x.(Max(x) -> Lempus(x))", "Max is a lempus.", "all x.(Max(x) -> Lempus(x))", "In his mind Max is a lempus.", "Max.Mean(max) -> Lempus(max))", "Max is a lempus.", "all x.(Max(x) -> Lempus(x))"]}
{"id": "prontoqa_train_956", "nl": "Everything that is a sterpus, an impus, or a vumpus is a lempus.", "fol": "all x. ((sterpus(x) | impus(x) | vumpus(x)) -> lempus(x))", "prediction": ["all x.((Restpus(x) | Imperator(x) | Uumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Imperempt(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Imperator(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterepus(x) | Imperempt(x) | vumpus(x)) -> Lempus(x))", "all x.(((Sterepus(x) | Imperator(x) | Vumpus(x))) -> Lempus(x))", "all x.((Stoerpus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.((HasSterepus(x) | HasImpress(x) | HasVumpus(x)) -> Lempus(x))", "all x.((Starpus(x) | Imperempt(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | IsNotSterpus(x) | IsNotSerpent(x) | IsNotSoSterpus(x)) -> Lempus(x))", "all x.(((Sternus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.(((Starpus(x) | Impossible(x) | Vumpus(x))) -> Lempus(x))", "all x.((Sterpus(x) | Impossible(x) | Vuze(x)) -> Lempus(x))", "all x.((Streep(x) | Imperempt(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impossible(x) | Virtumpus(x)) -> Lempus(x))"]}
{"id": "prontoqa_train_957", "nl": "Rex is a brimpus and a tumpus and an impus.", "fol": "(brimpus(Rex) & tumpus(Rex) & impus(Rex))", "prediction": ["all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & impus(x)))", "all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & Imperator(x)))", "all x.(Rex(x) -> (Brampus(x) & Tumpus(x) & Iliad(x)))", "all x.(Rex(x) -> (Brimpus(x) & Tumulus(x) & Issuel(x)))", "all x.(Rex(x) -> (Brumpus(x) & Toumpus(x) & impus(x)))", "(all x.(Rex(x) -> Brimpus(x)) & all y.(Tumpus(y) & -Ilimination(y))))", "all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & Imperium(x)))", "all x.(Rex(x) -> (Brimpus(x) | Tumpus(x) | Impermiss(x)))", "(all x y.(Rex(x) -> Brimpus(x)) & (Tumpus(y) -> Tumpus(y)) & (Issue(y) -> Issue(y)))", "(all x.(Rex(x) -> Brimpus(x)) & is tumpus(x) & is impose(x)))", "all x.(Rex(x) -> (Brompus(x) & Tumpus(x) & Implicit(x)))", "(all x y.(Rex(x) -> Brahmpus(x)) & (Tumpus(y) | Issue(y))))", "all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & impus(x)))", "all x.(Rex(x) -> (Brumpus(x) | Tumpus(x) | Imperator(x)))", "all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & Implicit(x)))", "(all x.(Rex(x) -> Brimpus(x)) & all y.(Tumpus(y) & impus(y)))"]}
{"id": "prontoqa_train_958", "nl": "Rex is a lempus.", "fol": "lempus(Rex)", "prediction": ["Rex is Lempus.", "Rex is Lempus(x)", "all x.(Rex(x) -> Lempus(x))", "Rex is a Lempus.", "Rex is a lempus.", "Rex is a lempus.", "all x.(Rex(x) -> Lempus(x))", "Rex is a Lempus.", "all x.(Rex(x) -> Lempus(x))", "(Limpus(Rex) & Lempus(Rex))", "(Lempus(Rex))", "Dermpus(Rex)", "Rex is a Lempus(x)", "Rex (lempus)", "all x.(Rex(x) -> Lempus(x))", "Rex is a lempus."]}
{"id": "prontoqa_train_959", "nl": "Tumpuses are zumpuses and impuses and yumpuses.", "fol": "all x. (tumpus(x) -> (zumpus(x) & impus(x) & yumpus(x)))", "prediction": ["all x.(Tumpus(x) -> (Humpus(x) | Imperator(x) | Yumpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) | Issue(x) | Yumpus(x)))", "all x.(Tumpus(x) -> (HasTompus(x) & HasIssue(x) & HasYumpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) & Issue(x) & Yumpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) | Issue(x) | Yumpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) | Impedes(x) | Yumpus(x)))", "all x.(Tumpus(x) -> (Dust(x) & Imperator(x) & Yumpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) | Impermissible(x) | Yumpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) | Issue(x) | Yumpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) | Ivory(x) | Yumpus(x)))", "all x.(Tumpus(x) & (Tompus(x) | Issue(x) | Yumpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) | Ilises(x) | Yumpus(x)))", "all x.(Tumpus(x) -> (Zumpuse(x) | Issue(x) | Yumpuse(x)))", "all x.(Tumpus(x) -> (Zumpus(x) & Impossible(x) & Yumppus(x)))", "all x.(Tumpus(x) -> (Tompus(x) & Issues(x) & Yumpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) & Issue(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_960", "nl": "Alex is a tumpus.", "fol": "tumpus(Alex)", "prediction": ["all x.(Alex(x) -> Tumpus(x))", "all x.(Alex(x) -> Tumpus(x))", "ALL x.(Alex(x) -> Tumpus(x))", "Alex is unison.", "all x.(Alex(x) -> Tumpus(x))", "Alex is tumpus.", "(Tumpus(Alex) & SleepsIn(Alex,))", "Alex is tumpus.", "Alex is tumpus.", "everything about Alex. (Tumpus(Alex)", "all x.(Alex(x) -> Tumpus(x))", "Alex(Alex) & Tumpus(Alex)", "Alex is a Tumpus(Alex)", "Alex is Tumpus.", "All x.(Alex(x) -> Tumpus(x))", "all x.(Alex(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_961", "nl": "Alex is an impus or a wumpus or a gorpus.", "fol": "(impus(Alex) | wumpus(Alex) | gorpus(Alex))", "prediction": ["all x.(Alex(x) -> (Implement,x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Imfocal(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Immulitis(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Islap(x) | IsWumpus(x) | IsGorpus(x)))", "all x.(Alex(x) -> (Issue(x) | IsWumpus(x) | IsGrompus(x)))", "all x.(Alex(x) -> (Issue(x) | Wasp(x) | Gorpus(x)))", "all x.(Alex(x) -> (Issue(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Improvse(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Imploss(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Imposer(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Impos(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Issue(x) | (Wumpus(x) | Gorpus(x))))"]}
{"id": "prontoqa_train_962", "nl": "Jompuses are sterpuses, dumpuses, and lempuses.", "fol": "all x. (jompus(x) -> (sterpus(x) & dumpus(x) & lempus(x)))", "prediction": ["all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "(all x.(Jompuse(x) -> Sterpuse(x)) & all y.(Dumpuse(y) -> Lempuse(y)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Marple(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "(all x.(Jompuse(x) -> Sterpuse(x)) & all y.(Dumpuse(y) -> Lempuse(y)))", "all x.(Jimbus(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> ((Sterpuse(x) | Dumpuse(x)) & Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x y.((Pompuse(x) & Sterus(y)) -> (Sterpus(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Starpuse(x) | Dumpuse(x) | Lempuse(x)))"]}
{"id": "prontoqa_train_963", "nl": "Alex is not a lempus and Alex is a numpus and Alex is a gorpus.", "fol": "(-lempus(Alex) & numpus(Alex) & gorpus(Alex))", "prediction": ["all x y.((Alex(x) & Lempus(x)) -> (-Lempus(x) | Name(x) | Gorpus(y)))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Nompus(y) & Gorpus(y))))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (-Lempus(x) & Numpus(x) & Gorpus(x)))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Nox(y) & Alex(z))) & all z.(Gorpus(z)) -> -Nox(z)))", "(all x y z.(Alex(X) & Lempus(x)) -> -Limpus(x)) & ((Alex(y) & Numpus(y)) -> Gorpus(z)))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> -Lempus(x) & Numpus(x) & Gorpus(x))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (-Lempus(x) & Numpus(z) & Gorpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> -LempusAndNompusAndGorpus(x))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z) & Gorpus(x)) -> (-Lempus(x) | (-Lempus(x) & Numpus(y) & Gorpus(z))))", "all x y z.((Alex(x) & LEmpus(y) & Numpus(z)) -> (-Lempus(x) & Numpus(y) & Gorpus(z)))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Numpus(y) & All z.(Gorpus(z)) -> -Lempus(x)))", "(all x.(Alex(x) -> -Lempus(x)) & (Alex(x) -> Numpus(x)) & (Alex(x) -> Gorpus(x)))", "all x y.((Alex(x) & -Lempus(x) & Alex(y)) -> (Numpus(y) & Gorpus(y)))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (-(Lempus(x) & Nompus(y) & Gorpus(z))))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (-Lempus(x) | Nompus(z) | Gorpus(z)))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Nompus(y)) & all z.(Alex(z) -> Gorpus(z))))"]}
{"id": "prontoqa_train_964", "nl": "Each tumpus is not a jompus.", "fol": "all x. (tumpus(x) -> -jompus(x))", "prediction": ["all x.(Tumpus(x) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jimpus(x))", "all x.(Tumpus(x) -> -Jompus(x))", "exists x.(Tumpus(x) & -Jomessian(x))", "all x.(Tumpus(x) -> -Jimpus(x))", "all x.(Tumpus(x) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jumpus(x))", "all x.(Tumpus(x) -> -Jimpus(x))", "exists x.(Tumpus(x) & -Jompus(x))", "all x.(Tumpus(x) -> -Jimpus(x))", "all x.(Tumpus(x) -> -Jimpus(x))", "(-jompus(tumpus))", "all x.(Tumpus(x) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jimpus(x))", "all x.(Tumpus(x) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jumpus(x))"]}
{"id": "prontoqa_train_965", "nl": "Numpuses are jompuses.", "fol": "all x. (numpus(x) -> jompus(x))", "prediction": ["all x.(Numpus(x) -> Jompus(x))", "all x.(Numpus(x) -> Jompuse(x))", "all x.(Numpus(x) -> Jumpus(x))", "all x.(Numpuse(x) -> Jompuse(x))", "all x.(Numptus(x) -> Jompus(x))", "all x.(Numpus(x) -> Jompuse(x))", "all x.(Numpus(x) -> Jompus(x))", "all x.(Numpus(x) -> Jompus(x))", "all x.(Numpuse(x) -> Jompuse(x))", "all x.(Numpuse(x) -> Jompuse(x))", "all x.(Numpus(x) -> Jombus(x))", "all x.(Numpuse(x) -> Jompuse(x))", "all x.(Numpuse(x) -> Jompuse(x))", "all x.(Numpus(x) -> Jompuse(x))", "all x.(Numpuse(x) -> Jompuse(x))", "all x.(Numpus(x) -> Jompuse(x))"]}
{"id": "prontoqa_train_966", "nl": "Fae is a tumpus.", "fol": "tumpus(Fae)", "prediction": ["exists x.(Fae(x) & Tumpus(x))", "Fare is a Tumpus.", "all x.(Fae(x) -> Tumpus(x))", "(Tumpus(Fae,Skin) & Flower(Fae))", "all x.(Fae(x) -> Tumpew(x))", "all x.(Fae(x) -> Tongue(x))", "all x.(Fae(x) -> Tumpus(x))", "-Tumpus(Fae)", "(Tumpus(Fae) & IsTumpus(Fae))", "Fae is a Tumpus.", "all x.(Fae(x) -> Tumpus(x))", "All x.(Fae(x) -> Tumpus(x))", "Fae is a tumpus.", "(Tumpus(Fae) & HasRecognition(Fae))", "all x.(Fae(x) -> Tumulus(x))", "(Tumpus(Fae) -> Tumpus(Fae))"]}
{"id": "prontoqa_train_967", "nl": "Fae is a lorpus, Fae is an impus, or Fae is not a numpus.", "fol": "(lorpus(Fae) | impus(Fae) | -numpus(Fae))", "prediction": ["all x y z.((Fae(x) & (Lorpus(x) | Impossible(x) | -Numpus(y))) -> (Lorpus(x) | Impossible(x) | -Numpus(x)))", "all x.(Fae(x) -> (Lorpus(x) | Issue(x) | -Number(x)))", "all x.((Fae(x) & (Lorpus(x) | Erzwinger(x) | -Numpus(x))) -> -Lorpus(x))", "all x y z.((Fae(x) & Lorpus(y) & Imperator(z)) | (Fae(x) & -Numpus(x))))", "(all x y.(Fae(x) -> (Lorpus(x) | Impossible(x) | -Numpus(y))))", "(all x.(Fae(x) -> Lorpus(x)) | (Fae(x) -> Imperium(x))) | (Fae(x) -> -Numpus(x))))", "(all x.(Fae(x,lorpus) & (Fae(x,imposed) | -Fae(x,numpus))) -> -Lorpus(x))", "all x.(Fae(x) -> (Lorpus(x) | IsImpossible(x) | -Numpus(x)))", "all x y z.((Fae(x) & Llorpus(x)) | (Fae(y) & Impossible(y) | -Numpus(z))))", "(all x.(Fae(x) -> Lorpus(x)) | (Fae(x) -> Imperempt(x)) | (Fae(x) -> -Numpus(x))))", "(all x y.((Fae(x) & Lorpus(x)) | (Osmotic(x) & Issual(y))) | (Numpus(x) & -Lorpus(y))))", "(all x.(Fae(x) -> Llorpus(x)) | (Fae(x) -> Illusion(x))) | (Fae(x) -> -Numpus(x))))", "all x.((Fae(x) & Llorpus(x)) | (Fae(x) & Ilirpost(x) | -Nompus(x))))", "(all x.(Fae(x) -> Loomis(x)) & (Fae(x) | Issuel(x))) & (Fae(x) -> -Numpus(x)))", "all x y.((Fae(x) & Counter(y)) -> (Lorpus(x) | Imperative(x) | -Numpus(x)))", "all x.(Fae(x) -> (Lorpus(x) | Impossible(x) | -Numpus(x)))"]}
{"id": "prontoqa_train_968", "nl": "Sterpuses are not dumpuses.", "fol": "all x. (sterpus(x) -> -dumpus(x))", "prediction": ["all x.(Stupid(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dumpsuse(x))", "all x.(Sterpus(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Duosus(x))", "all x.(Sterpuse(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dupuse(x))", "all x.(Sterpus(x) -> -Dumpus(x))", "(-Dumpuse(some sort of sterpuses))", "Alles x.(Sterpus(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dumuse(x))", "all x.(Sterpus(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dumpus(x))", "-Dumpuse(sterpuse)", "all x.(Sterpus(x) -> -Dumpsuse(x))", "the most popular name for Sterpuses."]}
{"id": "prontoqa_train_969", "nl": "Everything that is a vumpus or a grimpus or a yumpus is a dumpus.", "fol": "all x. ((vumpus(x) | grimpus(x) | yumpus(x)) -> dumpus(x))", "prediction": ["all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vimpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.(((Vuxus(x) | Grimpus(x) | Yumpus(x))) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vimpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Pumpus(x) | Gruppus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vampus(x) | Grimpus(x) | Yumppus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))"]}
{"id": "prontoqa_train_970", "nl": "Stella is a tumpus and a gorpus and a sterpus.", "fol": "(tumpus(Stella) & gorpus(Stella) & sterpus(Stella))", "prediction": ["all x.(Stella(x) -> (Tumpus(x) | Gorpus(x) | Steerpus(x)))", "all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "all x.(Stella(x) -> (Tumpus(x) | Gorpus(x) | Sterpus(x)))", "(Tumpus(Stella) & Gorpus(Stella) & Sterus(Stella))", "all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "all x.(Stella(x) -> (Possum(x) & Gorpus(x) & Sterpus(x)))", "(Tumpus(Stella) | Torpus(Stella) | Sterpus(Stella))", "all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "all x.((Stella(x) & Tumpus(x)) -> (Gorpus(x) & Sterpus(x)))", "Stella ist ein Tumpus(Tumpus) & exists x.(Gorpus(x) & exists y.(Sterpus(y) & Has(x,y))))", "all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "(Tumpus(stella) & Gorpus(stella) & Sterpus(stella))", "(all x.(Stella(x) -> Toumpus(x)) & all y.(Gorpus(y) & All z.(Sterpus(z)))))", "(Tumpus(Stella) & Gorpus(Stella) & Sterpus(Stella))", "(all x.(Stella(x) -> Tumpus(x)) & all y.(Gorpus(y) & All z.(Sterepus(z)) -> Sterpus(z))))"]}
{"id": "prontoqa_train_971", "nl": "Every brimpus is a tumpus, a zumpus, and a lorpus.", "fol": "all x. (brimpus(x) -> (tumpus(x) & zumpus(x) & lorpus(x)))", "prediction": ["all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Lordpus(x)))", "(all x.(Brimpus(x) -> Tumpus(x)) & all y.(Tompus(y) -> Zumpus(y)) & all z.(Lorpus(z) -> Orbital(z))))", "all x.(Brumpus(x) -> ((Tumpus(x) | Zumpus(x)) | Lorpus(x))))", "all x.(Bribus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Libros(x)))", "all x.(Brimpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "-all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Legeas(x)))", "all x.(Brimpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))"]}
{"id": "prontoqa_train_972", "nl": "Stella is a lempus, Stella is a dumpus, and Stella is not a lorpus.", "fol": "(lempus(Stella) & dumpus(Stella) & -lorpus(Stella))", "prediction": ["all x y.((Stella(x) & Dumpus(y)) -> (Lempus(x) & Dumpus(y) & -Lorpus(x)))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> Dumpus(y)) & all z.((Stella(z) & Lopus(z))) -> -Lorpus(z)))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> Dumpus(y)) & all z.(Stella(z) -> -Lorpus(z))))", "all x y z.((Lampus(x) & Dumpus(y) & Stella(z)) -> (Lempus(x) & Dumpus(y) & -Llorpus(z)))", "all x.((Lempus(x) & Dumpus(x)) -> (Stella_x) | Stella_x) & -Lorpus(x)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> Dumpus(x)) & (Stella(x) -> -Lorpus(x)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> Dumpus(x)) & -Lorpus(x)))", "all x.(Stella(x) -> (Lempus(x) & Dumpus(x) & -Lorpus(x)))", "all x y z.((Stella(x) & Lempus(x) & Dumpus(y) & -Lorpus(z)) -> (Between(x,y) & Between(x,z)))", "(all x.(Lempus(x) -> Stella)) & (Dumpus(x) -> Stella)) & -Lorpus(x)))", "exists x.(Stella(x) & ((Lempus(x) & Dumpus(x)) | (-Lorpus(x) & Lempus(x)))))", "(all x y z.(Stella(x) -> Lempus(x)) & (Stella(y) -> Dumpus(y)) & -Lorpus(z)))", "all x y z.((Stella(x) & Lempus(x) & Dumpus(y) & -Lorpus(z)) -> (Lempus(x) & Dumpus(y)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> Dumpus(x)) & -Lorpus(x)))", "all x y z.((Stella(x) & Lempus(x) & Dumpus(y) & -Lorpus(z)) -> (Lempus(x) & Dumpus(y) & -Lorpus(z)))", "(all x.(Lempus(x) -> Stella(x)) & all y.(Dumpus(y) -> Stella(y))) & all z.(Lorpus(z) -> Stella(z)))"]}
{"id": "prontoqa_train_973", "nl": "Everything that is a tumpus or an impus or a lempus is a brimpus and a rompus and a sterpus.", "fol": "all x. ((tumpus(x) | impus(x) | lempus(x)) -> (brimpus(x) & rompus(x) & sterpus(x)))", "prediction": ["all x.((Tumpus(x) | Illusion(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brampus(x) | Rompus(x) | Sterpus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Imperator(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Stusspus(x)))", "all x.((Tumpus(x) | Imperative(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterus(x)))", "all x.((Tumpus(x) | Izrup(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterepus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.(((Tompus(x) | Illegal(x) | Lempus(x))) -> (Brimpus(x) & Rompus(x) & sterpus(x)))"]}
{"id": "prontoqa_train_974", "nl": "Stella is a lempus.", "fol": "lempus(Stella)", "prediction": ["Stella is Lempus.", "Stella is a Lempus(slide)", "Stella is a lempus.", "Stella is a lempus.", "all x.(Stella(x) -> Lempus(x))", "all x.(Stella(x) -> Lempus(x))", "Stella is Lempus(Stella)", "Stella is a Lempus.", "Stella is a lempus.", "Stella is lempus(Stella)", "Stella is a Lempus.", "Stella is a lempus.", "Stella has lempus(s)", "Stella is a lempus.", "all x.(Stella(x) -> Lempus(x))", "Stella is a lempus."]}
{"id": "prontoqa_train_975", "nl": "Stella is a rompus.", "fol": "rompus(Stella)", "prediction": ["Stella is a rompus.", "(Rompus(Stella) & LivesIn(Stella(Stella))", "Stella is rompus(Rompus)", "Stella(Stella) -> Rompus(Rompus))", "Stella is a Rompus(x)", "all x.(Stella(x) -> Rompus(x))", "Stella is Rotunda(x)", "(Rompus(Stella) & OftenIdentifiedAs(Stella))", "Stella is a Rompus(Stella)", "all x.(Stella(x) -> Ropsis(x))", "Stella is a rompus.", "Stella is rompus.", "Stella is a rompus.", "Stella is a Rompus(*)", "Stella is a Rompus.", "Stella is a rompus."]}
{"id": "prontoqa_train_976", "nl": "Tumpuses are lempuses, dumpuses, and numpuses.", "fol": "all x. (tumpus(x) -> (lempus(x) & dumpus(x) & numpus(x)))", "prediction": ["all x.(Tumpus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpire(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "(All x.(TUmpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumper(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumulus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpus(x) -> (Limited(x) | Dumped(x) | Numpuse(x)))", "all x.(Tumpus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.((Tumpuse(x) & Lempuse(x)) | Dumpuse(x) | Numpuse(x))", "all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))"]}
{"id": "prontoqa_train_977", "nl": "Wren is a tumpus.", "fol": "tumpus(Wren)", "prediction": ["all x.(Wren(x) -> Tumpus(x))", "(Tumpus(Wren) & Tumpus(Wren))", "all x.(Wren(x) -> Humpus(x))", "all x.(Wren(x) -> Taumpus(x))", "all x.(Wren(x) -> Tumulus(x))", "(Tumpus(Wren) & Eats(Wren,x))", "all x.(Wren(x) -> Taupo(x))", "all x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))", "All x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_978", "nl": "Wren is a yumpus, a lorpus, or a dumpus.", "fol": "(yumpus(Wren) | lorpus(Wren) | dumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lops(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_979", "nl": "Everything that is a wumpus, a lorpus, or an impus is a rompus.", "fol": "all x. ((wumpus(x) | lorpus(x) | impus(x)) -> rompus(x))", "prediction": ["all x.((Wumpus(x) | Lorpus(x) | Erzbist(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lordpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | IsIsIsIsImpress(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lupus(x) | Impossible(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lordpus(x) | Aufkl\u00e4rer(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Imperative(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Impossible(x)) -> Rompus(x))", "all x.(((Wumpus(x) | Lorpus(x) | IsIsIsIsIs(x))) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Impermissible(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Impossible(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Impermant(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | impus(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Impossible(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lordpus(x) | Impossible(x)) -> Rompus(x))"]}
{"id": "prontoqa_train_980", "nl": "Wren is a lorpus and a vumpus and a jompus.", "fol": "(lorpus(Wren) & vumpus(Wren) & jompus(Wren))", "prediction": ["all x.(Wren(x) -> (Lorpus(x) & Vampus(x) & Jompus(x)))", "exists x.(Wren(x) & Loomis(x) & Voluptus(x) & Jompus(x))", "all x.(Wren(x) -> (Lorpus(x) | Vumpus(x) | Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "all x y.((Wren(x) & Lord(y) & Vampire(x) & Jompus(x)) -> (Lorpus(x) | Vampire(y) & Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "(all x.(Wren(x) -> Lops(x)) & (Vumpus(x) | Jompus(x)))", "all x.(Wren(x) - (Oryx(x) & LicensedInRadar(x)) & exists y.(Vumpus(y) & LicensedInRadar(x)) & exists z.(Jompus(z) & LicensedInRadar(z)) & WorksWith(x,z)))", "all x.(Wren(x) -> (Lorpus(x) & V\u0103mpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Lorp(x) & Lumpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Vukpus(x) & Jompus(x)))", "(exists x.(Wren(x) & Leonpus(x)) & exists y.(Vimpus(y) & Vimpus(y))) & exists z.(Wren(z) & Jompus(z))))", "all x.(Wren(x) -> (Lorpus(x) & Venompus(x) & Jompus(x)))"]}
{"id": "prontoqa_train_981", "nl": "Everything that is a zumpus or a shumpus or a vumpus is a sterpus.", "fol": "all x. ((zumpus(x) | shumpus(x) | vumpus(x)) -> sterpus(x))", "prediction": ["all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Voompus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Versumpus(x)) -> Steroid(x))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Zumpus(x) | Humpus(x) | Voompus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Possum(x) | Spompus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Voompus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Thempus(x) | Shumpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Humpus(x) | Vubis(x)) -> Sterpus(x))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))"]}
{"id": "prontoqa_train_982", "nl": "Max is a sterpus, a vumpus, and a jompus.", "fol": "(sterpus(Max) & vumpus(Max) & jompus(Max))", "prediction": ["(Sterepus(Max) | Vumpus(Max) | Jompus(Max))", "all x.((Max(x) & Sterpus(x)) -> Vumpus(x) & Jompus(x))", "all x.(Max(x) -> (St\u00e9rpus(x) | Vumpus(x) | Jompus(x)))", "exists x.(Max(x) & Sterpus(x) & Vumpus(x) & Jompus(x))", "(all x y z.(Max(x) -> Sterpus(x)) & (Foram(y) -> Vumpus(y)) & (Foram(z) -> Jompus(z))))", "(exists x.(Max(x) & Sterpus(x)) & exists y.(Vimpus(y) & Vimpus(y)) & exists z.(Joompus(z) & -Sterpus(z))))", "all x.(Max(x) -> (Sterpus(x) | Vumpus(x) | Jompus(x)))", "(All x.(Max(x) -> Sterpus(x)) & All y.(Vumpus(y) & All z.(Jimpus(z) & All w.(Max(w) & -Sterpus(w))))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Vumpus(y) & -Jompus(y)) -> Jompus(x)))", "all x.(Max(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Max(x) -> (Stupid (x) & Venmo(x) & Jompus(x)))", "all x.(Max(x) -> (Sterpus(x) & Vampus(x) & Jompus(x)))", "all x.(Max(x) -> (Steerpus(x) | Vempus(x) | Jompus(x)))", "all x.(Max(x) -> (Sterepus(x) | Vubis(x) | Jompus(x)))", "(exists x.(Max(x) & Sterpus(x)) & exists y.(Vumpus(y) & Voompus(z)) & exists w.(Jompus(w) & -Vumpus(y) & Jumppus(w)))", "all x y z.((Max(x) & Sterpus(y) & Vampus(z) & Jompus(z)) -> ((Sterpus(x) | Vampus(z) | Jompus(z))))"]}
{"id": "prontoqa_train_983", "nl": "Max is a sterpus.", "fol": "sterpus(Max)", "prediction": ["Max is sterpus.", "Max is sterpus.", "all x.(Max(x) -> Sterpus(x))", "Max is sterpus.", "(Sterpus(Max))", "(Sterpus(Max) & Rooibos(Max))", "(All x.(Max(x) -> Sterpus(x))", "((Max(Max) & Sterpus(Max)))", "(Sterpus(Max) & Insomnia(Max))", "the sterpus.", "(Mercury(Max) & Sterpus(Max))", "(Sterpus(Max) & Sterp(Max))", "All x.(Max(x) -> Steroid(x))", "all x.(Max(x) -> Sterpus(x))", "all x.(Max(x) -> Sterpus(x))", "(Sterpus(Max) -> Sterp(Max))"]}
{"id": "prontoqa_train_984", "nl": "Everything that is a lorpus or a brimpus or a grimpus is not a lempus.", "fol": "all x. ((lorpus(x) | brimpus(x) | grimpus(x)) -> -lempus(x))", "prediction": ["all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Limpus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lampus(x))", "all x.((Hero(x) | Brigid(x) | Grimpus(x)) -> -Lempus(x))", "all x.((OrLorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))"]}
{"id": "prontoqa_train_985", "nl": "Every rompus is a shumpus and a lempus and a dumpus.", "fol": "all x. (rompus(x) -> (shumpus(x) & lempus(x) & dumpus(x)))", "prediction": ["all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "all x.(rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "(all x.(Rompus(x) -> Shumpus(x)) & all y.(Rompus(y) -> Lempus(y)) & all z.(Rompus(z) -> Dumpus(z))))", "(all x.(Rompus(x) -> Humpus(x)) & (Lempus(x) -> Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "all x y z.(Rompus(x) -> (Shumpus(x) & Lempus(y) & Dumpus(z)))", "all x.(Rompus(x) -> (Thump(x) & Lempus(x) & Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "all x.(Rompus(x) -> (shumpus(x) & -lempus(x) & -dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) | Lempus(x) | Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) | Lempus(x) | Dumpus(x)))", "all x y z.((Rompus(x) & Shumpus(y) & Lempus(z)) -> (Shumpus(y) | Dumpus(z)))"]}
{"id": "prontoqa_train_986", "nl": "Fae is a brimpus.", "fol": "brimpus(Fae)", "prediction": ["(Brumpus(Fae) & Fulmonococcus(Fae))", "all x.(Fae(x) -> Brimpus(x))", "all x.(Fae(x) -> Brimpus(x))", "all x.(Fae(x) -> Brimpus(x))", "all x.(Fae(x) -> Brimpus(x))", "all x.(Fae(x) -> Brimpus(x))", "all x.(Fae(x) -> Brimpus(x))", "all x.(Fiesta(x) -> Brimpus(x))", "-(Fae(f) & Brimpus(f))", "all x.(Fae(x) -> Brimpus(x))", "(Information(Fae,Brimpus))", "all x.(Fae(x) -> Brimpus(x))", "all x.(Fae(x) -> Brimpus(x))", "all x.(Fae(x) -> Brimpus(x))", "all x.(Fabus(x) -> Brimpus(x))", "all x.(Fae(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_987", "nl": "Everything that is a lorpus, a shumpus, and a vumpus is a grimpus and a lempus and a wumpus.", "fol": "all x. ((lorpus(x) & shumpus(x) & vumpus(x)) -> (grimpus(x) & lempus(x) & wumpus(x)))", "prediction": ["all x.((Lorpus(x) & Humpus(x) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Tumpus(x)) -> (Frostpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vampus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lucerino(x) & Humpus(x) & Mulipus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Lampus(x) & Lampus(x) & Wumpus(x)))", "all x.((Grocerus(x) & Shumpus(x) & Vampire(x)) -> (Smoochus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) | Lempus(x) | Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Cruppus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Scrampus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Shumpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wampus(x)))", "all x.((Lorpus(x) | Shumpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grampus(x) & Lempus(x) & Wumpus(x)))", "all x.((Gruppus(x) & Llorpus(x) & Humpus(x) & Vumpus(x) & Grimpus(x) & Lempus(x) & Wumpus(x)) -> Furious(x))", "all x.((Lorpus(x) & Shumpus(x) & Vumpus(x)) -> (Smoothpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Smoochus(x) & Lempus(x) & Wumpus(x)))"]}
{"id": "prontoqa_train_988", "nl": "Fae is a shumpus.", "fol": "shumpus(Fae)", "prediction": ["all x.(Fae(x) -> Humpus(x))", "All x.(Fae(x) -> Humpus(x))", "all x.(Fae(x) -> Shumpus(x))", "all x.(Fae(x) -> Humptus(x))", "(Shumpus(Fae) -> Shumpus(Fae))", "all x.(Fae(x) -> Shumpus(x))", "all x.(Fae(x) -> Humpus(x))", "(Shumpus(Fae))", "Fae is an Shumpus.", "all x.(Fae(x) -> Humpus(x))", "all x.(Fae(x) -> Shumpus(x))", "all x.(Fae(x) -> Humpback(x))", "all x.(Fae(x) -> Humpus(x))", "(Shumpus(Fae) & Smull(Fae) & Hates(Fae,Fae))", "(Shumpus(Fae)", "\"Shumpus(Fae)\""]}
{"id": "prontoqa_train_989", "nl": "Fae is a vumpus.", "fol": "vumpus(Fae)", "prediction": ["all x.(Fae(x) -> Vombus(x))", "Fae(x) -> Vumpus(x))", "all x.(Fae(x) -> Vumpus(x))", "all x.(Fae(x) -> Vumpus(x))", "exists x.(Fae(x) & Vumpus(x))", "(Vumpus(Fae))", "((Fae(Fae) & Voompus(Fae)))", "-Vimpus(Fae)", "all x.(Fae(x) -> Vumpus(x))", "all x.(Fae(x) -> Vumpus(x))", "(Vumbus(Fae) -> IsUmpus(Fae))", "-Vumpes(Fae)", "(Vumpus(Fae) & Venomp(Fae))", "all x.(Fae(x) -> Voompus(x))", "all x.(Fae(x) -> Vumpus(x))", "(Vumpus(Fae) & Unknown(Fae))"]}
{"id": "prontoqa_train_990", "nl": "Fae is a grimpus.", "fol": "grimpus(Fae)", "prediction": ["(Fae(Fae) & Grimpus(Fae))", "all x y.((Fae(x) & Grimpus(y)) -> Gruffed(x))", "(Grimppus(Fae) & ScalpFae(Fae))", "all x.(Fae(x) -> Grappes(x))", "all x.(Fae(x) -> Grimpus(x))", "(Grimpus)", "Fare is a Grimpus.", "(Cruisus(Fae) & Gruppus(Fae))", "all x.(Fae(x) -> Grimpus(x))", "all x.(Fae(x) -> Grimpus(x))", "all x.(Fae(x) -> Gruppus(x))", "(Gruppus(Fae) & Grimpus(Fae))", "all x.(Fae(x) -> Grimpus(x))", "all x.(Fae(x) -> Grimpus(x))", "(Grimpus(Fae) & Grimpus(Fae))", "(Grampus(Fae))"]}
{"id": "prontoqa_train_991", "nl": "Each zumpus is a lempus, a tumpus, and a numpus.", "fol": "all x. (zumpus(x) -> (lempus(x) & tumpus(x) & numpus(x)))", "prediction": ["all x.(Zumpus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x.(Tompus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x.(Zumpus(x) -> (Lempus(x) & Tumpus(x) & Numpus(x)))", "all x.(Tompus(x) -> (Lempus(x) & Tumpus(x) & Numpus(x)))", "all x.(Zumpus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x.(Zumpus(x) -> (Lempus(x) & Tumpus(x) & Numpus(x)))", "all x.(Zumpus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x y.((Tompus(x) & Lempus(y)) -> (Tumpus(x) | Numpus(y)))", "all x.(Tommy(x) -> (HasLempus(x) | HasTumpus(x) | HasNumpus(x)))", "all x y z.((Zumpus(x) & Lempus(y) & Tumpus(z)) -> (Tumpus(x) & Numpus(x)))", "all x.(Zumpus(x) -> (Lempus(x) & Humpus(x) & Numpus(x)))", "all x y z.((Zumpus(x) & Lempus(y) & Tumpus(z)) -> (IsHeritage(x,y) & IsHeritage(x,z) & IsHeritage(x,z)))", "all x.(Touchpus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "All x.(Zumpus(x) -> (Lempus(x) & Tumpus(x) & Numpus(x)))", "all x.(Jumpus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x.(Zumpus(x) -> (Lempus(x) & Tumpus(x) & Numpus(x)))"]}
{"id": "prontoqa_train_992", "nl": "Stella is a zumpus.", "fol": "zumpus(Stella)", "prediction": ["Stella is Zumpus(z)", "all x.(Stella(x) -> Zumpus(x))", "(Azuspe(Stella) -> Tospu(Stella))", "Stella (Amitose( Stella))", "Stella is Zumpus(status)", "(Zumpus.)", "Stella is zumpus.", "Stella is einer derartige(Stella)", "Stella is Zumpus(Stella)", "(Zumpus(Stella))", "Stellais(Stella) -> Zumpus(Stella))", "Stella is a zumpus.", "Stella is zumpus(Stella)", "Stella is zumpus.", "Stella is zumpus.", "Stella is Zumpus(Stella)"]}
{"id": "prontoqa_train_993", "nl": "Stella is a wumpus, a numpus, or a lempus.", "fol": "(wumpus(Stella) | numpus(Stella) | lempus(Stella))", "prediction": ["all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "exists x.(Stella(x) & (Wumpus(x) | Numpus(x) | Lempus(x)))", "(Wumpus(Stella) | Numpus(Stella) | Lempus(Stella)))", "(Wumpus(Stella) | Numpus(Stella) | Lempus(Stella))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "(Wumpus(Stella) | Numpus(Stella) | Lempus(Stella))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))"]}
{"id": "prontoqa_train_994", "nl": "Every lempus is a sterpus.", "fol": "all x. (lempus(x) -> sterpus(x))", "prediction": ["all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Spinae(x))", "all x.(Lampus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_995", "nl": "Alex is a gorpus, a lempus, and a numpus.", "fol": "(gorpus(Alex) & lempus(Alex) & numpus(Alex))", "prediction": ["all x y z.((Alex(x) & Gorpus(y) & Lempus(z)) -> (Gorpus(x) & Lempus(z) & Numpus(x)))", "(all x.(Alex(x) -> Gorpus(x)) & (Alex(x) -> Lempus(x)) & (Alex(x) -> Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) & Lempus(x) & Numpus(x)))", "all x y z.((Alex(x) & Gorpus(y) & Lempus(z) & Numpus(x)) -> (Gorpus(x) | Lempus(z) | Numpus(z))))", "(Gorpus(Alex) | Lempus(Alex) | Numpus(Alex))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Limpus(y) -> Numpus(z))))", "all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) & Lempus(x) & Numpus(x)))", "(all x y z.(Alex(x) -> Gorpus(x)) & (Lempus(y) & Numpus(z))))", "(gorpus(Alex) & lempus(Alex) & numpus(Alex))", "all x.(Alex(x) -> (Gorpus(x) & Lempus(x) & Numpus(x)))", "all x.(Alex(x) -> (Ros\u00e9(x) & Lempus(x) & Numpus(x)))", "all x.(Alex(x) -> (Rosy(x) & is a Gorpus(x) & is Lempus(x) & is Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))"]}
{"id": "prontoqa_train_996", "nl": "Alex is a lorpus or a sterpus or a gorpus.", "fol": "(lorpus(Alex) | sterpus(Alex) | gorpus(Alex))", "prediction": ["all x y.((Alex(x) & Lorpus(x)) | (Sterpus(x) | Gorpus(x))))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x y.((Alex(x) & Lorpus(y)) | (Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "(Lorpus(Alex) | Sterpus(Alex) | Gorpus(Alex)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Steros (x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Korpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Larpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_997", "nl": "Everything that is an impus, a rompus, and a yumpus is a gorpus and a grimpus and a tumpus.", "fol": "all x. ((impus(x) & rompus(x) & yumpus(x)) -> (gorpus(x) & grimpus(x) & tumpus(x)))", "prediction": ["all x.((Improve(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Impos,Composite(x) & Rompus(x) & Yuppus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Issue(x) & Rompus(x) & Yampus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Impact(x) & Rompus(x) & Yupus(x)) -> (Gorpus(x) & Gruppus(x) & Tumulus(x)))", "all x.((Issue(x) | Rompus(x) | Yumpus(x)) -> (Issue(x) & Issue(x) & IsSmoke(x) & IsTumpus(x)))", "all x.((Impos(x) & Rompus(x) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Imposs(x) & Rompus(x) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Imposer(x) | Roma(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Impose(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Impos,Rompus,Yumpus) -> (Gorpus(x) | Grimpus(x) | Tumpus(x)))", "all x.((Imposs,(x) & Rompus(x) & Yampus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Imposer(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Imposer(x) | Rompus(x) | Yumpus(x)) -> (OfGorpus(x) & OfGrimpus(x) & OfTumpus(x)))", "all x.((Imperator(x) & Rompus(x) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Impos(x) & Rompus(x) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Imposer(x) | Rompus(x) | Yampus(x)) -> (Gorpus(x) & Grapple(x) & Tumpus(x)))"]}
{"id": "prontoqa_train_998", "nl": "Fae is an impus.", "fol": "impus(Fae)", "prediction": ["all x.(Fae(x) -> Is(x,y,x))", "all x.(Fae(x) -> IsImprovement(x))", "All x.(Fae(x) -> Isolation(x))", "(IsFae(Fae,Pr\u00e4fix))", "all x.(Fae(x) -> Illegal(x))", "all x.(Fae(x) -> Imposer(x))", "all x.(Fae(x) -> Implicator(x))", "(There exists x.(Fae(x) & Implicator(x)))", "all x.(Fae(x) -> Derigrator(x))", "the problem is that we cannot make your own way into your life.", "all x.(Fae(x) -> IsAsImpossible(x))", "all x.(Fae(x) -> Impossible(x))", "all x.(Fae(x) -> IsDepose(x))", "all x.(Fae(x) -> IsVersussified(x))", "all x.(Fae(x) -> Imitation(x))", "all x.(Fae(x) -> Impossible(x))"]}
{"id": "prontoqa_train_999", "nl": "Fae is a rompus.", "fol": "rompus(Fae)", "prediction": ["all x.(Rompus(x) -> Fae(x))", "all x.(Fae(x) -> Rompus(x))", "Fae is rompus.", "all x.(Repeat(x) -> Rompus(x))", "Fae (Rompus)", "(rompus(Fae) & Rimp(Fae))", "all x.(Fae(x) -> Rompus(x))", "Fae (rompus)", "all x.(Fae(x) -> Rompus(x))", "IsRompus(Fee)", "all x.(Fae(x) -> Romanpse(x))", "(Rompus(Fae))", "(Rompus(Fae) & Rhopus(Fae))", "all x.(Fae(x) -> Rompus(x))", "all x.(Fae(x) -> Rimpus(x))", "Ease(Fae) ist eine Rompus(Fae)"]}
{"id": "prontoqa_train_1000", "nl": "Fae is a gorpus.", "fol": "gorpus(Fae)", "prediction": ["exists x.(Fae(x) & Gorpus(x))", "exists x.(Soap(x) & Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "(Gorpus(Fae) -> Gorpus(Fae))", "all x.(Fae(x) -> Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "All x.(Fae(x) -> Gorpus(x))", "(Gorpus(Fae) -> ComesIn(Fae))", "all x.(Fae(x) -> Gorpus(x))", "(Gorpus(Fae) & ConsistsOf(Fae,Orpius))", "is of gorpus.", "(Gruppus(Fae) & Gorpus(Fae))"]}
{"id": "prontoqa_train_1001", "nl": "Each lempus is a grimpus and a shumpus and a wumpus.", "fol": "all x. (lempus(x) -> (grimpus(x) & shumpus(x) & wumpus(x)))", "prediction": ["all x.(Lempus(x) -> (Grimpus(x) & Shumpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> (Grimpus(x) & Hummus(x) & Wompus(x)))", "all x y.((Lempus(x) & Grimpus(y)) -> (Shumpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> (Grimpus(x) & Humpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> (Grimpus(x) & Humpus(x) & Humpus(x)))", "all x.(Lempus(x) -> (Agrempus(x) & Shumpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> (Sharp(x) & Humpus(x) & Rumpus(x)))", "all x y.((Lempus(x) & Grimpus(y)) -> (Shumpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> (Spoia(x) & Shimpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> (Shrunk(x) | Humpus(x) | Wumpus(x)))", "all x.(Lempus(x) -> (Gruppus(x) & Humpus(x) & Humpus(x)))", "all x.(Lempus(x) -> (Gripper(x) & Humpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> exists y.(Grimpus(y) & Swhumpus(y) & Wumpus(x)))", "all x.(Lampu(x) -> (Grimpus(x) | Humpus(x) | Wompus(x)))", "all x.(Lempus(x) -> (Grimpus(x) & Humpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> (Grimpus(x) & Humpus(x) & Wumpus(x)))"]}
{"id": "prontoqa_train_1002", "nl": "Each lorpus is a yumpus.", "fol": "all x. (lorpus(x) -> yumpus(x))", "prediction": ["all x.(Lorpus(x) -> Yumpa(x))", "all x.(Lorpus(x) -> Yampus(x))", "all x.(Lorpus(x) -> Yampus(x))", "all x.(Lorpus(x) -> Yumpus(x))", "all x.(Lorpus(x) -> Yumpus(x))", "all x.(Lorpus(x) -> Yumpus(x))", "all x.(Lorpus(x) -> Yumpsum(x))", "all x.(Lorpus(x) -> Yumpus(x))", "exists x.(Lorpus(x) & Yumpu(x))", "all x.(Lorpus(x) -> Yumpus(x))", "all x.(Lorpus(x) -> Yumpa(x))", "all x.(Lorpus(x) -> Yumpa(x))", "all x.(Lorpus(x) -> Yumpus(x))", "exists x.(Lorpus(x) & Yumpa(x))", "all x.(Lorpus(x) -> Yumpus(x))", "all x.(Lorpus(x) -> Yampus(x))"]}
{"id": "prontoqa_train_1003", "nl": "Yumpuses are not shumpuses.", "fol": "all x. (yumpus(x) -> -shumpus(x))", "prediction": ["all x.(Yumpuse(x) -> -Shumpus(x))", "the y.((Yumpuse(x) & Shumpus(y)) -> -Shumpus(x))", "all x.(Yumpuse(x) -> -Shumpuse(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Umpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x y.((Yumpus(x) & Snompus(y)) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "(-Shumpus(y) & YumpusEarth(z) & -ShumpusEarth(y))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))"]}
{"id": "prontoqa_train_1004", "nl": "Alex is a lorpus.", "fol": "lorpus(Alex)", "prediction": ["all x.(Alex(x) -> Lorpus(x))", "all x.(Lorph(x) -> IsAlex(x))", "Alex is a lorpus.", "all x.(Alex(x) -> Lorpus(x))", "Alex is a lorpus.", "all x.(Alex(x) -> Lorpus(x))", "all x.(Alex(x) -> Lorpus(x))", "-Lorpus(Alex)", "Alex is a Llorpus.", "all x.(Alex(x) -> Lorpus(x))", "Alex is a lorpus.", "all x.(Alex(x) -> Lorpus(x))", "(Lorpus(Alex) & HasVibrant(Alex))", "all x.(Alex(x) -> Lorpus(x))", "all x.(Alex(x) -> Thrings(x))", "all x.(Alex(x) -> Thrombosis(x))"]}
{"id": "prontoqa_train_1005", "nl": "Each numpus is a lorpus, a shumpus, and a rompus.", "fol": "all x. (numpus(x) -> (lorpus(x) & shumpus(x) & rompus(x)))", "prediction": ["all x.(Numpus(x) -> (Lorpus(x) & Humpus(x) & Rompus(x)))", "exists x.(numpus(x) & (Lorpus(x) | Shumpus(x) | Rompus(x)))", "(all x.(Numpus(x) -> Lorpus(x)) & all y.(Shumpus(y) -> Rompus(y)))", "all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "all x.(Numerus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "all x.(Nompus(x) -> (Lorpus(x) | Suhpus(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Roma(x)))", "(all x.(Numpus(x) -> Lorpus(x)) & all y.(Shumpus(y) & all z.(Rompus(z) -> Lorpus(x) & -Shumpus(y))))", "all x.(Nompus(x) -> (Lorpus(x) | Humpus(x) | Romanus(x)))", "all x.(numpus(x) -> (Vehicle(x) & IsLorpus(x) & IsShumpus(x) & IsRompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) & Humpus(x) & Rompus(x)))", "all x.(Nompus(x) -> (Lorpus(x) | Humpus(x) | Romanus(x)))", "all x.(numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "(all x.(Nompus(x) -> isLorpus(x)) & all y.(Shumpus(y) & All z.(Rompus(z)) -> (Lorpus(z) | Shumpus(z) | Rhopus(z))))"]}
{"id": "prontoqa_train_1006", "nl": "Max is a numpus.", "fol": "numpus(Max)", "prediction": ["All x.(Max(x) -> Numpus(x))", "All x.(Max(x) -> Numpus(x))", "(Max(Max) -> Numpus(Max))", "Max is Numpus(Max)", "all x.(Max(x) -> Numpus(x))", "all x.(Max(x) -> Numpus(x))", "Max is Numbus.", "(Nobu) & HasMatte(Max))", "this page was last edited on 28 August 2012, at 12:56 (MaxVox(Max) & Numpus(Max))", "(numpus(Max) & -Number(Max))", "(Alain(Max) -> Nompus(Max))", "ManFuchs(max)", "(Numpus(Max) & Sumo(Max))", "(Numerus(Max) & Numpus(Max))", "Max is a Numpus(max)", "Paul is a Numpus."]}
{"id": "prontoqa_train_1007", "nl": "Max is a shumpus, a lorpus, or an impus.", "fol": "(shumpus(Max) | lorpus(Max) | impus(Max))", "prediction": ["all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x)))", "all x.(Max(x) -> (HasShumpus(x) | HasLorp (x) | HasImpedus(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperative(x)))", "(Shumpus(Max) | Lorpus(Max) | Imperative(Max))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x)))", "all x.(Max(x) -> (Shumpus(x) | Liepus(x) | Imperator(x)))", "(exists x.(Max(x) & Humpus(x)) | exists y.(Lorpus(y) & Isolator(y))))", "all x.(Max(x) -> (Shumpus(x) | Lordpus(x) | Impeccis(x)))", "all x.(Max(x) -> (shumpus(x) | lorpus(x) | impus(x)))", "(exists x.(Max(x) & Humpus(x)) | exists y.(Lorpus(y) & Impossible(y))))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperemptor(x)))", "(Atom(Max) | Atom(Max)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Impermant(x)))", "(all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x))))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x)))", "(all x.(Max(x) -> Shumpus(x)) | All y.(Max(y) -> Lorpus(y))) | Und (Max(y) -> Obsidian(y))))"]}
{"id": "prontoqa_train_1008", "nl": "Polly is a sterpus and a wumpus and a jompus.", "fol": "(sterpus(Polly) & wumpus(Polly) & jompus(Polly))", "prediction": ["all x.(Polly(x) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "exists x.(Polly(x) & Sterpus(x) & Wumpus(x) & Jompus(x))", "all x.(Policy(x) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "all x.(Polly(x) -> (Sterepus(x) & Wumpus(x) & Jompus(x)))", "all x.(Polly(x) -> (Sterepus(x) & Wumpus(x) & Jompus(x)))", "all x.(Polly(x) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "all x.(Polly(x) -> (IsSterpus(x) & IsWumpus(x) & IsJompus(x)))", "all x y.((Polly(x) & Sterpus(y)) -> (Wumpus(x) & Jompus(x)))", "all x.((Polly(x) & Sterpus(x)) -> (Wumpus(x) & Jompus(x)))", "all x.(Polly(x) -> (Sterepus(x) & Wumpus(x) & Jompus(x)))", "(sterpus(Poly) & Wumpus(Poly) & Jompus(Poly))", "all x.(Ploy(x) -> (Stroth(x) & -Bird(x)))", "all x.(Polly(x) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "exists x.(Polly(x) & Sterpus(x) & Wumpus(x) & Jompus(x))", "(all x.(Polly(x) -> Sterpus(x)) & (Wumpus(x) | Jompus(x))))", "(HeadedBy(Polly) & Sterepus(Polly) & Has(Polly,Wumpus) & Has(Polly,Jompus))"]}
{"id": "prontoqa_train_1009", "nl": "Polly is a tumpus or a lempus or a shumpus.", "fol": "(tumpus(Polly) | lempus(Polly) | shumpus(Polly))", "prediction": ["all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "All x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Shumpus(x)))", "all x.(Poly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x y.((Polly(x) & Tompus(x)) | (Lempus(x) | Humpus(x))))", "all x.(Polly(x) -> ((Tumpus(x) | Lempus(x) | Humpus(x))))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Pollly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))"]}
{"id": "prontoqa_train_1010", "nl": "Every zumpus is a rompus and a shumpus and a yumpus.", "fol": "all x. (zumpus(x) -> (rompus(x) & shumpus(x) & yumpus(x)))", "prediction": ["all x.(Dust(x) -> exists y.(rompus(y) & Humpus(z)) & Yompus(x)))", "all x.(Zumpus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Zumpus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Sampus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x y z.((Tompus(x) & Rrompus(y) & Humpus(z)) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Zumpus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Zimpus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "(all x.(Tompus(x) -> Rompus(x)) & (Shumpus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x y z.((Tompus(x) & Rrompus(y) & Shumpus(z)) -> (Rompus(x) & Humpus(z) & Yumpus(x)))", "all x.(Tommy(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Shumpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1011", "nl": "Rex is a zumpus.", "fol": "zumpus(Rex)", "prediction": ["(Tompus(Rex) & Alive(Rex))", "Rex (Zombipus)", "Rex is zumpus.", "Rex is Zumpus.", "Rex.(Rex) is zumpus(x))", "Rex is a Zumpus.", "Rex ist zumpus.", "Rex, A Zumpus.", "Rex is a zumpus.", "Rex is zumpus.", "Rex is a zumpus.", "Rex is a zumpus(x)", "(Zumpus(Rex))", "Rex is a zumpus.", "(Rex(Rex) & Zumpus(Rex))", "Umpteenth(Rex)"]}
{"id": "prontoqa_train_1012", "nl": "Rex is a rompus or a lempus or a grimpus.", "fol": "(rompus(Rex) | lempus(Rex) | grimpus(Rex))", "prediction": ["all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grapps(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> ((Rompus(x) | Lempus(x) | Grimpus(x))))", "all x.(Rex(x) -> ((Rompus(x) | Lempus(x) | Grimpus(x))))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "(Rex) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> ((Rompus(x) | Lempus(x) | Grimpus(x))))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> ((Rompus(x) | Lempus(x) | Grimpus(x))))", "all x.(Rompus(x) | Lempus(x) | Grimpus(x))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1013", "nl": "Everything that is a shumpus and a lempus and a yumpus is a tumpus and a brimpus and a zumpus.", "fol": "all x. ((shumpus(x) & lempus(x) & yumpus(x)) -> (tumpus(x) & brimpus(x) & zumpus(x)))", "prediction": ["all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) | Lempus(x) | Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) | Lempus(x) | Yampus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) | Lempus(x) | Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yampus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) | Lempus(x) | Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) | Lempus(x) | Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x y.((Shumpus(x) & Lempus(x) & Yuzurus(y)) -> (Tumpus(x) & Brampus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) | Lempus(x) | Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) | Lempus(x) | Yumus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumps(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))"]}
{"id": "prontoqa_train_1014", "nl": "Rex is a shumpus.", "fol": "shumpus(Rex)", "prediction": ["Derrex ist ein Humpus(Rex)", "all x.(Rex(x) -> Humpus(x))", "all x.(Rex(x) -> Humpus(x))", "all x.(Rex(x) -> Shumpus(x))", "Rex.(Shumpus(x) -> ResidentOf(x))", "(Shumpus(Rex)", "all x.(Rex(x) -> Humpus(x))", "(Shumpus(Rex) & AnimatedBy(Rex,Is(Rex))", "(Shumpus(Rex) & Humptus(Rex))", "All x.(Rex(x) -> Humptus(x))", "Rex is Shumpus(x)", "Rex is a shumpus.", "Rx.(Shumpus(re))", "all x.(Rex(x) -> Humpus(x))", "Rex is shumpus.", "Located in Alaska, California, Rex is a Humpback (Shumpus)"]}
{"id": "prontoqa_train_1015", "nl": "Rex is a yumpus.", "fol": "yumpus(Rex)", "prediction": ["(Yumpus(Rex))", "(Yumpus(rex) & Oscillations(rex))", "Rex ist ein Yunus.", "all x.(Rex(x) -> Yumpum(x))", "((Yumpus(Rex)) -> Yampus(rex)))", "(Yumpus(Rex))", "all x.(Rex(x) -> Yumpus(x))", "Rex is yumpus.", "Rex (Yumpus)", "all x.(Rex(x) -> Yumpoid(x))", "Rex is yumpus.", "all x.(Rex(x) -> Yumpus(x))", "all x.(Rex(x) -> Yumpus(x))", "Rex is yumpus.", "All x.(Rex(x) -> Yumpu.", "In fact, Rex is a yumpus."]}
{"id": "prontoqa_train_1016", "nl": "Rex is a brimpus.", "fol": "brimpus(Rex)", "prediction": ["All x.(Rex(x) -> Brimpus(x))", "Rex (Brimpus)", "all x.(Rex(x) -> Brimpus(x))", "Rex is a brimpus.", "all x.(Rex(x) -> Brimpus(x))", "Rex is brimpus.", "all x.(Rex(x) -> Brimpus(x))", "all x.(Rex(x) -> Brimpus(x))", "Rex (Brimpus)", "(Brimpus(Rex) -> Discrete(Rex))", "(Brimpus(Rex) & HasBrimpus(Rex))", "All x.(Rex(x) -> Brimpus(x))", "All x.(Rex(x) -> Brimpus(x))", "all x.(Rex(x) -> Brimpus(x))", "ContainsBrimpus(Rex)", "all x.(Rex(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_1017", "nl": "Everything that is an impus and a wumpus and a yumpus is a zumpus, a numpus, and a tumpus.", "fol": "all x. ((impus(x) & wumpus(x) & yumpus(x)) -> (zumpus(x) & numpus(x) & tumpus(x)))", "prediction": ["all x.((Impose(x) & Wumpit(x) & Yumpit(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Issue(x) & (Wumpus(x) | Yumpus(x))) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x.((Imposer(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Improvist(x) & Wumpus(x) & Yumpus(x)) -> (Tommis(x) & Numpus(x) & Tumpus(x)))", "all x.((Imposer(x) & Wumpus(x) & Yumpus(x)) -> (Zumpus(x) | Numpus(x) | Tumpus(x)))", "all x.((Issue(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Impossis(x) & Wumpus(x) & Yumpus(x)) -> (Zumpus(x) & Numpus(x) & Tumpus(x)))", "all x.((Imposer(x) & Wumpus(x) & Yampus(x)) -> (Touchpus(x) & Numpus(x) & Tumpus(x)))", "all x.((Impose(x) & Wumpus(x) & Yumpus(x)) -> (Zumpus(x) | Numpus(x) | Tumpus(x)))", "all x.((Imposs(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Ilvisand(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Issue(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x.((Improvist(x) & Wumpus(x) & Yumpus(x)) -> (Zumpus(x) & Numpus(x) & Tumpus(x)))", "all x.((Issue(x) & Wumpus(x) & Yumpus(x)) -> (Stompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Imposer(x) & Wumpus(x) & Yumpus(x)) -> (Sumpus(x) & Numpus(x) & Tumpus(x)))", "all x.((Impose(x) & Wumpus(x) & Yumpus(x)) -> (Altompus(x) & Numpus(x) & Tumpus(x)))"]}
{"id": "prontoqa_train_1018", "nl": "Sam is an impus.", "fol": "impus(Sam)", "prediction": ["(Exists(Sam) | Imperator(Sam))", "(Petit(Sam) & Implicit(Sam))", "(Impossible(Sam) & Man(Sam))", "all x.(Sam(x) -> Impeccable(x))", "all x.(Sam(x) -> IsDepose(x))", "exists x.(Saman(x) & IsInvolves(x))", "all x.(Sam(x) -> IsAid(x))", "is a impusct.", "All x.(Sam(x) -> IsImpossible(x))", "All x.(Sam(x) -> Implicator(x))", "Sam has been impused.", "(Immustral(Sam))", "all x.(Sam(x) -> Implicator(x))", "exists x.(Sam(x) & Impossible(x))", "all x.(Sam(x) -> IsDefiant(x))", "Sam is an impus."]}
{"id": "prontoqa_train_1019", "nl": "Sam is a wumpus.", "fol": "wumpus(Sam)", "prediction": ["all x.(Wumpus(x) -> Sam(x))", "all x.(Wumpus(x) -> Sam(x))", "all x.(Wumpus(x) -> Sam(x))", "Sam & Hush(x)", "all x.(Wumpus(x) -> Sam(x))", "all x.(Wumpus(x) -> Sam(x))", "all x.(Sam(x) -> Wumpus(x))", "all x.(Wumpus(x) -> Sam(x))", "(Wumpus(Sam) & HasHaus(Sam))", "all x.(Wumpus(x) -> Sam(x))", "all x.(Wumpus(x) -> Sam(x))", "Sam is a Wumpus.", "all x.(Wumpus(x) -> Sam(x))", "all x.(Wumpus(x) -> Sam(x))", "(Wumpus(Sam) & HasWump(Sam))", "Sam is a wumpus."]}
{"id": "prontoqa_train_1020", "nl": "Sam is a yumpus.", "fol": "yumpus(Sam)", "prediction": ["Sam is Yampus.", "all x.(Yumpus(x) -> Sam(x))", "all x.(Yumpus(x) -> Sam(x))", "all x.((Sam(x) & Yumpus(x)) -> ComesOn(x))", "(Yumpus(Sam) | Yam(Sam)))", "all x.(Yumpus(x) -> Sam(x))", "all x.(Yumpus(x) -> Sam(x))", "(Yumpus.)", "all x.(Yumpus(x) -> Sam(x))", "all x.(Yumpus(x) -> Sam(x))", "all x.(Yumpus(x) -> Sam(x))", "(Yumpus(Sam)", "all x.(Yumpus(x) -> Sam(x))", "all x.(Yumpus(x) -> Sam(x))", "all x.(Sam(x) -> Yumpus(x))", "(Yumpus(Sam) -> Giant(Sam))"]}
{"id": "prontoqa_train_1021", "nl": "Sam is a zumpus.", "fol": "zumpus(Sam)", "prediction": ["all x.(Sam(x) -> Zumpus(x))", "all x.(Sam(x) -> Zumpus(x))", "all x.(Sam(x) -> Zumpus(x))", "*Sam(sam) -> Zurpus(sam))", "all x.(Sam(x) -> Zumpus(x))", "Sam is zumpus.", "Sam is Zumpus(Sam)", "all x.(Sam(x) -> Zumpus(x))", "all x.(Sam(x) -> Zumpus(x))", "(Sam, Zumpus, x))", "all x.(Sam(x) -> Zumpus(x))", "all x.(Sam(x) -> Zumpus(x))", "(Tompus(Sam)", "all x.(Sam(x) -> Zumpus(x))", "all x.(Sam(x) -> Zumpus(x))", "all x.(Sam(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_1022", "nl": "Everything that is a shumpus and a yumpus and a tumpus is a lorpus.", "fol": "all x. ((shumpus(x) & yumpus(x) & tumpus(x)) -> lorpus(x))", "prediction": ["all x.((Shumpus(x) & Yusumpus(x) & Totumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yukon(x) & Totumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yupus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) | Yampus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.(((Shumpus(x) | Yuppus(x) | Tumpus(x))) -> Lorpus(x))", "all x y.((Shumpus(x) & Yunus(y) & Tumpus(y)) -> Lorpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Tumpus(x)) -> Llorpus(x))", "all x.((Shumpus(x) & Yuba(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yukpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yukpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yukon(x) & Tumpus(x)) -> Lorpus(x))"]}
{"id": "prontoqa_train_1023", "nl": "Each wumpus is not a lorpus.", "fol": "all x. (wumpus(x) -> -lorpus(x))", "prediction": ["all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))"]}
{"id": "prontoqa_train_1024", "nl": "Sally is a dumpus and a numpus and a wumpus.", "fol": "(dumpus(Sally) & numpus(Sally) & wumpus(Sally))", "prediction": ["(Wumpus) & Dumpus(Sally))", "all x.(Sally(x) -> (Dumps(x) & Numpus(x) & Wumpus(x)))", "all x.(Sally(x) -> exists y.(Dumps(y) & Nompus(x) & Wumpus(y) & -Pupus(x)))", "all x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))", "(All x.(Sally(x) -> Dumpus(x)) & (numpus(x) | wumpus(x))))", "(Dumpus(Sally) & Numpus(Sally) & Wumpus(Sally))", "(Dumpus(Sally) & Numpus(Sally) & Wumpus(Sally))", "(Dumpus(Sally) & Numpus(Sally) & Wumpus(Sally))", "(Double(s) & Numpus(s) & Wumpus(s))", "all x.(Sally(x) -> (Mouse(x) & Numpus(x) & Wampus(x)))", "all x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))", "(Dumpus(Sally) & Numpus(Sally) & Wumpus(Sally))", "all x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))", "(Dumpus(Sally) & Numerus(Sally) & Wumpus(Sally))", "(IsDumpus(Sally) | IsNumpus(Sally) | IsWumpus(Sally)))", "all x.(Sally(x) -> (Dumpster(x) & Numpus(x) & Wumpus(x)))"]}
{"id": "prontoqa_train_1025", "nl": "Sally is a yumpus.", "fol": "yumpus(Sally)", "prediction": ["Sally is Yumpus(Sally,Nahitian)", "Sally is Yampus.", "Sally is yumpus(y)", "all x.(Yumpus(x) -> Sally(x))", "Sally isyumpus.", "Sally is yumpus.", "Sally is yumpus.", "Sally is yumpus.", "Sally is a yumpus.", "IsYumpus(Sally)", "Sally is yumpus.", "is Yumpus(Sally)", "Sally is yumpus.", "Sally is yumpus.", "all x.(Yumpus(x) -> Sally(x))", "Sally is yumpus."]}
{"id": "prontoqa_train_1026", "nl": "Sally is a tumpus.", "fol": "tumpus(Sally)", "prediction": ["Sally is a Tumulus(Sally)", "Sally A Tumpus.", "Sally is a tumpus.", "Sally is a tumpus.", "all x.(Sally(x) -> Tumpus(x))", "Sally est une tumpus.", "all x.((Sally(x) & Tumpus(x)) -> Tumpus(x))", "Sally is Tumpus(Sally)", "all x.(Tumpus(x) -> Sally(x))", "Sally (Tumpus)", "Sally is a tumpus.", "Sally is a tumpus.", "Sally is tumpus.", "all x.(Sally(x) -> Teacup(x))", "all x.(Tumpus(x) -> Sally(x))", "Sally (Tumpus)"]}
{"id": "prontoqa_train_1027", "nl": "Everything that is a vumpus, a tumpus, or a dumpus is a yumpus and a zumpus and a lorpus.", "fol": "all x. ((vumpus(x) | tumpus(x) | dumpus(x)) -> (yumpus(x) & zumpus(x) & lorpus(x)))", "prediction": ["all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lordpus(x)))", "all x.(Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x y.(((Vumpus(x) | Termpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(y) & Lorpus(y)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vsumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zurpus(x) & lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vampus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_train_1028", "nl": "Sam is a vumpus.", "fol": "vumpus(Sam)", "prediction": ["all x.(Sam(x) -> Vulmpus(x))", "all x.(Sam(x) -> Vumpus(x))", "(Vumpus(Sam) -> Vumpus(Sam))", "(Vimpus(sam) & Born(sam))", "(Vimpus(Sam) & (Sam) | Sam(Sam)))", "(Vumpus(Sam) -> Affiliate(Sam,4))", "(Umpus(Sam))", "all x.(Vimpus(x) -> Sam(x))", "-Vumpus(Sam)", "all x.((Sam(x) & Vumpus(x)) -> Vumpus(x))", "all x.((Sam(x) & Vumpus(x)) -> Vulups(x))", "all x.(Sam(x) -> Vampsum(x))", "all x.(Vimpus(x) -> Sam(x))", "all x.(Sam(x) -> Vampire(x))", "all x.(Vimpus(x) -> Sam(x))", "all x.(Sam(x) -> Vumpus(x))"]}
{"id": "prontoqa_train_1029", "nl": "Everything that is a lorpus and a brimpus and an impus is not a jompus.", "fol": "all x. ((lorpus(x) & brimpus(x) & impus(x)) -> -jompus(x))", "prediction": ["all x.((Lorpus(x) & Brimpus(x) & Impossible(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Impossible(x)) -> -Jumpus(x))", "all x.((Lorpus(x) & Brimpus(x) & Impossible(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Impossible(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Institut(x)) -> -Jompus(x))", "all x.((Lorpus(x) | Brimpus(x) | Imperator(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Imperator(x)) -> -Jumpus(x))", "all x.((Lorpus(x) & Brimpus(x) & Impossible(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Issuu(x)) -> -Jompus(x))", "all x.((Lorpus(x) | Brimpus(x) | Imperator(x)) -> -Jompus(x))", "all x.((Lorpus(x) | Brimpus(x) | Imperium(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Imperator(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & IsImpact(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Impossible(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & impus(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Is(x)) -> -Jompus(x))"]}
{"id": "prontoqa_train_1030", "nl": "Grimpuses are jompuses, lempuses, and yumpuses.", "fol": "all x. (grimpus(x) -> (jompus(x) & lempus(x) & yumpus(x)))", "prediction": ["all x.(Grimpus(x) -> (Jompus(x) | Lempuse(x) | Yumpuse(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpus(x) -> (AmidJompuse(x) | BetweenLempuse(x) | BetweenYumpuses(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yompuse(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpus(x) -> (Jimpus(x) | Lempuse(x) | Yumpuse(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "(all x.(Grumpus(x) -> (Jumpsuse(x) | Lempuse(x) | Yumpuse(x))))", "all x.(Grimpus(x) -> (Jompuses(x) | Lempuses(x) | Yumpuses(x)))", "(all x.(Grimpuse(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x))))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yampus(x)))"]}
{"id": "prontoqa_train_1031", "nl": "Wren is a lorpus.", "fol": "lorpus(Wren)", "prediction": ["all x.(Wren(x) -> Lorpus(x))", "all x.(Wren(x) -> Lorpus(x))", "all x.(Wren(x) -> Lorpus(x))", "all x.(Wren(x) -> Lorpus(x))", "(Lorpus(Wren) -> Hormone(Wren))", "all x.(Wren(x) -> Lorpus(x))", "all x.(Wren(x) -> Lorpus(x))", "all x.(Wren(x) -> Llorpus(x))", "all x.(Wren(x) -> Lorpus(x))", "Inwren(w) & Hornet(w))", "all x.(Wren(x) -> Lorpus(x))", "all x.(Wren(x) -> Lorpus(x))", "also a lorpus.", "all x.(Wren(x) -> Lorpus(x))", "all x.(Wren(x) -> Lopulus(x))", "all x.(Wren(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_1032", "nl": "Every rompus is a gorpus and a dumpus and a lempus.", "fol": "all x. (rompus(x) -> (gorpus(x) & dumpus(x) & lempus(x)))", "prediction": ["(all x.(Rompus(x) -> Gorpus(x)) & all y.(Dumpus(y) & all z.(Limpus(z)) -> Leep(z))))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lampus(x)))", "all x.(Rompus(x) -> (Gorpus(x) | Dumpus(x) | Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x y z.((Rompus(x) & Gorpus(y) & Dumpus(z)) -> (Bust(x,z) & Rumpus(y) & Lempus(z)))", "(all x.(Rompus(x) -> Gorpus(x)) & (Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_1033", "nl": "Fae is a lempus, Fae is a yumpus, and Fae is not a gorpus.", "fol": "(lempus(Fae) & yumpus(Fae) & -gorpus(Fae))", "prediction": ["(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Yumpus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "(all x.(Fae(x) -> Lippus(x)) & all y.(Fae(y) -> Yumpus(y)) & all z.(Fae(z) -> -Gerpus(z))))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & -Gorpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & -Gorpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & (Fae(x) -> -Gorpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Yumpus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Yumpus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "all x y z.((Fae(x) & Lempus(x) & Yumpus(y)) -> ((Fae(z) & -Gorpus(z))))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Yumpus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "(all x y z.((Fae(x) & Lempus(y) & Yampus(z)) -> Is(x,Y)) & ((Fae(x) & Gorpus(x)) -> -Is(x,z)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpsum(x)) & -Gorpus(x)))", "(all x.(Fae(x) -> Lempus(x)) | (Fae(x) -> Yumpus(x))) | (Fae(x) -> -Gorpus(x))))", "all x y z.((Fae(x) & Yampus(y) & Gorpus(z)) -> (Lempus(x) | Yampus(y) & -Rospel(z)))", "all x y z.((Fae(x) & Yompus(y) & Gorpus(z)) -> (Establishes(x,y) & Taches(y) & -Establises(x,z))))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & (Fae(x) -> -Gorpus(x)))", "(all x y z.((Fae(x) & Lempus(y)) -> (Lempus(x) & Yumpus(y)) & ((Fae(z) & Gorpus(z)) -> -Gorpus(z))))"]}
{"id": "prontoqa_train_1034", "nl": "Everything that is a wumpus, a brimpus, or a tumpus is a lorpus.", "fol": "all x. ((wumpus(x) | brimpus(x) | tumpus(x)) -> lorpus(x))", "prediction": ["all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> LarkShip(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tompus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Pose(x) & (Wumpus(x) | Brimpus(x) | Tumpus(x))) -> Lorpus(x))", "all x.(((Wumpus(x) | Brimpus(x) | Tumpus(x))) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Florus(x))"]}
{"id": "prontoqa_train_1035", "nl": "Rex is an impus, Rex is a lempus, and Rex is not a lorpus.", "fol": "(impus(Rex) & lempus(Rex) & -lorpus(Rex))", "prediction": ["(all x.(Rex(x) -> Impossible(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Lorpus(z))))", "all x y z.((Rex(x) & Impossible(x) & Lempus(y) & -Lorpus(z)) -> (Is(x,y) & Is(x,z)))", "all x y z.((Rex(x) & Impossible(x) & Lempus(y) & -Lorpus(z)) -> (Imployer(x) & Lempus(y) & -Lorpus(z)))", "all x.(Rex(x) -> (Impossible(x) | Lempus(x) | -Lorpus(x)))", "(all x y z.(Rex(x) -> Illegal(x)) & (Rex(y) -> Lempus(y))) & (Rex(z) -> -Lorpus(z)))", "all x y z.((Rex(x) & Lempus(y) & -Lorpus(z)) -> (Illegal(x) & Lempus(y) & -Lorpus(z)))", "(all x.(Rex(x) -> Impreza(x)) & (Rex(x) -> Lempus(x)) & -Lorpus(x)))", "(all x.(Rex(x) -> Illegal(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Lorpus(x))))", "(all x.(Rex(x) -> Isolator(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Lorpus(z))))", "all x y z.((Rex(x) & Imposit(y) & Lempus(z)) -> (Impossible(x) & Lempus(z) & -Lorpus(x)))", "(all x y z.(Rex(x) -> Issuel(x)) & (Rex(y) -> Lempus(y)) & (Rex(z) -> -Lorpus(z)))", "(all x y z.(Rex(x) -> Issue(x)) & (Rex(y) -> Lemur(y)) & (Rex(z) -> -Lorpus(z))))", "(all x.(Rex(x) -> Illegal(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Lorpus(x)))", "(all x.(Rex(x) -> Issue(x)) & all y.(Lempus(y) -> -Lorpus(y)))", "(all x.(Rex(x) -> Imperator(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Lorpus(z))))", "(all x.(Rex) -> Implementation(x)) & (Rex (Rex) -> Lempus(x)) & (Rex(Rex) -> -Lorpus(x))))"]}
{"id": "prontoqa_train_1036", "nl": "Wren is a brimpus and Wren is not a dumpus and Wren is a lempus.", "fol": "(brimpus(Wren) & -dumpus(Wren) & lempus(Wren))", "prediction": ["(all x y z.((Wren(x) & Brimpus(x) | Dumpus(y))) -> (Embryo(z) & Rembus(z))))", "(all x y z.((Wren(x) & Brimpus(x)) -> (Brimpus(y) | (Bumpus(z) & -Dumpus(z)))))", "all x.((Wren(x) & Brimpus(x)) -> (-Dumpus(x) & -Lempus(x)))", "(all x.(Wren(x) -> Brimpus(x)) & (-Dumps(x) & (Lempus(x) | Wren(x))))", "all x y.((Wren(x) & Brimpus(x)) -> (-Dumpus(x) & Lempus(y)))", "all x y z.((Wren(x) & Brimpus(x) & -Dumpus(y) & Lempus(z)) -> (Brian(x) & Wren(x) & Lempus(x)))", "all x y.((HasBrumpus(x) & HasDumpus(y)) -> (Birmpus(x) & -Dumpus(y) & HasLempus(y)))", "all x y.((Wren(x) & Brimpus(x) & -Dumpus(y)) -> Lempus(x))", "(all x.(Redneck(x) -> Brimpus(x)) & (Redneck(x) -> -Dumpus(x)) & (Redneck(x) -> Lempus(x)))", "(all x.(Wren(x) -> Brimpus(x)) & (-Taupus(x) & Lempus(x)))", "(all x y.((Wren(x) & Brimpus(x)) -> Bump(x)) & ((Wren(y) & -Dumpus(y)) -> Lempus(y)))", "(all x y.(Wren(x) -> Brimpus(x)) & ((Wren(y) & -Dumpus(y))) -> Lempus(y)))", "(all x.(Wren(x) -> Brimpus(x)) & (-Dupus(x) | Lempus(x))))", "(all x y z.(Wren(x) -> (Brumpus(x) & Bumpus(y))) & ((Wren(z) & -Dumpus(z)) -> Lempus(z)))", "all x y z.((Wren(x) & Brimpus(x) & Wren(y) & Dumpus(y)) -> (Understands(x,y) & IsFragnin(z) & IsLimpus(z)))", "(all x y.((Wren(x) & Brimpus(y)) -> (Brimpus(x) | Dumpus(y))) & ((Wren(x) & Lempus(x))) -> Lempus(x)))"]}
{"id": "prontoqa_train_1037", "nl": "Wren is a lorpus, Wren is not a jompus, or Wren is a brimpus.", "fol": "(lorpus(Wren) | -jompus(Wren) | brimpus(Wren))", "prediction": ["all x y.((Wren(x) & Loper(x)) | (-Jompus(y) | Brimpus(y))))", "(all x.(Wren(x) -> Lorpus(x)) | (-Jompus(x) | Brimpus(x))))", "(all x.(Wren(x) -> Larkus(x)) | (-Jompus(x) & (-Wren(x) | Brimpus(x)))))", "(all x y z.((Wren(x) & Loper(y)) -> (Lorpus(x) & -Jampus(y)) | (Brumpus(z) & -Human(z))))", "(all x.(Wren(x) -> Lorpus(x)) & (-Jumpus(x) | Brimpus(x))))", "(all x y z.((Wren(x) & Lorpus(y)) | (-Jempus(z) | Brimpus(z)))) -> (Lorpus(x) | -Jompus(z) | -Jompus(z)))", "(all x y.(Wren(x) -> Lorpus(x)) | (-Jompus(y) | Brimpus(y))))", "all x y z.((Wren(x) & Lorpus(y) & (Jimpus(z) | Brimpus(z))) -> (Lorpus(x) | -Jimpus(x) | [Wren(x) & Brimpus(x))))", "(all x.(Wren(x) -> Horpus(x)) & (Wren(x) -> -Jompus(x)) | (Wren(x) -> Brimpus(x))))", "all x y.((Wren(x) & Loper(x) & -Jompus(y)) | (Brimpus(x))))", "(exists x.(Wren(x) & LivesIn(x,lorpus)) | exists y.(Wren(y) & -LivesIn(y,jompus)) | exists z.(Wren(z) & LivesIn(z,brimpus))))", "(all x.(Wren(x) -> Lorpus(x)) & (-Jompus(x) | Brimpus(x))))", "(all x.(Wren(x) -> Lorpus(x)) | (-Wren(x) & Jompus(x)) | (-Wren(x) & Brimpus(x))))", "all x.((Wren(x) & Lorpus(x)) | (-Jompus(x)) | (-Jompus(x) & Brimpus(x))))", "all x y.((Wren(x) & Loper(x)) -> (-Jompus(y) | Brimpus(x)))", "all x y z.(Lady(x) & Wren(y) & (((Jompus(z) | Brimpus(z))) -> (Lorpus(y) | -Jompus(y) | -Jompus(z))))"]}
{"id": "prontoqa_train_1038", "nl": "Everything that is an impus and a dumpus and a lorpus is a rompus and a numpus and a jompus.", "fol": "all x. ((impus(x) & dumpus(x) & lorpus(x)) -> (rompus(x) & numpus(x) & jompus(x)))", "prediction": ["all x.((Imposse(x) | Dumpus(x) | Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((IsNotIs(x) & IsDumpus(x) & IsLorpus(x)) -> (Rompus(x) | Numpus(x) | Jompus(x)))", "all x.((Impune(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Issue(x) & IsDumpus(x) & IsLorpus(x)) -> (Rompus(x) | Numpus(x) | Jompus(x)))", "all x y.((Impossible(x) & Dumpus(x) & Lorpus(y)) -> ((Rompus(x) & Numpus(x) & Jompus(x))))", "all x.((Impossible(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Immuclear(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Impaque(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Impossible(x) & Dumpus(x) & Loomis(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x y.((Imposs(x) & Dumpus(x) & Lorpus(y)) -> (Rompus(x) & Nimbus(x) & Jompus(x)))", "all x.((Imply(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Issue(x) & IsDumpus(x) & IsLorpus(x)) -> (Prompus(x) & Numpus(x) & Jompus(x)))", "all x y z.((Issue(x) & Dumpus(y) & Lorpus(z) & Implique(x) & Dumpus(y) & Lorpus(z)) -> (Rompus(y) & Numpus(y) & Jompus(y)))", "all x.((Impossible(x) | Dumpus(x) | Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Impossible(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Joompus(x)))", "all x.((Imposer(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))"]}
{"id": "prontoqa_train_1039", "nl": "Rex is an impus.", "fol": "impus(Rex)", "prediction": ["All x.(Rex(x) -> IsImpossible(x))", "all x.(Rex(x) -> Impossible(x))", "IsRex(x)", "all x.(Rex(x) -> Illegal(x))", "exists x.(Rex(x) & Impeccable(x))", "all x.(Rex(x) -> Imperator(x))", "Rex is illegible.", "Exists x.(Rex(x) & Is(x))", "all x.(Rex(x) -> Implement.", "all x.(Rex(x) -> Impossible(x))", "all x.(Rex(x) -> IsExecutive(x))", "All x.(Rex(x) -> Is(x))", "Rex is a impusct.", "(IsRegerated(Rex) & IsImpozite(Rex))", "Rex is a impus.", "all x.(Rex(x) -> Implicator(x))"]}
{"id": "prontoqa_train_1040", "nl": "Rex is a dumpus.", "fol": "dumpus(Rex)", "prediction": ["Rex is a Dumpus(x)", "Das Dumpus(Rex)", "Rex is a dumpus.", "Rex.(Dumpus)", "Rex is a Dumpus(x)", "Rex is a Dumpus(x)", "-Dumus(x)", "exists x.(Rex(x) & Dumpus(x))", "all x.(Rex(x) -> Dumpus(x))", "Rex is a Dumpus.", "Rex.(Dumpsus(re) & LivesIn(re))", "Rex is a Dumpus(x)", "Rex is a Dumpus.", "all x.(Rex(x) -> Dumpus(x))", "Rex.", "(Dumus(Rex))"]}
{"id": "prontoqa_train_1041", "nl": "Rex is a lorpus.", "fol": "lorpus(Rex)", "prediction": ["All x.(Rex(x) -> Lorpus(x))", "(Lorpus(Rex) & Likes(rex,lorpus))", "(Lorpus(Rex) & FeltBy(Rex))", "All x.(Rex(x) -> Lorpus(x))", "Rex is a lorpus.", "Rex is lorpus.", "is a lorpus & HasLadder(Rex)", "Rex is a lorpus.", "Rex (lorpus)", "Rex is a lorpus.", "Rex is a lorpus.", "Rex (Lorpus)", "Rex is a Lorpus.", "Rex is a lorpus.", "all x.(Rex(x) -> Lordpus(x))", "all x.(Rex(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_1042", "nl": "Rex is a numpus.", "fol": "numpus(Rex)", "prediction": ["Rex is Numpus(x)", "(Numpus(Rex))", "all x.(Rex(x) -> Numpus(x))", "Rex is Numpus(x)", "All x.(Rex(x) -> Numpus(x))", "Rex.", "all x.(Rex(x) -> Numpus(x))", "all x.(Numpus(x) -> Rex(x))", "(Numpus(Rex))", "(Nobulosity(Rex) | Numerous(Rex))", "all x.(Rex(x) -> Number(x))", "Rex is Numpus(x) -> Awakening(x))", "all x.(Rex(x) -> Numpus(x))", "Rex is Numpus(x)", "All x.(Rex(x) -> Numpus(x))", "all x.(Rex(x) -> Numpus(x))"]}
{"id": "prontoqa_train_1043", "nl": "Everything that is a zumpus, a dumpus, and a tumpus is a jompus and a yumpus and a gorpus.", "fol": "all x. ((zumpus(x) & dumpus(x) & tumpus(x)) -> (jompus(x) & yumpus(x) & gorpus(x)))", "prediction": ["all x.((Rumpus(x) & Dumpus(x) & Tumpus(x)) -> (Joompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) & Dumpus(x) & Tumpus(x)) -> (Jompus(x) & Yampus(x) & Gorpus(x)))", "all x.((Tompus(x) & Dubus(x) & Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Atompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Owl(x) & Jompus(x) & Jompus(x) & Yompus(x) & Orphus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yampus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Colors(x,jompus) & ColoursOf(x,yumpus) & ColoursOf(x,gorpus)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yampus(x) & Gorpus(x)))", "all x.((Zumpus(x) & Dumpus(x) & Tumpus(x)) -> (Jimpus(x) | Yampus(x) | Gorpus(x)))", "all x.((Tompus(x) & Dumpus(x) & Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yompus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.(All y.((Tompus(x) & Dumpus(y) & Tompus(x)) -> (SeemsTompus(x) & SeemsTompus(y)))", "all x.((Zumpus(x) | Dumpus(x) | Tumpus(x)) -> (Hompus(x) | Yumpus(x) | Gorpus(x)))", "all x.((Hompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1044", "nl": "Wren is a zumpus.", "fol": "zumpus(Wren)", "prediction": ["is a Zumpus(Wren)", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "(Stern(wren) & Zumpus(w))", "(Zimpus(Wren))", "all x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_1045", "nl": "Wren is a yumpus.", "fol": "yumpus(Wren)", "prediction": ["(Yumpus(Wren)", "The Wren is yumpus.", "all x.(Wren(x) -> Yumpus(x))", "ALL x.(Wren(x) -> Yampus(x))", "all x.(Wren(x) -> Yumpus(x))", "all x.(Wren(x) -> Yumpus(x))", "All x.(Wren(x) -> Yuga(x))", "all x.(Wren(x) -> Yumpus(x))", "exists x.(Wren(x) & Yumpa(x))", "all x.(Wren(x) -> Yampus(x))", "all x.(Wren(x) -> Yumpus(x))", "all x.(Wren(x) -> Yampus(x))", "Yumpus(wren)", "isYumpus(Wren)", "isyumpus(Wren)", "all x.(Wren(x) -> Yumpus(x))"]}
{"id": "prontoqa_train_1046", "nl": "Everything that is a jompus and a tumpus and a dumpus is a lempus, an impus, and a wumpus.", "fol": "all x. ((jompus(x) & tumpus(x) & dumpus(x)) -> (lempus(x) & impus(x) & wumpus(x)))", "prediction": ["all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Impossible(x) & Wurmpus(x)))", "exists x.(Jompus(x) & Humpus(x) & Dumpus(x)) -> (Lempus(x) & Issue(x) & Windus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Impossible(x) & Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Imperempt(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Imperator(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Impera(x) | Wumpus(x)))", "all x.((Jampus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Imitator(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | impus(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Imperator(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Impeccable(x) & Wumpus(x)))", "all x.((Jompus(x) | Tumpus(x) | Dumpus(x)) -> (Lempus(x) | Imperative(x) | Wumpus(x)))", "all x.((Jempus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Impossible(x) & Wumpus(x)))", "all x.((Jompus(x) & Humpus(x) & Dumpus(x)) -> (Limpus(x) & Impossible(x) & Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Issu\u00e9(x) & Wumpus(x)))", "all x.((Jompus(x) & Totumpus(x) & Dumpus(x)) -> (Lempus(x) & Impermiss(x) & Wumpus(x)))", "all x.((Jampus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Impossible(x) & Wumpus(x)))"]}
{"id": "prontoqa_train_1047", "nl": "Alex is a jompus.", "fol": "jompus(Alex)", "prediction": ["all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "Alex is a jompus.", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "all x.(Jammu(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "(Jimpus(Alex) | Snowy(Alex))", "all x.(I'mJompus(x) -> Alex(x))", "all x.(Alex(x) -> Jompus(x))"]}
{"id": "prontoqa_train_1048", "nl": "Alex is a lempus.", "fol": "lempus(Alex)", "prediction": ["all x.(Alex(x) -> Lempus(x))", "Alex is a lempus.", "all x.(Alex(x) -> Lempus(x))", "Alex ist ein Lempus.", "all x.(Alex(x) -> Lempus(x))", "all x.(Alex(x) -> Lempus(x))", "all x.(Alex(x) -> Lempus(x))", "all x.(Alexa(x) -> Lempus(x))", "all x.(Alex(x) -> Lempus(x))", "all x.(Alex(x) -> Lempus(x))", "all x.(Alex(x) -> Lempus(x))", "Alex is Lempus.", "all x.(Alex(x) -> Lempus(x))", "(Lempus(Alex))", "Alex is Lempus(Alex)", "Alex is Lempus."]}
{"id": "prontoqa_train_1049", "nl": "Everything that is a brimpus or a tumpus or an impus is a vumpus and a yumpus and a dumpus.", "fol": "all x. ((brimpus(x) | tumpus(x) | impus(x)) -> (vumpus(x) & yumpus(x) & dumpus(x)))", "prediction": ["all x.((Brumpus(x) | Tumpus(x) | Impermissible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Impressionist(x)) -> (Vumpus(x) & Yumpa(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Impermissible(x)) -> VuzempusYumpusDumpus(x))", "all x.((Brompus(x) | Tumpus(x) | Imperva(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x y.((Brimpus(x) | Tumpus(x) | Imperative(x)) -> (Vumpus(y) & Yumpus(y) & Dumpus(y)))", "all x.((Brimpus(x) | Tumulus(x) | Impossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Impossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Tall(x) & (Brimpus(x) | Tumpus(x) | Imperator(x))) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Impossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Impossible(x)) -> (Ummus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brumpus(x) | Tumpus(x) | IsImpossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brompus(x) | Tumpus(x) | Imperator(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Impervas(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brumpus(x) | Tumpus(x) | IsImplementation(x)) -> (Vumpus(x) & Yuumpus(x) & Dumpus(x)))", "all x y.((Brumpus(x) | Tumpus(x) | Impossible(x)) -> (Vumpus(x) & Yumpus(y) & Dumpus(y)))", "all x.((Brimpus(x) | Tumpus(x) | Illusory(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1050", "nl": "Polly is an impus and Polly is not a numpus and Polly is a yumpus.", "fol": "(impus(Polly) & -numpus(Polly) & yumpus(Polly))", "prediction": ["all x y z.((Polly(x) & Impossible(x) & Polly(y)) -> (-Number(y) & Yang(z)))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Nimpus(x)) & (Polly(x) -> Yumbos)))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Issue(x) -> PollyPolly)) & all y.(Issue(y) -> PollyPolly)) & all z.(Issue(z) -> -IsNumpus(z)) & all w.(Issue(w) -> Yumpus(w))))", "(all x.(Polly(x) -> Issue(x)) & (Polly(x) -> -Isnumpus(x)) & (Polly(x) -> Yumpa(x)))", "(all x y.((Poly(x) & Imperium(x)) -> Polly(x)) & ((Poly(y) & -Numpus(y)) -> Yumpus(y))))", "all x y z.((Polly(x) & Polly(y) & Is(x,y)) ->-(Implicator(x) | Numpus(y) & Yumpus(y))))", "(all x.(Polly(x) -> Is(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpsum(x))))", "all x y.((Poly(x) & IsRestrict(x) & Polly(y)) -> ((NotNumpus(y) & -Rumpus(y)) | ((Yumpus(y) & (-Numpus(y)) | (-Numpus(y) | Numpus(y))))))", "(all x y z.(Polly(x) -> Impossible(x)) | (Polly(y) -> -numpus(y)) | (Poly(z) -> Yukpus(z))))", "all x y z.((Polly(x) & Impossible(x) & Polly(y) & -Nompus(y)) -> Yumpus(z))", "(all x y.((Polly(x) & Impossible(x)) -> Nompus(y)) & ((Polly(x) & -Numpus(y)) -> Yumpus(x)))", "all x y z.((Polly(x) & (Impossible(x) | Nompus(x,z)) & Yumpus(y)) -> Polly(x))", "all x y z.((Polly(x) & Impose(x) & Polly(y) & Yampus(z)) -> (-Cmower(y,n) & Nompus(y)))", "all x y z.((Polly(x) & Impossible(x) & Polly(y)) -> (-Numpus(y) & Yumpus(z)))", "(all x.(Polly(x) -> Is(x,Imperial)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yunus(x))))"]}
{"id": "prontoqa_train_1051", "nl": "Polly is a jompus or Polly is a rompus or Polly is not a dumpus.", "fol": "(jompus(Polly) | rompus(Polly) | -dumpus(Polly))", "prediction": ["((Polly(Polly) & Jompus(Polly)) | (Poly(Poly) & Rompus(Poly)) | (Poly(Poly) & -Dumpus(Poly))))", "all x.(Polly(x) -> ((Jimpus(x) | Rompus(x)) | -Dumpus(x)))", "all x.((Poly(x) & (Jimpus(x) | Rompus(x) | -Dumpus(x))) -> Polly(x))", "all x.((Polly(x) & Jompus(x)) | (Polly(x) & Rompus(x)) | (Polly(x) & -Dumpus(x))))", "all x.(Polly(x) -> ((Jompus(x) | Rompus(x)) | -Dumpus(x)))", "(exists x.(Polly(x) & (Jimpus(x) | Rompus(x) | -Dumpus(x))))", "exists x.(Poly(x) & (((Jompus(x) | Rompus(x)) | -Dumpus(x))))", "((Poly(poly) | Rompus(poly))) | (Poly(poly) & -Dumpus(poly))))", "(all x.(Poly(x) -> Jompus(x)) | (Poly(x) -> Rompus(x)) | (Poly(x) -> -Dumpus(x))))", "((Polly(Polly) | Polly(Polly))) | (Poly(Polly) -> Jupus(Polly)) | (Poly(Polly) -> Rompus(Poly))) | (Poly(Poly) -> -Dumpus(Polly)))", "(all x.(Poly(x) -> (Jompus(x) | Rompus(x) | -Dumpus(x))))", "(all x.(Polly(x) -> (Jompus(x) | Rompus(x) | -Dumpus(x)))", "((Poly(Polly) & Jompus(Polly)) | (Polly(Polly) & Rompus(Polly)) | (Polly(Polly) & -Dumpus(Polly))))", "all x.((Polly(x) & (Jompus(x) | Rompus(x) | -Dumpus(x))) -> PollyAndDonald(x))", "all x y.((Polly(x) & Jompus(x) | Rompus(x) | -Dumpus(y))) -> Polly(x,y))", "((Polly(Poly) & Jompus(Poly)) | (Poly(Poly) & Rompus(Poly)) | (Poly(Poly) & -Dumpus(Poly))))"]}
{"id": "prontoqa_train_1052", "nl": "Sam is not an impus, Sam is a brimpus, and Sam is a shumpus.", "fol": "(-impus(Sam) & brimpus(Sam) & shumpus(Sam))", "prediction": ["all x y z.((Sam(x) & Bumpus(y) & Shumpus(z)) -> (-Impossible(x) & Brimpus(y) & Shumpus(z)))", "(all x y z.((Sam(x) & impus(y)) -> -Before(x,y)) & ((Sam(z) & Brimpus(z)) -> (Sam(z) & Humpus(z))))", "(all x.(Sam(x) -> -Issue(x)) & all y.(Sam(y) -> (Brimpus(y) | Humpus(y))))", "(all x.(Sam(x) -> -Impossible(x)) & all y.(Brimpus(y) -> Shumpus(y)))", "(all x.(Sam(x) -> -Impossible(x)) & (Brimpus(x) | Humpus(x))))", "(all x.(Sam(x) -> -Implementation(x)) & all y.(Brimpus(y) -> Brimpus(y)) & all z.(Shumpus(z) -> Serumpus(z))))", "all x y z.((Sam(x) & Brimpus(y) & Humpus(z)) -> (-Impossiv(x) & Brimpus(y) & Shumpus(z)))", "all x.(Sam(x) & (-Impossible(x) | Brimpus(x) | Humpus(x)))", "all x y z.((Sam(x) & IsNotImprovisable(x) | (Brompus(y) & Humpus(z))))", "(all x.(Sam(x) -> -Impossible(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> Humpus(x)))", "all x.((Sam(x) & -Immis(x)) -> (Brimpus(x) & Humpus(x)))", "(all x.(Sam(x) -> NotImpossible(x)) & all y.(Sam(y) -> Brimpus(y)) & all z.(Sam(z) -> Humpus(z))))", "(all x.(Sam(x) -> -Impossible(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> Humpus(x))))", "(all x.(Sam(x) -> -Impossible(x)) & all y.(Brimpus(y) -> Brimpus(y)) & all z.(Shumpus(z) -> Husmu)))", "all x y z.((Sam(x) & Brimpus(y) & Humpus(z)) -> (-Issue(x) & BelongsTo(x,y) & BelongsTo(x,z)))", "(all x.(Sam(x) -> (-Idemis(x))) & (Sam(x) -> (Brimpus(x) & Salmon(x))))"]}
{"id": "prontoqa_train_1053", "nl": "Sam is not a tumpus or Sam is a wumpus or Sam is a grimpus.", "fol": "(-tumpus(Sam) | wumpus(Sam) | grimpus(Sam))", "prediction": ["all x.((Sam(x) & -Tumpus(x)) | (Sam(x) & Wumpus(x)) | Sam(x) & Grimpus(x)))", "((Sam(sam) & -Tumpus(s)) | (Sam(sam) & Wumpus(s)) | (Sam(sam)) & Grumpus(sam)))", "all x y.((Sam(x) & -Tumpus(x)) | (Wumpus(y) | Grimpus(y))))", "all x.((Sam(x) & -Tumpus(x)) | (Wumpus(x) | Grimpus(x))))", "exists x.(Sam(x) & (-Tumpus(x) | (-Wumpus(x) | Grimpus(x)))))", "all x.((Sam(x) & -Tumpus(x)) | (Wumpus(x) | Grimpus(x))))", "all x.(Sam(x) | (-Tumpus(x) | Wumpus(x) | Grimpus(x))))", "all x.((Sam(x) & -Tumpus(x)) | (Sam(x) & Wumpus(x)) | (Sam(x) & Grimpus(x))))", "((Sam(sam) & -Tumpus(sam)) | (Sam(sam) & Wumpus(sam)) | (Sam(sam) & Grimpus(sam))))", "all x.((Sam(x) & -Tumpus(x)) | (Wumpus(x) | Grimpus(x))))", "(all x.(Sam(x) -> -Tumpus(x)) | (Sam(x) -> Wumpus(x)) | (Sam(x) -> Grimpus(x))))", "(all x.(Tumpus(x) | Wumpus(x)) | Grimpus(x)))", "all x.(Sam(x) -> (-Tumpus(x) | (Wumpus(x) | Grimpus(x)))))", "(noTumpus(Sam) ou -(Wumpus(Sam) | Grimpus(Sam))) -> -(Wumpus(Sam)))", "all x.((Sam(x) & -Tumpus(x)) | (Wumpus(x) | Grimpus(x))))", "(NoTumpus(Sam) | Wumpus(Sam) | Grimpus(Sam)))"]}
{"id": "prontoqa_train_1054", "nl": "Everything that is a lorpus, a jompus, or a yumpus is a zumpus.", "fol": "all x. ((lorpus(x) | jompus(x) | yumpus(x)) -> zumpus(x))", "prediction": ["all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.(((Lorpus(x) | Jompus(x) | Yumpus(x))) -> Zumpus(x))", "all x.((Llorpus(x) | Joompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Hollow(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((lorpus(x) | jompus(x) | yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))"]}
{"id": "prontoqa_train_1055", "nl": "Sally is a dumpus and a yumpus and a grimpus.", "fol": "(dumpus(Sally) & yumpus(Sally) & grimpus(Sally))", "prediction": ["all x.(Sally(x) -> (Dumpus(x) & Yumpus(x) & Grimpus(x)))", "all x.(Sally(x) -> (Dumpus(x) & Yumpus(x) & Grimpus(x)))", "Alles x.(Sally(x) -> (Dumpus(x) & Yumpus(x) & Grempus(x)))", "all x.(Sally(x) -> (Dupus(x) & Yumpus(x) & Grimpus(x)))", "all x.(Sally(x) -> (Dumpus(x) & Yampus(x) & Grimpus(x)))", "is a dumpus and yumpus and grimpus.", "(Dumpus(Sally) | Yumpus(Sally) | Grimpus(Sally)))", "Sally (Sally,Dumpus) & Yampus(s) & Grimpus(s))", "(all x.(Sally(x) -> Dumpus(x)) & (Yumpus(x) & Grimpus(x))))", "All x.(Sally(x) -> (Dums(x) & Yampus(x) & Grimpus(x)))", "all x.(Sally(x) -> (Dumps(x) & Yampus(x) & Grimpus(x)))", "all x.(Sally(x) -> (Dumpus(x) & Yempus(x) & Grimpus(x)))", "(Dumpus(Sally) | Yampus(Sally) | Grimpus(Sally)))", "all x y.((Sally(x) & Dumpus(y)) -> (Yumpus(x) & Grimpus(y)))", "(Dumps(Sall) & Yampus(Sally) & Grimpus(Sally))", "all x.(Sally(x) -> (Dumpus(x) & Yumpus(x) & Grimpus(x)))"]}
{"id": "prontoqa_train_1056", "nl": "Sally is a zumpus.", "fol": "zumpus(Sally)", "prediction": ["Sally is a zumpus.", "Sally is zumpus.", "all x.(Sally(x) -> Zumpus(x))", "Sally is zumpus(Sally)", "Sally is Zumpus.", "Sally is a zumpus.", "all x.(Sally(x) -> Zumpus(x))", "Sally is zumpus.", "All x.(Sally(x) -> Zumpus(x))", "Sally is zumpus.", "Sally is zumpus.", "Sally is a Zumpus.", "Sally is Zumpus(Sally)", "Sally is zumpus.", "Sally is Zumpus.", "Sally is zumpus(s)"]}
{"id": "prontoqa_train_1057", "nl": "Alex is a lempus and a yumpus and a lorpus.", "fol": "(lempus(Alex) & yumpus(Alex) & lorpus(Alex))", "prediction": ["all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "all x.(Alex(x) -> (Lempus(x) & Yumpa(x) & Lorosia(x)))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "all x y.((Alex(x) & Lempus(x) & Yumpus(y) & Lorpus(x)) -> (Army(x) & Yampus(y) & Owl(x)))", "exists x.(Alex(x) & Lempus(x) & Yumpus(x) & Lorpus(x))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "all x y.((Alex(x) & Lempus(y) & Yunus(y)) -> Lopus(x))", "all x.(Alex(x) -> (Lempus(x) & Yumpian(x) & Moose(x) & Lorpus(x)))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "all x y.((Alex(x) & Lempus(x) & Yumpus(y) & Lorpus(x)) -> Is(x,y))", "all x y z.((Alex(x) & Plumus(y) & Yumpus(z)) -> (Lempus(x) & Ryupus(y) & Lorpus(z)))", "all x y.([Alex(x) & Lempus(x) & Yumpus(y) & Lordpus(z)) -> Are(x,y,z))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Loupus(x)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Yumpus(y) & all z.(Lorpus(z))) -> (Lorpus(z) & -Lempus(y))))"]}
{"id": "prontoqa_train_1058", "nl": "Alex is a yumpus, a numpus, or an impus.", "fol": "(yumpus(Alex) | numpus(Alex) | impus(Alex))", "prediction": ["all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impossible(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impossible(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperium(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperator(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Issue(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperator(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperator(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Assert(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperemptor(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Issue(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperator(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impermissible(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperator(x)))", "(yumpus(Alex) | numpus(Alex) | impus(Alex)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperator(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperempt(x)))"]}
{"id": "prontoqa_train_1059", "nl": "Everything that is a lorpus, a grimpus, or a yumpus is a lempus and a rompus and a wumpus.", "fol": "all x. ((lorpus(x) | grimpus(x) | yumpus(x)) -> (lempus(x) & rompus(x) & wumpus(x)))", "prediction": ["all x.((Lorpus(x) | Grimpus(x) | Yompus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((OrLorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> ((Limes(x) | Romes(x) | Wumpus(x))))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Yumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Limpus(x) & Rompus(x) & Wumpus(x)))", "all x.(LorpusScrupulumOrYumpus(x) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yompus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))"]}
{"id": "prontoqa_train_1060", "nl": "Polly is a grimpus.", "fol": "grimpus(Polly)", "prediction": ["all x.(Polly(x) -> Grumpus(x))", "Polly is a Grimpus.", "(Grimpus(Polly))", "all x.(Polly(x) -> Grimpus(x))", "all x.(Polly(x) -> Grimpus(x))", "Polly is a Grimpus.", "(Groppus(Polly))", "all x.(Polly(x) -> Grimpus(x))", "exists x.(Polly(x) & Grimpus(x))", "Polly is a Grimpus.", "all x.(Polly(x) -> Grimpus(x))", "all x.(Polly(x) -> Grimpus(x))", "all x.(Polly(x) -> Grimpus(x))", "Polly is a Grimpus.", "Polly is a Grimpus.", "(Grimpus(Polly))"]}
{"id": "prontoqa_train_1061", "nl": "Dumpuses are lorpuses.", "fol": "all x. (dumpus(x) -> lorpus(x))", "prediction": ["all x.(Dumpuse(x) -> Lorpuse(x))", "all x.(Dumpuse(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpuse(x) -> Lorpus(x))", "all x.(Dumpuse(x) -> Lorpus(x))", "all x.(Dumpuse(x) -> Lompus(x))", "all x.(Dumpuse(x) -> Lorpuse(x))", "all x.(Dupus(x) -> Loxus(x))", "all x.(Dumpuse(x) -> Loomuse(x))", "all x.(Dumpuse(x) -> Lorpuse(x))", "all x.(Dumpus(x) -> Lorpuse(x))", "all x.(Dumpus(x) -> Liepre(x))", "all x.(Dumpuse(x) -> Lorpus(x))", "all x.(Dumpuse(x) -> Lorpus(x))", "all x.(Dumpuse(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpuse(x))"]}
{"id": "prontoqa_train_1062", "nl": "Rex is a shumpus and a vumpus and a dumpus.", "fol": "(shumpus(Rex) & vumpus(Rex) & dumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Humpus(x)) & (Vimpus(x) -> Dumpus(x)))", "(all x.((Rex) & Humpus(x)) | (Vumpus(x) & Dumpus(x))))", "(all x y z.((Rex(x) & Shumpus(y)) -> (Shumpus(x) & Vumpus(z)) & Dumpus(x)))", "(all x.(Rex) -> Humpus(x)) & all y.(Vumpus(y) -> Dumpus(y)))", "-(Shumpus(Rex) & Vumpus(Rex) & Dumpus(Rex))", "(Shumpus(rex) & Vulpes(rex) & Dumpus(rex))", "all x.(Rex(x) -> (Shumpus(x) & Vumpus(x) & Dumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & (Vumpus(x) | Dumpus(x))))", "(rex(rex) & Humpus(rex) & Versus(rex) & Dumpus(rex))", "(all x.(Rex(x) -> Humpus(x)) & exists y.(Vampus(y) & Man(y))))", "all x.(Rex(x) -> (Shumpus(x) | Vumpus(x) | Dumpus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (Vumpus(x) & Dumpus(x)))", "(all x.(Rex(x) -> Samphuse(x)) & all y.(Shumpus(y) -> Vulmpus(y)) & all z.(Dumpus(z) -> Dumpus(z))))", "all x.(Rex(x) -> (Shumpus(x) | Vumpus(x) | Dumpus(x)))", "all x.(Rex(x) -> (Shumpus(x) & Vampus(x) & Dumpus(x)))", "all x y z.((Rex(x) & Shumpus(y) & Vampus(z)) -> (Shumpus(x) & Vampus(z) & Dumpus(z)))"]}
{"id": "prontoqa_train_1063", "nl": "Rex is a yumpus, a tumpus, or a lorpus.", "fol": "(yumpus(Rex) | tumpus(Rex) | lorpus(Rex))", "prediction": ["all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lordpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumulus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rx(x) -> (yumpus(x) | tumpus(x) | lorpus(x)))"]}
{"id": "prontoqa_train_1064", "nl": "Everything that is a wumpus or a grimpus or a brimpus is a vumpus, an impus, and a sterpus.", "fol": "all x. ((wumpus(x) | grimpus(x) | brimpus(x)) -> (vumpus(x) & impus(x) & sterpus(x)))", "prediction": ["all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Imperative(x) & Sterpus(x)))", "all x.((Humpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) -- Issuel(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impossible(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Issue(x) & Sterepus(x)))", "all x.(((Wumpus(x) | Grimpus(x) | Brimpus(x))) -> (Vumpus(x) & Einstich(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impossivus(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impossible(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impossible(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Issues(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Imposs(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Imperator(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Ummpus(x) & Impossible(x) & Sterepus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Issues(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impossible(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Izrder(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) | Imperator(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1065", "nl": "Rex is a wumpus.", "fol": "wumpus(Rex)", "prediction": ["all x.(Mocktail(x) -> Wumpus(x))", "Rex,Wumpus(x)", "all x.(Rex(x) -> Hush(x))", "Rex,Wumpus(x)", "(Wumpus(rex) & -Wumpus(rex))", "Rex.(Wumpus(x) -> HasWump(x))", "(Wumpus(Rex)", "Rex is a wumpus.", "(Wumpus(Rex) & Adult(Rex))", "Rex is a wumpus.", "all x.(Rex(x) -> Wumpus(x))", "all x.(Wumpus(x) -> Rex(x))", "(Wumpus(Rex) & Hatches(Rex))", "Rex is a Wumpus(x)", "all x.(Rex(x) -> Wumpus(x))", "Rex is a wumpus."]}
{"id": "prontoqa_train_1066", "nl": "Rex is a vumpus.", "fol": "vumpus(Rex)", "prediction": ["Rex is a Vampus.", "all x.(Rex(x) -> Vampus(x))", "(Vimpus(Rex)", "(Vumpus(Rex) & InDepth(Rex))", "all x.(Vumpus(x) -> Rex(x))", "all x y.((Rex(x) & Vulmpus(y)) -> Is(x,y))", "(Vumpus(Rex) | Vimpus(Rex))", "R\u00e9x.", "Rex is Vumpus.", "exists x.(Rex(x) & Vumpus(x))", "All x.(Rex(x) -> Vamps(x))", "Rex is the vumpus.", "Rex,Vumpus(x)", "Rex.(Vumulus)", "Rex is a Vulmpus.", "Rex is a Vumpus."]}
{"id": "prontoqa_train_1067", "nl": "Grimpuses are yumpuses, rompuses, and lorpuses.", "fol": "all x. (grimpus(x) -> (yumpus(x) & rompus(x) & lorpus(x)))", "prediction": ["all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpuse(x) -> (Yumpus(x) | Rompus(x) | Lopus(x)))", "(yumpuse(x) | rompuse(x) | lorpuse(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpus(x) -> (Yumpus(x) & Rompus(x) & Lorpus(x)))", "all x.(Grimpus(x) -> (Yumpuses(x) | Rompuses(x) | Lorpuses(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpuse(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Ladypus(x)))", "(all x.(Grimpus(x) -> Yumpus(x)) & all y.(Rompus(y) -> Lorpus(y)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lopus(x)))"]}
{"id": "prontoqa_train_1068", "nl": "Numpuses are not yumpuses.", "fol": "all x. (numpus(x) -> -yumpus(x))", "prediction": ["all x.(Numpus(x) -> -Yumpus(y))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpuse(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpuse(x) -> -Yumpus(x))", "all x.(Numpuse(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "ALL x.(Numpuse(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))"]}
{"id": "prontoqa_train_1069", "nl": "Alex is a numpus and a rompus and a sterpus.", "fol": "(numpus(Alex) & rompus(Alex) & sterpus(Alex))", "prediction": ["all x.(Alex(x) -> (Numpus(x) | Rompus(x) | Straterpus(x)))", "all x.(Alex(x) -> (numpus(x) & rompus(x) & sterpus(x)))", "all x.(Alex(x) -> (Nompus(x) & Rompus(x) & Sterpus(x)))", "all x y.((Alex(x) & Nompus(x) & Rompus(y) & Sterpus(x)) -> Is(x,y))", "all x.(Alex(x) -> (numpus(x) & rompus(x) & sterpus(x)))", "(numpus(Alex) | Rompus(Alex) | Sterpus(Alex))", "all x.(Alex(x) -> (numpus(x) & rompus(x) & sterpus(x)))", "all x.(Alex(x) -> (numpus(x) & rompus(x) & sterpus(x)))", "all x.(Alex(x) -> (Numerus(x) & Rompus(x) & Sterpus(x)))", "(Nompus(Alex) | Rompus(Alex) | Sterpus(Alex))", "all x.(Alex(x) -> (Numpus(x) & Rompus(x) & Sterpus(x)))", "all x.(Alex(x) -> (Menu(x) | Nompus(x) | Rompus(x) | Sterpus(x)))", "all x.(Alex(x) -> (numpus(x) & rompus(x) & sterpus(x)))", "all x.(Alex(x) -> (numpus(x) & Rompus(x) & Sterpus(x)))", "(all x.(Alex(x) -> Numpus(x)) & (Rompus(x) | Steroscary(x))))", "all x y.((Alex(x) & Numerus(x)) -> (Rompus(y) & Sterpus(z)))"]}
{"id": "prontoqa_train_1070", "nl": "Everything that is a dumpus or a wumpus or a numpus is a jompus, a tumpus, and a zumpus.", "fol": "all x. ((dumpus(x) | wumpus(x) | numpus(x)) -> (jompus(x) & tumpus(x) & zumpus(x)))", "prediction": ["all x.((Excellent(x) & (Dumpus(x) | Wumpus(x) | Numpus(x))) -> (Jimpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jimpus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jimpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jumpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dupus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpsus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumus(x) | Wumpus(x) | Numpus(x)) -> (Jombus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jimpus(x) | Tumpus(x) | Zumpus(x)))", "all x y.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(y) & Tobpus(y)))", "all x.((Pumpus(x) | Wumpus(x) | Numpus(x)) -> (Hompus(x) & Tompus(x) & Zumpus(x)))"]}
{"id": "prontoqa_train_1071", "nl": "Alex is a zumpus.", "fol": "zumpus(Alex)", "prediction": ["Alex is zumpus.", "Alex is Zumpus(Alex)", "all x.(Alex(x) -> Zumpus(x))", "all x.(Alex(x) -> Zumpus(x))", "all x.(Alex(x) -> Zumpus(x))", "all x.(Alex(x) -> Zumpus(x))", "Alex is a zumpus(Alex)", "Alex is a Zumpus.", "All x.(Alex(x) -> Zumpus(x))", "Alex is a zumpus.", "all x.(Alex(x) -> Zumpus(x))", "Alex is a zumpus.", "all x.(Alex(x) -> Zumpus(x))", "all x.(Alex(x) -> Zumpus(x))", "all x.(Alex(x) -> Zumpus(x))", "Alex is Zumpus(Alex)"]}
{"id": "prontoqa_train_1072", "nl": "Everything that is a grimpus, a zumpus, and a numpus is a wumpus.", "fol": "all x. ((grimpus(x) & zumpus(x) & numpus(x)) -> wumpus(x))", "prediction": ["all x.((Smoking(x) & Grosp(x) & Zumpus(x) & Numpus(x)) -> Humpus(x))", "all x.((Everything(x) & Grimpus(x) & Zumpus(x) & Numpus(x)) -> Wumpus(x))", "all x.((Schroeder(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Crumal(x) | Zumpus(x) | Numpus(x)) -> Lumpus(x))", "all x.((OtherThanBrompus(x) | OtherTumpus(x) | OtherNumpus(x)) -> Wumpus(x))", "all x.((Smile(x) & Zumpus(x) & Numpus(x)) -> Wumpus(x))", "all x.((Rumpus(x) | zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x!(((Grimpus(x) & Zupper(x) & Numpus(x)) -> Wumpus(x))", "all x.((HasGrimpus(x) & HasZumpus(x) & HasNumerus(x)) -> Wumpus(x))", "all x.((Frosp(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.(Wumpus(x) -> (Strictly(x) | Zumpus(x) | Numpus(x)))", "all x.((AsGrimpus(x) & Aszumpus(x) & AsNumpus(x)) -> Wumpus(x))", "all x.((Grampus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Sgrimpus(x) | Zumpus(x) | Numpus(x)) -> Humpus(x))", "all x.((Smoothpus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Rootpus(x) & Zumpus(x) & Numpus(x)) -> Wumpus(x))"]}
{"id": "prontoqa_train_1073", "nl": "Stella is a grimpus.", "fol": "grimpus(Stella)", "prediction": ["Stella is Gruffus(Stella)", "Stella is a Grimpus.", "Espoo(Stella)", "Stella is a Grimpus.", "Stella is a Grimpus(Stella)", "(Grimpus(Stella)).", "all x.(Stella(x) -> Grimpus(x))", "(Strawpus(Stella))", "-Stella(Stella) & Grimpus(Stella))", "(Grimpus(Stella) & Grimpus(Stella))", "(Grimpus(Stella))", "(Grampus(Stella) -> Alive(Stella))", "Stella is a Grimpus.", "Stella is grimpus.", "Stella is a Grimpus", "Stella is grimpus."]}
{"id": "prontoqa_train_1074", "nl": "Stella is a wumpus or a jompus or a rompus.", "fol": "(wumpus(Stella) | jompus(Stella) | rompus(Stella))", "prediction": ["all x.(Stella(x) -> ((Wumpus(x) | Jompus(x)) | Rompus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "(Wumpus(Stella) | Jompus(Stella)) | Rompus(Stella))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "(Wumpus(Stella) | Jompus(Stella) | Rompus(Stella)))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "(all x.(Stella(x) -> Wumpus(x)) | (Jumpus(x) | Rompus(x))))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1075", "nl": "Everything that is a brimpus and a lempus and a shumpus is a wumpus, a vumpus, and a grimpus.", "fol": "all x. ((brimpus(x) & lempus(x) & shumpus(x)) -> (wumpus(x) & vumpus(x) & grimpus(x)))", "prediction": ["all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vubis(x) & Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wempus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Brumpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.(((Brumpus(x) | Lempus(x) | Shumpus(x))) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brimpus(x) | Lempus(x) | Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Uzumus(x) & Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Shumpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vubis(x) & Grimpus(x)))", "all x.((Brimpus(x) | Lempus(x) | Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Voompus(x) & Grimpus(x)))", "all x.((Brumpus(x) | Lempus(x) | Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x y.((Brimpus(x) & Lempus(y) & Humpus(z) & Burma(x)) -> (Wumpus(x) & Vumpus(x) & Grumpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1076", "nl": "Fae is a lempus.", "fol": "lempus(Fae)", "prediction": ["-Lempus(Fae)", "all x.(Fae(x) -> Lempus(x))", "all x.(Fae(x) -> Lempus(x))", "exists x.(Fae(x) & Lempus(x))", "-Mercatus(Fae)", "all x.(Fae(x) -> Lempus(x))", "all x.(Fae(x) -> Lempus(x))", "all x.(Fae(x) -> Lempus(x))", "all x.(Fae(x) -> Lempus(x))", "all x.(Fae(x) -> Lempus(x))", "Fae is a lempus.", "all x.(Fae(x) -> Lempus(x))", "all x.(Fae(x) -> Lempus(x))", "all x.(Fae(x) -> Lempus(x))", "-Limpus(Fae)", "(Lempus(Fae) & -Lempus(Fae))"]}
{"id": "prontoqa_train_1077", "nl": "Each gorpus is not a rompus.", "fol": "all x. (gorpus(x) -> -rompus(x))", "prediction": ["all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Oracle(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -rompus(x))", "all x.(Gorpus(x) -> -rompus(x))"]}
{"id": "prontoqa_train_1078", "nl": "Every yumpus is a vumpus.", "fol": "all x. (yumpus(x) -> vumpus(x))", "prediction": ["all x.(Yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Visum(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vimptus(x))", "exists x.(Yumpus(x) & Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vulmpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Voompus(x))", "all x.(Yumpus(x) -> Voompus(x))"]}
{"id": "prontoqa_train_1079", "nl": "Sam is a gorpus and a wumpus and a brimpus.", "fol": "(gorpus(Sam) & wumpus(Sam) & brimpus(Sam))", "prediction": ["all x.(Sam(x) -> (gorpus(x) & wumpus(x) & brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "(all x.(Sam(x) -> Gorpus(x)) & (Wumpus(x)) & (Brimpus(x))))", "all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) & Umpus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) & -Wumpus(x) & -Brimpus(x)))", "all x y.((Sam(x) & Gorpus(x) & Wompus(y) & Brimpus(x)) -> (Gorpus(x) & Wumpus(y)))", "all x y z.((Sam(x) & Dorpus(y) & Wumpus(z)) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Rorpus(x) & Wumpus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) & Wempus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) & Wompus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) & Humpus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))"]}
{"id": "prontoqa_train_1080", "nl": "Everything that is a rompus, a grimpus, and a lorpus is an impus and a sterpus and a dumpus.", "fol": "all x. ((rompus(x) & grimpus(x) & lorpus(x)) -> (impus(x) & sterpus(x) & dumpus(x)))", "prediction": ["all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Imposse(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossed(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Loperpus(x)) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lordpus(x)) -> (Impossible(x) & Istrus(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impos(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Steroid(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Issue(x) & IsSterpus(x) & IsDumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impruse(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impact(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (IsThis(x) & IsThis(x) & IsThis(x) & IsThis(x) & IsThis(x) & IsThis(x) & IsThis(x) & IsThis(x) & IsThis(x) & IsThis(x) & IsThis(x) & IsDumpe(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (IsHermit(x) & IsSterepus(x) & IsDumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Imposer(x) & Sterpus(x) & Dumpus(x)))", "(all x.(Rompus(x) | Grimpus(x) | Lorpus(x)) -> Impossible(x)) & all y.(Sterepus(y) & Dumpus(y)) -> Impossible(x)) & all z.(Dumpus(z) -> Dumpus(z))))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Imposer(x) | Sterpus(x) | Dumpus(x)))", "all x.((Rompus(x) | Grumpus(x) | Lorpus(x)) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1081", "nl": "Polly is a sterpus.", "fol": "sterpus(Polly)", "prediction": ["all x.(Polley(x) -> Sterpus(x))", "Polly is Sterpus.", "Polly is Sterpus.", "all x.(Polly(x) -> Sterpus(x))", "All x.(Polly(x) -> Sterpus(x))", "All x.(Polly(x) -> Sterpus(x))", "(Sterpus(Polly))", "all x.(Polly(x) -> Sterpus(x))", "all x.(Polly(x) -> Sterpus(x))", "all x.(Ploolly(x) -> Sterpus(x))", "Polly (Sterpus)", "-See Polly's Sterpus.", "all x.(OfStropus(x) -> Polly(x))", "all x.((Polly(x) & Sterpus(x)) -> Polly(x))", "Polly (Sterpus)", "(Sterepus(Polly))"]}
{"id": "prontoqa_train_1082", "nl": "Impuses are sterpuses, yumpuses, and lorpuses.", "fol": "all x. (impus(x) -> (sterpus(x) & yumpus(x) & lorpus(x)))", "prediction": ["all x.(Impass(x) -> (Sterpuse(x) | Yampuse(x) | Lorpuse(x)))", "all x.(Impus(x) -> (-Sterpuses(x) | -Yumpuses(x) | -Lorpuses(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "all x.(Impus(x) -> ((Sterpuse(x) | Tumpuse(x) | Lorpuse(x))))", "(all x.(Impuse(x) -> (Sterpuses(x) | Yumpuses(x) | Lorpuses(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yumpe(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Kumpe(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpus(x) | Yumpe(x) | Lorpus(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "all x.(Impusite(x) -> (Sterpuse(x) | Yumpe(x) | Lorpuse(x)))", "all x.(Implement(x) -> (Sterepus(x) | Yumpus(x) | Lorpus(x)))", "all x.(Impuse(x) -> (Sterpuses(x) | Yumpes(x) | Lorpuses(x)))", "(Sterpuses(impus) | Yumpuses(impus) | Lorpuses(impus))", "all x.(Impus(x) -> (Sterpuse(x) | Youmpuse(x) | Lorpuse(x)))", "all x y z.(Impuse(x) -> (Exects(x,y) & Sterpus(y) & Exects(x,z) & Exects(x,z)))", "all x.(Impue(x) -> (Sterpuse(x) | Yumpose(x) | Wolfpuse(x)))"]}
{"id": "prontoqa_train_1083", "nl": "Shumpuses are not sterpuses.", "fol": "all x. (shumpus(x) -> -sterpus(x))", "prediction": ["all x.(Shuppuse(x) -> -Sterepuse(x))", "all x.(Shampoos(x) -> -Sterpuse(x))", "all x.(Shumpus(x) -> -Sterpus(x))", "all x.(Shumpus(x) -> -Sterpuse(x))", "all x.(Shupuse(x) -> -Sterpuse(x))", "all x.(Shupus(x) -> -Streatpuse(x))", "all x.(Shupuse(x) -> -Sterpuse(x))", "all x.(Shuppe(x) -> -Sterpus & Stempus(x))", "all x.(Sushuse(x) -> -Steruse(x))", "all x.(Shumpus(x) -> (-Sterpus(x)))", "all x.(Shumpus(x) -> -Sterpus(x))", "all x.(Shumpus(x) -> -Sterpuse(x))", "all x.(Shumpus(x) -> -Steerpus(x))", "(all x.(Shupus(x) -> -Sterpuse(x)))", "all x.(Shumpuse(x) -> -Sterpuse(x))", "all x.(Shumpus(x) -> -Sterpuse(x))"]}
{"id": "prontoqa_train_1084", "nl": "Every wumpus is a sterpus.", "fol": "all x. (wumpus(x) -> sterpus(x))", "prediction": ["all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Form(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_1085", "nl": "Every tumpus is a wumpus.", "fol": "all x. (tumpus(x) -> wumpus(x))", "prediction": ["all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wampus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Plumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wampus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "(All x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> IsWumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wampus(x))"]}
{"id": "prontoqa_train_1086", "nl": "Sam is a shumpus, Sam is not a sterpus, and Sam is an impus.", "fol": "(shumpus(Sam) & -sterpus(Sam) & impus(Sam))", "prediction": ["(all x.(Shumpus(x) -> Suspended(x)) & (Stempus(x) -> -Sterpus(x)) & (Issueltan(x) -> Impossible(x)))", "(all x.(Shumpus(x) -> Sam(x)) & (-Sterpus(x) -> Sam(x)) & (Issuel(x) -> Sam(x)))", "all x y z.((Sammu(x) & Sam(y) & Sartis(z) & Obsidian(x)) -> (Shumpus(x) & -Sterpus(y) & Impermissible(y)))", "(all x.(Shumpus(x) -> Shumpus(x)) & (Sterpus(x) | Imperator(x))))", "(all x.(Sam(x) -> Sealion(x)) & (NoSterpus(x) & Impossible(x)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Ssterpus(y) -> Sam(y))) & all z.((Sam(z) & Imperator(z)) -> Sam(z)))", "all x.((Sam(x) & Humpus(x)) -> (-Sterpus(x) & Impossible(x)))", "(all x.(Sam) -> Humpus(x)) & (-Sterpus(x)) & ((Sam) -> Impermissible(x)) | (-Sam) -> Serverpus(x)))))", "is(Shumpus(Sam) & -Sternpus(Sam) & Ilira(Sam))", "(all x.(Shampus(x) -> Shumpus(x)) & all y.(Naststerpus(y) -> -Sterpus(y))) & all z.(Improve(z) -> Improved(z)))", "(all x.(Shumpus(x) -> Sam(x)) & (-Sterpus(x) -> Sam(x)) & (Impact(x) -> Sam(x)))", "(all x.(Shumpus(x) -> Samania)) & all y.(Sterpus(y) -> -Stersudia(y)) & all z.(Imperial(z) -> Shumpus(z))))", "(all x.(Shumpus(x) & -Sterpus(x)) & (Implementation(x) -> Shumpus(x)))", "all x.((Sam(x) & Shamptox(x)) -> (-Sterpus(x) | Ilirer(x)))", "all x y.((Sam(x) & Sterpus(y)) -> (Strumpus(x) | Sterpus(y) & Imperator(x)))", "exists x.(Shumpus(x) & -Sterpus(x) & Imperative(x))"]}
{"id": "prontoqa_train_1087", "nl": "Zumpuses are gorpuses, yumpuses, and brimpuses.", "fol": "all x. (zumpus(x) -> (gorpus(x) & yumpus(x) & brimpus(x)))", "prediction": ["all x.(Zimpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpus(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x),yumpus(x) & Brimpus(y)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpus(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpeduse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpus(x)))", "all x.(Zumpus(x) -> (Gorpuse(x) | Yumpuse(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpuse(x) | Yampuse(x) | Brimpuse(x)))", "all x.(Zimpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yampus(x) | Brimpuse(x)))", "all x.(Zampus(x) -> (Gorpus(x) | Yampus(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yunus(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpuse(x) | Yumpuse(x) | Brimpuse(x)))"]}
{"id": "prontoqa_train_1088", "nl": "Wren is a yumpus, an impus, or a brimpus.", "fol": "(yumpus(Wren) | impus(Wren) | brimpus(Wren))", "prediction": ["all x.(Wren(x) -> (Yumpus(x) | Issue(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "all x.(Wren(x) -> (Symposium(x) | Imperativ(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brumpus(x)))", "exists x.(Wren(x) & (Yumpus(x) | Impenetrator(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Imperium(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Izp\u00f3s(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Imperez(x) | Brimpus(x)))", "exists x.(Wren(x) & (Yumpus(x) | Imperative(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Imperator(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Imperempt(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_1089", "nl": "Every impus is a lempus and a rompus and a gorpus.", "fol": "all x. (impus(x) -> (lempus(x) & rompus(x) & gorpus(x)))", "prediction": ["all x.(Impos(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Implementations(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Ilpresario(x) -> (Lempus(x) | Rompus(x) | Gorpus(x)))", "all x.(Issue(x) -> (Lempus(x) | Rompus(x) | Gorpus(x)))", "all x.(Ilford(x) -> (IsLempus(x) & IsRompus(x) & IsGorpus(x)))", "all x.(Ilpressima(x) -> (Lempus(x) | Rompus(x) | Gorpus(x)))", "all x y z.((Issue(x) & Lempus(y) & Rompus(z)) -> (Lempus(x) & Rompus(z) & Gorpus(z)))", "(all x.(Impos(x) -> Lempus(x)) & all y.(Rome(y) -> Gorpus(y)))", "all x.(Impact(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Implementation(x) -> (Lampus(x) & Rompus(x) & Gorpus(x)))", "(all x.(Improviser(x) -> Lempus(x)) & all y.(Rompus(y) & all z.(Gorpus(z))) -> Ascends(x,y,z)))", "all x.(Issue(x) -> (Lempus(x) | Rompus(x) | Gorpus(x)))", "all x.(Immersion(x) -> (Lempus(x) | Rompus(x) | Gorpus(x)))", "exists x.(Impact(x) & (Lempus(x) | Rompus(x) | Gorpus(x)))", "all x.(Impact(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Impos(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1090", "nl": "Sally is a yumpus and Sally is a sterpus and Sally is not a lempus.", "fol": "(yumpus(Sally) & sterpus(Sally) & -lempus(Sally))", "prediction": ["(all x.(Sally(x) -> Yumpus(x)) & all y.(Sally(y) -> Sterpus(y)) & all z.(Sally(z) -> -Lempus(z))))", "(all x.(Sally(x) -> Yampus(x)) & all y.(Sally(y) -> Sterpus(y)) & all z.(Sally(z) -> -Lempus(z))))", "(all x.(Sally(x) -> Yampus(x)) & (Sally(x) -> Sterpus(x)) & -Lempus(x)))", "(all x.(Sally(x) -> Yumpsum(x)) & all y.((Sally(y) & Mercury(y))) -> -Lempus(y)))", "(all x.(Yumpus(x) & All y.(Sterpus(y))) -> (Yumpus(x) & All z.(Sterpus(z) & -Lempus(z)))))", "all x.((Sally(x) & Yampus(x) & Sterpus(x) & -Lempus(x)) -> OneOf(x,y))", "(all x.(Sally(x) -> Yampus(x)) & all y.((Sally(y) & Sparrow(y)) -> Sterus(y))) & all z.((Sally(z) & Lempus(z)) -> -Lemmus(z)))", "all x y.((Sally(x) & Yupsum(x)) -> (Sterpus(x) & -Lempus(y)))", "all x y z.((Sally(x) & Yumpa(y) & Sally(z)) -> (Yumpus(x) & Sterepus(z) & -Lempus(x)))", "all x y z.((Sally(x) & Yumpus(x) & Sterpus(y) & -Lempus(z)) -> (Yumpus(x) & Sterpus(y) & -Lempus(z)))", "(all x.(Sally(x) -> Yumpus(x)) & (Sally(x) -> Sterepus(x)) & -Lempus(x)))", "(all x.(Sally(x) -> Yampus(x)) & (Sally(x) -> Sterepus(x)) & (Sally(x) -> -Lempus(x))))", "all x.(Sally(x) -> (Yumbus(x) & Sterpus(x) & -Lempus(x)))", "Sally (yumpus(y) & Sally(z)) & (Sterepus(z) & -Lempus(z)))", "all x y.((Sall(x) & Hyumpus(x)) -> (Estrus(x) | Sterepus(x)) & -Lempus(y)))", "(all x.(Sally(x) -> Yumps(x)) & (Sterpus(x) & -Lempus(x)))"]}
{"id": "prontoqa_train_1091", "nl": "Each sterpus is a dumpus and a tumpus and a lempus.", "fol": "all x. (sterpus(x) -> (dumpus(x) & tumpus(x) & lempus(x)))", "prediction": ["all x.(Sterpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterepus(x) -> (IsDumps(x) & IsTumpus(x) & IsLempus(x)))", "all x.(Sterpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "all x.(Steerpus(x) -> ((Dumps(x) & Tumpus(x) & Lempus(x))))", "(all x.(Sterepus(x) -> Dumpus(x)) & (Tumpus(x) | Lempus(x)))", "all x.(Sterpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "all x.(Steerpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterpus(x) -> (Dumps(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "all x.(Starpus(x) -> (Dumus(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterepus(x) -> (Dupus(x) & Humpus(x) & Lempus(x)))", "all x.(Sterpus(x) -> (Dumps(x) & Tumpus(x) & Lempus(x)))", "(all x.(Sterpus(x) -> Dumpus(x)) & all y.(Tumpus(y) & all z.(Lempus(z)) -> Lempus(x)))", "all x.(Sterpus(x) -> (HasDumpus(x) & HasTumpus(x) & HasLempus(x)))"]}
{"id": "prontoqa_train_1092", "nl": "Sally is a sterpus.", "fol": "sterpus(Sally)", "prediction": ["Sally is a Sterotus.", "Sally is a Sterpus.", "Sally ist sterpus.", "Sally is a sterpus.", "Sally is a sterpus.", "exists x.(Sally(x) & Sterpus(x))", "all x.(Sally(x) -> Sterpus(x))", "Sally is Sterpus.", "Sally is Sterpus.", "Sally has Sterpus(Sterpa)", "Sally is sterpus.", "Sally", "Sally is a sterpus.", "Sally is sterpus.", "Sally Sex(Storpus)", "all x.(Sally(x) -> Sterus(x))"]}
{"id": "prontoqa_train_1093", "nl": "Sally is an impus, a dumpus, or a brimpus.", "fol": "(impus(Sally) | dumpus(Sally) | brimpus(Sally))", "prediction": ["(Immrupt,Dumpus,Brimpus)", "all x.(Sally(x) -> (Improvse(x) | Dumpus(x) | Brimpus(x)))", "(Impossible(Sally) | Dumpus(Sally) | Brimpus(Sally)))", "all x.(Sally(x) -> (Impose(x) | Dumpus(x) | Brimpus(x)))", "(Impedus(Sally) | Dumpus(Sally) | Brimpus(Sally)))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Idealist(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "exists x.(Sally(x) & (Impose(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Imposer(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x Issue(x)))"]}
{"id": "prontoqa_train_1094", "nl": "Everything that is a dumpus, a sterpus, or a brimpus is a lempus.", "fol": "all x. ((dumpus(x) | sterpus(x) | brimpus(x)) -> lempus(x))", "prediction": ["all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.(((Dumps(x) | Steerpus(x) | Brimpus(x))) -> Lempus(x))", "all x.((Dumps(x) | Steros(x) | Brimpus(x)) -> Lempus(x))", "all x.(((Dumpus(x) | Sterpus(x) | Brimpus(x))) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dupus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.(((Dumpus(x) | Sterpus(x) | Brimpus(x))) -> Lempus(x))", "all x.((Douchus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sternpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumps(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterepus(x) | Brimpus(x)) -> Lempus(x))", "all x.(((Dumpus(x) | Sterpus(x) | Brimpus(x))) -> Lempus(x))"]}
{"id": "prontoqa_train_1095", "nl": "Sam is a lempus, a wumpus, and a brimpus.", "fol": "(lempus(Sam) & wumpus(Sam) & brimpus(Sam))", "prediction": ["all x.(Sam(x) -> (Lempus(x) | Wempus(x) | Brimpus(x)))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Wumpus(x) & -Brampus(x)))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))", "(all x.(Sam(x) -> Lempus(x)) | (Wumpus(x) & Brimpus(x))))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))", "(all x.(Sam) -> Lempus(x)) & (Wumpus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))", "all x.(Sam(x) -> (Lempus(x) & Wumpus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Britpus(x)))", "all x.(Sam(x) -> (Lempus(x) & Wumpus(x) & Brimpus(x)))"]}
{"id": "prontoqa_train_1096", "nl": "Everything that is a zumpus, a vumpus, and a lorpus is a numpus, a grimpus, and a gorpus.", "fol": "all x. ((zumpus(x) & vumpus(x) & lorpus(x)) -> (numpus(x) & grimpus(x) & gorpus(x)))", "prediction": ["all x.((Tompus(x) & Vermpus(x) & Lorpus(x)) -> (Nompus(x) & Graupus(x) & Gorpus(x)))", "all x.((Tompus(x) | Visimpus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Zumpus(x) | Vacpus(x) | Lorpus(x)) -> (Numpus(x) & Grapple(x) & Gorpus(x)))", "all x.((Zumpus(x) & Vumpus(x) & Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (Numerus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Vrompus(x) | Lorpus(x)) -> (Numpus(x) | Grimpus(x) | Gorpus(x)))", "all x.((Tompus(x) | Vukpus(x) | Lorpus(x)) -> (Nompus(x) | Grimpus(x) | Gorpus(x)))", "all x y z.((Tompus(x) & Vumpus(y) & Lorpus(z) & Tompus(y) & Tompus(z)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Zumpus(x) | Vumpus(x) | Lorpus(x)) -> (numpus(x) | grimpus(x) | gorpus(x)))", "all x.((Zumpus(x) | Vumpus(x) | Lorpus(x)) -> (Nompus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Zumpus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Zumpus(x) | Voompus(x) | Lorezus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Zumpus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Vumpus(x) | Lordpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tommy(x) | -Vimpus(x) | -Lorpus(x)) -> (numpus(x) & grimpus(x) & gorpus(x)))"]}
{"id": "prontoqa_train_1097", "nl": "Stella is a vumpus.", "fol": "vumpus(Stella)", "prediction": ["Stella is a vumpus.", "Stella is a Vuppus(Stella)", "Stella is a vumpus.", "Stella is a Vumpus.", "Stella is a vumpus.", "all x.(Stella(x) -> Vumpus(x))", "Stella is a Vumpus.", "(Vumpus(Stella))", "Stella.(Vumpus(Stella))", "(Vumpus(Stella))", "all x.(Stella(x) -> Vumpus(x))", "Stella is vumpus.", "Stella is a Vulmpus(s)", "Stella is a Vampire(s)", "Esta Stella envias.", "Stella is aVimpus(Stella)"]}
{"id": "prontoqa_train_1098", "nl": "Stella is a lorpus.", "fol": "lorpus(Stella)", "prediction": ["Stella is lorpus.", "Stella (Lorpus)", "Stella is a lorpus.", "(Lorpus(Stella))", "Stella is a lorpus.", "Stella (Lorpus(s) & LivesIn(s,f,s))", "all x.(Lorpus(x) -> Stella(x))", "all x.(Stella(x) -> Lorpus(x))", "all x.(Lorpus(x) -> Stella(x))", "Stella has a lorpus.", "Stella is a lorpus.", "Stella is a lorpus.", "Stella is a lorpus.", "all x.(Lorpus(x) -> Stella(x))", "Stella is a lorpus.", "Stella (Lorpus)"]}
{"id": "prontoqa_train_1099", "nl": "Everything that is a zumpus and a shumpus and a sterpus is a jompus and a gorpus and a lorpus.", "fol": "all x. ((zumpus(x) & shumpus(x) & sterpus(x)) -> (jompus(x) & gorpus(x) & lorpus(x)))", "prediction": ["all x.(AndZumpus&ShumpusAndSterepus(x) -> (Hompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Zumpus(x) & Humpus(x) & Sterpus(x)) -> (Jombus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Zumpus(x) & Shumpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jumpus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Tohumpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) | Saumpus(x) | Sterpus(x)) -> (Jompus(x) | Gorpus(x) | Lorpus(x)))", "all x.((Zumpus(x) & Shumpus(x) & Spherus(x)) -> (Jimpus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Shumpus(x) & Sterpus(x)) -> (Jompus(x) | Gorpus(x) | Lorpus(x)))", "all x.((Tompus(x) & Shumpus(x) & Stump(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Shumpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Shumpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Shumpus(x) & Sterpus(x)) -> (Jimpus(x) & Gorpus(x) & Rankin(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Worpus(x) & Lorpus(x)))", "(all x.((Tompus(x) & Humpus(x)) -> Jompus(x)) & all y.((Gorpus(y) & Lorpus(y)) -> Lorpus(y)))", "all x.((Tompus(x) & Shumpus(x) & Sterpus(x)) -> (Jimpus(x) & Gorpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_train_1100", "nl": "Sam is a sterpus.", "fol": "sterpus(Sam)", "prediction": ["all x.(Sam(x) -> Sterpus(x))", "(Sam,sterpus, etc.)", "(Sam,sterpus)", "all x.(Sam(x) -> Sterpus(x))", "all x.(Sam(x) -> Sterpus(x))", "all x.(Sam(x) -> Sterpus(x))", "exists x.(Sam(x) & Sterpus(x))", "(Sam is Sterpus(Sam) & Host(Sam))", "all x.(Sam(x) -> Sterpus(x))", "Sam is sterpus.", "(Sam is(Sam) -> Sterpus(Sam))", "all x.(Sam(x) -> Sterops(x))", "all x.(Sam(x) -> Sterpus(x))", "all x y.((Sam(x) & Sterpus(y)) -> IsAt(x,y))", "(Student(Sam) & Sterpus(Sam))", "all x.(Sam(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_1101", "nl": "Sam is a jompus.", "fol": "jompus(Sam)", "prediction": ["(Jimpus(Sam)", "all x.(Sam(x) -> Jompus(x))", "all x.(Jimpus(x) -> Sam(x))", "all x.((Sam(x) & Jompus(x)) -> HasSam(x))", "(Jompus(Sam) -> Nose(Sam))", "all x.(Jumpus(x) -> Sam(x))", "all x.(Sam(x) -> Jompus(x))", "all x.(Jimpus(x) -> Sam(x))", "all x.(Sam(x) -> Jompus(x))", "Sam is a Jompus.", "all x.(Sam(x) -> Jompus(x))", "all x.(Jompus(x) -> Sam(x))", "all x.(Sam(x) -> Jompus(x))", "all x.(Jimpus(x) -> Sam(x))", "(Jimpus(Sam) & Unlikely(Sam))", "(Jompus(Sam) & Jompus(Sam))"]}
{"id": "prontoqa_train_1102", "nl": "Everything that is a zumpus, a yumpus, and a jompus is an impus and a lorpus and a numpus.", "fol": "all x. ((zumpus(x) & yumpus(x) & jompus(x)) -> (impus(x) & lorpus(x) & numpus(x)))", "prediction": ["all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Izplifi\u00e9(x) & -Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x)))", "all x.((Tompus(x) | Yupus(x) | Jompus(x)) -> Is(x,i,lorpus) & Is(x,numpus))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & -Impose(x) & -Impose(x) & Impose(x) & Impose(x)))", "all x y.((Tompus(x) & Yumpus(y) & Jompus(y)) -> (Impos(x) & IsLorpus(x) & IsNumpus(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Ilios(x) & Lurpus(x) & Numpus(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Insists(x) & Impossible(x) & Impossible(x) & IsLorpus(x) & IsNompus(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Is(x,Impossible!) & In(x,Lorpus) & In(x,numpus)))", "all x.((Tommu(x) & Yampus(x) & Jompus(x)) -> IsIsIsIsImpact(x)) & all y.((Lorpus(y) & Numerus(y))) -> IsImpact(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> Impossible(x)) & exists y.(Lorpus(y) & Numpus(y) & ForPoison(x,y))))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Levis(x) & Numpus(x)))", "all x.((Thing(x) & Zumpus(x) & Yumpus(x) & Jompus(x)) -> IsOrmentil(x))", "all x.((Tompus(x) | Yampus(x) | Jompus(x)) -> (Impos(x) | (Loris(x) & Numpus(x))))", "all x.((Ferengine(x) & (Zumpus(x) | Yumpus(x) | JOmpus(x))) -> Diekta(x))", "all x.(All y.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impose(y) & Escalier(y) & Escalier(y) & Escalier(y) & Escalier(y)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x.((Tompus(x) | Yampus(x) | Jompus(x)) -> (Impossive(x) & -Lorpus(x) & -Numpus(x)))"]}
{"id": "prontoqa_train_1103", "nl": "Max is a lorpus.", "fol": "lorpus(Max)", "prediction": ["all x.(Max(x) -> AreLorpus(x))", "Max isLorpus(x)", "All x y.((Max(x) & Lorpus(y)) -> Thermoz.(x,y)))", "(Lorpus(Max) & Worm(Max))", "all x.(Lorpus(x) -> Max(x))", "(Larpus(Max) -> UnlikeMan(Max,M)))", "(Lorpus(Max))", "(Lorpus(Max) & LivesIn(Max))", "-Lorpus(Max)", "(Lorpus(Max))", "(Lorpus(Max) & EatsLorpen(Max))", "all x.(Max(x) -> Lorpus(x))", "(Lorpus(Max) \u00e0 l'ext\u00e9rieur.", "(Lorpus(max) & -Lorph(max))", "all x.(Max(x) -> Lorpus(x))", "all x.(Max(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_1104", "nl": "Every brimpus is a tumpus and an impus and a gorpus.", "fol": "all x. (brimpus(x) -> (tumpus(x) & impus(x) & gorpus(x)))", "prediction": ["all x.(Brimpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Impossible(x) & Gorpus(x)))", "all x.(Brumpus(x) -> (EstablishedByTumpus(x) & SetOnIssues(x) & EtchedByGorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Idelaps(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Illips(x) & Gorpus(x)))", "(all x.(Brimpus(x) -> Toumpus(x)) & all y.(Impossible(y) & Gorpus(y)))", "all x.(Brumpus(x) -> (Tumpus(x) & Isp(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Impossible(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Impossible(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brompus(x) -> (Tumpus(x) & Imperempt(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Ilios(x) & Gorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Blumpus(x) -> (Tumpus(x) & Imperator(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1105", "nl": "Wren is a lorpus, an impus, or a yumpus.", "fol": "(lorpus(Wren) | impus(Wren) | yumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impose(x) | Yuppus(x)))", "exists x.(Wren(x) & (Lorpus(x) | Impossible(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Imperative(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Issue(x) | Yumbo(x)))", "all x.(Wren(x) -> (Lorpus(x) | Imperator(x) | Yampus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impress(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lerus(x) | Iris(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Imperative(x) | Yumpa(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpsum(x)))", "all x.(Wren(x) -> (Lorpus(x) | Issue(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Imperempt(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Imperator(x) | Yumpus(x)))"]}
{"id": "prontoqa_train_1106", "nl": "Numpuses are sterpuses, gorpuses, and vumpuses.", "fol": "all x. (numpus(x) -> (sterpus(x) & gorpus(x) & vumpus(x)))", "prediction": ["all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpus(x) -> (Sternpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpuse(x) -> (Sterpus(x) | Gorpus(x) | Vumpuse(x)))", "all x.(Numpuse(x) -> (Sterpuse(x) & Gorpuse(x) & Vampuse(x)))", "all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vampus(x)))", "all x.(Numpuse(x) -> (Steropuse(x) | Gorpuse(x) | Vumpuse(x)))", "all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vumpuse(x)))", "all x.(Numpuse(x) -> ((Sterpuse(x) | Gorpuse(x) | Vubicule(x))))", "all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vuempus(x)))", "all x.(Numpuse(x) -> (Streptus(x) | Gorpus(x) | Vumpuse(x)))", "all x.(Numpus(x) -> (Sterpuse(x) | Gorpuse(x) | Vulbe(x)))", "all x.(Numpus(x) -> ((Sterpuse(x) | Gorpuse(x) | Vumpus(x))))", "all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpuse(x) -> (Sterpuses(x) | Gorpuses(x) | Vampuses(x)))", "all x.(Numpus(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpuse(x) -> (St\u00e9rpuse(x) | Gorpuse(x) | Vumpuse(x)))"]}
{"id": "prontoqa_train_1107", "nl": "Sally is an impus, Sally is a jompus, and Sally is not a vumpus.", "fol": "(impus(Sally) & jompus(Sally) & -vumpus(Sally))", "prediction": ["(all x y z.(Sally(x) -> Is(x,y)) & ((Sally(z) & Jompus(z))) | (Sally(x,z) & -Vumpus(z)))))", "all x y.((Sally(x) & IsIs(x)) -> (Jompus(x) & -Vumpus(y)))", "(all x.(Sally(x) -> Impossible(x)) & (Bohaut(x) -> Jompus(x)) & (Hamlet(x) -> -Vumpus(x))))", "(all x.(Sally(x) -> Is(x)) & all y.(Sally(y) -> Josephus(y)) & none.(Sally(y) -> Vumpus(y)))", "(all x.(Sally(x) -> Is(x)) & (Jompus(x) & -Vumpus(x)))", "(all x.(Sally(x) -> Impossible(x)) & (Sally(x) -> Jompus(x)) & (Sally(x) -> -Vumpus(x)))", "(all x.(Sally(x) -> Is(x)) & all y.(Shompus(y) -> (Jimpus(y) & -Vumpus(y))))", "all x y z.((Sally(x) & Eliminator(y) & Jompus(z)) -> (Impossible(x) & -Vumpus(z)))", "(all x.(Sally(x) -> Inflicted(x)) & ((Sally(x) & Jompus(x)) -> -Vumpus(x)))", "all x.((Sally(x) & IsIron(x)) -> (Jompus(x) & -Vumpus(x)))", "all x y.((Sally(x) & Jompus(y)) -> (Impossible(x) | Jompus(y) | -Vumpus(x)))", "(all x.(Sally(x) -> IsNot(x)) & (Jompus(x) & -Vumpus(x)))", "(all x.(Sally(x) -> Impossible(x)) & all y.(Star(y) -> Holopus(y)) & all z.(Sally(z) -> -Vumpus(z))))", "(all x.(Sally(x) -> Illegal(x)) & (Jompus(x) & -Vumpus(x)))", "all x y z.((Sally(x) & Is(x,Impos) & Jompus(y) & -Vimpus(z)) -> (Impossible(x) & Jompus(y) & -Vimpus(z)))", "(all x.(Sally(x) -> IsHerb(x)) & (Jomeu(x) & -Vumpus(x)))"]}
{"id": "prontoqa_train_1108", "nl": "Everything that is a vumpus, a rompus, or a yumpus is a lempus, a zumpus, and a gorpus.", "fol": "all x. ((vumpus(x) | rompus(x) | yumpus(x)) -> (lempus(x) & zumpus(x) & gorpus(x)))", "prediction": ["all x.((Vumpus(x) | Rompus(x) | Yampus(x)) -> (ListensTompus(x) | ListensTomorpus(x) | ListensGorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yampus(x)) -> (Lampus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yampus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yukpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yuppus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yuppus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vampus(x) | Romapus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vimpus(x) | Rompus(x) | Yumpus(x)) -> (Limpus(x) & Zumpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1109", "nl": "Sally is a lempus.", "fol": "lempus(Sally)", "prediction": ["Sally is a Lempus.", "exists x.(Sally(x) & Lempus(x))", "(Lempus(Sally) -> IsLambus(Sally))", "All x.(Sally(x) -> Lempus(x))", "Sally is Lempus.", "Sally AlivesInMuchPupus(Sally)", "all x.(Lempus(x) -> Sally(x))", "Sally is a Lempus.", "Sally is Lempus.", "Sally (Limpus)", "Sally is a lempus.", "Sally is Lempus.", "Sally is a lempus.", "all x.(Sally(x) -> Lempus(x))", "Sally is a lempus.", "all x.(Sally(x) -> Lempus(x))"]}
{"id": "prontoqa_train_1110", "nl": "Everything that is a grimpus or a jompus or a lempus is a tumpus, an impus, and a rompus.", "fol": "all x. ((grimpus(x) | jompus(x) | lempus(x)) -> (tumpus(x) & impus(x) & rompus(x)))", "prediction": ["all x.(((Plumpus(x) | Jompus(x) | Lempus(x))) -> (Tumpus(x) | Impossible(x) | Rompus(x)))", "all x.((Murph(x) | Joji(x) | Lempus(x)) -> (Tumpus(x) & Impossible(x) & Rompus(x)))", "all x.((Smopus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Issue(x) & Rompus(x)))", "all x.((Tumpus(x) | Imperator(x) | Rompus(x)) -> (Grimpus(x) | Jompus(x) | Lempus(x)))", "all x.((Rumpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Issue(x) & Rompus(x)))", "all x.((Grimpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) | Impossible(x) | Rompus(x)))", "all x.((Gruppus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Implos(x) & Rompus(x)))", "all x.((Smopus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Impermiss(x) & Rompus(x)))", "all x.((Grumps(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) | Imperative(x) | Rompus(x)))", "all x.((Smoothpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Imperempt (x) & Rompus(x)))", "all x.((Tumpus(x) | Imperator(x) | Rompus(x)) -> (Grimpus(x) | Jompus(x) | Lempus(x)))", "all x.((Smoothpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Imperator(x) & Rompus(x)))", "all x.((Grubbus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Impossible(x) & Rompus(x)))", "all x.((Murphy(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Imperator(x) & Rompus(x)))", "all x.(((Cramp(x) | Jompus(x) | Lempus(x))) -> (Tumpus(x) & Imperator(x) & Rompus(x)))", "all x.((Grimpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Imperium(x) & Rompus(x)))"]}
{"id": "prontoqa_train_1111", "nl": "Each dumpus is a tumpus.", "fol": "all x. (dumpus(x) -> tumpus(x))", "prediction": ["all x.(Dumpus(x) -> Taumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dupus(x) -> Tumulus(x))", "all x.(Dumpus(x) -> Totumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "exists x.(Dumpus(x) & Tumpus(x))"]}
{"id": "prontoqa_train_1112", "nl": "Stella is a wumpus, Stella is not a tumpus, and Stella is a rompus.", "fol": "(wumpus(Stella) & -tumpus(Stella) & rompus(Stella))", "prediction": ["(all x.(Wumpus(x) -> Wush(x)) & (-Tumpus(x) & -Tumpus(x)) & (Rompus(x) -> Whumpus(x)))", "(all x.(Wumpus(x) -> Wumpus(x)) & (Tumpus(x) | Rompus(x))))", "(all x.(Wumpus(x) -> Stella)) & all y.(Salta(y) -> -Tumpus(y)) & all z.(Rompus(z) -> Stella)))", "(all x.((Wumpus(x) & -Tompus(x)) | (-Tumpus(x) & Rompus(x))))", "(all x.((Wumpus(x) & -Tumpus(x)) | (-Tumpus(x) & Rompus(x))))", "(all x.(Wumpus(x) & -Tumpus(x))) & all y.(Rompus(y) & -Wumpus(y)))", "(all x.(Stella(x) -> Wumpus(x)) & (Stella(x) -> -Tumpus(x)) & (Stella(x) -> Rompus(x)))", "(all x.(Wumpus(x) & -Tumpus(x) & Rompus(x)))", "(all x.(Wumpus(x) -> Stellas(x)) & (-Tumpus(x) -> Stellas(x))) & (-Tumpus(x) -> Stellas(x)))", "(all x.(Wumpus(x) | NoTumpus(x)) & all y.(Rompus(y) -> (Kool(x) & -Kool(y))))", "(all x.(Stella(x) -> Wumpus(x)) & (Stella(x) -> -Tumpus(x)) & (Stella(x) -> Rompus(x)))", "all x y z.((Stella(x) & Wumpus(x) & Stella(y) & Rompus(z)) -> (-Tumpus(y) & -Wumpus(y) & Rompus(z)))", "(all x.(Tumpus(x) -> Wumpus(x)) & (Tumpus(x) -> -Tumpus(x)) & (Rompus(x) -> Wumpus(x)))", "(all x.(Wumpus(x) -> ThereOf(x,Wumpus)) & (Pumpus(x) -> -ThereOf(x,Tumpus)) & (Rompus(x) -> ThereOf(x,Wumpus)))", "(all x.(Wumpus(x) -> Stella(x)) & (-Tumpus(x) -> Stella(x))) & (Rompus(x) -> Stella(x)))", "(all x.(Wumpus(x) | -Tumpus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1113", "nl": "Stella is a yumpus, Stella is not a dumpus, or Stella is a brimpus.", "fol": "(yumpus(Stella) | -dumpus(Stella) | brimpus(Stella))", "prediction": ["(all x.(Stella(x) -> Yampus(x)) | (-Stella(x) -> Dumpus(x)) | (-Stella(x) -> Brimpus(x))))", "(all x.(Stella(x) -> Yumpus(x)) | (-Dumpus(x) | Brimpus(x))))", "(Yumpus(Stella) | Dumpus(Stella) | Brimpus(Stella)))", "(all x.(Stella(x) -> Yampus(x)) & -(Stella(x) -> Dumpus(x))) & all y.(Stella(y) -> Brimpus(y))))", "(all x.(Stella(x) -> Yumps(x)) & (-Stella(x) & Dumpus(x)) | (-Stella(x) & Brimpus(x))))", "(all x.(Stella(x) -> Yumps)) & (Stella(x) -> -Dumpus(x)) | (Stella(x) -> Brimpus(x))))", "(all x.(Stella(x) -> Yampus(x)) & (Stella(x) -> -Dumpus(x)) & (Stella(x) -> Brimpus(x)))", "(all x.(Stella(x) -> Yampus(x)) & all y.(Stella(y) -> -Dumpus(y))) & all z.(Stella(z) -> Brimpus(z)))", "(all x.(Stella(x) -> Yumpus(x)) & (-Stella(x) | Brimpus(x))))", "(all x.(Stella(x) -> Yampus(x)) [Stella(x) -> -Dumpus(x)) | Stella(x) -> Brimpus(x)))", "(all x.(Yumpus(x) | -Dumpus(x) | Brimpus(x)))", "all x y.((Stella(x) & Yompus(x)) | (NoDumpus(x) | Brimpus(y))))", "(all x.(Stella(x) -> Yumps(x)) & (Stella(x) -> -Dumpus(x)) | (Stella(x) -> Brimpus(x))))", "(all x.(Stella(x) -> Yampus(x)) | (-Stella(x) & Dumpus(x))) | (-Stella(x) & Brimpus(x))))", "(all x.(Stella(x) -> Yampus(x)) | (-Dumps(x) | Brimpus(x))))", "(yuppus(Stella,y) | (-Dumpus(Stella,y)) | (Brimpus(Stella,y)))))"]}
{"id": "prontoqa_train_1114", "nl": "Every shumpus is a zumpus.", "fol": "all x. (shumpus(x) -> zumpus(x))", "prediction": ["all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Tolpu(x))", "all x.exists y.(Shumpus(x) & Zumpus(y))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x y.((Shumpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_1115", "nl": "Every lorpus is a brimpus.", "fol": "all x. (lorpus(x) -> brimpus(x))", "prediction": ["all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brumpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_1116", "nl": "Each grimpus is not a zumpus.", "fol": "all x. (grimpus(x) -> -zumpus(x))", "prediction": ["all x.(Grimpus(x) -> -Tommoth(x))", "all x.(Smooch(x) -> -Zumpus(x))", "all x.(Grimpus(x) -> -Zombipu(x))", "all x.(Grimpus(x) -> -Zumpus(x))", "all x.(Grimpus(x) -> -Zumpus(x))", "-zusp.(Grampus(x))", "all x.(Gruppus(x) -> -Tompus(x))", "all x.(Grimpus(x) -> -Zumpus(x))", "all x.(Grimpus(x) -> -Zumpus(x))", "all x.(Grimpus(x) -> -Zumpus(x))", "all x.(Aggrepsian(x) -> -Zumpus(x))", "all x.(Grimpus(x) -> -Zupus(x))", "all x.(Fragpus(x) -> -Tompus(x))", "all x.(Grimpus(x) -> -Zombius(x))", "all x.(Sgruppus(x) -> -Zumpus(x))", "all x.(Purple(x) -> -Dashpus(x))"]}
{"id": "prontoqa_train_1117", "nl": "Polly is a gorpus and Polly is a jompus and Polly is not a brimpus.", "fol": "(gorpus(Polly) & jompus(Polly) & -brimpus(Polly))", "prediction": ["all x y.((Polly(x) & Gorpus(x)) -> (Heels(x) & Jompus(x) & -Brimpus(y)))", "(all x y.(Gorpus(x) & Polly(y)) & (Jompus(y) | -Brimpus(y))) -> Polly(y))", "(all x y.((Polly(x) & Gorpus(x)) & ((Poly(y) & Moose(y)) & -Brimpus(y))) -> Gorpus(x)) & ((Poly(y) & Bears(y)) -> Gorpus(y))) & ((Poly(y) & Moose(y)) -> Jompus(y)))", "(all x y.(Gorpus(x) -> Polly(y)) & (Jompus(y) -> Polly(y)) & (Brimpus(y) -> Polly(y)))", "(all x y.(Gorpus(x) & One(y))) & (Columbus(y) | NoBrimpus(y)))", "(all x.(Polly(x) -> Gorpus(x)) & all y.(Polly(y) -> Jompus(y))) & all z.(Polly(z) -> -Brumpus(z)))", "all x y.((Polly(x) & Gorpus(x) & Jompus(y)) -> (Gorpus(x) & -Brumpus(y)))", "all x y.((Polly(x) & Gorpus(x) & Polly(y)) -> (Jompus(y) & -Brimpus(y)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & -Polly(x)))", "(all x.(Polly(x) -> Gorpus(x)) & all y.(Polly(y) -> Jompus(y)) & all z.(Polly(z) -> -Brimpus(z))))", "(all x y.((Polly(x) & Gorpus(x)) -> Polly(x)) & ((Polly(y) & Humpback(y)) -> Jompus(y)) & -Bloompus(y)))", "(all x.(Polly(x) -> Gorpus(x)) & all y.(Polly(y) -> Jompus(y)) & -Brimpus(y)))", "(all x.(Polly(x) -> Gorpus(x)) & (Pompus(x) -> Jompus(x)) & (Brumpus(x) | Polly(x))))", "all x y z.((Polly(x) & Gorpus(x) & Jompus(y) & Brimpus(z)) -> (Gorpus(x) & Jompus(y) & -Brompus(z)))", "(all x.(Polly(x) -> Gorpus(x)) & all y.(Polly(y) -> Jompus(y)) & all z.(Polly(z) -> -Brumpus(z))))", "(all x y.(Gorpus(x) & Gorpus(y)) & (Jimpus(y) | Brimpus(y))))"]}
{"id": "prontoqa_train_1118", "nl": "Polly is a rompus and a wumpus and a sterpus.", "fol": "(rompus(Polly) & wumpus(Polly) & sterpus(Polly))", "prediction": ["(all x.(Polly(x) -> Rompus(x)) & all y.(Wumpus(y) & Sterpus(y))))", "all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & Sterpus(x)))", "all x.(Polly(x) & (Rompus(x) | Wumpus(x) | Sterpus(x)))", "all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & STERPUS(x)))", "all x y z.((Pompy(x) & Rompus(y) & Wumpus(z)) -> (Rompus(x) | Wumpus(z) | Sterpus(z)))", "all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & Sternpus(x)))", "all x y z.((Polly(x) & Rumpus(y) & Wumpus(z)) -> (Rompus(x) & Wumpus(y) & Sterpus(z)))", "all x y.((Polly(x) & Rrompus(x) & Husk(y)) -> (Sterpus(y) & Wumpus(x)))", "all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & Sterpus(x)))", "all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & Sterpus(x)))", "all x.((Polly(x) & Wumpus(x)) -> (Rompus(x) & Sterpus(x)))", "(all x.(Polly(x) -> Rhopus(x)) & (Wumpus(x) | Sterpus(x))))", "(Rompus(Polly) & Wumpus(Poly) & Sterpus(Poly))", "(Rompus(Polly) & Wumpus(Polly) & Sterpus(Polly))", "All x.(Polly(x) -> (IsRompus(x) & IsWumpus(x) & IsSterepus(x)))", "all x.(Polly(x) -> (Dormis(x) & Wormis(x) & Sterpus(x)))"]}
{"id": "prontoqa_train_1119", "nl": "Polly is not a shumpus, Polly is not a lorpus, and Polly is a vumpus.", "fol": "(-shumpus(Polly) & -lorpus(Polly) & vumpus(Polly))", "prediction": ["all x y z.((Polly(x) & Shumpus(y) & Larpus(z)) -> (-Shumpus(x) & -Lorpus(x) & -Vimpus(y)))", "(all x.(Polly(x) -> -Shumpus(x)) & all y.(Polly(y) -> -Lorpus(y))) & all z.(Polly(z) -> Vamppus(z)))", "(all x y z.(Polly(x) -> (-Shumpus(x) & -Lorpus(y)) & (Polly(z) -> Vumpus(z))))", "all x y z.((Polly(x) & Humpus(y) & Lorpus(z)) -> -(Shumpus(x) | Wolverine(x) | Volumpus(x)))", "all x y z.((Polly(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x,y) & -Lorpus(y) & -Vumpus(z)))", "all x y z.((Polly(x) & Shumpus(y) & Lorpus(z)) -> -Shumpus(x)) & ((Polly(x) & Lunus(x)) -> Vumpus(x)))", "exists x y z.(Polly(x) & Strumpus(y) & -Shumpus(z) & -Lorpus(y) & Velumpus(z))", "all x y z.((Polly(x) & Shumpus(y) & Lorpus(z) & Vulpos(z)) -> -Shumpus(x))", "(all x.(Polly(x) -> -Shumpus(x)) & all y.(Polly(y) -> -Lorpus(y)) & all z.(Poly(z) -> Vumpus(z))))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Vampire(x)))", "(all x y z.(Polly(x) -> (-Shumpus(x) & -Lorpus(y) & -Vumpus(z))) -> (-Shumpus(x) & -Lorpus(y) & -Vumpus(z)))", "(all x y z.((Ploy(x) & Humpus(y) & Lark(z)) -> -(Shumpus(x) | Lorpus(x)) | Vumpus(z)))", "all x y z.((Polly(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(y) & -Vumpus(z)))", "(all x y z.((Polly(x) & Humpus(y)) -> -Shumpus(x)) & ((Polly(z) & Lorpus(y)) -> -Lorpus(z)) & ((Poly(z) & Voompus(z)) -> Voompus(z)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Vumpus(x)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Poly(x) -> -Lorpus(x)) & (Poly(x) -> Vumpus(x))))"]}
{"id": "prontoqa_train_1120", "nl": "Every jompus is a yumpus.", "fol": "all x. (jompus(x) -> yumpus(x))", "prediction": ["all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yampus(x))", "all x.(Jompus(x) -> Yampus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumps(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yampus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpa(x))", "all x.(Jimpus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))"]}
{"id": "prontoqa_train_1121", "nl": "Polly is not a yumpus, Polly is a lempus, and Polly is a zumpus.", "fol": "(-yumpus(Polly) & lempus(Polly) & zumpus(Polly))", "prediction": ["(all x.(Poly(x) -> -Yumpus(x)) & (Poly(x) -> Lempus(x)) & (Poly(x) -> Zumpus(x)))", "all x y z.((Poly(x) & Yompus(y) & Lempus(z)) -> (-Yumpus(x) & Lempus(y) & Zumpus(z)))", "(all x.(Polly(x) -> -Yumpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Zumpus(x)))", "(all x.(Poly(x) -> -Yumpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Zumpus(z))))", "all x y z.((Polly(x) & Yampus(y) & Lempus(z)) -> (-Yumpus(x) & Lempus(y) & Zumpus(z)))", "all x.((Polly(x) & -Yumpus(x)) -> (Lempus(x) & Zumpus(x)))", "(all x,yellow(x) -> -Yumpus(x)) | (-yumpus(y) & lempus(y))) | (-yumpus(y) & lempus(y)))", "(all x y z.((Polly(x) & Yampus(y)) -> -Yumpus(x)) & ((Polly(x) & Lempus(x)) -> Zumpus(z)))", "(all x.(LittlePool(x) -> -Yumpus(x)) | (LimePool(x) & TossPool(x))))", "(all x.(Polly(x) -> -Yumpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Zumpus(x)))", "all x.((Polly(x) & -Yumpus(x)) -> (Lempus(x) & Zumpus(x)))", "(all x.(Polly(x) -> -Yumpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Zumpus(x)))", "(all x.(Polly(x) -> -Yumpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Zumpus(x)))", "(all x y z.((Polly(x) & Yumpus(y)) -> -Yumpus(x)) & ((Polly(z) & Lempus(z)) -> Zumpus(z)))", "(all x.(Polly(x) -> -yumpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Zumpus(x)))", "all x y z.((Polly(x) & Yumpus(y) & Lempus(z) & Zumpus(z)) -> -Yumpus(x) & Lempus(y) & Zumpus(z)))"]}
{"id": "prontoqa_train_1122", "nl": "Polly is a dumpus or Polly is a lorpus or Polly is not a jompus.", "fol": "(dumpus(Polly) | lorpus(Polly) | -jompus(Polly))", "prediction": ["((Polly) & (Dumpus(Polly) | Lorpus(Poly))) | -Jompus(Poly)))", "all x.((Polly(x) & Dumpus(x)) | (Lorpus(x) | -Jompus(x))))", "(both & ((Polly(x) & Dumpus(x)) | ((Polly(x) & Lorpus(x)) | (-Polly(x) & Jompus(x)))))", "((Poly(Polly) & Dumpus(Polly)) | (Poly(Polly) & Lorpus(Poly)) | Polly(Poly) & -Jimpus(Poly)))", "(all x.(Polly(x) -> Dumpus(x)) | (Polly(x) -> Lorpus(x)) | (Polly(x) -> -Jumpus(x))))", "((Polly(Polly) & Dumpus(Polly)) | (Polly(Polly) & Lorpus(Poly)) | (Poly(Poly) & -Jompus(Poly))))", "all x y z.((Polly(x) & Dumpus(x) | Polly(y) & Lorpus(y)) | (-Polly(z) & Jompus(z))))", "all x y.((Poly(x) & Dumpus(x)) | (Poly(y) & Lorpus(y)) | (Poly(y) & -Jimpus(y))))", "((Polly(Polly) & Dumpus(Poly)) | (Polly(Poly) & Lorpus(Poly))))", "(all x.(Polly(x) -> Dumpus(x)) | (Polly(x) -> Lorpus(x)) | (Polly(x) -> -Juppus(x))))", "(exists x.(Polly(x) & (Dumps(x) | Lorpus(x) | -Jampus(x))))", "(all x.(Polly(x) o.(Dumpus(x) & (Lorpus(o) | -Jompus(o))) -> Polly(x)))", "all x.((Poly(x) & (Dumpus(x) | Loompus(x) | -Jumpus(x))) -> Polly(x))", "all x.(Polly(x) | ((Polly(x) & Dumpus(x)) | (Polly(x) & Lorpus(x)) | -Jompus(x))))", "all x.(Polly(x) -> (Dumpus(x) | Lordpus(x) | -Jompus(x)))", "(exists x.(Polly(x) & Dumpus(x)) | exists y.(Lorpus(y) & -Jimpus(y))))"]}
{"id": "prontoqa_train_1123", "nl": "Everything that is a shumpus and a yumpus and a numpus is a dumpus.", "fol": "all x. ((shumpus(x) & yumpus(x) & numpus(x)) -> dumpus(x))", "prediction": ["all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yuumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.(((Shumpus(x) | Yuppus(x) | Numpus(x))) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) | Yompus(x) | Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Nash(x)) -> Dumpus(x))", "all x.(((Shumpus(x) | Yampus(x) | Numpus(x))) -> Dumpus(x))", "all x.((Shumpus(x) & Yusumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) | Yumus(x) | Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))"]}
{"id": "prontoqa_train_1124", "nl": "Stella is a shumpus.", "fol": "shumpus(Stella)", "prediction": ["(Hairy(Salvia) & Humpus(Stella))", "Stella is a shumpus.", "Stella is shumpus.", "Stella is shumpus.", "Stella is an shumpus.", "all x.(Shumpus(x) -> Stella(x))", "Stella is a shumpus.", "Stella is a shumpus.", "(Shumpus(Stella) -> Shumpus(Stella))", "all x.(Shumpus(x) -> Stella(x))", "Stella is a Shumpus(s).", "All x.(Shumpus(x) -> Stella(x))", "(Shumpus(Stella) & LivesIn(Stella))", "Stella is a Shumpus.", "(Shumpus(Stella)", "Stella (Shumpus)"]}
{"id": "prontoqa_train_1125", "nl": "Stella is a yumpus.", "fol": "yumpus(Stella)", "prediction": ["Stella is a yumpus.", "Stella is yumpus.", "Stella is a yumpus.", "Stella is yumpus.", "Stella is a Yumpa.", "All x.(Stella(x) -> Yampus(x))", "Stella is Yampus(Stella)", "Stella is yumpus.", "exists x.(Yumpus(x) & Stella(x))", "Stella is one of those creatures.", "Stella (yumpus)", "Stella is yumpus.", "Stella isYumpus(Stella)", "Stella is a Yompus.", "Stella is yumpus.", "Stella is yumpus."]}
{"id": "prontoqa_train_1126", "nl": "Stella is a grimpus or a dumpus or a gorpus.", "fol": "(grimpus(Stella) | dumpus(Stella) | gorpus(Stella))", "prediction": ["(Beverage(Stella) | (Stairs(Steller) | Dumpus(Stella))))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "(Stella(Stilla) -> (Grimpus(Sterna) | Dumpus(Sterna) | Gorpus(Sterna)))", "all x.(Stella(x) -> (Gripse(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Gruppus(x) | Dupus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Silverpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Agrossus(x) | Agrossus(x) | Agrossus(x)))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> ((Sailpuse(x) | Dumpus(x) | Gorpus(x))))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Gruese(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> ((Grumpus(x) | Dumpus(x) | Gorpus(x))))", "all x.(Stella(x) -> (Smoothpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1127", "nl": "Everything that is a yumpus, a lempus, and a sterpus is a gorpus.", "fol": "all x. ((yumpus(x) & lempus(x) & sterpus(x)) -> gorpus(x))", "prediction": ["all x.((Yumpus(x) & Lempus(x) & Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Steerpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Stosterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.(RequiresGorpus(x) -> (Yumpus(x) & Lempus(x) & Sterpus(x)))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Mercus(x))) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) & Lempus(x) & Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Steroid(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))"]}
{"id": "prontoqa_train_1128", "nl": "Max is a shumpus, Max is not a gorpus, and Max is a vumpus.", "fol": "(shumpus(Max) & -gorpus(Max) & vumpus(Max))", "prediction": ["all x.((Max(x) & Humpus(x)) -> (-Gorpus(x) & Vampire(x)))", "(all x.(Max(x) -> Shumpus(x)) & (-Max(x) -> Gorpus(x)) & (Max(x) -> Vampus(x))))", "(all x.(Max(x) -> Shumpet(x)) & (-Max(x) -> Gorpus(x)) & (-Max(x) -> Vuxpus(x)))", "(all x.(Max(x) -> Shumpus(x)) & all y.(Max(y) -> -Gorpus(y))) & all z.(Max(z) -> Vumpus(z)))", "(all x y.((Max(x) & Humpus(x)) -> Shumpus(x)) & ((Max(y) & -Gorpus(y)) -> Vumpus(y)))", "all x y.((Max(x) & Humpus(x)) -> (-Gorpus(x) & Dumpus(y)))", "(all x.(Max(x) -> Shumpus(x)) & (Max(x) -> -Gorpus(x)) & (Max(x) -> Vimpus(x)))", "all x.((Max(x) & Humpus(x)) -> -Gorpus(x)) & -Vimpus(x))", "(all x.(Max(x) -> Shumpus(x)) & (NoGorpus(x) & M(x)) | (Vumpus(x) -> Vulpas(x))))", "(all x y z.((Max(x) & Humpus(y) & Gorpus(z)) -> Human(x)) & ((Max(x) & Gorpus(x)) -> Dumpus(x)))", "(all x.(Max(x) -> Humpus(x)) & (Max(x) -> -Gorpus(x)) & (Max(x) -> Vamppus(x)))", "all x y z.((Max(x) & Humpus(y) & Gorpus(z)) -> (Shumpus(x) | (-Gorpus(y) & Vumpus(z)))))", "(all x.(Max(x) -> Humpus(x)) & (-Max(x) -> Gorpus(x)) &(Max(x) -> Vuze(x)))", "all x y z.((Max(x) & Simpus(x) & Gorpus(y) & Vuxus(z)) -> (Shumpus(x) | -Gorpus(y) & -Shumpus(z)))", "all x y z.((Max(x) & Shumpus(y) & Gorpus(z) & Vampis(x)) -> (Shumpus(x) & -Gorpus(x) & Vampus(x)))", "(all x.(Max(x) -> Humptue(x)) & (-Hammer(x) & -Gorpus(x))) & (Max(x) -> Vumpus(x)))"]}
{"id": "prontoqa_train_1129", "nl": "Each wumpus is a grimpus, a gorpus, and a sterpus.", "fol": "all x. (wumpus(x) -> (grimpus(x) & gorpus(x) & sterpus(x)))", "prediction": ["all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Smokey(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Aggravus(x) & Agverpus(x) & Agverpus(x) & Agverpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Smoothpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Groopus(x) | Storosal(x)))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Sgrimpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Smooch(x) & Gorpus(x) & Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) & Gorpus(x) & Sterpus(x)))", "(all x.(Wumpus(x) -> Grimpus(x)) & all y.(Gorpus(y) & All z.(Sterepus(z))) -> Sterpus(z)))", "all x.(Wumpus(x) -> (Crupid(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1130", "nl": "Max is a lempus, an impus, or a sterpus.", "fol": "(lempus(Max) | impus(Max) | sterpus(Max))", "prediction": ["all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))", "(all x.(Max(x) -> Lempus(x)) | all y.(Max(y) -> Impossible(y))) | all z.(Max(z) -> Sterpus(z))))", "all x.(Max(x) -> (Lempus(x) | Illusion(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Impossible(x) | Steroid(x)))", "all x.(Max(x) -> (Lempus(x) | Isol\u00e9(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Impossibly(x) | Sterpus(x)))", "(exists x.(Max(x) & Lempus(x)) | exists y.(Impress(y) & Issue(y)))) | exists z.(Max(z) & Sterpus(z))))", "all x.(Max(x) -> (Lempus(x) | Imperations(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Imperempt(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Impreza(x) | Sterpus(x)))", "all x.(Max(x) -> (Lumpus(x) | Imperator(x) | Steroid(x)))", "all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))", "(HasLempus(Max) | HasImfix(Max) | HasSterpus(Max))", "all x.(Max(x) -> (Lempus(x) | Eremit(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1131", "nl": "Everything that is a tumpus or a gorpus or a lorpus is a rompus, a zumpus, and a lempus.", "fol": "all x. ((tumpus(x) | gorpus(x) | lorpus(x)) -> (rompus(x) & zumpus(x) & lempus(x)))", "prediction": ["all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lampus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorompus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Tompus(x) | Gorpus(x) | Throat(x))) -> (Rompus(x) & Zumpus(x) & Lampus(x)))", "all x.((Tumpus(x) | Gorpus(x) | lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Crompus(x) | Zumpus(x) | Lempus(x)) -> (Tumpus(x) | Gorpus(x) | Lorpus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Bottompus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lampus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Psylocken(x) & (Tumpus(x) | Gorpus(x) | Lorpus(x))) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((Anything(x) & (Tumpus(x) | Gorpus(x) | Luminus(x))) -> (Rompus(x) & Zumpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_1132", "nl": "Everything that is a jompus and a rompus and a tumpus is a brimpus, a gorpus, and an impus.", "fol": "all x. ((jompus(x) & rompus(x) & tumpus(x)) -> (brimpus(x) & gorpus(x) & impus(x)))", "prediction": ["all x.((Jumpus(x) | Rompus(x) | Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Institutios(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) | Gorpus(x) | Impossible(x)))", "(all x.(Brompus(x) -> Brimpus(x)) & all y.(Crompus(y) -> Tompus(y))) & all z.(Improviser(z) -> Issue(z)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperative(x)))", "all x.((Jimpus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) | Gorpus(x) | Imperator(x)))", "all x.((Brimpus(x) | Gorpus(x) | Imperator(x)) -> (Jimpus(x) & Rompus(x) & Tumpus(x)))", "all x.((Jumpus(x) & Rompus(x) & Tumpus(x)) -> (Brumpus(x) & Gorpus(x) & impus(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) | Gorpus(x) | Imperium(x)))", "all x.((Jimpus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Impossible(x)))", "all x.((Pomeus(x) | Rompus(x) | Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Impossible(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Issue(x)))", "all x.((Molecule(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Impossible(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Impossible(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Isofix(x)))", "all x.((Brimpus(x) | Gorpus(x) | Impossible(x)) -> (Rompus(x) & Bulmus(x)))"]}
{"id": "prontoqa_train_1133", "nl": "Alex is a rompus.", "fol": "rompus(Alex)", "prediction": ["all x.(Alex(x) -> Rompus(x))", "All x.(Alex(x) -> Rupe(x))", "all x.((Alex(x) & Rompus(x)) -> Rompus(x))", "(Rompus(Alex)", "all x.(Alex(x) -> Romanose(x))", "all x.(Alex(x) -> Rompus(x))", "Alex is rompus.", "all x.(Alex(x) -> Rompus(x))", "all x.(Amber(x) -> Rompus(x))", "Alex (rompus)", "Alex is rompus.", "all x.(Alex(x) -> Rompus(x))", "all x.(Alex(x) & Rompus(x))", "all x.(Alex(x) -> Rompus(x))", "(Rompus(Alex) & Comes(Alex))", "all x.(Alex(x) -> Rompus(x))"]}
{"id": "prontoqa_train_1134", "nl": "Everything that is a zumpus and a tumpus and a wumpus is a shumpus, a rompus, and a dumpus.", "fol": "all x. ((zumpus(x) & tumpus(x) & wumpus(x)) -> (shumpus(x) & rompus(x) & dumpus(x)))", "prediction": ["all x.((Tommy(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) | Tumpus(x) | Wumpus(x)) -> (HasTompus(x) & HasTompus(x) & HasTompus(x) & HasTompus(x) & HasTompus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (shumpus(x) | rompus(x) | dumpus(x)))", "all x y.((Tompus(x) & Tumpus(y) & Wumpus(y)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) &Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Tompus(x) + Toumpus(x) & Toumpus(x) & Toumpus(x) & Toumpus(x)) -> (Sompus(x) & Sompus(x) & Sompus(x) & Sompus(x) & Sompus(x) & Sompus(x) & Sompus(x) & Sombus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rimpus(x) & Dumpus(x)))", "all x.((Tompus(x) | Tumpus(x) | Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Vibrant(x) & Zumpus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tumulus(x) & Wampus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Humpus(x) & Umbrella(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Tompus(x) & Taurus(x) & Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_1135", "nl": "Zumpuses are yumpuses.", "fol": "all x. (zumpus(x) -> yumpus(x))", "prediction": ["all x.(Zumpus(x) -> Yumphus(x))", "all x.(Zumpus(x) -> Yumba(x))", "ALL x.(Zumpuse(x) -> Yumpa(x))", "all x y.((Zumpus(x) & Yumpus(y)) -> Yampus(x))", "all x.(Zumpus(x) -> Yampus(x))", "all x.(Zumpus(x) -> Yampus(x))", "all x.(Zumpus(x) -> Yuga(x))", "all x.(Zumpus(x) -> Yampus(x))", "all x.(Zumpus(x) -> Yumpsum(x))", "all x.(Zumpus(x) -> Yampus(x))", "all x.(Zumpus(x) -> Yumpus(x))", "all x.(Zumpus(x) -> Yampus(x))", "all x.(Zumpus(x) -> Yampus(x))", "all x.(Zumpus(x) -> Yumpus(x))", "all x.(Zumpuse(x) -> Yampus(x))", "all x.(Zumpus(x) -> Yumpus(x))"]}
{"id": "prontoqa_train_1136", "nl": "Sam is a zumpus and a yumpus and a gorpus.", "fol": "(zumpus(Sam) & yumpus(Sam) & gorpus(Sam))", "prediction": ["all x y.((Sam(x) & Zumpus(y)) -> (Yumpus(x) & Gorpus(x)))", "all x.(Sam(x) -> (Zimpus(x) | Yompus(x) | Gorpus(x)))", "all x.(Sam(x) -> (Tompus(x) & Yampus(x) & Gorpus(x)))", "all x.(Sam(x) -> (Tompus(x) & Yumpus(x) & Gorpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Yumpus(x) & Worpus(x)))", "all x.(Sam(x) -> (Grompus(x) & Zumpus(x) & Yumpus(x) & Gorpus(x)))", "all x.(Sam(x) -> (Tompus(x) & Yumpus(x) & Gorpus(x)))", "all x.(Sam(x) -> (Tompus(x) & Yampus(x) & Dorpus(x)))", "all x y.((Sam(x) & Zumpus(y)) -> (Yumpus(x) & Gorpus(y)))", "all x y.((Sam(x) & Zumpus(y)) -> (Tompus(x) | Yumpus(y) | Gorpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Yumpus(x) -> Gorpus(x)))", "all x y.((Sam(x) & Zumpus(y)) -> (Yumpus(z) & Gorpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Yompus(x) | Gorpus(x)))", "all x.(Sam(x) -> (Tompus(x) & Yumpus(x) & Gorpus(x)))", "all x.(Sam(x) -> (Zumpus(x) | Yumpus(x) | Gorpus(x)))", "all x y z.((Sam(x) & Zumpus(y) & Yumpus(z)) -> (Tompus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1137", "nl": "Sam is a zumpus or a rompus or a yumpus.", "fol": "(zumpus(Sam) | rompus(Sam) | yumpus(Sam))", "prediction": ["all x.(Sam(x) -> (Tompus(x) | Rompus(x) | Yampus(x)))", "all x.(Sam(x) -> (Tompus(x) | Rompus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Zumpus(x) | Rompus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Rompus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Rompus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tommpus(x) | Rompus(x) | Yumpus(x)))", "all x y.((Sam(x) & Zumpus(x) | Rompus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tommpus(x) | Rompus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Rompus(x) | Yumpus(x)))", "all x denominator(x) -> (Tompus(x) | Rompus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Rompus(x) | Yumpus(x)))", "exists x.(Sam(x) & (Tompus(x) | Rompus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tommus(x) | Rompus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Rompus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Rompus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Rompus(x) | Yumpus(x)))"]}
{"id": "prontoqa_train_1138", "nl": "Each rompus is a lempus, an impus, and a zumpus.", "fol": "all x. (rompus(x) -> (lempus(x) & impus(x) & zumpus(x)))", "prediction": ["all x.(Rompus(x) -> (Lempus(x) | Impossible(x) | Zumpus(x)))", "all x.(Rompus(x) -> (Lempus(x) | Issue(x) | Zumpus(x)))", "(all x.(Rompus(x) -> Lempus(x)) & all y.(Improper(y) -> Zumpus(y)))", "all x.(Rompus(x) -> (Lempus(x) & Impossible(x) & Zumpus(x)))", "all x.(rompus(x) -> (Limpus(x) & Impossible(x) & Zumpus(x)))", "all x.(Rompus(x) -> (Lempus(x) | Issue(x) | Zumpus(x)))", "all x.(ROMPUS(x) -> (Lempus(x) | Issue(x) | Zumpus(x)))", "all x.(Rompus(x) -> (IsLempus(x) & IsImperial(x) & IsZumpus(x)))", "all x.(Rimpus(x) -> (Lempus(x) | Impossible(x) | Zumpus(x)))", "all x.(Rompus(x) -> (Lempus(x) & Isolated(x) & Zumpus(x)))", "all x.(rompus(x) -> (Lempus(x) & Imperative(x) & Zumpus(x)))", "exists x.(Rompus(x) & Lempus(x) & Impermiss(x) & Zumpus(x))", "all x.(Rompus(x) -> (Lempus(x) | Issue(x) | Zumpus(x)))", "all x.(Rompus(x) -> ((Lempus(x) & Issue(x)) | (Issue(x) & Zumpus(x))))", "all x.(Rompus(x) -> (Lempus(x) | Imperemptor(x) | Zumpus(x)))", "all x.(Rompus(x) -> (Lempus(x) & Impossible(x) & Zumpus(x)))"]}
{"id": "prontoqa_train_1139", "nl": "Stella is a dumpus or a shumpus or an impus.", "fol": "(dumpus(Stella) | shumpus(Stella) | impus(Stella))", "prediction": ["all x.(Stella(x) -> (Dumus(x) | Shumpus(x) | Imperator(x)))", "(all x.(Stella(x) -> Dumpus(x)) | (Shumpus(x) | Impeccable(x))))", "all x.(Stella(x) -> (Dumpus(x) | Humpus(x) | Illusion(x)))", "all x.(Stella(x) -> (Impossible(x) | (Impossible(x) | Impossible(x))))", "all x.(Stella(x) -> (Dumpus(x) | Humpus(x) | Issue(x)))", "all x.(Stella(x) -> (Dumpus(x) | Humpus(x) | Ivory(x)))", "all x.(Miles(x) & (Dumpus(x) | Shumpus(x) | Imperator(x)))", "(Dumus(Stella) | Humpus(Stella) | Impermissible(Stella)))", "all x.(Stella(x) -> (Dumus(x) | Shumpus(x) | Imperator(x)))", "((Stella(s) | Dumpus(s)) | Humpus(s)) | Imponzionist(s)))", "all x.(Stella(x) -> ((Dumpus(x) | Humpus(x) | Impermissible(x))))", "(Dumpus(Stella) | Humpus(Stella) | Impeccable(Stella)))", "all x.(Stella(x) -> (Dumpus(x) | Humpus(x) | Impossible(x)))", "all x.(Stella(x) -> (Dumpus(x) | Humpus(x) | Impus(x)))", "all x.(Stella(x) -> (Dumpus(x) | Humpus(x) | Impera(x)))", "all x.(Stella(x) -> (Dumpus(x) | Humpus(x) | Impeccable(x)))"]}
{"id": "prontoqa_train_1140", "nl": "Everything that is a gorpus or a grimpus or a shumpus is a sterpus, a rompus, and a vumpus.", "fol": "all x. ((gorpus(x) | grimpus(x) | shumpus(x)) -> (sterpus(x) & rompus(x) & vumpus(x)))", "prediction": ["all x.((Gorpus(x) | Grimpus(x) | Shumpus(x)) -> (Stropus(x) & Rompus(x) & Vumpus(x)))", "all x.((Gorpus(x) | Grimpus(x) | Humpus(x)) -> (Stereopus(x) | Rompus(x) | Pumpus(x)))", "all x.((Gorpus(x) | Grimpus(x) | Shumpus(x)) -> (Sterpus(x) & Rompus(x) & Vumpus(x)))", "all x.((Sterpus(x) | Grompus(x) | Humpus(x)) -> (Sterpus(x) & Rompus(x) & Vumpus(x)))", "all x.((Gorpus(x) | Grimpus(x) | Shumpus(x)) -> (Sterpus(x) & Rompus(x) & Vumpus(x)))", "all x.((Gorpus(x) | Grimpus(x) | Humpus(x)) -> (Sterpus(x) & Rompus(x) & Vumpus(x)))", "all x.((Gorpus(x) | Grimpus(x) | Shumpus(x)) -> (Stereopus(x) & Rompus(x) & Vumpus(x)))", "all x.((Gorpus(x) | Grimpus(x) | Shumpus(x)) -> (Sterpus(x) | Rompus(x) | Vumpus(x)))", "all x.((Gorpus(x) | Grimpus(x) | Shumpus(x)) -> (Sterepus(x) & Rompus(x) & Vumpus(x)))", "all x.((Gorpus(x) | Grimpus(x) | Shumpus(x)) -> (Sterpus(x) | Rompus(x) | Vumpus(x)))", "all x.((Gorpus(x) | Grimpus(x) | Shumpus(x)) -> (Sterepus(x) & Rompus(x) & Vumpus(x)))", "all x.((Gorpus(x) | Grimpus(x) | Humpus(x)) -> (Sterpus(x) & Rompus(x) & Vumpus(x)))", "all x.((Gorpus(x) | Grimpus(x) | Schumpus(x)) -> (Therpus(x) & Rhopus(x) & Vumpus(x)))", "all x.((Gropus(x) | Grimpus(x) | Humpus(x)) -> (Sherpus(x) & Stompus(x) & Rompus(x) & Vamine(x)))", "all x.((Gorpus(x) | Grimpus(x) | Humpus(x)) -> (Sterpus(x) & Sterpus(x) & Rompus(x) & Vacus(x)))", "all x.((Gorpus(x) | Grimpus(x) | Humpus(x)) -> (Sterepus(x) & Rompus(x) & Vumpus(x)))"]}
{"id": "prontoqa_train_1141", "nl": "Each jompus is a rompus and an impus and a yumpus.", "fol": "all x. (jompus(x) -> (rompus(x) & impus(x) & yumpus(x)))", "prediction": ["all x.(Jompus(x) -> (Rompus(x) & Ismuel(x) & Yumpus(x)))", "all x.(Jompus(x) -> (Rompus(x) & IssueLadder(x) & Yumpus(x)))", "all x.(Jompus(x) -> (Rompus(x) & Impossible(x) & Yumpus(x)))", "all x.(Jompus(x) -> (Rompus(x) & -Impossivus(x) & Yumpus(x)))", "all x.(Jompus(x) -> (rompus(x) & Issue(x) & Yumpus(x)))", "all x.(Jompus(x) -> (Rompus(x) & Issue(x) & Yumpus(x)))", "(all x.(Jompus(x) -> Rompus(x)) & (Issue(x) | Yumpus(x))))", "all x.(Jompus(x) -> (Rompus(x) & Issue(x) & Yumpus(x)))", "all x.(Jompus(x) -> (Rompus(x) & Impossible(x) & Yumpus(x)))", "all x.(Jompus(x) -> (Rompus(x) & Imperator(x) & Yumpus(x)))", "(all x.(Jompus(x) -> (Rompus(x) & Impossible(x) & Yumpus(x)))", "all x.(Jimpus(x) -> (Rompus(x) & Issue(x) & Yumpus(x)))", "all x.(Jompus(x) -> (Rompus(x) & Issue(x) & Yampus(x)))", "all x.(Jompus(x) -> (Rompus(x) & Imperator(x) & Yumpus(x)))", "is a rompus (or a symphony) & exists x.(Jompus(x) & Ispos(x)) & exists y.(Yumpus(y)))", "all x.(Jompus(x) -> (Rompus(x) & Imperator(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1142", "nl": "Sam is a zumpus or a brimpus or a yumpus.", "fol": "(zumpus(Sam) | brimpus(Sam) | yumpus(Sam))", "prediction": ["all x.(Sam(x) -> (Tompus(x) | Brimpus(x) | Yuppus(x)))", "all x.(Sam(x) -> (Simpus(x) | Brimpus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Brimpus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Brimpus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Brimpus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Brimpus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Brimpus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Brimpus(x) | Yumpus(x)))", "(Tompus(Sam) | Brimpus(Sam) | Yumpus(Sam)))", "all x.(Sam(x) -> (Zumpus(x) | Brimpus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Brimpus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Bean(x) | Beam(x) | Yumpus(x)))", "(Tompus(Sam) | Brimpus(Sam) | Yumpus(Sam)))", "all x.(Sam(x) -> (Himpus(x) | Brimpus(x) | Yumpus(x)))", "(BetweenZumpus(sam) | Brimpus(sam) | Yumpus(sam)))", "all x.(Sam(x) -> (Tompus(x) | Brimpus(x) | Yumpus(x)))"]}
{"id": "prontoqa_train_1143", "nl": "Each jompus is a vumpus, a lempus, and a tumpus.", "fol": "all x. (jompus(x) -> (vumpus(x) & lempus(x) & tumpus(x)))", "prediction": ["all x.(Jompus(x) -> (Vuxes(x) & Lempus(x) & Tumpus(x)))", "all x.(Jompus(x) -> (Vumpus(x) & Lempus(x) & Tumpus(x)))", "all x.(Jompus(x) -> (Vumpus(x) & Lempus(x) & Tumpus(x)))", "all x.(Jompus(x) -> (Vumpus(x) & Lempus(x) & Tumpus(x)))", "all x.(Jompus(x) -> (Vampus(x) | Lempus(x) | Tumpus(x)))", "all x.(Jompus(x) -> (Vumpus(x) | Lempus(x) | Tumpus(x)))", "all x.(Jompus(x) -> (Vumpus(x) & Lempus(x) & Tumor(x)))", "all x.(Jompus(x) -> (Vumpus(x) | Lempus(x) | Tumpus(x)))", "all x.(Jompus(x) -> (Vumpus(x) & Lempus(x) & Tumpus(x)))", "all x.(Jimpus(x) -> (Elements(x) & (Vimpus) | Lempus(x) | Tumpus(x))))", "all x.(Jompus(x) -> (Vumpus(x) & Lempus(x) & Tumpus(x)))", "all x.(Jompus(x) -> (Vimpus(x) & Lempus(x) & Tumpus(x)))", "all x.(Jompus(x) -> (Vumpus(x) & Lempus(x) & Tumpus(x)))", "all x.(Jompus(x) -> (Vumpus(x) | Lempus(x) | Tumpus(x)))", "(all x.(Jompus(x) -> Vubis(x)) & all y.(Lempus(y) & All z.(Tumpus(z)) -> Tumpus(x)))", "all x.(Jompus(x) -> (Vumpus(x) | Lempus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1144", "nl": "Sam is a tumpus, a lempus, or a rompus.", "fol": "(tumpus(Sam) | lempus(Sam) | rompus(Sam))", "prediction": ["(all x.(Sam(x) -> Tumpus(x)) | (Lempus(x) | Rompus(x))))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Sam(x) -> (Tompus(x) | Lempus(x) | Rompus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "(all x.(Sam(x) -> Tumpus(x)) | (Lempus(x) | Rompus(x))))"]}
{"id": "prontoqa_train_1145", "nl": "Everything that is a tumpus or a shumpus or a grimpus is a sterpus, a rompus, and a yumpus.", "fol": "all x. ((tumpus(x) | shumpus(x) | grimpus(x)) -> (sterpus(x) & rompus(x) & yumpus(x)))", "prediction": ["all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> (Sterepus(x) & Rompus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> (Sterepus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> (Sterpus(x) & Rompus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> (Sterpus(x) & Rumpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> (Sterpus(x) & Rompus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Gruppus(x)) -> (Sterpus(x) & Rompus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> (Sterpus(x) & Rompus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> (Steerpus(x) & Rompus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> (Sterpus(x) & Rompus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> (Sterus (x) & Rompus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Spompus(x) + Grimpus(x)) -> (Sterpus(x) | Rompus(x) | Yumpus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> (Sterpus(x) & Rompus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> (Sterpus(x) | Rompus(x) | Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> (Sterpus(x) & Rhopus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> (Sterpus(x) | Rompus(x) | Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> (Sternus(x) & Rompus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1146", "nl": "Every grimpus is a vumpus.", "fol": "all x. (grimpus(x) -> vumpus(x))", "prediction": ["all x.(Grimpus(x) -> Vumpus(x))", "all x.(Grimpus(x) -> Vumpus(x))", "all x y.((Raumpus(x) & Gryps(y)) -> Vaporpus(x))", "all x.(Grimpus(x) -> Vubis(x))", "all x.(Grimpless(x) -> Vumpus(x))", "all x.(Grampus(x) -> Vumpus(x))", "all x.(Smoothpus(x) -> Vulmpus(x))", "all x.(Grimpus(x) -> Vumpus(x))", "all x.(Gripper(x) -> Vimpus(x))", "all x.(Scrappus(x) -> Vumpus(x))", "all x.(Grimpus(x) -> Mimpus(x))", "all x.(Grimpus(x) -> Vumpus(x))", "all x.(Grampus(x) -> Vampus(x))", "all x.(Gruppus(x) -> Vumpus(x))", "all x.(Grimpus(x) -> Vaultpus(x))", "exists x.(Grimpus(x) & Vampum(x))"]}
{"id": "prontoqa_train_1147", "nl": "Rex is a shumpus, Rex is a tumpus, and Rex is not a vumpus.", "fol": "(shumpus(Rex) & tumpus(Rex) & -vumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Suromus(x)) & all y.(Rex(y) -> Tumulus(y)) & all z.(Rex(z) -> -Vumpus(z))))", "(all x.(Rex(x) -> Humpus(x)) & all y.(Rex(y) -> Tumpus(y)) & all z.(Rex(z) -> -Vimpus(z))))", "(all x y z.(Rex(x) -> Discussion(x,y,z)) & ((Rex(z) & Discussion(z))) -> (Shumpus(x) & Tumpus(z))) & ((Rex(x) & Discussion(x)) -> -Vumpus(x))))", "(all x.(Rex(x) -> Shumpus(x)) & (Rex(x) -> Tumulus(x)) & (Rex(x) -> -Vumpus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (Rex(x) -> Tumpus(x)) & (Rex(x) -> -Vumpus(x))))", "(all x.(Rex(x) -> Humpus(x)) & (Tumpus(x) & -Fumpus(x)))", "(all x.(Rex).(Shumpus(x) & Tumpus(x)) & -Vumpus(x))", "a.(Rex(a) -> (Shumpus(a) & Tumpus(a) & -Vumpus(a)))", "(all x y z.((Rex(x) & Humpus(y) & Tumpus(z)) -> Is(x,y)) & ((Rex(x) & Tumpus(z)) -> Is(x,z))) & ((Rex(x) & -Vumpus(x)) -> Is(x,y))))", "(all x.(Rex(x) -> Humpback(x)) & all y.(Rex(y) -> Tumpus(y)) & -Vuimpus(y)))", "(all x.(Rex(x) -> Humpus(x)) & all y.(Tumpus(y) & -Vumpus(y)))", "(all x.(Rex(x) -> Shaumus(x)) & all y.(Rex(y) -> Tumpus(y))) & all z.(Rex(z) -> -Vumpus(z))))", "(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> Tumpus(x)) & (Rex(x) -> -Vumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> Tumpus(x)) & -Vumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & all y.(Rex(y) -> Tumpus(y)) & all z.(Rex(z) -> -Vumpus(z))))", "(all x y z.(Shumpus(x) -> Shumpus(x)) & (Tumpus(y) -> Tumpus(y)) & (Vumpus(z) -> -Shumpus(z)))"]}
{"id": "prontoqa_train_1148", "nl": "Rex is a gorpus or Rex is not a grimpus or Rex is a zumpus.", "fol": "(gorpus(Rex) | -grimpus(Rex) | zumpus(Rex))", "prediction": ["all x.(Rex(x) & (Gorpus(x) | -Grimpus(x) | Zumpus(x)))", "(all x.(Rex(x) -> Gorpus(x)) | (-Grimpus(x) & Zumpus(x))))", "all x y.((Rex(x) & Gorpus(x)) | (-Grimpus(x) | Zumpus(y))))", "(all x.(Rex(x) -> Gorpus(x)) & (-Grimpus(x) | Zumpus(x))))", "(ALL x.(Rex(x) -> Gorpus(x)) | (-Grimpus(x)) | Zumpus(x))))", "(all x.(Rex(x) -> Gorpus(x)) | (-Grippus(x)) | Zumpus(x)))", "(exists x.(Rex(x) & Gorpus(x)) | (-Grimpus(x) | Zumpus(x))))", "all x.(Rex(x) -> (Gorpus(x) | -Grimpus(x) | Zumpus(x)))", "(a.(Rex,Gorpus)) | (-Grimpus(Rex) | Zumpus(Rex))))", "all x y.((Rex(x) & Gorpus(x) & (-Grimpus(y) | Zumpus(y))) -> Gorpus(x))", "all x.((Rex(x) & (Gorpus(x) | -Grimpus(x) | Zumpus(x))) -> Gorpus(x))", "all x.(Rex(x) -> ((Gorpus(x) | -Grimpus(x)) | Zumpus(x)))", "((Gorpus(rex) | -Grippus(rex) | Zumpus(rex)))", "all x.(Rex(x) -> (Gorpus(x) | -Scrumpus(x) | Zumpus(x)))", "all x y.((Rex(x) & Gorpus(x) & (-Grimpus(y) | Zumpus(y))) -> Is(x,y))", "all x.(Rex(x) | (-Grimpus(x) | Zumpus(x))))"]}
{"id": "prontoqa_train_1149", "nl": "Everything that is a rompus and a lempus and an impus is a grimpus, a brimpus, and a zumpus.", "fol": "all x. ((rompus(x) & lempus(x) & impus(x)) -> (grimpus(x) & brimpus(x) & zumpus(x)))", "prediction": ["all x.((Rompus(x) & Lempus(x) & Impossible(x)) -> (Grimpus(x) | Brimpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Lempus(x) & Imperemptors(x)) -> (Grimpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Lempus(x) & Imperator(x)) -> (Smoothpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Lempus(x) & Imperator(x)) -> (Grimpus(x) | Brimpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Lempus(x) & Impermiss(x)) -> (Grimpus(x) | Brimpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Lempus(x) & Imperator(x)) -> (Grimpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Lempus(x) & Imposer(x)) -> (Grimpus(x) | Brimpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Lempus(x) & Impossible(x)) -> (Grimpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Lempus(x) & Implicator(x)) -> (Grimpus(x) | Brimpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Lempus(x) & Imperator(x)) -> (Agreement(x) & Agreement(x) & Agreement(x) & Agreement(x)))", "all x.((Rompus(x) & Lempus(x) & impus(x)) -> (Grimpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Lempus(x) & Imperative(x)) -> (Grimpus(x) | Brimpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Lempus(x) & Imperative(x)) -> (Grimpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((IsRompus(x) & IsLempus(x) & IsIssue(x)) -> (Grippus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Lempus(x) & Imperator(x)) -> (Grimpus(x) | Brimpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Lempus(x) & Issues(x)) -> (Smoke(x) & Brimpus(x) & Zumpus(x)))"]}
{"id": "prontoqa_train_1150", "nl": "Everything that is a gorpus, a zumpus, and a jompus is a numpus and a vumpus and a brimpus.", "fol": "all x. ((gorpus(x) & zumpus(x) & jompus(x)) -> (numpus(x) & vumpus(x) & brimpus(x)))", "prediction": ["all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & -Vuxus(x) & -Brimpus(x)))", "all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (numpus(x) & vumpus(x) & brimpus(x)))", "all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (Numerus(x) & Vumpus(x) & Brimpus(x)))", "all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Vumpus(x) & Brimpus(x)))", "all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & -Vumpus(x) & -Brimpus(x)))", "all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Vupus(x) & Brimpus(x)))", "all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (Number(x) & Vempus(x) & Brimpus(x)))", "all x.((Gorpus(x) | Zumpus(x) | JOMpus(x)) -> ((Numpus(x) & -Vumpus(x) & Brimpus(x))))", "all x.((Rosp(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) | Vumpus(x) | Brimpus(x)))", "all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (numpus(x) & vumpus(x) & brimpus(x)))", "all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (Nompus(x) & Vumpus(x) & Brumpus(x)))", "all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (Numerus(x) & V\u00e9mis(x) & Brimpus(x)))", "all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Vumpus(x) & Brimpus(x)))", "all x.((Resource(x) & Gorpus(x) & Zumpus(x) & Jompus(x)) -> (numpus(x) & vumpus(x) & brimpus(x)))", "all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Vumpus(x) & Brimpus(x)))", "all x.((Gorpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Vumpus(x) & Brimpus(x)))"]}
{"id": "prontoqa_train_1151", "nl": "Wren is a gorpus.", "fol": "gorpus(Wren)", "prediction": ["all x.(Wren(x) -> Gorpus(x))", "all x.(Wren(x) -> Gorpus(x))", "all x.(Wren(x) -> Gorpus(x))", "all x.(Wren(x) -> Gorpus(x))", "all x.(Wren(x) -> Gorpus(x))", "(Gorpus(Wren) & DoesNotGorpa(Wren))", "all x.(Wren(x) -> Gorpus(x))", "all x.(Wren(x) -> Gorpus(x))", "all x.(Wren(x) -> Raccoon(x))", "all x.(Wren(x) -> Gorpus(x))", "all x.(Wren(x) -> Gorpus(x))", "all x.(Wren(x) -> Gorpus(x))", "all x.(Wren(x) -> Gorpus(x))", "all x.(Wren(x) -> (Gorpus(x) & Bear(x)))", "all x.(Wren(x) -> Dorpus(x))", "all x.(Wren(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_1152", "nl": "Wren is a jompus.", "fol": "jompus(Wren)", "prediction": ["all x.(Wren(x) -> Jompus(x))", "all x.(Wren(x) -> Jompus(x))", "all x.(Wren(x) -> Jompus(x))", "exists x.(Wren(x) & Jompus(x))", "all x.(Wren(x) -> Jompus(x))", "all x.(Wren(x) -> Jompus(x))", "all x.(Wren(x) -> Jompus(x))", "(Jompus(Wren) & Joompus(w))", "all x.(Wren(x) -> Jompus(x))", "(Jampus(Wren) & IsBarkly(Wren))", "all x.(Wren(x) -> Jompus(x))", "all x.(Wren(x) -> Jompus(x))", "all x.(Wren(x) -> Jompus(x))", "all x.(Wren(x) -> Jompus(x))", "(Jompus(Wren))", "all x.(Wren(x) -> Jompus(x))"]}
{"id": "prontoqa_train_1153", "nl": "Everything that is a dumpus or a wumpus or a tumpus is a sterpus, a yumpus, and a vumpus.", "fol": "all x. ((dumpus(x) | wumpus(x) | tumpus(x)) -> (sterpus(x) & yumpus(x) & vumpus(x)))", "prediction": ["all x.(((Dumpsus(x) | Wumpus(x) | Tumpus(x))) -> (Sterpus(x) | Yampus(x) | Vumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Sterpus(x) & Youmpus(x) & Vumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Sterpus(x) & Yumpus(x) & Vampis(x)))", "all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Sterepus(x) | Yumpus(x) | Vumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Sterpus(x) | Yompus(x) | Vumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Sterepus(x) & Yumpus(x) & Vumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Sterpus(x) | Yumpus(x) | Vubis(x)))", "all x.((Tumpus(x) & (Dumpus(x) | Wumpus(x) | Tumpus(x))) -> (Sterepus(x) | Yampus(x) | Vumpus(x)))", "all x.((Sterpus(x) | Yampus(x) | Vumpus(x)) -> (Dumpus(x) | Wumpus(x) | Tumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Sterpus(x) & Yumpus(x) & Vumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Sterepus(x) | Yampus(x) | Vumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Sterepus(x) & Yampus(x) & Vumpus(x)))", "all x.((Dumus(x) | Wumpus(x) | Tumpus(x)) -> (Sternus(x) | Yumpus(x) | Voluptus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Ssterpus(x) & Yampus(x) & Vumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Strotpus(x) | Yempus(x) | Vumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Tumpus(x)) -> (Sterpus(x) | Yampus(x) | Vumpus(x)))"]}
{"id": "prontoqa_train_1154", "nl": "Vumpuses are not rompuses.", "fol": "all x. (vumpus(x) -> -rompus(x))", "prediction": ["all x.(Vumpus(x) -> -Rumpus(x))", "all x.(Vumpus(x) -> -rompus(x))", "all x.(Vumpus(x) -> -Rompus(x))", "all x.(Vumpus(x) -> -rompus(x))", "all x.(Vumpus(x) -> -Rompus(x))", "all x.(Vumpus(x) -> -Rompus(x))", "all x.(Vumpus(x) -> -rompus(x))", "all x.(Vumpus(x) -> -Rompus(x))", "all x.(Vumpus(x) -> -rompus(x))", "all x.(Vumpus(x) -> -Rompus(x))", "all x.(Vumpus(x) -> -Rompus(x))", "all x.(Vumpus(x) -> -rompus(x))", "all x.(Vumpus(x) -> -rompus(x))", "all x.(Vumpus(x) -> -Rompus(x))", "all x.(Vumpus(x) -> -rompus(x))", "(all x.(Vumpus(x) -> -rompus(x)))"]}
{"id": "prontoqa_train_1155", "nl": "Every brimpus is a rompus.", "fol": "all x. (brimpus(x) -> rompus(x))", "prediction": ["all x.(Brumpus(x) -> Rompus(x))", "all x.(Brompus(x) -> Rhopus(x))", "all x.(Brumpus(x) -> Rompus(x))", "all x.(Brimpus(x) -> Rompus(x))", "all x.(Brumpus(x) -> Rompus(x))", "all x.(Brumpus(x) -> Rompus(x))", "all x.(Brumpus(x) -> Rompus(x))", "all x.(Brumpus(x) -> Rompus(x))", "all x.(Brahmet(x) -> Rompus(x))", "all x.(Brimpus(x) -> Rompus(x))", "all x.(Brompus(x) -> Rompus(x))", "all x.(Brumpus(x) -> Rompus(x))", "all x.(Brumpus(x) -> Rompus(x))", "all x.(Brumpus(x) -> Rompus(x))", "all x.(Brumpus(x) -> Rompus(x))", "all x.(Brumpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_1156", "nl": "Fae is a numpus or Fae is not a brimpus or Fae is a lorpus.", "fol": "(numpus(Fae) | -brimpus(Fae) | lorpus(Fae))", "prediction": ["all x.(Fae(x) -> (Numpus(x) | -Brimpus(x) | Lorpus(x)))", "(All x.(Fae(x) -> Numpus(x)) | (-Fae(x) & Brimpus(x)) | (-Fae(x) & Lorpus(x))))", "(all x.(Fae(x) -> Numpus(x)) | (-Brimpus(x) & Lower(x))))", "all x.((Fae(x) & (Numpus(x) | -Brimpus(x) | Lorpus(x))) -> (Numpus(x) | Loperpus(x)))", "all x.(Fae(x) -> (Numpus(x) | -Brimpus(x) | Loompus(x)))", "all x.(Fae(x) -> (Numpus(x) | -Brimpus(x) | -Lorpus(x)))", "(all x.(Sumpus(x) | -Sumpus(x)) | (Sumpus(x) | Lorpus(x))))", "(all x.(Fae(x) -> Numpus(x)) | (-Brumpus(x) | Lorpus(x))))", "all x.(Fae(x) -> ((Numerus(x) | -Brimpus(x) | Lorpus(x))))", "(all x.(Fae(x) -> Numpus(x)) | (-Fae(x) & Brimpus(x)) | Lordpus(x)))", "((Fae isNumpus(f) | Fae isNotBrimpus(f) | Fae isLorpus(f)))", "(all x.(Fae(x) -> Numpus(x)) & (-Brimpus(x) | Lodpus(x))))", "((Fae isNumpus(f) | Fae isBrimpus(f)) | Fae isLorpus(f)) -> -Numpus(f))", "(all x.(Fae(x) -> Numpus(x)) | (-Brimpus(x) | Lorpus(x))))", "all x y.((Fae(x) & Numpus(x)) | (-Brigadis(x) | Lorpus(y))))", "(Either Faen(f) -> (numpus(f) | Faen(f) -> -brimpus(f) | Faen(f) -> lorpus(f)))"]}
{"id": "prontoqa_train_1157", "nl": "Every jompus is a brimpus and a rompus and a numpus.", "fol": "all x. (jompus(x) -> (brimpus(x) & rompus(x) & numpus(x)))", "prediction": ["all x.(Jompus(x) -> (Brimpus(x) & Rompus(x) & Numpus(x)))", "all x.(Jompus(x) -> (Brimp(x) & Rompus(x) & Numpus(x)))", "all x.(Jompus(x) -> (Brimpus(x) & Rompus(x) & Numpus(x)))", "all x.(Jompus(x) -> (Brimpus(x) & Rompus(x) & Numpus(x)))", "(all x.(Jompus(x) -> Brimpus(x)) & exists y.(Rompus(y) & exists z.(Numerus(z) & InJompus(y,z)))))", "all x.(Jompus(x) -> (DeclinedBrumpus(x) & DeclinedRompus(x) & DeclinedNumpus(x)))", "(all x.(Jompus(x) -> Brimpus(x)) & (Rompus(x) & -Brompus(x)))", "all x.(Jompus(x) -> (Brimpus(x) & Rompus(x) & Numpus(x)))", "all x.(Jompus(x) -> (Brimpus(x) | Rompus(x) | Numpus(x)))", "all x.(Jompus(x) -> (Brimpus(x) & Rompus(x) & Numpus(x)))", "all x y z w.((Jompus(x) & Brimpus(y) & Rompus(z)) -> (IsBrimpus(x) & IsRompus(x) & IsNompus(x)))", "all x.(Jompus(x) -> (Brumpus(x) & Rompus(x) & Numpus(x)))", "all x.(Jompus(x) -> (Brimpus(x) & Rompus(x) & Numpus(x)))", "all x.(Jompus(x) -> (Brimpus(x) & Rome(x) & Numpus(x)))", "all x.(Jompus(x) -> ((Brimpus(x) & Rompus(x)) | Numpus(x))))", "all x.(Jompus(x) -> (Brimpus(x) & Rompus(x) & Numpus(x)))"]}
{"id": "prontoqa_train_1158", "nl": "Every sterpus is not a numpus.", "fol": "all x. (sterpus(x) -> -numpus(x))", "prediction": ["all x.(Sterpus(x) -> -numpus(x))", "all x.(Sterpus(x) -> -Numerus(x))", "all x.(Sterpus(x) -> -Number(x))", "all x.(Sterepus(x) -> -numpus(x))", "all x.(Sterpus(x) -> -Numpus(x))", "all x.(Sterpus(x) -> -Numpus(x))", "all x.(Sterpus(x) -> -Numpus(x))", "all x.(Sterpus(x) -> -Numpus(x))", "-Numpus(sterpus)", "all x.(Sterpus(x) -> -Numpus(x))", "all x.(Sterpus(x) -> -Nomulus(x))", "all x.(Sterpus(x) -> -Number(x))", "all x.(Sterpus(x) -> -Numpus(x))", "all x.(Sterpus(x) -> -Numpus(x))", "all x.(Sterepus(x) -> -Numpus(x))", "all x.(Sterpus(x) -> -Numpus(x))"]}
{"id": "prontoqa_train_1159", "nl": "Wren is a brimpus and a wumpus and a sterpus.", "fol": "(brimpus(Wren) & wumpus(Wren) & sterpus(Wren))", "prediction": ["all x.(Wren(x) -> ((Brimpus(x) & Wombus(x)) & Sterpus(x))))", "all x.(Wren(x) -> (Brimpus(x) & Wumpus(x) & Sterpus(x)))", "all x.(Wren(x) -> (Brimpus(x) & Wompus(x) & Terpus(x)))", "all x.(Wren(x) -> (Brimpus(x) & Wumpus(x) & Steroid(x)))", "(all x.(Wren(x) -> Brimpus(x)) & exists y.(Wumpus(y) | Sterpus(y))))", "all x.(Wren(x) -> (Brumpus(x) | Wumpus(x) | Sternpus(x)))", "all x.(Wren(x) -> (Brimpus(x) & Wumpus(x) & Sterepus(x)))", "all x.(Wren(x) -> (Brimpus(x) & Wormpus(x) & Sterpus(x)))", "(all x y z.(Wren(x) -> (Brimpus(y) & Hush(z) & Sterus(z)))", "all x y z.((Wren(x) & Brampus(y) & Rumpus(z)) -> (IsBrimpus(x) & IsWumpus(y) & IsStreep(z)))", "all x.(Wren(x) -> (Brimpus(x) | Wumpus(x) | Sterpus(x)))", "all x.(Wren(x) -> ((Brimpus(x) & Wumpus(x)) | Sterpus(x)))", "all x.(Wren(x) -> (Brimpus(x) & Wompus(x) & Sterpus(x)))", "all x.(Warn(x) -> (Brimpus(x) & Wumpus(x) & Spectross(x)))", "all x.(Wren(x) -> (Brimpus(x) & Wumpus(x) & Sterpus(x)))", "all x.(Wren(x) -> exists y.(Brimpus(y) & Wumpus(y) & sterpus(z)))"]}
{"id": "prontoqa_train_1160", "nl": "Zumpuses are lempuses.", "fol": "all x. (zumpus(x) -> lempus(x))", "prediction": ["all x.(Zumpus(x) -> Lempuse(x))", "all x.(Zumpus(x) -> Lempuse(x))", "all x.(Zumpus(x) -> Lempuse(x))", "all x.(Zombia(x) -> Lempuse(x))", "all x.(Zumpus(x) -> Lempuse(x))", "all x.(Zimpus(x) -> Lempuse(x))", "all x.(Zumpus(x) -> Lempuse(x))", "all x.(Zambia(x) -> Lempuse(x))", "(Lempuse(z) -> Lempuse(z))", "all x.(Zumpus(x) -> Lempuse(x))", "all x.(Zumpus(x) -> Lempuse(x))", "all x.(Zumpus(x) -> Lempuse(x))", "all x.(Zumpus(x) -> Lempuse(x))", "all x.(Zumpus(x) -> Lempuse(x))", "all x.(Zumpus(x) -> Lempuse(x))", "all x.(Zumpus(x) -> Lempuse(x))"]}
{"id": "prontoqa_train_1161", "nl": "Every lempus is a tumpus.", "fol": "all x. (lempus(x) -> tumpus(x))", "prediction": ["all x.(Lempus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumulus(x))", "all x.(Lempus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_1162", "nl": "Fae is a zumpus.", "fol": "zumpus(Fae)", "prediction": ["(Zympus(fae) & Zumpus(fae))", "all x.(Fae(x) -> Zumpus(x))", "all x.(Fae(x) -> Zumpus(x))", "all x.(Fae(x) -> Zumpus(x))", "all x.(Fae(x) -> Zumpus(x))", "all x.(Fae(x) -> Zumpus(x))", "(Zoompus(Fae) -> IsPox(Fae))", "all x.(Fae(x) -> Zumpus(x))", "all x.(Fae(x) -> Zumpus(x))", "(JimmyNebula(Fae) & Zumpus(fae))", "(zumpus(Fae) & Has(Fae,x))", "all x.(Fae(x) -> Zumpus(x))", "all x.(Fae(x) -> Zumpus(x))", "Fae is eine Zumpus.", "(zumpus(Fae))", "all x.(Fae(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_1163", "nl": "Fae is a sterpus, a zumpus, and a wumpus.", "fol": "(sterpus(Fae) & zumpus(Fae) & wumpus(Fae))", "prediction": ["all x.(Fae(x) -> (Steerpus(x) | Zumpus(x) | Wumpus(x)))", "all x.(Fae(x) -> (Sterpus(x) | Zumpus(x) | Wumpus(x)))", "all x.(Fae(x) -> (Sterepus(x) | Zumpus(x) | Umpus(x)))", "all x.(Fae(x) -> (Sterpus(x) | Zumpus(x) | Humpus(x)))", "all x.(Fae(x) -> (Sterpus(x) | Zumpus(x) | Wumpus(x)))", "all x.(Fae(x) -> (Sterpus(x) & Zumpus(x) & Wumpus(x)))", "all x.(Fae(x) -> (Sterpus(x) | Zumpus(x) | Wumpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & (Anisopus(x) -> Zumpus(x)) & (Wumpus(x))))", "all x.(Fae(x) -> (Sterpus(x) & Zumpus(x) & Wompus(x)))", "(All x.(Fae(x) -> Sterpus(x)) & (Zoompus(x) | Wumpus(x)))", "all x.(Fae(x) -> (Starpus(x) | Zumpus(x) | Wumpus(x)))", "(All x.(Fae(x) -> Sterpus(x)) & All y.(Zumpus(y) & All z.(Wumpus(z) & -Sterpus(x))))", "(Sterpus(Fae) | Zumpus(Fae) | Wumpus(Fae))", "all x.(Fae(x) -> (Sterpus(x) | Zumpus(x) | Wumpus(x)))", "(Steerpus(Fae) | Zumpus(Fae) | Waumpus(Fae))", "all x.(Fae(x) -> (Stroh(x) & Zumpus(x) & Wumpus(x)))"]}
{"id": "prontoqa_train_1164", "nl": "Fae is not a dumpus and Fae is a brimpus and Fae is a tumpus.", "fol": "(-dumpus(Fae) & brimpus(Fae) & tumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Dumpus(x)) & (Brimpus(x) & Tumpus(x)))", "all x y z.((Fae(x) & -Dumpus(x) & Fae(y) & Brimpus(y)) -> (Fae(z) & Tumulus(z)))", "(all x y z.(Fae(x) -> (Nut(x,y) & Dumpus(y))) & ((Brimpus(z) & Brimpus(z))) | (Tumpus(z) & Fae(z)))))", "(all x.(Fae(x) -> -Dumpus(x)) & (Brimpus(x) & Tumpus(x)))", "all x y z.((Fae(x) & Dumpus(y) & Brimpus(z)) -> (-Dumpus(x) & Brimpus(x) & Tumpus(x)))", "(all x.(Fae(x) -> -Dumpus(x)) & all y.(Brimpus(y) & all z.(Tumpus(z)) -> -Bumpus(y))))", "all x y z.((Fae(x) & Brimpus(y) & Tumpus(z)) -> (-Dumpus(x) & -Brumpus(y) & -Fae-Tumpus(z)))", "(all x.(Fae(x) -> -Dumpus(x)) & all y.(Fae(y) -> Brimpus(y)) & all z.(Fae(z) -> Tumpus(z))))", "(all x.(Fae(x) -> -Dumpus(x)) & all y.(Brimpus(y) & -Tumpus(y)))", "(all x.(Fae(x) -> -Dumpus(x)) & all y.(Brumpus(y) & all z.(Tumpus(z))) -> (Fae(x) & -Dumped(x))))", "(all x y z.((Fae(x) & Dumpus(y) & Brimpus(z)) -> -Dumpus(x)) & ((Fae(x) & Brimpus(x))) & ((Fae(x) & Tumpus(x)) -> Tumpus(x)))", "all x y.((Fae(x) & Dumpus(y)) -> (-Dumpus(x) & Brimpus(x) & Tumpus(x)))", "(all x.(Fae(x) -> -Dumpus(x)) & (Brimpus(x) | Tumpus(x))))", "(same as(fae,dump) & different as(fae,brimpus) & different as(fae,tumpus))", "(all x y.((Fae(x) & Dumpus(y)) -> -Dumpus(x)) & ((Fae(y) & Brimpus(y)) -> Tumpus(y)))", "(all x.(Fae(x) -> -Dumpus(x)) & all y.(Brimpus(y) & All z.(Tumpus(z))) -> -Dumpus(x)))"]}
{"id": "prontoqa_train_1165", "nl": "Fae is a tumpus and Fae is a numpus and Fae is not a grimpus.", "fol": "(tumpus(Fae) & numpus(Fae) & -grimpus(Fae))", "prediction": ["(tumpus(Fae) & numpus(Fae) & -grimpus(Fae))", "(all x.(Fae(x) -> Tumpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> NotGrimpus(x)))", "all x y z.((Fae(x) & Tumpus(x) & Numpus(y) & Grimpus(z)) -> (Fae(x) & -Fae(x)))", "(all x.(Fae(x) -> Tumpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Fragpus(z))))", "(all x.(Fae(x) -> Tumpus(x)) & (Fae(x) -> Numpus(x)) & -Fae(x)))", "(all x.(Fae(x) -> Tumpus(x)) & (Fae(x) -> Numpus(x)) & nogumpus(x)))", "(all x y.(Fae(x) -> Tump(x)) & (Fae(y) -> Numpus(y)) & (Fae(y) -> Grupp(y)))", "(all x.(Fae(x) -> Tumpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Grimpus(x))))", "(all x.(Fae(x) -> Tumpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Grimpus(x)))", "(all x.(Fae(x) -> Tumpus(x)) & (Fae(x) -> Numpus(x)) & -Fae(x)))", "(all x y z.(Fae(x) -> Tumpus(x)) & (Fae(y) -> Numpus(y)) & (Fae(z) -> -Grimpus(z))))", "(all x.(Fae(x) -> Tumpus(x)) & all y.(Fae(y) -> Numpus(y))) & all z.(Fae(z) -> -Grimpus(z))))", "FaesTumpus(Fae) & Numpus(Fae) & -Grimpus(Fae))", "(all x.(Fae(x) -> Tumpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> Crumps(z))))", "exists x.(Fae(x) & Tompus(x) & Numpus(x) & -Grimpus(x))", "(all x.(Fae(x) -> Tumpus(x)) & all y.(Form(y) -> Numpus(y)) & all z.(Fae(z) -> -Grimpus(z))))"]}
{"id": "prontoqa_train_1166", "nl": "Tumpuses are yumpuses, zumpuses, and brimpuses.", "fol": "all x. (tumpus(x) -> (yumpus(x) & zumpus(x) & brimpus(x)))", "prediction": ["all x.(Tumpus(x) -> (Yumpus(x) | Zumpus(x) | Brimpuse(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Zumpus(x) | Brimpuse(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Zumpus(x) | Brimpus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Zumpus(x) | Brimpus(x)))", "(Yumpus(TM) | Zumpus(TM) | Brimpuse(TM))", "all x.(Tumpus(x) -> (Yumpus(x) | Zumpus(x) | Brimpuse(x)))", "all x.((Tumpus(x) & Yumpus(x)) -> Brimpus(x))", "all x.(Tumpuse(x) -> (Yumpus(x) | Zumpus(x) | Brimpuse(x)))", "all x.(Tumpuse(x) -> (Yumpus(x) | Zumpus(x) | Brimpuse(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Zumpus(x) | Brimpuse(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Zumpus(x) | Brimpuse(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | zumpus(x) | Brimpuse(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Zumpus(x) | Brimpuse(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Zumpus(x) | Brimpus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Zumpus(x) | Brimpus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Zumpus(x) | Brimpuse(x)))"]}
{"id": "prontoqa_train_1167", "nl": "Stella is a tumpus.", "fol": "tumpus(Stella)", "prediction": ["(Tomus(Stella) & Tumpus(Stella))", "Stella is actually a tumpus.", "Stella is a Tumulus.", "Stella is a Tumpoise(x)", "Stella is Tumpus.", "est tumpus(est) & -Tumpus(est)))", "All x.(Stella(x) -> Tumpus(x))", "Stella is tumpus.", "Stella is a tumpus.", "Stella (Tumpus)", "(Tumpus(Stella) & Burst(Stella))", "all x.(Stella(x) -> Tumpus(x))", "Stella ist Tumpus(Stella)", "Stella is a tumpus.", "Stella is a Mule(s)", "Stella is a tumpus."]}
{"id": "prontoqa_train_1168", "nl": "Stella is a zumpus, a grimpus, or a rompus.", "fol": "(zumpus(Stella) | grimpus(Stella) | rompus(Stella))", "prediction": ["all x.(Stella(x) -> (Touchpus(x) | Grimpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Tompus(x) | Grimpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Tommpus(x) | Grimpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Toumpus(x) | Grimpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Zumpus(x) | Grimpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Zumpus(x) | Grimpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Tompus(x) | Grimpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Tompus(x) | Grimpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Zumpus(x) | Grimpus(x) | Rompus(x)))", "(all x.(Stella(x) -> Zumpus(x)) & (Grimpus(x) | Rompus(x))))", "all x.(Stella(x) -> (Tompus(x) | Grimpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Toumpus(x) | Grimpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Tompus(x) | Grimpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Tompus(x) | Grimpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Zumpus(x) | Groupus(x) | Rompus(x)))", "all x.(Stella(x) -> (Zumpus(x) | Grimpus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1169", "nl": "Everything that is a sterpus and a lempus and a rompus is a yumpus.", "fol": "all x. ((sterpus(x) & lempus(x) & rompus(x)) -> yumpus(x))", "prediction": ["all x.((Sterepus(x) & Lempus(x) & Rompus(x)) -> Yampus(x))", "all x.((Sterpus(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))", "all x.((Stereoscopic(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))", "all x.((Sterpus(x) & Lempus(x) & Rompus(x)) -> Yumpu(x))", "all x.((Sterpus(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))", "all x.((Sterus(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))", "all x.((Sterepus(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))", "all x.((Sterepus(x) & Lempus(x) & Rompus(x)) -> Yuppus(x))", "all x.((Sterpus(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))", "all x.((Sterepus(x) & Lempus(x) & Rompus(x)) -> Yumpsum(x))", "all x.((Sterpus(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))", "all x.((Sterepus(x) & Lempus(x) & Rompus(x)) -> Yampus(x))", "all x.((Starpus(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))", "all x.((Sterpus(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))", "all x.((AsideFrom(x,Sterpus) & AvailableFrom(x,Lempus) & AvailableFrom(x,Rompus)) -> Yumpis(x))", "all x.(((Sterpus(x) & Lempus(x) & Rompus(x)) -> Yumpus(x))"]}
{"id": "prontoqa_train_1170", "nl": "Max is a zumpus, a yumpus, or an impus.", "fol": "(zumpus(Max) | yumpus(Max) | impus(Max))", "prediction": ["all x.(Max(x) -> (zumpus(x) | yumpus(x) | impus(x)))", "all x.(Max(x) -> (Tompus(x) | Yuppus(x) | Issue(x)))", "(Romulus(Max) | Yumpus(Max) | Implicit(Max)))", "all x.(Max(x) -> (Tompus(x) | Yumpus(x) | Imperial(x)))", "all x.(Max(x) -> (Tompus(x) | Yumpus(x) | Imperative(x)))", "all x.(Max(x) -> (Zumpus(x) | Yumpus(x) | Imperium(x)))", "all x.(Max(x) -> (Tompus(x) | Yumpus(x) | Impossible(x)))", "all x.(Max(x) -> (Tompus(x) | Yumpus(x) | Imperator(x)))", "all x.(Max(x) -> (Tommus(x) | Yumpus(x) | Imperator(x)))", "all x.(Max(x) -> (zumpus(x) | yumpus(x) | impus(x)))", "all x.(Max(x) -> (Tompus(x) | Yumpus(x) | Imperator(x)))", "all x.(Max(x) -> (Tompus(x) | Yumpus(x) | Inflicted(x)))", "all x.(Max(x) -> (Tompus(x) | Yumpus(x) | Imperemptor(x)))", "all x.(Max(x) -> (Zimpus(x) | Yumpus(x) | Issue(x)))", "(All x.(Max(x) -> Zumpus(x) | (Max(x) & Yumpus(x))))", "all x.(MatMax(x) -> (Tompus(x) | Yumpus(x) | Imperative(x)))"]}
{"id": "prontoqa_train_1171", "nl": "Everything that is a numpus, a vumpus, and a zumpus is a gorpus, a tumpus, and a sterpus.", "fol": "all x. ((numpus(x) & vumpus(x) & zumpus(x)) -> (gorpus(x) & tumpus(x) & sterpus(x)))", "prediction": ["all x.((Numpus(x) & Vumpus(x) & Zumpus(x)) -> (Gorpus(x) & Tumpus(x) & Sterpus(x)))", "all x.((Numpus(x) | Vulmpus(x) | Zumpus(x)) -> (Gorpus(x) & Thorpus(x) & Tumpus(x) & Sterpus(x)))", "all x.((Rorpus(x) | Tumpus(x) | Sterpus(x)) -> (Numpus(x) & Vumpus(x) & Zumpus(x)))", "all x.((Numpus(x) | Vuxpus(x) | Zumpus(x)) -> (Gorpus(x) & Tumpus(x) & Sterpus(x)))", "all x.((Umpus(x) | Vumpus(x) | Zumpus(x)) -> (Gorpus(x) | Tumpus(x) | Sterpus(x)))", "all x.((Numpus(x) | Volumpus(x) | Zumpus(x)) -> (Gorpus(x) & Tumpus(x) & Sterpus(x)))", "all x.((Numpus(x) | Vumpus(x) | Zumpus(x)) -> (Gorpus(x) | Tumpus(x) | Sterpus(x)))", "all x.((Numpus(x) | Vumpus(x) | Zumpus(x)) -> (Gorpus(x) | Tumpus(x) | Sterpus(x)))", "all x.((Nompus(x) | Umpus(x) | Zumpus(x)) -> (Gorpus(x) & Tumpus(x) & Sterpus(x)))", "all x.((Nompus(x) | Vumpus(x) | Zumpus(x)) -> (Gorpus(x) | Tumpus(x) | Steros (x)))", "all x y.((Numpus(x) & Vumpus(x) & Zumpus(y)) -> (Borpus(x) & Tumpus(x) & Sterpus(x)))", "all x.((Nompus(x) | Vumpus(x) | Zumpus(x)) -> (Orthpus(x) | Tumpus(x) | Sterpus(x)))", "all x.(((Nompus(x) | Vumpus(x) | Zumpus(x))) -> (Gorpus(x) | Tumpus(x) | Steerpus(x)))", "all x.((Numpus(x) & Pumpus(x) & Zumpus(x)) -> (Gorpus(x) & Tumpus(x) & Sterpus(x)))", "all x.((Nompus(x) | Voompus(x) | Zumpus(x)) -> (Gorpus(x) & Tumpus(x) & Sterpus(x)))", "all x.((Numpus(x) & Vumpus(x) & Zumpus(x)) -> (Gorpus(x) | Tumpus(x) | Stupid(x)))"]}
{"id": "prontoqa_train_1172", "nl": "Wren is a numpus.", "fol": "numpus(Wren)", "prediction": ["all x.(Wren(x) -> Number(x))", "(Numpus(Wren) & X.(Numpus(wren) & Breeds(wren,w)))", "all x.(Wren(x) -> Numpus(x))", "all x.(Wren(x) -> Numpus(x))", "all x.(Wren(x) -> Numpus(x))", "all x.(Wren(x) -> Numpus(x))", "all x.(Wren(x) -> Numpus(x))", "all x.(Wren(x) -> Numpus(x))", "all x.(Wren(x) -> Numpus(x))", "(Nobueus(Wren) & Number(Wren))", "all x.(Wren(x) -> Nobus(x))", "all x.(Wren(x) -> Numpus(x))", "all x.(Wren(x) -> Numpus(x))", "all x.(Wren(x) -> Nompus(x))", "All x.(Wren(x) -> Numpus(x))", "all x.(Wren(x) -> Numpus(x))"]}
{"id": "prontoqa_train_1173", "nl": "Wren is a vumpus.", "fol": "vumpus(Wren)", "prediction": ["all x.(Wren(x) -> Vumpus(x))", "all x.(Weapon(x) -> Vampous(x))", "all x.(Water(x) -> Vulga(x))", "all x.(Wren(x) -> Vumpus(x))", "all x.(Wren(x) -> Vumpus(x))", "All x.(Wren(x) -> Vampus(x))", "all x.(Wren(x) -> Vupus(x))", "(Vumpus(Wren) -> Scepter(Wren))", "(Vumpus(winner) -> Wren(ren,y))", "(Vumpus(Wren))", "all x.(Wren(x) -> Vumpus(x))", "(Vumpus(Wren) & HasBubble(wer))", "all x.(Wren(x) -> Vumpus(x))", "Wren is a Vampire(Wren)", "ist ein Verumpus.", "(Vumpus(Wren) & Eats(Wren,Umpus))"]}
{"id": "prontoqa_train_1174", "nl": "Numpuses are wumpuses.", "fol": "all x. (numpus(x) -> wumpus(x))", "prediction": ["all x.(Numpus(x) -> Warpus(x))", "all x.(Numpe(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wampus(x))", "all x.(Numpus(x) -> Wormpus(x))", "all x.(Numpus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wampus(x))", "all x.(Numpus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wumpus(x))", "-Wumpus(Numpuses)", "all x.(Numpus(x) -> Wumpus(x))", "all x.(Numpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_1175", "nl": "Max is not a wumpus, Max is a lempus, and Max is a gorpus.", "fol": "(-wumpus(Max) & lempus(Max) & gorpus(Max))", "prediction": ["(all x y z.((Max(x) & Wumpus(y)) -> -(Wumpus(z) | Lempus(z))) & ((Max(x) & Gorpus(x)) -> Gorpus(x)))", "all x y z.((Max(x) & Mouse(y) & Gorpus(z)) -> (-Wumpus(x) & Lempus(z) & Gorpus(z)))", "all x.((Max(x) & -Wumpus(x)) -> (Lempus(x) & Gorpus(x)))", "(all x.(Max(x) -> -Wumpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z))))", "(Wumpus(Max) | Lempus(Max) | Gorpus(Max)))", "(all x.(Max(x) -> -Wumpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z))))", "all x.(Max(x) -> -Wumpus(x)) & (-Wumpus(x) | Lempus(x) | Gorpus(x)))", "all x y z.((Max(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) | Gorpus(w)))", "(all x.(Max(x) -> -Wumpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z))))", "(all x.(Max(x) -> -Wumpus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> Gorpus(x)))", "(all x.(Max(x) -> -Wumpus(x)) & (Max(x) -> Lampus(x)) & (Max(x) -> Gorpus(x)))", "(FreshMather(Max) & -Wumpus(Max)) & FreshMather(Max) & Gorpus(Max))", "(all x.(Max(x) -> -Wumpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z)))", "(all x.(Max(x) -> -Wumpus(x)) & ((Max(x) -> Lempus(x)) | (Max(x) -> Gorpus(x))))", "(all x.(Max(x) -> -Wumpus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> Gorpus(x)))", "(all x y z.(Max(x) -> (-Wumpus(x) & Lempus(y)) & (Max(z) -> Gorpus(z))))"]}
{"id": "prontoqa_train_1176", "nl": "Max is not a numpus or Max is a jompus or Max is a lorpus.", "fol": "(-numpus(Max) | jompus(Max) | lorpus(Max))", "prediction": ["(all x y.((Max(x) & Nox(y)) | ((Max(x) & Jompus(x)) | (Max(x) & Lorpus(x)))))", "all x y z.((Max(x) & Numpus(y) & Jompus(z)) | (Max(x) & Lorpus(x))))", "all x.((Max(x) & -Numpus(x)) | (Jomes(x) | Lorompus(x))))", "(exists x.(Max(x) & -numpus(x)) | exists y.(Max(y) & Jompus(y))) | exists z.(Max(z) & Lorpus(z))))", "((Max(max,numpus) | Jompus(max,jompus) | Lox(max)))", "(exists x.(Max(x) & -Numpus(x)) | exists y.(Max(y) & Jompus(y)) | exists z.(Max(z) & Lorpus(z))))", "((Max(Max) & -Numpus)) | (Max(Max) & Jompus(Max))) | (Max(Max) & Lorpus(Max)))", "all x y.((Max(x) & -Numpus(x) & (Max(y) | Max(y))) | (Max(y) & Jompus(y)) | (Max(y) & Lorpus(y))))", "all x.(Max(x) -> (-Number(x) | Jompus(x) | Lorpus(x)))", "all x.((Max(x) & -Numpus(x)) | (-Numpus(x) | Jompus(x) | Lorpus(x))))", "all x.(Max(x) -> (-Numpus(x) | Jompus(x) | Lorpus(x)))", "(all x.(Max(x) -> -Numpus(x)) | (Max(x) -> Jompus(x)) | (Max(x) -> Lordpus(x))))", "((Max(Max) & -Numpus(Max)) | (-Numpus(Max) & Jompus(Max)) | (-Numpus(Max) & Jompus(Max))))", "((Max(Max) & -Numpus(Max)) | (Max(Max) & Jompus(Max)) | (Max(Max) & Lorpus(Max))))", "(exists x.(Max(x) & -numpus(x)) | exists y.(Max(y) & Jompus(y))) | exists z.(Max(z) & Lorpus(z)))))", "((Max(Max) & -Nompus(Max)) | (Max(Max) & Jompus(Max)) | (Max(Max) & Lorpus(Max))))"]}
{"id": "prontoqa_train_1177", "nl": "Everything that is a numpus or a grimpus or a vumpus is a gorpus.", "fol": "all x. ((numpus(x) | grimpus(x) | vumpus(x)) -> gorpus(x))", "prediction": ["all x.((Mumpes(x) | Grimpus(x) | Voompus(x)) -> Gorpus(x))", "all x.((Numpus(x) | Grimpus(x) | Vumpus(x)) -> Gorpus(x))", "all x.((Gorpus(x) | Grimpus(x) | Vumpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Grimpus(x) | Vumpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Grumpus(x) | Voompus(x)) -> Gorpus(x))", "all x.((Numpus(x) | Grimpus(x) | Vumpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Grimpus(x) | Vumpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Grimpus(x) | Vumpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Grimpus(x) | Voompus(x)) -> Gorpus(x))", "all x.(((Nompus(x) | Grimpus(x) | Veloompus(x))) -> Gorpus(x))", "all x.((Numpus(x) | Grimpus(x) | Vulpu(x)) -> Gorpus(x))", "all x.((Nompus(x) | Grimpus(x) | Vumpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Grimpus(x) | Utopus(x))) -> Gorpus(x))", "(All x.((Numpus(x) & Gruppus(x)) | AnythingSmoker(x)) | (Vumpus(x) & Nompus(x))) -> Gorpus(x))", "all x.((Nompus(x) | Grimpus(x) | Vubis(x)) -> Gorpus(x))", "all x.((Nompus(x) | Grimpus(x) | Volumpus(x)) -> Gorpus(x))"]}
{"id": "prontoqa_train_1178", "nl": "Stella is a lorpus, Stella is a jompus, and Stella is not a gorpus.", "fol": "(lorpus(Stella) & jompus(Stella) & -gorpus(Stella))", "prediction": ["(all x.(Lorpus(x) -> Stella)) & (Jomes(x) -> Stella)) & (-Gorpus(x) | (Colorpus(x) | ColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorColorCoColorCoCosCococococococococococococococococo-CoCococoalCoCocoococococococo-CococoCo-Co-Coco-Com-Com-Co-C-Co-Co-N-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co--Co-Co-Co-Co-Co-Co-Col-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-CoCo-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-ConCo-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-So-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Co-Qu-Co-Co-Co-Con-Co-Co-Co-Co-Co-Co-TracoCo", "all x.((Lorpus(x) & Jompus(x) & -Gorpus(x)) -> (Lorpus(x) & Jompus(x)))", "(all x.(Lorpus(x) -> Stella(x)) & all y.(Jompus(y) -> Stella(y))) & all z.(Gorpus(z) -> -Stella(z)))", "all x.((Lorpus(x) & Jompus(x) & -Gorpus(x)) -> Stella(x))", "(all x.(Stella(x) -> Lorpus(x)) & all y.(Jumpus(y) -> -Gorpus(y)))", "(all x.(Stella(x) -> Lorompus(x)) | (Stella(x) -> Jompus(x))) & (Stella(x) -> -Gorpus(x)))", "(all x.(Stella(x) -> Lovore(x)) & (Stella(x) -> Jompus(x)) & (Stella(x) -> -Gorpus(x))))", "all x y z.((Stella(x) & Lorpus(x) & Jompus(y) & -Grisi (z))) -> (Lorpus(x) & Jompus(y) & -Gorpus(z)))", "(all x y.(Lorpus(x) | Jompus(x)) & (Gnompus(y) | -Gorpus(y)))", "(all x.(Stella(x) -> Lorpus(x)) & (Stella(x) -> Jompus(x)) & (Stella(x) -> -Gorpus(x))))", "all x y z.((Stella(x) & Lorpus(x) & Jompus(y) & -Gorpus(z)) -> (Lorpus(x) & Jompus(y) & -Gorpus(z)))", "all x y z.((Stella(x) & Lorpus(y) & Jompus(z)) -> (Lorpus(x) & Jompus(z) & -Gorpus(x)))", "(all x y z.(Lorpus(x) -> Stella(x)) & (Jompus(y) -> Stella(z)) & (Gorpus(z) -> Stella(z)))", "all x y z.((Stella(x) & Lorpus(x) & Jompus(y) & -Gorpus(z)) -> (Lorpus(x) | Jompus(y) & -Gorpus(z)))", "(all x.(Stella(x) -> Lopoise(x)) & (Stella(x) -> Jompus(x)) & -Gorpus(x)))", "all x y z.((Stella(x) & Lorpus(y) & Jompus(z) & -Gorpus(z)) -> (Lorph(x) & Jompus(x) & -Stella(x)))"]}
{"id": "prontoqa_train_1179", "nl": "Every vumpus is a numpus, a lorpus, and a shumpus.", "fol": "all x. (vumpus(x) -> (numpus(x) & lorpus(x) & shumpus(x)))", "prediction": ["all x.(Vumpus(x) -> (Anumpus(x) & ALorpus(x) & AShumpus(x)))", "all x.(Vumpus(x) -> (IsNumpus(x) | IsLorpus(x) | IsShumpus(x)))", "all x.(Vumpus(x) -> (numpus(x) & lorpus(x) & shumpus(x)))", "all x.(Vumpus(x) -> (Numpus(x) | Lorpus(x) | Humpus(x)))", "all x.(Vumpus(x) -> (Numpus(x) & Lorpus(x) & Humpus(x)))", "all x.(Vumpus(x) -> (Numpus(x) | Lorpus(x) | Humpus(x)))", "all x.(Vumpus(x) -> (Numpus(x) | Lopus(x) | Humpus(x)))", "all x.(Vumpus(x) -> (Numpus(x) | Lorpus(x) | Humpus(x)))", "all x.(Vumpus(x) -> (Nompus(x) & Lopus(x) & Humpus(x)))", "all x.(Vumpus(x) -> (HasNumpus(x) & HasLorpus(x) & HasShumpus(x)))", "all x.(Vumpus(x) -> (Numpus(x) & Larkus(x) & Humpus(x)))", "all x.(Vumpus(x) -> (Numpus(x) & Lordpus(x) & Humpus(x)))", "exists x.(Vumpus(x) & (numpus(x) | lorpus(x) | shumpus(x)))", "all x.(Vumpus(x) -> (numpus(x) | lorpus(x) | shumpus(x)))", "all x.(Vumpus(x) -> (Number(x) | Sucks(x)))", "all x.(Vumpus(x) -> (Numpus(x) & Lorpus(x) & Humpus(x)))"]}
{"id": "prontoqa_train_1180", "nl": "Sam is a tumpus or a jompus or a numpus.", "fol": "(tumpus(Sam) | jompus(Sam) | numpus(Sam))", "prediction": ["all x.(Sam(x) -> (Tumpus(x) | Yompus(x) | Numpus(x)))", "(all x.(Sam(x) -> Tumpus(x)) | (Jompus(x) | Numpus(x))))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tumpus(x) | Jompus(x) | Numpus(x)))"]}
{"id": "prontoqa_train_1181", "nl": "Everything that is a shumpus, a numpus, or a rompus is a yumpus.", "fol": "all x. ((shumpus(x) | numpus(x) | rompus(x)) -> yumpus(x))", "prediction": ["all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpus(x))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpus(x))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpus(x))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yup.(Yumpus(x))", "all x y.(((Shumpus(x) | Numpus(y) | Rompus(y)) & Has(x,y)) -> Yumpus(x))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpus(x))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpa(x))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpus(x))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpus(x))", "all x.((Shumpus(x) | Numpus(x) | Romass(x)) -> Yumpus(x))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpus(x))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpus(x))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpus(x))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpus(x))", "all x.(((Shumpus(x) | Numpus(x) | Rompus(x))) -> Yumpus(x))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> Yumpus(x))"]}
{"id": "prontoqa_train_1182", "nl": "Each numpus is a brimpus.", "fol": "all x. (numpus(x) -> brimpus(x))", "prediction": ["all x.(Numpus(x) -> Brimpus(x))", "all x.(Numerus(x) -> Brimpus(x))", "all x.(Numpus(x) -> Brimpus(x))", "all x.(Numpus(x) -> Brimpus(x))", "all x.(Nompus(x) -> Brimpus(x))", "all x.(Nompus(x) -> Brimpus(x))", "all x.(Nompus(x) -> Brimpus(x))", "all x.(Numpus(x) -> Brimpus(x))", "all x.(Numpus(x) -> Brimpus(x))", "(all x.(Numpus(x) -> Brimpus(x))", "all x.(Numpus(x) -> Brimpus(x))", "all x.(Nompus(x) -> Brimpus(x))", "all x.(Numpus(x) -> Brimpus(x))", "all x.(Numpus(x) -> Brimpus(x))", "all x.(Numpus(x) -> Brimpus(x))", "all x.(Numpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_1183", "nl": "Each brimpus is a jompus.", "fol": "all x. (brimpus(x) -> jompus(x))", "prediction": ["all x.(Brimpus(x) -> Jompus(x))", "all x.(Bimpus(x) -> Jompus(x))", "all x.(Blumpus(x) -> Jompus(x))", "all x.(Brimpus(x) -> Jompus(x))", "all x.(Brumpus(x) -> Jompus(x))", "all x.(Blumpus(x) -> Jompus(x))", "all x.(Brumpus(x) -> Jompus(x))", "all x.(Brimpus(x) -> Jompus(x))", "all x.(Brimpus(x) -> Jompus(x))", "all x.(Brimpus(x) -> Jompus(x))", "all x.(Brimpus(x) -> Jompus(x))", "all x.(Brimpus(x) -> Jompus(x))", "all x.(Brampus(x) -> Jompus(x))", "all x.(Bimpus(x) -> Jompus(x))", "all x.(Blumpus(x) -> Jompus(x))", "all x.(Brumpus(x) -> Jompus(x))"]}
{"id": "prontoqa_train_1184", "nl": "Alex is a numpus.", "fol": "numpus(Alex)", "prediction": ["all x.(Alex(x) -> Numpus(x))", "all x.(Alex(x) -> Numpus(x))", "all x.(Alex(x) -> Numpus(x))", "Alex is Numpus(Alex)", "Alex is Numpus(Alex)", "(Numpus(Alex))", "all x.(Alex(x) -> Numpus(x))", "all x.(Alex(x) -> Numpus(x))", "all x.(Alex(x) -> Numpus(x))", "Alex is a Numpus(Alex)", "Alex (Counter)", "all x.(Alex(x) -> Numpus(x))", "all x.(Alex(x) -> Numpus(x))", "all x.(Alex(x) -> Numpus(x))", "Alex isnumpus.", "all x.(Alex(x) -> Numpus(x))"]}
{"id": "prontoqa_train_1185", "nl": "Alex is a zumpus, Alex is a lorpus, and Alex is not an impus.", "fol": "(zumpus(Alex) & lorpus(Alex) & -impus(Alex))", "prediction": ["(all x.(Alexa(x) -> Zumpus(x)) & (Alexa(x) -> Lorpus(x)) & (Alexa(x) -> -Impossible(x)))", "(all x.(Alexa(x) -> Zumpus(x)) & (Alexa(x) -> Loomis(x)) & -Impossible(x)))", "comes into play in two main categories: (Zumpus(Alex) | Lorpus(Alex) | Imperator(Alex)))", "(all x y.(Alex(x) -> Zumpus(x)) | (Alex(y) -> Lorpus(y)) & (Alex(y) -> -Impossible(y))))", "(all x.(Alexa(x) -> Zumpus(x)) & (Alexa(x) -> Lorpus(x)) & -Erzhnir(x)))", "(all x.(Alex(x) -> Toss (x)) & all y.(Alex(y) -> Lorpus(y))) & all z.(Alex(z) -> -Impossible(z))))", "(all x.(Alexan(x) -> Tosp(x)) & all y.(Alexan(y) -> Lorpus(y)) & -Impossible(y)))", "all x y.((Alex(x) & Zumpus(x) & Lorpus(y)) -> -Impossible(x))", "all x y z.((Alex(x) & Zumpus(x) & Lorpus(y) & -Issue(z)) -> (Tompus(x) & Lorpus(y) & -Issue(z)))", "(all x.(Alexa(x) -> Zumpus(x)) & (Alexa(x) -> Lorpus(x)) & (Alexa(x) -> -Impossible(x))))", "(all x.(Alexa(x) -> Zumpus(x)) & all y.(Alexa(y) -> Lorpus(y)) & -Isolator(y)))", "all x y z.((Alex(x) & Zumpus(x) & Leonpa(y) & Is(z)) -> (Lorpus(x) & -Improved(x)))", "(all x.(Alexa(x) -> Zumpus(x)) & all y.(Alexa(y) -> Lordpus(y)) & -Issue(y)))", "(all x.(Alex(x) -> Zumpus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> -Impossible(z)))", "(all x.(Alexa(x) -> Zumpus(x)) & all y.(Alexa(y) -> Lorpus(y)) & -Impermissor(y)))", "(all x.(Alexa(x) -> Zumpus(x)) & all y.(Alexa(y) -> Lorpus(y)) & all z.(Alexa(z) -> -Ilpos(z))))"]}
{"id": "prontoqa_train_1186", "nl": "Alex is a yumpus, Alex is not a grimpus, and Alex is a jompus.", "fol": "(yumpus(Alex) & -grimpus(Alex) & jompus(Alex))", "prediction": ["(all x.(Alex(x) -> Yumpus(x)) & all y.(Alex(y) -> -Grintpus(y))) & all z.(Alex(z) -> Jompus(z))))", "exists x.(Alex(x) & Yumpus(x) & -Grimpus(x) & Jompus(x))", "(all x.(Alex(x) -> Yumpsum(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Jompus(x))))", "all x y.((Alex(x) & Yompus(y) & -Grimpus(y)) -> (Yumpus(x) | (Grompus(x) & Jompus(x))))", "all x.(Alex(x) -> (Yumpus(x) | -Grimpus(x) | (Jompus(x) | Yumpus(y)))))", "all x.(Alex(x) -> (Yumpus(x) & -Fragmus(x) & -Jompus(x)))", "(all x.(Alex(x) -> Yumpus(x)) & (-Alex(x) -> Grimpus(x)) & (-Alex(x) -> Jompus(x))))", "(all x.(Alex_Yumpus(x) -> -Grimpus(x)) & all y.(Alex_Jimpus(y) -> -Jumpus(y)))", "(all x.(Alex(x) -> Yampus(x)) & (Alex(x) -> -Smooch(x)) & (Alex(x) -> Jompus(x))))", "all x y z.((Alex(x) & Yampus(y) & Grimpus(z)) -> (Yumpus(x) & -Grimpus(x) & Jompus(x)))", "(all x.(Alex(x) -> Yumpus(x)) & all y.(Alex(y) -> -Grimpus(y))) & all z.(Alex(z) -> Jompus(z))))", "(all x.(Alex(x) -> Yumps(x)) & ((Alex(x) & -Grimpus(x))) | (Alex(x) & Jompus(x)))))", "(all x.(Alex(x) -> Yampus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Jompus(x))))", "all x.(Alex(x) -> (Yumpus(x) & -Grimpus(x) & Jompus(x)))", "(all x y z.(Olympic(x) -> Yampus(x)) & (Alex(y) -> -Grimpus(y))) & (Alex(z) -> Jompus(z)))", "all x y z.((Alex(x) & Yumpus(y) & -Grimpus(z)) -> (Yumpus(x) & Jompus(x)))"]}
{"id": "prontoqa_train_1187", "nl": "Each zumpus is a grimpus and an impus and a rompus.", "fol": "all x. (zumpus(x) -> (grimpus(x) & impus(x) & rompus(x)))", "prediction": ["all x.(Tompus(x) -> (Grimpus(x) & Esperant(x) & Rompus(x)))", "all x y.((Zumpus(x) & Grimpus(x)) -> (Immersion(x) & Osmosis(y)))", "all x.(Zimmer(x) -> (Rumpus(x) & Impossible(x) & Rompus(x)))", "all x.(Zumpus(x) -> (Smooch(x) & Impossible(x) & Rompus(x)))", "all x.(Zumpus(x) -> (Grimpus(x) & Impossible(x) & Rompus(x)))", "all x.(Zumpus(x) -> (Grimpus(x) | Imperman(x) | Rompus(x)))", "all x.(Tompus(x) -> (Grimps(x) | Issues(x) | Rompus(x)))", "all x.(Tompus(x) -> (Groppus(x) & Involves(x) & Involves(x) & Involves(x) & Involves(x) & Involves(x)))", "all x.(Zumpus(x) -> (Grimpus(x) | Presto(x) | Rompus(x)))", "all x.(Tompus(x) -> (Own(x) | Grouch(x)) & Issue(x) & Rompus(x)))", "all x.(Zumpus(x) -> (Grampus(x) & Implicit(x) & Rompus(x)))", "all x y.((Tompus(x) & Grimpus(x)) -> (Issue(x) & Issue(y) & Issue(y) & Issue(y) & Issue(y) & Rompus(y)))", "all x.(Tompus(x) -> (Stormpus(x) & Impossible(x) & Rompus(x)))", "all x.(Tompus(x) -> (Grimpus(x) & Issue(x) & Rompus(x)))", "all x.(Tompus(x) -> (Grimpus(x) & Impossible(x) & Rotpus(x)))", "all x.(Tompus(x) -> (Stormpus(x) & Issue(x) & Rompus(x)))"]}
{"id": "prontoqa_train_1188", "nl": "Rex is a grimpus, a sterpus, or a brimpus.", "fol": "(grimpus(Rex) | sterpus(Rex) | brimpus(Rex))", "prediction": ["all x.(Rex(x) -> (Grimpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Grimpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Grimpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Grimpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Grimpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Grimpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Sgrimpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Smearpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Grimpus(x) | Steerpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Grimples(x) | Sterpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Grippus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Smokey(x) | Steerpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Grimpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Grimpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Grimpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Smoother(x) | Sterpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_1189", "nl": "Sally is a jompus and Sally is a rompus and Sally is not a sterpus.", "fol": "(jompus(Sally) & rompus(Sally) & -sterpus(Sally))", "prediction": ["all x.((Sally(x) & Jompus(x) & Rompus(x) & -Sterpus(x)) -> Hompus(x))", "(all x.(Sally(x) -> Nompus(x)) & (Romex(x) & -Saintpus(x)))", "all x y z.((Sally(x) & Jompus(x) & Rompus(y) & -Sterpus(z)) -> (Jompus(x) | Rompus(y) | Sterpus(z)))", "all x y.((Sally(x) & Jompus(x)) -> (Rompus(x) & -Sterepus(y)))", "all x y z.((Sally(x) & Jompus(y) & Rompus(z)) -> (Jompus(x) & Rompus(x) & -Sterepus(x)))", "Sally is an hippo(h) & Jompus(h) & Rompus(h) & -Sterpus(h))", "(all x.(Sally(x) -> Jompus(x)) & ((Sally(x) -> Rompus(x))) & ( (Sally(x) -> -Sterepus(x))))", "(all x y z.((Sally(x) & Jompus(x)) -> Rose(y)) & ((Sally(z) & Sterpus(z))) -> -Sternpus(z)))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Rompus(x)) & -Sterpus(x)))", "all x.(Sally(x) -> (Jompus(x) & Rompus(x) & -Sterpus(x)))", "(all x.(Sally(x) -> (Jompus(x) | Rompus(x))) & (Sally(x) -> (-Sterepus(x)))))", "(all x y z.(Jimpus(x) & Jumper(y) & Morphus(z) & -Thrompses(z)))", "all x y.((Sally(x) & Jompus(x)) & Rompus(y)) -> (-Sterpus(x) | (-Sterpus(y) & Jompus(y)))))", "all x.(Sally(x) -> (Jompus(x) & Rompus(x) & -Sterpus(x)))", "all x.((Sally(x) & Jompus(x) & Rompus(x) & -Rompus(x)) -> MinimalOrbit(x))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Rompus(x)) & (Sally(x) -> -Sterepus(x)))"]}
{"id": "prontoqa_train_1190", "nl": "Sally is a wumpus or Sally is not a dumpus or Sally is a rompus.", "fol": "(wumpus(Sally) | -dumpus(Sally) | rompus(Sally))", "prediction": ["(Wumpus(Sally) | -Dumpus(Sally) | Rompus(Sally)))", "all x.((Sally(x) & Wumpus(x)) | (-Dumpus(x) | Rompus(x))))", "all x.((Sally(x) & Wumpus(x)) | (-Dumps(x) | Rompus(x))))", "(exists x.(Sally(x) & Wumpus(x)) | exists y.(Sally(y) & -Dumpus(y))) | exists z.(Sally(z) & Rompus(z))))", "(Wumpus(Sally) | Dumpus(Sally) | Rompus(Sally)))", "(all -> Wumpus(Sally)) & (-Dumpus(Sally) | Romanus(Sally)))", "((Wumpus(Sally) | -Dumpus(Sally)) | Rompus(Sally)))", "all x.((Sally(x) & (Wumpus(x) | -Dumpus(x) | Rompus(x))) -> (Wumpus(x) | Rompus(x)))", "(all x.(Sally(x) -> Wumpus(x)) | (-Dumpus(x)) | (-Dumpus(x) & Rompus(x))))", "(either Sally is a Wumpus(s) | Sally is notadumpus(s) | Sally isarompus(s)))", "((Sally(Sally) | Sally(Sally))) -> (Wumpus(Sally) | -Dumpus(Sally) | Rompus(Sally)))", "all x.((Sally(x) & Wumpus(x)) | (-Dumpus(x) & Rompus(x))))", "all x.((Sally(x) & (Wumpus(x) | -Dumpus(x) | Rompus(x))) -> Wumpus(x))", "((Sally(Sally) | Sally(Sally))) | (Sally(Sally) -> Unleashed(Sally)) | (Sally(Sally) -> -Leached(Sally))))", "all x.((Sally(x) & Wumpus(x)) | (-Dumpus(x) | Rompus(x))))", "all x.((Sally(x) | (-Dumpus(x) | Rompus(x))))"]}
{"id": "prontoqa_train_1191", "nl": "Every vumpus is a grimpus.", "fol": "all x. (vumpus(x) -> grimpus(x))", "prediction": ["all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grrumpus(x))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.((Vumpus(x) & Grimpus(x)) -> -ElementOfPumpus(x))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Volumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_1192", "nl": "Sam is a gorpus, Sam is a yumpus, and Sam is not a grimpus.", "fol": "(gorpus(Sam) & yumpus(Sam) & -grimpus(Sam))", "prediction": ["(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> Yumpus(x)) & -Sam(x)))", "(all x.(Sam(x) -> Gorpus(x)) & all y.(Sam(y) -> Yumpus(y)) & all z.(Sam(z) -> -Grimpus(z))))", "(all x y z.((Gorpus(x) & Sam(y) & Yampus(z)) -> Gorpus(x)) & ((Yumpus(y) & Sam(z)) -> Grimpus(z)))", "exists x.(Sam(x) & Gorpus(x) & Yampus(x) & -Grippus(x))", "all x y z.((Sam(x) & Gorpus(x) & Yumpus(y) & Gray(z)) -> (Gorpus(x) & Yampus(y) & -Grimpus(z)))", "all x y z.((Sam(x) & Gorpus(x) & Yampus(y) & Grubb(z)) -> (Gorpus(x) & Yampus(y) & -Grimpus(z)))", "(exists x.(Sam(x) & Gorpus(x)) & exists yumpus(y) & exists z.(Sam(z) & Grimpus(z))))", "(all x y z.(Gorpus(x) -> Gorpus(x)) & (Yumpus(y) -> Gorpus(y)) & (Sam(z) -> -Grippus(z)))", "(all x.(Sam(x) -> Gorpus(x)) & all y.(Sam(y) -> Yumpus(y)) & all z.((Sam(z) & Grimpus(z)) -> -Sam(z))))", "all x y z.((Sam(x) & Gorpus(x) & Yampus(y) & -Grimpus(z)) -> (Gorpus(x) & Yampus(y) & -Grampus(z)))", "all x y z.((Sam(x) & Gorpus(y) & Yuppus(z)) -> (Gorpus(x) & Yampus(z) & -Grimpus(x)))", "(all x.(Gorpus(x) -> Samyi,y)) & (Yumpus(y) -> Samyi,y)) & -Grimpus(y))", "exists x.(Sam(x) & Gorpus(x) & Yumpus(x) & -Grimpus(x))", "(all x to y z.(Sam(x) -> Gorpus(x)) & ((Sam(y) & Yumpus(y)) -> -Grimpus(z))))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> Yumpus(x)) & (Sam(x) -> -Grimpus(x)))", "all x y z.((Sam(x) & Gorpus(x) & Yumpus(y) & Sam(z)) -> (Gorpus(x) & Yumpus(y) & -Grimpus(z)))"]}
{"id": "prontoqa_train_1193", "nl": "Sam is not a vumpus or Sam is a yumpus or Sam is a tumpus.", "fol": "(-vumpus(Sam) | yumpus(Sam) | tumpus(Sam))", "prediction": ["all x.((Sam(x) & (-Vumpus(x) | Yampus(x) | Tumpus(x))) -> -Vumpus(x))", "all x.(Sam(x) -> (-Vumpus(x) | (Yumpus(x) | Tumpus(x))))", "all x.((Sam(x) -> (-Vimpus(x) | Yampus(x) | Tumpus(x)))", "(all x.(Sam(x) -> -Vumpus(x)) | (sam(x) -> Yumps(x))) | (sam(x) -> Tumpus(x))))", "all x.(Sam(x) -> (-Vumpus(x) | (Yumpus(x) | Tumpus(x))))", "all x.(Sam(x) -> (-Vumpus(x) | (Yumpus(x) | Tumpus(x))))", "all x.((Sam(x) & -Vumpus(x)) | (Yumpus(x) | Tumpus(x))))", "((Sam,Movement) | Yumpus,Movement)) & Tumpus(Sam))", "all x.((Sam(x) & (-Vumpus(x) | Yumpus(x) | Tumpus(x))) -> -Vumpus(x))", "all x.((Sam(x) & -Vimpus(x)) | (Yumpus(x) | Tumpus(x))))", "all x.((Sam(x) & -Vumpus(x)) | (Yumpus(x) | Tumpus(x))))", "(all x.(Sam(x) -> -Vumpus(x)) | (Sam(x) -> Yampus(x)) | (Sam(x) -> Tumpus(x))))", "(NoVumpus(Sam) | Yampus(Sam) | Tumpus(Sam)))", "all x.(Sam(x) -> (NeverVumpus(x) | (Yumpus(x) | Tumpus(x)))))", "all x y z.((Sam(x) & Vumpus(y) & Yampus(z)) | (Yukus(x) | Tunpus(z))))", "exists x.(Sam(x) & -Vunmo(x) | (Yumpus(x) | Tumpus(x))))"]}
{"id": "prontoqa_train_1194", "nl": "Everything that is a yumpus, a shumpus, or a gorpus is a dumpus and a jompus and a sterpus.", "fol": "all x. ((yumpus(x) | shumpus(x) | gorpus(x)) -> (dumpus(x) & jompus(x) & sterpus(x)))", "prediction": ["all x.((Yumpus(x) | Shumpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(x) & Sterpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(x) & Sterus(x)))", "all x.((Yumpus(x) | Shumpus(x) | Gorpus(x)) -> (Dumps(x) & Jompus(x) & Sterpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(x) & Sterpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(x) & Sterpus(x)))", "all x.((Yumpus(x) | Shumpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(x) & Sterpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(x) & Sterpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(x) & Sterpus(x)))", "all x.((Yumpus(x) | Shumpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(x) & Sterpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(x) & Sterpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Gorpus(x)) -> (Dumpus(x) | Jompus(x) | Sterpus(x)))", "all x.((Humbast(x) | Humpus(x) | Gorpus(x)) -> (Dumus(x) & Jompus(x) & Sterpus(x)))", "all x.((Yumpus(x) | Shumpus(x) | Gorpus(x)) -> (Element(x) & Dumpus(x) & Elks(x)))", "all x.((Yumpus(x) | Shumpus(x) | Gorpus(x)) -> (Dumus(x) & Jompus(x) & STERPUS(x)))", "all x.((Yumpus(x) | Simpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(x) & Sterpus(x)))", "all x.((Yumpus(x) | Shumpus(x) | Gorpus(x)) -> (Dumpus(x) & Jompus(x) & Sterpus(x)))"]}
{"id": "prontoqa_train_1195", "nl": "Every grimpus is a rompus, an impus, and a jompus.", "fol": "all x. (grimpus(x) -> (rompus(x) & impus(x) & jompus(x)))", "prediction": ["all x.(Grimpus(x) -> (Rompus(x) | Impermiss(x) | Jompus(x)))", "all x.(Gripper(x) -> (Rompus(x) | Imperium(x) | Jompus(x)))", "all x.(Grimpus(x) -> (Rompus(x) & -Imposs) & -Jimpus(x)))", "all x.(Grimpus(x) -> (Rompus(x) & Issue(x) & Jompus(x)))", "all x.(Grimpus(x) -> (Rompus(x) | Imperium(x) | Jompus(x)))", "all x.(Grimpus(x) -> (Rompus(x) & Impossible(x) & Jompus(x)))", "(all x.(Grimpus(x) -> [Rompus(x) | Imperium(x) | Jompus(x)))", "(all x.(Grimpus(x) -> ROMpus(x)) & all y.(Impress(y) -> Jompus(y)))", "all x.(Grimpus(x) -> (Rompus(x) & Impossible(x) & Jompus(x)))", "all x.(Grimpus(x) -> (Rompus(x) | Impossible(x) | Jompus(x)))", "all x.(Grimpus(x) -> (Rompus(x) | Impulsor(x) | Jompus(x)))", "all x.(Grimpus(x) -> (Rompus(x) & Issue(x) & Jompus(x)))", "all x.(Grimpus(x) -> (Rompus(x) | Illusion(x) | Jompus(x)))", "all x.(Grimpus(x) -> ((Rompus(x) | Impossible(x)) & Jompus(x)))", "all x.(Grimpus(x) -> (Rompus(x) & Imperempt(x) & Jompus(x)))", "all x.(Grimpus(x) -> (Rompus(x) | Imperator(x) | Jompus(x)))"]}
{"id": "prontoqa_train_1196", "nl": "Sam is a grimpus.", "fol": "grimpus(Sam)", "prediction": ["all x.(Sam(x) -> Grimpus(x))", "all x.(Sam(x) -> Grimpus(x))", "(MurnPuppy(Sam) & WormPuppy(Sam))", "all x.(Sam(x) -> Grimpus(x))", "(Grimpus(Sam) & Likes(Sam))", "all x.(Sam(x) -> Grapps(x))", "Sam ist Grimpus.", "all x.(Grassp(x) -> Scrumpus(x))", "all x.(Sam(x) -> Grumpus(x))", "all x.(Sam(x) -> Grimpus(x))", "all x.(Sam(x) -> Grimpus(x))", "(Grimpus(Sam) & Eats(Sam,Polar))", "and Grimpus(sam)", "the grimpus.", "all x.(Sam(x) -> Grimpus(x))", "(GRumpus(sam) & Grapple(sam))"]}
{"id": "prontoqa_train_1197", "nl": "Sam is a vumpus, a rompus, or a sterpus.", "fol": "(vumpus(Sam) | rompus(Sam) | sterpus(Sam))", "prediction": ["all x.(Sam(x) -> (Vumpus(x) | Rompus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Vumpus(x) | Rompus(x) | Sterpus(x)))", "all x y z.((Sam(x) & (Vumpus(y) | Rompus(y) | Sphere(z))) -> ((Vampus(y) | Rompus(y) | Sphere(z))))", "all x.(Sam(x) -> (Vumpus(x) | Rompus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Vumpus(x) | Rompus(x) | Sterpus(x)))", "(Vumpus(Sam) | Rompus(Sam) | Sterpus(Sam))", "all x.(Sam(x) -> (Vumpus(x) | Rompus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Vumpus(x) | Rompus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Vumpus(x) | Rompus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Vimpus(x) | Rompus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Vumpus(x) | Ropus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Vimpus(x) | Rompus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Vumpus(x) | Rompus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Vimpus(x) | Rompus(x) | Sterpus(x)))", "(Puppus(Sam) | Rompus(Sam) | Sterpus(Sam))", "all x.(Sam(x) -> (Vumpus(x) | Rompus(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1198", "nl": "Each grimpus is a vumpus.", "fol": "all x. (grimpus(x) -> vumpus(x))", "prediction": ["all x.(Grimpus(x) -> Vumpus(x))", "all x.(Grimpus(x) -> Vampas(x))", "all x.(Grimpus(x) -> Vumpus(x))", "all x.(Grampus(x) -> vumpus(x))", "all x.(Fruit(x) -> (Vumpus(x) & -Rumpus(x)))", "all x.(Crompus(x) -> Vumpus(x))", "all x.(Rumpus(x) -> Vumpus(x))", "all x.(Grimpus(x) -> Vumpus(x))", "all x.(Grimpus(x) -> Vuxus(x))", "all x.(Grimpus(x) -> Vumpus(x))", "all x.(Grimpus(x) -> Vumpus(x))", "all x.(Grimpus(x) -> Vumpus(x))", "is aVimpus(x) -> Grimpus(x))", "all x.(Grimpus(x) -> Vumpus(x))", "all x.(Grimpus(x) -> Vulmpus(x))", "all x.(Grimse(x) -> Unusual(x))"]}
{"id": "prontoqa_train_1199", "nl": "Wren is a yumpus, Wren is not a rompus, and Wren is a lorpus.", "fol": "(yumpus(Wren) & -rompus(Wren) & lorpus(Wren))", "prediction": ["(all x.(Wren(x) -> Yumpa(x)) & (-Wren(x) -> Rompus(x)) & (Lorpus(x) -> Yumpa(x)))", "(all x.(Wren(x) -> Yampus(x)) & (Wren(x) -> -Rompus(x)) & (Wren(x) -> Lorpus(x)))", "(all x.(Wren(x) -> Yampus(x)) & (Wren(x) -> -Rompus(x)) & (Wren(x) -> Llorpus(x)))", "(all x.(Wren(x) -> Yumpa(x)) & (-rompus(x) & -Dwarf(x))) & (-rompus(x) & -lorpus(x)))", "(all x.(Rompus(x) -> (Yumpus(x) | -Rompus(x))) & all y.(Lorpus(y) -> (Drumpus(y) & -Rompus(y))))", "all x y z.((Wren(x) & Yumpus(y) & Roampus(z)) -> (None(x,z) & (Lorpus(x) | NoPumpus(y))))", "all x y z.((Wren(x) & Yumpus(y) & Raccoon(z)) -> (Kyumpus(x) & -Rrompus(y) & Loomis(z)))", "(all x.(Wren(x) -> Youmpus(x)) & (-(Wren(x) & Rompus(x))) | (-Wren(x) & Lorpus(x))))", "all x y z.((Wren(x) & Yumpus(y) & -Rompus(z) & Lorpus(x)) -> (Yumpus(x) & -Rompus(y) & -Lorpus(x)))", "(all x.(Wren(x) -> Yumpus(x)) & (-Bustina(x) -> Rompus(x)) & (Lorpus(x) -> Hornet(x)))", "(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> -Rompus(x)) & (Wren(x) -> Lorpus(x)))", "all x y z.((Yumpus(x) & Wren(y) & Rumpus(z) & Worm(x)) -> (Yumpus(x) & -Rompus(y) & Lorpus(z)))", "(all x y z.((Wren(x) & Yumpus(y)) -> (Yumpus(x) & -Rompus(y)) & ((Wren(z) & Lorpus(z)) -> Lorpus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Rompus(z)) -> (Yumpus(x) & -Rompus(y) & Loper(z)))", "all x y.((Wren(x) & Yumpus(x)) -> (-Rompus(x) & Lordpus(y)))", "(all x.(Wren(x) -> Yumpus(x)) & (-Wren(x) -> Rompus(x)) & (-Wren(x) -> Lorpus(x)))"]}
{"id": "prontoqa_train_1200", "nl": "Wren is a shumpus and Wren is a brimpus and Wren is not a vumpus.", "fol": "(shumpus(Wren) & brimpus(Wren) & -vumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Humpus(x)) & ((Wren(x) -> Brimpus(x))) | ((Wren(x) -> -Vumpus(x)))))", "(all x y z.(Wren(x) -> (Shumpus(x) | Buckle(y))) & (Wren(z) -> -Vumpus(z)))", "(all x.(Wren(x) -> Shumpus(x)) & (Wren(x) -> Brimpus(x)) & (Wren(x) -> -Vimpus(x)))", "(all x.(Wren(x) -> Humpback(x)) & (Brimpus(x) & -Vumpus(x)))", "(all x y.(Wren(x) -> Humpus(x)) & (Wren(y) -> Brimpus(y)) & ((Wren(x) & -Vumpus(y))))", "(all x.(Renner(x) -> Humpus(x)) & (Wren(x) -> Brimpus(x)) & -Vumpus(x)))", "all x y z.((Wren(x) & Shumpus(y) & Brimpus(z)) -> (Shumpus(x) & Brimpus(x) & -Vumpus(x)))", "(all x.(Wren(x) -> Shumpus(x)) & all y.(Wren(y) -> Brimpus(y))) & all z.(Wren(z) -> -Vumpus(z)))", "(all x.(Wren(x) -> Humpus(x)) & (Wren(x) -> Brimpus(x)) & -Vumpus(x)))", "(all x.(Wren(x) -> Shumpus(x)) & ((Wren(x) -Vimpus(x)) -> Brimpus(x)))", "(all x.(Wren(x) -> Shumpus(x)) & ((Wren(x) -> Brimpus(x))) & ((Wren(x) -> -Vumpus(x))))", "all x y z.((Wren(x) & Humpus(y) & Brimpus(z)) -> (Shumpus(x) | Brimpus(z)) & -Vumpus(z)))", "(all x.(Wren(x) -> Humpus(x)) & (Brimpus(x) & -Vimpus(x)))", "(all x y z.(Wren(x) -> Humpus(x)) & ((Wren(y) & Britus(y)) -> Blank(y)) & ((Wren(z) & -Vumpus(z))) -> Humpus(z)))", "(Shumpus(Wren) & Brimpus(Wren) & -Vumpus(Wren))", "all x y z.((Wren(x) & Humpus(y) & Brimpus(z)) -> (Shumpus(x) & Brimpus(y) & -Vumpus(z)))"]}
{"id": "prontoqa_train_1201", "nl": "Wren is a jompus, Wren is a brimpus, and Wren is not a lempus.", "fol": "(jompus(Wren) & brimpus(Wren) & -lempus(Wren))", "prediction": ["all x y z.((Wren(x) & Jompus(x) & Brimpus(y) & -Lempus(z)) -> (Jempus(x) & Brimpus(y) & -Lempus(z)))", "(all x.(Wren(x) -> Nompus(x)) & ((Wren(x) & Nompus(x))) -> Brimpus(x)))", "(exists x.(Wren(x) & Jompus(x)) & exists y.(Brimpus(y) & Brimpus(y)) & exists z.(Wren(z) & -Lempus(z))))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Brimpus(y)) & all z.(Wren(z) -> -Lempus(z))))", "(all x.(Wren(x) -> Jompus(x)) & ((Wren(x) & Brimpus(x))) & ((Wren(x) & -Lempus(x))))", "all x y z.((Wren(x) & Jompus(y) & Brimpus(z)) -> (Jompus(x) | Brimpus(z) & -Lempus(z)))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Brimpus(y)) & all z.(Wren(z) -> -Lempus(z))))", "all x.(Wren(x) -> (Jompus(x) | Brimpus(x) | -Lempus(x)))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Brimpus(x)) & (Wren(x) -> -Lempus(x)))", "(all x y.(Wren(x) -> Jompus(x)) & ((Wren(y) & Brimpus(y))) -> -Lempus(y)))", "(all x.(Wren(x) -> (Jompus(x) | Brimpus(x)) | -Lempus(x)))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Brimpus(x)) & (Wren(x) -> -Lempus(x)))", "(all x.(Wren(x) -> Jompus(x)) & ((Wren(x) & Brimpus(x))) & ((Wren(x) & -Limpus(x))))", "(all x.(Wren(x) -> Jompus(x)) & ((Wren(x) -> Brimpus(x))) & ((Wren(x) -> -Lempus(x))))", "all x.(Wren(x) -> (Jompus(x) & Brimpus(x) & -Lempus(x)))", "(all x y z.((Wren(x) & Jompus(x)) -> Hmmmm(x)) & ((Wren(y) & Brimpus(y)) -> -Lempus(z)))"]}
{"id": "prontoqa_train_1202", "nl": "Wren is not a numpus, Wren is not a grimpus, and Wren is not an impus.", "fol": "(-numpus(Wren) & -grimpus(Wren) & -impus(Wren))", "prediction": ["(all x.(Wren(x) -> -numpus(x)) & all y.(Wren(y) -> -grimpus(y)) & all z.(Wren(z) -> -impose(z))))", "(all x.(Wren(x) -> -Number(x)) & (-Grimpus(x) & -Illegal(x))))", "(all x.(Wren(x) -> -Numpus(x)) & ((Wren(x) & Grimpus(x))) -> -Impossible(x)))", "(all x.(Wren(x) -> -Numpus(x)) & all y.(Wren(y) -> NoScarpa(y))) & all z.(Wren(z) -> -Impossible(z))))", "all x.(Wren(x) & -numpus(x) & -grimpus(x) & -isolator(x))", "(-Smoothpus(Wren) & -Grimpus(Wren) & -Impossible(Wren))", "(-numpus(Wren) & -Grimpus(Wren) & -Dubisivo(Wren))", "(all x.(Wren(x) -> -Numpus(x)) & all y.(Wren(y) -> -Grimpus(y)) & all z.(Wren(z) -> -Impossible(z))))", "(all x.(Wren(x) -> -Numpus(x)) & all y.(Wren(y) -> -Grimpus(y)) & all z.(Wren(z) -> -Impossible(z))))", "(all x.(Wren(x) -> -numpus(x)) & ((Wren(x) -> -fury(x))) | (Wren(x) -> -grosspus(x)))) & ((Wren(x) -> -idresponsible(x))))", "all x y z.((Wren(x) & Numpus(y) & Grimpus(z)) -> -KumpusToddler(x))", "all x y z.((Wren(x) & Numpus(y) & Gruppus(z)) -> (-Numpus(x) & -Grimpus(y) & -Impossible(z)))", "(all x.(Wren(x) -> -Number(x)) & (Wren(x) -> -Grampus(x)) & (Wren(x) -> -Issue(x))))", "(all x.(Wren(x) -> -Numpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> -Ilimination(z))))", "(all x.(Wren(x) -> -Numpus(x)) & (Wren(x) -> -Grimpus(x)) & (Wren(x) -> -Iludor(x))))", "(all x.(Wren(x) -> -Numbet(x)) & (Wren(x) -> -Grimpus(x)) & (Wren(x) -> -Iliot(x)))"]}
{"id": "prontoqa_train_1203", "nl": "Lempuses are rompuses and jompuses and lorpuses.", "fol": "all x. (lempus(x) -> (rompus(x) & jompus(x) & lorpus(x)))", "prediction": ["all x.(Lemme(x) -> (Rompuse(x) | Jompuse(x) | Lordpuse(x)))", "all x.(Lempuse(x) -> (Rompus(x) & Jompuse(x) & Lorpus(x)))", "(all x.(Lempuse(x) -> Rompus(x)) & (Jompuse(x) | Lorpus(x)))", "all x.(Lemmes(x) -> (Rompus(x) | Jompuse(x) | Lorpuse(x)))", "all x.(Lempuse(x) -> (Rompus(x) | Jompuse(x) | Lorpuse(x)))", "all x.(Lempuse(x) -> (Rompuse(x) | Jompuse(x) | Lorpuse(x)))", "all x.(Lempuse(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))", "all x y.((Lempuse(x) & Rompus(y)) -> (Rompus(x) | Jompuse(x) | Lorpus(x)))", "all x.(Lempuse(x) -> (Romes(x) | Jompuse(x) | Lorpus(x)))", "all x.(Lempuse(x) -> (Rompus(x) | Jompuse(x) | Lorpuse(x)))", "all x.(Lampuse(x) -> (Rompuse(x) & Jompuse(x) & Lordpuse(x)))", "all x.(Lempuse(x) -> (Rompus(x) | Jompuse(x) | Lorpuse(x)))", "(all x y.(Lampuse(x) -> (Rompuses(x) | Jompuses(y) | Lorpuses(y))))", "all x.(Lempuse(x) -> (Rompus(x) | Jompuse(x) | Lorpuse(x)))", "all x.(Lempuse(x) -> (Brompus(x) & Jompuse(x) & Lorpus(x)))", "all x.(Lempuse(x) -> (Rompus(x) | Jompuse(x) | Lorpus(x)))"]}
{"id": "prontoqa_train_1204", "nl": "Polly is a lempus.", "fol": "lempus(Polly)", "prediction": ["Polly ist lempus.", "(Lempus(Polly) -> Lempus(Polly))", "ALL x.(Polly(x) -> Lempus(x))", "All x.(Polly(x) -> Lempus(x))", "Polly is a lempus.", "Polly is a lempus.", "Polly,lempus(polly)", "Polly is a lempus.", "(Lempus(Polly) & -Lempus(Poly))", "(Limpus(Polly) -> Leopard(Polly))", "all x.(Lampus(x) -> Polly(x))", "all x.(Polly(x) -> Lesser(x))", "all x.(Lempus(x) -> Polly(x))", "(Lempus(Polly) -> Lempus(Polly))", "Polly is a Lempus.", "all x.(Lempus(x) -> Polly(x))"]}
{"id": "prontoqa_train_1205", "nl": "Polly is a yumpus or a jompus or a grimpus.", "fol": "(yumpus(Polly) | jompus(Polly) | grimpus(Polly))", "prediction": ["all x.(Polly(x) -> (Yumpus(x) | Jimpus(x) | Grimpus(x)))", "all x.(Polly(x) -> (Yumpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Polly(x) -> (Yumpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Poly(x) -> (yumpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Polly(x) -> (Yumpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Polly(x) -> (Yumpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Polly(x) -> (Yumpus(x) | Jompus(x) | Grimpus(x)))", "(yumpus(polly) | jompus(polly) | grimpus(polly)))", "all x.(Polly(x) -> (Yumpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Polly(x) -> (Yumpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Poly(x) -> (Yumpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Polly(x) -> (Yumpus(x) | Jompus(x) | Grapps(x)))", "(yumpus) & (jompus) | Grimpus)))", "all x.(Polly(x) -> (Yumpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Polly(x) -> (Yumpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Ploy(x) -> (Yumpus(x) | Jompus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1206", "nl": "Everything that is a wumpus, a yumpus, and a sterpus is a brimpus.", "fol": "all x. ((wumpus(x) & yumpus(x) & sterpus(x)) -> brimpus(x))", "prediction": ["all x.((Wumpus(x) | Yampus(x) | Sterpus(x)) -> Brimpus(x))", "all x.((Wumpus(x) | Yampus(x) | Sterpus(x)) -> Brimpus(x))", "all x.((Wumpus(x) | Yumpus(x) | Sterpus(x)) -> Brimpus(x))", "all x.((Wumpus(x) | Yompus(x) | Sterpus(x)) -> Brimpus(x))", "all x.((Wumpus(x) | Yumpus(x) | Sterpus(x)) -> Brimpus(x))", "all x.((Wumpus(x) | Yuppus(x) | Sterpus(x)) -> Brimpus(x))", "all x.((Wumpus(x) | Yukon(x) | Sterpus(x)) -> Brimpus(x))", "all x.((Wumpus(x) | Yuppus(x) | Sterpus(x)) -> Brimpus(x))", "all x.((Wumpus(x) | Yumpus(x) | Sterpus(x)) -> Brimpus(x))", "all x.((Wumpus(x) & Yumpus(x) & Strasserpus(x)) -> Brimpus(x))", "all x y z.((Excel(x) & Wumpus(y) & Yumpus(z) & Sterpus(z) & exists w.(Brimpus(w) & Yumpus(w) & Y & Y)) & exists w.(Storpus(w) & Y) & Throat(w))) -> Brimpus(x))", "all x.((Wumpus(x) | Yumpus(x) | Steroid(x)) -> Brimpus(x))", "all x.((All YUMPUS(x) & All Thrill(x) & Hole(x) & Brompus(x)) -> Brimpus(x))", "all x.((Wumpus(x) | Yumpus(x) | Sterpus(x)) -> Brimpus(x))", "all x.((Wumpus(x) & Yumpus(x) & Sterpus(x)) -> Brimpus(x))", "all x.((Wumpus(x) | Yampus(x) | Sterpus(x)) -> Brimpus(x))"]}
{"id": "prontoqa_train_1207", "nl": "Wren is a jompus, Wren is a numpus, and Wren is not a brimpus.", "fol": "(jompus(Wren) & numpus(Wren) & -brimpus(Wren))", "prediction": ["exists x.(Wren(x) & John(x) & Numpus(x) & -Brimpus(x))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Numpus(x)) & (Wren(x) -> -Brompus(x)))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Numpus(y)) & all z.(Wren(z) -> -Brompus(z))))", "(all x y z.(Wren(x) -> (Jompus(x) & Numpus(y))) & (-Brumpus(z))))", "is jompus(Wren) & is numpus(Wren) & -Brumpus(Wren))", "all x y z.((Wren(x) & Jompus(y) & Numpus(z)) -> (Jompus(x) & Numpus(y) & -Brimpus(z)))", "(all x y z.(Wren(x) -> Jompus(x)) & ((Wren(y) -> Numpus(y)) & ((Wren(z) & Brimpus(z))) -> -Brimpus(z))))", "all x y z.((Wren(x) & Jompus(y) & Numpus(z)) -> ((Jampus(x) | Numpus(z) | -Brimpus(z))))", "(all x y z.(Wren(x) -> Jompus(x)) & ((Wren(y) -> Numpus(y))) | ((Wren(z) -> Brimpus(z)))))", "all x y z.((Wren(x) & Jompus(y) & Numpus(z)) -> (Moor(x) & -Brimpus(x)))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Numpus(x)) & -Brimpus(x)))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Numpus(y))) & all z.(Wren(z) -> -Brimpus(z)))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Numpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Numpus(y)) & all z.(Wren(z) -> Brimpus(z))))", "(all x.(Wren(x) -> Jompus(x)) & ((Wren(x) & Numpus(x))) & ((Wren(x) & -Brimpus(x)) -> Jompus(x)))", "all x y z.((Wren(x) & Jompus(y) & Numpus(z) & -Brimpus(x)) -> (Jompus(x) & Numpus(x) & -Brimpus(x)))"]}
{"id": "prontoqa_train_1208", "nl": "Wren is not a wumpus.", "fol": "-wumpus(Wren)", "prediction": ["(NoWumpus(Wren) -> Wren(Wren))", "(-Wren(w) & IsWumpus(w))", "all x.(Wren(x) -> -Wumpus(x))", "Wren is notWumpus(w) -> InStock.", "all x.(Wren(x) -> -Wumpus(x))", "all x.(Wren(x) -> -Wumpus(x))", "all x.(Wren(x) -> -Wumpus(x))", "(-Wren(Wren))", "(-Wren(w) & Wilder(w))", "exists x.(Wren(x) & -Wumpus(x))", "this bird(Wren)", "all x.(Wren(x) -> -Wumpus(x))", "all x.(Wren(x) -> -Wumpus(x))", "(all x.(Wren(x) -> -Wumpus(x)))", "all x.(Wren(x) -> -Wumpus(x))", "all x.(Wren(x) -> -Wumpus(x))"]}
{"id": "prontoqa_train_1209", "nl": "Sterpuses are grimpuses, rompuses, and wumpuses.", "fol": "all x. (sterpus(x) -> (grimpus(x) & rompus(x) & wumpus(x)))", "prediction": ["all x.(Sterpuse(x) -> (Steerpuse(x) | Grope(x) | Rumpus(x) | Wumpus(x)))", "(all x.(Sterpuse(x) -> Grimpuse(x)) & (Rompus(x) | Wumpus(x)))", "(all x.(Sterpuse(x) -> Gruppuse(x)) & (Rompus(x) | Wormpus(x)))", "all x.(Sterpuse(x) -> (Smoochus(x) | Rompus(x) | Umphus(x)))", "all x.(Sterpuse(x) -> (Fragulous(x) | Romanpus(x) | Humpus(x)))", "all x.(Sterpuse(x) -> (Grimpus(x) | Rumpus(x) | Wumpus(x)))", "all x y z.((Sterpus(x) & Grimpuse(y) & Rompuse(z) & Wompuse(x,y)) -> (Rompus(z) | Wompus(z))))", "all x.(Sterpuse(x) -> (Fragpus(x) | Rompus(x) | Wumpus(x)))", "all x.(Sterpuse(x) -> (Grimpus(x) | Rompus(x) | Wumpus(x)))", "all x.(Sterpuse(x) -> (Grimpus(x) | Rompus(x) | Wumpus(x)))", "all x.(Sterpuse(x) -> (Grimpus(x) | Rompus(x) | Wampus(x)))", "all x.(Sterpuse(x) -> (Grimpuse(x) | Rompuse(x) | Wumpuse(x)))", "all x.(Sterpus(x) -> (Flampus(x) | Rompus(x) | Wumpus(x)))", "all x.(Sterpuse(x) -> ((Grimpus (x) | Rompus(x) | Wumpus(x))))", "(all x.(Sterpuse(x) -> Grimpuse(x)) & all y.(Rompus(y) & all z.(Wumpus(z) & EmbroiledIn(y,x))))", "all x.(Sterpuse(x) -> (Cruppy(x) | Rompus(x) | Wumpus(x)))"]}
{"id": "prontoqa_train_1210", "nl": "Rex is not a grimpus and Rex is a lorpus and Rex is a numpus.", "fol": "(-grimpus(Rex) & lorpus(Rex) & numpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Grimpus)) & all y.(Lorpus(y) & -Numpus(z))))", "all x y z.((Rex(x) & Grumpus(y) & Lorpus(z)) -> (-Grimpus(x) & Nobus(x) & Numpus(y)))", "(all x.(Rex(x) -> -Grimpus(x)) & (Lorpus(x) | Numpus(x))))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Rex(y) -> Lorpus(y)) & all z.(Rex(z) -> Numpus(z))))", "all x y z.((Rex(x) & Grimpus(y) & Lorpus(z)) -> (-Grippus(x) & -Lorpus(x) & -Numpus(x)))", "(all x.(Rex(x) -> (-Grimpus(x) & -Lorpus(x))) & all y.(Rex(y) -> Numpus(y)))", "(-Grimpus(Rex) & Lorpus(Rex) & Numpus(Rex))", "all x y z.((Rex(x) & Grimpus(y) & Lorpus(z)) -> (-Grimpus(x) & RexMutus(x) & RexMutus(x)))", "all x y z.((Rex(x) & Grimpus(y) & Lorpus(z)) -> (-Grimpus(x) & -Lorpus(y) & -Numpus(z)))", "(all x y z.(Grimpus(x) -> -Grimpus(x)) & (Lorpus(y) -> -Grimpus(y)) & (Numpus(z) -> -Grimpus(z))))", "all x y z.((Rex(x) & Grimpus(y) & Lorpus(z)) -> (-Grampus(x) & Florpus(y) & Numpus(z)))", "all x y.((Rex(x) & Grimpus(y)) -> (-Grimpus(x) & Lemur(y) & Numpus(x)))", "exists x.(Rex(x) & -Grimpus(x) & Lox(x) & Numpus(x))", "all x y z.((Rex(x) & Gruppus(y) & Lorpus(z)) -> (-Grimpus(x) & -Lorpus(y) & -Numpus(z)))", "all x y z.((Rex(x) & Grumpus(y) & Lorpus(z)) -> (-Skunk(x) & Nimpus(x)])", "(all x.(Rex(x) -> -Gruppus(x)) & (Rex(x) -> Lorpus(x)) & (Rex(x) -> Numpus(x))))"]}
{"id": "prontoqa_train_1211", "nl": "Everything that is a shumpus or a lempus or a sterpus is a wumpus.", "fol": "all x. ((shumpus(x) | lempus(x) | sterpus(x)) -> wumpus(x))", "prediction": ["all x.((Shumpus(x) | Lempus(x) | Stupidus(x)) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(x))", "all x.((Roundup(x) | Rollup(x) | Rollup(x))) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Stump(x))) -> Humpus(x))", "all x.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(x))", "all x.(((Shumpus(x) | Lempus(x) | Sterpus(x))) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(x))", "all x.((Shumpus(x) | Lempus(x) | Sterpus(x)) -> Wumpus(x))"]}
{"id": "prontoqa_train_1212", "nl": "Sally is a lorpus and a rompus and a sterpus.", "fol": "(lorpus(Sally) & rompus(Sally) & sterpus(Sally))", "prediction": ["all x.(Sally(x) -> (Lorpus(x) & Rompus(x) & Sterpus(x)))", "(Lorpus(Sally) | Romanpus(Sally) | Steroid(Sally))", "all x.(Sally(x) -> (Lorph(x) & Rompus(x) & Sterpus(x)))", "(Lorpus(Sally) & Rompus(Sally) & Sterpus(Sally))", "all x.(Sally(x) -> (Lorpus(x) & Rompus(x) & Sterpus(x)))", "all x y z.((Sally(x) & Lorps(y) & Rompus(z)) -> (Lorps(x,y) & Rompus(x,z) & Sterpus(x)))", "all x.(Sally(x) -> (Lorpus(x) & Rompus(x) & Sterus(x)))", "all x.(Sally(x) -> (Lorpus(x) & Rompus(x) & sterpus(x)))", "all x.(Sally(x) -> (Lorpus(x) & Rompus(x) & Sterpus(x)))", "(Lorpus(Sally) | Rompus(Sally) | Sterpus(Sally))", "all x y.((Sally(x) & Lorpus(x) & Rompus(y)) -> (Mother(x) & Sterpus(y)))", "(Lorpus(Sally) & Rompus(Sally) & Sterpus(Sally))", "exists x.(Sally(x) & Lorpus(x) & Rompus(x) & Sterpus(x))", "all x.(Sally(x) -> (Lorpus(x) & Rompus(x) & Sterpus(x)))", "(Lorpus(Sally) & Rompus(Sally) & Sterpus(Sally))", "all x.(Sally(x) -> (Lorpus(x) & Rompus(x) & Sterpus(x)))"]}
{"id": "prontoqa_train_1213", "nl": "Sally is a wumpus.", "fol": "wumpus(Sally)", "prediction": ["Sally is a wumpus.", "Sally is a wumpus.", "Sally (Wumpus)", "all x.(Wumpus(x) -> Sally(x))", "(Wumpus(Sally) -> Wumpus(Sally))", "Sally is a Wombu(Sally)", "Sally is a wumpus.", "Sally is a wumpus.", "Sally is a Wumpus(s) & likestoeat(s) & eats(s) & drinks(s) & exists y.((Wumpus(y) & Wumpus(y))) -> Is(s) & WaitesFor(y)))", "Sally is a Wumpus.", "Sally is a wumpus.", "Sally is a wumpus.", "all x.(Wumpus(x) -> Sally(x))", "Sally is a wumpus.", "Sally Wampus(Sally,Wumpus)", "Sally is a wumpus."]}
{"id": "prontoqa_train_1214", "nl": "Everything that is a gorpus and a lorpus and a grimpus is a sterpus, an impus, and a yumpus.", "fol": "all x. ((gorpus(x) & lorpus(x) & grimpus(x)) -> (sterpus(x) & impus(x) & yumpus(x)))", "prediction": ["all x.((Gorpus(x) & Lorpus(x) & Grimpus(x)) -> (Steerpus(x) & Imperator(x) & Yumpus(x)))", "all x.((Korpus(x) & Lorpus(x) & Grimpus(x)) -> (Sterpus(x) & Imperator(x) & Yumpus(x)))", "all x.(Gorpus(x) -> (Lorpus(x) & Grimpus(x)) & Throat(x) & Imped(x) & Umphodon(x) & Yumpus(x)))", "all x.((HearsGorpus(x) & HearsLorpus(x) & HearsLurpus(x) & Harppus(x)) -> (Sterepus(x) & Ispos(x) & Yampus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Grimpus(x)) -> (Sterepus(x) & Impossible(x) & Yumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Grimpus(x)) -> (Sterpus(x) & Impedent(x) & Yumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Grimpus(x)) -> (Sterpus(x) & Impossible(x) & Yumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Grimpus(x)) -> (Sterpus(x) | Imperator(x) | Yumpus(x)))", "all x.((Gorpus(x) & Lordpus(x) & Grimpus(x)) -> (Sterola(x) & Issue(x) & Yupse(x)))", "all x.((Gorpus(x) & Lorpus(x) & Grimpus(x)) -> (Sterpus(x) & Impossible(x) & Yumpus(x)))", "all x.((All Y.(Gorpus(x) & All Y.(Lorpus(y) & All w.(Grimpus(w))) -> (Sterpus(x) & Imperempted(x) & All w.(Yumpus(x) & All w.(Drumpus(w) & Stroh(x)) & All w.(Osmosis(w))))", "all x.((Gorpus(x) & Lorpus(x) & Grimpus(x)) -> (Sterepus(x) & Impossible(x) & Yumpus(x)))", "all x.((Gorpus(x) & Worpus(x) & Grimpus(x)) -> (Steroid(x) & Impossible(x) & Yumpus(x)))", "all x y.((Gorpus(x) & Lorpus(x) & Grimpus(x)) -> (Sterpus(x) & Impossible(y) & Yumpus(y)))", "all x.((Gorpus(x) & Lorpus(x) & Grimpus(x)) -> (Sterepus(x) | Impermissible(x) | Yumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Gruppus(x)) -> (Sterpus(x) & Issue(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1215", "nl": "Alex is a zumpus, a vumpus, and a jompus.", "fol": "(zumpus(Alex) & vumpus(Alex) & jompus(Alex))", "prediction": ["(All x.(Alex(x) -> Zumpus(x)) & (Vampus(x) & Jompus(x)))", "all x.(Alex(x) -> (Tompus(x) & Vumpus(x) & Jompus(x)))", "all x.(Alex(x) -> (Zumpus(x) & Vampus(x) & Jompus(x)))", "all x.(Alex(x) -> (Tompus(x) & Vampus(x) & Jompus(x)))", "all x.(Alex(x) -> (Atompus(x) | Vampus(x) | Jompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Vumpus(x) | Jompus(x)))", "all x y z.((Tommus(x) & Vumpus(y) & Jompus(z)) -> (Mitosh(x) | Vumpus(y) | Jompus(z)))", "all x.(Alex(x) -> (Tompus(x) | Vampire(x) | Jompus(x)))", "(Umpus(Alex) & Vampire(Alex) & Jompus(Alex))", "all x.(Alex(x) -> (Tompus(x) & Vampus(x) & JOmpus(x)))", "all x.(Alex(x) -> (Tompus(x) & Vumpus(x) & Jompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Vumpus(x) | Jompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Vampus(x) | Jompus(x)))", "all x.(Alex(x) -> (Tompus(x) & -Umpus(x) & -Jompus(x)))", "all x.(Alex(x) -> (Touchpus(x) & Voompus(x) & Jompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Vampire(x) | Jompus(x)))"]}
{"id": "prontoqa_train_1216", "nl": "Alex is a brimpus or a yumpus or a dumpus.", "fol": "(brimpus(Alex) | yumpus(Alex) | dumpus(Alex))", "prediction": ["all x.(Alex(x) -> (Brimpus(x) | Yampus(x) | Dumpus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Yampus(x) | Dumpus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Yumpus(x) | Dumpus(x)))", "all x.(Alex(x) -> (Blimpus(x) | Yumpus(x) | Dumpus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Yumpus(x) | Dumpus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Yumpus(x) | Dumpus(x)))", "all x.(Alex(x) -> (Brampus(x) | Umpus(x) | Dumpus(x)))", "all x.(Alex(x) -> (Brumpus(x) | Yumpus(x) | Dumpus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Yummpus(x) | Dumpus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Yumpus(x) | Dumpus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Yumpus(x) | Dumpus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Yumpus(x) | Dumpus(x)))", "(Brimpus(Alex) | Yumpus(Alex) | Dumpus(Alex))", "all x.(Alex(x) -> (Brumpus(x) | Yampus(x) | Dumpus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Yumpus(x) | Dumpus(x)))", "all x.(Alex(x) -> (Brampus(x) | Yampus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_1217", "nl": "Everything that is a gorpus, an impus, and a zumpus is a brimpus, a sterpus, and a rompus.", "fol": "all x. ((gorpus(x) & impus(x) & zumpus(x)) -> (brimpus(x) & sterpus(x) & rompus(x)))", "prediction": ["all x.((Gorpus(x) | Impossible(x) | Zumpus(x)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))", "all x.((Gorpus(x) & Imposso(x) & Zumpus(x)) -> ((Brimpus(x) | Sterpus(x) | Roma(x))))", "all x.((Gorpus(x) | Impossible(x) | Zumpus(x)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))", "all x.((Gorpus(x) | Improvized(x) | Zumpus(x)) -> (Brimpus(x) | Sterpus(x) | Rompus(x)))", "all x.((Gorpus(x) | Imperative(x) | Zumpus(x)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))", "all x.((Gorpus(x) | Imposer(x) | Zumpus(x)) -> (Brimpus(x) | Sterpus(x) | Rompus(x)))", "all x.((Gorpus(x) | Impossible(x) | Zumpus(x)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))", "all x.((Gorpus(x) | IsImpos(x) | Zumpus(x)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))", "all x.((Gorpus(x) | Impossible(x) | Zumpus(x)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))", "all x.((Gorpus(x) | IsImproviser(x) | IsTompus(x)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))", "all x.((Gorpus(x) | Impeccated(x) | Zumpus(x)) -> (Brimpus(x) & Steroid(x) & Rompus(x)))", "all x.((Gorpus(x) | Imperium(x) | Zumpus(x)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))", "all x.((Gorpus(x) | Imperempt(x) | Zumpus(x)) -> (Brimpus(x) & Sterpus(x) & Rompus(x)))", "all x.((Gorpus(x) | Impossible(x) | Zurpus(x)) -> (Brimpus(x) | Sterpus(x) | Rompus(x)))", "all x.((Gorpus(x) | Impossible(x) | Zumpus(x)) -> (Brimpus(x) | Sterpus(x) | Rompus(x)))", "all x.((Gorpus(x) | Impossible(x) | Zumpus(x)) -> (Brimpus(x) | Sterus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1218", "nl": "Max is a gorpus.", "fol": "gorpus(Max)", "prediction": ["all x.(Max(x) -> Gorpus(x))", "Max is gorpus.", "(Gorpus(Max) -> HasHair(Max))", "(Stimming(Max) & Gorpus(Max))", "(Gorpus(Max) -> Gorpus(Max))", "all x.(Max(x) -> Gorpus(x))", "all x.(Max(x) -> Gorpus(x))", "Max is Gorpus.", "(Gorpus(Max) -> Gorpus(Max))", "all x.(Max(x) -> Gorpus(x))", "all x.(Max(x) -> Gorpus(x))", "(Halloman(Max) & Gorpus(Max))", "\u201cGorpus\u201d", "All x.(Max(x) -> Gorpus(x))", "Max is Gorpus(Max)", "All x.(Max(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_1219", "nl": "Max is an impus.", "fol": "impus(Max)", "prediction": ["Max is a impus.", "All x.(Max(x) -> Exemplified(x))", "all x.(Max(x) -> Impeccably(x))", "(M Max (Max) & Impossible(Max))", "Max is a impusct.", "(Imposer(Max)", "MaxImpfer(Max)", "(Impossible(Max))", "ALL x.(Max(x) -> IsExercised(x))", "Max isImprovis\u00e9(x)", "all x.(Max(x) -> Is(x,y))", "All x.(Max(x) -> IsMeridian(x))", "exists x.(Max(x) & Impermissible(x))", "All x.(Max(x) -> IsPrimary(x))", "All x.(Max(x) -> IsExercise(x))", "Max is impus."]}
{"id": "prontoqa_train_1220", "nl": "Everything that is a lempus, a gorpus, and a sterpus is not a grimpus.", "fol": "all x. ((lempus(x) & gorpus(x) & sterpus(x)) -> -grimpus(x))", "prediction": ["all x.((Elements(x) & (Lempus(x) | Gorpus(x) | Sterpus(x))) -> -Grimpus(x))", "all x.((Lempus(x) | Gorpus(x) | Sterpus(x)) -> -Grimpus(x))", "all x.((Lempus(x) | Gorpus(x) | Sterpus(x)) -> -Cruppus(x))", "all x.((Lempus_(x) | Gorpus_(x) | Sterpus_(x))) -> -Grimpus(x))", "all x.((Lempus(x) & Gorpus(x) & Sterpus(x)) -> -Grimpus(x))", "all x.((Lempus(x) & Gorpus(x) & Sterpus(x)) -> -Grimpus(x))", "all x.((Crompus(x) & (Lempus(x) | Gorpus(x) | Sterpus(x))) -> -Scrumptus(x))", "all x.((Alliance(x) & Lempus(x) & Gorpus(x) & Sterpus(x)) -> -Grimpus(x))", "all x.((Limpus(x) | Gorpus(x) | STERPUS(x)) -> -Grimpus(x))", "(all x.((Lempus(x) | Gorpus(x) | Sterpus(x))) -> -Grimpus(x))", "all x.((Lempus(x) | Gorpus(x) | Sterpus(x)) -> -Grimpus(x))", "all x.((Blog(x) & Grimpus(x)) -> (Lempus(x) | Gorpus(x) | Sterpus(x)))", "all x.((Lempus(x) | Gorpus(x) | Sterpus(x)) -> -Grimpus(x))", "all x.((Lempus(x) | Gorpus(x) | Sterpus(x)) -> -Grimpus(x))", "all x.((Lempus(x) & Gorpus(x) & Stusterpus(x)) -> -SmokePest(x))", "all x.((Smoke(x) & Lempus(x) | Gorpus(x) | Sterpus(x))) -> -Smoke(x))"]}
{"id": "prontoqa_train_1221", "nl": "Everything that is a shumpus, a yumpus, or an impus is a grimpus.", "fol": "all x. ((shumpus(x) | yumpus(x) | impus(x)) -> grimpus(x))", "prediction": ["all x.((Shumpus(x) | Yampus(x) | Impossible(x)) -> Grimpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Impermissible(x)) -> Grimpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Imperator(x)) -> Grimpus(x))", "all x.((Shumpus(x) | Yumanus(x) | Imperative(x)) -> Grimpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Impermissible(x)) -> Grimpus(x))", "all x.(((Shumpus(x) | Yampus(x) | Impossible(x))) -> Grimpus(x))", "all x.(((Shumpus(x) | Yumpus(x) | Assists(x))) -> Grimpus(x))", "all x.((Shumpus(x) | Yumbos(x) | Impossible(x)) -> Grimpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Impermant(x)) -> Grimpus(x))", "all x.((Shumpus(x) | Yuckus(x) | IsErzpost(x)) -> Grimpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Impossible(x)) -> Grimpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Impossible(x)) -> Grimpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Impossible(x)) -> Grimpus(x))", "all x.((Shumpus(x) | Yampus(x) | IsImpossible(x)) -> Grimpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Impossible(x)) -> Grimpus(x))", "all x.(Shumpus,Yumpus,Idemision,Intuitive(x)) -> Grimpus(x))"]}
{"id": "prontoqa_train_1222", "nl": "Each gorpus is a grimpus.", "fol": "all x. (gorpus(x) -> grimpus(x))", "prediction": ["all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(GORPUS(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_1223", "nl": "Dumpuses are gorpuses.", "fol": "all x. (dumpus(x) -> gorpus(x))", "prediction": ["all x.(Murpes(x) -> Gorpuse(x))", "all x.(Dumpuse(x) -> Gorpuse(x))", "all x.(Dumpuse(x) -> Gorpus(x))", "all x.(Dumpuse(x) -> Gorpus(x))", "all x.(Dumpuse(x) -> Gorpus(x))", "all x.(Dumpuse(x) -> Gorpus(x))", "all x.(Dumpuse(x) -> Gorpus(x))", "all x.(Dumpuse(x) -> Gorpus(x))", "all x.(Dumpuse(x) -> Gorpus(x))", "all x.(Dumpus(x) -> Gorpuse(x))", "all x.(Dumpuse(x) -> Gorpuse(x))", "all x.(Dumpus(x) -> Gorpuse(x))", "all x.(Dumpuse(x) -> Gorpus(x))", "all x.(Dumpuse(x) -> Gorpus(x))", "all x.(Dumpuse(x) -> Gorpuse(x))", "all x.(Dumpuse(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_1224", "nl": "Sally is a lorpus, Sally is a numpus, and Sally is not a grimpus.", "fol": "(lorpus(Sally) & numpus(Sally) & -grimpus(Sally))", "prediction": ["(all x.(Sally(x) -> Locropus(x)) & all y.(Sally(y) -> Numpus(y)) & all z.(Sally(z) -> -Grimpus(z))))", "(all x y z.(Sally(x) -> Lorpus(x)) & (Sally(y) -> Numpus(y)) & (Sally(z) -> -Grimpus(z))))", "(all x.(Sally(x) -> Lerus(x)) & (Sally(x) -> Numpus(x)) & (Sally(x) -> -Grimpus(x)))", "(5Dictionaries(Sally) & (Lorpus(Sally) | Numpus(Sally) | -Grimpus(Sally)))", "(all x.(Sally(x) -> Lorpus(x)) & (Sally(x) -> Numpus(x)) & (Sally(x) -> -Grimpus(x)))", "all x.((Sally(x) & Lorpus(x)) | (numpus(x) & -Grimpus(x))))", "(all x.(Sally(x) -> Lorpus(x)) & (Sally(x) -> Numpus(x)) & -Sally(x)))", "(all x.(Lorpus(x) -> Sally(x)) & all y.(Numpus(y) -> Sally(y))) & all z.(Smoothpus(z) -> -Synopsis(z))))", "all x.(Sally(x) -> (Lorph(x) & Numpus(x) & -Grimpus(x)))", "(all x.(Sally(x) -> Thrombus(x)) & (Sally(x) -> Numpus(x)) & -Salvos(x)))", "all x y z.((Sally(x) & Lorpus(x) & Naumpus(y) & -Grimpus(z)) -> (Lady(x) | Numpus(y) & -Mr.Snowpus(z)))", "(all x.(Sally(x) -> Lorpus(x)) & all y.(Sally(y) -> Numpus(y)) & all z.(Sally(z) -> -Grimpus(z))))", "(all x.(Sally(x) -> Lorpus(x)) & (Sally(x) -> Numpus(x)) & -Sally(x)))", "all x y z.((Sally(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & Numpus(y) & -Grimpus(z)))", "(all x.(Sally(x) -> Lorpus(x)) & all y.(Sally(y) -> Numpus(y)) & all z.(Sally(z) -> -Grimpus(z)))", "(all x.(Lorpus(x) -> Sally(x)) & (Nomade(x) -> Sally(x)) & -Grimpus(x)))"]}
{"id": "prontoqa_train_1225", "nl": "Each rompus is a gorpus, a tumpus, and a yumpus.", "fol": "all x. (rompus(x) -> (gorpus(x) & tumpus(x) & yumpus(x)))", "prediction": ["all x.(rompus(x) -> (Rompus(x) & Gorpus(x) & Tumpus(x) & Yampus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Tumpus(x) & Yumpus(x)))", "all x.(Rompus(x) -> (Gorpus(x) | Tumpus(x) | Yumpus(x)))", "all x.(Rompus(x) -> (Gorpus(x) | Tumpus(x) | Yumpus(x)))", "all x.(Rompus(x) -> (Gorpus(x) | Tumpus(x) | Yumpus(x)))", "all x.(Rompus(x) -> (Gorpus(x) | Tumpus(x) | Yumpus(x)))", "all x.(Rompus(x) -> (Gorpus(x) | Humpus(x) | Yumpus(x)))", "all x.(Rompus(x) -> (Gorpus(x) | Tumpus(x) | Yumpus(x)))", "all x.(Rompus(x) -> (Gorpus(x) | Tumpus(x) | Yumpus(x)))", "all x.(Rompus(x) -> (Gorpus(x) | Tumpus(x) | Yampus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Tumpus(x) & Yumpus(x)))", "all x.(Rompus(x) -> (Gorpus(x) | Rumpus(x) | Yumpus(x)))", "all x.(Rompus(x) -> (Gorpus(x) | Tumpus(x) | Yumpus(x)))", "exists x.(Rompus(x) & (Gorpus(x) | Tumpus(x) | Yumpus(x)))", "all x.(Rompus(x) -> (Gorpus(x) | Tumpus(x) | Yumpus(x)))", "all x.(Rompus(x) -> (Gorpus(x) | Tumpus(x) | Yumpus(x)))"]}
{"id": "prontoqa_train_1226", "nl": "Stella is not a yumpus and Stella is a zumpus and Stella is a dumpus.", "fol": "(-yumpus(Stella) & zumpus(Stella) & dumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Zumpus(y)) & all z.(Stella(z) -> Dumpus(z))))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Solisa(y) -> Zumpus(y))) & all z.(Stella(z) -> Dumpus(z))))", "all x y z.((Stella(x) & Yumpus(y) & Zumpus(z)) -> (-Yumpus(x) | Dumpus(y)))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Dumpus(x)))", "all x.(Stella(x) -> (-Yumpus(x) & Tommoth(x) & Dumpus(x)))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Dumpus(x)))", "(all x.(Stella(x) -> -Yumpus(x)) & (Tompus(x) | Dumpus(x))))", "all x y.((Stella(x) & Yuba(y)) -> (-Yumpus(x) & Zumpus(y) & Dumpus(x)))", "(all x.(Asylumpus(x) -> -Yumpus(x)) & (Asylumpus(x) -> Zumpus(x)) & (Asylumpus(x) -> Dumpus(x)))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Dumpus(x))))", "all x y.((Stella(x) & Zumpus(y)) -> (-Yumpus(x) | Dumpus(x)))", "(all x y.((Talla(x) & -Yumpus(x)) -> Topsy(x)) & ((Topsy(y) & A-Yumpus(y)) -> Dumpus(y)))", "(all x y z.(Matta(x) -> -Yumpus(x),Matta(y) & Daumpus(y) & Dumpus(z)))", "all x y.((Stella(x) & NoYumpus(x) & Stella(y)) -> (Tompus(y) & Dumpus(x)))", "all x y z.((Stella(x) & Yang(y) & Zumpus(z)) -> (-Yumpus(x) & Zumpus(x) & Dumpus(x)))", "all x y z.((Stella(x) & Yumpus(y) & Zumpus(z)) -> (-Yumpus(x) & -Zumpus(y) & -Dumps(z)))"]}
{"id": "prontoqa_train_1227", "nl": "Wren is not a brimpus, Wren is a shumpus, and Wren is a lempus.", "fol": "(-brimpus(Wren) & shumpus(Wren) & lempus(Wren))", "prediction": ["(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Humpus(y))) & all z.(Wren(z) -> Lempus(z)))", "(all x.(Wren(x) -> -Brimpus(x)) & ((Wren(x) -> Humpus(x))) & ((Wren(x) -> Lempus(x)) & -Brimpus(x)))", "exists x y z.(Wren(x) & Brimpus(y) & Shumpus(z) & Lempus(x))", "(all x.(Wren(x) -> -Brmpus(x)) & all y.((Wren(y) & Humpus(y))) -> Lempus(y)))", "(all x y z.(Wren(x)) -> (-Brimpus(x) | (-Brimpus(y) & Humpus(z)))) & all w d.((Wren(w) & Humpus(w)) -> (Lempus(w))))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Shumpus(y)) & all z.(Wren(z) -> Lempus(z))))", "all x.(Wren(x) & -Brimpus(x) & Humpus(x) & Lempus(x))", "all x y z.((Wren(x) & Brimpus(y) & Humpus(z)) -> (-Berlin(x) & Shumpus(x) & Lempus(y)))", "all x y z.((Wren(x) & Shumpus(y) & Lempus(z)) -> (-Brimpus(x) | (-Brimpus(x) & Shumpus(y) & Loompus(z))))", "(all x.(Wren(x) -> -Brimpus(x)) & (Wren(x) -> Shumpus(x)) & (Wren(x) -> Lempus(x)))", "(all x.(Wren(x) -> -Brimpus(x)) & (Wren(x) -> Shumpet(x)) & (Wren(x) -> Lempus(x)))", "(all x.(Wren(x) -> -Brumpus(x)) & (-Brumpus(x) | Flies(x))) & (-Brumpus(x) -> Flies(x))) & (-Brumpus(x) -> Flies(x)) & (-Shumpus(x) -> Flies(x)))", "all x y z.((Wren(x) & Shumpus(y) & Hempus(z)) -> (-Brimpus(x) & -Shumpus(y) & -Lempus(z)))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Shumpus(y) & Lempus(y)))", "(all x.(Wren(x) -> -Rhubus(x)) & exists y.(Shumpus(y) & exists z.(Lempus(z) & -Rubis(z) & -Brampus(x))))", "all x y z.((Wren(x) & Brimpus(y) & Humpus(z)) -> (-Brimpus(x) & -Shumpus(x) & -Limpus(x)))"]}
{"id": "prontoqa_train_1228", "nl": "Wren is not a lorpus or Wren is a dumpus or Wren is a rompus.", "fol": "(-lorpus(Wren) | dumpus(Wren) | rompus(Wren))", "prediction": ["(all x.(Wren(x) -> (-Lorpus(x)) | (-Lorpus(x) & -Dumpus(x)) | (-Rompus(x)))))", "all x y.((Wren(x) & -Lorpus(x)) | (-Lorpus(y) | Dumpus(y) | Rompus(y))))", "all x.((Wren(x) & -Lorpus(x)) | (-Lorpus(x) | Dumpus(x) | Rompus(x))))", "all x y.((Wren(x) & (-Lorpus(x) | Dumpus(x) | Rompus(y))) -> -LorpusBullet(x))", "all x.((Wren(x) & -Lorpus(x)) | (-Lorpus(x) | Dumpus(x) | Rompus(x))))", "(exists x.(Wren(x) & -Lorpus(x)) | exists y.(Dumpus(y) & Wren(z)))))", "all x.(Wren(x) -> (-Lorpus(x) | Dumpus(x) | Rompus(x)))", "all x.((Wren(x) & -Lorpus(x)) | (-Lorpus(x) | Dumpus(x) | Rompus(x))))", "(exists x.(Wren(x) & -Lorpus(x)) | exists y.(Dumpus(y) & Wren(z)))))", "all x y.((Wren(x) & -Lorpus(x) & Wren(y)) | (Dumus(y) | Rompus(y))))", "((Wren(ren) & -Lorpus(ren)) | (-Lorpus(ren) | Dumpus(ren)) | (-Lorpus(ren) & Rompus(ren))))", "((Wren(w) & -Lorpus(w)) | (Wren(x) & Dumpus(x)) | Wren(x) & Rompus(w)))", "all x y.((Wren(x) & -Lorpus(x)) | (-Lorpus(x) | Dumpus(x) | Rompus(y))))", "all x.((Wren(x) & -Lorpus(x)) | (-Lorpus(x) | Dumpus(x) | Rompus(x))))", "all x y z.((Wren(x) & Dumpus(y) & Rompus(z)) -> (-Lorpus(x) | Dumpus(y) | Rompus(z))))", "(exists x.(Wren(x) & -Lorpus(x)) | exists y.(Dumpus(y) & Wren(y))))"]}
{"id": "prontoqa_train_1229", "nl": "Every vumpus is not a brimpus.", "fol": "all x. (vumpus(x) -> -brimpus(x))", "prediction": ["all x.(Vumpus(x) -> -Brumpus(x))", "all x.(Vumpus(x) -> -Brimpus(x))", "all x.(Vumpus(x) -> -Brimpus(x))", "all x.(Vumpus(x) -> -Brimpus(x))", "all x.(Vumpus(x) -> -Brumpus(x))", "all x.(Vumpus(x) -> -Brimpus(x))", "all x.(Vumpus(x) -> -Brumpus(x))", "all x.(Vumpus(x) -> -Brimpus(x))", "all x.(Vumpus(x) -> -Brimpus(x))", "all x.(Vumpus(x) -> -Brimpus(x))", "all x.(Vumpus(x) -> -Brimpus(x))", "all x.(Vumpus(x) -> -Brimpus(x))", "all x.(Vumpus(x) -> -Burimpus(x))", "all x.(Vumpus(x) -> -Brimpus(x))", "all x.(Vumpus(x) -> -Brimpus(x))", "all x.(Vumpus(x) -> -Brimpus(x))"]}
{"id": "prontoqa_train_1230", "nl": "Alex is a vumpus.", "fol": "vumpus(Alex)", "prediction": ["all x.((Alex(x) & Vampus(x)) -> Vampus(x))", "all x.(Alex(x) -> Vubiss(x))", "all x.(Alex(x) -> Vumpus(x))", "All x.(Alex(x) -> Vulmpus(x))", "all x.(Alex(x) -> Vampus(x))", "all x.(Vumpus(x) -> Alex(x))", "Alex is avumpus.", "all x.(Alex(x) -> Vumpus(x))", "all x.(Alex(x) -> Vumpus(x))", "all x.(Alex(x) -> Vampus(x))", "Alex,voompus(Alex)", "all x.(Alex(x) -> Vumpus(x))", "all x.(Alex(x) -> Vumpus(x))", "Alex is a vumpus.", "all x.(Alex(x) -> Voompus(x))", "Alex is a Vampus(Alex)"]}
{"id": "prontoqa_train_1231", "nl": "Alex is a numpus or Alex is not a jompus or Alex is a zumpus.", "fol": "(numpus(Alex) | -jompus(Alex) | zumpus(Alex))", "prediction": ["all x.(Alex(x) -> (Numpus(x) | -Jompus(x) | Zumpus(x)))", "exists x.(Alex(x) & ((Nompus(x) | -Jompus(x)) | Zumpus(x))))", "all x.(Alex(x) -> (Simpel(x) | -Jumpus(x) | Zumpus(x)))", "all x.(Alex(x) -> ((Numpus(x) | -Jompus(x) | Zumpus(x))))", "all x.(Alex(x) -> (Numpus(x) | -Jompus(x) | Zumpus(x)))", "(all x.(Alex(x) -> Numpus(x)) | (-Jompus(x) | Zumpus(x))))", "((Alex(Alex) & Number(Alex)) | (-Jompus(Alex) | Zumpus(Alex))))", "((Alex(Alex) & Numpus(Alex)) | (-Jimpus(Alex)) | Zumpus(Alex)))", "(Numpus(Alex) | -Jompus(Alex) | Zumpus(Alex)))", "all x.(Alex(x) -> (Numpus(x) | -Jompus(x) | Zumpus(x)))", "all x.(Alex(x) -> ((Nompus(x) | -Jompus(x)) | Zumpus(x)))", "all x.(Alex(x) -> (Numpus(x) | -Jompus(x) | Zurpus(x)))", "all x.(Alex(x) -> (Numpus(x) | -Jompus(x) | Zumpus(x)))", "((Alex(Alex) & Numpus(Alex)) | (-Jompus(Alex)) | Zumpus(Alex)))", "all x y.((Alex(x) & Numpus(x)) | (-Jompus(x) | Zumpus(y))))", "all x.(Alex(x) -> (Numpus(x) | -Jompus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1232", "nl": "Grimpuses are lempuses and impuses and wumpuses.", "fol": "all x. (grimpus(x) -> (lempus(x) & impus(x) & wumpus(x)))", "prediction": ["all x.(Grimpus(x) -> (Lempuse(x) | Impossid(x) | Wumpuse(x)))", "all x.(Grimpus(x) -> (Lempuse(x) | Impose(x) | Hush(x)))", "all x.(Grimpus(x) -> (Lempuse(x) & Issue(x) & Wumpuse(x)))", "(all x.(Grimpus(x) -> Lempuse(x)) & all y.(Immersion(y) & Humpus(y))))", "all x.(Grimpus(x) -> (Lampus(x) & Ispose(x) & Wumpus(x)))", "all x.(Grimpus(x) -> (Lempuse(x) | Impuse(x) | Wumpuse(x)))", "all x.(Grimpus(x) -> (Lempuse(x) | Impune(x) | Wumpus(x)))", "all x.(Grimpus(x) -> (Lempuse(x) | Impicise(x) | Wumpus(x)))", "all x.(Grimpus(x) -> (Lempuses(x) | Illusions(x) | Wumpuses(x)))", "all x.(Grimpus(x) -> (Lempuse(x) & Issue(x) & Umbrella(x) & Umbrella(x)))", "all x.(Grimpus(x) -> (Lempus(x) | Issues(x) | Wumpuses(x)))", "all x.(Grimpus(x) -> (Lempuse(x) & Issue(x) & Wumpus(x)))", "all x.(Grimpus(x) -> (Lempuse(x) & Issue(x) & Wumpus(x)))", "all x.(Grimpuse(x) -> (Lempuse(x) & Issue(x) & Wompuse(x)))", "(all x.(Grimpus(x) -> Lempuse(x)) & all y.(Immuses(y) -> Wumpuse(x)))", "all x.(Grimpus(x) -> (Lempuse(x) | Imperist(x) | Humpus(x)))"]}
{"id": "prontoqa_train_1233", "nl": "Sally is a grimpus.", "fol": "grimpus(Sally)", "prediction": ["Sally is a Grumpus.", "Sally is a Grimpus.", "Sally is a Grimpus.", "Sally is a Grimpus.", "Sally is a grimpus.", "Alles x.(Sally(x) -> Gruppus(x))", "All x.(Sally(x) -> Grimpus(x))", "All x.(Sally(x) -> Grimpus(x))", "Sally is a Grimpus.", "exists x.(Sally(x) & Grappus(x))", "Sally is grimpus.", "Sally is a Grimpus.", "Sally ist grimpus.", "Sally is a Grimpus(s) & -EssentialCruised(s) & Evolved(s) & Evolved(s))", "Sally is a Grappa(Sally)", "Sally is a Grimpus."]}
{"id": "prontoqa_train_1234", "nl": "Sally is a brimpus, a wumpus, or a tumpus.", "fol": "(brimpus(Sally) | wumpus(Sally) | tumpus(Sally))", "prediction": ["all x.(Sally(x) -> (Brumpus(x) | Wumpus(x) | Tumpus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Wumpus(x) | Tumpus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Wumpus(x) | Tumpus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Wumpus(x) | Tumpus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Wumpus(x) | Tumpus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Wumpus(x) | Tumpus(x)))", "all x y.((Sally(x) & Brimpus(y)) | Wumpus(y) | Tumpus(y)) -> (Sally(x) | Sally(x)))", "all x.(Sally(x) -> (Brimpus(x) | Wumpus(x) | Tumpus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Humpus(x) | Tumpus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Rumpus(x) | Tumpus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Wumpus(x) | Tumpus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Wumpus(x) | Tumpus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Wumpus(x) | Tumpus(x)))", "all x.(Sally(x) -> (Brumpus(x) | Wumpus(x) | Tumpus(x)))", "(Brimpus(Sally) | Wumpus(Sally) | Tumpus(Sally)))", "all x.(Sally(x) -> (Brimpus(x) | Mumpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1235", "nl": "Everything that is a vumpus or a shumpus or a tumpus is a brimpus, a sterpus, and a lempus.", "fol": "all x. ((vumpus(x) | shumpus(x) | tumpus(x)) -> (brimpus(x) & sterpus(x) & lempus(x)))", "prediction": ["all x.((Vumpus(x) | Shumpus(x) | Tumpus(x)) -> (Brimpus(x) & Sterpus(x) & Lempus(x)))", "all x.((Vumpus(x) | Shumpus(x) | Tumpus(x)) -> (Brimpus(x) & Sterpus(x) & Lempus(x)))", "all x.((Vimpus(x) | Simpus(x) | Tumpus(x)) -> (Brimpus(x) | Sterpus(x) | Lempus(x)))", "all x.((Vumpus(x) | Humpus(x) | Tumpus(x)) -> (Brimpus(x) & Sterepus(x) & Lempus(x)))", "all x.((Vampus(x) | Scalmpus(x) | Tumpus(x)) -> (Brimpus(x) | Sterpus(x) | Lempus(x)))", "all x.((Volumpus(x) | Humpus(x) | Tumpus(x)) -> (Brimpus(x) & Sterpus(x) & Lempus(x)))", "all x.((Vumpus(x) | Humpus(x) | Tumpus(x)) -> (Brimpus(x) & Sterpus(x) & Lempus(x)))", "all x.((Vumpus(x) | Shumpus(x) | Tumpus(x)) -> (Brimpus(x) & Steroid(x) & Lempus(x)))", "all x.((Vumpus(x) | Shumpus(x) | Tumpus(x)) -> (Brimpus(x) & Sterpus(x) & Lempus(x)))", "all x.((Vumpus(x) | Humpus(x) | Tumpus(x)) -> (Brimpus(x) & Stumppus(x) & Sterpus(x) & Lempus(x)))", "all x.((Vumpus(x) | Shumpus(x) | Tumpus(x)) -> (Brumpus(x) | Sterpus(x) | Lempus(x)))", "all x.((Vuze(x) | Shumpus(x) | Tumpus(x)) -> (Brimpus(x) | Stumpy(x) | Lempus(x)))", "all x.((Vumpus(x) | Humpus(x) | Tumpus(x)) -> (Brimpus(x) & Sterpus(x) & Lempus(x)))", "all x.((Vumpus(x) | shumpus(x) | tumpus(x)) -> (Brimpus(x) & Sterpus(x) & Lempus(x)))", "all x.((Vumpus(x) | Humpus(x) | Tumpus(x)) -> (Blumpus(x) & Species(x) & Species(x) & Species(x)))", "all x.(Vimpus(x) | Humpus(x) | Tumpus(x)) -> (Brimpus(x) & Sterpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_1236", "nl": "Everything that is a brimpus, a wumpus, and a zumpus is a shumpus.", "fol": "all x. ((brimpus(x) & wumpus(x) & zumpus(x)) -> shumpus(x))", "prediction": ["all x.((Brimpus(x) | Wumpus(x) | Zumpus(x)) -> Humpus(x))", "all x.((Brimpus(x) | Lumpus(x) | Zumpus(x)) -> Humpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Zumpus(x)) -> Humpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Zumpus(x)) -> Humpus(x))", "all x.((Macrofoil(x) & Brimpus(x) & Wampus(x) & Zumpus(x)) -> Humpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Zumpus(x)) -> Humpus(x))", "all x.(((Brimpus(x) | Wumpus(x) | Zumpus(x)) -> Humpus(x))", "all x.((Between(x) & (Brimpus(x) | Wumpus(x) | Zumpus(x))) -> Humpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Zumpus(x)) -> Humpus(x))", "all x.((Rubbus(x) | Wumpus(x) | Zumpus(x)) -> Humpus(x))", "all x.((Field(x) & (Brimpus(x) | Wimpus(x) | Zumpus(x))) -> Humpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Zumpus(x)) -> Shumpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Zumpus(x)) -> Shumpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Zumpus(x)) -> Humpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Zumpus(x)) -> Humpus(x))", "all x.((Brimpus(x) & Wumpus(x) & Zumpus(x)) -> Humpus(x))"]}
{"id": "prontoqa_train_1237", "nl": "Lorpuses are not shumpuses.", "fol": "all x. (lorpus(x) -> -shumpus(x))", "prediction": ["all x.(Lorpus(x) -> -Shumpus(x))", "(all x.(Lorpuse(x) -> -Shumpus(x)))", "all x.(Lorpus(x) -> -Shumpus(x))", "all x.(Lorpus(x) -> -Shumpus(x))", "all x.(Lorpus(x) -> -Shumpus(x))", "all x.(Lorpus(x) -> -Shumpus(x))", "all x.(Lorpus(x) -> -Shumpus(x))", "(all x.(Lorpus(x) -> -Shumpus(x)))", "all x.(Lorpus(x) -> -Shumpuse(x))", "all x.(Lorpus(x) -> -Shumpus(x))", "all x.(Lorpus(x) -> -Shumpus(x))", "all x.(Lorpus(x) -> -Shumpus(x))", "all x.(Lorpus(x) -> -Shumpus(x))", "all x.(Lorpus(x) -> -Shumpus(x))", "all x.(Lorpuse(x) -> -Shumpus(x))", "all x.(Lorpus(x) -> -Shumpus(x))"]}
{"id": "prontoqa_train_1238", "nl": "Every rompus is a lorpus.", "fol": "all x. (rompus(x) -> lorpus(x))", "prediction": ["all x.(Rompus(x) -> Lorpus(x))", "all x.(Rompus(x) -> Lorde(x))", "all x.(Rompus(x) -> Lorpus(x))", "all x.(Rompus(x) -> Lorpus(x))", "all x y.((Rompus(x) & Lorpus(y)) -> exists z.(Primary(z) & Carnivore(w) & Carnivore(w) & Carnivore(w)))", "all x.(Rompus(x) -> Lorpus(x))", "all x.(Rompus(x) -> Lorpus(x))", "all x.(Rompus(x) -> Lorpus(x))", "all x.(Rompus(x) -> Lorpus(x))", "all x.(Rompus(x) -> Lorpus(x))", "all x.(Rompus(x) -> Lorpus(x))", "all x.(Rompus(x) -> Lorpus(x))", "all x.(Rompus(x) -> Lorpus(x))", "all x.(rompus(x) -> Lorpus(x))", "all x.(Rompus(x) -> Lorpus(x))", "all x.(Rompus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_1239", "nl": "Alex is a wumpus.", "fol": "wumpus(Alex)", "prediction": ["all x.(Alex(x) -> Wampus(x))", "(Wumpus(Alex) & Wumpus(Alex))", "all x.(Alex(x) -> Wumpus(x))", "all x.(Alex(x) -> Wumpus(x))", "all x.(Wumpus(x) -> Alex(x))", "all x.(Alex(x) -> Wumpus(x))", "all x.(Alex(x) -> Wumpus(x))", "everything about this is the fact that Alex is a wumpus.", "all x.(Alex(x) -> Wumpus(x))", "all x.((Alex(x) & Wumpus(x)) -> (Wumpus(x) | Wumpus(x)))", "all x.(Alex(x) -> Buffalo(x))", "all x.(Alex(x) -> Wumpus(x))", "all x.(Wumpus(x) -> Alex(x))", "all x.(Alex(x) -> Wumpus(x))", "all x.(Alex(x) -> Wumpus(x))", "all x.(Alliot(x) -> Wampus(x))"]}
{"id": "prontoqa_train_1240", "nl": "Everything that is a tumpus, a shumpus, or a brimpus is a gorpus, a zumpus, and a vumpus.", "fol": "all x. ((tumpus(x) | shumpus(x) | brimpus(x)) -> (gorpus(x) & zumpus(x) & vumpus(x)))", "prediction": ["all x.((Tumpus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(x) | Zumpus(x) | Vampus(x)))", "all x.((Tumpus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(x) & Zumpus(x) & Vumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(x) & Zumpus(x) & Vumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(x) & Zumpus(x) & Vumpus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Brimpus(x)) -> (Gorpus(x) | Zumpus(x) | Vumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(x) & Zumpus(x) & Vulkpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(x) | Zumpus(x) | Vumpus(x)))", "all x.(((Tumpus(x) | Humpus(x) | Brimpus(x))) -> (Gorpus(x) | Zumpus(x) | Vumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(x) & Zumpus(x) & Vumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(x) & Zumpus(x) & Vumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(x) | Zumpus(x) | Vumpus(x)))", "all x.((Tumpus(x) | Sunhumpus(x) | Brimpus(x)) -> (Gorpus(x) | Zumpus(x) | Vumpus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Brimpus(x)) -> (Gorpus(x) & Zumpus(x) & Lumpus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Brimpus(x)) -> (Gorpus(x) | Zumpus(x) | Vumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(x) | Zumpus(x) | Vumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Brimpus(x)) -> (Gorpus(x) | Zumpus(x) | Vumpus(x)))"]}
{"id": "prontoqa_train_1241", "nl": "Dumpuses are not lorpuses.", "fol": "all x. (dumpus(x) -> -lorpus(x))", "prediction": ["all x.(Dumpuse(x) -> -Lorpuse(x))", "(SelfLorpus(dumpuse) | SelfLorpus(dumpuse)))", "all x.(Dumpuse(x) -> -Lorpuse(x))", "all x.(Dumpuse(x) -> -Lorpuse(x))", "all x.(Dumpuse(x) -> -Lorpuse(x))", "all x.(Dumpuse(x) -> -Lorpus(x))", "all x.(Dumpuse(x) -> -Lorpuse(x))", "all x.(Dumpuse(x) -> -Lorpuse(x))", "all x.(Dumpuse(x) -> -Lorpuse(x))", "all x.(Dumpuse(x) -> -Lorpuse(x))", "(-Lorpus(dumpuse))", "all x.(Dumpus(x) -> -Lorpus(x))", "all x.(Dumpuse(x) -> -Larpuse(x))", "all x.(Dumpuse(x) -> -Lorpuse(x))", "all x.(Dumpuse(x) -> -Lorpuse(x))", "all x.(Dumpus(x) -> -Lorpus(x))"]}
{"id": "prontoqa_train_1242", "nl": "Every rompus is a zumpus, a lorpus, and a tumpus.", "fol": "all x. (rompus(x) -> (zumpus(x) & lorpus(x) & tumpus(x)))", "prediction": ["all x.(Rompus(x) -> (Toumpus(x) | Lorpus(x) | Tumpus(x)))", "all x.(Rompus(x) -> (Tommu(x) | Lorpus(x) | Tumpus(x)))", "all x.(Rompus(x) -> (Tompus(x) | Lorpus(x) | Tumpus(x)))", "all x.(Rompus(x) -> (Tompus(x) | Lorpus(x) | Tumpus(x)))", "all x.(Rompus(x) -> (Tompus(x) | Lorpus(x) | Tumpus(x)))", "(all x.(Rompus(x) -> Zumpus(x)) & (Lorpus(x) -> Tumpus(x)))", "all x.(Rompus(x) -> (Toumpus(x) & Lorpus(x) & Tumpus(x)))", "all x.(Rompus(x) -> (Tompus(x) | Lorpus(x) | Tumpus(x)))", "all x.(Rompus(x) -> (Tompus(x) | Lorpus(x) | Tumpus(x)))", "all x.(Rompus(x) -> (Tompus(x) & Larpus(x) & Tumpus(x)))", "all x.(Rompus(x) -> (Tompus(x) & Lorpus(x) & Tumpus(x)))", "all x.(Rompus(x) -> (Touchpus(x) & Lompus(x) & Tumpus(x)))", "all x.(Rompus(x) -> (Tompus(x) | Lorpus(x) | Tumpus(x)))", "all x.(Rompus(x) -> (Tompus(x) | Lorpus(x) | Tumpus(x)))", "all x.(Rompus(x) -> (Tompus(x) & Lordpus(x) & Umpus(x)))", "(all x.(rompus(x) -> Zumpus(x)) & all y.(lorpus(y) -> Tumpus(y)))"]}
{"id": "prontoqa_train_1243", "nl": "Sally is a jompus and a dumpus and a lempus.", "fol": "(jompus(Sally) & dumpus(Sally) & lempus(Sally))", "prediction": ["exists x.(Sally(x) & Pomeranian(x) & Pomeranian(x) & Pomeranian(x) & Pomeranian(x) & Pomeranian(x))", "(Jompus(Sally) | Dumpus(Sally) | Lempus(Sally))", "all x.(Sally(x) -> (Jimpus(x) & Dumpus(x) & Lempus(x)))", "(jammer(Sally) & dumpus(Sally) & lempus(Sally))", "(Jimpus(Sally) | Dumpus(Sally) | Lempus(Sally)))", "all x.(Sally(x) -> (Hompus(x) & Dumpus(x) & Lempus(x)))", "all x.(Sally(x) -> (Jompus(x) & Dumpus(x) & Lempus(x)))", "(Jompus(Sally) & Dumpus(Sally) & Lempus(Sally))", "all x.(Sally(x) -> (Jampus(x) & Dumpus(x) & Lempus(x)))", "all x.(Sally(x) -> (Jimpus(x) & Dumpus(x) & Lempus(x)))", "exists x.(Sally(x) & Jompus(x) & Dumpus(x) & Lempus(x))", "Sally is a jompus and a dumpus and a lempus.", "Sally is (jompus(Sally) | Dumpus(Sally) | Lempus(Sally)))", "all x y.((Sally(x) & Jompus(y) & Dumpus(y)) -> (Two(x,y) & Two(x,y) & Two(x,z)))", "(jompus(Sally) -> Dumpus(Sally)) & lempus(Sally))", "all x.(Sally(x) -> (Jompus(x) & Dumpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_1244", "nl": "Everything that is a brimpus and a tumpus and a lorpus is a yumpus and a rompus and a shumpus.", "fol": "all x. ((brimpus(x) & tumpus(x) & lorpus(x)) -> (yumpus(x) & rompus(x) & shumpus(x)))", "prediction": ["all x.((Brimpus(x) & Tumulus(x) & Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brimpus(x) & Humpus(x) & Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brimpus(x) & Tumpus(x) & Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brimpus(x) & Tumpus(x) & Larpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brimpus(x) & Tumpus(x) & Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brimpus(x) & Tumpus(x) & Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brimpus(x) & Tumor(x) & Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brumpus(x) & Tumpus(x) & Lorpus(x)) -> (Yumpus(x) & ROMpus(x) & Humpus(x)))", "all x.(Brumpus(x) -> ((Tumpus(x) & Lordpus(x)) & Yampus(x) & Rompus(x) & Humpus(x)))", "all x.((Brimpus(x) & Tumpus(x) & Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brimpus(x) & Rumpus(x) & Lopus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brimpus(x) & Tumpus(x) & Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brimpus(x) & Tumpus(x) & Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))", "all x.((Brimpus(x) & Tumpus(x) & Lorpus(x)) -> (Yumpus(x) & Rompus(x) & Humpus(x)))"]}
{"id": "prontoqa_train_1245", "nl": "Alex is a yumpus.", "fol": "yumpus(Alex)", "prediction": ["Alex is yumpus.", "Alex is (yuppus)", "all x.(Alex(x) -> Yumpus(x))", "all x.(Alex(x) -> Yampus(x))", "(yumpus(Alex))", "Alex is yumpus.", "all x.(Alex(x) -> Yampus(x))", "(Yumpus(Alex)", "all x.(Alex(x) -> Yumpus(x))", "all x.(Alex(x) -> Yumpus(x))", "all x.(Alex(x) -> Yumpis(x))", "all x.(Alex(x) -> Yumpus(x))", "All x.(Alex(x) -> Yump.(yumpus(x)))", "all x.(Alex(x) -> Yumpus(x))", "all x.(Alex(x) -> Yampus(x))", "all x.(Alex(x) -> Yumpus(x))"]}
{"id": "prontoqa_train_1246", "nl": "Everything that is a shumpus and a sterpus and a tumpus is a grimpus and a jompus and a rompus.", "fol": "all x. ((shumpus(x) & sterpus(x) & tumpus(x)) -> (grimpus(x) & jompus(x) & rompus(x)))", "prediction": ["all x.((Shumpus(x) & Sterpus(x) & Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "all x.((Shumpus(x) & Sterpus(x) & Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "all x.((Shumpus(x) & Sterpus(x) & Tumpus(x)) -> (Smoopus(x) & Jompus(x) & Rompus(x)))", "all x.((Shumpus(x) & Strohpus(x) & Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "all x.((Shumpus(x) & Sterpus(x) & Tumpus(x)) -> (Grampus(x) & Jompus(x) & Rompus(x)))", "all x.((Shumpus(x) & Sterus(x) & Tumpus(x)) -> (Grampus(x) & Moose(x) & Rompus(x)))", "all x.((Shumpus(x) | Sterpus(x) | Tumpus(x)) -> (Grippus(x) & Jompus(x) & Rompus(x)))", "all x y.((Shumpus(x) & Sterpus(y) & Tumpus(y)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "all x.((Shumpus(x) & Sterpus(x) & Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "all x.((Shumpus(x) | Sterpus(x) | Tumpus(x)) -> (Smaller(x) & Jompus(x) & Rompus(x)))", "all x.((Shumpus(x) & Sterpus(x) & Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "all x.((Shumpus(x) | Sterpus(x) | Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "all x.((Shumpus(x) & Sterpus(x) & Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))", "all x.(IsShumpus(x) & IsSsterpus(x) & IsTumpus(x)) -> (Grimpus(x) & IsJompus(x) & IsRompus(x)))", "all x.((Shumpus(x) & Sterpus(x) & Tumpus(x)) -> (Scrumpus(x) & Jompus(x) & Rompus(x)))", "all x.((Shumpus(x) & Sterpus(x) & Tumpus(x)) -> (Grimpus(x) & Jompus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_1247", "nl": "Wren is a shumpus.", "fol": "shumpus(Wren)", "prediction": ["all x.(Wren(x) -> Shumpus(x))", "all x.(Wren(x) -> Humpus(x))", "ALL x.(Wren(x) -> Humptus(x))", "all x.(Wren(x) -> Shumpus(x))", "(Shumpus(Wren) & Eats(Wren,Shumpus))", "all x.(Wren(x) -> Humpus(x))", "All x.(Wren(x) -> Humpus(x))", "(Shumpus(Wren) -> Slumpus(Wren))", "all x.(Wren(x) -> Shumpus(x))", "all x.(Wren(x) -> Hummus(x))", "all x.(Wren(x) -> Humpus(x))", "all x.(Wren(x) -> Humpus(x))", "all x.(Wren(x) -> Shumpus(x))", "all x.(Wren(x) -> Humpus(x))", "all x.(Wren(x) -> Shumpus(x))", "all x.(Wren(x) -> Humpus(x))"]}
{"id": "prontoqa_train_1248", "nl": "Sally is a tumpus and Sally is a sterpus and Sally is not a yumpus.", "fol": "(tumpus(Sally) & sterpus(Sally) & -yumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> Sterus(x)) & -Yumpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sterpus(y) -> Yumpus(y)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> Sterepus(y)) & all z.(Sally(z) -> Yumpus(z))))", "(all x.(Sally(x) -> Tumulus(x)) & all y.(Sarah(y) -> Stump(y))) & all z.(Sarah(z) -> Yumpus(z)))", "all x y z.((Sally(x) & Tumpus(x) & Steroid(y)) -> (Tumpus(x) & Sterpus(y) & -Yumpus(z)))", "all x y z.((Star(x) & Sally(y) & Chumpus(z)) -> (Tumpus(y) & Sterpus(y) & -Yumpus(z)))", "(all x.(Sally(x) -> Tumpus(x)) & (Storp(x) -> Sterosp(x)) & (Yumpus(x) | Pumpus(x))))", "(all x.(Sally(x) -> Tumpus(x)) & (Sterpus(x) & -Yumpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sterpus(x) -> Sterpus(x)) & (Yumpus(x) -> -Yumpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sterpus(x)) & -Yumpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sterpus(y) -> Yumpus(y))))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> Sterepus(x)) & (Sally(x) -> -Yumpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sterpus(y) -> -Yumpus(y))))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> Sterpus(y))) & all z.(Sally(z) -> -Yumpus(z)))", "all x.((Sally(x) & Tumpus(x)) -> (Sterepus(x) & -Yumpus(x)))", "all x.((Sally(x) & Mumpus(x)) -> (Sterepus(x) & -Yumpus(x)))"]}
{"id": "prontoqa_train_1249", "nl": "Sally is a shumpus, Sally is not a zumpus, or Sally is a zumpus.", "fol": "(shumpus(Sally) | -zumpus(Sally) | zumpus(Sally))", "prediction": ["all x.((Sally(x) & Shumpus(x)) | (-Zumpus(x) | Zumpus(x))))", "(exists x.(Sally(x) & Humpus(x))) | exists y.(Sally(y) & -Tompus(y))))", "all x.((Sally(x) & Humpus(x)) | (-Tompus(x) | Tompus(x))))", "(Either way, we cannot discuss the relationship between Sally and shumpus(s), or We cannot discuss the relationship between Sally and zumpus(s)))", "all x.(Sally(x) -> (Shumpus(x) | -Tommorowian(x) | Zumpus(x)))", "exists x.(Sally(x) & ((Shumpus(x) & -Tompus(x)) | Zumpus(x)))", "(all x.(Sally(x) -> Humpus(x)) & (-Zumpus(x) | Zurpus(x))))", "((Sally(Shumpus) | -Tompus(Sally)) | Tompus(Sally)))", "all x y.((Sally(x) & Shumpus(x)) | (-Sumpus(y) | Zumpus(y))))", "exists x.(Sally(x) & ((Shumpus(x) | -Zumpus(x)) | Zumpus(x))))", "(all x.(Sally(x) -> Rumpus(x)) = -Tompus(x)) | (-Tompus(x) & Tompus(x))))", "(all x.(Sally(x) -> Humpus(x)) & (-Sumpus(x) | Zumpus(x))))", "all x y.((Sally(x) & Shumpus(x)) | (-Sumpus(x) | Zumpus(x))))", "(exists x.(Sally(x) & Humpus(x))) | exists y.(Sally(y) & -Tompus(y))))", "exists x.(Sally(x) & (Shumpus(x) | -Tompus(x) | Tompus(x)))", "all x.((Sally(x) & Humpus(x)) | -Tommpus(x) \u2022 Tommpus(x))"]}
{"id": "prontoqa_train_1250", "nl": "Yumpuses are lorpuses.", "fol": "all x. (yumpus(x) -> lorpus(x))", "prediction": ["all x.(Yumpus(x) -> Loompe(x))", "all x.(Yumpus(x) -> Loompus(x))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Loomis(x))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Umbushie(x) -> Lorpuse(x))", "all x.(Yumpus(x) -> Moose(x))", "all x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpus(x) -> Loomis(x))", "all x.(Yumpus(x) -> Lorpe(x))", "all x.(Yumpus(x) -> Termopuse(x))", "all x.(Yumpuse(x) -> Loprese(x))", "All x.(Yumpus(x) -> Lorpus(x))", "all x.(Yumpuses(x) -> Lorps(x))", "all x.(Yumpus(x) -> Lorpus(x))"]}
{"id": "prontoqa_train_1251", "nl": "Polly is a vumpus and Polly is not a lorpus and Polly is a jompus.", "fol": "(vumpus(Polly) & -lorpus(Polly) & jompus(Polly))", "prediction": ["all x y z.((Polly(x) & Vumpus(y) & Loper(z)) -> (Vumpus(x) & -Lorpus(y) & Jompus(z)))", "(all x.(Pompus(x) -> Vumpus(x)) & all y.(Lorpus(y) -> -Lorpus(y))) & all z.(Jumpus(z) -> Jompus(z)))", "all x y z.((Polly(x) & Virus(y) & Lorpus(z)) -> (Vumpus(x) | -Lorpus(y) & -Jompus(z)))", "all x y z.((Polly(x) & Volpe(y) & Lorpus(z)) -> (Clothing(x,y) & -Lorpus(x,z) & Jompus(x)))", "(all x y.((Polly(x) & Vumpus(x)) -> -Lorpus(y)) & ((Polly(x) & Moose(y)) -> Joompus(z)))", "all x y z.((Polly(x) & Vumpus(y) & Lorpus(z)) -> (Vumpus(x) & -Lorpus(y) & Jompus(z)))", "all x y.((Polly(x) & Polly(y)) -> (Vumpus(x) & -Lorpus(y) & Jompus(y)))", "exists x y z.(Polly(x) & Vumpus(x) & (Poly(y) | Polly(z))) & (Lorpus(z) | Jompus(z)))", "((Polly(poly) & Vumpus(poly)) & -Lorpus(poly)) & -Jompus(poly))", "(Vumpus(Polly) & -Lorpus(Poly) & Jompus(Polly))", "all x.((Polly(x) -> (Vumpus(x) | -Lorpus(x) | Jompus(x)))", "(all x.(Polly(x) -> Vumpus(x)) & all y.(Polly(y) -> -Lorpus(y)) & all z.(Polly(z) -> Jompus(z)))", "all x y z.((Vumpus(x) & Powy(y) & Lorpus(z)) -> (Powy(y) & -Lorpus(y) & Powy(z)))", "(all x.(Plover(x) -> Vumpus(x)) & (Lorph(x) | Jompus(x))))", "(all x.(Vumpus(x) & -Lorpus(x)) & all y.(Jompus(y)) -> Polly(x)))", "all x y z.((Polly(x) & Vumpus(x) & Polly(y) & Hompus(z)) -> (-Lorpus(y) & Jompus(z)))"]}
{"id": "prontoqa_train_1252", "nl": "Polly is a yumpus, Polly is not a yumpus, or Polly is a lempus.", "fol": "(yumpus(Polly) | -yumpus(Polly) | lempus(Polly))", "prediction": ["(all x.(Polly(x) -> Yampus(x)) & all y.(Polly(y) -> WellSingleWhale(y))))", "all x.((Polly(x) & Yompus(x)) | (-Yimpus(x) | Lempus(x))))", "(all x y.((Polly(x) & Yampus(y)) -> Polly), & ((Polly(x) & -Yumpus(y)) | (Poly(x) & Lempus(x)))))", "(all x.(Polly(x) -> Yampus(x)) | (-Yumpus(x) | Lempus(x))))", "(all x.(Poly(x) -> Yumpa(x)) | (-Yumpus(x) | Lempus(x))))", "exists x.(Polly(x) & (Yumpus(x) | -Yumpus(x) | Lempus(x))))", "(all x y.((Polly(x) & Yumpus(x)) -> Polly(x)) & ((Polly(y) & -Yumpus(y)) | (Polly(y) & Lempus(y)))))", "(all x y.((Polly(x) & Yuppie(y)) -> Polly(x)) & ((Polly(x) & -Yumpus(y)) | (Polly(x) & Lempus(y)))))", "all x.((Polly(x) & Yampus(x)) | (-Yumpus(x) | Lempus(x))))", "(all x.(Polly(x) -> Yumpa(x)) | (-Yumpus(x) | Lempus(x))))", "(all x.(Polly(x) -> Yampus(x)) | (-Yumpus(x) | Lempus(x))))", "(exists x.(Polly(x) & Yampus(x)) | (-Yumpus(x) | Lempus(x))))", "all x.((Polly(x) & Yumps(x)) | -Yumpus(x) | Lempus(x)))", "all x y.((Polly(x) & Yampus(x)) | (-Yumpus(y) | Lempus(x))))", "(all x.(Polly(x) -> Yampus(x)) | (-Yumpus(x) & Polly(x))) | (-Yumpus(x) & Polly(x))))", "all x y.((Poly(x) & Yumpus(x)) -> (-Yumpus(x) | -Yumpus(x) | -Lempus(y)))"]}
{"id": "prontoqa_train_1253", "nl": "Everything that is a rompus, a numpus, or a zumpus is a jompus.", "fol": "all x. ((rompus(x) | numpus(x) | zumpus(x)) -> jompus(x))", "prediction": ["all x y.((Menu(x) & (Rompus(x) | Numpus(x) | Zumpus(x))) -> Jompus(y))", "all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Numpus(x) | Topus(x)) -> Jompus(x))", "all x.((Menu(x) | Human(x) | FormedBy(x,Menu) | FormedBy(x,Zombie))) -> Jompus(x))", "all x.((WearsRompus(x) | (WearsNumpus(x) | WeighsTompus(x))) -> Jompus(x))", "all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))", "all x.((Rampus(x) | Numpus(x) | Zumpus(x)) -> Jompus(x))"]}
{"id": "prontoqa_train_1254", "nl": "Sam is a lempus and a sterpus and a rompus.", "fol": "(lempus(Sam) & sterpus(Sam) & rompus(Sam))", "prediction": ["all x.(Sam(x) -> (Lempus(x) & Sterpus(x) & Rompus(x)))", "all x.(Sam(x) -> (Lempus(x) | Sterpus(x) | Rompus(x)))", "all x.(Sam(x) -> exists y z.(Lempus(y) & Sterus(z) & Sterpus(w) & Rompus(w) & Lempus(y) & Sterpus(z) & Sox(w) & Sox(w))))", "all x.(Sam(x) -> (Lempus(x) & Sterpus(x) & Rompus(x)))", "all x.(Sam(x) -> (Lempus(x) & Sterpus(x) & Rompus(x)))", "all x.(Sam(x) -> (Lempus(x) & Sterpus(x) & Rompus(x)))", "all x.(Sam(x) -> (Lempus(x) & Scarp-Terpus(x) & Rompus(x)))", "all x.(Sam(x) -> (Lempus(x) & Sterpus(x) & Rompus(x)))", "all x y.((Sam(x) & Plumpus(y)) -> (Sterpus(x) | Rompus(x)))", "all x.(Sam(x) -> (Lempus(x) & Sterpus(x) & Rompus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sterpus(x) | Rompus(x))))", "all x.(Sam(x) & Lempus(x) & Sterpus(x) & Rompus(x))", "exists x.(Sam(x) & (Lempus(x) | Sterpus(x) | Rompus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Steerpus(x) & Rompus(x)))", "all x.(Sam(x) -> (Limpus(x) & Sterpus(x) & Rompus(x)))", "all x y.((Sam(x) & Lempus(x) & Sterpus(y)) -> (Sam(x) & Rompus(y)))"]}
{"id": "prontoqa_train_1255", "nl": "Everything that is a numpus and a lempus and a zumpus is a shumpus.", "fol": "all x. ((numpus(x) & lempus(x) & zumpus(x)) -> shumpus(x))", "prediction": ["all x.((Nompus(x) & Lempus(x) & Zumpus(x)) -> Humpus(x))", "all x.((Numpus(x) & Lempus(x) & Zumpus(x)) -> Humpus(x))", "all x.((Nompus(x) & Lempus(x) & Zumpus(x)) -> Humpus(x))", "all x.((Numpus(x) & Lempus(x) & Zumpus(x)) -> Humpus(x))", "all x.((Numeus(x) & Lempus(x) & Zumpus(x)) -> Humpus(x))", "all x y.(((Numpus(x) & Lempus(y) & Zumpus(x)) -> Shumpus(x))", "all x y z.((Numpus(x) & Lempus(y) & Zumpus(z) & Numpus(x) & Lempus(y) & Zumpus(z)) -> Humpus(x))", "all x.((Nompus(x) & Lempus(x) & Zumpus(x)) -> Humpus(x))", "all x.((Number(x) & Lempus(x) & Zumpus(x)) -> Humpus(x))", "all x.((Numpus(x) & Lempus(x) & Zumpus(x)) -> Humpus(x))", "all x.((Numpus(x) & Lempus(x) & Zumpus(x)) -> Humpus(x))", "all x.((Nompus(x) & Lempus(x) & Zumpus(x)) -> Humpus(x))", "all x.((Numpus(x) & Lempus(x) & Zumpus(x)) -> Shumpus(x))", "all x.((numpus(x) & lempus(x) & zumpus(x)) -> Shumpus(x))", "all x.((Numpus(x) & Lempus(x) & Zumpus(x)) -> Humpus(x))", "all x.((Numpus(x) & Lempus(x) & Zumpus(x)) -> Humpus(x))"]}
{"id": "prontoqa_train_1256", "nl": "Alex is not a shumpus, Alex is a yumpus, and Alex is a zumpus.", "fol": "(-shumpus(Alex) & yumpus(Alex) & zumpus(Alex))", "prediction": ["(exists x.(Alex(x) & -Shumpus(x)) & exists y.(Yumpus(y) & exists z.(Tompus(z) & Is(x,z)))))", "all x y z.((Alex(x) & Humpus(y) & Tompus(z)) -> (-Shumpus(x) & Yompus(y) & Tompus(z)))", "all x.(Alex(x) -> (-Shumpus(x) & -Yumpus(x) & -Zimpus(x)))", "all x y and z.((Alex(x) & Shumpus(y) & Yampus(z)) -> (-Shumpus(x) & Yumpus(x,z) & Toypus(x)))", "(all x.(Alex(x) -> -Shumpus(x)) & all y.(Alex(y) -> Yampus(y)) & all z.(Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Humpus(y) & Yampus(z)) -> (-Shumpus(x) & Yumpus(y) & Zumpus(z)))", "all x y z.((Alex(x) & Sag(y) & Yup(z)) -> (-Shumpus(x) & -Yumpus(y) & -Zumpus(z)))", "all x.(Alex(x) -> (-Shumpus(x) & -Yumpus(x) & -Zumpus(x)))", "all x y z.((Alex(x) & Humpus(y) & Yumpus(z)) -> (-Yumpus(x) & Zumpus(x)))", "(all x.(Alex(x) -> (-Shumpus(x))) & all y.(Yumpus(y) & All z.(Tompus(z))) -> (NonShumpus(x) & NotYumpus(y))))", "(all x y z.(Alex(x) -> -Shumpus(x)) & (Alex(y) -> Yumpus(y)) & (Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Humpus(y) & Yumpus(z)) -> (-Shumpus(x) & Yampus(y) & Zumpus(z)))", "(all x.(Alex(x) -> -Shumpus(x)) & exists y.(Yumpus(y) & exists z.(Zumpus(z) & -Shumpus(z))) & exists w.(Tompus(w) & -Yumpus(w))))", "all x y.((Alex(x) & Rumpus(y)) -> (-Shumpus(x) & Yampus(y) & Zumpus(z)))", "(-Shumpus(Alex) & -Yumpus(Alex) & -Zumpus(Alex))", "all x y z.((Alex(x) & Humpus(y) & Yumpus(z)) -> (-Shumpus(x) & -Yumpus(y) & -Zumpus(z)))"]}
{"id": "prontoqa_train_1257", "nl": "Wren is a tumpus and a yumpus and a jompus.", "fol": "(tumpus(Wren) & yumpus(Wren) & jompus(Wren))", "prediction": ["all x.(Wren(x) -> (Tumpus(x) & Youngest(x) & Jomest(x)))", "all x.(Wren(x) -> (Tumpus(x) & Yumpus(x) & Jompus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & (Yumpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Tumpus(x) & Yumpus(x) & Jompus(x)))", "(all x.(Wren(x) -> Tumulus(x)) & (Yumpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Tumpus(x) & Yampus(x) & Jompus(x)))", "all x.(Wren(x) -> (Tumpus(x) & Yumpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Tumpus(x) & Yumpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Tumpus(x) & Yumpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Tumpus(x) & Yampus(x) & Jompus(x)))", "all x.(Wren(x) -> (Tumpus(x) & Yumpus(x) & Jompus(x)))", "all x y z.((Wren(x) & Tumpus(y) & Yumpus(z)) -> (Tumpus(x) & Yomus(x) & Yompus(x)))", "all x.(Wren(x) -> (Tumpus(x) & Yampus(x) & Jompus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Yompus(y))))", "all x y z.((Wren(x) & Tumpus(y) & Yumpus(z)) -> (Tumpus(x) & Yumpus(y) & Jompus(z)))", "all x y z.((Wren(x) & Tumpus(y) & Yampus(z)) -> (Tumpus(x) & Yumpus(y) & Jompus(z)))"]}
{"id": "prontoqa_train_1258", "nl": "Wren is a lempus or a wumpus or a grimpus.", "fol": "(lempus(Wren) | wumpus(Wren) | grimpus(Wren))", "prediction": ["all x.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Alempus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lemmus(x) | Lumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x)))", "((Wren(w) & Lempus)) | (Wumpus(w) | Grimpus(w))))", "all x.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Humpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Limpus(x) | Wumpus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1259", "nl": "Everything that is a lorpus and an impus and a vumpus is a tumpus.", "fol": "all x. ((lorpus(x) & impus(x) & vumpus(x)) -> tumpus(x))", "prediction": ["all x.((Lorpus(x) & Impermiss(x) & Vumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & Infinite(x) & Imperator(x) & Vumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & Imperator(x) & Vumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & Imperium(x) & Vumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & Impersed(x) & Vumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & IsRepose(x) & IsVumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & Impossible(x) & Pumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | SpecificallyImpose(x) & SpecificallyVumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & Impossible(x) & Vumpus(x)) -> Tumpus(x))", "all x.((Lorph(x) & IsImpossible(x) & IsVimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & Imperator(x) & Vumpus(x)) -> Tumpus(x))", "all x.((CurrentTumpus(x) & IsLorpus(x) & IsImpossed(x) & IsVumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & Impermissive(x) & Vumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & IsImpossed(x) & IsVumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & Impera(x) & Vulmpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & Impossible(x) & Vumpus(x)) -> Tumpus(x))"]}
{"id": "prontoqa_train_1260", "nl": "Rex is a jompus and Rex is a numpus and Rex is not a tumpus.", "fol": "(jompus(Rex) & numpus(Rex) & -tumpus(Rex))", "prediction": ["((Rex) & Humpus(x)) -> Jompus(x)) & (Rex) -> Numpus(x)) & (Rex) -> -Tumpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> -Tumpus(x)))", "(all x y z.(Rex(x) -> (Jimpus(x) | Numpus(x))) & ((Rex(y) & Numpus(y)) -> -Tumpus(y)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Numpus(y))) & all z.(Rex(z) -> -Tumpus(z))))", "all x y z.((Rex(x) & Jompus(x) & Numpus(y) & -Tumpus(z)) -> (Jempus(x) & Numpus(y) & -Tumpus(z)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Numpus(y)) & all z.(Rex(z) -> -Tumpus(z))))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Numpus(y))) & all z.(Rex(z) -> -Tumpus(z))))", "(all x y z.((Jompus(x) & Nomus(y)) -> Rex-Jompus(x)) & all z w.((Name(z) & Number(w)) -> Numpus(z)) & -Tumpus(w)))", "(all x.(Jompus(x) -> Rex)) & all y.(Numpus(y) -> Rex)) & all z.(Tumpus(z) -> -Rex)))", "(jompus(rex) & numpus(rex) & -tumpus(rex))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Numpus(y)) & all z.(Rex(z) -> -Tumpus(z))))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Nompus(y) & -Tumpus(y))))", "all x y z.((Rex(x) & Jompus(x) & Numpus(y) & Tumpus(z)) -> 'Tumpus(x)')", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> -Tumpus(x)))", "(all x y z.((Rex(x) & Jompus(x) & Numpus(y)) -> (Jompus(x) & Numpus(y) & -Tumpus(z)))", "(all x.(Rex(x) -> Jompus(x)) & (Nompus(x) -> Numpus(x)) & (Tumpus(x) -> -Tumpus(x)))"]}
{"id": "prontoqa_train_1261", "nl": "Every zumpus is a tumpus and a dumpus and a wumpus.", "fol": "all x. (zumpus(x) -> (tumpus(x) & dumpus(x) & wumpus(x)))", "prediction": ["all x.(Zumpus(x) -> (Tumpus(x) & Dumpus(x) & Lumpus(x)))", "all x.(Zumpus(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))", "all x.(Zumpus(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))", "all x.(Urma(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))", "all x.(Zumpus(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))", "all x.(Zumpus(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))", "all x.(Tompus(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))", "all x.(Zumpus(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))", "all x.(Toumpus(x) -> (Tumpus(x) & Dumpus(x) & Hussum(x)))", "all x.(Zumpus(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))", "all x.(Tompus(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))", "all x.(Tompus(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))", "all x.(Zumpus(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))", "all x.(Zumpus(x) -> (Tumpus(x) & Dumpus(x) & Wangus(x)))", "all x.(Zumpus(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))", "all x.(Zumpus(x) -> (Tumpus(x) & Dumpus(x) & Wumpus(x)))"]}
{"id": "prontoqa_train_1262", "nl": "Wren is a brimpus, a tumpus, or a shumpus.", "fol": "(brimpus(Wren) | tumpus(Wren) | shumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Brumpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Brumpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Wren(x) -> ((Brimpus(x) | Tumpus(x) | Humpus(x))))", "(all x.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(x))))", "all x.(Wren(x) -> (Brimpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Brampus(x) | Tumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Beampus(x) | Tumpus(x) | Humpus(x)))"]}
{"id": "prontoqa_train_1263", "nl": "Sterpuses are shumpuses, zumpuses, and numpuses.", "fol": "all x. (sterpus(x) -> (shumpus(x) & zumpus(x) & numpus(x)))", "prediction": ["all x.(Sterpuse(x) -> (Shumpuse(x) | Zumpuse(x) | Numpuse(x)))", "all x.(Sterpuse(x) -> (ShumpusEdge(x) | Zuptose(x) | Numpus(x)))", "(All x.(Sterpuse(x) -> (Shumpuse(x) | Zumpuse(x) | Numpuse(x))))", "all x.(Sterpuse(x) -> (Shumpuse(x) | Zumpuse(x) | Numpuse(x)))", "all x.(Sterpuse(x) -> (Shumpus(x) | Zumpus(x) | Numpuse(x)))", "all x.(Stumpus(x) -> (Shumpus(x) | Zumpus(x) | Numpuse(x)))", "all x.(Sterpuse(x) -> (Shumpus(x) | Zumpus(x) | Numpuse(x)))", "all x.(Sterpuse(x) -> (Shumpus(x) | Zumpus(x) | Numpuse(x)))", "all x.(Sterpuse(x) -> (Shumpus(x) | Zumpus(x) | Numpus(x)))", "all x.(Sterpus(x) -> (Shumpus(x) | Zumpus(x) | Numpuse(x)))", "all x.(Sterpuse(x) -> (Shumpuses(x) | Zumpuses(x) | Numpuses(x)))", "all x.(Sterpuse(x) -> (Shumpus(x) | Zumpus(x) | Numpuse(x)))", "all x.(Sterpuse(x) -> (Shumpus(x) | Zumpus(x) | Numpuse(x)))", "all x.(Sterpuse(x) -> (Shumpus(x) | Zumpus(x) | Numpus(x)))", "all x.(Sterpuse(x) -> (Shumpuse(x) | Zumpuse(x) | Numpuse(x)))", "all x.(Sterpuse(x) -> (Shumpus(x) | Zumpus(x) | Numpuse(x)))"]}
{"id": "prontoqa_train_1264", "nl": "Everything that is a numpus, a shumpus, and a vumpus is not a zumpus.", "fol": "all x. ((numpus(x) & shumpus(x) & vumpus(x)) -> -zumpus(x))", "prediction": ["all x.((Numpus(x) | Humpus(x) | Vumpus(x)) -> -Zumpus(x))", "all x.((Numpus(x) | Shumpus(x) | Vumpus(x)) -> -Zumpus(x))", "all x.(((Numpus(x) | Humpus(x) | Vumpus(x))) -> -Zumpus(x))", "all x.((Numpus(x) | Humpus(x) | Vumpus(x)) -> -Zumpus(x))", "all x.((Numpus(x) | Humpus(x) | Vubis(x)) -> -Zumpus(x))", "all x.((Nompus(x) | Shumpus(x) | Vumpus(x)) -> -Zumpus(x))", "all x y.((Has(x,y) & (Anumpus(y) | Has(x,y)) | Has(x,y)) | Has(x,y) | Has(x,y))) -> -Tompus(x))", "all x.((Numpus(x) | Humpus(x) | Vumpus(x)) -> -Zumpus(x))", "all x.((Numpus(x) | Humpus(x) | Vumpus(x)) -> -Zumpus(x))", "all x.((Numpus(x) & Humpus(x) & Vermpus(x)) -> -Zumpus(x))", "all x.((Numpus(x) | Shumpus(x) | Vumpus(x)) -> -Zumpus(x))", "all x.((Nompus(x) | Humpus(x) | Vumpus(x)) -> -Tommopus(x))", "all x.((Umpus(x) | Humpus(x) | Vumpus(x)) -> -Zumpus(x))", "all x.((Numpus(x) | Shumpus(x) | Vumpus(x)) -> -Zumpus(x))", "all x.((Numpus(x) | Humpus(x) | Vumpus(x)) -> -Zumpus(x))", "all x.((Numpus(x) | Shumpus(x) | Vumpus(x)) -> -Zumpus(x))"]}
{"id": "prontoqa_train_1265", "nl": "Every brimpus is not an impus.", "fol": "all x. (brimpus(x) -> -impus(x))", "prediction": ["all x.(Brimpus(x) -> -Impossible(x))", "all x.(Brimpus(x) -> -Impossible(x))", "all x.(Brimpus(x) -> -Impossible(x))", "all x.(Brimpus(x) -> -Impossible(x))", "all x.(Brimpus(x) -> -IsDesktop(x))", "-Impossible(M.Brampus)", "all x.(Brimpus(x) -> -Improviser(x))", "all x.(Brumpus(x) -> -Impossed(x))", "all x.(Brimpus(x) -> -Impossible(x))", "all x.(Brimpus(x) -> -Impossible(x))", "all x.(Brimpus(x) -> -IsProposable(x))", "all x.(Brimpus(x) -> -Impossible(x))", "all x.(Brimpus(x) -> -Impossible(x))", "all x.(Brimpus(x) -> -Impossed(x))", "(all x.(Brumpus(x) -> -Impossible(x)))", "all x.(Brampus(x) -> -Immersible(x))"]}
{"id": "prontoqa_train_1266", "nl": "Wren is a rompus, Wren is not a zumpus, or Wren is a wumpus.", "fol": "(rompus(Wren) | -zumpus(Wren) | wumpus(Wren))", "prediction": ["(all x.(Wren(x) -> (Rompus(x) | -Tommpus(x) | Wren(x))))", "(all x.(Wren(x) -> Rompus(x)) & (-Wren(x) | Wren(x))))", "all x.((Wren(x) & Rompus(x)) | (-Tompus(x) | Wren(x))))", "all x y z.((Wren(x) & Tomp(y) & Wren(z)) -> (Rompus(x) | -Zumpus(z) | Wren(x)))", "isRompus(Wren) | (-Sumpus(Wren) | Wren(Wren))))", "all x.((Wren(x) & Rimpus(x)) | (-Rimpus(x) | Wumpus(x))))", "all x y.((Wren(x) & Rimpus(y)) -> (-Tompus(x) | Wren(x) & Wumpus(y)))", "(exists x.(Wren(x) & Rompus(x)) | exists y.(Wren(y) & -Zumpus(y))), | exists z.(Wren(z) & Wumpus(z))))", "all x y z.((Wren(x) & Rompus(y) & Wren(z)) | (-Tompus(z) | Wren(z))))", "all x.((Wren(x) & Rompus(x)) -> (-Tompus(x) | Wren(x)))", "(all x y.((Wren(x) & Romeo(x)) | (-Wren(y) & Zumpus(y)) | (-Wren(y) & Wumpus(y))))", "(all x.(Wren(x) -> Rompus(x)) | (-Rompus(x) | -Zumpus(x) | Wren(x))))", "(all x y.(Wren(x) & Rompus(x)) | (-Rompus(x) | -Tompus(x))))", "(all x.((Wren(x) & Rompus(x)) | (-Wren(x) | Wurmpus(x)))))", "all x y.((Wren(x) & Rumpus(y)) | (-Tompus(y) & Wren(x))))", "all x y z.((Wren(x) & Raccoon(y) & Zumpus(z)) -> (Rompus(x) | Wren(x) & -Zumpus(x) | Wren(x)))"]}
{"id": "prontoqa_train_1267", "nl": "Everything that is an impus and a wumpus and a zumpus is a lorpus.", "fol": "all x. ((impus(x) & wumpus(x) & zumpus(x)) -> lorpus(x))", "prediction": ["all x.((Imperez(x) & Wumpus(x) & Zumpus(x)) -> Lower(x))", "all x.((Impossible(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Impossible(x) & Wirmpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Impossible(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Impunem(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Impossible(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Impossible(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Impossible(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Imposition(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Impossible(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Impact(x) & Wumpus(x) & Zumpus(x)) -> Loompus(x))", "all x.((Issue(x) & -Izp(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Impossible(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.(((Impossed(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Impossible(x) & Wumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Ersetzte(x) & Wump (x) & Zumpus(x)) -> Lorpus(x))"]}
{"id": "prontoqa_train_1268", "nl": "Fae is a rompus, Fae is not a lorpus, and Fae is a gorpus.", "fol": "(rompus(Fae) & -lorpus(Fae) & gorpus(Fae))", "prediction": ["all x y z.((Fae(x) & Rrompus(y) & Lorompus(z)) -> (Rompus(x) | Larpus(z) | Gorpus(z)))", "(all x.(Fae(x) -> Romos(x)) & (Fae(x) -> -Lorpus(x)) & (Fae(x) -> Gorpus(x)))", "all x y z.((Rompus(x) & Owl(y) & Gorpus(z)) -> (Rompus(x) & -Lorpus(y) & Gorpus(z)))", "all x.(Fae(x) -> (Rompus(x) & -Lorpus(x) & Gorpus(x)))", "(all x y z.((Fae(x) & Rompus(y)) -> Faroe(x)) & ((Fae(z) & -Lorpus(z))) -> Gorpus(z)))", "all x y z.((Computer(x) & Rhopus(y) & Lorpus(z)) -> (Rompus(x) & -Lorpus(y) & Gorpus(z)))", "(all x.(Fae(x) -> Rhopus(x)) & all y.(Fae(y) -> -Lorpus(y)) & all z.(Fae(z) -> Gorpus(z)))", "all x y z w.((Fae(x) & Fae(y) & Rumpus(z) & Loup & Gorpus(w)) -> (Rompus(x) | Gorpus(y)))", "all x y z.((Fae(x) & Lorpus(y) & Gorpus(z)) -> (Rompus(x) & -Lorpus(y) & Gorpus(z)))", "(all x y z.((Fae(x) & Rompus(y)) -> Roman(x)) & ((Fae(z) & -Lorpus(z))) -> Gorpus(z)))", "(all x.(Fae(x) -> Rompus(x)) & (Fae(x) -> -Lorpus(x)) & (Fae(x) -> Gorpus(x)))", "(all x y.((Fae(x) & Rompus(x)) -> Rimp(x)) & ((Fae(y) & -Lorpus(y)) -> Gorpus(y)))", "(all x y z.(Fae(x) & Rrompus(x)) & ( (Fae(y) -> -Lorpus(y)) & (Fae(z) -> Gorpus(z))))", "(all x.(Fae(x) -> Rompus(x)) & (Fae(x) -> -Lorpus(x)) & (Fae(x) -> Gorpus(x)))", "(all x.(Fae(x) -> Rompus(x)) & (-Lorpus(x) & (Gorpus(x) -> Fae(x))))", "(all x y z.((Fae) & Romax(y) & Lorpus(z)) -> NotRompus(x)) & ((Fae(x) & Gorpus(x)) -> -Lorpus(x)))"]}
{"id": "prontoqa_train_1269", "nl": "Fae is a wumpus.", "fol": "wumpus(Fae)", "prediction": ["all x.(Fae(x) -> Wumpus(x))", "all x.(Fae(x) -> Mushroom(x))", "all x.(Fae(x) -> Wumpus(x))", "(Wumpus(Fae) & Likes(fae,fae))", "all x.(Fae(x) -> Wumpus(x))", "(Wumpus(Fae) & Wemus(Fae))", "(Wumpus(Fae) & BreedsIn(Fae,Fae))", "all x.(Fae(x) -> Wumpus(x))", "all x.((Fae(x) & Wumpus(x)) -> Awakening(x))", "(Wumpus(Fae))", "(Wumpus(Fae))", "isWumpus(fae)", "all x.(Fae(x) -> Wumpus(x))", "all x.(Fae(x) -> Hush(x))", "all x.(Fae(x) -> Wumpus(x))", "(Wumpus(Fae) -> Willow)."]}
{"id": "prontoqa_train_1270", "nl": "Each yumpus is a rompus.", "fol": "all x. (yumpus(x) -> rompus(x))", "prediction": ["all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_1271", "nl": "Grimpuses are not rompuses.", "fol": "all x. (grimpus(x) -> -rompus(x))", "prediction": ["all x.(Rompus(x) -> -Rompus(x))", "all x.(Rumpus(x) -> -Rompus(x))", "all x.(Grimpus(x) -> -Rompus(x))", "all x.(Grimpuse(x) -> -Rompus(x))", "all x.(Grimpus(x) -> -rompus(x))", "all x.(Grimpus(x) -> -Rompus(x))", "all x.(Rimpuse(x) -> -Rumpus(x))", "all x.(Grinpo(x) -> -Rompus(x))", "all x.(Grimpus(x) -> -Rompus(x))", "all x.(Gruppus(x) -> -rompus(x))", "all x.(Grimpe(x) -> -Rupe(x))", "all x.(Grimpus(x) -> -Rompus(x))", "all x.(Grimpus(x) -> -Rompus(x))", "all x.(Grompus(x) -> -Rompus(x))", "all x.(Grimpus(x) -> -Rompus(x))", "all x.(Grimpus(x) -> -Rompus(x))"]}
{"id": "prontoqa_train_1272", "nl": "Alex is not a yumpus or Alex is a lempus or Alex is a brimpus.", "fol": "(-yumpus(Alex) | lempus(Alex) | brimpus(Alex))", "prediction": ["all x.((Alex(x) & -Yumpus(x)) | (Alex(x) -> Lempus(x)) | (Alex(x) -> Brimpus(x))))", "all x.(Alex(x) -> (-Yumpus(x) | Lempus(x) | Brimpus(x)))", "all x.(Alex(x) -> (-Yumpus(x) | Lempus(x) | Brimpus(x)))", "all x.(Alex(x) -> (-Yumpus(x) | Lempus(x) | Brimpus(x)))", "all x.(Alex(x) -> (-Yumpus(x) | Lempus(x) | Brimpus(x)))", "all x.(Alex(x) & (-Yumpus(x) | -Lempus(x) | -Brimpus(x)))", "(all x.(Alex(x) -> (-Yumpus(x) | Lempus(x) | Brimpus(x))))", "all x y z.((Alex(x) & Yumpus(y) & Lempus(z)) -> (NOTYUMPUS(x) | (-Yumpus(y) | Lempus(z) | Brimpus(z)))))", "(i.e. \"Alex,yumpus\" & -Yumpus(y)) | (-Yumpus(y) & Lempus(y)) | (-Yumpus(y) & Brimpus(y))))", "all x.(Alex(x) -> -Yumpus(x) & ((Alex(x) & Lempus(x)) | (Alex(x) & Brimpus(x)))))", "all x.(Alex(x) -> (-Yumpus(x) | Lempus(x) | Brimpus(x)))", "all x.(Alex(x) -> (-Yumpus(x) | Lempus(x) | Brimpus(x)))", "all x.(Alex(x) -> (-Yumpus(x) | (Lempus(x) | Brimpus(x))))", "exists x.(Alex(x) & (-Yumpus(x) | Lempus(x) | Brimpus(x)))", "all x.(Alex(x) -> (-Yumpus(x) | (Lempus(x) | Brimpus(x))))", "all x.(Alex(x) -> (-Yumpus(x) | Lempus(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_1273", "nl": "Everything that is a jompus, a zumpus, and an impus is a tumpus, a sterpus, and a wumpus.", "fol": "all x. ((jompus(x) & zumpus(x) & impus(x)) -> (tumpus(x) & sterpus(x) & wumpus(x)))", "prediction": ["all x.((Jompus(x) | Zumpus(x) | Imperator(x)) -> (Tumpus(x) | Sterpus(x) | Wumpus(x)))", "all x.((Jompus(x) & Tozpus(x) & Impressionist(x)) -> (Tumpus(x) | Sterpus(x) | Wumpus(x)))", "all x.((Jompus(x) | Zumpus(x) | Auferlegen(x)) -> (Tumpus(x) | Sterpus(x) | Wumpus(x)))", "all x.((Jompus(x) | Zumpus(x) | Imperempt(x)) -> (Thumpus(x) & Dremel(x) & Wumpus(x)))", "all x.((Jompus(x) | Zumpus(x) | Issue(x)) -> (Tumpus(x) & Sterospus(x) & Wumpus(x)))", "all x.((jompus(x) | zumpus(x) | impus(x)) -> (Tumpus(x) & Sterpus(x) & Wumpus(x)))", "all x.((Jompus(x) | Zumpus(x) | Imperator(x)) -> (Tumpus(x) | Sterpus(x) | Wompus(x)))", "all x.((Jompus(x) | Zumpus(x) | Imperator(x)) -> (Tumpus(x) | Sterpus(x) | Wumpus(x)))", "all x.((Jimpus(x) | Zumpus(x) | Issue(x)) -> (Tumpus(x) & Sterpus(x) & Wumpus(x)))", "all x.((Jumpus(x) | Zumpus(x) | Impossible(x)) -> (Tumpus(x) & Steerpus(x) & Wumpus(x)))", "all x.((Jomes(x) | Zumpus(x) | Impossible(x)) -> (Tumpus(x) & Sterpus(x) & Wumpus(x)))", "all x.((Jompus(x) | Zumpus(x) | Imperative(x)) -> (Tumpus(x) | Sterpus(x) | Wumpus(x)))", "all x.((Jomes(x) | Zumpus(x) | Implicator(x)) -> (Tumpus(x) & Sterpus(x) & Wumpus(x)))", "all x.((Jompus(x) | Zumpus(x) | Imperator(x)) -> (Tumpus(x) | Sterpus(x) | Wumpus(x)))", "all x.((Jompus(x) | Zumpus(x) | Impossible(x)) -> (Throat(x) | Sterpus(x) | Wompus(x)))", "all x.((Jompus(x) | Zumpus(x) | Institut(x)) -> (Tumpus(x) & sterpus(x) & wumpus(x)))"]}
{"id": "prontoqa_train_1274", "nl": "Rex is a jompus.", "fol": "jompus(Rex)", "prediction": ["EsteaJimpus.", "all x.(Rex(x) -> Jompus(x))", "Rex is a Jompus.", "(Also known as Rooster(Rex) & Jompus(Rose))", "Rex is Jompus(Rex)", "(Jimpus(Rex) & Jompus(Rex))", "(Jompus(Rex) & Leaf(Rex))", "Rex.", "Rex is jompus.", "Rex is a Jompus.", "Das Rex is a Jompus(Rex)", "Rex is Jompus(x)", "all x.(Rex(x) -> Jompus(x))", "Rex,jompus.", "Rex (Jompus)", "all x.(Rex(x) -> Jompus(x))"]}
{"id": "prontoqa_train_1275", "nl": "Rex is a sterpus.", "fol": "sterpus(Rex)", "prediction": ["All x.(Rex(x) -> Sterpus(x))", "Rex is Sterpus.", "Rex is Sterpus.", "All x.(Rex(x) -> Sterpus(x))", "all x.(Rex(x) -> Sterpus(x))", "Rex is a Sterpus.", "Rex is Sterpus.", "Rex is sterpus.", "(Sterpus(Rex) & FoundedIn1969(Rex))", "Rex (Sterpus)", "(Sterpus(Rex))", "Rex is a Sterpus.", "Rex. (Sterpus(x) & Sterpus(x))", "all x.(Rex(x) -> Sterpus(x))", "All x.(Rex(x) -> Sterpus(x))", "Rex is Sterpus."]}
{"id": "prontoqa_train_1276", "nl": "Tumpuses are shumpuses, lempuses, and gorpuses.", "fol": "all x. (tumpus(x) -> (shumpus(x) & lempus(x) & gorpus(x)))", "prediction": ["all x.(Tumpus(x) -> (HasShumpus(x) & HasLempus(x) & HasGorpus(x)))", "all x.(Tumpus(x) -> (Shumpus(x) | Lempus(x) | Gorpus(x)))", "all x.(Tumpuse(x) -> (Shumpus(x) | Lempuse(x) | Gorpus(x)))", "all x.(Tumu(x) -> (Shumpuses(x) | Lempuses(x) | Gorpuses(x)))", "all x.(Tumpuse(x) -> (Shumpus(x) | Lempuse(x) | Gorpus(x)))", "all x.(Tumpus(x) -> (Shumpus(x) | Lempuse(x) | Gorpus(x)))", "all x.(Tumpus(x) -> (Shumpus(x) | Lempuse(x) | Gorpuse(x)))", "all x.(Tumpus(x) -> (Shumpus(x) | Lempuse(x) | Gorpus(x)))", "all x.(Tumulus(x) -> (Shumpus(x) | Lempuse(x) | Gorpuse(x)))", "all x.(Tumpus(x) & Shumpus(x) & Lempuse(x) & Gorpus(x))", "all x.(Tumulus(x) -> (Shumpus(x) | Lempuse(x) | Gorpus(x)))", "(all x.(Tumpuse(x) -> Suspended(x)) & all y.(Lempuse(y) -> Sporopuse(y))) & all z.(Morphoscope(z) -> Sporoscope(z)))", "all x.(Tumpus(x) -> (Shumpus(x) | Lempuse(x) | Gorpus(x)))", "all x.(Tumpus(x) -> (Shumpus(x) | Lempuse(x) | Gorpuse(x)))", "all x.(Tumpus(x) -> (Dwarf(x) & Shumpus(x) & Lempuse(x) & Gorpus(x)))", "all x.(Tumpuse(x) -> (Shumpus(x) | Lempus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1277", "nl": "Stella is a lorpus, a lempus, or a shumpus.", "fol": "(lorpus(Stella) | lempus(Stella) | shumpus(Stella))", "prediction": ["all x.(Stella(x) -> (Lorpus(x) | Lempus(x) | Humpus(x)))", "all x.(Stella(x) -> (Lorpus(x) | Lempus(x) | Humpus(x)))", "all x.(Stella(x) -> (Lorpus(x) | Lempus(x) | Humpus(x)))", "all x.(Stella(x) -> (Lorpus(x) | Lempus(x) | Humpus(x)))", "all x.(Stella(x) -> (Lorpus(x) | Lempus(x) | Humpus(x)))", "all x.(Stella(x) -> (Lorph(x) | Lempus(x) | Humpus(x)))", "all x.(Stella(x) -> (Lorpus(x) | Lempus(x) | Humpus(x)))", "all x.(Stella(x) -> (Lorpus(x) | Lempus(x) | Humpus(x)))", "ALL x.(Stella(x) -> (Lorph(x) | Lempus(x) | Humpus(x)))", "all x.(Stella(x) -> (Lorpus(x) | Lempus(x) | Shumpus(x)))", "all x.(Stella(x) -> (Lorpus(x) | Lempus(x) | Humpus(x)))", "(all x.(Stella(x) -> (Lorph(x) | Lempus(x) | Humpus(x))))", "all x.(Stella(x) -> (Lorpus(x) | Lempus(x) | Humpus(x)))", "all x.(Stelen(x) -> (Lorpus(x) | Lempus(x) | Humpus(x)))", "exists x.(Stella(x) & (Lorpus(x) | Lempus(x) | Humpus(x)))", "all x.(Stella(x) -> (Lorpus(x) | Lempus(x) | Humpus(x)))"]}
{"id": "prontoqa_train_1278", "nl": "Every jompus is a shumpus.", "fol": "all x. (jompus(x) -> shumpus(x))", "prediction": ["all x.(Jompus(x) -> Shumpus(x))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jampus(x) -> Shumpus(x))", "all x.(Jompus(x) -> Shumpus(x))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jimpus(x) -> Shumpus(x))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jompus(x) -> Shumpus(x))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jompus(x) -> Shumpus(x))", "all x.(Jompus(x) -> Shumpus(x))", "all x.(Jimpus(x) -> Shumb(x))", "all x.(Jompus(x) -> Suhmpus(x))", "all x.(Jimpus(x) -> Humpus(x))", "all x.(Jimpus(x) -> Humpus(x))"]}
{"id": "prontoqa_train_1279", "nl": "Max is a yumpus and Max is not a shumpus and Max is a grimpus.", "fol": "(yumpus(Max) & -shumpus(Max) & grimpus(Max))", "prediction": ["(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> -Shumpus(x)) & (Max(x) -> Grimpus(x)))", "(all x.(Max(x) -> Yampus(x)) & (Max(x) -> -Shumpus(x)) & (Max(x) -> Grimpus(x)))", "(all x.(Max(x) -> Yampus(x)) & (-Max(x) -> Humpus(x)) & (Gruff(x) -> Grimpus(x)))", "all x y.((Max(x) & Thrush(x)) -> (Yumpus(x) & -Shumpus(x) & Gruppus(y)))", "all x y z.((Max(x) & Yampus(y) & -Shumpus(z) & Grimpus(x)) -> (Yumpus(x) & -Shumpus(x) & Grimpus(x) & -Yumpus(y) & -Slumpus(z)))", "all x y.((Max(x) & Yumpus(x)) -> (-Shumpus(x) & Grumpus(y)))", "(exists x.(Max(x) & Yampus(x)) & exists y.(Max(y) & -Shumpus(y))))", "(all x.((Max(x) & Yumpus(x)) & (-Shumpus(x) & Grumpy(x))) -> Yimpus(x))", "all x y z.((Max(x) & Yumbos(x) & Max(y) & -Shumpus(y)) -> (ForeverSmog (z) & ForeverSmog(z))))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> -Shumpus(x)) & (Max(x) -> Grimpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & ((Max(x) -> -Shumpus(x))) & ((Max(x) -> Grimpus(x))))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> -Shumpus(y))) & all z.(Max(z) -> Grimpus(z)))", "(all x.(Max(x) -> Yampus(x)) & (Max(x) -> -Shumpus(x))) & (Max(x) -> Grimpus(x)))", "all x y.((Max(x) & Yumpus(x)) -> (-Shumpus(x) & Grimpus(y)))", "(all x.(Max(x) -> Yuga(x)) & all y.(Max(y) -> -Shumpus(y))) & all z.(Max(z) -> Grimpus(z))))", "exists x.(Max(x) & Yampus(x) & -Shumpus(x) & Grappa(x))"]}
{"id": "prontoqa_train_1280", "nl": "Max is a yumpus, Max is not a jompus, or Max is an impus.", "fol": "(yumpus(Max) | -jompus(Max) | impus(Max))", "prediction": ["(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> -Jompus(x)) | (Max(x) -> Imperator(x))))", "all x.(Max(x) -> (Yumpus(x) | -Jompus(x) | Imperator(x)))", "(yumpus(x) | -jompus(x) | Oblique(x)))", "exists x.(Max(x) & (Yumpus(x) | -Jompus(x) | Imperator(x)))", "all x.(Max(x) -> (Yumpus(x) | -Jompus(x) | Imperative(x)))", "(exists x.(Max(x) & Yumpus(x)) | exists y.(Max(y) & Jompus(y)))) | exists z.(Max(z) & impussian(z))))", "(all x.(Max(x) -> Yumpus(x)) | (-Jompus(x) | IsImprovement(x))))", "(all x.(Max(x) -> Yumpus(x)) & (-Max(x) -> Jompus(x)) | (-Max(x) -> IsPlatform(x))))", "(all x.(Max(x) -> Yumpus(x)) | (-Max(x) -> Jompus(x)) | (-Max(x) -> Imperator(x))))", "(all x.(Max(x) -> Yampus(x)) | (-Jomes(x) | Iz\u00e9ris(x))))", "(exists x.(Max(x) & Yumpus(x)) | exists y.(Max(y) & -Jompus(y))) | exists z.(Max(z) & Impossible(z))))", "(all x.(Max(x) -> Yumpus(x)) | (-Max(x) & Jompus(x))) | (-Max(x) & Impermissible(x))))", "all x.((Max(x) & Yumpus(x)) | (-Jampus(x)) | (-Jimpus(x) & Maschine(x)))))", "all x.(Max(x) -> (Yumpus(x) | -Jompus(x) | Impossible(x)))", "(all x.(Max(x) -> Yumpus(x)) | (-Yumpus(x) | Isolator(x))))", "all x.(Max(x) & ((Yumpus(x) | -Jompus(x)) | IsMax(x)))"]}
{"id": "prontoqa_train_1281", "nl": "Each sterpus is a tumpus, a wumpus, and a dumpus.", "fol": "all x. (sterpus(x) -> (tumpus(x) & wumpus(x) & dumpus(x)))", "prediction": ["(all x.(Sterpus(x) -> Tumpus(x)) & exists y.(Wumpus(y) & LocatedIn(x,y))) & exists z.(Dumps(z) & LocatedIn(x,z))))", "all x.(Sterpus(x) -> (Tumpus(x) | Wumpus(x) | Dumpus(x)))", "all x.(Sterpus(x) -> (Tumpus(x) | Wumpus(x) | Dumpus(x)))", "all x.(Sterepus(x) -> ((Tumpus(x) | Wumpus(x) | Dumpus(x))))", "all x.(Sterpus(x) -> (Tumpus(x) | Wumpus(x) | Dumpus(x)))", "all x.(Sterpus(x) -> (Tumpus(x) | Wumpus(x) | Dumpus(x)))", "all x.(Sterpus(x) -> (Tumpus(x) & Wumpus(x) & Dumpus(x)))", "all x.(Sternpus(x) -> (Tumpus(x) | Wumpus(x) | Dumpus(x)))", "all x.(Sterpus(x) -> (Tumpus(x) | Wumpus(x) | Dumpus(x)))", "all x.(Strop(x) -> (Tumpus(x) & Wompus(x) & Dumpus(x)))", "all x.(Sterpus(x) -> (Tumpus(x) & Wumpus(x) & Dumpus(x)))", "all x.(Sterpus(x) -> (Tumpus(x) & Wumpus(x) & Dumpus(x)))", "(all x.(Sterpus(x) -> Tumpus(x)) & (Wumpus(x) & Dumpus(x)))", "all x.(Sterepus(x) -> (Tumpus(x) | Wumpus(x) | Dumpus(x)))", "all x.(Sterpus(x) -> (Tumpus(x) | Wumpus(x) | Dumpus(x)))", "exists x.(Sterpus(x) & (Tumpus(x) | Wumpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_1282", "nl": "Fae is a vumpus and Fae is a brimpus and Fae is not a wumpus.", "fol": "(vumpus(Fae) & brimpus(Fae) & -wumpus(Fae))", "prediction": ["all x y z.((Fae(x) & Frau(y) & Brimpus(z)) -> (Vumpus(x) & Brampus(y) & -Wumpus(z)))", "all x y z.((Fae(x) & Vumpus(y) & Brimpus(z)) -> (Vumpus(x) & Brimpus(z) & -Wumpus(x)))", "all x y.((Fae(x) & Vumpus(x) & Fae(y)) -> (Brumpus(y) & -Wumpus(x)))", "all x y z.((Fae(x) & Vumpus(x) & Fae(y) & Brimpus(y)) -> (Vumpus(x) & -Wumpus(y)))", "all x y z.((Fae(x) & Vampus(x) & Brimpus(y)) -> (Vumpus(x) & Brimpus(y) & -Wumpus(z)))", "((Fae isVumpus) | Fae isBrimpus(Fae)) & (Fae(Fae) -> -Wumpus)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> Brimpus(x)) & -Wumpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> Brimpus(x)) & (Fae(x) -> -Wumpus(x))))", "(all x y.(Fae(x) -> V\u00e9mis(x)) & (Fae(y) -> Brimpus(y)) & (Fae(y) -> -Wumpus(y)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> Brimpus(x)) & (Fae(x) -> -Wumpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> Brimpus(x)) & -Wumpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) & (Firefly(x) -> Brimpus(x)) & -Wumpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> Brimpus(y)) & all z.(Fae(z) -> -Wumpus(z))))", "all x y z.((Fae(x) & Fae(y) & Brimpus(z)) -> (Vimpus(x) & Brimpus(y) & -Wumpus(z)))", "all x.(Fae(x) & (Vumpus(x) | Brimpus(x)) & -Wumpus(x))", "all x.(Fae(x) -> (Vumpus(x) & Brimpus(x) & -Wumpus(x)))"]}
{"id": "prontoqa_train_1283", "nl": "Shumpuses are vumpuses and gorpuses and brimpuses.", "fol": "all x. (shumpus(x) -> (vumpus(x) & gorpus(x) & brimpus(x)))", "prediction": ["all x.(Showpuck(x) -> (Vumpe(x) & Gorpuse(x) & Brimpuse(x)))", "all x.(Shade(x) -> ((Vuxuse(x) & Gorpuse(x)) | Brimpuse(x)))", "all x.(Shuppus(x) -> (Vumpuse(x) & Gorpus(x) & Brimbus(x)))", "all x.(Shrumpet(x) -> (Vumpuse(x) | Gorpuse(x) | Brimpuse(x)))", "all x.(Shupuse(x) -> (Vumpuse(x) & Gorpuse(x) & Brimbus(x)))", "all x.(Shimus(x) & (Cumpus(x) | Gorpus(x) | Brimpuse(x)))", "all x y z.((Shuppe(x) & Vampuse(y) & Gorpuse(z)) -> (Vampuse(y) | Gorpuse(z) | Brimpus(z)))", "all x.(Shupuse(x) -> (Vampuse(x) | Gorpuse(x) | Brimpuse(x)))", "all x.(Supply(x) -> (Vampuse(x) | Gorpuse(x) | Brimpuse(x)))", "all x.(Shumpsues(x) -> (Vampuse(x) | Rifles(x) | Brimpuses(x)))", "all x.(Shupuse(x) -> (Vampuse(x) & Gorpuse(x) & Brimpuse(x)))", "all x.(Shamus(x) -> (Vampuse(x) & Gorpuse(x) & Brimpuse(x)))", "all x.(Shumpus(x) -> (Vumpuse(x) & Gorpuse(x) & Brimpuse(x)))", "all x.(Shupuse(x) -> (Vampus(x) | Gorpuse(x) | Brimpuse(x)))", "all x.(Shupuse(x) -> (Vumpuse(x) | Gorpuse(x) | Brimbus(x)))", "all x.(Shuckuse(x) -> (Vermueuse(x) & Torpuse(x) & Brimpuse(x)))"]}
{"id": "prontoqa_train_1284", "nl": "Stella is not a gorpus and Stella is a yumpus and Stella is a dumpus.", "fol": "(-gorpus(Stella) & yumpus(Stella) & dumpus(Stella))", "prediction": ["all x y z.((Stella(x) & Gorpus(y) & Yuksum(z)) -> (-Gorpus(x) & Yukum(x) & Dumpus(x)))", "all x y.((Stella(x) & NoGorpus(x) & NoYumpus(y) & NoDumpus(x)) -> IsNot(x,y))", "(all x.(Stella(x) -> -Gorpus(x)) & all y.(Stella(y) -> Yellowpup(y))) & all z.(Stella(z) -> Dumpus(z))))", "(all x.(Stella(x) -> -Gorpus(x)) & (Stella(x) -> Yumpu(x)) & (Stella(x) -> Dumpus(x)))", "(-Gorpus(Stella) | 1Yumpus(Stella) | 1Dumpus(Stella)))", "all x y z.((Stella(x) & Gorpus(y) & Yumpus(z)) -> (-Gorpus(x) & Yumpus(x) & Dubius(x)))", "all x y z.((Stella(x) & Gorpus(y) & Yumpus(z)) -> -(Gorpus(x) | Dumpus(x)))", "all x y z.((Stella(x) & Gorpus(y) & Yumpus(z)) -> (--Stella(x) & Yumpus(x) & Dumpus(x)))", "(all x.(Stella(x) -> -Gorpus(x)) & (Stella(x) -> Yumpus(x)) & (Stella(x) -> Dumpus(x)))", "(all x.(Zelle(x) -> -Gorpus(x)) & all y.(Zelle(y) -> Yumpus(y))) & all z.(Zelle(z) -> Dumpus(z)))", "(all x y.(Gorpus(x) -> -Gorpus(x)) & (Yumpus(y) -> Dumpus(y)))", "(all x.(Stella(x) -> -Gorpus(x)) & (Yumpus(x) | Dumpus(x))))", "all x y z.((Stella(x) & Gorpus(y) & Yumps(z)) -> -(Gorpus(x) & Yumps(y) & Dumpus(z)))", "(all x y z.((Stella(x) & Gorpus(y) & Yumpus(z)) -> -Gorpus(x)) & ((Stella(x) & Yumpus(x)) -> Dumpus(x)))", "all x y z.((Stella(x) & Gorpus(y) & Yumpus(z)) -> (-Gorpus(x) & Yempus(x) & Dumpus(x)))", "(all x.(HasGorpus(x) -> -HasGorpus(x)) & (HasYumpus(x) -> HasDumpus(x)))"]}
{"id": "prontoqa_train_1285", "nl": "Jompuses are rompuses and numpuses and vumpuses.", "fol": "all x. (jompus(x) -> (rompus(x) & numpus(x) & vumpus(x)))", "prediction": ["all x.(Jompuse(x) -> (Rompus(x) | Numpuse(x) | Vampuse(x)))", "all x.(Jompuse(x) -> (Rompuse(x) & Numpuse(x) & Vampuse(x)))", "all x y.((Jompuse(x) & Rompus(y)) -> (Numpus(x) | Vampuse(x)))", "all x.(Jompuse(x) -> (Rompus(x) | Numpuse(x) | Vumpuse(x)))", "'Jompuse' (rompus(r) | Numpuse(r) | Vampuse(r)))", "all x.(Jompuse(x) -> (rompus(x) & Numpuse(x) & Vampuse(x)))", "all x.(Jompuse(x) -> (Rompus(x) | Humpuse(x) | Vampuse(x)))", "all x.(Jompuse(x) -> (Rompuse(x) | Numpuse(x) | Vumpuse(x)))", "all x.(Jompuse(x) -> (Rompus(x) & Numpuse(x) & Vampuse(x)))", "all x.(Jompus(x) -> (Rompus(x) | Numpus(x) | Vampuse(x)))", "all x.(Jompus(x) -> (Rompus(x) | Numpus(x) | Vuxus(x)))", "all x.(Jompuse(x) -> (Rompus(x) | Numpuse(x) | Vampuse(x)))", "all x.(Jompuse(x) -> (Rompus(x) | Numpuse(x) | Vampuse(x)))", "all x.(Jompuse(x) -> (Rompus(x) | Numpuse(x) | Vampuse(x)))", "all x.(Jompuse(x) -> (Rompus(x) | Numpuse(x) | Vome(x)))", "all x.(Jompuse(x) -> (Rompus(x) & (Numpuse(x) | Vampuse(x))))"]}
{"id": "prontoqa_train_1286", "nl": "Max is a numpus or a lorpus or a sterpus.", "fol": "(numpus(Max) | lorpus(Max) | sterpus(Max))", "prediction": ["all x.(Max(x) -> (Numbpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Max(x) -> (numpus(x) | lorpus(x) | sterpus(x)))", "(exists x.(Max(x) & (Number(x) | Lorpus(x) | Sterpus(x))))", "all x.(Max(x) -> (Numbus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Sterpus(x)))", "all x y.((Max(x) & Numpus(y)) | (Lorpus(x) | Sterpus(x))))", "all x.(Max(x) -> (Number(x) | Lorpus(x) | Sterpus(x)))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Max(x) -> (Numerus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Sterpus(x)))", "((Max(Max) | Nimbus( Max)) | Lorpus( Max) | Sterpus(Max)))", "(Numpus(Max) | Lorpus(Max) | Sterpus(Max))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Max(x) -> (numpus(x) | lorpus(x) | sterpus(x)))", "all x.(Max(x) -> (numpus(x) | lorpus(x) | sterpus(x)))"]}
{"id": "prontoqa_train_1287", "nl": "Alex is an impus, a rompus, and a gorpus.", "fol": "(impus(Alex) & rompus(Alex) & gorpus(Alex))", "prediction": ["all x.(Alex(x) -> (Imposs(x) & Rimpus(x) & Gorpus(x)))", "(all x.(Alex(x) -> Impeccable(x)) & all y.(Rompus(y) -> Gorpus(y)))", "all x y z.((Alex(x) & Occupy(y) & Rompus(z)) -> (Immers(x) | Rompus(x) | Gorpus(x)))", "(Insulator(Alex) | Rompus(Alex) | Gorpus(Alex))", "ALL x.(Alex(x) -> (Impossible(x) & Rompus(x) & Gorpus(x)))", "all x.(Alex(x) -> (Imposer(x) | Rompus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Imposs(x) & Rompus(x) & Gorpus(x)))", "all x.(Alex(x) -> (Imposs(x) | Rompus(x) | Gorpus(x)))", "(All x y.((Alex(x) & Impossible(x)) & Rompet(y)) & Gorpus(x))", "exists x.(Alex(x) & Is(x) & Rompus(x) & Gorpus(x))", "all x.(Alex(x) -> (Issue(x) & IsRompus(x) & IsGorpus(x)))", "all x.(Alex(x) -> (Impose(x) & Rompus(x) & Gorpus(x)))", "all x.(Alex(x) -> (Impos(x) & Rompus(x) & Gorpus(x)))", "all x.(Alex(x) -> (Impos(x) & Rompus(x) & Gorpus(x)))", "all x.(Alex(x) -> (Impossible(x) | Rompus(x) | Gorpus(x)))", "((Alex) | Rompet(Alex)) & Gorpus(Alex))"]}
{"id": "prontoqa_train_1288", "nl": "Alex is a gorpus or a jompus or a yumpus.", "fol": "(gorpus(Alex) | jompus(Alex) | yumpus(Alex))", "prediction": ["all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yukpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gosphorus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Jompus(x) | Yumpus(x)))"]}
{"id": "prontoqa_train_1289", "nl": "Max is a brimpus, a sterpus, and a zumpus.", "fol": "(brimpus(Max) & sterpus(Max) & zumpus(Max))", "prediction": ["(all x.(Max(x) -> Brimpus(x)) & (Stromit(x) & Zumpus(x)))", "all x.(Max(x) -> (Brampus(x) | Sterpus(x) | Zumpus(x)))", "(Brimpus(Max) | Sterpus(Max) | Zumpus(Max))", "all x.(Max(x) -> ((Brimpus(x) | Sterpus(x) | Zumpus(x))))", "all x.(Max(x) -> (Brimpus(x) | Sterpus(x) | Zumpus(x)))", "(Brimpus(Max) | Sterpus(Max) | Zumpus(Max)))", "(all x.(Max(x) -> Brimpus(x)) & (Brimmer(x) -> Sterus(x)) & (Zumpus(x) -> Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & ((Max(x) & Steroid(x)) | (Max(x) & Zurpus(x)))))", "all x.(Max(x) -> (Brimpus(x) & Sterpus(x) & Zumpus(x)))", "(Brimpus(Max) | Sterpus(Max) | Zumpus(Max))", "all x.(Max(x) -> (Brimpus(x) | Sterpus(x) | Zumpus(x)))", "(all x y.((Max(x) & Brimpus(x)) -> Sere(y)) & ((Max(x) & Sterepus(y)) -> Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & ((Max(x) & Sterpus(x)) | (Max(x) & Zumpus(x))))", "all x.(Max(x) -> (Brimpus(x) | Sterpus(x) | Zumpus(x)))", "All x.(Max(x) -> (Brimpus(x) & Steros (x) & Zumpus(x)))", "(Brimpus(Max) & Sterpus(Max) & Zumpus(Max))"]}
{"id": "prontoqa_train_1290", "nl": "Max is a wumpus, an impus, or a tumpus.", "fol": "(wumpus(Max) | impus(Max) | tumpus(Max))", "prediction": ["all x.(Max(x) -> (Wumpus(x) | Imperator(x) | Tompus(x)))", "all x.(Max(x) -> (Wumpus(x) | Impossible(x) | Tumpus(x)))", "all x.(Max(x) -> (Wumpus(x) | Impeccable(x) | Tumulus(x)))", "all x.(Max(x) -> ((Wumpus(x) | Einspruch(x)) | Tumpus(x)))", "all x.(Max(x) -> (Wumpus(x) | Imperative(x) | Tumpus(x)))", "all x.(Max(x) -> (Wumpus(x) | Impossibile(x) | Tumpus(x)))", "(all x.(Max(x) -> (Wumpus(x) | Impossible(x) | Tumpus(x)))", "(All x.(Max(x) -> (Wumpus(x) | Impossible(x) | Tumpus(x))))", "all x.(Max(x) -> ((Wumpus(x) | Impossible(x) | Tumpus(x))))", "all x.(Max(x) -> (Wumpus(x) | Imperemption(x) | Tumpus(x)))", "all x.(Max(x) -> (Wumpus(x) | Impossible(x) | Tumpus(x)))", "all x y z.((Max(x) & (Wumpus(y) | Issue(y) | Tumpus(x))) -> (Umpus(y) | Issue(y) | Tumpus(y)))", "exists x.(Max(x) & (Wumpus(x) | Impermissible(x) | Tumpus(x)))", "all x.(Max(x) -> (Wumpus(x) | Imperempt(x) | Tumpus(x)))", "all x.(Max(x) -> (Wumpus(x) | Ilirez(x) | Tumpus(x)))", "all x.(Max(x) -> (Wumpus(x) | Impossible(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1291", "nl": "Everything that is a zumpus and a sterpus and a lorpus is a grimpus, an impus, and a dumpus.", "fol": "all x. ((zumpus(x) & sterpus(x) & lorpus(x)) -> (grimpus(x) & impus(x) & dumpus(x)))", "prediction": ["all x.((Rumpus(x) & Sterpus(x) & Lorpus(x)) -> (Grimpus(x) | Imperator(x) | Dumpus(x)))", "all x.((Tommus(x) & Sterpus(x) & Lorpus(x)) -> (Grimpus(x) & Imperempted(x) & Dumpus(x)))", "all x.((Grompus(x) & Sterpus(x) & Lorpus(x)) -> (Grimpus(x) & Impossible(x) & Dumpus(x)))", "all x.((Tompus(x) & Sterpus(x) & Lorpus(x)) -> (Grimpus(x) & Impossible(x) & Dumpus(x)))", "all x.((Sumpus(x) & Steerpus(x) & Lordpus(x)) -> (Arpiform(x) & Irris(x) & Dumpus(x)))", "all x y.((Tompus(x) & Sterpus(y) & Lorpus(y)) -> (Grimpus(x) | Imperempt(x) | Dumpus(x)))", "all x.((Zombipus(x) & Sterpus(x) & Lordpus(x)) -> (Grimpus(x) & Impossible(x) & Dumpus(x)))", "all x.((Hauspus(x) | Sterpus(x) | Lorpus(x)) -> (Grirmpus(x) & Imperia(x) & Dupus(x)))", "all x.((Tompus(x) & Sterpus(x) & Lorpus(x)) -> (Grimpus(x) | Imperative(x) | Dumpus(x)))", "all x.((Tompus(x) & Roosepus(x) & Lorpus(x)) -> (Frostpus(x) & Impossible(x) & Dumpus(x)))", "all x.((Tompus(x) & Sterpus(x) & Lorpus(x)) -> (Grimpus(x) | Impossible(x) | Dumpus(x)))", "all x.((Tompus(x) & Spectrpus(x) & Lorpus(x)) -> (Redmundus(x) | Encapsulates(x) | Impervates(x) | Dumpus(x)))", "all x.((Tompus(x) & Sterpus(x) & Lorpus(x)) -> (Grimpus(x) & Imperempted(x) & Dumpus(x)))", "all x.((Tompus(x) & Sterpus(x) & Lorpus(x)) -> (Grimpus(x) | Imperator(x) | Dumpus(x)))", "all x.((Tompus(x) & Sterpus(x) & Lorpus(x)) -> (Grimpus(x) & Issue(x) & Dumpus(x)))", "all x.((Tompus(x) & Sterpus(x) & Lorpus(x)) -> (Grimpus(x) & Impermiss(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1292", "nl": "Polly is a zumpus.", "fol": "zumpus(Polly)", "prediction": ["all x.(MostPup(x) -> Zumpus(x))", "All x.(Polly(x) -> Zumpus(x))", "Polly is a zumpus.", "Polly is a zumpus.", "Polly (Tumpus(poly))", "All x.(Pollie(x) -> Zumpus(x))", "all x.((Polly(x) & Zumpus(x)) -> HasInCelebration(x))", "ALL x.(Tompus(x) -> Polly(x))", "(Zumpus(Polly))", "Polly is Zumpus(Ply)", "Polly is a zumpus.", "all x.(Polly(x) -> Zumpus(x))", "polly(polly) -> Zumpus(poly))", "(Zumpus(Polly) & Has(Poly))", "Polly is Zumpus.", "Polly is zumpus."]}
{"id": "prontoqa_train_1293", "nl": "Gorpuses are jompuses.", "fol": "all x. (gorpus(x) -> jompus(x))", "prediction": ["all x.(Gorpuse(x) -> Jompuse(x))", "all x.(Gorpus(x) -> Jompus(x))", "all x.(Grompus(x) -> Jompuse(x))", "all x.(Gorpus(x) -> Jompuse(x))", "all x.(Gorpus(x) -> Jompuse(x))", "all x.(Gorpus(x) -> Jompuse(x))", "all x.(Gorpuse(x) -> Jompuse(x))", "all x.(Gorpus(x) -> Jompuse(x))", "all x.(Gorpuse(x) -> Jompuse(x))", "all x.(Gorpus(x) -> Jompus(x))", "all x.(Gorpus(x) -> Jompuse(x))", "all x.(Gorpus(x) -> Jompuse(x))", "all x.(Gorpus(x) -> Jompuse(x))", "all x.(Gorpuse(x) -> Jompuse(x))", "all x.(Gorpus(x) -> Jompuse(x))", "all x.(Gorpus(x) -> Jompuse(x))"]}
{"id": "prontoqa_train_1294", "nl": "Sally is a gorpus, a grimpus, and a wumpus.", "fol": "(gorpus(Sally) & grimpus(Sally) & wumpus(Sally))", "prediction": ["all x.(Sally(x) -> (Rogpus(x) | Grimpus(x) | Wumpus(x)))", "(all x.(Sally(x) -> Gorpus(x)) & all y.(Grimpus(y) & Wumpus(y)))", "all x.(Sally(x) -> (Gorpus(x) | Grimpus(x) | Wumpus(x)))", "(all x.(Sally(x) -> Gorpus(x)) & (Grimpus(x) -> Grimpus(x)) & (Wumpus(x) -> Wormpus(x)))", "exists x.(Sally(x) & Gorpus(x) & Grimpus(x) & Wumpus(x))", "all x.(Sally(x) -> (Between(x,Gorpus) & Between(x,Grimpus) & Between(x,Wumpus)))", "(Gorpus(Sally) | Grimpus(Sally) | Wumpus(Sally))", "(Gorpus(Sally) | Grimpus(Sally) | Umpus(Sally))", "(all x.(Sally(x) -> Gorpus(x)) & all y.(Grimpus(y) -> Wumpus(y)))", "all x.(Sally(x) -> (Gorpus(x) | Grimpus(x) | Wumpus(x)))", "(all x.(Sally(x) -> Gorpus(x)) & all y.(Grimpus(y) & Rumpus(y)))", "all x.(Sally(x) -> (Gorpus(x) & Grimpus(x) & Wumpus(x)))", "(Gorpus(Sally) & Grimpus(Sally) & Wumpus(Sally))", "(all x.(Sally(x) -> Gorpus(x)) & (Sgrimpus(x) -> Grimpus(x)) & (Wumpus(x) -> Gorpus(x)))", "(Gorpus(Sally) & Grimpus(Sally) & Wumpus(Sally))", "(all x.(Sally(x) -> Gorpus(x)) & all y.(Grimpus(y) & -Wumpus(y)))"]}
{"id": "prontoqa_train_1295", "nl": "Sally is a gorpus or a lorpus or a jompus.", "fol": "(gorpus(Sally) | lorpus(Sally) | jompus(Sally))", "prediction": ["all x.(Sally(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Lorepus(x) | Jompus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Lordpus(x) | Jompus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Loperpus(x) | Jompus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Loomis(x) | Jompus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "exists x.(Sally(x) & (Gorpus(x) | Lorpus(x) | Jompus(x)))", "(Gorpus(Sally) | Lordpus(Sally) | Jompus(Sally)))", "all x.(Sally(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "all x.(Sally(x) -> (Forose(x) | Forose(x) | Forose(x) | Forose(x)))"]}
{"id": "prontoqa_train_1296", "nl": "Everything that is a gorpus and a lorpus and a dumpus is a shumpus, a tumpus, and a zumpus.", "fol": "all x. ((gorpus(x) & lorpus(x) & dumpus(x)) -> (shumpus(x) & tumpus(x) & zumpus(x)))", "prediction": ["all x.((Gorpus(x) & Lorpus(x) & Dumpus(x)) -> (Shumpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Gorpus(x) & Lionel(x) & Dumpus(x)) -> (Shumpus(x) & Tumpus(x) & Zumpus(x)))", "all x.(Gorpus(x) -> (lorpus(x) & dumpus(x)))", "all x.((Gorpus(x) & Lampus(x) & Dumpus(x)) -> (Shumpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Dumpus(x)) -> (Shumpus(x) & Totumpus(x) & Zumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Dumpus(x)) -> (Shumpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Dumpus(x)) -> (Shumpus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Gorpus(x) & Legendus(x) & Dumpus(x)) -> (Shumpus(x) & Tanus(x) & Zumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Dumpus(x)) -> (Shumpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Dumpus(x)) -> (Shumpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Gorpus(x) & Larkus(x) & Dumpus(x)) -> (Shumpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Dumpus(x)) -> (Shumpus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Dumpus(x)) -> (Shumpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Dumpus(x)) -> (HasShumpus(x) & HasTumpus(x) & HasZumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Dumpus(x)) -> (Shumpus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Gorpus(x) & Lorpus(x) & Dumpus(x)) -> (Shumpus(x) | Tumpus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1297", "nl": "Sam is a dumpus.", "fol": "dumpus(Sam)", "prediction": ["(Dumus(Sam) & HasDum(Sam))", "(Dumus(Sam) & ComesIn(Sam,Sam))", "all x.(Sam(x) -> Dupus(x))", "all x.(Sam(x) -> Dumpus(x))", "all x.(Sam(x) -> Dumpus(x))", "all x.(Sam(x) -> Dumpus(x))", "all x.(Sam(x) -> Dusk(x))", "all x.(Sam(x) -> Dumpus(x))", "(Dumpus(Sam))", "(Dumpus(Sam) & -Dumbus(Sam))", "(Dupus(Sam) -> Can(Sam))", "(Dumus(Sam) & -Dumbus(Sam))", "all x.(Sam(x) -> Dumpus(x))", "all x.(Stupid(x) -> Sam(x))", "all x.(Sam(x) -> Dumpus(x))", "is a Dumpus(Sam)"]}
{"id": "prontoqa_train_1298", "nl": "Lorpuses are vumpuses, yumpuses, and zumpuses.", "fol": "all x. (lorpus(x) -> (vumpus(x) & yumpus(x) & zumpus(x)))", "prediction": ["all x.(Lorpuse(x) -> (Vumpuse(x) | Yumpuse(x) | Zumpuse(x)))", "all x.(Lorpuse(x) -> (Vumpus(x) | Yompus(x) | Zumpus(x)))", "all x.(Lorpus(x) -> (Vampuse(x) | Yumpuse(x) | Zumpuse(x)))", "all x.(Lorpus(x) -> (Vumpuse(x) | Yumpus(x) | Zumpus(x)))", "all x.(Lorpuse(x) -> (Vampus(x) | Yumpus(x) | Zumpus(x)))", "all x.(Lorpus(x) -> (Vampuse(x) | Yampus(x) | Zumpus(x)))", "all x.(Lorpuse(x) -> (Vumpuse(x) | Yumpuse(x) | Zumpuse(x)))", "all x.(Lorpus(x) -> (Vumpus(x) | Yumpus(x) | Zumpuse(x)))", "(all x y.((Lorpuse(x) & Vampuse(y)) | (Yumpus(y) | Zumpus(y))))", "all x y.((Lorpuse(x) & Vampuse(y)) -> (Yumpus(y) | Zumpus(y)))", "all x.(Lorpus(x) -> (Vumpuse(x) | Yumpuse(x) | Zumpuse(x)))", "all x.(Lorpus(x) -> (Vumpuse(x) | Yumpus(x) | Zumpus(x)))", "all x.(Lorpus(x) -> (Vumpuse(x) | Yumpuse(x) | Zumpuse(x)))", "all x.(Lorpuse(x) -> (Vumpuse(x) | Yumpuse(x) | Zumpuse(x)))", "all x.(Lorpus(x) -> (Vumpuse(x) & Yampus(x) & Zumpus(x)))", "all x.(Lorpuse(x) -> (Vumpuse(x) | Yampuse(x) | Zumpuse(x)))"]}
{"id": "prontoqa_train_1299", "nl": "Rex is a gorpus or an impus or a vumpus.", "fol": "(gorpus(Rex) | impus(Rex) | vumpus(Rex))", "prediction": ["all x.(Rex(x) -> (Gorpus(x) | Imperator(x) | Vumpus(x)))", "all x.(Rex(x) -> (Gorpus(x) | Imperative(x) | Vampire(x)))", "exists x.(Rex(x) & (Gorpus(x) | Impeccable(x) | Mimpus(x)))", "all x.(Rex(x) -> (Gorpus(x) | Impects(x) | Vumpus(x)))", "all x.(Rex(x) -> (Gorpus(x) | Immeritus(x) | Vumpus(x)))", "all x.(Rex(x) -> (Gorpus(x) | Impedus(x) | Vulpu(x)))", "all x.(Rex(x) -> (Gorpus(x) | Imperman(x) | Vumpus(x)))", "all x.(Rex(x) -> (Gorpus(x) | Issue(x) | Vumpus(x)))", "all x.(Rex(x) -> (Gorpus(x) | Impossible(x) | Vumpus(x)))", "all x.(Rex(x) -> (Gorpus(x) | Imperman(x) | Vumpus(x)))", "all x.(Rex(x) -> (Gorpus(x) | Impermiss(x) | VPUMPS(x)))", "all x.(Rex(x) -> (Gorpus(x) | Irregular(x) | Vumpus(x)))", "all x.(Rex(x) -> (Gorpus(x) | Ivres(x) | Voompus(x)))", "all x.(Rex(x) -> (Gorpus(x) | Issues(x) | Vumpus(x)))", "all x.(Rex(x) -> (Gorpus(x) | Issuela(x) | Voompus(x)))", "all x.(Rex(x) -> (Gorpus(x) | Imperator(x) | Vumpus(x)))"]}
{"id": "prontoqa_train_1300", "nl": "Jompuses are zumpuses and tumpuses and shumpuses.", "fol": "all x. (jompus(x) -> (zumpus(x) & tumpus(x) & shumpus(x)))", "prediction": ["all x.(Jompuse(x) -> (Tommus(x) | Tumpus(x) | Humpus(x)))", "all x y.((Jompuse(x) & Toumpus(y)) -> (Tompus(x) & Tumor(x) & Humpus(x)))", "all x.(Jompuse(x) -> (Tompus(x) | Tumpus(x) | Humpus(x)))", "all x.(Jompuse(x) -> (Tompus(x) | Taumpus(x) | Humpus(x)))", "all x.(Jompuse(x) -> (Tommus(x) | Tumpus(x) | Shumpus(x)))", "all x y.((Jompuse(x) & Tompus(y)) -> (Tompus(x) | Tumpus(y) | Shumpus(y)))", "all x.(Jompuse(x) -> (Zumpuses(x) | Tumpuses(x) | Humpuses(x)))", "all x.(Jompuse(x) -> (Tompus(x) | Tumpus(x) | Sompus(x)))", "all x.(Jompuse(x) -> (Zumpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Jompuse(x) -> (Tompuse(x) | Tumpuse(x) | Humpuse(x)))", "all x.(Jompuse(x) -> (Tommouse(x) | Tumpuse(x) | Humpuse(x)))", "all x.(Jompuse(x) -> (Tompus(x) | Tumpus(x) | Shumpus(x)))", "all x.(Jompuse(x) -> (Zumpuse(x) | Tumpuse(x) | Humpuse(x)))", "all x.(Jompuse(x) -> (Tompus(x) | Tumpus(x) | Shumpus(x)))", "all x.(Jompuse(x) -> ((Tommus(x) | Tumpus(x) | Humpus(x))))", "all x.(Jompuse(x) -> (Tompuse(x) | Tumpuse(x) | Shumpuse(x)))"]}
{"id": "prontoqa_train_1301", "nl": "Sam is a zumpus or a vumpus or a sterpus.", "fol": "(zumpus(Sam) | vumpus(Sam) | sterpus(Sam))", "prediction": ["all x y.((Sam(x) & Zurpus(x)) | (Vampus(x) | Sterpus(x))))", "all x.(Sam(x) -> (Tompus(x) | Vumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Voompus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Vulmpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Zumpus(x) | Kumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (HasZumpus(x) | HasVumpus(x) | HasSterepus(x)))", "all x.(Sam(x) -> (Tompus(x) | Vumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Zumpus(x) | Vampus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Voompus(x) | Sterpus(x)))", "exists x.(Sam(x) & (Tompus(x) | Vumpus(x) | Sterpus(x)))", "(Azteka(Sam) | Azteka(Sam) | Azteka(Sam)))", "all x.(Sam(x) -> (Zumpus(x) | Voompus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Vumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Vumbus(x) | Sterpus(x)))", "all x.((Sam(x) & (Zumpus(x) | Vumpus(x) | Sterpus(x))) -> Sam(x))", "all x.(Sam(x) -> (Zumpus(x) | (Vumpus(x) | Sterpus(x))))"]}
{"id": "prontoqa_train_1302", "nl": "Rompuses are lempuses, jompuses, and grimpuses.", "fol": "all x. (rompus(x) -> (lempus(x) & jompus(x) & grimpus(x)))", "prediction": ["all x.(Rompuse(x) -> (Lempuse(x) | Jointuse(x) | Grimpuse(x)))", "all x.(Rompus(x) -> (Lempuse(x) | Jompuse(x) | Grimpuse(x)))", "all x.(RompusElephant(x) -> (Lempuse(x) | Jompuse(x) | Grimpuse(x)))", "all x.(Rompus(x) -> (Lempuse(x) | Jompuse(x) | Grimpuse(x)))", "all x.(Rompus(x) -> (Lempuse(x) | Jompuse(x) | Grimpuse(x)))", "all x y.((Rompus(x) & Lempuse(y)) | Jompuse(y) | Grimpuse(y)) -> (Rompus(x) & Lempuse(y) & Jompuse(y)))", "all x.(Rompus(x) -> (Hesiest(x) & Lempuse(x) & Hesiest(x) & Hesiest(x) & Hesiest(x) & Hesiest(x)))", "all x.(Rompus(x) -> (Lempuse(x) | Jompuse(x) | Grimpuse(x)))", "all x.(Rompus(x) -> (Limbus(x) | Jompuse(x) | Grimpuse(x)))", "(all x.(Rompus(x) & Lempuse(x)) | (Jumpus(x) & Grypus(x))))", "all x.(Rompus(x) -> (Lampuse(x) | Jompuse(x) | Grimpuse(x)))", "all x.((Rompuse(x) & Lempuse(x) & Jompuse(x) & Grimpuse(x)) -> Lempuse(x))", "all x.(Rompus(x) -> (Lempuse(x) | Jompuse(x) | Grimpuse(x)))", "all x.(Rompus(x) -> (Lempuse(x) | Jompuse(x) | Grimpuse(x)))", "all x.(Rompus(x) -> (Lempuses(x) | Jompuses(x) | Grimpuses(x)))", "all x.(Rompus(x) -> (Lempuse(x) & Jompuse(x) & Grimpuse(x)))"]}
{"id": "prontoqa_train_1303", "nl": "Polly is a dumpus, a grimpus, or a zumpus.", "fol": "(dumpus(Polly) | grimpus(Polly) | zumpus(Polly))", "prediction": ["all x.(Poly(x) -> (Dumps(x) | Grimpus(x) | Zumpus(x)))", "all x.(Polly(x) -> (Dumpus(x) | Grimpus(x) | Zumpus(x)))", "(Plumpus(Polly) | Grimpus(Poly) | Zumpus(Poly)))", "all x.(Polly(x) -> (Dumpus(x) | Grimpus(x) | Zumpus(x)))", "(Plolly(Ploy) | (Dumpus(Ploy) | Grimpus(Ploy) | Zumpus(Ploy))))", "all x.(Polly(x) -> (Dumpus(x) | Grimpus(x) | Zumpus(x)))", "all x.(Polly(x) -> (Dupus(x) | Grimpus(x) | Zumpus(x)))", "all x.(Polly(x) -> (Dumpsis(x) | Grimpus(x) | Zumpus(x)))", "all x.(Polly(x) -> (Dupus(x) | Grimpus(x) | Zumpus(x)))", "all x.(Polly(x) -> (Dumpus(x) | Grimpus(x) | Zumpus(x)))", "all x.(Poly(x) -> (Dumpus(x) | Grimpus(x) | Zumpus(x)))", "all x.(Polly(x) -> (Dumpus(x) | Grimpus(x) | Zumpus(x)))", "all x.(Polly(x) -> (Dumpus(x) | Grimpus(x) | Zumpus(x)))", "(Dumpus(Polly) | Grimpus(Polly) | Zumpus(Polly))", "all x.(Polly(x) -> (Dumpus(x) | Grimpus(x) | Zumpus(x)))", "all x.(Dumus(x) | Grimpus(x) | Zumpus(x))"]}
{"id": "prontoqa_train_1304", "nl": "Rompuses are brimpuses.", "fol": "all x. (rompus(x) -> brimpus(x))", "prediction": ["all x.(Rompus(x) -> Brimpuse(x))", "all x.(Rompuse(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpuse(x))", "all x.(Rompus(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpuse(x))", "all x.(Rompus(x) -> Brimpus(x))", "all x.(Roppuse(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpuse(x))", "all x.(Rompus(x) -> Brimpused(x))", "all x.(Romese(x) -> Brimpuse(x))", "all x.(Rompus(x) -> Brimpuse(x))", "all x.(Rompus(x) -> Brimpus(x))", "all x.(Rompus(x) -> Brimpuse(x))", "all x.(Rompus(x) -> Brimbus(x))"]}
{"id": "prontoqa_train_1305", "nl": "Lorpuses are gorpuses.", "fol": "all x. (lorpus(x) -> gorpus(x))", "prediction": ["all x.(Lorpus(x) -> Gorpus(x))", "all x.(Lorpus(x) -> Gorpus(x))", "all x.(Lorpus(x) -> Gorpasse(x))", "all x.(Lorpus(x) -> Gorpuse(x))", "all x.(Lorpus(x) -> Gorpuse(x))", "all x.(Lorpus(x) -> Gorpus(x))", "all x.(Lorpus(x) -> Gorpus(x))", "all x.(Lorpus(x) -> Gorpuse(x))", "all x.(Lorpus(x) -> Gorpus(x))", "all x.(Lorpus(x) -> Gorpuse(x))", "all x.(Lorpuse(x) -> Gorpuse(x))", "all x.(Lorpus(x) -> Gorpus(x))", "all x.(Lorpheus(x) -> Gorpuse(x))", "all x.(Lorpuse(x) -> Gorpuse(x))", "all x.(Lorpuse(x) -> Gorpuse(x))", "all x y.((Lorpuse(x) & Gorpus(y)) -> Grinpse(x))"]}
{"id": "prontoqa_train_1306", "nl": "Gorpuses are grimpuses.", "fol": "all x. (gorpus(x) -> grimpus(x))", "prediction": ["all x.(Gorpuse(x) -> Grimpuse(x))", "all x.(Gorpuse(x) -> Grimpuse(x))", "all x.(Gorpus(x) -> Grimpuse(x))", "all x.(Gorpuse(x) -> Grimpuse(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpuse(x) -> Grimpuse(x))", "all x.(Gorpus(x) -> Grimpus(x))", "all x.(Gorpus(x) -> Grapples(x))", "all x.(Gorpuse(x) -> Grimpuse(x))", "all x.(Gorpuse(x) -> Grappa(x))", "all x.(Gorpus(x) -> Grimpuse(x))", "all x.(Gorpuse(x) -> Grimpuse(x))", "all x.(Gorpus(x) -> Grimpuse(x))", "all x.(Gorpuse(x) -> Grimpuse(x))"]}
{"id": "prontoqa_train_1307", "nl": "Sam is a shumpus, Sam is a sterpus, and Sam is not a yumpus.", "fol": "(shumpus(Sam) & sterpus(Sam) & -yumpus(Sam))", "prediction": ["(all x.(Sam(x) -> shumpus(x)) & (Stempus(x) -> sterpus(x)) & -Yumpus(x)))", "(all x.(Shumpus(x) -> Shumpus(x)) & (Sternpus(x) -> Sterpus(x)) & (Anotheryumpus(x) | -Yumpus(y))))", "(all x y z.((Shumpus(x) & Sterpus(y)) -> Sam(x)) & ((Shumpus(z) & Sterpus(z)) | (Yumpus(z) & -Sam(x)))))", "all x y z.((Sam(x) & Norma(y) & Sam(z)) -> (Shumpus(x) | Sterpus(y) | -Yumpus(z)))", "(all x.(Shumpus(x) -> Contains(x,Sam)) & (Sterpus(x) -> Contains(x,Sam)) & (Yumpus(x) -> Contains(x,Sam)))", "all x y z.((Sam(x) & Hyman(y) & Sam(z)) -> (Shumpus(x) | Sterpus(z) | -Yumpus(z)))", "all x y z.((Sam(x) & Shumpus(y) & Sterus(z) & -Yumpus(z)) -> (Shumpus(x) & Sterus(z) & -Yumpus(z)))", "exists x.(Shumpus(x) & Sterpus(x) & -Yumpus(x))", "(all x.(Shumpus(x) -> Scarlet(x)) & all y.(Sterpus(y) -> -Yumpus(y)))", "all x.((Sam(x) & Shumpus(x)) -> Sterepus(x) & -Yumpus(x))", "(all x.(Sam(x) -> Humpus(x)) & (Sam(x) -> Sterpus(x)) & (Sam(x) -> -Yumpus(x)))", "all x.(Shumpus(x) & Sterpus(x) & -Yumpus(x))", "(all x.(Sam) -> Shumpus(x)) & ((Sam(x) & Sterepus(x))) -> -Yumpus(x)))", "(All x.(Sam(x) -> Humpus(x)) & (Sam(x) -> Sterpus(x)) & -Yumpus(x)))", "(all x.(Shumpus(x) -> Samtx)) & (Sterpus(x) -> Samtx)) & -Yumpus(x)))", "(all x.(Shumpus(x) -> Sam(x)) & (Sterpus(x) -> Sam(x)) & -Yumpus(x)))"]}
{"id": "prontoqa_train_1308", "nl": "Sam is a grimpus, Sam is a brimpus, and Sam is not a tumpus.", "fol": "(grimpus(Sam) & brimpus(Sam) & -tumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Crumpus(x)) & (Sam(x) -> Brimpus(x)) & -Tumpus(x)))", "exists x y z.(Tumpus(x) & Grimpus(y) & Brimpus(z) & -Tumpus(z))", "(all x.(Sam(x) -> Grimpus(x)) & all y.(Brompus(y) -> -Tumpus(y)))", "(all x.(Sam(x) -> Grimpus(x)) & all y.(Brimpus(y) -> Brimpus(y)) & all z.(Tumpus(z) -> -Tumpus(z)))", "all x y z.((Sam(x) & Brimpus(y) & Tumpus(z)) -> (Murple(x) & Brimpus(y) & -Tumpus(z)))", "all x y z.((Sam(x) & Grimpus(x) & Brimpus(y) & -Tumpus(z)) -> (SamAndTumpus(x)))", "all x y z.((Sam(x) & Grimpus(x) & Brimpus(y) & -Tumpus(z)) -> (Grimpus(x) & Brimpus(y) & -Tumpus(z)))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> -Tumpus(x)))", "(all x.(Sam(x) -> Grimpus(x)) & all y.(Sam(y) -> Brimpus(y)) & none z.(Sam(z) -> Tumpus(z)))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> -Tumpus(x)))", "(all x.(Sam(x) -> Grimpus(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> -Tumpus(x)))", "all x y z.((Sam(x) & Grimpus(y) & Brimpus(z)) -> (Rimpus(x,y) & -Tumpus(y)))", "all x y z.((Sam(x) & Grimpus(x) & Brimpus(y) & -Tumpus(z)) -> (Grimpus(x) & Brimpus(y) & -Tumpus(z)))", "(all x.(Sam(x) -> Grimpus(x)) & all y.(Sam(y) -> Brimpus(y)) & all z.(Sam(z) -> -Tumpus(z))))", "(all x.(Sam(x) -> Grimpus(x)) & all y.(Sheep(y) -> Brimpus(y))) & all z.(Sam(z) -> -Tumpus(z)))", "(all x.(Sam(x) -> Grimpus(x)) & all y.(Brumpus(y) -> -Tumpus(y)))"]}
{"id": "prontoqa_train_1309", "nl": "Grimpuses are rompuses, vumpuses, and tumpuses.", "fol": "all x. (grimpus(x) -> (rompus(x) & vumpus(x) & tumpus(x)))", "prediction": ["all x.(Grimpus(x) -> (Rompus(x) | Vumpuse(x) | Tumpus(x)))", "all x.(Grimpus(x) -> (Rompus(x) | Vampuse(x) | Tumpus(x)))", "all x.(Grimpa(x) -> (Rompus(x) | Vampuse(x) | Tumulus(x)))", "all x.(Grimppuse(x) -> (Rompus(x) | Vumpuse(x) | Tumpuse(x)))", "all x.(Grimppuse(x) -> (Rompus(x) | Vampus(x) | Tumpus(x)))", "(all x.(Grimpus(x) -> (Rompus(x) | Vampus(x) | Tumulus(x)))", "all x.(Grimpus(x) -> (Rompus(x) | Vampuse(x) | Tumpus(x)))", "all x.(Grimpus(x) -> (Rompus(x) | Vampuse(x) | Tumpus(x)))", "(all x.(Grimppus(x) -> (Rompus(x) | Vampuse(x) | Tumpus(x))))", "all x.(Grimpus(x) -> (Rompus(x) | Vuze(x) | Tumpus(x)))", "all x.(Grimpus(x) -> (Rompus(x) | Vampus(x) | Tumpus(x)))", "all x.(Grimpus(x) -> (Respise(x) | Vampuse(x) | Tumpus(x)))", "all x y.((Grimpuse(x) & (Rompus(y) | Vampuse(y) | Tumbrus(y))) -> ComesIn(x,y))", "(all x.(Grimpus(x) -> Rompus(x)) & all y.(Vampus(y) -> Tumpus(y)))", "all x.(Grimpus(x) -> (Rompus(x) | Vubis(x) | Tumpus(x)))", "all x.(Rimpus(x) -> (Rompus(x) | Vampuse(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1310", "nl": "Fae is a yumpus, a shumpus, or a vumpus.", "fol": "(yumpus(Fae) | shumpus(Fae) | vumpus(Fae))", "prediction": ["all x.(Fae(x) -> (Yumpus(x) | Humpus(x) | Vampire(x)))", "all x.(Fae(x) -> (Yumpus(x) | Humpus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Yumpus(x) | Humpus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Yumpus(x) | Humpus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Yumpus(x) | Shumpus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Yumpus(x) | Humpus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Yumpus(x) | Humpus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Yumpus(x) | Humpus(x) | Voompus(x)))", "all x.(Fae(x) -> (Yumpus(x) | Humpus(x) | Voompus(x)))", "all x.(Fae(x) -> (Yumpus(x) | Humpus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Yumpus(x) | Humpus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Yumpus(x) | Humpus(x) | Vumpus(x)))", "all x.(Fae(x) -> (yumpus(x) | shumpus(x) | vumpus(x)))", "all x.(Fae(x) -> (Yumpus(x) | Humpus(x) | Vumpus(x)))", "(Young(Fae) | Shumpy(Fae)) & (Yumpus(Fae) | Vimpus(Fae)))", "all x.(Fae(x) -> (Yumpus(x) | Humpus(x) | Vacpus(x)))"]}
{"id": "prontoqa_train_1311", "nl": "Alex is a sterpus, a yumpus, and a rompus.", "fol": "(sterpus(Alex) & yumpus(Alex) & rompus(Alex))", "prediction": ["(Steerpus(Alex) & Yumpus(Alex) & Rompus(Alex))", "all x.(Alex(x) -> (Sterpus(x) | Yumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Steeper(x) & Yumpus(x) & Rompus(x)))", "(All x.(Alex(x) -> Sterepus(x)) & (Yumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Sterepus(x) | Yompus(x) | Rompus(x)))", "(exists x.(Alex(x) & Sterpus(x)) & exists yumpus(y) & exists z.(Rompus(z) & AllOfAlo(x))))", "all x y.((Alex(x) & Sterpus(y)) -> (Yumpus(y) | Rompus(y)))", "all x.(Alex(x) -> (Sterepus(x) | Yuumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Sterepus(x) | Yumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Sterpus(x) & Yampus(x) & Rompus(x)))", "all x.(Alex(x) -> (Sterepus(x) & Yumpus(x) & Rompus(x)))", "all x.(Alex(x) -> (Sterpus(x) | Yampus(x) | Rompus(x)))", "all x.(Alex(x) -> (BetweenStreat(x) | BetweenYumpus(x) | BetweenRompus(x)))", "(exists x.(Alex(x) & Starpus(x))) & exists yumpus(y) & exists z.(rompus(z) & Persics(z))))", "all x y z.((Alex(x) & Sterops(y) & Yumpus(z)) -> (Step(x) | Yampus(z) | Rompus(z)))", "all x.(Alex(x) -> (Sterpus(x) & Yompus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_1312", "nl": "Alex is a rompus or a jompus or a lorpus.", "fol": "(rompus(Alex) | jompus(Alex) | lorpus(Alex))", "prediction": ["exists x.(Alex(x) & (Rompus(x) | Jompus(x) | Lorpus(x)))", "all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))", "all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))", "all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))", "all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))", "all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))", "all x.(Alex(x) -> (rompus(x) | Jompus(x) | Lorpus(x)))", "all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lower(x)))", "all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))", "all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))", "all x.(Alex(x) -(Rompus(x) | Jompus(x) | Lorpus(x)))", "(Rompus(Alex) | Jompus(Alex) | Lorpus(Alex)))", "all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))", "all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))", "all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))", "all x.(Alex(x) -> (Rompus(x) | Jompus(x) | Lorpus(x)))"]}
{"id": "prontoqa_train_1313", "nl": "Everything that is a tumpus, a shumpus, and a grimpus is a wumpus.", "fol": "all x. ((tumpus(x) & shumpus(x) & grimpus(x)) -> wumpus(x))", "prediction": ["all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> Wampus(x))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> Wumpus(x))", "all x y.((Tumpus(x) | Shumpus(y) | Grimpus(y)) -> Wumpus(x))", "all x.((Tumpus(x) & Humpus(x) & Grimpus(x)) -> Wompus(x))", "all x.((Other(x) & Tumpus(x) & Humpus(x) & Grimpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Scrumpus(x) | Grimpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Humpus(x) | Grimpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> Wampus(x))", "all x.((Tumpus(x) | Scumpus(x) | Grimpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Shumpus(x) | Grimpus(x)) -> Wumpus(x))"]}
{"id": "prontoqa_train_1314", "nl": "Max is a shumpus.", "fol": "shumpus(Max)", "prediction": ["all x.(Max(x) -> Humpus(x))", "All x.(Max(x) -> Humpus(x))", "Alles x.(Max(x) -> Humpus(x))", "(Shumpus(Max) & BornBy(Max))", "(Shumpus(Max) & HasTail(Max))", "-MatthewShumpus(Max)", "all x.(Max(x) -> Humpus(x))", "Max(Max) \u2013 Humptus(Max))", "(Shumpus(Max) -> Shumpus(Max))", "(Shumpus(Max) & Squid(Max))", "Max(Max) -> Shumpus(Max))", "(Shumpus(Max))", "Max is a Humpti(Max)", "all x.(Max(x) -> Humptue(x))", "all x.(Max(x) -> Humpus(x))", "(Shumpus(Max) & HasShumptun(Max))"]}
{"id": "prontoqa_train_1315", "nl": "Max is a gorpus, a rompus, or a wumpus.", "fol": "(gorpus(Max) | rompus(Max) | wumpus(Max))", "prediction": ["(Gorpus(Max) | Rompus(Max) | Tumpus(Max))", "(Gorpus(Max) | Rompus(Max) | Wumpus(Max))", "all x.(Max(x) -> (Gorpus(x) | Rompus(x) | Wumpus(x)))", "(Gorpus(Max) | Rompus(Max) | Wumpus(Max))", "all x.(Max(x) -> (Gorpus(x) | Rompus(x) | Wumpus(x)))", "all x.(Max(x) -> (Gorpus(x) | Rompus(x) | Wumpus(x)))", "(Gorpus(Max) | Rompus(Max) | Wumpus(Max))", "all x.(Max(x) -> (Gorpus(x) | Rompus(x) | Wumpus(x)))", "(Gorpus(Max) | Rompus(Max) | Wumpus(Max))", "all x.(Max(x) -> (Orpheus(x) | Romanus(x) | Wumpus(x)))", "all x.(Max(x) -> (Gorpus(x) | Rompus(x) | Wumpius(x)))", "all x.(Max(x) -> (Gorpus(x) | Rompus(x) | Wumpus(x)))", "all x.(Max(x) -> (Gorpus(x) | Rompus(x) | Wumpus(x)))", "all x.(Max(x) -> (Gorpus(x) | Rompus(x) | Wumpus(x)))", "all x.(Max(x) -> (Gorpus(x) | Rompus(x) | Wumpus(x)))", "all x.(Max(x) -> (Gorpus(x) | Rompus(x) | Wumpus(x)))"]}
{"id": "prontoqa_train_1316", "nl": "Everything that is a gorpus, a shumpus, or a numpus is a yumpus.", "fol": "all x. ((gorpus(x) | shumpus(x) | numpus(x)) -> yumpus(x))", "prediction": ["all x.((Gorpus(x) | Humpus(x) | Numpus(x)) -> Yumpus(x))", "all x.((Gorpus(x) | Shumpus(x) | Numpus(x)) -> Yusumpus(x))", "all x.((Gorpus(x) | Shumpus(x) | Numpus(x)) -> Yampus(x))", "all x.((Gorpus(x) | Shumpus(x) | Numpus(x)) -> Yumpus(x))", "all x.((Gorpus(x) | Humpus(x) | Numpus(x)) -> Yumpus(x))", "all x.((Gorpus(x) | Shumpus(x) | Numpus(x)) -> Yampus(x))", "all x.((Gorpus(x) | Shumpus(x) | Numpus(x)) -> Yumpus(x))", "all x.((Gorpus(x) | Sampus(x) | Numpus(x)) -> Yumpus(x))", "all x.((Gorpus(x) | Sampus(x) | Numpus(x)) -> Yumpus(x))", "all x.((Gorpus(x) | Shumpus(x) | Numpus(x)) -> Yumpus(x))", "all x.((Gorpus(x) | Shumpus(x) | Numpus(x)) -> Yampus(x))", "all x.((Gorpus(x) | Shumpus(x) | Numpus(x)) -> Yumpus(x))", "all x.((Gorpus(x) | Saumpus(x) | Numpus(x)) -> Yumpus(x))", "all x.((Gorpus(x) | Humpus(x) | Numpus(x)) -> Yumpus(x))", "all x.((Gorpus(x) | Shumpus(x) | Numpus(x)) -> Yumpus(x))", "all x.((Gorpus(x) | Shumpus(x) | Numpus(x)) -> Yampus(x))"]}
{"id": "prontoqa_train_1317", "nl": "Wren is not a yumpus, Wren is a lempus, and Wren is a dumpus.", "fol": "(-yumpus(Wren) & lempus(Wren) & dumpus(Wren))", "prediction": ["all x y z.((Wren(x) & Yuddish(y) & Lempus(z)) -> (-Yumpus(x) | (-Yumpus(z) & Lempus(z) & Dumpus(z))))", "all x y z.( (Wren(x) & Yumpsum(y) & Lempus(z)) -> (-Yumpus(x) & Lempus(x) & Dumpus(x)))", "all x y z.((Wren(x) & Yompus(y) & Lempus(z)) -> (-Yumpus(x) & Dumpus(x)))", "(all x.(Wren(x) -> -Yumpus(x)) & all y.(Wren(y) -> Lempus(y)) & all z.(Wren(z) -> Dumpus(z)))", "(all x.(Wren(x) -> -Yumpus(x)) & all y.(Wren(y) -> (Lempus(y) & Dumpus(y))))", "(all x.(Wren(x) -> -Yumpus(x)) & all y.(Wren(y) -> Lempus(y)) & all z.(Wren(z) -> Dumpus(z))))", "All x.((Wren(x) & -Yumpus(x)) -> (Lempus(x) & Dumpus(x)))", "(all x.(Wren(x) -> -Yumpus(x)) & all y.(Wren(y) -> Lempus(y)) & all z.(Wren(z) -> Dumpus(z))))", "(-Yumpus(Wren) & Lempus(Wren) & Dumpus(Wren))", "(all x y z.(Wren(x) -> -Yumpus(x)) & ((Wren(y) & Lempus(y)) | ((Wren(z) & Dumpus(z)))))", "all x y z.((Wren(x) & Yumpus(y) & Lempus(z)) -> (-Yumpus(x) & Dumpus(z)))", "(all x.(Wren(x) -> -Yumpus(x)) & all y.(Wren(y) -> Lempus(y)) & all z.(Wren(z) -> Dumpus(z))))", "(all x.(Wren(x) -> -Yumpus(x)) & all y.(Lempus(y) & -Wren(y))) & all z.(Douglas(z) -> Dumpus(z)))", "all x y z.((Wren(x) & Lumpus(y) & Dumpus(z)) -> (-Yumpus(x) & Lempus(y) & Dumpus(z)))", "all x y z.((Wren(x) & Lempus(y) & Dumpus(z)) -> (-Yumpus(x) & -Lempus(y) & -Yumpus(z)))", "all x y z.((Wren(x) & Lempus(y) & Dumpus(z)) -> (-Yumpus(x) & Lempus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1318", "nl": "Tumpuses are brimpuses.", "fol": "all x. (tumpus(x) -> brimpus(x))", "prediction": ["all x.(Tumpuse(x) -> Brimbus(x))", "all x.(Tumpuse(x) -> Brimpus(x))", "all x.(Tumpuse(x) -> Brimpus(x))", "all x.(Tumper(x) -> Brimbus(x))", "all x.(Tumpuse(x) -> Brimpuse(x))", "all x.(Tumper(x) -> Brimpus(x))", "all x.(Tumulus(x) -> Brimbus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpuse(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumulus(x) -> Brimbus(x))", "all x.(Tumpuse(x) -> Brimpus(x))", "all x.(Tumult(x) -> Brimpus(x))", "all x.(Tumulus(x) -> Brimbus(x))", "all x.(Tumpus(x) -> Brimbus(x))", "all x.(Tumult(x) -> Brimpuse(x))"]}
{"id": "prontoqa_train_1319", "nl": "Every grimpus is not a brimpus.", "fol": "all x. (grimpus(x) -> -brimpus(x))", "prediction": ["all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brampus(x))", "all x.(Grampus(x) -> -Brampus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brumpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Smokey(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Smoothpus(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))"]}
{"id": "prontoqa_train_1320", "nl": "Every yumpus is not an impus.", "fol": "all x. (yumpus(x) -> -impus(x))", "prediction": ["all x.(Yumpus(x) -> -Is(x,IsProvides))", "all x.(Yumpus(x) -> -Isimposed(x))", "all x.(Yumpus(x) -> -IsDevice(x))", "all x.(Yumpus(x) -> -IsRequired(x))", "all x.(Yumpus(x) -> -Impermissible(x))", "all x.(Yumpus(x) -> -Impossible(x))", "all x.(Yumpus(x) -> -Impossible(x))", "all x.(Yumpus(x) -> -Impossible(x))", "all x.(Yumpus(x) -> -Izpos(x))", "all x.(Yumpus(x) -> -Impossible(x))", "all x.(Yumpus(x) -> -IsExpressed(x))", "all x.(Youmpus(x) -> -Implementation(x))", "all x.(Yumpus(x) -> -Impossible(x))", "all x.(Yumpus(x) -> -Is(x,Impossible))", "all x.(Yumpus(x) -> -Impossible(x))", "all x.(Yumpus(x) -> -Impolis(x))"]}
{"id": "prontoqa_train_1321", "nl": "Sally is a zumpus, a yumpus, and a lorpus.", "fol": "(zumpus(Sally) & yumpus(Sally) & lorpus(Sally))", "prediction": ["(Sally(Sally) | (Yumpus(Sally) | Lorpus(Sally))))", "All x.(Sally(x) -> (Toumpus(x) & Yumpus(x) & Lorpus(x)))", "all x.(Sally(x) -> (Buddha (z) & Tompus(x) & Yumps(x) & Lorpus(x)))", "all x.(Sally(x) -> (IsZumpus(x) & IsYumpus(x) & IsLorpus(x)))", "all x y z.((Sally(x) & Zumpus(y) & Yumpus(z)) -> (Lorpus(x) & Lorpus(x)))", "(all x.(Sally(x) -> Zumpus(x)) & all y.(Yumpus(y) & all z.(Lorpus(z) & Y.(ya) & Y.(y) & Y.(z)))) -> Lorpus(z)))", "(Zumpus(Sally) | Yumpus(Sally) | Lorpus(Sally)))", "all x.(Sally(x) -> (Zumpus(x) & Yampus(x) & Lopso (x)))", "all x.(Sally(x) -> (Tommus(x) | Yumpus(x) | Lorpus(x)))", "(Tompus(Sally) | Yumpus(Sally) | Lorpus(Sally)))", "all x.(Sally(x) -> (Tompus(x) | Yumpus(x) | Lordpus(x)))", "all x.(Sally(x) -> (Tompus(x) | Yampus(x) | Lorpus(x)))", "(Tompus(Sally) | Yumpus(Sally) | Lorpus(Sally)))", "all x.(Sally(x) -> (Tompus(x) & Yumpus(x) & Lorpus(x)))", "all x.(Sally(x) -> (Tompus(x) | Yumpus(x) | Lorpus(x)))", "(zoompus(z) | yumpus(z) | lorpus(z)))"]}
{"id": "prontoqa_train_1322", "nl": "Sally is not a gorpus, Sally is not a tumpus, and Sally is a dumpus.", "fol": "(-gorpus(Sally) & -tumpus(Sally) & dumpus(Sally))", "prediction": ["all x.((Sally(x) & -Gorpus(x)) & -Tumpus(x) & -Dumpus(x)) -> -Sleeper(x))", "(all x.(Sally(x) -> -Gorpus(x)) & (Sally(x) -> -Toumpus(x)) & (Sally(x) -> Dumpus(x)))", "(all x.(Sally(x) -> -Gorpus(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Dumpus(x)))", "(all x.(Sally(x) -> -Gorpus(x)) & (Sally(x) -> -Tumpus(x)) & (Sally(x) -> Dumpus(x))))", "exists x.(Sally(x) & -Gorpus(x) & -Tumpus(x) & -Dumps(x))", "(all x.(Sally(x) -> -Gorpus(x)) & all y.(Sally(y) -> -Tumpus(y)) & all z.(Sally(z) -> Dumpus(z)))", "all x.((Sally(x) & -Gorpus(x)) | (-Tumpus(x) | Dumpus(x))))", "all x y z.((Sally(x) & Gorpus(y) & Tumpus(z)) -> (-Gorpus(x) & -Tumpus(x) & -Dumpus(x)))", "(all x.(Sally(x) -> -Rorpus(x)) & all y.(Sally(y) -> -Tumpus(y)) & all z.(Sally(z) -> Dumpus(z))))", "(all x.(Sally(x) -> -Gorpus(x)) & (Sally(x) -> -Toumpus(x)) & (Sally(x) -> Dumpus(x)))", "(all x.(Sally(x) -> -Gorpus(x)) & (-Tumpus(x)) & (Understands(x) -> Dumpus(x)))", "(all x.(Sally(x) -> -Gorpus(x)) & all y.(Sally(y) -> -Tumpus(y)) & (Sally(y) -> Dumpus(y)))", "(all x.(Sally(x) -> -Gorpus(x)) & (-Tumpus(x) & -Dumps(x)))", "(all x.(Sally(x) -> -Gorpus(x)) & all y.(Sally(y) -> -Tumpus(y)) & all z.(Sally(z) -> Dumpus(z))))", "exists x.(Sally(x) & -Gorpus(x) & -Tumpus(x) & Dumpus(x))", "(All x.(Sally(x) -> -Gorpus(x)) & (-Tumpus(x) & (Dumps(x) | Ossey(x))))"]}
{"id": "prontoqa_train_1323", "nl": "Everything that is a zumpus or a dumpus or a yumpus is a numpus and a vumpus and a rompus.", "fol": "all x. ((zumpus(x) | dumpus(x) | yumpus(x)) -> (numpus(x) & vumpus(x) & rompus(x)))", "prediction": ["all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (Numpus(x) & -Volumpus(x) & -Volumpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (Anumpus(x) & Vumpus(x) & Rompus(x)))", "all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (Numpus(x) & Voompus(x) & Rompus(x)))", "all x.((Tompus(x) | Dumpus(x) | Yampus(x)) -> (Numpus(x) & Voompus(x) & Rompus(x)))", "all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (Numpus(x) & Rumpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (numpus(x) & vumpus(x) & rompus(x)))", "all x.((Himpus(x) | Dumpus(x) | Yampus(x)) -> (Pumpus(x) & Vulmpus(x) & Rompus(x)))", "all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (Cimpus(x) & Vumpus(x) & Rompus(x)))", "all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (Numpus(x) & Voompus(x) & Rompus(x)))", "all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (Lumpus(x) & Vumpus(x) & Rompus(x)))", "all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (numpus(x) & vumpus(x) & rompus(x)))", "all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (Numpus(x) & Vumpus(x) & Rompus(x)))", "all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (numpus(x) & voompus(x) & rompus(x)))", "all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (numpus(x) & -Vimpus(x) & -rompus(x)))", "all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (numpus(x) & vumbus(x) & rompus(x)))", "all x.((Tompus(x) | Dumpus(x) | Yumpus(x)) -> (Numpus(x) & Vumpus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_1324", "nl": "Everything that is a grimpus or a gorpus or a rompus is a zumpus.", "fol": "all x. ((grimpus(x) | gorpus(x) | rompus(x)) -> zumpus(x))", "prediction": ["all x.((Fragus(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.((Smaller(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.((Surpent(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.((Smaller(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.((Element(x) & (Grimpus(x) | Gorpus(x) | Rompus(x))) -> Zumpus(x))", "all x.((Crupid(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.((Grimpus(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.((Gropus(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.((Rawpus(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.((Smorp(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.(((Grampus(x) | Gorpus(x) | Rompus(x))) -> Zumpus(x))", "all x.((Grimpus(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.((Gramps(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.((Surrpus(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))", "all x.((Element(x) & (Grimpus(x) | Gorpus(x) | Rompus(x))) -> Zumpus(x))", "all x.((Rumpus(x) | Gorpus(x) | Rompus(x)) -> Zumpus(x))"]}
{"id": "prontoqa_train_1325", "nl": "Wren is a lempus, a sterpus, and a grimpus.", "fol": "(lempus(Wren) & sterpus(Wren) & grimpus(Wren))", "prediction": ["all x.(Wren(x) -> (Lempus(x) | Sterpus(x) | Grimpus(x)))", "(Lampus(wren) | Sterpus(wren) | Grimpus(wren)))", "(all x.(Wren(x) -> Lempus(x)) & ((Wren(x) & Sterpus(x)) | (Wren(x) & Grimpus(x)))))", "all x.(Wren(x) -> (Lempus(x) | Sterpus(x) | Greasypus(x)))", "all x.(Wren(x) -> (Lempus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lampus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Sterpus(x) | Grumpus(x)))", "(all x.(Wren(x) -> (Lempus(x) | Sterpus(x) | Grimpus(x))))", "exists x.(Wren(x) & Lempus(x) & Sterpus(x) & Grimpus(x))", "all x.(Wren(x) -> (Lempus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Lempus(x) | Sterosus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1326", "nl": "Everything that is a vumpus and a wumpus and a brimpus is a sterpus, a lempus, and a tumpus.", "fol": "all x. ((vumpus(x) & wumpus(x) & brimpus(x)) -> (sterpus(x) & lempus(x) & tumpus(x)))", "prediction": ["all x y z w.((Vumpus(x) & Wumpus(y) & Brimpus(z) & Terpus(w) & Lempus(x) & Tumpus(w)) -> (Sterepus(x) & Lempus(x) & Tumpus(x)))", "all x.((Vumpus(x) & Wumpus(x) & Brimpus(x)) -> (Sterpus(x) | Lempus(x) | Tumpus(x)))", "all x.((Vumpus(x) & Wumpus(x) & Brimpus(x)) -> (Sterpus(x) | Lempus(x) | Tumpus(x)))", "all x.((Vumpus(x) & Wumpus(x) & Brimpus(x)) -> (Sterepus(x) & Lempus(x) & Tumpus(x)))", "all x.(((Vumpus(x) & Ubombus(x) & Wumpus(x) & Brimpus(x)) -> (Sterepus(x) & Lempus(x) & Tumpus(x)))", "all x.((Vumpus(x) & Wumpus(x) & Brimpus(x)) -> (Sterpus(x) | Lempus(x) | Tumpus(x)))", "all x y.((Vumpus(x) & Wumpus(y) & Brimpus(x)) -> (Sterpus(x) | Lempus(x) | Tumpus(x)))", "all x.((Vumpus(x) & Wompus(x) & Brimpus(x)) -> (Sterepus(x) | Lempus(x) | Tumpus(x)))", "all x.((Vumpus(x) | Wumpus(x) | Brimpus(x)) -> (Sterpus(x) | Lempus(x) | Tumpus(x)))", "all x.((Vumpus(x) & Wumpus(x) & Brimpus(x)) -> (Sterepus(x) & Lempus(x) & Tumpus(x)))", "all x.((Vumpus(x) & Wumpus(x) & Brimpus(x)) -> (Sterpus(x) | Lempus(x) | Tumpus(x)))", "all x.((Vumpus(x) & Wumpus(x) & Brimpus(x)) -> (Sternus(x) | Lempus(x) | Tumpus(x)))", "all x.((Vumpus(x) & Wampus(x) & Brimpus(x)) -> (Sterpus(x) | Lempus(x) | Tumpus(x)))", "all x.((Vimpus(x) & Wormpus(x) & Brimpus(x)) -> (Sterpus(x) | Lempus(x) | Tumpus(x)))", "all x.((Vumpus(x) & Wumpus(x) & Brimpus(x)) -> (Stereopus(x) & Lempus(x) & Tumpus(x)))", "all x.((Vumpus(x) & Wompus(x) & Brimpus(x)) -> (Sterepus(x) & Lempus(x) & Tumpus(x)))"]}
{"id": "prontoqa_train_1327", "nl": "Sam is a brimpus.", "fol": "brimpus(Sam)", "prediction": ["all x.(Sam(x) -> Brimpus(x))", "all x.(Sam(x) -> Brimpus(x))", "all x.(Sam(x) -> Brimpus(x))", "All x.(Sam(x) -> Brimpus(x))", "all x.(Sam(x) -> Brimpus(x))", "all x.(Sam(x) -> Brumpus(x))", "all x.(Sam(x) -> Brimpus(x))", "all x.(Sam(x) -> Brimpus(x))", "all x.(Sam(x) -> Brimpus(x))", "Sam is brimpus.", "all x y.((Sam(x) & Brimpus(y)) -> Bear(x))", "all x.(Sam(x) -> Brimpus(x))", "All x.(Sam(x) -> Brimpus(x))", "all x.(Sam(x) -> Brimpus(x))", "all x.(Sam(x) -> Brimpus(x))", "all x.(Sam(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_1328", "nl": "Everything that is a lorpus or a grimpus or a jompus is a vumpus.", "fol": "all x. ((lorpus(x) | grimpus(x) | jompus(x)) -> vumpus(x))", "prediction": ["all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Grempus(x) | Jompus(x)) -> Vukpus(x))", "all x.((Lorph(x) | Grimpus(x) | Jompus(x)) -> MooseHas(x))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vaultus(x))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Voompus(x))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vampus(x))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vulubis(x))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vumpus(x))", "all x.((lorpus(x) | grimpus(x) | jompus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Grimpus(x) | Jompus(x)) -> Vumpus(x))"]}
{"id": "prontoqa_train_1329", "nl": "Rex is a jompus, an impus, and a grimpus.", "fol": "(jompus(Rex) & impus(Rex) & grimpus(Rex))", "prediction": ["(Jompus(Rex) | Issue(Rex) | Grimpus(Rex))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Impress(y) -> Grimpus(y)))", "all x.(Rex(x) -> (Jompus(x) & Issue(x) & Grimpus(x)))", "all x.(Rex(x) -> (Jompus(x) | Impossible(x) | Grypus(x)))", "all x.(Rex(x) -> (Jompus(x) & Issue(x) & Grumpy(x)))", "all x.(Rex(x) -> (Jimpus(x) | Imperium(x) | Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & (Issue(x) -> Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & (Issue(x) -> Grouchpus(x)))", "(Jompus(Rex) & Impossible(Rex) & Grimpus(Rex))", "all x.(Rex(x) -> (Hompus(x) | Imperative(x) | Grimpus(x)))", "(all x.(Rex) -> Jompus(x)) & (Issue(x) | Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & (Impos(x) -> Grouchpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Imposs(y) -> Grumpy(y)))", "all x.(Rex(x) -> (Hompus(x) & Imperator(x) & Grimpus(x)))", "all x.(Rex(x) -> (Jomes(x) | Impossible(x) | Grimpus(x)))", "all x.(Rex(x) -> (Jampus(x) | Imperative(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1330", "nl": "Everything that is a tumpus, a lempus, or a wumpus is a yumpus and a vumpus and a gorpus.", "fol": "all x. ((tumpus(x) | lempus(x) | wumpus(x)) -> (yumpus(x) & vumpus(x) & gorpus(x)))", "prediction": ["all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Pumpus(x) & Vumpus(x) & Gorpus(x)))", "all x.((Current(x) & (Tumpus(x) | Lempus(x) | Wumpus(x))) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Voompus(x) & Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Vumus(x) & Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Voompus(x) & Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wumpus(x)) -> (Yumpus(x) & Vumpus(x) & Gorpus(x)))", "all x.((Tumpus(x) | Lempus(x) | Wimpus(x)) -> (Yumpus(x) & -Vimpus(x) & -Gorpus(x)))"]}
{"id": "prontoqa_train_1331", "nl": "Wren is a wumpus.", "fol": "wumpus(Wren)", "prediction": ["all x.(Wren(x) -> Wumpus(x))", "all x.(Wren(x) -> Wumpus(x))", "all x.(Wren(x) -> Wompus(x))", "all x.(Wren(x) -> Wumpus(x))", "all x.(Wren(x) -> Wumpus(x))", "all x.(Wren(x) -> Wumpus(x))", "(Wren(Wren) & Wumpus(Wren))", "all x.(Wren(x) -> Wumpus(x))", "all x.(Wren(x) -> Wempus(x))", "all x.(Wren(x) -> Wumpus(x))", "all x.(Wren(x) -> Wumpus(x))", "all x.(Wren(x) -> Wumpus(x))", "All x.(Wren(x) -> Wumpus(x))", "all x.(Wren(x) -> Tumpus(x))", "exists x.(Wren(x) & -Wumpus(x))", "all x.(Wren(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_1332", "nl": "Each dumpus is a gorpus, a lorpus, and an impus.", "fol": "all x. (dumpus(x) -> (gorpus(x) & lorpus(x) & impus(x)))", "prediction": ["all x.(Dumpus(x) -> (Gorpus(x) & Lordpus(x) & Imperative(x)))", "all x.(Dumpus(x) -> (Gorpus(x) & Lorpus(x) & Imploss(x)))", "all x.(Dumpus(x) -> (Gorpus(x) | Lops(x) | Issue(x)))", "all x.(Dumpus(x) -> (Gorpus(x) | Lorpus(x) | Issue(x)))", "all x.(Dumpus(x) -> (Gorpus(x) | Lorpus(x) | Issue(x)))", "all x.(Dumpus(x) -> (Gorpus(x) & Lordpus(x) & Issue(x)))", "(Gorpus(dumpus) & Lopus(dumpus) & Impermissible(dumpus))", "all x.(Dupus(x) -> (Gorpus(x) | Lorpus(x) | Isolator(x)))", "all x.(Dumpus(x) -> (Gorpus(x) & Lordpus(x) & Error(x)))", "all x.(Bulletin(x) -> (Gorpus(x) & Lorompus(x) & Imperva(x)))", "all x.(Dumpus(x) -> (Gorpus(x) | Lorpus(x) | Impossible(x)))", "all x.(Dumpus(x) -> (Gorpus(x) & Lorpus(x) & Impossible(x)))", "all x.(Dumpus(x) -> (Gorpus(x) | Llorpus(x) | Implicit(x)))", "all x.(Dumpus(x) -> (Gorpus(x) | Lorpus(x) | Imperempt(x)))", "(all x.(Dumpus(x) -> Gorpus(x)) & all y.(Lorpus(y) & -Dumpus(y)) & all z.(Dumpus(z) -> Ilias(z))))", "all x.(Dumpus(x) -> (Gorpus(x) & Lorpus(x) & Imperato(x)))"]}
{"id": "prontoqa_train_1333", "nl": "Wren is a gorpus, a sterpus, or an impus.", "fol": "(gorpus(Wren) | sterpus(Wren) | impus(Wren))", "prediction": ["all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Impermant(x)))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Imply(x)))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Imperator(x)))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Implicit(x)))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Imperator(x)))", "all x.(Wren(x) ->(Gorpus(x) | Sterpus(x) | Issue(x)))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Imperium(x)))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Implicator(x)))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Imperempt(x)))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Imperator(x)))", "all x y.((Wren(x) & (Gorpus(x) | Sterpus(x) | Impossible(x))) -> Gorpus(x))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Imperative(x)))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Impiration(x)))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Imperempt(x)))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Imperator(x)))", "all x.(Wren(x) -> (Gorpus(x) | Sterpus(x) | Imperator(x)))"]}
{"id": "prontoqa_train_1334", "nl": "Everything that is a gorpus and a shumpus and a tumpus is a yumpus, a jompus, and a dumpus.", "fol": "all x. ((gorpus(x) & shumpus(x) & tumpus(x)) -> (yumpus(x) & jompus(x) & dumpus(x)))", "prediction": ["all x.((Gorpus(x) & Humpus(x) & Tumpus(x)) -> (Yumpus(x) & Jompus(x) & Dumpus(x)))", "all x.((Gorpus(x) & Humpus(x) & Tumpus(x)) -> (Yumpus(x) & Jompus(x) & Dumpus(x)))", "all x.((Gorpus(x) & Humpus(x) & Totumpus(x)) -> (Yumpus(x) | Jompus(x) | Dumpus(x)))", "all x.((Gorpus(x) & Shumpus(x) & Tumpus(x)) -> (Yumpus(x) | Jompus(x) | Dumpus(x)))", "all x.((Gorpus(x) & -Shumpus(x) & -Tumpus(x)) -> (Yumpus(x) & Jompus(x) & Dumpus(x)))", "all x.((Gorpus(x) & Shumpus(x) & Tumpus(x)) -> (Yumpus(x) & Jompus(x) & Pussum(x)))", "all x.((Gorpus(x) & Humpus(x) & Tumpus(x)) -> (Yumpus(x) & Jompus(x) & Dumpus(x)))", "all x.((Gorpus(x) & Shumpus(x) & Tumpus(x)) -> (Yumpus(x) & Jompus(x) & Dumpus(x)))", "all x.((Gorpus(x) & Humpus(x) & Tumpus(x)) -> (Yumpus(x) & Jompus(x) & Dumpus(x)))", "all x.((Gorpus(x) & Humpus(x) & Tumpus(x)) -> (Yumpus(x) | Jompus(x) | Dumpus(x)))", "all x.((Gorpus(x) & Shumpus(x) & Tumulus(x)) -> (Yumpus(x) & Jompus(x) & Dumpus(x)))", "all x.((Gorpus(x) | Shumpus(x) | Tumpus(x)) -> (Yumpus(x) & Jompus(x) & Dumpus(x)))", "all x.((Gorpus(x) & Shumpus(x) & Tumpus(x)) -> (Yumpus(x) | Jompus(x) | Dumpus(x)))", "all x.((Gorpus(x) & Humpus(x) & Tumpus(x)) -> (Yumpus(x) & Jompus(x) & Dumpus(x)))", "all x.((Gorpus(x) & Humpus(x) & Tumpus(x)) -> (Yumpus(x) & Jompus(x) & Dumpus(x)))", "all x.((Gorpus(x) & Humpus(x) & Tumpus(x)) -> (Yumpus(x) & Jompus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1335", "nl": "Sam is a tumpus.", "fol": "tumpus(Sam)", "prediction": ["all x.(Sam(x) -> Tumulus(x))", "all x.(Sammu(x) -> Tumpus(x))", "all x.(Tumpus(x) -> Sam(x))", "((Sam) & Tumpus(Sam)))", "(Tumpus(Sam) | Tumpus(Sam))", "exists x.(Tompus(x) & Sam(x))", "all x.(Tumpus(x) -> Sam(x))", "all x.(Tumpus(x) -> Sam(x))", "(Tumpus(Sam) & HasTump(Sam))", "all x.(Sam(x) -> Tumpus(x))", "Sam is an AnimatedTumpus(Sam)", "all x.(Sam(x) -> Tumpus(x))", "all x.(Sam(x) -> Tumor(x))", "all x.(Tumpus(x) -> Sam(x))", "all x.(Sam(x) -> Tumpus(x))", "all x.(Tumpus(x) -> Sam(x))"]}
{"id": "prontoqa_train_1336", "nl": "Everything that is a yumpus, a gorpus, or a tumpus is a dumpus.", "fol": "all x. ((yumpus(x) | gorpus(x) | tumpus(x)) -> dumpus(x))", "prediction": ["all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.((Yumpus(x) | Grups(x) | Tumpus(x)) -> Dumpus(x))", "all x.((ListensToYumpus(x) | ListensToGorpus(x) | ListensToTumpus(x)) -> Dumpus(x))", "all x.((Whaling(x) | (Whaling(x) | Wolverine(x)))) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.((Function(x) & (Yumpus(x) | Gorpus(x) | Tumpus(x))) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))", "all x.((Yumpus(x) | Gorpus(x) | Tumpus(x)) -> Dumpus(x))"]}
{"id": "prontoqa_train_1337", "nl": "Fae is a lempus and Fae is a rompus and Fae is not a dumpus.", "fol": "(lempus(Fae) & rompus(Fae) & -dumpus(Fae))", "prediction": ["(all x y z.(Fae(x) -> Lempus(x)) & (Fae(y) -> Rompus(y)) & (Fae(z) -> -Dumpus(z))))", "all x y.((Lempus(x) & Rompus(y)) -> (Lampus(x) | rompus(y) & -Dumpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Rompus(y)) & all z.(Fae(z) -> -Dumpus(z))))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Rompus(x)) & -Fae(x)))", "(all x y.((Fan(x) & Lempus(x)) -> Lemur(x)) & ((Fan(y) & Rompus(y)) -> Dumpus(y)))", "(all x y.(Fae(x) -> Lempus(x)) & (Fae(y) -> Rompus(y)) & (Fae(y) -> -Dumps(y))))", "all x y z.((Fae(x) & Lempus(x) & Roman(y) & Dumps(z)) -> (Lempus(x) & Rompus(y) & -Dumpus(z)))", "all x y z.((Fae(x) & Lempus(x) & Rompus(y) & -Dumpus(z)) -> (Lempus(x) | Rompus(y) & -Dumpus(z)))", "all x y z.((Fae(x) & Lempus(x) & Rompus(y) & Rumus(z)) -> (Limpus(x) & Rupus(y) & -Dumpus(z)))", "all x y z.((Fae(x) & Lempus(y) & Rompus(z)) -> (Lampus(x) & Rompus(x) & -Dumpus(x)))", "is): (Lempus(Fae) | Rompus(Fae)) & -Dumpus(Fae))", "(all x y z.(Fae(x) -> Lempus(x)) & (Fae(y) -> Rompus(y)) & (Fae(z) -> -Dumpus(z))))", "all x y z.((Fae(x) & Lempus(x) & Rompus(y) & Dumpus(z)) -> (Lempus(x) & Rompus(y) & -Dumpus(z)))", "all x y.((Fae(x) & Lempus(x) & Rompus(y) & -Dumpus(x)) -> (Lempus(x) & Rompus(y) & -Dumpus(y)))", "all x y.((Fae(x) & Lempus(x) & Rompus(y)) -> (-Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Rompus(y)) & all z.(Fae(z) -> -Dumpus(z))))"]}
{"id": "prontoqa_train_1338", "nl": "Every gorpus is a zumpus, a lempus, and a rompus.", "fol": "all x. (gorpus(x) -> (zumpus(x) & lempus(x) & rompus(x)))", "prediction": ["all x.(Gorpus(x) -> (Tompus(x) | Lempus(x) | Rompus(x)))", "all x.(Gorpus(x) -> (Zoompus(x) | Lempus(x) | Rompus(x)))", "all x.(Gorpus(x) -> (Tumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Gorpus(x) -> (Tompus(x) | Lempus(x) | Rompus(x)))", "all x.(Gorpus(x) -> (Tompus(x) & Lempus(x) & Rompus(x)))", "all x.(Gorpus(x) -> (AimsTompus(x) | AimsLempus(x) | AimsRompus(x)))", "all x.(Gorpus(x) -> (Tommus(x) & Lempus(x) & Rompus(x)))", "(all x.(Gorpus(x) -> Zumpus(x)) & all y.(Lempus(y) & WholePose(y))) & all z.(Rompus(w) -> Rompus(x)))", "all x.(Gorpus(x) -> (Zumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Gorpus(x) -> (Tompus(x) & Lempus(x) & Rompus(x)))", "all x.(Gorpus(x) -> (Tompus(x) | Lempus(x) | Rompus(x)))", "exists x.(Gorpus(x) & Tompus(x) & Lempus(x) & Rompus(x))", "all x.(Gorpus(x) -> (Zumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Gorpus(x) -> (Zumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Gorpus(x) -> (Tommu(x) | Lempus(x) | Rompus(x)))", "all x.(Gorpus(x) -> (Azumpus(x) & Lempus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_1339", "nl": "Rex is a gorpus.", "fol": "gorpus(Rex)", "prediction": ["(Gorpus(Rex))", "exists x.(Rex(x) & Gorpus(x))", "is Gorpus (Gopher(Rex) & HasElevatedHead(Rex))", "All x.(Rex(x) -> Gorpus(x))", "All x.(Rex(x) -> Gorpus(x))", "all x.(Rex(x) -> Gorpus(x))", "Rex.", "all x.(Rex(x) -> Gorpus(x))", "all x.(Rex(x) -> Gorpus(x))", "all x.(Rex(x) -> Gorpus(x))", "all x.(Rex(x) -> Gorpus(x))", "Rex (Gorpus(x) -> Gorpa(x))", "Rex is a Gorpus.", "all x.(Rex(x) -> Gorpus(x))", "Rex is Gorpus.", "All x.(Rex(x) -> Gorpheus(x))"]}
{"id": "prontoqa_train_1340", "nl": "Rex is a jompus or a shumpus or a rompus.", "fol": "(jompus(Rex) | shumpus(Rex) | rompus(Rex))", "prediction": ["all x.(Rex(x) -> (Jompus(x) | Shumpus(x) | Rompus(x)))", "all x.(Rex(x) -> (Jimpus(x) | Shumpus(x) | Rompus(x)))", "((Jompus(rex) | Humpus(rex)) | Rompus(rex)))", "all x.(Rex(x) -> (Jumpus(x) | Humpus(x) | Rompus(x)))", "all x.(Rex(x) -> (Jompus(x) | Humpus(x) | Rompus(x)))", "all x.(Rex(x) -> (Jompus(x) | Humpus(x) | Rompus(x)))", "all x.(Rex(x) -> (Jompus(x) | Humpus(x) | Rompus(x)))", "all x.(Rex(x) -> (Jimpus(x) | Humpus(x) | Rompus(x)))", "all x.(Rex(x) -> (Jompus(x) | Humpus(x) | Rompus(x)))", "all x.(Rex(x) -> (Jimpus(x) | Humpus(x) | Rompus(x)))", "all x.(Rex(x) -> (Jompus(x) | Humpus(x) | Rompus(x)))", "all x.(Rex(x) -> (Jompus(x) | Humpus(x) | Rompus(x)))", "all x.(Rex(x) -> (Jimpus(x) | Shumpus(x) | Rompus(x)))", "all x.(Rex(x) -> (Jompus(x) | Sampus(x) | Rompus(x)))", "all x.(Rex(x) -> (Jompus(x) | Humpus(x) | Rompus(x)))", "all x.(Rex(x) -> (Jompus(x) | Shumpus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1341", "nl": "Everything that is a zumpus or a brimpus or a rompus is a wumpus, a numpus, and a sterpus.", "fol": "all x. ((zumpus(x) | brimpus(x) | rompus(x)) -> (wumpus(x) & numpus(x) & sterpus(x)))", "prediction": ["all x.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) & Numpus(x) & Sterpus(x)))", "all x.((Tompus(x) | Brimpus(x) | Romanpus(x)) -> (Wumpus(x) & Numpus(x) & Sterpus(x)))", "all x.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) & Numpus(x) & Sterpus(x)))", "all x.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) & Numpus(x) & Sterpus(x)))", "all x.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) & Numpus(x) & Sterpus(x)))", "all x.((Tompus(x) | Brimpus(x) | Rompus(x)) -> ((Wumpus(x) & Numpus(x) & Sterpus(x))))", "all x.((Himpus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) | Numpus(x) | Sterpus(x)))", "all x.((Zumpus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) & Numpus(x) & Sterpus(x)))", "all x.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) & Numpus(x) & Sterpus(x)))", "all x.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) & Numpus(x) & Sterpus(x)))", "all x.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) & Numpus(x) & Steroid(x)))", "all x.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) | Nompus(x) | Sterpus(x)))", "all x.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) & Numpus(x) & Sterpus(x)))", "all x.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) & Numpus(x) & Sterpus(x)))", "all x.((Zumpus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) | Numpus(x) | Sterpus(x)))", "all x.((Tompus(x) | Brimpus(x) | Rompus(x)) -> (Wumpus(x) & Numpus(x) & Sterpus(x)))"]}
{"id": "prontoqa_train_1342", "nl": "Sterpuses are tumpuses and jompuses and brimpuses.", "fol": "all x. (sterpus(x) -> (tumpus(x) & jompus(x) & brimpus(x)))", "prediction": ["all x.(Sterpuse(x) -> (TumpusEggs(x) | JompusEggs(x) | BrimpusEggs(x)))", "all x.(Sterpuse(x) -> (Tumpus(x) & Jompuse(x) & Brimpuse(x)))", "(all x.(Sterpuse(x) -> Tumpus(x)) & all y.(Jompuse(y) | Brimpuse(y))))", "all x.(Sterpus(x) -> (Tumpus(x) & Jompuse(x) & Brimpus(x)))", "all x.(Student(x) -> (Tumpus(x) & Jompuse(x) & Brimpuse(x)))", "all x.(StrerpusEcho(x) -> (TumpusEcho(x) | Jompuse(x) | Brimpuse(x)))", "all x.(Sterpus(x) -> (Tumpus(x) & (Jompuse(x) | Brimpuse(x))))", "all x.(Stuerpus(x) -> (Tumpus(x) | Jompuse(x) | Brimpuse(x)))", "all x.((Sterpuse(x) & Tumpus(x)) -> (Jumpsus(x) & Brimpuses(x)))", "all x.(Sterpuses(x) -> (Tumpuses(x) & Jompuses(x) & Brimpuses(x)))", "all x.(Sterpus(x) -> (Tumpus(x) & Jompuses(x) & Brimpuses(x)))", "all x.(Sterpus(x) -> (Tumpus(x) & Jompuse(x) & Brimpus(x)))", "all x.(Sterpus(x) -> (Tumpus(x) | Jompuse(x) | Brimpuse(x)))", "all x.(Sterpus(x) -> (Tumpus(x) | Jompuse(x) | Brimpuse(x)))", "all x.(Sterpus(x) -> (Tumpus(x) & Jompuse(x) & Brimpuse(x)))", "all x.(Sterpus(x) -> (Tumpus(x) & Jompuse(x) & Brimpuse(x)))"]}
{"id": "prontoqa_train_1343", "nl": "Stella is a sterpus.", "fol": "sterpus(Stella)", "prediction": ["Stella is a Sterpus.", "all x.(Stella(x) -> Sterpus(x))", "Stella.", "Stella is a Sterpus(l)", "all x.(Stella(x) -> Sterpus(x))", "Stella - Sterpus(Stella)", "Stella is a Sterpus.", "Stella is a Sterpus.", "Stella is Sterpus.", "all x.(Stella(x) -> Sterpus(x))", "all x.(Stella(x) -> Sterpus(x))", "Stella is sterpus.", "Stella is sterpus.", "Stella is a sterpus.", "Stella (Sterpus)", "Stella is Sterpus."]}
{"id": "prontoqa_train_1344", "nl": "Stella is a vumpus or a zumpus or a tumpus.", "fol": "(vumpus(Stella) | zumpus(Stella) | tumpus(Stella))", "prediction": ["all x.(Stella(x) -> (Vumpus(x) | Zumpus(x) | Tumpus(x)))", "exists x.(Vumpus(x) | Zumpus(x) | Tumpus(x))", "all x.(Astella(x) -> (Vumpus(x) | Zumpus(x) | Tumpus(x)))", "all x.(Stella(x) -> ((Vimpus(x) | Zumpus(x) | Tumpus(x))))", "all x.(Stella(x) -> (Vumpus(x) | Zumpus(x) | Tumpus(x)))", "all x.(Stella(x) -> ((Vampus(x) | Zumpus(x) | Tumpus(x))))", "all x.(Shelle(x) -> (Vumpus(x) | Zumpus(x) | Tumpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Zumpus(x) | Tumpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Zumpus(x) | Tumpus(x)))", "all x.(Stella(x) -> (Vampus(x) | Zumpus(x) | Tumulus(x)))", "all x.(Stella(x) -> (Vimpus(x) | Zumpus(x) | Tumpus(x)))", "(Vumpus(Stella) | Zumpus(Stella) | Tumpus(Stella)))", "all x.(Stella(x) -> (Vumpus(x) | Zumpus(x) | Tumpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Zumpus(x) | Tumpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Zumpus(x) | Tumpus(x)))", "all x.(Stella(x) -> (Vampus(x) | Zumpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1345", "nl": "Everything that is a grimpus, a gorpus, and a yumpus is a zumpus, a numpus, and a rompus.", "fol": "all x. ((grimpus(x) & gorpus(x) & yumpus(x)) -> (zumpus(x) & numpus(x) & rompus(x)))", "prediction": ["all x.((Rampus(x) | Worpus(x) | Yampus(x)) -> (Tompus(x) | Numpus(x) | Rompus(x)))", "all x.((Crupid(x) | Gorpus(x) | Yuumpus(x)) -> (Tzumpus(x) | Numpus(x) | Rompus(x)))", "all x.((Splore(x) | Gorpus(x) | Yuumpus(x)) -> (Tompus(x) | Numpus(x) | Rompus(x)))", "all x.((Cramp(x) | Gorpus(x) | Yangpus(x)) -> (Tompus(x) & Numpus(x) & Rompus(x)))", "all x.((Crupid(x) | GORpus(x) | Yampus(x)) -> (Tompus(x) | Numpus(x) | Rompus(x)))", "all x.((Grumps(x) | Gorpus(x) | Yumpus(x)) -> (Tompus(x) | Numpus(x) | Rompus(x)))", "all x.((Fragpus(x) & Worpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Rompus(x)))", "all x.((Smoothpus,Computer(x) | Gorpus,Computer(x) | Yampus(x)) -> (Tompus(x) | Numpus(x) | Rompus(x)))", "all x.((Grampus(x) & Gorpus(x) & Yumpus(x)) -> (Tompus(x) & Numpus(x) & Rompus(x)))", "all x.((Crutpus(x) & Gorpus(x) & Yukon(x)) -> (Tompus(x) | Numpus(x) | Rompus(x)))", "all x.((Rumpus(x) & Gorpus(x) & Yumpus(x)) -> (Tompus(x) & Numpus(x) & Rompus(x)))", "all x.((Grampus(x) | Gorpus(x) | Yumpus(x)) -> (Zumpus(x) & Numpus(x) & Rompus(x)))", "all x.((Murph(x) | Gorpus(x) | Yumpus(x)) -> (Tompus(x) & Numpus(x) & Rompus(x)))", "all x.((Grurpus(x) | Gorpus(x) | Yumpus(x)) -> (Zumpus(x) | Numpus(x) | Rompus(x)))", "all x.((Rimpus(x) | Gorpus(x) | Yumpus(x)) -> (Tompus(x) | Numpus(x) | Rompus(x)))", "all x.((Cracked(x) & Gorpus(x) & Yumpus(x)) -> (Toumpus(x) & Numpus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_1346", "nl": "Wren is a grimpus.", "fol": "grimpus(Wren)", "prediction": ["all x.(Wren(x) -> Grumpus(x))", "all x.(Wren(x) -> Grapple(x))", "all x.(Wren(x) -> Grimpus(x))", "all x.(Wren(x) -> Grimpus(x))", "(Grimpus(Wren) & Grapppus(Wren))", "all x.(Wren(x) -> Grimpus(x))", "all x.(Wren(x) -> Grimpus(x))", "all x.(Wren(x) -> Gruffus(x))", "all x.(Wren(x) -> Grimpus(x))", "all x.(Wren(x) -> Gruffus(x))", "all x.(Wren(x) -> Grypus(x))", "all x.(Wren(x) -> Grappus(x))", "(Crampus(Wren) & Grimpus(w))", "(Grippus(Wren))", "All x.(Wren(x) -> Grimpus(x))", "all x.(Wren(x) -> Grimpus(x))"]}
{"id": "prontoqa_train_1347", "nl": "Every wumpus is not a brimpus.", "fol": "all x. (wumpus(x) -> -brimpus(x))", "prediction": ["all x.(Wumpus(x) -> -Brimpus(x))", "all x.(Wumpus(x) -> -Brimpus(x))", "all x.(Wumpus(x) -> -Brimpus(x))", "all x.(Wumpus(x) & -Brimpus(x))", "all x.(Wumpus(x) -> -Brumpus(x))", "all x.(Wumpus(x) -> -Brimpus(x))", "all x.(Wumpus(x) -> -Brimpus(x))", "all x.(Wumpus(x) -> -Brimpus(x))", "all x.(Wumpus(x) -> -Bribpus(x))", "all x.(Wumpus(x) -> -Brimpus(x))", "all x.(Wumpus(x) -> -Brimpus(x))", "all x.(Wumpus(x) -> -Brimpus(x))", "all x.(Wumpus(x) -> -Brimpus(x))", "all x.(Wumpus(x) -> -Brimpus(x))", "all x.(Wumpus(x) -> -Brimpus(x))", "(-Brumpus(wumpus))"]}
{"id": "prontoqa_train_1348", "nl": "Fae is a numpus, Fae is not a yumpus, or Fae is a shumpus.", "fol": "(numpus(Fae) | -yumpus(Fae) | shumpus(Fae))", "prediction": ["all x y.((Fae(x) & -Yumpus(y) & (-Fae(x) | -Shumpus(x))) -> Numpus(x))", "exists x.(Fae(x) & ((Numpus(x) | -Yumpus(x)) | Humpus(x)))", "(all x.(Fae(x) -> Numpus(x)) | (-Yumpus(x) | Humpus(x))))", "all x y z.((Fae(x) & Yumpus(y) & (LimitedTo(x,y) | Bulb(y))) -> Numpos(x))", "all x y.((Fae(x) & (Numpus(x) | -Yumpus(x) | Humpus(y))) -> Numpus(x))", "all x.(Fae(x) -> (Numpus(x) | -Yumpus(x) | Shumpus(x)))", "(all x.(Fae(x) -> Numpus(x)) & -Yumpus(x)) & (Fae(x) -> Shumpus(x)))", "(all x.(Fae(x) -> Native(x)) | (-Fae(x) & Yumpsum(x))) | (-Fae(x) & Simpsum(x))))", "(all x.(Fae(x) -> Numpus(x)) | (-Yumpus(x) | Shumpus(x))))", "(all x.(Fae(x) -> Numpus(x)) | (-Yumpus(x) | Humpus(x))))", "all x.(Fae(x) -> (Numpus(x) | -Yumpus(x) | Humpus(x)))", "all x.((Fae(x) & -Yumpus(x)) | (-Fae(x)) & Shumpus(x)))", "all x.((Fae(x) & (Numpus(x) | -Yumpus(x))). (-Yumpus(x) | Humpus(x)))", "(all x y.(Fae(x) -> Numpus(x)) & (-Fae(yumpus) | Scumpus(y))))", "(all x.(Fae(x) -> Numpus(x)) & (fae(x) -> -Yumpus(x)) | (fae(x) -> Shumpus(x))))", "(all x.(Fae(x) -> Numpus(x)) | (-Fae(x) & Yampus(x)) | (-Fae(x) & Sahumpus(x))))"]}
{"id": "prontoqa_train_1349", "nl": "Everything that is a grimpus or a yumpus or a tumpus is an impus.", "fol": "all x. ((grimpus(x) | yumpus(x) | tumpus(x)) -> impus(x))", "prediction": ["all x.((Grampus(x) | Yumpus(x) | Tumpus(x)) -> Impeccable(x))", "all x.((Smaller(x) | Yukon(x) | Tumpus(x))) -> Imputer(x))", "all x.((Smarchpus(x) | Yompus(x) | Tumpus(x)) -> Impermissible(x))", "all x.((Grosspus(x) | Yumpus(x) | Tumpus(x)) -> Implips(x))", "all x.((Smirnor(x) | Yorkus(x) | Tumpus(x)) -> Imperator(x))", "all x.((Smoothpus(x) | Yampus(x) | Tumpus(x)) -> Imperator(x))", "all x.((Strawpus(x) | Yumppus(x) | Tumpus(x)) -> IsVerteuto(x))", "all x.((Smoothpus(x) | Yampus(x) | Tumpus(x)) -> Impossible(x))", "all x.(((Grimpus(x) | Yumpus(x) | Tumpus(x))) -> Impuns(x))", "all x.((Grimpus(x) | Yumpus(x) | Tumpus(x)) -> Implicator(x))", "all x.((Smallpus(x) | Yumpus(x) | Tumpus(x)) -> Imperative(x))", "all x.(((Smoothpus(x) | Yumpus(x) | Tumpus(x))) -> IsEruption(x))", "all x.((Smoothpus(x) | Yumpus(x) | Tumpus(x)) -> Is(x))", "all x.((Pumpus(x) | Yumpus(x) | Tumpus(x)) -> Escarpment(x))", "all x.((Grumps(x) | Yumpus(x) | Tumpus(x)) -> Impermissible(x))", "all x.((Gruppus(x) | Yampus(x) | Tumpus(x)) -> impus(x))"]}
{"id": "prontoqa_train_1350", "nl": "Stella is a dumpus and Stella is not an impus and Stella is a lorpus.", "fol": "(dumpus(Stella) & -impus(Stella) & lorpus(Stella))", "prediction": ["all x y z.((Stella(x) & Dumpus(x) & Stella(y) & -Impera (y)) & Lorpus(z)) -> (Are(y,x) & Ae(z,y)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Impossible(x)) & (Stella(x) -> Lorpus(x)))", "all x y.((Dempus(x) & Dumpus(y)) -> (-Imposer(y) & -Lorpus(y)))", "all x.((Stella(x) & Dumpus(x)) -> (-IsExplosionist(x) & -IsLorpus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Impossible(x)) & (Stella(x) -> Lorpus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> -Impossible(y))) & all z.(Stella(z) -> Lorpus(z)))", "(all x.(Stella(x) -> Dumpus(x)) & (NoIssue(x) & -Issue(x)) | (Lorpus(x) & -Issue(x))))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Immersion(x)) & (Stella(x) -> Lorpus(x)))", "(all x y.((Stella(x) & Dumpus(y) & -Issorte(y)) & ((Stella(x) & Lorpus(x))) -> -Dumpus(x)) & ((Stella(x) & Issorte(x)) -> Lorpus(x)))", "(all x y.((Stella(x) & Dumpus(x)) -> -Impossible(y)) & ((Stella(x) & Lorpus(y)) -> -Lorpus(y)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Ilimination(x))) & (Stella(x) -> Lorpus(x)))", "All x y z.((Stella(x) & Dumpus(x) & Stella(y) & -Impossible(y) & -Lorpus(z)) -> (Dumus(x) & Lorpus(y)))", "(all x y.((Stella(x) & Dumpus(x)) -> -Issue(y)) & ((Stella(x) & Lirpus(x))) -> Lompus(y)))", "(all x.(Shuttle(x) -> (Dumpus(x))) & all y.(Dupus(y) -> -Impossible(y))) & all z.(Lorpus(z) -> -Dumpus(z))))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Immis(x)) & (Stella(x) -> Lorpus(x)))", "all x y z.((Stella(x) & Dumpus(y) & Is(z)) -> (-Impossible(x) & Laceus(y)))"]}
{"id": "prontoqa_train_1351", "nl": "Gorpuses are lorpuses and jompuses and brimpuses.", "fol": "all x. (gorpus(x) -> (lorpus(x) & jompus(x) & brimpus(x)))", "prediction": ["(all x.(Geropuse(x) -> Llorpes(x)) & all y.(Jompuse(y) | Brimpus(y))))", "all x.(Gorpuse(x) -> (Lorpus(x) & Jompus(x) & Brimpuse(x)))", "all x y.((Gorpuse(x) & Lorpus(y)) -> (Lumpus(x) | Jompuse(y) | Brimbus(y)))", "all x.(Gorpus(x) -> (Lorpus(x) & Jompuse(x) & Brimpuse(x)))", "all x.(Gorpus(x) -> (Lorpus(x) & Jompuse(x) & Brimpuse(x)))", "all x.(Gorpus(x) -> (Lorpus(x) & Jompuse(x) & Brimpuse(x)))", "(all x.(Gorpuse(x) -> Lordess(x)) & (Jimbus(x) | Brimbus(x)))", "all x y.((Gorpuse(x) & Lord(y)) -> (Jompuse(x) | Brimpus(x)))", "all x.(Gorpus(x) -> (Lorpedo(x) & Jompuse(x) & Brimpuse(x)))", "all x.(Gorpuse(x) -> (LorpusElevate(x) | (Jomuse(x) | Brimpus(x))))", "all x.(Gorpuse(x) -> (Lorpes(x) & Jompuses(x) & Brimpuses(x)))", "all x y.(Has(x,y) -> (Lorpuse(x) | Jombuse(x) | Brimpus(x)))", "all x.(Gorpus(x) -> (Lorpus(x) & Jompuse(x) & Brimpus(x)))", "all x.(Gorpus(x) -> (Lorpus(x) & Jompuse(x) & Brimpuse(x)))", "all x.(Gorpus(x) -> (Lorpus(x) & Jompuse(x) & Brimpus(x)))", "all x.(Gorpus(x) -> (Rosense(x) | Jompuse(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_1352", "nl": "Polly is a gorpus.", "fol": "gorpus(Polly)", "prediction": ["all x.(Polly(x) -> Gorpus(x))", "Polly is Gorpus.", "(Gorpus(Polly) & HasGenesis(Polly))", "Polly is a Gorpus.", "all x.(Gorpus(x) -> Polly(x))", "all x.(Polly(x) -> Gorpus(x))", "all x.(Polly(x) -> Gorpus(x))", "AllegoricGermanus(Polly)", "all x.(Consumer(x) -> Gorpus(x))", "Polly is a gorpus.", "All x.(Polly(x) -> Gorpus(x))", "all x.(Gorpus(x) -> Polly(x))", "all x.(Polly(x) -> Gorpus(x))", "all x.(Polly(x) -> Gorpus(x))", "All x.(Polly(x) -> Gorpus(x))", "all x.(Polly(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_1353", "nl": "Polly is a dumpus or a tumpus or a jompus.", "fol": "(dumpus(Polly) | tumpus(Polly) | jompus(Polly))", "prediction": ["(Polly(Polly) & (Dumpus(Polly) | Tumpus(polly) | Jompus(polly)))", "all x.(Polly(x) -> (Dumpus(x) | Tumpus(x) | Jompus(x)))", "all x.(Polly(x) -> (Dupus(x) | Tumulus(x) | Jompus(x)))", "all x.(Poly(x) -> (Dumus(x) | Tumpus(x) | Jompus(x)))", "all x y z.((Polly(x) & Dumpus(y) & (Tumpus(z) | Jompus(z))) -> (Simple(x) | Simple(x)))", "all x.(Polly(x) x.(Dumpus(x) | Tumpus(x) | Jompus(x)))", "(All x.(Polly(x) -> Dumpus(x)) | (Tumpus(x) | Jompus(x))))", "all x.(Polly(x) -> (Dumpus(x) | Tumpus(x) | Jompus(x)))", "(exists x.(Polly(x) & (Dumps(x) | Tumpus(x) | Jompus(x))))", "all x.(Polly(x) -> (Dumps(x) | Tumpus(x) | Jompus(x)))", "all x.(Poly(x) -> (Dumpus(x) | Tumpus(x) | Jompus(x)))", "all x y.((Polly(x) & (Dumps(x) | Tumpus(x) | Jompus(x))) -> Polly(x))", "all x.(Poody(x) -> (Dumpus(x) | Tumpus(x) | Jompus(x)))", "all x.(Polly(x) -> (Dumus(x) | Teempus(x) | Jompus(x)))", "(Supreme(Polly) | (Tumpus(Polly) | Jompus(Polly))))", "all x.(Polly(x) -> (Dumpus(x) | Tumpus(x) | Jompus(x)))"]}
{"id": "prontoqa_train_1354", "nl": "Zumpuses are dumpuses, wumpuses, and impuses.", "fol": "all x. (zumpus(x) -> (dumpus(x) & wumpus(x) & impus(x)))", "prediction": ["all x.(Zumpuse(x) -> (Dumpsus(x) | Wumpus(x) | Injections(x)))", "all x.(Zombus(x) -> (Dumpuse(x) | Wumpuse(x) | Issue(x)))", "all x.(Zumpuse(x) -> (Dumps(x) & Wumpus(x) & Imperise(x)))", "(Dumpuses(d) | Wumpuses(w) | Imperoses(c)))", "all x.(Zumpus(x) -> (Dumpuse(x) | Wumpus(x) | Impecte(x)))", "all x.(Zimpus(x) -> (Dumuse(x) | Wumpus(x) | Imperempte(x)))", "all x.(Zumpus(x) -> (Dumuse(x) | Wumpus(x) | Impereze(x)))", "all x.(Zumpus(x) -> (Dumpuse(x) | Wumpuse(x) | Impecile(x)))", "all x.(Zumbus(x) -> (Dumpuse(x) | Wumpuse(x) | Issue(x)))", "all x.(Zumpus(x) -> (Tumpus(x) | Wumpus(x) | Issue(x)))", "(Luxus(z) | Dumpuse(w) | Impossible(z)))", "all x.(Zumpus(x) -> (Dumpuse(x) | Wumpuse(x) | Imperium(x)))", "all x.(Zumpuse(x) -> (Dumpsuse(x) | Wumpuse(x) | Impossible(x)))", "all x.(Zumpus(x) -> (Dumpus(x) | Wumpus(x) | Imperme(x)))", "all x.(Zumpuse(x) -> (Dumpsuse(x) | Wumpe(x) | Impiset(x)))", "all x.(Zumpus(x) -> (Dumps(x) | Wumpus(x) | Issues(x)))"]}
{"id": "prontoqa_train_1355", "nl": "Stella is not a wumpus, Stella is a tumpus, and Stella is a numpus.", "fol": "(-wumpus(Stella) & tumpus(Stella) & numpus(Stella))", "prediction": ["all x y z.((Stella(x) & Wumpus(y) & Tumpus(z)) -> (-Wumpus(x) & Tambo(y) & Numpus(z)))", "(all x.(Stella(x) -> (-Wumpus(x))) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Numpus(x))))", "all x y z.((Stella(x) & Wanda(y) & Tomu(z)) -> (-Wumpus(x) | (Tumpus(y) & Numpus(z)))))", "(all x.(Stella(x) -> -Wumpus(x)) & all y.(Stella(y) -> Tumpus(y))) & all z.(Stella(z) -> Numpus(z)))", "(all x.(Wumpus(x) -> -Wumpus(x)) & (Tumpus(x) -> Tumpus(x)) & (Numpus(x) -> Numpus(x)))", "all x y z.((Stella(x) & Wimpy(y) & Tumpus(z)) -> (-Wimpus(x) & Tumpus(y) & Numpus(z)))", "(all x.(Shoes(x) -> -Wumpus(x)) & all y.(Shoes(y) -> Tumpus(y)) & all z.(Shoes(z) -> Numpus(z))))", "all x y z.((Wumpus(x) & Toppus(y) & Numpus(z)) -> () -Wumpus(x) & Tumpus(y) & Numpus(z)))", "(all x.(Mompus(x) -> -Wumpus(x)) & all y.(Mompus(y) -> Tumpus(y)) & all z.(Mompus(z) -> Numpus(z)))", "(-Wumpus(Stella) & Tumpus(Stella) & Numpus(Stella))", "all x y z.((Stella(x) & Wumpus(y) & Tumpus(z)) -> (-Wumpus(x) & Totumpus(x) & Numpus(x)))", "(all x.(Wumpus(x) -> -Wumpus(x)) & all y.(Tumpus(y) -> -Wumpus(y))) & all z.(Numpus(z) -> (Numpus(z))))", "(all x.(Stella(x) -> -Wumpus(x)) & (Tumpus(x) | Nautilus(x)))", "(all x.(Stella(x) -> -Wumpus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Numpus(x)))", "all x y z.((Wumpus(x) & Tumpus(y) & Numpus(z)) -> (-Wumpus(x) & -Tumpus(y) & -Numpus(z)))", "(all x.((Wumpus(x) & -Wumpus(x)) -> Tompus(x)) & all y.((Wumpus(y) & Numpus(y)) -> (Wumpus(y) & Numpus(y))))"]}
{"id": "prontoqa_train_1356", "nl": "Stella is not a zumpus.", "fol": "-zumpus(Stella)", "prediction": ["Stella is not a zumpus(s)", "Stella ist nicht zumpus(s)", "Stella is not a Zumpus(Stella)", "all x.(Stella(x) -> -Zumpus(x))", "Stella - Zumpus(Stilla)", "Stella is not a zumpus.", "Stella -Zumpus(Stella))", "all x.(Stella(x) -> -Zumpus(x))", "exists x.(Stella(x) & -Zumpus(x))", "(-Zumpus(z) & Stella(s) & -Zumpus(s))", "Stella (nee zumpus(z))", "Stella is -Azurpus(Stella)", "Stella in no way zusmues(Stella)).", "(-Zumpus(Zota))", "all x.(Stella(x) -> -Tompus(x))", "Stella is not Zumpus."]}
{"id": "prontoqa_train_1357", "nl": "Everything that is a dumpus, an impus, and a vumpus is a shumpus, a lorpus, and a gorpus.", "fol": "all x. ((dumpus(x) & impus(x) & vumpus(x)) -> (shumpus(x) & lorpus(x) & gorpus(x)))", "prediction": ["all x y z.((Dumpus(x) & Imperium(y) & Vumpus(z) & Imperium(y) & Shumpus(y) & Lorpus(z) & Gorpus(z)) -> (Shumpus(y) & Dorpus(z)))", "all x.((Dumpus(x) & Imperempt(x) & Vumpus(x)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))", "all x.((Dumpus(x) | Imperative(x) | Vumpus(x)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))", "all x.((Dumps(x) | Imperium(x) | Volume(x)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))", "all x.((Dumpus(x) | Imperempt(x) | Vumpus(x)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))", "all x.((Dumpus(x) & Impossible(x) & Vumpus(x)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))", "all x.((Dumpus(x) | Impossible(x) | Vampus(x)) -> (Shumpus(x) | Lorpus(x) | Gorpus(x)))", "all x.((Dupus(x) | Imperator(x) | Vumpus(x)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))", "all x.((Dumpus(x) | Imperator(x) | Vumpus(x)) -> (Shumpus(x) | Lordpus(x) | Gorpus(x)))", "all x.((Dumus(x) & Impeccable(x) & Vampus(x)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))", "all x.((Dumpus(x) & Imperman(x) & Voompus(x)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))", "all x.((Dumpus(x) & IsImpossible(x) & Vumpus(x)) -> (Shumpus(x) & -Lorpus(x) & -Gorpus(x)))", "all x.((Dumpus(x) | Imperempt(x) | Vumpus(x)) -> (Shumpus(x) | Lorpus(x) | Gorpus(x)))", "all x.((Dumps(x) | IsDome(x) | IsIsNotDome(x) | IsVumpus(x)) -> (Shumpus(x) & lorpus(x) & Gorpus(x)))", "all x.((Dumpus(x) & Imperative(x) & Vumpus(x)) -> (Shumpus(x) & Lorpus(x) & Gorpus(x)))", "all x.((Dumpus(x) | Imperempt(x) | Vumpus(x)) -> (Shumpus(x) | Lorpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1358", "nl": "Every grimpus is an impus, a gorpus, and a vumpus.", "fol": "all x. (grimpus(x) -> (impus(x) & gorpus(x) & vumpus(x)))", "prediction": ["all x.((Smuggling(x) & Impossible(x)) | (Gorpus(x) & Vumpus(x))))", "all x.(Grimpus(x) -> (IssueShower(x) | IssueShower(x) | IssueShower(x)))", "all x.(Fruit(x) -> (Impossible(x) & Gorpus(x) & Vumpus(x)))", "all x.(Grimpus(x) -> (Impossible(x) & Gorpus(x) & Vumpus(x)))", "all x.(Grimpus(x) -> (Issue(x) & IsGorpus(x) & IsVumpus(x)))", "all x.(Grimpus(x) -> (Impossible(x) | Gorpus(x) | Vumpus(x)))", "all x.(Grimpus(x) -> (Impossible(x) | Gorpus(x) | Luminous(x)))", "all x.(Grimpus(x) -> (Dossier(x) | Gorpus(x) | Vumpus(x)))", "all x.(Grimpus(x) -> (Impossible(x) | Gorpus(x) | Vumpus(x)))", "all x.(Grampus(x) -> (Issue(x) & Gorpus(x) & Vumpus(x)))", "all x.(Grimpus(x) -> (Impossible(x) | Gorpus(x) | Noimpus(x)))", "all x.(Grampus(x) -> (Imposso(x) | Gorpus(x) | Vumpus(x)))", "all x.(Grimpus(x) -> (Improven(x) & Gorpus(x) & Vumpus(x)))", "all x.(Grillpus(x) -> (Impose(x) | Gorpus(x) | Vumpus(x)))", "all x.(Grimpus(x) -> (Implanted(x) | Gorpus(x) | Vumpus(x)))", "all x.(Grimpus(x) -> (Impossius(x) | Gorpus(x) | Vumpus(x)))"]}
{"id": "prontoqa_train_1359", "nl": "Fae is a yumpus and Fae is not a vumpus and Fae is a lempus.", "fol": "(yumpus(Fae) & -vumpus(Fae) & lempus(Fae))", "prediction": ["all x y z.((Fae(x) & Yumpus(y) & Fae(z)) -> ('Yumpus(x) | -Vumpus(z) | Lempus(z)))", "(exists x.(Fae(x) & Yumpus(x)) & exists y.(Fae(y) & -Vimpus(y)) & exists z.(Lempus(z) & Yimpus(z))))", "all x.(Fae(x) -> (Yumpus(x) & -Vimpus(x) & Lempus(x)))", "(all x y z.((Fae(x) & Yups(y) & Youps(z)) -> HasYumpus(x)) & ((Fae(x) & -Vumpus(x)) | (Fae(x) & Lempus(x)))))", "(all x.(Fae(x) -> Yampus(x)) & (Fae(x) -> -Vomepus(x)) & (Fae(x) -> Lempus(x)))", "(all x.(Fae(x) -> Yampus(x)) & (Fae(x) -> -Vumpus(x)) & (Fae(x) -> Lempus(x)))", "(Yumpus(Fae) & -Vumpus(Fae) & Lempus(Fae))", "all x y z.((Fae(x) & Yumpus(y) & Fae(z)) -> (Yumpus(x) | -Vumpus(z) | Lempus(z))))", "(all x.(Fae(x) -> (Yumpus(x) | -Vumpus(x) | Lempus(x))))", "all x.(Fae(x) -> (Yumpus(x) & -Vumpus(x) & Lempus(x)))", "(all x y.(Baby(x) -> Yampus(x)) & (-Auxiliary(y) & Auxiliary(y)) & (-Auxiliary(y) -> Vulpis(y)) & (-Baby(y) -> Lempus(y))))", "(all x y.((Fae(x) & Yampus(x)) -> (Yumpus(x) & -Vumpus(y))) & ((Fae(x) & Lempus(y)) -> Lompus(z)))", "all x y z.((Fae(x) & Yampus(x) & Fae(y) & Vumpus(z)) -> (Yumpus(x) & -Vumpus(y) & Lempus(z)))", "all x y z.((Fae(x) & Yumpa(y) & Fae(z)) -> (-Vimpus(z) & Lempus(z)))", "(all x y z.(HasFae(x) -> Yumpus(x)) & ((HasFae(y) & -Vumpus(y)) | ((HasFae(y) & Lempus(z)))))", "(all x.(Fae(x) -> Yampus(x)) & (Fae(x) -> -Vumpus(x)) & (Fae(x) -> Lempus(x)))"]}
{"id": "prontoqa_train_1360", "nl": "Everything that is a tumpus, a sterpus, and a vumpus is a brimpus.", "fol": "all x. ((tumpus(x) & sterpus(x) & vumpus(x)) -> brimpus(x))", "prediction": ["all x.((Tumpus(x) | Sterpus(x) | Vumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Sterpus(x) | Vimpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Sterpus(x) | Vumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Sterpus(x) | Vumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Sterpus(x) | Vumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Sterpus(x) | Vumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Sterpus(x) | Uzumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Sterpus(x) & Vumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Sterpus(x) | Vumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Sterpus(x) | Vumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Sterpus(x) | Vumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Steroid(x) | Vumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Sterpus(x) | Virtumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Sterpus(x) | Vumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Sterpus(x) | Vumpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) | Sterpus(x) | Vumpus(x)) -> Brimpus(x))"]}
{"id": "prontoqa_train_1361", "nl": "Wren is not a brimpus, Wren is a grimpus, and Wren is a lempus.", "fol": "(-brimpus(Wren) & grimpus(Wren) & lempus(Wren))", "prediction": ["(all x y z.((Wren(x) & Brimpus(y) & Grimpus(z)) -> -Brimpus(x)) & ((Wren(x) & Lempus(x)) -> Lempus(x)))", "all x y z.((Wren(x) & Grimpus(y) & Lempus(z)) -> (-Brumpus(x) & Grumpus(y) & Lempus(z)))", "all x y z.((Wren(x) & Grimpus(y) & Lempus(z)) -> (-Brumpus(x) | (Smoothpus(y) | Lempus(z))))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Grumpus(y))) & all z.(Wren(z) -> Lempus(z)))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Plumpus(y))) & all z.(Wren(z) -> Lempus(z)))", "(all x.(Wren(x) -> -Brumpus(x)) & all y.((Wren(y) & Grimpus(y))) -> Lempus(y)))", "(all x.(Wren(x) -> -Birmpus(x)) & ((Wren(x) -> Grimpus(x))) & ((Wren(x) -> Lempus(x))))", "(l-brimpus(Wren) & -Grimpus(Wren) & Lempus(Wren))", "all x y z.((Wren(x) & Brimpus(y) & Grimpus(z)) -> (-Brimpus(x) & Grimpus(x) & Lempus(x)))", "(all x y z.((Wren(x) & Brimpus(y)) -> -Bribus(x)) & ((Wren(z) & Grimpus(z))) -> Lempus(z)))", "(all x y z.(Mother(x) -> -Brimpus(x)) & ((Mother(y) & Strumpus(y)) | (Mother(z) & Lempus(z)))))", "(all x.(Wren(x) -> -Brimpus(x)) & ((Wren(x) & Grimpus(x))) & ((Wren(x) & Lempus(x))))", "(all x.(Wren(x) -> -Brimpus(x)) & ((Wren(x) & Grimpus(x)) | ((Wren(x) & Lempus(x)))))", "(all x y z.(Wren(x) -> -Brimpus(x)) & ((Wren(y) & Grimpus(y)) | (Wren(z) & Lempus(z)))))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Grimpus(y)) & all z.(Wren(z) -> Lempus(z))))", "all x y z.((Wren(x) & Grimpus(y) & Lempus(z)) -> (-Briban(x) & -Grampus(y) & Lempus(z)))"]}
{"id": "prontoqa_train_1362", "nl": "Lorpuses are shumpuses.", "fol": "all x. (lorpus(x) -> shumpus(x))", "prediction": ["all x.(Lorpus(x) -> Seamush(x))", "all x.(Lorpus(x) -> Shumpus(x))", "all x.(Lorpus(x) -> Shumpus(x))", "all x.(Lorpus(x) -> Shumpus(x))", "all x.(Lorpus(x) -> Shumpus(x))", "all x y.((Lurpuse(x) & Shumpus(y)) -> Sunflower(x))", "all x.(Lorpus(x) -> Shumpus(x))", "all x.(Lorpuse(x) -> Shumpus(x))", "all x.(Lorpus(x) -> Shumpus(x))", "all x.(Lorpus(x) -> Shumpus(x))", "all x.(Lorpus(x) -> Shumpus(x))", "all x.(Lorpus(x) -> Shumpus(x))", "all x.(Lorpus(x) -> Shumpus(x))", "all x.(Lorpus(x) -> Humpback(x))", "all x.(Lorpus(x) -> Sompus(x))", "(all x.(Lorpus(x) -> Humptus(x)))"]}
{"id": "prontoqa_train_1363", "nl": "Each shumpus is a dumpus.", "fol": "all x. (shumpus(x) -> dumpus(x))", "prediction": ["all x.(Shumpus(x) -> Dumpus(x))", "all x.(Shumpus(x) -> Dumpus(x))", "all x.(Shumpus(x) -> Puss(x))", "all x.(Shumpus(x) -> Dumpus(x))", "all x.(Shumpus(x) -> Dumpus(x))", "all x.(Shumpus(x) -> Dumpus(x))", "all x.(Shumpus(x) -> Dumpus(x))", "all x.(Shumpus(x) -> Dumpus(x))", "all x.(Shumpus(x) -> Dumpus(x))", "all x.(Shumpus(x) -> Dumpus(x))", "all x.(Shumpus(x) -> Dumpus(x))", "all x.(Shumpus(x) -> Dumpus(x))", "all x.(Shumpus(x) -> Puss(x))", "all x.(Shumpus(x) -> Dumpus(x))", "all x.(Shumpus(x) -> Dumpus(x))", "exists x.(Shumpus(x) & Dumpus(x))"]}
{"id": "prontoqa_train_1364", "nl": "Stella is a tumpus, Stella is a zumpus, and Stella is not a dumpus.", "fol": "(tumpus(Stella) & zumpus(Stella) & -dumpus(Stella))", "prediction": ["(all x.(Tumpus(x) -> Stella(x)) & all y.(Zumpus(y) -> Stella(y))) & all z.(Dumpus(z) -> Stella(z))))", "all x y z.((Stella(x) & Umpus(x) & Zumpus(y) & Dumpus(z)) -> (Tumpus(x) & -Dumpus(x)))", "(all x y z.((Stella(x) & Tumpus(x)) -> Awake(x)) & ((Stella(y) & Zumpus(y)) -> -Dumpus(y)))", "(all x.(Stella(x) -> Tumpus(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> -Dumpus(x)))", "all x y z.((Tumpus(x) & Zumpus(y) & Dumpus(z)) -> (Tumpus(x) | Blossom(y) & -Dumpus(z)))", "all x y z.(Dumpus(x) -> (Tumpus(x) & Zumpus(y) & Dumpus(z)))", "exists x.(Tumpus(x) & Zumpus(x) & -Dumpus(x))", "(all x.(Stella(x) -> Tumpus(x)) & all y.(Stella(y) -> Zumpus(y))) & all z.(Stella(z) -> -Dumpus(z))))", "(all x.(Stella(x) -> Tumpus(x)) | (Stella(x) -> Zumpus(x))) & (Stella(x) -> -Dumpus(x)))", "(all x.(Stella(x) -> Tommu(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> -Dumpus(x))))", "(all x.(Tumpus(x) -> Stella(x)) & (Zumpus(x) -> Stella(x)) & -Dumpsus(x)))", "(all x.(Tumpus(x) -> Stella,Stella)) & (Tumpus(x) -> Stella,Shimpus)) & (Stella,Stumpus) -> Stella,Stumpus)))", "(all x.(Tumpus(x) -> Stella)) & (Tompus(x) -> Stella)) & (Dumpus(x) -> Stella)))", "all x y z.((Stella(x) & Tomps(y) & Zumpus(z)) -> (Tumpus(x) & Zumpus(x) & -Dumps(z)))", "(all x.(Stella(x) -> Tumpus(x)) & (Stella(x) -> Zumpus(x)) & -Stella(x)))", "(all x y z.(Tumpus(x) -> Stella(x)) & (Zumpus(y) -> Stella(z)) & -Dumpus(z)))"]}
{"id": "prontoqa_train_1365", "nl": "Everything that is a gorpus and a numpus and a brimpus is not a zumpus.", "fol": "all x. ((gorpus(x) & numpus(x) & brimpus(x)) -> -zumpus(x))", "prediction": ["all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))", "all x.((Gorpus(x) & Nautilus(x) & Brimpus(x)) -> -Zumpus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zimpus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Tompus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Stompus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zuppus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))", "all x.((Gorpus(x) & Numpus(x) & Brimpus(x)) -> -Zumpus(x))"]}
{"id": "prontoqa_train_1366", "nl": "Every tumpus is a zumpus and a rompus and a numpus.", "fol": "all x. (tumpus(x) -> (zumpus(x) & rompus(x) & numpus(x)))", "prediction": ["all x.(Tumpus(x) -> (Tompus(x) & Rompus(x) & Numpus(x)))", "all x.(Tumpus(x) -> (Tommpus(x) & Rompus(x) & Numpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) & Rompus(x) & Numpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) & Rompus(x) & Numpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) & Rompus(x) & Numpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) & Rompus(x) & Numpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) | Rompus(x) | Numpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) | Rompus(x) | Numpus(x)))", "all x.(Tumpus(x) -> (Zumpus(x) & Rompus(x) & Numpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) & Rompus(x) & Numpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) & Rompus(x) & Numpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) & Rompus(x) & Numpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) & Rompus(x) & Numpus(x)))", "exists x.(Tumpus(x) & Zurpus(x) & Rompus(x) & Numpus(x))", "all x.(Tumpus(x) -> (Tompus(x) & Rompus(x) & Numpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) & Rompus(x) & Numpus(x)))"]}
{"id": "prontoqa_train_1367", "nl": "Everything that is a gorpus, a dumpus, and a numpus is a sterpus, a zumpus, and a jompus.", "fol": "all x. ((gorpus(x) & dumpus(x) & numpus(x)) -> (sterpus(x) & zumpus(x) & jompus(x)))", "prediction": ["all x.((Gorpus(x) | Dumpus(x) | Nompus(x)) -> (Sterpus(x) & Zumpus(x) & Jompus(x)))", "all x.((Gorpus(x) | Dumpus(x) | Numpus(x)) -> (Sterpus(x) & Zumpus(x) & Jompus(x)))", "all x.((Gorpus(x) & Dumpus(x) & Numpus(x)) -> (Sterepus(x) & Zumpus(x) & Jompus(x)))", "all x.((Gorpus(x) | Dumpus(x) | Numpus(x)) -> (Sterpus(x) & Zumpus(x) & Jompus(x)))", "all x.((Gorpus(x) | Dumpus(x) | Numpus(x)) -> (Sterpus(x) & Zumpus(x) & Jompus(x)))", "all x.((Gorpus(x) | Dumpus(x) | Numpus(x)) -> (Sterectus(x) & Zumpus(x) & JOmpus(x)))", "all x.((Gorpus(x) & Dumpus(x) & Numpus(x)) -> (Sterepus(x) | Zumpus(x) | Jompus(x)))", "all x y z.((Gorpus(x) & Dumpus(y) & Numpus(z) & EndsIn(y,z)) -> (Sterpus(x) & Zumpus(x) & Jompus(x)))", "all x.((Gorpus(x) | Dumpus(x) | Numpus(x)) -> (Sterpus(x) & Zumpus(x) & Jompus(x)))", "all x.((Gorpus(x) | Dumpus(x) | Numpus(x)) -> (Storpus(x) | Zumpus(x) | Jompus(x)))", "all x.((Gorpus(x) & Dumpus(x) & Counter(x)) -> (Sterepus(x) & Zumpus(x) & Jompus(x)))", "all x.(((Gorpus(x) | Dumpus(x) | Numpus(x))) -> (Sterepus(x) & Zumpus(x) & Jompus(x)))", "all x.(Gorpus(x) & Dumpus(x) & Numpus(x)) -> (Steerpus(x) & Zumpus(x) & Jompus(x)))", "all x.((Gorpus(x) | Dumpus(x) | Numpus(x)) -> (Sterepus(x) & Zumpus(x) & Jompus(x)))", "all x.((Gorpus(x) | Dumpus(x) | Numpus(x)) -> (Sterpus(x) & Zumpus(x) & Jompus(x)))", "all x.((Gorpus(x) & Dumpus(x) & Numpus(x)) -> (Sterpus(x) & Zumpus(x) & Jompus(x)))"]}
{"id": "prontoqa_train_1368", "nl": "Everything that is a sterpus, a jompus, and a shumpus is a grimpus, a vumpus, and a lempus.", "fol": "all x. ((sterpus(x) & jompus(x) & shumpus(x)) -> (grimpus(x) & vumpus(x) & lempus(x)))", "prediction": ["all x.((Sterpus(x) & Jompus(x) & Shumpus(x)) -> (Smoothpus(x) | Vumpus(x) | Lempus(x)))", "all x.((Esterpus(x) & Jompus(x) & Humpus(x)) -> (Grimpus(x) | Vumpus(x) | Lempus(x)))", "all x.((Sterpus(x) | Jompus(x) | Humpus(x)) -> (Grimpus(x) | Vumpus(x) | Lempus(x)))", "all x.((Sterpus(x) | Jompus(x) | Humpus(x)) -> (Grimpus(x) | Vumpus(x) | Lempus(x)))", "all x.((Sterpus(x) | Jompus(x) | Shumpus(x)) -> (Smooches(x) & -Smooches(x) & -Smooches(x)) & -Vumpus(x) & -Smooches(x) & -Smooches(x) & -Smooches(x) & -Sooches(x)))", "all x.((Sterpus(x) | Jompus(x) | Humpus(x)) -> (Grimpus(x) & Vumpus(x) & Lempus(x)))", "all x.((Sterpus(x) | Jompus(x) | Shumpus(x)) -> (Grimpus(x) | Vumpus(x) | Lempus(x)))", "all x.((Sterpus(x) & Jompus(x) & Shumpus(x)) -> (Smokey(x) | Vumpus(x) | Lempus(x)))", "all x.((Sterpus(x) | Jompus(x) | Shumpus(x)) -> (Surpus(x) | Vumpus(x) | Lampus(x)))", "all x.((Sterpus(x) | Jompus(x) | Humpus(x)) -> (Grampus(x) | Vumpus(x) | Lempus(x)))", "all x.((Sterpus(x) | Jompus(x) | Humpus(x)) -> (Smoothpus(x) & Vumpus(x) & Lempus(x)))", "all x.((Sterepus(x) | Jompus(x) | Humpus(x)) -> (Grimpus(x) | Vumpus(x) | Lempus(x)))", "all x.((Sterpus(x) | Jompus(x) | Humpus(x)) -> (Smouse(x) & Vumpus(x) & Lempus(x)))", "all x.((Sterpus(x) | Jompus(x) | Shumpus(x)) -> (Smoothpus(x) | Vumpus(x) | Lempus(x)))", "all x.((Sterpus(x) | Jompus(x) | Humpus(x)) -> (Grips(x) | Vumpus(x) | Lempus(x)))", "all x.((Sterpus(x) | Jompus(x) | Humpus(x)) -> (Smoochpus(x) | Vumpus(x) | Lempus(x)))"]}
{"id": "prontoqa_train_1369", "nl": "Shumpuses are lorpuses and jompuses and gorpuses.", "fol": "all x. (shumpus(x) -> (lorpus(x) & jompus(x) & gorpus(x)))", "prediction": ["all x y.((Shupuse(x) & Lordpus(y)) -> (Jompuse(x) | Gorpus(y)))", "all x.(Shupuse(x) -> (Lorpuse(x) | Jompuse(x) | Gorpuse(x)))", "all x y.((Shumpsuse(x) & Lorpus(y)) -> (Lorpus(x) & Jompuse(x) & Gorpus(x)))", "all x.(Shupuse(x) -> (Lorpus(x) & Jompuse(x) & Dorpus(x)))", "(all x.(Shupuse(x) -> Lorpus(x)) & all y.(Jockuse(y) & all z.(Gorpus(z)) -> Gorpus(y)))", "all x.(Shumpus(x) -> (Lorpus(x) & Jompuse(x) & Gorpus(x)))", "(all x.(Shampoo(x) -> Lymph(x)) & all y.(Jumpe(y) & All z.(Gorpus(z)) -> (Lymphorus(x) & Jompus(y) & Gorpuse(z))))", "all x.(Suppuse(x) -> (Lorpus(x) & Jompuse(x) & Gorpus(x)))", "(all x.(Shutup(x) -> Lorpuse(x)) & (Jompuse(x) | Gorpuse(x))))", "(all x.(Shumpsuse(x) -> Lymphoid(x)) & all y.(Jempuse(y) & All z.(Gorpuse(z)) | All w.(Potto(w) & Orbiter(w))))", "all x.(Shupuse(x) -> (Lorpus(x) | Jompuse(x) | Gorpuse(x)))", "all x.(Shumpus(x) -> (Lorpuse(x) & Jompus(x) & Gorpuse(x)))", "all x y.(Shupuse(x) -> (Lorpus(x) & Jompuse(y) & Grebuse(y)))", "all x.(Shuppe(x) -> (Lorpheus(x) & Jombus(x) & Gorpus(x)))", "all x y z.((Shutup(x) & Loxus(y) & (Jompus(z) | Gorpuse(z))) -> (Lorpus(y) & Jompus(z) & Gorpus(z)))", "(all x.(Smuspex(x) -> Lorpuse)) & all y.(Jompus(y) & All z.(Gorpuse(z))) -> Hormurs(x)))"]}
{"id": "prontoqa_train_1370", "nl": "Fae is a dumpus, a jompus, or a vumpus.", "fol": "(dumpus(Fae) | jompus(Fae) | vumpus(Fae))", "prediction": ["(Wheel(Fae) | Dumpus(Fae)) | Jompus(Fae) | Vuumpus(Fae))", "all x.(Fae(x) -> (Dumpus(x) | Jompus(x) | Lumpus(x)))", "(Dumus(fee) | Jompus(fee) | Voluptus(fee))", "(Dumpus(fae) | Jompus(fae) | Vumpus(fae))", "all x.(Fae(x) -> (Dumpus(x) | Jompus(x) | Voluptus(x)))", "all x.(Fae(x) -> (Dumps(x) | Jompus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Dumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Dumpus(x) | Jompus(x) | Luxpus(x)))", "all x.(Fae(x) -> (Dumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Dumus(x) | Jompus(x) | Vampus(x)))", "all x.(Fae(x) -> (Dumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Dumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Dumpus(x) | Jompus(x) | Vulpe(x)))", "all x.(Fae(x) -> (Dumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Dumps(x) | Jompus(x) | Vumpus(x)))", "(All x.(Fae(x) -> Dumpus(x)) & (Jompus(x) | Vumpus(x)))"]}
{"id": "prontoqa_train_1371", "nl": "Everything that is a jompus, a zumpus, and a lorpus is a sterpus.", "fol": "all x. ((jompus(x) & zumpus(x) & lorpus(x)) -> sterpus(x))", "prediction": ["all x.((Jompus(x) | Zumpus(x) | Lorpus(x)) -> Sterpus(x))", "all x.((Jompus(x) | Zumpus(x) | Lorpus(x)) -> Sterpus(x))", "all x.((Jompus(x) | Zumpus(x) | Lorpus(x)) -> Steroid(x))", "all x.((Jompus(x) | Zumpus(x) | Lorpus(x)) -> Sterpus(x))", "all x.((Jimpus(x) & Zumpus(x) & Lorpus(x)) -> Sterpus(x))", "all x.((Jompus(x) | Zumpus(x) | Lorpus(x)) -> Sterpus(x))", "all x.((Jompus(x) | Zumpus(x) | Lorpus(x)) -> Sterepus(x))", "all x.((ExpressedBy(x) & (Jompus(x) | Zumpus(x) | Lorpus(x))) -> Sterepus(x))", "all x.((Jompus(x) | Zumpus(x) | Lower(x)) -> Sterpus(x))", "all x.((Roseman(x) | Umpus(x) | Lorpus(x)) -> Sterpus(x))", "all x.((Jompus(x) | Zumpus(x) | Lorpus(x)) -> Sterpus(x))", "all x.((Jompus(x) | Zumpus(x) | Lorpus(x)) -> Sterpus(x))", "all x.((Jompus(x) | Zumpus(x) | Lorpus(x)) -> Sterpus(x))", "all x.((Jompus(x) | Zumpus(x) | Lorpus(x)) -> Sterpus(x))", "all x.((Jompus(x) | Zumpus(x) | Lorpus(x)) -> Sterpus(x))", "all x.((Jompus(x) | Zumpus(x) | Lower(x)) -> Sterpus(x))"]}
{"id": "prontoqa_train_1372", "nl": "Sally is a jompus.", "fol": "jompus(Sally)", "prediction": ["Sally (jompus)", "all x.(Sally(x) -> Jompus(x))", "all x.(Sally(x) -> Jompus(x))", "all x.(Jompus(x) -> Sally(x))", "all x.(Jomex(x) -> Sally(x))", "all x.(Jumpus(x) -> Sally(x))", "Sally is Jompus(Sally)", "Sally is a Jompus.", "all x.(Sally(x) -> Jompus(x))", "All x.(Sally(x) -> Jompus(x))", "Sally is a Jompus.", "A Jompus(Sally)", "all x.(Jumpus(x) -> Sally(x))", "Sally is a jompus.", "Sally is a Jompus.", "All x.(Sally(x) -> Jompus(x))"]}
{"id": "prontoqa_train_1373", "nl": "Sally is a lorpus.", "fol": "lorpus(Sally)", "prediction": ["Sally is a lorpus.", "Sally is a lorpus.", "Sally is a Lambeth(Sally)", "Sally is a lorpus.", "Sally is a Lompus.", "Sally is a Lorpus.", "Sally is a lorpus.", "all x.(Lorpus(x) -> Sally(x))", "all x.(Sally(x) -> Lorpus(x))", "Sally is a Larpus.", "all x.(Sally(x) -> Lorpus(x))", "all x.(Lorpus(x) -> Sally(x))", "Sally is Larkesnake(Sally)", "Sally is a lorpus.", "all x.(Lorpus(x) -> Sally(x))", "all x.((Sally(x) & Lorpus(x)) -> HasNoStopExport(x))"]}
{"id": "prontoqa_train_1374", "nl": "Sally is a sterpus, a tumpus, or a dumpus.", "fol": "(sterpus(Sally) | tumpus(Sally) | dumpus(Sally))", "prediction": ["all x.(Sally(x) -> (Sterpus(x) | Tumpus(x) | Dumpus(x)))", "all x.(Sally(x) -> (Seed(x) | Seek(x) | Seek(x)))", "all x.(Sally(x) -> (Sterpus(x) | Tume(x) | Dumpus(x)))", "all x.(Sally(x) -> (Sterodus(x) | Tumpus(x) | Dumpus(x)))", "(Sterpus(Sally) | Tumpus(Sally) | Dumpus(Sally)))", "all x.(Sally(x) -> (IsSterpus(x) | IsTumpus(x) | IsDumpus(x)))", "all x.(Sally(x) -> (Sterpus(x) | Tumpus(x) | Dumpus(x)))", "all x.(Sally(x) -> (Sterpus(x) | Tumpus(x) | Dumpus(x)))", "all x.(Sally(x) -> (Sterotus(x) | Tumpus(x) | Dumpus(x)))", "exists x.(Sally(x) & (Sterpus(x) | Tumpus(x) | Dumpus(x)))", "all x.(Sally(x) -> (Sterepus(x) | Tumpus(x) | Dumpus(x)))", "all x.(Sally(x) -> (Sterpus(x) | Tumpus(x) | Dumpus(x)))", "Sally (estrus(side) | sterpus(side) | tumpus(side) | dumpus(side)))", "all x.(Sally(x) -> (Sterpus(x) | Tumpus(x) | Dumpus(x)))", "all x.(Sally(x) & (Sterepus(x) | Tumpus(x) | Dumpus(x)))", "(Sally (Sterpus) | Roostpus(x) | Tumpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_1375", "nl": "Everything that is a numpus or a vumpus or a grimpus is a lempus, an impus, and a brimpus.", "fol": "all x. ((numpus(x) | vumpus(x) | grimpus(x)) -> (lempus(x) & impus(x) & brimpus(x)))", "prediction": ["all x.((Toxic(x) & (Nompus(x) | Volmapus(x) | Grimpus(x))) -> (Lempus(x) | Imperative(x) | Brimpus(x)))", "all x.((Nompus(x) | Voompus(x) | Grimpus(x)) -> (Lempus(x) | Imperator(x) | Brimpus(x)))", "all x.((Nompus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(x) & Implied(x) & Brimpus(x)))", "all x.((Numpus(x) | Voompus(x) | Grimpus(x)) -> (Lempus(x) | Impossible(x) | Brimpus(x)))", "all x.((Numpus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(x) | Issue(x) | Brimpus(x)))", "all x.((Numpus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(x) & Issuel(x) & Brimpus(x)))", "all x.((Numpus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(x) & Impossible(x) & Brimpus(x)))", "all x.((Numpus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(x) | Impossible(x) | Brimpus(x)))", "all x.((Numpus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(x) | Impossible(x) | Brimpus(x)))", "all x.((Numpus(x) | Vumpus(x) | Grimpus(x)) -> (Aeronaut(x) & Aeronaut(x) & Osmotic(x) & Birmpus(x)))", "all x.((Number(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(x) & Impossible(x) & Brimpus(x)))", "all x.((Nompus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(x) & Imperator(x) & Brimpus(x)))", "all x.((Numpus(x) | Voompus(x) | Grimpus(x)) -> (Lempus(x) & Imperium(x) & Brimpus(x)))", "all x.((Numpus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(x) & Erzoo(x) & Rempus(x)))", "all x.((Numpus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(x) & Islaps(x) & Brimpus(x)))", "all x.((Numpus(x) | Vumpus(x) | Grimpus(x)) -> (Lempus(x) & Imperator(x) & Brimpus(x)))"]}
{"id": "prontoqa_train_1376", "nl": "Polly is a numpus.", "fol": "numpus(Polly)", "prediction": ["all x.(Polly(x) -> Numus(x))", "(Numpus(Polly) & NativeTo(Polly,Company))", "exists x.(Polly(x) & Numpus(x))", "all x.(Polly(x) -> Numpus(x))", "Polly (Numpus(Polly))", "(Numpus(Poly) & Number(Poly))", "all x.(Polly(x) -> Nompus(x))", "all x y.((Polly(x) & Nompus(y)) -> Represents(x,y))", "all x.(Polly(x) -> Numpus(x))", "all x.(Polly(x) -> Numpus(x))", "All x.(Polly(x) -> Numpus(x))", "all x.(Polly(x) -> Numpus(x))", "all x.(Polly(x) -> Number(x))", "Polly is ANumpus(Polly)", "all x.(Polly(x) -> Numpus(x))", "All x.(Polly(x) -> Numpus(x))"]}
{"id": "prontoqa_train_1377", "nl": "Wumpuses are rompuses and gorpuses and brimpuses.", "fol": "all x. (wumpus(x) -> (rompus(x) & gorpus(x) & brimpus(x)))", "prediction": ["all x.(Wumpuse(x) -> ((Rompus(x) | Gorpus(x)) & Brimpus(x)))", "all x.(Wumpuse(x) -> (rompus(x) | Gorpus(x) | Brimpuse(x)))", "all x.(Wumpus(x) -> (Rompus(x) | Gorpus(x) | Brimpuse(x)))", "all x.(Wumpuse(x) -> (Rompus(x) | Gorpus(x) | Brimpuse(x)))", "(all x.(Wumpus(x) -> RompusE.(x)) | (Rome(x) | Gorpus(x) | Brimpus(x))))", "all x.(Wurmpuse(x) -> (Rompus(x) | Gorpus(x) | Brimpuse(x)))", "all x.((Wumpuse(x) & Rompus(x) & Gorpus(x)) -> Brimpuse(x))", "all x.(Wumpuse(x) -> (Rompus(x) & Gorpus(x) & Brimpuse(x)))", "(all x.(Wumpuse(x) -> (Rompus(x) | Gorpus(x) | Brimpuse(x)))", "all x y.((Wumpuse(x) & Rubis(y)) -> (Roopus(x) | Gorpus(y) | Brimpus(y)))", "all x.(Wammuse(x) -> (Rompus(x) | Gorpus(x) | Brimpuse(x)))", "(all x.(Wumpuse(x) -> (Rompus(x) | Gorpus(x) | Brimpuse(x))))", "all x.(Wumpus(x) -> (Rompus(x) | Gorpus(x) | Brimpus(x)))", "all x.(Wumpuse(x) -> (Rompus(x) | Gorpus(x) | Brimpuse(x)))", "(all x.(Wumpus(x) -> Rompus(x)) & all y.(Gorpus(y) & All z.(Brompus(z) & Brachydex(z))))", "all x.(Wumpuse(x) -> (Rompus(x) | Gorpus(x) | Brimpuse(x)))"]}
{"id": "prontoqa_train_1378", "nl": "Sally is a vumpus, a jompus, or a gorpus.", "fol": "(vumpus(Sally) | jompus(Sally) | gorpus(Sally))", "prediction": ["all x.(Sally(x) -> (Vumpus(x) | Jompus(x) | Gorpus(x)))", "exists x.(Sally(x) & (Vumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Vumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Volumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Vumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Vimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Vumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Vumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Vampus(x) | Jompus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Vumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Vumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Vumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Vimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Vumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Vumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Vumpus(x) | Jompus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1379", "nl": "Everything that is a brimpus, a lempus, or a zumpus is not a rompus.", "fol": "all x. ((brimpus(x) | lempus(x) | zumpus(x)) -> -rompus(x))", "prediction": ["all x.((Brimpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "all x.((Brimpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "all x.((Brimpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "all x.((Brimpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "all x.((Brimpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "all x.((Brimpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "all x.((Brumpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "all x.(((Brimpus(x) | Lempus(x) | Zumpus(x))) -> -Rrompus(x))", "all x.((Brimpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "all x.((Brimpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "all x.(((Brimpus(x) | Lempus(x) | Zumpus(x))) -> -Rompus(x))", "all x.((Brimpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "all x.((Brimpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "all x.((Brumpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "all x.((Brimpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))", "all x.((Brimpus(x) | Lempus(x) | Zumpus(x)) -> -Rompus(x))"]}
{"id": "prontoqa_train_1380", "nl": "Shumpuses are sterpuses and gorpuses and rompuses.", "fol": "all x. (shumpus(x) -> (sterpus(x) & gorpus(x) & rompus(x)))", "prediction": ["all x.(Shuppe(x) -> (Sterpuse(x) & Gorpuse(x) & Rompuse(x)))", "all x y.((Shumpus(x) & Steruse(y)) -> (Gorpuse(x) | Rompuse(x)))", "all x y z.((Shuppuse(x) & Sterpuse(y) & Gorpuse(z) & Rompuse(z)) -> (Sterpuse(x,y) | Rompuse(x,z)))", "all x.(Shumpus(x) -> (Strespuse(x) & Gorpuse(x) & Rompuse(x)))", "all x.(Shumpus(x) -> (Shumpus(x) & Sterpuse(x) & Gorpuse(x) & Rompuse(x)))", "all x.(Shampus(x) -> (Estrus(x) | Gorpus(x) | Rompus(x)))", "all x y.((Shampoos(x) & Sterpuse(y)) -> (Gorpus(y) & Rompus(y)))", "all x.(Shupuse(x) -> (Sterpuse(x) & Gorpuse(x) & Rompuse(x)))", "all x.(Shupuse(x) -> (Sterpuse(x) | Dorpuse(x) | Rompuse(x)))", "all x.(Shuppus(x) -> (Starpuse(x) & Gorpuse(x) & Rompuse(x)))", "all x.(Shumping(x) -> (Sterpuses(x) | Gorpuses(x) | Rompuses(x)))", "all x.(Shumpus(x) -> (sterpuse(x) | Gorpuse(x) | Rompuse(x)))", "all x.(Shumpus(x) -> (sterpuse(x) | (gorpuse(x) | rompuse(x))))", "all x y.((Shumpus(x) & Sterpuse(y)) -> (Other(x,y) | (Gorpuse(y) | Rompuse(y))))", "all x.(Shupus(x) -> (Sterpuse(x) | Gorpuse(x) | Rompuse(x)))", "all x y z.((Shumpsue(x) & Steruse(y)) -> (Sterpus(x) & Gorpuse(z) & Rompuse(z)))"]}
{"id": "prontoqa_train_1381", "nl": "Every yumpus is not a wumpus.", "fol": "all x. (yumpus(x) -> -wumpus(x))", "prediction": ["all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "exists x.(Yumpus(x) & -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))"]}
{"id": "prontoqa_train_1382", "nl": "Alex is a shumpus, Alex is not a sterpus, or Alex is a numpus.", "fol": "(shumpus(Alex) | -sterpus(Alex) | numpus(Alex))", "prediction": ["all x y.((Alex(x) & Snompus(y)) -> ((Alex(x) | -Sterpus(x)):))", "all x y.((Alex(x) & Sterpus(y)) -> (Shumpus(x) | -Sterpus(y) | Numpus(y)))", "all x.(Alex(x) -> (Shumpus(x) | -Sterpus(x) | Numpus(x)))", "(exists x.(Alex(x) & Shumpus(x)) | exists y.(Sterpus(y) & -Sterpus(y))) | exists z.(Alex(z) & Numpus(z))))", "(all x.(Alex(x) -> Shumpus(x)) | (-Alex(x) & -Sterpus(x))) | (-Alex(x) & Numpus(x))))", "(All x.(Alex(x) | All y.(Shumpus(y) & -Sterpus(y))) | (Nompus(y) | Numpus(y))))", "(all x.(Alex(x) -> Shumpus(x)) & ((Alex(x) & -Sterpus(x)) | (Alex(x) & Numpus(x)))))", "(all x.(Alex(x) -> Humpus(x)) & all y.(Alex(y) -> -Sterpus(y))) & (Alex(y) -> Numpus(y)))", "(all x.(Alex(x) -> Humpus(x)) & (-Alex(x) -> Sterpus(x)) | (-Alex(x) -> Numpus(x))))", "(all x).(Alex(x) -> Shumpus(x)) | (-Alex(x) & Sterpus(x)) | (-Alex(x) & Numpus(x))))", "all x.((Alex(x) & (Shumpus(x) | -Sterpus(x) | Numbus(x))) -> Represents(x))", "(all x.(Alex(x) -> Hump(x)) & ( (-Sterepus(x) | Number(x)))))", "(all x.(Alex(x) -> Humpus(x)) ou ((Alex(x) & -Sterpus(x)) | (Alex(x) & Numpus(x)))))", "all x.(Alex(x) & ((Shumpus(x) & -Sterpus(x)) | Numpus(x)))) -> (Shumpus(x) | Numpus(x)))", "(all x.(Alex(x) -> Humpus(x)) & (-Sterpus(x) | Numpus(x))))", "(all x y.(Alex(x) -> Humpus(x)) & ((Alex(y) & -Sterpus(y)) | (Alex(y) & Numpus(y)))))"]}
{"id": "prontoqa_train_1383", "nl": "Everything that is a lorpus, a grimpus, or a wumpus is a zumpus and a jompus and a dumpus.", "fol": "all x. ((lorpus(x) | grimpus(x) | wumpus(x)) -> (zumpus(x) & jompus(x) & dumpus(x)))", "prediction": ["all x.((Lorpus(x) | Grimpus(x) | Wompus(x)) -> (Tompus(x) & Jompus(x) & Dumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Ashpus(x) & Jompus(x) & Dumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Aushpus(x) & Tompus(x) & Jompus(x) & Dumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Toumpus(x) & Jompus(x) & Dumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Tompus(x) & Jompus(x) & Dumpus(x)))", "all x.((Holly(x) | Grimpus(x) | Wumpus(x)) -> (Tompus(x) & Jompus(x) & Dumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Bumpus(x) & Jompus(x) & Dumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Tompus(x) & Jompus(x) & Dumpus(x)))", "all x.((River(x) | Grimpus(x) | Wumpus(x)) -> (Tompus(x) & Jompus(x) & Dumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Tompus(x) & Jompus(x) & Dumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) |Wumpus(x)) -> (zumpus(x) | jompus(x) | dumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Hauspus(x) & Jompus(x) & Dumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Tompus(x) | Jompus(x) | Dumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Wompus(x)) -> (Tompus(x) & Jompus(x) & Dumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Wumpus(x)) -> (Tompus(x) & Jompus(x) & Dumpus(x)))", "all x.((Tamerpus(x) | Grimpus(x) | Wumpus(x)) -> (Tompus(x) & Jompus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1384", "nl": "Rex is a grimpus.", "fol": "grimpus(Rex)", "prediction": ["Rex is Grimpus.", "Rex is a Grimpus.", "(Gruppus(Rex) & Grimpus(Rex))", "Rex.(Grimpus(x))", "Rex is a Grimpus.", "all x.(Rex(x) -> Grimpus(x))", "DefinesRex(x) & Grimpus(x))", "all x.(Rex(x) -> Grimpus(x))", "Rex is a Grimpus.", "Rex is a Grimpus.", "all x.(Rex(x) -> Grimpus(x))", "Rex is Grimpus.", "all x.(Rex(x) -> Grimpus(x))", "Rex is Grimpus(rex)", "(Grampus(Rex))", "Rex is a Grumpus."]}
{"id": "prontoqa_train_1385", "nl": "Each lorpus is a wumpus.", "fol": "all x. (lorpus(x) -> wumpus(x))", "prediction": ["all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorph(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Wumpus(x))", "all x.(Larpus(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Hush(x))", "all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Wampus(x))", "all x.(Lorpus(x) -> Wompus(x))", "all x.(Lorpus(x) -> Plumpus(x))", "all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Humpus(x))", "all x.(Lorph(x) -> Wumpus(x))", "all x y z.((Lorpus(x) & Moose(y) & Hump(z)) -> (Wumpus(x) | Owl(x)))"]}
{"id": "prontoqa_train_1386", "nl": "Sam is a rompus, Sam is a zumpus, and Sam is not a wumpus.", "fol": "(rompus(Sam) & zumpus(Sam) & -wumpus(Sam))", "prediction": ["all x.(Sam(x) -> (Rompus(x) & Zumpus(x) & -Wumpus(x)))", "all x y z.((Sam(x) & Rhopus(y) & Zumpus(z) & -Wumpus(x)) -> (Rompus(x) & Tompus(y) & Tompus(z)))", "(all x.(Rompus(x) -> Simpus(x)) & (Zumpus(x) | -Wumpus(x))))", "(all x.(Sam(x) -> Rompus(x)) | (Sam(x) -> Zumpus(x))) & (Sam(x) -> -Wumpus(x)))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> Zumpus(x)) & (Sam(x) -> -Wumpus(x)))", "all x y z.((Sam(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & -Wumpus(x)))", "all x y z.((Sam(x) & Rompus(x) & Zumpus(y) & -Wumpus(z)) -> (Rompus(x) & Zumpus(y) & -Rompus(x)))", "all x y z.((Sam(x) & Rrompus(y) & Zumpus(z)) -> (Rrompus(x) | Zumpus(y) | -Wumpus(z)))", "all x y z.((Sam(x) & Rimpus(y) & Zumpus(z)) -> (Rompus(x) & -Wumpus(x)))", "(all x.(Sam(x) -> Roman(x)) & (Sam(x) -> Zumpus(x)) & -Wumpus(x)))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> Zumpus(x)) & (Sam(x) -> -Wumpus(x)))", "all x.(Kam(x) -> (Rompus(x) & Zumpus(x) & -Wumpus(x)))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> Zumpus(x)) & -Wumpus(x)))", "(all x.(Rompus(x) -> Sam_Taurus(x)) & (Zumpus(x) -> Sam_Wumpus(x)))", "all x.((Sam(x) & Rompus(x)) -> Zumpus(x)) -Wumpus(x))", "all x y z.((Sam(x) & Rompus(x) & Zumpus(y) & -Wumpus(z)) -> (Rompus(x) & Zumpus(y) & -Wumpus(z)))"]}
{"id": "prontoqa_train_1387", "nl": "Impuses are vumpuses.", "fol": "all x. (impus(x) -> vumpus(x))", "prediction": ["all x.(Impuse(x) -> Vampuse(x))", "all x.(Impus(x) -> Vampus(x))", "all x.(Impuse(x) -> Vampuse(x))", "all x.(Imprise(x) -> Vampuse(x))", "all x.(Impuse(x) -> Vampuse(x))", "all x.(Impuse(x) -> Vampuse(x))", "all x.(Impus(x) -> Vumpus(x))", "all x.(Impus(x) -> Vampuse(x))", "all x.(Impus(x) -> Vulpuse(x))", "all x.(Implose(x) -> Vampuse(x))", "all x.(Imper(x) -> Vampuse(x))", "all x.(Impus(x) -> Vampuse(x))", "all x.(Impuse(x) -> Vampus(x))", "all x.(Impus(x) -> Vumpuse(x))", "all x.(Impus(x) -> Vulpuse(x))", "all x.(Impuppy(x) -> Vampuse(x))"]}
{"id": "prontoqa_train_1388", "nl": "Stella is a lempus, an impus, and a vumpus.", "fol": "(lempus(Stella) & impus(Stella) & vumpus(Stella))", "prediction": ["all x.(Stella(x) -> (Lempus(x) & Impossible(x) & Vumpus(x)))", "all x y.((Stella(x) & Lempus(y) & Impermiss(x)) -> Vumpus(x))", "all x.(Stella(x) -> (Lempus(x) | Imperative(x) | Vumpus(x)))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Imperfect(y) -> Vumpus(y)))", "all x.(Stella(x) -> (Lempus(x) | Issue(x) | Vumpus(x)))", "(Limpus(Stella) \u2022 Impermant(Stella)) & Vumpus(Stella))", "all x.(Stella(x) -> (Lempus(x) | Imperative(x) | Vumpus(x)))", "all x.(Stella(x) -> (Lempus(x) & Impossible(x) & Tumpus(x)))", "all x.(Stella(x) -> (StellaImperial(x) | StellaImperial(x) | StellaVumpus(x)))", "((Stella(s) & Lempus(s)) | (Impossible(s) & Vumpus(s))))", "(all x.(Stella(x) -> Lempus(x)) & (Imperfect(x) | Voimpus(x))))", "((Limpus(Stella) & Is(Stella)) | (Impose(Stella) & V\u0103mpus(Stella))))", "(Lempus(Stella) | Imperator(Stella) | Vumpus(Stella)))", "(Plempus(Stella) | Imperator(Stella) | Vumpus(Stella)))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Imposse(y) & Vumpus(y))))", "all x.(Stella(x) -> (Lempus(x) | Imperempt(x) | Vumpus(x)))"]}
{"id": "prontoqa_train_1389", "nl": "Stella is a vumpus, a lorpus, or a sterpus.", "fol": "(vumpus(Stella) | lorpus(Stella) | sterpus(Stella))", "prediction": ["all x.((Stella(x) & (Vumpus(x) | Lorpus(x) | Sterpus(x))) -> Stella(x))", "exists x.(Stella(x) & (Vumpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lorpus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lower(x) | Sterpus(x)))", "all x.(Vumpus(x) | Flourish(x) | Sterpus(x))"]}
{"id": "prontoqa_train_1390", "nl": "Each vumpus is not a grimpus.", "fol": "all x. (vumpus(x) -> -grimpus(x))", "prediction": ["all x.(Vumpus(x) -> -Grimpus(x))", "all x.(Vumpus(x) -> -Grimpus(x))", "all x.(Vumpus(x) -> -Grimpus(x))", "all x.(Vumpus(x) -> -Grimpus(x))", "all x.(Vumpus(x) -> -Grimpus(x))", "all x.(Vumpus(x) -> -Grimpus(x))", "all x.(Vumpus(x) -> -Grimpus(x))", "all x.(Vumpus(x) -> -Grimpus(x))", "all x.(Vumpus(x) -> -Grimpus(x))", "all x.(Vumpus(x) -> -Gripple(x))", "all x.(Vumpus(x) -> -Grimpus(x))", "all x.(Vumpus(x) -> -Grimpus(x))", "all x.(Vumpus(x) -> -Grimpus(x))", "all x.(Vumpus(x) -> -Grimpus(x))", "all x.(Vumpus(x) -> -Grimpus(x))", "all x.(Vumpus(x) -> -Grimpus(x))"]}
{"id": "prontoqa_train_1391", "nl": "Sally is a vumpus.", "fol": "vumpus(Sally)", "prediction": ["Sally.Vimpus(Sally)", "Sally is a vumpus.", "all x.((Sally(x) & Vumpus(x)) -> Vimpus(x))", "Sally is a vumpus.", "Sally exists x.(Vumpus(x) & SallyVumpus(x))", "Sally is a Muzeum(Sally)", "(Vimpus(Sally) & LivesWith(Sally))", "Sally is a vampire.", "Sally ist Vulmpus.", "Sally is a vumpus.", "Sally is Vumpus.", "(Vumpus(Sally) & -Vumpus(Sally))", "(Vumpus(Sally) & Venom(Sally))", "Sally is vumpus.", "Sally is a vumpus.", "all x.(Sally(x) -> Vumpus(x))"]}
{"id": "prontoqa_train_1392", "nl": "Sally is a tumpus, Sally is a sterpus, or Sally is not a yumpus.", "fol": "(tumpus(Sally) | sterpus(Sally) | -yumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Sterpus(x)) | (-Yumpus(x) & -Sally(x))))", "(Tumpus(Sally) | Sterpus(Sally) | -Yumpus(Sally))", "(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Sterpus(x)) | (-Yumpus(x))))", "all x.((Sally(x) & Tumpus(x)) | (Sally(x) & Sterpus(x)) | (-Yumpus(x)))))", "all x.(Sally(x) -> (Tumpus(x) | Sterpus(x) | -Yumpus(x)))", "(all x.(Sally(x) | Tumpus(x)) | (Sterpus(x) | -Yumpus(x))))", "(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Sterpus(x)) | (Sally(x) -> -Yumpus(x))))", "((Sally(Sally,tumpus) | Sally,sterpus)) & -Yumpus(Sally,yumpus))", "((Sally(Sally) & Tumpus(s)) | (Sally(s) & Sterpus(s)) | (Sally(s) & -Yumpus(s))))", "(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Sterepus(x)) | (-Yumpus(x))))", "all x.(Sally(x) & ((Tumpus(x) | Sterpus(x)) | -Yumpus(x))))", "exists x.(Sally(x) & ((Tumpus(x) & -Yumpus(x)) | (-Yumpus(x) & -Yumpus(x))))", "(all x.(Sally(x) | (Tumpus(x) | Sterpus(x)))) & -Yumpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Steroid(x))) | (-Yumpus(x) | Ayumpus(x))))", "(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Sterpus(x)) | (-Yumpus(x))))", "exists x.(Sally(x) & ((Tumpus(x) | Sterpus(x) | -Yumpus(x))))"]}
{"id": "prontoqa_train_1393", "nl": "Numpuses are not shumpuses.", "fol": "all x. (numpus(x) -> -shumpus(x))", "prediction": ["all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpuse(x) -> -Shumpus(x))", "All x.(Numpuse(x) -> -Shumpus(x))", "all x.(Numpuse(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -ShumpusEye(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))"]}
{"id": "prontoqa_train_1394", "nl": "Each brimpus is a shumpus.", "fol": "all x. (brimpus(x) -> shumpus(x))", "prediction": ["all x.(Brumpus(x) -> Humpus(x))", "all x.(Brumpus(x) -> Humpus(x))", "all x.(Brimpus(x) -> Humpus(x))", "all x.(Brumpus(x) -> Shumpus(x))", "all x.(Brimpus(x) -> Humpus(x))", "all x.(Brumpus(x) -> Humpus(x))", "all x.(Brimpus(x) -> Humpus(x))", "all x.(Brumpus(x) -> Humpus(x))", "all x.(Brumpus(x) -> Suhumpus(x))", "all x.((Brimpus(x) & Humpus(x)) -> HasShumpus(x))", "all x.(Brumpus(x) -> Humpus(x))", "all x.(Brumpus(x) -> Humpus(x))", "all x.(Brimpus(x) -> Humpus(x))", "all x.(Brumpus(x) -> Shumpus(x))", "all x.(Brimpus(x) -> Humpus(x))", "all x.(Brimpus(x) -> Humpus(x))"]}
{"id": "prontoqa_train_1395", "nl": "Everything that is a yumpus, a vumpus, and a zumpus is a lorpus.", "fol": "all x. ((yumpus(x) & vumpus(x) & zumpus(x)) -> lorpus(x))", "prediction": ["all x.((Yumpus(x) | Vampus(x) | Zumpus(x)) -> Lestro.(lorpus(x))", "all x.((Yumpus(x) | Vumpus(x) | Zumpus(x)) -> Lorpus(x))", "all x.((Yumpus(x) | Vucipus(x) | Zumpus(x)) -> Loomis(x))", "all x.((Yumpus(x) | Vulmpus(x) | Zumpus(x)) -> Lorpus(x))", "all x.((Yumpus(x) | Vumpus(x) | Zumpus(x)) -> Lorpus(x))", "all x.((Yumpus(x) | Vumpus(x) | Zumpus(x)) -> Lorpus(x))", "all x.((Yumpus(x) | Vampire(x) | Zumpus(x)) -> Loomis(x))", "all x.((Yumpus(x) | Vumpus(x) | Zumpus(x)) -> Lorpus(x))", "all x.((Yumpus(x) | Voompus(x) | Zumpus(x)) -> Lark(x))", "all x.((Yumpus(x) & Vumpus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Yumpus(x) | Vampus(x) | Zumpus(x)) -> Lorpus(x))", "all x.((Yumpus(x) | Vumpus(x) | Zumpus(x)) -> Lorpus(x))", "all x.((Yumpus(x) & Voompus(x) & Zumpus(x)) -> Loomis(x))", "all x.((Yumpus(x) & Voompus(x) & Zumpus(x)) -> Lorpus(x))", "all x.((Yumpus(x) | Vumpus(x) | Zumpus(x)) -> Lorpus(x))", "all x.((Yumpus(x) | Vampus(x) | Zumpus(x)) -> Lorpus(x))"]}
{"id": "prontoqa_train_1396", "nl": "Wren is a yumpus, a sterpus, and a jompus.", "fol": "(yumpus(Wren) & sterpus(Wren) & jompus(Wren))", "prediction": ["all x.(Wren(x) -> (Yumpus(x) | Sterpus(x) | Jompus(x)))", "exists x.(Wren(x) & (Yumpus(x) | Sterepus(x) | Jompus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Sterepus(x) | Jompus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Sterpus(x) | Jompus(x)))", "all x y z.((Wren(x) & Yumps(y) & Steerpus(z)) -> (Yumpus(x) & Sterpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Sterpus(x) | Jompus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Sterepus(x) & Jompus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Sterpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Sterpus(x) | Jompus(x)))", "(Yumpus(Wren) | Sterpus(Wren) | Jompus(Wren)))", "all x.(Wren(x) -> (Yumpus(x) | Sterpus(x) | Jompus(x)))", "(All x.(Wren(x) | All y.(Yumpus(y) & Osakasu))) & (Sterpus(y) | Jompus(y))))", "all x.(Wren(x) -> (Yumpus(x) | Sterpus(x) | Jompus(x)))", "(all x.(Wren(x) -> Yugpus(x)) & all y.(Wren(y) -> Sterepus(y)) & all z.(Wren(z) -> Jompus(z))))", "all x.(Wren(x) -> (Yumpus(x) | Sterpus(x) | Jompus(x)))", "(Yumpus(Wren) & Sterpus(Wren) & Jompus(Wren))"]}
{"id": "prontoqa_train_1397", "nl": "Wren is not a brimpus, Wren is a lorpus, and Wren is a gorpus.", "fol": "(-brimpus(Wren) & lorpus(Wren) & gorpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Brompus(x)) & all y.(Wren(y) -> Lorpus(y)) & all z.(Wren(z) -> Gorpus(z))))", "all x y z.((Wren(x) & Bumpus(y) & Lorpus(z)) -> (-Brimpus(x) & Wolverine(x) & Gorpus(y)))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Borebus(y))) & all z.(Wren(z) -> Gorpus(z)))", "(all x.(Wren(x) & -Brimpus(x)) | (Lorpus(x) & Gorpus(x))))", "all x y z.((Scene(x) & Brimpus(y) & Lorpus(z) & Gorpus(z)) -> (-Bridge(x) | (-Lorpus(a) & Gorpus(a) & Gnome(z)))))", "all x y z.((Wren(x) & Brimpus(y) & Lord(z)) -> -(Brimpus(x) | Thorpus(z) | Garper(z))))", "all x y z.((Wren(x) & Brimpus(y) & Lorpus(z)) -> -Brimpus(x))", "(all x.(Wren(x) -> -Brimpus(x)) & (Lorpus(x) | Grempus(x))))", "and (all x.(Wren(x) -> -Brompus(x)) & all y.(Wren(y) -> Lorpus(y)) & all z.(Wren(z) -> Gorpus(z)))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Lorpus(y)) & all z.(Wren(z) -> Gorpus(z))))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Lorpus(y)) & all z.(Wren(z) -> Gorpus(z))))", "(all x.(Wren(x) -> -Brimpus(x)) & (Wren(x) -> Lorpus(x)) & (Wren(x) -> Gorpus(x)))", "all x y z.((Wren(x) & Brimpus(y) & Lorpus(z)) -> (-Brimpus(x) & Lorpus(x) & Gorpus(y)))", "(all x.(Wren(x) -> -Brimpus(x)) & (Lorpus(x) & Gorpus(x)))", "all x y z.((Wren(x) & Brimpus(y) & Lorpus(z) & Grimpus(x)) -> (-Brimpus(x) & -Lorpus(y) & -Gorpus(z)))", "all x y z.((Wren(x) & Brimpus(y) & Lorpus(z)) -> (-Brimpus(x) & Worpus(x) & Gorpus(y)))"]}
{"id": "prontoqa_train_1398", "nl": "Sterpuses are jompuses, brimpuses, and vumpuses.", "fol": "all x. (sterpus(x) -> (jompus(x) & brimpus(x) & vumpus(x)))", "prediction": ["all x.(Sterpus(x) -> (Jompuse(x) | Brimpuse(x) | Vampuse(x)))", "all x.(Sterpuse(x) -> (Jockuse(x) | Brimpus(x) | Vampuse(x)))", "all x.(Sterpus(x) -> (Jumpsuse(x) | Brimpus(x) | Vampuse(x)))", "all x.(Sterpus(x) -> (Jombuse(x) | Brimpus(x) | Vampuse(x)))", "all x.(Sterpus(x) -> (Jompuse(x) | Brimpus(x) | Vubix(x)))", "all x.(Sterpus(x) -> (Jompuse(x) | Brimpuse(x) | Venomuse(x)))", "all x.(Sterpuse(x) -> (Jompuse(x) | Brimpuse(x) | Vampuse(x)))", "all x.(Sterpus(x) -> (Jumpuse(x) | Brimpus(x) | Vampuse(x)))", "all x.(Sterpuse(x) -> (Jompus(x) | Brimpuse(x) | Vampuse(x)))", "all x.(Sterpus(x) -> (Jumpus(x) | Brimpuse(x) | Vulpusue(x)))", "all x.(Sterpus(x) -> (Jompus(x) | Brimpus(x) | Vampuse(x)))", "all x.(Sterpus(x) -> (Jompus(x) | Brimpuse(x) | Vampuse(x)))", "exists x.(Sterpus(x) & (Jimper(x) | Brimper(x) | Vumus(x)))", "all x.(Sterpus(x) -> (Jumpsuse(x) | Brimpus(x) | Vampuse(x)))", "all x.(Sterpus(x) -> (Jompuse(x) | Brimpuse(x) | Vampuse(x)))", "all x.(Sterpuse(x) -> (Jumpuse(x) | Brimpus(x) | Vampuse(x)))"]}
{"id": "prontoqa_train_1399", "nl": "Sally is not a brimpus and Sally is a numpus and Sally is a grimpus.", "fol": "(-brimpus(Sally) & numpus(Sally) & grimpus(Sally))", "prediction": ["all x y z.((Sally(x) & Brimpus(y) & Numpus(z)) -> -(Brimpus(x,y) & Nompus(x,z) & Grupus(x)))", "(all x.(Brumpus(x) -> -Brimpus(x)) & all y.(Numpus(y) -> Grimpus(y)))", "all x y.((Sally(x) & Brimpus(y) & Numpus(y)) -> (-Brimpus(x) & Numpus(y) & Grimpus(y)))", "(all x.(Sally(x) -> -Brimpus(x)) & (AidOf(x,numpus) & (AidOf(x,grimpus))))", "(-Brumpus(Sally) & Numpus(Sally) & Grapple(Sally))", "(all x.(Sally(x) -> -Brimpus(x)) & (Sally(x) -> Numpus(x)) & (Sally(x) -> Gruffus(x))))", "(exists x.(Sally(x) & -Brimpus(x)) & exists y.(Sally(y) & Numpus(y) & Grimpus(y)))", "all x y.((Sally(x) & -Brimpus(x) & Numpus(y) & Grimpus(z)) -> -Brimpus(x) & Numpus(y) & Grimpus(z)))", "(all x.(Sally(x) -> -Brimpus(x)) & all y.(Numpus(y) & Grimpus(y)))", "exists x y.((Sally(x) & -Brimpus(x)) | (numpus(y) & grimpus(y))))", "(all x.(Brimpus(x) -> -Bramboss(x)) & all y.(Numerus(y) | Grimpus(y))))", "(brimpus(c) | Numpus(c) | Grimpus(c)))", "(all x.(Sally(x) -> -Brimpus(x)) & (Number(x) -> Grimpus(x))))", "(Exclusive(Sally) | (HasBrimpus(Sally) & HasNumpus(Sally))) | (HasGrimpus(Sally) & HasGrimpus(Sally))))", "all x y z.((Sally(x) & Brimpus(y) & Numpus(z)) -> (-Brimpus(x) & -Numpus(x) & Gruppus(x)))", "(all x.(Sally(x) -> -Brumpus(x)) & (Numpus(x) | Grimpus(x))))"]}
{"id": "prontoqa_train_1400", "nl": "Polly is a rompus and Polly is not an impus and Polly is a jompus.", "fol": "(rompus(Polly) & -impus(Polly) & jompus(Polly))", "prediction": ["(all x.(Trompus(x) -> Polly)) & (NotImpossible(x) -> Polly(x))) & (Jompus(x) -> Polly)))", "all x y z.((Polly(x) & rompus(x) & Polly(y) & Jompus(z)) -> (Rompus(y) & -Issue(z) & Jompus(y)))", "(all x.(Polly(x) -> Rompus(x)) & (Polly(x) -> -Imposer(x))) & (Polly(x) -> Jompus(x)))", "all x y z.((Polly(x) & Rompus(y) & IsPlopPup(z)) -> (Impossible(x,y) & Jompus(x,z)))", "(all x.(OriginalCoon(x) -> Rompus(x)) & (OriginalCoon(x) -> -Imperial(x)) & (OriginalCoon(x) -> Jompus(x)))", "all x y.((Polly(x) & Rompus(x)) -> (-Impossible(x) & Jompus(y)))", "(all x.(Color(x) -> Roman(x)) & (Color(x) -> -Imperial(x)) & COlor(x)))", "(all x.((Pastol(x) & Rompus(x)) -> -Imperial(x)) & ((Pastol(x) & Jompus(x)) -> Jompus(x)))", "(all x.(Rocket(x) & Polly(x)) & (-Imperial(x) & Jompus(x)))", "all x y.((Rompus(x) & Polly(y)) -> (-Implanted(y) & Jompus(y)))", "(all x.((Pompus(x) & Rompus(x)) -> Is(x)) & all y.((Pompus(y) & -Impossed(y)) -> Jompus(y)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Polly(y) -> -Issue(y))) & all z.(Poly(z) -> Jompus(z)))", "all x.((Polly(x) & Rompus(x) & -Impact(x)) -> Jompus(x))", "(all x y.((Pose(x) & Rompus(x)) & -(Pose(y) & Impossible(y))) -> (Jompus(y)))", "(all x.(Pompus(x) | Pompus(x))) & ((Pompus(x) & NoIssue(x)) | Pompus(x))))", "(all x.(Trompus(x) & -Impossible(x)) & all y.(Jompus(y) -> PollyMove(x))))"]}
{"id": "prontoqa_train_1401", "nl": "Polly is a jompus, Polly is not a vumpus, or Polly is a numpus.", "fol": "(jompus(Polly) | -vumpus(Polly) | numpus(Polly))", "prediction": ["all x y.((Polly(x) & Jompus(x) | (-Vimpus(x) | Numpus(y))))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Vumpus(x)) | (Polly(x) -> Numpus(x))))", "all x y z.((Polly(x) & Jompus(y) & Polly(z)) | (-Vumpus(z) & Polly(x))))", "all x.((Polly(x) & Jompus(x)) | (-Vumpus(x) | Numpus(x))))", "(exists x.(Pool(x) & (Jimpus(x) | -Vimpus(x) | Numpus(x))))", "all x.((Poly(x) & (Jompus(x) | -Vimpus(x) | Numpus(x))) -> (Is(x,Jompus)) | Is(x,Vimpus)))", "all x.(Polby(x) -> (Jompus(x) | -Vimpus(x) | Numpus(x)))", "exists x y.((Poly(x) & (Hompus(x) | Volmpus(x) | Numpus(y))) -> (ColoredBy(x,y) & -Vumpus(y)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Vumpus(x)) | (Polly(x) -> Numpus(x))))", "all x.((Polly(x) & Jompus(x)) | (-Vumpus(x) | Numpus(x))))", "all x y.((Mompus(x) & Polly(y)) -> (Jompus(x) | -Vumpus(y) | Numpus(y)))", "(all x.(Polly(x) -> Jompus(x)) & all y.(Polly(y) -> -Vimpus(y))) & all z.(Polly(z) -> Numpus(z))))", "all x.((Polly(x) & (Jompus(x) | -Vumpus(x)) | Numpus(x)))", "(all x.(Polly(x) -> Jompus(x)) & (-Polly(x) | -Polly(x))))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Vumpus(x)) | (Polly(x) -> Numpus(x))))", "all x.(Polly(x) -> (Jompus(x) | -Vumpus(x)) | (-Vumpus(x) & Numpus(x))))"]}
{"id": "prontoqa_train_1402", "nl": "Everything that is a grimpus, a gorpus, or a rompus is a wumpus.", "fol": "all x. ((grimpus(x) | gorpus(x) | rompus(x)) -> wumpus(x))", "prediction": ["all x.((Smaller(x) | Gorpus(x) | Rompus(x)) -> Humpus(x))", "all x.((Grosspus(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Murptus(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Crompus(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Purpus(x) | Gorpus(x) | Rrompus(x)) -> Wompus(x))", "all x.((Smoker(x) | Gorpus(x) | Rompus(x)) -> Humpus(x))", "all x.((Gruppus(x) | Gorpus(x) | rompus(x)) -> Wumpus(x))", "all x.((Grampus(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Smirkpus(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Frumpus(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Smoothpus(x) | Gorpus(x) | Rompus(x)) -> Humpus(x))", "all x.((Pumpus(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Smokey(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Gruppus(x) | Gorpus(x) | Rompus(x)) -> Umbrella(x))", "all x.((Smooch(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Gurp(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))"]}
{"id": "prontoqa_train_1403", "nl": "Sally is a rompus and a grimpus and an impus.", "fol": "(rompus(Sally) & grimpus(Sally) & impus(Sally))", "prediction": ["(Rompus(Sally) & Grimpus(Sally) & Imperator(Sally))", "all x.(Sally(x) -> (IsOrpheus(x) | IsGrimpus(x) | Issue(x)))", "(all x.(Sally(x) -> Rompus(x)) & (Grimpus(x) & Imperator(x)))", "(all x.(Sally(x) -> Rompus(x)) & (Grimpus(x) & Imperia(x)))", "(rompus(Sally) & grimpus(Sally) & impus(Sally))", "all x.(Sally(x) -> (Rompus(x) & Grimpus(x) & Imperator(x)))", "all x.(Sally(x) -> (Rompus(x) & Grimpus(x) & Impunis(x)))", "Sally is rompus and grimpus and impus.", "(all x.(Sally(x) -> Rompus(x)) & (Grimpus(x) & Obssier(x)))", "(all x.(Sally(x) -> Rompus(x)) & (Grimpus(x) & ServedOfImmersion(x)))", "(all x.(Sally(x) -> Rompus(x)) & (Surprise(x) & Implicator(x)))", "all x.(Sally(x) -> (Rompus(x) & Grimpus(x) & Ilirpos(x)))", "(all x.(Sally(x) -> Rompus(x)) & (Grimpus(x) -> Grinchpus(x)) & (Illegal(x) -> Rooms(x))))", "(Rompus(Sally) & Grimpus(Sally) & Issuel(Sally))", "(all x.(Sally(x) -> rompus(x)) & all y.(Grimpus(y) -> grimpus(y)) & all z.(Impossible(z) -> rompus(y))))", "(exists x.(Sally(x) & Roman(x)) & exists y.(Grimpus(y) & Crusade(y)) & exists z.(Impermiss(z) & Involves(z))))"]}
{"id": "prontoqa_train_1404", "nl": "Numpuses are impuses and shumpuses and dumpuses.", "fol": "all x. (numpus(x) -> (impus(x) & shumpus(x) & dumpus(x)))", "prediction": ["all x y.((Numpus(x) & shumpus(y)) -> (Imposition(x) | Dumpuse(y)))", "all x.(Numpuse(x) -> (Issue(x) | (ShumpusE.(x) | Dumpuse(x)))))", "all x.(Numpuse(x) -> (Impose(x) | Humpus(x) | Dumpuse(x)))", "all x y.((Numpuse(x) & Issue(x)) -> (Shumpus(x) | Dumpuse(x)))", "all x.(Numpus(x) -> (Immues(x) & Shumpuses(x) & Dumpuses(x)))", "all x.(Numpuse(x) -> (Issue(x) | (Shumpuse(x) | Dumpuse(x)))))", "all x.(Numpus(x) -> (Impose(x) | Shumpus(x) | Dumpus(x)))", "(all x y.(Numpuse(x) -> Illegal(x)) & (Shumpus(y) | Dumpuse(y)))", "all x.(Numpuse(x) -> (Issue(x) & Shumpus(x) & Dumpuse(x)))", "all x.(Numpuse(x) -> (Implicator(x) | Shumpus(x) | Dumpuse(x)))", "all x.(Numpuse(x) -> (Issue(x) | Sumpfus(x) | Dumpuse(x)))", "all x.(Numpuse(x) -> (Impossible(x) | Simpuse(x) | Dumpuse(x)))", "all x.(Numpuse(x) -> (Impose(x) | Shumpus(x) | Dumpuse(x)))", "all x.(Numpuse(x) -> (Impossible(x) | Schumpus(x) | Dumpuse(x)))", "all x.(Numpuse(x) -> (Impoze(x) | (Shumpuse(x) | Dumpuse(x)))))", "all x.(Numpuse(x) -> (Issue(x) | Shimpuse(x) | Dumpuse(x)))"]}
{"id": "prontoqa_train_1405", "nl": "Rex is a yumpus, a dumpus, or a brimpus.", "fol": "(yumpus(Rex) | dumpus(Rex) | brimpus(Rex))", "prediction": ["all x.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Dumbas(x) | Brimpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Yumpus(x) | Dumpus(x) | Brimpus(x))", "all x.(Rex(x) : (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "all x y.((Rex(x) & (Yumpus(x) | Dumpus(x) | Brimpus(x))) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Rex.(Yumpus(x) | Dumpus(x) | Brimpus(x)) -> Rex(x))", "all x.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Dumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_1406", "nl": "Tumpuses are yumpuses, wumpuses, and rompuses.", "fol": "all x. (tumpus(x) -> (yumpus(x) & wumpus(x) & rompus(x)))", "prediction": ["all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "exists x.(Tumpus(x) & (Is(yumpus) | Is(yumpus)) | Is(yumpus) | Is(yumpus)) | Is(yumpus) | Is(yumpus) | Is(yumpus) | Is(yumpus) | Is(yumpus) | Is(yumpus)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wrumpus(x) | Rompus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Tumpe(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Wumpus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1407", "nl": "Sam is a gorpus, Sam is not a yumpus, and Sam is a rompus.", "fol": "(gorpus(Sam) & -yumpus(Sam) & rompus(Sam))", "prediction": ["(all x.(Sam(x) -> Gorpus(x)) & ((Sam(x) & -Yumpus(x))) -> Rompus(x)))", "all x y z.((Sam(x) & Gorpus(x) & Sam(y) & Yumpa(z)) -> (-Yumpus(y) & Rompus(z)))", "(all x.(Rompus(x) -> Gorpus(x)) & all y.(Rompus(y) -> -Yumpus(y)))", "all x y z.((Sam(x) & Ryumpus(y) & Rompus(z)) -> (Gorpus(x) & -Yumpus(y) & -Sam(z)))", "(all x.(Sam(x) -> Gorpus(x)) & -Yumpus(x) & Rompus(x))", "all x y z.((Sam(x) & Gorpus(y) & Yumpa(z)) -> (IsRompus(x) | IsYumpus(x) & IsRompus(x)))", "all x y.((Sam(x) & Gorpus(x)) -> ((Borish(x) | -Yumpus(x)) & Rompus(x))))", "(all x.(Sam(x) -> Gorpus(x)) & all y.(Sam(y) -> -Yumpus(y)) & all z.(Sam(z) -> Rompus(z))))", "(all x.(Sam(x) -> Gorpus(x)) & (-Sam(x) -> Yumpus(x)) & (-Sam(x) -> Rosmpus(x)))", "all x.((Sam(x) & Gorpus(x)) -> (-Yumpus(x) & Rompus(x)))", "(all x.(Sam(x) -> Gorpus(x)) & (NoYumpus(x) | Rupus(x))))", "all x y z.((Answer(x) & Sam(y) & Yampus(z)) -> (Gorpus(x) & -Yumpus(y) & Rompus(z)))", "all x y z.((Sam(x) & Gorpus(y) & Yumpus(z)) -> (Gorpus(x) | Rrompus(x)))", "(all x y z.((Sam(x) & Gorpus(x)) -> Gorpus(x)) & ((Sam(y) & -Yumpus(y)) -> Rompus(z)))", "all x y z.((Sam(x) & Gorpus(y) & Yampus(z)) -> (Gorpus(x) | -Yumpus(y) | -rompus(z)))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> -Yumpus(x)) & (Sam(x) -> Rompus(x)))"]}
{"id": "prontoqa_train_1408", "nl": "Fae is a yumpus, Fae is not a rompus, and Fae is a wumpus.", "fol": "(yumpus(Fae) & -rompus(Fae) & wumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Yampus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Wumpus(x)))", "(all x.(Fae(x) -> Yumpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Wumpus(x)))", "(all x.(Fae(x) -> Yompus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Wumpus(x)))", "(all x y.(Faaz(x) -> Yumpa(x)) & (Faaz(y) -> -Rompus(y)) & (Faaz(y) -> Wumpus(y)))", "(all x y z.((Fae(x) & Yumpus(y) & -Yampus(z)) -> (Yumpus(x) | Rompus(z)) | Wumpus(w)))", "(all x.(Fae(x) -> Yampus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Wumpus(x)))", "all x.(Fae(x) -> (Yumpus(x) | -Rompus(x) | Wumpus(x)))", "(all x.(Fae(x) -> Yampus(x)) & (-Fae(x) -> Rompus(x)) & (Fae(x) -> Wumpus(x)))", "(all x.(Fae(x) -> Yampus(x)) & (-Republican(x) | Wumpus(x))))", "(all x.(Fae(x) -> Yampus(x)) & (-Fae(x) -> Rompus(x)) & (-Fae(x) -> Wumpus(x)))", "(all x.(Fae(x) -> Yampus(x)) & (-Rompus(x) & (Wumpus(x) | -Yumpus(x))))", "(all x y z.((Fae(x) & Yampus(y)) -> Yampus(x)) & ((Fae(z) & -Rompus(z))) -> Wumpus(z)))", "(all x.(Fae(x) -> Yampus(x)) & all y.(Fae(y) -> -Rompus(y)) & all z.(Fae(z) -> Wumpus(z))))", "(all x.(Fae(x) -> Yampus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Wumpus(x)))", "all x y z.((Fae(x) & Rumpus(y) & Humpus(z)) -> (Yumpus(x) | -Rompus(y) | -WumpusParent(z)))", "(all x.(Fae(x) -> Yukon(x)) & (NotRompus(x) & -Wumpus(x)))"]}
{"id": "prontoqa_train_1409", "nl": "Everything that is a wumpus, a zumpus, and a jompus is a numpus and a brimpus and an impus.", "fol": "all x. ((wumpus(x) & zumpus(x) & jompus(x)) -> (numpus(x) & brimpus(x) & impus(x)))", "prediction": ["all x.((Wumpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Brimpus(x) & Issue(x)))", "all x.((Sumpus(x) & Zumpus(x) & Jompus(x)) -> (Rumpen(x,num) & Brimpus(x) & Issue(x)))", "all x.((Wumpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Brimpus(x) & Impermant(x)))", "all x.((Sumpus(x) & Zumpus(x) & Jompus(x)) -> (numpus(x) & brimpus(x) & impus(x)))", "all x.((Wempus(x) | Zumpus(x) | Jompus(x)) -> (Nompus(x)) & Brimpus(x) & Impeller(x)))", "all x.((Wumpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) | Brimpus(x) | Imperator(x)))", "all x.((Wumpus(x) & Zumpus(x) & Jompus(x)) -> (Numpus(x) & Brimpus(x) & Imperator(x)))", "all x.((Wumpus(x) | Zumpus(x) | Jompus(x)) -> (Numerus(x) & Brimpus(x) & Issue(x)))", "all x.((Wumpus(x) | Zumpus(x) | Jompus(x)) -> (Numerus(x) & Brimpus(x) & Ersetzend(x)))", "all x.((Wumpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Brimpus(x) & Imperator(x)))", "all x.(((Wumpus(x) | Zumpus(x) | Jompus(x))) -> (Numpus(x) & Grimps(x) & Issue(x)))", "all x.(((Wumpus(x) | Zumpus(x) | Jompus(x))) -> (Numpus(x) & Brimpus(x) & Imperator(x)))", "all x.((Wumpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Brimpus(x) & Imperman(x)))", "all x.((Wumpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Brimpus(x) & Imperator(x)))", "all x.((Wumpus(x) | Zumpus(x) | Jompus(x)) -> (Number(x) | Brimpus(x) | Obsidian(x)))", "all x.((Wumpus(x) | Zumpus(x) | Jompus(x)) -> (Numpus(x) & Brimpus(x) & Imperempt(x)))"]}
{"id": "prontoqa_train_1410", "nl": "Each zumpus is a sterpus.", "fol": "all x. (zumpus(x) -> sterpus(x))", "prediction": ["all x.(Zumpus(x) -> Sterus(x))", "all x.(Zumpus(x) -> Sterus(x))", "all x.(Tompus(x) -> Sterpus(x))", "all x.(Zumpus(x) -> Sterpus(x))", "all x.(Tompus(x) -> Sterpus(x))", "all x.(Zumpus(x) -> Sterpus(x))", "all x.(Zumpus(x) -> Sterpus(x))", "all x.(Zumpus(x) -> Sterpus(x))", "all x.(Zumpus(x) -> Sterpus(x))", "all x.(Zumpus(x) -> Sterpus(x))", "all x.(Tompus(x) -> Sterpus(x))", "all x.(Tompus(x) -> Sterpus(x))", "all x.(Zumpus(x) -> Sterpus(x))", "all x.(Zumpus(x) -> Sterpus(x))", "all x.(Tompus(x) -> Sterpus(x))", "all x.(Zumpus(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_1411", "nl": "Polly is a shumpus.", "fol": "shumpus(Polly)", "prediction": ["all x.((Polly(x) & Humpback(x)) -> Shumpus(x))", "(HasShumpus(Polly)", "all x.(Shumpus(x) -> Polly(x))", "Polly (ReinforcedTraitor(Polly))", "Polly is a shumpus.", "all x.(Polly(x) -> Humpback(x))", "(Shumpus(p) & Polly(p))", "(Shumpus(Polly) -> Shumpus(Polly))", "all x.(Shumpus(x) -> Polly(x))", "all x.(Polly(x) -> Humpus(x))", "all x.(Shumpus(x) -> Polly(x))", "all x.(Owl(x) -> Humpus(x))", "all x.(Shumpus(x) -> Polly(x))", "all x.(Polly(x) -> Humpus(x))", "all x.(Polly(x) -> Humpus(x))", "all x.(Polly(x) -> Humptious(x))"]}
{"id": "prontoqa_train_1412", "nl": "Polly is a jompus, Polly is not a zumpus, or Polly is a lempus.", "fol": "(jompus(Polly) | -zumpus(Polly) | lempus(Polly))", "prediction": ["(all x.(Polly(x) -> (Jompus(x) | -Tommpus(x) | Lampus(x))))", "exists x y z.((Polly(x) & Jompus(y) & (NoZumpus(z) | Lempus(z)))", "(all x y z w.((Polly(x) & Jompus(y) & Polly(z)) -> (NoTommus(g) | Lempus(w))))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Zumpus(x)) | (Polly(x) -> Lempus(x))))", "exists x.(Tompus(x) | Zumpus(x) | Lempus(x)))", "(all x.(Polly(x) -> Jompus(x)) & all y.(Polly(y) -> -Zumpus(y))) & all z.(Polly(z) -> Lempus(z)))", "(all x.(Polly(x) -> Jompus(x)) | (-Polly(x) & Zumpus(x)) | (-Polly(x) & Lempus(x))))", "all x.((Polly(x) & Jompus(x)) | (-Zumpus(x) & Polly(x))))", "all x y.((Polly(x) & Jompus(x)) | (Polly(y) & -Zimpus(y)) | (Polly(z) & Lempus(z))))", "(exists x.(Polly(x) & Jompus(x)) | (-Zaporpus(x)) | (Lempus(x) & Polly(x)))))", "(all x.(Polly(x) -> Jompus(x)) | (-Polly(x) & Zummer(x))) | (-Polly(x) & Lempus(x))))", "all x.((Potolary(x) & Jompus(x)) | (-Tompus(x) | Lempus(x))))", "all x y.((Polly(x) & Jompus(x)) | (-Tommpus(x) | Lempus(x))))", "(all x.(Polly(x) -> Jompus(x)) | (Polly(x) & -Zumpus(x)) | (Polly(x) & Lempus(x))))", "(all x.(Volume(x) -> Jompus(x)) | (-Volume(x) & -Volume(x))))", "all x.((Polly(x) & (Jumpus(x) | -Zumpus(x) | Lempus(x))) -> Polly(x))"]}
{"id": "prontoqa_train_1413", "nl": "Everything that is a tumpus, a wumpus, and a jompus is a grimpus and a brimpus and a yumpus.", "fol": "all x. ((tumpus(x) & wumpus(x) & jompus(x)) -> (grimpus(x) & brimpus(x) & yumpus(x)))", "prediction": ["all x.(((Tumpus(x) | Wumpus(x) | Jompus(x))) -> (Smoothpus(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Wumpus(x) | Jompus(x)) -> (Grippus(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Wumpus(x) | Jompus(x)) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Wumpus(x) | Jompus(x)) -> (Smoke(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Wompus(x) | Jompus(x)) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Wumpus(x) | Jompus(x)) -> (Grimpus(x) & Brimpus(x) & Yampus(x)))", "all x.((Tumpus(x) | Wumpus(x) | Jompus(x)) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Wumpus(x) | Jompus(x)) -> (Smoothpus(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Wumpus(x) | Jompus(x)) -> (Smokey(x) | Brimpus(x) | Yumpus(x)))", "all x.((Tumpus(x) | Wumpus(x) | Jompus(x)) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Wumpus(x) | Jompus(x)) -> (Grimpus(x) & Brimpus(x) & Yumps(x)))", "all x.((Tumpus(x) & Wumpus(x) & Jompus(x)) -> (Scrooge(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Wumpus(x) | Jompus(x)) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Wumpus(x) | Jompus(x)) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) & Wumpus(x) & Jompus(x)) -> (Grampus(x) & Brimpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Wumpus(x) | Jompus(x)) -> (Grimpus(x) & Brimpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1414", "nl": "Fae is a jompus.", "fol": "jompus(Fae)", "prediction": ["all x.(Fae(x) -> Jompus(x))", "all x.(Fae(x) -> Jompus(x))", "all x.(Ae(x) -> Jompus(x))", "Fae is a Jompus.", "(Jomeus(Fae) -> Jompus(Fae))", "all x.(Fae(x) -> Jompus(x))", "all x.(Fae(x) -> Jompus(x))", "all x.(Fae(x) -> Jompus(x))", "(Jompus(Fae))", "all x.(Fae(x) -> Jompus(x))", "(Melody(Fae) & Jompus(Fae))", "all x.(Fae(x) -> Jompus(x))", "all x.(Fae(x) -> Jompus(x))", "all x.(Fae(x) -> Jompus(x))", "all x.(Fae(x) -> Jompus(x))", "exists x.(Fae(x) & Jompus(x))"]}
{"id": "prontoqa_train_1415", "nl": "Everything that is a tumpus or a wumpus or a zumpus is a lempus, a gorpus, and an impus.", "fol": "all x. ((tumpus(x) | wumpus(x) | zumpus(x)) -> (lempus(x) & gorpus(x) & impus(x)))", "prediction": ["all x.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) | Gorpus(x) | Imitator(x)))", "all x.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) & Gorpus(x) & Institution(x)))", "all x.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) & Gorpus(x) & Imperator(x)))", "all x.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) & Gorpus(x) & Issue(x)))", "all x.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) | Gorpus(x) | Ispected(x)))", "all x.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) | Gorpus(x) | Imperator(x)))", "all x.((Tumpus(x) | Humpus(x) | Zumpus(x)) -> (Lempus(x) & Gorpus(x) & Impossivus(x)))", "all x.(TumpusOrWumpusOrTompus(x) -> (Lempus(x) | Gorpus(x) | Isolate(x)))", "all x.((Tumpus(x) | Wumpus(x) | Zunpus(x)) -> (Lempus(x) & Gorpus(x) & Impera(x)))", "all x.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) | Gorpus(x) | Exercise(x)))", "all x.((Tumpus(x) | Wompus(x) | Zumpus(x)) -> (Limpus(x) | Gorpus(x) | Imperator(x)))", "all x.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) & Gorpus(x) & Imperator(x)))", "all x.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) | Gorpus(x) | Issue(x)))", "all x.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) & Gorpus(x) & Imperator(x)))", "all x y.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(y) | Gorpus(y) | Impossible(y)))", "all x.((Tumpus(x) | Wumpus(x) | Zumpus(x)) -> (Lempus(x) & Gorpus(x) & Imperative(x)))"]}
{"id": "prontoqa_train_1416", "nl": "Everything that is a lorpus, a yumpus, or a gorpus is a wumpus and a jompus and a lempus.", "fol": "all x. ((lorpus(x) | yumpus(x) | gorpus(x)) -> (wumpus(x) & jompus(x) & lempus(x)))", "prediction": ["all x.((Lorpus(x) | Yumus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x.((Lorpus(x) | Yampus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x.((Lorpus(x) | Yumpus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "(all x.(Lorpus(x) | Yumpus(x) | Gorpus(x))) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x.((Lorpus(x) | Yumpus(x) | Gorpus(x)) -> (Wumpus(x) | Jompus(x) | Lempus(x)))", "all x.((Lorpus(x) | Yumpus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x.((Lorpus(x) | Yampus(x) | Gorpus(x)) -> (Wumpus(x) -> Jompus(x) & Lempus(x)))", "all x.((Lorpus(x) | Yumpus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x.((Lorpus(x) | Yampus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x.((Lorpus(x) | Yumpus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x.((Lorpus(x) | Yampus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x.((Lorpus(x) | Yampus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x.((Lorpus(x) | Yumpus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x.((Weaver(x) & (Lorpus(x) | Yumpus(x) | Gorpus(x))) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x.((Lorpus(x) | Yampus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))", "all x.((Lorpus(x) | Yumpus(x) | Gorpus(x)) -> (Wumpus(x) & Jompus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_1417", "nl": "Each gorpus is a wumpus, a sterpus, and a brimpus.", "fol": "all x. (gorpus(x) -> (wumpus(x) & sterpus(x) & brimpus(x)))", "prediction": ["all x.(Gorpus(x) -> (Wumpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Gorpus(x) -> (Wumpus(x) | Sterostpus(x) | Brimpus(x)))", "all x.(Gorpus(x) -> (Wumpus(x) & Sterpus(x) & Brimpus(x)))", "(all x.(Gorpus(x) -> Wumpus(x)) & all y.(Sterpus(y) & -Wumpus(y)) & all z.(Brimpus(z) -> Brimpus(z))))", "all x.(Gorpus(x) -> (Wumpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Gorpus(x) -> (Wumpus(x) & Steroid(x) & Brimpus(x)))", "all x.(Gorpus(x) -> (Wumpus(x) | Sterpus(x) | Brimpus(x)))", "(all x.(Gorpus(x) -> Wumpus(x)) & all y.(Steerpus(y) -> Brimpus(y)))", "all x.(Gorpus(x) -> (Wumpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Gorpus(x) -> (Wumpus(x) & Sterpus(x) & Brimpus(x)))", "all x.(Gorpus(x) -> (Wumpus(x) & Steroid(x) & Brimpus(x)))", "all x.(Gorpus(x) -> (Wumpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Gorpus(x) -> (Owumpus(x) & Owsterpus(x) & Owlorpus(x) & Owlorpus(x)))", "all x.(Gorpus(x) -> (Wumpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Gorpus(x) - (Wumpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Gorpus(x) -> (Wumpus(x) & Sterus(x) & Brimpus(x)))"]}
{"id": "prontoqa_train_1418", "nl": "Sally is a brimpus, an impus, or a lempus.", "fol": "(brimpus(Sally) | impus(Sally) | lempus(Sally))", "prediction": ["all x.(Sally(x) -> (Brumpus(x) | Imperative(x) | Lempus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Imperative(x) | Lempus(x)))", "all x.(Sally(x) -> ((Brimpus(x) | Impossible(x) | Lempus(x))))", "(Brimpus(Sally) | Issued(Sally) | Lempus(Sally))", "all x.(Sally(x) -> (Brimpus(x) | Imperia(x) | Lempus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Impossible(x) | Lempus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Issue(x) | Lempus(x)))", "exists x.(Sally(x) & (Brimpus(x) | Isolat(x) | Lempus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Impossible(x) | Lempus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Impermiss(x) | Lempus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Imperator(x) | Lempus(x)))", "all x.(Sally(x) -> (Pipe(x) | Issue(x) | Lempus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Imperative(x) | Lempus(x)))", "all x.(Sally(x) -> (Beampus(x) | Impossible(x) | Lempus(x)))", "exists x.(Sally(x) & (Brimpus(x) | Imperator(x) | Lempus(x)))", "all x.(Sally(x) -> (Brimpus(x) | Impossible(x) | Lempus(x)))"]}
{"id": "prontoqa_train_1419", "nl": "Everything that is a sterpus or an impus or a numpus is a zumpus.", "fol": "all x. ((sterpus(x) | impus(x) | numpus(x)) -> zumpus(x))", "prediction": ["all x.((Sterpus(x) | Impenet(x) | Numpus(x)) -> Zumpus(x))", "all x.((Steerpus(x) | Impossible(x) | Numpus(x)) -> Zumpus(x))", "all x.((Streep(x) | Impeach(x) | Numpus(x)) -> Zumpus(x))", "all x.((Sterpus(x) | ImpossibleDesire(x) | Numpus(x)) -> Zumpus(x))", "all x.((Sterpus(x) | Implicit(x) | Numpus(x)) -> Zumpus(x))", "all x.((Shrpus(x) | Izrael(x) | Nompus(x)) -> Zumpus(x))", "all x.((AsSterepus(x) | AsEffort(x) | AsNumpus(x)) -> Zumpus(x))", "all x.((Sterpus(x) | Impossible(x) | Numpus(x)) -> Zumpus(x))", "all x.((Sterectus(x) | Impossible(x) | Numpus(x)) -> Zumpus(x))", "all x.((Sterpus(x) | Imperva(x) | Numpus(x)) -> Zumpus(x))", "all x.((Sterepus(x) | Imperator(x) | Numpus(x)) -> Zumpus(x))", "all x.((Sterpus(x) | IsImprovised(x) | IsNumerus(x)) -> Zumpus(x))", "all x.((HasSterpus(x) | HasImpose(x) | HasNumpus(x)) -> Zumpus(x))", "all x.((Asterpus(x) | IsImpossed(x) | IsNompus(x)) -> Zumpus(x))", "all x.((Sterpus(x) | Imperative(x) | Numpus(x)) -> Zumpus(x))", "all x.((Steerpus(x) | Imperator(x) | Numpus(x)) -> Zumpus(x))"]}
{"id": "prontoqa_train_1420", "nl": "Rex is not a zumpus and Rex is a gorpus and Rex is a brimpus.", "fol": "(-zumpus(Rex) & gorpus(Rex) & brimpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Zimpus(x)) & (Gorpus(x) & Brimpus(x)))", "all x y z.((Rex(x) & Zumpus(y) & Gorpus(z)) -> (-Tompus(x) & Brimpus(x)))", "(all x.(Rex(x) -> -Zumpus(x)) & (Gorpus(x) -> Brimpus(x)))", "(-Zumpus(Rex) | Gorpus(Rex) | Brimpus(Rex)))", "(all x.(Rex(x) -> -Zumpus(x)) & (Rex(x) -> Gorpus(x)) & (Rex(x) -> Brimpus(x)))", "(all x.(Rex(x) -> NotZumpus(x)) & (Ewa(x) -> Gorpus(x)) & (Brimpus(x) -> -Atompus(x)))", "all x y z.((Rex(x) & Zumpus(y) & Gorpus(z)) -> (-Tomma(x) & Gorpus(y) & Brimpus(z)))", "(all x.(Rex(x) -> -Zumpus(x)) & ((Rex(x) & Wormpus(x))) -> Brimpus(x)))", "(all x.(Rex(x) -> -Zoompus(x)) & all y.(Gorpus(y) & all z.(Brompus(z)) -> -Bustus(x)))", "(all x.(Rex(x) -> -Zimpus(x)) & (Gorpus(x) & Brimpus(x)))", "(-Zumpus(Rex) | Gorpus(Rex) | Brimpus(Rex)))", "all x y z.((Rex(x) & Zumpus(y) & Gorpus(z) & Brimpus(x)) -> (-Zumpus(x) & Gorpus(x) & Brimpus(x)))", "((Rex,z) & -Zumpus(z)) | (-Zumpus(z) & Gorpus(z) & Brimpus(z))))", "((Rex(x) & -Zumpus)) | (Gorpus(x) & Brimpus(x))))", "((Rex,zumpus) & Not(x)) | (Gorpus(x) & Brimpus(x))))", "all x y z.((Rex(x) & Zumpus(y) & Gorpus(z)) -> (-Zumpus(x) & -Rainforest(x) & -Brimpus(x)))"]}
{"id": "prontoqa_train_1421", "nl": "Wumpuses are gorpuses, grimpuses, and sterpuses.", "fol": "all x. (wumpus(x) -> (gorpus(x) & grimpus(x) & sterpus(x)))", "prediction": ["all x.(Wumpus(x) -> (Gorpuse(x) | Grimpuse(x) | Sterpuse(x)))", "all x.(Wumpuse(x) -> (Gorpuse(x) | Grimpuse(x) | Sterpuse(x)))", "all x.(Wimpuse(x) -> (Sorpuse(x) | Grimpuse(x) | Sterpuse(x)))", "all x.(Wumpuse(x) -> (Ortpuse(x) | Grimpuse(x) | Sterpuse(x)))", "all x.(Wampuse(x) -> (Gorpuses(x) | Grimpuses(x) | Sterpuses(x)))", "all x.(Wurmpuse(x) -> (Gorpuse(x) | Grimpuse(x) | Sterpuse(x)))", "all x y.((Wumpuse(x) & Gorpus(y)) -> (Grimpus(x) | Sterpus(y)))", "(all x.(Wumpuse(x) -> (Gorpuse(x) | Grimpuse(x) | Sterpuse(x)))", "all x.(Wumpuse(x) -> (Gorpuse(x) | Grimpuse(x) | Sterpuse(x)))", "all x y z.((Wimpuse(x) & Gorpus(y) & Grimpuse(z)) -> (Sterpuse(x) | Steroid(y)))", "all x.(Wumpus(x) -> ((Gorpus(x) | Grimpus(x) | Sterpus(x))))", "all x.(Wumpus(x) -> (Gorpus(x) | Grimpus(x) | Sterpus(x)))", "all x.(Wumpuse(x) -> (Gorpuse(x) | Grimpuse(x) | Sterpuse(x)))", "all x.(Wumpus(x) -> (Gorpuse(x) | Grimpuse(x) | Sterpuse(x)))", "all x.(Wumpus(x) -> (Gorpuse(x) | Grimpuse(x) | Sterpuse(x)))", "all x.(Wumpuse(x) -> (Gorpuse(x) | Grimpuse(x) | Sterpuse(x)))"]}
{"id": "prontoqa_train_1422", "nl": "Wren is not a grimpus, Wren is a shumpus, and Wren is an impus.", "fol": "(-grimpus(Wren) & shumpus(Wren) & impus(Wren))", "prediction": ["(all x.(Wren(x) -> -Grimpus(x)) & all y.(Wren(y) -> Shumpus(y)) & all z.(Wren(z) -> Implote(z)))", "(all x.(Wren(x) -> -Grimpus(x)) & all y.(Wren(y) -> Shumpus(y)) & all z.(Wren(z) -> Essertaortic(z))))", "all x.(Wren(x) -> (-Grimpus(x) | Shumpus(x) | Imperator(x)))", "(all x.((Wren(x) & -Grimpus(x)) -> Shumpus(x)) & all y.((Wren(y) & Implicit(y)) -> Prestige(y)))", "(all x y z.(Wren(x) -> (-Grimpus(x) & Grimpus(y))) & (-Smothpus(z) & Humpus(z) & Illusion(z))))", "all x y z.((Ween(x) & Grimpus(y) & Shumpus(z)) -> (-Grimpus(x) | Shumpus(y) | Impossible(z)))", "exists x y z.(Wren(x) & Grimpus(y) & Shumpus(z) & Requires(x,y) & Is(x,z))", "(all x y.((Wren(x) & Grimpus(x,y)) -> -Grimpus(x)) & ((Wren(y) & Humpus(y)) -> Imperator(y)))", "(all x.(Wren(x) -> -Grimpus(x)) & all y.(Wren(y) -> -Shumpus(y))) & all z.(Wren(z) -> Issue (z))))", "all x.((Wren(x) & -Grimpus(x)) -> (Shumpus(x) & Imperator(x)))", "(all x.(Wren(x) -> -Grimpus(x)) & all y.(Wren(y) -> Shumpus(y)) & all z.(Wren(z) -> Impossible(z))))", "exists x.(Wren(x) & -Grisps(x) & Shumpus(x) & Injector(x))", "(all x.(Wren(x) -> -Grimpus(x)) & (Wren(x) -> Shumpus(x)) & (Wren(x) -> Imperita(x)))", "(all x y z.((Wren(x) & Grumpus(y)) -> -Grimpus(x)) & ((Wren(z) & Humpus(z))) -> Imperator(x)))", "(2Glarus(Wren) & -Grumpus(Wren) & Humpus(Wren) & Impermissible(Wren))", "(all x.(Wren(x) -> -Grimpus(x)) & (Wren(x) -> shumpus(x)) & (Wren(x) -> Implizes(x)))"]}
{"id": "prontoqa_train_1423", "nl": "Every lempus is a numpus, a vumpus, and a wumpus.", "fol": "all x. (lempus(x) -> (numpus(x) & vumpus(x) & wumpus(x)))", "prediction": ["all x.(Lempus(x) -> (Numpus(x) | Voompus(x) | Wumpus(x)))", "all x.(Lempus(x) -> (numpus(x) | vidpus(x) | wumpus(x)))", "all x.(Lempus(x) -> (Numpus(x) & Vumpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> (Numpus(x) & Voimpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> (Numpus(x) | Vumpus(x) | Wumpus(x)))", "all x.(Lempus(x) -> (numpus(x) & vumpus(x) & wumpus(x)))", "all x.(Lempus(x) -> (Numpus(x) & Vumpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> (Numpus(x) | Voompus(x) | Wempus(x)))", "all x.(Lempus(x) -> (Cumpus(x) | Vampus(x) | Wumpus(x)))", "all x.(Lempus(x) -> (numpus(x) | vumpus(x) | wumpus(x)))", "all x.(Lempus(x) -> (Numpus(x) | Vempus(x) | Wompus(x)))", "(all x.(Limpus(x) -> Numpus(x)) & all y.(Vimpus(y) -> Taurus(y))) & all z.(Vimpus(z) -> Taurus(z)))", "all x.(Lempus(x) -> (Numpus(x) | Vumpus(x) | Wumpus(x)))", "all x.(Lempus(x) -> (Numpus(x) | Vumpus(x) | Lumpus(x)))", "all x.(Lempus(x) -> (Numpus(x) & Verumpus(x) & Wumpus(x)))", "(all x.(Lempus(x) -> (Nompus(x) & Vampus(x) & Wumpus(x)))"]}
{"id": "prontoqa_train_1424", "nl": "Rex is a rompus, a yumpus, or a numpus.", "fol": "(rompus(Rex) | yumpus(Rex) | numpus(Rex))", "prediction": ["all x.(Rex(x) -> (Rompus(x) | Yuumpus(x) | Numpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Youngpus(x) | Numpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x)))", "(Rompus(relex) | Yumpus(relex) | Numpus(relex)))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x)))", "all x.(Rex(x) -> (Romes(x) | Yompus(x) | Numpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x)))", "all x.(Rex(x) -> ((Rompus(x) | Yumpus(x) | Numpus(x))))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Numpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Yampus(x) | Numpus(x)))"]}
{"id": "prontoqa_train_1425", "nl": "Numpuses are not rompuses.", "fol": "all x. (numpus(x) -> -rompus(x))", "prediction": ["all x.(Nupuse(x) -> -Rophe(x))", "all x.(Numpus(x) -> -Rompus(x))", "all x.(Numpus(x) -> -rompus(x))", "all x.(Numpus(x) -> -Rompus(x))", "all x.(Numpus(x) -> -Rompus(x))", "all x.(Numpus(x) -> -Rompus(x))", "All x.(Numpus(x) -> -Rompus(x))", "all x.(Numpus(x) -> -Rompus(x))", "all x.(Numpus(x) -> -Rompus(x))", "(all x.(Numpus(x) -> NotRompus(x)))", "(-Rompus(numpuse))", "all x.(Numpus(x) -> -Rophuse(x))", "all x.(Numpus(x) -> -Rompus(x))", "all x.(Numpus(x) -> -Rompus(x))", "all x.(Numpuse(x) -> -Romes(x))", "all x.(Numpus(x) -> -Rompus(x))"]}
{"id": "prontoqa_train_1426", "nl": "Vumpuses are rompuses.", "fol": "all x. (vumpus(x) -> rompus(x))", "prediction": ["all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Romanose(x))", "all x.(Vumpus(x) -> Rompus(x).", "all x.(Vumpus(x) -> Rompus(x))", "all x y z.((Vumpus(x) & Rompus(y) & Animal(z)) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Volumpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_1427", "nl": "Alex is a yumpus, Alex is a dumpus, or Alex is not a vumpus.", "fol": "(yumpus(Alex) | dumpus(Alex) | -vumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Yumpus(y) & (Dumpus(z) | -Vumpus(z))) -> (Yumpus(x) | Dumpus(z)))", "(exists x.(Alex(x) & Yampus(x)) & exists y.(Dumpus(y) & Dumpus(y))) & (NoVumpus(y) | -Vumpus(y))))", "all x.(Alex(x) -> (Yumpus(x) | Dumpus(x) | -Vumpus(x)))", "all x y z.((Alex(x) & Yumpus(y) & Dumpus(z)) -> (Yumpus(x) | -Vumpus(x)))", "all x.(Alex(x) & (Yumpus(x) | Dumpus(x) | -Vumpus(x)))", "all x.(Alex(x) -> (Yumpus(x) | Dumpus(x) | -Vumpus(x)))", "all x.(Alex(x) -> (Yumpus(x) | Dumpus(x) | -Vumpus(x)))", "(all x.(Alex(x) -> Yampus(x)) | (Alex(x) -> Dumpus(x))))", "all x.(Alex(x) -> (Yumpus(x) | Dumpus(x) | -Vumpus(x)))", "(all x.(Alex(x) -> Yumps(x)) | (Alex(x) -> Dumpus(x)) | (Alex(x) -> -Umpus(x))))", "(all x.(Alex(x) -> Yumpus(x)) | (Alex(x) -> Dumpus(x))) & (Alex(x) -> -Vumpus(x)))", "all x.(Alex(x) -> (Yumpus(x) | Dumpus(x) | NoVumpus(x)))", "all x.(Alex(x) -> (Yumpus(x) | Dumpus(x) | -Vumpus(x)))", "(yumpus) & (dumpsus(Alex) | -Vumpus(Alex)))", "(all x.(Alex(x) -> Yumpus(x)) | (Alex(x) -> Dumpus(x)) | (Alex(x) -> -Vumpus(x))))", "all x.(Alex(x) -> (Yumpus(x) | Dumpus(x) | -Vumpus(x)))"]}
{"id": "prontoqa_train_1428", "nl": "Vumpuses are jompuses, rompuses, and tumpuses.", "fol": "all x. (vumpus(x) -> (jompus(x) & rompus(x) & tumpus(x)))", "prediction": ["all x.(Vumpuse(x) -> (Jompuse(x) | Rompus(x) | TumpusEdge(x)))", "all x.(Vumpuse(x) -> (Jophuse(x) | Rompus(x) | Tumpus(x)))", "all x.(Vumpus(x) -> (Jompuse(x) | Rompus(x) | Tumpus(x)))", "all x.(Vumpuse(x) -> (Jompuse(x) | Rompus(x) | Tumpus(x)))", "all x.(Vumpus(x) -> (Jompus(x) | Rompus(x) | Tumulus(x)))", "all x.(Vumpus(x) -> (Jompuse(x) | Rompus(x) | Tumpus(x)))", "all x.(Vumpuse(x) -> (Jombus(x) | Rompus(x) | Tumpus(x)))", "all x.(Vumpus(x) -> (Jompuse(x) | Rompus(x) | Tumpus(x)))", "all x.(Vumpuse(x) -> (Jumpuse(x) | Rompuse(x) | Tumpus(x)))", "all x.(Vumpus(x) -> (Jimpus(x) | Rompus(x) | Tumulus(x)))", "all x.(Vumpus(x) -> (Jompuse(x) | Rompus(x) | Tumulus(x)))", "all x.(Vumpuse(x) -> (Joustuse(x) | Rompus(x) | Tumpuse(x)))", "all x.(Vumpus(x) -> (Jompus(x) | Rompus(x) | Tumpus(x)))", "all x.(Vumpus(x) -> (Jumpus(x) | Rompus(x) | Tumpus(x)))", "all x y.((Vumpuse(x) & Jompuse(y) & Rompuse(y)) -> Tumpuse(x))", "all x.(Vumpus(x) -> (Juke(x) | Rompus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1429", "nl": "Max is not a tumpus, Max is a wumpus, and Max is a yumpus.", "fol": "(-tumpus(Max) & wumpus(Max) & yumpus(Max))", "prediction": ["(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Wumpus(y))) & all z.(Max(z) -> Yumpus(z)))", "(all x.(Max(x) -> -Tumpus(x)) & (Max(x) -> Wumpus(x)) & (Max(x) -> Yumpus(x)))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Wumpus(y)))", "(all x.(Max(x) -> -Tumpus(x))) & all y.(Max(y) -> Wumpus(y)))", "(all x.(Max(x) -> -Tumpus(x)) & (Max(x) -> Wumpus(x)) & (Max(x) -> Yumpus(x)))", "all x y z.((Max(x) & Tumpus(y) & Wumpus(z)) -> (-Tumpus(x) & -Wumpus(x) & -Yumpus(x)))", "all x y z.((Max(x) & Tumpus(y) & Wumpus(z)) -> (-Tumpus(x) & Wumpus(x) & Yumpus(y)))", "all x y z.((Max(x) & Tumpus(y) & Wumpus(z)) -> (-Tumpus(x) & -Wumpus(x) & -Yumpus(x)))", "(all x.(Max(x) -> -Tumpus(x)) & (Max(x) -> Wumpus(x)) & (Max(x) -> Yumpus(x)))", "all x.(Max(x) -> (-Tumpus(x) & -Wumpus(x) & Yompus(x)))", "(all x.(Max(x) -> -Tumpus(x)) & (Max(x) -> Wampus(x)) & (Max(x) -> Yumpus(x)))", "all x y z.((Max(x) & Tumpus(y) & Wumpus(z)) -> (-Tumpus(x) | (-Tumpus(y) & Wumpus(z))) | (-Tumpus(x) & Wumpus(z) & Yumpus(z))))", "(ExactTumpus(Max) & Enduraist(Max) & Enduraist(Max))", "all x y z.((Max(x) & XLion(z)) -> (-Tumpus(x) & Wumpus(y) & Yumpus(z)))", "(-Tumpus(Max) | (Wumpus(Max) & Yampus(Max))))", "all x y z.((Max(x) & Tumpus(y) & Term(z)) -> (-Tumpus(x) & -Wumpus(z) & -Yumpus(z)))"]}
{"id": "prontoqa_train_1430", "nl": "Everything that is a rompus or a zumpus or a gorpus is a numpus.", "fol": "all x. ((rompus(x) | zumpus(x) | gorpus(x)) -> numpus(x))", "prediction": ["all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.(((Rompus(x) | Zumpus(x) | Gorpus(x))) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rome(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rombus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rompus(x) | Zumpus(x) | Gorpus(x)) -> Numpus(x))"]}
{"id": "prontoqa_train_1431", "nl": "Max is a brimpus, a grimpus, and a gorpus.", "fol": "(brimpus(Max) & grimpus(Max) & gorpus(Max))", "prediction": ["(all x.(Max(x) -> Brimpus(x)) & all y.(Grimpus(y) & Gorpus(y)))", "(All x.(Max(x) -> Brimpus(x)) & (Scrumpus(x) & Gorpus(x)))", "(all x.(Max(x) -> (Brumpus(x) | Grimpus(x) | Gorpus(x))))", "all x.(Max(x) -> (Brimpus(x) | Grimpus(x) | Gorpus(x)))", "all x.(Max(x) -> (Brimpus(x) | Grimpus(x) | Gorpus(x)))", "all x.(Max(x) -> (Brumpus(x) & Grimpus(x) & Gorpus(x)))", "all x.(Max(x) -> (Brimpus(x) | Grimpus(x) | Gorpus(x)))", "(all x y.(Max(x) -> Brimpus(x)) & (Grampus(y) -> Grimpus(y)) & (Gorpus(x) -> Grumpy(y)))", "all x.(Max(x) -> (Brimpus(x) | Grimpus(x) | Gorpus(x)))", "all x.(Max(x) -> (Brimpus(x) & Grimpus(x) & Gorpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & all y.(Grimpus(y) -> Gorpus(y)))", "(Brimpus,Smirnorpus,Gorpus)", "all x.(Max(x) -> (Brimpus(x) | Grimpus(x) | Gorpus(x)))", "all x.(Max(x) -> (Brimpus(x) & Grimpus(x) & Gorpus(x)))", "all x.(Max(x) -> (Brompus(x) | Grimpus(x) | Gorpus(x)))", "(Brimpus(Max) | Grimpus(Max) | Gorpus(Max))"]}
{"id": "prontoqa_train_1432", "nl": "Everything that is a jompus, a rompus, or a yumpus is a tumpus.", "fol": "all x. ((jompus(x) | rompus(x) | yumpus(x)) -> tumpus(x))", "prediction": ["all x.((Jimpus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "all x.((Jompus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "all x.((Jompus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "all x.((Jumpus(x) | Rompus(x) | Yampus(x)) -> Tumpus(x))", "all x.((Jompus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "all x.((Jompus(x) | Rompus(x) | Kumpus(x)) -> Tumpus(x))", "all x.((Jompus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "all x.((Jompus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "all x.((Jumpus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "all x.((Jompus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "all x.((IsJompus(x) | IsRompus(x) | IsYumpus(x)) -> Tumpus(x))", "all x.((Jimpus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "all x.((Jumpus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "all x.((Jompus(x) | Rompus(x) | Yumbos(x)) -> Tumpus(x))", "all x.((Jimpus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))", "all x.((Jompus(x) | Rompus(x) | Yumpus(x)) -> Tumpus(x))"]}
{"id": "prontoqa_train_1433", "nl": "Sam is a gorpus, Sam is a brimpus, and Sam is not a tumpus.", "fol": "(gorpus(Sam) & brimpus(Sam) & -tumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Gorpus(x)) & all y.(Sam(y) -> Brimpus(y)) & all z.(Sam(z) -> -Tumpus(z))))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> Brimpus(x)) & -Tumpus(x)))", "all x y z.((Sam(x) & Riptor(y) & Brimpus(z) & -Tumpus(x)) -> (Gorpus(x) & Brimpus(y) & -Gorpus(z)))", "(all x.(Sam(x) -> Gorpus(x)) & all y.(Sam(y) -> Brimpus(y)) & all z.(Sam(z) -> -Toumpus(z))))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> -Tumpus(x))))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> Blimpus(x)) & (Sam(x) -> -Tumpus(x)))", "(all x,y,z) -> (Gorpus(x) & Gorpus(y))) & (Bermpus(z) & -Tumpus(z))))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> Brimpus(x)) & -Tumpus(x)))", "(all x.(Sam(x) -> Gorpus(x)) & (Sam(x) -> Brimpus(x)) & -Tumpus(x)))", "(all x y z.((Same(x) & Gorpus(x)) -> (Gorpus(y) & Brimpus(z)) & -Tumpus(z)))", "(all x y z.(Sam(x) -> Gorpus(x)) & (Sam(y) -> Brimpus(y)) & (Sam(z) -> -Tumpus(z))))", "all x y z.((Sam(x) & Gorpus(x) & Brimpus(y) & -Tumpus(z)) -> (Has(x,y) & Has(x,z)))", "all x y z.((Sam(x) & Gorpus(x) & Brimpus(y) & Rupomace(z)) -> (Represents(x,y) & -Represents(x,z)))", "(all x y z.((Sam(x) & Gorpus(x)) -> In(x,y)) & ((Sam(y) & Brimpus(y)) -> -Tumpus(z)))", "(all x.(Sam(x) -> Gorpus(x)) & all y.(Sam(y) -> Brimpus(y)) & all z.(Sam(z) -> -Tumpus(z))))", "all x y z.((Sam(x) & Gorpus(y) & Brimpus(z)) -> (Sam(x) & -Tumpus(x)))"]}
{"id": "prontoqa_train_1434", "nl": "Zumpuses are vumpuses, jompuses, and lorpuses.", "fol": "all x. (zumpus(x) -> (vumpus(x) & jompus(x) & lorpus(x)))", "prediction": ["all x.(Azmpus(x) -> (Vampuse(x) & Jompuse(x) & Lorpuse(x)))", "all x.(Zombie(x) -> (Vampuse(x) | Jompuse(x) | Liepuse(x)))", "all x.(Zumpus(x) -> (Vumpuse(x) | Jompuse(x) | Lorpuse(x)))", "all x.(Zumpus(x) -> (Vampuse(x) | Jompuse(x) | Lorpuse(x)))", "all x.(Zumpus(x) -> (Vumpuse(x) | Jompuse(x) | Lorpus(x)))", "all x.(Zumpuse(x) -> (Vumpuse(x) | Jompuse(x) | Lorpuse(x)))", "all x.(Zumpus(x) -> (Vampuse(x) | Jompuse(x) | Lorpuse(x)))", "all x.(Zumpus(x) -> (Vumpus(x) | Jompuse(x) | Lorpuse(x)))", "all x.(Zumpus(x) -> (Vampuse(x) | Jompuse(x) | Lorpus(x)))", "all x.(Zumpus(x) -> (Vumpuse(x) | Jompuse(x) | Lorpuse(x)))", "all x.(Zumpus(x) -> (Vumpuse(x) | Jompuse(x) | Lorpuse(x)))", "all x.(Zumpus(x) -> (Vampuse(x) | Jompuse(x) | Lorpuse(x)))", "all x.(Zumpus(x) -> (Vampuse(x) | Jompuse(x) | Lopuse(x)))", "(Vumpuse(z) | Jompuse(z) | Lorpuse(z)))", "exists x.(Zumpus(x) & (Vampuse(x) | Jompuse(x) | Lorpuse(x)))", "all x.(Zumpus(x) -> (Vumpuse(x) | Jompuse(x) | Lorpuse(x)))"]}
{"id": "prontoqa_train_1435", "nl": "Everything that is a sterpus, a rompus, and a shumpus is not a vumpus.", "fol": "all x. ((sterpus(x) & rompus(x) & shumpus(x)) -> -vumpus(x))", "prediction": ["all x.((Sterpus(x) | Rompus(x) | Sukha(x)) -> -Vumpus(x))", "all x.((Sterpus(x) | Rompus(x) | Humpus(x)) -> -Vumpus(x))", "all x.((Sterepus(x) | Rompus(x) | Humpus(x)) -> -Vumpus(x))", "all x.((Sterpus(x) & Rompus(x) & Sensepus(x)) -> -Vumpus(x))", "all x.((Starpus(x) | Rompus(x) | Humpus(x)) -> -Vumpus(x))", "all x.(((Sterpus(x) | Rompus(x) | Shumpus(x))) -> -Vumpus(x))", "all x.((Storpus(x) | Rompus(x) | Humpus(x)) -> -Vumpus(x))", "all x.((Sterpus(x) | Rompus(x) | Humpus(x)) -> -Vumpus(x))", "all x.((Testerpus(x) | Rompus(x) | Humpus(x)) -> -Vumpus(x))", "all x.((Sterpus(x) | Rompus(x) | Humpus(x)) -> -Vumpus(x))", "all x.((Sterpus(x) | Rompus(x) | Shumpus(x)) -> -Vumpus(x))", "all x.((Stepus(x) & Rompus(x) & Shumpus(x)) -> -Vumpus(x))", "all x.((Sterpus(x) | Rompus(x) | Humpus(x)) -> -Vumpus(x))", "all x.((Sterpus(x) & Rompus(x) & Humpus(x)) -> -Vumpus(x))", "all x.((Sterpus(x) | Rompus(x) | Shumpus(x)) -> -Vumpus(x))", "all x.((Sterpus(x) | Romanus(x) | Humpus(x)) -> -Vumpus(x))"]}
{"id": "prontoqa_train_1436", "nl": "Rex is a rompus.", "fol": "rompus(Rex)", "prediction": ["(rompus(Rex) & Poison(Rex))", "-Rompus(Rex)", "Rex is a Rompus.", "Rex is a rompus.", "Rex is romospheric.", "Rex (Rompus)", "Rex is a rompus.", "all x.(Rompus(x) -> Rex.", "Rex. (Rompus(rex) & BornIn(rex))", "Rex, Ruppus.", "Rex.(Rompus(r) & HasRex(r))", "Rex.(Rompus(x))", "(Rompus(Rex) & Raptor(Rex))", "All x.(Rompus(x) -> Float(x))", "Rex.(Roman(x) -> InRompus(x))", "Rex is a rompus."]}
{"id": "prontoqa_train_1437", "nl": "Rex is not a zumpus.", "fol": "-zumpus(Rex)", "prediction": ["Rex, & -Zombiose-Mammal(x))", "Obwohl er bald, muss er sterben.", "Rex -Zombipus(x))", "(*Rex(Rex) & -Zumpus(Rex)))", "All x.(Rex(x) -> -Zombias(x))", "Rex & -Zumpus(x))", "Rex is not zupanus.", "all x.(Rex(x) -> -Zympus(x))", "All x.(Rex(x) -> -Zumpus(x))", "Rex -Zombius(x)", "Rex is not zumpus.", "Rex, u.(Tompus(u) -Form(x,u))", "(-Zumpus(Rex))", "(-Zumpus(Rex))", "Rex is not a zumpus.", "Rex is not zumpus."]}
{"id": "prontoqa_train_1438", "nl": "Everything that is a sterpus, an impus, or a rompus is a yumpus and a dumpus and a jompus.", "fol": "all x. ((sterpus(x) | impus(x) | rompus(x)) -> (yumpus(x) & dumpus(x) & jompus(x)))", "prediction": ["all x.((Sterpus(x) | Impossible(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Sterpus(x) | Impossible(x) | Rompus(x)) -> (Yumpus(x) | Dumpus(x) | Jompus(x)))", "all x.((Sterpus(x) | Imperator(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Sterpus(x) | Impossible(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Sterpus(x) | Impossible(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Sterpus(x) | Impressive(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Sterpus(x) | Impossible(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Sterpus(x) | Impossible(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Sterpus(x) | Imperempted(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Rompus(x) & Sterpus(x)) | Impossible(x)) | OrPrompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((HasSterpus(x) | HasImpact(x) | HasRompus(x)) -> (Yumpus(x) & HasDumpus(x) & HasJompus(x)))", "all x.((Sterpus(x) | Impossible(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Sterepus(x) | Imperator(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Sterpus(x) | Impossible(x) | Romapus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Sterpus(x) | Impossible(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Sterpus(x) | Imposer(x) | Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Jompus(x)))"]}
{"id": "prontoqa_train_1439", "nl": "Everything that is a yumpus, a dumpus, and an impus is a tumpus and a grimpus and a lempus.", "fol": "all x. ((yumpus(x) & dumpus(x) & impus(x)) -> (tumpus(x) & grimpus(x) & lempus(x)))", "prediction": ["all x.((Positive(x) & Yumps(x) & Dumpus(x) & Impermissible(x)) -> (Tumpus(x) & Grimpus(x) & Lampus(x)))", "all x.((Yumpus(x) | Dumpus(x) | Impossible(x)) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.((Yumpus(x) | Dumpus(x) | Impossible(x)) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.(Yumpus(x) -> (Dumpus(x) & Impervates(x)))", "all x.((Yumpus(x) & Dumpus(x) & Imperempted(x)) -> (Tumpus(x) & Smooch(x) & Lempus(x)))", "all x.((Yumpus(x) | Dumpus(x) | Impossible(x)) -> (Tumpus(x) & Grimpus(x) & Lampus(x)))", "all x.((Yumpus(x) & Dumpus(x) & Impossible(x)) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.((Yumpus(x) | Dumpus(x) | Imperator(x)) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.((Yumpus(x) | Dumpus(x) | Impossible(x)) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.((Yumpus(x) & Dumpus(x) & Imperator(x)) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.((Yumpus(x) | Dumpus(x) | Impossible(x)) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.((Yumpus(x) | Dumpus(x) | Impermissible(x)) -> (Tumpus(x) & Grimpus(x) & Lampus(x)))", "all x.((Yumpus(x) | Dumpus(x) | Impossible(x)) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.((Yumpus(x) & Dumpus(x) & Impossible(x)) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.((Yumpus(x) | Dumpus(x) | Impossible(x)) -> (Tumpus(x) | Grimpus(x) | Lempus(x)))", "all x.((Yumpus(x) | Dumpus(x) | Impossible(x)) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_1440", "nl": "Alex is an impus.", "fol": "impus(Alex)", "prediction": ["Alex ist ein Imitator.", "Alex is a impusct.", "all x.(Alex(x) -> Impossible(x))", "(Below(Alex) & IsDefiant(Alex))", "exists x.(Alex(x) & Idiot(x))", "Alex ist ein Idiot.", "All x.(Alex(x) -> Impossible(x))", "Alex is a impuse.", "Alexia(x) & Impossible(x))", "Alex ist Imperium(Alex)", "exists x.(Alex(x) & Impossible(x))", "IsAlexImprovement(Alex)", "all x.(Alex(x) -> Impist(x))", "all x.(Alex(x) -> IsImpedient(x))", "Alex is a impusor.", "AlexisImmerator(Alex)"]}
{"id": "prontoqa_train_1441", "nl": "Everything that is a grimpus and an impus and a gorpus is a tumpus.", "fol": "all x. ((grimpus(x) & impus(x) & gorpus(x)) -> tumpus(x))", "prediction": ["all x.((Smoothpus(x) & Ivory(x) & Gorpus(x)) -> Tumpus(x))", "all x.((Snarkpus(x) & Impossible(x) & Gorpus(x)) -> Tumpus(x))", "all x.((Murph(x) & Impossible(x) & Gorpus(x)) -> Tumpus(x))", "all x.((Scrutinus(x) & Impossible(x) & Gorpus(x)) -> Tumpus(x))", "all x.((Smearpus(x) & Impossible(x) & Gorpus(x)) -> Tumpus(x))", "all x.((Element(x) & Grouchpus(x) & Impossible(x) & Gorpus(x)) -> Tumpus(x))", "all x.((Purple(x) & Ivres(x) & Gorpus(x)) -> Tumpus(x))", "all x.((Cruiser(x) & IsImpossible(x) & Gorpus(x)) -> Tumpus(x))", "all x.((Burrpus(x) & Impossible(x) & Orpus(x)) -> Tumpus(x))", "all x.((Cruttle(x) & Imperium(x) & Gorpus(x)) -> Tumpus(x))", "all x.((Gruppus(x) & Impossible(x) & Gorpus(x)) -> Timpos(x))", "all x.((Grimpus(x) & Impossible(x) & Gorpus(x)) -> Tumpus(x))", "all x.((Other(x) & Grimpus(x) & Impossible(x) & Gorpus(x)) -> Tumpus(x))", "all x.((Smoothpus(x) & Impossible(x) & Gorpus(x)) -> Tumpus(x))", "all x.((Rumpus(x) & Imperator(x) & Gorpus(x)) -> Tumpus(x))", "all x.((Smorosis(x) & IsDefiant(x) & IsGorpus(x)) -> Tumpus(x))"]}
{"id": "prontoqa_train_1442", "nl": "Max is a yumpus, Max is a grimpus, and Max is not a tumpus.", "fol": "(yumpus(Max) & grimpus(Max) & -tumpus(Max))", "prediction": ["all x.(Max(x) -> (Yumpus(x) | Grimpus(x) | -Tumpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Grimpus(y)) & all z.(Max(z) -> -Tumpus(z))))", "(all x.(Max(x) -> Yumpu(x)) & (Max(x) -> Grimpus(x)) & -Max(x)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Grapple(x)) & (Max(x) -> -Tumpus(x))))", "(all x y z.(Max(x) -> Yampus(x)) & (Max(y) -> Grappa(y)) & (Max(z) -> -Tumpus(z))))", "(all x.(Max(x) -> Yumpa(x)) & (Max(x) -> Gruppus(x)) & -Tumpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & -Yumpus(x)) & (Max(x) -> Grimpus(x)) & -Tumpus(x)))", "(Yumpus(Max) | Grimpus(Max) | -Tumpus(Max))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Grimpus(x)) & -Max(x)))", "(all x.(Max(x) -> Yubeast(x)) & (Max(x) -> Grimpus(x)) & -Max(x)))", "(all x y z.(Max(x) -> Yampus(x)) & (Max(y) -> Grimpus(y)) & (Max(z) -> -Tumpus(z)))", "(Yumpus(Max) | Grimpus(Max) | -Tumpus(Max)))", "(all x.(Max(x) -> Yumpa(x)) & (Max(x) -> Grimpus(x)) & (Max(x) -> -Tumpus(x))))", "(all x.(Max(x) -> Yumpush(x)) & (Max(x) -> Grypus(x)) & (Max(x) -> -Tumpus(x)))", "(all x.(Max(x) -> Yumpa(x)) & (Max(x) -> Grimpus(x)) & (Max(x) -> -Tumpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Grimpus(y)) & -Tumpus(y)))"]}
{"id": "prontoqa_train_1443", "nl": "Everything that is a brimpus, a numpus, or a zumpus is a sterpus and a vumpus and a lorpus.", "fol": "all x. ((brimpus(x) | numpus(x) | zumpus(x)) -> (sterpus(x) & vumpus(x) & lorpus(x)))", "prediction": ["all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(x) & Vumpus(x) & Lordpus(x)))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(x) & Vampus(x) & Lorpus(x)))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(x) & Voompus(x) & Lorpus(x)))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(x) & -Vumpus(x) & -Lorpus(x)))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Brumpus(x) | Numpus(x) | Zumpus(x)) -> (Steerpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(x) & Vumpus(x) & lorpus(x)))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Steerpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Brimpus(x) | Numpus(x) | Zumpus(x)) -> (Steerpus(x) & Vuzes(x) & Lorpus(x)))", "all x.((Brompus(x) | Numpus(x) | Zumpus(x)) -> (Sterpus(x) & Vumpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_train_1444", "nl": "Each jompus is a lorpus and a wumpus and a grimpus.", "fol": "all x. (jompus(x) -> (lorpus(x) & wumpus(x) & grimpus(x)))", "prediction": ["all x.(Jompus(x) -> (Lorpus(x) & Wumpus(x) & Grimpus(x)))", "all x.(Jompus(x) -> (Lorpus(x) & Humpus(x) & Gruppus(x)))", "is(jompus,lorpus) & exists y.(Wumpus(y) & Gruppus(y)))", "(Lorpus(jompus) & Wumpus(jompus) & Grimpus(jompus))", "all x.(Jompus(x) -> (Lorpus(x) & Wumpus(x) & Grapple(x)))", "(all x.(Jompus(x) -> Odor(x)) & all y.(Wumpus(y) & Grimpus(y)))", "all x.(Jompus(x) -> (Lorpus(x) & Wumpus(x) & Grimpus(x)))", "all x.(Jimpus(x) -> (Lorpus(x) | Plumpus(x) | Grimpus(x)))", "all x.(Jompus(x) -> (Lorph(x) & Wumpus(x) & Grimpus(x)))", "all x.(Jompus(x) -> (Lorpus(x) & Wumpus(x) & Grimpus(x)))", "all x.(Jompus(x) -> (Lorpus(x) & Wumpus(x) & Grimpus(x)))", "all x.(Jompus(x) -> (Lorph(x) & Wompus(x) & Gruppus(x)))", "all x.(Jimpus(x) -> (Lorpus(x) & Wumpus(x) & Grimpus(x)))", "all x y z.((Jompus(x) & Lorpus(y) & Wumpus(z)) -> (Lorpus(x) | Grimpus(z)))", "all x.(Jompus(x) -> (Lorpus(x) & Humpus(x) & Grimpus(x)))", "all x.(Jompus(x) -> (Lorpus(x) | Wumpus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1445", "nl": "Rex is an impus, Rex is not a grimpus, and Rex is a numpus.", "fol": "(impus(Rex) & -grimpus(Rex) & numpus(Rex))", "prediction": ["all x y z.((Rex(x) & Impossible(x) & Rex(y) & Grimpus(z) & Numpus(x)) -> (-(Grampus(y) & Grimpus(z)))))", "(all x.(Rex(x) -> Impossible(x)) & (Rex(x) -> -Grimpus(x)) & (Rex(x) -> Numpus(x)))", "(all x.(Rex(x) -> Issuel(x)) & (Rex(x) -> -Grimpus(x)) & (Rex(x) -> Numpus(x)))", "(all x.(Rex(x) -> Issuel(x)) & (-Grimpus(x) & Numpus(x)))", "(all x.(Rex(x) -> Impractice(x)) & (Rex(x) -> -Grimpus(x)) & (Rex(x) -> Numpus(x)))", "(all x.(Rex(x) -> Impossible(x)) & (-Grimpus(x) & -Numpus(x)))", "(all x.(Rex(x) -> Impermissibly(x)) & (Rex(x) -> -Grimpus(x)) & (Rex(x) -> Numpus(x)))", "all x y z.((Rex(x) & Impossible(x) & Grimpus(y) & Numpus(z)) -> (Impossible(x) & -Grimpus(y) & Numpus(z)))", "(all x.(Rex) -> Issuel(x)) & (-IsSpurpus(x) & -IsStrallpus(x)) & (-IsSumpus(x) | (-IsSumpus(x) | Numpus(x)))))", "(all x.(Rex(x) -> Ispose(x)) & (-IsGrimpus(x) & -IsCracked(x)) & -IsNumpus(x)))", "all x y z.((Rex(x) & Rex(y) & Grimpus(z)) -> (Established(x) & -Established(y) & Numpus(z)))", "(all x.(Rex(x) -> Issue(x)) & (Rex(x) -> -Grimpus(x)) & (Rex(x) -> Numpus(x)))", "(all x.(Rex(x) -> Issuel(x)) & (-IsGrimpus(x)) | (Issuel(x) -> Numpus(x))))", "(all x.(Rex(x) -> Issuel(x)) & all y.(Rex(y) -> -Grimpus(y))) & all z.(Numpus(z) -> (Rex(z) & Numpus(z))))", "(all x.(Rex(x) -> Issues(x)) & (Nompus(x) | Numpus(x))))", "(all x.(Exercise(x) -> Impels(x)) & all y.(Grampus(y) -> -Grimpus(y)) & all z.(numpus(z) -> Rex(z))))"]}
{"id": "prontoqa_train_1446", "nl": "Everything that is a numpus and a gorpus and a rompus is a wumpus.", "fol": "all x. ((numpus(x) & gorpus(x) & rompus(x)) -> wumpus(x))", "prediction": ["all x.((Nompus(x) | Gorpus(x) | Rompus(x)) -> Wumpus(x))", "all x.((Numpus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.((Numpus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.((Numpus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.((Nompus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.((Numpus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.((Nompus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.(((Numpus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.((Numpus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.((Nompus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.(((Wumpus(x) & Numpus(x)) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.((Numpus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.((Mammoth(x) & Numpus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.((Nompus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.((Numpus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))", "all x.((Numpus(x) & Gorpus(x) & Rompus(x)) -> Wumpus(x))"]}
{"id": "prontoqa_train_1447", "nl": "Max is a tumpus or a wumpus or a grimpus.", "fol": "(tumpus(Max) | wumpus(Max) | grimpus(Max))", "prediction": ["(MaMax (tumpus) | -Wumpus(x) | Crusadpus(x)))", "all x.(Max(x) -> (Tumpus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Max(x) -> (Tumpus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Max(x) -> (Tumpus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Max(x) -> (Tumpus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Max(x) -> (Tumpus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Max(x) -> (Tumpus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Max(x) -> (Tumpus(x) | Wumpus(x) | Grimpus(x)))", "(all x.(Max(x) -> Tumulus(x)) | (Max(x) & -Terminator(x))) | Max(x) & Terminator(x)))", "all x.(Max(x) -> (Tumpus(x) | Wumpus(x) | Grimpus(x)))", "(all x.(Max(x) -> Tumpus(x)) & ((Max(x) & -Tumpus(x)) | (-Max(x) & Wumpus(x)))) & (-Max(x) & -Max(x)) & -Max(x)))", "all x.(Max(x) -> (Tumpus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Max(x) -> (Tumpus(x) | Wumpus(x) | Grimpus(x)))", "(Tumpus(Max) | Wumpus(Max) | Grimpus(Max))", "(Tumpus(Max) | Wumpus(Max) | Grimpus(Max))", "(Likes(Max) | Likes(Max)))"]}
{"id": "prontoqa_train_1448", "nl": "Everything that is a zumpus, an impus, or a yumpus is not a jompus.", "fol": "all x. ((zumpus(x) | impus(x) | yumpus(x)) -> -jompus(x))", "prediction": ["all x.((Tompus(x) | IsImpossed(x) | DoesYumpus(x)) -> -Jompus(x))", "all x.((Sumpus(x) | Impossible(x) | Yumpus(x)) -> -Jumpus(x))", "all x.((Anything(x) & (Zumpus(x) | Impossible(x) | Yumpus(x))) -> -Jompus(x))", "all x.(((Tompus(x) | Impeccable(x) | Yumpus(x))) -> -Jompus(x))", "all x.((Tompus(x) | Impirez(x) | Yumpus(x)) -> -Jampus(x))", "all x.((Tompus(x) | Imperator(x) | Yumpus(x)) -> -Jompus(x))", "all x.((Tompus(x) | IsImpossed(x) | IsYumpus(x)) -> -Jumpus(x))", "all x.((Tompus(x) | Impossible(x) | Yumpus(x)) -> -Jompus(x))", "all x.((Tompus(x) | Impermiss(x) | Yumpus(x)) -> -Jumpus(x))", "all x.(((Zumpus(x) | Impossible(x) | Yumpus(x))) -> -Jumpus(x))", "all x.((Tompus(x) | Impossible(x) | Yumpus(x)) -> -Jompus(x))", "all x.((Tompus(x) | IsImpossed(x) | IsYumpus(x)) -> -Jompus(x))", "all x.((Tompus(x) | Impossible(x) | Yumpus(x)) -> -Jompus(x))", "all x.((Tompus(x) | Impossible(x) | Yumpus(x)) -> -Jompus(x))", "all x.((Tompus(x) | Impossible(x) | Yumpus(x)) -> -Jumpus(x))", "all x.((Tompus(x) | IsSolving(x) | IsYumpus(x)) -> -Jompus(x))"]}
{"id": "prontoqa_train_1449", "nl": "Everything that is a gorpus, a rompus, or a shumpus is a jompus.", "fol": "all x. ((gorpus(x) | rompus(x) | shumpus(x)) -> jompus(x))", "prediction": ["all x.((Gorpus(x) | Rompus(x) | Shumpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Shumpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Shumpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Humpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Humpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Shumpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Humpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Humpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Humpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Humpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Shumpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Shumpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Humpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Humpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Shumpus(x)) -> Jompus(x))", "all x.((Gorpus(x) | Rompus(x) | Humpus(x)) -> Jompus(x))"]}
{"id": "prontoqa_train_1450", "nl": "Stella is an impus.", "fol": "impus(Stella)", "prediction": ["Stella is a impuse.", "Stella is a impusct.", "Stella (so-discussive)", "Stella ist -Impossible(Stella))", "Stella is a impus.", "Stella is ein Izrup(Stella)", "Stella is a impus.", "Stella is an impus(k).", "Stella is imposed.", "Stella is a impus.", "Stella este lirico(h)", "Stella is a impuse(Stella)", "Stella ist eine Ideologe.", "Stella is a impus.", "Stella is a impus.", "Stella is a impus."]}
{"id": "prontoqa_train_1451", "nl": "Each rompus is a numpus, a gorpus, and a zumpus.", "fol": "all x. (rompus(x) -> (numpus(x) & gorpus(x) & zumpus(x)))", "prediction": ["all x.(Rompus(x) -> (Numerus(x) | Gorpus(x) | Zumpus(x)))", "all x.(Rompus(x) -> (Nompus(x) | Gorpus(x) | Zumpus(x)))", "all x.(Rompus(x) -> (Likes(x,numpus) & Likes(x,gorpus) & Likes(x,zumpus)))", "all x.(Rompus(x) -> (Numpus(x) & Gorpus(x) & Zumpus(x)))", "(all x.(Rompus(x) -> Numpus(x)) & all y.(Gorpus(y) & all z.(Zimpus(z) & -Numpus(z)) -> Zumpus(z)))", "all x.(Rompus(x) -> (numpus(x) | gorpus(x) | zumpus(x)))", "all x.(Rompus(x) -> (Numpus(x) | Gorpus(x) | Zumpus(x)))", "all x.(Rompus(x) -> (Numpus(x) | Gorpus(x) | Zumpus(x)))", "all x.(Rompus(x) -> (Numpus(x) | Gorpus(x) | Zumpus(x)))", "all x.(Rompus(x) -> (numpus(x) & gorpus(x) & zumpus(x)))", "all x.(Romes(x) -> ((Numpus(x) | Gorpus(x) | Zumpus(x))))", "all x.(Rompus(x) -> (Numpus(x) & Gorpus(x) & Zumpus(x)))", "all x.(Rompus(x) -> (Numerus(x) | Gorpus(x) | Zumpus(x)))", "all x.(Rompus(x) -> (Numpus(x) & Gorpus(x) & Zumpus(x)))", "all x.(Rompus(x) -> (Numerus(x) | Gorpus(x) | Zumpus(x)))", "(all x.(rompus(x) -> Numpus(x)) & (Gorpus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1452", "nl": "Sally is a rompus.", "fol": "rompus(Sally)", "prediction": ["(Rompus(Sally) & White(Sally))", "all x.(Sally(x) -> Rompus(x))", "(Romesha(Sally) & BornIn(Sally,Sally))", "Sally is a rompus.", "Sally is Rompus.", "Sally is a rompus.", "Sally is a Rompus.", "Sally is a rompus.", "Sally is a Rompus.", "Sally ist Rompus.", "Sally is a rompus.", "All x.(Sally(x) -> Rompus(x))", "Sally is a rompus.", "Sally is a rompus.", "Sally is a rompus.", "all x.(Sally(x) -> Rimpus(x))"]}
{"id": "prontoqa_train_1453", "nl": "Sally is a gorpus, an impus, or a brimpus.", "fol": "(gorpus(Sally) | impus(Sally) | brimpus(Sally))", "prediction": ["all x.(Sally(x) -> (Gorpus(x) | Impossible(x) | Brimpus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Impossible(x) | Brimpus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Imperative(x) | Brimpus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Impossible(x) | Brimpus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Isolator(x) | Brimpus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Impeccable(x) | Brimpus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Issue(x) | Brimpus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Issue(x) | Brimpus(x)))", "all x.(Sally(n) -> (Gorpus(n) | Imperator(n) | Brimpus(n)))", "all x.(Sally(x) -> (Gorpus(x) | Implicator(x) | Brimpus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Imperator(x) | Brimpus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Issue(x) | Brimpus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Imperium(x) | Brimpus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Imperium(x) | Brimpus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Impede(x) | Brimpus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Impermiss(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_1454", "nl": "Everything that is a yumpus, a tumpus, and a brimpus is a jompus and a sterpus and an impus.", "fol": "all x. ((yumpus(x) & tumpus(x) & brimpus(x)) -> (jompus(x) & sterpus(x) & impus(x)))", "prediction": ["all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jumpus(x) & Sterpus(x) & impus(x)))", "all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jompus(x) & Sterpus(x) & Issue(x)))", "all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jimpus(x) & Sterpus(x) & Impossible(x)))", "all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Brompus(x) & Jompus(x) & Sterepus(x) & Impossible(x)))", "all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jompus(x) & Sterpus(x) & Impossible(x)))", "all x.((Yumpus(x) & Tumpus(x) & Brimpus(x)) -> (Jimpus(x) & Sterpus(x) & Imposse(x)))", "all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jompus(x) & Sterpus(x) & Izolu(x)))", "all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jompus(x) | Sterpus(x) | Iruptus(x)))", "all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jimpus(x) & Sterpus(x) & Issue(x)))", "all x.((Gross(x) & Yampus(x) & Tumpus(x) & Brimpus(x)) -> (Jompus(x) & Sterpus(x) & Impossible(x)))", "all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jempus(x) & Sterpus(x) & Issue(x)))", "all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jompus(x) & Sterepus(x) & Impermissible(x)))", "all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jompus(x) & Sterpus(x) & Impossible(x)))", "all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jompus(x) | Sterpus(x) | Imperfectionist(x)))", "all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jimpus(x) & Sterpus(x) & impus(x)))", "all x.((Yumpus(x) | Tumpus(x) | Brimpus(x)) -> (Jompus(x) & Sterpus(x) & Impermissible(x)))"]}
{"id": "prontoqa_train_1455", "nl": "Everything that is a lorpus, a rompus, and a lempus is a vumpus.", "fol": "all x. ((lorpus(x) & rompus(x) & lempus(x)) -> vumpus(x))", "prediction": ["all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Rompus(x) & Lempus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vuze(x))", "all x y.((Lorpus(x) & Rompus(y) & Lempus(z) & Contains(x,y)) -> Vulpu(x))", "all x.((Lorpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))", "all x.((Morpus(x) | Rompus(x) | Lempus(x)) -> Vumpus(x))"]}
{"id": "prontoqa_train_1456", "nl": "Each lorpus is not an impus.", "fol": "all x. (lorpus(x) -> -impus(x))", "prediction": ["all x.(Lorpus(x) -> -Impossible(x))", "all x.(Lorpus(x) -> -Impossible(x))", "all x.(Lorpus(x) -> -Effisive(x))", "all x.(Lorpus(x) -> -Impossible(x))", "all x.(Lorpus(x) -> -Impossible(x))", "all x.(Lorpus(x) -> -Impossed(x))", "all x.(Lorpus(x) -> -Illegal(x))", "all x.(Lorpus(x) -> -Impossible(x))", "all x.(Lorpus(x) -> -Issue(x))", "all x.(Lorpus(x) -> -Issue(x))", "(-Izrael(lorpus))", "all x.(Lalorpus(x) -> -Impossible(x))", "all x.(Lorpus(x) -> -Impossible(x))", "all x.(Lorpus(x) -> -Issue(x))", "all x.(Lorpus(x) -> -Impossible(x))", "exists x.(Lorpus(x) & -Issue(x))"]}
{"id": "prontoqa_train_1457", "nl": "Stella is a zumpus and a rompus and a jompus.", "fol": "(zumpus(Stella) & rompus(Stella) & jompus(Stella))", "prediction": ["all x.(Stella(x) -> (Sumpus(x) & Rompus(x) & Jompus(x)))", "all x.(Stella(x) -> (Tompus(x) & Rompus(x) & Jimpus(x)))", "exists x.(Stella(x) & Zumpus(x) & Rompus(x) & Jompus(x))", "all x.(Starship(x) -> (Tommy(x) & Rompus(x) & Jompus(x)))", "all x.(Stella(x) -> (Tompus(x) & Rompus(x) & Jompus(x)))", "(all x.(Stella(x) -> Topus(x)) & all y.(Rompus(y) & -Jimpus(y))))", "all x.(Stella(x) -> (Aumpus(x) & -Rompus(x) & -Jompus(x)))", "all x.(Stella(x) -> (Tompus(x) & Rompus(x) & Jompus(x)))", "(zumpus(Stella) & Rompus(Stella) & Jompus(Stella))", "(Tompus) & Rompus(Stella) & Jompus(Stella))", "all x y.((Stella(x) & Zumpus(y)) -> (Rompus(x) & Jompus(y)))", "((Zombi) | Rompus(i) | Jompus(i)))", "(all x.(Stella(x) -> Zumpus(x)) & (Rompus(x) | Jompus(x))))", "(all x.(Stella(x) -> Zumpus(x)) & (Rompus(x) | Jompus(x))))", "(Zumpus(Stella) | Rompus(Stella) | Jompus(Stella)))", "exists x.(Stella(x) & (Zumpus(x) | Rompus(x) | Jompus(x)))"]}
{"id": "prontoqa_train_1458", "nl": "Stella is a vumpus and Stella is not a gorpus and Stella is a zumpus.", "fol": "(vumpus(Stella) & -gorpus(Stella) & zumpus(Stella))", "prediction": ["(all x y z.((Stella(x) & Vumpus(x)) -> (Umpus(x) & -Gorpus(y)) & ((Stella(z) & Zumpus(z))) -> (Umpus(z) & -Gorpus(z))))", "(all x.(Stella(x) -> Vumpus(x)) & (Stella(x) -> -Rorpus(x)) & (Stella(x) -> Zumpus(x)))", "(all x.(Stella(x) -> Vumpus(x)) & all y.(Stella(y) -> -Gorpus(y))) & all z.(Stella(z) -> Zumpus(z)))", "(all x.(Stella(x) -> Vumpus(x)) & all y.(Stella(y) -> -Gorpus(y))) & all z.(Stella(z) -> Zumpus(z)))", "all x.(Vumpus(x) & -Gorpus(x) & Zumpus(x))", "all x y.((Vumpus(x) & Vompus(y) & -Gorpus(y)) -> Zumpus(x))", "(all x.((Vumpus(x) & -Gorpus(x)) -> Zumpus(x)))", "all x y.((Stella(x) & Vampire(x) & Stella(y)) -> (-Gorpus(y) & Zumpus(y)))", "all x y z.((Stella(x) & Vumpus(x) & Stella(y) & Zumpus(z)) -> (-Gorpus(y) & -Vumpus(y) & Zumpus(z)))", "all x.((Vumpus(x) & -Gorpus(x) & Zumpus(x)) -> Stella(x))", "(all x.(Vumpus(x) -> Stella)) & (-Gorpus(x) -> Stella)) & (Tompus(x) -> Stella)))", "all x y.((Stella(x) & Vumpus(x)) Species(y) & -Gorpus(y) & Zumpus(y)) -> (Vumpus(x) & zup-y)))", "all x y.((Stella(x) & Vumpus(y) & -Gorpus(y)) -> (Versus(x) & Zumpus(x)))", "all x y.((Zap(x) & Vumpus(x)) -> (-Gorpus(y) & Zumpus(x)))", "all x y z w.((Vumpus(x) & Stella(y) & Grimpus(z) & Zumpus(w)) -> (Vumpus(y) & -Gorpus(y) & Zumpus(z)))", "all x y z.((Vumpus(x) & Gorpus(y) & Zumpus(z)) -> (Stella(x,y) | Stella(x,z)))"]}
{"id": "prontoqa_train_1459", "nl": "Each wumpus is a tumpus and a rompus and a gorpus.", "fol": "all x. (wumpus(x) -> (tumpus(x) & rompus(x) & gorpus(x)))", "prediction": ["all x.(Wumpus(x) -> (Tumpus(x) & Rompus(x) & Gorpus(x)))", "all x.(Wumpus(x) -> (Tumpus(x) & Rompus(x) & Worpus(x)))", "all x y.((Wumpus(x) & Tumpus(y)) -> (Rompus(x) & Gorpus(x)))", "exists x.(Wumpus(x) & Tumpus(x) & Rompus(x) & Gorpus(x))", "all x.(Wumpus(x) -> (Tumpus(x) & Rompus(x) & Gorpus(x)))", "all x.(Wumpus(x) -> (Tumpus(x) & Rompus(x) & Gorpus(x)))", "all x.(Wumpus(x) -> (Tumpus(x) & Rompus(x) & Gorpus(x)))", "all x.(Wumpus(x) -> (IsTumpus(x) & IsRompus(x) & IsGorpus(x)))", "exists x.(Wumpus(x) & Tumpus(x) & Rompus(x) & Gorpus(x))", "all x.(Wumpus(x) -> (Tumpus(x) & Rompus(x) & Gorpus(x)))", "all x.(Wumpus(x) -> (Tumpus(x) & Rompus(x) & Gorpus(x)))", "all x.(Wumpus(x) -> (Tumpus(x) & (Rompus(x) & Gorpus(x))))", "all x.(Wumpus(x) -> (Tumpus(x) & Rompus(x) & Gorpus(x)))", "all x.(Wumpus(x) -> (Tumpus(x) & Rompus(x) & Gorpus(x)))", "all x.(Wumpus(x) -> (Tumpus(x) & Rompus(x) & Dorpus(x)))", "all x.(Wumpus(x) -> (Tumpus(x) & Rompus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1460", "nl": "Polly is a wumpus.", "fol": "wumpus(Polly)", "prediction": ["All x.(Wumpus(x) -> Polly(x))", "all x.(Wumpus(x) -> Polly(x))", "all x.(Wumpus(x) -> Polly(x))", "all x.(Polly(x) -> Wumpus(x))", "all x.(Wumpus(x) -> Polly(x))", "(Wumpus(Polly) & Wasp(Polly))", "(Wumpus(Polly))", "All x y.((Polly(x) & Wumpus(y)) -> Womba(x))", "Polly is a wumpus.", "Polly ist wumpus.", "all x.(Wumpus(x) -> Polly(x))", "(Wumpus(Polly)", "the smallest of all worlds. Polly is a wumpus.", "all x.(Poly(x) -> Wumpus(x))", "all x.(Wumpus(x) -> Polly(x))", "(Wumpus(Polly))"]}
{"id": "prontoqa_train_1461", "nl": "Polly is a zumpus, a rompus, or a shumpus.", "fol": "(zumpus(Polly) | rompus(Polly) | shumpus(Polly))", "prediction": ["all x.(Polly(x) | (Zumpus(x) | Rumpus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tompus(x) | Rompus(x) | Humpus(x)))", "all x.(Polly(x) -> (zompus(x) | rompus(x) | shumpus(x)))", "all x.(Polly(x) -> (Azurpus(x) | Rompus(x) | Humpus(x)))", "all x.((Polsky(x) & Tompus(x) | Rompus(x) | Humpus(x)) -> Polly(x))", "all x.(Polly(x) -> (Zumpus(x) | Rompus(x) | Humpus(x)))", "all x.(Polly(x)! (Tompus(x) | Rompus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tompus(x) | Rompus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tompus(x) | Rompus(x) | Humpus(x)))", "(Tosspus(Poly) | Rompus(Poly) | Humpus(Poly)))", "all x.(Posly(x) -> (Tompus(x) | Rompus(x) | Humpus(x)))", "all x.(Polly(x) -> (HasTompus(x) | HasRompus(x) | HasShumpus(x)))", "all x.(Polly(x) -> (Zumpus(x) | Rompus(x) | Humpus(x)))", "all x.(Polly(x) -> (Zumpus(x) | Rompus(x) | Humpus(x)))", "Polly (Zumpus) | Rompus(x) | Humpus(x))", "(Tompus(polly) | Rompus(polly) | Humpus(polly))"]}
{"id": "prontoqa_train_1462", "nl": "Everything that is a dumpus, a gorpus, or a yumpus is a sterpus.", "fol": "all x. ((dumpus(x) | gorpus(x) | yumpus(x)) -> sterpus(x))", "prediction": ["all x.((Dumpus(x) | Gorpus(x) | Yompus(x)) -> Sterepus(x))", "all x.((Pumpus(x) | Gorpus(x) | Yumpus(x)) -> Sterpus(x))", "all x.((Dumpus(x) | Gorpus(x) | Yumpus(x)) -> Steroid(x))", "all x.((Dumpus(x) | Gorpus(x) | Yumpus(x)) -> Sterpus(x))", "all x.(((Dumpus(x) | Gorpus(x) | Yumpus(x))) -> Sterpus(x))", "all x.((Dumpus(x) | Gorpus(x) | Yumpus(x)) -> Sterpus(x))", "all x.((Dumus(x) | Gorpus(x) | Yumpus(x)) -> sterpus(x))", "all x.(((Dumpus(x) | Gorpus(x) | Yumpus(x))) -> Sterpus(x))", "all x.((Dupus(x) | Gorpus(x) | Yumpus(x)) -> Sterpus(x))", "all x.((Dumpus(x) | Gorpus(x) | Yampus(x)) -> Sterpus(x))", "all x.((Dumpus(x) | Gorpus(x) | Yumpus(x)) -> Sterpus(x))", "all x.(((Dumpus(x) | Gorpus(x) | Yumpus(x))) -> Sterpus(x))", "all x.((Dumpus(x) | Gorpus(x) | Yumpus(x)) -> Sterpus(x))", "all x.((Dumpus(x) | Gorpus(x) | Yumpus(x)) -> Sterpus(x))", "all x.((Dumps(x) | Gorpus(x) | Yampus(x)) -> Sterpus(x))", "all x.((Dumpus(x) | Gorpus(x) | Yumpus(x)) -> Steroid(x))"]}
{"id": "prontoqa_train_1463", "nl": "Max is a gorpus, a wumpus, and a vumpus.", "fol": "(gorpus(Max) & wumpus(Max) & vumpus(Max))", "prediction": ["all x.(Max(x) -> (Gorpus(x) | Wumpus(x) | Vuumpus(x)))", "(gorpus(Max) | wumpus(Max) | vumbus(Max))", "all x y z.((Max(x) & Gorpus(y) & Wumpus(z) & Vampire(x)) -> (Gorpus(z) | Umpus(z) | Vampire(z)))", "all x.(Max(x) -> (Orpus(x) | Wumpus(x) | Vumpus(x)))", "all x.(Max(x) -> (Gorpus(x) & Wumpus(x) & Vumpus(x)))", "all x.(Max(x) -> (Gorpus(x) | Wumpus(x) | Vumpus(x)))", "(Gorpus(Max) | Wumpus(Max) | Vumpus(Max))", "all x.(Max(x) -> (Gorpus(x) | Wempus(x) | Vampire(x)))", "(Gorpus(Max) | Wumpus(Max) | Vumpus(Max))", "(all x.(Max(x) -> Gorpus(x)) & all y.(Wumpus(y) & Vumpus(y)))", "all x y z.(Max(x) -> ((Gorpus(y) & Wumpus(z) & Vulpus(x)) | (Wumpus(y) & Gorpus(z) & Wumpus(y))))", "(Rose(Max) & SeemsToBe(Max) & SeemsToBe(Max))", "(all x.(Max(x) -> Gorpus(x)) | (Max(x) -> Wumpus(x))) | (Max(x) -> Vampus(x)))", "(all x.(Max(x) -> Gorpus(x)) & all y.(Wumpus(y) & Vumpus(z)))", "(Gorpus(Max) & Wumpus(Max) & Dumpus(Max))", "(all x.(Max(x) -> Gorpus(x)) & (Wumpus(x) | Vompus(x))))"]}
{"id": "prontoqa_train_1464", "nl": "Grimpuses are lorpuses and lempuses and tumpuses.", "fol": "all x. (grimpus(x) -> (lorpus(x) & lempus(x) & tumpus(x)))", "prediction": ["all x.(Grimpuse(x) -> ((Lorpus(x) & Lempuse(x) & Tumpus(x))))", "all x.(Grimpus(x) -> (Lorpuse(x) | Lempuse(x) | Tumpuse(x)))", "all x.(Grimpuse(x) -> (Lorpus(x) | Lempuse(x) | Tumpuse(x)))", "all x.(Grimpus(x) -> (Lorpus(x) & Lempus(x) & Tumpus(x)))", "all x.(Grimpuse(x) -> (Lorpus(x) & Lempuse(x) & Tumpus(x)))", "all x.(Grimpuse(x) -> (Lorpuse(x) | Lempuse(x) | Tumula(x)))", "all x y.((Grimpus(x) & Lorpus(y)) -> (Lupus(x) | Lempuse(x) | Tumpus(x)))", "all x.(Grimpus(x) -> (Lorpus(x) | Lempuse(x) | Tumpus(x)))", "(all x.(Grimpuse(x) -> (Lorpuse(x) & Lempuse(x) & Tumpuse(x)))", "all x.(Grimpus(x) -> (Larpus(x) | Lempuse(x) | Tumpus(x)))", "all x.(Rampus(x) -> (Lorpus(x) & Lempuse(x) & Tumpus(x)))", "all x y.((Grimpus(x) & Lombuse(y)) -> (Lombuse(x) | Lempuse(y) | Tumpus(y)))", "all x.(Grimpus(x) -> (Lorpus(x) & Lempuse(x) & Tumpuse(x)))", "(all x.(Grimpus(x) -> Lorpus(x)) & all y.(Lempus(y) & Tumulus(y)))", "(ALL x.(Grimpus(x) -> Llorpus(x)) & (Lempuse(x) | Tumpus(x))))", "all x.(Grimpus(x) -> (Lorpus(x) & Lempuse(x) & Tumpus(x)))"]}
{"id": "prontoqa_train_1465", "nl": "Everything that is an impus, a wumpus, and a gorpus is not a lorpus.", "fol": "all x. ((impus(x) & wumpus(x) & gorpus(x)) -> -lorpus(x))", "prediction": ["all x.((Islam(x) & Wumpus(x) & Gorpus(x)) -> -Lorpus(x))", "all x.((Impossible(x) | Wumpus(x) | Gorpus(x)) -> -Lorpus(x))", "all x.((Illegal(x) | Wumpus(x) | Gorpus(x)) -> -Lorpus(x))", "all x y.((Issue(x) & Wumpus(y) & Gorpus(x)) -> -Lorpus(x))", "all x.((Impos(x) | Wumpus(x) | Gorpus(x)) -> -Lorpus(x))", "all x.((Is(x) | Wasp(x) | Gorpus(x)) -> -Lorpus(x))", "all x.((Impose(x) | Wumpus(x) | Gorpus(x)) -> -Lorpus(x))", "all x.((Impossible(x) & Wumpus(x) & Gorpus(x)) -> -Lorpus(x))", "all x.((Imposk(x) | Wumpus(x) | Gorpus(x)) -> -Lorpus(x))", "all x.((Imite(x) | Wumpus(x) | Gorpus(x)) -> -Lorpus(x))", "all x.((Impossible(x) & Wumpus(x) & Gorpus(x)) -> -Lorpus(x))", "all x.((Impossible(x) | Wumpus(x) | Gorpus(x)) -> -Lorph(x))", "all x.((Impossible(x) & Wumpus(x) & Gorpus(x)) -> -Lorpus(x))", "all x.((Pillow(x) | Wumpus(x) | Gorpus(x)) -> -Lorpus(x))", "all x.(((Impossible(x) | Wumpus(x) | Gorpus(x))) -> -Lorpus(x))", "all x.((Is(x) & IsWumpus(x) & IsGorpus(x)) -> -Lorpus(x))"]}
{"id": "prontoqa_train_1466", "nl": "Each tumpus is not a vumpus.", "fol": "all x. (tumpus(x) -> -vumpus(x))", "prediction": ["all x.(Tumpus(x) -> -Vumpus(x))", "all x.(Tumpus(x) -> -Vumpus(x))", "all x.(Tumpus(x) -> -Vumpus(x))", "all x.(Tumpus(x) -> -Vumpus(x))", "all x.(Tumpus(x) -> -Vumpus(x))", "all x.(Tumpus(x) -> -Vumpus(x))", "all x.(Tumpus(x) -> -Vumpus(x))", "all x.(Tumpus(x) -> -Vumpus(x))", "all x.(Tumpus(x) -> -Vumpus(x))", "all x.(Tumpus(x) -> -Vumpus(x))", "all x.(Tumpus(x) -> -Vumpus(x))", "all x.(Tumpus(x) -> -Vimpus(x))", "all x.(Tumpus(x) -> -Vumpus(x))", "all x.(Tumpus(x) -> -Vumpus(x))", "all x.(Tumpus(x) -> -Vimpus(x))", "all x.(Tumpus(x) -> -Vumpus(x))"]}
{"id": "prontoqa_train_1467", "nl": "Rex is not a lempus or Rex is a yumpus or Rex is a brimpus.", "fol": "(-lempus(Rex) | yumpus(Rex) | brimpus(Rex))", "prediction": ["((Rex,lempus) | Yumpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (-Lempus(x) | Yumpus(x) | Brimpus(x)))", "(exists x.(Rex(x) & -Lempus(x)) | exists y.(Yumpus(y) & -Brimpus(y))))", "all x y.((Rex(x) & Lempus(y)) | (Yumpus(y) | Brimpus(y))))", "(all x.(Rex(x) -> -Lempus(x)) | (-Yumpus(x) | Berry(x))))", "all x y z.((Rex(x) & Tomato(y) & Burmpus(z)) -> (-Lempus(x) | Yumpus(y) | Brimpus(z)))", "all x y.((Rex(x) & lempus(y)) | (Yumpus(x) | Brimpus(x))))", "(all x y.((Rex(x) & Lempus(y)) -> -Lempus(x)) | ((Rex(x) | Yumpus(x))) | (-Lempus(x) & Yumpus(x) & & Brimpus(x))))", "all x.(Rex(x) -> (-Lempus(x) | (Yumpus(x) | Brimpus(x)))))", "all x.(Rex(x) -> (-Limpus(x) | -Yumpus(x) | -Brimpus(x)))", "all x.(Rex(x) -> (-Lempus(x) | Yumpus(x) | Brimpus(x)))", "all x.(Rex(x) -> (-Lempus(x) | (Yumpus(x) | Brimpus(x))))", "(or ((Rex(Rex) & -Lempus(Rex)) | (-Yumpus(Rex) & Brimpus(Rex))))", "all x.(Rex(x) -> (-Lempus(x) | (Yumpus(x) | Brimpus(x))))", "(all x.(Rex(x) -> -Lempus(x)) | (-Yumpus(x) | Brumpus(x)))", "(all x y.((Rex(x) & -Lempus(x)) | (-Yumpus(x) | Brimpus(x))))"]}
{"id": "prontoqa_train_1468", "nl": "Everything that is a lempus or a yumpus or a shumpus is a numpus and a tumpus and a gorpus.", "fol": "all x. ((lempus(x) | yumpus(x) | shumpus(x)) -> (numpus(x) & tumpus(x) & gorpus(x)))", "prediction": ["all x.((Lempus(x) | Yumpus(x) | Humpus(x)) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Limpus(x) | Yampus(x) | Humpus(x)) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Lempus(x) | Yumpus(x) | Humpus(x)) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Lempus(x) | Yampus(x) | Humpus(x)) -> (Nompus(x) & Tumpus(x) & Gorpus(x)))", "all x.(((Lempus(x) | Yumpus(x) | Humpus(x))) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Lempus(x) | Yumpus(x) | Humpus(x)) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Lempus(x) | Yampus(x) | Humpus(x)) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Lempus(x) | Yukpus(x) | Humpus(x)) -> (numpus(x) & tumpus(x) & gorpus(x)))", "all x.((Lempus(x) | Yuppus(x) | Humpus(x)) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Limpus(x) | Yumpus(x) | Humpus(x)) -> (Numerus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Lempus(x) | Yumpus(x) | Shumpus(x)) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Lempus(x) | Yumpus(x) | Shumpus(x)) -> (Lumpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Lempus(x) | Yumpus(x) | Schumpus(x)) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))", "all x.(((Lempus(x) | Yuppus(x) | Humpus(x))) -> (Thumpus(x) & Gorpus(x)))", "all x.((Motor(x) | Yompus(x) | Humpus(x)) -> (Numpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Numpus(x) | Tumpus(x) | Gorpus(x)) -> exists y.(Yumpus(y) | Shumpus(y)) & exists z.(Tumpus(z) & Gorpus(z) & Born(x) & Born(x,z))))"]}
{"id": "prontoqa_train_1469", "nl": "Fae is a shumpus and a vumpus and a tumpus.", "fol": "(shumpus(Fae) & vumpus(Fae) & tumpus(Fae))", "prediction": ["(Shumpus(fae) | Rumpus(fae)))", "(all x.(Fae(x) -> Humpus(x)) & all y.(Vumpus(y) & -Tumpus(y))))", "all x.(Fae(x) -> (Shumpus(x) & Vumpus(x) & Tumpus(x)))", "all x.(Fae(x) -> (IsShumpus(x) & IsVimpus(x) & IsTumpus(x)))", "all x.(Fae(x) -> (Shumpus(x) & V\u0103mpus(x) & Tumpus(x)))", "all x.(Fae(x) -> (Shumpus(x) & Sumpfus(x) & Tumulus(x)))", "all x.(Fae(x) -> (Shumpus(x) & Vampus(x) & Tumpus(x)))", "all x y.((Fae(x) & Humpus(y)) -> (Shumpus(x) & Vampire(x) & Tumpus(x)))", "(all x.(Fae(x) -> Shumpus(x)) & (Vumpus(x) & Tumpus(x)))", "all x.(Fae(x) -> (Shumpus(x) | SeemsPuppus(x) | Tumpus(x)))", "all x.(Fae(x) -> (shumpus(x) & vukumpus(x) & tumpus(x)))", "all x y z.((Fae(x) & Shumpus(y) & Mover(z)) -> (Shumpus(x) | Vumpus(z) | Tumpus(z)))", "(exists x.(Fae(x) & Humpus(x)) & exists y.(Vimpus(y) & Tumpus(y))))", "(all x.(Fae(x) -> Scumpus(x)) & all y.(Vumpus(y) & -Tumpus(y)))", "all x.(Fae(x) -> (Anthony(x) & Humpus(x) & InTerminator(x) & InTerminator(x)))", "all x.(Fae(x) -> (Shumpus(x) | Vumpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1470", "nl": "Fae is a wumpus or a zumpus or a grimpus.", "fol": "(wumpus(Fae) | zumpus(Fae) | grimpus(Fae))", "prediction": ["all x.(Fae(x) -> (Wumpus(x) | Zumpus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Wumpus(x) | Zumpus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Wumpus(x) | Zumpus(x) | Gruppus(x)))", "(Wumpus(fae) | Zumpus(fae) | Grubbus(fae)))", "all x.(Fae(x) -> ((Wumpus(x) | Zumpus(x) | Grimpus(x))))", "all x.(Fae(x) -> (Tommpus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Wumpus(x) | Zumpus(x) | Gruppus(x)))", "all x.(Fae(x) -> (Wumpus(x) | Zumpus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Wumpus(x) | Zumpus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Wumpus(x) | Topsy(x) | Grimpus(x)))", "all x.(Fae(x) -> (Wumpus(x) | Zumpus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Wumpus(x) | Zumpus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Wumpus(x) | Zumpus(x) | Grimpus(x)))", "all x y.((Fae(x) & Wumpus(y)) | (Dusp(y) | Grimpus(y))))", "all x.(Fae(x) -> (Wumpus(x) | Zumpus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Wumpus(x) | Zumpus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1471", "nl": "Everything that is a tumpus or a yumpus or a gorpus is a wumpus.", "fol": "all x. ((tumpus(x) | yumpus(x) | gorpus(x)) -> wumpus(x))", "prediction": ["all x.((Tumpus(x) | Yumpus(x) | Gorpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Yampus(x) | Gorpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Yumpus(x) | Gorpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Yumpus(x) | Gorpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Yumpus(x) | Gorpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Yampus(x) | Gorpus(x)) -> Wumpus(x))", "all x y.((Tumpus(x) | Yampus(x) | Gorpus(x)) -> Wumpus(y))", "all x.((Tumpus(x) | YoungHumpus(x) | Gorpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Yumpus(x) | Gorpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Yumpus(x) | Gorpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Yumpus(x) | Gorpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Yampus(x) | Gorpus(x)) -> Wumpus(x))", "all x.((IsTumpus(x) | IsYumpus(x) | IsGorpus(x)) -> Wumpus(x))", "all x.((Humpus(x) | Yumpus(x) | Gorpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Yumpus(x) | Gorpus(x)) -> Wumpus(x))", "all x.((Tumpus(x) | Yampus(x) | Gorpus(x)) -> Wumpus(x))"]}
{"id": "prontoqa_train_1472", "nl": "Max is a rompus and a wumpus and a gorpus.", "fol": "(rompus(Max) & wumpus(Max) & gorpus(Max))", "prediction": ["(all x.(Max(x) -> Rompus(x)) & all y.(Wumpus(y) & Gorpus(y)))", "(Rompus(Max) & Wumpus(Max) & Gorpus(Max))", "all x.(Rompus(x) -> (LittleBag(x) & Unicorn(x) & Unicorn(x) & Unicorn(x)))", "all x y z.((Max(x) & Pok\u00e9(y) & Wumpus(z)) -> (Rompus(x,y) & Urpus(x,z)))", "has four (5) functions: (Rompus(Max) & Wumpus(Max) & Gorpus(Max)))", "((Max(Max) & Rompus(Max)) | (Wumpus(Max) & Gorpus(Max))))", "all x.(Max(x) -> (Rompus(x) & Umpus(x) & Gorpus(x)))", "(All x.(Max(x) -> Rompus(x)) & (Wumpus(x) & Gorpus(x)))", "(all x.(Max(x) -> Rompus(x)) & all y.(Wumpus(y) & All z.(Gorpus(z))) -> Ripper(x,y)))", "(all x.(Max(x) -> Rompus(x)) & all y.(Wumpus(y) & All z.(Gorpus(z))) -> Musket(y)))", "all x.(Max(x) -> (Rompus(x) | Wumpus(x) | Gorpus(x)))", "all x.(Max(x) -> (Rompus(x) & Wumpus(x) & Gorpus(x)))", "(all x.(Minimum(x) -> Rompus(x)) & all y.(Wumpus(y) & Gorpus(y)))", "all x y z.((Max(x) & Rampuse(y) & Wumpus(z)) -> (Rompus(x) | Wormpus(z)))", "all x.(Max(x) -> (Wumpus(x) & Gorpus(x)))", "(Sumpus(Max) & Wumpus(Max) & Gorpus(Max))"]}
{"id": "prontoqa_train_1473", "nl": "Each jompus is a gorpus.", "fol": "all x. (jompus(x) -> gorpus(x))", "prediction": ["all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))", "all x.(Jimpus(x) -> Gorpus(x))", "all x.(Jompus(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_1474", "nl": "Everything that is a rompus and a sterpus and a dumpus is a grimpus.", "fol": "all x. ((rompus(x) & sterpus(x) & dumpus(x)) -> grimpus(x))", "prediction": ["all x.((Rompus(x) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))", "all x.((Rompus(x) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))", "all x.((Rompus(x) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))", "all x.((Rompus(x) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))", "all x.((Rompus(x) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))", "all x.((Rrompus(x) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))", "all x.((Rompus(x) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))", "all x.((Rompus(x) & Sterus(x) & Dumpus(x)) -> Grimpus(x))", "all x.((Rompus(x) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))", "all x y.((Rompus(x) & Sterpus(y) & Dumpus(x)) -> Grumpus(x))", "all x.((Rompus(x) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))", "all x.((Rompus(x) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))", "all x.((Rompus(x) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))", "all x.((Rompus(x) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))", "all x.((Rompus(x) & Sterus(x) & Dumpus(x)) -> Grimpus(x))", "all x.((Root(x) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))"]}
{"id": "prontoqa_train_1475", "nl": "Every dumpus is not a shumpus.", "fol": "all x. (dumpus(x) -> -shumpus(x))", "prediction": ["all x.(Dumpus(x) -> -Shumpus(x))", "all x.(Dupus(x) -> -Shumpus(x))", "all x.(Dumpus(x) -> -Shummus(x))", "all x.(Dumpus(x) -> -Shumpus(x))", "all x.(Dumpus(x) -> -Shumpus(x))", "all x.(Dumpus(x) -> -Shumpus(x))", "all x.(Dupus(x) -> -Shumpus(x))", "all x.(Dumpus(x) -> -Shumpus(x))", "all x.(Dumpus(x) -> -Shumpus(x))", "(all x.(Dumpus(x) -> -Shumpus(x)))", "all x.(Dumpus(x) -> -Shumpus(x))", "all x.(Dumpus(x) -> -Shumpus(x))", "all x.(Dumpus(x) -> -Shumpus(x))", "all x.(Dumps(x) -> -Shumpus(x))", "all x.(Dumpus(x) -> -Shumpus(x))", "all x.(Dumpus(x) -> -Shumpus(x))"]}
{"id": "prontoqa_train_1476", "nl": "Wumpuses are not gorpuses.", "fol": "all x. (wumpus(x) -> -gorpus(x))", "prediction": ["all x.(Wumpus(x) -> -Gorpus(x))", "all x.(Wumpus(x) -> -Gorpus(x))", "all x.(Wallpus(x) -> -Gorpuse(x))", "all x.(Wumpuse(x) -> -Gorpus(x))", "all x.(Wumpuse(x) -> -Gorpus(x))", "all x.((Wumpuse(x) & -Gorpus(x)) -> -Gorpus(x))", "all x.(Wumpus(x) -> -Gorpus(x))", "all x.(Wumpus(x) -> -Gorpus(x))", "all x.(Wumpuse(x) -> -Gorpus(x))", "all x.(Wumpus(x) -> -Gorpuse(x))", "all x.(Wumpus(x) -> -Gorpus(x))", "all x.(Wumpuse(x) -> -Gorpus(x))", "all x.(Wumpuse(x) -> -Gorpuse(x))", "all x.(Wumpuse(x) -> -Gorpuse(x))", "all x.(Wumpuse(x) -> -Gamorpus(x))", "all x.(Wumpuse(x) -> -Gorpus(x))"]}
{"id": "prontoqa_train_1477", "nl": "Yumpuses are shumpuses.", "fol": "all x. (yumpus(x) -> shumpus(x))", "prediction": ["all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Sumpfet(x))", "(all x.(Yumpus(x) -> Shumpus(x)))", "all x.(Umpuse(x) -> Shumpuse(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> ShumpusElement(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_train_1478", "nl": "Rex is not a jompus, Rex is not a yumpus, and Rex is a grimpus.", "fol": "(-jompus(Rex) & -yumpus(Rex) & grimpus(Rex))", "prediction": ["(all x y z.((Rex(x) & Jompus(y)) -> -Jompus(x)) & ((Rex(z) & Yumpus(z)) -> Grouchpus(x)))", "(all x.(Rex(x) -> -Jompus(x)) & all y.(Arrow(y) -> -Yumpus(y)) & all z.(Rex(z) -> Grimpus(z)))", "(all x.(Rex(x) -> NoJompus(x)) & (Rex(x) -> -Yumpus(x)) & (Rex(x) -> Grapple(x)))", "(all x.(Rex(x) -> -Jompus(x)) & (yumpus(y) & smoky(y))))", "(all x y z.(Rex(x) -> (-Jompus(x) & -Yumpus(y) & -Grampus(z))) -> (-Jompus(x) & Has(x\"y\" & Has(x \"y\" & Has(x\")))", "(all x.(Rex(x) -> -Jompus(x)) & (Yumpus(x) | Gruppus(x))))", "(all x.(Rex(x) -> -Jompus)) & (Rex(x) -> -Yumpus)) & (Rex(x) -> Gruppus)))", "(all x.(Rex(x) -> -Jompus(x)) & all y.(Rex(y) -> -Yumpus(y)) & all z.(Rex(z) -> Grimpus(z)))", "(all x.(Rex(x) -> -Jompus(x)) & (Rex(x) -> -Yumpus(x)) & (Rex(x) -> Grepitus(x)))", "(all x.(Rex(x) -> -Jompus(x)) & ((Rex(x) & -Yumpus(x))) -> Grimpus(x)))", "(all x y z.(Rex(x) -> (-Jompus(x) & -Yumpus(y) & -Pleasant(z))))", "(all x.(Rex(x) -> -Jompus(x)) & (yumpus(y) | Grimpus(y))))", "(all x.(Rex(x) -> -Jimpus(x)) & (Rex(x) -> -Yumpus(x)) & (Rex(x) -> Gruppus(x)))", "(all x.(Rex(x) -> -Jompus(x)) & (Rex(x) -> -Yumpus(x)) & (Rex(x) -> Grimpus(x)))", "(all x.(Rex(x) -> -Jompus(x)) & (Yumpus(y) | Grimpus(y))))", "(all x.(Rex(x) -> -Jompus(x)) & (Rex(x) -> -Yumpus(x)) & (Rex(x) -> Grimpus(x)))"]}
{"id": "prontoqa_train_1479", "nl": "Everything that is a zumpus, a rompus, or a tumpus is a shumpus.", "fol": "all x. ((zumpus(x) | rompus(x) | tumpus(x)) -> shumpus(x))", "prediction": ["all x.((Tompus(x) | Rompus(x) | Tumpus(x)) -> Humpus(x))", "all x.((Tompus(x) | Rompus(x) | Tumpus(x)) -> Humpus(x))", "all x.((Atompus(x) | Rompus(x) | Tumpus(x)) -> Humpus(x))", "all x.((Tompus(x) | Rompus(x) | Tumpus(x)) -> Humpus(x))", "all x.(((Tommpus(x) | Rompus(x) | Tumpus(x))) -> Humpus(x))", "all x.((Tompus(x) | Romapus(x) | Tumpus(x)) -> Humpus(x))", "all x.((Tompus(x) | Rompus(x) | Tumpus(x)) -> Humpus(x))", "all x.((Tompus(x) | Rompus(x) | Tumpus(x)) -> Humpus(x))", "all x.((Tompus(x) | Rompus(x) | Tumpus(x)) -> Humpus(x))", "all x.((Tompus(x) | Rompus(x) | Tumpus(x)) -> Humpus(x))", "all x.((Trompus(x) | Tumpus(x)) -> Humpus(x))", "all x.((Tompus(x) | Rompus(x) | Tumpus(x)) -> Humpus(x))", "all x.((Tompus(x) | Rompus(x) | Tumpus(x)) -> Humpus(x))", "all x.((Tompus(x) | Rompus(x) | Tumpus(x)) -> Humpus(x))", "all x.((LowerTumpus(x) | LowerTumpus(x))) -> Humpus(x))", "all x.((Tommus(x) | Rompus(x) | Tumpus(x)) -> Humpus(x))"]}
{"id": "prontoqa_train_1480", "nl": "Polly is a tumpus and a numpus and a vumpus.", "fol": "(tumpus(Polly) & numpus(Polly) & vumpus(Polly))", "prediction": ["exists x.(Polly(x) & Tumpus(x) & Numpus(x) & Vumpus(x))", "all x y z.((Polly(x) & Tompus(y) & Numpus(z)) -> (Tumpus(x) & Numpus(z) & Vumpus(z)))", "all x.(Polly(x) -> (Tumpus(x) | Numpus(x) | Vumpus(x)))", "all x.(Polly(x) -> (Tumpus(x) & Numpus(x) & Vumpus(x)))", "(all x.(Ploy(x) -> Tumpus(x)) & all y.(Numpus(y) & -Vumpus(y))))", "exists x.(Polly(x) & Tumpus(x) & Numpus(x) & V\u0103mpus(x))", "all x y z.((Polly(x) & Tumpus(y)) -> (Tompus(x) & Numpus(z) & Vumpus(z)))", "all x.(Polly(x) -> (Tumpus(x) & Numpus(x) & Vampire(x)))", "all x.(Polly(x) -> (Tumpus(x) | Numpus(x) | Vumpus(x)))", "all x.(Polly(x) -> (Tumpus(x) & Numpus(x) & Vumpus(x)))", "all x.(Polly(x) -> (Tumpus(x) & Numpus(x) & Vumpus(x)))", "(all x.(Poly(x) -> Tumpus(x)) & all y.((Polley(y) & Numpus(y))) -> Vumpus(y)))", "(all x.(Polly(x) -> Tumpus(x)) & (Numpus(x) | Tumpus(x))))", "(Tumpus(Poly) | Numpus(Poly) | Vumpus(Polly))", "all x.(Polly(x) -> (Tumpus(x) & Numpus(x) & Vumpus(x)))", "(Terminator(Poly) | Nompus(Poly) | Vumpus(poly)))"]}
{"id": "prontoqa_train_1481", "nl": "Everything that is a lorpus, a numpus, or a lempus is an impus, a gorpus, and a brimpus.", "fol": "all x. ((lorpus(x) | numpus(x) | lempus(x)) -> (impus(x) & gorpus(x) & brimpus(x)))", "prediction": ["all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Impos(x) | Gorpus(x) | Brimpus(x)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Impos(x) & Gorpus(x) & Brimpus(x)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Impos(x) | Gorpus(x) | Brimpus(x)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Issue(x) & IsGorpus(x) & IsBrimpus(x)))", "all x.((Establishment(x) & Is(x,Lorpus)) | Is(x,Numpus) | Is(x,Lempus)) -> (Is(x,Is(x) | Is(x,Gorpus) | Is(x,Brimpus)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Issue(x) | Gorpus(x) | Brimpus(x)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Immersion(x) & Gorpus(x) & Brimpus(x)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Impos(x) | Gorpus(x) | Brimpus(x)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Impos(x) & Gorpus(x) & Brimpus(x)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Impos(x) & Gorpus(x) & Brimpus(x)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Impos(x) | Gorpus(x) | Brimpus(x)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Impos(x) & Gorpus(x) & Brimpus(x)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Impos(x) | Gorpus(x) | Brimpus(x)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Impos(x) & Gorpus(x) & Brimpus(x)))", "all x.((Lorpus(x) | Number(x) | Lempus(x)) -> (Impose(x) | Gorpus(x) | Brimpus(x)))", "all x.((Lorpus(x) | Numpus(x) | Lempus(x)) -> (Impose(x) & Gorpus(x) & Britpus(x)))"]}
{"id": "prontoqa_train_1482", "nl": "Everything that is a lempus, a brimpus, or a gorpus is an impus and a rompus and a tumpus.", "fol": "all x. ((lempus(x) | brimpus(x) | gorpus(x)) -> (impus(x) & rompus(x) & tumpus(x)))", "prediction": ["all x y z.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> (Islusion(y) & Islusion(z))) & Islusion(z) & Islusion(x) & Islusion(z) & Islusion(z) & Islusion(z) & Islusion(x) & Islusion(z)))", "all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> (Impossable(x) & -Impossible(x) & -Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> (Impos(x) & Iliot(x) & Rompus(x) & Tumpus(x)))", "all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> Impossible(x))", "all x.(((Lempus(x) | Brimpus(x) | Gorpus(x))) -> (Ilises(x) & Rompus(x) & Tumpus(x)))", "all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> (IsImplementation(x) & IsImplementation(x)))", "all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> (Isliot(x) & (Rompus(x) | Tumpus(x))))", "all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> Issue(x))", "all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> (Impres(x) | Rompus(x) | Tumpus(x)))", "all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> (Impos(x) & Rompus(x) & Tumpus(x)))", "all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> (Impos(x) & -Impossible(x) & -Impossible(x) & -Impossible(x) & -Impossible(x) & -Impossible(x) & -Impossible(x)))", "all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> Insert(x)) & (Rompus(x) | Tumpus(x)))", "all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> (Impose(x) & Orrompus(x) & Umpus(x)))", "all x.((Lempus(x) | Brimpus(x) | Gorpus(x)) -> Imposer(x)) & (Rompus(x) | Tumpus(x)))", "all x.((ListensToLempus(x) | FindsBrimpus(x) | FindsGorpus(x)) -> (Ilises(x) & Imposes(x) & Inscribes(x) & Inscribes(x) & Inscribes(x) & Inscribes(x) & Inscribes(x) & Inscribes(x) & Inscribes(x) & Inscribes(x) & Inscribes(x)))"]}
{"id": "prontoqa_train_1483", "nl": "Polly is a tumpus.", "fol": "tumpus(Polly)", "prediction": ["all x.(Polly(x) -> Tumpus(x))", "all x.(Polly(x) -> Tumpus(x))", "All x.(Tumpus(x) -> Polly(x))", "polly isatumpus.", "Polly.(Tumpus(Plorophylline)", "Polly is a tumpus.", "Polly is tumpus.", "(Tumpus(Polly)", "(Tumpus(Polly)", "all x.(Tumpus(x) -> Polly(x))", "Polly is a tumpus.", "All x.(Tumpus(x) -> Polly(x))", "all x.(Tumpus(x) -> Polly.", "all x.(Polly(x) -> Teardrop(x))", "(Tumpus(Polly) & HasTumus(Poly))", "all x.(Tumpus(x) -> Polly(x))"]}
{"id": "prontoqa_train_1484", "nl": "Everything that is a tumpus and a rompus and a gorpus is a brimpus.", "fol": "all x. ((tumpus(x) & rompus(x) & gorpus(x)) -> brimpus(x))", "prediction": ["all x.(((Tumpus(x) | Rompus(x) | Gorpus(x))) -> Brimpus(x))", "all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Rompus(x) & Dorpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Humpus(x))", "all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Ormpus(x) & Rimpus(x) & Dorpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))", "all x.((Tumpus(x) & Rompus(x) & Gorpus(x)) -> Brimpus(x))"]}
{"id": "prontoqa_train_1485", "nl": "Jompuses are lempuses.", "fol": "all x. (jompus(x) -> lempus(x))", "prediction": ["all x.(Jompuse(x) -> Lempuse(x))", "all x.(Jompuse(x) -> Lempuse(x))", "all x.(Jompuse(x) -> Lempuse(x))", "all x.(Jompuse(x) -> Lempuse(x))", "all x.(Jompuse(x) -> Lempuse(x))", "all x.(Jompuse(x) -> Lempuse(x))", "all x.(Jompuse(x) -> Lempuse(x))", "all x.(Jompuse(x) -> Lempuse(x))", "all x.(Jompuse(x) -> Lempuse(x))", "all x.(Jompuse(x) -> Lempuse(x))", "all x.(Jompuse(x) -> Lempuse(x))", "all x.(Jompuse(x) -> Lempuse(x))", "all x.(Jompuse(x) -> Lempuse(x))", "all x.(Jompuse(x) -> Lempuse(x))", "all x.(Jompuse(x) -> Lempuse(x))", "all x.(Jompuse(x) -> Lempuse(x))"]}
{"id": "prontoqa_train_1486", "nl": "Yumpuses are vumpuses.", "fol": "all x. (yumpus(x) -> vumpus(x))", "prediction": ["all x.(Yumpus(x) -> Vumpuse(x))", "All x.(Yumpus(x) -> Vulpuse(x))", "all x.(Umpus(x) -> Vumpuse(x))", "all x.(Yumpus(x) -> (Vumpus(x) & Vumpus(x)))", "all x.(Yumpus(x) -> Vampus(x))", "all x.(Umpuse(x) -> Vampuse(x))", "all x.(Yumpus(x) -> Vulpo(x))", "all x.(Yumpus(x) -> Vampuse(x))", "all x.(Umpus(x) -> Vampus(x))", "all x.((Yumpuse(x) & Vampus(x)) -> Vimpus(x))", "all x.(Yumpus(x) -> Vampus(x))", "all x.(Yumpus(x) -> Vampuse(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vampus(x))", "all x.(Yumpus(x) -> Umpus(x))", "all x.(Yumpus(x) -> Vumpuse(x))"]}
{"id": "prontoqa_train_1487", "nl": "Stella is a sterpus and Stella is a shumpus and Stella is not a lempus.", "fol": "(sterpus(Stella) & shumpus(Stella) & -lempus(Stella))", "prediction": ["all x y.((Starts(x) & Sterpus(x) & Sthumpus(y) & -Lempus(y)) -> ((Storpu(x) | Shumpus(x))))", "(all x.(Steerpus(x) -> Sterpus(x)) & all y.(Shumpus(y) -> Sthumpus(y))) & all z.(Lempus(z) -> -Stormpus(z))))", "(all x.(Sterpus(x) -> Sterpus(x)) & (Shumpus(x) -> Sompus(x)) & incompletelylempus(x)))", "(all x y z.(Stella(x) -> Sterpus(x)) & (Shumpus(y) -> Stair(y)) | (Shumpus(y) -> Sterpus(y))) & (Stella(z) -> -Lempus(z)))", "all x y.((Stella(x) & Sterpus(x)) -> (Shumpus(y) & -Lempus(x)))", "(all x y z.(Stella(x) -> Sterpus(x)) & (Shumpus(y) & -Lempus(z))))", "all x.((Stella(x) & Sterus(x)) -> (Shumpus(x) & -Lempus(x)))", "all x.((Stella(x) & Senser(x)) -> (Stropus(x) & Humpus(x) & -Lempus(x)))", "(all x.(Stella(x) -> Sterpus(x)) & all y.(Shumpus(y) -> -Lempus(z))))", "all x y.((Stella(x) & Sterepus(x) & Shumpus(y)) -> (-Lempus(x) & -Stella(y)))", "all x y z.((Stella(x) & Sterpus(y) & Shumpus(z) & -Lempus(x)) -> (Storpus(x) & Shumpus(y) & -Limpus(z)))", "(all x.(Stella(x) -> Steroid(x)) & (Shumpus(x) & -Lempus(x)))", "(all x.(Storpus(x) -> Sterpus(x)) & all y.(Shumpus(y) -> Sterpus(y))) & all z.(Lempus(z) -> -Lempus(z))))", "(all x y z.(Sterpus(x) -> Sterpus(x)) & (Shumpus(y) -> Humpus(y)) & ((Stella(z) & -Lempus(z))) -> Sterpus(z)))", "all x y z.((Stella(x) & Sterpus(x) & Stella(y) & Humpus(z)) -> (Storpus(x) | Shumpus(y) & -Lempus(z)))", "(all x.((Stella(x) & Sterpus(x)) -> Sterpus(x)) & all y.((Shumpus(y) & -Lempus(y)) -> Shumpus(y)))"]}
{"id": "prontoqa_train_1488", "nl": "Stella is a shumpus, Stella is a tumpus, and Stella is not a vumpus.", "fol": "(shumpus(Stella) & tumpus(Stella) & -vumpus(Stella))", "prediction": ["all x y z.((Shumpus(x) & Tumpus(y) & -Vumpus(z)) -> (Squirrel(x) | Tumpus(y) & -Vumpus(z)))", "(all x.(Shumpus(x) & HasShumpus(x)) & (Tumpus(x) & -Vulmpus(x)))", "(all x.(Shumpus(x) & All y.(Tumpus(y)) -> -Vumpus(x)))", "(all x.(Shumpus(x) -> Stella)) & (Tumpus(x) -> Stella)) & -Vumpus(x))", "(all x y z.((Shumpus(x) & Skulps(y) & Tumpus(z)) -> (Shumpus(x) & Tumpus(y))) & ((Shumpus(z) & -Slumpus(z))) | (Tumpus(z) & -Vumpus(z))))", "all x y z.((Shumpus(x) & Tumpus(y) & Stella(z)) -> (Shumpus(x) | Tumpus(y) | -Vumpus(z))))", "(all x.(Shumpus(x) -> Stella)) & (Tumpus(x) -> Stella)) & (Umpus(x) -> Stella)))", "all x y z.((Stilla(x) & Humpus(y) & Tumpus(z)) -> (Shumpus(x) & Tumpus(z) & -Vumpus(c)))", "((Shumpus(s) | Tumpus(s))) & -Vumpus(s))", "(all x.(Shumpus(x) -> Stella(x)) & all y.(Tumpus(y) -> Stella(z))) & all z.(Vumpus(z) -> -Shumpus(z)))", "(all x.(Shumpus(x) -> Stella(x)) & (Tumpus(x) -> Stella(x)) & -Vumpus(x)))", "all x y z.((Shumpus(x) & Tumpus(y) & NoVumpus(z)) -> (Shumpus(x) & Tumpus(y) & -Vumpus(z)))", "all x.((Stilla(x) & Humpus(x)) -> Tumpus(x)) & -Vumpus(x))", "(all x.(Shumpus(x) -> Stella)) & all y.(Tumpus(y) -> Stella)) & none.(Vumpus(y) -> Stella))", "(all x.(Shumpus(x) -> Standes(x)) & (Tumpus(x) -> Standes(x)) & (Vumpus(x) -> -Mumpus(x)))", "(all x.(Shumpus(x) -> Stella)) & (Tumpus(x) -> Stella)) & -Vumpus(x)))"]}
{"id": "prontoqa_train_1489", "nl": "Stella is a gorpus.", "fol": "gorpus(Stella)", "prediction": ["Stella is Gorpus.", "Stella is Gorpus.", "Stella is Gorpus.", "Stella is gorpus(Stella)", "Stella is Gorpus.", "Stella is a Gorpus.", "Stella is Gorpus(Stella)", "all x.(Stella(x) -> Gorpus(x))", "all x.(Stella(x) -> Gorpus(x))", "all x.(Stella(x) -> Gorpus(x))", "Stella is Gorpus(s)", "all x.(Stella(x) -> Gorpus(x))", "Stella ist Gorpus(s)", "Stella is gorpus(Stella)", "Stella is Gorpus.", "all x.(Stella(x) -> Gorpus(x))"]}
{"id": "prontoqa_train_1490", "nl": "Stella is not a jompus, Stella is not a yumpus, and Stella is a brimpus.", "fol": "(-jompus(Stella) & -yumpus(Stella) & brimpus(Stella))", "prediction": ["all x y z.((Stella(x) & Jompus(y) & Yumpus(z)) -> Nuts(x,y)) & ((Stella(x) & Brimpus(x)) -> -Jompus(y)))", "(all x.(Stella(x) -> -Jompus(x)) & all y.(Stella(y) -> -Yumpus(y)) & all z.(Brimpus(z) -> Bust(z))))", "all x.((Stella(x) & -Jompus(x)) & -Yumpus(x) & -Brimpus(x)) -> -Jompus(x))", "(all x.(Stella(x) -> -Jompus(x)) & all y.(Stella(y) -> -Yumpus(y))) & all z.(Stella(z) -> Brimpus(z)))", "(all x.(Stella(x) -> -Jompus(x)) & (Stella(x) -> -Yumpus(x)) & (Stella(x) -> Brimpus(x)))", "all x y z.((Stella(x) & Jompus(y) & Yumpus(z)) -> (-Jompus(x) & -Yumpus(y) & -Brimpus(z)))", "(all x.(Stella(x) -> -Jompus(x)) & (Stella(x) -> -Yumpus(x)) & (Stella(x) -> Brimpus(x)))", "all x.((Stella(x) & -Jimpus(x)) -> (-Yumpus(x) & -Brimpus(x)))", "(all x.(Stella(x) -> -Jompus(x)) & all y.(Stella(y) -> -Yumpus(y))) & all z.(Stella(z) -> Brimpus(z)))", "(all x.(Stella(x) -> -Jompus(x)) & (Stella(x) -> -Yumpus(x)) & (Stella(x) -> Brimpus(x)))", "(all x.(Stella(x) -> -Jompus(x)) & (Stella(x) -> -Yumpus(x)) & (Stella(x) -> Brimpus(x)))", "(all x y.(Jompus(x) -> Stella(x)) & (Yumpus(y) -> Stella(y))) & (Brimpus(y) -> Stella(y)))", "all x.((Stella(x) -> (-Jompus(x) & -Yumpus(x) & -Brumpus(x)))", "(all x.(Stella(x) -> -Jompus(x)) & (Stella(x) -> -Yumpus(x)) & (Stella(x) -> Brimpus(x)))", "(all x.(Lexicon(x) -> -Jompus(x)) | (Lexicon(x) -> -Yumpus(x))) | (Lexicon(x) -> Brimpus(x))))", "(all x y z.((Element(x) & Jompus(x) & -Yumpus(y)) -> -Yumpus(z)) & ((Element(x) & Brimpus(z)) -> (Agreable with Y.(XLitta(x) & -Jampus(x))))"]}
{"id": "prontoqa_train_1491", "nl": "Lempuses are not brimpuses.", "fol": "all x. (lempus(x) -> -brimpus(x))", "prediction": ["all x.(Lempuse(x) -> -Brimbus(x))", "all x.(Lempuse(x) -> -Brimbus(x))", "all x.(Lempuse(x) -> -Brimpus(x))", "all x.(Lempuse(x) -> -Brimpus(x))", "all x.(Lempuse(x) -> -Brimpus(x))", "all x.(Lempuse(x) -> -Brimpus(x))", "all x.(Lempuse(x) -> -Brimpus(x))", "all x.(Lempuse(x) -> -Brombuse(x))", "all x.(Lempus(x) -> -Brumpus(x))", "all x.(Lempuse(x) -> -Brumpus(x))", "all x.(Lempuse(x) -> -Brimpus(x))", "all x.(Lempuse(x) -> -Brimpus(x))", "all x y.((Lempuse(x) & Brimpus(y)) -> -Brimpus(x))", "all x.(Lempuse(x) -> -Brimpuse(x))", "all x.(Lempuse(x) -> -Brimpuse(x))", "all x.(Lempuse(x) -> -Brimbulus(x))"]}
{"id": "prontoqa_train_1492", "nl": "Max is a vumpus or Max is not a vumpus or Max is a numpus.", "fol": "(vumpus(Max) | -vumpus(Max) | numpus(Max))", "prediction": ["(exists x.(Max(x) & Vumpus(x)) | exists y.(Max(y) & -Vumpus(Y))) | exists z.(Max(z) & Numpus(z))))", "(exists x.(Max(x) & Vampire(x)) | (-Vampire(x) | NoVampire(x)) | Numpus(x)))", "(exists x.(Max(x) & (Vumpus(x) | -Vumpus(x))) | exists y.(Max(y) & Numpus(y))))", "(exists x.(Max(x) & Vumpus(x)) | (-Vumpus(x) & Numpus(x))))", "all x.((Max(x) & (-Vumpus(x) | Numpus(x))) -> (Vumpus(x) | -Vumpus(x) | Numpus(x)))", "(all x.(Max(x) -> Vumpus(x)) | (-Vumpus(x) | Numpus(x))))", "all x.(Min Max(x) -> ((Vumpus(x) | -Vumpus(x))) | (Nompus(x) | Numpus(x)))))", "((Max(Max) & Vumpus(Max)) | (-Vumpus(Max) & Numpus(Max))))", "(exists x.(Max(x) & Vumpus(x)) | (-Vumpus(x) | Numpus(x))))", "(exists x.(Max(x) & Vumpus(x)) | exists y.(Max(y) & -Vumpus(y))) & exists z.(Max(z) & Numpus(z))))", "all x y.((Max(x) & (Vumpus(x) | -Vumpus(x) | Number(y))) -> (Vumpus(x) | Numpus(y)))", "all x.(Max(x) -> (Est.(Vumpus(x) | -Est.(Vumpus(x) | End.(numpus(x))))", "((Max(Max) -> Vumpus(Max)) | (Max(Max) -> -Vumpus(Max)) | (Max(Max) -> Numpus(Max))))", "(exists x.(Max(x) & Vampire(x)) | exists y.(Max(y) & -Vampire(y)))) & exists z.(Max(z) & Numpus(z)) & IsVertex(z)))", "all x.((Max(x) & (Vumpus(x) | -Vumpus(x) | Numpus(x))) -> (Value(x) | Numpus(x))))", "all x.((Max(x) & Vumpus(x)) | (-Vumpus(x) | Numpus(x))))"]}
{"id": "prontoqa_train_1493", "nl": "Everything that is an impus and a numpus and a lempus is a gorpus.", "fol": "all x. ((impus(x) & numpus(x) & lempus(x)) -> gorpus(x))", "prediction": ["all x.((Impose(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x.((Impose(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x.((Impos(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x.((Imposs(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x.((Is(x) & IsNumpus(x) & IsLempus(x)) -> Gorpus(x))", "all x.((Imperfect(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x.((Imposs(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x.((Impossible(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x.((Impres(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x.((Impose(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x y.((Is(x) & Imperium(x) & Numpus(y) & Lempus(y)) -> Gorpus(x))", "all x.((Impose(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x.((Impose(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x.((Imposement(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x.((Imposs(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))", "all x.((Impose(x) & Numpus(x) & Lempus(x)) -> Gorpus(x))"]}
{"id": "prontoqa_train_1494", "nl": "Everything that is a lempus and a sterpus and a zumpus is not a gorpus.", "fol": "all x. ((lempus(x) & sterpus(x) & zumpus(x)) -> -gorpus(x))", "prediction": ["all x y.((Lempus(x) & Sterpus(y) & Zumpus(x)) -> -Gorpus(x))", "all x.((Lempus(x) & Sterpus(x) & zumpus(x)) -> -Gorpus(x))", "all x.((Lempus(x) & Sterpus(x) & Zurpus(x)) -> -Gorpus(x))", "all x.((Lempus(x) & Sterus(x) & Zumpus(x)) -> -Gorpus(x))", "all x.((Lempus(x) & sterpus(x) & zumpus(x)) -> -Gorpus(x))", "all x.((Lampus(x) | Sterpus(x) | Toubus(x)) -> -Gorpus(x))", "all x.((Lempus(x) & Sterpus(x) & Zumpus(x)) -> -Gorpus(x))", "all x.((Lempus(x) & Sterpus(x) & Zumpus(x)) -> -Gorpus(x))", "all x.((Lempus(x) & Sterpus(x) & Zumpus(x)) -> -Gorpus(x))", "all x.((Spoison(x) & Lempus(x) & Sterpus(x) & Zumpus(x)) -> -Gorpus(x))", "all x.((Lempus(x) & Sterpus(x) & Zumpus(x)) -> -Gorpus(x))", "all x.((Lempus(x) & Sterepus(x) & Zumpus(x)) -> -Gorpus(x))", "all x.((Limpus(x) | Sterpus(x) | Zumpus(x)) -> -Gorpus(x))", "all x.((Lempus(x) & Sterepus(x) & Zumpus(x)) -> -Gorpus(x))", "all x.((Lempus(x) & Sterepus(x) & Zumpus(x)) -> -Gorpus(x))", "all x.((Lempus(x) & sterpus(x) & zumpus(x)) -> -Gorpus(x))"]}
{"id": "prontoqa_train_1495", "nl": "Everything that is a tumpus, a wumpus, and a gorpus is a shumpus.", "fol": "all x. ((tumpus(x) & wumpus(x) & gorpus(x)) -> shumpus(x))", "prediction": ["all x.((Tumpus(x) & Wumpus(x) & Gorpus(x)) -> Humpus(x))", "all x.((Tumpus(x) | Wumpus(x) | Gorpus(x)) -> Humpus(x))", "all x.((Tumpus(x) | Wumpus(x) | Gorpus(x)) -> Subject(x))", "all x.((Tumpus(x) | Wumpus(x) | Gorpus(x)) -> Humpus(x))", "all x.((Tumpus(x) | Wumpus(x) | Gorpus(x)) -> Humpus(x))", "all x.((Tumpus(x) | Wumpus(x) | Gorpus(x)) -> Humpus(x))", "all x.((Tumpus(x) | Wumpus(x) | Gorpus(x)) -> Shumpus(x))", "all x.((Tumpus(x) & Wumpus(x) & Gorpus(x)) -> Shumpus(x))", "all x y z.((Other(x) & Tumpus(y) & Wumpus(z) & Gorpus(x) & Humpus(y)) -> Shumpus(x))", "all x.((Tumpus(x) | Wumpus(x) | Gorpus(x)) -> Humpus(x))", "all x.(((Tumpus(x) | Wumpus(x) | Gorpus(x))) -> Humpus(x))", "all x.((Tumpus(x) | Wumpus(x) | Gorpus(x)) -> Shumpus(x))", "all x.((Tumpus(x) | Wormpus(x) | Gorpus(x)) -> Humpus(x))", "all x.((Position(x) & Tumpus(x) & Wompus(x) & Gorpus(x)) -> Humpus(x))", "all x.((Tumpus(x) | Wumpus(x) | Gorpus(x)) -> Shumpus(x))", "all x.((Tumpus(x) | Wumpus(x) | Gorpus(x)) -> Humpus(x))"]}
{"id": "prontoqa_train_1496", "nl": "Max is a shumpus, a yumpus, or a numpus.", "fol": "(shumpus(Max) | yumpus(Max) | numpus(Max))", "prediction": ["all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x)))", "exists x.(Max(x) & (Shumpus(x) | Yumpus(x) | Numpus(x)))", "(all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x))))", "all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x)))", "(Ex:(Max(Max) & Shumpus(Max)) | (Max(Max) & Yumpus(Max) & -Shumpus(Max))))", "all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x)))", "(Shumpus(Max) | Yampus(Max) | Numpus(Max))", "all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numus(x)))", "all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x)))", "all x.(Max(x) -> (Shumpus(x) | Yuppus(x) | Numpus(x)))", "all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x)))", "all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x)))", "all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x)))", "all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x)))", "(all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x))))", "all x.(Max(x) -> (Shumpus(x) | Yumpus(x) | Numpus(x)))"]}
{"id": "prontoqa_train_1497", "nl": "Everything that is a wumpus, a grimpus, and a rompus is a zumpus, a shumpus, and a tumpus.", "fol": "all x. ((wumpus(x) & grimpus(x) & rompus(x)) -> (zumpus(x) & shumpus(x) & tumpus(x)))", "prediction": ["all x.((Wumpus(x) | Grimpus(x) | Rompus(x)) -> (Zumpus(x) | Shumpus(x) | Tumulus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Rompus(x)) -> (Tompus(x) | Humpus(x) | Tumpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Romax(x)) -> (Tompus(x) & Humpus(x) & Tumpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Rompus(x)) -> (Tompus(x) & Shumpus(x) & Tumpus(x)))", "all x.((Wumpus(x) & Grimpus(x) & Rompus(x)) -> (Tompus(x) & Humpus(x) & Tumpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Rompus(x)) -> (Zumpus(x) | Shumpus(x) | Tumpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Romanpus(x)) -> (Zumpus(x) & Shumpus(x) & Tumpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Rompus(x)) -> (Zumpus(x) & Humpus(x) & Tumpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Rompus(x)) -> (Tompus(x) & Shumpus(x) & Tumpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Rompus(x)) -> (Tohmpus(x) & Humpus(x) & Tumpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Rompus(x)) -> (Tompus(x) & Humpus(x) & Tumpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Rompus(x)) -> (Tompus(x) | Humpus(x) | Tumpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Rompus(x)) -> (Tompus(x) & Humpus(x) & Tumpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Rompus(x)) -> (Tompus(x) & Humpus(x) & Tumpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Rompus(x)) -> (Tompus(x) & Shumpus(x) & Tumpus(x)))", "all x.(((Wumpus(x) | Grimpus(x) | Romanpus(x))) -> (Tommus(x) | Shumpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1498", "nl": "Wren is a grimpus and a zumpus and a lorpus.", "fol": "(grimpus(Wren) & zumpus(Wren) & lorpus(Wren))", "prediction": ["all x.(Wren(x) -> (Grimpus(x) | Zumpus(x) | Lordpus(x)))", "all x y z.((Wren(x) & Grimpus(y) & Zumpus(z) & Lorpus(x)) -> (Grimpus(x) & Tompus(y,z)))", "all x.(Wren(x) -> (Grimpus(x) & Zumpus(x) & Lorpus(x)))", "all x.(Wren(x) -> (Grimpus(x) & Zumpus(x) & Lorpus(x)))", "all x.(Wren(x) -> (Smoky(x) & ToshPegasus(x) & LordPegasus(x)))", "all x.(Wren(x) -> (Grimpus(x) & Zumpus(x) & Lorpus(x)))", "all x.(Wren(x) -> (Furpus(x) & Zumpus(x) & Lorpus(x)))", "(all x y.(Wren(x) -> Grimpus(x)) & ((Wren(y) & Zumpus(y)) | (Wren(y) & Lorpus(y))))", "all x.(Wren(x) -> (Grimpus(x) & Zumpus(x) & Lorpus(x)))", "all x y.((Wren(x) & Grimpus(x)) -> (Tompus(x) & Lorpus(y)))", "all x y z.((Wren(x) & Grimpus(y) & Zumpus(z)) -> (Surlpus(x) & Lorpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & (Toumpus(x) | Lorpus(x))))", "all x.(Wren(x) -> (Grimpus(x) & Zumpus(x) & Lorpus(x)))", "all x y.((Wren(x) & Grimpus(y)) -> (Tompus(x) | Lorpus(y)))", "(all x.(Wren(x) -> Grimpus(x)) & (Tompus(x) & Lorpus(x)))", "all x.(Wren(x) -> (Grimpus(x) | Zumpus(x) | Lorpus(x)))"]}
{"id": "prontoqa_train_1499", "nl": "Wren is a dumpus, a wumpus, or a vumpus.", "fol": "(dumpus(Wren) | wumpus(Wren) | vumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vuze(x)))", "all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Dumus(x) | Wumpus(x) | Vumpus(x)))", "all x y z.((Wren(x) & (Dumpus(y) | Wumpus(y) | Vumpus(z))) -> (Dumpus(y) | Wumpus(y)))", "all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Dumpsus(x) | Wumpus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vamppus(x)))", "all x.(Wren(x) -> (Dumps(x) | Wumpus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vulpu(x)))", "all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Wumpus(x) | Vulumpus(x)))"]}
{"id": "prontoqa_train_1500", "nl": "Every wumpus is a jompus, a numpus, and a dumpus.", "fol": "all x. (wumpus(x) -> (jompus(x) & numpus(x) & dumpus(x)))", "prediction": ["all x.(Wumpus(x) -> (Jompus(x) & Numpus(x) & Dumpus(x)))", "all x.(Wumpus(x) -> (Jumpus(x) & Numpus(x) & Dumpus(x)))", "(all x.(Wumpus(x) -> Jompus(x)) & (Numpus(x) | Dumpus(x)))", "all x.(Wumpus(x) -> (Jompus(x) & Numpus(x) & Dumpus(x)))", "all x.((Wumpus(x) & Jompus(x)) -> Numpus(x) & Dumpus(x))", "all x.(Wumpus(x) -> (Jompus(x) & Numpus(x) & Dumpus(x)))", "all x.(Wumpus(x) -> (SameJumpus(x) | SameNumpus(x) | SameDumpus(x)))", "all x.(Wumpus(x) -> (Jompus(x) & Numpus(x) & Dumpus(x)))", "all x.(Wumpus(x) -> (Jompus(x) | Numpus(x) | Dumpus(x)))", "all x.(Wumpus(x) -> (Jompus(x) | Numpus(x) | Dumpus(x)))", "all x.(Wumpus(x) -> (Jompus(x) & Numpus(x) & Dumpus(x)))", "all x.(Wumpus(x) -> (Jompus(x) & Numpus(x) & Dumpus(x)))", "all x.(Wumpus(x) -> (Jompus(x) & Numpus(x) & Dumpus(x)))", "all x.(Wumpus(x) -> (Jompus(x) | Numpus(x) | Dumpus(x)))", "all x.(Wumpus(x) -> (Jompus(x) | Numpus(x) | Dumpus(x)))", "all x.(Wumpus(x) -> (Jompus(x) & Number(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1501", "nl": "Sally is a rompus, a numpus, or a grimpus.", "fol": "(rompus(Sally) | numpus(Sally) | grimpus(Sally))", "prediction": ["all x.(Sally(x) -> (Rompus(x) | Numpus(x) | Grimpus(x)))", "(Rompus(Sally) | Numpus(Sally) | Grumpus(Sally)))", "all x.(Sally(x) -> (Rompus(x) | Numpus(x) | Grimpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Numpus(x) | Grrumpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Numpus(x) | Grimpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Numpus(x) | Grimpus(x)))", "all x.(Sally(x) -> (rompus(x) | Numpus(x) | Grimpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Numpus(x) | Grimpus(x)))", "exists x.(Sally(x) & (Rompus(x) | Numpus(x) | Grimpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Numpus(x) | Grappa(x)))", "(Established(Sally) -> (Rompus(Sally) | Numpus(Sally) | Grimpus(Sally)))", "all x.(Sally(x) -> (Rompus(x) | Numpus(x) | Ruinus(x)))", "all x.(Sally(x) -> (Rompus(x) | Numpus(x) | Grimpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Numpus(x) | Grapple(x)))", "all x.(Sally(x) -> (Rompus(x) | Numpus(x) | Grimpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Numpus(x) | Grapple(x)))"]}
{"id": "prontoqa_train_1502", "nl": "Tumpuses are yumpuses, lempuses, and grimpuses.", "fol": "all x. (tumpus(x) -> (yumpus(x) & lempus(x) & grimpus(x)))", "prediction": ["all x.(Tumpus(x) -> (Yumpus(x) | Lempuse(x) | Grimpus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Lempus(x) | Grimpus(x)))", "(all x.(Tumpus(x) -> Yuzure(x)) & (Lempuse(x) | Grimpuse(x))))", "all x y z.((Tumpus(x) & Lempuse(y) & Grimpus(z)) -> (Yumpus(x) | Lempuse(y) | Grimpus(z)))", "all x.(Tumpus(x) -> (Yumpus(x) | Lempus(x) | Grimpus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) & Lempuse(x) & Grimpus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Lempuse(x) | Cramppus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Lempus(x) | Grimpus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Lempuse(x) | Grimpuse(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Lempus(x) | Grimpus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Lempuse(x) | Grimpus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Lempuse(x) | Grimpus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) & Lempuse(x) & Gruppus(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Lempus(x) | Grapple(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Lempuse(x) | Grimpuse(x)))", "all x.(Tumpus(x) -> (Yumpus(x) | Lempuse(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1503", "nl": "Rex is a lempus or a zumpus or an impus.", "fol": "(lempus(Rex) | zumpus(Rex) | impus(Rex))", "prediction": ["all x.(Rex(x) -> (Lempus(x) | Zumpus(x) | Imperator(x)))", "all x.(Rex(x) -> (Lempus(x) | Zumpus(x) | Impreza(x)))", "all x.(Rex(x) -> (Lempus(x) | Zumpus(x) | Erseterin(x)))", "(exists x.(Rex(x) & Lempus(x)) | exists y.(Tompus(y) & Deirset(y))))", "all x.(Rex(x) -> ((Lempus(x) | Zumpus(x) | Imperator(x))))", "all x.(Rex(x) -> (Lempus(x) | Zumpus(x) | Erzfeind(x)))", "all x.(Rex(x) -> (Lempus(x) | Zumpus(x) | Imperator(x)))", "all x y.((Rex(x) & Lempus(y)) | (Tomorpus(y) | Imperia(y))))", "all x.(Rex(x) -> (Lemmus(x) | Zumpus(x) | Imperator(x)))", "all x.(Rex(x) -> ((Mosque(x) | Zumpus(x) | Issue(x))))", "all x.(Rex(x) -> ((Lempus(x) | Zumpus(x) | Imperator(x))))", "all x.(Rex(x) -> (Lempus(x) | Zumpus(x) | Obsidian(x)))", "all x.(Rex(x) -> (Lempus(x) | Zumpus(x) | Imperium(x)))", "all x.(Rex(x) -> (Lempus(x) | Zumpus(x) | Impermiss.(x)))", "all x.(Rex(x) -> (Lempus(x) | Zumpus(x) | Impossible(x)))", "all x.(Rex(x) -> (Lempus(x) | Zumpus(x) | Imperempted(x)))"]}
{"id": "prontoqa_train_1504", "nl": "Everything that is a lempus and a gorpus and a zumpus is a shumpus, a brimpus, and a lorpus.", "fol": "all x. ((lempus(x) & gorpus(x) & zumpus(x)) -> (shumpus(x) & brimpus(x) & lorpus(x)))", "prediction": ["all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) & Brimpus(x) & Lorpus(x)))", "all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) & Brimpus(x) & Llorpus(x)))", "all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) | Brimpus(x) | Lorpus(x)))", "all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) | Brimpus(x) | Lorpus(x)))", "all x y.((Lempus(x) & Gorpus(y) & Zumpus(x)) -> (Shumpus(y) | Brimpus(y) | Lorpus(y)))", "all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) & Brimpus(x) & Lorpus(x)))", "all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) & Brimpus(x) & Lorpus(x)))", "all x y.((Lempus(x) & Gorpus(y) & Zumpus(x)) -> (Shumpus(y) & Brimpus(y) & Lorpus(y)))", "all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) | Brimpus(x) | Lorpus(x)))", "all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) | Brimpus(x) | Lorpus(x)))", "all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) | Brimpus(x) | Lorpus(x)))", "all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) | Brimpus(x) | Lorpus(x)))", "all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) & Brimpus(x) & Lorpus(x)))", "all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) | Brimpus(x) | Lorpus(x)))", "all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) & Brimpus(x) & Lorpus(x)))", "all x.((Lempus(x) & Gorpus(x) & Zumpus(x)) -> (Shumpus(x) & Brimpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_train_1505", "nl": "Polly is a brimpus.", "fol": "brimpus(Polly)", "prediction": ["All x.(Polly(x) -> Brimpus(x))", "all x.(Brumpus(x) -> Polly(x))", "exists x.(Blumpus(x) & Polly(x))", "ALL x.(Brumpus(x) -> Polly(x))", "all x.(Brimpus(x) -> Polly(x))", "all x.(Brimpus(x) -> Polly(x))", "Polly is brimpus.", "All x.(Brimpus(x) & Polly(x))", "all x.(Brimpus(x) -> Polly(x))", "all x.((Polly(x) & Brimpus(x)) -> Polly(x))", "all x.(Polly(x) -> Brimpus(x))", "Polly is a Brimpus.", "all x.(Brimpus(x) -> Polly(x))", "((Polly(Pollly) & Brimpus(Poly)))", "all x.(Bully(x) -> Brimpus(x))", "all x.(Brumpus(x) -> Polly(x))"]}
{"id": "prontoqa_train_1506", "nl": "Everything that is a brimpus, a wumpus, or a dumpus is not a numpus.", "fol": "all x. ((brimpus(x) | wumpus(x) | dumpus(x)) -> -numpus(x))", "prediction": ["all x.(((Brimpus(x) | Wumpus(x) | Dumpus(x))) -> -numpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Dumpus(x)) -> -Numpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Dustus(x)) -> -Numpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Dumpus(x)) -> -Numpus(x))", "all x.((Brimpus(x) | Twimpus(x) | Dumpus(x)) -> -Numpus(x))", "all x.((Krimpus(x) | Wumpus(x) | Dumpus(x)) -> -Numpus(x))", "all x.(((Brimpus(x) | Wumpus(x) | Dumpus(x))) -> -Numpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Dumpus(x)) -> -numpus(x))", "all x.((HasBrimpus(x) | HasWumpus(x) | HasDumpsus(x)) -> -Numpus(x))", "all x.((Rose,Brimpus,Wumpus,Dumus)) -> -Numpus(x))", "all x.((Weakness(x) & (Brimpus(x) | Weakness(x) | Kausus(x))) -> -Numpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Dumpus(x)) -> -Numpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Dumpus(x)) -> -Numpus(x))", "all x.((Frost(x) | Wump(x) | Dumpus(x)) -> -Numpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Dumpus(x)) -> -Numpus(x))", "all x.((Brimpus(x) | Wumpus(x) | Dumpus(x)) -> -Numpus(x))"]}
{"id": "prontoqa_train_1507", "nl": "Shumpuses are gorpuses, numpuses, and tumpuses.", "fol": "all x. (shumpus(x) -> (gorpus(x) & numpus(x) & tumpus(x)))", "prediction": ["all x.(Shupuse(x) -> (Gorpus(x) | Numpuse(x) | Tumpus(x)))", "all x.(Shumpus(x) -> (Gorpus(x) | Numpus(x) | Tumpus(x)))", "all x.(Shupus(x) -> (Gorpuse(x) | Numpus(x) | Tumpus(x)))", "all x.(Shumpus(x) -> (Gorpus(x) | Numpuse(x) | Tumpus(x)))", "all x.(Shuppus(x) -> (Gorpus(x) | Numpus(x) | Tumpus(x)))", "all x.(Shumpus(x) -> (Gorpuse(x) | Numpus(x) | Tumpuse(x)))", "(all x) -> (Squimpus(x) & Gorpus(x))) & (Numpuse(x) | Tumpus(x))))", "all x.(Shupuse(x) -> (Gorpus(x) | Numpuse(x) | Tumpus(x)))", "all x.(Suppuse(x) -> (Gorpus(x) | Numpus(x) | Tumulus(x)))", "all x.(Shupuse(x) -> (Gorpuses(x) | Numpuses(x) | Tumpuses(x)))", "all x.(Shupuse(x) -> (Gorpuse(x) | Numpuse(x) | Tumpuse(x)))", "all x.(Shupus(x) -> (Gorpus(x) | Numpus(x) | Tumpus(x)))", "all x.(Shampus(x) -> (Gorpus(x) | Numpuse(x) | Tumpus(x)))", "all x.(Shupuse(x) -> (Receives(x,gorpus) & Receives(x,numpus) & Receives(x,tumpus)))", "all x.(Shubpus(x) -> (Gorpus(x) | Numpus(x) | Tumor(x)))", "all x.(Shupuse(x) -> (Gorpuse(x) | Numpus(x) | Tumpuse(x)))"]}
{"id": "prontoqa_train_1508", "nl": "Everything that is a numpus and a vumpus and a sterpus is a tumpus and an impus and a dumpus.", "fol": "all x. ((numpus(x) & vumpus(x) & sterpus(x)) -> (tumpus(x) & impus(x) & dumpus(x)))", "prediction": ["all x.((Numpus(x) | Vumpus(x) | Sterpus(x)) -> (Tumpus(x) & Impossible(x) & Dumpus(x)))", "all x.((Numpus(x) & Vumpus(x) & Sterpus(x)) -> (Tumpus(x) & Impermiss(x) & Dumpus(x)))", "all x.((Numpus(x) & Vumpus(x) & Sterpus(x)) -> (Tumpus(x) & Imperative(x) & Dumpus(x)))", "all x.((numpus(x) & voompus(x) & sterpus(x)) -> (Tumpus(x) & Pr\u00e4zist(x) & Dumpus(x)))", "all x.((Numpus(x) | Vumpus(x) | Sterpus(x)) -> (Tumpus(x) & Imperempt(x) & Dumpus(x)))", "all x.((Numpus(x) -> (Vumpus(x) & Sterpus(x)))", "all x.((Numpus(x) & Vumpus(x) & Sterpus(x)) -> (Tumpus(x) & Impermiss(x) & Dumpus(x)))", "all x.((Numpus(x) & Vumpus(x) & Sterpus(x)) -> (Impossible(x) & Impermissible(x) & Dumpus(x)))", "all x.((Nompus(x) & Vumpus(x) & Sterpus(x)) -> (Impossible(x) & Imperempt(x) & Dumpus(x)))", "all x.((Nompus(x)) | Vumpus(x) | Sterpus(x)) -> (Tumpus(x) & Issue(x) & Dumpus(x)))", "all x.((Nompus(x) & Vumpus(x) & Sterpus(x)) -> (Tumpus(x) & Impossible(x) & Dumpus(x)))", "all x.((Numpus(x) & Voompus(x) & Sterpus(x)) -> (Tumpus(x) & Isolator(x) & Dumpus(x)))", "all x.((Nompus(x) & Vumpus(x) & Sterpus(x)) -> (Tumpus(x) & Impirator(x) & Dumpus(x)))", "all x.((Numbus(x) & Vumpus(x) & Sterpus(x)) -> (ImplementedTompus(x) & Imperator(x) & Dumpus(x)))", "all x y z.((Pumpus(x) & Vumpus(y) & Sterpus(z) & Numpus(y) & Vumpus(y) & Sterpus(z)) -> (Tumpus(x) & Impirez(x) & Dumpus(x)))", "all x.((Numpus(x) & Vumpus(x)) -> (Tumpus(x) & Impossible(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1509", "nl": "Each dumpus is a zumpus, a grimpus, and a numpus.", "fol": "all x. (dumpus(x) -> (zumpus(x) & grimpus(x) & numpus(x)))", "prediction": ["exists x.(Dumpus(x) & Zumpus(x) & Grimpus(x) & Numpus(x))", "all x.(Dumpus(x) -> (Zumpus(x) | Grimpus(x) | Numpus(x)))", "all x.(Dumpus(x) -> (Tompus(x) | Grimpus(x) | Numpus(x)))", "all x.(Dumpus(x) -> (Zumpus(x) & Grimpus(x) & Numpus(x)))", "all x.(Dumpus(x) -> (Toumpus(x) | Grimpus(x) | Numpus(x)))", "all x.(Dumpus(x) -> (Tommpus(x) & Grimpus(x) & Numpus(x)))", "all x.(Dumpus(x) -> (Zoompus(x) | Grimpus(x) | Numpus(x)))", "exists x.(Dumpus(x) & Zumpus(x) & Grimpus(x) & Numpus(x))", "all x.(Dumpus(x) -> (Tompus(x) & Grimpus(x) & Numpus(x)))", "(all x.(Dumpus(x) -> Zumpus(x)) & all y.(Dumpus(y) -> Grimpus(y)) & all z.(Dumpus(z) -> Numpus(z))))", "all x.(Dumpus(x) -> (Tommpus(x) & Grimpus(x) & Numpus(x)))", "all x.(Dumpus(x) -> (BelongsTozoom(x) & BecomesGrimpus(x) & BecomesNumpus(x)))", "(exists x.(Dumpus(x) & Touspus(x)) & exists y.(Grappus(y) & Grimpus(y) & exists z.(numpus(z) & Tous(z))))", "all x.(Dumpus(x) -> (Dumpus(x) & Grimpus(x) & Numpus(x)))", "all x.(Dupus(x) -> (Tompus(x) | Grimpus(x) | Numpus(x)))", "all x.(Dumpus(x) -> (Tompus(x) | Grimpus(x) | Numpus(x)))"]}
{"id": "prontoqa_train_1510", "nl": "Alex is a jompus or a numpus or a sterpus.", "fol": "(jompus(Alex) | numpus(Alex) | sterpus(Alex))", "prediction": ["all x.(Alex(x) -> (Jimpus(x) | Numpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Jompus(x) | Numpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Jimpus(x) | Numpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (jompus(x) | numeric(x) | sterpus(x)))", "all x.(Alex(x) -> (Jimpus(x) | Numpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Jompus(x) | Numpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Jompus(x) | Numpus(x) | Sterepus(x)))", "all x.(Alex(x) -> (Jompus(x) | Numpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Jompus(x) | Numpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Jompus(x) | Numpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Jompus(x) | Numpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Altompus(x) | Nompus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Jompus(x) | Numpus(x) | Strojan(x)))", "all x.(Alex(x) -> (Moose(x) | Numpus(x) | Sterpus(x)))", "all x.(Alex(x) -> ((Jompus(x) | Numpus(x) | Sterpus(x))))", "all x.(Alex(x) -> (Jimpus(x) | Numpus(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1511", "nl": "Each grimpus is a rompus and a lempus and a tumpus.", "fol": "all x. (grimpus(x) -> (rompus(x) & lempus(x) & tumpus(x)))", "prediction": ["(exists x.(Grimpus(x) & Rompus(x)) & exists y.(Lempus(y) & Tumpus(y))))", "all x.(Grimpus(x) -> (Rompus(x) & Lempus(x) & Tumpus(x)))", "all x.(Grimpus(x) -> (Rompus(x) & Lempus(x) & Tumpus(x)))", "(all x) -> Grimpus(x)) & ((Rompus(x) & Lempus(x)) | (Tumpus(x)))))", "all x.(Form(x) -> (Rompus(x) & Lempus(x) & Tumpus(x)))", "(all x.(Gripper(x) -> Roma(x))", "all x.(Grimpus(x) -> (IsRumpus(x) & IsLempus(x) & IsTompus(x)))", "all x.(Grimpus(x) -> (Rompus(x) & Lempus(x) & Tumpus(x)))", "all x y.((Grimpus(x) & Rompus(y) & Lupus(x) & Tumpus(x)) -> GrimpusAndTumpus(x))", "all x.(Grimpus(x) -> exists y.(Rompus(y) & Lempus(y) & Tumpus(y)))", "all x.(Grimpus(x) -> (Rompus(x) & Lempus(x) & Tumpus(x)))", "all x.(Grimpus(x) -> (Rompus(x) & Lempus(x) & Tumpus(x)))", "all x.(Pragma(x) -> (Rompus(x) & Lempus(x) & Tumpus(x)))", "all x.(Grimpus(x) -> (Rompus(x) & Lempus(x) & Tumpus(x)))", "all x.(Grimpus(x) -> (Rompus(x) & Lempus(x) & Tumpus(x)))", "all x y z.((Grimpus(x) & Rompus(y) & Lempus(z)) -> (Rompus(x) & Lempus(z) & Tumpus(x)))"]}
{"id": "prontoqa_train_1512", "nl": "Alex is a brimpus or a lempus or a rompus.", "fol": "(brimpus(Alex) | lempus(Alex) | rompus(Alex))", "prediction": ["all x.(Alex(x) -> (Brimpus(x) | Lempus(x) | Rompus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Lempus(x) | Rompus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Lempus(x) | Rompus(x)))", "all x.(Alex(x) -> ((Brimpus(x) | Lempus(x) | Rompus(x))))", "all x.(Alex(x) -> (Brumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Alex(x) -> (Brampus(x) | Lempus(x) | Rompus(x)))", "(all x.(Alex(x) -> Brimpus(x)) | (Lempus(x) | Rompus(x))))", "all x.(Alex(x) -> (Brumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Alex(x) -> (Brumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Lempus(x) | Rompus(x)))", "all x.(Alex(x) -> (Brumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Alex(x) -> (Blumpus(x) | Lempus(x) | Rompus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Lempus(x) | Rompus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Lempus(x) | Rompus(x)))", "all x.(Alex(x) -> (Limpus(x) | Lempus(x) | Rompus(x)))", "all x.(Alex(x) -> (Brimpus(x) | Lempus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1513", "nl": "Everything that is an impus, a tumpus, and a shumpus is a zumpus and a brimpus and a numpus.", "fol": "all x. ((impus(x) & tumpus(x) & shumpus(x)) -> (zumpus(x) & brimpus(x) & numpus(x)))", "prediction": ["all x.((Zumpus(x) & Brimpus(x) & Numpus(x)) -> (Issuel(x) & Tumpus(x) & Shumpus(x)))", "all x y.((Issue(x) & Tumpus(x) & Shumpus(y)) -> (Tompus(x) & Brimpus(x) & Numpus(y)))", "all x.((Issue(x) & IsTumpus(x) & IsShumpus(x)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "all x.((Improven(x) | Tumpus(x) | Humpus(x)) -> (Tommus(x) & Brimpus(x) & Numpus(x)))", "all x.((Impact(x) | Tumpus(x) | Humpus(x)) -> (Tommpus(x) & Brimpus(x) & Numpus(x)))", "all x.((Issue(x) | Tumpus(x) | Humpus(x)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "all x.((Impose(x) & Tumpus(x) & Humpus(x)) -> (Zumpus(x) & Brimpus(x) & Numpus(x)))", "all x.((Impos(x) & Tumpus(x) & Humpus(x)) -> (Humpus(x) | Brimpus(x) | Numpus(x)))", "all x.((Issue(x) | Tompus(x) | Humpus(x)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "all x y z.((Imposs(x) & Tumpus(y) & Humpus(z) & Impossible(x) & Tumpus(y) & Shumpus(y)) -> (Zumpus(x) & Brimpus(x) & Numpus(x)))", "all x.((Impact(x) | Tumpus(x) | Shumpus(x)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "all x.((Issue(x) & Tumpus(x) & Humpus(x)) -> (Zumpus(x) & Brimpus(x) & Numpus(x)))", "all x.((Imposer(x) | Tumpus(x) | Scrimpus(x)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "all x.((Imposer(x) | Tompus(x) | Humpus(x)) -> (Zumpus(x) & Brimpus(x) & Numpus(x)))", "all x.((Imposer(x) | Tumpus(x) | Humpus(x)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))", "all x.((Imposer(x) | Tumpus(x) | Humpus(x)) -> (Tompus(x) & Brimpus(x) & Numpus(x)))"]}
{"id": "prontoqa_train_1514", "nl": "Everything that is a lorpus, an impus, and a jompus is a tumpus, a numpus, and a gorpus.", "fol": "all x. ((lorpus(x) & impus(x) & jompus(x)) -> (tumpus(x) & numpus(x) & gorpus(x)))", "prediction": ["all x.((Rose(x) & Ilpres(x) & Jompus(x)) -> (Tumpus(x) | Numpus(x) | Gorpus(x)))", "all x.((Corpus(x) & Ilir(x) & Jompus(x)) -> (Tumpus(x) | Numpus(x) | Gorpus(x)))", "all x.((Lorpus(x) | Impossible(x) | Jompus(x)) -> (Tumpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Lorpus(x) | Impossible(x) | Jompus(x)) -> (Tumpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Lorpus(x) | Impossible(x) | Jompus(x)) -> (Tumpus(x) & Numpus(x) & Gorpus(x)))", "(All x.(Lorpus(x) | Is(x) | Is(x)) | (IsJompus(x) | Is(x))) -> (Tumpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Lorpus(x) & Injector(x) & Jompus(x)) -> (Tumpus(x) | Numpus(x) | Gorpus(x)))", "all x.((Vorpus(x) | Impeccator(x) | Jompus(x)) -> (Tumpus(x) | Numpus(x) | Gorpus(x)))", "(all x.(Lorpus(x) | Impossible(x) | Jompus(x))) -> (Tumpus(x) & Yupups(y) & Gorpus(x)))", "all x.((Lorpus(x) | Impossible(x) | JOmpus(x)) -> (Tumpus(x) | Numpus(x) | Gorpus(x)))", "all x.((Lorpus(x) | Impossible(x) | Jompus(x)) -> (Tumpus(x) | Numpus(x) | Gorpus(x)))", "all x.((Lorpus(x) | Impossible(x) | Jompus(x)) -> (Tumpus(x) | Numpus(x) | Gorpus(x)))", "all x.((Lorpus(x) | Impossible(x) | Jompus(x)) -> (Tumpus(x) | Numpus(x) | Gorpus(x)))", "all x.((Lorpus(x) | Impossible(x) | Jompus(x)) -> (Tumpus(x) | Numpus(x) | Gorpus(x)))", "all x.((Lorpus(x) | Impossible(x) | Jompus(x)) -> (Tumpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Lorpus(x) & Impossible(x) & Jompus(x)) -> ((Tumpus(x) | Numpus(x) | Gorpus(x))))"]}
{"id": "prontoqa_train_1515", "nl": "Stella is not a brimpus and Stella is a zumpus and Stella is a dumpus.", "fol": "(-brimpus(Stella) & zumpus(Stella) & dumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Brimpus(x)) & all y.(Stella(y) -> Zumpus(y))) & all z.(Stella(z) -> Dumpus(z)))", "(exists x.(Stella(x) & -Brimpus(x)) & exists y.(Tompus(y) & Zumpus(x))) & exists z.(Dumpus(z) & BelongsTo(z,x))))", "(all x).(Stella(x) -> -Brimpus(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Dumpus(x)))", "all x y.((Stella(x) & Brimpus(x) & Zumpus(y)) -> (-Stella(x) & Dumpus(x)))", "(all x.(Stella(x) -> -Brimpus(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Dumpus(x)))", "all x y.((Stella(x) & Brimpus(y)) -> (-Brimpus(x) & Zumpus(y) & Dumpus(x)))", "(all x.(Stella(x) -> -Birmpus(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Dumpus(x)))", "(BeforeMoreThanStella(Stella) -> ((Brimpus(Stella) & -Brimpus(Stella)) | Tospus(Stella)) | Dumpus(Stella)))", "(all x y.(Brimpus(x) -> -Brimpus(x)) & (Zumpus(y) -> Dumpus(y)))", "(all x.(Stella(x) -> -Brimpus(x)) & all y.(Stella(y) -> Zumpus(y))) & all z.(Stella(z) -> Dumpus(z))))", "all x y z.((Stella(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Tozorp(y) & Dumpus(z)))", "(All x.(Strill(x) -> -Brimpus(x)) | (Stella(x) -> Zumpus(x)) | (Stella(x) -> Dumpus(x))))", "(-Brimpus(Stella) & Tozuman(Stella) & Dumpus(Stella))", "(all x y z.((Stella(x) & Brimpus(y) & Zumpus(z)) -> -Brumpus(x)) & ((Stella(x) & Dumpus(x)))", "all x y.((Stella(x) & Brimpus(x) & Zumpus(y)) -> (Stella(x) & Dumpus(x)))", "(all x.(Stella(x) -> -Brumpus(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Dumpus(x)))"]}
{"id": "prontoqa_train_1516", "nl": "Dumpuses are lorpuses, gorpuses, and lempuses.", "fol": "all x. (dumpus(x) -> (lorpus(x) & gorpus(x) & lempus(x)))", "prediction": ["all x.(Dumpuse(x) -> (Lorpuse(x) | Gorpuse(x) | Lempuse(x)))", "all x.(Dumpuse(x) -> (Larpuse(x) | Gorpuse(x) | Lempuse(x)))", "all x.(Dumpuse(x) -> (Lorpus(x) | Gorpus(x) | Lempuse(x)))", "all x.(Dumpuse(x) -> (Lorpuse(x) | Gorpuse(x) | Lempuse(x)))", "all x.(Dumpuse(x) -> (Lorpuse(x) | Gorpuse(x) | Lempuse(x)))", "all x.(Dupus(x) -> (Lorpus(y) | Gorpus(y) | Lempuse(y)))", "(all x.(Dumpuse(x) -> (Lorpus(x) | Gorpus(x) | Lempuse(x)))", "all x.(Dumpuse(x) -> (Lorpus(x) | Gorpus(x) | Lempuse(x)))", "all x.(Dumpuse(x) -> (Lorpus(x) | Gorpus(x) | Lempuse(x)))", "all x.(Dumpuse(x) -> (Lorpus(x) | Gorpus(x) | Lempuse(x)))", "(Lorpuse(dumpuse) | Gorpuse(dumpuse) | Lempuse(dumpuse)))", "all x.(Dumpuse(x) -> (Lorpus(x) | Gorpus(x) | Lempuse(x)))", "all x.(Dumpuse(x) -> (Lorpus(x) | Gorpus(x) | Lempuse(x)))", "all x.(Dumpuse(x) -> (Lorpus(x) | Gorpus(x) | Lempuse(x)))", "exists x.(Dumpuse(x) & (Lorpus(x) | Gorpus(x) | Lempuse(x)))", "all x.(Dumpuse(x) -> (Lorpus(x) | Gorpus(x) | Lempuse(x)))"]}
{"id": "prontoqa_train_1517", "nl": "Sally is a wumpus or a lempus or a gorpus.", "fol": "(wumpus(Sally) | lempus(Sally) | gorpus(Sally))", "prediction": ["all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "(Wumpus(Sally) | Lempus(Sally) | Gorpus(Sally)))", "all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Wumpus(x) | Lempus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1518", "nl": "Everything that is a lempus, a lorpus, and a grimpus is a shumpus, a rompus, and an impus.", "fol": "all x. ((lempus(x) & lorpus(x) & grimpus(x)) -> (shumpus(x) & rompus(x) & impus(x)))", "prediction": ["all x.((Lempus(x) | Lorpus(x) | Grimpus(x)) -> (Shumpus(x) & Roma(x) & Imperative(x)))", "all x.((Lempus(x) | Lorpus(x) | Grimpus(x)) -> (Shumpus(x) & Rompus(x) & Imperator(x)))", "all x.((Lempus(x) | Lorpus(x) | Grimpus(x)) -> (Shumpus(x) & rompus(x) & impus(x)))", "all x.((Lempus(x) | Lorpus(x) | Grimpus(x)) -> (Shumpus(x) & Rompus(x) & Issue(x)))", "all x.((Limpus(x) | Lorpus(x) | Grimpus(x)) -> (Shumpus(x) | Rompus(x) | Imperator(x)))", "all x.((Lempus(x) | Lorpus(x) | Grimpus(x)) -> (Shumpus(x) & Rompus(x) & Imperator(x)))", "all x.((Lempus(x) | Lorpus(x) | Grimpus(x)) -> (Shumpus(x) & Rompus(x) & Imperative(x)))", "all x y.((Lempus(x) & Lorpus(y) & Grimpus(x)) -> (Shumpus(y) & Rompus(y) & Imperator(y)))", "all x.((Lempus(x) | Lorpus(x) | Grumpus(x)) -> (Shumpus(x) | Rompus(x) | Imperator(x)))", "all x.((Lempus(x) | Lorpus(x) | Grimpus(x)) -> (Shumpus(x) & Rompus(x) & Imperator(x)))", "all x.((Lempus(x) | Lorpus(x) | Grimpus(x)) -> (Shumpus(x) & Rompus(x) & Imperator(x)))", "all x y z.((Lempus(x) | Lorpus(x) | Grimpus(x)) -> (Shumpus(y) & Rompus(z) & Imperator(z)))", "all x.((Researcher(x) & Hulk(x) & Rampus(x) & Grimpus(x)) -> (Shumpus(x) | Rompus(x) | Imperator(x)))", "all x.((Lempus(x) | Lorpus(x) | Grimpus(x)) -> (Shumpus(x) & Rompus(x) & Imperator(x)))", "all x y.((Shumpus(x) & Rumpus(y) & Imperator(x)) -> (Lempus(x) | Lorpus(x) | Grimpus(x)))", "all x y z.((Shumpus(x) & Romp(y) & Is(z) & LempusLorpusLightpusSgrimpus(x)) -> (Shumpus(y) & Rompus(z) & Is(z)))"]}
{"id": "prontoqa_train_1519", "nl": "Everything that is a gorpus or a lempus or a dumpus is a lorpus.", "fol": "all x. ((gorpus(x) | lempus(x) | dumpus(x)) -> lorpus(x))", "prediction": ["all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))", "all x.((Gorpus(x) | Lempus(x) | Dumpus(x)) -> Lorpus(x))"]}
{"id": "prontoqa_train_1520", "nl": "Sally is a gorpus, an impus, and a rompus.", "fol": "(gorpus(Sally) & impus(Sally) & rompus(Sally))", "prediction": ["all x y z.((Sally(x) & Gorpus(y) & Imperator(z)) -> (Gorpus(x) & Imperator(y) & Rompus(z)))", "all x.(Sally(x) -> (Gorpus(x) & Impossible(x) & Rompus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Imperator(x) | Rompus(x)))", "(Gorpus(Sally) & Impossible(Sally) & Rompus(Sally))", "(Gorpus(Sally) & Impossible(Sally) & Rompus(Sally))", "(all x.(Sally(x) -> Gorpus(x)) & all y.(Impuls(y) -> Rompus(y)))", "(Gorpus(Sally) | Impeccable(Sally)) & Rompus(Sally))", "(Garompus(sally) & Imperative(sally) & Rompus(sally))", "all x.(Sally(x) -> (Gorpus(x) & Impossible(x) & Rompus(x)))", "all x.(Sally(x) -> (Gorpus(x) | Impossible(x) | Rompus(x)))", "all x.((Sally(x) & Gorpus(x)) & Imperempt(x) & Rompus(x)) -> RecessToBe(x))", "(Gorpus(Sally) | Impermiss(Sally) | Rompus(Sally)))", "(all x.(Sally(x) -> Gorpus(x)) & all y.(Impossible(y) & Rompus(y)))", "all x.(Sally(x) -> (Gorpus(x) & Impermiss(x) & Rompus(x)))", "(Gorpus(Sally) | Impossible(Sally) | Rompus(Sally))", "(Gorpus(Sally) & Imperifs(Sally) & Rompus(Sally))"]}
{"id": "prontoqa_train_1521", "nl": "Everything that is a tumpus, an impus, and a lempus is a vumpus.", "fol": "all x. ((tumpus(x) & impus(x) & lempus(x)) -> vumpus(x))", "prediction": ["all x.((Tumpus(x) | Imperator(x) | Lempus(x)) -> Vumpus(x))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> Vumpus(x))", "all x.(((Tumpus(x) | Impossibly(x) | Lempus(x))) -> Vumpus(x))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> Vampus(x))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> Vumpus(x))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> Vumpus(x))", "all x.((Tumpus(x) | Imperative(x) | Lempus(x)) -> Vumpus(x))", "all x.((Tumpus(x) | Impertin(x) | Lempus(x)) -> Vumpus(x))", "all x.((Tompus(x) | Impossible(x) | Lempus(x)) -> Vuzeos(x))", "all x.((Tumpus(x) | Impress(x) | Lempus(x)) -> Vumpus(x))", "all x.((Tumpus(x) | Imperempt(x) | Lempus(x)) -> Vumpus(x))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> Vumpus(x))", "all x.(((Tumpus(x) | IsImpers(x) | Lempus(x))) -> Vumpus(x))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> Vumpus(x))", "all x.((Tumpus(x) | Imperator(x) | Lempus(x)) -> Vuxpus(x))", "all x.((Tumpus(x) | Impossible(x) | Lampus(x)) -> Vumpus(x))"]}
{"id": "prontoqa_train_1522", "nl": "Wren is a wumpus or a vumpus or a rompus.", "fol": "(wumpus(Wren) | vumpus(Wren) | rompus(Wren))", "prediction": ["all x.(Wren(x) -> (Wumpus(x) | Vimpus(x) | Rompus(x)))", "all x.(Wren(x) -> (Wumpus(x) | Vumpus(x) | Rompus(x)))", "all x.(Wren(x) -> (Wumpus(x) | Vampus(x) | Rompus(x)))", "all x.(Wren(x) -> (Wumpus(x) | Vumpus(x) | Rompus(x)))", "all x.(Warn(x) -> (Wumpus(x) | Vumpus(x) | Rompus(x)))", "all x y.((Wren(x) & (Wumpus(y) | Vumpus(y) | Rompus(y))) -> Is(x,y))", "all x.(Wren(x) -> ((Wumpus(x) | Voompus(x) | Rompus(x))))", "all x.(Wren(x) -> (Wumpus(x) | Vumpus(x) | Rompus(x)))", "all x.(Wren(x) -> (Wumpus(x) | Vumpus(x) | Rompus(x)))", "(Wren(Wumpus,W) | (Vumpus,W) | Rompus,W)))", "all x.(Wren(x) -> (Wumpus(x) | Tumpus(x) | Rompus(x)))", "all x.(Wren(x) -> (Wumpus(x) | Vampus(x) | Rompus(x)))", "all x.(Wren(x) -> (Wumpus(x) | Vumpus(x) | Rompus(x)))", "all x.(Wren(x) -> (Wumpus(x) | Voompus(x) | Rompus(x)))", "all x.(Wren(x) -> (Wumpus(x) | Vumpus(x) | Rompus(x)))", "all x.(Wren(x) -> (Wumpus(x) | Venompus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1523", "nl": "Everything that is a vumpus, a wumpus, and a shumpus is a jompus and a grimpus and a numpus.", "fol": "all x. ((vumpus(x) & wumpus(x) & shumpus(x)) -> (jompus(x) & grimpus(x) & numpus(x)))", "prediction": ["all x.((Vumpus(x) | Wumpus(x) | Humpus(x)) -> (Marxist(x) & Jompus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) & Wumpus(x) & Shumpus(x)) -> (Hompus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) | Wumpus(x) | Humpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) | Wumpus(x) | Humpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) & Humpus(x) & Shumpus(x)) -> (Jonpus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) | Wumpus(x) | Shumpus(x)) -> (Jimpus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) | Wumpus(x) | Humpus(x)) -> (Jhumpus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) | Wumpus(x) | Humpus(x)) -> (Jompus(x) & Grumpus(x) & Numpus(x)))", "all x.((Vumpus(x) | Wumpus(x) | Humpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) | Wumpus(x) | Humpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) & Wampus(x) & Humpus(x)) -> (Jimpus(x) & Smaurus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) | Wumpus(x) | Shumpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) | Wumpus(x) | Shumpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) | Wumpus(x) | Shumpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vimpus(x) | Wumpus(x) | Humpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))", "all x.((Vumpus(x) | Wumpus(x) | Humpus(x)) -> (Jompus(x) & Grimpus(x) & Numpus(x)))"]}
{"id": "prontoqa_train_1524", "nl": "Jompuses are not dumpuses.", "fol": "all x. (jompus(x) -> -dumpus(x))", "prediction": ["all x.(Jompuse(x) -> -Dumpuse(x))", "all x.(Jompuse(x) -> -Dustuse(x))", "all x.(Jompuse(x) -> -Dumpsuse(x))", "all x.(Jompuse(x) -> -Dumpsuse(x))", "all x.(Jompuse(x) -> -Dumpuse(x))", "all x.(Jompuse(x) -> -Dumpsuse(x))", "all x.(Jompuse(x) -> -Dumpuse(x))", "all x.(Jimbus(x) -> -Dupuse(x))", "all x.(Jompuse(x) -> -Dumpuse(x))", "(all x.(Jompuse(x) -> -Dumpuse(x)))", "all x.(Jompuse(x) -> -Dumpuse(x))", "all x.(Jompuse(x) -> -Dumpsuse(x))", "all x.(Jompuse(x) -> -Dumuse(x))", "all x.(Jompuse(x) -> -Dumpsuse(x))", "all x.(Jompuse(x) -> -Dumpuse(x))", "all x.(Jophuse(x) -> -Dumpuse(x))"]}
{"id": "prontoqa_train_1525", "nl": "Alex is a lorpus or Alex is a yumpus or Alex is not a vumpus.", "fol": "(lorpus(Alex) | yumpus(Alex) | -vumpus(Alex))", "prediction": ["(all x.(Alex(x) -> (Lorpus(x) | Yumpus(x)) | -Vumpus(x)))", "(all x.(Alex(x) -> Lurpus(x)) | (Alex(x) -> Yumpsum(x))) | (Alex(x) -> -Vumpus(x))))", "(all x.(AlexAlex(x) -> Lark(x)) | (AlexAlex(x) -> Yumpus(x))))", "(all x.(Alex(x) -> Lorax(x)) | (Alex(x) -> Yumpsum(x)) | (Alex(x) -> -Vumpus(x))))", "all x.(Alex(x) -> (Lorpus(x) | Yampus(x) | -Vumpus(x)))", "all x.(Alex(x) -> ((Lorpus(x) | Yumpa(x)) | -Vumpus(x))))", "all x y z.((Alex(x) & Lorpus(x) | Yompus(x) | -Vampuch(y))) -> (Lorpus(x) | Yampus(y)))", "(exists x.(Alex(x) & (Lorpus(x) | Yompus(x) | -Voompus(x))))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> Yumpus(x)) | (Alex(x) -> -Vumpus(x))))", "all x.(Alex(x) -> (Lorpus(x) | Yampus(x) | -Vumpus(x)))", "(all x.(Alex(x) -> Lorpus(x)) | (Alex(x) -> Yampus(x))) | (Alex(x) -> -Vumpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Yumpus(x) | -Vumpus(x)))", "(exists x.(Alex(x) & Lorpus(x)) | exists yumpus(y)) | exists z.(Alex(z) & -Vumpus(z)))))", "all x.(Alex(x) -> (Lorpus(x) | Yampus(x) | -Vumpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Yumpus(x) | -Vumpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Yampus(x) | -Vumpus(x)))"]}
{"id": "prontoqa_train_1526", "nl": "Every gorpus is a vumpus, a shumpus, and a numpus.", "fol": "all x. (gorpus(x) -> (vumpus(x) & shumpus(x) & numpus(x)))", "prediction": ["all x.(Gorpus(x) -> (Vimpus(x) | Humpus(x) | Numpus(x)))", "(Vumpus(goroth) & Shumpus(goroth) & Numpus(goroth))", "all x.(Gorpus(x) -> (Vumpus(x) | Shumpus(x) | Numpus(x)))", "all x.(Gorpus(x) -> (Vumpus(x) & Humpus(x) & Numpus(x)))", "all x.(Gorpus(x) -> (Vumpus(x) | Humpus(x) | Numpus(x)))", "all x.(Gorpus(x) -> (Vumpus(x) & Shumpus(x) & Numpus(x)))", "all x.(Gorpus(x) -> (Vumpus(x) | Humpus(x) | Numpus(x)))", "all x.(Gorpus(x) -> (Vimpus(x) & shumpus(x) & numpus(x)))", "all x.(Gorpus(x) -> (Vumpus(x) | Humpus(x) | Numpus(x)))", "all x.(Gorpus(x) -> (Vimpus(x) | Humpus(x) | Numpus(x)))", "all x.(Gorpus(x) -> (Vumpus(x) | Humpus(x) | Numpus(x)))", "all x.(Gorpus(x) -> (Vumpus(x) | Humpus(x) | Numpus(x)))", "all x.(Gorpus(x) -> (Vumpus(x) | Humpus(x) | Numpus(x)))", "all x.(Gorpus(x) -> (Vampus(x) | Humpus(x) | Numpus(x)))", "(all x.(Gorpus(x) -> IsVampus(x)) & all y.(Shumpus(y) & All z.(Numpus(z) & IsNotUmpus(z))) -> IsNumpus(z)))", "all x.(Gorpus(x) -> (As(x,Vumpus) | As(x,Shumpus) | As(x,numpus)))"]}
{"id": "prontoqa_train_1527", "nl": "Alex is a shumpus, a yumpus, or a zumpus.", "fol": "(shumpus(Alex) | yumpus(Alex) | zumpus(Alex))", "prediction": ["all x.(Alex(x) -> (Shumpus(x) | Yuppus(x) | Zumpus(x)))", "all x.(Alex(x) -> (Shumpus(x) | Yumpus(x) | Zumpus(x)))", "all x.(Alex(x) -> (Shumpus(x) | Yumpus(x) | Zumpus(x)))", "all x.(Alex(x) -> (Shumpus(x) | Yumpus(x) | Zumpus(x)))", "all x.(Alex(x) -> (Shumpus(x) | Yumpus(x) | Zumpus(x)))", "all x.(Alex(x) -> (Shumpus(x) | Yumpus(x) | Zumpus(x)))", "all x.(Alex(x) -> (Shumpus(x) | Yumpus(x) | Zumpus(x)))", "all x.(Alex(x) -> (Shumpus(x) | Yumpus(x) | Zumpus(x)))", "all x.(Alex(x) -> (Shumpus(x) | Yumpus(x) | Zumpus(x)))", "all x.(Alex(x) -> (Shumpus(x) | Yumpus(x) | Zumpus(x)))", "(Shumpus(Alex) | Yumpus(Alex) | Zumpus(Alex))", "all x.(Alex(x) -> (Shumpus(x) | Yumpus(x) | Zumpus(x)))", "all x.(Alex(x) -> (Shumpus(x) | Yumpus(x) | Zumpus(x)))", "(Shumpus(Alex) | Yumpus(Alex) | Zumpus(Alex)))", "all x.(Alex(x) -> (Shumpus(x) | Yampus(x) | Zumpus(x)))", "all x y.((Alex(x) & (Shumpus(x) | Yumpus(x) | Zumpus(y))) -> Is(x,y))"]}
{"id": "prontoqa_train_1528", "nl": "Every shumpus is an impus and a sterpus and a grimpus.", "fol": "all x. (shumpus(x) -> (impus(x) & sterpus(x) & grimpus(x)))", "prediction": ["all x.(Shumpus(x) -> (Impossible(x) & Sterpus(x) & Grimpus(x)))", "all x and there is y.(Shumpus(x) & Espositore(x) & Sterpus(y) & Grimpus(y))", "all x.(Shumpus(x) -> (Imposer(x) & Sterpus(x) & Grimpus(x)))", "all x y z.((Shumpus(x) & Stroup(y) & Sterpus(z)) -> (Ispos(x) & Sterpus(y) & Grappa(z)))", "all x.(Shumpus(x) -> (Issue(x) & Sterpus(x) & Grimpus(x)))", "all x.(Shumpus(x) -> (is(x) & Is(x) & Is(x) & Istrpus(x) & Is(x) & Is(x) & Is(x)))", "all x.(Shumpus(x) -> (Imploss(x) & Sterpus(x) & Grimpus(x)))", "all x.(Shumpus(x) -> (Impossed(x) & Sterpus(x) & Grimpus(x)))", "all x.(Shumpus(x) -> (Improvement(x) & Sterpus(x) & Grimpus(x)))", "all x.(Shumpus(x) -> (Impossible(x) & Sterpus(x) & Grimpus(x)))", "all x.(Shumpus(x) -> (Imposer(x) | Sterpus(x) | Granule(x)))", "all x.(Shumpus(x) -> (Impose(x) & Sterpus(x) & Grimpus(x)))", "all x.(Shumpus(x) -> (Impossible(x) | Sterpus(x) | Grimpus(x)))", "all x.(Shumpus(x) -> (Impossible(x) & Sterpus(x) & Grimpus(x)))", "all x.(Shumpus(x) -> (Imposen(x) & Soderpus(x) & Soderpus(x) & Soderpus(x)))", "all x.(Shumpus(x) -> (Issue(x) & Aim(x) & Aim(x) & Aim(x) & Aim(x) & Aim(x) & Aim(x))))"]}
{"id": "prontoqa_train_1529", "nl": "Alex is not a sterpus, Alex is a vumpus, and Alex is a dumpus.", "fol": "(-sterpus(Alex) & vumpus(Alex) & dumpus(Alex))", "prediction": ["(all x.(Alex(x) -> -Sterpus(x)) & all y.(Alex(y) -> Vumpus(y)) & all z.(Alex(z) -> Dumpus(z))))", "(all x y.((Alex(x) & -Sterpus(x)) & ((Alex(y) & Vumpus(y)) & ((Alex(y) & Dumpus(x))) -> -Sterpus(y)))", "all x y z.((Alex(x) & Sterpus(y) & Vumpus(z)) -> (-Sterpus(x) & -Vumpus(x) & -Dumpus(x)))", "all x y z.((Alex(x) & Sterpus(y) & Vulmpus(z)) -> (-Stropus(x) & -Vulmpus(x) & -Dupus(x)))", "all x y.((Alex(x) & Sterpus(y)) -> -(Sterpus(x) | Vumpus(y)) & Dumpus(y)))", "(all x.(Alex(x) -> -Sterpus(x)) & all y.((Alex(y) & Vumpus(y)) -> Dumpus(y)))", "(all x y z.(Alex(x) & Sterus(y) -> -Sterus(x)) & (Alex(z) -> Vumpus(z)) & (Alex(z) -> Dumpus(z))))", "(all x y z.((Alex(x) & Sterpus(y) & Vampus(z)) -> -Sterpus(x)) & ((Alex(x) & Vampus(x)) -> Dumpus(x))))", "(all x y z.(Alex(x) & Steros(y) & Saint(z)) -> -Sterpus(x)) & ((Alex(x) & Vampus(x)) -> Dumpus(x)))", "(all x.(Alex(x) -> -Sterpus(x)) & all y.(Alex(y) -> Vumpus(y))) & all z.(Alex(z) -> Dumpus(z)))", "(all x y z.(Alex(x) -> (-Sterpus(x) & Unstable(y))) & ((Alex(z) & Unstable(z)) & Unstable(z))))", "all x.(Alex(x) -> (NoSterpus(x) & ItsVumpus(x) & ItsDumpsus(x)))", "(all x.(Alex(x) -> -Sterpus(x)) & all y.(Vumpus(y) & Dumpus(y)))", "all x y z.((Alex(x) & Sterpus(y) & Vumpus(z)) -> (-Sternus(x) & -Umpus(x) & -Dumpus(x)))", "(all x.(Alex(x) -> _Sterpus(x)) & all y.(Vimpus(y) & Dumpus(y)))", "all x y z.((Alex(x) & Sterpus(y) & Voompus(z)) -> (-Sterpus(x) & -Vumpus(x) & -Dumpus(x)))"]}
{"id": "prontoqa_train_1530", "nl": "Each sterpus is a brimpus, a lempus, and a shumpus.", "fol": "all x. (sterpus(x) -> (brimpus(x) & lempus(x) & shumpus(x)))", "prediction": ["all x.(Sterpus(x) -> (Brimpus(x) & Lempus(x) & Shumpus(x)))", "all x.(Sterpus(x) -> (Brimpus(x) | Lempus(x) | Humpus(x)))", "all x.(Sterpus(x) -> (Brimpus(x) | Lempus(x) | Humpus(x)))", "all x y z.((Sterpus(x) & Brimpus(y) & Lempus(z)) -> and Sterpus(x))", "all x.((Sterpus(x) & Brimpus(x) & Lempus(x) & Humpus(x)) -> Sterpus(x))", "all x.(Sterpus(x) -> (Brimpus(x) | Lempus(x) | Humpus(x)))", "all x.(Sterpus(x) -> (Brimpus(x) & Lempus(x) & Humpus(x)))", "all x.(Sterepus(x) -> (Brimpus(x) | Lempus(x) | Humpus(x)))", "all x.(Sterpus(x) -> (IsBrimpus(x) & IsLempus(x) & IsShumpus(x)))", "all x.(Sterepus(x) -> (Brimpus(x) | Lempus(x) | Humpus(x)))", "all x.(Sterpus(x) -> (Brimpus(x) | Lempus(x) | Humpus(x)))", "(exists x.(Sterpus(x) & Brimpus(x)) & exists y.(Lempus(y) & Shumpus(y)))", "all x.(Stereo(x) -> (Rubber(x) & Lempus(x) & Humpus(x)))", "all x.(Sterus(x) -> ((Brimpus(x) | Lempus(x) | Humpus(x))))", "all x.(Sterepus(x) -> (Brimpus(x) | Lempus(x) | Humpus(x)))", "all x.(Sterpus(x) -> (Brumpus(x) | Lempus(x) | Humpus(x)))"]}
{"id": "prontoqa_train_1531", "nl": "Rex is a vumpus, a shumpus, or a gorpus.", "fol": "(vumpus(Rex) | shumpus(Rex) | gorpus(Rex))", "prediction": ["all x.(Rex(x) -> (Vumpus(x) | Shumpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Vumpus(x) | Humpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Vimpus(x) | Shumpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Vumpus(x) | Humpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Vumpus(x) | Humpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Vumpus(x) | Shumpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Vumpus(x) | Humpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Vumpus(x) | Humpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Vumpus(x) | Humpus(x) | Gorpus(x)))", "(Vumpus(Rex) | Humpus(Rex) | Gorpus(Rex))", "all x.(Rex(x) -> (Vumpus(x) | Humpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Vumpus(x) | Shampus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Vumpus(x) | Humpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Vumpus(x) | Humpus(x) | Gorpus(x)))", "exists x.(Rex(x) & (Vumpus(x) | Humpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Vumpus(x) | Humpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1532", "nl": "Rompuses are numpuses and shumpuses and vumpuses.", "fol": "all x. (rompus(x) -> (numpus(x) & shumpus(x) & vumpus(x)))", "prediction": ["all x y.((Rompus(x) & Shumpus(y) & Vampuse(y)) -> (Numpus(x) | Shumpus(y) & Vampuse(y)))", "all x y z.((Rompuse(x) & Numpus(y) & Shumpus(z)) -> Vampus(x))", "(all x.(Rompuse(x) -> Numpuse(x)) & all y.(Shumpus(y) -> Vampuse(y)))", "(all x y z.(Rompuse(x) -> Numpus(x)) & (Shumpus(y) -> Tumpus(z)))", "(all x.(Rompuse(x) -> Numpuse(x)) & all y.(Shumpus(y) & -Vampuse(y))))", "(all x.(Rompuse(x) -> Numpus(x)) & all y.(Shumpus(y) -> Vampuse(y)))", "(all x.(Rapus(x) -> Numbus(x)) & all y.(Shumpus(y) -> Vampuse(y)))", "(all x.(Rompus(x) -> Numpus(x)) & all y.(Shumpus(y) -> Vampuse(y)))", "all x.(Rompus(x) -> (Numpus(x) | Humpus(x) | Umpuse(x)))", "(all x.(Rompus(x) -> Numps(x)) & all y.(Shumpus(y) -> Vampuse(y)))", "all x y.((Rompus(x) & Numpus(y)) -> (Shumpus(x) & Vampus(x)))", "(all x y z.(Rompus(x) -> Numpus(x)) & (Shumpus(y) -> Venomus(z)))", "(all x.(Rompus(x) -> Numpuse(x)) & all y.(Shumpus(y) -> Vampuse(y)))", "(all x.(Rompus(x) | Numpus(x))) & (Shumpus(x) | Vampus(x)))", "(all x.(Rompuse(x) -> Numpus(x)) & all y.(Shumpus(y) -> Vampus(y)))", "(all x.(Rompus(x) -> Numpus(x)) & all y.(Shumpus(y) -> Vampuse(y)))"]}
{"id": "prontoqa_train_1533", "nl": "Zumpuses are not numpuses.", "fol": "all x. (zumpus(x) -> -numpus(x))", "prediction": ["all x.(Zombies(x) -> -Numpus(x))", "all x.(Zombies(x) -> -Numpus(x))", "all x.(Zumpus(x) -> -Numpuse(x))", "all x.(Zumpuse(x) -> -Numpus(x))", "all x.(Zumpus(x) -> -Numpuse(x))", "all x.(Zumpus(x) -> -Numpus(x))", "all x.(Zumpus(x) -> -Numpus(x))", "all x.(Zumpus(x) -> -Numpus(x))", "all x.(Zumpus(x) -> -Numpus(x))", "all x.(Zumpus(x) -> -Numpus(x))", "all x.(Zumpus(x) -> -Numpuse(x))", "all x.(Zumpus(x) -> -Numpuse(x))", "all x.(Zumpus(x) -> -Numpus(x))", "all x.(Zumpus(x) -> -Numpuse(x))", "all x.(Zumpus(x) -> -Numpus(x))", "all x.(Zumpus(x) -> -Numpuse(x))"]}
{"id": "prontoqa_train_1534", "nl": "Polly is a vumpus, a wumpus, and a zumpus.", "fol": "(vumpus(Polly) & wumpus(Polly) & zumpus(Polly))", "prediction": ["(All x.(Polly(x) -> Vumpus(x)) & (Wumpus(x) & Zumpus(x)))", "all x.(Polly(x) -> (Vimpus(x) | Wumpus(x) | Zumpus(x)))", "(Vumpus(Polly) | Wumpus(Polly) | Zumpus(Polly))", "all x.(Polly(x) -> (Vumpus(x) | Wumpus(x) | Zumpus(x)))", "exists x.(Polly(x) & (Vumpus(x) | Wumpus(x) | Zumpus(x)))", "all x.(Pollie(x) -> (Vampus(x) & Wempus(x) & Zumpus(x)))", "(Vumpus(Poly) | Wumpus(Poly) | Zumpus(Poly)))", "all x.(Ploy(x) -> (Vumpus(x) | Wumpus(x) | Zumpus(x)))", "all x.(Polly(x) -> (Vumpus(x) | Wumpus(x) | Zumpus(x)))", "(Vampus(Polly) | Wumpus(Poly) | Zumpus(Poly)))", "all x.(Polly(x) -> (Vampus(x) & Wumpus(x) & Zumpus(x)))", "all x.(Polly(x) -> (Vumpus(x) & Wumpus(x) & Zumpus(x)))", "all x.(Polly(x) -> (Vumpus(x) & Wumus(x) & Zumpus(x)))", "(Umpus(Polly) & Wumpus(Poly) & Zumpus(Polly))", "(LikesVumpus(polly) | (LikesWumpus(poly) | LikesTompus(poly))))", "all x.(Polly(x) -> ((Vimpus(x) & Wumpus(x) & Zumpus(x))))"]}
{"id": "prontoqa_train_1535", "nl": "Each brimpus is a tumpus.", "fol": "all x. (brimpus(x) -> tumpus(x))", "prediction": ["all x.(Brimpus(x) -> Tumpus(x))", "all x.(Brimpus(x) -> Tormpus(x))", "all x.(Brumpus(x) -> Tumpus(x))", "all x.(Brumpus(x) -> Tumpus(x))", "all x.(Brimpus(x) -> Tumpus(x))", "all x.(Brumpus(x) -> Tumpus(x))", "all x.(Brimpus(x) -> Thrombosis(x))", "all x.(Brimpus(x) -> Tumpus(x))", "all x.(Brimpus(x) -> Tumpus(x))", "all x.(Blumpus(x) -> Tumpus(x))", "all x.(Brimpus(x) -> Tumpus(x))", "all x.(Bimpus(x) -> Tumpus(x))", "all x.(Brimpus(x) -> Tumpus(x))", "all x.(Brumpus(x) -> Tumpus(x))", "all x.(Brumpus(x) -> Tumpus(x))", "all x.(Brumpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_1536", "nl": "Wren is a dumpus and a brimpus and a lorpus.", "fol": "(dumpus(Wren) & brimpus(Wren) & lorpus(Wren))", "prediction": ["(all x.(Wren(x) -> Dumpus(x)) & all y.(Brimpus(y) | Lorpus(y))))", "all x.(Wren(x) -> (Dumpus(x) & Brimpus(x) & Lorpus(x)))", "all x y.((Wren(x) & Dumpus(x) & Brimpus(x) & Lorpus(y)) -> (Dumps(x) & HasLorpus(x)))", "all x.(Wren(x) -> (Dumpsus(x) & Brimpus(x) & Lorpus(x)))", "(Dumps(Wren) & Brumpus(Wren) & Lorpus(Wren))", "all x.(Wren(x) -> (Dumpus(x) & Brimpus(x) & Lorpus(x)))", "(all x.(Wren(x) -> Dumpus(x)) & (Brimpus(x) | Lorpus(x))))", "all x.(Wren(x) -> (Dupus(x) & Brimpus(x) & Lorpus(x)))", "all x y.((Wren(x) & Dumpus(y)) -> (Brimpus(x) & Lorpus(x)))", "all x.(Wren(x) -> (Dumpus(x) & Brimpus(x) & Lorpus(x)))", "all x.(Wren(x) -> (IsDumpus(x) & IsBrimpus(x) & IsLorpus(x)))", "all x.(Wren(x) -> (Dupus(x) & Brimpus(x) & Lorpus(x)))", "all x.(Wren(x) -> (Dumpus(x) & Brimpus(x) & Hormone(x)))", "all x.(Wren(x) -> (Dumpus(x) & Bump(x) & Lorpus(x)))", "(Dumpus(Wren) & Brimpus(Wren) & Lopus(Wren))", "(all x.(Wren(x) -> Dumpus(x)) & (Brimpus(x) | Loph(x))))"]}
{"id": "prontoqa_train_1537", "nl": "Wren is a tumpus, a jompus, or a vumpus.", "fol": "(tumpus(Wren) | jompus(Wren) | vumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vuzela(x)))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Wren(x) -> ((Tumpus(x) | Jompus(x) | Vumpus(x))))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Wren(x) -> ((Tumpus(x) | Jompus(x) | Vumpus(x))))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Vumpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | FlowerUmpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Jompus(x) | Voluptuus(x)))"]}
{"id": "prontoqa_train_1538", "nl": "Everything that is a rompus, a grimpus, or a gorpus is a brimpus, a jompus, and a zumpus.", "fol": "all x. ((rompus(x) | grimpus(x) | gorpus(x)) -> (brimpus(x) & jompus(x) & zumpus(x)))", "prediction": ["all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) & Jompus(x) & Zumpus(x)))", "all x.((rompus(x) | grimpus(x) | gorpus(x)) -> (Brimpus(x) & Jompus(x) & Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) & Jompus(x) & Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) & Jompus(x) & Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) | Jompus(x) | Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) & Jompus(x) & Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) | Jompus(x) | Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) & Jompus(x) & Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) & Jompus(x) & Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) | Jompus(x) | Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) | Jompus(x) | Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) & Jompus(x) & Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) | Jompus(x) | Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) | Jompus(x) | Zumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Gorpus(x)) -> (Brimpus(x) & Jompus(x) & Zumpus(x)))", "all x.((Menu(x) & (Rompus(x) | Grimpus(x) | Gorpus(x))) -> (Brimpus(x) | Jompus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1539", "nl": "Every gorpus is a lempus, a shumpus, and an impus.", "fol": "all x. (gorpus(x) -> (lempus(x) & shumpus(x) & impus(x)))", "prediction": ["all x.(Gorpus(x) -> (Lempus(x) | Humpus(x) | Issue(x)))", "all x.(Gorpus(x) -> (Lempus(x) & Humpus(x) & Impossible(x)))", "all x.(Gorpus(x) -> (Lempus(x) | Humpus(x) | Imperator(x)))", "all x.(Gorpus(x) -> (Lempus(x) | Humpus(x) | Issue(x)))", "all x.(Gorpus(x) -> (Lempus(x) | Simpus(x) | Impossible(x)))", "all x.(Gorpus(x) -> (Lempus(x) & Humpus(x) & Imperator(x)))", "all x.(Gorpus(x) -> (Lempus(x) | Humpus(x) | Imperva(x)))", "all x.(Gorpus(x) -> (Limpus(x) | Sumidus(x) | Impermiss(x)))", "all x.(Gorpus(x) -> (Lempus(x) | Humpus(x) | Impermissif(x)))", "all x.(Gorpus(x) -> (Lempus(x) | Shumpus(x) | Isolator(x)))", "all x.(Gorpus(x) -> (Lempus(x) | Shumplus(x) | Imperator(x)))", "all x.(Gorpus(x) -> (Lempus(x) & Shumpus(x) & Issue(x)))", "all x y.((Gorpus(x) & Lempus(x) 1 | Humpus(y) 02 | Imperator(y)) -> Gorpus(x))", "all x.(Gorpus(x) -> (Lempus(x) | Humpus(x) | Issue(x)))", "all x.(Gorpus(x) -> (Lempus(x) & Humpus(x) & Impossible(x)))", "all x.(Gorpus(x) -> (Lempus(x) | Humpus(x) | Izrael(x)))"]}
{"id": "prontoqa_train_1540", "nl": "Fae is a grimpus and Fae is not a lempus and Fae is a wumpus.", "fol": "(grimpus(Fae) & -lempus(Fae) & wumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Grumpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Wumpus(x)))", "(all x.(Fae(x) -> Scrumpus(x)) & (-Fae(x) -> Lempus(x)) & (-Fae(x) -> Waumpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> -Lempus(y)) & all z.(Fae(z) -> Wumpus(z))))", "(all x y z.((Fae(x) & Gromnix) & Grimpus(y)) -> (Wumpus(z) | (Fae(x) & -Lempus(y)))))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Wumpus(x))))", "(all x y.((Fae(x) & Grimpus(x)) -> (Fae(y) & -Lempus(y))) & all z w.((Fae(z) & Humpus(w)) -> (Fae(z)) & -Lempus(x) & Wumpus(z))))", "(all x y z.((Fae(x) & Grupus(y)) -> (FaeGruppusGruppus(z) | (FaeGruppusGruppus(z) & -LempusGruppus(z)))))", "(all x.(Wumpus(x) -> Crempus(x)) & (Crue(x) -> -Lempus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Wumpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (-Limpus(x) | Wumpus(x))))", "all x y z.((Fae(x) & Grimpus(x) & Fae(y) & -Lempus(y)) -> (Fae(z) & Wumpus(z)))", "(all x y.(Fae(x) -> Grimpus(x)) & (Fae(y) -> -Lempus(y))) & (Fae(y) -> Wumpus(y)))", "(all x.(Fae(x) -> Grappa(x)) & (Fae(x) -> -Lempus(x)) & (Fae(x) -> Wumpus(x)))", "(all x y z.((Fae(x) & Grumpus(y)) -> Grimpus(x)) & ((Fae(z) & -Lempus(z))) -> Hush(x)))", "all x y z.((Fae(x) & Grimpus(y) & Reflex(z)) -> (DarkEnds(x,y) & Lempus(z) & Wumpus(z)))", "all x.(Fae(x) -> (Smouse(x) & -Lempus(x) & Umpus(x)))"]}
{"id": "prontoqa_train_1541", "nl": "Everything that is a tumpus, an impus, and a lorpus is a shumpus, a dumpus, and a jompus.", "fol": "all x. ((tumpus(x) & impus(x) & lorpus(x)) -> (shumpus(x) & dumpus(x) & jompus(x)))", "prediction": ["all x.((Tumpus(x) | Impossible(x) | Thrills(x)) -> (Shumpus(x) | Dumpus(x) | Jompus(x)))", "all x.((Tumpus(x) | Irimposed(x) | Lorpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Tumpus(x) | Impenetrator(x) | Lorpus(x)) -> (Stumpus(x) & Dumpus(x) & Jhumpus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lorpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lorpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Tumpus(x) | IsImprovement(x) | IsLorpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Tumpus(x) | Imperator(x) | Lorpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lorpus(x)) -> (Shumpus(x) | Dumpus(x) | Jompus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lordpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Tumpus(x) | IsImmersion(x) | DoesLorpus(x)) -> (Shumpus(x) | Dumpus(x) | Jompus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lorpus(x)) -> (HasShumpus(x) & HasDumpus(x) & HasJumpus(x)))", "all x.((Tumpus(x) | Imperator(x) | Lorpus(x)) -> (Shumpus(x) | Dumpus(x) | Jompus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lorpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lordpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Tumpus(x) | Ilirez(x) | Lorpus(x)) -> (Shumpus(x) & Dumpus(x) & Jompus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lordpus(x)) -> (Shumpus(x) | Dumpus(x) | Jompus(x)))"]}
{"id": "prontoqa_train_1542", "nl": "Sally is an impus.", "fol": "impus(Sally)", "prediction": ["Sally is a impus.", "Sally ist ein Impediment(Sally)", "(Impossible(Sally) -> Celebrated(Sally))", "Sally is a impus(Sally)", "Sally is an impus.", "Sally is a impuso.", "Sally IsImpossible(Sally)", "(Impossible(Sally,P) & CanImpossible(Sally,P))", "Alles x.(Sally(x) -> Isolated(x))", "Sally is a impusct.", "Sally is an impuse(Sally)", "Sally is a impuse.", "Sally is a impus.", "Sally is an impus.", "Sally ist eine Impossible(Sally)", "Sally ist einIllegal(Sally)"]}
{"id": "prontoqa_train_1543", "nl": "Sally is a shumpus.", "fol": "shumpus(Sally)", "prediction": ["all x.(Sally(x) -> Humpus(x))", "Sally is a shumpus.", "all x.(Sally(x) -> Humpus(x))", "Sally is a shumpus.", "Sally is a shumpus.", "All x.(Sally(x) -> Humpus(x))", "Sally(s) -> Humpus(s))", "Sally is a shumpus (shmooth(Sally,Mustard) & LivesIn(Sally,Mustard))", "Sally is shumpus.", "Sally is a shumpus.", "(Sumpus(Sally) & Shumpus(Sally))", "all x.(Sally(x) -> Humpus(x))", "Sally is a Humpta(Shumpus)", "(Shumpus(Sally) -> Shumpus(Sally))", "Sally is a shumpus.", "Sally is Shumpus(Sumpus)"]}
{"id": "prontoqa_train_1544", "nl": "Everything that is a sterpus or a yumpus or a wumpus is a lorpus and a tumpus and a brimpus.", "fol": "all x. ((sterpus(x) | yumpus(x) | wumpus(x)) -> (lorpus(x) & tumpus(x) & brimpus(x)))", "prediction": ["all x.((Sterpus(x) | Yumpus(x) | Wumpus(x)) -> (Lorpus(x) & Pluto(x) & Brimpus(x)))", "all x.((Sterpus(x) | Yampus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.((Sterpus(x) | Yumpus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.((Sterpus(x) | Yumpus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.((Sterpus(x) | Yumpus(x) | Wompus(x)) -> (Lorph(x) & Tumpus(x) & Brimpus(x)))", "all x.((Sterpus(x) | Yumpus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brampus(x)))", "all x.((Sterpus(x) | Yumpa(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.((Sterpus(x) | Yuppus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.((Sterpus(x) | Yampus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.((Sterpus(x) | Yampus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.((Glimmer(x) & (Sterpus(x) | Yumps(x) | Wumpus(x))) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.((Between(x) & (Stropus(x) | Yumpus(x) | Wumpus(x))) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.((Sterpus(x) | Yuppus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.((Sterpus(x) | Yumpus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.((Sterpus(x) | Yompus(x) | Wumpus(x)) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))", "all x.(((Ssterpus(x) | Yumpus(x) | Wumpus(x))) -> (Lorpus(x) & Tumpus(x) & Brimpus(x)))"]}
{"id": "prontoqa_train_1545", "nl": "Everything that is a yumpus or a grimpus or a wumpus is a brimpus and a numpus and a gorpus.", "fol": "all x. ((yumpus(x) | grimpus(x) | wumpus(x)) -> (brimpus(x) & numpus(x) & gorpus(x)))", "prediction": ["all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))", "all x.(yumpus(x) | grimpus(x) | wumpus(x)) -> (Frimpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Yumpus(x) | Gruppus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> Brimpus(x)) & Nompus(x) & Gorpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Yumpus(x) | Gruppus(x) | Wompus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brumpus(x) & Numpus(x) & Gorpus(x)))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brimpus(x) & Numpus(x) & Chorpus(x)))", "all x.((Yumpus(x) | Grimpus(x) | Wumpus(x)) -> (Brampus(x) & Numpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1546", "nl": "Everything that is a rompus and a grimpus and a lempus is a brimpus.", "fol": "all x. ((rompus(x) & grimpus(x) & lempus(x)) -> brimpus(x))", "prediction": ["all x.((Rompus(x) | Grimpus(x) | Lempus(x)) -> Brimpus(x))", "all x.((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "all x.((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "all x.((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "all x.((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "all x.((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "all x.((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "all x.((Rompus(x) & Grapple(x) & Lempus(x)) -> Brimpus(x))", "all x.((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "all x.((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "all x y z.((Foot(x) & Grimpus(y) & Lempus(z) & Rompus(x) & Grimpus(y)) -> Brimpus(x))", "all x.((Rompus(x) & Crompus(x) & Lempus(x)) -> Brimpus(x))", "all x.(((DarkPosh(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "all x.((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "all x.((Rompus(x) & Grimpus(x) & Lempus(x)) -> Brimpus(x))", "all x.((Rome(x) & Grimpus(x) & Lempus(x)) -> Britus(x))"]}
{"id": "prontoqa_train_1547", "nl": "Sally is a rompus and Sally is a dumpus and Sally is not a brimpus.", "fol": "(rompus(Sally) & dumpus(Sally) & -brimpus(Sally))", "prediction": ["(all x.(Solid(x) -> Rompus(x)) & all y.(Solid(y) -> Dumpus(y)) & all z.(Solid(z) -> -Brimpus(z))))", "(all x.(Sally(x) -> Rhopus(x)) & (Sally(x) -> Dumpus(x)) & (Sally(x) -> -Brimpus(x)))", "(3rompus(Sally) -> Dumpus(Sally) & 2nd(Sally) -> NotBrimpus(Sally))", "all x y z.((Sally(x) & Rommet(x) & Dumpus(y) & -Brimpus(z)) -> (Rompus(x) & Dumpus(y) & -Brimpus(y)))", "(all x.(Rompus(x) -> Sally(x)) & all y.(Dumpus(y) -> Sally(y))) & all z.(Brompus(z) -> -Sally(z))))", "all x y z.((Sally(x) & Rompus(y) & Dumpus(z)) -> (Is(x,y) & -Is(x,z)))", "all x y z.((Sally(x) & Rompus(x) & Dumpus(y)) -> (Rompus(x) & Dumpus(y) & -Brimpus(z)))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> Dumpus(y))) & all z.(Sally(z) -> -Brumpus(z)))", "all x.(Sally(x) & Tomato(x) & Dumpus(x) & -Brimpus(x))", "all x y z.((Sally(x) & Rompus(x) & Dumpus(y) & Brimpus(z)) -> (Rompus(x) & Dumpus(y) & -Brimpus(z)))", "(all x y.(Rompus(x) & Dumpus(y)) -> -Brimpus(x))", "(all x y.(Rompus(x) & Roman(y)) & (Dumpus(y) & -Brimpus(y)))", "all x y.((Sally(x) & Rompus(x) & Dumpus(y)) -> -Bimpus(x))", "all x y z.((Sally(x) & Romax(x) & Sally(y) & Dumpus(y)) -> ((Rompus(x) & Dumpus(y) & -Brimpus(z))))", "(all x.(Rompus(x) & Dumpus(x)) & (Brimpus(x) | Dumpus(x))))", "(all x y.(Vibrant(x) -> Rompus(x)) & (Dumpus(y) & -Brumpus(y)))"]}
{"id": "prontoqa_train_1548", "nl": "Tumpuses are dumpuses, wumpuses, and lorpuses.", "fol": "all x. (tumpus(x) -> (dumpus(x) & wumpus(x) & lorpus(x)))", "prediction": ["all x.(Tumpers(x) -> (Dumpuse(x) | Wumpus(x) | Loomise(x)))", "all x.(Tumpus(x) -> (Dumpuse(x) | Wumpus(x) | Lorpus(x)))", "all x.(Tumpus(x) -> (Dumpuse(x) | Wumpuse(x) | Lordpuse(x)))", "all x.(Tummus(x) -> (Dumuse(x) | Wumpus(x) | Lorpus(x)))", "all x.(Tumpus(x) -> (Dumps(x) | Wumpus(x) | Lorpus(x)))", "all x.((Tumpus(x) & Dumpuse(x)) | (Wumpus(x) & Lorpus(x))))", "all x.(Tumpus(x) -> (Dumpuse(x) | Wumpuse(x) | Lorpuse(x)))", "all x.(Tumpuse(x) -> (Dumpuse(x) | Wumpuse(x) | Lorpuse(x)))", "all x.(Tumpuse(x) -> (Dumpuse(x) | Wumpus(x) | Lorpus(x)))", "(all x y z.((Tumpuse(x) & Dumpuse(y)) -> (Established(y) & Established(z))))", "all x.(Tumpus(x) -> (Dumuse(x) | Wumpus(x) | Lorpuse(x)))", "all x.(Tumpus(x) -> (Dumpuse(x) | Wumpus(x) | Lorpuse(x)))", "all x.(Tumpuse(x) -> (Dumpuse(x) & Wumpus(x) & Lorpus(x)))", "all x y z.((Tumpuse(x) & (Dumps(y) | Wumpus(y) | Lorpus(z))) -> ((Dompus(y) | Wumpus(y)) & Lorpus(z)))", "all x.(Tumpe(x) -> (Dumuse(x) | Wumpus(x) | Lorpuse(x)))", "all x.(Tumpus(x) -> ((Dumps(x) | Wumpus(x)] | Lorpuses(x))))"]}
{"id": "prontoqa_train_1549", "nl": "Stella is a sterpus, a lorpus, or a dumpus.", "fol": "(sterpus(Stella) | lorpus(Stella) | dumpus(Stella))", "prediction": ["all x.(Stella(x) -> (Sterpus(x) | Lorpus(x) | Dumpus(x)))", "(Stella(Sterpus) | Lorpus(Stella) | Dumpus(Stella)))", "all x.(Stella(x) -> (Sterpus(x) | Lorpus(x) | Dumpus(x)))", "(all x.(Stella(x) -> Sterpus(x)) | (Lorpus(x) | Dumpus(x))))", "(Lorpus(Stella) | Dumpus(Stella))", "all x.(Stella(x) -> (Sterpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Stella(x) -> (Strogote(x) | Lorpus(x) | Dumpus(x)))", "(As(Stella) | As(Sterpus(Larpus) | As(Stella)))", "all x.(Stella(x) -> (Sterepus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Stella(x) -> (Strerpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Lower(x) | Dumpus(x))", "all x.(Stella(x) -> (Sterepus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Stella(x) -> (Sterosen(x) | Lorpus(x) | Dumpus(x)))", "((Stella(n) & (Sterpus(n) | Lorpus(n) | Dumpus(n))))", "all x.(Stella(x) -> (Sterpus(x) | Lorpus(x) | Dumpus(x)))", "(Stella(Sterpus) | Sterpus(lorpus) | Dumpus(dusus))"]}
{"id": "prontoqa_train_1550", "nl": "Every zumpus is a brimpus and a sterpus and a dumpus.", "fol": "all x. (zumpus(x) -> (brimpus(x) & sterpus(x) & dumpus(x)))", "prediction": ["all x.(Tompus(x) -> (Brimpus(x) & Sterpus(x) & Dumpus(x)))", "all x.(Zumpus(x) -> (Brimpus(x) & Sterpus(x) & Dumpus(x)))", "all x.(Zumpus(x) -> (Brimpus(x) | Steerpus(x) | Dumpus(x)))", "all x.(Zumpus(x) -> (Brimpus(x) & Sterpus(x) & Dumpus(x)))", "all x.(Tompus(x) -> (Brumpus(x) & Sterpus(x) & Dumpus(x)))", "all x.(Tompus(x) -> (Brumpus(x) & Sterpus(x) & Dumpus(x)))", "all x.(Zumpus(x) -> ((Brimpus(x) & Sterpus(x)) & Dumpus(x)))", "all x.(Tompus(x) -> (Brumpus(x) & Sterus(x) & Dumpus(x)))", "all x.(Zumpus(x) -> (Brumpus(x) & Sterpus(x) & Dumpus(x)))", "all x.(Zumpus(x) -> (Ambis(x) & Brimpus(x) & Sterpus(x) & Dumpus(x)))", "all x.(Zumpus(x) -> (Bribus(x) & Steros (x) & Dumpus(x)))", "all x.(Zumpus(x) -> (Brimpus(x) & -Sterpus(x) & -Dumpus(x)))", "all x.(Zumpus(x) -> (Brimpus(x) & Sterpus(x) & Dumpus(x)))", "all x.(Tompus(x) -> (Brimpus(x) & Sterpus(x) & Dumpus(x)))", "exists x.(Zumpus(x) & (Brimpus(x) | Sterpus(x) | Dumpus(x)))", "all x.(Zumpus(x) -> (Brimpus(x) & Sterpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1551", "nl": "Wren is a tumpus or a dumpus or a sterpus.", "fol": "(tumpus(Wren) | dumpus(Wren) | sterpus(Wren))", "prediction": ["all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "all x y.((Wren(x) & Tumpus(x)) | (Dumpus(x) | Sterepus(x))))", "all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "all x.(Wren(x) -> ((Tumpus(x) | Dumpus(x) | Sterpus(x))))", "all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))", "all x.(Wren(x) -> (Tumpus(x) | Dumpus(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1552", "nl": "Wumpuses are lorpuses, impuses, and rompuses.", "fol": "all x. (wumpus(x) -> (lorpus(x) & impus(x) & rompus(x)))", "prediction": ["all x.(Wumpus(x) -> (Lorpus(x) | Issue(x) | Rompus(x)))", "(all x.(Wumpus(x) -> (Lorpuse(x) | Impose(x) | Rompuse(x)))", "all x.((Wumpuse(x) & Lovorous(x) & Imperium(x) & Rompus(x)) -> Wumpuse(x))", "all x.(Wumpuse(x) -> (Lorpuse(x) | Impose(x) | Rompuse(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Issue(x) | Rompus(x)))", "all x.(Wumpus(x) -> (Lorpuse(x) | Issue(x) | Rompuse(x)))", "all x.(Wulmpuse(x) -> (Lorpuse(x) | Impose(x) | Rompuse(x)))", "all x.(Wumpuse(x) -> (Lorpuses(x) | Imperses(x) | Rompuses(x)))", "all x.(Wumpuse(x) -> (Lorpuse(x) | Impossible(x) | Rompuse(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Imperator(x) | Rompus(x)))", "all x.(Wulmpuse(x) -> (Lorpuse(x) | IIspose(x) | Rompuse(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Issue(x) | Rompus(x)))", "all x.(Wumpus(x) -> (Lovoruse(x) | Issue(x) | Rompuse(x)))", "all x.(Wumpuse(x) -> (Lorpus(x) | Issue(x) | Rompus(x)))", "all x.(Wumpus(x) -> (LorpusEvent(x) | Cicereevent(x) | Rompusevent(x)))", "all x.(Wumpuse(x) -> (Leaps(x) | Iliases(x) | Rompuses(x)))"]}
{"id": "prontoqa_train_1553", "nl": "Sam is a rompus or a shumpus or a dumpus.", "fol": "(rompus(Sam) | shumpus(Sam) | dumpus(Sam))", "prediction": ["all x.((Sam(x) & (Rompus(x) | Sumpfus(x) | Dumpus(x))) -> SamPest(x))", "(All x.(Sam(x) -> (Rompus(x) | Sibpus(x) | Dumpus(x))))", "all x.(Sam(x) -> (Rompus(x) | Shumpus(x) | Dumpus(x)))", "all x.(Sam(x) -> (Rompus(x) | Humpus(x) | Dumpus(x)))", "all x y.((Sam(x) & rompus(x)) | (Shumpus(x) | Dumpus(x))))", "all x.(Sam(x) -> (Rompus(x) | Humpus(x) | Dumpus(x)))", "all x.(Sam(x) -> (Rompus(x) | Humpus(x) | Dumpus(x)))", "all x.(Sam(x) -> (Rompus(x) | Shumpus(x) | Dumpus(x)))", "all x.(Sam(x) -> (Rompus(x) | Humpus(x) | Dumpus(x)))", "all x.(Sam(x) -> (Rompus(x) | Humpus(x) | Dumpus(x)))", "all x.((Sam(x) & (Rompus(x) | Humpus(x) | Dumpus(x))) -> (Rompus(x) | Dumpus(x)))", "all x.(Sam(x) -> (Rompus(x) | Humpus(x) | Dumpus(x)))", "all x.(Sam(x) -> (Rompus(x) | Humpus(x) | Dumpus(x)))", "all x.(Sam(x) -> (Rompus(x) | Sompus(x) | Dumpus(x)))", "all x.(Sam(x) -> (Rompus(x) | Humpus(x) | Dumpus(x)))", "all x.(Sam(x) -> (Rempus(x) | Humpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_1554", "nl": "Each vumpus is a lorpus and a grimpus and a tumpus.", "fol": "all x. (vumpus(x) -> (lorpus(x) & grimpus(x) & tumpus(x)))", "prediction": ["all x.(Vumpus(x) -> (Lorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Vumpus(x) & Loomis(x)) -> (Smirnpus(x) & Tumpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Grimpus(x) & Tumpus(x)))", "(all x.(Vumpus(x) -> Loomis(x)) & (Lurpus(x) -> Grimpus(x)) & (Tumpus(x))))", "all x.(Vumpus(x) -> (Lorpus(x) & Grimpus(x) & Tumpus(x)))", "(all x.(Vumpus(x) -> Lorpus(x)) & all y.(Grampus(y) -> Tumpus(y)))", "all x.(Vumpus(x) -> (Lorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.(Vumpus(x) -> (Larpus(x) & Grimpus(x) & Tumpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) | Grimpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1555", "nl": "Sam is a lorpus, a tumpus, or an impus.", "fol": "(lorpus(Sam) | tumpus(Sam) | impus(Sam))", "prediction": ["(Lorpus(Sam) | Tumpus(Sam) | Idiot(Sam)))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Impeccionist(x)))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Impossible(x)))", "(Lorpus(Sam) | Tumpus(Sam) | Impossible(Sam))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Imperium(x)))", "all x.(Sam(x) -> (Lorpus(x) | Tumulus(x) | Impeccato(x)))", "all x.(Sam(x) -> (Lorp(x) | Tumpus(x) | Implicator(x)))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Impeccable(x)))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Issuel(x)))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Issue(x)))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Imperator(x)))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Impenetrate(x)))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Isolator(x)))", "exists x.(Sam(x) & (Lorpus(x) | Tumpus(x) | Impossible(x)))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Imperator(x)))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Imperator(x)))"]}
{"id": "prontoqa_train_1556", "nl": "Each vumpus is a wumpus and a numpus and a shumpus.", "fol": "all x. (vumpus(x) -> (wumpus(x) & numpus(x) & shumpus(x)))", "prediction": ["all x y.(Vumpus(x) -> (Wumpus(x) & Numpus(y) & Humpus(y)))", "(exists x.(Vumpus(x) & Wumpus(x)) & exists y.(Numpus(y) & Shumpus(y))))", "all x.(Vumpus(x) -> (Wumpus(x) & Numpus(x) & Humpus(x)))", "all x.(Vumpus(x) -> (Wumpus(x) & Numpus(x) & Humpus(x)))", "all x.(Vumpus(x) -> (Wumpus(x) & Numpus(x) & Humpus(x)))", "all x.(Vumpus(x) -> (Wumpus(x) & Numpus(x) & Humpus(x)))", "all x.(Vumpus(x) -> (Wumpus(x) & Numpus(x) & Humpus(x)))", "all x y.((Vumpus(x) & Humpus(y)) -> (Wumpus(x) & Numpus(y) & Humpus(y)))", "all x.(Vumpus(x) -> ((Wumpus(x) & -numpus(x)) | (-numpus(x) & -shumpus(x)))))", "all x.((Vumpus(x) & Wumpus(x)) -> (Numpus(x) & Humpus(x)))", "all x.(Vumpus(x) -> (Wumpus(x) & Numpus(x) & Humpus(x)))", "all x.(Vumpus(x) -> (Wumpus(x) & Numpus(x) & Humpus(x)))", "all x.(Vumpus(x) -> (Wumpus(x) & Numpus(x) & Humpus(x)))", "all x.(Vumpus(x) -> (Wumpus(x) & Numpus(x) & Humpus(x)))", "exists x.(Vumpus(x) & Wumpus(x) & Numpus(x) & Humpus(x))", "all x.(Vumpus(x) -> (Wumpus(x) & Numpus(x) & Humpus(x)))"]}
{"id": "prontoqa_train_1557", "nl": "Stella is a wumpus or a gorpus or a lempus.", "fol": "(wumpus(Stella) | gorpus(Stella) | lempus(Stella))", "prediction": ["all x.(Stella(x) -> (Wumpus(x) | Dorpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Gorpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Gorpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Gorpus(x) | Lempus(x)))", "all x.(Stella(x) -> ((Wumpus(x) | Gorpus(x) | Lempus(x))))", "all x.((Stella(x) & (Wumpus(x) | Gorpus(x) | Lampus(x))) -> wumpus(x))", "(Wumpus(Stella) | Gorpus(Stella) | Lempus(Stella)))", "all x.(Stella(x) -> (Wumpus(x) | Gorpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Gorpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Gorpus(x) | Lempus(x)))", "exists x.(Stella(x) & (Wumpus(x) | Gorpus(x) | Lampus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Gorpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Gorpus(x) | Lempus(x)))", "all x.(Wumpus(x) | Gorpus(x) | Lampus(x))", "all x.(Stella(x) -> (Wumpus(x) | Gorpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Gorpus(x) | Lempus(x)))"]}
{"id": "prontoqa_train_1558", "nl": "Every lempus is a tumpus, a vumpus, and a shumpus.", "fol": "all x. (lempus(x) -> (tumpus(x) & vumpus(x) & shumpus(x)))", "prediction": ["all x.(Lempus(x) -> (Tumpus(x) & Vukus(x) & Humpus(x)))", "all x.(Limpus(x) -> (Tumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Lempus(x) -> (Tumpus(x) & Tumpus(x) & Kumpus(x) & Humpus(x)))", "all x.(Limpus(x) -> (Tumpus(x) | Voompus(x) | Humpus(x)))", "all x.(Lempus(x) -> (Tumpus(x) | Vampus(x) | Humpus(x)))", "all x.(Lempus(x) -> (Tumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Lempus(x) -> (Tumpus(x) & Vuxus(x) & Humpus(x)))", "all x.(Lempus(x) -> (Tumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Lempus(x) -> (Tumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Lempus(x) -> (Tumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Lempus(x) -> (Tumpus(x) | Vampus(x) | Humpus(x)))", "all x.(Lempus(x) -> (Tumpus(x) | Tumpus(x) | Humpus(x)))", "all x.(Lempus(x) -> (Tumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Lempus(x) -> (Tumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Lempus(x) -> (Tumpus(x) & Vumpus(x) & Humpus(x)))", "all x.(Lempus(x) -> (Tumpus(x) | Tumpus(x) | Humpus(x)))"]}
{"id": "prontoqa_train_1559", "nl": "Rex is a tumpus or a wumpus or a zumpus.", "fol": "(tumpus(Rex) | wumpus(Rex) | zumpus(Rex))", "prediction": ["all x.(Rex(x) -> (Tumpus(x) | Wompus(x) | Zumpus(x)))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "(all x.(Rex(x) -> Tanus(x)) | (Wumpus(x) | Zumpus(x))))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "all x.(Rex(x) -> (Tumpus(x) | Wumpus(x) | Zumpus(x)))", "all x.(Rex(x) -> (Tumpus(x) | Wampus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1560", "nl": "Everything that is a numpus, a lorpus, or a brimpus is a gorpus.", "fol": "all x. ((numpus(x) | lorpus(x) | brimpus(x)) -> gorpus(x))", "prediction": ["all x.((Numpus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Lopus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Numpus(x) | Loomis(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Number(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Numbpus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((EstablishedAt(x) & (Numpus(x) | Lorpus(x) | Brimpus(x))) -> Gorpus(x))", "all x.((Nompus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Lorpus(x) | Britpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))", "all x.((Nompus(x) | Lorpus(x) | Brimpus(x)) -> Gorpus(x))"]}
{"id": "prontoqa_train_1561", "nl": "Max is a tumpus, a lorpus, and a lempus.", "fol": "(tumpus(Max) & lorpus(Max) & lempus(Max))", "prediction": ["(Tumpus(Max) | Lorpus(Max) | Lempus(Max))", "all x.(Max(x) -> (Tumpus(x) | Wormpus(x) | Lempus(x)))", "all x.(Max(x) -> (Tumpus(x) & Lorpus(x) & Lempus(x)))", "all x.(Max(x) -> (Tumpus(x) | Lorpus(x) | Lempus(x)))", "all x.(Max(x) -> (Tumpus(x) | Legendary(x) | Rampus(x) | Lempus(x)))", "(all x.(Max(x) -> Totum(x)) & (Lorpus(x) & Lempus(x)))", "(Max) -> (Tumpus(Max) | Lorpus(Max) | Lempus(Max)))", "(Tumpus(Max) & Lordpus(Max) & Lempus(Max))", "(all x.(Max(x) -> Tompus(x)) & (Lorpus(x) & Lempus(x)))", "all x.(Max(x) -> (Tumpus(x) & Loupus(x) & Lempus(x)))", "(all x.(Max(x) -> Tumpus(x)) & (Max(x) -> Lorpus(x)) & (Max(x) -> Lempus(x)))", "all x.(Max(x) -> (Tumpus(x) & Lorpus(x) & Lempus(x)))", "(all x.(Max(x) -> Tumpus(x)) & all y.(Lorpus(y) & -Tumpus(y))) & all z.(Max(z) -> Lempus(z)))", "(all x.(Max(x) -> Tumpus(x)) & (Lorpus(x) | Lempus(x)))", "(Tumpus(Max) | Llorpus(Max) | Lempus(Max))", "all x.(Max(x) -> (Tumpus(x) | Lorpus(x) | Lempus(x)))"]}
{"id": "prontoqa_train_1562", "nl": "Each gorpus is a sterpus, a zumpus, and a lempus.", "fol": "all x. (gorpus(x) -> (sterpus(x) & zumpus(x) & lempus(x)))", "prediction": ["all x.(Gorpus(x) -> (Strotos(x) & Zumpus(x) & Lempus(x)))", "all x.(Gorpus(x) -> (Atmosphere(x) & Sterpus(x) & Atmosphere(x) & Atmosphere(x) & Atmosphere(x) & Atmosphere(x) & Atmosphere(x) & Atmosphere(x)))", "all x.(Gorpus(x) & (Sterpus(x) | Zumpus(x) | Lempus(x)))", "all x.(Gorpus(x) -> (Sterpus(x) & Zumpus(x) & Lempus(x)))", "all x.(Gorpus(x) -> ((Sterpus(x) & Zumpus(x)) & Lempus(x)))", "all x.(Gorpus(x) -> (Sterpus(x) | Zumpus(x) | Lempus(x)))", "all x.(Gorpus(x) -> (Sterpus(x) & Zumpus(x) & Lempus(x)))", "exists x.(Gorpus(x) & ((Sterpus(x) & Tosspus(x)) | (Tosspus(x) & Lempus(x)))))", "all x.(Gorpus(x) -> (Sterpus(x) & Zumpus(x) & Lempus(x)))", "all x.(Gorpus(x) -> (Sterpus(x) & Zumpus(x) & Lempus(x)))", "exists x.(Gorpus(x) & Sterpus(x) & Tozlus(x) & Lempus(x))", "all x.(Gorpus(x) -> (Sterpus(x) | Zumpus(x) | Lempus(x)))", "all x.(Gorpus(x) -> (Sterpus(x) | Zumpus(x) | Lempus(x)))", "all x.(Gorpus(x) -> (Sterepus(x) | Zumpus(x) | Lampus(x)))", "all x.(Gorpus(x) -> (Sterepus(x) | Zumpus(x) | Mpus(x)))", "all x.(Gorpus(x) -> (Strohpus(x) | Zumpus(x) | Lempus(x)))"]}
{"id": "prontoqa_train_1563", "nl": "Fae is a zumpus, a yumpus, or a tumpus.", "fol": "(zumpus(Fae) | yumpus(Fae) | tumpus(Fae))", "prediction": ["all x.(Fae(x) -> (Tompus(x) | Yumpus(x) | Tumpus(x)))", "all x.(Fae(x) -> (zumpus(x) | yumpus(x) | Tumpus(x)))", "all x.(Fae(x) -> (Tompus(x) | Yumpus(x) | Tumpus(x)))", "all x.(Fae(x) -> (Tompus(x) | Yumpus(x) | Tumpus(x)))", "all x.(Fae(x) -> (Tompus(x) | Yumpus(x) | Tumpus(x)))", "all x.(Fae(x) -> (Tommus(x) | Yumpus(x) | Tumpus(x)))", "all x.(Fae(x) -> (Tompus(x) | Yampus(x) | Tumpus(x)))", "all x.(Fae(x) -> (Tompus(x) | Yuppus(x) | Tumpus(x)))", "all x.(Fae(x) -> ((Tompus(x) | Yumpus(x) | Tumpus(x))))", "all x.(Fae(x) -> (Tompus(x) | Yampus(x) | Tumpus(x)))", "(VeryUnderstanding(Fae) | Seeking(Fae)))", "all x.(Fae(x) -> (Zumpus(x) | Yumpus(x) | Tumpus(x)))", "all x.(Fae(x) -> (Tompus(x) | Yumpus(x) | Tumpus(x)))", "all x.(Fae(x) -> (Zumpus(x) | Yumpus(x) | Tumpus(x)))", "all x.(Fae(x) -> (Tompus(x) | Yumpus(x) | Tumpus(x)))", "all x y.((Fae(x) & Zumpus(y)) | Yumpus(y) | Tumpus(y))"]}
{"id": "prontoqa_train_1564", "nl": "Every lempus is a yumpus and a jompus and a shumpus.", "fol": "all x. (lempus(x) -> (yumpus(x) & jompus(x) & shumpus(x)))", "prediction": ["all x.(Lempus(x) -> (Yumpus(x) & Jompus(x) & Shampus(x)))", "all x.(Lempus(x) -> (Yumpus(x) & Jompus(x) & Scumpus(x)))", "all x.(Lempus(x) -> (Yumpus(x) & Jompus(x) & Humpus(x)))", "all x.(Lempus(x) -> (Yumpus(x) & Jompus(x) & Humpus(x)))", "all x.(Lempus(x) -> (Yumpus(x) & Jompus(x) & Humpus(x)))", "all x.(Lempus(x) -> (yumpus(x) | Jompus(x) | Humpus(x)))", "all x.(Lempus(x) -> (Yumpus(x) & Jompus(x) & Humpus(x)))", "all x.(Lempus(x) -> (Yumpus(x) & Jompus(x) & Humpus(x)))", "all x.(Lempus(x) -> exists y.(Yumpus(y) & exists z.(Jompus(z) & -Yumpus(z))))", "all x.(Lempus(x) -> (Yumpus(x) & Jompus(x) & Humpus(x)))", "(all x.(Lempus(x) -> Toy(x,y)) & (Wompus(y) | Shumpus(y))))", "all x.(Lempus(x) -> (Yumpus(x) & Jompus(x) & Humpus(x)))", "all x.(Lempus(x) -> (Yumpus(x) & Jompus(x) & Humpus(x)))", "all x.(Lempus(x) -> (Yumpus(x) & Jompus(x) & Humpus(x)))", "all x.(Lempus(x) -> (Yumpus(x) | Jompus(x) | Shumpus(x)))", "all x.(Lempus(x) -> (Yumpus(x) & Jompus(x) & Humpus(x)))"]}
{"id": "prontoqa_train_1565", "nl": "Stella is not a shumpus and Stella is a yumpus and Stella is a grimpus.", "fol": "(-shumpus(Stella) & yumpus(Stella) & grimpus(Stella))", "prediction": ["(all x.(Shumpus(x) -> -Shumpus(x)) & all y.(Yumpus(y) -> Smogpus(y))) & all z.(Surple(z) -> (Surple(z)))))", "all x y z.((Stella(x) & Humpus(y) & Humpus(z)) -> (-Shumpus(x) | Grimpus(x)))", "(all x.(Shumpus(x) -> NOTShumpus(x)) & (Yumpus(x) -> Yumpus(x)) & (Slumpus(x) -> -Shumpus(x))))", "(all x.((Stilla(x) & NoShumpus(x)) -> NoYumpus(x)) & all y.((Stilla(y) & -Shumpus(y)) -> NoStilla(y)))", "(there\u2019s actually a shumpus(Stella) & -(Shumpus(Stella) & Yampus(Stella))) & exists a smokyStormpus(Stella))", "all x y z.((Stella(x) & Humpus(y) & Yempus(z)) -> (-Shumpus(x) | Grimpus(x)))", "(all x.(Shumpus(x) -> -Shumpus(x)) & all y.(Yumpus(y) -> Yumpus(y)) & all z.(Scrampus(z) -> Yumpus(z))))", "(all x.(Shumpus(x) -> -Shumpus(x)) & (Yumpus(x) -> Gruppus(x)))", "(NoShumpus(Stella) | (Yumpus(Stella) | Grimpus(Stella))))", "all x.(Stella(x) -> (-Shumpus(x) & -Yumpus(x) & -Grimpus(x)))", "(all x.(Shumpus(x) -> '-Shumpus(x)) & (Yumpus(y) | Grimpus(y))))", "all x y z.((Stella(x) & Humpus(y) & Yompus(z)) -> (-Shumpus(x) & Yumpus(y) & Gruppus(z)))", "all x y z.((Stella(x) & Sambushi(y) & Grimpus(z)) -> (-Shumpus(x) & -Yumpus(y) & -Sumpus(z) & -Smartpus(z)))", "all x y.((Stella(x) & -Shumpus(x)) & (Yumpus(y) | Grimpus(y))) -> -Shumpus(x))", "(all x.(Shumpus(x) | Yumpus(x)) & all y.(Sharppus(y))))", "all x y z.((Stella(x) & Sunflower(y) & Yumpus(z)) -> (-Shumpus(x) & -Shumpus(y) & -Smokey(z) & -Smokey(z)))"]}
{"id": "prontoqa_train_1566", "nl": "Vumpuses are grimpuses.", "fol": "all x. (vumpus(x) -> grimpus(x))", "prediction": ["all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grimpuse(x))", "all x.(Vumpuse(x) -> Grimpuse(x))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Scarppus(x))", "all x.(Vumpus(x) -> Grimpuse(y))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grimpuse(x))", "all x.(Vumpus(x) -> Grimpuse(x))", "all x.(Vumpus(x) -> Grimpuse(x))", "all x.(Vumpus(x) -> Grimpus(x))", "all x.(Vumpus(x) -> Grimpuse(x))", "all x.(Vumpuse(x) -> Grimpuse(x))", "all x.(Vumpus(x) -> Smarrowpus(x))", "all x y.((Vumpuse(x) & Grimpuse(y)) -> Names(x,y))"]}
{"id": "prontoqa_train_1567", "nl": "Alex is a brimpus, Alex is not a grimpus, and Alex is a numpus.", "fol": "(brimpus(Alex) & -grimpus(Alex) & numpus(Alex))", "prediction": ["(all x.(Alexa(x) -> Brimpus(x)) & (Alexa(x) -> -Grimpus(x)) & (Alexa(x) -> Nompus(x)))", "(all x.(Alexa(x) -> Brimpus(x)) & (Alexa(x) -> -Grimpus(x))) & (Alexa(x) -> Numpus(x)))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Numpus(x)))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Numpus(x)))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Numpus(x))))", "all x y.((Alex(x) & Brimpus(x)) -> (NoGrimpus(x) | Numpus(y)))", "all x.((Alex & Brimpus(x) & -Grimpus(x) & Numpus(x)) -> Brimpus(x))", "(all x.(Alex(x) -> Brimpus(x)) & all y.(Alex(y) -> -Grimpus(y)) & all z.(Alex(z) -> Numpus(z))))", "(all x y z.((Alex(x) & Brimpus(y)) -> (Brampus(x) | -Smoothpus(y)) & ((Alex(z) & Numpus(z))) -> (Nompus(z))))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Numpus(x))))", "all x y z.((Alex(x) & Brimpus(x) & -Grimpus(y) & Numpus(z)) -> (SameGrampus(x) & SameRoompus(x)))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Smokey(x)) & (Alex(x) -> Numpus(x))))", "(all x.(Alex(x) -> Brimpus(x)) & (Alex(x) -> -Grimpus(x)) & (Alex(x) -> Numpus(x))))", "all x.((Alex(x) & Brimpus(x)) -> (-Grimpus(x) & Numpus(x)))", "(all x.(Alex(x) -> Brimpus(x)) & all y.(Alex(y) -> -Grimpus(y))) & all z.(Alex(z) -> Numpus(z))))", "(all x.(Alex(x) -> Brimpus(x)) & all y.(Alex(y) -> -Grimpus(y))) & all z.(Alex(z) -> Numpus(z))))"]}
{"id": "prontoqa_train_1568", "nl": "Alex is not a vumpus, Alex is a zumpus, or Alex is a vumpus.", "fol": "(-vumpus(Alex) | zumpus(Alex) | vumpus(Alex))", "prediction": ["all x.(Alex(x) -> (-Vumpus(x) | Zumpus(x) | Vumpus(x)))", "all x.(Alex(x) -> (-Vumpus(x) | Zumpus(x) | Vumpus(x)))", "all x.(Alex(x) -> (-Vumpus(x) | Zumpus(x) | Vumpus(x)))", "all x.(Alex(x) -> (-Vumpus(x) | Zumpus(x) | Vacsumpus(x)))", "all x.(Alex(x) -> (-Vumpus(x) | Zumpus(x) | Vumpus(x)))", "all x.((Alex(x) & -Vumpus(x)) | (Alex(x) & Zumpus(x)) | (Alex(x) & Vumpus(x))))", "all x.(Alex(x) -> (-Vumpus(x) | Zumpus(x) | Vumpus(x)))", "exists x.(Alex(x) & (-Vumpus(x) | Zumpus(x) | -Vumpus(x)))", "(all x.(Alex(x) -> -Vumpus(x)) & ((Alex(x) & Zumpus(x)) | (Alex(x) & Vumpus(x)))))", "((Alex(Alex) & -Vumpus)) | (Alex(Alex) & Zumpus(Alex))))", "all x y.((Alex(x) & Vinpus(y)) | (Alex(x) & Zumpus(x)) | (Alex(x) & Vompus(x))))", "all x.(Alex(x) -> (-Vimpus(x) | Zumpus(x) | Vimpus(x)))", "(Vumpus(Alex) | Zumpus(Alex) | Vumpus(Alex)))", "all x y.((Alex(x) & (-Vumpus(x) | Zumpus(x) | Vumpus(y))) -> NOTVumpus(x))", "(all x.(Alex(x) -> -Vumpus(x)) & (Alex(x) -> Zumpus(x)) | (Alex(x) -> Visumpus(x))))", "(Example(Alex) & -Vumpus(Alex)) | Example(Alex) & Zumpus(Alex))"]}
{"id": "prontoqa_train_1569", "nl": "Yumpuses are rompuses.", "fol": "all x. (yumpus(x) -> rompus(x))", "prediction": ["all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yump(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rumpus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x y z.((Yumpuse(x) & Rupus(z)) -> Rhopus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompuse(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))", "all x.(Yumpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_1570", "nl": "Tumpuses are not rompuses.", "fol": "all x. (tumpus(x) -> -rompus(x))", "prediction": ["all x.(Tumper(x) -> -rompus(x))", "all x.(Tumpus(x) -> -Rompus(x))", "all x.(Tumpus(x) -> -Rompus(x))", "all x.(Tumpus(x) -> -Rompus(x))", "all x.(Tumpus(x) -> -Rompus(x))", "all x.(Tumpus(x) -> -Rompus(x))", "all x.(Tumpus(x) -> -Rompus(x))", "all x.(Tumpus(x) -> -rompus(x))", "all x.(Tumpus(x) -> -rompus(x))", "all x.(Tumpus(x) -> -Rompus(x))", "all x.(Tumulus(x) -> -rompus(x))", "all x.(Tummus(x) -> -Rompus(x))", "all x.(Tumpus(x) -> -Rompus(x))", "all x.(Tumus(x) -> -Rompus(x))", "all x.(Tumpus(x) -> -Rompus(x))", "all x.(Tumpus(x) -> -Rompuse(x))"]}
{"id": "prontoqa_train_1571", "nl": "Max is a jompus, Max is not a yumpus, or Max is an impus.", "fol": "(jompus(Max) | -yumpus(Max) | impus(Max))", "prediction": ["all x y.((Max(x) & Jompus(x)) | (-SameYumpus(x) | Ilio(y))))", "all x.(Mat Max(x) -> (Jompus(x) | -Yumpus(x) | Impossible(x)))", "(all x.(Max(x) -> Jompus(x)) & (-Max(x) -> Yumpus(x)) | (-Max(x) -> Impermissible(x))))", "(all x.(Max(x) -> Jompus(x)) | (-Max(x) & (-MaxJumpus(x)) |((Max(x) & Implicit(x)))))", "(all x.(Max(x) -> Jompus(x)) & (-Max(x) | -Yumpus(x))))", "all x.((Max(x) & Jompus(x)) | (-Yumpus(x)) | (-Jumpus(x) & Impossible(x))))", "all x.((Max(x) & Jompus(x)) | (-X.Yumpus(x)) | (-X.(Max(x) & Imperator(x)))))", "(all x.((Max(x) & Jompus(x)) | (-Max(x) & Yumpus(x)))) -> Impossible(x))", "exists x.(Max(x) & ((Jompus(x) & -Yumpus(x)) | Imperator(x))))", "(all x.(Max(x) -> Jompus(x)) | (-Yumpus(x) | Impossible(x))))", "all x.((Max(x) & Jompus(x)) | (-Yumpus(x) | Imperator(x))))", "all x.(Max(x) -> (Jompus(x) | -Yumpus(x) | IsDeposer(x)))", "(all x.(Max(x) -> Jompus(x)) & (-Max(x) -> Yumpus(x)) | (-Max(x) -> Impossible(x))))", "(all x.(Max(x) -> Jompus(x)) & (-(Max(x) & Yumpa(x))) | (-(Max(x) & Yumpa(x)))))", "exists x.(Jompus(x) | -Yumpus(x) | Imperempto(x)))", "all x.((Max(x) & Jompus(x)) -> (-Yumpus(x) | Impossible(x)))"]}
{"id": "prontoqa_train_1572", "nl": "Every jompus is not a lorpus.", "fol": "all x. (jompus(x) -> -lorpus(x))", "prediction": ["all x.(Jompus(x) -> -Lorpus(x))", "all x.(Jompus(x) -> -Lorph(x))", "all x.(Jompus(x) -> -Lorpus(x))", "all x.(Jompus(x) -> -Lorpus(x))", "all x.(Jimpus(x) -> -Lorpus(x))", "all x.(Jompus(x) -> -Lorpus(x))", "all x.(Jompus(x) -> -Lorpus(x))", "all x.(Jompus(x) -> -Lorpus(x))", "all x.(Jompus(x) -> -Lorpus(x))", "all x.(Jompus(x) -> -Lorpus(x))", "all x.(Jochpus(x) -> -Lorpus(x))", "all x.(Jompus(x) -> -Lorpus(x))", "all x.(Jomeshi(x) -> -Lorpus(x))", "all x.(Jompus(x) -> -Lorpus(x))", "all x.(Jompus(x) -> -Lorpus(x))", "all x.(Jompus(x) -> -Lorpus(x))"]}
{"id": "prontoqa_train_1573", "nl": "Lempuses are jompuses.", "fol": "all x. (lempus(x) -> jompus(x))", "prediction": ["all x.(Lempus(x) -> Jompuse(x))", "all x.(Lempuse(x) -> Jompuse(x))", "all x.(Lempuse(x) -> Jompuse(x))", "all x.(Lempuse(x) -> Jompuse(x))", "all x.(Moccasin(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompuse(x))", "all x.(Lempuse(x) -> Jompuse(x))", "all x.(Lempuse(x) -> Jompuse(x))", "all x.(Lempuse(x) -> Jompuse(x))", "all x.(Lempuse(x) -> Jompuse(x))", "all x.(Lempuse(x) -> Jompuse(x))", "all x.(Lempuse(x) -> Jompuse(x))", "all x.(Lempuse(x) -> Jompuse(x))", "all x.(Lempuse(x) -> Jompuse(x))", "all x.(Lempuse(x) -> Jombus(x))", "all x.(Lempuse(x) -> Jompuse(x))"]}
{"id": "prontoqa_train_1574", "nl": "Everything that is a rompus, a vumpus, or a wumpus is a lorpus.", "fol": "all x. ((rompus(x) | vumpus(x) | wumpus(x)) -> lorpus(x))", "prediction": ["all x.((Repox(x) | Vulmus(x) | Wumpus(x)) -> Lorpus(x))", "all x.((Rompus(x) | Vampire(x) | Wumpus(x)) -> Lorpus(x))", "all x.((Rompus(x) | Vumpus(x) | Wumpus(x)) -> Lorpus(x))", "all x.((Rompus(x) | Vulmpus(x) | Wumpus(x)) -> Lopser(x))", "all x.((Element(x) & (Rompus(x) | Vampus(x) | Wumpus(x))) -> Lorpus(x))", "all x.((Rompus(x) | Vampus(x) | Wumpus(x)) -> Lorpus(x))", "all x.((Rompus(x) | Venus(x) | Wumpus(x)) -> Lorde(x))", "all x.((Rompus(x) | Vumpus(x) | Wumpus(x)) -> Lorpus(x))", "all x.((Rompus(x) | Vumpus(x) | Wumpus(x)) -> Lorpus(x))", "all x.((Lorpus(x) & (Rompus(x) | Vampus(x) | Wumpus(x))) -> Locus(x))", "all x.((Rompus(x) | Vumpus(x) | Wumpus(x)) -> Lorpus(x))", "all x.((Rompus(x) | Vumpus(x) | Wumpus(x)) -> Loompus(x))", "all x.((Rompus(x) | Voompus(x) | Wompus(x)) -> Lorpus(x))", "all x.((Rompus(x) | Vumpus(x) | Wumpus(x)) -> Lorpus(x))", "all x.(((Rompus(x) | Vumpus(x) | Wumpus(x)) -> Lorpus(x))", "all x.((Rompus(x) | Vumpus(x) | Wumpus(x)) -> Lorpus(x))"]}
{"id": "prontoqa_train_1575", "nl": "Brimpuses are gorpuses and vumpuses and dumpuses.", "fol": "all x. (brimpus(x) -> (gorpus(x) & vumpus(x) & dumpus(x)))", "prediction": ["all x y.((Brimpus(x) & Vampus(y) & Dumpus(y)) -> (Gorpus(x) & Vampuse(y) & Dumpuse(y)))", "all x.(Brompus(x) -> (Gorpus(x) & Vampuse(x) & Dumpuse(x)))", "all x.(Brompus(x) -> (Gorpuse(x) & Vampuse(x) & Dumpuse(x)))", "all x.(Brimuse(x) -> (Gorpus(x) | Vampuse(x) | Dumpuse(x)))", "all x y.((Brompus(x) & Varpe(y)) -> (Gorpus(x) & Dumpuse(y)))", "all x y.((Brimpus(x) & Gorpus(y)) -> (Vampuse(x) | Dumpuse(x)))", "all x y z.((Brompus(x) & Gorpus(y) & Vuxuse(z)) -> (Vumpuse(z) | Dumpuse(z)))", "all x.(Bribuse(x) -> (Gorpus(x) & Vampuse(x) & Dumpuse(x)))", "all x y.((Brompus(x) & Gorpus(y)) -> (Vampuse(x,y) | Dumpuse(x,y)))", "all x.(Brimuse(x) -> (Gorpuse(x) | Vampuse(x) | Dumpuse(x)))", "all x.(Brompus(x) -> (Gorpus(x) & Vampuse(x) & Dumpuse(x)))", "all x.(Brimpus(x) -> (Gorpus(x) & Vumpuse(x) & Dumpuse(x)))", "all x.(Brimpus(x) -> (Gorpus(x) | Vampus(x) | Dumpuse(x)))", "(all x.(Brempus(x) -> Gorpuse(x)) & (Vampuse(x) | Dumpuse(x))))", "all x.(Brompus(x) -> (Gorpus(x) | Vampus(x) | Dumpuse(x)))", "all x.(Brumpus(x) -> (Gorpus(x) | Vupus(x) | Dumpuse(x)))"]}
{"id": "prontoqa_train_1576", "nl": "Stella is a rompus and Stella is not a dumpus and Stella is a tumpus.", "fol": "(rompus(Stella) & -dumpus(Stella) & tumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Dumpus(x)) & (Stella(x) -> Tumpus(x)))", "all x y.((Stella(x) & Rompus(x) & Stella(y) & -Dumpus(y)) -> Tumpus(x))", "all x y z.((Stella(x) & Roman(x) & Stella(y) & Dumpus(y)) -> (Resembling(x,y) & -Resembling(y,z) & Tumpus(z)))", "all x y.((Stella(x) & Rompus(x) & Stella(y)) -> (-Dumpus(y) & Totumpus(y)))", "(all x.(Rompus(x) -> Stella(x)) & (-Dumpus(x) -> Stella(x))) & (-Dumpus(x) -> Stella(x)))", "(all x y.(Rumpus(x) -> HasRompus(x)) & ((Dumpus(y) & -Struck(y)) | (Tumpus(y)))))", "(all x.(Muslim(x) -> Rompus(x)) & (Muslim(x) -> -Dumpus(x)) & (Muslim(x) -> Tumpus(x)))", "(all x.((Rome(x) & -Dumpus(x)) -> Rompus(x)) & ((Dumpus(x) & -Dumpus(x)) -> Tumpus(x)))", "all x y,z.((Rompus(x) & XLumus(y)) -> (Tumpus(z) & -Dumpus(y)))", "(all x.(Liptop(x) -> Rompus(x)) & (Stella(x) -> -Dumpus(x)) & (Liptop(x) -> Tumpus(x)))", "(all x.(Rompus(x) -> -Dumpus(x)) & (Tumpus(x) -> Rupus(x)))", "(all x.(Rompus(x) -> Stella(x)) & all y.(Dumus(y) -> Stella(z))))", "all x y.((Stella(x) & Rompus(x)) -> (-Dumps(x) & Pumpus(y)))", "all x.(Tumpus(x) -> (Rompus(x) & -Dumpus(x) & Tumpus(x)))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Dumpus(x)) & (Stella(x) -> Tumpus(x)))", "(all x y.((Rompus(x) & NoDumps(y)) -> (Rompus(x) & -Dumpus(y) & Tormpus(y)))"]}
{"id": "prontoqa_train_1577", "nl": "Polly is a numpus, Polly is not a vumpus, and Polly is a gorpus.", "fol": "(numpus(Polly) & -vumpus(Polly) & gorpus(Polly))", "prediction": ["(all x y.(Polly(x) -> Numpus(x)) & (Polly(y) -> -Vumpus(y)) & (Polly(y) -> Gorpus(y)))", "(all x.(Ploese(x) -> Numpus(x)) & (-Vimpus(x) & (Gorpus(x) | Vompus(x)))))", "(all x.(Polly(x) -> Numpus(x)) | (Polly(x) -> -Vimpus(x))) & (Polly(x) -> Gorpus(x)))", "(all x.(Pollly(x) -> Numpus(x)) & (Polly(x) -> -Vumpus(x)) & (Pollly(x) -> Gorpus(x)))", "(all x.(Polly(x) -> Numpus(x)) & (Polly(x) -> -Vumpus(x)) & (Polly(x) -> Gorpus(x))))", "(all x.(Polly(x) -> Numpus(x)) & (Polly(x) -> -Vumpus(x)) & (Polly(x) -> Gorpus(x)))", "(all x y z.((Polly(x) & Numpus(y) & Volmus(z)) -> -Vumpus(y)) & ((Polly(x) & Gorpus(x)) -> Gorpus(x)))", "all x y z.((Polly(x) & Numpus(y) & Vompus(z)) -> (-Vimpus(z) & Gorpus(x) & Numpus(x)))", "all x y z.((Polly(x) & Numpus(x) & Polly(y) & Vumpus(z)) -> (-Numpus(x) | Gorpus(y)))", "(all x.(Polly(x) -> Numpus(x)) & (Polly(x) -> -Vumpus(x))) & (Polly(x) -> Gorpus(x)))", "(all x y z.(Pally(x) -> Numpus(x)) & ((Pally(y) & -Vumpus(y))) | (Pally(z) & Gorpus(z)))))", "(all x y z.((Polary(x) & Number(y)) -> Nompus(x,y)) & ((Poly(z) & -Vumpus(z))) -> Gorpus(x)))", "(all x.(Polly(x) -> Numpus(x)) & exists y.(Vimpus(y) & -Umpus(y))) & exists z.(Polly(z) & Gorpus(z)))))", "(all x.(Nompus(x) -> Polly)) & all y.(Vumpus(y) -> Polly(y))) & all z.(Gorpus(z) -> Polly)))", "(all x.(Moth(x) -> Numpus(x)) & all y.(Moth(y) -> -Vumpus(y))) & all z.(Moth(z) -> Gorpus(z)))", "(all x.(Snamp(x) -> Numpus(x)) & all y.(Vumpus(y) -> Nompus(x))) & all z.(Snapper(z) -> Gorpus(z)))"]}
{"id": "prontoqa_train_1578", "nl": "Polly is a rompus or Polly is not a grimpus or Polly is a numpus.", "fol": "(rompus(Polly) | -grimpus(Polly) | numpus(Polly))", "prediction": ["all x.(Smokey(x) -> (Republica(x) | (-Smokey(x) | Noosa(x)))))", "(all x y.((Polly(x) & Rompus(x)) | (-Cruisses(y) & Polly(z)))))", "((Poly(poly) & Rimpus(poly)) | (-Grimpus(poly) | Numpus(poly))))", "all x y.((Poly(x) & Rimpus(x)) | (NoGrippus(y) | Numpus(y))))", "((Polly(Polly) & Rompus(Poly)) | (Polly(Poly) & -Grimpus(Poly)) | (Polly(Poly) & Numpus(Poly))))", "(exists x.(Polly(x) & Rompus(x)) | exists y.(Poly(y) & -Grimpus(y))) | exists z.(Polly(z) & Numpus(z))))", "(all x.(Protagonist(x) -> Rompus(x)) | (-Scrumptious(x) | Numpus(x))))", "((Polly(Polly) | Polly(Poly))) -> (Rompus(Polly) | -Grimpus(Poly)) & -numpus(Poly)))", "all x.((Polly(x) & (Rompus(x) | -Grimpus(x) | Nompus(x))) -> -Rompus(x))", "all x.((Polly(x) & (Rompus(x) | NoGrimpus(x) | Numpus(x))) -> Polly(x))", "(all x.(Palm(x) -> Rompus(x)) | (-Palmpus(x) | Numpus(x))))", "(all x.(Polly(x) -> Rompus(x)) | (-Smokey(x) | Nokey(x))))", "all x.(Pollly(x) -> ((Rompus(x) | -Grimpus(x) | Numpus(x))))", "all x.((Polly(x) & (Rompus(x) | -Grimpus(x) | Numpus(x))) -> Polly(x))", "(all x.(Polly(x) -> Rompus(x) | (-Grimpus(x) | Numpus(x))))", "((Ploe(Polly) & Roman(Polly)) | (-Grimps(Polly)) | (-Rompus(Polly) & Numpus(Poly))))"]}
{"id": "prontoqa_train_1579", "nl": "Everything that is a zumpus or a sterpus or an impus is a rompus.", "fol": "all x. ((zumpus(x) | sterpus(x) | impus(x)) -> rompus(x))", "prediction": ["all x.((Tompus(x) | Sterpus(x) | Impermissible(x)) -> Rompus(x))", "all x.((Tompus(x) | Sterpus(x) | IsImpossible(x)) -> Rompus(x))", "all x.((Sumpus(x) | Sterpus(x) | Ilias(x)) -> Romat(x))", "all x.((Tompus(x) | Sterpus(x) | IsImpact(x)) -> Rompus(x))", "all x.((Tompus(x) | Sterpus(x) | IsCruss(x))) -> Rompus(x))", "all x.((Tompus(x) | Sterpus(x) | Imperator(x)) -> Rompus(x))", "all x.(((Tompus(x) | Sterpus(x) | Impossible(x))) -> Rompus(x))", "all x.((Tompus(x) | Sterpus(x) | Impossible(x)) -> Rompus(x))", "all x.((Tompus(x) | Sterpus(x) | Institut(x)) -> Rompus(x))", "all x.(((Tompus(x) | Sterpus(x) | IsImposer(x)) & Has(x,tompus)) -> Rompus(x))", "all x.((Tompus(x) | Sterpus(x) | Impermissable(x)) -> Rompus(x))", "all x.((Tompus(x) | Sterpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Tompus(x) | Sterpus(x) | Impeccable(x))) -> Rompus(x))", "all x.((Tompus(x) | Sterpus(x) | Imperator(x)) -> Romax(x))", "all x.((Tompus(x) | Sterpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Tompus(x) | Sterpus(x) | Impirez(x)) -> Rompus(x))"]}
{"id": "prontoqa_train_1580", "nl": "Sam is a vumpus, an impus, and a dumpus.", "fol": "(vumpus(Sam) & impus(Sam) & dumpus(Sam))", "prediction": ["all x.(Sam(x) -> (Voompus(x) & Impossible(x) & Dumpus(x)))", "Sam (Vumpus) & Impermissible(Sam) & Dumpus(Sam))", "all x.(Sam(x) -> (Vumpus(x) & Issues(x) & Dumpus(x)))", "all x.(Sam(x) -> (Vumpus(x) & -Impossible(x) & Dumpus(x)))", "all x.(Sam(x) -> (Vimpus(x) & Impossible(x) & Dumpus(x)))", "all x.((Sam(x) & Vumpus(x)) & Isolated(x) & Dumpus(x)) -> Umbrella(x))", "all x.(Sam(x) -> (Vumpus(x) & Imperium(x) & Dumpus(x)))", "all x.(Sam(x) -> (Vumpus(x) & Issue(x) & Dumpus(x)))", "all x.(Sam(x) -> (Vimpus(x) & Ispres(x) & Dumpus(x)))", "(all x.(Sam(x) -> Vumpus(x)) & (Issue(x) | Dumpus(x)))", "(Vimpus(Sam) | Impectator(Sam) | Dumpus(Sam))", "all x.(Shadow(x) -> (Vimpus(x) | Imperva(x) | Dumpus(x)))", "((Sam) | Advice(am))) -> (Vampus(am) & Imperative(am) & Dumpus(am)))", "all x.(Sam(x) -> (Voompus(x) | Imperez(x) | Dumpus(x)))", "all x.(Sam(x) & Vumpus(x) & Imperator(x) & Dumpus(x))", "all x.(Sam(x) -> (Vumpus(x) & Impossible(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1581", "nl": "Everything that is a lorpus, an impus, or a brimpus is a jompus.", "fol": "all x. ((lorpus(x) | impus(x) | brimpus(x)) -> jompus(x))", "prediction": ["all x.((Lorpus(x) | Impossible(x) | Brimpus(x)) -> Jompus(x))", "all x.((Cardis(x) | Diez(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | Imperia(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | Imperator(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | Imperempt(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | IsImpact(x) | IsBrimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | Impermissable(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | Impermiss(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | AnImperfector(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | Impossible(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | Impossible(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | Imperator(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | Impossible(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | Imperempt(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | Impossible(x) | Brimpus(x)) -> Jompus(x))", "all x.((Lorpus(x) | Imperator(x) | Brimpus(x)) -> Jompus(x))"]}
{"id": "prontoqa_train_1582", "nl": "Fae is a lorpus and a grimpus and a sterpus.", "fol": "(lorpus(Fae) & grimpus(Fae) & sterpus(Fae))", "prediction": ["all x.(Fae(x) -> (Lorpus(x) & Grimpus(x) & Sterpus(x)))", "all x y z.((Fae(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) & Wormpus(x) & Sterpus(x)))", "all x.(Fae(x) -> (Lorpus(x) & Grimpus(x) & Sterpus(x)))", "all x.(Fae(x) -> (Lorph(x) & Grimpus(x) & Sterpus(x)))", "(all x.(Fae(x) -> Lorpus(x)) & (Grampus(x) -> Steroid(x)))", "all x.(Fae(x) -> (Lorpus(x) & Grimpus(x) & Sterpus(x)))", "all x.(Scenes(x) -> (Lorpus(x) & Grimpus(x) & Sterpus(x)))", "exists x.(Fae(x) & Throat(x) & Grimpus(x) & Sterpus(x))", "(Lorpus(Fae) & Grimpus(Fae) & Sterpus(Fae))", "all x.(Fale(x) -> (Lorph(x) & Grimpus(x) & Steerpus(x)))", "all x.(Fae(x) -> (Lorph(x) & Grimpus(x) & Sterpus(x)))", "all x y z.((Fae(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus4x,y) | Sterpus(x,z)))", "all x.(Fae(x) -> (Lorpus(x) & Grimpus(x) & Sterpus(x)))", "(Lorpus(Fae) | Grimpus(Fae) | Sterpus(Fae))", "(Lorpus(Fae) & Grimpus(Fae) & Sterpus(Fae))", "all x.(Fae(x) -> (Lorph(x) & Grimpus(x) & Sterpus(x)))"]}
{"id": "prontoqa_train_1583", "nl": "Everything that is an impus, a gorpus, or a lempus is not a jompus.", "fol": "all x. ((impus(x) | gorpus(x) | lempus(x)) -> -jompus(x))", "prediction": ["all x.((Impose(x) | Gorpus(x) | Lempus(x)) -> -Jompus(x))", "all x.((Impos(x) | Gorpus(x) | Lempus(x)) -> -Jompus(x))", "all x.((Island(x) | Gorpus(x) | Lempus(x)) -> -Jimpus(x))", "all x.((Isolated(x) | Gorpus(x) | Lempus(x)) -> -Jumpus(x))", "all x.((Impose(x) | Gorpus(x) | Lempus(x)) -> -Jompus(x))", "all x.((Impose(x) | Gorpus(x) | Lempus(x)) -> -Jompus(x))", "all x.((Impose(x) | Gorpus(x) | Lempus(x)) -> -Jompus(x))", "all x.((Is(x) | IsGorpus(x) | IsLempus(x)) -> -Jompus(x))", "all x.((Imposer(x) | Gorpus(x) | Lempus(x)) -> -Jumpus(x))", "all x.((Impose(x) | Gorpus(x) | Lempus(x)) -> -Jimpus(x))", "all x.((Improved(x) | Gorpus(x) | Lampus(x)) -> -Jompus(x))", "all x.((Impos(x) | Guerpus(x) | Lempus(x)) -> -Jompus(x))", "all x.((Impose(x) | Gorpus(x) | Lempus(x)) -> -Jompus(x))", "all x.((Impos(x) | Gorpus(x) | Lempus(x)) -> -Jompus(x))", "all x.((Issue(x) | IsGorpus(x) | IsLempus(x)) -> -Jompus(x))", "all x.((Impos(x) | Gorpus(x) | Lempus(x)) -> -Jompus(x))"]}
{"id": "prontoqa_train_1584", "nl": "Zumpuses are jompuses and rompuses and lorpuses.", "fol": "all x. (zumpus(x) -> (jompus(x) & rompus(x) & lorpus(x)))", "prediction": ["all x.(Zumpus(x) -> ((Jimpus(x) | Rompus(x)) | Lorpus(x)))", "(all x.(Zumpuse(x) -> Jompuse(x)) & (Rompus(x) | Lorpus(x)))", "all x.(Zumpus(x) -> (Jackuse(x) | Rompus(x) | Lorpuse(x)))", "all x.(Zumpus(x) -> (Jompus(x) | Rompus(x) | Lorpus(x)))", "all x.(Zumpus(x) -> (Jompus(x) & Rompus(x) & Lorpus(x)))", "all x.(Zumpus(x) -> (Jockuse(x) | Rompus(x) | Lorpus(x)))", "all x.(Zumpus(x) -> (Jombus(x) | Rompus(x) | Lorpuse(x)))", "(all x.(Joompus(x) -> (Jimpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Zapheno(x) -> (Mouse(x) | Rompus(x) | Lorpus(x)))", "all x.(Zumpus(x) -> (Jompuse(x) | Roumaid(x) | (Lorpuse(x) & -Jompuse(x))))", "all x.(Zumpus(x) -> (Jompuse(x) & Rompuse(x) & Lorpuse(x)))", "all x.(Zumpus(x) -> (Jampus(x) | Rompus(x) | Lorpus(x)))", "all x y.((Zumpuse(x) & Jompuse(y)) | (Rome(x) | Lorpus(x))))", "all x.(Zumpus(x) -> (Jumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Zumpus(x) -> (Jompuse(x) | Rompus(x) | Lorpuse(x)))", "all x.(Zumpus(x) -> (Jompuse(x) | Rompuse(x) | Lorpuse(x)))"]}
{"id": "prontoqa_train_1585", "nl": "Everything that is a lempus, a wumpus, or a zumpus is not a jompus.", "fol": "all x. ((lempus(x) | wumpus(x) | zumpus(x)) -> -jompus(x))", "prediction": ["all x.((Footnote(x) & (Lempus(x) | Wumpus(x) | Zumpus(x))) -> -Jompus(x))", "all x.((Lempus(x) | Wumpus(x) | Zumpus(x)) -> -Jimpus(x))", "all x.((Helempus(x) | Wumpus(x) | Zumpus(x)) -> -Jimpus(x))", "all x.((All & (Lempus(x) | Wumpus(x) | Zumpus(x))) -> -Jompus(x))", "all x.((Lempus(x) | Wumpus(x) | Zumpus(x)) -> -Jompus(x))", "all x.((Lempus(x) | Wumpus(x) | Zumpus(x)) -> -Jompus(x))", "all x y.((Lempus(x) | Wampus(x) | Zumpus(x)) -> -Jompus(y))", "all x.((Lempus(x) | Wumpus(x) | Zumpus(x)) -> -Jompus(x))", "all x.((Limpus(x) | Wumpus(x) | Zumpus(x)) -> -Jompus(x))", "all x.((Lempus(x) | Wumpus(x) | Zumpus(x)) -> -Jimpus(x))", "all x.((Lempus(x) | Wumpus(x) | Zumpus(x)) -> -Jimpus(x))", "all x.((Lempus(x) | Wumpus(x) | Zumpus(x)) -> -Jompus(x))", "all x.((Lempus(x) | Wumpus(x) | Zumpus(x)) -> -Jompus(x))", "all x.((Lempus(x) | Wumpus(x) | Zumpus(x)) -> -Jompus(x))", "all x.((Lempus(x) | Wumpus(x) | Zumpus(x)) -> -Jomes(x))", "all x.((EqualDomestic(x) & (Lempus(x) | Wumpus(x) | Zumpus(x))) -> -Jompus(x))"]}
{"id": "prontoqa_train_1586", "nl": "Everything that is a yumpus and a brimpus and a vumpus is a jompus.", "fol": "all x. ((yumpus(x) & brimpus(x) & vumpus(x)) -> jompus(x))", "prediction": ["all x.((Yumpus(x) & Brimpus(x) & Vuxus(x)) -> Jompus(x))", "all x.((Yumpus(x) & Brimpus(x) & Vumpus(x)) -> Jompus(x))", "all x.((Yumpus(x) & Brimpus(x) & Moose(x)) -> Jompus(x))", "all x y.((Yumpus(x) & Brimpus(y) & Moose(y)) -> Jompus(x))", "all x.((Yumpus(x) & Brimpus(x) & Vumpus(x)) -> Jompus(x))", "all x.((Yumpus(x) & Brimpus(x) & Vumpus(x)) -> Jompus(x))", "all x.((Yumpus(x) & Brimpus(x) & Muffus(x)) -> Jompus(x))", "all x.((Yumpus(x) & Brimpus(x) & Vumpus(x)) -> Jompus(x))", "all x.((Yumpus(x) & Brimpus(x) & Vumpus(x)) -> Jompus(x))", "all x.((Yumpus(x) & Brimpus(x) & Vumpus(x)) -> Jompus(x))", "all x.((Yumpus(x) | Brimpus(x) | Vumpus(x)) -> Jompus(x))", "all x.((Yumpus(x) & Brimpus(x) & Vumpus(x)) -> Jompus(x))", "all x.((Yumpus(x) & Brimpus(x) & Vumpus(x)) -> Jompus(x))", "all x.((Yumpus(x) & Brimpus(x) & Vumpus(x)) -> Jompus(x))", "all x.((Yumpus(x) & Brimpus(x) & Vempus(x)) -> Jompus(x))", "all x.(((Yumpus(x) & Brimpus(x) & Voompus(x)) -> Jompus(x))"]}
{"id": "prontoqa_train_1587", "nl": "Fae is not a grimpus, Fae is a yumpus, and Fae is a dumpus.", "fol": "(-grimpus(Fae) & yumpus(Fae) & dumpus(Fae))", "prediction": ["all x y z.((Fae(x) & Grimpus(y) & Yampus(z)) -> (-Fae(x) & Yampus(x) & Dumpus(x)))", "all x y z.((Fae(x) & Yimpus(y) & Dumpus(z)) -> (-Grimpus(x) & -Yumpus(y) & -Fae(z)))", "all x y z.((Fae(x) & Yimpus(y) & Dumpus(z)) -> (-Grimpus(x) | (Yubis(y) & Dumpus(z)))))", "(all x y z.(Fae(x) -> (Smudge(x) | Grimpus(x))) & (Fae(y) -> Pumpus(y)))", "all x y z w.((Fae(x) & Yompus(y) & Dumpus(z)) -> (-Grimpus(x) & -Yumpus(y) & -Dumpus(z)))", "(all x.(Fae(x) -> -Grimulus(x)) & all y.(Fae(y) -> Yumpus(y)) & all z.(Fae(z) -> Dumpus(z))))", "(all x.(Fae(x) -> -Grimpus(x)) & all y.(Fae(y) -> Yampus(y)) & all z.(Fae(z) -> Dumpus(z))))", "exists x y.(Fae(x) & Grinded(y) & Grimpus(x) & Yumpus(y) & Dumpus(z))", "(all x y z.((Fae(x) & Grimpus(y)) -> -Fae(x)) & ((Fae(x) & Yumpos(z)) -> Fae(x)) & ((Fae(x) & Dumpus(x)) -> Fae(x))))", "(all x.(Fae(x) -> -Grimpus(x)) & (Fae(x) -> Yumpus(x)) & (Fae(x) -> Dumpus(x)))", "(all x y z.((Fae(x) & Grumpus(y)) -> -Fae(x)) & ((Fae(z) & Yumppus(z))) -> Dumpus(z)))", "(same assimilations(fae,grimpus) | similarity(fae,yumpus) | similarity(fae,dumpus)))", "(all x y z.((Fae(x) & Grimpus(y)) -> -Fae(x)) & ((Fae(x) & Yumpus(z))) -> (Dumpus(x) & Fleur(x))))", "(all x.(Fae(x) -> -Grimpus(x)) & all y.(Fae(y) -> Yampus(y)) & all z.(Fae(z) -> Dumpus(z))))", "(all x y z.(Fae(x) -> -Grimp(x)) & ((Fae(y) & Humpus(z)) & Dumpus(w)))", "all x y z.((Fae(x) & Grumpy(y) & Yumpy(z)) -> (-GRuppa(x) & -Snailpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1588", "nl": "Fae is not a wumpus, Fae is a lorpus, or Fae is a shumpus.", "fol": "(-wumpus(Fae) | lorpus(Fae) | shumpus(Fae))", "prediction": ["all x y.((Fae(x) & (-Wumpus(x) | (Lorpus(y) | Humpus(y)))) -> -Wumpus(x))", "(exists x.(Wumpus(x) & -Wumpus(x)) | exists y.(Lorpus(y) & -Wumpus(y))) | exists z.(Shumpus(z) & Shumpus(z))))", "all x y z.((Fae(x) & Wumpus(y) & Lorpus(z)) -> (-Wumpus(x) | -Lorpus(x) | Humpus(x)))", "(-Wumpus(Fae) | (Lorpus(Fae) | Humpus(Fae))))", "all x y z.((Fae(x) & -Wumpus(x)) -> (Lorpus(y) | Shumpus(z)))", "((Wumpus(fae) | Lorpus(fae)) | Humpus(fae)))", "all x.(Fae(x) -> (-Wumpus(x) | (Lorpus(x) | Humpus(x)))))", "(All x.(Fae(x) -> -Wumpus(x)) | (Fae(x) -> Lorpus(x)) | (Fae(x) -> Shumps(x))))", "all x y.((Fae(x) & -Wumpus(x)) -> (Lorpus(x) | Shumpus(x)))", "(all x.(Fae(x) -> -Wumpus(x)) & ((Fae(x) & -Wumpus(x)) | (-Fae(x) & Lorpus(x)) | (-Fae(x) & Shumpus(x)))))", "(all x.(Fae(x) -> -Wumpus(x)) | (Fae(x) -> Lorpus(x)) | (Fae(x) -> Shumpus(x))))", "exists x.(Fae(x) & (-Wumpus(x) | (Lorpus(x) | Humpus(x)))))", "(all x.(Fae(x) -> -Wumpus(x)) | (Lorpus(x) | Humpus(x))))", "all x y.((Fae(x) & -Wumpus(x)) | (-Wumpus(x) | Lorpus(x) | Shumpus(x))))", "(all x.(Fae(x) -> -Wumpus(x)) | (Lorpus(x) | Humpus(x))))", "(all x.(Fae(x) -> -Wumpus(x)) | (Lorpus(x) | Humpus(x))))"]}
{"id": "prontoqa_train_1589", "nl": "Every yumpus is not a sterpus.", "fol": "all x. (yumpus(x) -> -sterpus(x))", "prediction": ["all x.(Yumpus(x) -> -Strosch(x))", "all x.(Yumpus(x) -> -Sterpus(x))", "all x.(Yumpus(x) -> -Sterpus(x))", "all x.(Yumpus(x) -> -Sterpus(x))", "all x.(Yumpus(x) -> -Steeperpus(x))", "all x.(Yumpus(x) -> -Sterpus(x))", "all x.(Yumpus(x) -> -Sterpus(x))", "all x.(Yumpus(x) -> -Sterpus(x))", "all x.(Yumpus(x) -> -Sterpus(x))", "all x.(Yumpus(x) -> -Steerpus(x))", "all x.(Yumpus(x) -> -Sterpus(x))", "all x.(Yumpus(x) -> -Sterpus(x))", "all x.(Yumpus(x) -> -Steerpus(x))", "all x.(Yumpus(x) -> -Sterepus(x))", "all x.(Yumpus(x) -> -Sterpus(x))", "all x.(Yumpus(x) -> -Sterpus(x))"]}
{"id": "prontoqa_train_1590", "nl": "Every brimpus is a sterpus.", "fol": "all x. (brimpus(x) -> sterpus(x))", "prediction": ["all x.(Brumpus(x) -> Sterpus(x))", "all x.(Brimpus(x) -> Sterpus(x))", "all x.(Brimpus(x) -> Sterpus(x))", "all x.(Brimpus(x) -> Sterpus(x))", "all x.(Brimpus(x) -> Sterpus(x))", "all x.(Brumpus(x) -> Sterus(x))", "all x.(Brimpus(x) -> Sterpus(x))", "all x.(Brimpus(x) -> Steroid(x))", "all x.(Brimbas(x) -> Sterpus(x))", "all x.(Brumpus(x) -> Sterpus(x))", "all x.(Brimpus(x) -> Sterpus(x))", "all x.(Brimpus(x) -> Sterpus(x))", "all x.(Brimpus(x) -> Sterepus(x))", "all x.(Brimpus(x) -> Sterpus(x))", "all x.(Brumpus(x) -> Sterpus(x))", "all x.(Brimpus(x) -> Sterpus(x))"]}
{"id": "prontoqa_train_1591", "nl": "Sally is a shumpus, Sally is not a brimpus, or Sally is a vumpus.", "fol": "(shumpus(Sally) | -brimpus(Sally) | vumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Shumpus(x)) & (-(Sally(x) & Brimpus(x))) | (-Sally(x) & Vumpus(x)))))", "all x.(Sally(x) -> (shumpus(x) | -brimpus(x) | Vumpus(x)))", "(all x.(Sally(x) -> Humpus(x)) | (-Sally(x) & Brimpus(x))) | (-Sally(x) & Vumpus(x))))", "all x.(Sally(x) -> (Shumpus(x) | -Brimpus(x) | Vumpus(x)))", "exists x.(Sally(x) & (Shumpus(x) | -Brumpus(x) | Vumpus(x)))", "all x.((Sally(x) & Shumpus(x)) | (-Brimpus(x) | Vubis(x))))", "all x.(Sally(x) -> (Shumpus(x) | -Brompus(x) | -Vumpus(x)))", "(all x.(Sally(x) -> Humpus(x)) | (-Brimpus(x) | Umpus(x))))", "all x y.((Sally(x) & Shumpus(x)) | (-Shumpus(x) & Brimpus(y)) | (-Shumpus(x) & Vumpus(y))))", "all x.(Sally(x) -> (Shumpus(x) | -Brimpus(x) | Vumpus(x)))", "(all x.(Sally(x) -> Humpus(x)) | (-Brumpus(x) | Vumpus(x))))", "(all x.(Sally(x) -> Shumpus(x)) | (-Sally(x) & Brimpus(x))) | (-Sally(x) & Vulmus(x))))", "(all x.(Sally(x) -> Shumpus(x)) & (-(Sally(x) & Brimpus(x))) | (-Sally(x) & Vampus(x)))))", "all x.(Sally(x) -> (Shumpus(x) | -Brimpus(x) | Vumpus(x)))", "all x.((Sally(x) & Shumpus(x)) | (-Brimpus(x) | Vampis(x))))", "all x.(Salvia(x) -> (Symbol(x) | (-Brampus(x) | Vuxpus(x))))"]}
{"id": "prontoqa_train_1592", "nl": "Impuses are lorpuses, lempuses, and rompuses.", "fol": "all x. (impus(x) -> (lorpus(x) & lempus(x) & rompus(x)))", "prediction": ["all x.(Impuuse(x) -> (Lorpus(x) | Lempuse(x) | Rompus(x)))", "all x.(Impus(x) -> (Lorpuse(x) | Lempuse(x) | Rompuse(x)))", "all x.(Impus(x) -> (Lorpus(x) | Lempuse(x) | Rompus(x)))", "all x.(Impue(x) -> (Lorpus(x) | Lempuse(x) | Rompus(x)))", "all x.(Impus(x) -> (Lorpuse(x) | Lempuse(x) | Rompuse(x)))", "all x.(Impuse(x) -> (Lorpuses(x) | Lempuses(x) | Rompuses(x)))", "all x.(Impuse(x) -> (Lorpus(x) | Lempuse(x) | Rompus(x)))", "all x.(Impuse(x) -> (Lorpuse(x) | Lempuse(x) | Rompuse(x)))", "all x.(Impue(x) -> (Lorpuse(x) | Lempuse(x) | Rompuse(x)))", "all x.((Impuces(x) & (Lorpuse(x) | Lempuse(x) | Rompuse(x))) -> Impuse(x))", "all x.(Impuse(x) -> (Lorpus(x) | Lempuse(x) | Rompus(x)))", "(all x.(Impuse(x) -> (Lorpa(x) | Lempuse(x) | Rompuse(x))))", "all x.(Impuse(x) -> (Lorpus(x) | Lempuse(x) | Rompuse(x)))", "all x.(Impuse(x) -> (Lorpus(x) | Lempuse(x) | rompus(x)))", "all x.(Impuse(x) -> (Lorpus(x) | Lempuse(x) | Rompus(x)))", "all x.(Impus(x) -> (Lorpheus(x) | Lempuse(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1593", "nl": "Stella is a jompus, a dumpus, or a rompus.", "fol": "(jompus(Stella) | dumpus(Stella) | rompus(Stella))", "prediction": ["all x.(Stella(x) -> (Jompus(x) | Dumpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Jimpus(x) | Dumpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Jompus(x) | Dumpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Jompus(x) | Dumpus(x) | Rompus(x)))", "all x.(Stella(x) -> ((Jompus(x) | Dumpus(x) | Rompus(x))) & -(Jompus(x) | Dumpus(x))))", "all x.(Stella(x) -> (Jompus(x) | Dumpus(x) | Rompus(x)))", "all x.(Stella(x) -> ((Jompus(x) | Dumpus(x) | Rompus(x))))", "all x.(Stella(x) -> (Jocket(x) | Dumpus(x) | Rompus(x)))", "all x.((Stella(x) & (Jompus(x) | Dumpus(x) | Rompus(x))) -> HasStella(x))", "all x.(Stella(x) -> (Jompus(x) | Dumpus(x) | Rompus(x)))", "(Jumpus(Stella) | Dumpus(Stella) | Rompus(Stella))", "all x.(Stella(x) -> (Jompus(x) | Dumpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Jompus(x) | Dumpus(x) | Rompus(x)))", "all x.(Stella(x) -> (jompus(x) | dumpus(x) | rompus(x)))", "all x.(Stella(x) -> (Jompus(x) | Dumpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Rompus(x) | Jompus(x) | Dumpus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1594", "nl": "Each shumpus is a brimpus.", "fol": "all x. (shumpus(x) -> brimpus(x))", "prediction": ["all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))", "all x.(Shumpus(x) -> Brimpus(x))"]}
{"id": "prontoqa_train_1595", "nl": "Grimpuses are not brimpuses.", "fol": "all x. (grimpus(x) -> -brimpus(x))", "prediction": ["all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpuse(x) -> -Brahmus(x))", "all x.(Grimpus(x) -> -Brimis(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Gremble(x) -> -Brumpus(x))", "all x.(Grimmpus(x) -> -Brumpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpus(x) -> -Brampus(x))", "all x.(Grimpus(x) -> -Brimpus(x))", "all x.(Grimpuse(x) -> -Brimpus(x))"]}
{"id": "prontoqa_train_1596", "nl": "Rex is a vumpus, Rex is a lorpus, or Rex is not a shumpus.", "fol": "(vumpus(Rex) | lorpus(Rex) | -shumpus(Rex))", "prediction": ["all x.(Rex(x) -> (Vimpus(x) | Lorpus(x) | -Shumpus(x)))", "(all x.(Rex(x) -> Vumpus(x)) | (Rex(x) -> Lorpus(x)) | (-Shumpus(x))))", "(all x.(Rex(x) -> Vumpus(x)) | all y.(Rex(y) -> Lorpus(y))) | all z.(Rex(z) -> -Shumpus(z))))", "(all x.(Rex(x) -> Vumpus(x)) & (Rex(x) -> Lorpus(x)) | (Rex(x) -> -Shumpus(x))))", "all x.(Rex(x) -> (Vumpus(x) | Lorpus(x) | -Shumpus(x)))", "(all x.(Rex(x) -> Vumpus(x)) | (Rex(x) -> Lorpus(x)) | (Rex(x) -> -Shumpus(x))))", "all x.((Vumpus(x) | Lorpus(x)) | (-Shumpus(x))))", "(all x.(Rex(x) -> Vukpus(x)) | (Rex(x) -> Lorpus(x))) | (Rex(x) -> -Shumpus(x))))", "all x.((Rex(x) & Vampire(x) & Larpus(x)) | -Shumpus(x))", "all x.((Rex(x) & Vumpus(x)) | (Lorpus(x) | -Shumpus(x))))", "(all x.(Rex(x) -> Vumpus(x)) | (Lorpus(x) | -Shumpus(x))))", "(all x.(Rex(x) -> Vumpus(x)) & (Rex(x) -> Lorpus(x)) | (Rex(x) -> -Shumpus(x))))", "exists x.(Rex(x) & (Vumpus(x) | Lorpus(x) | -Shumpus(x)))", "(all x.(Rex(x) -> Vumpus(x)) & (Lorpus(x) | -Shumpus(x))))", "((Rex,Vumpus) | Rex(x,Lorpus)) | (Rex,Shumpus))))", "all x.(Vumpus(x) | Lorpus(x) | -Shumpus(x))"]}
{"id": "prontoqa_train_1597", "nl": "Yumpuses are dumpuses and numpuses and shumpuses.", "fol": "all x. (yumpus(x) -> (dumpus(x) & numpus(x) & shumpus(x)))", "prediction": ["(all x.(Yumpus(x) -> Dumpuse(x)) & ((Numpuse(x) & Shumpuse(x)) -> Humidus(x)))", "all x.(Yumpus(x) -> (Dupus(x) & Numpuse(x) & Humpus(x)))", "all x.(Umbus(x) -> (Dumpuse(x) & Numpuse(x) & Humpuse(x)))", "all x.(Yumpus(x) -> (Dumpuse(x) & Numpuse(x) & Humpuse(x)))", "all x.(Yumpus(x) -> (Dumuse(x) & Numpuse(x) & Humpus(x)))", "all x y z w.((Yumpuse(x) & Numpuse(y) & ShumpusEye(z)) -> (Dumpuse(x) | Numpuse(y) | Shumpuse(z)))", "all x y.((Yumpuse(x) & Pumpuse(y)) -> (AvailableTo(x,y) & ValidTo(x,z)))", "all x.(Yumpus(x) -> ((Dumbus(x) | Numpuse(x)) & Humpus(x)))", "all x y.((Yumpus(x) & Humpus(y)) -> (Dumpuse(x) | Numpuse(x) | Humpus(y)))", "all x.(Yumpus(x) -> (Dumpuse(x) | Numpuse(x) | Shumpus(x)))", "all x y z.((Yumpuse(x) & Numbus(y) & Humpuse(z)) -> (Dumuse(x) | Numpuse(y) | Humpus(z)))", "all x.(Yumpus(x) -> (Dumuse(x) & Numpuse(x) & Shumpus(x)))", "all x.(Yumpus(x) -> (Dumuse(x) | Numpuse(x) | Shumpuse(x)))", "all x.(Yumpus(x) -> (Dumuse(x) | Numpuse(x) | Humpuse(x)))", "all x.(Yumpus(x) -> (Dempuse(x) & Numpuse(x) & Shumpuse(x)))", "all x.(Yumpuse(x) -> (Dumpuse(x) & Numpuse(x) & Humpuse(x)))"]}
{"id": "prontoqa_train_1598", "nl": "Alex is a tumpus and Alex is a grimpus and Alex is not a dumpus.", "fol": "(tumpus(Alex) & grimpus(Alex) & -dumpus(Alex))", "prediction": ["all x y.((Alex(x) & Tumpus(x)) | (Alex(y) & Grimpus(y))))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> Grimpus(x)) & (Alex(x) -> -Dumpus(x))))", "all x y z.((Alex(x) & Tombus(y) & Grimpus(z)) -> (Tumpus(x) & Grimpus(x) & -Dumpus(x)))", "(all x.(Alex(x) -> Tumpus(x)) & (Stearus(x) -> Grimpus(x)) & (HasDumps(x) | HasDumpus(x))))", "all x y z.((Alex(x) & Tumpus(x) & Grappa(y) & Dumpus(z)) -> (Stampus(x) & Grappa(y) & -Dumpus(z)))", "all x y.((Alex(x) & Humpus(x)) -> (Egypt(x) & Grimpus(x)))", "exists x.(Alex(x) & Tompus(x) & Grimpus(x) & -Dumpus(x))", "(all x y z.(Alex(x) -> Tumpus(x)) & (Alex(y) -> Grinder(y)) & (Alex(z) -> -Dumpus(z)))", "(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> Grimpus(y)) & -Dumpus(y)))", "(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> Grapple(y))) & all z.(Alex(z) -> -Dumpus(z)))", "all x y z.((Alex(x) & Tumpus(x) & Grimpus(y) & Dumpus(z)) -> (Tumpus(x) & Grimpus(y) & -Dumpus(z)))", "all x.(Alex(x) -> (Tumpus(x) & Grempus(x) & -Dumpus(x)))", "all x y.((Alex(x) & Tumpus(x) & Grimpus(y)) -> (Tumpus(x) & -Dumpus(x)))", "(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> Grimpus(y))) & all z.(Alex(z) -> -Dumus(z))))", "exists x.(Alex(x) & Tumpus(x) & Grimpus(x) & -Dupus(x))", "all x y.((Alex(x) & Tompus(y)) -> (Savage(y) & -Dumpus(x,y)))"]}
{"id": "prontoqa_train_1599", "nl": "Everything that is a grimpus, a yumpus, or a wumpus is a sterpus.", "fol": "all x. ((grimpus(x) | yumpus(x) | wumpus(x)) -> sterpus(x))", "prediction": ["all x.((Arpes(x) | Yumps(x) | Wumps(x)) -> Sterepus(x))", "all x.((Sterpus(x) & (Grimpus(x) | Yumpus(x) | Wumpus(x))) -> Stereoscopic(x))", "all x.((Element(x) & (Grimpus(x) | Yumpus(x) | Wumpus(x))) -> Sterpus(x))", "all x.((Strictus(x) & (Smootpus(x) | Yumpus(x) | Wumpus(x))) -> sterpus(x))", "all x.((Purpus(x) | Yumpus(x) | Wumpus(x)) -> Sterpus(x))", "all x.((Grimpus(x) | Yumpus(x) | Wumpus(x)) -> Sterpus(x))", "all x.((Murptu(x) | Yompus(x) | Wumpus(x)) -> Sterpus(x))", "all x.((Smoke(x) | Yumpus(x) | Wumpus(x)) -> Sterpus(x))", "all x.((Cramp(x) | Yumpus(x) | Wumpus(x)) -> Sterpus(x))", "all x.((Storpus(x) & (Grimpus(x) | Yumpus(x) | Wumpus(x))) -> Sterepus(x))", "all x.((Crupid(x) | Yumpy(x) | Wumpus(x)) -> Sterpus(x))", "all x.((Gruppus(x) | Yumpus(x) | Wumpus(x)) -> Sterpus(x))", "all x.((Pluto(x) | Yumpus(x) | Wumpus(x)) -> Sterpus(x))", "all x.((Strictus(x) & (Grosspus(x) | Yampus(x) | Wumpus(x))) -> Sterepus(x))", "all x.((Strictus(x) & (Smaller(x) | Yumpus(x) | Wumpus(x))) -> Sterpus(x))", "all x.((Other(x) & (Smoke(x) | Yumpus(x) | Wumpus(x))) -> Sterpus(x))"]}
{"id": "prontoqa_train_1600", "nl": "Max is not a sterpus, Max is a brimpus, and Max is a jompus.", "fol": "(-sterpus(Max) & brimpus(Max) & jompus(Max))", "prediction": ["(all x y z.((Max(x) & Sterebus(y) & Brimpus(z)) -> -Sterpus(x)) & ((Max(x) & Brimpus(x)) -> Jompus(x)))", "(all x.(Max(x) -> -Sterpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Jompus(x)))", "(all x.((Max(x) & -Steropod(x)) -> Brimpus(x)) & all y.((Max(y) & Jompus(y)) -> SuitableFor(y,x,7)))", "(exists x.(Max(x) & -Sterepus(x))) & exists y.(Brimpus(y) & -Jimpus(z))))", "(all x.(Max(x) -> -Storpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Jompus(z))))", "(all x.(Max(x) -> -Stepis(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Jompus(z))))", "all x y z.((Max(x) & Sterobos(y) & Brimpus(z)) -> (-Sterobos(x) | Jompus(x)))", "(all x.(Max(x) -> -Sterepus(x)) & exists y.(Brimpus(y) & -Jompus(y))))", "all x y z.((Max(x) & Sterpus(y) & Brimpus(z)) -> (-Sterepus(x) & (Brimpus(x) | Jompus(x))))", "(all x.(RefersToSterpus(x) -> -Meterpus(x)) & (RefersToBrimpus(x) -> RefersToJimpus(x)))", "all x.((Max(x) & -Sterepus(x)) -> (Brimpus(x) & Jompus(x)))", "all x y z.((Max(x) & Sterpus(y) & Brimpus(z)) -> (-(Sterpus(x) | Brimpus(y) | Jompus(z))))", "(all x y z.((Max(x) & Steerpus(y)) -> -Sterpus(x)) & ((Max(z) & Brimpus(z))) -> Jompus(z)))", "(all x y z.((Max(x) & Sterpus(y)) -> -Sterpus(x)) & ((Max(z) & Brimpus(z))) -> Jompus(z)))", "(all x y z.((Max(x) & Sterpus(y) & Brimpus(z)) -> -Sterepus(x)) & ((Max(x) & Birmpus(x)) -> Jompus(x)))", "all x y z.((Max(x) & Sterus(y) & Brimpus(z)) -> (-Sterus(x) & Brimpus(x) & Jompus(x)))"]}
{"id": "prontoqa_train_1601", "nl": "Impuses are grimpuses.", "fol": "all x. (impus(x) -> grimpus(x))", "prediction": ["all x.(IMPUSE(x) -> Grimpuse(x))", "all x.(Impuse(x) -> Grimpuse(x))", "all x.(Ibus(x) -> Grinchpuse(x))", "all x.(Impuse(x) -> Grimpuse(x))", "all x.(Impuses(x) -> Grimpuse(x))", "all x.(Impeduse(x) -> Grappa(x))", "all x.(Impuse(x) -> Scarpse(x))", "all x.(Impuse(x) -> Grimpuse(x))", "all x.(Impuse(x) -> Grimpuse(x))", "all x.(Impuse(x) -> Grimpuse(x))", "all x.(Impuse(x) -> Grimpuse(x))", "all x.(Impuse(x) -> Grimpuse(x))", "all x.(Impuse(x) -> Grimpuse(x))", "all x.(Impus(x) -> Grimpuse(x))", "all x.(Impuse(x) -> Grimpuse(x))", "all x.(Immuse(x) -> Grimpuse(x))"]}
{"id": "prontoqa_train_1602", "nl": "Shumpuses are not grimpuses.", "fol": "all x. (shumpus(x) -> -grimpus(x))", "prediction": ["all x.(Shupus(x) -> -Grimpuse(x))", "all x.(Shupuse(x) -> -Grimpus(x))", "-Shimpus(s)", "all x.(Shuppus(x) -> -Smoothpuse(x))", "(all x.(Shumpus(x) -> -Grimpuse(x)))", "all x.(Shumpus(x) -> -Grimpus(x))", "all x.(Shimpus(x) -> -Grimpus(x))", "all x.(Shurpe(x) -> -Smitty(x))", "all x.(Shampus(x) -> -Smoke(x))", "none exists x.(Shuppus(x) & -Grimpus(x))", "all x.(Shoupe(x) -> -Smoothpuse(x))", "all x.(Shumpus(x) -> -Grimpus(x))", "(all x.(Sshumpuse(x) -> -Grippuse(x)))", "all x.(Shupuse(x) -> -Grimpuse(x))", "all x.(Shuppers(x) -> -Grimpuse(x))", "all x.(Shimpus(x) -> -Grimpus(x))"]}
{"id": "prontoqa_train_1603", "nl": "Stella is a zumpus, Stella is not an impus, or Stella is a brimpus.", "fol": "(zumpus(Stella) | -impus(Stella) | brimpus(Stella))", "prediction": ["all x y.((Stella(x) & Zumpus(x) & Stella(y) & -Issue(y)) | (-Issue(y) | Brimpus(y))))", "(all x.(Stella(x) -> Zumpus(x)) & (-Stella(x) -> IsInflicted(x)) | (-Stella(x) -> Brimpus(x))))", "(all x.(Stella(x) -> Zumpus(x)) & all y.(Stella(y) -> -Impossible(y)) & all z.(Stella(z) -> Brimpus(z))))", "all x.((Stella(x) & Zumpus(x)) | NotImpossed(x) | Brimpus(x))", "all x.(Solva(x) -> (Tompus(x) | Stella(x) & -Impossible(x) | Brimpus(x)))", "(all x.(Stella(x) -> Zumpus(x)) & (Stella(x) | -Issues(x)) | (Stella(x) -> Britpus(x))))", "(all x.(Stella(x) -> Zumpus(x)) & (Stella(x) -> -Imposter(x)) | (Stella(x) -> Brimpus(x))))", "(all x.(Stella(x) -> Zumpus(x)) & (Stella(x) -> -Impossible(x)) | (Stella(x) -> Brimpus(x))))", "(all x.(Stella(x) -> Zumpus(x)) | (-Stella(x) | Brimpus(x))))", "(all x.(Stella(x) -> Zumpus(x)) | (-Stella(x) & IsImpossible(x)) | (-Stella(x) & Brimpus(x))))", "exists x.(Stella(x) & ((Zumpus(x) & -Issue(x)) | Brimpus(x))))", "exists x.(Stella(x) & ((Zumpus(x) & -Impossible(x)) | Brimpus(x))))", "all x.(Stella(x) -> (Tommus(x) | -Imposses(x) | Brimpus(x)))", "(5(Stella(Stella) & Zurpus(Stella)) | (-Stella(Stella) & Imperator(Stella))))", "all x y z.((Stella(x) & Zumpus(x) & Stella(y) & -Impossible(y)) -> (Stella(x) | Brimpus(x)))", "(all x.(Stella(x) -> Zumpus(x)) & all y.(Stella(y) -> -Impossible(y))) & all z.(Stella(z) -> Brimpus(z))))"]}
{"id": "prontoqa_train_1604", "nl": "Impuses are rompuses, yumpuses, and sterpuses.", "fol": "all x. (impus(x) -> (rompus(x) & yumpus(x) & sterpus(x)))", "prediction": ["all x.(Impuuse(x) -> (Rompus(x) | Yangpus(x) | Species(x)))", "all x.(Impuse(x) -> (Rompus(x) | Yumpus(x) | Sterpus(x)))", "all x.(Impuse(x) -> (rompus(x) | yumpus(x) | sterpus(x)))", "all x.(Implice(x) -> (Rompus(x) | Yampus(x) | Sterpus(x)))", "all x.(Impuse(x) -> (Rompus(x) | Yampus(x) | Sterus(x)))", "all x.(Impuse(x) -> (Rompus(x) | Yumpus(x) | Sterpus(x)))", "all x y z.((Impuse(x) & (Rompus(y) | Youngpus(y) | Sterpus(z))) -> (Impu-(x) | Immu-(y) | Immu-(z))))", "all x.(Impuse(x) -> (Rompus(x) | Yumus(x) | Sterpus(x)))", "all x.(Impuuse(x) -> (Rompuse(x) | Yumpuse(x) | Sterpuse(x)))", "all x.(Impuse(x) -> (Rompus(x) | Yampus(x) | Sterpus(x)))", "all x.(Impuse(x) -> (Rompus(x) | Yaumpus(x) | Sterpus(x)))", "all x.(Impuse(x) -> (Rompe(x) | Yumpe(x) | Sterpuse(x)))", "all x.(Impus(x) -> (Rompus(x) | Yumpus(x) | Sterectus(x)))", "all x.(Impuse(x) -> (Rompus(x) | Yubus(x) | Sterpus(x)))", "all x.(Impuse(x) -> (Rompuse(x) | Yampuse(x) | Sterpuse(x)))", "all x.(Impuse(x) -> (Rompus(x) | Yampus(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1605", "nl": "Fae is a rompus or a lempus or a vumpus.", "fol": "(rompus(Fae) | lempus(Fae) | vumpus(Fae))", "prediction": ["all x.(Fae(x) -> (Rompus(x) | Lempus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Rompus(x) | Lempus(x) | Vumpus(x)))", "all x.(Fae(x) -> ((Rompus(x) | Lempus(x) | Vumpus(x))))", "all x.(Fae(x) -> ((Rompus(x) | Lempus(x) | Vumpus(x))))", "all x.(Fae(x) -> ((Rompus(x) | Lempus(x) | Vumpus(x))))", "all x.(Fae(x) -> (Rompus(x) | Lempus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Rompus(x) | Lempus(x) | Vumpus(x)))", "all x.(Fae(x) -> (HasRompus(x) | HasLempus(x) | HasVumpus(x)))", "all x.(Fae(x) -> (Rompus(x) | Lempus(x) | Vumpus(x)))", "all x.(Fae(x) -> ((Rompus(x) | Lempus(x) | Vunpus(x))))", "(Rompus) | Lempus(x) | Vumpus(x))", "all x.(Fae(x) -> (Rompus(x) | Lempus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Rompus(x) | Lempus(x) | Vumpus(x)))", "all x.(Fae(x) -> ((Rompus(x) | Lempus(x) | Vumpus(x))))", "all x.(Fae(x) -> (Rompus(x) | Lempus(x) | Vumpus(x)))", "all x.(Fae(x) -> (Rompus(x) | Lempus(x) | Vampus(x)))"]}
{"id": "prontoqa_train_1606", "nl": "Every shumpus is not a dumpus.", "fol": "all x. (shumpus(x) -> -dumpus(x))", "prediction": ["all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))", "all x.(Shumpus(x) -> -Dumpus(x))"]}
{"id": "prontoqa_train_1607", "nl": "Stella is a numpus, Stella is not a numpus, or Stella is a sterpus.", "fol": "(numpus(Stella) | -numpus(Stella) | sterpus(Stella))", "prediction": ["(all x.(Stella(x) -> Numpus(x)) | (-Numpus(x) | Sterpus(x))))", "(all x.(Stella(x) -> Numpus(x)) | (-Numpus(x) | Sterpus(x))))", "all x y.((Stella(x) & (Numpus(x) | -Numpus(x)) | (Sterepus(y)))))", "all x.((Stella(x) & Numpus(x)) | (-Numpus(x) | Sterpus(x))))", "(all x.(Stella(x) -> Numpus(x)) & (-Numpus(x) | Sterepus(x))))", "all x y z.((Stella(x) & Numpus(y) & (A-Numpus(y) | Sterpus(z))) -> (Nompus(x) | -Numpus(z) | Sterpus(z))))", "all x.((Stella(x) -> (Number(x) | -Number(x) | Sterpus(x)))", "all x.((Tasty(x) & Numpus(x)) | (-Numpus(x) | Sterpus(x))))", "(all x.((Stella(x) & Numerus(x)) | -Numerus(x) | Sterpus(x)))", "all x y.((Stella(x) & Numpus(y)) | (-Numpus(y) | Sterpus(x))))", "all x.((Stella(x) & Numpus(x)) | (-Numpus(x) | Sterpus(x))))", "all x.((Stella(x) & Numpus(x)) | (-Numpus(x)) | (-Numpus(x) | Sterpus(x))))", "(all x.(Stella(x) -> (Numpus(x) | -Numpus(x) | Sterpus(x))))", "(all x.(Stella(x) -> Numpus(x)) & (-Numpus(x) | Sterepus(x))))", "all x.((Stella(x) & -Stella(x)) | (-Stella(x) | Sterpus(x))))", "all x.((Stella(x) & Numpus(x)) | (-Numpus(x) | Sterpus(x))))"]}
{"id": "prontoqa_train_1608", "nl": "Every dumpus is a lempus, a jompus, and a rompus.", "fol": "all x. (dumpus(x) -> (lempus(x) & jompus(x) & rompus(x)))", "prediction": ["all x.(Dumpus(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Dumpus(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "(all x.(Dumpus(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "(all x.(Dumpus(x) -> Lempus(x)) & all y.(Jompus(y) & all z.(Rompus(z))) -> Dumpus(x)))", "(all x.(Dumpus(x) -> Lempus(x)) & (Jompus(x) | Rompus(x)))", "all x.(Dumpus(x) -> (Lempus(x) & Jompus(x) & Rompus(x)))", "(all x.(Dumpus(x) -> Lempus(x)) & all y.(Jompus(y) & -Rompus(y))) -> Dumpus(x))", "all x.(Dumps(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Dumpus(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "(all x.(Dumpus(x) -> Lempus(x)) & all y.(Jompus(y) & all z.(Rompus(z)) -> Dumpus(x)))", "all x.(Dumpus(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Dupus(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Dumpus(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Dupus(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Dumpus(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Dumpus(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1609", "nl": "Stella is a dumpus.", "fol": "dumpus(Stella)", "prediction": ["Stella is a dumpus.", "all x.(Stella(x) -> Puss(x))", "Stella is a Dumus.", "Stella is a Dumpus(Stella)", "Stella is a dumpus.", "Stella is a Dumpus.", "(Dumpus(Stella))", "(Dumuse(Stella) & Dog(Stella))", "Stella is a Dumpus(Stella)", "all x.(Stella(x) -> Dumpus(x))", "Stella is a Dumpus.", "Stella ist ein Dumpus(s).", "Stella is a dumpus.", "Stella is Dumpus(s)", "Stella is a dumpus(sh.)", "Stella is a Dumpus."]}
{"id": "prontoqa_train_1610", "nl": "Stella is a lorpus or a rompus or a zumpus.", "fol": "(lorpus(Stella) | rompus(Stella) | zumpus(Stella))", "prediction": ["all x.(Stella(x) -> (Lorpus(x) | Rompus(x) | Zumpus(x)))", "all x.(Stella(x) -> (Lorpus(x) | Rompus(x) | Zumpus(x)))", "exists x.(Stella(x) & (Lorpus(x) | Romanpus(x) | Zumpus(x)))", "all x.((Lorpus(x) | Rompus(x) | Zumpus(x)) -> Stella(x))", "all x.(Stella(x) -> ((Lorpus(x) | Rompus(x) | Zumpus(x))))", "all x.(Stella(x) -> (Lorpus(x) | Rompus(x) | Zumpus(x)))", "all x.(Stella(x) -> (Lorpus(x) | Rompus(x) | Zumpus(x)))", "exists x.(Stella(x) & (Lorpus(x) | Rompus(x) | Zumpus(x)))", "all x.(Stella(x) -> (Lorpus(x) | Rompus(x) | Zumpus(x)))", "all x.(Stella(x) -> (Lorpus(x) | Rompus(x) | Zumpus(x)))", "all x.(Stella(x) -> (Lorpus(x) | Rompus(x) | Zumpus(x)))", "exists x.(Lorpus(x) | Rompus(x) | Zumpus(x))", "all x.(Stella(x) -> (Larpus(x) | Rompus(x) | Zumpus(x)))", "all x.(Stella(x) -> (Lorpus(x) | Rompus(x) | Zumpus(x)))", "Stella (Lorpus(Silenta) | Rompus(Silenta) | Zumpus(Silenta)))", "all x.(Stella(x) -> (Lorpus(x) | Rompus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1611", "nl": "Everything that is a dumpus or a sterpus or a lempus is a wumpus and a yumpus and a vumpus.", "fol": "all x. ((dumpus(x) | sterpus(x) | lempus(x)) -> (wumpus(x) & yumpus(x) & vumpus(x)))", "prediction": ["all x.((Dumpsus(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yumpus(x) & Vumpus(x)))", "all x.((Dumpus(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yampus(x) & Vumpus(x)))", "all x.((Dumpus(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yumpus(x) & Vumpus(x)))", "all x.((Dumpus(x) | Senserpus(x) | Lempus(x)) -> (Wumpus(x) | Yampus(x) | Vumpus(x)))", "all x.((Dumpus(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yampus(x) & Vumpus(x)))", "all x.((Dumpus(x) | Sterus(x) | Lempus(x)) -> (Wumpus(x) & Yumpus(x) & Vumpus(x)))", "all x.((Double(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yampus(x) & Vumpus(x)))", "all x.(DumpsusOrSterpusOrLempus(x) -> (Wumpus(x) & Yampus(x) & Vumpus(x)))", "all x.((Dumpus(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yumpus(x) & Vampus(x)))", "all x.((Dumpus(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yampus(x) & Vumpus(x)))", "all x.(((Dumpus(x) | Sterpus(x) | Lempus(x))) -> (Wumpus(x) & Yampus(x) & Vumpus(x)))", "all x.((Dumpus(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yampus(x) & Vumpus(x)))", "all x.((Dupus(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yampus(x) & Vumpus(x)))", "all x y.((Dumpus(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) | Yumpus(y) | Pumpus(y)))", "all x.((Dumpus(x) | Sterpus(x) | Lempus(x)) -> (Wumpus(x) & Yumpus(x) & Vuumpus(x)))", "all x.(((Dumpus(x) | Sterpus(x) | Lempus(x))) -> (Wumpus(x) & Yumpus(x) & Vumpus(x)))"]}
{"id": "prontoqa_train_1612", "nl": "Sterpuses are shumpuses and lempuses and rompuses.", "fol": "all x. (sterpus(x) -> (shumpus(x) & lempus(x) & rompus(x)))", "prediction": ["all x.(Sterpuse(x) -> (Shumpuse(x) | Lempuse(x) | Rompuse(x)))", "all x.(Sterpuse(x) -> (Shumpus(x) | Lempuse(x) | Rompus(x)))", "all x y.((Sterpuse(x) & Shumpus(y)) -> (Lempuse(x,y) & Rompus(x,y)))", "all x.(Sterpus(x) -> (Shumpus(x) | Lempuse(x) | Rompus(x)))", "all x.(Sterpuse(x) -> (Shumpus(x) | Lempuse(x) | Rompus(x)))", "all x.(Sterpuse(x) -> (Shumpus(x) | Lempuse(x) | Rompus(x)))", "all x.(Sterpus(x) -> (Shumpus(x) | Lempuse(x) | Rompus(x)))", "all x.((Sterpuse(x) & (Shumpus(x) | Lempuse(x) | Rompus(x))) -> Sterpuse(x))", "all x.(Sterpuse(x) -> (Shumpus(x) & Lempuse(x) & Rompus(x)))", "all x.(Sterpus(x) -> (Shumpuse(x) | Lempuse(x) | Rompus(x)))", "all x.(Esterpus(x) -> exists y.(Shumpus(y) | Lempuse(y) | Rompus(y)))", "all x.(Sterpuse(x) -> (Shumpus(x) | Lempuse(x) | Rompus(x)))", "(all x.(Sterpuse(x) -> Shumpus(x)) | (Lempuse(x) & Rompus(x))))", "all x.(Stumpus(x) -> (Shumpuse(x) | Lempuse(x) | Rompuse(x)))", "all x.(Sterpuse(x) -> (Shumpuse(x) | Lempuse(x) | Rompuse(x)))", "all x.(Sterpuse(x) -> (Shumpus(x) & Lempuse(x) & Rompus(x)))"]}
{"id": "prontoqa_train_1613", "nl": "Alex is a grimpus or a yumpus or a lempus.", "fol": "(grimpus(Alex) | yumpus(Alex) | lempus(Alex))", "prediction": ["all x.(Alex(x) -> (Grimpus(x) | Yampus(x) | Lempus(x)))", "all x.(Alex(x) -> (Grimpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Grimpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Grimpus(x) | Yompus(x) | Lempus(x)))", "all x.(Alex(x) -> (Grimpus(x) | Yumpus(x) | Lempus(x)))", "Alex is a Grimpus or a YumpusOrLempus.", "all x.(Alex(x) -> (Frostpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Grimpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Grimpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Grimpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Grimpus(x) | Yompus(x) | Lempus(x)))", "(all x.(Alex(x) -> Grimpus(x)) | (Yumpus(x) | Lampus(x))))", "(all x.(Alex(x) -> Grimpus(x) | (Yumpus(x) | Lempus(x))))", "all x.(Alex(x) -> (Grimpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Grimpus(x) | Yugpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Smaller(x) | Yompus(x) | Lampus(x)))"]}
{"id": "prontoqa_train_1614", "nl": "Everything that is a rompus, a tumpus, and a gorpus is an impus.", "fol": "all x. ((rompus(x) & tumpus(x) & gorpus(x)) -> impus(x))", "prediction": ["all x.((Rompus(x) & Tumulus(x) & Gorpus(x)) -> IsExert(x))", "all x.((Rompus(x) | Tumpus(x) | Gorpus(x)) -> Implicated(x))", "all x.((Rompus(x) | Tumpus(x) | Gorpus(x)) -> Is(x))", "all x.((Rompus(x) | Tumpus(x) | Gorpus(x)) -> Impossible(x))", "all x.((Rompus(x) | Tumpus(x) | Gorpus(x)) -> IsDesrigeused(x))", "all x.(((Rompus(x) | Tumpus(x) | Gorpus(x))) -> Implizement(x))", "all x.((Rompus(x) | Tumpus(x) | Gorpus(x)) -> Imperator(x))", "all x.((Rompus(x) | Tumpus(x) | Gorpus(x)) -> Impossible(x))", "all x.((Rompus(x) | Tumpus(x) | Gorpus(x)) -> Erzbeit(x))", "all x.((Rompus(x) & Tumpus(x) & Gorpus(x)) -> Implient(x))", "all x.((Rompus(x) | Tumpus(x) | Gorpus(x)) -> Imperative(x))", "all x.((Rompus(x) | Tumulus(x) | Gorpus(x)) -> impus(x))", "all x.((Rompus(x) | Tumpus(x) | Gorpus(x)) -> Implicit(x))", "all x.((Rompus(x) | Tumpus(x) | Gorpus(x)) -> Impervato(x))", "all x.((Rompus(x) | Tumpus(x) | Gorpus(x)) -> IsIsPub(x))", "all x.((Rompus(x) | Tumpus(x) | Gorpus(x)) -> Imperative(x))"]}
{"id": "prontoqa_train_1615", "nl": "Each sterpus is a zumpus.", "fol": "all x. (sterpus(x) -> zumpus(x))", "prediction": ["all x.(Sterpus(x) -> Zumpus(x))", "all x.(Steerpus(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Steeper(x) -> Zumpus(x))", "all x.(Steerpus(x) -> Zumpus(x))", "all x.(Steerpus(x) -> Zumpus(x))", "all x.(Steerpus(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "exists x.(Sternpus(x) & Zurpus(x))", "all x.(Sterpus(x) -> Zumpus(x))", "all x.(Steerpus(x) -> Zumpus(x))", "all x.(Steerpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_1616", "nl": "Sally is a wumpus, Sally is not a brimpus, and Sally is a tumpus.", "fol": "(wumpus(Sally) & -brimpus(Sally) & tumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Wumpus(x)) & (Sally(x) -> -Brimpus(x)) & (Sally(x) -> Tumpus(x)))", "(all x y.((Sally(x) & Wumpus(x)) -> Wumpus(x)) & ((Sally(y) & -Brimpus(y)) -> Tumpus(y)))", "(all x.(Sally(x) -> (Wumpus(x) | -Brimpus(x))) & all y.(Sally(y) -> Tumpus(y)))", "(all x.(Sally(x) -> Wumpus(x)) & (-(Sally(x) & Brimpus(x))) | (-Sally(x) & Tumpus(x)))))", "(all x.(Sally(x) -> Wampus(x)) & (-Brimpus(x) & (Tumpus(x) | Tumpus(x))))", "(all x.(Sally(x) -> Wumpus(x)) & (Sally(x) -> -Brimpus(x)) & (Sally(x) -> Tumpus(x)))", "all x y.((Sally(x) & Wumpus(x)) -> (-Brimpus(y) & Tumpus(x)))", "(all x.(Sally(x) -> Wumpus(x)) & (-Brimpus(x) & -Tumpus(x)))", "(all x.(Sally(x) -> Wumpus(x)) & (-Sally(x) -> Brimpus(x)) & (Sally(x) -> Tumpus(x)))", "(all x.(Sally(x) -> Wumpus(x)) & (Sally(x) -> -Brimpus(x)) & (Sally(x) -> Tumpus(x)))", "(all x y z.((Wumpus(x) & Sally(y) & Brimpus(z)) -> Wumpus(x)) & ((Brimpus(y) & Tumpus(y)) -> Wumpus(y)))", "(all x.(Wumpus(x) -> Sally)) & (Krimpus(x) -> -Sally)) & (Tumpus(x) -> Sally)))", "(all x.(Sally(x) -> Wumpus(x)) & (Sally(x) -> -Brimpus(x)) & (Sally(x) -> Tumpus(x))))", "(all x.(Sally(x) -> Wumpus(x)) & (Sally(x) -> -Brimpus(x)) & (Sally(x) -> Tumpus(x)))", "(all x.(Sally(x) -> Wumpus(x)) & (no-Brimpus(x)) & (tumpus(x))))", "(all x.(Sally(x) -> Wumpus(x)) & (Sally(x) -> -Brimpus(x)) & ((Sally(x) -> Tumpus(x))))"]}
{"id": "prontoqa_train_1617", "nl": "Sally is a sterpus, a lorpus, and a gorpus.", "fol": "(sterpus(Sally) & lorpus(Sally) & gorpus(Sally))", "prediction": ["all x.(Sally(x) -> ((Sterpus(x) | Lorpus(x)) & Gorpus(x)))", "(All x.(Sally(x) -> Sterpus(x)) | All y.(Lorpus(y) & All z.(Gorpus(z)))))", "(all x.(Sally(x) -> Steroid(x)) & (Lorpus(x) -> Gorpus(x)))", "exists x.(Sally(x) & Sterpus(x) & Lorpus(x) & Gorpus(x))", "(Sally(Sally) -> (Sterpus(Sterpus) & Lorpus(Sally) & Gorpus(Sally)))", "all x.(Sally(x) -> (Sterpus(x) & Lorpus(x) & Gorpus(x)))", "exists x.(Sally(x) & Sterpus(x) & Lorpus(x) & Gorpus(x))", "all x.(Sally(x) -> (Hexagon(x) | (Hexagon(x) & Sally(x)))))", "(all x.(Sally(x) -> Sterpus(x)) & (Lorpus(x) & Gorpus(x)))", "Sally (Oracle(Storpus) | Rooster(lorpus) | Gorpus(gorpus))", "(Sally isSterpus(Sally) & exists x.(Lordpus(Sally)) & exists y.(Gorpus(y) & -Ssterpus(y))))", "(all x.(Sally(x) -> Sterpus(x)) & (Lorpus(x) -> Gorpus(x)))", "all x.(Sally(x) -> (Between(x) & Rooster(x) & Between(x) & Between(x) & Between(x)))", "(Sally(Sally) & Strep(Sally)) & Storpus(Sally) & Lorpus(Sally) & Gorpus(Sally))", "all x.(Sally(x) -> (Sterpus(x) & Lorpus(x) & Gorpus(x)))", "all x.(Sally(x) -> (Sterpus(x) | Lorpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1618", "nl": "Sally is not a shumpus, Sally is an impus, and Sally is a zumpus.", "fol": "(-shumpus(Sally) & impus(Sally) & zumpus(Sally))", "prediction": ["all x y z.((Sally(x) & Shumpus(y) & Imperium(z)) -> (-Shumpus(x) & Imperium(x) & Zumpus(x)))", "(all x.(Sally(x) -> -Shumpus(x)) & (Impossible(x) | Zumpus(x))))", "(all x.(Sally(x) -> -Shumpus(x)) & (Established(x) -> Impossible(x)) | (Established(x) -> Zumpus(x))))", "(all x.(Sally(x) -> -Shumpus(x)) & (Impossible(x) | Zumpus(x))))", "(all x.(Sally(x) -> NoneShumpus(x)) & (Impossible(x) & Zumpus(x))))", "(all x.(Sally(x) -> -Shumpus(x)) & all y.(Improve(y)) -> Zumpus(y)))", "(all x.(Sally(x) -> -Shumpus(x)) & ((Sally(x) & Impossible(x)) | (Sally(x) & Zumpus(x))))", "all x y z.((Sally(x) & Simpus(y) & Is(z)) -> (-Shumpus(x), -IsImpossible(x) & -Zumpus(z)))", "(all x.(Sally(x) -> -Shumpus(x)) & all y.(Sally(y) -> Illegal(y))) & all z.(Sally(z) -> Zumpus(z))))", "(all x.(Sally(x) -> -Shumpus(x)) & all y.(Sally(y) -> Imperium(y)) & all z.(Sally(z) -> Zumpus(z))))", "all x y z.((Sally(x) & Lumpus(y) & Is(x,y)) -> (-Shumpus(x) & Is(x,z) & Zumpus(z)))", "(all x.(Sally(x) -> -Shumpus(x)) & all y.(Issue(y) -> Impossible(y)) & all z.(Zumpus(z) -> Zumpus(z)))", "(all x.(Sally(x) -> -Shumpus(x)) & all y.(Impossible(y) & Zumpus(y)))", "(all x.(Sally(x) -> -Shumpus(x)) & (Iliris(x) -> Zumpus(x)))", "(all x.(Sally(x) -> -Shumpus(x)) & (Sally(x) -> Issue(x)) & (Sally(x) -> Zumpus(x)))", "(all x.(Sally(x) -> -Shumpus(x)) & all y.(Sally(y) -> Issue(y)) & all z.(Sally(z) -> Zumpus(z)))"]}
{"id": "prontoqa_train_1619", "nl": "Fae is not a rompus, Fae is a zumpus, and Fae is a sterpus.", "fol": "(-rompus(Fae) & zumpus(Fae) & sterpus(Fae))", "prediction": ["((Fae(f) & -Rompus(f)) | (Fae(f) & Zumpus(f))) | (Fae(f) & -Sterepus(f))))", "existed x y z.(Fae(x) & ((Rompus(x) & Toxic(y) & Sterpus(z)) -> -Rompus(x)))", "(exists x.(Feae(x) & -rompus(x)) & exists y.(Feae(y) & Zumpus(y)) & exists z.(Feae(z) & Sterpus(z))))", "(all x.(Fae(x) -> -Rompus(x)) & all y.(Fae(y) -> Topsy(y))) & all z.(Fae(z) -> Sterpus(z)))", "(all x.(Fae(x) -> -Rompus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> Sterepus(x)))", "(all x.(Fae(x) -> -Rompus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> Sterpus(x)))", "(all x.(Fare(x) -> -Rompus(x)) & (Fare(x) -> Zumpus(x)) & (Fare(x) -> Sterpus(x)))", "(all x.(Fae(x) -> -Rompus(x)) & all y.(Fae(y) -> Zumpus(y)) & all z.(Fae(z) -> Sterpus(z))))", "all x y z.((Fae(x) & Zumpus(y) & Sterpus(z)) -> (-Rrompus(x) & Zumpus(y) & Sterpus(z)))", "all x y z.((Fae(x) & Zumpus(y) & Roompus(z)) -> (-Rompus(x) & -Tompus(x) & -Sterepus(x)))", "all x y z.((Fae(x) & Rhopus(y) & Zumpus(z)) -> (-Rompus(x) | Sterpus(x)))", "(all x.(Fae(x) -> -Rompus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> Sterpus(x)))", "(all x.(Fae(x) -> -Rompus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> Steerpus(x)))", "(all x.(Fae(x) -> -Rompus(x)) & all y.(Fae(y) -> Toshpus(y)) & all z.(Fae(z) -> Sterpus(z))))", "all x y.((Fae(x) & Zumpus(y)) -> (-Rompus(x) & -Sterpus(y)))", "all x y z.((Fae(x) & Tompus(y) & Sterpus(z)) -> (-Rompus(x) & Tompus(y) & Steroid(x)))"]}
{"id": "prontoqa_train_1620", "nl": "Fae is not a lempus or Fae is a brimpus or Fae is a rompus.", "fol": "(-lempus(Fae) | brimpus(Fae) | rompus(Fae))", "prediction": ["(exists x.(Fae(x) & -Lempus(x)) & exists y.(Fae(y) & Brimpus(y))) | exists z.(Fae(z) & Rompus(z))))", "(-Lempus(fae) | Brimpus(fae) | Rompus(fae)))", "((Fae isNotLempus(Fae) | FaeIsBrimpus(Fae))) | FaeIsRompus(Fae)))", "((Fae(f) & -Lempus(f)) | (Fae(f) & Brimpus(f)) | (Fae(f) & Rompus(f))))", "(Neempus(Fae) | Brimpus(Fae) | Rompus(Fae)))", "(all x.(Fae(x) -> -Lempus(x)) | (Fae(x) -> Brimpus(x)) | (Fae(x) -> Rompus(x))))", "all x.(Fae(x) -> (-Lempus(x) | (-Brompus(x) | -Brompus(x)))))", "all x y z.((Fae(x) & Lempus(y) & Brimpus(z)) | (Fae(x) & Rompus(x))))", "((Fae(f) & -Lempus(f)) | (-Fae(f) & -Brimpus(f) & -rompus(f))))", "(all x.(Fae(x) -> -Lempus(x)) | (Fae(x) -> Brimpus(x)) | (Fae(x) -> Rompus(x))))", "(exists x.(Fae(x) & -Lempus(x))) & exists y.(Brimpus(y) | Rompus(y))))", "all x.(Fae(x) -> (-Lempus(x) | BritishOf(x) | RompusOf(x)))", "(-Lempus(Fae) | Brimpus(Fae) | Rompus(Fae)))", "all x.((Fae(x) & -Limpus(x)) | (Fae(x) -> Brimpus(x)) | (Fae(x) -> Rompus(x))))", "all x y.((Fae(x) & -Lempus(x)) | (-Fae(x) & Brimpus(x)) | (-Fae(x) & Rompus(x))))", "all x.(Fae(x) -> (-Lempus(x) | (Brimpus(x) | Rompus(x))))"]}
{"id": "prontoqa_train_1621", "nl": "Everything that is a lorpus, a shumpus, or a numpus is a zumpus, a vumpus, and a grimpus.", "fol": "all x. ((lorpus(x) | shumpus(x) | numpus(x)) -> (zumpus(x) & vumpus(x) & grimpus(x)))", "prediction": ["all x.((Lorpus(x) | Humpus(x) | Numpus(x)) -> (Tompus(x) | V\u00fcmpus(x) | Grimpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Numpus(x)) -> (Tompus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Lorpus(x) | Shumpus(x) | Numpus(x)) -> (Tompus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Lorpus(x) | Shumpus(x) | Numpus(x)) -> (Toumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Numpus(x)) -> (Zimpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Larpus(x) | Humpus(x) | Numpus(x)) -> (Tompus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Lorpus(x) | Sempus(x) | Numpus(x)) -> (Toumpus(x) | Vuxpus(x) | Grimpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Numpus(x)) -> (Zumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Numpus(x)) -> (Tompus(x) & Uimpus(x) & Grimpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Numpus(x)) -> (Dashpus(x) & Vumpus(x) & Gruffpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Numpus(x)) -> (Sumpus(x) & V\u00fcmpus(x) & Grimpus(x)))", "all x.((Lorpus(x) | Shumpus(x) | Numpus(x)) -> (Tompus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Numpus(x)) -> (Zumpus(x) & Vumpus(x) & Grimpus(x)))", "all x y.((Person(x) & (Lorpus(x) | Humpus(x) | Numpus(x))) -> (Zumpus(y) | Vumpus(y) | Grimpus(y)))", "all x.((Lorpus(x) | Humpus(x) | Numpus(x)) -> (Tompus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Numpus(x)) -> (Tompus(x) | Vumpus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1622", "nl": "Every shumpus is a dumpus, a zumpus, and a rompus.", "fol": "all x. (shumpus(x) -> (dumpus(x) & zumpus(x) & rompus(x)))", "prediction": ["all x.(Shumpus(x) -> (Dump(x) | Zumpus(x) | Rompus(x)))", "all x.(Shumpus(x) -> (Dumpus(x) | Zumpus(x) | Rompus(x)))", "all x.(Shumpus(x) -> (Dumpus(x) & Zumpus(x) & Rompus(x)))", "exists x.(Shumpus(x) & Dumpus(x) & Zumpus(x) & Rompus(x))", "all x.(Shumpus(x) -> (Dumps(x) & Zumpus(x) & Rompus(x)))", "(all x.(Shumpus(x) -> Dumpus(x)) & all y.(Tompus(y) -> Rompus(y)))", "all x.(Shumpus(x) -> (Dumpus(x) & Zumpus(x) & Rompus(x)))", "all x.(Shumpus(x) -> (Dumpus(x) & Zumpus(x) & Rompus(x)))", "all x.(Shumpus(x) -> (Dumpus(x) & Zumpus(x) & Rompus(x)))", "all x.(Shumpus(x) -> (Dumpus(x) | Zumpus(x) | Rompus(x)))", "all x.(Shumpus(x) -> (Dumpus(x) | Zumpus(x) | Rompus(x)))", "all x.(Shumpus(x) -> (Dumpus(x) | Zumpus(x) | Rompus(x)))", "all x.(Shumpus(x) -> (Dumps(x) & Zumpus(x) & Rompus(x)))", "all x.(Shumpus(x) -> (Dumpus(x) | Zumpus(x) | Rompus(x)))", "all x.(Shumpus(x) -> (Dumps(x) & Zumpus(x) & Rompus(x)))", "all x.(Shumpus(x) -> (Dumps(x) & Zumpus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_1623", "nl": "Alex is an impus and Alex is a sterpus and Alex is not a zumpus.", "fol": "(impus(Alex) & sterpus(Alex) & -zumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Impedi(x) & Sterpus(y) & Zumpus(z)) -> (Impedi(x) & Sterpus(y) & -Zimmerpus(z)))", "all x.(Alex(x) -> (Impossible(x) & Sterpus(x) & -Tompus(x)))", "all x y.((Alex(x) & IsImpedient(x) & Alex(y)) -> (Sterepus(y) & -Zumpus(y)))", "(all x.(Alex(x) -> IsIsIs(x)) & all y.(Alex(y) -> Sterpus(y)) & is -Zumpus(y)))", "(all x.(Alex(x) -> Impos\u00e9(x)) & (Alex(x) -> Sterpus(x)) & -Tompus(x)))", "all x y.((Alex(x) & IsIs(x) & Alex(y)) -> (Sterepus(y) & -Zumpus(y)))", "(all x y.((Alex(x) & Impossible(x)) -> Sterpus(x)) & ((Alex(y) & Zumpus(y)) -> - Dashpus(y)))", "all x y z.((Alex(x) & Is(x,y) & Steromus(y)) -> (Is(x,z) & -Zombie(z)))", "all x y.((Alex(x) & IsImplemented(x) & Alex(y)) -> (Sterepus(y) | -Zumpus(y)))", "(all x.(Alex(x) -> Impossible(x)) & (Alex(x) -> Sterpus(x)) & (Alex(x) -> -Zumpus(x))))", "exists x y.(Album(x) & Is(x,Impossible) & Steroid(y) & -Zumpus(z))", "(all x.(Alex(x) -> Ilirprost(x)) & all y.(Alex(y) -> Steropus(y)) & all z.(Alex(z) -> Zumpus(z))))", "all x y.((Alex(x) & IsImplementary(x) & In(x,y)) -> (Sterpus(y) & -Zumpus(y)))", "all x y z.((Alex(x) & Impossible(x) & Sterosusky(y)) -> (And(Alex(z) | Zumpus(z))))", "all x.(Alex(x) -> (Impose(x) & Sterpus(x) & -Zumpus(x)))", "all x.(Alex(x) -> (Imposer(x) & Sterpus(x) & -Zumpus(x)))"]}
{"id": "prontoqa_train_1624", "nl": "Max is not a wumpus, Max is a lorpus, or Max is a jompus.", "fol": "(-wumpus(Max) | lorpus(Max) | jompus(Max))", "prediction": ["(all x.(Max(x) -> -Wumpus(x)) | (Max(x) -> Lorpus(x)) | (Max(x) -> JOMpus(x))))", "all x.((Max(x) & -Wumpus(x)) | (Lorpus(x) | Jompus(x))))", "(all x.(Max(x) -> -Wumpus(x)) | (Max(x) -> Lorpus(x)) | (Max(x) -> Jompus(x))))", "all x.(Max(x) -> (-Wumpus(x) | (Lorpus(x) | Jompus(x)))))", "(all x.(Mat Max(x) -> -Wumpus(x)) & (-Wumpus(x) & -Lorpus(x)) > (-Wumpus(x) | Yompus(x))))", "all x y z.((Max(x) & Wumpus(y) & Lord(z)) -> (-Wumpus(x) | (-Wumpus(x) | Lorpus(z) | Jompus(z))))", "(all x.(Max(x) -> -Wumpus(x)) | (Max(x) -> Lorpus(x)) | (Max(x) -> Jompus(x))))", "(all x.(Max(x) -> -Wumpus(x)) & (Lorpus(x) | Jompus(x))))", "(all x y.((Max(x) & -Wumpus(x)) -> -Wumpus(y)) & ((Max(x) & -Wumpus(x)) -> Lorpus(x)) | (-Wumpus(x) & -Wumpus(x)))) & ((Max(x) & -Wumpus(y)) -> Jompus(x)))", "all x.(Max(x) -> (-Wumpus(x) | (Lorpus(x) | Jompus(x))))", "(all x.(Max(x) -> -Wumpus(x)) | (Max(x) -> Lorpus(x)) | (Max(x) -> Jompus(x))))", "(all x.(Max(x) -> -Wumpus(x)) & (Lorpus(x) | Jompus(x))))", "(exists x.(Max(x) & -Wumpus(x)) | exists y.(Lorpus(y) & -Wumpus(y)) | exists z.(Max(z) & Jompus(z))))", "exists x.(Max(x) & (-Wumpus(x) | -Lorpus(x) | -Jompus(x)))", "(exists x.(Max(x) & -Wumpus(x)) | exists y.(Lorpus(y) & -Wumpus(y)))) | exists z.(Max(z) & Jompus(z))))", "(all x.(Wumpus(x) -> -Wumpus(x)) & (Lorpus(x) | Jompus(x))))"]}
{"id": "prontoqa_train_1625", "nl": "Every sterpus is a rompus.", "fol": "all x. (sterpus(x) -> rompus(x))", "prediction": ["all x.(Steerpus(x) -> Rompus(x))", "all x.(Sterepus(x) -> Rompus(x))", "all x.(Steerpus(x) -> Rompus(x))", "all x.(Sterpus(x) -> Rompus(x))", "all x.(Sterepus(x) -> Rompus(x))", "all x.(Sterpus(x) -> Rompus(x))", "all x.(Sterpus(x) -> Rompus(x))", "all x.(Sterepus(x) -> Rompus(x))", "all x.(Steerpus(x) -> Rompus(x))", "all x.(Stromit(x) -> Rompus(x))", "all x.(Sterpus(x) -> Rompus(x))", "all x.(Sterpus(x) -> Rompus(x))", "all x.(Steerpus(x) -> Rompus(x))", "all x.(Sterepus(x) -> Rompus(x))", "all x.(Sterepus(x) -> Rompus(x))", "all x.(Ssterpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_1626", "nl": "Stella is a sterpus, a wumpus, and a numpus.", "fol": "(sterpus(Stella) & wumpus(Stella) & numpus(Stella))", "prediction": ["(Stella,sterpus) & Stella,wumpus,numpus)", "all x.(Stella(x) -> (Sterepus(x) | Wumpus(x) | Numpus(x)))", "(Historpus(Stella) | Humpus(Stella) | Numpus(Stella)))", "(All x.(Storpus(x) & Sterpus(x)) & All y.(Wumpus(y) & All z.(Numpus(z) & Has(x,z))))", "(all x.(Stella(x) -> Sterus(x)) & (Wumpus(x) & Numpus(x)))", "all x.(Stella(x) -> (Sterepus(x) & Wumpus(x) & Numpus(x)))", "all x.(Stella(x) -> (Sterpus(x) & Wumpus(x) & Numpus(x)))", "all x.(Stella(x) -> ((Sterpus(x) & Wumpus(x)) | Numpus(x)))", "all x.(Stella(x) -> (Hybrid(x) & Sterpus(x) & Wompus(x) & Numpus(x)))", "all x.(Stella(x) -> (Asteroid(x) & AWumpus(x) & ANumpus(x)))", "all x.(Stella(x) -> (Sterpus(x) & Wumpus(x) & Numpus(x)))", "(Stella,Sterpus) & Wumpus(Stella) & Numpus(Stella))", "all x y z.((Stella(x) & Sterpus(y) & Wumpus(z)) -> (Estrus(x) & Wumpus(x) & Numpus(x)))", "all x.(Stella(x) -> (Sterpus(x) | Wumpus(x) | Numpus(x)))", "all x.(Stella(x) -> (Sterpus(x) | Wumpus(x) | Numpus(x)))", "(Stella(Sterpus) & Stella(Wumpus) & Stella(Numpus))"]}
{"id": "prontoqa_train_1627", "nl": "Stella is a jompus or a numpus or a rompus.", "fol": "(jompus(Stella) | numpus(Stella) | rompus(Stella))", "prediction": ["(Seems(Stella) & (Jompus(Stella) | Humpus(Stella))))", "all x.(Stella(x) -> (Jompus(x) | Numpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Jompus(x) | Numpus(x) | Rompus(x)))", "((Stella(Stella) & Jompus(Stella)) | Numpus(Stella) | Rompus(Stella)))", "all x.(Stella(x) -> (Jompus(x) | Numpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Jampus(x) | Numpus(x) | Rompus(x)))", "(See Stella's Blog for more info.))", "all x.(Stella(x) -> (Jompus(x) | Numpus(x) | Rompus(x)))", "(Jompus(Stella) | Nompus(Stella) | Rompus(Stella)))", "all x.(Stella(x) -> (Jompus(x) | Numpus(x) | Rompus(x)))", "all x.(Stella(x) -> (OtherOfNumpus(x) | OtherOtherOtherOtherOtherOrOther(x)))", "all x.(Stella(x) -> (Jompus(x) | Numpus(x) | Rompus(x)))", "(-jompus(Stella) | Nompus(Stella) | Rompus(Stella)))", "(Possil(Stella) | (Nompus(Stella) | Rompus(Stella))))", "all x.(Stella(x) -> (Jompus(x) | Numpus(x) | Rompus(x)))", "all x.(Stella(x) -> (Jomess(x) | Nompus(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1628", "nl": "Each gorpus is a tumpus.", "fol": "all x. (gorpus(x) -> tumpus(x))", "prediction": ["all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumulus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumulus(x))", "all x.(Gorpus(x) -> Tumulus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumulus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tump(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_1629", "nl": "Max is a shumpus, a gorpus, and a dumpus.", "fol": "(shumpus(Max) & gorpus(Max) & dumpus(Max))", "prediction": ["all x.(Max(x) -> (Shumpus(x) | Gorpus(x) | Dumpus(x)))", "all x.(Max(x) -> (Shumpus(x) | Gorpus(x) | Dumpus(x)))", "all x.(Max(x) -> (Shumpus(x) | Gorpus(x) | Dumpus(x)))", "(exists x.(Max(x) & Humpus(x)) & exists y.(Gorpus(y) & Dumpus(y)))", "all x.(Max(x) -> (Shumpus(x) | Gorpus(x) | Dumpus(x)))", "(All x.(Max(x) -> Humpus(x)) & (Max(x) -> Gorpus(x)) & (Max(x) -> Dumpus(x)))", "all x y.((Max(x) & Simpson(y)) -> (Shumpus(x) & Gorpus(y) & Dumpus(y)))", "all x.(Max(x) -> (Shumpus(x) & Gorpus(x) & Dumpus(x)))", "all x.(Max(x) -> (Shumpus(x) | Gorpus(x) | Dumpus(x)))", "(all x.(Max(x) -> Humpus(x)) & (Max(x) -> Gorpus(x)) & (Max(x) -> Dumpus(x)))", "(all x.(Max(x) -> Humpus(x)) & all y.(Gorpus(y) & Dumpus(y)))", "all x.(Max(x) -> (Shumpus(x) & Gorpus(x) & Dumpus(x)))", "all x.(Max(x) -> (Shumpus(x) & Gorpus(x) & Dumpus(x)))", "all x.(Max(x) -> (Shumpus(x) | Gorpus(x) | Dumpus(x)))", "all x.(Max(x) -> (Shumpus(x) & Gorpus(x) & Dumpus(x)))", "all x.(Max(x) -> (Shumpus(x) & Gorpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1630", "nl": "Max is a numpus or a lorpus or a tumpus.", "fol": "(numpus(Max) | lorpus(Max) | tumpus(Max))", "prediction": ["(Umpus(x) | Lorpus(x) | Tumpus(x)))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Tumpus(x)))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Tumpus(x)))", "(All x.(Max(x) -> (Numpus(x) | Lorpus(x) | Tumpus(x)))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Tumpus(x)))", "all x.(Max(x) -> (Numbus(x) | Lorpus(x) | Tumpus(x)))", "all x.(Max(x) -> (Nompus(x) | Lorpus(x) | Tumpus(x)))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Tumpus(x)))", "all x.(Max(x) -> (Nompus(x) | Lorpus(x) | Tumpus(x)))", "all x.(Max(x) -> (numpus(x) | lorpus(x) | tutu(x)))", "all x.(Max(x) -> (Nompus(x) | Lordpus(x) | Tumpus(x)))", "all x.(Max(x) -> (Numpus(x) | Leip(x) | Tumpus(x)))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Tucumpus(x)))", "all x.(Max(x) -> (Number(x) | Lorpus(x) | Tump(x)))", "(Numpus(Max) | Lorpus(Max) | Tumpus(Max))", "all x.(Max(x) -> (Numpus(x) | Lorpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_train_1631", "nl": "Everything that is an impus and a wumpus and a jompus is a yumpus and a dumpus and a rompus.", "fol": "all x. ((impus(x) & wumpus(x) & jompus(x)) -> (yumpus(x) & dumpus(x) & rompus(x)))", "prediction": ["all x.((Impos(x) & Wumpus(x) & Jompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Imposer(x) & Wumpu(x) & Jompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Imposs, Wumpus,Jompus) & Yampus(x) & Dumpus(x) & Rompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Imposs(x) & Wumpus(x) & Jompus(x)) -> (Yumpus(x) & Dumpus(x) & Roma(x)))", "all x.((Impose(x) & Wumpus(x) & Jompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Issue(x) & IsWumpus(x) & IsJompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x.(IlisesAndWumpusAndJompus(x) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Impossed(x) & Wasp(x) & HasWumpus(x) & HasJompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Implicator(x) & Wumpus(x) & Jompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Impossible(x) & Wumpus(x) & Jompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Issue(x) & IsWarmpus(x) & IsJompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Imposs(x) & Wumpus(x) & Jompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x y z.((Erasmus(x) & Wumpus(y) & Jompus(z) & Impossible(x) & Wumpus(y) & Jimpus(z)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Issue(x) & IsWumpus(x) & IsJompus(x)) -> ((Yumpus(x) & IsDumpus(x) & IsRompus(x))))", "all x.((Impossible(x) & Wumpus(x) & Jompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Imposs(x) & Wumpus(x) & Jompus(x)) -> (Yumpus(x) & Dumpus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_1632", "nl": "Numpuses are lorpuses and vumpuses and impuses.", "fol": "all x. (numpus(x) -> (lorpus(x) & vumpus(x) & impus(x)))", "prediction": ["all x.(Numpuse(x) -> (Lorph(x) & Vempuse(x) & Imperium(x)))", "all x.(Numpus(x) -> (Lorpus(x) & Vampuse(x) & Isolator(x)))", "all x y.((Numpus(x) & Lopuse(x)) -> (Vubise(y) & Iztec(x)))", "all x y z.((Numpus(x) & Lorpuse(y) & Vumpus(z)) -> (Vumpuse(x) & Ilirce(y)))", "all x.(Numpuse(x) -> (Lorpuse(x) | Vampuse(x) | Imperator(x)))", "all x y.((Numpuse(x) & Lupus(y)) -> (Lorpus(x) & Vampus(y) & Imperium(y)))", "(Lipope(nupuse) & Loomise(nupuse)) & Vumpuse(nupuse) & Impermissible(nupuse))", "all x.(Numpuse(x) -> (Lorpus(x) & Vulpuse(x) & Isolate(x)))", "all x.(Numpuse(x) -> (Lorpheus(x) | Vampus(x) | Individual(x)))", "exists x.(Numpus(x) & (Llorpus(x) | Vampuse(x) | Issue(x)))", "all x.(Numpus(x) -> (Lorpuse(x) & -Vampuse(x) & -Issue(x)))", "all x.(Numpuse(x) -> (Lorpuse(x) | Vampuse(x) | Impenete(x)))", "all x.(Numpus(x) -> (Lorpus(x) & Vulpe(x) & Imperia(x)))", "(all x.(Numpus(x) -> Looms(x)) & (Vampuse(x) | RequiresRequirement(x))))", "all x y.((Numpus(x) & Lorpus(y)) -> (Vampuse(x,y) | Ivore(x,y)))", "(all x.(Numpus(x) -> Lorpus(x)) | (Vumpuse(x) | Impess(x))))"]}
{"id": "prontoqa_train_1633", "nl": "Polly is a shumpus, a grimpus, or an impus.", "fol": "(shumpus(Polly) | grimpus(Polly) | impus(Polly))", "prediction": ["((Shumpus(Polly) | Grimpus(Polly)) | Ivorian(Polly))", "all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Impera(x)))", "all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Imperium(x)))", "all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Impermissor(x)))", "all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Impeccator(x)))", "all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Imperator(x)))", "all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Impossible(x)))", "all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Imperator(x)))", "all x.(Polly(x) -> (Shumpus(x) | Grumpus(x) | Impirator(x)))", "all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Imperia (x)))", "all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Imperator(x)))", "all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Imperium(x)))", "all x.(Poly(x) -> (Shumpus(x) | Grimpus(x) | Imperator(x)))", "all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Imperfeud(x)))", "(all x.(Polly(x) -> (Shumpus(x) | Grimpus(x) | Imperator(x))))", "exists x.(Polly(x) & ((Hampus(x) | Grimpus(x) | Impermissible(x))))"]}
{"id": "prontoqa_train_1634", "nl": "Sam is a lorpus, a tumpus, and a shumpus.", "fol": "(lorpus(Sam) & tumpus(Sam) & shumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Llorpus(x)) & all y.(Tumpus(y) & all z.(Shumpus(z)) -> Simpus(x))) & all w.(Ribbon(w) -> Simpus(w))))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Humpus(x)))", "all x.((Sam(x) & Lord(x)) -> Tumpus(x) & Humpus(x))", "all x y.((Sam(x) & Lord(y)) -> (Tumpus(x) | Humpus(y)))", "all x.(Sam(x) -> (Morpheus(x) | Tumpus(x) | Humpus(x)))", "all x.(Sam(x) & (Lorpus(x) | Tumpus(x) | Humpus(x)))", "(all x.(Sam(x) -> lorpus(x)) & all y.(Tumpus(y) & All z.(Shumpus(z)))))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Humpus(x)))", "(Colorado(Sam) & Sisyphus(Sam))", "all x.(Sam(x) -> (Lorpus(x) & Tumpus(x) & Humpus(x)))", "all x.(Sam(x) -> (Lorph(x) & Tumpus(x) & Humpus(x)))", "all x y z.((Sam(x) & Lorpus(y) & Tumpus(z)) -> (Lorpus(x,y) | Tumpus(z,z) | Humpus(x,y)))", "(all x.(Sam(x) -> Oryx)) & exists y.(Tumpus(y) & Seep(y)) & exists z.(Shumpus(z) & Slight(z))))", "all x.(Sam(x) -> (Lorph(x) | Tumpus(x) | Humpus(x)))", "all x.(Sam(x) -> (Lorph(x) | Totumpus(x) | Humpus(x)))", "all x.(Sam(x) -> (Lorpus(x) | Tumpus(x) | Humpus(x)))"]}
{"id": "prontoqa_train_1635", "nl": "Sam is a zumpus or a shumpus or a numpus.", "fol": "(zumpus(Sam) | shumpus(Sam) | numpus(Sam))", "prediction": ["all x.(Sam(x) -> (zumpus(x) | shumpus(x) | numpus(x)))", "all x.(Samma(x) -> (Tompus(x) | Shumpus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Humpus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Humpus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Humpus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Scumpus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Humpus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Shumpus(x) | Numpus(x)))", "exists x.(Sam(x) & ((Zumpus(x) | Humpus(x) | Numpus(x))))", "all x.(Sam(x) -> ((Zumpus(x) | Humpus(x) | Numpus(x))))", "all x.(Sam(x) -> (Tompus(x) | Shumpus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Humpus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Humpus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Humpus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Humpus(x) | Numpus(x)))", "all x.(Sam(x) -> (Tompus(x) | Humpus(x) | Numpus(x)))"]}
{"id": "prontoqa_train_1636", "nl": "Everything that is a shumpus and a brimpus and a vumpus is a zumpus.", "fol": "all x. ((shumpus(x) & brimpus(x) & vumpus(x)) -> zumpus(x))", "prediction": ["all x.((Shumpus(x) & Brimpus(x) & Vumpus(x)) -> Zumpus(x))", "all x y z.((Shumpus(x) & Brimpus(y) & Vulpis(z) & Is(x,y) & Is(x,z)) -> Zumpus(x))", "all x y.((Shumpus(x) & Brimpus(y) & Vumpus(y)) -> Zumpus(x))", "all x.((Shumpus(x) & Brimpus(x) & vumpus(x)) -> Zumpus(x))", "all x.((Shumpus(x) & Brimpus(x) & Vumpus(x)) -> Zumpus(x))", "all x.((Shumpus(x) & Brimpus(x) & Voompus(x)) -> Zumpus(x))", "all x.((Shumpus(x) & Brimpus(x) & Vampire(x)) -> Zumpus(x))", "all x.((Shumpus(x) & Brimpus(x) & Vumpus(x)) -> Zumpus(x))", "all x.((Shumpus(x) & Brimpus(x) & Vumpus(x)) -> Zumpus(x))", "all x.((Shumpus(x) & Brimpus(x) & Vumpus(x)) -> Zumpus(x))", "all x.((Shumpus(x) & Brimpus(x) & Vumpus(x)) -> Zumpus(x))", "all x.(((Shumpus(x) & Brimpus(x) & Vumpus(x)) -> Zumpus(x))", "all x.((Shumpus(x) & Brimpus(x) & Vumpus(x)) -> Zumpus(x))", "all x.((Shumpus(x) & Brimpus(x) & Vumpus(x)) -> Zumpus(x))", "all x.((Shumpus(x) & Brimpus(x) & Vumpus(x)) -> Zumpus(x))", "all x.((Shumpus(x) | Brimpus(x) | Vulmpus(x)) -> Zumpus(x))"]}
{"id": "prontoqa_train_1637", "nl": "Rex is a lempus and Rex is not a zumpus and Rex is a tumpus.", "fol": "(lempus(Rex) & -zumpus(Rex) & tumpus(Rex))", "prediction": ["all x.((Rex(x) & Lempus(x) & -Toumpus(x)) -> Tumpus(x))", "(all x.(Rex(x) -> Lempus(x)) & (Rex(x) -> -Tommoth(x))))", "all x.((Rx(x) & Lempus(x)) -> (-Zumpus(x) & Tumpus(x)))", "all x y z.((Rex(x) & Lempus(x) & Rex(y) & Zumpus(z)) -> (-Tompus(y) & Tompus(z)))", "(all x y.(Lempus(x) -> Rex)) & (Rex(y) -> -Tompus(y)) & (Rex(y) -> Tumpus(y)))", "(all x y.((Rex(x) & Lempus(x)) -> Affects(x,y)) & ((Rex(x) & NotAffects(x,z))) -> Affects(x,z)))", "(all x y.((Rex) & Pluto(y)) -> Lempus(x)) & ((Rex(y) & Zumpus(y)) -> Tumpus(y)))", "all x y z.((Rex(x) & Lempus(x) & Rex(y) & Zumpus(z)) -> (-Tompus(y) & Tumpus(z)))", "(all x.(Rex(x) -> Lempus(x)) & (-Zumpus(x)) & (Tumpus(x) -> Tompus(x)))", "(all x.(Rex(x) -> Lempus(x)) & (Rex(x) -> -Zumpus(x)) & (Rex(x) -> Tumpus(x))))", "(all x y z.(Peak(x) -> Lempus(x)) & (Gumpus(y) | Tumpus(z))))", "(all x.(Rex(x) & Lempus-(x)) & -Zumpus(x)) & all y.(Tumpus(y)))", "all x y z.((Rex(x) & Zumpus(y) & Tumpus(z)) -> (Lempus(x) & -Tompus(y) & Totumpus(z) & -Tompus(x)))", "(All x.(Rex(x) -> Lempus(x)) & (-Tompus(x) & Tumpus(x)))", "all x y z.((Rex(x) & Lempus(x) & Tompus(y) & Tumpus(z)) -> (NotTompus(x) & -IsTompus(y)))", "all x y.((Rex(x) & Lempus(x) & Rex(y)) -> (-Zumpus(y) & Tumpus(y)))"]}
{"id": "prontoqa_train_1638", "nl": "Every shumpus is a lempus and a jompus and a wumpus.", "fol": "all x. (shumpus(x) -> (lempus(x) & jompus(x) & wumpus(x)))", "prediction": ["all x.(Shumpus(x) -> (Lempus(x) | Jompus(x) | Wumpus(x)))", "all x.(Shumpus(x) & (Lempus(x) | Jompus(x) | Wumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) & Jompus(x) & Wumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) & Jompus(x) & Wumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) & Jompus(x) & Wumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) & Jompus(x) & Wumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) & Jompus(x) & Wumpus(x)))", "all x.(Shumpus(x) -> (HasLempus(x) & HasJimpus(x) & HasWumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) & Jompus(x) & Wumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) & Jompus(x) & Wumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) & Jompus(x) & Wompus(x)))", "all x y z.((Shumpus(x) & Lempus(y) & Jompus(z)) -> (Dirt(x,y) & Wumpus(y)))", "all x.(Shumpus(x) -> (Lempus(x) & Jompus(x) & Wumpus(x)))", "all x.(Shumpus(x) -> (HasLempus(x) & HasJompus(x) & HasWumpus(x)))", "all x.(Shumpus(x) -> (Limpus(x) & Jompus(x) & Humpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) & Jompus(x) & Wumpus(x)))"]}
{"id": "prontoqa_train_1639", "nl": "Everything that is a wumpus, a brimpus, and a sterpus is not a lempus.", "fol": "all x. ((wumpus(x) & brimpus(x) & sterpus(x)) -> -lempus(x))", "prediction": ["(All x.((Wumpus(x) | Brimpus(x) | Sterpus(x))) -> -Lempus(x))", "all x.((Wumpus(x) | Brimpus(x) | Sterpus(x)) -> -Lempus(x))", "all x.((Welp(x) & Brompus(x) & Sterpus(x)) -> -Lempus(x))", "all x.((Wumpus(x) | Brimpus(x) | Sterpus(x)) -> -Lempus(x))", "all x.((Wumpus(x) | Brimpus(x) | Sterpus(x)) -> -Lempus(x))", "all x.((Wumpus(x) & Brimpus(x) & Sterepus(x)) -> -Lempus(x))", "all x.((Wumpus(x) | Brimpus(x) | Sterpus(x)) -> -Lempus(x))", "all x.((Wumpus(x) | Brimpus(x) | Sterpus(x)) -> -Lempus(x))", "all x.((Rosen(x) & Husk(x) & Brimpus(x) & Sterpus(x)) -> -Lempus(x))", "all x.((Wumpus(x) | Brimpus(x) | Sterpus(x)) -> -Lempus(x))", "all x.((Wumpus(x) | Brimpus(x)|Sterpus(x)) -> -Lempus(x))", "all x.((Wumpus(x) | Brimpus(x) | sterpus(x)) -> -Lempus(x))", "all x.((MadeOf(x) & Wumpus(x) & MadeOf(x) & MadeOf(x) & MadeOf(x) & MadeOf(x)) -> -MadeOf(x\" & MadeOf(x\"))", "all x.((Element(x) & Wumpus(x) & Brimpus(x) & Sterpus(x)) -> -Lempus(x))", "all x.((Wumpus(x) | Brimpus(x) | Sterpus(x)) -> -Lempus(x))", "all x.((Wumpus(x) & Brimpus(x) & Sterpus(x)) -> -Lempus(x))"]}
{"id": "prontoqa_train_1640", "nl": "Impuses are gorpuses and tumpuses and dumpuses.", "fol": "all x. (impus(x) -> (gorpus(x) & tumpus(x) & dumpus(x)))", "prediction": ["all x.(Impuse(x) -> (Gorpus(x) & Tumpus(x) & Dunst(x)))", "all x y.((Impuse(x) & Gorpuse(y)) -> (Tumpus(x) | Dumpus(x)))", "all x.(Impuses(x) -> (Frogs(x) & -Frogs(x)))", "all x.(Impus(x) -> ((Gorpus(x) | Tumpus(x) | Dumpuse(x))))", "all x.(Impuse(x) -> (Gorpus(x) & Tumpus(x) & Dumpuse(x)))", "all x.(Impuses(x) -> (Gorpus(x) | Tumpus(x) | Dumpuses(x)))", "all x.(Impus(x) -> (Gorpus(x) | Humpus(x) | Dumpus(x)))", "all x.(Impus(x) -> (Gorpuse(x) & Tumulus(x) & Dumpuse(x)))", "all x.(Impustor(x) -> (Rose(x) | Tumpus(x) | Dumpuse(x)))", "all x.(Impuses(x) -> (Gorpus(x) | Tumpus(x) | Dumpuse(x)))", "all x.(Impus(x) -> (Gorpuse(x) & Tumpuse(x) & Dumpsuse(x)))", "all x.(Impuse(x) -> (Gorpus(x) | (Tumpus(x) | Dumpuse(x))))", "all x.(Impuse(x) -> (Gorpus(x) | Tumpus(x) | Dumpuse(x)))", "exists x.(Impuse(x) & (Gorpuse(x) | Tumpuse(x) | Dumpuse(x)))", "all x y.((Impuse(x) & Gorpus(y)) -> (Tumpus(x) | Dumpuse(x)))", "all x.(Impus(x) -> (Gorpus(x) | Tumpus(x) | Dumpuse(x)))"]}
{"id": "prontoqa_train_1641", "nl": "Sam is a shumpus and Sam is a sterpus and Sam is not a dumpus.", "fol": "(shumpus(Sam) & sterpus(Sam) & -dumpus(Sam))", "prediction": ["all x y.((Sam(x) & Sam(y)) -> (Shumpus(x) & Steros(y) & -Dumpus(y)))", "(all x.(Shumpus(x) -> Shimpus(x)) & (Serpus(x) -> Shimpus(x))) & (Shuckus(x) -> -Dumpsus(x)))", "(all x.(Shumpus(x) -> Sterpus(x)) & all y.((Shumpus(y) & -Dumpus(y))) -> -Dumpus(y)))", "exists x.(Sam(x) & Humpus(x) & Sterpus(x) & -Dumpus(x))", "(all x.(Shumpus(x) -> Shumpus(x)) & (Sternpus(x) -> Sterpus(x)) & -Dumpus(x)))", "(all x.(Shumpus(x) -> Shumpus(x)) & all y.(Sterpus(y) -> Sterpus(y))) & all z.(Dumpus(z) -> -Dumpus(z)))", "is split into two parts (Sam(shumpus) & Sam(ssterpus) & Sam(sam) & -dumpus(sam)))", "all x y.((Sam(x) & Sam(y)) -> (Shumpus(x) & Sterus(y) & -Dumpus(y)))", "(all x.(Shumpus(x)) -> Steros(x)) & (Shumpus(x) -> Sterpus(x)) & -Dumpus(x)))", "(all x.(Shumpus(x) -> Sam(x)) & (Sterpus(x) -> Sam(x)) & -Dumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) & Sterpus(x) & -Dumpus(x)))", "all x y.((Sumpus(x) & Sphagnum(y)) -> (Shumpus(x) & Sterpus(y) & -Dumpus(y)))", "all x.(Sam(x) -> (Shumpus(x) & Steerpus(x) & -Dumps(x)))", "all x y z.((Sam(x) & Humpus(y) & Sterpus(z)) -> (Shumpus(x) & Sterpus(y) & Sam(z) & -Dumpus(z)))", "(all x.(Shumpus(x) -> Sporpus(x)) & (Sorpus(x) -> Sporpus(x))) & (Sam(x) -> -Dumpus(x)))", "all x y.((Sam(x) & Shumpus(y) & Sterpus(x)) -> -Dumpus(x))"]}
{"id": "prontoqa_train_1642", "nl": "Sam is not an impus.", "fol": "-impus(Sam)", "prediction": ["(-Impossible(Sam) -> DoesSam(Sam))", "-Implosive(Sam)", "all x.(Sam(x) -> -Imperial(x))", "all x.(Sam(x) -> -Implicator(x))", "all x.(Sam(x) -> -Imposer(x))", "All x.(Sam(x) -> -Impossible(x))", "(Isolate(Sam) & -Implementary(Sam))", "Sam neads pas en.", "-IsRequired(Sam)", ",sam,is-implementation(sam))", "-Imite(Sam)", "Sam -Is(Sam) | IsIsolated(Sam))", "NoIssue(Sam)", "All x.(Sam(x) -> -Impossible(x))", "-Impossible(Sam)", "all x.(Sam(x) -> -Impose(x))"]}
{"id": "prontoqa_train_1643", "nl": "Everything that is a sterpus, a gorpus, and a zumpus is a brimpus and a shumpus and a lorpus.", "fol": "all x. ((sterpus(x) & gorpus(x) & zumpus(x)) -> (brimpus(x) & shumpus(x) & lorpus(x)))", "prediction": ["all x.((Sterpus(x) | Gorpus(x) | Zumpus(x)) -> (Stompus(x) & Humpus(x) & Lorpus(x)))", "all x.((Sterectus(x) & Gorpus(x) & Zumpus(x)) -> (Brimpus(x) & Humpus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Gorpus(x) | Zumpus(x)) -> (Brimpus(x) | Humpus(x) | Lorpus(x)))", "all x.((Sterpus(x) & Gorpus(x) & Zumpus(x)) -> (Brimpus(x) & Shumpus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Gorpus(x) | Zumpus(x)) -> (Brimpus(x) & Shumpus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Gorpus(x) | Zumpus(x)) -> ((Brampus(x) & Shumpus(x) & Lorpus(x))))", "all x.((Sterepus(x) | Gorpus(x) | Zumpus(x)) -> (Brimpus(x) & Shumpus(x) & Lorpus(x)))", "all x y.((Sternus(x) & Gorpus(y) & Zumpus(x)) -> (Brimpus(x) & Shumpus(y) & Lorpus(z)))", "all x.((Sternus(x) | Gorpus(x) | Zumpus(x)) -> (Brimpus(x) & Shumpus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Gorpus(x) | Zumpus(x)) -> (Brimpus(x) & Humpus(x) & Lorpus(x)))", "all x.((Sterepus(x) & Gorpus(x) & Zumpus(x)) -> (Brimpus(x) & Shumpus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Gorpus(x) | Zumpus(x)) -> (Brumpus(x) & Shumpus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Gorpus(x) | Zumpus(x)) -> (Brimpus(x) & Humpus(x) & Lompu(x)))", "all x.((Sterepus(x) & Gorpus(x) & Zumpus(x)) -> (Brimpus(x) & Shumpus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Gorpus(x) | Zumpus(x)) -> (Brimpus(x) & Humpus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Gorpus(x) | Zumpus(x)) -> (Brimpus(x) & Humpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_train_1644", "nl": "Everything that is a rompus, a yumpus, and a brimpus is a jompus.", "fol": "all x. ((rompus(x) & yumpus(x) & brimpus(x)) -> jompus(x))", "prediction": ["all x.((Rompus(x) | Yumbos(x) | Brimpus(x)) -> Jompus(x))", "all x.((Rompus(x) & Yumpus(x) & Brimpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Yumpus(x) | Brimpus(x)) -> Jompus(x))", "all x.((TooMolecule(x) & -Omniverse(x)) -> (Yumpus(x) & Brimpus(x)))", "all x.((Rompus(x) | Yumpus(x) | Brimpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Yumpus(x) | Brimpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Yumpus(x) | Brimpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Yukpus(x) | Brimpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Yusumpus(x) | Brimpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Yumpus(x) | Brimpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Yumpus(x) | Brimpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Yukpus(x) | Brimpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Yumpus(x) | Brimpus(x)) -> Jompus(x))", "all x.((Rompus(x) & Yumpa(x) & Brimpus(x)) -> Jompus(x))", "all x.((Everything(x) & Rompus(x) and Yumpus(x) & Brimpus(x)) -> Jompus(x))", "all x.((Rompus(x) | Yumpus(x) | Brimpus(x)) -> Jompus(x))"]}
{"id": "prontoqa_train_1645", "nl": "Alex is a jompus, a wumpus, or a lempus.", "fol": "(jompus(Alex) | wumpus(Alex) | lempus(Alex))", "prediction": ["exists x.(Alex(x) & (Jampus(x) | Wumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Jompus(x) | Wompus(x) | Lempus(x)))", "all x.(Alex(x) -> (Jompus(x) | Wumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Jompus(x) | Wumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Jompus(x) | Wompus(x) | Lempus(x)))", "all x.(Alex(x) -> (Jomeuse(x) | Wumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Jompus(x) | Wumpus(x) | Lampus(x)))", "all x.(Alex(x) -> (Jomess(x) | Wumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Jompus(x) | Wumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Jompus(x) | Wumpus(x) | Lempus(x)))", "all x.(Alex(x) -> ((Jompus(x) | Wumpus(x) | Lempus(x))))", "all x.(Alex(x) -> (Jumpus(x) | Wumpus(x) | Lempus(x)))", "(Jumpus(Alex) | Wumpus(Alex) | Lempus(Alex)))", "all x.(Alex(x) -> (Jimpus(x) | Wumpus(x) | Lempus(x)))", "all x.(Alex(x) -> (Jompus(x) | Wompus(x) | Lempus(x)))", "all x.(Alex(x) -> (Jomess(x) | Wompus(x) | Lempus(x)))"]}
{"id": "prontoqa_train_1646", "nl": "Everything that is a wumpus, a vumpus, or a dumpus is a zumpus, a shumpus, and a jompus.", "fol": "all x. ((wumpus(x) | vumpus(x) | dumpus(x)) -> (zumpus(x) & shumpus(x) & jompus(x)))", "prediction": ["all x.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Zumpus(x) | Shumpus(x) | Jompus(x)))", "all x.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Tompus(x) | Humpus(x) | Jompus(x)))", "all x.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Tompus(x) | Sampus(x) | Jompus(x)))", "all x.((Wumpus(x) | Voompus(x) | Dumpus(x)) -> (Zumpus(x) & Shumpus(x) & Jompus(x)))", "(all x.((Wumpus(x) | Voompus(x) | Dumpus(x))) -> (Tompus(x) | Humpus(x) | Jompus(x)))", "all x.((Tompus(x) | Shumpus(x) | Jompus(x)) -> (Wumpus(x) | Vampus(x) | Dumpus(x)))", "all x.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Tompus(x) & Shumpus(x) & Jompus(x)))", "all x.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Tompus(x) | Shumpus(x) | Jompus(x)))", "all x.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Tompus(x) | Shumpus(x) | Jompus(x)))", "all x.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Zumpus(x) | Shumpus(x) | Jompus(x)))", "all x.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Tompus(x) & Humpus(x) & Jompus(x)))", "all x.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Shumpus(x) & Jompus(x)))", "all x.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Ramus(x) | Shumpus(x) | Jompus(x)))", "all x.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Tompus(x) | Shumpus(x) | Jompus(x)))", "all x.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Tompus(x) & Shumpus(x) & Jompus(x)))", "all x.((Wumpus(x) | Vumpus(x) | Dumpus(x)) -> (Zumpus(x) & Shumpus(x) & Jompus(x)))"]}
{"id": "prontoqa_train_1647", "nl": "Max is a vumpus.", "fol": "vumpus(Max)", "prediction": ["(Bill and Max(Max) -> Vumpus(Max))", "(Vallus(Max) -> Vumpus(Max))", "all x.(Max(x) -> AVimpus(x))", "(Limpus(Max) & -Vimpus(Max))", "(Vumpus(Max))", "(Vumpus(Max))", "All x.(Max(x) -> Vampus(x))", "all x.(Max(x) -> Vumpus(x))", "(Vumpus(Max))", "MaxVimpus(x)", "(Vimpus(Max))", "Max(Max)", "Max (Camera(Max) & Visumpus(Max))", "Max ist einVumpus.", "all x.(Max(x) -> Vumpus(x))", "(Umpus(Max))"]}
{"id": "prontoqa_train_1648", "nl": "Everything that is a wumpus or a gorpus or a dumpus is a numpus, a yumpus, and a lorpus.", "fol": "all x. ((wumpus(x) | gorpus(x) | dumpus(x)) -> (numpus(x) & yumpus(x) & lorpus(x)))", "prediction": ["all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) | Yampus(x) | Lorpus(x)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) & Yumpus(x) & Lorpus(x)))", "all x.(((Wumpus(x) | Gorpus(x) | Dumpus(x))) -> (Numpus(x) | Yumpus(x) | Lorpus(x)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) | Yimpus(x) | Lorpus(x)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numerus(x) | Yumpus(x) | Lorpus(x)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) & Yumpus(x) & Lorpus(x)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numerus(x) | Yumpus(x) | Lorpus(x)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) & Yumpus(x) & Lordpus(x)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) & Yumpus(x) & Lorpus(x)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Nompus(x) & Yampus(x) & Lorpus(x)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) & Yampus(x) & Lorpus(x)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) & Yumpus(x) & Lorpus(x)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) & Yumpus(x) & Lorpus(x)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) | Yumpus(x) | Lorpus(x)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (numpus(x) | yumpus(x) | lorpus(x)))", "all x.((Wumpus(x) | Gorpus(x) | Dumpus(x)) -> (Numpus(x) & Yompus(x) & Lorpus(x)))"]}
{"id": "prontoqa_train_1649", "nl": "Everything that is a sterpus, a lempus, and a jompus is a shumpus and a vumpus and a lorpus.", "fol": "all x. ((sterpus(x) & lempus(x) & jompus(x)) -> (shumpus(x) & vumpus(x) & lorpus(x)))", "prediction": ["all x.((Sterpus(x) | Lempus(x) | Jompus(x)) -> (Shumpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Sterepus(x) | Lempus(x) | Jompus(x)) -> (Shumpus(x) | Vumpus(x) | Lorpus(x)))", "all x.((Sterpus(x) & Lempus(x) & Jompus(x)) -> (Meaning(x) & Mango(x) & Mango(x) & Mango(x)))", "all x.((Sterpus(x) | Lempus(x) | Jompus(x)) -> (Shumpus(x) & Vumpus(x) & Lordpus(x)))", "all x.((Strotherpus(x) | Lempus(x) | Jompus(x)) -> (Shumpus(x) & Vulmpus(x) & Lordpus(x)))", "all x.((Sterpus(x) | Lempus(x) | Jompus(x)) -> (Shumpus(x) & Vumpus(x) & Loperpus(x)))", "all x.((Sterpus(x) & Lempus(x) & Jompus(x)) -> (Shumpus(x) & Vumpus(x) & Llorpus(x)))", "all x.((Steerpus(x) & Lempus(x) & Jompus(x)) -> (Shumpus(x) & Vumpus(x) & Lordpus(x)))", "all x.((Sterepus(x) | Lempus(x) | Jompus(x)) -> (Shumpus(x) | Vumpus(x) | Lorpus(x)))", "all x.((Sterpus(x) & Lempus(x) & Jompus(x)) -> (Shumpus(x) & Voompus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Lempus(x) | Jompus(x)) -> (Shumpus(x) & Vuspus(x) & lorpus(x)))", "all x.((Starpus(x) | Lempus(x) | Jompus(x)) -> (Shumpus(x) & Vumpus(x) & lorpus(x)))", "all x.((Sterpus(x) | Lempus(x) | Jompus(x)) -> (Shumpus(x) & (Vumpus(x) | Lorpus(x))))", "all x.((Sterpus(x) | Lempus(x) | Jompus(x)) -> (Shumpus(x) & Vulmus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Lempus(x) | Jompus(x)) -> (Shumpus(x) & Vumpus(x) & Lorpus(x)))", "all x.((Sterpus(x) | Lempus(x) | Jompus(x)) -> (Shumpus(x) & Violetus(x) & Loomis(x)))"]}
{"id": "prontoqa_train_1650", "nl": "Every grimpus is a zumpus and a gorpus and a yumpus.", "fol": "all x. (grimpus(x) -> (zumpus(x) & gorpus(x) & yumpus(x)))", "prediction": ["all x.(Grimpus(x) -> (Zimpus(x) & Gorpus(x) & Yumpus(x)))", "all x.(Grimpus(x) -> (Grompus(x) | Gorpus(x) | Yumpus(x)))", "all x.(Grampus(x) -> (Tompus(x) & Gorpus(x) & Yumpus(x)))", "all x.(Grimpus(x) -> (Tompus(x) & Gorpus(x) & Yumpus(x)))", "all x.(Grisp(x) -> (Tompus(x) & Gorpus(x) & Yumpus(x)))", "all x.(Grimpus(x) -> (Tompus(x) | Gorpus(x) | Yumpus(x)))", "all x.(Grimpus(x) -> (Tompus(x) & Gorpus(x) & Yumpus(x)))", "all x.(Grimpus(x) -> (Tompus(x) & Gorpus(x) & Yumpus(x)))", "all x y.((Grimpus(x) & Zumpus(y)) -> (Gorpus(x) & Yumpus(x)))", "all x.(Sgrimpus(x) -> (Tompus(x) | Gorpus(x) | Yumpus(x)))", "all x.(Grimpus(x) -> (zumpus(x) & gorpus(x) & yumpus(x)))", "all x.((Grimpus(x) & Zumpus(x)) & Gorpus(x) & Yumpus(x)) -> Grave.", "all x.(Grimpus(x) -> (Tompus(x) & Gorpus(x) & Yumpus(x)))", "all x.(Grimpus(x) -> (Tompus(x) & Gorpus(x) & Yumpus(x)))", "all x.(Smok(x) -> ((Tompus(x) & Gorpus(x) & Yumpus(x))))", "all x.(Smoop(x) -> (Schumpus(x) & Gorpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1651", "nl": "Sally is not a gorpus, Sally is a yumpus, and Sally is a vumpus.", "fol": "(-gorpus(Sally) & yumpus(Sally) & vumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Gorpus(x)) | (Sally(x) -> Yupus(x))) | (Sally(x) -> Vumpus(x)))", "(all x y z.((Sally(x) & Gorpus(y) & Kumpus(z)) -> -(SallySally(x) | SallySally(x))))", "all x y z.((Sally(x) & Gorpus(y) & Yumpa(z)) -> (-Gorpus(x) & Yumpus(x) & Voimpus(x)))", "(all x.(Sally(x) -> -Gorpus(x)) & (Yumpus(x) | Vumpus(x))))", "(all x.(Sally(x) -> -Gorpus(x)) & (Yumpus(x) | Vumpus(x))))", "(all x.(Sally(x) -> -Gorpus(x)) & all y.(Sally(y) -> Yumpus(y))) & all z.(Sally(z) -> Vumpus(z)))", "(all x y z.(Sally(x) -> -Gorpus(x)) & ((Sally(y) & Yumpus(y)) -> Vumpus(z)))", "all x y z.((Sally(x) & Gorpus(y) & Yumpa(z)) -> (-Gorpus(x) | (Yumpus(x) & Vumpus(x))))", "(-Gorpus(Sally) & Yumpa(Sally) & Vumpus(Sally))", "all x y z.((Sally(x) & Gorpus(y) & Yumpus(z)) -> (-Gorpus(x) & (Yumpus(y) | Vumpus(z))))", "all x.(Sally(x) -> (-Gorpus(x) & -Yumpus(x) & -Vumpus(x)))", "all x y z.((Sally(x) & Gorpus(y) & Yumpus(z)) -> (-Gorpus(x) & Yampus(y) & Vumpus(z)))", "(all x.(Sally(x) -> -Gorpus(x)) | (Sally(x) -> Yumpu(x))) | (Sally(x) -> Vumpus(x)))", "all x y z.((Sally(x) & Gorpus(y) & Yumpos(z)) -> (-Gorpus(x) | (Yumpus(z) & Vumpus(z)))))", "all x.((Sally(x) & -Gorpus(x)) & (Yumpus(x) | Vampire(x))) -> -Gorpus(x))", "all x y.((Sally(x) & Guarpus(y)) -> (-Gorpus(x) | Yampus(x) | Vumpus(x)))"]}
{"id": "prontoqa_train_1652", "nl": "Sam is a rompus, Sam is a dumpus, and Sam is not a numpus.", "fol": "(rompus(Sam) & dumpus(Sam) & -numpus(Sam))", "prediction": ["(all x y z.(Sam(x) -> Romans(x)) & (Sam(y) -> Dumpus(y)) & (Sam(z) -> -Numerus(z)))", "all x.(Sam(x) -> (Rompus(x) & Dumpus(x) & -Numpus(x)))", "(all x y.((Sam(x) & Rompus(x)) -> Dumpus(x)) & ((Sam(y) & -Numpus(y)) -> Numpus(y)))", "all x y z.((Sam(x) & Rimpus(y) & Dumpus(z)) -> (Rompus(x) | Numpus(x)))", "all x y z.(Amen(x) -> (Ronpus(x) & Dumpus(y) & -Numpus(z)))", "(all x.(Sam(x) -> Rompus(x)) & all y.(Sam(y) -> Dumpus(y)) & all z.(Sam(z) -> -Numpus(z))))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> Dumpus(x)) & & -Sam(x)))", "(all x.(Sam(x) -> Rompus(x)) & all y.(Sam(y) -> Dumpus(y)) & all z.(Sam(z) -> -Numpus(z))))", "all x y z.((Sam(x) & Rumpus(y) & Dumpus(z)) -> (Rimpus(x) & Dumpus(y) & -Numpus(z)))", "(all x.(Sam(x) -> Rumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Numpus(x)))", "(all x.(Sam(x) -> Rompus(x)) | (Sam(x) -> Dumpus(x))) & (Sam(x) -> -Numpus(x)))", "all x y z.((Sam(x) & Rompus(y) & Dumpus(z)) -> (Rompus(x) | Numpus(x)))", "(all x.(Rompus(x) -> SamSam(x)) & (Dumpus(x) -> SamSam(x)))", "(all x.(Rompus(x) -> Sam(x)) & (Dumps(x) -> Sam(x)) & -Numpus(x)))", "(all x.(Rompus(x) -> Sam_(Dumpsus(x))) & (Dumpus(x) -> Sam_(Numpus(x))))", "(all x.(Sam(x) -> Rompus(x)) & all y.(Sam(y) -> Dumpus(y)) & all z.(Sam(z) -> -Numpus(z))))"]}
{"id": "prontoqa_train_1653", "nl": "Sam is a gorpus, Sam is not an impus, or Sam is a yumpus.", "fol": "(gorpus(Sam) | -impus(Sam) | yumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Gorpus(x)) | all y.(Sam(y) -> -Impossible(y))))", "(all x.(Sam(x) -> Gorpus(x)) | (-Issue(x) | Yumpsum(x))))", "all x y.((Sam(x) & Gorpus(x)) | (-Issue(x) | Yampus(y))))", "(all x.(Sam(x) -> Gorpus(x)) & (-Sam(x) -> Impilicator(x)) | (-Sam(x) -> Yumpus(x))))", "(all x.(Sam(x) -> Gorpus(x)) & (-Sam(x) -> Impossible(x)) | (-Sam(x) -> Yumpus(x))))", "all x.((Sam(x) & (Gorpus(x) | -Implus(x) | Yumpus(x))) -> -Gorpus(x))", "(all x.(Gorpus(x) -> Samy)) & (NoImpediment(x) | Yumpus(x))))", "(all x.(Sam(x) -> Gorpus(x)) | (-Illusion(x) & Sam(x)) & (Yumpus(x) | Gorpus(x))))", "(all x.(Sam(x) -> Gorpus(x)) | (-Sam(x) -> Imperator(x)) | (-Sam(x) -> Yumpus(x))))", "(all x.(Sam(x) -> Gorpus(x)) & (NotImpossible(x) | Yumpus(x)))", "(all x.(Sam(x) -> Gorpus(x)) & (-Sam(x) -> Impirez(x)) | (-Sam(x) -> Yumpa(x))))", "(all x.(Sam(x) -> Gorpus(x))) & (-(Sam(x) & Impossible(x)) | (-Sam(x) & Yumpus(x)))))", "all x y.((Sam(x) & Gorpus(x)) | (-Impossible(y) | Muffle(z))))", "(all x.(Sam(x) -> Gorpus(x)) & (-Sam(x) -> Impossible(x)) | (-Sam(x) -> Yumpus(x))))", "all x y.((Sam(x) & Gorpus(x)) | (-Impossible(x) | Yumpus(y))))", "(all x y.(Sam(x) -> Gorpus(x)) | (Sam(y) -> -Impossible(y)) | (Sam(y) -> Yumpus(y))))"]}
{"id": "prontoqa_train_1654", "nl": "Each lorpus is a jompus and a gorpus and a vumpus.", "fol": "all x. (lorpus(x) -> (jompus(x) & gorpus(x) & vumpus(x)))", "prediction": ["all x.(Lorpus(x) -> (Jimpus(x) & Gorpus(x) & Vumpus(x)))", "all x.(Lorpus(x) -> (SameLorpus(x) & Jompus(x)) & Gorpus(x) & Vumpus(x)))", "all x.(Lorpus(x) -> (jompus(x) & Gorpus(x) & Vumpus(x)))", "all x.(Lorpus(x) -> (Jompus(x) & Gorpus(x) & Vumpus(x)))", "all x.(Lorpus(x) -> (Jimpus(x) & Gorpus(x) & Vumpus(x)))", "all x.(Lorpus(x) -> (Jompus(x) & Gorpus(x) & Vumpus(x)))", "all x y.((Lorpus(x) & Jompus(y)) -> (Dampus(x) & Gorpus(x) & Vumpus(x)))", "all x y.((Lorpus(x) & Jompus(y)) -> (Gorpus(x) & Vumpus(x)))", "all x.(Lorpus(x) -> (exists y.(Jomess(y) & Is(x,y)) & exists z.(Gorpus(z) & Is(z,y))) & exists w.(Vumpus(w) & Is(w,x)))))", "all x.(Lorpus(x) -> (Jompus(x) & Gorpus(x) & Vumpus(x)))", "all x.(Lorpus(x) -> (Ompus(x) | Gorpus(x) | Vumpus(x)))", "all x.(Lorpus(x) -> (Jompus(x) | Gorpus(x) | Vumpus(x)))", "all x y z.((Lorpus(x) & Jompus(y) & Gorpus(z)) -> (HasOwl(x,y) & HasVumpus(x)))", "all x.(Lorpus(x) -> ((Jompus(x) & Gorpus(x)) & Vumpus(x)))", "all x.(Lorpus(x) -> (Jimpus(x) | Gorpus(x) | Vubis(x)))", "(all x y.(Lorpus(x) -> Jompus(x)) & (Gorpus(y) & Vimpus(y)))"]}
{"id": "prontoqa_train_1655", "nl": "Every rompus is not a jompus.", "fol": "all x. (rompus(x) -> -jompus(x))", "prediction": ["all x.(Rompus(x) -> -Jimpus(x))", "all x.(Rompus(x) -> -Jompus(x))", "all x.(Rompus(x) -> -Jompus(x))", "all x.(Rompus(x) -> -Jimpus(x))", "all x.(Rompus(x) -> -Jompus(x))", "all x.(Rompus(x) -> -Jompus(x))", "all x.(Rompus(x) -> -Jompus(x))", "all x.(Rompus(x) -> -Jumpus(x))", "all x.(Rompus(x) -> -Jompus(x))", "all x.(Rompus(x) -> -Jompus(x))", "all x.(Rompus(x) -> -Jompus(x))", "all x.(Rompus(x) -> -Jompus(x))", "all x.(Rompus(x) -> -Jompus(x))", "all x.(Rompus(x) -> -Jompus(x))", "all x.(Rompus(x) -> -Jompus(x))", "all x.(Rompus(x) -> -Jimpus(x))"]}
{"id": "prontoqa_train_1656", "nl": "Sally is a rompus and an impus and a numpus.", "fol": "(rompus(Sally) & impus(Sally) & numpus(Sally))", "prediction": ["all x.(Sally(x) -> (Rompus(x) & Imped(x) & Numpus(x)))", "(Rompus(Sally) & Impossible(Sally) & Numpus(Sally))", "Sally is rompus, \u00ee\u015fi is imposed_________________ & -Imperial(___________________ & -Nompus______________ & __(Rompus_(Room) | Imperator_(Room)))", "All x.(Sally(x) -> (Rompus(x) & Impossible(x) & Numpus(x)))", "all x.(Sally(x) -> (Rompus(x) & Issue(x) & Numpus(x)))", "(Rompus(Sally) & Issuetus(Sally) & Issuetus(Sally))", "Sally is rompus(Sally) & Ispose(Sally) & Numpus(Sally))", "(Rompus(Sally) | Impossible(Sally) | Numpus(Sally))", "all x.(Sally(x) -> (Rrompus(x) & Ilira(x) & Numpus(x)))", "all x.(Sally(x) -> (Rompus(x) & Impermiss(x) & Numpus(x)))", "(Rompus(Sally) | Impossible(Sally) | Numpus(Sally)))", "(Rompus(Sally) & Dumptious(Sally))", "(Rompus(Sally) & Verified(Sally) & Issue(Sally) & Nomus(Sally))", "(rompus(Sally) | Issue(Sally)) | Numpus(Sally))", "all x.(Sally(x) -> (Rompus(x) | Imperator(x) | Numpus(x)))", "all x.(Sally(x) -> (Rompus(x) & Impossible(x) & Numpus(x)))"]}
{"id": "prontoqa_train_1657", "nl": "Everything that is a brimpus, a yumpus, and a lorpus is a dumpus, a tumpus, and a jompus.", "fol": "all x. ((brimpus(x) & yumpus(x) & lorpus(x)) -> (dumpus(x) & tumpus(x) & jompus(x)))", "prediction": ["all x.((Brimpus(x) & Yampus(x) & Lerus(x)) -> (Dumpus(x) | Tumpus(x) | Jompus(x)))", "all x.((Brimpus(x) | Yumpus(x) | Lorpus(x)) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))", "all x.((Brimpus(x) | Yampus(x) | Lorpus(x)) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))", "all x.((Brimpus(x) | Yumpus(x) | Lorpus(x)) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))", "all x.((Brimpus(x) | Yunus(x) | Lorpus(x)) -> (Sudus(x) & Tumpus(x) & Jompus(x)))", "all x.((Bimpus(x) | Yumpus(x) | Lorpus(x)) -> (Dumpus(x) | Tumpus(x) | Jompus(x)))", "((Brimpus(x) | Yukpus(x) | Lowerpus(x))) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))", "all x.((Brimpus(x) | Yumpus(x) | Lorpus(x)) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))", "all x y.((Brimpus(x) & Yuppus(y) & Lorpus(y)) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))", "all x.((Brimpus(x) | Yumpus(x) | Lorpus(x)) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))", "all x.((Brimpus(x) & Yuppus(x) & Lorpus(x)) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))", "all x.((Brumpus(x) | Yumpus(x) | Loompus(x)) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))", "all x.((Brimpus(x) | Yumpus(x) | Lordpus(x)) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))", "all x.((Brimpus(x) | Yampus(x) | Lorpus(x)) -> (Dumps(x) & Tumpus(x) & Jompus(x)))", "all x.((Brimpus(x) & Yampus(x) & Lorpus(x)) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))", "all x.((Blumpus(x) | Yumpus(x) | Lorpus(x)) -> (Dumpus(x) & Tumpus(x) & Jompus(x)))"]}
{"id": "prontoqa_train_1658", "nl": "Everything that is a lorpus or a zumpus or a lempus is a rompus.", "fol": "all x. ((lorpus(x) | zumpus(x) | lempus(x)) -> rompus(x))", "prediction": ["all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))", "all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))", "all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Roman(x))", "all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))", "all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))", "all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))", "all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))", "all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))", "all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))", "all x.(((Lorph(x) | Zumpus(x) | Lempus(x))) -> Rompus(x))", "all x.((Person(x) & (Lorpus(x) | Zumpus(x) | Lempus(x))) -> Roman(x))", "all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))", "all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))", "all x y.(((Lorpus(x) | Zumpus(x) | Lempus(x))) -> Rompus(y))", "all x.((Lorpus(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))", "all x.((Hero(x) | Zumpus(x) | Lempus(x)) -> Rompus(x))"]}
{"id": "prontoqa_train_1659", "nl": "Sam is a shumpus and a numpus and a zumpus.", "fol": "(shumpus(Sam) & numpus(Sam) & zumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Shumpus(x)) & (Numpus(x) & Zumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) & Numpus(x) & Zumpus(x)))", "all x.(Sumpus(x) & Numpus(x) & Zumpus(x))", "all x.(Sam(x) -> (Shumpus(x) | Numpus(x) | Zumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) & Numpus(x) & Zumpus(x)))", "(exists x.(Shumpus(x) & HasTommy(x)))", "all x,y z.((Sam(x) & Humpus(y) & Numpus(z)) -> (Est.(x) & Zumpus(x))))", "all x y.((Sam(x) & Humpus(y)) -> (Is(x,y) & Is(x,y)))", "exists x.(Sam(x) & Humpus(x) & Numpus(x) & Zumpus(x))", "(all x.(Sam(x) -> Humpus(x)) & all y.(Nompus(y) & All z.(Zubu(z)) -> Tompus(z)))", "(all x.(Sam(x) -> shumpus(x)) & (Nompus(x) & Zumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) & Numpus(x) & Zumpus(x)))", "(all x.(Shumpus(x) -> Sam(x)) & (Numpus(x) -> Zumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) & Numpus(x) & Zumpus(x)))", "(all x.(Sam(x) -> Humptus(x)) & all y.(Numpus(y) & All z.(Zumpus(z) & All w.(Sam(w) & All w.(Sam(w) & All v.(Sam(x) & All v.(Sam(v) & All w.(Sam(x) & All v.(Sam(v) & All & All.(Sam(v))))) & All.(Sam(v) & All.(Sam(v))))))", "all x.(Sam(x) -> (Shumpus(x) | Numpus(x) | Zumpus(x)))"]}
{"id": "prontoqa_train_1660", "nl": "Tumpuses are numpuses and gorpuses and grimpuses.", "fol": "all x. (tumpus(x) -> (numpus(x) & gorpus(x) & grimpus(x)))", "prediction": ["(all x.(Tumpuse(x) -> Numpuse(x)) & (Gorpus(x) | Grimpus(x))))", "all x.(Tumpuse(x) -> (Numpuse(x) | Gorpuse(x) | Grimpuse(x)))", "all x.(Tumpuse(x) -> (Numpus(x) | Gorpuse(x) | Grimpuse(x)))", "(all x.(Tumpuse(x) -> Numpuse(x)) & (Guerpus(x) | Grimpus(x))))", "all x y.((Tumpus(x) & Numpuse(y)) -> (Nocuse(x) | Gorpuse(x) | Gruppuse(x)))", "all x.(Tumpus(x) -> (Numpus(x) & Gorpuse(x) & Gruppuse(x)))", "all x.(Tumpuse(x) -> (Numpuse(x) | Gorpuse(x) | Grimpuse(x)))", "(all x.(Tumpus(x) -> Numpuse(x)) & all y.(Gorpus(y) & -Grimpus(y)))", "all x.(Tumulus(x) -> (Numpus(x) | Gorpuse(x) | Grimpuse(x)))", "all x.(Tumpus(x) -> (Numpuse(x) | Gorpuse(x) | Grimpuse(x)))", "all x.(TUMPUSE(x) -> (Numpuse(x) | Gorpuse(x) | Grimpuse(x)))", "(all x.(Tumpus(x) -> Numpus(x)) & (Gorpus(x) | Grimpus(x))))", "all x.(Tompuse(x) -> (Numps(x) | Gorpuses(x) | Grimpuses(x)))", "all x.(Tumpus(x) -> (Numpus(x) | Gorpuses(x) | Grimpuses(x)))", "all x.(Tumpus(x) -> (Numpus(x) | Gorpuse(x) | Grimpuse(x)))", "exists x.(Tumpuse(x) & Numpuse(x) & Gorpuse(x) & Grapple(x))"]}
{"id": "prontoqa_train_1661", "nl": "Polly is a wumpus or a yumpus or a grimpus.", "fol": "(wumpus(Polly) | yumpus(Polly) | grimpus(Polly))", "prediction": ["all x.(Polly(x) -> (Wumpus(x) | Yampus(x) | Grimpus(x)))", "all x.(Polly(x) -> (Wumpus(x) | Yumpus(x) | Grimpus(x)))", "all x.(Polly(x) -> (Wumpus(x) | Yumpus(x) | Grimpus(x)))", "(Weekend(Polly) | Yumpus(Polly) | Grimpus(Polly)))", "all x.(Polly(x) -> (Wumpus(x) | Kumpus(x) | Grimpus(x)))", "all x.(Polly(x) -> (AncientWumpus(x) | AncientYumpus(x) | AncientGrimpus(x)))", "all x.(Polly(x) -> (Wumpus(x) | Yompus(x) | Grimpus(x)))", "all x.(Polly(x) -> (Wumpus(x) | Yumpus(x) | Grimpus(x)))", "all x.(Polly(x) -> (Wumpus(x) | Yampus(x) | Grapple(x)))", "exists x.(Polly(x) & (Wumpus(x) | Yumpus(x) | Grimpus(x)))", "exists x.(Polly(x) & (Wumpus(x) | Yumpus(x) | Grimpus(x))))", "exists x.(LittlePolly(x) & (Wumpus(x) | Yumpus(x) | Grimpus(x)))", "(Wumpus(Polly) | Yampus(Polly) | Grimpus(Polly)))", "all x.(Polly(x) -> (Wumpus(x) | Yampus(x) | Grimpus(x)))", "all x.(Polly(x) -> (Wumpus(x) | Yampus(x) | Grumpus(x)))", "all x.(Polly(x) -> (Wumpus(x) | Yumpus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1662", "nl": "Everything that is a lorpus and a yumpus and a lempus is a brimpus, a dumpus, and a zumpus.", "fol": "all x. ((lorpus(x) & yumpus(x) & lempus(x)) -> (brimpus(x) & dumpus(x) & zumpus(x)))", "prediction": ["all x y.((Lorpus(x) & Yumpus(y) & Lempus(x)) -> (Brimpus(y) | Dumpus(y) | Zumpus(y)))", "all x.((Lorpus(x) & Yumpus(x) & Lempus(x)) -> (Brimpus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Lorpus(x) & Yampus(x) & Lempus(x)) -> (Brimpus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Lorpus(x) & Yuumpus(x) & Lempus(x)) -> (Brimpus(x) & Dumpus(x) & Zumpus(x)))", "all x y.((Larpus(x) & Yumpus(y) & Lempus(y)) -> (Brimpus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Lorpus(x) & Yupus(x) & Lempus(x)) -> (Brimpus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Order(x) & Lorpus(x)) & Yumpus(x) & Lempus(x)) -> (Brimpus(x) & Dumpus(x) & Zumpus(x)))", "all x.(Lorpus,Yumpus,Limpus) -> (Dumpus,Brimpus) & Dumpus,Zumpus))", "all x.((Lorpus(x) & Yumpus(x) & Lempus(x)) -> (Brimpus(x) | Dumpus(x) | Zumpus(x)))", "all x y z.((Lorpus(x) & Yompus(y) & Lempus(z)) -> (Brimpus(x) | Dumpus(x) | Zumpus(x)))", "all x.((Lorpus(x) & Yusumpus(x) & Lempus(x)) -> (Brimpus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Lorpus(x) | Yompus(x) | Lempus(x)) -> (Brimpus(x) | Dumpus(x) | Zumpus(x)))", "all x.(Lorpus(x) -> (YumpusSugar(x) & LempusSugar(x)))", "all x.(LorpusAndYumpusAndLempus(x) -> (Brimpus(x) | Dumpus(x) | Zumpus(x)))", "all x.((Lorpus(x) & Yumpus(x) & Lempus(x)) -> (Brimpus(x) | Dumpus(x) | Zumpus(x)))", "all x.((Lorpus(x) | Yumpus(x) | Lempus(x)) -> (Brimpus(x) & Dumpus(x) & Zumpus(x)))"]}
{"id": "prontoqa_train_1663", "nl": "Gorpuses are yumpuses, lempuses, and wumpuses.", "fol": "all x. (gorpus(x) -> (yumpus(x) & lempus(x) & wumpus(x)))", "prediction": ["all x.(Gorpuse(x) -> (Yumpuse(x) | Lempuse(x) | Wumpuse(x)))", "all x.(Gorpuse(x) -> (Yumpus(x) | Lempuse(x) | Wumpus(x)))", "all x.(Gorpuse(x) -> (Yumpus(x) | Lempuse(x) | Wumpus(x)))", "(all x.(GorpusElems(x) -> (Yumpuses(x) | Lempuses(x) | Wumpuses(x)))", "all x.(Gorpuse(x) -> (Yumpus(x) | Lempuse(x) | Wumpus(x)))", "all x.(Gorpuse(x) -> (Yumpuses(x) | Lempuses(x) | Wumpuses(x)))", "all x.(Gorpuse(x) -> (Yumpus(x) | Lempuse(x) | Wumpus(x)))", "all x y.((Gorpuse(x) & Yampus(y) & Lempuse(y)) -> (Wumpuse(x) | Yampuse(y) & Lempuse(y)))", "all x.(Gorpus(x) -> (Yumpus(x) | Lempuse(x) | Wumpus(x)))", "all x.(Wumpuse(x) & Yampus(x) & Lympuse(x))", "all x.(Gorpuse(x) -> (Yumpuse(x) | Lempuse(x) | Wumpuse(x)))", "all x.(Gorpuse(x) -> (Yumpus(x) | Lempuse(x) | Wumpus(x)))", "all x.(Gorpus(x) -> (Yumpus(x) | Lempuse(x) | Wumpus(x)))", "all x.(Gorpuse(x) -> (Yumpuses(x) | Lempuses(x) | Wumpuses(x)))", "Oftentimes, Gorpuses (yumpuses) & lempuses(y) & wumpuses(w))", "all x.(Gorpuse(x) -> (Yumpuse(x) | Lempuse(x) | Wumpuse(x)))"]}
{"id": "prontoqa_train_1664", "nl": "Sam is a rompus and Sam is not a lempus and Sam is a vumpus.", "fol": "(rompus(Sam) & -lempus(Sam) & vumpus(Sam))", "prediction": ["all x y.((Sam(x) & Rompus(x)) -> (-Limpus(y) & Sam(x) & Vuze(x)))", "(all x.(Rompus(x) -> Sam)) & (-Lempus(x) -> Sam(x)) & (Vumpus(x) -> Sam)))", "all x y z.((Sam(x) & Rompus(x) & Sam(y) & Lempus(z)) -> (-Sam(y) & Vulups(y)))", "(all x y.((Sam(x) & Room(x)) -> Unusual (Rompus(x) & -Lempus(y)) & ((Sam(x) & Umpus(x)) -> Unusual(x)))", "(all x.(Rompus(x) -> -Lempus(x)) & (Vumpus(x) -> -Rompus(x)))", "(all x.(Sams(x) -> Rompus(x)) & (Sams(x) -> -Lempus(x)) & (Sams(x) -> Vumpus(x)))", "(all x.(Rompus(x) -> SamPurpose(x)) & all y.(Lempus(y) -> SamPurpose(y)))", "all x y.((Sam(x) & Rompus(x) & Sam(y)) -> (-Lempus(y) & Vumpus(y)))", "(all x.(Sam(x) -> Rompus(x)) & -Lempus(x)) & all y.(Sam(y) -> Vumpus(y)))", "all x y.((Sam(x) & Rompus(x) & Sam(y)) -> (-Lempus(y) & Violetmus(y)))", "all x y z.((Sam(x) & Rompus(x) & Sam(y) & Lempus(y)) -> (Rompus(x) & -Limpus(y) & Vumpus(z)))", "all x y z.((Sam(x) & Rompus(x) & Sam(y) & NullMolempus(y) & Sam(z)) -> (Rompus(z) & Vumpus(z)))", "(all x.((Sam(x) & Rompus(x)) -> NoLempus(x)) & all y.((Sam(y) & Voluptu(y)) -> Vumpus(y)))", "(all x.(Sam(x) -> Roman(x)) & (Sam(x) -> -Lempus(x)) & (Sam(x) -> Vumpus(x)))", "(all x y.(Rompus(x) -> Sam(x)) & ((Lempus(y) & Sam(y))) -> Sam(y)))", "(all x.(Sam(x) -> Rompus(x)) & (-Lempus(x) & (Vumpus(x)) -> Lempus(x)))"]}
{"id": "prontoqa_train_1665", "nl": "Every rompus is a wumpus.", "fol": "all x. (rompus(x) -> wumpus(x))", "prediction": ["all x.(Rompus(x) -> Wumpus(x))", "all x.(Rompus(x) -> Wumpus(x))", "exists x.(rompus(x) & Wumpus(x))", "all x.(Rompus(x) -> Wumpus(x))", "all x.(Rompus(x) -> Hush(x))", "all x.(Rompus(x) -> Wumpus(x))", "all x.(Rompus(x) -> Wumpus(x))", "all x.(Rompus(x) -> Wumpus(x))", "exists x.(Rompus(x) & Walluce(x))", "all x.(Rompus(x) -> Wampus(x))", "all x.(Roompus(x) -> Wumpus(x))", "all x.(Rompus(x) -> Wumpus(x))", "all x y.((Rompus(x) & Wumpus(y)) -> Has(x,y))", "all x.(Rompus(x) -> Hush(x))", "all x.(Rompus(x) -> Humpus(x))", "all x.(Rompus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_1666", "nl": "Sam is a lorpus and a numpus and a rompus.", "fol": "(lorpus(Sam) & numpus(Sam) & rompus(Sam))", "prediction": ["all x y z.((Sam(x) & Lorpus(y) & Numpus(z) & Rompus(w)) -> (Lorpus(x) & Numpus(y) & Rompus(z)))", "all x.(Sam(x) -> (Lorpus(x) & Numpus(x) & Rompus(x)))", "(all x.(Sam(x) -> Llorpus(x)) & exists y.(Nompus(y) & exists z.(Rompus(z) & Into(x,y)))))", "all x.(Sam(x) -> (Lorpus(x) & Numpus(x) & Rompus(x)))", "all x y.((Sam(x) & Lorpus(x)) -> (Numpus(x) & Rompus(y)))", "all x.(Sam(x) -> (Lorpus(x) | Numpus(x) | Romanpus(x)))", "(all x.(Sam(x) -> Lorpus(x)) & exists y.(Nompus(y) & Occult(y)) & exists z.(Rompus(z) & Occult(z))))", "all x y z.((Sam(x) & Lopus(y) & Numpus(z) & Rompus(z)) -> (Lorpus(x,y) | Numpus(y) | Rompus(z))))", "all x.(Sam(x) -> (Lorpus(x) & Numpus(x) & Rompus(x)))", "(all x.(Sam(x) -> Llorpus(x)) & (Numpus(x) & Rompus(x)))", "all x.(Sam(x) -> (Lorpus(x) & Numpus(x) & Rompus(x)))", "all x y z.((Sam(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) | Numpus(z) | Rompus(z)))", "all x.(Sam(x) -> (Larpus(x) & Numpus(x) & Rompus(x)))", "exists x.(Sam(x) & Llorpus(x) & Numpus(x) & Rompus(x))", "all x y z.((Sam(x) & Lorpus(y) & Numpus(z)) | Rompus(x)) -> (Lorpus(x) & Numpus(z) & Rompus(z)))", "all x.(Sam(x) -> (Lorpus(x) & Numpus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_1667", "nl": "Sam is a shumpus, a vumpus, or a wumpus.", "fol": "(shumpus(Sam) | vumpus(Sam) | wumpus(Sam))", "prediction": ["all x.(Sam(x) -> (Shumpus(x) | Vampus(x) | Wumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) | Vumpus(x) | Wumpus(x)))", "all x.(Sam(x) -> (Mouse(x) | Mumpus(x) | Mumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) | Voompus(x) | Wumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) | Vumpus(x) | Wumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) | Voompus(x) | Wumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) | Vumpus(x) | Wumpus(x)))", "all x.(Sumpus(x) | Vumpus(x) | Wampus(x))", "all x.(Sam(x) -> (Shumpus(x) | Vumpus(x) | Wumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) | Voluptus(x) | Wampus(x)))", "all x.(Sam(x) -> (Shumpus(x) | Vumpus(x) | Wumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) | Vukus(x) | Wumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) | Voompus(x) | Wumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) | Volumpus(x) | Wumpus(x)))", "all x.(Sam(x) -> (Shumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Sam(x) -> (Shumpus(x) | Virgil(x) | Wumpus(x)))"]}
{"id": "prontoqa_train_1668", "nl": "Everything that is a dumpus, a vumpus, or a wumpus is a yumpus, a tumpus, and a gorpus.", "fol": "all x. ((dumpus(x) | vumpus(x) | wumpus(x)) -> (yumpus(x) & tumpus(x) & gorpus(x)))", "prediction": ["all x.((Dumpus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) | Tumpus(x) | Gorpus(x)))", "all x.((Dumpus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) | Tumpus(x) | Gorpus(x)))", "all x.((Dumpus(x) | Vumpus(x) | Tumpus(x)) -> (Yumpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Dumpus(x) | Vumpus(x) | Wumpus(x)) -> (yumpus(x) & tumpus(x) & gorpus(x)))", "all x.((Dumpus(x) | Volumpus(x) | Wumpus(x)) -> (Yumpus(x) | Tumpus(x) | Gorpus(x)))", "all x.((Dumpus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) | Tumpus(x) | Gorpus(x)))", "all x.((Dumpus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) | Tumpus(x) | Dorpus(x)))", "all x.((Dupus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) | Tumpus(x) | Gorpus(x)))", "all x.((Dumpus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) | Tumpus(x) | Gorpus(x)))", "all x.((Dumpus(x) | Vubis(x) | Wumpus(x)) -> (Yumpus(x) | Tumpus(x) | Gorpus(x)))", "all x.((Dumpus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) | Tumpus(x) | Gorpus(x)))", "all x.((Dumpsus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) & Tumpus(x) & Gorpus(x)))", "all x.(((Dumpus(x) | Vumpus(x) | Wumpus(x))) -> (Yumpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Dumpus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) & Tumpus(x) & Gorpus(x)))", "all x.((Dumpus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) | Tumpus(x) | Gorpus(x)))", "all x.((Dupus(x) | Vumpus(x) | Wumpus(x)) -> (Yumpus(x) | Tumpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1669", "nl": "Polly is a dumpus.", "fol": "dumpus(Polly)", "prediction": ["Polly is Dumpus(Polly)", "All x.(Polly(x) -> Dumpus(x))", "all x.(Polly(x) -> Dumpus(x))", "(Dumps(Polly) & -Debris(Poly))", "all x.(Polly(x) -> Dumpus(x))", "all x.(Polly(x) -> Dumpus(x))", "(Leise(Polly,WaitingFor(Polly))", "(Dumpus(Polly))", "(Dumpus(Polly)", "all x.(Polly(x) -> Dumpus(x))", "Polly is a Dumpus.", "(Dumpus(Polly) -> Dumpus(Polly))", "exists x.(Polly(x) & Dumpus(x))", "all x.(Polly(x) -> Dumpus(x))", "Polly is a Dumpus(Polly)", "polly(Polly) -> Dumpus(Polly))"]}
{"id": "prontoqa_train_1670", "nl": "Each vumpus is a zumpus.", "fol": "all x. (vumpus(x) -> zumpus(x))", "prediction": ["all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vuke(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "-tompus(v) -> BecomesVumpus(z))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Tompus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Tompus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_1671", "nl": "Wren is an impus and Wren is a wumpus and Wren is not a zumpus.", "fol": "(impus(Wren) & wumpus(Wren) & -zumpus(Wren))", "prediction": ["all x y.((Wren(x) & Wren(y)) -> (Impossible(x) & Wumpus(y) & -Zwerpus(z)))", "(all x y.((Wren(x) & IsIllegal(x)) -> Wumpus(y)) & ((Wren(x) & -Zumpus(y)) -> Wren(x)))", "(all x.(Wren(x) -> Impossible(x)) & all y.(Wren(y) -> Wumpus(y)) & all z.(Wren(z) | Zumpus(z))))", "all x y.((Wren(x) & Wren(y)) -> (Immersion(x) & Wumpus(y) & -zuspus(y)))", "all x y z.((Wren(x) & Wren(y) & (Impossible(x) | Wumpus(y)) | -Zumpus(z))) -> NoRules(x))", "(all x.(Wren(x) -> Impossible(x)) & (Wren(x) -> Wumpus(x)) & (Wren(x) -> -Zumpus(x))))", "(all x y.((Wren(x) & Zombie(y)) -> Is(x,y)) & ((Wren(x) & Wren(x)) -> Wumpus(x)))", "(all x.(Wren(x) -> Implicator(x)) & all y.(Wren(y) -> Wumpus(y)) & all z.(Wren(z) -> -Zumpus(z))))", "(all x y.(Wren(x) -> Is(x,y)) & ((Wren(y) & Wumpus(y)) | (-Tompus(y)))))", "all x y z.((Wren(x) & Wren(y) & Dumpus(z)) -> (Impossible(x) & Wren(y) & -Zumpus(y)))", "all x y z.((Wren(x) & Wren(y) & Zumpus(z)) -> (Impossible(x) & Wren(y) & -Impossible(y)))", "(all x.(Wren(x) -> Impedient(x)) & all y.(Wren(y) -> Wumpus(y)) & all z.(Wren(z) -> -Zumpus(z))))", "(all x.(Wren(x) -> Impedient(x)) & (Wren(x) -> Humpus(x)) & (Wren(x) -> -Tompus(x)))", "(all x y.(Wren(x) -> Impossible(x)) & (Wren(y) -> Wumpus(y)) & -Zumpus(y)))", "(all x.(Wren(x) -> Is(x)) & all y.(Wren(y) -> Wumpus(y))) & all z.(Wren(z) -> -Zumpus(z))))", "(all x.(Wren(x) -> Impossible(x)) & (Wren(x) -> Wumpus(x)) & -Zumpus(x)))"]}
{"id": "prontoqa_train_1672", "nl": "Wren is a brimpus or Wren is a rompus or Wren is not a vumpus.", "fol": "(brimpus(Wren) | rompus(Wren) | -vumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Brimpus(x)) | (Wren(x) -> Rompus(x)) | (Wren(x) -> -Vumpus(x))))", "all x y.((Wren(x) & Brimpus(x)) | (Wren(y) & Rompus(y)) | (Wren(y) & -Vumpus(y))))", "all x y.((Wren(x) & Brimpus(x)) | (Wren(y) & Rompus(y)) | (-Wren(y) & Vumpus(y))))", "all x y.((Wren(x) & Brimpus(x)) | (Rompus(y) | -Vumpus(y))))", "(all x.(Wren(x) -> Brimpus(x)) | (Rompus(x) | -Vumpus(x))))", "(all x.(Wren(x) -> Brimpus(x)) | (Wren(x) -> Rompus(x)) | (Wren(x) -> -Vumpus(x))))", "(or ((Wren(w) & Brimpus(w)) | ((Wren(w) & Rompus(w))) | (-Wren(w) & Vuze(w)))))", "(all x.(Wren(x) -> (Brimpus(x) | Rompus(x))) | (Wren(x) -> -Vumpus(x))))", "(all x.(Wren(x) -> Brimpus(x)) | (Wren(x) -> Rompus(x)) | (Wren(x) -> -Vumpus(x))))", "((Wren(Wren) & Brumpus(Wren)) | ((Wren(Wren) & Rompus(Wren))) | (-Wren(Wren) & Volumpus(Wren))))", "(Either way, i.e., Brimpus(w) | Rompus(w) | -Vumpus(w)))", "(BothWren(x) -> (Brimpus(x) | Rompus(x) | -Vumpus(x)))", "all x.(Wren(x) -> ((Brimpus(x) | Rompus(x) | -Vampumpus(x))))", "all x.(Wren(x) | (Brimpus(x) | Rompus(x) | -Vumpus(x)))", "all x.((Wren(x) & Brimpus(x)) | (Rompus(x) | -Vumpus(x))))", "all x y.((Wren(x) & Brimpus(y)) | (Wren(x) & Rompus(y)) | (Wren(x) & -Vimpus(x))))"]}
{"id": "prontoqa_train_1673", "nl": "Each shumpus is a lempus, a brimpus, and a yumpus.", "fol": "all x. (shumpus(x) -> (lempus(x) & brimpus(x) & yumpus(x)))", "prediction": ["all x.(Shumpus(x) -> (Lempus(x) & Brimpus(x) & Yumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) & Brimpus(x) & Yumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) & Brimpus(x) & Yumpus(x)))", "exists x.(Shumpus(x) & is(x,lempus) & is(x,brimpus)) & exists y.(Yumpus(y) & is(y)))", "((Shumpus(s) | Brimpus(s) | Yumpus(s)))", "all x.(Shumpus(x) -> (Lempus(x) | Brimpus(x) | Yumpus(x)))", "all x.(Shumpus(x) -> (lempus(x) & brimpus(x) & yumpus(y)))", "all x.(Shumpus(x) -> (Lempus(x) & Brimpus(x) & Yumpus(x)))", "(all x.(Shumpus(x) -> Lempus(x)) & all y.(Brimpus(y) -> Yumpus(y)))", "all x.(Shumpus(x) -> (Lempus(x) & Brimpus(x) & Yumpus(x)))", "all x.(Shumpus(x) & Lempus(x) & Brimpus(x) & Yumpus(x))", "all x.(Shumpus(x) -> (Lempus(x) & Brimpus(x) & Yumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) | Brimpus(x) | Yumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) | Brimpus(x) | Yumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) | Brimpus(x) | Yumpus(x)))", "all x.(Shumpus(x) -> (Lempus(x) & Brimpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1674", "nl": "Sally is a yumpus, a lempus, or an impus.", "fol": "(yumpus(Sally) | lempus(Sally) | impus(Sally))", "prediction": ["all x.(Sally(x) -> (Yumpus(x) | Lempus(x) | Improviser(x)))", "all x.(Sally(x) -> (Yumpus(x) | Lempus(x) | Impossible(x)))", "all x y.((Sally(x) & (Yumpus(x) | Lempus(x) | Issue(x))) -> HasYoumpus(x))", "Sally (yumpus) | Lempus(y) | Imperators(y))", "all x.(Sally(x) -> (Yumpus(x) | Lempus(x) | Imperator(x)))", "all x.(Sally(x) -> (Yumpus(x) | Lempus(x) | Involves(x)))", "all x.(Sally(x) -> (yumpus(x) | lempus(x) | impus(x)))", "all x.(Sally(x) -> (Yumpus(x) | Lempus(x) | Issue(x)))", "all x.(Sally(x) -> (Yumpus(x) | Lempus(x) | Impossible(x)))", "all x.(Sally(x) -> (Yumpus(x) | Lempus(x) | Impsico(x)))", "all x.(Sally(x) -> (Yumpus(x) | Lempus(x) | Impossible(x)))", "all x.(Sally(x) -> (Yumpus(x) | Lempus(x) | Imperator(x)))", "all x.(Sally(x) -> (Yumpus(x) | Lempus(x) | Impossible(x)))", "all x.(Sally(x) -> (Yumpus(x) | Lempus(x) | Impossible(x)))", "(Yumpus(Sally) | Lempus(Sally) | Impossible(Sally)))", "all x.(Sally(x) -> (Yumpus(x) | Lempus(x) | Imperator(x)))"]}
{"id": "prontoqa_train_1675", "nl": "Impuses are lempuses.", "fol": "all x. (impus(x) -> lempus(x))", "prediction": ["all x.(Imbus(x) -> Lempuse(x))", "all x.(Impuse(x) -> Lempuse(x))", "all x.(Impuse(x) -> Lempuse(x))", "all x.(Impuse(x) -> Lempuse(x))", "all x.(Impus(x) -> Lempuse(x))", "all x.(Impuse(x) -> Lempuse(x))", "all x.(Impus(x) -> Lempuse(x))", "all x.(Impuse(x) -> Lempuse(x))", "all x.(Impus(x) -> Lempuse(x))", "all x.(Impust(x) -> Lempuse(x))", "all x.(Impuse(x) -> Lempuse(x))", "all x.(Impus(x) -> Lempuse(x))", "all x.(Lampus(x) -> Impuse(x))", "all x.(Lampuse(x) -> Impeduse(x))", "all x.(Impuse(x) -> Lempuse(x))", "all x.(Impuse(x) -> Lempuse(x))"]}
{"id": "prontoqa_train_1676", "nl": "Wren is a grimpus and Wren is not a lempus and Wren is a zumpus.", "fol": "(grimpus(Wren) & -lempus(Wren) & zumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Grappa(x)) & (-Lempus(x)) & (-Wren(x) -> Zumpus(x))))", "all x y z.((Wren(x) & Grimpus(x) & Wren(y) & Zumpus(z)) -> (Mammal(x) & -Lempus(y) & Zumpus(z)))", "all x y z.((Wren(x) & Grimpus(x) & Wren(y) & Zumpus(z)) -> (-Lempus(y) & Grumpy(x) & Zumpus(y)))", "all x y z.((Arctic(x) & Grimpus(x) & Wren(y) & Lempus(y) & Zumpus(z)) -> (Smooth(y) & -Lempus(y) & Zumpus(z)))", "all x y z.((Wren(x) & Grimpus(x) & Wren(y) & Zumpus(z)) -> (-Lempus(y) & Zumpus(z)))", "all x y z.((Wren(x) & Grimpus(x) & Wren(y) & Zumpus(z)) -> (-Lempus(y) & Grimpus(x) & Zumpus(y)))", "all x y.((Wren(x) & Grimpus(x) & Wren(y)) -> (-Lempus(y) & Zumpus(y)))", "(all x y z.((Wren(x) & Grapple(y) & Stem(z)) -> (WrenStill(x,y)) & ((WrenStill(z,x) & Stem(z))) -> (Trumpus(x))))", "all x y.((Wren(x) & Grypus(x)) -> (Smiles(x) & -Lempus(y) & Zumpus(x)))", "(all x y.((Wren(x) & Grimpus(x)) -> Lempus(y)) & ((Wren(x) & Zumpus(x)) -> Grimpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & (Wren(x) -> -Lempus(x)) & (Wren(x) -> Zumpus(x)))", "all x y.((Cruz (x) & Wren(y)) -> (IsGrimpus(x) & -IsLempus(y) & IsTopsy(y)))", "all x y.((Wren(x) & Grimpus(x) & Wren(y)) -> (-Lempus(y) & Zumpus(y)))", "(all x.(Wren(x) -> Grimpus(x)) & (-Lempus(x) & -Zumpus(x))))", "(all x.(Wren(x) -> Grimpus(x)) & (-Lempus(x) & Zumpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & (-Lempus(x) & -Towerpus(x)))"]}
{"id": "prontoqa_train_1677", "nl": "Wren is a brimpus, Wren is not an impus, or Wren is a shumpus.", "fol": "(brimpus(Wren) | -impus(Wren) | shumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Brimpus(x)) & (-Wren(x) -> IsNotIssue(x)) | (-Wren(x) -> Humpus(x))))", "(all x.(Wren(x) -> Brimpus(x)) | (-Impossible(x)) | (-Impossible(x) & Shumpus(x))))", "all x.((Wren(x) & Brimpus(x)) | (-Impossible(x) | Humpus(x))))", "all x.((Wren(x) -> (Brimpus(x) | -Impossible(x) | Humpus(x)))", "(all x.(Wren(x) -> Brimpus(x)) & (-Illegal(x) | Humpus(x))))", "(all x.(Wren(x) -> Brimpus(x)) | (-Wren(x) -> ImmediatelyIssued(x)) | (-Wren(x) -> Humpus(x))))", "all x y.((Wren(x) & Brimpus(x)) | (-Impossible(x) & Shumpus(y))))", "all x y z.(Wren(x) & ((Briumpus(x) | IsNotImpossible(y)] | Shumpus(z)))", "(all x.(Wren(x) -> Brimpus(x)) & (-Is(x) -> Essopress(x)) | (-Is(x) & Is(x))))", "all x.((Wren(x) & Brimpus(x)) | (-Is(x) & Is(x)) | (-Is(x) & Is(x)) | (-Is(x) & Is(x)))))", "all x y.((Wren(x) & Bumpus(x)) | (-Is(x,y) & Is(y))) | (-Is(x,y) & Is(x,y))))", "all x y z.((Wren(x) & Brimpus(x) & Wren(y) & (-IsOlimped(y) | Hush(z))) -> (Brumpus(y) | Shampus(z))))", "all x y.((Wren(x) & Bispan(x)) | (-IsIsBrimpus(y) | (-IsIsDesirator(y) | Shumpus(y)))))", "all x.((Wren(x) & Brimpus(x)) | (-Impulsionist(x) | Humpus(x))))", "all x.((Wren(x) & brimpus(x)) | (-Impossible(x) | Humpus(x))))", "(all x.(Wren(x) -> Brimpus(x)) | (-(Wren(x) & Impossible(x))) | (-(Wren(x) & Impossible(x)))))"]}
{"id": "prontoqa_train_1678", "nl": "Everything that is a vumpus, a dumpus, and a yumpus is a shumpus, a gorpus, and a tumpus.", "fol": "all x. ((vumpus(x) & dumpus(x) & yumpus(x)) -> (shumpus(x) & gorpus(x) & tumpus(x)))", "prediction": ["all x.((Vumpus(x) & Dumpus(x) & Yumpus(x)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))", "all x.((Vumpus(x) & Dumpus(x) & Yumpus(x)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))", "all x.((Vumpus(x) & Dumpus(x) & Yumpus(x)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))", "all x.((Vumpus(x) | Dumpus(x) | Yugpus(x)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))", "all x.((Vumpus(x) | Dumpus(x) | Yumpus(x)) -> (Shumpus(x) & Gorpus(x) & Totumpus(x)))", "all x y.((Vumpus(x) & Dumpus(y) & Yumpus(z)) -> (Shumpus(x) & Morpus(x) & Tumpus(x)))", "all x.((Vumpus(x) & Dumpus(x) & Yumpus(x)) -> ((Shumpus(x) | Gorpus(x) | Tumpus(x))))", "all x.((Vumpus(x) | Dumpus(x) | Yumpus(x)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))", "all x.((Vimpus(x) & Dumpus(x) & Yuppus(x)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))", "all x.((Vampus(x) & Dumpus(x) & Yumpus(x)) -> (Shumpus(x) | Gorpus(x) | Tumulus(x)))", "all x.((Vumpus(x) & Dumpus(x) & Yumpus(x)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))", "all x.((Voompus(x) & Dumpus(x) & Yumpus(x)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))", "all x.((Vumpus(x) | Dumpus(x) | Yumpus(x)) -> (Shumpus(x) | Gorpus(x) | Tumpus(x)))", "all x y.(Vumpus(x) & Dumpus(x) & Yumpus(y)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))", "all x.((Vumpus(x) | Dumpus(x) | Yumpus(x)) -> (Shumpus(x) & Gorpus(x) & Tumpus(x)))", "all x y.((Vumpus(x) & Dumpus(x) & Yampus(x)) -> (Shumpus(y) | Gorpus(y) | Tumpus(y)))"]}
{"id": "prontoqa_train_1679", "nl": "Everything that is a grimpus, a brimpus, or a yumpus is a numpus.", "fol": "all x. ((grimpus(x) | brimpus(x) | yumpus(x)) -> numpus(x))", "prediction": ["all x.((Smopus(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x.((Grumps(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x.((StrictPumpus(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x.((Smearpus(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x.((Grimpus(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x.((Smoke(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x.((Crampus(x) | Brimpus(x) | Yuppus(x)) -> Numpus(x))", "all x.((Grimpus(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x.(((Grumpus(x) | Brimpus(x) | Yumpus(x))) -> Numpus(x))", "all x.((Grimpus(x) | Brimpus(x) | Yumphus(x)) -> Numpus(x))", "all x.((AggressiveCrappy(x) | AmbientCrappy(x) | AmbientBrumpus(x) | AmbientYumpus(x)) -> Numpus(x))", "all x.((Grampus(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x.((Grurpus(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x.((Smaller(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x.((Grampus(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))", "all x.((Crumpus(x) | Brimpus(x) | Yumpus(x)) -> Numpus(x))"]}
{"id": "prontoqa_train_1680", "nl": "Sam is not a dumpus and Sam is a jompus and Sam is a gorpus.", "fol": "(-dumpus(Sam) & jompus(Sam) & gorpus(Sam))", "prediction": ["(all x.(Sam(x) & -Dumpus(x)) & (Jompus(x) | Gorpus(x))))", "all x y z.((Sam(x) | (Dumps(y) | Jompus(y) | Gorpus(z))) -> (-Dumps(x) & -Jumpus(y) & -Frogpus(z) & -Lilac+Phoenix(z)))", "(all x y z.((Sam(x) & Dumpus(y)) -> -Dumpus(x)) & ((Sam(z) & Jompus(z)) -> Gorpus(z)))", "(all x.((Sam(x) & -Dumpus(x)) -> Jompus(x)) & all y.((Sam(y) & Gorpus(y)) -> Gorpus(y)))", "all x.((Sam(x) & -Dumpus(x)) -> (Jumpus(x) & Gorpus(x)))", "(all x.(Sam(x) -> -Dumpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Gorpus(x))))", "(all x y.((Sam(x) & Dumpus(x)) -> -Dumpus(x)) | (-Dumpus(y) & Jompus(y)) & (Horpus(y)) -> Gorpus(y)))", "(all x y z.((Sam(x) & Dumpus(y) & Jompus(z)) -> -Dumpus(x)) & ((Sam(x) & Gorpus(x)) -> Gorpus(x)))", "all x y z.((Sam(x) & Dumpus(y) & Jompus(z)) -> (-Dumpus(x) & Hampus(y) & Gorpus(z)))", "(all x y.((SameDay(x) & -Dumpus(x)) -> Jompus(x)) & ((SameDay(x) & Gorpus(y)) -> Gorpus(y)))", "(all x.(Dumus(x) -> -Dumpus(x)) & (Jimpus(x) -> Gorpus(x)))", "(all x.(Sam(x) -> -Dumpus(x)) & ((Sam(x) & Jompus(x)) -> Gorpus(x)))", "all x y z.((Sam(x) & Dumpus(y) & Jompus(z)) -> (-Dumps(x) & -Jumpus(x) & Gorpus(x)))", "(all x.(Sam(x) -> -Dumpus(x)) & (Jimpus(x) | Gorpus(x))))", "all x.((Sam(x) & -Dumpus(x)) -> (Pompus(x) & Gorpus(x)))", "all x.((Sam(x) & -Dupus(x) & Jompus(x) & Gorpus(x)) -> -Sam(x))"]}
{"id": "prontoqa_train_1681", "nl": "Sam is not a lempus and Sam is a vumpus and Sam is a jompus.", "fol": "(-lempus(Sam) & vumpus(Sam) & jompus(Sam))", "prediction": ["all x y z.((Sam(x) & Lempus(y) & Vumpus(z)) -> (-Lempus(x) & Vumpus(x) & Jompus(x)))", "all x y z.((Sam(x) & Lempus(y) & Vumpus(z)) -> (-SamLempus(x) & -SamJimpus(y)))", "all x y z.((Sam(x) & Lempus(y) & Lumpus(z) & Jompus(x)) -> (-Lempus(x) & -Vumpus(y) & -Jumpus(z)))", "(all x.(Sam(x) -> -Lempus(x)) & (Sam(x) -> Vumpus(x)) & (Sam(x) -> Jompus(x)))", "all x y z.((Sam(x) & Lempus(y) & Vumpus(z)) -> (-Lempus(x) | (Vumpus(x) | Jompus(x))))", "(all x.(Sam(x) -> -Lempus(x)) & ((Sam(x) & Vumpus(x)) | (Sam(x) & Jompus(x)))))", "all x ((Sam(x) & -Lempus(x)) -> Voompus(x)) & ((Sam(x) & Jompus(x)) -> Jompus(x)))", "all x y z.((Sam(x) & Lempus(y) & Vampire(z)) -> (-Lempus(x) & -Vumpus(x) & -Jumpus(x)))", "(all x.(sam(x) -> -Lempus(x)) & all y.(sam(y) -> Pumpus(y)) & all z.(sam(z) -> Jompus(z))))", "(all x.(Sam(x) -> -Lempus(x)) & (Sam(x) -> Vulmpus(x)) & (Sam(x) -> Jompus(x)))", "all x y z.((Sam(x) & Lempus(y) & Vumpus(z)) -> (-Lempus(x) & Vumpus(x) & Jompus(x)))", "all x y z.((Sam(x) & Lempus(y) & Umpus(z)) -> (-Lempus(x) & Vumpus(x) & Jompus(x)))", "all x.(Sam(x) & -Lempus(x) & Sam(x) & Vux(x) & Sam(x))", "(both Sam and Sam(sam) & -Lempus(s)) & exists y.(Vumpus(y) & -Jimpus(z))) & exists w.(Jimpus(w) & (Sam(w) | Sam(w)))))", "(all x.(Sam(x) -> -Lempus(x)) & all y.(Vumpus(y) & All z.(Jampus(z) & -Lempus(y)) & All w.(Sam(w) -> -Vumpus(z))))", "(all x.(Sam(x) -> -Lempus(x)) & (Sam(x) -> Vumpus(x)) & (Sam(x) -> jompus(x)))"]}
{"id": "prontoqa_train_1682", "nl": "Sam is not a grimpus and Sam is a numpus and Sam is not a zumpus.", "fol": "(-grimpus(Sam) & numpus(Sam) & -zumpus(Sam))", "prediction": ["(all x y.(Grampus(x) -> -Grimpus(x)) & (Numerus(y) -> -zumpus(y)))", "(-Grimpus(Saman) & Numpus(Saman) & -Zumpus(Saman))", "(all x.(Sam(x) -> -Grimpus(x)) & all y.(Sam(y) -> Numpus(y)) & all z.(Sam(z) -> -Zimpus(z))))", "all x y z.((Sam(x) & Grimpus(y) & Numpus(z)) -> (-Sgrimpus(x) & -Sumpus(y) & -Sumpus(z)))", "all x y z.((Sam(x) & Grimpus(y) & Numpus(z)) -> (-Smooth(x) | -Zumpus(x)))", "(all x.(Sam(x) -> -Grimpus(x)) & all y.(Sam(y) -> Numpus(y)) & all z.(Sam(z) -> -Zumpus(z))))", "(all x.(Sam(x) -> -Grimpus(x)) & (Sam(x) -> Numpus(x)) & (Sam(x) -> -Zumpus(x))))", "all x y z.((Sam(x) & Grimpus(y) & Nobu(z)) -> (-Grimpus(x) & -Numpus(x) & -Zumpus(x)))", "all x y z.((Sam(x) & Grimpus(y) & Numpus(z)) -> (-Smokey(x) & -Sumpus(y)))", "all x y.((Sam(x) & Grimpus(x)) -> (-Sam(x) & Numpus(x) & -Zumpus(y)))", "(all x.(Sam(x) -> -Grimpus(x)) & (Sam(x) -> Numpus(x)) & (Sam(x) -> -Zumpus(x)))", "(all x.(Sam(x) -> -Grimpus(x)) & (Sam(x) -> Numpus(x)) & (Sam(x) -> -Zumpus(x)))", "(all x.(Sam(x) -> -Grimpus(x)) & (Numpus(x) & -Zumpus(x)))", "(all x.(Sam(x) -> -Grimpus(x)) & all y.((Sam(y) & Numpus(y))) -> -Zimpus(y)))", "(all x.(Sam(x) -> -Grimpus(x)) & all y.(Sam(y) -> Numpus(y))) & all z.(Sam(z) -> -Zumpus(z)))", "is different(sam,sam,scarp) & -Grimpus(sam,ex) & Numpus(sam,ex) & not zumpus(sam,scarp))"]}
{"id": "prontoqa_train_1683", "nl": "Zumpuses are grimpuses, vumpuses, and sterpuses.", "fol": "all x. (zumpus(x) -> (grimpus(x) & vumpus(x) & sterpus(x)))", "prediction": ["all x.(Zumpus(x) -> (Smoky(x) | Vampuse(x) | Sterpuse(x)))", "all x.(Zumpus(x) -> (Spurpuse(x) | Vampuse(x) | Sterpuse(x)))", "all x.(Zumpuse(x) -> (Grimpuse(x) | Vampuse(x) | Sterpuse(x)))", "all x.(Zumpuse(x) -> (Crampuse(x) | Vampuse(x) | Sterpuse(x)))", "all x.(Zumpus(x) -> (Scraperpus(x) | Vampus(x) | Sterpus(x)))", "all x.(Zumpus(x) -> (Grimpuse(x) | Vampuse(x) | Sterpuse(x)))", "all x.(Azmpus(x) -> (Smockpuse(x) | Vampuse(x) | Sterepuse(x)))", "all x.(Zumpus(x) -> (Smoochpuse(x) | Vampus(x) | Sterpuse(x)))", "all x.(Zumpus(x) -> (Smallpuse(x) | Vampuse(x) | Sterpuse(x)))", "all x.(Zumpus(x) -> (Grimpus(x) | Vacampus(x) | Sterpus(x)))", "all x.(Zumpuse(x) -> (Fumpuse(x) | Mulpuse(x) | Sterpuse(x)))", "all x.(Zumpus(x) -> (Grimpus(x) | Vupus(x) | Specterpus(x)))", "all x.(Zumpus(x) -> (Smoochile(x) | Vampuse(x) | Sterpuse(x)))", "all x.(Zumpus(x) -> (Smooks(x) & Vempuse(x) & Sterpuse(x)))", "all x.(Zumpus(x) -> (Grimpus(x) | Vampuse(x) | Sterpus(x)))", "all x.(Zumpus(x) -> (Smoke(x) | Vulpuse(x) | Sterpuse(x)))"]}
{"id": "prontoqa_train_1684", "nl": "Wren is a sterpus or a yumpus or a grimpus.", "fol": "(sterpus(Wren) | yumpus(Wren) | grimpus(Wren))", "prediction": ["all x.(Wren(x) -> ((Sterpus(x) | Yumpus(x) | Grimpus(x))))", "all x.(Wren(x) -> (Sterpus(x) | Yupus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Storpus(x) | Yumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Sterpus(x) | Yampus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Sterpus(x) | Yumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (St\u00e9rus(x) | Yumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> ((Sterpus(x) | Yumpus(x) | Grimpus(x))))", "all x.(Wren(x) -> ((Sterpus(x) | Yumpus(x) | Gruppus(x))))", "all x.(Wren(x) -> (Sterpus(x) | Yeumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Sterepus(x) | Yumppus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Sterpus(x) | Yampus(x) | Grimpus(x)))", "all x.(Wren(x) -> ((Sterpus(x) | Yumpus(x) | Grimpus(x))))", "all x.(Wren(x) -> (Starpus(x) | Yumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Sterpus(x) | Yompus(x) | Gruppus(x)))", "all x.(Wren(x) -> (Sterpus(x) | Yumppus(x) | Grimpus(x)))", "all x.(Wren(x) -> exists y.(Sterpus(y) | Yuppus(y) | Grimpus(y)))"]}
{"id": "prontoqa_train_1685", "nl": "Everything that is a zumpus, a sterpus, or an impus is a shumpus and a rompus and a dumpus.", "fol": "all x. ((zumpus(x) | sterpus(x) | impus(x)) -> (shumpus(x) & rompus(x) & dumpus(x)))", "prediction": ["all x.((Zumpus(x) | Sterpus(x) | Impossible(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) | Sterpus(x) | Impossible(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) | Sterpus(x) | Imperative(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Bumpus(x) | Sterpus(x) | IsImpossible(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Shumpus(x) | Servpus(x) | IsImpossible(x)) & Rimpus(x) & Dumpus(x))", "all x.((Tompus(x) | Sterpus(x) | Expeditor(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Zumpus(x) | Sterpus(x) | Objet(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) | Sterepus(x) | IsImpossible(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) | Sterpus(x) | Impossible(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) | Sterpus(x) | Impossible(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Zumpus(x) | Sterpus(x) | Impossible(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) | Sterpus(x) | IsImpossible(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) | Sterpus(x) | IsImpossible(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) | Sterpus(x) | Impossible(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Zumpus(x) | Sterpus(x) | IsImproved(x)) -> (Shumpus(x) & Rhopus(x) & Dumpus(x)))", "all x.((Tabulus(x) | Sterpus(x) | Imposer(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))"]}
{"id": "prontoqa_train_1686", "nl": "Everything that is a tumpus or a shumpus or a vumpus is a numpus, a zumpus, and a yumpus.", "fol": "all x. ((tumpus(x) | shumpus(x) | vumpus(x)) -> (numpus(x) & zumpus(x) & yumpus(x)))", "prediction": ["all x.((Tumpus(x) | Shimpus(x) | Vumpus(x)) -> (Numpus(x) & Zumpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Simpus(x) | Vampus(x)) -> (Numpus(x) & Zumpus(x) & Yumpus(x)))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> (Numpus(x) & Zumpus(x) & Yumbos(x)))", "all x.((Tumpus(x) | Humpus(x) | Vumpus(x)) -> (Numerus(x) & Tompus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Vumpus(x)) -> (Mampus(x) & Zumpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Vumpus(x)) -> (Numpus(x) & Zumpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Vumpus(x)) -> (Numpus(x) & Zumpus(x) & Yampus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Vumpus(x)) -> (Numpus(x) & Zumpus(x) & Yumpus(x)))", "all x y z w.((Tumpus(x) | Shumpus(x) | Voompus(x)) -> (Nome(y) & Zumpus(z) & Yumpus(w)))", "all x.((Tumpus(x) | Humpus(x) | Vumpus(x)) -> (Numpus(x) & Zumpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Vumpus(x)) -> (Numpus(x) & Zumpus(x) & Yampus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Vumpus(x)) -> (Numpus(x) | Zumpus(x) | Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Voompus(x)) -> (Sumpus(x) | Zumpus(x) | Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Vumpus(x)) -> (Numpus(x) & Zumpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Humpus(x) | Vumpus(x)) -> (Nompus(x) & Zumpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Shumpus(x) | Viewpus(x)) -> (Numpus(x) & Zumpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1687", "nl": "Polly is a vumpus.", "fol": "vumpus(Polly)", "prediction": ["all x.(Vimpus(x) -> Polly(x))", "(Vumpus(Polly)", "Polly is a Vumpus.", "All x.(Vumpus(x) -> Polly(x))", "all x.(Vumpus(x) -> Polly(x))", "All x.(Polly(x) -> AVumpus(x))", "Polly is a Voompus.", "all x.(Vampus(x) -> Polly(x))", "Polly is a vipse.", "all x.(Ploy(x) -> Vumpus(x))", "all x.(Vempus(x) -> Polly(x))", "all x.(Pollly(x) -> Vumpus(x))", "all x.(Vumpus(x) -> Polly(x))", "Polly is vumpus.", "all x.((Polly(x) & Vampus(x)) -> DoesNotRun(x))", "exists x.(Polly(x) & Vulpu(x))"]}
{"id": "prontoqa_train_1688", "nl": "Everything that is a sterpus, a vumpus, and a numpus is a dumpus, a shumpus, and a grimpus.", "fol": "all x. ((sterpus(x) & vumpus(x) & numpus(x)) -> (dumpus(x) & shumpus(x) & grimpus(x)))", "prediction": ["all x.((Royal(x) & Sterpus(x) & Vumpus(x) & Numpus(x)) -> (Dumpus(x) & Shumpus(x) & Grimpus(x)))", "all x.((Shorpus(x) | Vumpus(x) | Numpus(x)) -> (Dumpus(x) & Humpus(x) & Grimpus(x)))", "all x.(((Steerpus(x) | Vulmpus(x) | Numpus(x))) -> (Dumpus(x) | Skumpus(x) | Grimpus(x)))", "all x.((Sterepus(x) & Voompus(x) & Numpus(x)) -> (Dumpus(x) & Humpus(x) & Grimpus(x)))", "all x.((Sterpus(x) | Vumpus(x) | Nompus(x)) -> (Dumpus(x) & Shumpus(x) & Grimpus(x)))", "all x.((Sterpus(x) | Vumpus(x) | Numpus(x)) -> (Dumpus(x) & Humpus(x) & Grimpus(x)))", "all x.((Sterpus(x) | Voompus(x) | Nompus(x)) -> (Dumpus(x) & Shumpus(x) & Grimpus(x)))", "all x.((Storpus(x) | Vumpus(x) | Numpus(x)) -> (IsDumpus(x) & IsShumpus(x) & IsGrimpus(x)))", "all x.((Sterpus(x) | Voompus(x) | Numpus(x)) -> (Dumpus(x) | Humpus(x) | Grimpus(x)))", "all x.((Sterpus(x) & Vumpus(x) & Numpus(x)) -> (Dumpus(x) & Humpus(x) & Grimpus(x)))", "all x.((Sterpus(x) | Vacpus(x) | Numpus(x)) -> (Dumpus(x) & Shampus(x) & Grimpus(x)))", "all x.((Sterpus(x) | Vumpus(x) | Numpus(x)) -> (Dumpus(x) & Shumpus(x) & Grimpus(x)))", "all x.((Sterepus(x) | Voompus(x) | Numpus(x)) -> (Dumps(x) & Humpus(x) & Grimpus(x)))", "all x.((Sterpus(x) | Voompus(x) | Numerus(x)) -> (Dumpus(x) | Humpus(x) | Grimpus(x)))", "all x.((Sterpus(x) | Vumpus(x) | Numpus(x)) -> (Dumpus(x) | Shumpus(x) | Grimpus(x)))", "all x.((Sterpus(x) | Vumpus(x) | Numpus(x)) -> (Dumpus(x) | Shumpus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1689", "nl": "Everything that is a lempus or a dumpus or a brimpus is a numpus.", "fol": "all x. ((lempus(x) | dumpus(x) | brimpus(x)) -> numpus(x))", "prediction": ["all x.((Lumpus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x.((Lempus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x.((Lampus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x.((Clempus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x.((Smoking(x) & (Lempus(x) | Dumpus(x) | Brimpus(x))) -> Numpus(x))", "all x.((Lempus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x.((Limpus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x.((Lempus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x.((Lempus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x.((Lempus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x.(((Lempus(x) | Dumpus(x) | Brimpus(x))) -> Numpus(x))", "all x.((Lempus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x.(((Lempus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x.(((Limpus(x) | Dumpus(x) | Brimpus(x))) -> Numpus(x))", "all x.((Lempus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))", "all x.((Lempus(x) | Dumpus(x) | Brimpus(x)) -> Numpus(x))"]}
{"id": "prontoqa_train_1690", "nl": "Sam is a lempus, a grimpus, and a yumpus.", "fol": "(lempus(Sam) & grimpus(Sam) & yumpus(Sam))", "prediction": ["all x.(Sam(x) -> (Limpus(x) | Grimpus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Lempus(x) | Grimpus(x) | Yumpus(x)))", "all x y.((Sam(x) & Lempus(y)) | Grimpus(y) | Yumpus(y))", "all x.(Sam(x) -> (Lempus(x) & Grimpus(x) & Yumpus(x)))", "all x.(Sam(x) -> (Lempus(x) | Grimpus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Lempus(x) & Grimpus(x) & Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Cruzpus(y) -> Yumpsum(y)))", "all x,y z.((Sam(x) & Lempus(y) & Grimpus(z)) -> (Lumpus(x) | Yumpus(x)))", "all x.(Sam(x) -> (Lempus(x) | Grimpus(x) | Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Smaller(x) -> Grimpus(x)) & (Yumpus(x) -> Yumpus(x)))", "all x y.((Sam(x) & Lempus(y)) -> (Grimpus(y) | Yumpus(y)))", "all x.(Sam(x) -> (Lempus(x) | Grimpus(x) | Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Smokey(y) -> Grimpus(y))) & all z.(Yumpus(z) -> Yumpsum(z)))", "all x.(Sam(x) -> (Lempus(x) & Grimpus(x) & Yumpus(x)))", "(Aerial(Sam) & Evolved(Sam)) & (Limpus(Sam) | Grappa(Sam) | Yumpus(Sam)))", "all x.(Sam(x) -> (Lempus(x) & Grimpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1691", "nl": "Everything that is a tumpus, a dumpus, and a brimpus is a yumpus.", "fol": "all x. ((tumpus(x) & dumpus(x) & brimpus(x)) -> yumpus(x))", "prediction": ["all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yukpus(x))", "all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yumpus(x))", "all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yumpus(x))", "all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yampus(x))", "all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yumpus(x))", "all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yampus(x))", "all x.((Purple(x) & Dumpus(x) & Brimpus(x)) -> Yampus(x))", "all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yumpus(x))", "all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yumpus(x))", "all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yumpus(x))", "all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yup.", "all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Young(x))", "all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yumus(x))", "all x.(((Tumpus(x) | Dumpus(x) | Brimpus(x))) -> Yumpus(x))", "all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yumpus(x))", "all x.((Tumpus(x) | Dumpus(x) | Brimpus(x)) -> Yumpsum(x))"]}
{"id": "prontoqa_train_1692", "nl": "Polly is a jompus, a lempus, or a yumpus.", "fol": "(jompus(Polly) | lempus(Polly) | yumpus(Polly))", "prediction": ["all x.(Polly(x) -> (Jupita(x) | Lempus(x) | Yumpus(x)))", "all x.(Polly(x) -> (Jompus(x) | Lempus(x) | Yumpus(x)))", "all x.(Polly(x) -> (Jompus(x) | Lempus(x) | Yumpus(x)))", "all x.(Polly(x) -> (Jompus(x) | Lempus(x) | Yumpsum(x)))", "all x.(Polly(x) -> (Jompus(x) | Lempus(x) | Yumpus(x)))", "all x.(Poly(x) -> (HasJompus(x) | HasLempus(x) | HasYumpus(x)))", "all x.(Polly(x) -> (Jimpus(x) | Lempus(x) | Yumpus(x)))", "all x.(Polly(x) -> (Jompus(x) | Lempus(x) | Yumpus(x)))", "all x.(Polly(x) -> (Jumpus(x) | Lempus(x,y) | Yumpus(x,y)))", "((Polly(Polly) & Jompus(Polly)) | (Lempus(Polly) & Yumpus(Polly))))", "all x.(Polly(x) -> (Jampus(x) | Lempus(x) | Yumpus(x)))", "all x.(Polly(x) -> (Jompus(x) | Lempus(x) | Yumpus(x)))", "all x.(Polly(x) -> (Jompus(x) | Lempus(x) | Yumpus(x)))", "all x.(Polly(x) -> (Jompus(x) | Lempus(x) | Yumpus(x)))", "all x.(Polly(x) -> (Jompus(x) | Lempus(x) | Yampus(x)))", "all x.(Polly(x) -> (Jompus(x) | Lempus(x) | Yumpus(x)))"]}
{"id": "prontoqa_train_1693", "nl": "Every zumpus is a grimpus and a sterpus and a dumpus.", "fol": "all x. (zumpus(x) -> (grimpus(x) & sterpus(x) & dumpus(x)))", "prediction": ["all x.(Zumpus(x) -> (Grimpus(x) & Sterpus(x) & Dumpus(x)))", "all x.(Zumpus(x) -> (Stretchpus(x) & Sterpus(x) & Dumpus(x)))", "all x.(Zumpus(x) -> exists y.(Grampus(y) & -Croppus(y)))", "all x.(Touchpus(x) -> (Gruppus(x) & Sterpus(x) & Dumpus(x)))", "all x.(Zumpus(x) -> (Grimpus(x) & Sterpus(x) & Dumpus(x)))", "all x.(Tompus(x) -> (Grampus(x) & Sterpus(x) & Dumpus(x)))", "all x.(Tompus(x) -> (Grimpus(x) | Sterpus(x) | Dumpus(x)))", "all x y.((Tompus(x) & Grouchpus(y) & Sterpus(x) & Dumpus(x)) -> Grimpus(x))", "all x.(Zumpus(x) -> (Agrimpus(x) & Steripus(x) & Dumpus(x)))", "-all x y z.((Sumpus(x) & Grappa(y) & Sterpus(z)) -> (Already(x,y) & -Already(x,z) &-Damus(x)))", "all x.(Tompus(x) -> (Grimpus(x) | Sterpus(x) | Dumpus(x)))", "all x.(Zumpus(x) -> (Grimpus(x) | Sterpus(x) | Dumpus(x)))", "all x.(Tompus(x) -> (Grimpus(x) & Sterpus(x) & Dumpus(x)))", "all x.(Tommpus(x) -> (Gruppus(x) & Sterus(x) & Dumpus(x)))", "all x.(Zumpus(x) -> (Gruppus(x) & Sterus(x) & Dumpus(x)))", "all x.(Quadro(x) -> (Grimpus(x) & Sterpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1694", "nl": "Rex is a numpus or a dumpus or a gorpus.", "fol": "(numpus(Rex) | dumpus(Rex) | gorpus(Rex))", "prediction": ["all x.(Rex(x) -> (numpus(x) | dumpus(x) | gorpus(x)))", "exists x.(Rex(x) & (Numpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Numpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Numpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Numpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Numpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (numpus(x) | dumpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Numpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Numerus(x) | Dumpus(x) | Gorpus(x)))", "all x.((Rex(x) & (Numpus(x) | Dumpus(x) | Gorpus(x))) -> Name(x,numpus))", "all x.(Rex(x) -> (Numpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Rex(x) & (Numpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (numpus(x) | dumpus(x) | gorpus(x)))", "all x.(Rex(x) -> ((Numpus(x) | Dumpus(x) | Gorpus(x))))", "all x.(Rex(x) -> (Numpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Numpus(x) | Dumpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1695", "nl": "Each yumpus is a tumpus and a grimpus and a lempus.", "fol": "all x. (yumpus(x) -> (tumpus(x) & grimpus(x) & lempus(x)))", "prediction": ["all x y.(Yumpus(x) -> (Tumpus(x) & Grimpus(x) & Lempus(y)))", "all x.(Yumpus(x) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.(Yumpus(x) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.(Yumpus(x) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.(Yumpus(x) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "exists x.(Yumpus(x) & (Tumpus(x) | Grimpus(x) | Lempus(x)))", "all x.(Yumpus(x) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "(all x.(Yumpus(x) -> Tumpus(x)) & (Grimpus(x) & Lempus(x)))", "all x.(Yumpus(x) -> (Tumpus(x) & Grimpus(x) & Lampus(x)))", "all x.(Yumpus(x) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.(Yumpus(x) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.(Yumpus(x) -> (Tumpus(x) | Grimpus(x) | Lempus(x)))", "all x.(Yumpus(x) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.(Yumpus(x) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "all x.(Yumpus(x) -> (Tumpus(x) & Grimpus(x) & Lempus(x)))", "exists x.(Yumpus(x) & Tumpus(x) & Grimpus(x) & Lempus(x))"]}
{"id": "prontoqa_train_1696", "nl": "Sally is a numpus and Sally is not a grimpus and Sally is an impus.", "fol": "(numpus(Sally) & -grimpus(Sally) & impus(Sally))", "prediction": ["all x y.((Sally(x) & Numpus(x) & -Grimpus(y)) -> Issuel(x))", "all x.(Sally(x) -> (Numpus(x) & -Grimpus(x) & IsPrime(x)))", "all x.(Sally(x) -> (Numerus(x) & -Grimpus(x) & Ilira(x)))", "(all x.(Sally(x) -> Numpus(x)) & (-Smoking(x) | Isolator(x))))", "(all x.(Sally(x) -> Numpus(x)) & (Sally(x) -> -Grimpus(x)) & (Sally(x) -> Impeccator(x)))", "(all x.(Sally(x) -> Numpus(x)) & all y.(Sally(y) -> -Grimpus(y))) & all z.(Sally(z) -> Imperative(z)))", "(all x.(Sally(x) -> Numpus(x)) & (Sally(x) -> -Grimpus(x)) & (Sally(x) -> Imperator(x))))", "(all x.(Sally(x) -> Numpus(x)) & (Sally(x) -> -Grimpus(x)) & (Sally(x) -> Issue(x))))", "(all x.(Sally(x) -> Numpus(x)) & -Scrumpus(x)) & all y.(Sally(y) -> Imperato(y)))", "(all x.(Sally(x) -> Numpus(x)) & (Sally(x) | -Grimpus(x))) & (Sally(x) -> Implicator(x)))", "All x y.((Sally(x) & Numpus(x)) -> (-Grimpus(y) & Illegitimate(x)))", "all x.(Sally(x) -> (Numpus(x) & -Grimpus(x) & Ilimination(x)))", "(all x.(Sally(x) -> Numpus(x)) & (Sally(x) -> -Grimpus(x))) & (Sally(x) -> Injectable(x)))", "(all x.(Nompus(x) & -Cruppus(x)) & all y.(Illegal(y)) -> Stalley(x)))", "(All x.(Sally(x) -> Numpus(x)) & (Sally(x) -> -Grimpus(x)) & (Sally(x) -> Impossible(x)))", "(all x.(Sally(x) -> Numpus(x)) & (Sally(x) -> -Grimpus(x))) & (Sally(x) -> Imperative(x)))"]}
{"id": "prontoqa_train_1697", "nl": "Sam is a shumpus and Sam is a jompus and Sam is not a tumpus.", "fol": "(shumpus(Sam) & jompus(Sam) & -tumpus(Sam))", "prediction": ["(all x.(Shumpus(x) & All (Jumpus(x)) -> -Tumpus(x)))", "(all x.(Shumpus(x) & All y.(Jompus(y)) -> (Sam(x) & Sam(y))))", "(all x.(Shumpus(x) -> Shumpus(x)) & (Jimpus(x) -> Jompus(x)) & -Tumpus(x)))", "all x y.((Sam(x) & Saulius(y) & Jompus(y)) -> (Shumpus(x) & Jompus(x) & -Tumpus(y)))", "(all x.(Shumpus(x) -> SamPotato(x)) & (Jompus(x) -> SamPotato(x)) & (NonTumpus(x) -> SamPotato(x)))", "(all x.(Sam(x) -> Humpus(x)) & (Jumpus(x) & -Tumpus(x)))", "(all x.(Shumpus(x) & All y.(Jimpus(y)) -> Sam(x))) & (Jimpus(y) -> Sam(y)))", "all x y z.((Sam(x) & Humpus(y) & Jompus(z)) -> (Shumpus(x) & Jompus(z) & -Tumpus(z)))", "all x y z.((Sam(x) & Shumpus(x) & Jompus(y) & Tumpus(z)) -> (IsSam(x) & IsSam(x) & -IsSam(x)))", "(SeemsTompus(Sam) & exists a Shumpus(Sam) & exists a jompus(Sam)) & exists a Tompus(Sam) & -exists a Shumpus(Sam))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Jompus(y) -> Sam(y))) & all z.(Tumpus(z) -> Sam(z))))", "(all x.(Shumpus(x) & Hompus(x)) & all y.(Tumpus(y) | Humpus(y))))", "all x y z.((Sumpus(x) & Jompus(y) & Sam(z)) -> (shumpus(x) & jompus(y)) & -tumpus(z)))", "all x.((Sam(x) -> (Shumpus(x) & Jompus(x) & -Tumpus(x)))", "(all x.(Shumpus(x) -> HasSumpus(x)) & (Jimpus(x) -> HasSumpus(x))) & (Tumpus(x) -> HasSumpus(x)))", "(all x.(Shumpus(x) -> Sam(x)) & (Jimpus(x) -> Sam(x)) & -Tumpus(x)))"]}
{"id": "prontoqa_train_1698", "nl": "Sam is a grimpus or Sam is a rompus or Sam is not a lempus.", "fol": "(grimpus(Sam) | rompus(Sam) | -lempus(Sam))", "prediction": ["all x.((Sam(x) & (Srapper(x) | Rompus(x) | -Lempus(x))) -> -Sam(x))", "all x.((Sam(x) & (Grimpus(x) | Rompus(x) | -Lempus(x))) -> (Sam(x) & -Crompus(x)))", "all x.((Sam(x) & (Grimpus(x) | Rompus(x) | -Lempus(x))) -> Grimpus(x))", "all x.(Sam(x) -> (Grimpus(x) | Rompus(x) | -Lempus(x)))", "(e.g.,Sam(saman) & ((Smoothpus(s) | Rompus(s))) | -Lempus(s))))", "all x.(Sam(x) -> (Smirkpus(x) | Rompus(x) | -Lempus(x)))", "all x.(Sam(x) -> (Grimpus(x) | Rompus(x) | -Lempus(x)))", "all x.(Sam(x) -> (Small(x) | (Rompus(x) | -Lempus(x))))", "(all x.(Sam(x) -> Grimpus(x)) & (Rompus(x) | NullLempus(x))))", "((Sam(sam) & Grimpus(sam)) | (Sam(sam) & Rompus(sam)) | (Sam(sam) & -Lempus(sam))))", "(all x.(Sam(x) -> Grimpus(x)) & (Rompus(x) | -Lempus(x))))", "all x.(Sam(x) -> ((Smoothpus(x) | Rompus(x) | -Lempus(x))))", "((Sam(Sam) & Grimpus(sam)) | (Sam(sam) & Rompus(sam)) | (Sam(sam) & -Lempus(sam))))", "(either Sam is Grimpus (also KnownAsSam)) ou Sam isRompus(sam)) | (Sam is -Lempus(sam))))", "((Sam(Sam) & Grimpus(Sam)) | (Sam(Sam) & Rompus(Sam)) | (-Sam(Sam) & Lempus(Sam))))", "all x.(Sam(x) -> (Smoothpus(x) | Rompus(x) | -Lempus(x)))"]}
{"id": "prontoqa_train_1699", "nl": "Sterpuses are wumpuses, lorpuses, and shumpuses.", "fol": "all x. (sterpus(x) -> (wumpus(x) & lorpus(x) & shumpus(x)))", "prediction": ["all x.(Sterpuse(x) -> (Wumpus(x) | Lorpus(x) | Sahumpus(x)))", "all x.(Sterpus(x) -> (Wumpus(x) | Lorpus(x) | Humpus(x)))", "all x.(Sterpuse(x) -> (Wumpus(x) | Lorpus(x) | Shumpus(x)))", "all x.(Sterpuse(x) -> (Wumpus(x) | Lorpus(x) | Shumpus(x)))", "all x.(Sterpuse(x) -> (Wumpuse(x) | Lorpa(x) | Shumpuse(x)))", "all x y.((Sterpuse(x) & Wumpus(y)) -> (Lorpus(y) & Stempus(y)))", "all x.(Sterpuse(x) -> (Wumpus(x) | Lompus(x) | Humpus(x)))", "all x.(Sterpuse(x) -> (Wumpus(x) | Lorpus(x) | Shumpus(x)))", "all x.(Sterpuse(x) -> (Wumpuse(x) | Lorpuse(x) | Humpuse(x)))", "all x.(Sterpuse(x) -> (Wumpus(x) | Lorpus(x) | Humpus(x)))", "(Wumpuses(st) | Lorpuses(st) | Shumpuses(st)))", "all x.(Sterpuse(x) -> (Wumpus(x) | Lorpus(x) | Shumpus(x)))", "all x.(Strerpuse(x) -> (Wumpus(x) | Liepus(x) | Humpus(x)))", "all x y.((Sterpuse(x) & (Wumpus(y) | Lorpus(y) | Shumpus(y))) -> (Sterpuse(x) & Sterpuse(x)))", "all x.(Strerpus(x) -> (Wumpuse(x) | Lorpuse(x) | Shumpuse(x)))", "all x.(Sterpuse(x) -> (Wumpus(x) | Lorpus(x) | Sushi(x)))"]}
{"id": "prontoqa_train_1700", "nl": "Everything that is a tumpus and a zumpus and a rompus is not a wumpus.", "fol": "all x. ((tumpus(x) & zumpus(x) & rompus(x)) -> -wumpus(x))", "prediction": ["all x.((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))", "all x.((Tumpus(x) | Zumpus(x) | Rompus(x)) -> -Wumpus(x))", "all x.((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))", "all x.((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))", "all x.((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))", "all x.((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))", "all x.(((Tumpus(x) & Zumpus(x) & Rompus(x))) -> -Wumpus(x))", "all x.((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))", "all x.((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))", "all x.((Element(x) & Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))", "all x.((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))", "all x.((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))", "all x.((Tumpus(x) & Tompus(x) & Rompus(x)) -> -Wumpus(x))", "all x.((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))", "all x.((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))", "all x.((Tumpus(x) & Zumpus(x) & Rompus(x)) -> -Wumpus(x))"]}
{"id": "prontoqa_train_1701", "nl": "Alex is a gorpus, a lorpus, and a jompus.", "fol": "(gorpus(Alex) & lorpus(Alex) & jompus(Alex))", "prediction": ["(all x.(Alex & Gorpus(x) & All y.(Lorpus(y) & All z.(Jimpus(z))) -> Gorpus(x)))", "(all x y.(Alex(x) -> Gorpus(x)) & (Lorpus(y) | Jompus(y))))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Lorpus(y) & -Jumpus(y)))", "(Frost(Alex) | Drunken(Alex)) & Gorpus(Alex) | Lorpus(Alex) | Jompus(Alex))", "all x y z.((Alex(x) & Gorpus(y) & Lorpus(z) & Jompus(x)) -> (Gorpus(x) & Longhorn(z) & Jompus(x)))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Lorpus(y) & All z.(Jompus(z))) -> Gorpus(x)) & all z.(Lorpus(z) -> Jompus(z))))", "(Gorpus(Alex) & Loppus(Alex) & Jompus(Alex))", "all x y z.((Alex(x) & Gorpus(y) & Lorpus(z)) -> (Gorpus(x) | Loompus(x) | Jompus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "(Gorpus(Alex) | Lorpus(Alex) | Jompus(Alex))", "Alex is a gorpus, is a lorpus, is a jompus, and exists x.(Jimpus(x) & ContainsOriginalOriginalOriginalOriginalLorpus(x))", "all x.(Alex(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Lorpus(y) & All z.(Jompus(z))) -> Dorpus(x))) & all w.(Lorpus(w) -> Dorpus(w)))", "(Gorpus(Alex) | Lorpus(Alex) | Jompus(Alex))", "all x.(Alex(x) -> (Gorpus(x) | Lorpus(x) | Jompus(x)))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Lorpus(y) & All z.(Jompus(z))))"]}
{"id": "prontoqa_train_1702", "nl": "Alex is a vumpus or a shumpus or a sterpus.", "fol": "(vumpus(Alex) | shumpus(Alex) | sterpus(Alex))", "prediction": ["all x.(Alex(x) -> (Vimpus(x) | Shumpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Vumpus(x) | Shumpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Vimpus(x) | Shumpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Vumpus(x) | Humpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Vimpus(x) | Shumpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Vumpus(x) | Shumpus(x) | Sterpus(x)))", "exists x.(Alex(x) & (Vumpus(x) | Humpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Vumpus(x) | Shumpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Vumpus(x) | Shumpus(x) | Sterpus(x)))", "all x y.((Alex(x) & (Vimpus(y) | Spompus(y) | Sterpus(y))) -> VimpusOrShumpusOrSterpus(x))", "all x.(Alex(x) -> (Vampus(x) | Shumpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Vimpus(x) | Shumpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Vumpus(x) | Shumpus(x) | Sterpus(x)))", "all x.(Alex(x) -> (Vumpus(x) | Shumpus(x) | Sterpus(x)))", "all x.(Alex(x) -> ((Vimpus(x) | Sterpus(x))))", "all x.(Alex(x) -> (Vumpus(x) | Shumpus(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1703", "nl": "Everything that is a shumpus, a numpus, and a rompus is a dumpus, a grimpus, and a wumpus.", "fol": "all x. ((shumpus(x) & numpus(x) & rompus(x)) -> (dumpus(x) & grimpus(x) & wumpus(x)))", "prediction": ["all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> (Dumpus(x) & Grimpus(x) & Wumpus(x)))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> (Dumps(x) | Grimpus(x) | Wumpus(x)))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> (Dumpus(x) & Grimpus(x) & Wumpus(x)))", "all x.((Shumpus(x) & Numpus(x) & Rompus(x)) -> (Dupus(x) & Grimpus(x) & Wumpus(x)))", "all x.(((Shumpus(x) | Numpus(x) | Rompus(x))) -> (Dumpus(x) & Grimpus(x) & Wumpus(x)))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> (Dumpus(x) | Grimpus(x) | Wumpus(x)))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> (Dumpus(x) | Grimpus(x) | Wumpus(x)))", "all x.((Shumpus(x) & Numpus(x) & Rompus(x)) -> (Dumpus(x) & Grimpus(x) & Wumpus(x)))", "all x.((Shumpus(x) | Lumpus(x) | Rompus(x)) -> (Dumpus(x) & Grimpus(x) & Wumpus(x)))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> (Dumpus(x) & Grimpus(x) & Wumpus(x)))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> (Dumpus(x) & Grimpus(x) & Lumpus(x)))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> (Dumpus(x) & Grimpus(x) & Wumpus(x)))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> (Dumpus(x) | Grimpus(x) | Wumpus(x)))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> (Dumpus(x) | Grimpus(x) | Wumpus(x)))", "all x.(Shumpus(x) & Numpus(x) & Rompus(x)) -> (Dumpus(x) & Grimpus(x) & Wumpus(x)))", "all x.((Shumpus(x) | Numpus(x) | Rompus(x)) -> (Dumpus(x) | Grimpus(x) | Wumpus(x)))"]}
{"id": "prontoqa_train_1704", "nl": "Sally is a numpus.", "fol": "numpus(Sally)", "prediction": ["all x.((Sally(x) & Numpus(x)) -> Is(x,numpus))", "Sally is Numpus(s)", "Sally is Numpus(Sally)", "all x.(Sally(x) -> Numpus(x))", "Sally ist Numpus(Sally)", "Sally is a Numpus(Sally)", "Sally is a numpus.", "Alles x.(Sally(x) -> Numpus(x))", "Sally is Numpus.", "Sally is Numpus.", "Sally is Numpus(s) -> RepresentsForLight(s))", "all x.(Sally(x) -> Numpus(x))", "all x.(Sally(x) -> Number(x))", "Sally is Numpus(Sally)", "Sally is a Numpus(Sally)", "Sally is Numpus(Sally)"]}
{"id": "prontoqa_train_1705", "nl": "Zumpuses are sterpuses.", "fol": "all x. (zumpus(x) -> sterpus(x))", "prediction": ["all x.(Zumpus(x) -> Steropod(x))", "all x.(Zumpus(x) -> Sterpus(x))", "all x.(Zumpus(x) -> Sterpus(x))", "all x.(Zumpus(x) -> Sterosene(x))", "all x.(Zumpus(x) -> Sterpus(x))", "(Sterpuse(z) -> Zumpuse(z))", "all x.(Zumpus(x) -> Sterpuse(x))", "all x.(Zumpus(x) -> Sterpuse(x))", "all x.(Zumpus(x) -> Sterose(x))", "all x.(Zumpuse(x) -> Sterpuse(x))", "all x.(Zumpus(x) -> AreSterpuse(x))", "all x.(Zumpus(x) -> Sterpuse(x))", "all x.(Zumpus(x) -> Sterpus(x))", "all x.(Zumpus(x) -> Sterpuse(x))", "all x.(Zumpus(x) -> Sterpuse(x))", "all x.(Zumpus(x) -> Sterpuse(x))"]}
{"id": "prontoqa_train_1706", "nl": "Dumpuses are zumpuses.", "fol": "all x. (dumpus(x) -> zumpus(x))", "prediction": ["all x.(Dumpuse(x) -> Zumpuse(x))", "all x.(Dumpuse(x) -> Zumpuse(x))", "all x.(Dumpuse(x) -> Zumpuse(x))", "all x.(Dumpuse(x) -> Zumpuse(x))", "all x.(Dumpuse(x) -> Zumpuse(x))", "all x.(Dumpuse(x) -> Zumpus(x))", "all x.(Dumpuse(x) -> Tompus(x))", "all x.(Dumpuse(x) -> Zumpuse(x))", "all x.(Dumpuse(x) -> Zumpuse(x))", "all x.(Dumpus(x) -> Zumpus(x))", "all x y.((Dumpuse(x) & Zumpus(y)) -> CanBeRelated(x,y))", "all x.(Dumpus(x) -> Zumpuse(x))", "all x.(Dumpus(x) -> Zumpus(x))", "all x.(Dumpuse(x) -> Zumpuse(x))", "all x.(Dumpuse(x) -> Zumpuse(x))", "all x.(Dumpuse(x) -> Zumpus(x))"]}
{"id": "prontoqa_train_1707", "nl": "Fae is a numpus and Fae is not a sterpus and Fae is a gorpus.", "fol": "(numpus(Fae) & -sterpus(Fae) & gorpus(Fae))", "prediction": ["all x y.((Fae(x) & Numpus(x)) -> (-Sterpus(y) & Gorpus(x)))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> -Sterepus(x)) & (Fae(x) -> Gorpus(x)))", "all x y;((Fae(x) & Numpus(x)) -> (-Sterpus(y)) & Gorpus(x)))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> -Sterepus(x)) & (Fae(x) -> Gorpus(x)))", "all x y.((Fae(x) & Numpus(x) & -Sterpus(y) & Gorpus(y)) -> Numpus(x))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> -Sterectus(x)) & (Fae(x) -> Gorpus(x)))", "all x y.((Fae(x) & Numpus(x)) -> (-Sterepus(x) & Gorpus(y)))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> -Sterpus(x)) & (Fae(x) -> Gorpus(x))))", "(all x.(Fae(x) -> Numpus(x)) & (Fae(x) -> -Steerpus(x)) & (Fae(x) -> Gorpus(x)))", "(all x.(Fae(x) -> Numpus(x)) & (-Fae(x) -> Sterpus(x)) & (Fae(x) -> Gorpus(x)))", "(all x y z.((Fae(x) & Number(y) & Nocturnal(x)) -> Nembus(x)) & ((Fae(z) & -Sterpus(z))) -> Gorpus(z)))", "(all x y z.((Fae(x) & Numpus(y)) -> Numpus(y)) & ((Fae(z) & -Sterpus(z))) -> Gorpus(z)))", "(exists x.(Fae(x) & Numpus(x,n)) & exists y.(Fae(y) & -Sterpus(y))) & exists z.(Fae(z) & Gorpus(z)))", "all x.((Fae(x) & Numpus(x)) -> (-Hasterpus(x) & Gorpus(x)))", "(all x.(Fae(x) -> Nompus(x)) & all y.(Fae(y) -> -Sterpus(y))) & all z.(Fae(z) -> Gorpus(z)))", "all x y z.((Fae(x) & Numpus(x) & -Sterpus(y) & Gorpus(z)) -> (Faesy(x) & -Faesy(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1708", "nl": "Stella is an impus and a brimpus and a yumpus.", "fol": "(impus(Stella) & brimpus(Stella) & yumpus(Stella))", "prediction": ["all x.(Stella(x) -> (Impose(x) & Brimpus(x) & Yumpus(x)))", "Stella and Is(ist,is) & IsBrimpus(is) & IsYumpus(is))", "all x.(Stella(x) -> (Impossible(x) & Brimpus(x) & Yumpus(x)))", "all x.(Stella(x) -> (Impossible(x) & Brimpus(x) & Yumpus(x)))", "Stella is (Impose(i) & Brampus(i) & Yumpus(i))", "(Imposer(Stella) & Brimpus(Stella) & Yumpus(Stella))", "(all x y.(Stella(x) -> Issue(x)) & -(Issue(y) & IsBrimpus(y))) & -(Issue(x) & IsBrompus(x) & IsYumpus(y)))", "all x.(Stella(x) -> (Impossed(x) & Brimpus(x) & Yumpus(x)))", "(isolator(i) & brimpus(i) & yumpus(i))", "(VerbalisticStella(Stella) | (Brimpus(Stella) | Yumpus(Stella))))", "all x.(Stella(x) -> (Impossible(x) | Brimpus(x) | Yumpus(x)))", "all x y.((Stella(x) & Imposer(x) & Brimpus(y)) -> Yumpus(x))", "all x.(Stella(x) -> (Impossible(x) & Brimpus(x) & Yumpus(x)))", "all x.(Stella(x) -> (Imposser(x) & Brimpus(x) & Yumpus(x)))", "all x.(Solve(x) -> (Impose(x) & Brimpus(x) & Yumpus(x)))", "all x.(Stella(x) -> (Impos(x) & Brimpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1709", "nl": "Stella is a numpus or a dumpus or a zumpus.", "fol": "(numpus(Stella) | dumpus(Stella) | zumpus(Stella))", "prediction": ["(numpus) | dumpus(stella) | zumpus(stella)))", "all x.(Stella(x) -> (Nompus(x) | Dumpus(x) | Zumpus(x)))", "all x.(Stella(x) -> (Numpus(x) | Dumpus(x) | Zumpus(x)))", "all x.(Stella(x) -> (Numpus(x) | Dumpus(x) | Zumpus(x)))", "all x.(Stella(x) -> ((Numpus(x) | Dumpus(x) | Zumpus(x))))", "all x.(Stella(x) -> (Numpus(x) | Dumpus(x) | Zumpus(x)))", "(OfNumpus(Stella) & OrDumpus(Stella))", "((Stella) | Dumpus(Stella)))", "(all x.(Stella(x) -> (Numpus(x) | Dumpus(x) | Zumpus(x))))", "all x.(Stella(x) -> (Numpus(x) | Dumpus(x) | Zumpus(x)))", "all x.(Stella(x) -> (Numpus(x) | Dumpus(x) | Zumpus(x)))", "all x.(Stella(x) -> (Numpus(x) | Dumpus(x) | Zumpus(x)))", "exists x.(Stella(x) & (Numpus(x) | Dumpus(x) | Zumpus(x)))", "all x.(Azooma(x) -> (Nompus(x) | Dumpus(x) | Zumpus(x)))", "all x.(Stella(x) -> (Numpus(x) | Dumpus(x) | Zumpus(x)))", "all x.(Stella(x) -> ((numpus(x) | dumpus(x) | zumpus(x))))"]}
{"id": "prontoqa_train_1710", "nl": "Everything that is a yumpus, a shumpus, or a rompus is a lempus, a vumpus, and a numpus.", "fol": "all x. ((yumpus(x) | shumpus(x) | rompus(x)) -> (lempus(x) & vumpus(x) & numpus(x)))", "prediction": ["all x.((Yumpus(x) | Shampus(x) | Rompus(x)) -> (Lempus(x) & Vumpus(x) & Numpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Rompus(x)) -> (Lempus(x) | Vumpus(x) | Numpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Rompus(x)) -> (Lempus(x) & Vumpus(x) & Numpus(x)))", "all x.((Yumpus(x) | Shumpus(x) | Rompus(x)) -> (Lempus(x) | Vumpus(x) | Numpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Rompus(x)) -> (Lempus(x) & Vuxus(x) & Numerus(x)))", "all x.((Yumpus(x) | Humpus(x) | Rompus(x)) -> (Lempus(x) | Vumpus(x) | Numpus(x)))", "all x.((Yumpus(x) | Shumpus(x) | Rompus(x)) -> (Lempus(x) | Vumpus(x) | Numpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Rompus(x)) -> (Lempus(x) & Vumpus(x) & Numpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Rompus(x)) -> (Lempus(x) | Umpus(x) | Numpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Rompus(x)) -> (Lempus(x) | Vumpus(x) | Numpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Rompus(x)) -> (Lempus(x) & Vumpus(x) & Numpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Rompus(x)) -> (Lempus(x) & Vumpus(x) & Numpus(x)))", "all x.((Yumpus(x) | Shumpus(x) | Rompus(x)) -> (Lempus(x) | Voluptus(x) | Numpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Rompus(x)) -> (Lempus(x) & Vuze(x) & Numpus(x)))", "all x.((Yumpus(x) | Humpus(x) | Rompus(x)) -> (Lempus(x) | Vumpus(x) | Numpus(x)))", "all x.((Yumpus(x) | Saulpus(x) | Rompus(x)) -> (Lempus(x) & Virtumpus(x) & Numpus(x)))"]}
{"id": "prontoqa_train_1711", "nl": "Every gorpus is a lempus and a vumpus and a dumpus.", "fol": "all x. (gorpus(x) -> (lempus(x) & vumpus(x) & dumpus(x)))", "prediction": ["all x.(Gorpus(x) -> (Lempus(x) & Vumpus(x) & Dumpus(x)))", "all x.(Gorpus(x) -> (Lempus(x) & Vumpus(x) & Dumpus(x)))", "all x.(Gorpus(x) -> (Lempus(x) & Vumpus(x) & Dumpus(x)))", "all x.(Gorpus(x) -> (Lempus(x) & Vampisk(x) & Dumpus(x)))", "all x.(Gorpus(x) -> (Lempus(x) | Vampe(x) | Dumpus(x)))", "all x.(Gorpus(x) -> (Lempus(x) | Vubis(x) | Dumpus(x)))", "all x.(Gorpus(x) -> (Lempus(x) & Vumpus(x) & Dumpus(x)))", "all x.(Gorpus(x) -> (Lempus(x) & Vumpus(x) & Dumpus(x)))", "all x.(Gorpus(x) -> (Lempus(x) & Vumpus(x) & Dumpus(x)))", "all x.(Gorpus(x) -> (Lempus(x) | Vampus(x) | Dumpus(x)))", "all x.(Gorpus(x) -> (Lempus(x) & Vumpus(x) & Dumpus(x)))", "all x.(Gorpus(x) -> (Lempus(x) & Vumpus(x) & Dumpus(x)))", "all x y.((Gorpus(x) & Lempus(x) & Vumpus(y) & Dumpus(x)) -> (Of(x,y) & Of(y,x)))", "all x.(Gorpus(x) -> ((Lempus(x) & Vumpus(x) & Dumpus(x))))", "exists x.(Gorpus(x) & (Lempus(x) | Voompus(x) | Dumpus(x)))", "all x.(Gorpus(x) -> (Lempus(x) & Vumpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_train_1712", "nl": "Sally is a rompus or a zumpus or a vumpus.", "fol": "(rompus(Sally) | zumpus(Sally) | vumpus(Sally))", "prediction": ["all x.(Sally(x) -> (Rompus(x) | Zumpus(x) | Vumpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Zumpus(x) | Vulpe(x)))", "all x.(Sally(x) -> (Rompus(x) | Zumpus(x) | Voompus(x)))", "all x.(Sally(x) -> (Rompus(x) | Zumpus(x) | Vumpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Zumpus(x) | Vumpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Zumpus(x) | Vumpus(x)))", "all x.(Sally(x) -> (Mopus(x) | Zumpus(x) | Vumpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Zumpus(x) | Vumpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Zumpus(x) | Vumpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Zumpus(x) | Vuzepus(x)))", "all x.(Sally(x) -> ((Rompus(x) | Zumpus(x) | Vumpus(x))))", "all x.(Soul(x) -> (Rompus(x) | Zumpus(x) | Vumpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Zumpus(x) | Vumpus(x)))", "all x.(Sally(x) -> (Rompus(x) | Zumpus(x) | Mummus(x)))", "(Rompus(Sally) | Tombass(Sally) | Vampus(Sally)))", "all x.(Sally(x) -> (Rompus(x) | Zumpus(x) | Vumpus(x)))"]}
{"id": "prontoqa_train_1713", "nl": "Every dumpus is a brimpus, a jompus, and a gorpus.", "fol": "all x. (dumpus(x) -> (brimpus(x) & jompus(x) & gorpus(x)))", "prediction": ["all x.(Dumpus(x) -> (Brimpus(x) & Jompus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> ((Brimpus(x) | Jompus(x) | Gorpus(x))))", "all x.(Dumpus(x) -> (Brumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> (Brumpus(x) | Jompus(x) | Gorpus(x)))", "(all x.(Dumpsis(x) -> Brimpus(x)) & (Joompus(x) & Gorpus(x)))", "all x.(Dumps(x) -> (Brampus(x) | Jompus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> (Brimpus(x) & Jompus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (Brimpus(x) & Jompus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> (Brumpus(x) & Jompus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (Dumpus(x) & Brimpus(x) & Jompus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))"]}
{"id": "prontoqa_train_1714", "nl": "Fae is a dumpus.", "fol": "dumpus(Fae)", "prediction": ["all x.(Fae(x) -> Dumpus(x))", "(Dumpus(Fae) & -Dumpus(Fae))", "Fae is a Dumpus.", "(Dumpus(Fate))", "(Dumpus(Fae))", "(Dumus(fae) -> Puss(fae))", "(Duckus(fae) -> -Dumpus(fae))", "(Dumus(Fae) -> Dumpus(Fae))", "Fae is a dumpus.", "Fae is a Dumpus(female)", "(Dumpus(Fae))", "Fae is a Dumpus.", "all x.(Fae(x) -> Dumpus(x))", "Fae is a Dumpus.", "Fae is(femur) & Dumpus(f))", "all x.(Fae(x) -> Dumpus(x))"]}
{"id": "prontoqa_train_1715", "nl": "Fae is a brimpus or a jompus or a grimpus.", "fol": "(brimpus(Fae) | jompus(Fae) | grimpus(Fae))", "prediction": ["(Brimpus(fae) | Jompus(fae) | Grimpus(fae)))", "all x.(Fae(x) -> (Brimpus(x) | Jompus(x) | Grimpus(x)))", "is(Fae,brimpus) | (Jimpus) | Grimpus(x)))", "all x.(Fae(x) -> (Brimpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Brimpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Brimpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Brimpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Brimpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Brimpus(x) | Jompus(x) | Grimpus(x)))", "(all x.(Fae(x) -> Brimpus(x)) | (Jimpus(x) | Grimpus(x))))", "all x.(Fae(x) -> ((Brimpus(x) | Jompus(x) | Grimpus(x))))", "all x.(Fae(x) -> (Brimpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Brimpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Brimpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Brumpus(x) | Jompus(x) | Grimpus(x)))", "all x.(Fae(x) -> (Brimpus(x) | Jompus(x) | Grimpus(x)))"]}
{"id": "prontoqa_train_1716", "nl": "Everything that is a shumpus, a sterpus, or an impus is a wumpus, a jompus, and a yumpus.", "fol": "all x. ((shumpus(x) | sterpus(x) | impus(x)) -> (wumpus(x) & jompus(x) & yumpus(x)))", "prediction": ["all x.((All y.(Shumpus(x) | Sterpus(x) | Impossible(x))) -> (Wumpus(y) | Jompus(y) | Yumpus(y)))", "all x.((Shumpus(x) | Sterpus(x) | IsImprovement(x)) -> (Wumpus(x) | Jompus(x) | Yumpus(x)))", "all x.((Shumpus,Sterpus,Ironbolus) -> (Wumpus(x) | Jompus(x) | Yumpus(x)))", "all x.((Shumpus(x) | Sterpus(x) | Impossible(x)) -> (Wumpus(x) & Jompus(x) & Yumpus(x)))", "all x.((Shumpus(x) | Sterpus(x) | IstImputer(x)) -> (Wumpus(x) & Jompus(x) & Yumbos(x)))", "all x.((Shumpus(x) | Sterpus(x) | Impressionist(x)) -> (Wumpus(x) & Jompus(x) & Yumpus(x)))", "all x.((Shumpus(x) | Sterpus(x) | Impossible(x)) -> (Wumpus(x) & Jompus(x) & Yumpus(x)))", "all x.((Shumpus(x) | Sterpus(x) | Impossible(x)) -> (Wumpus(x) & Yompus(x) & Yumpus(x)))", "all x.((Shumpus(x) | Sterpus(x) | Ilirs(x)) -> (Wumpus(x) | Jompus(x) | Yampus(x)))", "all x.((Shumpus(x) | Sterpus(x) | Impermant(x)) -> (Wumpus(x) & Jompus(x) & Yumpus(x)))", "all x.(Shumpus(x) | Sterpus(x) | IsImplicator(x)) -> (Wumpus(x) & Jompus(x) & Yumpus(x)))", "all x.((Shumpus(x) | Sterpus(x) | IsIllusion(x)) -> (Wumpus(x) | Jompus(x) | Yampus(x)))", "all x.((ListensToShumpus(x) | ListsToSterepus(x) | ListsToImpossible(x)) -> (Wumpus(x) | Jompus(x) | Yumpus(x)))", "all x.((Shumpus(x) | Steerpus(x) | Impermissible(x)) -> (Wumpus(x) & Jompus(x) & Yumpus(x)))", "all x.((Shumpus(x) | Sterpus(x) | IsImpossible(x)) -> (Wumpus(x) & Jompus(x) & Yumpus(x)))", "all x.(((Shumpus(x) | Sterpus(x) | Impossible(x)) -> (Wumpus(x) & Jompus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1717", "nl": "Every wumpus is a lempus and a yumpus and a gorpus.", "fol": "all x. (wumpus(x) -> (lempus(x) & yumpus(x) & gorpus(x)))", "prediction": ["all x y.((Wumpus(x) & Lempus(x)) -> (Yumpus(y) & Dorpus(y)))", "all x.(Wumpus(x) -> (Lempus(x) | Yampus(x) | Gorpus(x)))", "all x y z.((Wumpus(x) & Lempus(y) & Yuphus(z)) -> (Warmpus(x) & Gorpus(x)))", "all x.(Wumpus(x) -> (Lempus(x) & Yamashima(x) & Gorpus(x)))", "all x.(Wumpus(x) -> (Lempus(x) | Yampus(x) | Gorpus(x)))", "all x.(Wumpus(x) -> (Lempus(x) & Yumpus(x) & Gorpus(x)))", "all x y z.((Wumpus(x) & Lempus(y) & Yupto(z)) -> (Answer(x,y) & Ayrpus(z)))", "all x.(Wumpus(x) -> (Lempus(x) & Yampus(x) & Gorpus(x)))", "all x.(Wumpus(x) -> (Lempus(x) | Yompus(x) | Gorpus(x)))", "all x.(Wumpus(x) -> (Lempus(x) & Yampus(x) & Gorpus(x)))", "all x y.((Wumpus(x) & Lempus(x) & Yampus(y)) -> Glypse(x))", "all x.(Wumpus(x) -> (Lempus(x) & Youngpus(x) & Gorpus(x)))", "(all x.(Wumpus(x) -> Lempus(x)) & (Yumpus(x) -> Gorpus(x)))", "all x.(Wumpus(x) -> (Lempus(x) & Yumpus(x) & Gorpus(x)))", "all x.(Wumpus(x) -> (Lempus(x) | Yumpus(x) | Gorpus(x)))", "all x.(Wumpus(x) -> (Lempus(x) & Yumpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1718", "nl": "Rex is a jompus, Rex is a lempus, and Rex is not a gorpus.", "fol": "(jompus(Rex) & lempus(Rex) & -gorpus(Rex))", "prediction": ["(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Gorpus(z))))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Gorpus(x))))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Lempus(y) -> Rex(y)) & all z.(Rex(z) -> -Gorpus(z))))", "(all x y z.(Rex(x) -> Jompus(x)) & (Rex(y) -> Lempus(y)) & -Guarpus(z)))", "all x y z.((Rex(x) & Jompus(y) & Lempus(z)) -> (Jompus(x) | Lempus(z) | -Gorpus(x)))", "(all x y z.(Rex(x) -> Jompus(x)) | (Rex(y) -> Lempus(y))) & ((Rex(z) & Gorpus(z)) -> -Gorpus(z)))", "(all x y z.(Jompus(x) -> Rex)) & (Lempus(y) -> Rex)) & (Gorpus(z) -> -Rex)))", "(all x y z.((Rex(x) & Jompus(y) & Lempus(z)) -> (Hompus(x) | Lempus(z)) & -Gorpus(x)))", "(all x y z.(Rex(x) -> Jompus(x)) & (Rex(y) -> Lempus(y)) & (Rex(z) -> -Gorpus(z))))", "all x y.((Jompus(x) & Lempus(y) & -Gorpus(x)) -> (Elements(x,y) & Sensitive(x)))", "all x y.((Jompus(x) & Lempus(y)) -> (Jompus(x) & Lempus(y) & -Gorpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Gorpus(z))))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Lempus(x)) & -Gorpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Lempus(y)) & -Gorpus(y)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Lempus(y)) & -Gorpus(y)))", "(all x y z.((Rex(x) & Jompus(y)) -> (Jompus(z) | Lempus(z))) & ((Rex(x) & Gorpus(z)) -> -Gorpus(x)))"]}
{"id": "prontoqa_train_1719", "nl": "Everything that is a lorpus and a wumpus and a gorpus is a grimpus.", "fol": "all x. ((lorpus(x) & wumpus(x) & gorpus(x)) -> grimpus(x))", "prediction": ["all x.((Lorpus(x) | Wumpus(x) | Gorpus(x)) -> Grimpus(x))", "all x y z.((Lorpus(x) & Buckley(y) & Orperpus(z) & IsAndAndIs(x,y)) -> Grumpus(x))", "all x.((Lorpus(x) & Wormpus(x) & Gorpus(x)) -> Grimpus(x))", "all x.((Lorpus(x) & Humpus(x) & Gorpus(x)) -> Grimpus(x))", "all x.((Shark(x) & Lopus(x) & Wumpus(x) & Gorpus(x)) -> Grimpus(x))", "all x.((Lorpus(x) & Wumpus(x) & Gorpus(x)) -> Grimpus(x))", "all x.((Lorpus(x) | Windpus(x) | Gorpus(x)) -> Grimpus(x))", "all x.((Lorp(x) & Wumpus(x) & Gorpus(x)) -> Grimpus(x))", "all x.((Lorpus(x) & Wumpus(x) & Gorpus(x)) -> Grimpus(x))", "all x.((Lorpus(x) & Wumpus(x) & Gorpus(x)) -> Grimpus(x))", "all x.((Lorpus(x) & Wumpus(x) & Gorpus(x)) -> Grimpus(x))", "all x.((Lorpus(x) & Wumpus(x) & Gorpus(x)) -> Grimpus(x))", "all x.((Lorpus(x) & Wumpus(x) & Gorpus(x)) -> Grimpus(x))", "all x.((Lorpus(x) & Wampus(x) & Gorpus(x)) -> Grimpus(x))", "all x.((Lorpus(x) & Wumpus(x) & Gorpus(x)) -> Grimpus(x))", "all x.((Lorpus(x) & Wumpus(x) & Gorpus(x)) -> Grimpus(x))"]}
{"id": "prontoqa_train_1720", "nl": "Wren is a grimpus or a sterpus or a shumpus.", "fol": "(grimpus(Wren) | sterpus(Wren) | shumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Grimpus(x) | Sterpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Grimpus(x) | Sterpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Grimpus(x) | Sorpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Grimpus(x) | Sterpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Grimpus(x) | Sterpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Grimpus(x) | Sterpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Scrumpus(x) | Sterpus(x) | Simpus(x)))", "all x.(Wren(x) -> (Grimpus(x) | Sterpus(x) | Shumpus(x)))", "all x.(Wren(x) -> (Grimpus(x) | Sterpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Gruppus(x) | Sterpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Gripper(x) | Sterepus(x) | Humpus(x)))", "all x.(Wren(x) -> (Grimpus(x) | Sterpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Grimpus(x) | Sterpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Grimpus(x) | Sterpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Gruppus(x) | Sterpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Smoke(x) | Storpus(x) | Humpus(x)))"]}
{"id": "prontoqa_train_1721", "nl": "Everything that is a gorpus, a shumpus, and a tumpus is a wumpus, a lorpus, and a jompus.", "fol": "all x. ((gorpus(x) & shumpus(x) & tumpus(x)) -> (wumpus(x) & lorpus(x) & jompus(x)))", "prediction": ["all x.((Gorpus(x) | Shumpus(x) | Tumpus(x)) -> (Wumpus(x) | Lordpus(x) | Jompus(x)))", "all x.((Gorpus(x) | Humpus(x) | Tumpus(x)) -> (Wumpus(x) | Lordpus(x) | Jompus(x)))", "all x.((Gorpus(x) | Humpus(x) | Tumpus(x)) -> (Wumpus(x) | Lower(x) | Jompus(x)))", "all x.((Gorpus(x) | Shampus(x) | Tumpus(x)) -> (Wumpus(x) | Lorpus(x) | Jompus(x)))", "all x.((Gorpus(x) | Shumpus(x) | Tumpus(x)) -> (Wumpus(x) & Loomis(x) & Jompus(x)))", "everything that is gorpus, shumpus,tumpus & wumpus,lorpus,jompus.", "all x.((Gorpus(x) & Shumpus(x) & Tumpus(x)) -> (Wumpus(x) | Lorpus(x) | Jompus(x)))", "all x.((Gorpus(x) | Humpus(x) | Tumpus(x)) -> (Wumpus(x) & Lordpus(x) & Jompus(x)))", "all x.((Gorpus(x) & Humpus(x) & Tumpus(x)) -> (Wumpus(x) | Lorpus(x) | Jompus(x)))", "all x.((Gorpus(x) | Shumpus(x) | Tumpus(x)) -> (Wumpus(x) & Lordpus(x) & Jompus(x)))", "all x.((Gorpus(x) | Humpus(x) | Pumpus(x)) -> (Answer(x) & Answer(x) & Answer(x) & Answer(x) & Answer(x)))", "all x.((Orpheus(x) | Species(x) | Population(x)) & Gorpus(x) & Shumpus(x) & Tumpus(x)) -> (Wumpus(x) & Loramus(x) & Jompus(x)))", "all x.((Gorpus(x) | Humpus(x) | Tumpus(x)) -> (Wumpus(x) | Lorpus(x) | Jompus(x)))", "all x.((Gorpus(x) & Humpus(x) & Tumpus(x)) -> (Wumpus(x) & Lurpus(x) & Jompus(x)))", "all x.((Gorpus(x) | Shumpus(x) | Tumpus(x)) -> (Wumpus(x) & Lampus(x) & Jompus(x)))", "all x y.((Gorpus(x) & Shumpus(x) & Tumpus(y)) -> (Wumpus(x) & Lorpus(x) & Jompus(x)))"]}
{"id": "prontoqa_train_1722", "nl": "Jompuses are yumpuses, brimpuses, and lempuses.", "fol": "all x. (jompus(x) -> (yumpus(x) & brimpus(x) & lempus(x)))", "prediction": ["all x.(Jompuse(x) -> (Yumpus(x) | Brimpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Yumpus(x) | Brimpuse(x) | Lempuse(x)))", "all x.(Jomerus(x) -> (Yumpus(x) | Brimpuse(x) | Lempuse(x)))", "all x.(Jimpus(x) -> (Yumpus(x) | Brimpus(x) | Plampuse(x)))", "all x.(Jompuse(x) -> (Yumpus(x) | Brimpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Yumpus(x) | Brimpus(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Yumpus(x) | Brimpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Yumpus(x) | Brimpuse(x) | Lempuse(x)))", "all x y z.((Jompuse(x) & (Yumpus(y) | Brimpuse(y) | Lempus(y))) -> (YUMPUSE(y) | Brimpuse(z) | Lempuse(z)))", "all x.(Jompuse(x) -> (Yumpus(x) | Brimpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Yumpus(x) | Brimpuse(x) | Lempuse(x)))", "exists x.(Jompuse(x) & (Yumpus(x) | Brimpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Yumpus(x) | Brimpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Yumpus(x) | Brimpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Yumpus(x) & Brimpuse(x) & Lempuse(x)))", "all x.(Jompuse(x) -> (Yumpus(x) | Brimpus(x) | Lempuse(x)))"]}
{"id": "prontoqa_train_1723", "nl": "Stella is a vumpus or a lempus or a sterpus.", "fol": "(vumpus(Stella) | lempus(Stella) | sterpus(Stella))", "prediction": ["all x.((Stella(x) & (Vimpus(x) | Lempus(x) | Sterpus(x))) -> Kumpus(x))", "all x.(Stella(x) -> (Vampum(x) | Lempus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lempus(x) | Sterpus(x)))", "(Vampus(Stella) | Lempus(Stella) | Sterpus(Stella)))", "(Vumpus(Stella) | Lempus(Stella) | Sterpus(Stella))", "all x.(Stella(x) -> (Vempus(x) | Lempus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lempus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vampus(x) | Lempus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lempus(x) | sterpus(x)))", "exists x.(Stella(x) & (Vumpus(x) | Lempus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lempus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lempus(x) | Sterus(x)))", "all x.(Stella(x) -> (Voompus(x) | Lempus(x) | Steerpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lempus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vampus(x) | Lempus(x) | Sterpus(x)))", "all x.(Stella(x) -> (Vumpus(x) | Lempus(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1724", "nl": "Tumpuses are not grimpuses.", "fol": "all x. (tumpus(x) -> -grimpus(x))", "prediction": ["all x.(Tumpus(x) -> -Grimpus(x))", "all x.(Tumpus(x) -> -Grippuse(x))", "all x.(Tump(x) -> -Grimpus(x))", "all x.(Tumpus(x) -> -Grumpspus(x))", "all x.(Tumpuse(x) -> -Grimpus(x))", "all x.(Tumpus(x) -> -Grimpus(x))", "all x.(Tumpuse(x) -> -Smoothpuse(x))", "all x.(Tumpus(x) -> -Grimpus(x))", "all x.(Tumpus(x) -> -Grimpus(x))", "all x.(Tumpus(x) -> -Grimpus(x))", "all x.(Tumpuse(x) -> -Grimpus(x))", "all x.(Tumpus(x) -> (-Smaller(x) & Grimpus(x)))", "-Crampus(tump)", "all x.(Tumulus(x) -> -Grampus(x))", "all x.(Tumpus(x) -> -Grimpus(x))", "all x.(Tump(x) -> -Grimpus(x))"]}
{"id": "prontoqa_train_1725", "nl": "Each brimpus is not a zumpus.", "fol": "all x. (brimpus(x) -> -zumpus(x))", "prediction": ["all x.(Brimpus(x) -> -Zumpus(x))", "all x.(Brimpus(x) -> -Zombipus(x))", "all x.(Brimpus(x) -> -Zumpus(x))", "all x.(Brompus(x) -> -Zumpus(x))", "all x.(Brimpus(x) -> -Zumpus(x))", "all x.(Brimpus(x) -> -Zumpus(x))", "all x.(Brimpus(x) -> -Zumpus(x))", "all x.(Brumpus(x) -> -Zumpus(x))", "all x.(Brimpus(x) -> -Zumpus(x))", "all x.(Brampus(x) -> -Zimmer(x))", "all x.(Brimpus(x) -> -Zumpus(x))", "all x.(Brumpus(x) -> -Zumpus(x))", "all x.(Brimpus(x) -> -> -Simulus(x))", "all x.( Brimpus(x) -> -Zumpus(x))", "all x.(Brumpus(x) -> -Zumpus(x))", "all x.(Brumpus(x) -> -Zumpus(x))"]}
{"id": "prontoqa_train_1726", "nl": "Everything that is a sterpus, an impus, or a shumpus is a lempus.", "fol": "all x. ((sterpus(x) | impus(x) | shumpus(x)) -> lempus(x))", "prediction": ["all x.((Sterpus(x) | Imperative(x) | Shumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impossible(x) | Sarumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impossible(x) | Humpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impossible(x) | Shumpus(x)) -> Lempus(x))", "all x.((Esterpus(x) | Imperempt(x) | Shumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Imperempt(x) | Humpus(x)) -> Lempus(x))", "all x.((Starpus(x) | Imperempt(x) | Sumpfus(x)) -> Lempus(x))", "all x.((Steerpus(x) | Isolated(x) | Humpus(x)) -> Lempus(x))", "all x.((Sterectus(x) | Izrael(x) | Simpus(x)) -> Lempus(x))", "all x.((Sterepus(x) | Imitator(x) | Humpus(x)) -> Lempus(x))", "all x.((Sterepus(x) | Impermant(x) | Humpus(x)) -> Lempus(x))", "all x.((Steerpus(x) | Imperativ(x) | Humpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | IsImpossible(x) | IsShumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impossible(x) | Humpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impossible(x) | Humpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Ivory(x) | Shumpus(x)) -> Lempus(x))"]}
{"id": "prontoqa_train_1727", "nl": "Sally is not a yumpus, Sally is a lempus, and Sally is not a numpus.", "fol": "(-yumpus(Sally) & lempus(Sally) & -numpus(Sally))", "prediction": ["all x.(Sally(x) -> (-Yumpus(x) | Lempus(x) | Nompus(x)))", "(all x.(Sally(x) -> -Yumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> -Numpus(z))))", "(all x.(Sally(x) -> -Yumpus(x)) & (Sally(x) -> Lempus(x)) & (Sally(x) -> -Nompus(x))))", "(all x y z.((Sally(x) & Yumpo) & Lempus(y) & Numpus(z)) -> -Yumpus(x)) & ((Sally(x) & Lempus(y))) -> -numpus(z)))", "(all x.(Sally(x) -> -Yumpus(x)) & all y.(Lemur(y) -> Lempus(y)) & all z.(Sally(z) -> -Nompus(z))))", "(all x.(Sally(x) -> -Yumpus(x)) & (Lempus(x) & -Numpus(x)))", "(all x.(Sally(x) -> -Yumpus(x)) & ((Sally(x) & Lempus(x))) -> -Numpus(x)))", "(all x.(Sally(x) -> -Yumpus(x)) & (Lempus(x) & -(Nompus(x)))))", "(all x.(Sally(x) -> -Yumpus(x)) & (Sally(x) -> Lempus(x)) & (Sally(x) -> -Nompus(x)))", "(all x.(Sally(x) -> -Yumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> -numpus(z))))", "(all x y z.((Sally(x) & Yumpus(y)) -> -Yumpus(x)) & ((Sally(z) & Lempus(z)) -> -Numpus(z))))", "(all x.(Sally(x) -> -Yumpus(x)) & (Lempus(x) | Numpus(x))))", "all x y.((Sally(x) & -Yumpus(x) & Lempus(y) & -Nompus(y)) -> (-Yumpus(x) & -Lempus(y) & -Nompus(y)))", "all x y z.((Sally(x) & Yumpus(y) & Lempus(z)) -> (-Yumpus(x) & -Numpus(x)))", "(-Yumpus(Sally) & -Lempus(Sally) & -Numpus(Sally))", "(all x.(Sally(x) -> -Yumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> -numpus(z))))"]}
{"id": "prontoqa_train_1728", "nl": "Rompuses are shumpuses and jompuses and numpuses.", "fol": "all x. (rompus(x) -> (shumpus(x) & jompus(x) & numpus(x)))", "prediction": ["all x.(Rompus(x) -> (Shumpus(x) & (Jompuse(x) | Numpuse(x))))", "all x.(Rompus(x) -> (Shumpuse(x) & Jompuse(x) & Numpuse(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Jumpsuses(x) & Numpuses(x)))", "all x y.((Rompuse(x) & Humus(y)) -> (Jompuse(x) | Numpuse(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Jompus(x) & Numpuse(x)))", "all x y.((Rompus(x) & Shumpus(y)) | (Jomeuse(x) | Numpuse(x))))", "all x.(Rompus(x) -> (Hydromus(x) | (Jumpus(x) | Numpus(x)))))", "all x.(Rompus(x) -> (Shumpus(x) | Jompus(x) | Numpus(x)))", "all x.(Rompus(x) -> (HasShumpus(x) & HasJompuse(x) & HasNumpuse(x)))", "all x.(Rompus(x) -> (Shumpus(x) & (Jompuse(x) | Numpuse(x))))", "all x.(Rompus(x) -> (Shumpus(x) | Jumpuse(x) | Numpuse(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Jompuse(x) & Numpuse(x)))", "all x.(Rompus(x) -> (Shumpuse(x) & Jompuse(x) & Numpuse(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Jompuse(x) & Numpuse(x)))", "all x y.((Rompus(x) & Shumpus(x) & Jompuse(y) & Numpuse(y)) -> (Shumpus(x) | Numpuse(y)))", "all x.(Rompus(x) -> (Shumpus(x) & Jompuse(x) & Numpuse(x)))"]}
{"id": "prontoqa_train_1729", "nl": "Polly is a wumpus or a shumpus or an impus.", "fol": "(wumpus(Polly) | shumpus(Polly) | impus(Polly))", "prediction": ["all x.(Poly(x) -> (Wumpus(x) | Scumpus(x) | Imperium(x)))", "all x.(Polly(x) -> (Wumpus(x) | Humpus(x) | Impossible(x)))", "(Wumpus(Polly) | Shumpus(Polly) | Impeller(Poly))", "all x.(Poly(x) -> (Wumpus(x) | Humpus(x) | Issue(x)))", "all x.(Polly(x) -> (Wumpus(x) | Humpus(x) | Impossible(x)))", "all x.(Polly(x) -> (Wumpus(x) | Humpus(x) | Imperator(x)))", "all x.(Polly(x) -> (Wumpus(x) | Humpus(x) | Impossible(x)))", "all x.(Polly(x) -> (Wumpus(x) | Shumpus(x) | Imperator(x)))", "all x.(Polly(x) -> (Wumpus(x) | Humpus(x) | Impossible(x)))", "all x.(Polly(x) -> (Wumpus(x) | Humpus(x) | Impossible(x)))", "all x.(Polly(x) -> (Wumpus(x) | Humpus(x) | Imperator(x)))", "all x.(Polly(x) -> (Wumpus(x) | Scumpus(x) | Impera(x)))", "(Liquidist(Polly) | ((Wumpus(Polly) | Simpus(Poly)) | Impera(Poly))))", "all x.(Poly(x) -> (Wumpus(x) | Humpus(x) | Implicator(x)))", "all x.(Polly(x) -> (Wumpus(x) | Shumpus(x) | Imperator(x)))", "all x.(Polly(x) -> (Wumpus(x) | Humpus(x) | Impeccable(x)))"]}
{"id": "prontoqa_train_1730", "nl": "Everything that is a numpus and a tumpus and an impus is a jompus and a gorpus and a yumpus.", "fol": "all x. ((numpus(x) & tumpus(x) & impus(x)) -> (jompus(x) & gorpus(x) & yumpus(x)))", "prediction": ["all x.((Number(x) & Tumpus(x) & Issue(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Numpus(x) & Tumpus(x) & Impossible(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Numpus(x) & Tompus(x) & Issue(x)) -> (Hompus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Particle(x) & Numpus(x) & Tumpus(x) & Impossible(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Nompus(x) & Tumpus(x) & Impossible(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Numpus(x) & Tumpus(x) & Impossible(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Nompus(x) | Humpus(x) | Impossible(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Numpus(x) & Tumpus(x) & Imperative(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Numpus(x) & Tumpus(x) & Issue(x)) -> (Jempus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Meanders(x) & Numpus(x) & Tumpus(x) & Impossible(x)) -> (BeanEyes(x) & Jompus(x) & Gorpus(x) & Yampus(x)))", "all x.((Nompus(x) & Tumpus(x) & impus (x))) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Numpus(x) & Tumpus(x) & Institut(x)) -> (Jimpus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Nompus(x) & Tumpus(x) & Imperator(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Nompus(x) & Tumpus(x) & Impossible(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))", "all x.((Numpus(x) & Tompus(x) & Imperative(x)) -> (Jompus(x) & Gorpus(x) & Yampus(x)))", "all x.((Numpus(x) | Tumpus(x) | Impossible(x)) -> (Jompus(x) & Gorpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1731", "nl": "Everything that is a yumpus, a rompus, or a shumpus is a gorpus, a lempus, and a wumpus.", "fol": "all x. ((yumpus(x) | rompus(x) | shumpus(x)) -> (gorpus(x) & lempus(x) & wumpus(x)))", "prediction": ["all x.((Yumpus(x) | Rompus(x) | Shumpus(x)) -> (Gorpus(x) | Lempus(x) | Wumpus(x)))", "all x.((Yumpus(x) | Rompus(x) | Humpus(x)) -> (Gorpus(x) | Lempus(x) | Wumpus(x)))", "all x.((Yumpus(x) | Yumpus(x) | rompus(x) | shumpus(x)) -> (Gorpus(x) | Lempus(x) | Wumpus(x)))", "all x.((Yumpus(x) | Rompus(x) | Shumpus(x)) -> (Gorpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Yumpus(x) | Rompus(x) | Humpus(x)) -> (Gorpus(x) | Lempus(x) | Wumpus(x)))", "all x.((Yumpus(x) | Rompus(x) | Shumpus(x)) -> (Gorpus(x) & Lempus(x) & Wampus(x)))", "all x.((Yumpus(x) | Rompus(x) | Scumpus(x)) -> (Gorpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Yumpus(x) | Rompus(x) | Humpus(x)) -> (Gorpus(x) | Lempus(x) | Wumpus(x)))", "all x.(Whole(x) & (Yumpus(x) | Rompus(x) | Shumpus(x))) -> (Gorpus(x) | Lempus(x) | Wumpus(x)))", "all x.((Yumpus(x) | Rompus(x) | Shumpus(x)) -> (Gorpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Yumpus(x) | Rompus(x) | Humpus(x)) -> (Gorpus(x) | Lempus(x) | Wumpus(x)))", "all x.((Yumpus(x) | Rompus(x) | Shumpus(x)) -> (Gorpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Gorpus(x) | Lempus(x) | Wumpus(x)) -> (Yumbs(x) | Rompus(x) | Shumpus(x)))", "all x.((Yumpus(x) | Rompus(x) | Shumpus(x)) -> (Gorpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Yumpus(x) | Rompus(x) | Humpus(x)) -> (Gorpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Yumpus(x) | Rompus(x) | Humpus(x)) -> (Gorpus(x) & Lempus(x) & Wumpus(x)))"]}
{"id": "prontoqa_train_1732", "nl": "Lorpuses are rompuses and tumpuses and numpuses.", "fol": "all x. (lorpus(x) -> (rompus(x) & tumpus(x) & numpus(x)))", "prediction": ["all x.(Lorpuse(x) -> (Rompus(x) | Tumpus(x) | Numpus(x)))", "all x.(Lorpus(x) -> (Rompus(x) | Tumpus(x) | Numpus(x)))", "all x yu ((Lorpuse(x) & Rimpus(y)) | Tumpus(z) & Numpus(z)))", "all x.(Lorpus(x) -> (Rompus(x) | Tumpus(x) | Numulus(x)))", "all x.(Lorpus(x) -> (Rompus(x) | Tumpus(x) | Numpuse(x)))", "all x.(Lorpus(x) -> (Rompus(x) & Tumpus(x) & Numpuse(x)))", "all x.(Lorpuse(x) -> (Rompuse(x) & Tumpuse(x) & Numpuse(x)))", "all x.(Lorpuse(x) -> (Rompus(x) | Tumpus(x) | Numpus(x)))", "all x.(Lorpus(x) -> (Hompus(x) | Tumpus(x) | Numpus(x)))", "all x.(Lorpus(x) -> (Rompus(x) & Tumpus(x) & Numpus(x)))", "all x.(Lorpus(x) -> ((Rompus(x) | Tumulus(x) | Numpus(x))))", "all x.(Lorpuse(x) -> (Rompuse(x) & Tumulus(x) & Numpuse(x)))", "all x.(Lorpus(x) -> (Rompus(x) | Tumpus(x) | Numpuse(x)))", "all x.(Lorpuse(x) -> (Rompus(x) | Thumpus(x) | Numpus(x)))", "all x.(Lorpus(x) -> (Rompus(x) & Tumpus(x) & Numpuse(x)))", "all x.(Lorpus(x) -> (rompus(x) | Tumpus(x) | Numpus(x)))"]}
{"id": "prontoqa_train_1733", "nl": "Sally is a tumpus, a wumpus, or a numpus.", "fol": "(tumpus(Sally) | wumpus(Sally) | numpus(Sally))", "prediction": ["all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numpus(x)))", "(Tumpus(Sally) | Wumpus(Sally) | Numpus(Sally))", "(exists x.(Sally(x) & Tumpus(x)) | exists y.(Wumpus(y) & Tumpus(z)))) Or exists w.(numpus(w) & Tumpus(w)))", "all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Wumps(x) | Numpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Nomus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numpus(x)))", "all x.(Sally(x) -> (Tumpus(x) | Wumpus(x) | Numpus(x)))"]}
{"id": "prontoqa_train_1734", "nl": "Shumpuses are not impuses.", "fol": "all x. (shumpus(x) -> -impus(x))", "prediction": ["all x.(Shupuse(x) -> -Issue(x))", "all x.(Shumpus(x) -> -Issues(x))", "all x.(Shimus(x) -> -Issue(x))", "all x.(Shutup(x) -> -Issue(x))", "all x y.((Shumpuse(x) & Delegator(y)) -> -((Impossible(x) & Isocracy(x))))", "all x.(Shumpus(x) -> -Issue(x))", "all x.(Shupuse(x) -> -Isolates(x))", "all x.(Shupus(x) -> -Impossible(x))", "all x.(Smuss(x) -> -Impossible(x))", "all x.(Shumpuse(x) -> -Ideologue(x))", "all x y.((Shampus(x) & Issue(y)) -> -Impedus(x,y))", "all x.(Shimpus(x) -> -Issue(x))", "-Issues(shmosphere)", "(all x.(Shumpus(x) -> -Issue(x)))", "(-Demolished(shutus))", "all x y.((Sushuse(x) & Impossible(y)) -> -(Issue(x,y) & Issue(x)))"]}
{"id": "prontoqa_train_1735", "nl": "Gorpuses are wumpuses.", "fol": "all x. (gorpus(x) -> wumpus(x))", "prediction": ["all x.(Gorpus(x) -> Wempuse(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(GorpusEye(x) -> Wumpuse(x))", "all x.(Gorpuse(x) -> Wompus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Bulmus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpuse(x) -> Wampus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wumpus(x))", "all x.(Gorpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_1736", "nl": "Each numpus is a tumpus.", "fol": "all x. (numpus(x) -> tumpus(x))", "prediction": ["all x.(Numpus(x) -> Tumulus(x))", "all x.(Numpus(x) -> Tumpus(x))", "all x.(Nompus(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumpus(x))", "all x.(Numerus(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumpus(x))", "all x.(numpus(x) -> Tumpus(x))", "all x.(Nompus(x) -> Tumpus(x))", "all x.(Numpus(x) -> Taurus(x))", "all x.(Numpus(x) -> Tumpus(x))", "all x.(Nompus(x) -> Tumpus(x))", "all x.(numpus(x) -> Tumpus(x))", "all x.(numpus(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumpus(x))", "all x.(Numpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_train_1737", "nl": "Rompuses are impuses.", "fol": "all x. (rompus(x) -> impus(x))", "prediction": ["all x.(Rompuse(x) -> Issue(x))", "all x.(Rompus(x) -> Imprisoned(x))", "all x.(Rompuse(x) -> Issue(x))", "all x.(Rompus(x) -> Issue(x))", "all x.(Rompus(x) -> Issue(x))", "all x.(Rompus(x) -> Issue(x))", "all x.(Rompus(x) -> Issue(x))", "all x y.((Rompus(x) & Impossible(y)) -> Issue(x))", "all x.(Rompus(x) -> Issue(x))", "all x.(Rompe(x) -> Issue(x))", "all x.(Rompus(x) -> Issue(x))", "all x.(Rompus(x) -> Impisite(x))", "all x.(Rompus(x) -> Issue(x))", "all x.(Rompus(x) -> Isofix(x))", "all x.((Rompe(x) & Issue(x)) -> Issue(x))", "all x.(Rompus(x) -> Issues(x))"]}
{"id": "prontoqa_train_1738", "nl": "Stella is a dumpus, Stella is not a wumpus, and Stella is a zumpus.", "fol": "(dumpus(Stella) & -wumpus(Stella) & zumpus(Stella))", "prediction": ["all x.((Stella(x) & Dumpus(x)) & -Wumpus(x) & Zumpus(x)) -> Dumpus(x))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Wumpus(x)) & (Stella(x) -> Zumpus(x)))", "(all x.(Zauber(x) -> Dumpus(x)) & (Fallen(x) | Fallen(x))) & (Fallen(x) -> -Wumpus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Wumpus(x)) & (Stella(x) -> Zumpus(x)))", "all x y z.((Stella(x) & Dustus(x) & Stella(y) & Zurpus(z)) -> (-Wumpus(y) & Zurpus(z)))", "(all x y.((Stella(x) & Dumpus(x)) -> NotWumpus(y)) & ((Stella(x) & Zumpus(y)) -> -Wumpus(x)))", "(all x y z.(Stella(x) -> Dumpus(x)) & ((Stella(y) & -Wumpus(y)) -> Zumpus(y)))", "all x.((Stella(x) & Dumpus(x)) -> -Wumpus(x)) & isZumpus(x))", "all x y z.((Stella(x) & Dumpus(y) & Stella(z)) -> (Dumpus(x) & -Wumpus(z) & Zumpus(z)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Wumpus(x)) & (Stella(x) -> Zumpus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & (Wumpus(x) -> -Wumpus(x)) & (Stella(x) -> Zumpus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Wumpus(x)) & (Stella(x) -> Zumpus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & (Stella(x) -> -Wumpus(x)) & (Stella(x) -> Zumpus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & all y.(Stella(y) -> -Wumpus(y))) & all z.(Stella(z) -> Zumpus(z)))", "(all x.(Stella(x) -> Dumpus(x)) & (-Wumpus(x) & -Tompus(x)))", "(all x.(Stella(x) -> Dumpus(x)) & all y.((Stella(y) & -Wumpus(y))) -> Zumpus(x)))"]}
{"id": "prontoqa_train_1739", "nl": "Stella is a grimpus and a zumpus and a numpus.", "fol": "(grimpus(Stella) & zumpus(Stella) & numpus(Stella))", "prediction": ["and Grimpus(Stella) & Zumpus(Stella) & Numpus(Stella))", "((Stella(s) & Grimpus(s) & Zumpus(s)) | Nempus(s)))", "all x.(Stella(x) -> (Grirp(x) | Zumpus(x) | Numpus(x)))", "(Frossus, Zumpus,Numerus)", "all x,y.((Stella(x) & Grimpus(y)) -> (Tompus(y) | Numpus(y)))", "all x.(Stella(x) -> (Grimpus(x) & Zumpus(x) & Numpus(x)))", "All x.(Stella(x) -> (Strawpus(x) & Zumpus(x) & Numpus(x)))", "all x.(Stella(x) -> (Grimpus(x) & Zumpus(x) & Numpus(x)))", "all x.(Stella(x) -> (Grimpus(x) | Zumpus(x) | Numpus(x)))", "(all x.(Stella(x) -> Grappa(x)) & (Tompus(x) | Numpus(x))))", "exists x.(Stella(x) & Grimpus(x) & Zumpus(x) & Numpus(x))", "all x.(Stella(x) -> (Grimpus(x) & Zumpus(x) & Numpus(x)))", "all x y z.((Stella(x) & Grimpus(y) & Zumpus(z)) -> (IsGrampus(x,y) & IsNumpus(x,z)))", "(all x.(Stella(x) -> Grimpus(x)) & (Tompus(x) & Numpus(x)))", "all x y.((Stella(x) & Grimpus(x)) -> (Tompus(x) & Numpus(y)))", "(all x.(Stella(x) -> Grimpus(x)) & (Tommpus(x) | Numpus(x))))"]}
{"id": "prontoqa_train_1740", "nl": "Stella is not a rompus, Stella is not a gorpus, and Stella is a tumpus.", "fol": "(-rompus(Stella) & -gorpus(Stella) & tumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Rompus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Tumpus(x)))", "((Zelta(z) & -Rompus(z)) | (-Rompus(z) & Gorpus(z)))) & (-Rompus(z) & Gorpus(z)) & (-Rompus(z) & Tumpus(z))))", "(all x.(Stella(x) -> -Rrompus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Tumpus(x)))", "(all x.(Stella(x) -> -Rompus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Tumpus(x)))", "(all x.(Stella(x) -> -Rompus(x)) & all y.(Stella(y) -> -Gorpus(y)) & all z.(Stella(z) -> Tumpus(z))))", "(all x.(Stella(x) -> -Rompus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Tumpus(x)))", "all x y z.((Stella(x) & Rrompus(y) & Gorpus(z)) -> (-Rompus(x) & Gorpus(x) & Tumpus(x)))", "(all x.(Stella(x) -> -Rompus(x)) & (Stella(x) -> -Gorpus(x)) & (Stella(x) -> Tumpus(x)))", "(all x.(MeLargeBody(x) -> -Lonja(x)) & (MeLargeBody(x) -> -Molodrama(x)) & (MeLargeBody(x) -> -Molodrama(x)))", "(exists x.(Stella(x) & -Rompus(x)) & exists y.(Stella(y) & -Gorpus(y))) & exists z.(Stella(z) & Tumpus(z))))", "(All x).(Stella(x) -> -Rompus(x)) & All y.(Stella(y) -> -Gorpus(y))) & All z.(Stella(z) -> Tumpus(z)))", "(all x y z.((Stella(x) & Rompus(y)) -> -Rompus(z)) & ((Stella(z) & Gorpus(z))) -> Tumpus(z)))", "(all x.(Stella(x) -> -Rompus(x)) & all y.(Stella(y) -> -Gorpus(y))) & all z w.(Tumpus(z) w.((Stella(w) & Oven(w))) -> Norompus(y)))", "(all x.(Stella(x) -> -Rompus(x)) & all y.(Stella(y) -> -Gorpus(y)) & all z.(Tumpus(z) -> (Stella(y) & -Rompus(z))))", "(all x.(Rompus(x) -> -Rompus(x)) & all y.(Gorpus(y) -> -Gorpus(y)) & all z.(Tumpus(z) -> Tumpus(z)))", "(all x y z.((Stella(x) & Rrompus(y) & Gorpus(z)) -> -Rompus(x)) & ((Stella(x) & Gorpus(y)) -> Tumpus(x)))"]}
{"id": "prontoqa_train_1741", "nl": "Everything that is a dumpus or a numpus or a tumpus is an impus, a lempus, and a brimpus.", "fol": "all x. ((dumpus(x) | numpus(x) | tumpus(x)) -> (impus(x) & lempus(x) & brimpus(x)))", "prediction": ["all x.((Dumpus(x) | Numpus(x) | Tumpus(x)) -> (Impos(x) & Lempus(x) & Brimpus(x)))", "all x.((Dupus(x) | Numpus(x) | Tumpus(x)) -> (Imperfect(x) & Illuminated(x) & Lempus(x) & Brimpus(x)))", "all x.((Dumpus(x) | Numpus(x) | Tumpus(x)) -> (Impos(x) | Lempus(x) | Brimpus(x)))", "all x.((Supreme(x) | Numpus(x) | Tumpus(x)) -> (Impossible(x) & Lempus(x) & Brimpus(x)))", "all x.(((Dumpus(x) | Numpus(x) | Tumpus(x))) -> (Impose(x) & Lempus(x) & Brimpus(x)))", "all x.((Dumpus(x) | Numpus(x) | Tumpus(x)) -> (Impos(x) | Lempus(x) | Brimpus(x)))", "all x.(Dumpus(x) | Numpus(x) | Tumpus(x)) -> (Issue(x) & IsLempus(x) & IsBrimpus(x)))", "all x.((Dumpus(x) | Numpus(x) | Tumpus(x)) -> (Impos(x) & Lempus(x) & Brimpus(x)))", "all x.((Dumpus(x) | Numpus(x) | Tumpus(x)) -> (Issue(x) & Lempus(x) & Brimpus(x)))", "all x.((Dumpus(x) | Numpus(x) | Tumpus(x)) -> (Impos(x) & Lempus(x) & Brimpus(x)))", "all x.((Dumpus(x) | Numpus(x) | Tumpus(x)) -> (Issue(x) & Lempus(x) & Brimpus(x)))", "all x.((Dumpus(x) | Numpus(x) | Tumpus(x)) -> (Impos,Lempus,Brimpus)))", "all x.((Muffus(x) | Numpus(x) | Tumpus(x)) -> (Impossible(x) | Lempus(x) | Brimpus(x)))", "all x.((Dumpus(x) | Numpus(x) | Tumpus(x)) -> (Impossen(x) & Lempus(x) & Brimpus(x)))", "all x.((Impos(x) | Numpus(x) | Tumpus(x)) -> (Impos(x) & Lempus(x) & Brimpus(x)))", "all x.((Dupus(x) | Numpus(x) | Tumpus(x)) -> (Impose(x) | Lempus(x) | Brimpus(x)))"]}
{"id": "prontoqa_train_1742", "nl": "Everything that is a vumpus and a dumpus and a lorpus is an impus, a tumpus, and a grimpus.", "fol": "all x. ((vumpus(x) & dumpus(x) & lorpus(x)) -> (impus(x) & tumpus(x) & grimpus(x)))", "prediction": ["all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Impossible(x) | Impossible(x) | Impossible(x) & Impossible(x)) & Impossible(x) & Impossible(x) & Imposite(x) & Imposite(x) & Grimpus(x)))", "all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (ImpossibleRx) & ImpactSumpus(x) & ImpiousSurgrims(x)))", "all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Issue(x) & Istumpus(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Imprime(x))", "all x.((Vumpus(x) & Dumpus(x) & lorpus(x)) -> (Impossible(x) | Imitable(x) | Tumpus(x) | Grimpus(x)))", "all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Issue(x) & IsSmooch(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Imsue(x) & Issue(x) & Issue(x)))", "all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Illegal(x) & Isolated(x) & Isolated(x) & Isolated(x) & Isolated(x) & Isolated(x) & Isolated(x) & Isolated(x) & Isolated(x) & Isolated(x) & Illusion(x) & Ilumpus(x) & Impala(x) & Rial(x)))", "all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Impossible(x) & Impedus(x) & Impedus(x) & Impedus(x) & Impedus(x) & Impedus(x) & Impedus(x) & Impedus(x) & Impedus(x) & Impedus(x) & Impedus(x) & Impedex(x) & Grimpus(x)))", "all x y.((Vumpus(x) & Dumpus(x) & Lordpus(y)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & ImposesToumpus(x) & Grimpus(x)))", "all x.((Vumpus(x) | Dumpus(x) | Lorpus(x)) -> (Improvse(x) | Impedors(x) | Tumpus(x) | Grimpus(x)))", "all x.((Vumpus(x) & Pupus(x) & Dumpus(x) & Lorpus(x)) -> (Implanted(x) | FoundedBy(x) & CreatedBy(x)))", "all x y.(((Vumpus(x) & Dumpus(y) & Lorpus(y)) -> (Impossive(x) | Tumpus(x) | Grimpus(x)))", "all x.((Umpus(x) & Dumpus(x) & Lorpus(x)) -> (Impossible(x) | Impossible(x) | Tumpus(x) | Grimpus(x)))", "all x.((Impos(x) & Dumpus(x) & Lorpus(x)) -> (Impos(x) & Tumpus(x) & Grimpus(x)))", "all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Impossible(x) | Impermissible(x) & Impossible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Impermissible(x) & Soil(x) & Soil(x) & Crampastic(x)))", "all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Impos(x) | Assumpus(x) | Assumpus(x) | Assumpus(x) | Assumpus(x) | Grimpus(x)))", "all x.((Vumpus(x) & Dumpus(x) & Lorpus(x)) -> (Impossible(x) & Imprisoned(x) & Impossible(x) & Imprisoned(x) & Grimpus(x)))"]}
{"id": "prontoqa_train_1743", "nl": "Max is a dumpus.", "fol": "dumpus(Max)", "prediction": ["all x.(Dumus(x) -> -Dumpus(x))", "Manx.", "Max is a dumpus.", "Max is a Dumpus(Max)", "Alleep(Max) -> Dumpus(Max))", "(Damus(Max)", "(Depuus(Max) -> Dumpus(Max))", "Max is a Dumpus.", "all x.(Max(x) -> Dumpus(x))", "all x.(Max(x) -> Dumpus(x))", "Max(Max)", "(Dumus(Max))", "(Dumpseus(Max))", "Max is Dumpus(Max)", "all x.(Max(x) -> Dumpus(x))", "(Dr.Max(Max) -> Dumpus(Max))"]}
{"id": "prontoqa_train_1744", "nl": "Every sterpus is not a shumpus.", "fol": "all x. (sterpus(x) -> -shumpus(x))", "prediction": ["all x.(Sterepus(x) -> -Shumpus(x))", "all x.(Steerpus(x) -> -Shumpus(x))", "all x.(Sterpus(x) -> -Shumpus(x))", "all x y.((Steerpus(x) & -Shumpus(y)) -> -Shumpus(x))", "all x.(Sterpus(x) -> -Shumpus(x))", "all x.(Sterpus(x) -> -Shumpus(x))", "all x.(Sterpus(x) -> -Shumpus(x))", "all x.(Striceps(x) -> -Shumpus(x))", "all x.(Sterpus(x) -> -Shumpus(x))", "all x.(Stropus(x) -> -Shumpus(x))", "all x.(Steep(x) -> -Shumpus(x))", "all x.(Steerpus(x) -> -Shumpus(x))", "all x.(Steerpus(x) -> -Shumpus(x))", "all x.(Sterpus(x) -> -Shumpus(x))", "all x.(Stereo(x) -> -Shumpus(x))", "all x.(Sterpus(x) -> -Shumpus(x))"]}
{"id": "prontoqa_train_1745", "nl": "Everything that is a vumpus, a yumpus, and a grimpus is a shumpus.", "fol": "all x. ((vumpus(x) & yumpus(x) & grimpus(x)) -> shumpus(x))", "prediction": ["all x.((Vumpus(x) | Yumpus(x) | Grimpus(x)) -> Humpus(x))", "all x.((Vumpus(x) | Yumpus(x) | Grimpus(x)) -> Shumpus(x))", "all x.((Vumpus(x) | Yampus(x) | Grumpus(x)) -> Humpus(x))", "all x.((Vumpus(x) | Yampus(x) | Grimpus(x)) -> Humpus(x))", "all x.((Vumpus(x) | Yampus(x) | Grumpus(x)) -> Humpus(x))", "all x.((Vumpus(x) | Yampus(x) | Grimpus(x)) -> Shumpus(x))", "all x.((Voompus(x) & Yumpus(x) & Grimpus(x)) -> Humpus(x))", "all x.((Vumpus(x) | Yumpus(x) | Grumpus(x)) -> Shumpus(x))", "all x.((IsVumpus(x) | IsYumpus(x) | IsGrimpus(x)) -> Shumpus(x))", "all x.((Vimpus(x) | Yampus(x) | Grimpus(x)) -> Humpus(x))", "all x.((Vumpus(x) | Yumpus(x) | Grimpus(x)) -> Shumpus(x))", "all x.((Vumpus(x) | Yumpus(x) | Grimpus(x)) -> Humpus(x))", "all x.((Vumpus(x) | Yumpus(x) | Grimpus(x)) -> Humpus(x))", "all x.((Vumpus(x) | Yumpus(x) | Grimpus(x)) -> Humpus(x))", "all x.((Vumpus(x) | Yumpus(x) | Grimpus(x)) -> Humpus(x))", "all x.((Vumpus(x) | Yumpus(x) | Grimpus(x)) -> Humpus(x))"]}
{"id": "prontoqa_train_1746", "nl": "Rex is a jompus and a sterpus and a tumpus.", "fol": "(jompus(Rex) & sterpus(Rex) & tumpus(Rex))", "prediction": ["all x.(Rex(x) -> (Jompus(x) & Sterpus(x) & Tumus(x)))", "all x.(Rex(x) -> (Jompus(x) & Sterepus(x) & Tumpus(x)))", "(Hex) | (HasJompus(x) & HasSterpus(x) & HasTumpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Sherpus(y) -> Sterus(y) & all z.(Tumpus(z) -> Tumpus(z))))", "all x.((Jompus(x) & Steroid(x) & Tumpus(x)) -> Rex(x))", "all x.(Rex(x) -> (Jumpus(x) & Sterus(x) & Tumpus(x)))", "(all x.(Rex(x) -> Jompus(x)) | (Sterectus(x) & Tumpus(x))))", "(Jompus(rex) & Sterpus(rex) | Tumpus(rex)))", "all x.(Rex(x) -> (Jompus(x) & sterpus(x) & tumpus(x)))", "(exists x.(Jimpus(x) & IsJimpus(x)) & exists y.(Sterepus(y) & IsSterepus(y)) & exists z.(Tumpus(z) & IsTumpus(z))))", "(Rex(Rex) & Jompus(Rex) & Sterectus(Rex) & Totumpus(Rex))", "all x y.((Rex(x) & Jompus(y) & Sterosim(x)) -> (Joompus(x) & Sterus(y) & Tumpus(y)))", "all x.(Rex(x) -> (Jompus(x) | Sterpus(x) | Tumpus(x)))", "all x.(Rex(x) -> (Jompus(x) & Sterpus(x) & Tumpus(x)))", "all x.(Rex(x) -> (Jompus(x) & Sterpus(x) & Tumpus(x)))", "(Jompus(Rex) & Sterpus(Rex) & Tumpus(Rex))"]}
{"id": "prontoqa_train_1747", "nl": "Lorpuses are wumpuses.", "fol": "all x. (lorpus(x) -> wumpus(x))", "prediction": ["all x.(Lorpus(x) -> Wempus(x))", "all x.(Lorpus(x) -> Wampus(x))", "all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorpus(x) -> (Wumpus(x)))", "all x.(Lorpus(x) -> Wempus(x))", "all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorpus(x) -> (Wumpus(x) & Female(x)))", "all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Huskie(x))", "all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Hush(x))", "all x.(Lorpus(x) -> Wumpus(x))", "all x.(Lorpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_train_1748", "nl": "Every grimpus is not a wumpus.", "fol": "all x. (grimpus(x) -> -wumpus(x))", "prediction": ["all x.(Grimpus(x) -> -Wumpus(x))", "all x.(Grimpus(x) -> -Wumpus(x))", "all x.(Grimpus(x) -> -Wumpus(x))", "all x.(Grimpus(x) -> -Wumpus(x))", "all x.(Grimpus(x) -> -Wumpus(x))", "all x.(Grimpus(x) -> -Wumpus(x))", "all x.(Grimpus(x) -> -Wumpus(x))", "all x.(Murph(x) -> -Wumpus(x))", "all x.(Grimpus(x) -> -Wumpus(x))", "all x.(Grimpus(x) -> -Wumpus(x))", "all x.(Grimpus(x) -> -Wumpus(x))", "all x.(Grimpus(x) -> -Wumpus(x))", "all x.(Greek(x) -> -Wumpus(x))", "all x.(Grimpus(x) -> -Wumpus(x))", "all x.(Grimpus(x) -> -Wumpus(x))", "all x.(Grimpus(x) -> -Wumpus(x))"]}
{"id": "prontoqa_train_1749", "nl": "Max is a shumpus, Max is not a lorpus, or Max is a jompus.", "fol": "(shumpus(Max) | -lorpus(Max) | jompus(Max))", "prediction": ["(all x y z.(Max(x) -> (Shumpus(x) | -Lorpus(y) | Jompus(z))))", "(all x.(Mexican(x) -> Humpus(x)) & (-Lorpus(x) | Jompus(x))))", "(all x.(Max(x) -> Humpty(x)) | (-Lorpus(x) | Jompus(x))))", "(all x.(Max(x) -> Shumpus(x)) & (-Max(x) -> Lorpus(x)) | (-Max(x) -> Jompus(x))))", "(all x.(Max(x) -> Shumpus(x)) & (max(x) -> -Lorpus(x)) | -max(x)))", "(all x y z.(Max(x) -> Shumpus(x)) & ((Max(y) | -Lorpus(y))) | (-Max(y) | (-Max(y) & Jompus(y)))))", "((Max(Max) & Humpus(Max)) | (-Lorpus(Max)) | (-Lorpus(Max) & Jompus(Max))))", "(all x.(Max(x) -> Humpus(x)) | (-Lorpus(x) | (-Lorpus(x) & Jompus(x)))))", "(all x.(Max(x) -> Shumpus(x)) & (-Max(x) -> Lorpus(x)) | (-Max(x) -> Jompus(x))))", "(all x.(Max(x) -> Humpus(x)) & (-Max(x) -> Lorpus(x)) & (-Max(x) -> Jompus(x)))", "all x.((Max(x) & Humpus(x)) | (-Lorpus(x) | Jompus(x))))", "all x.(Max(x) -> (Shumpus(x) | -Lorpus(x) | Yompus(x)))", "all x.(Max(x) -> ((Shumpus(x) & -Lorpus(x)) | (Jompus(x)))))", "(all x.(Max(x) -> Humpus(x)) & (-Lorpus(x) | (-Max(x) & Jompus(x)))))", "all x.((Max(x) -> (Shumpus(x) | -Lorpus(x) | Jompus(x)))", "(all x.(Max(x) -> Humpus(x)) & (-Lorph(x) | Jompus(x))))"]}
{"id": "prontoqa_train_1750", "nl": "Everything that is a shumpus, a tumpus, or a dumpus is a brimpus.", "fol": "all x. ((shumpus(x) | tumpus(x) | dumpus(x)) -> brimpus(x))", "prediction": ["all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Humpus(x) | Humpus(x) | Humpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))", "all x.((Shumpus(x) | Tumpus(x) | Dumpus(x)) -> Brimpus(x))"]}
{"id": "prontoqa_train_1751", "nl": "Polly is a shumpus, a yumpus, and a tumpus.", "fol": "(shumpus(Polly) & yumpus(Polly) & tumpus(Polly))", "prediction": ["(Shumpus(poly) | Yampus(poly) | Tumpus(poly)))", "is a shumpus, a yumpus, a tumpus.", "all x.(Polly(x) -> (Shumpus(x) | Yumpus(x) | Tumulus(x)))", "(Shumpus(Poloy) & Yumpus(Poloy) & Tumpus(Poloy))", "(all x.(Polly(x) -> Shumpus(x)) & all y.(Yumpus(y) & all z.(Tumpus(z) -> Chumpus(z))))", "all x.(Polly(x) -> (exists y.(Shumpus(y) & Species(x)) & exists z.(Yumpus(z) & Species(z) & Species(x) & Species(x))))", "all x.(Polly(x) -> (Shumpus(x) | Yumps(x) | Tumpus(x)))", "all x.(Polly(x) -> (Shumpus(x) & Yumpus(x) & Tumpus(x)))", "All x.(Polly(x) -> (Shumpus(x) & Yompus(x) & Tumpus(x)))", "(Shumpus(Ploy) | Yumpus(Ploy) | Tumpus(Ploy)))", "(all x.(Poly(x) -> Shumpus(x)) | (Yumpus(x) & Tumpus(x))))", "all x.(Polly(x) -> (Shumpus(x) | Yumpus(x) | Tumpus(x)))", "all x.(Poly(x) -> (Shumpus(x) | Yampus(x) | Tumpus(x)))", "(all x.(Pollly(x) -> Sampus(x)) & all y.(Yumpus(y) -> Tumpus(y)))", "(all x.(Polly(x) -> Shumpus(x)) & all y.(Yumpus(y) & All z.(Tumpus(z)) -> Humpus(z))) & all w.(Tumpus(w) -> Tampus(w)))", "(all x.(Polly(x) -> Shumpus(x)) & all y.(Yumpus(y) & all z.(Tumpus(z)) -> Tumpus(z))))"]}
{"id": "prontoqa_train_1752", "nl": "Every lempus is a zumpus, a numpus, and an impus.", "fol": "all x. (lempus(x) -> (zumpus(x) & numpus(x) & impus(x)))", "prediction": ["all x.(Lempus(x) -> (Tompus(x) | Numpus(x) | Implicator(x)))", "all x.(Lempus(x) -> (Tompus(x) | Numpus(x) | Imperial(x)))", "all x.(Lempus(x) -> (Tumpus(x) | Numpus(x) | Issue(x)))", "all x.(Limpus(x) -> (Tompus(x) & Numpus(x) & Issue(x)))", "(All x.(Lempus(x) -> Zumpus(x)) & All y.(Numpus(y) & All z.(Illuminate(z) & -Illuminate(z)))))", "all x.(Lempus(x) -> (Tompus(x) & Numpus(x) & Imperator(x)))", "all x.(Lempus(x) -> exists y z.(Atompus(y) & Numpus(z) & Imperator(z) & Numpus(z)))", "all x.(Lempus(x) -> (Tommpus(x) & Numpus(x) & Impeccessor(x)))", "all x.(Lempus(x) -> (Tompus(x) | Numpus(x) | Impermissible(x)))", "(all x.(Lempus(x) -> Tossus(x)) & all y.(Numpus(y) & Imperator(y))))", "all x.(Lempus(x) -> (Tompus(x) & Numpus(x) & Imperator(x)))", "all x.(Lempus(x) -> (Zuppus(x) & Numpus(x) & Imperator(x)))", "all x.(Lempus(x) -> (Tompus(x) & Numpus(x) & Imperative(x)))", "all x.(Lempus(x) -> (Tompus(x) & Numpus(x) & impus(x)))", "all x.(Lempus(x) -> (Tompus(x) | Numpus(x) | Implicator(x)))", "all x.(Limpus(x) -> (Tompus(x) | Numpus(x) | Imperator(x)))"]}
{"id": "prontoqa_train_1753", "nl": "Sally is a zumpus or an impus or a gorpus.", "fol": "(zumpus(Sally) | impus(Sally) | gorpus(Sally))", "prediction": ["all x.(Sally(x) -> (Tompus(x) | Issue(x) | Gorpus(x)))", "all x.(Sally(x) -> (Tommpus(x) | Impossible(x) | Gorpus(x)))", "all x.(Sally(x) -> (Jump(x) | Impermant(x) | Gorpus(x)))", "all x.(Sally(x) -> (HasTompus(x) | HasImperator(x) | HasGorpus(x)))", "all x.(Sally(x) -> (Tompus(x) | Imperative(x) | Gorpus(x)))", "(-Zumpus(Sally) | IsOrGorpus(Sally))", "all x.(Sally(x) -> (Tompus(x) | Issue(x) | Gorpus(x)))", "all x.(Sally(x) -> (Tompus(x) | Issue(x) | Gorpus(x)))", "all x.(Sally(x) -> (Tompus(x) | Imposer(x) | Gorpus(x)))", "all x.(Sally(x) -> (zumpus(x) | impus(x) | Gorpus(x)))", "all x.(Sally(x) -> (Azure(x) | Isolate(x) | Gorpus(x)))", "all x.(Sally(x) -> (Tompus(x) | Issue(x) | Gorpus(x)))", "all x.(Sally(x) -> (Zimmer(x) | Impossible(x) | Gorpus(x)))", "all x.(Sally(x) -> (Zumpus(x) | Issue(x) | Gorpus(x)))", "all x.(Sally(x) -> (Tompus(x) | Implique(x) | Gorpus(x)))", "(Zumpus(Sally) | Deuce(Sally) | Gorpus(Sally)))"]}
{"id": "prontoqa_train_1754", "nl": "Tumpuses are rompuses.", "fol": "all x. (tumpus(x) -> rompus(x))", "prediction": ["all x.(Tumpuse(x) -> Rompus(x))", "all x.(Tumpus(x) -> Rompus(x))", "all x.(Tumpus(x) -> Rompus(x))", "all x.(Tumpus(x) -> Rompus(x))", "all x.(Tumpuse(x) -> Rompus(x))", "all x.(Tumulus(x) -> Rompuse(x))", "all x.(Tumpuse(x) -> Rompus(x))", "all x.(Tumpus(x) -> Rompus(x))", "all x.(Tumulus(x) -> Rompus(x))", "all x.(Tumpus(x) -> Rompus(x))", "all x.(Tumper(x) -> Rompus(x))", "all x.(Tumpus(x) -> Rompus(x))", "all x.(Tumult(x) -> Rompuse(x))", "all x.(Tumpus(x) -> Rompus(x))", "all x.(Tumpus(x) -> Rompus(x))", "all x.(Tumpus(x) -> Rompus(x))"]}
{"id": "prontoqa_train_1755", "nl": "Sally is a zumpus and Sally is a yumpus and Sally is not a rompus.", "fol": "(zumpus(Sally) & yumpus(Sally) & -rompus(Sally))", "prediction": ["(all x.(Sally(x) -> Zumpus(x)) & all y.(Sally(y) -> Yumpus(y)) & all z.(Sally(z) -> -Rompus(z))))", "(all x.(Sally(x) -> Zumpus(x)) & (Sally(x) -> Yumpus(x)) & (Sally(x) -> -Rompus(x)))", "(all x y.((Sally(x) & Zumpus(x)) -> Toubish(x)) & ((Sally(y) & Yumpa(y)) -> -Rompus(y)))", "all x y z.((Sally(x) & Zumpus(x) & Sally(y) & Yuppus(y) & -Rompus(z)) -> (Salma(x) & Zumpus(z) & Yuppus(y)))", "all x.(Sally(x) -> (Tompus(x) & Yumpus(x) & -Rrompus(x)))", "(all x.(Sally(x) -> Zumpus(x)) & all y.(Sally(y) -> Yumpus(y))) & all z.(Sally(z) -> -Rompus(z))))", "(all x.(Sally(x) -> Zumpus(x)) & (Sally(x) -> Yumpus(x)) & -Rompus(x)))", "(all x y.((Sally(x) & Zumpus(x)) -> Sally(y)) & ((Sally(y) & Yampus(y)) -> Yumpus(y)))", "(all x.(Sally(x) -> Zumpus(x)) & (Sally(x) -> Yumpus(x)) & (Sally(x) -> -Rompus(x)))", "all x y.((Sally(x) & Zumpus(x) & Yumpa(y)) -> (Norompus(x) & -Zumpus(y)))", "(all x.(Sally(x) -> Zumpus(x)) & all y.(Sally(y) -> Yampus(y))) & all z.(Sally(z) -> -Rompus(z)))", "(all x y z.((Sally(x) & Zumpus(y)) -> (Tompus(z) | Shimpus(z) & Yampus(z))) & ((Sally(x) & Yumpus(z)) -> (-Rompus(x)))))", "(all x.(Sally(x) -> Zumpus(x)) & (Sally(x) -> Yumpus(x)) & (Sally(x) -> -Rompus(x)))", "(all x y.((Sally(x) & Zumpus(x)) -> Norompus(y)))", "all x y.((Sally(x) & Zumpus(x) & Yampus(y)) -> -Rompus(x))", "(all x y z.(Sally(x) -> Tompus(x)) & (Sally(y) -> Yumpus(y)) & (Sally(z) -> -Rophpus(z)))"]}
{"id": "prontoqa_train_1756", "nl": "Sally is a vumpus, Sally is not a tumpus, or Sally is a lorpus.", "fol": "(vumpus(Sally) | -tumpus(Sally) | lorpus(Sally))", "prediction": ["(all x.(Sally(x) -> Vumpus(x)) & (-Tumpus(x) | Lorpus(x))))", "(all x.(Sally(x) -> Vumpus(x)) | (-Tumpus(x) | Lorpus(x))))", "(all x.(Sally(x) -> Vumpus(x)) & (-Tumpus(x) | Lorpus(x))))", "(all x.(Sally(x) -> Vumpus(x)) & (-Tumpus(x) | Luranski(x))))", "(exists x.(Sally(x) & Vumpus(x)) | exists y.(Sally(y) & -Tumpus(y)) | exists z.(Sally(z) & Lorpus(z)))))", "all x.(Sally(x) -> (Choumpus(x) | -Tumpus(x) | Lordpus(x)))", "(all x.(Sally(x) -> Voompus(x)) | (-Sally(x) -> Tumpus(x)) | (-Sally(x) & -Tumpus(x))))", "(all x.(Sally(x) -> Vulmpus(x)) & (-Tumpus(x) | Lorpus(x))))", "(all x.(Sally(x) -> Vumpus(x)) & (-Tumpus(x) | Lorpus(x))))", "exists x.(Sally(x) & (Vumpus(x) | -Tumpus(x) | Lorpus(x)))", "(all x.(Sally(x) -> Vumpus(x)) | (-Tumpus(x) | Lorpus(x))))", "(all x.(Sally(x) -> Vumpus(x)) | (-Tumpus(x) | Lorpus(x))))", "all x y.((Sally(x) & Vumpus(x)) | (-Tumpus(y) | Lorpus(x))))", "all x.(Sally(x) -> (Vumpus(x) | -Tumpus(x) | Lepidus(x)))", "all x.((Sally(x) & Vempus(x)) | (-Tumpus(x) | Lordpus(x))))", "all x.(Sally(x) -> (Vumpus(x) | -Tumpus(x) | Lorpus(x)))"]}
{"id": "prontoqa_train_1757", "nl": "Each gorpus is a lempus.", "fol": "all x. (gorpus(x) -> lempus(x))", "prediction": ["all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "exists x.(Gorpus(x) & Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))", "all x.(Gorpus(x) -> Lempus(x))"]}
{"id": "prontoqa_train_1758", "nl": "Sam is a wumpus, Sam is a shumpus, and Sam is not a lempus.", "fol": "(wumpus(Sam) & shumpus(Sam) & -lempus(Sam))", "prediction": ["all x.(Sam(x) -> (Wumpus(x) & Samosumpus(x) & -Lempus(x)))", "(all x y z.(Sam(x) -> Wumpus(x)) & (Sam(y) -> Humpus(y)) & (Sam(z) -> -Lempus(z))))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Humpus(x)) & (Sam(x) -> -Lempus(x)))", "(all x y.((Sam(x) & Wumpus(x)) -> Wumpus(x)) & ((Sam(y) & Humpus(y)) -> -Lempus(y)))", "(all x y z.((Sama(x) & Wumpus(x)) -> Wumpus(y)) & ((Sama(z) & Humpus(z))) -> (Sama(z) & -Lempus(z))))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Humpus(x)) & -Lempus(x)))", "all x.((Sam(x) & Wumpus(x)) -> (Shumpus(x) & -Lempus(x)))", "(all x.(Wumpus(x) -> Sam(x)) & all y.(Shumpus(y) -> Sam(y))) & all z.(Lempus(z) -> Sam(z))))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Humpus(x)) & -Lempus(x)))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Humpus(x)) & -Lempus(x)))", "(all x.(Wumpus(x) & All y.(Shumpus(y))) -> Wumpus(x)) & (Shumpus(y) -> -Lempus(y)))", "(all x y z.((Sam(x) & Wumpus(x)) -> Fury(x)) & ((Sam(y) & Humpus(z))) -> (Sam(y) & -Lempus(y))))", "(all x.(Sam(x) -> Wilder(x)) & (Sam(x) -> Humpback(x)) & (Sam(x) -> -Lempus(x))))", "all x y z.((Sam(x) & Wumpus(y) & Humpus(z)) -> (Wumpus(x) | Shumpus(z) | -Lempus(x)))", "(all x.(Shampu(x) -> Wumpus(x)) & all y.(Shumpus(y) -> -Lempus(y)))", "all x y z.((Sam(x) & Wumpus(y) & Humpus(z)) -> (Wumpus(y) & Shumpus(z) & -Lumpus(x)))"]}
{"id": "prontoqa_train_1759", "nl": "Sam is a wumpus or Sam is a lempus or Sam is not a gorpus.", "fol": "(wumpus(Sam) | lempus(Sam) | -gorpus(Sam))", "prediction": ["(All x.(Wumpus(x) | Lempus(x) | -Gorpus(x)))", "all x.((Sam(x) & (Wumpus(x) | Lempus(x)) | -Gorpus(x))) -> (Man(x) & Bear(x)))", "all x.((Sam(x) & (Wumpus(x) | Lempus(x) | -Rosp(x))) -> (Faith(x) & (Wumpus(x) | Lempus(x))))", "all x.((Sam(x) & (Wumpus(x) | Lempus(x) | -Gorpus(x))) -> (Wumpus(x) | Lempus(x)))", "(Wumpus(sam) | Lempus(sam) | -Gorpus(sam)))", "all x.((Sam(x) & (Wumpus(x) | Lempus(x) | -Gorpus(x))) -> Sam(x))", "all x.(Sam(x) -> (Wumpus(x) | Lempus(x) | -Rorpus(x)))", "all x.((Sam(x) & (Wumpus(x) | Lempus(x) | -Gorpus(x))) -> (Sam(x)))", "all x.((Sam(x) & (Wumpus(x) | Lempus(x) | -Gorpus(x))) -> -(Wumpus(x) | Lempus(x))))", "all x.((Sam(x) & (Wumpus(x) | Lemmpus(x) | -Gorpus(x))) -> -Wumpus(x))", "all x.((Sam(x) & Wumpus(x)) | (Lempus(x) | -Gorpus(x))))", "exists x.(Sam(x) & ((Wumpus(x) | Lempus(x)) | -Gorpus(x))))", "all x.((Sam(x) & (Wumpus(x) | Lempus(x) | -Gorpus(x))) -> SamWumpus(x))", "(SeemsMe(Sam) & (Wumpus(sam) | Lempus(sam) | -Gorpus(sam)))", "all x.((Sam(x) & (Wumpus(x) | Lempus(x) | -Gorpus(x))) -> SamWumpus(x))", "all x.((Wumpus(x) | Lempus(x)) | (-Gorpus(x))))"]}
{"id": "prontoqa_train_1760", "nl": "Everything that is a tumpus, a rompus, or a lempus is a zumpus, a shumpus, and a yumpus.", "fol": "all x. ((tumpus(x) | rompus(x) | lempus(x)) -> (zumpus(x) & shumpus(x) & yumpus(x)))", "prediction": ["all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) | Humpus(x) | Yumpus(x)))", "all x.((Tommus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) & Shumpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) & Shumpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) & Humpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Tommpus(x) & Humpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) & Shumpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) | Humpus(x) | Yumpus(x)))", "all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) | Shumpus(x) | Yumpus(x)))", "all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Zumpus(x) & Shumpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) | Humpus(x) | Yumpus(x)))", "all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) & Humpus(x) & Yumpus(x)))", "all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Antompus(x) & Awake(x) & Awake(x) & Awake(x)) & Awake(x) & Awake(x) & Awake(x)))", "all x.((Tompus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) | Humpus(x) | Yumpus(x)))", "all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) | Sumpus(x) | Yumpus(x)))", "all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) & Shumpus(x) & Yumus(x)))", "all x.((Tumpus(x) | Rompus(x) | Lempus(x)) -> (Tompus(x) & Humpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1761", "nl": "Everything that is a brimpus, a jompus, and a rompus is a vumpus and a grimpus and a sterpus.", "fol": "all x. ((brimpus(x) & jompus(x) & rompus(x)) -> (vumpus(x) & grimpus(x) & sterpus(x)))", "prediction": ["all x.((Brimpus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x.((Brimpus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x.((Brampus(x) & Jompus(x) & Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x.((Brimpus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x.((Brimpus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Gruppus(x) & Sterpus(x)))", "all x.((Bermpus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x.((Brimpus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x.((Brimpus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x.((Brimpus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x.((Brampus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterectus(x)))", "all x.((Brimpus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x y.((Brimpus(x) & Jompus(y) & Rompus(y)) -> (Vumpus(x) | Grimpus(x) | Sterpus(x)))", "all x.((Brimpus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "(all x.((Brimpus(x) | Jompus(x) | Rompus(x))) -> (Vumpus(x) & Gruppus(x) & Sterpus(x)))", "all x.((Brumpus(x) | Jompus(x) | Rompus(x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))", "all x.((Brimpus,x) | Jompus,x) | Rompus,x)) -> (Vumpus(x) & Grimpus(x) & Sterpus(x)))"]}
{"id": "prontoqa_train_1762", "nl": "Each brimpus is a sterpus and a zumpus and a yumpus.", "fol": "all x. (brimpus(x) -> (sterpus(x) & zumpus(x) & yumpus(x)))", "prediction": ["all x.(Brimpus(x) -> (sterpus(x) & zumpus(x) & yumpus(y)))", "all x.(Bribula(x) -> (Storpus(x) & Zumpus(x) & Yumpus(x)))", "all x.(Brimpus(x) -> (Sterepus(x) & Zumpus(x) & Yumpus(x)))", "all x y z.((Brimpus(x) & Sterpus(y) & Zumpus(z) & Yumpex(z)) -> (Is(x,y) & Is(x,z)))", "all x.(Brimpus(x) -> (Sterpus(x) & Zumpus(x) & Yumpus(x)))", "all x.(Brimpus(x) -> ((Sterepus(x) & Zumpus(x)) & Yumpus(x)))", "all x.(Brimpus(x) -> (Sterpus(x) & Zumpus(x) & Yumpus(x)))", "all x.(Brimpus(x) -> (Estrus(x) | Zumpus(x) | Yumpus(x)))", "all x.(Brimpus(x) -> (HasSterpus(x) & HasTompus(x) & HasYumpus(x)))", "all x.(Brimpus(x) -> (Sterpus(x) & Zumpus(x) & Yumpus(x)))", "all x.(Brimpus(x) -> (Sterpus(x) & Zumpus(x) & Yumpus(x)))", "all x.(Brimpus(x) -> (Sterpus(x) & Zumpus(x) & Yumpus(x)))", "all x y.((Brampus(x) & Zumpus(y)) -> (IsSterpus(x) & IsYumpus(y)))", "all x.(Brimpus(x) -> (Sterpus(x) & Zumpus(x) & Yumpus(x)))", "all x.(Brimpus(x) -> (Assterpus(x) & Asumpus(x) & Asumpus(x)))", "all x.(Brimpus(x) -> (Sterpus(x) & Zumpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_train_1763", "nl": "Each gorpus is not a sterpus.", "fol": "all x. (gorpus(x) -> -sterpus(x))", "prediction": ["all x.(Gorpus(x) -> -Sterpus(x))", "all x.(Gorpus(x) -> -Sterpus(x))", "all x.(Rorpus(x) -> -Sterpus(x))", "all x.(Gorpus(x) -> -Sterpus(x))", "all x.(Gorpus(x) -> -Sterpus(x))", "all x.(Gorpus(x) -> -Sterpus(x))", "all x.(Gorpus(x) -> -Sterpus(x))", "all x.(Gorpus(x) -> -Sterpus(x))", "all x.(Gorpus(x) -> -Sterpus(x))", "all x.(Gorpus(x) -> -Sterpus(x))", "all x.(Gorpus(x) -> -Sterpus(x))", "all x.(Gorpus(x) -> -Sterpus(x))", "all x.(Gorpus(x) -> -(Sterpus(x) & Gorpus(x)))", "all x.(Gorpus(x) -> -Sterpus(x))", "all x.(Gorpus(x) -> -Sterpus(x))", "all x.(Gorpus(x) -> -Sterpus(x))"]}
{"id": "prontoqa_train_1764", "nl": "Sam is an impus, a rompus, and a gorpus.", "fol": "(impus(Sam) & rompus(Sam) & gorpus(Sam))", "prediction": ["(all x.(Sam(x) -> Impossible(x)) & (Rompus(x) | Gorpus(x)))", "all x y z.((Sam(x) & Is(y,x) & Rompus(z)) -> (Impress(x) | Gorpus(x)))", "all x y z.((Sam(x) & Issue(y) & Rompus(z)) -> (Implicator(x) | Gorpus(x)))", "(exists x.(Sam(x) & Impos(x)) & exists y.(Rompus(y) & -Gorpus(y))))", "all x.(Sam(x) -> (Immers(x) & Rompus(x) & Gorpus(x)))", "all x.(Sam(x) -> (Impune(x) & Rompus(x) & Gorpus(x)))", "all x.(Sam(x) -> (Impose(x) | Rompus(x) | Gorpus(x)))", "((Sam(Sam) & Izris(Sam)) | (Rompus(Sam) & Gorpus(Sam))))", "(all x.(Sam(x) -> Impossible(x)) & (Rompus(x) | Gorpus(x))))", "all x y z.((Sam(x) & Imposs(y) & Rimpus(z) & Gorpus(x)) -> (Impossible(x) & Rompus(y) & Gorpus(z)))", "all x.(Sam(x) -> (Isola(x) | Rompus(x) | Gorpus(x)))", "all x.(Sam(x) -> (Impose(x) & Rompus(x) & Gorpus(x)))", "all x.(Sam(x) -> (Impos(x) | Rompus(x) | Gorpus(x)))", "all x y.((Sam(x) & Diet(y)) -> (Islap(x) & Rompus(x) & Gorpus(x)))", "all x.(Sam(x) -> (Imposs(x) | Rompus(x) | Gorpus(x)))", "all x.(Sam(x) -> (Imposo(x) & Rompus(x) & Gorpus(x)))"]}
{"id": "prontoqa_train_1765", "nl": "Everything that is a tumpus or a numpus or a jompus is a vumpus and a grimpus and an impus.", "fol": "all x. ((tumpus(x) | numpus(x) | jompus(x)) -> (vumpus(x) & grimpus(x) & impus(x)))", "prediction": ["all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Imperapoo(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vampus(x) & Grumpus(x) & Imperator(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Imperator(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Imperator(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Crampus(x) & impus(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & impus(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Iris(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Impossible(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Gruppa(x) & Issuue(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Impossible(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Impossible(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Imperator(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Imperator(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Imperempt(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Imperator(x)))", "all x.((Tumpus(x) | Numpus(x) | Jompus(x)) -> (Vumpus(x) & Grimpus(x) & Imperempt(x)))"]}
{"id": "prontoqa_train_1766", "nl": "Each numpus is a lorpus, a yumpus, and a rompus.", "fol": "all x. (numpus(x) -> (lorpus(x) & yumpus(x) & rompus(x)))", "prediction": ["all x.(Numpus(x) -> (Lorpus(x) & Yampus(x) & Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) | Yumba(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) | Yumpus(x) | Rompus(x)))", "all x.(Nompus(x) -> (Lorpus(x) | Yumpus(x) | Rompus(x)))", "exists x.(Numpus(x) & ((Lorpus(x) & Yumpus(x)) | (Yumpus(x) & Rumpus(x)))))", "all x.(Numpus(x) -> (Lorpus(x) | Yumpus(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) | Yampus(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) | Yumpus(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) & Yampus(x) & Rompus(x)))", "all x.(Nompus(x) -> (Lorpus(x) | Yumpus(x) | Rompus(x)))", "all x.(Nompus(x) -> (Lorpus(x) | Yumpus(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) | Yumpus(x) | Rompus(x)))", "all x.(Nompus(x) -> (Lorpus(x) | Yampus(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) & Yumpus(x) & Rompus(x)))", "all x.(Numerus(x) -> (Lorpus(x) | Yukpus(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) & Yumpus(x) & Rompus(x)))"]}
{"id": "prontoqa_train_1767", "nl": "Sally is a dumpus, Sally is a lempus, and Sally is not a lorpus.", "fol": "(dumpus(Sally) & lempus(Sally) & -lorpus(Sally))", "prediction": ["(all x.(Sally(x) -> Dumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> -Lorpus(z))))", "(all x y z.(Sally(x) -> Dumpus(x)) & (Sally(y) -> Lempus(y)) & (Sally(z) -> -Lorpus(z))))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> Lempus(x)) & -Lorpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> -Lorpus(z))))", "all x y z.((Sally(x) & Dumpus(y) & Lempus(z) & -Lorpus(x)) -> (Dupus(x) | Lempus(z) & -Lorpus(z) & -Sally(x)))", "(AreSallyDumpus(Sah) & AreSahLempus(Sah) & -AreLorpus(Sah))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> -Lorpus(z))))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> Lempus(x)) & (Sally(x) -> -Lorpus(x))))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> -Lorpus(z))))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> -Lorpus(z))))", "(all x y z.(Sally(x) -> Dumpus(x)) & ((Sally(y) & Lempus(y)) -> -Lorpus(z)))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> Lempus(x)) & (Sally(x) -> -Lorpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> Lempus(x)) & (Sally(x) -> -Lorpus(x))))", "(all x.(Sally(x) & Dumpus(x)) & (Lempus(x) | -Lorpus(x))))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> -Larus(z))))", "(All x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> Lempus(x)) & -Lorpus(x)))"]}
{"id": "prontoqa_train_1768", "nl": "Everything that is a dumpus, a lempus, or a grimpus is a yumpus.", "fol": "all x. ((dumpus(x) | lempus(x) | grimpus(x)) -> yumpus(x))", "prediction": ["all x.((Dumpus(x) | Lempus(x) | Grimpus(x)) -> Yumpus(x))", "all x.((HasDumpus(x) | HasLempus(x) | HasGrimpus(x)) -> Yumpus(x))", "all x.((Dupus(x) | Lempus(x) | Grimpus(x)) -> Yupsum(x))", "all x.((Dumpus(x) | Lempus(x) | Grimpus(x)) -> Yumpus(x))", "all x.((Dumpus(x) | Lempus(x) | Grimpus(x)) -> Yampus(x))", "all x.(((Dumpus(x) | Lempus(x) | Grimpus(x)) -> Yampus(x))", "all x.((Dumpus(x) | Lempus(x) | Grimpus(x)) -> Yumpus(x))", "all x.((Tall(x) & (Dumpus(x) | Lempus(x) | Grupus(x))) -> Yampus(x))", "all x.((Dumpsus(x) | Lempus(x) | Grimpus(x)) -> Yampus(x))", "all x.((Dumpus(x) | Lempus(x) | Grimpus(x)) -> Yumpus(x))", "all x.((Dumpus(x) | Lempus(x) | Grimpus(x)) -> Yumpus(x))", "all x.((Dumpus(x) | Lampus(x) | Grimpus(x)) -> Yumpus(x))", "all x.((Tape(x) & (Dumps(x) | Lempus(x) | Grimpus(x))) -> Yumpus(x))", "all x.((Dumpus(x) | Lempus(x) | Grimpus(x)) -> Yumpus(x))", "all x.((Dumps(x) | Lempus(x) | Grimpus(x)) -> Yumpus(x))", "all x.((Dumpus(x) | Lempus(x) | Grimpus(x)) -> Yumpus(x))"]}
{"id": "prontoqa_train_1769", "nl": "Alex is a gorpus, a rompus, and a lempus.", "fol": "(gorpus(Alex) & rompus(Alex) & lempus(Alex))", "prediction": ["all x.(Alex(x) -> (Gorpus(x) | Rompus(x) | Lempus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Rompus(x) | Lempus(x)))", "(All x.(Alex(x) -> Gorpus(x)) & (Rompus(x) & Lempus(x)))", "(all x.(Alex(x) -> Gorpus(x)) & (Roompus(x) | Lempus(x)))", "(all x.(Alex(x) -> Raccoon(x)) & (Alex(x) -> Rompus(x)) & (Alex(x) -> Lempus(x)))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Rompus(y) & all z.(Limpus(z) & Gorpus(y)) & all w.(Rompus(w) & Lempus(w))) -> Lempus(x)))", "all x.(Alex(x) -> (Rompus(x) & Lempus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Rompus(x) | Lempus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Rompus(x) | Lempus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Rompus(x) | Lempus(x)))", "all x.(Alex(x) -> (Gorpus(x) & Rompus(x) & Lempus(x)))", "all x.(Alex(x) -> ((Gorpus(x) & Rompus(x)) | Lempus(x)))", "all x.(Alex(x) -> (Gorpus(x) & Rompus(x) & Lempus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Rompus(x) | Lempus(x)))", "all x.(Alex(x) -> (Gorpus(x) & Rompus(x) & Lempus(x)))", "all x.(Alex(x) -> (Gorpus(x) & Rompus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_1770", "nl": "Every vumpus is a lorpus and an impus and a sterpus.", "fol": "all x. (vumpus(x) -> (lorpus(x) & impus(x) & sterpus(x)))", "prediction": ["all x.(Vumpus(x) -> (Lorpus(x) & Issueble(x) & Sterpus(x)))", "all x.(Vumpus(x) -> (Larpus(x) & Impossible(x) & Sterpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Impossible(x) & Sterpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Impossible(x) & Sterpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Issues(x) & Sterpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Immersed(x) & Sterpus(x)))", "all x.(Vumpus(x) -> (Larus(x) & Imperator(x) & Sterpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Imperator(x) & Sterpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Impossible(x) & Sterpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Issue(x) & Sterpus(x)))", "all x.(Vumpus(x) -> (Lord(x) & Impegna(x) & Sterpus(x)))", "exists x.(Vumpus(x) & Lorpus(x) & Impedient(x) & Sterpus(x))", "all x.(Vumpus(x) -> (Lorpus(x) & Impossible(x) & Sterepus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Imiter(x) & Sterpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Issue(x) & Sterpus(x)))", "all x.(Vumpus(x) -> (Lorpus(x) & Impossible(x) & Sterpus(x)))"]}
{"id": "prontoqa_train_1771", "nl": "Stella is a yumpus or an impus or a rompus.", "fol": "(yumpus(Stella) | impus(Stella) | rompus(Stella))", "prediction": ["(Yumpus(Stella) | Ichsteramus(Stella)))", "all x.(Stella(x) -> (Pyrumpus(x) | Impossible(x) | Rompus(x)))", "all x.(Stella(x) -> (Yumpus(x) | Impossible(x) | Rompus(x)))", "all x.(Stella(x) -> (Yumpus(x) | Imperator(x) | Rompus(x)))", "all x.(Stella(x) -> (Yumpus(x) | Issue(x) | Rompus(x)))", "all x.(Stella(x) -> (Yumpus(x) | Imperator(x) | Rompus(x)))", "all x.(Stella(x) -> (Yumpus(x) | Imbiss(x) | Rompus(x)))", "all x.(Stella(x) -> (Yumpus(x) | Impirez(x) | Rompus(x)))", "(Yumpus(Stella) | Impossible(Stella)) | Rompus(Stella))", "all x.(Stella(x) -> (Yumpus(x) | Ispose(x) | Rompus(x)))", "all x.(Stella(x) -> (Yumpus(x) | Impossible(x) | Rompus(x)))", "all x.(Stella(x) -> (Yumpus(x) | Impermiss(x) | Rompus(x)))", "all x.(Stella(x) -> (Yumpus(x) | Impossible(x) | Rompus(x)))", "all x.((Stella(x) & (Yumpus(x) | Imperator(x) | Rompus(x))) -> Ivory(x))", "(Yumpus(Stella) | Imperator(Stella) | Rompus(Stella)))", "all x.(Geminia(x) & (Yumpus(x) | Imperator(x) | Rompus(x)))"]}
{"id": "prontoqa_train_1772", "nl": "Every wumpus is a jompus.", "fol": "all x. (wumpus(x) -> jompus(x))", "prediction": ["all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "all x y.((Wumpus(x) & Hompus(y)) -> Exists z.(Wumpus(z) & Has(x,z))))", "all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))", "all x.(Wumpus(x) -> Jompus(x))"]}
{"id": "prontoqa_train_1773", "nl": "Everything that is a tumpus, a brimpus, or a yumpus is not a lorpus.", "fol": "all x. ((tumpus(x) | brimpus(x) | yumpus(x)) -> -lorpus(x))", "prediction": ["all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yuppus(x)) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yampus(x)) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus.", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))", "all x.((Tumpus(x) | Brimpus(x) | Yumpus(x)) -> -Lorpus(x))"]}
{"id": "prontoqa_train_1774", "nl": "Stella is not a wumpus.", "fol": "-wumpus(Stella)", "prediction": ["all x.(Stella(x) -> -Wumpus(x))", "IsWumpus(IsStella)", "all x.(Stella(x) -> -Wumpus(x))", "Stella is not a wumpus.", "Stella is not a wumpus.", "all x.(Wumpus(x) -> -Wumpus(x))", "-Wumpus(Stella)", "Stella is not a wumpus.", "(-Wumpus(Stella))", "(-Wumpus(Stella))", "Stella is not a wumpus!", "Nein...Stella(silent)", "all x.((Stella(x) & -Wumpus(x)) -> -Wumpus(x))", "the whole thing is different, as is Stella(Stella) & -Wumpus(Stella)).", "Stella is not a wumpus.", "Stella ist nicht Wumpus(s)"]}
{"id": "prontoqa_train_1775", "nl": "Everything that is a brimpus or a wumpus or a grimpus is a numpus, a jompus, and an impus.", "fol": "all x. ((brimpus(x) | wumpus(x) | grimpus(x)) -> (numpus(x) & jompus(x) & impus(x)))", "prediction": ["all x.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) & Jompus(x) & Impossible(x)))", "all x.((Brimpus(x) | Wampus(x) | Grimpus(x)) -> (Numpus(x) | Jompus(x) | Imperator(x)))", "all x.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) & Jompus(x) & Impossible(x)))", "all x.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) & Jompus(x) & Impossible(x)))", "all x.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) | Jompus(x) | Imperator(x)))", "all x.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) & Jompus(x) & Imperator(x)))", "all x.((Stripe(x) | Twimpus(x) | Grimpus(x)) -> (Numpus(x) & Jompus(x) & Imperative(x)))", "all x.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) & Jompus(x) & Imperempt(x)))", "all x.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) & Jompus(x) & Issue(x)))", "all x.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) | Jompus(x) | Imperator(x)))", "all x.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (numpus(x) & jompus(x) & impus(x)))", "all x.((Blumpus(x) | Wumpus(x) | Grimpus(x)) -> (Number(x) & Jompus(x) & Impossible(x)))", "all x.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) & Jompus(x) & Imperative(x)))", "all x.((BrigusOrWumpusOrGrimpus(x)) -> (Nompus(x) & Jompus(x) & Impossible(x)))", "all x.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) & Jompus(x) & Issue(x)))", "all x.((Brimpus(x) | Wumpus(x) | Grimpus(x)) -> (Numpus(x) & Jompus(x) & Impermissible(x)))"]}
{"id": "prontoqa_train_1776", "nl": "Everything that is a zumpus or a jompus or a lempus is a sterpus and a gorpus and a wumpus.", "fol": "all x. ((zumpus(x) | jompus(x) | lempus(x)) -> (sterpus(x) & gorpus(x) & wumpus(x)))", "prediction": ["all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterpus(x) & Gorpus(x) & Wumpus(x)))", "all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Astropus(x) & Gorpus(x) & Wompus(x)))", "all x.((Zumpus(x) | Jompus(x) | Lempus(x)) -> (Sterpus(x) & Gorpus(x) & wumpus(x)))", "all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterpus(x) & Worpus(x) & Wumpus(x)))", "all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sternpus(x) & Gorpus(x & Wumpus(x)))", "all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterepus(x) & Gorpus(x) & Wumpus(x)))", "all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterepus(x) & Gorpus(x) & Wumpus(x)))", "all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterpus(x) & Gorpus(x) & Wumpus(x)))", "all x.((Zumpus(x) | Jompus(x) | Lempus(x)) -> (Sternpus(x) & Gorpus(x) & Humpus(x)))", "all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Stereopus(x) & Gorpus(x) & Wumpus(x)))", "all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterpus(x) & Gorpus(x) & Wumpus(x)))", "all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterepus(x) & Gorpus(x) & Wumpus(x)))", "all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterpus(x) & Worpus(x) & Wompus(x)))", "all x.((Zumpus(x) | Jompus(x) | Lempus(x)) -> (Sterepus(x) & Gorpus(x) & Wumpus(x)))", "all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterpus(x) & Gorpus(x) & Wumpus(x)))", "all x.((Tompus(x) | Jompus(x) | Lempus(x)) -> (Sterpus(x) & Gorpus(x) & Wumpus(x)))"]}
{"id": "prontoqa_train_1777", "nl": "Each shumpus is a gorpus and a lempus and a grimpus.", "fol": "all x. (shumpus(x) -> (gorpus(x) & lempus(x) & grimpus(x)))", "prediction": ["all x.(Shumpus(x) -> (Gorpus(x) | Lempus(x) | Grimpus(x)))", "all x.(Shumpus(x) -> (Gorpus(x) & Lempus(x) & Grimpus(x)))", "all x.(Shumpus(x) -> (Gorpus(x) & Lempus(x) & Grimpus(x)))", "(all x.(Shumpus(x) -> Gorpus(x)) & (Lempus(x) & Grimpus(x)))", "all x y z.((Shumpus(x) & Gorpus(y) & Lempus(z)) -> (HasGrimpus(x) & HasGrimpus(y)))", "all x.(Shumpus(x) -> (Gorpus(x) & Lempus(x) & Grimpus(x)))", "all x.(Shumpus(x) -> (Gorpus(x) & Lempus(x) & Grimpus(x)))", "all x.(Shumpus(x) -> (Gorpus(x) & Lempus(x) & Grupus(x)))", "all x y.((Shumpus(x) & Gorpus(y)) -> (Lempus(x) & Grimpus(x)))", "all x.(Shumpus(x) -> (Gorpus(x) | Lempus(x) | Grimpus(x)))", "exists x.(Shumpus(x) & Gorpus(x) & Lempus(x) & Grimpus(x))", "(all x.(Shumpus(x) -> Gorpus(x)) & all y.(Lempus(y) & All z.(Grimpus(z)))))", "all x.(Shumpus(x) -> (Gorpus(x) | Lempus(x) | Grimpus(x)))", "all x y.((Shumpus(x) & Gorpus(x) & Lempus(y) & Grimpus(y)) -> (HasShumpus(x) | HasShumpus(x)))", "all x.(Shumpus(x) -> (Gorpus(x) & Lempus(x) & Grimpus(x)))", "all x.(Shumpus(x) -> (Gorpus(x) & Lempus(x) & Grimpus(x)))"]}
{"id": "prontoqa_train_1778", "nl": "Fae is a sterpus and Fae is a zumpus and Fae is not a gorpus.", "fol": "(sterpus(Fae) & zumpus(Fae) & -gorpus(Fae))", "prediction": ["(all x.(Fae(x) -> Sterol(x)) & (Fae(x) -> Zumpus(x)) & -Fae(x)))", "all x y.((Fae(x) & Mercud(x)) -> (Sterpus(x) | Zumpus(x)) & -Gorpus(y)))", "(all x y.(Fae(x) -> Sterpus(x)) & (Fae(y) -> Zumpus(y)) & (Fae(y) -> -Gorpus(y)))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> -Gorpus(x)))", "(all x.(Friend(x) -> Sterpus(x)) & (Friend(x) -> Zumpus(x)) & (Friend(x) -> -Gorpus(x)))", "all x y.((Fae(x) & Sterpus(x)) -> (Tompus(x) & -Gorpus(y)))", "all x y.((Fae(x) & Sterpus(y)) -> (Sterpus(x) & Zumpus(y) & -Gorpus(z)))", "(all x y z.(Fae(x) -> Sterpus(x)) & (Fae(y) -> Zumpus(y)) & (Fae(z) -> -Gorpus(z))))", "all x y z.((Fae(x) & Sterpus(x)) -> (Alone(x) & In(x,y) & In(x,z) & In(x,z)))", "(all x.(Fae(x) -> Sterus(x)) & all y.(Fae(y) -> Zumpus(y)) & all z.(Fae(z) -> -Gorpus(z)))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Zumpus(x)) & (Fae(x) -> -Gorpus(x))))", "all x.(Fae(x) -> (Beverly(x) & Sterepus(x) & Zumpus(x) & -Gorpus(x)))", "all x y z.((Fae(x) & Sterpus(y) & Zumpus(z)) -> (Zerpus(x) & -Gorpus(x)))", "all x.(Fae(x) -> (Sterectus(x) & Zumpus(x) & -Gorpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Zumpus(x)) & -Gorpus(x)))", "(all x.(Fae(x) -> Sterpus(x)) & (Fae(x) -> Zumpus(x)) & -Gorpus(x)))"]}
{"id": "prontoqa_train_1779", "nl": "Everything that is an impus and a lempus and a wumpus is a numpus, a dumpus, and a zumpus.", "fol": "all x. ((impus(x) & lempus(x) & wumpus(x)) -> (numpus(x) & dumpus(x) & zumpus(x)))", "prediction": ["all x.((Impos(x) & Lempus(x) & Wumpus(x)) -> (Numerus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Impose(x) & Lempus(x) & Wumpus(x)) -> (Numpus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Imposer(x) & Lempus(x) & Wumpus(x)) -> (Numerus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Imposs(x) | Lempus(x) | Wumpus(x)) -> (Imposs(x) & Dumpus(x) & Zumpus(x)))", "all x.((Issue(x) & DoesLempus(x) & DoesWumpus(x)) -> (Dumpus(x) & HasTompus(x)))", "all x.((Impact(x) & Lempus(x) & Wumpus(x)) -> (Numpus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Impose(x) & Lempus(x) & Wumpus(x)) -> (Numpus(x) | Dumpus(x) | Zumpus(x)))", "all x.((Impose(x) & Lempus(x) & Wumpus(x)) -> (Number(x) & Dumpus(x) & Zumpus(x)))", "all x y.((Issue(x) & Lempus(y) & Wumpus(y)) -> (Numpus(x,y) & Dumpus(x,y) & Zumpus(x)))", "all x.((Imperfect(x) & Lempus(x) & Wumpus(x)) -> (Numpus(x) | Dumpus(x) | Zumpus(x)))", "all x.((Impose(x) & Lempus(x) & Wumpus(x)) -> (Numerus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Impos(x) & Lempus(x) & Wumpus(x)) -> (Numpus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Issue(x) & Impedence(x) & Lempus(x) & Wompus(x)) -> (Numbus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Issue(x) & IsLempus(x) & IsWumpus(x)) -> (Numpus(x) & Dumpus(x) & Zumpus(x)))", "all x.((Impose(x) & Lempus(x) & Wumpus(x)) -> (Numpus(x) & Dumpus(x) & Topsy(x)))", "all x.((Issue(x) & IsLempus(x) & IsWumpus(x)) -> (numpus(x) | dumpus(x) | zumpus(x)))"]}
{"id": "prontoqa_train_1780", "nl": "Polly is an impus.", "fol": "impus(Polly)", "prediction": ["(Illegal(Polly) & Polly(Polly))", "all x.(Polly(x) -> Is(x,9))", "all x.(Polly(x) -> IstImperial(x))", "All x.(Polly(x) -> IsImposition(x))", "(Impossible(poly) -> Polly(polly))", "exists x.(Poly(x) & Impilicator(x))", "all x.(Polly(x) -> IsNot(x))", "all x.(Poly(x) -> Is(x,y))", "Exists x.(Polly(x) & Impossible(x))", "all x.(Polly(x) -> IsShe(x))", "Polly ist IsDecret(Ploy)", "(IsPolly(polity) | IsPolly(poly,poly)))", "-Illegal(Polly)", "is Impecable(Polly)", "Shocking(Poly)", "(Imposer(Polly) -> Polly(Polly))"]}
{"id": "prontoqa_train_1781", "nl": "Every jompus is not an impus.", "fol": "all x. (jompus(x) -> -impus(x))", "prediction": ["all x.(Jompus(x) -> -Impossible(x))", "all x.(Jomess(x) -> -Idemployee(x))", "all x.(Jompus(x) -> -Impossible(x))", "all x.(Jompus(x) -> -Impossible(x))", "all x.(Jompus(x) -> -Impossible(x))", "all x.(Jompus(x) -> -Impossible(x))", "all x.(Jimpus(x) -> -Immersion(x))", "(all x.(Jompus(x) -> -Imposter(x)))", "all x.(Jompus(x) -> -Impossible(x))", "all x.(Jompus(x) -> -Impossed(x))", "-Idealized(jompus)", "all x.(Jompus(x) -> -Impossed(x))", "all x.(Jompus(x) -> -IsLimited(x))", "all x.(Jompus(x) -> -Impossible(x))", "all x.(Jompus(x) -> -Impossible(x))", "all x.(Jumpus(x) -> -Isotope(x))"]}
{"id": "prontoqa_train_1782", "nl": "Lorpuses are impuses.", "fol": "all x. (lorpus(x) -> impus(x))", "prediction": ["all x.(Lorpus(x) -> Issue(x))", "all x.(Lorpus(x) -> Issues(x))", "all x.(Lorpus(x) -> Issue(x))", "all x.(Lorpuse(x) -> Impises(x))", "all x.(Lorpus(x) -> Issue(x))", "all x.(Lorpus(x) -> Impied(x))", "all x.(Lorpus(x) -> Issue(x))", "all x.(Lorpuse(x) -> Issue(x))", "all x.(Lorpus(x) -> Issue(x))", "all x.(Lorpuse(x) -> Issue(x))", "all x.(Lorpus(x) -> Issue(x))", "all x.(Lorpus(x) -> Isolate(x))", "all x.(Lorpuse(x) -> Ispose(x))", "all x.(Lorpus(x) -> Issue(x))", "all x.(Lorpus(x) -> Issue(x))", "all x.(Lorpus(x) -> Issue(x))"]}
{"id": "prontoqa_train_1783", "nl": "Sam is a numpus or Sam is an impus or Sam is not a lorpus.", "fol": "(numpus(Sam) | impus(Sam) | -lorpus(Sam))", "prediction": ["(exists x.(Sam(x) & Nompus(x)) | exists y.(Impossible(y) & Is(y)))) (Under(x,y)))", "(Element(Sam) | (Impact(Sam) | Abstract(Sam))))", "(All x.(Sam(x) -> (Number(x) | Impossible(x)) | -Lorpus(x)))", "all x.((Sam(x) & (Numpus(x) | Hierarchy(x)) | -Lorpus(x))) -> Nox(x))", "all x.(Sam(x) -> ((Nompus(x) | Imperator(x)) | -Lorpus(x)))", "(numpus(Sam) | Impossible(Sam) | -Lorpus(Sam)))", "(all x.(Sam(x) -> Numpus(x)) | (Sam(x) -> Iliras(x)) | (Sam(x) -> -Lorpus(x))))", "(exists x.(Sam(x) & (Numpus(x) | Imperator(x) \u2022 -Lorpus(x)))", "all x.(Sam(x) -> (Numpus(x) | Impossible(x) | -Lorpus(x)))", "all x.(Sam(x) -> (Mammal(x) | Impossible(x) | -Lorpus(x)))", "all x.((Sam(x) -> (Numpus(x) | IsIllegal(x) | -Lorpus(x)))", "all x.(Sam(x) -> ((Numpus(x) | IsImpossible(x)) | -Lorpus(x)))", "all x.(Sam(x) -> (Number(x) | IsImpossible(x) | -Lorpus(x)))", "all x.(Sam(x) -> ((Numpus(x) | Impossible(x)) | -Lorpus(x)))", "((Sam(Sam) & Numpus(Sam)) | (Sam(Sam) & Izr\u00f3tz(Sam))) | (Sam(Sam) & -Lorpus(Sam))))", "all x.((Sam(x) & (Numpus(x) | IsIsRequired(x)) | -Lorpus(x)))"]}
{"id": "prontoqa_train_1784", "nl": "Yumpuses are lorpuses, vumpuses, and impuses.", "fol": "all x. (yumpus(x) -> (lorpus(x) & vumpus(x) & impus(x)))", "prediction": ["all x.(Yumpus(x) -> (Lorpus(x) | Vampuse(x) | Impossible(x)))", "all x.(Yumpus(x) -> (Lorpus(x) | Vampuse(x) | Impossible(x)))", "all x.(Yumpus(x) -> (Lorpus(x) | Vampus(x) | Impossible(x)))", "all x.(Yumpus(x) -> (Lorpus(x) | Vampus(x) | Impermissible(x)))", "all x.(Yumpus(x) -> (Lorpus(x) | Vampus(x) | Issue(x)))", "all x.(Yumpus(x) -> (Lorpes(x) | Vampuses(x) | Isolates(x)))", "all x.(Yumpsee(x) -> (Lorpus(x) & Voluptus(x) & Issue(x)))", "all x.(Yumpus(x) -> (Lorpus(x) | Vampuse(x) | Imperium(x)))", "all x.(Yumpus(x) -> (Road(y) & Loompus(y) & Vampus(y) & Imperium(x)))", "(all x.(Yumpuse(x) -> Lordpuse(x)) & all y.(Vumpus(y) -> Imperia(y))))", "all x.(Yumpus(x) -> (Lorpus(x) | Vumpus(x) | Impossible(x)))", "all x.(Yumpus(x) -> (Lorpus(x) | Vampuse(x) | Impectant(x)))", "all x.(Yumpuse(x) -> (Lorpus(x) | Vumpus(x) | Impermant(x)))", "all x.(Umpus(x) -> (Lorpus(x) | Vampuse(x) | Impossible(x)))", "all x.(Yumpus(x) -> (Lorpus(x) | Vampuse(x) | Issue(x)))", "all x.(Yumpus(x) -> (Lorpus(x) | Vampuse(x) | Impusete(x)))"]}
{"id": "prontoqa_train_1785", "nl": "Max is a jompus, a lorpus, or a vumpus.", "fol": "(jompus(Max) | lorpus(Max) | vumpus(Max))", "prediction": ["all x.(Max(x) -> (Jomes(x) | Lorpus(x) | Vumpus(x)))", "all x.(Max(x) -> (Jompus(x) | Lorpus(x) | Vuxpus(x)))", "all x.(Max(x) -> (Jomes(x) | Lorpus(x) | Vimpus(x)))", "(Jumpus(Max) | Lorpus(Max) | Vumpus(Max))", "all x.((Executive(x) & (Jompus(x) | Lorpus(x) | Vumpus(x))) -> Max(x))", "all x.(Max(x) -> (Jompus(x) | Lorpus(x) | Vumpus(x)))", "all x.(Max(x) -> (Jompus(x) | Lorpus(x) | Vubis(x)))", "all x.(Max(x) -> (Jumpus(x) | Lorpus(x) | Vumpus(x)))", "(Jompus(Max) | Lorpus(Max) | Vumpus(Max))", "all x.(Max(x) -> (Jompus(x) | Lorpus(x) | Vampire(x)))", "(Jimpus(Max) | Lorpus(Max) | Vumpus(Max))", "all x y.((Max(x) & Jompus(y)) | (Lorpus(y) | Voompus(v))))", "all x.(Max(x) -> (Jompus(x) | Lorpus(x) | Vumpus(x)))", "all x.(Max(x) -> (Jompus(x) | Lorpus(x) | Vumpus(x)))", "all x.(Max(x) -> (Jompus(x) | Lorpus(x) | Virtupus(x)))", "all x.(Max(x) -> (Jompus(x) | Lorpus(x) | Vuimpus(x)))"]}
{"id": "prontoqa_train_1786", "nl": "Everything that is a vumpus and a yumpus and a brimpus is a tumpus, a zumpus, and a shumpus.", "fol": "all x. ((vumpus(x) & yumpus(x) & brimpus(x)) -> (tumpus(x) & zumpus(x) & shumpus(x)))", "prediction": ["all x.(((Vumpus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) | Zumpus(x) | Shumpus(x)))", "all x.((Vumpus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) & Zumpus(x) & Humpus(x)))", "all x.(Vumpus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) | Zumpus(x) | Humpus(x)))", "all x.((Vumpus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) & Zumpus(x) & Shumpus(x)))", "((InvolvesVumpus(x) & InvolvesYumpus(x) & InvolvesBrimpus(x)) -> (Tumpus(x) | Zumpus(x) | Humpus(x)))", "all x.((Vumpus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) & Zumpus(x) & Humpus(x)))", "all x.((Vumpus(x) & Yampus(x) & Brimpus(x)) -> (Tumpus(x) & Zumpus(x) & Humpus(x)))", "all x.((Vumpus(x) & Yampus(x) & Brimpus(x)) -> (Tumpus(x) & Zumpus(x) & Simpus(x)))", "all x.((Vumpus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) | Zumpus(x) | Humpus(x)))", "all x.((Vumpus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) & Zumpus(x) & Humpus(x)))", "all x y.((Vumpus(x) & Yukpus(x) & Brimpus(x)) -> (Tumpus(y) & Zumpus(y) & Humpus(y)))", "all x.((Voompus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) & Zumpus(x) & Humpus(x)))", "all x.((Vumpus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) & Zumpus(x) & Humpus(x)))", "(all x.((Vumpus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) | Zumpus(x) | Humpus(x)))", "all x.((Vumpus(x) & Yumpus(x) & Brimpus(x)) -> (Tumpus(x) & Zumpus(x) & Humpus(x)))", "all x.((Vumpus(x) & Yumus(x) & Brimpus(x)) -> (Tumpus(x) & Zumpus(x) & Humpus(x)))"]}
{"id": "prontoqa_train_1787", "nl": "Every lempus is not a shumpus.", "fol": "all x. (lempus(x) -> -shumpus(x))", "prediction": ["all x.(Limpus(x) -> -Shumpus(x))", "ALL x.(Limpus(x) -> -Shumpus(x))", "all x.(Lempus(x) -> -Shumpus(x))", "all x.(Shumpus(x) -> -Lempus(x))", "all x.(Limpus(x) -> -Shumpus(x))", "not all x.(Lempus(x) -> -Shumpus(x))", "all x.(Lempus(x) -> -Shumpus(x))", "all x.(Lempus(x) -> -Shumpus(x))", "all x.(Lempus(x) -> -Shumpus(x))", "all x.(Lempus(x) -> -Shumpus(x))", "all x.(Lempus(x) -> -Shumpus(x))", "all x.(Lempus(x) -> -Shumpus(x))", "all x.(Lempus(x) -> -Shumpus(x))", "all x.(Lempus(x) -> -Shumpus(x))", "all x.(Lempus(x) -> -Shumpus(x))", "all x.(Lempus(x) -> -Shumpus(x))"]}
{"id": "prontoqa_train_1788", "nl": "Gorpuses are brimpuses, shumpuses, and sterpuses.", "fol": "all x. (gorpus(x) -> (brimpus(x) & shumpus(x) & sterpus(x)))", "prediction": ["all x.(Gorpuse(x) -> (Brompus(x) | Shumpus(x) | Sterus(x)))", "all x.(Gorpuse(x) -> (Brumpus(x) | Shumpus(x) | Sterpuse(x)))", "all x y.((Gorpuse(x) & Brimpuse(y)) -> (Shumpus(x) | Sterpuse(x)))", "all x.(Gorpuse(x) -> (Flutevus(x) | Shumpus(x) | Sterpuse(x)))", "all x.(Gorpuse(x) -> (Brimpuse(x) & -Shumpus(x) & -Sterpus(x)))", "all x.(Gorpuse(x) -> (Brimpus(x) | Humpus(x) | Spectorpus(x)))", "all x.(Gorpuse(x) -> (Brimpus(x) | Rumpus(x) | Sterpuse(x)))", "all x.(Gorpus(x) -> (Brimpus(x) | Scrumpus(x) | Sterpuse(x)))", "all x.(Gorpuse(x) -> (Bimpuse(x) | Shumpus(x) | Sterpuse(x)))", "all x.(Gorpuse(x) -> (Brimpus(x) | Shumpus(x) | Sterpus(x)))", "all x.(Gorpuse(x) -> (Bribuse(x) | Shumpus(x) | Sterpuse(x)))", "all x.(Gorpuse(x) -> (Brimpuse(x) | Shumpuse(x) | Sterpuse(x)))", "all x.(Gorpuse(x) -> (Bropuse(x) | Swumpuse(x) | Sterpuse(x)))", "all x.(Gorpuse(x) -> (Brimpus(x) | Shumpus(x) | Sterpus(x)))", "all x.(Gorpuse(x) -> (Brimpus(x) | Humpus(x) | Sterpus(x)))", "all x.(Gorpuse(x) -> (Brompus(x) | Shumpus(x) | Sterpus(x)))"]}
{"id": "prontoqa_train_1789", "nl": "Stella is a jompus and a zumpus and a lempus.", "fol": "(jompus(Stella) & zumpus(Stella) & lempus(Stella))", "prediction": ["(all x.(Stella(x) -> (Joompus(x) | Zumpus(x) | Lempus(x))))", "all x.((Stella(x) & Jompus(x) & Zumpus(x)) | Lempus(x))", "all x.(Piston(x) -> ((Jimpus(x) & Zumpus(x) & Lempus(x))))", "all x.(Stella(x) -> (Jimpus(x) & Zumpus(x) & Lempus(x)))", "(all x.(Stella(x) -> Jompus(x)) & (Tompus(x) | Lempus(x))))", "all x.(Stella(x) -> (Jompus(x) & Zumpus(x) & Lempus(x)))", "all x.(Stella(x) -> (Jompus(x) | Zumpus(x) | Lempus(x)))", "Stella is an igloo(i) & jompus(i) & zumpus(i) & lempus(i))", "all x.(Stella(x) -> (Jomes(x) & Zumpus(x) & Lampus(x)))", "all x.(Stella(x) -> (Jompus(x) & Zumpus(x) & Lempus(x)))", "exists x.(Stella(x) & Jompus(x) & Tompus(x) & Lempus(x))", "(A-Jompus(Stella) & A-Zombie(Stella) & A-Lempus(Stella))", "(Mosquito(Stella) & Mokonoma(Stella)) & zumpus(Stella) & lempus(Stella))", "exists x.(Stella(x) & Jompus(x) & Zumpus(x) & Lempus(x))", "(all x.(Stella(x) -> (InvolvesJompus(x) & IncludesTompus(x) & IncludesLempus(x)))", "all x.(Stella(x) -> (Jompus(x) & Zumpus(x) & Lempus(x)))"]}
{"id": "prontoqa_train_1790", "nl": "Each shumpus is not a numpus.", "fol": "all x. (shumpus(x) -> -numpus(x))", "prediction": ["all x.(Shumpus(x) -> -Nompus(x))", "all x.(Shumpus(x) -> -Numpus(x))", "all x.(Shumpus(x) -> -numpus(x))", "all x.(Shumpus(x) -> -Numpus(x))", "all x.(Shumpus(x) -> -Numpus(x))", "all x.(Shumpus(x) -> -numpus(x))", "all x.(Shumpus(x) -> -Numpus(x))", "all x.(Shumpus(x) -> -Numpus(x))", "all x.(Shumpus(x) -> -Numpus(x))", "all x.(Shumpus(x) -> -Numpus(x))", "all x.(Shumpus(x) -> -Numpus(x))", "all x.(Shumpus(x) -> -Numpus(x))", "all x.(Shumpus(x) -> -Numpus(x))", "all x.(Shumpus(x) -> -numpus(x))", "all x.(Shumpus(x) -> -numpus(x))", "all x.(Shumpus(x) -> -numpus(x))"]}
{"id": "prontoqa_train_1791", "nl": "Each dumpus is a numpus, a rompus, and a vumpus.", "fol": "all x. (dumpus(x) -> (numpus(x) & rompus(x) & vumpus(x)))", "prediction": ["(all x.(Dumpus(x) -> Numpus(x)) & all y.(Rompus(y) -> Vacus(y)))", "(all x.(Dumpus(x) -> Numpus(x)) & all y.(Rompus(y) & All z.(Umpus(z) & Vampus(z))))", "(all x.(Dumps(x) -> (Numpus(x) & Rompus(x) & Vumpus(x)))", "all x.(Dumpus(x) -> (Numpus(x) | Rompus(x) | Vampus(x)))", "all x.(Dumpus(x) -> (Numpus(x) | Rompus(x) | Vumpus(x)))", "all x.(Dumpus(x) -> (Numerus(x) & Rompus(x) & Vumbus(x)))", "(all x.(Dumpus(x) -> Nimbus(x)) & all y.(Rompus(y) | Voompus(y))))", "all x.(Dumpus(x) -> (Numpus(x) & Rompus(x) & Vumpus(x)))", "all x.(Dumpus(x) -> (Nompus(x) & Rompus(x) & Vumpus(x)))", "all x.(Dumpus(x) -> (numpus(x) | rompus(x) | vumpus(x)))", "all x.(Dumpus(x) -> (Numpus(x) | Rompus(x) | Vumpus(x)))", "all x.(Dumpus(x) -> (Numpus(x) & Rompus(x) & Vumpus(x)))", "(all x.(Dumpus(x) -> Numpus(x)) & (Rumpus(x) -> Vumpus(x)))", "all x.(Dumpus(x) -> (numpus(x) | rompus(x) | vumpus(x)))", "all x.(Dumpus(x) -> (Numpus(x) | Rompus(x) | Vumpus(x)))", "all x.(Dumpus(x) -> (Numpus(x) | Rompus(x) | Vumpus(x)))"]}
